{"version":3,"file":"CommonUtils-dbg-dbg.js","names":["sap","ui","define","CoreElement","___types_CommonTypes","ColorIndicator","isBinding","sPropertyValue","startsWith","endsWith","isActiveCalculation","value","activeCalculation","getColorForGroup","criticalityValue","staticValues","deviationLow","deviationRangeLowValue","deviationHigh","deviationRangeHighValue","toleranceLow","toleranceRangeLowValue","toleranceHigh","toleranceRangeHighValue","sImprovementDirection","improvementDirection","oCriticalityConfigValues","None","Negative","Critical","Positive","name","JSON","stringify","includes","checkForDateType","propertyType","supportedDateTypes","getCardGeneratorDialog","dialogId","getElementById","getDialogModel","modelName","dialog","getModel","hasBooleanBindingExpression","propertyValue","normalizedPath","replace","extractValueWithoutBooleanExprBinding","path","regex","match","exec","__exports","__esModule"],"sources":["CommonUtils.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nimport CoreElement from \"sap/ui/core/Element\";\nimport type JSONModel from \"sap/ui/model/json/JSONModel\";\nimport type ResourceModel from \"sap/ui/model/resource/ResourceModel\";\nimport { ColorIndicator, CriticalityValue } from \"../types/CommonTypes\";\n\n/**\n *\n * @param sPropertyValue\n * @returns true if the property value is a binding\n */\nexport function isBinding(sPropertyValue: string) {\n\treturn sPropertyValue && sPropertyValue.startsWith(\"{\") && sPropertyValue.endsWith(\"}\");\n}\n\n/**\n * To determine if the given value is a activation `CriticalityValue`.\n *\n * @param {CriticalityValue | string} value - The value to check.\n * @returns {value is CriticalityValue} True if the value is a `CriticalityValue`, false otherwise.\n */\nfunction isActiveCalculation(value: CriticalityValue | string): value is CriticalityValue {\n\treturn (value as CriticalityValue).activeCalculation === true;\n}\n\n/**\n * Retrieves the color representation for a given criticality value or string.\n *\n * @param {CriticalityValue | string} criticalityValue - The criticality value or string to evaluate.\n * @returns {string | undefined} The formatted string representing the color, or undefined if the input is not valid.\n */\nexport function getColorForGroup(criticalityValue: CriticalityValue | string): string | undefined {\n\tif (criticalityValue) {\n\t\tif (isActiveCalculation(criticalityValue)) {\n\t\t\tconst staticValues = {\n\t\t\t\tdeviationLow: criticalityValue.deviationRangeLowValue,\n\t\t\t\tdeviationHigh: criticalityValue.deviationRangeHighValue,\n\t\t\t\ttoleranceLow: criticalityValue.toleranceRangeLowValue,\n\t\t\t\ttoleranceHigh: criticalityValue.toleranceRangeHighValue,\n\t\t\t\tsImprovementDirection: criticalityValue.improvementDirection,\n\t\t\t\toCriticalityConfigValues: { None: \"None\", Negative: \"Error\", Critical: \"Warning\", Positive: \"Success\" }\n\t\t\t};\n\t\t\treturn \"{= extension.formatters.formatValueColor(${\" + criticalityValue.name + \"},\" + JSON.stringify(staticValues) + \") }\";\n\t\t} else if (criticalityValue.includes(\"extension.formatters.formatCriticality\")) {\n\t\t\treturn criticalityValue;\n\t\t} else if (isBinding(criticalityValue)) {\n\t\t\treturn \"{= extension.formatters.formatCriticality($\" + criticalityValue + \", 'state') }\";\n\t\t}\n\t\treturn ColorIndicator[criticalityValue as keyof typeof ColorIndicator];\n\t}\n}\n\n/**\n * Checks if the given property type is a supported date type.\n *\n * @param {string} [propertyType] - The property type to check.\n * @returns {boolean} - Returns true if the property type is a supported date type, otherwise false.\n */\nexport function checkForDateType(propertyType?: string): boolean {\n\tif (!propertyType) {\n\t\treturn false;\n\t}\n\n\tconst supportedDateTypes = [\"Edm.Date\", \"Edm.DateTimeOffset\", \"Edm.DateTime\"];\n\treturn supportedDateTypes.includes(propertyType);\n}\n\n/**\n * Retrieves the card generator dialog using the dialog ID.\n *\n * @returns The card generator dialog.\n */\nexport function getCardGeneratorDialog() {\n\tconst dialogId = \"cardGeneratorDialog--cardGeneratorDialog\";\n\treturn CoreElement.getElementById(dialogId);\n}\n\n/**\n * Retrieves the dialog model for the card generator UI / resources / previewOptions.\n *\n * @param modelName\n * @returns The model for the dialog.\n */\nexport function getDialogModel(modelName?: string) {\n\tconst dialog = getCardGeneratorDialog();\n\n\tif (modelName === \"i18n\") {\n\t\treturn dialog?.getModel(\"i18n\") as ResourceModel;\n\t}\n\n\treturn modelName ? (dialog?.getModel(modelName) as JSONModel) : (dialog?.getModel() as JSONModel);\n}\n\n/**\n * The function checks if the property value has a boolean binding expression\n *\n * @param propertyValue\n * @returns\n */\nexport function hasBooleanBindingExpression(propertyValue = \"\"): boolean {\n\tconst normalizedPath = propertyValue.replace(/\\s+/g, \"\");\n\treturn normalizedPath.includes(\"===true?\");\n}\n\n/**\n * Extracts the path inside a binding expression without the boolean expression.\n *\n * This function takes a string containing a binding expression in the format `{= ${property} === true ? {{Yes}} : {{No}}}`\n * and extracts the content inside the curly braces.\n *\n * @param path - The string containing the binding expression.\n * @returns The extracted path inside the binding expression, or \"\" if no match is found.\n */\nexport function extractValueWithoutBooleanExprBinding(path: string) {\n\tconst regex = /\\${([^}]+)}/; // Matches anything inside ${...} until the closing brace\n\tconst match = regex.exec(path);\n\treturn match?.[1] || \"\";\n}\n"],"mappings":"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","ignoreList":[]}