{"version":3,"file":"CardGeneratorModel-dbg-dbg.js","names":["sap","ui","define","sap_cards_ap_common_services_RetrieveCard","CoreLib","sap_ui_core_library","JSONModel","___helpers_Batch","___odata_ODataUtils","___pages_Application","___FooterActions","___Formatter","___IntegrationCardHelper","___NavigationProperty","_iteratorSymbol","Symbol","iterator","_settle","pact","state","value","s","_Pact","v","o","bind","then","observer","prototype","onFulfilled","onRejected","result","callback","e","_this","_isSettledPact","thenable","_forTo","array","body","check","i","reject","_cycle","length","getAdvancedFormattingOptions","unitOfMeasures","propertyValueFormatters","parsedManifest","path","formatterConfigsWithUnit","formatterConfigurationFromCardManifest","filter","formatterConfig","formatterName","mainIndicatorOptions","mainIndicatorCriticalityOptions","criticalityOptions","Promise","resolve","updateCriticalityForNavProperty","_updateCriticalityFor","_temp12","_getUpdatedUnitOfMeas","textArrangements","textArrangementsFromCardManifest","sourceCriticalityProperty","targetFormatterProperty","sourceUoMProperty","mainIndicatorStatusKey","selectedKeyCriticality","textArrangementSourceProperty","criticality","_temp11","getUpdatedUnitOfMeasures","_forOf","target","step","next","done","return","_fixup","TypeError","values","push","processParsedManifest","navigationProperty","mData","mCardManifest","_temp10","groups","group","_temp0","items","item","getNavigationPropertyInfoGroups","navigationPropertyInfoGroups","navigationEntitySet","navigationPropertyData","undefined","_temp1","textArrangement","getNavigationPropertyInfo","navigationPropInfo","navProperty","getKeyParameters","ValueState","createURLParams","createPathWithEntityContext","fetchDataAsync","getLabelForEntitySet","getNavigationPropertyInfoFromEntity","getPropertyInfoFromEntity","Application","ODataModelVersion","getCardActionInfo","formatPropertyDropdownValues","getDefaultPropertyFormatterConfig","getDefaultPropertyFormatterConfigForNavProperties","parseCard","getNavigationPropertiesWithLabel","updateNavigationPropertiesWithLabel","UnitCollection","Name","Value","_mergePropertyFormatters","defaultPropertyFormatters","userProvidedPropertyFormatters","mergedFormatters","propertyFormatter","find","formatter","property","getCardGeneratorDialogModel","appComponent","applicationInstance","getInstance","applicationDetails","fetchDetails","resourceBundle","getResourceBundleFor","sapApp","getManifestEntry","appModel","getModel","cardTitle","title","cardSubtitle","description","entitySetWithObjectContext","serviceUrl","semanticObject","action","odataModel","entitySetName","entitySet","bODataV4","V4","properties","propertiesWithNavigation","urlParameters","data","_temp9","addLabelsForProperties","parseManifestMainIndicatorOptions","trends","trendOptions","sideIndicators","sideIndicatorOptions","mainIndicatorNavigationSelectedKey","selectedNavigationalProperties","propertiesWithLabel","selectedNavigationPropertyHeader","name","mainIndicatorNavigationSelectedValue","getMainIndicatorSelectedNavigationProperty","advancedFormattingOptions","mainIndicatorStatusUnit","getMainIndicatorStatusUnit","_temp7","_temp6","getText","label","isEnabled","isNavigationEnabled","_temp5","navigationValue","_temp4","_criticality","_temp3","headerUOM","_temp2","subtitle","_temp","_getCardActionInfo","_getKeyParameters","dialogModelData","configuration","indicatorsValue","selectedTrendOptions","selectedIndicatorOptions","selectedContentNavigation","selectedHeaderNavigation","oDataV4","$data","targetUnit","deviationUnit","errorControls","actions","groupLimitReached","keyParameters","appIntent","isEdited","attachPropertyChange","getPropertyFormatters","_temp8","unitOfMeasuresMap","Map","map","uom","forEach","propertyName","propertyValue","propertyUOM","UOM","labelWithValue","has","propertyKeyForDescription","propertyKeyForId","valueState","None","valueStateText","category","propertyValueFormattersForNavigationalProperties","__exports","__esModule"],"sources":["CardGeneratorModel.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nimport type ResourceBundle from \"sap/base/i18n/ResourceBundle\";\nimport { getKeyParameters } from \"sap/cards/ap/common/services/RetrieveCard\";\nimport type Component from \"sap/ui/core/Component\";\nimport CoreLib from \"sap/ui/core/Lib\";\nimport { ValueState } from \"sap/ui/core/library\";\nimport type { CardManifest } from \"sap/ui/integration/widgets/Card\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\nimport type V2ODataModel from \"sap/ui/model/odata/v2/ODataModel\";\nimport type V4ODataModel from \"sap/ui/model/odata/v4/ODataModel\";\nimport type ResourceModel from \"sap/ui/model/resource/ResourceModel\";\nimport type { ArrangementOptions } from \"../app/controls/ArrangementsEditor\";\nimport { createURLParams } from \"../helpers/Batch\";\nimport { PropertyInfoMap } from \"../odata/ODataTypes\";\nimport {\n\tcreatePathWithEntityContext,\n\tfetchDataAsync,\n\tgetLabelForEntitySet,\n\tgetNavigationPropertyInfoFromEntity,\n\tgetPropertyInfoFromEntity\n} from \"../odata/ODataUtils\";\nimport { Application, ODataModelVersion } from \"../pages/Application\";\nimport { ActionStyles, AnnotationAction, ControlProperties } from \"../types/ActionTypes\";\nimport type { NavigationParameter, NavigationProperty, ObjectCardGroups, UnitOfMeasures } from \"../types/PropertyTypes\";\nimport { getCardActionInfo } from \"./FooterActions\";\nimport {\n\tFormatterConfigurationMap,\n\tformatPropertyDropdownValues,\n\tgetDefaultPropertyFormatterConfig,\n\tgetDefaultPropertyFormatterConfigForNavProperties\n} from \"./Formatter\";\nimport {\n\tgetUpdatedUnitOfMeasures,\n\tparseCard,\n\tupdateCriticalityForNavProperty,\n\ttype CriticalityOptionsPanel,\n\ttype ParsedManifest\n} from \"./IntegrationCardHelper\";\nimport {\n\tgetNavigationPropertiesWithLabel,\n\tgetNavigationPropertyInfo,\n\tgetNavigationPropertyInfoGroups,\n\tupdateNavigationPropertiesWithLabel\n} from \"./NavigationProperty\";\n\nexport type EntityType = {\n\t[key: string]: any;\n};\n\nexport type CriticalityOptions = {\n\tactiveCalculation: boolean;\n\tname: string;\n\tcriticality: string;\n\tnavigationKeyForId?: string;\n\tnavigationKeyForDescription?: string;\n\tnavigationProperty?: string;\n\tisNavigationForDescription?: boolean;\n\tisNavigationForId?: boolean;\n\tpropertyKeyForId?: string;\n\tnavigationalPropertiesForId?: Array<object>;\n};\n\nexport type MainIndicatorOptions = {\n\tcriticality: Array<CriticalityOptions>;\n};\n\ntype AdvancedFormattingOptions = {\n\tunitOfMeasures: Array<UnitOfMeasures>;\n\ttextArrangements: Array<ArrangementOptions>;\n\tpropertyValueFormatters: Array<object>;\n\tsourceCriticalityProperty: Array<object>;\n\ttargetFormatterProperty: string;\n\tsourceUoMProperty: string;\n\tselectedKeyCriticality: string;\n\ttextArrangementSourceProperty: string;\n};\n\nexport type TrendOptions = {\n\treferenceValue: string;\n\tdownDifference: string;\n\tupDifference: string;\n\ttargetValue?: string;\n\tsourceProperty?: string;\n};\nexport type SideIndicatorOptions = {\n\ttargetValue: string;\n\ttargetUnit: string;\n\tdeviationValue: string;\n\tdeviationUnit: string;\n\tsourceProperty?: string;\n};\n\ntype CardActions = {\n\tannotationActions: Array<AnnotationAction>;\n\taddedActions: ControlProperties[];\n\tbODataV4: boolean;\n\tstyles: ActionStyles[];\n\tisAddActionEnabled: boolean;\n\tactionExists: boolean;\n};\n\ntype PropertyValue = string | null | undefined;\n\nexport type TrendOrIndicatorOptions = {\n\tsourceProperty: string;\n};\n\ntype KeyParameter = {\n\tkey: string;\n\tformattedValue: string;\n};\n\n/**\n * Description for the interface CardGeneratorDialogConfiguration\n * @interface CardGeneratorDialogConfiguration\n * @property {string} title The title of the card\n * @property {string} subtitle The subtitle of the card\n * @property {string} headerUOM The header unit of measure\n * @property {MainIndicatorOptions} mainIndicatorOptions The main indicator options\n * @property {string} mainIndicatorStatusKey The main indicator status key\n * @property {string} navigationValue The navigation value\n * @property {string} mainIndicatorStatusUnit The main indicator status unit\n * @property {NavigationProperty[]} selectedNavigationalProperties The selected navigational properties\n * @property {string} mainIndicatorNavigationSelectedValue The main indicator navigation selected value\n * @property {string} mainIndicatorNavigationSelectedKey The main indicator navigation selected key\n * @property {string} entitySet The entity set\n * @property {PropertyInfoMap} propertiesWithNavigation The properties with navigation\n * @property {Array<ObjectCardGroups>} groups The groups of the card displayed on content\n * @property {Array<object>} properties The properties\n * @property {AdvancedFormattingOptions} advancedFormattingOptions The advanced formatting options\n * @property {Array<object>} selectedTrendOptions The selected trend options\n * @property {Array<object>} selectedIndicatorOptions The selected indicator options\n * @property {Array<object>} navigationProperty The navigation property\n * @property {Array<NavigationParameter>} selectedContentNavigation The selected content navigation\n * @property {Array<NavigationParameter>} selectedHeaderNavigation The selected header navigation\n * @property {NavigationProperty} selectedNavigationPropertyHeader The selected navigation property header\n * @property {TrendOptions} trendOptions The trend options\n * @property {SideIndicatorOptions} indicatorsValue The indicators value\n * @property {boolean} oDataV4 Flag to check if the OData version is V4\n * @property {string} serviceUrl The service URL\n * @property {object} $data Data used for adaptive card preview\n * @property {object} targetUnit The target unit\n * @property {object} deviationUnit The deviation unit\n * @property {Array<object>} errorControls The error controls\n * @property {CardActions} actions The card actions\n * @property {boolean} groupLimitReached Flag maintained to check if the group limit is reached\n * @property {Array<KeyParameter>} keyParameters The key parameters\n * @property {string} appIntent The app intent\n */\ninterface CardGeneratorDialogConfiguration {\n\ttitle: string;\n\tsubtitle?: string;\n\theaderUOM?: string;\n\tmainIndicatorOptions?: MainIndicatorOptions;\n\tmainIndicatorStatusKey?: string;\n\tnavigationValue: string;\n\tmainIndicatorStatusUnit?: string;\n\tselectedNavigationalProperties: NavigationProperty[];\n\tmainIndicatorNavigationSelectedValue?: string;\n\tmainIndicatorNavigationSelectedKey?: string;\n\tentitySet: string;\n\tpropertiesWithNavigation: PropertyInfoMap;\n\tgroups: Array<ObjectCardGroups>;\n\tproperties: Array<object>;\n\tadvancedFormattingOptions: AdvancedFormattingOptions;\n\tselectedTrendOptions: Array<TrendOptions>;\n\tselectedIndicatorOptions: Array<SideIndicatorOptions>;\n\tnavigationProperty: Array<object>;\n\tselectedContentNavigation: Array<NavigationParameter>;\n\tselectedHeaderNavigation: Array<NavigationParameter>;\n\tselectedNavigationPropertyHeader: NavigationProperty;\n\ttrendOptions: TrendOptions;\n\tindicatorsValue?: SideIndicatorOptions;\n\toDataV4: boolean;\n\tserviceUrl: string;\n\t$data?: object;\n\ttargetUnit?: object;\n\tdeviationUnit?: object;\n\terrorControls: Array<object>;\n\tactions: CardActions;\n\tgroupLimitReached: boolean;\n\tkeyParameters: Array<KeyParameter>;\n\tappIntent: string;\n\tisEdited?: boolean;\n}\n\ninterface CardGeneratorDialog {\n\ttitle: string;\n\tconfiguration: CardGeneratorDialogConfiguration;\n}\n\nconst UnitCollection = [\n\t{\n\t\tName: \"K\",\n\t\tValue: \"K\"\n\t},\n\t{\n\t\tName: \"%\",\n\t\tValue: \"%\"\n\t}\n];\n\n/**\n * Merges the default property formatters with the user provided property formatters\n *\n * @param {FormatterConfigurationMap} defaultPropertyFormatters The default property formatters\n * @param {FormatterConfigurationMap} userProvidedPropertyFormatters The user provided property formatters\n * @returns {FormatterConfigurationMap} The merged property formatters\n * @private\n *\n */\nexport function _mergePropertyFormatters(\n\tdefaultPropertyFormatters: FormatterConfigurationMap = [],\n\tuserProvidedPropertyFormatters: FormatterConfigurationMap = []\n): FormatterConfigurationMap {\n\tconst mergedFormatters = [...userProvidedPropertyFormatters] as FormatterConfigurationMap;\n\n\tfor (const propertyFormatter of defaultPropertyFormatters) {\n\t\tif (!mergedFormatters.find((formatter) => formatter.property === propertyFormatter.property)) {\n\t\t\tmergedFormatters.push({ ...propertyFormatter });\n\t\t}\n\t}\n\n\treturn mergedFormatters;\n}\n\n/**\n * Generates the card generator dialog model.\n *\n * @param {Component} appComponent - The root component of the application.\n * @param {CardManifest} [mCardManifest] - The card manifest object (optional).\n * @returns {Promise<JSONModel>} A promise that resolves to the card generator dialog model.\n */\nexport const getCardGeneratorDialogModel = async (appComponent: Component, mCardManifest?: CardManifest) => {\n\tconst applicationInstance = Application.getInstance();\n\tconst applicationDetails = applicationInstance.fetchDetails();\n\tconst resourceBundle = CoreLib.getResourceBundleFor(\"sap.cards.ap.generator.i18n\");\n\tconst sapApp = appComponent.getManifestEntry(\"sap.app\");\n\tconst appModel = appComponent.getModel();\n\tconst cardTitle = sapApp.title;\n\tconst cardSubtitle = sapApp.description;\n\tconst { entitySetWithObjectContext, serviceUrl, semanticObject, action, odataModel } = applicationDetails;\n\tconst entitySetName = applicationDetails.entitySet;\n\tconst bODataV4 = odataModel === ODataModelVersion.V4;\n\tconst entitySet = getLabelForEntitySet(bODataV4 ? (appModel as V4ODataModel) : (appModel as V2ODataModel), entitySetName);\n\tconst properties = getPropertyInfoFromEntity(bODataV4 ? (appModel as V4ODataModel) : (appModel as V2ODataModel), entitySetName, false);\n\tconst propertiesWithNavigation = getPropertyInfoFromEntity(\n\t\tbODataV4 ? (appModel as V4ODataModel) : (appModel as V2ODataModel),\n\t\tentitySetName,\n\t\ttrue,\n\t\tresourceBundle\n\t);\n\tconst navigationProperty = getNavigationPropertyInfoFromEntity(\n\t\tbODataV4 ? (appModel as V4ODataModel) : (appModel as V2ODataModel),\n\t\tentitySetName\n\t);\n\n\tconst urlParameters = createURLParams(properties);\n\n\tconst path = await createPathWithEntityContext(\n\t\tentitySetWithObjectContext,\n\t\tbODataV4 ? (appModel as V4ODataModel) : (appModel as V2ODataModel),\n\t\tbODataV4\n\t);\n\tconst data = await fetchDataAsync(serviceUrl, path, bODataV4, urlParameters);\n\tconst unitOfMeasures: Array<UnitOfMeasures> = [];\n\tconst mData: Record<string, PropertyValue> = {};\n\t// We are adding labels and values for properties\n\taddLabelsForProperties(properties, data, mData, unitOfMeasures);\n\n\tlet propertyValueFormatters = getPropertyFormatters(resourceBundle, properties, navigationProperty);\n\n\tlet parsedManifest;\n\n\tif (mCardManifest) {\n\t\tparsedManifest = parseCard(mCardManifest, appComponent.getModel(\"i18n\") as ResourceModel, properties);\n\t\tawait processParsedManifest(parsedManifest, navigationProperty, path, mData, mCardManifest);\n\t}\n\n\tpropertyValueFormatters = _mergePropertyFormatters(propertyValueFormatters, parsedManifest?.formatterConfigurationFromCardManifest);\n\taddLabelsForProperties(propertiesWithNavigation, data, mData, unitOfMeasures);\n\n\tconst parseManifestMainIndicatorOptions = parsedManifest?.mainIndicatorOptions;\n\tconst mainIndicatorStatusKey = parseManifestMainIndicatorOptions?.mainIndicatorStatusKey || \"\";\n\tconst trends = parseManifestMainIndicatorOptions?.trendOptions;\n\tconst sideIndicators = parsedManifest?.sideIndicatorOptions;\n\tconst mainIndicatorNavigationSelectedKey = parseManifestMainIndicatorOptions?.mainIndicatorNavigationSelectedKey || \"\";\n\tconst selectedNavigationalProperties = [];\n\tconst { propertiesWithLabel, navigationPropertyData } = await getNavigationPropertiesWithLabel(\n\t\tappComponent,\n\t\tmainIndicatorStatusKey,\n\t\tpath\n\t);\n\tconst selectedNavigationPropertyHeader = {\n\t\tname: mainIndicatorStatusKey,\n\t\tvalue: propertiesWithLabel\n\t};\n\n\tif (selectedNavigationPropertyHeader?.value) {\n\t\tupdateNavigationPropertiesWithLabel(navigationProperty, mainIndicatorStatusKey, selectedNavigationPropertyHeader.value);\n\t}\n\n\tif (mainIndicatorStatusKey.length > 0 && (mData[mainIndicatorStatusKey] === null || mData[mainIndicatorStatusKey] === undefined)) {\n\t\tmData[mainIndicatorStatusKey] = navigationPropertyData[mainIndicatorStatusKey];\n\t}\n\n\tif (selectedNavigationPropertyHeader.name) {\n\t\tselectedNavigationalProperties.push(selectedNavigationPropertyHeader);\n\t}\n\n\tconst mainIndicatorNavigationSelectedValue = getMainIndicatorSelectedNavigationProperty(\n\t\tselectedNavigationPropertyHeader,\n\t\tmainIndicatorNavigationSelectedKey\n\t);\n\tconst advancedFormattingOptions = await getAdvancedFormattingOptions(unitOfMeasures, propertyValueFormatters, parsedManifest, path);\n\tconst mainIndicatorStatusUnit = getMainIndicatorStatusUnit(mainIndicatorStatusKey, propertiesWithNavigation);\n\tconst dialogModelData: CardGeneratorDialog = {\n\t\ttitle: `${entitySet}`,\n\t\tconfiguration: {\n\t\t\ttitle: parsedManifest?.title || cardTitle,\n\t\t\tsubtitle: parsedManifest?.subtitle || cardSubtitle,\n\t\t\theaderUOM: parsedManifest?.headerUOM || \"\",\n\t\t\tmainIndicatorOptions: {\n\t\t\t\tcriticality: (parseManifestMainIndicatorOptions?.criticalityOptions || []) as CriticalityOptions[]\n\t\t\t},\n\t\t\tadvancedFormattingOptions: advancedFormattingOptions,\n\t\t\ttrendOptions: trends as TrendOptions,\n\t\t\tindicatorsValue: sideIndicators,\n\t\t\tselectedTrendOptions: trends ? [trends] : [],\n\t\t\tselectedIndicatorOptions: sideIndicators ? [sideIndicators] : [],\n\t\t\tselectedNavigationPropertyHeader,\n\t\t\tselectedContentNavigation: [],\n\t\t\tselectedHeaderNavigation: [],\n\t\t\tnavigationProperty,\n\t\t\tmainIndicatorNavigationSelectedValue,\n\t\t\tmainIndicatorStatusKey,\n\t\t\tnavigationValue: parseManifestMainIndicatorOptions?.navigationValue || \"\",\n\t\t\tmainIndicatorNavigationSelectedKey,\n\t\t\tmainIndicatorStatusUnit,\n\t\t\tselectedNavigationalProperties,\n\t\t\tentitySet: entitySetName,\n\t\t\toDataV4: bODataV4,\n\t\t\tserviceUrl: serviceUrl,\n\t\t\tproperties: properties,\n\t\t\tpropertiesWithNavigation: propertiesWithNavigation,\n\t\t\tgroups: (parsedManifest?.groups as ObjectCardGroups[]) || [\n\t\t\t\t{\n\t\t\t\t\ttitle: resourceBundle?.getText(\"GENERATOR_DEFAULT_GROUP_NAME\", [1]),\n\t\t\t\t\titems: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: \"\",\n\t\t\t\t\t\t\tvalue: \"\",\n\t\t\t\t\t\t\tisEnabled: false,\n\t\t\t\t\t\t\tname: \"\",\n\t\t\t\t\t\t\tnavigationProperty: \"\",\n\t\t\t\t\t\t\tisNavigationEnabled: false\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t],\n\t\t\t$data: mData,\n\t\t\ttargetUnit: UnitCollection,\n\t\t\tdeviationUnit: UnitCollection,\n\t\t\terrorControls: [],\n\t\t\tactions: await getCardActionInfo(mData, appComponent.getModel(\"i18n\") as ResourceModel, mCardManifest),\n\t\t\tgroupLimitReached: false,\n\t\t\tkeyParameters: await getKeyParameters(appComponent),\n\t\t\tappIntent: `${semanticObject}-${action}`,\n\t\t\tisEdited: false\n\t\t}\n\t};\n\n\treturn new JSONModel(dialogModelData).attachPropertyChange(function () {\n\t\tdialogModelData.configuration.isEdited = true;\n\t});\n};\n\n/**\n * Adds labels for properties and updates the unit of measures array.\n *\n * @param {PropertyInfoMap} properties - The map of properties to be updated with labels.\n * @param {Record<string, unknown>} data - The data record containing property values.\n * @param {Record<string, PropertyValue>} mData - The map to store updated property values.\n * @param {Array<object>} unitOfMeasures - The array of unit of measures to be updated.\n */\nexport function addLabelsForProperties(\n\tproperties: PropertyInfoMap,\n\tdata: Record<string, unknown>,\n\tmData: {\n\t\t[key: string]: PropertyValue;\n\t},\n\tunitOfMeasures: Array<object>\n) {\n\tconst unitOfMeasuresMap = new Map((unitOfMeasures as UnitOfMeasures[]).map((uom) => [uom.name, uom]));\n\n\tproperties.forEach((property) => {\n\t\tconst propertyName = property.name;\n\t\tconst propertyValue = data[propertyName];\n\t\tconst propertyUOM = property.UOM;\n\n\t\tif (propertyName && propertyValue !== undefined && propertyValue !== null) {\n\t\t\tconst value = formatPropertyDropdownValues(property, propertyValue as string);\n\t\t\tproperty.value = propertyValue as string;\n\t\t\tproperty.labelWithValue = value;\n\n\t\t\tif (propertyUOM && !unitOfMeasuresMap.has(propertyName)) {\n\t\t\t\tunitOfMeasures.push({\n\t\t\t\t\tpropertyKeyForDescription: propertyUOM,\n\t\t\t\t\tname: propertyName,\n\t\t\t\t\tpropertyKeyForId: propertyName,\n\t\t\t\t\tvalue: propertyUOM,\n\t\t\t\t\tvalueState: ValueState.None,\n\t\t\t\t\tvalueStateText: \"\"\n\t\t\t\t});\n\t\t\t}\n\t\t\tmData[propertyName] = propertyValue as string;\n\t\t} else {\n\t\t\tproperty.labelWithValue = property.category ? `${property.label}` : `${property.label} (<empty>)`;\n\t\t}\n\t});\n}\n\n/**\n * Gets the property formatters for the card generator dialog.\n * The property formatters are merged from the default property formatters and the navigational property formatters.\n *\n * @param {ResourceBundle} resourceBundle The resource bundle\n * @param {PropertyInfoMap} properties The properties\n * @param {NavigationParameter} navigationProperty The navigation property\n * @returns\n */\nfunction getPropertyFormatters(resourceBundle: ResourceBundle, properties: PropertyInfoMap, navigationProperty: NavigationParameter[]) {\n\tconst propertyValueFormatters = getDefaultPropertyFormatterConfig(resourceBundle, properties);\n\tconst propertyValueFormattersForNavigationalProperties = getDefaultPropertyFormatterConfigForNavProperties(\n\t\tresourceBundle,\n\t\tnavigationProperty as unknown as PropertyInfoMap\n\t);\n\treturn _mergePropertyFormatters(propertyValueFormatters, propertyValueFormattersForNavigationalProperties);\n}\n\n/**\n *\n * Process the parsed manifest to get the navigation property information.\n *\n * @param {ParsedManifest} parsedManifest The parsed card manifest\n * @param {NavigationParameter} navigationProperty\n * @param {string} path\n * @param {Record<string, PropertyValue>} mData\n * @param {CardManifest} mCardManifest\n */\nasync function processParsedManifest(\n\tparsedManifest: ParsedManifest,\n\tnavigationProperty: NavigationParameter[],\n\tpath: string,\n\tmData: Record<string, PropertyValue>,\n\tmCardManifest: CardManifest\n) {\n\tfor (const textArrangement of parsedManifest.textArrangementsFromCardManifest) {\n\t\tconst navigationPropInfo = await getNavigationPropertyInfo(textArrangement, navigationProperty, path);\n\n\t\tif (navigationPropInfo) {\n\t\t\tfor (const navProperty of navigationPropInfo) {\n\t\t\t\tconst { navigationEntitySet, navigationPropertyData } = navProperty;\n\t\t\t\tif (mData[navigationEntitySet] === null || mData[navigationEntitySet] === undefined) {\n\t\t\t\t\tmData[navigationEntitySet] = navigationPropertyData[navigationEntitySet];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfor (const group of parsedManifest.groups) {\n\t\tfor (const item of (group as ObjectCardGroups).items) {\n\t\t\tconst navigationPropertyInfoGroups = await getNavigationPropertyInfoGroups(item, navigationProperty, path, mCardManifest);\n\n\t\t\tif (navigationPropertyInfoGroups) {\n\t\t\t\tconst { navigationEntitySet, navigationPropertyData } = navigationPropertyInfoGroups;\n\t\t\t\tif (mData[navigationEntitySet] === null || mData[navigationEntitySet] === undefined) {\n\t\t\t\t\tmData[navigationEntitySet] = navigationPropertyData[navigationEntitySet];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Retrieves the advanced formatting options for the card generator.\n *\n * @param {UnitOfMeasures[]} unitOfMeasures - The array of unit of measures.\n * @param {FormatterConfigurationMap} propertyValueFormatters - The map of property value formatters.\n * @param {ParsedManifest} [parsedManifest] - The parsed manifest object (optional).\n * @returns {Promise<AdvancedFormattingOptions>} A promise that resolves to the advanced formatting options.\n */\nasync function getAdvancedFormattingOptions(\n\tunitOfMeasures: UnitOfMeasures[],\n\tpropertyValueFormatters: FormatterConfigurationMap,\n\tparsedManifest?: ParsedManifest,\n\tpath: string = \"\"\n): Promise<AdvancedFormattingOptions> {\n\tconst formatterConfigsWithUnit =\n\t\tparsedManifest?.formatterConfigurationFromCardManifest.filter(\n\t\t\t(formatterConfig) => formatterConfig.formatterName === \"format.unit\"\n\t\t) || [];\n\tconst mainIndicatorOptions = parsedManifest?.mainIndicatorOptions;\n\tlet mainIndicatorCriticalityOptions = (mainIndicatorOptions?.criticalityOptions || []) as CriticalityOptionsPanel;\n\tmainIndicatorCriticalityOptions = await updateCriticalityForNavProperty(mainIndicatorCriticalityOptions, path);\n\tconst selectedKeyCriticality = mainIndicatorCriticalityOptions.length ? mainIndicatorCriticalityOptions[0]?.criticality : \"\";\n\tconst mainIndicatorStatusKey = mainIndicatorOptions?.mainIndicatorStatusKey || \"\";\n\treturn {\n\t\tunitOfMeasures:\n\t\t\tformatterConfigsWithUnit.length > 0\n\t\t\t\t? await getUpdatedUnitOfMeasures(unitOfMeasures, formatterConfigsWithUnit, path)\n\t\t\t\t: unitOfMeasures,\n\t\ttextArrangements: parsedManifest?.textArrangementsFromCardManifest || [],\n\t\tpropertyValueFormatters: propertyValueFormatters,\n\t\tsourceCriticalityProperty: [],\n\t\ttargetFormatterProperty: \"\",\n\t\tsourceUoMProperty: mainIndicatorStatusKey,\n\t\tselectedKeyCriticality: selectedKeyCriticality,\n\t\ttextArrangementSourceProperty: mainIndicatorStatusKey\n\t};\n}\n\n/**\n * Retrieves the label with value for the main indicator's selected navigation property.\n *\n *\n * @param {Record<string, any>} selectedNavigationPropertyHeader - The selected navigation property header containing the properties.\n * @param {string} mainIndicatorNavigationSelectedKey - The key of the main indicator's selected navigation property.\n * @returns {string} The label with value of the selected navigation property, or an empty string if not found.\n */\nfunction getMainIndicatorSelectedNavigationProperty(\n\tselectedNavigationPropertyHeader: Record<string, any>,\n\tmainIndicatorNavigationSelectedKey: string\n): string {\n\treturn (\n\t\tselectedNavigationPropertyHeader.value.find(\n\t\t\t(value: { name: string; labelWithValue: string }) => value.name === mainIndicatorNavigationSelectedKey\n\t\t)?.labelWithValue || \"\"\n\t);\n}\n\n/**\n * Retrieves the label with value for the main indicator's status unit.\n *\n * @param {string} mainIndicatorStatusKey - The key of the main indicator's status property.\n * @param {PropertyInfoMap} propertiesWithNavigation - The map of properties with navigation.\n * @returns {string} The label with value of the main indicator's status unit, or an empty string if not found.\n */\nfunction getMainIndicatorStatusUnit(mainIndicatorStatusKey: string, propertiesWithNavigation: PropertyInfoMap): string {\n\treturn (\n\t\t(mainIndicatorStatusKey && propertiesWithNavigation.find((property) => property.name === mainIndicatorStatusKey)?.labelWithValue) ||\n\t\t\"\"\n\t);\n}\n"],"mappings":"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","ignoreList":[]}