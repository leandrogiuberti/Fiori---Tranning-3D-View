{"version":3,"file":"Batch.js","names":["sap","ui","define","___pages_Application","___utils_IntegrationCardManifestParser","Application","ODataModelVersion","getContentProperties","getHeaderProperties","updateManifestWithSelectQueryParams","cardManifest","headerSelectProperties","headerSelect","createUrlParameters","$select","headerSelectQuery","contentSelectProperties","contentSelect","contentSelectQuery","configParameters","configuration","parameters","_headerSelectQuery","value","_contentSelectQuery","updateManifestWithExpandQueryParams","headerProperties","headerExpand","$expand","headerExpandQuery","contentProperties","contentExpand","contentExpandQuery","_headerExpandQuery","_contentExpandQuery","queryParameters","odataModel","getInstance","fetchDetails","selectQuery","properties","join","expandQuery","V4","navigationProperties","forEach","navProp","selectQueryForNavigationProperty","length","name","V2","map","property","createURLParams","selectProperties","urlParameters","__exports","__esModule"],"sources":["Batch.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nimport type { CardManifest } from \"sap/ui/integration/widgets/Card\";\nimport type { PropertyInfo, PropertyInfoMap } from \"../odata/ODataTypes\";\nimport { Application, ODataModelVersion } from \"../pages/Application\";\nimport type { Property } from \"../types/PropertyTypes\";\nimport { getContentProperties, getHeaderProperties } from \"../utils/IntegrationCardManifestParser\";\n\nexport type QueryParameters = {\n\tproperties: string[];\n\tnavigationProperties: {\n\t\tname: string;\n\t\tproperties: string[];\n\t}[];\n};\n\nexport type RequestQueryNavigationProperties = {\n\tname: string;\n\tproperties: Property[];\n};\n\nexport type RequestQueryComplexProperties = {\n\tname: string;\n\tproperties: Property[];\n};\n\nexport type RequestQueryParametersV4 = {\n\tproperties: PropertyInfo[];\n\tnavigationProperties: RequestQueryNavigationProperties[];\n\tcomplexProperties: RequestQueryComplexProperties[];\n};\nexport type RequestQueryParametersV2 = {\n\tproperties: Property[];\n\tnavigationProperties: RequestQueryNavigationProperties[];\n\tcomplexProperties: RequestQueryComplexProperties[];\n};\n\n/**\n * Updates the card manifest with select query parameters for header and content properties.\n *\n * @param {CardManifest} cardManifest - The card manifest object to be updated.\n */\nexport function updateManifestWithSelectQueryParams(cardManifest: CardManifest) {\n\tconst headerSelectProperties = getHeaderProperties(cardManifest);\n\tconst headerSelect = createUrlParameters(headerSelectProperties).$select;\n\tconst headerSelectQuery = headerSelect && `$select=${headerSelect}`;\n\tconst contentSelectProperties = getContentProperties(cardManifest);\n\tconst contentSelect = createUrlParameters(contentSelectProperties).$select;\n\tconst contentSelectQuery = contentSelect && `$select=${contentSelect}`;\n\tconst configParameters = cardManifest[\"sap.card\"].configuration?.parameters;\n\n\tif (!configParameters && cardManifest[\"sap.card\"].configuration) {\n\t\tcardManifest[\"sap.card\"].configuration.parameters = {\n\t\t\t_headerSelectQuery: {\n\t\t\t\tvalue: headerSelectQuery\n\t\t\t},\n\t\t\t_contentSelectQuery: {\n\t\t\t\tvalue: contentSelectQuery\n\t\t\t}\n\t\t};\n\t\treturn;\n\t}\n\n\tif (headerSelectQuery && configParameters) {\n\t\tconfigParameters._headerSelectQuery = {\n\t\t\tvalue: headerSelectQuery\n\t\t};\n\t}\n\tif (contentSelectQuery && configParameters) {\n\t\tconfigParameters._contentSelectQuery = {\n\t\t\tvalue: contentSelectQuery\n\t\t};\n\t}\n}\n\n/**\n * Updates the card manifest with expand query parameters for header and content properties.\n *\n * @param {CardManifest} cardManifest - The card manifest object to be updated.\n */\nexport function updateManifestWithExpandQueryParams(cardManifest: CardManifest) {\n\tconst headerProperties = getHeaderProperties(cardManifest);\n\tconst headerExpand = createUrlParameters(headerProperties).$expand;\n\tconst headerExpandQuery = headerExpand && `&$expand=${headerExpand}`;\n\tconst contentProperties = getContentProperties(cardManifest);\n\tconst contentExpand = createUrlParameters(contentProperties).$expand;\n\tconst contentExpandQuery = contentExpand && `&$expand=${contentExpand}`;\n\tconst configParameters = cardManifest[\"sap.card\"].configuration?.parameters;\n\n\tif (!configParameters && cardManifest[\"sap.card\"].configuration) {\n\t\tcardManifest[\"sap.card\"].configuration.parameters = {\n\t\t\t_headerExpandQuery: {\n\t\t\t\tvalue: headerExpandQuery\n\t\t\t},\n\t\t\t_contentExpandQuery: {\n\t\t\t\tvalue: contentExpandQuery\n\t\t\t}\n\t\t};\n\t\treturn;\n\t}\n\n\tif (headerExpandQuery && configParameters) {\n\t\tconfigParameters._headerExpandQuery = {\n\t\t\tvalue: headerExpandQuery\n\t\t};\n\t}\n\tif (contentExpandQuery && configParameters) {\n\t\tconfigParameters._contentExpandQuery = {\n\t\t\tvalue: contentExpandQuery\n\t\t};\n\t}\n}\n\n/*\n * Based on the odata model version(either v2 or v4) and the query parameters, this function creates the select and expand query parameters\n *\n * @param mParameters\n * @param odataModel\n * @returns\n */\nexport function createUrlParameters(queryParameters: QueryParameters) {\n\tconst { odataModel } = Application.getInstance().fetchDetails();\n\tlet selectQuery = queryParameters.properties.join(\",\");\n\tlet expandQuery = \"\";\n\n\tif (odataModel === ODataModelVersion.V4) {\n\t\tqueryParameters.navigationProperties.forEach((navProp) => {\n\t\t\tconst selectQueryForNavigationProperty = navProp.properties.join(\",\");\n\t\t\texpandQuery += expandQuery.length ? \",\" : \"\";\n\t\t\tselectQuery += selectQuery.length ? \",\" : \"\";\n\t\t\tselectQuery += `${navProp.name}`;\n\t\t\texpandQuery += selectQueryForNavigationProperty.length\n\t\t\t\t? `${navProp.name}($select=${selectQueryForNavigationProperty})`\n\t\t\t\t: `${navProp.name}`;\n\t\t});\n\t}\n\n\tif (odataModel === ODataModelVersion.V2) {\n\t\tqueryParameters.navigationProperties.forEach((navProp) => {\n\t\t\tselectQuery += selectQuery.length ? \",\" : \"\";\n\t\t\texpandQuery += expandQuery.length ? \",\" : \"\";\n\t\t\tselectQuery += navProp.properties.length\n\t\t\t\t? navProp.properties.map((property) => `${navProp.name}/${property}`)\n\t\t\t\t: `${navProp.name}`;\n\t\t\texpandQuery += `${navProp.name}`;\n\t\t});\n\t}\n\n\treturn {\n\t\t$select: selectQuery,\n\t\t$expand: expandQuery\n\t};\n}\n\n/**\n * Creates URL parameters for the given properties.\n *\n * @param {PropertyInfoMap} properties - The map of properties to create URL parameters from.\n * @returns {Record<string, string>} The URL parameters object containing the $select query parameter.\n */\nexport function createURLParams(properties: PropertyInfoMap): Record<string, string> {\n\tconst selectProperties = properties.map((property) => property.name);\n\tlet urlParameters = {};\n\tif (selectProperties.length) {\n\t\turlParameters = {\n\t\t\t$select: selectProperties.join(\",\")\n\t\t};\n\t}\n\n\treturn urlParameters;\n}\n"],"mappings":"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","ignoreList":[]}