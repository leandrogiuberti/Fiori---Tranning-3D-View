{"version":3,"file":"FooterActions-dbg.js","names":["sap","ui","define","Log","sap_m_library","CoreLib","___helpers_I18nHelper","___pages_Application","___utils_CommonUtils","_iteratorSymbol","Symbol","iterator","_settle","pact","state","value","s","_Pact","v","o","bind","then","observer","prototype","onFulfilled","onRejected","result","this","callback","e","_this","_isSettledPact","thenable","_forTo","array","body","check","i","reject","_cycle","length","addActionToCardManifest","manifest","controlProperties","rootComponent","Application","getInstance","fetchDetails","bODataV4","getDialogModel","getProperty","metaModel","getModel","getMetaModel","Promise","resolve","getAdaptiveCardAction","actionInfo","addActionToCardFooter","_forOf","target","step","next","done","return","_fixup","TypeError","values","push","ButtonType","resolveI18nTextFromResourceModel","ODataModelVersion","formActionInfoFromDataField","dataField","entitySetName","metadataAnnotationInfo","isConfirmationRequired","enablePath","getMetadataAnnotationInfoV4","getMetadataAnnotationInfoV2","label","Label","String","action","Action","split","getButtonTypeForCard","actionStyle","Accept","Reject","Default","addActionInfoToConfigParameters","configuration","parameters","footerActionParameters","_adaptiveFooterActionParameters","cardConfiguration","configParams","titleKey","removeActionInfoFromConfigParams","updateAdaptiveCardInfo","adaptiveCardStyle","adaptiveCardActionInfo","style","cardFooter","footer","actionsStrip","actionLength","type","visible","text","buttonType","actions","enabled","getActionStyles","actionStyles","name","labelWithValue","getActionFromDataField","dataFields","dataFieldForAnnotation","filter","dataFieldType","$Type","RecordType","map","updateActionParameterData","actionParameters","data","resourceBundle","actionParameter","errorMessage","placeholder","actionParameterConfig","valueHelpEntitySet","entitySet","_temp","updateModelData","serviceUrl","getActionsFromManifest","cardManifest","_exit","_temp7","_result","title","enablePathKey","isStyleControlEnabled","_temp6","_temp5","aKeys","Object","keys","_temp4","key","_temp3","triggerActionText","_temp2","getDefaultAction","resourceModel","mCardManifest","_exit2","_temp9","_result2","_temp8","_await$getActionsFrom","getCardActionInfo","_temp1","_getDefaultAction","annotationActions","cardActions","addedActions","styles","isAddActionEnabled","actionExists","odataModel","V4","getCardActions","_temp0","appComponent","appModel","getObject","getODataEntitySet","entityTypeName","entityType","getODataEntityType","identificationPath","entityTypeAnnotation","entityTypeKeys","identificationAnnotation","removeActionFromManifest","relatedAction","cardParameters","resetCardActions","updateCardManifestAction","forEach","isEnabledExpression","getActionStyle","getActionParameters","oResourceBundle","getResourceBundleFor","_temp12","parameter","_temp11","actionParamInfoToAdd","EnumMember","isRequired","nullable","id","getText","_temp10","getActionParameterConfigurationV2","functionImportInfo","enabledPathKey","verb","getActionParams","_getActionParams","getActionVerb","getFunctionImportInfo","mActionParams","parameterData","additionalParameters","_getActionParameters","actionParams","getRelatedBoundAction","actionValue","actionType","isBoundAction","$IsBound","$Parameter","some","actionParam","getRelatedUnboundActions","getValueHelpInfo","contextPath","actionParamName","requestValueListInfo","valueListInfo","valueListAnnotationInfo","valueListModel","$model","valueListPropertyName","getValueListPropertyName","valueHelpAnnotation","valueListModelServiceUrl","getServiceUrl","getActionParameterName","actionVerb","_exit3","_temp15","_result3","actionParameterAnnotation","entitySetInfo","_temp14","_temp13","oValueList","sPropertyName","oValueListParameter","Parameters","find","oParameter","LocalDataProperty","$PropertyPath","ValueListProperty","getActionParameterValue","propertyPath","descriptionPath","textArrangementType","fetch","valueHelpData","_temp16","json","valueHelpDataJson","valueHelpDataValue","d","results","getActionParameterConfiguration","oDialogModel","actionParamAnnotations","textArrangementPath","$Path","textArrangementAnnotation","actionParameterValue","$EnumMember","setProperty","getActionParameterInfo","_exit4","actionParamInfo","actionIndex","_temp18","isActionRequired","_temp17","$Nullable","_actionParam$$Name","$Name","_getActionParameterNa","_getActionParameterCo","getEnabledValueFromAnnotation","actionAnnotation","operationAvailable","Bool","getCriticalValueFromAnnotation","oCriticalAnnotation","undefined","oParameterValue","oActionValue","toLowerCase","dataFieldAction","indexOf","functionName","functionImport","getODataFunctionImport","replace","$kind","$Action","unBoundActions","relatedUnboundAction","relatedBoundAction","oContextObject","mKeyProperties","getPropertyKeys","oSkipProperties","importParameter","addParameterLabel","parameterName","isKey","parameterValue","hasOwnProperty","error","Error","skip","mode","toUpperCase","oKeyMap","propertyRef","property","getODataProperty","getParameterConfigFromValueList","serviceUrlPrefix","valueListParameters","selectProps","valueListPropertyPath","valueListParameter","valueListProperty","join","ValueListAnnotation","CollectionPath","sServiceUrl","__exports","__esModule"],"sources":["FooterActions.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nimport Log from \"sap/base/Log\";\nimport { ButtonType } from \"sap/m/library\";\nimport type UIComponent from \"sap/ui/core/Component\";\nimport CoreLib from \"sap/ui/core/Lib\";\nimport type {\n\tActionParameterConfiguration,\n\tAdaptiveCardAction,\n\tAdaptiveCardActionParameter,\n\tCardManifest,\n\tData\n} from \"sap/ui/integration/widgets/Card\";\nimport type JSONModel from \"sap/ui/model/json/JSONModel\";\nimport type V2ODataMetaModel from \"sap/ui/model/odata/ODataMetaModel\";\nimport type { EntitySet, EntityType } from \"sap/ui/model/odata/ODataMetaModel\";\nimport type V2ODataModel from \"sap/ui/model/odata/v2/ODataModel\";\nimport type V4ODataMetaModel from \"sap/ui/model/odata/v4/ODataMetaModel\";\nimport type V4ODataModel from \"sap/ui/model/odata/v4/ODataModel\";\nimport type ResourceModel from \"sap/ui/model/resource/ResourceModel\";\nimport { resolveI18nTextFromResourceModel } from \"../helpers/I18nHelper\";\nimport { Application, ODataModelVersion } from \"../pages/Application\";\nimport type {\n\tActionAnnotation,\n\tActionStyles,\n\tAnnotationAction,\n\tControlProperties,\n\tCriticalAction,\n\tFunctionImport,\n\tFunctionImportParameter,\n\tParametersInfoV2,\n\tProperty,\n\tValueListParameter\n} from \"../types/ActionTypes\";\nimport { getDialogModel } from \"../utils/CommonUtils\";\n\ntype ActionParameter = {\n\t$Type?: string;\n\t$Nullable?: boolean;\n\t$Name: string;\n};\n\ntype Action = {\n\t$IsBound: boolean;\n\t$Parameter?: Array<ActionParameter>;\n\t$Action?: string;\n};\n\ntype DataFieldString = {\n\tString: string;\n};\n\ntype DataFieldV4 = {\n\t$Type: string;\n\tRecordType: string;\n\tLabel: string;\n\tAction: string;\n};\n\ntype DataField = {\n\t$Type: string;\n\tRecordType: string;\n\tLabel: DataFieldString;\n\tAction: DataFieldString;\n};\n\ntype EntityTypeAnnotation = {\n\t[key: string]: Array<DataField>;\n};\n\ntype KeyMap = {\n\t[key: string]: boolean;\n};\n\ntype SkipProperty = {\n\t[key: string]: string;\n};\n\ntype ValueListAnnotationInfo = {\n\t$model: V4ODataModel;\n\t[\"CollectionPath\"]: string;\n\tParameters: Array<any>;\n};\n\ntype PropertyValue = string | null | undefined;\n\n/**\n * Forms the action info from the data field\n * @param dataField The data field\n * @param bODataV4 The OData version\n * @returns Action info\n */\nfunction formActionInfoFromDataField(\n\tdataField: DataField,\n\tbODataV4: boolean,\n\tmetaModel: V2ODataMetaModel | V4ODataMetaModel,\n\tentitySetName: string\n) {\n\tlet metadataAnnotationInfo = {\n\t\tisConfirmationRequired: false,\n\t\tenablePath: \"\"\n\t};\n\n\tif (bODataV4) {\n\t\tmetadataAnnotationInfo = getMetadataAnnotationInfoV4(\n\t\t\tdataField as unknown as DataFieldV4,\n\t\t\tmetaModel as V4ODataMetaModel,\n\t\t\tentitySetName\n\t\t);\n\t} else {\n\t\tmetadataAnnotationInfo = getMetadataAnnotationInfoV2(dataField as unknown as DataField, metaModel as V2ODataMetaModel);\n\t}\n\n\treturn {\n\t\tlabel: bODataV4 ? dataField?.Label : dataField?.Label?.String,\n\t\taction: bODataV4 ? dataField.Action : dataField.Action.String.split(\"/\")[1],\n\t\tisConfirmationRequired: metadataAnnotationInfo.isConfirmationRequired || false,\n\t\tenablePath: metadataAnnotationInfo.enablePath\n\t};\n}\n\n/**\n * Gets the button type for the card\n * @param actionStyle The action style\n * @returns The button type\n */\n\nfunction getButtonTypeForCard(actionStyle: string | undefined) {\n\tif (actionStyle === \"Positive\") {\n\t\treturn ButtonType.Accept;\n\t}\n\tif (actionStyle === \"Negative\") {\n\t\treturn ButtonType.Reject;\n\t}\n\treturn ButtonType.Default;\n}\n\n/**\n *\n * Adds action information to integration card configuration parameters\n *\n * @param manifest\n * @param actionInfo\n * @param controlProperties\n */\nfunction addActionInfoToConfigParameters(manifest: CardManifest, actionInfo: AdaptiveCardAction, controlProperties: ControlProperties) {\n\tif (!manifest[\"sap.card\"].configuration) {\n\t\tmanifest[\"sap.card\"].configuration = {\n\t\t\tparameters: {\n\t\t\t\tfooterActionParameters: {},\n\t\t\t\t_adaptiveFooterActionParameters: {}\n\t\t\t}\n\t\t};\n\t} else if (manifest[\"sap.card\"].configuration && !manifest[\"sap.card\"].configuration.parameters) {\n\t\tmanifest[\"sap.card\"].configuration.parameters = {\n\t\t\tfooterActionParameters: {},\n\t\t\t_adaptiveFooterActionParameters: {}\n\t\t};\n\t}\n\n\tconst cardConfiguration = manifest[\"sap.card\"].configuration;\n\tconst configParams = cardConfiguration.parameters;\n\n\tif (configParams && !configParams._adaptiveFooterActionParameters) {\n\t\tconfigParams._adaptiveFooterActionParameters = {};\n\t}\n\tif (configParams && !configParams.footerActionParameters) {\n\t\tconfigParams.footerActionParameters = {};\n\t}\n\n\tif (configParams?._adaptiveFooterActionParameters && configParams?.footerActionParameters) {\n\t\tconfigParams.footerActionParameters[controlProperties.titleKey] = actionInfo.parameters || {};\n\t\tconfigParams._adaptiveFooterActionParameters[controlProperties.titleKey] = actionInfo || {};\n\t}\n}\n\n/**\n *\n * Removes action information from integration card configuration parameters\n *\n * @param manifest\n * @param controlProperties\n */\nfunction removeActionInfoFromConfigParams(manifest: CardManifest, controlProperties: ControlProperties) {\n\tconst cardConfiguration = manifest[\"sap.card\"].configuration;\n\tconst configParams = cardConfiguration?.parameters;\n\tif (configParams?._adaptiveFooterActionParameters && configParams?.footerActionParameters) {\n\t\tdelete configParams.footerActionParameters[controlProperties.titleKey];\n\t\tdelete configParams._adaptiveFooterActionParameters[controlProperties.titleKey];\n\t}\n}\n\n/**\n *\n * Updates the style and enablePath for the adaptive card action\n *\n * @param manifest\n * @param controlProperties\n * @param adaptiveCardStyle\n * @param enablePath\n */\nfunction updateAdaptiveCardInfo(\n\tmanifest: CardManifest,\n\tcontrolProperties: ControlProperties,\n\tadaptiveCardStyle: string,\n\tenablePath: string\n) {\n\tconst cardConfiguration = manifest[\"sap.card\"].configuration;\n\tconst configParams = cardConfiguration?.parameters;\n\n\tif (configParams?._adaptiveFooterActionParameters && configParams?.footerActionParameters) {\n\t\tconst adaptiveCardActionInfo = configParams._adaptiveFooterActionParameters[controlProperties.titleKey];\n\t\tadaptiveCardActionInfo.style = adaptiveCardStyle;\n\t\tadaptiveCardActionInfo.enablePath = enablePath;\n\t}\n}\n\n/**\n * Adds the action to the card footer\n * @param manifest The card manifest\n * @param actionInfo The action info\n */\nfunction addActionToCardFooter(manifest: CardManifest, actionInfo: AdaptiveCardAction, controlProperties: ControlProperties) {\n\tlet cardFooter = manifest[\"sap.card\"].footer;\n\n\tif (!cardFooter) {\n\t\tmanifest[\"sap.card\"].footer = {\n\t\t\tactionsStrip: []\n\t\t};\n\t\tcardFooter = manifest[\"sap.card\"].footer;\n\t}\n\n\tconst actionLength = cardFooter.actionsStrip.length;\n\n\tif (actionLength < 2) {\n\t\tcardFooter.actionsStrip.push({\n\t\t\ttype: \"Button\",\n\t\t\tvisible: false,\n\t\t\ttext: actionInfo.label,\n\t\t\tbuttonType: getButtonTypeForCard(actionInfo.style),\n\t\t\tactions: [\n\t\t\t\t{\n\t\t\t\t\ttype: \"custom\",\n\t\t\t\t\tenabled: actionInfo.enablePath ? \"${\" + actionInfo.enablePath + \"}\" : \"true\",\n\t\t\t\t\tparameters: \"{{parameters.footerActionParameters.\" + controlProperties.titleKey + \"}}\"\n\t\t\t\t}\n\t\t\t]\n\t\t});\n\n\t\taddActionInfoToConfigParameters(manifest, actionInfo, controlProperties);\n\t}\n}\n\n/**\n * Gets the action styles for the card\n * @returns The action styles\n */\nexport function getActionStyles() {\n\tconst actionStyles: Array<ActionStyles> = [\n\t\t{\n\t\t\tname: \"Default\",\n\t\t\tlabel: \"Default\",\n\t\t\tlabelWithValue: \"Default\"\n\t\t},\n\t\t{\n\t\t\tname: \"Positive\",\n\t\t\tlabel: \"Positive\",\n\t\t\tlabelWithValue: \"Positive\"\n\t\t},\n\t\t{\n\t\t\tname: \"Negative\",\n\t\t\tlabel: \"Negative\",\n\t\t\tlabelWithValue: \"Negative\"\n\t\t}\n\t];\n\n\treturn actionStyles;\n}\n\n/**\n * Forms action info from the data field\n * @param dataFields The data fields\n * @param bODataV4 The OData version\n * @returns Action info\n */\nfunction getActionFromDataField(\n\tdataFields: Array<DataField>,\n\tbODataV4: boolean,\n\tmetaModel: V2ODataMetaModel | V4ODataMetaModel,\n\tentitySetName: string\n) {\n\tconst actions: Array<AnnotationAction> = [];\n\tconst dataFieldForAnnotation: string = \"com.sap.vocabularies.UI.v1.DataFieldForAction\";\n\n\tdataFields\n\t\t?.filter(function (dataField: DataField) {\n\t\t\tconst dataFieldType: string = bODataV4 ? dataField?.$Type : dataField?.RecordType;\n\t\t\treturn dataFieldType === dataFieldForAnnotation;\n\t\t})\n\t\t.map(function (dataField: DataField) {\n\t\t\tconst actionInfo = formActionInfoFromDataField(dataField, bODataV4, metaModel, entitySetName) as AnnotationAction;\n\t\t\tactions.push(actionInfo);\n\t\t});\n\n\treturn actions;\n}\n\n/**\n *\n * Updates the action parameter data to the model data.\n * Resolves the i18n keys for label, errorMessage and placeholder properties of adaptive card action parameters.\n *\n *\n * @param actionParameters\n * @param data\n * @param resourceBundle\n */\nconst updateActionParameterData = async function (\n\tactionParameters: AdaptiveCardActionParameter[],\n\tdata: Record<string, PropertyValue>,\n\tresourceBundle?: ResourceModel\n) {\n\tfor (const actionParameter of actionParameters) {\n\t\tif (resourceBundle) {\n\t\t\tactionParameter.label = resolveI18nTextFromResourceModel(actionParameter.label, resourceBundle);\n\t\t\tactionParameter.errorMessage = resolveI18nTextFromResourceModel(actionParameter?.errorMessage || \"\", resourceBundle);\n\t\t\tactionParameter.placeholder = resolveI18nTextFromResourceModel(actionParameter?.placeholder || \"\", resourceBundle);\n\t\t}\n\n\t\tconst actionParameterConfig = actionParameter.configuration;\n\t\tconst valueHelpEntitySet = actionParameterConfig?.entitySet;\n\n\t\tif (valueHelpEntitySet) {\n\t\t\tawait updateModelData(data, actionParameterConfig?.serviceUrl, valueHelpEntitySet);\n\t\t}\n\t}\n};\n\n/**\n *\n * Gets the saved action from card manifest\n * Resolves i18n keys to text for label and ok button used for Submit type of action in adaptive card.\n *\n * @param cardManifest\n * @param data\n * @param resourceBundle\n * @returns\n */\nconst getActionsFromManifest = async function (\n\tcardManifest: CardManifest,\n\tdata: Record<string, PropertyValue>,\n\tresourceBundle?: ResourceModel\n) {\n\tconst cardConfiguration = cardManifest[\"sap.card\"].configuration;\n\tconst configParams = cardConfiguration?.parameters;\n\tconst actions: Array<ControlProperties> = [];\n\n\tif (configParams?._adaptiveFooterActionParameters) {\n\t\tconst _adaptiveFooterActionParameters = configParams._adaptiveFooterActionParameters;\n\t\tconst aKeys = Object.keys(_adaptiveFooterActionParameters);\n\n\t\tfor (const key of aKeys) {\n\t\t\tconst action = _adaptiveFooterActionParameters[key];\n\n\t\t\tif (resourceBundle) {\n\t\t\t\taction.label = resolveI18nTextFromResourceModel(action.label, resourceBundle);\n\t\t\t\taction.triggerActionText = resolveI18nTextFromResourceModel(action.triggerActionText, resourceBundle);\n\t\t\t}\n\n\t\t\tif (action.actionParameters?.length) {\n\t\t\t\tawait updateActionParameterData(action.actionParameters, data, resourceBundle);\n\t\t\t}\n\n\t\t\tlet style = \"Default\";\n\n\t\t\tif (action.style === \"positive\") {\n\t\t\t\tstyle = \"Positive\";\n\t\t\t} else if (action.style === \"destructive\") {\n\t\t\t\tstyle = \"Negative\";\n\t\t\t}\n\n\t\t\tconst actionInfo: ControlProperties = {\n\t\t\t\ttitle: action.label,\n\t\t\t\ttitleKey: key,\n\t\t\t\tstyle: style,\n\t\t\t\tenablePathKey: action.enablePath,\n\t\t\t\tisStyleControlEnabled: true,\n\t\t\t\tisConfirmationRequired: action.data?.isConfirmationRequired || false,\n\t\t\t\ttriggerActionText: action.triggerActionText\n\t\t\t};\n\t\t\tactions.push(actionInfo);\n\t\t}\n\t\treturn actions;\n\t}\n\n\treturn [\n\t\t{\n\t\t\ttitle: \"\",\n\t\t\ttitleKey: \"\",\n\t\t\tstyle: \"Default\",\n\t\t\tenablePathKey: \"\",\n\t\t\tisStyleControlEnabled: false\n\t\t}\n\t];\n};\n\n/**\n * Gets the saved actions if exists in card manifest otherwise an initial action with default values\n *\n * @param resourceModel\n * @param data\n * @param mCardManifest\n * @returns\n */\nexport const getDefaultAction = async function (\n\tresourceModel?: ResourceModel,\n\tdata?: Record<string, PropertyValue>,\n\tmCardManifest?: CardManifest\n) {\n\tif (mCardManifest && data) {\n\t\treturn await getActionsFromManifest(mCardManifest, data, resourceModel);\n\t}\n\n\treturn [\n\t\t{\n\t\t\ttitle: \"\",\n\t\t\ttitleKey: \"\",\n\t\t\tstyle: \"Default\",\n\t\t\tenablePathKey: \"\",\n\t\t\tisStyleControlEnabled: false\n\t\t}\n\t];\n};\n\n/**\n * Retrieves card action information.\n *\n * @param {Record<string, PropertyValue>} data - The data record containing property values.\n * @param {ResourceModel} [resourceModel] - The resource model for localization (optional).\n * @param {CardManifest} [mCardManifest] - The card manifest object (optional).\n * @returns {Promise<Object>} An object containing card action information.\n */\nexport const getCardActionInfo = async function (\n\tdata: Record<string, PropertyValue>,\n\tresourceModel?: ResourceModel,\n\tmCardManifest?: CardManifest\n) {\n\tconst { odataModel, entitySet, rootComponent } = Application.getInstance().fetchDetails();\n\tconst bODataV4 = odataModel === ODataModelVersion.V4;\n\tconst cardActions = getCardActions(rootComponent, entitySet, bODataV4);\n\treturn {\n\t\tannotationActions: cardActions,\n\t\taddedActions: cardActions.length > 0 ? await getDefaultAction(resourceModel, data, mCardManifest) : [],\n\t\tbODataV4: bODataV4,\n\t\tstyles: getActionStyles(),\n\t\tisAddActionEnabled: true,\n\t\tactionExists: cardActions.length > 0\n\t};\n};\n\n/**\n * Gets the card actions\n * @param appComponent The app component\n * @param entitySetName The entity set name\n * @param bODataV4 The OData version\n * @returns The card actions\n */\nexport function getCardActions(appComponent: UIComponent, entitySetName: string, bODataV4: boolean) {\n\tconst appModel = bODataV4 ? (appComponent.getModel() as V2ODataModel) : (appComponent.getModel() as V4ODataModel),\n\t\tmetaModel = appModel.getMetaModel(),\n\t\tentitySet = bODataV4 ? metaModel.getObject(\"/\" + entitySetName) : (metaModel as V2ODataMetaModel).getODataEntitySet(entitySetName),\n\t\tentityTypeName: string = bODataV4 ? entitySet?.$Type : entitySet?.entityType,\n\t\tentityType = bODataV4\n\t\t\t? metaModel.getObject(\"/\" + entityTypeName)\n\t\t\t: (metaModel as V2ODataMetaModel).getODataEntityType(entityTypeName),\n\t\tidentificationPath: string = bODataV4 ? \"@com.sap.vocabularies.UI.v1.Identification\" : \"com.sap.vocabularies.UI.v1.Identification\";\n\tlet entityTypeAnnotation: EntityTypeAnnotation = {};\n\n\tif (bODataV4) {\n\t\tentityTypeAnnotation = metaModel.getObject(\"/\" + entityTypeName + \"@\");\n\t}\n\n\tconst entityTypeKeys: Array<string> = bODataV4 ? Object.keys(entityTypeAnnotation) : Object.keys(entityType);\n\tconst identificationAnnotation: Array<string> = entityTypeKeys?.filter((key: string) => {\n\t\treturn key === identificationPath;\n\t});\n\tlet dataFields: Array<DataField> = [];\n\n\tif (identificationAnnotation?.length) {\n\t\tdataFields = bODataV4 ? entityTypeAnnotation[identificationPath] : entityType[identificationPath];\n\t}\n\n\treturn getActionFromDataField(dataFields, bODataV4, metaModel, entitySetName);\n}\n\n/**\n * Adds the action to the card manifest\n * @param manifest The card manifest\n * @param controlProperties The control properties\n */\nexport async function addActionToCardManifest(manifest: CardManifest, controlProperties: ControlProperties) {\n\tconst { rootComponent } = Application.getInstance().fetchDetails();\n\tconst bODataV4 = getDialogModel().getProperty(\"/configuration/actions/bODataV4\") as boolean;\n\tconst metaModel = rootComponent.getModel()?.getMetaModel() as V2ODataMetaModel | V4ODataMetaModel;\n\tconst actionInfo = await getAdaptiveCardAction(controlProperties, bODataV4, metaModel);\n\taddActionToCardFooter(manifest, actionInfo, controlProperties);\n}\n\n/**\n * Removes the action from the card manifest\n * @param manifest The card manifest\n * @param controlProperties The control properties\n */\nexport function removeActionFromManifest(manifest: CardManifest, controlProperties: ControlProperties) {\n\tconst cardFooter = manifest[\"sap.card\"]?.footer;\n\tconst actionLength = cardFooter?.actionsStrip.length;\n\n\tif (actionLength && cardFooter) {\n\t\tconst relatedAction = cardFooter.actionsStrip.filter((actionsStrip) => {\n\t\t\tconst cardParameters = actionsStrip.actions[0].parameters;\n\t\t\treturn cardParameters !== \"{{parameters.footerActionParameters.\" + controlProperties.titleKey + \"}}\";\n\t\t});\n\n\t\tif (relatedAction.length) {\n\t\t\tcardFooter.actionsStrip = relatedAction;\n\t\t} else {\n\t\t\tdelete manifest[\"sap.card\"]?.footer;\n\t\t}\n\n\t\tremoveActionInfoFromConfigParams(manifest, controlProperties);\n\t}\n}\n\n/**\n * Updates the actions in the footer of the card manifest based on the provided control properties.\n *\n * @param {CardManifest} manifest - The card manifest object that contains the footer actions.\n */\nexport function resetCardActions(manifest: CardManifest) {\n\tmanifest[\"sap.card\"].footer = {\n\t\tactionsStrip: []\n\t};\n\n\tconst cardConfiguration = manifest[\"sap.card\"].configuration;\n\tconst configParams = cardConfiguration?.parameters;\n\tif (configParams) {\n\t\tconfigParams._adaptiveFooterActionParameters = {};\n\t\tconfigParams.footerActionParameters = {};\n\t}\n}\n\n/**\n * Updates the actions in the footer of the card manifest based on the provided control properties.\n *\n * @param {CardManifest} manifest - The card manifest object that contains the footer actions.\n * @param {ControlProperties} controlProperties - The control properties used to update the footer actions.\n */\nexport function updateCardManifestAction(manifest: CardManifest, controlProperties: ControlProperties) {\n\tconst cardFooter = manifest[\"sap.card\"].footer;\n\tconst actionLength = cardFooter?.actionsStrip.length;\n\n\tif (actionLength && cardFooter) {\n\t\tcardFooter.actionsStrip.forEach((actionsStrip) => {\n\t\t\tconst action = actionsStrip.actions[0];\n\t\t\tconst cardParameters = action.parameters;\n\n\t\t\tif (cardParameters === \"{{parameters.footerActionParameters.\" + controlProperties.titleKey + \"}}\") {\n\t\t\t\tconst isEnabledExpression = controlProperties.enablePathKey ? \"${\" + controlProperties.enablePathKey + \"}\" : \"true\";\n\t\t\t\tconst adaptiveCardStyle = getActionStyle(controlProperties);\n\t\t\t\tactionsStrip.buttonType = getButtonTypeForCard(controlProperties.style);\n\t\t\t\taction.enabled = isEnabledExpression;\n\t\t\t\tupdateAdaptiveCardInfo(manifest, controlProperties, adaptiveCardStyle, controlProperties.enablePathKey || \"\");\n\t\t\t}\n\t\t});\n\t}\n}\n\n/**\n * Gets the action style\n * @param controlProperties The control properties\n * @returns Action style\n */\n\nfunction getActionStyle(controlProperties: ControlProperties) {\n\tlet actionStyle: string = \"default\";\n\n\tif (controlProperties.style === \"Positive\") {\n\t\tactionStyle = \"positive\";\n\t} else if (controlProperties.style === \"Negative\") {\n\t\tactionStyle = \"destructive\";\n\t}\n\treturn actionStyle;\n}\n\n/**\n *\n * Gets the OData V2 action parameters for the card\n *\n * @param parameters The parameters\n * @returns The OData V2 action parameters\n */\nconst getActionParameters = async function (parameters: Array<FunctionImportParameter>) {\n\tconst actionParameters: Array<AdaptiveCardActionParameter> = [];\n\tconst oResourceBundle = CoreLib.getResourceBundleFor(\"sap.cards.ap.generator.i18n\");\n\n\tfor (const parameter of parameters) {\n\t\tconst EnumMember = parameter?.[\"com.sap.vocabularies.Common.v1.FieldControl\"]?.EnumMember;\n\t\tconst isRequired = EnumMember === \"com.sap.vocabularies.Common.v1.FieldControlType/Mandatory\" || parameter?.nullable === \"false\";\n\t\tconst actionParamInfoToAdd: AdaptiveCardActionParameter = {\n\t\t\tlabel: parameter?.[\"sap:label\"] || parameter?.name || \"\",\n\t\t\tid: parameter?.name || \"\",\n\t\t\tisRequired: isRequired,\n\t\t\terrorMessage: isRequired ? oResourceBundle.getText(\"GENERATOR_ADAPTIVE_CARD_ACTION_PARAMETERS_ERROR_MESSAGE\") : \"\",\n\t\t\tplaceholder: \"\"\n\t\t};\n\n\t\tif (parameter?.[\"sap:value-list\"] === \"fixed-values\") {\n\t\t\tconst actionParameterConfig = await getActionParameterConfigurationV2(parameter);\n\n\t\t\tif (actionParameterConfig?.entitySet) {\n\t\t\t\tactionParamInfoToAdd.configuration = actionParameterConfig as ActionParameterConfiguration;\n\t\t\t\tactionParamInfoToAdd.placeholder = oResourceBundle.getText(\"GENERATOR_ADAPTIVE_CARD_ACTION_PARAMETERS_PLACEHOLDER\");\n\t\t\t}\n\t\t}\n\t\tactionParameters.push(actionParamInfoToAdd);\n\t}\n\n\treturn actionParameters;\n};\n\n/**\n * Forms the Adaptive Card action from the control properties\n * @param controlProperties The control properties\n * @param bODataV4 The OData version\n * @param metaModel The meta model\n * @returns The action info\n */\nconst getAdaptiveCardAction = async function (\n\tcontrolProperties: ControlProperties,\n\tbODataV4: boolean,\n\tmetaModel: V2ODataMetaModel | V4ODataMetaModel\n) {\n\tconst oResourceBundle = CoreLib.getResourceBundleFor(\"sap.cards.ap.generator.i18n\");\n\tconst actionStyle = getActionStyle(controlProperties);\n\tlet actionParameters: Array<AdaptiveCardActionParameter> = [];\n\tlet functionImportInfo;\n\tconst data: Data = {\n\t\tisConfirmationRequired: controlProperties.isConfirmationRequired || false\n\t};\n\tconst enabledPathKey = controlProperties.enablePathKey;\n\tconst actionInfo: AdaptiveCardAction = {\n\t\tstyle: actionStyle,\n\t\tverb: \"\",\n\t\tlabel: controlProperties.title,\n\t\tactionParameters: [],\n\t\tdata: data,\n\t\tenablePath: enabledPathKey || \"\",\n\t\ttriggerActionText: oResourceBundle.getText(\"GENERATOR_ADAPTIVE_CARD_SUBMIT_ACTION_OK_BUTTON\")\n\t};\n\n\tif (bODataV4) {\n\t\tactionParameters = await getActionParams(controlProperties, metaModel as V4ODataMetaModel);\n\t\tactionInfo.verb = getActionVerb(controlProperties, metaModel as V4ODataMetaModel);\n\t\tactionInfo.actionParameters = actionParameters || [];\n\n\t\treturn actionInfo;\n\t} else {\n\t\tfunctionImportInfo = getFunctionImportInfo(controlProperties, metaModel as V2ODataMetaModel);\n\t\tactionInfo.verb = controlProperties.titleKey;\n\t\tactionInfo.parameters = functionImportInfo?.mActionParams?.parameterData;\n\t\tactionInfo.actionParameters = await getActionParameters(functionImportInfo?.mActionParams?.additionalParameters);\n\t\tdata.actionParams = {\n\t\t\tkeys: Object.keys(functionImportInfo?.mActionParams?.parameterData)\n\t\t};\n\t\tactionInfo.data = data;\n\n\t\treturn actionInfo;\n\t}\n};\n\n/**\n * Gets the related bound action for OData V4 model\n * @param actionValue The action value\n * @param actionType The action type\n * @returns Bound action\n */\n\nfunction getRelatedBoundAction(actionValue: Array<Action>, actionType: string) {\n\treturn actionValue?.filter((action: Action) => {\n\t\tconst isBoundAction: boolean = action?.$IsBound;\n\t\tif (isBoundAction) {\n\t\t\treturn action?.$Parameter?.some((actionParam: ActionParameter) => {\n\t\t\t\treturn actionType === actionParam?.$Type;\n\t\t\t});\n\t\t}\n\t});\n}\n\n/**\n * Returns the related unbound actions for OData V4 model\n * @param actionValue The action value\n * @returns\n */\nfunction getRelatedUnboundActions(actionValue: Array<Action>) {\n\treturn actionValue?.filter((action: Action) => {\n\t\treturn !action?.$IsBound;\n\t});\n}\n\n/**\n * Gets the valuehelp info for OData V4 metamodel\n *\n * @param metaModel\n * @param contextPath\n * @param actionParamName\n * @returns\n */\nconst getValueHelpInfo = async function (metaModel: V4ODataMetaModel, contextPath: string, actionParamName?: string) {\n\tconst valueListInfo = await metaModel.requestValueListInfo(contextPath, true);\n\tconst valueListAnnotationInfo = valueListInfo?.[\"\"] as ValueListAnnotationInfo;\n\tconst valueListModel = valueListAnnotationInfo?.$model;\n\tconst valueListPropertyName = getValueListPropertyName(valueListAnnotationInfo, actionParamName || \"\");\n\tconst valueHelpEntitySet = valueListAnnotationInfo?.[\"CollectionPath\"];\n\tconst valueHelpAnnotation = valueListModel?.getMetaModel()?.getObject(`/${valueHelpEntitySet}/${valueListPropertyName}@`);\n\treturn {\n\t\tvalueHelpAnnotation,\n\t\tvalueListPropertyName,\n\t\tvalueHelpEntitySet,\n\t\tvalueListModelServiceUrl: valueListModel?.getServiceUrl()\n\t};\n};\n\n/**\n * Returns the action parameter name for OData V4 model\n * @param actionVerb\n * @param actionParamName\n * @returns The action parameter label for OData V4 model\n */\nconst getActionParameterName = async function (actionVerb: string, actionParamName?: string) {\n\tconst { rootComponent, entitySet } = Application.getInstance().fetchDetails();\n\tif (actionParamName) {\n\t\tconst metaModel = rootComponent.getModel()?.getMetaModel() as V4ODataMetaModel;\n\t\tconst contextPath = `/${entitySet}/${actionVerb}/${actionParamName}`;\n\t\tconst entitySetInfo = metaModel.getObject(`/${entitySet}`);\n\t\tconst actionParameterAnnotation = metaModel.getObject(`/${entitySetInfo?.$Type}/${actionParamName}@`);\n\n\t\tif (metaModel.getObject(`${contextPath}@`)?.[\"@com.sap.vocabularies.Common.v1.ValueListWithFixedValues\"]) {\n\t\t\tconst { valueHelpAnnotation } = await getValueHelpInfo(metaModel as V4ODataMetaModel, contextPath, actionParamName);\n\n\t\t\treturn (\n\t\t\t\tactionParameterAnnotation?.[\"@com.sap.vocabularies.Common.v1.Label\"] ||\n\t\t\t\tvalueHelpAnnotation?.[\"@com.sap.vocabularies.Common.v1.Label\"]\n\t\t\t);\n\t\t}\n\n\t\treturn actionParameterAnnotation?.[\"@com.sap.vocabularies.Common.v1.Label\"] || actionParamName;\n\t}\n};\n\n/**\n * Returns the value list property name from annotations\n *\n * @param oValueList\n * @param sPropertyName\n * @returns\n */\nfunction getValueListPropertyName(oValueList: ValueListAnnotationInfo, sPropertyName: string): string {\n\tconst oValueListParameter = oValueList?.Parameters.find(function (oParameter: ValueListParameter) {\n\t\treturn oParameter?.LocalDataProperty?.$PropertyPath === sPropertyName;\n\t});\n\treturn oValueListParameter?.ValueListProperty;\n}\n\n/**\n * Function to get the action parameter value based on the text arrangement annotation\n *\n * @param propertyPath\n * @param descriptionPath\n * @param textArrangementType\n * @returns\n */\nexport function getActionParameterValue(propertyPath: string, descriptionPath: string, textArrangementType: string): string {\n\tif (textArrangementType === \"TextOnly\") {\n\t\treturn \"${\" + descriptionPath + \"}\";\n\t} else if (textArrangementType === \"TextLast\") {\n\t\treturn \"${\" + propertyPath + \"}\" + \" (\" + \"${\" + descriptionPath + \"}\" + \")\";\n\t} else if (textArrangementType === \"TextSeparate\") {\n\t\treturn \"${\" + propertyPath + \"}\";\n\t}\n\n\treturn \"${\" + descriptionPath + \"}\" + \" (${\" + propertyPath + \"})\";\n}\n\n/**\n * Updates the model data with value help data for the action parameter\n *\n * @param data\n * @param serviceUrl\n * @param valueHelpEntitySet\n */\nexport const updateModelData = async function (data: Record<string, PropertyValue>, serviceUrl: string, valueHelpEntitySet: string) {\n\tconst valueHelpData = await fetch(serviceUrl);\n\tconst { odataModel } = Application.getInstance().fetchDetails();\n\tconst bODataV4 = odataModel === ODataModelVersion.V4;\n\n\tif (valueHelpData && typeof valueHelpData.json === \"function\") {\n\t\tconst valueHelpDataJson = await valueHelpData.json();\n\t\tconst valueHelpDataValue = bODataV4 ? valueHelpDataJson?.value : valueHelpDataJson?.d?.results;\n\n\t\tif (valueHelpDataValue?.length) {\n\t\t\tdata[valueHelpEntitySet] = valueHelpDataValue;\n\t\t}\n\t}\n};\n\n/**\n * Get Action Parameter Data for OData V4 model\n *\n * @param actionVerb\n * @param actionParamName\n * @returns\n */\nconst getActionParameterConfiguration = async function (actionVerb: string, actionParamName?: string) {\n\tconst actionParameterConfig = {\n\t\tserviceUrl: \"\",\n\t\tvalue: \"\",\n\t\tentitySet: \"\",\n\t\ttitle: \"\"\n\t};\n\n\tif (!actionParamName) {\n\t\treturn actionParameterConfig;\n\t}\n\n\tconst { entitySet, rootComponent } = Application.getInstance().fetchDetails();\n\n\tconst entitySetName = entitySet;\n\tconst oDialogModel = getDialogModel() as JSONModel;\n\tconst metaModel = rootComponent.getModel()?.getMetaModel() as V4ODataMetaModel;\n\tconst contextPath = `/${entitySetName}/${actionVerb}/${actionParamName}`;\n\tconst actionParamAnnotations = metaModel.getObject(`${contextPath}@`);\n\tif (!actionParamAnnotations?.[\"@com.sap.vocabularies.Common.v1.ValueListWithFixedValues\"]) {\n\t\treturn actionParameterConfig;\n\t}\n\n\tconst { valueHelpAnnotation, valueListPropertyName, valueHelpEntitySet, valueListModelServiceUrl } = await getValueHelpInfo(\n\t\tmetaModel as V4ODataMetaModel,\n\t\tcontextPath,\n\t\tactionParamName\n\t);\n\tconst textArrangementPath = valueHelpAnnotation?.[\"@com.sap.vocabularies.Common.v1.Text\"]?.$Path;\n\tconst textArrangementAnnotation =\n\t\tvalueHelpAnnotation?.[\"@com.sap.vocabularies.Common.v1.Text@com.sap.vocabularies.UI.v1.TextArrangement\"];\n\tconst actionParameterValue =\n\t\t(textArrangementAnnotation?.$EnumMember && valueListPropertyName && textArrangementPath) ||\n\t\t(valueListPropertyName && textArrangementPath)\n\t\t\t? getActionParameterValue(valueListPropertyName, textArrangementPath, textArrangementAnnotation?.$EnumMember?.split(\"/\")[1])\n\t\t\t: \"${\" + valueListPropertyName + \"}\";\n\n\tlet serviceUrl = valueListModelServiceUrl;\n\tserviceUrl =\n\t\tvalueListPropertyName && textArrangementPath\n\t\t\t? `${serviceUrl}${valueHelpEntitySet}?$select=${valueListPropertyName},${textArrangementPath}`\n\t\t\t: `${serviceUrl}${valueHelpEntitySet}?$select=${valueListPropertyName}`;\n\tserviceUrl = `${serviceUrl}&skip=0&$top=20`;\n\n\tconst data = oDialogModel.getProperty(\"/configuration/$data\");\n\tawait updateModelData(data, serviceUrl, valueHelpEntitySet);\n\toDialogModel.setProperty(\"/configuration/$data\", data);\n\n\treturn {\n\t\tentitySet: valueHelpEntitySet,\n\t\tserviceUrl: serviceUrl,\n\t\tvalue: actionParameterValue,\n\t\ttitle: \"${\" + valueListPropertyName + \"}\"\n\t};\n};\n\n/**\n * Get Action Parameter Info for OData V4 application's Action\n *\n * The action parameter will consist of errorMessage and placeholder which will be used by adaptive card.\n * Currently the errorMessage and placeholder will have values only for actions having dropdown value as input.\n *\n * @param relatedAction The related action\n * @param actionVerb The action verb\n * @param isBoundAction Is bound action\n * @returns The action parameter info\n */\nconst getActionParameterInfo = async function (relatedAction: Action, actionVerb: string, isBoundAction?: boolean) {\n\tconst actionParamInfo: any = [];\n\tlet actionIndex = 0;\n\n\tif (relatedAction && relatedAction.$Parameter) {\n\t\tconst oResourceBundle = CoreLib.getResourceBundleFor(\"sap.cards.ap.generator.i18n\");\n\n\t\tfor (const actionParam of relatedAction.$Parameter) {\n\t\t\tconst isActionRequired = !isBoundAction || (isBoundAction && actionIndex > 0);\n\t\t\tif (isActionRequired) {\n\t\t\t\tconst isRequired = actionParam.$Nullable === false;\n\t\t\t\tconst actionParamInfoToAdd: AdaptiveCardActionParameter = {\n\t\t\t\t\tisRequired: isRequired,\n\t\t\t\t\tid: actionParam.$Name,\n\t\t\t\t\tlabel: await getActionParameterName(actionVerb, actionParam.$Name),\n\t\t\t\t\terrorMessage: isRequired ? oResourceBundle.getText(\"GENERATOR_ADAPTIVE_CARD_ACTION_PARAMETERS_ERROR_MESSAGE\") : \"\",\n\t\t\t\t\tplaceholder: \"\"\n\t\t\t\t};\n\t\t\t\tconst actionParameterConfig = (await getActionParameterConfiguration(\n\t\t\t\t\tactionVerb,\n\t\t\t\t\tactionParam.$Name\n\t\t\t\t)) as ActionParameterConfiguration;\n\t\t\t\tif (actionParameterConfig?.entitySet) {\n\t\t\t\t\tactionParamInfoToAdd[\"configuration\"] = actionParameterConfig;\n\t\t\t\t\tactionParamInfoToAdd.placeholder = oResourceBundle.getText(\"GENERATOR_ADAPTIVE_CARD_ACTION_PARAMETERS_PLACEHOLDER\");\n\t\t\t\t}\n\t\t\t\tactionParamInfo.push(actionParamInfoToAdd);\n\t\t\t}\n\t\t\tactionIndex++;\n\n\t\t\tif (actionIndex === relatedAction.$Parameter.length) {\n\t\t\t\treturn actionParamInfo;\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Gets the enabled value from annotation\n *\n * @param actionAnnotation\n * @returns\n */\nfunction getEnabledValueFromAnnotation(actionAnnotation: ActionAnnotation) {\n\tif (actionAnnotation) {\n\t\tconst operationAvailable = actionAnnotation[\"@Org.OData.Core.V1.OperationAvailable\"];\n\n\t\tif (operationAvailable?.$Path) {\n\t\t\treturn operationAvailable.$Path;\n\t\t} else if (operationAvailable?.Bool) {\n\t\t\treturn operationAvailable.Bool;\n\t\t}\n\t}\n\n\treturn \"\";\n}\n\n/**\n * Gets the critical value from annotation\n *\n * @param oCriticalAnnotation\n * @returns\n */\nfunction getCriticalValueFromAnnotation(oCriticalAnnotation?: CriticalAction) {\n\tif (!oCriticalAnnotation) {\n\t\treturn false;\n\t}\n\tif (oCriticalAnnotation.Bool === undefined) {\n\t\treturn true;\n\t}\n\n\tconst oParameterValue = oCriticalAnnotation.Bool;\n\n\tif (typeof oParameterValue === \"string\") {\n\t\tconst oActionValue = oParameterValue.toLowerCase();\n\t\treturn !(oActionValue == \"false\" || oActionValue == \"\" || oActionValue == \" \");\n\t}\n\n\treturn !!oParameterValue;\n}\n\n/**\n *\n * Returns the metadata annotation info for OData V4 model ( enabled or critical value coming from metadata annotations )\n *\n * @param dataField\n * @param metaModel\n * @param entityTypeName\n * @returns\n */\n\nfunction getMetadataAnnotationInfoV4(dataField: DataFieldV4, metaModel: V4ODataMetaModel, entitySetName: string) {\n\tconst dataFieldAction = dataField.Action;\n\tconst actionVerb = dataFieldAction.indexOf(\"(\") > -1 ? dataFieldAction.split(\"(\")[0] : dataFieldAction;\n\tconst actionAnnotation = metaModel.getObject(\"/\" + entitySetName + \"/\" + actionVerb + \"@\");\n\tconst enablePath = getEnabledValueFromAnnotation(actionAnnotation);\n\tconst isConfirmationRequired = getCriticalValueFromAnnotation(actionAnnotation?.[\"@com.sap.vocabularies.UI.v1.Critical\"]);\n\n\treturn {\n\t\tenablePath: enablePath,\n\t\tisConfirmationRequired: isConfirmationRequired\n\t};\n}\n\n/**\n * Get the metadata annotation info for OData V2 model\n *\n * @param dataField\n * @param metaModel\n * @returns\n */\nfunction getMetadataAnnotationInfoV2(dataField: DataField, metaModel: V2ODataMetaModel) {\n\tconst functionName: string = dataField.Action.String.split(\"/\")[1];\n\tconst functionImport = metaModel.getODataFunctionImport(functionName) as unknown as FunctionImport;\n\n\treturn {\n\t\tenablePath: functionImport?.[\"sap:applicable-path\"] || \"\",\n\t\tisConfirmationRequired: getCriticalValueFromAnnotation(functionImport?.[\"com.sap.vocabularies.Common.v1.IsActionCritical\"])\n\t};\n}\n\n/**\n * Gets the action parameters for OData V4 model\n * @param controlProperties The control properties\n * @param metaModel The meta model\n * @returns Action parameters\n */\nconst getActionParams = async function (controlProperties: ControlProperties, metaModel: V4ODataMetaModel) {\n\tconst { entitySet } = Application.getInstance().fetchDetails();\n\tconst titleKey = controlProperties.titleKey || \"\";\n\tconst actionVerb: string = titleKey.indexOf(\"(\") > -1 ? titleKey.split(\"(\")[0] : titleKey;\n\tconst actionValue = metaModel.getObject(`/${entitySet}/${actionVerb}`);\n\tlet actionType: string = titleKey.indexOf(\"(\") > -1 ? titleKey?.split(\"(\")[1] : \"\";\n\tactionType = actionType.indexOf(\")\") > -1 ? actionType.replace(\")\", \"\") : actionType;\n\n\t//Get action Parameters for unbound action\n\tif (actionValue?.$kind === \"ActionImport\" && actionValue?.$Action) {\n\t\tconst unBoundActions = metaModel.getObject(\"/\" + actionValue?.$Action);\n\t\tconst relatedUnboundAction = getRelatedUnboundActions(unBoundActions);\n\t\treturn getActionParameterInfo(relatedUnboundAction[0], actionVerb);\n\t}\n\n\t//Get action Parameters for Bound actions\n\tconst relatedBoundAction = getRelatedBoundAction(actionValue, actionType);\n\n\tif (relatedBoundAction?.length && relatedBoundAction[0]?.$Parameter != null && relatedBoundAction[0]?.$Parameter.length > 1) {\n\t\treturn await getActionParameterInfo(relatedBoundAction[0], actionVerb, true);\n\t}\n};\n\n/**\n * Get the action verb for OData V4 model\n * @param controlProperties The control properties\n * @param metaModel The meta model\n * @returns Returns the action string\n */\nfunction getActionVerb(controlProperties: ControlProperties, metaModel: V4ODataMetaModel) {\n\tconst titleKey = controlProperties.titleKey || \"\";\n\tconst actionVerb = titleKey.indexOf(\"(\") > -1 ? titleKey.split(\"(\")[0] : titleKey;\n\tconst actionValue = metaModel.getObject(\"/\" + actionVerb) || [];\n\tlet actionType: string = titleKey.indexOf(\"(\") > -1 ? titleKey.split(\"(\")[1] : \"\";\n\tactionType = actionType.indexOf(\")\") > -1 ? actionType.replace(\")\", \"\") : actionType;\n\n\t//Get action string for unbound action\n\tif (actionValue?.$kind === \"ActionImport\" && actionValue?.$Action) {\n\t\treturn titleKey?.split(\"/\")[1];\n\t}\n\n\tconst relatedBoundAction = getRelatedBoundAction(actionValue, actionType);\n\t//Get action string for bound action\n\tif (relatedBoundAction?.length) {\n\t\treturn actionVerb;\n\t}\n\n\treturn actionVerb;\n}\n\n/**\n * Get the function import info for OData V2 model's action\n *\n * @param controlProperties The control properties\n * @param metaModel The meta model\n * @returns Functionimport info\n */\nfunction getFunctionImportInfo(controlProperties: ControlProperties, metaModel: V2ODataMetaModel) {\n\tconst { entitySet } = Application.getInstance().fetchDetails();\n\tconst functionName: string = controlProperties.titleKey;\n\tconst functionImport = metaModel.getODataFunctionImport(functionName) as unknown as FunctionImport;\n\tconst oContextObject = getDialogModel().getProperty(\"/configuration/$data\");\n\tconst entitySetInfo = metaModel.getODataEntitySet(entitySet) as EntitySet;\n\tconst entityType = metaModel.getODataEntityType(entitySetInfo?.entityType) as EntityType;\n\tconst mKeyProperties: KeyMap = getPropertyKeys(entityType);\n\tconst oSkipProperties: SkipProperty = {};\n\tconst mActionParams = {\n\t\tparameterData: {},\n\t\tadditionalParameters: []\n\t} as ParametersInfoV2;\n\n\tfunctionImport?.parameter?.forEach(function (importParameter: FunctionImportParameter) {\n\t\taddParameterLabel(importParameter, entityType, metaModel);\n\n\t\tconst parameterName: string = importParameter?.name || \"\";\n\t\tconst isKey = !!mKeyProperties[parameterName];\n\t\tlet parameterValue;\n\n\t\tif (oContextObject?.hasOwnProperty(parameterName)) {\n\t\t\tparameterValue = oContextObject[parameterName];\n\t\t} else if (isKey && oContextObject && functionImport[\"sap:action-for\"]) {\n\t\t\t// parameter is key but not part of the current projection - raise error\n\t\t\tLog.error(\"Key parameter of action not found in current context: \" + parameterName);\n\t\t\tthrow new Error(\"Key parameter of action not found in current context: \" + parameterName);\n\t\t}\n\n\t\tmActionParams.parameterData[parameterName] = parameterValue;\n\n\t\tconst skip = !!oSkipProperties[parameterName];\n\t\tif (!skip && (!isKey || !functionImport[\"sap:action-for\"]) && importParameter.mode.toUpperCase() == \"IN\") {\n\t\t\t// offer as optional parameter with default value from context\n\t\t\tmActionParams.additionalParameters.push(importParameter);\n\t\t}\n\t});\n\n\treturn {\n\t\tmActionParams: mActionParams,\n\t\tfunctionImport: functionImport\n\t};\n}\n\n/**\n * Get the property keys for the entity type\n * @param entityType The entity type\n * @returns The property keys map\n */\nconst getPropertyKeys = function (entityType: EntityType) {\n\tconst oKeyMap: KeyMap = {};\n\n\tentityType.key.propertyRef.forEach((property: Property) => {\n\t\tif (property.name) {\n\t\t\toKeyMap[property.name] = true;\n\t\t}\n\t});\n\n\treturn oKeyMap;\n};\n\n/**\n * Adds the parameter label to the entity type property\n *\n * @param parameter The Action parameter\n * @param entityType The entity type\n * @param metaModel The meta model\n */\nconst addParameterLabel = function (parameter: FunctionImportParameter, entityType: EntityType, metaModel: V2ODataMetaModel) {\n\tif (entityType && parameter && !parameter[\"com.sap.vocabularies.Common.v1.Label\"]) {\n\t\tconst property = metaModel.getODataProperty(entityType, parameter.name, false) as Property;\n\t\tif (property && property[\"com.sap.vocabularies.Common.v1.Label\"]) {\n\t\t\t// copy label from property to parameter with same name as default if no label is set for function import parameter\n\t\t\tparameter[\"com.sap.vocabularies.Common.v1.Label\"] = property[\"com.sap.vocabularies.Common.v1.Label\"];\n\t\t}\n\t}\n};\n\n/**\n *\n * Returns the service URL, valueListPropertyPath, descriptionPath for OData V2 model using the value list parameters\n *\n * @param serviceUrlPrefix\n * @param valueListParameters\n * @returns\n */\nfunction getParameterConfigFromValueList(serviceUrlPrefix: string, valueListParameters: ValueListParameter[]) {\n\tconst selectProps: Array<string> = [];\n\tlet valueListPropertyPath = \"\",\n\t\tdescriptionPath = \"\";\n\n\tvalueListParameters.forEach((valueListParameter) => {\n\t\tconst valueListProperty = valueListParameter?.ValueListProperty?.String;\n\t\tif (valueListProperty) {\n\t\t\tselectProps.push(valueListProperty);\n\t\t\tdescriptionPath =\n\t\t\t\tvalueListParameter?.RecordType === \"com.sap.vocabularies.Common.v1.ValueListParameterDisplayOnly\"\n\t\t\t\t\t? valueListProperty\n\t\t\t\t\t: descriptionPath;\n\t\t\tvalueListPropertyPath =\n\t\t\t\tvalueListParameter?.RecordType === \"com.sap.vocabularies.Common.v1.ValueListParameterInOut\"\n\t\t\t\t\t? valueListProperty\n\t\t\t\t\t: valueListPropertyPath;\n\t\t}\n\t});\n\n\tconst serviceUrl = `${serviceUrlPrefix}?$select=${selectProps.join(\",\")}`;\n\n\treturn {\n\t\tserviceUrl,\n\t\tvalueListPropertyPath,\n\t\tdescriptionPath\n\t};\n}\n\n/**\n *\n * Get the action parameter configuration for OData V2 model\n *\n * @param parameter\n * @returns The action parameter configuration for OData V2 model\n */\nexport const getActionParameterConfigurationV2 = async function (parameter: FunctionImportParameter) {\n\tconst actionParameterConfig = {\n\t\tserviceUrl: \"\",\n\t\tvalue: \"\",\n\t\tentitySet: \"\",\n\t\ttitle: \"\"\n\t};\n\n\tif (!parameter) {\n\t\treturn actionParameterConfig;\n\t}\n\n\tconst ValueListAnnotation = parameter?.[\"com.sap.vocabularies.Common.v1.ValueList\"];\n\tconst valueListParameters = ValueListAnnotation?.Parameters as ValueListParameter[];\n\tconst entitySetName = ValueListAnnotation?.CollectionPath?.String;\n\n\tif (entitySetName) {\n\t\tconst { rootComponent } = Application.getInstance().fetchDetails();\n\t\tconst { serviceUrl, valueListPropertyPath, descriptionPath } = getParameterConfigFromValueList(\n\t\t\t`${(rootComponent.getModel() as any)?.sServiceUrl}/${entitySetName}`,\n\t\t\tvalueListParameters\n\t\t);\n\n\t\tlet textArrangementType = \"TextOnly\";\n\n\t\tif (parameter?.[\"com.sap.vocabularies.UI.v1.TextArrangement\"]) {\n\t\t\ttextArrangementType = parameter[\"com.sap.vocabularies.UI.v1.TextArrangement\"]?.EnumMember?.split(\"/\")[1];\n\t\t}\n\n\t\tconst actionParameterValue =\n\t\t\tvalueListPropertyPath && descriptionPath\n\t\t\t\t? getActionParameterValue(valueListPropertyPath, descriptionPath, textArrangementType)\n\t\t\t\t: \"${\" + valueListPropertyPath + \"}\";\n\n\t\tconst oDialogModel = getDialogModel() as JSONModel;\n\t\tconst data = oDialogModel.getProperty(\"/configuration/$data\");\n\t\tawait updateModelData(data, serviceUrl, entitySetName);\n\t\toDialogModel.setProperty(\"/configuration/$data\", data);\n\n\t\treturn {\n\t\t\tentitySet: entitySetName,\n\t\t\tserviceUrl: serviceUrl,\n\t\t\tvalue: actionParameterValue,\n\t\t\ttitle: \"${\" + valueListPropertyPath + \"}\"\n\t\t};\n\t}\n};\n"],"mappings":"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","ignoreList":[]}