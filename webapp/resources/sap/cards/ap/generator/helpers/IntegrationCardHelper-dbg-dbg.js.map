{"version":3,"file":"IntegrationCardHelper-dbg-dbg.js","names":["sap","ui","define","sap_cards_ap_common_odata_ODataUtils","sap_cards_ap_generator_helpers_NavigationProperty","sap_cards_ap_generator_odata_v2_MetadataAnalyzer","sap_cards_ap_generator_odata_v4_MetadataAnalyzer","VersionInfo","CoreElement","V2OdataUtils","V4ODataUtils","___odata_ODataUtils","___pages_Application","___types_CommonTypes","___utils_CommonUtils","___Batch","___I18nHelper","___PropertyExpression","_iteratorSymbol","Symbol","iterator","_settle","pact","state","value","s","_Pact","v","o","bind","then","observer","prototype","onFulfilled","onRejected","result","callback","e","_this","_isSettledPact","thenable","_forTo","array","body","check","i","reject","_cycle","length","enhanceManifestWithInsights","mCardManifest","rootComponent","Promise","resolve","sapAppId","getManifestEntry","id","load","library","_VersionInfo$load","sapCoreVersionInfo","templateName","parentAppId","cardType","versions","ui5","version","buildTimestamp","_forOf","target","step","next","done","return","_fixup","TypeError","values","push","handleSingleProperty","_catch","recover","isSingleKeyWithoutAssignment","getNavigationPropertiesWithLabel","getPropertyReference","getPropertyReferenceKey","getDataType","isODataV4Model","Application","ODataModelVersion","ColorIndicator","extractValueWithoutBooleanExprBinding","getColorForGroup","hasBooleanBindingExpression","updateManifestWithExpandQueryParams","updateManifestWithSelectQueryParams","getYesAndNoTextValues","resolveI18nTextFromResourceModel","extractPathExpressionWithoutUOM","extractPathWithoutUOM","extractPropertyConfigurationWithoutTextArrangement","getTextArrangementFromCardManifest","hasFormatter","isExpression","isI18nExpression","updateAndGetSelectedFormatters","manifest","formatterConfigurationFromCardManifest","createInitialManifest","props","title","subTitle","description","service","serviceModel","entitySetName","entitySetWithObjectContext","data","bODataV4","formatDataForV2","dataPath","dataPathHeader","propertyReferenceKeys","entityKeyPropertiesParameters","yesText","noText","forEach","keyProp","type","name","entityKeyProperties","map","_version","i18n","applicationVersion","technology","icons","icon","extension","configuration","parameters","_contentSelectQuery","join","_headerSelectQuery","_contentExpandQuery","_headerExpandQuery","_entitySet","_yesText","_noText","destinations","defaultUrl","csrfTokens","token1","request","url","method","headers","batch","header","getHeaderBatchUrl","Accept","retryAfter","content","getContentBatchUrl","path","unitOfMeasurement","mainIndicator","number","unit","groups","contentDensities","compact","cozy","dependencies","libs","lazy","getObjectPageContext","entitySet","getInstance","fetchDetails","appModel","getModel","contextParameters","keyProperties","property","parameter","formatLiteral","propertyType","formatValue","getCurrentCardManifest","renderCardPreview","newManifest","oModel","oCard","getElementById","setBaseUrl","setManifest","refresh","updateCardGroups","configurationGroups","getProperty","advancedPanelCriticallity","items","filter","configurationItem","matchedCriticallity","columnItem","navigationProperty","propertyKeyForId","updatedColorState","criticality","criticalityValue","activeCalculation","item","label","showStateIcon","hasActions","actions","actionType","resolvePropertyLabelFromExpression","resourceModel","properties","propertyPath","find","labelWithValue","formatterExpression","selectedFormatter","handleFormatter","extractKeyValue","keyValueStr","rawKey","rawValue","split","cleanedValue","replace","updateDataWithProperties","prop","key","startIndex","indexOf","endIndex","keySegment","slice","getRootComponent","keyReference","resolvedKey","getMainIndicator","mManifest","mainIndicatorKey","trendOptions","referenceValue","downDifference","upDifference","criticalityOptions","updateCriticalityBasedOnGroups","mainIndicatorStatusKey","mainIndicatorNavigationSelectedKey","navigationValue","formatterExpressions","trend","trendValue","regex","match","criticalityConfig","updateCriticalityOptions","includes","group","criticallityState","getCriticallityStateForGroup","navProp","itemExists","some","option","None","getSideIndicators","sideIndicators","targetValue","targetUnit","deviationValue","deviationUnit","targetIndicator","deviationIndicator","formatter","f","getGroupItemValue","getCardGroups","groupItem","isEnabled","isNavigationEnabled","enhanceManifestWithConfigurationParameters","oDialogModel","sapCard","applicationInstance","odataModel","V4","configurationParameters","textArrangements","previewItems","getPreviewItems","propertyFormatting","arrangementType","arrangements","text","Object","keys","addQueryParametersToManifest","cardManifest","cardManifestCopy","JSON","parse","stringify","batchRequest","selectQueryHeader","selectQueryContent","expandQueryHeader","expandQueryContent","headerUrl","contentUrl","configParameters","updateConfigurationParametersWithKeyProperties","updateHeaderDataPath","isODataV4","headerData","updateExistingCardManifest","undefined","componentName","parseCard","integrationCardManifest","subtitle","uom","splice","textArrangementsFromCardManifest","headerUOM","mainIndicatorOptions","sideIndicatorOptions","getUpdatedUnitOfMeasures","unitOfMeasures","formatterConfigsWithUnit","updatedUnitOfMeasures","_temp3","matchingProperty","unitConfig","formatterParameterValue","formatterProperty","_temp2","updatedProperty","propertyKeyForDescription","index","_temp","handleFormatterWithoutMatchingProperty","updateCriticalityForNavProperty","mainIndicatorCriticalityOptions","_temp6","_temp5","criticalityName","_temp4","propertiesWithLabel","navigationKeyForId","navigationKeyForDescription","isNavigationForId","isNavigationForDescription","navigationalPropertiesForId","error","Error","_temp8","sourceProperty","_temp7","createCardManifest","appComponent","dialogModel","sapApp","cardSubtitle","oAppModel","serviceUrl","isNavigationalProperty","propertyName","model","navigationalProperties","navigationalProperty","mainIndicatorProperty","flatMap","__exports","__esModule"],"sources":["IntegrationCardHelper.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nimport { handleSingleProperty, isSingleKeyWithoutAssignment } from \"sap/cards/ap/common/odata/ODataUtils\";\nimport { getNavigationPropertiesWithLabel } from \"sap/cards/ap/generator/helpers/NavigationProperty\";\nimport { getPropertyReference } from \"sap/cards/ap/generator/odata/v2/MetadataAnalyzer\";\nimport { getPropertyReferenceKey } from \"sap/cards/ap/generator/odata/v4/MetadataAnalyzer\";\nimport VersionInfo from \"sap/ui/VersionInfo\";\nimport Component from \"sap/ui/core/Component\";\nimport CoreElement from \"sap/ui/core/Element\";\nimport Card, {\n\tCardConfigParameters,\n\tCardManifest,\n\tGroup,\n\tGroupItems,\n\tObjectContent,\n\tPropertyFormattingParameters\n} from \"sap/ui/integration/widgets/Card\";\nimport type JSONModel from \"sap/ui/model/json/JSONModel\";\nimport V2OdataUtils from \"sap/ui/model/odata/ODataUtils\";\nimport { default as V2ODataModel } from \"sap/ui/model/odata/v2/ODataModel\";\nimport { default as V4ODataModel } from \"sap/ui/model/odata/v4/ODataModel\";\nimport V4ODataUtils from \"sap/ui/model/odata/v4/ODataUtils\";\nimport ResourceModel from \"sap/ui/model/resource/ResourceModel\";\nimport { ArrangementOptions } from \"../app/controls/ArrangementsEditor\";\nimport { PropertyInfoMap } from \"../odata/ODataTypes\";\nimport { getDataType, isODataV4Model } from \"../odata/ODataUtils\";\nimport { Application, LibVersionInfo, ODataModelVersion } from \"../pages/Application\";\nimport { ColorIndicator } from \"../types/CommonTypes\";\nimport type { UnitOfMeasures } from \"../types/PropertyTypes\";\nimport { extractValueWithoutBooleanExprBinding, getColorForGroup, hasBooleanBindingExpression } from \"../utils/CommonUtils\";\nimport { updateManifestWithExpandQueryParams, updateManifestWithSelectQueryParams } from \"./Batch\";\nimport type { CriticalityOptions, SideIndicatorOptions, TrendOptions } from \"./CardGeneratorModel\";\nimport type { FormatterConfiguration, FormatterConfigurationMap } from \"./Formatter\";\nimport { getYesAndNoTextValues, resolveI18nTextFromResourceModel } from \"./I18nHelper\";\nimport {\n\textractPathExpressionWithoutUOM,\n\textractPathWithoutUOM,\n\textractPropertyConfigurationWithoutTextArrangement,\n\tgetTextArrangementFromCardManifest,\n\thasFormatter,\n\tisExpression,\n\tisI18nExpression,\n\tupdateAndGetSelectedFormatters\n} from \"./PropertyExpression\";\n\nexport type ParsedManifest = {\n\ttitle: string;\n\tsubtitle: string;\n\theaderUOM: string;\n\tmainIndicatorOptions: {\n\t\tmainIndicatorStatusKey: string;\n\t\tcriticalityOptions: Array<object>;\n\t\tmainIndicatorNavigationSelectedKey: string;\n\t\tnavigationValue: string;\n\t\ttrendOptions: TrendOptions;\n\t};\n\tsideIndicatorOptions: SideIndicatorOptions;\n\tgroups: Array<object>;\n\tformatterConfigurationFromCardManifest: FormatterConfigurationMap;\n\ttextArrangementsFromCardManifest: Array<ArrangementOptions>;\n};\n\nexport type CriticalityOptionsPanel = CriticalityOptions[];\n\nlet manifest: CardManifest;\nconst formatterConfigurationFromCardManifest: FormatterConfigurationMap = [];\n\nexport function createInitialManifest(props: any) {\n\tconst {\n\t\ttitle,\n\t\tsubTitle,\n\t\tdescription,\n\t\tservice,\n\t\tserviceModel,\n\t\tsapAppId,\n\t\tsapCoreVersionInfo,\n\t\tentitySetName,\n\t\tentitySetWithObjectContext,\n\t\tdata\n\t} = props;\n\tconst bODataV4 = isODataV4Model(serviceModel);\n\tif (!bODataV4) {\n\t\tformatDataForV2(entitySetWithObjectContext, data);\n\t}\n\tconst dataPath = bODataV4 ? \"/content/\" : \"/content/d/\";\n\tconst dataPathHeader = bODataV4 ? \"/header/\" : \"/header/d/\";\n\tconst propertyReferenceKeys = bODataV4\n\t\t? getPropertyReferenceKey(serviceModel, entitySetName)\n\t\t: getPropertyReference(serviceModel, entitySetName);\n\tconst entityKeyPropertiesParameters: Record<string, { type: string; value: string | boolean }> = {};\n\n\tconst { yesText, noText } = getYesAndNoTextValues();\n\tpropertyReferenceKeys.forEach((keyProp) => {\n\t\tif (keyProp.type === \"Edm.Boolean\" && typeof data[keyProp.name] === \"string\") {\n\t\t\tdata[keyProp.name] = data[keyProp.name] === yesText;\n\t\t}\n\t\tentityKeyPropertiesParameters[keyProp.name] = {\n\t\t\ttype: getDataType(keyProp.type),\n\t\t\tvalue: data[keyProp.name]\n\t\t};\n\t});\n\n\tconst entityKeyProperties = propertyReferenceKeys.map((keyProp) => keyProp.name);\n\n\tmanifest = {\n\t\t_version: \"1.15.0\",\n\t\t\"sap.app\": {\n\t\t\tid: `${sapAppId}.cards.op.${entitySetName}`,\n\t\t\ttype: \"card\",\n\t\t\ti18n: \"../../../i18n/i18n.properties\",\n\t\t\ttitle: title,\n\t\t\tsubTitle: subTitle,\n\t\t\tdescription: description,\n\t\t\tapplicationVersion: {\n\t\t\t\tversion: \"1.0.0\"\n\t\t\t}\n\t\t},\n\t\t\"sap.ui\": {\n\t\t\ttechnology: \"UI5\",\n\t\t\ticons: {\n\t\t\t\ticon: \"sap-icon://switch-classes\"\n\t\t\t}\n\t\t},\n\t\t\"sap.card\": {\n\t\t\textension: \"module:sap/cards/ap/common/extensions/BaseIntegrationCardExtension\",\n\t\t\ttype: \"Object\",\n\t\t\tconfiguration: {\n\t\t\t\tparameters: {\n\t\t\t\t\t...entityKeyPropertiesParameters,\n\t\t\t\t\t_contentSelectQuery: {\n\t\t\t\t\t\tvalue: entityKeyProperties?.length ? `$select=${entityKeyProperties.join(\",\")}` : \"\"\n\t\t\t\t\t},\n\t\t\t\t\t_headerSelectQuery: {\n\t\t\t\t\t\tvalue: entityKeyProperties?.length ? `$select=${entityKeyProperties.join(\",\")}` : \"\"\n\t\t\t\t\t},\n\t\t\t\t\t_contentExpandQuery: {\n\t\t\t\t\t\tvalue: \"\"\n\t\t\t\t\t},\n\t\t\t\t\t_headerExpandQuery: {\n\t\t\t\t\t\tvalue: \"\"\n\t\t\t\t\t},\n\t\t\t\t\t_entitySet: {\n\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\tvalue: entitySetName\n\t\t\t\t\t},\n\t\t\t\t\t_yesText: {\n\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\tvalue: yesText\n\t\t\t\t\t},\n\t\t\t\t\t_noText: {\n\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\tvalue: noText\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tdestinations: {\n\t\t\t\t\tservice: {\n\t\t\t\t\t\tname: \"(default)\",\n\t\t\t\t\t\tdefaultUrl: \"/\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tcsrfTokens: {\n\t\t\t\t\ttoken1: {\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\trequest: {\n\t\t\t\t\t\t\t\turl: `{{destinations.service}}${service}`,\n\t\t\t\t\t\t\t\tmethod: \"HEAD\",\n\t\t\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t\t\t\"X-CSRF-Token\": \"Fetch\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tdata: {\n\t\t\t\trequest: {\n\t\t\t\t\turl: `{{destinations.service}}${service}/$batch`,\n\t\t\t\t\tmethod: \"POST\",\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t\"X-CSRF-Token\": \"{{csrfTokens.token1}}\",\n\t\t\t\t\t\t\"Accept-Language\": \"{{parameters.LOCALE}}\"\n\t\t\t\t\t},\n\t\t\t\t\tbatch: {\n\t\t\t\t\t\theader: {\n\t\t\t\t\t\t\tmethod: \"GET\",\n\t\t\t\t\t\t\turl: getHeaderBatchUrl(),\n\t\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t\tAccept: \"application/json\",\n\t\t\t\t\t\t\t\t\"Accept-Language\": \"{{parameters.LOCALE}}\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tretryAfter: 30\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcontent: {\n\t\t\t\t\t\t\tmethod: \"GET\",\n\t\t\t\t\t\t\turl: getContentBatchUrl(),\n\t\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t\tAccept: \"application/json\",\n\t\t\t\t\t\t\t\t\"Accept-Language\": \"{{parameters.LOCALE}}\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\theader: {\n\t\t\t\tdata: {\n\t\t\t\t\tpath: dataPathHeader\n\t\t\t\t},\n\t\t\t\ttype: \"Numeric\",\n\t\t\t\ttitle: title,\n\t\t\t\tsubTitle: subTitle,\n\t\t\t\tunitOfMeasurement: \"\",\n\t\t\t\tmainIndicator: {\n\t\t\t\t\tnumber: \"\",\n\t\t\t\t\tunit: \"\"\n\t\t\t\t}\n\t\t\t},\n\t\t\tcontent: {\n\t\t\t\tdata: {\n\t\t\t\t\tpath: dataPath\n\t\t\t\t},\n\t\t\t\tgroups: []\n\t\t\t}\n\t\t},\n\t\t\"sap.ui5\": {\n\t\t\t_version: \"1.1.0\",\n\t\t\tcontentDensities: {\n\t\t\t\tcompact: true,\n\t\t\t\tcozy: true\n\t\t\t},\n\t\t\tdependencies: {\n\t\t\t\tlibs: {\n\t\t\t\t\t\"sap.insights\": {\n\t\t\t\t\t\tlazy: false\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"sap.insights\": {\n\t\t\ttemplateName: \"ObjectPage\",\n\t\t\tparentAppId: sapAppId,\n\t\t\tcardType: \"LEAN_DT\",\n\t\t\tversions: {\n\t\t\t\tui5: sapCoreVersionInfo.version + \"-\" + sapCoreVersionInfo.buildTimestamp\n\t\t\t}\n\t\t}\n\t};\n\treturn manifest;\n}\n\nfunction getObjectPageContext() {\n\tconst { rootComponent, entitySet } = Application.getInstance().fetchDetails();\n\tconst appModel = rootComponent.getModel() as V2ODataModel | V4ODataModel;\n\tconst contextParameters: string[] = [];\n\tconst bODataV4 = isODataV4Model(appModel);\n\n\tif (bODataV4) {\n\t\tconst keyProperties = getPropertyReferenceKey(appModel as V4ODataModel, entitySet);\n\t\tkeyProperties.forEach((property) => {\n\t\t\tconst parameter = V4ODataUtils.formatLiteral(`{{parameters.${property.name}}}`, property.type);\n\t\t\tcontextParameters.push(`${property.name}=${parameter}`);\n\t\t});\n\t} else {\n\t\tconst keyProperties = getPropertyReference(appModel as V2ODataModel, entitySet);\n\t\tkeyProperties.forEach((property) => {\n\t\t\tlet parameter = \"\";\n\t\t\tif (property.type === \"Edm.DateTimeOffset\" || property.type === \"Edm.DateTime\") {\n\t\t\t\tconst propertyType = property.type === \"Edm.DateTimeOffset\" ? \"datetimeoffset\" : \"datetime\";\n\t\t\t\tparameter = propertyType + `'{{parameters.${property.name}}}'`;\n\t\t\t} else {\n\t\t\t\tparameter = V2OdataUtils.formatValue(`{{parameters.${property.name}}}`, property.type, true);\n\t\t\t}\n\t\t\tcontextParameters.push(`${property.name}=${parameter}`);\n\t\t});\n\t}\n\n\treturn contextParameters.join(\",\");\n}\n\nfunction getHeaderBatchUrl() {\n\treturn `{{parameters._entitySet}}(${getObjectPageContext()})?{{parameters._headerSelectQuery}}{{parameters._headerExpandQuery}}`;\n}\n\nfunction getContentBatchUrl() {\n\treturn `{{parameters._entitySet}}(${getObjectPageContext()})?{{parameters._contentSelectQuery}}{{parameters._contentExpandQuery}}`;\n}\n\nexport function getCurrentCardManifest(): CardManifest {\n\treturn manifest || {};\n}\n\n/**\n * Render integration card preview\n *\n * @param {CardManifest} newManifest\n */\nexport function renderCardPreview(newManifest: CardManifest, oModel?: JSONModel) {\n\tmanifest = { ...newManifest };\n\tupdateManifestWithSelectQueryParams(manifest);\n\toModel && updateManifestWithExpandQueryParams(manifest);\n\tconst oCard = CoreElement.getElementById(\"cardGeneratorDialog--cardPreview\") as Card;\n\tif (oCard) {\n\t\toCard.setBaseUrl(\"./\");\n\t\toCard.setManifest(manifest);\n\t\toCard.refresh();\n\t}\n}\n\nexport function updateCardGroups(oModel: JSONModel) {\n\tconst configurationGroups: Group[] = oModel.getProperty(\"/configuration/groups\");\n\tconst advancedPanelCriticallity = oModel?.getProperty(\"/configuration/mainIndicatorOptions/criticality\");\n\n\tconst groups = configurationGroups.map(function (configuration) {\n\t\tconst items = configuration?.items\n\t\t\t?.filter(function (configurationItem) {\n\t\t\t\treturn configurationItem.name;\n\t\t\t})\n\t\t\t.map((configurationItem) => {\n\t\t\t\tconst matchedCriticallity = advancedPanelCriticallity?.filter((columnItem: CriticalityOptions) => {\n\t\t\t\t\tif (configurationItem?.navigationProperty) {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t`${columnItem.name}/${columnItem?.propertyKeyForId}` ===\n\t\t\t\t\t\t\t`${configurationItem.name}/${configurationItem.navigationProperty}`\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\treturn columnItem.name === configurationItem.name;\n\t\t\t\t});\n\t\t\t\tlet updatedColorState;\n\t\t\t\tif (matchedCriticallity?.[0]?.criticality) {\n\t\t\t\t\tconst criticalityValue = matchedCriticallity[0]?.activeCalculation\n\t\t\t\t\t\t? matchedCriticallity[0]\n\t\t\t\t\t\t: matchedCriticallity[0]?.criticality;\n\t\t\t\t\tupdatedColorState = getColorForGroup(criticalityValue);\n\t\t\t\t}\n\t\t\t\tconst item: any = {\n\t\t\t\t\tlabel: configurationItem.label,\n\t\t\t\t\tvalue: configurationItem.value,\n\t\t\t\t\tname: configurationItem.name\n\t\t\t\t};\n\t\t\t\tif (updatedColorState) {\n\t\t\t\t\titem.state = updatedColorState;\n\t\t\t\t\titem.type = \"Status\";\n\t\t\t\t\titem.showStateIcon = true;\n\t\t\t\t}\n\t\t\t\tif (configurationItem.hasActions) {\n\t\t\t\t\titem[\"actions\"] = configurationItem.actions;\n\t\t\t\t\titem[\"hasActions\"] = configurationItem.hasActions;\n\t\t\t\t\titem[\"actionType\"] = configurationItem.actionType;\n\t\t\t\t}\n\t\t\t\treturn item;\n\t\t\t});\n\t\treturn {\n\t\t\ttitle: configuration.title,\n\t\t\titems: items ? items : []\n\t\t};\n\t});\n\t(manifest[\"sap.card\"].content as ObjectContent).groups = groups;\n\trenderCardPreview(manifest, oModel);\n}\n\n/**\n *  Resolves the card header properties from stored manifest\n *  - If path is a string, return the resolved i18n text\n * \t- If path is an expression, resolve the expression then return the labelWithValue of the property\n *  - If path is an expression with formatter, update the formatter configuration and return the labelWithValue of the property\n * @param path\n * @param resourceModel\n * @param properties\n * @returns\n */\nexport function resolvePropertyLabelFromExpression(path: string, resourceModel: ResourceModel, properties: PropertyInfoMap) {\n\tif (isI18nExpression(path)) {\n\t\treturn resolveI18nTextFromResourceModel(path, resourceModel);\n\t}\n\n\tif (isExpression(path) && !hasFormatter(path)) {\n\t\tlet propertyPath = \"\";\n\t\tif (hasBooleanBindingExpression(path)) {\n\t\t\tpropertyPath = extractValueWithoutBooleanExprBinding(path);\n\t\t} else {\n\t\t\tpropertyPath = extractPathWithoutUOM(path);\n\t\t}\n\t\treturn properties.find((property) => property.name === propertyPath)?.labelWithValue ?? \"\";\n\t}\n\n\tif (isExpression(path) && hasFormatter(path)) {\n\t\tconst formatterExpression = extractPathExpressionWithoutUOM(path);\n\t\tconst selectedFormatter = updateAndGetSelectedFormatters(formatterExpression);\n\t\thandleFormatter(selectedFormatter);\n\t\treturn properties.find((property) => property.name === selectedFormatter.property)?.labelWithValue ?? \"\";\n\t}\n\n\treturn path;\n}\n\n/**\n * The function formats the data for OData V2 applications containing the key parameters of type datetimeoffset and guid.\n * @param entitySetWithObjectContext\n * @param data\n */\nexport function formatDataForV2(entitySetWithObjectContext: string, data: Record<string, any>) {\n\tconst extractKeyValue = (keyValueStr: string): [string, any] => {\n\t\tconst [rawKey, rawValue] = keyValueStr.split(\"=\");\n\n\t\tif (rawValue === \"true\" || rawValue === \"false\") {\n\t\t\treturn [rawKey, rawValue === \"true\"];\n\t\t}\n\n\t\tconst cleanedValue = rawValue.replace(/guid|datetimeoffset|datetime|'*/g, \"\");\n\t\treturn [rawKey, cleanedValue];\n\t};\n\n\tconst updateDataWithProperties = (properties: string[]) => {\n\t\tfor (const prop of properties) {\n\t\t\tconst [key, value] = extractKeyValue(prop);\n\t\t\tdata[key] = value;\n\t\t}\n\t};\n\n\tconst startIndex = entitySetWithObjectContext.indexOf(\"(\");\n\tconst endIndex = entitySetWithObjectContext.indexOf(\")\");\n\tconst keySegment = entitySetWithObjectContext.slice(startIndex + 1, endIndex);\n\tconst keyProperties = keySegment.split(\",\");\n\n\tif (isSingleKeyWithoutAssignment(keyProperties)) {\n\t\tconst entitySetName = entitySetWithObjectContext.split(\"(\")[0];\n\t\tconst appModel = Application.getInstance().getRootComponent().getModel();\n\t\tconst keyReference = getPropertyReference(appModel as V2ODataModel, entitySetName);\n\t\tconst resolvedKey = handleSingleProperty(keyReference, keyProperties).join(\",\");\n\t\tconst [key, value] = extractKeyValue(resolvedKey);\n\t\tdata[key] = value;\n\t} else {\n\t\tupdateDataWithProperties(keyProperties);\n\t}\n}\n\nfunction getMainIndicator(mManifest: CardManifest) {\n\tconst mainIndicator = mManifest[\"sap.card\"].header.mainIndicator;\n\tlet mainIndicatorKey = \"\";\n\tlet trendOptions: TrendOptions = {\n\t\treferenceValue: \"\",\n\t\tdownDifference: \"\",\n\t\tupDifference: \"\"\n\t};\n\tconst criticalityOptions: CriticalityOptions[] = [];\n\tconst groups = (mManifest[\"sap.card\"].content as ObjectContent).groups;\n\tif (groups.length > 0) {\n\t\tupdateCriticalityBasedOnGroups(mManifest, criticalityOptions);\n\t}\n\n\tif (!mainIndicator || !mainIndicator.number) {\n\t\treturn {\n\t\t\tmainIndicatorStatusKey: \"\",\n\t\t\tmainIndicatorNavigationSelectedKey: \"\",\n\t\t\tcriticalityOptions,\n\t\t\tnavigationValue: \"\",\n\t\t\ttrendOptions\n\t\t};\n\t}\n\n\tconst { propertyPath, formatterExpression } = extractPropertyConfigurationWithoutTextArrangement(mainIndicator.number, mManifest);\n\tconst state = mainIndicator.state;\n\n\tif (formatterExpression.length) {\n\t\tconst formatterExpressions = formatterExpression.map(updateAndGetSelectedFormatters);\n\t\tformatterExpressions.forEach(handleFormatter);\n\t}\n\n\tif (isExpression(propertyPath) && !hasFormatter(propertyPath)) {\n\t\tif (hasBooleanBindingExpression(propertyPath)) {\n\t\t\tmainIndicatorKey = extractValueWithoutBooleanExprBinding(propertyPath);\n\t\t} else {\n\t\t\tmainIndicatorKey = extractPathWithoutUOM(propertyPath);\n\t\t}\n\t}\n\tif (mainIndicator.trend && mainIndicator.trend !== \"None\") {\n\t\tconst trendValue = mainIndicator.trend;\n\t\tconst regex = /\"referenceValue\":(\\d+),\"downDifference\":(\\d+),\"upDifference\":(\\d+)/;\n\t\tconst match = trendValue.match(regex);\n\n\t\tif (match) {\n\t\t\ttrendOptions = {\n\t\t\t\treferenceValue: match[1] || \"\",\n\t\t\t\tdownDifference: match[2] || \"\",\n\t\t\t\tupDifference: match[3] || \"\"\n\t\t\t};\n\t\t}\n\t}\n\n\tif (isExpression(propertyPath) && hasFormatter(propertyPath)) {\n\t\tconst formatterExpression = extractPathExpressionWithoutUOM(propertyPath);\n\t\tconst selectedFormatter = updateAndGetSelectedFormatters(formatterExpression);\n\t\thandleFormatter(selectedFormatter);\n\t\tmainIndicatorKey = selectedFormatter.property || \"\";\n\t}\n\tlet criticalityConfig: CriticalityOptions = {\n\t\tcriticality: \"\",\n\t\tname: \"\",\n\t\tactiveCalculation: false\n\t};\n\tif (state && hasFormatter(state)) {\n\t\tconst formatterExpression = extractPathExpressionWithoutUOM(state);\n\t\tconst selectedFormatter = updateAndGetSelectedFormatters(formatterExpression);\n\t\thandleFormatter(selectedFormatter);\n\t\tcriticalityConfig = {\n\t\t\tcriticality: \"{\" + selectedFormatter.property + \"}\",\n\t\t\tname: mainIndicatorKey,\n\t\t\tactiveCalculation: false\n\t\t};\n\t} else if (state && state !== \"None\") {\n\t\tcriticalityConfig = {\n\t\t\tcriticality: state,\n\t\t\tname: mainIndicatorKey,\n\t\t\tactiveCalculation: false\n\t\t};\n\t}\n\tif (criticalityConfig.name.length) {\n\t\tupdateCriticalityOptions(criticalityOptions, criticalityConfig);\n\t}\n\n\tlet mainIndicatorNavigationSelectedKey = \"\";\n\tlet mainIndicatorStatusKey = mainIndicatorKey;\n\tif (mainIndicatorKey.includes(\"/\")) {\n\t\tmainIndicatorStatusKey = mainIndicatorKey.split(\"/\")[0];\n\t\tmainIndicatorNavigationSelectedKey = mainIndicatorKey.split(\"/\")[1];\n\t}\n\treturn {\n\t\tmainIndicatorStatusKey,\n\t\tmainIndicatorNavigationSelectedKey,\n\t\tcriticalityOptions,\n\t\tnavigationValue: mainIndicatorKey,\n\t\ttrendOptions\n\t};\n}\n/**\n * Updates the criticality options based on the groups in the provided CardManifest.\n * @param {CardManifest} mManifest - The card manifest containing the groups and their items.\n * @param {CriticalityOptions[]} criticalityOptions - An array of criticality options to be updated.\n */\n\nfunction updateCriticalityBasedOnGroups(mManifest: CardManifest, criticalityOptions: CriticalityOptions[]) {\n\tconst groups = (mManifest[\"sap.card\"].content as ObjectContent).groups;\n\tgroups.forEach((group) => {\n\t\tgroup.items.forEach((item) => {\n\t\t\tif (item.state) {\n\t\t\t\tconst criticallityState = getCriticallityStateForGroup(item.state);\n\t\t\t\tconst regex = /\\/([^,}]+)/;\n\t\t\t\tconst match = item.value.match(regex);\n\t\t\t\tlet navProp;\n\t\t\t\tif (match) {\n\t\t\t\t\tnavProp = match[1];\n\t\t\t\t}\n\t\t\t\tconst criticalityConfig: CriticalityOptions = {\n\t\t\t\t\tcriticality: criticallityState,\n\t\t\t\t\tname: navProp ? `${item.name}/${navProp}` : item.name,\n\t\t\t\t\tactiveCalculation: false\n\t\t\t\t};\n\t\t\t\tupdateCriticalityOptions(criticalityOptions, criticalityConfig);\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Update the criticality options\n * @param criticalityOptions\n * @param criticalityConfig\n */\nfunction updateCriticalityOptions(criticalityOptions: CriticalityOptions[], criticalityConfig: CriticalityOptions) {\n\tconst itemExists = criticalityOptions.some((option) => option.name === criticalityConfig.name);\n\tif (!itemExists) {\n\t\tcriticalityOptions.push(criticalityConfig);\n\t}\n}\n\n/**\n * Gets the criticality state for a group based on the provided state string.\n *\n * This function checks if the state has a formatter associated with it.\n * If so, it processes the formatter and returns its property in a specific format.\n * If the state corresponds to a known criticality state, it returns the corresponding\n * color indicator. If the state is not recognized, it defaults to the 'None' indicator.\n *\n * @param {string} state - The state string to evaluate for criticality.\n * @returns {string} - The criticality state as a string based on the ColorIndicator enum.\n *                    Possible return values include:\n *                    - ColorIndicator.Error\n *                    - ColorIndicator.Success\n *                    - ColorIndicator.None\n *                    - ColorIndicator.Warning\n */\nexport function getCriticallityStateForGroup(state: string) {\n\tif (state && hasFormatter(state)) {\n\t\tconst formatterExpression = extractPathExpressionWithoutUOM(state);\n\t\tconst selectedFormatter = updateAndGetSelectedFormatters(formatterExpression);\n\t\thandleFormatter(selectedFormatter);\n\t\treturn \"{\" + selectedFormatter.property + \"}\";\n\t}\n\n\tif (state && state in ColorIndicator) {\n\t\treturn ColorIndicator[state as keyof typeof ColorIndicator];\n\t}\n\n\treturn ColorIndicator.None;\n}\n\nfunction getSideIndicators(mManifest: CardManifest): SideIndicatorOptions {\n\tconst sideIndicators = mManifest[\"sap.card\"].header.sideIndicators || [];\n\n\tif (sideIndicators.length === 0 || !sideIndicators[0].number) {\n\t\treturn {\n\t\t\ttargetValue: \"\",\n\t\t\ttargetUnit: \"\",\n\t\t\tdeviationValue: \"\",\n\t\t\tdeviationUnit: \"\"\n\t\t};\n\t}\n\n\tconst [targetIndicator = {}, deviationIndicator = {}] = sideIndicators;\n\tconst { number: targetValue = \"\", unit: targetUnit = \"\" } = targetIndicator;\n\n\tconst { number: deviationValue = \"\", unit: deviationUnit = \"\" } = deviationIndicator;\n\n\treturn {\n\t\ttargetValue,\n\t\ttargetUnit,\n\t\tdeviationValue,\n\t\tdeviationUnit\n\t};\n}\n\nfunction handleFormatter(formatter: FormatterConfiguration) {\n\tif (\n\t\tformatterConfigurationFromCardManifest.length === 0 ||\n\t\t!formatterConfigurationFromCardManifest.find((f) => f.property === formatter.property)\n\t) {\n\t\tformatterConfigurationFromCardManifest.push({ ...formatter });\n\t}\n}\n\nfunction getGroupItemValue(value: string, mManifest: CardManifest) {\n\tconst { formatterExpression } = extractPropertyConfigurationWithoutTextArrangement(value, mManifest);\n\n\tif (formatterExpression.length) {\n\t\tconst formatterExpressions = formatterExpression.map(updateAndGetSelectedFormatters);\n\t\tformatterExpressions.forEach(handleFormatter);\n\t}\n\n\treturn value;\n}\n\nfunction getCardGroups(mManifest: CardManifest, resourceModel: ResourceModel) {\n\tconst groups = (mManifest[\"sap.card\"].content as ObjectContent).groups;\n\tif (groups.length === 0) {\n\t\treturn [];\n\t}\n\treturn groups.map((group) => {\n\t\treturn {\n\t\t\ttitle: resolveI18nTextFromResourceModel(group.title, resourceModel),\n\t\t\titems: group.items.map((item) => {\n\t\t\t\tconst groupItem: GroupItems = {\n\t\t\t\t\tlabel: resolveI18nTextFromResourceModel(item.label, resourceModel),\n\t\t\t\t\tvalue: getGroupItemValue(item.value, mManifest),\n\t\t\t\t\tname: item.name,\n\t\t\t\t\tisEnabled: true,\n\t\t\t\t\tisNavigationEnabled: false\n\t\t\t\t};\n\t\t\t\tif (item.hasActions) {\n\t\t\t\t\tgroupItem.actions = item.actions;\n\t\t\t\t\tgroupItem.hasActions = item.hasActions;\n\t\t\t\t\tgroupItem.actionType = item.actionType;\n\t\t\t\t}\n\t\t\t\tif (item.state) {\n\t\t\t\t\tgroupItem.type = \"Status\";\n\t\t\t\t\tgroupItem.state = item.state;\n\t\t\t\t}\n\t\t\t\treturn groupItem;\n\t\t\t})\n\t\t};\n\t});\n}\n\n/**\n * This is a fix for cards which are generated without \"sap.insights\" manifest property or with cardType as \"DT\".\n *  - When the card is regenerated \"sap.insight\" property will be set/updated existing in the manifest.\n *\n * @param mCardManifest\n * @param rootComponent\n * @returns\n */\nexport async function enhanceManifestWithInsights(mCardManifest: CardManifest | undefined, rootComponent: Component) {\n\tif (!mCardManifest) {\n\t\treturn;\n\t}\n\tconst sapAppId = rootComponent.getManifestEntry(\"sap.app\").id;\n\tconst sapCoreVersionInfo = (await VersionInfo.load({\n\t\tlibrary: \"sap.ui.core\"\n\t})) as LibVersionInfo;\n\n\tmCardManifest[\"sap.insights\"] = {\n\t\ttemplateName: \"ObjectPage\",\n\t\tparentAppId: sapAppId,\n\t\tcardType: \"LEAN_DT\",\n\t\tversions: {\n\t\t\tui5: sapCoreVersionInfo.version + \"-\" + sapCoreVersionInfo.buildTimestamp\n\t\t}\n\t};\n}\n\n/**\n * Enhance the card manifest configuration parameters with property formatting configuration\n * \t- add text arrangements properties\n *  - Updates the card manifest configuration parameters by adding \"_yesText\" and \"_noText\" parameters\n *    with predefined string values referencing i18n keys.\n *\n * @param {CardManifest} The card manifest object to be updated. It is expected to have\n *    \"sap.card\" property with a configuration containing parameters.\n * @param {JSONModel}\n */\nexport function enhanceManifestWithConfigurationParameters(mCardManifest: CardManifest, oDialogModel: JSONModel) {\n\tconst sapCard = mCardManifest[\"sap.card\"];\n\tconst applicationInstance = Application.getInstance();\n\tconst rootComponent = applicationInstance.getRootComponent();\n\tconst appModel = rootComponent.getModel();\n\tconst { odataModel, entitySet } = applicationInstance.fetchDetails();\n\tconst keyProperties: string[] = [];\n\n\tif (odataModel === ODataModelVersion.V4) {\n\t\tgetPropertyReferenceKey(appModel as V4ODataModel, entitySet).forEach((property) => keyProperties.push(property.name));\n\t} else {\n\t\tgetPropertyReference(appModel as V2ODataModel, entitySet).forEach((property) => keyProperties.push(property.name));\n\t}\n\n\tif (!sapCard.configuration) {\n\t\tsapCard.configuration = {\n\t\t\tparameters: {}\n\t\t};\n\t}\n\n\tif (!sapCard.configuration?.parameters) {\n\t\tsapCard.configuration.parameters = {};\n\t}\n\n\tconst configurationParameters = sapCard.configuration?.parameters as CardConfigParameters;\n\tconfigurationParameters[\"_propertyFormatting\"] = {};\n\tconst textArrangements = oDialogModel.getProperty(\"/configuration/advancedFormattingOptions/textArrangements\") as ArrangementOptions[];\n\tconst previewItems = getPreviewItems(oDialogModel);\n\tconst propertyFormatting: PropertyFormattingParameters = {};\n\ttextArrangements.forEach(({ name, arrangementType, value }) => {\n\t\tif (name && previewItems.includes(name) && arrangementType && value) {\n\t\t\tpropertyFormatting[name] = {\n\t\t\t\tarrangements: {\n\t\t\t\t\ttext: {\n\t\t\t\t\t\t[arrangementType]: true,\n\t\t\t\t\t\tpath: value\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t});\n\tif (Object.keys(propertyFormatting).length > 0) {\n\t\tconfigurationParameters[\"_propertyFormatting\"] = propertyFormatting;\n\t}\n\n\tconfigurationParameters[\"_mandatoryODataParameters\"] = {\n\t\tvalue: keyProperties\n\t};\n\n\tconfigurationParameters[\"_entitySet\"] = {\n\t\tvalue: entitySet,\n\t\ttype: \"string\"\n\t};\n\n\tkeyProperties.forEach((keyProp) => {\n\t\tconfigurationParameters[keyProp] = {\n\t\t\ttype: getDataType(keyProp),\n\t\t\tvalue: \"\"\n\t\t};\n\t});\n\n\tconfigurationParameters[\"_yesText\"] = {\n\t\ttype: \"string\",\n\t\tvalue: \"{{CardGeneratorValue_Yes}}\"\n\t};\n\n\tconfigurationParameters[\"_noText\"] = {\n\t\ttype: \"string\",\n\t\tvalue: \"{{CardGeneratorValue_No}}\"\n\t};\n}\n\n/**\n * Adds query parameters to the URLs in the manifest's batch request.\n *\n * @param {CardManifest} cardManifest - The card manifest.\n * @returns {CardManifest} A copy of the original card manifest with query parameters added to the URLs.\n */\n\nexport const addQueryParametersToManifest = (cardManifest?: CardManifest): CardManifest => {\n\tconst cardManifestCopy = JSON.parse(JSON.stringify(cardManifest));\n\tconst batchRequest = cardManifestCopy[\"sap.card\"].data?.request?.batch;\n\tconst selectQueryHeader = \"?{{parameters._headerSelectQuery}}\";\n\tconst selectQueryContent = \"?{{parameters._contentSelectQuery}}\";\n\tconst expandQueryHeader = \"{{parameters._headerExpandQuery}}\";\n\tconst expandQueryContent = \"{{parameters._contentExpandQuery}}\";\n\tconst headerUrl = batchRequest?.header?.url;\n\tconst contentUrl = batchRequest?.content?.url;\n\n\tif (headerUrl?.indexOf(selectQueryHeader) === -1) {\n\t\tbatchRequest.header.url = `${batchRequest.header.url}${selectQueryHeader}${expandQueryHeader}`;\n\t} else if (headerUrl?.indexOf(expandQueryHeader) === -1) {\n\t\tbatchRequest.header.url = `${batchRequest.header.url}${expandQueryHeader}`;\n\t}\n\tif (contentUrl?.indexOf(selectQueryContent) === -1) {\n\t\tbatchRequest.content.url = `${batchRequest.content.url}${selectQueryContent}${expandQueryContent}`;\n\t} else if (contentUrl?.indexOf(expandQueryContent) === -1) {\n\t\tbatchRequest.content.url = `${batchRequest.content.url}${expandQueryContent}`;\n\t}\n\n\tconst configParameters = cardManifestCopy[\"sap.card\"].configuration?.parameters;\n\tconfigParameters._contentSelectQuery = configParameters?._contentSelectQuery ?? { value: \"\" };\n\tconfigParameters._headerSelectQuery = configParameters?._headerSelectQuery ?? { value: \"\" };\n\tconfigParameters._contentExpandQuery = configParameters?._contentExpandQuery ?? { value: \"\" };\n\tconfigParameters._headerExpandQuery = configParameters?._headerExpandQuery ?? { value: \"\" };\n\n\treturn cardManifestCopy;\n};\n\nconst updateConfigurationParametersWithKeyProperties = (cardManifest: CardManifest, data: Record<string, any>) => {\n\tconst applicationInstance = Application.getInstance();\n\tconst rootComponent = applicationInstance.getRootComponent();\n\tconst appModel = rootComponent.getModel();\n\tconst { odataModel, entitySet, entitySetWithObjectContext } = applicationInstance.fetchDetails();\n\tconst bODataV4 = isODataV4Model(appModel);\n\tif (!bODataV4) {\n\t\tformatDataForV2(entitySetWithObjectContext, data);\n\t}\n\tconst propertyReferenceKeys =\n\t\todataModel === ODataModelVersion.V4\n\t\t\t? getPropertyReferenceKey(appModel as V4ODataModel, entitySet)\n\t\t\t: getPropertyReference(appModel as V2ODataModel, entitySet);\n\n\tconst sapCard = cardManifest[\"sap.card\"];\n\tif (!sapCard.configuration) {\n\t\tsapCard.configuration = {\n\t\t\tparameters: {}\n\t\t};\n\t}\n\n\tif (!sapCard.configuration?.parameters) {\n\t\tsapCard.configuration.parameters = {};\n\t}\n\tconst configurationParameters = sapCard.configuration?.parameters as CardConfigParameters;\n\n\tconfigurationParameters[\"_entitySet\"] = {\n\t\tvalue: entitySet,\n\t\ttype: \"string\"\n\t};\n\tconst { yesText, noText } = getYesAndNoTextValues();\n\tconfigurationParameters[\"_yesText\"] = {\n\t\ttype: \"string\",\n\t\tvalue: yesText\n\t};\n\tconfigurationParameters[\"_noText\"] = {\n\t\ttype: \"string\",\n\t\tvalue: noText\n\t};\n\tpropertyReferenceKeys.forEach((keyProp) => {\n\t\tif (keyProp.type === \"Edm.Boolean\" && typeof data[keyProp.name] === \"string\") {\n\t\t\tdata[keyProp.name] = data[keyProp.name] === yesText;\n\t\t}\n\t\tconfigurationParameters[keyProp.name] = {\n\t\t\ttype: getDataType(keyProp.type),\n\t\t\tvalue: data[keyProp.name]\n\t\t};\n\t});\n};\n\n/**\n * Updates the data path of the card header in the provided card manifest by reference.\n *\n * @param {CardManifest} cardManifest - The card manifest object that contains the header data.\n */\nfunction updateHeaderDataPath(cardManifest: CardManifest, isODataV4: boolean) {\n\tconst headerData = cardManifest[\"sap.card\"].header.data;\n\tconst dataPathHeader = isODataV4 ? \"/header/\" : \"/header/d/\";\n\n\tif (headerData?.path) {\n\t\theaderData.path = dataPathHeader;\n\t}\n}\n\n/**\n * This method is used to perform updates on existing integration card manifest.\n * Updates will include adding,\n * \t- Query parameters to the URLs in the target manifest's batch request.\n * \t- sap.app.id to the manifest.\n * @param cardManifest\n */\nexport const updateExistingCardManifest = (data: Record<string, any>, cardManifest?: CardManifest): CardManifest | undefined => {\n\tif (!cardManifest) {\n\t\treturn cardManifest;\n\t}\n\n\tcardManifest = addQueryParametersToManifest(cardManifest);\n\tconst batch = cardManifest[\"sap.card\"].data.request?.batch;\n\n\tif (batch !== undefined) {\n\t\tbatch.header.url = getHeaderBatchUrl();\n\t\tbatch.content.url = getContentBatchUrl();\n\t}\n\tconst { componentName, odataModel, entitySet } = Application.getInstance().fetchDetails();\n\tcardManifest[\"sap.app\"].id = `${componentName}.cards.op.${entitySet}`;\n\tcardManifest[\"sap.app\"].i18n = cardManifest[\"sap.app\"].i18n || \"../../../i18n/i18n.properties\";\n\tupdateConfigurationParametersWithKeyProperties(cardManifest, data);\n\tconst isODataV4 = odataModel === ODataModelVersion.V4;\n\tupdateHeaderDataPath(cardManifest, isODataV4);\n\treturn cardManifest;\n};\n\n/**\n * Parses the integration card manifest and extracts relevant information.\n *\n * @param {CardManifest} integrationCardManifest - The manifest of the integration card to be parsed.\n * @param {ResourceModel} resourceModel - The resource model used for localization.\n * @param {PropertyInfoMap} properties - The map of properties to resolve labels from expressions.\n * @returns {ParsedManifest} The parsed manifest containing title, subtitle, header unit of measurement, main indicator options, side indicator options, groups, formatter configuration, and text arrangements.\n */\nexport function parseCard(\n\tintegrationCardManifest: CardManifest,\n\tresourceModel: ResourceModel,\n\tproperties: PropertyInfoMap\n): ParsedManifest {\n\tconst title = integrationCardManifest[\"sap.card\"].header.title ?? \"\";\n\tconst subtitle = integrationCardManifest[\"sap.card\"].header.subTitle ?? \"\";\n\tconst uom = integrationCardManifest[\"sap.card\"].header.unitOfMeasurement ?? \"\";\n\tformatterConfigurationFromCardManifest.splice(0, formatterConfigurationFromCardManifest.length);\n\tconst textArrangementsFromCardManifest: Array<ArrangementOptions> = getTextArrangementFromCardManifest(integrationCardManifest);\n\n\treturn {\n\t\ttitle: resolvePropertyLabelFromExpression(title, resourceModel, properties),\n\t\tsubtitle: resolvePropertyLabelFromExpression(subtitle, resourceModel, properties),\n\t\theaderUOM: resolvePropertyLabelFromExpression(uom, resourceModel, properties),\n\t\tmainIndicatorOptions: getMainIndicator(integrationCardManifest),\n\t\tsideIndicatorOptions: getSideIndicators(integrationCardManifest),\n\t\tgroups: getCardGroups(integrationCardManifest, resourceModel),\n\t\tformatterConfigurationFromCardManifest,\n\t\ttextArrangementsFromCardManifest\n\t};\n}\n\n/**\n * Updates the unit of measures array with formatter configurations.\n *\n * @param {Array<UnitOfMeasures>} unitOfMeasures - The array of unit of measures to be updated.\n * @param {FormatterConfigurationMap} formatterConfigsWithUnit - The formatter configurations containing unit information.\n * @returns Promise {Array<UnitOfMeasures>} The updated array of unit of measures.\n */\nexport const getUpdatedUnitOfMeasures = async function (\n\tunitOfMeasures: Array<UnitOfMeasures>,\n\tformatterConfigsWithUnit: FormatterConfigurationMap,\n\tpath: string\n): Promise<Array<UnitOfMeasures>> {\n\tconst updatedUnitOfMeasures = [...unitOfMeasures];\n\tfor (const formatter of formatterConfigsWithUnit) {\n\t\tconst matchingProperty = updatedUnitOfMeasures.find((unitConfig: UnitOfMeasures) => unitConfig.name === formatter.property);\n\t\tconst formatterParameterValue = formatter.parameters?.[0].value;\n\t\tlet value;\n\t\tif (hasBooleanBindingExpression(formatterParameterValue)) {\n\t\t\tvalue = extractValueWithoutBooleanExprBinding(formatterParameterValue);\n\t\t} else {\n\t\t\tvalue = formatterParameterValue?.replace(/\\$\\{/g, \"\");\n\t\t\tvalue = value?.replace(/\\}/g, \"\");\n\t\t}\n\t\tconst formatterProperty = formatter.property;\n\n\t\tif (matchingProperty && value) {\n\t\t\tconst updatedProperty = { ...matchingProperty, propertyKeyForDescription: value, value: value };\n\t\t\tconst index = updatedUnitOfMeasures.indexOf(matchingProperty);\n\t\t\tupdatedUnitOfMeasures[index] = updatedProperty;\n\t\t} else if (value && formatterProperty) {\n\t\t\tawait handleFormatterWithoutMatchingProperty(formatterProperty, value, updatedUnitOfMeasures, path);\n\t\t}\n\t}\n\n\treturn updatedUnitOfMeasures;\n};\n\n/**\n * Updates the criticality options for navigation properties in the main indicator criticality options.\n *\n * @param {Array<CriticalityOptions>} mainIndicatorCriticalityOptions - The array of main indicator criticality options to be updated.\n * @param {string} path - The path used to fetch navigation properties with labels.\n * @returns {Promise<Array<CriticalityOptions>>} A promise that resolves to the updated array of main indicator criticality options.\n */\nexport const updateCriticalityForNavProperty = async function (mainIndicatorCriticalityOptions: CriticalityOptionsPanel, path: string) {\n\tfor (const criticality of mainIndicatorCriticalityOptions) {\n\t\tif (criticality.name.includes(\"/\")) {\n\t\t\tconst [criticalityName, navProp] = criticality.name.split(\"/\");\n\t\t\ttry {\n\t\t\t\tconst { propertiesWithLabel } = await getNavigationPropertiesWithLabel(\n\t\t\t\t\tApplication.getInstance().fetchDetails().rootComponent,\n\t\t\t\t\tcriticalityName,\n\t\t\t\t\tpath\n\t\t\t\t);\n\t\t\t\tcriticality.navigationKeyForId = navProp;\n\t\t\t\tcriticality.navigationKeyForDescription = \"\";\n\t\t\t\tcriticality.propertyKeyForId = navProp;\n\t\t\t\tcriticality.isNavigationForId = true;\n\t\t\t\tcriticality.isNavigationForDescription = false;\n\t\t\t\tcriticality.name = criticalityName;\n\t\t\t\tcriticality.navigationalPropertiesForId = propertiesWithLabel;\n\t\t\t} catch (error) {\n\t\t\t\tError(\"Error fetching navigation properties:\" + error);\n\t\t\t}\n\t\t}\n\t}\n\treturn mainIndicatorCriticalityOptions;\n};\n/**\n * Handles the formatter property when there is no matching property.\n * Updates the `updatedUnitOfMeasures` array with the appropriate data based on the formatter property.\n *\n * @param {string} formatterProperty - The formatter property to process.\n * @param {string} value - The value associated with the formatter property.\n * @param {Array<UnitOfMeasures>} updatedUnitOfMeasures - The array to update with unit of measure data.\n * @param {string} path - The path used to fetch navigation properties.\n * @returns {Promise<Array<UnitOfMeasures>>} A promise that resolves to the updated array of unit of measures.\n */\nexport const handleFormatterWithoutMatchingProperty = async (\n\tformatterProperty: string,\n\tvalue: string,\n\tupdatedUnitOfMeasures: Array<UnitOfMeasures>,\n\tpath: string\n) => {\n\tif (!formatterProperty) {\n\t\treturn;\n\t}\n\tif (formatterProperty.includes(\"/\")) {\n\t\tconst [sourceProperty, navigationKeyForId] = formatterProperty.split(\"/\");\n\t\ttry {\n\t\t\tconst { propertiesWithLabel } = await getNavigationPropertiesWithLabel(\n\t\t\t\tApplication.getInstance().fetchDetails().rootComponent,\n\t\t\t\tsourceProperty,\n\t\t\t\tpath\n\t\t\t);\n\t\t\tupdatedUnitOfMeasures.push({\n\t\t\t\tpropertyKeyForDescription: value,\n\t\t\t\tname: formatterProperty,\n\t\t\t\tpropertyKeyForId: sourceProperty,\n\t\t\t\tvalue: value,\n\t\t\t\tisNavigationForId: true,\n\t\t\t\tnavigationKeyForId: navigationKeyForId,\n\t\t\t\tisNavigationForDescription: false,\n\t\t\t\tnavigationKeyForDescription: \"\",\n\t\t\t\tnavigationalPropertiesForId: propertiesWithLabel\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tError(\"Error fetching navigation properties:\" + error);\n\t\t}\n\t} else {\n\t\tupdatedUnitOfMeasures.push({\n\t\t\tpropertyKeyForDescription: value,\n\t\t\tname: formatterProperty,\n\t\t\tpropertyKeyForId: formatterProperty,\n\t\t\tvalue: value\n\t\t});\n\t}\n};\n/**\n * Creates or updates the card manifest for the card generator.\n * Fetches application details, constructs the entity context path, and generates the card manifest.\n *\n * @param {Component} appComponent - The root component of the application.\n * @param {CardManifest} cardManifest - The initial card manifest.\n * @param {JSONModel} dialogModel - The dialog model containing configuration data.\n * @returns {Promise<CardManifest>} - A promise that resolves to the created or updated card manifest.\n * @throws {Error} - Throws an error if no model is found in the view.\n */\nexport const createCardManifest = async function (\n\tappComponent: Component,\n\tcardManifest: CardManifest,\n\tdialogModel: JSONModel\n): Promise<CardManifest> {\n\tconst sapApp = appComponent.getManifestEntry(\"sap.app\");\n\tconst { title, description: cardSubtitle, id } = sapApp;\n\tconst oAppModel = appComponent.getModel();\n\n\tif (!oAppModel) {\n\t\tthrow new Error(\"No model found in the view\");\n\t}\n\n\tconst applicationInstance = Application.getInstance();\n\tconst sapCoreVersionInfo = await VersionInfo.load({\n\t\tlibrary: \"sap.ui.core\"\n\t});\n\tconst { serviceUrl, entitySet, entitySetWithObjectContext } = applicationInstance.fetchDetails();\n\tconst entitySetName = entitySet;\n\tconst integrationCardManifest =\n\t\tupdateExistingCardManifest(dialogModel.getProperty(\"/configuration/$data\"), cardManifest) ||\n\t\tcreateInitialManifest({\n\t\t\ttitle: title,\n\t\t\tsubTitle: cardSubtitle,\n\t\t\tservice: serviceUrl,\n\t\t\tserviceModel: oAppModel,\n\t\t\tsapAppId: id,\n\t\t\tsapCoreVersionInfo,\n\t\t\tentitySetName,\n\t\t\tentitySetWithObjectContext,\n\t\t\tdata: dialogModel.getProperty(\"/configuration/$data\")\n\t\t});\n\n\treturn integrationCardManifest;\n};\n\n/**\n * This function checkks if a given property is a navigational property in the model.\n * @param {string} propertyName - Name of the property to check.\n * @param {JSONModel} model - The JSON model containing the card configuration.\n * @returns {boolean} - Returns true if the property is a navigational property, otherwise false.\n */\nconst isNavigationalProperty = function (propertyName: string, model: JSONModel): boolean {\n\tconst navigationalProperties = model.getProperty(\"/configuration/navigationProperty\") ?? [];\n\tfor (const navigationalProperty of navigationalProperties) {\n\t\tif (navigationalProperty.name === propertyName) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n};\n\n/**\n * This function returns the list of properties that are present in the card preview.\n * @param {JSONModel} model - The JSON model containing the card configuration.\n * @returns {string[]} - Array of property names present in the card preview.\n */\nexport const getPreviewItems = function (model: JSONModel) {\n\tconst title = model.getProperty(\"/configuration/title\");\n\tconst subtitle = model.getProperty(\"/configuration/subtitle\");\n\tconst headerUOM = model.getProperty(\"/configuration/headerUOM\");\n\tconst properties = model.getProperty(\"/configuration/properties\") ?? [];\n\tconst mainIndicatorProperty = model.getProperty(\"/configuration/mainIndicatorStatusKey\");\n\tconst groups = model.getProperty(\"/configuration/groups\") || [];\n\tconst previewItems = groups.flatMap((group: { items: { name: string; isNavigationEnabled: boolean; navigationProperty: string }[] }) =>\n\t\tgroup.items.map((item) =>\n\t\t\titem.isNavigationEnabled && item.navigationProperty ? `${item.name}/${item.navigationProperty}` : item.name\n\t\t)\n\t);\n\tif (mainIndicatorProperty) {\n\t\tif (!mainIndicatorProperty.includes(\"/\") && isNavigationalProperty(mainIndicatorProperty, model)) {\n\t\t\tconst mainIndicatorNavigationSelectedKey = model.getProperty(\"/configuration/mainIndicatorNavigationSelectedKey\");\n\t\t\tpreviewItems.push(`${mainIndicatorProperty}/${mainIndicatorNavigationSelectedKey}`);\n\t\t} else {\n\t\t\tpreviewItems.push(mainIndicatorProperty);\n\t\t}\n\t}\n\t[title, subtitle, headerUOM].forEach((item) => {\n\t\tproperties.forEach((property: { labelWithValue: string; name: string }) => {\n\t\t\tif (property.labelWithValue === item) {\n\t\t\t\tpreviewItems.push(property.name);\n\t\t\t}\n\t\t});\n\t});\n\treturn previewItems;\n};\n"],"mappings":"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","ignoreList":[]}