{"version":3,"file":"CardGenerator-dbg-dbg.js","names":["sap","ui","define","Log","sap_cards_ap_common_helpers_ApplicationInfo","sap_cards_ap_common_services_RetrieveCard","MessageBox","Fragment","CoreLib","JSONModel","ResourceModel","___app_CardGeneratorDialogController","___config_PreviewOptions","___helpers_CardGeneratorModel","___helpers_IntegrationCardHelper","___pages_Application","___pages_FreeStyle","___pages_ObjectPage","_catch","body","recover","result","e","then","AppType","getApplicationFloorplan","getObjectPageCardManifestForPreview","CardGeneratorDialogController","setValueStateForAdvancedPanel","PREVIEW_OPTIONS","getCardGeneratorDialogModel","createCardManifest","renderCardPreview","updateCardGroups","Application","FreeStyle","ObjectPage","CardTypes","cardGeneratorDialog","initializeAsync","appComponent","_temp2","isValidConfiguration","applicationInstance","validateCardGeneration","resourceModel","getResourceModelForDialog","warningMsg","getObject","warning","actions","Action","OK","emphasizedAction","Promise","resolve","initializeCardGeneratorDialog","applicationFloorplan","_temp","createInstance","updateObjectContextFreeStyleModel","reject","applyModelsToDialog","dialog","cardManifest","getInstance","entityRelatedInfo","getEntityRelatedInfo","getModel","setModel","previewOptionsModel","freeStyleModel","getFreeStyleModelForDialog","isServiceDetailsView","isApplyServiceDetailsEnabled","_temp3","entitySetWithObjectContext","dialogModel","integrationCardManifest","setProperty","_temp5","oDialog","initialize","open","element","document","getElementById","style","backgroundColor","catch","oError","error","load","id","name","controller","_temp4","cardType","INTEGRATION","includeActions","hideActions","isDesignMode","_getObjectPageCardMan","oResourceBundle","getResourceBundleFor","bundleUrl","oUrlInfo","url","bundle","__exports","__esModule"],"sources":["CardGenerator.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nimport Log from \"sap/base/Log\";\nimport { AppType, getApplicationFloorplan } from \"sap/cards/ap/common/helpers/ApplicationInfo\";\nimport { getObjectPageCardManifestForPreview } from \"sap/cards/ap/common/services/RetrieveCard\";\nimport type Dialog from \"sap/m/Dialog\";\nimport MessageBox from \"sap/m/MessageBox\";\nimport Component from \"sap/ui/core/Component\";\nimport type Control from \"sap/ui/core/Control\";\nimport Fragment from \"sap/ui/core/Fragment\";\nimport CoreLib from \"sap/ui/core/Lib\";\nimport { CardManifest } from \"sap/ui/integration/widgets/Card\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\nimport ResourceModel from \"sap/ui/model/resource/ResourceModel\";\nimport { CardGeneratorDialogController, setValueStateForAdvancedPanel } from \"./app/CardGeneratorDialogController\";\nimport { PREVIEW_OPTIONS } from \"./config/PreviewOptions\";\nimport { getCardGeneratorDialogModel } from \"./helpers/CardGeneratorModel\";\nimport { createCardManifest, renderCardPreview, updateCardGroups } from \"./helpers/IntegrationCardHelper\";\nimport { Application } from \"./pages/Application\";\nimport { FreeStyle } from \"./pages/FreeStyle\";\nimport { ObjectPage } from \"./pages/ObjectPage\";\n\nenum CardTypes {\n\tINTEGRATION = \"integration\",\n\tADAPTIVE = \"adaptive\"\n}\n\nlet cardGeneratorDialog: Promise<Control | Control[]> | undefined;\n\n/**\n * Initializes the card generator asynchronously.\n * Determines the application floorplan and validates card generation.\n * If card generation is not valid, displays a warning message.\n * Otherwise, initializes the card generator dialog.\n *\n * @param {Component} appComponent - The root component of the application.\n * @returns {Promise<void>} - A promise that resolves when the initialization is complete.\n */\nexport const initializeAsync = async function (appComponent: Component): Promise<void> {\n\tconst applicationFloorplan = getApplicationFloorplan(appComponent);\n\tlet applicationInstance;\n\n\tif (applicationFloorplan === AppType.ObjectPage) {\n\t\tapplicationInstance = ObjectPage.createInstance(appComponent);\n\t} else {\n\t\tapplicationInstance = FreeStyle.createInstance(appComponent);\n\t\tawait (applicationInstance as FreeStyle).updateObjectContextFreeStyleModel();\n\t}\n\n\tconst isValidConfiguration = applicationInstance.validateCardGeneration();\n\n\tif (!isValidConfiguration) {\n\t\tconst resourceModel = getResourceModelForDialog();\n\t\tconst warningMsg: string = resourceModel.getObject(\"GENERATE_CARD_NOT_SUPPORTED\");\n\t\tMessageBox.warning(warningMsg, {\n\t\t\tactions: MessageBox.Action.OK,\n\t\t\temphasizedAction: MessageBox.Action.OK\n\t\t});\n\t\treturn;\n\t}\n\treturn await initializeCardGeneratorDialog(appComponent);\n};\n\n/**\n * Applies models to the card generator dialog.\n *\n * This function sets up various models for the dialog, including the i18n model, preview options model,\n * and the freeStyle model. It also fetches and sets the card generator dialog model.\n *\n * @param {Dialog} dialog - The dialog to which the models will be applied.\n * @param {Component} appComponent - The root component of the application.\n * @param {CardManifest} [cardManifest] - The card manifest to be used for creating the card.\n * @returns {Promise<void>} - A promise that resolves when the models have been applied to the dialog.\n */\nconst applyModelsToDialog = async function (dialog: Dialog, appComponent: Component, cardManifest?: CardManifest): Promise<void> {\n\tconst applicationInstance = Application.getInstance();\n\tconst entityRelatedInfo = applicationInstance.getEntityRelatedInfo();\n\n\tif (!dialog.getModel(\"i18n\")) {\n\t\tconst resourceModel = getResourceModelForDialog();\n\t\tdialog.setModel(resourceModel, \"i18n\");\n\t}\n\n\tif (!dialog.getModel(\"previewOptions\")) {\n\t\tconst previewOptionsModel = new JSONModel(PREVIEW_OPTIONS);\n\t\tdialog.setModel(previewOptionsModel, \"previewOptions\");\n\t}\n\n\tconst freeStyleModel =\n\t\tapplicationInstance instanceof FreeStyle\n\t\t\t? applicationInstance.getFreeStyleModelForDialog()\n\t\t\t: new JSONModel({\n\t\t\t\t\tisServiceDetailsView: false,\n\t\t\t\t\tisApplyServiceDetailsEnabled: false\n\t\t\t\t});\n\tdialog.setModel(freeStyleModel, \"freeStyle\");\n\n\tif (entityRelatedInfo.entitySetWithObjectContext) {\n\t\tconst dialogModel = await getCardGeneratorDialogModel(appComponent, cardManifest);\n\t\tdialog.setModel(dialogModel);\n\t\tconst integrationCardManifest = await createCardManifest(appComponent, cardManifest as CardManifest, dialogModel);\n\t\trenderCardPreview(integrationCardManifest);\n\t\tupdateCardGroups(dialogModel);\n\t\tsetValueStateForAdvancedPanel();\n\t\tfreeStyleModel.setProperty(\"/isServiceDetailsView\", false);\n\t}\n};\n\n/**\n * Initializes the card generator dialog asynchronously.\n * Loads the card generator dialog fragment, fetches the card manifest, and set the dialog model.\n * Opens the dialog and renders the card preview.\n *\n * @param {Component} appComponent - The root component of the application.\n * @returns {Promise<void>} - A promise that resolves when the dialog is initialized and opened.\n */\nexport const initializeCardGeneratorDialog = async function (appComponent: Component): Promise<void> {\n\tif (!cardGeneratorDialog) {\n\t\tcardGeneratorDialog = Fragment.load({\n\t\t\tid: \"cardGeneratorDialog\",\n\t\t\tname: \"sap.cards.ap.generator.app.CardGeneratorDialog\",\n\t\t\tcontroller: CardGeneratorDialogController\n\t\t});\n\t}\n\n\tlet cardManifest: CardManifest | undefined;\n\n\ttry {\n\t\tcardManifest = (await getObjectPageCardManifestForPreview(appComponent, {\n\t\t\tcardType: CardTypes.INTEGRATION,\n\t\t\tincludeActions: false,\n\t\t\thideActions: false,\n\t\t\tisDesignMode: true\n\t\t})) as CardManifest;\n\t} catch (oError: unknown) {\n\t\tLog.error(\"Error while fetching the card manifest.\");\n\t}\n\n\tcardGeneratorDialog\n\t\t.then(async function (oDialog: Control | Control[]) {\n\t\t\tapplyModelsToDialog(oDialog as Dialog, appComponent, cardManifest);\n\t\t\tCardGeneratorDialogController.initialize();\n\t\t\t(oDialog as Dialog).open();\n\t\t\tconst element = document.getElementById(\"cardGeneratorDialog--contentSplitter\");\n\t\t\tif (element) {\n\t\t\t\telement.style.backgroundColor = \"#f8f8f8\";\n\t\t\t}\n\t\t\treturn oDialog;\n\t\t})\n\t\t.catch(function (oError: Error) {\n\t\t\tLog.error(\"Error while loading or initializing the dialog:\", oError);\n\t\t});\n};\n\n/**\n * Retrieves the resource model for the card generator dialog.\n * Loads the i18n resource bundle and creates a new ResourceModel.\n *\n * @returns {ResourceModel} - The resource model for the card generator dialog.\n */\nexport function getResourceModelForDialog(): ResourceModel {\n\tconst oResourceBundle = CoreLib.getResourceBundleFor(\"sap.cards.ap.generator.i18n\");\n\treturn new ResourceModel({\n\t\tbundleUrl: oResourceBundle.oUrlInfo.url,\n\t\tbundle: oResourceBundle //Reuse created bundle to stop extra network calls\n\t});\n}\n"],"mappings":"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","ignoreList":[]}