{"version":3,"file":"CardGeneratorDialogController-dbg.js","names":["sap","ui","define","Log","merge","ODataUtils","MessageBox","MessageToast","Event","CoreElement","Fragment","Popup","sap_ui_core_library","JSONModel","jQuery","___helpers_Batch","___helpers_Formatter","___helpers_I18nHelper","___helpers_IntegrationCardHelper","___helpers_PropertyExpression","___helpers_Transpiler","___odata_ODataTypes","___pages_Application","___utils_CommonUtils","cardActionHandlers","freeStyleHandlers","toggleAdvancedSetting","toggleEvent","toggleButton","getSource","setEnabled","splitter","getElementById","controller","onCriticalityChange","criticalityChangeEvent","Promise","resolve","checkForNavigationProperty","then","updateCriticality","getParameter","onArrangementsChange","arrangementChangeEvent","updateArrangements","dialogModel","getDialogModel","groups","getProperty","setProperty","i","items","length","item","uom","value","split","slice","undefined","aPropsWithUoM","indexOf","name","push","onPropertyFormatterChangeFromAdvancedSettings","updateHeaderArrangements","load","advancedSettings","getPressed","lastContentArea","getContentAreas","removeContentArea","insertContentArea","setTimeout","transpileIntegrationCardToAdaptive","e","reject","event","isTextArrangement","selectedParameters","getParameters","selectedItem","model","navigationProperties","selectedNavigationalProperties","existingIndex","findIndex","navItem","selectedProperty","find","prop","selectedPropertyName","properties","selectedPropertyValues","data","_temp2","updateCardConfigurationData","textArrangementChanged","navigationalPropertiesForId","isNavigationForId","navigationKeyForId","navigationalPropertiesForDescription","isNavigationForDescription","navigationKeyForDescription","onPropertySelection","oEvent","rootComponent","entitySet","Application","getInstance","fetchDetails","control","selectedKey","getSelectedKey","newValue","currentValue","oModel","validateControl","updateSelectedNavigationProperty","selectedNavigationPropertiesContent","sPath","getBindingContext","getPath","group","getArrangements","unitOfMeasures","textArrangements","propertyValueFormatters","navigationProperty","navigationalProperties","setValueStateForAdvancedPanel","propertyLabel","getPropertyLabel","getModel","PropertyInfoType","Property","label","isNavigationEnabled","isEnabled","refresh","updateCardGroups","okPressed","hasError","validateHeader","oCard","mManifest","getManifest","enhanceManifestWithInsights","enhanceManifestWithConfigurationParameters","createAndStoreGeneratedi18nKeys","updateManifestWithSelectQueryParams","configuration","parameters","contextParameters","payload","floorplan","localPath","fileName","manifests","type","manifest","default","ajax","url","headers","JSON","stringify","success","show","getTranslatedText","error","jqXHR","textStatus","errorThrown","errorMessage","status","statusText","getCardGeneratorDialog","close","toggleOffAdvancedPanel","isHeader","_temp","onStateIndicatorSelection","getHeaderConfiguration","header","mainIndicator","state","getCriticality","number","selectedNavigationPropertyHeader","selectedValue","dataType","isDateType","checkForDateType","isNumberType","updateTrendForCardHeader","updateSideIndicatorsForHeader","updateCardHeader","selectedNavigationProperty","entitySetWithObjectContext","serviceUrl","oDataV4","$data","queryParameters","map","property","fetchDataAsync","createUrlParameters","result","addLabelsForProperties","ValueState","formatPropertyDropdownValues","getCurrentCardManifest","getPreviewItems","renderCardPreview","resolvePropertyPathFromExpression","extractValueWithoutBooleanExprBinding","hasBooleanBindingExpression","isBinding","context","MAX_GROUPS","MAX_GROUP_ITEMS","CardGeneratorDialogController","initialize","setDefaultCardPreview","cancelPressed","closeDialog","onAddClick","onGroupAddClick","onGroupDeleteClick","deleteGroup","onDeleteClick","updateContentNavigationSelection","onPropertyLabelChange","onTitleSelection","onSubTitleSelection","onGroupTitleChange","onDrop","onHeaderUOMSelection","updateHeaderNavigationSelection","onHeightChange","onWidthChange","onResetPressed","onItemsActionsButtonPressed","onPreviewTypeChange","onPropertyFormatting","onFormatTypeSelection","onActionAddClick","onAddedActionDelete","onAddedActionStyleChange","onAddedActionTitleChange","loadActions","_setDefaultCardPreview","_updateTrendForCardHeader","_updateSideIndicatorsForHeader","_setAdvancedFormattingOptionsEnablement","setAdvancedFormattingOptionsEnablement","_updateHeaderArrangements","_updateArrangements","_updateCriticality","_validateHeader","applyCriticality","applyUoMFormatting","onTrendDelete","loadAdvancedFormattingConfigurationFragment","disableOrEnableUOMAndTrend","handleCriticalityAction","onEntitySetPathChange","applyServiceDetails","onServiceChange","onContextPathChange","onBackButtonPress","handleFormatterUomAction","onBeforeDialogClosed","setCriticalitySourceProperty","propertyName","isCalcuationType","mainIndicatorCriticality","matchedCriticality","oCriticality","criticalityName","propertyKeyForId","criticality","activeCalculation","staticValues","deviationLow","deviationRangeLowValue","deviationHigh","deviationRangeHighValue","toleranceLow","toleranceRangeLowValue","toleranceHigh","toleranceRangeHighValue","sImprovementDirection","improvementDirection","oCriticalityConfigValues","None","Negative","Critical","Positive","sourceProperty","mainIndicatorProperty","unitsOfMeasure","selectedTrendOptions","selectedIndicatorOptions","getPropertyDataType","isFormatterApplied","some","formatterDetail","formatterApplied","filter","formatterName","isUOMApplied","arrangementDetail","isCriticalityApplied","indicatorCriticality","indicatorCriticalityName","isTrendApplied","trendDetail","downDifference","isIndicatorsApplied","indicatorDetail","targetUnit","trendOptions","indicatorsValue","referenceValue","upDifference","targetValue","deviationValue","deviationUnit","includes","navSelectedProperty","selectedNavProperties","propertiesSelected","fnGetHeaderConfig","key","navigationValue","setValueState","sapCardHeader","currentManifest","oManifest","sideIndicators","title","controlName","errorControls","resourceBundle","getResourceBundle","getKey","getText","controlErrorText","setValueStateText","Error","forEach","errorControl","index","getId","splice","subTitle","unitOfMeasurement","propVal","ele","propertyValue","labelWithValue","mainIndicatorStatusKeyInitial","mainIndicatorStatusKey","sourcePropertyToSet","updateSelectedNavigation","getPropertyAndSelectedValue","propertyType","selectProperty","typeSupported","isNaN","Number","isUoMEnabled","navProperty","NavigationProperty","oProperty","source","selectedNavigation","existingItem","navValues","propertyPath","sKey","getObject","comboBox","nextItemNumber","newItem","iItemsAdded","getValue","getValueState","validateIndicatorsValues","buttonId","targetInputId","setValueStateTextForControl","deviationInputId","targetUnitInputId","deviationUnitInputId","validateTrendValues","trendValues","referenceInputId","trendDownDifferenceInputId","trendUpDifferenceInputId","controlId","isSelectControl","elementControl","validationText","iLength","currentDefaultValue","groupLength","groupIndex","_itemActionsMenu","warningMessage","warning","actions","Action","DELETE","CANCEL","emphasizedAction","onClose","action","itemIndex","match","sValue","destroy","trend","selectedTrendOptionIndex","selectedTrendOption","newTrendValues","getTrendDirection","selectedIndicatorOptionIndex","selectedIndicatorOption","unit","indicatorsValueToAdd","mainIndicatorKey","informativeMessage","previewItems","propertyPaths","path","formattingOptions","itemName","navigationalProperty","isPropertyExists","valueState","Information","oDragged","oDropped","sInsertPosition","oDragPos","getParent","oDropPos","sDraggedPath","sDroppedPath","aDragItems","aDropItems","iDragPosition","indexOfItem","iDropPosition","oSelectedItem","setWidth","setHeight","setValue","relavantCriticality","relavantProperty","indicatorName","parse","hostCriticality","oSource","sourceItem","aUom","sSourceUoMProperty","aSourceUom","onAdvancedFormattingConfigOpen","navSelectedKey","_advancedFormattingOptionsPopover","id","oPopover","addDependent","oContext","setBindingContext","openBy","oConfigurationController","onPopoverClose","onPropertyFormatterChange","applyFormatting","applyFormatter","resetValueState","onDownDifferenceChange","this","onUpDifferenceChange","onReferenceValInputChange","onTargetValueChange","onDeviationValueChange","onTargetUnitChange","onDeviationUnitChange","applyIndicators","hasIndicatorsError","_advancedFormattingConfigurationPopover","applyTrendCalculation","hasTrendError","onDelete","sourceUoMProperty","iIndex","itemsBindingPath","relativeIndex","updatedPropertyValueFormatters","formatter","onIndicatorsDelete","selectedIndicatorValues","onDeleteFormatter","deleteFormatter","onDeleteCriticality","onDeleteButtonClicked","sourceCriticalityProperty","navProperites","isNavEnabled","navSelectedProperies","propertyExists","targetProperty","propertyKeyForDescription","proprtetyKeyFromSource","navAllProperties","navPropertiesValues","getNavValues","oData","bMatchingProperty","oUom","navProperties","propertyKeyFromSource","selectedTrendValues","oResourceBundle","mLabels","uomText","criticalityText","formatterText","indicatorsText","trendCalculatorText","setModel","sourcePropertyName","oController","onNavigationActionSelect","sId","propertyToBeSet","customData","getCustomData","customAction","custom","actionType","hasActions","isDestroyed","oMenu","open","Dock","BeginTop","BeginBottom","bind","navProp","sourceUom","selectedCardType","getSelectedItem","oAdaptiveCardContainer","oCustomSize","setVisible","subtitle","mainIndicatorValue","aUnitOfMeasures","aTextArrangements","aPropertyValueFormatters","groupItem","groupItemValue","content","dialog","getCustomHeader","getContentMiddle","setPressed","setSelectedKey","defaultIntegrationCard","adaptiveCardContainer","customIntegrationCard","previewHostsProperties","defaultPreviewOption","option","width","height","isDialogEdited","OK","sAction","preventDefault","__exports","__esModule"],"sources":["CardGeneratorDialogController.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nimport Log from \"sap/base/Log\";\nimport ResourceBundle from \"sap/base/i18n/ResourceBundle\";\nimport merge from \"sap/base/util/merge\";\nimport CompactFormatterSelection from \"sap/cards/ap/generator/app/controls/CompactFormatterSelection\";\nimport CriticalityEditor from \"sap/cards/ap/generator/app/controls/CriticalityEditor\";\nimport type { Model } from \"sap/cards/ap/generator/odata/ODataTypes\";\nimport * as ODataUtils from \"sap/cards/ap/generator/odata/ODataUtils\";\nimport type MenuBar from \"sap/m/Bar\";\nimport type ComboBox from \"sap/m/ComboBox\";\nimport type Dialog from \"sap/m/Dialog\";\nimport type Input from \"sap/m/Input\";\nimport MessageBox from \"sap/m/MessageBox\";\nimport MessageToast from \"sap/m/MessageToast\";\nimport type Popover from \"sap/m/Popover\";\nimport type ToggleButton from \"sap/m/ToggleButton\";\nimport Event from \"sap/ui/base/Event\";\nimport type Control from \"sap/ui/core/Control\";\nimport CoreElement from \"sap/ui/core/Element\";\nimport Fragment from \"sap/ui/core/Fragment\";\nimport Popup from \"sap/ui/core/Popup\";\nimport { ValueState } from \"sap/ui/core/library\";\nimport type Card from \"sap/ui/integration/widgets/Card\";\nimport type { CardManifest, ObjectContent } from \"sap/ui/integration/widgets/Card\";\nimport type Splitter from \"sap/ui/layout/Splitter\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\nimport type ResourceModel from \"sap/ui/model/resource/ResourceModel\";\nimport jQuery from \"sap/ui/thirdparty/jquery\";\nimport type { Host } from \"../config/PreviewOptions\";\nimport { QueryParameters, createUrlParameters, updateManifestWithSelectQueryParams } from \"../helpers/Batch\";\nimport type { SideIndicatorOptions, TrendOptions, TrendOrIndicatorOptions } from \"../helpers/CardGeneratorModel\";\nimport { formatPropertyDropdownValues, type FormatterConfigurationMap } from \"../helpers/Formatter\";\nimport { createAndStoreGeneratedi18nKeys } from \"../helpers/I18nHelper\";\nimport {\n\tenhanceManifestWithConfigurationParameters,\n\tenhanceManifestWithInsights,\n\tgetCurrentCardManifest,\n\tgetPreviewItems,\n\trenderCardPreview,\n\tupdateCardGroups\n} from \"../helpers/IntegrationCardHelper\";\nimport { getArrangements, resolvePropertyPathFromExpression } from \"../helpers/PropertyExpression\";\nimport { transpileIntegrationCardToAdaptive } from \"../helpers/Transpiler\";\nimport { PropertyInfo, PropertyInfoMap, PropertyInfoType } from \"../odata/ODataTypes\";\nimport { Application } from \"../pages/Application\";\nimport type { GroupItem, NavigationParameter, NavigationalData, ObjectCardGroups, Property } from \"../types/PropertyTypes\";\nimport {\n\tcheckForDateType,\n\textractValueWithoutBooleanExprBinding,\n\tgetCardGeneratorDialog,\n\tgetDialogModel,\n\thasBooleanBindingExpression,\n\tisBinding\n} from \"../utils/CommonUtils\";\nimport { ArrangementOptions } from \"./controls/ArrangementsEditor\";\nimport * as cardActionHandlers from \"./handlers/CardActions\";\nimport * as freeStyleHandlers from \"./handlers/FreeStyle\";\n\ntype UnitOfMeasures = {\n\tpropertyKeyForDescription: string;\n\tname: string;\n\tpropertyKeyForId: string;\n\tvalue: string;\n\tvalueState: ValueState;\n\tvalueStateText: string;\n\tnavigationValueState?: ValueState;\n\tnavigationValueStateText?: string;\n\tisNavigationForId?: boolean;\n\tnavigationKeyForId?: string;\n};\ntype ValueFormatter = {\n\tproperty: string;\n};\ntype Criticality = {\n\tcriticality: string;\n\tname: string;\n\tactiveCalculation: boolean;\n\tpropertyKeyForId: string;\n};\n\ntype EventParameters = {\n\tselectedItem: ArrangementOptions;\n\ttextArrangementChanged: boolean;\n};\n\nconst context: any = {};\nconst aPropsWithUoM: any = [];\nconst MAX_GROUPS = 5;\nconst MAX_GROUP_ITEMS = 5;\n\nexport const CardGeneratorDialogController = {\n\tinitialize: function () {\n\t\tsetDefaultCardPreview();\n\t},\n\tokPressed,\n\tcancelPressed: closeDialog,\n\tonAddClick,\n\tonGroupAddClick,\n\tonGroupDeleteClick,\n\tdeleteGroup,\n\tonDeleteClick,\n\tonPropertySelection,\n\tupdateContentNavigationSelection,\n\tonPropertyLabelChange,\n\tonTitleSelection,\n\tonSubTitleSelection,\n\tonGroupTitleChange,\n\tvalidateControl,\n\tonDrop,\n\tonHeaderUOMSelection,\n\tonStateIndicatorSelection,\n\tupdateHeaderNavigationSelection,\n\tonHeightChange,\n\tonWidthChange,\n\tonResetPressed,\n\tonItemsActionsButtonPressed,\n\tonPreviewTypeChange,\n\ttoggleAdvancedSetting,\n\tgetTranslatedText,\n\tonPropertyFormatting,\n\tonFormatTypeSelection,\n\tonActionAddClick: cardActionHandlers.onActionAddClick,\n\tonAddedActionDelete: cardActionHandlers.onAddedActionDelete,\n\tonAddedActionStyleChange: cardActionHandlers.onAddedActionStyleChange,\n\tonAddedActionTitleChange: cardActionHandlers.onAddedActionTitleChange,\n\tloadActions: cardActionHandlers.loadActions,\n\t/* Methods exposed for testing */\n\t_setDefaultCardPreview: setDefaultCardPreview,\n\t_updateTrendForCardHeader: updateTrendForCardHeader,\n\t_updateSideIndicatorsForHeader: updateSideIndicatorsForHeader,\n\t_setAdvancedFormattingOptionsEnablement: setAdvancedFormattingOptionsEnablement,\n\t_updateHeaderArrangements: updateHeaderArrangements,\n\t_updateArrangements: updateArrangements,\n\t_updateCriticality: updateCriticality,\n\t_validateHeader: validateHeader,\n\tapplyCriticality: applyCriticality,\n\tapplyUoMFormatting: applyUoMFormatting,\n\tonTrendDelete: onTrendDelete,\n\tloadAdvancedFormattingConfigurationFragment: loadAdvancedFormattingConfigurationFragment,\n\taddLabelsForProperties: addLabelsForProperties,\n\tcheckForNavigationProperty: checkForNavigationProperty,\n\tdisableOrEnableUOMAndTrend: disableOrEnableUOMAndTrend,\n\thandleCriticalityAction: handleCriticalityAction,\n\tonEntitySetPathChange: freeStyleHandlers.onEntitySetPathChange,\n\tapplyServiceDetails: freeStyleHandlers.applyServiceDetails,\n\tonServiceChange: freeStyleHandlers.onServiceChange,\n\tonContextPathChange: freeStyleHandlers.onContextPathChange,\n\tonBackButtonPress: freeStyleHandlers.onBackButtonPress,\n\thandleFormatterUomAction,\n\tonBeforeDialogClosed: onBeforeDialogClosed,\n\tsetCriticalitySourceProperty: setCriticalitySourceProperty\n};\nexport function getCriticality(propertyName: string, isCalcuationType?: boolean) {\n\tconst model = getDialogModel() as JSONModel;\n\tconst mainIndicatorCriticality = model?.getProperty(\"/configuration/mainIndicatorOptions/criticality\");\n\tif (hasBooleanBindingExpression(propertyName)) {\n\t\tpropertyName = extractValueWithoutBooleanExprBinding(propertyName);\n\t}\n\tconst matchedCriticality = mainIndicatorCriticality?.find(\n\t\t(oCriticality: { name: string; criticality: string; propertyKeyForId: string }) => {\n\t\t\tconst { name: criticalityName, propertyKeyForId } = oCriticality;\n\t\t\treturn (\n\t\t\t\tcriticalityName === propertyName ||\n\t\t\t\tpropertyName === `{${criticalityName}}` ||\n\t\t\t\tpropertyName === `{${criticalityName}/${propertyKeyForId}}`\n\t\t\t);\n\t\t}\n\t);\n\tif (matchedCriticality) {\n\t\tif (isBinding(matchedCriticality?.criticality)) {\n\t\t\treturn \"{= extension.formatters.formatCriticality($\" + matchedCriticality?.criticality + \", 'color') }\";\n\t\t}\n\t\tif (matchedCriticality?.activeCalculation || isCalcuationType) {\n\t\t\tconst staticValues = {\n\t\t\t\tdeviationLow: matchedCriticality?.deviationRangeLowValue,\n\t\t\t\tdeviationHigh: matchedCriticality?.deviationRangeHighValue,\n\t\t\t\ttoleranceLow: matchedCriticality?.toleranceRangeLowValue,\n\t\t\t\ttoleranceHigh: matchedCriticality?.toleranceRangeHighValue,\n\t\t\t\tsImprovementDirection: matchedCriticality?.improvementDirection,\n\t\t\t\toCriticalityConfigValues: { None: \"Neutral\", Negative: \"Error\", Critical: \"Critical\", Positive: \"Good\" }\n\t\t\t};\n\t\t\treturn \"{= extension.formatters.formatValueColor(${\" + matchedCriticality?.name + \"},\" + JSON.stringify(staticValues) + \") }\";\n\t\t}\n\t\treturn matchedCriticality?.criticality;\n\t}\n\treturn \"None\";\n}\n\n/**\n * This functions updates the enablement of the advanced formatting options based on the source property.\n * @param sourceProperty\n * @returns\n */\nfunction setAdvancedFormattingOptionsEnablement(sourceProperty: string) {\n\tconst oModel = getDialogModel() as JSONModel;\n\tconst mainIndicatorProperty = oModel.getProperty(\"/configuration/mainIndicatorStatusKey\");\n\toModel.setProperty(\"/configuration/trendOptions/sourceProperty\", mainIndicatorProperty);\n\toModel.setProperty(\"/configuration/indicatorsValue/sourceProperty\", mainIndicatorProperty);\n\tconst properties = oModel.getProperty(\"/configuration/properties\");\n\tconst unitsOfMeasure = oModel.getProperty(\"/configuration/advancedFormattingOptions/unitOfMeasures\") || [];\n\tconst propertyValueFormatters = oModel.getProperty(\"/configuration/advancedFormattingOptions/propertyValueFormatters\") || [];\n\tconst mainIndicatorCriticality = oModel.getProperty(\"/configuration/mainIndicatorOptions/criticality\") || [];\n\tconst selectedTrendOptions = oModel.getProperty(\"/configuration/selectedTrendOptions\") || [];\n\tconst selectedIndicatorOptions = oModel.getProperty(\"/configuration/selectedIndicatorOptions\") || [];\n\tconst dataType = getPropertyDataType(sourceProperty, properties, oModel);\n\tconst isDateType = checkForDateType(dataType);\n\tconst isNumberType = [\"Edm.Decimal\", \"Edm.Int16\", \"Edm.Int32\", \"Edm.Double\"].indexOf(dataType) > -1;\n\n\tlet isFormatterApplied = propertyValueFormatters.some(function (formatterDetail: ValueFormatter) {\n\t\treturn formatterDetail.property === sourceProperty || \"{\" + formatterDetail.property + \"}\" === sourceProperty;\n\t});\n\n\tconst formatterApplied = propertyValueFormatters.filter(function (formatterDetail: ValueFormatter) {\n\t\treturn formatterDetail.property === sourceProperty || \"{\" + formatterDetail.property + \"}\" === sourceProperty;\n\t})[0];\n\n\tif (formatterApplied?.formatterName === \"format.unit\" && typeof formatterApplied?.parameters[1].properties[0].value !== \"number\") {\n\t\tisFormatterApplied = false;\n\t}\n\n\tconst isUOMApplied = unitsOfMeasure.some(function (arrangementDetail: UnitOfMeasures) {\n\t\treturn arrangementDetail.name === sourceProperty;\n\t});\n\tconst isCriticalityApplied = mainIndicatorCriticality.some((indicatorCriticality: Criticality) => {\n\t\tconst { name: indicatorCriticalityName, propertyKeyForId } = indicatorCriticality;\n\t\treturn indicatorCriticalityName === sourceProperty || `${indicatorCriticalityName}/${propertyKeyForId}` === sourceProperty;\n\t});\n\tconst isTrendApplied = selectedTrendOptions.some(function (trendDetail: TrendOptions) {\n\t\treturn trendDetail.sourceProperty === sourceProperty && trendDetail.downDifference;\n\t});\n\tconst isIndicatorsApplied = selectedIndicatorOptions.some(function (indicatorDetail: SideIndicatorOptions) {\n\t\treturn indicatorDetail.sourceProperty === sourceProperty && indicatorDetail.targetUnit;\n\t});\n\n\toModel.setProperty(\"/configuration/advancedFormattingOptions/isFormatterApplied\", isFormatterApplied);\n\toModel.setProperty(\"/configuration/advancedFormattingOptions/isFormatterEnabled\", isDateType || isNumberType);\n\toModel.setProperty(\"/configuration/advancedFormattingOptions/isUOMApplied\", isUOMApplied);\n\toModel.setProperty(\"/configuration/advancedFormattingOptions/isCriticalityApplied\", isCriticalityApplied);\n\toModel.setProperty(\"/configuration/advancedFormattingOptions/isTrendApplied\", isTrendApplied);\n\toModel.setProperty(\"/configuration/advancedFormattingOptions/isIndicatorsApplied\", isIndicatorsApplied);\n\n\tconst trendOptions = oModel.getProperty(\"/configuration/trendOptions\") as TrendOptions;\n\tconst indicatorsValue = oModel.getProperty(\"/configuration/indicatorsValue\") as SideIndicatorOptions;\n\n\tif (trendOptions) {\n\t\tconst { referenceValue, downDifference, upDifference } = trendOptions;\n\t\tif (referenceValue && downDifference && upDifference) {\n\t\t\toModel.setProperty(\"/configuration/trendOptions/upDown\", true);\n\t\t}\n\t}\n\n\tif (indicatorsValue) {\n\t\tconst { targetValue, deviationValue, targetUnit, deviationUnit } = indicatorsValue;\n\t\tif (targetValue && deviationValue && targetUnit && deviationUnit) {\n\t\t\toModel.setProperty(\"/configuration/indicatorsValue/targetDeviation\", true);\n\t\t}\n\t}\n}\n\nfunction getPropertyDataType(sourceProperty: string, properties: Property[], model: JSONModel) {\n\tconst navigationProperty = model.getProperty(\"/configuration/navigationProperty\");\n\tif (sourceProperty.includes(\"/\") && navigationProperty) {\n\t\tconst [selectedProperty, navSelectedProperty] = sourceProperty.split(\"/\");\n\t\tconst selectedNavProperties = navigationProperty.find((prop: Property) => prop.name === selectedProperty);\n\t\tconst propertiesSelected = selectedNavProperties?.properties.find((prop: Property) => prop.name === navSelectedProperty);\n\t\treturn propertiesSelected?.type;\n\t}\n\treturn properties.find((property: Property) => property.name === sourceProperty)?.type || \"\";\n}\n\n/**\n * Updates \"sap.card.header\" property of integration card manifest and triggers rendering of the card preview.\n *\n * @param oEvent\n * @param key\n * @param fnGetHeaderConfig\n */\nfunction updateCardHeader(oEvent: Event, fnGetHeaderConfig: Function, key?: string) {\n\tconst control = oEvent.getSource() as ComboBox;\n\tlet selectedKey = control.getSelectedKey() || \"\";\n\tconst newValue = (oEvent.getParameter as (param: string) => string)(\"newValue\");\n\tlet currentValue = selectedKey !== \"\" ? `{${selectedKey}}` : newValue;\n\tconst oModel = getDialogModel() as JSONModel;\n\n\tif (key === \"navSelection\") {\n\t\tconst navigationValue = oModel.getProperty(\"/configuration/navigationValue\");\n\t\tcurrentValue = navigationValue ? `{${navigationValue}}` : \"\";\n\t}\n\n\tif (!selectedKey && key === \"mainIndicator\") {\n\t\tcurrentValue = \"\";\n\t}\n\n\tif (selectedKey !== \"\" || currentValue !== \"\") {\n\t\tcontrol.setValueState(ValueState.None);\n\t}\n\n\tconst sapCardHeader = fnGetHeaderConfig(currentValue);\n\tconst currentManifest = getCurrentCardManifest();\n\tconst oManifest = merge(currentManifest, sapCardHeader) as CardManifest;\n\n\tif (currentValue === \"\" && key === \"mainIndicator\") {\n\t\tdelete oManifest[\"sap.card\"].header.mainIndicator;\n\t\tdelete oManifest[\"sap.card\"].header.sideIndicators;\n\t}\n\n\toModel.setProperty(\"/configuration/advancedFormattingOptions/sourceProperty\", selectedKey);\n\tif (key === \"navSelection\") {\n\t\tselectedKey = oModel.getProperty(\"/configuration/mainIndicatorStatusKey\");\n\t}\n\tsetValueStateForAdvancedPanel(selectedKey);\n\trenderCardPreview(oManifest, getDialogModel() as JSONModel);\n\ttranspileIntegrationCardToAdaptive(getDialogModel() as JSONModel);\n}\n\n/**\n * Handles the change event for card title selection.\n * @param oEvent\n */\nfunction onTitleSelection(oEvent: Event) {\n\tconst getHeaderConfiguration = (value: string) => {\n\t\treturn {\n\t\t\t\"sap.card\": {\n\t\t\t\theader: {\n\t\t\t\t\ttitle: value\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t};\n\tvalidateControl(oEvent, \"title\");\n\tupdateCardHeader(oEvent, getHeaderConfiguration);\n}\n/**\n * Validates the control(control's selected key) based on the provided event and control name.\n * @param {Event} oEvent The event triggered by the control.\n * @param {string} [controlName] The name of the control being validated.\n */\nfunction validateControl(oEvent: Event, controlName?: string) {\n\tconst control: ComboBox = oEvent.getSource();\n\tconst selectedKey = control.getSelectedKey();\n\tconst value: string = (oEvent.getParameter as (param: string) => string)(\"newValue\");\n\n\tconst oModel = getDialogModel() as JSONModel;\n\tconst errorControls = oModel.getProperty(\"/configuration/errorControls\");\n\tconst resourceBundle = (getDialogModel(\"i18n\") as ResourceModel)?.getResourceBundle() as ResourceBundle;\n\n\t/**\n\t * Gets the key for the given control name.\n\t * @param {string} name The name of the control.\n\t * @returns {string} The key associated with the control name.\n\t */\n\tconst getKey = (name: string): string => {\n\t\tswitch (name) {\n\t\t\tcase \"title\":\n\t\t\t\treturn resourceBundle?.getText(\"GENERATOR_CARD_TITLE\") as string;\n\t\t\tcase \"stateIndicator\":\n\t\t\t\treturn resourceBundle?.getText(\"GENERATOR_MAIN_INDICATOR\") as string;\n\t\t\tdefault:\n\t\t\t\treturn resourceBundle?.getText(\"GENERATOR_GROUP_PROPERTY\") as string;\n\t\t}\n\t};\n\n\tconst controlErrorText = resourceBundle?.getText(\"GENERIC_ERR_MSG\", [getKey(controlName ?? \"\")]);\n\n\tif (!selectedKey && !value && controlName === \"title\") {\n\t\terrorControls?.push(control);\n\t\tcontrol.setValueStateText(controlErrorText);\n\t} else if (!selectedKey && value) {\n\t\terrorControls?.push(control);\n\t\tcontrol.setValueState(ValueState.Error);\n\t\tcontrol.setValueStateText(controlErrorText);\n\t} else {\n\t\terrorControls?.forEach((errorControl: ComboBox, index: number) => {\n\t\t\tif (control.getId() === errorControl.getId()) {\n\t\t\t\terrorControls.splice(index, 1);\n\t\t\t}\n\t\t});\n\t\tcontrol.setValueState(ValueState.None);\n\t}\n}\n\n/**\n * Handles the change event for card subtitle selection.\n * @param oEvent\n */\nfunction onSubTitleSelection(oEvent: Event) {\n\tconst getHeaderConfiguration = (value: string) => {\n\t\tconst oModel = getDialogModel() as JSONModel;\n\t\treturn {\n\t\t\t\"sap.card\": {\n\t\t\t\theader: {\n\t\t\t\t\tsubTitle: getArrangements(value, {\n\t\t\t\t\t\tunitOfMeasures: oModel.getProperty(\"/configuration/advancedFormattingOptions/unitOfMeasures\"),\n\t\t\t\t\t\ttextArrangements: oModel.getProperty(\"/configuration/advancedFormattingOptions/textArrangements\"),\n\t\t\t\t\t\tpropertyValueFormatters: oModel.getProperty(\"/configuration/advancedFormattingOptions/propertyValueFormatters\")\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t};\n\tupdateCardHeader(oEvent, getHeaderConfiguration);\n}\n\n/**\n * Handles the change event for card header UOM selection.\n * @param oEvent\n */\nfunction onHeaderUOMSelection(oEvent: Event) {\n\tconst getHeaderConfiguration = (value: string) => {\n\t\tconst oModel = getDialogModel() as JSONModel;\n\t\treturn {\n\t\t\t\"sap.card\": {\n\t\t\t\theader: {\n\t\t\t\t\tunitOfMeasurement: getArrangements(value, {\n\t\t\t\t\t\tunitOfMeasures: oModel.getProperty(\"/configuration/advancedFormattingOptions/unitOfMeasures\"),\n\t\t\t\t\t\ttextArrangements: oModel.getProperty(\"/configuration/advancedFormattingOptions/textArrangements\"),\n\t\t\t\t\t\tpropertyValueFormatters: oModel.getProperty(\"/configuration/advancedFormattingOptions/propertyValueFormatters\")\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t};\n\n\tupdateCardHeader(oEvent, getHeaderConfiguration);\n}\nfunction addLabelsForProperties(selectedNavigationProperty: NavigationalData, data: Record<string, unknown>) {\n\tif (\n\t\tselectedNavigationProperty.name &&\n\t\tdata[selectedNavigationProperty.name] !== undefined &&\n\t\tdata[selectedNavigationProperty.name] !== null\n\t) {\n\t\tconst propVal = selectedNavigationProperty?.value as unknown as PropertyInfoMap;\n\t\tpropVal?.forEach((ele: PropertyInfo) => {\n\t\t\tconst name = data[selectedNavigationProperty.name] as Record<string, unknown>;\n\t\t\tif (name[ele.name] !== undefined && name[ele.name] !== null) {\n\t\t\t\tconst propertyValue = name[ele.name] as string;\n\t\t\t\tconst value = formatPropertyDropdownValues(ele, propertyValue);\n\t\t\t\tele.labelWithValue = value;\n\t\t\t} else {\n\t\t\t\tele.labelWithValue = `${ele.label} (<empty>)`;\n\t\t\t}\n\t\t});\n\t} else {\n\t\tselectedNavigationProperty.value = [];\n\t}\n}\n\nasync function updateCardConfigurationData(selectedProperty: string, selectedNavigationProperty: NavigationalData) {\n\tconst { entitySetWithObjectContext } = Application.getInstance().fetchDetails();\n\tconst oModel = getDialogModel() as JSONModel;\n\tconst { serviceUrl, oDataV4, $data } = oModel.getProperty(\"/configuration\");\n\tconst queryParameters: QueryParameters = {\n\t\tproperties: [],\n\t\tnavigationProperties: [\n\t\t\t{\n\t\t\t\tname: selectedProperty,\n\t\t\t\tproperties: selectedNavigationProperty.value.map((property) => property.name) || []\n\t\t\t}\n\t\t]\n\t};\n\tconst result = await ODataUtils.fetchDataAsync(serviceUrl, entitySetWithObjectContext, oDataV4, createUrlParameters(queryParameters));\n\taddLabelsForProperties(selectedNavigationProperty, result);\n\t$data[selectedProperty] = result[selectedProperty];\n\toModel.setProperty(\"/configuration/$data\", $data);\n}\n\nfunction updateHeaderNavigationSelection(oEvent: Event) {\n\tconst oModel = getDialogModel() as JSONModel;\n\tconst getHeaderConfiguration = (value: string) => ({\n\t\t\"sap.card\": {\n\t\t\theader: {\n\t\t\t\tmainIndicator: {\n\t\t\t\t\tstate: getCriticality(value),\n\t\t\t\t\tnumber: getArrangements(value, {\n\t\t\t\t\t\tunitOfMeasures: oModel.getProperty(\"/configuration/advancedFormattingOptions/unitOfMeasures\"),\n\t\t\t\t\t\ttextArrangements: oModel.getProperty(\"/configuration/advancedFormattingOptions/textArrangements\"),\n\t\t\t\t\t\tpropertyValueFormatters: oModel.getProperty(\"/configuration/advancedFormattingOptions/propertyValueFormatters\")\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\tconst control = oEvent.getSource() as ComboBox;\n\tconst selectedKey = control.getSelectedKey();\n\tconst mainIndicatorStatusKeyInitial = oModel.getProperty(\"/configuration/mainIndicatorStatusKeyInitial\");\n\tconst mainIndicatorStatusKey = oModel.getProperty(\"/configuration/mainIndicatorStatusKey\");\n\tconst sourcePropertyToSet = mainIndicatorStatusKeyInitial ?? mainIndicatorStatusKey;\n\n\tif (!mainIndicatorStatusKeyInitial) {\n\t\toModel.setProperty(\"/configuration/mainIndicatorStatusKeyInitial\", sourcePropertyToSet);\n\t} else {\n\t\toModel.setProperty(\"/configuration/mainIndicatorStatusKey\", sourcePropertyToSet);\n\t}\n\tconst sourceProperty = oModel.getProperty(\"/configuration/mainIndicatorStatusKey\");\n\tupdateSelectedNavigation(selectedKey, sourceProperty, oModel, \"header\");\n\toModel.setProperty(\"/configuration/navigationValue\", `${sourcePropertyToSet}/${selectedKey}`);\n\toModel.setProperty(\"/configuration/mainIndicatorNavigationSelectedKey\", selectedKey);\n\toModel.setProperty(\"/configuration/mainIndicatorStatusKey\", `${sourceProperty}/${selectedKey}`);\n\tupdateCardHeader(oEvent, getHeaderConfiguration, \"navSelection\");\n}\n\n/**\n * Handles the change event for card KPI value selection.\n * @param oEvent\n */\nasync function onStateIndicatorSelection(oEvent: Event) {\n\tconst getHeaderConfiguration = (value: string) => {\n\t\tconst oModel = getDialogModel() as JSONModel;\n\t\treturn {\n\t\t\t\"sap.card\": {\n\t\t\t\theader: {\n\t\t\t\t\tmainIndicator: {\n\t\t\t\t\t\tstate: getCriticality(value),\n\t\t\t\t\t\tnumber: getArrangements(value, {\n\t\t\t\t\t\t\tunitOfMeasures: oModel.getProperty(\"/configuration/advancedFormattingOptions/unitOfMeasures\"),\n\t\t\t\t\t\t\ttextArrangements: oModel.getProperty(\"/configuration/advancedFormattingOptions/textArrangements\"),\n\t\t\t\t\t\t\tpropertyValueFormatters: oModel.getProperty(\"/configuration/advancedFormattingOptions/propertyValueFormatters\")\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t};\n\tconst oModel = getDialogModel() as JSONModel;\n\tconst control = oEvent.getSource() as ComboBox;\n\tconst selectedKey = control.getSelectedKey();\n\tawait updateSelectedNavigationProperty(selectedKey, true);\n\tconst selectedNavigationPropertyHeader = oModel.getProperty(\"/configuration/selectedNavigationPropertyHeader\");\n\tconst selectedValue: string = (oEvent.getParameter as (param: string) => string)(\"newValue\");\n\tvalidateControl(oEvent, \"stateIndicator\");\n\tconst currentValue = selectedKey !== \"\" ? `{${selectedKey}}` : selectedValue;\n\toModel.setProperty(\"/configuration/mainIndicatorNavigationSelectedValue\", \"\");\n\toModel.setProperty(\"/configuration/mainIndicatorStatusKeyInitial\", selectedValue);\n\toModel.setProperty(\"/configuration/mainIndicatorNavigationSelectedKey\", \"\");\n\n\tconst properties = oModel.getProperty(\"/configuration/properties\");\n\tconst dataType = properties.find((prop: Property) => prop.name === selectedKey)?.type || \"\";\n\tconst isDateType = checkForDateType(dataType);\n\tconst isNumberType = [\"Edm.Decimal\", \"Edm.Int16\", \"Edm.Int32\", \"Edm.Double\"].indexOf(dataType) > -1;\n\toModel.setProperty(\"/configuration/mainIndicatorStatusKey\", selectedKey);\n\toModel.setProperty(\"/configuration/advancedFormattingOptions/isFormatterEnabled\", isDateType || isNumberType);\n\toModel.setProperty(\"/configuration/advancedFormattingOptions/textArrangementSourceProperty\", currentValue);\n\toModel.setProperty(\"/configuration/advancedFormattingOptions/textArrangementSelectedKey\", selectedKey);\n\n\tif (oModel.getProperty(\"/configuration/trendOptions/sourceProperty\") !== selectedKey) {\n\t\toModel.setProperty(\"/configuration/trendOptions\", {});\n\t\toModel.setProperty(\"/configuration/indicatorsValue\", {});\n\t}\n\n\toModel.setProperty(\"/configuration/trendOptions/sourceProperty\", selectedKey);\n\toModel.setProperty(\"/configuration/indicatorsValue/sourceProperty\", selectedKey);\n\n\tsetValueStateForAdvancedPanel(selectedKey);\n\tupdateTrendForCardHeader();\n\tupdateSideIndicatorsForHeader();\n\toModel.setProperty(\"/configuration/navigationValue\", \"\");\n\tif (!selectedNavigationPropertyHeader?.value.length) {\n\t\tupdateCardHeader(oEvent, getHeaderConfiguration, \"mainIndicator\");\n\t} else {\n\t\tupdateCardHeader(oEvent, getHeaderConfiguration, \"navSelection\");\n\t}\n}\n\n/**\n * Retrieves the property type and selected value from the given model based on the selected property.\n *\n * @param {JSONModel} model - The JSON model containing configuration and data.\n * @param {string} selectedProperty - The property path to retrieve the type and value for.\n *                                     It can be a simple property or a navigation property (e.g., \"propertyName\" or \"navigationProperty/propertyName\").\n * @returns {{ propertyType: string | undefined, selectedValue: string }} - An object containing:\n *   - `propertyType`: The type of the selected property (if found).\n *   - `selectedValue`: The value of the selected property (if found).\n */\nfunction getPropertyAndSelectedValue(model: JSONModel, selectedProperty: string) {\n\tlet propertyType;\n\tlet selectedValue;\n\tconst navigationProperty = model.getProperty(\"/configuration/navigationProperty\");\n\tconst [selectProperty, navSelectedProperty] = selectedProperty.split(\"/\");\n\n\tif (navSelectedProperty && navigationProperty) {\n\t\tconst selectedNavProperties = navigationProperty.find((prop: Property) => prop.name === selectProperty);\n\t\tconst propertiesSelected = selectedNavProperties?.properties.find((prop: Property) => prop.name === navSelectedProperty);\n\t\tpropertyType = propertiesSelected?.type;\n\t\tselectedValue = model.getProperty(\"/configuration/$data\")[selectProperty][navSelectedProperty];\n\t} else {\n\t\tpropertyType = model.getProperty(\"/configuration/properties\").find((prop: Property) => prop.name === selectedProperty)?.type;\n\t\tselectedValue = model.getProperty(\"/configuration/$data\")[selectedProperty];\n\t}\n\n\treturn { propertyType, selectedValue };\n}\n\n/**\n * Disables or enables the apply unit of measure based on the selected property.\n * @param {JSONModel} model - The JSON model containing the configuration.\n * @param {string} selectedProperty - The name of the selected property.\n */\nfunction disableOrEnableUOMAndTrend(model: JSONModel, selectedProperty: string) {\n\tlet typeSupported = true;\n\tconst { propertyType, selectedValue } = getPropertyAndSelectedValue(model, selectedProperty);\n\tif (propertyType === \"Edm.String\") {\n\t\ttypeSupported = !isNaN(Number(selectedValue));\n\t}\n\tconst isDateType = checkForDateType(propertyType);\n\tconst isUoMEnabled = !(propertyType === \"Edm.Boolean\" || propertyType === \"Edm.Guid\" || isDateType) && typeSupported;\n\tconst isNumberType = [\"Edm.Decimal\", \"Edm.Int16\", \"Edm.Int32\", \"Edm.Double\"].indexOf(propertyType) > -1;\n\tmodel.setProperty(\"/configuration/advancedFormattingOptions/isUoMEnabled\", isUoMEnabled);\n\tmodel.setProperty(\"/configuration/advancedFormattingOptions/isTrendEnabled\", isNumberType);\n}\n\nfunction updateContentNavigationSelection(oEvent: Event) {\n\tconst { rootComponent, entitySet } = Application.getInstance().fetchDetails();\n\tconst control: ComboBox = oEvent.getSource();\n\tlet selectedKey = control.getSelectedKey() || \"\";\n\tconst oModel = getDialogModel() as JSONModel;\n\tconst sPath = control?.getBindingContext()?.getPath() as string;\n\tconst group: GroupItem = oModel.getProperty(sPath);\n\tconst currentValue = `{${group.name}/${selectedKey}}`;\n\tgroup.value =\n\t\tselectedKey &&\n\t\tgetArrangements(currentValue, {\n\t\t\tunitOfMeasures: oModel.getProperty(\"/configuration/advancedFormattingOptions/unitOfMeasures\"),\n\t\t\ttextArrangements: oModel.getProperty(\"/configuration/advancedFormattingOptions/textArrangements\"),\n\t\t\tpropertyValueFormatters: oModel.getProperty(\"/configuration/advancedFormattingOptions/propertyValueFormatters\")\n\t\t});\n\tupdateSelectedNavigation(selectedKey, group.name, oModel, \"content\");\n\n\tconst navProperty = ODataUtils.getPropertyLabel(\n\t\trootComponent.getModel() as Model,\n\t\tentitySet,\n\t\tgroup.name,\n\t\tPropertyInfoType.NavigationProperty\n\t) as NavigationParameter;\n\tconst property = navProperty?.properties?.find((oProperty) => oProperty.name === selectedKey);\n\tconst propertyLabel = property ? property.label : \"\";\n\tgroup.label = propertyLabel ? propertyLabel : \"\";\n\n\toModel.refresh();\n\tupdateCardGroups(oModel);\n\tselectedKey = `${group.name}/${selectedKey}`;\n\tsetValueStateForAdvancedPanel(selectedKey);\n\ttranspileIntegrationCardToAdaptive(getDialogModel() as JSONModel);\n}\n\nfunction updateSelectedNavigation(selectedKey: string, sourceProperty: string, oModel: JSONModel, source: string) {\n\tconst selectedNavigation: NavigationParameter[] =\n\t\tsource === \"header\"\n\t\t\t? oModel.getProperty(\"/configuration/selectedHeaderNavigation\")\n\t\t\t: oModel.getProperty(\"/configuration/selectedContentNavigation\");\n\tconst existingIndex = selectedNavigation.findIndex((navItem) => navItem.name === sourceProperty);\n\n\tif (existingIndex !== -1) {\n\t\tconst existingItem = selectedNavigation[existingIndex];\n\t\tconst navValues = existingItem?.value?.includes(selectedKey) ? existingItem.value : [...existingItem.value, selectedKey];\n\t\tselectedNavigation[existingIndex] = { ...existingItem, value: navValues };\n\t} else {\n\t\tconst name = sourceProperty;\n\t\tselectedNavigation.push({ name, value: [selectedKey] });\n\t}\n\n\tconst propertyPath = source === \"header\" ? \"/configuration/selectedHeaderNavigation\" : \"/configuration/selectedContentNavigation\";\n\toModel.setProperty(propertyPath, selectedNavigation);\n}\nasync function updateSelectedNavigationProperty(selectedKey: string, isHeader: boolean) {\n\tconst oModel = getDialogModel() as JSONModel;\n\tconst navigationProperty: NavigationParameter[] = oModel.getProperty(\"/configuration/navigationProperty\") || [];\n\tconst selectedNavigationalProperties: NavigationalData[] = oModel.getProperty(\"/configuration/selectedNavigationalProperties\") || [];\n\tconst existingIndex = selectedNavigationalProperties.findIndex((navItem) => navItem.name === selectedKey);\n\n\tconst selectedProperty = navigationProperty.find((prop) => prop.name === selectedKey);\n\tconst selectedPropertyName = selectedProperty?.name || \"\";\n\tconst selectedPropertyValues = selectedProperty?.properties || [];\n\n\tconst data: NavigationalData = {\n\t\tname: selectedPropertyName,\n\t\tvalue: selectedPropertyValues\n\t};\n\n\tif (existingIndex === -1 && selectedProperty) {\n\t\tselectedNavigationalProperties.push(data);\n\t}\n\toModel.setProperty(\"/configuration/selectedNavigationalProperties\", selectedNavigationalProperties);\n\tif (isHeader) {\n\t\toModel.setProperty(\"/configuration/selectedNavigationPropertyHeader\", data);\n\t} else {\n\t\toModel.setProperty(\"/configuration/selectedNavigationPropertiesContent\", data);\n\t}\n\n\tif (selectedProperty) {\n\t\tawait updateCardConfigurationData(selectedProperty.name, data);\n\t}\n}\n\nfunction getTranslatedText(sKey: string) {\n\treturn getDialogModel(\"i18n\").getObject(sKey);\n}\n\nfunction onAddClick(oEvent: Event) {\n\tconst oModel = getDialogModel() as JSONModel;\n\tconst comboBox: ComboBox = oEvent.getSource();\n\tconst sPath = comboBox.getBindingContext()?.getPath();\n\n\tif (sPath) {\n\t\tconst group = oModel.getProperty(sPath);\n\t\tif (!group.items) {\n\t\t\tgroup.items = [];\n\t\t}\n\t\tconst nextItemNumber = oModel.getProperty(sPath).items.length;\n\t\tconst newItem = {\n\t\t\tlabel: null,\n\t\t\tvalue: `{/items/${nextItemNumber}}`,\n\t\t\tisEnabled: false,\n\t\t\tisNavigationEnabled: false,\n\t\t\tnavigationalProperties: []\n\t\t};\n\t\toModel.getProperty(sPath).items.push(newItem);\n\t\tconst iItemsAdded = oModel.getProperty(sPath).items.length;\n\t\toModel.setProperty(sPath + \"/enableAddMoreGroupItems\", true);\n\t\tif (iItemsAdded === MAX_GROUP_ITEMS) {\n\t\t\toModel.setProperty(sPath + \"/enableAddMoreGroupItems\", false);\n\t\t}\n\t\toModel.setProperty(\"/configuration/isEdited\", true);\n\t\toModel.refresh();\n\t}\n}\n\nasync function okPressed() {\n\tconst { rootComponent, entitySet } = Application.getInstance().fetchDetails();\n\n\tconst hasError = validateHeader();\n\tif (hasError) {\n\t\treturn;\n\t}\n\n\tconst oCard = CoreElement.getElementById(\"cardGeneratorDialog--cardPreview\") as Card;\n\tconst mManifest = oCard.getManifest() as CardManifest;\n\n\tawait enhanceManifestWithInsights(mManifest, rootComponent);\n\tenhanceManifestWithConfigurationParameters(mManifest, getDialogModel() as JSONModel);\n\tcreateAndStoreGeneratedi18nKeys(mManifest);\n\tupdateManifestWithSelectQueryParams(mManifest);\n\n\tdelete mManifest[\"sap.card\"].configuration?.parameters?.contextParameters;\n\tconst payload = {\n\t\tfloorplan: \"ObjectPage\",\n\t\tlocalPath: `cards/op/${entitySet}`,\n\t\tfileName: \"manifest.json\",\n\t\tmanifests: [\n\t\t\t{\n\t\t\t\ttype: \"integration\",\n\t\t\t\tmanifest: mManifest,\n\t\t\t\tdefault: true,\n\t\t\t\tentitySet: entitySet\n\t\t\t}\n\t\t]\n\t};\n\n\tjQuery.ajax({\n\t\ttype: \"POST\",\n\t\turl: \"/cards/store\",\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\"\n\t\t},\n\t\tdata: JSON.stringify(payload),\n\t\tsuccess: function () {\n\t\t\tMessageToast.show(getTranslatedText(\"CARD_SAVE_SUCCESS_MESSAGE\"));\n\t\t},\n\t\terror: function (jqXHR, textStatus, errorThrown) {\n\t\t\tconst errorMessage = `Unable to save the card: ${textStatus} - ${errorThrown} (Status: ${jqXHR.status} - ${jqXHR.statusText})`;\n\t\t\tLog.error(errorMessage);\n\t\t\tMessageBox.error(getTranslatedText(\"CARD_SAVE_ERROR_MESSAGE\"));\n\t\t}\n\t});\n\t(getDialogModel() as JSONModel).setProperty(\"/configuration/isEdited\", false);\n\t(getCardGeneratorDialog() as Dialog)?.close();\n\ttoggleOffAdvancedPanel();\n}\n\nfunction validateHeader() {\n\tlet hasError = false;\n\tconst oModel = getDialogModel() as JSONModel;\n\tconst errorControls = oModel.getProperty(\"/configuration/errorControls\");\n\terrorControls?.forEach((ele: ComboBox) => {\n\t\tif (!ele.getValue() || ele.getValueState() == \"Error\") {\n\t\t\tele.setValueState(ValueState.Error);\n\t\t\thasError = true;\n\t\t}\n\t});\n\treturn hasError;\n}\n\nfunction validateIndicatorsValues(buttonId: string) {\n\tconst oModel = getDialogModel() as JSONModel;\n\tconst indicatorsValue = oModel.getProperty(\"/configuration/indicatorsValue\");\n\tlet hasError = false;\n\tconst { targetValue, deviationValue, targetUnit, deviationUnit } = indicatorsValue;\n\n\tif (!targetValue) {\n\t\toModel.setProperty(\"/configuration/indicatorsValue/targetValueState\", \"Error\");\n\t\tconst targetInputId = buttonId + \"--targetInputValue\";\n\t\tsetValueStateTextForControl(targetInputId, getTranslatedText(\"TARGET_VALUE_ERR_MSG\"));\n\t}\n\tif (!deviationValue) {\n\t\toModel.setProperty(\"/configuration/indicatorsValue/deviationValueState\", \"Error\");\n\t\tconst deviationInputId = buttonId + \"--deviationInputValue\";\n\t\tsetValueStateTextForControl(deviationInputId, getTranslatedText(\"DEVIATION_VALUE_ERR_MSG\"));\n\t}\n\tif (!targetUnit) {\n\t\toModel.setProperty(\"/configuration/indicatorsValue/targetUnitValueState\", \"Error\");\n\t\tconst targetUnitInputId = buttonId + \"--targetUnitInput\";\n\t\tsetValueStateTextForControl(targetUnitInputId, getTranslatedText(\"TARGET_UNIT_ERR_MSG\"), true);\n\t}\n\tif (!deviationUnit) {\n\t\toModel.setProperty(\"/configuration/indicatorsValue/deviationUnitValueState\", \"Error\");\n\t\tconst deviationUnitInputId = buttonId + \"--deviationUnitInput\";\n\t\tsetValueStateTextForControl(deviationUnitInputId, getTranslatedText(\"DEVIATION_UNIT_ERR_MSG\"), true);\n\t}\n\tif (!targetValue || !deviationValue || !targetUnit || !deviationUnit) {\n\t\thasError = true;\n\t}\n\treturn hasError;\n}\n\nfunction validateTrendValues(buttonId: string) {\n\tconst oModel = getDialogModel() as JSONModel;\n\tconst trendValues = oModel.getProperty(\"/configuration/trendOptions\");\n\tlet hasError = false;\n\tconst { referenceValue, downDifference, upDifference } = trendValues;\n\n\tif (!referenceValue) {\n\t\toModel.setProperty(\"/configuration/trendOptions/referenceValueState\", \"Error\");\n\t\tconst referenceInputId = buttonId + \"--trendReferenceValueInput\";\n\t\tsetValueStateTextForControl(referenceInputId, getTranslatedText(\"REF_ERR_MSG\"));\n\t}\n\tif (!downDifference) {\n\t\toModel.setProperty(\"/configuration/trendOptions/downDifferenceValueState\", \"Error\");\n\t\tconst trendDownDifferenceInputId = buttonId + \"--trendDownDifferenceInput\";\n\t\tsetValueStateTextForControl(trendDownDifferenceInputId, getTranslatedText(\"LOW_RANGE_ERR_MSG\"));\n\t}\n\tif (!upDifference) {\n\t\toModel.setProperty(\"/configuration/trendOptions/upDifferenceValueState\", \"Error\");\n\t\tconst trendUpDifferenceInputId = buttonId + \"--trendUpDifferenceInput\";\n\t\tsetValueStateTextForControl(trendUpDifferenceInputId, getTranslatedText(\"HIGH_RANGE_ERR_MSG\"));\n\t}\n\tif (!referenceValue || !downDifference || !upDifference) {\n\t\thasError = true;\n\t}\n\treturn hasError;\n}\n\nfunction setValueStateTextForControl(controlId: string, errorMessage: string, isSelectControl?: boolean) {\n\tconst elementControl = CoreElement?.getElementById(controlId) as ComboBox;\n\telementControl.key = errorMessage;\n\tconst validateControl = isSelectControl\n\t\t? !elementControl?.getSelectedKey() || elementControl.getValueState() == \"Error\"\n\t\t: !elementControl?.getValue() || elementControl.getValueState() == \"Error\";\n\tif (validateControl) {\n\t\tconst resourceBundle = (getDialogModel(\"i18n\") as ResourceModel)?.getResourceBundle() as ResourceBundle;\n\t\tconst validationText = resourceBundle?.getText(\"GENERIC_ERR_MSG\", [elementControl?.key]);\n\t\telementControl?.setValueStateText(validationText);\n\t}\n}\n\nfunction onGroupAddClick(oEvent: any) {\n\tconst oModel = getDialogModel() as JSONModel;\n\tconst iLength = oModel.getProperty(\"/configuration/groups\").length;\n\tconst currentDefaultValue = ((getDialogModel(\"i18n\") as ResourceModel)?.getResourceBundle() as ResourceBundle)?.getText(\n\t\t\"GENERATOR_DEFAULT_GROUP_NAME\",\n\t\t[iLength + 1]\n\t);\n\toModel.getProperty(\"/configuration/groups\").push({\n\t\ttitle: currentDefaultValue,\n\t\titems: [\n\t\t\t{\n\t\t\t\tlabel: null,\n\t\t\t\tvalue: \"{/items/0}\",\n\t\t\t\tisEnabled: false,\n\t\t\t\tisNavigationEnabled: false,\n\t\t\t\tnavigationalProperties: []\n\t\t\t}\n\t\t],\n\t\tnewItem: {\n\t\t\tlabel: null,\n\t\t\tvalue: null,\n\t\t\tisEnabled: false,\n\t\t\tisNavigationEnabled: false,\n\t\t\tnavigationalProperties: []\n\t\t}\n\t});\n\tconst groupLength = oModel.getProperty(\"/configuration/groups\").length;\n\tif (groupLength === MAX_GROUPS) {\n\t\toModel.setProperty(\"/configuration/groupLimitReached\", true);\n\t}\n\toModel.setProperty(\"/configuration/isEdited\", true);\n\toModel.refresh();\n\tupdateCardGroups(oModel);\n\ttranspileIntegrationCardToAdaptive(getDialogModel() as JSONModel);\n}\n\nfunction deleteGroup(event: any) {\n\tconst oModel = getDialogModel() as JSONModel;\n\tconst sPath = event.getSource().getBindingContext().getPath();\n\tconst groupIndex = sPath.split(\"/configuration/groups/\")[1];\n\toModel.getProperty(\"/configuration/groups\").splice(groupIndex, 1);\n\tconst groupLength = oModel.getProperty(\"/configuration/groups\").length;\n\tif (groupLength < MAX_GROUPS) {\n\t\toModel.setProperty(\"/configuration/groupLimitReached\", false);\n\t}\n\tdelete context._itemActionsMenu;\n\toModel.setProperty(\"/configuration/isEdited\", true);\n\toModel.refresh();\n\tupdateCardGroups(oModel);\n\tsetValueStateForAdvancedPanel();\n\ttranspileIntegrationCardToAdaptive(getDialogModel() as JSONModel);\n}\n\nfunction onGroupDeleteClick(event: any) {\n\tconst resourceBundle = (getDialogModel(\"i18n\") as ResourceModel)?.getResourceBundle() as ResourceBundle;\n\tconst warningMessage = resourceBundle?.getText(\"GENERATOR_DELETE_GROUP_WARNING\") || \"\";\n\tMessageBox.warning(warningMessage, {\n\t\tactions: [MessageBox.Action.DELETE, MessageBox.Action.CANCEL],\n\t\temphasizedAction: MessageBox.Action.DELETE,\n\t\tonClose: function (action: string) {\n\t\t\tif (action === \"DELETE\") {\n\t\t\t\tdeleteGroup(event);\n\t\t\t}\n\t\t}\n\t});\n}\n\nfunction onGroupTitleChange(oEvent: any) {\n\tconst currentValue = oEvent.getParameters().newValue;\n\tconst oModel = getDialogModel() as JSONModel;\n\tconst sPath = oEvent.getSource().getBindingContext().getPath();\n\tconst group = oModel.getProperty(sPath);\n\tgroup.title = currentValue;\n\toModel.refresh();\n\tupdateCardGroups(oModel);\n\ttranspileIntegrationCardToAdaptive(getDialogModel() as JSONModel);\n}\n\nfunction onDeleteClick(oEvent: any) {\n\tconst oModel = getDialogModel() as JSONModel;\n\tconst sPath = oEvent.getSource().getBindingContext().getPath();\n\tconst [groupIndex, itemIndex] = sPath.match(/(\\d+)/g).map(function (sValue: string) {\n\t\treturn Number(sValue);\n\t});\n\toModel.getProperty(\"/configuration/groups/\" + groupIndex).items.splice(itemIndex, 1);\n\tconst iLength = oModel.getProperty(\"/configuration/groups/\" + groupIndex).items.length;\n\tif (iLength < MAX_GROUP_ITEMS) {\n\t\toModel.setProperty(\"/configuration/groups/\" + groupIndex + \"/enableAddMoreGroupItems\", true);\n\t}\n\tcontext._itemActionsMenu?.destroy();\n\tdelete context._itemActionsMenu;\n\toModel.setProperty(\"/configuration/isEdited\", true);\n\toModel.refresh();\n\tupdateCardGroups(oModel);\n\tsetValueStateForAdvancedPanel();\n\ttranspileIntegrationCardToAdaptive(getDialogModel() as JSONModel);\n}\n\n/**\n * Updates the sap.card.header.mainIndicator.trend property of the integration card manifest and triggers rendering of the card preview.\n */\nfunction updateTrendForCardHeader() {\n\tconst oModel = getDialogModel() as JSONModel;\n\tlet trendOptions = oModel.getProperty(\"/configuration/trendOptions\");\n\tconst selectedTrendOptions = oModel.getProperty(\"/configuration/selectedTrendOptions\");\n\n\tconst sapCardHeader = {\n\t\t\"sap.card\": {\n\t\t\theader: {\n\t\t\t\tmainIndicator: {\n\t\t\t\t\ttrend: \"None\"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tlet selectedTrendOptionIndex = -1;\n\tselectedTrendOptions?.forEach((selectedTrendOption: any, index: number) => {\n\t\tif (selectedTrendOption.sourceProperty === trendOptions.sourceProperty) {\n\t\t\tselectedTrendOptionIndex = index;\n\t\t\ttrendOptions = { ...selectedTrendOption, ...trendOptions };\n\t\t\toModel.setProperty(\"/configuration/trendOptions\", trendOptions);\n\t\t}\n\t});\n\tconst { referenceValue, downDifference, upDifference, sourceProperty } = trendOptions;\n\n\tif (referenceValue && downDifference && upDifference && sourceProperty) {\n\t\tconst newTrendValues = { referenceValue, downDifference, upDifference, sourceProperty };\n\t\tif (selectedTrendOptionIndex !== -1) {\n\t\t\tselectedTrendOptions[selectedTrendOptionIndex] = newTrendValues;\n\t\t} else {\n\t\t\tselectedTrendOptions.push(newTrendValues);\n\t\t}\n\t\tconst staticValues = {\n\t\t\treferenceValue: Number(referenceValue),\n\t\t\tdownDifference: Number(downDifference),\n\t\t\tupDifference: Number(upDifference)\n\t\t};\n\t\tsapCardHeader[\"sap.card\"][\"header\"][\"mainIndicator\"][\"trend\"] = getTrendDirection(staticValues);\n\t}\n\n\tconst currentManifest = getCurrentCardManifest();\n\tconst oManifest = merge(currentManifest, sapCardHeader) as CardManifest;\n\trenderCardPreview(oManifest, getDialogModel() as JSONModel);\n\ttranspileIntegrationCardToAdaptive(getDialogModel() as JSONModel);\n}\n\n/**\n * Updates the sap.card.header.sideIndicators property of the integration card manifest and triggers rendering of the card preview.\n */\nfunction updateSideIndicatorsForHeader() {\n\tconst oModel = getDialogModel() as JSONModel;\n\tlet indicatorsValue = oModel.getProperty(\"/configuration/indicatorsValue\");\n\tconst selectedIndicatorOptions = oModel.getProperty(\"/configuration/selectedIndicatorOptions\");\n\n\tlet selectedIndicatorOptionIndex = -1;\n\tselectedIndicatorOptions?.forEach((selectedIndicatorOption: any, index: number) => {\n\t\tif (selectedIndicatorOption.sourceProperty === indicatorsValue.sourceProperty) {\n\t\t\tselectedIndicatorOptionIndex = index;\n\t\t\tindicatorsValue = { ...selectedIndicatorOption, ...indicatorsValue };\n\t\t\toModel.setProperty(\"/configuration/indicatorsValue\", indicatorsValue);\n\t\t}\n\t});\n\n\tlet sapCardHeader = {\n\t\t\"sap.card\": {\n\t\t\theader: {\n\t\t\t\tsideIndicators: [\n\t\t\t\t\t{\n\t\t\t\t\t\ttitle: \"\",\n\t\t\t\t\t\tnumber: \"\",\n\t\t\t\t\t\tunit: \"\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttitle: \"\",\n\t\t\t\t\t\tnumber: \"\",\n\t\t\t\t\t\tunit: \"\"\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t}\n\t};\n\tconst { targetValue, deviationValue, targetUnit, deviationUnit, sourceProperty } = indicatorsValue;\n\tif (targetValue && deviationValue && targetUnit && deviationUnit && sourceProperty) {\n\t\tconst indicatorsValueToAdd = { targetValue, deviationValue, targetUnit, deviationUnit, sourceProperty };\n\t\tif (selectedIndicatorOptionIndex !== -1) {\n\t\t\tselectedIndicatorOptions[selectedIndicatorOptionIndex] = indicatorsValueToAdd;\n\t\t} else {\n\t\t\tselectedIndicatorOptions.push(indicatorsValueToAdd);\n\t\t}\n\t\toModel.setProperty(\"/configuration/indicatorsValue/targetDeviation\", targetValue);\n\t\tsapCardHeader = {\n\t\t\t\"sap.card\": {\n\t\t\t\theader: {\n\t\t\t\t\tsideIndicators: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttitle: \"Target\",\n\t\t\t\t\t\t\tnumber: targetValue,\n\t\t\t\t\t\t\tunit: targetUnit\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttitle: \"Deviation\",\n\t\t\t\t\t\t\tnumber: deviationValue,\n\t\t\t\t\t\t\tunit: deviationUnit\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\tconst currentManifest = getCurrentCardManifest();\n\tconst oManifest = merge(currentManifest, sapCardHeader) as CardManifest;\n\trenderCardPreview(oManifest, getDialogModel() as JSONModel);\n\toModel.refresh();\n\ttranspileIntegrationCardToAdaptive(getDialogModel() as JSONModel);\n}\n\n/**\n * Get trend direction based on the static values.\n * @param staticValues\n * @returns\n */\nfunction getTrendDirection(staticValues: object | undefined) {\n\tconst oModel = getDialogModel() as JSONModel;\n\tconst mainIndicatorKey = oModel.getProperty(\"/configuration/mainIndicatorStatusKey\");\n\tconst trendValues = oModel.getProperty(\"/configuration/trendOptions\");\n\tconst { referenceValue } = trendValues;\n\n\tif (mainIndicatorKey && staticValues) {\n\t\toModel.setProperty(\"/configuration/trendOptions/upDown\", referenceValue);\n\t\treturn \"{= extension.formatters.formatTrendIcon(${\" + mainIndicatorKey + \"},\" + JSON.stringify(staticValues) + \") }\";\n\t}\n\treturn \"None\";\n}\n\nasync function onPropertySelection(oEvent: Event) {\n\tconst { rootComponent, entitySet } = Application.getInstance().fetchDetails();\n\tconst control: ComboBox = oEvent.getSource();\n\tconst selectedKey = control.getSelectedKey() || \"\";\n\tconst newValue = (oEvent.getParameter as (param: string) => string)(\"newValue\");\n\n\tconst currentValue = selectedKey !== \"\" ? `{${selectedKey}}` : newValue;\n\tconst oModel = getDialogModel() as JSONModel;\n\tvalidateControl(oEvent);\n\tawait updateSelectedNavigationProperty(selectedKey, false);\n\tconst selectedNavigationPropertiesContent = oModel.getProperty(\"/configuration/selectedNavigationPropertiesContent\");\n\n\toModel.setProperty(\"/configuration/advancedFormattingOptions/sourceProperty\", selectedKey);\n\tconst sPath = control?.getBindingContext()?.getPath() as string;\n\tconst group = oModel.getProperty(sPath);\n\n\tif (!selectedNavigationPropertiesContent?.value?.length) {\n\t\tgroup.value =\n\t\t\tselectedKey &&\n\t\t\tgetArrangements(currentValue, {\n\t\t\t\tunitOfMeasures: oModel.getProperty(\"/configuration/advancedFormattingOptions/unitOfMeasures\"),\n\t\t\t\ttextArrangements: oModel.getProperty(\"/configuration/advancedFormattingOptions/textArrangements\"),\n\t\t\t\tpropertyValueFormatters: oModel.getProperty(\"/configuration/advancedFormattingOptions/propertyValueFormatters\")\n\t\t\t});\n\t} else {\n\t\tgroup.value = \"\";\n\t\tgroup.navigationProperty = \"\";\n\t\tgroup.navigationalProperties = selectedNavigationPropertiesContent?.value;\n\t}\n\n\tsetValueStateForAdvancedPanel(selectedKey);\n\n\tconst propertyLabel = ODataUtils.getPropertyLabel(rootComponent.getModel() as Model, entitySet, selectedKey, PropertyInfoType.Property);\n\tgroup.label = selectedNavigationPropertiesContent?.value?.length ? \"\" : propertyLabel;\n\tgroup.isNavigationEnabled = selectedNavigationPropertiesContent?.value?.length > 0;\n\tgroup.isEnabled = true;\n\toModel.refresh();\n\tupdateCardGroups(oModel);\n\ttranspileIntegrationCardToAdaptive(getDialogModel() as JSONModel);\n}\n\n/**\n * This function sets the ValueState of properties present in advanced formatting panel,\n * to ValueState.Information or ValueState.None on the basis of properties present in card preview.\n * @param selectedKey - The selected key from the ComboBox.\n */\nexport function setValueStateForAdvancedPanel(selectedKey?: string) {\n\tconst model = getDialogModel() as JSONModel;\n\tconst resourceBundle = (getDialogModel(\"i18n\") as ResourceModel)?.getResourceBundle() as ResourceBundle;\n\tconst informativeMessage = resourceBundle?.getText(\"UNSELECTED_ITEM\");\n\tconst previewItems = getPreviewItems(model);\n\tconst propertyPaths: Record<string, string> = {\n\t\tunitOfMeasures: \"/configuration/advancedFormattingOptions/unitOfMeasures\",\n\t\ttextArrangements: \"/configuration/advancedFormattingOptions/textArrangements\",\n\t\tcriticality: \"/configuration/mainIndicatorOptions/criticality\"\n\t};\n\t[\"unitOfMeasures\", \"textArrangements\", \"criticality\"].forEach((property) => {\n\t\tconst path = propertyPaths[property];\n\t\tconst formattingOptions = model.getProperty(path) ?? [];\n\t\tformattingOptions.forEach((item: UnitOfMeasures, index: number) => {\n\t\t\tlet itemName = item.name;\n\t\t\tlet navigationalProperty: boolean = false;\n\t\t\tif (path === propertyPaths.criticality && item.isNavigationForId && item.navigationKeyForId !== \"\") {\n\t\t\t\titemName = `${item.name}/${item.navigationKeyForId}`;\n\t\t\t}\n\t\t\tif (item.isNavigationForId && item.navigationKeyForId !== \"\") {\n\t\t\t\tnavigationalProperty = true;\n\t\t\t}\n\t\t\tconst isPropertyExists: boolean = previewItems.includes(itemName);\n\t\t\tif (!isPropertyExists && item.valueState !== ValueState.Information) {\n\t\t\t\tmodel.setProperty(`${path}/${index}/valueState`, ValueState.Information);\n\t\t\t\tmodel.setProperty(`${path}/${index}/valueStateText`, informativeMessage);\n\t\t\t\tif (navigationalProperty) {\n\t\t\t\t\tmodel.setProperty(`${path}/${index}/navigationValueState`, ValueState.Information);\n\t\t\t\t\tmodel.setProperty(`${path}/${index}/navigationValueStateText`, informativeMessage);\n\t\t\t\t}\n\t\t\t} else if (isPropertyExists && selectedKey && selectedKey === itemName && item.valueState === ValueState.Information) {\n\t\t\t\tmodel.setProperty(`${path}/${index}/valueState`, ValueState.None);\n\t\t\t\tmodel.setProperty(`${path}/${index}/valueStateText`, \"\");\n\t\t\t\tif (navigationalProperty) {\n\t\t\t\t\tmodel.setProperty(`${path}/${index}/navigationValueState`, ValueState.None);\n\t\t\t\t\tmodel.setProperty(`${path}/${index}/navigationValueStateText`, \"\");\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t});\n}\n\nfunction onPropertyLabelChange(oEvent: any) {\n\tconst currentValue = oEvent.getParameters().newValue;\n\tconst oModel = getDialogModel() as JSONModel;\n\tconst sPath = oEvent.getSource().getBindingContext().getPath();\n\tconst group = oModel.getProperty(sPath);\n\tgroup.label = currentValue;\n\toModel.refresh();\n\tupdateCardGroups(oModel);\n\ttranspileIntegrationCardToAdaptive(getDialogModel() as JSONModel);\n}\nfunction onDrop(oEvent: any) {\n\tconst oDragged = oEvent.getParameter(\"draggedControl\"),\n\t\toDropped = oEvent.getParameter(\"droppedControl\"),\n\t\tsInsertPosition = oEvent.getParameter(\"dropPosition\"),\n\t\toModel = getDialogModel() as JSONModel,\n\t\toDragPos = oDragged.getParent(),\n\t\toDropPos = oDropped.getParent(),\n\t\tsDraggedPath = oDragPos.getBindingContext().getPath(),\n\t\tsDroppedPath = oDropPos.getBindingContext().getPath(),\n\t\taDragItems = oModel.getProperty(sDraggedPath).items,\n\t\taDropItems = oModel.getProperty(sDroppedPath).items,\n\t\tiDragPosition = oDragPos.indexOfItem(oDragged),\n\t\tiDropPosition = oDropPos.indexOfItem(oDropped);\n\n\tconst oSelectedItem = aDragItems[iDragPosition];\n\t// insert the control in target aggregation, remove the item\n\tif (sInsertPosition === \"Before\" && aDropItems.length < MAX_GROUP_ITEMS) {\n\t\taDragItems.splice(iDragPosition, 1);\n\t\taDropItems.splice(iDropPosition, 0, oSelectedItem);\n\t} else if (sInsertPosition && aDropItems.length < MAX_GROUP_ITEMS) {\n\t\taDragItems.splice(iDragPosition, 1);\n\t\taDropItems.splice(iDropPosition + 1, 0, oSelectedItem);\n\t}\n\tif (aDragItems.length < MAX_GROUP_ITEMS) {\n\t\toModel.setProperty(sDraggedPath + \"/enableAddMoreGroupItems\", true);\n\t}\n\tif (aDropItems.length === MAX_GROUP_ITEMS) {\n\t\toModel.setProperty(sDroppedPath + \"/enableAddMoreGroupItems\", false);\n\t}\n\toModel.refresh();\n\tupdateCardGroups(oModel);\n\ttranspileIntegrationCardToAdaptive(getDialogModel() as JSONModel);\n}\nfunction onResetPressed() {\n\tconst oCard: any = CoreElement.getElementById(\"cardGeneratorDialog--cardPreview\");\n\toCard.setWidth();\n\toCard.setHeight();\n\t(CoreElement.getElementById(\"cardGeneratorDialog--widthInput\") as Input)?.setValue(\"\");\n\t(CoreElement.getElementById(\"cardGeneratorDialog--heightInput\") as Input)?.setValue(\"\");\n\toCard.refresh();\n}\nfunction onHeightChange(oEvent: any) {\n\tconst oCard: any = CoreElement.getElementById(\"cardGeneratorDialog--cardPreview\");\n\tconst currentValue = Number(oEvent.getParameters().newValue);\n\tcurrentValue > 200 ? oCard.setHeight(currentValue + \"px\") : oCard.setHeight(\"232px\");\n\toCard.refresh();\n}\nfunction onWidthChange(oEvent: any) {\n\tconst oCard: any = CoreElement.getElementById(\"cardGeneratorDialog--cardPreview\");\n\tconst currentValue = Number(oEvent.getParameters().newValue);\n\tcurrentValue > 200 ? oCard.setWidth(currentValue + \"px\") : oCard.setWidth(\"582px\");\n\toCard.refresh();\n}\n\nfunction closeDialog() {\n\tconst oModel = getDialogModel() as JSONModel;\n\tif (oModel) {\n\t\tif (!oModel.getProperty(\"/configuration/isEdited\")) {\n\t\t\ttoggleOffAdvancedPanel();\n\t\t}\n\t\tconst errorControls = oModel.getProperty(\"/configuration/errorControls\");\n\t\terrorControls?.forEach((ele: ComboBox) => {\n\t\t\tele.setValueState(ValueState.None);\n\t\t});\n\t}\n\n\t(getCardGeneratorDialog() as Dialog).close();\n}\n\nfunction setCriticalitySourceProperty(property: string) {\n\tconst oModel = getDialogModel() as JSONModel;\n\tconst mainIndicatorCriticality = oModel?.getProperty(\"/configuration/mainIndicatorOptions/criticality\");\n\tlet relavantCriticality;\n\n\tconst relavantProperty = mainIndicatorCriticality?.filter((indicatorCriticality: Criticality) => {\n\t\tconst { name: indicatorName, propertyKeyForId } = indicatorCriticality;\n\t\treturn indicatorName === property || `${indicatorName}/${propertyKeyForId}` === property;\n\t});\n\tif (relavantProperty) {\n\t\trelavantCriticality = JSON.parse(JSON.stringify(relavantProperty));\n\t}\n\tif (relavantProperty?.length === 1) {\n\t\trelavantCriticality[0].hostCriticality = relavantProperty[0].criticality;\n\t\tdelete relavantCriticality.criticality;\n\t\toModel?.setProperty(\"/configuration/advancedFormattingOptions/sourceCriticalityProperty\", relavantCriticality);\n\t} else {\n\t\toModel?.setProperty(\"/configuration/advancedFormattingOptions/sourceCriticalityProperty\", [{ name: property }]);\n\t}\n}\n\nfunction onFormatTypeSelection(oEvent: any, oSource: ComboBox) {\n\tconst oModel = getDialogModel() as JSONModel;\n\tconst sourceItem = oEvent.getParameter(\"item\");\n\tconst key = sourceItem.getKey();\n\toModel.setProperty(\"/configuration/popoverContentType\", key);\n\tconst aUom = oModel.getProperty(\"/configuration/advancedFormattingOptions/unitOfMeasures\");\n\tconst sSourceUoMProperty = oModel.getProperty(\"/configuration/advancedFormattingOptions/sourceUoMProperty\");\n\tif (aUom.length > 0) {\n\t\tconst aSourceUom = aUom.filter((oProperty: any) => {\n\t\t\treturn oProperty.name === sSourceUoMProperty;\n\t\t})[0];\n\t\tif (aSourceUom) {\n\t\t\toModel.setProperty(\"/configuration/advancedFormattingOptions/targetProperty\", aSourceUom.value);\n\t\t}\n\t}\n\tif (aPropsWithUoM.indexOf(sSourceUoMProperty) === -1) {\n\t\toModel.setProperty(\"/configuration/advancedFormattingOptions/targetProperty\", \"\");\n\t}\n\tonAdvancedFormattingConfigOpen(oEvent, oSource);\n}\n\nfunction onPropertyFormatting(oEvent: any) {\n\tconst oSource = oEvent.getSource();\n\tconst oModel = getDialogModel() as JSONModel;\n\tlet property = oModel.getProperty(\"/configuration/mainIndicatorStatusKey\");\n\tconst navSelectedKey = oModel.getProperty(\"/configuration/mainIndicatorNavigationSelectedKey\");\n\tif (navSelectedKey && !property.includes(\"/\")) {\n\t\tproperty = `${property}/${navSelectedKey}`;\n\t}\n\toModel.setProperty(\"/configuration/advancedFormattingOptions/targetFormatterProperty\", property);\n\toModel.setProperty(\"/configuration/advancedFormattingOptions/sourceUoMProperty\", property);\n\tdisableOrEnableUOMAndTrend(oModel, property);\n\tsetCriticalitySourceProperty(property);\n\tsetAdvancedFormattingOptionsEnablement(property);\n\n\tif (!context._advancedFormattingOptionsPopover) {\n\t\tFragment.load({\n\t\t\tid: \"advancedFormattingOptions\",\n\t\t\tname: \"sap.cards.ap.generator.app.fragments.configuration.AdvancedFormattingOptions\",\n\t\t\tcontroller: {\n\t\t\t\tonFormatTypeSelection: function (oEvent: any) {\n\t\t\t\t\tCardGeneratorDialogController.onFormatTypeSelection(oEvent, oSource);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\t\t.then(function (oPopover: any) {\n\t\t\t\tcontext._advancedFormattingOptionsPopover = oPopover;\n\t\t\t\toSource.addDependent(oPopover);\n\t\t\t\treturn oPopover;\n\t\t\t})\n\t\t\t.then(function (oPopover) {\n\t\t\t\tconst oContext = oSource.getBindingContext();\n\t\t\t\toPopover.setBindingContext(oContext);\n\t\t\t\toPopover.openBy(oSource);\n\t\t\t});\n\t} else {\n\t\tconst oContext = oSource.getBindingContext();\n\t\tcontext._advancedFormattingOptionsPopover.setBindingContext(oContext);\n\t\tcontext._advancedFormattingOptionsPopover.openBy(oSource);\n\t}\n}\n\nfunction onAdvancedFormattingConfigOpen(oEvent: any, oSource: any) {\n\tconst oModel = getDialogModel() as JSONModel;\n\tconst oConfigurationController = {\n\t\tonPopoverClose: (oEvent: any) => {\n\t\t\tconst source = oEvent.getSource();\n\t\t\tsource?.destroy();\n\t\t},\n\t\tonPropertyFormatterChange: () => {\n\t\t\tupdateArrangements();\n\t\t\tconst buttonId = oSource?.getId();\n\t\t\tconst oPopover = CoreElement.getElementById(buttonId + \"--advanceFormattingPopover\");\n\t\t\t(oPopover as Popover)?.close();\n\t\t},\n\t\tapplyCriticality: () => applyCriticality(oEvent),\n\t\tapplyUoMFormatting: () => applyUoMFormatting(),\n\t\tapplyFormatting: () => {\n\t\t\tconst buttonId = oSource?.getId();\n\t\t\t(CoreElement.getElementById(buttonId + \"--headerFormatterEditor\") as CompactFormatterSelection).applyFormatter();\n\t\t\ttranspileIntegrationCardToAdaptive(getDialogModel() as JSONModel);\n\t\t},\n\t\tresetValueState(oEvent: any, isSelectControl?: boolean) {\n\t\t\tconst control = oEvent.getSource();\n\t\t\tconst currentValue = !isSelectControl ? oEvent.getParameters().newValue : control.getSelectedKey();\n\t\t\tif (currentValue !== \"\") {\n\t\t\t\tcontrol.setValueState(ValueState.None);\n\t\t\t}\n\t\t},\n\t\tonDownDifferenceChange(oEvent: any) {\n\t\t\toModel.setProperty(\"/configuration/trendOptions/downDifferenceValueState\", \"None\");\n\t\t\tthis.resetValueState(oEvent);\n\t\t},\n\t\tonUpDifferenceChange(oEvent: any) {\n\t\t\toModel.setProperty(\"/configuration/trendOptions/upDifferenceValueState\", \"None\");\n\t\t\tthis.resetValueState(oEvent);\n\t\t},\n\t\tonReferenceValInputChange(oEvent: any) {\n\t\t\toModel.setProperty(\"/configuration/trendOptions/referenceValueState\", \"None\");\n\t\t\tthis.resetValueState(oEvent);\n\t\t},\n\t\tonTargetValueChange(oEvent: any) {\n\t\t\toModel.setProperty(\"/configuration/indicatorsValue/targetValueState\", \"None\");\n\t\t\tthis.resetValueState(oEvent);\n\t\t},\n\t\tonDeviationValueChange(oEvent: any) {\n\t\t\toModel.setProperty(\"/configuration/indicatorsValue/deviationValueState\", \"None\");\n\t\t\tthis.resetValueState(oEvent);\n\t\t},\n\t\tonTargetUnitChange(oEvent: any) {\n\t\t\toModel.setProperty(\"/configuration/indicatorsValue/targetUnitValueState\", \"None\");\n\t\t\tthis.resetValueState(oEvent, true);\n\t\t},\n\t\tonDeviationUnitChange(oEvent: any) {\n\t\t\toModel.setProperty(\"/configuration/indicatorsValue/deviationUnitValueState\", \"None\");\n\t\t\tthis.resetValueState(oEvent, true);\n\t\t},\n\t\tapplyIndicators: () => {\n\t\t\tconst buttonId = oSource?.getId();\n\t\t\tconst hasIndicatorsError = validateIndicatorsValues(buttonId);\n\t\t\tif (!hasIndicatorsError) {\n\t\t\t\tupdateSideIndicatorsForHeader();\n\t\t\t\tcontext?._advancedFormattingConfigurationPopover?.close();\n\t\t\t}\n\t\t},\n\t\tapplyTrendCalculation: () => {\n\t\t\tconst buttonId = oSource?.getId();\n\t\t\tconst hasTrendError = validateTrendValues(buttonId);\n\t\t\tif (!hasTrendError) {\n\t\t\t\tupdateTrendForCardHeader();\n\t\t\t\tcontext?._advancedFormattingConfigurationPopover?.close();\n\t\t\t}\n\t\t},\n\t\tonDelete: () => {\n\t\t\tconst oModel = getDialogModel() as JSONModel;\n\t\t\tconst sourceUoMProperty: any = oModel?.getProperty(\"/configuration/advancedFormattingOptions/sourceUoMProperty\");\n\t\t\tconst iIndex = aPropsWithUoM?.indexOf(sourceUoMProperty);\n\t\t\taPropsWithUoM?.splice(iIndex, 1);\n\t\t\toModel?.setProperty(\"/configuration/advancedFormattingOptions/targetProperty\", \"\");\n\n\t\t\tconst itemsBindingPath: string = \"/configuration/advancedFormattingOptions/unitOfMeasures\",\n\t\t\t\tunitOfMeasures: any = oModel?.getProperty(itemsBindingPath);\n\t\t\tlet relativeIndex: number = -1;\n\t\t\tconst propertyValueFormatters = oModel.getProperty(\"/configuration/advancedFormattingOptions/propertyValueFormatters\");\n\t\t\tconst updatedPropertyValueFormatters = propertyValueFormatters.filter(\n\t\t\t\t(formatter: ValueFormatter) => formatter.property !== sourceUoMProperty\n\t\t\t);\n\t\t\toModel.setProperty(\"/configuration/advancedFormattingOptions/propertyValueFormatters\", updatedPropertyValueFormatters);\n\t\t\toModel.setProperty(\"/configuration/isEdited\", true);\n\t\t\tfor (let i = 0; i < unitOfMeasures.length; i++) {\n\t\t\t\tif (unitOfMeasures[i]?.name === sourceUoMProperty) {\n\t\t\t\t\trelativeIndex = i;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (relativeIndex >= 0 && itemsBindingPath) {\n\t\t\t\tconst sPath = itemsBindingPath + \"/\" + relativeIndex;\n\t\t\t\tunitOfMeasures?.splice(sPath.slice(sPath.length - 1), 1);\n\t\t\t\tupdateArrangements();\n\t\t\t\toModel?.refresh();\n\t\t\t}\n\t\t\tcontext?._advancedFormattingConfigurationPopover?.close();\n\t\t},\n\t\tonTrendDelete: () => onTrendDelete(),\n\t\tonIndicatorsDelete: () => {\n\t\t\tconst oModel = getDialogModel() as JSONModel;\n\t\t\tconst indicatorsValue = oModel.getProperty(\"/configuration/indicatorsValue\");\n\t\t\tconst selectedIndicatorValues = oModel.getProperty(\"/configuration/selectedIndicatorOptions\");\n\t\t\tlet iIndex: number = -1;\n\t\t\tselectedIndicatorValues?.forEach((trend: any, index: number) => {\n\t\t\t\tif (trend.sourceProperty === indicatorsValue.sourceProperty) {\n\t\t\t\t\tiIndex = index;\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (iIndex !== -1) {\n\t\t\t\tselectedIndicatorValues.splice(iIndex, 1);\n\t\t\t}\n\t\t\toModel.setProperty(\"/configuration/indicatorsValue\", {});\n\t\t\toModel.setProperty(\"/configuration/isEdited\", true);\n\t\t\tupdateSideIndicatorsForHeader();\n\t\t\tcontext?._advancedFormattingConfigurationPopover?.close();\n\t\t},\n\t\tonDeleteFormatter: () => {\n\t\t\tconst buttonId = oSource?.getId();\n\t\t\tconst oModel = getDialogModel() as JSONModel;\n\t\t\toModel.setProperty(\"/configuration/isEdited\", true);\n\t\t\t(CoreElement.getElementById(buttonId + \"--headerFormatterEditor\") as CompactFormatterSelection).deleteFormatter();\n\t\t\ttranspileIntegrationCardToAdaptive(getDialogModel() as JSONModel);\n\t\t},\n\t\tonDeleteCriticality: (event: Event) => {\n\t\t\tconst oModel = getDialogModel() as JSONModel;\n\t\t\tconst buttonId = oSource?.getId();\n\t\t\t(CoreElement.getElementById(buttonId + \"--headerCriticalityEditor\") as CriticalityEditor).onDeleteButtonClicked(event);\n\t\t\toModel.setProperty(\"/configuration/advancedFormattingOptions/selectedKeyCriticality\", \"\");\n\t\t\toModel.setProperty(\"/configuration/isEdited\", true);\n\t\t\tupdateCriticality(false);\n\t\t\tcontext?._advancedFormattingConfigurationPopover?.close();\n\t\t}\n\t};\n\n\tif (oEvent?.getParameter(\"item\")?.getKey?.() === \"uom\") {\n\t\toConfigurationController.applyUoMFormatting();\n\t}\n\tif (oEvent.getSource()?.getParent()?.close) {\n\t\toEvent.getSource().getParent().close();\n\t}\n\n\tloadAdvancedFormattingConfigurationFragment(oSource, oConfigurationController);\n}\n\nfunction applyCriticality(oEvent: Event) {\n\tconst oModel = getDialogModel() as JSONModel;\n\tconst mainIndicatorCriticality = oModel?.getProperty(\"/configuration/mainIndicatorOptions/criticality\");\n\tlet sourceCriticalityProperty = oModel?.getProperty(\"/configuration/advancedFormattingOptions/sourceCriticalityProperty\");\n\n\tsourceCriticalityProperty = sourceCriticalityProperty?.[0];\n\tconst navProperites = oModel?.getProperty(\"/configuration/navigationProperty\");\n\tconst isNavEnabled = sourceCriticalityProperty?.name?.includes(\"/\");\n\n\tif (isNavEnabled) {\n\t\tsourceCriticalityProperty.propertyKeyForId = sourceCriticalityProperty.name.split(\"/\")[1];\n\t\tsourceCriticalityProperty.navigationKeyForId = sourceCriticalityProperty.name.split(\"/\")[1];\n\t\tsourceCriticalityProperty.name = sourceCriticalityProperty.name.split(\"/\")[0];\n\t\tsourceCriticalityProperty.isNavigationForId = true;\n\t\tconst navSelectedProperies = navProperites?.filter((property: { name: string }) => {\n\t\t\treturn property?.name === sourceCriticalityProperty?.name.split(\"/\")[0];\n\t\t});\n\t\tsourceCriticalityProperty.navigationalPropertiesForId = navSelectedProperies[0]?.properties;\n\t}\n\tif (sourceCriticalityProperty?.hostCriticality !== sourceCriticalityProperty?.criticality) {\n\t\tsourceCriticalityProperty.criticality = sourceCriticalityProperty.hostCriticality;\n\t}\n\n\tconst propertyExists: boolean = mainIndicatorCriticality?.some((indicatorCriticality: Property) => {\n\t\tconst { name: indicatorName, propertyKeyForId } = indicatorCriticality;\n\t\tif (isNavEnabled) {\n\t\t\treturn indicatorName === sourceCriticalityProperty?.name && propertyKeyForId === sourceCriticalityProperty?.propertyKeyForId;\n\t\t} else {\n\t\t\treturn indicatorName === sourceCriticalityProperty?.name;\n\t\t}\n\t});\n\n\tif (!propertyExists && sourceCriticalityProperty) {\n\t\tdelete sourceCriticalityProperty.hostCriticality;\n\t\tmainIndicatorCriticality?.push(sourceCriticalityProperty);\n\t} else {\n\t\tfor (let i = 0; i < mainIndicatorCriticality.length; i++) {\n\t\t\tif (mainIndicatorCriticality[i]?.name === sourceCriticalityProperty?.name) {\n\t\t\t\tdelete mainIndicatorCriticality[i];\n\t\t\t\tdelete sourceCriticalityProperty.hostCriticality;\n\t\t\t\tmainIndicatorCriticality[i] = sourceCriticalityProperty;\n\t\t\t}\n\t\t}\n\t}\n\toModel?.setProperty(\"/configuration/mainIndicatorOptions/criticality\", mainIndicatorCriticality);\n\tupdateCriticality((oEvent.getParameter as (param: string) => boolean)(\"isCalcuationType\") || false);\n\tcontext?._advancedFormattingConfigurationPopover?.close();\n}\n\nfunction applyUoMFormatting() {\n\tconst oModel = getDialogModel() as JSONModel;\n\tconst unitOfMeasures = oModel?.getProperty(\"/configuration/advancedFormattingOptions/unitOfMeasures\"),\n\t\tsourceProperty: string = oModel?.getProperty(\"/configuration/advancedFormattingOptions/sourceUoMProperty\");\n\tlet relavantProperty = unitOfMeasures?.filter((property: Property) => property?.name === sourceProperty),\n\t\ttargetProperty: string = oModel?.getProperty(\"/configuration/advancedFormattingOptions/targetProperty\");\n\trelavantProperty = relavantProperty?.[0];\n\n\tif (!targetProperty && relavantProperty) {\n\t\toModel.setProperty(\"/configuration/advancedFormattingOptions/targetProperty\", relavantProperty?.propertyKeyForDescription);\n\t}\n\n\ttargetProperty = oModel?.getProperty(\"/configuration/advancedFormattingOptions/targetProperty\");\n\tconst proprtetyKeyFromSource = sourceProperty.includes(\"/\") ? sourceProperty.split(\"/\")[0] : sourceProperty;\n\tconst navAllProperties = oModel.getProperty(\"/configuration/navigationProperty\");\n\tlet navPropertiesValues: object[] = [];\n\tif (sourceProperty.includes(\"/\") && navAllProperties) {\n\t\tnavPropertiesValues = getNavValues(navAllProperties, proprtetyKeyFromSource);\n\t}\n\tconst oData = {\n\t\tpropertyKeyForId: proprtetyKeyFromSource,\n\t\tname: sourceProperty,\n\t\tvalue: targetProperty,\n\t\tnavigationalPropertiesForId: navPropertiesValues.length === 0 ? \"\" : navPropertiesValues,\n\t\tisNavigationForId: sourceProperty.includes(\"/\") ? true : false,\n\t\tnavigationKeyForId: sourceProperty.includes(\"/\") ? sourceProperty.split(\"/\")[1] : \"\",\n\t\tpropertyKeyForDescription: targetProperty,\n\t\tisNavigationForDescription: false,\n\t\tnavigationKeyForDescription: \"\"\n\t};\n\tlet bMatchingProperty = false;\n\tunitOfMeasures.forEach((oUom: any) => {\n\t\tif (oUom.name === oData.name) {\n\t\t\tbMatchingProperty = true;\n\t\t\toUom.propertyKeyForDescription = oData.value;\n\t\t\toUom.value = oData.value;\n\t\t}\n\t});\n\tif (!bMatchingProperty && sourceProperty && targetProperty) {\n\t\tunitOfMeasures.push(oData);\n\t}\n\toModel.setProperty(\"/configuration/advancedFormattingOptions/unitOfMeasures\", unitOfMeasures);\n\tupdateArrangements();\n\tfor (let i = 0; i < unitOfMeasures.length; i++) {\n\t\tif (unitOfMeasures[i].value !== \"\" && aPropsWithUoM?.indexOf(unitOfMeasures[i]?.name) === -1) {\n\t\t\taPropsWithUoM?.push(unitOfMeasures[i]?.name);\n\t\t}\n\t}\n\tcontext?._advancedFormattingConfigurationPopover?.close();\n}\n\n/**\n * Retrieves the properties of a navigation property that matches the given key.\n *\n * @param {Array<{ name: string; properties: Array<object> }>} navProperties - An array of navigation properties, each containing a name and a list of properties.\n * @param {string} propertyKeyFromSource - The key to match against the name of the navigation properties.\n * @returns {Array<object>} The properties of the matching navigation property, or an empty array if no match is found.\n */\nfunction getNavValues(navProperties: [{ name: string; properties: Array<object> }], propertyKeyFromSource: string): Array<object> {\n\tfor (const navProperty of navProperties) {\n\t\tif (propertyKeyFromSource === navProperty?.name) {\n\t\t\treturn navProperty.properties;\n\t\t}\n\t}\n\treturn [];\n}\n\nfunction onTrendDelete() {\n\tconst oModel = getDialogModel() as JSONModel;\n\tconst trendValues = oModel.getProperty(\"/configuration/trendOptions\");\n\tconst selectedTrendValues = oModel.getProperty(\"/configuration/selectedTrendOptions\");\n\tlet iIndex: number = -1;\n\tselectedTrendValues?.forEach((trend: TrendOrIndicatorOptions, index: number) => {\n\t\tif (trend.sourceProperty === trendValues.sourceProperty) {\n\t\t\tiIndex = index;\n\t\t}\n\t});\n\tif (iIndex !== -1) {\n\t\tselectedTrendValues.splice(iIndex, 1);\n\t}\n\toModel.setProperty(\"/configuration/trendOptions\", {});\n\toModel.setProperty(\"/configuration/isEdited\", true);\n\tupdateTrendForCardHeader();\n\tcontext?._advancedFormattingConfigurationPopover?.close();\n}\n\nfunction loadAdvancedFormattingConfigurationFragment(oSource: any, oConfigurationController: object) {\n\tFragment.load({\n\t\tid: oSource.getId(),\n\t\tname: \"sap.cards.ap.generator.app.fragments.configuration.AdvancedFormattingConfiguration\",\n\t\tcontroller: oConfigurationController\n\t})\n\t\t.then(function (oPopover: any) {\n\t\t\tcontext._advancedFormattingConfigurationPopover = oPopover;\n\t\t\tconst oResourceBundle = (getDialogModel(\"i18n\") as ResourceModel)?.getResourceBundle() as ResourceBundle;\n\t\t\tconst mLabels = {\n\t\t\t\tuomText: oResourceBundle?.getText(\"SELECT_UOM_TEXT\"),\n\t\t\t\tcriticalityText: oResourceBundle?.getText(\"SELECT_CRITICALITY_TEXT\"),\n\t\t\t\tformatterText: oResourceBundle?.getText(\"SELECT_FORMATTER_TEXT\"),\n\t\t\t\tindicatorsText: oResourceBundle?.getText(\"SELECT_INDICATORS_TEXT\"),\n\t\t\t\ttrendCalculatorText: oResourceBundle?.getText(\"TREND_CALCULATION_TEXT\")\n\t\t\t};\n\t\t\toPopover.setModel(new JSONModel(mLabels), \"i18nLabelText\");\n\t\t\toSource.addDependent(oPopover);\n\t\t\treturn oPopover;\n\t\t})\n\t\t.then(function (oPopover) {\n\t\t\tconst oContext = oSource.getBindingContext();\n\t\t\toPopover.setBindingContext(oContext);\n\t\t\toPopover.openBy(oSource);\n\t\t\treturn oPopover;\n\t\t});\n}\n\nfunction onItemsActionsButtonPressed(oEvent: any) {\n\tconst oModel = getDialogModel() as JSONModel;\n\tconst sPath = oEvent?.getSource().getBindingContext().getPath();\n\tconst sourcePropertyName = oModel?.getProperty(sPath)?.name;\n\tconst navProperty = oModel?.getProperty(sPath)?.navigationProperty;\n\tconst sourceProperty = navProperty ? sourcePropertyName + \"/\" + navProperty : sourcePropertyName;\n\tconst oSource = oEvent.getSource();\n\tdisableOrEnableUOMAndTrend(oModel, sourceProperty);\n\tsetAdvancedFormattingOptionsEnablement(sourceProperty);\n\tconst oController = {\n\t\tonNavigationActionSelect: (oEvent: any) => {\n\t\t\tconst sId = oEvent.getParameter(\"item\").getId();\n\t\t\tconst oModel = getDialogModel() as JSONModel;\n\t\t\tif (sId === \"formatter\" || sId === \"uom\") {\n\t\t\t\thandleFormatterUomAction(sId, oEvent, oModel);\n\t\t\t\tonAdvancedFormattingConfigOpen(oEvent, oEvent.getSource().getParent());\n\t\t\t} else if (sId === \"criticality\") {\n\t\t\t\tconst propertyToBeSet = handleCriticalityAction(sId, oEvent, oModel);\n\t\t\t\tsetCriticalitySourceProperty(propertyToBeSet);\n\t\t\t\tonAdvancedFormattingConfigOpen(oEvent, oEvent.getSource().getParent());\n\t\t\t} else if (sId === \"actions\") {\n\t\t\t\t// do nothing\n\t\t\t} else {\n\t\t\t\tconst sourceItem = oEvent.getParameter(\"item\");\n\t\t\t\tconst customData = sourceItem.getCustomData();\n\t\t\t\tconst customAction = customData.filter((custom: any) => custom.getKey() === \"action\")[0];\n\t\t\t\tconst actionType = customAction.getValue();\n\t\t\t\tconst source = oEvent.getSource();\n\t\t\t\tconst sPath = source.getBindingContext().getPath();\n\t\t\t\tconst [groupIndex, itemIndex] = sPath.match(/(\\d+)/g).map((sValue: any) => Number(sValue));\n\t\t\t\tconst group = oModel.getProperty(\"/configuration/groups/\" + groupIndex);\n\t\t\t\tconst item = group.items[itemIndex];\n\n\t\t\t\tif (actionType === \"add\") {\n\t\t\t\t\tlet value = \"\";\n\t\t\t\t\tconst key = sourceItem.getId();\n\n\t\t\t\t\tswitch (key) {\n\t\t\t\t\t\tcase \"url\":\n\t\t\t\t\t\t\tvalue = `${item.value}`;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"email\":\n\t\t\t\t\t\t\tvalue = `mailto: ${item.value}`;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"tel\":\n\t\t\t\t\t\t\tvalue = `tel: ${item.value}`;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (value === \"\") {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst actions = [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: \"Navigation\",\n\t\t\t\t\t\t\tparameters: {\n\t\t\t\t\t\t\t\turl: value\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t];\n\n\t\t\t\t\titem[\"hasActions\"] = true;\n\t\t\t\t\titem[\"actionType\"] = key;\n\t\t\t\t\titem[\"actions\"] = actions;\n\t\t\t\t}\n\n\t\t\t\tif (actionType === \"remove\" && item.hasActions) {\n\t\t\t\t\tdelete item.hasActions;\n\t\t\t\t\tdelete item.actionType;\n\t\t\t\t\tdelete item.actions;\n\t\t\t\t}\n\t\t\t}\n\t\t\toModel.refresh();\n\t\t\tupdateCardGroups(oModel);\n\t\t\ttranspileIntegrationCardToAdaptive(getDialogModel() as JSONModel);\n\t\t}\n\t};\n\tif (!context._itemActionsMenu || context?._itemActionsMenu?.isDestroyed()) {\n\t\tFragment.load({\n\t\t\tname: \"sap.cards.ap.generator.app.fragments.configuration.ItemActions\",\n\t\t\tcontroller: oController\n\t\t}).then(\n\t\t\tfunction (oMenu: any) {\n\t\t\t\tcontext._itemActionsMenu = oMenu;\n\t\t\t\tconst oContext = oSource.getBindingContext();\n\t\t\t\toMenu.setBindingContext(oContext);\n\t\t\t\toSource.addDependent(oMenu);\n\t\t\t\tcontext._itemActionsMenu.open(false, oSource, Popup.Dock.BeginTop, Popup.Dock.BeginBottom, oSource);\n\t\t\t}.bind(oController)\n\t\t);\n\t} else {\n\t\tconst oContext = oSource.getBindingContext();\n\t\tcontext._itemActionsMenu.setBindingContext(oContext);\n\t\toSource.addDependent(context._itemActionsMenu);\n\t\tcontext._itemActionsMenu.open(false, oSource, Popup.Dock.BeginTop, Popup.Dock.BeginBottom, oSource);\n\t}\n}\n\n/**\n * Handles the formatter Unit of Measure (UoM) action by updating the model properties\n * based on the provided ID, event, and model.\n *\n * @param {string} id - The ID of the formatter UoM action.\n * @param event - The event object triggered by the action.\n * @param {JSONModel} model - The JSON model used to update the configuration properties.\n */\nfunction handleFormatterUomAction(id: string, event: any, model: JSONModel) {\n\tmodel?.setProperty(\"/configuration/popoverContentType\", id);\n\tconst path = event.getSource().getBindingContext().getPath();\n\tconst navProp = model.getProperty(path)?.navigationProperty;\n\tconst propertyToBeSet = model.getProperty(path)?.name + (navProp ? \"/\" + navProp : \"\");\n\tmodel?.setProperty(\"/configuration/advancedFormattingOptions/targetFormatterProperty\", propertyToBeSet);\n\tmodel?.setProperty(\"/configuration/advancedFormattingOptions/sourceUoMProperty\", propertyToBeSet);\n\tconst uom = model?.getProperty(\"/configuration/advancedFormattingOptions/unitOfMeasures\");\n\tconst sourceUoMProperty = model?.getProperty(\"/configuration/advancedFormattingOptions/sourceUoMProperty\");\n\tif (uom.length > 0) {\n\t\tconst sourceUom = uom.filter((property: { name: string }) => {\n\t\t\treturn property.name === sourceUoMProperty;\n\t\t})[0];\n\t\tif (sourceUom) {\n\t\t\tmodel?.setProperty(\"/configuration/advancedFormattingOptions/targetProperty\", sourceUom.value);\n\t\t}\n\t}\n\tif (aPropsWithUoM.length && aPropsWithUoM.indexOf(sourceUoMProperty) === -1) {\n\t\tmodel?.setProperty(\"/configuration/advancedFormattingOptions/targetProperty\", \"\");\n\t}\n}\n\n/**\n * Handles the criticality action by updating the model properties and returning the derived property path.\n *\n * @param {string} id - The ID of the criticality action.\n * @param event - The event object triggered by the action.\n * @param {JSONModel} model - The JSON model used to update the configuration properties.\n *\n * @returns {string} - The derived property path combining the property name and navigation property.\n */\nfunction handleCriticalityAction(id: string, event: any, model: JSONModel): string {\n\tmodel?.setProperty(\"/configuration/popoverContentType\", id);\n\tconst path = event.getSource().getBindingContext().getPath();\n\tconst navProp = model?.getProperty(path)?.navigationProperty;\n\tlet propertyToBeSet = model?.getProperty(path)?.name;\n\tif (navProp) {\n\t\tpropertyToBeSet = `${propertyToBeSet}/${navProp}`;\n\t}\n\treturn propertyToBeSet;\n}\n\nfunction onPreviewTypeChange(oEvent: any) {\n\tconst selectedCardType = oEvent.getSource().getSelectedItem().getBindingContext(\"previewOptions\").getProperty(\"type\");\n\tconst oCard: any = CoreElement.getElementById(\"cardGeneratorDialog--cardPreview\");\n\tconst oAdaptiveCardContainer: any = CoreElement.getElementById(\"cardGeneratorDialog--adaptiveCardPreviewContainer\");\n\tconst oCustomSize: any = CoreElement.getElementById(\"cardGeneratorDialog--custom-entry\");\n\toCard.setVisible(false);\n\toAdaptiveCardContainer.setVisible(false);\n\toCustomSize.setVisible(false);\n\tswitch (selectedCardType) {\n\t\tcase \"adaptive\":\n\t\t\toAdaptiveCardContainer.setVisible(true);\n\t\t\tsetTimeout(() => {\n\t\t\t\ttranspileIntegrationCardToAdaptive(getDialogModel() as JSONModel);\n\t\t\t}, 0);\n\t\t\tbreak;\n\t\tcase \"custom\":\n\t\t\toCard.setVisible(true);\n\t\t\toCustomSize.setVisible(true);\n\t\t\tbreak;\n\t\tcase \"integration\":\n\t\t\toCard.setVisible(true);\n\t\t\toCard.setWidth(oEvent.getSource().getSelectedItem().getBindingContext(\"previewOptions\").getProperty(\"width\"));\n\t\t\toCard.setHeight(oEvent.getSource().getSelectedItem().getBindingContext(\"previewOptions\").getProperty(\"height\"));\n\t\t\tbreak;\n\t\tdefault:\n\t\t\toCard.setVisible(true);\n\t\t\toCard.setWidth(oEvent.getSource().getSelectedItem().getBindingContext(\"previewOptions\").getProperty(\"width\"));\n\t\t\toCard.setHeight(oEvent.getSource().getSelectedItem().getBindingContext(\"previewOptions\").getProperty(\"height\"));\n\t\t\tbreak;\n\t}\n}\n\n/**\n * Update the sap.card.header of the integration card manifest by appling latest text arrangements, unit of measurement and formatters and triggers rendering of the card preview.\n * - This method is triggered when text arrrangement, unit of measurement or formatters are changed.\n */\nfunction updateHeaderArrangements() {\n\tconst oModel = getDialogModel() as JSONModel;\n\tconst currentManifest = getCurrentCardManifest();\n\tconst header = currentManifest[\"sap.card\"].header;\n\tconst subtitle = resolvePropertyPathFromExpression(header.subTitle, currentManifest);\n\tconst unitOfMeasurement = resolvePropertyPathFromExpression(header.unitOfMeasurement, currentManifest);\n\tconst mainIndicatorValue =\n\t\toModel.getProperty(\"/configuration/navigationValue\") || oModel.getProperty(\"/configuration/mainIndicatorStatusKey\");\n\tconst aUnitOfMeasures = oModel.getProperty(\"/configuration/advancedFormattingOptions/unitOfMeasures\");\n\tconst aTextArrangements = oModel.getProperty(\"/configuration/advancedFormattingOptions/textArrangements\");\n\tconst aPropertyValueFormatters: FormatterConfigurationMap = oModel.getProperty(\n\t\t\"/configuration/advancedFormattingOptions/propertyValueFormatters\"\n\t);\n\n\tconst sapCardHeader = {\n\t\t\"sap.card\": {\n\t\t\theader: {\n\t\t\t\tmainIndicator: {\n\t\t\t\t\tnumber:\n\t\t\t\t\t\tmainIndicatorValue &&\n\t\t\t\t\t\tgetArrangements(`{${mainIndicatorValue}}`, {\n\t\t\t\t\t\t\tunitOfMeasures: aUnitOfMeasures,\n\t\t\t\t\t\t\ttextArrangements: aTextArrangements,\n\t\t\t\t\t\t\tpropertyValueFormatters: aPropertyValueFormatters\n\t\t\t\t\t\t})\n\t\t\t\t},\n\t\t\t\tsubTitle: getArrangements(subtitle, {\n\t\t\t\t\tunitOfMeasures: aUnitOfMeasures,\n\t\t\t\t\ttextArrangements: aTextArrangements,\n\t\t\t\t\tpropertyValueFormatters: aPropertyValueFormatters\n\t\t\t\t}),\n\t\t\t\tunitOfMeasurement: getArrangements(unitOfMeasurement, {\n\t\t\t\t\tunitOfMeasures: aUnitOfMeasures,\n\t\t\t\t\ttextArrangements: aTextArrangements,\n\t\t\t\t\tpropertyValueFormatters: aPropertyValueFormatters\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t};\n\toModel.setProperty(\"/configuration/isEdited\", true);\n\tconst oManifest = merge(currentManifest, sapCardHeader) as CardManifest;\n\trenderCardPreview(oManifest, getDialogModel() as JSONModel);\n}\n\nfunction updateArrangements() {\n\tconst oModel = getDialogModel() as JSONModel;\n\tupdateHeaderArrangements();\n\tconst groups: ObjectCardGroups[] = oModel.getProperty(\"/configuration/groups\");\n\tgroups?.forEach(function (group) {\n\t\tgroup?.items?.forEach((groupItem) => {\n\t\t\tif (groupItem.name && groupItem.name !== \"\") {\n\t\t\t\tconst groupItemValue = groupItem.isNavigationEnabled ? `${groupItem.name}/${groupItem.navigationProperty}` : groupItem.name;\n\t\t\t\tgroupItem.value = getArrangements(`{${groupItemValue}}`, {\n\t\t\t\t\tunitOfMeasures: oModel.getProperty(\"/configuration/advancedFormattingOptions/unitOfMeasures\"),\n\t\t\t\t\ttextArrangements: oModel.getProperty(\"/configuration/advancedFormattingOptions/textArrangements\"),\n\t\t\t\t\tpropertyValueFormatters: oModel.getProperty(\"/configuration/advancedFormattingOptions/propertyValueFormatters\")\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t});\n\toModel.refresh();\n\tupdateCardGroups(oModel);\n\ttranspileIntegrationCardToAdaptive(getDialogModel() as JSONModel);\n}\n\nfunction updateCriticality(isCalcuationType: boolean) {\n\tconst currentManifest = getCurrentCardManifest();\n\tconst oModel = getDialogModel() as JSONModel;\n\tconst mainIndicator = currentManifest[\"sap.card\"].header.mainIndicator;\n\tconst groups = (currentManifest[\"sap.card\"].content as ObjectContent).groups;\n\n\tif (!mainIndicator && groups.length < 1) {\n\t\treturn;\n\t}\n\tlet oManifest;\n\tif (mainIndicator) {\n\t\tconst mainIndicatorValue = resolvePropertyPathFromExpression(mainIndicator.number, currentManifest);\n\t\tconst sapCardHeader = {\n\t\t\t\"sap.card\": {\n\t\t\t\theader: {\n\t\t\t\t\tmainIndicator: {\n\t\t\t\t\t\tstate: getCriticality(mainIndicatorValue || mainIndicator.number, isCalcuationType)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\toManifest = merge(currentManifest, sapCardHeader) as CardManifest;\n\t} else {\n\t\toManifest = currentManifest;\n\t}\n\toModel.setProperty(\"/configuration/isEdited\", true);\n\trenderCardPreview(oManifest, getDialogModel() as JSONModel);\n\tupdateCardGroups(oModel);\n\ttranspileIntegrationCardToAdaptive(getDialogModel() as JSONModel);\n}\n\nasync function checkForNavigationProperty(event: Event, isTextArrangement?: boolean) {\n\tconst selectedParameters = event.getParameters() as EventParameters;\n\tconst selectedItem = selectedParameters.selectedItem;\n\tif (!selectedItem) return;\n\tconst model = getDialogModel() as JSONModel;\n\tconst navigationProperties: NavigationParameter[] = model.getProperty(\"/configuration/navigationProperty\") || [];\n\tconst selectedNavigationalProperties: NavigationalData[] = model.getProperty(\"/configuration/selectedNavigationalProperties\") || [];\n\n\tconst existingIndex = selectedNavigationalProperties.findIndex((navItem) => navItem.name === (selectedItem.value || selectedItem.name));\n\tconst selectedProperty = navigationProperties.find((prop) => prop.name === (selectedItem.value || selectedItem.name));\n\n\tconst { name: selectedPropertyName = \"\", properties: selectedPropertyValues = [] } = selectedProperty || {};\n\n\tconst data: NavigationalData = { name: selectedPropertyName, value: selectedPropertyValues };\n\n\tif (existingIndex === -1 && selectedProperty) {\n\t\tselectedNavigationalProperties.push(data);\n\t}\n\tmodel.setProperty(\"/configuration/selectedNavigationalProperties\", selectedNavigationalProperties);\n\n\tif (selectedProperty) {\n\t\tawait updateCardConfigurationData(selectedProperty.name, data);\n\t\tif (selectedParameters.textArrangementChanged) {\n\t\t\tselectedItem.navigationalPropertiesForId = data.value;\n\t\t\tselectedItem.isNavigationForId = data.value.length > 0;\n\t\t\tselectedItem.navigationKeyForId = \"\";\n\t\t} else {\n\t\t\tselectedItem.navigationalPropertiesForDescription = data.value;\n\t\t\tif (isTextArrangement) {\n\t\t\t\tselectedItem.isNavigationForDescription = data.value.length > 0;\n\t\t\t\tselectedItem.navigationKeyForDescription = \"\";\n\t\t\t}\n\t\t}\n\t\tif (isTextArrangement) {\n\t\t\tselectedItem.value = \"\"; // to reset navigation combobox value in the card and dropdown.\n\t\t}\n\t} else {\n\t\tif (selectedParameters.textArrangementChanged) {\n\t\t\tselectedItem.isNavigationForId = false;\n\t\t\tselectedItem.navigationKeyForId = \"\";\n\t\t} else {\n\t\t\tselectedItem.isNavigationForDescription = false;\n\t\t\tselectedItem.navigationKeyForDescription = \"\";\n\t\t}\n\t}\n}\n\nexport function toggleOffAdvancedPanel() {\n\tconst dialog = CoreElement.getElementById(\"cardGeneratorDialog--cardGeneratorDialog\") as Dialog;\n\tconst toggleButton = (dialog.getCustomHeader() as MenuBar).getContentMiddle()[4] as ToggleButton;\n\n\tif (toggleButton.getPressed()) {\n\t\ttoggleButton.setPressed(false);\n\t\tconst toggleEvent = new Event(\"toggle\", toggleButton, {});\n\t\ttoggleAdvancedSetting(toggleEvent);\n\t}\n}\n\nasync function toggleAdvancedSetting(toggleEvent: Event) {\n\tconst toggleButton: ToggleButton = toggleEvent.getSource();\n\ttoggleButton.setEnabled(false);\n\n\tconst splitter = CoreElement.getElementById(\"cardGeneratorDialog--contentSplitter\") as Splitter;\n\tconst controller = {\n\t\tonCriticalityChange: async (criticalityChangeEvent: Event<{ isCalcuationType: boolean }>) => {\n\t\t\tawait checkForNavigationProperty(criticalityChangeEvent, false);\n\t\t\tupdateCriticality(criticalityChangeEvent.getParameter(\"isCalcuationType\") || false);\n\t\t},\n\t\tonArrangementsChange: async (arrangementChangeEvent: Event) => {\n\t\t\tawait checkForNavigationProperty(arrangementChangeEvent, true);\n\t\t\tupdateArrangements();\n\t\t\tconst dialogModel = getDialogModel() as JSONModel;\n\t\t\tconst groups = dialogModel.getProperty(\"/configuration/groups\");\n\t\t\tdialogModel.setProperty(\"/configuration/isEdited\", true);\n\t\t\tfor (let i = 0; i < groups?.[0].items.length; i++) {\n\t\t\t\tconst item = groups[0].items[i];\n\t\t\t\tconst uom = item.value.split(\" \")[1] && item.value.split(\" \")[1].slice(1, -1);\n\n\t\t\t\tif (uom !== \"undefined\" && uom !== undefined) {\n\t\t\t\t\tdialogModel.setProperty(\"/configuration/advancedFormattingOptions/targetProperty\", uom);\n\t\t\t\t} else if (uom === undefined) {\n\t\t\t\t\tdialogModel.setProperty(\"/configuration/advancedFormattingOptions/targetProperty\", \"\");\n\t\t\t\t}\n\n\t\t\t\tif (uom !== \"undefined\" && uom !== undefined && aPropsWithUoM?.indexOf(item?.name) === -1) {\n\t\t\t\t\taPropsWithUoM.push(item?.name);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tonPropertyFormatterChangeFromAdvancedSettings: function () {\n\t\t\tupdateHeaderArrangements();\n\t\t}\n\t};\n\n\tawait Fragment.load({\n\t\tname: \"sap.cards.ap.generator.app.fragments.AdvancedSettings\",\n\t\tcontroller: controller\n\t}).then(function (advancedSettings: Control | Control[]) {\n\t\tif (!toggleButton.getPressed()) {\n\t\t\tconst lastContentArea = splitter.getContentAreas()[1]; // position 1 is the advance panel\n\t\t\tsplitter.removeContentArea(lastContentArea);\n\t\t} else {\n\t\t\tsplitter.insertContentArea(advancedSettings as Control, 1); // position 1 is the advance panel\n\t\t}\n\t\ttoggleButton.setEnabled(true);\n\t\tsetTimeout(() => {\n\t\t\ttranspileIntegrationCardToAdaptive(getDialogModel() as JSONModel);\n\t\t}, 0);\n\t});\n}\n\nfunction setDefaultCardPreview() {\n\tconst comboBox = CoreElement.getElementById(\"cardGeneratorDialog--preview-select\") as ComboBox;\n\tif (comboBox) {\n\t\tconst selectedKey = comboBox.getSelectedKey();\n\t\tif (selectedKey !== \"int-default\") {\n\t\t\tcomboBox.setSelectedKey(\"int-default\");\n\t\t\tconst defaultIntegrationCard = CoreElement.getElementById(\"cardGeneratorDialog--cardPreview\") as Card;\n\t\t\tconst adaptiveCardContainer = CoreElement.getElementById(\"cardGeneratorDialog--adaptiveCardPreviewContainer\") as Control;\n\t\t\tconst customIntegrationCard = CoreElement.getElementById(\"cardGeneratorDialog--custom-entry\") as Control;\n\t\t\tadaptiveCardContainer.setVisible(false);\n\t\t\tcustomIntegrationCard.setVisible(false);\n\t\t\tdefaultIntegrationCard.setVisible(true);\n\n\t\t\tconst previewHostsProperties = getDialogModel(\"previewOptions\").getProperty(\"/hosts\");\n\t\t\tconst defaultPreviewOption = previewHostsProperties.find((option: Host) => option.key === \"int-default\");\n\t\t\tdefaultIntegrationCard.setWidth(defaultPreviewOption.width);\n\t\t\tdefaultIntegrationCard.setHeight(defaultPreviewOption.height);\n\t\t}\n\t}\n}\n\nfunction onBeforeDialogClosed(oEvent: object) {\n\tconst oModel = getDialogModel() as JSONModel;\n\tconst isDialogEdited = oModel?.getProperty(\"/configuration/isEdited\");\n\tconst resourceBundle = (getDialogModel(\"i18n\") as ResourceModel)?.getResourceBundle() as ResourceBundle;\n\tconst warningMessage = resourceBundle?.getText(\"GENERATOR_UNSAVED_CHANGE_WARNING\") || \"\";\n\tif (isDialogEdited) {\n\t\tMessageBox.warning(warningMessage, {\n\t\t\tactions: [MessageBox.Action.OK, MessageBox.Action.CANCEL],\n\t\t\temphasizedAction: MessageBox.Action.OK,\n\t\t\tonClose: function (sAction: string) {\n\t\t\t\tif (sAction === \"OK\") {\n\t\t\t\t\toModel.setProperty(\"/configuration/isEdited\", false);\n\t\t\t\t\ttoggleOffAdvancedPanel();\n\t\t\t\t\tcloseDialog();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\toEvent.preventDefault();\n\t}\n}\n"],"mappings":"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","ignoreList":[]}