{"version":3,"file":"ArrangementsEditor-dbg.js","names":["sap","ui","define","Button","ComboBox","CustomListItem","HBox","List","Text","Control","CoreElement","ListItem","sap_ui_core_library","Sorter","JSONModel","____config_TextArrangementOptions","____helpers_IntegrationCardHelper","ValueState","TEXTARRANGEMENT_OPTIONS","getPreviewItems","ArrangementsEditor","extend","renderer","apiVersion","render","rm","control","openStart","openEnd","renderControl","_list","_addButton","close","metadata","properties","mode","selectionKeys","type","defaultValue","navigationSelectionKeys","items","aggregations","multiple","visibility","events","change","parameters","value","selectionChange","constructor","_constructor","settings","Control.prototype.constructor.call","this","init","_init","that","showNoData","_propertyComboBox","width","valueState","valueStateText","event","handleComboBoxEvents","source","getSource","bindingContext","getBindingContext","path","getPath","model","getModel","selectedItem","getProperty","textArrangementChanged","fireEvent","getItems","_separatorColon","text","addStyleClass","_idNavigationComboBox","visible","_uomComboBox","_descriptionNavigationComboBox","_separatorColonText","_textArrangementComboBox","controlId","getParameter","getElementById","selectedKey","getSelectedKey","group","textArrangement","refresh","_deleteButton","icon","press","_onDeleteButtonClicked","bind","_onAddButtonClicked","onAfterRendering","_onAfterRendering","entityData","JSON","parse","stringify","getSelectionKeys","name","_setSelectionKeysMap","label","forEach","entity","_textArrangementComboBoxModel","i18nModel","option","getObject","setData","setSelectionKeys","_setSelectionKeys","selectionKeysArr","setAggregation","setProperty","getBindingInfo","propertyBindingPath","getBindingPath","bindAggregation","sorter","length","factory","key","setModel","_getTextArrangementModel","setItems","_setItems","bindProperty","bindingPath","bindItems","template","content","renderType","justifyContent","getMode","alignItems","fitContainer","_getInternalModel","_getItems","getSelectedItem","_getSelectedItem","boundData","push","bindingPathProperty","splice","slice","_handleComboBoxEvents","editor","isNavigation","isTextArrangementID","getValue","navigationProperties","isNavigationalProperty","hasNavigationProperty","propertyKeyForDescription","getGroupName","navigationKey","navigationKeyForDescription","isNavigationForId","groupVal","isValidation","getGroupValue","previewItems","isItemNotSelected","includes","updateControlState","setValueStateForModel","_getGroupName","navigationKeyForId","propertyKeyForId","_getGroupValue","_updateControlState","setValueState","Error","setValueStateText","errorFlag","Information","None","_hasNavigationProperty","propertyToCheck","some","prop","_setValueStateForModel","informativeMessage","property","formattingOptions","item","index","undefined","navigationValueState"],"sources":["ArrangementsEditor.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nimport Button from \"sap/m/Button\";\nimport ComboBox from \"sap/m/ComboBox\";\nimport CustomListItem from \"sap/m/CustomListItem\";\nimport HBox, { $HBoxSettings } from \"sap/m/HBox\";\nimport List from \"sap/m/List\";\nimport Text from \"sap/m/Text\";\nimport type Event from \"sap/ui/base/Event\";\nimport Control, { $ControlSettings } from \"sap/ui/core/Control\";\nimport type UI5Element from \"sap/ui/core/Element\";\nimport type { MetadataOptions } from \"sap/ui/core/Element\";\nimport CoreElement from \"sap/ui/core/Element\";\nimport ListItem from \"sap/ui/core/ListItem\";\nimport RenderManager from \"sap/ui/core/RenderManager\";\nimport { ValueState } from \"sap/ui/core/library\";\nimport type Context from \"sap/ui/model/Context\";\nimport type Model from \"sap/ui/model/Model\";\nimport Sorter from \"sap/ui/model/Sorter\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\nimport type ResourceModel from \"sap/ui/model/resource/ResourceModel\";\nimport { TEXTARRANGEMENT_OPTIONS } from \"../../config/TextArrangementOptions\";\nimport { getPreviewItems } from \"../../helpers/IntegrationCardHelper\";\nimport type { PropertyInfo } from \"../../odata/ODataTypes\";\nimport type { NavigationParameter, Property, UnitOfMeasures } from \"../../types/PropertyTypes\";\n\nexport type ArrangementOptions = {\n\tname: string;\n\tvalue: string;\n\tpropertyKeyForId?: string;\n\tpropertyKeyForDescription: string;\n\tnavigationKeyForId: string;\n\tnavigationKeyForDescription: string;\n\tisNavigationForId: boolean;\n\tisNavigationForDescription: boolean;\n\tnavigationalPropertiesForId: Property[];\n\tnavigationalPropertiesForDescription: Property[];\n\ttextArrangement?: string;\n\tarrangementType: string;\n\tvalueState: ValueState;\n\tvalueStateText: string;\n\tnavigationValueState: ValueState;\n\tnavigationValueStateText: string;\n};\n\ninterface IArrangementsEditor {\n\tgetMode(): string;\n\tgetSelectionKeys(): object;\n\tgetItems(): Array<ArrangementOptions>;\n\t_addButton: Button;\n\t_list: List;\n}\n\ninterface ArrangementsEditorSettings extends $ControlSettings {\n\tmode: string;\n\tselectionKeys: object;\n\tnavigationSelectionKeys: object;\n\titems: object;\n\tchange?: (event: ArrangementsEditorChangeEvent) => void;\n\tselectionChange?: (event: ArrangementsEditorSelectionChangeEvent) => void;\n}\ninterface ArrangementsEditorChangeEventParameters {\n\tvalue?: number;\n}\ninterface ArrangementsEditorSelectionChangeEventParameters {\n\tvalue?: number;\n}\n\ntype ArrangementsEditorChangeEvent = Event<ArrangementsEditorChangeEventParameters>;\ntype ArrangementsEditorSelectionChangeEvent = Event<ArrangementsEditorSelectionChangeEventParameters>;\n\ntype PropertyMap = {\n\t[key: string]: string;\n};\ntype PropertyInfoMap = Array<PropertyMap>;\n\n/**\n * @namespace sap.cards.ap.generator.app.controls\n */\nexport default class ArrangementsEditor extends Control {\n\t_list!: List;\n\t_propertyComboBox!: ComboBox;\n\t_idNavigationComboBox!: ComboBox;\n\t_addButton!: Button;\n\t_separatorColon!: Text;\n\t_uomComboBox!: ComboBox;\n\t_descriptionNavigationComboBox!: ComboBox;\n\t_separatorColonText!: Text;\n\t_textArrangementComboBox!: ComboBox;\n\t_deleteButton!: Button;\n\terrorFlag!: boolean;\n\t_setSelectionKeysMap!: PropertyInfo;\n\n\tstatic readonly metadata: MetadataOptions = {\n\t\tproperties: {\n\t\t\tmode: \"string\",\n\t\t\tselectionKeys: { type: \"object\", defaultValue: {} },\n\t\t\tnavigationSelectionKeys: { type: \"object\", defaultValue: {} },\n\t\t\titems: { type: \"object\", defaultValue: {} }\n\t\t},\n\t\taggregations: {\n\t\t\t_list: { type: \"sap.m.List\", multiple: false, visibility: \"hidden\" }\n\t\t},\n\t\tevents: {\n\t\t\tchange: {\n\t\t\t\tparameters: {\n\t\t\t\t\tvalue: { type: \"int\" }\n\t\t\t\t}\n\t\t\t},\n\t\t\tselectionChange: {\n\t\t\t\tparameters: {\n\t\t\t\t\tvalue: { type: \"int\" }\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tconstructor(settings: ArrangementsEditorSettings) {\n\t\tsuper(settings);\n\t}\n\n\tstatic renderer = {\n\t\tapiVersion: 2,\n\t\trender: function (rm: RenderManager, control: IArrangementsEditor): void {\n\t\t\trm.openStart(\"div\", control as unknown as UI5Element);\n\t\t\trm.openEnd();\n\t\t\trm.renderControl(control._list);\n\t\t\trm.renderControl(control._addButton);\n\t\t\trm.close(\"div\");\n\t\t}\n\t};\n\n\t/**\n\t * Initializes the ArrangementsEditor custom control\n\t *\n\t * This method sets up various controls and event handlers used by the methods in this control\n\t *\n\t * @returns {void}\n\t */\n\n\tinit(): void {\n\t\tconst that = this;\n\t\tthis._list = new List({\n\t\t\tshowNoData: false\n\t\t});\n\t\tthis._propertyComboBox = new ComboBox({\n\t\t\twidth: \"100%\",\n\t\t\tvalueState: \"{= ${valueState} }\",\n\t\t\tvalueStateText: \"{= ${valueStateText} }\",\n\t\t\tselectionChange: function (event: Event) {\n\t\t\t\tthat.handleComboBoxEvents(event, that, false, true);\n\t\t\t},\n\t\t\tchange: function (event: Event) {\n\t\t\t\tconst source: ComboBox = event.getSource();\n\t\t\t\tconst bindingContext = source.getBindingContext() as Context;\n\t\t\t\tconst path = bindingContext?.getPath() || \"\";\n\t\t\t\tconst model = that.getModel() as JSONModel;\n\t\t\t\tconst selectedItem = model.getProperty(path);\n\t\t\t\tconst textArrangementChanged = true;\n\t\t\t\tthat.fireEvent(\"change\", {\n\t\t\t\t\tvalue: that.getItems(),\n\t\t\t\t\tselectedItem,\n\t\t\t\t\ttextArrangementChanged\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\tthis._separatorColon = new Text({ text: \":\" }).addStyleClass(\"sapUiTinyMarginTop sapUiTinyMarginBeginEnd\");\n\t\tthis._idNavigationComboBox = new ComboBox({\n\t\t\twidth: \"100%\",\n\t\t\tvisible: \"{= !!${isNavigationForId} }\",\n\t\t\tvalueState: \"{= ${navigationValueState} }\",\n\t\t\tvalueStateText: \"{= ${navigationValueStateText} }\",\n\t\t\tchange: function () {\n\t\t\t\tthat.fireEvent(\"change\", {\n\t\t\t\t\tvalue: that.getItems()\n\t\t\t\t});\n\t\t\t},\n\t\t\tselectionChange: function (event: Event) {\n\t\t\t\tthat.handleComboBoxEvents(event, that, true);\n\t\t\t}\n\t\t}).addStyleClass(\"sapUiTinyMarginBegin\");\n\t\tthis._uomComboBox = new ComboBox({\n\t\t\twidth: \"100%\",\n\t\t\tchange: function (event: Event) {\n\t\t\t\tconst source: ComboBox = event.getSource();\n\t\t\t\tconst bindingContext = source.getBindingContext() as Context;\n\t\t\t\tconst path = bindingContext?.getPath() || \"\";\n\t\t\t\tconst model = that.getModel() as JSONModel;\n\t\t\t\tconst selectedItem = model.getProperty(path);\n\t\t\t\tthat.fireEvent(\"change\", {\n\t\t\t\t\tvalue: that.getItems(),\n\t\t\t\t\tselectedItem\n\t\t\t\t});\n\t\t\t},\n\t\t\tselectionChange: function (event: Event) {\n\t\t\t\tthat.handleComboBoxEvents(event, that);\n\t\t\t}\n\t\t});\n\t\tthis._descriptionNavigationComboBox = new ComboBox({\n\t\t\twidth: \"100%\",\n\t\t\tvisible: \"{= !!${isNavigationForDescription} }\",\n\t\t\tchange: function () {\n\t\t\t\tthat.fireEvent(\"change\", {\n\t\t\t\t\tvalue: that.getItems()\n\t\t\t\t});\n\t\t\t},\n\t\t\tselectionChange: function (event: Event) {\n\t\t\t\tthat.handleComboBoxEvents(event, that, true);\n\t\t\t}\n\t\t}).addStyleClass(\"sapUiTinyMarginBegin\");\n\t\tthis._separatorColonText = new Text({ text: \":\" }).addStyleClass(\"sapUiTinyMarginTop sapUiTinyMarginBeginEnd\");\n\t\tthis._textArrangementComboBox = new ComboBox({\n\t\t\twidth: \"100%\",\n\t\t\tchange: function () {\n\t\t\t\tthat.fireEvent(\"change\", {\n\t\t\t\t\ttype: \"text\",\n\t\t\t\t\tvalue: that.getItems()\n\t\t\t\t});\n\t\t\t},\n\t\t\tselectionChange: function (event: Event) {\n\t\t\t\tconst controlId = (event.getParameter as (param: string) => string)(\"id\");\n\t\t\t\tconst control = CoreElement.getElementById(controlId) as ComboBox;\n\t\t\t\tconst selectedKey = control.getSelectedKey();\n\t\t\t\tconst source: ComboBox = event.getSource();\n\t\t\t\tconst bindingContext = source.getBindingContext() as Context;\n\t\t\t\tconst path = bindingContext?.getPath() || \"\";\n\t\t\t\tconst model = that.getModel() as JSONModel;\n\t\t\t\tconst group = model.getProperty(path);\n\t\t\t\tgroup.textArrangement = `${selectedKey}`;\n\t\t\t\tmodel.refresh();\n\t\t\t}\n\t\t});\n\t\tthis._deleteButton = new Button({\n\t\t\ticon: \"sap-icon://delete\",\n\t\t\ttype: \"Transparent\",\n\t\t\tpress: this._onDeleteButtonClicked.bind(this)\n\t\t});\n\t\tthis._addButton = new Button({\n\t\t\ticon: \"sap-icon://add\",\n\t\t\ttype: \"Transparent\",\n\t\t\tpress: this._onAddButtonClicked.bind(this)\n\t\t});\n\t}\n\n\t/**\n\t * Performs actions after ArrangementsEditor custom control has been rendered\n\t *\n\t * This method is called after the control has been rendered in the UI\n\t * It updates entity data and refreshes the internal model of the TextArrangementComboBox\n\t *\n\t * @returns {void}\n\t */\n\n\tonAfterRendering(): void {\n\t\tconst entityData = JSON.parse(JSON.stringify(this.getSelectionKeys())) as PropertyInfoMap;\n\t\tconst name = this._setSelectionKeysMap.name ?? \"\";\n\t\tconst label = this._setSelectionKeysMap.label;\n\t\tconst textArrangement = this._setSelectionKeysMap.textArrangement ?? \"\";\n\t\tentityData.forEach((entity) => {\n\t\t\tentity.name = entity[name] as string;\n\t\t\tentity.label = entity[label] as string;\n\t\t\tentity.textArrangement = entity[textArrangement] as string;\n\t\t});\n\t\tconst _textArrangementComboBoxModel = this._textArrangementComboBox.getModel(\"internal\") as JSONModel;\n\t\tconst i18nModel = this.getModel(\"i18n\") as ResourceModel;\n\t\tTEXTARRANGEMENT_OPTIONS.forEach((option) => {\n\t\t\toption.label = i18nModel.getObject(option.label);\n\t\t});\n\t\t_textArrangementComboBoxModel.setData(TEXTARRANGEMENT_OPTIONS, true);\n\t\t_textArrangementComboBoxModel.refresh();\n\t}\n\n\t/**\n\t * Sets the selection keys\n\t *\n\t * This method forms the _setSelectionKeysMap from selectionKeys binding information,\n\t * and binds aggregation items for ComboBox controls, updates internal model of text arrangement ComboBox\n\t *\n\t * @param {Array<PropertyInfo>} selectionKeysArr - The array of selection keys\n\t * @returns {void}\n\t */\n\n\tsetSelectionKeys(selectionKeysArr: Array<PropertyInfo>): void {\n\t\tconst that = this;\n\t\tthat.setAggregation(\"_list\", that._list);\n\t\tthis.setProperty(\"selectionKeys\", selectionKeysArr);\n\t\tthis.setProperty(\"navigationSelectionKeys\", selectionKeysArr);\n\t\tthis._setSelectionKeysMap = this.getBindingInfo(\"selectionKeys\").parameters as PropertyInfo;\n\t\tconst propertyBindingPath = this.getBindingPath(\"navigationSelectionKeys\") || \"\";\n\t\tthis._propertyComboBox.bindAggregation(\"items\", {\n\t\t\tpath: propertyBindingPath,\n\t\t\tsorter: [new Sorter(\"category\", true, true), new Sorter(\"label\", false)],\n\t\t\tlength: 500,\n\t\t\tfactory: function () {\n\t\t\t\treturn new ListItem({\n\t\t\t\t\tkey: \"{\" + that._setSelectionKeysMap.name + \"}\",\n\t\t\t\t\ttext: \"{\" + that._setSelectionKeysMap.label + \"}\"\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\tthis._uomComboBox.bindAggregation(\"items\", {\n\t\t\tpath: propertyBindingPath,\n\t\t\tsorter: [new Sorter(\"category\", true, true), new Sorter(\"label\", false)],\n\t\t\tlength: 500,\n\t\t\tfactory: function () {\n\t\t\t\treturn new ListItem({\n\t\t\t\t\tkey: \"{\" + that._setSelectionKeysMap.name + \"}\",\n\t\t\t\t\ttext: \"{\" + that._setSelectionKeysMap.label + \"}\"\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\tthat._idNavigationComboBox.bindAggregation(\"items\", {\n\t\t\tpath: \"navigationalPropertiesForId/\",\n\t\t\tsorter: new Sorter(\"label\", false),\n\t\t\tlength: 500,\n\t\t\tfactory: function () {\n\t\t\t\treturn new ListItem({\n\t\t\t\t\tkey: \"{name}\",\n\t\t\t\t\ttext: \"{labelWithValue}\"\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\tthat._descriptionNavigationComboBox.bindAggregation(\"items\", {\n\t\t\tpath: \"navigationalPropertiesForDescription/\",\n\t\t\tsorter: new Sorter(\"label\", false),\n\t\t\tlength: 500,\n\t\t\tfactory: function () {\n\t\t\t\treturn new ListItem({\n\t\t\t\t\tkey: \"{name}\",\n\t\t\t\t\ttext: \"{labelWithValue}\"\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\tthis._textArrangementComboBox.setModel(this._getTextArrangementModel(), \"internal\");\n\t\tthis._textArrangementComboBox.bindAggregation(\"items\", {\n\t\t\tpath: \"internal>/\",\n\t\t\tfactory: function () {\n\t\t\t\treturn new ListItem({\n\t\t\t\t\tkey: \"{internal>name}\",\n\t\t\t\t\ttext: \"{internal>label}\"\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Sets the items property with the selectionKeysArr provided\n\t * bind items for _list control using binding path of items,\n\t * creates a custom layout for each item using a HBox and arranging the content within the HBox according to the specified styles\n\t *\n\t * @param {Array<ArrangementOptions>} selectionKeysArr - The array of items to be set\n\t * @returns {void}\n\t */\n\n\tsetItems(selectionKeysArr: Array<ArrangementOptions>): void {\n\t\tthis.setProperty(\"items\", selectionKeysArr, true);\n\t\tthis._propertyComboBox.bindProperty(\"selectedKey\", { path: \"propertyKeyForId\" });\n\t\tthis._idNavigationComboBox.bindProperty(\"selectedKey\", { path: \"navigationKeyForId\" });\n\t\tthis._uomComboBox.bindProperty(\"selectedKey\", { path: \"propertyKeyForDescription\" });\n\t\tthis._descriptionNavigationComboBox.bindProperty(\"selectedKey\", { path: \"navigationKeyForDescription\" });\n\t\tthis._textArrangementComboBox.bindProperty(\"selectedKey\", { path: \"arrangementType\" });\n\t\tconst bindingPath = this.getBindingPath(\"items\") ?? \"\";\n\n\t\tthis._list.bindItems({\n\t\t\tpath: bindingPath,\n\t\t\ttemplate: new CustomListItem({\n\t\t\t\tcontent: [\n\t\t\t\t\tnew HBox({\n\t\t\t\t\t\trenderType: \"Bare\",\n\t\t\t\t\t\tjustifyContent: \"SpaceAround\",\n\t\t\t\t\t\titems: [\n\t\t\t\t\t\t\tthis._propertyComboBox,\n\t\t\t\t\t\t\tthis._idNavigationComboBox,\n\t\t\t\t\t\t\tthis._separatorColon,\n\t\t\t\t\t\t\tthis._uomComboBox,\n\t\t\t\t\t\t\tthis.getMode() !== \"uom\" && this._separatorColonText,\n\t\t\t\t\t\t\tthis.getMode() !== \"uom\" && this._descriptionNavigationComboBox,\n\t\t\t\t\t\t\tthis.getMode() !== \"uom\" && this._separatorColonText,\n\t\t\t\t\t\t\tthis.getMode() !== \"uom\" && this._textArrangementComboBox,\n\t\t\t\t\t\t\tthis._deleteButton\n\t\t\t\t\t\t],\n\t\t\t\t\t\twidth: \"100%\",\n\t\t\t\t\t\talignItems: \"Start\",\n\t\t\t\t\t\tfitContainer: true\n\t\t\t\t\t} as $HBoxSettings)\n\t\t\t\t]\n\t\t\t})\n\t\t});\n\t}\n\n\t/**\n\t * Retrieves the internal model of the ArrangementsEditor control\n\t *\n\t * This method checks if the internal model exists. If not, it creates a new JSON model\n\t * and sets it as the internal model. It then returns the internal model\n\t *\n\t * @returns {sap.ui.model.Model} The internal model of the control\n\t */\n\n\t_getInternalModel(): Model {\n\t\tif (!this.getModel(\"internal\")) {\n\t\t\tconst model = new JSONModel({});\n\t\t\tthis.setModel(model, \"internal\");\n\t\t}\n\t\treturn this.getModel(\"internal\") as Model;\n\t}\n\n\t/**\n\t * Retrieves the items from the model\n\t *\n\t * This method fetches the items from the model using the binding path for items\n\t *\n\t * @returns {Array<ArrangementOptions>} An array containing the items retrieved from the model\n\t */\n\n\tgetItems(): Array<ArrangementOptions> {\n\t\tconst path = this.getBindingPath(\"items\") || \"\";\n\t\treturn (this.getModel() as JSONModel).getProperty(path);\n\t}\n\tgetSelectedItem(): Array<ArrangementOptions> {\n\t\tconst path = this.getBindingPath(\"items\") || \"\";\n\t\treturn (this.getModel() as JSONModel).getProperty(path);\n\t}\n\n\t/**\n\t * Creates and returns a JSON model for text arrangement options\n\t *\n\t * This method creates a new JSON model using the provided text arrangement options and returns it.\n\t *\n\t * @returns {sap.ui.model.json.JSONModel} A JSON model containing text arrangement options\n\t */\n\n\t_getTextArrangementModel(): JSONModel {\n\t\treturn new JSONModel(TEXTARRANGEMENT_OPTIONS);\n\t}\n\n\t/**\n\t * Handles the click event of the add button, adds a new item to the array and refreshes the model\n\t *\n\t * @returns {void}\n\t */\n\n\t_onAddButtonClicked(): void {\n\t\tconst model = this.getModel();\n\t\tconst path = this.getBindingPath(\"items\") || \"\";\n\t\tif (model) {\n\t\t\tlet boundData = model.getProperty(path);\n\t\t\tif (!boundData) {\n\t\t\t\tboundData = [];\n\t\t\t}\n\t\t\tboundData.push({});\n\t\t\tmodel.refresh();\n\t\t}\n\t}\n\n\t/**\n\t * Handles the click event of the delete button, removes item to be deleted, refreshes the model and fires a change event\n\t *\n\t * @param {Event} event - The event object representing the click event\n\t * @returns {void}\n\t */\n\n\t_onDeleteButtonClicked(event: Event): void {\n\t\tconst source = event.getSource() as Control;\n\t\tconst path = (source.getBindingContext() as Context).getPath();\n\t\tconst bindingPath = this.getBindingPath(\"items\") || \"\";\n\t\tconst model = this.getModel() as JSONModel;\n\t\tconst bindingPathProperty = model.getProperty(bindingPath);\n\t\tbindingPathProperty && bindingPathProperty.splice(path.slice(path.length - 1), 1);\n\t\tmodel.refresh();\n\t\tthis.fireEvent(\"change\", {\n\t\t\tvalue: this.getItems()\n\t\t});\n\t}\n\n\thandleComboBoxEvents(event: Event, editor: ArrangementsEditor, isNavigation: boolean = false, isTextArrangementID: boolean = false) {\n\t\tconst controlId = (event.getParameter as (param: string) => string)(\"id\");\n\t\tconst control = CoreElement.getElementById(controlId) as ComboBox;\n\t\tlet selectedKey = control.getSelectedKey();\n\t\tconst source = event.getSource();\n\t\tconst bindingContext = (source as ComboBox).getBindingContext() as Context;\n\t\tconst path = bindingContext?.getPath() || \"\";\n\t\tconst value = control.getValue();\n\t\tconst model = editor.getModel() as JSONModel;\n\t\tconst group = model.getProperty(path);\n\t\tconst i18nModel = editor.getModel(\"i18n\") as ResourceModel;\n\n\t\tconst navigationProperties: NavigationParameter[] = model.getProperty(\"/configuration/navigationProperty\") || [];\n\t\tconst isNavigationalProperty = this.hasNavigationProperty(navigationProperties, group.propertyKeyForDescription);\n\t\t// Determine the group name based on conditions\n\t\tgroup.name = this.getGroupName(group, isNavigation, isTextArrangementID);\n\t\tlet navigationKey = \"\";\n\t\tif (group.navigationKeyForDescription) {\n\t\t\tnavigationKey = `/${group.navigationKeyForDescription}`;\n\t\t}\n\t\tif (group.isNavigationForId) {\n\t\t\tselectedKey = group.name;\n\t\t}\n\n\t\tconst groupVal = isNavigationalProperty ? `${group.propertyKeyForDescription}${navigationKey}` : group.propertyKeyForDescription;\n\t\tconst isValidation = group.name === groupVal;\n\t\t// Update group value based on conditions\n\t\tif (!isValidation) {\n\t\t\tgroup.value = this.getGroupValue(group, isNavigation, isTextArrangementID, selectedKey, navigationProperties);\n\t\t}\n\n\t\tconst previewItems = getPreviewItems(model);\n\t\tconst isItemNotSelected = selectedKey !== groupVal && !previewItems.includes(group.name);\n\t\tthis.updateControlState(control, value, selectedKey, isValidation, i18nModel, editor, isItemNotSelected);\n\t\tthis.setValueStateForModel(model, i18nModel, selectedKey, bindingContext, editor, isItemNotSelected);\n\n\t\tmodel.refresh();\n\t\treturn group;\n\t}\n\n\tgetGroupName(group: ArrangementOptions, isNavigation: boolean, isTextArrangementID: boolean): string {\n\t\tif (isNavigation) {\n\t\t\treturn group.navigationKeyForId ? `${group.propertyKeyForId}/${group.navigationKeyForId}` : `${group.propertyKeyForId}`;\n\t\t}\n\t\tif (isTextArrangementID) {\n\t\t\treturn `${group.propertyKeyForId}`;\n\t\t}\n\t\treturn group.navigationKeyForId ? `${group.propertyKeyForId}/${group.navigationKeyForId}` : `${group.propertyKeyForId}`;\n\t}\n\n\tgetGroupValue(\n\t\tgroup: ArrangementOptions,\n\t\tisNavigation: boolean,\n\t\tisTextArrangementID: boolean,\n\t\tselectedKey: string,\n\t\tnavigationProperties: NavigationParameter[]\n\t): string {\n\t\tconst { propertyKeyForId, propertyKeyForDescription, navigationKeyForDescription } = group;\n\n\t\tif (isNavigation) {\n\t\t\treturn navigationKeyForDescription ? `${propertyKeyForDescription}/${navigationKeyForDescription}` : propertyKeyForDescription;\n\t\t}\n\n\t\tif (isTextArrangementID) {\n\t\t\tconst isNavigationalProperty = this.hasNavigationProperty(navigationProperties, propertyKeyForId as string);\n\t\t\tif (navigationKeyForDescription) {\n\t\t\t\treturn isNavigationalProperty ? `${propertyKeyForId}` : `${propertyKeyForDescription}/${navigationKeyForDescription}`;\n\t\t\t}\n\t\t\treturn isNavigationalProperty ? (propertyKeyForId as string) : propertyKeyForDescription;\n\t\t}\n\n\t\treturn propertyKeyForDescription || selectedKey;\n\t}\n\n\tupdateControlState(\n\t\tcontrol: ComboBox,\n\t\tvalue: string,\n\t\tselectedKey: string,\n\t\tisValidation: boolean,\n\t\ti18nModel: ResourceModel,\n\t\teditor: ArrangementsEditor,\n\t\tisItemNotSelected: boolean\n\t) {\n\t\tif (!selectedKey && value) {\n\t\t\tcontrol.setValueState(ValueState.Error);\n\t\t\tcontrol.setValueStateText(i18nModel.getObject(\"INVALID_SELECTION\"));\n\t\t\teditor.errorFlag = true;\n\t\t} else if (isValidation) {\n\t\t\tcontrol.setValueState(ValueState.Error);\n\t\t\tcontrol.setValueStateText(i18nModel.getObject(\"SAME_SELECTION\"));\n\t\t\teditor.errorFlag = true;\n\t\t} else if (isItemNotSelected && value) {\n\t\t\tcontrol.setValueState(ValueState.Information);\n\t\t\tcontrol.setValueStateText(i18nModel.getObject(\"UNSELECTED_ITEM\"));\n\t\t\teditor.errorFlag = false;\n\t\t} else {\n\t\t\teditor.errorFlag = false;\n\t\t\tcontrol.setValueState(ValueState.None);\n\t\t\tcontrol.setValueStateText(\"\");\n\t\t}\n\t}\n\n\thasNavigationProperty(navigationProperties: NavigationParameter[], propertyToCheck: string) {\n\t\treturn navigationProperties.length > 0 && navigationProperties.some((prop) => prop.name === propertyToCheck);\n\t}\n\n\t/**\n\t * The function sets the ValueState of properties present in advanced formatting panel,\n\t * to ValueState.Information or ValueState.None on the basis of properties present in card preview.\n\t * @param {JSONModel} model - The JSON model containing the card configuration.\n\t * @param {ResourceModel} i18nModel - The resource model for localization.\n\t * @param {string} selectedKey - The selected key from the ComboBox.\n\t * @param {Context} bindingContext - The binding context of the ComboBox.\n\t * @param {ArrangementsEditor} editor - The ArrangementsEditor instance.\n\t * @param {boolean} isItemNotSelected - Flag indicating if the item is not present in the card preview.\n\t * @returns {void}\n\t */\n\tsetValueStateForModel(\n\t\tmodel: JSONModel,\n\t\ti18nModel: ResourceModel,\n\t\tselectedKey: string,\n\t\tbindingContext: Context,\n\t\teditor: ArrangementsEditor,\n\t\tisItemNotSelected: boolean\n\t): void {\n\t\tconst informativeMessage = i18nModel.getObject(\"UNSELECTED_ITEM\");\n\t\t[\"unitOfMeasures\", \"textArrangements\"].forEach((property) => {\n\t\t\tif (bindingContext?.getPath()?.includes(property)) {\n\t\t\t\tconst formattingOptions = model.getProperty(`/configuration/advancedFormattingOptions/${property}`) ?? [];\n\t\t\t\tformattingOptions.forEach((item: UnitOfMeasures, index: number) => {\n\t\t\t\t\tlet isNavigationalProperty: boolean = false;\n\t\t\t\t\tif (item.isNavigationForId && item.navigationKeyForId) {\n\t\t\t\t\t\tisNavigationalProperty = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (!editor.errorFlag && isItemNotSelected && selectedKey === item.name) {\n\t\t\t\t\t\tif (item.valueState === ValueState.None || item.valueState === undefined) {\n\t\t\t\t\t\t\tmodel.setProperty(\n\t\t\t\t\t\t\t\t`/configuration/advancedFormattingOptions/${property}/${index}/valueState`,\n\t\t\t\t\t\t\t\tValueState.Information\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tmodel.setProperty(\n\t\t\t\t\t\t\t\t`/configuration/advancedFormattingOptions/${property}/${index}/valueStateText`,\n\t\t\t\t\t\t\t\tinformativeMessage\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tisNavigationalProperty &&\n\t\t\t\t\t\t\t(item.navigationValueState === ValueState.None || item.navigationValueState === undefined)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tmodel.setProperty(\n\t\t\t\t\t\t\t\t`/configuration/advancedFormattingOptions/${property}/${index}/navigationValueState`,\n\t\t\t\t\t\t\t\tValueState.Information\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tmodel.setProperty(\n\t\t\t\t\t\t\t\t`/configuration/advancedFormattingOptions/${property}/${index}/navigationValueStateText`,\n\t\t\t\t\t\t\t\tinformativeMessage\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (!editor.errorFlag && !isItemNotSelected && selectedKey === item.name) {\n\t\t\t\t\t\tif (item.valueState === ValueState.Information) {\n\t\t\t\t\t\t\tmodel.setProperty(`/configuration/advancedFormattingOptions/${property}/${index}/valueState`, ValueState.None);\n\t\t\t\t\t\t\tmodel.setProperty(`/configuration/advancedFormattingOptions/${property}/${index}/valueStateText`, \"\");\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (isNavigationalProperty && item.navigationValueState === ValueState.Information) {\n\t\t\t\t\t\t\tmodel.setProperty(\n\t\t\t\t\t\t\t\t`/configuration/advancedFormattingOptions/${property}/${index}/navigationValueState`,\n\t\t\t\t\t\t\t\tValueState.None\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tmodel.setProperty(`/configuration/advancedFormattingOptions/${property}/${index}/navigationValueStateText`, \"\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n}\n"],"mappings":"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","ignoreList":[]}