<!--
  SAP UI development toolkit for HTML5 (SAPUI5)
   * (c) Copyright 2009-2025 SAP SE. All rights reserved
-->
<core:FragmentDefinition xmlns="sap.m" xmlns:core="sap.ui.core" xmlns:tnt="sap.tnt" xmlns:custom="sap.cards.ap.generator.app.controls">
	<ResponsivePopover placement="Bottom" initialFocus="url" afterClose=".onPopoverClose" showHeader="false" id="advanceFormattingPopover">
		<content>
			<VBox visible="{= ${/configuration/popoverContentType} === 'uom' ? true : false}">
				<Bar>
					<contentLeft>
						<Title text="{i18nLabelText>/uomText}" />
					</contentLeft>
				</Bar>
				<VBox>
					<tnt:InfoLabel text="{i18n>TEXT_APPLIED_TO_ALL}" colorScheme="7" />
					<HBox alignItems="Center" justifyContent="Start">
						<ComboBox
							selectedKey="{/configuration/advancedFormattingOptions/targetProperty}"
							class="sapUiSmallMarginBeginEnd sapUiSmallMarginTop"
							width="340px"
							items="{
                                path: '/configuration/properties',
                                sorter: { path: 'label' ,descending: false },
                                length : 500
                            }"
						>
							<core:Item key="{name}" text="{labelWithValue}" />
						</ComboBox>
					</HBox>
				</VBox>
				<Bar class="sapMContent-CTX sapMFooter-CTX">
					<contentRight>
						<Button
							type="Emphasized"
							class="sapUiSmallMarginTopBottom"
							enabled="{= ${/configuration/advancedFormattingOptions/targetProperty} ? true : false}"
							text="{i18n>APPLY_TEXT}"
							press=".applyUoMFormatting"
						/>
						<Button
							class="sapUiSmallMarginTopBottom"
							enabled="{= ${/configuration/advancedFormattingOptions/targetProperty} ? true : false}"
							text="{i18n>REMOVE_TEXT}"
							press=".onDelete"
						/>
					</contentRight>
				</Bar>
			</VBox>

			<VBox visible="{= ${/configuration/popoverContentType} === 'criticality' ? true : false}">
				<Bar>
					<contentLeft>
						<Title text="{i18nLabelText>/criticalityText}" />
					</contentLeft>
				</Bar>
				<custom:CriticalityEditor
					selectionKeys="{path: '/configuration/properties', parameters: {name:'name', label:'labelWithValue'} }"
					items="{
                            path: '/configuration/advancedFormattingOptions/sourceCriticalityProperty',
                            parameters: {name:'name', value:'hostCriticality', calculation:'criticalityCalculation'}
                        }"
					type="COMPACT"
					class="sapUiTinyMarginBeginEnd sapUiTinyMarginTopBottom"
					id="headerCriticalityEditor"
				/>
				<Bar class="sapMContent-CTX sapMFooter-CTX">
					<contentRight>
						<Button
							type="Emphasized"
							id="applyCriticality"
							class="sapUiSmallMarginTopBottom"
							enabled="{/configuration/advancedFormattingOptions/isCriticalityApplied}"
							text="{i18n>APPLY_TEXT}"
							press=".applyCriticality"
						/>
						<Button
							class="sapUiSmallMarginTopBottom"
							enabled="{/configuration/advancedFormattingOptions/isCriticalityApplied}"
							text="{i18n>REMOVE_TEXT}"
							press=".onDeleteCriticality"
						/>
					</contentRight>
				</Bar>
			</VBox>

			<VBox visible="{= ${/configuration/popoverContentType} === 'formatter' ? true : false}">
				<Bar>
					<contentLeft>
						<Title text="{i18nLabelText>/formatterText}" />
					</contentLeft>
				</Bar>
				<tnt:InfoLabel text="{i18n>TEXT_APPLIED_TO_ALL}" colorScheme="7" />
				<custom:CompactFormatterSelection
					formatters="{path: '/configuration/advancedFormattingOptions/propertyValueFormatters', parameters: {name:'propertyName',value:'formatterName',parameters: 'parameters'}}"
					class="sapUiTinyMarginBeginEnd sapUiTinyMarginTopBottom"
					type="COMPACT"
					change="onPropertyFormatterChange"
					id="headerFormatterEditor"
				/>
				<Bar class="sapMContent-CTX sapMFooter-CTX">
					<contentRight>
						<Button
							class="sapUiSmallMarginTopBottom"
							text="{i18n>APPLY_TEXT}"
							type="Emphasized"
							enabled="{/configuration/advancedFormattingOptions/isFormatterApplied}"
							press=".applyFormatting"
						/>
						<Button
							class="sapUiSmallMarginTopBottom"
							text="{i18n>REMOVE_TEXT}"
							enabled="{/configuration/advancedFormattingOptions/isFormatterApplied}"
							press=".onDeleteFormatter"
						/>
					</contentRight>
				</Bar>
			</VBox>

			<VBox visible="{= ${/configuration/popoverContentType} === 'trend' ? true : false}">
				<Bar>
					<contentLeft>
						<Title text="{i18nLabelText>/trendCalculatorText}" />
					</contentLeft>
				</Bar>
				<VBox alignItems="Start" justifyContent="Start">
					<FlexBox alignItems="Start" justifyContent="Start" class="sapUiSmallMarginEnd">
						<Label
							required="true"
							text="{i18n>TREND_RANGE_DIFFERENCE_PROPERTY_TEXT}"
							labelFor="trendDownDifferenceInput"
							class="sapUiTinyMarginTop sapUiSmallMarginBegin"
							width="120px"
						/>
						<Label text=":" class="sapUiTinyMarginTop sapUiSmallMarginEnd" />
						<Input
							id="trendDownDifferenceInput"
							valueState="{/configuration/trendOptions/downDifferenceValueState}"
							type="Number"
							change=".onDownDifferenceChange"
							class="sapUiTinyMarginEnd"
							placeholder="{i18n>TREND_DOWN_DIFFERENCE_PLACEEHOLDER}"
							width="110px"
							value="{/configuration/trendOptions/downDifference}"
						/>
						<Input
							id="trendUpDifferenceInput"
							valueState="{/configuration/trendOptions/upDifferenceValueState}"
							type="Number"
							change=".onUpDifferenceChange"
							class="sapUiTinyMarginEnd"
							placeholder="{i18n>TREND_UP_DIFFERENCE_PLACEEHOLDER}"
							width="110px"
							value="{/configuration/trendOptions/upDifference}"
						/>
					</FlexBox>
					<FlexBox alignItems="Start" justifyContent="Start" class="sapUiSmallMarginEnd">
						<Label
							required="true"
							text="{i18n>TREND_REFERENCE_PROPERTY_TEXT}"
							labelFor="trendReferenceValueInput"
							class="sapUiTinyMarginTop sapUiSmallMarginBegin"
							width="120px"
						/>
						<Label text=":" class="sapUiTinyMarginTop sapUiSmallMarginEnd" />
						<Input
							id="trendReferenceValueInput"
							valueState="{/configuration/trendOptions/referenceValueState}"
							type="Number"
							change=".onReferenceValInputChange"
							class="sapUiSmallMarginEnd trendReferenceValInput"
							width="110px"
							value="{/configuration/trendOptions/referenceValue}"
						/>
					</FlexBox>
				</VBox>
				<Bar class="sapMContent-CTX sapMFooter-CTX">
					<contentRight>
						<Button
							type="Emphasized"
							class="sapUiSmallMarginTopBottom"
							text="{i18n>APPLY_TEXT}"
							press=".applyTrendCalculation"
						/>
						<Button class="sapUiSmallMarginTopBottom" text="{i18n>REMOVE_TEXT}" press=".onTrendDelete" />
					</contentRight>
				</Bar>
			</VBox>

			<VBox visible="{= ${/configuration/popoverContentType} === 'indicators' ? true : false}">
				<Bar>
					<contentLeft>
						<Title text="{i18nLabelText>/indicatorsText}" />
					</contentLeft>
				</Bar>
				<VBox alignItems="Start" justifyContent="Start">
					<FlexBox alignItems="Start" justifyContent="Start" class="sapUiSmallMarginEnd">
						<Label
							required="true"
							text="{i18n>TARGET_INDICATORS_TEXT}"
							labelFor="targetInputValue"
							class="sapUiTinyMarginTop sapUiSmallMarginBegin"
							width="75px"
						/>
						<Label text=":" class="sapUiTinyMarginTop sapUiSmallMarginEnd" />
						<Input
							id="targetInputValue"
							valueState="{/configuration/indicatorsValue/targetValueState}"
							type="Number"
							change=".onTargetValueChange"
							class="sapUiTinyMarginEnd"
							width="130px"
							value="{/configuration/indicatorsValue/targetValue}"
						/>
						<Select
							id="targetUnitInput"
							valueState="{/configuration/indicatorsValue/targetUnitValueState}"
							forceSelection="false"
							change=".onTargetUnitChange"
							width="120px"
							selectedKey="{/configuration/indicatorsValue/targetUnit}"
							items="{
                path: '/configuration/targetUnit',
                sorter: { path: 'label' }
            }"
						>
							<core:ListItem key="{Name}" text="{Value}" />
						</Select>
					</FlexBox>
					<FlexBox alignItems="Start" justifyContent="Start" class="sapUiSmallMarginEnd">
						<Label
							required="true"
							text="{i18n>DEVIATION_INDICATORS_TEXT}"
							labelFor="deviationInputValue"
							class="sapUiTinyMarginTop sapUiSmallMarginBegin"
							width="75px"
						/>
						<Label text=":" class="sapUiTinyMarginTop sapUiSmallMarginEnd" />
						<Input
							id="deviationInputValue"
							valueState="{/configuration/indicatorsValue/deviationValueState}"
							type="Number"
							change=".onDeviationValueChange"
							class="sapUiTinyMarginEnd"
							width="130px"
							value="{/configuration/indicatorsValue/deviationValue}"
						/>
						<Select
							id="deviationUnitInput"
							valueState="{/configuration/indicatorsValue/deviationUnitValueState}"
							forceSelection="false"
							change=".onDeviationUnitChange"
							width="120px"
							selectedKey="{/configuration/indicatorsValue/deviationUnit}"
							items="{
                path: '/configuration/deviationUnit',
                sorter: { path: 'label' }
            }"
						>
							<core:ListItem key="{Name}" text="{Value}" />
						</Select>
					</FlexBox>
				</VBox>
				<Bar class="sapMContent-CTX sapMFooter-CTX">
					<contentRight>
						<Button type="Emphasized" class="sapUiSmallMarginTopBottom" text="{i18n>APPLY_TEXT}" press=".applyIndicators" />
						<Button
							class="sapUiTinyMarginBeginEnd sapUiSmallMarginTopBottom"
							text="{i18n>REMOVE_TEXT}"
							press=".onIndicatorsDelete"
						/>
					</contentRight>
				</Bar>
			</VBox>
		</content>
	</ResponsivePopover>
</core:FragmentDefinition>
