{"version":3,"file":"library-preload.js","sections":[{"offset":{"line":1,"column":0},"map":{"version":3,"names":["sap","ui","define","exports","normalizeArray","parts","allowAboveRoot","up","i","length","last","splice","unshift","splitPathRe","splitPath","filename","exec","slice","resolve","resolvedPath","resolvedAbsolute","arguments","path","TypeError","charAt","filter","split","p","join","normalize","isPathAbsolute","isAbsolute","trailingSlash","substr","paths","Array","prototype","call","index","relative","from","to","trim","arr","start","end","fromParts","toParts","Math","min","samePartsLength","outputParts","push","concat","sep","delimiter","dirname","result","root","dir","basename","ext","f","extname","defaultExport","xs","res","str","len","Object","defineProperty","value","default"],"sources":["path-dbg.js"],"mappings":"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","ignoreList":[],"sourceRoot":"thirdparty"}},{"offset":{"line":7,"column":0},"map":{"version":3,"names":[],"sources":["library-preload.js?bundle-code-0"],"mappings":"AAAA;AACA","sourcesContent":["sap.ui.require.preload({\n"],"sourceRoot":""}},{"offset":{"line":9,"column":0},"map":{"version":3,"file":"CardGenerator.js","names":["sap","ui","define","Log","sap_cards_ap_common_helpers_ApplicationInfo","sap_cards_ap_common_services_RetrieveCard","MessageBox","Fragment","CoreLib","JSONModel","ResourceModel","___app_CardGeneratorDialogController","___config_PreviewOptions","___helpers_CardGeneratorModel","___helpers_IntegrationCardHelper","___pages_Application","___pages_FreeStyle","___pages_ObjectPage","_catch","body","recover","result","e","then","AppType","getApplicationFloorplan","getObjectPageCardManifestForPreview","CardGeneratorDialogController","setValueStateForAdvancedPanel","PREVIEW_OPTIONS","getCardGeneratorDialogModel","createCardManifest","renderCardPreview","updateCardGroups","Application","FreeStyle","ObjectPage","CardTypes","cardGeneratorDialog","initializeAsync","appComponent","_temp2","isValidConfiguration","applicationInstance","validateCardGeneration","resourceModel","getResourceModelForDialog","warningMsg","getObject","warning","actions","Action","OK","emphasizedAction","Promise","resolve","initializeCardGeneratorDialog","applicationFloorplan","_temp","createInstance","updateObjectContextFreeStyleModel","reject","applyModelsToDialog","dialog","cardManifest","getInstance","entityRelatedInfo","getEntityRelatedInfo","getModel","setModel","previewOptionsModel","freeStyleModel","getFreeStyleModelForDialog","isServiceDetailsView","isApplyServiceDetailsEnabled","_temp3","entitySetWithObjectContext","dialogModel","integrationCardManifest","setProperty","_temp5","oDialog","initialize","open","element","document","getElementById","style","backgroundColor","catch","oError","error","load","id","name","controller","_temp4","cardType","INTEGRATION","includeActions","hideActions","isDesignMode","_getObjectPageCardMan","oResourceBundle","getResourceBundleFor","bundleUrl","oUrlInfo","url","bundle","__exports","__esModule"],"sources":["CardGenerator.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nimport Log from \"sap/base/Log\";\nimport { AppType, getApplicationFloorplan } from \"sap/cards/ap/common/helpers/ApplicationInfo\";\nimport { getObjectPageCardManifestForPreview } from \"sap/cards/ap/common/services/RetrieveCard\";\nimport type Dialog from \"sap/m/Dialog\";\nimport MessageBox from \"sap/m/MessageBox\";\nimport Component from \"sap/ui/core/Component\";\nimport type Control from \"sap/ui/core/Control\";\nimport Fragment from \"sap/ui/core/Fragment\";\nimport CoreLib from \"sap/ui/core/Lib\";\nimport { CardManifest } from \"sap/ui/integration/widgets/Card\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\nimport ResourceModel from \"sap/ui/model/resource/ResourceModel\";\nimport { CardGeneratorDialogController, setValueStateForAdvancedPanel } from \"./app/CardGeneratorDialogController\";\nimport { PREVIEW_OPTIONS } from \"./config/PreviewOptions\";\nimport { getCardGeneratorDialogModel } from \"./helpers/CardGeneratorModel\";\nimport { createCardManifest, renderCardPreview, updateCardGroups } from \"./helpers/IntegrationCardHelper\";\nimport { Application } from \"./pages/Application\";\nimport { FreeStyle } from \"./pages/FreeStyle\";\nimport { ObjectPage } from \"./pages/ObjectPage\";\n\nenum CardTypes {\n\tINTEGRATION = \"integration\",\n\tADAPTIVE = \"adaptive\"\n}\n\nlet cardGeneratorDialog: Promise<Control | Control[]> | undefined;\n\n/**\n * Initializes the card generator asynchronously.\n * Determines the application floorplan and validates card generation.\n * If card generation is not valid, displays a warning message.\n * Otherwise, initializes the card generator dialog.\n *\n * @param {Component} appComponent - The root component of the application.\n * @returns {Promise<void>} - A promise that resolves when the initialization is complete.\n */\nexport const initializeAsync = async function (appComponent: Component): Promise<void> {\n\tconst applicationFloorplan = getApplicationFloorplan(appComponent);\n\tlet applicationInstance;\n\n\tif (applicationFloorplan === AppType.ObjectPage) {\n\t\tapplicationInstance = ObjectPage.createInstance(appComponent);\n\t} else {\n\t\tapplicationInstance = FreeStyle.createInstance(appComponent);\n\t\tawait (applicationInstance as FreeStyle).updateObjectContextFreeStyleModel();\n\t}\n\n\tconst isValidConfiguration = applicationInstance.validateCardGeneration();\n\n\tif (!isValidConfiguration) {\n\t\tconst resourceModel = getResourceModelForDialog();\n\t\tconst warningMsg: string = resourceModel.getObject(\"GENERATE_CARD_NOT_SUPPORTED\");\n\t\tMessageBox.warning(warningMsg, {\n\t\t\tactions: MessageBox.Action.OK,\n\t\t\temphasizedAction: MessageBox.Action.OK\n\t\t});\n\t\treturn;\n\t}\n\treturn await initializeCardGeneratorDialog(appComponent);\n};\n\n/**\n * Applies models to the card generator dialog.\n *\n * This function sets up various models for the dialog, including the i18n model, preview options model,\n * and the freeStyle model. It also fetches and sets the card generator dialog model.\n *\n * @param {Dialog} dialog - The dialog to which the models will be applied.\n * @param {Component} appComponent - The root component of the application.\n * @param {CardManifest} [cardManifest] - The card manifest to be used for creating the card.\n * @returns {Promise<void>} - A promise that resolves when the models have been applied to the dialog.\n */\nconst applyModelsToDialog = async function (dialog: Dialog, appComponent: Component, cardManifest?: CardManifest): Promise<void> {\n\tconst applicationInstance = Application.getInstance();\n\tconst entityRelatedInfo = applicationInstance.getEntityRelatedInfo();\n\n\tif (!dialog.getModel(\"i18n\")) {\n\t\tconst resourceModel = getResourceModelForDialog();\n\t\tdialog.setModel(resourceModel, \"i18n\");\n\t}\n\n\tif (!dialog.getModel(\"previewOptions\")) {\n\t\tconst previewOptionsModel = new JSONModel(PREVIEW_OPTIONS);\n\t\tdialog.setModel(previewOptionsModel, \"previewOptions\");\n\t}\n\n\tconst freeStyleModel =\n\t\tapplicationInstance instanceof FreeStyle\n\t\t\t? applicationInstance.getFreeStyleModelForDialog()\n\t\t\t: new JSONModel({\n\t\t\t\t\tisServiceDetailsView: false,\n\t\t\t\t\tisApplyServiceDetailsEnabled: false\n\t\t\t\t});\n\tdialog.setModel(freeStyleModel, \"freeStyle\");\n\n\tif (entityRelatedInfo.entitySetWithObjectContext) {\n\t\tconst dialogModel = await getCardGeneratorDialogModel(appComponent, cardManifest);\n\t\tdialog.setModel(dialogModel);\n\t\tconst integrationCardManifest = await createCardManifest(appComponent, cardManifest as CardManifest, dialogModel);\n\t\trenderCardPreview(integrationCardManifest);\n\t\tupdateCardGroups(dialogModel);\n\t\tsetValueStateForAdvancedPanel();\n\t\tfreeStyleModel.setProperty(\"/isServiceDetailsView\", false);\n\t}\n};\n\n/**\n * Initializes the card generator dialog asynchronously.\n * Loads the card generator dialog fragment, fetches the card manifest, and set the dialog model.\n * Opens the dialog and renders the card preview.\n *\n * @param {Component} appComponent - The root component of the application.\n * @returns {Promise<void>} - A promise that resolves when the dialog is initialized and opened.\n */\nexport const initializeCardGeneratorDialog = async function (appComponent: Component): Promise<void> {\n\tif (!cardGeneratorDialog) {\n\t\tcardGeneratorDialog = Fragment.load({\n\t\t\tid: \"cardGeneratorDialog\",\n\t\t\tname: \"sap.cards.ap.generator.app.CardGeneratorDialog\",\n\t\t\tcontroller: CardGeneratorDialogController\n\t\t});\n\t}\n\n\tlet cardManifest: CardManifest | undefined;\n\n\ttry {\n\t\tcardManifest = (await getObjectPageCardManifestForPreview(appComponent, {\n\t\t\tcardType: CardTypes.INTEGRATION,\n\t\t\tincludeActions: false,\n\t\t\thideActions: false,\n\t\t\tisDesignMode: true\n\t\t})) as CardManifest;\n\t} catch (oError: unknown) {\n\t\tLog.error(\"Error while fetching the card manifest.\");\n\t}\n\n\tcardGeneratorDialog\n\t\t.then(async function (oDialog: Control | Control[]) {\n\t\t\tapplyModelsToDialog(oDialog as Dialog, appComponent, cardManifest);\n\t\t\tCardGeneratorDialogController.initialize();\n\t\t\t(oDialog as Dialog).open();\n\t\t\tconst element = document.getElementById(\"cardGeneratorDialog--contentSplitter\");\n\t\t\tif (element) {\n\t\t\t\telement.style.backgroundColor = \"#f8f8f8\";\n\t\t\t}\n\t\t\treturn oDialog;\n\t\t})\n\t\t.catch(function (oError: Error) {\n\t\t\tLog.error(\"Error while loading or initializing the dialog:\", oError);\n\t\t});\n};\n\n/**\n * Retrieves the resource model for the card generator dialog.\n * Loads the i18n resource bundle and creates a new ResourceModel.\n *\n * @returns {ResourceModel} - The resource model for the card generator dialog.\n */\nexport function getResourceModelForDialog(): ResourceModel {\n\tconst oResourceBundle = CoreLib.getResourceBundleFor(\"sap.cards.ap.generator.i18n\");\n\treturn new ResourceModel({\n\t\tbundleUrl: oResourceBundle.oUrlInfo.url,\n\t\tbundle: oResourceBundle //Reuse created bundle to stop extra network calls\n\t});\n}\n"],"mappings":"AAAA;;;;AAAA,aAAAA,IAAAC,GAAAC,OAAA,obAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,aAkjBO,SAAAC,EAAgBC,EAAMC,GAC5B,IACC,IAAIC,EAASF,GACd,CAAE,MAAMG,GACP,OAAOF,EAAQE,EAChB,CACA,GAAID,GAAUA,EAAOE,KAAM,CAC1B,OAAOF,EAAOE,UAAU,EAAGH,EAC5B,CACA,OAAOC,CACR,CAAC,MAvjBQG,EAAOpB,EAAA,iBAAEqB,EAAuBrB,EAAA,iCAChCsB,EAAmCrB,EAAA,6CAUnCsB,EAA6BhB,EAAA,uCAAEiB,EAA6BjB,EAAA,uCAC5DkB,EAAejB,EAAA,yBACfkB,EAA2BjB,EAAA,qCAC3BkB,EAAkBjB,EAAA,4BAAEkB,EAAiBlB,EAAA,2BAAEmB,EAAgBnB,EAAA,0BACvDoB,EAAWnB,EAAA,qBACXoB,EAASnB,EAAA,mBACToB,EAAUnB,EAAA,kBAEdoB,EAAS,SAATA,KAAS,6BAATA,EAAS,8BAATA,CAAS,EAATA,GAAS,IAKd,IAAIC,EAWG,MAAMC,EAAe,SAAmBC,GAAuB,IAAiB,SAAAC,IAWtF,MAAMC,EAAuBC,EAAoBC,yBAEjD,IAAKF,EAAsB,CAC1B,MAAMG,EAAgBC,IACtB,MAAMC,EAAqBF,EAAcG,UAAU,+BACnD1C,EAAW2C,QAAQF,EAAY,CAC9BG,QAAS5C,EAAW6C,OAAOC,GAC3BC,iBAAkB/C,EAAW6C,OAAOC,KAErC,MACD,CAAC,OAAAE,QAAAC,QACYC,EAA8BhB,GAAa,CArBxD,MAAMiB,EAAuBhC,EAAwBe,GACrD,IAAIG,EAAoB,MAAAe,EAAA,cAEpBD,IAAyBjC,EAAQY,WAAU,CAC9CO,EAAsBP,EAAWuB,eAAenB,EAAc,MAE9DG,EAAsBR,EAAUwB,eAAenB,GAAc,OAAAc,QAAAC,QACtDZ,EAAkCiB,qCAAmCrC,KAAA,eANrD,GAMqD,OAAA+B,QAAAC,QAAAG,KAAAnC,KAAAmC,EAAAnC,KAAAkB,KAAAiB,GAe9E,CAAC,MAAApC,GAAA,OAAAgC,QAAAO,OAAAvC,EAAA,GAaD,MAAMwC,EAAmB,SAAmBC,EAAgBvB,EAAyBwB,GAA2B,IAC/G,MAAMrB,EAAsBT,EAAY+B,cACxC,MAAMC,EAAoBvB,EAAoBwB,uBAE9C,IAAKJ,EAAOK,SAAS,QAAS,CAC7B,MAAMvB,EAAgBC,IACtBiB,EAAOM,SAASxB,EAAe,OAChC,CAEA,IAAKkB,EAAOK,SAAS,kBAAmB,CACvC,MAAME,EAAsB,IAAI7D,EAAUoB,GAC1CkC,EAAOM,SAASC,EAAqB,iBACtC,CAEA,MAAMC,EACL5B,aAA+BR,EAC5BQ,EAAoB6B,6BACpB,IAAI/D,EAAU,CACdgE,qBAAsB,MACtBC,6BAA8B,QAElCX,EAAOM,SAASE,EAAgB,aAAa,MAAAI,EAAA,cAEzCT,EAAkBU,2BAA0B,QAAAtB,QAAAC,QACrBzB,EAA4BU,EAAcwB,IAAazC,KAAA,SAA3EsD,GACNd,EAAOM,SAASQ,GAAa,OAAAvB,QAAAC,QACSxB,EAAmBS,EAAcwB,EAA8Ba,IAAYtD,KAAA,SAA3GuD,GACN9C,EAAkB8C,GAClB7C,EAAiB4C,GACjBjD,IACA2C,EAAeQ,YAAY,wBAAyB,MAAO,MATf,GASe,OAAAzB,QAAAC,QAAAoB,KAAApD,KAAAoD,EAAApD,KAAA,qBAE7D,CAAC,MAAAD,GAAA,OAAAgC,QAAAO,OAAAvC,EAAA,GAUM,MAAMkC,EAA6B,SAAmBhB,GAAuB,IAAiB,SAAAwC,IAsBpG1C,EACEf,KAAI,SAAiB0D,GAA4B,IACjDnB,EAAoBmB,EAAmBzC,EAAcwB,GACrDrC,EAA8BuD,aAC7BD,EAAmBE,OACpB,MAAMC,EAAUC,SAASC,eAAe,wCACxC,GAAIF,EAAS,CACZA,EAAQG,MAAMC,gBAAkB,SACjC,CACA,OAAAlC,QAAAC,QAAO0B,EACR,CAAC,MAAA3D,GAAA,OAAAgC,QAAAO,OAAAvC,EAAA,IACAmE,MAAM,SAAUC,GAChBvF,EAAIwF,MAAM,kDAAmDD,EAC9D,EAAG,CAlCJ,IAAKpD,EAAqB,CACzBA,EAAsB/B,EAASqF,KAAK,CACnCC,GAAI,sBACJC,KAAM,iDACNC,WAAYpE,GAEd,CAEA,IAAIqC,EAAuC,MAAAgC,EAAA9E,EAAA,WAEvC,OAAAoC,QAAAC,QACmB7B,EAAoCc,EAAc,CACvEyD,SAAU5D,EAAU6D,YACpBC,eAAgB,MAChBC,YAAa,MACbC,aAAc,QACb9E,KAAA,SAAA+E,GALFtC,EAAYsC,CAKQ,EACrB,EAAC,WACAnG,EAAIwF,MAAM,0CACX,GAAC,OAAArC,QAAAC,QAAAyC,KAAAzE,KAAAyE,EAAAzE,KAAAyD,KAAAgB,GAgBF,CAAC,MAAA1E,GAAA,OAAAgC,QAAAO,OAAAvC,EAAA,GAQM,SAASwB,IACf,MAAMyD,EAAkB/F,EAAQgG,qBAAqB,+BACrD,OAAO,IAAI9F,EAAc,CACxB+F,UAAWF,EAAgBG,SAASC,IACpCC,OAAQL,GAEV,CAAC,IAAAM,EAAA,CAAAC,WAAA,MAAAD,EAAAtE,kBAAAsE,EAAArD,gCAAAqD,EAAA/D,4BAAA,OAAA+D,CAAA","ignoreList":[],"sourceRoot":""}},{"offset":{"line":17,"column":0},"map":{"version":3,"file":"CardGeneratorDialogController.js","names":["sap","ui","define","Log","merge","ODataUtils","MessageBox","MessageToast","Event","CoreElement","Fragment","Popup","sap_ui_core_library","JSONModel","jQuery","___helpers_Batch","___helpers_Formatter","___helpers_I18nHelper","___helpers_IntegrationCardHelper","___helpers_PropertyExpression","___helpers_Transpiler","___odata_ODataTypes","___pages_Application","___utils_CommonUtils","cardActionHandlers","freeStyleHandlers","toggleAdvancedSetting","toggleEvent","toggleButton","getSource","setEnabled","splitter","getElementById","controller","onCriticalityChange","criticalityChangeEvent","Promise","resolve","checkForNavigationProperty","then","updateCriticality","getParameter","onArrangementsChange","arrangementChangeEvent","updateArrangements","dialogModel","getDialogModel","groups","getProperty","setProperty","i","items","length","item","uom","value","split","slice","undefined","aPropsWithUoM","indexOf","name","push","onPropertyFormatterChangeFromAdvancedSettings","updateHeaderArrangements","load","advancedSettings","getPressed","lastContentArea","getContentAreas","removeContentArea","insertContentArea","setTimeout","transpileIntegrationCardToAdaptive","e","reject","event","isTextArrangement","selectedParameters","getParameters","selectedItem","model","navigationProperties","selectedNavigationalProperties","existingIndex","findIndex","navItem","selectedProperty","find","prop","selectedPropertyName","properties","selectedPropertyValues","data","_temp2","updateCardConfigurationData","textArrangementChanged","navigationalPropertiesForId","isNavigationForId","navigationKeyForId","navigationalPropertiesForDescription","isNavigationForDescription","navigationKeyForDescription","onPropertySelection","oEvent","rootComponent","entitySet","Application","getInstance","fetchDetails","control","selectedKey","getSelectedKey","newValue","currentValue","oModel","validateControl","updateSelectedNavigationProperty","selectedNavigationPropertiesContent","sPath","getBindingContext","getPath","group","getArrangements","unitOfMeasures","textArrangements","propertyValueFormatters","navigationProperty","navigationalProperties","setValueStateForAdvancedPanel","propertyLabel","getPropertyLabel","getModel","PropertyInfoType","Property","label","isNavigationEnabled","isEnabled","refresh","updateCardGroups","okPressed","hasError","validateHeader","oCard","mManifest","getManifest","enhanceManifestWithInsights","enhanceManifestWithConfigurationParameters","createAndStoreGeneratedi18nKeys","updateManifestWithSelectQueryParams","configuration","parameters","contextParameters","payload","floorplan","localPath","fileName","manifests","type","manifest","default","ajax","url","headers","JSON","stringify","success","show","getTranslatedText","error","jqXHR","textStatus","errorThrown","errorMessage","status","statusText","getCardGeneratorDialog","close","toggleOffAdvancedPanel","isHeader","_temp","onStateIndicatorSelection","getHeaderConfiguration","header","mainIndicator","state","getCriticality","number","selectedNavigationPropertyHeader","selectedValue","dataType","isDateType","checkForDateType","isNumberType","updateTrendForCardHeader","updateSideIndicatorsForHeader","updateCardHeader","selectedNavigationProperty","entitySetWithObjectContext","serviceUrl","oDataV4","$data","queryParameters","map","property","fetchDataAsync","createUrlParameters","result","addLabelsForProperties","ValueState","formatPropertyDropdownValues","getCurrentCardManifest","getPreviewItems","renderCardPreview","resolvePropertyPathFromExpression","extractValueWithoutBooleanExprBinding","hasBooleanBindingExpression","isBinding","context","MAX_GROUPS","MAX_GROUP_ITEMS","CardGeneratorDialogController","initialize","setDefaultCardPreview","cancelPressed","closeDialog","onAddClick","onGroupAddClick","onGroupDeleteClick","deleteGroup","onDeleteClick","updateContentNavigationSelection","onPropertyLabelChange","onTitleSelection","onSubTitleSelection","onGroupTitleChange","onDrop","onHeaderUOMSelection","updateHeaderNavigationSelection","onHeightChange","onWidthChange","onResetPressed","onItemsActionsButtonPressed","onPreviewTypeChange","onPropertyFormatting","onFormatTypeSelection","onActionAddClick","onAddedActionDelete","onAddedActionStyleChange","onAddedActionTitleChange","loadActions","_setDefaultCardPreview","_updateTrendForCardHeader","_updateSideIndicatorsForHeader","_setAdvancedFormattingOptionsEnablement","setAdvancedFormattingOptionsEnablement","_updateHeaderArrangements","_updateArrangements","_updateCriticality","_validateHeader","applyCriticality","applyUoMFormatting","onTrendDelete","loadAdvancedFormattingConfigurationFragment","disableOrEnableUOMAndTrend","handleCriticalityAction","onEntitySetPathChange","applyServiceDetails","onServiceChange","onContextPathChange","onBackButtonPress","handleFormatterUomAction","onBeforeDialogClosed","setCriticalitySourceProperty","propertyName","isCalcuationType","mainIndicatorCriticality","matchedCriticality","oCriticality","criticalityName","propertyKeyForId","criticality","activeCalculation","staticValues","deviationLow","deviationRangeLowValue","deviationHigh","deviationRangeHighValue","toleranceLow","toleranceRangeLowValue","toleranceHigh","toleranceRangeHighValue","sImprovementDirection","improvementDirection","oCriticalityConfigValues","None","Negative","Critical","Positive","sourceProperty","mainIndicatorProperty","unitsOfMeasure","selectedTrendOptions","selectedIndicatorOptions","getPropertyDataType","isFormatterApplied","some","formatterDetail","formatterApplied","filter","formatterName","isUOMApplied","arrangementDetail","isCriticalityApplied","indicatorCriticality","indicatorCriticalityName","isTrendApplied","trendDetail","downDifference","isIndicatorsApplied","indicatorDetail","targetUnit","trendOptions","indicatorsValue","referenceValue","upDifference","targetValue","deviationValue","deviationUnit","includes","navSelectedProperty","selectedNavProperties","propertiesSelected","fnGetHeaderConfig","key","navigationValue","setValueState","sapCardHeader","currentManifest","oManifest","sideIndicators","title","controlName","errorControls","resourceBundle","getResourceBundle","getKey","getText","controlErrorText","setValueStateText","Error","forEach","errorControl","index","getId","splice","subTitle","unitOfMeasurement","propVal","ele","propertyValue","labelWithValue","mainIndicatorStatusKeyInitial","mainIndicatorStatusKey","sourcePropertyToSet","updateSelectedNavigation","getPropertyAndSelectedValue","propertyType","selectProperty","typeSupported","isNaN","Number","isUoMEnabled","navProperty","NavigationProperty","oProperty","source","selectedNavigation","existingItem","navValues","propertyPath","sKey","getObject","comboBox","nextItemNumber","newItem","iItemsAdded","getValue","getValueState","validateIndicatorsValues","buttonId","targetInputId","setValueStateTextForControl","deviationInputId","targetUnitInputId","deviationUnitInputId","validateTrendValues","trendValues","referenceInputId","trendDownDifferenceInputId","trendUpDifferenceInputId","controlId","isSelectControl","elementControl","validationText","iLength","currentDefaultValue","groupLength","groupIndex","_itemActionsMenu","warningMessage","warning","actions","Action","DELETE","CANCEL","emphasizedAction","onClose","action","itemIndex","match","sValue","destroy","trend","selectedTrendOptionIndex","selectedTrendOption","newTrendValues","getTrendDirection","selectedIndicatorOptionIndex","selectedIndicatorOption","unit","indicatorsValueToAdd","mainIndicatorKey","informativeMessage","previewItems","propertyPaths","path","formattingOptions","itemName","navigationalProperty","isPropertyExists","valueState","Information","oDragged","oDropped","sInsertPosition","oDragPos","getParent","oDropPos","sDraggedPath","sDroppedPath","aDragItems","aDropItems","iDragPosition","indexOfItem","iDropPosition","oSelectedItem","setWidth","setHeight","setValue","relavantCriticality","relavantProperty","indicatorName","parse","hostCriticality","oSource","sourceItem","aUom","sSourceUoMProperty","aSourceUom","onAdvancedFormattingConfigOpen","navSelectedKey","_advancedFormattingOptionsPopover","id","oPopover","addDependent","oContext","setBindingContext","openBy","oConfigurationController","onPopoverClose","onPropertyFormatterChange","applyFormatting","applyFormatter","resetValueState","onDownDifferenceChange","this","onUpDifferenceChange","onReferenceValInputChange","onTargetValueChange","onDeviationValueChange","onTargetUnitChange","onDeviationUnitChange","applyIndicators","hasIndicatorsError","_advancedFormattingConfigurationPopover","applyTrendCalculation","hasTrendError","onDelete","sourceUoMProperty","iIndex","itemsBindingPath","relativeIndex","updatedPropertyValueFormatters","formatter","onIndicatorsDelete","selectedIndicatorValues","onDeleteFormatter","deleteFormatter","onDeleteCriticality","onDeleteButtonClicked","sourceCriticalityProperty","navProperites","isNavEnabled","navSelectedProperies","propertyExists","targetProperty","propertyKeyForDescription","proprtetyKeyFromSource","navAllProperties","navPropertiesValues","getNavValues","oData","bMatchingProperty","oUom","navProperties","propertyKeyFromSource","selectedTrendValues","oResourceBundle","mLabels","uomText","criticalityText","formatterText","indicatorsText","trendCalculatorText","setModel","sourcePropertyName","oController","onNavigationActionSelect","sId","propertyToBeSet","customData","getCustomData","customAction","custom","actionType","hasActions","isDestroyed","oMenu","open","Dock","BeginTop","BeginBottom","bind","navProp","sourceUom","selectedCardType","getSelectedItem","oAdaptiveCardContainer","oCustomSize","setVisible","subtitle","mainIndicatorValue","aUnitOfMeasures","aTextArrangements","aPropertyValueFormatters","groupItem","groupItemValue","content","dialog","getCustomHeader","getContentMiddle","setPressed","setSelectedKey","defaultIntegrationCard","adaptiveCardContainer","customIntegrationCard","previewHostsProperties","defaultPreviewOption","option","width","height","isDialogEdited","OK","sAction","preventDefault","__exports","__esModule"],"sources":["CardGeneratorDialogController.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nimport Log from \"sap/base/Log\";\nimport ResourceBundle from \"sap/base/i18n/ResourceBundle\";\nimport merge from \"sap/base/util/merge\";\nimport CompactFormatterSelection from \"sap/cards/ap/generator/app/controls/CompactFormatterSelection\";\nimport CriticalityEditor from \"sap/cards/ap/generator/app/controls/CriticalityEditor\";\nimport type { Model } from \"sap/cards/ap/generator/odata/ODataTypes\";\nimport * as ODataUtils from \"sap/cards/ap/generator/odata/ODataUtils\";\nimport type MenuBar from \"sap/m/Bar\";\nimport type ComboBox from \"sap/m/ComboBox\";\nimport type Dialog from \"sap/m/Dialog\";\nimport type Input from \"sap/m/Input\";\nimport MessageBox from \"sap/m/MessageBox\";\nimport MessageToast from \"sap/m/MessageToast\";\nimport type Popover from \"sap/m/Popover\";\nimport type ToggleButton from \"sap/m/ToggleButton\";\nimport Event from \"sap/ui/base/Event\";\nimport type Control from \"sap/ui/core/Control\";\nimport CoreElement from \"sap/ui/core/Element\";\nimport Fragment from \"sap/ui/core/Fragment\";\nimport Popup from \"sap/ui/core/Popup\";\nimport { ValueState } from \"sap/ui/core/library\";\nimport type Card from \"sap/ui/integration/widgets/Card\";\nimport type { CardManifest, ObjectContent } from \"sap/ui/integration/widgets/Card\";\nimport type Splitter from \"sap/ui/layout/Splitter\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\nimport type ResourceModel from \"sap/ui/model/resource/ResourceModel\";\nimport jQuery from \"sap/ui/thirdparty/jquery\";\nimport type { Host } from \"../config/PreviewOptions\";\nimport { QueryParameters, createUrlParameters, updateManifestWithSelectQueryParams } from \"../helpers/Batch\";\nimport type { SideIndicatorOptions, TrendOptions, TrendOrIndicatorOptions } from \"../helpers/CardGeneratorModel\";\nimport { formatPropertyDropdownValues, type FormatterConfigurationMap } from \"../helpers/Formatter\";\nimport { createAndStoreGeneratedi18nKeys } from \"../helpers/I18nHelper\";\nimport {\n\tenhanceManifestWithConfigurationParameters,\n\tenhanceManifestWithInsights,\n\tgetCurrentCardManifest,\n\tgetPreviewItems,\n\trenderCardPreview,\n\tupdateCardGroups\n} from \"../helpers/IntegrationCardHelper\";\nimport { getArrangements, resolvePropertyPathFromExpression } from \"../helpers/PropertyExpression\";\nimport { transpileIntegrationCardToAdaptive } from \"../helpers/Transpiler\";\nimport { PropertyInfo, PropertyInfoMap, PropertyInfoType } from \"../odata/ODataTypes\";\nimport { Application } from \"../pages/Application\";\nimport type { GroupItem, NavigationParameter, NavigationalData, ObjectCardGroups, Property } from \"../types/PropertyTypes\";\nimport {\n\tcheckForDateType,\n\textractValueWithoutBooleanExprBinding,\n\tgetCardGeneratorDialog,\n\tgetDialogModel,\n\thasBooleanBindingExpression,\n\tisBinding\n} from \"../utils/CommonUtils\";\nimport { ArrangementOptions } from \"./controls/ArrangementsEditor\";\nimport * as cardActionHandlers from \"./handlers/CardActions\";\nimport * as freeStyleHandlers from \"./handlers/FreeStyle\";\n\ntype UnitOfMeasures = {\n\tpropertyKeyForDescription: string;\n\tname: string;\n\tpropertyKeyForId: string;\n\tvalue: string;\n\tvalueState: ValueState;\n\tvalueStateText: string;\n\tnavigationValueState?: ValueState;\n\tnavigationValueStateText?: string;\n\tisNavigationForId?: boolean;\n\tnavigationKeyForId?: string;\n};\ntype ValueFormatter = {\n\tproperty: string;\n};\ntype Criticality = {\n\tcriticality: string;\n\tname: string;\n\tactiveCalculation: boolean;\n\tpropertyKeyForId: string;\n};\n\ntype EventParameters = {\n\tselectedItem: ArrangementOptions;\n\ttextArrangementChanged: boolean;\n};\n\nconst context: any = {};\nconst aPropsWithUoM: any = [];\nconst MAX_GROUPS = 5;\nconst MAX_GROUP_ITEMS = 5;\n\nexport const CardGeneratorDialogController = {\n\tinitialize: function () {\n\t\tsetDefaultCardPreview();\n\t},\n\tokPressed,\n\tcancelPressed: closeDialog,\n\tonAddClick,\n\tonGroupAddClick,\n\tonGroupDeleteClick,\n\tdeleteGroup,\n\tonDeleteClick,\n\tonPropertySelection,\n\tupdateContentNavigationSelection,\n\tonPropertyLabelChange,\n\tonTitleSelection,\n\tonSubTitleSelection,\n\tonGroupTitleChange,\n\tvalidateControl,\n\tonDrop,\n\tonHeaderUOMSelection,\n\tonStateIndicatorSelection,\n\tupdateHeaderNavigationSelection,\n\tonHeightChange,\n\tonWidthChange,\n\tonResetPressed,\n\tonItemsActionsButtonPressed,\n\tonPreviewTypeChange,\n\ttoggleAdvancedSetting,\n\tgetTranslatedText,\n\tonPropertyFormatting,\n\tonFormatTypeSelection,\n\tonActionAddClick: cardActionHandlers.onActionAddClick,\n\tonAddedActionDelete: cardActionHandlers.onAddedActionDelete,\n\tonAddedActionStyleChange: cardActionHandlers.onAddedActionStyleChange,\n\tonAddedActionTitleChange: cardActionHandlers.onAddedActionTitleChange,\n\tloadActions: cardActionHandlers.loadActions,\n\t/* Methods exposed for testing */\n\t_setDefaultCardPreview: setDefaultCardPreview,\n\t_updateTrendForCardHeader: updateTrendForCardHeader,\n\t_updateSideIndicatorsForHeader: updateSideIndicatorsForHeader,\n\t_setAdvancedFormattingOptionsEnablement: setAdvancedFormattingOptionsEnablement,\n\t_updateHeaderArrangements: updateHeaderArrangements,\n\t_updateArrangements: updateArrangements,\n\t_updateCriticality: updateCriticality,\n\t_validateHeader: validateHeader,\n\tapplyCriticality: applyCriticality,\n\tapplyUoMFormatting: applyUoMFormatting,\n\tonTrendDelete: onTrendDelete,\n\tloadAdvancedFormattingConfigurationFragment: loadAdvancedFormattingConfigurationFragment,\n\taddLabelsForProperties: addLabelsForProperties,\n\tcheckForNavigationProperty: checkForNavigationProperty,\n\tdisableOrEnableUOMAndTrend: disableOrEnableUOMAndTrend,\n\thandleCriticalityAction: handleCriticalityAction,\n\tonEntitySetPathChange: freeStyleHandlers.onEntitySetPathChange,\n\tapplyServiceDetails: freeStyleHandlers.applyServiceDetails,\n\tonServiceChange: freeStyleHandlers.onServiceChange,\n\tonContextPathChange: freeStyleHandlers.onContextPathChange,\n\tonBackButtonPress: freeStyleHandlers.onBackButtonPress,\n\thandleFormatterUomAction,\n\tonBeforeDialogClosed: onBeforeDialogClosed,\n\tsetCriticalitySourceProperty: setCriticalitySourceProperty\n};\nexport function getCriticality(propertyName: string, isCalcuationType?: boolean) {\n\tconst model = getDialogModel() as JSONModel;\n\tconst mainIndicatorCriticality = model?.getProperty(\"/configuration/mainIndicatorOptions/criticality\");\n\tif (hasBooleanBindingExpression(propertyName)) {\n\t\tpropertyName = extractValueWithoutBooleanExprBinding(propertyName);\n\t}\n\tconst matchedCriticality = mainIndicatorCriticality?.find(\n\t\t(oCriticality: { name: string; criticality: string; propertyKeyForId: string }) => {\n\t\t\tconst { name: criticalityName, propertyKeyForId } = oCriticality;\n\t\t\treturn (\n\t\t\t\tcriticalityName === propertyName ||\n\t\t\t\tpropertyName === `{${criticalityName}}` ||\n\t\t\t\tpropertyName === `{${criticalityName}/${propertyKeyForId}}`\n\t\t\t);\n\t\t}\n\t);\n\tif (matchedCriticality) {\n\t\tif (isBinding(matchedCriticality?.criticality)) {\n\t\t\treturn \"{= extension.formatters.formatCriticality($\" + matchedCriticality?.criticality + \", 'color') }\";\n\t\t}\n\t\tif (matchedCriticality?.activeCalculation || isCalcuationType) {\n\t\t\tconst staticValues = {\n\t\t\t\tdeviationLow: matchedCriticality?.deviationRangeLowValue,\n\t\t\t\tdeviationHigh: matchedCriticality?.deviationRangeHighValue,\n\t\t\t\ttoleranceLow: matchedCriticality?.toleranceRangeLowValue,\n\t\t\t\ttoleranceHigh: matchedCriticality?.toleranceRangeHighValue,\n\t\t\t\tsImprovementDirection: matchedCriticality?.improvementDirection,\n\t\t\t\toCriticalityConfigValues: { None: \"Neutral\", Negative: \"Error\", Critical: \"Critical\", Positive: \"Good\" }\n\t\t\t};\n\t\t\treturn \"{= extension.formatters.formatValueColor(${\" + matchedCriticality?.name + \"},\" + JSON.stringify(staticValues) + \") }\";\n\t\t}\n\t\treturn matchedCriticality?.criticality;\n\t}\n\treturn \"None\";\n}\n\n/**\n * This functions updates the enablement of the advanced formatting options based on the source property.\n * @param sourceProperty\n * @returns\n */\nfunction setAdvancedFormattingOptionsEnablement(sourceProperty: string) {\n\tconst oModel = getDialogModel() as JSONModel;\n\tconst mainIndicatorProperty = oModel.getProperty(\"/configuration/mainIndicatorStatusKey\");\n\toModel.setProperty(\"/configuration/trendOptions/sourceProperty\", mainIndicatorProperty);\n\toModel.setProperty(\"/configuration/indicatorsValue/sourceProperty\", mainIndicatorProperty);\n\tconst properties = oModel.getProperty(\"/configuration/properties\");\n\tconst unitsOfMeasure = oModel.getProperty(\"/configuration/advancedFormattingOptions/unitOfMeasures\") || [];\n\tconst propertyValueFormatters = oModel.getProperty(\"/configuration/advancedFormattingOptions/propertyValueFormatters\") || [];\n\tconst mainIndicatorCriticality = oModel.getProperty(\"/configuration/mainIndicatorOptions/criticality\") || [];\n\tconst selectedTrendOptions = oModel.getProperty(\"/configuration/selectedTrendOptions\") || [];\n\tconst selectedIndicatorOptions = oModel.getProperty(\"/configuration/selectedIndicatorOptions\") || [];\n\tconst dataType = getPropertyDataType(sourceProperty, properties, oModel);\n\tconst isDateType = checkForDateType(dataType);\n\tconst isNumberType = [\"Edm.Decimal\", \"Edm.Int16\", \"Edm.Int32\", \"Edm.Double\"].indexOf(dataType) > -1;\n\n\tlet isFormatterApplied = propertyValueFormatters.some(function (formatterDetail: ValueFormatter) {\n\t\treturn formatterDetail.property === sourceProperty || \"{\" + formatterDetail.property + \"}\" === sourceProperty;\n\t});\n\n\tconst formatterApplied = propertyValueFormatters.filter(function (formatterDetail: ValueFormatter) {\n\t\treturn formatterDetail.property === sourceProperty || \"{\" + formatterDetail.property + \"}\" === sourceProperty;\n\t})[0];\n\n\tif (formatterApplied?.formatterName === \"format.unit\" && typeof formatterApplied?.parameters[1].properties[0].value !== \"number\") {\n\t\tisFormatterApplied = false;\n\t}\n\n\tconst isUOMApplied = unitsOfMeasure.some(function (arrangementDetail: UnitOfMeasures) {\n\t\treturn arrangementDetail.name === sourceProperty;\n\t});\n\tconst isCriticalityApplied = mainIndicatorCriticality.some((indicatorCriticality: Criticality) => {\n\t\tconst { name: indicatorCriticalityName, propertyKeyForId } = indicatorCriticality;\n\t\treturn indicatorCriticalityName === sourceProperty || `${indicatorCriticalityName}/${propertyKeyForId}` === sourceProperty;\n\t});\n\tconst isTrendApplied = selectedTrendOptions.some(function (trendDetail: TrendOptions) {\n\t\treturn trendDetail.sourceProperty === sourceProperty && trendDetail.downDifference;\n\t});\n\tconst isIndicatorsApplied = selectedIndicatorOptions.some(function (indicatorDetail: SideIndicatorOptions) {\n\t\treturn indicatorDetail.sourceProperty === sourceProperty && indicatorDetail.targetUnit;\n\t});\n\n\toModel.setProperty(\"/configuration/advancedFormattingOptions/isFormatterApplied\", isFormatterApplied);\n\toModel.setProperty(\"/configuration/advancedFormattingOptions/isFormatterEnabled\", isDateType || isNumberType);\n\toModel.setProperty(\"/configuration/advancedFormattingOptions/isUOMApplied\", isUOMApplied);\n\toModel.setProperty(\"/configuration/advancedFormattingOptions/isCriticalityApplied\", isCriticalityApplied);\n\toModel.setProperty(\"/configuration/advancedFormattingOptions/isTrendApplied\", isTrendApplied);\n\toModel.setProperty(\"/configuration/advancedFormattingOptions/isIndicatorsApplied\", isIndicatorsApplied);\n\n\tconst trendOptions = oModel.getProperty(\"/configuration/trendOptions\") as TrendOptions;\n\tconst indicatorsValue = oModel.getProperty(\"/configuration/indicatorsValue\") as SideIndicatorOptions;\n\n\tif (trendOptions) {\n\t\tconst { referenceValue, downDifference, upDifference } = trendOptions;\n\t\tif (referenceValue && downDifference && upDifference) {\n\t\t\toModel.setProperty(\"/configuration/trendOptions/upDown\", true);\n\t\t}\n\t}\n\n\tif (indicatorsValue) {\n\t\tconst { targetValue, deviationValue, targetUnit, deviationUnit } = indicatorsValue;\n\t\tif (targetValue && deviationValue && targetUnit && deviationUnit) {\n\t\t\toModel.setProperty(\"/configuration/indicatorsValue/targetDeviation\", true);\n\t\t}\n\t}\n}\n\nfunction getPropertyDataType(sourceProperty: string, properties: Property[], model: JSONModel) {\n\tconst navigationProperty = model.getProperty(\"/configuration/navigationProperty\");\n\tif (sourceProperty.includes(\"/\") && navigationProperty) {\n\t\tconst [selectedProperty, navSelectedProperty] = sourceProperty.split(\"/\");\n\t\tconst selectedNavProperties = navigationProperty.find((prop: Property) => prop.name === selectedProperty);\n\t\tconst propertiesSelected = selectedNavProperties?.properties.find((prop: Property) => prop.name === navSelectedProperty);\n\t\treturn propertiesSelected?.type;\n\t}\n\treturn properties.find((property: Property) => property.name === sourceProperty)?.type || \"\";\n}\n\n/**\n * Updates \"sap.card.header\" property of integration card manifest and triggers rendering of the card preview.\n *\n * @param oEvent\n * @param key\n * @param fnGetHeaderConfig\n */\nfunction updateCardHeader(oEvent: Event, fnGetHeaderConfig: Function, key?: string) {\n\tconst control = oEvent.getSource() as ComboBox;\n\tlet selectedKey = control.getSelectedKey() || \"\";\n\tconst newValue = (oEvent.getParameter as (param: string) => string)(\"newValue\");\n\tlet currentValue = selectedKey !== \"\" ? `{${selectedKey}}` : newValue;\n\tconst oModel = getDialogModel() as JSONModel;\n\n\tif (key === \"navSelection\") {\n\t\tconst navigationValue = oModel.getProperty(\"/configuration/navigationValue\");\n\t\tcurrentValue = navigationValue ? `{${navigationValue}}` : \"\";\n\t}\n\n\tif (!selectedKey && key === \"mainIndicator\") {\n\t\tcurrentValue = \"\";\n\t}\n\n\tif (selectedKey !== \"\" || currentValue !== \"\") {\n\t\tcontrol.setValueState(ValueState.None);\n\t}\n\n\tconst sapCardHeader = fnGetHeaderConfig(currentValue);\n\tconst currentManifest = getCurrentCardManifest();\n\tconst oManifest = merge(currentManifest, sapCardHeader) as CardManifest;\n\n\tif (currentValue === \"\" && key === \"mainIndicator\") {\n\t\tdelete oManifest[\"sap.card\"].header.mainIndicator;\n\t\tdelete oManifest[\"sap.card\"].header.sideIndicators;\n\t}\n\n\toModel.setProperty(\"/configuration/advancedFormattingOptions/sourceProperty\", selectedKey);\n\tif (key === \"navSelection\") {\n\t\tselectedKey = oModel.getProperty(\"/configuration/mainIndicatorStatusKey\");\n\t}\n\tsetValueStateForAdvancedPanel(selectedKey);\n\trenderCardPreview(oManifest, getDialogModel() as JSONModel);\n\ttranspileIntegrationCardToAdaptive(getDialogModel() as JSONModel);\n}\n\n/**\n * Handles the change event for card title selection.\n * @param oEvent\n */\nfunction onTitleSelection(oEvent: Event) {\n\tconst getHeaderConfiguration = (value: string) => {\n\t\treturn {\n\t\t\t\"sap.card\": {\n\t\t\t\theader: {\n\t\t\t\t\ttitle: value\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t};\n\tvalidateControl(oEvent, \"title\");\n\tupdateCardHeader(oEvent, getHeaderConfiguration);\n}\n/**\n * Validates the control(control's selected key) based on the provided event and control name.\n * @param {Event} oEvent The event triggered by the control.\n * @param {string} [controlName] The name of the control being validated.\n */\nfunction validateControl(oEvent: Event, controlName?: string) {\n\tconst control: ComboBox = oEvent.getSource();\n\tconst selectedKey = control.getSelectedKey();\n\tconst value: string = (oEvent.getParameter as (param: string) => string)(\"newValue\");\n\n\tconst oModel = getDialogModel() as JSONModel;\n\tconst errorControls = oModel.getProperty(\"/configuration/errorControls\");\n\tconst resourceBundle = (getDialogModel(\"i18n\") as ResourceModel)?.getResourceBundle() as ResourceBundle;\n\n\t/**\n\t * Gets the key for the given control name.\n\t * @param {string} name The name of the control.\n\t * @returns {string} The key associated with the control name.\n\t */\n\tconst getKey = (name: string): string => {\n\t\tswitch (name) {\n\t\t\tcase \"title\":\n\t\t\t\treturn resourceBundle?.getText(\"GENERATOR_CARD_TITLE\") as string;\n\t\t\tcase \"stateIndicator\":\n\t\t\t\treturn resourceBundle?.getText(\"GENERATOR_MAIN_INDICATOR\") as string;\n\t\t\tdefault:\n\t\t\t\treturn resourceBundle?.getText(\"GENERATOR_GROUP_PROPERTY\") as string;\n\t\t}\n\t};\n\n\tconst controlErrorText = resourceBundle?.getText(\"GENERIC_ERR_MSG\", [getKey(controlName ?? \"\")]);\n\n\tif (!selectedKey && !value && controlName === \"title\") {\n\t\terrorControls?.push(control);\n\t\tcontrol.setValueStateText(controlErrorText);\n\t} else if (!selectedKey && value) {\n\t\terrorControls?.push(control);\n\t\tcontrol.setValueState(ValueState.Error);\n\t\tcontrol.setValueStateText(controlErrorText);\n\t} else {\n\t\terrorControls?.forEach((errorControl: ComboBox, index: number) => {\n\t\t\tif (control.getId() === errorControl.getId()) {\n\t\t\t\terrorControls.splice(index, 1);\n\t\t\t}\n\t\t});\n\t\tcontrol.setValueState(ValueState.None);\n\t}\n}\n\n/**\n * Handles the change event for card subtitle selection.\n * @param oEvent\n */\nfunction onSubTitleSelection(oEvent: Event) {\n\tconst getHeaderConfiguration = (value: string) => {\n\t\tconst oModel = getDialogModel() as JSONModel;\n\t\treturn {\n\t\t\t\"sap.card\": {\n\t\t\t\theader: {\n\t\t\t\t\tsubTitle: getArrangements(value, {\n\t\t\t\t\t\tunitOfMeasures: oModel.getProperty(\"/configuration/advancedFormattingOptions/unitOfMeasures\"),\n\t\t\t\t\t\ttextArrangements: oModel.getProperty(\"/configuration/advancedFormattingOptions/textArrangements\"),\n\t\t\t\t\t\tpropertyValueFormatters: oModel.getProperty(\"/configuration/advancedFormattingOptions/propertyValueFormatters\")\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t};\n\tupdateCardHeader(oEvent, getHeaderConfiguration);\n}\n\n/**\n * Handles the change event for card header UOM selection.\n * @param oEvent\n */\nfunction onHeaderUOMSelection(oEvent: Event) {\n\tconst getHeaderConfiguration = (value: string) => {\n\t\tconst oModel = getDialogModel() as JSONModel;\n\t\treturn {\n\t\t\t\"sap.card\": {\n\t\t\t\theader: {\n\t\t\t\t\tunitOfMeasurement: getArrangements(value, {\n\t\t\t\t\t\tunitOfMeasures: oModel.getProperty(\"/configuration/advancedFormattingOptions/unitOfMeasures\"),\n\t\t\t\t\t\ttextArrangements: oModel.getProperty(\"/configuration/advancedFormattingOptions/textArrangements\"),\n\t\t\t\t\t\tpropertyValueFormatters: oModel.getProperty(\"/configuration/advancedFormattingOptions/propertyValueFormatters\")\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t};\n\n\tupdateCardHeader(oEvent, getHeaderConfiguration);\n}\nfunction addLabelsForProperties(selectedNavigationProperty: NavigationalData, data: Record<string, unknown>) {\n\tif (\n\t\tselectedNavigationProperty.name &&\n\t\tdata[selectedNavigationProperty.name] !== undefined &&\n\t\tdata[selectedNavigationProperty.name] !== null\n\t) {\n\t\tconst propVal = selectedNavigationProperty?.value as unknown as PropertyInfoMap;\n\t\tpropVal?.forEach((ele: PropertyInfo) => {\n\t\t\tconst name = data[selectedNavigationProperty.name] as Record<string, unknown>;\n\t\t\tif (name[ele.name] !== undefined && name[ele.name] !== null) {\n\t\t\t\tconst propertyValue = name[ele.name] as string;\n\t\t\t\tconst value = formatPropertyDropdownValues(ele, propertyValue);\n\t\t\t\tele.labelWithValue = value;\n\t\t\t} else {\n\t\t\t\tele.labelWithValue = `${ele.label} (<empty>)`;\n\t\t\t}\n\t\t});\n\t} else {\n\t\tselectedNavigationProperty.value = [];\n\t}\n}\n\nasync function updateCardConfigurationData(selectedProperty: string, selectedNavigationProperty: NavigationalData) {\n\tconst { entitySetWithObjectContext } = Application.getInstance().fetchDetails();\n\tconst oModel = getDialogModel() as JSONModel;\n\tconst { serviceUrl, oDataV4, $data } = oModel.getProperty(\"/configuration\");\n\tconst queryParameters: QueryParameters = {\n\t\tproperties: [],\n\t\tnavigationProperties: [\n\t\t\t{\n\t\t\t\tname: selectedProperty,\n\t\t\t\tproperties: selectedNavigationProperty.value.map((property) => property.name) || []\n\t\t\t}\n\t\t]\n\t};\n\tconst result = await ODataUtils.fetchDataAsync(serviceUrl, entitySetWithObjectContext, oDataV4, createUrlParameters(queryParameters));\n\taddLabelsForProperties(selectedNavigationProperty, result);\n\t$data[selectedProperty] = result[selectedProperty];\n\toModel.setProperty(\"/configuration/$data\", $data);\n}\n\nfunction updateHeaderNavigationSelection(oEvent: Event) {\n\tconst oModel = getDialogModel() as JSONModel;\n\tconst getHeaderConfiguration = (value: string) => ({\n\t\t\"sap.card\": {\n\t\t\theader: {\n\t\t\t\tmainIndicator: {\n\t\t\t\t\tstate: getCriticality(value),\n\t\t\t\t\tnumber: getArrangements(value, {\n\t\t\t\t\t\tunitOfMeasures: oModel.getProperty(\"/configuration/advancedFormattingOptions/unitOfMeasures\"),\n\t\t\t\t\t\ttextArrangements: oModel.getProperty(\"/configuration/advancedFormattingOptions/textArrangements\"),\n\t\t\t\t\t\tpropertyValueFormatters: oModel.getProperty(\"/configuration/advancedFormattingOptions/propertyValueFormatters\")\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\tconst control = oEvent.getSource() as ComboBox;\n\tconst selectedKey = control.getSelectedKey();\n\tconst mainIndicatorStatusKeyInitial = oModel.getProperty(\"/configuration/mainIndicatorStatusKeyInitial\");\n\tconst mainIndicatorStatusKey = oModel.getProperty(\"/configuration/mainIndicatorStatusKey\");\n\tconst sourcePropertyToSet = mainIndicatorStatusKeyInitial ?? mainIndicatorStatusKey;\n\n\tif (!mainIndicatorStatusKeyInitial) {\n\t\toModel.setProperty(\"/configuration/mainIndicatorStatusKeyInitial\", sourcePropertyToSet);\n\t} else {\n\t\toModel.setProperty(\"/configuration/mainIndicatorStatusKey\", sourcePropertyToSet);\n\t}\n\tconst sourceProperty = oModel.getProperty(\"/configuration/mainIndicatorStatusKey\");\n\tupdateSelectedNavigation(selectedKey, sourceProperty, oModel, \"header\");\n\toModel.setProperty(\"/configuration/navigationValue\", `${sourcePropertyToSet}/${selectedKey}`);\n\toModel.setProperty(\"/configuration/mainIndicatorNavigationSelectedKey\", selectedKey);\n\toModel.setProperty(\"/configuration/mainIndicatorStatusKey\", `${sourceProperty}/${selectedKey}`);\n\tupdateCardHeader(oEvent, getHeaderConfiguration, \"navSelection\");\n}\n\n/**\n * Handles the change event for card KPI value selection.\n * @param oEvent\n */\nasync function onStateIndicatorSelection(oEvent: Event) {\n\tconst getHeaderConfiguration = (value: string) => {\n\t\tconst oModel = getDialogModel() as JSONModel;\n\t\treturn {\n\t\t\t\"sap.card\": {\n\t\t\t\theader: {\n\t\t\t\t\tmainIndicator: {\n\t\t\t\t\t\tstate: getCriticality(value),\n\t\t\t\t\t\tnumber: getArrangements(value, {\n\t\t\t\t\t\t\tunitOfMeasures: oModel.getProperty(\"/configuration/advancedFormattingOptions/unitOfMeasures\"),\n\t\t\t\t\t\t\ttextArrangements: oModel.getProperty(\"/configuration/advancedFormattingOptions/textArrangements\"),\n\t\t\t\t\t\t\tpropertyValueFormatters: oModel.getProperty(\"/configuration/advancedFormattingOptions/propertyValueFormatters\")\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t};\n\tconst oModel = getDialogModel() as JSONModel;\n\tconst control = oEvent.getSource() as ComboBox;\n\tconst selectedKey = control.getSelectedKey();\n\tawait updateSelectedNavigationProperty(selectedKey, true);\n\tconst selectedNavigationPropertyHeader = oModel.getProperty(\"/configuration/selectedNavigationPropertyHeader\");\n\tconst selectedValue: string = (oEvent.getParameter as (param: string) => string)(\"newValue\");\n\tvalidateControl(oEvent, \"stateIndicator\");\n\tconst currentValue = selectedKey !== \"\" ? `{${selectedKey}}` : selectedValue;\n\toModel.setProperty(\"/configuration/mainIndicatorNavigationSelectedValue\", \"\");\n\toModel.setProperty(\"/configuration/mainIndicatorStatusKeyInitial\", selectedValue);\n\toModel.setProperty(\"/configuration/mainIndicatorNavigationSelectedKey\", \"\");\n\n\tconst properties = oModel.getProperty(\"/configuration/properties\");\n\tconst dataType = properties.find((prop: Property) => prop.name === selectedKey)?.type || \"\";\n\tconst isDateType = checkForDateType(dataType);\n\tconst isNumberType = [\"Edm.Decimal\", \"Edm.Int16\", \"Edm.Int32\", \"Edm.Double\"].indexOf(dataType) > -1;\n\toModel.setProperty(\"/configuration/mainIndicatorStatusKey\", selectedKey);\n\toModel.setProperty(\"/configuration/advancedFormattingOptions/isFormatterEnabled\", isDateType || isNumberType);\n\toModel.setProperty(\"/configuration/advancedFormattingOptions/textArrangementSourceProperty\", currentValue);\n\toModel.setProperty(\"/configuration/advancedFormattingOptions/textArrangementSelectedKey\", selectedKey);\n\n\tif (oModel.getProperty(\"/configuration/trendOptions/sourceProperty\") !== selectedKey) {\n\t\toModel.setProperty(\"/configuration/trendOptions\", {});\n\t\toModel.setProperty(\"/configuration/indicatorsValue\", {});\n\t}\n\n\toModel.setProperty(\"/configuration/trendOptions/sourceProperty\", selectedKey);\n\toModel.setProperty(\"/configuration/indicatorsValue/sourceProperty\", selectedKey);\n\n\tsetValueStateForAdvancedPanel(selectedKey);\n\tupdateTrendForCardHeader();\n\tupdateSideIndicatorsForHeader();\n\toModel.setProperty(\"/configuration/navigationValue\", \"\");\n\tif (!selectedNavigationPropertyHeader?.value.length) {\n\t\tupdateCardHeader(oEvent, getHeaderConfiguration, \"mainIndicator\");\n\t} else {\n\t\tupdateCardHeader(oEvent, getHeaderConfiguration, \"navSelection\");\n\t}\n}\n\n/**\n * Retrieves the property type and selected value from the given model based on the selected property.\n *\n * @param {JSONModel} model - The JSON model containing configuration and data.\n * @param {string} selectedProperty - The property path to retrieve the type and value for.\n *                                     It can be a simple property or a navigation property (e.g., \"propertyName\" or \"navigationProperty/propertyName\").\n * @returns {{ propertyType: string | undefined, selectedValue: string }} - An object containing:\n *   - `propertyType`: The type of the selected property (if found).\n *   - `selectedValue`: The value of the selected property (if found).\n */\nfunction getPropertyAndSelectedValue(model: JSONModel, selectedProperty: string) {\n\tlet propertyType;\n\tlet selectedValue;\n\tconst navigationProperty = model.getProperty(\"/configuration/navigationProperty\");\n\tconst [selectProperty, navSelectedProperty] = selectedProperty.split(\"/\");\n\n\tif (navSelectedProperty && navigationProperty) {\n\t\tconst selectedNavProperties = navigationProperty.find((prop: Property) => prop.name === selectProperty);\n\t\tconst propertiesSelected = selectedNavProperties?.properties.find((prop: Property) => prop.name === navSelectedProperty);\n\t\tpropertyType = propertiesSelected?.type;\n\t\tselectedValue = model.getProperty(\"/configuration/$data\")[selectProperty][navSelectedProperty];\n\t} else {\n\t\tpropertyType = model.getProperty(\"/configuration/properties\").find((prop: Property) => prop.name === selectedProperty)?.type;\n\t\tselectedValue = model.getProperty(\"/configuration/$data\")[selectedProperty];\n\t}\n\n\treturn { propertyType, selectedValue };\n}\n\n/**\n * Disables or enables the apply unit of measure based on the selected property.\n * @param {JSONModel} model - The JSON model containing the configuration.\n * @param {string} selectedProperty - The name of the selected property.\n */\nfunction disableOrEnableUOMAndTrend(model: JSONModel, selectedProperty: string) {\n\tlet typeSupported = true;\n\tconst { propertyType, selectedValue } = getPropertyAndSelectedValue(model, selectedProperty);\n\tif (propertyType === \"Edm.String\") {\n\t\ttypeSupported = !isNaN(Number(selectedValue));\n\t}\n\tconst isDateType = checkForDateType(propertyType);\n\tconst isUoMEnabled = !(propertyType === \"Edm.Boolean\" || propertyType === \"Edm.Guid\" || isDateType) && typeSupported;\n\tconst isNumberType = [\"Edm.Decimal\", \"Edm.Int16\", \"Edm.Int32\", \"Edm.Double\"].indexOf(propertyType) > -1;\n\tmodel.setProperty(\"/configuration/advancedFormattingOptions/isUoMEnabled\", isUoMEnabled);\n\tmodel.setProperty(\"/configuration/advancedFormattingOptions/isTrendEnabled\", isNumberType);\n}\n\nfunction updateContentNavigationSelection(oEvent: Event) {\n\tconst { rootComponent, entitySet } = Application.getInstance().fetchDetails();\n\tconst control: ComboBox = oEvent.getSource();\n\tlet selectedKey = control.getSelectedKey() || \"\";\n\tconst oModel = getDialogModel() as JSONModel;\n\tconst sPath = control?.getBindingContext()?.getPath() as string;\n\tconst group: GroupItem = oModel.getProperty(sPath);\n\tconst currentValue = `{${group.name}/${selectedKey}}`;\n\tgroup.value =\n\t\tselectedKey &&\n\t\tgetArrangements(currentValue, {\n\t\t\tunitOfMeasures: oModel.getProperty(\"/configuration/advancedFormattingOptions/unitOfMeasures\"),\n\t\t\ttextArrangements: oModel.getProperty(\"/configuration/advancedFormattingOptions/textArrangements\"),\n\t\t\tpropertyValueFormatters: oModel.getProperty(\"/configuration/advancedFormattingOptions/propertyValueFormatters\")\n\t\t});\n\tupdateSelectedNavigation(selectedKey, group.name, oModel, \"content\");\n\n\tconst navProperty = ODataUtils.getPropertyLabel(\n\t\trootComponent.getModel() as Model,\n\t\tentitySet,\n\t\tgroup.name,\n\t\tPropertyInfoType.NavigationProperty\n\t) as NavigationParameter;\n\tconst property = navProperty?.properties?.find((oProperty) => oProperty.name === selectedKey);\n\tconst propertyLabel = property ? property.label : \"\";\n\tgroup.label = propertyLabel ? propertyLabel : \"\";\n\n\toModel.refresh();\n\tupdateCardGroups(oModel);\n\tselectedKey = `${group.name}/${selectedKey}`;\n\tsetValueStateForAdvancedPanel(selectedKey);\n\ttranspileIntegrationCardToAdaptive(getDialogModel() as JSONModel);\n}\n\nfunction updateSelectedNavigation(selectedKey: string, sourceProperty: string, oModel: JSONModel, source: string) {\n\tconst selectedNavigation: NavigationParameter[] =\n\t\tsource === \"header\"\n\t\t\t? oModel.getProperty(\"/configuration/selectedHeaderNavigation\")\n\t\t\t: oModel.getProperty(\"/configuration/selectedContentNavigation\");\n\tconst existingIndex = selectedNavigation.findIndex((navItem) => navItem.name === sourceProperty);\n\n\tif (existingIndex !== -1) {\n\t\tconst existingItem = selectedNavigation[existingIndex];\n\t\tconst navValues = existingItem?.value?.includes(selectedKey) ? existingItem.value : [...existingItem.value, selectedKey];\n\t\tselectedNavigation[existingIndex] = { ...existingItem, value: navValues };\n\t} else {\n\t\tconst name = sourceProperty;\n\t\tselectedNavigation.push({ name, value: [selectedKey] });\n\t}\n\n\tconst propertyPath = source === \"header\" ? \"/configuration/selectedHeaderNavigation\" : \"/configuration/selectedContentNavigation\";\n\toModel.setProperty(propertyPath, selectedNavigation);\n}\nasync function updateSelectedNavigationProperty(selectedKey: string, isHeader: boolean) {\n\tconst oModel = getDialogModel() as JSONModel;\n\tconst navigationProperty: NavigationParameter[] = oModel.getProperty(\"/configuration/navigationProperty\") || [];\n\tconst selectedNavigationalProperties: NavigationalData[] = oModel.getProperty(\"/configuration/selectedNavigationalProperties\") || [];\n\tconst existingIndex = selectedNavigationalProperties.findIndex((navItem) => navItem.name === selectedKey);\n\n\tconst selectedProperty = navigationProperty.find((prop) => prop.name === selectedKey);\n\tconst selectedPropertyName = selectedProperty?.name || \"\";\n\tconst selectedPropertyValues = selectedProperty?.properties || [];\n\n\tconst data: NavigationalData = {\n\t\tname: selectedPropertyName,\n\t\tvalue: selectedPropertyValues\n\t};\n\n\tif (existingIndex === -1 && selectedProperty) {\n\t\tselectedNavigationalProperties.push(data);\n\t}\n\toModel.setProperty(\"/configuration/selectedNavigationalProperties\", selectedNavigationalProperties);\n\tif (isHeader) {\n\t\toModel.setProperty(\"/configuration/selectedNavigationPropertyHeader\", data);\n\t} else {\n\t\toModel.setProperty(\"/configuration/selectedNavigationPropertiesContent\", data);\n\t}\n\n\tif (selectedProperty) {\n\t\tawait updateCardConfigurationData(selectedProperty.name, data);\n\t}\n}\n\nfunction getTranslatedText(sKey: string) {\n\treturn getDialogModel(\"i18n\").getObject(sKey);\n}\n\nfunction onAddClick(oEvent: Event) {\n\tconst oModel = getDialogModel() as JSONModel;\n\tconst comboBox: ComboBox = oEvent.getSource();\n\tconst sPath = comboBox.getBindingContext()?.getPath();\n\n\tif (sPath) {\n\t\tconst group = oModel.getProperty(sPath);\n\t\tif (!group.items) {\n\t\t\tgroup.items = [];\n\t\t}\n\t\tconst nextItemNumber = oModel.getProperty(sPath).items.length;\n\t\tconst newItem = {\n\t\t\tlabel: null,\n\t\t\tvalue: `{/items/${nextItemNumber}}`,\n\t\t\tisEnabled: false,\n\t\t\tisNavigationEnabled: false,\n\t\t\tnavigationalProperties: []\n\t\t};\n\t\toModel.getProperty(sPath).items.push(newItem);\n\t\tconst iItemsAdded = oModel.getProperty(sPath).items.length;\n\t\toModel.setProperty(sPath + \"/enableAddMoreGroupItems\", true);\n\t\tif (iItemsAdded === MAX_GROUP_ITEMS) {\n\t\t\toModel.setProperty(sPath + \"/enableAddMoreGroupItems\", false);\n\t\t}\n\t\toModel.setProperty(\"/configuration/isEdited\", true);\n\t\toModel.refresh();\n\t}\n}\n\nasync function okPressed() {\n\tconst { rootComponent, entitySet } = Application.getInstance().fetchDetails();\n\n\tconst hasError = validateHeader();\n\tif (hasError) {\n\t\treturn;\n\t}\n\n\tconst oCard = CoreElement.getElementById(\"cardGeneratorDialog--cardPreview\") as Card;\n\tconst mManifest = oCard.getManifest() as CardManifest;\n\n\tawait enhanceManifestWithInsights(mManifest, rootComponent);\n\tenhanceManifestWithConfigurationParameters(mManifest, getDialogModel() as JSONModel);\n\tcreateAndStoreGeneratedi18nKeys(mManifest);\n\tupdateManifestWithSelectQueryParams(mManifest);\n\n\tdelete mManifest[\"sap.card\"].configuration?.parameters?.contextParameters;\n\tconst payload = {\n\t\tfloorplan: \"ObjectPage\",\n\t\tlocalPath: `cards/op/${entitySet}`,\n\t\tfileName: \"manifest.json\",\n\t\tmanifests: [\n\t\t\t{\n\t\t\t\ttype: \"integration\",\n\t\t\t\tmanifest: mManifest,\n\t\t\t\tdefault: true,\n\t\t\t\tentitySet: entitySet\n\t\t\t}\n\t\t]\n\t};\n\n\tjQuery.ajax({\n\t\ttype: \"POST\",\n\t\turl: \"/cards/store\",\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\"\n\t\t},\n\t\tdata: JSON.stringify(payload),\n\t\tsuccess: function () {\n\t\t\tMessageToast.show(getTranslatedText(\"CARD_SAVE_SUCCESS_MESSAGE\"));\n\t\t},\n\t\terror: function (jqXHR, textStatus, errorThrown) {\n\t\t\tconst errorMessage = `Unable to save the card: ${textStatus} - ${errorThrown} (Status: ${jqXHR.status} - ${jqXHR.statusText})`;\n\t\t\tLog.error(errorMessage);\n\t\t\tMessageBox.error(getTranslatedText(\"CARD_SAVE_ERROR_MESSAGE\"));\n\t\t}\n\t});\n\t(getDialogModel() as JSONModel).setProperty(\"/configuration/isEdited\", false);\n\t(getCardGeneratorDialog() as Dialog)?.close();\n\ttoggleOffAdvancedPanel();\n}\n\nfunction validateHeader() {\n\tlet hasError = false;\n\tconst oModel = getDialogModel() as JSONModel;\n\tconst errorControls = oModel.getProperty(\"/configuration/errorControls\");\n\terrorControls?.forEach((ele: ComboBox) => {\n\t\tif (!ele.getValue() || ele.getValueState() == \"Error\") {\n\t\t\tele.setValueState(ValueState.Error);\n\t\t\thasError = true;\n\t\t}\n\t});\n\treturn hasError;\n}\n\nfunction validateIndicatorsValues(buttonId: string) {\n\tconst oModel = getDialogModel() as JSONModel;\n\tconst indicatorsValue = oModel.getProperty(\"/configuration/indicatorsValue\");\n\tlet hasError = false;\n\tconst { targetValue, deviationValue, targetUnit, deviationUnit } = indicatorsValue;\n\n\tif (!targetValue) {\n\t\toModel.setProperty(\"/configuration/indicatorsValue/targetValueState\", \"Error\");\n\t\tconst targetInputId = buttonId + \"--targetInputValue\";\n\t\tsetValueStateTextForControl(targetInputId, getTranslatedText(\"TARGET_VALUE_ERR_MSG\"));\n\t}\n\tif (!deviationValue) {\n\t\toModel.setProperty(\"/configuration/indicatorsValue/deviationValueState\", \"Error\");\n\t\tconst deviationInputId = buttonId + \"--deviationInputValue\";\n\t\tsetValueStateTextForControl(deviationInputId, getTranslatedText(\"DEVIATION_VALUE_ERR_MSG\"));\n\t}\n\tif (!targetUnit) {\n\t\toModel.setProperty(\"/configuration/indicatorsValue/targetUnitValueState\", \"Error\");\n\t\tconst targetUnitInputId = buttonId + \"--targetUnitInput\";\n\t\tsetValueStateTextForControl(targetUnitInputId, getTranslatedText(\"TARGET_UNIT_ERR_MSG\"), true);\n\t}\n\tif (!deviationUnit) {\n\t\toModel.setProperty(\"/configuration/indicatorsValue/deviationUnitValueState\", \"Error\");\n\t\tconst deviationUnitInputId = buttonId + \"--deviationUnitInput\";\n\t\tsetValueStateTextForControl(deviationUnitInputId, getTranslatedText(\"DEVIATION_UNIT_ERR_MSG\"), true);\n\t}\n\tif (!targetValue || !deviationValue || !targetUnit || !deviationUnit) {\n\t\thasError = true;\n\t}\n\treturn hasError;\n}\n\nfunction validateTrendValues(buttonId: string) {\n\tconst oModel = getDialogModel() as JSONModel;\n\tconst trendValues = oModel.getProperty(\"/configuration/trendOptions\");\n\tlet hasError = false;\n\tconst { referenceValue, downDifference, upDifference } = trendValues;\n\n\tif (!referenceValue) {\n\t\toModel.setProperty(\"/configuration/trendOptions/referenceValueState\", \"Error\");\n\t\tconst referenceInputId = buttonId + \"--trendReferenceValueInput\";\n\t\tsetValueStateTextForControl(referenceInputId, getTranslatedText(\"REF_ERR_MSG\"));\n\t}\n\tif (!downDifference) {\n\t\toModel.setProperty(\"/configuration/trendOptions/downDifferenceValueState\", \"Error\");\n\t\tconst trendDownDifferenceInputId = buttonId + \"--trendDownDifferenceInput\";\n\t\tsetValueStateTextForControl(trendDownDifferenceInputId, getTranslatedText(\"LOW_RANGE_ERR_MSG\"));\n\t}\n\tif (!upDifference) {\n\t\toModel.setProperty(\"/configuration/trendOptions/upDifferenceValueState\", \"Error\");\n\t\tconst trendUpDifferenceInputId = buttonId + \"--trendUpDifferenceInput\";\n\t\tsetValueStateTextForControl(trendUpDifferenceInputId, getTranslatedText(\"HIGH_RANGE_ERR_MSG\"));\n\t}\n\tif (!referenceValue || !downDifference || !upDifference) {\n\t\thasError = true;\n\t}\n\treturn hasError;\n}\n\nfunction setValueStateTextForControl(controlId: string, errorMessage: string, isSelectControl?: boolean) {\n\tconst elementControl = CoreElement?.getElementById(controlId) as ComboBox;\n\telementControl.key = errorMessage;\n\tconst validateControl = isSelectControl\n\t\t? !elementControl?.getSelectedKey() || elementControl.getValueState() == \"Error\"\n\t\t: !elementControl?.getValue() || elementControl.getValueState() == \"Error\";\n\tif (validateControl) {\n\t\tconst resourceBundle = (getDialogModel(\"i18n\") as ResourceModel)?.getResourceBundle() as ResourceBundle;\n\t\tconst validationText = resourceBundle?.getText(\"GENERIC_ERR_MSG\", [elementControl?.key]);\n\t\telementControl?.setValueStateText(validationText);\n\t}\n}\n\nfunction onGroupAddClick(oEvent: any) {\n\tconst oModel = getDialogModel() as JSONModel;\n\tconst iLength = oModel.getProperty(\"/configuration/groups\").length;\n\tconst currentDefaultValue = ((getDialogModel(\"i18n\") as ResourceModel)?.getResourceBundle() as ResourceBundle)?.getText(\n\t\t\"GENERATOR_DEFAULT_GROUP_NAME\",\n\t\t[iLength + 1]\n\t);\n\toModel.getProperty(\"/configuration/groups\").push({\n\t\ttitle: currentDefaultValue,\n\t\titems: [\n\t\t\t{\n\t\t\t\tlabel: null,\n\t\t\t\tvalue: \"{/items/0}\",\n\t\t\t\tisEnabled: false,\n\t\t\t\tisNavigationEnabled: false,\n\t\t\t\tnavigationalProperties: []\n\t\t\t}\n\t\t],\n\t\tnewItem: {\n\t\t\tlabel: null,\n\t\t\tvalue: null,\n\t\t\tisEnabled: false,\n\t\t\tisNavigationEnabled: false,\n\t\t\tnavigationalProperties: []\n\t\t}\n\t});\n\tconst groupLength = oModel.getProperty(\"/configuration/groups\").length;\n\tif (groupLength === MAX_GROUPS) {\n\t\toModel.setProperty(\"/configuration/groupLimitReached\", true);\n\t}\n\toModel.setProperty(\"/configuration/isEdited\", true);\n\toModel.refresh();\n\tupdateCardGroups(oModel);\n\ttranspileIntegrationCardToAdaptive(getDialogModel() as JSONModel);\n}\n\nfunction deleteGroup(event: any) {\n\tconst oModel = getDialogModel() as JSONModel;\n\tconst sPath = event.getSource().getBindingContext().getPath();\n\tconst groupIndex = sPath.split(\"/configuration/groups/\")[1];\n\toModel.getProperty(\"/configuration/groups\").splice(groupIndex, 1);\n\tconst groupLength = oModel.getProperty(\"/configuration/groups\").length;\n\tif (groupLength < MAX_GROUPS) {\n\t\toModel.setProperty(\"/configuration/groupLimitReached\", false);\n\t}\n\tdelete context._itemActionsMenu;\n\toModel.setProperty(\"/configuration/isEdited\", true);\n\toModel.refresh();\n\tupdateCardGroups(oModel);\n\tsetValueStateForAdvancedPanel();\n\ttranspileIntegrationCardToAdaptive(getDialogModel() as JSONModel);\n}\n\nfunction onGroupDeleteClick(event: any) {\n\tconst resourceBundle = (getDialogModel(\"i18n\") as ResourceModel)?.getResourceBundle() as ResourceBundle;\n\tconst warningMessage = resourceBundle?.getText(\"GENERATOR_DELETE_GROUP_WARNING\") || \"\";\n\tMessageBox.warning(warningMessage, {\n\t\tactions: [MessageBox.Action.DELETE, MessageBox.Action.CANCEL],\n\t\temphasizedAction: MessageBox.Action.DELETE,\n\t\tonClose: function (action: string) {\n\t\t\tif (action === \"DELETE\") {\n\t\t\t\tdeleteGroup(event);\n\t\t\t}\n\t\t}\n\t});\n}\n\nfunction onGroupTitleChange(oEvent: any) {\n\tconst currentValue = oEvent.getParameters().newValue;\n\tconst oModel = getDialogModel() as JSONModel;\n\tconst sPath = oEvent.getSource().getBindingContext().getPath();\n\tconst group = oModel.getProperty(sPath);\n\tgroup.title = currentValue;\n\toModel.refresh();\n\tupdateCardGroups(oModel);\n\ttranspileIntegrationCardToAdaptive(getDialogModel() as JSONModel);\n}\n\nfunction onDeleteClick(oEvent: any) {\n\tconst oModel = getDialogModel() as JSONModel;\n\tconst sPath = oEvent.getSource().getBindingContext().getPath();\n\tconst [groupIndex, itemIndex] = sPath.match(/(\\d+)/g).map(function (sValue: string) {\n\t\treturn Number(sValue);\n\t});\n\toModel.getProperty(\"/configuration/groups/\" + groupIndex).items.splice(itemIndex, 1);\n\tconst iLength = oModel.getProperty(\"/configuration/groups/\" + groupIndex).items.length;\n\tif (iLength < MAX_GROUP_ITEMS) {\n\t\toModel.setProperty(\"/configuration/groups/\" + groupIndex + \"/enableAddMoreGroupItems\", true);\n\t}\n\tcontext._itemActionsMenu?.destroy();\n\tdelete context._itemActionsMenu;\n\toModel.setProperty(\"/configuration/isEdited\", true);\n\toModel.refresh();\n\tupdateCardGroups(oModel);\n\tsetValueStateForAdvancedPanel();\n\ttranspileIntegrationCardToAdaptive(getDialogModel() as JSONModel);\n}\n\n/**\n * Updates the sap.card.header.mainIndicator.trend property of the integration card manifest and triggers rendering of the card preview.\n */\nfunction updateTrendForCardHeader() {\n\tconst oModel = getDialogModel() as JSONModel;\n\tlet trendOptions = oModel.getProperty(\"/configuration/trendOptions\");\n\tconst selectedTrendOptions = oModel.getProperty(\"/configuration/selectedTrendOptions\");\n\n\tconst sapCardHeader = {\n\t\t\"sap.card\": {\n\t\t\theader: {\n\t\t\t\tmainIndicator: {\n\t\t\t\t\ttrend: \"None\"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tlet selectedTrendOptionIndex = -1;\n\tselectedTrendOptions?.forEach((selectedTrendOption: any, index: number) => {\n\t\tif (selectedTrendOption.sourceProperty === trendOptions.sourceProperty) {\n\t\t\tselectedTrendOptionIndex = index;\n\t\t\ttrendOptions = { ...selectedTrendOption, ...trendOptions };\n\t\t\toModel.setProperty(\"/configuration/trendOptions\", trendOptions);\n\t\t}\n\t});\n\tconst { referenceValue, downDifference, upDifference, sourceProperty } = trendOptions;\n\n\tif (referenceValue && downDifference && upDifference && sourceProperty) {\n\t\tconst newTrendValues = { referenceValue, downDifference, upDifference, sourceProperty };\n\t\tif (selectedTrendOptionIndex !== -1) {\n\t\t\tselectedTrendOptions[selectedTrendOptionIndex] = newTrendValues;\n\t\t} else {\n\t\t\tselectedTrendOptions.push(newTrendValues);\n\t\t}\n\t\tconst staticValues = {\n\t\t\treferenceValue: Number(referenceValue),\n\t\t\tdownDifference: Number(downDifference),\n\t\t\tupDifference: Number(upDifference)\n\t\t};\n\t\tsapCardHeader[\"sap.card\"][\"header\"][\"mainIndicator\"][\"trend\"] = getTrendDirection(staticValues);\n\t}\n\n\tconst currentManifest = getCurrentCardManifest();\n\tconst oManifest = merge(currentManifest, sapCardHeader) as CardManifest;\n\trenderCardPreview(oManifest, getDialogModel() as JSONModel);\n\ttranspileIntegrationCardToAdaptive(getDialogModel() as JSONModel);\n}\n\n/**\n * Updates the sap.card.header.sideIndicators property of the integration card manifest and triggers rendering of the card preview.\n */\nfunction updateSideIndicatorsForHeader() {\n\tconst oModel = getDialogModel() as JSONModel;\n\tlet indicatorsValue = oModel.getProperty(\"/configuration/indicatorsValue\");\n\tconst selectedIndicatorOptions = oModel.getProperty(\"/configuration/selectedIndicatorOptions\");\n\n\tlet selectedIndicatorOptionIndex = -1;\n\tselectedIndicatorOptions?.forEach((selectedIndicatorOption: any, index: number) => {\n\t\tif (selectedIndicatorOption.sourceProperty === indicatorsValue.sourceProperty) {\n\t\t\tselectedIndicatorOptionIndex = index;\n\t\t\tindicatorsValue = { ...selectedIndicatorOption, ...indicatorsValue };\n\t\t\toModel.setProperty(\"/configuration/indicatorsValue\", indicatorsValue);\n\t\t}\n\t});\n\n\tlet sapCardHeader = {\n\t\t\"sap.card\": {\n\t\t\theader: {\n\t\t\t\tsideIndicators: [\n\t\t\t\t\t{\n\t\t\t\t\t\ttitle: \"\",\n\t\t\t\t\t\tnumber: \"\",\n\t\t\t\t\t\tunit: \"\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttitle: \"\",\n\t\t\t\t\t\tnumber: \"\",\n\t\t\t\t\t\tunit: \"\"\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t}\n\t};\n\tconst { targetValue, deviationValue, targetUnit, deviationUnit, sourceProperty } = indicatorsValue;\n\tif (targetValue && deviationValue && targetUnit && deviationUnit && sourceProperty) {\n\t\tconst indicatorsValueToAdd = { targetValue, deviationValue, targetUnit, deviationUnit, sourceProperty };\n\t\tif (selectedIndicatorOptionIndex !== -1) {\n\t\t\tselectedIndicatorOptions[selectedIndicatorOptionIndex] = indicatorsValueToAdd;\n\t\t} else {\n\t\t\tselectedIndicatorOptions.push(indicatorsValueToAdd);\n\t\t}\n\t\toModel.setProperty(\"/configuration/indicatorsValue/targetDeviation\", targetValue);\n\t\tsapCardHeader = {\n\t\t\t\"sap.card\": {\n\t\t\t\theader: {\n\t\t\t\t\tsideIndicators: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttitle: \"Target\",\n\t\t\t\t\t\t\tnumber: targetValue,\n\t\t\t\t\t\t\tunit: targetUnit\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttitle: \"Deviation\",\n\t\t\t\t\t\t\tnumber: deviationValue,\n\t\t\t\t\t\t\tunit: deviationUnit\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\tconst currentManifest = getCurrentCardManifest();\n\tconst oManifest = merge(currentManifest, sapCardHeader) as CardManifest;\n\trenderCardPreview(oManifest, getDialogModel() as JSONModel);\n\toModel.refresh();\n\ttranspileIntegrationCardToAdaptive(getDialogModel() as JSONModel);\n}\n\n/**\n * Get trend direction based on the static values.\n * @param staticValues\n * @returns\n */\nfunction getTrendDirection(staticValues: object | undefined) {\n\tconst oModel = getDialogModel() as JSONModel;\n\tconst mainIndicatorKey = oModel.getProperty(\"/configuration/mainIndicatorStatusKey\");\n\tconst trendValues = oModel.getProperty(\"/configuration/trendOptions\");\n\tconst { referenceValue } = trendValues;\n\n\tif (mainIndicatorKey && staticValues) {\n\t\toModel.setProperty(\"/configuration/trendOptions/upDown\", referenceValue);\n\t\treturn \"{= extension.formatters.formatTrendIcon(${\" + mainIndicatorKey + \"},\" + JSON.stringify(staticValues) + \") }\";\n\t}\n\treturn \"None\";\n}\n\nasync function onPropertySelection(oEvent: Event) {\n\tconst { rootComponent, entitySet } = Application.getInstance().fetchDetails();\n\tconst control: ComboBox = oEvent.getSource();\n\tconst selectedKey = control.getSelectedKey() || \"\";\n\tconst newValue = (oEvent.getParameter as (param: string) => string)(\"newValue\");\n\n\tconst currentValue = selectedKey !== \"\" ? `{${selectedKey}}` : newValue;\n\tconst oModel = getDialogModel() as JSONModel;\n\tvalidateControl(oEvent);\n\tawait updateSelectedNavigationProperty(selectedKey, false);\n\tconst selectedNavigationPropertiesContent = oModel.getProperty(\"/configuration/selectedNavigationPropertiesContent\");\n\n\toModel.setProperty(\"/configuration/advancedFormattingOptions/sourceProperty\", selectedKey);\n\tconst sPath = control?.getBindingContext()?.getPath() as string;\n\tconst group = oModel.getProperty(sPath);\n\n\tif (!selectedNavigationPropertiesContent?.value?.length) {\n\t\tgroup.value =\n\t\t\tselectedKey &&\n\t\t\tgetArrangements(currentValue, {\n\t\t\t\tunitOfMeasures: oModel.getProperty(\"/configuration/advancedFormattingOptions/unitOfMeasures\"),\n\t\t\t\ttextArrangements: oModel.getProperty(\"/configuration/advancedFormattingOptions/textArrangements\"),\n\t\t\t\tpropertyValueFormatters: oModel.getProperty(\"/configuration/advancedFormattingOptions/propertyValueFormatters\")\n\t\t\t});\n\t} else {\n\t\tgroup.value = \"\";\n\t\tgroup.navigationProperty = \"\";\n\t\tgroup.navigationalProperties = selectedNavigationPropertiesContent?.value;\n\t}\n\n\tsetValueStateForAdvancedPanel(selectedKey);\n\n\tconst propertyLabel = ODataUtils.getPropertyLabel(rootComponent.getModel() as Model, entitySet, selectedKey, PropertyInfoType.Property);\n\tgroup.label = selectedNavigationPropertiesContent?.value?.length ? \"\" : propertyLabel;\n\tgroup.isNavigationEnabled = selectedNavigationPropertiesContent?.value?.length > 0;\n\tgroup.isEnabled = true;\n\toModel.refresh();\n\tupdateCardGroups(oModel);\n\ttranspileIntegrationCardToAdaptive(getDialogModel() as JSONModel);\n}\n\n/**\n * This function sets the ValueState of properties present in advanced formatting panel,\n * to ValueState.Information or ValueState.None on the basis of properties present in card preview.\n * @param selectedKey - The selected key from the ComboBox.\n */\nexport function setValueStateForAdvancedPanel(selectedKey?: string) {\n\tconst model = getDialogModel() as JSONModel;\n\tconst resourceBundle = (getDialogModel(\"i18n\") as ResourceModel)?.getResourceBundle() as ResourceBundle;\n\tconst informativeMessage = resourceBundle?.getText(\"UNSELECTED_ITEM\");\n\tconst previewItems = getPreviewItems(model);\n\tconst propertyPaths: Record<string, string> = {\n\t\tunitOfMeasures: \"/configuration/advancedFormattingOptions/unitOfMeasures\",\n\t\ttextArrangements: \"/configuration/advancedFormattingOptions/textArrangements\",\n\t\tcriticality: \"/configuration/mainIndicatorOptions/criticality\"\n\t};\n\t[\"unitOfMeasures\", \"textArrangements\", \"criticality\"].forEach((property) => {\n\t\tconst path = propertyPaths[property];\n\t\tconst formattingOptions = model.getProperty(path) ?? [];\n\t\tformattingOptions.forEach((item: UnitOfMeasures, index: number) => {\n\t\t\tlet itemName = item.name;\n\t\t\tlet navigationalProperty: boolean = false;\n\t\t\tif (path === propertyPaths.criticality && item.isNavigationForId && item.navigationKeyForId !== \"\") {\n\t\t\t\titemName = `${item.name}/${item.navigationKeyForId}`;\n\t\t\t}\n\t\t\tif (item.isNavigationForId && item.navigationKeyForId !== \"\") {\n\t\t\t\tnavigationalProperty = true;\n\t\t\t}\n\t\t\tconst isPropertyExists: boolean = previewItems.includes(itemName);\n\t\t\tif (!isPropertyExists && item.valueState !== ValueState.Information) {\n\t\t\t\tmodel.setProperty(`${path}/${index}/valueState`, ValueState.Information);\n\t\t\t\tmodel.setProperty(`${path}/${index}/valueStateText`, informativeMessage);\n\t\t\t\tif (navigationalProperty) {\n\t\t\t\t\tmodel.setProperty(`${path}/${index}/navigationValueState`, ValueState.Information);\n\t\t\t\t\tmodel.setProperty(`${path}/${index}/navigationValueStateText`, informativeMessage);\n\t\t\t\t}\n\t\t\t} else if (isPropertyExists && selectedKey && selectedKey === itemName && item.valueState === ValueState.Information) {\n\t\t\t\tmodel.setProperty(`${path}/${index}/valueState`, ValueState.None);\n\t\t\t\tmodel.setProperty(`${path}/${index}/valueStateText`, \"\");\n\t\t\t\tif (navigationalProperty) {\n\t\t\t\t\tmodel.setProperty(`${path}/${index}/navigationValueState`, ValueState.None);\n\t\t\t\t\tmodel.setProperty(`${path}/${index}/navigationValueStateText`, \"\");\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t});\n}\n\nfunction onPropertyLabelChange(oEvent: any) {\n\tconst currentValue = oEvent.getParameters().newValue;\n\tconst oModel = getDialogModel() as JSONModel;\n\tconst sPath = oEvent.getSource().getBindingContext().getPath();\n\tconst group = oModel.getProperty(sPath);\n\tgroup.label = currentValue;\n\toModel.refresh();\n\tupdateCardGroups(oModel);\n\ttranspileIntegrationCardToAdaptive(getDialogModel() as JSONModel);\n}\nfunction onDrop(oEvent: any) {\n\tconst oDragged = oEvent.getParameter(\"draggedControl\"),\n\t\toDropped = oEvent.getParameter(\"droppedControl\"),\n\t\tsInsertPosition = oEvent.getParameter(\"dropPosition\"),\n\t\toModel = getDialogModel() as JSONModel,\n\t\toDragPos = oDragged.getParent(),\n\t\toDropPos = oDropped.getParent(),\n\t\tsDraggedPath = oDragPos.getBindingContext().getPath(),\n\t\tsDroppedPath = oDropPos.getBindingContext().getPath(),\n\t\taDragItems = oModel.getProperty(sDraggedPath).items,\n\t\taDropItems = oModel.getProperty(sDroppedPath).items,\n\t\tiDragPosition = oDragPos.indexOfItem(oDragged),\n\t\tiDropPosition = oDropPos.indexOfItem(oDropped);\n\n\tconst oSelectedItem = aDragItems[iDragPosition];\n\t// insert the control in target aggregation, remove the item\n\tif (sInsertPosition === \"Before\" && aDropItems.length < MAX_GROUP_ITEMS) {\n\t\taDragItems.splice(iDragPosition, 1);\n\t\taDropItems.splice(iDropPosition, 0, oSelectedItem);\n\t} else if (sInsertPosition && aDropItems.length < MAX_GROUP_ITEMS) {\n\t\taDragItems.splice(iDragPosition, 1);\n\t\taDropItems.splice(iDropPosition + 1, 0, oSelectedItem);\n\t}\n\tif (aDragItems.length < MAX_GROUP_ITEMS) {\n\t\toModel.setProperty(sDraggedPath + \"/enableAddMoreGroupItems\", true);\n\t}\n\tif (aDropItems.length === MAX_GROUP_ITEMS) {\n\t\toModel.setProperty(sDroppedPath + \"/enableAddMoreGroupItems\", false);\n\t}\n\toModel.refresh();\n\tupdateCardGroups(oModel);\n\ttranspileIntegrationCardToAdaptive(getDialogModel() as JSONModel);\n}\nfunction onResetPressed() {\n\tconst oCard: any = CoreElement.getElementById(\"cardGeneratorDialog--cardPreview\");\n\toCard.setWidth();\n\toCard.setHeight();\n\t(CoreElement.getElementById(\"cardGeneratorDialog--widthInput\") as Input)?.setValue(\"\");\n\t(CoreElement.getElementById(\"cardGeneratorDialog--heightInput\") as Input)?.setValue(\"\");\n\toCard.refresh();\n}\nfunction onHeightChange(oEvent: any) {\n\tconst oCard: any = CoreElement.getElementById(\"cardGeneratorDialog--cardPreview\");\n\tconst currentValue = Number(oEvent.getParameters().newValue);\n\tcurrentValue > 200 ? oCard.setHeight(currentValue + \"px\") : oCard.setHeight(\"232px\");\n\toCard.refresh();\n}\nfunction onWidthChange(oEvent: any) {\n\tconst oCard: any = CoreElement.getElementById(\"cardGeneratorDialog--cardPreview\");\n\tconst currentValue = Number(oEvent.getParameters().newValue);\n\tcurrentValue > 200 ? oCard.setWidth(currentValue + \"px\") : oCard.setWidth(\"582px\");\n\toCard.refresh();\n}\n\nfunction closeDialog() {\n\tconst oModel = getDialogModel() as JSONModel;\n\tif (oModel) {\n\t\tif (!oModel.getProperty(\"/configuration/isEdited\")) {\n\t\t\ttoggleOffAdvancedPanel();\n\t\t}\n\t\tconst errorControls = oModel.getProperty(\"/configuration/errorControls\");\n\t\terrorControls?.forEach((ele: ComboBox) => {\n\t\t\tele.setValueState(ValueState.None);\n\t\t});\n\t}\n\n\t(getCardGeneratorDialog() as Dialog).close();\n}\n\nfunction setCriticalitySourceProperty(property: string) {\n\tconst oModel = getDialogModel() as JSONModel;\n\tconst mainIndicatorCriticality = oModel?.getProperty(\"/configuration/mainIndicatorOptions/criticality\");\n\tlet relavantCriticality;\n\n\tconst relavantProperty = mainIndicatorCriticality?.filter((indicatorCriticality: Criticality) => {\n\t\tconst { name: indicatorName, propertyKeyForId } = indicatorCriticality;\n\t\treturn indicatorName === property || `${indicatorName}/${propertyKeyForId}` === property;\n\t});\n\tif (relavantProperty) {\n\t\trelavantCriticality = JSON.parse(JSON.stringify(relavantProperty));\n\t}\n\tif (relavantProperty?.length === 1) {\n\t\trelavantCriticality[0].hostCriticality = relavantProperty[0].criticality;\n\t\tdelete relavantCriticality.criticality;\n\t\toModel?.setProperty(\"/configuration/advancedFormattingOptions/sourceCriticalityProperty\", relavantCriticality);\n\t} else {\n\t\toModel?.setProperty(\"/configuration/advancedFormattingOptions/sourceCriticalityProperty\", [{ name: property }]);\n\t}\n}\n\nfunction onFormatTypeSelection(oEvent: any, oSource: ComboBox) {\n\tconst oModel = getDialogModel() as JSONModel;\n\tconst sourceItem = oEvent.getParameter(\"item\");\n\tconst key = sourceItem.getKey();\n\toModel.setProperty(\"/configuration/popoverContentType\", key);\n\tconst aUom = oModel.getProperty(\"/configuration/advancedFormattingOptions/unitOfMeasures\");\n\tconst sSourceUoMProperty = oModel.getProperty(\"/configuration/advancedFormattingOptions/sourceUoMProperty\");\n\tif (aUom.length > 0) {\n\t\tconst aSourceUom = aUom.filter((oProperty: any) => {\n\t\t\treturn oProperty.name === sSourceUoMProperty;\n\t\t})[0];\n\t\tif (aSourceUom) {\n\t\t\toModel.setProperty(\"/configuration/advancedFormattingOptions/targetProperty\", aSourceUom.value);\n\t\t}\n\t}\n\tif (aPropsWithUoM.indexOf(sSourceUoMProperty) === -1) {\n\t\toModel.setProperty(\"/configuration/advancedFormattingOptions/targetProperty\", \"\");\n\t}\n\tonAdvancedFormattingConfigOpen(oEvent, oSource);\n}\n\nfunction onPropertyFormatting(oEvent: any) {\n\tconst oSource = oEvent.getSource();\n\tconst oModel = getDialogModel() as JSONModel;\n\tlet property = oModel.getProperty(\"/configuration/mainIndicatorStatusKey\");\n\tconst navSelectedKey = oModel.getProperty(\"/configuration/mainIndicatorNavigationSelectedKey\");\n\tif (navSelectedKey && !property.includes(\"/\")) {\n\t\tproperty = `${property}/${navSelectedKey}`;\n\t}\n\toModel.setProperty(\"/configuration/advancedFormattingOptions/targetFormatterProperty\", property);\n\toModel.setProperty(\"/configuration/advancedFormattingOptions/sourceUoMProperty\", property);\n\tdisableOrEnableUOMAndTrend(oModel, property);\n\tsetCriticalitySourceProperty(property);\n\tsetAdvancedFormattingOptionsEnablement(property);\n\n\tif (!context._advancedFormattingOptionsPopover) {\n\t\tFragment.load({\n\t\t\tid: \"advancedFormattingOptions\",\n\t\t\tname: \"sap.cards.ap.generator.app.fragments.configuration.AdvancedFormattingOptions\",\n\t\t\tcontroller: {\n\t\t\t\tonFormatTypeSelection: function (oEvent: any) {\n\t\t\t\t\tCardGeneratorDialogController.onFormatTypeSelection(oEvent, oSource);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\t\t.then(function (oPopover: any) {\n\t\t\t\tcontext._advancedFormattingOptionsPopover = oPopover;\n\t\t\t\toSource.addDependent(oPopover);\n\t\t\t\treturn oPopover;\n\t\t\t})\n\t\t\t.then(function (oPopover) {\n\t\t\t\tconst oContext = oSource.getBindingContext();\n\t\t\t\toPopover.setBindingContext(oContext);\n\t\t\t\toPopover.openBy(oSource);\n\t\t\t});\n\t} else {\n\t\tconst oContext = oSource.getBindingContext();\n\t\tcontext._advancedFormattingOptionsPopover.setBindingContext(oContext);\n\t\tcontext._advancedFormattingOptionsPopover.openBy(oSource);\n\t}\n}\n\nfunction onAdvancedFormattingConfigOpen(oEvent: any, oSource: any) {\n\tconst oModel = getDialogModel() as JSONModel;\n\tconst oConfigurationController = {\n\t\tonPopoverClose: (oEvent: any) => {\n\t\t\tconst source = oEvent.getSource();\n\t\t\tsource?.destroy();\n\t\t},\n\t\tonPropertyFormatterChange: () => {\n\t\t\tupdateArrangements();\n\t\t\tconst buttonId = oSource?.getId();\n\t\t\tconst oPopover = CoreElement.getElementById(buttonId + \"--advanceFormattingPopover\");\n\t\t\t(oPopover as Popover)?.close();\n\t\t},\n\t\tapplyCriticality: () => applyCriticality(oEvent),\n\t\tapplyUoMFormatting: () => applyUoMFormatting(),\n\t\tapplyFormatting: () => {\n\t\t\tconst buttonId = oSource?.getId();\n\t\t\t(CoreElement.getElementById(buttonId + \"--headerFormatterEditor\") as CompactFormatterSelection).applyFormatter();\n\t\t\ttranspileIntegrationCardToAdaptive(getDialogModel() as JSONModel);\n\t\t},\n\t\tresetValueState(oEvent: any, isSelectControl?: boolean) {\n\t\t\tconst control = oEvent.getSource();\n\t\t\tconst currentValue = !isSelectControl ? oEvent.getParameters().newValue : control.getSelectedKey();\n\t\t\tif (currentValue !== \"\") {\n\t\t\t\tcontrol.setValueState(ValueState.None);\n\t\t\t}\n\t\t},\n\t\tonDownDifferenceChange(oEvent: any) {\n\t\t\toModel.setProperty(\"/configuration/trendOptions/downDifferenceValueState\", \"None\");\n\t\t\tthis.resetValueState(oEvent);\n\t\t},\n\t\tonUpDifferenceChange(oEvent: any) {\n\t\t\toModel.setProperty(\"/configuration/trendOptions/upDifferenceValueState\", \"None\");\n\t\t\tthis.resetValueState(oEvent);\n\t\t},\n\t\tonReferenceValInputChange(oEvent: any) {\n\t\t\toModel.setProperty(\"/configuration/trendOptions/referenceValueState\", \"None\");\n\t\t\tthis.resetValueState(oEvent);\n\t\t},\n\t\tonTargetValueChange(oEvent: any) {\n\t\t\toModel.setProperty(\"/configuration/indicatorsValue/targetValueState\", \"None\");\n\t\t\tthis.resetValueState(oEvent);\n\t\t},\n\t\tonDeviationValueChange(oEvent: any) {\n\t\t\toModel.setProperty(\"/configuration/indicatorsValue/deviationValueState\", \"None\");\n\t\t\tthis.resetValueState(oEvent);\n\t\t},\n\t\tonTargetUnitChange(oEvent: any) {\n\t\t\toModel.setProperty(\"/configuration/indicatorsValue/targetUnitValueState\", \"None\");\n\t\t\tthis.resetValueState(oEvent, true);\n\t\t},\n\t\tonDeviationUnitChange(oEvent: any) {\n\t\t\toModel.setProperty(\"/configuration/indicatorsValue/deviationUnitValueState\", \"None\");\n\t\t\tthis.resetValueState(oEvent, true);\n\t\t},\n\t\tapplyIndicators: () => {\n\t\t\tconst buttonId = oSource?.getId();\n\t\t\tconst hasIndicatorsError = validateIndicatorsValues(buttonId);\n\t\t\tif (!hasIndicatorsError) {\n\t\t\t\tupdateSideIndicatorsForHeader();\n\t\t\t\tcontext?._advancedFormattingConfigurationPopover?.close();\n\t\t\t}\n\t\t},\n\t\tapplyTrendCalculation: () => {\n\t\t\tconst buttonId = oSource?.getId();\n\t\t\tconst hasTrendError = validateTrendValues(buttonId);\n\t\t\tif (!hasTrendError) {\n\t\t\t\tupdateTrendForCardHeader();\n\t\t\t\tcontext?._advancedFormattingConfigurationPopover?.close();\n\t\t\t}\n\t\t},\n\t\tonDelete: () => {\n\t\t\tconst oModel = getDialogModel() as JSONModel;\n\t\t\tconst sourceUoMProperty: any = oModel?.getProperty(\"/configuration/advancedFormattingOptions/sourceUoMProperty\");\n\t\t\tconst iIndex = aPropsWithUoM?.indexOf(sourceUoMProperty);\n\t\t\taPropsWithUoM?.splice(iIndex, 1);\n\t\t\toModel?.setProperty(\"/configuration/advancedFormattingOptions/targetProperty\", \"\");\n\n\t\t\tconst itemsBindingPath: string = \"/configuration/advancedFormattingOptions/unitOfMeasures\",\n\t\t\t\tunitOfMeasures: any = oModel?.getProperty(itemsBindingPath);\n\t\t\tlet relativeIndex: number = -1;\n\t\t\tconst propertyValueFormatters = oModel.getProperty(\"/configuration/advancedFormattingOptions/propertyValueFormatters\");\n\t\t\tconst updatedPropertyValueFormatters = propertyValueFormatters.filter(\n\t\t\t\t(formatter: ValueFormatter) => formatter.property !== sourceUoMProperty\n\t\t\t);\n\t\t\toModel.setProperty(\"/configuration/advancedFormattingOptions/propertyValueFormatters\", updatedPropertyValueFormatters);\n\t\t\toModel.setProperty(\"/configuration/isEdited\", true);\n\t\t\tfor (let i = 0; i < unitOfMeasures.length; i++) {\n\t\t\t\tif (unitOfMeasures[i]?.name === sourceUoMProperty) {\n\t\t\t\t\trelativeIndex = i;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (relativeIndex >= 0 && itemsBindingPath) {\n\t\t\t\tconst sPath = itemsBindingPath + \"/\" + relativeIndex;\n\t\t\t\tunitOfMeasures?.splice(sPath.slice(sPath.length - 1), 1);\n\t\t\t\tupdateArrangements();\n\t\t\t\toModel?.refresh();\n\t\t\t}\n\t\t\tcontext?._advancedFormattingConfigurationPopover?.close();\n\t\t},\n\t\tonTrendDelete: () => onTrendDelete(),\n\t\tonIndicatorsDelete: () => {\n\t\t\tconst oModel = getDialogModel() as JSONModel;\n\t\t\tconst indicatorsValue = oModel.getProperty(\"/configuration/indicatorsValue\");\n\t\t\tconst selectedIndicatorValues = oModel.getProperty(\"/configuration/selectedIndicatorOptions\");\n\t\t\tlet iIndex: number = -1;\n\t\t\tselectedIndicatorValues?.forEach((trend: any, index: number) => {\n\t\t\t\tif (trend.sourceProperty === indicatorsValue.sourceProperty) {\n\t\t\t\t\tiIndex = index;\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (iIndex !== -1) {\n\t\t\t\tselectedIndicatorValues.splice(iIndex, 1);\n\t\t\t}\n\t\t\toModel.setProperty(\"/configuration/indicatorsValue\", {});\n\t\t\toModel.setProperty(\"/configuration/isEdited\", true);\n\t\t\tupdateSideIndicatorsForHeader();\n\t\t\tcontext?._advancedFormattingConfigurationPopover?.close();\n\t\t},\n\t\tonDeleteFormatter: () => {\n\t\t\tconst buttonId = oSource?.getId();\n\t\t\tconst oModel = getDialogModel() as JSONModel;\n\t\t\toModel.setProperty(\"/configuration/isEdited\", true);\n\t\t\t(CoreElement.getElementById(buttonId + \"--headerFormatterEditor\") as CompactFormatterSelection).deleteFormatter();\n\t\t\ttranspileIntegrationCardToAdaptive(getDialogModel() as JSONModel);\n\t\t},\n\t\tonDeleteCriticality: (event: Event) => {\n\t\t\tconst oModel = getDialogModel() as JSONModel;\n\t\t\tconst buttonId = oSource?.getId();\n\t\t\t(CoreElement.getElementById(buttonId + \"--headerCriticalityEditor\") as CriticalityEditor).onDeleteButtonClicked(event);\n\t\t\toModel.setProperty(\"/configuration/advancedFormattingOptions/selectedKeyCriticality\", \"\");\n\t\t\toModel.setProperty(\"/configuration/isEdited\", true);\n\t\t\tupdateCriticality(false);\n\t\t\tcontext?._advancedFormattingConfigurationPopover?.close();\n\t\t}\n\t};\n\n\tif (oEvent?.getParameter(\"item\")?.getKey?.() === \"uom\") {\n\t\toConfigurationController.applyUoMFormatting();\n\t}\n\tif (oEvent.getSource()?.getParent()?.close) {\n\t\toEvent.getSource().getParent().close();\n\t}\n\n\tloadAdvancedFormattingConfigurationFragment(oSource, oConfigurationController);\n}\n\nfunction applyCriticality(oEvent: Event) {\n\tconst oModel = getDialogModel() as JSONModel;\n\tconst mainIndicatorCriticality = oModel?.getProperty(\"/configuration/mainIndicatorOptions/criticality\");\n\tlet sourceCriticalityProperty = oModel?.getProperty(\"/configuration/advancedFormattingOptions/sourceCriticalityProperty\");\n\n\tsourceCriticalityProperty = sourceCriticalityProperty?.[0];\n\tconst navProperites = oModel?.getProperty(\"/configuration/navigationProperty\");\n\tconst isNavEnabled = sourceCriticalityProperty?.name?.includes(\"/\");\n\n\tif (isNavEnabled) {\n\t\tsourceCriticalityProperty.propertyKeyForId = sourceCriticalityProperty.name.split(\"/\")[1];\n\t\tsourceCriticalityProperty.navigationKeyForId = sourceCriticalityProperty.name.split(\"/\")[1];\n\t\tsourceCriticalityProperty.name = sourceCriticalityProperty.name.split(\"/\")[0];\n\t\tsourceCriticalityProperty.isNavigationForId = true;\n\t\tconst navSelectedProperies = navProperites?.filter((property: { name: string }) => {\n\t\t\treturn property?.name === sourceCriticalityProperty?.name.split(\"/\")[0];\n\t\t});\n\t\tsourceCriticalityProperty.navigationalPropertiesForId = navSelectedProperies[0]?.properties;\n\t}\n\tif (sourceCriticalityProperty?.hostCriticality !== sourceCriticalityProperty?.criticality) {\n\t\tsourceCriticalityProperty.criticality = sourceCriticalityProperty.hostCriticality;\n\t}\n\n\tconst propertyExists: boolean = mainIndicatorCriticality?.some((indicatorCriticality: Property) => {\n\t\tconst { name: indicatorName, propertyKeyForId } = indicatorCriticality;\n\t\tif (isNavEnabled) {\n\t\t\treturn indicatorName === sourceCriticalityProperty?.name && propertyKeyForId === sourceCriticalityProperty?.propertyKeyForId;\n\t\t} else {\n\t\t\treturn indicatorName === sourceCriticalityProperty?.name;\n\t\t}\n\t});\n\n\tif (!propertyExists && sourceCriticalityProperty) {\n\t\tdelete sourceCriticalityProperty.hostCriticality;\n\t\tmainIndicatorCriticality?.push(sourceCriticalityProperty);\n\t} else {\n\t\tfor (let i = 0; i < mainIndicatorCriticality.length; i++) {\n\t\t\tif (mainIndicatorCriticality[i]?.name === sourceCriticalityProperty?.name) {\n\t\t\t\tdelete mainIndicatorCriticality[i];\n\t\t\t\tdelete sourceCriticalityProperty.hostCriticality;\n\t\t\t\tmainIndicatorCriticality[i] = sourceCriticalityProperty;\n\t\t\t}\n\t\t}\n\t}\n\toModel?.setProperty(\"/configuration/mainIndicatorOptions/criticality\", mainIndicatorCriticality);\n\tupdateCriticality((oEvent.getParameter as (param: string) => boolean)(\"isCalcuationType\") || false);\n\tcontext?._advancedFormattingConfigurationPopover?.close();\n}\n\nfunction applyUoMFormatting() {\n\tconst oModel = getDialogModel() as JSONModel;\n\tconst unitOfMeasures = oModel?.getProperty(\"/configuration/advancedFormattingOptions/unitOfMeasures\"),\n\t\tsourceProperty: string = oModel?.getProperty(\"/configuration/advancedFormattingOptions/sourceUoMProperty\");\n\tlet relavantProperty = unitOfMeasures?.filter((property: Property) => property?.name === sourceProperty),\n\t\ttargetProperty: string = oModel?.getProperty(\"/configuration/advancedFormattingOptions/targetProperty\");\n\trelavantProperty = relavantProperty?.[0];\n\n\tif (!targetProperty && relavantProperty) {\n\t\toModel.setProperty(\"/configuration/advancedFormattingOptions/targetProperty\", relavantProperty?.propertyKeyForDescription);\n\t}\n\n\ttargetProperty = oModel?.getProperty(\"/configuration/advancedFormattingOptions/targetProperty\");\n\tconst proprtetyKeyFromSource = sourceProperty.includes(\"/\") ? sourceProperty.split(\"/\")[0] : sourceProperty;\n\tconst navAllProperties = oModel.getProperty(\"/configuration/navigationProperty\");\n\tlet navPropertiesValues: object[] = [];\n\tif (sourceProperty.includes(\"/\") && navAllProperties) {\n\t\tnavPropertiesValues = getNavValues(navAllProperties, proprtetyKeyFromSource);\n\t}\n\tconst oData = {\n\t\tpropertyKeyForId: proprtetyKeyFromSource,\n\t\tname: sourceProperty,\n\t\tvalue: targetProperty,\n\t\tnavigationalPropertiesForId: navPropertiesValues.length === 0 ? \"\" : navPropertiesValues,\n\t\tisNavigationForId: sourceProperty.includes(\"/\") ? true : false,\n\t\tnavigationKeyForId: sourceProperty.includes(\"/\") ? sourceProperty.split(\"/\")[1] : \"\",\n\t\tpropertyKeyForDescription: targetProperty,\n\t\tisNavigationForDescription: false,\n\t\tnavigationKeyForDescription: \"\"\n\t};\n\tlet bMatchingProperty = false;\n\tunitOfMeasures.forEach((oUom: any) => {\n\t\tif (oUom.name === oData.name) {\n\t\t\tbMatchingProperty = true;\n\t\t\toUom.propertyKeyForDescription = oData.value;\n\t\t\toUom.value = oData.value;\n\t\t}\n\t});\n\tif (!bMatchingProperty && sourceProperty && targetProperty) {\n\t\tunitOfMeasures.push(oData);\n\t}\n\toModel.setProperty(\"/configuration/advancedFormattingOptions/unitOfMeasures\", unitOfMeasures);\n\tupdateArrangements();\n\tfor (let i = 0; i < unitOfMeasures.length; i++) {\n\t\tif (unitOfMeasures[i].value !== \"\" && aPropsWithUoM?.indexOf(unitOfMeasures[i]?.name) === -1) {\n\t\t\taPropsWithUoM?.push(unitOfMeasures[i]?.name);\n\t\t}\n\t}\n\tcontext?._advancedFormattingConfigurationPopover?.close();\n}\n\n/**\n * Retrieves the properties of a navigation property that matches the given key.\n *\n * @param {Array<{ name: string; properties: Array<object> }>} navProperties - An array of navigation properties, each containing a name and a list of properties.\n * @param {string} propertyKeyFromSource - The key to match against the name of the navigation properties.\n * @returns {Array<object>} The properties of the matching navigation property, or an empty array if no match is found.\n */\nfunction getNavValues(navProperties: [{ name: string; properties: Array<object> }], propertyKeyFromSource: string): Array<object> {\n\tfor (const navProperty of navProperties) {\n\t\tif (propertyKeyFromSource === navProperty?.name) {\n\t\t\treturn navProperty.properties;\n\t\t}\n\t}\n\treturn [];\n}\n\nfunction onTrendDelete() {\n\tconst oModel = getDialogModel() as JSONModel;\n\tconst trendValues = oModel.getProperty(\"/configuration/trendOptions\");\n\tconst selectedTrendValues = oModel.getProperty(\"/configuration/selectedTrendOptions\");\n\tlet iIndex: number = -1;\n\tselectedTrendValues?.forEach((trend: TrendOrIndicatorOptions, index: number) => {\n\t\tif (trend.sourceProperty === trendValues.sourceProperty) {\n\t\t\tiIndex = index;\n\t\t}\n\t});\n\tif (iIndex !== -1) {\n\t\tselectedTrendValues.splice(iIndex, 1);\n\t}\n\toModel.setProperty(\"/configuration/trendOptions\", {});\n\toModel.setProperty(\"/configuration/isEdited\", true);\n\tupdateTrendForCardHeader();\n\tcontext?._advancedFormattingConfigurationPopover?.close();\n}\n\nfunction loadAdvancedFormattingConfigurationFragment(oSource: any, oConfigurationController: object) {\n\tFragment.load({\n\t\tid: oSource.getId(),\n\t\tname: \"sap.cards.ap.generator.app.fragments.configuration.AdvancedFormattingConfiguration\",\n\t\tcontroller: oConfigurationController\n\t})\n\t\t.then(function (oPopover: any) {\n\t\t\tcontext._advancedFormattingConfigurationPopover = oPopover;\n\t\t\tconst oResourceBundle = (getDialogModel(\"i18n\") as ResourceModel)?.getResourceBundle() as ResourceBundle;\n\t\t\tconst mLabels = {\n\t\t\t\tuomText: oResourceBundle?.getText(\"SELECT_UOM_TEXT\"),\n\t\t\t\tcriticalityText: oResourceBundle?.getText(\"SELECT_CRITICALITY_TEXT\"),\n\t\t\t\tformatterText: oResourceBundle?.getText(\"SELECT_FORMATTER_TEXT\"),\n\t\t\t\tindicatorsText: oResourceBundle?.getText(\"SELECT_INDICATORS_TEXT\"),\n\t\t\t\ttrendCalculatorText: oResourceBundle?.getText(\"TREND_CALCULATION_TEXT\")\n\t\t\t};\n\t\t\toPopover.setModel(new JSONModel(mLabels), \"i18nLabelText\");\n\t\t\toSource.addDependent(oPopover);\n\t\t\treturn oPopover;\n\t\t})\n\t\t.then(function (oPopover) {\n\t\t\tconst oContext = oSource.getBindingContext();\n\t\t\toPopover.setBindingContext(oContext);\n\t\t\toPopover.openBy(oSource);\n\t\t\treturn oPopover;\n\t\t});\n}\n\nfunction onItemsActionsButtonPressed(oEvent: any) {\n\tconst oModel = getDialogModel() as JSONModel;\n\tconst sPath = oEvent?.getSource().getBindingContext().getPath();\n\tconst sourcePropertyName = oModel?.getProperty(sPath)?.name;\n\tconst navProperty = oModel?.getProperty(sPath)?.navigationProperty;\n\tconst sourceProperty = navProperty ? sourcePropertyName + \"/\" + navProperty : sourcePropertyName;\n\tconst oSource = oEvent.getSource();\n\tdisableOrEnableUOMAndTrend(oModel, sourceProperty);\n\tsetAdvancedFormattingOptionsEnablement(sourceProperty);\n\tconst oController = {\n\t\tonNavigationActionSelect: (oEvent: any) => {\n\t\t\tconst sId = oEvent.getParameter(\"item\").getId();\n\t\t\tconst oModel = getDialogModel() as JSONModel;\n\t\t\tif (sId === \"formatter\" || sId === \"uom\") {\n\t\t\t\thandleFormatterUomAction(sId, oEvent, oModel);\n\t\t\t\tonAdvancedFormattingConfigOpen(oEvent, oEvent.getSource().getParent());\n\t\t\t} else if (sId === \"criticality\") {\n\t\t\t\tconst propertyToBeSet = handleCriticalityAction(sId, oEvent, oModel);\n\t\t\t\tsetCriticalitySourceProperty(propertyToBeSet);\n\t\t\t\tonAdvancedFormattingConfigOpen(oEvent, oEvent.getSource().getParent());\n\t\t\t} else if (sId === \"actions\") {\n\t\t\t\t// do nothing\n\t\t\t} else {\n\t\t\t\tconst sourceItem = oEvent.getParameter(\"item\");\n\t\t\t\tconst customData = sourceItem.getCustomData();\n\t\t\t\tconst customAction = customData.filter((custom: any) => custom.getKey() === \"action\")[0];\n\t\t\t\tconst actionType = customAction.getValue();\n\t\t\t\tconst source = oEvent.getSource();\n\t\t\t\tconst sPath = source.getBindingContext().getPath();\n\t\t\t\tconst [groupIndex, itemIndex] = sPath.match(/(\\d+)/g).map((sValue: any) => Number(sValue));\n\t\t\t\tconst group = oModel.getProperty(\"/configuration/groups/\" + groupIndex);\n\t\t\t\tconst item = group.items[itemIndex];\n\n\t\t\t\tif (actionType === \"add\") {\n\t\t\t\t\tlet value = \"\";\n\t\t\t\t\tconst key = sourceItem.getId();\n\n\t\t\t\t\tswitch (key) {\n\t\t\t\t\t\tcase \"url\":\n\t\t\t\t\t\t\tvalue = `${item.value}`;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"email\":\n\t\t\t\t\t\t\tvalue = `mailto: ${item.value}`;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"tel\":\n\t\t\t\t\t\t\tvalue = `tel: ${item.value}`;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (value === \"\") {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst actions = [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: \"Navigation\",\n\t\t\t\t\t\t\tparameters: {\n\t\t\t\t\t\t\t\turl: value\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t];\n\n\t\t\t\t\titem[\"hasActions\"] = true;\n\t\t\t\t\titem[\"actionType\"] = key;\n\t\t\t\t\titem[\"actions\"] = actions;\n\t\t\t\t}\n\n\t\t\t\tif (actionType === \"remove\" && item.hasActions) {\n\t\t\t\t\tdelete item.hasActions;\n\t\t\t\t\tdelete item.actionType;\n\t\t\t\t\tdelete item.actions;\n\t\t\t\t}\n\t\t\t}\n\t\t\toModel.refresh();\n\t\t\tupdateCardGroups(oModel);\n\t\t\ttranspileIntegrationCardToAdaptive(getDialogModel() as JSONModel);\n\t\t}\n\t};\n\tif (!context._itemActionsMenu || context?._itemActionsMenu?.isDestroyed()) {\n\t\tFragment.load({\n\t\t\tname: \"sap.cards.ap.generator.app.fragments.configuration.ItemActions\",\n\t\t\tcontroller: oController\n\t\t}).then(\n\t\t\tfunction (oMenu: any) {\n\t\t\t\tcontext._itemActionsMenu = oMenu;\n\t\t\t\tconst oContext = oSource.getBindingContext();\n\t\t\t\toMenu.setBindingContext(oContext);\n\t\t\t\toSource.addDependent(oMenu);\n\t\t\t\tcontext._itemActionsMenu.open(false, oSource, Popup.Dock.BeginTop, Popup.Dock.BeginBottom, oSource);\n\t\t\t}.bind(oController)\n\t\t);\n\t} else {\n\t\tconst oContext = oSource.getBindingContext();\n\t\tcontext._itemActionsMenu.setBindingContext(oContext);\n\t\toSource.addDependent(context._itemActionsMenu);\n\t\tcontext._itemActionsMenu.open(false, oSource, Popup.Dock.BeginTop, Popup.Dock.BeginBottom, oSource);\n\t}\n}\n\n/**\n * Handles the formatter Unit of Measure (UoM) action by updating the model properties\n * based on the provided ID, event, and model.\n *\n * @param {string} id - The ID of the formatter UoM action.\n * @param event - The event object triggered by the action.\n * @param {JSONModel} model - The JSON model used to update the configuration properties.\n */\nfunction handleFormatterUomAction(id: string, event: any, model: JSONModel) {\n\tmodel?.setProperty(\"/configuration/popoverContentType\", id);\n\tconst path = event.getSource().getBindingContext().getPath();\n\tconst navProp = model.getProperty(path)?.navigationProperty;\n\tconst propertyToBeSet = model.getProperty(path)?.name + (navProp ? \"/\" + navProp : \"\");\n\tmodel?.setProperty(\"/configuration/advancedFormattingOptions/targetFormatterProperty\", propertyToBeSet);\n\tmodel?.setProperty(\"/configuration/advancedFormattingOptions/sourceUoMProperty\", propertyToBeSet);\n\tconst uom = model?.getProperty(\"/configuration/advancedFormattingOptions/unitOfMeasures\");\n\tconst sourceUoMProperty = model?.getProperty(\"/configuration/advancedFormattingOptions/sourceUoMProperty\");\n\tif (uom.length > 0) {\n\t\tconst sourceUom = uom.filter((property: { name: string }) => {\n\t\t\treturn property.name === sourceUoMProperty;\n\t\t})[0];\n\t\tif (sourceUom) {\n\t\t\tmodel?.setProperty(\"/configuration/advancedFormattingOptions/targetProperty\", sourceUom.value);\n\t\t}\n\t}\n\tif (aPropsWithUoM.length && aPropsWithUoM.indexOf(sourceUoMProperty) === -1) {\n\t\tmodel?.setProperty(\"/configuration/advancedFormattingOptions/targetProperty\", \"\");\n\t}\n}\n\n/**\n * Handles the criticality action by updating the model properties and returning the derived property path.\n *\n * @param {string} id - The ID of the criticality action.\n * @param event - The event object triggered by the action.\n * @param {JSONModel} model - The JSON model used to update the configuration properties.\n *\n * @returns {string} - The derived property path combining the property name and navigation property.\n */\nfunction handleCriticalityAction(id: string, event: any, model: JSONModel): string {\n\tmodel?.setProperty(\"/configuration/popoverContentType\", id);\n\tconst path = event.getSource().getBindingContext().getPath();\n\tconst navProp = model?.getProperty(path)?.navigationProperty;\n\tlet propertyToBeSet = model?.getProperty(path)?.name;\n\tif (navProp) {\n\t\tpropertyToBeSet = `${propertyToBeSet}/${navProp}`;\n\t}\n\treturn propertyToBeSet;\n}\n\nfunction onPreviewTypeChange(oEvent: any) {\n\tconst selectedCardType = oEvent.getSource().getSelectedItem().getBindingContext(\"previewOptions\").getProperty(\"type\");\n\tconst oCard: any = CoreElement.getElementById(\"cardGeneratorDialog--cardPreview\");\n\tconst oAdaptiveCardContainer: any = CoreElement.getElementById(\"cardGeneratorDialog--adaptiveCardPreviewContainer\");\n\tconst oCustomSize: any = CoreElement.getElementById(\"cardGeneratorDialog--custom-entry\");\n\toCard.setVisible(false);\n\toAdaptiveCardContainer.setVisible(false);\n\toCustomSize.setVisible(false);\n\tswitch (selectedCardType) {\n\t\tcase \"adaptive\":\n\t\t\toAdaptiveCardContainer.setVisible(true);\n\t\t\tsetTimeout(() => {\n\t\t\t\ttranspileIntegrationCardToAdaptive(getDialogModel() as JSONModel);\n\t\t\t}, 0);\n\t\t\tbreak;\n\t\tcase \"custom\":\n\t\t\toCard.setVisible(true);\n\t\t\toCustomSize.setVisible(true);\n\t\t\tbreak;\n\t\tcase \"integration\":\n\t\t\toCard.setVisible(true);\n\t\t\toCard.setWidth(oEvent.getSource().getSelectedItem().getBindingContext(\"previewOptions\").getProperty(\"width\"));\n\t\t\toCard.setHeight(oEvent.getSource().getSelectedItem().getBindingContext(\"previewOptions\").getProperty(\"height\"));\n\t\t\tbreak;\n\t\tdefault:\n\t\t\toCard.setVisible(true);\n\t\t\toCard.setWidth(oEvent.getSource().getSelectedItem().getBindingContext(\"previewOptions\").getProperty(\"width\"));\n\t\t\toCard.setHeight(oEvent.getSource().getSelectedItem().getBindingContext(\"previewOptions\").getProperty(\"height\"));\n\t\t\tbreak;\n\t}\n}\n\n/**\n * Update the sap.card.header of the integration card manifest by appling latest text arrangements, unit of measurement and formatters and triggers rendering of the card preview.\n * - This method is triggered when text arrrangement, unit of measurement or formatters are changed.\n */\nfunction updateHeaderArrangements() {\n\tconst oModel = getDialogModel() as JSONModel;\n\tconst currentManifest = getCurrentCardManifest();\n\tconst header = currentManifest[\"sap.card\"].header;\n\tconst subtitle = resolvePropertyPathFromExpression(header.subTitle, currentManifest);\n\tconst unitOfMeasurement = resolvePropertyPathFromExpression(header.unitOfMeasurement, currentManifest);\n\tconst mainIndicatorValue =\n\t\toModel.getProperty(\"/configuration/navigationValue\") || oModel.getProperty(\"/configuration/mainIndicatorStatusKey\");\n\tconst aUnitOfMeasures = oModel.getProperty(\"/configuration/advancedFormattingOptions/unitOfMeasures\");\n\tconst aTextArrangements = oModel.getProperty(\"/configuration/advancedFormattingOptions/textArrangements\");\n\tconst aPropertyValueFormatters: FormatterConfigurationMap = oModel.getProperty(\n\t\t\"/configuration/advancedFormattingOptions/propertyValueFormatters\"\n\t);\n\n\tconst sapCardHeader = {\n\t\t\"sap.card\": {\n\t\t\theader: {\n\t\t\t\tmainIndicator: {\n\t\t\t\t\tnumber:\n\t\t\t\t\t\tmainIndicatorValue &&\n\t\t\t\t\t\tgetArrangements(`{${mainIndicatorValue}}`, {\n\t\t\t\t\t\t\tunitOfMeasures: aUnitOfMeasures,\n\t\t\t\t\t\t\ttextArrangements: aTextArrangements,\n\t\t\t\t\t\t\tpropertyValueFormatters: aPropertyValueFormatters\n\t\t\t\t\t\t})\n\t\t\t\t},\n\t\t\t\tsubTitle: getArrangements(subtitle, {\n\t\t\t\t\tunitOfMeasures: aUnitOfMeasures,\n\t\t\t\t\ttextArrangements: aTextArrangements,\n\t\t\t\t\tpropertyValueFormatters: aPropertyValueFormatters\n\t\t\t\t}),\n\t\t\t\tunitOfMeasurement: getArrangements(unitOfMeasurement, {\n\t\t\t\t\tunitOfMeasures: aUnitOfMeasures,\n\t\t\t\t\ttextArrangements: aTextArrangements,\n\t\t\t\t\tpropertyValueFormatters: aPropertyValueFormatters\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t};\n\toModel.setProperty(\"/configuration/isEdited\", true);\n\tconst oManifest = merge(currentManifest, sapCardHeader) as CardManifest;\n\trenderCardPreview(oManifest, getDialogModel() as JSONModel);\n}\n\nfunction updateArrangements() {\n\tconst oModel = getDialogModel() as JSONModel;\n\tupdateHeaderArrangements();\n\tconst groups: ObjectCardGroups[] = oModel.getProperty(\"/configuration/groups\");\n\tgroups?.forEach(function (group) {\n\t\tgroup?.items?.forEach((groupItem) => {\n\t\t\tif (groupItem.name && groupItem.name !== \"\") {\n\t\t\t\tconst groupItemValue = groupItem.isNavigationEnabled ? `${groupItem.name}/${groupItem.navigationProperty}` : groupItem.name;\n\t\t\t\tgroupItem.value = getArrangements(`{${groupItemValue}}`, {\n\t\t\t\t\tunitOfMeasures: oModel.getProperty(\"/configuration/advancedFormattingOptions/unitOfMeasures\"),\n\t\t\t\t\ttextArrangements: oModel.getProperty(\"/configuration/advancedFormattingOptions/textArrangements\"),\n\t\t\t\t\tpropertyValueFormatters: oModel.getProperty(\"/configuration/advancedFormattingOptions/propertyValueFormatters\")\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t});\n\toModel.refresh();\n\tupdateCardGroups(oModel);\n\ttranspileIntegrationCardToAdaptive(getDialogModel() as JSONModel);\n}\n\nfunction updateCriticality(isCalcuationType: boolean) {\n\tconst currentManifest = getCurrentCardManifest();\n\tconst oModel = getDialogModel() as JSONModel;\n\tconst mainIndicator = currentManifest[\"sap.card\"].header.mainIndicator;\n\tconst groups = (currentManifest[\"sap.card\"].content as ObjectContent).groups;\n\n\tif (!mainIndicator && groups.length < 1) {\n\t\treturn;\n\t}\n\tlet oManifest;\n\tif (mainIndicator) {\n\t\tconst mainIndicatorValue = resolvePropertyPathFromExpression(mainIndicator.number, currentManifest);\n\t\tconst sapCardHeader = {\n\t\t\t\"sap.card\": {\n\t\t\t\theader: {\n\t\t\t\t\tmainIndicator: {\n\t\t\t\t\t\tstate: getCriticality(mainIndicatorValue || mainIndicator.number, isCalcuationType)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\toManifest = merge(currentManifest, sapCardHeader) as CardManifest;\n\t} else {\n\t\toManifest = currentManifest;\n\t}\n\toModel.setProperty(\"/configuration/isEdited\", true);\n\trenderCardPreview(oManifest, getDialogModel() as JSONModel);\n\tupdateCardGroups(oModel);\n\ttranspileIntegrationCardToAdaptive(getDialogModel() as JSONModel);\n}\n\nasync function checkForNavigationProperty(event: Event, isTextArrangement?: boolean) {\n\tconst selectedParameters = event.getParameters() as EventParameters;\n\tconst selectedItem = selectedParameters.selectedItem;\n\tif (!selectedItem) return;\n\tconst model = getDialogModel() as JSONModel;\n\tconst navigationProperties: NavigationParameter[] = model.getProperty(\"/configuration/navigationProperty\") || [];\n\tconst selectedNavigationalProperties: NavigationalData[] = model.getProperty(\"/configuration/selectedNavigationalProperties\") || [];\n\n\tconst existingIndex = selectedNavigationalProperties.findIndex((navItem) => navItem.name === (selectedItem.value || selectedItem.name));\n\tconst selectedProperty = navigationProperties.find((prop) => prop.name === (selectedItem.value || selectedItem.name));\n\n\tconst { name: selectedPropertyName = \"\", properties: selectedPropertyValues = [] } = selectedProperty || {};\n\n\tconst data: NavigationalData = { name: selectedPropertyName, value: selectedPropertyValues };\n\n\tif (existingIndex === -1 && selectedProperty) {\n\t\tselectedNavigationalProperties.push(data);\n\t}\n\tmodel.setProperty(\"/configuration/selectedNavigationalProperties\", selectedNavigationalProperties);\n\n\tif (selectedProperty) {\n\t\tawait updateCardConfigurationData(selectedProperty.name, data);\n\t\tif (selectedParameters.textArrangementChanged) {\n\t\t\tselectedItem.navigationalPropertiesForId = data.value;\n\t\t\tselectedItem.isNavigationForId = data.value.length > 0;\n\t\t\tselectedItem.navigationKeyForId = \"\";\n\t\t} else {\n\t\t\tselectedItem.navigationalPropertiesForDescription = data.value;\n\t\t\tif (isTextArrangement) {\n\t\t\t\tselectedItem.isNavigationForDescription = data.value.length > 0;\n\t\t\t\tselectedItem.navigationKeyForDescription = \"\";\n\t\t\t}\n\t\t}\n\t\tif (isTextArrangement) {\n\t\t\tselectedItem.value = \"\"; // to reset navigation combobox value in the card and dropdown.\n\t\t}\n\t} else {\n\t\tif (selectedParameters.textArrangementChanged) {\n\t\t\tselectedItem.isNavigationForId = false;\n\t\t\tselectedItem.navigationKeyForId = \"\";\n\t\t} else {\n\t\t\tselectedItem.isNavigationForDescription = false;\n\t\t\tselectedItem.navigationKeyForDescription = \"\";\n\t\t}\n\t}\n}\n\nexport function toggleOffAdvancedPanel() {\n\tconst dialog = CoreElement.getElementById(\"cardGeneratorDialog--cardGeneratorDialog\") as Dialog;\n\tconst toggleButton = (dialog.getCustomHeader() as MenuBar).getContentMiddle()[4] as ToggleButton;\n\n\tif (toggleButton.getPressed()) {\n\t\ttoggleButton.setPressed(false);\n\t\tconst toggleEvent = new Event(\"toggle\", toggleButton, {});\n\t\ttoggleAdvancedSetting(toggleEvent);\n\t}\n}\n\nasync function toggleAdvancedSetting(toggleEvent: Event) {\n\tconst toggleButton: ToggleButton = toggleEvent.getSource();\n\ttoggleButton.setEnabled(false);\n\n\tconst splitter = CoreElement.getElementById(\"cardGeneratorDialog--contentSplitter\") as Splitter;\n\tconst controller = {\n\t\tonCriticalityChange: async (criticalityChangeEvent: Event<{ isCalcuationType: boolean }>) => {\n\t\t\tawait checkForNavigationProperty(criticalityChangeEvent, false);\n\t\t\tupdateCriticality(criticalityChangeEvent.getParameter(\"isCalcuationType\") || false);\n\t\t},\n\t\tonArrangementsChange: async (arrangementChangeEvent: Event) => {\n\t\t\tawait checkForNavigationProperty(arrangementChangeEvent, true);\n\t\t\tupdateArrangements();\n\t\t\tconst dialogModel = getDialogModel() as JSONModel;\n\t\t\tconst groups = dialogModel.getProperty(\"/configuration/groups\");\n\t\t\tdialogModel.setProperty(\"/configuration/isEdited\", true);\n\t\t\tfor (let i = 0; i < groups?.[0].items.length; i++) {\n\t\t\t\tconst item = groups[0].items[i];\n\t\t\t\tconst uom = item.value.split(\" \")[1] && item.value.split(\" \")[1].slice(1, -1);\n\n\t\t\t\tif (uom !== \"undefined\" && uom !== undefined) {\n\t\t\t\t\tdialogModel.setProperty(\"/configuration/advancedFormattingOptions/targetProperty\", uom);\n\t\t\t\t} else if (uom === undefined) {\n\t\t\t\t\tdialogModel.setProperty(\"/configuration/advancedFormattingOptions/targetProperty\", \"\");\n\t\t\t\t}\n\n\t\t\t\tif (uom !== \"undefined\" && uom !== undefined && aPropsWithUoM?.indexOf(item?.name) === -1) {\n\t\t\t\t\taPropsWithUoM.push(item?.name);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tonPropertyFormatterChangeFromAdvancedSettings: function () {\n\t\t\tupdateHeaderArrangements();\n\t\t}\n\t};\n\n\tawait Fragment.load({\n\t\tname: \"sap.cards.ap.generator.app.fragments.AdvancedSettings\",\n\t\tcontroller: controller\n\t}).then(function (advancedSettings: Control | Control[]) {\n\t\tif (!toggleButton.getPressed()) {\n\t\t\tconst lastContentArea = splitter.getContentAreas()[1]; // position 1 is the advance panel\n\t\t\tsplitter.removeContentArea(lastContentArea);\n\t\t} else {\n\t\t\tsplitter.insertContentArea(advancedSettings as Control, 1); // position 1 is the advance panel\n\t\t}\n\t\ttoggleButton.setEnabled(true);\n\t\tsetTimeout(() => {\n\t\t\ttranspileIntegrationCardToAdaptive(getDialogModel() as JSONModel);\n\t\t}, 0);\n\t});\n}\n\nfunction setDefaultCardPreview() {\n\tconst comboBox = CoreElement.getElementById(\"cardGeneratorDialog--preview-select\") as ComboBox;\n\tif (comboBox) {\n\t\tconst selectedKey = comboBox.getSelectedKey();\n\t\tif (selectedKey !== \"int-default\") {\n\t\t\tcomboBox.setSelectedKey(\"int-default\");\n\t\t\tconst defaultIntegrationCard = CoreElement.getElementById(\"cardGeneratorDialog--cardPreview\") as Card;\n\t\t\tconst adaptiveCardContainer = CoreElement.getElementById(\"cardGeneratorDialog--adaptiveCardPreviewContainer\") as Control;\n\t\t\tconst customIntegrationCard = CoreElement.getElementById(\"cardGeneratorDialog--custom-entry\") as Control;\n\t\t\tadaptiveCardContainer.setVisible(false);\n\t\t\tcustomIntegrationCard.setVisible(false);\n\t\t\tdefaultIntegrationCard.setVisible(true);\n\n\t\t\tconst previewHostsProperties = getDialogModel(\"previewOptions\").getProperty(\"/hosts\");\n\t\t\tconst defaultPreviewOption = previewHostsProperties.find((option: Host) => option.key === \"int-default\");\n\t\t\tdefaultIntegrationCard.setWidth(defaultPreviewOption.width);\n\t\t\tdefaultIntegrationCard.setHeight(defaultPreviewOption.height);\n\t\t}\n\t}\n}\n\nfunction onBeforeDialogClosed(oEvent: object) {\n\tconst oModel = getDialogModel() as JSONModel;\n\tconst isDialogEdited = oModel?.getProperty(\"/configuration/isEdited\");\n\tconst resourceBundle = (getDialogModel(\"i18n\") as ResourceModel)?.getResourceBundle() as ResourceBundle;\n\tconst warningMessage = resourceBundle?.getText(\"GENERATOR_UNSAVED_CHANGE_WARNING\") || \"\";\n\tif (isDialogEdited) {\n\t\tMessageBox.warning(warningMessage, {\n\t\t\tactions: [MessageBox.Action.OK, MessageBox.Action.CANCEL],\n\t\t\temphasizedAction: MessageBox.Action.OK,\n\t\t\tonClose: function (sAction: string) {\n\t\t\t\tif (sAction === \"OK\") {\n\t\t\t\t\toModel.setProperty(\"/configuration/isEdited\", false);\n\t\t\t\t\ttoggleOffAdvancedPanel();\n\t\t\t\t\tcloseDialog();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\toEvent.preventDefault();\n\t}\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":"app"}},{"offset":{"line":24,"column":0},"map":{"version":3,"file":"ArrangementsEditor.js","names":["sap","ui","define","Button","ComboBox","CustomListItem","HBox","List","Text","Control","CoreElement","ListItem","sap_ui_core_library","Sorter","JSONModel","____config_TextArrangementOptions","____helpers_IntegrationCardHelper","ValueState","TEXTARRANGEMENT_OPTIONS","getPreviewItems","ArrangementsEditor","extend","renderer","apiVersion","render","rm","control","openStart","openEnd","renderControl","_list","_addButton","close","metadata","properties","mode","selectionKeys","type","defaultValue","navigationSelectionKeys","items","aggregations","multiple","visibility","events","change","parameters","value","selectionChange","constructor","_constructor","settings","Control.prototype.constructor.call","this","init","_init","that","showNoData","_propertyComboBox","width","valueState","valueStateText","event","handleComboBoxEvents","source","getSource","bindingContext","getBindingContext","path","getPath","model","getModel","selectedItem","getProperty","textArrangementChanged","fireEvent","getItems","_separatorColon","text","addStyleClass","_idNavigationComboBox","visible","_uomComboBox","_descriptionNavigationComboBox","_separatorColonText","_textArrangementComboBox","controlId","getParameter","getElementById","selectedKey","getSelectedKey","group","textArrangement","refresh","_deleteButton","icon","press","_onDeleteButtonClicked","bind","_onAddButtonClicked","onAfterRendering","_onAfterRendering","entityData","JSON","parse","stringify","getSelectionKeys","name","_setSelectionKeysMap","label","forEach","entity","_textArrangementComboBoxModel","i18nModel","option","getObject","setData","setSelectionKeys","_setSelectionKeys","selectionKeysArr","setAggregation","setProperty","getBindingInfo","propertyBindingPath","getBindingPath","bindAggregation","sorter","length","factory","key","setModel","_getTextArrangementModel","setItems","_setItems","bindProperty","bindingPath","bindItems","template","content","renderType","justifyContent","getMode","alignItems","fitContainer","_getInternalModel","_getItems","getSelectedItem","_getSelectedItem","boundData","push","bindingPathProperty","splice","slice","_handleComboBoxEvents","editor","isNavigation","isTextArrangementID","getValue","navigationProperties","isNavigationalProperty","hasNavigationProperty","propertyKeyForDescription","getGroupName","navigationKey","navigationKeyForDescription","isNavigationForId","groupVal","isValidation","getGroupValue","previewItems","isItemNotSelected","includes","updateControlState","setValueStateForModel","_getGroupName","navigationKeyForId","propertyKeyForId","_getGroupValue","_updateControlState","setValueState","Error","setValueStateText","errorFlag","Information","None","_hasNavigationProperty","propertyToCheck","some","prop","_setValueStateForModel","informativeMessage","property","formattingOptions","item","index","undefined","navigationValueState"],"sources":["ArrangementsEditor.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nimport Button from \"sap/m/Button\";\nimport ComboBox from \"sap/m/ComboBox\";\nimport CustomListItem from \"sap/m/CustomListItem\";\nimport HBox, { $HBoxSettings } from \"sap/m/HBox\";\nimport List from \"sap/m/List\";\nimport Text from \"sap/m/Text\";\nimport type Event from \"sap/ui/base/Event\";\nimport Control, { $ControlSettings } from \"sap/ui/core/Control\";\nimport type UI5Element from \"sap/ui/core/Element\";\nimport type { MetadataOptions } from \"sap/ui/core/Element\";\nimport CoreElement from \"sap/ui/core/Element\";\nimport ListItem from \"sap/ui/core/ListItem\";\nimport RenderManager from \"sap/ui/core/RenderManager\";\nimport { ValueState } from \"sap/ui/core/library\";\nimport type Context from \"sap/ui/model/Context\";\nimport type Model from \"sap/ui/model/Model\";\nimport Sorter from \"sap/ui/model/Sorter\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\nimport type ResourceModel from \"sap/ui/model/resource/ResourceModel\";\nimport { TEXTARRANGEMENT_OPTIONS } from \"../../config/TextArrangementOptions\";\nimport { getPreviewItems } from \"../../helpers/IntegrationCardHelper\";\nimport type { PropertyInfo } from \"../../odata/ODataTypes\";\nimport type { NavigationParameter, Property, UnitOfMeasures } from \"../../types/PropertyTypes\";\n\nexport type ArrangementOptions = {\n\tname: string;\n\tvalue: string;\n\tpropertyKeyForId?: string;\n\tpropertyKeyForDescription: string;\n\tnavigationKeyForId: string;\n\tnavigationKeyForDescription: string;\n\tisNavigationForId: boolean;\n\tisNavigationForDescription: boolean;\n\tnavigationalPropertiesForId: Property[];\n\tnavigationalPropertiesForDescription: Property[];\n\ttextArrangement?: string;\n\tarrangementType: string;\n\tvalueState: ValueState;\n\tvalueStateText: string;\n\tnavigationValueState: ValueState;\n\tnavigationValueStateText: string;\n};\n\ninterface IArrangementsEditor {\n\tgetMode(): string;\n\tgetSelectionKeys(): object;\n\tgetItems(): Array<ArrangementOptions>;\n\t_addButton: Button;\n\t_list: List;\n}\n\ninterface ArrangementsEditorSettings extends $ControlSettings {\n\tmode: string;\n\tselectionKeys: object;\n\tnavigationSelectionKeys: object;\n\titems: object;\n\tchange?: (event: ArrangementsEditorChangeEvent) => void;\n\tselectionChange?: (event: ArrangementsEditorSelectionChangeEvent) => void;\n}\ninterface ArrangementsEditorChangeEventParameters {\n\tvalue?: number;\n}\ninterface ArrangementsEditorSelectionChangeEventParameters {\n\tvalue?: number;\n}\n\ntype ArrangementsEditorChangeEvent = Event<ArrangementsEditorChangeEventParameters>;\ntype ArrangementsEditorSelectionChangeEvent = Event<ArrangementsEditorSelectionChangeEventParameters>;\n\ntype PropertyMap = {\n\t[key: string]: string;\n};\ntype PropertyInfoMap = Array<PropertyMap>;\n\n/**\n * @namespace sap.cards.ap.generator.app.controls\n */\nexport default class ArrangementsEditor extends Control {\n\t_list!: List;\n\t_propertyComboBox!: ComboBox;\n\t_idNavigationComboBox!: ComboBox;\n\t_addButton!: Button;\n\t_separatorColon!: Text;\n\t_uomComboBox!: ComboBox;\n\t_descriptionNavigationComboBox!: ComboBox;\n\t_separatorColonText!: Text;\n\t_textArrangementComboBox!: ComboBox;\n\t_deleteButton!: Button;\n\terrorFlag!: boolean;\n\t_setSelectionKeysMap!: PropertyInfo;\n\n\tstatic readonly metadata: MetadataOptions = {\n\t\tproperties: {\n\t\t\tmode: \"string\",\n\t\t\tselectionKeys: { type: \"object\", defaultValue: {} },\n\t\t\tnavigationSelectionKeys: { type: \"object\", defaultValue: {} },\n\t\t\titems: { type: \"object\", defaultValue: {} }\n\t\t},\n\t\taggregations: {\n\t\t\t_list: { type: \"sap.m.List\", multiple: false, visibility: \"hidden\" }\n\t\t},\n\t\tevents: {\n\t\t\tchange: {\n\t\t\t\tparameters: {\n\t\t\t\t\tvalue: { type: \"int\" }\n\t\t\t\t}\n\t\t\t},\n\t\t\tselectionChange: {\n\t\t\t\tparameters: {\n\t\t\t\t\tvalue: { type: \"int\" }\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tconstructor(settings: ArrangementsEditorSettings) {\n\t\tsuper(settings);\n\t}\n\n\tstatic renderer = {\n\t\tapiVersion: 2,\n\t\trender: function (rm: RenderManager, control: IArrangementsEditor): void {\n\t\t\trm.openStart(\"div\", control as unknown as UI5Element);\n\t\t\trm.openEnd();\n\t\t\trm.renderControl(control._list);\n\t\t\trm.renderControl(control._addButton);\n\t\t\trm.close(\"div\");\n\t\t}\n\t};\n\n\t/**\n\t * Initializes the ArrangementsEditor custom control\n\t *\n\t * This method sets up various controls and event handlers used by the methods in this control\n\t *\n\t * @returns {void}\n\t */\n\n\tinit(): void {\n\t\tconst that = this;\n\t\tthis._list = new List({\n\t\t\tshowNoData: false\n\t\t});\n\t\tthis._propertyComboBox = new ComboBox({\n\t\t\twidth: \"100%\",\n\t\t\tvalueState: \"{= ${valueState} }\",\n\t\t\tvalueStateText: \"{= ${valueStateText} }\",\n\t\t\tselectionChange: function (event: Event) {\n\t\t\t\tthat.handleComboBoxEvents(event, that, false, true);\n\t\t\t},\n\t\t\tchange: function (event: Event) {\n\t\t\t\tconst source: ComboBox = event.getSource();\n\t\t\t\tconst bindingContext = source.getBindingContext() as Context;\n\t\t\t\tconst path = bindingContext?.getPath() || \"\";\n\t\t\t\tconst model = that.getModel() as JSONModel;\n\t\t\t\tconst selectedItem = model.getProperty(path);\n\t\t\t\tconst textArrangementChanged = true;\n\t\t\t\tthat.fireEvent(\"change\", {\n\t\t\t\t\tvalue: that.getItems(),\n\t\t\t\t\tselectedItem,\n\t\t\t\t\ttextArrangementChanged\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\tthis._separatorColon = new Text({ text: \":\" }).addStyleClass(\"sapUiTinyMarginTop sapUiTinyMarginBeginEnd\");\n\t\tthis._idNavigationComboBox = new ComboBox({\n\t\t\twidth: \"100%\",\n\t\t\tvisible: \"{= !!${isNavigationForId} }\",\n\t\t\tvalueState: \"{= ${navigationValueState} }\",\n\t\t\tvalueStateText: \"{= ${navigationValueStateText} }\",\n\t\t\tchange: function () {\n\t\t\t\tthat.fireEvent(\"change\", {\n\t\t\t\t\tvalue: that.getItems()\n\t\t\t\t});\n\t\t\t},\n\t\t\tselectionChange: function (event: Event) {\n\t\t\t\tthat.handleComboBoxEvents(event, that, true);\n\t\t\t}\n\t\t}).addStyleClass(\"sapUiTinyMarginBegin\");\n\t\tthis._uomComboBox = new ComboBox({\n\t\t\twidth: \"100%\",\n\t\t\tchange: function (event: Event) {\n\t\t\t\tconst source: ComboBox = event.getSource();\n\t\t\t\tconst bindingContext = source.getBindingContext() as Context;\n\t\t\t\tconst path = bindingContext?.getPath() || \"\";\n\t\t\t\tconst model = that.getModel() as JSONModel;\n\t\t\t\tconst selectedItem = model.getProperty(path);\n\t\t\t\tthat.fireEvent(\"change\", {\n\t\t\t\t\tvalue: that.getItems(),\n\t\t\t\t\tselectedItem\n\t\t\t\t});\n\t\t\t},\n\t\t\tselectionChange: function (event: Event) {\n\t\t\t\tthat.handleComboBoxEvents(event, that);\n\t\t\t}\n\t\t});\n\t\tthis._descriptionNavigationComboBox = new ComboBox({\n\t\t\twidth: \"100%\",\n\t\t\tvisible: \"{= !!${isNavigationForDescription} }\",\n\t\t\tchange: function () {\n\t\t\t\tthat.fireEvent(\"change\", {\n\t\t\t\t\tvalue: that.getItems()\n\t\t\t\t});\n\t\t\t},\n\t\t\tselectionChange: function (event: Event) {\n\t\t\t\tthat.handleComboBoxEvents(event, that, true);\n\t\t\t}\n\t\t}).addStyleClass(\"sapUiTinyMarginBegin\");\n\t\tthis._separatorColonText = new Text({ text: \":\" }).addStyleClass(\"sapUiTinyMarginTop sapUiTinyMarginBeginEnd\");\n\t\tthis._textArrangementComboBox = new ComboBox({\n\t\t\twidth: \"100%\",\n\t\t\tchange: function () {\n\t\t\t\tthat.fireEvent(\"change\", {\n\t\t\t\t\ttype: \"text\",\n\t\t\t\t\tvalue: that.getItems()\n\t\t\t\t});\n\t\t\t},\n\t\t\tselectionChange: function (event: Event) {\n\t\t\t\tconst controlId = (event.getParameter as (param: string) => string)(\"id\");\n\t\t\t\tconst control = CoreElement.getElementById(controlId) as ComboBox;\n\t\t\t\tconst selectedKey = control.getSelectedKey();\n\t\t\t\tconst source: ComboBox = event.getSource();\n\t\t\t\tconst bindingContext = source.getBindingContext() as Context;\n\t\t\t\tconst path = bindingContext?.getPath() || \"\";\n\t\t\t\tconst model = that.getModel() as JSONModel;\n\t\t\t\tconst group = model.getProperty(path);\n\t\t\t\tgroup.textArrangement = `${selectedKey}`;\n\t\t\t\tmodel.refresh();\n\t\t\t}\n\t\t});\n\t\tthis._deleteButton = new Button({\n\t\t\ticon: \"sap-icon://delete\",\n\t\t\ttype: \"Transparent\",\n\t\t\tpress: this._onDeleteButtonClicked.bind(this)\n\t\t});\n\t\tthis._addButton = new Button({\n\t\t\ticon: \"sap-icon://add\",\n\t\t\ttype: \"Transparent\",\n\t\t\tpress: this._onAddButtonClicked.bind(this)\n\t\t});\n\t}\n\n\t/**\n\t * Performs actions after ArrangementsEditor custom control has been rendered\n\t *\n\t * This method is called after the control has been rendered in the UI\n\t * It updates entity data and refreshes the internal model of the TextArrangementComboBox\n\t *\n\t * @returns {void}\n\t */\n\n\tonAfterRendering(): void {\n\t\tconst entityData = JSON.parse(JSON.stringify(this.getSelectionKeys())) as PropertyInfoMap;\n\t\tconst name = this._setSelectionKeysMap.name ?? \"\";\n\t\tconst label = this._setSelectionKeysMap.label;\n\t\tconst textArrangement = this._setSelectionKeysMap.textArrangement ?? \"\";\n\t\tentityData.forEach((entity) => {\n\t\t\tentity.name = entity[name] as string;\n\t\t\tentity.label = entity[label] as string;\n\t\t\tentity.textArrangement = entity[textArrangement] as string;\n\t\t});\n\t\tconst _textArrangementComboBoxModel = this._textArrangementComboBox.getModel(\"internal\") as JSONModel;\n\t\tconst i18nModel = this.getModel(\"i18n\") as ResourceModel;\n\t\tTEXTARRANGEMENT_OPTIONS.forEach((option) => {\n\t\t\toption.label = i18nModel.getObject(option.label);\n\t\t});\n\t\t_textArrangementComboBoxModel.setData(TEXTARRANGEMENT_OPTIONS, true);\n\t\t_textArrangementComboBoxModel.refresh();\n\t}\n\n\t/**\n\t * Sets the selection keys\n\t *\n\t * This method forms the _setSelectionKeysMap from selectionKeys binding information,\n\t * and binds aggregation items for ComboBox controls, updates internal model of text arrangement ComboBox\n\t *\n\t * @param {Array<PropertyInfo>} selectionKeysArr - The array of selection keys\n\t * @returns {void}\n\t */\n\n\tsetSelectionKeys(selectionKeysArr: Array<PropertyInfo>): void {\n\t\tconst that = this;\n\t\tthat.setAggregation(\"_list\", that._list);\n\t\tthis.setProperty(\"selectionKeys\", selectionKeysArr);\n\t\tthis.setProperty(\"navigationSelectionKeys\", selectionKeysArr);\n\t\tthis._setSelectionKeysMap = this.getBindingInfo(\"selectionKeys\").parameters as PropertyInfo;\n\t\tconst propertyBindingPath = this.getBindingPath(\"navigationSelectionKeys\") || \"\";\n\t\tthis._propertyComboBox.bindAggregation(\"items\", {\n\t\t\tpath: propertyBindingPath,\n\t\t\tsorter: [new Sorter(\"category\", true, true), new Sorter(\"label\", false)],\n\t\t\tlength: 500,\n\t\t\tfactory: function () {\n\t\t\t\treturn new ListItem({\n\t\t\t\t\tkey: \"{\" + that._setSelectionKeysMap.name + \"}\",\n\t\t\t\t\ttext: \"{\" + that._setSelectionKeysMap.label + \"}\"\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\tthis._uomComboBox.bindAggregation(\"items\", {\n\t\t\tpath: propertyBindingPath,\n\t\t\tsorter: [new Sorter(\"category\", true, true), new Sorter(\"label\", false)],\n\t\t\tlength: 500,\n\t\t\tfactory: function () {\n\t\t\t\treturn new ListItem({\n\t\t\t\t\tkey: \"{\" + that._setSelectionKeysMap.name + \"}\",\n\t\t\t\t\ttext: \"{\" + that._setSelectionKeysMap.label + \"}\"\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\tthat._idNavigationComboBox.bindAggregation(\"items\", {\n\t\t\tpath: \"navigationalPropertiesForId/\",\n\t\t\tsorter: new Sorter(\"label\", false),\n\t\t\tlength: 500,\n\t\t\tfactory: function () {\n\t\t\t\treturn new ListItem({\n\t\t\t\t\tkey: \"{name}\",\n\t\t\t\t\ttext: \"{labelWithValue}\"\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\tthat._descriptionNavigationComboBox.bindAggregation(\"items\", {\n\t\t\tpath: \"navigationalPropertiesForDescription/\",\n\t\t\tsorter: new Sorter(\"label\", false),\n\t\t\tlength: 500,\n\t\t\tfactory: function () {\n\t\t\t\treturn new ListItem({\n\t\t\t\t\tkey: \"{name}\",\n\t\t\t\t\ttext: \"{labelWithValue}\"\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\tthis._textArrangementComboBox.setModel(this._getTextArrangementModel(), \"internal\");\n\t\tthis._textArrangementComboBox.bindAggregation(\"items\", {\n\t\t\tpath: \"internal>/\",\n\t\t\tfactory: function () {\n\t\t\t\treturn new ListItem({\n\t\t\t\t\tkey: \"{internal>name}\",\n\t\t\t\t\ttext: \"{internal>label}\"\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Sets the items property with the selectionKeysArr provided\n\t * bind items for _list control using binding path of items,\n\t * creates a custom layout for each item using a HBox and arranging the content within the HBox according to the specified styles\n\t *\n\t * @param {Array<ArrangementOptions>} selectionKeysArr - The array of items to be set\n\t * @returns {void}\n\t */\n\n\tsetItems(selectionKeysArr: Array<ArrangementOptions>): void {\n\t\tthis.setProperty(\"items\", selectionKeysArr, true);\n\t\tthis._propertyComboBox.bindProperty(\"selectedKey\", { path: \"propertyKeyForId\" });\n\t\tthis._idNavigationComboBox.bindProperty(\"selectedKey\", { path: \"navigationKeyForId\" });\n\t\tthis._uomComboBox.bindProperty(\"selectedKey\", { path: \"propertyKeyForDescription\" });\n\t\tthis._descriptionNavigationComboBox.bindProperty(\"selectedKey\", { path: \"navigationKeyForDescription\" });\n\t\tthis._textArrangementComboBox.bindProperty(\"selectedKey\", { path: \"arrangementType\" });\n\t\tconst bindingPath = this.getBindingPath(\"items\") ?? \"\";\n\n\t\tthis._list.bindItems({\n\t\t\tpath: bindingPath,\n\t\t\ttemplate: new CustomListItem({\n\t\t\t\tcontent: [\n\t\t\t\t\tnew HBox({\n\t\t\t\t\t\trenderType: \"Bare\",\n\t\t\t\t\t\tjustifyContent: \"SpaceAround\",\n\t\t\t\t\t\titems: [\n\t\t\t\t\t\t\tthis._propertyComboBox,\n\t\t\t\t\t\t\tthis._idNavigationComboBox,\n\t\t\t\t\t\t\tthis._separatorColon,\n\t\t\t\t\t\t\tthis._uomComboBox,\n\t\t\t\t\t\t\tthis.getMode() !== \"uom\" && this._separatorColonText,\n\t\t\t\t\t\t\tthis.getMode() !== \"uom\" && this._descriptionNavigationComboBox,\n\t\t\t\t\t\t\tthis.getMode() !== \"uom\" && this._separatorColonText,\n\t\t\t\t\t\t\tthis.getMode() !== \"uom\" && this._textArrangementComboBox,\n\t\t\t\t\t\t\tthis._deleteButton\n\t\t\t\t\t\t],\n\t\t\t\t\t\twidth: \"100%\",\n\t\t\t\t\t\talignItems: \"Start\",\n\t\t\t\t\t\tfitContainer: true\n\t\t\t\t\t} as $HBoxSettings)\n\t\t\t\t]\n\t\t\t})\n\t\t});\n\t}\n\n\t/**\n\t * Retrieves the internal model of the ArrangementsEditor control\n\t *\n\t * This method checks if the internal model exists. If not, it creates a new JSON model\n\t * and sets it as the internal model. It then returns the internal model\n\t *\n\t * @returns {sap.ui.model.Model} The internal model of the control\n\t */\n\n\t_getInternalModel(): Model {\n\t\tif (!this.getModel(\"internal\")) {\n\t\t\tconst model = new JSONModel({});\n\t\t\tthis.setModel(model, \"internal\");\n\t\t}\n\t\treturn this.getModel(\"internal\") as Model;\n\t}\n\n\t/**\n\t * Retrieves the items from the model\n\t *\n\t * This method fetches the items from the model using the binding path for items\n\t *\n\t * @returns {Array<ArrangementOptions>} An array containing the items retrieved from the model\n\t */\n\n\tgetItems(): Array<ArrangementOptions> {\n\t\tconst path = this.getBindingPath(\"items\") || \"\";\n\t\treturn (this.getModel() as JSONModel).getProperty(path);\n\t}\n\tgetSelectedItem(): Array<ArrangementOptions> {\n\t\tconst path = this.getBindingPath(\"items\") || \"\";\n\t\treturn (this.getModel() as JSONModel).getProperty(path);\n\t}\n\n\t/**\n\t * Creates and returns a JSON model for text arrangement options\n\t *\n\t * This method creates a new JSON model using the provided text arrangement options and returns it.\n\t *\n\t * @returns {sap.ui.model.json.JSONModel} A JSON model containing text arrangement options\n\t */\n\n\t_getTextArrangementModel(): JSONModel {\n\t\treturn new JSONModel(TEXTARRANGEMENT_OPTIONS);\n\t}\n\n\t/**\n\t * Handles the click event of the add button, adds a new item to the array and refreshes the model\n\t *\n\t * @returns {void}\n\t */\n\n\t_onAddButtonClicked(): void {\n\t\tconst model = this.getModel();\n\t\tconst path = this.getBindingPath(\"items\") || \"\";\n\t\tif (model) {\n\t\t\tlet boundData = model.getProperty(path);\n\t\t\tif (!boundData) {\n\t\t\t\tboundData = [];\n\t\t\t}\n\t\t\tboundData.push({});\n\t\t\tmodel.refresh();\n\t\t}\n\t}\n\n\t/**\n\t * Handles the click event of the delete button, removes item to be deleted, refreshes the model and fires a change event\n\t *\n\t * @param {Event} event - The event object representing the click event\n\t * @returns {void}\n\t */\n\n\t_onDeleteButtonClicked(event: Event): void {\n\t\tconst source = event.getSource() as Control;\n\t\tconst path = (source.getBindingContext() as Context).getPath();\n\t\tconst bindingPath = this.getBindingPath(\"items\") || \"\";\n\t\tconst model = this.getModel() as JSONModel;\n\t\tconst bindingPathProperty = model.getProperty(bindingPath);\n\t\tbindingPathProperty && bindingPathProperty.splice(path.slice(path.length - 1), 1);\n\t\tmodel.refresh();\n\t\tthis.fireEvent(\"change\", {\n\t\t\tvalue: this.getItems()\n\t\t});\n\t}\n\n\thandleComboBoxEvents(event: Event, editor: ArrangementsEditor, isNavigation: boolean = false, isTextArrangementID: boolean = false) {\n\t\tconst controlId = (event.getParameter as (param: string) => string)(\"id\");\n\t\tconst control = CoreElement.getElementById(controlId) as ComboBox;\n\t\tlet selectedKey = control.getSelectedKey();\n\t\tconst source = event.getSource();\n\t\tconst bindingContext = (source as ComboBox).getBindingContext() as Context;\n\t\tconst path = bindingContext?.getPath() || \"\";\n\t\tconst value = control.getValue();\n\t\tconst model = editor.getModel() as JSONModel;\n\t\tconst group = model.getProperty(path);\n\t\tconst i18nModel = editor.getModel(\"i18n\") as ResourceModel;\n\n\t\tconst navigationProperties: NavigationParameter[] = model.getProperty(\"/configuration/navigationProperty\") || [];\n\t\tconst isNavigationalProperty = this.hasNavigationProperty(navigationProperties, group.propertyKeyForDescription);\n\t\t// Determine the group name based on conditions\n\t\tgroup.name = this.getGroupName(group, isNavigation, isTextArrangementID);\n\t\tlet navigationKey = \"\";\n\t\tif (group.navigationKeyForDescription) {\n\t\t\tnavigationKey = `/${group.navigationKeyForDescription}`;\n\t\t}\n\t\tif (group.isNavigationForId) {\n\t\t\tselectedKey = group.name;\n\t\t}\n\n\t\tconst groupVal = isNavigationalProperty ? `${group.propertyKeyForDescription}${navigationKey}` : group.propertyKeyForDescription;\n\t\tconst isValidation = group.name === groupVal;\n\t\t// Update group value based on conditions\n\t\tif (!isValidation) {\n\t\t\tgroup.value = this.getGroupValue(group, isNavigation, isTextArrangementID, selectedKey, navigationProperties);\n\t\t}\n\n\t\tconst previewItems = getPreviewItems(model);\n\t\tconst isItemNotSelected = selectedKey !== groupVal && !previewItems.includes(group.name);\n\t\tthis.updateControlState(control, value, selectedKey, isValidation, i18nModel, editor, isItemNotSelected);\n\t\tthis.setValueStateForModel(model, i18nModel, selectedKey, bindingContext, editor, isItemNotSelected);\n\n\t\tmodel.refresh();\n\t\treturn group;\n\t}\n\n\tgetGroupName(group: ArrangementOptions, isNavigation: boolean, isTextArrangementID: boolean): string {\n\t\tif (isNavigation) {\n\t\t\treturn group.navigationKeyForId ? `${group.propertyKeyForId}/${group.navigationKeyForId}` : `${group.propertyKeyForId}`;\n\t\t}\n\t\tif (isTextArrangementID) {\n\t\t\treturn `${group.propertyKeyForId}`;\n\t\t}\n\t\treturn group.navigationKeyForId ? `${group.propertyKeyForId}/${group.navigationKeyForId}` : `${group.propertyKeyForId}`;\n\t}\n\n\tgetGroupValue(\n\t\tgroup: ArrangementOptions,\n\t\tisNavigation: boolean,\n\t\tisTextArrangementID: boolean,\n\t\tselectedKey: string,\n\t\tnavigationProperties: NavigationParameter[]\n\t): string {\n\t\tconst { propertyKeyForId, propertyKeyForDescription, navigationKeyForDescription } = group;\n\n\t\tif (isNavigation) {\n\t\t\treturn navigationKeyForDescription ? `${propertyKeyForDescription}/${navigationKeyForDescription}` : propertyKeyForDescription;\n\t\t}\n\n\t\tif (isTextArrangementID) {\n\t\t\tconst isNavigationalProperty = this.hasNavigationProperty(navigationProperties, propertyKeyForId as string);\n\t\t\tif (navigationKeyForDescription) {\n\t\t\t\treturn isNavigationalProperty ? `${propertyKeyForId}` : `${propertyKeyForDescription}/${navigationKeyForDescription}`;\n\t\t\t}\n\t\t\treturn isNavigationalProperty ? (propertyKeyForId as string) : propertyKeyForDescription;\n\t\t}\n\n\t\treturn propertyKeyForDescription || selectedKey;\n\t}\n\n\tupdateControlState(\n\t\tcontrol: ComboBox,\n\t\tvalue: string,\n\t\tselectedKey: string,\n\t\tisValidation: boolean,\n\t\ti18nModel: ResourceModel,\n\t\teditor: ArrangementsEditor,\n\t\tisItemNotSelected: boolean\n\t) {\n\t\tif (!selectedKey && value) {\n\t\t\tcontrol.setValueState(ValueState.Error);\n\t\t\tcontrol.setValueStateText(i18nModel.getObject(\"INVALID_SELECTION\"));\n\t\t\teditor.errorFlag = true;\n\t\t} else if (isValidation) {\n\t\t\tcontrol.setValueState(ValueState.Error);\n\t\t\tcontrol.setValueStateText(i18nModel.getObject(\"SAME_SELECTION\"));\n\t\t\teditor.errorFlag = true;\n\t\t} else if (isItemNotSelected && value) {\n\t\t\tcontrol.setValueState(ValueState.Information);\n\t\t\tcontrol.setValueStateText(i18nModel.getObject(\"UNSELECTED_ITEM\"));\n\t\t\teditor.errorFlag = false;\n\t\t} else {\n\t\t\teditor.errorFlag = false;\n\t\t\tcontrol.setValueState(ValueState.None);\n\t\t\tcontrol.setValueStateText(\"\");\n\t\t}\n\t}\n\n\thasNavigationProperty(navigationProperties: NavigationParameter[], propertyToCheck: string) {\n\t\treturn navigationProperties.length > 0 && navigationProperties.some((prop) => prop.name === propertyToCheck);\n\t}\n\n\t/**\n\t * The function sets the ValueState of properties present in advanced formatting panel,\n\t * to ValueState.Information or ValueState.None on the basis of properties present in card preview.\n\t * @param {JSONModel} model - The JSON model containing the card configuration.\n\t * @param {ResourceModel} i18nModel - The resource model for localization.\n\t * @param {string} selectedKey - The selected key from the ComboBox.\n\t * @param {Context} bindingContext - The binding context of the ComboBox.\n\t * @param {ArrangementsEditor} editor - The ArrangementsEditor instance.\n\t * @param {boolean} isItemNotSelected - Flag indicating if the item is not present in the card preview.\n\t * @returns {void}\n\t */\n\tsetValueStateForModel(\n\t\tmodel: JSONModel,\n\t\ti18nModel: ResourceModel,\n\t\tselectedKey: string,\n\t\tbindingContext: Context,\n\t\teditor: ArrangementsEditor,\n\t\tisItemNotSelected: boolean\n\t): void {\n\t\tconst informativeMessage = i18nModel.getObject(\"UNSELECTED_ITEM\");\n\t\t[\"unitOfMeasures\", \"textArrangements\"].forEach((property) => {\n\t\t\tif (bindingContext?.getPath()?.includes(property)) {\n\t\t\t\tconst formattingOptions = model.getProperty(`/configuration/advancedFormattingOptions/${property}`) ?? [];\n\t\t\t\tformattingOptions.forEach((item: UnitOfMeasures, index: number) => {\n\t\t\t\t\tlet isNavigationalProperty: boolean = false;\n\t\t\t\t\tif (item.isNavigationForId && item.navigationKeyForId) {\n\t\t\t\t\t\tisNavigationalProperty = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (!editor.errorFlag && isItemNotSelected && selectedKey === item.name) {\n\t\t\t\t\t\tif (item.valueState === ValueState.None || item.valueState === undefined) {\n\t\t\t\t\t\t\tmodel.setProperty(\n\t\t\t\t\t\t\t\t`/configuration/advancedFormattingOptions/${property}/${index}/valueState`,\n\t\t\t\t\t\t\t\tValueState.Information\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tmodel.setProperty(\n\t\t\t\t\t\t\t\t`/configuration/advancedFormattingOptions/${property}/${index}/valueStateText`,\n\t\t\t\t\t\t\t\tinformativeMessage\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tisNavigationalProperty &&\n\t\t\t\t\t\t\t(item.navigationValueState === ValueState.None || item.navigationValueState === undefined)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tmodel.setProperty(\n\t\t\t\t\t\t\t\t`/configuration/advancedFormattingOptions/${property}/${index}/navigationValueState`,\n\t\t\t\t\t\t\t\tValueState.Information\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tmodel.setProperty(\n\t\t\t\t\t\t\t\t`/configuration/advancedFormattingOptions/${property}/${index}/navigationValueStateText`,\n\t\t\t\t\t\t\t\tinformativeMessage\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (!editor.errorFlag && !isItemNotSelected && selectedKey === item.name) {\n\t\t\t\t\t\tif (item.valueState === ValueState.Information) {\n\t\t\t\t\t\t\tmodel.setProperty(`/configuration/advancedFormattingOptions/${property}/${index}/valueState`, ValueState.None);\n\t\t\t\t\t\t\tmodel.setProperty(`/configuration/advancedFormattingOptions/${property}/${index}/valueStateText`, \"\");\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (isNavigationalProperty && item.navigationValueState === ValueState.Information) {\n\t\t\t\t\t\t\tmodel.setProperty(\n\t\t\t\t\t\t\t\t`/configuration/advancedFormattingOptions/${property}/${index}/navigationValueState`,\n\t\t\t\t\t\t\t\tValueState.None\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tmodel.setProperty(`/configuration/advancedFormattingOptions/${property}/${index}/navigationValueStateText`, \"\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":"app/controls"}},{"offset":{"line":31,"column":0},"map":{"version":3,"file":"CompactFormatterSelection.js","names":["sap","ui","define","deepClone","Button","CheckBox","ComboBox","CustomListItem","FlexBox","HBox","Input","List","Select","StepInput","Text","VBox","Control","Item","ListItem","JSONModel","____config_FormatterOptions","____utils_CommonUtils","getFormatterConfiguration","checkForDateType","CompactFormatterSelection","extend","renderer","apiVersion","render","rm","control","getType","_deleteButton","setVisible","_applyButton","openStart","openEnd","renderControl","_selectorControl","_List","close","metadata","properties","type","formatters","aggregations","_list","multiple","visibility","events","change","parameters","value","constructor","_constructor","settings","Control.prototype.constructor.call","this","init","_init","showSeparators","Control.prototype.init.call","setFormatters","_setFormatters","setAggregation","setProperty","model","getModel","selectedProperty","getProperty","getPropertyType","emptyObj","selectedFormatter","find","formatter","property","createControl","formatterName","i18nModel","displayName","getObject","splice","_refreshControl","setSelectedKey","_getPropertyType","entity","navSelectedProperty","split","navigationProperty","selectedNavEntity","prop","name","listModel","listItems","bindItems","path","template","content","justifyContent","bindAggregation","factory","_createParametersControl","bind","setModel","_createControl","formatterConfigList","isDateType","isNumberType","filter","formatterConfig","visible","formatterListModel","formattersList","width","items","key","text","onFormatterSelected","addStyleClass","icon","press","deleteFormatter","applyFormatter","id","context","propertyType","inputControl","hBoxItems","selected","_createSelectControl","options","flexBoxItems","i","length","currentProperty","rowItem","setDefaultStepInputValue","bindingInfo","min","max","push","hBox","direction","_setDefaultStepInputValue","defaultValue","selectedKey","propertyOptions","item","addItem","_onFormatterSelected","event","targetProperty","source","getSource","getSelectedKey","isSelectedKey","Object","assign","_applyFormatter","listItemsData","_updatePropertyValueFormatters","propertyValueFormatters","fireEvent","_deleteFormatter","getFormatters","index","forEach","propertyValueFormatter","parameterLength"],"sources":["CompactFormatterSelection.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nimport deepClone from \"sap/base/util/deepClone\";\nimport Button from \"sap/m/Button\";\nimport CheckBox from \"sap/m/CheckBox\";\nimport ComboBox from \"sap/m/ComboBox\";\nimport CustomListItem from \"sap/m/CustomListItem\";\nimport FlexBox from \"sap/m/FlexBox\";\nimport HBox from \"sap/m/HBox\";\nimport Input from \"sap/m/Input\";\nimport List from \"sap/m/List\";\nimport Select from \"sap/m/Select\";\nimport StepInput from \"sap/m/StepInput\";\nimport Text from \"sap/m/Text\";\nimport VBox from \"sap/m/VBox\";\nimport type Event from \"sap/ui/base/Event\";\nimport { PropertyBindingInfo } from \"sap/ui/base/ManagedObject\";\nimport Control, { $ControlSettings } from \"sap/ui/core/Control\";\nimport type { MetadataOptions } from \"sap/ui/core/Element\";\nimport Item from \"sap/ui/core/Item\";\nimport ListItem from \"sap/ui/core/ListItem\";\nimport RenderManager from \"sap/ui/core/RenderManager\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\nimport type ResourceModel from \"sap/ui/model/resource/ResourceModel\";\nimport { getFormatterConfiguration } from \"../../config/FormatterOptions\";\nimport type { FormatterConfiguration, FormatterConfigurationMap } from \"../../helpers/Formatter\";\nimport type { PropertyInfoMap } from \"../../odata/ODataTypes\";\nimport { checkForDateType } from \"../../utils/CommonUtils\";\n\nexport default interface FormatterSelection {\n\tgetType(): string;\n\tgetFormatters(): FormatterConfigurationMap;\n}\ninterface PropertyType {\n\tvalue: number;\n\tdefaultValue: number;\n}\n\ntype PropertyOptions = {\n\tname: string;\n\tvalue: string;\n};\n\ninterface CompactFormatterSelectionSettings extends $ControlSettings {\n\ttype: string;\n\tformatters: FormatterConfiguration;\n\tchange?: (event: CompactFormatterSelection$ChangeEvent) => void;\n}\n\ninterface CompactFormatterSelectionChangeEventParameters {\n\tvalue?: object;\n}\n\ntype CompactFormatterSelection$ChangeEvent = Event<CompactFormatterSelectionChangeEventParameters>;\n\n/**\n * @namespace sap.cards.ap.generator.app.controls\n */\nexport default class CompactFormatterSelection extends Control {\n\t_selectorControl!: ComboBox;\n\t_deleteButton!: Button;\n\t_applyButton!: Button;\n\t_List!: List;\n\n\tstatic readonly metadata: MetadataOptions = {\n\t\tproperties: {\n\t\t\ttype: \"string\",\n\t\t\tformatters: \"object\"\n\t\t},\n\t\taggregations: {\n\t\t\t_list: { type: \"sap.m.List\", multiple: false, visibility: \"hidden\" }\n\t\t},\n\t\tevents: {\n\t\t\tchange: {\n\t\t\t\tparameters: {\n\t\t\t\t\tvalue: { type: \"object\" }\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tconstructor(settings: CompactFormatterSelectionSettings) {\n\t\tsuper(settings);\n\t}\n\n\tstatic renderer = {\n\t\tapiVersion: 2,\n\t\trender: function (rm: RenderManager, control: FormatterSelection): void {\n\t\t\tif (control.getType() === \"COMPACT\") {\n\t\t\t\tcontrol._deleteButton.setVisible(false);\n\t\t\t\tcontrol._applyButton.setVisible(false);\n\t\t\t}\n\t\t\trm.openStart(\"div\", control);\n\t\t\trm.openEnd();\n\t\t\trm.renderControl(control._selectorControl);\n\t\t\trm.renderControl(control._deleteButton);\n\t\t\trm.renderControl(control._List);\n\t\t\trm.renderControl(control._applyButton);\n\t\t\trm.close(\"div\");\n\t\t}\n\t};\n\n\t/**\n\t * Initializes the component\n\t * This method creates a new List control (_List) and calls the superclass's init method\n\t *\n\t * @returns {void}\n\t */\n\n\tinit(): void {\n\t\tthis._List = new List({\n\t\t\tshowSeparators: \"Inner\"\n\t\t});\n\t\tsuper.init();\n\t}\n\n\t/**\n\t * Sets the formatters for the control\n\t *\n\t * @param {FormatterConfigurationMap} formatters - An array of Formatter objects representing the formatters to be set.\n\t * @returns {void}\n\t */\n\n\tsetFormatters(formatters: FormatterConfigurationMap): void {\n\t\tthis.setAggregation(\"_list\", this._List);\n\t\tthis.setProperty(\"formatters\", formatters, true);\n\t\tconst model = this.getModel() as JSONModel;\n\t\tconst selectedProperty = model.getProperty(\"/configuration/advancedFormattingOptions/targetFormatterProperty\");\n\t\tconst type = this.getPropertyType(selectedProperty);\n\t\tconst emptyObj = {} as FormatterConfiguration;\n\t\tlet selectedFormatter: FormatterConfiguration = formatters.find((formatter) => formatter.property === selectedProperty) || emptyObj;\n\t\tthis.createControl(type);\n\t\tif (\n\t\t\tselectedFormatter.formatterName === \"format.unit\" &&\n\t\t\ttypeof selectedFormatter.parameters?.[1].properties?.[0].value === \"number\"\n\t\t) {\n\t\t\tconst i18nModel = this.getModel(\"i18n\") as ResourceModel;\n\t\t\tselectedFormatter.formatterName = \"format.float\";\n\t\t\tselectedFormatter.displayName = i18nModel.getObject(\"FORMAT_FLOAT\");\n\t\t\tif (selectedFormatter.parameters) {\n\t\t\t\tselectedFormatter.parameters[0] = selectedFormatter.parameters[1];\n\t\t\t}\n\t\t\tselectedFormatter.parameters?.splice(1, 1);\n\t\t} else if (selectedFormatter.formatterName === \"format.unit\") {\n\t\t\tselectedFormatter = emptyObj;\n\t\t}\n\t\tthis._refreshControl(selectedFormatter);\n\t\tif (selectedFormatter.formatterName) {\n\t\t\tthis._selectorControl.setSelectedKey(selectedFormatter.formatterName);\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param selectedProperty - The selected property to get the type for\n\t * @returns type of the selected property\n\t */\n\tgetPropertyType(selectedProperty: string): string {\n\t\tconst model = this.getModel() as JSONModel;\n\t\tconst [entity, navSelectedProperty] = selectedProperty.split(\"/\");\n\n\t\t// If it's a navigation property\n\t\tif (navSelectedProperty) {\n\t\t\tconst navigationProperty = model.getProperty(\"/configuration/navigationProperty\");\n\t\t\tconst selectedNavEntity = navigationProperty?.find((prop: { name: string }) => prop.name === entity);\n\n\t\t\treturn selectedNavEntity?.properties?.find((prop: { name: string }) => prop.name === navSelectedProperty)?.type || \"\";\n\t\t}\n\n\t\t// For regular properties\n\t\tconst properties: PropertyInfoMap = model.getProperty(\"/configuration/properties\");\n\t\treturn properties?.find((property) => property.name === selectedProperty)?.type || \"\";\n\t}\n\n\t/**\n\t * Refreshes the control with the provided formatter\n\t * @param {FormatterConfiguration} formatter - The formatter to be used for refreshing the control\n\t * @returns {void}\n\t * @private\n\t */\n\n\t_refreshControl(formatter: FormatterConfiguration): void {\n\t\tconst listModel = new JSONModel({\n\t\t\tlistItems: [formatter]\n\t\t});\n\t\tthis._List\n\t\t\t.bindItems({\n\t\t\t\tpath: \"/listItems\",\n\t\t\t\ttemplate: new CustomListItem({\n\t\t\t\t\tcontent: [\n\t\t\t\t\t\tnew VBox({\n\t\t\t\t\t\t\tjustifyContent: \"SpaceAround\"\n\t\t\t\t\t\t}).bindAggregation(\"items\", {\n\t\t\t\t\t\t\tpath: \"parameters\",\n\t\t\t\t\t\t\tfactory: this._createParametersControl.bind(this)\n\t\t\t\t\t\t})\n\t\t\t\t\t]\n\t\t\t\t})\n\t\t\t})\n\t\t\t.setModel(listModel);\n\t}\n\n\t/**\n\t * Creates a select control with the formatter list based on the provided type\n\t *\n\t * @param {string} type - The type of the control to be created\n\t * @returns {void}\n\t */\n\n\tcreateControl(type: string): void {\n\t\tconst i18nModel = this.getModel(\"i18n\") as ResourceModel;\n\t\tlet formatterConfigList: FormatterConfigurationMap = deepClone(getFormatterConfiguration());\n\t\tconst isDateType = checkForDateType(type);\n\t\tconst isNumberType = type === \"Edm.Decimal\" || type === \"Edm.Int16\" || type === \"Edm.Int32\" || type === \"Edm.Double\";\n\t\tformatterConfigList = formatterConfigList.filter((formatterConfig) => formatterConfig.visible === true);\n\t\tif (isDateType) {\n\t\t\tformatterConfigList = formatterConfigList.filter((formatterConfig) => formatterConfig.type === \"Date\");\n\t\t} else if (isNumberType) {\n\t\t\tformatterConfigList = formatterConfigList.filter(\n\t\t\t\t(formatterConfig) => formatterConfig.type === \"numeric\" || formatterConfig.type === \"string | numeric\"\n\t\t\t);\n\t\t} else {\n\t\t\tformatterConfigList = formatterConfigList.filter(\n\t\t\t\t(formatterConfig) => formatterConfig.type === \"string\" || formatterConfig.type === \"string | numeric\"\n\t\t\t);\n\t\t}\n\t\tconst formatterListModel = new JSONModel({\n\t\t\tformattersList: formatterConfigList\n\t\t});\n\t\tthis._selectorControl = new ComboBox({\n\t\t\twidth: \"80%\",\n\t\t\titems: {\n\t\t\t\tpath: \"/formattersList\",\n\t\t\t\ttemplate: new ListItem({\n\t\t\t\t\tkey: \"{formatterName}\",\n\t\t\t\t\ttext: \"{displayName}\"\n\t\t\t\t})\n\t\t\t},\n\t\t\tchange: this.onFormatterSelected.bind(this)\n\t\t})\n\t\t\t.addStyleClass(\"sapUiTinyMarginBegin\")\n\t\t\t.setModel(formatterListModel);\n\t\tthis._deleteButton = new Button({\n\t\t\ticon: \"sap-icon://delete\",\n\t\t\ttype: \"Transparent\",\n\t\t\tpress: this.deleteFormatter.bind(this)\n\t\t});\n\t\tthis._applyButton = new Button({\n\t\t\ttext: i18nModel.getObject(\"FORMATTER_CONTROL_APPLY\"),\n\t\t\ttype: \"Ghost\",\n\t\t\tpress: this.applyFormatter.bind(this)\n\t\t});\n\t}\n\n\t/**\n\t * Creates a control for displaying and editing parameters based on the provided property type\n\t *\n\t * @param {string} id - ID of the control\n\t * @param {*} context - context object containing information about the property\n\t * @returns {sap.ui.core.Control} A control for displaying and editing parameters\n\t * @private\n\t */\n\n\t_createParametersControl(id: string, context: any): Control {\n\t\tconst property = context.getProperty();\n\t\tconst propertyType = property.type;\n\t\tlet inputControl: CheckBox | Select | Input | StepInput,\n\t\t\thBoxItems: (Text | CheckBox | Select | Input)[] = [];\n\t\tif (propertyType !== \"object\") {\n\t\t\thBoxItems = [\n\t\t\t\tnew Text({\n\t\t\t\t\twidth: \"200px\",\n\t\t\t\t\ttext: \"{displayName} : \"\n\t\t\t\t}).addStyleClass(\"sapUiTinyMarginTop sapUiTinyMarginBegin\")\n\t\t\t];\n\t\t}\n\t\tswitch (propertyType) {\n\t\t\tcase \"boolean\":\n\t\t\t\tinputControl = new CheckBox({ width: \"116px\", selected: \"{selected}\" });\n\t\t\t\tbreak;\n\t\t\tcase \"enum\":\n\t\t\t\tinputControl = this._createSelectControl(\"{selectedKey}\", property.options);\n\t\t\t\tbreak;\n\t\t\tcase \"object\": {\n\t\t\t\tconst flexBoxItems = [];\n\t\t\t\tfor (let i = 0; i < property.properties.length; i++) {\n\t\t\t\t\tconst currentProperty = property.properties[i];\n\t\t\t\t\tif (currentProperty && typeof currentProperty.value !== \"object\") {\n\t\t\t\t\t\tconst rowItem = [];\n\t\t\t\t\t\tconst displayName = currentProperty.displayName;\n\t\t\t\t\t\tconst propertyType = currentProperty.type;\n\t\t\t\t\t\tswitch (propertyType) {\n\t\t\t\t\t\t\tcase \"boolean\":\n\t\t\t\t\t\t\t\tinputControl = new CheckBox({\n\t\t\t\t\t\t\t\t\twidth: \"116px\",\n\t\t\t\t\t\t\t\t\tselected: { path: \"properties/\" + i + \"/selected/\" }\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase \"enum\":\n\t\t\t\t\t\t\t\tinputControl = this._createSelectControl(\"{properties/\" + i + \"/selectedKey}\", currentProperty.options);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase \"number\":\n\t\t\t\t\t\t\t\tthis.setDefaultStepInputValue(currentProperty);\n\t\t\t\t\t\t\t\tconst bindingInfo: PropertyBindingInfo = { path: `properties/${i}/value` };\n\t\t\t\t\t\t\t\tinputControl = new StepInput({ width: \"116px\", min: 0, max: 2, value: bindingInfo });\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tinputControl = new Input({ width: \"176px\", value: \"{properties/\" + i + \"/value}\" });\n\t\t\t\t\t\t}\n\t\t\t\t\t\trowItem.push(\n\t\t\t\t\t\t\tnew Text({\n\t\t\t\t\t\t\t\twidth: \"200px\",\n\t\t\t\t\t\t\t\ttext: displayName + \" : \"\n\t\t\t\t\t\t\t}).addStyleClass(\"sapUiTinyMarginTop sapUiTinyMarginBegin\")\n\t\t\t\t\t\t);\n\t\t\t\t\t\trowItem.push(inputControl);\n\t\t\t\t\t\tconst hBox = new HBox({ justifyContent: \"Start\", items: rowItem });\n\t\t\t\t\t\tflexBoxItems.push(hBox);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn new FlexBox({ items: flexBoxItems, direction: \"Column\" });\n\t\t\t}\n\t\t\tdefault:\n\t\t\t\tinputControl = new Input({ width: \"108px\", value: \"{value}\" });\n\t\t\t\tbreak;\n\t\t}\n\t\thBoxItems.push(inputControl);\n\t\treturn new HBox({ justifyContent: \"Start\", items: hBoxItems });\n\t}\n\n\tsetDefaultStepInputValue(prop: PropertyType) {\n\t\tprop.value = prop.value >= 0 ? prop.value : prop.defaultValue;\n\t\treturn prop;\n\t}\n\t/**\n\t * Creates a select control based on the provided selected key and property options\n\t *\n\t * @param {string} selectedKey - The selected key for the select control\n\t * @param {Array<PropertyOptions>} propertyOptions - An array of propertyOptions representing the options for the select control\n\t * @returns {sap.m.Select} Select control populated with the provided property options\n\t * @private\n\t */\n\n\t_createSelectControl(selectedKey: string, propertyOptions: Array<PropertyOptions>) {\n\t\tconst inputControl = new Select({\n\t\t\twidth: \"108px\",\n\t\t\tselectedKey: selectedKey\n\t\t});\n\t\tfor (const item of propertyOptions) {\n\t\t\tinputControl.addItem(\n\t\t\t\tnew Item({\n\t\t\t\t\ttext: item.name,\n\t\t\t\t\tkey: item.value\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\t\treturn inputControl;\n\t}\n\n\t/**\n\t * Handles the event when a formatter is selected\n\t *\n\t * @param {Event} event - The event object representing the selection event\n\t * @returns {void}\n\t */\n\n\tonFormatterSelected(event: Event): void {\n\t\tconst model = this.getModel() as JSONModel;\n\t\tconst targetProperty = model.getProperty(\"/configuration/advancedFormattingOptions/targetFormatterProperty\");\n\t\tconst source = event.getSource() as ComboBox;\n\t\tconst selectedKey = source.getSelectedKey();\n\t\tconst formatterConfig = getFormatterConfiguration().find((formatter) => {\n\t\t\treturn formatter.formatterName === selectedKey;\n\t\t}) as FormatterConfiguration;\n\n\t\tconst isSelectedKey = selectedKey && formatterConfig ? true : false;\n\t\tmodel.setProperty(\"/configuration/advancedFormattingOptions/isFormatterApplied\", isSelectedKey);\n\n\t\tthis._refreshControl(Object.assign({ property: targetProperty }, deepClone(formatterConfig)));\n\t}\n\n\t/**\n\t * Applies the selected formatter to the control, fires the change event with the updated propertyValueFormatters\n\t *\n\t * @returns {void}\n\t */\n\n\tapplyFormatter(): void {\n\t\tconst listItemsData = (this._List.getModel() as JSONModel).getProperty(\"/listItems\");\n\t\tthis._updatePropertyValueFormatters(listItemsData[0]);\n\t\tconst propertyValueFormatters = (this.getModel() as JSONModel).getProperty(\n\t\t\t\"/configuration/advancedFormattingOptions/propertyValueFormatters\"\n\t\t);\n\t\tthis.fireEvent(\"change\", {\n\t\t\tvalue: propertyValueFormatters\n\t\t});\n\t}\n\n\t/**\n\t * Deletes the selected formatter from the control, fires the change event with the updated propertyValueFormatters\n\t *\n\t * @returns {void}\n\t */\n\n\tdeleteFormatter(): void {\n\t\tconst model = this.getModel() as JSONModel;\n\t\tconst targetProperty = model.getProperty(\"/configuration/advancedFormattingOptions/targetFormatterProperty\");\n\t\tconst propertyValueFormatters = this.getFormatters() as FormatterConfigurationMap;\n\t\tlet index = -1;\n\t\tpropertyValueFormatters.forEach((propertyValueFormatter, i) => {\n\t\t\tif (propertyValueFormatter.property === targetProperty) {\n\t\t\t\tindex = i;\n\t\t\t}\n\t\t});\n\t\tif (index !== -1) {\n\t\t\tpropertyValueFormatters.splice(index, 1);\n\t\t}\n\t\tmodel.setProperty(\"/configuration/advancedFormattingOptions/propertyValueFormatters\", propertyValueFormatters);\n\t\tconst emptyObj = {} as FormatterConfiguration;\n\t\tthis._refreshControl(emptyObj);\n\t\tthis.fireEvent(\"change\", {\n\t\t\tvalue: propertyValueFormatters\n\t\t});\n\t\tthis._selectorControl.setSelectedKey(\"\");\n\t}\n\n\t/**\n\t * Updates the propertyValueFormatters model with the provided formatter configuration\n\t *\n\t * @param formatterConfig - The formatter configuration to be updated\n\t * @returns {void}\n\t * @private\n\t */\n\t_updatePropertyValueFormatters(formatterConfig: FormatterConfiguration): void {\n\t\tif (formatterConfig.parameters) {\n\t\t\tconst parameterLength = formatterConfig.parameters.length;\n\n\t\t\tfor (let i = 0; i < parameterLength; i++) {\n\t\t\t\tif (formatterConfig.parameters[i].type === \"string\") {\n\t\t\t\t\t// If a parameter is of type string, set the value to an empty string if it is undefined\n\t\t\t\t\tformatterConfig.parameters[i].value = formatterConfig.parameters[i].value || formatterConfig.parameters[i].defaultValue;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst targetProperty = formatterConfig.property;\n\t\tconst propertyValueFormatters = this.getFormatters() as FormatterConfigurationMap;\n\t\tlet index = -1;\n\t\tpropertyValueFormatters.forEach((propertyValueFormatter, i) => {\n\t\t\tif (propertyValueFormatter.property === targetProperty) {\n\t\t\t\tindex = i;\n\t\t\t}\n\t\t});\n\t\tif (index !== -1) {\n\t\t\tpropertyValueFormatters[index] = formatterConfig;\n\t\t} else {\n\t\t\tpropertyValueFormatters.push(formatterConfig);\n\t\t}\n\t\t(this.getModel() as JSONModel).setProperty(\n\t\t\t\"/configuration/advancedFormattingOptions/propertyValueFormatters\",\n\t\t\tpropertyValueFormatters\n\t\t);\n\t}\n}\n"],"mappings":"AAAA;;;;AAAA,aAAAA,IAAAC,GAAAC,OAAA,wXAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,mBA0BSC,EAAyBF,EAAA,mCAGzBG,EAAgBF,EAAA,oBA4BzB,MAGqBG,EAAkCR,EAAOS,OAAA,iEA2BtDC,SAAW,CACjBC,WAAY,EACZC,OAAQ,SAAUC,EAAmBC,GACpC,GAAIA,EAAQC,YAAc,UAAW,CACpCD,EAAQE,cAAcC,WAAW,OACjCH,EAAQI,aAAaD,WAAW,MACjC,CACAJ,EAAGM,UAAU,MAAOL,GACpBD,EAAGO,UACHP,EAAGQ,cAAcP,EAAQQ,kBACzBT,EAAGQ,cAAcP,EAAQE,eACzBH,EAAGQ,cAAcP,EAAQS,OACzBV,EAAGQ,cAAcP,EAAQI,cACzBL,EAAGW,MAAM,MACV,GAnCeC,SAA4B,CAC3CC,WAAY,CACXC,KAAM,SACNC,WAAY,UAEbC,aAAc,CACbC,MAAO,CAAEH,KAAM,aAAcI,SAAU,MAAOC,WAAY,WAE3DC,OAAQ,CACPC,OAAQ,CACPC,WAAY,CACXC,MAAO,CAAET,KAAM,cAMnBU,YAAW,SAAAC,EAACC,GACXC,6BAAAC,KAAMF,EACP,EA0BAG,KAAI,SAAAC,IACHF,KAAKlB,MAAQ,IAAI5B,EAAK,CACrBiD,eAAgB,UAEjBC,sBAAAJ,KACD,EASAK,cAAa,SAAAC,EAACnB,GACba,KAAKO,eAAe,QAASP,KAAKlB,OAClCkB,KAAKQ,YAAY,aAAcrB,EAAY,MAC3C,MAAMsB,EAAQT,KAAKU,WACnB,MAAMC,EAAmBF,EAAMG,YAAY,oEAC3C,MAAM1B,EAAOc,KAAKa,gBAAgBF,GAClC,MAAMG,EAAW,CAAC,EAClB,IAAIC,EAA4C5B,EAAW6B,KAAMC,GAAcA,EAAUC,WAAaP,IAAqBG,EAC3Hd,KAAKmB,cAAcjC,GACnB,GACC6B,EAAkBK,gBAAkB,sBAC7BL,EAAkBrB,aAAa,GAAGT,aAAa,GAAGU,QAAU,SAClE,CACD,MAAM0B,EAAYrB,KAAKU,SAAS,QAChCK,EAAkBK,cAAgB,eAClCL,EAAkBO,YAAcD,EAAUE,UAAU,gBACpD,GAAIR,EAAkBrB,WAAY,CACjCqB,EAAkBrB,WAAW,GAAKqB,EAAkBrB,WAAW,EAChE,CACAqB,EAAkBrB,YAAY8B,OAAO,EAAG,EACzC,MAAO,GAAIT,EAAkBK,gBAAkB,cAAe,CAC7DL,EAAoBD,CACrB,CACAd,KAAKyB,gBAAgBV,GACrB,GAAIA,EAAkBK,cAAe,CACpCpB,KAAKnB,iBAAiB6C,eAAeX,EAAkBK,cACxD,CACD,EAOAP,gBAAe,SAAAc,EAAChB,GACf,MAAMF,EAAQT,KAAKU,WACnB,MAAOkB,EAAQC,GAAuBlB,EAAiBmB,MAAM,KAG7D,GAAID,EAAqB,CACxB,MAAME,EAAqBtB,EAAMG,YAAY,qCAC7C,MAAMoB,EAAoBD,GAAoBf,KAAMiB,GAA2BA,EAAKC,OAASN,GAE7F,OAAOI,GAAmB/C,YAAY+B,KAAMiB,GAA2BA,EAAKC,OAASL,IAAsB3C,MAAQ,EACpH,CAGA,MAAMD,EAA8BwB,EAAMG,YAAY,6BACtD,OAAO3B,GAAY+B,KAAME,GAAaA,EAASgB,OAASvB,IAAmBzB,MAAQ,EACpF,EASAuC,gBAAe,SAAAA,EAACR,GACf,MAAMkB,EAAY,IAAIzE,EAAU,CAC/B0E,UAAW,CAACnB,KAEbjB,KAAKlB,MACHuD,UAAU,CACVC,KAAM,aACNC,SAAU,IAAIzF,EAAe,CAC5B0F,QAAS,CACR,IAAIlF,EAAK,CACRmF,eAAgB,gBACdC,gBAAgB,QAAS,CAC3BJ,KAAM,aACNK,QAAS3C,KAAK4C,yBAAyBC,KAAK7C,aAK/C8C,SAASX,EACZ,EASAhB,cAAa,SAAA4B,EAAC7D,GACb,MAAMmC,EAAYrB,KAAKU,SAAS,QAChC,IAAIsC,EAAiDtG,EAAUmB,KAC/D,MAAMoF,EAAanF,EAAiBoB,GACpC,MAAMgE,EAAehE,IAAS,eAAiBA,IAAS,aAAeA,IAAS,aAAeA,IAAS,aACxG8D,EAAsBA,EAAoBG,OAAQC,GAAoBA,EAAgBC,UAAY,MAClG,GAAIJ,EAAY,CACfD,EAAsBA,EAAoBG,OAAQC,GAAoBA,EAAgBlE,OAAS,OAChG,MAAO,GAAIgE,EAAc,CACxBF,EAAsBA,EAAoBG,OACxCC,GAAoBA,EAAgBlE,OAAS,WAAakE,EAAgBlE,OAAS,mBAEtF,KAAO,CACN8D,EAAsBA,EAAoBG,OACxCC,GAAoBA,EAAgBlE,OAAS,UAAYkE,EAAgBlE,OAAS,mBAErF,CACA,MAAMoE,EAAqB,IAAI5F,EAAU,CACxC6F,eAAgBP,IAEjBhD,KAAKnB,iBAAmB,IAAIhC,EAAS,CACpC2G,MAAO,MACPC,MAAO,CACNnB,KAAM,kBACNC,SAAU,IAAI9E,EAAS,CACtBiG,IAAK,kBACLC,KAAM,mBAGRlE,OAAQO,KAAK4D,oBAAoBf,KAAK7C,QAErC6D,cAAc,wBACdf,SAASQ,GACXtD,KAAKzB,cAAgB,IAAI5B,EAAO,CAC/BmH,KAAM,oBACN5E,KAAM,cACN6E,MAAO/D,KAAKgE,gBAAgBnB,KAAK7C,QAElCA,KAAKvB,aAAe,IAAI9B,EAAO,CAC9BgH,KAAMtC,EAAUE,UAAU,2BAC1BrC,KAAM,QACN6E,MAAO/D,KAAKiE,eAAepB,KAAK7C,OAElC,EAWA4C,yBAAwB,SAAAA,EAACsB,EAAYC,GACpC,MAAMjD,EAAWiD,EAAQvD,cACzB,MAAMwD,EAAelD,EAAShC,KAC9B,IAAImF,EACHC,EAAkD,GACnD,GAAIF,IAAiB,SAAU,CAC9BE,EAAY,CACX,IAAIjH,EAAK,CACRmG,MAAO,QACPG,KAAM,qBACJE,cAAc,2CAEnB,CACA,OAAQO,GACP,IAAK,UACJC,EAAe,IAAIzH,EAAS,CAAE4G,MAAO,QAASe,SAAU,eACxD,MACD,IAAK,OACJF,EAAerE,KAAKwE,qBAAqB,gBAAiBtD,EAASuD,SACnE,MACD,IAAK,SAAU,CACd,MAAMC,EAAe,GACrB,IAAK,IAAIC,EAAI,EAAGA,EAAIzD,EAASjC,WAAW2F,OAAQD,IAAK,CACpD,MAAME,EAAkB3D,EAASjC,WAAW0F,GAC5C,GAAIE,UAA0BA,EAAgBlF,QAAU,SAAU,CACjE,MAAMmF,EAAU,GAChB,MAAMxD,EAAcuD,EAAgBvD,YACpC,MAAM8C,EAAeS,EAAgB3F,KACrC,OAAQkF,GACP,IAAK,UACJC,EAAe,IAAIzH,EAAS,CAC3B4G,MAAO,QACPe,SAAU,CAAEjC,KAAM,cAAgBqC,EAAI,gBAEvC,MACD,IAAK,OACJN,EAAerE,KAAKwE,qBAAqB,eAAiBG,EAAI,gBAAiBE,EAAgBJ,SAC/F,MACD,IAAK,SACJzE,KAAK+E,yBAAyBF,GAC9B,MAAMG,EAAmC,CAAE1C,KAAM,cAAcqC,WAC/DN,EAAe,IAAIjH,EAAU,CAAEoG,MAAO,QAASyB,IAAK,EAAGC,IAAK,EAAGvF,MAAOqF,IACtE,MACD,QACCX,EAAe,IAAIpH,EAAM,CAAEuG,MAAO,QAAS7D,MAAO,eAAiBgF,EAAI,YAEzEG,EAAQK,KACP,IAAI9H,EAAK,CACRmG,MAAO,QACPG,KAAMrC,EAAc,QAClBuC,cAAc,4CAElBiB,EAAQK,KAAKd,GACb,MAAMe,EAAO,IAAIpI,EAAK,CAAEyF,eAAgB,QAASgB,MAAOqB,IACxDJ,EAAaS,KAAKC,EACnB,CACD,CACA,OAAO,IAAIrI,EAAQ,CAAE0G,MAAOiB,EAAcW,UAAW,UACtD,CACA,QACChB,EAAe,IAAIpH,EAAM,CAAEuG,MAAO,QAAS7D,MAAO,YAClD,MAEF2E,EAAUa,KAAKd,GACf,OAAO,IAAIrH,EAAK,CAAEyF,eAAgB,QAASgB,MAAOa,GACnD,EAEAS,yBAAwB,SAAAO,EAACrD,GACxBA,EAAKtC,MAAQsC,EAAKtC,OAAS,EAAIsC,EAAKtC,MAAQsC,EAAKsD,aACjD,OAAOtD,CACR,EAUAuC,qBAAoB,SAAAA,EAACgB,EAAqBC,GACzC,MAAMpB,EAAe,IAAIlH,EAAO,CAC/BqG,MAAO,QACPgC,YAAaA,IAEd,IAAK,MAAME,KAAQD,EAAiB,CACnCpB,EAAasB,QACZ,IAAInI,EAAK,CACRmG,KAAM+B,EAAKxD,KACXwB,IAAKgC,EAAK/F,QAGb,CACA,OAAO0E,CACR,EASAT,oBAAmB,SAAAgC,EAACC,GACnB,MAAMpF,EAAQT,KAAKU,WACnB,MAAMoF,EAAiBrF,EAAMG,YAAY,oEACzC,MAAMmF,EAASF,EAAMG,YACrB,MAAMR,EAAcO,EAAOE,iBAC3B,MAAM7C,EAAkBvF,IAA4BmD,KAAMC,GAClDA,EAAUG,gBAAkBoE,GAGpC,MAAMU,EAAgBV,GAAepC,EAAkB,KAAO,MAC9D3C,EAAMD,YAAY,8DAA+D0F,GAEjFlG,KAAKyB,gBAAgB0E,OAAOC,OAAO,CAAElF,SAAU4E,GAAkBpJ,EAAU0G,IAC5E,EAQAa,eAAc,SAAAoC,IACb,MAAMC,EAAiBtG,KAAKlB,MAAM4B,WAAyBE,YAAY,cACvEZ,KAAKuG,+BAA+BD,EAAc,IAClD,MAAME,EAA2BxG,KAAKU,WAAyBE,YAC9D,oEAEDZ,KAAKyG,UAAU,SAAU,CACxB9G,MAAO6G,GAET,EAQAxC,gBAAe,SAAA0C,IACd,MAAMjG,EAAQT,KAAKU,WACnB,MAAMoF,EAAiBrF,EAAMG,YAAY,oEACzC,MAAM4F,EAA0BxG,KAAK2G,gBACrC,IAAIC,GAAS,EACbJ,EAAwBK,QAAQ,CAACC,EAAwBnC,KACxD,GAAImC,EAAuB5F,WAAa4E,EAAgB,CACvDc,EAAQjC,CACT,IAED,GAAIiC,KAAW,EAAG,CACjBJ,EAAwBhF,OAAOoF,EAAO,EACvC,CACAnG,EAAMD,YAAY,mEAAoEgG,GACtF,MAAM1F,EAAW,CAAC,EAClBd,KAAKyB,gBAAgBX,GACrBd,KAAKyG,UAAU,SAAU,CACxB9G,MAAO6G,IAERxG,KAAKnB,iBAAiB6C,eAAe,GACtC,EASA6E,+BAA8B,SAAAA,EAACnD,GAC9B,GAAIA,EAAgB1D,WAAY,CAC/B,MAAMqH,EAAkB3D,EAAgB1D,WAAWkF,OAEnD,IAAK,IAAID,EAAI,EAAGA,EAAIoC,EAAiBpC,IAAK,CACzC,GAAIvB,EAAgB1D,WAAWiF,GAAGzF,OAAS,SAAU,CAEpDkE,EAAgB1D,WAAWiF,GAAGhF,MAAQyD,EAAgB1D,WAAWiF,GAAGhF,OAASyD,EAAgB1D,WAAWiF,GAAGY,YAC5G,CACD,CACD,CAEA,MAAMO,EAAiB1C,EAAgBlC,SACvC,MAAMsF,EAA0BxG,KAAK2G,gBACrC,IAAIC,GAAS,EACbJ,EAAwBK,QAAQ,CAACC,EAAwBnC,KACxD,GAAImC,EAAuB5F,WAAa4E,EAAgB,CACvDc,EAAQjC,CACT,IAED,GAAIiC,KAAW,EAAG,CACjBJ,EAAwBI,GAASxD,CAClC,KAAO,CACNoD,EAAwBrB,KAAK/B,EAC9B,CACCpD,KAAKU,WAAyBF,YAC9B,mEACAgG,EAEF,IAAC,OApZmBzI,CAAyB","ignoreList":[],"sourceRoot":"app/controls"}},{"offset":{"line":38,"column":0},"map":{"version":3,"file":"CriticalityEditor.js","names":["sap","ui","define","Button","ComboBox","CustomListItem","HBox","Input","List","Text","VBox","Control","CoreElement","ListItem","sap_ui_core_library","Filter","Sorter","JSONModel","____helpers_IntegrationCardHelper","ValueState","getPreviewItems","CriticalityEditor","extend","renderer","apiVersion","render","rm","control","getType","addButton","setVisible","openStart","openEnd","renderControl","list","close","metadata","properties","type","selectionKeys","defaultValue","navigationSelectionKeys","items","aggregations","multiple","visibility","events","change","parameters","value","isCalcuationType","selectedItem","selectionChange","constructor","_constructor","settings","Control.prototype.constructor.call","this","setCriticalityModel","init","_init","showSeparators","showNoData","propertyComboBox","valueState","valueStateText","event","handleComboBoxEvents","call","width","source","getSource","bindingContext","getBindingContext","path","getPath","model","getModel","getProperty","fireEvent","getItems","activeCalculation","_idNavigationComboBox","visible","addStyleClass","separatorColon","text","criticalityComboBox","selectedKey","getSelectedKey","sourceCriticalityCalculationPath","setProperty","String","getObject","isSelectedKey","criticalityCalculator","justifyContent","textAlign","placeholder","key","press","icon","onAddButtonClicked","bind","deleteButton","onDeleteButtonClicked","onAfterRendering","_onAfterRendering","entityData","JSON","parse","stringify","getSelectionKeys","selectPropertyText","selectOthersText","forEach","entity","nameKey","setSelectionKeysMap","name","labelKey","label","category","isPotentialCriticality","mergedEntityData","concat","staticCriticality","criticalityComboBoxModel","setData","refresh","setSelectionKeys","_setSelectionKeys","setAggregation","getBindingInfo","propertyBindingPath","getBindingPath","propertyFilter","bindAggregation","sorter","length","filters","factory","setModel","getCriticalityModel","_getCriticalityModel","setItems","_setItems","itemsMap","bindProperty","setWidth","bindingPath","bindItems","template","content","renderType","_handleComboBoxEvents","isNavigation","controlId","getParameter","getElementById","group","navigationProperties","isNavigationalProperty","hasNavigationProperty","navigationKeyForId","propertyKeyForId","navProperty","filter","prop","navigationalPropertiesForId","isNavigationForId","previewItems","isItemNotSelected","includes","setValueStateForModel","_getInternalModel","_getItems","_onAddButtonClicked","boundData","push","_onDeleteButtonClicked","itemBindingPath","sourceCriticalityPropertyName","criticalityData","index","findIndex","data","propertyName","splice","slice","_isPotentialCriticality","property","_setCriticalityModel","criticalityCategory","_hasNavigationProperty","propertyToCheck","some","_setValueStateForModel","i18nModel","informativeMessage","item","itemName","None","undefined","Information"],"sources":["CriticalityEditor.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nimport Button from \"sap/m/Button\";\nimport ComboBox from \"sap/m/ComboBox\";\nimport CustomListItem from \"sap/m/CustomListItem\";\nimport HBox from \"sap/m/HBox\";\nimport Input from \"sap/m/Input\";\nimport List from \"sap/m/List\";\nimport Text from \"sap/m/Text\";\nimport VBox from \"sap/m/VBox\";\nimport type Event from \"sap/ui/base/Event\";\nimport { PropertyBindingInfo } from \"sap/ui/base/ManagedObject\";\nimport Control, { $ControlSettings } from \"sap/ui/core/Control\";\nimport type { MetadataOptions } from \"sap/ui/core/Element\";\nimport CoreElement from \"sap/ui/core/Element\";\nimport ListItem from \"sap/ui/core/ListItem\";\nimport RenderManager from \"sap/ui/core/RenderManager\";\nimport { ValueState } from \"sap/ui/core/library\";\nimport type Context from \"sap/ui/model/Context\";\nimport Filter from \"sap/ui/model/Filter\";\nimport type Model from \"sap/ui/model/Model\";\nimport Sorter from \"sap/ui/model/Sorter\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\nimport type ResourceModel from \"sap/ui/model/resource/ResourceModel\";\nimport { getPreviewItems } from \"../../helpers/IntegrationCardHelper\";\nimport type { NavigationParameter, Property } from \"../../types/PropertyTypes\";\n\nexport type CriticalityOptions = {\n\tname: string;\n\tvalue?: string;\n\tactiveCalculation?: boolean;\n\tisNavigationForId?: boolean;\n\tnavigationKeyForId?: string;\n\tpropertyKeyForId?: string;\n\tcriticality?: string;\n\tisNavigationForDescription?: boolean;\n\tnavigationalPropertiesForId?: Property[];\n\tvalueState: ValueState;\n\tvalueStateText: string;\n\tnavigationValueState?: ValueState;\n\tnavigationValueStateText?: string;\n};\n\nexport type PropertyInfo = {\n\tlabel?: string;\n\ttype?: string;\n\tname?: string;\n\tvalue?: string | number;\n\tcategory?: string;\n};\n\nexport default interface ICriticalityEditor {\n\taddButton: Button;\n\tlist: List;\n\tgetType(): string;\n\tgetSelectionKeys(): object;\n\tgetItems(): Array<CriticalityOptions>;\n}\n\nexport interface CriticalitySettings extends $ControlSettings {\n\ttype: string;\n\tselectionKeys: object;\n\titems: object;\n\tchange?: (event: CriticalityEditorChangeEvent) => void;\n\tnavigationSelectionKeys: object;\n}\ninterface CriticalityEditorChangeEventParameters {\n\tvalue?: object;\n\tisCalcuationType?: boolean;\n\tselectedItem?: object;\n}\n\ninterface SelectionKeyMap {\n\tname?: string;\n\tlabel?: string;\n}\n\ntype CriticalityEditorChangeEvent = Event<CriticalityEditorChangeEventParameters>;\n\n/**\n * @namespace sap.cards.ap.generator.app.controls\n */\nexport default class CriticalityEditor extends Control {\n\tlist!: List;\n\taddButton!: Button;\n\tseparatorColon!: Text;\n\tdeleteButton!: Button;\n\tpropertyComboBox!: ComboBox;\n\tsetSelectionKeysMap!: SelectionKeyMap;\n\tpropertyFilter!: Filter;\n\titemsMap!: CriticalityOptions;\n\tcriticalityComboBox!: ComboBox;\n\tcriticalityCalculator!: VBox;\n\tcriticalityComboBoxModel!: ComboBox;\n\tstaticCriticality!: Array<PropertyInfo>;\n\t_idNavigationComboBox!: ComboBox;\n\n\tstatic readonly metadata: MetadataOptions = {\n\t\tproperties: {\n\t\t\ttype: \"string\",\n\t\t\tselectionKeys: { type: \"object\", defaultValue: {} },\n\t\t\tnavigationSelectionKeys: { type: \"object\", defaultValue: {} },\n\t\t\titems: { type: \"object\", defaultValue: {} }\n\t\t},\n\t\taggregations: {\n\t\t\tlist: { type: \"sap.m.List\", multiple: false, visibility: \"hidden\" }\n\t\t},\n\t\tevents: {\n\t\t\tchange: {\n\t\t\t\tparameters: {\n\t\t\t\t\tvalue: { type: \"object\" },\n\t\t\t\t\tisCalcuationType: { type: \"boolean\" },\n\t\t\t\t\tselectedItem: { type: \"object\" }\n\t\t\t\t}\n\t\t\t},\n\t\t\tselectionChange: {\n\t\t\t\tparameters: {\n\t\t\t\t\tvalue: { type: \"int\" }\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tconstructor(settings: CriticalitySettings) {\n\t\tsuper(settings);\n\t\tthis.setCriticalityModel();\n\t}\n\n\tstatic renderer = {\n\t\tapiVersion: 2,\n\t\trender: function (rm: RenderManager, control: ICriticalityEditor): void {\n\t\t\tif (control.getType() === \"COMPACT\") {\n\t\t\t\tcontrol.addButton.setVisible(false);\n\t\t\t}\n\t\t\trm.openStart(\"div\", control);\n\t\t\trm.openEnd();\n\t\t\trm.renderControl(control.list);\n\t\t\trm.renderControl(control.addButton);\n\t\t\trm.close(\"div\");\n\t\t}\n\t};\n\n\t/**\n\t * Initializes the CriticalityEditor custom control\n\t *\n\t * This method sets up various controls and event handlers used by the methods in this control\n\t *\n\t * @returns {void}\n\t */\n\n\tinit(): void {\n\t\tthis.list = new List({\n\t\t\tshowSeparators: \"Inner\",\n\t\t\tshowNoData: false\n\t\t});\n\t\tthis.propertyComboBox = new ComboBox({\n\t\t\tvalueState: \"{= ${valueState} }\",\n\t\t\tvalueStateText: \"{= ${valueStateText} }\",\n\t\t\tselectionChange: (event: Event) => {\n\t\t\t\tthis.handleComboBoxEvents.call(this, event, false);\n\t\t\t},\n\t\t\twidth: \"100%\",\n\t\t\tchange: (event) => {\n\t\t\t\tconst source: ComboBox = event.getSource();\n\t\t\t\tconst bindingContext = source.getBindingContext() as Context;\n\t\t\t\tconst path = bindingContext?.getPath() || \"\";\n\t\t\t\tconst model = this.getModel() as JSONModel;\n\t\t\t\tconst selectedItem = model.getProperty(path);\n\t\t\t\tthis.fireEvent(\"change\", {\n\t\t\t\t\tvalue: this.getItems(),\n\t\t\t\t\tselectedItem,\n\t\t\t\t\tisCalcuationType: model.getProperty(path)?.activeCalculation || false\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\tthis._idNavigationComboBox = new ComboBox({\n\t\t\tvisible: \"{= !!${isNavigationForId} }\",\n\t\t\twidth: \"100%\",\n\t\t\tvalueState: \"{= ${navigationValueState} }\",\n\t\t\tvalueStateText: \"{= ${navigationValueStateText} }\",\n\t\t\tchange: () => {\n\t\t\t\tthis.fireEvent(\"change\", {\n\t\t\t\t\tvalue: this.getItems()\n\t\t\t\t});\n\t\t\t},\n\t\t\tselectionChange: (event: Event) => {\n\t\t\t\tthis.handleComboBoxEvents.call(this, event, true);\n\t\t\t}\n\t\t}).addStyleClass(\"sapUiTinyMarginBegin\");\n\n\t\tthis.separatorColon = new Text({ text: \":\" }).addStyleClass(\"sapUiTinyMarginTop sapUiTinyMarginBeginEnd\");\n\n\t\tthis.criticalityComboBox = new ComboBox({\n\t\t\twidth: \"100%\",\n\t\t\tchange: (event) => {\n\t\t\t\tconst source: ComboBox = event.getSource();\n\t\t\t\tconst bindingContext = source.getBindingContext() as Context;\n\t\t\t\tconst path = bindingContext?.getPath() || \"\";\n\t\t\t\tconst model = this.getModel() as JSONModel;\n\t\t\t\tconst selectedKey = event.getSource().getSelectedKey();\n\t\t\t\tif (this.getType() === \"COMPACT\") {\n\t\t\t\t\tconst sourceCriticalityCalculationPath =\n\t\t\t\t\t\t\"/configuration/advancedFormattingOptions/sourceCriticalityProperty/0/activeCalculation\";\n\t\t\t\t\tmodel.setProperty(\n\t\t\t\t\t\tsourceCriticalityCalculationPath,\n\t\t\t\t\t\tString(bindingContext?.getObject(\"hostCriticality\")) === \"Calculation\"\n\t\t\t\t\t);\n\t\t\t\t\tmodel.setProperty(\"/configuration/advancedFormattingOptions/selectedKeyCriticality\", selectedKey);\n\t\t\t\t} else {\n\t\t\t\t\tmodel.getProperty(path).activeCalculation = String(bindingContext?.getObject(\"criticality\")) === \"Calculation\";\n\t\t\t\t\tmodel.setProperty(\"/configuration/advancedFormattingOptions/sourceCriticalityProperty/0/hostCriticality\", selectedKey);\n\t\t\t\t}\n\n\t\t\t\tconst isSelectedKey = selectedKey ? true : false;\n\t\t\t\tmodel.setProperty(\"/configuration/advancedFormattingOptions/isCriticalityApplied\", isSelectedKey);\n\n\t\t\t\tthis.fireEvent(\"change\", {\n\t\t\t\t\tvalue: this.getItems(),\n\t\t\t\t\tisCalcuationType: this.getModel()?.getProperty(path)?.activeCalculation || false\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tthis.criticalityCalculator = new VBox({\n\t\t\tvisible: \"{= !!${activeCalculation} }\",\n\t\t\titems: [\n\t\t\t\tnew HBox({\n\t\t\t\t\tjustifyContent: \"SpaceAround\",\n\t\t\t\t\titems: [\n\t\t\t\t\t\tnew Text({ textAlign: \"End\", width: \"150px\", text: \"{i18n>CRITICALITY_CONTROL_TOL_RANGE}\" }).addStyleClass(\n\t\t\t\t\t\t\t\"sapUiTinyMarginTop\"\n\t\t\t\t\t\t),\n\t\t\t\t\t\tnew Input({\n\t\t\t\t\t\t\tvalue: \"{toleranceRangeLowValue}\",\n\t\t\t\t\t\t\tplaceholder: \"{i18n>CRITICALITY_CONTROL_LOW}\",\n\t\t\t\t\t\t\twidth: \"80px\"\n\t\t\t\t\t\t}).addStyleClass(\"sapUiTinyMarginBeginEnd\"),\n\t\t\t\t\t\tnew Input({\n\t\t\t\t\t\t\tvalue: \"{toleranceRangeHighValue}\",\n\t\t\t\t\t\t\tplaceholder: \"{i18n>CRITICALITY_CONTROL_HIGH}\",\n\t\t\t\t\t\t\twidth: \"80px\"\n\t\t\t\t\t\t}).addStyleClass(\"sapUiTinyMarginBeginEnd\")\n\t\t\t\t\t]\n\t\t\t\t}),\n\t\t\t\tnew HBox({\n\t\t\t\t\tjustifyContent: \"SpaceAround\",\n\t\t\t\t\titems: [\n\t\t\t\t\t\tnew Text({ textAlign: \"End\", width: \"150px\", text: \"{i18n>CRITICALITY_CONTROL_DEV_RANGE}\" }).addStyleClass(\n\t\t\t\t\t\t\t\"sapUiTinyMarginTop\"\n\t\t\t\t\t\t),\n\t\t\t\t\t\tnew Input({\n\t\t\t\t\t\t\tvalue: \"{deviationRangeLowValue}\",\n\t\t\t\t\t\t\tplaceholder: \"{i18n>CRITICALITY_CONTROL_LOW}\",\n\t\t\t\t\t\t\twidth: \"80px\"\n\t\t\t\t\t\t}).addStyleClass(\"sapUiTinyMarginBeginEnd\"),\n\t\t\t\t\t\tnew Input({\n\t\t\t\t\t\t\tvalue: \"{deviationRangeHighValue}\",\n\t\t\t\t\t\t\tplaceholder: \"{i18n>CRITICALITY_CONTROL_HIGH}\",\n\t\t\t\t\t\t\twidth: \"80px\"\n\t\t\t\t\t\t}).addStyleClass(\"sapUiTinyMarginBeginEnd\")\n\t\t\t\t\t]\n\t\t\t\t}),\n\t\t\t\tnew HBox({\n\t\t\t\t\tjustifyContent: \"SpaceAround\",\n\t\t\t\t\titems: [\n\t\t\t\t\t\tnew Text({\n\t\t\t\t\t\t\ttextAlign: \"End\",\n\t\t\t\t\t\t\twidth: \"150px\",\n\t\t\t\t\t\t\ttext: \"{i18n>CRITICALITY_CONTROL_IMP_DIRECTION}\"\n\t\t\t\t\t\t}).addStyleClass(\"sapUiTinyMarginTop\"),\n\t\t\t\t\t\tnew ComboBox({\n\t\t\t\t\t\t\tvalue: \"{improvementDirection}\",\n\t\t\t\t\t\t\twidth: \"176px\",\n\t\t\t\t\t\t\titems: [\n\t\t\t\t\t\t\t\tnew ListItem({ key: \"{i18n>CRITICALITY_CONTROL_MINIMIZE}\", text: \"Minimize\" }),\n\t\t\t\t\t\t\t\tnew ListItem({ key: \"{i18n>CRITICALITY_CONTROL_TARGET}\", text: \"Target\" }),\n\t\t\t\t\t\t\t\tnew ListItem({ key: \"{i18n>CRITICALITY_CONTROL_MAXIMIZE}\", text: \"Maximize\" })\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}).addStyleClass(\"sapUiTinyMarginBeginEnd\")\n\t\t\t\t\t]\n\t\t\t\t}),\n\t\t\t\tnew HBox({\n\t\t\t\t\tjustifyContent: \"End\",\n\t\t\t\t\titems: [\n\t\t\t\t\t\tnew Button({\n\t\t\t\t\t\t\ttext: \"{i18n>CRITICALITY_CONTROL_APPLY}\",\n\t\t\t\t\t\t\twidth: \"176px\",\n\t\t\t\t\t\t\ttype: \"Ghost\",\n\t\t\t\t\t\t\tpress: (event) => {\n\t\t\t\t\t\t\t\tconst source: ComboBox = event.getSource();\n\t\t\t\t\t\t\t\tconst bindingContext = source.getBindingContext() as Context;\n\t\t\t\t\t\t\t\tconst path = bindingContext.getPath() || \"\";\n\t\t\t\t\t\t\t\tthis.fireEvent(\"change\", {\n\t\t\t\t\t\t\t\t\tvalue: this.getItems(),\n\t\t\t\t\t\t\t\t\tisCalcuationType: this.getModel()?.getProperty(path)?.activeCalculation || false\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}).addStyleClass(\"sapUiTinyMarginBeginEnd\")\n\t\t\t\t\t]\n\t\t\t\t})\n\t\t\t]\n\t\t}).addStyleClass(\"sapUiTinyMarginBottom\");\n\n\t\tthis.addButton = new Button({\n\t\t\ticon: \"sap-icon://add\",\n\t\t\ttype: \"Transparent\",\n\t\t\tpress: this.onAddButtonClicked.bind(this)\n\t\t});\n\n\t\tthis.deleteButton = new Button({\n\t\t\ticon: \"sap-icon://delete\",\n\t\t\ttype: \"Transparent\",\n\t\t\tpress: this.onDeleteButtonClicked.bind(this)\n\t\t});\n\t}\n\n\t/**\n\t * Performs actions after CriticalityEditor custom control has been rendered\n\t *\n\t * This method is called after the control has been rendered in the UI. It fetches the selection keys\n\t *\n\t * @returns {void}\n\t */\n\n\tonAfterRendering(): void {\n\t\tconst entityData = JSON.parse(JSON.stringify(this.getSelectionKeys()));\n\t\tconst selectPropertyText = this.getModel(\"i18n\")?.getObject(\"CRITICALITY_CONTROL_SELECT_PROP\");\n\t\tconst selectOthersText = this.getModel(\"i18n\")?.getObject(\"CRITICALITY_CONTROL_SELECT_OTHERS\");\n\n\t\tentityData.forEach((entity: PropertyInfo) => {\n\t\t\tconst nameKey = this.setSelectionKeysMap.name as keyof PropertyInfo;\n\t\t\tconst labelKey = this.setSelectionKeysMap.label as keyof PropertyInfo;\n\n\t\t\tentity.category = this.isPotentialCriticality(entity) ? selectPropertyText : selectOthersText;\n\t\t\tentity.name = `{${entity[nameKey]}}`;\n\t\t\tentity.label = String(entity[labelKey]);\n\t\t});\n\n\t\tconst mergedEntityData = entityData.concat(this.staticCriticality);\n\t\tconst criticalityComboBoxModel = this.criticalityComboBox.getModel(\"internal\") as JSONModel;\n\t\tcriticalityComboBoxModel.setData(mergedEntityData, true);\n\t\tcriticalityComboBoxModel.refresh();\n\t}\n\n\t/**\n\t * Sets the selection keys\n\t *\n\t * This method forms the setSelectionKeysMap from selectionKeys binding information,\n\t * and binds aggregation items for ComboBox controls, updates internal model of text criticality ComboBox\n\t * @param {Array<PropertyInfo>} value - The array of selection keys\n\t * @returns {void}\n\t */\n\tsetSelectionKeys(value: Array<PropertyInfo>): void {\n\t\tthis.setAggregation(\"list\", this.list);\n\t\tthis.setProperty(\"selectionKeys\", value);\n\t\tthis.setProperty(\"navigationSelectionKeys\", value);\n\t\tthis.setSelectionKeysMap = this.getBindingInfo(\"selectionKeys\").parameters as SelectionKeyMap;\n\t\tconst propertyBindingPath = this.getBindingPath(\"navigationSelectionKeys\") || \"\";\n\n\t\tthis.propertyFilter = new Filter({\n\t\t\tpath: this.setSelectionKeysMap.name\n\t\t});\n\t\tthis.propertyComboBox.bindAggregation(\"items\", {\n\t\t\tpath: propertyBindingPath,\n\t\t\tsorter: [new Sorter(\"category\", true, true), new Sorter(\"label\", false)],\n\t\t\tlength: 500,\n\t\t\tfilters: this.propertyFilter,\n\t\t\tfactory: () => {\n\t\t\t\treturn new ListItem({\n\t\t\t\t\tkey: \"{\" + this.setSelectionKeysMap.name + \"}\",\n\t\t\t\t\ttext: \"{\" + this.setSelectionKeysMap.label + \"}\"\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\tthis._idNavigationComboBox.bindAggregation(\"items\", {\n\t\t\tpath: \"navigationalPropertiesForId/\",\n\t\t\tsorter: new Sorter(\"label\", false),\n\t\t\tlength: 500,\n\t\t\tfactory: function () {\n\t\t\t\treturn new ListItem({\n\t\t\t\t\tkey: \"{name}\",\n\t\t\t\t\ttext: \"{labelWithValue}\"\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\tthis.criticalityComboBox.setModel(this.getCriticalityModel(), \"internal\");\n\t\tthis.criticalityComboBox.bindAggregation(\"items\", {\n\t\t\tpath: \"internal>/\",\n\t\t\tsorter: [new Sorter(\"category\", true, true), new Sorter(\"label\", false)],\n\t\t\tlength: 500,\n\t\t\tfactory: function () {\n\t\t\t\treturn new ListItem({\n\t\t\t\t\tkey: \"{internal>name}\",\n\t\t\t\t\ttext: \"{internal>label}\"\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\tgetCriticalityModel() {\n\t\treturn new JSONModel(this.staticCriticality);\n\t}\n\n\t/**\n\t * Sets the items property with the selectionKeys provided\n\t * bind items for list control using binding path of items,\n\t * creates a custom layout for each item using a HBox and arranging the content within the HBox according to the specified styles\n\t *\n\t * @param {Array<CriticalityOptions>} selectionKeys - The array of items to be set\n\t * @returns {void}\n\t */\n\n\tsetItems(selectionKeys: Array<CriticalityOptions>): void {\n\t\tthis.setProperty(\"items\", selectionKeys, true);\n\t\tthis.itemsMap = this.getBindingInfo(\"items\").parameters as CriticalityOptions;\n\t\tthis.criticalityComboBox.bindProperty(\"selectedKey\", this.itemsMap.value as PropertyBindingInfo);\n\t\tthis._idNavigationComboBox.bindProperty(\"selectedKey\", { path: \"navigationKeyForId\" });\n\t\tif (this.getType() === \"COMPACT\") {\n\t\t\tthis.criticalityComboBox.setWidth(\"300px\");\n\t\t\tconst length = this.criticalityCalculator.getItems().length;\n\t\t\tif (length > 0) {\n\t\t\t\tthis.criticalityCalculator.getItems()[length - 1].setVisible(false);\n\t\t\t}\n\t\t}\n\n\t\tthis.propertyComboBox.bindProperty(\"selectedKey\", this.itemsMap.name as PropertyBindingInfo);\n\t\tconst bindingPath = this.getBindingPath(\"items\") ?? \"\";\n\t\tthis.list.bindItems({\n\t\t\tpath: bindingPath,\n\t\t\ttemplate: new CustomListItem({\n\t\t\t\tcontent: [\n\t\t\t\t\tnew HBox({\n\t\t\t\t\t\tjustifyContent: \"SpaceAround\",\n\t\t\t\t\t\trenderType: \"Bare\",\n\t\t\t\t\t\titems:\n\t\t\t\t\t\t\tthis.getType() === \"COMPACT\"\n\t\t\t\t\t\t\t\t? [this.criticalityComboBox]\n\t\t\t\t\t\t\t\t: [\n\t\t\t\t\t\t\t\t\t\tthis.propertyComboBox,\n\t\t\t\t\t\t\t\t\t\tthis._idNavigationComboBox,\n\t\t\t\t\t\t\t\t\t\tthis.separatorColon,\n\t\t\t\t\t\t\t\t\t\tthis.criticalityComboBox,\n\t\t\t\t\t\t\t\t\t\tthis.deleteButton\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t}),\n\t\t\t\t\tnew HBox({\n\t\t\t\t\t\tjustifyContent: this.getType() === \"COMPACT\" ? \"Start\" : \"SpaceAround\",\n\t\t\t\t\t\titems: [this.criticalityCalculator]\n\t\t\t\t\t})\n\t\t\t\t]\n\t\t\t})\n\t\t});\n\t}\n\n\t/**\n\t *\n\t * @param event Event object\n\t * @param editor CriticalityEditor instance\n\t * @param isNavigation boolean flag to check if the event is for navigation\n\t * @returns object\n\t */\n\n\thandleComboBoxEvents(event: Event, isNavigation: boolean = false) {\n\t\tconst controlId = (event.getParameter as (param: string) => string)(\"id\");\n\t\tconst control = CoreElement.getElementById(controlId) as ComboBox;\n\t\tlet selectedKey = control.getSelectedKey();\n\t\tconst source = event.getSource();\n\t\tconst bindingContext = (source as ComboBox).getBindingContext() as Context;\n\t\tconst path = bindingContext?.getPath() || \"\";\n\t\tconst model = this.getModel() as JSONModel;\n\t\tconst group = model.getProperty(path);\n\n\t\tconst navigationProperties: NavigationParameter[] = model.getProperty(\"/configuration/navigationProperty\") || [];\n\t\tconst isNavigationalProperty = this.hasNavigationProperty(navigationProperties, group?.name);\n\t\tif (!isNavigation) {\n\t\t\tgroup.navigationKeyForId = \"\";\n\t\t}\n\t\tif (isNavigationalProperty) {\n\t\t\tgroup.propertyKeyForId = selectedKey;\n\t\t\tconst navProperty = navigationProperties.filter((prop) => prop.name === group?.name);\n\t\t\tgroup.navigationalPropertiesForId = navProperty?.[0]?.properties || [];\n\t\t\tgroup.isNavigationForId = group.navigationalPropertiesForId.length > 0;\n\t\t} else {\n\t\t\tgroup.isNavigationForId = false;\n\t\t}\n\t\tif (isNavigation && selectedKey !== \"\") {\n\t\t\tselectedKey = `${group.name}/${selectedKey}`;\n\t\t}\n\t\tconst previewItems = getPreviewItems(model);\n\t\tconst isItemNotSelected = !previewItems.includes(selectedKey);\n\t\tthis.setValueStateForModel(model, selectedKey, isItemNotSelected);\n\t\tmodel.refresh();\n\t\treturn group;\n\t}\n\n\t/**\n\t * Retrieves the internal model of the CriticalityEditor control\n\t *\n\t * This method checks if the internal model exists. If not, it creates a new JSON model\n\t * and sets it as the internal model. It then returns the internal model\n\t *\n\t * @returns {sap.ui.model.Model} The internal model of the control\n\t */\n\n\tprotected _getInternalModel(): Model {\n\t\tlet model = this.getModel(\"internal\");\n\t\tif (!model) {\n\t\t\tmodel = new JSONModel({});\n\t\t\tthis.setModel(model, \"internal\");\n\t\t}\n\t\treturn model;\n\t}\n\n\t/**\n\t * Retrieves the items from the model\n\t *\n\t * This method fetches the items from the model using the binding path for items\n\t *\n\t * @returns {Array<CriticalityOptions>} An array containing the items retrieved from the model\n\t */\n\n\tgetItems(): Array<CriticalityOptions> {\n\t\tconst path = this.getBindingPath(\"items\") || \"\";\n\t\treturn (this.getModel() as JSONModel).getProperty(path);\n\t}\n\t/**\n\t * Handles the click event of the add button, adds a new item to the array and refreshes the model\n\t *\n\t * @returns {void}\n\t */\n\n\tonAddButtonClicked(): void {\n\t\tconst model = this.getModel();\n\t\tconst path = this.getBindingPath(\"items\") || \"\";\n\t\tif (model) {\n\t\t\tlet boundData = model.getProperty(path);\n\t\t\tif (!boundData) {\n\t\t\t\tboundData = [];\n\t\t\t}\n\t\t\tboundData.push({});\n\t\t\tmodel.refresh();\n\t\t}\n\t}\n\n\t/**\n\t * Handles the click event of the delete button, removes item to be deleted, refreshes the model and fires a change event\n\t *\n\t * @param {Event} event - The event object representing the click event\n\t * @returns {void}\n\t */\n\n\tonDeleteButtonClicked(event: Event): void {\n\t\tlet itemBindingPath = this.getBindingPath(\"items\");\n\t\tconst model = this.getModel() as JSONModel;\n\t\tconst sourceCriticalityPropertyName =\n\t\t\tmodel.getProperty(\"/configuration/advancedFormattingOptions/sourceCriticalityProperty/0/name\") || \"\";\n\t\tconst criticalityData = model.getProperty(\"/configuration/mainIndicatorOptions/criticality\") || [];\n\t\tlet path;\n\n\t\tif (this.getType() === \"COMPACT\") {\n\t\t\tif (sourceCriticalityPropertyName) {\n\t\t\t\tconst index = criticalityData.findIndex((data: CriticalityOptions) => data?.name === sourceCriticalityPropertyName);\n\t\t\t\tif (index !== -1) {\n\t\t\t\t\tpath = `/configuration/mainIndicatorOptions/criticality/${index}`;\n\t\t\t\t\tmodel.setProperty(\"/configuration/advancedFormattingOptions/sourceCriticalityProperty\", []);\n\t\t\t\t\titemBindingPath = \"/configuration/mainIndicatorOptions/criticality\";\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tconst source: ComboBox = event.getSource();\n\t\t\tconst bindingContext = source.getBindingContext() as Context;\n\t\t\tpath = bindingContext.getPath() || \"\";\n\t\t\tconst propertyName = model.getProperty(path) && model.getProperty(path).name;\n\t\t\tif (propertyName === sourceCriticalityPropertyName) {\n\t\t\t\tmodel.setProperty(\"/configuration/advancedFormattingOptions/sourceCriticalityProperty\", []);\n\t\t\t}\n\t\t}\n\n\t\tif (path && itemBindingPath) {\n\t\t\tmodel.getProperty(itemBindingPath).splice(path.slice(path.length - 1), 1);\n\t\t\tmodel.refresh();\n\t\t\tthis.fireEvent(\"change\", {\n\t\t\t\tvalue: this.getItems()\n\t\t\t});\n\t\t}\n\t}\n\n\tisPotentialCriticality(property: PropertyInfo): boolean {\n\t\tswitch (property.type) {\n\t\t\tcase \"Edm.Date\":\n\t\t\tcase \"Edm.Boolean\":\n\t\t\tcase \"Edm.Guid\":\n\t\t\tcase \"Edm.DateTimeOffset\":\n\t\t\t\treturn false;\n\t\t\tcase \"Edm.Decimal\":\n\t\t\tcase \"Edm.Byte\":\n\t\t\tcase \"Edm.Int32\":\n\t\t\t\tif (typeof property.value === \"number\" && property.value > -2 && property.value < 6) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\tcase \"Edm.String\":\n\t\t\t\tswitch (property.value) {\n\t\t\t\t\tcase null:\n\t\t\t\t\tcase \"-1\":\n\t\t\t\t\tcase \"0\":\n\t\t\t\t\tcase \"1\":\n\t\t\t\t\tcase \"2\":\n\t\t\t\t\tcase \"3\":\n\t\t\t\t\tcase \"4\":\n\t\t\t\t\tcase \"5\":\n\t\t\t\t\tcase \"Positive\":\n\t\t\t\t\tcase \"Negative\":\n\t\t\t\t\tcase \"Neutral\":\n\t\t\t\t\tcase \"Critical\":\n\t\t\t\t\tcase \"VeryNegative\":\n\t\t\t\t\tcase \"VeryPositive\":\n\t\t\t\t\tcase \"Information\":\n\t\t\t\t\t\treturn true;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\tdefault:\n\t\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Sets the static criticality data\n\t * This method fetches the criticality category and assigns it to the static criticality items.\n\t */\n\tsetCriticalityModel(): void {\n\t\tconst criticalityCategory = this.getModel(\"i18n\")?.getObject(\"CRITICALITY_CONTROL_SELECT_CRITICALITY\");\n\n\t\tthis.staticCriticality = [\n\t\t\t{\n\t\t\t\tname: \"Neutral\",\n\t\t\t\tlabel: \"Neutral\",\n\t\t\t\tcategory: criticalityCategory\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"Good\",\n\t\t\t\tlabel: \"Positive\",\n\t\t\t\tcategory: criticalityCategory\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"Critical\",\n\t\t\t\tlabel: \"Critical\",\n\t\t\t\tcategory: criticalityCategory\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"Error\",\n\t\t\t\tlabel: \"Negative\",\n\t\t\t\tcategory: criticalityCategory\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"Calculation\",\n\t\t\t\tlabel: \"Create Calculation\",\n\t\t\t\tcategory: \"Calculation:\"\n\t\t\t}\n\t\t];\n\t}\n\t/**\n\t * Checks if a specific property exists within the given navigation properties.\n\t *\n\t * @param {NavigationParameter[]} navigationProperties - An array of navigation parameters to search through.\n\t * @param {string} propertyToCheck - The name of the property to check for.\n\t * @returns {boolean} True if the property exists in the navigation properties, otherwise false.\n\t */\n\thasNavigationProperty(navigationProperties: NavigationParameter[], propertyToCheck: string): boolean {\n\t\treturn navigationProperties.length > 0 && navigationProperties.some((prop) => prop.name === propertyToCheck);\n\t}\n\n\t/**\n\t * The function sets the ValueState of properties present in advanced formatting panel,\n\t * to ValueState.Information or ValueState.None on the basis of properties present in card preview.\n\t * @param {JSONModel} model - The JSON model containing the card configuration.\n\t * @param {string} selectedKey - The selected key from the ComboBox.\n\t * @param {boolean} isItemNotSelected - Flag indicating if the item is not present in the card preview.\n\t * @returns {void}\n\t */\n\tsetValueStateForModel(model: JSONModel, selectedKey: string, isItemNotSelected: boolean): void {\n\t\tconst criticalityData = model.getProperty(\"/configuration/mainIndicatorOptions/criticality\") || [];\n\t\tconst i18nModel = this.getModel(\"i18n\") as ResourceModel;\n\t\tconst informativeMessage = i18nModel.getObject(\"UNSELECTED_ITEM\");\n\t\tcriticalityData.forEach((item: CriticalityOptions, index: number) => {\n\t\t\tconst itemName = item.navigationKeyForId ? `${item.name}/${item.navigationKeyForId}` : item.name;\n\t\t\tlet isNavigationalProperty: boolean = false;\n\t\t\tif (item.isNavigationForId && item.navigationKeyForId) {\n\t\t\t\tisNavigationalProperty = true;\n\t\t\t}\n\t\t\tif (isItemNotSelected && selectedKey === itemName) {\n\t\t\t\tif (item.valueState === ValueState.None || item.valueState === undefined) {\n\t\t\t\t\tmodel.setProperty(`/configuration/mainIndicatorOptions/criticality/${index}/valueState`, ValueState.Information);\n\t\t\t\t\tmodel.setProperty(`/configuration/mainIndicatorOptions/criticality/${index}/valueStateText`, informativeMessage);\n\t\t\t\t}\n\t\t\t\tif (isNavigationalProperty) {\n\t\t\t\t\tmodel.setProperty(\n\t\t\t\t\t\t`/configuration/mainIndicatorOptions/criticality/${index}/navigationValueState`,\n\t\t\t\t\t\tValueState.Information\n\t\t\t\t\t);\n\t\t\t\t\tmodel.setProperty(\n\t\t\t\t\t\t`/configuration/mainIndicatorOptions/criticality/${index}/navigationValueStateText`,\n\t\t\t\t\t\tinformativeMessage\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} else if (!isItemNotSelected && selectedKey === itemName) {\n\t\t\t\tif (item.valueState === ValueState.Information) {\n\t\t\t\t\tmodel.setProperty(`/configuration/mainIndicatorOptions/criticality/${index}/valueState`, ValueState.None);\n\t\t\t\t\tmodel.setProperty(`/configuration/mainIndicatorOptions/criticality/${index}/valueStateText`, \"\");\n\t\t\t\t}\n\t\t\t\tif (isNavigationalProperty) {\n\t\t\t\t\tmodel.setProperty(`/configuration/mainIndicatorOptions/criticality/${index}/navigationValueState`, ValueState.None);\n\t\t\t\t\tmodel.setProperty(`/configuration/mainIndicatorOptions/criticality/${index}/navigationValueStateText`, \"\");\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":"app/controls"}},{"offset":{"line":53,"column":0},"map":{"version":3,"file":"CardActions.js","names":["sap","ui","define","sap_ui_core_library","Filter","____helpers_FooterActions","____helpers_IntegrationCardHelper","____helpers_Transpiler","____utils_CommonUtils","_iteratorSymbol","Symbol","iterator","_settle","pact","state","value","s","_Pact","v","o","bind","then","observer","prototype","onFulfilled","onRejected","result","this","callback","e","_this","_isSettledPact","thenable","_forTo","array","body","check","i","reject","_cycle","length","onAddedActionTitleChange","oEvent","_temp3","renderCardPreview","manifest","model","transpileIntegrationCardToAdaptive","getDialogModel","control","getSource","path","getBindingContext","getPath","getCurrentCardManifest","validateSelectedAction","addedAction","getProperty","titleKey","getSelectedKey","title","getValue","isStyleControlEnabled","updateRelativeproperties","setValueState","ValueState","None","Error","setValueStateText","getTranslatedText","errorControls","includes","push","focus","resetCardActions","addedActions","_temp2","_forOf","action","_temp","Promise","resolve","addActionToCardManifest","target","step","next","done","return","_fixup","TypeError","values","removeActionFromManifest","updateCardManifestAction","onActionAddClick","style","enablePathKey","isConfirmationRequired","setProperty","onAddedActionDelete","inputListControl","getParent","innerControls","findAggregatedObjects","comboBox","find","getMetadata","getName","updatedErrorControls","filter","actionIndex","Number","split","deletedAction","undefined","splice","annotationActions","some","annotationAction","label","relatedAnnotationAction","enabledPath","enablePath","indexOf","replace","filterCardActions","dialogModel","itemsBinding","getBinding","actionToFilter","loadActions","controlEvent","isSuspended","refresh","resume","addEventDelegate","onBeforeRendering","onAddedActionStyleChange","key","getObject","__exports","__esModule"],"sources":["CardActions.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nimport type Button from \"sap/m/Button\";\nimport type ComboBox from \"sap/m/ComboBox\";\nimport type Event from \"sap/ui/base/Event\";\nimport { ValueState } from \"sap/ui/core/library\";\nimport Filter from \"sap/ui/model/Filter\";\nimport type ListBinding from \"sap/ui/model/ListBinding\";\nimport type JSONModel from \"sap/ui/model/json/JSONModel\";\nimport { addActionToCardManifest, removeActionFromManifest, resetCardActions, updateCardManifestAction } from \"../../helpers/FooterActions\";\nimport { getCurrentCardManifest, renderCardPreview } from \"../../helpers/IntegrationCardHelper\";\nimport { transpileIntegrationCardToAdaptive } from \"../../helpers/Transpiler\";\nimport type { AnnotationAction, ControlProperties } from \"../../types/ActionTypes\";\nimport { getDialogModel } from \"../../utils/CommonUtils\";\n\n/**\n *\n * Handles the click event for adding a new action to the card.\n *\n */\nfunction onActionAddClick() {\n\tconst model = getDialogModel() as JSONModel;\n\tconst addedActions = model.getProperty(\"/configuration/actions/addedActions\");\n\n\tif (addedActions.length < 2) {\n\t\taddedActions.push({\n\t\t\ttitle: \"\",\n\t\t\ttitleKey: \"\",\n\t\t\tstyle: \"Default\",\n\t\t\tenablePathKey: \"\",\n\t\t\tisStyleControlEnabled: false,\n\t\t\tisConfirmationRequired: false\n\t\t});\n\t\tmodel.setProperty(\"/configuration/actions/addedActions\", addedActions);\n\t\tmodel.setProperty(\"/configuration/isEdited\", true);\n\t}\n\tmodel.setProperty(\"/configuration/actions/isAddActionEnabled\", addedActions.length < 2);\n}\n\n/**\n * Handles the delete event for removing an added action from the card.\n *\n * @param {Event} oEvent - The event object triggered by the delete action.\n */\nfunction onAddedActionDelete(oEvent: Event) {\n\tconst model = getDialogModel() as JSONModel;\n\tconst control: Button = oEvent?.getSource();\n\tconst path = control?.getBindingContext()?.getPath();\n\tconst inputListControl = control.getParent()?.getParent();\n\tconst innerControls = inputListControl?.findAggregatedObjects(true);\n\tconst comboBox = innerControls?.find((control) => control.getMetadata().getName() === \"sap.m.ComboBox\") as ComboBox | undefined;\n\tcomboBox?.setValueState(ValueState.None);\n\tif (comboBox) {\n\t\tconst errorControls = model.getProperty(\"/configuration/errorControls\") ?? [];\n\t\tconst updatedErrorControls = errorControls.filter((control: ComboBox) => control !== comboBox);\n\t\tmodel.setProperty(\"/configuration/errorControls\", updatedErrorControls);\n\t}\n\tconst actionIndex = Number(path?.split(\"/configuration/actions/addedActions/\")[1]);\n\tconst addedActions = model.getProperty(\"/configuration/actions/addedActions\") as Array<ControlProperties>;\n\tconst deletedAction = actionIndex !== undefined ? addedActions.splice(actionIndex, 1) : [];\n\tmodel.setProperty(\"/configuration/actions/addedActions\", addedActions);\n\tmodel.setProperty(\"/configuration/actions/isAddActionEnabled\", addedActions.length < 2);\n\tmodel.setProperty(\"/configuration/isEdited\", true);\n\tconst manifest = getCurrentCardManifest();\n\tremoveActionFromManifest(manifest, deletedAction[0]);\n\trenderCardPreview(manifest, model);\n\ttranspileIntegrationCardToAdaptive(model);\n}\n\n/**\n * Validates the selected action in the ComboBox control.\n *\n * @param {ComboBox} control - The ComboBox control containing the selected action.\n * @returns {boolean} true if the selected action is valid, false otherwise.\n */\nfunction validateSelectedAction(control: ComboBox): boolean {\n\tconst model = getDialogModel() as JSONModel;\n\tconst annotationActions = model.getProperty(\"/configuration/actions/annotationActions\") as Array<AnnotationAction>;\n\treturn annotationActions.some((annotationAction) => {\n\t\treturn annotationAction.label === control.getValue() && annotationAction.action === control.getSelectedKey();\n\t});\n}\n\n/**\n * Updates the relative properties of an added action based on the annotation actions.\n *\n *\n * @param {ControlProperties} addedAction - The added action to be updated.\n * @param {string} path - The path in the model where the added action is stored.\n */\nfunction updateRelativeproperties(addedAction: ControlProperties, path: string) {\n\tconst model = getDialogModel() as JSONModel;\n\tconst annotationActions = model.getProperty(\"/configuration/actions/annotationActions\") as Array<AnnotationAction>;\n\tconst relatedAnnotationAction = annotationActions.filter((annotationAction) => {\n\t\treturn annotationAction.label === addedAction.title && annotationAction.action === addedAction.titleKey;\n\t});\n\n\tif (relatedAnnotationAction.length) {\n\t\tlet enabledPath = relatedAnnotationAction[0].enablePath;\n\t\tenabledPath = enabledPath?.indexOf(\"_it/\") > -1 ? enabledPath?.replace(\"_it/\", \"\") : enabledPath; // Remove instance of _it/ from the path\n\t\tconst isConfirmationRequired = relatedAnnotationAction[0].isConfirmationRequired;\n\t\tif (enabledPath) {\n\t\t\taddedAction.enablePathKey = enabledPath;\n\t\t}\n\n\t\tif (isConfirmationRequired) {\n\t\t\taddedAction.isConfirmationRequired = isConfirmationRequired;\n\t\t}\n\t}\n\tif (path) {\n\t\tmodel.setProperty(path, addedAction);\n\t}\n}\n\n/**\n * Filters the available card actions in the ComboBox control based on the added actions.\n *\n * @param {ComboBox} comboBox - The ComboBox control containing the available actions.\n */\nfunction filterCardActions(comboBox: ComboBox) {\n\tconst dialogModel = getDialogModel() as JSONModel;\n\tconst addedActions = dialogModel.getProperty(\"/configuration/actions/addedActions\") as ControlProperties[];\n\tconst itemsBinding = comboBox.getBinding(\"items\");\n\tconst titleKey = comboBox.getSelectedKey();\n\tconst actionToFilter = addedActions.filter((addedAction) => addedAction.titleKey !== titleKey);\n\tconst filter = actionToFilter.length ? new Filter(\"action\", \"NE\", actionToFilter[0].titleKey) : [];\n\t(itemsBinding as ListBinding).filter(filter);\n}\n\n/**\n * Loads the available actions into the ComboBox control and sets up filtering.\n *\n * @param {Event} controlEvent - The event object triggered by the control action.\n */\nfunction loadActions(controlEvent: Event) {\n\tconst comboBox: ComboBox = controlEvent.getSource();\n\tconst itemsBinding = comboBox.getBinding(\"items\");\n\n\tif (itemsBinding?.isSuspended()) {\n\t\titemsBinding.refresh(true);\n\t\titemsBinding.resume();\n\t}\n\n\tcomboBox.addEventDelegate({\n\t\tonBeforeRendering: filterCardActions.bind(null, comboBox)\n\t});\n}\n\n/**\n * Handles the change event for the title of an added action in the ComboBox control.\n *\n * @param {Event} oEvent - The event object triggered by the title change action.\n */\nasync function onAddedActionTitleChange(oEvent: Event) {\n\tconst model = getDialogModel() as JSONModel;\n\tconst control: ComboBox = oEvent.getSource();\n\tconst path = control?.getBindingContext()?.getPath() as string;\n\tconst manifest = getCurrentCardManifest();\n\n\tif (validateSelectedAction(control)) {\n\t\tconst addedAction = model.getProperty(path) as ControlProperties;\n\t\taddedAction.titleKey = control.getSelectedKey();\n\t\taddedAction.title = control.getValue();\n\t\taddedAction.isStyleControlEnabled = true;\n\t\tupdateRelativeproperties(addedAction, path || \"\");\n\t\tcontrol.setValueState(ValueState.None);\n\t} else {\n\t\tif (control.getValue() === \"\" && control.getSelectedKey() === \"\") {\n\t\t\tcontrol.setValueState(ValueState.None);\n\t\t} else {\n\t\t\tcontrol.setValueState(ValueState.Error);\n\t\t\tcontrol.setValueStateText(getTranslatedText(\"GENERATOR_ACTION_ERROR_TEXT\"));\n\t\t\tconst errorControls = model.getProperty(\"/configuration/errorControls\");\n\t\t\tif (errorControls && !errorControls.includes(control)) {\n\t\t\t\terrorControls.push(control);\n\t\t\t}\n\t\t}\n\t\tcontrol.focus();\n\t}\n\tresetCardActions(manifest);\n\tconst addedActions = model.getProperty(\"/configuration/actions/addedActions\") as ControlProperties[];\n\tfor (const action of addedActions) {\n\t\tif (action.titleKey) {\n\t\t\tawait addActionToCardManifest(manifest, action);\n\t\t}\n\t}\n\trenderCardPreview(manifest, model);\n\ttranspileIntegrationCardToAdaptive(model);\n}\n\n/**\n * Handles the change event for the style of an added action in the ComboBox control.\n *\n * @param {Event} oEvent - The event object triggered by the style change action.\n */\nfunction onAddedActionStyleChange(oEvent: Event) {\n\tconst model = getDialogModel() as JSONModel;\n\tconst control: ComboBox = oEvent.getSource();\n\tconst path = control?.getBindingContext()?.getPath() as string;\n\tconst addedAction = model.getProperty(path) as ControlProperties;\n\taddedAction.style = control.getSelectedKey();\n\tmodel.setProperty(path, addedAction);\n\tconst manifest = getCurrentCardManifest();\n\tupdateCardManifestAction(manifest, addedAction);\n\trenderCardPreview(manifest, model);\n\ttranspileIntegrationCardToAdaptive(model);\n}\n\n/**\n * Retrieves the translated text for the given key from the i18n model.\n *\n * @param {string} key - The key for which the translated text is to be retrieved.\n * @returns {string} The translated text corresponding to the provided key.\n */\nfunction getTranslatedText(key: string): string {\n\treturn getDialogModel(\"i18n\").getObject(key);\n}\n\nexport { filterCardActions, loadActions, onActionAddClick, onAddedActionDelete, onAddedActionStyleChange, onAddedActionTitleChange };\n"],"mappings":"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","ignoreList":[],"sourceRoot":"app/handlers"}},{"offset":{"line":60,"column":0},"map":{"version":3,"file":"FreeStyle.js","names":["sap","ui","define","sap_cards_ap_common_odata_ODataUtils","____helpers_CardGeneratorModel","____helpers_IntegrationCardHelper","____pages_Application","____utils_CommonUtils","applyServiceDetails","appComponent","Application","getInstance","getRootComponent","freeStyleDialogModel","getDialogModel","setProperty","currentCardManifest","getCurrentCardManifest","isEntityPathChanged","getProperty","configuration","parameters","_entitySet","value","isContextPathChanged","cardManifest","Object","keys","length","undefined","dialog","getCardGeneratorDialog","Promise","resolve","getCardGeneratorDialogModel","then","dialogModel","setModel","createCardManifest","getModel","integrationCardManifest","renderCardPreview","e","reject","onContextPathChange","event","applicationInstance","control","getSource","selectedContextPath","getValue","_temp","fetchDataForObjectContext","onEntitySetPathChange","rootComponent","fetchDetails","selectedEntitySet","serviceUrl","getEntitySetWithContextURLs","entitySetWithContextList","onServiceChange","selectedService","onBackButtonPress","__exports","__esModule"],"sources":["FreeStyle.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nimport { getEntitySetWithContextURLs } from \"sap/cards/ap/common/odata/ODataUtils\";\nimport type ComboBox from \"sap/m/ComboBox\";\nimport type Event from \"sap/ui/base/Event\";\nimport type { CardManifest } from \"sap/ui/integration/widgets/Card\";\nimport type JSONModel from \"sap/ui/model/json/JSONModel\";\nimport type V2ODataModel from \"sap/ui/model/odata/v2/ODataModel\";\nimport type V4ODataModel from \"sap/ui/model/odata/v4/ODataModel\";\nimport { getCardGeneratorDialogModel } from \"../../helpers/CardGeneratorModel\";\nimport { createCardManifest, getCurrentCardManifest, renderCardPreview } from \"../../helpers/IntegrationCardHelper\";\nimport { Application } from \"../../pages/Application\";\nimport { FreeStyle } from \"../../pages/FreeStyle\";\nimport { getCardGeneratorDialog, getDialogModel } from \"../../utils/CommonUtils\";\n\n/**\n * Handles the service change event.\n *\n * @param {Event} event - The event object triggered by the service change.\n */\nfunction onServiceChange(event: Event) {\n\tconst control: ComboBox = event.getSource();\n\tconst selectedService = control.getValue();\n\tconst freeStyleDialogModel = getDialogModel(\"freeStyle\") as JSONModel;\n\tfreeStyleDialogModel.setProperty(\"/entitySet\", \"\");\n\tfreeStyleDialogModel.setProperty(\"/entitySetWithObjectContext\", \"\");\n\tfreeStyleDialogModel.setProperty(\"/currentService\", selectedService);\n\tfreeStyleDialogModel.setProperty(\"/isApplyServiceDetailsEnabled\", false);\n}\n\n/**\n * Handles the entity set path change event.\n *\n * @param event\n */\nasync function onEntitySetPathChange(event: Event) {\n\tconst applicationInstance = Application.getInstance() as FreeStyle;\n\tconst { rootComponent } = applicationInstance.fetchDetails();\n\tconst control: ComboBox = event.getSource();\n\tconst selectedEntitySet = control.getValue();\n\tconst freeStyleDialogModel = getDialogModel(\"freeStyle\") as JSONModel;\n\tconst serviceUrl = freeStyleDialogModel.getProperty(\"/currentService\");\n\tfreeStyleDialogModel.setProperty(\"/entitySet\", selectedEntitySet);\n\tfreeStyleDialogModel.setProperty(\"/entitySetWithObjectContext\", \"\");\n\tfreeStyleDialogModel.setProperty(\"/entitySetWithObjectContextList\", []);\n\tfreeStyleDialogModel.setProperty(\"/isApplyServiceDetailsEnabled\", false);\n\tfreeStyleDialogModel.setProperty(\"/isEntityPathChanged\", true);\n\tconst entitySetWithContextList = await getEntitySetWithContextURLs(\n\t\tserviceUrl,\n\t\tselectedEntitySet,\n\t\trootComponent.getModel() as V2ODataModel | V4ODataModel\n\t);\n\tif (entitySetWithContextList?.length) {\n\t\tfreeStyleDialogModel.setProperty(\"/entitySetWithObjectContextList\", entitySetWithContextList);\n\t}\n}\n\n/**\n * Handles the context path change event.\n *\n * @param event\n */\nasync function onContextPathChange(event: Event) {\n\tconst freeStyleDialogModel = getDialogModel(\"freeStyle\") as JSONModel;\n\tfreeStyleDialogModel.setProperty(\"/isApplyServiceDetailsEnabled\", false);\n\tconst applicationInstance = Application.getInstance() as FreeStyle;\n\tconst control: ComboBox = event.getSource();\n\tconst selectedContextPath = control.getValue();\n\n\tif (selectedContextPath) {\n\t\tawait applicationInstance.fetchDataForObjectContext(selectedContextPath);\n\t\tfreeStyleDialogModel.setProperty(\"/entitySetWithObjectContext\", selectedContextPath);\n\t\tfreeStyleDialogModel.setProperty(\"/isApplyServiceDetailsEnabled\", true);\n\t\tfreeStyleDialogModel.setProperty(\"/isContextPathChanged\", true);\n\t}\n}\n\n/**\n * Applies the service details.\n */\nasync function applyServiceDetails() {\n\tconst appComponent = Application.getInstance().getRootComponent();\n\tconst freeStyleDialogModel = getDialogModel(\"freeStyle\") as JSONModel;\n\tfreeStyleDialogModel.setProperty(\"/isServiceDetailsView\", false);\n\n\tconst currentCardManifest = getCurrentCardManifest();\n\tconst isEntityPathChanged = currentCardManifest\n\t\t? freeStyleDialogModel.getProperty(\"/entitySet\") !==\n\t\t\t(currentCardManifest?.[\"sap.card\"]?.configuration?.parameters?._entitySet as { value?: string })?.value\n\t\t: freeStyleDialogModel.getProperty(\"/isEntityPathChanged\");\n\tconst isContextPathChanged = freeStyleDialogModel.getProperty(\"/isContextPathChanged\");\n\tconst cardManifest = Object.keys(currentCardManifest).length > 0 && !isEntityPathChanged ? currentCardManifest : undefined;\n\tconst dialog = getCardGeneratorDialog();\n\tconst dialogModel = await getCardGeneratorDialogModel(appComponent, cardManifest);\n\n\tif (isEntityPathChanged || isContextPathChanged) {\n\t\tdialog?.setModel(dialogModel);\n\t\tfreeStyleDialogModel.setProperty(\"/isEntityPathChanged\", false);\n\t\tfreeStyleDialogModel.setProperty(\"/isContextPathChanged\", false);\n\t}\n\n\tconst integrationCardManifest = await createCardManifest(\n\t\tappComponent,\n\t\tcardManifest as unknown as CardManifest,\n\t\tdialog?.getModel() as JSONModel\n\t);\n\trenderCardPreview(integrationCardManifest);\n}\n\nfunction onBackButtonPress() {\n\tconst freeStyleDialogModel = getDialogModel(\"freeStyle\") as JSONModel;\n\tfreeStyleDialogModel.setProperty(\"/isServiceDetailsView\", true);\n}\n\nexport { applyServiceDetails, onBackButtonPress, onContextPathChange, onEntitySetPathChange, onServiceChange };\n"],"mappings":"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","ignoreList":[],"sourceRoot":"app/handlers"}},{"offset":{"line":67,"column":0},"map":{"version":3,"file":"FormatterOptions.js","names":["sap","ui","define","CoreLib","ResourceModel","getFormatterConfiguration","oResourceBundle","getResourceBundleFor","i18nModel","bundleUrl","oUrlInfo","url","bundle","formatterName","displayName","getObject","parameters","name","type","defaultValue","properties","visible","defaultSelectedKey","selectedKey","options","value","bIsProperty","None","Negative","Critical","Positive","__exports","__esModule"],"sources":["FormatterOptions.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nimport CoreLib from \"sap/ui/core/Lib\";\nimport ResourceModel from \"sap/ui/model/resource/ResourceModel\";\nimport type { FormatterConfigurationMap } from \"../helpers/Formatter\";\n\nexport const getFormatterConfiguration = function (): FormatterConfigurationMap {\n\tconst oResourceBundle = CoreLib.getResourceBundleFor(\"sap.cards.ap.generator.i18n\");\n\tconst i18nModel = new ResourceModel({\n\t\tbundleUrl: oResourceBundle.oUrlInfo.url,\n\t\tbundle: oResourceBundle //Reuse created bundle to stop extra network calls\n\t});\n\n\treturn [\n\t\t{\n\t\t\tformatterName: \"format.date\",\n\t\t\tdisplayName: i18nModel.getObject(\"FORMAT_DATE\"),\n\t\t\tparameters: [\n\t\t\t\t{\n\t\t\t\t\tname: \"options\",\n\t\t\t\t\tdisplayName: \"Options\",\n\t\t\t\t\ttype: \"object\",\n\t\t\t\t\tdefaultValue: \"\",\n\t\t\t\t\tproperties: [{ name: \"UTC\", displayName: i18nModel.getObject(\"UTC\"), type: \"boolean\", defaultValue: false }]\n\t\t\t\t}\n\t\t\t],\n\t\t\ttype: \"Date\",\n\t\t\tvisible: true\n\t\t},\n\t\t{\n\t\t\tformatterName: \"format.dateTime\",\n\t\t\tdisplayName: i18nModel.getObject(\"FORMAT_DATETIME\"),\n\t\t\tparameters: [\n\t\t\t\t{\n\t\t\t\t\tname: \"options\",\n\t\t\t\t\tdisplayName: \"Options\",\n\t\t\t\t\ttype: \"object\",\n\t\t\t\t\tdefaultValue: \"\",\n\t\t\t\t\tproperties: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"relative\",\n\t\t\t\t\t\t\tdisplayName: i18nModel.getObject(\"RELATIVE\"),\n\t\t\t\t\t\t\ttype: \"boolean\",\n\t\t\t\t\t\t\tdefaultValue: false\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{ name: \"UTC\", displayName: i18nModel.getObject(\"UTC\"), type: \"boolean\", defaultValue: false }\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t],\n\t\t\ttype: \"Date\",\n\t\t\tvisible: true\n\t\t},\n\t\t{\n\t\t\tformatterName: \"format.float\",\n\t\t\tdisplayName: i18nModel.getObject(\"FORMAT_FLOAT\"),\n\t\t\tparameters: [\n\t\t\t\t{\n\t\t\t\t\tname: \"options\",\n\t\t\t\t\tdisplayName: \"Options\",\n\t\t\t\t\ttype: \"object\",\n\t\t\t\t\tdefaultValue: \"\",\n\t\t\t\t\tproperties: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"decimals\",\n\t\t\t\t\t\t\tdisplayName: i18nModel.getObject(\"DECIMALS\"),\n\t\t\t\t\t\t\ttype: \"number\",\n\t\t\t\t\t\t\tdefaultValue: 2\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"style\",\n\t\t\t\t\t\t\tdisplayName: i18nModel.getObject(\"STYLE\"),\n\t\t\t\t\t\t\ttype: \"enum\",\n\t\t\t\t\t\t\tdefaultSelectedKey: \"short\",\n\t\t\t\t\t\t\tselectedKey: \"short\",\n\t\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t\t{ value: \"short\", name: i18nModel.getObject(\"SHORT\") },\n\t\t\t\t\t\t\t\t{ value: \"long\", name: i18nModel.getObject(\"LONG\") }\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t],\n\t\t\ttype: \"numeric\",\n\t\t\tvisible: true\n\t\t},\n\t\t{\n\t\t\tformatterName: \"format.currency\",\n\t\t\tdisplayName: i18nModel.getObject(\"FORMAT_CURRENCY\"),\n\t\t\tparameters: [\n\t\t\t\t{ name: \"currency\", displayName: i18nModel.getObject(\"CURRENCY\"), type: \"string\", defaultValue: \"\" },\n\t\t\t\t{\n\t\t\t\t\tname: \"options\",\n\t\t\t\t\tdisplayName: \"Options\",\n\t\t\t\t\ttype: \"object\",\n\t\t\t\t\tdefaultValue: \"\",\n\t\t\t\t\tproperties: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"currencyCode\",\n\t\t\t\t\t\t\tdisplayName: i18nModel.getObject(\"CURRENCY_CODE\"),\n\t\t\t\t\t\t\ttype: \"boolean\",\n\t\t\t\t\t\t\tdefaultValue: false\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t],\n\t\t\ttype: \"numeric\",\n\t\t\tvisible: true\n\t\t},\n\t\t{\n\t\t\tformatterName: \"format.percent\",\n\t\t\tdisplayName: i18nModel.getObject(\"FORMAT_PERCENT\"),\n\t\t\tparameters: [],\n\t\t\ttype: \"numeric\",\n\t\t\tvisible: true\n\t\t},\n\t\t{\n\t\t\tformatterName: \"format.integer\",\n\t\t\tdisplayName: i18nModel.getObject(\"FORMAT_INTEGER\"),\n\t\t\tparameters: [],\n\t\t\ttype: \"numeric\",\n\t\t\tvisible: true\n\t\t},\n\t\t{\n\t\t\tformatterName: \"format.unit\",\n\t\t\tdisplayName: \"\",\n\t\t\tparameters: [\n\t\t\t\t{ name: \"type\", displayName: \"\", type: \"string\", defaultValue: \"\" },\n\t\t\t\t{\n\t\t\t\t\tname: \"options\",\n\t\t\t\t\tdisplayName: \"Options\",\n\t\t\t\t\ttype: \"object\",\n\t\t\t\t\tdefaultValue: \"\",\n\t\t\t\t\tproperties: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"decimals\",\n\t\t\t\t\t\t\tdisplayName: i18nModel.getObject(\"DECIMALS\"),\n\t\t\t\t\t\t\ttype: \"number\",\n\t\t\t\t\t\t\tdefaultValue: 2\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"style\",\n\t\t\t\t\t\t\tdisplayName: i18nModel.getObject(\"STYLE\"),\n\t\t\t\t\t\t\ttype: \"enum\",\n\t\t\t\t\t\t\tdefaultSelectedKey: \"short\",\n\t\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t\t{ value: \"short\", name: i18nModel.getObject(\"SHORT\") },\n\t\t\t\t\t\t\t\t{ value: \"long\", name: i18nModel.getObject(\"LONG\") }\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t],\n\t\t\ttype: \"numeric\",\n\t\t\tvisible: false\n\t\t},\n\t\t{\n\t\t\tformatterName: \"extension.formatters.targetValueFormatter\",\n\t\t\tdisplayName: i18nModel.getObject(\"FORMAT_TARGET_VALUE\"),\n\t\t\tparameters: [\n\t\t\t\t{ name: \"iTargetValue\", displayName: i18nModel.getObject(\"TARGET_VALUE\"), type: \"number\", defaultValue: \"\" },\n\t\t\t\t{\n\t\t\t\t\tname: \"mStaticValues\",\n\t\t\t\t\tdisplayName: \"Formatter configuration\",\n\t\t\t\t\ttype: \"object\",\n\t\t\t\t\tdefaultValue: \"\",\n\t\t\t\t\tproperties: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"NumberOfFractionalDigits\",\n\t\t\t\t\t\t\tdisplayName: i18nModel.getObject(\"NUMBER_OF_FRACTIONAL_DIGITS\"),\n\t\t\t\t\t\t\ttype: \"number\",\n\t\t\t\t\t\t\tdefaultValue: 2\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"manifestTarget\",\n\t\t\t\t\t\t\tdisplayName: i18nModel.getObject(\"MANIFEST_TARGET\"),\n\t\t\t\t\t\t\ttype: \"number\",\n\t\t\t\t\t\t\tdefaultValue: 0\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t],\n\t\t\ttype: \"numeric\",\n\t\t\tvisible: false\n\t\t},\n\t\t{\n\t\t\tformatterName: \"extension.formatters.formatValueColor\",\n\t\t\tdisplayName: i18nModel.getObject(\"FORMAT_COLOR_VALUE\"),\n\t\t\tparameters: [\n\t\t\t\t{\n\t\t\t\t\tname: \"mStaticValues\",\n\t\t\t\t\tdisplayName: \"Formatter configuration\",\n\t\t\t\t\ttype: \"object\",\n\t\t\t\t\tdefaultValue: \"\",\n\t\t\t\t\tproperties: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"sImprovementDirection\",\n\t\t\t\t\t\t\tdisplayName: i18nModel.getObject(\"IMPROVEMENT_DIRECTION\"),\n\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\tdefaultValue: \"\",\n\t\t\t\t\t\t\tbIsProperty: true\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"bIsDeviationLowBinding\",\n\t\t\t\t\t\t\tdisplayName: i18nModel.getObject(\"DEVIATION_LOW_BINDING\"),\n\t\t\t\t\t\t\ttype: \"boolean\",\n\t\t\t\t\t\t\tdefaultValue: false\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"bIsDeviationHighBinding\",\n\t\t\t\t\t\t\tdisplayName: i18nModel.getObject(\"DEVIATION_HIGH_BINDING\"),\n\t\t\t\t\t\t\ttype: \"boolean\",\n\t\t\t\t\t\t\tdefaultValue: false\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"bIsToleranceLowBinding\",\n\t\t\t\t\t\t\tdisplayName: i18nModel.getObject(\"TOLERANCE_LOW_BINDING\"),\n\t\t\t\t\t\t\ttype: \"boolean\",\n\t\t\t\t\t\t\tdefaultValue: false\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"bIsToleranceHighBinding\",\n\t\t\t\t\t\t\tdisplayName: i18nModel.getObject(\"TOLERANCE_HIGH_BINDING\"),\n\t\t\t\t\t\t\ttype: \"boolean\",\n\t\t\t\t\t\t\tdefaultValue: false\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"deviationLow\",\n\t\t\t\t\t\t\tdisplayName: i18nModel.getObject(\"LOW_DEVIATION\"),\n\t\t\t\t\t\t\ttype: \"number\",\n\t\t\t\t\t\t\tdefaultValue: 0\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"deviationHigh\",\n\t\t\t\t\t\t\tdisplayName: i18nModel.getObject(\"HIGH_DEVIATION\"),\n\t\t\t\t\t\t\ttype: \"number\",\n\t\t\t\t\t\t\tdefaultValue: 0\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"toleranceLow\",\n\t\t\t\t\t\t\tdisplayName: i18nModel.getObject(\"LOW_TOLERANCE\"),\n\t\t\t\t\t\t\ttype: \"number\",\n\t\t\t\t\t\t\tdefaultValue: 0\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"toleranceHigh\",\n\t\t\t\t\t\t\tdisplayName: i18nModel.getObject(\"HIGH_TOLERANCE\"),\n\t\t\t\t\t\t\ttype: \"number\",\n\t\t\t\t\t\t\tdefaultValue: 0\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"oCriticalityConfigValues\",\n\t\t\t\t\t\t\tdisplayName: \"Criticality States\",\n\t\t\t\t\t\t\ttype: \"object\",\n\t\t\t\t\t\t\tvalue: { None: \"Neutral\", Negative: \"Error\", Critical: \"Critical\", Positive: \"Good\" }\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{ name: \"nDefaultValue\", displayName: i18nModel.getObject(\"DEFAULT_VALUE\"), type: \"number\", defaultValue: \"\" }\n\t\t\t],\n\t\t\ttype: \"numeric\",\n\t\t\tvisible: false\n\t\t},\n\t\t{\n\t\t\tformatterName: \"extension.formatters.formatNumber\",\n\t\t\tdisplayName: i18nModel.getObject(\"FORMAT_NUMBER\"),\n\t\t\tparameters: [\n\t\t\t\t{ name: \"value2\", displayName: i18nModel.getObject(\"VALUE\"), type: \"number\", defaultValue: \"\" },\n\t\t\t\t{\n\t\t\t\t\tname: \"mStaticValues\",\n\t\t\t\t\tdisplayName: \"Formatter configuration\",\n\t\t\t\t\ttype: \"object\",\n\t\t\t\t\tdefaultValue: \"\",\n\t\t\t\t\tproperties: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"numberOfFractionalDigits\",\n\t\t\t\t\t\t\tdisplayName: i18nModel.getObject(\"NUMBER_OF_FRACTIONAL_DIGITS\"),\n\t\t\t\t\t\t\ttype: \"number\",\n\t\t\t\t\t\t\tdefaultValue: 0\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"style\",\n\t\t\t\t\t\t\tdisplayName: i18nModel.getObject(\"STYLE\"),\n\t\t\t\t\t\t\ttype: \"enum\",\n\t\t\t\t\t\t\tdefaultSelectedKey: \"short\",\n\t\t\t\t\t\t\tselectedKey: \"short\",\n\t\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t\t{ value: \"short\", name: i18nModel.getObject(\"SHORT\") },\n\t\t\t\t\t\t\t\t{ value: \"long\", name: i18nModel.getObject(\"LONG\") }\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{ name: \"showScale\", displayName: i18nModel.getObject(\"SCALE\"), type: \"boolean\", defaultValue: true },\n\t\t\t\t\t\t{ name: \"scaleFactor\", displayName: i18nModel.getObject(\"SCALE_FACTOR\"), type: \"number\", defaultValue: 0 }\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"textFragments\",\n\t\t\t\t\tdisplayName: i18nModel.getObject(\"DEFAULT_VALUE\"),\n\t\t\t\t\ttype: \"enum\",\n\t\t\t\t\tdefaultSelectedKey: [0],\n\t\t\t\t\tselectedKey: [0],\n\t\t\t\t\toptions: [\n\t\t\t\t\t\t{ name: i18nModel.getObject(\"INDEX_ZERO\"), value: \"[0]\" },\n\t\t\t\t\t\t{ name: i18nModel.getObject(\"INDEX_ONE\"), value: \"[1]\" },\n\t\t\t\t\t\t{ name: i18nModel.getObject(\"INDEX_ZERO_ONE\"), value: \"[0, 1]\" },\n\t\t\t\t\t\t{ name: i18nModel.getObject(\"INDEX_ONE_ZERO\"), value: \"[1, 0]\" }\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t],\n\t\t\ttype: \"string | numeric\",\n\t\t\tvisible: false\n\t\t},\n\t\t{\n\t\t\tformatterName: \"extension.formatters.formatWithPercentage\",\n\t\t\tdisplayName: i18nModel.getObject(\"FORMAT_VALUE_WITH_PERCENTAGE\"),\n\t\t\tparameters: [],\n\t\t\ttype: \"string\",\n\t\t\tvisible: false\n\t\t},\n\t\t{\n\t\t\tformatterName: \"extension.formatters.computePercentage\",\n\t\t\tdisplayName: i18nModel.getObject(\"FORMAT_COMPUTE_PERCENTAGE\"),\n\t\t\tparameters: [\n\t\t\t\t{ name: \"target\", displayName: i18nModel.getObject(\"TARGET_INDICATORS_TEXT\"), type: \"string\", defaultValue: \"\" },\n\t\t\t\t{\n\t\t\t\t\tname: \"sUnit\",\n\t\t\t\t\tdisplayName: i18nModel.getObject(\"UNIT\"),\n\t\t\t\t\ttype: \"enum\",\n\t\t\t\t\tdefaultSelectedKey: \"\",\n\t\t\t\t\tselectedKey: \"\",\n\t\t\t\t\toptions: [\n\t\t\t\t\t\t{ value: \"\", name: i18nModel.getObject(\"NO_UNIT\") },\n\t\t\t\t\t\t{ value: \"%\", name: i18nModel.getObject(\"PERCENT\") }\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t],\n\t\t\ttype: \"string | numeric\",\n\t\t\tvisible: false\n\t\t},\n\t\t{\n\t\t\tformatterName: \"extension.formatters.returnPercentageChange\",\n\t\t\tdisplayName: i18nModel.getObject(\"FORMAT_PERCENTAGE\"),\n\t\t\tparameters: [\n\t\t\t\t{ name: \"iTargetValue\", displayName: i18nModel.getObject(\"TARGET_VALUE\"), type: \"number\", defaultValue: \"\" },\n\t\t\t\t{\n\t\t\t\t\tname: \"mStaticValues\",\n\t\t\t\t\tdisplayName: \"Formatter configuration\",\n\t\t\t\t\ttype: \"object\",\n\t\t\t\t\tdefaultValue: \"\",\n\t\t\t\t\tproperties: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"NumberOfFractionalDigits\",\n\t\t\t\t\t\t\tdisplayName: i18nModel.getObject(\"NUMBER_OF_FRACTIONAL_DIGITS\"),\n\t\t\t\t\t\t\ttype: \"number\",\n\t\t\t\t\t\t\tdefaultValue: 2\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"manifestTarget\",\n\t\t\t\t\t\t\tdisplayName: i18nModel.getObject(\"MANIFEST_TARGET\"),\n\t\t\t\t\t\t\ttype: \"number\",\n\t\t\t\t\t\t\tdefaultValue: 0\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t],\n\t\t\ttype: \"string | numeric\",\n\t\t\tvisible: false\n\t\t},\n\t\t{\n\t\t\tformatterName: \"extension.formatters.formatCurrency\",\n\t\t\tdisplayName: i18nModel.getObject(\"FORMAT_CURRENCY_INTEGRATION\"),\n\t\t\tparameters: [\n\t\t\t\t{\n\t\t\t\t\tname: \"oFormatterProperties\",\n\t\t\t\t\tdisplayName: \"Formatter configuration\",\n\t\t\t\t\ttype: \"object\",\n\t\t\t\t\tdefaultValue: \"\",\n\t\t\t\t\tproperties: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"NumberOfFractionalDigits\",\n\t\t\t\t\t\t\tdisplayName: i18nModel.getObject(\"NUMBER_OF_FRACTIONAL_DIGITS\"),\n\t\t\t\t\t\t\ttype: \"number\",\n\t\t\t\t\t\t\tdefaultValue: 2\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{ name: \"scaleFactor\", displayName: i18nModel.getObject(\"SCALE_FACTOR\"), type: \"number\", defaultValue: 0 }\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{ name: \"bIncludeText\", displayName: i18nModel.getObject(\"INCLUDE_TEXT\"), type: \"boolean\", defaultValue: false },\n\t\t\t\t{ name: \"sCurrency\", displayName: i18nModel.getObject(\"CURRENCY\"), type: \"string\", defaultValue: \"\" },\n\t\t\t\t{ name: \"sCurrencyCodeText\", displayName: i18nModel.getObject(\"CURRENCY_CODE\"), type: \"string\", defaultValue: \"\" }\n\t\t\t],\n\t\t\ttype: \"numeric\",\n\t\t\tvisible: false\n\t\t},\n\t\t{\n\t\t\tformatterName: \"extension.formatters.formatHeaderCount\",\n\t\t\tdisplayName: i18nModel.getObject(\"FORMAT_HEADER_COUNT\"),\n\t\t\tparameters: [],\n\t\t\ttype: \"string | numeric\",\n\t\t\tvisible: false\n\t\t},\n\t\t{\n\t\t\tformatterName: \"extension.formatters.formatDate\",\n\t\t\tdisplayName: i18nModel.getObject(\"FORMAT_DATE\"),\n\t\t\tparameters: [\n\t\t\t\t{\n\t\t\t\t\tname: \"options\",\n\t\t\t\t\tdisplayName: \"Options\",\n\t\t\t\t\ttype: \"object\",\n\t\t\t\t\tdefaultValue: \"\",\n\t\t\t\t\tproperties: [{ name: \"UTC\", displayName: i18nModel.getObject(\"UTC\"), type: \"boolean\", defaultValue: false }]\n\t\t\t\t}\n\t\t\t],\n\t\t\ttype: \"string\",\n\t\t\tvisible: false\n\t\t},\n\t\t{\n\t\t\tformatterName: \"extension.formatters.formatKPIValue\",\n\t\t\tdisplayName: i18nModel.getObject(\"FORMAT_KPI_VALUE\"),\n\t\t\tparameters: [\n\t\t\t\t{\n\t\t\t\t\tname: \"mStaticValues\",\n\t\t\t\t\tdisplayName: \"Formatter configuration\",\n\t\t\t\t\ttype: \"object\",\n\t\t\t\t\tdefaultValue: \"\",\n\t\t\t\t\tproperties: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"NumberOfFractionalDigits\",\n\t\t\t\t\t\t\tdisplayName: i18nModel.getObject(\"NUMBER_OF_FRACTIONAL_DIGITS\"),\n\t\t\t\t\t\t\ttype: \"number\",\n\t\t\t\t\t\t\tdefaultValue: 2\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"percentageAvailable\",\n\t\t\t\t\t\t\tdisplayName: i18nModel.getObject(\"PERCENTAGE\"),\n\t\t\t\t\t\t\ttype: \"boolean\",\n\t\t\t\t\t\t\tdefaultValue: false\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{ name: \"bUnit\", displayName: i18nModel.getObject(\"UNIT\"), type: \"boolean\", defaultValue: false }\n\t\t\t],\n\t\t\ttype: \"string\",\n\t\t\tvisible: false\n\t\t},\n\t\t{\n\t\t\tformatterName: \"extension.formatters.formatTrendIcon\",\n\t\t\tdisplayName: i18nModel.getObject(\"FORMAT_TREND_ICON\"),\n\t\t\tparameters: [\n\t\t\t\t{\n\t\t\t\t\tname: \"mStaticValues\",\n\t\t\t\t\tdisplayName: \"Formatter configuration\",\n\t\t\t\t\ttype: \"object\",\n\t\t\t\t\tdefaultValue: \"\",\n\t\t\t\t\tproperties: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"bIsRefValBinding\",\n\t\t\t\t\t\t\tdisplayName: i18nModel.getObject(\"REFERENCE_VALUE_BINDING\"),\n\t\t\t\t\t\t\ttype: \"boolean\",\n\t\t\t\t\t\t\tdefaultValue: false\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"bIsDownDiffBinding\",\n\t\t\t\t\t\t\tdisplayName: i18nModel.getObject(\"DOWN_DIFFERENCE_BINDING\"),\n\t\t\t\t\t\t\ttype: \"boolean\",\n\t\t\t\t\t\t\tdefaultValue: false\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"bIsUpDiffBinding\",\n\t\t\t\t\t\t\tdisplayName: i18nModel.getObject(\"UP_DIFFERENCE_BINDING\"),\n\t\t\t\t\t\t\ttype: \"boolean\",\n\t\t\t\t\t\t\tdefaultValue: false\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"referenceValue\",\n\t\t\t\t\t\t\tdisplayName: i18nModel.getObject(\"REFERENCE_VALUE\"),\n\t\t\t\t\t\t\ttype: \"number\",\n\t\t\t\t\t\t\tdefaultValue: 0\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"downDifference\",\n\t\t\t\t\t\t\tdisplayName: i18nModel.getObject(\"DOWN_DIFFERENCE_VALUE\"),\n\t\t\t\t\t\t\ttype: \"number\",\n\t\t\t\t\t\t\tdefaultValue: 0\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"upDifference\",\n\t\t\t\t\t\t\tdisplayName: i18nModel.getObject(\"UP_DIFFERENCE_VALUE\"),\n\t\t\t\t\t\t\ttype: \"number\",\n\t\t\t\t\t\t\tdefaultValue: 0\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{ name: \"nDefaultValue\", displayName: i18nModel.getObject(\"DEFAULT_VALUE\"), type: \"number\", defaultValue: \"\" }\n\t\t\t],\n\t\t\ttype: \"string | numeric\",\n\t\t\tvisible: false\n\t\t},\n\t\t{\n\t\t\tformatterName: \"extension.formatters.formatCriticality\",\n\t\t\tdisplayName: i18nModel.getObject(\"FORMAT_CRITICALITY_STATE_OR_VALUE\"),\n\t\t\tparameters: [{ name: \"sType\", displayName: i18nModel.getObject(\"Criticality_States\"), type: \"string\", defaultValue: \"\" }],\n\t\t\ttype: \"string | numeric\",\n\t\t\tvisible: false\n\t\t},\n\t\t{\n\t\t\tformatterName: \"extension.formatters.formatCriticalityIcon\",\n\t\t\tdisplayName: i18nModel.getObject(\"FORMAT_CRITICALITY_ICON\"),\n\t\t\tparameters: [],\n\t\t\ttype: \"string | numeric\",\n\t\t\tvisible: false\n\t\t},\n\t\t{\n\t\t\tformatterName: \"extension.formatters.formatCriticalityButtonType\",\n\t\t\tdisplayName: i18nModel.getObject(\"FORMAT_CRITICALITY_BUTTON_TYPE\"),\n\t\t\tparameters: [],\n\t\t\ttype: \"string | numeric\",\n\t\t\tvisible: false\n\t\t},\n\t\t{\n\t\t\tformatterName: \"extension.formatters.formatToKeepWhitespace\",\n\t\t\tdisplayName: i18nModel.getObject(\"FORMAT_TO_KEEP_WHITESPACE\"),\n\t\t\tparameters: [],\n\t\t\ttype: \"string | numeric\",\n\t\t\tvisible: false\n\t\t},\n\t\t{\n\t\t\tformatterName: \"extension.formatters.formatDateValue\",\n\t\t\tdisplayName: i18nModel.getObject(\"FORMAT_DATE_VALUE\"),\n\t\t\tparameters: [\n\t\t\t\t{\n\t\t\t\t\tname: \"sPattern\",\n\t\t\t\t\tdisplayName: \"Format options\",\n\t\t\t\t\ttype: \"enum\",\n\t\t\t\t\tdefaultSelectedKey: \"yearmonth\",\n\t\t\t\t\tselectedKey: \"yearmonth\",\n\t\t\t\t\toptions: [\n\t\t\t\t\t\t{ name: i18nModel.getObject(\"YEAR_MONTH\"), value: \"yearmonth\" },\n\t\t\t\t\t\t{ name: i18nModel.getObject(\"YEAR_WEEK\"), value: \"yearweek\" },\n\t\t\t\t\t\t{ name: i18nModel.getObject(\"YEAR_QUARTER\"), value: \"yearquarter\" }\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t],\n\t\t\ttype: \"string\",\n\t\t\tvisible: false\n\t\t},\n\t\t{\n\t\t\tformatterName: \"extension.formatters.kpiValueCriticality\",\n\t\t\tdisplayName: i18nModel.getObject(\"FORMAT_KPI_VALUE_CRITICALITY\"),\n\t\t\tparameters: [],\n\t\t\ttype: \"string | numeric\",\n\t\t\tvisible: false\n\t\t},\n\t\t{\n\t\t\tformatterName: \"extension.formatters.formatCriticalityValueState\",\n\t\t\tdisplayName: i18nModel.getObject(\"FORMAT_CRITICALITY_VALUE_STATE\"),\n\t\t\tparameters: [],\n\t\t\ttype: \"string | numeric\",\n\t\t\tvisible: false\n\t\t},\n\t\t{\n\t\t\tformatterName: \"extension.formatters.formatCriticalityColorMicroChart\",\n\t\t\tdisplayName: i18nModel.getObject(\"FORMAT_MICRO_CHART\"),\n\t\t\tparameters: [],\n\t\t\ttype: \"string | numeric\",\n\t\t\tvisible: false\n\t\t}\n\t];\n};\n"],"mappings":"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","ignoreList":[],"sourceRoot":"config"}},{"offset":{"line":74,"column":0},"map":{"version":3,"file":"PreviewOptions.js","names":["sap","ui","define","PREVIEW_OPTIONS","hosts","key","text","height","width","type","hostConfig","__exports","__esModule"],"sources":["PreviewOptions.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nexport interface Host {\n\tkey: string;\n\ttext: string;\n\ttype: \"integration\" | \"adaptive\" | \"custom\";\n\theight?: string;\n\twidth?: string;\n\thostConfig?: string;\n}\n\nexport const PREVIEW_OPTIONS = {\n\thosts: [\n\t\t{\n\t\t\tkey: \"int-default\",\n\t\t\ttext: \"GENERATOR_DEFAULT_INT\",\n\t\t\theight: \"auto\",\n\t\t\twidth: \"500px\",\n\t\t\ttype: \"integration\"\n\t\t},\n\t\t{\n\t\t\tkey: \"int-my-home\",\n\t\t\ttext: \"GENERATOR_CM_INT\",\n\t\t\theight: \"530px\",\n\t\t\twidth: \"300px\",\n\t\t\ttype: \"integration\"\n\t\t},\n\t\t{\n\t\t\tkey: \"adaptive-ms-teams-light\",\n\t\t\ttext: \"GENERATOR_MS_TEAM_LIGHT_ADAPTIVE\",\n\t\t\ttype: \"adaptive\",\n\t\t\thostConfig: \"teams-light\"\n\t\t},\n\t\t{\n\t\t\tkey: \"adaptive-ms-teams-dark\",\n\t\t\ttext: \"GENERATOR_MS_TEAM_DARK_ADAPTIVE\",\n\t\t\ttype: \"adaptive\",\n\t\t\thostConfig: \"teams-dark\"\n\t\t},\n\t\t{\n\t\t\tkey: \"int-custom\",\n\t\t\ttext: \"GENERATOR_CUSTOM_INT\",\n\t\t\ttype: \"custom\",\n\t\t\theight: \"auto\",\n\t\t\twidth: \"auto\"\n\t\t}\n\t]\n};\n"],"mappings":"AAAA;;;;AAAA,aAAAA,IAAAC,GAAAC,OAAA,2BAcO,MAAMC,EAAkB,CAC9BC,MAAO,CACN,CACCC,IAAK,cACLC,KAAM,wBACNC,OAAQ,OACRC,MAAO,QACPC,KAAM,eAEP,CACCJ,IAAK,cACLC,KAAM,mBACNC,OAAQ,QACRC,MAAO,QACPC,KAAM,eAEP,CACCJ,IAAK,0BACLC,KAAM,mCACNG,KAAM,WACNC,WAAY,eAEb,CACCL,IAAK,yBACLC,KAAM,kCACNG,KAAM,WACNC,WAAY,cAEb,CACCL,IAAK,aACLC,KAAM,uBACNG,KAAM,SACNF,OAAQ,OACRC,MAAO,UAGR,IAAAG,EAAA,CAAAC,WAAA,MAAAD,EAAAR,kBAAA,OAAAQ,CAAA","ignoreList":[],"sourceRoot":"config"}},{"offset":{"line":81,"column":0},"map":{"version":3,"file":"TextArrangementOptions.js","names":["sap","ui","define","TEXTARRANGEMENT_OPTIONS","name","label","__exports","__esModule"],"sources":["TextArrangementOptions.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nexport const TEXTARRANGEMENT_OPTIONS = [\n\t{\n\t\tname: \"TextFirst\",\n\t\tlabel: \"TEXT_FIRST\"\n\t},\n\t{\n\t\tname: \"TextLast\",\n\t\tlabel: \"TEXT_LAST\"\n\t},\n\t{\n\t\tname: \"TextOnly\",\n\t\tlabel: \"TEXT_ONLY\"\n\t},\n\t{\n\t\tname: \"TextSeparate\",\n\t\tlabel: \"TEXT_SEPARATE\"\n\t}\n];\n"],"mappings":"AAAA;;;;AAAA,aAAAA,IAAAC,GAAAC,OAAA,2BAIO,MAAMC,EAA0B,CACtC,CACCC,KAAM,YACNC,MAAO,cAER,CACCD,KAAM,WACNC,MAAO,aAER,CACCD,KAAM,WACNC,MAAO,aAER,CACCD,KAAM,eACNC,MAAO,kBAEP,IAAAC,EAAA,CAAAC,WAAA,MAAAD,EAAAH,0BAAA,OAAAG,CAAA","ignoreList":[],"sourceRoot":"config"}},{"offset":{"line":88,"column":0},"map":{"version":3,"file":"Batch.js","names":["sap","ui","define","___pages_Application","___utils_IntegrationCardManifestParser","Application","ODataModelVersion","getContentProperties","getHeaderProperties","updateManifestWithSelectQueryParams","cardManifest","headerSelectProperties","headerSelect","createUrlParameters","$select","headerSelectQuery","contentSelectProperties","contentSelect","contentSelectQuery","configParameters","configuration","parameters","_headerSelectQuery","value","_contentSelectQuery","updateManifestWithExpandQueryParams","headerProperties","headerExpand","$expand","headerExpandQuery","contentProperties","contentExpand","contentExpandQuery","_headerExpandQuery","_contentExpandQuery","queryParameters","odataModel","getInstance","fetchDetails","selectQuery","properties","join","expandQuery","V4","navigationProperties","forEach","navProp","selectQueryForNavigationProperty","length","name","V2","map","property","createURLParams","selectProperties","urlParameters","__exports","__esModule"],"sources":["Batch.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nimport type { CardManifest } from \"sap/ui/integration/widgets/Card\";\nimport type { PropertyInfo, PropertyInfoMap } from \"../odata/ODataTypes\";\nimport { Application, ODataModelVersion } from \"../pages/Application\";\nimport type { Property } from \"../types/PropertyTypes\";\nimport { getContentProperties, getHeaderProperties } from \"../utils/IntegrationCardManifestParser\";\n\nexport type QueryParameters = {\n\tproperties: string[];\n\tnavigationProperties: {\n\t\tname: string;\n\t\tproperties: string[];\n\t}[];\n};\n\nexport type RequestQueryNavigationProperties = {\n\tname: string;\n\tproperties: Property[];\n};\n\nexport type RequestQueryComplexProperties = {\n\tname: string;\n\tproperties: Property[];\n};\n\nexport type RequestQueryParametersV4 = {\n\tproperties: PropertyInfo[];\n\tnavigationProperties: RequestQueryNavigationProperties[];\n\tcomplexProperties: RequestQueryComplexProperties[];\n};\nexport type RequestQueryParametersV2 = {\n\tproperties: Property[];\n\tnavigationProperties: RequestQueryNavigationProperties[];\n\tcomplexProperties: RequestQueryComplexProperties[];\n};\n\n/**\n * Updates the card manifest with select query parameters for header and content properties.\n *\n * @param {CardManifest} cardManifest - The card manifest object to be updated.\n */\nexport function updateManifestWithSelectQueryParams(cardManifest: CardManifest) {\n\tconst headerSelectProperties = getHeaderProperties(cardManifest);\n\tconst headerSelect = createUrlParameters(headerSelectProperties).$select;\n\tconst headerSelectQuery = headerSelect && `$select=${headerSelect}`;\n\tconst contentSelectProperties = getContentProperties(cardManifest);\n\tconst contentSelect = createUrlParameters(contentSelectProperties).$select;\n\tconst contentSelectQuery = contentSelect && `$select=${contentSelect}`;\n\tconst configParameters = cardManifest[\"sap.card\"].configuration?.parameters;\n\n\tif (!configParameters && cardManifest[\"sap.card\"].configuration) {\n\t\tcardManifest[\"sap.card\"].configuration.parameters = {\n\t\t\t_headerSelectQuery: {\n\t\t\t\tvalue: headerSelectQuery\n\t\t\t},\n\t\t\t_contentSelectQuery: {\n\t\t\t\tvalue: contentSelectQuery\n\t\t\t}\n\t\t};\n\t\treturn;\n\t}\n\n\tif (headerSelectQuery && configParameters) {\n\t\tconfigParameters._headerSelectQuery = {\n\t\t\tvalue: headerSelectQuery\n\t\t};\n\t}\n\tif (contentSelectQuery && configParameters) {\n\t\tconfigParameters._contentSelectQuery = {\n\t\t\tvalue: contentSelectQuery\n\t\t};\n\t}\n}\n\n/**\n * Updates the card manifest with expand query parameters for header and content properties.\n *\n * @param {CardManifest} cardManifest - The card manifest object to be updated.\n */\nexport function updateManifestWithExpandQueryParams(cardManifest: CardManifest) {\n\tconst headerProperties = getHeaderProperties(cardManifest);\n\tconst headerExpand = createUrlParameters(headerProperties).$expand;\n\tconst headerExpandQuery = headerExpand && `&$expand=${headerExpand}`;\n\tconst contentProperties = getContentProperties(cardManifest);\n\tconst contentExpand = createUrlParameters(contentProperties).$expand;\n\tconst contentExpandQuery = contentExpand && `&$expand=${contentExpand}`;\n\tconst configParameters = cardManifest[\"sap.card\"].configuration?.parameters;\n\n\tif (!configParameters && cardManifest[\"sap.card\"].configuration) {\n\t\tcardManifest[\"sap.card\"].configuration.parameters = {\n\t\t\t_headerExpandQuery: {\n\t\t\t\tvalue: headerExpandQuery\n\t\t\t},\n\t\t\t_contentExpandQuery: {\n\t\t\t\tvalue: contentExpandQuery\n\t\t\t}\n\t\t};\n\t\treturn;\n\t}\n\n\tif (headerExpandQuery && configParameters) {\n\t\tconfigParameters._headerExpandQuery = {\n\t\t\tvalue: headerExpandQuery\n\t\t};\n\t}\n\tif (contentExpandQuery && configParameters) {\n\t\tconfigParameters._contentExpandQuery = {\n\t\t\tvalue: contentExpandQuery\n\t\t};\n\t}\n}\n\n/*\n * Based on the odata model version(either v2 or v4) and the query parameters, this function creates the select and expand query parameters\n *\n * @param mParameters\n * @param odataModel\n * @returns\n */\nexport function createUrlParameters(queryParameters: QueryParameters) {\n\tconst { odataModel } = Application.getInstance().fetchDetails();\n\tlet selectQuery = queryParameters.properties.join(\",\");\n\tlet expandQuery = \"\";\n\n\tif (odataModel === ODataModelVersion.V4) {\n\t\tqueryParameters.navigationProperties.forEach((navProp) => {\n\t\t\tconst selectQueryForNavigationProperty = navProp.properties.join(\",\");\n\t\t\texpandQuery += expandQuery.length ? \",\" : \"\";\n\t\t\tselectQuery += selectQuery.length ? \",\" : \"\";\n\t\t\tselectQuery += `${navProp.name}`;\n\t\t\texpandQuery += selectQueryForNavigationProperty.length\n\t\t\t\t? `${navProp.name}($select=${selectQueryForNavigationProperty})`\n\t\t\t\t: `${navProp.name}`;\n\t\t});\n\t}\n\n\tif (odataModel === ODataModelVersion.V2) {\n\t\tqueryParameters.navigationProperties.forEach((navProp) => {\n\t\t\tselectQuery += selectQuery.length ? \",\" : \"\";\n\t\t\texpandQuery += expandQuery.length ? \",\" : \"\";\n\t\t\tselectQuery += navProp.properties.length\n\t\t\t\t? navProp.properties.map((property) => `${navProp.name}/${property}`)\n\t\t\t\t: `${navProp.name}`;\n\t\t\texpandQuery += `${navProp.name}`;\n\t\t});\n\t}\n\n\treturn {\n\t\t$select: selectQuery,\n\t\t$expand: expandQuery\n\t};\n}\n\n/**\n * Creates URL parameters for the given properties.\n *\n * @param {PropertyInfoMap} properties - The map of properties to create URL parameters from.\n * @returns {Record<string, string>} The URL parameters object containing the $select query parameter.\n */\nexport function createURLParams(properties: PropertyInfoMap): Record<string, string> {\n\tconst selectProperties = properties.map((property) => property.name);\n\tlet urlParameters = {};\n\tif (selectProperties.length) {\n\t\turlParameters = {\n\t\t\t$select: selectProperties.join(\",\")\n\t\t};\n\t}\n\n\treturn urlParameters;\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":"helpers"}},{"offset":{"line":95,"column":0},"map":{"version":3,"file":"CardGeneratorModel.js","names":["sap","ui","define","sap_cards_ap_common_services_RetrieveCard","CoreLib","sap_ui_core_library","JSONModel","___helpers_Batch","___odata_ODataUtils","___pages_Application","___FooterActions","___Formatter","___IntegrationCardHelper","___NavigationProperty","_iteratorSymbol","Symbol","iterator","_settle","pact","state","value","s","_Pact","v","o","bind","then","observer","prototype","onFulfilled","onRejected","result","this","callback","e","_this","_isSettledPact","thenable","_forTo","array","body","check","i","reject","_cycle","length","getAdvancedFormattingOptions","unitOfMeasures","propertyValueFormatters","parsedManifest","path","formatterConfigsWithUnit","formatterConfigurationFromCardManifest","filter","formatterConfig","formatterName","mainIndicatorOptions","mainIndicatorCriticalityOptions","criticalityOptions","Promise","resolve","updateCriticalityForNavProperty","_updateCriticalityFor","_temp12","_getUpdatedUnitOfMeas","textArrangements","textArrangementsFromCardManifest","sourceCriticalityProperty","targetFormatterProperty","sourceUoMProperty","mainIndicatorStatusKey","selectedKeyCriticality","textArrangementSourceProperty","criticality","_temp11","getUpdatedUnitOfMeasures","_forOf","target","step","next","done","return","_fixup","TypeError","values","push","processParsedManifest","navigationProperty","mData","mCardManifest","_temp10","groups","group","_temp0","items","item","getNavigationPropertyInfoGroups","navigationPropertyInfoGroups","navigationEntitySet","navigationPropertyData","undefined","_temp1","textArrangement","getNavigationPropertyInfo","navigationPropInfo","navProperty","getKeyParameters","ValueState","createURLParams","createPathWithEntityContext","fetchDataAsync","getLabelForEntitySet","getNavigationPropertyInfoFromEntity","getPropertyInfoFromEntity","Application","ODataModelVersion","getCardActionInfo","formatPropertyDropdownValues","getDefaultPropertyFormatterConfig","getDefaultPropertyFormatterConfigForNavProperties","parseCard","getNavigationPropertiesWithLabel","updateNavigationPropertiesWithLabel","UnitCollection","Name","Value","_mergePropertyFormatters","defaultPropertyFormatters","userProvidedPropertyFormatters","mergedFormatters","propertyFormatter","find","formatter","property","getCardGeneratorDialogModel","appComponent","applicationInstance","getInstance","applicationDetails","fetchDetails","resourceBundle","getResourceBundleFor","sapApp","getManifestEntry","appModel","getModel","cardTitle","title","cardSubtitle","description","entitySetWithObjectContext","serviceUrl","semanticObject","action","odataModel","entitySetName","entitySet","bODataV4","V4","properties","propertiesWithNavigation","urlParameters","data","_temp9","addLabelsForProperties","parseManifestMainIndicatorOptions","trends","trendOptions","sideIndicators","sideIndicatorOptions","mainIndicatorNavigationSelectedKey","selectedNavigationalProperties","propertiesWithLabel","selectedNavigationPropertyHeader","name","mainIndicatorNavigationSelectedValue","getMainIndicatorSelectedNavigationProperty","advancedFormattingOptions","mainIndicatorStatusUnit","getMainIndicatorStatusUnit","_temp7","_temp6","getText","label","isEnabled","isNavigationEnabled","_temp5","navigationValue","_temp4","_criticality","_temp3","headerUOM","_temp2","subtitle","_temp","_getCardActionInfo","_getKeyParameters","dialogModelData","configuration","indicatorsValue","selectedTrendOptions","selectedIndicatorOptions","selectedContentNavigation","selectedHeaderNavigation","oDataV4","$data","targetUnit","deviationUnit","errorControls","actions","groupLimitReached","keyParameters","appIntent","isEdited","attachPropertyChange","getPropertyFormatters","_temp8","unitOfMeasuresMap","Map","map","uom","forEach","propertyName","propertyValue","propertyUOM","UOM","labelWithValue","has","propertyKeyForDescription","propertyKeyForId","valueState","None","valueStateText","category","propertyValueFormattersForNavigationalProperties","__exports","__esModule"],"sources":["CardGeneratorModel.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nimport type ResourceBundle from \"sap/base/i18n/ResourceBundle\";\nimport { getKeyParameters } from \"sap/cards/ap/common/services/RetrieveCard\";\nimport type Component from \"sap/ui/core/Component\";\nimport CoreLib from \"sap/ui/core/Lib\";\nimport { ValueState } from \"sap/ui/core/library\";\nimport type { CardManifest } from \"sap/ui/integration/widgets/Card\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\nimport type V2ODataModel from \"sap/ui/model/odata/v2/ODataModel\";\nimport type V4ODataModel from \"sap/ui/model/odata/v4/ODataModel\";\nimport type ResourceModel from \"sap/ui/model/resource/ResourceModel\";\nimport type { ArrangementOptions } from \"../app/controls/ArrangementsEditor\";\nimport { createURLParams } from \"../helpers/Batch\";\nimport { PropertyInfoMap } from \"../odata/ODataTypes\";\nimport {\n\tcreatePathWithEntityContext,\n\tfetchDataAsync,\n\tgetLabelForEntitySet,\n\tgetNavigationPropertyInfoFromEntity,\n\tgetPropertyInfoFromEntity\n} from \"../odata/ODataUtils\";\nimport { Application, ODataModelVersion } from \"../pages/Application\";\nimport { ActionStyles, AnnotationAction, ControlProperties } from \"../types/ActionTypes\";\nimport type { NavigationParameter, NavigationProperty, ObjectCardGroups, UnitOfMeasures } from \"../types/PropertyTypes\";\nimport { getCardActionInfo } from \"./FooterActions\";\nimport {\n\tFormatterConfigurationMap,\n\tformatPropertyDropdownValues,\n\tgetDefaultPropertyFormatterConfig,\n\tgetDefaultPropertyFormatterConfigForNavProperties\n} from \"./Formatter\";\nimport {\n\tgetUpdatedUnitOfMeasures,\n\tparseCard,\n\tupdateCriticalityForNavProperty,\n\ttype CriticalityOptionsPanel,\n\ttype ParsedManifest\n} from \"./IntegrationCardHelper\";\nimport {\n\tgetNavigationPropertiesWithLabel,\n\tgetNavigationPropertyInfo,\n\tgetNavigationPropertyInfoGroups,\n\tupdateNavigationPropertiesWithLabel\n} from \"./NavigationProperty\";\n\nexport type EntityType = {\n\t[key: string]: any;\n};\n\nexport type CriticalityOptions = {\n\tactiveCalculation: boolean;\n\tname: string;\n\tcriticality: string;\n\tnavigationKeyForId?: string;\n\tnavigationKeyForDescription?: string;\n\tnavigationProperty?: string;\n\tisNavigationForDescription?: boolean;\n\tisNavigationForId?: boolean;\n\tpropertyKeyForId?: string;\n\tnavigationalPropertiesForId?: Array<object>;\n};\n\nexport type MainIndicatorOptions = {\n\tcriticality: Array<CriticalityOptions>;\n};\n\ntype AdvancedFormattingOptions = {\n\tunitOfMeasures: Array<UnitOfMeasures>;\n\ttextArrangements: Array<ArrangementOptions>;\n\tpropertyValueFormatters: Array<object>;\n\tsourceCriticalityProperty: Array<object>;\n\ttargetFormatterProperty: string;\n\tsourceUoMProperty: string;\n\tselectedKeyCriticality: string;\n\ttextArrangementSourceProperty: string;\n};\n\nexport type TrendOptions = {\n\treferenceValue: string;\n\tdownDifference: string;\n\tupDifference: string;\n\ttargetValue?: string;\n\tsourceProperty?: string;\n};\nexport type SideIndicatorOptions = {\n\ttargetValue: string;\n\ttargetUnit: string;\n\tdeviationValue: string;\n\tdeviationUnit: string;\n\tsourceProperty?: string;\n};\n\ntype CardActions = {\n\tannotationActions: Array<AnnotationAction>;\n\taddedActions: ControlProperties[];\n\tbODataV4: boolean;\n\tstyles: ActionStyles[];\n\tisAddActionEnabled: boolean;\n\tactionExists: boolean;\n};\n\ntype PropertyValue = string | null | undefined;\n\nexport type TrendOrIndicatorOptions = {\n\tsourceProperty: string;\n};\n\ntype KeyParameter = {\n\tkey: string;\n\tformattedValue: string;\n};\n\n/**\n * Description for the interface CardGeneratorDialogConfiguration\n * @interface CardGeneratorDialogConfiguration\n * @property {string} title The title of the card\n * @property {string} subtitle The subtitle of the card\n * @property {string} headerUOM The header unit of measure\n * @property {MainIndicatorOptions} mainIndicatorOptions The main indicator options\n * @property {string} mainIndicatorStatusKey The main indicator status key\n * @property {string} navigationValue The navigation value\n * @property {string} mainIndicatorStatusUnit The main indicator status unit\n * @property {NavigationProperty[]} selectedNavigationalProperties The selected navigational properties\n * @property {string} mainIndicatorNavigationSelectedValue The main indicator navigation selected value\n * @property {string} mainIndicatorNavigationSelectedKey The main indicator navigation selected key\n * @property {string} entitySet The entity set\n * @property {PropertyInfoMap} propertiesWithNavigation The properties with navigation\n * @property {Array<ObjectCardGroups>} groups The groups of the card displayed on content\n * @property {Array<object>} properties The properties\n * @property {AdvancedFormattingOptions} advancedFormattingOptions The advanced formatting options\n * @property {Array<object>} selectedTrendOptions The selected trend options\n * @property {Array<object>} selectedIndicatorOptions The selected indicator options\n * @property {Array<object>} navigationProperty The navigation property\n * @property {Array<NavigationParameter>} selectedContentNavigation The selected content navigation\n * @property {Array<NavigationParameter>} selectedHeaderNavigation The selected header navigation\n * @property {NavigationProperty} selectedNavigationPropertyHeader The selected navigation property header\n * @property {TrendOptions} trendOptions The trend options\n * @property {SideIndicatorOptions} indicatorsValue The indicators value\n * @property {boolean} oDataV4 Flag to check if the OData version is V4\n * @property {string} serviceUrl The service URL\n * @property {object} $data Data used for adaptive card preview\n * @property {object} targetUnit The target unit\n * @property {object} deviationUnit The deviation unit\n * @property {Array<object>} errorControls The error controls\n * @property {CardActions} actions The card actions\n * @property {boolean} groupLimitReached Flag maintained to check if the group limit is reached\n * @property {Array<KeyParameter>} keyParameters The key parameters\n * @property {string} appIntent The app intent\n */\ninterface CardGeneratorDialogConfiguration {\n\ttitle: string;\n\tsubtitle?: string;\n\theaderUOM?: string;\n\tmainIndicatorOptions?: MainIndicatorOptions;\n\tmainIndicatorStatusKey?: string;\n\tnavigationValue: string;\n\tmainIndicatorStatusUnit?: string;\n\tselectedNavigationalProperties: NavigationProperty[];\n\tmainIndicatorNavigationSelectedValue?: string;\n\tmainIndicatorNavigationSelectedKey?: string;\n\tentitySet: string;\n\tpropertiesWithNavigation: PropertyInfoMap;\n\tgroups: Array<ObjectCardGroups>;\n\tproperties: Array<object>;\n\tadvancedFormattingOptions: AdvancedFormattingOptions;\n\tselectedTrendOptions: Array<TrendOptions>;\n\tselectedIndicatorOptions: Array<SideIndicatorOptions>;\n\tnavigationProperty: Array<object>;\n\tselectedContentNavigation: Array<NavigationParameter>;\n\tselectedHeaderNavigation: Array<NavigationParameter>;\n\tselectedNavigationPropertyHeader: NavigationProperty;\n\ttrendOptions: TrendOptions;\n\tindicatorsValue?: SideIndicatorOptions;\n\toDataV4: boolean;\n\tserviceUrl: string;\n\t$data?: object;\n\ttargetUnit?: object;\n\tdeviationUnit?: object;\n\terrorControls: Array<object>;\n\tactions: CardActions;\n\tgroupLimitReached: boolean;\n\tkeyParameters: Array<KeyParameter>;\n\tappIntent: string;\n\tisEdited?: boolean;\n}\n\ninterface CardGeneratorDialog {\n\ttitle: string;\n\tconfiguration: CardGeneratorDialogConfiguration;\n}\n\nconst UnitCollection = [\n\t{\n\t\tName: \"K\",\n\t\tValue: \"K\"\n\t},\n\t{\n\t\tName: \"%\",\n\t\tValue: \"%\"\n\t}\n];\n\n/**\n * Merges the default property formatters with the user provided property formatters\n *\n * @param {FormatterConfigurationMap} defaultPropertyFormatters The default property formatters\n * @param {FormatterConfigurationMap} userProvidedPropertyFormatters The user provided property formatters\n * @returns {FormatterConfigurationMap} The merged property formatters\n * @private\n *\n */\nexport function _mergePropertyFormatters(\n\tdefaultPropertyFormatters: FormatterConfigurationMap = [],\n\tuserProvidedPropertyFormatters: FormatterConfigurationMap = []\n): FormatterConfigurationMap {\n\tconst mergedFormatters = [...userProvidedPropertyFormatters] as FormatterConfigurationMap;\n\n\tfor (const propertyFormatter of defaultPropertyFormatters) {\n\t\tif (!mergedFormatters.find((formatter) => formatter.property === propertyFormatter.property)) {\n\t\t\tmergedFormatters.push({ ...propertyFormatter });\n\t\t}\n\t}\n\n\treturn mergedFormatters;\n}\n\n/**\n * Generates the card generator dialog model.\n *\n * @param {Component} appComponent - The root component of the application.\n * @param {CardManifest} [mCardManifest] - The card manifest object (optional).\n * @returns {Promise<JSONModel>} A promise that resolves to the card generator dialog model.\n */\nexport const getCardGeneratorDialogModel = async (appComponent: Component, mCardManifest?: CardManifest) => {\n\tconst applicationInstance = Application.getInstance();\n\tconst applicationDetails = applicationInstance.fetchDetails();\n\tconst resourceBundle = CoreLib.getResourceBundleFor(\"sap.cards.ap.generator.i18n\");\n\tconst sapApp = appComponent.getManifestEntry(\"sap.app\");\n\tconst appModel = appComponent.getModel();\n\tconst cardTitle = sapApp.title;\n\tconst cardSubtitle = sapApp.description;\n\tconst { entitySetWithObjectContext, serviceUrl, semanticObject, action, odataModel } = applicationDetails;\n\tconst entitySetName = applicationDetails.entitySet;\n\tconst bODataV4 = odataModel === ODataModelVersion.V4;\n\tconst entitySet = getLabelForEntitySet(bODataV4 ? (appModel as V4ODataModel) : (appModel as V2ODataModel), entitySetName);\n\tconst properties = getPropertyInfoFromEntity(bODataV4 ? (appModel as V4ODataModel) : (appModel as V2ODataModel), entitySetName, false);\n\tconst propertiesWithNavigation = getPropertyInfoFromEntity(\n\t\tbODataV4 ? (appModel as V4ODataModel) : (appModel as V2ODataModel),\n\t\tentitySetName,\n\t\ttrue,\n\t\tresourceBundle\n\t);\n\tconst navigationProperty = getNavigationPropertyInfoFromEntity(\n\t\tbODataV4 ? (appModel as V4ODataModel) : (appModel as V2ODataModel),\n\t\tentitySetName\n\t);\n\n\tconst urlParameters = createURLParams(properties);\n\n\tconst path = await createPathWithEntityContext(\n\t\tentitySetWithObjectContext,\n\t\tbODataV4 ? (appModel as V4ODataModel) : (appModel as V2ODataModel),\n\t\tbODataV4\n\t);\n\tconst data = await fetchDataAsync(serviceUrl, path, bODataV4, urlParameters);\n\tconst unitOfMeasures: Array<UnitOfMeasures> = [];\n\tconst mData: Record<string, PropertyValue> = {};\n\t// We are adding labels and values for properties\n\taddLabelsForProperties(properties, data, mData, unitOfMeasures);\n\n\tlet propertyValueFormatters = getPropertyFormatters(resourceBundle, properties, navigationProperty);\n\n\tlet parsedManifest;\n\n\tif (mCardManifest) {\n\t\tparsedManifest = parseCard(mCardManifest, appComponent.getModel(\"i18n\") as ResourceModel, properties);\n\t\tawait processParsedManifest(parsedManifest, navigationProperty, path, mData, mCardManifest);\n\t}\n\n\tpropertyValueFormatters = _mergePropertyFormatters(propertyValueFormatters, parsedManifest?.formatterConfigurationFromCardManifest);\n\taddLabelsForProperties(propertiesWithNavigation, data, mData, unitOfMeasures);\n\n\tconst parseManifestMainIndicatorOptions = parsedManifest?.mainIndicatorOptions;\n\tconst mainIndicatorStatusKey = parseManifestMainIndicatorOptions?.mainIndicatorStatusKey || \"\";\n\tconst trends = parseManifestMainIndicatorOptions?.trendOptions;\n\tconst sideIndicators = parsedManifest?.sideIndicatorOptions;\n\tconst mainIndicatorNavigationSelectedKey = parseManifestMainIndicatorOptions?.mainIndicatorNavigationSelectedKey || \"\";\n\tconst selectedNavigationalProperties = [];\n\tconst { propertiesWithLabel, navigationPropertyData } = await getNavigationPropertiesWithLabel(\n\t\tappComponent,\n\t\tmainIndicatorStatusKey,\n\t\tpath\n\t);\n\tconst selectedNavigationPropertyHeader = {\n\t\tname: mainIndicatorStatusKey,\n\t\tvalue: propertiesWithLabel\n\t};\n\n\tif (selectedNavigationPropertyHeader?.value) {\n\t\tupdateNavigationPropertiesWithLabel(navigationProperty, mainIndicatorStatusKey, selectedNavigationPropertyHeader.value);\n\t}\n\n\tif (mainIndicatorStatusKey.length > 0 && (mData[mainIndicatorStatusKey] === null || mData[mainIndicatorStatusKey] === undefined)) {\n\t\tmData[mainIndicatorStatusKey] = navigationPropertyData[mainIndicatorStatusKey];\n\t}\n\n\tif (selectedNavigationPropertyHeader.name) {\n\t\tselectedNavigationalProperties.push(selectedNavigationPropertyHeader);\n\t}\n\n\tconst mainIndicatorNavigationSelectedValue = getMainIndicatorSelectedNavigationProperty(\n\t\tselectedNavigationPropertyHeader,\n\t\tmainIndicatorNavigationSelectedKey\n\t);\n\tconst advancedFormattingOptions = await getAdvancedFormattingOptions(unitOfMeasures, propertyValueFormatters, parsedManifest, path);\n\tconst mainIndicatorStatusUnit = getMainIndicatorStatusUnit(mainIndicatorStatusKey, propertiesWithNavigation);\n\tconst dialogModelData: CardGeneratorDialog = {\n\t\ttitle: `${entitySet}`,\n\t\tconfiguration: {\n\t\t\ttitle: parsedManifest?.title || cardTitle,\n\t\t\tsubtitle: parsedManifest?.subtitle || cardSubtitle,\n\t\t\theaderUOM: parsedManifest?.headerUOM || \"\",\n\t\t\tmainIndicatorOptions: {\n\t\t\t\tcriticality: (parseManifestMainIndicatorOptions?.criticalityOptions || []) as CriticalityOptions[]\n\t\t\t},\n\t\t\tadvancedFormattingOptions: advancedFormattingOptions,\n\t\t\ttrendOptions: trends as TrendOptions,\n\t\t\tindicatorsValue: sideIndicators,\n\t\t\tselectedTrendOptions: trends ? [trends] : [],\n\t\t\tselectedIndicatorOptions: sideIndicators ? [sideIndicators] : [],\n\t\t\tselectedNavigationPropertyHeader,\n\t\t\tselectedContentNavigation: [],\n\t\t\tselectedHeaderNavigation: [],\n\t\t\tnavigationProperty,\n\t\t\tmainIndicatorNavigationSelectedValue,\n\t\t\tmainIndicatorStatusKey,\n\t\t\tnavigationValue: parseManifestMainIndicatorOptions?.navigationValue || \"\",\n\t\t\tmainIndicatorNavigationSelectedKey,\n\t\t\tmainIndicatorStatusUnit,\n\t\t\tselectedNavigationalProperties,\n\t\t\tentitySet: entitySetName,\n\t\t\toDataV4: bODataV4,\n\t\t\tserviceUrl: serviceUrl,\n\t\t\tproperties: properties,\n\t\t\tpropertiesWithNavigation: propertiesWithNavigation,\n\t\t\tgroups: (parsedManifest?.groups as ObjectCardGroups[]) || [\n\t\t\t\t{\n\t\t\t\t\ttitle: resourceBundle?.getText(\"GENERATOR_DEFAULT_GROUP_NAME\", [1]),\n\t\t\t\t\titems: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: \"\",\n\t\t\t\t\t\t\tvalue: \"\",\n\t\t\t\t\t\t\tisEnabled: false,\n\t\t\t\t\t\t\tname: \"\",\n\t\t\t\t\t\t\tnavigationProperty: \"\",\n\t\t\t\t\t\t\tisNavigationEnabled: false\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t],\n\t\t\t$data: mData,\n\t\t\ttargetUnit: UnitCollection,\n\t\t\tdeviationUnit: UnitCollection,\n\t\t\terrorControls: [],\n\t\t\tactions: await getCardActionInfo(mData, appComponent.getModel(\"i18n\") as ResourceModel, mCardManifest),\n\t\t\tgroupLimitReached: false,\n\t\t\tkeyParameters: await getKeyParameters(appComponent),\n\t\t\tappIntent: `${semanticObject}-${action}`,\n\t\t\tisEdited: false\n\t\t}\n\t};\n\n\treturn new JSONModel(dialogModelData).attachPropertyChange(function () {\n\t\tdialogModelData.configuration.isEdited = true;\n\t});\n};\n\n/**\n * Adds labels for properties and updates the unit of measures array.\n *\n * @param {PropertyInfoMap} properties - The map of properties to be updated with labels.\n * @param {Record<string, unknown>} data - The data record containing property values.\n * @param {Record<string, PropertyValue>} mData - The map to store updated property values.\n * @param {Array<object>} unitOfMeasures - The array of unit of measures to be updated.\n */\nexport function addLabelsForProperties(\n\tproperties: PropertyInfoMap,\n\tdata: Record<string, unknown>,\n\tmData: {\n\t\t[key: string]: PropertyValue;\n\t},\n\tunitOfMeasures: Array<object>\n) {\n\tconst unitOfMeasuresMap = new Map((unitOfMeasures as UnitOfMeasures[]).map((uom) => [uom.name, uom]));\n\n\tproperties.forEach((property) => {\n\t\tconst propertyName = property.name;\n\t\tconst propertyValue = data[propertyName];\n\t\tconst propertyUOM = property.UOM;\n\n\t\tif (propertyName && propertyValue !== undefined && propertyValue !== null) {\n\t\t\tconst value = formatPropertyDropdownValues(property, propertyValue as string);\n\t\t\tproperty.value = propertyValue as string;\n\t\t\tproperty.labelWithValue = value;\n\n\t\t\tif (propertyUOM && !unitOfMeasuresMap.has(propertyName)) {\n\t\t\t\tunitOfMeasures.push({\n\t\t\t\t\tpropertyKeyForDescription: propertyUOM,\n\t\t\t\t\tname: propertyName,\n\t\t\t\t\tpropertyKeyForId: propertyName,\n\t\t\t\t\tvalue: propertyUOM,\n\t\t\t\t\tvalueState: ValueState.None,\n\t\t\t\t\tvalueStateText: \"\"\n\t\t\t\t});\n\t\t\t}\n\t\t\tmData[propertyName] = propertyValue as string;\n\t\t} else {\n\t\t\tproperty.labelWithValue = property.category ? `${property.label}` : `${property.label} (<empty>)`;\n\t\t}\n\t});\n}\n\n/**\n * Gets the property formatters for the card generator dialog.\n * The property formatters are merged from the default property formatters and the navigational property formatters.\n *\n * @param {ResourceBundle} resourceBundle The resource bundle\n * @param {PropertyInfoMap} properties The properties\n * @param {NavigationParameter} navigationProperty The navigation property\n * @returns\n */\nfunction getPropertyFormatters(resourceBundle: ResourceBundle, properties: PropertyInfoMap, navigationProperty: NavigationParameter[]) {\n\tconst propertyValueFormatters = getDefaultPropertyFormatterConfig(resourceBundle, properties);\n\tconst propertyValueFormattersForNavigationalProperties = getDefaultPropertyFormatterConfigForNavProperties(\n\t\tresourceBundle,\n\t\tnavigationProperty as unknown as PropertyInfoMap\n\t);\n\treturn _mergePropertyFormatters(propertyValueFormatters, propertyValueFormattersForNavigationalProperties);\n}\n\n/**\n *\n * Process the parsed manifest to get the navigation property information.\n *\n * @param {ParsedManifest} parsedManifest The parsed card manifest\n * @param {NavigationParameter} navigationProperty\n * @param {string} path\n * @param {Record<string, PropertyValue>} mData\n * @param {CardManifest} mCardManifest\n */\nasync function processParsedManifest(\n\tparsedManifest: ParsedManifest,\n\tnavigationProperty: NavigationParameter[],\n\tpath: string,\n\tmData: Record<string, PropertyValue>,\n\tmCardManifest: CardManifest\n) {\n\tfor (const textArrangement of parsedManifest.textArrangementsFromCardManifest) {\n\t\tconst navigationPropInfo = await getNavigationPropertyInfo(textArrangement, navigationProperty, path);\n\n\t\tif (navigationPropInfo) {\n\t\t\tfor (const navProperty of navigationPropInfo) {\n\t\t\t\tconst { navigationEntitySet, navigationPropertyData } = navProperty;\n\t\t\t\tif (mData[navigationEntitySet] === null || mData[navigationEntitySet] === undefined) {\n\t\t\t\t\tmData[navigationEntitySet] = navigationPropertyData[navigationEntitySet];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfor (const group of parsedManifest.groups) {\n\t\tfor (const item of (group as ObjectCardGroups).items) {\n\t\t\tconst navigationPropertyInfoGroups = await getNavigationPropertyInfoGroups(item, navigationProperty, path, mCardManifest);\n\n\t\t\tif (navigationPropertyInfoGroups) {\n\t\t\t\tconst { navigationEntitySet, navigationPropertyData } = navigationPropertyInfoGroups;\n\t\t\t\tif (mData[navigationEntitySet] === null || mData[navigationEntitySet] === undefined) {\n\t\t\t\t\tmData[navigationEntitySet] = navigationPropertyData[navigationEntitySet];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Retrieves the advanced formatting options for the card generator.\n *\n * @param {UnitOfMeasures[]} unitOfMeasures - The array of unit of measures.\n * @param {FormatterConfigurationMap} propertyValueFormatters - The map of property value formatters.\n * @param {ParsedManifest} [parsedManifest] - The parsed manifest object (optional).\n * @returns {Promise<AdvancedFormattingOptions>} A promise that resolves to the advanced formatting options.\n */\nasync function getAdvancedFormattingOptions(\n\tunitOfMeasures: UnitOfMeasures[],\n\tpropertyValueFormatters: FormatterConfigurationMap,\n\tparsedManifest?: ParsedManifest,\n\tpath: string = \"\"\n): Promise<AdvancedFormattingOptions> {\n\tconst formatterConfigsWithUnit =\n\t\tparsedManifest?.formatterConfigurationFromCardManifest.filter(\n\t\t\t(formatterConfig) => formatterConfig.formatterName === \"format.unit\"\n\t\t) || [];\n\tconst mainIndicatorOptions = parsedManifest?.mainIndicatorOptions;\n\tlet mainIndicatorCriticalityOptions = (mainIndicatorOptions?.criticalityOptions || []) as CriticalityOptionsPanel;\n\tmainIndicatorCriticalityOptions = await updateCriticalityForNavProperty(mainIndicatorCriticalityOptions, path);\n\tconst selectedKeyCriticality = mainIndicatorCriticalityOptions.length ? mainIndicatorCriticalityOptions[0]?.criticality : \"\";\n\tconst mainIndicatorStatusKey = mainIndicatorOptions?.mainIndicatorStatusKey || \"\";\n\treturn {\n\t\tunitOfMeasures:\n\t\t\tformatterConfigsWithUnit.length > 0\n\t\t\t\t? await getUpdatedUnitOfMeasures(unitOfMeasures, formatterConfigsWithUnit, path)\n\t\t\t\t: unitOfMeasures,\n\t\ttextArrangements: parsedManifest?.textArrangementsFromCardManifest || [],\n\t\tpropertyValueFormatters: propertyValueFormatters,\n\t\tsourceCriticalityProperty: [],\n\t\ttargetFormatterProperty: \"\",\n\t\tsourceUoMProperty: mainIndicatorStatusKey,\n\t\tselectedKeyCriticality: selectedKeyCriticality,\n\t\ttextArrangementSourceProperty: mainIndicatorStatusKey\n\t};\n}\n\n/**\n * Retrieves the label with value for the main indicator's selected navigation property.\n *\n *\n * @param {Record<string, any>} selectedNavigationPropertyHeader - The selected navigation property header containing the properties.\n * @param {string} mainIndicatorNavigationSelectedKey - The key of the main indicator's selected navigation property.\n * @returns {string} The label with value of the selected navigation property, or an empty string if not found.\n */\nfunction getMainIndicatorSelectedNavigationProperty(\n\tselectedNavigationPropertyHeader: Record<string, any>,\n\tmainIndicatorNavigationSelectedKey: string\n): string {\n\treturn (\n\t\tselectedNavigationPropertyHeader.value.find(\n\t\t\t(value: { name: string; labelWithValue: string }) => value.name === mainIndicatorNavigationSelectedKey\n\t\t)?.labelWithValue || \"\"\n\t);\n}\n\n/**\n * Retrieves the label with value for the main indicator's status unit.\n *\n * @param {string} mainIndicatorStatusKey - The key of the main indicator's status property.\n * @param {PropertyInfoMap} propertiesWithNavigation - The map of properties with navigation.\n * @returns {string} The label with value of the main indicator's status unit, or an empty string if not found.\n */\nfunction getMainIndicatorStatusUnit(mainIndicatorStatusKey: string, propertiesWithNavigation: PropertyInfoMap): string {\n\treturn (\n\t\t(mainIndicatorStatusKey && propertiesWithNavigation.find((property) => property.name === mainIndicatorStatusKey)?.labelWithValue) ||\n\t\t\"\"\n\t);\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":"helpers"}},{"offset":{"line":102,"column":0},"map":{"version":3,"file":"FooterActions.js","names":["sap","ui","define","Log","sap_m_library","CoreLib","___helpers_I18nHelper","___pages_Application","___utils_CommonUtils","_iteratorSymbol","Symbol","iterator","_settle","pact","state","value","s","_Pact","v","o","bind","then","observer","prototype","onFulfilled","onRejected","result","this","callback","e","_this","_isSettledPact","thenable","_forTo","array","body","check","i","reject","_cycle","length","addActionToCardManifest","manifest","controlProperties","rootComponent","Application","getInstance","fetchDetails","bODataV4","getDialogModel","getProperty","metaModel","getModel","getMetaModel","Promise","resolve","getAdaptiveCardAction","actionInfo","addActionToCardFooter","_forOf","target","step","next","done","return","_fixup","TypeError","values","push","ButtonType","resolveI18nTextFromResourceModel","ODataModelVersion","formActionInfoFromDataField","dataField","entitySetName","metadataAnnotationInfo","isConfirmationRequired","enablePath","getMetadataAnnotationInfoV4","getMetadataAnnotationInfoV2","label","Label","String","action","Action","split","getButtonTypeForCard","actionStyle","Accept","Reject","Default","addActionInfoToConfigParameters","configuration","parameters","footerActionParameters","_adaptiveFooterActionParameters","cardConfiguration","configParams","titleKey","removeActionInfoFromConfigParams","updateAdaptiveCardInfo","adaptiveCardStyle","adaptiveCardActionInfo","style","cardFooter","footer","actionsStrip","actionLength","type","visible","text","buttonType","actions","enabled","getActionStyles","actionStyles","name","labelWithValue","getActionFromDataField","dataFields","dataFieldForAnnotation","filter","dataFieldType","$Type","RecordType","map","updateActionParameterData","actionParameters","data","resourceBundle","actionParameter","errorMessage","placeholder","actionParameterConfig","valueHelpEntitySet","entitySet","_temp","updateModelData","serviceUrl","getActionsFromManifest","cardManifest","_exit","_temp7","_result","title","enablePathKey","isStyleControlEnabled","_temp6","_temp5","aKeys","Object","keys","_temp4","key","_temp3","triggerActionText","_temp2","getDefaultAction","resourceModel","mCardManifest","_exit2","_temp9","_result2","_temp8","_await$getActionsFrom","getCardActionInfo","_temp1","_getDefaultAction","annotationActions","cardActions","addedActions","styles","isAddActionEnabled","actionExists","odataModel","V4","getCardActions","_temp0","appComponent","appModel","getObject","getODataEntitySet","entityTypeName","entityType","getODataEntityType","identificationPath","entityTypeAnnotation","entityTypeKeys","identificationAnnotation","removeActionFromManifest","relatedAction","cardParameters","resetCardActions","updateCardManifestAction","forEach","isEnabledExpression","getActionStyle","getActionParameters","oResourceBundle","getResourceBundleFor","_temp12","parameter","_temp11","actionParamInfoToAdd","EnumMember","isRequired","nullable","id","getText","_temp10","getActionParameterConfigurationV2","functionImportInfo","enabledPathKey","verb","getActionParams","_getActionParams","getActionVerb","getFunctionImportInfo","mActionParams","parameterData","additionalParameters","_getActionParameters","actionParams","getRelatedBoundAction","actionValue","actionType","isBoundAction","$IsBound","$Parameter","some","actionParam","getRelatedUnboundActions","getValueHelpInfo","contextPath","actionParamName","requestValueListInfo","valueListInfo","valueListAnnotationInfo","valueListModel","$model","valueListPropertyName","getValueListPropertyName","valueHelpAnnotation","valueListModelServiceUrl","getServiceUrl","getActionParameterName","actionVerb","_exit3","_temp15","_result3","actionParameterAnnotation","entitySetInfo","_temp14","_temp13","oValueList","sPropertyName","oValueListParameter","Parameters","find","oParameter","LocalDataProperty","$PropertyPath","ValueListProperty","getActionParameterValue","propertyPath","descriptionPath","textArrangementType","fetch","valueHelpData","_temp16","json","valueHelpDataJson","valueHelpDataValue","d","results","getActionParameterConfiguration","oDialogModel","actionParamAnnotations","textArrangementPath","$Path","textArrangementAnnotation","actionParameterValue","$EnumMember","setProperty","getActionParameterInfo","_exit4","actionParamInfo","actionIndex","_temp18","isActionRequired","_temp17","$Nullable","_actionParam$$Name","$Name","_getActionParameterNa","_getActionParameterCo","getEnabledValueFromAnnotation","actionAnnotation","operationAvailable","Bool","getCriticalValueFromAnnotation","oCriticalAnnotation","undefined","oParameterValue","oActionValue","toLowerCase","dataFieldAction","indexOf","functionName","functionImport","getODataFunctionImport","replace","$kind","$Action","unBoundActions","relatedUnboundAction","relatedBoundAction","oContextObject","mKeyProperties","getPropertyKeys","oSkipProperties","importParameter","addParameterLabel","parameterName","isKey","parameterValue","hasOwnProperty","error","Error","skip","mode","toUpperCase","oKeyMap","propertyRef","property","getODataProperty","getParameterConfigFromValueList","serviceUrlPrefix","valueListParameters","selectProps","valueListPropertyPath","valueListParameter","valueListProperty","join","ValueListAnnotation","CollectionPath","sServiceUrl","__exports","__esModule"],"sources":["FooterActions.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nimport Log from \"sap/base/Log\";\nimport { ButtonType } from \"sap/m/library\";\nimport type UIComponent from \"sap/ui/core/Component\";\nimport CoreLib from \"sap/ui/core/Lib\";\nimport type {\n\tActionParameterConfiguration,\n\tAdaptiveCardAction,\n\tAdaptiveCardActionParameter,\n\tCardManifest,\n\tData\n} from \"sap/ui/integration/widgets/Card\";\nimport type JSONModel from \"sap/ui/model/json/JSONModel\";\nimport type V2ODataMetaModel from \"sap/ui/model/odata/ODataMetaModel\";\nimport type { EntitySet, EntityType } from \"sap/ui/model/odata/ODataMetaModel\";\nimport type V2ODataModel from \"sap/ui/model/odata/v2/ODataModel\";\nimport type V4ODataMetaModel from \"sap/ui/model/odata/v4/ODataMetaModel\";\nimport type V4ODataModel from \"sap/ui/model/odata/v4/ODataModel\";\nimport type ResourceModel from \"sap/ui/model/resource/ResourceModel\";\nimport { resolveI18nTextFromResourceModel } from \"../helpers/I18nHelper\";\nimport { Application, ODataModelVersion } from \"../pages/Application\";\nimport type {\n\tActionAnnotation,\n\tActionStyles,\n\tAnnotationAction,\n\tControlProperties,\n\tCriticalAction,\n\tFunctionImport,\n\tFunctionImportParameter,\n\tParametersInfoV2,\n\tProperty,\n\tValueListParameter\n} from \"../types/ActionTypes\";\nimport { getDialogModel } from \"../utils/CommonUtils\";\n\ntype ActionParameter = {\n\t$Type?: string;\n\t$Nullable?: boolean;\n\t$Name: string;\n};\n\ntype Action = {\n\t$IsBound: boolean;\n\t$Parameter?: Array<ActionParameter>;\n\t$Action?: string;\n};\n\ntype DataFieldString = {\n\tString: string;\n};\n\ntype DataFieldV4 = {\n\t$Type: string;\n\tRecordType: string;\n\tLabel: string;\n\tAction: string;\n};\n\ntype DataField = {\n\t$Type: string;\n\tRecordType: string;\n\tLabel: DataFieldString;\n\tAction: DataFieldString;\n};\n\ntype EntityTypeAnnotation = {\n\t[key: string]: Array<DataField>;\n};\n\ntype KeyMap = {\n\t[key: string]: boolean;\n};\n\ntype SkipProperty = {\n\t[key: string]: string;\n};\n\ntype ValueListAnnotationInfo = {\n\t$model: V4ODataModel;\n\t[\"CollectionPath\"]: string;\n\tParameters: Array<any>;\n};\n\ntype PropertyValue = string | null | undefined;\n\n/**\n * Forms the action info from the data field\n * @param dataField The data field\n * @param bODataV4 The OData version\n * @returns Action info\n */\nfunction formActionInfoFromDataField(\n\tdataField: DataField,\n\tbODataV4: boolean,\n\tmetaModel: V2ODataMetaModel | V4ODataMetaModel,\n\tentitySetName: string\n) {\n\tlet metadataAnnotationInfo = {\n\t\tisConfirmationRequired: false,\n\t\tenablePath: \"\"\n\t};\n\n\tif (bODataV4) {\n\t\tmetadataAnnotationInfo = getMetadataAnnotationInfoV4(\n\t\t\tdataField as unknown as DataFieldV4,\n\t\t\tmetaModel as V4ODataMetaModel,\n\t\t\tentitySetName\n\t\t);\n\t} else {\n\t\tmetadataAnnotationInfo = getMetadataAnnotationInfoV2(dataField as unknown as DataField, metaModel as V2ODataMetaModel);\n\t}\n\n\treturn {\n\t\tlabel: bODataV4 ? dataField?.Label : dataField?.Label?.String,\n\t\taction: bODataV4 ? dataField.Action : dataField.Action.String.split(\"/\")[1],\n\t\tisConfirmationRequired: metadataAnnotationInfo.isConfirmationRequired || false,\n\t\tenablePath: metadataAnnotationInfo.enablePath\n\t};\n}\n\n/**\n * Gets the button type for the card\n * @param actionStyle The action style\n * @returns The button type\n */\n\nfunction getButtonTypeForCard(actionStyle: string | undefined) {\n\tif (actionStyle === \"Positive\") {\n\t\treturn ButtonType.Accept;\n\t}\n\tif (actionStyle === \"Negative\") {\n\t\treturn ButtonType.Reject;\n\t}\n\treturn ButtonType.Default;\n}\n\n/**\n *\n * Adds action information to integration card configuration parameters\n *\n * @param manifest\n * @param actionInfo\n * @param controlProperties\n */\nfunction addActionInfoToConfigParameters(manifest: CardManifest, actionInfo: AdaptiveCardAction, controlProperties: ControlProperties) {\n\tif (!manifest[\"sap.card\"].configuration) {\n\t\tmanifest[\"sap.card\"].configuration = {\n\t\t\tparameters: {\n\t\t\t\tfooterActionParameters: {},\n\t\t\t\t_adaptiveFooterActionParameters: {}\n\t\t\t}\n\t\t};\n\t} else if (manifest[\"sap.card\"].configuration && !manifest[\"sap.card\"].configuration.parameters) {\n\t\tmanifest[\"sap.card\"].configuration.parameters = {\n\t\t\tfooterActionParameters: {},\n\t\t\t_adaptiveFooterActionParameters: {}\n\t\t};\n\t}\n\n\tconst cardConfiguration = manifest[\"sap.card\"].configuration;\n\tconst configParams = cardConfiguration.parameters;\n\n\tif (configParams && !configParams._adaptiveFooterActionParameters) {\n\t\tconfigParams._adaptiveFooterActionParameters = {};\n\t}\n\tif (configParams && !configParams.footerActionParameters) {\n\t\tconfigParams.footerActionParameters = {};\n\t}\n\n\tif (configParams?._adaptiveFooterActionParameters && configParams?.footerActionParameters) {\n\t\tconfigParams.footerActionParameters[controlProperties.titleKey] = actionInfo.parameters || {};\n\t\tconfigParams._adaptiveFooterActionParameters[controlProperties.titleKey] = actionInfo || {};\n\t}\n}\n\n/**\n *\n * Removes action information from integration card configuration parameters\n *\n * @param manifest\n * @param controlProperties\n */\nfunction removeActionInfoFromConfigParams(manifest: CardManifest, controlProperties: ControlProperties) {\n\tconst cardConfiguration = manifest[\"sap.card\"].configuration;\n\tconst configParams = cardConfiguration?.parameters;\n\tif (configParams?._adaptiveFooterActionParameters && configParams?.footerActionParameters) {\n\t\tdelete configParams.footerActionParameters[controlProperties.titleKey];\n\t\tdelete configParams._adaptiveFooterActionParameters[controlProperties.titleKey];\n\t}\n}\n\n/**\n *\n * Updates the style and enablePath for the adaptive card action\n *\n * @param manifest\n * @param controlProperties\n * @param adaptiveCardStyle\n * @param enablePath\n */\nfunction updateAdaptiveCardInfo(\n\tmanifest: CardManifest,\n\tcontrolProperties: ControlProperties,\n\tadaptiveCardStyle: string,\n\tenablePath: string\n) {\n\tconst cardConfiguration = manifest[\"sap.card\"].configuration;\n\tconst configParams = cardConfiguration?.parameters;\n\n\tif (configParams?._adaptiveFooterActionParameters && configParams?.footerActionParameters) {\n\t\tconst adaptiveCardActionInfo = configParams._adaptiveFooterActionParameters[controlProperties.titleKey];\n\t\tadaptiveCardActionInfo.style = adaptiveCardStyle;\n\t\tadaptiveCardActionInfo.enablePath = enablePath;\n\t}\n}\n\n/**\n * Adds the action to the card footer\n * @param manifest The card manifest\n * @param actionInfo The action info\n */\nfunction addActionToCardFooter(manifest: CardManifest, actionInfo: AdaptiveCardAction, controlProperties: ControlProperties) {\n\tlet cardFooter = manifest[\"sap.card\"].footer;\n\n\tif (!cardFooter) {\n\t\tmanifest[\"sap.card\"].footer = {\n\t\t\tactionsStrip: []\n\t\t};\n\t\tcardFooter = manifest[\"sap.card\"].footer;\n\t}\n\n\tconst actionLength = cardFooter.actionsStrip.length;\n\n\tif (actionLength < 2) {\n\t\tcardFooter.actionsStrip.push({\n\t\t\ttype: \"Button\",\n\t\t\tvisible: false,\n\t\t\ttext: actionInfo.label,\n\t\t\tbuttonType: getButtonTypeForCard(actionInfo.style),\n\t\t\tactions: [\n\t\t\t\t{\n\t\t\t\t\ttype: \"custom\",\n\t\t\t\t\tenabled: actionInfo.enablePath ? \"${\" + actionInfo.enablePath + \"}\" : \"true\",\n\t\t\t\t\tparameters: \"{{parameters.footerActionParameters.\" + controlProperties.titleKey + \"}}\"\n\t\t\t\t}\n\t\t\t]\n\t\t});\n\n\t\taddActionInfoToConfigParameters(manifest, actionInfo, controlProperties);\n\t}\n}\n\n/**\n * Gets the action styles for the card\n * @returns The action styles\n */\nexport function getActionStyles() {\n\tconst actionStyles: Array<ActionStyles> = [\n\t\t{\n\t\t\tname: \"Default\",\n\t\t\tlabel: \"Default\",\n\t\t\tlabelWithValue: \"Default\"\n\t\t},\n\t\t{\n\t\t\tname: \"Positive\",\n\t\t\tlabel: \"Positive\",\n\t\t\tlabelWithValue: \"Positive\"\n\t\t},\n\t\t{\n\t\t\tname: \"Negative\",\n\t\t\tlabel: \"Negative\",\n\t\t\tlabelWithValue: \"Negative\"\n\t\t}\n\t];\n\n\treturn actionStyles;\n}\n\n/**\n * Forms action info from the data field\n * @param dataFields The data fields\n * @param bODataV4 The OData version\n * @returns Action info\n */\nfunction getActionFromDataField(\n\tdataFields: Array<DataField>,\n\tbODataV4: boolean,\n\tmetaModel: V2ODataMetaModel | V4ODataMetaModel,\n\tentitySetName: string\n) {\n\tconst actions: Array<AnnotationAction> = [];\n\tconst dataFieldForAnnotation: string = \"com.sap.vocabularies.UI.v1.DataFieldForAction\";\n\n\tdataFields\n\t\t?.filter(function (dataField: DataField) {\n\t\t\tconst dataFieldType: string = bODataV4 ? dataField?.$Type : dataField?.RecordType;\n\t\t\treturn dataFieldType === dataFieldForAnnotation;\n\t\t})\n\t\t.map(function (dataField: DataField) {\n\t\t\tconst actionInfo = formActionInfoFromDataField(dataField, bODataV4, metaModel, entitySetName) as AnnotationAction;\n\t\t\tactions.push(actionInfo);\n\t\t});\n\n\treturn actions;\n}\n\n/**\n *\n * Updates the action parameter data to the model data.\n * Resolves the i18n keys for label, errorMessage and placeholder properties of adaptive card action parameters.\n *\n *\n * @param actionParameters\n * @param data\n * @param resourceBundle\n */\nconst updateActionParameterData = async function (\n\tactionParameters: AdaptiveCardActionParameter[],\n\tdata: Record<string, PropertyValue>,\n\tresourceBundle?: ResourceModel\n) {\n\tfor (const actionParameter of actionParameters) {\n\t\tif (resourceBundle) {\n\t\t\tactionParameter.label = resolveI18nTextFromResourceModel(actionParameter.label, resourceBundle);\n\t\t\tactionParameter.errorMessage = resolveI18nTextFromResourceModel(actionParameter?.errorMessage || \"\", resourceBundle);\n\t\t\tactionParameter.placeholder = resolveI18nTextFromResourceModel(actionParameter?.placeholder || \"\", resourceBundle);\n\t\t}\n\n\t\tconst actionParameterConfig = actionParameter.configuration;\n\t\tconst valueHelpEntitySet = actionParameterConfig?.entitySet;\n\n\t\tif (valueHelpEntitySet) {\n\t\t\tawait updateModelData(data, actionParameterConfig?.serviceUrl, valueHelpEntitySet);\n\t\t}\n\t}\n};\n\n/**\n *\n * Gets the saved action from card manifest\n * Resolves i18n keys to text for label and ok button used for Submit type of action in adaptive card.\n *\n * @param cardManifest\n * @param data\n * @param resourceBundle\n * @returns\n */\nconst getActionsFromManifest = async function (\n\tcardManifest: CardManifest,\n\tdata: Record<string, PropertyValue>,\n\tresourceBundle?: ResourceModel\n) {\n\tconst cardConfiguration = cardManifest[\"sap.card\"].configuration;\n\tconst configParams = cardConfiguration?.parameters;\n\tconst actions: Array<ControlProperties> = [];\n\n\tif (configParams?._adaptiveFooterActionParameters) {\n\t\tconst _adaptiveFooterActionParameters = configParams._adaptiveFooterActionParameters;\n\t\tconst aKeys = Object.keys(_adaptiveFooterActionParameters);\n\n\t\tfor (const key of aKeys) {\n\t\t\tconst action = _adaptiveFooterActionParameters[key];\n\n\t\t\tif (resourceBundle) {\n\t\t\t\taction.label = resolveI18nTextFromResourceModel(action.label, resourceBundle);\n\t\t\t\taction.triggerActionText = resolveI18nTextFromResourceModel(action.triggerActionText, resourceBundle);\n\t\t\t}\n\n\t\t\tif (action.actionParameters?.length) {\n\t\t\t\tawait updateActionParameterData(action.actionParameters, data, resourceBundle);\n\t\t\t}\n\n\t\t\tlet style = \"Default\";\n\n\t\t\tif (action.style === \"positive\") {\n\t\t\t\tstyle = \"Positive\";\n\t\t\t} else if (action.style === \"destructive\") {\n\t\t\t\tstyle = \"Negative\";\n\t\t\t}\n\n\t\t\tconst actionInfo: ControlProperties = {\n\t\t\t\ttitle: action.label,\n\t\t\t\ttitleKey: key,\n\t\t\t\tstyle: style,\n\t\t\t\tenablePathKey: action.enablePath,\n\t\t\t\tisStyleControlEnabled: true,\n\t\t\t\tisConfirmationRequired: action.data?.isConfirmationRequired || false,\n\t\t\t\ttriggerActionText: action.triggerActionText\n\t\t\t};\n\t\t\tactions.push(actionInfo);\n\t\t}\n\t\treturn actions;\n\t}\n\n\treturn [\n\t\t{\n\t\t\ttitle: \"\",\n\t\t\ttitleKey: \"\",\n\t\t\tstyle: \"Default\",\n\t\t\tenablePathKey: \"\",\n\t\t\tisStyleControlEnabled: false\n\t\t}\n\t];\n};\n\n/**\n * Gets the saved actions if exists in card manifest otherwise an initial action with default values\n *\n * @param resourceModel\n * @param data\n * @param mCardManifest\n * @returns\n */\nexport const getDefaultAction = async function (\n\tresourceModel?: ResourceModel,\n\tdata?: Record<string, PropertyValue>,\n\tmCardManifest?: CardManifest\n) {\n\tif (mCardManifest && data) {\n\t\treturn await getActionsFromManifest(mCardManifest, data, resourceModel);\n\t}\n\n\treturn [\n\t\t{\n\t\t\ttitle: \"\",\n\t\t\ttitleKey: \"\",\n\t\t\tstyle: \"Default\",\n\t\t\tenablePathKey: \"\",\n\t\t\tisStyleControlEnabled: false\n\t\t}\n\t];\n};\n\n/**\n * Retrieves card action information.\n *\n * @param {Record<string, PropertyValue>} data - The data record containing property values.\n * @param {ResourceModel} [resourceModel] - The resource model for localization (optional).\n * @param {CardManifest} [mCardManifest] - The card manifest object (optional).\n * @returns {Promise<Object>} An object containing card action information.\n */\nexport const getCardActionInfo = async function (\n\tdata: Record<string, PropertyValue>,\n\tresourceModel?: ResourceModel,\n\tmCardManifest?: CardManifest\n) {\n\tconst { odataModel, entitySet, rootComponent } = Application.getInstance().fetchDetails();\n\tconst bODataV4 = odataModel === ODataModelVersion.V4;\n\tconst cardActions = getCardActions(rootComponent, entitySet, bODataV4);\n\treturn {\n\t\tannotationActions: cardActions,\n\t\taddedActions: cardActions.length > 0 ? await getDefaultAction(resourceModel, data, mCardManifest) : [],\n\t\tbODataV4: bODataV4,\n\t\tstyles: getActionStyles(),\n\t\tisAddActionEnabled: true,\n\t\tactionExists: cardActions.length > 0\n\t};\n};\n\n/**\n * Gets the card actions\n * @param appComponent The app component\n * @param entitySetName The entity set name\n * @param bODataV4 The OData version\n * @returns The card actions\n */\nexport function getCardActions(appComponent: UIComponent, entitySetName: string, bODataV4: boolean) {\n\tconst appModel = bODataV4 ? (appComponent.getModel() as V2ODataModel) : (appComponent.getModel() as V4ODataModel),\n\t\tmetaModel = appModel.getMetaModel(),\n\t\tentitySet = bODataV4 ? metaModel.getObject(\"/\" + entitySetName) : (metaModel as V2ODataMetaModel).getODataEntitySet(entitySetName),\n\t\tentityTypeName: string = bODataV4 ? entitySet?.$Type : entitySet?.entityType,\n\t\tentityType = bODataV4\n\t\t\t? metaModel.getObject(\"/\" + entityTypeName)\n\t\t\t: (metaModel as V2ODataMetaModel).getODataEntityType(entityTypeName),\n\t\tidentificationPath: string = bODataV4 ? \"@com.sap.vocabularies.UI.v1.Identification\" : \"com.sap.vocabularies.UI.v1.Identification\";\n\tlet entityTypeAnnotation: EntityTypeAnnotation = {};\n\n\tif (bODataV4) {\n\t\tentityTypeAnnotation = metaModel.getObject(\"/\" + entityTypeName + \"@\");\n\t}\n\n\tconst entityTypeKeys: Array<string> = bODataV4 ? Object.keys(entityTypeAnnotation) : Object.keys(entityType);\n\tconst identificationAnnotation: Array<string> = entityTypeKeys?.filter((key: string) => {\n\t\treturn key === identificationPath;\n\t});\n\tlet dataFields: Array<DataField> = [];\n\n\tif (identificationAnnotation?.length) {\n\t\tdataFields = bODataV4 ? entityTypeAnnotation[identificationPath] : entityType[identificationPath];\n\t}\n\n\treturn getActionFromDataField(dataFields, bODataV4, metaModel, entitySetName);\n}\n\n/**\n * Adds the action to the card manifest\n * @param manifest The card manifest\n * @param controlProperties The control properties\n */\nexport async function addActionToCardManifest(manifest: CardManifest, controlProperties: ControlProperties) {\n\tconst { rootComponent } = Application.getInstance().fetchDetails();\n\tconst bODataV4 = getDialogModel().getProperty(\"/configuration/actions/bODataV4\") as boolean;\n\tconst metaModel = rootComponent.getModel()?.getMetaModel() as V2ODataMetaModel | V4ODataMetaModel;\n\tconst actionInfo = await getAdaptiveCardAction(controlProperties, bODataV4, metaModel);\n\taddActionToCardFooter(manifest, actionInfo, controlProperties);\n}\n\n/**\n * Removes the action from the card manifest\n * @param manifest The card manifest\n * @param controlProperties The control properties\n */\nexport function removeActionFromManifest(manifest: CardManifest, controlProperties: ControlProperties) {\n\tconst cardFooter = manifest[\"sap.card\"]?.footer;\n\tconst actionLength = cardFooter?.actionsStrip.length;\n\n\tif (actionLength && cardFooter) {\n\t\tconst relatedAction = cardFooter.actionsStrip.filter((actionsStrip) => {\n\t\t\tconst cardParameters = actionsStrip.actions[0].parameters;\n\t\t\treturn cardParameters !== \"{{parameters.footerActionParameters.\" + controlProperties.titleKey + \"}}\";\n\t\t});\n\n\t\tif (relatedAction.length) {\n\t\t\tcardFooter.actionsStrip = relatedAction;\n\t\t} else {\n\t\t\tdelete manifest[\"sap.card\"]?.footer;\n\t\t}\n\n\t\tremoveActionInfoFromConfigParams(manifest, controlProperties);\n\t}\n}\n\n/**\n * Updates the actions in the footer of the card manifest based on the provided control properties.\n *\n * @param {CardManifest} manifest - The card manifest object that contains the footer actions.\n */\nexport function resetCardActions(manifest: CardManifest) {\n\tmanifest[\"sap.card\"].footer = {\n\t\tactionsStrip: []\n\t};\n\n\tconst cardConfiguration = manifest[\"sap.card\"].configuration;\n\tconst configParams = cardConfiguration?.parameters;\n\tif (configParams) {\n\t\tconfigParams._adaptiveFooterActionParameters = {};\n\t\tconfigParams.footerActionParameters = {};\n\t}\n}\n\n/**\n * Updates the actions in the footer of the card manifest based on the provided control properties.\n *\n * @param {CardManifest} manifest - The card manifest object that contains the footer actions.\n * @param {ControlProperties} controlProperties - The control properties used to update the footer actions.\n */\nexport function updateCardManifestAction(manifest: CardManifest, controlProperties: ControlProperties) {\n\tconst cardFooter = manifest[\"sap.card\"].footer;\n\tconst actionLength = cardFooter?.actionsStrip.length;\n\n\tif (actionLength && cardFooter) {\n\t\tcardFooter.actionsStrip.forEach((actionsStrip) => {\n\t\t\tconst action = actionsStrip.actions[0];\n\t\t\tconst cardParameters = action.parameters;\n\n\t\t\tif (cardParameters === \"{{parameters.footerActionParameters.\" + controlProperties.titleKey + \"}}\") {\n\t\t\t\tconst isEnabledExpression = controlProperties.enablePathKey ? \"${\" + controlProperties.enablePathKey + \"}\" : \"true\";\n\t\t\t\tconst adaptiveCardStyle = getActionStyle(controlProperties);\n\t\t\t\tactionsStrip.buttonType = getButtonTypeForCard(controlProperties.style);\n\t\t\t\taction.enabled = isEnabledExpression;\n\t\t\t\tupdateAdaptiveCardInfo(manifest, controlProperties, adaptiveCardStyle, controlProperties.enablePathKey || \"\");\n\t\t\t}\n\t\t});\n\t}\n}\n\n/**\n * Gets the action style\n * @param controlProperties The control properties\n * @returns Action style\n */\n\nfunction getActionStyle(controlProperties: ControlProperties) {\n\tlet actionStyle: string = \"default\";\n\n\tif (controlProperties.style === \"Positive\") {\n\t\tactionStyle = \"positive\";\n\t} else if (controlProperties.style === \"Negative\") {\n\t\tactionStyle = \"destructive\";\n\t}\n\treturn actionStyle;\n}\n\n/**\n *\n * Gets the OData V2 action parameters for the card\n *\n * @param parameters The parameters\n * @returns The OData V2 action parameters\n */\nconst getActionParameters = async function (parameters: Array<FunctionImportParameter>) {\n\tconst actionParameters: Array<AdaptiveCardActionParameter> = [];\n\tconst oResourceBundle = CoreLib.getResourceBundleFor(\"sap.cards.ap.generator.i18n\");\n\n\tfor (const parameter of parameters) {\n\t\tconst EnumMember = parameter?.[\"com.sap.vocabularies.Common.v1.FieldControl\"]?.EnumMember;\n\t\tconst isRequired = EnumMember === \"com.sap.vocabularies.Common.v1.FieldControlType/Mandatory\" || parameter?.nullable === \"false\";\n\t\tconst actionParamInfoToAdd: AdaptiveCardActionParameter = {\n\t\t\tlabel: parameter?.[\"sap:label\"] || parameter?.name || \"\",\n\t\t\tid: parameter?.name || \"\",\n\t\t\tisRequired: isRequired,\n\t\t\terrorMessage: isRequired ? oResourceBundle.getText(\"GENERATOR_ADAPTIVE_CARD_ACTION_PARAMETERS_ERROR_MESSAGE\") : \"\",\n\t\t\tplaceholder: \"\"\n\t\t};\n\n\t\tif (parameter?.[\"sap:value-list\"] === \"fixed-values\") {\n\t\t\tconst actionParameterConfig = await getActionParameterConfigurationV2(parameter);\n\n\t\t\tif (actionParameterConfig?.entitySet) {\n\t\t\t\tactionParamInfoToAdd.configuration = actionParameterConfig as ActionParameterConfiguration;\n\t\t\t\tactionParamInfoToAdd.placeholder = oResourceBundle.getText(\"GENERATOR_ADAPTIVE_CARD_ACTION_PARAMETERS_PLACEHOLDER\");\n\t\t\t}\n\t\t}\n\t\tactionParameters.push(actionParamInfoToAdd);\n\t}\n\n\treturn actionParameters;\n};\n\n/**\n * Forms the Adaptive Card action from the control properties\n * @param controlProperties The control properties\n * @param bODataV4 The OData version\n * @param metaModel The meta model\n * @returns The action info\n */\nconst getAdaptiveCardAction = async function (\n\tcontrolProperties: ControlProperties,\n\tbODataV4: boolean,\n\tmetaModel: V2ODataMetaModel | V4ODataMetaModel\n) {\n\tconst oResourceBundle = CoreLib.getResourceBundleFor(\"sap.cards.ap.generator.i18n\");\n\tconst actionStyle = getActionStyle(controlProperties);\n\tlet actionParameters: Array<AdaptiveCardActionParameter> = [];\n\tlet functionImportInfo;\n\tconst data: Data = {\n\t\tisConfirmationRequired: controlProperties.isConfirmationRequired || false\n\t};\n\tconst enabledPathKey = controlProperties.enablePathKey;\n\tconst actionInfo: AdaptiveCardAction = {\n\t\tstyle: actionStyle,\n\t\tverb: \"\",\n\t\tlabel: controlProperties.title,\n\t\tactionParameters: [],\n\t\tdata: data,\n\t\tenablePath: enabledPathKey || \"\",\n\t\ttriggerActionText: oResourceBundle.getText(\"GENERATOR_ADAPTIVE_CARD_SUBMIT_ACTION_OK_BUTTON\")\n\t};\n\n\tif (bODataV4) {\n\t\tactionParameters = await getActionParams(controlProperties, metaModel as V4ODataMetaModel);\n\t\tactionInfo.verb = getActionVerb(controlProperties, metaModel as V4ODataMetaModel);\n\t\tactionInfo.actionParameters = actionParameters || [];\n\n\t\treturn actionInfo;\n\t} else {\n\t\tfunctionImportInfo = getFunctionImportInfo(controlProperties, metaModel as V2ODataMetaModel);\n\t\tactionInfo.verb = controlProperties.titleKey;\n\t\tactionInfo.parameters = functionImportInfo?.mActionParams?.parameterData;\n\t\tactionInfo.actionParameters = await getActionParameters(functionImportInfo?.mActionParams?.additionalParameters);\n\t\tdata.actionParams = {\n\t\t\tkeys: Object.keys(functionImportInfo?.mActionParams?.parameterData)\n\t\t};\n\t\tactionInfo.data = data;\n\n\t\treturn actionInfo;\n\t}\n};\n\n/**\n * Gets the related bound action for OData V4 model\n * @param actionValue The action value\n * @param actionType The action type\n * @returns Bound action\n */\n\nfunction getRelatedBoundAction(actionValue: Array<Action>, actionType: string) {\n\treturn actionValue?.filter((action: Action) => {\n\t\tconst isBoundAction: boolean = action?.$IsBound;\n\t\tif (isBoundAction) {\n\t\t\treturn action?.$Parameter?.some((actionParam: ActionParameter) => {\n\t\t\t\treturn actionType === actionParam?.$Type;\n\t\t\t});\n\t\t}\n\t});\n}\n\n/**\n * Returns the related unbound actions for OData V4 model\n * @param actionValue The action value\n * @returns\n */\nfunction getRelatedUnboundActions(actionValue: Array<Action>) {\n\treturn actionValue?.filter((action: Action) => {\n\t\treturn !action?.$IsBound;\n\t});\n}\n\n/**\n * Gets the valuehelp info for OData V4 metamodel\n *\n * @param metaModel\n * @param contextPath\n * @param actionParamName\n * @returns\n */\nconst getValueHelpInfo = async function (metaModel: V4ODataMetaModel, contextPath: string, actionParamName?: string) {\n\tconst valueListInfo = await metaModel.requestValueListInfo(contextPath, true);\n\tconst valueListAnnotationInfo = valueListInfo?.[\"\"] as ValueListAnnotationInfo;\n\tconst valueListModel = valueListAnnotationInfo?.$model;\n\tconst valueListPropertyName = getValueListPropertyName(valueListAnnotationInfo, actionParamName || \"\");\n\tconst valueHelpEntitySet = valueListAnnotationInfo?.[\"CollectionPath\"];\n\tconst valueHelpAnnotation = valueListModel?.getMetaModel()?.getObject(`/${valueHelpEntitySet}/${valueListPropertyName}@`);\n\treturn {\n\t\tvalueHelpAnnotation,\n\t\tvalueListPropertyName,\n\t\tvalueHelpEntitySet,\n\t\tvalueListModelServiceUrl: valueListModel?.getServiceUrl()\n\t};\n};\n\n/**\n * Returns the action parameter name for OData V4 model\n * @param actionVerb\n * @param actionParamName\n * @returns The action parameter label for OData V4 model\n */\nconst getActionParameterName = async function (actionVerb: string, actionParamName?: string) {\n\tconst { rootComponent, entitySet } = Application.getInstance().fetchDetails();\n\tif (actionParamName) {\n\t\tconst metaModel = rootComponent.getModel()?.getMetaModel() as V4ODataMetaModel;\n\t\tconst contextPath = `/${entitySet}/${actionVerb}/${actionParamName}`;\n\t\tconst entitySetInfo = metaModel.getObject(`/${entitySet}`);\n\t\tconst actionParameterAnnotation = metaModel.getObject(`/${entitySetInfo?.$Type}/${actionParamName}@`);\n\n\t\tif (metaModel.getObject(`${contextPath}@`)?.[\"@com.sap.vocabularies.Common.v1.ValueListWithFixedValues\"]) {\n\t\t\tconst { valueHelpAnnotation } = await getValueHelpInfo(metaModel as V4ODataMetaModel, contextPath, actionParamName);\n\n\t\t\treturn (\n\t\t\t\tactionParameterAnnotation?.[\"@com.sap.vocabularies.Common.v1.Label\"] ||\n\t\t\t\tvalueHelpAnnotation?.[\"@com.sap.vocabularies.Common.v1.Label\"]\n\t\t\t);\n\t\t}\n\n\t\treturn actionParameterAnnotation?.[\"@com.sap.vocabularies.Common.v1.Label\"] || actionParamName;\n\t}\n};\n\n/**\n * Returns the value list property name from annotations\n *\n * @param oValueList\n * @param sPropertyName\n * @returns\n */\nfunction getValueListPropertyName(oValueList: ValueListAnnotationInfo, sPropertyName: string): string {\n\tconst oValueListParameter = oValueList?.Parameters.find(function (oParameter: ValueListParameter) {\n\t\treturn oParameter?.LocalDataProperty?.$PropertyPath === sPropertyName;\n\t});\n\treturn oValueListParameter?.ValueListProperty;\n}\n\n/**\n * Function to get the action parameter value based on the text arrangement annotation\n *\n * @param propertyPath\n * @param descriptionPath\n * @param textArrangementType\n * @returns\n */\nexport function getActionParameterValue(propertyPath: string, descriptionPath: string, textArrangementType: string): string {\n\tif (textArrangementType === \"TextOnly\") {\n\t\treturn \"${\" + descriptionPath + \"}\";\n\t} else if (textArrangementType === \"TextLast\") {\n\t\treturn \"${\" + propertyPath + \"}\" + \" (\" + \"${\" + descriptionPath + \"}\" + \")\";\n\t} else if (textArrangementType === \"TextSeparate\") {\n\t\treturn \"${\" + propertyPath + \"}\";\n\t}\n\n\treturn \"${\" + descriptionPath + \"}\" + \" (${\" + propertyPath + \"})\";\n}\n\n/**\n * Updates the model data with value help data for the action parameter\n *\n * @param data\n * @param serviceUrl\n * @param valueHelpEntitySet\n */\nexport const updateModelData = async function (data: Record<string, PropertyValue>, serviceUrl: string, valueHelpEntitySet: string) {\n\tconst valueHelpData = await fetch(serviceUrl);\n\tconst { odataModel } = Application.getInstance().fetchDetails();\n\tconst bODataV4 = odataModel === ODataModelVersion.V4;\n\n\tif (valueHelpData && typeof valueHelpData.json === \"function\") {\n\t\tconst valueHelpDataJson = await valueHelpData.json();\n\t\tconst valueHelpDataValue = bODataV4 ? valueHelpDataJson?.value : valueHelpDataJson?.d?.results;\n\n\t\tif (valueHelpDataValue?.length) {\n\t\t\tdata[valueHelpEntitySet] = valueHelpDataValue;\n\t\t}\n\t}\n};\n\n/**\n * Get Action Parameter Data for OData V4 model\n *\n * @param actionVerb\n * @param actionParamName\n * @returns\n */\nconst getActionParameterConfiguration = async function (actionVerb: string, actionParamName?: string) {\n\tconst actionParameterConfig = {\n\t\tserviceUrl: \"\",\n\t\tvalue: \"\",\n\t\tentitySet: \"\",\n\t\ttitle: \"\"\n\t};\n\n\tif (!actionParamName) {\n\t\treturn actionParameterConfig;\n\t}\n\n\tconst { entitySet, rootComponent } = Application.getInstance().fetchDetails();\n\n\tconst entitySetName = entitySet;\n\tconst oDialogModel = getDialogModel() as JSONModel;\n\tconst metaModel = rootComponent.getModel()?.getMetaModel() as V4ODataMetaModel;\n\tconst contextPath = `/${entitySetName}/${actionVerb}/${actionParamName}`;\n\tconst actionParamAnnotations = metaModel.getObject(`${contextPath}@`);\n\tif (!actionParamAnnotations?.[\"@com.sap.vocabularies.Common.v1.ValueListWithFixedValues\"]) {\n\t\treturn actionParameterConfig;\n\t}\n\n\tconst { valueHelpAnnotation, valueListPropertyName, valueHelpEntitySet, valueListModelServiceUrl } = await getValueHelpInfo(\n\t\tmetaModel as V4ODataMetaModel,\n\t\tcontextPath,\n\t\tactionParamName\n\t);\n\tconst textArrangementPath = valueHelpAnnotation?.[\"@com.sap.vocabularies.Common.v1.Text\"]?.$Path;\n\tconst textArrangementAnnotation =\n\t\tvalueHelpAnnotation?.[\"@com.sap.vocabularies.Common.v1.Text@com.sap.vocabularies.UI.v1.TextArrangement\"];\n\tconst actionParameterValue =\n\t\t(textArrangementAnnotation?.$EnumMember && valueListPropertyName && textArrangementPath) ||\n\t\t(valueListPropertyName && textArrangementPath)\n\t\t\t? getActionParameterValue(valueListPropertyName, textArrangementPath, textArrangementAnnotation?.$EnumMember?.split(\"/\")[1])\n\t\t\t: \"${\" + valueListPropertyName + \"}\";\n\n\tlet serviceUrl = valueListModelServiceUrl;\n\tserviceUrl =\n\t\tvalueListPropertyName && textArrangementPath\n\t\t\t? `${serviceUrl}${valueHelpEntitySet}?$select=${valueListPropertyName},${textArrangementPath}`\n\t\t\t: `${serviceUrl}${valueHelpEntitySet}?$select=${valueListPropertyName}`;\n\tserviceUrl = `${serviceUrl}&skip=0&$top=20`;\n\n\tconst data = oDialogModel.getProperty(\"/configuration/$data\");\n\tawait updateModelData(data, serviceUrl, valueHelpEntitySet);\n\toDialogModel.setProperty(\"/configuration/$data\", data);\n\n\treturn {\n\t\tentitySet: valueHelpEntitySet,\n\t\tserviceUrl: serviceUrl,\n\t\tvalue: actionParameterValue,\n\t\ttitle: \"${\" + valueListPropertyName + \"}\"\n\t};\n};\n\n/**\n * Get Action Parameter Info for OData V4 application's Action\n *\n * The action parameter will consist of errorMessage and placeholder which will be used by adaptive card.\n * Currently the errorMessage and placeholder will have values only for actions having dropdown value as input.\n *\n * @param relatedAction The related action\n * @param actionVerb The action verb\n * @param isBoundAction Is bound action\n * @returns The action parameter info\n */\nconst getActionParameterInfo = async function (relatedAction: Action, actionVerb: string, isBoundAction?: boolean) {\n\tconst actionParamInfo: any = [];\n\tlet actionIndex = 0;\n\n\tif (relatedAction && relatedAction.$Parameter) {\n\t\tconst oResourceBundle = CoreLib.getResourceBundleFor(\"sap.cards.ap.generator.i18n\");\n\n\t\tfor (const actionParam of relatedAction.$Parameter) {\n\t\t\tconst isActionRequired = !isBoundAction || (isBoundAction && actionIndex > 0);\n\t\t\tif (isActionRequired) {\n\t\t\t\tconst isRequired = actionParam.$Nullable === false;\n\t\t\t\tconst actionParamInfoToAdd: AdaptiveCardActionParameter = {\n\t\t\t\t\tisRequired: isRequired,\n\t\t\t\t\tid: actionParam.$Name,\n\t\t\t\t\tlabel: await getActionParameterName(actionVerb, actionParam.$Name),\n\t\t\t\t\terrorMessage: isRequired ? oResourceBundle.getText(\"GENERATOR_ADAPTIVE_CARD_ACTION_PARAMETERS_ERROR_MESSAGE\") : \"\",\n\t\t\t\t\tplaceholder: \"\"\n\t\t\t\t};\n\t\t\t\tconst actionParameterConfig = (await getActionParameterConfiguration(\n\t\t\t\t\tactionVerb,\n\t\t\t\t\tactionParam.$Name\n\t\t\t\t)) as ActionParameterConfiguration;\n\t\t\t\tif (actionParameterConfig?.entitySet) {\n\t\t\t\t\tactionParamInfoToAdd[\"configuration\"] = actionParameterConfig;\n\t\t\t\t\tactionParamInfoToAdd.placeholder = oResourceBundle.getText(\"GENERATOR_ADAPTIVE_CARD_ACTION_PARAMETERS_PLACEHOLDER\");\n\t\t\t\t}\n\t\t\t\tactionParamInfo.push(actionParamInfoToAdd);\n\t\t\t}\n\t\t\tactionIndex++;\n\n\t\t\tif (actionIndex === relatedAction.$Parameter.length) {\n\t\t\t\treturn actionParamInfo;\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Gets the enabled value from annotation\n *\n * @param actionAnnotation\n * @returns\n */\nfunction getEnabledValueFromAnnotation(actionAnnotation: ActionAnnotation) {\n\tif (actionAnnotation) {\n\t\tconst operationAvailable = actionAnnotation[\"@Org.OData.Core.V1.OperationAvailable\"];\n\n\t\tif (operationAvailable?.$Path) {\n\t\t\treturn operationAvailable.$Path;\n\t\t} else if (operationAvailable?.Bool) {\n\t\t\treturn operationAvailable.Bool;\n\t\t}\n\t}\n\n\treturn \"\";\n}\n\n/**\n * Gets the critical value from annotation\n *\n * @param oCriticalAnnotation\n * @returns\n */\nfunction getCriticalValueFromAnnotation(oCriticalAnnotation?: CriticalAction) {\n\tif (!oCriticalAnnotation) {\n\t\treturn false;\n\t}\n\tif (oCriticalAnnotation.Bool === undefined) {\n\t\treturn true;\n\t}\n\n\tconst oParameterValue = oCriticalAnnotation.Bool;\n\n\tif (typeof oParameterValue === \"string\") {\n\t\tconst oActionValue = oParameterValue.toLowerCase();\n\t\treturn !(oActionValue == \"false\" || oActionValue == \"\" || oActionValue == \" \");\n\t}\n\n\treturn !!oParameterValue;\n}\n\n/**\n *\n * Returns the metadata annotation info for OData V4 model ( enabled or critical value coming from metadata annotations )\n *\n * @param dataField\n * @param metaModel\n * @param entityTypeName\n * @returns\n */\n\nfunction getMetadataAnnotationInfoV4(dataField: DataFieldV4, metaModel: V4ODataMetaModel, entitySetName: string) {\n\tconst dataFieldAction = dataField.Action;\n\tconst actionVerb = dataFieldAction.indexOf(\"(\") > -1 ? dataFieldAction.split(\"(\")[0] : dataFieldAction;\n\tconst actionAnnotation = metaModel.getObject(\"/\" + entitySetName + \"/\" + actionVerb + \"@\");\n\tconst enablePath = getEnabledValueFromAnnotation(actionAnnotation);\n\tconst isConfirmationRequired = getCriticalValueFromAnnotation(actionAnnotation?.[\"@com.sap.vocabularies.UI.v1.Critical\"]);\n\n\treturn {\n\t\tenablePath: enablePath,\n\t\tisConfirmationRequired: isConfirmationRequired\n\t};\n}\n\n/**\n * Get the metadata annotation info for OData V2 model\n *\n * @param dataField\n * @param metaModel\n * @returns\n */\nfunction getMetadataAnnotationInfoV2(dataField: DataField, metaModel: V2ODataMetaModel) {\n\tconst functionName: string = dataField.Action.String.split(\"/\")[1];\n\tconst functionImport = metaModel.getODataFunctionImport(functionName) as unknown as FunctionImport;\n\n\treturn {\n\t\tenablePath: functionImport?.[\"sap:applicable-path\"] || \"\",\n\t\tisConfirmationRequired: getCriticalValueFromAnnotation(functionImport?.[\"com.sap.vocabularies.Common.v1.IsActionCritical\"])\n\t};\n}\n\n/**\n * Gets the action parameters for OData V4 model\n * @param controlProperties The control properties\n * @param metaModel The meta model\n * @returns Action parameters\n */\nconst getActionParams = async function (controlProperties: ControlProperties, metaModel: V4ODataMetaModel) {\n\tconst { entitySet } = Application.getInstance().fetchDetails();\n\tconst titleKey = controlProperties.titleKey || \"\";\n\tconst actionVerb: string = titleKey.indexOf(\"(\") > -1 ? titleKey.split(\"(\")[0] : titleKey;\n\tconst actionValue = metaModel.getObject(`/${entitySet}/${actionVerb}`);\n\tlet actionType: string = titleKey.indexOf(\"(\") > -1 ? titleKey?.split(\"(\")[1] : \"\";\n\tactionType = actionType.indexOf(\")\") > -1 ? actionType.replace(\")\", \"\") : actionType;\n\n\t//Get action Parameters for unbound action\n\tif (actionValue?.$kind === \"ActionImport\" && actionValue?.$Action) {\n\t\tconst unBoundActions = metaModel.getObject(\"/\" + actionValue?.$Action);\n\t\tconst relatedUnboundAction = getRelatedUnboundActions(unBoundActions);\n\t\treturn getActionParameterInfo(relatedUnboundAction[0], actionVerb);\n\t}\n\n\t//Get action Parameters for Bound actions\n\tconst relatedBoundAction = getRelatedBoundAction(actionValue, actionType);\n\n\tif (relatedBoundAction?.length && relatedBoundAction[0]?.$Parameter != null && relatedBoundAction[0]?.$Parameter.length > 1) {\n\t\treturn await getActionParameterInfo(relatedBoundAction[0], actionVerb, true);\n\t}\n};\n\n/**\n * Get the action verb for OData V4 model\n * @param controlProperties The control properties\n * @param metaModel The meta model\n * @returns Returns the action string\n */\nfunction getActionVerb(controlProperties: ControlProperties, metaModel: V4ODataMetaModel) {\n\tconst titleKey = controlProperties.titleKey || \"\";\n\tconst actionVerb = titleKey.indexOf(\"(\") > -1 ? titleKey.split(\"(\")[0] : titleKey;\n\tconst actionValue = metaModel.getObject(\"/\" + actionVerb) || [];\n\tlet actionType: string = titleKey.indexOf(\"(\") > -1 ? titleKey.split(\"(\")[1] : \"\";\n\tactionType = actionType.indexOf(\")\") > -1 ? actionType.replace(\")\", \"\") : actionType;\n\n\t//Get action string for unbound action\n\tif (actionValue?.$kind === \"ActionImport\" && actionValue?.$Action) {\n\t\treturn titleKey?.split(\"/\")[1];\n\t}\n\n\tconst relatedBoundAction = getRelatedBoundAction(actionValue, actionType);\n\t//Get action string for bound action\n\tif (relatedBoundAction?.length) {\n\t\treturn actionVerb;\n\t}\n\n\treturn actionVerb;\n}\n\n/**\n * Get the function import info for OData V2 model's action\n *\n * @param controlProperties The control properties\n * @param metaModel The meta model\n * @returns Functionimport info\n */\nfunction getFunctionImportInfo(controlProperties: ControlProperties, metaModel: V2ODataMetaModel) {\n\tconst { entitySet } = Application.getInstance().fetchDetails();\n\tconst functionName: string = controlProperties.titleKey;\n\tconst functionImport = metaModel.getODataFunctionImport(functionName) as unknown as FunctionImport;\n\tconst oContextObject = getDialogModel().getProperty(\"/configuration/$data\");\n\tconst entitySetInfo = metaModel.getODataEntitySet(entitySet) as EntitySet;\n\tconst entityType = metaModel.getODataEntityType(entitySetInfo?.entityType) as EntityType;\n\tconst mKeyProperties: KeyMap = getPropertyKeys(entityType);\n\tconst oSkipProperties: SkipProperty = {};\n\tconst mActionParams = {\n\t\tparameterData: {},\n\t\tadditionalParameters: []\n\t} as ParametersInfoV2;\n\n\tfunctionImport?.parameter?.forEach(function (importParameter: FunctionImportParameter) {\n\t\taddParameterLabel(importParameter, entityType, metaModel);\n\n\t\tconst parameterName: string = importParameter?.name || \"\";\n\t\tconst isKey = !!mKeyProperties[parameterName];\n\t\tlet parameterValue;\n\n\t\tif (oContextObject?.hasOwnProperty(parameterName)) {\n\t\t\tparameterValue = oContextObject[parameterName];\n\t\t} else if (isKey && oContextObject && functionImport[\"sap:action-for\"]) {\n\t\t\t// parameter is key but not part of the current projection - raise error\n\t\t\tLog.error(\"Key parameter of action not found in current context: \" + parameterName);\n\t\t\tthrow new Error(\"Key parameter of action not found in current context: \" + parameterName);\n\t\t}\n\n\t\tmActionParams.parameterData[parameterName] = parameterValue;\n\n\t\tconst skip = !!oSkipProperties[parameterName];\n\t\tif (!skip && (!isKey || !functionImport[\"sap:action-for\"]) && importParameter.mode.toUpperCase() == \"IN\") {\n\t\t\t// offer as optional parameter with default value from context\n\t\t\tmActionParams.additionalParameters.push(importParameter);\n\t\t}\n\t});\n\n\treturn {\n\t\tmActionParams: mActionParams,\n\t\tfunctionImport: functionImport\n\t};\n}\n\n/**\n * Get the property keys for the entity type\n * @param entityType The entity type\n * @returns The property keys map\n */\nconst getPropertyKeys = function (entityType: EntityType) {\n\tconst oKeyMap: KeyMap = {};\n\n\tentityType.key.propertyRef.forEach((property: Property) => {\n\t\tif (property.name) {\n\t\t\toKeyMap[property.name] = true;\n\t\t}\n\t});\n\n\treturn oKeyMap;\n};\n\n/**\n * Adds the parameter label to the entity type property\n *\n * @param parameter The Action parameter\n * @param entityType The entity type\n * @param metaModel The meta model\n */\nconst addParameterLabel = function (parameter: FunctionImportParameter, entityType: EntityType, metaModel: V2ODataMetaModel) {\n\tif (entityType && parameter && !parameter[\"com.sap.vocabularies.Common.v1.Label\"]) {\n\t\tconst property = metaModel.getODataProperty(entityType, parameter.name, false) as Property;\n\t\tif (property && property[\"com.sap.vocabularies.Common.v1.Label\"]) {\n\t\t\t// copy label from property to parameter with same name as default if no label is set for function import parameter\n\t\t\tparameter[\"com.sap.vocabularies.Common.v1.Label\"] = property[\"com.sap.vocabularies.Common.v1.Label\"];\n\t\t}\n\t}\n};\n\n/**\n *\n * Returns the service URL, valueListPropertyPath, descriptionPath for OData V2 model using the value list parameters\n *\n * @param serviceUrlPrefix\n * @param valueListParameters\n * @returns\n */\nfunction getParameterConfigFromValueList(serviceUrlPrefix: string, valueListParameters: ValueListParameter[]) {\n\tconst selectProps: Array<string> = [];\n\tlet valueListPropertyPath = \"\",\n\t\tdescriptionPath = \"\";\n\n\tvalueListParameters.forEach((valueListParameter) => {\n\t\tconst valueListProperty = valueListParameter?.ValueListProperty?.String;\n\t\tif (valueListProperty) {\n\t\t\tselectProps.push(valueListProperty);\n\t\t\tdescriptionPath =\n\t\t\t\tvalueListParameter?.RecordType === \"com.sap.vocabularies.Common.v1.ValueListParameterDisplayOnly\"\n\t\t\t\t\t? valueListProperty\n\t\t\t\t\t: descriptionPath;\n\t\t\tvalueListPropertyPath =\n\t\t\t\tvalueListParameter?.RecordType === \"com.sap.vocabularies.Common.v1.ValueListParameterInOut\"\n\t\t\t\t\t? valueListProperty\n\t\t\t\t\t: valueListPropertyPath;\n\t\t}\n\t});\n\n\tconst serviceUrl = `${serviceUrlPrefix}?$select=${selectProps.join(\",\")}`;\n\n\treturn {\n\t\tserviceUrl,\n\t\tvalueListPropertyPath,\n\t\tdescriptionPath\n\t};\n}\n\n/**\n *\n * Get the action parameter configuration for OData V2 model\n *\n * @param parameter\n * @returns The action parameter configuration for OData V2 model\n */\nexport const getActionParameterConfigurationV2 = async function (parameter: FunctionImportParameter) {\n\tconst actionParameterConfig = {\n\t\tserviceUrl: \"\",\n\t\tvalue: \"\",\n\t\tentitySet: \"\",\n\t\ttitle: \"\"\n\t};\n\n\tif (!parameter) {\n\t\treturn actionParameterConfig;\n\t}\n\n\tconst ValueListAnnotation = parameter?.[\"com.sap.vocabularies.Common.v1.ValueList\"];\n\tconst valueListParameters = ValueListAnnotation?.Parameters as ValueListParameter[];\n\tconst entitySetName = ValueListAnnotation?.CollectionPath?.String;\n\n\tif (entitySetName) {\n\t\tconst { rootComponent } = Application.getInstance().fetchDetails();\n\t\tconst { serviceUrl, valueListPropertyPath, descriptionPath } = getParameterConfigFromValueList(\n\t\t\t`${(rootComponent.getModel() as any)?.sServiceUrl}/${entitySetName}`,\n\t\t\tvalueListParameters\n\t\t);\n\n\t\tlet textArrangementType = \"TextOnly\";\n\n\t\tif (parameter?.[\"com.sap.vocabularies.UI.v1.TextArrangement\"]) {\n\t\t\ttextArrangementType = parameter[\"com.sap.vocabularies.UI.v1.TextArrangement\"]?.EnumMember?.split(\"/\")[1];\n\t\t}\n\n\t\tconst actionParameterValue =\n\t\t\tvalueListPropertyPath && descriptionPath\n\t\t\t\t? getActionParameterValue(valueListPropertyPath, descriptionPath, textArrangementType)\n\t\t\t\t: \"${\" + valueListPropertyPath + \"}\";\n\n\t\tconst oDialogModel = getDialogModel() as JSONModel;\n\t\tconst data = oDialogModel.getProperty(\"/configuration/$data\");\n\t\tawait updateModelData(data, serviceUrl, entitySetName);\n\t\toDialogModel.setProperty(\"/configuration/$data\", data);\n\n\t\treturn {\n\t\t\tentitySet: entitySetName,\n\t\t\tserviceUrl: serviceUrl,\n\t\t\tvalue: actionParameterValue,\n\t\t\ttitle: \"${\" + valueListPropertyPath + \"}\"\n\t\t};\n\t}\n};\n"],"mappings":"AAAA;;;;AAAA,aAAAA,IAAAC,GAAAC,OAAA,kIAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,mBAoKaC,SAAuCC,SAAW,YAAeA,OAAOC,WAAaD,OAAOC,SAAWD,OAAO,oBAAuB,aA7H3I,SAASE,EAAQC,EAAMC,EAAOC,GACpC,IAAKF,EAAKG,EAAG,CACZ,GAAID,aAAiBE,EAAO,CAC3B,GAAIF,EAAMC,EAAG,CACZ,GAAIF,EAAQ,EAAG,CACdA,EAAQC,EAAMC,CACf,CACAD,EAAQA,EAAMG,CACf,KAAO,CACNH,EAAMI,EAAIP,EAAQQ,KAAK,KAAMP,EAAMC,GACnC,MACD,CACD,CACA,GAAIC,GAASA,EAAMM,KAAM,CACxBN,EAAMM,KAAKT,EAAQQ,KAAK,KAAMP,EAAMC,GAAQF,EAAQQ,KAAK,KAAMP,EAAM,IACrE,MACD,CACAA,EAAKG,EAAIF,EACTD,EAAKK,EAAIH,EACT,MAAMO,EAAWT,EAAKM,EACtB,GAAIG,EAAU,CACbA,EAAST,EACV,CACD,CACD,CAAC,MA9DYI,EAAsB,WAClC,SAAAA,IAAkB,CAClBA,EAAMM,UAAUF,KAAO,SAASG,EAAaC,GAC5C,MAAMC,EAAS,IAAAT,EACf,MAAMH,EAAQa,KAAKX,EACnB,GAAIF,EAAO,CACV,MAAMc,EAAWd,EAAQ,EAAIU,EAAcC,EAC3C,GAAIG,EAAU,CACb,IACChB,EAAQc,EAAQ,EAAGE,EAASD,KAAKT,GAClC,CAAE,MAAOW,GACRjB,EAAQc,EAAQ,EAAGG,EACpB,CACA,OAAOH,CACR,KAAO,CACN,OAAOC,IACR,CACD,CACAA,KAAKR,EAAI,SAASW,GACjB,IACC,MAAMf,EAAQe,EAAMZ,EACpB,GAAIY,EAAMd,EAAI,EAAG,CAChBJ,EAAQc,EAAQ,EAAGF,EAAcA,EAAYT,GAASA,EACvD,MAAO,GAAIU,EAAY,CACtBb,EAAQc,EAAQ,EAAGD,EAAWV,GAC/B,KAAO,CACNH,EAAQc,EAAQ,EAAGX,EACpB,CACD,CAAE,MAAOc,GACRjB,EAAQc,EAAQ,EAAGG,EACpB,CACD,EACA,OAAOH,CACR,EACA,OAAAT,CACD,CAnCmC,GAgE5B,SAASc,EAAeC,GAC9B,OAAOA,aAAoBf,GAASe,EAAShB,EAAI,CAClD,CA+CO,SAASiB,EAAOC,EAAOC,EAAMC,GACnC,IAAIC,GAAK,EAAGxB,EAAMyB,EAClB,SAASC,EAAOb,GACf,IACC,QAASW,EAAIH,EAAMM,UAAYJ,IAAUA,KAAU,CAClDV,EAASS,EAAKE,GACd,GAAIX,GAAUA,EAAOL,KAAM,CAC1B,GAAIU,EAAeL,GAAS,CAC3BA,EAASA,EAAOR,CACjB,KAAO,CACNQ,EAAOL,KAAKkB,EAAQD,IAAWA,EAAS1B,EAAQQ,KAAK,KAAMP,EAAO,IAAII,EAAS,KAC/E,MACD,CACD,CACD,CACA,GAAIJ,EAAM,CACTD,EAAQC,EAAM,EAAGa,EAClB,KAAO,CACNb,EAAOa,CACR,CACD,CAAE,MAAOG,GACRjB,EAAQC,IAASA,EAAO,IAAII,GAAU,EAAGY,EAC1C,CACD,CACAU,IACA,OAAO1B,CACR,CAqWA,MAKsB4B,EAAuB,SAACC,EAAwBC,GAAoC,IACzG,MAAMC,cAAEA,GAAkBC,EAAYC,cAAcC,eACpD,MAAMC,EAAWC,IAAiBC,YAAY,mCAC9C,MAAMC,EAAYP,EAAcQ,YAAYC,eAAsD,OAAAC,QAAAC,QACzEC,EAAsBb,EAAmBK,EAAUG,IAAU9B,KAAA,SAAhFoC,GACNC,EAAsBhB,EAAUe,EAAYd,EAAmB,EAChE,CAAC,MAAAd,GAAA,OAAAyB,QAAAhB,OAAAT,EAAA,GApVM,SAAS8B,EAAOC,EAAQzB,EAAMC,GACpC,UAAWwB,EAAOnD,KAAqB,WAAY,CAClD,IAAIE,EAAWiD,EAAOnD,KAAoBoD,EAAMhD,EAAMyB,EACtD,SAASC,EAAOb,GACf,IACC,QAASmC,EAAOlD,EAASmD,QAAQC,QAAU3B,IAAUA,KAAU,CAC9DV,EAASS,EAAK0B,EAAK9C,OACnB,GAAIW,GAAUA,EAAOL,KAAM,CAC1B,GAAIU,EAAeL,GAAS,CAC3BA,EAASA,EAAOR,CACjB,KAAO,CACNQ,EAAOL,KAAKkB,EAAQD,IAAWA,EAAS1B,EAAQQ,KAAK,KAAMP,EAAO,IAAII,EAAS,KAC/E,MACD,CACD,CACD,CACA,GAAIJ,EAAM,CACTD,EAAQC,EAAM,EAAGa,EAClB,KAAO,CACNb,EAAOa,CACR,CACD,CAAE,MAAOG,GACRjB,EAAQC,IAASA,EAAO,IAAII,GAAU,EAAGY,EAC1C,CACD,CACAU,IACA,GAAI5B,EAASqD,OAAQ,CACpB,IAAIC,EAAS,SAASlD,GACrB,IACC,IAAK8C,EAAKE,KAAM,CACfpD,EAASqD,QACV,CACD,CAAE,MAAMnC,GACR,CACA,OAAOd,CACR,EACA,GAAIF,GAAQA,EAAKQ,KAAM,CACtB,OAAOR,EAAKQ,KAAK4C,EAAQ,SAASpC,GACjC,MAAMoC,EAAOpC,EACd,EACD,CACAoC,GACD,CACA,OAAOpD,CACR,CAEA,KAAM,WAAY+C,GAAS,CAC1B,MAAM,IAAIM,UAAU,yBACrB,CAEA,IAAIC,EAAS,GACb,IAAK,IAAI9B,EAAI,EAAGA,EAAIuB,EAAOpB,OAAQH,IAAK,CACvC8B,EAAOC,KAAKR,EAAOvB,GACpB,CACA,OAAOJ,EAAOkC,EAAQ,SAAS9B,GAAK,OAAOF,EAAKgC,EAAO9B,GAAK,EAAGD,EAChE,CAAC,MA1NQiC,EAAUjE,EAAA,oBAiBVkE,EAAgChE,EAAA,0CAChCuC,EAAWtC,EAAA,qBAAEgE,EAAiBhE,EAAA,2BAa9B0C,EAAczC,EAAA,kBA0DvB,SAASgE,EACRC,EACAzB,EACAG,EACAuB,GAEA,IAAIC,EAAyB,CAC5BC,uBAAwB,MACxBC,WAAY,IAGb,GAAI7B,EAAU,CACb2B,EAAyBG,EACxBL,EACAtB,EACAuB,EAEF,KAAO,CACNC,EAAyBI,EAA4BN,EAAmCtB,EACzF,CAEA,MAAO,CACN6B,MAAOhC,EAAWyB,GAAWQ,MAAQR,GAAWQ,OAAOC,OACvDC,OAAQnC,EAAWyB,EAAUW,OAASX,EAAUW,OAAOF,OAAOG,MAAM,KAAK,GACzET,uBAAwBD,EAAuBC,wBAA0B,MACzEC,WAAYF,EAAuBE,WAErC,CAQA,SAASS,EAAqBC,GAC7B,GAAIA,IAAgB,WAAY,CAC/B,OAAOlB,EAAWmB,MACnB,CACA,GAAID,IAAgB,WAAY,CAC/B,OAAOlB,EAAWoB,MACnB,CACA,OAAOpB,EAAWqB,OACnB,CAUA,SAASC,EAAgCjD,EAAwBe,EAAgCd,GAChG,IAAKD,EAAS,YAAYkD,cAAe,CACxClD,EAAS,YAAYkD,cAAgB,CACpCC,WAAY,CACXC,uBAAwB,CAAC,EACzBC,gCAAiC,CAAC,GAGrC,MAAO,GAAIrD,EAAS,YAAYkD,gBAAkBlD,EAAS,YAAYkD,cAAcC,WAAY,CAChGnD,EAAS,YAAYkD,cAAcC,WAAa,CAC/CC,uBAAwB,CAAC,EACzBC,gCAAiC,CAAC,EAEpC,CAEA,MAAMC,EAAoBtD,EAAS,YAAYkD,cAC/C,MAAMK,EAAeD,EAAkBH,WAEvC,GAAII,IAAiBA,EAAaF,gCAAiC,CAClEE,EAAaF,gCAAkC,CAAC,CACjD,CACA,GAAIE,IAAiBA,EAAaH,uBAAwB,CACzDG,EAAaH,uBAAyB,CAAC,CACxC,CAEA,GAAIG,GAAcF,iCAAmCE,GAAcH,uBAAwB,CAC1FG,EAAaH,uBAAuBnD,EAAkBuD,UAAYzC,EAAWoC,YAAc,CAAC,EAC5FI,EAAaF,gCAAgCpD,EAAkBuD,UAAYzC,GAAc,CAAC,CAC3F,CACD,CASA,SAAS0C,EAAiCzD,EAAwBC,GACjE,MAAMqD,EAAoBtD,EAAS,YAAYkD,cAC/C,MAAMK,EAAeD,GAAmBH,WACxC,GAAII,GAAcF,iCAAmCE,GAAcH,uBAAwB,QACnFG,EAAaH,uBAAuBnD,EAAkBuD,iBACtDD,EAAaF,gCAAgCpD,EAAkBuD,SACvE,CACD,CAWA,SAASE,EACR1D,EACAC,EACA0D,EACAxB,GAEA,MAAMmB,EAAoBtD,EAAS,YAAYkD,cAC/C,MAAMK,EAAeD,GAAmBH,WAExC,GAAII,GAAcF,iCAAmCE,GAAcH,uBAAwB,CAC1F,MAAMQ,EAAyBL,EAAaF,gCAAgCpD,EAAkBuD,UAC9FI,EAAuBC,MAAQF,EAC/BC,EAAuBzB,WAAaA,CACrC,CACD,CAOA,SAASnB,EAAsBhB,EAAwBe,EAAgCd,GACtF,IAAI6D,EAAa9D,EAAS,YAAY+D,OAEtC,IAAKD,EAAY,CAChB9D,EAAS,YAAY+D,OAAS,CAC7BC,aAAc,IAEfF,EAAa9D,EAAS,YAAY+D,MACnC,CAEA,MAAME,EAAeH,EAAWE,aAAalE,OAE7C,GAAImE,EAAe,EAAG,CACrBH,EAAWE,aAAatC,KAAK,CAC5BwC,KAAM,SACNC,QAAS,MACTC,KAAMrD,EAAWuB,MACjB+B,WAAYzB,EAAqB7B,EAAW8C,OAC5CS,QAAS,CACR,CACCJ,KAAM,SACNK,QAASxD,EAAWoB,WAAa,KAAOpB,EAAWoB,WAAa,IAAM,OACtEgB,WAAY,uCAAyClD,EAAkBuD,SAAW,SAKrFP,EAAgCjD,EAAUe,EAAYd,EACvD,CACD,CAMO,SAASuE,IACf,MAAMC,EAAoC,CACzC,CACCC,KAAM,UACNpC,MAAO,UACPqC,eAAgB,WAEjB,CACCD,KAAM,WACNpC,MAAO,WACPqC,eAAgB,YAEjB,CACCD,KAAM,WACNpC,MAAO,WACPqC,eAAgB,aAIlB,OAAOF,CACR,CAQA,SAASG,EACRC,EACAvE,EACAG,EACAuB,GAEA,MAAMsC,EAAmC,GACzC,MAAMQ,EAAiC,gDAEvCD,GACGE,OAAO,SAAUhD,GAClB,MAAMiD,EAAwB1E,EAAWyB,GAAWkD,MAAQlD,GAAWmD,WACvE,OAAOF,IAAkBF,CAC1B,GACCK,IAAI,SAAUpD,GACd,MAAMhB,EAAae,EAA4BC,EAAWzB,EAAUG,EAAWuB,GAC/EsC,EAAQ5C,KAAKX,EACd,GAED,OAAOuD,CACR,CAYA,MAAMc,EAAyB,SAC9BC,EACAC,EACAC,GAA8B,IAC7B,OAAA3E,QAAAC,QAAAI,EAC6BoE,EAAgB,SAAnCG,GACV,GAAID,EAAgB,CACnBC,EAAgBlD,MAAQV,EAAiC4D,EAAgBlD,MAAOiD,GAChFC,EAAgBC,aAAe7D,EAAiC4D,GAAiBC,cAAgB,GAAIF,GACrGC,EAAgBE,YAAc9D,EAAiC4D,GAAiBE,aAAe,GAAIH,EACpG,CAEA,MAAMI,EAAwBH,EAAgBtC,cAC9C,MAAM0C,EAAqBD,GAAuBE,UAAU,MAAAC,EAAA,cAExDF,EAAkB,QAAAhF,QAAAC,QACfkF,EAAgBT,EAAMK,GAAuBK,WAAYJ,IAAmBjH,KAAA,eAHvB,GAGuB,GAAAmH,KAAAnH,KAAA,OAAAmH,EAAAnH,KAAA,aAEpF,GACD,CAAC,MAAAQ,GAAA,OAAAyB,QAAAhB,OAAAT,EAAA,GAYD,MAAM8G,EAAsB,SAC3BC,EACAZ,EACAC,GAA8B,IAC7B,IAAAY,EAAA,eAAAC,EAAAC,GAAA,OAAAF,EAAAE,EA2CM,CACN,CACCC,MAAO,GACP9C,SAAU,GACVK,MAAO,UACP0C,cAAe,GACfC,sBAAuB,OAExB,CAlDD,MAAMlD,EAAoB4C,EAAa,YAAYhD,cACnD,MAAMK,EAAeD,GAAmBH,WACxC,MAAMmB,EAAoC,GAAG,MAAAmC,EAAA,cAEzClD,GAAcF,gCAA+B,UAAAqD,IAAAP,EAAA,YAmCzC7B,CAAO,CAlCd,MAAMjB,EAAkCE,EAAaF,gCACrD,MAAMsD,EAAQC,OAAOC,KAAKxD,GAAiC,MAAAyD,EAAA7F,EAEzC0F,EAAK,SAAZI,GAAc,SAAAC,IAYxB,IAAInD,EAAQ,UAEZ,GAAIpB,EAAOoB,QAAU,WAAY,CAChCA,EAAQ,UACT,MAAO,GAAIpB,EAAOoB,QAAU,cAAe,CAC1CA,EAAQ,UACT,CAEA,MAAM9C,EAAgC,CACrCuF,MAAO7D,EAAOH,MACdkB,SAAUuD,EACVlD,MAAOA,EACP0C,cAAe9D,EAAON,WACtBqE,sBAAuB,KACvBtE,uBAAwBO,EAAO6C,MAAMpD,wBAA0B,MAC/D+E,kBAAmBxE,EAAOwE,mBAE3B3C,EAAQ5C,KAAKX,EAAY,CA5BzB,MAAM0B,EAASY,EAAgC0D,GAE/C,GAAIxB,EAAgB,CACnB9C,EAAOH,MAAQV,EAAiCa,EAAOH,MAAOiD,GAC9D9C,EAAOwE,kBAAoBrF,EAAiCa,EAAOwE,kBAAmB1B,EACvF,CAAC,MAAA2B,EAAA,cAEGzE,EAAO4C,kBAAkBvF,OAAM,QAAAc,QAAAC,QAC5BuE,EAA0B3C,EAAO4C,iBAAkBC,EAAMC,IAAe5G,KAAA,eAH9E,GAG8E,OAAAuI,KAAAvI,KAAAuI,EAAAvI,KAAAqI,KAAAE,EAqBhF,GAAC,OAAAJ,KAAAnI,KAAAmI,EAAAnI,KAAA+H,KAAAI,EAAA,EApC2C,GAoC3C,OAAAlG,QAAAC,QAAA4F,KAAA9H,KAAA8H,EAAA9H,KAAAyH,KAAAK,GAaH,CAAC,MAAAtH,GAAA,OAAAyB,QAAAhB,OAAAT,EAAA,GAUM,MAAMgI,EAAgB,SAC5BC,EACA9B,EACA+B,GAA4B,IAC3B,IAAAC,EAAA,eAAAC,EAAAC,GAAA,OAAAF,EAAAE,EAKM,CACN,CACClB,MAAO,GACP9C,SAAU,GACVK,MAAO,UACP0C,cAAe,GACfC,sBAAuB,OAExB,OAAAiB,EAAA,cAZGJ,GAAiB/B,EAAI,QAAA1E,QAAAC,QACXoF,EAAuBoB,EAAe/B,EAAM8B,IAAczI,KAAA,SAAA+I,GAAAJ,EAAA,YAAAI,CAAA,IAWvE,GAXuE,OAAA9G,QAAAC,QAAA4G,KAAA9I,KAAA8I,EAAA9I,KAAA4I,KAAAE,GAYzE,CAAC,MAAAtI,GAAA,OAAAyB,QAAAhB,OAAAT,EAAA,GAUM,MAAMwI,EAAiB,SAC7BrC,EACA8B,EACAC,GAA4B,IAC3B,SAAAO,EAAAC,GAID,MAAO,CACNC,kBAAmBC,EACnBC,aAAYH,EACZvH,SAAUA,EACV2H,OAAQzD,IACR0D,mBAAoB,KACpBC,aAAcJ,EAAYjI,OAAS,EAClC,CAVF,MAAMsI,WAAEA,EAAUvC,UAAEA,EAAS3F,cAAEA,GAAkBC,EAAYC,cAAcC,eAC3E,MAAMC,EAAW8H,IAAevG,EAAkBwG,GAClD,MAAMN,EAAcO,EAAepI,EAAe2F,EAAWvF,GAAU,MAAAiI,EAGxDR,EAAYjI,OAAS,EAAC,OAAAc,QAAAC,QAAA0H,EAAA3H,QAAAC,QAASsG,EAAiBC,EAAe9B,EAAM+B,IAAc1I,KAAAiJ,KAAG,IAMtG,CAAC,MAAAzI,GAAA,OAAAyB,QAAAhB,OAAAT,EAAA,GASM,SAASmJ,EAAeE,EAA2BxG,EAAuB1B,GAChF,MAAMmI,EAAWnI,EAAYkI,EAAa9H,WAA+B8H,EAAa9H,WACrFD,EAAYgI,EAAS9H,eACrBkF,EAAYvF,EAAWG,EAAUiI,UAAU,IAAM1G,GAAkBvB,EAA+BkI,kBAAkB3G,GACpH4G,EAAyBtI,EAAWuF,GAAWZ,MAAQY,GAAWgD,WAClEA,EAAavI,EACVG,EAAUiI,UAAU,IAAME,GACzBnI,EAA+BqI,mBAAmBF,GACtDG,EAA6BzI,EAAW,6CAA+C,4CACxF,IAAI0I,EAA6C,CAAC,EAElD,GAAI1I,EAAU,CACb0I,EAAuBvI,EAAUiI,UAAU,IAAME,EAAiB,IACnE,CAEA,MAAMK,EAAgC3I,EAAWsG,OAAOC,KAAKmC,GAAwBpC,OAAOC,KAAKgC,GACjG,MAAMK,EAA0CD,GAAgBlE,OAAQgC,GAChEA,IAAQgC,GAEhB,IAAIlE,EAA+B,GAEnC,GAAIqE,GAA0BpJ,OAAQ,CACrC+E,EAAavE,EAAW0I,EAAqBD,GAAsBF,EAAWE,EAC/E,CAEA,OAAOnE,EAAuBC,EAAYvE,EAAUG,EAAWuB,EAChE,CAoBO,SAASmH,EAAyBnJ,EAAwBC,GAChE,MAAM6D,EAAa9D,EAAS,aAAa+D,OACzC,MAAME,EAAeH,GAAYE,aAAalE,OAE9C,GAAImE,GAAgBH,EAAY,CAC/B,MAAMsF,EAAgBtF,EAAWE,aAAae,OAAQf,IACrD,MAAMqF,EAAiBrF,EAAaM,QAAQ,GAAGnB,WAC/C,OAAOkG,IAAmB,uCAAyCpJ,EAAkBuD,SAAW,OAGjG,GAAI4F,EAActJ,OAAQ,CACzBgE,EAAWE,aAAeoF,CAC3B,KAAO,QACCpJ,EAAS,aAAa+D,MAC9B,CAEAN,EAAiCzD,EAAUC,EAC5C,CACD,CAOO,SAASqJ,EAAiBtJ,GAChCA,EAAS,YAAY+D,OAAS,CAC7BC,aAAc,IAGf,MAAMV,EAAoBtD,EAAS,YAAYkD,cAC/C,MAAMK,EAAeD,GAAmBH,WACxC,GAAII,EAAc,CACjBA,EAAaF,gCAAkC,CAAC,EAChDE,EAAaH,uBAAyB,CAAC,CACxC,CACD,CAQO,SAASmG,EAAyBvJ,EAAwBC,GAChE,MAAM6D,EAAa9D,EAAS,YAAY+D,OACxC,MAAME,EAAeH,GAAYE,aAAalE,OAE9C,GAAImE,GAAgBH,EAAY,CAC/BA,EAAWE,aAAawF,QAASxF,IAChC,MAAMvB,EAASuB,EAAaM,QAAQ,GACpC,MAAM+E,EAAiB5G,EAAOU,WAE9B,GAAIkG,IAAmB,uCAAyCpJ,EAAkBuD,SAAW,KAAM,CAClG,MAAMiG,EAAsBxJ,EAAkBsG,cAAgB,KAAOtG,EAAkBsG,cAAgB,IAAM,OAC7G,MAAM5C,EAAoB+F,EAAezJ,GACzC+D,EAAaK,WAAazB,EAAqB3C,EAAkB4D,OACjEpB,EAAO8B,QAAUkF,EACjB/F,EAAuB1D,EAAUC,EAAmB0D,EAAmB1D,EAAkBsG,eAAiB,GAC3G,GAEF,CACD,CAQA,SAASmD,EAAezJ,GACvB,IAAI4C,EAAsB,UAE1B,GAAI5C,EAAkB4D,QAAU,WAAY,CAC3ChB,EAAc,UACf,MAAO,GAAI5C,EAAkB4D,QAAU,WAAY,CAClDhB,EAAc,aACf,CACA,OAAOA,CACR,CASA,MAAM8G,EAAmB,SAAmBxG,GAA0C,IACrF,MAAMkC,EAAuD,GAC7D,MAAMuE,EAAkBjM,EAAQkM,qBAAqB,+BAA+B,MAAAC,EAAA7I,EAE5DkC,EAAU,SAAvB4G,GAAyB,SAAAC,IAmBnC3E,EAAiB3D,KAAKuI,EAAsB,CAlB5C,MAAMC,EAAaH,IAAY,gDAAgDG,WAC/E,MAAMC,EAAaD,IAAe,6DAA+DH,GAAWK,WAAa,QACzH,MAAMH,EAAoD,CACzD3H,MAAOyH,IAAY,cAAgBA,GAAWrF,MAAQ,GACtD2F,GAAIN,GAAWrF,MAAQ,GACvByF,WAAYA,EACZ1E,aAAc0E,EAAaP,EAAgBU,QAAQ,2DAA6D,GAChH5E,YAAa,IACZ,MAAA6E,EAAA,cAEER,IAAY,oBAAsB,eAAc,QAAAnJ,QAAAC,QACf2J,GAAkCT,IAAUpL,KAAA,SAA1EgH,GAAqB,GAEvBA,GAAuBE,UAAS,CACnCoE,EAAqB/G,cAAgByC,EACrCsE,EAAqBvE,YAAckE,EAAgBU,QAAQ,wDAAyD,KAPpH,GAOoH,OAAAC,KAAA5L,KAAA4L,EAAA5L,KAAAqL,KAAAO,EAIvH,GAAC,OAAA3J,QAAAC,QAAAiJ,KAAAnL,KAAAmL,EAAAnL,KAAA,WAED,OAAO0G,CAAiB,GAAjBA,EACR,CAAC,MAAAlG,GAAA,OAAAyB,QAAAhB,OAAAT,EAAA,GASD,MAAM2B,EAAqB,SAC1Bb,EACAK,EACAG,GAA8C,IAE9C,MAAMmJ,EAAkBjM,EAAQkM,qBAAqB,+BACrD,MAAMhH,EAAc6G,EAAezJ,GACnC,IAAIoF,EAAuD,GAC3D,IAAIoF,EACJ,MAAMnF,EAAa,CAClBpD,uBAAwBjC,EAAkBiC,wBAA0B,OAErE,MAAMwI,EAAiBzK,EAAkBsG,cACzC,MAAMxF,EAAiC,CACtC8C,MAAOhB,EACP8H,KAAM,GACNrI,MAAOrC,EAAkBqG,MACzBjB,iBAAkB,GAClBC,KAAMA,EACNnD,WAAYuI,GAAkB,GAC9BzD,kBAAmB2C,EAAgBU,QAAQ,oDAG5C,GAAIhK,EAAU,QAAAM,QAAAC,QACY+J,EAAgB3K,EAAmBQ,IAA8B9B,KAAA,SAAAkM,GAA1FxF,EAAgBwF,EAChB9J,EAAW4J,KAAOG,EAAc7K,EAAmBQ,GACnDM,EAAWsE,iBAAmBA,GAAoB,GAElD,OAAOtE,CAAW,EACnB,KAAO,CACN0J,EAAqBM,EAAsB9K,EAAmBQ,GAC9DM,EAAW4J,KAAO1K,EAAkBuD,SACpCzC,EAAWoC,WAAasH,GAAoBO,eAAeC,cAAc,OAAArK,QAAAC,QACrC8I,EAAoBc,GAAoBO,eAAeE,uBAAqBvM,KAAA,SAAAwM,GAAhHpK,EAAWsE,iBAAgB8F,EAC3B7F,EAAK8F,aAAe,CACnBvE,KAAMD,OAAOC,KAAK4D,GAAoBO,eAAeC,gBAEtDlK,EAAWuE,KAAOA,EAElB,OAAOvE,CAAW,EACnB,CACD,CAAC,MAAA5B,GAAA,OAAAyB,QAAAhB,OAAAT,EAAA,GASD,SAASkM,EAAsBC,EAA4BC,GAC1D,OAAOD,GAAavG,OAAQtC,IAC3B,MAAM+I,EAAyB/I,GAAQgJ,SACvC,GAAID,EAAe,CAClB,OAAO/I,GAAQiJ,YAAYC,KAAMC,GACzBL,IAAeK,GAAa3G,MAErC,GAEF,CAOA,SAAS4G,EAAyBP,GACjC,OAAOA,GAAavG,OAAQtC,IACnBA,GAAQgJ,SAElB,CAUA,MAAMK,EAAgB,SAAmBrL,EAA6BsL,EAAqBC,GAAwB,IAAE,OAAApL,QAAAC,QACxFJ,EAAUwL,qBAAqBF,EAAa,OAAKpN,KAAA,SAAvEuN,GACN,MAAMC,EAA0BD,IAAgB,IAChD,MAAME,EAAiBD,GAAyBE,OAChD,MAAMC,EAAwBC,EAAyBJ,EAAyBH,GAAmB,IACnG,MAAMpG,EAAqBuG,IAA0B,kBACrD,MAAMK,EAAsBJ,GAAgBzL,gBAAgB+H,UAAU,IAAI9C,KAAsB0G,MAChG,MAAO,CACNE,sBACAF,wBACA1G,qBACA6G,yBAA0BL,GAAgBM,gBACzC,EACH,CAAC,MAAAvN,GAAA,OAAAyB,QAAAhB,OAAAT,EAAA,GAQD,MAAMwN,EAAsB,SAAmBC,EAAoBZ,GAAwB,IAAE,IAAAa,EAAA,MAC5F,MAAM3M,cAAEA,EAAa2F,UAAEA,GAAc1F,EAAYC,cAAcC,eAAe,OAAAO,QAAAC,QAAA,cAC1EmL,EAAe,UAAAc,EAAAC,GAAA,OAAAF,EAAAE,EAeXC,IAA4B,0CAA4ChB,CAAe,CAd9F,MAAMvL,EAAYP,EAAcQ,YAAYC,eAC5C,MAAMoL,EAAc,IAAIlG,KAAa+G,KAAcZ,IACnD,MAAMiB,EAAgBxM,EAAUiI,UAAU,IAAI7C,KAC9C,MAAMmH,EAA4BvM,EAAUiI,UAAU,IAAIuE,GAAehI,SAAS+G,MAAoB,MAAAkB,EAAA,cAElGzM,EAAUiI,UAAU,GAAGqD,QAAkB,4DAA2D,QAAAnL,QAAAC,QACjEiL,EAAiBrL,EAA+BsL,EAAaC,IAAgBrN,KAAA,UAA7G6N,oBAAEA,IAAqB,MAAAW,EAG5BH,IAA4B,0CAC5BR,IAAsB,yCAAwCK,EAAA,YAAAM,CAAA,IAPsC,GAOtC,OAAAD,KAAAvO,KAAAuO,EAAAvO,KAAAmO,KAAAI,EAAA,EAZa,GAkB/E,CAAC,MAAA/N,GAAA,OAAAyB,QAAAhB,OAAAT,EAAA,GASD,SAASoN,EAAyBa,EAAqCC,GACtE,MAAMC,EAAsBF,GAAYG,WAAWC,KAAK,SAAUC,GACjE,OAAOA,GAAYC,mBAAmBC,gBAAkBN,CACzD,GACA,OAAOC,GAAqBM,iBAC7B,CAUO,SAASC,EAAwBC,EAAsBC,EAAyBC,GACtF,GAAIA,IAAwB,WAAY,CACvC,MAAO,KAAOD,EAAkB,GACjC,MAAO,GAAIC,IAAwB,WAAY,CAC9C,MAAO,KAAOF,EAAe,IAAM,KAAO,KAAOC,EAAkB,IAAM,GAC1E,MAAO,GAAIC,IAAwB,eAAgB,CAClD,MAAO,KAAOF,EAAe,GAC9B,CAEA,MAAO,KAAOC,EAAkB,IAAM,OAASD,EAAe,IAC/D,CASO,MAAM/H,EAAe,SAAmBT,EAAqCU,EAAoBJ,GAA0B,IAAE,OAAAhF,QAAAC,QACvGoN,MAAMjI,IAAWrH,KAAA,SAAvCuP,GACN,MAAM9F,WAAEA,GAAejI,EAAYC,cAAcC,eACjD,MAAMC,EAAW8H,IAAevG,EAAkBwG,GAAG,MAAA8F,EAAA,cAEjDD,UAAwBA,EAAcE,OAAS,WAAU,QAAAxN,QAAAC,QAC5BqN,EAAcE,QAAMzP,KAAA,SAA9C0P,GACN,MAAMC,EAAqBhO,EAAW+N,GAAmBhQ,MAAQgQ,GAAmBE,GAAGC,QAAQ,GAE3FF,GAAoBxO,OAAM,CAC7BwF,EAAKM,GAAsB0I,CAAmB,KAPK,GAOL,GAAAH,KAAAxP,KAAA,OAAAwP,EAAAxP,KAAA,eAGjD,CAAC,MAAAQ,GAAA,OAAAyB,QAAAhB,OAAAT,EAAA,GASD,MAAMsP,EAA+B,SAAmB7B,EAAoBZ,GAAwB,IACnG,MAAMrG,EAAwB,CAC7BK,WAAY,GACZ3H,MAAO,GACPwH,UAAW,GACXS,MAAO,IAGR,IAAK0F,EAAiB,CACrB,OAAApL,QAAAC,QAAO8E,EACR,CAEA,MAAME,UAAEA,EAAS3F,cAAEA,GAAkBC,EAAYC,cAAcC,eAE/D,MAAM2B,EAAgB6D,EACtB,MAAM6I,EAAenO,IACrB,MAAME,EAAYP,EAAcQ,YAAYC,eAC5C,MAAMoL,EAAc,IAAI/J,KAAiB4K,KAAcZ,IACvD,MAAM2C,EAAyBlO,EAAUiI,UAAU,GAAGqD,MACtD,IAAK4C,IAAyB,4DAA6D,CAC1F,OAAA/N,QAAAC,QAAO8E,EACR,CAAC,OAAA/E,QAAAC,QAE0GiL,EAC1GrL,EACAsL,EACAC,IACArN,KAAA,UAJK6N,oBAAEA,EAAmBF,sBAAEA,EAAqB1G,mBAAEA,EAAkB6G,yBAAEA,IAKxE,MAAMmC,EAAsBpC,IAAsB,yCAAyCqC,MAC3F,MAAMC,EACLtC,IAAsB,mFACvB,MAAMuC,EACJD,GAA2BE,aAAe1C,GAAyBsC,GACnEtC,GAAyBsC,EACvBf,EAAwBvB,EAAuBsC,EAAqBE,GAA2BE,aAAarM,MAAM,KAAK,IACvH,KAAO2J,EAAwB,IAEnC,IAAItG,EAAayG,EACjBzG,EACCsG,GAAyBsC,EACtB,GAAG5I,IAAaJ,aAA8B0G,KAAyBsC,IACvE,GAAG5I,IAAaJ,aAA8B0G,IAClDtG,EAAa,GAAGA,mBAEhB,MAAMV,EAAOoJ,EAAalO,YAAY,wBAAwB,OAAAI,QAAAC,QACxDkF,EAAgBT,EAAMU,EAAYJ,IAAmBjH,KAAA,WAC3D+P,EAAaO,YAAY,uBAAwB3J,GAEjD,MAAO,CACNO,UAAWD,EACXI,WAAYA,EACZ3H,MAAO0Q,EACPzI,MAAO,KAAOgG,EAAwB,IACrC,IACH,CAAC,MAAAnN,GAAA,OAAAyB,QAAAhB,OAAAT,EAAA,GAaD,MAAM+P,EAAsB,SAAmB9F,EAAuBwD,EAAoBpB,GAAuB,IAAE,IAAA2D,EAAA,MAClH,MAAMC,EAAuB,GAC7B,IAAIC,EAAc,EAAE,OAAAzO,QAAAC,QAAA,cAEhBuI,GAAiBA,EAAcsC,WAAU,CAC5C,MAAM9B,EAAkBjM,EAAQkM,qBAAqB,+BAA+B,OAAA5I,EAE1DmI,EAAcsC,WAAU,SAAvCE,GAAyC,SAAA0D,IAqBnDD,IAAc,GAEVA,IAAgBjG,EAAcsC,WAAW5L,OAAM,CAAAqP,EAAA,YAC3CC,CAAe,EAvBvB,MAAMG,GAAoB/D,GAAkBA,GAAiB6D,EAAc,EAAG,MAAAG,EAAA,cAC1ED,EAAgB,CACnB,MAAMpF,EAAayB,EAAY6D,YAAc,MAAM,MAAAC,EAG9C9D,EAAY+D,MAAK,OAAA/O,QAAAC,QACR8L,EAAuBC,EAAYhB,EAAY+D,QAAMhR,KAAA,SAAAiR,GAHnE,MAAM3F,EAAoD,CACzDE,WAAYA,EACZE,GAAEqF,EACFpN,MAAKsN,EACLnK,aAAc0E,EAAaP,EAAgBU,QAAQ,2DAA6D,GAChH5E,YAAa,IACZ,OAAA9E,QAAAC,QACmC4N,EACpC7B,EACAhB,EAAY+D,QACZhR,KAAA,SAAAkR,GAHD,MAAMlK,EAAqBkK,EAI3B,GAAIlK,GAAuBE,UAAW,CACrCoE,EAAqB,iBAAmBtE,EACxCsE,EAAqBvE,YAAckE,EAAgBU,QAAQ,wDAC5D,CACA8E,EAAgB1N,KAAKuI,EAAsB,MAlBkC,GAkBlC,OAAAuF,KAAA7Q,KAAA6Q,EAAA7Q,KAAA2Q,KAAAE,EAO7C,EAAC,kBAAAL,CAAA,IA/BkB,GAiCrB,CAAC,MAAAhQ,GAAA,OAAAyB,QAAAhB,OAAAT,EAAA,GAQD,SAAS2Q,EAA8BC,GACtC,GAAIA,EAAkB,CACrB,MAAMC,EAAqBD,EAAiB,yCAE5C,GAAIC,GAAoBnB,MAAO,CAC9B,OAAOmB,EAAmBnB,KAC3B,MAAO,GAAImB,GAAoBC,KAAM,CACpC,OAAOD,EAAmBC,IAC3B,CACD,CAEA,MAAO,EACR,CAQA,SAASC,EAA+BC,GACvC,IAAKA,EAAqB,CACzB,OAAO,KACR,CACA,GAAIA,EAAoBF,OAASG,UAAW,CAC3C,OAAO,IACR,CAEA,MAAMC,EAAkBF,EAAoBF,KAE5C,UAAWI,IAAoB,SAAU,CACxC,MAAMC,EAAeD,EAAgBE,cACrC,QAASD,GAAgB,SAAWA,GAAgB,IAAMA,GAAgB,IAC3E,CAEA,QAASD,CACV,CAYA,SAASjO,EAA4BL,EAAwBtB,EAA6BuB,GACzF,MAAMwO,EAAkBzO,EAAUW,OAClC,MAAMkK,EAAa4D,EAAgBC,QAAQ,MAAQ,EAAID,EAAgB7N,MAAM,KAAK,GAAK6N,EACvF,MAAMT,EAAmBtP,EAAUiI,UAAU,IAAM1G,EAAgB,IAAM4K,EAAa,KACtF,MAAMzK,EAAa2N,EAA8BC,GACjD,MAAM7N,EAAyBgO,EAA+BH,IAAmB,yCAEjF,MAAO,CACN5N,WAAYA,EACZD,uBAAwBA,EAE1B,CASA,SAASG,EAA4BN,EAAsBtB,GAC1D,MAAMiQ,EAAuB3O,EAAUW,OAAOF,OAAOG,MAAM,KAAK,GAChE,MAAMgO,EAAiBlQ,EAAUmQ,uBAAuBF,GAExD,MAAO,CACNvO,WAAYwO,IAAiB,wBAA0B,GACvDzO,uBAAwBgO,EAA+BS,IAAiB,oDAE1E,CAQA,MAAM/F,EAAe,SAAmB3K,EAAsCQ,GAA2B,IACxG,MAAMoF,UAAEA,GAAc1F,EAAYC,cAAcC,eAChD,MAAMmD,EAAWvD,EAAkBuD,UAAY,GAC/C,MAAMoJ,EAAqBpJ,EAASiN,QAAQ,MAAQ,EAAIjN,EAASb,MAAM,KAAK,GAAKa,EACjF,MAAM8H,EAAc7K,EAAUiI,UAAU,IAAI7C,KAAa+G,KACzD,IAAIrB,EAAqB/H,EAASiN,QAAQ,MAAQ,EAAIjN,GAAUb,MAAM,KAAK,GAAK,GAChF4I,EAAaA,EAAWkF,QAAQ,MAAQ,EAAIlF,EAAWsF,QAAQ,IAAK,IAAMtF,EAG1E,GAAID,GAAawF,QAAU,gBAAkBxF,GAAayF,QAAS,CAClE,MAAMC,EAAiBvQ,EAAUiI,UAAU,IAAM4C,GAAayF,SAC9D,MAAME,EAAuBpF,EAAyBmF,GACtD,OAAO9B,EAAuB+B,EAAqB,GAAIrE,EACxD,CAGA,MAAMsE,EAAqB7F,EAAsBC,EAAaC,GAAY,OAAA3K,QAAAC,QAAA,cAEtEqQ,GAAoBpR,QAAUoR,EAAmB,IAAIxF,YAAc,MAAQwF,EAAmB,IAAIxF,WAAW5L,OAAS,EAAC,QAAAc,QAAAC,QAC7GqO,EAAuBgC,EAAmB,GAAItE,EAAY,MAAK,EAHH,GAK3E,CAAC,MAAAzN,GAAA,OAAAyB,QAAAhB,OAAAT,EAAA,GAQD,SAAS2L,EAAc7K,EAAsCQ,GAC5D,MAAM+C,EAAWvD,EAAkBuD,UAAY,GAC/C,MAAMoJ,EAAapJ,EAASiN,QAAQ,MAAQ,EAAIjN,EAASb,MAAM,KAAK,GAAKa,EACzE,MAAM8H,EAAc7K,EAAUiI,UAAU,IAAMkE,IAAe,GAC7D,IAAIrB,EAAqB/H,EAASiN,QAAQ,MAAQ,EAAIjN,EAASb,MAAM,KAAK,GAAK,GAC/E4I,EAAaA,EAAWkF,QAAQ,MAAQ,EAAIlF,EAAWsF,QAAQ,IAAK,IAAMtF,EAG1E,GAAID,GAAawF,QAAU,gBAAkBxF,GAAayF,QAAS,CAClE,OAAOvN,GAAUb,MAAM,KAAK,EAC7B,CAEA,MAAMuO,EAAqB7F,EAAsBC,EAAaC,GAE9D,GAAI2F,GAAoBpR,OAAQ,CAC/B,OAAO8M,CACR,CAEA,OAAOA,CACR,CASA,SAAS7B,EAAsB9K,EAAsCQ,GACpE,MAAMoF,UAAEA,GAAc1F,EAAYC,cAAcC,eAChD,MAAMqQ,EAAuBzQ,EAAkBuD,SAC/C,MAAMmN,EAAiBlQ,EAAUmQ,uBAAuBF,GACxD,MAAMS,EAAiB5Q,IAAiBC,YAAY,wBACpD,MAAMyM,EAAgBxM,EAAUkI,kBAAkB9C,GAClD,MAAMgD,EAAapI,EAAUqI,mBAAmBmE,GAAepE,YAC/D,MAAMuI,EAAyBC,EAAgBxI,GAC/C,MAAMyI,EAAgC,CAAC,EACvC,MAAMtG,EAAgB,CACrBC,cAAe,CAAC,EAChBC,qBAAsB,IAGvByF,GAAgB5G,WAAWP,QAAQ,SAAU+H,GAC5CC,GAAkBD,EAAiB1I,EAAYpI,GAE/C,MAAMgR,EAAwBF,GAAiB7M,MAAQ,GACvD,MAAMgN,IAAUN,EAAeK,GAC/B,IAAIE,EAEJ,GAAIR,GAAgBS,eAAeH,GAAgB,CAClDE,EAAiBR,EAAeM,EACjC,MAAO,GAAIC,GAASP,GAAkBR,EAAe,kBAAmB,CAEvElT,EAAIoU,MAAM,yDAA2DJ,GACrE,MAAM,IAAIK,MAAM,yDAA2DL,EAC5E,CAEAzG,EAAcC,cAAcwG,GAAiBE,EAE7C,MAAMI,IAAST,EAAgBG,GAC/B,IAAKM,KAAUL,IAAUf,EAAe,oBAAsBY,EAAgBS,KAAKC,eAAiB,KAAM,CAEzGjH,EAAcE,qBAAqBxJ,KAAK6P,EACzC,CACD,GAEA,MAAO,CACNvG,cAAeA,EACf2F,eAAgBA,EAElB,CAOA,MAAMU,EAAkB,SAAUxI,GACjC,MAAMqJ,EAAkB,CAAC,EAEzBrJ,EAAW9B,IAAIoL,YAAY3I,QAAS4I,IACnC,GAAIA,EAAS1N,KAAM,CAClBwN,EAAQE,EAAS1N,MAAQ,IAC1B,IAGD,OAAOwN,CACR,EASA,MAAMV,GAAoB,SAAUzH,EAAoClB,EAAwBpI,GAC/F,GAAIoI,GAAckB,IAAcA,EAAU,wCAAyC,CAClF,MAAMqI,EAAW3R,EAAU4R,iBAAiBxJ,EAAYkB,EAAUrF,KAAM,OACxE,GAAI0N,GAAYA,EAAS,wCAAyC,CAEjErI,EAAU,wCAA0CqI,EAAS,uCAC9D,CACD,CACD,EAUA,SAASE,GAAgCC,EAA0BC,GAClE,MAAMC,EAA6B,GACnC,IAAIC,EAAwB,GAC3B3E,EAAkB,GAEnByE,EAAoBhJ,QAASmJ,IAC5B,MAAMC,EAAoBD,GAAoB/E,mBAAmBpL,OACjE,GAAIoQ,EAAmB,CACtBH,EAAY/Q,KAAKkR,GACjB7E,EACC4E,GAAoBzN,aAAe,+DAChC0N,EACA7E,EACJ2E,EACCC,GAAoBzN,aAAe,yDAChC0N,EACAF,CACL,IAGD,MAAM1M,EAAa,GAAGuM,aAA4BE,EAAYI,KAAK,OAEnE,MAAO,CACN7M,aACA0M,wBACA3E,kBAEF,CASO,MAAMvD,GAAiC,SAAmBT,GAAkC,IAClG,MAAMpE,EAAwB,CAC7BK,WAAY,GACZ3H,MAAO,GACPwH,UAAW,GACXS,MAAO,IAGR,IAAKyD,EAAW,CACf,OAAAnJ,QAAAC,QAAO8E,EACR,CAEA,MAAMmN,EAAsB/I,IAAY,4CACxC,MAAMyI,EAAsBM,GAAqBvF,WACjD,MAAMvL,EAAgB8Q,GAAqBC,gBAAgBvQ,OAAO,OAAA5B,QAAAC,QAAA,cAE9DmB,EAAa,CAChB,MAAM9B,cAAEA,GAAkBC,EAAYC,cAAcC,eACpD,MAAM2F,WAAEA,EAAU0M,sBAAEA,EAAqB3E,gBAAEA,GAAoBuE,GAC9D,GAAIpS,EAAcQ,YAAoBsS,eAAehR,IACrDwQ,GAGD,IAAIxE,EAAsB,WAE1B,GAAIjE,IAAY,8CAA+C,CAC9DiE,EAAsBjE,EAAU,+CAA+CG,YAAYvH,MAAM,KAAK,EACvG,CAEA,MAAMoM,EACL2D,GAAyB3E,EACtBF,EAAwB6E,EAAuB3E,EAAiBC,GAChE,KAAO0E,EAAwB,IAEnC,MAAMhE,EAAenO,IACrB,MAAM+E,EAAOoJ,EAAalO,YAAY,wBAAwB,OAAAI,QAAAC,QACxDkF,EAAgBT,EAAMU,EAAYhE,IAAcrD,KAAA,WACtD+P,EAAaO,YAAY,uBAAwB3J,GAEjD,MAAO,CACNO,UAAW7D,EACXgE,WAAYA,EACZ3H,MAAO0Q,EACPzI,MAAO,KAAOoM,EAAwB,IACrC,IA9B+D,GAgCnE,CAAC,MAAAvT,GAAA,OAAAyB,QAAAhB,OAAAT,EAAA,GAAC,IAAA8T,GAAA,CAAAC,WAAA,MAAAD,GAAAzO,kBAAAyO,GAAA9L,mBAAA8L,GAAAtL,oBAAAsL,GAAA3K,iBAAA2K,GAAAlT,0BAAAkT,GAAA9J,2BAAA8J,GAAA3J,mBAAA2J,GAAA1J,2BAAA0J,GAAApF,0BAAAoF,GAAAlN,kBAAAkN,GAAAzI,qCAAA,OAAAyI,EAAA","ignoreList":[],"sourceRoot":"helpers"}},{"offset":{"line":109,"column":0},"map":{"version":3,"file":"Formatter.js","names":["sap","ui","define","sap_ui_integration_formatters_DateTimeFormatter","___utils_CommonUtils","___I18nHelper","date","dateTime","checkForDateType","getYesAndNoTextValues","formatPropertyDropdownValues","property","value","type","yesText","noText","UTC","length","label","processProperties","properties","formatterOptions","forEach","selected","name","parseFloat","selectedKey","processParameters","parameters","formatterArguments","push","parameterValue","formatArguments","content","i","formatter","bindingOrFormatterArray","hasBindingOrFormatter","some","item","startsWith","concat","createFormatterExpression","formatterConfig","formatterName","mParameters","JSON","stringify","getDefaultPropertyFormatterConfig","i18nModel","dateFormatterConfig","isPropertyTypeDate","configData","getDateFormatterConfiguration","getDefaultPropertyFormatterConfigForNavProperties","navProperties","navProperty","propertyName","propertyType","displayName","getText","defaultValue","visible","__exports","__esModule"],"sources":["Formatter.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\ntype SupportedPropertyTypes = \"boolean\" | \"number\" | \"enum\" | \"string\" | \"object\";\nexport type SingleFormatterProperty = {\n\tname: string;\n\tdisplayName: string;\n\ttype: SupportedPropertyTypes;\n\tdefaultValue?: boolean | number | string;\n\tselected?: boolean;\n\tvalue?: string;\n\tselectedKey?: string;\n\tdefaultSelectedKey?: string;\n\tbIsProperty?: boolean;\n\toptions?: Array<{\n\t\tname: string;\n\t\tvalue: string;\n\t}>;\n};\n\nexport type SingleFormatterParameter = {\n\tname: string;\n\tdisplayName: string;\n\ttype: SupportedPropertyTypes;\n\tdefaultValue?: string;\n\tvalue?: string;\n\tselectedKey?: string;\n\tselected?: boolean;\n\tproperties?: Array<SingleFormatterProperty>;\n\tdefaultSelectedKey?: string;\n\toptions?: Array<{\n\t\tname: string;\n\t\tvalue: string;\n\t}>;\n};\n\nexport type FormatterConfiguration = {\n\tproperty?: string;\n\tformatterName: string;\n\tdisplayName: string;\n\tparameters?: Array<SingleFormatterParameter>;\n\ttype: string;\n\tvisible: boolean;\n};\n\nexport type FormatterConfigurationMap = Array<FormatterConfiguration>;\n\nexport type FormatterOption = string | boolean | number;\nexport type FormatterOptions = Record<string, FormatterOption>;\n\nimport ResourceBundle from \"sap/base/i18n/ResourceBundle\";\nimport { date, dateTime } from \"sap/ui/integration/formatters/DateTimeFormatter\";\nimport type { PropertyInfo, PropertyInfoMap } from \"../odata/ODataTypes\";\nimport { checkForDateType } from \"../utils/CommonUtils\";\nimport { getYesAndNoTextValues } from \"./I18nHelper\";\n\n/**\n * Processes the formatter properties and adds them to the formatter options object.\n *\n * @param {SingleFormatterProperty[]} properties - The array of properties to process.\n * @param {FormatterOptions} formatterOptions - The object to which the processed property values will be added.\n */\n\nexport const formatPropertyDropdownValues = function (property: PropertyInfo, value: string) {\n\tconst type = property.type;\n\tconst { yesText, noText } = getYesAndNoTextValues();\n\tswitch (type) {\n\t\tcase \"Edm.Boolean\":\n\t\t\tvalue = value ? yesText : noText;\n\t\t\tbreak;\n\t\tcase \"Edm.Date\":\n\t\tcase \"Edm.DateTime\":\n\t\t\tvalue = date(value, { UTC: true });\n\t\t\tbreak;\n\t\tcase \"Edm.DateTimeOffset\":\n\t\t\tvalue = dateTime(value, { UTC: true });\n\t\t\tbreak;\n\t\tcase \"Edm.DateTimeInterval\":\n\t\tcase \"Edm.Time\":\n\t\t\tbreak;\n\t\tcase \"Edm.String\":\n\t\t\tif (value?.length === 0) {\n\t\t\t\tvalue = \"<empty>\";\n\t\t\t}\n\t\t\tbreak;\n\t\tcase \"Edm.Integer\":\n\t\tcase \"Edm.Float\":\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t}\n\treturn `${property.label} (${value})`;\n};\n\n/**\n * Processes the formatter properties and adds them to the formatter options object.\n *\n * @param {SingleFormatterProperty[]} properties - The array of properties to process.\n * @param {FormatterOptions} formatterOptions - The object to which the processed property values will be added.\n */\nexport function processProperties(properties: SingleFormatterProperty[], formatterOptions: FormatterOptions) {\n\tproperties.forEach(function (property) {\n\t\tswitch (property.type) {\n\t\t\tcase \"boolean\":\n\t\t\t\tif (!property.selected) {\n\t\t\t\t\tproperty.selected = false;\n\t\t\t\t}\n\t\t\t\tformatterOptions[property.name] = property.selected;\n\t\t\t\tbreak;\n\t\t\tcase \"number\":\n\t\t\t\tif (typeof property.value === \"number\") {\n\t\t\t\t\tformatterOptions[property.name] = parseFloat(property.value);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"enum\":\n\t\t\t\tif (property.selectedKey) {\n\t\t\t\t\tformatterOptions[property.name] = property.selectedKey;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tformatterOptions[property.name] = property.value ?? \"\";\n\t\t\t\tbreak;\n\t\t}\n\t});\n}\n\n/**\n * Processes the formatter parameters and adds them to the formatter arguments array.\n *\n * @param {SingleFormatterParameter} parameters - The parameter object to process.\n * @param {FormatterOption[]} formatterArguments - The array to which the processed parameter values will be added.\n */\nexport function processParameters(parameters: SingleFormatterParameter, formatterArguments: FormatterOption[]) {\n\tswitch (parameters.type) {\n\t\tcase \"boolean\":\n\t\t\tif (!parameters.selected) {\n\t\t\t\tparameters.selected = false;\n\t\t\t}\n\t\t\tformatterArguments.push(parameters.selected);\n\t\t\tbreak;\n\t\tcase \"number\":\n\t\t\tconst parameterValue = parameters.value;\n\t\t\tif (parameterValue) {\n\t\t\t\tformatterArguments.push(parseFloat(parameterValue));\n\t\t\t}\n\t\t\tbreak;\n\t\tcase \"enum\":\n\t\t\tformatterArguments.push(parameters.selectedKey as string);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tformatterArguments.push(parameters.value as string);\n\t\t\tbreak;\n\t}\n}\n\n/**\n * Formats the formatter arguments into a string suitable for a formatter expression.\n *\n *\n * @param {FormatterOption[]} formatterArguments - The array of formatter arguments to format.\n * @returns {string} The formatted arguments as a single string.\n */\nfunction formatArguments(formatterArguments: FormatterOption[]): string {\n\tlet content = formatterArguments[0] as string;\n\n\tfor (let i = 1; i < formatterArguments.length; i++) {\n\t\tconst formatter = formatterArguments[i];\n\t\tconst bindingOrFormatterArray = [\"{\", \"[\", \"$\"];\n\t\tconst hasBindingOrFormatter = bindingOrFormatterArray.some((item) => (formatter as string).startsWith(item));\n\t\tif (typeof formatter === \"string\" && !hasBindingOrFormatter) {\n\t\t\tcontent = content.concat(\", '\" + formatter + \"' \");\n\t\t} else {\n\t\t\tcontent = content.concat(\", \" + formatter);\n\t\t}\n\t}\n\n\treturn content;\n}\n\n/**\n * Creates a formatter expression based on the provided formatter configuration by processing the properties and parameters.\n *\n *\n * @param {FormatterConfiguration} formatterConfig - The configuration object for the formatter.\n * @returns {string} The generated formatter expression.\n */\nexport const createFormatterExpression = function (formatterConfig: FormatterConfiguration): string {\n\tconst formatterArguments: FormatterOption[] = [];\n\tformatterArguments.push(\"${\" + formatterConfig.property + \"}\");\n\tlet content = formatterConfig.formatterName + \"(\"; // dont close brackets here\n\n\tconst formatterOptions: FormatterOptions = {};\n\tformatterConfig.parameters?.forEach(function (mParameters) {\n\t\tconst properties = mParameters.properties;\n\t\tif (properties && properties.length > 0) {\n\t\t\tprocessProperties(properties, formatterOptions);\n\t\t\tif (JSON.stringify(formatterOptions) !== \"{}\") {\n\t\t\t\tformatterArguments.push(JSON.stringify(formatterOptions));\n\t\t\t}\n\t\t} else {\n\t\t\tprocessParameters(mParameters, formatterArguments);\n\t\t}\n\t});\n\tcontent = content.concat(formatArguments(formatterArguments));\n\treturn content + \")\";\n};\n\n/**\n * Generates the default property formatter configuration for date properties.\n *\n * @param {ResourceBundle} i18nModel - The internationalization model used for localization.\n * @param {PropertyInfoMap} properties - The map of property information.\n * @returns {FormatterConfigurationMap} - The configuration map for date formatters.\n */\nexport const getDefaultPropertyFormatterConfig = function (\n\ti18nModel: ResourceBundle,\n\tproperties: PropertyInfoMap\n): FormatterConfigurationMap {\n\tconst dateFormatterConfig: FormatterConfigurationMap = [];\n\tfor (const property of properties) {\n\t\tconst isPropertyTypeDate = checkForDateType(property.type);\n\t\tif (property.name && isPropertyTypeDate) {\n\t\t\tconst configData = getDateFormatterConfiguration(property.name, property.type, i18nModel) as FormatterConfiguration;\n\t\t\tdateFormatterConfig.push(configData);\n\t\t}\n\t}\n\treturn dateFormatterConfig;\n};\n\n/**\n * Generates the default property formatter configuration for navigation properties.\n *\n * @param {ResourceBundle} i18nModel - The internationalization model used for localization.\n * @param {PropertyInfoMap} navProperties - The map of navigation properties.\n * @returns {FormatterConfigurationMap} The formatter configuration map for date properties.\n */\nexport const getDefaultPropertyFormatterConfigForNavProperties = function (\n\ti18nModel: ResourceBundle,\n\tnavProperties: PropertyInfoMap\n): FormatterConfigurationMap {\n\tconst dateFormatterConfig: FormatterConfigurationMap = [];\n\tfor (const navProperty of navProperties) {\n\t\tconst properties = (navProperty.properties as PropertyInfoMap) || [];\n\t\tfor (const property of properties) {\n\t\t\tconst propertyName = navProperty.name + \"/\" + property.name;\n\t\t\tconst isPropertyTypeDate = checkForDateType(property.type);\n\t\t\tif (propertyName && isPropertyTypeDate) {\n\t\t\t\tconst configData = getDateFormatterConfiguration(propertyName, property.type, i18nModel) as FormatterConfiguration;\n\t\t\t\tdateFormatterConfig.push(configData);\n\t\t\t}\n\t\t}\n\t}\n\treturn dateFormatterConfig;\n};\n\n/**\n * Generates configuration data for a given property based on its type.\n *\n * @param {string} propertyName - The name of the property.\n * @param {string} propertyType - The type of the property (e.g., \"Edm.DateTimeOffset\", \"Edm.DateTime\", \"Edm.Date\").\n * @param {ResourceBundle} i18nModel - The internationalization model used to get localized text.\n * @returns {FormatterConfiguration} The configuration data for the specified property.\n */\nfunction getDateFormatterConfiguration(propertyName: string, propertyType: string, i18nModel: ResourceBundle) {\n\tif (propertyType === \"Edm.DateTimeOffset\") {\n\t\tconst configData: FormatterConfiguration = {\n\t\t\tproperty: propertyName,\n\t\t\tformatterName: \"format.dateTime\",\n\t\t\tdisplayName: i18nModel.getText(\"FORMAT_DATETIME\") ?? \"\",\n\t\t\tparameters: [\n\t\t\t\t{\n\t\t\t\t\tname: \"options\",\n\t\t\t\t\tdisplayName: \"Options\",\n\t\t\t\t\ttype: \"object\",\n\t\t\t\t\tdefaultValue: \"\",\n\t\t\t\t\tproperties: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"relative\",\n\t\t\t\t\t\t\tdisplayName: i18nModel.getText(\"RELATIVE\") ?? \"\",\n\t\t\t\t\t\t\ttype: \"boolean\",\n\t\t\t\t\t\t\tdefaultValue: false\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"UTC\",\n\t\t\t\t\t\t\tdisplayName: i18nModel.getText(\"UTC\") ?? \"\",\n\t\t\t\t\t\t\ttype: \"boolean\",\n\t\t\t\t\t\t\tdefaultValue: false,\n\t\t\t\t\t\t\tselected: true\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t],\n\t\t\ttype: \"Date\",\n\t\t\tvisible: true\n\t\t};\n\t\treturn configData;\n\t} else if (propertyType === \"Edm.DateTime\" || propertyType === \"Edm.Date\") {\n\t\tconst configData: FormatterConfiguration = {\n\t\t\tproperty: propertyName,\n\t\t\tformatterName: \"format.date\",\n\t\t\tdisplayName: i18nModel.getText(\"FORMAT_DATE\") ?? \"\",\n\t\t\tparameters: [\n\t\t\t\t{\n\t\t\t\t\tname: \"options\",\n\t\t\t\t\tdisplayName: \"Options\",\n\t\t\t\t\ttype: \"object\",\n\t\t\t\t\tdefaultValue: \"\",\n\t\t\t\t\tproperties: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"UTC\",\n\t\t\t\t\t\t\tdisplayName: i18nModel.getText(\"UTC\") ?? \"\",\n\t\t\t\t\t\t\ttype: \"boolean\",\n\t\t\t\t\t\t\tdefaultValue: false,\n\t\t\t\t\t\t\tselected: true\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t],\n\t\t\ttype: \"Date\",\n\t\t\tvisible: true\n\t\t};\n\t\treturn configData;\n\t}\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":"helpers"}},{"offset":{"line":116,"column":0},"map":{"version":3,"file":"I18nHelper.js","names":["sap","ui","define","Log","CoreLib","ResourceModel","jQuery","___utils_CommonUtils","hasBooleanBindingExpression","i18nMap","i18nPayload","I18nClassificationsMap","Title","Label","Button","hasBinding","propertyValue","startsWith","isJSONData","value","JSON","parse","Error","getPropertyValue","partialManifest","key","updatedKey","replaceAll","seti18nValueToMap","text","trim","length","inserti18nKeysManifest","integrationCardManifest","i18nKey","split","reduce","number","textClassification","keyType","comment","inserti18nPayLoad","type","description","groupPath","payload","push","writei18nPayload","ajax","url","headers","data","stringify","success","info","error","reseti18nProperties","createi18nKeysForActionParameters","index","actionPath","adaptiveCardAction","adaptiveCardActionParameters","actionParameters","forEach","actionParameter","idx","actionParameterLabel","label","actionParameterErrorMsg","errorMessage","actionParameterPlaceholder","placeholder","i18nKeyActionParamLabel","actionParameterDescription","actionParameterLabelPath","i18nKeyActionParamErrorMsg","actionParameterErrorMsgDescription","actionParameterErrorMsgPath","i18nKeyActionParamPlaceholder","actionParameterPlaceholderDescription","actionParameterPlaceholderPath","createI18nKeysForCardActions","cardManifest","actionsStrip","footer","actionPathPrefix","action","actions","parameters","replace","configuration","_adaptiveFooterActionParameters","adaptiveCardActionDescription","i18nKeyCardAction","AdaptiveCardActionTextpath","i18nKeyOkButton","okButtonDescription","okButtonPath","triggerActionText","createKeysFromManifestData","manifestHeader","header","manifestGroup","content","groups","manifestHeaderKeys","Object","keys","propertyType","propertyTypes","includes","property","toUpperCase","slice","i18nPayloadHasYesAndNoText","some","createKeysForYesOrNoText","items","configurationItem","createKeysFromGroup","title","path","groupLabelPath","itemIndex","groupIndex","groupType","itemsPath","valueYes","valueNo","descriptionYes","descriptionNo","updateManifestAppProperties","manifest","app","headerInfo","subTitle","UOMExists","unitOfMeasurement","resolveI18nTextFromResourceModel","resourceModel","endsWith","getObject","getYesAndNoTextValues","resourceBundle","getResourceBundleFor","i18nModel","bundleUrl","oUrlInfo","bundle","yesText","noText","createAndStoreGeneratedi18nKeys","__exports","__esModule"],"sources":["I18nHelper.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nimport Log from \"sap/base/Log\";\nimport CoreLib from \"sap/ui/core/Lib\";\nimport { AdaptiveCardAction, CardManifest, Group, GroupItems, ObjectContent } from \"sap/ui/integration/widgets/Card\";\nimport ResourceModel from \"sap/ui/model/resource/ResourceModel\";\nimport jQuery from \"sap/ui/thirdparty/jquery\";\nimport { hasBooleanBindingExpression } from \"../utils/CommonUtils\";\n\ntype I18nObject = {\n\t[key: string]: string;\n};\n\ntype I18nClassifications = {\n\t[key: string]: string;\n};\n\ntype I18nProperty = {\n\tcomment: string;\n\tkey: string;\n\tvalue: string;\n};\n\ntype ManifestPartial = {\n\t[key: string]: ManifestPartial | string | number | boolean | undefined;\n};\n\ntype YesAndNoText = {\n\tyesText: string;\n\tnoText: string;\n};\n\nlet i18nMap: I18nObject = {};\nlet i18nPayload: Array<I18nProperty> = [];\n\nconst I18nClassificationsMap: I18nClassifications = {\n\tTitle: \"XTIT:\",\n\tLabel: \"XFLD:\",\n\tButton: \"XBUT:\",\n\t\"Group header\": \"XGRP:\"\n};\n\n/**\n * This function checks if the property value has a binding\n *\n * @param {string} propertyValue\n * @returns {boolean}\n */\nfunction hasBinding(propertyValue: string) {\n\treturn propertyValue && propertyValue.startsWith(\"{\");\n}\n\n/**\n * Function to check if the given data is of type JSON or not\n *\n * @param value\n * @returns\n */\nfunction isJSONData(value: string) {\n\ttry {\n\t\treturn JSON.parse(value) ? true : false;\n\t} catch (Error) {\n\t\treturn false;\n\t}\n}\n\n/**\n * This function gets the property value from the card manifest/sub-manifest\n * - In case if the property value is an object then return the object\n * - In case if the property value is not an object then return the object and key\n * - Added handling for keys with multiple dots should be passsed as \"parameters.[com/sap/property].name\"\n *\n * @param {object} obj The  object\n * @param {string} key\n * @returns {object}\n */\nfunction getPropertyValue(partialManifest: ManifestPartial, key: string) {\n\tif (isJSONData(key)) {\n\t\tconst updatedKey = JSON.parse(key.replaceAll(/\\//g, \".\"))?.[0];\n\t\tkey = updatedKey ? updatedKey : key;\n\t}\n\n\tif (key && typeof partialManifest[key] === \"object\" && key != \"mainIndicator\") {\n\t\treturn partialManifest[key];\n\t}\n\n\treturn {\n\t\tpartialManifest,\n\t\tkey\n\t};\n}\n\n/**\n * This function sets i18n values to a map\n *  - In case if it is a new key create a key in map.\n *  - In case if it is an existsinig one update it.\n *\n * @param {string} key\n * @param {string} value\n * @param {string} text\n */\nfunction seti18nValueToMap(key: string, value: string, text?: string) {\n\tif (!text?.trim().length) {\n\t\tdelete i18nMap[key];\n\t\treturn;\n\t}\n\ti18nMap[key] = \"{{CardGenerator\" + value + \"}}\";\n}\n\n/**\n * This function updates i18n keys to card manifest\n *\n * @param {object} integrationCardManifest The manifest object\n */\nfunction inserti18nKeysManifest(integrationCardManifest: CardManifest) {\n\tfor (const i18nKey in i18nMap) {\n\t\tconst { partialManifest, key } = i18nKey.split(\".\").reduce(getPropertyValue, integrationCardManifest[\"sap.card\"]);\n\n\t\tif (partialManifest[key]?.number && i18nMap[i18nKey]) {\n\t\t\tpartialManifest[key].number = i18nMap[i18nKey];\n\t\t} else if (partialManifest?.[key]?.trim().length > 0) {\n\t\t\tpartialManifest[key] = i18nMap[i18nKey];\n\t\t}\n\t}\n}\n\n/**\n * Gets the text classification for given i18n key and value\n *\n * @param {string} keyType Type of key\n * @param {string} comment The comments which needs to be added\n * @returns {string} The text classification string\n */\nfunction textClassification(keyType: string, comment: string): string {\n\tconst key = I18nClassificationsMap[keyType] || \"\";\n\treturn key + \" \" + comment;\n}\n\n/**\n * This function sets i18n payload to an array\n *\n * @param {string} text\n * @param {string} key\n * @param {string} type\n * @param {string} description\n * @param {string} groupPath\n */\nfunction inserti18nPayLoad(text: string, key: string, type: string, description: string, groupPath?: string) {\n\tif (text.trim().length === 0) {\n\t\treturn;\n\t}\n\tconst payload: I18nProperty = {\n\t\tcomment: textClassification(type, description),\n\t\tkey: \"CardGenerator\" + (groupPath ? key + groupPath : key),\n\t\tvalue: text\n\t};\n\ti18nPayload.push(payload);\n}\n\n/**\n * This function will create an ajax call to save i18n payload\n */\nfunction writei18nPayload() {\n\tif (i18nPayload.length === 0) {\n\t\treturn;\n\t}\n\n\tjQuery.ajax({\n\t\ttype: \"POST\",\n\t\turl: \"/editor/i18n\",\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\"\n\t\t},\n\t\tdata: JSON.stringify(i18nPayload),\n\t\tsuccess: function () {\n\t\t\tLog.info(\"i18n was successfully saved.\");\n\t\t},\n\t\terror: function () {\n\t\t\tLog.error(\"i18n could not be saved.\");\n\t\t}\n\t});\n}\n\n/**\n * This function resets i18nPayload and i18nMap\n *\n */\nfunction reseti18nProperties() {\n\ti18nPayload = [];\n\ti18nMap = {};\n}\n\n/**\n *\n * Creates i18n keys for the action parameters of an adaptive card action.\n *\n * For each action parameter the label value will be different so i18n key will be created for each action parameter label.\n *\n * @param {number} index - The index of the current action in the adaptive card actions array.\n * @param {string} actionPath - The path to the current action in the configuration parameters.\n * @param {AdaptiveCardAction} [adaptiveCardAction] - The adaptive card action object containing action parameters.\n */\nfunction createi18nKeysForActionParameters(index: number, actionPath: string, adaptiveCardAction?: AdaptiveCardAction) {\n\tconst adaptiveCardActionParameters = adaptiveCardAction?.actionParameters;\n\n\tif (adaptiveCardActionParameters?.length) {\n\t\tadaptiveCardActionParameters.forEach((actionParameter, idx) => {\n\t\t\tconst actionParameterLabel = actionParameter?.label;\n\t\t\tconst actionParameterErrorMsg = actionParameter?.errorMessage;\n\t\t\tconst actionParameterPlaceholder = actionParameter?.placeholder;\n\n\t\t\tif (actionParameterLabel) {\n\t\t\t\tconst i18nKeyActionParamLabel = `_AdaptiveCardAction_${index}_ActionParameterLabel_${idx}`;\n\t\t\t\tconst actionParameterDescription = `Label for Action Parameter ${actionParameterLabel} - Created by Card Generator`;\n\t\t\t\tconst actionParameterLabelPath = `configuration.parameters._adaptiveFooterActionParameters.[\"${actionPath}\"].actionParameters.${idx}.label`;\n\t\t\t\tseti18nValueToMap(actionParameterLabelPath, i18nKeyActionParamLabel, actionParameterLabel);\n\t\t\t\tinserti18nPayLoad(actionParameterLabel, i18nKeyActionParamLabel, \"Label\", actionParameterDescription);\n\t\t\t}\n\n\t\t\tif (actionParameterErrorMsg) {\n\t\t\t\tconst i18nKeyActionParamErrorMsg = `_AdaptiveCardAction_${index}_ActionParameterErrorMsg_${idx}`;\n\t\t\t\tconst actionParameterErrorMsgDescription = `Error message for Action Parameter ${actionParameterLabel} - Created by Card Generator`;\n\t\t\t\tconst actionParameterErrorMsgPath = `configuration.parameters._adaptiveFooterActionParameters.[\"${actionPath}\"].actionParameters.${idx}.errorMessage`;\n\t\t\t\tseti18nValueToMap(actionParameterErrorMsgPath, i18nKeyActionParamErrorMsg, actionParameterErrorMsg);\n\t\t\t\tinserti18nPayLoad(actionParameterErrorMsg, i18nKeyActionParamErrorMsg, \"Label\", actionParameterErrorMsgDescription);\n\t\t\t}\n\n\t\t\tif (actionParameterPlaceholder) {\n\t\t\t\tconst i18nKeyActionParamPlaceholder = `_AdaptiveCardAction_${index}_ActionParameterPlaceholder_${idx}`;\n\t\t\t\tconst actionParameterPlaceholderDescription = `Placeholder for Action Parameter ${actionParameterLabel} - Created by Card Generator`;\n\t\t\t\tconst actionParameterPlaceholderPath = `configuration.parameters._adaptiveFooterActionParameters.[\"${actionPath}\"].actionParameters.${idx}.placeholder`;\n\t\t\t\tseti18nValueToMap(actionParameterPlaceholderPath, i18nKeyActionParamPlaceholder, actionParameterPlaceholder);\n\t\t\t\tinserti18nPayLoad(\n\t\t\t\t\tactionParameterPlaceholder,\n\t\t\t\t\ti18nKeyActionParamPlaceholder,\n\t\t\t\t\t\"Label\",\n\t\t\t\t\tactionParameterPlaceholderDescription\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\t}\n}\n\n/**\n *\n * Creates i18n keys for card actions based on the card manifest.\n *\n * Takes care of creating i18n key for the action label and the OK button text which will be used when action type is Submit.\n * The action text for Integration card is also replaced with same i18n key that is created for the adaptive card action.\n *\n * @param {CardManifest} cardManifest - The card manifest.\n */\nfunction createI18nKeysForCardActions(cardManifest: CardManifest) {\n\tconst actionsStrip = cardManifest[\"sap.card\"]?.footer?.actionsStrip;\n\tconst actionPathPrefix = \"{{parameters.footerActionParameters.\";\n\n\tactionsStrip?.forEach((action, index) => {\n\t\tlet actionPath = action?.actions[0]?.parameters?.replace(actionPathPrefix, \"\").replace(\"}}\", \"\") ?? \"\";\n\t\tconst adaptiveCardAction = cardManifest[\"sap.card\"]?.configuration?.parameters?._adaptiveFooterActionParameters?.[actionPath];\n\n\t\tif (adaptiveCardAction?.label) {\n\t\t\tactionPath = actionPath.replaceAll(/\\./g, \"/\");\n\t\t\tconst adaptiveCardActionDescription = `Label for Action ${adaptiveCardAction?.label} - Created by Card Generator`;\n\t\t\tconst i18nKeyCardAction = `_AdaptiveCardActions_${index}_Label`;\n\t\t\tconst AdaptiveCardActionTextpath = `configuration.parameters._adaptiveFooterActionParameters.[\"${actionPath}\"].label`;\n\t\t\taction.text = \"{{CardGenerator\" + i18nKeyCardAction + \"}}\";\n\n\t\t\tseti18nValueToMap(AdaptiveCardActionTextpath, i18nKeyCardAction, adaptiveCardAction?.label);\n\t\t\tinserti18nPayLoad(adaptiveCardAction?.label, i18nKeyCardAction, \"Label\", adaptiveCardActionDescription);\n\n\t\t\tconst i18nKeyOkButton = \"_AdaptiveCardActions_OkButton\";\n\t\t\tconst okButtonDescription = \"Label for OK Button - Created by Card Generator\";\n\t\t\tconst okButtonPath = `configuration.parameters._adaptiveFooterActionParameters.[\"${actionPath}\"].triggerActionText`;\n\t\t\tseti18nValueToMap(okButtonPath, i18nKeyOkButton, adaptiveCardAction?.triggerActionText);\n\n\t\t\tif (index === 0) {\n\t\t\t\tinserti18nPayLoad(adaptiveCardAction?.triggerActionText, i18nKeyOkButton, \"Button\", okButtonDescription);\n\t\t\t}\n\t\t}\n\n\t\tcreatei18nKeysForActionParameters(index, actionPath, adaptiveCardAction);\n\t});\n}\n\n/**\n * This function creates i18n keys from modal data\n *  - In case if text does not start with \"{\" create a key and set key and value to i18n map, also upload the i18n payload to the array.\n *  - In case if it is already a key then no need to create a new key.\n *\n * @param {CardManifest} cardManifest\n */\nfunction createKeysFromManifestData(cardManifest: CardManifest) {\n\tconst manifestHeader = cardManifest[\"sap.card\"].header;\n\tconst manifestGroup = (cardManifest[\"sap.card\"].content as ObjectContent).groups;\n\tconst manifestHeaderKeys = Object.keys(manifestHeader) as Array<keyof typeof manifestHeader>;\n\tmanifestHeaderKeys.forEach((propertyType) => {\n\t\tconst propertyTypes = [\"title\", \"subTitle\", \"unitOfMeasurement\", \"mainIndicator\"];\n\t\tif (propertyTypes.includes(propertyType)) {\n\t\t\tconst property = propertyType === \"mainIndicator\" ? manifestHeader[propertyType]?.number : manifestHeader[propertyType];\n\n\t\t\tif (!hasBinding(property)) {\n\t\t\t\tconst key = `header.${propertyType}`;\n\t\t\t\tconst value = `Header${propertyType[0].toUpperCase() + propertyType.slice(1)}`;\n\t\t\t\tconst description = `${value} for ${property} - Created by Card Generator`;\n\n\t\t\t\tseti18nValueToMap(key, value, property);\n\t\t\t\tinserti18nPayLoad(property, value, \"Title\", description);\n\t\t\t}\n\t\t\tconst i18nPayloadHasYesAndNoText = i18nPayload.some(({ value }) => value === \"Yes\");\n\t\t\tif (hasBooleanBindingExpression(property) && !i18nPayloadHasYesAndNoText) {\n\t\t\t\tcreateKeysForYesOrNoText();\n\t\t\t}\n\t\t}\n\t});\n\n\tmanifestGroup.forEach((configuration: Group, index: number) => {\n\t\tconfiguration.items.forEach((configurationItem: GroupItems, idx: number) => {\n\t\t\tcreateKeysFromGroup(configurationItem.label, idx, index, \"label\");\n\n\t\t\tif (!hasBinding(configurationItem.value)) {\n\t\t\t\tcreateKeysFromGroup(configurationItem.value, idx, index, \"value\");\n\t\t\t}\n\t\t\tconst i18nPayloadHasYesAndNoText = i18nPayload.some(({ value }) => value === \"Yes\");\n\t\t\tif (hasBooleanBindingExpression(configurationItem.value) && !i18nPayloadHasYesAndNoText) {\n\t\t\t\tcreateKeysForYesOrNoText();\n\t\t\t}\n\t\t});\n\t\tconst key = \"GroupHeader\";\n\t\tconst description = `${key} for ${configuration.title} - Created by Card Generator`;\n\t\tconst path = `_Groups_${index}`;\n\t\tconst groupLabelPath = `content.groups.${index}.title`;\n\n\t\tseti18nValueToMap(groupLabelPath, key + path, configuration.title);\n\t\tinserti18nPayLoad(configuration.title, key, \"Group header\", description, path);\n\t});\n\n\tcreateI18nKeysForCardActions(cardManifest);\n}\n\n/**\n * This function creates i18n keys from manifest group data\n *  - In case if text does not start with \"{\" create a key and set key and value to i18n map, also upload the i18n payload to the array.\n *  - In case if it is already a key then no need to create a new key.\n *\n * @param {string} configurationItem\n * @param {number} itemIndex\n * @param {number} groupIndex\n * @param {string} type\n */\nfunction createKeysFromGroup(configurationItem: string, itemIndex: number, groupIndex: number, type: string) {\n\tconst groupType = \"Label\";\n\tconst key = `GroupProperty${groupType}`;\n\tconst description = `${key} for ${configurationItem} - Created by Card Generator`;\n\tconst path = `_Groups_${groupIndex}_Items_${itemIndex}`;\n\tconst itemsPath = `content.groups.${groupIndex}.items.${itemIndex}.${type}`;\n\n\tseti18nValueToMap(itemsPath, key + path, configurationItem);\n\tinserti18nPayLoad(configurationItem, key, groupType, description, path);\n}\n\n/**\n * Creates i18n keys and payloads for \"Yes\" and \"No\" text values.\n *\n * The function ensures that these keys and labels are properly added to the\n * i18n map and payload for further use in the application.\n */\nfunction createKeysForYesOrNoText() {\n\tconst valueYes = \"Value_Yes\";\n\tconst valueNo = \"Value_No\";\n\tconst descriptionYes = \"Text for boolean property true - Created by Card Generator\";\n\tconst descriptionNo = \"Text for boolean property false - Created by Card Generator\";\n\n\tseti18nValueToMap(\"yes\", valueYes, \"Yes\");\n\tinserti18nPayLoad(\"Yes\", valueYes, \"Label\", descriptionYes);\n\n\tseti18nValueToMap(\"no\", valueNo, \"No\");\n\tinserti18nPayLoad(\"No\", valueNo, \"Label\", descriptionNo);\n}\n\nfunction updateManifestAppProperties(manifest: CardManifest) {\n\tconst app = manifest[\"sap.app\"];\n\tconst headerInfo = manifest[\"sap.card\"].header;\n\n\tif (app.title !== headerInfo.title && headerInfo.title?.startsWith(\"{{\")) {\n\t\tapp.title = headerInfo.title;\n\t}\n\tif (app.subTitle !== headerInfo.subTitle && headerInfo.subTitle?.startsWith(\"{{\")) {\n\t\tconst UOMExists: boolean = headerInfo.unitOfMeasurement ? true : false;\n\t\tapp.subTitle = UOMExists ? headerInfo.subTitle + \" | \" + headerInfo.unitOfMeasurement : headerInfo.subTitle;\n\t}\n}\n\n/**\n * This function resolves i18n text from resource model\n * - In case if key exists in resource model then return the object from resource model\n * - In case if key does not exist in resource model then return the key\n * @param key\n */\nexport function resolveI18nTextFromResourceModel(key: string, resourceModel: ResourceModel) {\n\tif (key.startsWith(\"{{\") && key.endsWith(\"}}\")) {\n\t\treturn resourceModel.getObject(key.replace(\"{{\", \"\").replace(\"}}\", \"\"));\n\t}\n\n\treturn key;\n}\n\n/**\n * Retrieves the localized text values for \"Yes\" and \"No\" from the resource bundle.\n *\n * @returns {YesAndNoText} An object containing the localized text values:\n * - `yes`: The localized text for \"Yes\".\n * - `no`: The localized text for \"No\".\n */\nexport function getYesAndNoTextValues(): YesAndNoText {\n\tconst resourceBundle = CoreLib.getResourceBundleFor(\"sap.cards.ap.generator.i18n\");\n\tconst i18nModel = new ResourceModel({\n\t\tbundleUrl: resourceBundle.oUrlInfo.url,\n\t\tbundle: resourceBundle\n\t});\n\tconst yesText = i18nModel.getObject(\"VALUE_YES\");\n\tconst noText = i18nModel.getObject(\"VALUE_NO\");\n\treturn {\n\t\tyesText: yesText as string,\n\t\tnoText: noText as string\n\t};\n}\n\n/**\n * This function creates i18n keys from card manifest data and stores it in i18n map and i18n payload\n * - Further it will update manifest with i18n keys\n * - and create an ajax call to save i18n payload\n * @param cardManifest\n */\nexport function createAndStoreGeneratedi18nKeys(cardManifest: CardManifest) {\n\tcreateKeysFromManifestData(cardManifest);\n\tinserti18nKeysManifest(cardManifest);\n\tupdateManifestAppProperties(cardManifest);\n\twritei18nPayload();\n\treseti18nProperties();\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":"helpers"}},{"offset":{"line":123,"column":0},"map":{"version":3,"file":"IntegrationCardHelper.js","names":["sap","ui","define","sap_cards_ap_common_odata_ODataUtils","sap_cards_ap_generator_helpers_NavigationProperty","sap_cards_ap_generator_odata_v2_MetadataAnalyzer","sap_cards_ap_generator_odata_v4_MetadataAnalyzer","VersionInfo","CoreElement","V2OdataUtils","V4ODataUtils","___odata_ODataUtils","___pages_Application","___types_CommonTypes","___utils_CommonUtils","___Batch","___I18nHelper","___PropertyExpression","_iteratorSymbol","Symbol","iterator","_settle","pact","state","value","s","_Pact","v","o","bind","then","observer","prototype","onFulfilled","onRejected","result","this","callback","e","_this","_isSettledPact","thenable","_forTo","array","body","check","i","reject","_cycle","length","enhanceManifestWithInsights","mCardManifest","rootComponent","Promise","resolve","sapAppId","getManifestEntry","id","load","library","_VersionInfo$load","sapCoreVersionInfo","templateName","parentAppId","cardType","versions","ui5","version","buildTimestamp","_forOf","target","step","next","done","return","_fixup","TypeError","values","push","handleSingleProperty","_catch","recover","isSingleKeyWithoutAssignment","getNavigationPropertiesWithLabel","getPropertyReference","getPropertyReferenceKey","getDataType","isODataV4Model","Application","ODataModelVersion","ColorIndicator","extractValueWithoutBooleanExprBinding","getColorForGroup","hasBooleanBindingExpression","updateManifestWithExpandQueryParams","updateManifestWithSelectQueryParams","getYesAndNoTextValues","resolveI18nTextFromResourceModel","extractPathExpressionWithoutUOM","extractPathWithoutUOM","extractPropertyConfigurationWithoutTextArrangement","getTextArrangementFromCardManifest","hasFormatter","isExpression","isI18nExpression","updateAndGetSelectedFormatters","manifest","formatterConfigurationFromCardManifest","createInitialManifest","props","title","subTitle","description","service","serviceModel","entitySetName","entitySetWithObjectContext","data","bODataV4","formatDataForV2","dataPath","dataPathHeader","propertyReferenceKeys","entityKeyPropertiesParameters","yesText","noText","forEach","keyProp","type","name","entityKeyProperties","map","_version","i18n","applicationVersion","technology","icons","icon","extension","configuration","parameters","_contentSelectQuery","join","_headerSelectQuery","_contentExpandQuery","_headerExpandQuery","_entitySet","_yesText","_noText","destinations","defaultUrl","csrfTokens","token1","request","url","method","headers","batch","header","getHeaderBatchUrl","Accept","retryAfter","content","getContentBatchUrl","path","unitOfMeasurement","mainIndicator","number","unit","groups","contentDensities","compact","cozy","dependencies","libs","lazy","getObjectPageContext","entitySet","getInstance","fetchDetails","appModel","getModel","contextParameters","keyProperties","property","parameter","formatLiteral","propertyType","formatValue","getCurrentCardManifest","renderCardPreview","newManifest","oModel","oCard","getElementById","setBaseUrl","setManifest","refresh","updateCardGroups","configurationGroups","getProperty","advancedPanelCriticallity","items","filter","configurationItem","matchedCriticallity","columnItem","navigationProperty","propertyKeyForId","updatedColorState","criticality","criticalityValue","activeCalculation","item","label","showStateIcon","hasActions","actions","actionType","resolvePropertyLabelFromExpression","resourceModel","properties","propertyPath","find","labelWithValue","formatterExpression","selectedFormatter","handleFormatter","extractKeyValue","keyValueStr","rawKey","rawValue","split","cleanedValue","replace","updateDataWithProperties","prop","key","startIndex","indexOf","endIndex","keySegment","slice","getRootComponent","keyReference","resolvedKey","getMainIndicator","mManifest","mainIndicatorKey","trendOptions","referenceValue","downDifference","upDifference","criticalityOptions","updateCriticalityBasedOnGroups","mainIndicatorStatusKey","mainIndicatorNavigationSelectedKey","navigationValue","formatterExpressions","trend","trendValue","regex","match","criticalityConfig","updateCriticalityOptions","includes","group","criticallityState","getCriticallityStateForGroup","navProp","itemExists","some","option","None","getSideIndicators","sideIndicators","targetValue","targetUnit","deviationValue","deviationUnit","targetIndicator","deviationIndicator","formatter","f","getGroupItemValue","getCardGroups","groupItem","isEnabled","isNavigationEnabled","enhanceManifestWithConfigurationParameters","oDialogModel","sapCard","applicationInstance","odataModel","V4","configurationParameters","textArrangements","previewItems","getPreviewItems","propertyFormatting","arrangementType","arrangements","text","Object","keys","addQueryParametersToManifest","cardManifest","cardManifestCopy","JSON","parse","stringify","batchRequest","selectQueryHeader","selectQueryContent","expandQueryHeader","expandQueryContent","headerUrl","contentUrl","configParameters","updateConfigurationParametersWithKeyProperties","updateHeaderDataPath","isODataV4","headerData","updateExistingCardManifest","undefined","componentName","parseCard","integrationCardManifest","subtitle","uom","splice","textArrangementsFromCardManifest","headerUOM","mainIndicatorOptions","sideIndicatorOptions","getUpdatedUnitOfMeasures","unitOfMeasures","formatterConfigsWithUnit","updatedUnitOfMeasures","_temp3","matchingProperty","unitConfig","formatterParameterValue","formatterProperty","_temp2","updatedProperty","propertyKeyForDescription","index","_temp","handleFormatterWithoutMatchingProperty","updateCriticalityForNavProperty","mainIndicatorCriticalityOptions","_temp6","_temp5","criticalityName","_temp4","propertiesWithLabel","navigationKeyForId","navigationKeyForDescription","isNavigationForId","isNavigationForDescription","navigationalPropertiesForId","error","Error","_temp8","sourceProperty","_temp7","createCardManifest","appComponent","dialogModel","sapApp","cardSubtitle","oAppModel","serviceUrl","isNavigationalProperty","propertyName","model","navigationalProperties","navigationalProperty","mainIndicatorProperty","flatMap","__exports","__esModule"],"sources":["IntegrationCardHelper.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nimport { handleSingleProperty, isSingleKeyWithoutAssignment } from \"sap/cards/ap/common/odata/ODataUtils\";\nimport { getNavigationPropertiesWithLabel } from \"sap/cards/ap/generator/helpers/NavigationProperty\";\nimport { getPropertyReference } from \"sap/cards/ap/generator/odata/v2/MetadataAnalyzer\";\nimport { getPropertyReferenceKey } from \"sap/cards/ap/generator/odata/v4/MetadataAnalyzer\";\nimport VersionInfo from \"sap/ui/VersionInfo\";\nimport Component from \"sap/ui/core/Component\";\nimport CoreElement from \"sap/ui/core/Element\";\nimport Card, {\n\tCardConfigParameters,\n\tCardManifest,\n\tGroup,\n\tGroupItems,\n\tObjectContent,\n\tPropertyFormattingParameters\n} from \"sap/ui/integration/widgets/Card\";\nimport type JSONModel from \"sap/ui/model/json/JSONModel\";\nimport V2OdataUtils from \"sap/ui/model/odata/ODataUtils\";\nimport { default as V2ODataModel } from \"sap/ui/model/odata/v2/ODataModel\";\nimport { default as V4ODataModel } from \"sap/ui/model/odata/v4/ODataModel\";\nimport V4ODataUtils from \"sap/ui/model/odata/v4/ODataUtils\";\nimport ResourceModel from \"sap/ui/model/resource/ResourceModel\";\nimport { ArrangementOptions } from \"../app/controls/ArrangementsEditor\";\nimport { PropertyInfoMap } from \"../odata/ODataTypes\";\nimport { getDataType, isODataV4Model } from \"../odata/ODataUtils\";\nimport { Application, LibVersionInfo, ODataModelVersion } from \"../pages/Application\";\nimport { ColorIndicator } from \"../types/CommonTypes\";\nimport type { UnitOfMeasures } from \"../types/PropertyTypes\";\nimport { extractValueWithoutBooleanExprBinding, getColorForGroup, hasBooleanBindingExpression } from \"../utils/CommonUtils\";\nimport { updateManifestWithExpandQueryParams, updateManifestWithSelectQueryParams } from \"./Batch\";\nimport type { CriticalityOptions, SideIndicatorOptions, TrendOptions } from \"./CardGeneratorModel\";\nimport type { FormatterConfiguration, FormatterConfigurationMap } from \"./Formatter\";\nimport { getYesAndNoTextValues, resolveI18nTextFromResourceModel } from \"./I18nHelper\";\nimport {\n\textractPathExpressionWithoutUOM,\n\textractPathWithoutUOM,\n\textractPropertyConfigurationWithoutTextArrangement,\n\tgetTextArrangementFromCardManifest,\n\thasFormatter,\n\tisExpression,\n\tisI18nExpression,\n\tupdateAndGetSelectedFormatters\n} from \"./PropertyExpression\";\n\nexport type ParsedManifest = {\n\ttitle: string;\n\tsubtitle: string;\n\theaderUOM: string;\n\tmainIndicatorOptions: {\n\t\tmainIndicatorStatusKey: string;\n\t\tcriticalityOptions: Array<object>;\n\t\tmainIndicatorNavigationSelectedKey: string;\n\t\tnavigationValue: string;\n\t\ttrendOptions: TrendOptions;\n\t};\n\tsideIndicatorOptions: SideIndicatorOptions;\n\tgroups: Array<object>;\n\tformatterConfigurationFromCardManifest: FormatterConfigurationMap;\n\ttextArrangementsFromCardManifest: Array<ArrangementOptions>;\n};\n\nexport type CriticalityOptionsPanel = CriticalityOptions[];\n\nlet manifest: CardManifest;\nconst formatterConfigurationFromCardManifest: FormatterConfigurationMap = [];\n\nexport function createInitialManifest(props: any) {\n\tconst {\n\t\ttitle,\n\t\tsubTitle,\n\t\tdescription,\n\t\tservice,\n\t\tserviceModel,\n\t\tsapAppId,\n\t\tsapCoreVersionInfo,\n\t\tentitySetName,\n\t\tentitySetWithObjectContext,\n\t\tdata\n\t} = props;\n\tconst bODataV4 = isODataV4Model(serviceModel);\n\tif (!bODataV4) {\n\t\tformatDataForV2(entitySetWithObjectContext, data);\n\t}\n\tconst dataPath = bODataV4 ? \"/content/\" : \"/content/d/\";\n\tconst dataPathHeader = bODataV4 ? \"/header/\" : \"/header/d/\";\n\tconst propertyReferenceKeys = bODataV4\n\t\t? getPropertyReferenceKey(serviceModel, entitySetName)\n\t\t: getPropertyReference(serviceModel, entitySetName);\n\tconst entityKeyPropertiesParameters: Record<string, { type: string; value: string | boolean }> = {};\n\n\tconst { yesText, noText } = getYesAndNoTextValues();\n\tpropertyReferenceKeys.forEach((keyProp) => {\n\t\tif (keyProp.type === \"Edm.Boolean\" && typeof data[keyProp.name] === \"string\") {\n\t\t\tdata[keyProp.name] = data[keyProp.name] === yesText;\n\t\t}\n\t\tentityKeyPropertiesParameters[keyProp.name] = {\n\t\t\ttype: getDataType(keyProp.type),\n\t\t\tvalue: data[keyProp.name]\n\t\t};\n\t});\n\n\tconst entityKeyProperties = propertyReferenceKeys.map((keyProp) => keyProp.name);\n\n\tmanifest = {\n\t\t_version: \"1.15.0\",\n\t\t\"sap.app\": {\n\t\t\tid: `${sapAppId}.cards.op.${entitySetName}`,\n\t\t\ttype: \"card\",\n\t\t\ti18n: \"../../../i18n/i18n.properties\",\n\t\t\ttitle: title,\n\t\t\tsubTitle: subTitle,\n\t\t\tdescription: description,\n\t\t\tapplicationVersion: {\n\t\t\t\tversion: \"1.0.0\"\n\t\t\t}\n\t\t},\n\t\t\"sap.ui\": {\n\t\t\ttechnology: \"UI5\",\n\t\t\ticons: {\n\t\t\t\ticon: \"sap-icon://switch-classes\"\n\t\t\t}\n\t\t},\n\t\t\"sap.card\": {\n\t\t\textension: \"module:sap/cards/ap/common/extensions/BaseIntegrationCardExtension\",\n\t\t\ttype: \"Object\",\n\t\t\tconfiguration: {\n\t\t\t\tparameters: {\n\t\t\t\t\t...entityKeyPropertiesParameters,\n\t\t\t\t\t_contentSelectQuery: {\n\t\t\t\t\t\tvalue: entityKeyProperties?.length ? `$select=${entityKeyProperties.join(\",\")}` : \"\"\n\t\t\t\t\t},\n\t\t\t\t\t_headerSelectQuery: {\n\t\t\t\t\t\tvalue: entityKeyProperties?.length ? `$select=${entityKeyProperties.join(\",\")}` : \"\"\n\t\t\t\t\t},\n\t\t\t\t\t_contentExpandQuery: {\n\t\t\t\t\t\tvalue: \"\"\n\t\t\t\t\t},\n\t\t\t\t\t_headerExpandQuery: {\n\t\t\t\t\t\tvalue: \"\"\n\t\t\t\t\t},\n\t\t\t\t\t_entitySet: {\n\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\tvalue: entitySetName\n\t\t\t\t\t},\n\t\t\t\t\t_yesText: {\n\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\tvalue: yesText\n\t\t\t\t\t},\n\t\t\t\t\t_noText: {\n\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\tvalue: noText\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tdestinations: {\n\t\t\t\t\tservice: {\n\t\t\t\t\t\tname: \"(default)\",\n\t\t\t\t\t\tdefaultUrl: \"/\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tcsrfTokens: {\n\t\t\t\t\ttoken1: {\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\trequest: {\n\t\t\t\t\t\t\t\turl: `{{destinations.service}}${service}`,\n\t\t\t\t\t\t\t\tmethod: \"HEAD\",\n\t\t\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t\t\t\"X-CSRF-Token\": \"Fetch\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tdata: {\n\t\t\t\trequest: {\n\t\t\t\t\turl: `{{destinations.service}}${service}/$batch`,\n\t\t\t\t\tmethod: \"POST\",\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t\"X-CSRF-Token\": \"{{csrfTokens.token1}}\",\n\t\t\t\t\t\t\"Accept-Language\": \"{{parameters.LOCALE}}\"\n\t\t\t\t\t},\n\t\t\t\t\tbatch: {\n\t\t\t\t\t\theader: {\n\t\t\t\t\t\t\tmethod: \"GET\",\n\t\t\t\t\t\t\turl: getHeaderBatchUrl(),\n\t\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t\tAccept: \"application/json\",\n\t\t\t\t\t\t\t\t\"Accept-Language\": \"{{parameters.LOCALE}}\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tretryAfter: 30\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcontent: {\n\t\t\t\t\t\t\tmethod: \"GET\",\n\t\t\t\t\t\t\turl: getContentBatchUrl(),\n\t\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t\tAccept: \"application/json\",\n\t\t\t\t\t\t\t\t\"Accept-Language\": \"{{parameters.LOCALE}}\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\theader: {\n\t\t\t\tdata: {\n\t\t\t\t\tpath: dataPathHeader\n\t\t\t\t},\n\t\t\t\ttype: \"Numeric\",\n\t\t\t\ttitle: title,\n\t\t\t\tsubTitle: subTitle,\n\t\t\t\tunitOfMeasurement: \"\",\n\t\t\t\tmainIndicator: {\n\t\t\t\t\tnumber: \"\",\n\t\t\t\t\tunit: \"\"\n\t\t\t\t}\n\t\t\t},\n\t\t\tcontent: {\n\t\t\t\tdata: {\n\t\t\t\t\tpath: dataPath\n\t\t\t\t},\n\t\t\t\tgroups: []\n\t\t\t}\n\t\t},\n\t\t\"sap.ui5\": {\n\t\t\t_version: \"1.1.0\",\n\t\t\tcontentDensities: {\n\t\t\t\tcompact: true,\n\t\t\t\tcozy: true\n\t\t\t},\n\t\t\tdependencies: {\n\t\t\t\tlibs: {\n\t\t\t\t\t\"sap.insights\": {\n\t\t\t\t\t\tlazy: false\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"sap.insights\": {\n\t\t\ttemplateName: \"ObjectPage\",\n\t\t\tparentAppId: sapAppId,\n\t\t\tcardType: \"LEAN_DT\",\n\t\t\tversions: {\n\t\t\t\tui5: sapCoreVersionInfo.version + \"-\" + sapCoreVersionInfo.buildTimestamp\n\t\t\t}\n\t\t}\n\t};\n\treturn manifest;\n}\n\nfunction getObjectPageContext() {\n\tconst { rootComponent, entitySet } = Application.getInstance().fetchDetails();\n\tconst appModel = rootComponent.getModel() as V2ODataModel | V4ODataModel;\n\tconst contextParameters: string[] = [];\n\tconst bODataV4 = isODataV4Model(appModel);\n\n\tif (bODataV4) {\n\t\tconst keyProperties = getPropertyReferenceKey(appModel as V4ODataModel, entitySet);\n\t\tkeyProperties.forEach((property) => {\n\t\t\tconst parameter = V4ODataUtils.formatLiteral(`{{parameters.${property.name}}}`, property.type);\n\t\t\tcontextParameters.push(`${property.name}=${parameter}`);\n\t\t});\n\t} else {\n\t\tconst keyProperties = getPropertyReference(appModel as V2ODataModel, entitySet);\n\t\tkeyProperties.forEach((property) => {\n\t\t\tlet parameter = \"\";\n\t\t\tif (property.type === \"Edm.DateTimeOffset\" || property.type === \"Edm.DateTime\") {\n\t\t\t\tconst propertyType = property.type === \"Edm.DateTimeOffset\" ? \"datetimeoffset\" : \"datetime\";\n\t\t\t\tparameter = propertyType + `'{{parameters.${property.name}}}'`;\n\t\t\t} else {\n\t\t\t\tparameter = V2OdataUtils.formatValue(`{{parameters.${property.name}}}`, property.type, true);\n\t\t\t}\n\t\t\tcontextParameters.push(`${property.name}=${parameter}`);\n\t\t});\n\t}\n\n\treturn contextParameters.join(\",\");\n}\n\nfunction getHeaderBatchUrl() {\n\treturn `{{parameters._entitySet}}(${getObjectPageContext()})?{{parameters._headerSelectQuery}}{{parameters._headerExpandQuery}}`;\n}\n\nfunction getContentBatchUrl() {\n\treturn `{{parameters._entitySet}}(${getObjectPageContext()})?{{parameters._contentSelectQuery}}{{parameters._contentExpandQuery}}`;\n}\n\nexport function getCurrentCardManifest(): CardManifest {\n\treturn manifest || {};\n}\n\n/**\n * Render integration card preview\n *\n * @param {CardManifest} newManifest\n */\nexport function renderCardPreview(newManifest: CardManifest, oModel?: JSONModel) {\n\tmanifest = { ...newManifest };\n\tupdateManifestWithSelectQueryParams(manifest);\n\toModel && updateManifestWithExpandQueryParams(manifest);\n\tconst oCard = CoreElement.getElementById(\"cardGeneratorDialog--cardPreview\") as Card;\n\tif (oCard) {\n\t\toCard.setBaseUrl(\"./\");\n\t\toCard.setManifest(manifest);\n\t\toCard.refresh();\n\t}\n}\n\nexport function updateCardGroups(oModel: JSONModel) {\n\tconst configurationGroups: Group[] = oModel.getProperty(\"/configuration/groups\");\n\tconst advancedPanelCriticallity = oModel?.getProperty(\"/configuration/mainIndicatorOptions/criticality\");\n\n\tconst groups = configurationGroups.map(function (configuration) {\n\t\tconst items = configuration?.items\n\t\t\t?.filter(function (configurationItem) {\n\t\t\t\treturn configurationItem.name;\n\t\t\t})\n\t\t\t.map((configurationItem) => {\n\t\t\t\tconst matchedCriticallity = advancedPanelCriticallity?.filter((columnItem: CriticalityOptions) => {\n\t\t\t\t\tif (configurationItem?.navigationProperty) {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t`${columnItem.name}/${columnItem?.propertyKeyForId}` ===\n\t\t\t\t\t\t\t`${configurationItem.name}/${configurationItem.navigationProperty}`\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\treturn columnItem.name === configurationItem.name;\n\t\t\t\t});\n\t\t\t\tlet updatedColorState;\n\t\t\t\tif (matchedCriticallity?.[0]?.criticality) {\n\t\t\t\t\tconst criticalityValue = matchedCriticallity[0]?.activeCalculation\n\t\t\t\t\t\t? matchedCriticallity[0]\n\t\t\t\t\t\t: matchedCriticallity[0]?.criticality;\n\t\t\t\t\tupdatedColorState = getColorForGroup(criticalityValue);\n\t\t\t\t}\n\t\t\t\tconst item: any = {\n\t\t\t\t\tlabel: configurationItem.label,\n\t\t\t\t\tvalue: configurationItem.value,\n\t\t\t\t\tname: configurationItem.name\n\t\t\t\t};\n\t\t\t\tif (updatedColorState) {\n\t\t\t\t\titem.state = updatedColorState;\n\t\t\t\t\titem.type = \"Status\";\n\t\t\t\t\titem.showStateIcon = true;\n\t\t\t\t}\n\t\t\t\tif (configurationItem.hasActions) {\n\t\t\t\t\titem[\"actions\"] = configurationItem.actions;\n\t\t\t\t\titem[\"hasActions\"] = configurationItem.hasActions;\n\t\t\t\t\titem[\"actionType\"] = configurationItem.actionType;\n\t\t\t\t}\n\t\t\t\treturn item;\n\t\t\t});\n\t\treturn {\n\t\t\ttitle: configuration.title,\n\t\t\titems: items ? items : []\n\t\t};\n\t});\n\t(manifest[\"sap.card\"].content as ObjectContent).groups = groups;\n\trenderCardPreview(manifest, oModel);\n}\n\n/**\n *  Resolves the card header properties from stored manifest\n *  - If path is a string, return the resolved i18n text\n * \t- If path is an expression, resolve the expression then return the labelWithValue of the property\n *  - If path is an expression with formatter, update the formatter configuration and return the labelWithValue of the property\n * @param path\n * @param resourceModel\n * @param properties\n * @returns\n */\nexport function resolvePropertyLabelFromExpression(path: string, resourceModel: ResourceModel, properties: PropertyInfoMap) {\n\tif (isI18nExpression(path)) {\n\t\treturn resolveI18nTextFromResourceModel(path, resourceModel);\n\t}\n\n\tif (isExpression(path) && !hasFormatter(path)) {\n\t\tlet propertyPath = \"\";\n\t\tif (hasBooleanBindingExpression(path)) {\n\t\t\tpropertyPath = extractValueWithoutBooleanExprBinding(path);\n\t\t} else {\n\t\t\tpropertyPath = extractPathWithoutUOM(path);\n\t\t}\n\t\treturn properties.find((property) => property.name === propertyPath)?.labelWithValue ?? \"\";\n\t}\n\n\tif (isExpression(path) && hasFormatter(path)) {\n\t\tconst formatterExpression = extractPathExpressionWithoutUOM(path);\n\t\tconst selectedFormatter = updateAndGetSelectedFormatters(formatterExpression);\n\t\thandleFormatter(selectedFormatter);\n\t\treturn properties.find((property) => property.name === selectedFormatter.property)?.labelWithValue ?? \"\";\n\t}\n\n\treturn path;\n}\n\n/**\n * The function formats the data for OData V2 applications containing the key parameters of type datetimeoffset and guid.\n * @param entitySetWithObjectContext\n * @param data\n */\nexport function formatDataForV2(entitySetWithObjectContext: string, data: Record<string, any>) {\n\tconst extractKeyValue = (keyValueStr: string): [string, any] => {\n\t\tconst [rawKey, rawValue] = keyValueStr.split(\"=\");\n\n\t\tif (rawValue === \"true\" || rawValue === \"false\") {\n\t\t\treturn [rawKey, rawValue === \"true\"];\n\t\t}\n\n\t\tconst cleanedValue = rawValue.replace(/guid|datetimeoffset|datetime|'*/g, \"\");\n\t\treturn [rawKey, cleanedValue];\n\t};\n\n\tconst updateDataWithProperties = (properties: string[]) => {\n\t\tfor (const prop of properties) {\n\t\t\tconst [key, value] = extractKeyValue(prop);\n\t\t\tdata[key] = value;\n\t\t}\n\t};\n\n\tconst startIndex = entitySetWithObjectContext.indexOf(\"(\");\n\tconst endIndex = entitySetWithObjectContext.indexOf(\")\");\n\tconst keySegment = entitySetWithObjectContext.slice(startIndex + 1, endIndex);\n\tconst keyProperties = keySegment.split(\",\");\n\n\tif (isSingleKeyWithoutAssignment(keyProperties)) {\n\t\tconst entitySetName = entitySetWithObjectContext.split(\"(\")[0];\n\t\tconst appModel = Application.getInstance().getRootComponent().getModel();\n\t\tconst keyReference = getPropertyReference(appModel as V2ODataModel, entitySetName);\n\t\tconst resolvedKey = handleSingleProperty(keyReference, keyProperties).join(\",\");\n\t\tconst [key, value] = extractKeyValue(resolvedKey);\n\t\tdata[key] = value;\n\t} else {\n\t\tupdateDataWithProperties(keyProperties);\n\t}\n}\n\nfunction getMainIndicator(mManifest: CardManifest) {\n\tconst mainIndicator = mManifest[\"sap.card\"].header.mainIndicator;\n\tlet mainIndicatorKey = \"\";\n\tlet trendOptions: TrendOptions = {\n\t\treferenceValue: \"\",\n\t\tdownDifference: \"\",\n\t\tupDifference: \"\"\n\t};\n\tconst criticalityOptions: CriticalityOptions[] = [];\n\tconst groups = (mManifest[\"sap.card\"].content as ObjectContent).groups;\n\tif (groups.length > 0) {\n\t\tupdateCriticalityBasedOnGroups(mManifest, criticalityOptions);\n\t}\n\n\tif (!mainIndicator || !mainIndicator.number) {\n\t\treturn {\n\t\t\tmainIndicatorStatusKey: \"\",\n\t\t\tmainIndicatorNavigationSelectedKey: \"\",\n\t\t\tcriticalityOptions,\n\t\t\tnavigationValue: \"\",\n\t\t\ttrendOptions\n\t\t};\n\t}\n\n\tconst { propertyPath, formatterExpression } = extractPropertyConfigurationWithoutTextArrangement(mainIndicator.number, mManifest);\n\tconst state = mainIndicator.state;\n\n\tif (formatterExpression.length) {\n\t\tconst formatterExpressions = formatterExpression.map(updateAndGetSelectedFormatters);\n\t\tformatterExpressions.forEach(handleFormatter);\n\t}\n\n\tif (isExpression(propertyPath) && !hasFormatter(propertyPath)) {\n\t\tif (hasBooleanBindingExpression(propertyPath)) {\n\t\t\tmainIndicatorKey = extractValueWithoutBooleanExprBinding(propertyPath);\n\t\t} else {\n\t\t\tmainIndicatorKey = extractPathWithoutUOM(propertyPath);\n\t\t}\n\t}\n\tif (mainIndicator.trend && mainIndicator.trend !== \"None\") {\n\t\tconst trendValue = mainIndicator.trend;\n\t\tconst regex = /\"referenceValue\":(\\d+),\"downDifference\":(\\d+),\"upDifference\":(\\d+)/;\n\t\tconst match = trendValue.match(regex);\n\n\t\tif (match) {\n\t\t\ttrendOptions = {\n\t\t\t\treferenceValue: match[1] || \"\",\n\t\t\t\tdownDifference: match[2] || \"\",\n\t\t\t\tupDifference: match[3] || \"\"\n\t\t\t};\n\t\t}\n\t}\n\n\tif (isExpression(propertyPath) && hasFormatter(propertyPath)) {\n\t\tconst formatterExpression = extractPathExpressionWithoutUOM(propertyPath);\n\t\tconst selectedFormatter = updateAndGetSelectedFormatters(formatterExpression);\n\t\thandleFormatter(selectedFormatter);\n\t\tmainIndicatorKey = selectedFormatter.property || \"\";\n\t}\n\tlet criticalityConfig: CriticalityOptions = {\n\t\tcriticality: \"\",\n\t\tname: \"\",\n\t\tactiveCalculation: false\n\t};\n\tif (state && hasFormatter(state)) {\n\t\tconst formatterExpression = extractPathExpressionWithoutUOM(state);\n\t\tconst selectedFormatter = updateAndGetSelectedFormatters(formatterExpression);\n\t\thandleFormatter(selectedFormatter);\n\t\tcriticalityConfig = {\n\t\t\tcriticality: \"{\" + selectedFormatter.property + \"}\",\n\t\t\tname: mainIndicatorKey,\n\t\t\tactiveCalculation: false\n\t\t};\n\t} else if (state && state !== \"None\") {\n\t\tcriticalityConfig = {\n\t\t\tcriticality: state,\n\t\t\tname: mainIndicatorKey,\n\t\t\tactiveCalculation: false\n\t\t};\n\t}\n\tif (criticalityConfig.name.length) {\n\t\tupdateCriticalityOptions(criticalityOptions, criticalityConfig);\n\t}\n\n\tlet mainIndicatorNavigationSelectedKey = \"\";\n\tlet mainIndicatorStatusKey = mainIndicatorKey;\n\tif (mainIndicatorKey.includes(\"/\")) {\n\t\tmainIndicatorStatusKey = mainIndicatorKey.split(\"/\")[0];\n\t\tmainIndicatorNavigationSelectedKey = mainIndicatorKey.split(\"/\")[1];\n\t}\n\treturn {\n\t\tmainIndicatorStatusKey,\n\t\tmainIndicatorNavigationSelectedKey,\n\t\tcriticalityOptions,\n\t\tnavigationValue: mainIndicatorKey,\n\t\ttrendOptions\n\t};\n}\n/**\n * Updates the criticality options based on the groups in the provided CardManifest.\n * @param {CardManifest} mManifest - The card manifest containing the groups and their items.\n * @param {CriticalityOptions[]} criticalityOptions - An array of criticality options to be updated.\n */\n\nfunction updateCriticalityBasedOnGroups(mManifest: CardManifest, criticalityOptions: CriticalityOptions[]) {\n\tconst groups = (mManifest[\"sap.card\"].content as ObjectContent).groups;\n\tgroups.forEach((group) => {\n\t\tgroup.items.forEach((item) => {\n\t\t\tif (item.state) {\n\t\t\t\tconst criticallityState = getCriticallityStateForGroup(item.state);\n\t\t\t\tconst regex = /\\/([^,}]+)/;\n\t\t\t\tconst match = item.value.match(regex);\n\t\t\t\tlet navProp;\n\t\t\t\tif (match) {\n\t\t\t\t\tnavProp = match[1];\n\t\t\t\t}\n\t\t\t\tconst criticalityConfig: CriticalityOptions = {\n\t\t\t\t\tcriticality: criticallityState,\n\t\t\t\t\tname: navProp ? `${item.name}/${navProp}` : item.name,\n\t\t\t\t\tactiveCalculation: false\n\t\t\t\t};\n\t\t\t\tupdateCriticalityOptions(criticalityOptions, criticalityConfig);\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Update the criticality options\n * @param criticalityOptions\n * @param criticalityConfig\n */\nfunction updateCriticalityOptions(criticalityOptions: CriticalityOptions[], criticalityConfig: CriticalityOptions) {\n\tconst itemExists = criticalityOptions.some((option) => option.name === criticalityConfig.name);\n\tif (!itemExists) {\n\t\tcriticalityOptions.push(criticalityConfig);\n\t}\n}\n\n/**\n * Gets the criticality state for a group based on the provided state string.\n *\n * This function checks if the state has a formatter associated with it.\n * If so, it processes the formatter and returns its property in a specific format.\n * If the state corresponds to a known criticality state, it returns the corresponding\n * color indicator. If the state is not recognized, it defaults to the 'None' indicator.\n *\n * @param {string} state - The state string to evaluate for criticality.\n * @returns {string} - The criticality state as a string based on the ColorIndicator enum.\n *                    Possible return values include:\n *                    - ColorIndicator.Error\n *                    - ColorIndicator.Success\n *                    - ColorIndicator.None\n *                    - ColorIndicator.Warning\n */\nexport function getCriticallityStateForGroup(state: string) {\n\tif (state && hasFormatter(state)) {\n\t\tconst formatterExpression = extractPathExpressionWithoutUOM(state);\n\t\tconst selectedFormatter = updateAndGetSelectedFormatters(formatterExpression);\n\t\thandleFormatter(selectedFormatter);\n\t\treturn \"{\" + selectedFormatter.property + \"}\";\n\t}\n\n\tif (state && state in ColorIndicator) {\n\t\treturn ColorIndicator[state as keyof typeof ColorIndicator];\n\t}\n\n\treturn ColorIndicator.None;\n}\n\nfunction getSideIndicators(mManifest: CardManifest): SideIndicatorOptions {\n\tconst sideIndicators = mManifest[\"sap.card\"].header.sideIndicators || [];\n\n\tif (sideIndicators.length === 0 || !sideIndicators[0].number) {\n\t\treturn {\n\t\t\ttargetValue: \"\",\n\t\t\ttargetUnit: \"\",\n\t\t\tdeviationValue: \"\",\n\t\t\tdeviationUnit: \"\"\n\t\t};\n\t}\n\n\tconst [targetIndicator = {}, deviationIndicator = {}] = sideIndicators;\n\tconst { number: targetValue = \"\", unit: targetUnit = \"\" } = targetIndicator;\n\n\tconst { number: deviationValue = \"\", unit: deviationUnit = \"\" } = deviationIndicator;\n\n\treturn {\n\t\ttargetValue,\n\t\ttargetUnit,\n\t\tdeviationValue,\n\t\tdeviationUnit\n\t};\n}\n\nfunction handleFormatter(formatter: FormatterConfiguration) {\n\tif (\n\t\tformatterConfigurationFromCardManifest.length === 0 ||\n\t\t!formatterConfigurationFromCardManifest.find((f) => f.property === formatter.property)\n\t) {\n\t\tformatterConfigurationFromCardManifest.push({ ...formatter });\n\t}\n}\n\nfunction getGroupItemValue(value: string, mManifest: CardManifest) {\n\tconst { formatterExpression } = extractPropertyConfigurationWithoutTextArrangement(value, mManifest);\n\n\tif (formatterExpression.length) {\n\t\tconst formatterExpressions = formatterExpression.map(updateAndGetSelectedFormatters);\n\t\tformatterExpressions.forEach(handleFormatter);\n\t}\n\n\treturn value;\n}\n\nfunction getCardGroups(mManifest: CardManifest, resourceModel: ResourceModel) {\n\tconst groups = (mManifest[\"sap.card\"].content as ObjectContent).groups;\n\tif (groups.length === 0) {\n\t\treturn [];\n\t}\n\treturn groups.map((group) => {\n\t\treturn {\n\t\t\ttitle: resolveI18nTextFromResourceModel(group.title, resourceModel),\n\t\t\titems: group.items.map((item) => {\n\t\t\t\tconst groupItem: GroupItems = {\n\t\t\t\t\tlabel: resolveI18nTextFromResourceModel(item.label, resourceModel),\n\t\t\t\t\tvalue: getGroupItemValue(item.value, mManifest),\n\t\t\t\t\tname: item.name,\n\t\t\t\t\tisEnabled: true,\n\t\t\t\t\tisNavigationEnabled: false\n\t\t\t\t};\n\t\t\t\tif (item.hasActions) {\n\t\t\t\t\tgroupItem.actions = item.actions;\n\t\t\t\t\tgroupItem.hasActions = item.hasActions;\n\t\t\t\t\tgroupItem.actionType = item.actionType;\n\t\t\t\t}\n\t\t\t\tif (item.state) {\n\t\t\t\t\tgroupItem.type = \"Status\";\n\t\t\t\t\tgroupItem.state = item.state;\n\t\t\t\t}\n\t\t\t\treturn groupItem;\n\t\t\t})\n\t\t};\n\t});\n}\n\n/**\n * This is a fix for cards which are generated without \"sap.insights\" manifest property or with cardType as \"DT\".\n *  - When the card is regenerated \"sap.insight\" property will be set/updated existing in the manifest.\n *\n * @param mCardManifest\n * @param rootComponent\n * @returns\n */\nexport async function enhanceManifestWithInsights(mCardManifest: CardManifest | undefined, rootComponent: Component) {\n\tif (!mCardManifest) {\n\t\treturn;\n\t}\n\tconst sapAppId = rootComponent.getManifestEntry(\"sap.app\").id;\n\tconst sapCoreVersionInfo = (await VersionInfo.load({\n\t\tlibrary: \"sap.ui.core\"\n\t})) as LibVersionInfo;\n\n\tmCardManifest[\"sap.insights\"] = {\n\t\ttemplateName: \"ObjectPage\",\n\t\tparentAppId: sapAppId,\n\t\tcardType: \"LEAN_DT\",\n\t\tversions: {\n\t\t\tui5: sapCoreVersionInfo.version + \"-\" + sapCoreVersionInfo.buildTimestamp\n\t\t}\n\t};\n}\n\n/**\n * Enhance the card manifest configuration parameters with property formatting configuration\n * \t- add text arrangements properties\n *  - Updates the card manifest configuration parameters by adding \"_yesText\" and \"_noText\" parameters\n *    with predefined string values referencing i18n keys.\n *\n * @param {CardManifest} The card manifest object to be updated. It is expected to have\n *    \"sap.card\" property with a configuration containing parameters.\n * @param {JSONModel}\n */\nexport function enhanceManifestWithConfigurationParameters(mCardManifest: CardManifest, oDialogModel: JSONModel) {\n\tconst sapCard = mCardManifest[\"sap.card\"];\n\tconst applicationInstance = Application.getInstance();\n\tconst rootComponent = applicationInstance.getRootComponent();\n\tconst appModel = rootComponent.getModel();\n\tconst { odataModel, entitySet } = applicationInstance.fetchDetails();\n\tconst keyProperties: string[] = [];\n\n\tif (odataModel === ODataModelVersion.V4) {\n\t\tgetPropertyReferenceKey(appModel as V4ODataModel, entitySet).forEach((property) => keyProperties.push(property.name));\n\t} else {\n\t\tgetPropertyReference(appModel as V2ODataModel, entitySet).forEach((property) => keyProperties.push(property.name));\n\t}\n\n\tif (!sapCard.configuration) {\n\t\tsapCard.configuration = {\n\t\t\tparameters: {}\n\t\t};\n\t}\n\n\tif (!sapCard.configuration?.parameters) {\n\t\tsapCard.configuration.parameters = {};\n\t}\n\n\tconst configurationParameters = sapCard.configuration?.parameters as CardConfigParameters;\n\tconfigurationParameters[\"_propertyFormatting\"] = {};\n\tconst textArrangements = oDialogModel.getProperty(\"/configuration/advancedFormattingOptions/textArrangements\") as ArrangementOptions[];\n\tconst previewItems = getPreviewItems(oDialogModel);\n\tconst propertyFormatting: PropertyFormattingParameters = {};\n\ttextArrangements.forEach(({ name, arrangementType, value }) => {\n\t\tif (name && previewItems.includes(name) && arrangementType && value) {\n\t\t\tpropertyFormatting[name] = {\n\t\t\t\tarrangements: {\n\t\t\t\t\ttext: {\n\t\t\t\t\t\t[arrangementType]: true,\n\t\t\t\t\t\tpath: value\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t});\n\tif (Object.keys(propertyFormatting).length > 0) {\n\t\tconfigurationParameters[\"_propertyFormatting\"] = propertyFormatting;\n\t}\n\n\tconfigurationParameters[\"_mandatoryODataParameters\"] = {\n\t\tvalue: keyProperties\n\t};\n\n\tconfigurationParameters[\"_entitySet\"] = {\n\t\tvalue: entitySet,\n\t\ttype: \"string\"\n\t};\n\n\tkeyProperties.forEach((keyProp) => {\n\t\tconfigurationParameters[keyProp] = {\n\t\t\ttype: getDataType(keyProp),\n\t\t\tvalue: \"\"\n\t\t};\n\t});\n\n\tconfigurationParameters[\"_yesText\"] = {\n\t\ttype: \"string\",\n\t\tvalue: \"{{CardGeneratorValue_Yes}}\"\n\t};\n\n\tconfigurationParameters[\"_noText\"] = {\n\t\ttype: \"string\",\n\t\tvalue: \"{{CardGeneratorValue_No}}\"\n\t};\n}\n\n/**\n * Adds query parameters to the URLs in the manifest's batch request.\n *\n * @param {CardManifest} cardManifest - The card manifest.\n * @returns {CardManifest} A copy of the original card manifest with query parameters added to the URLs.\n */\n\nexport const addQueryParametersToManifest = (cardManifest?: CardManifest): CardManifest => {\n\tconst cardManifestCopy = JSON.parse(JSON.stringify(cardManifest));\n\tconst batchRequest = cardManifestCopy[\"sap.card\"].data?.request?.batch;\n\tconst selectQueryHeader = \"?{{parameters._headerSelectQuery}}\";\n\tconst selectQueryContent = \"?{{parameters._contentSelectQuery}}\";\n\tconst expandQueryHeader = \"{{parameters._headerExpandQuery}}\";\n\tconst expandQueryContent = \"{{parameters._contentExpandQuery}}\";\n\tconst headerUrl = batchRequest?.header?.url;\n\tconst contentUrl = batchRequest?.content?.url;\n\n\tif (headerUrl?.indexOf(selectQueryHeader) === -1) {\n\t\tbatchRequest.header.url = `${batchRequest.header.url}${selectQueryHeader}${expandQueryHeader}`;\n\t} else if (headerUrl?.indexOf(expandQueryHeader) === -1) {\n\t\tbatchRequest.header.url = `${batchRequest.header.url}${expandQueryHeader}`;\n\t}\n\tif (contentUrl?.indexOf(selectQueryContent) === -1) {\n\t\tbatchRequest.content.url = `${batchRequest.content.url}${selectQueryContent}${expandQueryContent}`;\n\t} else if (contentUrl?.indexOf(expandQueryContent) === -1) {\n\t\tbatchRequest.content.url = `${batchRequest.content.url}${expandQueryContent}`;\n\t}\n\n\tconst configParameters = cardManifestCopy[\"sap.card\"].configuration?.parameters;\n\tconfigParameters._contentSelectQuery = configParameters?._contentSelectQuery ?? { value: \"\" };\n\tconfigParameters._headerSelectQuery = configParameters?._headerSelectQuery ?? { value: \"\" };\n\tconfigParameters._contentExpandQuery = configParameters?._contentExpandQuery ?? { value: \"\" };\n\tconfigParameters._headerExpandQuery = configParameters?._headerExpandQuery ?? { value: \"\" };\n\n\treturn cardManifestCopy;\n};\n\nconst updateConfigurationParametersWithKeyProperties = (cardManifest: CardManifest, data: Record<string, any>) => {\n\tconst applicationInstance = Application.getInstance();\n\tconst rootComponent = applicationInstance.getRootComponent();\n\tconst appModel = rootComponent.getModel();\n\tconst { odataModel, entitySet, entitySetWithObjectContext } = applicationInstance.fetchDetails();\n\tconst bODataV4 = isODataV4Model(appModel);\n\tif (!bODataV4) {\n\t\tformatDataForV2(entitySetWithObjectContext, data);\n\t}\n\tconst propertyReferenceKeys =\n\t\todataModel === ODataModelVersion.V4\n\t\t\t? getPropertyReferenceKey(appModel as V4ODataModel, entitySet)\n\t\t\t: getPropertyReference(appModel as V2ODataModel, entitySet);\n\n\tconst sapCard = cardManifest[\"sap.card\"];\n\tif (!sapCard.configuration) {\n\t\tsapCard.configuration = {\n\t\t\tparameters: {}\n\t\t};\n\t}\n\n\tif (!sapCard.configuration?.parameters) {\n\t\tsapCard.configuration.parameters = {};\n\t}\n\tconst configurationParameters = sapCard.configuration?.parameters as CardConfigParameters;\n\n\tconfigurationParameters[\"_entitySet\"] = {\n\t\tvalue: entitySet,\n\t\ttype: \"string\"\n\t};\n\tconst { yesText, noText } = getYesAndNoTextValues();\n\tconfigurationParameters[\"_yesText\"] = {\n\t\ttype: \"string\",\n\t\tvalue: yesText\n\t};\n\tconfigurationParameters[\"_noText\"] = {\n\t\ttype: \"string\",\n\t\tvalue: noText\n\t};\n\tpropertyReferenceKeys.forEach((keyProp) => {\n\t\tif (keyProp.type === \"Edm.Boolean\" && typeof data[keyProp.name] === \"string\") {\n\t\t\tdata[keyProp.name] = data[keyProp.name] === yesText;\n\t\t}\n\t\tconfigurationParameters[keyProp.name] = {\n\t\t\ttype: getDataType(keyProp.type),\n\t\t\tvalue: data[keyProp.name]\n\t\t};\n\t});\n};\n\n/**\n * Updates the data path of the card header in the provided card manifest by reference.\n *\n * @param {CardManifest} cardManifest - The card manifest object that contains the header data.\n */\nfunction updateHeaderDataPath(cardManifest: CardManifest, isODataV4: boolean) {\n\tconst headerData = cardManifest[\"sap.card\"].header.data;\n\tconst dataPathHeader = isODataV4 ? \"/header/\" : \"/header/d/\";\n\n\tif (headerData?.path) {\n\t\theaderData.path = dataPathHeader;\n\t}\n}\n\n/**\n * This method is used to perform updates on existing integration card manifest.\n * Updates will include adding,\n * \t- Query parameters to the URLs in the target manifest's batch request.\n * \t- sap.app.id to the manifest.\n * @param cardManifest\n */\nexport const updateExistingCardManifest = (data: Record<string, any>, cardManifest?: CardManifest): CardManifest | undefined => {\n\tif (!cardManifest) {\n\t\treturn cardManifest;\n\t}\n\n\tcardManifest = addQueryParametersToManifest(cardManifest);\n\tconst batch = cardManifest[\"sap.card\"].data.request?.batch;\n\n\tif (batch !== undefined) {\n\t\tbatch.header.url = getHeaderBatchUrl();\n\t\tbatch.content.url = getContentBatchUrl();\n\t}\n\tconst { componentName, odataModel, entitySet } = Application.getInstance().fetchDetails();\n\tcardManifest[\"sap.app\"].id = `${componentName}.cards.op.${entitySet}`;\n\tcardManifest[\"sap.app\"].i18n = cardManifest[\"sap.app\"].i18n || \"../../../i18n/i18n.properties\";\n\tupdateConfigurationParametersWithKeyProperties(cardManifest, data);\n\tconst isODataV4 = odataModel === ODataModelVersion.V4;\n\tupdateHeaderDataPath(cardManifest, isODataV4);\n\treturn cardManifest;\n};\n\n/**\n * Parses the integration card manifest and extracts relevant information.\n *\n * @param {CardManifest} integrationCardManifest - The manifest of the integration card to be parsed.\n * @param {ResourceModel} resourceModel - The resource model used for localization.\n * @param {PropertyInfoMap} properties - The map of properties to resolve labels from expressions.\n * @returns {ParsedManifest} The parsed manifest containing title, subtitle, header unit of measurement, main indicator options, side indicator options, groups, formatter configuration, and text arrangements.\n */\nexport function parseCard(\n\tintegrationCardManifest: CardManifest,\n\tresourceModel: ResourceModel,\n\tproperties: PropertyInfoMap\n): ParsedManifest {\n\tconst title = integrationCardManifest[\"sap.card\"].header.title ?? \"\";\n\tconst subtitle = integrationCardManifest[\"sap.card\"].header.subTitle ?? \"\";\n\tconst uom = integrationCardManifest[\"sap.card\"].header.unitOfMeasurement ?? \"\";\n\tformatterConfigurationFromCardManifest.splice(0, formatterConfigurationFromCardManifest.length);\n\tconst textArrangementsFromCardManifest: Array<ArrangementOptions> = getTextArrangementFromCardManifest(integrationCardManifest);\n\n\treturn {\n\t\ttitle: resolvePropertyLabelFromExpression(title, resourceModel, properties),\n\t\tsubtitle: resolvePropertyLabelFromExpression(subtitle, resourceModel, properties),\n\t\theaderUOM: resolvePropertyLabelFromExpression(uom, resourceModel, properties),\n\t\tmainIndicatorOptions: getMainIndicator(integrationCardManifest),\n\t\tsideIndicatorOptions: getSideIndicators(integrationCardManifest),\n\t\tgroups: getCardGroups(integrationCardManifest, resourceModel),\n\t\tformatterConfigurationFromCardManifest,\n\t\ttextArrangementsFromCardManifest\n\t};\n}\n\n/**\n * Updates the unit of measures array with formatter configurations.\n *\n * @param {Array<UnitOfMeasures>} unitOfMeasures - The array of unit of measures to be updated.\n * @param {FormatterConfigurationMap} formatterConfigsWithUnit - The formatter configurations containing unit information.\n * @returns Promise {Array<UnitOfMeasures>} The updated array of unit of measures.\n */\nexport const getUpdatedUnitOfMeasures = async function (\n\tunitOfMeasures: Array<UnitOfMeasures>,\n\tformatterConfigsWithUnit: FormatterConfigurationMap,\n\tpath: string\n): Promise<Array<UnitOfMeasures>> {\n\tconst updatedUnitOfMeasures = [...unitOfMeasures];\n\tfor (const formatter of formatterConfigsWithUnit) {\n\t\tconst matchingProperty = updatedUnitOfMeasures.find((unitConfig: UnitOfMeasures) => unitConfig.name === formatter.property);\n\t\tconst formatterParameterValue = formatter.parameters?.[0].value;\n\t\tlet value;\n\t\tif (hasBooleanBindingExpression(formatterParameterValue)) {\n\t\t\tvalue = extractValueWithoutBooleanExprBinding(formatterParameterValue);\n\t\t} else {\n\t\t\tvalue = formatterParameterValue?.replace(/\\$\\{/g, \"\");\n\t\t\tvalue = value?.replace(/\\}/g, \"\");\n\t\t}\n\t\tconst formatterProperty = formatter.property;\n\n\t\tif (matchingProperty && value) {\n\t\t\tconst updatedProperty = { ...matchingProperty, propertyKeyForDescription: value, value: value };\n\t\t\tconst index = updatedUnitOfMeasures.indexOf(matchingProperty);\n\t\t\tupdatedUnitOfMeasures[index] = updatedProperty;\n\t\t} else if (value && formatterProperty) {\n\t\t\tawait handleFormatterWithoutMatchingProperty(formatterProperty, value, updatedUnitOfMeasures, path);\n\t\t}\n\t}\n\n\treturn updatedUnitOfMeasures;\n};\n\n/**\n * Updates the criticality options for navigation properties in the main indicator criticality options.\n *\n * @param {Array<CriticalityOptions>} mainIndicatorCriticalityOptions - The array of main indicator criticality options to be updated.\n * @param {string} path - The path used to fetch navigation properties with labels.\n * @returns {Promise<Array<CriticalityOptions>>} A promise that resolves to the updated array of main indicator criticality options.\n */\nexport const updateCriticalityForNavProperty = async function (mainIndicatorCriticalityOptions: CriticalityOptionsPanel, path: string) {\n\tfor (const criticality of mainIndicatorCriticalityOptions) {\n\t\tif (criticality.name.includes(\"/\")) {\n\t\t\tconst [criticalityName, navProp] = criticality.name.split(\"/\");\n\t\t\ttry {\n\t\t\t\tconst { propertiesWithLabel } = await getNavigationPropertiesWithLabel(\n\t\t\t\t\tApplication.getInstance().fetchDetails().rootComponent,\n\t\t\t\t\tcriticalityName,\n\t\t\t\t\tpath\n\t\t\t\t);\n\t\t\t\tcriticality.navigationKeyForId = navProp;\n\t\t\t\tcriticality.navigationKeyForDescription = \"\";\n\t\t\t\tcriticality.propertyKeyForId = navProp;\n\t\t\t\tcriticality.isNavigationForId = true;\n\t\t\t\tcriticality.isNavigationForDescription = false;\n\t\t\t\tcriticality.name = criticalityName;\n\t\t\t\tcriticality.navigationalPropertiesForId = propertiesWithLabel;\n\t\t\t} catch (error) {\n\t\t\t\tError(\"Error fetching navigation properties:\" + error);\n\t\t\t}\n\t\t}\n\t}\n\treturn mainIndicatorCriticalityOptions;\n};\n/**\n * Handles the formatter property when there is no matching property.\n * Updates the `updatedUnitOfMeasures` array with the appropriate data based on the formatter property.\n *\n * @param {string} formatterProperty - The formatter property to process.\n * @param {string} value - The value associated with the formatter property.\n * @param {Array<UnitOfMeasures>} updatedUnitOfMeasures - The array to update with unit of measure data.\n * @param {string} path - The path used to fetch navigation properties.\n * @returns {Promise<Array<UnitOfMeasures>>} A promise that resolves to the updated array of unit of measures.\n */\nexport const handleFormatterWithoutMatchingProperty = async (\n\tformatterProperty: string,\n\tvalue: string,\n\tupdatedUnitOfMeasures: Array<UnitOfMeasures>,\n\tpath: string\n) => {\n\tif (!formatterProperty) {\n\t\treturn;\n\t}\n\tif (formatterProperty.includes(\"/\")) {\n\t\tconst [sourceProperty, navigationKeyForId] = formatterProperty.split(\"/\");\n\t\ttry {\n\t\t\tconst { propertiesWithLabel } = await getNavigationPropertiesWithLabel(\n\t\t\t\tApplication.getInstance().fetchDetails().rootComponent,\n\t\t\t\tsourceProperty,\n\t\t\t\tpath\n\t\t\t);\n\t\t\tupdatedUnitOfMeasures.push({\n\t\t\t\tpropertyKeyForDescription: value,\n\t\t\t\tname: formatterProperty,\n\t\t\t\tpropertyKeyForId: sourceProperty,\n\t\t\t\tvalue: value,\n\t\t\t\tisNavigationForId: true,\n\t\t\t\tnavigationKeyForId: navigationKeyForId,\n\t\t\t\tisNavigationForDescription: false,\n\t\t\t\tnavigationKeyForDescription: \"\",\n\t\t\t\tnavigationalPropertiesForId: propertiesWithLabel\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tError(\"Error fetching navigation properties:\" + error);\n\t\t}\n\t} else {\n\t\tupdatedUnitOfMeasures.push({\n\t\t\tpropertyKeyForDescription: value,\n\t\t\tname: formatterProperty,\n\t\t\tpropertyKeyForId: formatterProperty,\n\t\t\tvalue: value\n\t\t});\n\t}\n};\n/**\n * Creates or updates the card manifest for the card generator.\n * Fetches application details, constructs the entity context path, and generates the card manifest.\n *\n * @param {Component} appComponent - The root component of the application.\n * @param {CardManifest} cardManifest - The initial card manifest.\n * @param {JSONModel} dialogModel - The dialog model containing configuration data.\n * @returns {Promise<CardManifest>} - A promise that resolves to the created or updated card manifest.\n * @throws {Error} - Throws an error if no model is found in the view.\n */\nexport const createCardManifest = async function (\n\tappComponent: Component,\n\tcardManifest: CardManifest,\n\tdialogModel: JSONModel\n): Promise<CardManifest> {\n\tconst sapApp = appComponent.getManifestEntry(\"sap.app\");\n\tconst { title, description: cardSubtitle, id } = sapApp;\n\tconst oAppModel = appComponent.getModel();\n\n\tif (!oAppModel) {\n\t\tthrow new Error(\"No model found in the view\");\n\t}\n\n\tconst applicationInstance = Application.getInstance();\n\tconst sapCoreVersionInfo = await VersionInfo.load({\n\t\tlibrary: \"sap.ui.core\"\n\t});\n\tconst { serviceUrl, entitySet, entitySetWithObjectContext } = applicationInstance.fetchDetails();\n\tconst entitySetName = entitySet;\n\tconst integrationCardManifest =\n\t\tupdateExistingCardManifest(dialogModel.getProperty(\"/configuration/$data\"), cardManifest) ||\n\t\tcreateInitialManifest({\n\t\t\ttitle: title,\n\t\t\tsubTitle: cardSubtitle,\n\t\t\tservice: serviceUrl,\n\t\t\tserviceModel: oAppModel,\n\t\t\tsapAppId: id,\n\t\t\tsapCoreVersionInfo,\n\t\t\tentitySetName,\n\t\t\tentitySetWithObjectContext,\n\t\t\tdata: dialogModel.getProperty(\"/configuration/$data\")\n\t\t});\n\n\treturn integrationCardManifest;\n};\n\n/**\n * This function checkks if a given property is a navigational property in the model.\n * @param {string} propertyName - Name of the property to check.\n * @param {JSONModel} model - The JSON model containing the card configuration.\n * @returns {boolean} - Returns true if the property is a navigational property, otherwise false.\n */\nconst isNavigationalProperty = function (propertyName: string, model: JSONModel): boolean {\n\tconst navigationalProperties = model.getProperty(\"/configuration/navigationProperty\") ?? [];\n\tfor (const navigationalProperty of navigationalProperties) {\n\t\tif (navigationalProperty.name === propertyName) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n};\n\n/**\n * This function returns the list of properties that are present in the card preview.\n * @param {JSONModel} model - The JSON model containing the card configuration.\n * @returns {string[]} - Array of property names present in the card preview.\n */\nexport const getPreviewItems = function (model: JSONModel) {\n\tconst title = model.getProperty(\"/configuration/title\");\n\tconst subtitle = model.getProperty(\"/configuration/subtitle\");\n\tconst headerUOM = model.getProperty(\"/configuration/headerUOM\");\n\tconst properties = model.getProperty(\"/configuration/properties\") ?? [];\n\tconst mainIndicatorProperty = model.getProperty(\"/configuration/mainIndicatorStatusKey\");\n\tconst groups = model.getProperty(\"/configuration/groups\") || [];\n\tconst previewItems = groups.flatMap((group: { items: { name: string; isNavigationEnabled: boolean; navigationProperty: string }[] }) =>\n\t\tgroup.items.map((item) =>\n\t\t\titem.isNavigationEnabled && item.navigationProperty ? `${item.name}/${item.navigationProperty}` : item.name\n\t\t)\n\t);\n\tif (mainIndicatorProperty) {\n\t\tif (!mainIndicatorProperty.includes(\"/\") && isNavigationalProperty(mainIndicatorProperty, model)) {\n\t\t\tconst mainIndicatorNavigationSelectedKey = model.getProperty(\"/configuration/mainIndicatorNavigationSelectedKey\");\n\t\t\tpreviewItems.push(`${mainIndicatorProperty}/${mainIndicatorNavigationSelectedKey}`);\n\t\t} else {\n\t\t\tpreviewItems.push(mainIndicatorProperty);\n\t\t}\n\t}\n\t[title, subtitle, headerUOM].forEach((item) => {\n\t\tproperties.forEach((property: { labelWithValue: string; name: string }) => {\n\t\t\tif (property.labelWithValue === item) {\n\t\t\t\tpreviewItems.push(property.name);\n\t\t\t}\n\t\t});\n\t});\n\treturn previewItems;\n};\n"],"mappings":"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","ignoreList":[],"sourceRoot":"helpers"}},{"offset":{"line":130,"column":0},"map":{"version":3,"file":"NavigationProperty.js","names":["sap","ui","define","___odata_ODataUtils","___pages_Application","___Batch","___Formatter","___PropertyExpression","getNavigationPropertiesWithLabel","rootComponent","navigationProperty","path","model","getModel","entitySet","serviceUrl","odataModel","Application","getInstance","fetchDetails","bODataV4","ODataModelVersion","V4","navigationPropertyInfo","getNavigationPropertyInfoFromEntity","selectedNavigationProperty","find","property","name","Promise","resolve","propertiesWithLabel","navigationPropertyData","properties","queryParams","navigationProperties","fetchDataAsync","createUrlParameters","then","data","undefined","forEach","propertyValue","labelWithValue","formatPropertyDropdownValues","label","e","reject","resolvePropertyPathFromExpression","updateNavigationPropertiesWithLabel","navigationEntityName","getNavigationPropertyInfo","textArrangement","_temp3","_temp","isNavigationForId","navigationEntitySet","propertyKeyForId","navigationalPropertiesForId","navigationPropertyInfoForId","push","_temp2","isNavigationForDescription","propertyKeyForDescription","navigationalPropertiesForDescription","navigationPropertyInfoForDesc","getNavigationPropertyInfoGroups","item","cardManifest","propertyPath","value","includes","replace","split","navigationalProperties","isNavigationEnabled","isEnabled","__exports","__esModule"],"sources":["NavigationProperty.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nimport Component from \"sap/ui/core/Component\";\nimport { CardManifest } from \"sap/ui/integration/widgets/Card\";\nimport V2ODataModel from \"sap/ui/model/odata/v2/ODataModel\";\nimport V4ODataModel from \"sap/ui/model/odata/v4/ODataModel\";\nimport type { ArrangementOptions } from \"../app/controls/ArrangementsEditor\";\nimport type { PropertyInfo } from \"../odata/ODataTypes\";\nimport { fetchDataAsync, getNavigationPropertyInfoFromEntity } from \"../odata/ODataUtils\";\nimport { Application, ODataModelVersion } from \"../pages/Application\";\nimport type { GroupItem, NavigationParameter, Property } from \"../types/PropertyTypes\";\nimport { QueryParameters, createUrlParameters } from \"./Batch\";\nimport { formatPropertyDropdownValues } from \"./Formatter\";\nimport { resolvePropertyPathFromExpression } from \"./PropertyExpression\";\n\ntype Model = V2ODataModel | V4ODataModel;\n\n/**\n * Fetches the navigation properties with label for a single Navigation property\n * @param rootComponent\n * @param navigationProperty - Name of the navigation property\n * @param path\n */\nexport async function getNavigationPropertiesWithLabel(rootComponent: Component, navigationProperty: string, path: string) {\n\tconst model = rootComponent.getModel() as Model;\n\tconst { entitySet, serviceUrl, odataModel } = Application.getInstance().fetchDetails();\n\tconst bODataV4 = odataModel === ODataModelVersion.V4;\n\tconst navigationPropertyInfo = getNavigationPropertyInfoFromEntity(model, entitySet);\n\tconst selectedNavigationProperty = navigationPropertyInfo.find((property) => property.name === navigationProperty);\n\n\tif (!selectedNavigationProperty) {\n\t\treturn {\n\t\t\tpropertiesWithLabel: [],\n\t\t\tnavigationPropertyData: {}\n\t\t};\n\t}\n\n\tconst properties = selectedNavigationProperty.properties || [];\n\tconst queryParams: QueryParameters = {\n\t\tproperties: [],\n\t\tnavigationProperties: [\n\t\t\t{\n\t\t\t\tname: selectedNavigationProperty.name,\n\t\t\t\tproperties: []\n\t\t\t}\n\t\t]\n\t};\n\n\tconst data = await fetchDataAsync(serviceUrl, path, bODataV4, createUrlParameters(queryParams));\n\n\tif (data[selectedNavigationProperty.name] !== undefined && data[selectedNavigationProperty.name] !== null) {\n\t\tproperties.forEach((property) => {\n\t\t\tconst name = data[selectedNavigationProperty.name] as Record<string, unknown>;\n\t\t\tif (name[property.name] !== undefined && name[property.name] !== null) {\n\t\t\t\tconst propertyValue = name[property.name] as string;\n\t\t\t\tproperty.labelWithValue = formatPropertyDropdownValues(property as PropertyInfo, propertyValue);\n\t\t\t} else {\n\t\t\t\tproperty.labelWithValue = `${property.label} (<empty>)`;\n\t\t\t}\n\t\t});\n\t}\n\n\treturn {\n\t\tpropertiesWithLabel: properties,\n\t\tnavigationPropertyData: data\n\t};\n}\n\n/**\n * Updates the navigation properties with the provided labels.\n *\n * @param {NavigationParameter[]} navigationProperties - The array of navigation parameters to be updated.\n * @param {string} navigationEntityName - The name of the navigation entity to be updated.\n * @param {Property[]} propertiesWithLabel - The array of properties with labels to update the navigation entity with.\n */\nexport function updateNavigationPropertiesWithLabel(\n\tnavigationProperties: NavigationParameter[],\n\tnavigationEntityName: string,\n\tpropertiesWithLabel: Property[]\n) {\n\tconst navigationProperty = navigationProperties.find((property) => property.name === navigationEntityName);\n\tif (!navigationProperty) {\n\t\treturn;\n\t}\n\n\tnavigationProperty.properties = [...propertiesWithLabel];\n}\n\nexport const getNavigationPropertyInfo = async function (\n\ttextArrangement: ArrangementOptions,\n\tnavigationProperty: NavigationParameter[],\n\tpath: string\n) {\n\tconst { rootComponent } = Application.getInstance().fetchDetails();\n\tconst navigationPropertyInfo = [];\n\tif (textArrangement.isNavigationForDescription) {\n\t\tconst navigationEntitySet = textArrangement.propertyKeyForDescription;\n\t\tconst { propertiesWithLabel, navigationPropertyData } = await getNavigationPropertiesWithLabel(\n\t\t\trootComponent,\n\t\t\tnavigationEntitySet,\n\t\t\tpath\n\t\t);\n\t\ttextArrangement.navigationalPropertiesForDescription = propertiesWithLabel;\n\t\tupdateNavigationPropertiesWithLabel(navigationProperty, navigationEntitySet, textArrangement.navigationalPropertiesForDescription);\n\t\tconst navigationPropertyInfoForDesc = {\n\t\t\tnavigationEntitySet,\n\t\t\tnavigationPropertyData\n\t\t};\n\t\tnavigationPropertyInfo.push(navigationPropertyInfoForDesc);\n\t}\n\tif (textArrangement.isNavigationForId) {\n\t\tconst navigationEntitySet = textArrangement.propertyKeyForId as string;\n\t\tconst { propertiesWithLabel, navigationPropertyData } = await getNavigationPropertiesWithLabel(\n\t\t\trootComponent,\n\t\t\tnavigationEntitySet,\n\t\t\tpath\n\t\t);\n\t\ttextArrangement.navigationalPropertiesForId = propertiesWithLabel;\n\t\tupdateNavigationPropertiesWithLabel(navigationProperty, navigationEntitySet, textArrangement.navigationalPropertiesForId);\n\t\tconst navigationPropertyInfoForId = {\n\t\t\tnavigationEntitySet,\n\t\t\tnavigationPropertyData\n\t\t};\n\t\tnavigationPropertyInfo.push(navigationPropertyInfoForId);\n\t}\n\treturn navigationPropertyInfo;\n};\n\nexport const getNavigationPropertyInfoGroups = async function (\n\titem: GroupItem,\n\tnavigationProperty: NavigationParameter[],\n\tpath: string,\n\tcardManifest: Record<string, unknown>\n) {\n\tconst { rootComponent } = Application.getInstance().fetchDetails();\n\n\tconst propertyPath = resolvePropertyPathFromExpression(item.value, cardManifest as CardManifest);\n\tif (propertyPath?.includes(\"/\")) {\n\t\tconst [navigationEntitySet, property] = propertyPath.replace(/[{}]/g, \"\").split(\"/\");\n\t\tconst { propertiesWithLabel, navigationPropertyData } = await getNavigationPropertiesWithLabel(\n\t\t\trootComponent,\n\t\t\tnavigationEntitySet,\n\t\t\tpath\n\t\t);\n\t\titem.navigationalProperties = propertiesWithLabel;\n\t\titem.isNavigationEnabled = true;\n\t\titem.isEnabled = true;\n\t\titem.navigationProperty = property;\n\n\t\tif (item.navigationalProperties) {\n\t\t\tupdateNavigationPropertiesWithLabel(navigationProperty, navigationEntitySet, item.navigationalProperties);\n\t\t}\n\n\t\treturn {\n\t\t\tnavigationEntitySet,\n\t\t\tnavigationPropertyData\n\t\t};\n\t}\n};\n"],"mappings":"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","ignoreList":[],"sourceRoot":"helpers"}},{"offset":{"line":137,"column":0},"map":{"version":3,"file":"PropertyExpression.js","names":["sap","ui","define","Log","BindingParser","___config_FormatterOptions","___utils_CommonUtils","___Formatter","getFormatterConfiguration","extractValueWithoutBooleanExprBinding","getDialogModel","hasBooleanBindingExpression","createFormatterExpression","isExpression","propertyValue","startsWith","isI18nExpression","endsWith","hasFormatter","includes","formatValue","propertyName","propertyValueFormatters","oMatchedFormatterDetail","find","oFormatterDetail","property","getArrangements","options","model","isPropertyBoolean","isBooleanProperty","unitOfMeasures","textArrangements","propertyHasBinding","replace","matchedUomObj","arrangement","name","matchedUOMName","value","matchedArrangementObj","textArrangement","matchedArrangementName","propertyHasFormatter","matchedUOMHasFormatter","matchedArrangementHasFormatter","matchedUOM","matchedArrangement","updatedVal","isArrangementBoolean","isUoMBoolean","getExpressionBindingForBooleanTypes","slice","getFormattedValue","index","indexOf","formattedValue","properties","getProperty","type","propertyParts","split","selectedNavProperty","selectedProperty","navigationalProperties","selectedNavPropertyObj","propertiesOfNavProperty","Array","isArray","selectedPropertyObj","expressionBinding","parts","uom","length","formatFloat","formatUnit","part1","part2","concat","extractPathWithoutUOM","extractPathExpressionWithoutUOM","hasUOM","substring","getExpressionParts","expression","startSymbols","endSymbols","count","part","skipNext","i","trim","push","extractPropertyConfigurationWithoutTextArrangement","mCardManifest","textArrangementOptions","getTextArrangementFromCardManifest","textArrangementIndex","propertyPaths","formatterExpression","forEach","hasTextArrangement","hasFormatterBinding","parseFormatterExpression","propertyPath","remainingExpression","join","textArrangementProperty","prop","option","arrangementType","propertyPathWithoutUOM","matchedTextArrangement","resolvePropertyPathFromExpression","path","hasBinding","selectedFormatter","updateAndGetSelectedFormatters","mManifest","configuration","parameters","_propertyFormatting","Object","keys","arrangements","text","key","isNavigationForId","isNavigationForDescription","propertyKeyForId","navigationKeyForId","navigationKeyForDescription","propertyKeyForDescription","navigationalPropertiesForDescription","navigationalPropertiesForId","formatterOptions","formatterName","formatter","bindingInfo","complexParser","propertyExpression","bindingPartial","lastIndexOf","parametersExpression","hasParameters","formatterParameters","parameter","startIndex","endIndex","JSON","parse","error","formatterConfig","parametersLength","formatterConfigParameters","updatePropertiesForObjectType","__exports","__esModule"],"sources":["PropertyExpression.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nimport Log from \"sap/base/Log\";\nimport BindingParser from \"sap/ui/base/BindingParser\";\nimport { CardManifest } from \"sap/ui/integration/widgets/Card\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\nimport { ArrangementOptions } from \"../app/controls/ArrangementsEditor\";\nimport { getFormatterConfiguration } from \"../config/FormatterOptions\";\nimport { extractValueWithoutBooleanExprBinding, getDialogModel, hasBooleanBindingExpression } from \"../utils/CommonUtils\";\nimport type { FormatterConfiguration, FormatterConfigurationMap } from \"./Formatter\";\nimport { createFormatterExpression } from \"./Formatter\";\n\ntype JSONObject = {\n\t[key: string]: string | boolean | number;\n};\n\ntype FormatterConfigParameters = string | JSONObject;\n\ntype ParsedFormatterExpression = {\n\tformatterName: string;\n\tpropertyPath: string;\n\tparameters: Array<FormatterConfigParameters>;\n};\n\ntype PropertyFormattingOptions = {\n\tunitOfMeasures: Array<{\n\t\t[key: string]: string;\n\t}>;\n\ttextArrangements: ArrangementOptions[];\n\tpropertyValueFormatters: FormatterConfigurationMap;\n};\n\n/**\n * This function checks if the property value is an expression\n *\n * @param {string} propertyValue\n * @returns {boolean}\n */\nexport function isExpression(propertyValue = \"\"): boolean {\n\treturn propertyValue.startsWith(\"{\");\n}\n\n/**\n * This function checks if the property value is an i18n expression\n *\n * @param {string} propertyValue\n * @returns {boolean}\n */\nexport function isI18nExpression(propertyValue = \"\"): boolean {\n\treturn propertyValue.startsWith(\"{{\") && propertyValue.endsWith(\"}}\");\n}\n\n/**\n * The function checks if the property value has a formatter\n *\n * @param propertyValue\n * @returns\n */\nexport function hasFormatter(propertyValue = \"\"): boolean {\n\treturn (\n\t\tpropertyValue.startsWith(\"{=\") &&\n\t\tpropertyValue.endsWith(\"}\") &&\n\t\t(propertyValue.includes(\"format.\") || propertyValue.includes(\"extension.formatters.\"))\n\t);\n}\n\n/**\n * format the value based on the formatter configuration\n * @param {string} propertyName\n * @param {FormatterConfigurationMap} propertyValueFormatters\n * @returns\n */\nfunction formatValue(propertyName: string, propertyValueFormatters: FormatterConfigurationMap = []) {\n\tconst oMatchedFormatterDetail = propertyValueFormatters.find(function (oFormatterDetail: FormatterConfiguration) {\n\t\treturn oFormatterDetail.property === propertyName || \"{\" + oFormatterDetail.property + \"}\" === propertyName;\n\t});\n\n\tif (oMatchedFormatterDetail) {\n\t\treturn createFormatterExpression(oMatchedFormatterDetail);\n\t}\n\treturn propertyName;\n}\n\n/**\n * Apply text arrangement, UOM and formatter to the property\n * @param {string} propertyName\n * @param {PropertyFormattingOptions} options\n * @returns {string}\n */\nexport function getArrangements(propertyName: string, options: PropertyFormattingOptions) {\n\tconst model = getDialogModel() as JSONModel;\n\tconst isPropertyBoolean = isBooleanProperty(model, propertyName);\n\tconst { unitOfMeasures, textArrangements, propertyValueFormatters } = options;\n\tconst propertyHasBinding = propertyName.startsWith(\"{\");\n\tpropertyName = propertyName.replace(/[{}]/g, \"\");\n\n\tconst matchedUomObj = unitOfMeasures.find(function (arrangement: any) {\n\t\treturn arrangement.name === propertyName;\n\t});\n\tlet matchedUOMName = matchedUomObj?.value?.replace(/[{}]/g, \"\");\n\tconst matchedArrangementObj = textArrangements.find((arrangement) => {\n\t\tif (arrangement.value && arrangement.textArrangement) {\n\t\t\treturn arrangement.name === propertyName;\n\t\t}\n\t});\n\tlet matchedArrangementName = matchedArrangementObj?.value?.replace(/[{}]/g, \"\");\n\n\tlet propertyHasFormatter = false;\n\tlet matchedUOMHasFormatter = false;\n\tlet matchedArrangementHasFormatter = false;\n\tconst property = propertyName;\n\tpropertyName = propertyName && formatValue(propertyName, propertyValueFormatters);\n\tif (propertyName !== property) {\n\t\tpropertyHasFormatter = true;\n\t}\n\n\tconst matchedUOM = matchedUomObj && formatValue(matchedUOMName ?? \"\", propertyValueFormatters);\n\tif (matchedUOMName !== matchedUOM) {\n\t\tmatchedUOMHasFormatter = true;\n\t}\n\tconst matchedArrangement = matchedArrangementName && formatValue(matchedArrangementName, propertyValueFormatters);\n\tif (matchedArrangementName !== matchedArrangement) {\n\t\tmatchedArrangementHasFormatter = true;\n\t}\n\n\tlet updatedVal = \"\";\n\tconst isArrangementBoolean = isBooleanProperty(model, matchedArrangementName ?? \"\");\n\tconst isUoMBoolean = isBooleanProperty(model, matchedUOMName ?? \"\");\n\n\tif (matchedArrangementObj || (matchedUomObj && matchedUOMName)) {\n\t\tif (isPropertyBoolean) {\n\t\t\tpropertyName = getExpressionBindingForBooleanTypes(propertyName).slice(1, -1);\n\t\t}\n\t\tif (isArrangementBoolean) {\n\t\t\tmatchedArrangementName = getExpressionBindingForBooleanTypes(matchedArrangementName ?? \"\").slice(1, -1);\n\t\t}\n\t\tif (isUoMBoolean) {\n\t\t\tmatchedUOMName = getExpressionBindingForBooleanTypes(matchedUOMName ?? \"\").slice(1, -1);\n\t\t}\n\t}\n\n\tif (matchedUomObj && matchedArrangementObj) {\n\t\tswitch (matchedArrangementObj.textArrangement) {\n\t\t\tcase \"TextLast\":\n\t\t\t\tupdatedVal += propertyHasFormatter ? `{= ${propertyName}}` : `{${propertyName}}`;\n\t\t\t\tupdatedVal += matchedUOMHasFormatter ? ` {= ${matchedUOM}}` : ` {${matchedUOMName}}`;\n\t\t\t\tupdatedVal = getFormattedValue(updatedVal, propertyHasFormatter, matchedUOMHasFormatter, isUoMBoolean);\n\t\t\t\tupdatedVal += matchedArrangementHasFormatter ? ` ({= ${matchedArrangement}})` : ` ({${matchedArrangementName}})`;\n\t\t\t\tbreak;\n\t\t\tcase \"TextFirst\":\n\t\t\t\tupdatedVal = matchedArrangementHasFormatter ? `{= ${matchedArrangement}} (` : `{${matchedArrangementName}} (`;\n\t\t\t\tupdatedVal += propertyHasFormatter ? `{= ${propertyName}}` : `{${propertyName}}`;\n\t\t\t\tupdatedVal += matchedUOMHasFormatter ? ` {= ${matchedUOM}}` : ` {${matchedUOMName}}`;\n\t\t\t\tconst index = updatedVal.indexOf(\" (\");\n\t\t\t\tconst formattedValue = getFormattedValue(\n\t\t\t\t\tupdatedVal.slice(index + 2),\n\t\t\t\t\tpropertyHasFormatter,\n\t\t\t\t\tmatchedUOMHasFormatter,\n\t\t\t\t\tisUoMBoolean\n\t\t\t\t);\n\t\t\t\tupdatedVal = updatedVal.slice(0, index + 2) + formattedValue;\n\t\t\t\tupdatedVal += \")\";\n\t\t\t\tbreak;\n\t\t\tcase \"TextSeparate\":\n\t\t\t\tupdatedVal += propertyHasFormatter ? `{= ${propertyName}}` : `{${propertyName}}`;\n\t\t\t\tupdatedVal += matchedUOMHasFormatter ? ` {= ${matchedUOM}}` : ` {${matchedUOMName}}`;\n\t\t\t\tupdatedVal = getFormattedValue(updatedVal, propertyHasFormatter, matchedUOMHasFormatter, isUoMBoolean);\n\t\t\t\tbreak;\n\t\t\tcase \"TextOnly\":\n\t\t\t\tupdatedVal += matchedArrangementHasFormatter ? `{= ${matchedArrangement}}` : `{${matchedArrangementName}}`;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t\treturn updatedVal;\n\t} else if (matchedUomObj && matchedUOMName) {\n\t\tupdatedVal = propertyHasFormatter ? `{= ${propertyName}}` : `{${propertyName}}`;\n\t\tif (!matchedUOM?.startsWith(\"format.unit(\")) {\n\t\t\tupdatedVal += matchedUOMHasFormatter ? ` {= ${matchedUOM}}` : ` {${matchedUOMName}}`;\n\t\t}\n\t\treturn getFormattedValue(updatedVal, propertyHasFormatter, matchedUOMHasFormatter, isUoMBoolean);\n\t} else if (matchedArrangementObj) {\n\t\tswitch (matchedArrangementObj.textArrangement) {\n\t\t\tcase \"TextLast\":\n\t\t\t\tupdatedVal += propertyHasFormatter ? `{= ${propertyName}}` : `{${propertyName}}`;\n\t\t\t\tupdatedVal += matchedArrangementHasFormatter ? ` ({= ${matchedArrangement}})` : ` ({${matchedArrangementName}})`;\n\t\t\t\tbreak;\n\t\t\tcase \"TextFirst\":\n\t\t\t\tupdatedVal = matchedArrangementHasFormatter ? `{= ${matchedArrangement}}` : `{${matchedArrangementName}}`;\n\t\t\t\tupdatedVal += propertyHasFormatter ? ` ({= ${propertyName}})` : ` ({${propertyName}})`;\n\t\t\t\tbreak;\n\t\t\tcase \"TextSeparate\":\n\t\t\t\tupdatedVal += propertyHasFormatter ? `{= ${propertyName}}` : `{${propertyName}}`;\n\t\t\t\tbreak;\n\t\t\tcase \"TextOnly\":\n\t\t\t\tupdatedVal = matchedArrangementHasFormatter ? `{= ${matchedArrangement}}` : `{${matchedArrangementName}}`;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t\treturn updatedVal;\n\t}\n\tif (isPropertyBoolean) {\n\t\treturn getExpressionBindingForBooleanTypes(propertyName);\n\t}\n\n\treturn propertyHasBinding ? (propertyHasFormatter ? `{= ${propertyName}}` : `{${propertyName}}`) : propertyName;\n}\n\n/**\n * This function checks if the property is boolean type\n *\n * @param {JSONModel} model\n * @param {string} propertyName\n * @returns {boolean}\n */\n\nfunction isBooleanProperty(model: JSONModel, propertyName: string) {\n\tconst properties = model?.getProperty(\"/configuration/properties\");\n\tpropertyName = propertyName.replace(/[{}]/g, \"\");\n\tconst getProperty = (properties, name: string) => {\n\t\treturn properties?.find((property) => property.name === name);\n\t};\n\tconst property = getProperty(properties, propertyName);\n\tif (property) {\n\t\treturn property.type === \"Edm.Boolean\";\n\t}\n\n\tif (propertyName.includes(\"/\")) {\n\t\tconst propertyParts = propertyName.split(\"/\");\n\t\tconst selectedNavProperty = propertyParts[0];\n\t\tconst selectedProperty = propertyParts[1];\n\t\tconst navigationalProperties = model?.getProperty(\"/configuration/navigationProperty\");\n\t\tconst selectedNavPropertyObj = getProperty(navigationalProperties, selectedNavProperty);\n\t\tconst propertiesOfNavProperty = selectedNavPropertyObj?.properties;\n\n\t\tif (propertiesOfNavProperty && Array.isArray(propertiesOfNavProperty)) {\n\t\t\tconst selectedPropertyObj = getProperty(propertiesOfNavProperty, selectedProperty);\n\t\t\treturn selectedPropertyObj.type === \"Edm.Boolean\";\n\t\t}\n\t}\n\treturn false;\n}\n\n/**\n * This function returns the binding expression for boolean type\n *\n * @param {string} propertyName\n * @returns {string}\n */\nexport function getExpressionBindingForBooleanTypes(propertyName: string) {\n\tconst expressionBinding = `{= \\${${propertyName}} === true ? '{{parameters._yesText}}' : '{{parameters._noText}}'}`;\n\treturn expressionBinding;\n}\n\n/**\n * Retrieves the formatted value based on the provided parameters.\n *\n * @param updatedVal - The updated value to be formatted.\n * @param propertyHasFormatter - A boolean indicating whether the property has a formatter.\n * @param matchedUOMHasFormatter - A boolean indicating whether the matched unit of measure has a formatter.\n * @param isUoMBoolean - A boolean indicating whether the Unit of Measure (UoM) is represented as a boolean expression.\n * @returns The formatted value as a binding string in the format '{= format.unit(${property}, ${uom})}'.\n *          1. When isUoMBoolean is true with formatter: '{= format.unit(${gross_amount}, ${Activation_ac} === true ? \\'Yes\\' : \\'No\\', {\"decimals\":1,\"style\":\"long\"})}'\n *          2. When isUoMBoolean is true without formatter: \"{= format.unit(${LanguageForEdit}, ${HasDraftEntity} === true ? 'Yes' : 'No')}\"\n */\n\nfunction getFormattedValue(updatedVal: string, propertyHasFormatter: boolean, matchedUOMHasFormatter: boolean, isUoMBoolean: boolean) {\n\tconst parts = isUoMBoolean ? updatedVal.split(\" {= \") : updatedVal.split(\" \");\n\tlet property = \"\",\n\t\tuom = \"\";\n\tif (parts.length === 2) {\n\t\tproperty = parts[0];\n\t\tuom = parts[1];\n\t}\n\n\tif (propertyHasFormatter) {\n\t\tconst formatFloat = updatedVal.startsWith(\"{= format.float(\");\n\t\tconst formatUnit = updatedVal.startsWith(\"{= format.unit(\");\n\n\t\tif ((formatFloat || formatUnit) && !matchedUOMHasFormatter) {\n\t\t\tconst index = updatedVal.indexOf(\"} {\");\n\t\t\tlet part1 = updatedVal.slice(0, index + 1);\n\t\t\tlet part2 = updatedVal.slice(index + 2);\n\t\t\tif (isUoMBoolean) {\n\t\t\t\tpart2 = part2.slice(4, -1);\n\t\t\t}\n\t\t\tpart1 = part1.replace(\"format.float(\", \"format.unit(\");\n\n\t\t\tconst parts = part1.split(\", \");\n\t\t\tif (parts.length === 2) {\n\t\t\t\treturn formatFloat ? part1.replace(\", {\", \", $\" + part2 + \", {\") : parts[0].concat(\", $\" + part2 + \")}\");\n\t\t\t} else if (parts.length === 3) {\n\t\t\t\treturn part2 ? parts[0].concat(\", $\" + part2 + \", \").concat(parts[2]) : part1;\n\t\t\t}\n\t\t\treturn updatedVal;\n\t\t}\n\t\treturn updatedVal;\n\t}\n\n\tif (isUoMBoolean) {\n\t\treturn \"{= format.unit($\" + property + \", \" + uom.slice(0, -1) + \")}\";\n\t} else {\n\t\treturn \"{= format.unit($\" + property + \", $\" + uom + \")}\";\n\t}\n}\n\n/**\n * Extracts the property path without unit of measure\n * \t - The property is in the format {propertyPath} {uomPath}\n *\n * @param property\n * @returns {string}\n */\nexport function extractPathWithoutUOM(property: string) {\n\treturn extractPathExpressionWithoutUOM(property).replace(/[{}]/g, \"\"); // Remove curly braces\n}\n\n/**\n * Extracts the property path expression without unit of measure\n * \t - The property is in the format {propertyPath} {uomPath}\n *\n * @param property\n * @returns {string}\n */\nexport function extractPathExpressionWithoutUOM(property: string) {\n\tconst hasUOM = property.includes(\"} {\");\n\treturn hasUOM ? property.substring(0, property.indexOf(\"} {\") + 1) : property;\n}\n\n/**\n * Extracts parts of an expression\n *\n * @param expression\n * @returns {string[]}\n */\nexport function getExpressionParts(expression: string) {\n\tconst startSymbols = [\"{=\", \"{\", \"(\", \"${\"];\n\tconst endSymbols = [\"}\", \")\"];\n\tconst parts = [];\n\tlet count = 0,\n\t\tpart = \"\",\n\t\tskipNext = false;\n\n\tfor (let i = 0; i < expression.length; i++) {\n\t\tif (skipNext) {\n\t\t\tskipNext = false;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (startSymbols.includes(expression[i])) {\n\t\t\tif (expression[i] === \"{\" && expression[i + 1] === \"=\") {\n\t\t\t\tpart += \"{=\";\n\t\t\t\tskipNext = true;\n\t\t\t} else {\n\t\t\t\tpart += expression[i];\n\t\t\t}\n\t\t\tcount++;\n\t\t} else if (endSymbols.includes(expression[i])) {\n\t\t\tpart += expression[i];\n\t\t\tcount--;\n\t\t} else {\n\t\t\tpart += expression[i];\n\t\t}\n\n\t\tif (count === 0) {\n\t\t\tif (part.trim().length !== 0) {\n\t\t\t\tparts.push(part);\n\t\t\t}\n\n\t\t\tpart = \"\";\n\t\t}\n\t}\n\treturn parts;\n}\n\n/**\n * Extracts the property path and formatter expression without text arrangement\n *\n * @param expression\n * @param mCardManifest\n *\n * @returns { propertyPath: string, formatterExpression: string[]}\n */\nexport function extractPropertyConfigurationWithoutTextArrangement(expression: string, mCardManifest: CardManifest) {\n\tconst textArrangementOptions: Array<ArrangementOptions> = getTextArrangementFromCardManifest(mCardManifest);\n\tconst parts = getExpressionParts(expression);\n\tlet textArrangementIndex = -1;\n\tconst propertyPaths: string[] = [];\n\tconst formatterExpression: string[] = [];\n\n\tparts.forEach((part, index) => {\n\t\tconst hasTextArrangement = part.trim().startsWith(\"(\") && part.trim().endsWith(\")\");\n\n\t\tif (hasTextArrangement) {\n\t\t\ttextArrangementIndex = index;\n\t\t\tconst hasFormatterBinding = hasFormatter(part.slice(1, -1));\n\n\t\t\tif (hasFormatterBinding) {\n\t\t\t\tformatterExpression.push(part.slice(1, -1));\n\t\t\t}\n\t\t\tpart = hasFormatterBinding ? parseFormatterExpression(part.slice(1, -1)).propertyPath : part.slice(1, -1);\n\t\t\tpart = \"({\" + part + \"})\";\n\t\t} else if (hasFormatter(part)) {\n\t\t\tformatterExpression.push(part);\n\t\t\tpart = \"{\" + parseFormatterExpression(part).propertyPath + \"}\";\n\t\t}\n\t\tpropertyPaths.push(part);\n\t});\n\n\tif (textArrangementIndex > -1) {\n\t\tlet remainingExpression = propertyPaths\n\t\t\t.slice(0, textArrangementIndex)\n\t\t\t.concat(propertyPaths.slice(textArrangementIndex + 1))\n\t\t\t.join(\" \");\n\t\tconst textArrangement = propertyPaths.slice(textArrangementIndex, textArrangementIndex + 1)[0];\n\t\tlet textArrangementProperty = \"\";\n\t\tif (hasBooleanBindingExpression(textArrangement)) {\n\t\t\ttextArrangementProperty = extractValueWithoutBooleanExprBinding(textArrangement);\n\t\t} else {\n\t\t\ttextArrangementProperty = textArrangement.trim().replace(/[({})]/g, \"\");\n\t\t}\n\t\tconst prop = textArrangementOptions.find((option) => textArrangementProperty === option.name);\n\t\tif (prop && prop.arrangementType === \"TextFirst\") {\n\t\t\tremainingExpression = remainingExpression.replace(prop.value, prop.name);\n\t\t}\n\t\treturn {\n\t\t\tpropertyPath: remainingExpression,\n\t\t\tformatterExpression\n\t\t};\n\t} else {\n\t\tconst propertyPathWithoutUOM = extractPathWithoutUOM(expression);\n\t\tconst matchedTextArrangement = textArrangementOptions.find((option) => propertyPathWithoutUOM === option.value);\n\t\tif (matchedTextArrangement && matchedTextArrangement.arrangementType === \"TextOnly\") {\n\t\t\treturn {\n\t\t\t\tpropertyPath: `{${matchedTextArrangement.name}}`,\n\t\t\t\tformatterExpression\n\t\t\t};\n\t\t}\n\t}\n\n\treturn {\n\t\tpropertyPath: expression,\n\t\tformatterExpression\n\t};\n}\n\n/**\n *  Resolves the property path with expression to simple property path\n * \t- If path is an expression, resolve the expression then return the path\n *  - If path is an expression with formatter, return the path after extracting the formatter\n * @param path\n * @param mCardManifest\n * @returns\n */\nexport function resolvePropertyPathFromExpression(path = \"\", mCardManifest: CardManifest) {\n\tlet { propertyPath } = extractPropertyConfigurationWithoutTextArrangement(path, mCardManifest);\n\tconst hasBinding = isExpression(path) || hasFormatter(path);\n\n\tif (hasBooleanBindingExpression(propertyPath)) {\n\t\tpropertyPath = extractValueWithoutBooleanExprBinding(propertyPath);\n\t}\n\n\tif (isExpression(propertyPath) && !hasFormatter(propertyPath)) {\n\t\tpropertyPath = extractPathWithoutUOM(propertyPath);\n\t}\n\n\tif (isExpression(propertyPath) && hasFormatter(propertyPath)) {\n\t\tconst formatterExpression = extractPathExpressionWithoutUOM(propertyPath);\n\t\tconst selectedFormatter = updateAndGetSelectedFormatters(formatterExpression);\n\t\tpropertyPath = selectedFormatter.property || \"\";\n\t}\n\n\treturn hasBinding ? `{${propertyPath}}` : propertyPath;\n}\n\nexport function getTextArrangementFromCardManifest(mManifest: CardManifest) {\n\tconst textArrangements = mManifest[\"sap.card\"].configuration?.parameters?._propertyFormatting as object | undefined;\n\n\tif (!textArrangements) {\n\t\treturn [];\n\t}\n\n\tconst textArrangementOptions: Array<ArrangementOptions> = [];\n\tObject.keys(textArrangements).forEach((property) => {\n\t\tconst arrangement = textArrangements[property].arrangements.text;\n\t\tconst arrangementType = Object.keys(arrangement).find((key) => arrangement[key]) || \"TextLast\";\n\t\tlet path = arrangement.path;\n\t\tlet isNavigationForId = false;\n\t\tlet isNavigationForDescription = false;\n\t\tlet propertyKeyForId = \"\";\n\t\tlet navigationKeyForId = \"\";\n\t\tlet navigationKeyForDescription = \"\";\n\t\tif (property.includes(\"/\")) {\n\t\t\tpropertyKeyForId = property.split(\"/\")[0];\n\t\t\tnavigationKeyForId = property.split(\"/\")[1];\n\t\t\tisNavigationForId = true;\n\t\t}\n\t\tif (path?.includes(\"/\")) {\n\t\t\tpath = arrangement.path.split(\"/\")[0];\n\t\t\tnavigationKeyForDescription = arrangement.path.split(\"/\")[1];\n\t\t\tisNavigationForDescription = true;\n\t\t}\n\t\ttextArrangementOptions.push({\n\t\t\tname: property,\n\t\t\tarrangementType,\n\t\t\tvalue: arrangement.path,\n\t\t\tpropertyKeyForDescription: path,\n\t\t\tpropertyKeyForId: property.includes(\"/\") ? propertyKeyForId : property,\n\t\t\ttextArrangement: arrangementType,\n\t\t\tisNavigationForId,\n\t\t\tisNavigationForDescription,\n\t\t\tnavigationKeyForId,\n\t\t\tnavigationKeyForDescription,\n\t\t\tnavigationalPropertiesForDescription: [],\n\t\t\tnavigationalPropertiesForId: []\n\t\t});\n\t});\n\treturn textArrangementOptions;\n}\n\n/**\n * Parses the formatter expression and returns the formatter name, property path and parameters\n *\n * @param path\n * @returns\n */\nexport function parseFormatterExpression(path = \"\"): ParsedFormatterExpression {\n\tconst formatterOptions = getFormatterConfiguration();\n\tconst formatterName = path.split(\"{=\")[1]?.split(\"(\")[0]?.trim();\n\n\tif (!formatterName) {\n\t\treturn {\n\t\t\tformatterName: \"\",\n\t\t\tpropertyPath: \"\",\n\t\t\tparameters: []\n\t\t};\n\t}\n\n\tconst selectedFormatter = formatterOptions.find((formatter) => formatter.formatterName === formatterName);\n\tconst bindingInfo = BindingParser.complexParser(path);\n\tconst propertyPath: string = bindingInfo?.parts[0].path;\n\tconst propertyExpression = \"${\" + propertyPath + \"}\";\n\tconst parameters: Array<FormatterConfigParameters> = [];\n\n\tlet bindingPartial = path;\n\tbindingPartial = path.trim().replace(\"{=\", \"\");\n\tbindingPartial = bindingPartial.substring(0, bindingPartial.lastIndexOf(\"}\"));\n\tbindingPartial = bindingPartial.replace(`${formatterName}(`, \"\");\n\tbindingPartial = bindingPartial.substring(0, bindingPartial.lastIndexOf(\")\"));\n\n\tlet parametersExpression = bindingPartial.replace(`${propertyExpression}`, \"\").trim();\n\tconst hasParameters = parametersExpression.length > 0;\n\n\tif (hasParameters) {\n\t\tconst formatterParameters = selectedFormatter?.parameters || [];\n\t\tfor (const parameter of formatterParameters) {\n\t\t\tif (parameter.type === \"object\") {\n\t\t\t\tconst startIndex = parametersExpression.indexOf(\"{\");\n\t\t\t\tconst endIndex = parametersExpression.indexOf(\"}\");\n\t\t\t\tconst options = parametersExpression.substring(startIndex, endIndex + 1);\n\t\t\t\tparametersExpression = parametersExpression.substring(endIndex + 1);\n\t\t\t\ttry {\n\t\t\t\t\tparameters.push(JSON.parse(options) as JSONObject);\n\t\t\t\t} catch {\n\t\t\t\t\tLog.error(\"Error in parsing the formatter options\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (parameter.type === \"string\") {\n\t\t\t\tconst startIndex = parametersExpression.indexOf(\",\");\n\t\t\t\tparametersExpression = parametersExpression.substring(startIndex + 1);\n\t\t\t\tlet endIndex = parametersExpression.indexOf(\",\");\n\t\t\t\tlet options;\n\t\t\t\tif (endIndex !== -1) {\n\t\t\t\t\toptions = parametersExpression.substring(0, endIndex).trim();\n\t\t\t\t} else {\n\t\t\t\t\tendIndex = parametersExpression.indexOf(\"}\");\n\t\t\t\t\toptions = parametersExpression.substring(0, endIndex + 1).trim();\n\t\t\t\t}\n\t\t\t\tparametersExpression = parametersExpression.substring(endIndex + 1);\n\t\t\t\tparameters.push(options.replace(/['\"]+/g, \"\"));\n\t\t\t}\n\t\t}\n\t}\n\n\treturn {\n\t\tformatterName,\n\t\tpropertyPath,\n\t\tparameters\n\t};\n}\n\n/**\n * Updates the selected formatter with received parameters and returns the updated formatter\n *\n * @param propertyPath\n * @returns\n */\nexport function updateAndGetSelectedFormatters(propertyPath: string): FormatterConfiguration {\n\tconst formatterOptions = getFormatterConfiguration();\n\tconst formatterConfig = parseFormatterExpression(propertyPath);\n\tconst selectedFormatter = {\n\t\t...formatterOptions.find((options) => options.formatterName === formatterConfig.formatterName)\n\t} as FormatterConfiguration;\n\tselectedFormatter.property = formatterConfig.propertyPath;\n\n\tif (!selectedFormatter.parameters?.length) {\n\t\treturn selectedFormatter;\n\t}\n\n\tconst parametersLength = selectedFormatter.parameters.length;\n\tfor (let i = 0; i < parametersLength; i++) {\n\t\tconst formatterConfigParameters = formatterConfig.parameters;\n\t\tif (selectedFormatter.parameters[i].type === \"object\" && typeof formatterConfigParameters[i] === \"object\") {\n\t\t\tupdatePropertiesForObjectType(selectedFormatter, formatterConfigParameters, i);\n\t\t}\n\n\t\tif (selectedFormatter.parameters[i].type === \"string\" && typeof formatterConfigParameters[i] === \"string\") {\n\t\t\tselectedFormatter.parameters[i].value = formatterConfigParameters[i];\n\t\t}\n\t}\n\n\treturn selectedFormatter;\n}\n\n/**\n *  Updates the properties for the object type parameters\n *\n * @param selectedFormatter\n * @param formatterConfigParameters\n * @param index\n */\nfunction updatePropertiesForObjectType(\n\tselectedFormatter: FormatterConfiguration,\n\tformatterConfigParameters: Array<FormatterConfigParameters>,\n\tindex: number\n) {\n\tconst properties = selectedFormatter!.parameters![index].properties;\n\n\tproperties?.forEach((property) => {\n\t\tif (property.type === \"boolean\") {\n\t\t\tproperty[\"selected\"] = (formatterConfigParameters[index] as JSONObject)[property.name] as boolean;\n\t\t} else if (property.type === \"enum\") {\n\t\t\tproperty[\"selectedKey\"] = (formatterConfigParameters[index] as JSONObject)[property.name] as string;\n\t\t} else {\n\t\t\tproperty[\"value\"] =\n\t\t\t\ttypeof formatterConfigParameters === \"object\"\n\t\t\t\t\t? ((formatterConfigParameters[index] as JSONObject)[property.name] as string)\n\t\t\t\t\t: formatterConfigParameters[index];\n\t\t}\n\t});\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":"helpers"}},{"offset":{"line":144,"column":0},"map":{"version":3,"file":"Transpiler.js","names":["sap","ui","define","sap_cards_ap_common_adaptiveCards_AdaptiveCardRenderer","sap_cards_ap_transpiler_cardTranspiler_Transpile","CoreElement","___pages_Application","___utils_CommonUtils","getAdaptiveCardForRendering","convertIntegrationCardToAdaptive","Application","checkForDateType","getFormattedDateValue","propertyValue","Date","isNaN","getTime","toISOString","date","transpileIntegrationCardToAdaptive","oDialogModel","oCard","getElementById","oManifest","getManifest","keyParameters","getProperty","appIntent","variantParameter","navigationURI","getInstance","fetchDetails","oAdaptiveCardManifest","adaptiveCardData","Object","assign","properties","forEach","property","isDate","name","formattedDateValue","iterateObject","$data","sHostConfig","getSelectedItem","getBindingContext","renderedCard","adaptiveCardPreview","document","querySelector","setTimeout","innerHTML","updateEmptyStrings","appendChild","nodeList","querySelectorAll","nodeArray","Array","from","node","textContent","includes","key","hasOwnProperty","processKey","value","__edmType","__exports","__esModule"],"sources":["Transpiler.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nimport { getAdaptiveCardForRendering } from \"sap/cards/ap/common/adaptiveCards/AdaptiveCardRenderer\";\nimport { convertIntegrationCardToAdaptive } from \"sap/cards/ap/transpiler/cardTranspiler/Transpile\";\nimport CoreElement from \"sap/ui/core/Element\";\nimport Card, { CardManifest } from \"sap/ui/integration/widgets/Card\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\nimport { Application } from \"../pages/Application\";\nimport { checkForDateType } from \"../utils/CommonUtils\";\n\ntype AdaptiveCardData = {\n\t[key: string]: string | DateObject;\n};\n\ntype DateObject = {\n\t__edmType: string;\n\t[key: string]: unknown;\n};\n\nfunction getFormattedDateValue(propertyValue: string | Date | object) {\n\tif (typeof propertyValue === \"object\" && propertyValue instanceof Date && !isNaN(propertyValue.getTime())) {\n\t\treturn propertyValue.toISOString();\n\t} else if (typeof propertyValue === \"string\") {\n\t\tconst date = new Date(propertyValue);\n\t\treturn isNaN(date.getTime()) ? \"\" : date.toISOString();\n\t}\n}\n\n/**\n * Transpiles an Integration Card into an Adaptive Card.\n *\n * @param {JSONModel} oDialogModel - The Integration Card to transpile.\n * @returns {AdaptiveCard} The resulting Adaptive Card.\n * @throws {TranspilationError} If the Integration Card cannot be transpiled.\n */\nexport function transpileIntegrationCardToAdaptive(oDialogModel: JSONModel) {\n\tconst oCard = CoreElement.getElementById(\"cardGeneratorDialog--cardPreview\") as Card;\n\tconst oManifest = oCard.getManifest() as CardManifest;\n\tconst keyParameters = oDialogModel.getProperty(\"/configuration/keyParameters\") ?? [];\n\tlet appIntent = oDialogModel.getProperty(\"/configuration/appIntent\");\n\tconst { variantParameter, navigationURI } = Application.getInstance().fetchDetails();\n\tappIntent = variantParameter ? `${appIntent}?sap-appvar-id=${variantParameter}` : appIntent;\n\tconst oAdaptiveCardManifest = convertIntegrationCardToAdaptive(oManifest, appIntent, keyParameters, navigationURI);\n\tconst adaptiveCardData = Object.assign({}, oDialogModel.getProperty(\"/configuration/$data\"));\n\tconst properties = oDialogModel.getProperty(\"/configuration/properties\");\n\tproperties.forEach(function (property: { isDate: boolean; name: string }) {\n\t\tif (property?.isDate && adaptiveCardData[property.name]) {\n\t\t\tconst propertyValue = adaptiveCardData[property.name];\n\t\t\tconst formattedDateValue = getFormattedDateValue(propertyValue);\n\t\t\tadaptiveCardData[property.name] = formattedDateValue ? formattedDateValue : propertyValue;\n\t\t}\n\t});\n\n\titerateObject(adaptiveCardData);\n\n\toAdaptiveCardManifest.$data = adaptiveCardData;\n\tconst sHostConfig = (CoreElement.getElementById(\"cardGeneratorDialog--preview-select\") as any)\n\t\t.getSelectedItem()\n\t\t.getBindingContext(\"previewOptions\")\n\t\t.getProperty(\"hostConfig\");\n\n\tlet renderedCard: HTMLElement | undefined;\n\tif (sHostConfig) {\n\t\trenderedCard = getAdaptiveCardForRendering(sHostConfig, oAdaptiveCardManifest);\n\t}\n\tconst adaptiveCardPreview = document.querySelector(\"#adaptiveCardPreview\");\n\n\tif (adaptiveCardPreview && renderedCard) {\n\t\tsetTimeout(function () {\n\t\t\tadaptiveCardPreview.innerHTML = \"\";\n\t\t\tupdateEmptyStrings(renderedCard);\n\t\t\tadaptiveCardPreview.appendChild(renderedCard);\n\t\t});\n\t}\n}\n\n/**\n * Function to update &minus; strings in the rendered card textblock to '-'\n * as JS Engine will not understand &minus; and will not render it to '-'.\n *\n * @param renderedCard\n */\nfunction updateEmptyStrings(renderedCard: HTMLElement): void {\n\tconst nodeList = renderedCard.querySelectorAll(\".ac-textBlock\");\n\tconst nodeArray = Array.from(nodeList);\n\tnodeArray.forEach((node) => {\n\t\tif (node.textContent?.includes(\"&minus;\")) {\n\t\t\tnode.textContent = \"-\";\n\t\t}\n\t});\n}\n\n/**\n * Iterates over the properties of the given adaptive card data object and processes each key.\n *\n * @param {AdaptiveCardData} adaptiveCardData - The adaptive card data object to iterate over.\n * @returns {void}\n */\nfunction iterateObject(adaptiveCardData: AdaptiveCardData): void {\n\tfor (const key in adaptiveCardData) {\n\t\tif (adaptiveCardData.hasOwnProperty(key)) {\n\t\t\tprocessKey(adaptiveCardData, key);\n\t\t}\n\t}\n}\n\n/**\n * Processes a key in the adaptive card data object. If the value associated with the key is an object\n * and has a valid EDM type, it converts the value to an ISO string if possible. It also recursively\n * iterates over the object if the value is an object.\n *\n * @param {AdaptiveCardData} adaptiveCardData - The adaptive card data object containing the key to process.\n * @param {string} key - The key in the adaptive card data object to process.\n */\nfunction processKey(adaptiveCardData: AdaptiveCardData, key: string): void {\n\tconst value = adaptiveCardData[key];\n\tif (typeof value === \"object\" && value !== null) {\n\t\tif (checkForDateType(value?.__edmType)) {\n\t\t\tconst formattedDateValue = getFormattedDateValue(value);\n\t\t\tadaptiveCardData[key] = formattedDateValue ? formattedDateValue : value;\n\t\t}\n\t\titerateObject(value as AdaptiveCardData);\n\t}\n}\n"],"mappings":"AAAA;;;;AAAA,aAAAA,IAAAC,GAAAC,OAAA,2LAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,mBAISC,EAA2BL,EAAA,qCAC3BM,EAAgCL,EAAA,0CAIhCM,EAAWJ,EAAA,qBACXK,EAAgBJ,EAAA,oBAWzB,SAASK,EAAsBC,GAC9B,UAAWA,IAAkB,UAAYA,aAAyBC,OAASC,MAAMF,EAAcG,WAAY,CAC1G,OAAOH,EAAcI,aACtB,MAAO,UAAWJ,IAAkB,SAAU,CAC7C,MAAMK,EAAO,IAAIJ,KAAKD,GACtB,OAAOE,MAAMG,EAAKF,WAAa,GAAKE,EAAKD,aAC1C,CACD,CASO,SAASE,EAAmCC,GAClD,MAAMC,EAAQhB,EAAYiB,eAAe,oCACzC,MAAMC,EAAYF,EAAMG,cACxB,MAAMC,EAAgBL,EAAaM,YAAY,iCAAmC,GAClF,IAAIC,EAAYP,EAAaM,YAAY,4BACzC,MAAME,iBAAEA,EAAgBC,cAAEA,GAAkBnB,EAAYoB,cAAcC,eACtEJ,EAAYC,EAAmB,GAAGD,mBAA2BC,IAAqBD,EAClF,MAAMK,EAAwBvB,EAAiCc,EAAWI,EAAWF,EAAeI,GACpG,MAAMI,EAAmBC,OAAOC,OAAO,CAAC,EAAGf,EAAaM,YAAY,yBACpE,MAAMU,EAAahB,EAAaM,YAAY,6BAC5CU,EAAWC,QAAQ,SAAUC,GAC5B,GAAIA,GAAUC,QAAUN,EAAiBK,EAASE,MAAO,CACxD,MAAM3B,EAAgBoB,EAAiBK,EAASE,MAChD,MAAMC,EAAqB7B,EAAsBC,GACjDoB,EAAiBK,EAASE,MAAQC,EAAqBA,EAAqB5B,CAC7E,CACD,GAEA6B,EAAcT,GAEdD,EAAsBW,MAAQV,EAC9B,MAAMW,EAAevC,EAAYiB,eAAe,uCAC9CuB,kBACAC,kBAAkB,kBAClBpB,YAAY,cAEd,IAAIqB,EACJ,GAAIH,EAAa,CAChBG,EAAevC,EAA4BoC,EAAaZ,EACzD,CACA,MAAMgB,EAAsBC,SAASC,cAAc,wBAEnD,GAAIF,GAAuBD,EAAc,CACxCI,WAAW,WACVH,EAAoBI,UAAY,GAChCC,EAAmBN,GACnBC,EAAoBM,YAAYP,EACjC,EACD,CACD,CAQA,SAASM,EAAmBN,GAC3B,MAAMQ,EAAWR,EAAaS,iBAAiB,iBAC/C,MAAMC,EAAYC,MAAMC,KAAKJ,GAC7BE,EAAUpB,QAASuB,IAClB,GAAIA,EAAKC,aAAaC,SAAS,WAAY,CAC1CF,EAAKC,YAAc,GACpB,GAEF,CAQA,SAASnB,EAAcT,GACtB,IAAK,MAAM8B,KAAO9B,EAAkB,CACnC,GAAIA,EAAiB+B,eAAeD,GAAM,CACzCE,EAAWhC,EAAkB8B,EAC9B,CACD,CACD,CAUA,SAASE,EAAWhC,EAAoC8B,GACvD,MAAMG,EAAQjC,EAAiB8B,GAC/B,UAAWG,IAAU,UAAYA,IAAU,KAAM,CAChD,GAAIvD,EAAiBuD,GAAOC,WAAY,CACvC,MAAM1B,EAAqB7B,EAAsBsD,GACjDjC,EAAiB8B,GAAOtB,EAAqBA,EAAqByB,CACnE,CACAxB,EAAcwB,EACf,CACD,CAAC,IAAAE,EAAA,CAAAC,WAAA,MAAAD,EAAAjD,qCAAA,OAAAiD,CAAA","ignoreList":[],"sourceRoot":"helpers"}},{"offset":{"line":151,"column":0},"map":{"version":3,"file":"library.js","names":["sap","ui","define","a","r","s","i","e","n","p","t","o","init","name","version","apiVersion","dependencies","types","interfaces","controls","elements","noLibraryCSS"],"sources":["library-dbg.js"],"mappings":"AAAA;;;;AAIA,aAAaA,IAAIC,GAAGC,OAAO,CAAC,8BAA8B,kCAAkC,gBAAgB,kBAAkB,kBAAkB,sBAAsB,6BAA6B,yBAAyB,SAASC,EAAEC,EAAEC,EAAEC,EAAEC,EAAEC,EAAEC,EAAEC,GAAG,aAAa,MAAMC,EAAEJ,EAAEK,KAAK,CAACC,KAAK,yBAAyBC,QAAQ,UAAUC,WAAW,EAAEC,aAAa,CAAC,cAAc,QAAQ,UAAU,qBAAqB,sBAAsB,0BAA0B,iBAAiBC,MAAM,GAAGC,WAAW,GAAGC,SAAS,GAAGC,SAAS,GAAGC,aAAa,OAAO,OAAOV,CAAC","ignoreList":[],"sourceRoot":""}},{"offset":{"line":159,"column":0},"map":{"version":3,"file":"ODataTypes.js","names":["sap","ui","define","PropertyInfoType","__exports","__esModule"],"sources":["ODataTypes.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nimport type V2ODataModel from \"sap/ui/model/odata/v2/ODataModel\";\nimport type V4ODataModel from \"sap/ui/model/odata/v4/ODataModel\";\n\nexport type PropertyInfo = {\n\ttextArrangement?: string;\n\tlabel: string;\n\ttype: string;\n\tname: string;\n\tUOM?: string;\n\tisDate?: boolean;\n\tvalue?: string;\n\tlabelWithValue?: string;\n\tproperties?: [];\n\tcategory?: string;\n\tkind?: string;\n\t$Type?: string;\n\t$kind?: string;\n};\n\nexport enum PropertyInfoType {\n\tProperty = \"Property\",\n\tNavigationProperty = \"NavigationProperty\"\n}\n\nexport type PropertyInfoMap = Array<PropertyInfo>;\n\nexport type Model = V2ODataModel | V4ODataModel;\n"],"mappings":"AAAA;;;;AAAA,aAAAA,IAAAC,GAAAC,OAAA,+BAuBYC,EAAgB,SAAhBA,KAAgB,uBAAhBA,EAAgB,kDAAhBA,CAAgB,EAAhBA,GAAgB,QAAAC,EAAA,CAAAC,WAAA,MAAAD,EAAAD,mBAAA,OAAAC,CAAA","ignoreList":[],"sourceRoot":"odata"}},{"offset":{"line":166,"column":0},"map":{"version":3,"file":"ODataUtils.js","names":["sap","ui","define","encodeURLParameters","sap_cards_ap_common_odata_ODataUtils","V2ODataModel","___ODataTypes","V2MetadataAnalyzer","V4MetadataAnalyzer","createContextParameter","PropertyInfoType","getLabelForEntitySet","getLabelForEntitySetV2","getPropertyInfoFromEntity","getPropertyInfoFromEntityV2","getNavigationPropertyInfoFromEntity","getNavigationPropertyInfoFromEntityV2","getMetaModelObjectForEntitySet","getMetaModelObjectForEntitySetForODataV2","getPropertyReference","getPropertyReferenceV2","getEntityNames","getEntityNamesV2","getLabelForEntitySetV4","getPropertyInfoFromEntityV4","getNavigationPropertyInfoFromEntityV4","getMetaModelObjectForEntitySetForODataV4","getPropertyReferenceKey","getPropertyReferenceV4","getEntityNamesV4","isODataV4Model","oModel","isA","fetchDataAsyncV4","sUrl","sPath","queryParams","formattedUrl","endsWith","format","parameters","sFormattedUrl","Promise","resolve","fetch","then","response","json","data","catch","err","Error","e","reject","fetchDataAsyncV2","fnSuccess","oData","fnFailure","oError","read","success","error","urlParameters","fetchDataAsync","bODataV4","Object","keys","forEach","key","length","oAppModel","sEntitySet","withNavigation","resourceBundle","metaModel","getPropertyLabel","sProperty","propertyType","Property","propertyInfo","property","find","oProperty","name","label","getDataType","dataTypeMap","Boolean","Byte","SByte","Int16","Int32","Int64","Single","Double","Float","Decimal","Guid","String","Date","DateTime","DateTimeOffset","Time","Binary","Stream","TimeOfDay","Duration","type","startsWith","replace","createPathWithEntityContext","path","oDataV4","index","indexOf","entitySetName","substring","context","__exports","__esModule"],"sources":["ODataUtils.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nimport type ResourceBundle from \"sap/base/i18n/ResourceBundle\";\nimport encodeURLParameters from \"sap/base/security/encodeURLParameters\";\nimport { createContextParameter } from \"sap/cards/ap/common/odata/ODataUtils\";\nimport type ODataMetaModel from \"sap/ui/model/odata/ODataMetaModel\";\nimport V2ODataModel from \"sap/ui/model/odata/v2/ODataModel\";\nimport type { default as V4ODataMetaModel } from \"sap/ui/model/odata/v4/ODataMetaModel\";\nimport type { default as V4ODataModel } from \"sap/ui/model/odata/v4/ODataModel\";\nimport { PropertyInfo, PropertyInfoType } from \"./ODataTypes\";\nimport * as V2MetadataAnalyzer from \"./v2/MetadataAnalyzer\";\nimport * as V4MetadataAnalyzer from \"./v4/MetadataAnalyzer\";\nconst {\n\tgetLabelForEntitySet: getLabelForEntitySetV2,\n\tgetPropertyInfoFromEntity: getPropertyInfoFromEntityV2,\n\tgetNavigationPropertyInfoFromEntity: getNavigationPropertyInfoFromEntityV2,\n\tgetMetaModelObjectForEntitySet: getMetaModelObjectForEntitySetForODataV2,\n\tgetPropertyReference: getPropertyReferenceV2,\n\tgetEntityNames: getEntityNamesV2\n} = V2MetadataAnalyzer;\n\nconst {\n\tgetLabelForEntitySet: getLabelForEntitySetV4,\n\tgetPropertyInfoFromEntity: getPropertyInfoFromEntityV4,\n\tgetNavigationPropertyInfoFromEntity: getNavigationPropertyInfoFromEntityV4,\n\tgetMetaModelObjectForEntitySet: getMetaModelObjectForEntitySetForODataV4,\n\tgetPropertyReferenceKey: getPropertyReferenceV4,\n\tgetEntityNames: getEntityNamesV4\n} = V4MetadataAnalyzer;\n\ntype ODataModel = V2ODataModel | V4ODataModel | undefined;\n\nexport const isODataV4Model = function (oModel: ODataModel): boolean {\n\treturn (oModel && oModel.isA<V4ODataModel>(\"sap.ui.model.odata.v4.ODataModel\")) || false;\n};\n\nexport const fetchDataAsyncV4 = async function (sUrl: string, sPath: string, queryParams: Record<string, string>) {\n\tconst formattedUrl = sUrl.endsWith(\"/\") ? sUrl : `${sUrl}/`;\n\tqueryParams.format = \"json\";\n\tconst parameters = encodeURLParameters(queryParams);\n\tconst sFormattedUrl = `${formattedUrl}${sPath}?${parameters}`;\n\treturn fetch(sFormattedUrl)\n\t\t.then((response) => response.json())\n\t\t.then((data) => data)\n\t\t.catch((err) => {\n\t\t\tthrow new Error(err);\n\t\t});\n};\n\nconst fetchDataAsyncV2 = async function (sUrl: string, sPath: string, queryParams: Record<string, string>) {\n\tconst oModel = new V2ODataModel(sUrl);\n\treturn new Promise(function (resolve, reject) {\n\t\tconst fnSuccess = function (oData: object) {\n\t\t\tresolve(oData);\n\t\t};\n\t\tconst fnFailure = function (oError: Error) {\n\t\t\treject(oError);\n\t\t};\n\t\toModel.read(\"/\" + sPath, { success: fnSuccess, error: fnFailure, urlParameters: queryParams });\n\t});\n};\n\nexport const fetchDataAsync = async function (sUrl: string, sPath: string, bODataV4?: boolean, urlParameters: Record<string, string> = {}) {\n\tconst queryParams: Record<string, string> = {};\n\tObject.keys(urlParameters).forEach((key) => {\n\t\tif (urlParameters[key].length) {\n\t\t\tqueryParams[key] = urlParameters[key];\n\t\t}\n\t});\n\n\tif (bODataV4) {\n\t\treturn fetchDataAsyncV4(sUrl, sPath, queryParams);\n\t} else {\n\t\treturn fetchDataAsyncV2(sUrl, sPath, queryParams);\n\t}\n};\n\nexport const getLabelForEntitySet = function (oAppModel: ODataModel, sEntitySet: string) {\n\tif (!oAppModel) {\n\t\treturn \"\";\n\t}\n\tif (oAppModel.isA<V2ODataModel>(\"sap.ui.model.odata.v2.ODataModel\")) {\n\t\treturn getLabelForEntitySetV2(oAppModel, sEntitySet);\n\t} else {\n\t\treturn getLabelForEntitySetV4(oAppModel, sEntitySet);\n\t}\n};\n\nexport const getPropertyInfoFromEntity = function (\n\toAppModel: ODataModel,\n\tsEntitySet: string,\n\twithNavigation: boolean,\n\tresourceBundle?: ResourceBundle\n) {\n\tif (!oAppModel) {\n\t\treturn [];\n\t}\n\tif (oAppModel.isA<V2ODataModel>(\"sap.ui.model.odata.v2.ODataModel\")) {\n\t\treturn getPropertyInfoFromEntityV2(oAppModel, sEntitySet, withNavigation, resourceBundle);\n\t} else {\n\t\treturn getPropertyInfoFromEntityV4(oAppModel, sEntitySet, withNavigation, resourceBundle);\n\t}\n};\n\nexport const getNavigationPropertyInfoFromEntity = function (oAppModel: ODataModel, sEntitySet: string) {\n\tif (!oAppModel) {\n\t\treturn [];\n\t}\n\tif (oAppModel.isA<V2ODataModel>(\"sap.ui.model.odata.v2.ODataModel\")) {\n\t\treturn getNavigationPropertyInfoFromEntityV2(oAppModel, sEntitySet);\n\t} else {\n\t\treturn getNavigationPropertyInfoFromEntityV4(oAppModel, sEntitySet);\n\t}\n};\n\nexport const getPropertyReference = function (oAppModel: ODataModel, sEntitySet: string) {\n\tif (!oAppModel) {\n\t\treturn [];\n\t}\n\tif (oAppModel.isA<V2ODataModel>(\"sap.ui.model.odata.v2.ODataModel\")) {\n\t\treturn getPropertyReferenceV2(oAppModel, sEntitySet);\n\t} else {\n\t\treturn getPropertyReferenceV4(oAppModel, sEntitySet);\n\t}\n};\n\nexport const getEntityNames = function (oAppModel: ODataModel) {\n\tif (!oAppModel) {\n\t\treturn [];\n\t}\n\tif (oAppModel.isA<V2ODataModel>(\"sap.ui.model.odata.v2.ODataModel\")) {\n\t\treturn getEntityNamesV2(oAppModel);\n\t} else {\n\t\treturn getEntityNamesV4(oAppModel);\n\t}\n};\n\nexport const getMetaModelObjectForEntitySet = function (\n\tmetaModel: ODataMetaModel | V4ODataMetaModel,\n\tsEntitySet: string,\n\tisODataV4Model: boolean\n) {\n\tif (!isODataV4Model) {\n\t\treturn getMetaModelObjectForEntitySetForODataV2(metaModel as ODataMetaModel, sEntitySet);\n\t} else {\n\t\treturn getMetaModelObjectForEntitySetForODataV4(metaModel as V4ODataMetaModel, sEntitySet);\n\t}\n};\n\nexport function getPropertyLabel(\n\toModel: ODataModel,\n\tsEntitySet: string,\n\tsProperty: string,\n\tpropertyType: PropertyInfoType = PropertyInfoType.Property\n) {\n\tconst propertyInfo =\n\t\tpropertyType === PropertyInfoType.Property\n\t\t\t? getPropertyInfoFromEntity(oModel, sEntitySet, false)\n\t\t\t: getNavigationPropertyInfoFromEntity(oModel, sEntitySet);\n\n\tconst property = propertyInfo.find((oProperty) => oProperty.name === sProperty);\n\treturn propertyType === PropertyInfoType.Property ? (property as PropertyInfo)?.label || \"\" : property || \"\";\n}\n\n/**\n * Get the data type of the property mapped with supported data types by integration cards configuration parameters\n * @param propertyType\n */\nexport function getDataType(propertyType: string) {\n\tconst dataTypeMap: Record<string, string> = {\n\t\tBoolean: \"boolean\",\n\t\tByte: \"integer\",\n\t\tSByte: \"integer\",\n\t\tInt16: \"integer\",\n\t\tInt32: \"integer\",\n\t\tInt64: \"number\",\n\t\tSingle: \"number\",\n\t\tDouble: \"number\",\n\t\tFloat: \"number\",\n\t\tDecimal: \"number\",\n\t\tGuid: \"string\",\n\t\tString: \"string\",\n\t\tDate: \"date\",\n\t\tDateTime: \"datetime\",\n\t\tDateTimeOffset: \"datetime\",\n\t\tTime: \"datetime\",\n\t\tBinary: \"\",\n\t\tStream: \"\",\n\t\tTimeOfDay: \"\",\n\t\tDuration: \"\"\n\t};\n\n\tconst type = propertyType.startsWith(\"Edm.\") ? propertyType.replace(\"Edm.\", \"\") : propertyType;\n\treturn dataTypeMap[type] || \"string\";\n}\n\nexport const createPathWithEntityContext = async function (path: string, oAppModel: V2ODataModel | V4ODataModel, oDataV4: boolean) {\n\tconst index = path.indexOf(\"(\");\n\tconst entitySetName = path.substring(0, index);\n\tconst context = await createContextParameter(path, oAppModel, oDataV4);\n\n\treturn `${entitySetName}(${context})`;\n};\n"],"mappings":"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","ignoreList":[],"sourceRoot":"odata"}},{"offset":{"line":173,"column":0},"map":{"version":3,"file":"MetadataAnalyzer.js","names":["sap","ui","define","____utils_CommonUtils","checkForDateType","Annotatations","label","isPotentiallySensitive","isoCurrency","unit","getNavigationPropertyInfoFromEntity","oModel","entitySet","oMetaModel","getMetaModel","oResult","parameters","oEntityType","getEntityTypeFromEntitySet","aNavigationProperties","navigationProperty","forEach","oNavProperty","navigationEntitySet","getODataAssociationEnd","name","navigationEntityType","type","getODataEntityType","key","entityProperties","property","filter","length","properties","mapProperties","navigationParameter","push","getPropertyInfoFromEntity","model","withNavigation","resourceModel","metaModel","entityType","propertiesWithoutNav","map","obj","category","getText","kind","propertiesWithNav","isPropertySensitive","mapPropertyInfo","entitySetInfo","getODataEntitySet","oProperty","Bool","multiplicity","isDate","ISOCurrency","unitOfMeasure","UOM","Path","String","getLabelForEntitySet","getPropertyReference","entitySetName","entityDefinition","propertyRef","includes","getMetaModelObjectForEntitySet","navigationProperties","propertyName","complexProperties","getEntityNames","entityContainer","getODataEntityContainer","entity","__exports","__esModule"],"sources":["MetadataAnalyzer.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nimport type ResourceBundle from \"sap/base/i18n/ResourceBundle\";\nimport type ODataMetaModel from \"sap/ui/model/odata/ODataMetaModel\";\nimport type { EntityContainer, EntitySet, EntityType } from \"sap/ui/model/odata/ODataMetaModel\";\nimport type ODataModel from \"sap/ui/model/odata/v2/ODataModel\";\nimport type { RequestQueryNavigationProperties, RequestQueryParametersV2 } from \"../../helpers/Batch\";\nimport type { NavigationParameter, NavigationParameters, Property } from \"../../types/PropertyTypes\";\nimport { checkForDateType } from \"../../utils/CommonUtils\";\nimport { PropertyInfo, PropertyInfoMap } from \"../ODataTypes\";\n\nconst Annotatations = {\n\tlabel: \"com.sap.vocabularies.Common.v1.Label\",\n\tisPotentiallySensitive: \"com.sap.vocabularies.PersonalData.v1.IsPotentiallySensitive\",\n\tisoCurrency: \"Org.OData.Measures.V1.ISOCurrency\",\n\tunit: \"Org.OData.Measures.V1.Unit\"\n};\n\ntype EntityTypeLabelAnnotation = {\n\tString?: string;\n};\n\ninterface EntityTypeWithAnnotations extends EntityType {\n\t\"com.sap.vocabularies.Common.v1.Label\"?: EntityTypeLabelAnnotation;\n}\n\nexport function getNavigationPropertyInfoFromEntity(oModel: ODataModel, entitySet: string): NavigationParameter[] {\n\tconst oMetaModel: ODataMetaModel = oModel.getMetaModel();\n\tconst oResult: NavigationParameters = { parameters: [] };\n\n\tconst oEntityType = getEntityTypeFromEntitySet(oMetaModel, entitySet);\n\tconst aNavigationProperties = oEntityType?.navigationProperty || [];\n\n\taNavigationProperties.forEach((oNavProperty: any) => {\n\t\tconst navigationEntitySet = oMetaModel.getODataAssociationEnd(oEntityType as EntityType, oNavProperty.name);\n\t\tconst navigationEntityType = navigationEntitySet?.type ? oMetaModel.getODataEntityType(navigationEntitySet?.type) : null;\n\n\t\tif ((navigationEntityType as EntityType)?.key) {\n\t\t\tconst entityProperties = (navigationEntityType as EntityType)?.property?.filter(\n\t\t\t\t(property: any) => property.type !== \"Edm.Time\"\n\t\t\t);\n\t\t\tif ((entityProperties ?? []).length > 0) {\n\t\t\t\tconst properties = mapProperties(entityProperties);\n\t\t\t\tconst navigationParameter = {\n\t\t\t\t\tname: oNavProperty.name,\n\t\t\t\t\tproperties: properties\n\t\t\t\t} as NavigationParameter;\n\t\t\t\toResult.parameters.push(navigationParameter);\n\t\t\t}\n\t\t}\n\t});\n\treturn oResult.parameters;\n}\n\nexport function getPropertyInfoFromEntity(\n\tmodel: ODataModel,\n\tentitySet: string,\n\twithNavigation: boolean,\n\tresourceModel?: ResourceBundle\n): PropertyInfoMap {\n\tconst metaModel = model.getMetaModel();\n\tconst entityType = getEntityTypeFromEntitySet(metaModel, entitySet) as EntityType;\n\tlet properties = [];\n\tif (withNavigation) {\n\t\tconst propertiesWithoutNav = (entityType?.property || [])\n\t\t\t.filter((property) => property.type !== \"Edm.Time\")\n\t\t\t.map((obj) => ({\n\t\t\t\t...obj,\n\t\t\t\tcategory: resourceModel?.getText(\"CRITICALITY_CONTROL_SELECT_PROP\"),\n\t\t\t\tkind: \"Property\"\n\t\t\t}));\n\t\tconst propertiesWithNav = (entityType?.navigationProperty || []).map((obj) => ({\n\t\t\t...obj,\n\t\t\tcategory: resourceModel?.getText(\"GENERATOR_CARD_SELECT_NAV_PROP\"),\n\t\t\tkind: \"NavigationProperty\"\n\t\t}));\n\t\tproperties = [...propertiesWithoutNav, ...propertiesWithNav];\n\t} else {\n\t\tproperties = entityType?.property || [];\n\t\tproperties = properties.filter((property) => property.type !== \"Edm.Time\");\n\t\tproperties.forEach((property) => ((property as unknown as { kind: string }).kind = \"Property\"));\n\t}\n\n\treturn properties\n\t\t.filter((property) => !isPropertySensitive(metaModel, entityType, property))\n\t\t.map((property) => mapPropertyInfo(property, withNavigation));\n}\n\nfunction getEntityTypeFromEntitySet(oMetaModel: ODataMetaModel, entitySet: string): EntityType | undefined {\n\tconst entitySetInfo = oMetaModel.getODataEntitySet(entitySet) as EntitySet;\n\treturn oMetaModel.getODataEntityType(entitySetInfo?.entityType) as EntityType | undefined;\n}\n\nfunction mapProperties(properties?: Property[]): Property[] | undefined {\n\treturn properties?.map((property) => ({\n\t\tlabel: property?.[\"sap:label\"] || property?.name,\n\t\ttype: property.type,\n\t\tname: property?.name\n\t}));\n}\n\nfunction isPropertySensitive(oMetaModel: ODataMetaModel, oEntityType: EntityType, oProperty: any): boolean {\n\tconst navigationEntitySet = oMetaModel.getODataAssociationEnd(oEntityType, oProperty.name);\n\treturn oProperty[Annotatations.isPotentiallySensitive]?.Bool || navigationEntitySet?.multiplicity === \"*\";\n}\n\nfunction mapPropertyInfo(oProperty: any, withNavigation: boolean): PropertyInfo {\n\tconst isDate: boolean = checkForDateType(oProperty.type);\n\tconst ISOCurrency = oProperty && oProperty[Annotatations.isoCurrency];\n\tconst unitOfMeasure = oProperty && oProperty[Annotatations.unit];\n\tlet UOM: string = \"\";\n\n\tif (ISOCurrency) {\n\t\tUOM = ISOCurrency?.Path ? ISOCurrency?.Path : ISOCurrency?.String;\n\t} else if (unitOfMeasure) {\n\t\tUOM = unitOfMeasure?.Path ? unitOfMeasure?.Path : unitOfMeasure?.String;\n\t} else if (oProperty && oProperty[\"sap:unit\"]) {\n\t\tUOM = oProperty && oProperty[\"sap:unit\"];\n\t}\n\n\treturn {\n\t\tlabel: oProperty[\"sap:label\"] || oProperty?.name,\n\t\ttype: oProperty.type,\n\t\tname: oProperty.name,\n\t\t...(withNavigation && { category: oProperty.category }),\n\t\tUOM,\n\t\tisDate,\n\t\tkind: oProperty.kind\n\t};\n}\n\nexport function getLabelForEntitySet(oModel: ODataModel, entitySet: string) {\n\tconst oMetaModel = oModel.getMetaModel();\n\tconst entitySetInfo = oMetaModel.getODataEntitySet(entitySet) as EntitySet;\n\tconst entityType = oMetaModel.getODataEntityType(entitySetInfo?.entityType) as EntityTypeWithAnnotations;\n\tconst label = (entityType[Annotatations.label as keyof EntityTypeWithAnnotations] as EntityTypeLabelAnnotation)?.String;\n\treturn label || entitySet;\n}\n\nexport function getPropertyReference(oModel: ODataModel, entitySetName: string) {\n\tconst metaModel = oModel.getMetaModel();\n\tconst entitySet = metaModel.getODataEntitySet(entitySetName) as EntitySet;\n\tconst entityDefinition = metaModel.getODataEntityType(entitySet.entityType) as EntityType;\n\tconst propertyRef = entityDefinition.key.propertyRef.map((property) => property.name);\n\tconst properties = getPropertyInfoFromEntity(oModel, entitySetName, false);\n\n\treturn properties.filter((property) => propertyRef.includes(property?.name));\n}\n\nexport function getMetaModelObjectForEntitySet(metaModel: ODataMetaModel, entitySetName: string): RequestQueryParametersV2 {\n\tconst entitySet = metaModel.getODataEntitySet(entitySetName) as EntitySet;\n\tconst entityType = metaModel.getODataEntityType(entitySet.entityType) as EntityType;\n\tconst properties = entityType.property || [];\n\tconst navigationProperties: RequestQueryNavigationProperties[] = [];\n\n\tentityType.navigationProperty?.forEach((navigationProperty) => {\n\t\tconst propertyName = navigationProperty.name;\n\t\tconst navigationEntitySet = metaModel.getODataAssociationEnd(entityType, propertyName);\n\t\tif (navigationEntitySet !== null) {\n\t\t\tconst navigationEntityType = metaModel.getODataEntityType(navigationEntitySet.type) as EntityType;\n\t\t\tconst navigationProperty = navigationEntityType.property || [];\n\t\t\tnavigationProperties.push({\n\t\t\t\tname: propertyName,\n\t\t\t\tproperties: navigationProperty\n\t\t\t});\n\t\t}\n\t});\n\n\treturn {\n\t\tproperties,\n\t\tnavigationProperties,\n\t\tcomplexProperties: []\n\t};\n}\n\nexport const getEntityNames = function (model: ODataModel) {\n\tconst metaModel = model.getMetaModel();\n\tconst entityContainer = metaModel.getODataEntityContainer();\n\tconst entitySet = (entityContainer as EntityContainer)?.entitySet || [];\n\treturn entitySet.map((entity) => entity.name);\n};\n"],"mappings":"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","ignoreList":[],"sourceRoot":"odata/v2"}},{"offset":{"line":180,"column":0},"map":{"version":3,"file":"MetadataAnalyzer.js","names":["sap","ui","define","____utils_CommonUtils","checkForDateType","Annotations","label","isPotentiallySensitive","isoCurrency","unit","getNavigationPropertyInfoFromEntity","model","entitySetName","metaModel","getMetaModel","entitySet","getObject","entityTypeName","$Type","entityType","navigationalData","parameters","Object","keys","filter","property","propertyDef","$kind","$isCollection","forEach","navigationProp","navigationBinding","$NavigationPropertyBinding","navEntitySetName","navEntitySet","navEntityTypeName","navEntityType","data","createNavigationObject","navigationVal","name","properties","push","annotations","map","type","getPropertyInfoFromEntity","oModel","sEntitySet","withNavigation","resourceModel","oMetaModel","oEntitySet","sEntityType","oEntityType","metaModelPropertiesAsObject","getMetaModelObjectForEntitySet","info","propertyCategory","getText","isDate","ISOCurrency","unitOfMeasure","UOM","$Path","category","kind","navigationProperties","navigationProperty","concat","getLabelForEntitySet","getPropertyReferenceKey","oAppModel","entityContainer","entitySetType","propertyRefKey","$Key","includes","getPropertiesFromEntityType","navigationPropertyNames","propertyName","navigationEntitySet","navigationEntityTypeName","complexProperties","complexPropertyNames","startsWith","complexPropertyType","complexType","getEntityNames","entitySets","key","__exports","__esModule"],"sources":["MetadataAnalyzer.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nimport type ResourceBundle from \"sap/base/i18n/ResourceBundle\";\nimport type ODataMetaModel from \"sap/ui/model/odata/v4/ODataMetaModel\";\nimport type ODataModel from \"sap/ui/model/odata/v4/ODataModel\";\nimport type { RequestQueryComplexProperties, RequestQueryNavigationProperties, RequestQueryParametersV4 } from \"../../helpers/Batch\";\nimport type { EntityType } from \"../../helpers/CardGeneratorModel\";\nimport { NavigationParameter, NavigationParameters } from \"../../types/PropertyTypes\";\nimport { checkForDateType } from \"../../utils/CommonUtils\";\nimport { PropertyInfo } from \"../ODataTypes\";\n\nconst Annotations = {\n\tlabel: \"@com.sap.vocabularies.Common.v1.Label\",\n\tisPotentiallySensitive: \"@com.sap.vocabularies.PersonalData.v1.IsPotentiallySensitive\",\n\tisoCurrency: \"@Org.OData.Measures.V1.ISOCurrency\",\n\tunit: \"@Org.OData.Measures.V1.Unit\"\n};\n\nexport function getNavigationPropertyInfoFromEntity(model: ODataModel, entitySetName: string): NavigationParameter[] {\n\tconst metaModel: ODataMetaModel = model.getMetaModel();\n\tconst entitySet = metaModel.getObject(\"/\" + entitySetName);\n\tconst entityTypeName = entitySet.$Type;\n\tconst entityType = metaModel.getObject(\"/\" + entityTypeName);\n\tconst navigationalData: NavigationParameters = { parameters: [] };\n\tObject.keys(entityType)\n\t\t.filter((property) => {\n\t\t\tconst propertyDef = entityType[property];\n\t\t\treturn typeof propertyDef === \"object\" && propertyDef.$kind === \"NavigationProperty\" && !propertyDef.$isCollection;\n\t\t})\n\t\t.forEach((navigationProp) => {\n\t\t\tconst navigationBinding = entitySet.$NavigationPropertyBinding;\n\t\t\tif (navigationBinding && navigationProp in navigationBinding) {\n\t\t\t\tconst navEntitySetName = navigationBinding[navigationProp];\n\t\t\t\tif (navEntitySetName !== entitySetName) {\n\t\t\t\t\tconst navEntitySet = metaModel.getObject(\"/\" + navEntitySetName);\n\t\t\t\t\tconst navEntityTypeName = navEntitySet?.$Type;\n\t\t\t\t\tconst navEntityType = metaModel.getObject(\"/\" + navEntityTypeName);\n\t\t\t\t\tconst data = createNavigationObject(navEntityType, navEntityTypeName, metaModel);\n\t\t\t\t\tconst navigationVal: NavigationParameter = {\n\t\t\t\t\t\tname: navigationProp,\n\t\t\t\t\t\tproperties: data\n\t\t\t\t\t};\n\t\t\t\t\tnavigationalData.parameters.push(navigationVal);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\treturn navigationalData.parameters;\n}\n\nfunction createNavigationObject(entityType: EntityType, entityTypeName: string, metaModel: ODataMetaModel): PropertyInfo[] {\n\treturn Object.keys(entityType)\n\t\t.filter((property) => {\n\t\t\tconst propertyDef = entityType[property];\n\t\t\tconst annotations = metaModel.getObject(`/${entityTypeName}/${property}@`);\n\t\t\treturn (\n\t\t\t\tproperty !== \"SAP__Messages\" &&\n\t\t\t\ttypeof propertyDef === \"object\" &&\n\t\t\t\t(propertyDef.$kind === \"Property\" || propertyDef.$kind === \"NavigationProperty\") &&\n\t\t\t\t!annotations?.[Annotations.isPotentiallySensitive]\n\t\t\t);\n\t\t})\n\t\t.map((property) => {\n\t\t\tconst propertyDef = entityType[property];\n\t\t\tconst annotations = metaModel.getObject(`/${entityTypeName}/${property}@`);\n\t\t\treturn {\n\t\t\t\tlabel: annotations?.[Annotations.label] || property,\n\t\t\t\ttype: propertyDef.$Type,\n\t\t\t\tname: property\n\t\t\t};\n\t\t});\n}\n\nexport function getPropertyInfoFromEntity(\n\toModel: ODataModel,\n\tsEntitySet: string,\n\twithNavigation = false,\n\tresourceModel?: ResourceBundle\n): PropertyInfo[] {\n\tconst oMetaModel = oModel.getMetaModel();\n\tconst oEntitySet = oMetaModel.getObject(\"/\" + sEntitySet);\n\tconst sEntityType = oEntitySet.$Type;\n\tconst oEntityType = oMetaModel.getObject(\"/\" + sEntityType);\n\tconst metaModelPropertiesAsObject = getMetaModelObjectForEntitySet(oMetaModel, sEntitySet);\n\tlet info: PropertyInfo[] = [];\n\n\tconst properties = metaModelPropertiesAsObject.properties.map((propertyDef) => {\n\t\tconst propertyCategory = resourceModel?.getText(\"CRITICALITY_CONTROL_SELECT_PROP\");\n\t\tconst annotations = oMetaModel.getObject(`/${sEntityType}/${propertyDef.name}@`);\n\t\tconst isDate = checkForDateType(propertyDef[\"$Type\"]);\n\t\tconst ISOCurrency = annotations?.[Annotations.isoCurrency];\n\t\tconst unitOfMeasure = annotations?.[Annotations.unit];\n\t\tlet UOM = \"\";\n\n\t\tif (ISOCurrency) {\n\t\t\tUOM = ISOCurrency?.$Path || ISOCurrency;\n\t\t} else if (unitOfMeasure) {\n\t\t\tUOM = unitOfMeasure?.$Path || unitOfMeasure;\n\t\t}\n\n\t\treturn {\n\t\t\tlabel: annotations?.[Annotations.label] || propertyDef.name,\n\t\t\ttype: propertyDef.$Type,\n\t\t\tname: propertyDef.name,\n\t\t\t...(withNavigation && { category: propertyCategory }),\n\t\t\tkind: propertyDef.$kind,\n\t\t\tUOM,\n\t\t\tisDate\n\t\t};\n\t}) as PropertyInfo[];\n\n\tif (withNavigation) {\n\t\tconst navigationProperties = metaModelPropertiesAsObject.navigationProperties.map((navigationProperty) => {\n\t\t\tconst propertyDef = oEntityType[navigationProperty.name];\n\t\t\tconst propertyCategory = resourceModel?.getText(\"GENERATOR_CARD_SELECT_NAV_PROP\");\n\t\t\treturn {\n\t\t\t\tlabel: navigationProperty.name,\n\t\t\t\ttype: propertyDef.$Type,\n\t\t\t\tname: navigationProperty.name,\n\t\t\t\tcategory: propertyCategory,\n\t\t\t\tkind: propertyDef.$kind,\n\t\t\t\tUOM: \"\",\n\t\t\t\tisDate: false\n\t\t\t};\n\t\t});\n\t\tinfo = info.concat(navigationProperties);\n\t}\n\treturn info.concat(properties);\n}\n\nexport function getLabelForEntitySet(oModel: ODataModel, sEntitySet: string) {\n\tconst oMetaModel = oModel.getMetaModel();\n\tconst entitySet = oMetaModel.getObject(\"/\" + sEntitySet);\n\tconst sEntityType = entitySet.$Type;\n\tconst annotations = oMetaModel.getObject(\"/\" + sEntityType + \"@\");\n\treturn annotations[Annotations.label] || sEntitySet;\n}\n\nexport function getPropertyReferenceKey(oAppModel: ODataModel, entitySetName: string) {\n\tconst entityContainer = oAppModel.getMetaModel().getObject(\"/\");\n\tconst entitySet = entityContainer[entitySetName];\n\tconst entitySetType = entitySet?.$Type;\n\tconst propertyRefKey = oAppModel.getMetaModel().getObject(\"/\" + entitySetType)?.$Key;\n\tconst properties = getPropertyInfoFromEntity(oAppModel, entitySetName, false);\n\treturn properties.filter((property) => propertyRefKey.includes(property.name));\n}\n\nfunction getPropertiesFromEntityType(metaModel: ODataMetaModel, entityType: EntityType, entityTypeName: string): PropertyInfo[] {\n\tconst properties: PropertyInfo[] = [];\n\n\tObject.keys(entityType).forEach((property) => {\n\t\tconst propertyDef = entityType[property];\n\t\tconst isPotentiallySensitive = metaModel.getObject(`/${entityTypeName}/${property}@`)?.[Annotations.isPotentiallySensitive];\n\t\tif (\n\t\t\tproperty !== \"SAP__Messages\" &&\n\t\t\ttypeof propertyDef === \"object\" &&\n\t\t\tpropertyDef.$kind === \"Property\" &&\n\t\t\t!isPotentiallySensitive\n\t\t) {\n\t\t\tproperties.push({\n\t\t\t\t...propertyDef,\n\t\t\t\t...{ name: property }\n\t\t\t});\n\t\t}\n\t});\n\n\treturn properties;\n}\n\nexport function getMetaModelObjectForEntitySet(metaModel: ODataMetaModel, entitySetName: string): RequestQueryParametersV4 {\n\tconst entitySet = metaModel.getObject(`/${entitySetName}`);\n\tconst entityTypeName = entitySet.$Type;\n\tconst entityType = metaModel.getObject(`/${entityTypeName}`);\n\tconst properties = getPropertiesFromEntityType(metaModel, entityType, entityTypeName);\n\n\tconst navigationPropertyNames = Object.keys(entityType).filter((property) => {\n\t\tconst propertyDef = entityType[property];\n\t\treturn typeof propertyDef === \"object\" && propertyDef.$kind === \"NavigationProperty\" && !propertyDef.$isCollection;\n\t});\n\n\tconst navigationProperties: RequestQueryNavigationProperties[] = [];\n\tnavigationPropertyNames.forEach((propertyName) => {\n\t\tconst navigationEntitySet = metaModel.getObject(`/${entitySetName}/${propertyName}`);\n\t\tconst navigationEntityTypeName = navigationEntitySet.$Type;\n\t\tconst entityType = metaModel.getObject(`/${entitySetName}/${navigationEntityTypeName}`);\n\t\tconst properties = getPropertiesFromEntityType(metaModel, entityType, navigationEntityTypeName);\n\t\tnavigationProperties.push({\n\t\t\tname: propertyName,\n\t\t\tproperties: properties\n\t\t});\n\t});\n\n\tconst complexProperties: RequestQueryComplexProperties[] = [];\n\tconst complexPropertyNames = Object.keys(entityType).filter((property) => {\n\t\tconst propertyDef = entityType[property];\n\t\treturn typeof propertyDef === \"object\" && propertyDef.$kind === \"Property\" && !propertyDef.$Type?.startsWith(\"Edm.\");\n\t});\n\n\tcomplexPropertyNames.forEach((propertyName) => {\n\t\tconst property = metaModel.getObject(`/${entitySetName}/${propertyName}`);\n\t\tconst complexPropertyType = property.$Type;\n\t\tconst complexType = metaModel.getObject(`/${entitySetName}/${complexPropertyType}`);\n\t\tconst properties = getPropertiesFromEntityType(metaModel, complexType, complexPropertyType);\n\t\tcomplexProperties.push({\n\t\t\tname: propertyName,\n\t\t\tproperties: properties\n\t\t});\n\t});\n\n\treturn {\n\t\tproperties,\n\t\tnavigationProperties,\n\t\tcomplexProperties\n\t};\n}\n\nexport function getEntityNames(model: ODataModel) {\n\tconst metaModel = model.getMetaModel();\n\tconst entityContainer = metaModel.getObject(\"/\");\n\tconst entitySets = Object.keys(entityContainer).filter((key) => {\n\t\tconst entitySet = entityContainer[key];\n\t\treturn entitySet.$kind === \"EntitySet\";\n\t});\n\treturn entitySets;\n}\n"],"mappings":"AAAA;;;;AAAA,aAAAA,IAAAC,GAAAC,OAAA,qCAAAC,GAAA,mBAUSC,EAAgBD,EAAA,oBAGzB,MAAME,EAAc,CACnBC,MAAO,wCACPC,uBAAwB,+DACxBC,YAAa,qCACbC,KAAM,+BAGA,SAASC,EAAoCC,EAAmBC,GACtE,MAAMC,EAA4BF,EAAMG,eACxC,MAAMC,EAAYF,EAAUG,UAAU,IAAMJ,GAC5C,MAAMK,EAAiBF,EAAUG,MACjC,MAAMC,EAAaN,EAAUG,UAAU,IAAMC,GAC7C,MAAMG,EAAyC,CAAEC,WAAY,IAC7DC,OAAOC,KAAKJ,GACVK,OAAQC,IACR,MAAMC,EAAcP,EAAWM,GAC/B,cAAcC,IAAgB,UAAYA,EAAYC,QAAU,uBAAyBD,EAAYE,gBAErGC,QAASC,IACT,MAAMC,EAAoBhB,EAAUiB,2BACpC,GAAID,GAAqBD,KAAkBC,EAAmB,CAC7D,MAAME,EAAmBF,EAAkBD,GAC3C,GAAIG,IAAqBrB,EAAe,CACvC,MAAMsB,EAAerB,EAAUG,UAAU,IAAMiB,GAC/C,MAAME,EAAoBD,GAAchB,MACxC,MAAMkB,EAAgBvB,EAAUG,UAAU,IAAMmB,GAChD,MAAME,EAAOC,EAAuBF,EAAeD,EAAmBtB,GACtE,MAAM0B,EAAqC,CAC1CC,KAAMV,EACNW,WAAYJ,GAEbjB,EAAiBC,WAAWqB,KAAKH,EAClC,CACD,IAGF,OAAOnB,EAAiBC,UACzB,CAEA,SAASiB,EAAuBnB,EAAwBF,EAAwBJ,GAC/E,OAAOS,OAAOC,KAAKJ,GACjBK,OAAQC,IACR,MAAMC,EAAcP,EAAWM,GAC/B,MAAMkB,EAAc9B,EAAUG,UAAU,IAAIC,KAAkBQ,MAC9D,OACCA,IAAa,wBACNC,IAAgB,WACtBA,EAAYC,QAAU,YAAcD,EAAYC,QAAU,wBAC1DgB,IAActC,EAAYE,0BAG5BqC,IAAKnB,IACL,MAAMC,EAAcP,EAAWM,GAC/B,MAAMkB,EAAc9B,EAAUG,UAAU,IAAIC,KAAkBQ,MAC9D,MAAO,CACNnB,MAAOqC,IAActC,EAAYC,QAAUmB,EAC3CoB,KAAMnB,EAAYR,MAClBsB,KAAMf,IAGV,CAEO,SAASqB,EACfC,EACAC,EACAC,EAAiB,MACjBC,GAEA,MAAMC,EAAaJ,EAAOjC,eAC1B,MAAMsC,EAAaD,EAAWnC,UAAU,IAAMgC,GAC9C,MAAMK,EAAcD,EAAWlC,MAC/B,MAAMoC,EAAcH,EAAWnC,UAAU,IAAMqC,GAC/C,MAAME,EAA8BC,EAA+BL,EAAYH,GAC/E,IAAIS,EAAuB,GAE3B,MAAMhB,EAAac,EAA4Bd,WAAWG,IAAKlB,IAC9D,MAAMgC,EAAmBR,GAAeS,QAAQ,mCAChD,MAAMhB,EAAcQ,EAAWnC,UAAU,IAAIqC,KAAe3B,EAAYc,SACxE,MAAMoB,EAASxD,EAAiBsB,EAAY,UAC5C,MAAMmC,EAAclB,IAActC,EAAYG,aAC9C,MAAMsD,EAAgBnB,IAActC,EAAYI,MAChD,IAAIsD,EAAM,GAEV,GAAIF,EAAa,CAChBE,EAAMF,GAAaG,OAASH,CAC7B,MAAO,GAAIC,EAAe,CACzBC,EAAMD,GAAeE,OAASF,CAC/B,CAEA,MAAO,CACNxD,MAAOqC,IAActC,EAAYC,QAAUoB,EAAYc,KACvDK,KAAMnB,EAAYR,MAClBsB,KAAMd,EAAYc,QACdS,GAAkB,CAAEgB,SAAUP,GAClCQ,KAAMxC,EAAYC,MAClBoC,MACAH,YAIF,GAAIX,EAAgB,CACnB,MAAMkB,EAAuBZ,EAA4BY,qBAAqBvB,IAAKwB,IAClF,MAAM1C,EAAc4B,EAAYc,EAAmB5B,MACnD,MAAMkB,EAAmBR,GAAeS,QAAQ,kCAChD,MAAO,CACNrD,MAAO8D,EAAmB5B,KAC1BK,KAAMnB,EAAYR,MAClBsB,KAAM4B,EAAmB5B,KACzByB,SAAUP,EACVQ,KAAMxC,EAAYC,MAClBoC,IAAK,GACLH,OAAQ,SAGVH,EAAOA,EAAKY,OAAOF,EACpB,CACA,OAAOV,EAAKY,OAAO5B,EACpB,CAEO,SAAS6B,EAAqBvB,EAAoBC,GACxD,MAAMG,EAAaJ,EAAOjC,eAC1B,MAAMC,EAAYoC,EAAWnC,UAAU,IAAMgC,GAC7C,MAAMK,EAActC,EAAUG,MAC9B,MAAMyB,EAAcQ,EAAWnC,UAAU,IAAMqC,EAAc,KAC7D,OAAOV,EAAYtC,EAAYC,QAAU0C,CAC1C,CAEO,SAASuB,EAAwBC,EAAuB5D,GAC9D,MAAM6D,EAAkBD,EAAU1D,eAAeE,UAAU,KAC3D,MAAMD,EAAY0D,EAAgB7D,GAClC,MAAM8D,EAAgB3D,GAAWG,MACjC,MAAMyD,EAAiBH,EAAU1D,eAAeE,UAAU,IAAM0D,IAAgBE,KAChF,MAAMnC,EAAaK,EAA0B0B,EAAW5D,EAAe,OACvE,OAAO6B,EAAWjB,OAAQC,GAAakD,EAAeE,SAASpD,EAASe,MACzE,CAEA,SAASsC,EAA4BjE,EAA2BM,EAAwBF,GACvF,MAAMwB,EAA6B,GAEnCnB,OAAOC,KAAKJ,GAAYU,QAASJ,IAChC,MAAMC,EAAcP,EAAWM,GAC/B,MAAMlB,EAAyBM,EAAUG,UAAU,IAAIC,KAAkBQ,QAAepB,EAAYE,wBACpG,GACCkB,IAAa,wBACNC,IAAgB,UACvBA,EAAYC,QAAU,aACrBpB,EACA,CACDkC,EAAWC,KAAK,IACZhB,KACA,CAAEc,KAAMf,IAEb,IAGD,OAAOgB,CACR,CAEO,SAASe,EAA+B3C,EAA2BD,GACzE,MAAMG,EAAYF,EAAUG,UAAU,IAAIJ,KAC1C,MAAMK,EAAiBF,EAAUG,MACjC,MAAMC,EAAaN,EAAUG,UAAU,IAAIC,KAC3C,MAAMwB,EAAaqC,EAA4BjE,EAAWM,EAAYF,GAEtE,MAAM8D,EAA0BzD,OAAOC,KAAKJ,GAAYK,OAAQC,IAC/D,MAAMC,EAAcP,EAAWM,GAC/B,cAAcC,IAAgB,UAAYA,EAAYC,QAAU,uBAAyBD,EAAYE,gBAGtG,MAAMuC,EAA2D,GACjEY,EAAwBlD,QAASmD,IAChC,MAAMC,EAAsBpE,EAAUG,UAAU,IAAIJ,KAAiBoE,KACrE,MAAME,EAA2BD,EAAoB/D,MACrD,MAAMC,EAAaN,EAAUG,UAAU,IAAIJ,KAAiBsE,KAC5D,MAAMzC,EAAaqC,EAA4BjE,EAAWM,EAAY+D,GACtEf,EAAqBzB,KAAK,CACzBF,KAAMwC,EACNvC,WAAYA,MAId,MAAM0C,EAAqD,GAC3D,MAAMC,EAAuB9D,OAAOC,KAAKJ,GAAYK,OAAQC,IAC5D,MAAMC,EAAcP,EAAWM,GAC/B,cAAcC,IAAgB,UAAYA,EAAYC,QAAU,aAAeD,EAAYR,OAAOmE,WAAW,UAG9GD,EAAqBvD,QAASmD,IAC7B,MAAMvD,EAAWZ,EAAUG,UAAU,IAAIJ,KAAiBoE,KAC1D,MAAMM,EAAsB7D,EAASP,MACrC,MAAMqE,EAAc1E,EAAUG,UAAU,IAAIJ,KAAiB0E,KAC7D,MAAM7C,EAAaqC,EAA4BjE,EAAW0E,EAAaD,GACvEH,EAAkBzC,KAAK,CACtBF,KAAMwC,EACNvC,WAAYA,MAId,MAAO,CACNA,aACA0B,uBACAgB,oBAEF,CAEO,SAASK,EAAe7E,GAC9B,MAAME,EAAYF,EAAMG,eACxB,MAAM2D,EAAkB5D,EAAUG,UAAU,KAC5C,MAAMyE,EAAanE,OAAOC,KAAKkD,GAAiBjD,OAAQkE,IACvD,MAAM3E,EAAY0D,EAAgBiB,GAClC,OAAO3E,EAAUY,QAAU,cAE5B,OAAO8D,CACR,CAAC,IAAAE,EAAA,CAAAC,WAAA,MAAAD,EAAAjF,sCAAAiF,EAAA7C,4BAAA6C,EAAArB,uBAAAqB,EAAApB,0BAAAoB,EAAAnC,iCAAAmC,EAAAH,iBAAA,OAAAG,CAAA","ignoreList":[],"sourceRoot":"odata/v4"}},{"offset":{"line":187,"column":0},"map":{"version":3,"file":"Application.js","names":["sap","ui","define","ODataModelVersion","Application","constructor","rootComponent","this","_rootComponent","model","getModel","_oDataModelVersion","isA","V4","V2","getRootComponent","fetchDetails","bODataV4","serviceUrl","getServiceUrl","sServiceUrl","hash","window","hasher","getHash","sapApp","getManifestEntry","componentName","id","hashPartial","split","navigationURI","floorplan","semanticObject","action","includes","entitySet","entitySetWithObjectContext","getEntityRelatedInfo","searchParams","URLSearchParams","variantParameter","get","floorPlan","odataModel","getInstance","instance","Error","_resetInstance","__exports","__esModule"],"sources":["Application.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nimport Component from \"sap/ui/core/Component\";\nimport V2ODataModel from \"sap/ui/model/odata/v2/ODataModel\";\nimport V4ODataModel from \"sap/ui/model/odata/v4/ODataModel\";\n\ntype Model = V2ODataModel | V4ODataModel;\n\ntype ObjectPageApplication = {\n\trootComponent: Component;\n\tfloorPlan: string;\n\todataModel: string;\n\tentitySet: string;\n\tserviceUrl: string;\n\tentitySetWithObjectContext: string;\n\tcomponentName: string;\n\tsemanticObject: string;\n\taction: string;\n\tvariantParameter: string | null;\n\tnavigationURI: string | null;\n};\n\nexport enum ODataModelVersion {\n\tV2 = \"V2\",\n\tV4 = \"V4\"\n}\n\nexport type LibVersionInfo = {\n\tbuildTimestamp: string;\n\tname: string;\n\tscmRevision: string;\n\tversion: string;\n};\n\n/**\n * Abstract class for Application Info\n * Provides methods to validate card generation, retrieve entity-related information,\n * and fetch details about the application.\n * @abstract\n */\nexport abstract class Application {\n\tstatic instance: Application | null;\n\t_oDataModelVersion: ODataModelVersion;\n\t_rootComponent: Component;\n\tstatic floorplan: string;\n\n\tpublic abstract validateCardGeneration(): boolean;\n\tpublic abstract getEntityRelatedInfo(): { entitySet: string; entitySetWithObjectContext: string };\n\n\t/**\n\t * Constructor for the class Application\n\t * @param {Component} rootComponent - The root component of the application\n\t */\n\tconstructor(rootComponent: Component) {\n\t\tthis._rootComponent = rootComponent;\n\t\tconst model = rootComponent.getModel() as Model;\n\t\tthis._oDataModelVersion = model.isA<V4ODataModel>(\"sap.ui.model.odata.v4.ODataModel\") ? ODataModelVersion.V4 : ODataModelVersion.V2;\n\t}\n\n\t/**\n\t * Returns the root component of the application\n\t */\n\tgetRootComponent() {\n\t\treturn this._rootComponent;\n\t}\n\n\t/**\n\t * Fetches details for the given application eg: Object Page, Freestyle\n\t */\n\tfetchDetails(): ObjectPageApplication {\n\t\tconst model = this._rootComponent.getModel();\n\t\tconst bODataV4 = this._oDataModelVersion === ODataModelVersion.V4;\n\t\tconst serviceUrl = bODataV4\n\t\t\t? (model as V4ODataModel).getServiceUrl()\n\t\t\t: (model as unknown as { V2ODataModel: V2ODataModel; sServiceUrl: string }).sServiceUrl;\n\t\tconst hash = window.hasher.getHash();\n\t\tconst sapApp = this._rootComponent.getManifestEntry(\"sap.app\");\n\t\tconst componentName = sapApp.id;\n\t\tconst [hashPartial] = hash.split(\"&/\");\n\t\tconst navigationURI = Application.floorplan === \"FreeStyle\" ? hashPartial[1] : null;\n\t\tconst [semanticObject, action] = hashPartial.includes(\"?\") ? hashPartial.split(\"?\")[0].split(\"-\") : hashPartial.split(\"-\");\n\t\tconst { entitySet, entitySetWithObjectContext } = this.getEntityRelatedInfo();\n\t\tconst searchParams = new URLSearchParams(hash.split(\"?\")[1]);\n\t\tconst variantParameter = searchParams.get(\"sap-appvar-id\");\n\n\t\treturn {\n\t\t\trootComponent: this._rootComponent,\n\t\t\tfloorPlan: Application.floorplan,\n\t\t\todataModel: bODataV4 ? ODataModelVersion.V4 : ODataModelVersion.V2,\n\t\t\tentitySet,\n\t\t\tserviceUrl,\n\t\t\tentitySetWithObjectContext: entitySetWithObjectContext,\n\t\t\tcomponentName,\n\t\t\tsemanticObject,\n\t\t\taction,\n\t\t\tvariantParameter,\n\t\t\tnavigationURI\n\t\t};\n\t}\n\n\t/**\n\t * Gets the singleton instance of the Application class.\n\t *\n\t * @returns {Application} - The singleton instance of the Application class.\n\t * @throws {Error} - Throws an error if the instance is not found.\n\t */\n\tpublic static getInstance(): Application {\n\t\tif (Application.instance) {\n\t\t\treturn Application.instance;\n\t\t}\n\n\t\tthrow new Error(\"Application instance not found\");\n\t}\n\n\t/**\n\t * for testing purposes only\n\t */\n\t_resetInstance() {\n\t\tApplication.instance = null;\n\t}\n}\n"],"mappings":"AAAA;;;;AAAA,aAAAA,IAAAC,GAAAC,OAAA,+BAwBYC,EAAiB,SAAjBA,KAAiB,WAAjBA,EAAiB,kBAAjBA,CAAiB,EAAjBA,GAAiB,IAkBtB,MAAeC,EAarBC,YAAYC,GACXC,KAAKC,eAAiBF,EACtB,MAAMG,EAAQH,EAAcI,WAC5BH,KAAKI,mBAAqBF,EAAMG,IAAkB,oCAAsCT,EAAkBU,GAAKV,EAAkBW,EAClI,CAKAC,mBACC,OAAOR,KAAKC,cACb,CAKAQ,eACC,MAAMP,EAAQF,KAAKC,eAAeE,WAClC,MAAMO,EAAWV,KAAKI,qBAAuBR,EAAkBU,GAC/D,MAAMK,EAAaD,EACfR,EAAuBU,gBACvBV,EAAyEW,YAC7E,MAAMC,EAAOC,OAAOC,OAAOC,UAC3B,MAAMC,EAASlB,KAAKC,eAAekB,iBAAiB,WACpD,MAAMC,EAAgBF,EAAOG,GAC7B,MAAOC,GAAeR,EAAKS,MAAM,MACjC,MAAMC,EAAgB3B,EAAY4B,YAAc,YAAcH,EAAY,GAAK,KAC/E,MAAOI,EAAgBC,GAAUL,EAAYM,SAAS,KAAON,EAAYC,MAAM,KAAK,GAAGA,MAAM,KAAOD,EAAYC,MAAM,KACtH,MAAMM,UAAEA,EAASC,2BAAEA,GAA+B9B,KAAK+B,uBACvD,MAAMC,EAAe,IAAIC,gBAAgBnB,EAAKS,MAAM,KAAK,IACzD,MAAMW,EAAmBF,EAAaG,IAAI,iBAE1C,MAAO,CACNpC,cAAeC,KAAKC,eACpBmC,UAAWvC,EAAY4B,UACvBY,WAAY3B,EAAWd,EAAkBU,GAAKV,EAAkBW,GAChEsB,YACAlB,aACAmB,2BAA4BA,EAC5BV,gBACAM,iBACAC,SACAO,mBACAV,gBAEF,CAQA,kBAAAc,GACC,GAAIzC,EAAY0C,SAAU,CACzB,OAAO1C,EAAY0C,QACpB,CAEA,MAAM,IAAIC,MAAM,iCACjB,CAKAC,iBACC5C,EAAY0C,SAAW,IACxB,EACA,IAAAG,EAAA,CAAAC,WAAA,MAAAD,EAAA9C,oBAAA8C,EAAA7C,cAAA,OAAA6C,CAAA","ignoreList":[],"sourceRoot":"pages"}},{"offset":{"line":194,"column":0},"map":{"version":3,"file":"FreeStyle.js","names":["sap","ui","define","Log","sap_cards_ap_common_helpers_ApplicationInfo","sap_cards_ap_common_odata_ODataUtils","sap_cards_ap_generator_odata_ODataUtils","JSONModel","V2ODataModel","V4ODataModel","___Application","_catch","body","recover","result","e","then","AppType","getApplicationFloorplan","getEntitySetWithContextURLs","getEntityNames","getPropertyReference","Application","FreeStyle","constructor","rootComponent","super","floorplan","appComponent","this","_rootComponent","entitySetFromManifest","getManifestEntry","serviceDetails","getServiceDetails","entityDetails","getEntityDetails","serviceURL","length","name","freeStyleDialogModel","isServiceDetailsView","currentService","entitySet","entities","entitySetWithObjectContext","entitySetWithObjectContextList","isApplyServiceDetailsEnabled","isContextPathChanged","isEntityPathChanged","validateCardGeneration","serviceUrl","fetchDetails","getEntityRelatedInfo","getProperty","createInstance","instance","dataSources","ui5Models","Object","values","map","dataSource","uri","filter","undefined","labelWithValue","model","getModel","entityNames","entityName","propertyRef","entity","fetchDataForObjectContext","_this","sFormattedUrl","_temp3","Promise","resolve","reject","read","success","oData","error","oError","_temp2","_temp","context","bindContext","requestObject","updateObjectContextFreeStyleModel","_this2","_temp5","_temp4","setProperty","getFreeStyleModelForDialog","__exports","__esModule"],"sources":["FreeStyle.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nimport Log from \"sap/base/Log\";\nimport { AppType, getApplicationFloorplan } from \"sap/cards/ap/common/helpers/ApplicationInfo\";\nimport { getEntitySetWithContextURLs } from \"sap/cards/ap/common/odata/ODataUtils\";\nimport type { Model } from \"sap/cards/ap/generator/odata/ODataTypes\";\nimport { getEntityNames, getPropertyReference } from \"sap/cards/ap/generator/odata/ODataUtils\";\nimport type Component from \"sap/ui/core/Component\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\nimport V2ODataModel from \"sap/ui/model/odata/v2/ODataModel\";\nimport V4ODataModel from \"sap/ui/model/odata/v4/ODataModel\";\nimport { Application } from \"./Application\";\n\nexport type ServiceDetails = {\n\tname: string;\n\tlabelWithValue: string;\n};\n\nexport type EntityDetails = {\n\tname: string;\n\tlabelWithValue: string;\n};\n\nexport type EntitySetWithContext = {\n\tname: string;\n\tlabelWithValue: string;\n};\n\n/**\n * Class for Object Page Application Info\n * Extends Application\n * implements the abstract function of the parent class validateCardGeneration, getEntityRelatedInfo, createInstance\n */\nexport class FreeStyle extends Application {\n\tfreeStyleDialogModel: JSONModel;\n\n\t/**\n\t * Constructor for ObjectPage class\n\t *\n\t * @param rootComponent The root component of the application.\n\t */\n\tconstructor(rootComponent: Component) {\n\t\tsuper(rootComponent);\n\t\tApplication.floorplan = \"FreeStyle\";\n\t\tconst appComponent = this._rootComponent;\n\t\tconst entitySetFromManifest = appComponent.getManifestEntry(\"/sap.cards.ap/embeds/ObjectPage/default\");\n\t\tconst serviceDetails = this.getServiceDetails();\n\t\tconst entityDetails = this.getEntityDetails();\n\t\tconst serviceURL = serviceDetails.length ? serviceDetails[0].name : \"\";\n\n\t\tthis.freeStyleDialogModel = new JSONModel({\n\t\t\tisServiceDetailsView: true,\n\t\t\tserviceDetails: serviceDetails,\n\t\t\tcurrentService: serviceURL,\n\t\t\tentitySet: entitySetFromManifest ? entitySetFromManifest : \"\",\n\t\t\tentities: entityDetails,\n\t\t\tentitySetWithObjectContext: \"\",\n\t\t\tentitySetWithObjectContextList: [],\n\t\t\tisApplyServiceDetailsEnabled: false,\n\t\t\tisContextPathChanged: false,\n\t\t\tisEntityPathChanged: false\n\t\t});\n\t}\n\n\t/**\n\t * Function to validate the card generation\n\t *\n\t * @returns boolean\n\t */\n\tpublic validateCardGeneration(): boolean {\n\t\tconst { serviceUrl } = this.fetchDetails();\n\t\tif (!serviceUrl) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn getApplicationFloorplan(this._rootComponent) === AppType.FreeStyle;\n\t}\n\n\t/**\n\t * Function to get the entity related information i.e. eentitySet and entitySetWithObjectContext\n\t *\n\t * @returns object\n\t */\n\tpublic getEntityRelatedInfo() {\n\t\treturn {\n\t\t\tentitySet: this.freeStyleDialogModel.getProperty(\"/entitySet\"),\n\t\t\tentitySetWithObjectContext: this.freeStyleDialogModel.getProperty(\"/entitySetWithObjectContext\")\n\t\t};\n\t}\n\n\t/**\n\t * Function to create instance of Application\n\t *\n\t * @param rootComponent The root component of the application\n\t * @returns Application\n\t */\n\tpublic static createInstance(rootComponent: Component): Application {\n\t\tif (!Application.instance) {\n\t\t\tApplication.instance = new FreeStyle(rootComponent);\n\t\t}\n\t\treturn Application.instance;\n\t}\n\n\t/**\n\t * Retrieves service details from the application's manifest.\n\t *\n\t * This function iterates over the UI5 models and matches them with the data sources to extract the service URLs.\n\t * It returns an array of service details, each containing the name and labelWithValue properties.\n\t *\n\t * @returns {ServiceDetails[]} An array of service details, each containing the name and labelWithValue properties.\n\t */\n\tprivate getServiceDetails(): ServiceDetails[] {\n\t\tconst appComponent = this._rootComponent;\n\t\tconst dataSources = appComponent.getManifestEntry(\"/sap.app/dataSources\");\n\t\tconst ui5Models: Record<string, any>[] = appComponent.getManifestEntry(\"/sap.ui5/models\");\n\n\t\treturn Object.values(ui5Models)\n\t\t\t.map(({ dataSource }) => dataSources[dataSource]?.uri)\n\t\t\t.filter((uri): uri is string => uri !== undefined)\n\t\t\t.map((uri) => ({\n\t\t\t\tname: uri,\n\t\t\t\tlabelWithValue: uri\n\t\t\t}));\n\t}\n\n\t/**\n\t * Retrieves the entity details from the model.\n\t *\n\t * @returns {EntityDetails[]} An array of entity details, each containing the name and labelWithValue properties.\n\t * @private\n\t */\n\tprivate getEntityDetails(): EntityDetails[] {\n\t\tconst model = this._rootComponent.getModel() as Model;\n\t\tconst entityNames = getEntityNames(model);\n\n\t\treturn entityNames\n\t\t\t.map((entityName) => {\n\t\t\t\tconst propertyRef = getPropertyReference(model, entityName);\n\t\t\t\treturn propertyRef.length > 0 ? { name: entityName, labelWithValue: entityName } : null;\n\t\t\t})\n\t\t\t.filter((entity): entity is EntityDetails => entity !== null);\n\t}\n\n\t/**\n\t * Fetches data for a given entity set with context.\n\t *\n\t * @param {string} entitySetWithObjectContext - The entity set with context to fetch data for.\n\t * @returns {Promise<void>} A promise that resolves when the data fetching is complete.\n\t */\n\tasync fetchDataForObjectContext(entitySetWithObjectContext: string): Promise<void> {\n\t\tconst model = this._rootComponent.getModel() as Model;\n\t\tconst sFormattedUrl = `/${entitySetWithObjectContext}`;\n\n\t\tif (model instanceof V2ODataModel) {\n\t\t\tawait new Promise((resolve, reject) => {\n\t\t\t\tmodel.read(sFormattedUrl, {\n\t\t\t\t\tsuccess: (oData: Record<string, any>[]) => {\n\t\t\t\t\t\tresolve(oData);\n\t\t\t\t\t},\n\t\t\t\t\terror: (oError: any) => {\n\t\t\t\t\t\tLog.error(\"Error fetching data for object context for OData V2 model\");\n\t\t\t\t\t\treject(oError);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t} else if (model instanceof V4ODataModel) {\n\t\t\ttry {\n\t\t\t\tconst context = model.bindContext(sFormattedUrl);\n\t\t\t\tawait context.requestObject();\n\t\t\t} catch (err) {\n\t\t\t\tLog.error(\"Error fetching data for object context for OData V4 model\");\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Updates the FreeStyle model with context information for the selected service and entity set.\n\t *\n\t * @returns {Promise<void>} A promise that resolves when the model update is complete.\n\t */\n\tasync updateObjectContextFreeStyleModel(): Promise<void> {\n\t\tconst serviceUrl = this.freeStyleDialogModel.getProperty(\"/currentService\");\n\t\tconst entitySet = this.freeStyleDialogModel.getProperty(\"/entitySet\");\n\t\tconst model = this._rootComponent.getModel() as Model;\n\n\t\tif (serviceUrl && entitySet) {\n\t\t\tconst entitySetWithObjectContextList = await getEntitySetWithContextURLs(serviceUrl, entitySet, model);\n\t\t\tconst entitySetWithObjectContext = entitySetWithObjectContextList?.length ? entitySetWithObjectContextList[0].name : \"\";\n\n\t\t\tif (entitySetWithObjectContext) {\n\t\t\t\tawait this.fetchDataForObjectContext(entitySetWithObjectContext);\n\t\t\t\tthis.freeStyleDialogModel.setProperty(\"/entitySetWithObjectContext\", entitySetWithObjectContext);\n\t\t\t\tthis.freeStyleDialogModel.setProperty(\"/entitySetWithObjectContextList\", entitySetWithObjectContextList);\n\t\t\t\tthis.freeStyleDialogModel.setProperty(\"/isApplyServiceDetailsEnabled\", true);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic getFreeStyleModelForDialog() {\n\t\treturn this.freeStyleDialogModel;\n\t}\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":"pages"}},{"offset":{"line":201,"column":0},"map":{"version":3,"file":"ObjectPage.js","names":["sap","ui","define","___Application","Application","ObjectPage","constructor","rootComponent","super","floorplan","validateCardGeneration","serviceUrl","entitySet","entitySetWithObjectContext","this","fetchDetails","indexOf","paramStart","paranEnd","sContext","substring","getEntityRelatedInfo","hash","window","hasher","getHash","path","split","includes","startsWith","replace","index","createInstance","instance","__exports","__esModule"],"sources":["ObjectPage.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nimport Component from \"sap/ui/core/Component\";\nimport { Application } from \"./Application\";\n\n/**\n * Class for Object Page Application Info\n * Extends Application\n * implements the abstract function of the parent class validateCardGeneration, getEntityRelatedInfo, createInstance\n */\nexport class ObjectPage extends Application {\n\t/**\n\t * Constructor for ObjectPage class\n\t *\n\t * @param rootComponent The root component of the application.\n\t */\n\tconstructor(rootComponent: Component) {\n\t\tsuper(rootComponent);\n\t\tApplication.floorplan = \"ObjectPage\";\n\t}\n\n\t/**\n\t * Function to validate the card generation\n\t *\n\t * @returns boolean\n\t */\n\tpublic validateCardGeneration(): boolean {\n\t\tconst { serviceUrl, entitySet, entitySetWithObjectContext } = this.fetchDetails();\n\t\tif (!serviceUrl || !entitySet || !entitySetWithObjectContext) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (entitySetWithObjectContext.indexOf(\"(\") > -1) {\n\t\t\tconst paramStart = entitySetWithObjectContext.indexOf(\"(\");\n\t\t\tconst paranEnd = entitySetWithObjectContext.indexOf(\")\");\n\t\t\tconst sContext = entitySetWithObjectContext.substring(paramStart + 1, paranEnd);\n\t\t\tif (!sContext) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Function to get the entity related information i.e. eentitySet and entitySetWithObjectContext\n\t *\n\t * @returns object\n\t */\n\tpublic getEntityRelatedInfo() {\n\t\tconst hash = window.hasher.getHash();\n\t\tlet path = hash.split(\"&/\")[1] || \"\";\n\t\tpath = path.includes(\"/\") ? path.split(\"/\")[0] : path;\n\n\t\tif (path.startsWith(\"/\")) {\n\t\t\tpath = path.replace(\"/\", \"\");\n\t\t}\n\n\t\tpath = path.includes(\"?\") ? path.split(\"?\")[0] : path;\n\n\t\tconst index = path.indexOf(\"(\");\n\t\tconst entitySet = path.substring(0, index);\n\n\t\treturn {\n\t\t\tentitySet,\n\t\t\tentitySetWithObjectContext: path\n\t\t};\n\t}\n\n\t/**\n\t * Function to create an instance of ObjectPage\n\t *\n\t * @param rootComponent The root component of the application.\n\t * @returns Application\n\t */\n\tpublic static createInstance(rootComponent: Component): Application {\n\t\tif (!Application.instance) {\n\t\t\tApplication.instance = new ObjectPage(rootComponent);\n\t\t}\n\t\treturn Application.instance;\n\t}\n}\n"],"mappings":"AAAA;;;;AAAA,aAAAA,IAAAC,GAAAC,OAAA,2BAAAC,GAAA,mBAKSC,EAAWD,EAAA,eAOb,MAAME,UAAmBD,EAM/BE,YAAYC,GACXC,MAAMD,GACNH,EAAYK,UAAY,YACzB,CAOOC,yBACN,MAAMC,WAAEA,EAAUC,UAAEA,EAASC,2BAAEA,GAA+BC,KAAKC,eACnE,IAAKJ,IAAeC,IAAcC,EAA4B,CAC7D,OAAO,KACR,CAEA,GAAIA,EAA2BG,QAAQ,MAAQ,EAAG,CACjD,MAAMC,EAAaJ,EAA2BG,QAAQ,KACtD,MAAME,EAAWL,EAA2BG,QAAQ,KACpD,MAAMG,EAAWN,EAA2BO,UAAUH,EAAa,EAAGC,GACtE,IAAKC,EAAU,CACd,OAAO,KACR,CACD,KAAO,CACN,OAAO,KACR,CAEA,OAAO,IACR,CAOOE,uBACN,MAAMC,EAAOC,OAAOC,OAAOC,UAC3B,IAAIC,EAAOJ,EAAKK,MAAM,MAAM,IAAM,GAClCD,EAAOA,EAAKE,SAAS,KAAOF,EAAKC,MAAM,KAAK,GAAKD,EAEjD,GAAIA,EAAKG,WAAW,KAAM,CACzBH,EAAOA,EAAKI,QAAQ,IAAK,GAC1B,CAEAJ,EAAOA,EAAKE,SAAS,KAAOF,EAAKC,MAAM,KAAK,GAAKD,EAEjD,MAAMK,EAAQL,EAAKV,QAAQ,KAC3B,MAAMJ,EAAYc,EAAKN,UAAU,EAAGW,GAEpC,MAAO,CACNnB,YACAC,2BAA4Ba,EAE9B,CAQA,qBAAAM,CAA6BzB,GAC5B,IAAKH,EAAY6B,SAAU,CAC1B7B,EAAY6B,SAAW,IAAI5B,EAAWE,EACvC,CACA,OAAOH,EAAY6B,QACpB,EACA,IAAAC,EAAA,CAAAC,WAAA,MAAAD,EAAA7B,aAAA,OAAA6B,CAAA","ignoreList":[],"sourceRoot":"pages"}},{"offset":{"line":208,"column":0},"map":{"version":3,"file":"ActionTypes.js","names":[],"sources":[],"mappings":"","ignoreList":[],"sourceRoot":"types"}},{"offset":{"line":211,"column":0},"map":{"version":3,"file":"CommonTypes.js","names":["sap","ui","define","ColorIndicator","__exports","__esModule"],"sources":["CommonTypes.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nexport enum ColorIndicator {\n\tError = \"Error\",\n\tSuccess = \"Good\",\n\tNone = \"Neutral\",\n\tWarning = \"Critical\",\n\tCritical = \"Warning\",\n\tGood = \"Success\",\n\tNeutral = \"None\"\n}\n\nexport type CriticalityValue = {\n\tactiveCalculation?: boolean;\n\tname?: string;\n\tdeviationRangeLowValue?: string;\n\tdeviationRangeHighValue?: string;\n\ttoleranceRangeLowValue?: string;\n\ttoleranceRangeHighValue?: string;\n\timprovementDirection?: string;\n};\n"],"mappings":"AAAA;;;;AAAA,aAAAA,IAAAC,GAAAC,OAAA,+BAIYC,EAAc,SAAdA,KAAc,iBAAdA,EAAc,kBAAdA,EAAc,kBAAdA,EAAc,sBAAdA,EAAc,sBAAdA,EAAc,kBAAdA,EAAc,yBAAdA,CAAc,EAAdA,GAAc,QAAAC,EAAA,CAAAC,WAAA,MAAAD,EAAAD,iBAAA,OAAAC,CAAA","ignoreList":[],"sourceRoot":"types"}},{"offset":{"line":218,"column":0},"map":{"version":3,"file":"PropertyTypes.js","names":[],"sources":[],"mappings":"","ignoreList":[],"sourceRoot":"types"}},{"offset":{"line":221,"column":0},"map":{"version":3,"file":"CommonUtils.js","names":["sap","ui","define","CoreElement","___types_CommonTypes","ColorIndicator","isBinding","sPropertyValue","startsWith","endsWith","isActiveCalculation","value","activeCalculation","getColorForGroup","criticalityValue","staticValues","deviationLow","deviationRangeLowValue","deviationHigh","deviationRangeHighValue","toleranceLow","toleranceRangeLowValue","toleranceHigh","toleranceRangeHighValue","sImprovementDirection","improvementDirection","oCriticalityConfigValues","None","Negative","Critical","Positive","name","JSON","stringify","includes","checkForDateType","propertyType","supportedDateTypes","getCardGeneratorDialog","dialogId","getElementById","getDialogModel","modelName","dialog","getModel","hasBooleanBindingExpression","propertyValue","normalizedPath","replace","extractValueWithoutBooleanExprBinding","path","regex","match","exec","__exports","__esModule"],"sources":["CommonUtils.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nimport CoreElement from \"sap/ui/core/Element\";\nimport type JSONModel from \"sap/ui/model/json/JSONModel\";\nimport type ResourceModel from \"sap/ui/model/resource/ResourceModel\";\nimport { ColorIndicator, CriticalityValue } from \"../types/CommonTypes\";\n\n/**\n *\n * @param sPropertyValue\n * @returns true if the property value is a binding\n */\nexport function isBinding(sPropertyValue: string) {\n\treturn sPropertyValue && sPropertyValue.startsWith(\"{\") && sPropertyValue.endsWith(\"}\");\n}\n\n/**\n * To determine if the given value is a activation `CriticalityValue`.\n *\n * @param {CriticalityValue | string} value - The value to check.\n * @returns {value is CriticalityValue} True if the value is a `CriticalityValue`, false otherwise.\n */\nfunction isActiveCalculation(value: CriticalityValue | string): value is CriticalityValue {\n\treturn (value as CriticalityValue).activeCalculation === true;\n}\n\n/**\n * Retrieves the color representation for a given criticality value or string.\n *\n * @param {CriticalityValue | string} criticalityValue - The criticality value or string to evaluate.\n * @returns {string | undefined} The formatted string representing the color, or undefined if the input is not valid.\n */\nexport function getColorForGroup(criticalityValue: CriticalityValue | string): string | undefined {\n\tif (criticalityValue) {\n\t\tif (isActiveCalculation(criticalityValue)) {\n\t\t\tconst staticValues = {\n\t\t\t\tdeviationLow: criticalityValue.deviationRangeLowValue,\n\t\t\t\tdeviationHigh: criticalityValue.deviationRangeHighValue,\n\t\t\t\ttoleranceLow: criticalityValue.toleranceRangeLowValue,\n\t\t\t\ttoleranceHigh: criticalityValue.toleranceRangeHighValue,\n\t\t\t\tsImprovementDirection: criticalityValue.improvementDirection,\n\t\t\t\toCriticalityConfigValues: { None: \"None\", Negative: \"Error\", Critical: \"Warning\", Positive: \"Success\" }\n\t\t\t};\n\t\t\treturn \"{= extension.formatters.formatValueColor(${\" + criticalityValue.name + \"},\" + JSON.stringify(staticValues) + \") }\";\n\t\t} else if (criticalityValue.includes(\"extension.formatters.formatCriticality\")) {\n\t\t\treturn criticalityValue;\n\t\t} else if (isBinding(criticalityValue)) {\n\t\t\treturn \"{= extension.formatters.formatCriticality($\" + criticalityValue + \", 'state') }\";\n\t\t}\n\t\treturn ColorIndicator[criticalityValue as keyof typeof ColorIndicator];\n\t}\n}\n\n/**\n * Checks if the given property type is a supported date type.\n *\n * @param {string} [propertyType] - The property type to check.\n * @returns {boolean} - Returns true if the property type is a supported date type, otherwise false.\n */\nexport function checkForDateType(propertyType?: string): boolean {\n\tif (!propertyType) {\n\t\treturn false;\n\t}\n\n\tconst supportedDateTypes = [\"Edm.Date\", \"Edm.DateTimeOffset\", \"Edm.DateTime\"];\n\treturn supportedDateTypes.includes(propertyType);\n}\n\n/**\n * Retrieves the card generator dialog using the dialog ID.\n *\n * @returns The card generator dialog.\n */\nexport function getCardGeneratorDialog() {\n\tconst dialogId = \"cardGeneratorDialog--cardGeneratorDialog\";\n\treturn CoreElement.getElementById(dialogId);\n}\n\n/**\n * Retrieves the dialog model for the card generator UI / resources / previewOptions.\n *\n * @param modelName\n * @returns The model for the dialog.\n */\nexport function getDialogModel(modelName?: string) {\n\tconst dialog = getCardGeneratorDialog();\n\n\tif (modelName === \"i18n\") {\n\t\treturn dialog?.getModel(\"i18n\") as ResourceModel;\n\t}\n\n\treturn modelName ? (dialog?.getModel(modelName) as JSONModel) : (dialog?.getModel() as JSONModel);\n}\n\n/**\n * The function checks if the property value has a boolean binding expression\n *\n * @param propertyValue\n * @returns\n */\nexport function hasBooleanBindingExpression(propertyValue = \"\"): boolean {\n\tconst normalizedPath = propertyValue.replace(/\\s+/g, \"\");\n\treturn normalizedPath.includes(\"===true?\");\n}\n\n/**\n * Extracts the path inside a binding expression without the boolean expression.\n *\n * This function takes a string containing a binding expression in the format `{= ${property} === true ? {{Yes}} : {{No}}}`\n * and extracts the content inside the curly braces.\n *\n * @param path - The string containing the binding expression.\n * @returns The extracted path inside the binding expression, or \"\" if no match is found.\n */\nexport function extractValueWithoutBooleanExprBinding(path: string) {\n\tconst regex = /\\${([^}]+)}/; // Matches anything inside ${...} until the closing brace\n\tconst match = regex.exec(path);\n\treturn match?.[1] || \"\";\n}\n"],"mappings":"AAAA;;;;AAAA,aAAAA,IAAAC,GAAAC,OAAA,wDAAAC,EAAAC,GAAA,mBAOSC,EAAcD,EAAA,kBAOhB,SAASE,EAAUC,GACzB,OAAOA,GAAkBA,EAAeC,WAAW,MAAQD,EAAeE,SAAS,IACpF,CAQA,SAASC,EAAoBC,GAC5B,OAAQA,EAA2BC,oBAAsB,IAC1D,CAQO,SAASC,EAAiBC,GAChC,GAAIA,EAAkB,CACrB,GAAIJ,EAAoBI,GAAmB,CAC1C,MAAMC,EAAe,CACpBC,aAAcF,EAAiBG,uBAC/BC,cAAeJ,EAAiBK,wBAChCC,aAAcN,EAAiBO,uBAC/BC,cAAeR,EAAiBS,wBAChCC,sBAAuBV,EAAiBW,qBACxCC,yBAA0B,CAAEC,KAAM,OAAQC,SAAU,QAASC,SAAU,UAAWC,SAAU,YAE7F,MAAO,8CAAgDhB,EAAiBiB,KAAO,KAAOC,KAAKC,UAAUlB,GAAgB,KACtH,MAAO,GAAID,EAAiBoB,SAAS,0CAA2C,CAC/E,OAAOpB,CACR,MAAO,GAAIR,EAAUQ,GAAmB,CACvC,MAAO,8CAAgDA,EAAmB,cAC3E,CACA,OAAOT,EAAeS,EACvB,CACD,CAQO,SAASqB,EAAiBC,GAChC,IAAKA,EAAc,CAClB,OAAO,KACR,CAEA,MAAMC,EAAqB,CAAC,WAAY,qBAAsB,gBAC9D,OAAOA,EAAmBH,SAASE,EACpC,CAOO,SAASE,IACf,MAAMC,EAAW,2CACjB,OAAOpC,EAAYqC,eAAeD,EACnC,CAQO,SAASE,EAAeC,GAC9B,MAAMC,EAASL,IAEf,GAAII,IAAc,OAAQ,CACzB,OAAOC,GAAQC,SAAS,OACzB,CAEA,OAAOF,EAAaC,GAAQC,SAASF,GAA4BC,GAAQC,UAC1E,CAQO,SAASC,EAA4BC,EAAgB,IAC3D,MAAMC,EAAiBD,EAAcE,QAAQ,OAAQ,IACrD,OAAOD,EAAeb,SAAS,WAChC,CAWO,SAASe,EAAsCC,GACrD,MAAMC,EAAQ,cACd,MAAMC,EAAQD,EAAME,KAAKH,GACzB,OAAOE,IAAQ,IAAM,EACtB,CAAC,IAAAE,EAAA,CAAAC,WAAA,MAAAD,EAAAhD,YAAAgD,EAAAzC,mBAAAyC,EAAAnB,mBAAAmB,EAAAhB,yBAAAgB,EAAAb,iBAAAa,EAAAT,8BAAAS,EAAAL,wCAAA,OAAAK,CAAA","ignoreList":[],"sourceRoot":"utils"}},{"offset":{"line":228,"column":0},"map":{"version":3,"file":"IntegrationCardManifestParser.js","names":["sap","ui","define","___odata_ODataUtils","___pages_Application","getMetaModelObjectForEntitySet","Application","ODataModelVersion","getAllValues","subManifest","values","key","value","push","getQueryParameters","applicationInstance","getInstance","rootComponent","getRootComponent","model","getModel","entitySet","odataModel","fetchDetails","isODataV4Model","V4","properties","navigationProperties","complexProperties","getMetaModel","queryParameters","filter","property","some","includes","name","map","forEach","navigationProperty","navigationPropertyName","selectedProperties","length","complexProperty","complexPropertyName","selectedComplexProperties","concat","getHeaderProperties","cardManifest","header","getContentProperties","content","contentQueryParams","footerQueryParams","getFooterProperties","selectedNavigationProperties","actionsStrips","footer","actionsStrip","actions","enabled","__exports","__esModule"],"sources":["IntegrationCardManifestParser.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nimport type { CardManifest } from \"sap/ui/integration/widgets/Card\";\nimport V2ODataModel from \"sap/ui/model/odata/v2/ODataModel\";\nimport V4ODataModel from \"sap/ui/model/odata/v4/ODataModel\";\nimport { QueryParameters } from \"../helpers/Batch\";\nimport { getMetaModelObjectForEntitySet } from \"../odata/ODataUtils\";\nimport { Application, ODataModelVersion } from \"../pages/Application\";\n\ntype Model = V2ODataModel | V4ODataModel;\n\nconst getAllValues = (subManifest: Record<string, string>): string[] => {\n\tconst values: string[] = [];\n\n\tfor (const key in subManifest) {\n\t\tconst value = subManifest[key];\n\t\tif (typeof value === \"string\") {\n\t\t\tvalues.push(subManifest[key]);\n\t\t} else {\n\t\t\tvalues.push(...getAllValues(value));\n\t\t}\n\t}\n\n\treturn values;\n};\n\nconst getQueryParameters = (values: string[]) => {\n\tconst applicationInstance = Application.getInstance();\n\tconst rootComponent = applicationInstance.getRootComponent();\n\tconst model = rootComponent.getModel() as Model;\n\tconst { entitySet, odataModel } = applicationInstance.fetchDetails();\n\tconst isODataV4Model = odataModel === ODataModelVersion.V4;\n\tconst { properties, navigationProperties, complexProperties } = getMetaModelObjectForEntitySet(\n\t\tmodel.getMetaModel(),\n\t\tentitySet,\n\t\tisODataV4Model\n\t);\n\n\tconst queryParameters: QueryParameters = {\n\t\tproperties: [],\n\t\tnavigationProperties: []\n\t};\n\n\tqueryParameters.properties = properties\n\t\t.filter((property) => {\n\t\t\treturn values.some((value) => {\n\t\t\t\treturn value && value.includes(`{${property.name}}`);\n\t\t\t});\n\t\t})\n\t\t.map((property) => property.name);\n\n\tnavigationProperties.forEach((navigationProperty) => {\n\t\tconst navigationPropertyName = navigationProperty.name;\n\t\tconst properties = navigationProperty.properties;\n\t\tconst selectedProperties = properties\n\t\t\t.filter((property) => {\n\t\t\t\treturn values.some((value) => {\n\t\t\t\t\treturn value && value.includes(`{${navigationPropertyName}/${property.name}}`);\n\t\t\t\t});\n\t\t\t})\n\t\t\t.map((property) => property.name);\n\n\t\tif (selectedProperties.length) {\n\t\t\tqueryParameters.navigationProperties.push({\n\t\t\t\tname: navigationPropertyName,\n\t\t\t\tproperties: selectedProperties\n\t\t\t});\n\t\t}\n\t});\n\n\tcomplexProperties.forEach((complexProperty) => {\n\t\tconst complexPropertyName = complexProperty.name;\n\t\tconst properties = complexProperty.properties;\n\t\tconst selectedProperties = properties\n\t\t\t.filter((property) => {\n\t\t\t\treturn values.some((value) => {\n\t\t\t\t\treturn value && value.includes(`{${complexPropertyName}/${property.name}}`);\n\t\t\t\t});\n\t\t\t})\n\t\t\t.map((property) => property.name);\n\n\t\tconst selectedComplexProperties = selectedProperties.map((property) => {\n\t\t\treturn `${complexPropertyName}/${property}`;\n\t\t});\n\t\tif (selectedProperties.length) {\n\t\t\tqueryParameters.properties = queryParameters.properties.concat(selectedComplexProperties);\n\t\t}\n\t});\n\n\treturn queryParameters;\n};\n\nexport const getHeaderProperties = (cardManifest: CardManifest): QueryParameters => {\n\tconst values = getAllValues(cardManifest[\"sap.card\"].header as Record<string, string>);\n\treturn getQueryParameters(values);\n};\n\nexport const getContentProperties = (cardManifest: CardManifest): QueryParameters => {\n\tconst values = getAllValues(cardManifest[\"sap.card\"].content as unknown as Record<string, string>);\n\tconst contentQueryParams = getQueryParameters(values);\n\tconst footerQueryParams = getFooterProperties(cardManifest);\n\tconst selectedProperties = contentQueryParams.properties.concat(footerQueryParams.properties);\n\tconst selectedNavigationProperties = contentQueryParams.navigationProperties.concat(footerQueryParams.navigationProperties);\n\n\treturn {\n\t\tproperties: selectedProperties,\n\t\tnavigationProperties: selectedNavigationProperties\n\t};\n};\n\nconst getFooterProperties = (cardManifest: CardManifest): QueryParameters => {\n\tconst actionsStrips = cardManifest[\"sap.card\"].footer?.actionsStrip;\n\n\tconst values =\n\t\tactionsStrips?.map((actionsStrip) => {\n\t\t\treturn actionsStrip.actions[0].enabled as string;\n\t\t}) || [];\n\n\treturn getQueryParameters(values);\n};\n"],"mappings":"AAAA;;;;AAAA,aAAAA,IAAAC,GAAAC,OAAA,wDAAAC,EAAAC,GAAA,mBAQSC,EAA8BF,EAAA,wCAC9BG,EAAWF,EAAA,qBAAEG,EAAiBH,EAAA,qBAIvC,MAAMI,EAAgBC,IACrB,MAAMC,EAAmB,GAEzB,IAAK,MAAMC,KAAOF,EAAa,CAC9B,MAAMG,EAAQH,EAAYE,GAC1B,UAAWC,IAAU,SAAU,CAC9BF,EAAOG,KAAKJ,EAAYE,GACzB,KAAO,CACND,EAAOG,QAAQL,EAAaI,GAC7B,CACD,CAEA,OAAOF,GAGR,MAAMI,EAAsBJ,IAC3B,MAAMK,EAAsBT,EAAYU,cACxC,MAAMC,EAAgBF,EAAoBG,mBAC1C,MAAMC,EAAQF,EAAcG,WAC5B,MAAMC,UAAEA,EAASC,WAAEA,GAAeP,EAAoBQ,eACtD,MAAMC,EAAiBF,IAAef,EAAkBkB,GACxD,MAAMC,WAAEA,EAAUC,qBAAEA,EAAoBC,kBAAEA,GAAsBvB,EAC/Dc,EAAMU,eACNR,EACAG,GAGD,MAAMM,EAAmC,CACxCJ,WAAY,GACZC,qBAAsB,IAGvBG,EAAgBJ,WAAaA,EAC3BK,OAAQC,GACDtB,EAAOuB,KAAMrB,GACZA,GAASA,EAAMsB,SAAS,IAAIF,EAASG,WAG7CC,IAAKJ,GAAaA,EAASG,MAE7BR,EAAqBU,QAASC,IAC7B,MAAMC,EAAyBD,EAAmBH,KAClD,MAAMT,EAAaY,EAAmBZ,WACtC,MAAMc,EAAqBd,EACzBK,OAAQC,GACDtB,EAAOuB,KAAMrB,GACZA,GAASA,EAAMsB,SAAS,IAAIK,KAA0BP,EAASG,WAGvEC,IAAKJ,GAAaA,EAASG,MAE7B,GAAIK,EAAmBC,OAAQ,CAC9BX,EAAgBH,qBAAqBd,KAAK,CACzCsB,KAAMI,EACNb,WAAYc,GAEd,IAGDZ,EAAkBS,QAASK,IAC1B,MAAMC,EAAsBD,EAAgBP,KAC5C,MAAMT,EAAagB,EAAgBhB,WACnC,MAAMc,EAAqBd,EACzBK,OAAQC,GACDtB,EAAOuB,KAAMrB,GACZA,GAASA,EAAMsB,SAAS,IAAIS,KAAuBX,EAASG,WAGpEC,IAAKJ,GAAaA,EAASG,MAE7B,MAAMS,EAA4BJ,EAAmBJ,IAAKJ,GAClD,GAAGW,KAAuBX,KAElC,GAAIQ,EAAmBC,OAAQ,CAC9BX,EAAgBJ,WAAaI,EAAgBJ,WAAWmB,OAAOD,EAChE,IAGD,OAAOd,GAGD,MAAMgB,EAAuBC,IACnC,MAAMrC,EAASF,EAAauC,EAAa,YAAYC,QACrD,OAAOlC,EAAmBJ,IAGpB,MAAMuC,EAAwBF,IACpC,MAAMrC,EAASF,EAAauC,EAAa,YAAYG,SACrD,MAAMC,EAAqBrC,EAAmBJ,GAC9C,MAAM0C,EAAoBC,EAAoBN,GAC9C,MAAMP,EAAqBW,EAAmBzB,WAAWmB,OAAOO,EAAkB1B,YAClF,MAAM4B,EAA+BH,EAAmBxB,qBAAqBkB,OAAOO,EAAkBzB,sBAEtG,MAAO,CACND,WAAYc,EACZb,qBAAsB2B,IAIxB,MAAMD,EAAuBN,IAC5B,MAAMQ,EAAgBR,EAAa,YAAYS,QAAQC,aAEvD,MAAM/C,EACL6C,GAAenB,IAAKqB,GACZA,EAAaC,QAAQ,GAAGC,UAC1B,GAEP,OAAO7C,EAAmBJ,IACzB,IAAAkD,EAAA,CAAAC,WAAA,MAAAD,EAAAd,sBAAAc,EAAAX,uBAAA,OAAAW,CAAA","ignoreList":[],"sourceRoot":"utils"}}]}