{"version":3,"file":"MetadataAnalyzer-dbg-dbg.js","names":["sap","ui","define","getPropertyInfoFromEntity","model","entitySetName","metaModel","getMetaModel","entitySet","getObject","entityTypeName","$Type","entityType","properties","extractPropertiesFromEntityType","map","property","type","name","getPropertyReferenceKey","entitySetType","propertyRefKey","$Key","filter","includes","Object","keys","$kind","getSemanticKeys","__exports","__esModule"],"sources":["MetadataAnalyzer.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nimport type ODataMetaModel from \"sap/ui/model/odata/v4/ODataMetaModel\";\nimport type ODataModel from \"sap/ui/model/odata/v4/ODataModel\";\n\nexport type Property = {\n\ttype: string;\n\tname: string;\n};\n\nexport type SemanticKey = {\n\t$PropertyPath: string;\n};\n\ntype MetaModelEntityType = { $Type: string; $Key: string[] } & {\n\t[K: string]: MetaModelProperty | MetaModelNavProperty;\n};\n\ntype MetaModelProperty = {\n\t$Name: string;\n\t$kind: string;\n\t$Type: string;\n};\n\ntype MetaModelNavProperty = {\n\t$kind: string;\n\t$Type: string;\n\t$isCollection: boolean;\n};\n\n/**\n * Retrieves property information from a given entity set in the OData model.\n *\n * @param model - The OData model instance.\n * @param entitySetName - The name of the entity set.\n * @returns An array of properties with their types and names.\n */\nexport const getPropertyInfoFromEntity = function (model: ODataModel, entitySetName: string): Property[] {\n\tconst metaModel = model.getMetaModel();\n\tconst entitySet = metaModel.getObject(`/${entitySetName}`);\n\tconst entityTypeName = entitySet.$Type;\n\tconst entityType = metaModel.getObject(`/${entityTypeName}`) as MetaModelEntityType;\n\tconst properties = extractPropertiesFromEntityType(entityType);\n\n\treturn properties.map((property) => ({\n\t\ttype: property.type,\n\t\tname: property.name\n\t}));\n};\n\n/**\n * Retrieves the key properties of a given entity set in the OData model.\n *\n * @param model - The OData model instance.\n * @param entitySetName - The name of the entity set.\n * @returns An array of key properties with their types and names.\n */\nexport const getPropertyReferenceKey = function (model: ODataModel, entitySetName: string): Property[] {\n\tconst entitySet = model.getMetaModel().getObject(`/${entitySetName}`);\n\tconst entitySetType = entitySet?.$Type;\n\tconst propertyRefKey = model.getMetaModel().getObject(\"/\" + entitySetType)?.$Key;\n\tconst properties = getPropertyInfoFromEntity(model, entitySetName);\n\treturn properties.filter((property) => propertyRefKey.includes(property.name));\n};\n\n/**\n * Extracts properties from a given entity type.\n *\n * @param entityType - The entity type object.\n * @returns An array of properties with their types and names.\n */\nconst extractPropertiesFromEntityType = function (entityType: MetaModelEntityType): Property[] {\n\treturn Object.keys(entityType)\n\t\t.filter(\n\t\t\t(property) =>\n\t\t\t\tproperty !== \"SAP__Messages\" && typeof entityType[property] === \"object\" && entityType[property].$kind === \"Property\"\n\t\t)\n\t\t.map((property) => ({\n\t\t\tname: property,\n\t\t\ttype: entityType[property].$Type\n\t\t}));\n};\n\n/**\n * Retrieves the semantic keys of a given entity set from the OData meta model.\n *\n * @param metaModel - The OData meta model instance.\n * @param entitySetName - The name of the entity set.\n * @returns An array of semantic keys.\n */\nexport function getSemanticKeys(metaModel: ODataMetaModel, entitySetName: string): SemanticKey[] {\n\treturn metaModel.getObject(`/${entitySetName}/@com.sap.vocabularies.Common.v1.SemanticKey`) || [];\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AAHA;;AAAAA,GAAA,CAAAC,EAAA,CAAAC,MAAA;EAAA;;EAgCA;AACA;AACA;AACA;AACA;AACA;AACA;EACO,MAAMC,yBAAyB,GAAG,SAAAA,CAAUC,KAAiB,EAAEC,aAAqB,EAAc;IACxG,MAAMC,SAAS,GAAGF,KAAK,CAACG,YAAY,CAAC,CAAC;IACtC,MAAMC,SAAS,GAAGF,SAAS,CAACG,SAAS,CAAC,IAAIJ,aAAa,EAAE,CAAC;IAC1D,MAAMK,cAAc,GAAGF,SAAS,CAACG,KAAK;IACtC,MAAMC,UAAU,GAAGN,SAAS,CAACG,SAAS,CAAC,IAAIC,cAAc,EAAE,CAAwB;IACnF,MAAMG,UAAU,GAAGC,+BAA+B,CAACF,UAAU,CAAC;IAE9D,OAAOC,UAAU,CAACE,GAAG,CAAEC,QAAQ,KAAM;MACpCC,IAAI,EAAED,QAAQ,CAACC,IAAI;MACnBC,IAAI,EAAEF,QAAQ,CAACE;IAChB,CAAC,CAAC,CAAC;EACJ,CAAC;;EAED;AACA;AACA;AACA;AACA;AACA;AACA;EACO,MAAMC,uBAAuB,GAAG,SAAAA,CAAUf,KAAiB,EAAEC,aAAqB,EAAc;IACtG,MAAMG,SAAS,GAAGJ,KAAK,CAACG,YAAY,CAAC,CAAC,CAACE,SAAS,CAAC,IAAIJ,aAAa,EAAE,CAAC;IACrE,MAAMe,aAAa,GAAGZ,SAAS,EAAEG,KAAK;IACtC,MAAMU,cAAc,GAAGjB,KAAK,CAACG,YAAY,CAAC,CAAC,CAACE,SAAS,CAAC,GAAG,GAAGW,aAAa,CAAC,EAAEE,IAAI;IAChF,MAAMT,UAAU,GAAGV,yBAAyB,CAACC,KAAK,EAAEC,aAAa,CAAC;IAClE,OAAOQ,UAAU,CAACU,MAAM,CAAEP,QAAQ,IAAKK,cAAc,CAACG,QAAQ,CAACR,QAAQ,CAACE,IAAI,CAAC,CAAC;EAC/E,CAAC;;EAED;AACA;AACA;AACA;AACA;AACA;EACA,MAAMJ,+BAA+B,GAAG,SAAAA,CAAUF,UAA+B,EAAc;IAC9F,OAAOa,MAAM,CAACC,IAAI,CAACd,UAAU,CAAC,CAC5BW,MAAM,CACLP,QAAQ,IACRA,QAAQ,KAAK,eAAe,IAAI,OAAOJ,UAAU,CAACI,QAAQ,CAAC,KAAK,QAAQ,IAAIJ,UAAU,CAACI,QAAQ,CAAC,CAACW,KAAK,KAAK,UAC7G,CAAC,CACAZ,GAAG,CAAEC,QAAQ,KAAM;MACnBE,IAAI,EAAEF,QAAQ;MACdC,IAAI,EAAEL,UAAU,CAACI,QAAQ,CAAC,CAACL;IAC5B,CAAC,CAAC,CAAC;EACL,CAAC;;EAED;AACA;AACA;AACA;AACA;AACA;AACA;EACO,SAASiB,eAAeA,CAACtB,SAAyB,EAAED,aAAqB,EAAiB;IAChG,OAAOC,SAAS,CAACG,SAAS,CAAC,IAAIJ,aAAa,8CAA8C,CAAC,IAAI,EAAE;EAClG;EAAC,IAAAwB,SAAA;IAAAC,UAAA;EAAA;EAAAD,SAAA,CAAA1B,yBAAA,GAAAA,yBAAA;EAAA0B,SAAA,CAAAV,uBAAA,GAAAA,uBAAA;EAAAU,SAAA,CAAAD,eAAA,GAAAA,eAAA;EAAA,OAAAC,SAAA;AAAA","ignoreList":[]}