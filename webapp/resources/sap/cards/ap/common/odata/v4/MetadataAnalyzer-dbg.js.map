{"version":3,"file":"MetadataAnalyzer-dbg.js","names":["sap","ui","define","getPropertyInfoFromEntity","model","entitySetName","metaModel","getMetaModel","entitySet","getObject","entityTypeName","$Type","entityType","properties","extractPropertiesFromEntityType","map","property","type","name","getPropertyReferenceKey","entitySetType","propertyRefKey","$Key","filter","includes","Object","keys","$kind","getSemanticKeys","__exports","__esModule"],"sources":["MetadataAnalyzer.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nimport type ODataMetaModel from \"sap/ui/model/odata/v4/ODataMetaModel\";\nimport type ODataModel from \"sap/ui/model/odata/v4/ODataModel\";\n\nexport type Property = {\n\ttype: string;\n\tname: string;\n};\n\nexport type SemanticKey = {\n\t$PropertyPath: string;\n};\n\ntype MetaModelEntityType = { $Type: string; $Key: string[] } & {\n\t[K: string]: MetaModelProperty | MetaModelNavProperty;\n};\n\ntype MetaModelProperty = {\n\t$Name: string;\n\t$kind: string;\n\t$Type: string;\n};\n\ntype MetaModelNavProperty = {\n\t$kind: string;\n\t$Type: string;\n\t$isCollection: boolean;\n};\n\n/**\n * Retrieves property information from a given entity set in the OData model.\n *\n * @param model - The OData model instance.\n * @param entitySetName - The name of the entity set.\n * @returns An array of properties with their types and names.\n */\nexport const getPropertyInfoFromEntity = function (model: ODataModel, entitySetName: string): Property[] {\n\tconst metaModel = model.getMetaModel();\n\tconst entitySet = metaModel.getObject(`/${entitySetName}`);\n\tconst entityTypeName = entitySet.$Type;\n\tconst entityType = metaModel.getObject(`/${entityTypeName}`) as MetaModelEntityType;\n\tconst properties = extractPropertiesFromEntityType(entityType);\n\n\treturn properties.map((property) => ({\n\t\ttype: property.type,\n\t\tname: property.name\n\t}));\n};\n\n/**\n * Retrieves the key properties of a given entity set in the OData model.\n *\n * @param model - The OData model instance.\n * @param entitySetName - The name of the entity set.\n * @returns An array of key properties with their types and names.\n */\nexport const getPropertyReferenceKey = function (model: ODataModel, entitySetName: string): Property[] {\n\tconst entitySet = model.getMetaModel().getObject(`/${entitySetName}`);\n\tconst entitySetType = entitySet?.$Type;\n\tconst propertyRefKey = model.getMetaModel().getObject(\"/\" + entitySetType)?.$Key;\n\tconst properties = getPropertyInfoFromEntity(model, entitySetName);\n\treturn properties.filter((property) => propertyRefKey.includes(property.name));\n};\n\n/**\n * Extracts properties from a given entity type.\n *\n * @param entityType - The entity type object.\n * @returns An array of properties with their types and names.\n */\nconst extractPropertiesFromEntityType = function (entityType: MetaModelEntityType): Property[] {\n\treturn Object.keys(entityType)\n\t\t.filter(\n\t\t\t(property) =>\n\t\t\t\tproperty !== \"SAP__Messages\" && typeof entityType[property] === \"object\" && entityType[property].$kind === \"Property\"\n\t\t)\n\t\t.map((property) => ({\n\t\t\tname: property,\n\t\t\ttype: entityType[property].$Type\n\t\t}));\n};\n\n/**\n * Retrieves the semantic keys of a given entity set from the OData meta model.\n *\n * @param metaModel - The OData meta model instance.\n * @param entitySetName - The name of the entity set.\n * @returns An array of semantic keys.\n */\nexport function getSemanticKeys(metaModel: ODataMetaModel, entitySetName: string): SemanticKey[] {\n\treturn metaModel.getObject(`/${entitySetName}/@com.sap.vocabularies.Common.v1.SemanticKey`) || [];\n}\n"],"mappings":";;;;AAAA,aAAAA,IAAAC,GAAAC,OAAA,2BAuCO,MAAMC,EAA4B,SAAUC,EAAmBC,GACrE,MAAMC,EAAYF,EAAMG,eACxB,MAAMC,EAAYF,EAAUG,UAAU,IAAIJ,KAC1C,MAAMK,EAAiBF,EAAUG,MACjC,MAAMC,EAAaN,EAAUG,UAAU,IAAIC,KAC3C,MAAMG,EAAaC,EAAgCF,GAEnD,OAAOC,EAAWE,IAAKC,IAAQ,CAC9BC,KAAMD,EAASC,KACfC,KAAMF,EAASE,OAEjB,EASO,MAAMC,EAA0B,SAAUf,EAAmBC,GACnE,MAAMG,EAAYJ,EAAMG,eAAeE,UAAU,IAAIJ,KACrD,MAAMe,EAAgBZ,GAAWG,MACjC,MAAMU,EAAiBjB,EAAMG,eAAeE,UAAU,IAAMW,IAAgBE,KAC5E,MAAMT,EAAaV,EAA0BC,EAAOC,GACpD,OAAOQ,EAAWU,OAAQP,GAAaK,EAAeG,SAASR,EAASE,MACzE,EAQA,MAAMJ,EAAkC,SAAUF,GACjD,OAAOa,OAAOC,KAAKd,GACjBW,OACCP,GACAA,IAAa,wBAA0BJ,EAAWI,KAAc,UAAYJ,EAAWI,GAAUW,QAAU,YAE5GZ,IAAKC,IAAQ,CACbE,KAAMF,EACNC,KAAML,EAAWI,GAAUL,QAE9B,EASO,SAASiB,EAAgBtB,EAA2BD,GAC1D,OAAOC,EAAUG,UAAU,IAAIJ,kDAAgE,EAChG,CAAC,IAAAwB,EAAA,CAAAC,WAAA,MAAAD,EAAA1B,4BAAA0B,EAAAV,0BAAAU,EAAAD,kBAAA,OAAAC,CAAA","ignoreList":[]}