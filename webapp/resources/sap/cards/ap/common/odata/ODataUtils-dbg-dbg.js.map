{"version":3,"file":"ODataUtils-dbg-dbg.js","names":["sap","ui","define","encodeURLParameters","Filter","FilterOperator","V2OdataUtils","V2ODataModel","V4ODataUtils","___v2_MetadataAnalyzer","___v4_MetadataAnalyzer","_catch","body","recover","result","e","then","fetchDataAsync","url","path","urlParameters","bODataV4","queryParams","Object","keys","forEach","key","length","fetchDataAsyncV4","fetchDataAsyncV2","Promise","reject","getContextFromKeys","semanticKeys","contextPath","referenceKeys","model","metaModel","getMetaModel","resolve","filter","createFilterFromPath","absolutePath","startsWith","metaContext","getMetaContext","listBinding","bindList","getPath","undefined","$select","join","requestContexts","contexts","getPropertyReference","getPropertyReferenceKey","getSemanticKeys","isSingleKeyWithoutAssignment","includes","handleSingleProperty","propertyReferenceKey","contextProperties","guidKey","find","property","type","name","guidValue","formatLiteral","map","ref","addIsActiveEntityProperty","currentProperty","split","element","push","unquoteAndDecode","value","endsWith","decodeURIComponent","substring","keyValues","indexOf","keyValuesMap","Map","keyIndex","keyValue","set","filters","semanticKey","semanticKeyValue","get","operator","EQ","value1","getContextPropertiesForODataV4","_exit","_temp2","_result","index","entitySetName","lastIndex","propertyPath","$PropertyPath","_temp","dataContext","dataContextPath","_propertyReferenceKey","getProperty","createContextParameter","oDataV4","_exit2","_temp4","_result2","_temp3","contextParameters","_contextParameters$jo","formattedUrl","format","parameters","sFormattedUrl","fetchFileContent","data","catch","err","Error","oModel","fnSuccess","oData","fnFailure","oError","read","success","error","isODataV4Model","isA","createEntitySetWithContextUris","entityContextPath","entitySet","appModel","entityKeyProperties","updatedDataValues","item","every","contextUri","entries","parameterPlaceholder","replace","getEntitySetWithContextURLs","serviceUrl","results","getContextPath","entitySetWithObjectContextUris","uri","labelWithValue","getEntitySetForDesignMode","appManifest","embeds","ObjectPage","default","getEntitySetWithObjectContext","rootComponent","fetchOptions","_temp6","_exit3","getServiceUrl","sServiceUrl","keyParameters","isDesignMode","_temp5","entitySetWithObjectContextList","entitySetWithObjectContext","_result3","getModel","keyProperties","parameter","formatValue","fetch","response","ok","status","statusText","json","text","errorMessage","message","__exports","__esModule"],"sources":["ODataUtils.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nimport encodeURLParameters from \"sap/base/security/encodeURLParameters\";\nimport type Component from \"sap/ui/core/Component\";\nimport Filter from \"sap/ui/model/Filter\";\nimport FilterOperator from \"sap/ui/model/FilterOperator\";\nimport V2OdataUtils from \"sap/ui/model/odata/ODataUtils\";\nimport V2ODataModel from \"sap/ui/model/odata/v2/ODataModel\";\nimport type Context from \"sap/ui/model/odata/v4/Context\";\nimport type V4ODataListBinding from \"sap/ui/model/odata/v4/ODataListBinding\";\nimport { default as V4ODataModel } from \"sap/ui/model/odata/v4/ODataModel\";\nimport V4ODataUtils from \"sap/ui/model/odata/v4/ODataUtils\";\nimport type { FreeStyleFetchOptions } from \"../types/CommonTypes\";\nimport { getPropertyReference } from \"./v2/MetadataAnalyzer\";\nimport { getPropertyReferenceKey, getSemanticKeys, Property } from \"./v4/MetadataAnalyzer\";\n\nexport type ODataModel = V2ODataModel | V4ODataModel;\n\nexport type EntitySetWithContext = {\n\tname: string;\n\tlabelWithValue: string;\n};\n\n/**\n * Validates if context key follows this pattern /entitySet('12345')\n *\n * @param keys\n * @returns {boolean}\n */\nexport const isSingleKeyWithoutAssignment = (keys: string[]): boolean => keys.length === 1 && !keys[0].includes(\"=\");\n\n/**\n * Handles a single property in the context of OData.\n *\n * If there is only one property in the object context and it is not a semantic key,\n * then it is assumed to be a GUID. The function updates the context properties accordingly.\n *\n * @param propertyReferenceKey - An array of properties to reference.\n * @param contextProperties - An array of context properties to be updated.\n */\nexport const handleSingleProperty = function (propertyReferenceKey: Property[], contextProperties: string[]) {\n\t// If there is only one property in the object context, and it is not semantic key, then it is a guid\n\tconst guidKey = propertyReferenceKey.find((property) => {\n\t\treturn property.type === \"Edm.Guid\";\n\t})?.name;\n\tconst guidValue = contextProperties[0];\n\tcontextProperties[0] = guidKey\n\t\t? `${guidKey}=${V4ODataUtils.formatLiteral(guidValue, \"Edm.Guid\")}`\n\t\t: propertyReferenceKey.map((ref) => `${ref.name}=${guidValue}`).join(\",\");\n\n\treturn contextProperties;\n};\n\n/**\n * Adds the \"IsActiveEntity=true\" property to the context properties if it is not already present.\n *\n * @param contextProperties - An array of context property strings.\n * @param propertyReferenceKey - An array of objects containing property name and type.\n * @returns The updated array of context property strings.\n */\nconst addIsActiveEntityProperty = function (contextProperties: string[], propertyReferenceKey: { name: string; type: string }[]) {\n\tconst currentProperty = contextProperties.map((property: string) => property.split(\"=\")[0]);\n\n\tpropertyReferenceKey.forEach((element) => {\n\t\tif (!currentProperty.includes(element.name) && element.name === \"IsActiveEntity\") {\n\t\t\tcontextProperties.push(\"IsActiveEntity=true\");\n\t\t}\n\t});\n\n\treturn contextProperties;\n};\n\n/**\n * Removes single quotes from the beginning and end of a string and decodes any URI-encoded characters.\n *\n * This function is typically used to process OData key values or other strings that are enclosed in single quotes\n * and may contain URI-encoded characters.\n *\n * @param {string} value - The string to be unquoted and decoded.\n * @returns {string} The unquoted and decoded string.\n *\n */\nexport function unquoteAndDecode(value: string): string {\n\tif (value.startsWith(\"'\") && value.endsWith(\"'\")) {\n\t\tvalue = decodeURIComponent(value.substring(1, value.length - 1));\n\t}\n\treturn value;\n}\n\n/**\n * Creates an SAPUI5 `Filter` object from a given context path and semantic keys.\n *\n * This function parses the `contextPath` to extract key-value pairs, matches them with the provided `semanticKeys`,\n * and constructs a filter object. It supports both single-key and multi-key scenarios.\n *\n * @param {string} contextPath - The semantic or technical path containing key-value pairs.\n * @param {string[]} semanticKeys - An array of semantic keys to match with the key-value pairs in the context path.\n * @returns {Filter | null} An SAPUI5 `Filter` object if the keys match, or `null` if no valid filter can be created.\n *\n */\nfunction createFilterFromPath(contextPath: string, semanticKeys: string[]): Filter | null {\n\tconst keyValues = contextPath.substring(contextPath.indexOf(\"(\") + 1, contextPath.length - 1).split(\",\");\n\n\tif (semanticKeys.length != keyValues.length) {\n\t\treturn null;\n\t}\n\n\tconst keyValuesMap = new Map<string, unknown>();\n\tlet keyIndex = 0;\n\tkeyValues.forEach(function (keyValue) {\n\t\tif (keyValue.indexOf(\"=\") > -1) {\n\t\t\tconst [key, value] = keyValue.split(\"=\");\n\t\t\tkeyValuesMap.set(key, unquoteAndDecode(value));\n\t\t} else {\n\t\t\tkeyValuesMap.set(semanticKeys[keyIndex], unquoteAndDecode(keyValue));\n\t\t}\n\t\tkeyIndex++;\n\t});\n\n\tconst filters: Filter[] = [];\n\n\tsemanticKeys.forEach((semanticKey) => {\n\t\tconst semanticKeyValue = keyValuesMap.get(semanticKey);\n\t\tif (semanticKeyValue !== undefined) {\n\t\t\tfilters.push(\n\t\t\t\tnew Filter({\n\t\t\t\t\tpath: semanticKey,\n\t\t\t\t\toperator: FilterOperator.EQ,\n\t\t\t\t\tvalue1: semanticKeyValue\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\t});\n\n\treturn filters.length ? new Filter(filters, true) : null;\n}\n\n/**\n * Retrieves a specific context from an OData model based on semantic keys, a context path, and reference keys.\n *\n * @param {string[]} semanticKeys - An array of semantic keys used to filter the context.\n * @param {string} contextPath - The context path to retrieve the context from.\n * @param {string[]} referenceKeys - An array of reference keys to include in the `$select` query.\n * @param {ODataModel} model - The OData model (V2 or V4) used to retrieve the context.\n * @returns {Promise<Context | null>} A promise that resolves to the retrieved context, or `null` if no context is found.\n */\nasync function getContextFromKeys(\n\tsemanticKeys: string[],\n\tcontextPath: string,\n\treferenceKeys: string[],\n\tmodel: ODataModel\n): Promise<Context | null> {\n\tconst metaModel = model.getMetaModel();\n\n\tif (!semanticKeys || semanticKeys.length === 0) {\n\t\treturn null;\n\t}\n\n\tconst filter = createFilterFromPath(contextPath, semanticKeys);\n\n\tif (filter === null) {\n\t\treturn null;\n\t}\n\n\tconst absolutePath = contextPath.startsWith(\"/\") ? contextPath : `/${contextPath}`;\n\tconst metaContext = metaModel.getMetaContext(absolutePath);\n\tconst listBinding = model.bindList(metaContext?.getPath() ?? \"\", undefined, undefined, filter, {\n\t\t$select: referenceKeys.join(\",\")\n\t});\n\tconst contexts = await (listBinding as V4ODataListBinding).requestContexts(0, 2);\n\n\treturn contexts.length > 0 ? contexts[0] : null;\n}\n\n/**\n * Retrieves context properties for OData V4.\n *\n * @param model - The application model.\n * @param contextPath - The context path.\n * @returns A promise that resolves to an array of context properties.\n */\nconst getContextPropertiesForODataV4 = async function (model: V4ODataModel, contextPath: string) {\n\tconst index = contextPath.indexOf(\"(\");\n\tconst entitySetName = contextPath.substring(0, index);\n\tconst lastIndex = contextPath.indexOf(\")\");\n\tconst propertyPath = contextPath.substring(index + 1, lastIndex);\n\tconst propertyReferenceKey = getPropertyReferenceKey(model, entitySetName);\n\tconst contextProperties = propertyPath.split(\",\");\n\tconst semanticKeys = getSemanticKeys(model.getMetaModel(), entitySetName).map((key) => key.$PropertyPath);\n\tconst referenceKeys = propertyReferenceKey.map((ref) => ref.name);\n\n\tif (semanticKeys.length) {\n\t\tconst dataContext = await getContextFromKeys(semanticKeys, contextPath, referenceKeys, model);\n\t\tconst dataContextPath = dataContext?.getPath();\n\n\t\tif (dataContextPath) {\n\t\t\treturn propertyReferenceKey.map((key) => {\n\t\t\t\tconst value = dataContext?.getProperty(key.name);\n\t\t\t\treturn `${key.name}=${V4ODataUtils.formatLiteral(value, key.type)}`;\n\t\t\t});\n\t\t}\n\t}\n\n\tif (contextProperties.length === 1 && contextProperties[0].indexOf(\"=\") === -1) {\n\t\treturn handleSingleProperty(propertyReferenceKey, contextProperties);\n\t}\n\n\treturn addIsActiveEntityProperty(contextProperties, propertyReferenceKey);\n};\n\n/**\n * Creates context parameters based on the given path, app model, and OData version.\n *\n * @param contextPath - The path to create context parameters for.\n * @param model - The application model.\n * @param oDataV4 - A boolean indicating if OData V4 is used.\n * @returns A promise that resolves to a string of context parameters.\n */\nexport const createContextParameter = async function (contextPath: string, model: V2ODataModel | V4ODataModel, oDataV4: boolean) {\n\tif (oDataV4) {\n\t\tconst contextParameters = await getContextPropertiesForODataV4(model as V4ODataModel, contextPath);\n\t\treturn contextParameters.join(\",\");\n\t}\n\n\tconst index = contextPath.indexOf(\"(\");\n\tconst lastIndex = contextPath.indexOf(\")\");\n\tconst propertyPath = contextPath.substring(index + 1, lastIndex);\n\tconst contextProperties = propertyPath.split(\",\");\n\n\tif (isSingleKeyWithoutAssignment(contextProperties)) {\n\t\tconst entitySetName = contextPath.substring(0, index);\n\t\tconst propertyReferenceKey = getPropertyReference(model as V2ODataModel, entitySetName);\n\t\treturn handleSingleProperty(propertyReferenceKey, contextProperties).join(\",\");\n\t}\n\n\treturn propertyPath;\n};\n\nconst fetchDataAsyncV4 = async function (url: string, path: string, queryParams: Record<string, string>) {\n\tconst formattedUrl = url.endsWith(\"/\") ? url : `${url}/`;\n\tqueryParams.format = \"json\";\n\tconst parameters = encodeURLParameters(queryParams);\n\tconst sFormattedUrl = `${formattedUrl}${path}?${parameters}`;\n\treturn fetchFileContent(sFormattedUrl, \"json\")\n\t\t.then((data) => data)\n\t\t.catch((err) => {\n\t\t\tthrow new Error(err);\n\t\t});\n};\n\nconst fetchDataAsyncV2 = async function (url: string, path: string, queryParams: Record<string, string>) {\n\tconst oModel = new V2ODataModel(url);\n\treturn new Promise(function (resolve, reject) {\n\t\tconst fnSuccess = function (oData: object) {\n\t\t\tresolve(oData);\n\t\t};\n\t\tconst fnFailure = function (oError: Error) {\n\t\t\treject(oError);\n\t\t};\n\t\toModel.read(\"/\" + path, { success: fnSuccess, error: fnFailure, urlParameters: queryParams });\n\t});\n};\n\n/**\n * Helper function to fetch data from the given URL. This function is used to fetch data from the OData V4 service.\n *\n * @param url - The URL to fetch data from.\n * @param path - The path to fetch data for.\n * @param urlParameters - The URL parameters.\n * @returns A promise that resolves to the fetched data.\n */\nexport async function fetchDataAsync(url: string, path: string, urlParameters: Record<string, string> = {}, bODataV4?: boolean) {\n\tconst queryParams: Record<string, string> = {};\n\tObject.keys(urlParameters).forEach((key) => {\n\t\tif (urlParameters[key].length) {\n\t\t\tqueryParams[key] = urlParameters[key];\n\t\t}\n\t});\n\n\tif (bODataV4) {\n\t\treturn fetchDataAsyncV4(url, path, queryParams);\n\t} else {\n\t\treturn fetchDataAsyncV2(url, path, queryParams);\n\t}\n}\n\n/**\n * Checks if the given OData model is an OData V4 model.\n *\n * @param {ODataModel} oModel - The OData model to check.\n * @returns {boolean} `true` if the model is an OData V4 model, otherwise `false`.\n */\nexport function isODataV4Model(oModel: ODataModel): boolean {\n\treturn (oModel && oModel.isA<V4ODataModel>(\"sap.ui.model.odata.v4.ODataModel\")) || false;\n}\n\n/**\n * Creates an array of context URLs using the given data, entity context path, entity set, and application model.\n *\n * @param {Record<string, any>[]} data The data for entity set.\n * @param {string} entityContextPath The entity context path.\n * @param {string} entitySet The entitySet\n * @param {ODataModel} appModel The application model.\n * @returns {string[]} Array of context URLs.\n */\nfunction createEntitySetWithContextUris(\n\tdata: Record<string, any>[],\n\tentityContextPath: string,\n\tentitySet: string,\n\tappModel: ODataModel\n): string[] {\n\tconst bODataV4 = isODataV4Model(appModel);\n\tconst entityKeyProperties = bODataV4\n\t\t? getPropertyReferenceKey(appModel as V4ODataModel, entitySet).map((property) => property.name)\n\t\t: getPropertyReference(appModel as V2ODataModel, entitySet).map((property) => property.name);\n\n\tconst updatedDataValues = data.filter((item) => {\n\t\treturn entityKeyProperties.every((property) => {\n\t\t\treturn item[property] !== undefined && item[property] !== \"\";\n\t\t});\n\t});\n\n\treturn updatedDataValues.map((parameters) => {\n\t\tlet contextUri = entityContextPath;\n\t\tObject.entries(parameters).forEach(([key, value]) => {\n\t\t\tconst parameterPlaceholder = `{{parameters.${key}}}`;\n\t\t\tif (contextUri.includes(parameterPlaceholder)) {\n\t\t\t\tcontextUri = contextUri.replace(parameterPlaceholder, value);\n\t\t\t}\n\t\t});\n\t\treturn entitySet && contextUri ? `${entitySet}(${contextUri})` : \"\";\n\t});\n}\n\n/**\n * fetches data from the OData service (V2 or V4) using the provided service URL and entity set to format the key properties of\n * the entity set as context parameters and constructs the context path.\n *\n * @param {string} serviceUrl - The base URL of the OData service.\n * @param {string} entitySet - The name of the entity set to fetch data for.\n * @param {ODataModel} appModel - The OData model (V2 or V4) used to interact with the service.\n * @returns {Promise<string>} A promise that resolves to the first entity set with its context URL as a string,\n *                            or an empty string if no data is available or an error occurs.\n */\nexport const getEntitySetWithContextURLs = async function (\n\tserviceUrl: string,\n\tentitySet: string,\n\tappModel: ODataModel\n): Promise<EntitySetWithContext[]> {\n\tconst bODataV4 = isODataV4Model(appModel);\n\tconst entityKeyProperties = bODataV4\n\t\t? getPropertyReferenceKey(appModel as V4ODataModel, entitySet).map((property) => property.name)\n\t\t: getPropertyReference(appModel as V2ODataModel, entitySet).map((property) => property.name);\n\tconst urlParameters = {\n\t\t$select: entityKeyProperties.join(\",\")\n\t};\n\n\ttry {\n\t\tconst data = await fetchDataAsync(serviceUrl, entitySet, urlParameters, bODataV4);\n\t\tconst results = bODataV4 ? data.value : data.results;\n\t\tif (results.length > 0) {\n\t\t\tconst entityContextPath = getContextPath(appModel, entitySet);\n\t\t\tconst entitySetWithObjectContextUris = createEntitySetWithContextUris(results, entityContextPath, entitySet, appModel);\n\t\t\treturn entitySetWithObjectContextUris.map((uri: string) => ({\n\t\t\t\tname: uri,\n\t\t\t\tlabelWithValue: uri\n\t\t\t}));\n\t\t}\n\t\treturn [];\n\t} catch (error) {\n\t\treturn [];\n\t}\n};\n\n/**\n * Fetches the application manifest and retrieves the default entity set for the ObjectPage embed configuration in design mode.\n *\n * @returns {Promise<string>} A promise that resolves to the default entity set for the ObjectPage embed configuration,\n *                            or an empty string if not found.\n */\nconst getEntitySetForDesignMode = async function (): Promise<string> {\n\ttry {\n\t\tconst appManifest = await fetchFileContent(\"/manifest.json\", \"json\");\n\t\treturn appManifest[\"sap.cards.ap\"]?.embeds?.ObjectPage?.default || \"\";\n\t} catch (error) {\n\t\treturn \"\";\n\t}\n};\n\n/**\n * Retrieves the entity set with object context.\n *\n * @param {Component} rootComponent - The root component of the application.\n * @param {FreeStyleFetchOptions} fetchOptions - The FreeStyleFetchOptions including isDesignMode, entitySet and keyParameters.\n * @returns {Promise<string | undefined>} If Design mode then the url is formed using service, model and entitySet.\n * \t\t\t\t\t\t\t\t\t\t  In case of Run time entitySet and keyParameters will be used.\n */\nexport const getEntitySetWithObjectContext = async function (\n\trootComponent: Component,\n\tfetchOptions: FreeStyleFetchOptions\n): Promise<string> {\n\tconst appModel = rootComponent.getModel() as ODataModel;\n\tconst isDesignMode = fetchOptions.isDesignMode || false;\n\tconst entitySet = isDesignMode ? await getEntitySetForDesignMode() : fetchOptions.entitySet;\n\tconst bODataV4 = isODataV4Model(appModel);\n\tconst serviceUrl = bODataV4\n\t\t? (appModel as V4ODataModel).getServiceUrl()\n\t\t: (appModel as unknown as { V2ODataModel: V2ODataModel; sServiceUrl: string }).sServiceUrl;\n\n\tif (entitySet && fetchOptions.keyParameters && !isDesignMode) {\n\t\tlet entityContextPath = getContextPath(appModel, entitySet);\n\t\tconst keyParameters = fetchOptions.keyParameters;\n\n\t\tObject.entries(keyParameters).forEach(([key, value]) => {\n\t\t\tconst parameterPlaceholder = `{{parameters.${key}}}`;\n\n\t\t\tif (entityContextPath.includes(parameterPlaceholder)) {\n\t\t\t\tentityContextPath = entityContextPath.replace(parameterPlaceholder, value as string);\n\t\t\t}\n\t\t});\n\n\t\treturn entityContextPath ? `${entitySet}(${entityContextPath})` : \"\";\n\t}\n\n\tif (serviceUrl && entitySet && appModel && isDesignMode) {\n\t\tconst entitySetWithObjectContextList = await getEntitySetWithContextURLs(serviceUrl, entitySet, appModel);\n\t\tconst entitySetWithObjectContext = entitySetWithObjectContextList?.length ? entitySetWithObjectContextList[0].name : \"\";\n\t\treturn entitySetWithObjectContext;\n\t}\n\treturn entitySet;\n};\n\n/**\n * Constructs a context path string by formatting the key properties of the given entity set\n * based on the OData model version (V2 or V4).\n *\n * @param {ODataModel} appModel - The OData model (V2 or V4) used to retrieve key properties.\n * @param {string} entitySet - The name of the entity set for which the context path is constructed.\n * @returns {string} A string representing the context path with formatted key properties.\n */\nfunction getContextPath(appModel: V2ODataModel | V4ODataModel, entitySet: string): string {\n\tconst contextParameters: string[] = [];\n\tconst bODataV4 = appModel && appModel.isA<V4ODataModel>(\"sap.ui.model.odata.v4.ODataModel\");\n\n\tif (bODataV4) {\n\t\tconst keyProperties = getPropertyReferenceKey(appModel, entitySet);\n\t\tkeyProperties.forEach((property) => {\n\t\t\tconst parameter = V4ODataUtils.formatLiteral(`{{parameters.${property.name}}}`, property.type);\n\t\t\tcontextParameters.push(`${property.name}=${parameter}`);\n\t\t});\n\t} else {\n\t\tconst keyProperties = getPropertyReference(appModel, entitySet);\n\t\tkeyProperties.forEach((property) => {\n\t\t\tconst parameter = V2OdataUtils.formatValue(`{{parameters.${property.name}}}`, property.type, true);\n\t\t\tcontextParameters.push(`${property.name}=${parameter}`);\n\t\t});\n\t}\n\n\treturn contextParameters.join(\",\");\n}\n\n/**\n * Fetches the content of a file from the specified URL.\n *\n * @param {string} url - The URL of the file to fetch.\n * @param {string} [format] - Optional format specifier; if \"json\", parses the response as JSON, otherwise returns text.\n * @returns {Promise<any>} - A promise that resolves to the file content as a string or parsed JSON object.\n * @throws {Error} If the fetch fails or the response is not OK.\n */\nexport const fetchFileContent = async (url: string, format?: string): Promise<any> => {\n\ttry {\n\t\tconst response = await fetch(url);\n\t\tif (!response.ok) {\n\t\t\tthrow new Error(`Failed to fetch file from ${url}: ${response.status} ${response.statusText}`);\n\t\t}\n\n\t\treturn format === \"json\" ? await response.json() : await response.text();\n\t} catch (error) {\n\t\tconst errorMessage = error instanceof Error ? error.message : \"Unknown error\";\n\t\tthrow new Error(`Error fetching file from ${url}: ${errorMessage}`);\n\t}\n};\n"],"mappings":"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","ignoreList":[]}