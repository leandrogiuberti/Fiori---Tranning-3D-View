{"version":3,"file":"MetadataAnalyzer-dbg-dbg.js","names":["sap","ui","define","getPropertyInfoFromEntity","model","entitySetName","metaModel","getMetaModel","entitySet","getODataEntitySet","entityType","getODataEntityType","properties","property","map","type","name","getPropertyReference","entityDefinition","propertyRef","key","filter","includes","__exports","__esModule"],"sources":["MetadataAnalyzer.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nimport { EntitySet, EntityType } from \"sap/ui/model/odata/ODataMetaModel\";\nimport ODataModel from \"sap/ui/model/odata/v2/ODataModel\";\n\ntype Property = {\n\ttype: string;\n\tname: string;\n};\n\n/**\n * Retrieves property information from an entity set.\n *\n * @param {ODataModel} model - The OData model.\n * @param {string} entitySetName - The name of the entity set.\n * @return {Property[]} - An array of property information.\n */\nexport const getPropertyInfoFromEntity = function (model: ODataModel, entitySetName: string): Property[] {\n\tconst metaModel = model.getMetaModel();\n\tconst entitySet = metaModel.getODataEntitySet(entitySetName);\n\tconst entityType = metaModel.getODataEntityType((entitySet as EntitySet).entityType) as EntityType;\n\tconst properties = entityType.property || [];\n\n\treturn properties.map((property) => ({\n\t\ttype: property.type,\n\t\tname: property.name\n\t}));\n};\n\n/**\n * Retrieves property references from an entity set.\n *\n * @param {ODataModel} model - The OData model.\n * @param {string} entitySetName - The name of the entity set.\n * @return {Property[]} - An array of property references.\n */\nexport const getPropertyReference = function (model: ODataModel, entitySetName: string): Property[] {\n\tconst metaModel = model.getMetaModel();\n\tconst entitySet = metaModel.getODataEntitySet(entitySetName) as EntitySet;\n\tconst entityDefinition = metaModel.getODataEntityType(entitySet.entityType) as EntityType;\n\tconst propertyRef = entityDefinition.key.propertyRef.map((property) => property.name);\n\tconst properties = getPropertyInfoFromEntity(model, entitySetName);\n\n\treturn properties.filter((property) => propertyRef.includes(property.name));\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AAHA;;AAAAA,GAAA,CAAAC,EAAA,CAAAC,MAAA;EAAA;;EAYA;AACA;AACA;AACA;AACA;AACA;AACA;EACO,MAAMC,yBAAyB,GAAG,SAAAA,CAAUC,KAAiB,EAAEC,aAAqB,EAAc;IACxG,MAAMC,SAAS,GAAGF,KAAK,CAACG,YAAY,CAAC,CAAC;IACtC,MAAMC,SAAS,GAAGF,SAAS,CAACG,iBAAiB,CAACJ,aAAa,CAAC;IAC5D,MAAMK,UAAU,GAAGJ,SAAS,CAACK,kBAAkB,CAAEH,SAAS,CAAeE,UAAU,CAAe;IAClG,MAAME,UAAU,GAAGF,UAAU,CAACG,QAAQ,IAAI,EAAE;IAE5C,OAAOD,UAAU,CAACE,GAAG,CAAED,QAAQ,KAAM;MACpCE,IAAI,EAAEF,QAAQ,CAACE,IAAI;MACnBC,IAAI,EAAEH,QAAQ,CAACG;IAChB,CAAC,CAAC,CAAC;EACJ,CAAC;;EAED;AACA;AACA;AACA;AACA;AACA;AACA;EACO,MAAMC,oBAAoB,GAAG,SAAAA,CAAUb,KAAiB,EAAEC,aAAqB,EAAc;IACnG,MAAMC,SAAS,GAAGF,KAAK,CAACG,YAAY,CAAC,CAAC;IACtC,MAAMC,SAAS,GAAGF,SAAS,CAACG,iBAAiB,CAACJ,aAAa,CAAc;IACzE,MAAMa,gBAAgB,GAAGZ,SAAS,CAACK,kBAAkB,CAACH,SAAS,CAACE,UAAU,CAAe;IACzF,MAAMS,WAAW,GAAGD,gBAAgB,CAACE,GAAG,CAACD,WAAW,CAACL,GAAG,CAAED,QAAQ,IAAKA,QAAQ,CAACG,IAAI,CAAC;IACrF,MAAMJ,UAAU,GAAGT,yBAAyB,CAACC,KAAK,EAAEC,aAAa,CAAC;IAElE,OAAOO,UAAU,CAACS,MAAM,CAAER,QAAQ,IAAKM,WAAW,CAACG,QAAQ,CAACT,QAAQ,CAACG,IAAI,CAAC,CAAC;EAC5E,CAAC;EAAC,IAAAO,SAAA;IAAAC,UAAA;EAAA;EAAAD,SAAA,CAAApB,yBAAA,GAAAA,yBAAA;EAAAoB,SAAA,CAAAN,oBAAA,GAAAA,oBAAA;EAAA,OAAAM,SAAA;AAAA","ignoreList":[]}