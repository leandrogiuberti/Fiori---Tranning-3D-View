{"version":3,"file":"RetrieveCard-dbg-dbg.js","names":["sap","ui","define","sap_cards_ap_transpiler_cardTranspiler_Transpile","SelectionVariant","___helpers_ApplicationInfo","___helpers_I18nHelper","___odata_ODataUtils","___semanticCard_CardFactory","_catch","body","recover","result","e","then","convertIntegrationCardToAdaptive","AppType","ApplicationInfo","ODataModelVersion","resolvei18nTextsForIntegrationCard","fetchFileContent","GenerateSemanticCard","createSemanticCardFactory","CardTypes","getCardPath","type","entitySet","applicationManifest","manifest","INTEGRATION","sapCardsAP","undefined","Object","keys","length","cardsConfig","defaultCard","default","localUri","endsWith","cleanupVariantInformation","selectionVariant","hasOwnProperty","SelectionVariantID","PresentationVariantID","Text","ODataFilterExpression","Version","FilterContextUrl","ParameterContextUrl","fetchManifest","url","Promise","resolve","constructCardUrl","applicationUrlOnAbap","cardsPath","isDesignMode","slice","_getObjectPageCardManifest","appComponent","hostOptions","_temp2","cardType","reject","cardUrl","getManifest","sapPlatformAbap","uri","_temp","_fetchManifest","addActionsToCardHeader","cardManifest","applicationInfo","semanticObject","action","variantParameter","contextParametersKeyValue","header","ibnParams","forEach","key","value","addSelectOption","JSON","stringify","toJSONObject","actions","parameters","ibnTarget","checkIfLeanDTCardExists","mApplicationManifest","isSemanticCardGeneration","searchParams","window","location","search","urlParams","URLSearchParams","generateSemanticCardParam","get","Always","Lean","getKeyParameters","fetchOptions","keyParameters","getInstance","fetchDetails","entitySetWithObjectContext","appType","contextParameters","FreeStyle","split","map","parameter","formattedValue","replace","handleHideActions","mManifest","appManifest","embeds","ObjectPage","defaultEntitySet","hideActions","mParameters","configuration","_adaptiveFooterActionParameters","footerActionParameters","footer","updateHeaderDataPath","isODataV4","headerData","data","dataPathHeader","path","getCardManifestForPreview","getObjectPageCardManifestForPreview","_exit","_temp6","_result","freeStyleFetchOptions","componentName","context","resourceBundle","odataModel","navigationURI","_temp4","V4","contentUrl","includes","_temp3","includeActions","cardManifestWithResolvedI18nTexts","appIntent","_temp5","semanticCardInstance","generateObjectCard","semanticObjectCard","__exports","__esModule"],"sources":["RetrieveCard.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nimport { convertIntegrationCardToAdaptive } from \"sap/cards/ap/transpiler/cardTranspiler/Transpile\";\nimport SelectionVariant from \"sap/fe/navigation/SelectionVariant\";\nimport Component from \"sap/ui/core/Component\";\nimport type { CardManifest } from \"sap/ui/integration/widgets/Card\";\nimport { AppManifest, AppType, ApplicationInfo, ODataModelVersion, type App } from \"../helpers/ApplicationInfo\";\nimport { resolvei18nTextsForIntegrationCard } from \"../helpers/I18nHelper\";\nimport { fetchFileContent } from \"../odata/ODataUtils\";\nimport { GenerateSemanticCard, createSemanticCardFactory } from \"../semanticCard/CardFactory\";\nimport type { FreeStyleFetchOptions } from \"../types/CommonTypes\";\n\nexport type KeyParameter = {\n\tkey: string;\n\tformattedValue: string;\n};\n\n/**\n * The card types\n *\n * @alias sap.cards.ap.common.services.RetrieveCard.CardTypes\n * @private\n * @restricted sap.fe, sap.ui.generic.app\n */\nexport enum CardTypes {\n\t/**\n\t * Integration card\n\t * @restricted sap.fe, sap.ui.generic.app\n\t */\n\tINTEGRATION = \"integration\",\n\t/**\n\t * Adaptive card\n\t * @restricted sap.fe, sap.ui.generic.app\n\t */\n\tADAPTIVE = \"adaptive\"\n}\ntype CardHostParam = {\n\tcomponentName: string;\n\tentitySet: string;\n\tcardType?: CardTypes;\n};\ntype SelectionVariantJSON = {\n\tSelectionVariantID?: string;\n\tPresentationVariantID?: string;\n\tText?: string;\n\tODataFilterExpression?: string;\n\tVersion?: string;\n\tFilterContextUrl?: string;\n\tParameterContextUrl?: string;\n};\n/**\n * The options for fetching the card manifest\n *\n * @alias sap.cards.ap.common.services.RetrieveCard.CardManifestFetchOptions\n * @private\n * @restricted sap.fe, sap.ui.generic.app\n */\ntype CardManifestFetchOptions = {\n\t/**\n\t * Defines the card type\n\t * @restricted sap.fe, sap.ui.generic.app\n\t */\n\tcardType?: CardTypes;\n\t/**\n\t * Defines include actions\n\t * @restricted sap.fe, sap.ui.generic.app\n\t */\n\tincludeActions?: boolean;\n\t/**\n\t * Defines the hide Actions\n\t */\n\thideActions?: boolean;\n\t/**\n\t * Checks whether the app is running in design mode or not will be used to invalidate resource bundle cache and for other design time specific operations\n\t */\n\tisDesignMode?: boolean;\n};\n\ntype FreeStyleCardManifestFetchOptions = CardManifestFetchOptions & {\n\t/**\n\t * Entity Set for FreeStyle card sharing\n\t */\n\tentitySet: string;\n\t/**\n\t * Key Parameters for FreeStyle card sharing\n\t */\n\tkeyParameters: Record<string, unknown>;\n};\n\n/**\n * Fetches the card path from the application manifest\n *\n * @param {CardType} type - The type of card\n * @param {string} entitySet - The entity set\n * @param {AppManifest} applicationManifest - The application manifest\n * @returns The card path\n */\nexport const getCardPath = (type: CardTypes, entitySet: string, applicationManifest: AppManifest) => {\n\tconst manifest = type === CardTypes.INTEGRATION ? \"manifest.json\" : \"adaptive-manifest.json\";\n\tconst sapCardsAP = applicationManifest[\"sap.cards.ap\"];\n\n\tif (sapCardsAP === undefined || Object.keys(sapCardsAP).length === 0) {\n\t\treturn \"\";\n\t}\n\n\tconst cardsConfig = sapCardsAP[\"embeds\"][\"ObjectPage\"];\n\tif (cardsConfig === undefined || Object.keys(cardsConfig[\"manifests\"]).length === 0) {\n\t\treturn \"\";\n\t}\n\n\tconst defaultCard = cardsConfig[\"manifests\"][entitySet || cardsConfig.default][0];\n\tconst localUri = defaultCard.localUri.endsWith(\"/\") ? defaultCard.localUri : defaultCard.localUri + \"/\";\n\treturn \"/\" + localUri + manifest;\n};\n\n/**\n * clean up the unnecessary variant information\n *\n * @param selectionVariant\n * @returns\n */\nconst cleanupVariantInformation = (selectionVariant: SelectionVariantJSON) => {\n\tif (selectionVariant.hasOwnProperty(\"SelectionVariantID\")) {\n\t\tdelete selectionVariant.SelectionVariantID;\n\t} else if (selectionVariant.hasOwnProperty(\"PresentationVariantID\")) {\n\t\tdelete selectionVariant.PresentationVariantID;\n\t}\n\tdelete selectionVariant.Text;\n\tdelete selectionVariant.ODataFilterExpression;\n\tdelete selectionVariant.Version;\n\tdelete selectionVariant.FilterContextUrl;\n\tdelete selectionVariant.ParameterContextUrl;\n\n\treturn selectionVariant;\n};\n\n/**\n * Fetches the manifest from the given url\n *\n * @param {string} url - The url of the manifest\n * @returns The manifest\n */\nexport const fetchManifest = async (url: string) => {\n\ttry {\n\t\treturn await fetchFileContent(url, \"json\");\n\t} catch (error) {\n\t\treturn null;\n\t}\n};\n\n/**\n * Constructs the card URL based on the application URL and card path.\n *\n * @param {string} applicationUrlOnAbap - The base application URL.\n * @param {string} cardsPath - The path to the card.\n * @param {boolean} isDesignMode - Whether the application is in design mode.\n * @returns {string} - The constructed card URL.\n */\nfunction constructCardUrl(applicationUrlOnAbap: string, cardsPath: string, isDesignMode: boolean): string {\n\tif (isDesignMode) {\n\t\treturn cardsPath;\n\t}\n\n\treturn applicationUrlOnAbap.endsWith(\"/\") ? `${applicationUrlOnAbap.slice(0, -1)}${cardsPath}` : `${applicationUrlOnAbap}${cardsPath}`;\n}\n\n/**\n * Fetches the card manifest for the object page\n *\n * @param {Component} appComponent\n * @param {CardHostParam} hostOptions\n * @param {Boolean} isDesignMode\n * @returns The card manifest\n * @private\n */\nexport const _getObjectPageCardManifest = async function (\n\tappComponent: Component,\n\thostOptions: CardHostParam,\n\tisDesignMode: boolean = false\n) {\n\tconst { entitySet, cardType } = hostOptions;\n\tlet applicationManifest = appComponent.getManifest() as AppManifest;\n\tconst sapPlatformAbap = applicationManifest[\"sap.platform.abap\"];\n\tconst applicationUrlOnAbap = sapPlatformAbap?.uri ?? \"\";\n\n\tif (isDesignMode) {\n\t\tapplicationManifest = await fetchManifest(\"/manifest.json\");\n\t}\n\tconst cardsPath = getCardPath(cardType || CardTypes.INTEGRATION, entitySet, applicationManifest);\n\n\tif (cardsPath.length === 0) {\n\t\treturn Promise.reject(\"No cards available for this application\");\n\t}\n\n\tconst cardUrl = constructCardUrl(applicationUrlOnAbap, cardsPath, isDesignMode);\n\n\treturn fetchManifest(cardUrl);\n};\n\n/**\n * Add actions to the card header\n *  - ibnTarget contains the semantic object and action\n *  - ibnParams contains the context parameters and sap-xapp-state-data - which is the stringified selection variant of the context parameters\n *\n * @param cardManifest\n * @param applicationInfo\n */\nexport const addActionsToCardHeader = async function (cardManifest: CardManifest, applicationInfo: App) {\n\tconst { semanticObject, action, variantParameter, contextParametersKeyValue } = applicationInfo;\n\tconst header = cardManifest[\"sap.card\"][\"header\"];\n\tconst ibnParams: Record<string, string> = {};\n\tconst selectionVariant = new SelectionVariant();\n\n\tcontextParametersKeyValue.forEach(({ key, value }) => {\n\t\tibnParams[key] = value;\n\t\tselectionVariant.addSelectOption(key, \"I\", \"EQ\", value);\n\t});\n\n\tif (variantParameter) {\n\t\tibnParams[\"sap-appvar-id\"] = variantParameter;\n\t}\n\n\tibnParams[\"sap-xapp-state-data\"] = JSON.stringify({\n\t\tselectionVariant: cleanupVariantInformation(selectionVariant.toJSONObject())\n\t});\n\theader.actions = [\n\t\t{\n\t\t\ttype: \"Navigation\",\n\t\t\tparameters: {\n\t\t\t\tibnTarget: { semanticObject, action },\n\t\t\t\tibnParams\n\t\t\t}\n\t\t}\n\t];\n};\n/**\n * Checks if the leanDT card exists in the application at runtime or not\n *\n * @param appComponent\n * @param isDesignMode\n * @returns boolean\n */\nconst checkIfLeanDTCardExists = (appComponent: Component, isDesignMode: boolean = false): boolean => {\n\tconst mApplicationManifest = appComponent.getManifest() as AppManifest;\n\treturn !(!mApplicationManifest[\"sap.cards.ap\"] && !isDesignMode);\n};\n\n/**\n * Determines whether semantic card generation should be enabled based on the URL parameter 'generateSemanticCard'\n * and the existence of a leanDT card in the application.\n *\n * - If 'generateSemanticCard' is 'always', semantic card generation is enabled.\n * - If 'generateSemanticCard' is 'lean', semantic card generation is enabled only if the leanDT card does not exist.\n * - Otherwise, semantic card generation is not enabled.\n *\n * @param {Component} appComponent - The application component instance.\n * @returns {boolean} true if semantic card generation should be enabled, false otherwise.\n */\nexport function isSemanticCardGeneration(appComponent: Component): boolean {\n\tconst searchParams = window.location?.search;\n\n\tif (!searchParams) {\n\t\treturn false;\n\t}\n\n\tconst urlParams = new URLSearchParams(searchParams);\n\tconst generateSemanticCardParam = urlParams.get(\"generateSemanticCard\");\n\tif (generateSemanticCardParam === GenerateSemanticCard.Always) {\n\t\treturn true;\n\t}\n\n\tif (generateSemanticCardParam === GenerateSemanticCard.Lean) {\n\t\treturn !checkIfLeanDTCardExists(appComponent);\n\t}\n\n\treturn false;\n}\n\n/**\n * Fetches key parameters for the given application component.\n *\n * @param {Component} appComponent - The application component.\n * @param {FreeStyleFetchOptions} fetchOptions - The Options isDesignMode and for FreeStyle application sharing entitySet and keyParameters.\n * @returns {Promise<KeyParameter[]>} - A promise that resolves to an array of key parameters.\n */\nexport const getKeyParameters = async (\n\tappComponent: Component,\n\tfetchOptions: FreeStyleFetchOptions = {\n\t\tisDesignMode: false,\n\t\tentitySet: \"\",\n\t\tkeyParameters: {}\n\t}\n): Promise<KeyParameter[]> => {\n\tconst applicationInfo = await ApplicationInfo.getInstance(appComponent).fetchDetails(fetchOptions);\n\tconst { entitySetWithObjectContext, appType, contextParameters } = applicationInfo;\n\n\tif (appType === AppType.FreeStyle && !entitySetWithObjectContext) {\n\t\treturn [];\n\t}\n\n\treturn contextParameters.split(\",\").map((parameter) => {\n\t\tconst [key, value] = parameter.split(\"=\");\n\t\tconst formattedValue = value.replace(/guid|datetimeoffset|datetime|'*/g, \"\");\n\n\t\treturn { key, formattedValue };\n\t});\n};\n\n/**\n * Function to handle the hide actions for the card\n *\n * @param appComponent\n * @param mManifest\n */\nconst handleHideActions = function (appComponent: Component, mManifest: CardManifest) {\n\tconst appManifest = appComponent.getManifest() as AppManifest;\n\tconst cardsConfig = appManifest[\"sap.cards.ap\"]?.embeds.ObjectPage;\n\n\tif (cardsConfig && Object.keys(cardsConfig[\"manifests\"]).length > 0) {\n\t\tconst defaultEntitySet = cardsConfig?.[\"default\"];\n\t\tconst hideActions = (defaultEntitySet && cardsConfig[\"manifests\"][defaultEntitySet]?.[0]?.hideActions) || false;\n\t\tconst mParameters = mManifest?.[\"sap.card\"]?.configuration?.parameters;\n\n\t\tif (hideActions && mParameters?._adaptiveFooterActionParameters) {\n\t\t\tdelete mParameters[\"_adaptiveFooterActionParameters\"];\n\t\t}\n\t\tif (hideActions && mParameters?.footerActionParameters) {\n\t\t\tdelete mParameters[\"footerActionParameters\"];\n\t\t}\n\t\tif (hideActions && mManifest?.[\"sap.card\"]?.footer) {\n\t\t\tdelete mManifest[\"sap.card\"][\"footer\"];\n\t\t}\n\t}\n};\n\n/**\n * Updates the data path of the card header in the provided card manifest by reference.\n *\n * @param {CardManifest} cardManifest - The card manifest object that contains the header data.\n */\nexport function updateHeaderDataPath(cardManifest: CardManifest, isODataV4: boolean) {\n\tconst headerData = cardManifest[\"sap.card\"].header.data;\n\tconst dataPathHeader = isODataV4 ? \"/header/\" : \"/header/d/\";\n\n\tif (headerData?.path) {\n\t\theaderData.path = dataPathHeader;\n\t}\n}\n\n/**\n * Fetches the card manifest for the preview\n *\n * @param {Component} appComponent The root component of the application\n * @param {FreeStyleCardManifestFetchOptions} fetchOptions The Fetch options for FreeStyle Cards\n * @returns {Promise<any>} The card manifest\n * @public\n * @since 1.141.0\n */\nexport const getCardManifestForPreview = async function (appComponent: Component, fetchOptions: FreeStyleCardManifestFetchOptions) {\n\tif (!fetchOptions.entitySet || !fetchOptions.keyParameters || Object.keys(fetchOptions.keyParameters).length === 0) {\n\t\treturn Promise.reject(\"Failed to share the card : Missing required parameters either entitySet or keyParameters\");\n\t}\n\n\treturn await getObjectPageCardManifestForPreview(appComponent, fetchOptions);\n};\n\n/**\n * Fetches the card manifest for the object page\n *\n * @param {Component} appComponent The root component of the application\n * @param {CardManifestFetchOptions} fetchOptions The options\n * @returns {Promise<any>} The card manifest\n * @private\n * @since 1.124.0\n * @restricted sap.fe, sap.ui.generic.app\n */\nexport const getObjectPageCardManifestForPreview = async function (appComponent: Component, fetchOptions?: CardManifestFetchOptions) {\n\tif (isSemanticCardGeneration(appComponent)) {\n\t\tconst semanticCardInstance = createSemanticCardFactory(appComponent, {\n\t\t\tcardType: fetchOptions?.cardType\n\t\t});\n\t\tconst semanticObjectCard = await semanticCardInstance.generateObjectCard();\n\t\treturn semanticObjectCard;\n\t}\n\n\tconst isDesignMode = fetchOptions?.isDesignMode ?? false;\n\tconst freeStyleFetchOptions = {\n\t\tisDesignMode: isDesignMode,\n\t\tentitySet: (fetchOptions as FreeStyleCardManifestFetchOptions).entitySet ?? \"\",\n\t\tkeyParameters: (fetchOptions as FreeStyleCardManifestFetchOptions).keyParameters ?? {}\n\t};\n\tconst applicationInfo = await ApplicationInfo.getInstance(appComponent).fetchDetails(freeStyleFetchOptions);\n\tconst { componentName, entitySet, context, resourceBundle, semanticObject, action, odataModel, variantParameter, navigationURI } =\n\t\tapplicationInfo;\n\tconst hostOptions = {\n\t\tcardType: CardTypes.INTEGRATION,\n\t\tcomponentName: componentName,\n\t\tentitySet: entitySet,\n\t\tcontext\n\t};\n\n\tconst cardManifest = await _getObjectPageCardManifest(appComponent, hostOptions, isDesignMode);\n\n\tif (!cardManifest || Object.keys(cardManifest).length === 0) {\n\t\treturn Promise.reject(\"No cards available for this application\");\n\t}\n\n\tconst keyParameters = await getKeyParameters(appComponent, freeStyleFetchOptions);\n\n\tif (fetchOptions?.hideActions ?? true) {\n\t\thandleHideActions(appComponent, cardManifest);\n\t}\n\n\tconst cardType = fetchOptions?.cardType || CardTypes.INTEGRATION;\n\tif (cardType === CardTypes.INTEGRATION) {\n\t\tcardManifest[\"sap.card\"][\"data\"][\"request\"][\"headers\"][\"Accept-Language\"] ??= \"{{parameters.LOCALE}}\";\n\t\tconst parameters = cardManifest[\"sap.card\"].configuration.parameters;\n\t\tconst data = cardManifest[\"sap.card\"][\"data\"];\n\t\tconst contentUrl = data[\"request\"][\"batch\"][\"content\"][\"url\"];\n\t\tif (contentUrl.includes(\"{{parameters.contextParameters}}\")) {\n\t\t\t/**\n\t\t\t * Replace the contextParameters with the object context\n\t\t\t * This is required for the integration card to fetch the data until all the manifests are regenerated.\n\t\t\t */\n\t\t\tcardManifest[\"sap.card\"][\"configuration\"][\"parameters\"][\"contextParameters\"] = {\n\t\t\t\ttype: \"string\",\n\t\t\t\tvalue: hostOptions.context\n\t\t\t};\n\t\t}\n\t\tkeyParameters.forEach((parameter) => {\n\t\t\tif (parameters[parameter.key] !== undefined) {\n\t\t\t\tparameters[parameter.key][\"value\"] = parameter.formattedValue;\n\t\t\t}\n\t\t});\n\n\t\tif (fetchOptions?.includeActions ?? true) {\n\t\t\tawait addActionsToCardHeader(cardManifest, applicationInfo);\n\t\t}\n\n\t\tconst isODataV4 = odataModel === ODataModelVersion.V4;\n\t\tupdateHeaderDataPath(cardManifest, isODataV4);\n\t\treturn resolvei18nTextsForIntegrationCard(cardManifest, resourceBundle);\n\t} else {\n\t\tconst cardManifestWithResolvedI18nTexts = resolvei18nTextsForIntegrationCard(cardManifest, resourceBundle);\n\t\tconst appIntent = variantParameter\n\t\t\t? `${semanticObject}-${action}?sap-appvar-id=${variantParameter}`\n\t\t\t: `${semanticObject}-${action}`;\n\t\treturn convertIntegrationCardToAdaptive(cardManifestWithResolvedI18nTexts, appIntent, keyParameters, navigationURI);\n\t}\n};\n"],"mappings":"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","ignoreList":[]}