{"version":3,"file":"I18nHelper.js","names":["sap","ui","define","resolvei18nText","i18nKey","resourceBundle","startsWith","endsWith","key","slice","getText","updateGroups","groups","forEach","group","title","items","item","label","value","resolvei18nTextsForCardAction","sapCard","actionsStrip","footer","length","actionStrip","text","adaptiveCardActions","configuration","parameters","_adaptiveFooterActionParameters","actionKeys","Object","keys","actionKey","adaptiveCardAction","triggerActionText","actionParameters","actionParameter","placeholder","errorMessage","resolvei18nTextsForIntegrationCard","cardManifest","sapApp","appTitle","subTitle","appSubTitle","header","headerTitle","headerSubTitle","mainIndicator","content","resolvei18nTextsForParameters","includes","split","map","part","index","join","unit","number","configParam","__exports","__esModule"],"sources":["I18nHelper.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nimport ResourceBundle from \"sap/base/i18n/ResourceBundle\";\nimport type { CardConfigParameters, CardManifest, Group, ObjectContent } from \"sap/ui/integration/widgets/Card\";\n\n/**\n *  Resolves i18n text for a given key.\n *\n *  @param {string} i18nKey  having unresolved i18n keys\n *  @param {ResourceBundle} resourceBundle - The resource bundle containing i18n values.\n *  @return {string} - The resolved i18n text.\n */\nconst resolvei18nText = function (i18nKey: string, resourceBundle: ResourceBundle): string {\n\tif (i18nKey.startsWith(\"{{\") && i18nKey.endsWith(\"}}\")) {\n\t\tconst key = i18nKey.slice(2, -2); // Remove the leading \"{{\" and trailing \"}}\"\n\t\treturn resourceBundle.getText(key) || key;\n\t}\n\n\treturn i18nKey;\n};\n\n/**\n * Updates groups with resolved i18n texts.\n *\n * @param {Array<Group>} groups - The groups to update.\n * @param {ResourceBundle} resourceBundle - The resource bundle containing i18n values.\n */\nconst updateGroups = function (groups: Array<Group>, resourceBundle: ResourceBundle) {\n\tgroups.forEach(function (group) {\n\t\tconst { title } = group;\n\t\tgroup.title = resolvei18nText(title, resourceBundle);\n\t\tgroup.items.forEach(function (item) {\n\t\t\tconst { label, value } = item;\n\n\t\t\titem.label = resolvei18nText(label, resourceBundle);\n\t\t\titem.value = resolvei18nText(value, resourceBundle);\n\t\t});\n\t});\n};\n\n/**\n * Resolves i18n texts for card actions in a sap.card object using the provided resource bundle.\n *\n * @param {CardManifest[\"sap.card\"]} sapCard - The sap.card object containing the card configuration.\n * @param {ResourceBundle} resourceBundle - The resource bundle used to resolve i18n texts.\n */\nconst resolvei18nTextsForCardAction = function (sapCard: CardManifest[\"sap.card\"], resourceBundle: ResourceBundle) {\n\tconst actionsStrip = sapCard?.footer?.actionsStrip;\n\n\tif (actionsStrip?.length) {\n\t\tactionsStrip.forEach(function (actionStrip) {\n\t\t\tactionStrip.text = resolvei18nText(actionStrip.text, resourceBundle);\n\t\t});\n\t}\n\n\tconst adaptiveCardActions = sapCard?.configuration?.parameters?._adaptiveFooterActionParameters;\n\tif (!adaptiveCardActions) {\n\t\treturn;\n\t}\n\tconst actionKeys = Object.keys(adaptiveCardActions);\n\n\tfor (const actionKey of actionKeys) {\n\t\tconst adaptiveCardAction = adaptiveCardActions[actionKey];\n\t\tadaptiveCardAction.label = resolvei18nText(adaptiveCardAction.label, resourceBundle);\n\n\t\tif (adaptiveCardAction?.triggerActionText) {\n\t\t\tadaptiveCardAction.triggerActionText = resolvei18nText(adaptiveCardAction.triggerActionText, resourceBundle);\n\t\t}\n\n\t\tif (adaptiveCardAction?.actionParameters?.length) {\n\t\t\tadaptiveCardAction.actionParameters.forEach(function (actionParameter) {\n\t\t\t\tactionParameter.label = resolvei18nText(actionParameter.label, resourceBundle);\n\n\t\t\t\tif (actionParameter.placeholder) {\n\t\t\t\t\tactionParameter.placeholder = resolvei18nText(actionParameter.placeholder, resourceBundle);\n\t\t\t\t}\n\n\t\t\t\tif (actionParameter.errorMessage) {\n\t\t\t\t\tactionParameter.errorMessage = resolvei18nText(actionParameter.errorMessage, resourceBundle);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n};\n\n/**\n * Resolves i18n texts for an integration card manifest.\n *\n * @param {CardManifest} cardManifest - The manifest with unresolved i18n keys.\n * @param {ResourceBundle} resourceBundle - The resource bundle containing i18n values.\n * @return {CardManifest} - The updated manifest with resolved i18n keys.\n */\nexport const resolvei18nTextsForIntegrationCard = function (cardManifest: CardManifest, resourceBundle: ResourceBundle): CardManifest {\n\tconst { \"sap.app\": sapApp, \"sap.card\": sapCard } = cardManifest;\n\tconst { title: appTitle, subTitle: appSubTitle } = sapApp;\n\tconst { header } = sapCard;\n\tconst { title: headerTitle, subTitle: headerSubTitle, mainIndicator } = header;\n\tconst groups = (sapCard.content as ObjectContent).groups;\n\n\tresolvei18nTextsForParameters(sapCard.configuration?.parameters as CardConfigParameters, [\"_yesText\", \"_noText\"], resourceBundle);\n\n\tsapApp.title = resolvei18nText(appTitle, resourceBundle);\n\tsapApp.subTitle = appSubTitle.includes(\" | \")\n\t\t? appSubTitle\n\t\t\t\t.split(\" | \")\n\t\t\t\t.map((part, index) => (index === 0 ? resolvei18nText(part, resourceBundle) : part))\n\t\t\t\t.join(\" | \")\n\t\t: resolvei18nText(appSubTitle, resourceBundle);\n\theader.title = resolvei18nText(headerTitle!, resourceBundle);\n\theader.subTitle = resolvei18nText(headerSubTitle!, resourceBundle);\n\n\tif (mainIndicator) {\n\t\tconst { unit, number } = mainIndicator;\n\t\tif (unit) {\n\t\t\tmainIndicator.unit = resolvei18nText(unit, resourceBundle);\n\t\t}\n\t\tif (number) {\n\t\t\tmainIndicator.number = resolvei18nText(number, resourceBundle);\n\t\t}\n\t}\n\n\tupdateGroups(groups, resourceBundle);\n\tresolvei18nTextsForCardAction(sapCard, resourceBundle);\n\n\treturn cardManifest;\n};\n\n/**\n * Resolves internationalized (i18n) text values for the specified parameters.\n *\n * @param {CardConfigParameters} - An object containing configuration parameters where each parameter\n * may have a `value` property that could be an i18n key.\n * @param {string[]} - An array of keys corresponding to the properties of the `parameters` object\n * that need their `value` properties resolved.\n * @param {ResourceBundle} - The resource bundle used to resolve i18n text values.\n */\nconst resolvei18nTextsForParameters = function (parameters: CardConfigParameters, keys: string[], resourceBundle: ResourceBundle) {\n\tkeys.forEach((key) => {\n\t\tconst configParam = parameters?.[key] as { value: string };\n\t\tif (configParam?.value) {\n\t\t\tconfigParam.value = resolvei18nText(configParam.value, resourceBundle);\n\t\t}\n\t});\n};\n"],"mappings":";;;;AAAA,aAAAA,IAAAC,GAAAC,OAAA,2BAcA,MAAMC,EAAkB,SAAUC,EAAiBC,GAClD,GAAID,EAAQE,WAAW,OAASF,EAAQG,SAAS,MAAO,CACvD,MAAMC,EAAMJ,EAAQK,MAAM,GAAI,GAC9B,OAAOJ,EAAeK,QAAQF,IAAQA,CACvC,CAEA,OAAOJ,CACR,EAQA,MAAMO,EAAe,SAAUC,EAAsBP,GACpDO,EAAOC,QAAQ,SAAUC,GACxB,MAAMC,MAAEA,GAAUD,EAClBA,EAAMC,MAAQZ,EAAgBY,EAAOV,GACrCS,EAAME,MAAMH,QAAQ,SAAUI,GAC7B,MAAMC,MAAEA,EAAKC,MAAEA,GAAUF,EAEzBA,EAAKC,MAAQf,EAAgBe,EAAOb,GACpCY,EAAKE,MAAQhB,EAAgBgB,EAAOd,EACrC,EACD,EACD,EAQA,MAAMe,EAAgC,SAAUC,EAAmChB,GAClF,MAAMiB,EAAeD,GAASE,QAAQD,aAEtC,GAAIA,GAAcE,OAAQ,CACzBF,EAAaT,QAAQ,SAAUY,GAC9BA,EAAYC,KAAOvB,EAAgBsB,EAAYC,KAAMrB,EACtD,EACD,CAEA,MAAMsB,EAAsBN,GAASO,eAAeC,YAAYC,gCAChE,IAAKH,EAAqB,CACzB,MACD,CACA,MAAMI,EAAaC,OAAOC,KAAKN,GAE/B,IAAK,MAAMO,KAAaH,EAAY,CACnC,MAAMI,EAAqBR,EAAoBO,GAC/CC,EAAmBjB,MAAQf,EAAgBgC,EAAmBjB,MAAOb,GAErE,GAAI8B,GAAoBC,kBAAmB,CAC1CD,EAAmBC,kBAAoBjC,EAAgBgC,EAAmBC,kBAAmB/B,EAC9F,CAEA,GAAI8B,GAAoBE,kBAAkBb,OAAQ,CACjDW,EAAmBE,iBAAiBxB,QAAQ,SAAUyB,GACrDA,EAAgBpB,MAAQf,EAAgBmC,EAAgBpB,MAAOb,GAE/D,GAAIiC,EAAgBC,YAAa,CAChCD,EAAgBC,YAAcpC,EAAgBmC,EAAgBC,YAAalC,EAC5E,CAEA,GAAIiC,EAAgBE,aAAc,CACjCF,EAAgBE,aAAerC,EAAgBmC,EAAgBE,aAAcnC,EAC9E,CACD,EACD,CACD,CACD,EASO,MAAMoC,EAAqC,SAAUC,EAA4BrC,GACvF,MAAQ,UAAWsC,EAAQ,WAAYtB,GAAYqB,EACnD,MAAQ3B,MAAO6B,EAAUC,SAAUC,GAAgBH,EACnD,MAAMI,OAAEA,GAAW1B,EACnB,MAAQN,MAAOiC,EAAaH,SAAUI,EAAcC,cAAEA,GAAkBH,EACxE,MAAMnC,EAAUS,EAAQ8B,QAA0BvC,OAElDwC,EAA8B/B,EAAQO,eAAeC,WAAoC,CAAC,WAAY,WAAYxB,GAElHsC,EAAO5B,MAAQZ,EAAgByC,EAAUvC,GACzCsC,EAAOE,SAAWC,EAAYO,SAAS,OACpCP,EACCQ,MAAM,OACNC,IAAI,CAACC,EAAMC,IAAWA,IAAU,EAAItD,EAAgBqD,EAAMnD,GAAkBmD,GAC5EE,KAAK,OACNvD,EAAgB2C,EAAazC,GAChC0C,EAAOhC,MAAQZ,EAAgB6C,EAAc3C,GAC7C0C,EAAOF,SAAW1C,EAAgB8C,EAAiB5C,GAEnD,GAAI6C,EAAe,CAClB,MAAMS,KAAEA,EAAIC,OAAEA,GAAWV,EACzB,GAAIS,EAAM,CACTT,EAAcS,KAAOxD,EAAgBwD,EAAMtD,EAC5C,CACA,GAAIuD,EAAQ,CACXV,EAAcU,OAASzD,EAAgByD,EAAQvD,EAChD,CACD,CAEAM,EAAaC,EAAQP,GACrBe,EAA8BC,EAAShB,GAEvC,OAAOqC,CACR,EAWA,MAAMU,EAAgC,SAAUvB,EAAkCI,EAAgB5B,GACjG4B,EAAKpB,QAASL,IACb,MAAMqD,EAAchC,IAAarB,GACjC,GAAIqD,GAAa1C,MAAO,CACvB0C,EAAY1C,MAAQhB,EAAgB0D,EAAY1C,MAAOd,EACxD,GAEF,EAAE,IAAAyD,EAAA,CAAAC,WAAA,MAAAD,EAAArB,qCAAA,OAAAqB,CAAA","ignoreList":[]}