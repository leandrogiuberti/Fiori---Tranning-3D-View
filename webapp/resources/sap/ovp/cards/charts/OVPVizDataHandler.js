/*!
 * Copyright (c) 2009-2014 SAP SE, All Rights Reserved
 */
sap.ui.define(["sap/ui/core/Control","sap/ui/model/json/JSONModel","sap/ovp/cards/generic/base/analytical/Utils","sap/ovp/app/resources","sap/base/util/each","sap/base/util/merge","sap/ovp/cards/generic/base/analytical/OVPVizDatahelper"],function(e,t,a,r,s,i,n){"use strict";return e.extend("sap.ovp.cards.charts.OVPVizDataHandler",{metadata:{aggregations:{data:{type:"sap.ui.core.Element"},aggregateData:{type:"sap.ui.core.Element"},content:{multiple:false}},properties:{chartType:{defaultValue:false},dependentDataReceived:{defaultValue:false},scale:{defaultValue:""},entitySet:{}}},renderer:function(e,t){e.openStart("div",t).openEnd();if(t.getContent()){e.renderControl(t.getContent())}e.close("div")},mergeDatasets:function(e,a,o){var l=this;var p=this.getModel();var u=e.mParameters;var d=i({},this.dataSet);if(u){var g=u.select.split(",")}var v=e.getPath().substring(1);var c=-1;if(v){c=v.indexOf("Parameters")}if(c>=0){v=v.substr(0,v.indexOf("Parameters"))}var f=p.getMetaModel();var m=this.getEntitySet();var h=f.getODataEntitySet(m);var y=f.getODataEntityType(h.entityType);var D=[];var P=[];for(var S=0;S<y.property.length;S++){if(y.property[S]["com.sap.vocabularies.Analytics.v1.Measure"]||y.property[S].hasOwnProperty("sap:aggregation-role")&&y.property[S]["sap:aggregation-role"]==="measure"){if(g&&g.indexOf(y.property[S].name)!==-1){D.push(y.property[S].name)}}else{if(g&&g.indexOf(y.property[S].name)!==-1){P.push(y.property[S].name)}}}if(d&&d.results){for(var S=0;S<d.results.length-2;S++){for(var b=0;b<D.length;b++){d.results[0][D[b]]=Number(d.results[0][D[b]])+Number(d.results[S+1][D[b]])}}var C=d.__count-d.results.length;var O={};O.results=[];O.results[0]=d.results[0];var A;if(d.__count>d.results.length){var x=i({},this.aggregateSet);if(x&&x.results&&d.results.length<d.__count){s(D,function(e){x.results[0][D[e]]=String(Number(l.aggregateSet.results[0][D[e]])-Number(O.results[0][D[e]]))});s(P,function(e){x.results[0][P[e]]=r.getText("OTHERS_DONUT",[C+1])});x.results[0].$isOthers=true;A=x.results[0]}}if(A){a.results.push(A)}var T=o.getModel("ovpCardProperties");var V=T&&T.getProperty("/bEnableStableColors");var M=T&&T.getProperty("/colorPalette");var E=y[T&&T.getProperty("/chartAnnotationPath")];if(E.DimensionAttributes.length===1&&V&&o.getVizType()==="donut"&&M&&M instanceof Object){var R=E.DimensionAttributes[0].Dimension.PropertyPath;var B=o.getVizProperties();if(!B){var z={plotArea:{dataPointStyle:{rules:[]}}};B=z}else if(B&&!B.plotArea){B.plotArea={dataPointStyle:{rules:[]}}}B.legend={itemMargin:1.25};if(o&&B&&B.plotArea){if(!B.plotArea.dataPointStyle){B.plotArea.dataPointStyle={rules:[]}}else{B.plotArea.dataPointStyle.rules=[]}var _=f.getODataProperty(y,R);if(_){var N=_["com.sap.vocabularies.Common.v1.Label"]?_["com.sap.vocabularies.Common.v1.Label"].String:R;var w;if(_["com.sap.vocabularies.Common.v1.Text"]){w=_["com.sap.vocabularies.Common.v1.Text"]["Path"]}else if(_["sap:text"]){w=_["sap:text"]}else{w=_}n.cacheValues(M,R,w,N);n.addColorRulesToVizProperties(a,B);n.handleOthersSectionForCharts(x,B)}}o.setVizProperties(B);n.setVizPropertiesForInsightCards(T,o,B)}}var j=new t;j.setData(a.results);o.setModel(j,"analyticalmodel")},updateBindingContext:function(){var r=this.getBinding("data");var s=this;if(this.chartBinding==r){return}else{this.chartBinding=r;if(r){var s=this;r.attachEvent("dataReceived",function(e){s.dataSet=e&&e.getParameter("data");s.oDataClone=i({},s.dataSet);if(s.getChartType()=="donut"&&s.getBinding("aggregateData")!==undefined){if(s.getDependentDataReceived()===true||s.getDependentDataReceived()==="true"){s.mergeDatasets(r,s.oDataClone,s.getContent());s.setDependentDataReceived(false)}else{s.setDependentDataReceived(true)}}else{var o=new t;if(s.dataSet){var l=s.getEntitySet();var p=r.getModel();var u=a.cacheODataMetadata(p);var d=u[l];var g=a.getSemanticProperties(d);var v=g&&g.aTimeAxisProperties||[];var c=g&&g.oTimeAxisPropertiesAndSemantics||{};n.formatDateBasedOnSemantics(v,c,s.dataSet.results);o.setData(s.dataSet.results);s.oDataClone=i({},s.dataSet)}s.getContent().setModel(o,"analyticalmodel");s.mergeDatasets(r,s.oDataClone,s.getContent())}})}e.prototype.updateBindingContext.apply(this,arguments)}n.attachDataReceivedToAggregationBinding.bind(this)()}})});
//# sourceMappingURL=OVPVizDataHandler.js.map