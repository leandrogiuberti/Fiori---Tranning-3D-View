// Copyright (c) 2009-2025 SAP SE, All Rights Reserved
sap.ui.define(["sap/m/Label","sap/m/Text","sap/ui/core/mvc/Controller","sap/ui/core/Fragment","sap/ui/core/Title","sap/ui/model/json/JSONModel","sap/ushell/services/AppConfiguration","sap/ushell/Config","sap/ushell/resources","sap/base/Log","sap/base/util/isEmptyObject","sap/ui/Device","sap/ushell/Container"],(e,t,o,n,a,i,s,r,p,u,l,c,m)=>{"use strict";return o.extend("sap.ushell.ui.footerbar.AboutDialog.controller",{onBeforeOpen:function(){this._setupAboutDialogModel();this._updateHeaderButtonVisibility();const e=n.byId("aboutDialogFragment","aboutDialogEntryList");e.setSelectedItem(e.getItems()[0])},onClose:function(){this._getDialog().close()},onAfterClose:function(){this._getDialog().destroy()},_getDialog:function(){if(!this.oAboutDialog){this.oAboutDialog=n.byId("aboutDialogFragment","aboutDialog")}return this.oAboutDialog},_setupAboutDialogModel:function(){const e=this._getDialog();this._setupAppInfoModel().catch(e=>{u.error("Failed to setup application info model.",e)});const t=this._getSystemInformation();const o=new i(t);const n=this._getUserEnvironmentInformation();const a=new i(n);e.setModel(o,"SysInfo");e.setModel(a,"UserEnvInfo")},_getSplitAppObj:function(){const e=n.byId("aboutDialogFragment","aboutDialogContainer");if(!e){u.info("SplitContainer object can't be found")}return e},onAfterMasterClose:function(){this._getSplitAppObj().setMode("ShowHideMode");this._updateHeaderButtonVisibility()},onItemPress:function(e){const t=e.getParameter("listItem").getCustomData()[0].getValue();const o=n.createId("aboutDialogFragment",t);this._getSplitAppObj().toDetail(o);if(c.system.desktop){this._getSplitAppObj().hideMaster()}if(c.system.phone){this._getSplitAppObj().setMode("HideMode");this.onAfterMasterClose();this._updateHeaderButtonVisibility()}},navigateBackToMaster:function(){this._getSplitAppObj().backToTopMaster();this._updateHeaderButtonVisibility()},onBeforeMasterOpen:function(){this._updateHeaderButtonVisibility()},navToggleButtonPressHandler:function(){if(this._getSplitAppObj().isMasterShown()){this._getSplitAppObj().hideMaster()}else{this._getSplitAppObj().showMaster()}this._updateHeaderButtonVisibility()},_updateHeaderButtonVisibility:function(){const e=this._getSplitAppObj().isMasterShown();const t=n.byId("aboutDialogFragment","aboutDialogNavBackButton");const o=n.byId("aboutDialogFragment","aboutDialogMenuButton");if(c.system.phone){t.setVisible(!e);if(!t){u.info("oBackButton object can't be found")}}else{if(c.orientation.portrait){o.setVisible(true);o.setPressed(e);o.setTooltip(p.i18n.getText(e?"ToggleButtonHide":"ToggleButtonShow"))}else{o.setVisible(false)}if(!o){u.info("oMenuButton object can't be found")}}},_setupAppInfoModel:function(){const e=this._getDialog();return new Promise((t,o)=>{m.getServiceAsync("AppLifeCycle").then(e=>{const t=e.getCurrentApplication();return Promise.all([t.getAllAppInfo(true),t.getAllAppInfo(false),this._getContentProviderLabel(t)])}).then(o=>{const n=s.getMetadata();const a=o[0]||{};const r=o[1]||{};const p=o[2];a.appTitle=a.title||a.appTitle||n.title||"";a.contentProviderLabel=p;const u=this._buildApplicationInformationObject(a,r);e.setModel(new i(u),"AppInfo");t()}).catch(e=>{o(e)})})},_buildApplicationInformationObject:function(e,t){const o=["appTitle","appId","abap.transaction","appVersion","appSupportInfo","technicalAppComponentId","appFrameworkId","appFrameworkVersion","contentProviderLabel"];const n={entries:[],customEntries:[]};o.forEach(t=>{if(e[t]){n.entries.push({parameterName:t,value:`{i18n>${t}}`,type:"label"});n.entries.push({parameterName:t,value:e[t],type:"text"})}});const a=Object.keys(t).filter(e=>{const o=t[e];return o.showInAbout}).sort((e,t)=>e.toLowerCase()<t.toLowerCase()?-1:1).map(e=>{const o=t[e];return{parameterName:e,...o}});a.forEach(e=>{n.customEntries.push({parameterName:e.parameterName,value:e.label,type:"label"});n.customEntries.push({parameterName:e.parameterName,value:e.value,type:"text"})});return n},_getSystemInformation:function(){const e=m.getLogonSystem();const t={entries:[]};const o=e.getProductName();if(o){t.entries.push({parameterName:"productName",value:"{i18n>productName}",type:"label"});t.entries.push({parameterName:"productName",value:o,type:"text"})}const n=e.getProductVersion();if(n){t.entries.push({parameterName:"productVersion",value:"{i18n>productVersionFld}",type:"label"});t.entries.push({parameterName:"productVersion",value:n,type:"text"})}const a=e.getSystemName();if(a){t.entries.push({parameterName:"systemName",value:"{i18n>systemName}",type:"label"});t.entries.push({parameterName:"systemName",value:a,type:"text"})}const i=e.getSystemRole();if(i){t.entries.push({parameterName:"systemRole",value:"{i18n>systemRole}",type:"label"});t.entries.push({parameterName:"systemRole",value:i,type:"text"})}const s=e.getTenantRole();if(s){t.entries.push({parameterName:"tenantRole",value:"{i18n>tenantRole}",type:"label"});t.entries.push({parameterName:"tenantRole",value:s,type:"text"})}return t},_getUserEnvironmentInformation:function(){const e=m.getUser();const t={entries:[]};const o=this._getDeviceType();if(o){t.entries.push({parameterName:"deviceType",value:"{i18n>deviceType}",type:"label"});t.entries.push({parameterName:"deviceType",value:o,type:"text"})}const n=e.getTheme();t.entries.push({parameterName:"activeTheme",value:"{i18n>activeTheme}",type:"label"});t.entries.push({parameterName:"activeTheme",value:n,type:"text"});const a=e.getContentDensity()==="cozy";t.entries.push({parameterName:"optimizedForTouch",value:"{i18n>AppearanceContentDensityLabel}",type:"label"});t.entries.push({parameterName:"optimizedForTouch",value:a?"{i18n>yes}":"{i18n>no}",type:"text"});const i=this._isTouchSupported();t.entries.push({parameterName:"touchSupported",value:"{i18n>touchSupported}",type:"label"});t.entries.push({parameterName:"touchSupported",value:i?"{i18n>yes}":"{i18n>no}",type:"text"});t.entries.push({parameterName:"userAgentFld",value:"{i18n>userAgentFld}",type:"label"});t.entries.push({parameterName:"userAgentFld",value:navigator.userAgent,type:"text"});return t},_getContentProviderLabel:function(e){if(r.last("/core/contentProviders/providerInfo/enabled")){return e.getSystemContext().then(e=>e.label)}return Promise.resolve(undefined)},_getDeviceType:function(){let e;if(c.system.combi){e="{i18n>configuration.form_factor_combi}"}else if(c.system.desktop){e="{i18n>configuration.form_factor_desktop}"}else if(c.system.tablet){e="{i18n>configuration.form_factor_tablet}"}else if(c.system.phone){e="{i18n>configuration.form_factor_phone}"}return e},_isTouchSupported:function(){return c.support.touch&&(c.system.tablet||c.system.phone||c.system.combi)},itemFactory:function(o,n){const i=n.getProperty("type");switch(i){case"label":return new e({text:n.getProperty("value")});case"title":return new a({text:n.getProperty("value")});default:return new t({text:n.getProperty("value")})}},calculateNumberOfColumns:function(e){if(!this.isFormVisible(e)){return 1}return Object.keys(e).length>1?2:1},isFormVisible:function(e){return!!e&&!l(e)}})});
//# sourceMappingURL=AboutDialog.controller.js.map