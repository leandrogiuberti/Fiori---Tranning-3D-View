// Copyright (c) 2009-2025 SAP SE, All Rights Reserved
sap.ui.define(["sap/ui/core/Supportability","sap/ui/thirdparty/URI","sap/ushell/utils","sap/ushell/utils/LaunchpadError"],(e,t,s,o)=>{"use strict";function n(e,s){this._oOngoingRequests={};this._oCSRFTokens={};this._oDefaultOptions={headers:s&&s.headers||{}};if(typeof e==="string"){this._oBasePath=new t(e)}else{this._oDefaultOptions={headers:e&&e.headers||{}}}}n.prototype.get=function(e,t){return this._executeRequest("GET",e,t)};n.prototype.put=function(e,t){return this._executeRequest("PUT",e,t)};n.prototype.post=function(e,t){return this._executeRequest("POST",e,t)};n.prototype.patch=function(e,t){return this._executeRequest("PATCH",e,t)};n.prototype.delete=function(e,t){return this._executeRequest("DELETE",e,t)};n.prototype.options=function(e,t){return this._executeRequest("OPTIONS",e,t)};n.prototype.abortAll=function(){Object.keys(this._oOngoingRequests).forEach(e=>{this._oOngoingRequests[e].abort()})};n.prototype._executeRequest=async function(n,r,i){const a={};const u=e.isStatisticsEnabled();if(u){a["sap-statistics"]=u}let h;const c=new t(r);if(!c.is("url")){throw new Error("The provided resource path is not a valid URL.")}if(this._oBasePath){h=c.absoluteTo(this._oBasePath)}else{h=c}const p=new XMLHttpRequest;p._sapUshellHttpClientId=s.generateUniqueId(Object.keys(this._oOngoingRequests));this._oOngoingRequests[p._sapUshellHttpClientId]=p;const d=Object.assign({},a,this._oDefaultOptions.headers,i&&i.headers);return this._getCSRFTokenHeader(n,h).then(e=>{Object.assign(d,e);return new Promise((e,t)=>{const s=h.href();p.onload=this._onLoad.bind(this,e,t,{xhr:p,method:n,url:s,data:i});p.onerror=function(){const e=this._getFormattedResponse(p);const s=new o(`Failed to execute HTTP request: ${e.status} (${e.status})`,e);t(s)}.bind(this);p.onabort=function(){p.bAborted=true;const e=this._getFormattedResponse(p);const s=new o(`Failed to execute HTTP request: ${e.status} (${e.status})`,e);t(s)}.bind(this);p.onloadend=function(){delete this._oOngoingRequests[p._sapUshellHttpClientId]}.bind(this);p.open(n,s);Object.keys(d).forEach(e=>{p.setRequestHeader(e,d[e])});let r=i&&i.data||"";if(typeof r!=="string"){r=JSON.stringify(r)}p.send(r)})})};n.prototype._getCSRFTokenHeader=function(e,t){let s="";let o="";switch(e){case"HEAD":case"GET":case"OPTIONS":return Promise.resolve({"x-csrf-token":"fetch"});case"POST":s=this._getCSRFTokenKey(t);if(this._oCSRFTokens[s]){return Promise.resolve({"x-csrf-token":this._oCSRFTokens[s]})}o=t.href();if(this._oBasePath){o=this._oBasePath.origin()+this._oBasePath.directory()}return this._executeRequest("HEAD",o).then(e=>{const t=this._getCSRFTokenFromHeader(e.responseHeaders);if(!t){throw new Error("CSRF Token couldn't be fetched.")}return{"x-csrf-token":t}});case"PATCH":case"PUT":case"DELETE":s=this._getCSRFTokenKey(t);if(this._oCSRFTokens[s]){return Promise.resolve({"x-csrf-token":this._oCSRFTokens[s]})}o=t.href();if(this._oBasePath){o=this._oBasePath.origin()+this._oBasePath.directory()}return this._executeRequest("OPTIONS",o).then(e=>{const t=this._getCSRFTokenFromHeader(e.responseHeaders);if(!t){throw new Error("CSRF Token couldn't be fetched.")}return{"x-csrf-token":t}});default:return Promise.resolve({})}};n.prototype._onLoad=function(e,s,n){const r=this._getFormattedResponse(n.xhr);const i=this._getCSRFTokenFromHeader(r.responseHeaders);if(i){const o=this._getCSRFTokenKey(new t(n.url));if(i.toLowerCase()==="required"&&r.status===403){delete this._oCSRFTokens[o];return this._executeRequest(n.method,n.url,n.data).then(e).catch(s)}this._oCSRFTokens[o]=i}if(r.status>=200&&r.status<300){return e(r)}const a=new o(`Failed to execute HTTP request: ${r.status} (${r.status})`,r);s(a)};n.prototype._getCSRFTokenKey=function(e){if(this._oBasePath){return this._oBasePath.origin()+this._oBasePath.directory()}return e.origin()+e.directory()};n.prototype._getCSRFTokenFromHeader=function(e){const t=e.filter(e=>e.name==="x-csrf-token")[0];return t&&t.value};n.prototype._getFormattedResponse=function(e){return{aborted:e.bAborted||false,status:e.status,statusText:e.statusText,responseText:e.responseText,responseHeaders:e.getAllResponseHeaders().split(/\r\n/g).filter(e=>e.length>0).map(e=>{const t=e.split(":");return{name:t[0].trim(),value:t[1].trim()}})}};return n},true);
//# sourceMappingURL=HttpClient.js.map