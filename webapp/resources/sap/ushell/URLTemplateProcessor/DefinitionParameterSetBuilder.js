// Copyright (c) 2009-2025 SAP SE, All Rights Reserved
sap.ui.define(["sap/ushell/URLTemplateProcessor/TemplateParameterParser","sap/ushell/URLTemplateProcessor/Resolvers","sap/ushell/URLTemplateProcessor/utils","sap/ushell/utils/type"],(e,r,t,s)=>{"use strict";const a="/payload/parameters/names";function o(a,o,l){if(!a||!a.names){return{}}if(!a.hasOwnProperty("mergeWith")){return a.names}const p=a&&a.mergeWith;if(Array.isArray(p)===false&&typeof p!=="string"){throw new Error("The value of 'mergeWith' can only be a string or an array")}const c=a&&a.names;const h=i(a.mergeWith,o,l,{});const u=h.map(t=>{const a=e.parsePath(l,t);n(a);const i=r.resolvePath(a,{},o,{},{});if(!s.isPlainObject(i)){throw new Error(`Cannot merge parameters from '${t}'. The path must point to an object`)}return i}).reduce((e,r)=>{e=t.mergeObject(e,r);return e},{});return t.mergeObject(u,c)}function n(e){if(e.pathType==="relative"){throw new Error("Please only specify absolute paths via mergeWith")}e.value.forEach(e=>{if(e.type!=="literal"){throw new Error("Please do not specify references in mergeWith paths")}})}function i(t,s,o,l){if(Array.isArray(t)){return t.slice().reverse()}if(typeof t==="string"){if(l[t]){throw new Error("Detected circular dependency of templates caused by mergeWith statements: ensure the template merges its parameters with a base template.")}l[t]=true;const p=e.parsePath(o,t);n(p);const c=r.resolvePath(p,{},s,{},{});if(!c){throw new Error(`The specified mergeWith path does cannot be resolved: '${t}'`)}const h=a.split("/").slice(1).reduce((e,r)=>{if(e.result&&e.obj&&e.obj.hasOwnProperty(r)){e.obj=e.obj[r]}else{e.result=false}return e},{obj:c,result:true}).result;if(!h){throw new Error(`${t} does not contain ${a}. Please make sure ${t} points to the root of a URL template.`)}return i(c.payload.parameters.mergeWith,s,o,l).concat([t+a])}return[]}return{buildDefinitionParameterSet:o}},false);
//# sourceMappingURL=DefinitionParameterSetBuilder.js.map