// Copyright (c) 2009-2025 SAP SE, All Rights Reserved
sap.ui.define(["sap/base/util/Deferred","sap/ushell/appIntegration/PostMessageManager","sap/ushell/Container","sap/ushell/utils"],(e,s,t,i)=>{"use strict";const l={};const a={"sap.ushell.ui5service.ShellUIService.setBackNavigation":{async handler(e,t,i){const l=t.getShellUIService();let a;if(e.callbackMessage?.service){a=()=>{s.sendRequest(e.callbackMessage.service,null,i.source,i.origin,false)}}l.setBackNavigation(a)},options:{provideApplicationContext:true}},"sap.ushell.ui5service.ShellUIService.setTitle":{async handler(e,s,t){const{sTitle:i,oAdditionalInformation:l}=e;const a=s.getShellUIService();a.setTitle(i,l)},options:{provideApplicationContext:true}},"sap.ushell.services.ShellUIService.setTitle":{async handler(e,s,t){const{sTitle:i,oAdditionalInformation:l}=e;const a=s.getShellUIService();a.setTitle(i,l)},options:{provideApplicationContext:true}},"sap.ushell.services.ShellUIService.setHierarchy":{async handler(e,s,t){const{aHierarchyLevels:i}=e;const l=s.getShellUIService();l.setHierarchy(i)},options:{provideApplicationContext:true}},"sap.ushell.services.ShellUIService.setRelatedApps":{async handler(e,s,t){const{aRelatedApps:i}=e;const l=s.getShellUIService();l.setRelatedApps(i)},options:{provideApplicationContext:true}},"sap.ushell.services.AppLifeCycle.setNewAppInfo":{async handler(e,s){const i=e;const l=await t.getServiceAsync("AppLifeCycle");l.setAppInfo(i,true)}},"sap.ushell.services.AppLifeCycle.updateCurrentAppInfo":{async handler(e,s){const i=e;const l=await t.getServiceAsync("AppLifeCycle");l.setAppInfo(i,false)}},"sap.ushell.services.AppConfiguration.setApplicationFullWidth":{async handler(e,s){const{bValue:t}=e;const[l]=await i.requireAsync(["sap/ushell/services/AppConfiguration"]);l.setApplicationFullWidthInternal(t)}},"sap.ushell.services.ShellUIService.setDirtyFlag":{async handler(e,s){const{bIsDirty:i}=e;t.setDirtyFlag(i)}},"sap.ushell.services.Container.setDirtyFlag":{async handler(e,s){const{bIsDirty:i}=e;t.setDirtyFlag(i)}},"sap.ushell.services.Container.registerDirtyStateProvider":{async handler(s,i,l){const{bRegister:a}=s;if(a){i.addCapabilities(["sap.ushell.appRuntime.handleDirtyStateProvider"]);t.setAsyncDirtyStateProvider(async s=>{const t=new e;const l=setTimeout(()=>{t.resolve(false)},2500);i.sendRequest("sap.ushell.appRuntime.handleDirtyStateProvider",{oNavigationContext:s},true).then(e=>{if(l){clearTimeout(l)}t.resolve(e.result??false)});return t.promise})}else{t.setAsyncDirtyStateProvider()}},options:{provideApplicationContext:true}}};return{register(){Object.keys(l).forEach(e=>{const t=l[e];s.setDistributionPolicy(e,t)});Object.keys(a).forEach(e=>{const t=a[e];s.setRequestHandler(e,t.handler,t.options)})}}});
//# sourceMappingURL=AppInfoHandler.js.map