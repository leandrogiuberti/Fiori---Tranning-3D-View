// Copyright (c) 2009-2025 SAP SE, All Rights Reserved
sap.ui.define(["sap/base/i18n/Formatting","sap/base/i18n/Localization","sap/base/Log","sap/ui/thirdparty/hasher","sap/ushell/appIntegration/PostMessageManager","sap/ushell/Container","sap/ushell/EventHub","sap/ushell/utils"],(e,s,a,t,r,n,i,l)=>{"use strict";const c={"sap.ushell.appRuntime.innerAppRouteChange":{onlyCurrentApplication:true,ignoreCapabilities:true},"sap.ushell.appRuntime.hashChange":{onlyCurrentApplication:true,ignoreCapabilities:true},"sap.ushell.appRuntime.themeChange":{ignoreCapabilities:true},"sap.ushell.appRuntime.uiDensityChange":{ignoreCapabilities:true}};const o={"sap.ushell.services.AppLifeCycle.subscribe":{async handler(e,s,t){const r=e;if(!Array.isArray(r)){a.error("subscribe service call failed: capabilities must be an array");throw new Error("subscribe service call failed: capabilities must be an array")}const n=r.map(e=>`${e.service}.${e.action}`);s.addCapabilities(n)},options:{provideApplicationContext:true,allowInactive:true}},"sap.ushell.appRuntime.hashChange":{async handler(e,s){const{newHash:r,direction:i}=e;t.disableBlueBoxHashChangeTrigger=true;t.replaceHash(r);t.disableBlueBoxHashChangeTrigger=false;if(i){const e=await n.getServiceAsync("ShellNavigationInternal");e.hashChanger.fireEvent("hashReplaced",{hash:e.hashChanger.getHash(),direction:i});a.debug(`PostMessageAPI.hashChange :: Informed by the Iframe, to change the History direction property in FLP to: ${i}`)}}},"sap.ushell.services.ShellUIService.getFLPUrl":{async handler(e,s){const a=e.bIncludeHash;return n.getFLPUrlAsync(a)}},"sap.ushell.services.Container.getFLPUrl":{async handler(e,s){const a=e.bIncludeHash;return n.getFLPUrlAsync(a)}},"sap.ushell.services.Container.getFLPConfig":{async handler(e,s){return n.getFLPConfig()}},"sap.ushell.services.Container.getFLPPlatform":{async handler(e,s){return n.getFLPPlatform()}},"sap.ushell.services.ShellUIService.processHotKey":{async handler(e,s){const{altKey:a,ctrlKey:t,shiftKey:r,key:n,keyCode:i}=e;const l=new KeyboardEvent("keydown",{altKey:a,ctrlKey:t,shiftKey:r,key:n,keyCode:i});document.dispatchEvent(l)}},"sap.ushell.services.ShellUIService.showShellUIBlocker":{async handler(e,s){}},"sap.ushell.services.UserInfo.getThemeList":{async handler(e,s){const a=await n.getServiceAsync("UserInfo");const t=a.getThemeList();return l.promisify(t)}},"sap.ushell.services.UserInfo.getShellUserInfo":{async handler(e,s){const a=await n.getServiceAsync("UserInfo");return a.getShellUserInfo()}},"sap.ushell.services.UserInfo.getLanguageList":{async handler(e,s){const a=await n.getServiceAsync("UserInfo");const t=a.getLanguageList();return l.promisify(t)}},"sap.ushell.services.UserInfo.updateUserPreferences":{async handler(e,s){const{language:a}=e;if(!a){return}const t=n.getUser();t.setLanguage(a);const r=await n.getServiceAsync("UserInfo");const i=r.updateUserPreferences();await l.promisify(i);t.resetChangedProperty("language")}},"sap.ushell.services.UserInfo.openThemeManager":{async handler(e,s){i.emit("openThemeManager",Date.now())}},"sap.ushell.services.UserInfo.getLocaleData":{async handler(a,t){const r={calendarType:e.getCalendarType(),dateFormatShort:e.getDatePattern("short"),dateFormatMedium:e.getDatePattern("medium"),numberFormatGroup:e.getNumberSymbol("group"),numberFormatDecimal:e.getNumberSymbol("decimal"),timeFormatShort:e.getTimePattern("short"),timeFormatMedium:e.getTimePattern("medium"),calendarMapping:e.getCustomIslamicCalendarData(),timeZone:s.getTimezone(),currencyFormats:e.getCustomCurrencies()};return r}},"sap.ushell.services.UITracer.trace":{async handler(e,s){const{trace:a}=e;await n.getServiceAsync("UITracer");i.emit("UITracer.trace",a)}},"sap.ushell.services.SearchableContent.getApps":{async handler(e,s){const a=e.oOptions||{};const t=await n.getServiceAsync("SearchableContent");return t.getApps(a)}},"sap.ushell.services.Extension.setSecondTitle":{async handler(e,s){const{title:a}=e;const t=await n.getServiceAsync("Extension");return t.setSecondTitle(a)}},"sap.ushell.services.Renderer.setHeaderTitle":{async handler(e,s){const{sTitle:a}=e;const t=await n.getServiceAsync("Extension");t.setSecondTitle(a)}}};return{register(){Object.keys(c).forEach(e=>{const s=c[e];r.setDistributionPolicy(e,s)});Object.keys(o).forEach(e=>{const s=o[e];r.setRequestHandler(e,s.handler,s.options)})}}});
//# sourceMappingURL=EnvironmentHandler.js.map