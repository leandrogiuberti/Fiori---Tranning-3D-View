// Copyright (c) 2009-2025 SAP SE, All Rights Reserved
sap.ui.define(["sap/base/Log","sap/ushell/utils/RestrictedJSONModel","sap/base/util/deepClone","sap/base/util/extend","sap/base/util/deepExtend","sap/ushell/resources","sap/ushell/utils","sap/ushell/Config","sap/ushell/Container","sap/ushell/adapters/cdm/v3/utilsCdm","sap/ushell/adapters/cdm/v3/_LaunchPage/readUtils","sap/ushell/adapters/cdm/v3/_LaunchPage/readVisualizations","sap/base/util/ObjectPath"],(t,e,i,a,o,s,n,r,c,l,d,h,u)=>{"use strict";function g(){this.COMPONENT_NAME="sap.ushell.services.Pages";this._oCdmServicePromise=c.getServiceAsync("CommonDataModel");this._oCSTRServicePromise=c.getServiceAsync("ClientSideTargetResolution");this._oPagesModel=new e({pages:[]});this._bImplicitSaveEnabled=true;this._aPagesToBeSaved=[]}g.prototype._generateId=function(t){const e=[];const i=this.getModel().getProperty(this.getPagePath(t));i.sections.forEach(t=>{e.push(t.id);t.visualizations.forEach(t=>{e.push(t.id)})});return n.generateUniqueId(e)};g.prototype.getModel=function(){return this._oPagesModel};g.prototype.enableImplicitSave=function(t){this._bImplicitSaveEnabled=t};g.prototype.getPageIndex=function(t){const e=this._oPagesModel.getProperty("/pages");for(let i=0;i<e.length;++i){if(e[i].id===t){return i}}return undefined};g.prototype.getPagePath=function(t){const e=this.getPageIndex(t);if(typeof e==="undefined"){return""}return`/pages/${e}`};g.prototype.loadPage=async function(e){const i=this.getPagePath(e);if(i){return i}n.setPerformanceMark(["FLP-Pages-Service-loadPage-start[",e,"]"].join(""));let a;try{a=await this._oCdmServicePromise}catch(e){t.error("Pages - loadPage: Couldn't resolve CDM Service.",e,this.COMPONENT_NAME);throw e}try{const t=await a.getPage(e);const i=await a.getCachedVisualizations();const o=await a.getApplications();const s=await a.getCachedVizTypes();const r=await this._getModelForPage(t,i,o,s);const c=this._oPagesModel.getProperty("/pages/").length;const l=`/pages/${c}`;this._oPagesModel._setProperty(l,r);n.setPerformanceMark(["FLP-Pages-Service-loadPage-end[",e,"]"].join(""));return l}catch(e){t.error("Pages - loadPage: Failed to gather site data.",e,this.COMPONENT_NAME);throw e}};g.prototype.loadPages=async function(e){let i;try{i=await this._oCdmServicePromise}catch(e){t.error("Pages - loadPages: Couldn't resolve CDM Service.",e,this.COMPONENT_NAME);throw e}await i.getPages(e);const a=await Promise.all(e.map(t=>this.loadPage(t)));const o={};e.forEach((t,e)=>{o[t]=a[e]});return o};g.prototype.findVisualization=async function(e,i,a,o){let s;try{s=await this._oCdmServicePromise}catch(e){t.error("Pages - findVisualization: Personalization cannot be saved: CDM Service cannot be retrieved.",e,this.COMPONENT_NAME);throw e}try{const t=await this.loadPage(e);await s.getCachedVisualizations();await s.getApplications();const n=this.getModel().getProperty(`${t}/sections`)||[];return n.reduce((t,s,n)=>{if(i&&s.id!==i){return t}const r=s.visualizations.reduce((t,e,i)=>{if(a&&e.vizId===a||o&&e.id===o){t.push(i)}return t},[]);if(r.length){t.push({pageId:e,sectionIndex:n,vizIndexes:r})}return t},[])}catch(e){t.error("Pages - findVisualization: Couldn't load page, get visualizations or applications.",e,this.COMPONENT_NAME);throw e}};g.prototype.moveVisualization=async function(e,a,o,s,n){if(a===s&&o===n){return Promise.resolve({visualizationIndex:n})}this.setPersonalizationActive(true);const r=this._oPagesModel.getProperty(`/pages/${e}`);const c=r.id;const l=r.sections;const d=l[a];const h=l[s];const u=d.id;const g=h.id;const p=d.visualizations[o];const P=p.id;d.visualizations=d.visualizations.concat([]);h.visualizations=h.visualizations.concat([]);d.visualizations.splice(o,1);if(n===-1){n=h.visualizations.length}h.visualizations.splice(n,0,p);let f;if(h.visualizations[n]){f=n-1}else{f=h.visualizations.length-2}let v;if(h.visualizations[f]){v=h.visualizations[f].id}if(d.default&&!d.visualizations.length){l.splice(a,1)}this._oPagesModel.refresh();let y;try{const t=await this._oCdmServicePromise;y=await t.getPage(c)}catch(e){this.setPersonalizationActive(false);t.error("Pages - moveVisualization: Personalization cannot be saved: CDM Service or Page cannot be retrieved.",e,this.COMPONENT_NAME);throw e}try{const t=y.payload.sections[u];const e=t.layout.vizOrder;const o=t.viz;const s=y.payload.sections[g];const r=s.layout.vizOrder;const l=s.viz;const d=i(o[P]);const h=e.indexOf(P);e.splice(h,1);const p=v?r.indexOf(v)+1:0;r.splice(p,0,P);if(u!==g){delete o[P];l[P]=d}if(t.default&&!Object.keys(o).length){delete y.payload.sections[u];y.payload.layout.sectionOrder.splice(a,1)}await this._conditionalSavePersonalization(c);return{visualizationIndex:n}}catch(t){this.setPersonalizationActive(false);throw t}};g.prototype.deleteVisualization=async function(e,i,a){const o=this._oPagesModel.getProperty(`/pages/${e}`);const s=o.sections[i];if(s.default&&s.visualizations.length<2){return this.deleteSection(e,i)}this.setPersonalizationActive(true);const n=s.visualizations;const r=n[a];n.splice(a,1);this._oPagesModel.refresh();let c;try{const t=await this._oCdmServicePromise;c=await t.getPage(o.id)}catch(e){this.setPersonalizationActive(false);t.error("Pages - deleteVisualization: Personalization cannot be saved: CDM Service or Page cannot be retrieved.",e,this.COMPONENT_NAME);throw e}try{const t=c.payload.sections[s.id].layout.vizOrder;const e=c.payload.sections[s.id].viz;const i=t.indexOf(r.id);delete e[r.id];if(i>-1){t.splice(i,1)}return await this._conditionalSavePersonalization(c.identification.id)}catch(t){this.setPersonalizationActive(false);throw t}};g.prototype._getSectionIndex=function(t,e){const i=this.getModel().getProperty(`${t}/sections`)||[];for(let t=0;t<i.length;t+=1){if(i[t].id===e){return t}}};g.prototype._getVisualizationData=async function(t,e,i,a,o,s,n){const r=a||{vizId:e};const c={applications:o,visualizations:i,vizTypes:s};const l=await d.getVizData(c,r,n);if(!l.id){l.id=this._generateId(t)}return l};g.prototype.addVisualization=async function(e,i,a,o){let n;try{n=await this._oCdmServicePromise}catch(e){t.error("Pages - addVisualization: Personalization cannot be saved: CDM Service cannot be retrieved.",e,this.COMPONENT_NAME);throw e}try{let r;try{r=await Promise.all([this.loadPage(e),n.getVisualizations(),n.getApplications(),n.getVizTypes()])}catch(e){t.error("Pages - addVisualization: Personalization cannot be saved: Failed to load page, get visualizations or get applications.",e,this.COMPONENT_NAME);throw e}const[c,l,d,h]=r;const u=this._getSectionIndex(c,i);const g=this.getModel().getProperty(`${c}/sections`)||[];const p=await this._getVisualizationData(e,a,l,null,d,h);if(o){p.displayFormatHint=o}let P;for(let t=0;t<g.length;t++){if(g[t].default){P=t}}if(u!==undefined||P!==undefined){this.setPersonalizationActive(true);const s=u!==undefined?u:P||0;const r=`${c}/sections/${s}/visualizations`;this.getModel().getProperty(r).push(p);this.getModel().refresh();let l;try{l=await n.getPage(e)}catch(e){t.error("Pages - addVisualization: Personalization cannot be saved: Failed to get page.",e,this.COMPONENT_NAME);throw e}const d=l.payload.sections[i||l.payload.layout.sectionOrder[0]];d.layout.vizOrder.push(p.id);d.viz[p.id]={id:p.id,vizId:a};if(o){d.viz[p.id].displayFormatHint=o}return this._conditionalSavePersonalization(e)}const f=parseInt(c.split("/")[2],10);return await this.addSection(f,0,{title:s.i18n.getText("DefaultSection.Title"),default:true,visualizations:[p]})}catch(t){this.setPersonalizationActive(false);throw t}};g.prototype.copyVisualization=function(t,e,i){const a=i.isBookmark;if(!a){return this.addVisualization(t,e,i.vizId,i.displayFormatHint)}return this.addBookmarkToPage(t,{title:i.title,subtitle:i.subtitle,url:i.targetURL,icon:i.icon,info:i.info,serviceUrl:i.indicatorDataSource?i.indicatorDataSource.path:"",serviceRefreshInterval:i.indicatorDataSource?i.indicatorDataSource.refresh:"",numberUnit:i.numberUnit,vizType:i.vizType,vizConfig:i.vizConfig},e)};g.prototype.moveSection=async function(e,i,a){if(i===a){return Promise.resolve()}this.setPersonalizationActive(true);const o=this._oPagesModel.getProperty(`/pages/${e}/id`);const s=this._oPagesModel.getProperty(`/pages/${e}/sections`);const n=this._oPagesModel.getProperty(`/pages/${e}/sections/${i}`);const r=n.id;s.splice(i,1);if(i<a){a--}s.splice(a,0,n);this._oPagesModel.refresh();let c;try{const t=await this._oCdmServicePromise;c=await t.getPage(o)}catch(e){this.setPersonalizationActive(false);t.error("Pages - moveSection: Personalization cannot be saved: CDM Service or Page cannot be retrieved.",e,this.COMPONENT_NAME);throw e}try{const t=c.payload.layout.sectionOrder;t.splice(t.indexOf(r),1);t.splice(a,0,r);return await this._conditionalSavePersonalization(o)}catch(t){this.setPersonalizationActive(false);throw t}};g.prototype.addSection=async function(e,i,a){this.setPersonalizationActive(true);const o=a||{};const s=this._oPagesModel.getProperty(`/pages/${e}/sections`);const n=this._oPagesModel.getProperty(`/pages/${e}/id`);const r={id:o.id!==undefined?o.id:this._generateId(n),title:o.title!==undefined?o.title:"",visible:o.visible!==undefined?o.visible:true,preset:o.preset!==undefined?o.preset:false,locked:o.locked!==undefined?o.locked:false,default:o.default!==undefined?o.default:false,visualizations:o.visualizations!==undefined?o.visualizations:[]};s.splice(i,0,r);this._oPagesModel.refresh();let c;try{const t=await this._oCdmServicePromise;c=await t.getPage(n)}catch(e){this.setPersonalizationActive(false);t.error("Pages - addSection: Personalization cannot be saved: CDM Service or Page cannot be retrieved.",e,this.COMPONENT_NAME);throw e}try{const t={id:r.id,title:r.title,visible:r.visible,preset:r.preset,locked:r.locked,default:r.default,layout:{vizOrder:[]},viz:{}};if(r.visualizations){let e;for(let i=0;i<r.visualizations.length;i++){e=r.visualizations[i];t.layout.vizOrder.push(e.id);if(e.isBookmark){t.viz[e.id]=d.getVizRef(e)}else{t.viz[e.id]={id:e.id,vizId:e.vizId};if(e.displayFormatHint){t.viz[e.id].displayFormatHint=e.displayFormatHint}}}}c.payload.layout.sectionOrder.splice(i,0,r.id);c.payload.sections[r.id]=t;return await this._conditionalSavePersonalization(n)}catch(t){this.setPersonalizationActive(false);throw t}};g.prototype.deleteSection=async function(e,i){this.setPersonalizationActive(true);const a=this._oPagesModel.getProperty(`/pages/${e}/id`);const o=this._oPagesModel.getProperty(`/pages/${e}/sections`);const s=o[i].id;o.splice(i,1);this._oPagesModel.refresh();let n;try{const t=await this._oCdmServicePromise;n=await t.getPage(a)}catch(e){this.setPersonalizationActive(false);t.error("Pages - deleteSection: Personalization cannot be saved: CDM Service or Page cannot be retrieved.",e,this.COMPONENT_NAME);throw e}try{delete n.payload.sections[s];n.payload.layout.sectionOrder.splice(i,1);return await this._conditionalSavePersonalization(a)}catch(t){this.setPersonalizationActive(false);throw t}};g.prototype.setSectionVisibility=async function(e,i,a){this.setPersonalizationActive(true);const o=this._oPagesModel.getProperty(`/pages/${e}/id`);const s=this._oPagesModel.getProperty(`/pages/${e}/sections/${i}/id`);const n=this._oPagesModel.getProperty(`/pages/${e}/sections/${i}`);if(n.visible===a){return Promise.resolve()}n.visible=a;this._oPagesModel.refresh();let r;try{const t=await this._oCdmServicePromise;r=await t.getPage(o)}catch(e){this.setPersonalizationActive(false);t.error("Pages - setSectionVisibility: Personalization cannot be saved: CDM Service or Page cannot be retrieved.",e,this.COMPONENT_NAME);throw e}try{r.payload.sections[s].visible=a;return await this._conditionalSavePersonalization(o)}catch(t){this.setPersonalizationActive(false);throw t}};g.prototype.renameSection=async function(e,i,a){this.setPersonalizationActive(true);const o=this._oPagesModel.getProperty(`/pages/${e}`);const s=o.sections[i];s.title=a;this._oPagesModel.refresh();let n;try{const t=await this._oCdmServicePromise;n=await t.getPage(o.id)}catch(e){this.setPersonalizationActive(false);t.error("Pages - renameSection: Personalization cannot be saved: CDM Service or Page cannot be retrieved.",e,this.COMPONENT_NAME);throw e}try{n.payload.sections[s.id].title=a;return await this._conditionalSavePersonalization(n.identification.id)}catch(t){this.setPersonalizationActive(false);throw t}};g.prototype.resetSection=async function(e,a){this.setPersonalizationActive(true);const o=this._oPagesModel.getProperty(`/pages/${e}/id`);const s=this._oPagesModel.getProperty(`/pages/${e}/sections/${a}/id`);let n;let r;let c;let l;let d;try{const t=await this._oCdmServicePromise;n=await t.getCachedVisualizations();r=await t.getApplications();c=await t.getPage(o);l=await t.getOriginalPage(o);d=await t.getCachedVizTypes()}catch(e){this.setPersonalizationActive(false);t.error("Pages - resetSection: Personalization cannot be saved: Failed to gather data from CDM Service.",e,this.COMPONENT_NAME);throw e}try{const t=await this._getModelForPage(l,n,r,d);const h=i(t.sections.find(t=>t.id===s),20);const u=h.visualizations.map(t=>t.id);const g=this._oPagesModel.getProperty(`/pages/${e}`);g.sections.forEach(t=>{if(h.id!==t.id){t.visualizations.forEach(e=>{if(u.indexOf(e.id)!==-1){const a=this._generateId(o);const s=i(c.payload.sections[t.id].viz[e.id]);delete c.payload.sections[t.id].viz[e.id];const n=c.payload.sections[t.id].layout.vizOrder.indexOf(s.id);s.id=a;c.payload.sections[t.id].viz[a]=s;c.payload.sections[t.id].layout.vizOrder[n]=a;e.id=a}})}});this._oPagesModel._setProperty(`/pages/${e}/sections/${a}`,h);c.payload.sections[h.id]=l.payload.sections[h.id];return await this._conditionalSavePersonalization(c.identification.id)}catch(t){this.setPersonalizationActive(false);throw t}};g.prototype.resetPage=async function(e){this.setPersonalizationActive(true);const a=this._oPagesModel.getProperty(`/pages/${e}/id`);let o;let s;let n;let r;let c;try{const t=await this._oCdmServicePromise;o=await t.getCachedVisualizations();s=await t.getApplications();n=await t.getPage(a);r=await t.getOriginalPage(a);c=await t.getCachedVizTypes()}catch(e){this.setPersonalizationActive(false);t.error("Pages - resetPage: Personalization cannot be saved: Failed to gather data from CDM Service.",e,this.COMPONENT_NAME);throw e}try{const t=await this._getModelForPage(r,o,s,c);this._oPagesModel._setProperty(`/pages/${e}`,t);n.payload=i(r.payload);return await this._conditionalSavePersonalization(n.identification.id)}catch(t){this.setPersonalizationActive(false);throw t}};g.prototype.setPersonalizationActive=function(t){if(!this._bDirtyState&&t===true){this._bDirtyState=true;this._oCopiedModelData=i(this._oPagesModel.getProperty("/"),20)}else if(this._bDirtyState&&t===false){this._oPagesModel._setData(this._oCopiedModelData);this._bDirtyState=false}};g.prototype.savePersonalization=async function(e){let a;if(!e){a=i(this._aPagesToBeSaved)}else{a=[e]}try{const t=await this._oCdmServicePromise;await Promise.all(a.map(e=>{const i=this._aPagesToBeSaved.indexOf(e);this._aPagesToBeSaved.splice(i,1);return new Promise((i,a)=>{t.save(e).then(i).catch(a)}).catch(t=>{if(this._aPagesToBeSaved.indexOf(e)===-1){this._aPagesToBeSaved.push(e)}throw t})}));this._bDirtyState=false}catch(e){t.error("Pages - savePersonalization: Personalization cannot be saved: CDM Service cannot be retrieved or the save process encountered an error.",e,this.COMPONENT_NAME);throw e}};g.prototype._conditionalSavePersonalization=function(t){if(this._bImplicitSaveEnabled){return this.savePersonalization(t)}if(this._aPagesToBeSaved.indexOf(t)===-1){this._aPagesToBeSaved.push(t)}return Promise.resolve()};g.prototype._getModelForPage=async function(e,i,a,o){const c={id:e&&e.identification&&e.identification.id||"",title:e&&e.identification&&e.identification.title||"",description:"",sections:[]};n.setPerformanceMark(["FLP-Pages-Service-getModelForPage-start[",c.id,"]"].join(""));const l=await this._oCSTRServicePromise;const d=r.last("/core/catalog/enableHideGroups");for(const n of e.payload.layout.sectionOrder){const r=e.payload.sections[n];const h={id:r.id||"",title:r.default?s.i18n.getText("DefaultSection.Title"):r.title||"",visualizations:[],visible:!d||(r.visible!==undefined?r.visible:true),locked:r.locked!==undefined?r.locked:false,preset:r.preset!==undefined?r.preset:true,default:r.default!==undefined?r.default:false};c.sections.push(h);for(const s of r.layout.vizOrder){const n=r.viz[s];const c=n.vizId;const d=await l.getSystemContext(n.contentProviderId);const u=await this._getVisualizationData(e.identification.id,c,i,n,a,o,d);const g=await this._isIntentSupported(u,l);if(!g){t.warning(`The visualization with title '${u.title}' and ID '${u.vizId}' is filtered out, because intent '${u.targetURL}' is not supported.`,null,this.COMPONENT_NAME)}else{h.visualizations.push(u)}}}n.setPerformanceMark(["FLP-Pages-Service-getModelForPage-end[",c.id,"]"].join(""));return c};g.prototype.removeUnsupportedVisualizations=async function(t,e){const i=await this._oCSTRServicePromise;const a=this.getModel().getProperty(`/pages/${t}/sections/${e}/visualizations/`);const o=[];for(let t=a.length-1;t>=0;--t){o.push(this._isIntentSupported(a[t],i).then(((t,e)=>{if(!e){a.splice(t,1)}return e}).bind(this,t)))}const s=await Promise.all(o);if(s.indexOf(false)!==-1){this.getModel().refresh()}};g.prototype._isIntentSupported=async function(t,e){if(t.target===undefined){return false}if(t.target.type==="URL"){if(h.isStandardVizType(t.vizType)){return Promise.resolve(!!t.target.url)}return true}try{const i=await e.isIntentSupported([t.targetURL]);return i[t.targetURL].supported}catch{return false}};g.prototype.addBookmarkToPage=async function(e,i,a,o){if(!e){throw new Error("Pages - addBookmarkToPage: Adding bookmark tile failed: No page id is provided.")}const n=d.getBookmarkVizTypeIds(i);this.setPersonalizationActive(true);const[r,c]=await Promise.all([this._oCdmServicePromise,this._oCSTRServicePromise]);const h=await Promise.all(n.map(t=>r.getVizType(t)));const g={};h.forEach((t,e)=>{g[n[e]]=t;return g});let p;try{p=await Promise.all([this.loadPage(e),g,c.getSystemContext(o)])}catch(e){t.error("Pages - addBookmarkToPage: Personalization cannot be saved: Could not load page.",e,this.COMPONENT_NAME);throw e}const[P,f,v]=p;const y={id:this._generateId(e),vizType:i.vizType,title:i.title,subTitle:i.subtitle,icon:i.icon,info:i.info,numberUnit:i.numberUnit,target:l.toTargetFromHash(i.url),indicatorDataSource:{path:i.serviceUrl,refresh:i.serviceRefreshInterval},vizConfig:i.vizConfig,isBookmark:true};if(i.dataSource){y.dataSource={type:i.dataSource.type,settings:{odataVersion:u.get(["dataSource","settings","odataVersion"],i)}}}if(o){y.contentProviderId=o}const z=await this._getVisualizationData(e,undefined,{},y,{},f,v);const _=parseInt(/pages\/(\d+)/.exec(P)[1],10);const m=this._oPagesModel.getProperty(P);let w;if(a){w=m.sections.find(t=>t.id===a);if(!w){t.error("Pages - addBookmarkToPage: Adding bookmark tile failed: specified section was not found in the page.");throw new Error("Pages - addBookmarkToPage: Adding bookmark tile failed: specified section was not found in the page.")}}else{w=m.sections.find(t=>t.default);if(!w){return this.addSection(_,0,{title:s.i18n.getText("DefaultSection.Title"),default:true,visualizations:[z]})}}try{w.visualizations.push(z);this._oPagesModel.refresh();let i;try{i=await r.getPage(e)}catch(e){t.error("Pages - addBookmarkToPage: Personalization cannot be saved: CDM Service or Page cannot be retrieved.",e,this.COMPONENT_NAME);throw e}const a=i.payload.sections[w.id];a.layout.vizOrder.push(z.id);a.viz[z.id]=d.getVizRef(z);return await this._conditionalSavePersonalization(e)}catch(t){this.setPersonalizationActive(false);throw t}};g.prototype._visitPages=async function(t){const e=await this._oCdmServicePromise;const i=await e.getAllPages()||[];i.forEach(e=>{t(e)})};g.prototype._visitSections=function(t){return this._visitPages(e=>{const i=e.payload&&e.payload.sections||{};Object.keys(i).forEach(a=>{t(i[a],e)})})};g.prototype._visitVizReferences=function(t){return this._visitSections((e,i)=>{const a=e.viz||{};Object.keys(a).forEach(o=>{t(a[o],e,i)})})};g.prototype._findBookmarks=async function(t){const e=[];let i=l.toTargetFromHash(t.url);i=d.harmonizeTarget(i);await this._visitVizReferences((a,o,s)=>{if(a.isBookmark&&t.vizType===a.vizType&&(a.contentProviderId||"")===(t.contentProviderId||"")&&l.isSameTarget(i,a.target)){e.push({vizRefId:a.id,sectionId:o.id,pageId:s.identification.id})}});return e};g.prototype.countBookmarks=async function(t){const e=await this._findBookmarks(t);return e.length};g.prototype.deleteBookmarks=async function(t,e,i){let a=0;const o=await this._findBookmarks(t);await o.reduce((t,o)=>{if(e&&o.pageId!==e){return t}if(i&&o.sectionId!==i){return t}return t.then(()=>this.findVisualization(o.pageId,o.sectionId,null,o.vizRefId)).then(t=>{const e=t[0];const i=this.getPageIndex(e.pageId);return this.deleteVisualization(i,e.sectionIndex,e.vizIndexes[0])}).then(()=>{a=a+1}).catch(()=>{})},Promise.resolve());return a};g.prototype.updateBookmarks=async function(e,i){if(!e||!e.url||typeof e.url!=="string"){t.error("Fail to update bookmark. No valid URL");throw new Error("Invalid URL provided")}if(!i||typeof i!=="object"){t.error(`Fail to update bookmark. No valid parameters, URL is: ${e.url}`);throw new Error("Missing parameters")}let a=0;const o=await Promise.all([this._findBookmarks(e)]);const s=o[0];await s.reduce((t,e)=>t.then(()=>this.findVisualization(e.pageId,e.sectionId,null,e.vizRefId)).then(t=>{const e=t[0];const a=this.getPageIndex(e.pageId);const o={subtitle:i.subtitle,icon:i.icon,info:i.info,numberUnit:i.numberUnit,indicatorDataSource:{path:i.serviceUrl,refresh:i.serviceRefreshInterval},vizConfig:i.vizConfig};if(i.title){o.title=i.title}if(i.url){o.target=d.harmonizeTarget(l.toTargetFromHash(i.url))}return this.updateVisualization(a,e.sectionIndex,e.vizIndexes[0],o)}).then(()=>{a=a+1}).catch(()=>{}),Promise.resolve());return a};g.prototype.updateVisualization=async function(t,e,s,n){const r=await this._oCdmServicePromise;const[c,h,u]=await Promise.all([r.getCachedVisualizations(),r.getApplications(),r.getCachedVizTypes()]);const g=this._oPagesModel.getProperty(`/pages/${t}`);const p=g.sections[e];const P=p.visualizations;let f=P[s];const v={};this.setPersonalizationActive(true);if(this._isPropertyChanged(f.title,n.title)){v.title=n.title}if(n.target&&!l.isSameTarget(f.target,n.target)){v.target=n.target}if(this._isPropertyChanged(f.subtitle,n.subtitle)){v.subtitle=n.subtitle}if(this._isPropertyChanged(f.icon,n.icon)){v.icon=n.icon}if(this._isPropertyChanged(f.info,n.info)){v.info=n.info}if(this._isPropertyChanged(f.numberUnit,n.numberUnit)){v.numberUnit=n.numberUnit}if(this._isPropertyChanged(f.displayFormatHint,n.displayFormatHint)){v.displayFormatHint=n.displayFormatHint}if(n.indicatorDataSource&&f.indicatorDataSource&&(this._isPropertyChanged(f.indicatorDataSource.path,n.indicatorDataSource.path)||this._isPropertyChanged(f.indicatorDataSource.refresh,n.indicatorDataSource.refresh))){v.indicatorDataSource=i(f.indicatorDataSource);a(v.indicatorDataSource,n.indicatorDataSource)}if(n.vizConfig){f.vizConfig=o({},f.vizConfig,n.vizConfig);v.vizConfig=f.vizConfig}a(f,v);const y=d.getVizRef(f);f=await this._getVisualizationData(g.id,y.vizId,c,y,h,u);P[s]=f;this._oPagesModel.refresh();await this._updateVisualizationCDMData(g.id,p.id,f.id,v);return{pageId:g.id,sectionId:p.id,vizRefId:f.id}};g.prototype._updateVisualizationCDMData=async function(e,i,o,s){let n;try{const t=await this._oCdmServicePromise;n=await t.getPage(e)}catch(e){this.setPersonalizationActive(false);t.error("Pages - updateVisualization: Personalization cannot be saved: CDM Service or Page cannot be retrieved.",e,this.COMPONENT_NAME);throw e}try{const t=n.payload.sections[i].viz[o];const e=d.getVizRef(s);e.vizConfig=s.vizConfig;a(t,e);return await this._conditionalSavePersonalization(n.identification.id)}catch(t){this.setPersonalizationActive(false);throw t}};g.prototype._isPropertyChanged=function(t,e){if((e||e==="")&&t!==e){return true}return false};g.hasNoAdapter=true;return g},true);
//# sourceMappingURL=Pages.js.map