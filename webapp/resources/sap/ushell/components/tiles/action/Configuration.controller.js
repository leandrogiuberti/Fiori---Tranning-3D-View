// Copyright (c) 2009-2025 SAP SE, All Rights Reserved
sap.ui.define(["sap/ui/core/Element","sap/ui/core/mvc/Controller","sap/ushell/components/tiles/utils","sap/ui/core/library","sap/m/MessageBox"],(e,t,s,n,a)=>{"use strict";const o=n.ValueState;return t.extend("sap.ushell.components.tiles.action.Configuration",{sEnterValuePlaceHolder:"",sDuplicateErrorMsg:"",sDuplicateErrorTitle:"",sInvalidParmMsg:"",aDefaultObjects:[{obj:"",name:""},{obj:"*",name:"*"}],onConfigurationInputChange:function(e){s.checkTMInput(this.getView(),e)},onInit:function(){const e=this.getView();const t=e.byId("semantic_objectInput");const n=e.byId("navigation_provider_roleInput");const a=e.byId("navigation_provider_instanceInput");const o=e.byId("target_application_aliasInput");const i=e.byId("semantic_actionInput");const l=e.byId("targetTypeInput");const c=s.getResourceBundleModel();e.setModel(c,"i18n");e.setViewName("sap.ushell.components.tiles.action.Configuration");s.createSemanticObjectModel(this,t,this.aDefaultObjects);s.createRoleModel(this,n,a);s.createAliasModel(this,o);s.createActionModel(this,i);s.createNavigationProviderModel(this,l);t.attachChange(t=>{const s=t.getSource().getValue();e.getModel().setProperty("/config/semantic_object",s)});n.attachChange(t=>{const n=t.getSource().getValue();e.getModel().setProperty("/config/navigation_provider_role",n);s.updateAliasModel(e,o)});a.attachChange(t=>{const s=t.getSource().getValue();e.getModel().setProperty("/config/navigation_provider_instance",s)});o.attachChange(t=>{const s=t.getSource().getValue();e.getModel().setProperty("/config/target_application_alias",s)});const r=s.getResourceBundle();this.sEnterValuePlaceHolder=r.getText("configuration.signature.table.valueFieldLbl");this.sDuplicateErrorMsg=r.getText("configuration.signature.uniqueParamMessage.text");this.sDuplicateErrorTitle=r.getText("configuration.signature.uniqueParamMessage.title");this.sInvalidParmMsg=r.getText("configuration.signature.invalidParamMessage.text")},handleMandatoryChange:function(t){const s=t.getParameter("id");const n=e.getElementById(s).getParent().getCells();const a=t.getParameter("selected");if(a){n[2].setEnabled(true);n[2].setPlaceholder(this.sEnterValuePlaceHolder);n[4].setEnabled(false);n[4].setValue("");n[4].setPlaceholder("");n[3].setEnabled(true)}else{n[2].setEnabled(false);n[2].setValue("");n[2].setPlaceholder("");n[4].setEnabled(true);n[4].setPlaceholder(this.sEnterValuePlaceHolder);n[3].setEnabled(false);n[3].setSelected(false)}},addRow:function(){const e=this.getView();const t=e.getModel();const n=t.getProperty("/config/rows");const a=s.getEmptyRowObj();n.push(a);t.setProperty("/config/rows",n)},deleteRow:function(){const e=this.getView();const t=e.getModel();const s=t.getProperty("/config/rows");const n=e.byId("mappingSignatureTable");const a=n.getSelectedIndices();const o=a.sort((e,t)=>t-e).slice();for(let e=0;e<o.length;e++){n.removeSelectionInterval(o[e],o[e]);s.splice(o[e],1)}t.setProperty("/config/rows",s)},checkDuplicateNames:function(t){const n=this.getView().getModel();const i=n.getProperty("/config/rows");const l=e.getElementById(t.getParameter("id"));const c=t.getParameter("newValue");if(c!==""&&!/^[\w-/]+$/.test(c)){l.setValueState(o.Error);a.alert(this.sInvalidParmMsg,this.focusNameField.bind(l),this.sDuplicateErrorTitle)}if(s.tableHasDuplicateParameterNames(i)){l.setValueState(o.Error);a.alert(this.sDuplicateErrorMsg,this.focusNameField.bind(l),this.sDuplicateErrorTitle)}else{l.setValueState(o.None)}},focusNameField:function(){this.focus()},onValueHelpRequest:function(e){s.objectSelectOnValueHelpRequest(this,e,false)},onActionValueHelpRequest:function(e){s.actionSelectOnValueHelpRequest(this,e)},onRoleValueHelpRequest:function(e){s.roleSelectOnValueHelpRequest(this,e)},onInstanceValueHelpRequest:function(e){s.instanceSelectOnValueHelpRequest(this,e)},instanceSuggest:function(e){s.instanceSuggest(this,e)},aliasSuggest:function(e){s.aliasSuggest(this,e)},onAliasValueHelpRequest:function(e){s.applicationAliasSelectOnValueHelpRequest(this,e)},onFormFactorChange:function(){const e=this.getView().getModel();e.setProperty("/config/formFactorConfigDefault",false)},onApplicationTypeChange:function(e){const t=e.getParameters();if(t.selectedItem){s.displayApplicationTypeFields(t.selectedItem.getKey(),this.getView())}}})});
//# sourceMappingURL=Configuration.controller.js.map