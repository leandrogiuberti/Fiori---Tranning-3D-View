<mvc:View
    controllerName="sap.ushell.components.shell.ShellBar.controller.ShellBar"
    xmlns="sap.ushell.ui"
    xmlns:mvc="sap.ui.core.mvc"
    xmlns:m="sap.m"
    xmlns:core="sap.ui.core"
    xmlns:thirdparty="sap.ushell.gen.ui5.webcomponents-fiori.dist"
    visible="{shellModel>/header/visible}"
    core:require="{
        BindingHelper: 'sap/ushell/state/BindingHelper',
        icons: 'sap/ushell/thirdparty/ui5/webcomponents-icons/AllIcons',
        iconsTnt: 'sap/ushell/thirdparty/ui5/webcomponents-icons-tnt/AllIcons',
        iconsBusinessSuite: 'sap/ushell/thirdparty/ui5/webcomponents-icons-business-suite/AllIcons'
    }"
>
<!-- The icons are imported to make sure they are available for e.g. custom shell bar items. -->

    <thirdparty:ShellBar
        id="shellBar"
        class="sapUshellShellSearch sapUshellShellBar"
        secondaryTitle="{shellModel>/header/secondTitle}"
        searchFieldToggle=".onSearchFieldToggle"
        showSearchField="{/searchField/show}"
        hideSearchButton="{/searchField/show}"
        contentItemVisibilityChange=".onContentItemVisibilityChange"
        searchButtonClick=".onSearchButtonClick"
        showNotifications="{
            path: 'shellModel>/header/headEndItems',
            formatter: '.hasNotifications'
        }"
        notificationsClick=".onNotificationsClick"
        notificationsCount="{= %{configModel>/notificationsCount} > 0 ? %{configModel>/notificationsCount} : ''}"
        showProductSwitch="{
            path: 'shellModel>/header/headEndItems',
            formatter: '.hasProducts'
        }"
        productSwitchClick=".onProductSwitchClick"
        profileClick=".onProfileClick"
        startButton="{
            path: 'shellModel>/header/headItems',
            factory: 'BindingHelper.factory'
        }"
        items="{
            path: 'shellModel>/header/headEndItems',
            factory: 'BindingHelper.factory',
            filters: [{ path: '', caseSensitive: true, test: '.isHeadEndItem' }]
        }"
        content="{
            path: 'shellModel>/header/headEndItems',
            factory: 'BindingHelper.factory',
            filters: [{ path: '', caseSensitive: true, test: '.isContentItem' }]
        }"
        profile="{
            path: 'shellModel>/header/headEndItems',
            factory: 'BindingHelper.factory',
            filters: [{ path: '', test: '.isProfileMenu' }]
        }"
    >
        <thirdparty:searchField>
            <!-- Create dummy search input for ESearch when ShellBar is enabled for the old ESH. -->
            <!-- Make it busy to indicate that the search is not yet ready to be used. -->
            <!-- If the Slot is empty, the Icon is missing; If the Slot content is invisible, the Icon is also missing. -->
            <m:Input id="dummySearchInput"
                     busy="true"
                     busyIndicatorDelay="0"
                     visible="{shellConfig>/searchAvailable}"/>
        </thirdparty:searchField>
        <thirdparty:branding>
            <thirdparty:ShellBarBranding
                href="{/logo/homeUri}"
                target="_self"
                text="{config>/windowTitleExtension}">
                <thirdparty:logo>
                    <m:Image
                        src="{shellModel>/header/logo/src}"
                        alt="{shellModel>/header/logo/alt}"
                        tooltip="{= ${/logo/isRootIntent} ? ${i18n>homeBtn_tooltip_text} : ${i18n>lastPage_tooltip}}"
                    />
                </thirdparty:logo>
            </thirdparty:ShellBarBranding>
        </thirdparty:branding>
        <thirdparty:customData>
            <core:CustomData
                key="help-id"
                value="ShellBar"
                writeToDom="true"
            />
        </thirdparty:customData>
    </thirdparty:ShellBar>
</mvc:View>
