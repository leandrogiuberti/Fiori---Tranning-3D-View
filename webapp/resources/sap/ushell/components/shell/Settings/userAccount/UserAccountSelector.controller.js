// Copyright (c) 2009-2025 SAP SE, All Rights Reserved
sap.ui.define(["sap/ui/core/mvc/Controller","sap/ui/model/json/JSONModel","sap/base/Log","sap/ushell/Config","sap/ushell/resources","sap/m/MessageBox","sap/m/MessageToast","sap/ushell/utils","sap/ushell/utils/WindowUtils","sap/ushell/Container"],(e,s,t,n,o,i,r,a,l,g)=>{"use strict";return e.extend("sap.ushell.components.shell.Settings.userAccount.UserAccountSelector",{onInit:function(){const e=g.getRendererInternal("fiori2").getShellConfig();const s=e.enableUserImgConsent;this.imgConsentEnabled=s||false;this.oUser=g.getUser();const i=this.getConfigurationModel();this.getView().setModel(o.i18nModel,"i18n");this.getView().setModel(i,"config");this.oUser.attachOnSetImage(()=>{i.setProperty("/icon",n.last("/core/shell/model/userImage/personPlaceHolder"))});g.getServiceAsync("PersonalizationV2").then(e=>e.isResetEntirePersonalizationSupported().then(e=>{if(!e){i.setProperty("/isResetPersonalizationVisible",false)}})).catch(e=>{t.error(`The personalization service could not be loaded because of: .${e.toString()}`)})},getConfigurationModel:function(){const e=new s({});const t=g.getUser();const o=n.last("/core/shell/model/userImage/personPlaceHolder")||"sap-icon://person-placeholder";e.setData({icon:o,name:t.getFullName(),id:t.getId(),mail:t.getEmail(),server:window.location.host,imgConsentEnabled:this.imgConsentEnabled,isImageConsentForUser:t.getImageConsent(),isResetPersonalizationVisible:this.isResetPersonalizationVisible||true,displayUserId:n.last("/core/userSettings/displayUserId")});return e},onCancel:function(){if(this.imgConsentEnabled){this.getView().getModel("config").setProperty("/isImageConsentForUser",this.oUser.getImageConsent())}},onSave:function(e){if(this.imgConsentEnabled){return this.onSaveUserImgConsent(e)}return Promise.resolve()},onSaveUserImgConsent:function(e){const s=this.oUser;const n=s.getImageConsent();const o=this.getView().getModel("config");const i=o.getProperty("/isImageConsentForUser");let r;t.debug("[000] onSaveUserImgConsent:current",i,"UserAccountSelector.controller");t.debug("[000] onSaveUserImgConsent:original",n,"UserAccountSelector.controller");if(n!==i){s.setImageConsent(i);return new Promise((i,a)=>{r=e();r.then(()=>{s.resetChangedProperty("isImageConsent");i()});r.catch(e=>{const r=e.message;if(!r.includes("ISIMAGECONSENT")){s.resetChangedProperty("isImageConsent");i()}else{s.setImageConsent(n);s.resetChangedProperty("isImageConsent");o.setProperty("/isImageConsentForUser",n);t.error("Failed to update user image consent",e);a(e)}})})}return Promise.resolve()},termsOfUserPress:function(){const e=this.getView().byId("termsOfUseTextFlexBox");const s=this.getView().byId("termsOfUseLink");const t=e.getVisible();e.setVisible(!t);s.setText(o.i18n.getText(t?"userImageConsentDialogShowTermsOfUse":"userImageConsentDialogHideTermsOfUse"))},showMessageBoxWarningDeletePersonalization:function(){i.warning(o.i18n.getText("userAccountResetPersonalizationWarningDialogDescription"),{onClose:this.resetEntirePersonalization.bind(this),actions:[i.Action.OK,i.Action.CANCEL],contentWidth:"600px"})},resetEntirePersonalization:function(e){if(e===i.Action.OK){this.getView().setBusy(true);g.getServiceAsync("PersonalizationV2").then(e=>e.resetEntirePersonalization().then(()=>{r.show(o.i18n.getText("userAccountResetPersonalizationWarningDialogSuccessToast"),{onClose:l.refreshBrowser})}).catch(this.showErrorMessageBox.bind(this))).catch(this.showErrorMessageBox.bind(this)).finally(()=>{this.getView().setBusy(false)})}},showErrorMessageBox:function(){i.error(o.i18n.getText("userAccountResetPersonalizationWarningDialogErrorDialog"),{actions:i.Action.CLOSE,contentWidth:"600px"})}})});
//# sourceMappingURL=UserAccountSelector.controller.js.map