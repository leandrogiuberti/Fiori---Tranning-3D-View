// Copyright (c) 2009-2025 SAP SE, All Rights Reserved
sap.ui.define(["sap/base/Log","sap/ui/core/Element","sap/ui/core/mvc/Controller","sap/ui/core/Fragment","sap/ui/model/json/JSONModel","sap/ui/Device","sap/ushell/Config","sap/ushell/EventHub","sap/ushell/resources","sap/ushell/utils/WindowUtils","sap/ushell/components/shell/Settings/ErrorMessageHelper","sap/ui/core/message/Message","sap/ui/core/message/MessageType","sap/ui/base/Object","sap/base/util/deepClone","sap/ushell/Container"],(e,t,s,n,i,r,o,a,l,d,c,u,g,h,f,p)=>{"use strict";return s.extend("sap.ushell.components.shell.Settings.UserSettings",{onInit:function(){const e=this.getView();const t=new i(r);t.setDefaultBindingMode("OneWay");e.setModel(t,"device");this._aPreviouslySelectedItems=[];e.byId("userSettingEntryList").addEventDelegate({onAfterRendering:this._listAfterRendering.bind(this)});this._mLoadedEntryContent=new Map;this._mLoadedWrappers=new Map;e.setModel(new i({}));e.setModel(l.i18nModel,"i18n");e.setModel(new i({entries:{}}),"results");r.orientation.attachHandler(this._fnOrientationChange,this);this._oSelectedItemOnMobile=null;this._oConfigDoable=o.on("/core/userPreferences/entries").do(this._processNewEntries.bind(this))},_fnOrientationChange:function(){const e=this.getView().byId("settingsApp");this._updateHeaderButtonVisibility(e.isMasterShown())},_formatDescription:function(e,t,s){if(t.length>1){return""}return s[e].valueResult||""},_processNewEntries:function(e){const t=this.getView();const s=t.getModel("results");e.forEach(e=>{const t=s.getProperty(`/entries/${e.id}`);if(!t){s.setProperty(`/entries/${e.id}`,{valueResult:null,contentResult:null})}this._setEntryValueResult(e.id)});const n=t.getModel();const i=t.byId("userSettingEntryList");let o=i.getSelectedItem();if(!r.system.phone&&!o){o=i.getItems()[0]}if(o){const e=o.getBindingContext().getObject();this._aPreviouslySelectedItems=e.tabs.map(e=>e.id)}n.setProperty("/entries",this._calculateEntryGroups(e));t.byId("userSettingEntryList").invalidate()},_calculateEntryGroups:function(e){const t=[];const s=new Map;const n=this.getView().getModel("results");e.forEach(e=>{if(e.visible===false){const t=n.getProperty(`/entries/${e.id}/contentResult`);if(t){this.getView().byId("settingsApp").removeDetailPage(t);n.setProperty(`/entries/${e.id}/contentResult`,null)}const s=a.last("UserSettingsOpened")||{};delete s[e.id];a.emit("UserSettingsOpened",s);return}if(e.groupingEnablement){n.setProperty(`/entries/${e.id}/contentResult`,null);const i=s.get(e.groupingId);if(i||i===0){t[i].tabs.push(e);return}s.set(e.groupingId,t.length)}e.tabs=[e];t.push(e)});return t},_afterClose:function(){if(window.document.activeElement&&window.document.activeElement.tagName==="BODY"){window.document.getElementById("userActionsMenuHeaderButton").focus()}},open:function(e){const t=this.byId("userSettingsDialog");if(e){this.sTargetEntryId=e}t.open()},_listAfterRendering:function(){const e=this.getView();const t=e.byId("userSettingEntryList");const s=t.getItems();let n;let i;s.forEach(e=>{const t=e.getBindingContext().getObject();this._setEntryValueResult(t.id);i=t?.tabs?.find(e=>e.id===this.sTargetEntryId)?.id;if(t.id===this.sTargetEntryId||i){n=e;this.sTargetEntryId=null}});if(!r.system.phone){if(!n&&this._aPreviouslySelectedItems){for(let e=0;e<this._aPreviouslySelectedItems.length;e++){for(let n=0;n<s.length;n++){const r=s[n];if(r.getBindingContext().getObject().id===this._aPreviouslySelectedItems[e]){t.setSelectedItem(r);this._toDetail(r,i);r.focus();return}}}}n=n||s[0];if(n){t.setSelectedItem(n);this._toDetail(n,i);n.focus()}}},_setEntryValueResult:function(t){let s;const n=this.getView().getModel("results");let i=o.last("/core/userPreferences/entries");let r=i.findIndex(e=>e.id===t);if(r===-1){return Promise.resolve()}return Promise.resolve().then(()=>{const a=i[r].title;const d=i[r].valueArgument;if(typeof d!=="function"){const e=n.getProperty(`/entries/${t}/valueResult`);if(e!==null&&e!==undefined){return e}return d}s=f(n.getProperty("/entries"));s[t].valueResult=l.i18n.getText("genericLoading");n.setProperty("/entries",s);return Promise.resolve().then(d).then(e=>{if(typeof e!=="object"){return e}if(e&&e.value!==undefined){i=o.last("/core/userPreferences/entries");r=i.findIndex(e=>e.id===t);if(r>-1){i[r].visible=!!e.value;o.emit("/core/userPreferences/entries",i)}}return e.displayText}).catch(t=>{e.error(`Can not load value for ${a} entry`,t);return l.i18n.getText("loadingErrorMessage")})}).then(e=>{s=f(n.getProperty("/entries"));s[t].valueResult=e||"";n.setProperty("/entries",s)})},_navBackButtonPressHandler:function(){const e=this.byId("settingsApp");e.backDetail();e.getCurrentDetailPage().setBusy(false);this._updateHeaderButtonVisibility(true)},_navToggleButtonPressHandler:function(){const e=this.byId("settingsApp");const t=e.isMasterShown();if(t){e.hideMaster()}else{e.showMaster()}this._updateHeaderButtonVisibility(!t)},_updateHeaderButtonVisibility:function(e){if(r.system.phone){const t=this.getView().byId("userSettingsNavBackButton");t.setVisible(!e)}else{const t=this.getView().byId("userSettingsMenuButton");if(r.orientation.portrait){t.setVisible(true);t.setPressed(e);t.setTooltip(l.i18n.getText(e?"ToggleButtonHide":"ToggleButtonShow"))}else{t.setVisible(false)}}},_afterMasterClose:function(){this._updateHeaderButtonVisibility(false)},_onSelectionChange:function(e){this.getView().byId("settingsApp").getCurrentDetailPage().setBusy(true);this._toDetail(e.getSource().getSelectedItem())},_toDetail:function(e,t){const s=this.getView();const n=s.getModel();const i=s.getModel("results");const a=s.byId("settingsApp");const l=e.getBindingContextPath();const d=n.getProperty(l);const c=d.id;const u=i.getProperty(`/entries/${c}/contentResult`);if(d.tabs){this._aPreviouslySelectedItems=d.tabs.map(e=>e.id)}else{this._aPreviouslySelectedItems=[c]}if(r.system.phone){this._oSelectedItemOnMobile=e;e.setSelected(false)}if(u){this._navToDetail(u,s);const e=d.tabs.map(e=>e.id).join("-");const n=this._mLoadedWrappers.get(e);if(n){n.then(e=>{const s=e.getContent()[1];if(t){s.setSelectedKey(t)}const n=s.getSelectedKey();const i=s.getItems();let r=i.findIndex(e=>e.getId()===n);if(r===-1){r=0}this._emitEntryOpened(d.tabs[r].id)});return Promise.resolve()}}return Promise.all([this._createContentWrapper(d),this._createEntryContent(d)]).then(n=>{const r=n[0];const l=n[1];const u=o.last("/core/userPreferences/entries");const g=u.some(e=>e.id===c&&e.visible!==false);const h=s.byId("userSettingEntryList");const f=h.getSelectedItem()||this._oSelectedItemOnMobile;const p=e===f;if(!g){if(p){if(a.getMode()==="ShowHideMode"){a.showMaster();this._updateHeaderButtonVisibility(true)}else{this._toDetail(f||h.getItems()[0])}}return}a.addDetailPage(r);if(d.tabs.length>1){r.getContent()[1].getItems()[0].addContent(l)}else{r.addContent(l)}const y=r.getId();i.setProperty(`/entries/${c}/contentResult`,y);if(t){const e=r.getContent()?.[1];e?.setSelectedKey(t)}if(p){this._navToDetail(y,s);this._emitEntryOpened(c)}return r.getId()})},_createEntryContent:function(e){if(!this._mLoadedEntryContent.get(e.id)){if(typeof e.contentFunc==="function"){this._mLoadedEntryContent.set(e.id,new Promise(t=>{e.contentFunc().then(e=>{if(h.isObjectA(e,"sap.ui.core.Control")){t(e)}else{this._createErrorContent(l.i18n.getText("loadingErrorMessage")).then(t)}}).catch(()=>{this._createErrorContent(l.i18n.getText("loadingErrorMessage")).then(t)})}))}else{this._mLoadedEntryContent.set(e.id,this._createErrorContent(l.i18n.getText("userSettings.noContent")))}}return this._mLoadedEntryContent.get(e.id)},_createContentWrapper:function(e){const s=e.tabs.map(e=>e.id);const r=s.join("-");if(!this._mLoadedWrappers.get(r)){this._mLoadedWrappers.set(r,n.load({name:"sap.ushell.components.shell.Settings.ContentWrapper",controller:{onTabSelected:function(s){const n=t.getElementById(s.getParameter("id"));const i=s.getParameter("item");const r=n.indexOfItem(i);const o=e.tabs[r];this._emitEntryOpened(o.id);this._createEntryContent(o).then(e=>{i.addContent(e)})}.bind(this)}}).then(t=>{t.setModel(new i({title:e.title,showHeader:!e.provideEmptyWrapper,tabs:e.tabs}),"entryInfo");return t}))}return this._mLoadedWrappers.get(r).then(t=>{const s=t.getContent()[1];const n=s.getSelectedKey();const i=s.getItems().findIndex(e=>e.getId()===n);if(i>-1){const t=e.tabs[i];this._emitEntryOpened(t.id)}return t})},_createErrorContent:function(e){return n.load({name:"sap.ushell.components.shell.Settings.ErrorContent"}).then(t=>{t.setModel(new i({errorMessage:e}));return t})},_navToDetail:function(e,t){const s=t.byId("settingsApp");s.getCurrentDetailPage().setBusy(false);s.toDetail(e);s.getCurrentDetailPage().setBusy(false);if(s.getMode()==="ShowHideMode"){s.hideMaster();this._updateHeaderButtonVisibility(false)}},_emitEntryOpened:function(e){const t=a.last("UserSettingsOpened")||{};t[e]=true;a.emit("UserSettingsOpened",t)},updateUserPreferences:function(){e.debug("[000] updateUserPreferences: ","UserSettings.controller");if(this._updateUserPreferencesPromise){return this._updateUserPreferencesPromise}let t;let s;this._updateUserPreferencesPromise=new Promise((e,n)=>{t=e;s=n});this._updateUserPreferencesPromise.sendRequest=function(){p.getServiceAsync("UserInfo").then(n=>{e.debug("[000] updateUserPreferences: sendRequest","UserSettings.controller");n.updateUserPreferences().done(t).fail(s).always(()=>{e.debug("[000] updateUserPreferences: sendRequest: _updateUserPreferencesPromise","UserSettings.controller");this._updateUserPreferencesPromise=null})})}.bind(this);return this._updateUserPreferencesPromise},_maybeReload:function(t){let s=false;let n=false;let i=false;let r=[];let o=[];t.forEach(e=>{if(e&&e.clearSapUserContextCookie){n=true}if(e&&e.refresh){s=true}if(e&&e.noHash){i=true}if(e&&e.urlParams&&e.urlParams.length>0){r=r.concat(e.urlParams)}if(e&&e.obsoleteUrlParams&&e.obsoleteUrlParams.length>0){o=o.concat(e.obsoleteUrlParams)}});if(s){e.debug("[000]refresh browser with Parameters:",JSON.stringify(r),"UserSettings.controller");if(n){d.clearSapUserContextCookie()}if(i){window.location=window.location.href.replace(window.location.hash,"")}else{d.refreshBrowser(r,o)}return true}},_handleSaveButtonPress:function(){c.removeErrorMessages();const t=this.getView().byId("userSettingsDialog");const s=o.last("/core/userPreferences/entries");const n=a.last("UserSettingsOpened")||{};if(Object.keys(n).length===0){this._handleSettingsDialogClose();this._showSuccessMessageToast();return Promise.resolve()}t.setBusy(true);const i=s.reduce((t,s)=>{if(n[s.id]){e.debug("[000] _handleSaveButtonPress: oEntry.id: ",s.id,"UserSettings.controller");t.push(this._executeEntrySave(s))}return t},[]);e.debug("[000] _handleSaveButtonPress:_updateUserPreferencesPromise",this._updateUserPreferencesPromise,"UserSettings.controller");if(this._updateUserPreferencesPromise){this._updateUserPreferencesPromise.sendRequest()}return Promise.all(i).then(s=>{e.debug("[000] _handleSaveButtonPress: then save aResults",JSON.stringify(s),"UserSettings.controller");const n=c.filterMessagesToDisplay();let i={};let r="";let o="";t.setBusy(false);this._handleSettingsDialogClose();if(n.length>0){i=n[0];r=i.getDescription();a.emit("UserSettingsOpened",null);n.forEach(e=>{o+=`Entry: ${e.getAdditionalText()} - Error message: ${e.getDescription()}\n`});e.error("Failed to save the following entries",o);if(this._maybeReload(s)){return}return p.getServiceAsync("MessageInternal").then(e=>{e.init();e.show(e.Type.ERROR,l.i18n.getText("userSettings.SavingError.SomeChanges"),{details:r})})}this._showSuccessMessageToast();a.emit("UserSettingsOpened",null);this._maybeReload(s)})},_executeEntrySave:function(t){let s;let n;function i(e){return e||{}}function r(s){e.debug("[000] _onError: errorInformation",JSON.stringify(s),"UserSettings.controller");let n;const i=t.id;const r=t.title;if(!s){n=l.i18n.getText("userSettings.SavingError.Undefined")}else if(typeof s==="string"){n=s}else if(Array.isArray(s)){s.forEach(e=>{e.setAdditionalText(r);e.setTechnicalDetails({pluginId:i});c.addMessage(e)});return}else if(h.isObjectA(s,"sap.ui.core.message.Message")){s.setAdditionalText(r);s.setTechnicalDetails({pluginId:i});c.addMessage(s);return}else{n=l.i18n.getText("userSettings.SavingError.WithMessage",[s.message])}c.addMessage(new u({type:g.Error,additionalText:r,technicalDetails:{pluginId:i},description:n,message:n}))}try{e.debug(`[000] onSave: oEntry.id: ${t.id}`,"UserSettings.controller");this._isExecuteEntrySavedInUserSettingsController=true;s=t.onSave(this.updateUserPreferences.bind(this))}catch(e){return r(e)}if(s){if(s.promise){e.warning(`jQuery.promise is used to save ${t.title} settings entry.\n`+"The using of jQuery.promise for onSave is deprecated. Please use the native promise instead.");n=new Promise(e=>{s.done(t=>{e(i(t))}).fail(t=>{e(r(t))})})}else{n=s.then(i).catch(r)}}else{n=Promise.resolve();e.warning(`${t.title} settings might not be saved correctly, it seems like the API contract is not correctly fullfilled.\n`+"Please contact the owner of the setting.")}return n},_showSuccessMessageToast:function(){sap.ui.require(["sap/m/MessageToast"],e=>{const t=l.i18n.getText("savedChanges");e.show(t,{offset:"0 -50"})})},_handleCancel:function(){const t=o.last("/core/userPreferences/entries");const s=a.last("UserSettingsOpened")||{};if(s){t.forEach(t=>{if(s[t.id]&&t.onCancel){try{t.onCancel()}catch(t){e.error("Failed to cancel the following entries",t)}}})}a.emit("UserSettingsOpened",null);this._handleSettingsDialogClose()},_handleSettingsDialogClose:function(){p.getUser().resetChangedProperties();if(r.system.phone){this.getView().byId("settingsApp").toMaster("settingsView--userSettingMaster")}this.getView().byId("userSettingsMessagePopoverBtn").setVisible(false);this.getView().byId("userSettingsDialog").close()},onExit:function(){this._oConfigDoable.off();r.orientation.detachHandler(this._fnOrientationChange,this)}})});
//# sourceMappingURL=UserSettings.controller.js.map