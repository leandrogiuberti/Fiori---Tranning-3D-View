// Copyright (c) 2009-2025 SAP SE, All Rights Reserved
sap.ui.define(["sap/base/util/deepExtend","sap/ui/base/Object","sap/ui/core/EventBus","sap/ui/performance/Measurement"],(e,i,s,t)=>{"use strict";const n=i.extend("sap.ushell.components._HomepageManager.DashboardLoadingManager",{metadata:{},constructor:function(e,i){const t=s.getInstance();this.currentVisibleTiles=[];this.aRefreshTiles=[];this.oBusyIndicatorTiles={};this.oActiveDynamicTiles={};this.oResolvedTiles={};this.oInProgressTiles={};this.oDashboardManager=i.oDashboardManager;t.subscribe("launchpad","visibleTilesChanged",this._onVisibilityChanged,this);t.subscribe("launchpad","dashboardTileClick",this._addTileToRefreshArray,this);t.subscribe("launchpad","refreshTiles",this._refreshTiles,this);t.subscribe("launchpad","setTilesNoVisibility",this._setTilesNoVisibility,this);t.subscribe("launchpad","onHiddenTab",this._setTilesNoVisibility,this)},_onVisibilityChanged:function(e,i,s){this.currentVisibleTiles=s;if(this.oDashboardManager.isBlindLoading()){this.manageTilesView()}this.oDashboardManager.tabsModeVisibilityChanged();this.manageBusyIndicatorTiles();this.manageDynamicTiles()},manageDynamicTiles:function(){t.average("DashboardLoadingManagerActiveDynamicTile","Manage Active Dynamic Tiles","FLP_SHELL");let i;let s;const n={};const l=e({},this.oActiveDynamicTiles);for(let e=0;e<this.currentVisibleTiles.length;e++){const i=this.currentVisibleTiles[e];if(!i.bIsExtanded){delete l[i.oTile.uuid]}}for(const e in l){i=this.oActiveDynamicTiles[e];s=i.object;this.oDashboardManager.setTileVisible(i,false)}for(let e=0;e<this.currentVisibleTiles.length;e++){const t=this.currentVisibleTiles[e];if(!t.bIsExtanded){i=t.oTile;s=i.object;if(this.oActiveDynamicTiles[i.uuid]===undefined&&s){this.oDashboardManager.setTileVisible(i,true)}n[i.uuid]=i}}this.oActiveDynamicTiles=n;t.end("DashboardLoadingManagerActiveDynamicTile")},isTileViewRequestIssued:function(e){if(this.oInProgressTiles[e.uuid]===undefined&&this.oResolvedTiles[e.uuid]===undefined){return false}return true},manageBusyIndicatorTiles:function(){t.average("DashboardLoadingManagerBusyIndicators","Manage Busy Indicators on Tiles","FLP_SHELL");let e;let i;let s;let n;const l=[];let o;const a=[];for(i in this.oBusyIndicatorTiles){o=true;n=this.oBusyIndicatorTiles[i];if(this.oResolvedTiles[i]===undefined){for(let e=0;e<this.currentVisibleTiles.length;e++){if(this.currentVisibleTiles[e].oTile.uuid===n.oTile.uuid){o=false;break}}if(o){l.push(n)}}}for(e=0;e<this.currentVisibleTiles.length;e++){s=this.currentVisibleTiles[e];if(this.oBusyIndicatorTiles[s.oTile.uuid]===undefined&&this.oResolvedTiles[s.oTile.uuid]===undefined){a.push(s)}}for(e=0;e<l.length;e++){s=l[e];if(s.oTile.content[0]&&s.oTile.content[0].setState){if(s.oTile.content[0].getState){if(s.oTile.content[0].getState()!=="Failed"){s.oTile.content[0].setState()}}else{s.oTile.content[0].setState()}}delete this.oBusyIndicatorTiles[s.oTile.uuid]}for(e=0;e<a.length;e++){s=a[e];if(s.oTile.content[0]&&s.oTile.content[0].setState){if(s.oTile.content[0].getState){if(s.oTile.content[0].getState()!=="Failed"){s.oTile.content[0].setState("Loading")}}else{s.oTile.content[0].setState("Loading")}}this.oBusyIndicatorTiles[s.oTile.uuid]=s}t.end("DashboardLoadingManagerBusyIndicators")},setTileInProgress:function(e){this.oInProgressTiles[e.uuid]=e},setTileResolved:function(e){delete this.oInProgressTiles[e.uuid];this.oResolvedTiles[e.uuid]=e},_addTileToRefreshArray:function(e,i,s){this.aRefreshTiles.push(s.uuid)},_refreshTiles:function(){for(let e=0;e<this.currentVisibleTiles.length;e++){const i=this.currentVisibleTiles[e].oTile;const s=i.object;if(s){for(let e=0;e<this.aRefreshTiles.length;e++){if(i.uuid===this.aRefreshTiles[e]){this.aRefreshTiles.splice(e,1);this.oDashboardManager.setTileVisible(i,true);this.oDashboardManager.refreshTile(i);break}}}}},_setTilesNoVisibility:function(){for(let e=0;e<this.currentVisibleTiles.length;e++){const i=this.currentVisibleTiles[e].oTile;const s=i.object;if(s){this.oDashboardManager.setTileVisible(i,false)}delete this.oActiveDynamicTiles[i.uuid]}},manageTilesView:function(){let e;let i;const s=[];for(e=0;e<this.currentVisibleTiles.length;e++){i=this.currentVisibleTiles[e];if(this.oInProgressTiles[i.oTile.uuid]===undefined&&this.oResolvedTiles[i.oTile.uuid]===undefined){s.push(i)}}this.oDashboardManager.getTileViewsFromArray(s)}});return n});
//# sourceMappingURL=DashboardLoadingManager.js.map