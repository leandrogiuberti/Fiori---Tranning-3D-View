{"version":3,"file":"UserCategoryManager.js","names":["sap","ui","define","__i18n","sap_esh_search_ui_SearchHelper","___error_errors","___personalization_PersonalizationKeys","_interopRequireDefault","obj","__esModule","default","i18n","isSearchAppActive","ProgramError","PersonalizationKeys","myFavDataStore","myFavorites","UserCategoryManager","active","lastActive","categories","personalizationStorage","sina","create","properties","instance","initAsync","constructor","this","that","userCategory","sinaSubDataSources","undefinedSubDataSourceIds","myFavData","getItem","isPersonalizationStorageItem","createDataSource","id","label","getText","labelPlural","type","DataSourceType","UserCategory","includeApps","subDataSources","push","Promise","resolve","setFavActive","isFavActive","setLastFavActive","favUserCategory","userCatgories","map","dataSource","sinaSubDataSource","getDataSource","filter","x","object","getCategory","category","isLastFavActive","value","save","categoriesJson","subDataSourceList","subDataSource","undefinedSubDataSourceId","setItem","saveNotDelayed","then","result","RegExp","exec","window","location","href","sUrl","setTimeout","assign","reload","bind"],"sources":["UserCategoryManager.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\nimport i18n from \"../i18n\";\nimport { isSearchAppActive } from \"sap/esh/search/ui/SearchHelper\";\nimport { Sina } from \"../sinaNexTS/sina/Sina\";\nimport {\n    UserCategoryDataSource,\n    UserCategoryDataSourceProperties,\n} from \"../sinaNexTS/sina/UserCategoryDataSource\";\nimport PersonalizationStorage from \"../personalization/PersonalizationStorage\";\nimport { ProgramError } from \"../error/errors\";\nimport { PersonalizationKeys } from \"../personalization/PersonalizationKeys\";\n\nexport interface UserCategoryManagerProperties {\n    sina: Sina;\n    personalizationStorage: PersonalizationStorage;\n}\n\ninterface PersonalizationStorageItem {\n    active: boolean;\n    userCatgories: Array<{ id: string; includeApps: boolean; subDataSources: Array<{ id: string }> }>;\n}\n\nconst myFavDataStore = PersonalizationKeys.myFavorites;\n\nexport default class UserCategoryManager {\n    active: boolean;\n    lastActive: boolean;\n    categories: Array<UserCategoryDataSource>;\n    personalizationStorage: PersonalizationStorage;\n    sina: Sina;\n\n    static async create(properties: UserCategoryManagerProperties): Promise<UserCategoryManager> {\n        const instance = new UserCategoryManager(properties);\n        await instance.initAsync();\n        return instance;\n    }\n\n    constructor(properties: UserCategoryManagerProperties) {\n        this.active = false;\n        this.lastActive = false;\n        this.categories = [];\n        this.personalizationStorage = properties.personalizationStorage;\n        this.sina = properties.sina;\n    }\n    initAsync(): Promise<void> {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const that = this;\n        let userCategory;\n        let sinaSubDataSources;\n        const undefinedSubDataSourceIds = [];\n\n        const myFavData = this.personalizationStorage.getItem(myFavDataStore);\n        if (!this.isPersonalizationStorageItem(myFavData)) {\n            throw new ProgramError(null, \"wrong myFavData type\");\n        }\n\n        /* // example for storage\n                        personalizationStorageInstance.setItem('my-fav-data', {\n                            active: true,\n                            userCatgories: [{\n                                id: 'MyFavorites',\n                                includeApps: true\n                                subDataSources: [{\n                                    id: 'CD$ALL~ZESH_EPM_P_DEMO~'\n                                }, {\n                                    id: 'CD$ALL~ZESH_EPM_S_DEMO~'\n                                }]\n                            }]\n                        });*/\n\n        // No FavData exists\n        if (!myFavData) {\n            userCategory = this.sina.createDataSource({\n                id: \"MyFavorites\",\n                label: i18n.getText(\"label_userFavorites\"),\n                labelPlural: i18n.getText(\"label_userFavorites\"),\n                type: this.sina.DataSourceType.UserCategory,\n                includeApps: false,\n                subDataSources: [],\n                undefinedSubDataSourceIds: [],\n            } as UserCategoryDataSourceProperties);\n            this.categories.push(userCategory);\n            return Promise.resolve();\n        }\n\n        this.setFavActive(myFavData.active);\n        if (!this.isFavActive()) {\n            // null or undefined\n            this.setFavActive(false);\n        }\n        this.setLastFavActive(this.isFavActive());\n\n        // convert subDataSources from personalizationStorage into sina datasources\n        // if not possible -> add subDataSource to undefinedSubDataSourceIds\n\n        for (const favUserCategory of myFavData.userCatgories) {\n            const subDataSources = favUserCategory.subDataSources;\n            if (subDataSources) {\n                sinaSubDataSources = subDataSources.map(function (dataSource) {\n                    const sinaSubDataSource = that.sina.getDataSource(dataSource.id);\n                    if (!sinaSubDataSource) {\n                        undefinedSubDataSourceIds.push(dataSource.id);\n                    }\n                    return sinaSubDataSource;\n                });\n            } else {\n                sinaSubDataSources = [];\n            }\n\n            // delete all undefined entries (datasources which do not exist currently)\n            sinaSubDataSources = sinaSubDataSources.filter((x) => x);\n\n            // DataSourceType.UserCategory: switch in sina.js createDataSource depending on DataSourceType\n            userCategory = this.sina.createDataSource({\n                id: favUserCategory.id,\n                label: i18n.getText(\"label_userFavorites\"),\n                labelPlural: i18n.getText(\"label_userFavorites\"),\n                type: this.sina.DataSourceType.UserCategory,\n                includeApps: favUserCategory.includeApps || false,\n                subDataSources: sinaSubDataSources,\n                undefinedSubDataSourceIds: undefinedSubDataSourceIds,\n            } as UserCategoryDataSourceProperties);\n\n            this.categories.push(userCategory);\n        }\n        return Promise.resolve();\n    }\n\n    isPersonalizationStorageItem(object: unknown): object is PersonalizationStorageItem {\n        return true;\n    }\n\n    getCategory(id: string): UserCategoryDataSource {\n        for (const category of this.categories) {\n            if (category.id === id) {\n                return category;\n            }\n        }\n        return null;\n    }\n\n    isFavActive(): boolean {\n        return this.active;\n    }\n\n    setFavActive(active: boolean): void {\n        this.active = active;\n    }\n\n    isLastFavActive(): boolean {\n        return this.lastActive;\n    }\n\n    setLastFavActive(value: boolean): void {\n        this.lastActive = value;\n    }\n\n    save(): void {\n        const categoriesJson = [];\n\n        // check change of subDataSources\n        // convert sina -> Fav format\n        for (const category of this.categories) {\n            const subDataSourceList = [];\n            // add subDataSources (active)\n            for (const subDataSource of category.subDataSources) {\n                subDataSourceList.push({\n                    id: subDataSource.id,\n                });\n            }\n            // add undefinedSubDataSources (inactive)\n            for (const undefinedSubDataSourceId of category.undefinedSubDataSourceIds) {\n                subDataSourceList.push({\n                    id: undefinedSubDataSourceId,\n                });\n            }\n\n            categoriesJson.push({\n                id: category.id,\n                includeApps: category.includeApps,\n                subDataSources: subDataSourceList,\n            });\n        }\n\n        this.personalizationStorage.setItem(myFavDataStore, {\n            active: this.isFavActive(),\n            userCatgories: categoriesJson,\n        });\n        // save must be finished before reload\n        // timeout necessary for MessageToast display with success message for save\n        this.personalizationStorage.saveNotDelayed().then(\n            function () {\n                //search used and flag for 'Use Personalized Search Scope' changed => reset to home URL required\n                //refresh of search dropdown listbox\n                if (isSearchAppActive() && this.isLastFavActive() !== this.isFavActive()) {\n                    const result = new RegExp(/^[^#]*#/).exec(window.location.href); //new RegExp('^[^#]*') without # /\n                    const sUrl = result[0];\n                    setTimeout(function () {\n                        window.location.assign(sUrl);\n                        window.location.reload();\n                    }, 2000);\n                } else if (\n                    //search not used and flag for 'Use Personalized Search Scope' changed --> refresh of search dropdown listbox OR\n                    //when search used and flag for 'Use Personalized Search Scope' not changed --> refresh for tree update after change of My Favorites\n                    (!isSearchAppActive() && this.isLastFavActive() !== this.isFavActive()) ||\n                    (isSearchAppActive() && this.isLastFavActive() === this.isFavActive())\n                ) {\n                    setTimeout(function () {\n                        window.location.reload();\n                    }, 2000);\n                }\n            }.bind(this)\n        );\n    }\n}\n"],"mappings":"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","ignoreList":[]}