/*!
 * SAPUI5
 * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.
 * 
 */
sap.ui.define(["../tree/TreeNodeFactory","./SearchHierarchyDynamicTreeNode","./StructureTree","../controls/facets/FacetTypeUI"],function(e,t,o,i){"use strict";function r(e){return e&&e.__esModule&&typeof e.default!=="undefined"?e.default:e}const s=r(e);const d=r(t);const l=r(o);const a=i["FacetTypeUI"];class n{static rootNodeId="$$ROOT$$";model;sina;dataSource;attributeId;title;filter;modelPathPrefix;isShowMoreDialog;handleSetFilter;filterCount;dimension;facetType;facetIndex;structureTree;notDisplayedFilterConditions;treeNodeFactory;rootTreeNode;constructor(e){this.model=e.model;this.sina=e.sina;this.dataSource=e.dataSource;this.attributeId=e.attributeId;this.dimension=this.attributeId;this.title=e.title;this.filter=e.filter;this.modelPathPrefix=e.modelPathPrefix;this.isShowMoreDialog=e.isShowMoreDialog;this.handleSetFilter=e.handleSetFilter;this.filterCount=this.filter.rootCondition.getAttributeConditions(this.attributeId).length;this.facetType=a.Hierarchy;this.facetIndex=-1;this.structureTree=new l({rootNode:{id:n.rootNodeId,label:"root"}});this.notDisplayedFilterConditions=[];this.treeNodeFactory=s.create({model:this.model,rootTreeNodePath:`/facets/${this.facetIndex}/rootTreeNode`,treeNodeConstructor:d,busyIndicator:this.model.busyIndicator});this.rootTreeNode=this.treeNodeFactory.createRootTreeNode({id:n.rootNodeId,label:"Root",count:0,facet:this})}setFilter(e){this.filter=e}setHandleSetFilter(e){this.handleSetFilter=e}setFacetIndex(e){this.facetIndex=e;this.treeNodeFactory.setRootTreeNodePath(`${this.modelPathPrefix}/${this.facetIndex}/rootTreeNode`)}updateStructureTree(e){this.structureTree.update(e)}async activateFilters(){try{await this.model.fireSearchQuery();this.model.notifyFilterChanged()}finally{}}updateFromResultSet(e){const t=[];for(const o of e.node.childNodes){t.push(this.treeNodeFactory.createTreeNode({id:o.id,label:o.label,count:o.count,facet:this,expandable:o.hasChildren}))}this.rootTreeNode.updateChildren(t);this.updateStructureTree(e.node);return Promise.resolve()}getComplexConditionOfFacet(){for(let e=0;e<this.filter.rootCondition.conditions.length;++e){const t=this.filter.rootCondition.conditions[e];if(t.containsAttribute(this.attributeId)){return t}}return null}getFilterConditions(){const e=[];const t=this.getComplexConditionOfFacet();if(!t){return e}for(let o=0;o<t.conditions.length;++o){const i=t.conditions[o];e.push(i)}return e}mixinFilterNodes(){this.rootTreeNode.hasFilter=false;this.rootTreeNode.visitChildNodesRecursively(function(e){e.hasFilter=false});let e;const t=[];const o=this.getFilterConditions();for(let i=0;i<o.length;++i){const r=o[i];e=r.value;const s=this.treeNodeFactory.getTreeNode(e);if(s){s.hasFilter=true}else{t.push(r)}}for(let o=0;o<t.length;++o){const i=t[o];e=i.value;if(this.addMissingFilterNode(e)){t.splice(o,1);o--}}this.notDisplayedFilterConditions=t;this.calculateCheckboxStatus();this.calculateFilterCount()}calculateFilterCount(){const e=this.filter.rootCondition.getAttributeConditions(this.attributeId).length;this.model.setProperty(`${this.modelPathPrefix}/${this.facetIndex}/filterCount`,e)}addMissingFilterNode(e){const t=e=>{let o=this.treeNodeFactory.getTreeNode(e.id);if(o){if(o.isVisible()){return o}else{return null}}if(!e.parentNode){throw new Error("program error parent node missing for "+e.id)}const i=t(e.parentNode);if(!i){return null}o=this.treeNodeFactory.createTreeNode({id:e.id,label:e.label,count:0,facet:this});i.addChildTreeNode(o);return o};const o=this.structureTree.getNode(e);if(!o){return false}const i=t(o);if(!i){return false}i.hasFilter=true;return true}calculateCheckboxStatus(){this.rootTreeNode.selected=false;this.rootTreeNode.partiallySelected=false;this.rootTreeNode.visitChildNodesRecursively(function(e){e.selected=false;e.partiallySelected=false});const e=[];if(!this.rootTreeNode.hasChildNodes()){e.push(this.rootTreeNode)}this.rootTreeNode.visitChildNodesRecursively(function(t){if(!t.hasChildNodes()){e.push(t)}});for(let t=0;t<e.length;++t){const o=e[t];this.calculateCheckboxStatusFromLeafNode(o)}}calculateCheckboxStatusFromLeafNode(e){let t=e;let o=false;while(t){if(t.selected&&t.partiallySelected){return}if(t.hasFilter){t.selected=true;t.partiallySelected=false;o=true}else{if(o){t.selected=true;t.partiallySelected=true}}t=t.getParentTreeNode()}}handleModelUpdate(){this.treeNodeFactory.updateUI()}delete(){this.treeNodeFactory.delete()}updateNodesFromHierarchyNodePaths(e){for(const t of e){if(t.name!==this.attributeId){continue}this.structureTree.updateFromHierarchyNodePath(t)}}}return n});
//# sourceMappingURL=SearchHierarchyDynamicFacet.js.map