{"version":3,"file":"SearchHierarchyDynamicTreeNode.js","names":["sap","ui","define","__TreeNode","_interopRequireDefault","obj","__esModule","default","TreeNode","SearchHierarchyDynamicTreeNode","count","selected","partiallySelected","hasFilter","constructor","props","super","this","getData","facet","fetchChildTreeNodesImpl","resultChildNodes","filter","clone","rootCondition","removeAttributeConditions","attributeId","resultSet","sina","createHierarchyQuery","nodeId","id","nlq","model","isNlqActive","getResultSetAsync","hasErrors","getErrors","forEach","error","errorHandler","onError","node","childNodes","treeNodeFactory","getTreeNodeFactory","childNode","push","createTreeNode","label","expandable","hasChildren","updateStructureTree","setExpanded","expanded","updateUI","mixinFilterNodes","toggleFilter","setFilter","visitParentNodesRecursively","visitChildNodesRecursively","isShowMoreDialog","activateFilters","set","filterCondition","createSimpleCondition","operator","ComparisonOperator","DescendantOf","attribute","attributeLabel","title","value","valueLabel","autoInsertCondition","setProperty","autoRemoveCondition","length","filterCount","handleSetFilter"],"sources":["SearchHierarchyDynamicTreeNode.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\nimport { HierarchyResultSet } from \"../sinaNexTS/sina/HierarchyResultSet\";\nimport TreeNode, { TreeNodeProperties } from \"../tree/TreeNode\";\nimport TreeNodeFactory from \"../tree/TreeNodeFactory\";\nimport SearchHierarchyDynamicFacet from \"./SearchHierarchyDynamicFacet\";\n\ninterface SearchHierarchyDynamicTreeNodeProperties extends TreeNodeProperties {\n    count: number;\n    facet: SearchHierarchyDynamicFacet;\n}\n\nexport default class SearchHierarchyDynamicTreeNode extends TreeNode {\n    count: number;\n    selected: boolean;\n    partiallySelected: boolean;\n    hasFilter: boolean;\n    constructor(props: SearchHierarchyDynamicTreeNodeProperties) {\n        super(props);\n        this.count = props.count;\n        this.selected = false;\n        this.partiallySelected = false;\n        this.hasFilter = false;\n        this.getData().facet = props.facet;\n    }\n\n    /*wait() {\n        return new Promise((resolve) => {\n            setTimeout(resolve, 1000);\n        });\n    }*/\n\n    async fetchChildTreeNodesImpl(): Promise<Array<SearchHierarchyDynamicTreeNode>> {\n        const resultChildNodes: Array<SearchHierarchyDynamicTreeNode> = [];\n        // assemble filter by removing attribute conditions of \"own\" facet attribute\n        // (we want to show all children independend on the selection done in the \"own\" facet)\n        const facet = this.getData().facet as SearchHierarchyDynamicFacet;\n        const filter = this.getData().facet.filter.clone();\n        filter.rootCondition.removeAttributeConditions(facet.attributeId);\n        // fetch sina result set\n        const resultSet = (await facet.sina\n            .createHierarchyQuery({\n                attributeId: facet.attributeId,\n                nodeId: this.id,\n                filter: filter,\n                nlq: facet?.model?.isNlqActive(),\n            })\n            .getResultSetAsync()) as HierarchyResultSet;\n        if (resultSet.hasErrors()) {\n            const facet = this.getData().facet as SearchHierarchyDynamicFacet;\n            resultSet.getErrors().forEach((error) => facet.model.errorHandler.onError(error));\n        }\n        if (!resultSet?.node?.childNodes) {\n            return resultChildNodes;\n        }\n        const treeNodeFactory = this.getTreeNodeFactory() as TreeNodeFactory<\n            SearchHierarchyDynamicTreeNode,\n            typeof SearchHierarchyDynamicTreeNode\n        >;\n        for (const childNode of resultSet.node.childNodes) {\n            resultChildNodes.push(\n                treeNodeFactory.createTreeNode({\n                    id: childNode.id,\n                    label: childNode.label,\n                    count: childNode.count,\n                    facet: this.getData().facet,\n                    expandable: childNode.hasChildren,\n                })\n            );\n        }\n        (this.getData().facet as SearchHierarchyDynamicFacet).updateStructureTree(resultSet.node);\n        return resultChildNodes;\n    }\n\n    async setExpanded(expanded: boolean, updateUI?: boolean) {\n        await super.setExpanded(expanded, false);\n        this.getData().facet.mixinFilterNodes();\n        if (updateUI) {\n            this.getTreeNodeFactory().updateUI();\n        }\n    }\n\n    toggleFilter(): void {\n        if (this.selected) {\n            if (this.partiallySelected) {\n                // 1. checkbox with square\n                this.setFilter(true);\n                this.visitParentNodesRecursively(function (node) {\n                    node.setFilter(false);\n                });\n                this.visitChildNodesRecursively(function (node) {\n                    node.setFilter(false);\n                });\n            } else {\n                // 2. selected checkbox\n                this.setFilter(false);\n            }\n        } else {\n            // 3. not selected checkbox\n            this.setFilter(true);\n            this.visitParentNodesRecursively(function (node) {\n                node.setFilter(false);\n            });\n        }\n        const facet = this.getData().facet as SearchHierarchyDynamicFacet;\n        if (facet.isShowMoreDialog) {\n            facet.mixinFilterNodes();\n            facet.treeNodeFactory.updateUI();\n        } else {\n            facet.activateFilters();\n        }\n    }\n\n    setFilter(set: boolean): void {\n        const facet = this.getData().facet as SearchHierarchyDynamicFacet;\n        const filterCondition = facet.sina.createSimpleCondition({\n            operator: facet.sina.ComparisonOperator.DescendantOf,\n            attribute: facet.attributeId,\n            attributeLabel: facet.title,\n            value: this.id,\n            valueLabel: this.label,\n        });\n        if (set) {\n            facet.filter.autoInsertCondition(filterCondition);\n            facet.model.setProperty(\"/facetDialogOverallCounter\", true);\n        } else {\n            facet.filter.autoRemoveCondition(filterCondition);\n            // TODO: this if condition works for disable reset button in facet dialog, but could be improved\n            if (facet.model[\"aFilters\"]?.length === 1 && facet.filterCount === 1) {\n                facet.model.setProperty(\"/facetDialogOverallCounter\", false);\n            }\n        }\n        if (facet.handleSetFilter) {\n            facet.handleSetFilter(this, set, filterCondition);\n        }\n    }\n}\n"],"mappings":"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","ignoreList":[]}