{"version":3,"file":"SearchHierarchyDynamicFacetsFormatter-dbg.js","names":["sap","ui","define","___sinaNexTS_sina_HierarchyDisplayType","__SearchHierarchyDynamicFacet","_interopRequireDefault","obj","__esModule","default","HierarchyDisplayType","SearchHierarchyDynamicFacet","SearchHierarchyDynamicFacetsFormatter","testCounter","facetMap","facetFromMetadataMap","model","constructor","getFacetAttributes","resultSet","facetAttributes","i","facets","length","facetResultSet","type","sina","FacetType","Hierarchy","facetAttribute","query","attributeId","indexOf","push","filterFacetAttributes","filter","rootCondition","getAttributes","j","filterFacetAttribute","filterFacetAttributeMetadata","dataSource","getAttributeMetadata","isHierarchy","usage","Facet","displayOrder","AdvancedSearch","getFacetFromResultSet","getFacet","searchModel","attributeMetadata","facet","title","label","getProperty","modelPathPrefix","isShowMoreDialog","setFilter","containsAttribute","hasExpandedChildNode","rootTreeNode","treeNodeFactory","updateRecursively","updateFromResultSet","updateNodesFromHierarchyNodePaths","hierarchyNodePaths","mixinFilterNodes","getFacets","config","FF_dynamicHierarchyFacets","Promise","resolve","facetPromise","all","then","result","Array","from","destroy","facetAttributeId","delete","handleDataSourceChanged","getFacetFromMetadata","searchFacetDialogModel","getFacetsFromMetadata","FF_dynamicHierarchyFacetsInShowMore","attributesMetadata","hierarchyDisplayType","DynamicHierarchyFacet","id"],"sources":["SearchHierarchyDynamicFacetsFormatter.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\n/*!\n * The SearchHierarchyDynamicFacetsFormatter is called from the search model after each search.\n * The formatter assembles the dynamic facets from the sina search result.\n */\n\nimport SearchModel from \"sap/esh/search/ui/SearchModel\";\nimport SearchFacetDialogModel from \"../SearchFacetDialogModel\";\nimport { DataSource } from \"../sinaNexTS/sina/DataSource\";\nimport { FacetResultSet } from \"../sinaNexTS/sina/FacetResultSet\";\nimport { HierarchyDisplayType } from \"../sinaNexTS/sina/HierarchyDisplayType\";\nimport { HierarchyResultSet } from \"../sinaNexTS/sina/HierarchyResultSet\";\nimport { SearchResultSet } from \"../sinaNexTS/sina/SearchResultSet\";\nimport SearchHierarchyDynamicFacet from \"./SearchHierarchyDynamicFacet\";\nimport { AttributeMetadata } from \"../sinaNexTS/sina/AttributeMetadata\";\n\nexport default class SearchHierarchyDynamicFacetsFormatter {\n    testCounter: number;\n    facetMap: { [key: string]: SearchHierarchyDynamicFacet };\n    facetFromMetadataMap: { [key: string]: SearchHierarchyDynamicFacet };\n    model: SearchModel;\n\n    constructor(model: SearchModel) {\n        this.testCounter = 0;\n        this.facetMap = {};\n        this.facetFromMetadataMap = {};\n        this.model = model;\n    }\n\n    getFacetAttributes(resultSet: SearchResultSet): Array<any> {\n        // display facets which are included in the server response\n        const facetAttributes = [];\n        for (let i = 0; i < resultSet.facets.length; ++i) {\n            const facetResultSet = resultSet.facets[i];\n            if (facetResultSet.type !== resultSet.sina.FacetType.Hierarchy) {\n                continue;\n            }\n            if (!facetResultSet[\"node\"]) {\n                // ToDo\n                continue; // TODO: server error?\n            }\n            const facetAttribute = (facetResultSet.query as any).attributeId; // ToDo\n            if (facetAttributes.indexOf(facetAttribute) >= 0) {\n                continue;\n            }\n            facetAttributes.push(facetAttribute);\n        }\n\n        // display facet for which filters are set\n        const filterFacetAttributes = resultSet.query.filter.rootCondition.getAttributes();\n        for (let j = 0; j < filterFacetAttributes.length; ++j) {\n            const filterFacetAttribute = filterFacetAttributes[j];\n            const filterFacetAttributeMetadata = resultSet.query.filter.dataSource.getAttributeMetadata(\n                filterFacetAttribute\n            ) as AttributeMetadata;\n            if (\n                !(\n                    filterFacetAttributeMetadata.isHierarchy &&\n                    filterFacetAttributeMetadata.usage &&\n                    ((filterFacetAttributeMetadata.usage.Facet &&\n                        typeof filterFacetAttributeMetadata.usage.Facet.displayOrder === \"number\") ||\n                        (filterFacetAttributeMetadata.usage.AdvancedSearch &&\n                            typeof filterFacetAttributeMetadata.usage.AdvancedSearch.displayOrder ===\n                                \"number\"))\n                )\n            ) {\n                continue;\n            }\n            if (facetAttributes.indexOf(filterFacetAttribute) >= 0) {\n                continue;\n            }\n            facetAttributes.push(filterFacetAttribute);\n        }\n        return facetAttributes;\n    }\n\n    getFacetFromResultSet(resultSet: SearchResultSet, attributeId: string): FacetResultSet {\n        for (let i = 0; i < resultSet.facets.length; ++i) {\n            const facetResultSet = resultSet.facets[i];\n            if (attributeId === (facetResultSet.query as any).attributeId) {\n                // ToDo\n                return facetResultSet;\n            }\n        }\n    }\n\n    async getFacet(\n        resultSet: SearchResultSet,\n        searchModel: SearchModel,\n        attributeId: string\n    ): Promise<SearchHierarchyDynamicFacet> {\n        const attributeMetadata = resultSet.query.filter.dataSource.getAttributeMetadata(\n            attributeId\n        ) as AttributeMetadata;\n        let facet = this.facetMap[attributeId];\n        if (!facet) {\n            facet = new SearchHierarchyDynamicFacet({\n                model: searchModel,\n                sina: resultSet.sina,\n                dataSource: resultSet.query.filter.dataSource,\n                attributeId: attributeId,\n                title: attributeMetadata.label,\n                filter: this.model.getProperty(\"/uiFilter\"),\n                modelPathPrefix: \"/facets\",\n                isShowMoreDialog: false,\n            });\n            this.facetMap[attributeId] = facet;\n        }\n        facet.setFilter(this.model.getProperty(\"/uiFilter\"));\n        const containsAttribute = resultSet.query.filter.rootCondition.containsAttribute(attributeId);\n        const hasExpandedChildNode = facet.rootTreeNode && facet.rootTreeNode.hasExpandedChildNode();\n        if (containsAttribute || hasExpandedChildNode) {\n            await facet.treeNodeFactory.updateRecursively();\n        } else {\n            const facetResultSet = this.getFacetFromResultSet(resultSet, attributeId);\n            facet.updateFromResultSet(facetResultSet as HierarchyResultSet);\n        }\n        facet.updateNodesFromHierarchyNodePaths(resultSet.hierarchyNodePaths);\n        facet.mixinFilterNodes();\n        return facet;\n    }\n\n    getFacets(resultSet: SearchResultSet, searchModel: SearchModel): any {\n        if (!this.model.config.FF_dynamicHierarchyFacets) {\n            return Promise.resolve([]);\n        }\n        // determine which facets to be displayed\n        const facetAttributes = this.getFacetAttributes(resultSet);\n        // create/update facets\n        const facets = [];\n        for (let i = 0; i < facetAttributes.length; ++i) {\n            const facetAttribute = facetAttributes[i];\n            const facetPromise = this.getFacet(resultSet, searchModel, facetAttribute);\n            facets.push(facetPromise);\n        }\n        return Promise.all(facets).then(function (result) {\n            return Array.from(result);\n        });\n    }\n\n    destroy(): void {\n        for (const facetAttributeId in this.facetMap) {\n            const facet = this.facetMap[facetAttributeId];\n            facet.delete();\n        }\n        this.facetMap = {};\n        for (const facetAttributeId in this.facetFromMetadataMap) {\n            const facet = this.facetFromMetadataMap[facetAttributeId];\n            facet.delete();\n        }\n        this.facetFromMetadataMap = {};\n    }\n\n    handleDataSourceChanged(): void {\n        this.destroy();\n    }\n\n    getFacetFromMetadata(\n        attributeId: string,\n        dataSource: DataSource,\n        searchFacetDialogModel: SearchFacetDialogModel\n    ): SearchHierarchyDynamicFacet {\n        let facet = this.facetFromMetadataMap[attributeId];\n        if (facet) {\n            return facet;\n        }\n        const attributeMetadata = dataSource.getAttributeMetadata(attributeId) as AttributeMetadata;\n        facet = new SearchHierarchyDynamicFacet({\n            model: searchFacetDialogModel,\n            sina: dataSource.sina,\n            dataSource: dataSource,\n            attributeId: attributeId,\n            title: attributeMetadata.label,\n            filter: this.model.getProperty(\"/uiFilter\"),\n            modelPathPrefix: \"/facetDialog\",\n            isShowMoreDialog: true,\n        });\n        this.facetFromMetadataMap[attributeId] = facet;\n        return facet;\n    }\n\n    getFacetsFromMetadata(\n        dataSource: DataSource,\n        searchFacetDialogModel: SearchFacetDialogModel\n    ): Array<SearchHierarchyDynamicFacet> {\n        const facets: Array<SearchHierarchyDynamicFacet> = [];\n        if (!searchFacetDialogModel.config.FF_dynamicHierarchyFacetsInShowMore) {\n            return facets;\n        }\n        for (const attributeMetadata of dataSource.attributesMetadata) {\n            if (\n                (attributeMetadata as AttributeMetadata).isHierarchy &&\n                (attributeMetadata as AttributeMetadata).hierarchyDisplayType ===\n                    HierarchyDisplayType.DynamicHierarchyFacet\n            ) {\n                facets.push(\n                    this.getFacetFromMetadata(attributeMetadata.id, dataSource, searchFacetDialogModel)\n                );\n            }\n        }\n        return facets;\n    }\n}\n"],"mappings":"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","ignoreList":[]}