{"version":3,"file":"SearchConfigurationSettings.js","names":["sap","ui","define","__PerformanceLogger","___SelectionMode","_interopRequireDefault","obj","__esModule","default","PerformanceLogger","SelectionMode","SearchConfigurationSettings","id","applicationComponent","facetPanelResizable","facetPanelWidthInPercent","getCustomNoResultScreen","getSearchInputPlaceholderLabel","searchInputLocation","searchOnStart","searchTerm","filterRootCondition","exclusiveDataSource","dataSource","dataSources","personalizationStorage","optimizeForValueHelp","overwriteBrowserTitle","defaultDataSource","defaultSearchScopeApps","searchScopeWithoutAll","clearObjectSelectionOnSearchLinkClick","resultViewTypes","fallbackResultViewType","resultviewMasterDetailMode","titleColumnName","titleColumnWidth","customGridView","getCustomToolbar","beforeNavigation","filterDataSources","facets","facetVisibility","facetToggleButtonLocation","enableCharts","boSuggestions","folderMode","folderModeForInitialSearch","autoAdjustResultViewTypeInFolderMode","sinaConfiguration","enableQueryLanguage","tabStripsFormatter","tabStrips","updateUrl","renderSearchUrl","properties","top","orderby","sortorder","filter","isSearchUrl","url","indexOf","parseSearchUrlParameters","parameters","quickSelectDataSources","initAsync","Promise","resolve","resultviewSelectionMode","None","showSelectionToggleButton","pageSize","formatFilterBarText","isFilterBarVisible","eventConsumers","searchTermLengthLimit","limitAjaxRequests","onErrorHandler","performanceLogger","userDefinedDatasourcesMulti","searchFieldCheckInterval","searchInAreaOverwriteMode","resetQuickSelectDataSourceAll","searchBusinessObjects","suggestionKeyboardRelaxationTime","suggestionStartingCharacters","modulePaths","undefined","isUshell","aiNlq","aiNlqExplainBar","aiSuggestions","aiSuggestionsHeaderHelpLink","searchResultTablePersonalization","bResetSearchTermOnQuickSelectDataSourceItemPress","setSearchInLabelIconBindings","getSearchInFacetListMode","bPlaceHolderFixedValue","metaDataJsonType","reloadOnUrlChange","bRecentSearches","showSearchBarForNoResults","FF_sortOrderInUrl","FF_staticHierarchyFacets","FF_dynamicHierarchyFacets","FF_hierarchyBreadcrumbs","FF_dynamicHierarchyFacetsInShowMore","FF_resizeResultTableColumns","FF_useWebComponentsSearchInput","enableSearchSelectionBarStartingWith","adjustFilters","FF_enableTCodes","displayFacetPanelInCaseOfNoResults","enableMultiSelectionResultItems","getSpaceFacetId","getFirstSpaceCondition","cleanUpSpaceFilters","extendTableColumn","sinaParameters","deprecatedParameters","searchBarDoNotHideForNoResults","replacedBy","browserTitleOverwritten","combinedResultviewToolbar","layoutUseResponsiveSplitter","replacementInfo","searchFilterBarShowWithFacets","bNoAppSearch","selectionChange","nlq","urlForbiddenParameters","defaultSearchConfigurationSettings"],"sources":["SearchConfigurationSettings.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\nimport Button from \"sap/m/Button\";\nimport Control from \"sap/ui/core/Control\";\nimport SearchResultGrid from \"./controls/resultview/SearchResultGrid\";\nimport PerformanceLogger from \"./performancelogging/PerformanceLogger\";\nimport { IKeyValueStore } from \"./personalization/PersonalizationStorage\";\nimport { DataSourceConfiguration } from \"./SearchConfigurationTypes\";\nimport SearchModel from \"./SearchModel\";\nimport { DataSourcesFilterFunction, UrlParameters } from \"./SearchModelTypes\";\nimport { ComplexCondition } from \"./sinaNexTS/sina/ComplexCondition\";\nimport { Condition } from \"./sinaNexTS/sina/Condition\";\nimport { DataSource } from \"./sinaNexTS/sina/DataSource\";\nimport { FacetResultSet } from \"./sinaNexTS/sina/FacetResultSet\";\nimport { Filter } from \"./sinaNexTS/sina/Filter\";\nimport { SimpleCondition } from \"./sinaNexTS/sina/SimpleCondition\";\nimport { SinaConfiguration } from \"./sinaNexTS/sina/SinaConfiguration\";\nimport EventConsumer from \"./eventlogging/EventConsumer\";\nimport { ErrorHandlingOptions } from \"./error/ErrorHandler\";\nimport { ESHUIError } from \"./error/errors\";\nimport { SelectionMode } from \"./SelectionMode\";\n\n/*\n * Search Result View Type Setting Paramaters Explaination:\n *                                                                                | In which case gettable and settable?\n * Files & Paramaters                         | Explain                           | Search in Apps         | Search in All / Category         | Search in Business Object\n * -----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n * 1. SearchConfigurationSettings (Design Time External Settings)\n * 1.1. resultViewTypes                       | view types                        |                        |                                  | gettable, settable\n * 1.2. fallbackResultViewType (DSP using)    | fallback initial active view type |                        |                                  | gettable, settable\n * -----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n * 2. SearchCompositeControl (Run Time External Settings)\n * 2.1. resultViewTypes                       | active view types                 | gettable, not settable | gettable, not settable in Ushell | gettable, settable\n * 2.2. resultViewType                        | active view type                  | gettable, not settable | gettable, not settable in Ushell | gettable, settable\n * -----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n * 3. SearchModel (Internal Perperties)\n * 3.1. \"/resultViewTypes\"                    | active view types                 | internal               | internal                         | internal\n * 3.2. \"/resultViewType\"                     | active view type                  | internal               | internal                         | internal\n * -----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n * 4. Storage (Internal Perperties)\n * 4.1. resultViewTypeForAllAndCategorySearch | last-used view type               | internal               | internal                         | internal\n * 4.2. resultViewTypeForBusinessObjectSearch | last-used view type               | internal               | internal                         | internal\n */\n\nexport default class SearchConfigurationSettings {\n    // #region public\n    // =========================================================\n    /**\n     * Value of id property for the DOM node which will hold the search composite control.\n     * Must be unique in the DOM.\n     */\n    id = \"\";\n\n    /**\n     * Relevant for SAP partners and SAP, the \"Application Component\" you expect customers to create incidents.\n     * All SAP-stakeholders and partners, using the SearchCompositeControl, shall provide the \"application component\", so customer incidents are reaching the application's support team easily.\n     * */\n    applicationComponent = \"\";\n\n    /**\n     * Display a splitter bar to resize the left hand panel, containing all facets and filter criteria.\n     */\n    facetPanelResizable = true;\n    /**\n     * Default size (percent) of the left hand panel, containing all facets and filter criteria. If \"facetPanelResizable\" is true, the width of the facet panel can be changed by the user.\n     */\n    facetPanelWidthInPercent = 25;\n\n    /**\n     * Whenever a search has no results, a 'No Results Page' is displayed. You can provide a custom page to be more specific or add some hints, links, buttons or other content.\n     */\n    getCustomNoResultScreen: (dataSource: DataSource, model: SearchModel) => Control = function (): Control {\n        return null;\n    };\n\n    /**\n     * A callback which returns customized \"label\" for placeholder text of search box, in case there is no search term.\n     * The placeholder text (en) will be \"Search In: <customPlaceholderLabel>\".\n     * Do not combine with property 'bPlaceHolderFixedValue'.\n     */\n    getSearchInputPlaceholderLabel: (filter: Filter) => string = null;\n\n    /**\n     * Location of the search input box. The search input can be placed on the top of the control (SearchCompositeControl) or as part of the search bar\n     * By default the location is at the top, values are \"Top\" and \"Searchbar\".\n     * @since 1.140.0\n     * @experimental Since 1.140.0 this feature is experimental and the API may change.\n     */\n    searchInputLocation = \"Top\";\n\n    /**\n     * Defines if the search composite control will send a search request after loading for the given term, data source and filter root condition settings.\n     */\n    searchOnStart = true;\n\n    /**\n     * Search term which is set when the UI is loaded.\n     */\n    searchTerm: string;\n\n    /**\n     * Filter condition which is set when the UI is loaded\n     */\n    filterRootCondition: ComplexCondition = null;\n\n    /**\n     * Data source id which is set when the UI is loaded and cannot be changed at run time.\n     * The following UI parts will be hidden:\n     * - data source select (dropdown)\n     * - data source tab bar\n     * - data source facet (facet panel)\n     * - data source name/link on result list (header section of item)\n     */\n\n    // Stakeholders using a single data source only:\n    //  - SAP Datashere ('SEARCH_DESIGN')\n    //  - SAC role UIs ('esh_ums_assignment'/'esh_ums_users').\n\n    exclusiveDataSource = \"\";\n\n    /**\n     * Data source id which is set when the UI is loaded.\n     * Used by data marketplace to create a parameterized search UI.\n     */\n    dataSource = \"\"; // Test ID: asdf\n\n    /**\n     * Data sources which is set when the UI is loaded.\n     */\n    dataSources: Array<DataSourceConfiguration> = [];\n\n    /**\n     * Storage backend to be used for UI configuration settings and application data.\n     * Default is \"auto\" which means \"flp\" for ushell\n     * and \"browser\" for everything else (\"memory\" will reset after each page load).\n     * Applications can also implement the IKeyValueStore interface to use their own storage backend.\n     */\n    personalizationStorage: \"auto\" | \"browser\" | \"flp\" | \"memory\" | IKeyValueStore = \"auto\";\n\n    /**\n     * The layout is optimized for object selection / value help (narrow view w/o facet panel).\n     */\n    optimizeForValueHelp = false;\n\n    /**\n     * Shall the window title be overwritten by this control?\n     * If true, the control will set the current search condition as window title.\n     * If false, it will not set or update the window title.\n     */\n    overwriteBrowserTitle = true;\n\n    /**\n     * Data source id which is set when the UI is loaded or filter is reset.\n     * Used by DSP, DSP Import Manager and Data Marketplace.\n     * If dataSource is also set, dataSource will be used during UI load.\n     */\n    defaultDataSource = \"\";\n\n    /**\n     * Define the default search scope.\n     * If true, set the default search scope as \"Apps\" instead of \"All\".\n     * But the \"All\" is still in the first position of datasource dropdown listbox.\n     * If false, the default search scope is \"All\".\n     */\n    defaultSearchScopeApps = false;\n\n    /**\n     * Decide the exists of search scope \"All\".\n     * If true, the search scope \"All\" is removed from the datasource dropdown listbox.\n     * If false, the search scope \"All\" is in the first position of datasource dropdown listbox.\n     */\n    searchScopeWithoutAll = false;\n\n    /**\n     * Controls whether the key store (selected items) is reset when a user clicks a SearchLink.\n     * - If set to `true`, the key store (selection) is cleared upon navigation, so returning\n     *   from the target page will have no item(s) selected anymore.\n     * - If set to `false`, the existing selection remains preserved.\n     */\n    clearObjectSelectionOnSearchLinkClick = true;\n\n    /**\n     * Defines selectable search result view types (only for Search in single Business Object).\n     * Its value is also settable in run time.\n     * Find more detail in SearchCompositeControl.\n     *\n     * @since 1.98.0\n     */\n    resultViewTypes: Array<string> = [\"searchResultList\", \"searchResultTable\"];\n\n    /**\n     * Defines fallback search result view type (only for Search in single Business Object).\n     * It is used when <code>resultViewType</code> is undefined, for example the search UI is initialized.\n     * The first element of <code>resultViewTypes</code> is assigned if it is not defined.\n     *\n     * @since 1.98.0\n     */\n    fallbackResultViewType: string;\n\n    /**\n     * The result views are displayed in a master-detail mode. The event showResultDetail is fired whenever the detail button is clicked.\n     * @since 1.140.0\n     */\n    resultviewMasterDetailMode = false;\n\n    /**\n     * Defines title column of search result table.\n     * Datasource plural label is used if it is not defined or empty string.\n     */\n    titleColumnName = \"\";\n\n    /**\n     * Defines title column width of search result table.\n     * The adptive width is used if it is not defined or empty string.\n     */\n    titleColumnWidth = \"\"; // TODO: refactoring initial column width, provide general column width configuration\n\n    /**\n     * Define a custom grid view instead of default grid view implementation.\n     * Used in DSP to show different custom grid view.\n     */\n    customGridView: () => SearchResultGrid = null;\n\n    /**\n     * Define a custom toolbar.\n     * Used in DSP to show many buttons.\n     */\n    getCustomToolbar: () => Array<Control> = () => [];\n\n    /**\n     * Define the call function before the navigation clicked.\n     */\n    beforeNavigation: (model: SearchModel) => void = () => {\n        return;\n    };\n\n    /*\n     * Callback for filtering the datasource displayed in the datasource dropdown listbox.\n     * The callback gets a list of datsources and returns the filtered list of datasources.\n     */\n    filterDataSources: DataSourcesFilterFunction = function (\n        dataSources: Array<DataSource>\n    ): Array<DataSource> {\n        return dataSources;\n    };\n\n    /**\n     * Controls whether the facet functionality is available or not.\n     */\n    facets = true;\n\n    /**\n     * A boolean which indicates whether the facet panel is initially openend or closed.\n     * This affects only the initial state of the facet panel.\n     * When not setting facetVisibility the initial state of the facet panel typically is\n     * taken from the user personalization storage.\n     */\n    facetVisibility = false;\n\n    /**\n     * Location of the button to show/hide facet panel. The button (filter icon) can be placed on the left (begin) or on the right (end) of the search bar.\n     * By default the button's location is at the beginning (left), values are \"Begin\" and \"End\".\n     * The property is not evaluated if facet panel is disabled, see property 'facets'.\n     * @since 1.140.0\n     * @experimental Since 1.140.0 this feature is experimental and the API may change.\n     */\n    facetToggleButtonLocation = \"Begin\";\n\n    /**\n     * A boolean for enabling chart visualizations (pie chart / bar chart facets).\n     * If set to true, facets can be viewed as a pie or bar chart (this cannot be deactivated at runtime).\n     */\n    enableCharts = false;\n\n    /**\n     * A boolean for enabling (business) object suggestions.\n     */\n    boSuggestions = false;\n\n    /**\n     * A boolean for enabling the folder mode. In folder mode the search ui in addition supports\n     * folder navigation\n     */\n    folderMode = false;\n\n    /**\n     * In case folderMode is set to true this boolean indicates whether for the initial search the folder mode is enabled.\n     */\n    folderModeForInitialSearch = false;\n\n    /**\n     * A boolean for activating the automatic switching of the display mode. When activated the UI automatically switches\n     * - to list display in search mode\n     * - to table display in folder mode\n     */\n    autoAdjustResultViewTypeInFolderMode = false;\n\n    /**\n     * Configuration parameters for the sina search library.\n     */\n    sinaConfiguration: SinaConfiguration = null;\n\n    /**\n     * Enables the query language for the hana_odata provider.\n     * With query language it is possible for the end user to enter complex search\n     * queries with logical operators.\n     */\n    enableQueryLanguage = false;\n\n    /**\n     * A callback for formatting tab strips. The tabstrips are displayed on top of the\n     * search result list. The callback receives a list of datasources and returns a\n     * modified list of datasources.\n     */\n    tabStripsFormatter: (dataSources: Array<DataSource>) => Array<DataSource> = (tabStrips) => tabStrips;\n\n    /**\n     * A boolean indicating that the search state is written to the URL.\n     */\n    updateUrl = true;\n\n    /**\n     * A callback for rendering the search URL. The callback gets a list of url encoded parameters and returns the URL string.\n     * Typically you need to register this callback in case updateUrl=true.\n     */\n    renderSearchUrl = function (properties: UrlParameters): string {\n        return (\n            \"#Action-search&/top=\" +\n            properties.top +\n            (properties.orderby ? \"&orderBy=\" + properties.orderby : \"\") +\n            (properties.sortorder ? \"&sortOrder=\" + properties.sortorder : \"\") +\n            \"&filter=\" +\n            properties.filter\n        );\n    };\n\n    /**\n     * A callback for checking whether a URL is a search URL. The callback receives a URL and returns true in case the URL is a search URL.\n     * Typically you need to register this callback in case updateUrl=true.\n     */\n    isSearchUrl: (url: string) => boolean = function (url: string) {\n        return url.indexOf(\"#Action-search\") === 0;\n    };\n\n    /**\n     * A callback for parsing URL parameters. The callback receices URL parameters and returns modified URL parameters.\n     * This is an optional callback. Also in case you set updateUrl=true typcically this callback is not needed.\n     */\n    parseSearchUrlParameters: (parameters: UrlParameters) => UrlParameters = (parameters) => parameters;\n\n    /**\n     * A list of datasources to be displayed in the facet panel in the collection area.\n     */\n    quickSelectDataSources: Array<\n        | {\n              dataSource: DataSource;\n              type: \"quickSelectDataSourceTreeNode\";\n              children: Array<{ dataSource: DataSource }>;\n          }\n        | DataSource\n    > = [];\n\n    /**\n     * A callback which is called after the initialization of the search composite control.\n     */\n    initAsync: (model: SearchModel) => Promise<void> = () => {\n        return Promise.resolve();\n    };\n\n    /**\n     * To select result view items, enable multi-selection or single-selection mode. Shows checkboxes ('MultipleItems') or enables item press ('OneItem'). Values of configuration parameter `resultviewSelectionMode` are 'None', 'OneItem' and 'MultipleItems'.\n     * To show a button for switching selection mode on/off, see 'showSelectionToggleButton'.\n     * A checkbox is provided for each result item if the value is true.\n     * The setting is related to `resultviewMasterDetailMode` (master-detail mode). The event `showResultDetail` is fired whenever the detail button is clicked.\n     * @since 1.141.0\n     */\n    resultviewSelectionMode = SelectionMode.None;\n\n    /**\n     * Shows a button to show/hide checkboxes for selection of result view items.\n     * See property \"resultviewSelectionMode\" regarding single/multi-selection settings.\n     * @since 1.140.0\n     */\n    showSelectionToggleButton = false;\n\n    /**\n     * The maximal count of search result items displayed on a page after a search.\n     * By clicking Show More button, another page of result items of the same count (if available) will be displayed.\n     */\n    pageSize = 10;\n\n    /**\n     * Callback for formatting the filter string to be displayed in the filter bar (for closed facet panel).\n     */\n    formatFilterBarText: (\n        attributeFilters: Array<{\n            attributeName: string;\n            attributeLabel: string;\n            attributeFilterValueLabels: Array<string>;\n        }>\n    ) => string;\n\n    /**\n     * Callback for checking whether the filter bar is visible.\n     */\n    isFilterBarVisible: (rootCondition: ComplexCondition) => boolean;\n\n    /**\n     * List of event consumers which are called whenever there is a user initiated event.\n     */\n    eventConsumers: Array<EventConsumer> = [];\n\n    /**\n     * Limit for length of searchterm.\n     */\n    searchTermLengthLimit: number = 1000;\n\n    /**\n     * Prevents too many ajax requests in a short time.\n     */\n    limitAjaxRequests: boolean = true;\n\n    /**\n     * The external error handler for handling ESHUIError instances.\n     * Once this is set, the internal error handler will be replaced by this one.\n     */\n    onErrorHandler: (error: ESHUIError, options?: ErrorHandlingOptions) => void = null;\n\n    // #endregion\n\n    // #region private\n    // =========================================================\n\n    /**\n     * Performance logger: Records performance inspection items and prints them to console\n     * - Mandatory properties:\n     *   - \"enterMethod\", type function({ name: \"...\" },...}\n     *   - \"leaveMethod\", type function({ name: \"...\" })\n     */\n    performanceLogger = new PerformanceLogger();\n\n    /**\n     * Enable or disable feature \"My Favorites\" for cFLP\n     * If true, in cFLP case, setting \"Use Personalized Search Scope\" is displayed in User Settings Dialog (Search)\n     * (can be removed after a test phase)\n     */\n    userDefinedDatasourcesMulti = true;\n\n    /**\n     * Check interval for search field. This interval is used to check whether search field needs to be relocated/resized.\n     */\n    searchFieldCheckInterval = 100;\n\n    /**\n     * Specially in DSP Repository Explorer.\n     * Set as true, so that the items in search in area have only single selection.\n     */\n    searchInAreaOverwriteMode = false;\n\n    /**\n     * Specially in DSP Repository Explorer.\n     * Method to reset the dataSource as Repository Explorer's All.\n     */\n    resetQuickSelectDataSourceAll: (model: SearchModel) => void = null;\n\n    /**\n     * FLP configuration parameter which enables/disables Enterprise Search (=search for\n     * business objects) in FLP. In case Enterprise Search is deactivated the user can still search\n     * for apps.\n     */\n    searchBusinessObjects = true;\n\n    /**\n     * Relaxation time before a suggestion request is sent to the server.\n     */\n    suggestionKeyboardRelaxationTime = 400;\n\n    /**\n     * Minimum number of characters needed for sending attribute suggestion requests to the server.\n     */\n    suggestionStartingCharacters = 3;\n\n    /**\n     * UI5 module load paths. Typically module load paths are configured by UI5 initilization.\n     * Sometimes developers using the search composite UI cannot influence UI5 initialization instead they\n     * can use this parameter.\n     */\n    modulePaths: Array<{ moduleName: string; urlPrefix: string }> = undefined;\n\n    /**\n     * Boolean indicating that the search ui is embedded in ushell (FLP)\n     */\n    isUshell = false;\n\n    /**\n     * Enable natural language queries\n     */\n    aiNlq = false;\n\n    /**\n     * Show the blue AI “explain” bar below the search toolbar.\n     *\n     * - When \"true\" (and `aiNlq` is also true) the bar is rendered and the former\n     *   NLQ-explain button is suppressed.\n     * - When \"false\" the UI falls back to the NLQ-explain button.\n     *\n     * Default: false\n     */\n    aiNlqExplainBar = false;\n\n    /**\n     * AI suggestions\n     */\n    aiSuggestions = false;\n\n    /**\n     * help likn\n     */\n    aiSuggestionsHeaderHelpLink: string;\n\n    /**\n     * Enable search result table personalization, such as column visibility, order, and width.\n     */\n    searchResultTablePersonalization: boolean = true;\n\n    /**\n     * Boolean when set to true the search term is reset when clicking on a datasource in the collection area.\n     */\n    bResetSearchTermOnQuickSelectDataSourceItemPress = false;\n\n    /**\n     * A callback which sets the result count text and icon for none-breadcrumbs case on result page.\n     */\n    setSearchInLabelIconBindings: (model: SearchModel, facets: Array<FacetResultSet>) => void = null;\n\n    /**\n     * A callback which returns the suitable list mode (sap.m.ListMode) for the attribute facet, e.g. SingleSelectMaster, MultiSelect.\n     */\n    getSearchInFacetListMode: (itemData: any | null | undefined) => void = null;\n\n    /**\n     * Set \"Search In\" placeholder text in search box to a fixed generic value \"Search\" without any parameter, in case there is no search term.\n     * Do not combine with function 'getSearchInputPlaceholderLabel'.\n     */\n    bPlaceHolderFixedValue = false;\n\n    /**\n     * Set it as true if the oData meta data is in json format instead of default xml format.\n     */\n    metaDataJsonType = false;\n\n    /**\n     * Reload on URL change. When navigating away from the search UI (for instance to an object)\n     * and then navigating back, the search UI is reloaded in case reloadOnUrlChange is set to true.\n     */\n    reloadOnUrlChange = true;\n\n    // #endregion\n\n    // #region feature flags\n    // =========================================================\n    /**\n     * Enable or disable recent search feature. Recent searches will be saved inside personalizationStorage.\n     */\n    bRecentSearches = false;\n\n    /**\n     * Show the search bar for no-results page (see buttons 'Sort', 'Select Columns', 'Display as List', 'Display as Table', ...).\n     */\n    showSearchBarForNoResults = true;\n\n    /**\n     * Write sort order to URL\n     */\n    FF_sortOrderInUrl = true;\n\n    /**\n     * Display static hierarchy facet (normally only one per data source).\n     */\n    FF_staticHierarchyFacets = true;\n\n    /**\n     * Display dynamic hierarchy facet.\n     */\n    FF_dynamicHierarchyFacets = true;\n\n    /**\n     * Display breadcrumbs on result page if the preconditions are fulfilled.\n     */\n    FF_hierarchyBreadcrumbs = false;\n\n    /**\n     * Display dynamic hierarchy facet in Show More dialog.\n     */\n    FF_dynamicHierarchyFacetsInShowMore = true;\n\n    /**\n     * Enable or disable to resize search result table columns.\n     */\n    FF_resizeResultTableColumns = false;\n\n    /**\n     * Enable or disable to use web component based search input.\n     */\n    FF_useWebComponentsSearchInput = false;\n\n    /**\n     * Enable to show the search selection bar after number of selected items.\n     */\n    enableSearchSelectionBarStartingWith = 1;\n\n    /**\n     * Adjust filter conditions. When filter conditions are changed, give a callback to adjust the conditions.\n     */\n    adjustFilters: (model: SearchModel, filterCondition?: Condition) => void = null;\n\n    /** Enable transaction codes by typing /n or /o into the search input */\n    FF_enableTCodes = false;\n\n    // #endregion\n\n    // #region deprecated\n    // =========================================================\n    //\n    // (1) Move deprecated parameters here. Even if you 'rename' a parameter, keep the old parameter here to prevent syntax errors for stakeholders using TS type files\n    // (2) Add the parameter to 'deprecatedParameters' (array, at the end of this file). This will add warning (assertion) to console AND fill the replacement property while constructing the SearchCompositeControl instance\n    //\n    // Use cases\n    //     - Delete:  Follow steps (1) and (2).\n    //     - Rename:  Renaming a parameter is similar to deprecating the old one (see 'Delete') and creating a new one.\n    //                The only difference is, we are taking over config value from old to new property (based on 'deprecatedParameters'), when constructing SearchCompositeControl instance\n    //     - Replace: Replacing a config parameter by 'something else', you can fill in 'replacementInfo' (of 'deprecatedParameters') to describe details\n    //\n    // Always keep a deprecated ('deleted') parameter as a property of this class (region 'deprecated'), to prevent syntax errors (ts type checks)\n    //\n    displayFacetPanelInCaseOfNoResults: boolean = false;\n    enableMultiSelectionResultItems = false;\n    // DSP space ( ToDo: remove )\n    getSpaceFacetId: (dimension: string, sId: string) => string = undefined; // obsolete since there is no space facet any longer (DSP, stakeholder coding clean-up)\n    getFirstSpaceCondition: (filter: Filter) => SimpleCondition = null; // obsolete since there is no space facet any longer (DSP, stakeholder coding clean-up)\n    cleanUpSpaceFilters: (model: SearchModel, filterCondition?: Condition) => void = null; // replaced by 'adjustFilters'\n    extendTableColumn: {\n        assembleCell: (data: unknown) => unknown;\n        bindingFunction: (bindingObject: unknown) => Button;\n        column: {\n            name: string;\n            attributeId: string;\n            width: string;\n        };\n    } = null;\n\n    // #endregion\n}\n\n// list of configuration parameters which are also known in sina\n// (these parameters are automatically passed to sina via sinaConfiguration)\nexport const sinaParameters: Array<string> = [\n    \"FF_hierarchyBreadcrumbs\",\n    \"folderMode\",\n    \"folderModeForInitialSearch\",\n    \"enableQueryLanguage\",\n    \"updateUrl\",\n    \"pageSize\",\n    \"searchInAreaOverwriteMode\",\n    \"limitAjaxRequests\",\n];\n\n/**\n * Add deprecated parameters and the replacement of it here.\n * It will print a deprecation warning to the console using\n * UI5 assertions.\n */\nexport const deprecatedParameters: Record<string, { replacedBy?: string; replacementInfo?: string }> = {\n    searchBarDoNotHideForNoResults: { replacedBy: \"showSearchBarForNoResults\" },\n    browserTitleOverwritten: { replacedBy: \"overwriteBrowserTitle\" },\n    combinedResultviewToolbar: {},\n    layoutUseResponsiveSplitter: {\n        replacedBy: \"facetPanelResizable\",\n        replacementInfo:\n            \"Default value is 'true', set to 'false' to make splitterbar non-resizable. You can use 'facetPanelWidthInPercent' in addition (default value: 25).\",\n    },\n    searchFilterBarShowWithFacets: {},\n    bNoAppSearch: {},\n    selectionChange: {\n        replacementInfo:\n            \"Subscribe to event 'selectionChanged' of SearchCompositeControl. As of version 1.137.0, this setting is ignored.\",\n    },\n    nlq: { replacedBy: \"aiNlq\" },\n    displayFacetPanelInCaseOfNoResults: {\n        replacementInfo:\n            \"Setting is ignored as of version 1.134.0. The facet panel visibility is controlled by user or personalization.\",\n    },\n    getSpaceFacetId: {\n        replacementInfo:\n            \"Setting is ignored as of version 1.136.0. There is no space facet any longer (DSP, stakeholder coding clean-up)\",\n    },\n    getFirstSpaceCondition: {\n        replacementInfo:\n            \"Setting is ignored as of version 1.136.0. There is no space facet any longer (DSP, stakeholder coding clean-up)\",\n    },\n    cleanUpSpaceFilters: {\n        replacedBy: \"adjustFilters\",\n        replacementInfo: \"Setting replaced as of version 1.136.0 (DSP, stakeholder coding clean-up)\",\n    },\n    enableMultiSelectionResultItems: {\n        replacedBy: \"resultviewSelectionMode\",\n        replacementInfo:\n            \"Setting replaced as of version 1.141.0. The new property 'resultviewSelectionMode' supports single-select as well as multi-select ('None', 'OneItem', 'MultipleItems').\\nFor master-detail scenarios, use in combination with 'resultviewMasterDetailMode'.\\nTo show a button for switching selection mode on/off, see 'showSelectionToggleButton'.\",\n    },\n    extendTableColumn: {\n        replacementInfo:\n            \"Make use of formatters to add custom attributes (see config.sinaConfiguration, 'metadataFormatters' and 'searchResultSetFormatters').\\nDeprecated as of version 1.141.\",\n    },\n};\n\n/**\n * Parameters which cannot be changed by URL\n */\nexport const urlForbiddenParameters = [\"modulePaths\"];\n\nexport const defaultSearchConfigurationSettings = new SearchConfigurationSettings();\n"],"mappings":"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","ignoreList":[]}