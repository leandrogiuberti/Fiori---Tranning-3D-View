{"version":3,"file":"SearchUrlParserInav2-dbg.js","names":["sap","ui","define","MessageBox","__errors","__i18n","_interopRequireDefault","obj","__esModule","default","errors","i18n","isComplexConditionJSON","conditionJSON","conditions","SearchUrlParserInav2","model","constructor","properties","parseUrlParameters","oParametersLowerCased","top","parseInt","setTop","dataSource","sinaNext","allDataSource","datasource","dataSourceJson","JSON","parse","dataSourceId","ObjectName","value","Type","getDataSource","createDataSource","type","DataSourceType","Category","id","label","labelPlural","filter","show","getText","icon","Icon","ERROR","title","actions","Action","OK","styleClass","internalError","Error","UnknownDataSourceType","loadMetadata","context","rootCondition","filterJson","parseCondition","e","createComplexCondition","toString","createFilter","searchTerm","searchterm","setProperty","setDataSource","conditionJson","parseComplexCondition","parseSimpleCondition","subConditions","i","length","subConditionJson","push","operator","valueLabel","attribute","createSimpleCondition","attributeLabel","parseValue","parseOperator","metadata","getAttributeMetadata","inav2TypeConverter","ina2Sina","ComparisonOperator","Eq","Gt","Ge","Lt","Le"],"sources":["SearchUrlParserInav2.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\nimport SearchModel from \"sap/esh/search/ui/SearchModel\";\nimport MessageBox from \"sap/m/MessageBox\";\nimport errors from \"./error/errors\";\nimport i18n from \"./i18n\";\nimport { ComparisonOperator } from \"./sinaNexTS/sina/ComparisonOperator\";\nimport { ComplexCondition } from \"./sinaNexTS/sina/ComplexCondition\";\nimport { DataSource } from \"./sinaNexTS/sina/DataSource\";\nimport { LogicalOperator } from \"./sinaNexTS/sina/LogicalOperator\";\nimport { SimpleCondition } from \"./sinaNexTS/sina/SimpleCondition\";\nimport { Value } from \"./sinaNexTS/sina/types\";\n\ninterface INAV2ConditionJSON {\n    label: string;\n    attribute: string;\n    attributeLabel: string;\n    value: string;\n    valueLabel: string;\n}\n\ninterface SimpleConditionJSON extends INAV2ConditionJSON {\n    operator: \"=\" | \">\" | \">=\" | \"<\" | \"<=\";\n}\n\ninterface ComplexConditionJSON extends INAV2ConditionJSON {\n    operator: LogicalOperator;\n    conditions?: Array<INAV2ConditionJSON>;\n}\n\ninterface Context {\n    attribute?: string;\n    dataSource: DataSource;\n}\n\nfunction isComplexConditionJSON(conditionJSON: unknown): conditionJSON is ComplexConditionJSON {\n    if (conditionJSON && (conditionJSON as ComplexConditionJSON).conditions) {\n        return true;\n    }\n    return false;\n}\n\nexport default class SearchUrlParserInav2 {\n    private model: SearchModel;\n\n    constructor(properties: { model: SearchModel }) {\n        this.model = properties.model;\n    }\n\n    public async parseUrlParameters(oParametersLowerCased: {\n        searchterm?: string;\n        top?: string;\n        datasource?: string;\n        filter?: string;\n    }): Promise<void> {\n        // top\n        if (oParametersLowerCased.top) {\n            const top = parseInt(oParametersLowerCased.top, 10);\n            this.model.setTop(top, false);\n        }\n\n        // datasource\n        let dataSource = this.model.sinaNext.allDataSource;\n        if (oParametersLowerCased.datasource) {\n            const dataSourceJson = JSON.parse(oParametersLowerCased.datasource);\n            const dataSourceId = dataSourceJson.ObjectName.value;\n            switch (dataSourceJson.Type) {\n                case \"Category\":\n                    if (dataSourceId === \"$$ALL$$\") {\n                        dataSource = this.model.sinaNext.allDataSource;\n                    } else {\n                        dataSource = this.model.sinaNext.getDataSource(dataSourceId);\n                        if (!dataSource) {\n                            dataSource = this.model.sinaNext.createDataSource({\n                                type: this.model.sinaNext.DataSourceType.Category,\n                                id: dataSourceId,\n                                label: dataSourceJson.label,\n                                labelPlural: dataSourceJson.labelPlural,\n                            });\n                        }\n                    }\n                    break;\n                case \"BusinessObject\":\n                    dataSource = this.model.sinaNext.getDataSource(dataSourceId);\n                    if (!dataSource) {\n                        dataSource = this.model.sinaNext.allDataSource;\n                        delete oParametersLowerCased.filter;\n                        MessageBox.show(\n                            i18n.getText(\"searchUrlParsingErrorLong\") +\n                                \"\\n(Unknow datasource \" +\n                                dataSourceId +\n                                \")\",\n                            {\n                                icon: MessageBox.Icon.ERROR,\n                                title: i18n.getText(\"searchUrlParsingError\"),\n                                actions: [MessageBox.Action.OK],\n                                styleClass: \"sapUshellSearchMessageBox\", // selector for closePopovers\n                            }\n                        );\n                    }\n                    break;\n                default: {\n                    const internalError = new Error(\"Unknown datasource type \" + dataSourceJson.Type);\n                    throw new errors.UnknownDataSourceType(internalError);\n                }\n            }\n        }\n\n        await this.model.sinaNext.loadMetadata(dataSource);\n\n        // root condition\n        const context = {\n            dataSource: dataSource,\n        };\n        let rootCondition;\n        if (oParametersLowerCased.filter) {\n            try {\n                const filterJson = JSON.parse(oParametersLowerCased.filter);\n                rootCondition = this.parseCondition(context, filterJson);\n            } catch (e) {\n                // fallback-filter + send error message\n                rootCondition = this.model.sinaNext.createComplexCondition();\n                MessageBox.show(i18n.getText(\"searchUrlParsingErrorLong\") + \"\\n(\" + e.toString() + \")\", {\n                    icon: MessageBox.Icon.ERROR,\n                    title: i18n.getText(\"searchUrlParsingError\"),\n                    actions: [MessageBox.Action.OK],\n                    styleClass: \"sapUshellSearchMessageBox\", // selector for closePopovers\n                });\n            }\n        } else {\n            rootCondition = this.model.sinaNext.createComplexCondition();\n        }\n\n        // filter\n        const filter = this.model.sinaNext.createFilter({\n            dataSource: dataSource,\n            searchTerm: oParametersLowerCased.searchterm,\n            rootCondition: rootCondition,\n        });\n        this.model.setProperty(\"/uiFilter\", filter);\n        this.model.setDataSource(filter.dataSource, false); // explicitely updata datasource (for categories: update ds list in model)\n    }\n\n    private parseCondition(\n        context: Context,\n        conditionJson: INAV2ConditionJSON\n    ): SimpleCondition | ComplexCondition {\n        if (isComplexConditionJSON(conditionJson)) {\n            return this.parseComplexCondition(context, conditionJson);\n        }\n        return this.parseSimpleCondition(context, conditionJson as SimpleConditionJSON);\n    }\n\n    private parseComplexCondition(context: Context, conditionJson: ComplexConditionJSON): ComplexCondition {\n        const subConditions = [];\n        for (let i = 0; i < conditionJson.conditions.length; ++i) {\n            const subConditionJson = conditionJson.conditions[i];\n            subConditions.push(this.parseCondition(context, subConditionJson));\n        }\n        return this.model.sinaNext.createComplexCondition({\n            operator: conditionJson.operator,\n            conditions: subConditions,\n            valueLabel: conditionJson.label,\n        });\n    }\n\n    private parseSimpleCondition(context: Context, conditionJson: SimpleConditionJSON): SimpleCondition {\n        context.attribute = conditionJson.attribute;\n        return this.model.sinaNext.createSimpleCondition({\n            attribute: conditionJson.attribute,\n            attributeLabel: conditionJson.attributeLabel,\n            value: this.parseValue(context, conditionJson.value),\n            valueLabel: conditionJson.valueLabel || conditionJson.label,\n            operator: this.parseOperator(context, conditionJson.operator),\n        });\n    }\n\n    private parseValue(context: Context, value): Value {\n        const metadata = context.dataSource.getAttributeMetadata(context.attribute);\n        return this.model.sinaNext.inav2TypeConverter.ina2Sina(metadata.type, value);\n    }\n\n    private parseOperator(context: unknown, operator: \"=\" | \">\" | \">=\" | \"<\" | \"<=\"): ComparisonOperator {\n        switch (operator) {\n            case \"=\":\n                return this.model.sinaNext.ComparisonOperator.Eq;\n            case \">\":\n                return this.model.sinaNext.ComparisonOperator.Gt;\n            case \">=\":\n                return this.model.sinaNext.ComparisonOperator.Ge;\n            case \"<\":\n                return this.model.sinaNext.ComparisonOperator.Lt;\n            case \"<=\":\n                return this.model.sinaNext.ComparisonOperator.Le;\n            default:\n                throw \"Unknown operator \" + operator;\n        }\n    }\n}\n"],"mappings":"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","ignoreList":[]}