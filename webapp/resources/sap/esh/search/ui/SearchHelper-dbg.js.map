{"version":3,"file":"SearchHelper-dbg.js","names":["sap","ui","define","MessageBox","FileSizeFormat","NumberFormat","__i18n","Locale","Localization","EventBus","UI5Element","_interopRequireDefault","obj","__esModule","default","i18n","Tester","onlyAsteriskRegExp","RegExp","alphaNumeric","nonAlphaNumeric","PL","nonepL","pL","onlyAsterisk","aSearchTerms","bDisjunctionType","globalBold","bold","highlightStyle","constructor","sSearchTerms","matchContains","test","replace","tokenizeSearchTerms","j","length","searchTerm","bIsChinese","match","substr","sText2BeSearched","oReturn","bMatch","sHighlightedText","initializeBoldArray","oRegSearchTerm","aMatchResult","lastIndex","bLocalMatch","exec","startIndex","calStartIndex","index","calLastIndex","markBoldArray","render","text","substring","reg","terms","termsSeparatedBySpace","split","newTerms","i","termSpace","trim","push","sText","Array","nStartIndex","nEndIndexPlus1","sOriginalText","result","start","join","delayedExecution","originalFunction","delay","timerId","decorator","args","that","window","clearTimeout","setTimeout","apply","abort","refuseOutdatedRequests","requestGroupId","lastRequestId","requestId","thisPromise","Promise","resolve","reject","then","catch","error","outdatedRequestAdministration","registerDecorator","abortRequests","decorators","getDecorators","decoratorMap","resultItemCustomStyleClassSetter","control","items","item","itemObject","getBindingContext","getObject","customItemStyleClass","addStyleClass","boldTagUnescaper","domref","innerhtml","innerHTML","boldTagUnescaperForStrings","boldStartES","boldStart","boldEndES","boldEnd","indexOf","getHashFromUrl","location","href","getUrlParameters","urlParameters","parseUrlParameters","unescapedSearchUrl","oParametersLowerCased","knownSearchUrlParameters","name","pos","value","toLowerCase","sort","a","b","charAt","decodeURIComponent","isSearchAppActive","hasher","hash","setHash","showUrlUpdateError","init","reset","hasChanged","urlError","message","getText","warning","title","styleClass","idMap","subscribeOnlyOnce","id","eventName","callBack","selfControl","unsubscribe","wrapper","getInstance","subscribe","_isDisplayed","element","nodeType","HTMLElement","offsetParent","offsetWidth","offsetHeight","getClientRects","getMetadata","getName","getDomRef","SearchFocusHandler","oSearchComposite","oModel","focusSetter","get2BeFocusedControlDomRef","getModelInternal","controlDomRef","isListDisplayed","isTableDisplayed","isGridDisplayed","getDataSource","appDataSource","getProperty","searchResultList","getItems","getResultViewType","searchResultGrid","getAggregation","domRef","querySelector","oTilesContainer","getContent","setFocusedIndex","setFocus","retries","doSetFocus","document","querySelectorAll","bind","focus","getElementById","getAttribute","resultListItem","showDetails","_integerShortFormatter","_integerStandardFormatter","oLocale","getLanguageTag","toString","formatInteger","getIntegerInstance","style","precision","groupingEnabled","Math","abs","format","_fileSizeFormatter","formatFileSize","binaryFilesize","calculateTooltipForwordEllipsis","elementToBeChecked","textContent","targetMeasureElement","findChildWithClass","scrollWidth","scrollHeight","hasAttribute","setAttribute","firstBElement","isFirstBElementVisible","isElementVisible","applyForwardEllipsisTruncation","iconSpan","range","createRange","setStartAfter","setStartBefore","firstChild","setEndBefore","textBeforeFirstB","truncatedText","isBElementVisible","end","mid","floor","slice","tempTextNode","createTextNode","deleteContents","insertNode","newTextNode","elementToBeMeasured","parentElement","elToBeMeasuredRect","getBoundingClientRect","parentElRect","isVisible","top","left","bottom","right","currentElement","parentClasses","childClasses","hasAnyParentClass","some","cls","classList","contains","childClass","found","convertPromiseTojQueryDeferred","promise","finally","deferred","jQuery","Deferred","arguments","convertJQueryDeferredToPromise","always","requireUI5Modules","modules","require","from","isSubsetOf","subset","superset","isArray","valid","includes","__exports"],"sources":["SearchHelper.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\nimport SearchCompositeControl from \"./SearchCompositeControl\";\nimport SearchModel from \"sap/esh/search/ui/SearchModel\";\nimport MessageBox from \"sap/m/MessageBox\";\nimport FileSizeFormat from \"sap/ui/core/format/FileSizeFormat\";\nimport NumberFormat from \"sap/ui/core/format/NumberFormat\";\nimport i18n from \"./i18n\";\nimport { UrlParameters } from \"./SearchModelTypes\";\nimport SearchResultListItem from \"./controls/resultview/SearchResultListItem\";\nimport Locale from \"sap/ui/core/Locale\";\nimport Localization from \"sap/base/i18n/Localization\";\nimport EventBus from \"sap/ui/core/EventBus\";\nimport UI5Element from \"sap/ui/core/Element\";\n// import Rendering from \"sap/ui/core/Rendering\"; // no yet available in UI5 2.0\nimport Control from \"sap/ui/core/Control\";\n\nexport type AbortableFunction<T> = T & { abort: () => void };\n\n// =======================================================================\n// Regex Tester\n// =======================================================================\nexport class Tester {\n    readonly onlyAsteriskRegExp = new RegExp(\"^[\\\\s*]*$\");\n    readonly alphaNumeric = \"[a-zA-Z0-9]\";\n    readonly nonAlphaNumeric = \"[^a-zA-Z0-9]\";\n    readonly PL =\n        \"(?:[\\0-@[-`{-\\xA9\\xAB-\\xB4\\xB6-\\xB9\\xBB-\\xBF\\xD7\\xF7\\u02C2-\\u02C5\\u02D2-\\u02DF\\u02E5-\\u02EB\\u02ED\\u02EF-\\u036F\\u0375\\u0378\\u0379\\u037E\\u0380-\\u0385\\u0387\\u038B\\u038D\\u03A2\\u03F6\\u0482-\\u0489\\u0530\\u0557\\u0558\\u055A-\\u0560\\u0588-\\u05CF\\u05EB-\\u05EF\\u05F3-\\u061F\\u064B-\\u066D\\u0670\\u06D4\\u06D6-\\u06E4\\u06E7-\\u06ED\\u06F0-\\u06F9\\u06FD\\u06FE\\u0700-\\u070F\\u0711\\u0730-\\u074C\\u07A6-\\u07B0\\u07B2-\\u07C9\\u07EB-\\u07F3\\u07F6-\\u07F9\\u07FB-\\u07FF\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u083F\\u0859-\\u089F\\u08B5\\u08BE-\\u0903\\u093A-\\u093C\\u093E-\\u094F\\u0951-\\u0957\\u0962-\\u0970\\u0981-\\u0984\\u098D\\u098E\\u0991\\u0992\\u09A9\\u09B1\\u09B3-\\u09B5\\u09BA-\\u09BC\\u09BE-\\u09CD\\u09CF-\\u09DB\\u09DE\\u09E2-\\u09EF\\u09F2-\\u0A04\\u0A0B-\\u0A0E\\u0A11\\u0A12\\u0A29\\u0A31\\u0A34\\u0A37\\u0A3A-\\u0A58\\u0A5D\\u0A5F-\\u0A71\\u0A75-\\u0A84\\u0A8E\\u0A92\\u0AA9\\u0AB1\\u0AB4\\u0ABA-\\u0ABC\\u0ABE-\\u0ACF\\u0AD1-\\u0ADF\\u0AE2-\\u0AF8\\u0AFA-\\u0B04\\u0B0D\\u0B0E\\u0B11\\u0B12\\u0B29\\u0B31\\u0B34\\u0B3A-\\u0B3C\\u0B3E-\\u0B5B\\u0B5E\\u0B62-\\u0B70\\u0B72-\\u0B82\\u0B84\\u0B8B-\\u0B8D\\u0B91\\u0B96-\\u0B98\\u0B9B\\u0B9D\\u0BA0-\\u0BA2\\u0BA5-\\u0BA7\\u0BAB-\\u0BAD\\u0BBA-\\u0BCF\\u0BD1-\\u0C04\\u0C0D\\u0C11\\u0C29\\u0C3A-\\u0C3C\\u0C3E-\\u0C57\\u0C5B-\\u0C5F\\u0C62-\\u0C7F\\u0C81-\\u0C84\\u0C8D\\u0C91\\u0CA9\\u0CB4\\u0CBA-\\u0CBC\\u0CBE-\\u0CDD\\u0CDF\\u0CE2-\\u0CF0\\u0CF3-\\u0D04\\u0D0D\\u0D11\\u0D3B\\u0D3C\\u0D3E-\\u0D4D\\u0D4F-\\u0D53\\u0D57-\\u0D5E\\u0D62-\\u0D79\\u0D80-\\u0D84\\u0D97-\\u0D99\\u0DB2\\u0DBC\\u0DBE\\u0DBF\\u0DC7-\\u0E00\\u0E31\\u0E34-\\u0E3F\\u0E47-\\u0E80\\u0E83\\u0E85\\u0E86\\u0E89\\u0E8B\\u0E8C\\u0E8E-\\u0E93\\u0E98\\u0EA0\\u0EA4\\u0EA6\\u0EA8\\u0EA9\\u0EAC\\u0EB1\\u0EB4-\\u0EBC\\u0EBE\\u0EBF\\u0EC5\\u0EC7-\\u0EDB\\u0EE0-\\u0EFF\\u0F01-\\u0F3F\\u0F48\\u0F6D-\\u0F87\\u0F8D-\\u0FFF\\u102B-\\u103E\\u1040-\\u104F\\u1056-\\u1059\\u105E-\\u1060\\u1062-\\u1064\\u1067-\\u106D\\u1071-\\u1074\\u1082-\\u108D\\u108F-\\u109F\\u10C6\\u10C8-\\u10CC\\u10CE\\u10CF\\u10FB\\u1249\\u124E\\u124F\\u1257\\u1259\\u125E\\u125F\\u1289\\u128E\\u128F\\u12B1\\u12B6\\u12B7\\u12BF\\u12C1\\u12C6\\u12C7\\u12D7\\u1311\\u1316\\u1317\\u135B-\\u137F\\u1390-\\u139F\\u13F6\\u13F7\\u13FE-\\u1400\\u166D\\u166E\\u1680\\u169B-\\u169F\\u16EB-\\u16F0\\u16F9-\\u16FF\\u170D\\u1712-\\u171F\\u1732-\\u173F\\u1752-\\u175F\\u176D\\u1771-\\u177F\\u17B4-\\u17D6\\u17D8-\\u17DB\\u17DD-\\u181F\\u1878-\\u187F\\u1885\\u1886\\u18A9\\u18AB-\\u18AF\\u18F6-\\u18FF\\u191F-\\u194F\\u196E\\u196F\\u1975-\\u197F\\u19AC-\\u19AF\\u19CA-\\u19FF\\u1A17-\\u1A1F\\u1A55-\\u1AA6\\u1AA8-\\u1B04\\u1B34-\\u1B44\\u1B4C-\\u1B82\\u1BA1-\\u1BAD\\u1BB0-\\u1BB9\\u1BE6-\\u1BFF\\u1C24-\\u1C4C\\u1C50-\\u1C59\\u1C7E\\u1C7F\\u1C89-\\u1CE8\\u1CED\\u1CF2-\\u1CF4\\u1CF7-\\u1CFF\\u1DC0-\\u1DFF\\u1F16\\u1F17\\u1F1E\\u1F1F\\u1F46\\u1F47\\u1F4E\\u1F4F\\u1F58\\u1F5A\\u1F5C\\u1F5E\\u1F7E\\u1F7F\\u1FB5\\u1FBD\\u1FBF-\\u1FC1\\u1FC5\\u1FCD-\\u1FCF\\u1FD4\\u1FD5\\u1FDC-\\u1FDF\\u1FED-\\u1FF1\\u1FF5\\u1FFD-\\u2070\\u2072-\\u207E\\u2080-\\u208F\\u209D-\\u2101\\u2103-\\u2106\\u2108\\u2109\\u2114\\u2116-\\u2118\\u211E-\\u2123\\u2125\\u2127\\u2129\\u212E\\u213A\\u213B\\u2140-\\u2144\\u214A-\\u214D\\u214F-\\u2182\\u2185-\\u2BFF\\u2C2F\\u2C5F\\u2CE5-\\u2CEA\\u2CEF-\\u2CF1\\u2CF4-\\u2CFF\\u2D26\\u2D28-\\u2D2C\\u2D2E\\u2D2F\\u2D68-\\u2D6E\\u2D70-\\u2D7F\\u2D97-\\u2D9F\\u2DA7\\u2DAF\\u2DB7\\u2DBF\\u2DC7\\u2DCF\\u2DD7\\u2DDF-\\u2E2E\\u2E30-\\u3004\\u3007-\\u3030\\u3036-\\u303A\\u303D-\\u3040\\u3097-\\u309C\\u30A0\\u30FB\\u3100-\\u3104\\u312E-\\u3130\\u318F-\\u319F\\u31BB-\\u31EF\\u3200-\\u33FF\\u4DB6-\\u4DFF\\u9FD6-\\u9FFF\\uA48D-\\uA4CF\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA620-\\uA629\\uA62C-\\uA63F\\uA66F-\\uA67E\\uA69E\\uA69F\\uA6E6-\\uA716\\uA720\\uA721\\uA789\\uA78A\\uA7AF\\uA7B8-\\uA7F6\\uA802\\uA806\\uA80B\\uA823-\\uA83F\\uA874-\\uA881\\uA8B4-\\uA8F1\\uA8F8-\\uA8FA\\uA8FC\\uA8FE-\\uA909\\uA926-\\uA92F\\uA947-\\uA95F\\uA97D-\\uA983\\uA9B3-\\uA9CE\\uA9D0-\\uA9DF\\uA9E5\\uA9F0-\\uA9F9\\uA9FF\\uAA29-\\uAA3F\\uAA43\\uAA4C-\\uAA5F\\uAA77-\\uAA79\\uAA7B-\\uAA7D\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAC3-\\uAADA\\uAADE\\uAADF\\uAAEB-\\uAAF1\\uAAF5-\\uAB00\\uAB07\\uAB08\\uAB0F\\uAB10\\uAB17-\\uAB1F\\uAB27\\uAB2F\\uAB5B\\uAB66-\\uAB6F\\uABE3-\\uABFF\\uD7A4-\\uD7AF\\uD7C7-\\uD7CA\\uD7FC-\\uD7FF\\uE000-\\uF8FF\\uFA6E\\uFA6F\\uFADA-\\uFAFF\\uFB07-\\uFB12\\uFB18-\\uFB1C\\uFB1E\\uFB29\\uFB37\\uFB3D\\uFB3F\\uFB42\\uFB45\\uFBB2-\\uFBD2\\uFD3E-\\uFD4F\\uFD90\\uFD91\\uFDC8-\\uFDEF\\uFDFC-\\uFE6F\\uFE75\\uFEFD-\\uFF20\\uFF3B-\\uFF40\\uFF5B-\\uFF65\\uFFBF-\\uFFC1\\uFFC8\\uFFC9\\uFFD0\\uFFD1\\uFFD8\\uFFD9\\uFFDD-\\uFFFF]|\\uD800[\\uDC0C\\uDC27\\uDC3B\\uDC3E\\uDC4E\\uDC4F\\uDC5E-\\uDC7F\\uDCFB-\\uDE7F\\uDE9D-\\uDE9F\\uDED1-\\uDEFF\\uDF20-\\uDF2F\\uDF41\\uDF4A-\\uDF4F\\uDF76-\\uDF7F\\uDF9E\\uDF9F\\uDFC4-\\uDFC7\\uDFD0-\\uDFFF]|\\uD801[\\uDC9E-\\uDCAF\\uDCD4-\\uDCD7\\uDCFC-\\uDCFF\\uDD28-\\uDD2F\\uDD64-\\uDDFF\\uDF37-\\uDF3F\\uDF56-\\uDF5F\\uDF68-\\uDFFF]|\\uD802[\\uDC06\\uDC07\\uDC09\\uDC36\\uDC39-\\uDC3B\\uDC3D\\uDC3E\\uDC56-\\uDC5F\\uDC77-\\uDC7F\\uDC9F-\\uDCDF\\uDCF3\\uDCF6-\\uDCFF\\uDD16-\\uDD1F\\uDD3A-\\uDD7F\\uDDB8-\\uDDBD\\uDDC0-\\uDDFF\\uDE01-\\uDE0F\\uDE14\\uDE18\\uDE34-\\uDE5F\\uDE7D-\\uDE7F\\uDE9D-\\uDEBF\\uDEC8\\uDEE5-\\uDEFF\\uDF36-\\uDF3F\\uDF56-\\uDF5F\\uDF73-\\uDF7F\\uDF92-\\uDFFF]|\\uD803[\\uDC49-\\uDC7F\\uDCB3-\\uDCBF\\uDCF3-\\uDFFF]|\\uD804[\\uDC00-\\uDC02\\uDC38-\\uDC82\\uDCB0-\\uDCCF\\uDCE9-\\uDD02\\uDD27-\\uDD4F\\uDD73-\\uDD75\\uDD77-\\uDD82\\uDDB3-\\uDDC0\\uDDC5-\\uDDD9\\uDDDB\\uDDDD-\\uDDFF\\uDE12\\uDE2C-\\uDE7F\\uDE87\\uDE89\\uDE8E\\uDE9E\\uDEA9-\\uDEAF\\uDEDF-\\uDF04\\uDF0D\\uDF0E\\uDF11\\uDF12\\uDF29\\uDF31\\uDF34\\uDF3A-\\uDF3C\\uDF3E-\\uDF4F\\uDF51-\\uDF5C\\uDF62-\\uDFFF]|\\uD805[\\uDC35-\\uDC46\\uDC4B-\\uDC7F\\uDCB0-\\uDCC3\\uDCC6\\uDCC8-\\uDD7F\\uDDAF-\\uDDD7\\uDDDC-\\uDDFF\\uDE30-\\uDE43\\uDE45-\\uDE7F\\uDEAB-\\uDEFF\\uDF1A-\\uDFFF]|\\uD806[\\uDC00-\\uDC9F\\uDCE0-\\uDCFE\\uDD00-\\uDEBF\\uDEF9-\\uDFFF]|\\uD807[\\uDC09\\uDC2F-\\uDC3F\\uDC41-\\uDC71\\uDC90-\\uDFFF]|\\uD808[\\uDF9A-\\uDFFF]|\\uD809[\\uDC00-\\uDC7F\\uDD44-\\uDFFF]|[\\uD80A\\uD80B\\uD80E-\\uD810\\uD812-\\uD819\\uD823-\\uD82B\\uD82D\\uD82E\\uD830-\\uD834\\uD836-\\uD839\\uD83C-\\uD83F\\uD874-\\uD87D\\uD87F-\\uDBFF][\\uDC00-\\uDFFF]|\\uD80D[\\uDC2F-\\uDFFF]|\\uD811[\\uDE47-\\uDFFF]|\\uD81A[\\uDE39-\\uDE3F\\uDE5F-\\uDECF\\uDEEE-\\uDEFF\\uDF30-\\uDF3F\\uDF44-\\uDF62\\uDF78-\\uDF7C\\uDF90-\\uDFFF]|\\uD81B[\\uDC00-\\uDEFF\\uDF45-\\uDF4F\\uDF51-\\uDF92\\uDFA0-\\uDFDF\\uDFE1-\\uDFFF]|\\uD821[\\uDFED-\\uDFFF]|\\uD822[\\uDEF3-\\uDFFF]|\\uD82C[\\uDC02-\\uDFFF]|\\uD82F[\\uDC6B-\\uDC6F\\uDC7D-\\uDC7F\\uDC89-\\uDC8F\\uDC9A-\\uDFFF]|\\uD835[\\uDC55\\uDC9D\\uDCA0\\uDCA1\\uDCA3\\uDCA4\\uDCA7\\uDCA8\\uDCAD\\uDCBA\\uDCBC\\uDCC4\\uDD06\\uDD0B\\uDD0C\\uDD15\\uDD1D\\uDD3A\\uDD3F\\uDD45\\uDD47-\\uDD49\\uDD51\\uDEA6\\uDEA7\\uDEC1\\uDEDB\\uDEFB\\uDF15\\uDF35\\uDF4F\\uDF6F\\uDF89\\uDFA9\\uDFC3\\uDFCC-\\uDFFF]|\\uD83A[\\uDCC5-\\uDCFF\\uDD44-\\uDFFF]|\\uD83B[\\uDC00-\\uDDFF\\uDE04\\uDE20\\uDE23\\uDE25\\uDE26\\uDE28\\uDE33\\uDE38\\uDE3A\\uDE3C-\\uDE41\\uDE43-\\uDE46\\uDE48\\uDE4A\\uDE4C\\uDE50\\uDE53\\uDE55\\uDE56\\uDE58\\uDE5A\\uDE5C\\uDE5E\\uDE60\\uDE63\\uDE65\\uDE66\\uDE6B\\uDE73\\uDE78\\uDE7D\\uDE7F\\uDE8A\\uDE9C-\\uDEA0\\uDEA4\\uDEAA\\uDEBC-\\uDFFF]|\\uD869[\\uDED7-\\uDEFF]|\\uD86D[\\uDF35-\\uDF3F]|\\uD86E[\\uDC1E\\uDC1F]|\\uD873[\\uDEA2-\\uDFFF]|\\uD87E[\\uDE1E-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])\";\n\n    readonly nonepL =\n        \"(?:[^A-Za-z\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B4\\u08B6-\\u08BD\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16F1-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF30-\\uDF40\\uDF42-\\uDF49\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF]|\\uD801[\\uDC00-\\uDC9D\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDF00-\\uDF19]|\\uD806[\\uDCA0-\\uDCDF\\uDCFF\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC72-\\uDC8F]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50\\uDF93-\\uDF9F\\uDFE0]|\\uD821[\\uDC00-\\uDFEC]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00\\uDC01]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD83A[\\uDC00-\\uDCC4\\uDD00-\\uDD43]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1]|\\uD87E[\\uDC00-\\uDE1D])\";\n\n    readonly pL =\n        \"(?:[A-Za-z\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B4\\u08B6-\\u08BD\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16F1-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF30-\\uDF40\\uDF42-\\uDF49\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF]|\\uD801[\\uDC00-\\uDC9D\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDF00-\\uDF19]|\\uD806[\\uDCA0-\\uDCDF\\uDCFF\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC72-\\uDC8F]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50\\uDF93-\\uDF9F\\uDFE0]|\\uD821[\\uDC00-\\uDFEC]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00\\uDC01]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD83A[\\uDC00-\\uDCC4\\uDD00-\\uDD43]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1]|\\uD87E[\\uDC00-\\uDE1D])\";\n\n    onlyAsterisk?: boolean;\n    aSearchTerms: Array<string | RegExp>;\n    bDisjunctionType: \"and\" | \"or\";\n    globalBold?: boolean;\n    bold?: Array<boolean>;\n    highlightStyle?: string; // CSS class\n\n    constructor(\n        sSearchTerms: string,\n        highlightStyle?: string, // CSS class\n        matchContains?: boolean,\n        bDisjunctionType?: \"and\" | \"or\"\n    ) {\n        // normalize searchterms in string format\n        sSearchTerms = sSearchTerms || \"*\";\n\n        // check for pure asterisk search terms\n        if (this.onlyAsteriskRegExp.test(sSearchTerms)) {\n            this.onlyAsterisk = true;\n        }\n\n        // escape special chars\n        // eslint-disable-next-line no-useless-escape\n        sSearchTerms = sSearchTerms.replace(/([.^=!:${}()|\\+\\-\\[\\]\\/\\\\])/g, \"\\\\$1\");\n\n        // store tokenized search terms array\n        this.aSearchTerms = this.tokenizeSearchTerms(sSearchTerms);\n        for (let j = 0; j < this.aSearchTerms.length; ++j) {\n            let searchTerm: string | RegExp = this.aSearchTerms[j];\n            searchTerm = (searchTerm as string).replace(/\\?/g, \".\");\n            searchTerm = (searchTerm as string).replace(/\\*/g, \".*?\");\n\n            // check if search term is Chinese (in unicode Chinese characters interval).\n            const bIsChinese = (searchTerm as string).match(/[\\u3400-\\u9faf]/) !== null;\n            if (bIsChinese || matchContains) {\n                // match any place of the word, case insensitive\n                // \\b \\w are evil regarding unicode\n                searchTerm = new RegExp(searchTerm, \"gi\");\n            } else {\n                // suggestion scenario\n                // last term append * (for filter)\n                if ((searchTerm as string).substr(-3) === \".*?\") {\n                    // if * at end anyway, change matching to get different highlighting\n                    searchTerm =\n                        (searchTerm as string).substr(0, (searchTerm as string).length - 3) + this.pL + \"*\";\n                }\n                searchTerm = new RegExp(\"(\" + this.nonepL + \"|^|\\\\s)(\" + searchTerm + \")()\", \"gi\");\n            }\n            this.aSearchTerms[j] = searchTerm;\n        }\n        this.highlightStyle = highlightStyle;\n        if (!bDisjunctionType) {\n            bDisjunctionType = \"and\";\n        }\n        this.bDisjunctionType = bDisjunctionType; // (\"and\", \"or\")\n    }\n\n    // if the text to be searched contains all of search terms,\n    // return object with match flag and highlighted text or space in case of not match\n    test(sText2BeSearched: string): {\n        bMatch: boolean;\n        sHighlightedText: string;\n    } {\n        const oReturn = {\n            bMatch: false,\n            sHighlightedText: \"\",\n        };\n\n        if (!sText2BeSearched) {\n            return oReturn;\n        }\n\n        this.initializeBoldArray(sText2BeSearched);\n\n        // global flag is there is any bold char\n        this.globalBold = false;\n        let oRegSearchTerm;\n        let aMatchResult;\n\n        for (let j = 0; j < this.aSearchTerms.length; ++j) {\n            // only match beginnings of the word, case insensitive\n            oRegSearchTerm = this.aSearchTerms[j];\n\n            // match?\n            let lastIndex = -1;\n\n            let bLocalMatch = false;\n            while ((aMatchResult = oRegSearchTerm.exec(sText2BeSearched)) !== null) {\n                bLocalMatch = true;\n                // prevent endless loop, should not happen but who knows...\n                if (oRegSearchTerm.lastIndex === lastIndex) {\n                    break;\n                }\n                lastIndex = oRegSearchTerm.lastIndex;\n\n                // aMatchResult.index:       start position of matching term\n                // oRegSearchTerm.lastIndex: start position of next search\n                const startIndex = this.calStartIndex(sText2BeSearched, aMatchResult.index);\n                if (startIndex < 0) {\n                    continue;\n                }\n                lastIndex = this.calLastIndex(sText2BeSearched, startIndex, oRegSearchTerm.lastIndex);\n                this.markBoldArray(startIndex, lastIndex);\n            }\n\n            switch (this.bDisjunctionType) {\n                case \"or\":\n                    if (bLocalMatch) {\n                        oReturn.bMatch = true;\n                    }\n                    break;\n                case \"and\":\n                default:\n                    if (!bLocalMatch) {\n                        return oReturn;\n                    }\n                    break;\n            }\n        }\n\n        // search terms have logical \"and\" relation, all of them must be available in text\n        oReturn.bMatch = true;\n\n        // generate highligted text\n        if (this.onlyAsterisk) {\n            oReturn.sHighlightedText = sText2BeSearched;\n        } else {\n            oReturn.sHighlightedText = this.render(sText2BeSearched);\n        }\n\n        return oReturn;\n    }\n\n    private calStartIndex(text: string, startIndex: number): number {\n        text = text.substring(startIndex);\n        const reg = new RegExp(this.pL);\n        const match = reg.exec(text);\n        if (!match) {\n            return startIndex;\n        }\n        return match.index + startIndex;\n    }\n\n    private calLastIndex(text: string, startIndex: number, lastIndex: number): number {\n        text = text.substring(lastIndex, lastIndex);\n        const reg = new RegExp(this.nonepL);\n        const match = reg.exec(text);\n        if (!match) {\n            return lastIndex;\n        }\n        return lastIndex - 1;\n    }\n\n    // tokenize search terms splitted by spaces\n    private tokenizeSearchTerms(terms: string): Array<string> {\n        const termsSeparatedBySpace = terms.split(\" \");\n        const newTerms = [];\n        // split search terms with space and wildcard into array\n        for (let i = 0; i < termsSeparatedBySpace.length; i++) {\n            const termSpace = termsSeparatedBySpace[i].trim();\n            if (termSpace.length > 0 && termSpace !== \".*\") {\n                newTerms.push(termSpace);\n            }\n        }\n        return newTerms;\n    }\n\n    // initialize the bold array\n    private initializeBoldArray(sText: string): void {\n        // create array which stores flag whether character is bold or not\n        this.bold = new Array(sText.length);\n        for (let i = 0; i < this.bold.length; ++i) {\n            this.bold[i] = false;\n        }\n    }\n\n    // mark bold array\n    private markBoldArray(nStartIndex: number, nEndIndexPlus1: number): void {\n        // mark bold characters in global array\n        for (let i = nStartIndex; i < nEndIndexPlus1; i++) {\n            this.bold[i] = true;\n            this.globalBold = true;\n        }\n    }\n\n    // render original text with <b> tag\n    private render(sOriginalText: string): string {\n        // short cut if there is nothing to do\n        if (!this.globalBold) {\n            return sOriginalText;\n        }\n\n        // highlight sOriginalText according to information in this.bold\n        let bold = false;\n        const result = [];\n        let start = 0;\n        let i;\n        for (i = 0; i < sOriginalText.length; ++i) {\n            if (\n                (!bold && this.bold[i]) || // check for begin of bold sequence\n                (bold && !this.bold[i])\n            ) {\n                // check for end of bold sequence\n                result.push(sOriginalText.substring(start, i));\n                if (bold) {\n                    // bold section ends\n                    result.push(\"</b>\");\n                } else {\n                    // bold section starts\n                    if (this.highlightStyle) {\n                        result.push('<b class=\"' + this.highlightStyle + '\">');\n                    } else {\n                        result.push(\"<b>\");\n                    }\n                }\n                bold = !bold;\n                start = i;\n            }\n        }\n\n        // add last part\n        result.push(sOriginalText.substring(start, i));\n        if (bold) {\n            result.push(\"</b>\");\n        }\n        return result.join(\"\");\n    }\n}\n\n// =======================================================================\n// decorator for delayed execution\n// =======================================================================\n// eslint-disable-next-line @typescript-eslint/no-unsafe-function-type\nexport function delayedExecution<T extends Function>(\n    originalFunction: T,\n    delay: number\n): T & { abort: () => void } {\n    let timerId = null;\n    const decorator = function (...args: Array<unknown>) {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const that = this;\n        if (timerId) {\n            window.clearTimeout(timerId);\n        }\n        timerId = window.setTimeout(function () {\n            timerId = null;\n            originalFunction.apply(that, args);\n        }, delay);\n    };\n    decorator.abort = function () {\n        if (timerId) {\n            window.clearTimeout(timerId);\n        }\n    };\n    return decorator as unknown as AbortableFunction<T>;\n}\n\n// =======================================================================\n// decorator for refusing outdated requests\n// =======================================================================\n// eslint-disable-next-line @typescript-eslint/no-unsafe-function-type\nexport function refuseOutdatedRequests<T extends Function>(\n    originalFunction: T,\n    requestGroupId?: string\n): T & { abort: () => void } {\n    /* eslint new-cap:0 */\n    let lastRequestId = 0;\n    const decorator = (...args: Array<unknown>) => {\n        const requestId = ++lastRequestId;\n        // console.log(requestGroupId + ' start ', requestId);\n        const thisPromise = new Promise((resolve, reject) => {\n            originalFunction\n                .apply(this, args)\n                .then((result) => {\n                    if (requestId !== lastRequestId) {\n                        // console.log(requestGroupId + ' throw ', requestId, ' because max', maxRequestId);\n                        return; // throw away outdated requests\n                    }\n                    // console.log(requestGroupId + ' accept ', requestId);\n                    resolve(result);\n                })\n                .catch((error) => {\n                    if (requestId !== lastRequestId) {\n                        return;\n                    } // throw away outdated requests\n                    reject(error);\n                });\n        });\n        return thisPromise;\n    };\n    decorator.abort = () => {\n        ++lastRequestId;\n        // console.log(id + ' abort', maxRequestId);\n    };\n    if (requestGroupId) {\n        outdatedRequestAdministration.registerDecorator(requestGroupId, decorator);\n    }\n    return decorator as unknown as AbortableFunction<T>;\n}\n\n// =======================================================================\n// abort all requests for a given requestGroupId\n// =======================================================================\nexport function abortRequests(requestGroupId: number): void {\n    const decorators = outdatedRequestAdministration.getDecorators(requestGroupId);\n    for (const decorator of decorators) {\n        decorator.abort();\n    }\n}\n\n// =======================================================================\n// administration of outdated request decorators\n// =======================================================================\nconst outdatedRequestAdministration = {\n    decoratorMap: {},\n\n    registerDecorator: function (requestGroupId, decorator) {\n        let decorators = this.decoratorMap[requestGroupId];\n        if (!decorators) {\n            decorators = [];\n            this.decoratorMap[requestGroupId] = decorators;\n        }\n        decorators.push(decorator);\n    },\n\n    getDecorators: function (requestGroupId) {\n        let decorators = this.decoratorMap[requestGroupId];\n        if (!decorators) {\n            decorators = [];\n        }\n        return decorators;\n    },\n};\n\n/**\n * Applies custom style class to result items of UI5 table/list/grid control based on item property \"customItemStyleClass\".\n * Add/remove custom style class for result item\n * @param control Control to apply custom item style class\n * @param customItemStyleClass Apply or remove default style class of result item\n */\nexport function resultItemCustomStyleClassSetter(control: Control): void {\n    if (!control) {\n        return;\n    }\n    let items;\n    // table/list\n    if (typeof control[\"getItems\"] === \"function\") {\n        items = control[\"getItems\"]();\n    }\n    // grid\n    else if (typeof control[\"getContent\"] === \"function\") {\n        items = control[\"getContent\"]();\n    }\n    if (items) {\n        for (let i = 0; i < items.length; i++) {\n            const item = items[i];\n            let itemObject;\n            if (item.getBindingContext()) {\n                itemObject = item.getBindingContext().getObject();\n            } else if (item.getBindingContext(\"publicSearchModel\")) {\n                itemObject = item.getBindingContext(\"publicSearchModel\").getObject();\n            }\n            if (itemObject?.customItemStyleClass) {\n                item.addStyleClass(itemObject.customItemStyleClass);\n            } else {\n                // item.removeStyleClass(...);  // ToDo (priority low) -> do we need to remove previously set style class?\n            }\n        }\n    }\n}\n\n/**\n * Unescapes previously escaped html so that it can be rendered as html.\n * It only will unescape to \"\\<b>\", \"\\<i>\"\" and \"\\<span>\"\" elements.\n * @param domref html element to be unescaped\n * @param highlightStyle css class of the to be bold text\n */\nexport function boldTagUnescaper(domref: HTMLElement, highlightStyle?: string): void {\n    if (!domref) {\n        return;\n    }\n    let innerhtml = domref.innerHTML;\n    innerhtml = boldTagUnescaperForStrings(innerhtml, highlightStyle);\n    if (domref.innerHTML !== innerhtml) {\n        domref.innerHTML = innerhtml;\n    }\n}\n\nexport function boldTagUnescaperForStrings(innerhtml: string, highlightStyle?: string): string {\n    let boldStartES = \"\";\n    let boldStart = \"\";\n    if (highlightStyle) {\n        boldStartES = '&lt;b class=\"' + highlightStyle + '\"&gt;';\n        boldStart = '<b class=\"' + highlightStyle + '\">';\n    } else {\n        boldStartES = \"&lt;b&gt;\";\n        boldStart = \"<b>\";\n    }\n\n    const boldEndES = \"&lt;/b&gt;\";\n    const boldEnd = \"</b>\";\n\n    while (innerhtml.indexOf(boldStartES) + innerhtml.indexOf(boldEndES) >= -1) {\n        // while these tags are found\n        innerhtml = innerhtml.replace(boldStartES, boldStart);\n        innerhtml = innerhtml.replace(boldEndES, boldEnd);\n    }\n\n    while (innerhtml.indexOf(\"&lt;i&gt;\") + innerhtml.indexOf(\"&lt;/i&gt;\") >= -1) {\n        // while these tags are found\n        innerhtml = innerhtml.replace(\"&lt;i&gt;\", \"<i>\");\n        innerhtml = innerhtml.replace(\"&lt;/i&gt;\", \"</i>\");\n    }\n    while (innerhtml.indexOf(\"&lt;span&gt;\") + innerhtml.indexOf(\"&lt;/span&gt;\") >= -1) {\n        // while these tags are found\n        innerhtml = innerhtml.replace(\"&lt;span&gt;\", \"<span>\");\n        innerhtml = innerhtml.replace(\"&lt;/span&gt;\", \"</span>\");\n    }\n    return innerhtml;\n}\n\n// =======================================================================\n// get url hash\n// http://stackoverflow.com/questions/1703552/encoding-of-window-location-hash\n// =======================================================================\nexport function getHashFromUrl(): string {\n    return window.location.href.substring(window.location.href.indexOf(\"#\")) || \"#\";\n}\n\nexport function getUrlParameters(): UrlParameters {\n    const urlParameters = parseUrlParameters(getHashFromUrl());\n    return urlParameters;\n}\n\nexport function parseUrlParameters(unescapedSearchUrl: string): UrlParameters {\n    // workaround for url ushells broken url escaping if special chars\n    // like [] are used in urls (like in app tiles with search filters).\n    // restriction of this workaround:\n    // - tiles with searchterms like the names of the parameters dont\n    //   work (for example a tile with searchterm \"top=\")\n    const oParametersLowerCased: UrlParameters = {};\n    const knownSearchUrlParameters = [\n        {\n            name: \"filter\",\n            pos: -1,\n            value: \"\",\n        },\n        {\n            name: \"top\",\n            pos: -1,\n            value: \"\",\n        },\n        {\n            name: \"datasource\",\n            pos: -1,\n            value: \"\",\n        },\n        {\n            name: \"searchterm\",\n            pos: -1,\n            value: \"\",\n        },\n        {\n            name: \"orderby\",\n            pos: -1,\n            value: \"\",\n        },\n        {\n            name: \"sortorder\",\n            pos: -1,\n            value: \"\",\n        },\n    ];\n    // find the parameters:\n    for (let i = 0; i < knownSearchUrlParameters.length; i++) {\n        knownSearchUrlParameters[i].pos = unescapedSearchUrl\n            .toLowerCase()\n            .indexOf(knownSearchUrlParameters[i].name + \"=\");\n    }\n    knownSearchUrlParameters.sort(function (a, b) {\n        return a.pos - b.pos;\n    });\n    // find the parameter boundaries:\n    for (let j = 0; j < knownSearchUrlParameters.length; j++) {\n        if (knownSearchUrlParameters[j].pos !== -1) {\n            if (knownSearchUrlParameters[j + 1] && knownSearchUrlParameters[j + 1].pos !== -1) {\n                knownSearchUrlParameters[j].value = unescapedSearchUrl.substring(\n                    knownSearchUrlParameters[j].pos,\n                    knownSearchUrlParameters[j + 1].pos\n                );\n            } else {\n                knownSearchUrlParameters[j].value = unescapedSearchUrl.substring(\n                    knownSearchUrlParameters[j].pos\n                );\n            }\n            // remove the parameter name and \"=\":\n            knownSearchUrlParameters[j].value = knownSearchUrlParameters[j].value.substring(\n                knownSearchUrlParameters[j].name.length + 1\n            );\n            if (\n                knownSearchUrlParameters[j].value.charAt(knownSearchUrlParameters[j].value.length - 1) === \"&\"\n            ) {\n                knownSearchUrlParameters[j].value = knownSearchUrlParameters[j].value.substring(\n                    0,\n                    knownSearchUrlParameters[j].value.length - 1\n                );\n            }\n            knownSearchUrlParameters[j].value = window.decodeURIComponent(knownSearchUrlParameters[j].value);\n            oParametersLowerCased[knownSearchUrlParameters[j].name] = knownSearchUrlParameters[j].value;\n        }\n    }\n    return oParametersLowerCased;\n}\n\n// =======================================================================\n// check if search app is running\n// =======================================================================\nexport function isSearchAppActive(): boolean {\n    if (getHashFromUrl().substr(1, 13) === \"Action-search\") {\n        return true;\n    }\n    return false;\n}\n\n// =======================================================================\n// Hasher\n// using window.hasher does not work because\n// hasher always use encodeURL for the whole hash but for example we need\n// - to encode '=' in a value (of name value pair)\n// but not the '=' separating name and value\n// =======================================================================\nexport const hasher = {\n    hash: null,\n\n    setHash: function (hash: string): void {\n        // compare using decodeURIComponent because encoding may slightly differ\n        // (Saved tiles scramble the URL. The URL of a saved tile is different\n        //  to the URL serialized by search app)\n        if (window.decodeURIComponent(getHashFromUrl()) !== window.decodeURIComponent(hash)) {\n            try {\n                window.location.hash = hash;\n                this.hash = hash;\n                // save hash for later comparison in hasher.hashChanged.\n                // This call of hasher.setHash triggers via the hash changed handler a call of hasher.hasChanged.\n                // hasher.hasChanged needs to return false in order to ignore hash changes caused by\n                // the search application itself. Therefore we save the hash for comparison in hasher.hasChanged.\n            } catch (error) {\n                // in IE url cannot be update if longer than 2083 chars -> show error message to the user\n                this.showUrlUpdateError(error);\n            }\n        } else {\n            // in case url does not change the current setHash call does not trigger the hash changed event.\n            // Therefore hashChanged (called from hash changed handler) is not called.\n            // Any subsequent call to hasher.hasChanged (triggered by URL changes)\n            // shall return true therefore we set hash to null\n            this.hash = null;\n        }\n    },\n\n    init: function (): void {\n        this.hash = getHashFromUrl();\n    },\n\n    reset: function (): void {\n        this.hash = null;\n    },\n\n    hasChanged: function (): boolean {\n        try {\n            return window.decodeURIComponent(this.hash) !== window.decodeURIComponent(getHashFromUrl());\n        } finally {\n            this.hash = null;\n            // always set hash to null: hasChanged returns only one times false.\n            // this way we can ignore hash changed events triggered by the search application itself.\n        }\n    },\n\n    showUrlUpdateError: function (): void {\n        // display error only one times\n        if (this.urlError) {\n            return;\n        }\n        this.urlError = true;\n\n        // show message box\n        const message = i18n.getText(\"searchUrlErrorMessage\");\n        MessageBox.warning(message, {\n            title: i18n.getText(\"searchUrlErrorTitle\"),\n            styleClass: \"sapUshellSearchMessageBox\", // selector for closePopovers\n        });\n    },\n};\n\n// =======================================================================\n// Subscribe the given event only once\n// =======================================================================\nconst idMap = {};\n\nexport function subscribeOnlyOnce(\n    id: string,\n    eventName: string,\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-function-type\n    callBack: Function,\n    selfControl: object\n): void {\n    if (idMap[id]) {\n        idMap[id].unsubscribe();\n    }\n    const wrapper = function () {\n        callBack.apply(selfControl);\n        EventBus.getInstance().unsubscribe(eventName, wrapper, selfControl);\n    };\n    EventBus.getInstance().subscribe(eventName, wrapper, selfControl);\n    idMap[id] = {\n        unsubscribe: function () {\n            EventBus.getInstance().unsubscribe(eventName, wrapper, selfControl);\n        },\n    };\n}\n\n// =======================================================================\n// check if element is displayed\n// =======================================================================\nfunction _isDisplayed(element) {\n    // element is DOM object\n    if (element && element.nodeType) {\n        // check if element is visible (not display: none and in DOM)\n        if (\n            element instanceof HTMLElement &&\n            element.offsetParent !== null &&\n            !!(element.offsetWidth || element.offsetHeight || element.getClientRects().length)\n        ) {\n            return true;\n        }\n    }\n\n    // element if SAPUI5 object\n    if (element?.getMetadata()?.getName()) {\n        if (element.getDomRef && element.getDomRef()) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\n// =======================================================================\n// Focus Handler\n// =======================================================================\n\nexport class SearchFocusHandler {\n    oSearchComposite: SearchCompositeControl;\n    oModel: SearchModel;\n    focusSetter?: number | string | NodeJS.Timeout;\n\n    constructor(oSearchComposite: SearchCompositeControl) {\n        this.oSearchComposite = oSearchComposite;\n    }\n\n    // get the controlDomRef to be focused\n    get2BeFocusedControlDomRef(): HTMLElement {\n        if (!this.oModel) {\n            this.oModel = this.oSearchComposite.getModelInternal() as SearchModel; // ToDo\n        }\n\n        let index = 0;\n        let control = null;\n        let controlDomRef = null;\n        let isListDisplayed = false;\n        let isTableDisplayed = false;\n        let isGridDisplayed = false;\n\n        if (this.oModel.getDataSource() !== this.oModel.appDataSource) {\n            // 1. mixed result list\n            if (this.oModel.getProperty(\"/boCount\") > 0 && this.oModel.getProperty(\"/appCount\") > 0) {\n                // 1.1 bos + apps\n                index = this.oModel.getProperty(\"/focusIndex\");\n                index = index > 0 ? index + 1 : index;\n                control = this.oSearchComposite.searchResultList.getItems()[index];\n                if (control && control.getDomRef) {\n                    controlDomRef = control.getDomRef();\n                }\n            } else if (\n                this.oModel.getProperty(\"/boCount\") > 0 &&\n                this.oModel.getProperty(\"/appCount\") === 0\n            ) {\n                // 1.2 only bos\n                index = this.oModel.getProperty(\"/focusIndex\");\n                isListDisplayed = this.oModel.getResultViewType() === \"searchResultList\";\n                isTableDisplayed = this.oModel.getResultViewType() === \"searchResultTable\";\n                isGridDisplayed = this.oModel.getResultViewType() === \"searchResultGrid\";\n                if (isListDisplayed) {\n                    // 1.2.1 list view\n                    control = this.oSearchComposite[\"searchResultList\"].getItems()[index];\n                } else if (isTableDisplayed) {\n                    // 1.2.2 table view\n                    control = this.oSearchComposite[\"searchResultTable\"].getItems()[index];\n                } else if (isGridDisplayed) {\n                    // 1.2.3 grid view\n                    if (this.oSearchComposite.searchResultGrid.getAggregation(\"items\")) {\n                        control = this.oSearchComposite.searchResultGrid.getAggregation(\"items\")[index];\n                    } else if (\n                        this.oSearchComposite.searchResultGrid[\"getContent\"] &&\n                        this.oSearchComposite.searchResultGrid[\"getContent\"]()\n                    ) {\n                        control = this.oSearchComposite.searchResultGrid[\"getContent\"]()[index];\n                    }\n                }\n                if (control && control.getDomRef) {\n                    controlDomRef = control.getDomRef();\n                }\n            } else if (\n                this.oModel.getProperty(\"/boCount\") === 0 &&\n                this.oModel.getProperty(\"/appCount\") > 0\n            ) {\n                // 1.3 only apps\n                control = this.oSearchComposite[\"searchResultList\"].getItems()[0];\n                if (_isDisplayed(control)) {\n                    // get the DOM ref and find the first element with tabindex or a button\n                    const domRef = control.getDomRef();\n                    if (domRef) {\n                        // looks into a tile and return the first focusable child element\n                        controlDomRef = domRef.querySelector(\"[tabindex], button\");\n                    }\n                }\n            }\n        } else {\n            // 2. pure apps result list (tile matrix)\n            const oTilesContainer = this.oSearchComposite[\"appSearchResult\"].getContent()[0];\n            if (oTilesContainer.getDomRef() === null) {\n                return null;\n            }\n            index = this.oModel.getProperty(\"/focusIndex\");\n            oTilesContainer[\"_oItemNavigation\"].setFocusedIndex(index);\n            controlDomRef = oTilesContainer.getDomRef(); // with new app search in grid container, just need set focus in tiles container\n        }\n\n        return controlDomRef;\n    }\n\n    // set focus\n    // ===================================================================\n    setFocus(): void {\n        // this method is called\n        // 1) after event allSearchFinished (see registration in Search.controller)\n        // 2) after event afterNavigate (see registration in searchshellhelper)\n        // 3) after event appComponentLoaded (see registration in searchshellhelper)\n\n        let retries = 20;\n\n        // method for setting the focus with periodic retry\n        const doSetFocus = function () {\n            this.focusSetter = null;\n\n            let controlDomRef = this.get2BeFocusedControlDomRef();\n\n            // this is a workaround to prevent first app tile and input share the same sapenter event\n            // need to fix in better way\n            if (retries === 20) {\n                controlDomRef = null;\n            }\n            if (\n                !controlDomRef || // condition 1\n                document.querySelectorAll(\".sapUshellSearchTileContainerDirty\").length > 0 || // condition 3\n                document.querySelectorAll(\".sapMBusyDialog\").length > 0\n            ) {\n                // condition 4\n                if (--retries) {\n                    this.focusSetter = setTimeout(doSetFocus.bind(this), 100);\n                }\n                return;\n            }\n\n            // condition 1:\n            // control and its domref do need to exist\n            // condition 2:\n            // no rendering process is running\n            // focus can only be set after ui5 rendering is finished because ui5 preserves the focus\n            // condition 3:\n            // loading dialog (app loading) is closed\n            // loading dialog restores old focus (using timeout 300ms) so we need to wait until loading dialog has finished\n            // condition 4:\n            // wait that app tile container has finished rendering\n            // app tile container has two rendering steps. First step is just for calculating number of tiles.\n            // condition 5:\n            // wait that buys indicators are finished\n\n            // set focus\n            controlDomRef.focus();\n\n            // automatic expand only the first result líst item\n            if (this.oModel.getProperty(\"/focusIndex\") === 0) {\n                const control = UI5Element.getElementById(controlDomRef.getAttribute(\"id\"));\n                if (control && control.getAggregation(\"content\") && control.getAggregation(\"content\")[0]) {\n                    const resultListItem = control.getAggregation(\"content\")[0] as SearchResultListItem;\n                    if (typeof resultListItem?.showDetails === \"function\") {\n                        resultListItem?.showDetails();\n                    }\n                }\n            }\n        };\n\n        // cancel any scheduled focusSetter\n        if (this.focusSetter) {\n            clearTimeout(this.focusSetter);\n            this.focusSetter = null;\n        }\n\n        // set focus\n        doSetFocus.bind(this)();\n    }\n}\n\n// =======================================================================\n// format integer\n// =======================================================================\nlet _integerShortFormatter: NumberFormat;\nlet _integerStandardFormatter: NumberFormat;\nconst oLocale = new Locale(Localization.getLanguageTag().toString());\nexport function formatInteger(value: number): string {\n    // lazy create integerShortFormatter\n    if (!_integerShortFormatter) {\n        _integerShortFormatter = NumberFormat.getIntegerInstance(\n            {\n                style: \"short\",\n                precision: 3,\n                groupingEnabled: true,\n            },\n            oLocale\n        );\n    }\n\n    // lazy create integerStandardFormatter\n    if (!_integerStandardFormatter) {\n        _integerStandardFormatter = NumberFormat.getIntegerInstance(\n            {\n                style: \"standard\",\n                precision: 3,\n                groupingEnabled: true,\n            },\n            oLocale\n        );\n    }\n\n    // 99950 is the first number (with precision 3 rounding) that will map to 100000; same as \"parseFloat((Math.abs(number)).toPrecision(3)) >= 100000\"\n    if (Math.abs(value) >= 99950) {\n        return _integerShortFormatter.format(value);\n    }\n    return _integerStandardFormatter.format(value);\n}\n\n// =======================================================================\n// format file size humanfriendly\n// =======================================================================\nlet _fileSizeFormatter: FileSizeFormat;\nexport function formatFileSize(value: number): string {\n    // lazy create _fileSizeFormatter\n    if (!_fileSizeFormatter) {\n        _fileSizeFormatter = FileSizeFormat.getInstance(\n            {\n                binaryFilesize: true,\n            },\n            oLocale\n        );\n    }\n\n    return _fileSizeFormatter.format(value);\n}\n\n/**\n * Adds a tooltip if the content is overflowing.\n * If the first <b> element is not visible,\n * it applies forward ellipsis truncation to the text before the first <b> element to ensure it is visible.\n * It also sets the title attribute of the element to the full text content.\n * If the content is not overflowing or truncated, no tooltip is set.\n * @param elementToBeChecked The DOM element to check for truncation or overflowing and set tooltip.\n */\nexport function calculateTooltipForwordEllipsis(elementToBeChecked: HTMLElement): void {\n    const text = elementToBeChecked.textContent || \"\";\n    // there could be nested layers of elements between <b> elements and elementToBeChecked.\n    // Find the target measure element, which is the direct parent of <b> elements\n    const targetMeasureElement = findChildWithClass(\n        elementToBeChecked,\n        [\"sapUshellSearchLink\", \"sapUshellSearchTextText\"],\n        [\"sapMLnkText\", \"sapMTextLineClamp\"] //sapMTextLineClamp span only occurs in multiline SearchText\n    );\n\n    // check whether content is overflowing\n    if (\n        !(\n            targetMeasureElement.offsetWidth < targetMeasureElement.scrollWidth ||\n            targetMeasureElement.offsetHeight < targetMeasureElement.scrollHeight\n        )\n    ) {\n        // Everything is fine, no tooltip needed\n        return;\n    } else {\n        // Content is overflowing, tooltip needed anyway\n        if (!elementToBeChecked.hasAttribute(\"title\") && !targetMeasureElement.hasAttribute(\"title\")) {\n            elementToBeChecked.setAttribute(\"title\", text);\n        }\n        // check if first highlighted text is available\n        const firstBElement = elementToBeChecked?.querySelector(\"b\");\n        // No highlighted text available\n        if (!firstBElement) {\n            return;\n        }\n        // Highlighted text is available\n        const isFirstBElementVisible = isElementVisible(firstBElement, targetMeasureElement);\n        // highlighted text is visible, no forward ellipsis needed\n        if (isFirstBElementVisible) {\n            return;\n        } else {\n            // highlighted text is not visible, forward ellipsis needed\n            applyForwardEllipsisTruncation(targetMeasureElement, firstBElement);\n        }\n    }\n}\n\n// apply forward ellipsis truncation\n// This function truncates the text before the first <b> element in the targetMeasureElement\n// until the first <b> element is visible, ensuring that the first <b> element\n// is always visible in the targetMeasureElement.\n// For performance optimization purposes, it uses a simplified binary search approach to find\n// the maximum text length that can be displayed before the first <b> element.\n// Sometimes minor inaccuracies can occur due to rounding issues, but in acceptable ranges.\nfunction applyForwardEllipsisTruncation(targetMeasureElement: HTMLElement, firstBElement: HTMLElement): void {\n    const iconSpan = targetMeasureElement.querySelector(\".sapUshellSearchTextIcon\") as HTMLElement;\n\n    const range = document.createRange();\n    if (iconSpan) {\n        range.setStartAfter(iconSpan);\n    } else {\n        range.setStartBefore(targetMeasureElement.firstChild);\n    }\n    range.setEndBefore(firstBElement);\n\n    const textBeforeFirstB = range.toString();\n\n    if (textBeforeFirstB.trim().length > 0) {\n        // preserve the original text for restoration and tooltip\n        // preserveElement(domref, classNameForwardEllipsis);\n\n        let truncatedText = textBeforeFirstB;\n        let isBElementVisible = false;\n\n        let end = textBeforeFirstB.length;\n\n        // binary search truncation\n        while (1 < end) {\n            const mid = Math.floor(end / 2);\n            // cut in the mid from beginning to the end\n            truncatedText = textBeforeFirstB.slice(-mid);\n\n            // temporarily add with ellipsis\n            const tempTextNode = document.createTextNode(\"... \" + truncatedText);\n            range.deleteContents();\n            range.insertNode(tempTextNode);\n\n            // check if the first <b> element is now visible\n            isBElementVisible = isElementVisible(firstBElement, targetMeasureElement);\n\n            if (isBElementVisible) {\n                return;\n            } else {\n                end = mid;\n            }\n        }\n\n        // fallback: cut off all the text before the first <b> element\n        if (!isBElementVisible) {\n            const newTextNode = document.createTextNode(\"... \");\n            range.deleteContents();\n            range.insertNode(newTextNode);\n        }\n    }\n}\nfunction isElementVisible(elementToBeMeasured: HTMLElement, parentElement: HTMLElement): boolean {\n    if (!elementToBeMeasured) {\n        return false;\n    }\n\n    // Get the bounding rectangle of the element\n    const elToBeMeasuredRect: DOMRect = elementToBeMeasured.getBoundingClientRect();\n\n    // Get the bounding rectangle of the parent container\n    const parentElRect: DOMRect = parentElement.getBoundingClientRect();\n\n    // Check if the element's rectangle is within the parent's rectangle\n    const isVisible =\n        elToBeMeasuredRect.top >= parentElRect.top &&\n        elToBeMeasuredRect.left >= parentElRect.left &&\n        elToBeMeasuredRect.bottom <= parentElRect.bottom &&\n        elToBeMeasuredRect.right <= parentElRect.right;\n\n    return isVisible;\n}\n\n/**\n * Utility function to find a child element with specific classes.\n * @param currentElement The parent element.\n * @param parentClasses Array of class names for the parent element as extra filter to avoid searching of irrelevant elements.\n * @param childClasses Array of class names for the child element to find.\n * @returns The child element if found, otherwise the parent element.\n */\nfunction findChildWithClass(\n    currentElement: HTMLElement,\n    parentClasses: string[],\n    childClasses: string[]\n): HTMLElement {\n    // check if currentElement has at least one of parentClasses\n    const hasAnyParentClass = parentClasses.some((cls) => currentElement.classList.contains(cls));\n    if (hasAnyParentClass) {\n        // find the first child with any of the childClasses\n        for (const childClass of childClasses) {\n            const found = currentElement.querySelector(`.${childClass}`) as HTMLElement;\n            if (found) {\n                return found;\n            }\n        }\n        return currentElement;\n    }\n    return currentElement;\n}\n\n// =======================================================================\n// convert promise to jQuery deferred\n// =======================================================================\nexport function convertPromiseTojQueryDeferred(promise: Promise<unknown>): JQueryDeferred<unknown> {\n    if (promise.finally) {\n        // promise has property \"finally\"\n        // is promise, need to convert\n        const deferred = jQuery.Deferred();\n        promise.then(\n            function () {\n                // eslint-disable-next-line\n                deferred.resolve.apply(deferred, arguments);\n            },\n            function () {\n                // eslint-disable-next-line\n                deferred.reject.apply(deferred, arguments);\n            }\n        );\n        return deferred;\n    } else {\n        // is deferred, don't convert\n        return promise as unknown as JQueryDeferred<unknown>;\n    }\n}\n\n// =======================================================================\n// convert jQuery to promise\n// =======================================================================\nexport function convertJQueryDeferredToPromise(deferred: JQueryDeferred<unknown>): Promise<unknown> {\n    if (deferred.always) {\n        // deferred has property \"always\"\n        // is deferred, need to convert\n        return new Promise(function (resolve, reject) {\n            deferred.then(resolve, reject);\n        });\n    } else {\n        // is promise, don't convert\n        return deferred as unknown as Promise<unknown>;\n    }\n}\n\n// =======================================================================\n// Async Module Require\n// return Promise\n// =======================================================================\nexport function requireUI5Modules(modules: Array<string>): Promise<Array<string>> {\n    return new Promise(function (resolve) {\n        sap.ui.require(modules, function (...args) {\n            resolve(Array.from(args));\n        });\n    });\n}\n\n// =======================================================================\n// check one array is subset of another\n// =======================================================================\nexport function isSubsetOf(subset: Array<string>, superset: Array<string>): boolean {\n    if (!Array.isArray(subset) || subset.length === 0) {\n        return false;\n    }\n    if (!Array.isArray(superset) || superset.length === 0) {\n        return false;\n    }\n\n    let valid = true;\n    for (let i = 0; i < subset.length; i++) {\n        if (!superset.includes(subset[i])) {\n            valid = false;\n            break;\n        }\n    }\n    return valid;\n}\n"],"mappings":"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","ignoreList":[]}