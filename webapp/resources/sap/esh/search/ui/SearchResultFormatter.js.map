{"version":3,"file":"SearchResultFormatter.js","names":["sap","ui","define","__SearchResultBaseFormatter","___sinaNexTS_sina_SearchResultSetItemAttribute","___sinaNexTS_sina_NavigationTarget","_interopRequireDefault","obj","__esModule","default","SearchResultBaseFormatter","SearchResultSetItemAttribute","NavigationTarget","SearchResultFormatter","constructor","model","super","this","format","searchResultSet","terms","options","suppressHighlightedValues","sina","layoutCache","formattedResultItems","resultItems","items","i","length","resultItem","formattedResultItem","aItemAttributes","z","detailAttributes","detailAttribute","attributeValue","defaultNavigationTarget","undefined","value","metadata","type","AttributeType","ImageBlob","trim","ImageUrl","imageUrl","imageFormat","toLowerCase","imageNavigation","GeoJson","geoJson","label","Group","attributeGroupAsAttribute","_formatAttributeGroup","push","Double","Integer","String","Date","Time","Timestamp","oItemAttribute","_formatSingleAttribute","key","keystatus","dataSource","dataSourceName","attributesMap","sinaItem","itemHierarchyNodePaths","hierarchyNodePaths","Array","isArray","hierarchyNodePath","titleAttributes","titleAttribute","formattedTitleAttribute","formattedTitle","title","isTitleHighlighted","whyfound","titleIconUrl","infoIconUrl","titleInfoIconUrl","tooltip","titleInfoIconTooltip","join","titleHighlighted","titleDescriptionAttributes","titleDescriptionAttribute","formattedTitleDescriptionAttribute","formattedTitleDescription","titleDescription","titleDescriptionLabel","isTitleDescriptionHighlighted","name","itemattributes","titleNavigation","text","navigationTargets","navigationObjects","j","navTarget","layoutCacheForItemType","id","customItemStyleClass","selected","selectionEnabled","expanded","additionalParameters","_formatResultForDocuments","_formatResultForNotes","positionInList","resultSetId","attributeGroup","attributes","attribute","startsWith","formattedAttr","iconUrl","sinaAttribute","isTitle","isSortable","displayOrder","usage","Detail","isHighlighted","isLongtext","privateGroupMetadata","_private","parentAttribute","childAttribute","attributeGroupMembership","_attribute","attributeNameInGroup","nameInGroup","_formattedAttribute","longtext","valueRaw","valueWithoutWhyfound","Object","keys","regularFormatting","isUnitOfMeasure","isCurrency","isDescription","parentAttributeValue","childAttributeValue","textArrangement","AttributeGroupTextArrangement","TextFirst","TextLast","TextOnly","_formatBasedOnGroupTemplate","template","valueFormatted","valueHighlighted","AttributeFormatType","MultilineText","LongText","valuePropertyName","regex","pos","match","exec","substring","index","attributeName","slice","lastIndex","keyFields","isDocumentConnector","isKey","sidClient","system","client","connectorName","titleUrl","suvlink","encodeURIComponent","navOptions","targetUrl","target","navigationTarget","sinaNext","createNavigationTarget","containsThumbnail","containsSuvFile"],"sources":["SearchResultFormatter.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\nimport SearchModel from \"sap/esh/search/ui/SearchModel\";\nimport SearchResultBaseFormatter from \"./SearchResultBaseFormatter\";\nimport { DataSource } from \"./sinaNexTS/sina/DataSource\";\nimport { SearchResultSet } from \"./sinaNexTS/sina/SearchResultSet\";\nimport { SearchResultSetItem } from \"./sinaNexTS/sina/SearchResultSetItem\";\nimport { SearchResultSetItemAttribute } from \"./sinaNexTS/sina/SearchResultSetItemAttribute\";\nimport { HierarchyNodePath } from \"./sinaNexTS/sina/HierarchyNodePath\";\nimport { NavigationTarget, NavigationTargetOptions } from \"./sinaNexTS/sina/NavigationTarget\";\n\nexport interface FormattedResultItem {\n    key?: string;\n    keystatus?: string;\n    dataSource?: DataSource;\n    dataSourceName?: string;\n    attributesMap?: any;\n    sinaItem?: SearchResultSetItem;\n    titleIconUrl?: string;\n    imageUrl?: string;\n    imageFormat?: string;\n    imageNavigation?: NavigationTarget;\n    geoJson?: { value: string; label: string };\n    title?: string;\n    titleHighlighted?: string;\n    isTitleHighlighted?: boolean;\n    titleInfoIconUrl?: string;\n    titleInfoIconTooltip?: string;\n    titleDescription?: string;\n    titleDescriptionLabel?: string;\n    isTitleDescriptionHighlighted?: boolean;\n    titleNavigation?: NavigationTarget;\n    itemattributes?: Array<FormattedResultItemAttribute>;\n    navigationObjects?: Array<NavigationTarget>;\n    layoutCache?: any;\n    additionalParameters?: FormattedResultItemAdditionalParameters;\n    selected?: boolean;\n    selectionEnabled?: boolean;\n    customItemStyleClass?: string;\n    expanded?: boolean;\n    positionInList?: number;\n    resultSetId?: string;\n    cells?: Array<any>;\n    hierarchyNodePath?: HierarchyNodePath;\n}\n\nexport interface FormattedResultItemAdditionalParameters {\n    isDocumentConnector?: boolean;\n    imageUrl?: string;\n    titleUrl?: string;\n    suvlink?: string;\n    containsThumbnail?: boolean;\n    containsSuvFile?: boolean;\n}\nexport interface FormattedResultItemAttribute {\n    name?: string;\n    valueRaw?: any;\n    sinaAttribute?: SearchResultSetItemAttribute; // used for spread sheet export\n    value?: any;\n    valueWithoutWhyfound?: string;\n    key?: string;\n    isTitle?: boolean; // used in table view\n    isSortable?: boolean; // used in sort dialog\n    displayOrder?: number;\n    whyfound?: boolean; // legacy naming, attribute is Highlighted, with <b> tag\n    defaultNavigationTarget?: NavigationTarget;\n    hidden?: boolean;\n    longtext?: string;\n    // attribute group\n    iconUrl?: string;\n    subAttributes?: Array<string>; // prepare for excel exporting: child columns for group attribute\n    tooltip?: string;\n}\n\nexport default class SearchResultFormatter extends SearchResultBaseFormatter {\n    constructor(model: SearchModel) {\n        super(model);\n        this.model = model;\n    }\n\n    format(searchResultSet: SearchResultSet, terms?: any, options?: any): Array<FormattedResultItem> {\n        options = options || {};\n        options.suppressHighlightedValues = options.suppressHighlightedValues || false;\n\n        const sina = searchResultSet.sina;\n        const layoutCache = {};\n        const formattedResultItems: Array<FormattedResultItem> = [];\n        const resultItems = searchResultSet.items;\n\n        for (let i = 0; i < resultItems.length; i++) {\n            const resultItem = resultItems[i];\n\n            const formattedResultItem: FormattedResultItem = {};\n            const aItemAttributes: FormattedResultItemAttribute[] = [];\n\n            for (let z = 0; z < resultItem.detailAttributes.length; z++) {\n                const detailAttribute = resultItem.detailAttributes[z];\n                let attributeValue = \"\";\n                let format = \"\";\n                let defaultNavigationTarget: NavigationTarget = undefined;\n                if (detailAttribute instanceof SearchResultSetItemAttribute) {\n                    attributeValue = detailAttribute.value;\n                    format = detailAttribute.metadata.format;\n                    defaultNavigationTarget = detailAttribute.defaultNavigationTarget;\n                }\n\n                switch (detailAttribute.metadata.type) {\n                    case sina.AttributeType.ImageBlob:\n                        if (attributeValue && attributeValue.trim().length > 0) {\n                            attributeValue = \"data:;base64,\" + attributeValue;\n                        }\n                        break;\n                    case sina.AttributeType.ImageUrl:\n                        formattedResultItem.imageUrl = attributeValue;\n                        formattedResultItem.imageFormat = format ? format.toLowerCase() : undefined;\n                        if (defaultNavigationTarget) {\n                            formattedResultItem.imageNavigation = defaultNavigationTarget;\n                        }\n                        break;\n                    case sina.AttributeType.GeoJson:\n                        formattedResultItem.geoJson = {\n                            value: attributeValue,\n                            label: /* resultItem.title || */ detailAttribute.label, // ToDo\n                        };\n                        break;\n                    case sina.AttributeType.Group: {\n                        const attributeGroupAsAttribute = this._formatAttributeGroup(\n                            detailAttribute,\n                            options\n                        );\n                        aItemAttributes.push(attributeGroupAsAttribute);\n                        break;\n                    }\n                    case sina.AttributeType.Double:\n                    case sina.AttributeType.Integer:\n                    case sina.AttributeType.String:\n                    case sina.AttributeType.Date:\n                    case sina.AttributeType.Time:\n                    case sina.AttributeType.Timestamp: {\n                        const oItemAttribute: FormattedResultItemAttribute = this._formatSingleAttribute(\n                            detailAttribute,\n                            options\n                        );\n                        aItemAttributes.push(oItemAttribute);\n                        break;\n                    }\n                }\n                // }\n            }\n\n            formattedResultItem.key = (resultItem as any).key; // ToDo, key, keystatus n.a.\n            formattedResultItem.keystatus = (resultItem as any).keystatus;\n\n            formattedResultItem.dataSource = resultItem.dataSource;\n            formattedResultItem.dataSourceName = resultItem.dataSource.label;\n\n            formattedResultItem.attributesMap = resultItem.attributesMap;\n            formattedResultItem.sinaItem = resultItem;\n\n            const itemHierarchyNodePaths = resultItem.hierarchyNodePaths;\n            if (Array.isArray(itemHierarchyNodePaths) === true && itemHierarchyNodePaths.length > 0) {\n                // Take the first NodePath even in multiple case\n                formattedResultItem.hierarchyNodePath = itemHierarchyNodePaths[0];\n            }\n\n            if (resultItem.titleAttributes) {\n                let titleAttribute, formattedTitleAttribute: FormattedResultItemAttribute, formattedTitle;\n                const title = [];\n                let isTitleHighlighted = false;\n                for (let z = 0; z < resultItem.titleAttributes.length; z++) {\n                    titleAttribute = resultItem.titleAttributes[z];\n                    if (titleAttribute.metadata.type === sina.AttributeType.Group) {\n                        formattedTitleAttribute = this._formatAttributeGroup(titleAttribute, options);\n                        isTitleHighlighted = isTitleHighlighted || formattedTitleAttribute.whyfound;\n                    } else if (titleAttribute.metadata.type === sina.AttributeType.ImageUrl) {\n                        formattedTitleAttribute = this._formatSingleAttribute(titleAttribute, options);\n                        formattedResultItem.titleIconUrl = titleAttribute.value;\n                        formattedTitleAttribute.value = \"\";\n                        isTitleHighlighted = isTitleHighlighted || false;\n                    } else {\n                        formattedTitleAttribute = this._formatSingleAttribute(titleAttribute, options);\n                        isTitleHighlighted = isTitleHighlighted || formattedTitleAttribute.whyfound;\n                    }\n                    if (titleAttribute.infoIconUrl) {\n                        formattedResultItem.titleInfoIconUrl = titleAttribute.infoIconUrl;\n                        if (titleAttribute.tooltip) {\n                            formattedResultItem.titleInfoIconTooltip = titleAttribute.tooltip;\n                        }\n                        formattedTitleAttribute.value = \"\";\n                        isTitleHighlighted = isTitleHighlighted || false;\n                    }\n                    formattedTitle = formattedTitleAttribute.value;\n                    title.push(formattedTitle);\n                }\n                formattedResultItem.title = title.join(\" \");\n                formattedResultItem.isTitleHighlighted = isTitleHighlighted;\n            } else {\n                formattedResultItem.title = options.suppressHighlightedValues\n                    ? (resultItem as any).title // ToDo\n                    : (resultItem as any).titleHighlighted; // ToDo\n                formattedResultItem.isTitleHighlighted = options.suppressHighlightedValues\n                    ? false // ToDo\n                    : true; // ToDo\n            }\n\n            if (resultItem.titleDescriptionAttributes && resultItem.titleDescriptionAttributes.length > 0) {\n                let titleDescriptionAttribute,\n                    formattedTitleDescriptionAttribute: FormattedResultItemAttribute,\n                    formattedTitleDescription;\n                const titleDescription = [];\n                const titleDescriptionLabel = [];\n                let isTitleDescriptionHighlighted = false;\n                for (let z = 0; z < resultItem.titleDescriptionAttributes.length; z++) {\n                    titleDescriptionAttribute = resultItem.titleDescriptionAttributes[z];\n                    if (titleDescriptionAttribute.metadata.type === sina.AttributeType.Group) {\n                        formattedTitleDescriptionAttribute = this._formatAttributeGroup(\n                            titleDescriptionAttribute,\n                            options\n                        );\n                        isTitleDescriptionHighlighted =\n                            isTitleDescriptionHighlighted || formattedTitleDescriptionAttribute.whyfound;\n                    } else {\n                        formattedTitleDescriptionAttribute = this._formatSingleAttribute(\n                            titleDescriptionAttribute,\n                            options\n                        );\n                        isTitleDescriptionHighlighted =\n                            isTitleDescriptionHighlighted || formattedTitleDescriptionAttribute.whyfound;\n                    }\n                    formattedTitleDescription = formattedTitleDescriptionAttribute.value;\n                    titleDescription.push(formattedTitleDescription);\n                    titleDescriptionLabel.push(formattedTitleDescriptionAttribute.name);\n                }\n                formattedResultItem.titleDescription = titleDescription.join(\" \");\n                formattedResultItem.titleDescriptionLabel = titleDescriptionLabel.join(\" \");\n                formattedResultItem.isTitleDescriptionHighlighted = isTitleDescriptionHighlighted;\n            }\n\n            formattedResultItem.itemattributes = aItemAttributes;\n\n            if (resultItem.defaultNavigationTarget) {\n                formattedResultItem.titleNavigation = resultItem.defaultNavigationTarget;\n                if (!formattedResultItem.title || formattedResultItem.title.length === 0) {\n                    formattedResultItem.title = resultItem.defaultNavigationTarget.text;\n                }\n            }\n\n            if (resultItem.navigationTargets && resultItem.navigationTargets.length > 0) {\n                formattedResultItem.navigationObjects = [];\n                for (let j = 0; j < resultItem.navigationTargets.length; j++) {\n                    const navTarget = resultItem.navigationTargets[j];\n                    formattedResultItem.navigationObjects.push(navTarget);\n                }\n            }\n\n            const layoutCacheForItemType = layoutCache[resultItem.dataSource.id] || {};\n            layoutCache[resultItem.dataSource.id] = layoutCacheForItemType;\n            formattedResultItem.layoutCache = layoutCacheForItemType;\n\n            formattedResultItem.customItemStyleClass = \"\";\n            formattedResultItem.selected = false;\n            formattedResultItem.selectionEnabled = true;\n            formattedResultItem.expanded = false;\n\n            const additionalParameters: FormattedResultItemAdditionalParameters = {};\n            this._formatResultForDocuments(resultItem, additionalParameters);\n            this._formatResultForNotes(resultItem, additionalParameters);\n            formattedResultItem.additionalParameters = additionalParameters;\n\n            formattedResultItem.positionInList = i;\n            formattedResultItem.resultSetId = searchResultSet.id;\n\n            formattedResultItems.push(formattedResultItem);\n        }\n\n        return formattedResultItems;\n    }\n\n    private _formatAttributeGroup(attributeGroup, options): FormattedResultItemAttribute {\n        // workaround for attribute icons which have been set via @ObjectModel.text.element\n        // TODO: clarify which attribute is the text to be shown and which contains the icon URL\n        if (\n            attributeGroup.attributes.length === 2 &&\n            typeof attributeGroup.attributes[1].attribute.value === \"string\" &&\n            attributeGroup.attributes[1].attribute.value.startsWith(\"sap-icon://\")\n        ) {\n            const formattedAttr = this._formatSingleAttribute(\n                attributeGroup.attributes[0].attribute,\n                options\n            );\n            formattedAttr.iconUrl = attributeGroup.attributes[1].attribute.value;\n            formattedAttr.key = attributeGroup.id;\n            formattedAttr.sinaAttribute = attributeGroup; // used for spread sheet export\n            formattedAttr.isTitle = false; // used in table view\n            formattedAttr.isSortable = attributeGroup.metadata.isSortable; // used in sort dialog\n            formattedAttr.displayOrder =\n                attributeGroup.metadata.usage.Detail && attributeGroup.metadata.usage.Detail.displayOrder;\n\n            // if (isLongtext) {\n            //     formattedAttr.longtext = attributeGroupAsAttribute.value;\n            // }\n            return formattedAttr;\n        }\n\n        const attributeGroupAsAttribute: FormattedResultItemAttribute = {};\n        const attributes = {};\n        attributeGroupAsAttribute.name = attributeGroup.label;\n        let isHighlighted = false;\n        let isLongtext = false;\n\n        const privateGroupMetadata = attributeGroup.metadata._private;\n        let parentAttribute, childAttribute;\n\n        for (let i = 0; i < attributeGroup.attributes.length; i++) {\n            const attributeGroupMembership = attributeGroup.attributes[i];\n            const _attribute = attributeGroupMembership.attribute;\n            const attributeNameInGroup = attributeGroupMembership.metadata.nameInGroup;\n\n            let _formattedAttribute: FormattedResultItemAttribute;\n            if (_attribute.metadata.type === _attribute.sina.AttributeType.Group) {\n                _formattedAttribute = this._formatAttributeGroup(_attribute, options);\n            } else {\n                _formattedAttribute = this._formatSingleAttribute(_attribute, options);\n            }\n\n            if (privateGroupMetadata) {\n                if (privateGroupMetadata.parentAttribute === _attribute.metadata) {\n                    parentAttribute = _formattedAttribute;\n                } else if (privateGroupMetadata.childAttribute === _attribute.metadata) {\n                    childAttribute = _formattedAttribute;\n                }\n            }\n\n            if (_formattedAttribute.value) {\n                attributes[attributeNameInGroup] = _formattedAttribute;\n                isHighlighted = isHighlighted || _formattedAttribute.whyfound;\n                isLongtext = isLongtext || _formattedAttribute.longtext !== undefined;\n            }\n        }\n\n        attributeGroupAsAttribute.value = \"\";\n        attributeGroupAsAttribute.valueRaw = undefined;\n        attributeGroupAsAttribute.valueWithoutWhyfound = \"\";\n        attributeGroupAsAttribute.whyfound = false;\n\n        if (Object.keys(attributes).length > 0) {\n            let regularFormatting = true;\n\n            if (\n                privateGroupMetadata &&\n                parentAttribute &&\n                childAttribute &&\n                (privateGroupMetadata.isUnitOfMeasure ||\n                    privateGroupMetadata.isCurrency ||\n                    privateGroupMetadata.isDescription)\n            ) {\n                let parentAttributeValue = parentAttribute.value;\n                let childAttributeValue = childAttribute.value;\n\n                if (typeof parentAttributeValue === \"string\" && parentAttributeValue.trim().length < 1) {\n                    parentAttributeValue = undefined;\n                }\n                if (typeof childAttributeValue === \"string\" && childAttributeValue.trim().length < 1) {\n                    childAttributeValue = undefined;\n                }\n\n                if (!(parentAttributeValue && childAttributeValue)) {\n                    if (privateGroupMetadata.isUnitOfMeasure || privateGroupMetadata.isCurrency) {\n                        if (parentAttributeValue && !childAttributeValue) {\n                            attributeGroupAsAttribute.value = parentAttribute.value;\n                            attributeGroupAsAttribute.valueRaw = parentAttribute.valueRaw;\n                            attributeGroupAsAttribute.valueWithoutWhyfound =\n                                parentAttribute.valueWithoutWhyfound;\n                            regularFormatting = false;\n                        }\n                    } else if (privateGroupMetadata.isDescription) {\n                        const textArrangement = privateGroupMetadata.textArrangement;\n                        const sina = attributeGroup.sina;\n\n                        if (textArrangement === sina.AttributeGroupTextArrangement.TextFirst) {\n                            if (!parentAttributeValue && childAttributeValue) {\n                                attributeGroupAsAttribute.value = childAttribute.value;\n                                attributeGroupAsAttribute.valueRaw = childAttribute.valueRaw;\n                                attributeGroupAsAttribute.valueWithoutWhyfound =\n                                    childAttribute.valueWithoutWhyfound;\n                                regularFormatting = false;\n                            }\n                        } else if (textArrangement === sina.AttributeGroupTextArrangement.TextLast) {\n                            if (parentAttributeValue && !childAttributeValue) {\n                                attributeGroupAsAttribute.value = parentAttribute.value;\n                                attributeGroupAsAttribute.valueRaw = parentAttribute.valueRaw;\n                                attributeGroupAsAttribute.valueWithoutWhyfound =\n                                    parentAttribute.valueWithoutWhyfound;\n                                regularFormatting = false;\n                            }\n                        } else if (textArrangement === sina.AttributeGroupTextArrangement.TextOnly) {\n                            if (!childAttributeValue) {\n                                regularFormatting = false;\n                            }\n                        }\n                    }\n                }\n            }\n\n            if (regularFormatting) {\n                attributeGroupAsAttribute.value = this._formatBasedOnGroupTemplate(\n                    attributeGroup.template,\n                    attributes,\n                    \"value\"\n                );\n                attributeGroupAsAttribute.valueRaw = this._formatBasedOnGroupTemplate(\n                    attributeGroup.template,\n                    attributes,\n                    \"valueRaw\"\n                );\n                attributeGroupAsAttribute.valueWithoutWhyfound = this._formatBasedOnGroupTemplate(\n                    attributeGroup.template,\n                    attributes,\n                    \"valueWithoutWhyfound\"\n                );\n            }\n\n            attributeGroupAsAttribute.whyfound = isHighlighted;\n        }\n\n        attributeGroupAsAttribute.key = attributeGroup.id;\n        attributeGroupAsAttribute.sinaAttribute = attributeGroup; // used for spread sheet export\n        attributeGroupAsAttribute.isTitle = false; // used in table view\n        attributeGroupAsAttribute.isSortable = attributeGroup.metadata.isSortable; // used in sort dialog\n        attributeGroupAsAttribute.displayOrder =\n            attributeGroup.metadata.usage.Detail && attributeGroup.metadata.usage.Detail.displayOrder;\n\n        if (isLongtext) {\n            attributeGroupAsAttribute.longtext = attributeGroupAsAttribute.value;\n        }\n\n        if (!(attributeGroupAsAttribute.defaultNavigationTarget instanceof NavigationTarget)) {\n            if (parentAttribute?.defaultNavigationTarget instanceof NavigationTarget) {\n                attributeGroupAsAttribute.defaultNavigationTarget = parentAttribute.defaultNavigationTarget;\n            } else if (childAttribute?.defaultNavigationTarget instanceof NavigationTarget) {\n                attributeGroupAsAttribute.defaultNavigationTarget = childAttribute.defaultNavigationTarget;\n            }\n        }\n\n        if (parentAttribute?.tooltip) {\n            attributeGroupAsAttribute.tooltip = parentAttribute.tooltip;\n        } else if (childAttribute?.tooltip) {\n            attributeGroupAsAttribute.tooltip = childAttribute.tooltip;\n        }\n\n        if (!attributeGroupAsAttribute.iconUrl) {\n            if (parentAttribute?.iconUrl) {\n                attributeGroupAsAttribute.iconUrl = parentAttribute.iconUrl;\n            } else if (childAttribute?.iconUrl) {\n                attributeGroupAsAttribute.iconUrl = childAttribute.iconUrl;\n            }\n        }\n        return attributeGroupAsAttribute;\n    }\n\n    private _formatSingleAttribute(detailAttribute, options): FormattedResultItemAttribute {\n        const oItemAttribute: FormattedResultItemAttribute = {};\n        const sina = detailAttribute.sina;\n\n        oItemAttribute.name = detailAttribute.label;\n        oItemAttribute.valueRaw = detailAttribute.value;\n        oItemAttribute.value = options.suppressHighlightedValues\n            ? detailAttribute.valueFormatted\n            : detailAttribute.valueHighlighted;\n        oItemAttribute.valueWithoutWhyfound = detailAttribute.valueFormatted; //result[propDisplay].valueWithoutWhyfound;\n\n        // if (detailAttribute.isHighlighted && detailAttribute.metadata.type.toLowerCase() === \"longtext\") {\n        //     // mix snippet into longtext values\n        //     var valueHighlighted = detailAttribute.valueHighlighted;\n        //     valueHighlighted = valueHighlighted.replace(/(^[.][.][.])|([.][.][.]$)/, \"\").trim();\n        //     var valueUnHighlighted = valueHighlighted.replace(/[<]([/])?b[>]/g, \"\");\n        //     oItemAttribute.value = detailAttribute.valueFormatted.replace(valueUnHighlighted, valueHighlighted);\n        // }\n\n        oItemAttribute.key = detailAttribute.id;\n        oItemAttribute.sinaAttribute = detailAttribute; // used for spread sheet export\n        oItemAttribute.isTitle = false; // used in table view\n        oItemAttribute.isSortable = detailAttribute.metadata.isSortable; // used in sort dialog\n        oItemAttribute.displayOrder =\n            detailAttribute.metadata.usage.Detail && detailAttribute.metadata.usage.Detail.displayOrder;\n        oItemAttribute.whyfound = detailAttribute.isHighlighted;\n        if (detailAttribute.defaultNavigationTarget instanceof NavigationTarget) {\n            oItemAttribute.defaultNavigationTarget = detailAttribute.defaultNavigationTarget;\n        }\n\n        if (typeof detailAttribute.tooltip === \"string\" && detailAttribute.tooltip.length > 0) {\n            oItemAttribute.tooltip = detailAttribute.tooltip;\n        }\n        if (\n            typeof detailAttribute.iconUrl === \"string\" &&\n            detailAttribute.iconUrl.length > 0 &&\n            detailAttribute.iconUrl.startsWith(\"sap-icon://\")\n        ) {\n            oItemAttribute.iconUrl = detailAttribute.iconUrl;\n        }\n\n        if (\n            detailAttribute.metadata.format &&\n            (detailAttribute.metadata.format === sina.AttributeFormatType.MultilineText ||\n                detailAttribute.metadata.format === sina.AttributeFormatType.LongText)\n        ) {\n            oItemAttribute.longtext = detailAttribute.valueHighlighted;\n        }\n\n        return oItemAttribute;\n    }\n\n    private _formatBasedOnGroupTemplate(template: string, attributes, valuePropertyName: string): string {\n        if (!(template && attributes && valuePropertyName)) {\n            return \"\";\n        }\n        const regex = /{\\w+}/gi;\n        let value = \"\";\n        let pos = 0;\n        let match;\n        while ((match = regex.exec(template)) !== null) {\n            value += template.substring(pos, match.index);\n            const attributeName = match[0].slice(1, -1);\n            value += (attributes[attributeName] && attributes[attributeName][valuePropertyName]) || \"\";\n            pos = regex.lastIndex;\n        }\n        value += template.substring(pos);\n        return value;\n    }\n\n    private _formatResultForDocuments(\n        resultItem,\n        additionalParameters: FormattedResultItemAdditionalParameters\n    ): void {\n        let keyFields = \"\";\n        additionalParameters.isDocumentConnector = false;\n\n        let detailAttribute;\n        for (let j = 0; j < resultItem.detailAttributes.length; j++) {\n            detailAttribute = resultItem.detailAttributes[j];\n\n            if (detailAttribute.metadata.id === \"FILE_PROPERTY\") {\n                additionalParameters.isDocumentConnector = true;\n            }\n\n            if (detailAttribute.metadata.isKey === true) {\n                if (keyFields.length > 0) {\n                    keyFields += \";\";\n                }\n                keyFields = keyFields + detailAttribute.metadata.id + \"=\" + detailAttribute.value; // encodeURIComponent(result[prop].valueRaw);\n            }\n        }\n\n        // fileloader\n        if (additionalParameters.isDocumentConnector === true) {\n            const sidClient =\n                \";o=sid(\" + resultItem.dataSource.system + \".\" + resultItem.dataSource.client + \")\";\n            const connectorName = resultItem.dataSource.id;\n            additionalParameters.imageUrl =\n                \"/sap/opu/odata/SAP/ESH_SEARCH_SRV\" +\n                sidClient +\n                \"/FileLoaderFiles(ConnectorId='\" +\n                connectorName +\n                \"',FileType='ThumbNail',SelectionParameters='\" +\n                keyFields +\n                \"')/$value\";\n            additionalParameters.titleUrl =\n                \"/sap/opu/odata/SAP/ESH_SEARCH_SRV\" +\n                sidClient +\n                \"/FileLoaderFiles(ConnectorId='\" +\n                connectorName +\n                \"',FileType='BinaryContent',SelectionParameters='\" +\n                keyFields +\n                \"')/$value\";\n            const suvlink =\n                \"/sap/opu/odata/SAP/ESH_SEARCH_SRV\" +\n                sidClient +\n                \"/FileLoaderFiles(ConnectorId='\" +\n                connectorName +\n                \"',FileType='SUVFile',SelectionParameters='\" +\n                keyFields +\n                \"')/$value\";\n            additionalParameters.suvlink =\n                \"/sap/bc/ui5_ui5/ui2/ushell/resources/sap/fileviewer/viewer/web/viewer.html?file=\" +\n                encodeURIComponent(suvlink);\n\n            if (!resultItem.navigationObjects) {\n                resultItem.navigationObjects = [];\n            }\n            const navOptions: NavigationTargetOptions = {\n                text: \"Show Document\",\n                targetUrl: additionalParameters.suvlink,\n                target: \"_blank\",\n            };\n            const navigationTarget = this.model.sinaNext.createNavigationTarget(navOptions);\n            resultItem.navigationObjects.push(navigationTarget);\n\n            for (let j = 0; j < resultItem.detailAttributes.length; j++) {\n                detailAttribute = resultItem.detailAttributes[j];\n                if (detailAttribute.id === \"PHIO_ID_THUMBNAIL\" && detailAttribute.value) {\n                    additionalParameters.containsThumbnail = true;\n                }\n                if (detailAttribute.id === \"PHIO_ID_SUV\" && detailAttribute.value) {\n                    additionalParameters.containsSuvFile = true;\n                }\n            }\n        }\n    }\n\n    _formatResultForNotes(\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        resultItem: SearchResultSetItem,\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        additionalParameters: FormattedResultItemAdditionalParameters\n    ): void {\n        //\n    }\n}\n"],"mappings":"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","ignoreList":[]}