{"version":3,"file":"SearchFacetDialogModel-dbg.js","names":["sap","ui","define","__i18n","MessageBox","__SearchModel","sap_ui_core_library","__SearchHierarchyDynamicFacet","___SearchFacetDialogHelperDynamicHierarchy","_interopRequireDefault","obj","__esModule","default","i18n","SearchModel","TextDirection","SearchHierarchyDynamicFacet","createFilterFacetItemForDynamicHierarchy","SearchFacetDialogModel","aFilters","chartQuery","searchModel","constructor","settings","configuration","config","prepareFacetList","metaData","getDataSource","setProperty","oFacetFormatter","getDialogFacetsFromMetaData","initialFillFiltersForDynamicHierarchyFacets","filter","getProperty","facets","facet","conditions","rootCondition","getAttributeConditions","attributeId","condition","simpleCondition","facetItem","push","facetDialogSingleCall","properties","dimension","sAttribute","top","sAttributeLimit","setNlq","isNlqActive","getResultSetAsync","then","resultSet","oFacet","bInitialFilters","getDialogFacetsFromChartQuery","sBindingPath","items","facetTotalCount","error","errorTitle","getText","errorText","message","title","actions","Action","OK","onClose","styleClass","initialFocus","textDirection","Inherit","resetChartQueryFilterConditions","resetConditions","nonFilterByConditions","getStaticHierarchyFilterConditions","length","nonFilterByCondition","autoInsertCondition","hasFilterCondition","filterCondition","i","equals","hasFilter","item","addFilter","removeFilter","splice","changeFilterAdvaced","bAdvanced","advanced","addFilterCondition","getAttributeDataType","dataType","matchingStrategy","sinaNext","MatchingStrategy","Text","destroy"],"sources":["SearchFacetDialogModel.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\nimport i18n from \"./i18n\";\nimport MessageBox from \"sap/m/MessageBox\";\nimport SearchModel from \"./SearchModel\";\nimport { TextDirection } from \"sap/ui/core/library\";\nimport { Filter } from \"./sinaNexTS/sina/Filter\";\nimport SearchHierarchyDynamicFacet from \"./hierarchydynamic/SearchHierarchyDynamicFacet\";\nimport { SimpleCondition } from \"./sinaNexTS/sina/SimpleCondition\";\nimport { createFilterFacetItemForDynamicHierarchy } from \"./SearchFacetDialogHelperDynamicHierarchy\";\nimport FacetItem from \"./FacetItem\";\nimport { ChartQuery } from \"./sinaNexTS/sina/ChartQuery\";\nimport { ChartResultSet } from \"./sinaNexTS/sina/ChartResultSet\";\nimport Facet from \"./Facet\";\nimport { ComplexCondition } from \"./sinaNexTS/sina/ComplexCondition\";\n\nexport interface $SearchFacetDialogModelSettings {\n    searchModel: SearchModel;\n}\n\nexport default class SearchFacetDialogModel extends SearchModel {\n    aFilters: Array<FacetItem>;\n    chartQuery: ChartQuery;\n    searchModel: SearchModel;\n\n    constructor(settings: $SearchFacetDialogModelSettings) {\n        super({\n            searchModel: settings.searchModel,\n            configuration: settings.searchModel.config,\n        });\n        this.searchModel = settings.searchModel;\n        this.aFilters = [];\n    }\n\n    prepareFacetList(): void {\n        const metaData = this.getDataSource();\n        this.setProperty(\"/facetDialog\", this.oFacetFormatter.getDialogFacetsFromMetaData(metaData, this));\n        this.initialFillFiltersForDynamicHierarchyFacets();\n    }\n\n    initialFillFiltersForDynamicHierarchyFacets() {\n        const filter = this.getProperty(\"/uiFilter\") as Filter;\n        const facets = this.getProperty(\"/facetDialog\");\n        for (const facet of facets) {\n            if (!(facet instanceof SearchHierarchyDynamicFacet)) {\n                continue;\n            }\n            const conditions = (filter.rootCondition as ComplexCondition).getAttributeConditions(\n                facet.attributeId\n            );\n            for (const condition of conditions) {\n                const simpleCondition = condition as SimpleCondition;\n                const facetItem = createFilterFacetItemForDynamicHierarchy(facet, simpleCondition);\n                this.aFilters.push(facetItem);\n            }\n        }\n    }\n\n    // properties: sAttribute, sBindingPath\n    facetDialogSingleCall(properties: {\n        sAttribute: string;\n        sAttributeLimit: number;\n        sBindingPath: string;\n        bInitialFilters?: boolean;\n    }): Promise<void> {\n        this.chartQuery.dimension = properties.sAttribute;\n        this.chartQuery.top = properties.sAttributeLimit;\n        this.chartQuery.setNlq(this.searchModel.isNlqActive());\n\n        return this.chartQuery.getResultSetAsync().then(\n            (resultSet: ChartResultSet) => {\n                let oFacet: Facet;\n                if (properties.bInitialFilters) {\n                    oFacet = this.oFacetFormatter.getDialogFacetsFromChartQuery(\n                        resultSet,\n                        this,\n                        this.chartQuery.dimension\n                    );\n                } else {\n                    oFacet = this.oFacetFormatter.getDialogFacetsFromChartQuery(\n                        resultSet,\n                        this,\n                        this.chartQuery.dimension,\n                        this.aFilters\n                    );\n                }\n                this.setProperty(properties.sBindingPath + \"/items\", oFacet.items);\n                this.setProperty(properties.sBindingPath + \"/items\", oFacet.items);\n                if (typeof resultSet?.facetTotalCount === \"number\") {\n                    this.setProperty(properties.sBindingPath + \"/facetTotalCount\", resultSet.facetTotalCount);\n                }\n            },\n            (error: Error) => {\n                const errorTitle = i18n.getText(\"searchError\");\n                const errorText = error.message;\n                MessageBox.error(errorText, {\n                    title: errorTitle,\n                    actions: MessageBox.Action.OK,\n                    onClose: null,\n                    styleClass: \"sapUshellSearchMessageBox\", // selector for closePopovers\n                    initialFocus: null,\n                    textDirection: TextDirection.Inherit,\n                });\n            }\n        );\n    }\n\n    resetChartQueryFilterConditions(): void {\n        if (this.chartQuery) {\n            this.chartQuery.resetConditions();\n        }\n        // add static hierachy facets\n        const nonFilterByConditions = this.getStaticHierarchyFilterConditions();\n        if (nonFilterByConditions.length > 0) {\n            for (const nonFilterByCondition of nonFilterByConditions) {\n                this.chartQuery.autoInsertCondition(nonFilterByCondition);\n            }\n        }\n    }\n\n    hasFilterCondition(filterCondition): boolean {\n        for (let i = 0; i < this.aFilters.length; i++) {\n            if (\n                this.aFilters[i].filterCondition.equals &&\n                this.aFilters[i].filterCondition.equals(filterCondition)\n            ) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    hasFilter(item): boolean {\n        const filterCondition = item.filterCondition;\n        return this.hasFilterCondition(filterCondition);\n    }\n\n    addFilter(item: FacetItem): void {\n        if (!this.hasFilter(item)) {\n            this.aFilters.push(item);\n        }\n    }\n\n    removeFilter(item: FacetItem): void {\n        const filterCondition = item.filterCondition;\n        for (let i = 0; i < this.aFilters.length; i++) {\n            if (\n                this.aFilters[i].filterCondition.equals &&\n                this.aFilters[i].filterCondition.equals(filterCondition)\n            ) {\n                this.aFilters.splice(i, 1);\n                return;\n            }\n        }\n    }\n\n    changeFilterAdvaced(item, bAdvanced: boolean): void {\n        const filterCondition = item.filterCondition;\n        for (let i = 0; i < this.aFilters.length; i++) {\n            if (\n                this.aFilters[i].filterCondition.equals &&\n                this.aFilters[i].filterCondition.equals(filterCondition)\n            ) {\n                this.aFilters[i].advanced = bAdvanced;\n                return;\n            }\n        }\n    }\n\n    addFilterCondition(filterCondition): void {\n        this.chartQuery.filter.autoInsertCondition(filterCondition);\n    }\n\n    // determinate the attribute list data type\n    getAttributeDataType(facet): string {\n        switch (facet.dataType) {\n            case \"Integer\":\n                return \"integer\";\n            case \"Double\":\n                return \"number\";\n            case \"Timestamp\":\n                return \"timestamp\";\n            case \"Date\":\n                return \"date\";\n            case \"String\":\n                if (facet.matchingStrategy === this.sinaNext.MatchingStrategy.Text) {\n                    return \"text\";\n                }\n                return \"string\";\n            default:\n                return \"string\";\n        }\n    }\n\n    destroy(): void {\n        super.destroy();\n        this.oFacetFormatter.destroy();\n    }\n}\n"],"mappings":"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","ignoreList":[]}