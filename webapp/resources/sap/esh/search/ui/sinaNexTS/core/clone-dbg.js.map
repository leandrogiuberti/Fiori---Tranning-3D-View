{"version":3,"file":"clone-dbg.js","names":["sap","ui","define","Type","CloneBuffer","cloneBuffer","constructor","put","object","clonedObject","push","get","cloneBufferEntry","find","bufferEntry","undefined","CloneService","config","classConfigCache","buffer","classes","getType","obj","Primitive","Array","isArray","List","Object","clone","internalClone","cloneList","cloneObject","clonePrimitive","clonedList","element","isCloneableObject","clonedObj","classConfig","getClassConfig","cloneFunction","useOriginalObject","property","isCloneableProperty","class","properties","indexOf","__exports","__esModule"],"sources":["clone.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\ntype ConstructorFunction = new (...args: unknown[]) => unknown;\n\nexport interface CloneClassConfig {\n    class: ConstructorFunction;\n    properties?: Array<string>;\n    useOriginalObject?: boolean; // use original instance (do not clone)\n    cloneFunction?: (obj: unknown) => unknown; // custom function to implement cloning an object (needed to clone functions which internally need non-cloned properties)\n}\nexport interface CloneConfig {\n    classes: Array<CloneClassConfig>;\n}\n\nenum Type {\n    Primitive = \"Primitive\",\n    List = \"List\",\n    Object = \"Object\",\n}\n\ninterface CloneBufferEntry {\n    object: unknown;\n    clonedObject: unknown;\n}\n\nclass CloneBuffer {\n    cloneBuffer: Array<CloneBufferEntry>;\n    constructor() {\n        this.cloneBuffer = [];\n    }\n    put(object: unknown, clonedObject: unknown) {\n        this.cloneBuffer.push({ object: object, clonedObject: clonedObject });\n    }\n    get(object: unknown) {\n        const cloneBufferEntry = this.cloneBuffer.find((bufferEntry) => bufferEntry.object === object);\n        if (!cloneBufferEntry) {\n            return undefined;\n        }\n        return cloneBufferEntry.clonedObject;\n    }\n}\n\nexport class CloneService {\n    config: CloneConfig;\n    classConfigCache: CloneClassConfig;\n    buffer: CloneBuffer;\n    constructor(config?: CloneConfig) {\n        this.config = config ?? { classes: [] };\n    }\n    getType(obj: unknown): Type {\n        if (\n            typeof obj === \"string\" ||\n            typeof obj === \"number\" ||\n            typeof obj === \"boolean\" ||\n            typeof obj === \"function\" ||\n            typeof obj === \"undefined\"\n        ) {\n            return Type.Primitive;\n        }\n        if (typeof obj == \"object\") {\n            if (Array.isArray(obj)) {\n                return Type.List;\n            } else {\n                return Type.Object;\n            }\n        }\n        throw `Program error: Clone utitliy does not support type ${typeof obj}`;\n    }\n    clone(obj: unknown) {\n        this.buffer = new CloneBuffer();\n        return this.internalClone(obj);\n    }\n    internalClone(obj: unknown) {\n        switch (this.getType(obj)) {\n            case Type.List:\n                return this.cloneList(obj as Array<unknown>);\n            case Type.Object:\n                return this.cloneObject(obj as { [key: string]: unknown });\n            case Type.Primitive:\n                return this.clonePrimitive(obj);\n        }\n    }\n    cloneList(obj: Array<unknown>): Array<unknown> {\n        // check buffer for list\n        let clonedList = this.buffer.get(obj) as Array<unknown>;\n        if (clonedList) {\n            return clonedList;\n        }\n        // create new list\n        clonedList = [];\n        this.buffer.put(obj, clonedList);\n        // clone list entries\n        for (const element of obj) {\n            if (!this.isCloneableObject(element)) {\n                continue;\n            }\n            clonedList.push(this.internalClone(element));\n        }\n        return clonedList;\n    }\n    cloneObject(obj: { [key: string]: unknown }): unknown {\n        // check buffer for object\n        let clonedObj = this.buffer.get(obj);\n        if (clonedObj) {\n            return clonedObj;\n        }\n        const classConfig = this.getClassConfig(obj);\n        // use custome clone function\n        if (classConfig?.cloneFunction) {\n            return classConfig.cloneFunction(obj);\n        }\n        // use original object (do not clone, use object as it is)\n        if (classConfig?.useOriginalObject) {\n            return obj;\n        }\n\n        // create new object\n        clonedObj = {};\n        this.buffer.put(obj, clonedObj);\n        // clone object properties\n        for (const property in obj) {\n            if (!this.isCloneableProperty(obj, property)) {\n                continue;\n            }\n            clonedObj[property] = this.internalClone(obj[property]);\n        }\n        return clonedObj;\n    }\n    clonePrimitive(obj: unknown): unknown {\n        return obj;\n    }\n    getClassConfig(obj: unknown): CloneClassConfig {\n        if (this.classConfigCache && obj instanceof this.classConfigCache.class) {\n            return this.classConfigCache;\n        }\n        this.classConfigCache = this.config.classes.find((classConfig) => obj instanceof classConfig.class);\n        return this.classConfigCache;\n    }\n    isCloneableObject(obj: unknown): boolean {\n        if (obj?.constructor === Object) {\n            return true; // plain objects\n        }\n        const classConfig = this.getClassConfig(obj);\n        if (!classConfig) {\n            return false;\n        }\n        return true;\n    }\n    isCloneableProperty(obj: unknown, property: string): boolean {\n        if (obj?.constructor === Object) {\n            return true; // plain objects\n        }\n        const classConfig = this.getClassConfig(obj);\n        if (!classConfig) {\n            return false;\n        }\n        return classConfig.properties.indexOf(property) >= 0;\n    }\n}\n"],"mappings":"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","ignoreList":[]}