/*!
 * SAPUI5
 * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.
 * 
 */
sap.ui.define(["./AjaxBaseClient","./Log","./ajax","./errors"],function(e,t,r,s){"use strict";function o(e){return new Promise(function(t,r){sap.ui.require([e],function(r){if(!(r&&r.__esModule)){r=r===null||!(typeof r==="object"&&e.endsWith("/library"))?{default:r}:r;Object.defineProperty(r,"__esModule",{value:true})}t(r)},function(e){r(e)})})}const a=e["AjaxBaseClient"];const n=t["Log"];const i=r["applyResponseFormattersAndUpdateJSON"];const d=s["InternalSinaError"];var p=function(e){e["NONE"]="none";e["RECORD"]="record";e["REPLAY"]="replay";return e}(p||{});class c extends a{records;recordOptions;replayResponseFormatters=[];constructor(e){super(e);this.log=new n("ajax client");this.recordOptions={headers:e.recordingHeaders,mode:e.recordingMode??p.NONE,path:e.recordingPath,requestNormalization:e.requestNormalization||this.defaultRequestNormalization};if(typeof window!=="undefined"&&this.recordOptions.mode!==p.NONE){throw new d({message:"Record/Replay is only supported on Node.js"})}this.records={};this.authorization=undefined;if(e.authorization){this.authorization={user:e.authorization.user,password:e.authorization.password}}this.replayResponseFormatters=e.replayResponseFormatters??[]}async loadRecords(){if(this.recordOptions?.mode===p.REPLAY&&this.recordOptions?.path){const e=await o("node:fs");this.records=JSON.parse(e.readFileSync(this.recordOptions.path).toString())}}createUrlMatchingReplayResponseFormatter(e,t){const r=(r,s)=>{if(r.url.indexOf(e)!==0){return s}return t(r,s)};this.addReplayResponseFormatter(r);return{delete:()=>this.removeReplayResponseFormatter(r)}}addReplayResponseFormatter(e){this.replayResponseFormatters.push(e)}removeReplayResponseFormatter(e){const t=this.replayResponseFormatters.indexOf(e);if(t>=0){this.replayResponseFormatters.splice(t)}}applyReplayResponseFormatters(e,t){return i(e,t,this.replayResponseFormatters)}async requestInternal(e){if(this.recordOptions.mode==="replay"){let t=await this.replay(e);t=this.applyReplayResponseFormatters(e,t);return t}const t=await super.requestInternal(e);if(this.recordOptions.mode==="record"){await this.record(e,t)}return t}normalizeRequestData(e){if(!e){return{data:"",notToRecord:false}}const t=this.recordOptions.requestNormalization(JSON.parse(e));if(typeof t==="object"&&t["NotToRecord"]){return{data:"",notToRecord:true}}return{data:JSON.stringify(t),notToRecord:false}}calculateKey(e){const t=this.normalizeRequestData(e.data);if(t.notToRecord){return}return e.url+t.data}async record(e,t){const r=this.calculateKey(e);t=JSON.parse(JSON.stringify(t));delete t.dataJSON;this.records[r]=t;await this.saveRecording(this.recordOptions.path,this.records)}async replay(e){const t=this.calculateKey(e);let r=JSON.parse(JSON.stringify(this.records[t]));if(!r){throw new d({message:"No recording found for request '"+t+"' in file "+this.recordOptions.path})}r=this.supportDeprecatedRecording(r);try{r.dataJSON=JSON.parse(r.data)}catch(e){this.log.warn("Could not parse response data as JSON: "+r?.data+" ("+e+")")}return r}supportDeprecatedRecording(e){if(e.statusText){return e}if(typeof e==="object"){return{status:200,statusText:"OK",headers:{},data:JSON.stringify(e)}}else{return{status:200,statusText:"OK",headers:{},data:e}}}async saveRecording(e,t){const r=await o("node:fs");return new Promise((s,o)=>{r.writeFile(e,JSON.stringify(t,null,4),"utf8",e=>{if(e){o(e)}else{s()}})})}defaultRequestNormalization(e){if(e===null){return""}if(typeof e==="object"&&Object.prototype.hasOwnProperty.call(e,"SessionID")){delete e.SessionID}if(typeof e==="object"&&Object.prototype.hasOwnProperty.call(e,"SessionTimestamp")){delete e.SessionTimestamp}return e}}var l={__esModule:true};l.RecordingMode=p;l.AjaxClient=c;return l});
//# sourceMappingURL=AjaxClient.js.map