{"version":3,"file":"core.js","names":["sap","ui","define","object","prototype","TmpFunction","extend","o1","o2","key","firstCharToUpper","text","removeUnderscore","slice","toUpperCase","isList","obj","Object","toString","call","isObject","isEmptyObject","prop","hasOwnProperty","JSON","stringify","isFunction","isString","isSimple","equals","ordered","_equalsList","_equalsObject","l1","l2","undefined","length","i","matched","j","element1","match","k","element2","property","propertyValue1","propertyValue2","clone","_cloneList","_cloneObject","list","cloned","element","push","value","maxId","generateId","generateGuid","replace","c","r","Math","random","v","async","executeSequentialAsync","tasks","caller","Promise","resolve","execute","index","task","then","getProperty","path","result","pathPart","isBrowserEnv","window","__exports","__esModule"],"sources":["core.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\n// =========================================================================\n// create object with prototype\n// =========================================================================\nexport function object(prototype) {\n    const TmpFunction = function () {};\n    TmpFunction.prototype = prototype;\n    return new TmpFunction();\n}\n\n// =========================================================================\n// extend object\n// =========================================================================\nexport function extend(o1, o2) {\n    for (const key in o2) {\n        o1[key] = o2[key];\n    }\n    return o1;\n}\n\n// =========================================================================\n// first character to upper\n// =========================================================================\nexport function firstCharToUpper(text: string, removeUnderscore: boolean): string {\n    if (removeUnderscore) {\n        if (text[0] === \"_\") {\n            text = text.slice(1);\n        }\n    }\n    return text[0].toUpperCase() + text.slice(1);\n}\n\n// =========================================================================\n// is list\n// =========================================================================\nexport function isList(obj): boolean {\n    if (Object.prototype.toString.call(obj) === \"[object Array]\") {\n        return true;\n    }\n    return false;\n}\n\n// =========================================================================\n// is object (array!=object)\n// =========================================================================\nexport function isObject(obj): boolean {\n    if (isList(obj)) {\n        return false;\n    }\n    return typeof obj === \"object\";\n}\n\n// =========================================================================\n// is empty object\n// =========================================================================\nexport function isEmptyObject(obj): boolean {\n    for (const prop in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, prop)) {\n            return false;\n        }\n    }\n    return JSON.stringify(obj) === JSON.stringify({});\n}\n\n// =========================================================================\n// is function\n// =========================================================================\nexport function isFunction(obj): boolean {\n    return typeof obj === \"function\";\n}\n\n// =========================================================================\n// is string\n// =========================================================================\nexport function isString(obj): boolean {\n    return typeof obj === \"string\";\n}\n\n// =========================================================================\n// is simple (= string, number  but not list, object, function)\n// =========================================================================\nexport function isSimple(obj): boolean {\n    return typeof obj !== \"object\" && typeof obj !== \"function\";\n}\n\n// =========================================================================\n// generic equals\n// =========================================================================\nexport function equals(o1, o2, ordered?: boolean): boolean {\n    if (isList(o1)) {\n        return _equalsList(o1, o2, ordered);\n    }\n    if (isObject(o1)) {\n        return _equalsObject(o1, o2, ordered);\n    }\n    return o1 === o2;\n}\n\nexport function _equalsList(l1, l2, ordered?: boolean): boolean {\n    if (ordered === undefined) {\n        ordered = true;\n    }\n    if (l1.length !== l2.length) {\n        return false;\n    }\n    if (ordered) {\n        // 1) consider order\n        for (let i = 0; i < l1.length; ++i) {\n            if (!equals(l1[i], l2[i], ordered)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    // 2) do not consider order\n    const matched = {};\n    for (let j = 0; j < l1.length; ++j) {\n        const element1 = l1[j];\n        let match = false;\n        for (let k = 0; k < l2.length; ++k) {\n            const element2 = l2[k];\n            if (matched[k]) {\n                continue;\n            }\n            if (equals(element1, element2, ordered)) {\n                match = true;\n                matched[k] = true;\n                break;\n            }\n        }\n        if (!match) {\n            return false;\n        }\n    }\n    return true;\n}\n\nexport function _equalsObject(o1, o2, ordered: boolean): boolean {\n    if (o1.equals) {\n        return o1.equals(o2);\n    }\n    if (!isObject(o2)) {\n        return false;\n    }\n    for (const property in o1) {\n        const propertyValue1 = o1[property];\n        const propertyValue2 = o2[property];\n        if (!equals(propertyValue1, propertyValue2, ordered)) {\n            return false;\n        }\n    }\n    return true;\n}\n\n// =========================================================================\n// generic clone\n// =========================================================================\nexport function clone<T>(obj: T): T {\n    if (isList(obj)) {\n        return _cloneList(obj as Array<unknown>) as T;\n    }\n    if (isObject(obj)) {\n        return _cloneObject(obj);\n    }\n    return obj;\n}\n\nexport function _cloneList<E>(list: Array<E>): Array<E> {\n    const cloned = [];\n    for (let i = 0; i < list.length; ++i) {\n        const element = list[i];\n        cloned.push(clone(element));\n    }\n    return cloned;\n}\n\nexport function _cloneObject<T>(obj: T): T {\n    if ((obj as { clone: () => T }).clone) {\n        return (obj as { clone: () => T }).clone();\n    }\n    const cloned = {} as Record<string, unknown>;\n    for (const property in obj) {\n        const value = obj[property];\n        cloned[property] = clone(value);\n    }\n    return cloned as T;\n}\n\n// =========================================================================\n// generate id\n// =========================================================================\nlet maxId = 0;\nexport function generateId(): string {\n    return \"#\" + ++maxId;\n}\n\n// =========================================================================\n// generate guid\n// =========================================================================\nexport function generateGuid(): string {\n    return \"xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\n        const r = (Math.random() * 16) | 0,\n            v = c == \"x\" ? r : (r & 0x3) | 0x8;\n        return v.toString(16).toUpperCase();\n    });\n}\n\n// =========================================================================\n// executeSequentialAsync\n// =========================================================================\nexport async function executeSequentialAsync(\n    tasks: Array<unknown>,\n    caller?: (any) => Promise<unknown>\n): Promise<void> {\n    if (!tasks) {\n        return Promise.resolve();\n    }\n    const execute = function (index) {\n        if (index >= tasks.length) {\n            return undefined;\n        }\n        const task = tasks[index];\n        return Promise.resolve()\n            .then(function () {\n                if (caller) {\n                    return caller(task);\n                }\n                return (task as () => Promise<unknown>)();\n            })\n            .then(function () {\n                return execute(index + 1);\n            });\n    };\n    return execute(0);\n}\n\n// =========================================================================\n// access deep property in object\n// =========================================================================\nexport function getProperty(obj, path: (string | number)[]) {\n    let result = obj;\n    for (const pathPart of path) {\n        result = result[pathPart];\n        if (typeof result === \"undefined\") {\n            return undefined;\n        }\n    }\n    return result;\n}\n\nexport function isBrowserEnv(): boolean {\n    return typeof window !== \"undefined\";\n}\n"],"mappings":"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","ignoreList":[]}