{"version":3,"file":"AjaxClient-dbg.js","names":["sap","ui","define","___AjaxBaseClient","___Log","___ajax","___errors","__ui5_require_async","path","Promise","resolve","reject","require","module","__esModule","endsWith","default","Object","defineProperty","value","err","AjaxBaseClient","Log","applyResponseFormattersAndUpdateJSON","InternalSinaError","RecordingMode","AjaxClient","records","recordOptions","replayResponseFormatters","constructor","properties","log","headers","recordingHeaders","mode","recordingMode","NONE","recordingPath","requestNormalization","defaultRequestNormalization","window","message","authorization","undefined","user","password","loadRecords","REPLAY","fs","JSON","parse","readFileSync","toString","createUrlMatchingReplayResponseFormatter","url","formatter","replayResponseFormatter","requestProperties","responseProperties","indexOf","addReplayResponseFormatter","delete","removeReplayResponseFormatter","push","index","splice","applyReplayResponseFormatters","request","response","requestInternal","replayResponse","replay","record","normalizeRequestData","data","notToRecord","normalizedJsonData","stringify","calculateKey","normalizationResult","key","dataJSON","saveRecording","supportDeprecatedRecording","e","warn","statusText","status","file","writeFile","error","payload","prototype","hasOwnProperty","call","SessionID","SessionTimestamp","__exports"],"sources":["AjaxClient.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\nimport { AjaxBaseClient, AjaxBaseClientProperties } from \"./AjaxBaseClient\";\nimport { Log } from \"./Log\";\nimport {\n    RequestProperties,\n    ResponseFormatter,\n    ResponseProperties,\n    applyResponseFormattersAndUpdateJSON,\n} from \"./ajax\";\nimport { InternalSinaError } from \"./errors\";\n\nexport type RequestNormalizer = (payload: unknown) =>\n    | {\n          NotToRecord?: boolean;\n      }\n    | \"\"\n    | unknown;\nexport interface AjaxClientProperties extends AjaxBaseClientProperties {\n    recordingHeaders?: Record<string, string>;\n    recordingMode?: RecordingMode;\n    recordingPath?: string;\n    requestNormalization?: RequestNormalizer;\n    replayResponseFormatters?: Array<ResponseFormatter>;\n}\n\nexport enum RecordingMode {\n    NONE = \"none\",\n    RECORD = \"record\",\n    REPLAY = \"replay\",\n}\n\nexport class AjaxClient extends AjaxBaseClient {\n    records: Record<string, unknown>;\n    recordOptions?: {\n        headers: Record<string, string>;\n        mode: RecordingMode;\n        path: string;\n        requestNormalization: RequestNormalizer;\n    };\n    replayResponseFormatters: Array<ResponseFormatter> = [];\n\n    constructor(properties: AjaxClientProperties) {\n        super(properties);\n        this.log = new Log(\"ajax client\");\n        this.recordOptions = {\n            headers: properties.recordingHeaders,\n            mode: properties.recordingMode ?? RecordingMode.NONE,\n            path: properties.recordingPath,\n            requestNormalization: properties.requestNormalization || this.defaultRequestNormalization,\n        };\n        if (typeof window !== \"undefined\" && this.recordOptions.mode !== RecordingMode.NONE) {\n            throw new InternalSinaError({ message: \"Record/Replay is only supported on Node.js\" });\n        }\n        this.records = {};\n        this.authorization = undefined;\n        if (properties.authorization) {\n            this.authorization = {\n                user: properties.authorization.user,\n                password: properties.authorization.password,\n            };\n        }\n        this.replayResponseFormatters = properties.replayResponseFormatters ?? [];\n    }\n\n    async loadRecords() {\n        if (this.recordOptions?.mode === RecordingMode.REPLAY && this.recordOptions?.path) {\n            const fs = await import(\"node:fs\");\n            this.records = JSON.parse(fs.readFileSync(this.recordOptions.path).toString());\n        }\n    }\n\n    createUrlMatchingReplayResponseFormatter(\n        url: string,\n        formatter: ResponseFormatter\n    ): { delete: () => void } {\n        const replayResponseFormatter = (\n            requestProperties: RequestProperties,\n            responseProperties: ResponseProperties\n        ) => {\n            if (requestProperties.url.indexOf(url) !== 0) {\n                return responseProperties;\n            }\n            return formatter(requestProperties, responseProperties);\n        };\n        this.addReplayResponseFormatter(replayResponseFormatter);\n        return {\n            delete: () => this.removeReplayResponseFormatter(replayResponseFormatter),\n        };\n    }\n\n    addReplayResponseFormatter(formatter: ResponseFormatter) {\n        this.replayResponseFormatters.push(formatter);\n    }\n\n    removeReplayResponseFormatter(formatter: ResponseFormatter) {\n        const index = this.replayResponseFormatters.indexOf(formatter);\n        if (index >= 0) {\n            this.replayResponseFormatters.splice(index);\n        }\n    }\n\n    applyReplayResponseFormatters(request: RequestProperties, response: ResponseProperties) {\n        return applyResponseFormattersAndUpdateJSON(request, response, this.replayResponseFormatters);\n    }\n\n    async requestInternal(requestProperties: RequestProperties): Promise<ResponseProperties> {\n        if (this.recordOptions.mode === \"replay\") {\n            let replayResponse = await this.replay(requestProperties);\n            replayResponse = this.applyReplayResponseFormatters(requestProperties, replayResponse);\n            return replayResponse;\n        }\n        const responseProperties = await super.requestInternal(requestProperties);\n        if (this.recordOptions.mode === \"record\") {\n            await this.record(requestProperties, responseProperties);\n        }\n        return responseProperties;\n    }\n\n    private normalizeRequestData(data: string): { data: string; notToRecord: boolean } {\n        if (!data) {\n            return { data: \"\", notToRecord: false };\n        }\n        const normalizedJsonData = this.recordOptions.requestNormalization(JSON.parse(data));\n        if (typeof normalizedJsonData === \"object\" && normalizedJsonData[\"NotToRecord\"]) {\n            return { data: \"\", notToRecord: true };\n        }\n        return { data: JSON.stringify(normalizedJsonData), notToRecord: false };\n    }\n\n    private calculateKey(request: RequestProperties): string {\n        const normalizationResult = this.normalizeRequestData(request.data);\n        if (normalizationResult.notToRecord) {\n            return;\n        }\n        return request.url + normalizationResult.data;\n    }\n\n    private async record(request: RequestProperties, response: ResponseProperties) {\n        const key = this.calculateKey(request);\n        response = JSON.parse(JSON.stringify(response)); // store copy\n        delete response.dataJSON; // parsed JSON is not stored\n        this.records[key] = response;\n        await this.saveRecording(this.recordOptions.path, this.records);\n    }\n\n    private async replay(requestProperties: RequestProperties): Promise<ResponseProperties> {\n        const key = this.calculateKey(requestProperties);\n        let response = JSON.parse(JSON.stringify(this.records[key])); // return copy\n        if (!response) {\n            throw new InternalSinaError({\n                message: \"No recording found for request '\" + key + \"' in file \" + this.recordOptions.path,\n            });\n        }\n        response = this.supportDeprecatedRecording(response);\n        try {\n            response.dataJSON = JSON.parse(response.data); // restore JSON\n        } catch (e) {\n            this.log.warn(\"Could not parse response data as JSON: \" + response?.data + \" (\" + e + \")\");\n        }\n        return response;\n    }\n\n    private supportDeprecatedRecording(response: ResponseProperties): ResponseProperties {\n        if (response.statusText) {\n            return response; // new format, no conversion\n        }\n        if (typeof response === \"object\") {\n            return { status: 200, statusText: \"OK\", headers: {}, data: JSON.stringify(response) }; // convert old to new format\n        } else {\n            return { status: 200, statusText: \"OK\", headers: {}, data: response as string }; // convert old to new format\n        }\n    }\n\n    private async saveRecording(\n        file: string,\n        data: Record<string, unknown>\n    ): Promise<ResponseProperties | void> {\n        const fs = await import(\"node:fs\");\n        return new Promise((resolve, reject) => {\n            fs.writeFile(file, JSON.stringify(data, null, 4), \"utf8\", (error) => {\n                if (error) {\n                    reject(error);\n                } else {\n                    resolve();\n                }\n            });\n        });\n    }\n\n    private defaultRequestNormalization(payload: unknown): \"\" | unknown {\n        if (payload === null) {\n            return \"\";\n        }\n        if (typeof payload === \"object\" && Object.prototype.hasOwnProperty.call(payload, \"SessionID\")) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            delete (payload as any).SessionID;\n        }\n        if (\n            typeof payload === \"object\" &&\n            Object.prototype.hasOwnProperty.call(payload, \"SessionTimestamp\")\n        ) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            delete (payload as any).SessionTimestamp;\n        }\n        return payload;\n    }\n}\n"],"mappings":"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","ignoreList":[]}