{"version":3,"file":"AjaxClient.js","names":["sap","ui","define","___AjaxBaseClient","___Log","___ajax","___errors","__ui5_require_async","path","Promise","resolve","reject","require","module","__esModule","endsWith","default","Object","defineProperty","value","err","AjaxBaseClient","Log","applyResponseFormattersAndUpdateJSON","InternalSinaError","RecordingMode","AjaxClient","records","recordOptions","replayResponseFormatters","constructor","properties","super","this","log","headers","recordingHeaders","mode","recordingMode","NONE","recordingPath","requestNormalization","defaultRequestNormalization","window","message","authorization","undefined","user","password","loadRecords","REPLAY","fs","JSON","parse","readFileSync","toString","createUrlMatchingReplayResponseFormatter","url","formatter","replayResponseFormatter","requestProperties","responseProperties","indexOf","addReplayResponseFormatter","delete","removeReplayResponseFormatter","push","index","splice","applyReplayResponseFormatters","request","response","requestInternal","replayResponse","replay","record","normalizeRequestData","data","notToRecord","normalizedJsonData","stringify","calculateKey","normalizationResult","key","dataJSON","saveRecording","supportDeprecatedRecording","e","warn","statusText","status","file","writeFile","error","payload","prototype","hasOwnProperty","call","SessionID","SessionTimestamp","__exports"],"sources":["AjaxClient.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\nimport { AjaxBaseClient, AjaxBaseClientProperties } from \"./AjaxBaseClient\";\nimport { Log } from \"./Log\";\nimport {\n    RequestProperties,\n    ResponseFormatter,\n    ResponseProperties,\n    applyResponseFormattersAndUpdateJSON,\n} from \"./ajax\";\nimport { InternalSinaError } from \"./errors\";\n\nexport type RequestNormalizer = (payload: unknown) =>\n    | {\n          NotToRecord?: boolean;\n      }\n    | \"\"\n    | unknown;\nexport interface AjaxClientProperties extends AjaxBaseClientProperties {\n    recordingHeaders?: Record<string, string>;\n    recordingMode?: RecordingMode;\n    recordingPath?: string;\n    requestNormalization?: RequestNormalizer;\n    replayResponseFormatters?: Array<ResponseFormatter>;\n}\n\nexport enum RecordingMode {\n    NONE = \"none\",\n    RECORD = \"record\",\n    REPLAY = \"replay\",\n}\n\nexport class AjaxClient extends AjaxBaseClient {\n    records: Record<string, unknown>;\n    recordOptions?: {\n        headers: Record<string, string>;\n        mode: RecordingMode;\n        path: string;\n        requestNormalization: RequestNormalizer;\n    };\n    replayResponseFormatters: Array<ResponseFormatter> = [];\n\n    constructor(properties: AjaxClientProperties) {\n        super(properties);\n        this.log = new Log(\"ajax client\");\n        this.recordOptions = {\n            headers: properties.recordingHeaders,\n            mode: properties.recordingMode ?? RecordingMode.NONE,\n            path: properties.recordingPath,\n            requestNormalization: properties.requestNormalization || this.defaultRequestNormalization,\n        };\n        if (typeof window !== \"undefined\" && this.recordOptions.mode !== RecordingMode.NONE) {\n            throw new InternalSinaError({ message: \"Record/Replay is only supported on Node.js\" });\n        }\n        this.records = {};\n        this.authorization = undefined;\n        if (properties.authorization) {\n            this.authorization = {\n                user: properties.authorization.user,\n                password: properties.authorization.password,\n            };\n        }\n        this.replayResponseFormatters = properties.replayResponseFormatters ?? [];\n    }\n\n    async loadRecords() {\n        if (this.recordOptions?.mode === RecordingMode.REPLAY && this.recordOptions?.path) {\n            const fs = await import(\"node:fs\");\n            this.records = JSON.parse(fs.readFileSync(this.recordOptions.path).toString());\n        }\n    }\n\n    createUrlMatchingReplayResponseFormatter(\n        url: string,\n        formatter: ResponseFormatter\n    ): { delete: () => void } {\n        const replayResponseFormatter = (\n            requestProperties: RequestProperties,\n            responseProperties: ResponseProperties\n        ) => {\n            if (requestProperties.url.indexOf(url) !== 0) {\n                return responseProperties;\n            }\n            return formatter(requestProperties, responseProperties);\n        };\n        this.addReplayResponseFormatter(replayResponseFormatter);\n        return {\n            delete: () => this.removeReplayResponseFormatter(replayResponseFormatter),\n        };\n    }\n\n    addReplayResponseFormatter(formatter: ResponseFormatter) {\n        this.replayResponseFormatters.push(formatter);\n    }\n\n    removeReplayResponseFormatter(formatter: ResponseFormatter) {\n        const index = this.replayResponseFormatters.indexOf(formatter);\n        if (index >= 0) {\n            this.replayResponseFormatters.splice(index);\n        }\n    }\n\n    applyReplayResponseFormatters(request: RequestProperties, response: ResponseProperties) {\n        return applyResponseFormattersAndUpdateJSON(request, response, this.replayResponseFormatters);\n    }\n\n    async requestInternal(requestProperties: RequestProperties): Promise<ResponseProperties> {\n        if (this.recordOptions.mode === \"replay\") {\n            let replayResponse = await this.replay(requestProperties);\n            replayResponse = this.applyReplayResponseFormatters(requestProperties, replayResponse);\n            return replayResponse;\n        }\n        const responseProperties = await super.requestInternal(requestProperties);\n        if (this.recordOptions.mode === \"record\") {\n            await this.record(requestProperties, responseProperties);\n        }\n        return responseProperties;\n    }\n\n    private normalizeRequestData(data: string): { data: string; notToRecord: boolean } {\n        if (!data) {\n            return { data: \"\", notToRecord: false };\n        }\n        const normalizedJsonData = this.recordOptions.requestNormalization(JSON.parse(data));\n        if (typeof normalizedJsonData === \"object\" && normalizedJsonData[\"NotToRecord\"]) {\n            return { data: \"\", notToRecord: true };\n        }\n        return { data: JSON.stringify(normalizedJsonData), notToRecord: false };\n    }\n\n    private calculateKey(request: RequestProperties): string {\n        const normalizationResult = this.normalizeRequestData(request.data);\n        if (normalizationResult.notToRecord) {\n            return;\n        }\n        return request.url + normalizationResult.data;\n    }\n\n    private async record(request: RequestProperties, response: ResponseProperties) {\n        const key = this.calculateKey(request);\n        response = JSON.parse(JSON.stringify(response)); // store copy\n        delete response.dataJSON; // parsed JSON is not stored\n        this.records[key] = response;\n        await this.saveRecording(this.recordOptions.path, this.records);\n    }\n\n    private async replay(requestProperties: RequestProperties): Promise<ResponseProperties> {\n        const key = this.calculateKey(requestProperties);\n        let response = JSON.parse(JSON.stringify(this.records[key])); // return copy\n        if (!response) {\n            throw new InternalSinaError({\n                message: \"No recording found for request '\" + key + \"' in file \" + this.recordOptions.path,\n            });\n        }\n        response = this.supportDeprecatedRecording(response);\n        try {\n            response.dataJSON = JSON.parse(response.data); // restore JSON\n        } catch (e) {\n            this.log.warn(\"Could not parse response data as JSON: \" + response?.data + \" (\" + e + \")\");\n        }\n        return response;\n    }\n\n    private supportDeprecatedRecording(response: ResponseProperties): ResponseProperties {\n        if (response.statusText) {\n            return response; // new format, no conversion\n        }\n        if (typeof response === \"object\") {\n            return { status: 200, statusText: \"OK\", headers: {}, data: JSON.stringify(response) }; // convert old to new format\n        } else {\n            return { status: 200, statusText: \"OK\", headers: {}, data: response as string }; // convert old to new format\n        }\n    }\n\n    private async saveRecording(\n        file: string,\n        data: Record<string, unknown>\n    ): Promise<ResponseProperties | void> {\n        const fs = await import(\"node:fs\");\n        return new Promise((resolve, reject) => {\n            fs.writeFile(file, JSON.stringify(data, null, 4), \"utf8\", (error) => {\n                if (error) {\n                    reject(error);\n                } else {\n                    resolve();\n                }\n            });\n        });\n    }\n\n    private defaultRequestNormalization(payload: unknown): \"\" | unknown {\n        if (payload === null) {\n            return \"\";\n        }\n        if (typeof payload === \"object\" && Object.prototype.hasOwnProperty.call(payload, \"SessionID\")) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            delete (payload as any).SessionID;\n        }\n        if (\n            typeof payload === \"object\" &&\n            Object.prototype.hasOwnProperty.call(payload, \"SessionTimestamp\")\n        ) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            delete (payload as any).SessionTimestamp;\n        }\n        return payload;\n    }\n}\n"],"mappings":"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","ignoreList":[]}