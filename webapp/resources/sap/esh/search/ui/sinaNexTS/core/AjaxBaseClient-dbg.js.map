{"version":3,"file":"AjaxBaseClient-dbg.js","names":["sap","ui","define","___Log","___ajax","___ajaxUtil","___core","___defaultAjaxErrorFactory","___errors","Log","applyResponseFormattersAndUpdateJSON","request","addEncodedUrlParameters","isBrowserEnv","createDefaultAjaxErrorFactory","ResponseFormatError","LanguageHeaderError","AjaxBaseClient","handleCookies","cookieStore","csrf","csrfByPassCache","csrfToken","csrfFetchRequest","csrfFetchRequestPromise","getLanguage","authorization","requestFormatters","responseFormatters","defaultParameters","errorFactories","errorFormatters","log","constructor","properties","undefined","user","password","getJsonHeaders","header","Accept","addLanguageToHeader","addDefaultHeaders","getXmlHeaders","error","previous","getJson","url","responseProperties","headers","method","data","JSON","parse","name","postJson","stringify","length","mergeJson","getXML","fetchCsrf","parameters","_","Date","now","requestPlain","then","response","bind","requestWithCsrf","renewCsrf","csrfHeader","toLowerCase","createUrlMatchingResponseFormatter","formatter","responseFormatter","indexOf","addResponseFormatter","delete","removeResponseFormatter","push","index","splice","removeAllResponseFormatters","applyRequestFormatters","requestFormatter","applyResponseFormatters","setBasicAuth","Object","assign","Buffer","Authorization","from","toString","window","btoa","requestProperties","requestInternal","checkForErrors","saveCookies","setCookieHeaders","setCookieHeader","parts","split","setPart","assignmentOperatorIndex","slice","trim","value","pasteCookies","cookieEntries","entries","map","join","addDefaultParameters","applyErrorFormatters","errorFormatter","errorFactory","e","__exports","__esModule"],"sources":["AjaxBaseClient.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\n/* global Buffer */\nimport { Log } from \"./Log\";\nimport {\n    AjaxErrorFactory,\n    AjaxErrorFormatter,\n    JSONResponseProperties,\n    JSONValue,\n    RequestFormatter,\n    RequestProperties,\n    ResponseFormatter,\n    ResponseProperties,\n    applyResponseFormattersAndUpdateJSON,\n    request,\n} from \"./ajax\";\nimport { addEncodedUrlParameters } from \"./ajaxUtil\";\nimport { isBrowserEnv } from \"./core\";\nimport { createDefaultAjaxErrorFactory } from \"./defaultAjaxErrorFactory\";\nimport { SinaError, ResponseFormatError, LanguageHeaderError } from \"./errors\";\n\nexport interface AjaxBaseClientProperties {\n    csrf?: boolean;\n    csrfByPassCache?: boolean;\n    csrfFetchRequest?: RequestProperties;\n    getLanguage?: () => string;\n    authorization?: { user: string; password: string };\n    requestFormatters?: Array<RequestFormatter>;\n    responseFormatters?: Array<ResponseFormatter>;\n    defaultParameters?: Record<string, string>;\n    errorFactories?: Array<AjaxErrorFactory>;\n    errorFormatters?: Array<AjaxErrorFormatter>;\n}\n\nexport class AjaxBaseClient {\n    handleCookies: boolean;\n    cookieStore: Record<string, string> = {};\n    csrf: boolean;\n    csrfByPassCache: boolean;\n    csrfToken: string;\n    csrfFetchRequest: RequestProperties;\n    csrfFetchRequestPromise: Promise<ResponseProperties>;\n    getLanguage?: () => string;\n    authorization?: { user: string; password: string };\n    requestFormatters: Array<RequestFormatter> = [];\n    responseFormatters: Array<ResponseFormatter> = [];\n    defaultParameters: Record<string, string> = {};\n    errorFactories: Array<AjaxErrorFactory> = [];\n    errorFormatters: Array<AjaxErrorFormatter> = [];\n\n    log: Log;\n\n    constructor(properties: AjaxBaseClientProperties) {\n        this.csrf = properties.csrf;\n        this.csrfByPassCache = properties.csrfByPassCache || false;\n        this.csrfToken = null;\n        this.csrfFetchRequest = properties.csrfFetchRequest || null;\n        this.getLanguage = properties?.getLanguage;\n        this.authorization = undefined;\n        if (properties.authorization) {\n            this.authorization = {\n                user: properties.authorization.user,\n                password: properties.authorization.password,\n            };\n        }\n        this.requestFormatters = properties.requestFormatters ?? [];\n        this.responseFormatters = properties.responseFormatters ?? [];\n        this.defaultParameters = properties.defaultParameters ?? {};\n        this.errorFactories = properties.errorFactories ?? [createDefaultAjaxErrorFactory()];\n        this.errorFormatters = properties.errorFormatters || [];\n        // for node env   : cookies are handled by ajax base client\n        // for browser env: cookies are handled by browser\n        this.handleCookies = !isBrowserEnv();\n        this.log = new Log(\"ajax base client\");\n    }\n\n    private getJsonHeaders(): Record<string, string> {\n        const header = {\n            \"Content-Type\": \"application/json\",\n            Accept: \"application/json\",\n        };\n        this.addLanguageToHeader(header);\n        this.addDefaultHeaders(header);\n        return header;\n    }\n\n    private getXmlHeaders(): Record<string, string> {\n        const header = {\n            \"Content-Type\": \"application/xml\",\n            Accept: \"application/xml\",\n        };\n        this.addLanguageToHeader(header);\n        this.addDefaultHeaders(header);\n        return header;\n    }\n\n    private addDefaultHeaders(header: Record<string, string>): void {\n        header[\"Cache-Control\"] = \"no-cache\";\n    }\n\n    private addLanguageToHeader(header: Record<string, string>): void {\n        if (typeof this.getLanguage === \"function\") {\n            try {\n                header[\"Accept-Language\"] = this.getLanguage();\n            } catch (error) {\n                throw new LanguageHeaderError({\n                    previous: error,\n                });\n            }\n        }\n    }\n\n    public async getJson(url: string): Promise<JSONResponseProperties> {\n        const responseProperties = await this.request({\n            headers: this.getJsonHeaders(),\n            method: \"GET\",\n            url: url,\n        });\n        try {\n            responseProperties.data = JSON.parse(responseProperties.data);\n        } catch (error) {\n            if (error.name === \"SyntaxError\") {\n                throw new ResponseFormatError(error, \"JSON\", responseProperties.data);\n            } else {\n                throw error;\n            }\n        }\n        return responseProperties;\n    }\n\n    public async postJson(url: string, data: JSONValue): Promise<JSONResponseProperties> {\n        const responseProperties = await this.request({\n            headers: this.getJsonHeaders(),\n            method: \"POST\",\n            url: url,\n            data: JSON.stringify(data),\n        });\n        try {\n            if (responseProperties.data?.length > 0) {\n                responseProperties.data = JSON.parse(responseProperties.data);\n            }\n        } catch (error) {\n            if (error.name === \"SyntaxError\") {\n                throw new ResponseFormatError(error, \"JSON\", responseProperties.data);\n            } else {\n                throw error;\n            }\n        }\n        return responseProperties;\n    }\n\n    public async mergeJson(url: string, data: JSONValue): Promise<JSONResponseProperties> {\n        const responseProperties = await this.request({\n            headers: this.getJsonHeaders(),\n            method: \"MERGE\",\n            url: url,\n            data: JSON.stringify(data),\n        });\n        try {\n            if (responseProperties.data?.length > 0) {\n                responseProperties.data = JSON.parse(responseProperties.data);\n            }\n        } catch (error) {\n            if (error.name === \"SyntaxError\") {\n                throw new ResponseFormatError(error, \"JSON\", responseProperties.data);\n            } else {\n                throw error;\n            }\n        }\n        return responseProperties;\n    }\n\n    public async getXML(url): Promise<string> {\n        const responseProperties = await this.request({\n            headers: this.getXmlHeaders(),\n            method: \"GET\",\n            url: url,\n        });\n        return responseProperties.data;\n    }\n\n    private fetchCsrf(): Promise<ResponseProperties> {\n        if (this.csrfFetchRequestPromise) {\n            return this.csrfFetchRequestPromise;\n        }\n        this.csrfFetchRequest.headers = this.csrfFetchRequest.headers || {};\n        this.csrfFetchRequest.headers[\"x-csrf-token\"] = \"fetch\";\n        this.csrfFetchRequest.parameters = this.csrfFetchRequest.parameters || {};\n        if (this.csrfByPassCache) {\n            this.csrfFetchRequest.parameters._ = Date.now(); // bypass cache;\n        }\n        this.csrfFetchRequestPromise = this.requestPlain(this.csrfFetchRequest).then(\n            function (this: AjaxBaseClient, response) {\n                this.csrfFetchRequestPromise = null;\n                this.csrfToken = response.headers[\"x-csrf-token\"];\n                return response;\n            }.bind(this)\n        );\n        return this.csrfFetchRequestPromise;\n    }\n\n    private async requestWithCsrf(\n        properties: RequestProperties,\n        renewCsrf: boolean\n    ): Promise<ResponseProperties> {\n        // if request is identical to csrf fetch request -> always fetch a new csrf token\n        if (\n            addEncodedUrlParameters(this.csrfFetchRequest.url, this.csrfFetchRequest.parameters) ===\n            addEncodedUrlParameters(properties.url, properties.parameters)\n        ) {\n            return await this.fetchCsrf();\n        }\n\n        // no csrf -> fetch csrf\n        if (renewCsrf && !this.csrfToken) {\n            await this.fetchCsrf();\n        }\n\n        // do request with csrf token\n        properties.headers = properties.headers || {};\n        properties.headers[\"x-csrf-token\"] = this.csrfToken;\n        const response = await this.requestPlain(properties);\n\n        // check response, csrf token maybe outdated: fetch csrf, repeat request\n        const csrfHeader = response?.headers[\"x-csrf-token\"];\n        if (renewCsrf && typeof csrfHeader === \"string\" && csrfHeader.toLowerCase() === \"required\") {\n            await this.fetchCsrf();\n            return await this.requestWithCsrf(properties, false);\n        }\n\n        return response;\n    }\n\n    createUrlMatchingResponseFormatter(url: string, formatter: ResponseFormatter): { delete: () => void } {\n        const responseFormatter = (request: RequestProperties, response: ResponseProperties) => {\n            if (request.url.indexOf(url) !== 0) {\n                return response;\n            }\n            return formatter(request, response);\n        };\n        this.addResponseFormatter(responseFormatter);\n        return {\n            delete: () => this.removeResponseFormatter(responseFormatter),\n        };\n    }\n\n    addResponseFormatter(formatter: ResponseFormatter) {\n        this.responseFormatters.push(formatter);\n    }\n\n    removeResponseFormatter(formatter: ResponseFormatter) {\n        const index = this.responseFormatters.indexOf(formatter);\n        if (index >= 0) {\n            this.responseFormatters.splice(index);\n        }\n    }\n\n    removeAllResponseFormatters() {\n        this.responseFormatters = [];\n    }\n\n    private applyRequestFormatters(request: RequestProperties) {\n        for (const requestFormatter of this.requestFormatters) {\n            request = requestFormatter(request);\n        }\n        return request;\n    }\n\n    private applyResponseFormatters(request: RequestProperties, response: ResponseProperties) {\n        return applyResponseFormattersAndUpdateJSON(request, response, this.responseFormatters);\n    }\n\n    private setBasicAuth(properties: RequestProperties) {\n        properties.headers = Object.assign({}, properties.headers);\n        if (this.authorization !== undefined) {\n            if (typeof Buffer === \"function\") {\n                // node.js encode\n                properties.headers.Authorization =\n                    \"Basic \" +\n                    Buffer.from(this.authorization.user + \":\" + this.authorization.password).toString(\n                        \"base64\"\n                    );\n            } else if (window && typeof window.btoa === \"function\") {\n                // javascript encode\n                properties.headers.Authorization =\n                    \"Basic \" + window.btoa(this.authorization.user + \":\" + this.authorization.password);\n            }\n        }\n    }\n\n    public async request(requestProperties: RequestProperties): Promise<ResponseProperties> {\n        const responseProperties = await this.requestInternal(requestProperties);\n        this.checkForErrors(requestProperties, responseProperties);\n        return responseProperties;\n    }\n\n    async requestInternal(properties: RequestProperties): Promise<ResponseProperties> {\n        // set authorization header\n        this.setBasicAuth(properties);\n\n        // no csrf -> fire plain request\n        if (!this.csrf) {\n            return await this.requestPlain(properties);\n        }\n\n        // if csrf fetch request is not set -> treat first request as csrf fetch request\n        if (!this.csrfFetchRequest) {\n            this.csrfFetchRequest = properties;\n        }\n\n        // main request with csrf renew if neccessary\n        return await this.requestWithCsrf(properties, true);\n    }\n\n    private saveCookies(properties: ResponseProperties) {\n        const setCookieHeaders = properties?.headers[\"set-cookie\"];\n        if (!setCookieHeaders) {\n            return;\n        }\n        for (const setCookieHeader of setCookieHeaders) {\n            const parts = setCookieHeader.split(\";\");\n            if (parts.length === 0) {\n                continue;\n            }\n            const setPart = parts[0];\n            const assignmentOperatorIndex = setPart.indexOf(\"=\");\n            if (assignmentOperatorIndex < 0) {\n                continue;\n            }\n            const name = setPart.slice(0, assignmentOperatorIndex).trim();\n            if (name.length === 0) {\n                continue;\n            }\n            const value = setPart.slice(assignmentOperatorIndex + 1).trim();\n            if (value.length === 0) {\n                continue;\n            }\n            this.cookieStore[name] = value;\n        }\n    }\n\n    private pasteCookies(properties: RequestProperties) {\n        const cookieEntries = Object.entries(this.cookieStore);\n        if (cookieEntries.length === 0) {\n            return;\n        }\n        properties.headers = properties.headers || {};\n        properties.headers[\"Cookie\"] = cookieEntries.map(([name, value]) => `${name}=${value}`).join(\";\");\n    }\n\n    private addDefaultParameters(properties: RequestProperties) {\n        for (const [name, value] of Object.entries(this.defaultParameters)) {\n            properties.parameters = properties.parameters || {};\n            if (typeof properties.parameters[name] !== \"undefined\") {\n                continue; // do not overwrite\n            }\n            properties.parameters[name] = value;\n        }\n    }\n\n    private applyErrorFormatters(\n        requestProperties: RequestProperties,\n        responseProperties: ResponseProperties,\n        error: SinaError\n    ): SinaError {\n        for (const errorFormatter of this.errorFormatters) {\n            error = errorFormatter(requestProperties, responseProperties, error);\n        }\n        return error;\n    }\n\n    private checkForErrors(requestProperties: RequestProperties, responseProperties: ResponseProperties) {\n        for (const errorFactory of this.errorFactories) {\n            let error;\n            try {\n                error = errorFactory(requestProperties, responseProperties);\n            } catch (e) {\n                this.log.error(`ajax error factory raised exception ${e}`); // log and continue with next factory\n            }\n            if (error) {\n                error = this.applyErrorFormatters(requestProperties, responseProperties, error);\n                throw error;\n            }\n        }\n    }\n\n    private async requestPlain(requestProperties: RequestProperties): Promise<ResponseProperties> {\n        this.addDefaultParameters(requestProperties);\n        if (this.handleCookies) {\n            this.pasteCookies(requestProperties);\n        }\n        requestProperties = this.applyRequestFormatters(requestProperties);\n        let responseProperties = await request(requestProperties);\n        responseProperties = this.applyResponseFormatters(requestProperties, responseProperties);\n        if (this.handleCookies) {\n            this.saveCookies(responseProperties);\n        }\n        return responseProperties;\n    }\n}\n"],"mappings":"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","ignoreList":[]}