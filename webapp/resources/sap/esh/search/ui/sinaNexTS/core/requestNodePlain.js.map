{"version":3,"file":"requestNodePlain.js","names":["sap","ui","define","___ajaxUtil","__ui5_require_async","path","Promise","resolve","reject","require","module","__esModule","endsWith","default","Object","defineProperty","value","err","addEncodedUrlParameters","async","requestNodePlain","properties","https","url","startsWith","Buffer","parameters","urlObj","URL","options","rejectUnauthorized","hostname","pathname","search","port","method","headers","data","byteLength","req","request","res","responseData","on","chunk","status","statusCode","statusText","statusMessage","error","write","end","__exports"],"sources":["requestNodePlain.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\nimport { RequestProperties, ResponseProperties } from \"./ajax\";\nimport { addEncodedUrlParameters } from \"./ajaxUtil\";\n\nexport async function requestNodePlain(properties: RequestProperties): Promise<ResponseProperties> {\n    const https = properties.url.startsWith(\"https\") ? await import(\"node:https\") : await import(\"node:http\");\n    const { Buffer } = await import(\"node:buffer\");\n    return new Promise((resolve) => {\n        const url = addEncodedUrlParameters(properties.url, properties.parameters);\n        const urlObj = new URL(url);\n        const options = {\n            rejectUnauthorized: false,\n            //requestCert: true,\n            //agent: false,\n            hostname: urlObj.hostname,\n            path: urlObj.pathname + urlObj.search,\n            port: urlObj.port,\n            method: properties.method,\n            headers: properties.headers,\n        };\n\n        if (properties.data) {\n            options.headers[\"Content-Length\"] = \"\" + Buffer.byteLength(properties.data);\n        }\n\n        const req = https.request(options, (res) => {\n            let responseData = \"\";\n\n            res.on(\"data\", (chunk) => {\n                responseData += chunk;\n            });\n\n            res.on(\"end\", () => {\n                resolve({\n                    status: res.statusCode,\n                    statusText: res.statusMessage,\n                    data: responseData,\n                    headers: res.headers,\n                });\n            });\n        });\n\n        req.on(\"error\", (error) => {\n            resolve({\n                status: 0,\n                statusText: \"\" + error,\n                data: \"\",\n                headers: {},\n            });\n        });\n\n        if (properties.data) {\n            req.write(properties.data);\n        }\n\n        req.end();\n    });\n}\n"],"mappings":";;;;;AAAAA,IAAAC,GAAAC,OAAA,wBAAAC,GAAA,sBAAAC,EAAAC,GAAA,WAAAC,QAAA,SAAAC,EAAAC,GAAAR,IAAAC,GAAAQ,QAAA,CAAAJ,GAAA,SAAAK,GAAA,KAAAA,KAAAC,YAAA,CAAAD,MAAA,eAAAA,IAAA,UAAAL,EAAAO,SAAA,cAAAC,QAAAH,KAAAI,OAAAC,eAAAL,EAAA,cAAAM,MAAA,OAAAT,EAAAG,EAAA,WAAAO,GAAAT,EAAAS,EAAA,WAMSC,EAAuBf,EAAA,2BAEzBgB,eAAeC,EAAiBC,GACnC,MAAMC,EAAQD,EAAWE,IAAIC,WAAW,eAAiBpB,EAAO,oBAAsBA,EAAO,aAC7F,MAAMqB,OAAEA,SAAiBrB,EAAO,eAChC,OAAO,IAAIE,QAASC,IAChB,MAAMgB,EAAML,EAAwBG,EAAWE,IAAKF,EAAWK,YAC/D,MAAMC,EAAS,IAAIC,IAAIL,GACvB,MAAMM,EAAU,CACZC,mBAAoB,MAGpBC,SAAUJ,EAAOI,SACjB1B,KAAMsB,EAAOK,SAAWL,EAAOM,OAC/BC,KAAMP,EAAOO,KACbC,OAAQd,EAAWc,OACnBC,QAASf,EAAWe,SAGxB,GAAIf,EAAWgB,KAAM,CACjBR,EAAQO,QAAQ,kBAAoB,GAAKX,EAAOa,WAAWjB,EAAWgB,KAC1E,CAEA,MAAME,EAAMjB,EAAMkB,QAAQX,EAAUY,IAChC,IAAIC,EAAe,GAEnBD,EAAIE,GAAG,OAASC,IACZF,GAAgBE,IAGpBH,EAAIE,GAAG,MAAO,KACVpC,EAAQ,CACJsC,OAAQJ,EAAIK,WACZC,WAAYN,EAAIO,cAChBX,KAAMK,EACNN,QAASK,EAAIL,cAKzBG,EAAII,GAAG,QAAUM,IACb1C,EAAQ,CACJsC,OAAQ,EACRE,WAAY,GAAKE,EACjBZ,KAAM,GACND,QAAS,CAAC,MAIlB,GAAIf,EAAWgB,KAAM,CACjBE,EAAIW,MAAM7B,EAAWgB,KACzB,CAEAE,EAAIY,OAEZ,CAAC,IAAAC,EAAA,CAAAzC,WAAA,MAAAyC,EAAAhC,mBAAA,OAAAgC,CAAA","ignoreList":[]}