{"version":3,"file":"errors-dbg.js","names":["sap","ui","define","___sina_i18n","getText","SinaError","Error","message","details","solution","context","name","previous","constructor","properties","toString","InternalSinaError","props","ServerErrorCode","ServerError","code","dataSourceErrors","request","response","resultSet","NoConnectionError","url","LanguageHeaderError","NoJSONDateError","TimeOutError","NotImplementedError","ForcedBySearchTermTestError","forcedBySearchTerm","UnknownAttributeTypeError","attributeType","JSONParseError","MetadataParserError","UnknownComparisonOperatorError","operator","UnknownLogicalOperatorError","UnknownPresentationUsageError","presentationUsage","UnknownDataTypeError","dataType","UnknownConditionTypeError","conditionType","OnlyComplexConditionAllowedError","ResponseFormatError","expectedResponseDataFormat","responseData","detectedformat","startsWith","substring","ESHNotActiveError","ESHNoBusinessObjectDatasourceError","FacetsParseError","WhyFoundAttributeMetadataMissingError","attributeId","TimeConversionError","value","DateConversionError","CanOnlyAutoInsertComplexConditionError","CanNotCreateAlreadyExistingDataSourceError","dataSourceId","DataSourceInURLDoesNotExistError","DataSourceAttributeMetadataNotFoundError","NoValidEnterpriseSearchAPIConfigurationFoundError","providersTried","err","originalMessage","SinaConfigurationError","functionName","QueryIsReadOnlyError","InBetweenConditionInConsistent","__exports","__esModule"],"sources":["errors.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\nimport { ResultSet } from \"../sina/ResultSet\";\nimport { getText } from \"../sina/i18n\";\nimport { RequestProperties, ResponseProperties } from \"./ajax\";\n\n// =========================================================================\n// Base Exception Class\n// =========================================================================\nexport interface SinaErrorProperties {\n    message: string;\n    details?: string;\n    solution?: string;\n    context?: Record<string, unknown>;\n    name: string;\n    previous?: Error;\n}\n\nexport abstract class SinaError extends Error {\n    message: string;\n    details?: string;\n    solution?: string;\n    context?: Record<string, unknown>;\n    //stack: string; // remove stack here because it is base class defined\n    name: string;\n    previous: Error;\n\n    constructor(properties: SinaErrorProperties) {\n        super(properties.message);\n        this.message = properties.message;\n        this.details = properties?.details;\n        this.solution = properties.solution;\n        this.context = properties?.context;\n        this.name = properties.name ?? \"SinaError\";\n        this.previous = properties.previous;\n    }\n\n    toString(): string {\n        return this.name + \": \" + this.message;\n    }\n}\n\n// =========================================================================\n// List of all Sina Exceptions\n// =========================================================================\n\nexport class InternalSinaError extends SinaError {\n    constructor(props: { message?: string; details?: string; previous?: Error }) {\n        const properties: SinaErrorProperties = {\n            name: \"InternalSinaError\",\n            message: props.message ?? getText(\"error.sina.InternalSinaError\"),\n            details: props.details,\n            previous: props.previous,\n        };\n        super(properties);\n    }\n}\n\n// provider independent error codes\nexport enum ServerErrorCode {\n    E001 = \"E001\", // error\n    E100 = \"E100\", // The search result is incomplete because some search connectors are temporary not available.\n    E101 = \"E101\", // The metadata response is incomplete because some search connectors are temporary not available.\n    E102 = \"E102\", // All search connectors are temporarily not available\n    E200 = \"E200\", // The search term is too long in order to be processed.\n    E201 = \"E201\", // The search term contains too many tokens in order to be processed.\n    E202 = \"E202\", // Regular expression is too complex (input query is too complex and should be simplified).\n    E203 = \"E203\", // Search query contains only characters that are defined as separators. Please adjust the search query.\n    E300 = \"E300\", // The search request is invalid because the request does match to the metadata of the search connector.\n    E400 = \"E400\", // Duplicate search result list items\n    E500 = \"E500\", // AI/nlq service is not available\n}\n\nexport interface DataSourceError {\n    dataSource: string;\n    code: ServerErrorCode;\n    message: string;\n    details?: string;\n}\n\ninterface ServerErrorProperties {\n    request: RequestProperties;\n    response: ResponseProperties;\n    code: ServerErrorCode;\n    message: string;\n    details?: string;\n    dataSourceErrors?: Array<DataSourceError>;\n    previous?: Error;\n}\n\nexport class ServerError extends SinaError {\n    code: ServerErrorCode;\n    dataSourceErrors: Array<DataSourceError>;\n    request: RequestProperties;\n    response: ResponseProperties;\n    resultSet?: ResultSet;\n    constructor(properties: ServerErrorProperties) {\n        super({\n            name: \"ServerError\",\n            message: properties.message,\n            details: properties.details,\n            previous: properties.previous,\n        });\n        this.code = properties.code;\n        this.dataSourceErrors = properties.dataSourceErrors;\n        this.request = properties.request;\n        this.response = properties.response;\n    }\n}\n\nexport class NoConnectionError extends SinaError {\n    constructor(url: string) {\n        super({\n            name: \"NoConnectionError\",\n            message: getText(\"error.sina.NoConnectionError\", [url]),\n        });\n    }\n}\n\nexport class LanguageHeaderError extends SinaError {\n    constructor(props: { message?: string; details?: string; previous?: Error }) {\n        super({\n            name: \"LanguageHeaderError\",\n            message: props.message || getText(\"errr.sina.LanguageHeaderError\"),\n            details: props.details,\n            previous: props.previous,\n        });\n    }\n}\n\nexport class NoJSONDateError extends SinaError {\n    constructor(message?: string) {\n        const properties: SinaErrorProperties = {\n            name: \"NoJSONDateError\",\n            message: message ?? getText(\"error.sina.NoJSONDateError\"),\n        };\n        super(properties);\n    }\n}\n\nexport class TimeOutError extends SinaError {\n    constructor(message?: string) {\n        const properties: SinaErrorProperties = {\n            name: \"TimeOutError\",\n            message: message ?? getText(\"error.sina.TimeOutError\"),\n        };\n        super(properties);\n    }\n}\n\nexport class NotImplementedError extends SinaError {\n    constructor() {\n        super({ message: \"Not implemented\", name: \"ESHNotImplementedError\" });\n    }\n}\n\nexport class ForcedBySearchTermTestError extends SinaError {\n    public static readonly forcedBySearchTerm = \"EshForceErrorSearchterm\";\n    constructor() {\n        const properties: SinaErrorProperties = {\n            name: \"ForcedBySearchTermTestError\",\n            message: `Forced error, triggered by search term '${ForcedBySearchTermTestError.forcedBySearchTerm}'.`,\n        };\n        super(properties);\n    }\n}\n\nexport class UnknownAttributeTypeError extends SinaError {\n    constructor(attributeType: string, previous?: Error) {\n        const properties: SinaErrorProperties = {\n            name: \"UnknownAttributeTypeError\",\n            message: getText(\"error.sina.UnknownAttributeTypeError\", [attributeType]),\n            previous,\n        };\n        super(properties);\n    }\n}\n\nexport class JSONParseError extends SinaError {\n    constructor(message?: string, previous?: Error) {\n        const properties: SinaErrorProperties = {\n            name: \"JSONParseError\",\n            message: message ?? getText(\"error.sina.JSONParseError\"),\n            previous,\n        };\n        super(properties);\n    }\n}\n\nexport class MetadataParserError extends SinaError {\n    constructor(message?: string, previous?: Error) {\n        const properties: SinaErrorProperties = {\n            name: \"MetadataParserError\",\n            message: message ?? getText(\"error.sina.MetadataParserError\"),\n            previous,\n        };\n        super(properties);\n    }\n}\n\nexport class UnknownComparisonOperatorError extends SinaError {\n    constructor(operator: string) {\n        const properties: SinaErrorProperties = {\n            name: \"UnknownComparisonOperatorError\",\n            message: getText(\"error.sina.UnknownComparisonOperatorError\", [operator]),\n        };\n        super(properties);\n    }\n}\n\nexport class UnknownLogicalOperatorError extends SinaError {\n    constructor(operator: string) {\n        const properties: SinaErrorProperties = {\n            name: \"UnknownLogicalOperatorError\",\n            message: getText(\"error.sina.UnknownLogicalOperatorError\", [operator]),\n        };\n        super(properties);\n    }\n}\n\nexport class UnknownPresentationUsageError extends SinaError {\n    constructor(presentationUsage: string) {\n        const properties: SinaErrorProperties = {\n            name: \"UnknownPresentationUsageError\",\n            message: getText(\"error.sina.UnknownPresentationUsageError\", [presentationUsage]),\n        };\n        super(properties);\n    }\n}\n\nexport class UnknownDataTypeError extends SinaError {\n    constructor(dataType: string) {\n        const properties: SinaErrorProperties = {\n            name: \"UnknownDataTypeError\",\n            message: getText(\"error.sina.UnknownDataTypeError\", [dataType]),\n        };\n        super(properties);\n    }\n}\n\nexport class UnknownConditionTypeError extends SinaError {\n    constructor(conditionType: string) {\n        const properties: SinaErrorProperties = {\n            name: \"UnknownConditionTypeError\",\n            message: getText(\"error.sina.UnknownConditionTypeError\", [conditionType]),\n        };\n        super(properties);\n    }\n}\n\nexport class OnlyComplexConditionAllowedError extends SinaError {\n    constructor() {\n        const properties: SinaErrorProperties = {\n            name: \"OnlyComplexConditionAllowedError\",\n            message: getText(\"error.sina.OnlyComplexConditionAllowedError\"),\n        };\n        super(properties);\n    }\n}\n\nexport class ResponseFormatError extends SinaError {\n    constructor(previous: Error, expectedResponseDataFormat: \"JSON\" | \"XML\", responseData: string) {\n        let detectedformat = \"undetected\";\n        if (responseData?.startsWith(\"<html\") || responseData?.startsWith(\"<HTML\")) {\n            detectedformat = \"HTML\";\n        } else if (responseData?.startsWith(\"<?xml\") || responseData?.startsWith(\"<?XML\")) {\n            detectedformat = \"XML\";\n        }\n        const properties: SinaErrorProperties = {\n            name: \"ResponseFormatError\",\n            message: getText(\"error.sina.ResponseFormatError\", [\n                expectedResponseDataFormat,\n                detectedformat,\n                responseData.substring(0, 25),\n            ]),\n            previous: previous,\n        };\n        super(properties);\n    }\n}\n\nexport class ESHNotActiveError extends SinaError {\n    constructor(message?: string) {\n        const properties: SinaErrorProperties = {\n            name: \"ESHNotActiveError\",\n            message: message ?? getText(\"error.sina.ESHNotActiveError\"),\n        };\n        super(properties);\n    }\n}\n\nexport class ESHNoBusinessObjectDatasourceError extends SinaError {\n    constructor(message?: string) {\n        const properties: SinaErrorProperties = {\n            name: \"ESHNoBusinessObjectDatasourceError\",\n            message: message ?? getText(\"error.sina.ESHNoBusinessObjectDatasourceError\"),\n        };\n        super(properties);\n    }\n}\n\nexport class FacetsParseError extends SinaError {\n    constructor(message?: string) {\n        const properties: SinaErrorProperties = {\n            name: \"FacetsParseError\",\n            message: message ?? getText(\"error.sina.FacetsParseError\"),\n        };\n        super(properties);\n    }\n}\n\nexport class WhyFoundAttributeMetadataMissingError extends SinaError {\n    constructor(attributeId: string) {\n        const properties: SinaErrorProperties = {\n            name: \"WhyFoundAttributeMetadataMissingError\",\n            message: getText(\"error.sina.WhyFoundAttributeMetadataMissingError\", [attributeId]),\n        };\n        super(properties);\n    }\n}\n\nexport class TimeConversionError extends SinaError {\n    constructor(value: string) {\n        const properties: SinaErrorProperties = {\n            name: \"TimeConversionError\",\n            message: getText(\"error.sina.TimeConversionError\", [value]),\n        };\n        super(properties);\n    }\n}\n\nexport class DateConversionError extends SinaError {\n    constructor(value: string) {\n        const properties: SinaErrorProperties = {\n            name: \"DateConversionError\",\n            message: getText(\"error.sina.DateConversionError\", [value]),\n        };\n        super(properties);\n    }\n}\n\nexport class CanOnlyAutoInsertComplexConditionError extends SinaError {\n    constructor() {\n        const properties: SinaErrorProperties = {\n            name: \"CanOnlyAutoInsertComplexConditionError\",\n            message: getText(\"error.sina.CanOnlyAutoInsertComplexConditionError\"),\n        };\n        super(properties);\n    }\n}\nexport class CanNotCreateAlreadyExistingDataSourceError extends SinaError {\n    constructor(dataSourceId: string) {\n        const properties: SinaErrorProperties = {\n            name: \"CanNotCreateAlreadyExistingDataSourceError\",\n            message: getText(\"error.sina.CanNotCreateAlreadyExistingDataSourceError\", [dataSourceId]),\n        };\n        super(properties);\n    }\n}\n\nexport class DataSourceInURLDoesNotExistError extends SinaError {\n    constructor(dataSourceId: string) {\n        const properties: SinaErrorProperties = {\n            name: \"DataSourceInURLDoesNotExistError\",\n            message: getText(\"error.sina.DataSourceInURLDoesNotExistError\", [dataSourceId]),\n        };\n        super(properties);\n    }\n}\n\nexport class DataSourceAttributeMetadataNotFoundError extends SinaError {\n    constructor(attributeId: string, dataSourceId: string) {\n        const properties: SinaErrorProperties = {\n            name: \"DataSourceAttributeMetadataNotFoundError\",\n            message: getText(\"error.sina.DataSourceAttributeMetadataNotFoundError.message\", [\n                attributeId,\n                dataSourceId,\n            ]),\n            solution: getText(\"error.sina.DataSourceAttributeMetadataNotFoundError.solution\"),\n        };\n        super(properties);\n    }\n}\n\nexport class NoValidEnterpriseSearchAPIConfigurationFoundError extends SinaError {\n    constructor(providersTried: string, err?: Error) {\n        const originalMessage = err?.message ?? \"\";\n        const properties: SinaErrorProperties = {\n            name: \"NoValidEnterpriseSearchAPIConfigurationFoundError\",\n            message: getText(\"error.sina.NoValidEnterpriseSearchAPIConfigurationFoundError.error\", [\n                providersTried,\n                originalMessage,\n            ]),\n            solution: getText(\"error.sina.NoValidEnterpriseSearchAPIConfigurationFoundError.solution\"),\n        };\n        if (err) {\n            properties.previous = err;\n        }\n        super(properties);\n    }\n}\n\nexport class SinaConfigurationError extends SinaError {\n    constructor(functionName: string, err: Error) {\n        const properties: SinaErrorProperties = {\n            name: \"SinaConfigurationError\",\n            message: getText(\"error.sina.SinaConfigurationError\", [functionName]),\n            previous: err,\n        };\n        super(properties);\n    }\n}\n\nexport class QueryIsReadOnlyError extends SinaError {\n    constructor() {\n        const properties: SinaErrorProperties = {\n            name: \"QueryIsReadOnlyError\",\n            message: getText(\"error.sina.QueryIsReadOnlyError\"),\n        };\n        super(properties);\n    }\n}\n\nexport class InBetweenConditionInConsistent extends SinaError {\n    constructor(message?: string) {\n        const properties: SinaErrorProperties = {\n            name: \"InBetweenConditionInConsistent\",\n            message: message ?? getText(\"error.sina.InBetweenConditionInConsistent.message\"),\n            solution: getText(\"error.sina.InBetweenConditionInConsistent.solution\"),\n        };\n        super(properties);\n    }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAJAA,GAAA,CAAAC,EAAA,CAAAC,MAAA,6BAAAC,YAAA;EAAA;;EAAA,MAMSC,OAAO,GAAAD,YAAA,aAGhB;EACA;EACA;EAUO,MAAeE,SAAS,SAASC,KAAK,CAAC;IAC1CC,OAAO;IACPC,OAAO;IACPC,QAAQ;IACRC,OAAO;IACP;IACAC,IAAI;IACJC,QAAQ;IAERC,WAAWA,CAACC,UAA+B,EAAE;MACzC,KAAK,CAACA,UAAU,CAACP,OAAO,CAAC;MACzB,IAAI,CAACA,OAAO,GAAGO,UAAU,CAACP,OAAO;MACjC,IAAI,CAACC,OAAO,GAAGM,UAAU,EAAEN,OAAO;MAClC,IAAI,CAACC,QAAQ,GAAGK,UAAU,CAACL,QAAQ;MACnC,IAAI,CAACC,OAAO,GAAGI,UAAU,EAAEJ,OAAO;MAClC,IAAI,CAACC,IAAI,GAAGG,UAAU,CAACH,IAAI,IAAI,WAAW;MAC1C,IAAI,CAACC,QAAQ,GAAGE,UAAU,CAACF,QAAQ;IACvC;IAEAG,QAAQA,CAAA,EAAW;MACf,OAAO,IAAI,CAACJ,IAAI,GAAG,IAAI,GAAG,IAAI,CAACJ,OAAO;IAC1C;EACJ;;EAEA;EACA;EACA;;EAEO,MAAMS,iBAAiB,SAASX,SAAS,CAAC;IAC7CQ,WAAWA,CAACI,KAA+D,EAAE;MACzE,MAAMH,UAA+B,GAAG;QACpCH,IAAI,EAAE,mBAAmB;QACzBJ,OAAO,EAAEU,KAAK,CAACV,OAAO,IAAIH,OAAO,CAAC,8BAA8B,CAAC;QACjEI,OAAO,EAAES,KAAK,CAACT,OAAO;QACtBI,QAAQ,EAAEK,KAAK,CAACL;MACpB,CAAC;MACD,KAAK,CAACE,UAAU,CAAC;IACrB;EACJ;;EAEA;EAAA,IACYI,eAAe,0BAAfA,eAAe;IAAfA,eAAe;IACR;IADPA,eAAe;IAER;IAFPA,eAAe;IAGR;IAHPA,eAAe;IAIR;IAJPA,eAAe;IAKR;IALPA,eAAe;IAMR;IANPA,eAAe;IAOR;IAPPA,eAAe;IAQR;IARPA,eAAe;IASR;IATPA,eAAe;IAUR;IAVPA,eAAe,mBAWR;IAAA,OAXPA,eAAe;EAAA,EAAfA,eAAe;EA+BpB,MAAMC,WAAW,SAASd,SAAS,CAAC;IACvCe,IAAI;IACJC,gBAAgB;IAChBC,OAAO;IACPC,QAAQ;IACRC,SAAS;IACTX,WAAWA,CAACC,UAAiC,EAAE;MAC3C,KAAK,CAAC;QACFH,IAAI,EAAE,aAAa;QACnBJ,OAAO,EAAEO,UAAU,CAACP,OAAO;QAC3BC,OAAO,EAAEM,UAAU,CAACN,OAAO;QAC3BI,QAAQ,EAAEE,UAAU,CAACF;MACzB,CAAC,CAAC;MACF,IAAI,CAACQ,IAAI,GAAGN,UAAU,CAACM,IAAI;MAC3B,IAAI,CAACC,gBAAgB,GAAGP,UAAU,CAACO,gBAAgB;MACnD,IAAI,CAACC,OAAO,GAAGR,UAAU,CAACQ,OAAO;MACjC,IAAI,CAACC,QAAQ,GAAGT,UAAU,CAACS,QAAQ;IACvC;EACJ;EAEO,MAAME,iBAAiB,SAASpB,SAAS,CAAC;IAC7CQ,WAAWA,CAACa,GAAW,EAAE;MACrB,KAAK,CAAC;QACFf,IAAI,EAAE,mBAAmB;QACzBJ,OAAO,EAAEH,OAAO,CAAC,8BAA8B,EAAE,CAACsB,GAAG,CAAC;MAC1D,CAAC,CAAC;IACN;EACJ;EAEO,MAAMC,mBAAmB,SAAStB,SAAS,CAAC;IAC/CQ,WAAWA,CAACI,KAA+D,EAAE;MACzE,KAAK,CAAC;QACFN,IAAI,EAAE,qBAAqB;QAC3BJ,OAAO,EAAEU,KAAK,CAACV,OAAO,IAAIH,OAAO,CAAC,+BAA+B,CAAC;QAClEI,OAAO,EAAES,KAAK,CAACT,OAAO;QACtBI,QAAQ,EAAEK,KAAK,CAACL;MACpB,CAAC,CAAC;IACN;EACJ;EAEO,MAAMgB,eAAe,SAASvB,SAAS,CAAC;IAC3CQ,WAAWA,CAACN,OAAgB,EAAE;MAC1B,MAAMO,UAA+B,GAAG;QACpCH,IAAI,EAAE,iBAAiB;QACvBJ,OAAO,EAAEA,OAAO,IAAIH,OAAO,CAAC,4BAA4B;MAC5D,CAAC;MACD,KAAK,CAACU,UAAU,CAAC;IACrB;EACJ;EAEO,MAAMe,YAAY,SAASxB,SAAS,CAAC;IACxCQ,WAAWA,CAACN,OAAgB,EAAE;MAC1B,MAAMO,UAA+B,GAAG;QACpCH,IAAI,EAAE,cAAc;QACpBJ,OAAO,EAAEA,OAAO,IAAIH,OAAO,CAAC,yBAAyB;MACzD,CAAC;MACD,KAAK,CAACU,UAAU,CAAC;IACrB;EACJ;EAEO,MAAMgB,mBAAmB,SAASzB,SAAS,CAAC;IAC/CQ,WAAWA,CAAA,EAAG;MACV,KAAK,CAAC;QAAEN,OAAO,EAAE,iBAAiB;QAAEI,IAAI,EAAE;MAAyB,CAAC,CAAC;IACzE;EACJ;EAEO,MAAMoB,2BAA2B,SAAS1B,SAAS,CAAC;IACvD,OAAuB2B,kBAAkB,GAAG,yBAAyB;IACrEnB,WAAWA,CAAA,EAAG;MACV,MAAMC,UAA+B,GAAG;QACpCH,IAAI,EAAE,6BAA6B;QACnCJ,OAAO,EAAE,2CAA2CwB,2BAA2B,CAACC,kBAAkB;MACtG,CAAC;MACD,KAAK,CAAClB,UAAU,CAAC;IACrB;EACJ;EAEO,MAAMmB,yBAAyB,SAAS5B,SAAS,CAAC;IACrDQ,WAAWA,CAACqB,aAAqB,EAAEtB,QAAgB,EAAE;MACjD,MAAME,UAA+B,GAAG;QACpCH,IAAI,EAAE,2BAA2B;QACjCJ,OAAO,EAAEH,OAAO,CAAC,sCAAsC,EAAE,CAAC8B,aAAa,CAAC,CAAC;QACzEtB;MACJ,CAAC;MACD,KAAK,CAACE,UAAU,CAAC;IACrB;EACJ;EAEO,MAAMqB,cAAc,SAAS9B,SAAS,CAAC;IAC1CQ,WAAWA,CAACN,OAAgB,EAAEK,QAAgB,EAAE;MAC5C,MAAME,UAA+B,GAAG;QACpCH,IAAI,EAAE,gBAAgB;QACtBJ,OAAO,EAAEA,OAAO,IAAIH,OAAO,CAAC,2BAA2B,CAAC;QACxDQ;MACJ,CAAC;MACD,KAAK,CAACE,UAAU,CAAC;IACrB;EACJ;EAEO,MAAMsB,mBAAmB,SAAS/B,SAAS,CAAC;IAC/CQ,WAAWA,CAACN,OAAgB,EAAEK,QAAgB,EAAE;MAC5C,MAAME,UAA+B,GAAG;QACpCH,IAAI,EAAE,qBAAqB;QAC3BJ,OAAO,EAAEA,OAAO,IAAIH,OAAO,CAAC,gCAAgC,CAAC;QAC7DQ;MACJ,CAAC;MACD,KAAK,CAACE,UAAU,CAAC;IACrB;EACJ;EAEO,MAAMuB,8BAA8B,SAAShC,SAAS,CAAC;IAC1DQ,WAAWA,CAACyB,QAAgB,EAAE;MAC1B,MAAMxB,UAA+B,GAAG;QACpCH,IAAI,EAAE,gCAAgC;QACtCJ,OAAO,EAAEH,OAAO,CAAC,2CAA2C,EAAE,CAACkC,QAAQ,CAAC;MAC5E,CAAC;MACD,KAAK,CAACxB,UAAU,CAAC;IACrB;EACJ;EAEO,MAAMyB,2BAA2B,SAASlC,SAAS,CAAC;IACvDQ,WAAWA,CAACyB,QAAgB,EAAE;MAC1B,MAAMxB,UAA+B,GAAG;QACpCH,IAAI,EAAE,6BAA6B;QACnCJ,OAAO,EAAEH,OAAO,CAAC,wCAAwC,EAAE,CAACkC,QAAQ,CAAC;MACzE,CAAC;MACD,KAAK,CAACxB,UAAU,CAAC;IACrB;EACJ;EAEO,MAAM0B,6BAA6B,SAASnC,SAAS,CAAC;IACzDQ,WAAWA,CAAC4B,iBAAyB,EAAE;MACnC,MAAM3B,UAA+B,GAAG;QACpCH,IAAI,EAAE,+BAA+B;QACrCJ,OAAO,EAAEH,OAAO,CAAC,0CAA0C,EAAE,CAACqC,iBAAiB,CAAC;MACpF,CAAC;MACD,KAAK,CAAC3B,UAAU,CAAC;IACrB;EACJ;EAEO,MAAM4B,oBAAoB,SAASrC,SAAS,CAAC;IAChDQ,WAAWA,CAAC8B,QAAgB,EAAE;MAC1B,MAAM7B,UAA+B,GAAG;QACpCH,IAAI,EAAE,sBAAsB;QAC5BJ,OAAO,EAAEH,OAAO,CAAC,iCAAiC,EAAE,CAACuC,QAAQ,CAAC;MAClE,CAAC;MACD,KAAK,CAAC7B,UAAU,CAAC;IACrB;EACJ;EAEO,MAAM8B,yBAAyB,SAASvC,SAAS,CAAC;IACrDQ,WAAWA,CAACgC,aAAqB,EAAE;MAC/B,MAAM/B,UAA+B,GAAG;QACpCH,IAAI,EAAE,2BAA2B;QACjCJ,OAAO,EAAEH,OAAO,CAAC,sCAAsC,EAAE,CAACyC,aAAa,CAAC;MAC5E,CAAC;MACD,KAAK,CAAC/B,UAAU,CAAC;IACrB;EACJ;EAEO,MAAMgC,gCAAgC,SAASzC,SAAS,CAAC;IAC5DQ,WAAWA,CAAA,EAAG;MACV,MAAMC,UAA+B,GAAG;QACpCH,IAAI,EAAE,kCAAkC;QACxCJ,OAAO,EAAEH,OAAO,CAAC,6CAA6C;MAClE,CAAC;MACD,KAAK,CAACU,UAAU,CAAC;IACrB;EACJ;EAEO,MAAMiC,mBAAmB,SAAS1C,SAAS,CAAC;IAC/CQ,WAAWA,CAACD,QAAe,EAAEoC,0BAA0C,EAAEC,YAAoB,EAAE;MAC3F,IAAIC,cAAc,GAAG,YAAY;MACjC,IAAID,YAAY,EAAEE,UAAU,CAAC,OAAO,CAAC,IAAIF,YAAY,EAAEE,UAAU,CAAC,OAAO,CAAC,EAAE;QACxED,cAAc,GAAG,MAAM;MAC3B,CAAC,MAAM,IAAID,YAAY,EAAEE,UAAU,CAAC,OAAO,CAAC,IAAIF,YAAY,EAAEE,UAAU,CAAC,OAAO,CAAC,EAAE;QAC/ED,cAAc,GAAG,KAAK;MAC1B;MACA,MAAMpC,UAA+B,GAAG;QACpCH,IAAI,EAAE,qBAAqB;QAC3BJ,OAAO,EAAEH,OAAO,CAAC,gCAAgC,EAAE,CAC/C4C,0BAA0B,EAC1BE,cAAc,EACdD,YAAY,CAACG,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,CAChC,CAAC;QACFxC,QAAQ,EAAEA;MACd,CAAC;MACD,KAAK,CAACE,UAAU,CAAC;IACrB;EACJ;EAEO,MAAMuC,iBAAiB,SAAShD,SAAS,CAAC;IAC7CQ,WAAWA,CAACN,OAAgB,EAAE;MAC1B,MAAMO,UAA+B,GAAG;QACpCH,IAAI,EAAE,mBAAmB;QACzBJ,OAAO,EAAEA,OAAO,IAAIH,OAAO,CAAC,8BAA8B;MAC9D,CAAC;MACD,KAAK,CAACU,UAAU,CAAC;IACrB;EACJ;EAEO,MAAMwC,kCAAkC,SAASjD,SAAS,CAAC;IAC9DQ,WAAWA,CAACN,OAAgB,EAAE;MAC1B,MAAMO,UAA+B,GAAG;QACpCH,IAAI,EAAE,oCAAoC;QAC1CJ,OAAO,EAAEA,OAAO,IAAIH,OAAO,CAAC,+CAA+C;MAC/E,CAAC;MACD,KAAK,CAACU,UAAU,CAAC;IACrB;EACJ;EAEO,MAAMyC,gBAAgB,SAASlD,SAAS,CAAC;IAC5CQ,WAAWA,CAACN,OAAgB,EAAE;MAC1B,MAAMO,UAA+B,GAAG;QACpCH,IAAI,EAAE,kBAAkB;QACxBJ,OAAO,EAAEA,OAAO,IAAIH,OAAO,CAAC,6BAA6B;MAC7D,CAAC;MACD,KAAK,CAACU,UAAU,CAAC;IACrB;EACJ;EAEO,MAAM0C,qCAAqC,SAASnD,SAAS,CAAC;IACjEQ,WAAWA,CAAC4C,WAAmB,EAAE;MAC7B,MAAM3C,UAA+B,GAAG;QACpCH,IAAI,EAAE,uCAAuC;QAC7CJ,OAAO,EAAEH,OAAO,CAAC,kDAAkD,EAAE,CAACqD,WAAW,CAAC;MACtF,CAAC;MACD,KAAK,CAAC3C,UAAU,CAAC;IACrB;EACJ;EAEO,MAAM4C,mBAAmB,SAASrD,SAAS,CAAC;IAC/CQ,WAAWA,CAAC8C,KAAa,EAAE;MACvB,MAAM7C,UAA+B,GAAG;QACpCH,IAAI,EAAE,qBAAqB;QAC3BJ,OAAO,EAAEH,OAAO,CAAC,gCAAgC,EAAE,CAACuD,KAAK,CAAC;MAC9D,CAAC;MACD,KAAK,CAAC7C,UAAU,CAAC;IACrB;EACJ;EAEO,MAAM8C,mBAAmB,SAASvD,SAAS,CAAC;IAC/CQ,WAAWA,CAAC8C,KAAa,EAAE;MACvB,MAAM7C,UAA+B,GAAG;QACpCH,IAAI,EAAE,qBAAqB;QAC3BJ,OAAO,EAAEH,OAAO,CAAC,gCAAgC,EAAE,CAACuD,KAAK,CAAC;MAC9D,CAAC;MACD,KAAK,CAAC7C,UAAU,CAAC;IACrB;EACJ;EAEO,MAAM+C,sCAAsC,SAASxD,SAAS,CAAC;IAClEQ,WAAWA,CAAA,EAAG;MACV,MAAMC,UAA+B,GAAG;QACpCH,IAAI,EAAE,wCAAwC;QAC9CJ,OAAO,EAAEH,OAAO,CAAC,mDAAmD;MACxE,CAAC;MACD,KAAK,CAACU,UAAU,CAAC;IACrB;EACJ;EACO,MAAMgD,0CAA0C,SAASzD,SAAS,CAAC;IACtEQ,WAAWA,CAACkD,YAAoB,EAAE;MAC9B,MAAMjD,UAA+B,GAAG;QACpCH,IAAI,EAAE,4CAA4C;QAClDJ,OAAO,EAAEH,OAAO,CAAC,uDAAuD,EAAE,CAAC2D,YAAY,CAAC;MAC5F,CAAC;MACD,KAAK,CAACjD,UAAU,CAAC;IACrB;EACJ;EAEO,MAAMkD,gCAAgC,SAAS3D,SAAS,CAAC;IAC5DQ,WAAWA,CAACkD,YAAoB,EAAE;MAC9B,MAAMjD,UAA+B,GAAG;QACpCH,IAAI,EAAE,kCAAkC;QACxCJ,OAAO,EAAEH,OAAO,CAAC,6CAA6C,EAAE,CAAC2D,YAAY,CAAC;MAClF,CAAC;MACD,KAAK,CAACjD,UAAU,CAAC;IACrB;EACJ;EAEO,MAAMmD,wCAAwC,SAAS5D,SAAS,CAAC;IACpEQ,WAAWA,CAAC4C,WAAmB,EAAEM,YAAoB,EAAE;MACnD,MAAMjD,UAA+B,GAAG;QACpCH,IAAI,EAAE,0CAA0C;QAChDJ,OAAO,EAAEH,OAAO,CAAC,6DAA6D,EAAE,CAC5EqD,WAAW,EACXM,YAAY,CACf,CAAC;QACFtD,QAAQ,EAAEL,OAAO,CAAC,8DAA8D;MACpF,CAAC;MACD,KAAK,CAACU,UAAU,CAAC;IACrB;EACJ;EAEO,MAAMoD,iDAAiD,SAAS7D,SAAS,CAAC;IAC7EQ,WAAWA,CAACsD,cAAsB,EAAEC,GAAW,EAAE;MAC7C,MAAMC,eAAe,GAAGD,GAAG,EAAE7D,OAAO,IAAI,EAAE;MAC1C,MAAMO,UAA+B,GAAG;QACpCH,IAAI,EAAE,mDAAmD;QACzDJ,OAAO,EAAEH,OAAO,CAAC,oEAAoE,EAAE,CACnF+D,cAAc,EACdE,eAAe,CAClB,CAAC;QACF5D,QAAQ,EAAEL,OAAO,CAAC,uEAAuE;MAC7F,CAAC;MACD,IAAIgE,GAAG,EAAE;QACLtD,UAAU,CAACF,QAAQ,GAAGwD,GAAG;MAC7B;MACA,KAAK,CAACtD,UAAU,CAAC;IACrB;EACJ;EAEO,MAAMwD,sBAAsB,SAASjE,SAAS,CAAC;IAClDQ,WAAWA,CAAC0D,YAAoB,EAAEH,GAAU,EAAE;MAC1C,MAAMtD,UAA+B,GAAG;QACpCH,IAAI,EAAE,wBAAwB;QAC9BJ,OAAO,EAAEH,OAAO,CAAC,mCAAmC,EAAE,CAACmE,YAAY,CAAC,CAAC;QACrE3D,QAAQ,EAAEwD;MACd,CAAC;MACD,KAAK,CAACtD,UAAU,CAAC;IACrB;EACJ;EAEO,MAAM0D,oBAAoB,SAASnE,SAAS,CAAC;IAChDQ,WAAWA,CAAA,EAAG;MACV,MAAMC,UAA+B,GAAG;QACpCH,IAAI,EAAE,sBAAsB;QAC5BJ,OAAO,EAAEH,OAAO,CAAC,iCAAiC;MACtD,CAAC;MACD,KAAK,CAACU,UAAU,CAAC;IACrB;EACJ;EAEO,MAAM2D,8BAA8B,SAASpE,SAAS,CAAC;IAC1DQ,WAAWA,CAACN,OAAgB,EAAE;MAC1B,MAAMO,UAA+B,GAAG;QACpCH,IAAI,EAAE,gCAAgC;QACtCJ,OAAO,EAAEA,OAAO,IAAIH,OAAO,CAAC,mDAAmD,CAAC;QAChFK,QAAQ,EAAEL,OAAO,CAAC,oDAAoD;MAC1E,CAAC;MACD,KAAK,CAACU,UAAU,CAAC;IACrB;EACJ;EAAC,IAAA4D,SAAA;IAAAC,UAAA;EAAA;EAAAD,SAAA,CAAArE,SAAA,GAAAA,SAAA;EAAAqE,SAAA,CAAA1D,iBAAA,GAAAA,iBAAA;EAAA0D,SAAA,CAAAxD,eAAA,GAAAA,eAAA;EAAAwD,SAAA,CAAAvD,WAAA,GAAAA,WAAA;EAAAuD,SAAA,CAAAjD,iBAAA,GAAAA,iBAAA;EAAAiD,SAAA,CAAA/C,mBAAA,GAAAA,mBAAA;EAAA+C,SAAA,CAAA9C,eAAA,GAAAA,eAAA;EAAA8C,SAAA,CAAA7C,YAAA,GAAAA,YAAA;EAAA6C,SAAA,CAAA5C,mBAAA,GAAAA,mBAAA;EAAA4C,SAAA,CAAA3C,2BAAA,GAAAA,2BAAA;EAAA2C,SAAA,CAAAzC,yBAAA,GAAAA,yBAAA;EAAAyC,SAAA,CAAAvC,cAAA,GAAAA,cAAA;EAAAuC,SAAA,CAAAtC,mBAAA,GAAAA,mBAAA;EAAAsC,SAAA,CAAArC,8BAAA,GAAAA,8BAAA;EAAAqC,SAAA,CAAAnC,2BAAA,GAAAA,2BAAA;EAAAmC,SAAA,CAAAlC,6BAAA,GAAAA,6BAAA;EAAAkC,SAAA,CAAAhC,oBAAA,GAAAA,oBAAA;EAAAgC,SAAA,CAAA9B,yBAAA,GAAAA,yBAAA;EAAA8B,SAAA,CAAA5B,gCAAA,GAAAA,gCAAA;EAAA4B,SAAA,CAAA3B,mBAAA,GAAAA,mBAAA;EAAA2B,SAAA,CAAArB,iBAAA,GAAAA,iBAAA;EAAAqB,SAAA,CAAApB,kCAAA,GAAAA,kCAAA;EAAAoB,SAAA,CAAAnB,gBAAA,GAAAA,gBAAA;EAAAmB,SAAA,CAAAlB,qCAAA,GAAAA,qCAAA;EAAAkB,SAAA,CAAAhB,mBAAA,GAAAA,mBAAA;EAAAgB,SAAA,CAAAd,mBAAA,GAAAA,mBAAA;EAAAc,SAAA,CAAAb,sCAAA,GAAAA,sCAAA;EAAAa,SAAA,CAAAZ,0CAAA,GAAAA,0CAAA;EAAAY,SAAA,CAAAV,gCAAA,GAAAA,gCAAA;EAAAU,SAAA,CAAAT,wCAAA,GAAAA,wCAAA;EAAAS,SAAA,CAAAR,iDAAA,GAAAA,iDAAA;EAAAQ,SAAA,CAAAJ,sBAAA,GAAAA,sBAAA;EAAAI,SAAA,CAAAF,oBAAA,GAAAA,oBAAA;EAAAE,SAAA,CAAAD,8BAAA,GAAAA,8BAAA;EAAA,OAAAC,SAAA;AAAA","ignoreList":[]}