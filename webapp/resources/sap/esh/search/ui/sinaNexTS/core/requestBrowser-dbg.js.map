{"version":3,"file":"requestBrowser-dbg.js","names":["sap","ui","define","___ajaxUtil","addEncodedUrlParameters","parseHeaders","requestBrowser","properties","Promise","resolve","xhttp","XMLHttpRequest","onreadystatechange","readyState","data","responseText","headers","getAllResponseHeaders","status","statusText","url","parameters","open","method","headerName","headerValue","setRequestHeader","send","__exports","__esModule"],"sources":["requestBrowser.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\nimport { RequestProperties, ResponseProperties } from \"./ajax\";\nimport { addEncodedUrlParameters, parseHeaders } from \"./ajaxUtil\";\n\nexport async function requestBrowser(properties: RequestProperties): Promise<ResponseProperties> {\n    return new Promise(function (resolve) {\n        // Browser\n        // new http request\n        const xhttp = new XMLHttpRequest();\n\n        // todo\n        // document github\n        // pull request\n        // manual test\n        // - search request\n        // - chart request\n        // - suggestion request\n        // - hierarchy request\n        // - error without result set\n        // - test csrf renewal\n        // - s/4\n        // - repoexplorer\n        // - initial duplicate error siutation\n        // - fallback abap_odata, dummy\n\n        // callback handler\n        xhttp.onreadystatechange = function () {\n            if (xhttp.readyState == 4) {\n                resolve({\n                    data: xhttp.responseText,\n                    headers: parseHeaders(xhttp.getAllResponseHeaders()),\n                    status: xhttp.status,\n                    statusText: xhttp.statusText,\n                });\n                return;\n            }\n        };\n\n        // add url parameters to url\n        const url = addEncodedUrlParameters(properties.url, properties.parameters);\n\n        // write headers to http request\n        xhttp.open(properties.method, url, true);\n        for (const headerName in properties.headers) {\n            const headerValue = properties.headers[headerName];\n            xhttp.setRequestHeader(headerName, headerValue);\n        }\n\n        // send\n        xhttp.send(properties.data);\n    });\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAJAA,GAAA,CAAAC,EAAA,CAAAC,MAAA,2BAAAC,WAAA;EAAA;;EAAA,MAMSC,uBAAuB,GAAAD,WAAA;EAAA,MAAEE,YAAY,GAAAF,WAAA;EAEvC,eAAeG,cAAcA,CAACC,UAA6B,EAA+B;IAC7F,OAAO,IAAIC,OAAO,CAAC,UAAUC,OAAO,EAAE;MAClC;MACA;MACA,MAAMC,KAAK,GAAG,IAAIC,cAAc,CAAC,CAAC;;MAElC;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;;MAEA;MACAD,KAAK,CAACE,kBAAkB,GAAG,YAAY;QACnC,IAAIF,KAAK,CAACG,UAAU,IAAI,CAAC,EAAE;UACvBJ,OAAO,CAAC;YACJK,IAAI,EAAEJ,KAAK,CAACK,YAAY;YACxBC,OAAO,EAAEX,YAAY,CAACK,KAAK,CAACO,qBAAqB,CAAC,CAAC,CAAC;YACpDC,MAAM,EAAER,KAAK,CAACQ,MAAM;YACpBC,UAAU,EAAET,KAAK,CAACS;UACtB,CAAC,CAAC;UACF;QACJ;MACJ,CAAC;;MAED;MACA,MAAMC,GAAG,GAAGhB,uBAAuB,CAACG,UAAU,CAACa,GAAG,EAAEb,UAAU,CAACc,UAAU,CAAC;;MAE1E;MACAX,KAAK,CAACY,IAAI,CAACf,UAAU,CAACgB,MAAM,EAAEH,GAAG,EAAE,IAAI,CAAC;MACxC,KAAK,MAAMI,UAAU,IAAIjB,UAAU,CAACS,OAAO,EAAE;QACzC,MAAMS,WAAW,GAAGlB,UAAU,CAACS,OAAO,CAACQ,UAAU,CAAC;QAClDd,KAAK,CAACgB,gBAAgB,CAACF,UAAU,EAAEC,WAAW,CAAC;MACnD;;MAEA;MACAf,KAAK,CAACiB,IAAI,CAACpB,UAAU,CAACO,IAAI,CAAC;IAC/B,CAAC,CAAC;EACN;EAAC,IAAAc,SAAA;IAAAC,UAAA;EAAA;EAAAD,SAAA,CAAAtB,cAAA,GAAAA,cAAA;EAAA,OAAAsB,SAAA;AAAA","ignoreList":[]}