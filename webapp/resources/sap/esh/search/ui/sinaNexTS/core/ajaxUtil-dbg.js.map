{"version":3,"file":"ajaxUtil-dbg.js","names":["sap","ui","define","encodeUrlParameters","parameters","result","name","value","push","encodeURIComponent","join","addEncodedUrlParameters","url","encodedParameters","length","index","indexOf","slice","parseHeaders","header","headers","lines","split","i","line","toLowerCase","trim","isNumberStringBooleanRecord","data","entry","__exports","__esModule"],"sources":["ajaxUtil.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\nexport function encodeUrlParameters(parameters: Record<string, unknown>): string {\n    const result = [];\n    for (const name in parameters) {\n        const value = parameters[name];\n        result.push(encodeURIComponent(name) + \"=\" + encodeURIComponent(value + \"\"));\n    }\n    return result.join(\"&\");\n}\n\nexport function addEncodedUrlParameters(url: string, parameters: Record<string, unknown>): string {\n    if (!parameters) {\n        return url;\n    }\n    const encodedParameters = encodeUrlParameters(parameters);\n    if (encodedParameters.length > 0) {\n        const index = url.indexOf(\"?\");\n        if (index >= 0) {\n            url = url.slice(0, index) + \"?\" + encodedParameters + \"&\" + url.slice(index + 1);\n        } else {\n            url += \"?\" + encodedParameters;\n        }\n    }\n    return url;\n}\n\nexport function parseHeaders(header: string): Record<string, string> {\n    const headers = {};\n    const lines = header.split(\"\\n\");\n    for (let i = 0; i < lines.length; ++i) {\n        const line = lines[i];\n        const index = line.indexOf(\":\");\n        if (index >= 0) {\n            const name = line.slice(0, index).toLowerCase(); // headers are case insensitive -> normalize to lower case\n            const value = line.slice(index + 1);\n            headers[name] = value.trim();\n        }\n    }\n    return headers;\n}\n\ntype EncodableData = Record<string | number | symbol, string | number | boolean>;\nexport function isNumberStringBooleanRecord(\n    data: Record<string | number | symbol, unknown>\n): data is EncodableData {\n    for (const entry in data) {\n        if (\n            typeof data[entry] !== \"boolean\" &&\n            typeof data[entry] !== \"string\" &&\n            typeof data[entry] !== \"number\"\n        ) {\n            return false;\n        }\n    }\n    return true;\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAJAA,GAAA,CAAAC,EAAA,CAAAC,MAAA;EAAA;;EAKO,SAASC,mBAAmBA,CAACC,UAAmC,EAAU;IAC7E,MAAMC,MAAM,GAAG,EAAE;IACjB,KAAK,MAAMC,IAAI,IAAIF,UAAU,EAAE;MAC3B,MAAMG,KAAK,GAAGH,UAAU,CAACE,IAAI,CAAC;MAC9BD,MAAM,CAACG,IAAI,CAACC,kBAAkB,CAACH,IAAI,CAAC,GAAG,GAAG,GAAGG,kBAAkB,CAACF,KAAK,GAAG,EAAE,CAAC,CAAC;IAChF;IACA,OAAOF,MAAM,CAACK,IAAI,CAAC,GAAG,CAAC;EAC3B;EAEO,SAASC,uBAAuBA,CAACC,GAAW,EAAER,UAAmC,EAAU;IAC9F,IAAI,CAACA,UAAU,EAAE;MACb,OAAOQ,GAAG;IACd;IACA,MAAMC,iBAAiB,GAAGV,mBAAmB,CAACC,UAAU,CAAC;IACzD,IAAIS,iBAAiB,CAACC,MAAM,GAAG,CAAC,EAAE;MAC9B,MAAMC,KAAK,GAAGH,GAAG,CAACI,OAAO,CAAC,GAAG,CAAC;MAC9B,IAAID,KAAK,IAAI,CAAC,EAAE;QACZH,GAAG,GAAGA,GAAG,CAACK,KAAK,CAAC,CAAC,EAAEF,KAAK,CAAC,GAAG,GAAG,GAAGF,iBAAiB,GAAG,GAAG,GAAGD,GAAG,CAACK,KAAK,CAACF,KAAK,GAAG,CAAC,CAAC;MACpF,CAAC,MAAM;QACHH,GAAG,IAAI,GAAG,GAAGC,iBAAiB;MAClC;IACJ;IACA,OAAOD,GAAG;EACd;EAEO,SAASM,YAAYA,CAACC,MAAc,EAA0B;IACjE,MAAMC,OAAO,GAAG,CAAC,CAAC;IAClB,MAAMC,KAAK,GAAGF,MAAM,CAACG,KAAK,CAAC,IAAI,CAAC;IAChC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,KAAK,CAACP,MAAM,EAAE,EAAES,CAAC,EAAE;MACnC,MAAMC,IAAI,GAAGH,KAAK,CAACE,CAAC,CAAC;MACrB,MAAMR,KAAK,GAAGS,IAAI,CAACR,OAAO,CAAC,GAAG,CAAC;MAC/B,IAAID,KAAK,IAAI,CAAC,EAAE;QACZ,MAAMT,IAAI,GAAGkB,IAAI,CAACP,KAAK,CAAC,CAAC,EAAEF,KAAK,CAAC,CAACU,WAAW,CAAC,CAAC,CAAC,CAAC;QACjD,MAAMlB,KAAK,GAAGiB,IAAI,CAACP,KAAK,CAACF,KAAK,GAAG,CAAC,CAAC;QACnCK,OAAO,CAACd,IAAI,CAAC,GAAGC,KAAK,CAACmB,IAAI,CAAC,CAAC;MAChC;IACJ;IACA,OAAON,OAAO;EAClB;EAGO,SAASO,2BAA2BA,CACvCC,IAA+C,EAC1B;IACrB,KAAK,MAAMC,KAAK,IAAID,IAAI,EAAE;MACtB,IACI,OAAOA,IAAI,CAACC,KAAK,CAAC,KAAK,SAAS,IAChC,OAAOD,IAAI,CAACC,KAAK,CAAC,KAAK,QAAQ,IAC/B,OAAOD,IAAI,CAACC,KAAK,CAAC,KAAK,QAAQ,EACjC;QACE,OAAO,KAAK;MAChB;IACJ;IACA,OAAO,IAAI;EACf;EAAC,IAAAC,SAAA;IAAAC,UAAA;EAAA;EAAAD,SAAA,CAAA3B,mBAAA,GAAAA,mBAAA;EAAA2B,SAAA,CAAAnB,uBAAA,GAAAA,uBAAA;EAAAmB,SAAA,CAAAZ,YAAA,GAAAA,YAAA;EAAAY,SAAA,CAAAH,2BAAA,GAAAA,2BAAA;EAAA,OAAAG,SAAA;AAAA","ignoreList":[]}