/*!
 * SAPUI5
 * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.
 * 
 */
sap.ui.define(["../AbstractProvider","./FacetMode","./FederationType","./ProviderHelper","../../sina/Sina","./FederationMethod","../../core/Log","../../sina/SinaConfiguration","../abap_odata/Provider","../hana_odata/Provider","../sample/Provider","../sample2/Provider","../inav2/Provider","../dummy/Provider","../../core/errors","../../sina/FacetType"],function(e,t,a,r,s,i,o,n,c,u,l,d,h,S,p,f){"use strict";function m(e){return new Promise(function(t,a){sap.ui.require([e],function(a){if(!(a&&a.__esModule)){a=a===null||!(typeof a==="object"&&e.endsWith("/library"))?{default:a}:a;Object.defineProperty(a,"__esModule",{value:true})}t(a)},function(e){a(e)})})}const g=e["AbstractProvider"];const y=t["FacetMode"];const v=a["FederationType"];const M=r["ProviderHelper"];const b=s["Sina"];const D=o["Log"];const C=n["AvailableProviders"];const A=n["_normalizeConfiguration"];const P=c["Provider"];const T=u["Provider"];const R=l["Provider"];const k=d["Provider"];const w=h["Provider"];const F=S["Provider"];const O=p["NotImplementedError"];const _=f["FacetType"];var H=function(e){e["All"]="All";e["UserCategory"]="UserCategory";e["BusinessObject"]="BusinessObject";e["Category"]="Category";return e}(H||{});class E extends g{log;id="multi";facetMode;federationType;multiSina;multiDataSourceMap;providerHelper;federationMethod;async initAsync(e){this.log=new D("MultiProvider");this.sina=e.sina;this.facetMode=y[e.facetMode]||y.flat;this.federationType=v[e.federationType]||v.advanced_round_robin;this.multiSina=[];this.multiDataSourceMap={};this.sina.dataSourceMap[this.sina.allDataSource.id]=this.sina.allDataSource;this.providerHelper=new M(this);switch(this.federationType){case v.advanced_round_robin:{this.federationMethod=new i.AdvancedRoundRobin;break}case v.ranking:{this.federationMethod=new i.Ranking;break}case v.round_robin:{this.federationMethod=new i.RoundRobin;break}}this.sina.capabilities=this.sina._createCapabilities({fuzzy:false});const t=[];e.subProviders.forEach(e=>{const a=this.createAsync(e).then(e=>{this.providerHelper.updateProviderId(e);for(let t=0;t<e.dataSources.length;t++){const a=e.dataSources[t];const r=this.providerHelper.calculateMultiDataSourceId(a.id,e.provider.id);this.providerHelper.createMultiDataSource(r,a);this.multiDataSourceMap[r]=a}this.multiSina.push(e);return e});t.push(a)});let a=false;const r=await Promise.allSettled(t);r.forEach(e=>{if(e.status==="rejected"){this.log.warn(`Error during creation of subprovider: ${e.reason.stack}`)}else if(e.status==="fulfilled"){a=true;if(e.value.capabilities.fuzzy){this.sina.capabilities.fuzzy=true}}});if(!a){const t=e.subProviders.map(e=>e.label||e.contentProviderId).join(", ");this.log.error(`Error during creation of multi provider: No valid subproviders: ${t}`);return Promise.reject()}this.sina.dataSources.sort(function(e,t){return e.labelPlural.localeCompare(t.labelPlural)});return this.sina}async createAsync(e){this.log.debug(`Creating new sina (esh client) instance using provider ${e.provider}`);const t=await A(e);let a;switch(t.provider){case C.HANA_ODATA:{a=new T;break}case C.ABAP_ODATA:{a=new P;break}case C.INAV2:{a=new w;break}case C.MULTI:{a=new E;break}case C.SAMPLE:{a=new R;break}case C.SAMPLE2:{a=new k;break}case C.MOCK_NLQRESULTS:{const e=await m("/sap/esh/search/ui/sinaNexTS/providers/mock/MockNlqResultsProvider");a=new e.MockNlqResultsProvider;break}case C.MOCK_SUGGESTIONTYPES:{const e=await m("/sap/esh/search/ui/sinaNexTS/providers/mock/MockSuggestionTypesProvider");a=new e.MockSuggestionTypesProvider;break}case C.DUMMY:{a=new F;break}case C.MOCK_DELETEANDREORDER:{const e=await m("/sap/esh/search/ui/sinaNexTS/providers/mock/MockDeleteAndReorderProvider");a=new e.MockDeleteAndReorderProvider;break}default:{throw new Error(`Unknown Provider: '${e.provider}' - Available Providers: ${C.HANA_ODATA}, ${C.ABAP_ODATA}, ${C.INAV2}, ${C.MULTI}, ${C.SAMPLE}, ${C.SAMPLE2}, ${C.DUMMY}.`)}}const r=new b(a);await r.initAsync(t);return r}getFilterDataSourceType(e){if(e===this.sina.allDataSource){return H.All}if(e.type===this.sina.DataSourceType.UserCategory){return H.UserCategory}if(e.type===this.sina.DataSourceType.BusinessObject){return H.BusinessObject}if(e.type===this.sina.DataSourceType.Category){return H.Category}}async handleAllSearch(e){let t;const a=[];const r=this.initializeSearchResultSet(e);const s=[];r.facets.push(this.sina._createDataSourceResultSet({title:e.filter.dataSource.label,items:[],query:e,facetTotalCount:undefined}));for(let r=0;r<this.multiSina.length;r++){t=this.multiSina[r].createSearchQuery({calculateFacets:e.calculateFacets,multiSelectFacets:e.multiSelectFacets,dataSource:this.multiSina[r].allDataSource,searchTerm:e.getSearchTerm(),top:e.top,skip:e.skip,nlq:e.nlq,sortOrder:e.sortOrder,sina:this.multiSina[r]});a.push(t.getResultSetAsync())}return Promise.all(a).then(t=>{for(let e=0;e<t.length;e++){const a=t[e];for(let e=0;e<a.items.length;e++){const t=a.items[e];const r=this.providerHelper.calculateMultiDataSourceId(t.dataSource.id,t.sina.provider.id);const s=this.sina.dataSourceMap[r];t.dataSource=s;t.sina=this.sina}r.totalCount+=a.totalCount;s.push(...a.items);if(a.facets[0]){if(this.facetMode===y.tree){const e=this.sina.getDataSource(this.providerHelper.calculateMultiDataSourceId(a.query.filter.dataSource.id,a.sina.provider.id));r.facets[0].items.push(this.sina._createDataSourceResultSetItem({dataSource:e,dimensionValueFormatted:this.providerHelper.calculateMultiDataSourceLabel(a.query.filter.dataSource.label,a.sina.provider),measureValue:a.totalCount,measureValueFormatted:a.totalCount.toString()}))}else{const e=this.providerHelper.updateDataSourceFacets(a.facets);e[0].items.forEach(e=>{r.facets[0].items.push(e)})}}}r.items=this.federationMethod.sort(s);r.items=r.items.slice(e.skip,e.top);return r})}async handleUserCategorySearch(e){let t;const a=[];const r=this.initializeSearchResultSet(e);const s=[];const i=e.filter.dataSource;const o=[];this.multiSina.forEach(e=>{if(e.provider.id.startsWith("abap_odata")||e.provider.id.startsWith("sample")){const t=this.providerHelper.calculateMultiDataSourceId(i.id,e.provider.id);let a=this.multiDataSourceMap[t];if(!a){a=e.createDataSource({id:t,label:i.label,labelPlural:i.labelPlural,type:i.type,subDataSources:[],undefinedSubDataSourceIds:[]});this.multiDataSourceMap[t]=a}else{a.subDataSources=[]}}});i.subDataSources.forEach(e=>{const t=this.multiDataSourceMap[e.id];const a=t.sina;if(a.provider.id.startsWith("abap_odata")||a.provider.id.startsWith("sample")){const e=this.providerHelper.calculateMultiDataSourceId(i.id,a.provider.id);const r=this.multiDataSourceMap[e];if(r.subDataSources.length===0){o.push(r)}r.subDataSources.push(t)}else{o.push(t)}});o.forEach(r=>{t=r.sina.createSearchQuery({calculateFacets:e.calculateFacets,multiSelectFacets:e.multiSelectFacets,dataSource:r,searchTerm:e.getSearchTerm(),top:e.top,skip:e.skip,nlq:e.nlq,sortOrder:e.sortOrder,sina:r.sina});a.push(t.getResultSetAsync())});return Promise.all(a).then(t=>{r.facets.push(this.sina._createDataSourceResultSet({title:e.filter.dataSource.label,items:[],query:e,facetTotalCount:undefined}));for(let a=0;a<t.length;a++){const i=t[a];for(let e=0;e<i.items.length;e++){const t=i.items[e];const a=this.providerHelper.calculateMultiDataSourceId(t.dataSource.id,t.sina.provider.id);const r=this.sina.dataSourceMap[a];t.dataSource=r;t.sina=this.sina}r.totalCount+=i.totalCount;s.push(...i.items);if(e.calculateFacets){const e=i.query.filter.dataSource;const t=i.sina._createDataSourceResultSet({title:e.label,items:[],query:i.query,facetTotalCount:undefined});if(i.facets.length===0&&i.items.length>0){t.items.push(i.sina._createDataSourceResultSetItem({dataSource:e.subDataSources[0],dimensionValueFormatted:e.subDataSources[0].label,measureValue:i.totalCount,measureValueFormatted:i.totalCount.toString()}));i.facets.push(t)}if(i.facets.length>0&&i.facets[0].type===_.Chart&&i.items.length>0){t.items.push(i.sina._createDataSourceResultSetItem({dataSource:e,dimensionValueFormatted:e.label,measureValue:i.totalCount,measureValueFormatted:i.totalCount.toString()}));i.facets=[t]}if(i.facets.length===1&&i.facets[0].type===_.DataSource){this.providerHelper.updateDataSourceFacets(i.facets);r.facets[0].items=r.facets[0].items.concat(i.facets[0].items)}}}r.items=this.federationMethod.sort(s);r.items=r.items.slice(e.skip,e.top);return r})}async handleBusinessObjectSearch(e){const t=this.multiDataSourceMap[e.filter.dataSource.id];if(t===undefined){throw new Error(`Data source with id '${e.filter.dataSource.id}' does not exist.`)}const a=e.getRootCondition().clone();const r=this.initializeSearchResultSet(e);this.providerHelper.updateRootCondition(a,t.sina);const s=t.sina.createSearchQuery({calculateFacets:e.calculateFacets,multiSelectFacets:e.multiSelectFacets,dataSource:t,searchTerm:e.getSearchTerm(),rootCondition:e.getRootCondition(),top:e.top,skip:e.skip,nlq:e.nlq,sortOrder:e.sortOrder,sina:t.sina});return s.getResultSetAsync().then(e=>{r.items=e.items;r.totalCount=e.totalCount;for(let e=0;e<r.items.length;e++){const t=r.items[e];const a=this.providerHelper.calculateMultiDataSourceId(t.dataSource.id,t.sina.provider.id);this.providerHelper.updateAttributesMetadata(t.dataSource,this.sina.dataSourceMap[a]);t.dataSource=this.sina.dataSourceMap[a];t.sina=this.sina}let t;if(e.facets.length===1&&e.facets[0].items[0].dataSource){t=e.facets;t[0].title=this.providerHelper.calculateMultiDataSourceLabel(e.facets[0].title,e.facets[0].sina.provider);this.providerHelper.updateDataSourceFacets(t)}else{t=[];for(let a=0;a<e.facets.length;a++){const r=e.facets[a];t.push(this.providerHelper.createMultiChartResultSet(r))}}r.facets=t;return r})}initializeSearchResultSet(e){return this.sina._createSearchResultSet({title:"Search Multi Result List",query:e,items:[],totalCount:0,facets:[]})}executeSearchQuery(e){switch(this.getFilterDataSourceType(e.filter.dataSource)){case H.All:return this.handleAllSearch(e);case H.UserCategory:return this.handleUserCategorySearch(e);case H.BusinessObject:case H.Category:return this.handleBusinessObjectSearch(e)}}executeChartQuery(e){const t=this;const a=t.multiDataSourceMap[e.filter.dataSource.id];const r=e.getRootCondition().clone();t.providerHelper.updateRootCondition(r,a.sina);const s=a.sina.createChartQuery({dimension:e.dimension,dataSource:a,searchTerm:e.getSearchTerm(),rootCondition:r,top:e.top,skip:e.skip,nlq:e.nlq,sortOrder:e.sortOrder});return s.getResultSetAsync().then(function(e){return t.providerHelper.createMultiChartResultSet(e)})}executeHierarchyQuery(e){throw new O}async handleAllSuggestionSearch(e){let t;const a=[];for(let r=0;r<this.multiSina.length;r++){t=this.multiSina[r].createSuggestionQuery({types:e.types,calculationModes:e.calculationModes,dataSource:this.multiSina[r].allDataSource,searchTerm:e.getSearchTerm(),top:e.top,skip:e.skip,sortOrder:e.sortOrder});a.push(t.getResultSetAsync())}return Promise.allSettled(a).then(t=>{const a=this.sina._createSuggestionResultSet({title:"Multi Suggestions",query:e,items:[]});for(let e=0;e<t.length;e++){const r=t[e];if(r.status==="fulfilled"){const t=this.providerHelper.updateSuggestionDataSource(r.value);a.items=(new i.RoundRobin).mergeMultiResults(a.items,t.items,e+1)}}return a})}async handleUserCategorySuggestionSearch(e){if(e.types.indexOf(this.sina.SuggestionType.DataSource)>=0){return this.handleAllSuggestionSearch(e)}else{const t=this.sina._createSuggestionResultSet({title:"Multi Suggestions - My Favorites",query:e,items:[]});return Promise.resolve(t)}}async handleBusinessObjectSuggestionSearch(e){const t=this.multiDataSourceMap[e.filter.dataSource.id];const a=t.sina.createFilter({searchTerm:e.getSearchTerm(),dataSource:t,rootCondition:e.filter.rootCondition.clone()});const r=t.sina.createSuggestionQuery({types:e.types,calculationModes:e.calculationModes,top:e.top,skip:e.skip,sortOrder:e.sortOrder,filter:a});return r.getResultSetAsync().then(e=>this.providerHelper.updateSuggestionDataSource(e))}executeSuggestionQuery(e){switch(this.getFilterDataSourceType(e.filter.dataSource)){case H.All:return this.handleAllSuggestionSearch(e);case H.UserCategory:return this.handleUserCategorySuggestionSearch(e);case H.BusinessObject:case H.Category:return this.handleBusinessObjectSuggestionSearch(e)}}}var q={__esModule:true};q.MultiProvider=E;return q});
//# sourceMappingURL=Provider.js.map