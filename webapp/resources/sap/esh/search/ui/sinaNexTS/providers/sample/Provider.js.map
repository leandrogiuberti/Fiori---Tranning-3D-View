{"version":3,"file":"Provider.js","names":["sap","ui","define","____core_errors","____core_util","____sina_ComparisonOperator","____sina_ComplexCondition","____sina_SearchQuery","____sina_SearchResultSetItemAttribute","____sina_SimpleCondition","____sina_UserCategoryDataSource","___AbstractProvider","___template","___template2","ForcedBySearchTermTestError","NotImplementedError","escapeRegExp","ComparisonOperator","ComplexCondition","SearchQuery","SearchResultSetItemAttribute","SimpleCondition","UserCategoryDataSource","AbstractProvider","template","template2","Provider","static","All","Urban_Legends","Folklorists","Publications","Scientists","Mysterious_Sightings","id","searchQuery","templateProvider","constructor","super","this","initAsync","properties","sina","document","location","href","indexOf","demoRoot","_init","res","Promise","resolve","capabilities","_createCapabilities","fuzzy","getSuggestionList","templateData","listAsString","_stringify","regexp","RegExp","matches","match","map","m","replace","singleWords","toString","split","concat","filter","item","pos","o","cache","s","JSON","stringify","key","value","undefined","push","applyFilters","items","newItemsArray","rootCondition","conditions","length","dataSource","subDataSources","find","subDataSource","toBeDimensionValuePairsArray","toBeDimensionsArray","condition","attribute","operator","fits","g","h","i","fitsArray","j","k","detailAttributes","detailAttribute","checkFilterValueMatch","titleAttributes","titleAttribute","fitsArray2","uniqueDimensionsArray","n","dimension","p","itemValue","filterValue","filterOperator","Co","toLowerCase","includes","Eq","Ne","Gt","Ge","Lt","Le","adjustHighlights","searchTerm","attrMetadataType","neverFound","titleHighlighted","addHighlight","title","detailAttr","metadata","type","valueHighlighted","valueFormatted","titleAttr","hText","pos1","pos2","newHText","substring","addSuvLinkToSearchResultItem","searchResultItem","suvPath","searchTermsArray","suvNavTargetResolver","_createSuvNavTargetResolver","suvAttributes","obj","suvThumbnailAttribute","suvTargetMimeTypeAttribute","suvTargetUrlAttribute","resolveSuvNavTargets","executeSearchQuery","resultSet","itemsRoot","items1","searchResultSetItemArray","items2","searchResultSetItemArray2","itemsAll","items3","searchResultSetItemArray3","dataSourceId","dataSourceType","facets1","generateFacets","forcedBySearchTerm","dataSourceIds","_createSearchResultSet","facets","query","totalCount","DataSourceType","UserCategory","forEach","measureValue","measureValueFormatted","totalCount1","totalCount2","totalCount3","finalItems","skip","top","executeHierarchyQuery","executeSuggestionQuery","searchAbleItems","suggestionTerms","suggestionsMatchingSearchterm","suggestions","createSuggestionItem","term","calculationMode","SuggestionCalculationMode","Data","clone","setSearchTerm","_createSearchTermSuggestion","label","_createSuggestionResultSet","executeChartQuery","chartResultSetItems","whichChart","getChartResultSetItemsForLocations","resultSetItemsArray","locations","chartResultSetItem","attrs","_createChartResultSetItem","filterCondition","createSimpleCondition","attributeLabel","dimensionValueFormatted","getChartResultSetItemsForPublications","publication","publications","getSientistOrFolkloristFacet","scientisOrFolklorist","scientisOrFolklorists","getTopFacetOnly","allDataSource","dataSourceItems","_createDataSourceResultSetItem","dataSources","labelPlural","dataSourceFacets","_createDataSourceResultSet","facetTotalCount","calculateFacets","chartResultSetArray","chartResultSet","gen","createFilter","_createChartResultSet","createChartQuery","info","charAt","toUpperCase","slice","__exports","__esModule"],"sources":["Provider.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\nimport { ForcedBySearchTermTestError, NotImplementedError } from \"../../core/errors\";\nimport { escapeRegExp } from \"../../core/util\";\nimport { Capabilities } from \"../../sina/Capabilities\";\nimport { ChartQuery } from \"../../sina/ChartQuery\";\nimport { ChartResultSet } from \"../../sina/ChartResultSet\";\nimport { ComparisonOperator } from \"../../sina/ComparisonOperator\";\nimport { ComplexCondition } from \"../../sina/ComplexCondition\";\nimport { FacetResultSet } from \"../../sina/FacetResultSet\";\nimport { HierarchyQuery } from \"../../sina/HierarchyQuery\";\nimport { HierarchyResultSet } from \"../../sina/HierarchyResultSet\";\nimport { SearchQuery } from \"../../sina/SearchQuery\";\nimport { SearchResultSet } from \"../../sina/SearchResultSet\";\nimport { SearchResultSetItem } from \"../../sina/SearchResultSetItem\";\nimport { SearchResultSetItemAttribute } from \"../../sina/SearchResultSetItemAttribute\";\nimport { SimpleCondition } from \"../../sina/SimpleCondition\";\nimport { Sina } from \"../../sina/Sina\";\nimport { SuggestionQuery } from \"../../sina/SuggestionQuery\";\nimport { SuggestionResultSet } from \"../../sina/SuggestionResultSet\";\nimport { UserCategoryDataSource } from \"../../sina/UserCategoryDataSource\";\nimport { AbstractProvider } from \"../AbstractProvider\";\nimport { SuvAttribute } from \"../tools/fiori/SuvNavTargetResolver\";\nimport { ITemplate } from \"./ITemplate\";\nimport { createTemplate as template } from \"./template\";\nimport { createTemplate as template2 } from \"./template2\";\n\ntype ValueType =\n    | unknown\n    | Date\n    | number\n    | {\n          type: string;\n          value: string;\n      };\n\nexport class Provider extends AbstractProvider {\n    static readonly dataSourceIds = {\n        All: \"All\",\n        Urban_Legends: \"Urban_Legends\",\n        Folklorists: \"Folklorists\",\n        Publications: \"Publications\",\n        Scientists: \"Scientists\",\n        Mysterious_Sightings: \"Mysterious_Sightings\",\n    };\n    readonly id: string;\n    searchQuery: SearchQuery;\n    templateProvider: (oContext: Provider) => ITemplate;\n\n    constructor() {\n        super();\n        this.id = \"sample\";\n    }\n\n    async initAsync(properties: { sina: Sina }): Promise<{ capabilities: Capabilities }> {\n        this.sina = properties.sina;\n        this.templateProvider = template; // the newer template, folklorists\n        if (document.location.href.indexOf(\"use=sample1\") > 0) {\n            this.templateProvider = template2; // the original template, scientists\n        }\n        const demoRoot: ITemplate = this.templateProvider(this);\n        demoRoot._init(demoRoot);\n        const res = Promise.resolve({\n            capabilities: this.sina._createCapabilities({\n                fuzzy: false,\n            }),\n        });\n\n        return res;\n    }\n\n    private getSuggestionList(templateData) {\n        const listAsString = this._stringify(templateData);\n        /* eslint no-useless-escape:0 */\n        const regexp = new RegExp('\"valueFormatted\":\"([^{/]+?)\",\"valueHighlighted', \"g\");\n        let matches = listAsString.match(regexp).map((m) => m.replace(regexp, \"$1\"));\n        const singleWords = matches.toString().split(/\\W/);\n        matches = matches.concat(singleWords);\n        // remove duplicates\n        matches = matches.filter(function (item, pos) {\n            if (item !== \"\") {\n                return matches.indexOf(item) == pos;\n            }\n        });\n        return matches;\n    }\n\n    private _stringify(o): string {\n        let cache = [];\n        const s = JSON.stringify(o, function (key, value) {\n            if (typeof value === \"object\" && value !== null) {\n                if (cache.indexOf(value) !== -1) {\n                    // circular reference found, discard key\n                    return undefined;\n                }\n                // Store value in our collection\n                cache.push(value);\n            }\n            return value;\n        });\n        cache = null; // enable garbage collection\n        return s;\n    }\n\n    private applyFilters(\n        items: Array<SearchResultSetItem>,\n        searchQuery: SearchQuery\n    ): Array<SearchResultSetItem> {\n        const newItemsArray = [];\n        if (searchQuery.filter.rootCondition instanceof SimpleCondition) {\n            // quick select data source, nothing to do here\n        } else {\n            if (\n                (searchQuery.filter.rootCondition as ComplexCondition).conditions.length === 0 ||\n                (searchQuery.filter.rootCondition as ComplexCondition).conditions[0] instanceof\n                    SimpleCondition ||\n                ((searchQuery.filter.rootCondition as ComplexCondition).conditions[0] instanceof\n                    ComplexCondition &&\n                    ((searchQuery.filter.rootCondition as ComplexCondition).conditions[0] as ComplexCondition)\n                        .conditions.length === 0)\n            ) {\n                // return only items whose dataSource Id is included in subDataSources\n                if (searchQuery.filter.dataSource instanceof UserCategoryDataSource) {\n                    const subDataSources = (searchQuery.filter.dataSource as UserCategoryDataSource)\n                        .subDataSources;\n                    if (subDataSources) {\n                        return items.filter((item) =>\n                            subDataSources.find((subDataSource) => subDataSource.id === item.dataSource.id)\n                        );\n                    }\n                } /* else if (\"quick select data source\") {\n                     ToDo\n                } */\n                return items;\n            }\n        }\n\n        interface filterDataSimple {\n            attribute: string;\n            operator: ComparisonOperator;\n            value: ValueType;\n            fits: boolean;\n        }\n\n        const toBeDimensionValuePairsArray: Array<filterDataSimple> = [];\n        const toBeDimensionsArray = [];\n        if (searchQuery.filter.rootCondition instanceof SimpleCondition /* quick select data source */) {\n            const condition: SimpleCondition = searchQuery.filter.rootCondition;\n            toBeDimensionValuePairsArray.push({\n                attribute: condition.attribute,\n                operator: condition.operator,\n                value: condition.value,\n                fits: false,\n            });\n            toBeDimensionsArray.push(condition.attribute);\n        } else {\n            for (\n                let g = 0;\n                g < (searchQuery.filter.rootCondition as ComplexCondition).conditions.length;\n                g++\n            ) {\n                const conditions = (\n                    (searchQuery.filter.rootCondition as ComplexCondition).conditions[g] as ComplexCondition\n                ).conditions as Array<SimpleCondition>;\n                if (conditions) {\n                    for (let h = 0; h < conditions.length; h++) {\n                        toBeDimensionValuePairsArray.push({\n                            attribute: conditions[h].attribute,\n                            value: conditions[h].value,\n                            operator: conditions[h].operator,\n                            fits: false,\n                        });\n                        toBeDimensionsArray.push(conditions[h].attribute);\n                    }\n                }\n            }\n        }\n        let fits = false;\n        for (let i = 0; i < items.length; i++) {\n            // compare items with collected to-be-valid conditions\n            const item = items[i];\n            const fitsArray = [];\n            for (let j = 0; j < toBeDimensionValuePairsArray.length; j++) {\n                fits = false;\n                for (let k = 0; k < item.detailAttributes.length; k++) {\n                    // loop thru all detailAttributes of item\n                    const detailAttribute = item.detailAttributes[k];\n                    if (detailAttribute instanceof SearchResultSetItemAttribute) {\n                        if (\n                            detailAttribute.id === toBeDimensionValuePairsArray[j].attribute &&\n                            this.checkFilterValueMatch(\n                                detailAttribute.value,\n                                toBeDimensionValuePairsArray[j].value,\n                                toBeDimensionValuePairsArray[j].operator\n                            )\n                        ) {\n                            fits = true;\n                        }\n                    }\n                }\n                for (let m = 0; m < item.titleAttributes.length; m++) {\n                    // loop thru all titleAttributes of item\n                    const titleAttribute = item.titleAttributes[m];\n                    if (titleAttribute instanceof SearchResultSetItemAttribute) {\n                        if (\n                            titleAttribute.id === toBeDimensionValuePairsArray[j].attribute &&\n                            this.checkFilterValueMatch(\n                                titleAttribute.value,\n                                toBeDimensionValuePairsArray[j].value,\n                                toBeDimensionValuePairsArray[j].operator\n                            )\n                        ) {\n                            fits = true;\n                        }\n                    }\n                }\n                toBeDimensionValuePairsArray[j].fits = fits;\n                fitsArray.push(fits);\n            }\n            if (fitsArray.toString().match(/false/) === null) {\n                newItemsArray.push(item);\n            } else {\n                // see if there is one 'true' match for each unique dimension, if so we can still add item\n                const fitsArray2 = [];\n                const uniqueDimensionsArray = toBeDimensionsArray.filter(function (item, pos) {\n                    return toBeDimensionsArray.indexOf(item) == pos;\n                });\n                for (let n = 0; n < uniqueDimensionsArray.length; n++) {\n                    fits = false;\n                    const dimension = uniqueDimensionsArray[n];\n                    for (let p = 0; p < toBeDimensionValuePairsArray.length; p++) {\n                        if (\n                            toBeDimensionValuePairsArray[p].attribute === dimension &&\n                            toBeDimensionValuePairsArray[p].fits === true\n                        ) {\n                            fits = true;\n                            break;\n                        }\n                    }\n                    fitsArray2.push(fits);\n                }\n                if (fitsArray2.toString().match(/false/) === null) {\n                    newItemsArray.push(item);\n                }\n            }\n        }\n\n        return newItemsArray;\n    }\n\n    private checkFilterValueMatch(\n        itemValue: ValueType,\n        filterValue: ValueType,\n        filterOperator: ComparisonOperator\n    ): boolean {\n        switch (filterOperator) {\n            case ComparisonOperator.Co: {\n                return (itemValue as string)\n                    .toLowerCase()\n                    .includes((filterValue as string).toLowerCase() as string);\n            }\n            case ComparisonOperator.Eq: {\n                return filterValue === itemValue;\n            }\n            case ComparisonOperator.Ne: {\n                return filterValue !== itemValue;\n            }\n            case ComparisonOperator.Gt: {\n                return filterValue > itemValue;\n            }\n            case ComparisonOperator.Ge: {\n                return filterValue >= itemValue;\n            }\n            case ComparisonOperator.Lt: {\n                return filterValue < itemValue;\n            }\n            case ComparisonOperator.Le: {\n                return filterValue <= itemValue;\n            }\n            default: {\n                return itemValue === filterValue;\n            }\n        }\n        return false;\n    }\n\n    private adjustHighlights(items: Array<SearchResultSetItem>, searchTerm: string): Array<unknown> {\n        const newItemsArray = [];\n        let attrMetadataType = \"\";\n        for (let i = 0; i < items.length; i++) {\n            const item = items[i] as any;\n            let neverFound = true;\n            attrMetadataType = \"\";\n            item.titleHighlighted = this.addHighlight(item.title, searchTerm);\n\n            if (item.titleHighlighted !== item.title) {\n                neverFound = false;\n            }\n            for (let j = 0; j < items[i].detailAttributes.length; j++) {\n                const detailAttr = items[i].detailAttributes[j] as SearchResultSetItemAttribute;\n                attrMetadataType = detailAttr.metadata.type;\n                if (attrMetadataType === \"String\" || attrMetadataType === \"Integer\") {\n                    detailAttr.valueHighlighted = this.addHighlight(detailAttr.valueFormatted, searchTerm);\n                    if (detailAttr.valueHighlighted !== detailAttr.valueFormatted) {\n                        neverFound = false;\n                    }\n                }\n            }\n            for (let k = 0; k < items[i].titleAttributes.length; k++) {\n                const titleAttr = items[i].titleAttributes[k] as SearchResultSetItemAttribute;\n                attrMetadataType = titleAttr.metadata.type;\n                if (\n                    attrMetadataType === \"String\" ||\n                    attrMetadataType === \"Integer\" ||\n                    attrMetadataType === \"ImageUrl\"\n                ) {\n                    titleAttr.valueHighlighted = this.addHighlight(titleAttr.valueFormatted, searchTerm);\n                    if (titleAttr.valueHighlighted !== titleAttr.valueFormatted) {\n                        neverFound = false;\n                    }\n                }\n            }\n            if (neverFound === false || searchTerm === \"*\" || searchTerm === \"\") {\n                newItemsArray.push(item);\n            }\n        }\n        return newItemsArray;\n    }\n\n    private addHighlight(hText: string, searchTerm: string): string {\n        if (typeof hText !== \"string\" || typeof searchTerm !== \"string\") {\n            return hText;\n        }\n        const pos1 = hText.toLowerCase().indexOf(searchTerm.toLowerCase());\n        if (pos1 > -1) {\n            const pos2 = pos1 + searchTerm.length;\n            const newHText =\n                hText.substring(0, pos1) +\n                \"<b>\" +\n                hText.substring(pos1, pos2) +\n                \"</b>\" +\n                hText.substring(pos2);\n            return newHText;\n        }\n        return hText;\n    }\n\n    addSuvLinkToSearchResultItem(\n        searchResultItem: SearchResultSetItem,\n        suvPath: string,\n        searchTermsArray: Array<string>\n    ): void {\n        const suvNavTargetResolver = this.sina._createSuvNavTargetResolver();\n        if (!suvPath) {\n            suvPath =\n                \"/resources/sap/esh/search/ui/sinaNexTS/providers/sample/docs/folklorist_authors_and_publications.suv\";\n        }\n        if (!searchTermsArray) {\n            searchTermsArray = [];\n        }\n        const suvAttributes: { [key: string]: SuvAttribute } = {};\n        suvAttributes.obj = {\n            suvThumbnailAttribute: searchResultItem,\n            suvTargetMimeTypeAttribute: {\n                value: \"application/vnd.sap.universal-viewer+suv\",\n            },\n            suvTargetUrlAttribute: {\n                value: suvPath,\n            },\n        };\n        suvNavTargetResolver.resolveSuvNavTargets(null, suvAttributes, searchTermsArray);\n    }\n\n    async executeSearchQuery(searchQuery: SearchQuery): Promise<SearchResultSet> {\n        this.searchQuery = searchQuery;\n        return new Promise((resolve) => {\n            let resultSet;\n\n            const itemsRoot = this.templateProvider(this);\n            const items1 = itemsRoot.searchResultSetItemArray;\n            const items2 = itemsRoot.searchResultSetItemArray2;\n            let itemsAll = items1.concat(items2);\n            let items3;\n            if (itemsRoot.searchResultSetItemArray3) {\n                items3 = itemsRoot.searchResultSetItemArray3;\n                itemsAll = itemsAll.concat(items3);\n            }\n\n            const searchTerm = searchQuery.filter.searchTerm;\n            const dataSourceId = searchQuery.filter.dataSource.id;\n            const dataSourceType = searchQuery.filter.dataSource.type;\n            const facets1 = this.generateFacets(searchQuery);\n\n            if (searchTerm === ForcedBySearchTermTestError.forcedBySearchTerm) {\n                throw new ForcedBySearchTermTestError();\n            }\n\n            let items;\n\n            if (\n                dataSourceId === Provider.dataSourceIds.Scientists ||\n                dataSourceId === Provider.dataSourceIds.Folklorists\n            ) {\n                items = this.adjustHighlights(items1, searchTerm);\n                items = this.applyFilters(items, searchQuery);\n                resultSet = this.sina._createSearchResultSet({\n                    items: items,\n                    facets: facets1,\n                    query: searchQuery,\n                    title: \"\",\n                    totalCount: items.length,\n                });\n            } else if (\n                dataSourceId === Provider.dataSourceIds.Mysterious_Sightings ||\n                dataSourceId === Provider.dataSourceIds.Urban_Legends\n            ) {\n                items = this.adjustHighlights(items2, searchTerm);\n                items = this.applyFilters(items, searchQuery);\n                resultSet = this.sina._createSearchResultSet({\n                    items: items,\n                    facets: facets1,\n                    query: searchQuery,\n                    title: \"\",\n                    totalCount: items.length,\n                });\n            } else if (dataSourceId === \"Publications\") {\n                items = this.adjustHighlights(items3, searchTerm);\n                items = this.applyFilters(items, searchQuery);\n                resultSet = this.sina._createSearchResultSet({\n                    items: items,\n                    facets: facets1,\n                    query: searchQuery,\n                    title: \"\",\n                    totalCount: items.length,\n                });\n            } else if (\n                dataSourceId === Provider.dataSourceIds.All ||\n                dataSourceType === this.sina.DataSourceType.UserCategory\n            ) {\n                // initalize measureValue for all facet items, necessary for filtering out superfluous items (My Favorites)\n                facets1[0].items.forEach((item) => {\n                    item.measureValue = 0;\n                    item.measureValueFormatted = \"\";\n                }); // calculate total counts for each sub branch of 'all'\n                items = this.adjustHighlights(items1, searchTerm);\n                items = this.applyFilters(items, searchQuery);\n                const totalCount1 = items.length;\n\n                items = this.adjustHighlights(items2, searchTerm);\n                items = this.applyFilters(items, searchQuery);\n                const totalCount2 = items.length;\n                let totalCount3 = 0;\n                if (items3) {\n                    items = this.adjustHighlights(items3, searchTerm);\n                    items = this.applyFilters(items, searchQuery);\n                    totalCount3 = items.length;\n                }\n\n                facets1[0].items[0].measureValue = totalCount1; // scientists\n                facets1[0].items[0].measureValueFormatted = \"\" + totalCount1;\n\n                facets1[0].items[1].measureValue = totalCount2; // mysterious sightings\n                facets1[0].items[1].measureValueFormatted = \"\" + totalCount2;\n\n                if (items3 && facets1[0].items.length > 2) {\n                    facets1[0].items[2].measureValue = totalCount3; // publications\n                    facets1[0].items[2].measureValueFormatted = \"\" + totalCount3;\n                }\n                // delete facet items where measureValue <= 0 (result items were filtered out)\n                facets1[0].items = facets1[0].items.filter((item) => item.measureValue > 0);\n\n                // proceed to insert facets into resultSet\n                items = this.adjustHighlights(itemsAll, searchTerm);\n                items = this.applyFilters(items, searchQuery);\n\n                // top/skip\n                const finalItems = [];\n                for (\n                    let i = searchQuery.skip;\n                    i < searchQuery.skip + searchQuery.top && i < items.length;\n                    i++\n                ) {\n                    finalItems.push(items[i]);\n                }\n\n                // final results\n                resultSet = this.sina._createSearchResultSet({\n                    items: finalItems,\n                    facets: facets1,\n                    query: searchQuery,\n                    title: \"\",\n                    totalCount: items.length,\n                });\n            }\n\n            resolve(resultSet);\n        });\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    executeHierarchyQuery(query: HierarchyQuery): Promise<HierarchyResultSet> {\n        throw new NotImplementedError();\n    }\n\n    async executeSuggestionQuery(query: SuggestionQuery): Promise<SuggestionResultSet> {\n        const searchTerm = query.filter.searchTerm;\n        const demoRoot = this.templateProvider(this);\n        const searchAbleItems = demoRoot.searchResultSetItemArray\n            .concat(demoRoot.searchResultSetItemArray2)\n            .concat(demoRoot.searchResultSetItemArray3);\n        const suggestionTerms = this.getSuggestionList(searchAbleItems); // \"Sally Spring, Galapagos, Female, Barry Williamson, Off East Cyprus, Male, Conrad Atkinson, Baalbek, Lebanon,Roger Murdoch, Wycliffe Well\"\n        // limit suggestion terms to what matches start of search term\n        const regexp = new RegExp(`^${escapeRegExp(searchTerm)}`, \"gi\");\n        const suggestionsMatchingSearchterm = suggestionTerms.filter((s) => s.match(regexp));\n        //if (suggestionsMatchingSearchterm.length === 0) {\n        //    suggestionsMatchingSearchterm = suggestionTerms;\n        //}\n        const suggestions = [];\n\n        const createSuggestionItem = (term) => {\n            const calculationMode = this.sina.SuggestionCalculationMode.Data;\n            const filter = query.filter.clone();\n            filter.setSearchTerm(term);\n            return this.sina._createSearchTermSuggestion({\n                searchTerm: term,\n                calculationMode: calculationMode,\n                filter: filter,\n                label: term,\n            });\n        };\n        for (let i = 0; i < suggestionsMatchingSearchterm.length; i++) {\n            suggestions.push(createSuggestionItem(suggestionsMatchingSearchterm[i]));\n        }\n\n        const resultSet = this.sina._createSuggestionResultSet({\n            title: \"Suggestions\",\n            query: query,\n            items: suggestions,\n        });\n\n        return new Promise(function (resolve) {\n            resolve(resultSet);\n        });\n    }\n\n    async executeChartQuery(query: ChartQuery): Promise<ChartResultSet> {\n        const chartResultSetItems = this.generateFacets(query);\n        let whichChart = 1; // scientists\n        if (query.dimension === \"LOCATION\" || chartResultSetItems.length === 1) {\n            whichChart = 0;\n        }\n        return new Promise(function (resolve) {\n            resolve(chartResultSetItems[whichChart] as ChartResultSet);\n        });\n    }\n\n    getChartResultSetItemsForLocations(resultSetItemsArray) {\n        const chartResultSetItems = [];\n        let location;\n        const locations = [];\n        let chartResultSetItem, i, j, k, attrs;\n        for (i = 0; i < resultSetItemsArray.length; i++) {\n            attrs = resultSetItemsArray[i].detailAttributes;\n            for (j = 0; j < attrs.length; j++) {\n                if (attrs[j].id === \"LOCATION\") {\n                    location = attrs[j].value;\n                    if (locations.indexOf(location) === -1) {\n                        // new location\n                        locations.push(location);\n                        chartResultSetItem = this.sina._createChartResultSetItem({\n                            filterCondition: this.sina.createSimpleCondition({\n                                attribute: \"LOCATION\",\n                                attributeLabel: \"Location\",\n                                operator: this.sina.ComparisonOperator.Eq,\n                                value: location,\n                            }),\n                            dimensionValueFormatted: location,\n                            measureValue: 1,\n                            measureValueFormatted: \"1\",\n                        });\n\n                        chartResultSetItems.push(chartResultSetItem);\n                    } else {\n                        // add to measureValue\n                        for (k = 0; k < chartResultSetItems.length; k++) {\n                            if (chartResultSetItems[k].filterCondition.value === location) {\n                                chartResultSetItems[k].measureValue = chartResultSetItems[k].measureValue + 1;\n                                chartResultSetItems[k].measureValueFormatted =\n                                    \"\" + chartResultSetItems[k].measureValue;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return chartResultSetItems;\n    }\n\n    getChartResultSetItemsForPublications(resultSetItemsArray) {\n        const chartResultSetItems = [];\n        let publication;\n        const publications = [];\n        let chartResultSetItem, i, j, k, attrs;\n        for (i = 0; i < resultSetItemsArray.length; i++) {\n            attrs = resultSetItemsArray[i].detailAttributes;\n            for (j = 0; j < attrs.length; j++) {\n                if (attrs[j].id === \"PUBLICATION\") {\n                    publication = attrs[j].value;\n                    if (publications.indexOf(publication) === -1) {\n                        // new location\n                        publications.push(publication);\n                        chartResultSetItem = this.sina._createChartResultSetItem({\n                            filterCondition: this.sina.createSimpleCondition({\n                                attribute: \"PUBLICATION\",\n                                attributeLabel: \"Publication\",\n                                operator: this.sina.ComparisonOperator.Eq,\n                                value: publication,\n                            }),\n                            dimensionValueFormatted: publication,\n                            measureValue: 1,\n                            measureValueFormatted: \"1\",\n                        });\n\n                        chartResultSetItems.push(chartResultSetItem);\n                    } else {\n                        // add to measureValue\n                        for (k = 0; k < chartResultSetItems.length; k++) {\n                            if (chartResultSetItems[k].filterCondition.value === publication) {\n                                chartResultSetItems[k].measureValue = chartResultSetItems[k].measureValue + 1;\n                                chartResultSetItems[k].measureValueFormatted =\n                                    \"\" + chartResultSetItems[k].measureValue;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return chartResultSetItems;\n    }\n\n    getSientistOrFolkloristFacet(searchQuery: SearchQuery | ChartQuery, resultSetItemsArray) {\n        let scientisOrFolklorist;\n        const scientisOrFolklorists = [];\n        let chartResultSetItem, i, j, k, attrs, dimension;\n        const chartResultSetItems = [];\n        for (i = 0; i < resultSetItemsArray.length; i++) {\n            attrs = resultSetItemsArray[i].titleAttributes; // for folklorists and scientists\n            if (\n                searchQuery.filter.dataSource.id === Provider.dataSourceIds.Mysterious_Sightings ||\n                searchQuery.filter.dataSource.id === Provider.dataSourceIds.Urban_Legends ||\n                searchQuery.filter.dataSource.id === Provider.dataSourceIds.Publications\n            ) {\n                attrs = resultSetItemsArray[i].detailAttributes;\n            }\n            for (j = 0; j < attrs.length; j++) {\n                if (attrs[j].id === \"SCIENTIST\" || attrs[j].id === \"FOLKLORIST\") {\n                    scientisOrFolklorist = attrs[j].value;\n                    dimension = attrs[j].id;\n                    if (scientisOrFolklorists.indexOf(scientisOrFolklorist) === -1) {\n                        // this particular scientist is not listed yet\n                        scientisOrFolklorists.push(scientisOrFolklorist);\n                        chartResultSetItem = this.sina._createChartResultSetItem({\n                            filterCondition: this.sina.createSimpleCondition({\n                                attribute: attrs[j].id,\n                                attributeLabel: attrs[j].label,\n                                operator: this.sina.ComparisonOperator.Eq,\n                                value: scientisOrFolklorist,\n                            }),\n                            dimensionValueFormatted: scientisOrFolklorist,\n                            measureValue: 1,\n                            measureValueFormatted: \"1\",\n                        });\n\n                        chartResultSetItems.push(chartResultSetItem);\n                    } else {\n                        // add to measureValue\n                        for (k = 0; k < chartResultSetItems.length; k++) {\n                            if (chartResultSetItems[k].filterCondition.value === scientisOrFolklorist) {\n                                chartResultSetItems[k].measureValue = chartResultSetItems[k].measureValue + 1;\n                                chartResultSetItems[k].measureValueFormatted =\n                                    \"\" + chartResultSetItems[k].measureValue;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return [chartResultSetItems, dimension];\n    }\n\n    getTopFacetOnly(searchQuery: SearchQuery) {\n        const dataSource = searchQuery.filter.sina.allDataSource;\n        const dataSourceItems = [\n            this.sina._createDataSourceResultSetItem({\n                dataSource: searchQuery.filter.sina.dataSources[1],\n                dimensionValueFormatted: dataSource.labelPlural,\n                measureValue: 4,\n                measureValueFormatted: \"4\", // 4 scientists currently\n            }),\n            this.sina._createDataSourceResultSetItem({\n                dataSource: searchQuery.filter.sina.dataSources[2],\n                dimensionValueFormatted: dataSource.labelPlural,\n                measureValue: 5,\n                measureValueFormatted: \"5\", // 5 sightings currently\n            }),\n        ];\n        if (searchQuery.filter.sina.dataSources[3]) {\n            dataSourceItems[2] = this.sina._createDataSourceResultSetItem({\n                dataSource: searchQuery.filter.sina.dataSources[3],\n                dimensionValueFormatted: dataSource.labelPlural,\n                measureValue: 1,\n                measureValueFormatted: \"1\", // 1 publication currently\n            });\n        }\n\n        const dataSourceFacets = [\n            this.sina._createDataSourceResultSet({\n                title: searchQuery.filter.dataSource.label,\n                items: dataSourceItems,\n                query: searchQuery,\n                facetTotalCount: undefined,\n            }),\n        ];\n        return dataSourceFacets;\n    }\n\n    generateFacets(searchQuery: SearchQuery | ChartQuery): Array<FacetResultSet> {\n        if (\n            searchQuery.filter.dataSource.id === Provider.dataSourceIds.All ||\n            searchQuery.filter.dataSource.type === this.sina.DataSourceType.UserCategory ||\n            (searchQuery instanceof SearchQuery &&\n                (searchQuery.calculateFacets === undefined || searchQuery.calculateFacets === false))\n        ) {\n            return this.getTopFacetOnly(searchQuery as SearchQuery);\n        }\n        const chartResultSetArray = [];\n        let chartResultSet;\n        const gen = this.templateProvider(this);\n\n        const filter = this.sina.createFilter({\n            searchTerm: this.searchQuery.filter.searchTerm,\n            dataSource: this.searchQuery.filter.dataSource,\n            rootCondition: this.searchQuery.filter.rootCondition.clone(),\n        });\n        let chartResultSetItems = [];\n        let resultSetItemsArray;\n\n        // get the right resultsetitems\n        if (searchQuery.filter.dataSource.id === Provider.dataSourceIds.Publications) {\n            resultSetItemsArray = gen.searchResultSetItemArray3;\n        } else if (\n            searchQuery.filter.dataSource.id === Provider.dataSourceIds.Scientists ||\n            searchQuery.filter.dataSource.id === Provider.dataSourceIds.Folklorists\n        ) {\n            resultSetItemsArray = gen.searchResultSetItemArray;\n        } else if (\n            searchQuery.filter.dataSource.id === Provider.dataSourceIds.Urban_Legends ||\n            searchQuery.filter.dataSource.id === Provider.dataSourceIds.Mysterious_Sightings\n        ) {\n            resultSetItemsArray = gen.searchResultSetItemArray2;\n        }\n\n        //  Location Facet\n        if (\n            searchQuery.filter.dataSource.id === Provider.dataSourceIds.Scientists ||\n            searchQuery.filter.dataSource.id === Provider.dataSourceIds.Mysterious_Sightings\n        ) {\n            chartResultSetItems = this.getChartResultSetItemsForLocations(resultSetItemsArray);\n\n            chartResultSet = this.sina._createChartResultSet({\n                items: chartResultSetItems,\n                query: this.sina.createChartQuery({\n                    filter: filter,\n                    dimension: \"LOCATION\",\n                }),\n                title: \"Locations\",\n                facetTotalCount: undefined,\n            });\n            chartResultSetArray.push(chartResultSet);\n        }\n\n        // Scientist or Folklorist Facet\n        const info = this.getSientistOrFolkloristFacet(searchQuery, resultSetItemsArray);\n        chartResultSetItems = info[0];\n        const dimension = info[1];\n\n        chartResultSet = this.sina._createChartResultSet({\n            items: chartResultSetItems,\n            query: this.sina.createChartQuery({\n                filter: filter,\n                dimension: dimension,\n            }),\n            title: dimension.charAt(0).toUpperCase() + dimension.slice(1).toLowerCase() + \"s\",\n            facetTotalCount: undefined,\n        });\n        chartResultSetArray.push(chartResultSet);\n\n        return chartResultSetArray;\n    }\n}\n"],"mappings":"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","ignoreList":[]}