{"version":3,"file":"MetadataParserXML-dbg.js","names":["sap","ui","define","____sina_DataSourceType","___MetadataParser","___HierarchyMetadataParser","____core_errors","____sina_i18n","__ui5_require_async","path","Promise","resolve","reject","require","module","__esModule","endsWith","default","Object","defineProperty","value","err","DataSourceType","MetadataParser","HierarchyMetadataParser","MetadataParserError","getText","MetadataParserXML","jsDOMWindow","constructor","provider","_getWindow","window","jsdom","fs","jquery","readFileSync","dom","JSDOM","runScripts","$","jQuery","fireRequest","client","url","response","getXML","parseResponse","metaXML","allInOneMap","businessObjectMap","Map","businessObjectList","dataSourceMap","dataSourcesList","xmlDoc","parseXML","schemaNode","find","$schemaNode","helperMap","_parseEntityType","_parseEntityContainer","schema","that","hierarchyMetadataParser","loadResourceBundlePromises","each","entityTypeName","attr","entitySet","keys","attributeMap","resourceBundle","undefined","labelResourceBundle","label","labelPlural","annotations","hierarchyDefinitionsMap","icon","name","dataSource","push","parse","siblings","$element","annotationName","length","toUpperCase","annotationValue","_getValueFromElement","sKey","getTextFromResourceBundle","then","sTranslatedText","catch","e","log","error","toString","_setAnnotationValue","index","attributeName","attribute","labelRaw","type","presentationUsage","isFacet","isSortable","supportsTextSearch","displayOrder","annotationsAttr","unknownAnnotation","hierarchyDefinition","facetPosition","facetIconUrlAttributeName","isKey","isFilteringAttribute","children","arrayEntry","entryAnnoName","entryAnnoValue","startsWith","identification","UI","IDENTIFICATION","POSITION","Array","isArray","i","TYPE","all","element","textValue","text","trim","floatValue","Number","parseFloat","isNaN","intValue","parseInt","schemaXML","entityTypeFullQualified","entityType","slice","lastIndexOf","newDatasource","sina","createDataSource","id","BusinessObject","attributesMetadata","__exports"],"sources":["MetadataParserXML.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\n/* eslint-disable @typescript-eslint/no-this-alias */\n\nimport { AjaxClient as Client } from \"../../core/AjaxClient\";\nimport { DataSourceType } from \"../../sina/DataSourceType\";\nimport { EntitySet, ServerMetadataMap, MetadataParser, Attribute } from \"./MetadataParser\";\nimport { Provider } from \"./Provider\";\nimport { HierarchyMetadataParser } from \"./HierarchyMetadataParser\";\nimport { AttributeMetadata } from \"../../sina/AttributeMetadata\";\nimport { MetadataParserError } from \"../../core/errors\";\nimport { getText } from \"../../sina/i18n\";\nimport { type DOMWindow } from \"jsdom\";\n\ndeclare global {\n    interface Window {\n        $: JQueryStatic; // JQuery needed here, as there is XML to get parsed (see function 'parseXML')\n    }\n}\n\ninterface JSDOMWindowWithJQuery extends DOMWindow {\n    $: JQueryStatic;\n}\n\ninterface HelperMap {\n    [key: string]: EntitySet;\n}\n\n/**\n * MetadataParser for XML odata metadata of HANAs esh_search() procedure\n * See https://pages.github.tools.sap/hana-enterprise-search/hana-search-documentation/2024_QRC1/esh/metadata_call/\n */\nexport class MetadataParserXML extends MetadataParser {\n    private jsDOMWindow: JSDOMWindowWithJQuery;\n\n    constructor(provider: Provider) {\n        super(provider);\n    }\n\n    private async _getWindow(): Promise<Window | JSDOMWindowWithJQuery> {\n        if (typeof window === \"undefined\") {\n            if (typeof this.jsDOMWindow === \"undefined\") {\n                const jsdom = await import(\"jsdom\");\n                const fs = await import(\"node:fs\");\n                const jquery = fs.readFileSync(\"./node_modules/jquery/dist/jquery.js\", \"utf-8\");\n\n                const dom = new jsdom.JSDOM(\"<html><script>\" + jquery + \"</script><body></body></html>\", {\n                    runScripts: \"dangerously\",\n                });\n                this.jsDOMWindow = dom.window;\n                dom.window.$ = dom.window.jQuery;\n            }\n            return this.jsDOMWindow;\n        }\n        return window;\n    }\n\n    public async fireRequest(client: Client, url: string): Promise<string> {\n        const response = await client.getXML(url);\n        return response;\n    }\n\n    public async parseResponse(metaXML: string): Promise<ServerMetadataMap> {\n        if (typeof metaXML === \"string\") {\n            // all in one metadata map\n            const allInOneMap: ServerMetadataMap = {\n                businessObjectMap: new Map(), // entity map with attributes and entityset name as key\n                businessObjectList: [], // list of all entities for convenience\n                dataSourceMap: new Map(), // datasource map with entityset name as key\n                dataSourcesList: [], // list of all datasources for convenience\n            };\n\n            const window = await this._getWindow();\n            const xmlDoc = window.$.parseXML(metaXML);\n            const schemaNode = window.$(xmlDoc).find(\"Schema\");\n            const $schemaNode = window.$(schemaNode);\n            const helperMap = await this._parseEntityType($schemaNode, window);\n            this._parseEntityContainer($schemaNode, helperMap, allInOneMap, window);\n            return allInOneMap;\n        } else {\n            throw new MetadataParserError(getText(\"error.sina.metadataParserNotStringError\"));\n        }\n    }\n\n    // parse entityset and its attributes from EntityType\n    private async _parseEntityType(\n        schema: JQuery<HTMLElement>,\n        window: Window | JSDOMWindowWithJQuery\n    ): Promise<HelperMap> {\n        const that = this;\n        const helperMap: HelperMap = {};\n        schema = window.$(schema);\n        const hierarchyMetadataParser = new HierarchyMetadataParser(window.$);\n        const loadResourceBundlePromises = [];\n\n        schema.find(\"EntityType\").each(function () {\n            const entityTypeName = window.$(this).attr(\"Name\");\n            const entitySet: EntitySet = {\n                schema: schema.attr(\"Namespace\"),\n                keys: [],\n                attributeMap: new Map(),\n                resourceBundle: undefined,\n                labelResourceBundle: undefined,\n                label: \"\",\n                labelPlural: \"\",\n                annotations: {},\n                hierarchyDefinitionsMap: new Map(),\n                icon: \"\",\n                name: \"\",\n                dataSource: undefined,\n            };\n            helperMap[entityTypeName] = entitySet;\n\n            // oData keys for accessing a entity\n            window\n                .$(this)\n                .find(\"Key>PropertyRef\")\n                .each(function () {\n                    entitySet.keys.push(window.$(this).attr(\"Name\"));\n                });\n            window\n                .$(this)\n                .find('>Annotation[Term=\"EnterpriseSearch.hierarchy.parentChild\"]')\n                .each(function () {\n                    entitySet.hierarchyDefinitionsMap = hierarchyMetadataParser.parse(entityTypeName, this);\n                });\n            window\n                .$(this)\n                .find('Annotation[Term=\"Search.searchable\"]')\n                .each(function () {\n                    // get sibling annotation element of attr EnterpriseSearchHana.uiResource.label.key\n                    window\n                        .$(this)\n                        .siblings(\"Annotation\")\n                        .each(function () {\n                            const $element = window.$(this);\n                            let annotationName = $element.attr(\"Term\");\n                            if (annotationName !== undefined && annotationName.length > 0) {\n                                annotationName = annotationName.toUpperCase();\n                                const annotationValue = that._getValueFromElement(this, window);\n                                if (annotationName === \"ENTERPRISESEARCHHANA.UIRESOURCE.LABEL.BUNDLE\") {\n                                    entitySet.resourceBundle = annotationValue;\n                                } else if (annotationName === \"ENTERPRISESEARCHHANA.UIRESOURCE.LABEL.KEY\") {\n                                    const sKey = annotationValue;\n                                    if (typeof sKey === \"string\" && sKey && entitySet.resourceBundle) {\n                                        loadResourceBundlePromises.push(\n                                            that.provider\n                                                .getTextFromResourceBundle(entitySet.resourceBundle, sKey)\n                                                .then((sTranslatedText) => {\n                                                    if (sTranslatedText) {\n                                                        entitySet.labelResourceBundle = sTranslatedText;\n                                                    }\n                                                })\n                                                .catch((e) => {\n                                                    that.log.error(\n                                                        \"Resource bundle of \" +\n                                                            entityTypeName +\n                                                            \" '\" +\n                                                            entitySet.resourceBundle +\n                                                            \"' can't be found:\" +\n                                                            e.toString()\n                                                    );\n                                                })\n                                        );\n                                    }\n                                } else if (annotationName === \"UI.HEADERINFO.TYPENAME\") {\n                                    if (typeof annotationValue === \"string\") {\n                                        entitySet.label = annotationValue;\n                                    }\n                                } else if (annotationName === \"UI.HEADERINFO.TYPENAMEPLURAL\") {\n                                    if (typeof annotationValue === \"string\") {\n                                        entitySet.labelPlural = annotationValue;\n                                    }\n                                } else if (annotationName === \"UI.HEADERINFO.TITLE.TYPE\") {\n                                    that._setAnnotationValue(\n                                        entitySet.annotations,\n                                        annotationName,\n                                        annotationValue\n                                    );\n                                } else if (annotationName === \"UI.HEADERINFO.TITLE.VALUEQUALIFIER\") {\n                                    that._setAnnotationValue(\n                                        entitySet.annotations,\n                                        annotationName,\n                                        annotationValue\n                                    );\n                                } else if (annotationName === \"UI.HEADERINFO.TYPEIMAGEURL\") {\n                                    if (typeof annotationValue === \"string\") {\n                                        entitySet.icon = annotationValue;\n                                    }\n                                } else {\n                                    that._setAnnotationValue(\n                                        entitySet.annotations,\n                                        annotationName,\n                                        annotationValue\n                                    );\n                                }\n                            }\n                        });\n                    //}\n                });\n\n            //Loop attributes\n            window\n                .$(this)\n                .find(\"Property\")\n                .each(function (index) {\n                    const attributeName = window.$(this).attr(\"Name\") || \"\";\n                    // schema of supported annotations is required in order to eliminate this any\n                    const attribute: Attribute = {\n                        labelRaw: attributeName,\n                        label: \"\",\n                        type: window.$(this).attr(\"Type\") || \"\",\n                        presentationUsage: [],\n                        // accessUsage: [],\n                        isFacet: false,\n                        isSortable: false,\n                        supportsTextSearch: false,\n                        displayOrder: index,\n                        annotationsAttr: {},\n                        unknownAnnotation: [],\n                        hierarchyDefinition: entitySet.hierarchyDefinitionsMap[attributeName],\n                        facetPosition: 0,\n                        facetIconUrlAttributeName: \"\",\n                        isKey: false,\n                        isFilteringAttribute: undefined,\n                    };\n\n                    entitySet.attributeMap[attributeName] = attribute;\n\n                    window\n                        .$(this)\n                        .find(\"Annotation\")\n                        .each(function () {\n                            let annotationName = window.$(this).attr(\"Term\");\n                            if (annotationName !== undefined && annotationName.length > 0) {\n                                annotationName = annotationName.toUpperCase();\n                                let annotationValue = that._getValueFromElement(this, window);\n                                if (annotationValue == undefined) {\n                                    window\n                                        .$(this)\n                                        .children(\"Collection\")\n                                        .children(\"Record\")\n                                        .each(function () {\n                                            annotationValue = annotationValue || [];\n                                            const arrayEntry = {};\n                                            annotationValue.push(arrayEntry);\n                                            window\n                                                .$(this)\n                                                .children(\"PropertyValue\")\n                                                .each(function () {\n                                                    let entryAnnoName = window.$(this).attr(\"Property\");\n                                                    if (\n                                                        entryAnnoName !== undefined &&\n                                                        entryAnnoName.length > 0\n                                                    ) {\n                                                        entryAnnoName = entryAnnoName.toUpperCase();\n                                                        const entryAnnoValue = that._getValueFromElement(\n                                                            this,\n                                                            window\n                                                        );\n                                                        if (entryAnnoValue !== undefined) {\n                                                            arrayEntry[entryAnnoName] = entryAnnoValue;\n                                                        }\n                                                    }\n                                                });\n                                        });\n                                }\n\n                                if (annotationValue !== undefined) {\n                                    switch (annotationName) {\n                                        case \"SAP.COMMON.LABEL\":\n                                            if (!attribute.label) {\n                                                attribute.label = annotationValue;\n                                            }\n                                            break;\n                                        case \"ENTERPRISESEARCHHANA.UIRESOURCE.LABEL.KEY\":\n                                            if (annotationValue && entitySet.resourceBundle) {\n                                                loadResourceBundlePromises.push(\n                                                    that.provider\n                                                        .getTextFromResourceBundle(\n                                                            entitySet.resourceBundle,\n                                                            annotationValue\n                                                        )\n                                                        .then((sTranslatedText) => {\n                                                            if (sTranslatedText) {\n                                                                attribute.label = sTranslatedText;\n                                                            }\n                                                        })\n                                                        .catch((e) => {\n                                                            that.log.error(\n                                                                \"Resource bundle of \" +\n                                                                    entityTypeName +\n                                                                    \" '\" +\n                                                                    entitySet.resourceBundle +\n                                                                    \"' can't be found:\" +\n                                                                    e.toString()\n                                                            );\n                                                        })\n                                                );\n                                            }\n                                            break;\n                                        case \"ENTERPRISESEARCH.KEY\":\n                                            attribute.isKey = annotationValue;\n                                            break;\n                                        case \"ENTERPRISESEARCH.PRESENTATIONMODE\":\n                                            window\n                                                .$(this)\n                                                .find(\"Collection>String\")\n                                                .each(function () {\n                                                    const presentationUsage = that._getValueFromElement(\n                                                        this,\n                                                        window\n                                                    );\n                                                    if (presentationUsage) {\n                                                        attribute.presentationUsage.push(presentationUsage);\n                                                    }\n                                                });\n                                            break;\n                                        case \"ENTERPRISESEARCHHANA.ISSORTABLE\":\n                                            attribute.isSortable = annotationValue;\n                                            break;\n                                        case \"ENTERPRISESEARCHHANA.SUPPORTSTEXTSEARCH\":\n                                            attribute.supportsTextSearch = annotationValue;\n                                            break;\n                                        case \"ENTERPRISESEARCH.FILTERINGFACET.DEFAULT\":\n                                            attribute.isFacet = annotationValue;\n                                            break;\n                                        case \"ENTERPRISESEARCH.FILTERINGFACET.DISPLAYPOSITION\":\n                                            attribute.facetPosition = annotationValue;\n                                            break;\n                                        case \"ENTERPRISESEARCH.FILTERINGFACET.ICONURL\":\n                                            attribute.facetIconUrlAttributeName = annotationValue;\n                                            break;\n                                        case \"ENTERPRISESEARCH.FILTERINGATTRIBUTE.DEFAULT\":\n                                            attribute.isFilteringAttribute = annotationValue;\n                                            break;\n                                        case \"ENTERPRISESEARCH.FILTERINGATTRIBUTE.DISPLAYPOSITION\":\n                                            attribute.facetPosition = annotationValue;\n                                            break;\n                                        case \"ENTERPRISESEARCH.FILTERINGATTRIBUTE.ICONURL\":\n                                            attribute.facetIconUrlAttributeName = annotationValue;\n                                            break;\n                                        case \"ENTERPRISESEARCH.DISPLAYORDER\":\n                                            attribute.displayOrder = annotationValue;\n                                            break;\n                                        default:\n                                            if (\n                                                annotationName.startsWith(\"UI\") ||\n                                                annotationName.startsWith(\"OBJECTMODEL\") ||\n                                                annotationName.startsWith(\"SEMANTICS\")\n                                            ) {\n                                                that._setAnnotationValue(\n                                                    attribute.annotationsAttr,\n                                                    annotationName,\n                                                    annotationValue\n                                                );\n                                            } else {\n                                                attribute.unknownAnnotation.push(window.$(this));\n                                            }\n                                    }\n                                }\n                            }\n                        });\n\n                    const identification =\n                        attribute.annotationsAttr.UI && attribute.annotationsAttr.UI.IDENTIFICATION;\n                    if (identification) {\n                        if (identification.POSITION !== undefined) {\n                            attribute.displayOrder = identification.POSITION;\n                        } else if (Array.isArray(identification)) {\n                            for (let i = 0; i < identification.length; i++) {\n                                if (\n                                    identification[i].TYPE == undefined &&\n                                    identification[i].POSITION !== undefined\n                                ) {\n                                    attribute.displayOrder = identification[i].POSITION;\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                });\n        });\n\n        await Promise.all(loadResourceBundlePromises);\n        return helperMap;\n    }\n\n    private _getValueFromElement(element: Element, window: Window | JSDOMWindowWithJQuery): any {\n        // string | number | boolean | undefined {\n        const $element = window.$(element);\n        const textValue = $element.text();\n        if (textValue && textValue.trim().length > 0) {\n            return textValue;\n        }\n        try {\n            if ($element.attr(\"String\") !== undefined) {\n                return $element.attr(\"String\");\n            } else if ($element.attr(\"Decimal\") !== undefined) {\n                const floatValue = Number.parseFloat($element.attr(\"Decimal\") || \"\");\n                if (!isNaN(floatValue)) {\n                    return floatValue;\n                }\n            } else if ($element.attr(\"Int\") !== undefined) {\n                const intValue = Number.parseInt($element.attr(\"Int\") || \"\", 10);\n                if (!isNaN(intValue)) {\n                    return intValue;\n                }\n            } else if ($element.attr(\"Bool\") !== undefined) {\n                return $element.attr(\"Bool\") == \"true\";\n            }\n        } catch (e) {\n            this.log.error(\"Error parsing annotation value: \" + e.toString());\n        }\n    }\n\n    // parse datasources from EntityContainer\n    private _parseEntityContainer(\n        schemaXML: JQuery<HTMLElement>,\n        helperMap: HelperMap,\n        allInOneMap: ServerMetadataMap,\n        window: Window | JSDOMWindowWithJQuery\n    ): void {\n        const that = this;\n        schemaXML.find(\"EntityContainer>EntitySet\").each(function () {\n            if (window.$(this).attr(\"Name\") && window.$(this).attr(\"EntityType\")) {\n                const name = window.$(this).attr(\"Name\") || \"\";\n                const entityTypeFullQualified = window.$(this).attr(\"EntityType\") || \"\";\n\n                const entityType = entityTypeFullQualified.slice(\n                    entityTypeFullQualified.lastIndexOf(\".\") + 1\n                );\n\n                const entitySet = helperMap[entityType];\n                if (entitySet === undefined) {\n                    throw \"EntityType \" + entityType + \" has no corresponding meta data!\";\n                }\n\n                const newDatasource = that.sina.createDataSource({\n                    id: name,\n                    label: entitySet.labelResourceBundle || entitySet.label || name,\n                    labelPlural:\n                        entitySet.labelResourceBundle || entitySet.labelPlural || entitySet.label || name,\n                    icon: entitySet.icon || \"\",\n                    type: DataSourceType.BusinessObject,\n                    attributesMetadata: [\n                        {\n                            id: \"dummy\",\n                        },\n                    ] as Array<AttributeMetadata>, // fill with dummy attribute\n                });\n                newDatasource.annotations = entitySet.annotations;\n                allInOneMap.dataSourceMap[newDatasource.id] = newDatasource;\n                allInOneMap.dataSourcesList.push(newDatasource);\n\n                entitySet.name = name;\n                entitySet.dataSource = newDatasource;\n                allInOneMap.businessObjectMap[name] = entitySet;\n                allInOneMap.businessObjectList.push(entitySet);\n            }\n        });\n    }\n}\n"],"mappings":"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","ignoreList":[]}