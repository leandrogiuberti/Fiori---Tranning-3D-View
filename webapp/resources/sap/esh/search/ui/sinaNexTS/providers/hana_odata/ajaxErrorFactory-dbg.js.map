{"version":3,"file":"ajaxErrorFactory-dbg.js","names":["sap","ui","define","____core_errors","____sina_i18n","ServerErrorCode","ServerError","getText","parseCode","code","includes","E001","parseDetails","message","details","Array","isArray","JSON","stringify","result","detail","push","length","undefined","join","parseGlobalError","parsedError","error","dataSource","parseDataSourceErrors","searchStatistics","connectorStatistics","ConnectorStatistics","dataSourceErrors","connectorStatistic","Name","calculateErrorCode","codes","resultCode","ajaxErrorFactory","request","response","dataJSON","globalError","map","dataSourceError","dataSourceLabels","de","__exports","__esModule"],"sources":["ajaxErrorFactory.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\nimport { RequestProperties, ResponseProperties } from \"../../core/ajax\";\nimport { ServerErrorCode, SinaError, ServerError, DataSourceError } from \"../../core/errors\";\nimport { getText } from \"../../sina/i18n\";\n\nfunction parseCode(code: string): ServerErrorCode {\n    if ([\"E100\", \"E101\", \"E102\", \"E200\", \"E201\", \"E202\", \"E203\", \"E300\", \"E400\"].includes(code)) {\n        return code as ServerErrorCode; // these hana odata error codes are identical to the sina error codes\n    }\n    return ServerErrorCode.E001; // unknown error code -> convert to general error\n}\n\nfunction parseDetails(message: string, details: Array<{ code: string; message: string }>): string {\n    if (!details) {\n        return; // return undefined\n    }\n    if (!details || !Array.isArray(details)) {\n        return JSON.stringify(details);\n    }\n    const result = [];\n    for (const detail of details) {\n        if (detail.message === message) {\n            continue;\n        }\n        result.push(detail.code + \":\" + detail.message);\n    }\n    if (result.length === 0) {\n        return undefined;\n    }\n    return result.join(\"\\n\");\n}\n\nfunction parseGlobalError(parsedError): DataSourceError {\n    // check for error\n    if (!parsedError.error) {\n        return;\n    }\n    const error = parsedError.error;\n    return {\n        dataSource: \"dummy\",\n        code: parseCode(error.code),\n        message: error.message,\n        details: parseDetails(error.message, error.details),\n    };\n}\n\nfunction parseDataSourceErrors(parsedError): Array<DataSourceError> {\n    const searchStatistics = parsedError[\"@com.sap.vocabularies.Search.v1.SearchStatistics\"];\n    if (!searchStatistics) {\n        return [];\n    }\n    const connectorStatistics = searchStatistics.ConnectorStatistics;\n    if (!connectorStatistics) {\n        return [];\n    }\n    if (!Array.isArray(connectorStatistics)) {\n        return [];\n    }\n    const dataSourceErrors: Array<DataSourceError> = [];\n    for (const connectorStatistic of connectorStatistics) {\n        if (!connectorStatistic.error) {\n            continue;\n        }\n        const error = connectorStatistic.error;\n        dataSourceErrors.push({\n            dataSource: connectorStatistic.Name,\n            code: parseCode(error.code),\n            message: error.message,\n            details: parseDetails(error.message, error.details),\n        });\n    }\n    return dataSourceErrors;\n}\n\nfunction calculateErrorCode(codes: Array<ServerErrorCode>): ServerErrorCode {\n    let resultCode: ServerErrorCode;\n    for (const code of codes) {\n        if (!resultCode) {\n            resultCode = code;\n        }\n        if (code !== resultCode) {\n            return ServerErrorCode.E001; // fallback to general error\n        }\n    }\n    if (!resultCode) {\n        resultCode = ServerErrorCode.E001;\n    }\n    return resultCode;\n}\n\nexport function ajaxErrorFactory(request: RequestProperties, response: ResponseProperties): SinaError {\n    // check for json\n    const parsedError = response.dataJSON;\n    if (!parsedError) {\n        return;\n    }\n\n    const globalError = parseGlobalError(parsedError);\n    const dataSourceErrors = parseDataSourceErrors(parsedError);\n\n    if (globalError) {\n        return new ServerError({\n            request: request,\n            response: response,\n            code: calculateErrorCode([\n                globalError.code,\n                ...dataSourceErrors.map((dataSourceError) => dataSourceError.code),\n            ]),\n            message: globalError.message,\n            details: globalError.details,\n            dataSourceErrors: dataSourceErrors,\n        });\n    } else {\n        let dataSourceLabels;\n        switch (dataSourceErrors.length) {\n            case 0:\n                // no error at all -> return\n                return;\n            case 1:\n                // main error message is taken from error message on datasource level\n                return new ServerError({\n                    request: request,\n                    response: response,\n                    code: dataSourceErrors[0].code,\n                    message: dataSourceErrors[0].message,\n                    details: dataSourceErrors[0].details,\n                    dataSourceErrors: dataSourceErrors,\n                });\n            default:\n                // main error message: just list affected datasources\n                dataSourceLabels = dataSourceErrors.map((de) => de.dataSource).join(\", \");\n                return new ServerError({\n                    request: request,\n                    response: response,\n                    code: calculateErrorCode(dataSourceErrors.map((dataSourceError) => dataSourceError.code)),\n                    message: getText(\"error.sina.errorInMultipleDataSources\", [dataSourceLabels]),\n                    dataSourceErrors: dataSourceErrors,\n                });\n        }\n    }\n}\n"],"mappings":"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","ignoreList":[]}