{"version":3,"file":"NavigationTargetGenerator-dbg.js","names":["sap","ui","define","util","core","___JoinConditions","_____sina_SinaObject","JoinConditions","SinaObject","NavigationTargetGenerator","active","getPropertyMetadata","urlPrefix","navigationTargetTemplatesInitialized","navigationTargetTemplatesMap","objectTypeMap","ignoredSemanticObjectTypes","constructor","properties","checkActive","LastChangedByUser","CreationDate","CreatedByUser","sors","getUrlParameter","cleanup","registerObjectType","objectTypeMetadata","metadata","type","label","propertyMap","i","length","property","propertyMetadata","filterSemanticObjectType","name","semanticObjectType","finishRegistration","calculateNavigationTargetTemplates","joinConditionsMap","collectJoinConditions","createNavTargetTemplatesFromJoinConditions","sourceObjectType","objectTypeJoinConditionsMap","navigationTargets","targetObjectType","joinConditions","push","generateNavigationTargetTemplates","semanticObjectTypeMap","createIndex","objectType","collectJoinConditionsForObjectType","isEmptyObject","getJoinConditions","sina","navigationTargetGenerator","bind","propertyName","response","targetObjectTypeMap","targetObjectTypeMetadata","targetPropertyNameMap","targetPropertyName","targetProperty","request","add","sourcePropertyName","createIndexForObjectType","propertyNameMap","propertyFlag","formatItem","item","collectAttributes","data","attributes","attribute","id","detailAttributes","titleAttributes","generateNavigationTargetsForItem","navigationTargetTemplates","dataSource","undefined","formattedItem","navigationTargetTemplate","navigationTarget","generate","generateNavigationTargets","searchResultSet","items","setNavigationTargets","__exports","__esModule"],"sources":["NavigationTargetGenerator.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\nimport * as util from \"../../../core/util\";\nimport * as core from \"../../../core/core\";\nimport { JoinConditions } from \"./JoinConditions\";\nimport { SinaObject, SinaObjectProperties } from \"../../../sina/SinaObject\";\n\nexport interface NavigationTargetGeneratorOptions extends SinaObjectProperties {\n    getPropertyMetadata: any;\n    urlPrefix: string;\n}\nexport class NavigationTargetGenerator extends SinaObject {\n    active: boolean;\n    getPropertyMetadata: any;\n    urlPrefix: string;\n    navigationTargetTemplatesInitialized: boolean;\n    navigationTargetTemplatesMap: Record<string, any>;\n    objectTypeMap: Record<string, any>;\n    ignoredSemanticObjectTypes: {\n        LastChangedByUser: boolean;\n        CreationDate: boolean;\n        CreatedByUser: boolean;\n    };\n\n    constructor(properties: NavigationTargetGeneratorOptions) {\n        super(properties);\n        this.active = this.checkActive();\n        this.getPropertyMetadata = properties.getPropertyMetadata;\n        this.urlPrefix = properties.urlPrefix;\n        this.navigationTargetTemplatesInitialized = false;\n        this.navigationTargetTemplatesMap = {};\n        this.objectTypeMap = {};\n        this.ignoredSemanticObjectTypes = {\n            LastChangedByUser: true,\n            CreationDate: true,\n            CreatedByUser: true,\n        };\n    }\n\n    checkActive() {\n        const sors = util.getUrlParameter(\"sors\");\n        if (sors === \"true\") {\n            return true;\n        }\n        return false;\n    }\n\n    cleanup() {\n        this.objectTypeMap = null;\n    }\n\n    registerObjectType(objectTypeMetadata) {\n        if (!this.active) {\n            return;\n        }\n        const metadata = {\n            type: objectTypeMetadata.type,\n            label: objectTypeMetadata.label,\n            propertyMap: {},\n        };\n        this.objectTypeMap[objectTypeMetadata.type] = metadata;\n        for (let i = 0; i < objectTypeMetadata.properties.length; ++i) {\n            const property = objectTypeMetadata.properties[i];\n            const propertyMetadata = this.getPropertyMetadata(property);\n            this.filterSemanticObjectType(propertyMetadata);\n            metadata.propertyMap[propertyMetadata.name] = propertyMetadata;\n        }\n    }\n\n    filterSemanticObjectType(property) {\n        if (this.ignoredSemanticObjectTypes[property.semanticObjectType]) {\n            delete property.semanticObjectType;\n        }\n    }\n\n    finishRegistration() {\n        if (!this.active) {\n            return;\n        }\n        this.calculateNavigationTargetTemplates();\n    }\n\n    calculateNavigationTargetTemplates() {\n        if (this.navigationTargetTemplatesInitialized) {\n            return;\n        }\n        const joinConditionsMap = this.collectJoinConditions();\n        this.navigationTargetTemplatesMap =\n            this.createNavTargetTemplatesFromJoinConditions(joinConditionsMap);\n        this.cleanup();\n        this.navigationTargetTemplatesInitialized = true;\n    }\n\n    createNavTargetTemplatesFromJoinConditions(joinConditionsMap) {\n        const navigationTargetTemplatesMap = {};\n        for (const sourceObjectType in joinConditionsMap) {\n            const objectTypeJoinConditionsMap = joinConditionsMap[sourceObjectType];\n            const navigationTargets = [];\n            for (const targetObjectType in objectTypeJoinConditionsMap) {\n                const joinConditions = objectTypeJoinConditionsMap[targetObjectType];\n                if (!joinConditions) {\n                    continue;\n                }\n                navigationTargets.push(...joinConditions.generateNavigationTargetTemplates());\n            }\n            if (navigationTargets.length !== 0) {\n                navigationTargetTemplatesMap[sourceObjectType] = navigationTargets;\n            }\n        }\n        return navigationTargetTemplatesMap;\n    }\n\n    collectJoinConditions() {\n        const semanticObjectTypeMap = this.createIndex();\n        const joinConditionsMap = {};\n        for (const objectType in this.objectTypeMap) {\n            const objectTypeJoinConditionsMap = this.collectJoinConditionsForObjectType(\n                semanticObjectTypeMap,\n                objectType\n            );\n            if (!core.isEmptyObject(objectTypeJoinConditionsMap)) {\n                joinConditionsMap[objectType] = objectTypeJoinConditionsMap;\n            }\n        }\n        return joinConditionsMap;\n    }\n\n    collectJoinConditionsForObjectType(semanticObjectTypeMap, objectType) {\n        const objectTypeJoinConditionsMap = {};\n        const objectTypeMetadata = this.objectTypeMap[objectType];\n        const getJoinConditions = function (targetObjectType) {\n            let joinConditions = objectTypeJoinConditionsMap[targetObjectType];\n            if (!joinConditions) {\n                joinConditions = new JoinConditions({\n                    sina: this.sina,\n                    navigationTargetGenerator: this,\n                    sourceObjectType: objectType,\n                    targetObjectType: targetObjectType,\n                });\n                objectTypeJoinConditionsMap[targetObjectType] = joinConditions;\n            }\n            return joinConditions;\n        }.bind(this);\n\n        for (const propertyName in objectTypeMetadata.propertyMap) {\n            const property = objectTypeMetadata.propertyMap[propertyName];\n            const semanticObjectType = property.semanticObjectType;\n\n            if (!property.response) {\n                continue;\n            }\n\n            if (!semanticObjectType) {\n                continue;\n            }\n\n            const targetObjectTypeMap = semanticObjectTypeMap[semanticObjectType];\n            for (const targetObjectType in targetObjectTypeMap) {\n                if (targetObjectType === objectTypeMetadata.type) {\n                    continue;\n                }\n                const targetObjectTypeMetadata = this.objectTypeMap[targetObjectType];\n                const targetPropertyNameMap = targetObjectTypeMap[targetObjectType];\n                for (const targetPropertyName in targetPropertyNameMap) {\n                    const targetProperty = targetObjectTypeMetadata.propertyMap[targetPropertyName];\n                    if (!targetProperty.request) {\n                        continue;\n                    }\n                    const joinConditions = getJoinConditions(targetObjectType);\n                    joinConditions.add({\n                        sourcePropertyName: propertyName,\n                        targetPropertyName: targetPropertyName,\n                        semanticObjectType: semanticObjectType,\n                    });\n                }\n            }\n        }\n\n        return objectTypeJoinConditionsMap;\n    }\n\n    createIndex() {\n        const semanticObjectTypeMap = {}; // semantic object type / business object type / property name\n        for (const objectType in this.objectTypeMap) {\n            this.createIndexForObjectType(semanticObjectTypeMap, objectType);\n        }\n        return semanticObjectTypeMap;\n    }\n\n    createIndexForObjectType(semanticObjectTypeMap, objectType) {\n        const objectTypeMetadata = this.objectTypeMap[objectType];\n\n        for (const propertyName in objectTypeMetadata.propertyMap) {\n            const property = objectTypeMetadata.propertyMap[propertyName];\n            const semanticObjectType = property.semanticObjectType;\n\n            if (!semanticObjectType) {\n                continue;\n            }\n\n            let objectTypeMap = semanticObjectTypeMap[semanticObjectType];\n            if (!objectTypeMap) {\n                objectTypeMap = {};\n                semanticObjectTypeMap[semanticObjectType] = objectTypeMap;\n            }\n\n            let propertyNameMap = objectTypeMap[objectTypeMetadata.type];\n            if (!propertyNameMap) {\n                propertyNameMap = {};\n                objectTypeMap[objectTypeMetadata.type] = propertyNameMap;\n            }\n\n            let propertyFlag = propertyNameMap[propertyName];\n            if (!propertyFlag) {\n                propertyFlag = true;\n                propertyNameMap[propertyName] = true;\n            }\n        }\n    }\n\n    formatItem(item) {\n        const collectAttributes = function (data, attributes) {\n            for (let i = 0; i < attributes.length; ++i) {\n                const attribute = attributes[i];\n                data[attribute.id] = attribute;\n            }\n        };\n        const data = {};\n        collectAttributes(data, item.detailAttributes);\n        collectAttributes(data, item.titleAttributes);\n        return data;\n    }\n\n    generateNavigationTargetsForItem(item) {\n        const navigationTargetTemplates = this.navigationTargetTemplatesMap[item.dataSource.id];\n        if (!navigationTargetTemplates) {\n            return undefined;\n        }\n        const formattedItem = this.formatItem(item);\n        const navigationTargets = [];\n        for (let i = 0; i < navigationTargetTemplates.length; ++i) {\n            const navigationTargetTemplate = navigationTargetTemplates[i];\n            const navigationTarget = navigationTargetTemplate.generate(formattedItem);\n            if (!navigationTarget) {\n                continue;\n            }\n            navigationTargets.push(navigationTarget);\n        }\n        return navigationTargets;\n    }\n\n    generateNavigationTargets(searchResultSet) {\n        if (!this.active) {\n            return;\n        }\n        for (let i = 0; i < searchResultSet.items.length; ++i) {\n            const item = searchResultSet.items[i];\n            const navigationTargets = this.generateNavigationTargetsForItem(item);\n            item.setNavigationTargets(navigationTargets);\n        }\n    }\n}\n"],"mappings":"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","ignoreList":[]}