{"version":3,"file":"Util-dbg.js","names":["sap","ui","define","module","____sina_AttributeType","____sina_ComparisonOperator","__ui5_require_async","path","Promise","resolve","reject","require","__esModule","endsWith","default","Object","defineProperty","value","err","AttributeType","ComparisonOperator","readFile","window","fs","url","pathLib","__filename","fileURLToPath","__dirname","dirname","elisaPath","join","data","readFileSync","encoding","toString","response","fetch","ok","Error","statusText","text","error","console","isValuePairMatched","value1","value2","operator","caseSensitive","type","Date","Eq","Ne","Ge","Le","Gt","Lt","createRegExp","test","pattern","replace","cs","RegExp","Co","Bw","Ew","getMatchedStringValues","stringValues","searchTerm","isStarString","isEmptyString","filter","sValue","formatRawValue","stringValue","Double","parseFloat","Integer","parseInt","String","ImageUrl","ImageBlob","GeoJson","date","isNaN","getTime","getFullYear","getMonth","getDate","Time","Timestamp","Group","formatHighlightedValue","regex","format10Power","isCeil","digits","Math","trunc","split","map","Number","length","pow","__exports"],"sources":["Util.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\nimport { AttributeType } from \"../../sina/AttributeType\";\nimport { ComparisonOperator } from \"../../sina/ComparisonOperator\";\nimport { Value as RawValue } from \"../../sina/types\";\n\nexport async function readFile(path: string): Promise<string> {\n    try {\n        if (typeof window === \"undefined\") {\n            // Node.js environment\n            const fs = await import(\"node:fs\");\n            const url = await import(\"node:url\");\n            const pathLib = await import(\"node:path\");\n            const __filename = url.fileURLToPath(import.meta.url);\n            const __dirname = pathLib.dirname(__filename);\n            const elisaPath = pathLib.join(__dirname, \"../../../../../../../..\");\n            //path = path.replace(\"/$elisa$\", elisaPath);\n            path = elisaPath + \"/dist/\" + path;\n            const data = fs.readFileSync(path, { encoding: \"utf-8\" }).toString();\n            return data;\n        } else {\n            // browser environment\n            const response = await fetch(path);\n            if (!response.ok) {\n                throw new Error(`Failed to fetch file: ${response.statusText}`);\n            }\n            return await response.text();\n        }\n    } catch (error) {\n        console.error(`Error reading file at ${path}:`, error);\n        throw error;\n    }\n}\n\nexport function isValuePairMatched(\n    value1: RawValue,\n    value2: RawValue,\n    operator: ComparisonOperator,\n    caseSensitive?: boolean\n): boolean {\n    if (typeof value1 !== typeof value2) {\n        return false;\n    }\n\n    const type = typeof value1;\n\n    if (type === \"number\" || (value1 instanceof Date && value2 instanceof Date)) {\n        switch (operator) {\n            case ComparisonOperator.Eq:\n                return value1 === value2;\n            case ComparisonOperator.Ne:\n                return value1 !== value2;\n            case ComparisonOperator.Ge:\n                return value1 >= value2;\n            case ComparisonOperator.Le:\n                return value1 <= value2;\n            case ComparisonOperator.Gt:\n                return value1 > value2;\n            case ComparisonOperator.Lt:\n                return value1 < value2;\n        }\n    }\n\n    if (type === \"string\") {\n        return createRegExp(value2 as string, operator, caseSensitive).test(value1 as string);\n    }\n}\n\nfunction createRegExp(value: string, operator: ComparisonOperator, caseSensitive?: boolean): RegExp {\n    const pattern = value\n        .replace(/[.+?^${}()|[\\]\\\\]/g, \"\\\\$&\") // escape everything except *\n        .replace(/\\*/g, \".*\"); // replace * with .*\n    const cs = caseSensitive !== true ? \"i\" : \"\";\n    switch (operator) {\n        case ComparisonOperator.Eq:\n            return new RegExp(`^${pattern}$`, cs);\n        case ComparisonOperator.Ne:\n            return new RegExp(`^(?!${pattern}$).*`, cs);\n        case ComparisonOperator.Co:\n            return new RegExp(pattern, cs);\n        case ComparisonOperator.Bw:\n            return new RegExp(`^${pattern}`, cs);\n        case ComparisonOperator.Ew:\n            return new RegExp(`${pattern}$`, cs);\n        default:\n            return new RegExp(`^${pattern}`, cs);\n    }\n}\n\nexport function getMatchedStringValues(\n    stringValues: string[],\n    searchTerm: string,\n    caseSensitive?: boolean\n): string[] {\n    if (isStarString(searchTerm)) {\n        return stringValues;\n    }\n\n    if (isEmptyString(searchTerm)) {\n        return stringValues;\n    }\n\n    return stringValues.filter((sValue) =>\n        isValuePairMatched(sValue, searchTerm, ComparisonOperator.Co, caseSensitive)\n    );\n}\n\nexport function formatRawValue(stringValue: string, type: AttributeType): RawValue {\n    switch (type) {\n        case AttributeType.Double:\n            return parseFloat(stringValue) || 0;\n        case AttributeType.Integer:\n            return parseInt(stringValue, 10) || 0;\n        case AttributeType.String:\n            return stringValue;\n        case AttributeType.ImageUrl:\n            return stringValue;\n        case AttributeType.ImageBlob:\n            return stringValue;\n        case AttributeType.GeoJson:\n            return stringValue;\n        case AttributeType.Date: {\n            const date = isNaN(new Date(stringValue).getTime()) ? new Date(0) : new Date(stringValue);\n            return date.getFullYear() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getDate();\n        }\n        case AttributeType.Time:\n            return stringValue;\n        case AttributeType.Timestamp: {\n            const date = isNaN(new Date(stringValue).getTime()) ? new Date(0) : new Date(stringValue);\n            return date;\n        }\n        case AttributeType.Group:\n            return stringValue;\n        default:\n            return stringValue;\n    }\n}\n\nexport function formatHighlightedValue(stringValue: string, searchTerm: string): string {\n    if (isStarString(searchTerm)) {\n        return stringValue;\n    }\n    if (isEmptyString(searchTerm)) {\n        return stringValue;\n    }\n    const regex = new RegExp(`(${searchTerm})`, \"gi\");\n    return stringValue.replace(regex, \"<b>$1</b>\");\n}\n\nexport function format10Power(value: number, isCeil?: boolean): number {\n    // isCeil NOT true: find biggest 10 power number, smaller than value\n    // isCeil true: find smallest 10 power number, bigger than value\n    const digits = isCeil\n        ? Math.trunc(value).toString().split(\"\").map(Number).length\n        : Math.trunc(value).toString().split(\"\").map(Number).length - 1;\n    if (isCeil) {\n        return Math.pow(10, digits);\n    } else {\n        return digits === 0 ? 0 : Math.pow(10, digits);\n    }\n}\n\nexport function isStarString(value: string): boolean {\n    return value === \"*\";\n}\n\nexport function isEmptyString(value: string): boolean {\n    return typeof value === \"string\" && value === \"\";\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAJAA,GAAA,CAAAC,EAAA,CAAAC,MAAA,oFAAAC,MAAA,EAAAC,sBAAA,EAAAC,2BAAA;EAAA;;EAAA,SAAAC,oBAAAC,IAAA;IAAA,WAAAC,OAAA,WAAAC,OAAA,EAAAC,MAAA;MAAAV,GAAA,CAAAC,EAAA,CAAAU,OAAA,EAAAJ,IAAA,aAAAJ,MAAA;QAAA,MAAAA,MAAA,IAAAA,MAAA,CAAAS,UAAA;UAAAT,MAAA,GAAAA,MAAA,sBAAAA,MAAA,iBAAAI,IAAA,CAAAM,QAAA;YAAAC,OAAA,EAAAX;UAAA,IAAAA,MAAA;UAAAY,MAAA,CAAAC,cAAA,CAAAb,MAAA;YAAAc,KAAA;UAAA;QAAA;QAAAR,OAAA,CAAAN,MAAA;MAAA,aAAAe,GAAA;QAAAR,MAAA,CAAAQ,GAAA;MAAA;IAAA;EAAA;EAAA,MAKSC,aAAa,GAAAf,sBAAA;EAAA,MACbgB,kBAAkB,GAAAf,2BAAA;EAGpB,eAAegB,QAAQA,CAACd,IAAY,EAAmB;IAC1D,IAAI;MACA,IAAI,OAAOe,MAAM,KAAK,WAAW,EAAE;QAC/B;QACA,MAAMC,EAAE,GAAG,MAAMjB,mBAAA,CAAO,SAAS,CAAC;QAClC,MAAMkB,GAAG,GAAG,MAAMlB,mBAAA,CAAO,UAAU,CAAC;QACpC,MAAMmB,OAAO,GAAG,MAAMnB,mBAAA,CAAO,WAAW,CAAC;QACzC,MAAMoB,UAAU,GAAGF,GAAG,CAACG,aAAa,CAAAxB,MAAA,CAAAqB,GAAgB,CAAC;QACrD,MAAMI,SAAS,GAAGH,OAAO,CAACI,OAAO,CAACH,UAAU,CAAC;QAC7C,MAAMI,SAAS,GAAGL,OAAO,CAACM,IAAI,CAACH,SAAS,EAAE,yBAAyB,CAAC;QACpE;QACArB,IAAI,GAAGuB,SAAS,GAAG,QAAQ,GAAGvB,IAAI;QAClC,MAAMyB,IAAI,GAAGT,EAAE,CAACU,YAAY,CAAC1B,IAAI,EAAE;UAAE2B,QAAQ,EAAE;QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;QACpE,OAAOH,IAAI;MACf,CAAC,MAAM;QACH;QACA,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC9B,IAAI,CAAC;QAClC,IAAI,CAAC6B,QAAQ,CAACE,EAAE,EAAE;UACd,MAAM,IAAIC,KAAK,CAAC,yBAAyBH,QAAQ,CAACI,UAAU,EAAE,CAAC;QACnE;QACA,OAAO,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAChC;IACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,yBAAyBnC,IAAI,GAAG,EAAEmC,KAAK,CAAC;MACtD,MAAMA,KAAK;IACf;EACJ;EAEO,SAASE,kBAAkBA,CAC9BC,MAAgB,EAChBC,MAAgB,EAChBC,QAA4B,EAC5BC,aAAuB,EAChB;IACP,IAAI,OAAOH,MAAM,KAAK,OAAOC,MAAM,EAAE;MACjC,OAAO,KAAK;IAChB;IAEA,MAAMG,IAAI,GAAG,OAAOJ,MAAM;IAE1B,IAAII,IAAI,KAAK,QAAQ,IAAKJ,MAAM,YAAYK,IAAI,IAAIJ,MAAM,YAAYI,IAAK,EAAE;MACzE,QAAQH,QAAQ;QACZ,KAAK3B,kBAAkB,CAAC+B,EAAE;UACtB,OAAON,MAAM,KAAKC,MAAM;QAC5B,KAAK1B,kBAAkB,CAACgC,EAAE;UACtB,OAAOP,MAAM,KAAKC,MAAM;QAC5B,KAAK1B,kBAAkB,CAACiC,EAAE;UACtB,OAAOR,MAAM,IAAIC,MAAM;QAC3B,KAAK1B,kBAAkB,CAACkC,EAAE;UACtB,OAAOT,MAAM,IAAIC,MAAM;QAC3B,KAAK1B,kBAAkB,CAACmC,EAAE;UACtB,OAAOV,MAAM,GAAGC,MAAM;QAC1B,KAAK1B,kBAAkB,CAACoC,EAAE;UACtB,OAAOX,MAAM,GAAGC,MAAM;MAC9B;IACJ;IAEA,IAAIG,IAAI,KAAK,QAAQ,EAAE;MACnB,OAAOQ,YAAY,CAACX,MAAM,EAAYC,QAAQ,EAAEC,aAAa,CAAC,CAACU,IAAI,CAACb,MAAgB,CAAC;IACzF;EACJ;EAEA,SAASY,YAAYA,CAACxC,KAAa,EAAE8B,QAA4B,EAAEC,aAAuB,EAAU;IAChG,MAAMW,OAAO,GAAG1C,KAAK,CAChB2C,OAAO,CAAC,oBAAoB,EAAE,MAAM,CAAC,CAAC;IAAA,CACtCA,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC;IAC3B,MAAMC,EAAE,GAAGb,aAAa,KAAK,IAAI,GAAG,GAAG,GAAG,EAAE;IAC5C,QAAQD,QAAQ;MACZ,KAAK3B,kBAAkB,CAAC+B,EAAE;QACtB,OAAO,IAAIW,MAAM,CAAC,IAAIH,OAAO,GAAG,EAAEE,EAAE,CAAC;MACzC,KAAKzC,kBAAkB,CAACgC,EAAE;QACtB,OAAO,IAAIU,MAAM,CAAC,OAAOH,OAAO,MAAM,EAAEE,EAAE,CAAC;MAC/C,KAAKzC,kBAAkB,CAAC2C,EAAE;QACtB,OAAO,IAAID,MAAM,CAACH,OAAO,EAAEE,EAAE,CAAC;MAClC,KAAKzC,kBAAkB,CAAC4C,EAAE;QACtB,OAAO,IAAIF,MAAM,CAAC,IAAIH,OAAO,EAAE,EAAEE,EAAE,CAAC;MACxC,KAAKzC,kBAAkB,CAAC6C,EAAE;QACtB,OAAO,IAAIH,MAAM,CAAC,GAAGH,OAAO,GAAG,EAAEE,EAAE,CAAC;MACxC;QACI,OAAO,IAAIC,MAAM,CAAC,IAAIH,OAAO,EAAE,EAAEE,EAAE,CAAC;IAC5C;EACJ;EAEO,SAASK,sBAAsBA,CAClCC,YAAsB,EACtBC,UAAkB,EAClBpB,aAAuB,EACf;IACR,IAAIqB,YAAY,CAACD,UAAU,CAAC,EAAE;MAC1B,OAAOD,YAAY;IACvB;IAEA,IAAIG,aAAa,CAACF,UAAU,CAAC,EAAE;MAC3B,OAAOD,YAAY;IACvB;IAEA,OAAOA,YAAY,CAACI,MAAM,CAAEC,MAAM,IAC9B5B,kBAAkB,CAAC4B,MAAM,EAAEJ,UAAU,EAAEhD,kBAAkB,CAAC2C,EAAE,EAAEf,aAAa,CAC/E,CAAC;EACL;EAEO,SAASyB,cAAcA,CAACC,WAAmB,EAAEzB,IAAmB,EAAY;IAC/E,QAAQA,IAAI;MACR,KAAK9B,aAAa,CAACwD,MAAM;QACrB,OAAOC,UAAU,CAACF,WAAW,CAAC,IAAI,CAAC;MACvC,KAAKvD,aAAa,CAAC0D,OAAO;QACtB,OAAOC,QAAQ,CAACJ,WAAW,EAAE,EAAE,CAAC,IAAI,CAAC;MACzC,KAAKvD,aAAa,CAAC4D,MAAM;QACrB,OAAOL,WAAW;MACtB,KAAKvD,aAAa,CAAC6D,QAAQ;QACvB,OAAON,WAAW;MACtB,KAAKvD,aAAa,CAAC8D,SAAS;QACxB,OAAOP,WAAW;MACtB,KAAKvD,aAAa,CAAC+D,OAAO;QACtB,OAAOR,WAAW;MACtB,KAAKvD,aAAa,CAAC+B,IAAI;QAAE;UACrB,MAAMiC,IAAI,GAAGC,KAAK,CAAC,IAAIlC,IAAI,CAACwB,WAAW,CAAC,CAACW,OAAO,CAAC,CAAC,CAAC,GAAG,IAAInC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAIA,IAAI,CAACwB,WAAW,CAAC;UACzF,OAAOS,IAAI,CAACG,WAAW,CAAC,CAAC,GAAG,GAAG,IAAIH,IAAI,CAACI,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,GAAGJ,IAAI,CAACK,OAAO,CAAC,CAAC;QAClF;MACA,KAAKrE,aAAa,CAACsE,IAAI;QACnB,OAAOf,WAAW;MACtB,KAAKvD,aAAa,CAACuE,SAAS;QAAE;UAC1B,MAAMP,IAAI,GAAGC,KAAK,CAAC,IAAIlC,IAAI,CAACwB,WAAW,CAAC,CAACW,OAAO,CAAC,CAAC,CAAC,GAAG,IAAInC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAIA,IAAI,CAACwB,WAAW,CAAC;UACzF,OAAOS,IAAI;QACf;MACA,KAAKhE,aAAa,CAACwE,KAAK;QACpB,OAAOjB,WAAW;MACtB;QACI,OAAOA,WAAW;IAC1B;EACJ;EAEO,SAASkB,sBAAsBA,CAAClB,WAAmB,EAAEN,UAAkB,EAAU;IACpF,IAAIC,YAAY,CAACD,UAAU,CAAC,EAAE;MAC1B,OAAOM,WAAW;IACtB;IACA,IAAIJ,aAAa,CAACF,UAAU,CAAC,EAAE;MAC3B,OAAOM,WAAW;IACtB;IACA,MAAMmB,KAAK,GAAG,IAAI/B,MAAM,CAAC,IAAIM,UAAU,GAAG,EAAE,IAAI,CAAC;IACjD,OAAOM,WAAW,CAACd,OAAO,CAACiC,KAAK,EAAE,WAAW,CAAC;EAClD;EAEO,SAASC,aAAaA,CAAC7E,KAAa,EAAE8E,MAAgB,EAAU;IACnE;IACA;IACA,MAAMC,MAAM,GAAGD,MAAM,GACfE,IAAI,CAACC,KAAK,CAACjF,KAAK,CAAC,CAACkB,QAAQ,CAAC,CAAC,CAACgE,KAAK,CAAC,EAAE,CAAC,CAACC,GAAG,CAACC,MAAM,CAAC,CAACC,MAAM,GACzDL,IAAI,CAACC,KAAK,CAACjF,KAAK,CAAC,CAACkB,QAAQ,CAAC,CAAC,CAACgE,KAAK,CAAC,EAAE,CAAC,CAACC,GAAG,CAACC,MAAM,CAAC,CAACC,MAAM,GAAG,CAAC;IACnE,IAAIP,MAAM,EAAE;MACR,OAAOE,IAAI,CAACM,GAAG,CAAC,EAAE,EAAEP,MAAM,CAAC;IAC/B,CAAC,MAAM;MACH,OAAOA,MAAM,KAAK,CAAC,GAAG,CAAC,GAAGC,IAAI,CAACM,GAAG,CAAC,EAAE,EAAEP,MAAM,CAAC;IAClD;EACJ;EAEO,SAAS3B,YAAYA,CAACpD,KAAa,EAAW;IACjD,OAAOA,KAAK,KAAK,GAAG;EACxB;EAEO,SAASqD,aAAaA,CAACrD,KAAa,EAAW;IAClD,OAAO,OAAOA,KAAK,KAAK,QAAQ,IAAIA,KAAK,KAAK,EAAE;EACpD;EAAC,IAAAuF,SAAA;IAAA5F,UAAA;EAAA;EAAA4F,SAAA,CAAAnF,QAAA,GAAAA,QAAA;EAAAmF,SAAA,CAAA5D,kBAAA,GAAAA,kBAAA;EAAA4D,SAAA,CAAAtC,sBAAA,GAAAA,sBAAA;EAAAsC,SAAA,CAAA/B,cAAA,GAAAA,cAAA;EAAA+B,SAAA,CAAAZ,sBAAA,GAAAA,sBAAA;EAAAY,SAAA,CAAAV,aAAA,GAAAA,aAAA;EAAAU,SAAA,CAAAnC,YAAA,GAAAA,YAAA;EAAAmC,SAAA,CAAAlC,aAAA,GAAAA,aAAA;EAAA,OAAAkC,SAAA;AAAA","ignoreList":[]}