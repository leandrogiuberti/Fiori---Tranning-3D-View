{"version":3,"file":"ProviderHelper.js","names":["sap","ui","define","ProviderHelper","provider","sina","constructor","this","calculateMultiDataSourceLabel","label","identify","id","calculateMultiDataSourceId","updateProviderId","childSina","i","duplicateSina","findSinaById","createMultiDataSource","dataSource","_createDataSource","labelPlural","type","hidden","attributesMetadata","providerId","multiSina","length","undefined","updateAttributesMetadata","dataSourceWithMetadata","attributeMetadataMap","updateSuggestionDataSource","results","items","item","childSuggestions","j","childSuggestion","dataSourceId","dataSourceMap","filter","multiDataSourceId","multiDataSource","createMultiChartResultSet","chartResultSet","that","multiChartResultSet","_createChartResultSet","query","title","facetTotalCount","childChartResultSetItem","childFilterCondition","parseConditionFromJson","filterCondition","toJson","push","_createChartResultSetItem","dimensionValueFormatted","measureValue","measureValueFormatted","updateDataSourceFacets","resultSetFacets","facetItem","facetItemMultiId","multiDataSourceMap","updateRootCondition","rootCondition","conditions","__exports","__esModule"],"sources":["ProviderHelper.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\nimport { MultiProvider } from \"./Provider\";\nimport { Sina } from \"../../sina/Sina\";\nimport { ComplexCondition } from \"../../sina/ComplexCondition\";\nimport { AbstractProvider } from \"../AbstractProvider\";\nimport { DataSource } from \"../../sina/DataSource\";\n\nexport class ProviderHelper {\n    provider: MultiProvider;\n    sina: Sina;\n\n    constructor(provider: MultiProvider) {\n        this.provider = provider;\n        this.sina = provider.sina;\n    }\n\n    calculateMultiDataSourceLabel(label: string, provider: AbstractProvider): string {\n        if (provider.label) {\n            const identify = provider.label || provider.id;\n            return label + \" - \" + identify;\n        }\n        return label;\n    }\n\n    calculateMultiDataSourceId(id: string, identify: string): string {\n        return identify + \"_\" + id;\n    }\n\n    updateProviderId(childSina: Sina): void {\n        let i = 0;\n        for (;;) {\n            if (i !== 0) {\n                childSina.provider.id = childSina.provider.id + \"_\" + i;\n            }\n            const duplicateSina = this.findSinaById(childSina.provider.id);\n            if (duplicateSina) {\n                i++;\n                continue;\n            } else {\n                break;\n            }\n        }\n    }\n\n    //input: multiDataSource id, dataSource with child provider, output: dataSource with multi provider\n    createMultiDataSource(id: string, dataSource: DataSource): DataSource {\n        return this.sina._createDataSource({\n            id: id,\n            label: this.calculateMultiDataSourceLabel(dataSource.label, dataSource.sina.provider),\n            labelPlural: this.calculateMultiDataSourceLabel(dataSource.labelPlural, dataSource.sina.provider),\n            type: dataSource.type,\n            hidden: dataSource.hidden,\n            attributesMetadata: dataSource.attributesMetadata,\n        });\n    }\n\n    findSinaById(providerId: string): Sina | undefined {\n        for (let i = 0; i < this.provider.multiSina.length; i++) {\n            const childSina = this.provider.multiSina[i];\n            if (providerId === childSina.provider.id) {\n                return childSina;\n            }\n        }\n        return undefined;\n    }\n\n    updateAttributesMetadata(dataSourceWithMetadata: DataSource, dataSource: DataSource): void {\n        dataSource.attributesMetadata = dataSourceWithMetadata.attributesMetadata;\n        dataSource.attributeMetadataMap = dataSourceWithMetadata.attributeMetadataMap;\n    }\n\n    updateSuggestionDataSource(results) {\n        for (let i = 0; i < results.items.length; i++) {\n            const item = results.items[i];\n            if (item.childSuggestions) {\n                for (let j = 0; j < item.childSuggestions.length; j++) {\n                    const childSuggestion = item.childSuggestions[j];\n                    const dataSourceId = this.calculateMultiDataSourceId(\n                        childSuggestion.dataSource.id,\n                        childSuggestion.sina.provider.id\n                    );\n                    childSuggestion.dataSource = this.sina.dataSourceMap[dataSourceId];\n                    childSuggestion.filter.dataSource = this.sina.dataSourceMap[dataSourceId];\n                }\n            }\n            //update dataSource for dataSource suggestion type\n            if (item.dataSource) {\n                item.label = this.calculateMultiDataSourceLabel(item.label, item.sina.provider);\n                const multiDataSourceId = this.calculateMultiDataSourceId(\n                    item.dataSource.id,\n                    item.sina.provider.id\n                );\n                // const multiDataSource = this.createMultiDataSource(multiDataSourceId, item.dataSource);\n                const multiDataSource = this.sina.dataSourceMap[multiDataSourceId];\n                item.dataSource = multiDataSource;\n                item.sina = this.sina;\n            }\n        }\n        return results;\n    }\n\n    createMultiChartResultSet(chartResultSet) {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const that = this;\n        const multiChartResultSet = that.sina._createChartResultSet({\n            id: chartResultSet.id,\n            items: [],\n            query: chartResultSet.query,\n            title: chartResultSet.title,\n            facetTotalCount: undefined,\n        });\n        for (let i = 0; i < chartResultSet.items.length; i++) {\n            const childChartResultSetItem = chartResultSet.items[i];\n            const childFilterCondition = that.sina.parseConditionFromJson(\n                childChartResultSetItem.filterCondition.toJson()\n            );\n            multiChartResultSet.items.push(\n                that.sina._createChartResultSetItem({\n                    filterCondition: childFilterCondition,\n                    dimensionValueFormatted: childChartResultSetItem.dimensionValueFormatted,\n                    measureValue: childChartResultSetItem.measureValue,\n                    measureValueFormatted: childChartResultSetItem.measureValueFormatted,\n                })\n            );\n        }\n        return multiChartResultSet;\n    }\n\n    updateDataSourceFacets(resultSetFacets) {\n        for (let j = 0; j < resultSetFacets[0].items.length; j++) {\n            const facetItem = resultSetFacets[0].items[j];\n            if (facetItem.dataSource) {\n                const facetItemMultiId = this.calculateMultiDataSourceId(\n                    facetItem.dataSource.id,\n                    facetItem.sina.provider.id\n                );\n                //new Category, should be insert to multi provider\n                if (!this.provider.multiDataSourceMap[facetItemMultiId]) {\n                    this.createMultiDataSource(facetItemMultiId, facetItem.dataSource);\n                    this.provider.multiDataSourceMap[facetItemMultiId] = facetItem.dataSource;\n                }\n                //set the facet result item dataSource as multi provider dataSource\n                facetItem.dataSource = this.sina.dataSourceMap[facetItemMultiId];\n            }\n        }\n        return resultSetFacets;\n    }\n\n    // update rootCondition sina as childSina\n    updateRootCondition(rootCondition: ComplexCondition, childSina: Sina): void {\n        rootCondition.sina = childSina;\n        if (rootCondition.conditions && rootCondition.conditions.length > 0) {\n            for (let i = 0; i < rootCondition.conditions.length; i++) {\n                this.updateRootCondition(rootCondition.conditions[i] as ComplexCondition, childSina);\n            }\n        }\n    }\n}\n"],"mappings":"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","ignoreList":[]}