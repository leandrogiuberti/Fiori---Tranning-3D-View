{"version":3,"file":"HierarchyParser-dbg.js","names":["sap","ui","define","____sina_HierarchyQuery","HierarchyQuery","HierarchyParser","parseHierarchyFacet","query","attributeMetadata","facetData","nodeId","hierarchyQuery","sina","createHierarchyQuery","filter","clone","attributeId","id","nlq","resultSet","_createHierarchyResultSet","node","items","title","facetTotalCount","undefined","nodeMap","nodes","Items","item","createHierarchyNode","label","count","_Count","hasChildren","_HasChildren","push","parentId","JSON","parse","_Parent","parentNode","addChildNode","find","__exports","__esModule"],"sources":["HierarchyParser.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\nimport { AttributeMetadata } from \"../../sina/AttributeMetadata\";\nimport { HierarchyNode } from \"../../sina/HierarchyNode\";\nimport { HierarchyQuery } from \"../../sina/HierarchyQuery\";\nimport { HierarchyResultSet } from \"../../sina/HierarchyResultSet\";\nimport { Query } from \"../../sina/Query\";\n\nexport class HierarchyParser {\n    parseHierarchyFacet(query: Query, attributeMetadata: AttributeMetadata, facetData): HierarchyResultSet {\n        const nodeId = query instanceof HierarchyQuery ? (query as HierarchyQuery).nodeId : \"$$ROOT$$\";\n        const hierarchyQuery = query.sina.createHierarchyQuery({\n            filter: query.filter.clone(),\n            attributeId: attributeMetadata.id,\n            nodeId: nodeId,\n            nlq: query.nlq,\n        });\n        const resultSet = query.sina._createHierarchyResultSet({\n            query: hierarchyQuery,\n            node: null,\n            items: [],\n            title: facetData[\"@com.sap.vocabularies.Common.v1.Label\"] || \"\",\n            facetTotalCount: undefined,\n        });\n        const nodeMap: { [id: string]: HierarchyNode } = {};\n        const nodes: HierarchyNode[] = [];\n        const items = facetData.Items || [];\n        for (const item of items) {\n            const id = item[attributeMetadata.id];\n            // 1. create or update node\n            let node = nodeMap[id];\n            if (!node) {\n                // 1.1 create node\n                node = query.sina.createHierarchyNode({\n                    id: id,\n                    label: item[attributeMetadata.id + \"@com.sap.vocabularies.Common.v1.Text\"],\n                    count: item._Count,\n                    hasChildren: item._HasChildren,\n                });\n                nodes.push(node);\n                nodeMap[id] = node;\n            } else {\n                // 1.2 update node\n                node.label = item[attributeMetadata.id + \"@com.sap.vocabularies.Common.v1.Text\"];\n                node.count = item._Count;\n            }\n            // 2. add node to parent node\n            const parentId = JSON.parse(item._Parent)[attributeMetadata.id];\n            let parentNode = nodeMap[parentId];\n            if (!parentNode) {\n                parentNode = query.sina.createHierarchyNode({\n                    id: parentId,\n                });\n                nodes.push(parentNode);\n                nodeMap[parentId] = parentNode;\n            }\n            parentNode.addChildNode(node);\n        }\n        const node = nodes.find((node) => node.id === nodeId);\n        resultSet.node = node;\n        return resultSet;\n    }\n}\n"],"mappings":"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","ignoreList":[]}