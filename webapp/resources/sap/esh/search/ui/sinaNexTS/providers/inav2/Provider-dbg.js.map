{"version":3,"file":"Provider-dbg.js","names":["sap","ui","define","___AbstractProvider","core","conditionSerializer","dataSourceSerializer","util","lang","ajaxTemplates","labelCalculation","pivotTableParser","suggestionParser","suggestionTermSplitter","___MetadataParser","___ItemParser","___FacetParser","____sina_AttributeType","____core_errors","___ajax","AbstractProvider","MetadataParser","ItemParser","FacetParser","AttributeType","ESHNotActiveError","NotImplementedError","createAjaxClient","Provider","id","urlPrefix","getServerInfoUrl","getResponseUrl","ajaxClient","metadataLoadPromises","internalMetadata","labelCalculator","metadataParser","itemParser","facetParser","sessionId","initAsync","configuration","url","sina","getLanguage","undefined","createLabelCalculator","executeSearchQuery","addMetadataLoadDecorator","executeChartQuery","executeSuggestionQuery","generateGuid","loadServerInfo","then","serverInfo","supports","Promise","reject","loadBusinessObjectDataSources","capabilities","_createCapabilities","fuzzy","executeQuery","args","query","dataSource","filter","resolve","loadMetadata","bind","apply","type","DataSourceType","Category","loadPromise","loadDataSourceMetadataRequest","DataSource","ObjectName","addLanguagePreferences","postJson","response","parseMetadataRequestMetadata","data","service","capability","i","Services","length","checkService","Service","j","Capabilities","checkCapability","Capability","getJson","that","loadDataSourcesRequest","Search","NamedValues","push","AttributeName","Name","_processDataSourcesResponse","connector","ServerInfo","SystemId","Client","fallbackLoadDataSourcesRequest","isFallback","parse","dataSourcesData","axes","dataSourceData","label","labelPlural","isObject","Description","Value","DescriptionPlural","$$ResultItemAttributes$$","forEach","elem","_createDataSource","BusinessObject","calculateLabel","getInternalMetadataAttributes","attributesMetadata","attributeId","getInternalMetadataAttribute","getInternalMetadataLoadStatus","loadStatus","fillInternalMetadata","loadStatusType","attributeMetadata","bufferAttributeMetadata","name","addTemplateConditions","rootCondition","addCondition","attribute","operator","ComparisonOperator","Eq","value","assembleOrderBy","result","sortOrder","sortKey","order","SortOrder","Descending","parsedItems","clone","searchRequest","Filter","serialize","SearchTerms","searchTerm","Top","top","Skip","skip","Options","assembleRequestOptions","OrderBy","Expand","addSessionId","calculateFacets","InputResponse","InputParsedItems","parsedFacets","_createSearchResultSet","ExecutionID","title","items","totalCount","facets","chartRequest","Facets","Attributes","dimension","MaxNumberOfReturnValues","_createChartResultSet","getAttributeMetadata","facetTotalCount","executeHierarchyQuery","splittedTerm","split","createSimpleCondition","INAV2_SearchTerms","INAV2_SuggestionTerms","suggestionTerm","suggestionRequest","Suggestions2","assembleSuggestionOptions","_createSuggestionResultSet","suggestions","concatenate","request","SessionID","SessionTimestamp","parseInt","generateTimestamp","LanguagePreferences","getLanguagePreferences","sina2InaConversion","SearchTerm","Data","History","Object","options","suggestionTypes","types","calculationModes","suggestionType","calculationMode","decideValueHelp","conditions","_getAttribute","getConfigurationAsync","_createConfiguration","personalizedSearch","isPersonalizedSearchEditable","getConfigurationRequest","config","PersonalizedSearch","SessionUserActive","PersonalizationPolicy","saveConfigurationAsync","saveConfigurationRequest","SearchConfiguration","resetPersonalizedSearchDataAsync","resetPersonalizedSearchDataRequest","getDebugInfo","__exports","__esModule"],"sources":["Provider.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\nimport { AbstractProvider } from \"../AbstractProvider\";\nimport * as core from \"../../core/core\";\nimport * as conditionSerializer from \"./conditionSerializer\";\nimport * as dataSourceSerializer from \"./dataSourceSerializer\";\nimport * as util from \"../../core/util\";\nimport * as lang from \"../../core/lang\";\nimport { AjaxClient as Client } from \"../../core/AjaxClient\";\nimport * as ajaxTemplates from \"./ajaxTemplates\";\nimport * as labelCalculation from \"./labelCalculation\";\nimport * as pivotTableParser from \"./pivotTableParser\";\nimport * as suggestionParser from \"./suggestionParser\";\nimport * as suggestionTermSplitter from \"./suggestionTermSplitter\";\nimport { MetadataParser } from \"./MetadataParser\";\nimport { ItemParser } from \"./ItemParser\";\nimport { FacetParser } from \"./FacetParser\";\nimport { LabelCalculator } from \"../../core/LabelCalculator\";\nimport { SearchQuery } from \"../../sina/SearchQuery\";\nimport { ComplexCondition } from \"../../sina/ComplexCondition\";\nimport { SuggestionQuery } from \"../../sina/SuggestionQuery\";\nimport { AttributeType } from \"../../sina/AttributeType\";\nimport { SuggestionResultSet } from \"../../sina/SuggestionResultSet\";\nimport { ESHNotActiveError, NotImplementedError } from \"../../core/errors\";\nimport { HierarchyResultSet } from \"../../sina/HierarchyResultSet\";\nimport { HierarchyQuery } from \"../../sina/HierarchyQuery\";\nimport { Configuration } from \"../../sina/Configuration\";\nimport { ChartResultSet } from \"../../sina/ChartResultSet\";\nimport { ChartQuery } from \"../../sina/ChartQuery\";\nimport { Query } from \"../../sina/Query\";\nimport { SearchResultSet } from \"../../sina/SearchResultSet\";\nimport { createAjaxClient } from \"./ajax\";\nimport { AttributeMetadata } from \"../../sina/AttributeMetadata\";\n\nexport interface ServerInfo {\n    Services: Array<{ Service: unknown; Capabilities: Array<{ Capability: string }> }>;\n    ServerInfo: { SystemId: string; Client: string };\n}\n\n/*interface Request {\n    LanguagePreferences?: Array<lang.LanguagePreference>;\n    SessionID?: string;\n    SessionTimestamp?: number;\n}*/\n\ninterface InternalAttributeMetadata {\n    correspondingSearchAttributeName?: string;\n    Name?: string;\n    presentationUsage?: Array<string>;\n    IsTitle?: boolean;\n}\nexport interface LoadStatus {\n    metadataRequest?: boolean;\n    searchRequest?: boolean;\n}\ninterface InternalDataSourceMetadata {\n    loadStatus: LoadStatus;\n    data: Record<string, InternalAttributeMetadata>;\n}\nexport class Provider extends AbstractProvider {\n    readonly id = \"inav2\";\n    declare serverInfo: ServerInfo;\n    urlPrefix: string;\n    getServerInfoUrl: string;\n    getResponseUrl: string;\n    ajaxClient: Client;\n    metadataLoadPromises: Record<string, Promise<void>>;\n    internalMetadata: Record<string, InternalDataSourceMetadata>;\n    labelCalculator: LabelCalculator;\n    metadataParser: MetadataParser;\n    itemParser: ItemParser;\n    facetParser: FacetParser;\n    sessionId: string;\n\n    initAsync(configuration) {\n        this.urlPrefix = configuration.url || \"/sap/es/ina\";\n        this.getServerInfoUrl = this.urlPrefix + \"/GetServerInfo\";\n        this.getResponseUrl = this.urlPrefix + \"/GetResponse\";\n        this.sina = configuration.sina;\n        this.ajaxClient =\n            configuration.ajaxClient ??\n            createAjaxClient({\n                getLanguage:\n                    typeof configuration.getLanguage === \"function\" ? configuration.getLanguage : undefined,\n            });\n        this.metadataLoadPromises = {};\n        this.internalMetadata = {};\n        this.labelCalculator = labelCalculation.createLabelCalculator();\n        this.metadataParser = new MetadataParser(this);\n        this.itemParser = new ItemParser(this);\n        this.facetParser = new FacetParser(this);\n        this.executeSearchQuery = this.addMetadataLoadDecorator(this.executeSearchQuery);\n        this.executeChartQuery = this.addMetadataLoadDecorator(this.executeChartQuery);\n        this.executeSuggestionQuery = this.addMetadataLoadDecorator(this.executeSuggestionQuery);\n        this.sessionId = core.generateGuid();\n        return this.loadServerInfo()\n            .then((serverInfo) => {\n                this.serverInfo = serverInfo;\n                if (!this.supports(\"Search\")) {\n                    return Promise.reject(new ESHNotActiveError());\n                }\n                return this.loadBusinessObjectDataSources();\n            })\n            .then(() => {\n                return {\n                    capabilities: this.sina._createCapabilities({\n                        fuzzy: this.supports(\"Search\", \"OptionFuzzy\"),\n                    }),\n                };\n            });\n    }\n\n    addMetadataLoadDecorator(executeQuery) {\n        return function (...args) {\n            const query = args[0];\n            const dataSource = query.filter.dataSource;\n            return Promise.resolve()\n                .then(\n                    function () {\n                        // 1) load metadata\n                        return this.loadMetadata(dataSource);\n                    }.bind(this)\n                )\n                .then(\n                    function () {\n                        // 2) execute query\n                        return executeQuery.apply(this, args);\n                    }.bind(this)\n                );\n        }.bind(this);\n    }\n\n    loadMetadata(dataSource): Promise<void> {\n        // categories have no metadata\n        if (dataSource.type === this.sina.DataSourceType.Category) {\n            return Promise.resolve();\n        }\n\n        // check cache\n        let loadPromise = this.metadataLoadPromises[dataSource.id];\n        if (loadPromise) {\n            return loadPromise;\n        }\n\n        // fire request\n        ajaxTemplates.loadDataSourceMetadataRequest.DataSource.ObjectName = dataSource.id;\n        this.addLanguagePreferences(ajaxTemplates.loadDataSourceMetadataRequest);\n        loadPromise = this.ajaxClient\n            .postJson(this.getResponseUrl, ajaxTemplates.loadDataSourceMetadataRequest)\n            .then(\n                function (response) {\n                    this.metadataParser.parseMetadataRequestMetadata(dataSource, response.data);\n                }.bind(this)\n            );\n        this.metadataLoadPromises[dataSource.id] = loadPromise;\n        return loadPromise;\n    }\n\n    supports(service: string, capability?: string): boolean {\n        for (let i = 0; i < this.serverInfo.Services.length; ++i) {\n            const checkService = this.serverInfo.Services[i];\n            if (checkService.Service == service) {\n                if (!capability) {\n                    return true;\n                }\n                for (let j = 0; j < checkService.Capabilities.length; ++j) {\n                    const checkCapability = checkService.Capabilities[j];\n                    if (checkCapability.Capability === capability) {\n                        return true;\n                    }\n                }\n            }\n        }\n        return false;\n    }\n\n    loadServerInfo(): Promise<ServerInfo> {\n        return this.ajaxClient.getJson(this.getServerInfoUrl).then(function (response) {\n            return response.data;\n        }) as Promise<ServerInfo>;\n    }\n\n    loadBusinessObjectDataSources(): Promise<void> {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const that = this;\n        that.addLanguagePreferences(ajaxTemplates.loadDataSourcesRequest);\n\n        // description plural in capability -> add description plural property in request\n        if (that.supports(\"Search\", \"PluralDescriptionForDataSource\")) {\n            ajaxTemplates.loadDataSourcesRequest.Search.NamedValues.push({\n                AttributeName: \"DescriptionPlural\",\n                Name: \"DescriptionPlural\",\n            });\n        }\n\n        return that.ajaxClient.postJson(that.getResponseUrl, ajaxTemplates.loadDataSourcesRequest).then(\n            function (response) {\n                that._processDataSourcesResponse(response, false);\n            },\n            function () {\n                const connector =\n                    that.serverInfo.ServerInfo.SystemId +\n                    that.serverInfo.ServerInfo.Client +\n                    \"~ESH_CONNECTOR~\";\n                ajaxTemplates.fallbackLoadDataSourcesRequest.DataSource.ObjectName = connector;\n                return that.ajaxClient\n                    .postJson(that.getResponseUrl, ajaxTemplates.fallbackLoadDataSourcesRequest)\n                    .then(function (response) {\n                        that._processDataSourcesResponse(response, true);\n                    });\n            }\n        );\n    }\n\n    _processDataSourcesResponse(response, isFallback: boolean) {\n        const data = pivotTableParser.parse(response.data);\n        const dataSourcesData = data.axes[0];\n        for (let i = 0; i < dataSourcesData.length; ++i) {\n            const dataSourceData = dataSourcesData[i];\n            let label = \"\";\n            let labelPlural = \"\";\n            let id = \"\";\n\n            if (!isFallback) {\n                if (core.isObject(dataSourceData.Description)) {\n                    label = dataSourceData.Description.Value;\n                } else {\n                    label = dataSourceData.Description;\n                }\n                if (core.isObject(dataSourceData.DescriptionPlural)) {\n                    labelPlural = dataSourceData.DescriptionPlural.Value;\n                } else {\n                    labelPlural = dataSourceData.DescriptionPlural;\n                }\n                if (core.isObject(dataSourceData.ObjectName)) {\n                    id = dataSourceData.ObjectName.Value;\n                } else {\n                    id = dataSourceData.ObjectName;\n                }\n            } else {\n                // fallback\n                dataSourceData.$$ResultItemAttributes$$.forEach(function (elem) {\n                    if (elem.Name === \"DESCRIPTION\") {\n                        label = elem.Value;\n                    }\n                    if (elem.Name === \"DESCRIPTION_PLURAL\") {\n                        labelPlural = elem.Value;\n                    }\n                    if (elem.Name === \"OBJECT_NAME\") {\n                        id = elem.Value;\n                    }\n                });\n            }\n\n            if (!label) {\n                label = id;\n            }\n            if (!labelPlural) {\n                labelPlural = label;\n            }\n\n            const dataSource = this.sina._createDataSource({\n                id: id,\n                label: label,\n                labelPlural: labelPlural,\n                type: this.sina.DataSourceType.BusinessObject,\n            });\n\n            this.labelCalculator.calculateLabel(dataSource);\n        }\n    }\n\n    getInternalMetadataAttributes(dataSource) {\n        const attributesMetadata = [];\n        const internalMetadata = this.internalMetadata[dataSource.id];\n        if (!internalMetadata) {\n            return attributesMetadata;\n        }\n        for (const attributeId in internalMetadata.data) {\n            attributesMetadata.push(internalMetadata.data[attributeId]);\n        }\n        return attributesMetadata;\n    }\n\n    getInternalMetadataAttribute(dataSource, attributeId: string) {\n        return this.internalMetadata[dataSource.id].data[attributeId];\n    }\n\n    getInternalMetadataLoadStatus(dataSource): LoadStatus {\n        const internalMetadata = this.internalMetadata[dataSource.id];\n        if (!internalMetadata) {\n            return {};\n        }\n        return internalMetadata.loadStatus;\n    }\n\n    fillInternalMetadata(dataSource, loadStatusType, attributesMetadata) {\n        let internalMetadata = this.internalMetadata[dataSource.id];\n        if (!internalMetadata) {\n            internalMetadata = {\n                loadStatus: {},\n                data: {},\n            };\n            this.internalMetadata[dataSource.id] = internalMetadata;\n        }\n        for (let i = 0; i < attributesMetadata.length; ++i) {\n            const attributeMetadata = attributesMetadata[i];\n            let bufferAttributeMetadata = internalMetadata.data[attributeMetadata.Name];\n            if (!bufferAttributeMetadata) {\n                bufferAttributeMetadata = {};\n                internalMetadata.data[attributeMetadata.Name] = bufferAttributeMetadata;\n            }\n            for (const name in attributeMetadata) {\n                bufferAttributeMetadata[name] = attributeMetadata[name];\n            }\n        }\n        internalMetadata.loadStatus[loadStatusType] = true;\n    }\n\n    addTemplateConditions(rootCondition) {\n        // ToDo, both types Complex/ConditionCondition lead to syntax errors\n        rootCondition.addCondition({\n            attribute: \"$$RenderingTemplatePlatform$$\",\n            operator: this.sina.ComparisonOperator.Eq,\n            value: \"html\",\n        });\n        rootCondition.addCondition({\n            attribute: \"$$RenderingTemplateTechnology$$\",\n            operator: this.sina.ComparisonOperator.Eq,\n            value: \"Tempo\",\n        });\n        rootCondition.addCondition({\n            attribute: \"$$RenderingTemplateType$$\",\n            operator: this.sina.ComparisonOperator.Eq,\n            value: \"ResultItem\",\n        });\n        rootCondition.addCondition({\n            attribute: \"$$RenderingTemplateType$$\",\n            operator: this.sina.ComparisonOperator.Eq,\n            value: \"ItemDetails\",\n        });\n    }\n\n    assembleOrderBy(query: SearchQuery): Array<{\n        AttributeName: string;\n        SortOrder: \"DESC\" | \"ASC\";\n    }> {\n        const result = [];\n        for (let i = 0; i < query.sortOrder.length; ++i) {\n            const sortKey = query.sortOrder[i];\n            const sortOrder = sortKey.order === this.sina.SortOrder.Descending ? \"DESC\" : \"ASC\";\n            result.push({\n                AttributeName: sortKey.id,\n                SortOrder: sortOrder,\n            });\n        }\n        return result;\n    }\n\n    executeSearchQuery(query: SearchQuery): Promise<SearchResultSet> {\n        let parsedItems, response;\n\n        // assemble json request\n        const rootCondition: ComplexCondition = query.filter.rootCondition.clone() as ComplexCondition;\n        this.addTemplateConditions(rootCondition);\n        ajaxTemplates.searchRequest.Search.Filter = conditionSerializer.serialize(\n            query.filter.dataSource,\n            rootCondition\n        );\n        ajaxTemplates.searchRequest.DataSource = dataSourceSerializer.serialize(query.filter.dataSource);\n        ajaxTemplates.searchRequest.Search.SearchTerms = query.filter.searchTerm;\n        ajaxTemplates.searchRequest.Search.Top = query.top;\n        ajaxTemplates.searchRequest.Search.Skip = query.skip;\n        ajaxTemplates.searchRequest.Options = this.assembleRequestOptions(query);\n        ajaxTemplates.searchRequest.Search.OrderBy = this.assembleOrderBy(query);\n        ajaxTemplates.searchRequest.Search.Expand = [\"Grid\", \"Items\", \"TotalCount\"];\n        this.addLanguagePreferences(ajaxTemplates.searchRequest);\n        this.addSessionId(ajaxTemplates.searchRequest);\n        if (query.calculateFacets) {\n            ajaxTemplates.searchRequest.Search.Expand.push(\"ResultsetFacets\");\n        }\n\n        // fire request\n        return this.ajaxClient\n            .postJson(this.getResponseUrl, ajaxTemplates.searchRequest)\n            .then(\n                function (InputResponse) {\n                    response = InputResponse;\n                    return this.itemParser.parse(query, response.data);\n                }.bind(this)\n            )\n            .then(\n                function (InputParsedItems) {\n                    parsedItems = InputParsedItems;\n                    return this.facetParser.parse(query, response.data);\n                }.bind(this)\n            )\n            .then(\n                function (parsedFacets) {\n                    return this.sina._createSearchResultSet({\n                        id: response.data.ExecutionID,\n                        title: \"Search Result List\",\n                        query: query,\n                        items: parsedItems.items,\n                        totalCount: parsedItems.totalCount,\n                        facets: parsedFacets,\n                    });\n                }.bind(this)\n            );\n    }\n\n    executeChartQuery(query: ChartQuery): Promise<ChartResultSet> {\n        // assemble json request\n        const rootCondition = query.filter.rootCondition.clone();\n        this.addTemplateConditions(rootCondition);\n        ajaxTemplates.chartRequest.Search.Filter = conditionSerializer.serialize(\n            query.filter.dataSource,\n            rootCondition\n        );\n        ajaxTemplates.chartRequest.DataSource = dataSourceSerializer.serialize(query.filter.dataSource);\n        ajaxTemplates.chartRequest.Search.SearchTerms = query.filter.searchTerm;\n        ajaxTemplates.chartRequest.Search.Top = 1;\n        ajaxTemplates.chartRequest.Search.Skip = 0;\n        ajaxTemplates.chartRequest.Facets.Attributes = [query.dimension];\n        ajaxTemplates.chartRequest.Facets.MaxNumberOfReturnValues = query.top;\n        ajaxTemplates.chartRequest.Options = this.assembleRequestOptions(query);\n        this.addLanguagePreferences(ajaxTemplates.chartRequest);\n        this.addSessionId(ajaxTemplates.chartRequest);\n\n        // fire request\n        return this.ajaxClient\n            .postJson(this.getResponseUrl, ajaxTemplates.chartRequest)\n            .then(\n                function (response) {\n                    return this.facetParser.parse(query, response.data);\n                }.bind(this)\n            )\n            .then(\n                function (facets) {\n                    if (facets.length > 0) {\n                        return facets[0];\n                    }\n                    return this.sina._createChartResultSet({\n                        title: (\n                            query.filter.dataSource.getAttributeMetadata(query.dimension) as AttributeMetadata\n                        ).label,\n                        items: [],\n                        query: query,\n                        facetTotalCount: undefined,\n                    });\n                }.bind(this)\n            );\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    executeHierarchyQuery(query: HierarchyQuery): Promise<HierarchyResultSet> {\n        throw new NotImplementedError();\n    }\n\n    async executeSuggestionQuery(query: SuggestionQuery): Promise<SuggestionResultSet> {\n        // split search term in query into (1) searchTerm (2) suggestionTerm\n        const searchTerm = query.filter.searchTerm;\n        const splittedTerm = suggestionTermSplitter.split(this, searchTerm);\n\n        // add search term to condition\n        const rootCondition = query.filter.rootCondition.clone();\n        if (splittedTerm.searchTerm) {\n            (rootCondition as ComplexCondition).addCondition(\n                query.sina.createSimpleCondition({\n                    attribute: AttributeType.INAV2_SearchTerms,\n                    value: splittedTerm.searchTerm,\n                })\n            );\n        }\n\n        // add suggestion term to condition\n        (rootCondition as ComplexCondition).addCondition(\n            query.sina.createSimpleCondition({\n                attribute: AttributeType.INAV2_SuggestionTerms,\n                value: splittedTerm.suggestionTerm,\n            })\n        );\n\n        // assemble request\n        ajaxTemplates.suggestionRequest.Suggestions2.Filter = conditionSerializer.serialize(\n            query.filter.dataSource,\n            rootCondition\n        );\n        ajaxTemplates.suggestionRequest.DataSource = dataSourceSerializer.serialize(query.filter.dataSource);\n        ajaxTemplates.suggestionRequest.Options = this.assembleSuggestionOptions(query);\n        if (ajaxTemplates.suggestionRequest.Options.length === 0) {\n            return this.sina._createSuggestionResultSet({\n                title: \"Suggestions\",\n                query: query,\n                items: [],\n            });\n        }\n        ajaxTemplates.suggestionRequest.Suggestions2.Top = query.top;\n        ajaxTemplates.suggestionRequest.Suggestions2.Skip = query.skip;\n        this.addLanguagePreferences(ajaxTemplates.suggestionRequest);\n        this.addSessionId(ajaxTemplates.suggestionRequest);\n\n        // fire request\n        return this.ajaxClient.postJson(this.getResponseUrl, ajaxTemplates.suggestionRequest).then(\n            function (response) {\n                const suggestions = suggestionParser.parse(this, query, response.data);\n                suggestionTermSplitter.concatenate(this, splittedTerm, suggestions);\n                return this.sina._createSuggestionResultSet({\n                    title: \"Suggestions\",\n                    query: query,\n                    items: suggestions,\n                });\n            }.bind(this)\n        );\n    }\n\n    addSessionId(request): void {\n        if (!this.supports(\"Search\", \"SessionHandling\")) {\n            delete request.SessionID;\n            delete request.SessionTimestamp;\n            return;\n        }\n        request.SessionID = this.sessionId;\n        request.SessionTimestamp = parseInt(util.generateTimestamp(), 10);\n    }\n\n    addLanguagePreferences(request): void {\n        if (!this.supports(\"Search\", \"LanguagePreferences\")) {\n            delete request.LanguagePreferences;\n            return;\n        }\n        request.LanguagePreferences = lang.getLanguagePreferences();\n    }\n\n    assembleSuggestionOptions(query: SuggestionQuery): Array<string> {\n        // conversion table\n        const sina2InaConversion = {\n            SearchTerm: {\n                Data: \"SuggestObjectData\",\n                History: \"SuggestSearchHistory\",\n            },\n            Object: {},\n            DataSource: {\n                Data: \"SuggestDataSources\",\n            },\n        };\n        // based on capabilities -> remove from conversion table\n        if (!this.supports(\"Suggestions2\", \"ScopeTypes\")) {\n            delete sina2InaConversion.SearchTerm.History;\n            delete sina2InaConversion.DataSource.Data;\n        }\n        // apply conversion table\n        const options = [];\n        const suggestionTypes = query.types;\n        const calculationModes = query.calculationModes;\n        for (let i = 0; i < suggestionTypes.length; i++) {\n            const suggestionType = suggestionTypes[i];\n            for (let j = 0; j < calculationModes.length; j++) {\n                const calculationMode = calculationModes[j];\n                const value = sina2InaConversion[suggestionType][calculationMode];\n                if (!value) {\n                    continue;\n                }\n                options.push(value);\n            }\n        }\n        return options; //['SuggestObjectData'];\n    }\n\n    assembleRequestOptions(query: Query): Array<string> {\n        const Options = [\"SynchronousRun\"];\n\n        if (this.decideValueHelp(query)) {\n            Options.push(\"ValueHelpMode\");\n        }\n        return Options;\n    }\n\n    decideValueHelp(query: Query): boolean {\n        const conditions = (query.filter.rootCondition as ComplexCondition).conditions;\n        for (let i = 0; i < conditions.length; i++) {\n            if (query.filter._getAttribute(conditions[i]) === query[\"dimension\"]) {\n                // ToDo\n                return true;\n            }\n        }\n        return false;\n    }\n\n    async getConfigurationAsync(): Promise<Configuration> {\n        if (!this.supports(\"PersonalizedSearch\", \"SetUserStatus\")) {\n            return Promise.resolve(\n                this.sina._createConfiguration({\n                    personalizedSearch: false,\n                    isPersonalizedSearchEditable: false,\n                })\n            );\n        }\n\n        return this.ajaxClient.postJson(this.getResponseUrl, ajaxTemplates.getConfigurationRequest).then(\n            function (response) {\n                const config = {\n                    personalizedSearch: false,\n                    isPersonalizedSearchEditable: false,\n                };\n                config.personalizedSearch = response.data.Data.PersonalizedSearch.SessionUserActive;\n                switch (response.data.Data.PersonalizedSearch.PersonalizationPolicy) {\n                    case \"Opt-In\":\n                        config.isPersonalizedSearchEditable = true;\n                        break;\n                    case \"Opt-Out\":\n                        config.isPersonalizedSearchEditable = true;\n                        break;\n                    case \"Enforced\":\n                        config.isPersonalizedSearchEditable = false;\n                        break;\n                    case \"Disabled\":\n                        config.isPersonalizedSearchEditable = false;\n                        break;\n                }\n                return this.sina._createConfiguration(config);\n            }.bind(this)\n        );\n    }\n\n    async saveConfigurationAsync(configuration: Configuration): Promise<unknown> {\n        if (!this.supports(\"PersonalizedSearch\", \"SetUserStatus\")) {\n            return Promise.resolve();\n        }\n        ajaxTemplates.saveConfigurationRequest.SearchConfiguration.Data.PersonalizedSearch.SessionUserActive =\n            configuration.personalizedSearch;\n        return this.ajaxClient.postJson(this.getResponseUrl, ajaxTemplates.saveConfigurationRequest);\n    }\n\n    async resetPersonalizedSearchDataAsync(): Promise<void> {\n        if (!this.supports(\"PersonalizedSearch\", \"ResetUserData\")) {\n            return;\n        }\n        await this.ajaxClient.postJson(this.getResponseUrl, ajaxTemplates.resetPersonalizedSearchDataRequest);\n    }\n\n    getDebugInfo(): string {\n        return `Searchsystem: ${this.serverInfo.ServerInfo.SystemId} Client: ${this.serverInfo.ServerInfo.Client} ESH API Provider: ${this.id}`;\n    }\n}\n"],"mappings":"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","ignoreList":[]}