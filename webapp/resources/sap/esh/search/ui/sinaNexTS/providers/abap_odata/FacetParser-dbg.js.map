{"version":3,"file":"FacetParser-dbg.js","names":["sap","ui","define","____sina_ComparisonOperator","____sina_FacetType","____sina_LogicalOperator","____sina_SearchQuery","typeConverter","ComparisonOperator","FacetType","LogicalOperator","SearchQuery","FacetParser","provider","sina","constructor","parse","query","data","ValueHelp","prepareValueHelpFacet","facets","Facets","results","i","length","facetData","Type","DataSource","push","parseDataSourceFacet","filter","dataSource","type","DataSourceType","Category","UserCategory","parseChartFacet","undefined","Promise","all","sourceFacetItems","getDataSource","id","attributeId","ValueHelpAttribute","metadata","getAttributeMetadata","targetFacet","Id","Name","label","Values","item","Description","ValueFormatted","NumberOfObjects","NumberOfInstances","ValueLow","Value","ValueLowFormatted","ValueHigh","ValueHighFormatted","dataSourceQuery","createDataSourceQuery","clone","nlq","items","cell","createDataSource","_createDataSourceResultSetItem","dimensionValueFormatted","labelPlural","measureValue","measureValueFormatted","toString","resultSet","_createDataSourceResultSet","title","facetTotalCount","_setResultSet","createAttributeFilterCondition","conditions","isDynamicValueLow","createSimpleCondition","attribute","operator","Ge","value","odata2Sina","isDynamicValue","isDynamicValueHigh","Le","createComplexCondition","attributeLabel","valueLabel","And","chartQuery","setDataSource","setRootCondition","rootCondition","createChartQuery","dimension","_createChartResultSetItem","filterCondition","_createChartResultSet","__exports","__esModule"],"sources":["FacetParser.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\nimport { AttributeMetadata } from \"../../sina/AttributeMetadata\";\nimport { ChartResultSet } from \"../../sina/ChartResultSet\";\nimport { ComparisonOperator } from \"../../sina/ComparisonOperator\";\nimport { Condition } from \"../../sina/Condition\";\nimport { DataSourceResultSet } from \"../../sina/DataSourceResultSet\";\nimport { FacetType } from \"../../sina/FacetType\";\nimport { LogicalOperator } from \"../../sina/LogicalOperator\";\nimport { SearchQuery } from \"../../sina/SearchQuery\";\nimport { SimpleCondition } from \"../../sina/SimpleCondition\";\nimport { Sina } from \"../../sina/Sina\";\nimport { Provider } from \"./Provider\";\nimport * as typeConverter from \"./typeConverter\";\n\nexport class FacetParser {\n    provider: Provider;\n    sina: Sina;\n\n    constructor(provider: Provider) {\n        this.provider = provider;\n        this.sina = provider.sina;\n    }\n\n    parse(query, data) {\n        if (data.ValueHelp) {\n            this.prepareValueHelpFacet(query, data);\n        }\n\n        const facets = [];\n        if (!data.Facets || !data.Facets.results) {\n            return [];\n        }\n        for (let i = 0; i < data.Facets.results.length; i++) {\n            const facetData = data.Facets.results[i];\n            if (facetData.Type === FacetType.DataSource) {\n                facets.push(this.parseDataSourceFacet(query, facetData));\n            } else {\n                if (\n                    query.filter.dataSource.type === query.sina.DataSourceType.Category || // ignore common attributes facets\n                    query.filter.dataSource.type === query.sina.DataSourceType.UserCategory // ignore attributes facets\n                ) {\n                    continue;\n                }\n                facets.push(this.parseChartFacet(query, facetData, undefined)); // ToDo: Chart queries do not request total count (see data.ResultList.TotalHits, ResultList is deferred)\n            }\n        }\n        return Promise.all(facets);\n    }\n\n    prepareValueHelpFacet(query, data) {\n        const sourceFacetItems = data.ValueHelp.results;\n        const dataSource = this.sina.getDataSource(query.filter.dataSource.id);\n        const attributeId = data.ValueHelpAttribute;\n        const metadata = dataSource.getAttributeMetadata(attributeId) as AttributeMetadata;\n        const targetFacet = {\n            Id: data.ValueHelpAttribute,\n            Name: metadata.label,\n            Type: \"AttributeValue\",\n            Values: {\n                results: [],\n            },\n        };\n        const results = [];\n        for (let i = 0; i < sourceFacetItems.length; i++) {\n            const item = sourceFacetItems[i];\n            results.push({\n                Description: item.ValueFormatted,\n                NumberOfObjects: item.NumberOfInstances,\n                Type: \"AttributeValue\",\n                ValueLow: item.Value,\n                ValueLowFormatted: item.ValueFormatted,\n                ValueHigh: \"\",\n                ValueHighFormatted: \"\",\n            });\n        }\n        targetFacet.Values.results = results;\n\n        data.Facets = {};\n        data.Facets.results = [];\n        data.Facets.results[0] = targetFacet;\n    }\n\n    parseDataSourceFacet(query, facetData): DataSourceResultSet {\n        // for search query with datasource facet: create corresponding datasource query\n        let dataSourceQuery = query;\n        if (query instanceof SearchQuery) {\n            dataSourceQuery = this.sina.createDataSourceQuery({\n                dataSource: query.filter.dataSource,\n                filter: query.filter.clone(),\n                nlq: query.nlq,\n            });\n        }\n\n        // assemble results set items\n        const items = [];\n        for (let i = 0; i < facetData.Values.results.length; i++) {\n            const cell = facetData.Values.results[i];\n\n            // create filter (used when clicking on the item)\n            let dataSource = this.sina.getDataSource(cell.ValueLow);\n            if (!dataSource) {\n                dataSource = this.sina.createDataSource({\n                    type: this.sina.DataSourceType.Category,\n                    id: cell.ValueLow,\n                    label: cell.Description,\n                });\n            }\n\n            // create item\n            items.push(\n                this.sina._createDataSourceResultSetItem({\n                    dataSource: dataSource,\n                    dimensionValueFormatted: dataSource.labelPlural,\n                    measureValue: cell.NumberOfObjects,\n                    measureValueFormatted: cell.NumberOfObjects.toString(),\n                })\n            );\n        }\n\n        // create result set\n        const resultSet = this.sina._createDataSourceResultSet({\n            title: query.filter.dataSource.label,\n            items: items,\n            query: dataSourceQuery,\n            facetTotalCount: undefined,\n        });\n\n        // init query with result set\n        if (query instanceof SearchQuery) {\n            return dataSourceQuery._setResultSet(resultSet);\n        }\n\n        return resultSet;\n    }\n\n    createAttributeFilterCondition(attributeId: string, metadata, cell): Condition {\n        if (cell.Type === \"AttributeRange\") {\n            // Between Condition\n            const conditions: SimpleCondition[] = [];\n            if (cell.ValueLow && cell.ValueLow.length !== 0) {\n                const isDynamicValueLow = cell.Type === \"AttributeConstant\";\n                conditions.push(\n                    this.sina.createSimpleCondition({\n                        attribute: attributeId,\n                        operator: ComparisonOperator.Ge,\n                        value: isDynamicValueLow\n                            ? cell.ValueLow\n                            : typeConverter.odata2Sina(metadata.type, cell.ValueLow),\n                        isDynamicValue: isDynamicValueLow,\n                    })\n                );\n            }\n            if (cell.ValueHigh && cell.ValueHigh.length !== 0) {\n                const isDynamicValueHigh = cell.Type === \"AttributeConstant\";\n                conditions.push(\n                    this.sina.createSimpleCondition({\n                        attribute: attributeId,\n                        operator: ComparisonOperator.Le,\n                        value: isDynamicValueHigh\n                            ? cell.ValueHigh\n                            : typeConverter.odata2Sina(metadata.type, cell.ValueHigh),\n                        isDynamicValue: isDynamicValueHigh,\n                    })\n                );\n            }\n\n            return this.sina.createComplexCondition({\n                attributeLabel: metadata.label,\n                valueLabel: cell.Description,\n                operator: LogicalOperator.And,\n                conditions: conditions,\n            });\n        }\n        // Single Condition\n        const isDynamicValue = cell.Type === \"AttributeConstant\";\n        return this.sina.createSimpleCondition({\n            attributeLabel: metadata.label,\n            attribute: attributeId,\n            value: isDynamicValue ? cell.ValueLow : typeConverter.odata2Sina(metadata.type, cell.ValueLow),\n            valueLabel: cell.Description,\n            isDynamicValue: isDynamicValue,\n        });\n    }\n\n    parseChartFacet(query, facetData, facetTotalCount: number): ChartResultSet {\n        const dataSource = this.sina.getDataSource(query.filter.dataSource.id);\n        const attributeId = facetData.Id;\n        const metadata = dataSource.getAttributeMetadata(attributeId) as AttributeMetadata;\n\n        // for search query with attribute facet: create corresponding chart query\n        let filter,\n            chartQuery = query;\n        if (query instanceof SearchQuery) {\n            filter = query.filter.clone();\n            filter.setDataSource(dataSource); // relevant only for common attribute facets\n            filter.setRootCondition(query.filter.rootCondition.clone()); // changing ds removes condition\n            chartQuery = this.sina.createChartQuery({\n                filter: filter,\n                dimension: facetData.Id,\n                nlq: query.nlq,\n            });\n        }\n\n        // create result set items\n        const items = [];\n        for (let i = 0; i < facetData.Values.results.length; i++) {\n            const cell = facetData.Values.results[i];\n            items.push(\n                this.sina._createChartResultSetItem({\n                    filterCondition: this.createAttributeFilterCondition(attributeId, metadata, cell),\n                    dimensionValueFormatted: cell.Description,\n                    measureValue: cell.NumberOfObjects,\n                    measureValueFormatted: cell.ValueLowFormatted,\n                })\n            );\n        }\n\n        // create result set\n        const resultSet = this.sina._createChartResultSet({\n            title: metadata.label,\n            items: items,\n            query: chartQuery,\n            facetTotalCount: facetTotalCount,\n        });\n\n        // init query with result set\n        if (query instanceof SearchQuery) {\n            return chartQuery._setResultSet(resultSet);\n        }\n\n        return resultSet;\n    }\n}\n"],"mappings":"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","ignoreList":[]}