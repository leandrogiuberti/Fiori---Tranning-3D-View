{"version":3,"file":"ItemPostParser.js","names":["sap","ui","define","____sina_SinaObject","____sina_AttributeType","___abap_odata_Provider","SinaObject","AttributeType","ABAPODataProvider","ItemPostParser","_searchResultSetItem","_dataSource","_allAttributesMap","_intentsResolver","constructor","properties","super","this","searchResultSetItem","dataSource","_private","allAttributesMap","sina","_createFioriIntentsResolver","postParseResultSetItem","prom","enhanceResultSetItemWithNavigationTargets","enhanceResultSetItemWithGroups","that","semanticObjectType","semanticObjectTypeAttributes","systemId","system","id","split","client","intents","resolveIntents","fallbackDefaultNavigationTarget","defaultNavigationTarget","navigationTargets","navigationTargetForEnhancement","push","setDefaultNavigationTarget","setNavigationTargets","enhanceNavigationTargetsWithContentProviderId","provider","contentProviderId","navigationTarget","targetUrl","attributesMetadata","i","length","attributeMetadata","type","Group","group","_addAttributeGroup","parent","usage","Detail","detailAttributes","Title","titleAttributes","TitleDescription","titleDescriptionAttributes","sortAttributes","createSortFunction","attributeName","a1","a2","displayOrder1","metadata","displayOrder","undefined","displayOrder2","sort","attributeGroupMetadata","_createSearchResultSetItemAttributeGroup","label","template","attributes","groups","displayAttributes","parentAttributeMetadata","childAttributeMetadata","parentAttribute","childAttribute","k","attributeMembershipMetadata","attribute","attributeOrGroup","attributeGroupMembership","_createSearchResultSetItemAttributeGroupMembership","__exports","__esModule"],"sources":["ItemPostParser.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\nimport { SinaObject, SinaObjectProperties } from \"../../sina/SinaObject\";\nimport { AttributeType } from \"../../sina/AttributeType\";\nimport { SearchResultSetItem } from \"../../sina/SearchResultSetItem\";\nimport { NavigationTarget } from \"../../sina/NavigationTarget\";\nimport { Provider as ABAPODataProvider } from \"../abap_odata/Provider\";\nimport { SearchResultSetItemAttributeGroup } from \"../../sina/SearchResultSetItemAttributeGroup\";\nimport { DataSource } from \"../../sina/DataSource\";\n\nexport interface ItemPostParserOptions extends SinaObjectProperties {\n    searchResultSetItem: SearchResultSetItem;\n}\nexport class ItemPostParser extends SinaObject {\n    _searchResultSetItem: SearchResultSetItem;\n    _dataSource: DataSource;\n    _allAttributesMap: any;\n    _intentsResolver: any;\n\n    constructor(properties: ItemPostParserOptions) {\n        super(properties);\n        this._searchResultSetItem = properties.searchResultSetItem;\n        this._dataSource = properties.searchResultSetItem.dataSource;\n        this._allAttributesMap = properties.searchResultSetItem._private.allAttributesMap;\n\n        this._intentsResolver = this.sina._createFioriIntentsResolver({\n            sina: properties.sina,\n        });\n    }\n\n    async postParseResultSetItem(): Promise<SearchResultSetItem> {\n        const prom = this.enhanceResultSetItemWithNavigationTargets();\n        // TODO: what about exceptions?\n        this.enhanceResultSetItemWithGroups(); // can be done in parallel, if parallelization is possible\n        return prom;\n    }\n\n    async enhanceResultSetItemWithNavigationTargets(): Promise<SearchResultSetItem> {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const that = this;\n        const semanticObjectType = that._dataSource._private.semanticObjectType;\n        const semanticObjectTypeAttributes = that._searchResultSetItem._private.semanticObjectTypeAttributes;\n        const systemId = that._dataSource.system?.id?.split(\".\")[0];\n        const client = that._dataSource.system?.id?.split(\".\")[1];\n        const intents = await that._intentsResolver.resolveIntents({\n            semanticObjectType: semanticObjectType,\n            semanticObjectTypeAttributes: semanticObjectTypeAttributes,\n            systemId: systemId,\n            client: client,\n            fallbackDefaultNavigationTarget: that._searchResultSetItem.defaultNavigationTarget,\n        });\n        const defaultNavigationTarget = intents && intents.defaultNavigationTarget;\n        const navigationTargets = intents && intents.navigationTargets;\n        let navigationTargetForEnhancement: Array<NavigationTarget> = [];\n        if (defaultNavigationTarget) {\n            navigationTargetForEnhancement.push(defaultNavigationTarget);\n            that._searchResultSetItem.setDefaultNavigationTarget(defaultNavigationTarget);\n        }\n        if (navigationTargets) {\n            that._searchResultSetItem.setNavigationTargets(navigationTargets);\n            navigationTargetForEnhancement = [...navigationTargetForEnhancement, ...navigationTargets];\n        }\n        this.enhanceNavigationTargetsWithContentProviderId(navigationTargetForEnhancement);\n        return that._searchResultSetItem;\n    }\n\n    private enhanceNavigationTargetsWithContentProviderId(navigationTargets: Array<NavigationTarget>): void {\n        if (!(this.sina.provider instanceof ABAPODataProvider)) {\n            return;\n        }\n        if (!(this.sina.provider as ABAPODataProvider).contentProviderId) {\n            return;\n        }\n        for (const navigationTarget of navigationTargets) {\n            navigationTarget.targetUrl +=\n                \"&sap-app-origin-hint=\" + (this.sina.provider as ABAPODataProvider).contentProviderId;\n        }\n    }\n\n    enhanceResultSetItemWithGroups(): void {\n        const attributesMetadata = this._searchResultSetItem.dataSource.attributesMetadata;\n        for (let i = 0; i < attributesMetadata.length; i++) {\n            const attributeMetadata = attributesMetadata[i];\n            if (attributeMetadata.type === AttributeType.Group) {\n                const group = this._addAttributeGroup(attributeMetadata);\n                group.parent = this._searchResultSetItem;\n                if (attributeMetadata.usage.Detail) {\n                    this._searchResultSetItem.detailAttributes.push(group);\n                }\n                if (attributeMetadata.usage.Title) {\n                    this._searchResultSetItem.titleAttributes.push(group);\n                }\n                if (attributeMetadata.usage.TitleDescription) {\n                    this._searchResultSetItem.titleDescriptionAttributes.push(group);\n                }\n            }\n        }\n        this.sortAttributes();\n    }\n\n    sortAttributes(): void {\n        const createSortFunction = function (attributeName) {\n            return function (a1, a2) {\n                // be careful to handle displayOrder === 0 correctly!\n                const displayOrder1 =\n                    a1.metadata.usage && a1.metadata.usage[attributeName]\n                        ? a1.metadata.usage[attributeName].displayOrder\n                        : undefined;\n                const displayOrder2 =\n                    a2.metadata.usage && a2.metadata.usage[attributeName]\n                        ? a2.metadata.usage[attributeName].displayOrder\n                        : undefined;\n                if (displayOrder1 === undefined || displayOrder2 === undefined) {\n                    if (displayOrder2 !== undefined) {\n                        return 1;\n                    }\n                    return -1;\n                }\n                return displayOrder1 - displayOrder2;\n            };\n        };\n        this._searchResultSetItem.titleAttributes.sort(createSortFunction(\"Title\"));\n        this._searchResultSetItem.titleDescriptionAttributes.sort(createSortFunction(\"TitleDescription\"));\n        this._searchResultSetItem.detailAttributes.sort(createSortFunction(\"Detail\"));\n    }\n\n    _addAttributeGroup(attributeGroupMetadata): SearchResultSetItemAttributeGroup {\n        const group = this.sina._createSearchResultSetItemAttributeGroup({\n            id: attributeGroupMetadata.id,\n            metadata: attributeGroupMetadata,\n            label: attributeGroupMetadata.label,\n            template: attributeGroupMetadata.template,\n            attributes: [],\n            groups: [],\n            displayAttributes: attributeGroupMetadata.displayAttributes || [],\n        });\n\n        let parentAttributeMetadata, childAttributeMetadata;\n        if (attributeGroupMetadata._private) {\n            parentAttributeMetadata = attributeGroupMetadata._private.parentAttribute;\n            childAttributeMetadata = attributeGroupMetadata._private.childAttribute;\n        }\n\n        for (let k = 0; k < attributeGroupMetadata.attributes.length; k++) {\n            const attributeMembershipMetadata = attributeGroupMetadata.attributes[k];\n            const attributeMetadata = attributeMembershipMetadata.attribute;\n            let attributeOrGroup;\n            if (attributeMetadata.type === AttributeType.Group) {\n                // attributeOrGroup = this._addAttributeGroup(attributeMetadata, this._allAttributesMap);\n                attributeOrGroup = this._addAttributeGroup(attributeMetadata);\n            } else {\n                attributeOrGroup = this._allAttributesMap[attributeMetadata.id];\n            }\n            if (attributeOrGroup) {\n                const attributeGroupMembership = this.sina._createSearchResultSetItemAttributeGroupMembership(\n                    {\n                        group: group,\n                        attribute: attributeOrGroup,\n                        metadata: attributeMembershipMetadata,\n                    }\n                );\n                group.attributes.push(attributeGroupMembership);\n                attributeOrGroup.groups.push(attributeGroupMembership);\n            }\n            if (attributeMetadata == parentAttributeMetadata) {\n                group._private.parentAttribute = attributeOrGroup;\n            } else if (attributeMetadata == childAttributeMetadata) {\n                group._private.childAttribute = attributeOrGroup;\n            }\n        }\n\n        return group;\n    }\n}\n"],"mappings":"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","ignoreList":[]}