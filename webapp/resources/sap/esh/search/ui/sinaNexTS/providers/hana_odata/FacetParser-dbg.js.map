{"version":3,"file":"FacetParser-dbg.js","names":["sap","ui","define","____sina_SearchQuery","typeConverter","____sina_LogicalOperator","____sina_ComparisonOperator","____sina_ChartQuery","____core_Log","____core_errors","___HierarchyParser","SearchQuery","LogicalOperator","ComparisonOperator","ChartQuery","Log","FacetsParseError","HierarchyParser","FacetParser","log","provider","sina","constructor","parse","query","data","hierarchyParser","value","Promise","resolve","error","warn","message","facets","i","length","facetData","resultSet","filter","dataSource","getAllDataSource","parseDataSourceFacet","e1","type","DataSourceType","Category","Dimensions","PropertyType","attributeMetadata","parseFacetAttribute","isHierarchy","parseHierarchyFacet","parseChartFacet","undefined","itemsInString","Items","Array","isArray","JSON","stringify","push","all","dataSourceQuery","createDataSourceQuery","clone","nlq","items","cell","getDataSource","scope","createDataSource","id","ValueLow","label","Description","_createDataSourceResultSetItem","dimensionValueFormatted","labelPlural","measureValue","_Count","measureValueFormatted","toString","_createDataSourceResultSet","title","facetTotalCount","_setResultSet","createAttributeFilterCondition","attributeId","metadata","Object","prototype","hasOwnProperty","call","finalCondition","createComplexCondition","attributeLabel","valueLabel","formatFacetValue","operator","And","conditions","lowBoundCondition","upperBoundCondition","From","createSimpleCondition","attribute","Le","odata2Sina","To","Ge","convertValueToString","textElementValue","startsWith","initialValue","dimension","PropertyName","getAttributeMetadata","chartQuery","setDataSource","setRootCondition","rootCondition","createChartQuery","iconPropertyName","usage","AdvancedSearch","iconUrlAttributeName","isIconContained","findIndex","item","icon","_createChartResultSetItem","filterCondition","_createChartResultSet","__exports","__esModule"],"sources":["FacetParser.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\nimport {\n    HANAOdataSearchResponseResult,\n    HANAOdataSearchResponseResultFacetAllInfo,\n    Provider,\n} from \"./Provider\";\nimport { Query } from \"../../sina/Query\";\nimport { SearchQuery } from \"../../sina/SearchQuery\";\nimport * as typeConverter from \"./typeConverter\";\nimport { LogicalOperator } from \"../../sina/LogicalOperator\";\nimport { ComparisonOperator } from \"../../sina/ComparisonOperator\";\nimport { ChartQuery } from \"../../sina/ChartQuery\";\nimport { Sina } from \"../../sina/Sina\";\nimport { Log } from \"../../core/Log\";\nimport { FacetsParseError } from \"../../core/errors\";\nimport { HierarchyParser } from \"./HierarchyParser\";\nimport { AttributeMetadata } from \"../../sina/AttributeMetadata\";\nimport { HierarchyResultSet } from \"../../sina/HierarchyResultSet\";\nimport { DataSourceResultSet } from \"../../sina/DataSourceResultSet\";\nimport { ChartResultSet } from \"../../sina/ChartResultSet\";\nimport { SuggestionQuery } from \"../../sina/SuggestionQuery\";\n\nexport class FacetParser {\n    log: Log;\n    provider: Provider;\n    sina: Sina;\n\n    constructor(provider: Provider) {\n        this.provider = provider;\n        this.sina = provider.sina;\n        this.log = new Log(\"hana_odata facet parser\");\n    }\n\n    async parse(query: SearchQuery | SuggestionQuery | ChartQuery, data: HANAOdataSearchResponseResult) {\n        const hierarchyParser = new HierarchyParser();\n        const value = data[\n            \"@com.sap.vocabularies.Search.v1.Facets\"\n        ] as Array<HANAOdataSearchResponseResultFacetAllInfo>;\n\n        if (!value) {\n            return Promise.resolve([]);\n        }\n\n        if (data.error) {\n            this.log.warn(\"Server-side Warning: \" + data.error.message);\n        }\n\n        const facets: Array<DataSourceResultSet | HierarchyResultSet | ChartResultSet> = [];\n\n        for (let i = 0; i < value.length; i++) {\n            const facetData = value[i];\n\n            // var dimension = '';\n            // if (query.dimension) {\n            //     dimension = query.dimension;\n            // } else if (facetData[\"@com.sap.vocabularies.Search.v1.Facet\"] && facetData[\"@com.sap.vocabularies.Search.v1.Facet\"].Dimensions && facetData[\"@com.sap.vocabularies.Search.v1.Facet\"].Dimensions[0] && facetData[\"@com.sap.vocabularies.Search.v1.Facet\"].Dimensions[0].PropertyName) {\n            //     dimension = facetData[\"@com.sap.vocabularies.Search.v1.Facet\"][\"Dimensions\"][0].PropertyName;\n            // }\n\n            let resultSet;\n            if (query.filter.dataSource === query.sina.getAllDataSource()) {\n                try {\n                    resultSet = this.parseDataSourceFacet(query, facetData);\n                } catch (e1) {\n                    this.log.warn(\"Error occurred by parsing dataource item number \" + i + \": \" + e1.message);\n                    continue;\n                }\n            } else {\n                if (query.filter.dataSource.type === query.sina.DataSourceType.Category) {\n                    continue; // ignore common attributes facets\n                }\n                if (\n                    facetData[\"@com.sap.vocabularies.Search.v1.Facet\"].Dimensions[0].PropertyType ===\n                    \"GeometryPolygonFacet\"\n                ) {\n                    continue;\n                }\n\n                try {\n                    const attributeMetadata = this.parseFacetAttribute(query, facetData);\n                    if (attributeMetadata.isHierarchy) {\n                        resultSet = hierarchyParser.parseHierarchyFacet(query, attributeMetadata, facetData);\n                    } else {\n                        resultSet = this.parseChartFacet(\n                            query,\n                            attributeMetadata,\n                            facetData,\n                            data[\"@odata.count\"] || undefined\n                        );\n                    }\n                } catch (e1) {\n                    let itemsInString = \"\";\n                    if (facetData.Items && Array.isArray(facetData.Items)) {\n                        itemsInString = JSON.stringify(facetData);\n                    }\n                    this.log.warn(\n                        \"Error occurred by parsing facet \" +\n                            (facetData[\"@com.sap.vocabularies.Common.v1.Label\"] || \"\") +\n                            \"', facet position: \" +\n                            i +\n                            \": \" +\n                            e1.message +\n                            \"; item data: \" +\n                            itemsInString\n                    );\n                    continue;\n                }\n            }\n            facets.push(resultSet);\n        }\n        return Promise.all(facets);\n    }\n\n    parseDataSourceFacet(query: Query, facetData) {\n        // for search query with datasource facet: create corresponding datasource query\n        let dataSourceQuery = query;\n        if (query instanceof SearchQuery) {\n            dataSourceQuery = this.sina.createDataSourceQuery({\n                dataSource: query.filter.dataSource,\n                filter: query.filter.clone(),\n                nlq: query.nlq,\n            });\n        }\n\n        // assemble results set items\n        const items = [];\n        for (let i = 0; i < facetData.Items.length; i++) {\n            const cell = facetData.Items[i];\n\n            // create filter (used when clicking on the item)\n            let dataSource = this.sina.getDataSource(cell.scope);\n            if (!dataSource) {\n                dataSource = this.sina.createDataSource({\n                    type: this.sina.DataSourceType.Category,\n                    id: cell.ValueLow,\n                    label: cell.Description,\n                });\n            }\n\n            // create item\n            items.push(\n                this.sina._createDataSourceResultSetItem({\n                    dataSource: dataSource,\n                    dimensionValueFormatted: dataSource.labelPlural,\n                    measureValue: cell._Count,\n                    measureValueFormatted: cell._Count.toString(),\n                })\n            );\n        }\n\n        // create result set\n        const resultSet = this.sina._createDataSourceResultSet({\n            title: query.filter.dataSource.label,\n            items: items,\n            query: dataSourceQuery,\n            facetTotalCount: undefined,\n        });\n\n        // init query with result set\n        if (query instanceof SearchQuery) {\n            return dataSourceQuery._setResultSet(resultSet);\n        }\n\n        return resultSet;\n    }\n\n    createAttributeFilterCondition(attributeId, metadata, cell) {\n        if (\n            typeof cell[attributeId] === \"object\" &&\n            (Object.prototype.hasOwnProperty.call(cell[attributeId], \"From\") ||\n                Object.prototype.hasOwnProperty.call(cell[attributeId], \"From\"))\n        ) {\n            // Range Condition\n            const finalCondition = this.sina.createComplexCondition({\n                attributeLabel: metadata.label,\n                valueLabel: this.formatFacetValue(cell[attributeId]),\n                operator: LogicalOperator.And,\n                conditions: [],\n            });\n            let lowBoundCondition, upperBoundCondition;\n            if (!cell[attributeId].From) {\n                upperBoundCondition = this.sina.createSimpleCondition({\n                    attribute: attributeId,\n                    operator: ComparisonOperator.Le,\n                    value: typeConverter.odata2Sina(metadata.type, cell[attributeId].To),\n                });\n                finalCondition.conditions.push(upperBoundCondition);\n            } else if (!cell[attributeId].To) {\n                lowBoundCondition = this.sina.createSimpleCondition({\n                    attribute: attributeId,\n                    operator: ComparisonOperator.Ge,\n                    value: typeConverter.odata2Sina(metadata.type, cell[attributeId].From),\n                });\n                finalCondition.conditions.push(lowBoundCondition);\n            } else {\n                lowBoundCondition = this.sina.createSimpleCondition({\n                    attribute: attributeId,\n                    operator: ComparisonOperator.Ge,\n                    value: typeConverter.odata2Sina(metadata.type, cell[attributeId].From),\n                });\n                finalCondition.conditions.push(lowBoundCondition);\n                upperBoundCondition = this.sina.createSimpleCondition({\n                    attribute: attributeId,\n                    operator: ComparisonOperator.Le,\n                    value: typeConverter.odata2Sina(metadata.type, cell[attributeId].To),\n                });\n                finalCondition.conditions.push(upperBoundCondition);\n            }\n            return finalCondition;\n        }\n        // Single Condition\n        let valueLabel = typeConverter.convertValueToString(\n            typeConverter.odata2Sina(metadata.type, cell[attributeId])\n        );\n        const textElementValue = cell[attributeId + \"@com.sap.vocabularies.Common.v1.Text\"];\n        if (typeof textElementValue === \"string\" && textElementValue.length > 0) {\n            if (textElementValue.startsWith(\"sap-icon://\") === false) {\n                valueLabel = textElementValue;\n            }\n        }\n        return this.sina.createSimpleCondition({\n            attributeLabel: metadata.label,\n            attribute: attributeId,\n            value: cell[attributeId],\n            valueLabel: valueLabel,\n        });\n    }\n\n    formatFacetValue(value /**metadata*/) {\n        const initialValue = \"\";\n        // if (metadata.type === 'Double' || metadata.type === 'Integer') {\n        //     initialValue = 0;\n        // }\n\n        if (value[\"@com.sap.vocabularies.Common.v1.Label\"]) {\n            return value[\"@com.sap.vocabularies.Common.v1.Label\"];\n        }\n        if (\n            typeof value === \"object\" &&\n            (Object.prototype.hasOwnProperty.call(value, \"From\") ||\n                Object.prototype.hasOwnProperty.call(value, \"To\"))\n        ) {\n            value = (value.From || initialValue) + \"...\" + (value.To || initialValue);\n        }\n        return value;\n    }\n\n    parseFacetAttribute(query: SearchQuery | SuggestionQuery | ChartQuery, facetData): AttributeMetadata {\n        const dataSource = query.filter.dataSource;\n        let attributeId = \"\";\n        if (query instanceof ChartQuery && query.dimension) {\n            attributeId = query.dimension;\n        } else {\n            if (\n                facetData[\"@com.sap.vocabularies.Search.v1.Facet\"] &&\n                facetData[\"@com.sap.vocabularies.Search.v1.Facet\"].Dimensions &&\n                facetData[\"@com.sap.vocabularies.Search.v1.Facet\"].Dimensions[0] &&\n                facetData[\"@com.sap.vocabularies.Search.v1.Facet\"].Dimensions[0].PropertyName\n            ) {\n                attributeId = facetData[\"@com.sap.vocabularies.Search.v1.Facet\"].Dimensions[0].PropertyName;\n            } else {\n                throw new FacetsParseError();\n            }\n        }\n        const metadata = dataSource.getAttributeMetadata(attributeId);\n        return metadata as AttributeMetadata;\n    }\n\n    private async parseChartFacet(\n        query: ChartQuery | SearchQuery | SuggestionQuery,\n        attributeMetadata: AttributeMetadata,\n        facetData,\n        facetTotalCount: number\n    ): Promise<ChartResultSet> {\n        const dataSource = query.filter.dataSource;\n\n        const items = [];\n        // for search query with attribute facet: create corresponding chart query\n        let chartQuery = query;\n        const filter = query.filter.clone();\n        filter.setDataSource(dataSource); // relevant only for common attribute facets\n        filter.setRootCondition(query.filter.rootCondition.clone()); // changing ds removes condition\n        chartQuery = this.sina.createChartQuery({\n            filter: filter,\n            dimension: attributeMetadata.id,\n            nlq: query.nlq,\n        });\n        // Check whether items contains at least one icon\n        // If yes, placeholder sap-icon://none shall be applied for items that have no icon in this facet\n\n        // TODO: attributeMetadata.id + \"@com.sap.vocabularies.Common.v1.Text\" for facet icon is used in repo as a workaround\n        // and will be replaced by attributeMetadata.usage?.AdvancedSearch?.iconUrlAttributeName\n        // Facet doesn't need to be checked becaused Facet is always AdvancedSearch\n        const iconPropertyName =\n            attributeMetadata.usage?.AdvancedSearch?.iconUrlAttributeName ||\n            attributeMetadata.id + \"@com.sap.vocabularies.Common.v1.Text\";\n        const isIconContained =\n            facetData.Items.findIndex((item) => item[iconPropertyName]?.startsWith(\"sap-icon://\")) > -1;\n        // create result set items\n        for (let i = 0; i < facetData.Items.length; i++) {\n            const cell = facetData.Items[i];\n            const textElementValue = cell[attributeMetadata.id + \"@com.sap.vocabularies.Common.v1.Text\"];\n            let icon = \"\";\n            if (isIconContained === true) {\n                icon = \"sap-icon://none\";\n            }\n            let dimensionValueFormatted = this.formatFacetValue(cell[attributeMetadata.id]);\n            if (typeof textElementValue === \"string\" && textElementValue.length > 0) {\n                if (textElementValue.startsWith(\"sap-icon://\")) {\n                    icon = textElementValue;\n                } else {\n                    dimensionValueFormatted = textElementValue;\n                    icon = cell[attributeMetadata.usage?.AdvancedSearch?.iconUrlAttributeName] || icon;\n                }\n            } else {\n                icon = cell[attributeMetadata.usage?.AdvancedSearch?.iconUrlAttributeName] || icon;\n            }\n            items.push(\n                this.sina._createChartResultSetItem({\n                    filterCondition: this.createAttributeFilterCondition(\n                        attributeMetadata.id,\n                        attributeMetadata,\n                        cell\n                    ),\n                    dimensionValueFormatted: dimensionValueFormatted,\n                    measureValue: cell._Count,\n                    measureValueFormatted: cell._Count,\n                    icon: icon,\n                })\n            );\n        }\n\n        // create result set\n        const resultSet = this.sina._createChartResultSet({\n            title: attributeMetadata.label,\n            items: items,\n            query: chartQuery,\n            facetTotalCount: facetTotalCount,\n        });\n\n        // init query with result set\n        if (query instanceof SearchQuery) {\n            return chartQuery._setResultSet(resultSet) as Promise<ChartResultSet>;\n        }\n\n        return resultSet;\n    }\n}\n"],"mappings":"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","ignoreList":[]}