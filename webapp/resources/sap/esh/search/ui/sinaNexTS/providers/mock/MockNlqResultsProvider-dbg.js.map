{"version":3,"file":"MockNlqResultsProvider-dbg.js","names":["sap","ui","define","___sample2_Provider","____sina_Capabilities","Sample2Provider","Capabilities","MockNlqResultsProvider","id","DEFAULT_RESPONSE","requestNo","responses","bold","initAsync","properties","returnVal","capabilities","nlq","nlqEnabledInfoOnDataSource","executeSearchQuery","query","searchTerm","getSearchTerm","matchedKey","Object","keys","find","k","includes","response","sina","_createSearchResultSet","title","items","facets","totalCount","nlqResult","success","filterDescription","__exports","__esModule"],"sources":["MockNlqResultsProvider.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\nimport { Provider as Sample2Provider } from \"../sample2/Provider\";\n\nimport { Capabilities } from \"../../sina/Capabilities\";\nimport { SearchQuery } from \"../../sina/SearchQuery\";\nimport { SearchResultSet } from \"../../sina/SearchResultSet\";\nimport { AbstractProviderConfiguration } from \"../AbstractProvider\";\n\nexport class MockNlqResultsProvider extends Sample2Provider {\n    readonly id = \"mock_nlqresults\";\n\n    static readonly DEFAULT_RESPONSE = \"default text\";\n    requestNo = 0;\n    readonly responses: Record<string, string> = {\n        [MockNlqResultsProvider.DEFAULT_RESPONSE]:\n            '<em>Type</em> equal to \"View\" <strong>and</strong> ' +\n            '(<em>Business Name</em> contains \"report<br>\" ' +\n            '<strong>or</strong> <em>Created by</em> is equal to \"123\")<br>' +\n            '<strong>or</strong> <em>Type</em> equal to \"Local Table\" <strong>and</strong> ' +\n            '<em>Business Name</em> contains \"report<br>\"',\n\n        bold: 'Type equal to \"Local Table\" <strong>or</strong> \"Remote Table\"',\n\n        \"unsupported tags\":\n            'Unsupported tags equal to \"View\" <script>will remain</script> <strong>and</strong> <iframe>content</iframe> <em>Status</em> <video>video</video> equal to \"Active\"',\n\n        // comprehensive test case with all supported HTML tags\n        \"all tags\":\n            '<h1><em>All tags</em> equal to \"View\"</h1> <strong>and</strong> (<em>Created On</em> after \"2024-01-01\")<br>' +\n            '<h2><strong>or</strong> <em>Status</em> equal to \"Active\"</h2> <strong>and</strong> <em>Region</em> equal to \"EMEA\"<br>' +\n            '<h3><strong>or</strong> <em>Business Name</em> contains \"<u>report</u>\"</h3> <strong>and</strong> <em>Priority</em> equal to \"High\"<br>' +\n            '<h4><strong>or</strong> <em>Owner</em> equal to \"<code>J.Smith</code>\"</h4> <strong>and</strong> (<em>Category</em> equal to \"Finance\" <strong>or</strong> \"Legal\")<br>' +\n            '<h5><strong>or</strong> <em>Created By</em> is equal to \"<span>123</span>\"</h5><br>' +\n            '<h6><strong>or</strong> <em>Last Changed By</em> is not equal to \"<bdi>System</bdi>\"</h6><br>' +\n            '<p><strong>or</strong> <em>Approval Status</em> equal to \"Approved\"</p>' +\n            '<blockquote><cite><strong>or</strong> <em>Approval Status</em> equal to \"Pending\"</cite> <strong>and</strong> <em>Due Date</em> before \"2025-12-31\"</blockquote>' +\n            '<pre><strong>or</strong> <em>Currency</em> equal to \"EUR\" <strong>and</strong> <em>Amount</em> greater than \"10000\"</pre>' +\n            '<strong>or</strong> <em>Currency</em> equal to \"USD\" <strong>and</strong> <em>Amount</em> greater than \"15000\"<br>' +\n            '<dl><dt><strong>or</strong> <em>Customer Group</em> equal to \"Retail\"</dt><dd>retail customer classification</dd></dl>' +\n            '<ul><li><strong>or</strong> <em>Customer Group</em> equal to \"Wholesale\"</li><li><strong>or</strong> <em>Country</em> equal to \"<a href=\"#country\"><abbr title=\"Germany\">DE</abbr></a>\"</li></ul>' +\n            '<ol><li><strong>or</strong> <em>Department</em> equal to \"Sales\"</li><li><strong>or</strong> <em>Location</em> equal to \"Berlin\"</li></ol>',\n\n        \"very long\":\n            '<em>Type</em> equal to \"View\" <strong>and</strong> (<em>Created On</em> after \"2024-01-01\")<br>' +\n            '<strong>or</strong> <em>Status</em> equal to \"Active\" <strong>and</strong> <em>Region</em> equal to \"EMEA\"<br>' +\n            '<strong>or</strong> <em>Business Name</em> contains \"report\" <strong>and</strong> <em>Priority</em> equal to \"High\"<br>' +\n            '<strong>or</strong> <em>Owner</em> equal to \"J.Smith\" <strong>and</strong> (<em>Category</em> equal to \"Finance\" <strong>or</strong> \"Legal\")<br>' +\n            '<strong>or</strong> <em>Created By</em> is equal to \"123\"<br>' +\n            '<strong>or</strong> <em>Last Changed By</em> is not equal to \"System\"<br>' +\n            '<strong>or</strong> <em>Approval Status</em> equal to \"Approved\"<br>' +\n            '<strong>or</strong> <em>Approval Status</em> equal to \"Pending\" <strong>and</strong> <em>Due Date</em> before \"2025-12-31\"<br>' +\n            '<strong>or</strong> <em>Currency</em> equal to \"EUR\" <strong>and</strong> <em>Amount</em> greater than \"10000\"<br>' +\n            '<strong>or</strong> <em>Currency</em> equal to \"USD\" <strong>and</strong> <em>Amount</em> greater than \"15000\"<br>' +\n            '<strong>or</strong> <em>Customer Group</em> equal to \"Retail\"<br>' +\n            '<strong>or</strong> <em>Customer Group</em> equal to \"Wholesale\"<br>' +\n            '<strong>or</strong> <em>Country</em> equal to \"DE\"<br>',\n\n        \"very wide\":\n            \"123456789a123456789b123456789c123456789d123456789e123456789f123456789g123456789h123456789i123456789j\" +\n            \"123456789k123456789l123456789m123456789n123456789o123456789p123456789q123456789r123456789s123456789t\" +\n            \"123456789u123456789v123456789w123456789x123456789y123456789z\" +\n            \"123456789a123456789b123456789c123456789d123456789e123456789f123456789g123456789h123456789i123456789j\" +\n            \"123456789k123456789l123456789m123456789n123456789o123456789p123456789q123456789r123456789s123456789t\" +\n            \"123456789u123456789v123456789w123456789x123456789y123456789z\" +\n            \"\\n\" +\n            \"123456789a123456789b123456789c123456789d123456789e123456789f123456789g123456789h123456789i123456789j\" +\n            \"123456789k123456789l123456789m123456789n123456789o123456789p123456789q123456789r123456789s123456789t\" +\n            \"123456789u123456789v123456789w123456789x123456789y123456789z\" +\n            \"123456789a123456789b123456789c123456789d123456789e123456789f123456789g123456789h123456789i123456789j\" +\n            \"123456789k123456789l123456789m123456789n123456789o123456789p123456789q123456789r123456789s123456789t\" +\n            \"123456789u123456789v123456789w123456789x123456789y123456789z\" +\n            \"\",\n    };\n\n    override async initAsync(\n        properties: AbstractProviderConfiguration\n    ): Promise<{ capabilities: Capabilities }> {\n        let returnVal = await super.initAsync(properties);\n\n        // take over returnValue, but add nlq capabilities\n        returnVal = {\n            ...returnVal,\n            capabilities: new Capabilities({\n                ...returnVal?.capabilities,\n                nlq: true,\n                nlqEnabledInfoOnDataSource: true,\n            }),\n        };\n        return returnVal;\n    }\n\n    override async executeSearchQuery(query: SearchQuery): Promise<SearchResultSet | undefined> {\n        const searchTerm = query.getSearchTerm();\n        const matchedKey =\n            Object.keys(this.responses).find((k) => k.includes(searchTerm)) ?? //\n            MockNlqResultsProvider.DEFAULT_RESPONSE;\n\n        const response = this.responses[matchedKey];\n\n        return this.sina._createSearchResultSet({\n            query: query,\n            title: \"Search Results\",\n            items: [],\n            facets: [],\n            totalCount: ++this.requestNo, // simple counter to see some change on the ui\n            nlqResult: {\n                success: true,\n                filterDescription: `${response}`,\n            },\n        });\n    }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAJAA,GAAA,CAAAC,EAAA,CAAAC,MAAA,+DAAAC,mBAAA,EAAAC,qBAAA;EAAA;;EAAA,MAKqBC,eAAe,GAAAF,mBAAA;EAAA,MAE3BG,YAAY,GAAAF,qBAAA;EAKd,MAAMG,sBAAsB,SAASF,eAAe,CAAC;IAC/CG,EAAE,GAAG,iBAAiB;IAE/B,OAAgBC,gBAAgB,GAAG,cAAc;IACjDC,SAAS,GAAG,CAAC;IACJC,SAAS,GAA2B;MACzC,CAACJ,sBAAsB,CAACE,gBAAgB,GACpC,qDAAqD,GACrD,gDAAgD,GAChD,gEAAgE,GAChE,gFAAgF,GAChF,8CAA8C;MAElDG,IAAI,EAAE,gEAAgE;MAEtE,kBAAkB,EACd,oKAAoK;MAExK;MACA,UAAU,EACN,8GAA8G,GAC9G,yHAAyH,GACzH,yIAAyI,GACzI,yKAAyK,GACzK,qFAAqF,GACrF,+FAA+F,GAC/F,yEAAyE,GACzE,kKAAkK,GAClK,2HAA2H,GAC3H,oHAAoH,GACpH,wHAAwH,GACxH,mMAAmM,GACnM,4IAA4I;MAEhJ,WAAW,EACP,iGAAiG,GACjG,gHAAgH,GAChH,yHAAyH,GACzH,mJAAmJ,GACnJ,+DAA+D,GAC/D,2EAA2E,GAC3E,sEAAsE,GACtE,gIAAgI,GAChI,oHAAoH,GACpH,oHAAoH,GACpH,mEAAmE,GACnE,sEAAsE,GACtE,wDAAwD;MAE5D,WAAW,EACP,sGAAsG,GACtG,sGAAsG,GACtG,8DAA8D,GAC9D,sGAAsG,GACtG,sGAAsG,GACtG,8DAA8D,GAC9D,IAAI,GACJ,sGAAsG,GACtG,sGAAsG,GACtG,8DAA8D,GAC9D,sGAAsG,GACtG,sGAAsG,GACtG,8DAA8D,GAC9D;IACR,CAAC;IAED,MAAeC,SAASA,CACpBC,UAAyC,EACF;MACvC,IAAIC,SAAS,GAAG,MAAM,KAAK,CAACF,SAAS,CAACC,UAAU,CAAC;;MAEjD;MACAC,SAAS,GAAG;QACR,GAAGA,SAAS;QACZC,YAAY,EAAE,IAAIV,YAAY,CAAC;UAC3B,GAAGS,SAAS,EAAEC,YAAY;UAC1BC,GAAG,EAAE,IAAI;UACTC,0BAA0B,EAAE;QAChC,CAAC;MACL,CAAC;MACD,OAAOH,SAAS;IACpB;IAEA,MAAeI,kBAAkBA,CAACC,KAAkB,EAAwC;MACxF,MAAMC,UAAU,GAAGD,KAAK,CAACE,aAAa,CAAC,CAAC;MACxC,MAAMC,UAAU,GACZC,MAAM,CAACC,IAAI,CAAC,IAAI,CAACd,SAAS,CAAC,CAACe,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,QAAQ,CAACP,UAAU,CAAC,CAAC;MAAI;MACnEd,sBAAsB,CAACE,gBAAgB;MAE3C,MAAMoB,QAAQ,GAAG,IAAI,CAAClB,SAAS,CAACY,UAAU,CAAC;MAE3C,OAAO,IAAI,CAACO,IAAI,CAACC,sBAAsB,CAAC;QACpCX,KAAK,EAAEA,KAAK;QACZY,KAAK,EAAE,gBAAgB;QACvBC,KAAK,EAAE,EAAE;QACTC,MAAM,EAAE,EAAE;QACVC,UAAU,EAAE,EAAE,IAAI,CAACzB,SAAS;QAAE;QAC9B0B,SAAS,EAAE;UACPC,OAAO,EAAE,IAAI;UACbC,iBAAiB,EAAE,GAAGT,QAAQ;QAClC;MACJ,CAAC,CAAC;IACN;EACJ;EAAC,IAAAU,SAAA;IAAAC,UAAA;EAAA;EAAAD,SAAA,CAAAhC,sBAAA,GAAAA,sBAAA;EAAA,OAAAgC,SAAA;AAAA","ignoreList":[]}