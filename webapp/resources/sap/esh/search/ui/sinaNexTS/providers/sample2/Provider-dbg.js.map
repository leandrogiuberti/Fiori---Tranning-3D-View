{"version":3,"file":"Provider-dbg.js","names":["sap","ui","define","____sina_Capabilities","___AbstractProvider","___SearchEngine","Capabilities","AbstractProvider","SearchEngine","Provider","id","configurations","default","tlt","emptyDataSource","constructor","searchEngine","sina","initAsync","properties","configurationName","configuration","_getConfigurationFromUrl","dataSourceIds","capabilities","configName","undefined","window","urlParams","URLSearchParams","location","search","get","executeSearchQuery","query","executeSuggestionQuery","suggestion","executeChartQuery","chart","executeHierarchyQuery","Error","__exports","__esModule"],"sources":["Provider.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\n// TODO:\n// - Show More dialog set manuel range -> JIRA https://jira.tools.sap/browse/HDBFIORISEARCH-2126\n// - create recursive datasource facet?\n// - ComparisonOperator not finished\n\n// - NO: title link -> NOT possible to implement through sina, but in UI\n// - NO: Object Suggestion No Link -> NOT possible to implement through sina, but in UI\n// - NO: AI suggestion (UIA user/pass in secret file)\n// - NO: additional whyfound\n\n/*\n * get the data source and attributes in JSON, input in browser debug console:\n * id = \"eshCompGenId_0\";\n * model = sap.ui.getCore().byId(id).getModelInternal();\n * model.getDataSource().toJson(\"DataSourceAndAttributesJSON\");\n * Note: make sure \"id\" has same value as json file name!\n\n * get the result set in CSV, input in browser debug console:\n * id = \"eshCompGenId_0\";\n * model = sap.ui.getCore().byId(id).getModelInternal();\n * model.resultSet.toCSV();\n * Note: make sure csv file has same name as json file name!\n*/\n\nimport { Capabilities } from \"../../sina/Capabilities\";\nimport { ChartQuery } from \"../../sina/ChartQuery\";\nimport { ChartResultSet } from \"../../sina/ChartResultSet\";\nimport { HierarchyQuery } from \"../../sina/HierarchyQuery\";\nimport { HierarchyResultSet } from \"../../sina/HierarchyResultSet\";\nimport { SearchQuery } from \"../../sina/SearchQuery\";\nimport { SearchResultSet } from \"../../sina/SearchResultSet\";\nimport { SuggestionQuery } from \"../../sina/SuggestionQuery\";\nimport { SuggestionResultSet } from \"../../sina/SuggestionResultSet\";\nimport { AbstractProvider, AbstractProviderConfiguration } from \"../AbstractProvider\";\nimport { SearchEngine } from \"./SearchEngine\";\n\ntype DataSourceId = string;\n\nexport class Provider extends AbstractProvider {\n    id = \"sample2\"; // not readonly to allow overwriting in mock-providers\n\n    // configurations now only contains datasource string arrays\n    configurations: { [configurationName: string]: DataSourceId[] } = {\n        default: [\"bp\", \"employees\", \"products\", \"tlt\", \"purchaseOrders\"],\n        tlt: [\"tlt\"],\n        emptyDataSource: [\"emptyDataSource\"],\n    };\n\n    constructor() {\n        super();\n        // initialize with default datasources\n        this.searchEngine = new SearchEngine(this.sina, this.configurations[\"default\"]);\n    }\n\n    async initAsync(\n        properties: AbstractProviderConfiguration & { configuration?: string }\n    ): Promise<{ capabilities: Capabilities }> {\n        this.sina = properties.sina ?? this.sina;\n\n        // initialize configuration\n        const configurationName = properties?.configuration ?? this._getConfigurationFromUrl();\n        const dataSourceIds = this.configurations[configurationName] ?? this.configurations[\"default\"];\n        this.searchEngine = new SearchEngine(this.sina, dataSourceIds);\n        await this.searchEngine.initAsync(this.sina);\n\n        return { capabilities: new Capabilities({}) };\n    }\n\n    private _getConfigurationFromUrl(): string | undefined {\n        // check url-parameter sample2Config\n        let configName: string | undefined = undefined;\n        if (typeof window !== \"undefined\") {\n            const urlParams = new URLSearchParams(window.location?.search);\n            configName = urlParams?.get(\"sample2Configuration\") || undefined;\n        }\n        return configName;\n    }\n\n    async executeSearchQuery(query: SearchQuery): Promise<SearchResultSet> {\n        return this.searchEngine.search(query);\n    }\n\n    async executeSuggestionQuery(query: SuggestionQuery): Promise<SuggestionResultSet> {\n        return this.searchEngine.suggestion(query);\n        /*\n        Suggestions of epm data:\n\n        1. DataSource Suggestion: \n        Input: datasource: \"All\", input: \"emp\"\n        Suggestion: \"Search In\" /n \"Employees\"\n\n        2. SearchTerm Suggestion: \n        Input: datasource: \"All\", input: \"328\"\n        Suggestion: \"Search For\" /n \"3289\", click it, trigger a search \"All\" and Searchterm \"3289\"\n\n        3. History SearchTerm Suggestion: \n        Input: datasource: \"All\", input: \"sall\", search and add it to history\n        Input: datasource: \"All\", input: \"sal\"\n        Suggestion: \"Search For\" /n \"sall\"\n\n        4. Object Suggestion: \n        Input: datasource: \"All\", input: \"sally\"\n        Suggestion: \"Employees\" /n \"Sally\" photo and email\n\n        5. SearchTermAI Suggestion:\n        NOT implemented\n\n        6. SearchTermAndDataSource Suggestion:\n        NOT implemented\n        */\n    }\n\n    async executeChartQuery(query: ChartQuery): Promise<ChartResultSet> {\n        return this.searchEngine.chart(query);\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    executeHierarchyQuery(query: HierarchyQuery): Promise<HierarchyResultSet> {\n        throw new Error(\"Method not implemented.\");\n    }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAJAA,GAAA,CAAAC,EAAA,CAAAC,MAAA,iFAAAC,qBAAA,EAAAC,mBAAA,EAAAC,eAAA;EAAA;;EAKA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAZA,MAcSC,YAAY,GAAAH,qBAAA;EAAA,MASZI,gBAAgB,GAAAH,mBAAA;EAAA,MAChBI,YAAY,GAAAH,eAAA;EAId,MAAMI,QAAQ,SAASF,gBAAgB,CAAC;IAC3CG,EAAE,GAAG,SAAS,CAAC,CAAC;;IAEhB;IACAC,cAAc,GAAoD;MAC9DC,OAAO,EAAE,CAAC,IAAI,EAAE,WAAW,EAAE,UAAU,EAAE,KAAK,EAAE,gBAAgB,CAAC;MACjEC,GAAG,EAAE,CAAC,KAAK,CAAC;MACZC,eAAe,EAAE,CAAC,iBAAiB;IACvC,CAAC;IAEDC,WAAWA,CAAA,EAAG;MACV,KAAK,CAAC,CAAC;MACP;MACA,IAAI,CAACC,YAAY,GAAG,IAAIR,YAAY,CAAC,IAAI,CAACS,IAAI,EAAE,IAAI,CAACN,cAAc,CAAC,SAAS,CAAC,CAAC;IACnF;IAEA,MAAMO,SAASA,CACXC,UAAsE,EAC/B;MACvC,IAAI,CAACF,IAAI,GAAGE,UAAU,CAACF,IAAI,IAAI,IAAI,CAACA,IAAI;;MAExC;MACA,MAAMG,iBAAiB,GAAGD,UAAU,EAAEE,aAAa,IAAI,IAAI,CAACC,wBAAwB,CAAC,CAAC;MACtF,MAAMC,aAAa,GAAG,IAAI,CAACZ,cAAc,CAACS,iBAAiB,CAAC,IAAI,IAAI,CAACT,cAAc,CAAC,SAAS,CAAC;MAC9F,IAAI,CAACK,YAAY,GAAG,IAAIR,YAAY,CAAC,IAAI,CAACS,IAAI,EAAEM,aAAa,CAAC;MAC9D,MAAM,IAAI,CAACP,YAAY,CAACE,SAAS,CAAC,IAAI,CAACD,IAAI,CAAC;MAE5C,OAAO;QAAEO,YAAY,EAAE,IAAIlB,YAAY,CAAC,CAAC,CAAC;MAAE,CAAC;IACjD;IAEQgB,wBAAwBA,CAAA,EAAuB;MACnD;MACA,IAAIG,UAA8B,GAAGC,SAAS;MAC9C,IAAI,OAAOC,MAAM,KAAK,WAAW,EAAE;QAC/B,MAAMC,SAAS,GAAG,IAAIC,eAAe,CAACF,MAAM,CAACG,QAAQ,EAAEC,MAAM,CAAC;QAC9DN,UAAU,GAAGG,SAAS,EAAEI,GAAG,CAAC,sBAAsB,CAAC,IAAIN,SAAS;MACpE;MACA,OAAOD,UAAU;IACrB;IAEA,MAAMQ,kBAAkBA,CAACC,KAAkB,EAA4B;MACnE,OAAO,IAAI,CAAClB,YAAY,CAACe,MAAM,CAACG,KAAK,CAAC;IAC1C;IAEA,MAAMC,sBAAsBA,CAACD,KAAsB,EAAgC;MAC/E,OAAO,IAAI,CAAClB,YAAY,CAACoB,UAAU,CAACF,KAAK,CAAC;MAC1C;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IAOI;IAEA,MAAMG,iBAAiBA,CAACH,KAAiB,EAA2B;MAChE,OAAO,IAAI,CAAClB,YAAY,CAACsB,KAAK,CAACJ,KAAK,CAAC;IACzC;;IAEA;IACAK,qBAAqBA,CAACL,KAAqB,EAA+B;MACtE,MAAM,IAAIM,KAAK,CAAC,yBAAyB,CAAC;IAC9C;EACJ;EAAC,IAAAC,SAAA;IAAAC,UAAA;EAAA;EAAAD,SAAA,CAAAhC,QAAA,GAAAA,QAAA;EAAA,OAAAgC,SAAA;AAAA","ignoreList":[]}