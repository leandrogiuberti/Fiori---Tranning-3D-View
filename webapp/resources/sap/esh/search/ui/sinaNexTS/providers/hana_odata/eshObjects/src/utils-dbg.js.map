{"version":3,"file":"utils-dbg.js","names":["sap","ui","define","___definitions","Term","Phrase","Expression","SearchQueryLogicalOperator","CustomFunction","FilterFunction","LogicalOperator","SEARCH_DEFAULTS","escapeQuery","States","createEshSearchQuery","options","metadataCall","path","resourcePath","metadataObjects","entitySets","format","collectionReference","contextEntitySet","primitiveTyp","parameters","searchPath","suggestTerm","encodeURIComponent","replace","eshParameters","customParameters","key","Object","keys","push","length","join","newODataFilter","operator","and","items","query","scope","$select","facets","oDataFilter","urlSearchPath","searchQueryFilter","searchQueryFilterStatement","toStatement","trim","freeStyleText","freeStyleTextExpression","parseFreeStyleText","optionKey","$apply","filter","groupby","properties","aggregateCountAlias","$orderby","map","i","order","facetroot","dynamicview","dynamicView","apply","getEshSearchQuery","createdQuery","stringParams","term","state","currentChar","substring","indexOf","phrase","TIGHT_AND","__exports","__esModule"],"sources":["utils.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\n/** Copyright 2019 SAP SE or an SAP affiliate company. All rights reserved. */\nimport { Term, Phrase, Expression, SearchQueryLogicalOperator, IToStatement, IESSearchOptions, CustomFunction, FilterFunction, IEsearchRequestInterface, LogicalOperator, SEARCH_DEFAULTS, escapeQuery} from \"./definitions\"\n\n\nenum States {\n  Term,\n  Phrase\n}\n\n\n\nexport const createEshSearchQuery = (options: IESSearchOptions = {}): IEsearchRequestInterface => {\n  if (options.metadataCall) {\n    let path: string = options.resourcePath ? options.resourcePath : \"/$metadata\";\n    if (options.metadataObjects) {\n      if (options.metadataObjects.entitySets) {\n        path += \"/EntitySets(\" + options.metadataObjects.entitySets + \")\";\n      } else {\n        if (options.metadataObjects.format) {\n          path += \"?$format=\" + options.metadataObjects.format;\n        }\n        if (options.metadataObjects.collectionReference) {\n          path += \"#\" + options.metadataObjects.collectionReference;\n        }\n        if (options.metadataObjects.contextEntitySet && options.metadataObjects.primitiveTyp) {\n          path += \"#\" + options.metadataObjects.contextEntitySet + \"(\" + options.metadataObjects.primitiveTyp + \")\";\n        } else if (options.metadataObjects.contextEntitySet) {\n          path += \"#\" + options.metadataObjects.contextEntitySet;\n        } else if (options.metadataObjects.primitiveTyp) {\n          path += \"#\" + options.metadataObjects.primitiveTyp;\n        }\n      }\n    }\n    return {\n      path: path,\n      parameters: {},\n    };\n  }\n  /*\n  let searchPath1 = \"\";\n  if (options?.resourcePath) {\n    searchPath1 = options?.resourcePath\n  } else {\n    searchPath1 = (options && options.suggestTerm) ? `/$all/${encodeURIComponent(\"GetSuggestion(term='\" + options.suggestTerm.replace(\"'\", \"''\").replace(\"\\\\?\", \"?\") + \"')\")}` : \"/$all\";\n  }*/\n\n  let searchPath = \"/$all\";\n  if (options.resourcePath) {\n    searchPath = options.resourcePath;\n  }\n  if (options?.suggestTerm) {\n    searchPath += `/${encodeURIComponent(\"GetSuggestion(term='\" + options.suggestTerm.replace(/'/g, \"''\") + \"')\")}`;\n  }\n\n\n  if (options.eshParameters) {\n    const customParameters = []\n    for (const key of Object.keys(options.eshParameters)) {\n      customParameters.push(key + \"='\" + encodeURIComponent(options.eshParameters[key]) + \"'\");\n    }\n    if (customParameters.length > 0) {\n      searchPath += \"(\" + customParameters.join(\",\") + \")\"\n    }\n  }\n  const newODataFilter = new Expression({\n    operator: LogicalOperator.and,\n    items: [],\n  });\n  if (!options) {\n    options = {\n      query: SEARCH_DEFAULTS.query,\n      scope: SEARCH_DEFAULTS.scope,\n      $select: [],\n      facets: [],\n    };\n  } else {\n    if (!options.query) {\n      options.query = SEARCH_DEFAULTS.query;\n    }\n    /*\n    if (!options.scope) {\n      options.scope = SEARCH_DEFAULTS.scope;\n    }*/\n    if (!options.$select) {\n      options.$select = [];\n    }\n    if (!options.facets) {\n      options.facets = [];\n    }\n  }\n  if (options.oDataFilter) {\n    newODataFilter.items.push(options.oDataFilter);\n  }\n\n  if (newODataFilter.items.length > 0) {\n    options.oDataFilter = newODataFilter;\n  }\n\n  const urlSearchPath = searchPath;\n  let query = options.scope ? \"SCOPE:\" + options.scope : \"\";\n\n  if (options.searchQueryFilter) {\n    const searchQueryFilterStatement = options.searchQueryFilter.toStatement().trim();\n    if (searchQueryFilterStatement.length > 0) {\n      if (query !== \"\") {\n        query += \" \";\n      }\n      query += searchQueryFilterStatement;\n    }\n  }\n  if (options.freeStyleText) {\n    if (query !== \"\") {\n      query += \" \";\n    }\n    const freeStyleTextExpression = parseFreeStyleText(options.freeStyleText)\n    query += freeStyleTextExpression.toStatement();\n  }\n  if (options.query && options.query !== \"\") {\n    if (query !== \"\") {\n      query += \" \";\n    }\n    query += escapeQuery(options.query);\n  }\n  const parameters: any = {};\n  for (const optionKey of Object.keys(options)) {\n    switch (optionKey) {\n      case \"query\":\n        if (options.$apply) {\n          // it is not allowed to use query and $apply together\n          break;\n        }\n        let filter = query === \"\" ? \"\" : \"filter(Search.search(query='\" + query + \"')\";\n        if (options.oDataFilter && options.oDataFilter.items.length > 0) {\n          filter += \" and \" + options.oDataFilter.toStatement();\n        }\n        if (query !== \"\") {\n          filter += \")\";\n        }\n        if (options.groupby && options.groupby.properties && (options.groupby.properties.length > 0)) {\n          filter += `/groupby((${options.groupby.properties.join(\",\")})`;\n          if (options.groupby.aggregateCountAlias && options.groupby.aggregateCountAlias !== \"\") {\n            filter += `,aggregate($count as ${options.groupby.aggregateCountAlias})`;\n          }\n          filter += \")\";\n        }\n        if (filter !== \"\") {\n          parameters.$apply = filter;\n        }\n        break;\n      case \"$orderby\":\n        if (options.$orderby && options.$orderby.length > 0) {\n          parameters.$orderby = options.$orderby.map(i => i.order ? `${i.key} ${i.order}` : i.key).join(\",\");\n        }\n        break;\n      case \"facets\":\n        if (options.facets && options.facets.length > 0) {\n          parameters[optionKey] = options.facets.join(\",\");\n        }\n        break;\n      case \"$select\":\n        if (options.$select && options.$select.length > 0) {\n          parameters[optionKey] = options.$select.join(\",\");\n        }\n        break;\n      case \"facetroot\":\n        if (options.facetroot && options.facetroot.length > 0) {\n          parameters.facetroot = options.facetroot.map(i => i.toStatement()).join(\",\");\n        }\n        break;\n      case \"$top\":\n      case \"$skip\":\n      case \"$count\":\n      case \"whyfound\":\n      case \"estimate\":\n      case \"wherefound\":\n      case \"facetlimit\":\n      case \"valuehierarchy\":\n      case \"filteredgroupby\":\n        parameters[optionKey] = options[optionKey];\n        break;\n      case \"dynamicview\":\n        if (options.dynamicview) {\n          parameters[optionKey] = options.dynamicview.map(dynamicView => {\n            return dynamicView.toStatement()\n          }).join(\" \");  \n        }\n        break;\n      case \"$apply\":\n        if ((options[optionKey] instanceof CustomFunction) || (options[optionKey] instanceof FilterFunction)) {\n          let apply = (options[optionKey] as IToStatement).toStatement(); \n          if (options.groupby && options.groupby.properties && (options.groupby.properties.length > 0)) {\n            apply += `/groupby((${options.groupby.properties.join(\",\")})`;\n            if (options.groupby.aggregateCountAlias && options.groupby.aggregateCountAlias !== \"\") {\n              apply += `,aggregate($count as ${options.groupby.aggregateCountAlias})`;\n            }\n            apply += \")\";\n          };\n          parameters[optionKey] = apply;\n        }\n        break;\n      default:\n        break;\n    }\n  }\n  return {\n    path: urlSearchPath,\n    parameters,\n  };\n};\n\nexport const getEshSearchQuery = (options?: IESSearchOptions): string => {\n  const createdQuery = createEshSearchQuery(options);\n  const stringParams = Object.keys(createdQuery.parameters).map(function (key) {\n    return encodeURIComponent(key) + \"=\" + encodeURIComponent(createdQuery.parameters[key]);\n  }).join(\"&\");\n  if (stringParams && stringParams !== \"\") {\n    return `${createdQuery.path}?${stringParams}`;\n  }\n  return createdQuery.path;\n};\n\nexport const parseFreeStyleText = (freeStyleText: string): Expression => {\n  const items: (Term | Phrase)[] = []\n  let term = \"\";\n  let state: States = States.Term;\n  for (let i = 0; i < freeStyleText.length; i++) {\n    const currentChar = freeStyleText[i];\n    if (currentChar === '\"') {\n      if (state == States.Term) {\n        // check if there is closing \"\n        if (freeStyleText.substring(i+1).indexOf('\"') >= 0) {\n            items.push(new Term({term: term.trim()}));\n            state = States.Phrase;\n            term = '';\n        } else {\n          items.push(new Term({term: (term + freeStyleText.substring(i)).trim()}));\n          term = '';\n          break;\n        }\n      } else {\n        items.push(new Phrase({phrase: term}));\n        state = States.Term;\n        term = '';\n      }\n    } else {\n      term += freeStyleText[i];\n    }\n  }\n  if (term.length > 0) {\n    items.push(new Term({term: term.trim()}));\n  }\n  return new Expression({\n    operator: SearchQueryLogicalOperator.TIGHT_AND,\n    items\n  });\n}\n"],"mappings":"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","ignoreList":[]}