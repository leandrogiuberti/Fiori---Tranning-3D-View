/*!
 * SAPUI5
 * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.
 * 
 */
sap.ui.define(["../../sina/DataSource","../../sina/ComparisonOperator","../../sina/LogicalOperator","../../sina/ComplexCondition","../../sina/AttributeType","./typeConverter","./eshObjects/src/index","../../core/errors","../../sina/NullValue"],function(e,t,r,n,a,o,i,s,c){"use strict";const u=e["DataSource"];const l=t["ComparisonOperator"];const p=r["LogicalOperator"];const d=n["ComplexCondition"];const C=a["AttributeType"];const h=i["SearchQueryComparisonOperator"];const O=i["ComparisonOperator"];const v=i["NullValue"];const w=i["SearchQueryLogicalOperator"];const S=i["Expression"];const f=i["Comparison"];const m=i["Phrase"];const E=i["StringValue"];const T=s["UnknownComparisonOperatorError"];const g=s["UnknownLogicalOperatorError"];const L=c["NullValue"];class y{dataSource;constructor(e){this.dataSource=e}convertSinaToOdataOperator(e){switch(e){case l.Search:return h.Search;case l.Eq:return h.EqualCaseSensitive;case l.Ne:return h.NotEqualCaseSensitive;case l.Lt:return h.LessThanCaseInsensitive;case l.Gt:return h.GreaterThanCaseInsensitive;case l.Le:return h.LessThanOrEqualCaseInsensitive;case l.Ge:return h.GreaterThanOrEqualCaseInsensitive;case l.Co:return h.EqualCaseInsensitive;case l.Bw:return h.EqualCaseInsensitive;case l.Ew:return h.EqualCaseInsensitive;case l.DescendantOf:return h.DescendantOf;case l.ChildOf:return h.ChildOf;default:throw new T(e)}}convertSinaToOdataLogicalOperator(e){switch(e){case p.And:return w.AND;case p.Or:return w.OR;case p.Not:return w.NOT;case p.Row:return w.ROW;default:throw new g(e)}}serializeComplexCondition(e){const t=new S({operator:this.convertSinaToOdataLogicalOperator(e.operator),items:[]});const r=e.conditions;for(let e=0;e<r.length;++e){const n=r[e];t.items.push(this.serialize(n))}return t}serializeSimpleCondition(e){if(e.value instanceof L&&e.operator===l.Eq){return new f({property:e.attribute,operator:O.Is,value:new v})}let t=C.String;let r;if(this.dataSource instanceof u){r=this.dataSource.getAttributeMetadata(e.attribute);if(r&&r.type){t=r.type}}const n=o.sina2Odata(t,e.value,{operator:e.operator});const a=this.convertSinaToOdataOperator(e.operator);return new f({property:e.attribute,operator:a,value:new m({phrase:n})})}serializeBetweenCondition(e){const t=e.conditions[0];const r=e.conditions[1];let n=C.String;if(this.dataSource instanceof u){const e=this.dataSource.getAttributeMetadata(t.attribute);n=e.type||C.String}const a=o.sina2Odata(n,t.value,{operator:t.operator});const i=o.sina2Odata(n,r.value,{operator:r.operator});return new S({operator:w.AND,items:[new f({property:t.attribute,operator:h.GreaterThanOrEqualCaseInsensitive,value:new E({value:a,isQuoted:true})}),new f({property:t.attribute,operator:h.LessThanOrEqualCaseInsensitive,value:new E({value:i,isQuoted:true})})]})}serialize(e){if(e instanceof d){if(e.operator===p.And&&e.conditions.length>1&&e.conditions[0]&&(e.conditions[0].operator===l.Ge||e.conditions[0].operator===l.Gt||e.conditions[0].operator===l.Le||e.conditions[0].operator===l.Lt)){return this.serializeBetweenCondition(e)}return this.serializeComplexCondition(e)}return this.serializeSimpleCondition(e)}}function b(e,t){const r=new y(e);let n=r.serialize(t);if(n instanceof f){n=new S({operator:w.TIGHT_AND,items:[n]})}return n}var q={__esModule:true};q.ConditionSerializer=y;q.serialize=b;return q});
//# sourceMappingURL=conditionSerializerEshObj.js.map