{"version":3,"file":"TypeConverterUtil.js","names":["sap","ui","define","____sina_AttributeType","____core_errors","___AttributeTypeFallbackValue","____sina_i18n","AttributeType","InternalSinaError","JSONParseError","AttributeTypeFallbackValue","getText","convertToSinaDouble","value","Array","isArray","Double","parseFloat","convertToSinaInteger","Integer","parseInt","convertToSinaStringImageUrlImageBlob","attributeType","ImageUrl","ImageBlob","toString","String","length","collectionValue","i","JSON","stringify","e","message","previous","convertToSinaGeoJson","GeoJson","parse","error","convertToSinaDate","Date","odata2SinaDate","convertToSinaTime","Time","odata2SinaTime","convertToSinaTimestamp","Timestamp","odata2SinaTimestamp","trim","slice","__exports","__esModule"],"sources":["TypeConverterUtil.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\nimport { AttributeType } from \"../../sina/AttributeType\";\nimport { InternalSinaError, JSONParseError } from \"../../core/errors\";\nimport { ODataValue } from \"../../sina/odatatypes\";\nimport { AttributeTypeFallbackValue } from \"./AttributeTypeFallbackValue\";\nimport { getText } from \"../../sina/i18n\";\n\nexport function convertToSinaDouble(value: ODataValue): number {\n    if (\n        typeof value === \"undefined\" ||\n        value === null ||\n        value === \"\" ||\n        typeof value === \"boolean\" ||\n        Array.isArray(value) ||\n        typeof value === \"object\"\n    ) {\n        return AttributeTypeFallbackValue.Double;\n    } else if (typeof value === \"string\") {\n        return parseFloat(value);\n    } else if (typeof value === \"bigint\" || typeof value === \"number\") {\n        return value;\n    }\n    return AttributeTypeFallbackValue.Double;\n}\nexport function convertToSinaInteger(value: ODataValue): number {\n    if (\n        typeof value === \"undefined\" ||\n        value === null ||\n        value === \"\" ||\n        typeof value === \"boolean\" ||\n        Array.isArray(value) ||\n        typeof value === \"object\"\n    ) {\n        return AttributeTypeFallbackValue.Integer;\n    } else if (typeof value === \"string\") {\n        return parseInt(value, 10);\n    } else if (typeof value === \"bigint\" || typeof value === \"number\") {\n        return value | 0;\n    }\n    return AttributeTypeFallbackValue.Integer;\n}\nexport function convertToSinaStringImageUrlImageBlob(\n    attributeType: AttributeType,\n    value: ODataValue\n): string {\n    if (typeof value === \"undefined\" || value === null || value === \"\") {\n        return \"\";\n    } else if (typeof value === \"boolean\") {\n        // \"true\" or \"false\" makes no sense for ImageUrl or ImageBlob\n        if (attributeType === AttributeType.ImageUrl || attributeType === AttributeType.ImageBlob) {\n            return AttributeTypeFallbackValue.ImageUrl;\n        }\n        return value.toString();\n    } else if (Array.isArray(value)) {\n        if (attributeType === AttributeType.String) {\n            if (value.length === 0) {\n                return \"\";\n            } else {\n                // support of collection of string or simple objects\n                // Limitation: not applicable as filter condition value\n                // for internal display use only\n                let collectionValue = \"\";\n                for (let i = 0; i < value.length; i++) {\n                    try {\n                        value[i] = JSON.stringify(value[i]);\n                    } catch (e) {\n                        throw new InternalSinaError({\n                            message: getText(\"error.sina.stringifyError\", [value[i]]),\n                            previous: e,\n                        });\n                    }\n                    if (i === 0) {\n                        collectionValue = value[i];\n                    } else {\n                        collectionValue = collectionValue + \"; \" + value[i];\n                    }\n                }\n                return collectionValue;\n            }\n        }\n    } else if (typeof value === \"object\") {\n        return AttributeTypeFallbackValue.String; // TODO: validate JSON.stringify(value);\n    } else if (typeof value === \"string\") {\n        return value;\n    } else if (typeof value === \"bigint\" || typeof value === \"number\") {\n        return value.toString();\n    }\n    return AttributeTypeFallbackValue.String;\n}\nexport function convertToSinaGeoJson(attributeType: AttributeType, value: ODataValue): object {\n    if (\n        typeof value === \"undefined\" ||\n        value === null ||\n        value === \"\" ||\n        typeof value === \"boolean\" ||\n        typeof value === \"bigint\" ||\n        typeof value === \"number\" ||\n        Array.isArray(value)\n    ) {\n        return AttributeTypeFallbackValue.GeoJson;\n    } else if (typeof value === \"object\") {\n        return value;\n    } else if (typeof value === \"string\") {\n        try {\n            return JSON.parse(value);\n        } catch (error) {\n            throw new JSONParseError(getText(\"error.sina.geoJsonParseError\", [value]), error);\n        }\n    }\n    return AttributeTypeFallbackValue.GeoJson;\n}\nexport function convertToSinaDate(value: ODataValue): string {\n    if (\n        typeof value === \"undefined\" ||\n        value === null ||\n        value === \"\" ||\n        typeof value === \"boolean\" ||\n        Array.isArray(value) ||\n        typeof value === \"object\" ||\n        typeof value === \"bigint\" ||\n        typeof value === \"number\"\n    ) {\n        return AttributeTypeFallbackValue.Date;\n    } else if (typeof value === \"string\") {\n        return odata2SinaDate(value);\n    }\n    return AttributeTypeFallbackValue.Date;\n}\nexport function convertToSinaTime(value: ODataValue): string {\n    if (\n        typeof value === \"undefined\" ||\n        value === null ||\n        value === \"\" ||\n        typeof value === \"boolean\" ||\n        Array.isArray(value) ||\n        typeof value === \"object\" ||\n        typeof value === \"bigint\" ||\n        typeof value === \"number\"\n    ) {\n        return AttributeTypeFallbackValue.Time;\n    } else if (typeof value === \"string\") {\n        return odata2SinaTime(value);\n    }\n    return AttributeTypeFallbackValue.Time;\n}\nexport function convertToSinaTimestamp(value: ODataValue): Date {\n    if (\n        typeof value === \"undefined\" ||\n        value === null ||\n        value === \"\" ||\n        typeof value === \"boolean\" ||\n        Array.isArray(value) ||\n        typeof value === \"object\" ||\n        typeof value === \"bigint\" ||\n        typeof value === \"number\"\n    ) {\n        return AttributeTypeFallbackValue.Timestamp;\n    } else if (typeof value === \"string\") {\n        return odata2SinaTimestamp(value);\n    }\n    return AttributeTypeFallbackValue.Timestamp;\n}\n\nexport function odata2SinaDate(value: string): string {\n    // odata: YYYY-MM-DD\n    // sina: YYYY/MM/DD\n    value = value.trim();\n    return value.slice(0, 4) + \"/\" + value.slice(5, 7) + \"/\" + value.slice(8, 10);\n    //return value.slice(0, 4) + '/' + value.slice(4, 6) + '/' + value.slice(6, 8);\n}\n\nexport function odata2SinaTime(value: string): string {\n    // odata: hh:mm:ss\n    // sina: hh:mm:ss\n    value = value.trim();\n    return value;\n    //            if(value.indexOf(\":\") === 2){\n    //                return value;\n    //            }else{\n    //                return value.slice(0, 2) + ':' + value.slice(2, 4) + ':' + value.slice(4, 6);\n    //            }\n}\n\nexport function odata2SinaTimestamp(value: string): Date {\n    // odata:2017-12-31T23:59:59.0000000Z\n    // sina: Date object of UTC\n    return new Date(Date.parse(value));\n\n    /*\n    value = value.trim();\n\n    var year, month, day, hour, minute, seconds;\n    year = parseInt(value.slice(0, 4), 10);\n    month = parseInt(value.slice(5, 7), 10);\n    day = parseInt(value.slice(8, 10), 10);\n    hour = parseInt(value.slice(11, 13), 10);\n    minute = parseInt(value.slice(14, 16), 10);\n    seconds = parseInt(value.slice(17, 19), 10);\n\n    return new Date(Date.UTC(year, month - 1, day, hour, minute, seconds));\n    */\n}\n"],"mappings":"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","ignoreList":[]}