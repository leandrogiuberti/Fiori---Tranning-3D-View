{"version":3,"file":"JoinConditions.js","names":["sap","ui","define","___NavigationTargetTemplate","_____sina_SinaObject","NavigationTargetTemplate","SinaObject","JoinConditions","navigationTargetGenerator","sourceObjectType","targetObjectType","conditions","constructor","properties","super","this","add","condition","push","hasDuplicateSemanticObject","map","i","length","semanticObjectType","hasDistinctValue","property","value","generateNavigationTargetTemplates","createSingleConditionsTemplates","createMultipleConditionsTemplates","navigationTargetTemplates","sourcePropertyNameDistinct","targetPropertyNameDistinct","navigationTargetTemplate","sina","label","_condition","assembleSingleConditionTemplateLabels","objectTypeMap","navigationTargets","targetMap","targets","labelKey","navigationTarget","metadata","propertyMap","targetPropertyName","j","sourcePropertyName","__exports","__esModule"],"sources":["JoinConditions.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\nimport { NavigationTargetTemplate } from \"./NavigationTargetTemplate\";\nimport { SinaObject } from \"../../../sina/SinaObject\";\nimport { NavigationTargetGenerator } from \"./NavigationTargetGenerator\";\n\nexport class JoinConditions extends SinaObject {\n    navigationTargetGenerator: NavigationTargetGenerator;\n    sourceObjectType: string;\n    targetObjectType: string;\n    conditions: any[];\n\n    constructor(properties) {\n        super(properties);\n        this.navigationTargetGenerator = properties.navigationTargetGenerator;\n        this.sourceObjectType = properties.sourceObjectType;\n        this.targetObjectType = properties.targetObjectType;\n        this.conditions = [];\n    }\n\n    add(condition) {\n        this.conditions.push(condition);\n    }\n\n    hasDuplicateSemanticObject() {\n        const map = {};\n        for (let i = 0; i < this.conditions.length; ++i) {\n            const condition = this.conditions[i];\n            if (map[condition.semanticObjectType]) {\n                return true;\n            }\n            map[condition.semanticObjectType] = true;\n        }\n        return false;\n    }\n\n    hasDistinctValue(semanticObjectType, property) {\n        let value;\n        for (let i = 0; i < this.conditions.length; ++i) {\n            const condition = this.conditions[i];\n            if (condition.semanticObjectType !== semanticObjectType) {\n                continue;\n            }\n            if (!value) {\n                value = condition[property];\n                continue;\n            }\n            if (value !== condition[property]) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    generateNavigationTargetTemplates() {\n        if (this.hasDuplicateSemanticObject()) {\n            return this.createSingleConditionsTemplates();\n        }\n        return this.createMultipleConditionsTemplates();\n    }\n\n    createSingleConditionsTemplates() {\n        const navigationTargetTemplates = [];\n        for (let i = 0; i < this.conditions.length; ++i) {\n            const condition = this.conditions[i];\n            const sourcePropertyNameDistinct = this.hasDistinctValue(\n                condition.semanticObjectType,\n                \"sourcePropertyName\"\n            );\n            const targetPropertyNameDistinct = this.hasDistinctValue(\n                condition.semanticObjectType,\n                \"targetPropertyName\"\n            );\n            if (!sourcePropertyNameDistinct && !targetPropertyNameDistinct) {\n                continue;\n            }\n            const navigationTargetTemplate = new NavigationTargetTemplate({\n                sina: this.sina,\n                navigationTargetGenerator: this.navigationTargetGenerator,\n                label: \"dummy\",\n                sourceObjectType: this.sourceObjectType,\n                targetObjectType: this.targetObjectType,\n                conditions: [condition],\n            });\n            navigationTargetTemplate._condition = condition;\n            navigationTargetTemplates.push(navigationTargetTemplate);\n        }\n        this.assembleSingleConditionTemplateLabels(navigationTargetTemplates);\n        return navigationTargetTemplates;\n    }\n\n    createMultipleConditionsTemplates() {\n        return [\n            new NavigationTargetTemplate({\n                sina: this.sina,\n                navigationTargetGenerator: this.navigationTargetGenerator,\n                label: this.navigationTargetGenerator.objectTypeMap[this.targetObjectType].label,\n                sourceObjectType: this.sourceObjectType,\n                targetObjectType: this.targetObjectType,\n                conditions: this.conditions,\n            }),\n        ];\n    }\n\n    assembleSingleConditionTemplateLabels(navigationTargets) {\n        // assemble label based on target object and target property\n        // collect in navigation target in map with label key\n        const targetMap = {};\n        let targets, labelKey, navigationTarget, metadata;\n        for (let i = 0; i < navigationTargets.length; ++i) {\n            navigationTarget = navigationTargets[i];\n            metadata = this.navigationTargetGenerator.objectTypeMap[this.targetObjectType];\n            labelKey =\n                metadata.label +\n                \" to:\" +\n                metadata.propertyMap[navigationTarget._condition.targetPropertyName].label;\n            navigationTarget.label = labelKey;\n            targets = targetMap[labelKey];\n            if (!targets) {\n                targets = [];\n                targetMap[labelKey] = targets;\n            }\n            targets.push(navigationTarget);\n        }\n        // assemble final label\n        metadata = this.navigationTargetGenerator.objectTypeMap[this.sourceObjectType];\n        for (labelKey in targetMap) {\n            targets = targetMap[labelKey];\n            if (targets.length > 1) {\n                for (let j = 0; j < targets.length; ++j) {\n                    navigationTarget = targets[j];\n                    navigationTarget.label +=\n                        \" from:\" + metadata.propertyMap[navigationTarget._condition.sourcePropertyName].label;\n                }\n            }\n        }\n    }\n}\n"],"mappings":"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","ignoreList":[]}