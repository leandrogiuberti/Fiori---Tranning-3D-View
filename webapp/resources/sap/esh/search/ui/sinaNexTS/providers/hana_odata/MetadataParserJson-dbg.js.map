{"version":3,"file":"MetadataParserJson-dbg.js","names":["sap","ui","define","____core_errors","____sina_DataSourceType","___MetadataParser","ServerError","ServerErrorCode","DataSourceType","MetadataParser","MetadataParserJson","constructor","provider","fireRequest","client","url","response","getJson","error","code","E101","sina","addError","dataJSON","parseResponse","metaJson","allInOneMap","businessObjectMap","Map","businessObjectList","dataSourceMap","dataSourcesList","metaData","data","metadata","entityContainer","length","aEntityContainer","split","schemaNameSpace","entityContainerName","schemaObject","entityContainerObject","helperMap","_parseEntityType","_parseEntityContainer","entityTypeName","entityTypeOrigin","substring","entityType","schema","keys","attributeMap","label","labelPlural","annotations","index","annoOrAttrName","annoOrAttr","startsWith","_parseEntityTypeAnnotations","_parseAttribute","annoName","annoValue","toUpperCase","_setAnnotationValue","icon","attributeName","attributeValue","attribute","labelRaw","type","presentationUsage","isFacet","isSortable","supportsTextSearch","displayOrder","annotationsAttr","unknownAnnotation","annoOrProp","annoOrPropValue","_parseAttributeAnnotations","annotationName","annotationValue","undefined","_normalizeAnnotationValueOfArrayOrObject","isKey","facetPosition","facetIconUrlAttributeName","isFilteringAttribute","push","Array","isArray","i","_normalizeAnnotationValueOfObject","keyName","keyNameUpperCase","_getValueFromArrayWithSingleEntry","aArray","entityObject","entitySet","newDatasource","createDataSource","id","BusinessObject","attributesMetadata","name","dataSource","__exports","__esModule"],"sources":["MetadataParserJson.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\nimport { AjaxClient as Client } from \"../../core/AjaxClient\";\nimport { ServerError, ServerErrorCode } from \"../../core/errors\";\nimport { DataSourceType } from \"../../sina/DataSourceType\";\nimport { ServerMetadataMap, MetadataParser } from \"./MetadataParser\";\n\nexport class MetadataParserJson extends MetadataParser {\n    constructor(provider) {\n        super(provider);\n    }\n\n    async fireRequest(client: Client, url: string) {\n        try {\n            const response = await client.getJson(url);\n            return response;\n        } catch (error) {\n            if (error instanceof ServerError && error.code === ServerErrorCode.E101) {\n                this.provider.sina?.addError(error);\n                return (error as ServerError).response.dataJSON;\n            }\n            throw error;\n        }\n    }\n\n    async parseResponse(metaJson): Promise<ServerMetadataMap> {\n        // all in one metadata map\n        const allInOneMap: ServerMetadataMap = {\n            businessObjectMap: new Map(), // entity map with attributes and entityset name as key\n            businessObjectList: [], // list of all entities for convenience\n            dataSourceMap: new Map(), // datasource map with entityset name as key\n            dataSourcesList: [], // list of all datasources for convenience\n        };\n        const metaData = (metaJson.data && metaJson.data.metadata) || metaJson.data || metaJson;\n        const entityContainer = metaData[\"$EntityContainer\"];\n        if (typeof entityContainer !== \"string\" || entityContainer.length < 1) {\n            throw \"Meta data contains invalid EntityContainer!\";\n        }\n        const aEntityContainer = entityContainer.split(\".\");\n        const schemaNameSpace = aEntityContainer[0];\n        const entityContainerName = aEntityContainer[1];\n\n        const schemaObject = metaData[schemaNameSpace];\n        const entityContainerObject = schemaObject[entityContainerName];\n\n        const helperMap = this._parseEntityType(\n            schemaNameSpace,\n            schemaObject,\n            entityContainerName,\n            entityContainerObject\n        );\n        this._parseEntityContainer(entityContainerObject, helperMap, allInOneMap);\n        return allInOneMap;\n    }\n\n    // parse entityset and its attributes from EntityType\n    _parseEntityType(schemaNameSpace: string, schemaObject, entityContainerName, entityContainerObject) {\n        const helperMap = {};\n\n        for (let entityTypeName in schemaObject) {\n            // skip entityContainerObject\n            if (entityTypeName === entityContainerName) {\n                continue;\n            }\n            const entityTypeOrigin = schemaObject[entityTypeName];\n            if (entityTypeOrigin[\"@EnterpriseSearch.enabled\"] !== true) {\n                continue;\n            }\n            entityTypeName = entityTypeName.substring(0, entityTypeName.length - 4);\n            const entityType = {\n                schema: schemaNameSpace,\n                keys: [],\n                attributeMap: {},\n                label: entityContainerObject[entityTypeName][\"@SAP.Common.Label\"] || \"\",\n                labelPlural: entityContainerObject[entityTypeName][\"@SAP.Common.Label\"] || \"\",\n                annotations: {},\n            };\n            helperMap[entityTypeName] = entityType;\n\n            let index = 0;\n            for (const annoOrAttrName in entityTypeOrigin) {\n                const annoOrAttr = entityTypeOrigin[annoOrAttrName];\n                if (annoOrAttrName === \"$Key\") {\n                    entityType.keys = annoOrAttr;\n                    continue;\n                }\n                if (annoOrAttrName.startsWith(\"@\")) {\n                    this._parseEntityTypeAnnotations(annoOrAttrName, annoOrAttr, entityType);\n                    continue;\n                }\n                this._parseAttribute(annoOrAttrName, annoOrAttr, entityType, index);\n                index++;\n            }\n        }\n\n        return helperMap;\n    }\n\n    private _parseEntityTypeAnnotations(annoName, annoValue, entityType) {\n        annoName = annoName.substring(1).toUpperCase();\n        switch (annoName) {\n            case \"UI.HEADERINFO.TYPENAME\":\n                entityType.label = annoValue;\n                break;\n            case \"UI.HEADERINFO.TYPENAMEPLURAL\":\n                entityType.label = annoValue;\n                break;\n            case \"UI.HEADERINFO.TITLE.TYPE\":\n                this._setAnnotationValue(entityType.annotations, annoName, annoValue);\n                break;\n            case \"UI.HEADERINFO.TITLE.VALUEQUALIFIER\":\n                this._setAnnotationValue(entityType.annotations, annoName, annoValue);\n                break;\n            case \"UI.HEADERINFO.TYPEIMAGEURL\":\n                entityType.icon = annoValue;\n                break;\n            default:\n                this._setAnnotationValue(entityType.annotations, annoName, annoValue);\n        }\n    }\n\n    private _parseAttribute(attributeName, attributeValue, entityType, index) {\n        if (typeof attributeValue !== \"object\") {\n            return;\n        }\n        // schema of supported annotations is required in order to eliminate this any\n        const attribute = {\n            labelRaw: attributeName,\n            label: null,\n            type: \"\",\n            presentationUsage: [],\n            isFacet: false,\n            isSortable: false,\n            supportsTextSearch: false,\n            displayOrder: index,\n            annotationsAttr: {},\n            unknownAnnotation: [],\n        } as any;\n\n        entityType.attributeMap[attributeName] = attribute;\n\n        for (const annoOrProp in attributeValue) {\n            const annoOrPropValue = attributeValue[annoOrProp];\n            if (annoOrProp === \"$Type\" || annoOrProp === \"Type\") {\n                attribute[\"type\"] = annoOrPropValue;\n                continue;\n            }\n            if (annoOrProp.startsWith(\"@\")) {\n                this._parseAttributeAnnotations(annoOrProp, annoOrPropValue, attribute);\n            }\n        }\n    }\n\n    private _parseAttributeAnnotations(annotationName, annotationValue, attribute) {\n        annotationName = annotationName.substring(1).toUpperCase();\n\n        if (annotationValue !== undefined) {\n            this._normalizeAnnotationValueOfArrayOrObject(annotationValue);\n            switch (annotationName) {\n                case \"SAP.COMMON.LABEL\":\n                    if (!attribute.label) {\n                        attribute.label = annotationValue;\n                    }\n                    break;\n                case \"ENTERPRISESEARCH.KEY\":\n                    attribute.isKey = annotationValue;\n                    break;\n                case \"ENTERPRISESEARCH.PRESENTATIONMODE\":\n                    attribute.presentationUsage = annotationValue;\n                    break;\n                case \"ENTERPRISESEARCHHANA.ISSORTABLE\":\n                    attribute.isSortable = annotationValue;\n                    break;\n                case \"ENTERPRISESEARCHHANA.SUPPORTSTEXTSEARCH\":\n                    attribute.supportsTextSearch = annotationValue;\n                    break;\n                case \"ENTERPRISESEARCH.FILTERINGFACET.DEFAULT\":\n                    attribute.isFacet = annotationValue;\n                    break;\n                case \"ENTERPRISESEARCH.FILTERINGFACET.DISPLAYPOSITION\":\n                    attribute.facetPosition = annotationValue;\n                    break;\n                case \"ENTERPRISESEARCH.FILTERINGFACET.ICONURL\":\n                    attribute.facetIconUrlAttributeName = annotationValue;\n                    break;\n                case \"ENTERPRISESEARCH.FILTERINGATTRIBUTE.DEFAULT\":\n                    attribute.isFilteringAttribute = annotationValue;\n                    break;\n                case \"ENTERPRISESEARCH.FILTERINGATTRIBUTE.DISPLAYPOSITION\":\n                    attribute.facetPosition = annotationValue;\n                    break;\n                case \"ENTERPRISESEARCH.FILTERINGATTRIBUTE.ICONURL\":\n                    attribute.facetIconUrlAttributeName = annotationValue;\n                    break;\n                case \"ENTERPRISESEARCH.DISPLAYORDER\":\n                    attribute.displayOrder = annotationValue;\n                    break;\n                default:\n                    if (\n                        annotationName.startsWith(\"UI\") ||\n                        annotationName.startsWith(\"OBJECTMODEL\") ||\n                        annotationName.startsWith(\"SEMANTICS\")\n                    ) {\n                        this._setAnnotationValue(attribute.annotationsAttr, annotationName, annotationValue);\n                    } else {\n                        attribute.unknownAnnotation.push(annotationName);\n                    }\n            }\n        }\n    }\n\n    private _normalizeAnnotationValueOfArrayOrObject(annotationValue) {\n        if (Array.isArray(annotationValue)) {\n            for (let i = 0; i < annotationValue.length; i++) {\n                this._normalizeAnnotationValueOfObject(annotationValue[i]);\n            }\n        } else this._normalizeAnnotationValueOfObject(annotationValue);\n        // system\n        return annotationValue;\n    }\n\n    private _normalizeAnnotationValueOfObject(annotationValue) {\n        if (typeof annotationValue === \"object\") {\n            for (const keyName in annotationValue) {\n                const keyNameUpperCase = keyName.toUpperCase();\n                annotationValue[keyNameUpperCase] = annotationValue[keyName];\n                delete annotationValue[keyName];\n            }\n        }\n        return annotationValue;\n    }\n\n    private _getValueFromArrayWithSingleEntry(aArray) {\n        if (Array.isArray(aArray) && aArray.length === 1) {\n            return aArray[0];\n        }\n        return aArray;\n    }\n\n    // parse datasources from EntityContainer\n    _parseEntityContainer(entityContainerObject, helperMap, allInOneMap) {\n        for (const entityObject in entityContainerObject) {\n            const entitySet = helperMap[entityObject];\n            if (entityObject === \"$Kind\") {\n                continue;\n            }\n            if (entitySet === undefined) {\n                throw \"EntityType \" + entityObject + \" has no corresponding meta data!\";\n            }\n\n            const newDatasource = this.sina.createDataSource({\n                id: entityObject,\n                label: entitySet.label || entityObject,\n                labelPlural: entitySet.labelPlural || entitySet.label || entityObject,\n                icon: entitySet.icon || \"\",\n                type: DataSourceType.BusinessObject,\n                attributesMetadata: [\n                    {\n                        id: \"dummy\",\n                    },\n                ] as any, // fill with dummy attribute\n            });\n            newDatasource.annotations = entitySet.annotations;\n            allInOneMap.dataSourceMap[newDatasource.id] = newDatasource;\n            allInOneMap.dataSourcesList.push(newDatasource);\n\n            entitySet.name = entityObject;\n            entitySet.dataSource = newDatasource;\n            allInOneMap.businessObjectMap[entityObject] = entitySet;\n            allInOneMap.businessObjectList.push(entitySet);\n        }\n    }\n}\n"],"mappings":"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","ignoreList":[]}