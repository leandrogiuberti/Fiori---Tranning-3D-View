{"version":3,"file":"suggestionParser-dbg.js","names":["sap","ui","define","____sina_SearchResultSetItemAttribute","____sina_SuggestionCalculationMode","SearchResultSetItemAttribute","SuggestionCalculationMode","SuggestionParser","provider","sina","itemParser","constructor","parseObjectSuggestions","query","data","d","ObjectSuggestions","SearchResults","results","suggestionPromises","objectSuggestions","i","length","objectSuggestion","push","parseObjectSuggestion","Promise","all","parseItem","then","object","fillValueHighlighted","title","titleAttributes","filter","attribute","map","valueFormatted","join","_createObjectSuggestion","calculationMode","Data","label","bind","doFillValueHighlighted","attributes","valueHighlighted","detailAttributes","parseRegularSuggestions","suggestions","suggestion","parentSuggestion","parentSuggestions","cell","parentCell","Suggestions","Type","parseSearchTermSuggestion","parseSearchTermAndDataSourceSuggestion","parseDataSourceSuggestion","type","SuggestionType","SearchTermAndDataSource","searchTerm","undefined","_getParentCell","childSuggestions","Object","keys","forEach","key","dataSource","getDataSource","FromDataSource","clone","setDataSource","_createDataSourceSuggestion","SearchTermsHighlighted","parseCalculationMode","setSearchTerm","SearchTerms","_createSearchTermSuggestion","_createSearchTermAndDataSourceSuggestion","scope","History","FromDataSourceAttribute","__exports","__esModule"],"sources":["suggestionParser.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\nimport { DataSourceSuggestion } from \"../../sina/DataSourceSuggestion\";\nimport { SearchResultSetItem } from \"../../sina/SearchResultSetItem\";\nimport { SearchResultSetItemAttribute } from \"../../sina/SearchResultSetItemAttribute\";\nimport { SearchTermAndDataSourceSuggestion } from \"../../sina/SearchTermAndDataSourceSuggestion\";\nimport { SearchTermSuggestion } from \"../../sina/SearchTermSuggestion\";\nimport { Sina } from \"../../sina/Sina\";\nimport { SuggestionCalculationMode } from \"../../sina/SuggestionCalculationMode\";\nimport { SuggestionQuery } from \"../../sina/SuggestionQuery\";\nimport { ItemParser, ABAPOdataSearchResponse } from \"./ItemParser\";\nimport { Provider } from \"./Provider\";\n\nexport interface ICell {\n    FromDataSource: string;\n    FromDataSourceAttribute: string;\n    SearchTerms: string;\n    SearchTermsHighlighted: string;\n    Type: string;\n}\n\nexport interface ABAPOdataSuggestionResponse {\n    d: {\n        DataSources: { results: Array<unknown> };\n        DetailLevel: number;\n        Id: string;\n        IncludeAttributeSuggestions: boolean;\n        IncludeDataSourceSuggestions: boolean;\n        IncludeHistorySuggestions: boolean;\n        ObjectSuggestions: Record<string, unknown>;\n        SuggestionInput: string;\n        Suggestions: {\n            results: Array<{\n                FromDataSource: string;\n                FromDataSourceAttribute: string;\n                NumberOfObjects: number;\n                Score: string;\n                SearchTerms: string;\n                SearchTermsHighlighted: string;\n                Type: string;\n            }>;\n        };\n    };\n}\n\nexport class SuggestionParser {\n    provider: Provider;\n    sina: Sina;\n    itemParser: ItemParser;\n\n    constructor(provider: Provider, itemParser: ItemParser) {\n        this.provider = provider;\n        this.sina = provider.sina;\n        this.itemParser = itemParser;\n    }\n\n    parseObjectSuggestions(query, data) {\n        if (\n            !data.d.ObjectSuggestions ||\n            !data.d.ObjectSuggestions.SearchResults ||\n            !data.d.ObjectSuggestions.SearchResults.results\n        ) {\n            return [];\n        }\n        const suggestionPromises = [];\n        const objectSuggestions = data.d.ObjectSuggestions.SearchResults.results;\n        for (let i = 0; i < objectSuggestions.length; ++i) {\n            const objectSuggestion = objectSuggestions[i];\n            suggestionPromises.push(this.parseObjectSuggestion(objectSuggestion));\n        }\n        return Promise.all(suggestionPromises);\n    }\n\n    private parseObjectSuggestion(objectSuggestion: ABAPOdataSearchResponse) {\n        return this.itemParser.parseItem(objectSuggestion).then(\n            function (object: SearchResultSetItem) {\n                // fill highlighted value: actually it would be better to call\n                // the search result set formatter like for a regular result\n                // set\n                this.fillValueHighlighted(object);\n\n                const title = object.titleAttributes\n                    .filter((attribute) => attribute instanceof SearchResultSetItemAttribute)\n                    .map(function (attribute: SearchResultSetItemAttribute) {\n                        return attribute.valueFormatted;\n                    })\n                    .join(\" \");\n                return this.sina._createObjectSuggestion({\n                    calculationMode: SuggestionCalculationMode.Data,\n                    label: title,\n                    object: object,\n                });\n            }.bind(this)\n        );\n    }\n\n    fillValueHighlighted(object): void {\n        const doFillValueHighlighted = function (attributes) {\n            if (!attributes) {\n                return;\n            }\n            for (let i = 0; i < attributes.length; ++i) {\n                const attribute = attributes[i];\n                if (!attribute.valueHighlighted) {\n                    attribute.valueHighlighted = attribute.valueFormatted;\n                }\n            }\n        };\n        doFillValueHighlighted(object.detailAttributes);\n        doFillValueHighlighted(object.titleAttributes);\n    }\n\n    public parseRegularSuggestions(\n        query: SuggestionQuery,\n        data: ABAPOdataSuggestionResponse\n    ): Array<SearchTermSuggestion | SearchTermAndDataSourceSuggestion | DataSourceSuggestion> {\n        const suggestions: Array<\n            SearchTermSuggestion | SearchTermAndDataSourceSuggestion | DataSourceSuggestion\n        > = [];\n        let suggestion;\n        let parentSuggestion;\n        const parentSuggestions = [];\n        let cell: ICell;\n        let parentCell: ICell;\n\n        if (!data.d.Suggestions || !data.d.Suggestions.results) {\n            return [];\n        }\n\n        const results = data.d.Suggestions.results;\n        for (let i = 0; i < results.length; i++) {\n            suggestion = null;\n            cell = results[i];\n\n            switch (cell.Type) {\n                case \"H\":\n                    suggestion = this.parseSearchTermSuggestion(query, cell);\n                    break;\n                case \"A\":\n                    suggestion = this.parseSearchTermAndDataSourceSuggestion(query, cell);\n                    // attach type and cell information\n                    // suggestion.type = \"A\";\n                    suggestion.cell = cell;\n                    break;\n                case \"M\":\n                    suggestion = this.parseDataSourceSuggestion(query, cell);\n                    break;\n            }\n\n            if (suggestion) {\n                if (suggestion.type === this.sina.SuggestionType.SearchTermAndDataSource) {\n                    // set parent sugestion\n                    if (parentSuggestions[suggestion.searchTerm] === undefined) {\n                        parentCell = this._getParentCell(suggestion.cell);\n                        parentSuggestion = this.parseSearchTermSuggestion(query, parentCell);\n                        parentSuggestions[suggestion.searchTerm] = parentSuggestion;\n                    }\n                    // remove type and cell information\n                    delete suggestion.cell;\n                    // attach children\n                    parentSuggestions[suggestion.searchTerm].childSuggestions.push(suggestion);\n                } else {\n                    // push non-attribute suggestion\n                    suggestions.push(suggestion);\n                }\n            }\n        }\n\n        // push attribute suggestion\n        Object.keys(parentSuggestions).forEach(function (key) {\n            suggestions.push(parentSuggestions[key]);\n        });\n\n        return suggestions;\n    }\n\n    parseDataSourceSuggestion(query: SuggestionQuery, cell: ICell): DataSourceSuggestion {\n        const calculationMode = SuggestionCalculationMode.Data; // always data suggestion\n        const dataSource = this.sina.getDataSource(cell.FromDataSource);\n        if (!dataSource) {\n            return null;\n        }\n        const filter = query.filter.clone();\n        filter.setDataSource(dataSource);\n        return this.sina._createDataSourceSuggestion({\n            calculationMode: calculationMode,\n            dataSource: dataSource,\n            label: cell.SearchTermsHighlighted,\n        });\n    }\n\n    parseSearchTermSuggestion(query: SuggestionQuery, cell: ICell): SearchTermSuggestion {\n        const calculationMode = this.parseCalculationMode(cell.Type);\n        const filter = query.filter.clone();\n        filter.setSearchTerm(cell.SearchTerms);\n        return this.sina._createSearchTermSuggestion({\n            searchTerm: cell.SearchTerms,\n            calculationMode: calculationMode,\n            filter: filter,\n            label: cell.SearchTermsHighlighted,\n        });\n    }\n\n    parseSearchTermAndDataSourceSuggestion(\n        query: SuggestionQuery,\n        cell: ICell\n    ): SearchTermAndDataSourceSuggestion {\n        const calculationMode = this.parseCalculationMode(cell.Type);\n        const filter = query.filter.clone();\n        filter.setSearchTerm(cell.SearchTerms);\n        const dataSource = this.sina.getDataSource(cell.FromDataSource);\n        if (!dataSource) {\n            return null;\n        }\n        filter.setDataSource(dataSource);\n        return this.sina._createSearchTermAndDataSourceSuggestion({\n            searchTerm: cell.SearchTerms,\n            dataSource: dataSource,\n            calculationMode: calculationMode,\n            filter: filter,\n            label: cell.SearchTermsHighlighted,\n        });\n    }\n\n    parseCalculationMode(scope: string): SuggestionCalculationMode {\n        switch (scope) {\n            case \"H\":\n                return SuggestionCalculationMode.History;\n            case \"A\":\n            case \"M\":\n                return SuggestionCalculationMode.Data;\n        }\n    }\n\n    private _getParentCell(cell: ICell): ICell {\n        const parentCell = cell;\n        parentCell.FromDataSource = \"<All>\";\n        parentCell.FromDataSourceAttribute = \"\";\n        parentCell.Type = \"A\";\n        return parentCell;\n    }\n}\n"],"mappings":"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","ignoreList":[]}