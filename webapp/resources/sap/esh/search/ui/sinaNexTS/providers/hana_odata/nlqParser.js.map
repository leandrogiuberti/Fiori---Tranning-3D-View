{"version":3,"file":"nlqParser.js","names":["sap","ui","define","____sina_i18n","getText","parseNlqInfo","sina","nlqInfos","success","filterDescription","filter","nlqInfo","ai","length","filterDescriptionsList","natural_language","dataSource","getDataSource","Name","push","label","join","__exports","__esModule"],"sources":["nlqParser.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\nimport { NlqResult } from \"../../sina/NlqResult\";\nimport { Sina } from \"../../sina/Sina\";\nimport { HANAOdataSearchResponseDataSourceNlqInfo } from \"./Provider\";\nimport { getText } from \"../../sina/i18n\";\n\nexport function parseNlqInfo(\n    sina: Sina,\n    nlqInfos: Array<HANAOdataSearchResponseDataSourceNlqInfo>\n): NlqResult {\n    // check for nlq infos\n    if (!nlqInfos) {\n        return { success: false, filterDescription: \"\" };\n    }\n    // filter for nql infos with ai activated\n    nlqInfos = nlqInfos.filter((nlqInfo) => nlqInfo.ai);\n    if (nlqInfos.length === 0) {\n        return { success: false, filterDescription: \"\" };\n    }\n    // assemble list of filter descriptions\n    const filterDescriptionsList = [];\n    for (const nlqInfo of nlqInfos) {\n        if (!nlqInfo.filter.natural_language) {\n            continue;\n        }\n        if (nlqInfos.length > 1) {\n            const dataSource = sina.getDataSource(nlqInfo.Name);\n            filterDescriptionsList.push(\n                getText(\"nlqDataSourceAndFilterDescription\", [\n                    dataSource ? dataSource.label : nlqInfo.Name,\n                    nlqInfo.filter.natural_language,\n                ])\n            );\n        } else {\n            filterDescriptionsList.push(nlqInfo.filter.natural_language);\n        }\n    }\n    // assemble filter description form filter descriptions list\n    let filterDescription = \"\";\n    if (filterDescriptionsList.length > 0) {\n        filterDescription = \"<code>\" + filterDescriptionsList.join(\"<br/>\") + \"</code>\";\n    }\n    // return nlq result\n    return {\n        success: true,\n        filterDescription: filterDescription,\n    };\n}\n"],"mappings":";;;;;AAAAA,IAAAC,GAAAC,OAAA,6BAAAC,GAAA,mBAQSC,EAAOD,EAAA,WAET,SAASE,EACZC,EACAC,GAGA,IAAKA,EAAU,CACX,MAAO,CAAEC,QAAS,MAAOC,kBAAmB,GAChD,CAEAF,EAAWA,EAASG,OAAQC,GAAYA,EAAQC,IAChD,GAAIL,EAASM,SAAW,EAAG,CACvB,MAAO,CAAEL,QAAS,MAAOC,kBAAmB,GAChD,CAEA,MAAMK,EAAyB,GAC/B,IAAK,MAAMH,KAAWJ,EAAU,CAC5B,IAAKI,EAAQD,OAAOK,iBAAkB,CAClC,QACJ,CACA,GAAIR,EAASM,OAAS,EAAG,CACrB,MAAMG,EAAaV,EAAKW,cAAcN,EAAQO,MAC9CJ,EAAuBK,KACnBf,EAAQ,oCAAqC,CACzCY,EAAaA,EAAWI,MAAQT,EAAQO,KACxCP,EAAQD,OAAOK,mBAG3B,KAAO,CACHD,EAAuBK,KAAKR,EAAQD,OAAOK,iBAC/C,CACJ,CAEA,IAAIN,EAAoB,GACxB,GAAIK,EAAuBD,OAAS,EAAG,CACnCJ,EAAoB,SAAWK,EAAuBO,KAAK,SAAW,SAC1E,CAEA,MAAO,CACHb,QAAS,KACTC,kBAAmBA,EAE3B,CAAC,IAAAa,EAAA,CAAAC,WAAA,MAAAD,EAAAjB,eAAA,OAAAiB,CAAA","ignoreList":[]}