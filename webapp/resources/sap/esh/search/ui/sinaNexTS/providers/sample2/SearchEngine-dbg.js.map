{"version":3,"file":"SearchEngine-dbg.js","names":["sap","ui","define","____sina_SearchQuery","___DataSourceService","____sina_FacetType","____sina_SuggestionType","___RecordService","___FacetService","___Util","____sina_ComparisonOperator","____sina_LogicalOperator","SearchQuery","DataSourceService","FacetType","SuggestionType","RecordService","FacetService","getMatchedStringValues","formatHighlightedValue","isValuePairMatched","isStarString","ComparisonOperator","LogicalOperator","SearchEngine","dataSourceService","recordService","facetService","historySearchTerms","sina","dataSourceIds","constructor","initAsync","loadData","loadDataSources","loadRecords","search","query","filter","searchTerm","includes","push","response","getResponse","createSinaSearchResultSet","searchResultSetItems","record","resultsToDisplay","createSinaSearchResultSetItem","facets","createSinaFacets","_createSearchResultSet","title","items","totalCount","attributes","titleAttributes","detailAttributes","attributesMetadata","getDataSourceById","dataSourceId","forEach","attributeMetadata","resultSetItemAttribute","createSinaSearchResultSetItemSingleAttribute","undefined","metadata","usage","defaultNavigationTarget","createSinaNavigationTarget","searchResultSetItem","_createSearchResultSetItem","dataSource","getDataSource","navigationTargets","_private","allAttributesMap","reduce","map","attr","id","itemPostParser","_createItemPostParser","postParseResultSetItem","singleAttributeMetadata","sValue","valueMap","stringValue","rValue","rawValue","isHighlighted","Co","attribute","_createSearchResultSetItemAttribute","label","value","valueFormatted","valueHighlighted","groups","ds","template","targetUrl","urlPrefix","urlSuffix","replace","match","attributeId","createNavigationTarget","text","target","facetsSina","createFacetsByDataSourceId","results","i","length","facet","type","DataSource","createSinaDataSourceFacet","DataSourceType","Category","UserCategory","createSinaChartFacet","Promise","all","dataSourceQuery","createDataSourceQuery","clone","item","rawValueLow","createDataSource","description","_createDataSourceResultSetItem","dimensionValueFormatted","labelPlural","measureValue","count","measureValueFormatted","toString","resultSet","_createDataSourceResultSet","facetTotalCount","_setResultSet","resolve","getAttributeMetadata","chartQuery","setDataSource","setRootCondition","rootCondition","createChartQuery","dimension","_createChartResultSet","createSinaChartResultSetItems","chart","facetSet","createAttributeFacetSet","top","rawValueHigh","conditions","createSimpleCondition","operator","Ge","Le","_createChartResultSetItem","filterCondition","createComplexCondition","attributeLabel","valueLabel","And","stringValueLow","Eq","suggestion","suggestions","types","createSinaDataSourceSuggestions","SearchTerm","createSinaSearchTermSuggestions","Object","createSinaObjectSuggestions","_createSuggestionResultSet","_createDataSourceSuggestion","calculationMode","SuggestionCalculationMode","Data","_createSearchTermSuggestion","stringValues","childSuggestions","_createSearchTermAndDataSourceSuggestion","History","_createObjectSuggestion","object","__exports","__esModule"],"sources":["SearchEngine.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\nimport { Sina } from \"../../sina/Sina\";\nimport { Query } from \"../../sina/Query\";\nimport { SearchQuery } from \"../../sina/SearchQuery\";\nimport { SearchResultSet } from \"../../sina/SearchResultSet\";\nimport { SearchResultSetItem } from \"../../sina/SearchResultSetItem\";\nimport { DataSourceService, DataSourceResponse } from \"./DataSourceService\";\nimport { DataSourceResultSet } from \"../../sina/DataSourceResultSet\";\nimport { ChartQuery } from \"../../sina/ChartQuery\";\nimport { ChartResultSet } from \"../../sina/ChartResultSet\";\nimport { FacetType } from \"../../sina/FacetType\";\nimport { SuggestionQuery } from \"../../sina/SuggestionQuery\";\nimport { SuggestionType } from \"../../sina/SuggestionType\";\nimport { SuggestionResultSet } from \"../../sina/SuggestionResultSet\";\nimport { Suggestion } from \"../../sina/Suggestion\";\nimport { RecordService, RecordResponse, Record } from \"./RecordService\";\nimport { Facet, FacetService } from \"./FacetService\";\nimport { getMatchedStringValues, formatHighlightedValue, isValuePairMatched, isStarString } from \"./Util\";\nimport { ComparisonOperator } from \"../../sina/ComparisonOperator\";\nimport { ChartResultSetItem } from \"../../sina/ChartResultSetItem\";\nimport { ResultSet } from \"../../sina/ResultSet\";\nimport { SearchResultSetItemAttribute } from \"../../sina/SearchResultSetItemAttribute\";\nimport { AttributeMetadata } from \"../../sina/AttributeMetadata\";\nimport { AttributeGroupMetadata } from \"../../sina/AttributeGroupMetadata\";\nimport { SimpleCondition } from \"../../sina/SimpleCondition\";\nimport { LogicalOperator } from \"../../sina/LogicalOperator\";\nimport { ComplexCondition } from \"../../sina/ComplexCondition\";\nimport { NavigationTarget } from \"../../sina/NavigationTarget\";\n\nexport class SearchEngine {\n    dataSourceService: DataSourceService;\n    recordService: RecordService;\n    facetService: FacetService;\n    historySearchTerms: string[] = [];\n    sina: Sina;\n    readonly dataSourceIds: string[];\n\n    constructor(sina: Sina, dataSourceIds: string[]) {\n        this.sina = sina;\n        this.dataSourceIds = dataSourceIds;\n        // typically in constructor sina is undefined, so initialize it in initAsync\n    }\n\n    async initAsync(sina?: Sina): Promise<void> {\n        this.sina = sina ?? this.sina;\n        this.dataSourceService = new DataSourceService(this.sina, this.dataSourceIds);\n        this.recordService = new RecordService(this.sina, this.dataSourceIds);\n        this.facetService = new FacetService(this.sina, this.dataSourceIds, this);\n\n        await this.loadData();\n    }\n\n    async loadData(): Promise<void> {\n        await this.dataSourceService.loadDataSources();\n        await this.recordService.loadRecords();\n    }\n\n    async search(query: SearchQuery): Promise<SearchResultSet> {\n        await this.recordService.loadRecords();\n\n        // in memory search term history\n        if (\n            !isStarString(query.filter.searchTerm) &&\n            !this.historySearchTerms.includes(query.filter.searchTerm)\n        ) {\n            this.historySearchTerms.push(query.filter.searchTerm);\n        }\n\n        const response = this.recordService.getResponse(query);\n        return await this.createSinaSearchResultSet(query, response);\n    }\n\n    private async createSinaSearchResultSet(\n        query: SearchQuery,\n        response: RecordResponse\n    ): Promise<SearchResultSet> {\n        const searchResultSetItems = [];\n        for (const record of response.resultsToDisplay) {\n            searchResultSetItems.push(await this.createSinaSearchResultSetItem(query, record));\n        }\n\n        const facets = await this.createSinaFacets(query, response);\n\n        return this.sina._createSearchResultSet({\n            query: query,\n            title: \"Search Results\",\n            items: searchResultSetItems,\n            facets: facets,\n            totalCount: response.totalCount,\n        });\n    }\n\n    private async createSinaSearchResultSetItem(\n        query: SearchQuery | SuggestionQuery,\n        record: Record\n    ): Promise<SearchResultSetItem> {\n        const attributes = [];\n        const titleAttributes = [];\n        const detailAttributes = [];\n\n        // single attributes\n        const attributesMetadata = this.dataSourceService.getDataSourceById(\n            record.dataSourceId\n        ).attributesMetadata;\n\n        attributesMetadata.forEach((attributeMetadata) => {\n            const resultSetItemAttribute = this.createSinaSearchResultSetItemSingleAttribute(\n                attributeMetadata as AttributeMetadata,\n                record,\n                query\n            );\n\n            if (resultSetItemAttribute !== undefined) {\n                attributes.push(resultSetItemAttribute);\n\n                if (\"Title\" in resultSetItemAttribute.metadata.usage) {\n                    titleAttributes.push(resultSetItemAttribute);\n                }\n                if (\"Detail\" in resultSetItemAttribute.metadata.usage) {\n                    detailAttributes.push(resultSetItemAttribute);\n                }\n            }\n        });\n\n        // group attributes -> postParseResultSetItem()\n\n        // navigation target\n        const defaultNavigationTarget = this.createSinaNavigationTarget(record);\n\n        const searchResultSetItem = this.sina._createSearchResultSetItem({\n            dataSource: this.sina.getDataSource(record.dataSourceId),\n            attributes: attributes,\n            titleAttributes: titleAttributes,\n            detailAttributes: detailAttributes,\n            defaultNavigationTarget: defaultNavigationTarget,\n            navigationTargets: [],\n        });\n\n        searchResultSetItem._private.allAttributesMap = attributes.reduce((map, attr) => {\n            map[attr.id] = attr;\n            return map;\n        }, {}); // needed for postParseResultSetItem\n\n        const itemPostParser = this.sina._createItemPostParser({\n            searchResultSetItem: searchResultSetItem,\n        });\n\n        return await itemPostParser.postParseResultSetItem();\n    }\n\n    private createSinaSearchResultSetItemSingleAttribute(\n        singleAttributeMetadata: AttributeMetadata,\n        record: Record,\n        query: Query\n    ): SearchResultSetItemAttribute {\n        const sValue = record.valueMap[singleAttributeMetadata.id]?.stringValue;\n        const rValue = record.valueMap[singleAttributeMetadata.id]?.rawValue;\n\n        if (sValue === undefined) {\n            return undefined;\n        }\n\n        const isHighlighted = isValuePairMatched(sValue, query.filter.searchTerm, ComparisonOperator.Co);\n\n        const attribute = this.sina._createSearchResultSetItemAttribute({\n            id: singleAttributeMetadata.id,\n            label: singleAttributeMetadata.label,\n            metadata: singleAttributeMetadata,\n            value: rValue,\n            valueFormatted: sValue,\n            valueHighlighted: isHighlighted\n                ? formatHighlightedValue(sValue, query.filter.searchTerm)\n                : undefined,\n            isHighlighted: isHighlighted,\n            groups: [],\n        });\n\n        return attribute;\n    }\n\n    private createSinaNavigationTarget(record: Record): NavigationTarget {\n        const ds = this.dataSourceService.getDataSourceById(record.dataSourceId);\n        const template = ds.defaultNavigationTarget?.targetUrl || \"\";\n        const urlPrefix = \"https://sap.com?\";\n        const urlSuffix = template.replace(\n            /{([^}]+)}/g,\n            (match, attributeId) => record.valueMap[attributeId]?.stringValue || \"\"\n        ); // replace {AttributeId} by record attribute stringValue\n\n        return this.sina.createNavigationTarget({\n            text: ds.defaultNavigationTarget?.text,\n            targetUrl: urlPrefix + urlSuffix,\n            target: ds.defaultNavigationTarget?.target || \"_self\",\n        });\n    }\n\n    private async createSinaFacets(\n        query: SearchQuery,\n        response: RecordResponse\n    ): Promise<(DataSourceResultSet | ChartResultSet)[]> {\n        const facetsSina = [];\n        const facets = this.facetService.createFacetsByDataSourceId(\n            query.filter.dataSource.id,\n            response.results\n        )?.facets;\n\n        if (!facets) {\n            return [];\n        }\n\n        for (let i = 0; i < facets.length; i++) {\n            const facet = facets[i] as Facet;\n            if (facet.type === FacetType.DataSource) {\n                facetsSina.push(this.createSinaDataSourceFacet(query, facet));\n            } else {\n                if (\n                    query.filter.dataSource.type === query.sina.DataSourceType.Category || // ignore common attributes facets\n                    query.filter.dataSource.type === query.sina.DataSourceType.UserCategory // ignore attributes facets\n                ) {\n                    continue;\n                }\n                facetsSina.push(this.createSinaChartFacet(query, facet));\n            }\n        }\n        return Promise.all(facetsSina);\n    }\n\n    private async createSinaDataSourceFacet(query: SearchQuery, facet: Facet): Promise<DataSourceResultSet> {\n        const dataSourceQuery = this.sina.createDataSourceQuery({\n            dataSource: query.filter.dataSource,\n            filter: query.filter.clone(),\n            // nlq: query.nlq,\n        });\n        const items = [];\n\n        for (let i = 0; i < facet.items.length; i++) {\n            const item = facet.items[i];\n            // create filter (used when clicking on the item)\n            let dataSource = this.sina.getDataSource(item.rawValueLow as string);\n            if (!dataSource) {\n                dataSource = this.sina.createDataSource({\n                    type: this.sina.DataSourceType.Category,\n                    id: item.rawValueLow as string,\n                    label: item.description,\n                });\n            }\n\n            items.push(\n                this.sina._createDataSourceResultSetItem({\n                    dataSource: dataSource,\n                    dimensionValueFormatted: dataSource.labelPlural,\n                    measureValue: item.count,\n                    measureValueFormatted: item.count.toString(),\n                })\n            );\n        }\n\n        const resultSet = this.sina._createDataSourceResultSet({\n            title: query.filter.dataSource.label,\n            items: items,\n            query: dataSourceQuery,\n            facetTotalCount: undefined,\n        });\n\n        // init query with result set\n        if (query instanceof SearchQuery) {\n            dataSourceQuery._setResultSet(resultSet);\n        }\n\n        return Promise.resolve(resultSet);\n    }\n\n    private createSinaChartFacet(\n        query: SearchQuery | ChartQuery,\n        facet: Facet\n    ): Promise<ChartResultSet | ResultSet> {\n        const dataSource = this.sina.getDataSource(query.filter.dataSource.id);\n        const attributeId = facet.id;\n        const metadata = dataSource.getAttributeMetadata(attributeId) as\n            | AttributeMetadata\n            | AttributeGroupMetadata;\n\n        let chartQuery = query;\n        if (query instanceof SearchQuery) {\n            const filter = query.filter.clone();\n            filter.setDataSource(dataSource); // relevant only for common attribute facets\n            filter.setRootCondition(query.filter.rootCondition.clone() as ComplexCondition); // changing ds removes condition\n            chartQuery = this.sina.createChartQuery({\n                filter: filter,\n                dimension: facet.id,\n                // nlq: query.nlq,\n            });\n        }\n\n        const resultSet = this.sina._createChartResultSet({\n            title: metadata.label,\n            items: this.createSinaChartResultSetItems(query, facet),\n            query: chartQuery,\n            facetTotalCount: 99999, // ToDo: Fill with total count of all facet items -> see getDataForPieChart of SearchFacetPieChart.ts\n        });\n\n        // init query with result set\n        if (query instanceof SearchQuery) {\n            return chartQuery._setResultSet(resultSet);\n        }\n\n        return Promise.resolve(resultSet);\n    }\n\n    async chart(query: ChartQuery): Promise<ChartResultSet> {\n        await this.recordService.loadRecords();\n\n        const dataSource = this.sina.getDataSource(query.filter.dataSource.id);\n        const attributeId = query.dimension;\n        const metadata = dataSource.getAttributeMetadata(attributeId) as AttributeMetadata;\n        const response = this.recordService.getResponse(query);\n        const facetSet = this.facetService.createAttributeFacetSet(response.results, [metadata], query.top);\n\n        if (facetSet && facetSet.facets.length > 0) {\n            return this.sina._createChartResultSet({\n                title: metadata.label,\n                items: this.createSinaChartResultSetItems(query, facetSet.facets[0] as Facet),\n                query: query,\n                facetTotalCount: 99999, // ToDo: Fill with total count of all facet items -> see getDataForPieChart of SearchFacetPieChart.ts\n            });\n        }\n    }\n\n    private createSinaChartResultSetItems(query: Query, facet: Facet): ChartResultSetItem[] {\n        // TODO:\n        // Search = \"Search\",\n        // Eq = \"Eq\",\n        // Ne = \"Ne\", // not equal\n        // Gt = \"Gt\",\n        // Lt = \"Lt\",\n        // Ge = \"Ge\",\n        // Le = \"Le\",\n        // Co = \"Co\", // Contains only\n        // Bw = \"Bw\",\n        // Ew = \"Ew\", // End with\n        // ChildOf = \"ChildOf\",\n        // DescendantOf = \"DescendantOf\",\n\n        const items = [];\n        for (let i = 0; i < facet.items.length; i++) {\n            const item = facet.items[i];\n            if (typeof item.rawValueHigh !== \"string\" && typeof item.rawValueLow !== \"string\") {\n                // range facet item\n                const conditions: SimpleCondition[] = [];\n                conditions.push(\n                    this.sina.createSimpleCondition({\n                        attribute: facet.id,\n                        operator: ComparisonOperator.Ge,\n                        value: item.rawValueLow,\n                        // isDynamicValue: isDynamicValueLow,\n                    })\n                );\n\n                conditions.push(\n                    this.sina.createSimpleCondition({\n                        attribute: facet.id,\n                        operator: ComparisonOperator.Le,\n                        value: item.rawValueHigh,\n                        // isDynamicValue: isDynamicValueHigh,\n                    })\n                );\n\n                items.push(\n                    this.sina._createChartResultSetItem({\n                        filterCondition: this.sina.createComplexCondition({\n                            attributeLabel: facet.label,\n                            valueLabel: item.description,\n                            operator: LogicalOperator.And,\n                            conditions: conditions,\n                        }),\n                        dimensionValueFormatted: item.description,\n                        measureValue: item.count,\n                        measureValueFormatted: item.stringValueLow,\n                    })\n                );\n            } else {\n                //single value facet item\n                items.push(\n                    this.sina._createChartResultSetItem({\n                        filterCondition: this.sina.createSimpleCondition({\n                            attributeLabel: facet.label,\n                            attribute: facet.id,\n                            operator: ComparisonOperator.Eq,\n                            value: item.rawValueLow,\n                            valueLabel: item.description,\n                            // value: isDynamicValue ? item.rawValueLow : typeConverter.odata2Sina(metadata.type, item.rawValueLow),\n                            // isDynamicValue: isDynamicValue,\n                        }),\n                        dimensionValueFormatted: item.description,\n                        measureValue: item.count,\n                        measureValueFormatted: item.stringValueLow,\n                    })\n                );\n            }\n        }\n\n        return items;\n    }\n\n    async suggestion(query: SuggestionQuery): Promise<SuggestionResultSet> {\n        await this.recordService.loadRecords();\n\n        let response: DataSourceResponse | RecordResponse;\n        let suggestions = [];\n\n        switch (query.types[0]) {\n            case SuggestionType.DataSource:\n                response = this.dataSourceService.getResponse(query) as DataSourceResponse;\n                suggestions = await this.createSinaDataSourceSuggestions(query, response);\n                break;\n            case SuggestionType.SearchTerm:\n                response = this.recordService.getResponse(query) as RecordResponse;\n                suggestions = await this.createSinaSearchTermSuggestions(query, response);\n                break;\n            case SuggestionType.Object:\n                response = this.recordService.getResponse(query) as RecordResponse;\n                suggestions = await this.createSinaObjectSuggestions(query, response);\n                break;\n            default:\n            // SuggestionType.SearchTermAI // not implemented\n            // SearchTermAndDataSource // check back-end supporting\n            // App Suggestions // create app suggestions without searchableContent service\n        }\n        return this.sina._createSuggestionResultSet({\n            title: \"Suggestions\",\n            query: query,\n            items: suggestions,\n        });\n    }\n\n    private async createSinaDataSourceSuggestions(\n        query: SuggestionQuery,\n        response: DataSourceResponse\n    ): Promise<Suggestion[]> {\n        const suggestions = [];\n        response.results.map((dataSource) => {\n            suggestions.push(\n                this.sina._createDataSourceSuggestion({\n                    calculationMode: this.sina.SuggestionCalculationMode.Data,\n                    dataSource: dataSource,\n                    label: formatHighlightedValue(\n                        dataSource.labelPlural || dataSource.label,\n                        query.filter.searchTerm\n                    ),\n                })\n            );\n        });\n        return suggestions;\n    }\n\n    private async createSinaSearchTermSuggestions(\n        query: SuggestionQuery,\n        response: RecordResponse\n    ): Promise<Suggestion[]> {\n        const suggestions = [];\n        response.resultsToDisplay.forEach((record) => {\n            const filter = query.filter.clone();\n            const dataSource = this.sina.getDataSource(record.dataSourceId);\n            filter.setDataSource(dataSource);\n\n            suggestions.push(\n                this.sina._createSearchTermSuggestion({\n                    calculationMode: this.sina.SuggestionCalculationMode.Data,\n                    searchTerm: getMatchedStringValues(record.stringValues, query.filter.searchTerm)[0],\n                    filter: query.filter,\n                    label: formatHighlightedValue(\n                        getMatchedStringValues(record.stringValues, query.filter.searchTerm)[0],\n                        query.filter.searchTerm\n                    ),\n                    childSuggestions: [\n                        this.sina._createSearchTermAndDataSourceSuggestion({\n                            calculationMode: this.sina.SuggestionCalculationMode.Data,\n                            searchTerm: getMatchedStringValues(\n                                record.stringValues,\n                                query.filter.searchTerm\n                            )[0],\n                            filter,\n                            dataSource,\n                            label: formatHighlightedValue(\n                                getMatchedStringValues(record.stringValues, query.filter.searchTerm)[0],\n                                query.filter.searchTerm\n                            ),\n                        }),\n                    ],\n                })\n            );\n        });\n\n        // History Search Term Suggestions\n        if (!isStarString(query.filter.searchTerm)) {\n            getMatchedStringValues(this.historySearchTerms, query.filter.searchTerm).forEach((searchTerm) => {\n                suggestions.push(\n                    this.sina._createSearchTermSuggestion({\n                        calculationMode: this.sina.SuggestionCalculationMode.History,\n                        searchTerm: searchTerm,\n                        filter: query.filter,\n                        label: formatHighlightedValue(searchTerm, query.filter.searchTerm),\n                    })\n                );\n            });\n        }\n        return suggestions;\n    }\n\n    private async createSinaObjectSuggestions(\n        query: SuggestionQuery,\n        response: RecordResponse\n    ): Promise<Suggestion[]> {\n        const suggestions = [];\n        for (const record of response.resultsToDisplay) {\n            suggestions.push(\n                this.sina._createObjectSuggestion({\n                    calculationMode: this.sina.SuggestionCalculationMode.Data,\n                    label: \"\", // ?\n                    // searchTerm: filter.searchTerm,\n                    // filter: filter,\n                    object: await this.createSinaSearchResultSetItem(query, record),\n                })\n            );\n        }\n        return suggestions;\n    }\n}\n"],"mappings":"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","ignoreList":[]}