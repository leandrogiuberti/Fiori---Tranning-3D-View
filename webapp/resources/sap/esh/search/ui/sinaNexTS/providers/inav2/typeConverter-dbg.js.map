{"version":3,"file":"typeConverter-dbg.js","names":["sap","ui","define","sinaUtil","____sina_AttributeType","____sina_ComparisonOperator","____core_errors","AttributeType","ComparisonOperator","DateConversionError","NotImplementedError","TimeConversionError","UnknownAttributeTypeError","sina2Ina","attributeType","value","context","Double","toString","Integer","String","sina2InaString","ImageUrl","ImageBlob","GeoJson","Date","sina2InaDate","Time","sina2InaTime","Timestamp","sina2InaTimestamp","ina2Sina","parseFloat","parseInt","ina2SinaDate","ina2SinaTime","ina2SinaTimestamp","trim","year","month","day","hour","minute","seconds","microseconds","indexOf","slice","d","UTC","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","result","addLeadingZeros","length","operator","Lt","Le","convertOperator2Wildcards","__exports","__esModule"],"sources":["typeConverter.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\nimport * as sinaUtil from \"../../sina/util\";\nimport { AttributeType } from \"../../sina/AttributeType\";\nimport { ComparisonOperator } from \"../../sina/ComparisonOperator\";\nimport {\n    DateConversionError,\n    NotImplementedError,\n    TimeConversionError,\n    UnknownAttributeTypeError,\n} from \"../../core/errors\";\nimport { Value } from \"../../sina/types\";\n\nexport function sina2Ina(attributeType: AttributeType, value: Value, context?: unknown): string {\n    context = context || {};\n    switch (attributeType) {\n        case AttributeType.Double:\n            return value.toString();\n        case AttributeType.Integer:\n            return value.toString();\n        case AttributeType.String:\n            return this.sina2InaString(value, context);\n        case AttributeType.ImageUrl:\n            return value as string;\n        case AttributeType.ImageBlob:\n            throw new NotImplementedError();\n        case AttributeType.GeoJson:\n            return value as string;\n        case AttributeType.Date:\n            return this.sina2InaDate(value, context);\n        case AttributeType.Time:\n            return this.sina2InaTime(value);\n        case AttributeType.Timestamp:\n            return this.sina2InaTimestamp(value);\n        default:\n            throw new UnknownAttributeTypeError(attributeType);\n    }\n}\n\nexport function ina2Sina(attributeType: AttributeType, value: string) {\n    // TODO: actually the return type is Value but it leads to a lot of type issues\n    switch (attributeType) {\n        case AttributeType.Double:\n            return parseFloat(value);\n        case AttributeType.Integer:\n            return parseInt(value, 10);\n        case AttributeType.String:\n            return value;\n        case AttributeType.ImageUrl:\n            return value;\n        case AttributeType.ImageBlob:\n            throw new NotImplementedError();\n        case AttributeType.GeoJson:\n            return value;\n        case AttributeType.Date:\n            return this.ina2SinaDate(value);\n        case AttributeType.Time:\n            return this.ina2SinaTime(value);\n        case AttributeType.Timestamp:\n            return this.ina2SinaTimestamp(value);\n        default:\n            throw new UnknownAttributeTypeError(attributeType);\n    }\n}\n\nexport function ina2SinaTimestamp(value): Date {\n    value = value.trim();\n\n    let year, month, day, hour, minute, seconds, microseconds;\n    if (value.indexOf(\"-\") >= 0) {\n        // ina:2017-01-01 00:00:00.0000000\n        // sina: Date object\n        year = parseInt(value.slice(0, 4), 10);\n        month = parseInt(value.slice(5, 7), 10);\n        day = parseInt(value.slice(8, 10), 10);\n        hour = parseInt(value.slice(11, 13), 10);\n        minute = parseInt(value.slice(14, 16), 10);\n        seconds = parseInt(value.slice(17, 19), 10);\n        microseconds = parseInt(value.slice(20, 20 + 6), 10);\n    } else {\n        // ina:20170201105936.0000000\n        // sina: Date object\n        year = parseInt(value.slice(0, 4), 10);\n        month = parseInt(value.slice(4, 6), 10);\n        day = parseInt(value.slice(6, 8), 10);\n        hour = parseInt(value.slice(8, 10), 10);\n        minute = parseInt(value.slice(10, 12), 10);\n        seconds = parseInt(value.slice(12, 14), 10);\n        microseconds = parseInt(value.slice(15, 15 + 6), 10);\n    }\n\n    const d = new Date(Date.UTC(year, month - 1, day, hour, minute, seconds, microseconds / 1000));\n    return d;\n}\n\nexport function sina2InaTimestamp(value): string {\n    // ina:2017-01-01 00:00:00.0000000\n    // sina: Date object\n    const year = value.getUTCFullYear();\n    const month = value.getUTCMonth() + 1;\n    const day = value.getUTCDate();\n    const hour = value.getUTCHours();\n    const minute = value.getUTCMinutes();\n    const seconds = value.getUTCSeconds();\n    const microseconds = value.getUTCMilliseconds() * 1000;\n\n    const result =\n        this.addLeadingZeros(year.toString(), 4) +\n        \"-\" +\n        this.addLeadingZeros(month.toString(), 2) +\n        \"-\" +\n        this.addLeadingZeros(day.toString(), 2) +\n        \" \" +\n        this.addLeadingZeros(hour.toString(), 2) +\n        \":\" +\n        this.addLeadingZeros(minute.toString(), 2) +\n        \":\" +\n        this.addLeadingZeros(seconds.toString(), 2) +\n        \".\" +\n        this.addLeadingZeros(microseconds.toString(), 6);\n\n    return result;\n}\n\nexport function ina2SinaTime(value): string {\n    value = value.trim();\n    if (value.length === 6) {\n        // conversion for result list\n        // ina: hhmmss\n        // sina: hh:mm:ss\n        return value.slice(0, 2) + \":\" + value.slice(2, 4) + \":\" + value.slice(4, 6);\n    }\n    if (value.length === 8) {\n        // conversion for facet item\n        // ina: hh:mm:ss\n        // sina: hh:mm:ss\n        return value.slice(0, 2) + \":\" + value.slice(3, 5) + \":\" + value.slice(6, 8);\n    }\n    throw new TimeConversionError(value);\n}\n\nexport function sina2InaTime(value): string {\n    // conversion for filter condition\n    // ina: hhmmss\n    // sina: hh:mm:ss\n    return value.slice(0, 2) + \":\" + value.slice(3, 5) + \":\" + value.slice(6, 8);\n}\n\nexport function ina2SinaDate(value): string {\n    value = value.trim();\n    if (value.length === 8) {\n        // conversion for result list\n        // ina: YYYYMMDD\n        // sina: YYYY/MM/DD\n        return value.slice(0, 4) + \"/\" + value.slice(4, 6) + \"/\" + value.slice(6, 8);\n    }\n    if (value.length === 27) {\n        // conversion for facet item\n        // ina: YYYY-MM-DD HH:MM:SS.SSSSSSS\n        // sina: YYYY/MM/DD\n        return value.slice(0, 4) + \"/\" + value.slice(5, 7) + \"/\" + value.slice(8, 10);\n    }\n    throw new DateConversionError(value);\n}\n\nexport function sina2InaDate(value, context): string {\n    // conversion for filter condition\n    // ina: YYYY-MM-DD HH:MM:SS.SSSSSSS\n    // sina: YYYY/MM/DD\n    let result = value.slice(0, 4) + \"-\" + value.slice(5, 7) + \"-\" + value.slice(8, 10);\n    if (context.operator === ComparisonOperator.Lt || context.operator === ComparisonOperator.Le) {\n        result += \" 23:59:59.0000000\";\n    } else {\n        result += \" 00:00:00.0000000\";\n    }\n    return result;\n}\n\nexport function sina2InaString(value: string, context): string {\n    return sinaUtil.convertOperator2Wildcards(value, context.operator);\n}\n\nexport function addLeadingZeros(value: string, length: int): string {\n    return \"00000000000000\".slice(0, length - value.length) + value;\n}\n"],"mappings":"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","ignoreList":[]}