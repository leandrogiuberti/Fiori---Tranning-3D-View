{"version":3,"file":"suggestionParser.js","names":["sap","ui","define","____sina_SuggestionCalculationMode","____sina_SuggestionType","____core_errors","SuggestionCalculationMode","SuggestionType","InternalSinaError","SuggestionParser","provider","sina","constructor","this","parse","query","data","suggestions","suggestion","cell","i","length","parseSearchTermSuggestion","push","parseDataSourceSuggestion","calculationMode","Data","dataSource","getDataSource","FromDataSource","filter","clone","setDataSource","_createDataSourceSuggestion","label","SearchTermsHighlighted","setSearchTerm","term","types","indexOf","SearchTermAI","message","_createSearchTermAISuggestion","searchTerm","highlighted","_createSearchTermSuggestion","parseSearchTermAndDataSourceSuggestion","parseCalculationMode","Type","SearchTerms","_createSearchTermAndDataSourceSuggestion","parseObjectSuggestions","searchItems","objectSuggestions","object","fillValueHighlighted","title","titleAttributes","map","attribute","valueFormatted","join","oObjectSuggestion","_createObjectSuggestion","doFillValueHighlighted","attributes","valueHighlighted","startsWith","detailAttributes","scope","History","__exports","__esModule"],"sources":["suggestionParser.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\nimport { HANAOdataSuggestionResponseResult, Provider } from \"./Provider\";\nimport { Sina } from \"../../sina/Sina\";\nimport { SuggestionQuery } from \"../../sina/SuggestionQuery\";\nimport { SearchTermSuggestion } from \"../../sina/SearchTermSuggestion\";\nimport { DataSourceSuggestion } from \"../../sina/DataSourceSuggestion\";\nimport { SearchTermAndDataSourceSuggestion } from \"../../sina/SearchTermAndDataSourceSuggestion\";\nimport { SuggestionCalculationMode } from \"../../sina/SuggestionCalculationMode\";\nimport { ObjectSuggestion } from \"../../sina/ObjectSuggestion\";\nimport { SuggestionType } from \"../../sina/SuggestionType\";\nimport { InternalSinaError } from \"../../core/errors\";\n\nexport class SuggestionParser {\n    provider: Provider;\n    sina: Sina;\n\n    constructor(provider: Provider) {\n        this.provider = provider;\n        this.sina = provider.sina;\n    }\n\n    parse(\n        query: SuggestionQuery,\n        data: Array<HANAOdataSuggestionResponseResult>\n    ): Array<SearchTermSuggestion> {\n        const suggestions = [];\n        let suggestion;\n        // var parentSuggestion;\n        // var parentSuggestions = [];\n        // var suggestionSearchTerms = [];\n        let cell;\n        // var parentCell;\n        // var calculationMode;\n\n        for (let i = 0; i < data.length; i++) {\n            suggestion = null;\n            cell = data[i];\n            // calculationMode = this.parseCalculationMode(cell.Type);\n            //\n            // switch (cell.Type) {\n            // case 'H':\n            //     suggestion = this.parseSearchTermSuggestion(query, cell);\n            //     break;\n            // case 'A':\n            //     suggestion = this.parseSearchTermAndDataSourceSuggestion(query, cell);\n            //     // attach type and cell information\n            //     suggestion.type = 'A';\n            //     suggestion.cell = cell;\n            //     break;\n            // case 'M':\n            //     suggestion = this.parseDataSourceSuggestion(query, cell);\n            //     break;\n            // }\n\n            suggestion = this.parseSearchTermSuggestion(query, cell);\n\n            // if (suggestion) {\n            //     if (suggestion.type === 'A') {\n            //         // set parent sugestion\n            //         if (parentSuggestions[suggestion.searchTerm] === undefined) {\n            //             parentCell = this._getParentCell(suggestion.cell);\n            //             parentSuggestion = this.parseSearchTermSuggestion(query, parentCell);\n            //             parentSuggestions[suggestion.searchTerm] = parentSuggestion;\n            //         }\n            //         // remove type and cell information\n            //         delete suggestion.type;\n            //         delete suggestion.cell;\n            //         // attach children\n            //         parentSuggestions[suggestion.searchTerm].childSuggestions.push(suggestion);\n            //     } else {\n            //         // push non-attribute suggestion\n            //         suggestions.push(suggestion);\n            //     }\n            // }\n            if (suggestion) {\n                suggestions.push(suggestion);\n            }\n        }\n\n        // push attribute suggestion\n        // Object.keys(parentSuggestions).forEach(function (key) {\n        //     suggestions.push(parentSuggestions[key]);\n        // });\n\n        return suggestions;\n    }\n\n    private parseDataSourceSuggestion(\n        query: SuggestionQuery,\n        cell: {\n            FromDataSource: string; // id\n            SearchTermsHighlighted: string;\n        }\n    ): DataSourceSuggestion {\n        const calculationMode = this.sina.SuggestionCalculationMode.Data; // always data suggestion\n        const dataSource = this.sina.getDataSource(cell.FromDataSource);\n        if (!dataSource) {\n            return null;\n        }\n        const filter = query.filter.clone();\n        filter.setDataSource(dataSource);\n        return this.sina._createDataSourceSuggestion({\n            calculationMode: calculationMode,\n            dataSource: dataSource,\n            label: cell.SearchTermsHighlighted,\n        });\n    }\n\n    private parseSearchTermSuggestion(\n        query: SuggestionQuery,\n        cell: {\n            term: string;\n            highlighted: string;\n        }\n    ): SearchTermSuggestion {\n        const filter = query.filter.clone();\n        filter.setSearchTerm(cell.term);\n        if (query.types.indexOf(SuggestionType.SearchTermAI) >= 0) {\n            if (query.types.length > 1) {\n                throw new InternalSinaError({\n                    message: \"mix of ai suggestions with other suggestions not allowed\",\n                });\n            }\n            if (!cell.term) {\n                return null;\n            }\n            return this.sina._createSearchTermAISuggestion({\n                searchTerm: cell.term,\n                calculationMode: this.sina.SuggestionCalculationMode.Data,\n                filter: filter,\n                label: cell.highlighted || cell.term,\n            });\n        } else {\n            return this.sina._createSearchTermSuggestion({\n                searchTerm: cell.term,\n                calculationMode: this.sina.SuggestionCalculationMode.Data,\n                filter: filter,\n                label: cell.highlighted || cell.term,\n            });\n        }\n    }\n\n    private parseSearchTermAndDataSourceSuggestion(\n        query: SuggestionQuery,\n        cell: {\n            SearchTerms: string;\n            FromDataSource: string; // id\n            SearchTermsHighlighted: string;\n            Type: \"H\" | \"A\" | \"M\";\n        }\n    ): SearchTermAndDataSourceSuggestion {\n        const calculationMode = this.parseCalculationMode(cell.Type);\n        const filter = query.filter.clone();\n        filter.setSearchTerm(cell.SearchTerms);\n        const dataSource = this.sina.getDataSource(cell.FromDataSource);\n        if (!dataSource) {\n            return null;\n        }\n        filter.setDataSource(dataSource);\n        return this.sina._createSearchTermAndDataSourceSuggestion({\n            searchTerm: cell.SearchTerms,\n            dataSource: dataSource,\n            calculationMode: calculationMode,\n            filter: filter,\n            label: cell.SearchTermsHighlighted,\n        });\n    }\n\n    public parseObjectSuggestions(query: SuggestionQuery, searchItems): Array<ObjectSuggestion> {\n        // const filter = query.filter.clone();\n        const objectSuggestions: Array<ObjectSuggestion> = [];\n        // var objectSuggestions = searchItems.d.ObjectSuggestions.SearchResults.results;\n        for (let i = 0; i < searchItems.length; ++i) {\n            const object = searchItems[i];\n            // fill highlighted value: actually it would be better to call\n            // the search result set formatter like for a regular result\n            // set\n            this.fillValueHighlighted(object);\n            const title = object.titleAttributes\n                .map(function (attribute) {\n                    return attribute.valueFormatted || \"\";\n                })\n                .join(\" \");\n            const oObjectSuggestion = this.sina._createObjectSuggestion({\n                calculationMode: this.sina.SuggestionCalculationMode.Data,\n                label: title,\n                // searchTerm: filter.searchTerm,\n                // filter: filter,\n                object: object,\n            });\n            objectSuggestions.push(oObjectSuggestion);\n        }\n        return objectSuggestions;\n    }\n\n    private fillValueHighlighted(object) {\n        const doFillValueHighlighted = function (attributes) {\n            if (!attributes) {\n                return;\n            }\n            for (let i = 0; i < attributes.length; ++i) {\n                const attribute = attributes[i];\n                if (!attribute.valueHighlighted) {\n                    if (\n                        typeof attribute.valueFormatted === \"string\" &&\n                        attribute.valueFormatted.startsWith(\"sap-icon://\") === true\n                    ) {\n                        attribute.valueHighlighted = \"\";\n                    } else {\n                        attribute.valueHighlighted = attribute.valueFormatted;\n                    }\n                }\n            }\n        };\n        doFillValueHighlighted(object.detailAttributes);\n        doFillValueHighlighted(object.titleAttributes);\n    }\n\n    private parseCalculationMode(scope: \"H\" | \"A\" | \"M\"): SuggestionCalculationMode {\n        switch (scope) {\n            case \"H\":\n                return SuggestionCalculationMode.History;\n            case \"A\":\n            case \"M\":\n                return SuggestionCalculationMode.Data;\n        }\n    }\n}\n"],"mappings":";;;;;AAAAA,IAAAC,GAAAC,OAAA,kGAAAC,EAAAC,EAAAC,GAAA,mBAWSC,EAAyBH,EAAA,mCAEzBI,EAAcH,EAAA,wBACdI,EAAiBH,EAAA,qBAEnB,MAAMI,EACTC,SACAC,KAEAC,YAAYF,GACRG,KAAKH,SAAWA,EAChBG,KAAKF,KAAOD,EAASC,IACzB,CAEAG,MACIC,EACAC,GAEA,MAAMC,EAAc,GACpB,IAAIC,EAIJ,IAAIC,EAIJ,IAAK,IAAIC,EAAI,EAAGA,EAAIJ,EAAKK,OAAQD,IAAK,CAClCF,EAAa,KACbC,EAAOH,EAAKI,GAkBZF,EAAaL,KAAKS,0BAA0BP,EAAOI,GAoBnD,GAAID,EAAY,CACZD,EAAYM,KAAKL,EACrB,CACJ,CAOA,OAAOD,CACX,CAEQO,0BACJT,EACAI,GAKA,MAAMM,EAAkBZ,KAAKF,KAAKL,0BAA0BoB,KAC5D,MAAMC,EAAad,KAAKF,KAAKiB,cAAcT,EAAKU,gBAChD,IAAKF,EAAY,CACb,OAAO,IACX,CACA,MAAMG,EAASf,EAAMe,OAAOC,QAC5BD,EAAOE,cAAcL,GACrB,OAAOd,KAAKF,KAAKsB,4BAA4B,CACzCR,gBAAiBA,EACjBE,WAAYA,EACZO,MAAOf,EAAKgB,wBAEpB,CAEQb,0BACJP,EACAI,GAKA,MAAMW,EAASf,EAAMe,OAAOC,QAC5BD,EAAOM,cAAcjB,EAAKkB,MAC1B,GAAItB,EAAMuB,MAAMC,QAAQhC,EAAeiC,eAAiB,EAAG,CACvD,GAAIzB,EAAMuB,MAAMjB,OAAS,EAAG,CACxB,MAAM,IAAIb,EAAkB,CACxBiC,QAAS,4DAEjB,CACA,IAAKtB,EAAKkB,KAAM,CACZ,OAAO,IACX,CACA,OAAOxB,KAAKF,KAAK+B,8BAA8B,CAC3CC,WAAYxB,EAAKkB,KACjBZ,gBAAiBZ,KAAKF,KAAKL,0BAA0BoB,KACrDI,OAAQA,EACRI,MAAOf,EAAKyB,aAAezB,EAAKkB,MAExC,KAAO,CACH,OAAOxB,KAAKF,KAAKkC,4BAA4B,CACzCF,WAAYxB,EAAKkB,KACjBZ,gBAAiBZ,KAAKF,KAAKL,0BAA0BoB,KACrDI,OAAQA,EACRI,MAAOf,EAAKyB,aAAezB,EAAKkB,MAExC,CACJ,CAEQS,uCACJ/B,EACAI,GAOA,MAAMM,EAAkBZ,KAAKkC,qBAAqB5B,EAAK6B,MACvD,MAAMlB,EAASf,EAAMe,OAAOC,QAC5BD,EAAOM,cAAcjB,EAAK8B,aAC1B,MAAMtB,EAAad,KAAKF,KAAKiB,cAAcT,EAAKU,gBAChD,IAAKF,EAAY,CACb,OAAO,IACX,CACAG,EAAOE,cAAcL,GACrB,OAAOd,KAAKF,KAAKuC,yCAAyC,CACtDP,WAAYxB,EAAK8B,YACjBtB,WAAYA,EACZF,gBAAiBA,EACjBK,OAAQA,EACRI,MAAOf,EAAKgB,wBAEpB,CAEOgB,uBAAuBpC,EAAwBqC,GAElD,MAAMC,EAA6C,GAEnD,IAAK,IAAIjC,EAAI,EAAGA,EAAIgC,EAAY/B,SAAUD,EAAG,CACzC,MAAMkC,EAASF,EAAYhC,GAI3BP,KAAK0C,qBAAqBD,GAC1B,MAAME,EAAQF,EAAOG,gBAChBC,IAAI,SAAUC,GACX,OAAOA,EAAUC,gBAAkB,EACvC,GACCC,KAAK,KACV,MAAMC,EAAoBjD,KAAKF,KAAKoD,wBAAwB,CACxDtC,gBAAiBZ,KAAKF,KAAKL,0BAA0BoB,KACrDQ,MAAOsB,EAGPF,OAAQA,IAEZD,EAAkB9B,KAAKuC,EAC3B,CACA,OAAOT,CACX,CAEQE,qBAAqBD,GACzB,MAAMU,EAAyB,SAAUC,GACrC,IAAKA,EAAY,CACb,MACJ,CACA,IAAK,IAAI7C,EAAI,EAAGA,EAAI6C,EAAW5C,SAAUD,EAAG,CACxC,MAAMuC,EAAYM,EAAW7C,GAC7B,IAAKuC,EAAUO,iBAAkB,CAC7B,UACWP,EAAUC,iBAAmB,UACpCD,EAAUC,eAAeO,WAAW,iBAAmB,KACzD,CACER,EAAUO,iBAAmB,EACjC,KAAO,CACHP,EAAUO,iBAAmBP,EAAUC,cAC3C,CACJ,CACJ,CACJ,EACAI,EAAuBV,EAAOc,kBAC9BJ,EAAuBV,EAAOG,gBAClC,CAEQV,qBAAqBsB,GACzB,OAAQA,GACJ,IAAK,IACD,OAAO/D,EAA0BgE,QACrC,IAAK,IACL,IAAK,IACD,OAAOhE,EAA0BoB,KAE7C,EACH,IAAA6C,EAAA,CAAAC,WAAA,MAAAD,EAAA9D,mBAAA,OAAA8D,CAAA","ignoreList":[]}