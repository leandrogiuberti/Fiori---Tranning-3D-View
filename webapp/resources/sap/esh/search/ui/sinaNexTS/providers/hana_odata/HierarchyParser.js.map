{"version":3,"file":"HierarchyParser.js","names":["sap","ui","define","____sina_HierarchyQuery","HierarchyQuery","HierarchyParser","parseHierarchyFacet","query","attributeMetadata","facetData","nodeId","hierarchyQuery","sina","createHierarchyQuery","filter","clone","attributeId","id","nlq","resultSet","_createHierarchyResultSet","node","items","title","facetTotalCount","undefined","nodeMap","nodes","Items","item","createHierarchyNode","label","count","_Count","hasChildren","_HasChildren","push","parentId","JSON","parse","_Parent","parentNode","addChildNode","find","__exports","__esModule"],"sources":["HierarchyParser.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\nimport { AttributeMetadata } from \"../../sina/AttributeMetadata\";\nimport { HierarchyNode } from \"../../sina/HierarchyNode\";\nimport { HierarchyQuery } from \"../../sina/HierarchyQuery\";\nimport { HierarchyResultSet } from \"../../sina/HierarchyResultSet\";\nimport { Query } from \"../../sina/Query\";\n\nexport class HierarchyParser {\n    parseHierarchyFacet(query: Query, attributeMetadata: AttributeMetadata, facetData): HierarchyResultSet {\n        const nodeId = query instanceof HierarchyQuery ? (query as HierarchyQuery).nodeId : \"$$ROOT$$\";\n        const hierarchyQuery = query.sina.createHierarchyQuery({\n            filter: query.filter.clone(),\n            attributeId: attributeMetadata.id,\n            nodeId: nodeId,\n            nlq: query.nlq,\n        });\n        const resultSet = query.sina._createHierarchyResultSet({\n            query: hierarchyQuery,\n            node: null,\n            items: [],\n            title: facetData[\"@com.sap.vocabularies.Common.v1.Label\"] || \"\",\n            facetTotalCount: undefined,\n        });\n        const nodeMap: { [id: string]: HierarchyNode } = {};\n        const nodes: HierarchyNode[] = [];\n        const items = facetData.Items || [];\n        for (const item of items) {\n            const id = item[attributeMetadata.id];\n            // 1. create or update node\n            let node = nodeMap[id];\n            if (!node) {\n                // 1.1 create node\n                node = query.sina.createHierarchyNode({\n                    id: id,\n                    label: item[attributeMetadata.id + \"@com.sap.vocabularies.Common.v1.Text\"],\n                    count: item._Count,\n                    hasChildren: item._HasChildren,\n                });\n                nodes.push(node);\n                nodeMap[id] = node;\n            } else {\n                // 1.2 update node\n                node.label = item[attributeMetadata.id + \"@com.sap.vocabularies.Common.v1.Text\"];\n                node.count = item._Count;\n            }\n            // 2. add node to parent node\n            const parentId = JSON.parse(item._Parent)[attributeMetadata.id];\n            let parentNode = nodeMap[parentId];\n            if (!parentNode) {\n                parentNode = query.sina.createHierarchyNode({\n                    id: parentId,\n                });\n                nodes.push(parentNode);\n                nodeMap[parentId] = parentNode;\n            }\n            parentNode.addChildNode(node);\n        }\n        const node = nodes.find((node) => node.id === nodeId);\n        resultSet.node = node;\n        return resultSet;\n    }\n}\n"],"mappings":";;;;;AAAAA,IAAAC,GAAAC,OAAA,uCAAAC,GAAA,mBAOSC,EAAcD,EAAA,kBAIhB,MAAME,EACTC,oBAAoBC,EAAcC,EAAsCC,GACpE,MAAMC,EAASH,aAAiBH,EAAkBG,EAAyBG,OAAS,WACpF,MAAMC,EAAiBJ,EAAMK,KAAKC,qBAAqB,CACnDC,OAAQP,EAAMO,OAAOC,QACrBC,YAAaR,EAAkBS,GAC/BP,OAAQA,EACRQ,IAAKX,EAAMW,MAEf,MAAMC,EAAYZ,EAAMK,KAAKQ,0BAA0B,CACnDb,MAAOI,EACPU,KAAM,KACNC,MAAO,GACPC,MAAOd,EAAU,0CAA4C,GAC7De,gBAAiBC,YAErB,MAAMC,EAA2C,CAAC,EAClD,MAAMC,EAAyB,GAC/B,MAAML,EAAQb,EAAUmB,OAAS,GACjC,IAAK,MAAMC,KAAQP,EAAO,CACtB,MAAML,EAAKY,EAAKrB,EAAkBS,IAElC,IAAII,EAAOK,EAAQT,GACnB,IAAKI,EAAM,CAEPA,EAAOd,EAAMK,KAAKkB,oBAAoB,CAClCb,GAAIA,EACJc,MAAOF,EAAKrB,EAAkBS,GAAK,wCACnCe,MAAOH,EAAKI,OACZC,YAAaL,EAAKM,eAEtBR,EAAMS,KAAKf,GACXK,EAAQT,GAAMI,CAClB,KAAO,CAEHA,EAAKU,MAAQF,EAAKrB,EAAkBS,GAAK,wCACzCI,EAAKW,MAAQH,EAAKI,MACtB,CAEA,MAAMI,EAAWC,KAAKC,MAAMV,EAAKW,SAAShC,EAAkBS,IAC5D,IAAIwB,EAAaf,EAAQW,GACzB,IAAKI,EAAY,CACbA,EAAalC,EAAMK,KAAKkB,oBAAoB,CACxCb,GAAIoB,IAERV,EAAMS,KAAKK,GACXf,EAAQW,GAAYI,CACxB,CACAA,EAAWC,aAAarB,EAC5B,CACA,MAAMA,EAAOM,EAAMgB,KAAMtB,GAASA,EAAKJ,KAAOP,GAC9CS,EAAUE,KAAOA,EACjB,OAAOF,CACX,EACH,IAAAyB,EAAA,CAAAC,WAAA,MAAAD,EAAAvC,kBAAA,OAAAuC,CAAA","ignoreList":[]}