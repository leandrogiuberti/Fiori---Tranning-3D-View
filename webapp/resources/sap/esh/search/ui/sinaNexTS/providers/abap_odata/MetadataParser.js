/*!
 * SAPUI5
 * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.
 * 
 */
sap.ui.define(["./labelCalculation","../../sina/SinaObject","../../sina/MatchingStrategy","../../sina/AttributeType","../../sina/AttributeFormatType","../../core/errors","../../sina/System","../../core/Log"],function(t,e,a,r,s,n,i,o){"use strict";const c=t["createLabelCalculator"];const u=e["SinaObject"];const l=a["MatchingStrategy"];const p=r["AttributeType"];const d=s["AttributeFormatType"];const y=n["UnknownDataTypeError"];const f=n["UnknownPresentationUsageError"];const m=i["System"];const h=o["Log"];class S extends u{_provider;_sina;_labelCalculator;_appSearchDataSource;log=new h("ABAP MetadataParser");constructor(t){super();this._provider=t;this._sina=t.sina;this._labelCalculator=c();this._appSearchDataSource=undefined}getAppSearchDataSource(){return this._appSearchDataSource}parseDataSourceData(t,e){for(let a=0;a<t.length;++a){const r=t[a];let s=r.Name;if(!s){s=r.Id}let n=r.NamePlural;if(!n){n=s}const i=this._sina.createDataSource({id:r.Id,label:s,labelPlural:n,type:this._sina.DataSourceType.BusinessObject,usage:r.Id.endsWith("TRANSACTIONS~")?{appSearch:{}}:{},attributesMetadata:[{id:"dummy",isKey:false,label:"",type:"String"}],nlq:r.IsNLSEnabled});i.system=new m({id:r.SourceSystem+"."+r.SourceClient,label:r.SourceSystem+" "+r.SourceClient});i._private.semanticObjectType=r.SemanticObjectTypeId;i._private.annotations=r.Annotations&&r.Annotations.results||[];this._labelCalculator.calculateLabel(i);this._fillMetadataBufferForDataSource(i,r.Attributes.results);e.registerObjectType({type:i.id,label:i.label,properties:i.attributesMetadata});if(i.id.endsWith("TRANSACTIONS~")&&this._appSearchDataSource===undefined){this._appSearchDataSource=i}}}_fillMetadataBufferForDataSource(t,e){if(t.attributesMetadata[0].id!=="dummy"){return}t.attributesMetadata=[];t.attributeMetadataMap={};let a;const r=[];const s=[];const n=[];const i=[];let o;const c={dataSourceAnnotations:{},attributeAnnotations:{}};c.dataSourceAnnotations=this._parseAnnotationsIntoJsonStructure(t._private.annotations);for(a=0;a<e.length;a++){o=e[a];const i=this._fillMetadataBufferForAttribute(t,o);const u=o.Annotations&&o.Annotations.results||[];const l=this._parseAnnotationsIntoJsonStructure(u);c.attributeAnnotations[i.id.toUpperCase()]=l;this._parseSemanticsAnnotation(o,l);if(i._private.temporaryUsage.Title!==undefined){r.push(i)}if(i._private.temporaryUsage.Detail!==undefined){if(o.isSummary){s.push(i)}else{n.push(i)}}}const u=this._sina._createCDSAnnotationsParser({dataSource:t,cdsAnnotations:c});const l=u.parseCDSAnnotationsForDataSource();if(!l.dataSourceIsCdsBased){this._sortAttributesOfNonCDSBasedDataSource(t,r,i,s,n)}for(a=0;a<t.attributesMetadata.length;a++){o=t.attributesMetadata[a];if(o._private.temporaryUsage){for(const t in o._private.temporaryUsage){if(t!="Title"&&t!="Detail"){o.usage[t]=o._private.temporaryUsage[t]}}}}}_fillMetadataBufferForAttribute(t,e){const a=e.Displayed&&e.DisplayOrder?e.DisplayOrder:-1;const r=this._parseAttributeTypeAndFormat(e);const s=this._sina._createAttributeMetadata({id:e.Id,label:e.Name!==""?e.Name:e.Id,isKey:e.Key,isSortable:e.Sortable,usage:{},type:r.type,format:r.format,matchingStrategy:this._parseMatchingStrategy(e)});s._private.semanticObjectType=e.SemanticObjectTypeId;s._private.temporaryUsage=e.UIAreas?this._parseUsage(e,a):{};t.attributesMetadata.push(s);t.attributeMetadataMap[s.id]=s;return s}_parseSemanticsAnnotation(t,e){let a=false;const r="SEMANTICS";for(const t in e){if(t.substr(0,r.length)==r){a=true;break}}if(t.Semantics&&!a){let a;switch(t.Semantics){case"EMAIL.ADDRESS":case"TELEPHONE.TYPE":case"CURRENCYCODE":case"UNITOFMEASURE":a="TRUE";break;case"QUANTITY.UNITOFMEASURE":case"AMOUNT.CURRENCYCODE":a=t.UnitAttribute;break}if(a){e[r+t.Semantics]=a}}}_sortAttributesOfNonCDSBasedDataSource(t,e,a,r,s){let n,i;e.sort(this._createSortFunction("Title"));for(n=0;n<e.length;++n){const a=e[n].id;i=t.getAttributeMetadata(a);i.usage.Title=i._private.temporaryUsage.Title;i.usage.Title.displayOrder=n}const o=this._createSortFunction("Detail");r.sort(o);s.sort(o);a.push(...r);a.push(...s);for(n=0;n<a.length;++n){a[n].usage.Detail=a[n]._private.temporaryUsage.Detail;a[n].usage.Detail.displayOrder=n}}_arrayIncludesEntry(t,e,a){let r;if(a){for(r=0;r<t.length;r++){if(a(t[r],e)){return true}}}else{for(r=0;r<t.length;r++){if(t[r]==e){return true}}}return false}_parseAnnotationsIntoJsonStructure(t){if(t.length==0){return{}}let e,a;const r={};let s,n;let i,o;let c;const u=[];let l;const p=function(t,e){return t.annotationPointer==e.annotationPointer&&t.annotationName==e.annotationName};try{for(a=0;a<t.length;a++){s=/\[\d+\]$/g;o=r;c=t[a].Name.split(".");for(e=0;e<c.length;e++){i=c[e].toUpperCase();n=s.exec(i);if(n!==null){i=i.substring(0,n.index)}o[i]=o[i]||{};if(n!==null&&n[0].length>0){l={annotationPointer:o,annotationName:i};if(!this._arrayIncludesEntry(u,l,p)){u.push(l)}if(e<c.length-1){o[i][n[0]]=o[i][n[0]]||{};o=o[i][n[0]]}else{o[i][n[0]]=t[a].Value}}else if(e<c.length-1){o=o[i]}else{o[i]=t[a].Value}}}let d;let y;let f,m,h;const S=/\[\d+\]/g;for(a=0;a<u.length;a++){d=u[a].annotationPointer;i=u[a].annotationName;y=d[i];f=[];h={};for(m in y){if(m.match(S)){f.push(y[m])}else{h[m]=y[m]}}if(Object.keys(h).length>0){f.push(h)}d[i]=f}}catch(t){this.log.warn("Error while parsing annotations: "+t);return{}}return r}_createSortFunction(t){return function(e,a){if(e._private.temporaryUsage[t].displayOrder<a._private.temporaryUsage[t].displayOrder){return-1}else if(e._private.temporaryUsage[t].displayOrder>a._private.temporaryUsage[t].displayOrder){return 1}return 0}}_parseMatchingStrategy(t){if(t.TextIndexed){return l.Text}return l.Exact}_parseAttributeTypeAndFormat(t){for(let e=0;e<t.UIAreas.results.length;e++){const a=t.UIAreas.results[e];const r=a.Id;switch(r){case"SUMMARY":continue;case"DETAILS":continue;case"TITLE":continue;case"#HIDDEN":case"HIDDEN":continue;case"FACTSHEET":continue;case"DETAILIMAGE":case"PREVIEWIMAGE":return{type:p.ImageUrl};case"LONGTEXT":return{type:p.String,format:d.LongText};default:throw new f(a)}}switch(t.EDMType){case"Edm.String":case"Edm.Binary":case"Edm.Boolean":case"Edm.Byte":case"Edm.Guid":return{type:p.String};case"Edm.Double":case"Edm.Decimal":case"Edm.Float":case"Edm.Single":return{type:p.Double};case"Edm.Int16":case"Edm.Int32":case"Edm.Int64":return{type:p.Integer};case"Edm.Time":return{type:p.Time};case"Edm.DateTime":case"Edm.DateTimeOffset":if(t?.TypeLength>8){return{type:p.Timestamp}}return{type:p.Date};case"GeoJson":return{type:p.GeoJson};default:throw new y(t.EDMType)}}_parseUsage(t,e){const a=t.UIAreas.results;const r=t.AdvancedSearchRelevant;const s=t.Facet;const n={};a.forEach(function(a){const r=a.Id;if(r==="TITLE"){n.Title={displayOrder:e}}if(r==="SUMMARY"||r==="DETAILIMAGE"||r==="PREVIEWIMAGE"){t.isSummary=true;n.Detail={displayOrder:e}}if(r==="DETAILS"||r==="LONGTEXT"){n.Detail={displayOrder:e}}});if(r){n.AdvancedSearch={}}if(s){n.Facet={}}return n}parseDynamicMetadata(t){let e;try{e=t.ResultList.SearchResults.results}catch(t){this.log.warn("Error while parsing dynamic metadata: "+t);return}for(let t=0;t<e.length;++t){const a=e[t];if(!a.HitAttributes||!a.HitAttributes.results){continue}const r=this._sina.getDataSource(a.DataSourceId);const s=a.HitAttributes.results;for(let t=0;t<s.length;++t){const e=s[t];this.parseDynamicAtributeMetadata(r,e)}}}parseDynamicAtributeMetadata(t,e){let a;let r=t.getAttributeMetadata(e.Id);if(r){if(!r._private.dynamic){return}e.UIAreas=e.UIAreas||{results:[]};a=this._parseAttributeTypeAndFormat(e);r.label=e.Name;r.type=a.type;r.format=a.format}else{e.UIAreas=e.UIAreas||{results:[]};a=this._parseAttributeTypeAndFormat(e);r=this._sina._createAttributeMetadata({id:e.Id,label:e.Name,isKey:false,isSortable:false,usage:{},type:a.type,format:a.format,matchingStrategy:l.Exact,_private:{dynamic:true}});t.attributesMetadata.push(r);t.attributeMetadataMap[r.id]=r}}}var g={__esModule:true};g.MetadataParser=S;return g});
//# sourceMappingURL=MetadataParser.js.map