{"version":3,"file":"ItemParser.js","names":["sap","ui","define","util","typeConverter","pivotTableParser","____core_errors","WhyFoundAttributeMetadataMissingError","ItemParser","provider","sina","intentsResolver","constructor","this","_createFioriIntentsResolver","parse","searchQuery","data","totalCount","parseTotalCount","axes","length","Promise","resolve","items","itemsData","itemProms","i","itemData","metadataParser","parseSearchRequestMetadata","itemProm","parseItem","push","all","then","ItemLists","TotalCount","Value","titleAttributes","detailAttributes","semanticObjectTypeAttributes","dataSource","getDataSource","$$DataSourceMetaData$$","ObjectName","m","$$ResultItemAttributes$$","attributeData","metadata","getAttributeMetadata","Name","attribute","_createSearchResultSetItemAttribute","id","label","value","ina2Sina","type","valueFormatted","ValueFormatted","valueHighlighted","isHighlighted","usage","Title","Detail","$$AttributeMetadata$$","attributeMetadata","SemanticObjectType","name","sort","a1","a2","displayOrder","parseWhyFound","fallbackDefaultNavigationTarget","k","$$RelatedActions$$","relatedAction","Type","Description","targetUrl","encodeURI","Uri","createNavigationTarget","text","semanticObjectType","systemId","SystemId","client","Client","resolveIntents","intents","defaultNavigationTarget","navigationTargets","item","_createSearchResultSetItem","titleDescriptionAttributes","bind","whyFound","whyFoundAttributeId","j","$$WhyFound$$","getResponseAttributeId","matched","filterString","requestAttributeId","requestAttributeMetadata","getInternalMetadataAttribute","responseAttributeMetadata","correspondingSearchAttributeName","__exports","__esModule"],"sources":["ItemParser.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\nimport * as util from \"../../core/util\";\nimport * as typeConverter from \"./typeConverter\";\nimport * as pivotTableParser from \"./pivotTableParser\";\nimport { Sina } from \"../../sina/Sina\";\nimport { FioriIntentsResolver } from \"../tools/fiori/FioriIntentsResolver\";\nimport { Provider } from \"./Provider\";\nimport { SearchQuery } from \"../../sina/SearchQuery\";\nimport { WhyFoundAttributeMetadataMissingError } from \"../../core/errors\";\nimport { AttributeMetadata } from \"../../sina/AttributeMetadata\";\n\nexport class ItemParser {\n    provider: Provider;\n    sina: Sina;\n    intentsResolver: FioriIntentsResolver;\n\n    constructor(provider: Provider) {\n        this.provider = provider;\n        this.sina = provider.sina;\n        this.intentsResolver = this.sina._createFioriIntentsResolver();\n    }\n\n    parse(searchQuery: SearchQuery, data) {\n        const totalCount = this.parseTotalCount(data);\n        data = pivotTableParser.parse(data);\n        if (data.axes.length === 0) {\n            return Promise.resolve({\n                totalCount: 0,\n                items: [],\n            });\n        }\n        const itemsData = data.axes[0];\n        const itemProms = [];\n        for (let i = 0; i < itemsData.length; ++i) {\n            const itemData = itemsData[i];\n            this.provider.metadataParser.parseSearchRequestMetadata(itemData);\n            const itemProm = this.parseItem(itemData);\n            itemProms.push(itemProm);\n        }\n        return Promise.all(itemProms).then(function (items) {\n            return {\n                totalCount: totalCount,\n                items: items,\n            };\n        });\n    }\n\n    parseTotalCount(data) {\n        if (data.ItemLists && data.ItemLists[0] && data.ItemLists[0].TotalCount) {\n            return data.ItemLists[0].TotalCount.Value;\n        }\n        return 0;\n    }\n\n    parseItem(itemData) {\n        const titleAttributes = [];\n        const detailAttributes = [];\n        const semanticObjectTypeAttributes = [];\n\n        const dataSource = this.sina.getDataSource(itemData.$$DataSourceMetaData$$[0].ObjectName);\n\n        for (let m = 0; m < itemData.$$ResultItemAttributes$$.length; ++m) {\n            const attributeData = itemData.$$ResultItemAttributes$$[m];\n            const metadata = dataSource.getAttributeMetadata(attributeData.Name);\n\n            const attribute = this.sina._createSearchResultSetItemAttribute({\n                id: attributeData.Name,\n                label: (dataSource.getAttributeMetadata(attributeData.Name) as AttributeMetadata).label,\n                value: typeConverter.ina2Sina(metadata.type, attributeData.Value),\n                valueFormatted: attributeData.ValueFormatted || attributeData.Value,\n                valueHighlighted: attributeData.ValueFormatted || attributeData.Value,\n                isHighlighted: false,\n                metadata: metadata,\n            });\n\n            if (metadata.usage.Title) {\n                titleAttributes.push(attribute);\n            }\n            if (metadata.usage.Detail) {\n                detailAttributes.push(attribute);\n            }\n\n            // TO DO maybe get metadata out of metadata buffer?\n            for (let i = 0; i < itemData.$$AttributeMetadata$$.length; i++) {\n                const attributeMetadata = itemData.$$AttributeMetadata$$[i];\n                if (attributeMetadata.Name == attributeData.Name) {\n                    if (\n                        attributeMetadata.SemanticObjectType &&\n                        attributeMetadata.SemanticObjectType.length > 0\n                    ) {\n                        semanticObjectTypeAttributes.push({\n                            name: attributeMetadata.SemanticObjectType,\n                            value: attribute.value,\n                            type: attribute.metadata.type,\n                        });\n                    }\n                    break;\n                }\n            }\n        }\n\n        titleAttributes.sort(function (a1, a2) {\n            return a1.metadata.usage.Title.displayOrder - a2.metadata.usage.Title.displayOrder;\n        });\n\n        detailAttributes.sort(function (a1, a2) {\n            return a1.metadata.usage.Detail.displayOrder - a2.metadata.usage.Detail.displayOrder;\n        });\n\n        this.parseWhyFound(dataSource, titleAttributes, detailAttributes, itemData);\n\n        let fallbackDefaultNavigationTarget;\n        for (let k = 0; k < itemData.$$RelatedActions$$.length; ++k) {\n            const relatedAction = itemData.$$RelatedActions$$[k];\n\n            if (relatedAction.Type === \"GeneralUri\" || relatedAction.Type === \"SAPNavigation\") {\n                const label = relatedAction.Description;\n                const targetUrl = encodeURI(relatedAction.Uri);\n                fallbackDefaultNavigationTarget = this.sina.createNavigationTarget({\n                    text: label,\n                    targetUrl: targetUrl,\n                });\n            }\n        }\n\n        const semanticObjectType = itemData.$$DataSourceMetaData$$[0].SemanticObjectType;\n        const systemId = itemData.$$DataSourceMetaData$$[0].SystemId;\n        const client = itemData.$$DataSourceMetaData$$[0].Client;\n\n        return this.intentsResolver\n            .resolveIntents({\n                semanticObjectType: semanticObjectType,\n                semanticObjectTypeAttributes: semanticObjectTypeAttributes,\n                systemId: systemId,\n                client: client,\n                fallbackDefaultNavigationTarget: fallbackDefaultNavigationTarget,\n            })\n            .then(\n                function (intents) {\n                    const defaultNavigationTarget = intents && intents.defaultNavigationTarget;\n                    const navigationTargets = intents && intents.navigationTargets;\n                    const item = this.sina._createSearchResultSetItem({\n                        dataSource: dataSource,\n                        titleAttributes: titleAttributes,\n                        titleDescriptionAttributes: [],\n                        detailAttributes: detailAttributes,\n                        defaultNavigationTarget: defaultNavigationTarget,\n                        navigationTargets: navigationTargets,\n                    });\n                    return item;\n                }.bind(this)\n            );\n    }\n\n    parseWhyFound(dataSource, titleAttributes, detailAttributes, itemData) {\n        // 1. move why found to title and detail attributes\n        let i, whyFound, whyFoundAttributeId, j, attribute;\n        for (i = 0; i < itemData.$$WhyFound$$.length; i++) {\n            whyFound = itemData.$$WhyFound$$[i];\n            whyFoundAttributeId = this.getResponseAttributeId(dataSource, whyFound.Name);\n            for (j = 0; j < titleAttributes.length; ++j) {\n                attribute = titleAttributes[j];\n                if (whyFoundAttributeId === attribute.id) {\n                    whyFound.matched = true;\n                    attribute.valueHighlighted = whyFound.Value;\n                    attribute.isHighlighted = true;\n                    break;\n                }\n            }\n            for (j = 0; j < detailAttributes.length; ++j) {\n                attribute = detailAttributes[j];\n                if (whyFoundAttributeId === attribute.id) {\n                    whyFound.matched = true;\n                    attribute.valueHighlighted = whyFound.Value;\n                    attribute.isHighlighted = true;\n                    break;\n                }\n            }\n        }\n\n        // 2. for why founds without title or detail attribute: create artifical attribute and append to detail attributes\n        for (i = 0; i < itemData.$$WhyFound$$.length; i++) {\n            whyFound = itemData.$$WhyFound$$[i];\n            if (whyFound.matched) {\n                continue;\n            }\n            whyFoundAttributeId = this.getResponseAttributeId(dataSource, whyFound.Name);\n            const metadata = dataSource.getAttributeMetadata(whyFoundAttributeId);\n            if (!metadata) {\n                throw new WhyFoundAttributeMetadataMissingError(whyFoundAttributeId);\n            }\n            attribute = this.sina._createSearchResultSetItemAttribute({\n                id: metadata.id,\n                label: metadata.label,\n                value: null,\n                valueFormatted: util.filterString(whyFound.Value, [\"<b>\", \"</b>\"]),\n                valueHighlighted: whyFound.Value,\n                isHighlighted: true,\n                metadata: metadata,\n            });\n            detailAttributes.push(attribute);\n        }\n    }\n\n    getResponseAttributeId(dataSource, requestAttributeId) {\n        const requestAttributeMetadata = this.provider.getInternalMetadataAttribute(\n            dataSource,\n            requestAttributeId\n        );\n        if (!requestAttributeMetadata) {\n            return requestAttributeId;\n        }\n        const responseAttributeMetadata = this.provider.getInternalMetadataAttribute(\n            dataSource,\n            requestAttributeMetadata.correspondingSearchAttributeName\n        );\n        if (!responseAttributeMetadata) {\n            return requestAttributeId;\n        }\n        return responseAttributeMetadata.Name;\n    }\n}\n"],"mappings":"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","ignoreList":[]}