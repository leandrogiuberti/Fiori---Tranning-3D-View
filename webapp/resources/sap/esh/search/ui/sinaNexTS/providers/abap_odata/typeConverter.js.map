{"version":3,"file":"typeConverter.js","names":["sap","ui","define","____sina_AttributeType","sinaUtil","____core_errors","AttributeType","NotImplementedError","UnknownAttributeTypeError","sina2Odata","attributeType","value","context","Double","toString","Integer","String","sina2OdataString","ImageUrl","ImageBlob","GeoJson","Date","sina2OdataDate","Time","sina2OdataTime","Timestamp","sina2OdataTimestamp","odata2Sina","parseFloat","parseInt","odata2SinaDate","odata2SinaTime","odata2SinaTimestamp","length","trim","year","slice","month","day","hour","minute","seconds","microseconds","isNaN","UTC","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","result","addLeadingZeros","convertOperator2Wildcards","operator","__exports","__esModule"],"sources":["typeConverter.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\nimport { AttributeType } from \"../../sina/AttributeType\";\nimport * as sinaUtil from \"../../sina/util\";\nimport { NotImplementedError, UnknownAttributeTypeError } from \"../../core/errors\";\n\nexport function sina2Odata(attributeType: AttributeType, value, context = {}) {\n    switch (attributeType) {\n        case AttributeType.Double:\n            return value.toString();\n        case AttributeType.Integer:\n            return value.toString();\n        case AttributeType.String:\n            return sina2OdataString(value, context);\n        case AttributeType.ImageUrl:\n            return value;\n        case AttributeType.ImageBlob:\n            throw new NotImplementedError();\n        case AttributeType.GeoJson:\n            return value;\n        case AttributeType.Date:\n            return sina2OdataDate(value);\n        case AttributeType.Time:\n            return sina2OdataTime(value);\n        case AttributeType.Timestamp:\n            return sina2OdataTimestamp(value);\n        default:\n            throw new UnknownAttributeTypeError(attributeType);\n    }\n}\n\nexport function odata2Sina(attributeType: AttributeType, value) {\n    switch (attributeType) {\n        case AttributeType.Double:\n            return parseFloat(value);\n        case AttributeType.Integer:\n            return parseInt(value, 10);\n        case AttributeType.String:\n            return value;\n        case AttributeType.ImageUrl:\n            return value;\n        case AttributeType.ImageBlob:\n            throw new NotImplementedError();\n        case AttributeType.GeoJson:\n            return value;\n        case AttributeType.Date:\n            return odata2SinaDate(value);\n        case AttributeType.Time:\n            return odata2SinaTime(value);\n        case AttributeType.Timestamp:\n            return odata2SinaTimestamp(value);\n        default:\n            throw new UnknownAttributeTypeError(attributeType);\n    }\n}\n\n// TODO: refactory parseDate, reference HANA Odata\nexport function odata2SinaTimestamp(value): Date | string {\n    if (value.length === 0) {\n        return \"\";\n    }\n\n    // odata:2017-12-31T23:59:59.0000000Z\n    // sina: Date object\n    value = value.trim();\n\n    const year = parseInt(value.slice(0, 4), 10);\n    const month = parseInt(value.slice(5, 7), 10);\n    const day = parseInt(value.slice(8, 10), 10);\n    const hour = parseInt(value.slice(11, 13), 10);\n    const minute = parseInt(value.slice(14, 16), 10);\n    const seconds = parseInt(value.slice(17, 19), 10);\n    const microseconds = isNaN(parseInt(value.slice(20, 20 + 6), 10))\n        ? 0\n        : parseInt(value.slice(20, 20 + 6), 10);\n\n    return new Date(Date.UTC(year, month - 1, day, hour, minute, seconds, microseconds / 1000));\n}\n\nexport function sina2OdataTimestamp(value: Date | \"$$now$$\"): string {\n    if (typeof value === \"string\") {\n        if (value.length === 0) {\n            return \"\";\n        }\n        if (value === \"$$now$$\") {\n            value = new Date();\n        }\n    }\n\n    // odata:2017-12-31T23:59:59.0000000Z\n    // sina: Date object\n    const year = value.getUTCFullYear();\n    const month = value.getUTCMonth() + 1;\n    const day = value.getUTCDate();\n    const hour = value.getUTCHours();\n    const minute = value.getUTCMinutes();\n    const seconds = value.getUTCSeconds();\n    const microseconds = value.getUTCMilliseconds() * 1000;\n\n    const result =\n        addLeadingZeros(year.toString(), 4) +\n        \"-\" +\n        addLeadingZeros(month.toString(), 2) +\n        \"-\" +\n        addLeadingZeros(day.toString(), 2) +\n        \"T\" +\n        addLeadingZeros(hour.toString(), 2) +\n        \":\" +\n        addLeadingZeros(minute.toString(), 2) +\n        \":\" +\n        addLeadingZeros(seconds.toString(), 2) +\n        \".\" +\n        addLeadingZeros(microseconds.toString(), 7) +\n        \"Z\";\n\n    return result;\n}\n\nexport function odata2SinaTime(value) {\n    if (value.length === 0) {\n        return \"\";\n    }\n    // odata: hh:mm:ss\n    // sina: hh:mm:ss\n    value = value.trim();\n    return value;\n}\n\nexport function sina2OdataTime(value) {\n    if (value.length === 0) {\n        return \"\";\n    }\n    // odata: hh:mm:ss\n    // sina: hh:mm:ss\n    return value;\n}\n\nexport function odata2SinaDate(value) {\n    if (value.length === 0) {\n        return \"\";\n    }\n\n    // odata: YYYY-MM-DD\n    // sina: YYYY/MM/DD\n    value = value.trim();\n    return value.slice(0, 4) + \"/\" + value.slice(5, 7) + \"/\" + value.slice(8, 10);\n}\n\nexport function sina2OdataDate(value) {\n    if (value.length === 0) {\n        return \"\";\n    }\n\n    // odata: YYYY-MM-DD\n    // sina: YYYY/MM/DD\n    return value.slice(0, 4) + \"-\" + value.slice(5, 7) + \"-\" + value.slice(8, 10);\n}\n\nexport function sina2OdataString(value, context) {\n    return sinaUtil.convertOperator2Wildcards(value, context.operator);\n}\n\nexport function addLeadingZeros(value, length) {\n    return \"00000000000000\".slice(0, length - value.length) + value;\n}\n"],"mappings":"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","ignoreList":[]}