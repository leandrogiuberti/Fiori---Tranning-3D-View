{"version":3,"file":"TypeConverterUtil-dbg.js","names":["sap","ui","define","____sina_AttributeType","____core_errors","___AttributeTypeFallbackValue","____sina_i18n","AttributeType","InternalSinaError","JSONParseError","AttributeTypeFallbackValue","getText","convertToSinaDouble","value","Array","isArray","Double","parseFloat","convertToSinaInteger","Integer","parseInt","convertToSinaStringImageUrlImageBlob","attributeType","ImageUrl","ImageBlob","toString","String","length","collectionValue","i","JSON","stringify","e","message","previous","convertToSinaGeoJson","GeoJson","parse","error","convertToSinaDate","Date","odata2SinaDate","convertToSinaTime","Time","odata2SinaTime","convertToSinaTimestamp","Timestamp","odata2SinaTimestamp","trim","slice","__exports","__esModule"],"sources":["TypeConverterUtil.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\nimport { AttributeType } from \"../../sina/AttributeType\";\nimport { InternalSinaError, JSONParseError } from \"../../core/errors\";\nimport { ODataValue } from \"../../sina/odatatypes\";\nimport { AttributeTypeFallbackValue } from \"./AttributeTypeFallbackValue\";\nimport { getText } from \"../../sina/i18n\";\n\nexport function convertToSinaDouble(value: ODataValue): number {\n    if (\n        typeof value === \"undefined\" ||\n        value === null ||\n        value === \"\" ||\n        typeof value === \"boolean\" ||\n        Array.isArray(value) ||\n        typeof value === \"object\"\n    ) {\n        return AttributeTypeFallbackValue.Double;\n    } else if (typeof value === \"string\") {\n        return parseFloat(value);\n    } else if (typeof value === \"bigint\" || typeof value === \"number\") {\n        return value;\n    }\n    return AttributeTypeFallbackValue.Double;\n}\nexport function convertToSinaInteger(value: ODataValue): number {\n    if (\n        typeof value === \"undefined\" ||\n        value === null ||\n        value === \"\" ||\n        typeof value === \"boolean\" ||\n        Array.isArray(value) ||\n        typeof value === \"object\"\n    ) {\n        return AttributeTypeFallbackValue.Integer;\n    } else if (typeof value === \"string\") {\n        return parseInt(value, 10);\n    } else if (typeof value === \"bigint\" || typeof value === \"number\") {\n        return value | 0;\n    }\n    return AttributeTypeFallbackValue.Integer;\n}\nexport function convertToSinaStringImageUrlImageBlob(\n    attributeType: AttributeType,\n    value: ODataValue\n): string {\n    if (typeof value === \"undefined\" || value === null || value === \"\") {\n        return \"\";\n    } else if (typeof value === \"boolean\") {\n        // \"true\" or \"false\" makes no sense for ImageUrl or ImageBlob\n        if (attributeType === AttributeType.ImageUrl || attributeType === AttributeType.ImageBlob) {\n            return AttributeTypeFallbackValue.ImageUrl;\n        }\n        return value.toString();\n    } else if (Array.isArray(value)) {\n        if (attributeType === AttributeType.String) {\n            if (value.length === 0) {\n                return \"\";\n            } else {\n                // support of collection of string or simple objects\n                // Limitation: not applicable as filter condition value\n                // for internal display use only\n                let collectionValue = \"\";\n                for (let i = 0; i < value.length; i++) {\n                    try {\n                        value[i] = JSON.stringify(value[i]);\n                    } catch (e) {\n                        throw new InternalSinaError({\n                            message: getText(\"error.sina.stringifyError\", [value[i]]),\n                            previous: e,\n                        });\n                    }\n                    if (i === 0) {\n                        collectionValue = value[i];\n                    } else {\n                        collectionValue = collectionValue + \"; \" + value[i];\n                    }\n                }\n                return collectionValue;\n            }\n        }\n    } else if (typeof value === \"object\") {\n        return AttributeTypeFallbackValue.String; // TODO: validate JSON.stringify(value);\n    } else if (typeof value === \"string\") {\n        return value;\n    } else if (typeof value === \"bigint\" || typeof value === \"number\") {\n        return value.toString();\n    }\n    return AttributeTypeFallbackValue.String;\n}\nexport function convertToSinaGeoJson(attributeType: AttributeType, value: ODataValue): object {\n    if (\n        typeof value === \"undefined\" ||\n        value === null ||\n        value === \"\" ||\n        typeof value === \"boolean\" ||\n        typeof value === \"bigint\" ||\n        typeof value === \"number\" ||\n        Array.isArray(value)\n    ) {\n        return AttributeTypeFallbackValue.GeoJson;\n    } else if (typeof value === \"object\") {\n        return value;\n    } else if (typeof value === \"string\") {\n        try {\n            return JSON.parse(value);\n        } catch (error) {\n            throw new JSONParseError(getText(\"error.sina.geoJsonParseError\", [value]), error);\n        }\n    }\n    return AttributeTypeFallbackValue.GeoJson;\n}\nexport function convertToSinaDate(value: ODataValue): string {\n    if (\n        typeof value === \"undefined\" ||\n        value === null ||\n        value === \"\" ||\n        typeof value === \"boolean\" ||\n        Array.isArray(value) ||\n        typeof value === \"object\" ||\n        typeof value === \"bigint\" ||\n        typeof value === \"number\"\n    ) {\n        return AttributeTypeFallbackValue.Date;\n    } else if (typeof value === \"string\") {\n        return odata2SinaDate(value);\n    }\n    return AttributeTypeFallbackValue.Date;\n}\nexport function convertToSinaTime(value: ODataValue): string {\n    if (\n        typeof value === \"undefined\" ||\n        value === null ||\n        value === \"\" ||\n        typeof value === \"boolean\" ||\n        Array.isArray(value) ||\n        typeof value === \"object\" ||\n        typeof value === \"bigint\" ||\n        typeof value === \"number\"\n    ) {\n        return AttributeTypeFallbackValue.Time;\n    } else if (typeof value === \"string\") {\n        return odata2SinaTime(value);\n    }\n    return AttributeTypeFallbackValue.Time;\n}\nexport function convertToSinaTimestamp(value: ODataValue): Date {\n    if (\n        typeof value === \"undefined\" ||\n        value === null ||\n        value === \"\" ||\n        typeof value === \"boolean\" ||\n        Array.isArray(value) ||\n        typeof value === \"object\" ||\n        typeof value === \"bigint\" ||\n        typeof value === \"number\"\n    ) {\n        return AttributeTypeFallbackValue.Timestamp;\n    } else if (typeof value === \"string\") {\n        return odata2SinaTimestamp(value);\n    }\n    return AttributeTypeFallbackValue.Timestamp;\n}\n\nexport function odata2SinaDate(value: string): string {\n    // odata: YYYY-MM-DD\n    // sina: YYYY/MM/DD\n    value = value.trim();\n    return value.slice(0, 4) + \"/\" + value.slice(5, 7) + \"/\" + value.slice(8, 10);\n    //return value.slice(0, 4) + '/' + value.slice(4, 6) + '/' + value.slice(6, 8);\n}\n\nexport function odata2SinaTime(value: string): string {\n    // odata: hh:mm:ss\n    // sina: hh:mm:ss\n    value = value.trim();\n    return value;\n    //            if(value.indexOf(\":\") === 2){\n    //                return value;\n    //            }else{\n    //                return value.slice(0, 2) + ':' + value.slice(2, 4) + ':' + value.slice(4, 6);\n    //            }\n}\n\nexport function odata2SinaTimestamp(value: string): Date {\n    // odata:2017-12-31T23:59:59.0000000Z\n    // sina: Date object of UTC\n    return new Date(Date.parse(value));\n\n    /*\n    value = value.trim();\n\n    var year, month, day, hour, minute, seconds;\n    year = parseInt(value.slice(0, 4), 10);\n    month = parseInt(value.slice(5, 7), 10);\n    day = parseInt(value.slice(8, 10), 10);\n    hour = parseInt(value.slice(11, 13), 10);\n    minute = parseInt(value.slice(14, 16), 10);\n    seconds = parseInt(value.slice(17, 19), 10);\n\n    return new Date(Date.UTC(year, month - 1, day, hour, minute, seconds));\n    */\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAJAA,GAAA,CAAAC,EAAA,CAAAC,MAAA,iHAAAC,sBAAA,EAAAC,eAAA,EAAAC,6BAAA,EAAAC,aAAA;EAAA;;EAAA,MAKSC,aAAa,GAAAJ,sBAAA;EAAA,MACbK,iBAAiB,GAAAJ,eAAA;EAAA,MAAEK,cAAc,GAAAL,eAAA;EAAA,MAEjCM,0BAA0B,GAAAL,6BAAA;EAAA,MAC1BM,OAAO,GAAAL,aAAA;EAET,SAASM,mBAAmBA,CAACC,KAAiB,EAAU;IAC3D,IACI,OAAOA,KAAK,KAAK,WAAW,IAC5BA,KAAK,KAAK,IAAI,IACdA,KAAK,KAAK,EAAE,IACZ,OAAOA,KAAK,KAAK,SAAS,IAC1BC,KAAK,CAACC,OAAO,CAACF,KAAK,CAAC,IACpB,OAAOA,KAAK,KAAK,QAAQ,EAC3B;MACE,OAAOH,0BAA0B,CAACM,MAAM;IAC5C,CAAC,MAAM,IAAI,OAAOH,KAAK,KAAK,QAAQ,EAAE;MAClC,OAAOI,UAAU,CAACJ,KAAK,CAAC;IAC5B,CAAC,MAAM,IAAI,OAAOA,KAAK,KAAK,QAAQ,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;MAC/D,OAAOA,KAAK;IAChB;IACA,OAAOH,0BAA0B,CAACM,MAAM;EAC5C;EACO,SAASE,oBAAoBA,CAACL,KAAiB,EAAU;IAC5D,IACI,OAAOA,KAAK,KAAK,WAAW,IAC5BA,KAAK,KAAK,IAAI,IACdA,KAAK,KAAK,EAAE,IACZ,OAAOA,KAAK,KAAK,SAAS,IAC1BC,KAAK,CAACC,OAAO,CAACF,KAAK,CAAC,IACpB,OAAOA,KAAK,KAAK,QAAQ,EAC3B;MACE,OAAOH,0BAA0B,CAACS,OAAO;IAC7C,CAAC,MAAM,IAAI,OAAON,KAAK,KAAK,QAAQ,EAAE;MAClC,OAAOO,QAAQ,CAACP,KAAK,EAAE,EAAE,CAAC;IAC9B,CAAC,MAAM,IAAI,OAAOA,KAAK,KAAK,QAAQ,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;MAC/D,OAAOA,KAAK,GAAG,CAAC;IACpB;IACA,OAAOH,0BAA0B,CAACS,OAAO;EAC7C;EACO,SAASE,oCAAoCA,CAChDC,aAA4B,EAC5BT,KAAiB,EACX;IACN,IAAI,OAAOA,KAAK,KAAK,WAAW,IAAIA,KAAK,KAAK,IAAI,IAAIA,KAAK,KAAK,EAAE,EAAE;MAChE,OAAO,EAAE;IACb,CAAC,MAAM,IAAI,OAAOA,KAAK,KAAK,SAAS,EAAE;MACnC;MACA,IAAIS,aAAa,KAAKf,aAAa,CAACgB,QAAQ,IAAID,aAAa,KAAKf,aAAa,CAACiB,SAAS,EAAE;QACvF,OAAOd,0BAA0B,CAACa,QAAQ;MAC9C;MACA,OAAOV,KAAK,CAACY,QAAQ,CAAC,CAAC;IAC3B,CAAC,MAAM,IAAIX,KAAK,CAACC,OAAO,CAACF,KAAK,CAAC,EAAE;MAC7B,IAAIS,aAAa,KAAKf,aAAa,CAACmB,MAAM,EAAE;QACxC,IAAIb,KAAK,CAACc,MAAM,KAAK,CAAC,EAAE;UACpB,OAAO,EAAE;QACb,CAAC,MAAM;UACH;UACA;UACA;UACA,IAAIC,eAAe,GAAG,EAAE;UACxB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGhB,KAAK,CAACc,MAAM,EAAEE,CAAC,EAAE,EAAE;YACnC,IAAI;cACAhB,KAAK,CAACgB,CAAC,CAAC,GAAGC,IAAI,CAACC,SAAS,CAAClB,KAAK,CAACgB,CAAC,CAAC,CAAC;YACvC,CAAC,CAAC,OAAOG,CAAC,EAAE;cACR,MAAM,IAAIxB,iBAAiB,CAAC;gBACxByB,OAAO,EAAEtB,OAAO,CAAC,2BAA2B,EAAE,CAACE,KAAK,CAACgB,CAAC,CAAC,CAAC,CAAC;gBACzDK,QAAQ,EAAEF;cACd,CAAC,CAAC;YACN;YACA,IAAIH,CAAC,KAAK,CAAC,EAAE;cACTD,eAAe,GAAGf,KAAK,CAACgB,CAAC,CAAC;YAC9B,CAAC,MAAM;cACHD,eAAe,GAAGA,eAAe,GAAG,IAAI,GAAGf,KAAK,CAACgB,CAAC,CAAC;YACvD;UACJ;UACA,OAAOD,eAAe;QAC1B;MACJ;IACJ,CAAC,MAAM,IAAI,OAAOf,KAAK,KAAK,QAAQ,EAAE;MAClC,OAAOH,0BAA0B,CAACgB,MAAM,CAAC,CAAC;IAC9C,CAAC,MAAM,IAAI,OAAOb,KAAK,KAAK,QAAQ,EAAE;MAClC,OAAOA,KAAK;IAChB,CAAC,MAAM,IAAI,OAAOA,KAAK,KAAK,QAAQ,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;MAC/D,OAAOA,KAAK,CAACY,QAAQ,CAAC,CAAC;IAC3B;IACA,OAAOf,0BAA0B,CAACgB,MAAM;EAC5C;EACO,SAASS,oBAAoBA,CAACb,aAA4B,EAAET,KAAiB,EAAU;IAC1F,IACI,OAAOA,KAAK,KAAK,WAAW,IAC5BA,KAAK,KAAK,IAAI,IACdA,KAAK,KAAK,EAAE,IACZ,OAAOA,KAAK,KAAK,SAAS,IAC1B,OAAOA,KAAK,KAAK,QAAQ,IACzB,OAAOA,KAAK,KAAK,QAAQ,IACzBC,KAAK,CAACC,OAAO,CAACF,KAAK,CAAC,EACtB;MACE,OAAOH,0BAA0B,CAAC0B,OAAO;IAC7C,CAAC,MAAM,IAAI,OAAOvB,KAAK,KAAK,QAAQ,EAAE;MAClC,OAAOA,KAAK;IAChB,CAAC,MAAM,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;MAClC,IAAI;QACA,OAAOiB,IAAI,CAACO,KAAK,CAACxB,KAAK,CAAC;MAC5B,CAAC,CAAC,OAAOyB,KAAK,EAAE;QACZ,MAAM,IAAI7B,cAAc,CAACE,OAAO,CAAC,8BAA8B,EAAE,CAACE,KAAK,CAAC,CAAC,EAAEyB,KAAK,CAAC;MACrF;IACJ;IACA,OAAO5B,0BAA0B,CAAC0B,OAAO;EAC7C;EACO,SAASG,iBAAiBA,CAAC1B,KAAiB,EAAU;IACzD,IACI,OAAOA,KAAK,KAAK,WAAW,IAC5BA,KAAK,KAAK,IAAI,IACdA,KAAK,KAAK,EAAE,IACZ,OAAOA,KAAK,KAAK,SAAS,IAC1BC,KAAK,CAACC,OAAO,CAACF,KAAK,CAAC,IACpB,OAAOA,KAAK,KAAK,QAAQ,IACzB,OAAOA,KAAK,KAAK,QAAQ,IACzB,OAAOA,KAAK,KAAK,QAAQ,EAC3B;MACE,OAAOH,0BAA0B,CAAC8B,IAAI;IAC1C,CAAC,MAAM,IAAI,OAAO3B,KAAK,KAAK,QAAQ,EAAE;MAClC,OAAO4B,cAAc,CAAC5B,KAAK,CAAC;IAChC;IACA,OAAOH,0BAA0B,CAAC8B,IAAI;EAC1C;EACO,SAASE,iBAAiBA,CAAC7B,KAAiB,EAAU;IACzD,IACI,OAAOA,KAAK,KAAK,WAAW,IAC5BA,KAAK,KAAK,IAAI,IACdA,KAAK,KAAK,EAAE,IACZ,OAAOA,KAAK,KAAK,SAAS,IAC1BC,KAAK,CAACC,OAAO,CAACF,KAAK,CAAC,IACpB,OAAOA,KAAK,KAAK,QAAQ,IACzB,OAAOA,KAAK,KAAK,QAAQ,IACzB,OAAOA,KAAK,KAAK,QAAQ,EAC3B;MACE,OAAOH,0BAA0B,CAACiC,IAAI;IAC1C,CAAC,MAAM,IAAI,OAAO9B,KAAK,KAAK,QAAQ,EAAE;MAClC,OAAO+B,cAAc,CAAC/B,KAAK,CAAC;IAChC;IACA,OAAOH,0BAA0B,CAACiC,IAAI;EAC1C;EACO,SAASE,sBAAsBA,CAAChC,KAAiB,EAAQ;IAC5D,IACI,OAAOA,KAAK,KAAK,WAAW,IAC5BA,KAAK,KAAK,IAAI,IACdA,KAAK,KAAK,EAAE,IACZ,OAAOA,KAAK,KAAK,SAAS,IAC1BC,KAAK,CAACC,OAAO,CAACF,KAAK,CAAC,IACpB,OAAOA,KAAK,KAAK,QAAQ,IACzB,OAAOA,KAAK,KAAK,QAAQ,IACzB,OAAOA,KAAK,KAAK,QAAQ,EAC3B;MACE,OAAOH,0BAA0B,CAACoC,SAAS;IAC/C,CAAC,MAAM,IAAI,OAAOjC,KAAK,KAAK,QAAQ,EAAE;MAClC,OAAOkC,mBAAmB,CAAClC,KAAK,CAAC;IACrC;IACA,OAAOH,0BAA0B,CAACoC,SAAS;EAC/C;EAEO,SAASL,cAAcA,CAAC5B,KAAa,EAAU;IAClD;IACA;IACAA,KAAK,GAAGA,KAAK,CAACmC,IAAI,CAAC,CAAC;IACpB,OAAOnC,KAAK,CAACoC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,GAAG,GAAGpC,KAAK,CAACoC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,GAAG,GAAGpC,KAAK,CAACoC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;IAC7E;EACJ;EAEO,SAASL,cAAcA,CAAC/B,KAAa,EAAU;IAClD;IACA;IACAA,KAAK,GAAGA,KAAK,CAACmC,IAAI,CAAC,CAAC;IACpB,OAAOnC,KAAK;IACZ;IACA;IACA;IACA;IACA;EACJ;EAEO,SAASkC,mBAAmBA,CAAClC,KAAa,EAAQ;IACrD;IACA;IACA,OAAO,IAAI2B,IAAI,CAACA,IAAI,CAACH,KAAK,CAACxB,KAAK,CAAC,CAAC;;IAElC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAGA;EAAC,IAAAqC,SAAA;IAAAC,UAAA;EAAA;EAAAD,SAAA,CAAAtC,mBAAA,GAAAA,mBAAA;EAAAsC,SAAA,CAAAhC,oBAAA,GAAAA,oBAAA;EAAAgC,SAAA,CAAA7B,oCAAA,GAAAA,oCAAA;EAAA6B,SAAA,CAAAf,oBAAA,GAAAA,oBAAA;EAAAe,SAAA,CAAAX,iBAAA,GAAAA,iBAAA;EAAAW,SAAA,CAAAR,iBAAA,GAAAA,iBAAA;EAAAQ,SAAA,CAAAL,sBAAA,GAAAA,sBAAA;EAAAK,SAAA,CAAAT,cAAA,GAAAA,cAAA;EAAAS,SAAA,CAAAN,cAAA,GAAAA,cAAA;EAAAM,SAAA,CAAAH,mBAAA,GAAAA,mBAAA;EAAA,OAAAG,SAAA;AAAA","ignoreList":[]}