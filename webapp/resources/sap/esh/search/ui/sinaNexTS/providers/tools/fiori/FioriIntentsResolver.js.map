{"version":3,"file":"FioriIntentsResolver.js","names":["sap","ui","define","_____sina_SinaObject","_____sina_AttributeType","___NavigationServiceFactory","_____core_Log","SinaObject","AttributeType","getNavigationService","Log","FioriIntentsResolver","_fioriFrontendSystemInfo","_primaryIntentAction","_suppressInSearchTag","log","constructor","properties","super","uShellContainer","window","ushell","this","systemId","getLogonSystem","getName","client","getClient","toLowerCase","resolveIntents","vArgs","navigationService","defaultNavigationTarget","fallbackDefaultNavigationTarget","Array","isArray","promises","map","_vArgs","doResolveIntents","Promise","all","options","semanticObjectType","semanticObjectTypeAttrs","semanticObjectTypeAttributes","length","undefined","semanticObjectTypeAttrsAsParams","convertSemanticObjectTypeAttrs","primaryIntent","secondaryIntents","getPrimaryIntent","getSecondaryIntents","result","navigationTargets","sapSystem","assembleSapSystem","shallIntentBeSuppressed","getNavigationTargetForIntent","primaryIntentExists","validSecondaryIntents","validNavigationTargetPromises","secondaryIntent","push","validNavigationTargets","i","validSecondaryIntent","validNavigationTarget","isPrimaryIntentAction","isEqualTo","intent","action","substring","indexOf","trim","urlParameter","semanticObjectTypeAttr","value","convertAttributeValueToUI5DataTypeFormats","type","name","convertJQueryDeferredToPromise","e","warn","getLinks","semanticObject","params","withAtLeastOneUsedParam","sortResultOnTexts","tags","shellHash","externalTarget","target","externalHash","hrefForExternalAsync","navigationObject","sina","createNavigationTarget","text","targetUrl","customWindowOpenFunction","toExternal","sinaAttributeType","year","month","day","hour","minute","seconds","microseconds","Timestamp","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","addLeadingZeros","toString","Date","slice","deferred","always","resolve","reject","then","__exports","__esModule"],"sources":["FioriIntentsResolver.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\nimport { SinaObject, SinaObjectProperties } from \"../../../sina/SinaObject\";\nimport { AttributeType } from \"../../../sina/AttributeType\";\nimport { NavigationTarget } from \"../../../sina/NavigationTarget\";\nimport { getNavigationService } from \"./NavigationServiceFactory\";\nimport { Log } from \"../../../core/Log\";\n\ntype ResolverResult =\n    | {\n          defaultNavigationTarget?: NavigationTarget;\n          navigationTargets?: Array<NavigationTarget>;\n      }\n    | undefined;\n\nexport type FioriIntentsResolverOptions = SinaObjectProperties;\n\nexport class FioriIntentsResolver extends SinaObject {\n    private _fioriFrontendSystemInfo: { systemId: string; client: string };\n    private _primaryIntentAction: string;\n    private _suppressInSearchTag: string;\n    private log = new Log(\"FioriIntentsResolver\");\n\n    constructor(properties: SinaObjectProperties) {\n        super(properties);\n        const uShellContainer = typeof window !== \"undefined\" ? window?.sap?.ushell?.[\"Container\"] : null; // not available for sina on node.js\n        if (uShellContainer) {\n            this._fioriFrontendSystemInfo = {\n                systemId: uShellContainer.getLogonSystem().getName(),\n                client: uShellContainer.getLogonSystem().getClient(),\n            };\n            this._primaryIntentAction = \"-displayFactSheet\";\n            this._suppressInSearchTag = \"suppressInEnterpriseSearch\".toLowerCase();\n        } else {\n            this._fioriFrontendSystemInfo = {\n                systemId: \"\",\n                client: \"\",\n            };\n        }\n    }\n\n    public async resolveIntents(vArgs: any | any[]): Promise<ResolverResult | Array<ResolverResult>> {\n        // check navigation service\n        const navigationService = await getNavigationService();\n        if (!navigationService || !vArgs) {\n            return {\n                defaultNavigationTarget: vArgs.fallbackDefaultNavigationTarget,\n            };\n        }\n\n        if (Array.isArray(vArgs)) {\n            // mass request\n            const promises = vArgs.map((_vArgs) => this.doResolveIntents(_vArgs));\n            return await Promise.all(promises);\n        } else {\n            // single object request\n            return await this.doResolveIntents(vArgs);\n        }\n    }\n\n    private async doResolveIntents(options): Promise<ResolverResult> {\n        // destructuring of input parameters\n        const semanticObjectType = options.semanticObjectType;\n        const semanticObjectTypeAttrs = options.semanticObjectTypeAttributes;\n        const systemId = options.systemId;\n        const client = options.client;\n        const fallbackDefaultNavigationTarget = options.fallbackDefaultNavigationTarget;\n\n        // no semantic object type -> return fallback navigation target\n        if (!semanticObjectType || semanticObjectType.length === 0) {\n            return {\n                defaultNavigationTarget: fallbackDefaultNavigationTarget,\n            };\n        }\n\n        // no semantic object type attributes -> return undefined (TODO: why not fallback navigation target?)\n        if (!semanticObjectTypeAttrs || semanticObjectTypeAttrs.length === 0) {\n            return undefined;\n        }\n\n        // convert semantic object type params into format suitable for navigation service\n        const semanticObjectTypeAttrsAsParams = this.convertSemanticObjectTypeAttrs(semanticObjectTypeAttrs);\n\n        // fetch primary intent & secondary intents\n        const [primaryIntent, secondaryIntents] = await Promise.all([\n            this.getPrimaryIntent(semanticObjectType, semanticObjectTypeAttrsAsParams),\n            this.getSecondaryIntents(semanticObjectType, semanticObjectTypeAttrsAsParams),\n        ]);\n\n        // create result structure\n        const result: ResolverResult = {\n            defaultNavigationTarget: undefined,\n            navigationTargets: [],\n        };\n\n        // assemble sap system\n        const sapSystem = this.assembleSapSystem(systemId, client);\n\n        // assemble default navigation target from primary intent\n        let defaultNavigationTarget;\n        if (primaryIntent && !this.shallIntentBeSuppressed(primaryIntent)) {\n            defaultNavigationTarget = await this.getNavigationTargetForIntent(primaryIntent, sapSystem);\n            result.defaultNavigationTarget = defaultNavigationTarget;\n        }\n        let primaryIntentExists = result.defaultNavigationTarget !== undefined;\n\n        // assemble additional navigation targets from secondary intents\n        if (!secondaryIntents) {\n            return result;\n        }\n        const validSecondaryIntents = [];\n        const validNavigationTargetPromises = [];\n        for (const secondaryIntent of secondaryIntents) {\n            if (this.shallIntentBeSuppressed(secondaryIntent)) {\n                continue;\n            }\n            validSecondaryIntents.push(secondaryIntent);\n            validNavigationTargetPromises.push(this.getNavigationTargetForIntent(secondaryIntent, sapSystem));\n        }\n        const validNavigationTargets = await Promise.all(validNavigationTargetPromises);\n        for (let i = 0; i < validSecondaryIntents.length; ++i) {\n            const validSecondaryIntent = validSecondaryIntents[i];\n            const validNavigationTarget = validNavigationTargets[i];\n            if (!primaryIntentExists && this.isPrimaryIntentAction(validSecondaryIntent)) {\n                result.defaultNavigationTarget = validNavigationTarget;\n                primaryIntentExists = true;\n            } else if (\n                !defaultNavigationTarget ||\n                !validNavigationTarget.isEqualTo(defaultNavigationTarget)\n            ) {\n                result.navigationTargets.push(validNavigationTarget);\n            }\n        }\n\n        return result;\n    }\n\n    private isPrimaryIntentAction(intent) {\n        const action = intent.intent.substring(intent.intent.indexOf(\"-\"), intent.intent.indexOf(\"?\"));\n        return action === this._primaryIntentAction;\n    }\n\n    private assembleSapSystem(systemId, client) {\n        // Set sap-system parameter if:\n        // 0) we run on cFLP in the cloud which is indicated by the global variable sap.cf\n        // 1) systemId or client from search response are not undefined or empty\n        // 2) fioriFrontendSystemInfo is *NOT* set\n        // 3) fioriFrontendSystemInfo is set, but it contains different systemId and client info than the search response\n        // TODO: this comment is misleading because it neglects the AND, OR conjunctions\n        const sapSystem: {\n            systemId: string;\n            client: string;\n            urlParameter?: string;\n        } = {\n            systemId: systemId || (this._fioriFrontendSystemInfo && this._fioriFrontendSystemInfo.systemId),\n            client: client || (this._fioriFrontendSystemInfo.client && this._fioriFrontendSystemInfo.client),\n        };\n\n        if (\n            (window.sap && window.sap[\"cf\"]) || // 0)\n            (systemId &&\n                systemId.trim().length > 0 &&\n                client &&\n                client.trim().length > 0 && // 1)\n                (!this._fioriFrontendSystemInfo || // 2)\n                    !(\n                        this._fioriFrontendSystemInfo.systemId === systemId &&\n                        this._fioriFrontendSystemInfo.client === client\n                    )))\n        ) {\n            // 3)\n            sapSystem.urlParameter = \"sap-system=sid(\" + systemId + \".\" + client + \")\";\n        }\n\n        return sapSystem;\n    }\n\n    private convertSemanticObjectTypeAttrs(semanticObjectTypeAttrs) {\n        const semanticObjectTypeAttrsAsParams = {};\n        for (const semanticObjectTypeAttr of semanticObjectTypeAttrs) {\n            const value = this.convertAttributeValueToUI5DataTypeFormats(\n                semanticObjectTypeAttr.value,\n                semanticObjectTypeAttr.type\n            );\n            semanticObjectTypeAttrsAsParams[semanticObjectTypeAttr.name] = value;\n        }\n        return semanticObjectTypeAttrsAsParams;\n    }\n\n    private async getPrimaryIntent(semanticObjectType, semanticObjectTypeAttrsAsParams): Promise<any> {\n        const navigationService = await getNavigationService();\n        if (!navigationService || !navigationService.getPrimaryIntent) {\n            return undefined;\n        }\n        try {\n            return await this.convertJQueryDeferredToPromise(\n                navigationService.getPrimaryIntent(semanticObjectType, semanticObjectTypeAttrsAsParams)\n            );\n        } catch (e) {\n            this.log.warn(\"Error while fetching primary intent: \" + e);\n            return undefined; // TODO logging\n        }\n    }\n\n    private async getSecondaryIntents(semanticObjectType, semanticObjectTypeAttrsAsParams) {\n        const navigationService = await getNavigationService();\n        if (!navigationService) {\n            return undefined;\n        }\n\n        if (!navigationService.getLinks) {\n            return undefined;\n        }\n\n        try {\n            return await this.convertJQueryDeferredToPromise(\n                navigationService.getLinks({\n                    semanticObject: semanticObjectType,\n                    params: semanticObjectTypeAttrsAsParams,\n                    withAtLeastOneUsedParam: true,\n                    sortResultOnTexts: true,\n                })\n            );\n        } catch (e) {\n            this.log.warn(\"Error while fetching secondary intents: \" + e);\n            return undefined; // TODO logging\n        }\n    }\n\n    private shallIntentBeSuppressed(intent): boolean {\n        if (intent.tags) {\n            for (let i = 0; i < intent.tags.length; i++) {\n                if (intent.tags[i].toLowerCase() === this._suppressInSearchTag) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    private async getNavigationTargetForIntent(intent, sapSystem) {\n        const navigationService = await getNavigationService();\n\n        let shellHash = intent.intent;\n\n        if (sapSystem.urlParameter) {\n            if (shellHash.indexOf(\"?\") === -1) {\n                shellHash += \"?\";\n            } else {\n                shellHash += \"&\";\n            }\n            shellHash += sapSystem.urlParameter;\n        }\n\n        const externalTarget = {\n            target: {\n                shellHash: shellHash,\n            },\n        };\n\n        const externalHash = await this.convertJQueryDeferredToPromise(\n            navigationService.hrefForExternalAsync(externalTarget)\n        );\n\n        const navigationObject = this.sina.createNavigationTarget({\n            text: intent.text,\n            targetUrl: externalHash,\n            customWindowOpenFunction: () => {\n                navigationService.toExternal(externalTarget);\n            },\n        });\n\n        return navigationObject;\n    }\n\n    private convertAttributeValueToUI5DataTypeFormats(value, sinaAttributeType: AttributeType) {\n        let year, month, day, hour, minute, seconds, microseconds;\n        switch (sinaAttributeType) {\n            case AttributeType.Timestamp:\n                // sina: JavaScript Date object\n                // UI5: \"YYYY-MM-DDTHH:MM:SS.mmm\"\n                year = value.getUTCFullYear();\n                month = value.getUTCMonth() + 1;\n                day = value.getUTCDate();\n                hour = value.getUTCHours();\n                minute = value.getUTCMinutes();\n                seconds = value.getUTCSeconds();\n                microseconds = value.getUTCMilliseconds() * 1000;\n\n                value =\n                    this.addLeadingZeros(year.toString(), 4) +\n                    \"-\" +\n                    this.addLeadingZeros(month.toString(), 2) +\n                    \"-\" +\n                    this.addLeadingZeros(day.toString(), 2) +\n                    \"T\" +\n                    this.addLeadingZeros(hour.toString(), 2) +\n                    \":\" +\n                    this.addLeadingZeros(minute.toString(), 2) +\n                    \":\" +\n                    this.addLeadingZeros(seconds.toString(), 2) +\n                    \".\" +\n                    this.addLeadingZeros(microseconds.toString(), 3);\n                break;\n            case AttributeType.Date:\n                // sina: JavaScript Date object\n                // UI5: \"YYYY-MM-DD\"\n                value = value.slice(0, 4) + \"-\" + value.slice(5, 7) + \"-\" + value.slice(8, 10);\n                break;\n        }\n        return value;\n    }\n\n    private addLeadingZeros(value, length) {\n        return \"00000000000000\".slice(0, length - value.length) + value;\n    }\n\n    private convertJQueryDeferredToPromise(deferred) {\n        if (deferred.always) {\n            // is deferred, convert needed\n            return new Promise(function (resolve, reject) {\n                deferred.then(resolve, reject);\n            });\n        } else {\n            // is promise, convert not needed\n            return deferred;\n        }\n    }\n}\n"],"mappings":";;;;;AAAAA,IAAAC,GAAAC,OAAA,qHAAAC,EAAAC,EAAAC,EAAAC,GAAA,mBAKSC,EAAUJ,EAAA,oBACVK,EAAaJ,EAAA,uBAEbK,EAAoBJ,EAAA,8BACpBK,EAAGJ,EAAA,OAWL,MAAMK,UAA6BJ,EAC9BK,yBACAC,qBACAC,qBACAC,IAAM,IAAIL,EAAI,wBAEtBM,YAAYC,GACRC,MAAMD,GACN,MAAME,SAAyBC,SAAW,YAAcA,QAAQpB,KAAKqB,SAAS,aAAe,KAC7F,GAAIF,EAAiB,CACjBG,KAAKV,yBAA2B,CAC5BW,SAAUJ,EAAgBK,iBAAiBC,UAC3CC,OAAQP,EAAgBK,iBAAiBG,aAE7CL,KAAKT,qBAAuB,oBAC5BS,KAAKR,qBAAuB,6BAA6Bc,aAC7D,KAAO,CACHN,KAAKV,yBAA2B,CAC5BW,SAAU,GACVG,OAAQ,GAEhB,CACJ,CAEA,oBAAaG,CAAeC,GAExB,MAAMC,QAA0BtB,IAChC,IAAKsB,IAAsBD,EAAO,CAC9B,MAAO,CACHE,wBAAyBF,EAAMG,gCAEvC,CAEA,GAAIC,MAAMC,QAAQL,GAAQ,CAEtB,MAAMM,EAAWN,EAAMO,IAAKC,GAAWhB,KAAKiB,iBAAiBD,IAC7D,aAAaE,QAAQC,IAAIL,EAC7B,KAAO,CAEH,aAAad,KAAKiB,iBAAiBT,EACvC,CACJ,CAEA,sBAAcS,CAAiBG,GAE3B,MAAMC,EAAqBD,EAAQC,mBACnC,MAAMC,EAA0BF,EAAQG,6BACxC,MAAMtB,EAAWmB,EAAQnB,SACzB,MAAMG,EAASgB,EAAQhB,OACvB,MAAMO,EAAkCS,EAAQT,gCAGhD,IAAKU,GAAsBA,EAAmBG,SAAW,EAAG,CACxD,MAAO,CACHd,wBAAyBC,EAEjC,CAGA,IAAKW,GAA2BA,EAAwBE,SAAW,EAAG,CAClE,OAAOC,SACX,CAGA,MAAMC,EAAkC1B,KAAK2B,+BAA+BL,GAG5E,MAAOM,EAAeC,SAA0BX,QAAQC,IAAI,CACxDnB,KAAK8B,iBAAiBT,EAAoBK,GAC1C1B,KAAK+B,oBAAoBV,EAAoBK,KAIjD,MAAMM,EAAyB,CAC3BtB,wBAAyBe,UACzBQ,kBAAmB,IAIvB,MAAMC,EAAYlC,KAAKmC,kBAAkBlC,EAAUG,GAGnD,IAAIM,EACJ,GAAIkB,IAAkB5B,KAAKoC,wBAAwBR,GAAgB,CAC/DlB,QAAgCV,KAAKqC,6BAA6BT,EAAeM,GACjFF,EAAOtB,wBAA0BA,CACrC,CACA,IAAI4B,EAAsBN,EAAOtB,0BAA4Be,UAG7D,IAAKI,EAAkB,CACnB,OAAOG,CACX,CACA,MAAMO,EAAwB,GAC9B,MAAMC,EAAgC,GACtC,IAAK,MAAMC,KAAmBZ,EAAkB,CAC5C,GAAI7B,KAAKoC,wBAAwBK,GAAkB,CAC/C,QACJ,CACAF,EAAsBG,KAAKD,GAC3BD,EAA8BE,KAAK1C,KAAKqC,6BAA6BI,EAAiBP,GAC1F,CACA,MAAMS,QAA+BzB,QAAQC,IAAIqB,GACjD,IAAK,IAAII,EAAI,EAAGA,EAAIL,EAAsBf,SAAUoB,EAAG,CACnD,MAAMC,EAAuBN,EAAsBK,GACnD,MAAME,EAAwBH,EAAuBC,GACrD,IAAKN,GAAuBtC,KAAK+C,sBAAsBF,GAAuB,CAC1Eb,EAAOtB,wBAA0BoC,EACjCR,EAAsB,IAC1B,MAAO,IACF5B,IACAoC,EAAsBE,UAAUtC,GACnC,CACEsB,EAAOC,kBAAkBS,KAAKI,EAClC,CACJ,CAEA,OAAOd,CACX,CAEQe,sBAAsBE,GAC1B,MAAMC,EAASD,EAAOA,OAAOE,UAAUF,EAAOA,OAAOG,QAAQ,KAAMH,EAAOA,OAAOG,QAAQ,MACzF,OAAOF,IAAWlD,KAAKT,oBAC3B,CAEQ4C,kBAAkBlC,EAAUG,GAOhC,MAAM8B,EAIF,CACAjC,SAAUA,GAAaD,KAAKV,0BAA4BU,KAAKV,yBAAyBW,SACtFG,OAAQA,GAAWJ,KAAKV,yBAAyBc,QAAUJ,KAAKV,yBAAyBc,QAG7F,GACKN,OAAOpB,KAAOoB,OAAOpB,IAAI,OACzBuB,GACGA,EAASoD,OAAO7B,OAAS,GACzBpB,GACAA,EAAOiD,OAAO7B,OAAS,KACrBxB,KAAKV,4BAECU,KAAKV,yBAAyBW,WAAaA,GAC3CD,KAAKV,yBAAyBc,SAAWA,IAEvD,CAEE8B,EAAUoB,aAAe,kBAAoBrD,EAAW,IAAMG,EAAS,GAC3E,CAEA,OAAO8B,CACX,CAEQP,+BAA+BL,GACnC,MAAMI,EAAkC,CAAC,EACzC,IAAK,MAAM6B,KAA0BjC,EAAyB,CAC1D,MAAMkC,EAAQxD,KAAKyD,0CACfF,EAAuBC,MACvBD,EAAuBG,MAE3BhC,EAAgC6B,EAAuBI,MAAQH,CACnE,CACA,OAAO9B,CACX,CAEA,sBAAcI,CAAiBT,EAAoBK,GAC/C,MAAMjB,QAA0BtB,IAChC,IAAKsB,IAAsBA,EAAkBqB,iBAAkB,CAC3D,OAAOL,SACX,CACA,IACI,aAAazB,KAAK4D,+BACdnD,EAAkBqB,iBAAiBT,EAAoBK,GAE/D,CAAE,MAAOmC,GACL7D,KAAKP,IAAIqE,KAAK,wCAA0CD,GACxD,OAAOpC,SACX,CACJ,CAEA,yBAAcM,CAAoBV,EAAoBK,GAClD,MAAMjB,QAA0BtB,IAChC,IAAKsB,EAAmB,CACpB,OAAOgB,SACX,CAEA,IAAKhB,EAAkBsD,SAAU,CAC7B,OAAOtC,SACX,CAEA,IACI,aAAazB,KAAK4D,+BACdnD,EAAkBsD,SAAS,CACvBC,eAAgB3C,EAChB4C,OAAQvC,EACRwC,wBAAyB,KACzBC,kBAAmB,OAG/B,CAAE,MAAON,GACL7D,KAAKP,IAAIqE,KAAK,2CAA6CD,GAC3D,OAAOpC,SACX,CACJ,CAEQW,wBAAwBa,GAC5B,GAAIA,EAAOmB,KAAM,CACb,IAAK,IAAIxB,EAAI,EAAGA,EAAIK,EAAOmB,KAAK5C,OAAQoB,IAAK,CACzC,GAAIK,EAAOmB,KAAKxB,GAAGtC,gBAAkBN,KAAKR,qBAAsB,CAC5D,OAAO,IACX,CACJ,CACJ,CACA,OAAO,KACX,CAEA,kCAAc6C,CAA6BY,EAAQf,GAC/C,MAAMzB,QAA0BtB,IAEhC,IAAIkF,EAAYpB,EAAOA,OAEvB,GAAIf,EAAUoB,aAAc,CACxB,GAAIe,EAAUjB,QAAQ,QAAU,EAAG,CAC/BiB,GAAa,GACjB,KAAO,CACHA,GAAa,GACjB,CACAA,GAAanC,EAAUoB,YAC3B,CAEA,MAAMgB,EAAiB,CACnBC,OAAQ,CACJF,UAAWA,IAInB,MAAMG,QAAqBxE,KAAK4D,+BAC5BnD,EAAkBgE,qBAAqBH,IAG3C,MAAMI,EAAmB1E,KAAK2E,KAAKC,uBAAuB,CACtDC,KAAM5B,EAAO4B,KACbC,UAAWN,EACXO,yBAA0BA,KACtBtE,EAAkBuE,WAAWV,MAIrC,OAAOI,CACX,CAEQjB,0CAA0CD,EAAOyB,GACrD,IAAIC,EAAMC,EAAOC,EAAKC,EAAMC,EAAQC,EAASC,EAC7C,OAAQP,GACJ,KAAK/F,EAAcuG,UAGfP,EAAO1B,EAAMkC,iBACbP,EAAQ3B,EAAMmC,cAAgB,EAC9BP,EAAM5B,EAAMoC,aACZP,EAAO7B,EAAMqC,cACbP,EAAS9B,EAAMsC,gBACfP,EAAU/B,EAAMuC,gBAChBP,EAAehC,EAAMwC,qBAAuB,IAE5CxC,EACIxD,KAAKiG,gBAAgBf,EAAKgB,WAAY,GACtC,IACAlG,KAAKiG,gBAAgBd,EAAMe,WAAY,GACvC,IACAlG,KAAKiG,gBAAgBb,EAAIc,WAAY,GACrC,IACAlG,KAAKiG,gBAAgBZ,EAAKa,WAAY,GACtC,IACAlG,KAAKiG,gBAAgBX,EAAOY,WAAY,GACxC,IACAlG,KAAKiG,gBAAgBV,EAAQW,WAAY,GACzC,IACAlG,KAAKiG,gBAAgBT,EAAaU,WAAY,GAClD,MACJ,KAAKhH,EAAciH,KAGf3C,EAAQA,EAAM4C,MAAM,EAAG,GAAK,IAAM5C,EAAM4C,MAAM,EAAG,GAAK,IAAM5C,EAAM4C,MAAM,EAAG,IAC3E,MAER,OAAO5C,CACX,CAEQyC,gBAAgBzC,EAAOhC,GAC3B,MAAO,iBAAiB4E,MAAM,EAAG5E,EAASgC,EAAMhC,QAAUgC,CAC9D,CAEQI,+BAA+ByC,GACnC,GAAIA,EAASC,OAAQ,CAEjB,OAAO,IAAIpF,QAAQ,SAAUqF,EAASC,GAClCH,EAASI,KAAKF,EAASC,EAC3B,EACJ,KAAO,CAEH,OAAOH,CACX,CACJ,EACH,IAAAK,EAAA,CAAAC,WAAA,MAAAD,EAAArH,uBAAA,OAAAqH,CAAA","ignoreList":[]}