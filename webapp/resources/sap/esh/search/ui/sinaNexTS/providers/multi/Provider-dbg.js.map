{"version":3,"file":"Provider-dbg.js","names":["sap","ui","define","___AbstractProvider","___FacetMode","___FederationType","___ProviderHelper","____sina_Sina","FederationMethod","____core_Log","____sina_SinaConfiguration","___abap_odata_Provider","___hana_odata_Provider","___sample_Provider","___sample2_Provider","___inav2_Provider","___dummy_Provider","____core_errors","____sina_FacetType","__ui5_require_async","path","Promise","resolve","reject","require","module","__esModule","endsWith","default","Object","defineProperty","value","err","AbstractProvider","FacetMode","FederationType","ProviderHelper","Sina","Log","AvailableProviders","_normalizeConfiguration","ABAPODataProvider","HANAODataProvider","SampleProvider","Sample2Provider","INAV2Provider","DummyProvider","NotImplementedError","FacetType","FilterDataSourceType","MultiProvider","log","id","facetMode","federationType","multiSina","multiDataSourceMap","providerHelper","federationMethod","initAsync","properties","sina","flat","advanced_round_robin","dataSourceMap","allDataSource","AdvancedRoundRobin","ranking","Ranking","round_robin","RoundRobin","capabilities","_createCapabilities","fuzzy","creationPromises","subProviders","forEach","configuration","creationPromise","createAsync","then","childSina","updateProviderId","i","dataSources","length","childDataSource","multiId","calculateMultiDataSourceId","provider","createMultiDataSource","push","hasSubProvider","promises","allSettled","promise","status","warn","reason","stack","subProvidersString","map","label","contentProviderId","join","error","sort","a","b","labelPlural","localeCompare","debug","normalizedConfiguration","providerInstance","HANA_ODATA","ABAP_ODATA","INAV2","MULTI","SAMPLE","SAMPLE2","MOCK_NLQRESULTS","MockNlqResultsProvider","MOCK_SUGGESTIONTYPES","MockSuggestionTypesProvider","DUMMY","MOCK_DELETEANDREORDER","MockDeleteAndReorderProvider","Error","getFilterDataSourceType","dataSource","All","type","DataSourceType","UserCategory","BusinessObject","Category","handleAllSearch","query","childQuery","queries","searchResultSet","initializeSearchResultSet","searchResultSetItemList","facets","_createDataSourceResultSet","title","filter","items","facetTotalCount","undefined","createSearchQuery","calculateFacets","multiSelectFacets","searchTerm","getSearchTerm","top","skip","nlq","sortOrder","getResultSetAsync","all","result","j","querySearchResultSet","k","resultItem","totalCount","tree","getDataSource","_createDataSourceResultSetItem","dimensionValueFormatted","calculateMultiDataSourceLabel","measureValue","measureValueFormatted","toString","dataSourceFacets","updateDataSourceFacets","facetItem","slice","handleUserCategorySearch","myFavorites","childFavorites","startsWith","childFavoritesDataSourceId","providerFavorite","createDataSource","subDataSources","undefinedSubDataSourceIds","subDataSource","childDataSourceSina","childFavorite","childDataSourceResultSet","Chart","DataSource","concat","handleBusinessObjectSearch","rootCondition","getRootCondition","clone","updateRootCondition","resultItemMultiId","updateAttributesMetadata","multiFacets","chartResultSet","createMultiChartResultSet","_createSearchResultSet","executeSearchQuery","executeChartQuery","that","createChartQuery","dimension","executeHierarchyQuery","handleAllSuggestionSearch","createSuggestionQuery","types","calculationModes","results","mergedSuggestionResultSet","_createSuggestionResultSet","suggestionResultSet","updateSuggestionDataSource","mergeMultiResults","handleUserCategorySuggestionSearch","indexOf","SuggestionType","emptySuggestionResultSet","handleBusinessObjectSuggestionSearch","childFilter","createFilter","executeSuggestionQuery","__exports"],"sources":["Provider.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\n/* eslint-disable @typescript-eslint/no-this-alias */\nimport { AbstractProvider } from \"../AbstractProvider\";\nimport { SearchQuery } from \"../../sina/SearchQuery\";\nimport { ChartQuery } from \"../../sina/ChartQuery\";\nimport { SuggestionQuery } from \"../../sina/SuggestionQuery\";\nimport { FacetMode } from \"./FacetMode\";\nimport { FederationType } from \"./FederationType\";\nimport { ProviderHelper } from \"./ProviderHelper\";\nimport { Sina } from \"../../sina/Sina\";\nimport { DataSource } from \"../../sina/DataSource\";\nimport * as FederationMethod from \"./FederationMethod\";\nimport { SearchResultSet } from \"../../sina/SearchResultSet\";\nimport { Log } from \"../../core/Log\";\nimport { ChartResultSet } from \"../../sina/ChartResultSet\";\nimport { SuggestionResultSet } from \"../../sina/SuggestionResultSet\";\nimport { HierarchyResultSet } from \"../../sina/HierarchyResultSet\";\nimport { HierarchyQuery } from \"../../sina/HierarchyQuery\";\nimport { DataSourceResultSetItem } from \"../../sina/DataSourceResultSetItem\";\nimport { AvailableProviders, SinaConfiguration, _normalizeConfiguration } from \"../../sina/SinaConfiguration\";\nimport { Provider as ABAPODataProvider } from \"../abap_odata/Provider\";\nimport { Provider as HANAODataProvider } from \"../hana_odata/Provider\";\nimport { Provider as SampleProvider } from \"../sample/Provider\";\nimport { Provider as Sample2Provider } from \"../sample2/Provider\";\nimport { Provider as INAV2Provider } from \"../inav2/Provider\";\nimport { Provider as DummyProvider } from \"../dummy/Provider\";\nimport { UserCategoryDataSource } from \"../../sina/UserCategoryDataSource\";\nimport { NotImplementedError } from \"../../core/errors\";\nimport { SearchResultSetItem } from \"../../sina/SearchResultSetItem\";\nimport { FacetType } from \"../../sina/FacetType\";\nimport { ComplexCondition } from \"../../sina/ComplexCondition\";\n\nenum FilterDataSourceType {\n    All = \"All\",\n    UserCategory = \"UserCategory\",\n    BusinessObject = \"BusinessObject\",\n    Category = \"Category\",\n}\nexport class MultiProvider extends AbstractProvider {\n    log: Log;\n    readonly id = \"multi\";\n    facetMode: FacetMode;\n    federationType: FederationType;\n    multiSina: Sina[];\n    multiDataSourceMap: { [key: string]: DataSource };\n    providerHelper: ProviderHelper;\n    federationMethod: FederationMethod.IFederationMethod;\n\n    async initAsync(properties: SinaConfiguration): Promise<Sina> {\n        this.log = new Log(\"MultiProvider\");\n        this.sina = properties.sina;\n        this.facetMode = FacetMode[properties.facetMode] || FacetMode.flat;\n        this.federationType =\n            FederationType[properties.federationType] || FederationType.advanced_round_robin;\n        this.multiSina = [];\n        this.multiDataSourceMap = {}; //key: multiId, value: originalDataSource\n        this.sina.dataSourceMap[this.sina.allDataSource.id] = this.sina.allDataSource;\n        this.providerHelper = new ProviderHelper(this);\n        switch (this.federationType) {\n            case FederationType.advanced_round_robin: {\n                this.federationMethod = new FederationMethod.AdvancedRoundRobin();\n                break;\n            }\n            case FederationType.ranking: {\n                this.federationMethod = new FederationMethod.Ranking();\n                break;\n            }\n            case FederationType.round_robin: {\n                this.federationMethod = new FederationMethod.RoundRobin();\n                break;\n            }\n        }\n        this.sina.capabilities = this.sina._createCapabilities({\n            fuzzy: false,\n        });\n\n        const creationPromises: Array<Promise<Sina>> = [];\n        properties.subProviders.forEach((configuration: SinaConfiguration) => {\n            const creationPromise = this.createAsync(configuration).then((childSina) => {\n                this.providerHelper.updateProviderId(childSina);\n                for (let i = 0; i < childSina.dataSources.length; i++) {\n                    const childDataSource = childSina.dataSources[i];\n                    const multiId = this.providerHelper.calculateMultiDataSourceId(\n                        childDataSource.id,\n                        childSina.provider.id\n                    );\n                    this.providerHelper.createMultiDataSource(multiId, childDataSource);\n                    this.multiDataSourceMap[multiId] = childDataSource;\n                }\n                this.multiSina.push(childSina);\n                return childSina;\n            });\n            creationPromises.push(creationPromise);\n        });\n\n        let hasSubProvider = false;\n        // straightforward workaround to use Promise.allSettled() with older Typescript version\n        const promises = await Promise.allSettled(creationPromises);\n        promises.forEach((promise) => {\n            if (promise.status === \"rejected\") {\n                this.log.warn(`Error during creation of subprovider: ${promise.reason.stack}`);\n            } else if (promise.status === \"fulfilled\") {\n                hasSubProvider = true;\n                if (promise.value.capabilities.fuzzy) {\n                    this.sina.capabilities.fuzzy = true;\n                }\n            }\n        });\n        if (!hasSubProvider) {\n            const subProvidersString = properties.subProviders\n                .map((configuration: SinaConfiguration) => {\n                    return configuration.label || configuration.contentProviderId;\n                })\n                .join(\", \");\n            this.log.error(\n                `Error during creation of multi provider: No valid subproviders: ${subProvidersString}`\n            );\n            return Promise.reject();\n        }\n\n        this.sina.dataSources.sort(function (a, b) {\n            return a.labelPlural.localeCompare(b.labelPlural);\n        });\n\n        return this.sina;\n    }\n\n    async createAsync(configuration: SinaConfiguration): Promise<Sina> {\n        this.log.debug(`Creating new sina (esh client) instance using provider ${configuration.provider}`);\n        const normalizedConfiguration = await _normalizeConfiguration(configuration);\n        let providerInstance: AbstractProvider;\n        switch (normalizedConfiguration.provider) {\n            case AvailableProviders.HANA_ODATA: {\n                providerInstance = new HANAODataProvider();\n                break;\n            }\n            case AvailableProviders.ABAP_ODATA: {\n                providerInstance = new ABAPODataProvider();\n                break;\n            }\n            case AvailableProviders.INAV2: {\n                providerInstance = new INAV2Provider();\n                break;\n            }\n            case AvailableProviders.MULTI: {\n                providerInstance = new MultiProvider();\n                break;\n            }\n            case AvailableProviders.SAMPLE: {\n                providerInstance = new SampleProvider();\n                break;\n            }\n            case AvailableProviders.SAMPLE2: {\n                providerInstance = new Sample2Provider();\n                break;\n            }\n            case AvailableProviders.MOCK_NLQRESULTS: {\n                const module = await import(\n                    // eslint-disable-next-line\n                    // @ts-ignore\n                    \"/sap/esh/search/ui/sinaNexTS/providers/mock/MockNlqResultsProvider\"\n                );\n                providerInstance = new module.MockNlqResultsProvider();\n                break;\n            }\n            case AvailableProviders.MOCK_SUGGESTIONTYPES: {\n                const module = await import(\n                    // eslint-disable-next-line\n                    // @ts-ignore\n                    \"/sap/esh/search/ui/sinaNexTS/providers/mock/MockSuggestionTypesProvider\"\n                );\n                providerInstance = new module.MockSuggestionTypesProvider();\n                break;\n            }\n            case AvailableProviders.DUMMY: {\n                providerInstance = new DummyProvider();\n                break;\n            }\n            case AvailableProviders.MOCK_DELETEANDREORDER: {\n                const module = await import(\n                    // eslint-disable-next-line\n                    // @ts-ignore\n                    \"/sap/esh/search/ui/sinaNexTS/providers/mock/MockDeleteAndReorderProvider\"\n                );\n                providerInstance = new module.MockDeleteAndReorderProvider();\n                break;\n            }\n            default: {\n                throw new Error(\n                    `Unknown Provider: '${configuration.provider}' - Available Providers: ${AvailableProviders.HANA_ODATA}, ${AvailableProviders.ABAP_ODATA}, ${AvailableProviders.INAV2}, ${AvailableProviders.MULTI}, ${AvailableProviders.SAMPLE}, ${AvailableProviders.SAMPLE2}, ${AvailableProviders.DUMMY}.`\n                );\n            }\n        }\n\n        const sina = new Sina(providerInstance);\n        await sina.initAsync(normalizedConfiguration);\n        return sina;\n    }\n    // return the filter datasource type of the datasource (All, UserCategory, BusinessObject, Category)\n    getFilterDataSourceType(dataSource: DataSource): FilterDataSourceType {\n        if (dataSource === this.sina.allDataSource) {\n            return FilterDataSourceType.All;\n        }\n        if (dataSource.type === this.sina.DataSourceType.UserCategory) {\n            return FilterDataSourceType.UserCategory;\n        }\n        if (dataSource.type === this.sina.DataSourceType.BusinessObject) {\n            return FilterDataSourceType.BusinessObject;\n        }\n        if (dataSource.type === this.sina.DataSourceType.Category) {\n            return FilterDataSourceType.Category;\n        }\n    }\n\n    async handleAllSearch(query: SearchQuery): Promise<SearchResultSet> {\n        let childQuery: SearchQuery;\n        const queries: Promise<SearchResultSet>[] = [];\n        const searchResultSet: SearchResultSet = this.initializeSearchResultSet(query);\n        const searchResultSetItemList: SearchResultSetItem[] = [];\n\n        // search with all dataSource\n        searchResultSet.facets.push(\n            this.sina._createDataSourceResultSet({\n                title: query.filter.dataSource.label,\n                items: [],\n                query: query,\n                facetTotalCount: undefined,\n            })\n        );\n\n        for (let i = 0; i < this.multiSina.length; i++) {\n            childQuery = this.multiSina[i].createSearchQuery({\n                calculateFacets: query.calculateFacets,\n                multiSelectFacets: query.multiSelectFacets,\n                dataSource: this.multiSina[i].allDataSource,\n                searchTerm: query.getSearchTerm(),\n                top: query.top,\n                skip: query.skip,\n                nlq: query.nlq,\n                sortOrder: query.sortOrder,\n                sina: this.multiSina[i],\n            });\n            queries.push(childQuery.getResultSetAsync() as Promise<SearchResultSet>);\n        }\n        return Promise.all(queries).then((result) => {\n            for (let j = 0; j < result.length; j++) {\n                const querySearchResultSet: SearchResultSet = result[j];\n                for (let k = 0; k < querySearchResultSet.items.length; k++) {\n                    const resultItem = querySearchResultSet.items[k];\n                    const multiId = this.providerHelper.calculateMultiDataSourceId(\n                        resultItem.dataSource.id,\n                        resultItem.sina.provider.id\n                    );\n                    const dataSource = this.sina.dataSourceMap[multiId];\n                    resultItem.dataSource = dataSource;\n                    resultItem.sina = this.sina;\n                }\n                searchResultSet.totalCount += querySearchResultSet.totalCount;\n                searchResultSetItemList.push(...querySearchResultSet.items);\n\n                if (querySearchResultSet.facets[0]) {\n                    if (this.facetMode === FacetMode.tree) {\n                        const childDataSource = this.sina.getDataSource(\n                            this.providerHelper.calculateMultiDataSourceId(\n                                querySearchResultSet.query.filter.dataSource.id,\n                                querySearchResultSet.sina.provider.id\n                            )\n                        );\n                        searchResultSet.facets[0].items.push(\n                            this.sina._createDataSourceResultSetItem({\n                                dataSource: childDataSource,\n                                dimensionValueFormatted: this.providerHelper.calculateMultiDataSourceLabel(\n                                    querySearchResultSet.query.filter.dataSource.label,\n                                    querySearchResultSet.sina.provider\n                                ),\n                                measureValue: querySearchResultSet.totalCount,\n                                measureValueFormatted: querySearchResultSet.totalCount.toString(),\n                            })\n                        );\n                    } else {\n                        const dataSourceFacets = this.providerHelper.updateDataSourceFacets(\n                            querySearchResultSet.facets\n                        );\n                        dataSourceFacets[0].items.forEach((facetItem) => {\n                            searchResultSet.facets[0].items.push(facetItem);\n                        });\n                    }\n                }\n            }\n            searchResultSet.items = this.federationMethod.sort(searchResultSetItemList);\n            searchResultSet.items = searchResultSet.items.slice(query.skip, query.top);\n\n            return searchResultSet;\n        });\n    }\n\n    async handleUserCategorySearch(query: SearchQuery): Promise<SearchResultSet> {\n        let childQuery: SearchQuery;\n        const queries: Promise<SearchResultSet>[] = [];\n        const searchResultSet: SearchResultSet = this.initializeSearchResultSet(query);\n        const searchResultSetItemList: SearchResultSetItem[] = [];\n\n        // search with user defined dataSources (DataSourceType = \"UserCategory\")\n        const myFavorites: UserCategoryDataSource = query.filter.dataSource as UserCategoryDataSource;\n\n        const childFavorites = [];\n        this.multiSina.forEach((childSina) => {\n            // supported provider (abap_odata, sample), create child favorites dataSource\n            if (\n                childSina.provider.id.startsWith(\"abap_odata\") ||\n                childSina.provider.id.startsWith(\"sample\")\n            ) {\n                const childFavoritesDataSourceId = this.providerHelper.calculateMultiDataSourceId(\n                    myFavorites.id,\n                    childSina.provider.id\n                );\n                let providerFavorite: UserCategoryDataSource = this.multiDataSourceMap[\n                    childFavoritesDataSourceId\n                ] as UserCategoryDataSource;\n                // check if providerFavorite is included in this.multiDataSourceMap\n                if (!providerFavorite) {\n                    providerFavorite = childSina.createDataSource({\n                        id: childFavoritesDataSourceId,\n                        label: myFavorites.label,\n                        labelPlural: myFavorites.labelPlural,\n                        type: myFavorites.type,\n                        subDataSources: [],\n                        undefinedSubDataSourceIds: [],\n                    } as UserCategoryDataSource) as UserCategoryDataSource;\n                    // add providerFavorite to this.multiDataSourceMap\n                    this.multiDataSourceMap[childFavoritesDataSourceId] = providerFavorite;\n                } else {\n                    // providerFavorite exists in this.multiDataSourceMap (initalize subDataSources)\n                    providerFavorite.subDataSources = [];\n                }\n            }\n        });\n        // loop subDataSources, split to get a list childFavorites with different providers\n        myFavorites.subDataSources.forEach((subDataSource) => {\n            const childDataSource = this.multiDataSourceMap[subDataSource.id];\n            const childDataSourceSina = childDataSource.sina;\n            // abap_odata and sample provider can search with subDataSources, split with each abap_odata and sample provider\n            if (\n                childDataSourceSina.provider.id.startsWith(\"abap_odata\") ||\n                childDataSourceSina.provider.id.startsWith(\"sample\")\n            ) {\n                const childFavoritesDataSourceId = this.providerHelper.calculateMultiDataSourceId(\n                    myFavorites.id,\n                    childDataSourceSina.provider.id\n                );\n                const providerFavorite: UserCategoryDataSource = this.multiDataSourceMap[\n                    childFavoritesDataSourceId\n                ] as UserCategoryDataSource;\n                if (providerFavorite.subDataSources.length === 0) {\n                    childFavorites.push(providerFavorite);\n                }\n                providerFavorite.subDataSources.push(childDataSource);\n            }\n            // other providers can only search with one dataSource, split as single dataSource\n            // delete possible (else)\n            else {\n                childFavorites.push(childDataSource);\n            }\n        });\n\n        childFavorites.forEach((childFavorite) => {\n            childQuery = childFavorite.sina.createSearchQuery({\n                calculateFacets: query.calculateFacets,\n                multiSelectFacets: query.multiSelectFacets,\n                dataSource: childFavorite,\n                searchTerm: query.getSearchTerm(),\n                top: query.top,\n                skip: query.skip,\n                nlq: query.nlq,\n                sortOrder: query.sortOrder,\n                sina: childFavorite.sina,\n            });\n            queries.push(childQuery.getResultSetAsync() as Promise<SearchResultSet>);\n        });\n        return Promise.all(queries).then((result) => {\n            searchResultSet.facets.push(\n                this.sina._createDataSourceResultSet({\n                    title: query.filter.dataSource.label,\n                    items: [],\n                    query: query,\n                    facetTotalCount: undefined,\n                })\n            );\n            for (let j = 0; j < result.length; j++) {\n                const querySearchResultSet = result[j];\n                for (let k = 0; k < querySearchResultSet.items.length; k++) {\n                    const resultItem = querySearchResultSet.items[k];\n                    const multiId = this.providerHelper.calculateMultiDataSourceId(\n                        resultItem.dataSource.id,\n                        resultItem.sina.provider.id\n                    );\n                    const dataSource = this.sina.dataSourceMap[multiId];\n                    // update dataSource consisting of provider Id and dataSource Id\n                    resultItem.dataSource = dataSource;\n                    resultItem.sina = this.sina;\n                }\n                searchResultSet.totalCount += querySearchResultSet.totalCount;\n                searchResultSetItemList.push(...querySearchResultSet.items);\n\n                // favorite should certainly be a dataSource facet\n                if (query.calculateFacets) {\n                    const childDataSource = querySearchResultSet.query.filter\n                        .dataSource as UserCategoryDataSource;\n                    const childDataSourceResultSet = querySearchResultSet.sina._createDataSourceResultSet({\n                        title: childDataSource.label,\n                        items: [],\n                        query: querySearchResultSet.query,\n                        facetTotalCount: undefined,\n                    });\n                    // manually create a dataSourceResultSet for abap_odata/sample one dataSource child favorite, resultSet has no facet\n                    if (querySearchResultSet.facets.length === 0 && querySearchResultSet.items.length > 0) {\n                        childDataSourceResultSet.items.push(\n                            querySearchResultSet.sina._createDataSourceResultSetItem({\n                                dataSource: childDataSource.subDataSources[0],\n                                dimensionValueFormatted: childDataSource.subDataSources[0].label,\n                                measureValue: querySearchResultSet.totalCount,\n                                measureValueFormatted: querySearchResultSet.totalCount.toString(),\n                            })\n                        );\n                        querySearchResultSet.facets.push(childDataSourceResultSet);\n                    }\n                    // manually update a dataSourceResultSet for non abap_odata favorite, resultSet has chart facet\n                    if (\n                        querySearchResultSet.facets.length > 0 &&\n                        querySearchResultSet.facets[0].type === FacetType.Chart &&\n                        querySearchResultSet.items.length > 0\n                    ) {\n                        childDataSourceResultSet.items.push(\n                            querySearchResultSet.sina._createDataSourceResultSetItem({\n                                dataSource: childDataSource,\n                                dimensionValueFormatted: childDataSource.label,\n                                measureValue: querySearchResultSet.totalCount,\n                                measureValueFormatted: querySearchResultSet.totalCount.toString(),\n                            })\n                        );\n                        querySearchResultSet.facets = [childDataSourceResultSet];\n                    }\n                    // normally update a dataSourceResultSet\n                    if (\n                        querySearchResultSet.facets.length === 1 &&\n                        querySearchResultSet.facets[0].type === FacetType.DataSource\n                    ) {\n                        this.providerHelper.updateDataSourceFacets(querySearchResultSet.facets);\n                        searchResultSet.facets[0].items = searchResultSet.facets[0].items.concat(\n                            querySearchResultSet.facets[0].items\n                        );\n                    }\n                }\n            }\n            searchResultSet.items = this.federationMethod.sort(searchResultSetItemList);\n            searchResultSet.items = searchResultSet.items.slice(query.skip, query.top);\n\n            return searchResultSet;\n        });\n    }\n\n    async handleBusinessObjectSearch(query: SearchQuery): Promise<SearchResultSet> {\n        // search with single child provider dataSource\n        const childDataSource = this.multiDataSourceMap[query.filter.dataSource.id];\n        if (childDataSource === undefined) {\n            // data source does not exist (or is a category)\n            //    - example: On facet panel of FLP search click category, afterwards reload the page.\n            //               -> This will fail because categories are not part of the data source droptown of FLP\n            throw new Error(`Data source with id '${query.filter.dataSource.id}' does not exist.`);\n        }\n        const rootCondition = query.getRootCondition().clone();\n        const searchResultSet: SearchResultSet = this.initializeSearchResultSet(query);\n\n        this.providerHelper.updateRootCondition(rootCondition as ComplexCondition, childDataSource.sina);\n        const childQuery = childDataSource.sina.createSearchQuery({\n            calculateFacets: query.calculateFacets,\n            multiSelectFacets: query.multiSelectFacets,\n            dataSource: childDataSource,\n            searchTerm: query.getSearchTerm(),\n            rootCondition: query.getRootCondition(),\n            top: query.top,\n            skip: query.skip,\n            nlq: query.nlq,\n            sortOrder: query.sortOrder,\n            sina: childDataSource.sina,\n        });\n        return childQuery.getResultSetAsync().then((querySearchResultSet: SearchResultSet) => {\n            searchResultSet.items = querySearchResultSet.items;\n            searchResultSet.totalCount = querySearchResultSet.totalCount;\n\n            for (let i = 0; i < searchResultSet.items.length; i++) {\n                const resultItem = searchResultSet.items[i];\n                const resultItemMultiId = this.providerHelper.calculateMultiDataSourceId(\n                    resultItem.dataSource.id,\n                    resultItem.sina.provider.id\n                );\n                //update attributes metadata\n                this.providerHelper.updateAttributesMetadata(\n                    resultItem.dataSource,\n                    this.sina.dataSourceMap[resultItemMultiId]\n                );\n                //set the facet result item dataSource as multi provider dataSource\n                resultItem.dataSource = this.sina.dataSourceMap[resultItemMultiId];\n                resultItem.sina = this.sina;\n            }\n\n            let multiFacets;\n            //dataSource facet\n            if (\n                querySearchResultSet.facets.length === 1 &&\n                (querySearchResultSet.facets[0].items[0] as DataSourceResultSetItem).dataSource\n            ) {\n                multiFacets = querySearchResultSet.facets;\n                multiFacets[0].title = this.providerHelper.calculateMultiDataSourceLabel(\n                    querySearchResultSet.facets[0].title,\n                    querySearchResultSet.facets[0].sina.provider\n                );\n                this.providerHelper.updateDataSourceFacets(multiFacets);\n            } else {\n                //chart facet\n                multiFacets = [];\n                for (let k = 0; k < querySearchResultSet.facets.length; k++) {\n                    const chartResultSet = querySearchResultSet.facets[k];\n                    multiFacets.push(this.providerHelper.createMultiChartResultSet(chartResultSet));\n                }\n            }\n            searchResultSet.facets = multiFacets;\n\n            return searchResultSet;\n        });\n    }\n\n    initializeSearchResultSet(query: SearchQuery): SearchResultSet {\n        return this.sina._createSearchResultSet({\n            title: \"Search Multi Result List\",\n            query: query,\n            items: [],\n            totalCount: 0,\n            facets: [],\n        });\n    }\n\n    executeSearchQuery(query: SearchQuery): Promise<SearchResultSet> {\n        switch (this.getFilterDataSourceType(query.filter.dataSource)) {\n            // dataSource All\n            case FilterDataSourceType.All:\n                return this.handleAllSearch(query);\n            // dataSource My Favorites\n            case FilterDataSourceType.UserCategory:\n                return this.handleUserCategorySearch(query);\n            // dataSource Connector or Category\n            case FilterDataSourceType.BusinessObject:\n            case FilterDataSourceType.Category:\n                return this.handleBusinessObjectSearch(query);\n        }\n    }\n\n    executeChartQuery(query: ChartQuery): Promise<ChartResultSet> {\n        const that = this;\n        const childDataSource = that.multiDataSourceMap[query.filter.dataSource.id];\n        const rootCondition = query.getRootCondition().clone();\n        that.providerHelper.updateRootCondition(rootCondition as ComplexCondition, childDataSource.sina);\n        const childQuery = childDataSource.sina.createChartQuery({\n            dimension: query.dimension,\n            dataSource: childDataSource,\n            searchTerm: query.getSearchTerm(),\n            rootCondition: rootCondition,\n            top: query.top,\n            skip: query.skip,\n            nlq: query.nlq,\n            sortOrder: query.sortOrder,\n        });\n        return childQuery.getResultSetAsync().then(function (chartResultSet) {\n            return that.providerHelper.createMultiChartResultSet(chartResultSet);\n        });\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    executeHierarchyQuery(query: HierarchyQuery): Promise<HierarchyResultSet> {\n        throw new NotImplementedError();\n    }\n\n    async handleAllSuggestionSearch(query: SuggestionQuery): Promise<SuggestionResultSet> {\n        let childQuery: SuggestionQuery;\n        const queries = [];\n        for (let i = 0; i < this.multiSina.length; i++) {\n            childQuery = this.multiSina[i].createSuggestionQuery({\n                types: query.types,\n                calculationModes: query.calculationModes,\n                dataSource: this.multiSina[i].allDataSource,\n                searchTerm: query.getSearchTerm(),\n                top: query.top,\n                skip: query.skip,\n                sortOrder: query.sortOrder,\n            });\n            queries.push(childQuery.getResultSetAsync());\n        }\n\n        return Promise.allSettled(queries).then((results) => {\n            const mergedSuggestionResultSet = this.sina._createSuggestionResultSet({\n                title: \"Multi Suggestions\",\n                query: query,\n                items: [],\n            });\n            for (let j = 0; j < results.length; j++) {\n                const result = results[j];\n                if (result.status === \"fulfilled\") {\n                    const suggestionResultSet = this.providerHelper.updateSuggestionDataSource(result.value);\n                    mergedSuggestionResultSet.items = new FederationMethod.RoundRobin().mergeMultiResults(\n                        mergedSuggestionResultSet.items,\n                        suggestionResultSet.items,\n                        j + 1\n                    );\n                }\n            }\n            return mergedSuggestionResultSet;\n        });\n    }\n\n    async handleUserCategorySuggestionSearch(query: SuggestionQuery): Promise<SuggestionResultSet> {\n        if (query.types.indexOf(this.sina.SuggestionType.DataSource) >= 0) {\n            return this.handleAllSuggestionSearch(query);\n        } else {\n            const emptySuggestionResultSet = this.sina._createSuggestionResultSet({\n                title: \"Multi Suggestions - My Favorites\",\n                query: query,\n                items: [],\n            });\n            return Promise.resolve(emptySuggestionResultSet);\n        }\n    }\n\n    async handleBusinessObjectSuggestionSearch(query: SuggestionQuery): Promise<SuggestionResultSet> {\n        const childDataSource = this.multiDataSourceMap[query.filter.dataSource.id];\n        const childFilter = childDataSource.sina.createFilter({\n            searchTerm: query.getSearchTerm(),\n            dataSource: childDataSource,\n            rootCondition: query.filter.rootCondition.clone(),\n        });\n        const childQuery = childDataSource.sina.createSuggestionQuery({\n            types: query.types,\n            calculationModes: query.calculationModes,\n            top: query.top,\n            skip: query.skip,\n            sortOrder: query.sortOrder,\n            filter: childFilter,\n        });\n\n        return childQuery.getResultSetAsync().then((results) => {\n            return this.providerHelper.updateSuggestionDataSource(results);\n        });\n    }\n    executeSuggestionQuery(query: SuggestionQuery): Promise<SuggestionResultSet> {\n        switch (this.getFilterDataSourceType(query.filter.dataSource)) {\n            // dataSource All\n            case FilterDataSourceType.All:\n                return this.handleAllSuggestionSearch(query);\n            // dataSource My Favorites\n            case FilterDataSourceType.UserCategory:\n                return this.handleUserCategorySuggestionSearch(query);\n            // dataSource Connector or Category\n            case FilterDataSourceType.BusinessObject:\n            case FilterDataSourceType.Category:\n                return this.handleBusinessObjectSuggestionSearch(query);\n        }\n    }\n}\n"],"mappings":"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","ignoreList":[]}