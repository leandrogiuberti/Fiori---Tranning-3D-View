{"version":3,"file":"ItemParser-dbg.js","names":["sap","ui","define","util","typeConverter","____core_Log","___tools_WhyfoundProcessor","___HierarchyNodePathParser","Log","WhyfoundProcessor","HierarchyNodePathParser","ItemParser","provider","sina","suvNavTargetResolver","log","hierarchyNodePathParser","constructor","_createSuvNavTargetResolver","parse","searchQuery","data","value","Promise","resolve","error","warn","message","itemsData","itemProms","i","length","itemData","itemProm","parseItem","push","e","all","query","attributes","titleAttributes","detailAttributes","titleDescriptionAttributes","allAttributes","semanticObjectTypeAttributes","entitySetName","posOfSeparator","lastIndexOf","slice","dataSource","getDataSource","hierarchyNodePaths","undefined","itemResponse","whyFounds","hasHierarchyNodeChild","hasHierarchyNodeChildAttribute","_createSearchResultSetItemAttribute","id","label","toString","valueFormatted","valueHighlighted","isHighlighted","metadata","groups","semanticObjectType","suvAttributes","suvAttribute","suvAttributeName","suvHighlightTerms","fallbackDefaultNavigationTarget","rankingScore","Number","whyFoundProcessor","itemDataStructured","preParseItem","attributeName","groupBy","aggregateCountAlias","structuredAttribute","getAttributeMetadata","usage","Detail","displayOrder","attrValue","odata2Sina","type","attrWhyFound","processRegularWhyFoundAttributes","attribute","calIsHighlighted","iconUrlAttributeName","iconUrlValue","iconUrl","appendRemovingDuplicates","extractHighlightedTerms","Title","TitleDescription","Navigation","mainNavigation","createNavigationTarget","text","targetUrl","target","attributeMetadataMap","_private","suvTargetUrlAttribute","suvTargetMimeTypeAttribute","sort","a1","a2","resolveSuvNavTargets","searchResultSetItem","_createSearchResultSetItem","defaultNavigationTarget","navigationTargets","score","Array","isArray","allAttributesMap","itemPostParser","_createItemPostParser","postResultSetItem","postParseResultSetItem","processAdditionalWhyfoundAttributes","originalPropertyName","splitted","split","propertyName","substructure","__exports","__esModule"],"sources":["ItemParser.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\nimport * as util from \"../../core/util\";\nimport * as typeConverter from \"./typeConverter\";\nimport { Sina } from \"../../sina/Sina\";\nimport { Provider } from \"../hana_odata/Provider\";\nimport { SuvAttribute, SuvNavTargetResolver } from \"../tools/fiori/SuvNavTargetResolver\";\nimport { SearchResultSetItem } from \"../../sina/SearchResultSetItem\";\nimport { SearchQuery } from \"../../sina/SearchQuery\";\nimport { Log } from \"../../core/Log\";\nimport { SearchResultSetItemAttribute } from \"../../sina/SearchResultSetItemAttribute\";\nimport { AttributeMetadata } from \"../../sina/AttributeMetadata\";\nimport { WhyfoundProcessor } from \"../tools/WhyfoundProcessor\";\nimport { HierarchyNodePathParser } from \"./HierarchyNodePathParser\";\nimport { HANAOdataSearchResponseResult, HANAOdataSearchResponseResultItem } from \"./Provider\";\nimport { ODataValue } from \"../../sina/odatatypes\";\n\nexport class ItemParser {\n    provider: Provider;\n    sina: Sina;\n    suvNavTargetResolver: SuvNavTargetResolver;\n    log: Log = new Log(\"hana_odata item parser\");\n    hierarchyNodePathParser: HierarchyNodePathParser;\n\n    constructor(provider: Provider) {\n        this.provider = provider;\n        this.sina = provider.sina;\n        this.suvNavTargetResolver = this.sina._createSuvNavTargetResolver({\n            sina: this.sina,\n        });\n        this.hierarchyNodePathParser = new HierarchyNodePathParser(this.sina);\n    }\n\n    public async parse(\n        searchQuery: SearchQuery,\n        data: HANAOdataSearchResponseResult\n    ): Promise<Array<SearchResultSetItem>> {\n        if (!data.value) {\n            return Promise.resolve([]);\n        }\n\n        if (data.error) {\n            this.log.warn(\"Server-side Warning: \" + data.error.message);\n        }\n\n        const itemsData = data.value;\n        const itemProms: Array<Promise<SearchResultSetItem>> = [];\n\n        for (let i = 0; i < itemsData.length; ++i) {\n            const itemData = itemsData[i] as HANAOdataSearchResponseResultItem;\n            let itemProm: Promise<SearchResultSetItem>;\n            try {\n                itemProm = this.parseItem(itemData, searchQuery);\n                itemProms.push(itemProm);\n            } catch (e) {\n                this.log.warn(\"Error occurred by parsing result item number \" + i + \": \" + e.message);\n            }\n        }\n        return Promise.all(itemProms);\n    }\n\n    private async parseItem(\n        itemData: HANAOdataSearchResponseResultItem,\n        query: SearchQuery\n    ): Promise<SearchResultSetItem> {\n        const attributes: Array<SearchResultSetItemAttribute> = [];\n        const titleAttributes: Array<SearchResultSetItemAttribute> = [];\n        const detailAttributes: Array<SearchResultSetItemAttribute> = [];\n        const titleDescriptionAttributes: Array<SearchResultSetItemAttribute> = [];\n        const allAttributes: {\n            [key: string]: SearchResultSetItemAttribute;\n        } = {};\n        const semanticObjectTypeAttributes = {};\n\n        let entitySetName = itemData[\"@odata.context\"] || \"\";\n        const posOfSeparator = entitySetName.lastIndexOf(\"#\");\n        if (posOfSeparator > -1) {\n            entitySetName = entitySetName.slice(posOfSeparator + 1);\n        }\n        const dataSource = this.sina.getDataSource(entitySetName) ?? query.getDataSource();\n\n        let hierarchyNodePaths = undefined;\n        if (itemData[\"@com.sap.vocabularies.Search.v1.ParentHierarchies\"]) {\n            const itemResponse = itemData[\"@com.sap.vocabularies.Search.v1.ParentHierarchies\"];\n\n            // {\n            //     data: {\n            //         \"@com.sap.vocabularies.Search.v1.ParentHierarchies\":\n            //             itemData[\"@com.sap.vocabularies.Search.v1.ParentHierarchies\"],\n            //     },\n            // };\n            hierarchyNodePaths = this.hierarchyNodePathParser.parse(itemResponse, query);\n        }\n\n        const whyFounds = itemData[\"@com.sap.vocabularies.Search.v1.WhyFound\"] || {};\n        const hasHierarchyNodeChild = itemData[\"@com.sap.vocabularies.Search.v1.hasChildren\"] || false;\n        const hasHierarchyNodeChildAttribute = this.sina._createSearchResultSetItemAttribute({\n            id: \"HASHIERARCHYNODECHILD\",\n            label: \"HASHIERARCHYNODECHILD\",\n            value: hasHierarchyNodeChild.toString(),\n            valueFormatted: hasHierarchyNodeChild.toString(),\n            valueHighlighted: hasHierarchyNodeChild.toString(),\n            isHighlighted: false,\n            metadata: undefined, // ToDo, fill 'metadata' or refactor to get rid of 'HASHIERARCHYNODECHILD'\n            groups: [],\n        });\n        allAttributes[hasHierarchyNodeChildAttribute.id] = hasHierarchyNodeChildAttribute;\n        attributes.push(hasHierarchyNodeChildAttribute);\n        let metadata: AttributeMetadata;\n        let semanticObjectType = \"\";\n\n        const suvAttributes: { [key: string]: SuvAttribute } = {};\n        let suvAttribute, suvAttributeName;\n        const suvHighlightTerms = [];\n\n        let fallbackDefaultNavigationTarget;\n        const rankingScore = Number(itemData[\"@com.sap.vocabularies.Search.v1.Ranking\"]);\n\n        const whyFoundProcessor = new WhyfoundProcessor(this.sina);\n\n        // parse attributes\n        const itemDataStructured = this.preParseItem(itemData);\n\n        for (const attributeName in itemDataStructured) {\n            if (\n                query.groupBy &&\n                query.groupBy.aggregateCountAlias &&\n                query.groupBy.aggregateCountAlias === attributeName\n            ) {\n                continue;\n            }\n\n            const structuredAttribute = itemDataStructured[attributeName];\n            metadata = dataSource.getAttributeMetadata(attributeName) as AttributeMetadata;\n\n            if (metadata.id == \"LOC_4326\") {\n                // required to get maps to frontend // TODO: move to metadata parser\n                metadata.usage.Detail.displayOrder = -1;\n            }\n\n            // Input:\n            // value\n            // highlighted\n            // snippets\n\n            // Output:\n            // value            = input.value\n            // valueFormatted   = TypeConverter(input.value)\n            // valueHiglighted  =\n            // multiline: true => input.highlighted | input.snippet | why found\n            // multiline: false => input.snippet | input.highlighted | why found\n\n            const attrValue = typeConverter.odata2Sina(metadata.type, structuredAttribute.value);\n\n            const attrWhyFound = whyFoundProcessor.processRegularWhyFoundAttributes(\n                attributeName,\n                structuredAttribute,\n                whyFounds,\n                metadata\n            );\n\n            const attribute = this.sina._createSearchResultSetItemAttribute({\n                id: metadata.id,\n                label: metadata.label,\n                value: attrValue,\n                valueFormatted: undefined,\n                valueHighlighted: attrWhyFound,\n                isHighlighted: whyFoundProcessor.calIsHighlighted(attrWhyFound),\n                metadata: metadata,\n                groups: [],\n            });\n\n            // Add iconUrl if there is referred iconUrlAttributeName\n            if (metadata.iconUrlAttributeName && itemDataStructured[metadata.iconUrlAttributeName]) {\n                const iconUrlValue = itemDataStructured[metadata.iconUrlAttributeName];\n                if (iconUrlValue) {\n                    if (\n                        typeof iconUrlValue === \"object\" &&\n                        \"value\" in iconUrlValue &&\n                        typeof iconUrlValue.value === \"string\" &&\n                        iconUrlValue.value\n                    ) {\n                        attribute.iconUrl = iconUrlValue.value;\n                    } else if (typeof iconUrlValue === \"string\") {\n                        attribute.iconUrl = iconUrlValue;\n                    }\n                }\n            }\n\n            util.appendRemovingDuplicates(\n                suvHighlightTerms,\n                util.extractHighlightedTerms(attribute.valueHighlighted)\n            );\n\n            // deprecated as of 1.92 since fileviewer is also deprecated\n            // if (metadata.suvUrlAttribute && metadata.suvMimeTypeAttribute) {\n            //     suvUrlAttribute = allAttributes[metadata.suvUrlAttribute] || metadata.suvUrlAttribute.id;\n            //     suvMimeTypeAttribute =\n            //         allAttributes[metadata.suvMimeTypeAttribute] || metadata.suvMimeTypeAttribute.id;\n            //     suvAttributes[metadata.id] = {\n            //         suvThumbnailAttribute: attribute,\n            //         suvTargetUrlAttribute: suvUrlAttribute,\n            //         suvTargetMimeTypeAttribute: suvMimeTypeAttribute,\n            //     };\n            // }\n\n            if (metadata.usage.Title) {\n                titleAttributes.push(attribute);\n            }\n            if (metadata.usage.TitleDescription) {\n                titleDescriptionAttributes.push(attribute);\n            }\n            if (metadata.usage.Detail) {\n                detailAttributes.push(attribute);\n            }\n            attributes.push(attribute);\n            if (metadata.usage.Navigation) {\n                if (metadata.usage.Navigation.mainNavigation) {\n                    fallbackDefaultNavigationTarget = this.sina.createNavigationTarget({\n                        text: attribute.value,\n                        targetUrl: attribute.value,\n                        target: \"_blank\",\n                    });\n                }\n            }\n\n            allAttributes[attribute.id] = attribute;\n\n            semanticObjectType =\n                (dataSource.attributeMetadataMap[metadata.id]._private.semanticObjectType as string) || \"\";\n            if (semanticObjectType.length > 0) {\n                semanticObjectTypeAttributes[semanticObjectType] = attrValue;\n            }\n        }\n        for (suvAttributeName in suvAttributes) {\n            suvAttribute = suvAttributes[suvAttributeName];\n            if (typeof suvAttribute.suvTargetUrlAttribute === \"string\") {\n                suvAttribute.suvTargetUrlAttribute = allAttributes[suvAttribute.suvTargetUrlAttribute];\n            }\n            if (typeof suvAttribute.suvTargetMimeTypeAttribute === \"string\") {\n                suvAttribute.suvTargetMimeTypeAttribute =\n                    allAttributes[suvAttribute.suvTargetMimeTypeAttribute];\n            }\n            if (!(suvAttribute.suvTargetUrlAttribute || suvAttribute.suvTargetMimeTypeAttribute)) {\n                delete suvAttributes[suvAttributeName];\n            }\n        }\n\n        titleAttributes.sort(function (a1, a2) {\n            return a1.metadata.usage.Title.displayOrder - a2.metadata.usage.Title.displayOrder;\n        });\n\n        detailAttributes.sort(function (a1, a2) {\n            return a1.metadata.usage.Detail.displayOrder - a2.metadata.usage.Detail.displayOrder;\n        });\n\n        this.suvNavTargetResolver.resolveSuvNavTargets(dataSource, suvAttributes, suvHighlightTerms);\n\n        const searchResultSetItem = this.sina._createSearchResultSetItem({\n            dataSource: dataSource,\n            attributes: attributes,\n            titleAttributes: titleAttributes,\n            titleDescriptionAttributes: titleDescriptionAttributes,\n            detailAttributes: detailAttributes,\n            defaultNavigationTarget: fallbackDefaultNavigationTarget,\n            navigationTargets: [],\n            score: rankingScore,\n        });\n\n        if (Array.isArray(hierarchyNodePaths) && hierarchyNodePaths.length > 0) {\n            searchResultSetItem.hierarchyNodePaths = hierarchyNodePaths;\n        }\n        searchResultSetItem._private.allAttributesMap = allAttributes;\n        searchResultSetItem._private.semanticObjectTypeAttributes = semanticObjectTypeAttributes;\n\n        const itemPostParser = this.sina._createItemPostParser({\n            searchResultSetItem: searchResultSetItem,\n        });\n        const postResultSetItem = await itemPostParser.postParseResultSetItem();\n\n        return await whyFoundProcessor.processAdditionalWhyfoundAttributes(whyFounds, postResultSetItem);\n    }\n\n    private preParseItem(itemData: HANAOdataSearchResponseResultItem): Record<string, { value: ODataValue }> {\n        const itemDataStructured = {};\n        for (const originalPropertyName in itemData) {\n            if (originalPropertyName[0] === \"@\" || originalPropertyName[0] === \"_\") {\n                continue;\n            }\n            const value = itemData[originalPropertyName];\n            const splitted = originalPropertyName.split(\"@\");\n            const propertyName = splitted[0];\n            let substructure = itemDataStructured[propertyName];\n            if (!substructure) {\n                substructure = {};\n                itemDataStructured[propertyName] = substructure;\n            }\n            if (splitted.length === 1) {\n                substructure.value = value;\n                continue;\n            }\n            if (splitted.length === 2) {\n                substructure[splitted[1]] = value;\n                continue;\n            }\n            throw \"more than two @ in property name\";\n        }\n        return itemDataStructured;\n    }\n}\n"],"mappings":"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","ignoreList":[]}