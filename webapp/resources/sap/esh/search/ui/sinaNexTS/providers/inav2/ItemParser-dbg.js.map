{"version":3,"file":"ItemParser-dbg.js","names":["sap","ui","define","util","typeConverter","pivotTableParser","____core_errors","WhyFoundAttributeMetadataMissingError","ItemParser","provider","sina","intentsResolver","constructor","_createFioriIntentsResolver","parse","searchQuery","data","totalCount","parseTotalCount","axes","length","Promise","resolve","items","itemsData","itemProms","i","itemData","metadataParser","parseSearchRequestMetadata","itemProm","parseItem","push","all","then","ItemLists","TotalCount","Value","titleAttributes","detailAttributes","semanticObjectTypeAttributes","dataSource","getDataSource","$$DataSourceMetaData$$","ObjectName","m","$$ResultItemAttributes$$","attributeData","metadata","getAttributeMetadata","Name","attribute","_createSearchResultSetItemAttribute","id","label","value","ina2Sina","type","valueFormatted","ValueFormatted","valueHighlighted","isHighlighted","usage","Title","Detail","$$AttributeMetadata$$","attributeMetadata","SemanticObjectType","name","sort","a1","a2","displayOrder","parseWhyFound","fallbackDefaultNavigationTarget","k","$$RelatedActions$$","relatedAction","Type","Description","targetUrl","encodeURI","Uri","createNavigationTarget","text","semanticObjectType","systemId","SystemId","client","Client","resolveIntents","intents","defaultNavigationTarget","navigationTargets","item","_createSearchResultSetItem","titleDescriptionAttributes","bind","whyFound","whyFoundAttributeId","j","$$WhyFound$$","getResponseAttributeId","matched","filterString","requestAttributeId","requestAttributeMetadata","getInternalMetadataAttribute","responseAttributeMetadata","correspondingSearchAttributeName","__exports","__esModule"],"sources":["ItemParser.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\nimport * as util from \"../../core/util\";\nimport * as typeConverter from \"./typeConverter\";\nimport * as pivotTableParser from \"./pivotTableParser\";\nimport { Sina } from \"../../sina/Sina\";\nimport { FioriIntentsResolver } from \"../tools/fiori/FioriIntentsResolver\";\nimport { Provider } from \"./Provider\";\nimport { SearchQuery } from \"../../sina/SearchQuery\";\nimport { WhyFoundAttributeMetadataMissingError } from \"../../core/errors\";\nimport { AttributeMetadata } from \"../../sina/AttributeMetadata\";\n\nexport class ItemParser {\n    provider: Provider;\n    sina: Sina;\n    intentsResolver: FioriIntentsResolver;\n\n    constructor(provider: Provider) {\n        this.provider = provider;\n        this.sina = provider.sina;\n        this.intentsResolver = this.sina._createFioriIntentsResolver();\n    }\n\n    parse(searchQuery: SearchQuery, data) {\n        const totalCount = this.parseTotalCount(data);\n        data = pivotTableParser.parse(data);\n        if (data.axes.length === 0) {\n            return Promise.resolve({\n                totalCount: 0,\n                items: [],\n            });\n        }\n        const itemsData = data.axes[0];\n        const itemProms = [];\n        for (let i = 0; i < itemsData.length; ++i) {\n            const itemData = itemsData[i];\n            this.provider.metadataParser.parseSearchRequestMetadata(itemData);\n            const itemProm = this.parseItem(itemData);\n            itemProms.push(itemProm);\n        }\n        return Promise.all(itemProms).then(function (items) {\n            return {\n                totalCount: totalCount,\n                items: items,\n            };\n        });\n    }\n\n    parseTotalCount(data) {\n        if (data.ItemLists && data.ItemLists[0] && data.ItemLists[0].TotalCount) {\n            return data.ItemLists[0].TotalCount.Value;\n        }\n        return 0;\n    }\n\n    parseItem(itemData) {\n        const titleAttributes = [];\n        const detailAttributes = [];\n        const semanticObjectTypeAttributes = [];\n\n        const dataSource = this.sina.getDataSource(itemData.$$DataSourceMetaData$$[0].ObjectName);\n\n        for (let m = 0; m < itemData.$$ResultItemAttributes$$.length; ++m) {\n            const attributeData = itemData.$$ResultItemAttributes$$[m];\n            const metadata = dataSource.getAttributeMetadata(attributeData.Name);\n\n            const attribute = this.sina._createSearchResultSetItemAttribute({\n                id: attributeData.Name,\n                label: (dataSource.getAttributeMetadata(attributeData.Name) as AttributeMetadata).label,\n                value: typeConverter.ina2Sina(metadata.type, attributeData.Value),\n                valueFormatted: attributeData.ValueFormatted || attributeData.Value,\n                valueHighlighted: attributeData.ValueFormatted || attributeData.Value,\n                isHighlighted: false,\n                metadata: metadata,\n            });\n\n            if (metadata.usage.Title) {\n                titleAttributes.push(attribute);\n            }\n            if (metadata.usage.Detail) {\n                detailAttributes.push(attribute);\n            }\n\n            // TO DO maybe get metadata out of metadata buffer?\n            for (let i = 0; i < itemData.$$AttributeMetadata$$.length; i++) {\n                const attributeMetadata = itemData.$$AttributeMetadata$$[i];\n                if (attributeMetadata.Name == attributeData.Name) {\n                    if (\n                        attributeMetadata.SemanticObjectType &&\n                        attributeMetadata.SemanticObjectType.length > 0\n                    ) {\n                        semanticObjectTypeAttributes.push({\n                            name: attributeMetadata.SemanticObjectType,\n                            value: attribute.value,\n                            type: attribute.metadata.type,\n                        });\n                    }\n                    break;\n                }\n            }\n        }\n\n        titleAttributes.sort(function (a1, a2) {\n            return a1.metadata.usage.Title.displayOrder - a2.metadata.usage.Title.displayOrder;\n        });\n\n        detailAttributes.sort(function (a1, a2) {\n            return a1.metadata.usage.Detail.displayOrder - a2.metadata.usage.Detail.displayOrder;\n        });\n\n        this.parseWhyFound(dataSource, titleAttributes, detailAttributes, itemData);\n\n        let fallbackDefaultNavigationTarget;\n        for (let k = 0; k < itemData.$$RelatedActions$$.length; ++k) {\n            const relatedAction = itemData.$$RelatedActions$$[k];\n\n            if (relatedAction.Type === \"GeneralUri\" || relatedAction.Type === \"SAPNavigation\") {\n                const label = relatedAction.Description;\n                const targetUrl = encodeURI(relatedAction.Uri);\n                fallbackDefaultNavigationTarget = this.sina.createNavigationTarget({\n                    text: label,\n                    targetUrl: targetUrl,\n                });\n            }\n        }\n\n        const semanticObjectType = itemData.$$DataSourceMetaData$$[0].SemanticObjectType;\n        const systemId = itemData.$$DataSourceMetaData$$[0].SystemId;\n        const client = itemData.$$DataSourceMetaData$$[0].Client;\n\n        return this.intentsResolver\n            .resolveIntents({\n                semanticObjectType: semanticObjectType,\n                semanticObjectTypeAttributes: semanticObjectTypeAttributes,\n                systemId: systemId,\n                client: client,\n                fallbackDefaultNavigationTarget: fallbackDefaultNavigationTarget,\n            })\n            .then(\n                function (intents) {\n                    const defaultNavigationTarget = intents && intents.defaultNavigationTarget;\n                    const navigationTargets = intents && intents.navigationTargets;\n                    const item = this.sina._createSearchResultSetItem({\n                        dataSource: dataSource,\n                        titleAttributes: titleAttributes,\n                        titleDescriptionAttributes: [],\n                        detailAttributes: detailAttributes,\n                        defaultNavigationTarget: defaultNavigationTarget,\n                        navigationTargets: navigationTargets,\n                    });\n                    return item;\n                }.bind(this)\n            );\n    }\n\n    parseWhyFound(dataSource, titleAttributes, detailAttributes, itemData) {\n        // 1. move why found to title and detail attributes\n        let i, whyFound, whyFoundAttributeId, j, attribute;\n        for (i = 0; i < itemData.$$WhyFound$$.length; i++) {\n            whyFound = itemData.$$WhyFound$$[i];\n            whyFoundAttributeId = this.getResponseAttributeId(dataSource, whyFound.Name);\n            for (j = 0; j < titleAttributes.length; ++j) {\n                attribute = titleAttributes[j];\n                if (whyFoundAttributeId === attribute.id) {\n                    whyFound.matched = true;\n                    attribute.valueHighlighted = whyFound.Value;\n                    attribute.isHighlighted = true;\n                    break;\n                }\n            }\n            for (j = 0; j < detailAttributes.length; ++j) {\n                attribute = detailAttributes[j];\n                if (whyFoundAttributeId === attribute.id) {\n                    whyFound.matched = true;\n                    attribute.valueHighlighted = whyFound.Value;\n                    attribute.isHighlighted = true;\n                    break;\n                }\n            }\n        }\n\n        // 2. for why founds without title or detail attribute: create artifical attribute and append to detail attributes\n        for (i = 0; i < itemData.$$WhyFound$$.length; i++) {\n            whyFound = itemData.$$WhyFound$$[i];\n            if (whyFound.matched) {\n                continue;\n            }\n            whyFoundAttributeId = this.getResponseAttributeId(dataSource, whyFound.Name);\n            const metadata = dataSource.getAttributeMetadata(whyFoundAttributeId);\n            if (!metadata) {\n                throw new WhyFoundAttributeMetadataMissingError(whyFoundAttributeId);\n            }\n            attribute = this.sina._createSearchResultSetItemAttribute({\n                id: metadata.id,\n                label: metadata.label,\n                value: null,\n                valueFormatted: util.filterString(whyFound.Value, [\"<b>\", \"</b>\"]),\n                valueHighlighted: whyFound.Value,\n                isHighlighted: true,\n                metadata: metadata,\n            });\n            detailAttributes.push(attribute);\n        }\n    }\n\n    getResponseAttributeId(dataSource, requestAttributeId) {\n        const requestAttributeMetadata = this.provider.getInternalMetadataAttribute(\n            dataSource,\n            requestAttributeId\n        );\n        if (!requestAttributeMetadata) {\n            return requestAttributeId;\n        }\n        const responseAttributeMetadata = this.provider.getInternalMetadataAttribute(\n            dataSource,\n            requestAttributeMetadata.correspondingSearchAttributeName\n        );\n        if (!responseAttributeMetadata) {\n            return requestAttributeId;\n        }\n        return responseAttributeMetadata.Name;\n    }\n}\n"],"mappings":"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","ignoreList":[]}