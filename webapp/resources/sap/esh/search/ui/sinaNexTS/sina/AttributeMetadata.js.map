{"version":3,"file":"AttributeMetadata.js","names":["sap","ui","define","___AttributeMetadataBase","AttributeMetadataBase","AttributeMetadata","label","isSortable","isKey","matchingStrategy","isHierarchy","hierarchyName","hierarchyDisplayType","iconUrlAttributeName","_private","semanticObjectType","temporaryUsage","constructor","properties","super","this","format","semantics","toJson","id","type","displayOrder","usage","fromJson","attributeJson","sina","_createAttributeMetadata","__exports","__esModule"],"sources":["AttributeMetadata.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\nimport { AttributeFormatType } from \"./AttributeFormatType\";\nimport {\n    AttributeMetadataBase,\n    AttributeMetadataBaseJSON,\n    AttributeMetadataBaseOptions,\n} from \"./AttributeMetadataBase\";\nimport { AttributeSemanticsType } from \"./AttributeSemanticsType\";\nimport { HierarchyDisplayType } from \"./HierarchyDisplayType\";\nimport { MatchingStrategy } from \"./MatchingStrategy\";\nimport { AttributeUsageType } from \"./AttributeUsageType\";\nimport { Sina } from \"./Sina\";\n\nexport interface AttributeMetadataOptions extends AttributeMetadataBaseOptions {\n    label: string;\n    isSortable: boolean;\n    format?: AttributeFormatType;\n    isKey: boolean;\n    semantics?: AttributeSemanticsType;\n    matchingStrategy: MatchingStrategy;\n    isHierarchy?: boolean;\n    hierarchyName?: string;\n    hierarchyDisplayType?: HierarchyDisplayType;\n    iconUrlAttributeName?: string;\n}\nexport interface AttributeMetadataJSON extends AttributeMetadataBaseJSON {\n    isKey: boolean;\n    matchingStrategy: MatchingStrategy;\n}\n\nexport class AttributeMetadata extends AttributeMetadataBase {\n    // _meta: {\n    //     properties: {\n    //         type: {\n    //             required: true\n    //         },\n    //         label: {\n    //             required: true\n    //         },\n    //         isSortable: {\n    //             required: true\n    //         },\n    //         format: {\n    //             required: false\n    //             // TODO: multiple: true?\n    //         },\n    //         isKey: { // TODO: replace/amend with keyAttribute in SearchResultSetItem\n    //             required: true\n    //         },\n    //         semantics: {\n    //             required: false\n    //         },\n    //         matchingStrategy: {\n    //             required: true\n    //         }\n    //     }\n    // }\n\n    label: string;\n    isSortable: boolean;\n    isKey: boolean;\n    matchingStrategy: MatchingStrategy;\n    isHierarchy: boolean;\n    hierarchyName: string;\n    hierarchyDisplayType?: HierarchyDisplayType;\n    iconUrlAttributeName?: string;\n    _private: {\n        semanticObjectType: string;\n        temporaryUsage: AttributeUsageType;\n        dynamic?: unknown;\n    } = {\n        semanticObjectType: \"\",\n        temporaryUsage: {},\n    };\n\n    constructor(properties: AttributeMetadataOptions) {\n        super(properties);\n        this.label = properties.label ?? this.label;\n        this.isSortable = properties.isSortable ?? this.isSortable;\n        this.format = properties.format ?? this.format;\n        this.isKey = properties.isKey ?? this.isKey;\n        this.semantics = properties.semantics ?? this.semantics;\n        this.matchingStrategy = properties.matchingStrategy ?? this.matchingStrategy;\n        this.isHierarchy = properties.isHierarchy ?? false;\n        this.hierarchyName = properties.hierarchyName;\n        this.hierarchyDisplayType = properties.hierarchyDisplayType;\n        this.iconUrlAttributeName = properties.iconUrlAttributeName;\n    }\n\n    toJson(): AttributeMetadataJSON {\n        return {\n            id: this.id,\n            label: this.label,\n            type: this.type,\n            displayOrder: this?.displayOrder,\n            isSortable: this?.isSortable,\n            usage: this?.usage,\n            isKey: this?.isKey,\n            matchingStrategy: this?.matchingStrategy,\n            format: this?.format,\n        };\n    }\n\n    static fromJson(attributeJson: AttributeMetadataJSON, sina: Sina): AttributeMetadata {\n        return sina._createAttributeMetadata({\n            id: attributeJson.id,\n            type: attributeJson.type,\n            label: attributeJson.label,\n            isSortable: attributeJson.isSortable,\n            matchingStrategy: attributeJson.matchingStrategy,\n            isKey: attributeJson.isKey,\n            usage: attributeJson.usage,\n            format: attributeJson.format,\n        });\n    }\n}\n"],"mappings":";;;;;AAAAA,IAAAC,GAAAC,OAAA,qCAAAC,GAAA,mBAOIC,EAAqBD,EAAA,yBA2BlB,MAAME,UAA0BD,EA4BnCE,MACAC,WACAC,MACAC,iBACAC,YACAC,cACAC,qBACAC,qBACAC,SAII,CACAC,mBAAoB,GACpBC,eAAgB,CAAC,GAGrBC,YAAYC,GACRC,MAAMD,GACNE,KAAKd,MAAQY,EAAWZ,OAASc,KAAKd,MACtCc,KAAKb,WAAaW,EAAWX,YAAca,KAAKb,WAChDa,KAAKC,OAASH,EAAWG,QAAUD,KAAKC,OACxCD,KAAKZ,MAAQU,EAAWV,OAASY,KAAKZ,MACtCY,KAAKE,UAAYJ,EAAWI,WAAaF,KAAKE,UAC9CF,KAAKX,iBAAmBS,EAAWT,kBAAoBW,KAAKX,iBAC5DW,KAAKV,YAAcQ,EAAWR,aAAe,MAC7CU,KAAKT,cAAgBO,EAAWP,cAChCS,KAAKR,qBAAuBM,EAAWN,qBACvCQ,KAAKP,qBAAuBK,EAAWL,oBAC3C,CAEAU,SACI,MAAO,CACHC,GAAIJ,KAAKI,GACTlB,MAAOc,KAAKd,MACZmB,KAAML,KAAKK,KACXC,aAAcN,MAAMM,aACpBnB,WAAYa,MAAMb,WAClBoB,MAAOP,MAAMO,MACbnB,MAAOY,MAAMZ,MACbC,iBAAkBW,MAAMX,iBACxBY,OAAQD,MAAMC,OAEtB,CAEA,eAAOO,CAASC,EAAsCC,GAClD,OAAOA,EAAKC,yBAAyB,CACjCP,GAAIK,EAAcL,GAClBC,KAAMI,EAAcJ,KACpBnB,MAAOuB,EAAcvB,MACrBC,WAAYsB,EAActB,WAC1BE,iBAAkBoB,EAAcpB,iBAChCD,MAAOqB,EAAcrB,MACrBmB,MAAOE,EAAcF,MACrBN,OAAQQ,EAAcR,QAE9B,EACH,IAAAW,EAAA,CAAAC,WAAA,MAAAD,EAAA3B,oBAAA,OAAA2B,CAAA","ignoreList":[]}