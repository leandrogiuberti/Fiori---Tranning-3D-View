{"version":3,"file":"SimpleCondition-dbg.js","names":["sap","ui","define","util","___ComparisonOperator","___Condition","___ConditionType","ComparisonOperator","Condition","ConditionType","isSimpleCondition","condition","SimpleCondition","type","Simple","operator","Eq","attribute","isDynamicValue","value","constructor","properties","userDefined","setSina","sina","clone","attributeLabel","valueLabel","equals","other","Date","getTime","containsAttribute","_collectAttributes","attributeMap","getFirstAttribute","_collectFilterConditions","filterConditions","push","removeAttributeConditions","deleted","toJson","jsonValue","dateToJson","result","dynamic","fromString","simpleConditionString","parts","split","shift","Error","join","replace","startsWith","endsWith","slice","toString","escapedValue","__exports","__esModule"],"sources":["SimpleCondition.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\nimport * as util from \"../core/util\";\nimport { ComparisonOperator } from \"./ComparisonOperator\";\nimport { Condition, ConditionProperties } from \"./Condition\";\nimport { ConditionType } from \"./ConditionType\";\nimport type { Sina } from \"./Sina\";\nimport { Value } from \"./types\";\n\nexport interface SimpleConditionJSON {\n    type: ConditionType;\n    operator: ComparisonOperator;\n    value:\n        | unknown\n        | Date\n        | number\n        | {\n              type: string;\n              value: string;\n          };\n    valueLabel: string;\n    attribute: string;\n    attributeLabel: string;\n    userDefined?: boolean;\n    dynamic?: boolean;\n}\n\nexport function isSimpleCondition(condition: unknown): condition is SimpleCondition {\n    return condition instanceof SimpleCondition;\n}\n\n// _meta: {\n//     properties: {\n//         operator: {\n//             required: false,\n//             default: function () {\n//                 return this.sina.ComparisonOperator.Eq;\n//             }\n//         },\n//         attribute: {\n//             required: true\n//         },\n//         value: {\n//             required: true\n//         }\n//     }\n// },\nexport interface SimpleConditionProperties extends ConditionProperties {\n    operator?: ComparisonOperator;\n    attribute: string;\n    userDefined?: boolean | null;\n    isDynamicValue?: boolean;\n    value: Value;\n}\nexport class SimpleCondition extends Condition {\n    type: ConditionType = ConditionType.Simple;\n    operator: ComparisonOperator = ComparisonOperator.Eq;\n    attribute: string;\n    isDynamicValue: boolean;\n    value: Value;\n\n    constructor(properties: SimpleConditionProperties) {\n        super(properties);\n        this.operator = properties.operator ?? this.operator;\n        this.attribute = properties.attribute ?? this.attribute;\n        this.userDefined = properties.userDefined ?? this.userDefined;\n        this.isDynamicValue = properties.isDynamicValue ?? false;\n        this.value = properties.value ?? this.value;\n    }\n\n    setSina(sina: Sina) {\n        this.sina = sina;\n    }\n\n    clone(): SimpleCondition {\n        return new SimpleCondition({\n            operator: this.operator,\n            attribute: this.attribute,\n            attributeLabel: this.attributeLabel,\n            value: this.value,\n            valueLabel: this.valueLabel,\n            userDefined: this.userDefined,\n            isDynamicValue: this.isDynamicValue,\n        });\n    }\n\n    equals(other: SimpleCondition): boolean {\n        if (!(other instanceof SimpleCondition)) {\n            return false;\n        }\n        if (this.attribute !== other.attribute || this.operator !== other.operator) {\n            return false;\n        }\n        if (this.isDynamicValue !== other.isDynamicValue) {\n            return false;\n        }\n        if (this.value instanceof Date && other.value instanceof Date) {\n            return this.value.getTime() === other.value.getTime();\n        }\n        return this.value === other.value;\n    }\n\n    containsAttribute(attribute: string): boolean {\n        return this.attribute === attribute;\n    }\n\n    _collectAttributes(attributeMap: { [attributeId: string]: boolean }): void {\n        attributeMap[this.attribute] = true;\n    }\n\n    getFirstAttribute(): string {\n        return this.attribute;\n    }\n\n    _collectFilterConditions(attribute: string, filterConditions: SimpleCondition[]) {\n        if (this.attribute === attribute) {\n            filterConditions.push(this);\n        }\n    }\n\n    removeAttributeConditions(attribute: string): {\n        deleted: false;\n        attribute: \"\";\n        value: \"\";\n    } {\n        if (this.attribute === attribute) {\n            throw \"program error\";\n        }\n        return {\n            deleted: false,\n            attribute: \"\",\n            value: \"\",\n        };\n    }\n\n    toJson(): SimpleConditionJSON {\n        let jsonValue;\n        if (this.value instanceof Date) {\n            jsonValue = util.dateToJson(this.value);\n        } else {\n            jsonValue = this.value;\n        }\n        const result: SimpleConditionJSON = {\n            type: ConditionType.Simple,\n            operator: this.operator,\n            attribute: this.attribute,\n            value: jsonValue,\n            valueLabel: this.valueLabel,\n            attributeLabel: this.attributeLabel,\n        };\n        if (this.userDefined) {\n            result.userDefined = true;\n        }\n        if (this.isDynamicValue) {\n            result.dynamic = this.isDynamicValue;\n        }\n        return result;\n    }\n\n    static fromString(simpleConditionString: string): SimpleCondition {\n        const parts = simpleConditionString.split(\" \");\n        const attribute = parts.shift();\n        const operator = ComparisonOperator[parts.shift() as keyof typeof ComparisonOperator];\n        if (!operator) {\n            throw new Error(\n                `Invalid operator ${operator} in simple condition string: ${simpleConditionString}`\n            );\n        }\n        let value = parts.join(\" \").replace(/''/g, \"'\"); // Add escaped single quotes\n        if (value.startsWith(\"'\") && value.endsWith(\"'\")) {\n            // Remove surrounding single quotes\n            value = value.slice(1, -1);\n        }\n        return new SimpleCondition({\n            attribute,\n            operator,\n            value,\n        });\n    }\n\n    toString(): string {\n        const escapedValue = this.value.toString().replace(/'/g, \"''\");\n        return `${this.attribute} ${this.operator} '${escapedValue}'`;\n    }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAJAA,GAAA,CAAAC,EAAA,CAAAC,MAAA,uFAAAC,IAAA,EAAAC,qBAAA,EAAAC,YAAA,EAAAC,gBAAA;EAAA;;EAAA,MAMSC,kBAAkB,GAAAH,qBAAA;EAAA,MAClBI,SAAS,GAAAH,YAAA;EAAA,MACTI,aAAa,GAAAH,gBAAA;EAsBf,SAASI,iBAAiBA,CAACC,SAAkB,EAAgC;IAChF,OAAOA,SAAS,YAAYC,eAAe;EAC/C;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAQO,MAAMA,eAAe,SAASJ,SAAS,CAAC;IAC3CK,IAAI,GAAkBJ,aAAa,CAACK,MAAM;IAC1CC,QAAQ,GAAuBR,kBAAkB,CAACS,EAAE;IACpDC,SAAS;IACTC,cAAc;IACdC,KAAK;IAELC,WAAWA,CAACC,UAAqC,EAAE;MAC/C,KAAK,CAACA,UAAU,CAAC;MACjB,IAAI,CAACN,QAAQ,GAAGM,UAAU,CAACN,QAAQ,IAAI,IAAI,CAACA,QAAQ;MACpD,IAAI,CAACE,SAAS,GAAGI,UAAU,CAACJ,SAAS,IAAI,IAAI,CAACA,SAAS;MACvD,IAAI,CAACK,WAAW,GAAGD,UAAU,CAACC,WAAW,IAAI,IAAI,CAACA,WAAW;MAC7D,IAAI,CAACJ,cAAc,GAAGG,UAAU,CAACH,cAAc,IAAI,KAAK;MACxD,IAAI,CAACC,KAAK,GAAGE,UAAU,CAACF,KAAK,IAAI,IAAI,CAACA,KAAK;IAC/C;IAEAI,OAAOA,CAACC,IAAU,EAAE;MAChB,IAAI,CAACA,IAAI,GAAGA,IAAI;IACpB;IAEAC,KAAKA,CAAA,EAAoB;MACrB,OAAO,IAAIb,eAAe,CAAC;QACvBG,QAAQ,EAAE,IAAI,CAACA,QAAQ;QACvBE,SAAS,EAAE,IAAI,CAACA,SAAS;QACzBS,cAAc,EAAE,IAAI,CAACA,cAAc;QACnCP,KAAK,EAAE,IAAI,CAACA,KAAK;QACjBQ,UAAU,EAAE,IAAI,CAACA,UAAU;QAC3BL,WAAW,EAAE,IAAI,CAACA,WAAW;QAC7BJ,cAAc,EAAE,IAAI,CAACA;MACzB,CAAC,CAAC;IACN;IAEAU,MAAMA,CAACC,KAAsB,EAAW;MACpC,IAAI,EAAEA,KAAK,YAAYjB,eAAe,CAAC,EAAE;QACrC,OAAO,KAAK;MAChB;MACA,IAAI,IAAI,CAACK,SAAS,KAAKY,KAAK,CAACZ,SAAS,IAAI,IAAI,CAACF,QAAQ,KAAKc,KAAK,CAACd,QAAQ,EAAE;QACxE,OAAO,KAAK;MAChB;MACA,IAAI,IAAI,CAACG,cAAc,KAAKW,KAAK,CAACX,cAAc,EAAE;QAC9C,OAAO,KAAK;MAChB;MACA,IAAI,IAAI,CAACC,KAAK,YAAYW,IAAI,IAAID,KAAK,CAACV,KAAK,YAAYW,IAAI,EAAE;QAC3D,OAAO,IAAI,CAACX,KAAK,CAACY,OAAO,CAAC,CAAC,KAAKF,KAAK,CAACV,KAAK,CAACY,OAAO,CAAC,CAAC;MACzD;MACA,OAAO,IAAI,CAACZ,KAAK,KAAKU,KAAK,CAACV,KAAK;IACrC;IAEAa,iBAAiBA,CAACf,SAAiB,EAAW;MAC1C,OAAO,IAAI,CAACA,SAAS,KAAKA,SAAS;IACvC;IAEAgB,kBAAkBA,CAACC,YAAgD,EAAQ;MACvEA,YAAY,CAAC,IAAI,CAACjB,SAAS,CAAC,GAAG,IAAI;IACvC;IAEAkB,iBAAiBA,CAAA,EAAW;MACxB,OAAO,IAAI,CAAClB,SAAS;IACzB;IAEAmB,wBAAwBA,CAACnB,SAAiB,EAAEoB,gBAAmC,EAAE;MAC7E,IAAI,IAAI,CAACpB,SAAS,KAAKA,SAAS,EAAE;QAC9BoB,gBAAgB,CAACC,IAAI,CAAC,IAAI,CAAC;MAC/B;IACJ;IAEAC,yBAAyBA,CAACtB,SAAiB,EAIzC;MACE,IAAI,IAAI,CAACA,SAAS,KAAKA,SAAS,EAAE;QAC9B,MAAM,eAAe;MACzB;MACA,OAAO;QACHuB,OAAO,EAAE,KAAK;QACdvB,SAAS,EAAE,EAAE;QACbE,KAAK,EAAE;MACX,CAAC;IACL;IAEAsB,MAAMA,CAAA,EAAwB;MAC1B,IAAIC,SAAS;MACb,IAAI,IAAI,CAACvB,KAAK,YAAYW,IAAI,EAAE;QAC5BY,SAAS,GAAGvC,IAAI,CAACwC,UAAU,CAAC,IAAI,CAACxB,KAAK,CAAC;MAC3C,CAAC,MAAM;QACHuB,SAAS,GAAG,IAAI,CAACvB,KAAK;MAC1B;MACA,MAAMyB,MAA2B,GAAG;QAChC/B,IAAI,EAAEJ,aAAa,CAACK,MAAM;QAC1BC,QAAQ,EAAE,IAAI,CAACA,QAAQ;QACvBE,SAAS,EAAE,IAAI,CAACA,SAAS;QACzBE,KAAK,EAAEuB,SAAS;QAChBf,UAAU,EAAE,IAAI,CAACA,UAAU;QAC3BD,cAAc,EAAE,IAAI,CAACA;MACzB,CAAC;MACD,IAAI,IAAI,CAACJ,WAAW,EAAE;QAClBsB,MAAM,CAACtB,WAAW,GAAG,IAAI;MAC7B;MACA,IAAI,IAAI,CAACJ,cAAc,EAAE;QACrB0B,MAAM,CAACC,OAAO,GAAG,IAAI,CAAC3B,cAAc;MACxC;MACA,OAAO0B,MAAM;IACjB;IAEA,OAAOE,UAAUA,CAACC,qBAA6B,EAAmB;MAC9D,MAAMC,KAAK,GAAGD,qBAAqB,CAACE,KAAK,CAAC,GAAG,CAAC;MAC9C,MAAMhC,SAAS,GAAG+B,KAAK,CAACE,KAAK,CAAC,CAAC;MAC/B,MAAMnC,QAAQ,GAAGR,kBAAkB,CAACyC,KAAK,CAACE,KAAK,CAAC,CAAC,CAAoC;MACrF,IAAI,CAACnC,QAAQ,EAAE;QACX,MAAM,IAAIoC,KAAK,CACX,oBAAoBpC,QAAQ,gCAAgCgC,qBAAqB,EACrF,CAAC;MACL;MACA,IAAI5B,KAAK,GAAG6B,KAAK,CAACI,IAAI,CAAC,GAAG,CAAC,CAACC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,CAAC;MACjD,IAAIlC,KAAK,CAACmC,UAAU,CAAC,GAAG,CAAC,IAAInC,KAAK,CAACoC,QAAQ,CAAC,GAAG,CAAC,EAAE;QAC9C;QACApC,KAAK,GAAGA,KAAK,CAACqC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;MAC9B;MACA,OAAO,IAAI5C,eAAe,CAAC;QACvBK,SAAS;QACTF,QAAQ;QACRI;MACJ,CAAC,CAAC;IACN;IAEAsC,QAAQA,CAAA,EAAW;MACf,MAAMC,YAAY,GAAG,IAAI,CAACvC,KAAK,CAACsC,QAAQ,CAAC,CAAC,CAACJ,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC;MAC9D,OAAO,GAAG,IAAI,CAACpC,SAAS,IAAI,IAAI,CAACF,QAAQ,KAAK2C,YAAY,GAAG;IACjE;EACJ;EAAC,IAAAC,SAAA;IAAAC,UAAA;EAAA;EAAAD,SAAA,CAAAjD,iBAAA,GAAAA,iBAAA;EAAAiD,SAAA,CAAA/C,eAAA,GAAAA,eAAA;EAAA,OAAA+C,SAAA;AAAA","ignoreList":[]}