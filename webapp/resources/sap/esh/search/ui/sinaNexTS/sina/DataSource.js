/*!
 * SAPUI5
 * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.
 * 
 */
sap.ui.define(["../core/errors","./SinaObject","./DataSourceType","./AttributeMetadata","./AttributeGroupMetadata","./HierarchyDisplayType","./MatchingStrategy","./AttributeType","./AttributeMetadataBase"],function(t,a,e,i,r,s,u,n,o){"use strict";const h=a["SinaObject"];const c=e["DataSourceType"];const d=i["AttributeMetadata"];const l=r["AttributeGroupMetadata"];const b=t["DataSourceAttributeMetadataNotFoundError"];const y=s["HierarchyDisplayType"];const p=u["MatchingStrategy"];const M=n["AttributeType"];const f=o["AttributeMetadataBase"];var g=function(t){t["DataSourceJSON"]="DataSourceJSON";t["DataSourceAndAttributesJSON"]="DataSourceAndAttributesJSON";return t}(g||{});class A extends h{annotations;type;subType;id;label;labelPlural;icon;hidden=false;usage={};attributesMetadata=[];attributeMetadataMap={};attributeGroupsMetadata=[];attributeGroupMetadataMap={};isHierarchyDataSource;hierarchyName;hierarchyDisplayType;hierarchyAttribute;nlq=false;_hierarchyDataSource;system;_hierarchyAttributeGroupMetadata;_staticHierarchyAttributeMetadata;defaultNavigationTarget;navigationTargets;static getAllDataSource(){return new A({id:"All",label:"All",type:c.Category})}constructor(t){super({sina:t.sina});this.annotations=t.annotations??this.annotations;this.type=t.type??this.type;this.subType=t.subType;this.id=t.id??this.id;this.label=t.label??this.label;this.labelPlural=t.labelPlural??this.labelPlural;this.icon=t.icon;this.hidden=t.hidden??this.hidden;this.usage=t.usage??this.usage;this.attributesMetadata=t.attributesMetadata??this.attributesMetadata;this.attributeMetadataMap=t.attributeMetadataMap??this.createAttributeMetadataMap(this.attributesMetadata);this.attributeGroupsMetadata=t.attributeGroupsMetadata??this.attributeGroupsMetadata;this.attributeGroupMetadataMap=t.attributeGroupMetadataMap??this.attributeGroupMetadataMap;this.isHierarchyDataSource=t.isHierarchyDataSource;this.hierarchyName=t.hierarchyName;this.hierarchyDisplayType=t.hierarchyDisplayType;this.hierarchyAttribute=t.hierarchyAttribute;this.nlq=t.nlq??this.nlq;if(!this.labelPlural||this.labelPlural.length===0){this.labelPlural=this.label}this.defaultNavigationTarget=t.defaultNavigationTarget??undefined;this.navigationTargets=t.navigationTargets??[];if(this.type===c.BusinessObject&&this.attributesMetadata.length===0){}}_configure(){const t=this.sina.metadataFormatters;if(!t){return}for(let a=0;a<t.length;++a){const e=t[a];e.format({dataSources:[this]})}}createAttributeMetadataMap(t=[]){const a={};for(let e=0;e<t.length;++e){const i=t[e];a[i.id]=i}return a}getAttributeMetadata(t){if(this.id==="All"){return this.getCommonAttributeMetadata(t)}if(this.id==="CD$ALL~ESH_TRANSACTION~"&&(t==="TCDTEXT"||t==="TCODE")&&!this.attributeMetadataMap[t]){this.attributeMetadataMap[t]=new d({label:"label",isSortable:false,isKey:false,matchingStrategy:p.Text,id:t,usage:{Title:{displayOrder:1}},type:M.String})}const a=this.attributeMetadataMap[t];if(a){return a}throw new b(t,this.id)}getAttributeGroupMetadata(t){if(this.attributeGroupMetadataMap){const a=this.attributeMetadataMap[t.toUpperCase()];if(a&&a instanceof l){return a}}throw new b(t,this.id)}getCommonAttributeMetadata(t){for(const a of this.sina.dataSources){if(a.type!==c.BusinessObject){continue}const e=a.attributeMetadataMap[t];if(e){return e}}throw new b(t,this.id)}getHierarchyDataSource(){if(this._hierarchyDataSource instanceof A){return this._hierarchyDataSource}for(let t=0;t<this.attributesMetadata.length;++t){const a=this.attributesMetadata[t];if(!a.isHierarchy){continue}if(a.hierarchyDisplayType===y.StaticHierarchyFacet||a.hierarchyDisplayType===y.HierarchyResultView){this._hierarchyDataSource=this.sina.getHierarchyDataSource(a.hierarchyName);return this._hierarchyDataSource}}return undefined}getStaticHierarchyAttributeMetadata(){if(this._staticHierarchyAttributeMetadata){return this._staticHierarchyAttributeMetadata}for(let t=0;t<this.attributesMetadata.length;++t){const a=this.attributesMetadata[t];if(!a.isHierarchy){continue}if(a.hierarchyDisplayType===y.StaticHierarchyFacet){this._staticHierarchyAttributeMetadata=a;return this._staticHierarchyAttributeMetadata}}return undefined}_getStaticHierarchyAttributeForDisplay(){if(this._hierarchyAttributeGroupMetadata instanceof l||this._hierarchyAttributeGroupMetadata instanceof f){return this._hierarchyAttributeGroupMetadata}const t=this.hierarchyAttribute||this.getHierarchyDataSource()?.hierarchyAttribute;if(!t){return undefined}for(let a=0;a<this.attributeGroupsMetadata.length;a++){const e=this.attributeGroupsMetadata[a];const i=e._private?.parentAttribute;if(i instanceof d&&i.id===t&&e._private?.isDescription===true){this._hierarchyAttributeGroupMetadata=e;return this._hierarchyAttributeGroupMetadata}}this._hierarchyAttributeGroupMetadata=this.attributeMetadataMap[this.hierarchyAttribute];return this._hierarchyAttributeGroupMetadata}toString(){return this.label}toJson(t){const a={type:this.type,id:this.id,label:this.label,labelPlural:this.labelPlural||this.label};if(t===undefined||t===g.DataSourceJSON){return a}console.log("===== Parse Json From DataSource: =====\n");a.attributes=[];for(const t of this.attributesMetadata){if(t instanceof l||t instanceof d){a.attributes.push(t.toJson())}}console.log(JSON.stringify(a));console.info("===== Info: make sure the same naming of {dataSource}.json and id:{dataSource}! =====");return a}static fromJson(a,e){if(!("attributes"in a)){let i=e.getDataSource(a.id);if(i){return i}if(a.type!==c.Category){throw new t.DataSourceInURLDoesNotExistError(a.id)}i=e.createDataSource(a);return i}const i=e.createDataSource({id:a.id,type:a.type,label:a.label,labelPlural:a.labelPlural||a.label,defaultNavigationTarget:a.defaultNavigationTarget||undefined,navigationTargets:a.navigationTargets||[]});const r=i.dejsonifyAttributes(a.attributes);r.forEach(t=>{i.attributesMetadata.push(t);i.attributeMetadataMap[t.id.toUpperCase()]=t;if(t instanceof l){i.attributeGroupsMetadata.push(t);i.attributeGroupMetadataMap[t.id]=t}});return i}dejsonifyAttributes(t){const a={};for(const e of t){if(a[e.id]){continue}const i=this.dejsonifyAttribute(e,t,a,this.sina);a[i.id]=i}return Object.values(a)}dejsonifyAttribute(t,a,e,i){if(t.type!==M.Group){return d.fromJson(t,i)}return l.fromJson(t,a,e,i)}}var S={__esModule:true};S.DataSourceJSONType=g;S.DataSource=A;return S});
//# sourceMappingURL=DataSource.js.map