{"version":3,"file":"HierarchyQuery.js","names":["sap","ui","define","___DataSourceType","___FacetQuery","DataSourceSubType","DataSourceType","FacetQuery","HierarchyQuery","attributeId","nodeId","constructor","properties","super","this","top","equals","other","clone","label","icon","skip","nlq","sortOrder","filter","searchTerm","getSearchTerm","sina","_execute","query","_doExecuteHierarchyQuery","transformedQuery","_filteredQueryTransform","resultSet","provider","executeHierarchyQuery","_filteredQueryBackTransform","_genericFilteredQueryTransform","dataSource","type","BusinessObject","subType","Filtered","__exports","__esModule"],"sources":["HierarchyQuery.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\nimport { DataSourceSubType, DataSourceType } from \"./DataSourceType\";\nimport { FacetQuery } from \"./FacetQuery\";\nimport { HierarchyResultSet } from \"./HierarchyResultSet\";\nimport { Query, QueryOptions } from \"./Query\";\n\nexport interface HierarchyQueryOptions extends QueryOptions {\n    attributeId: string;\n    nodeId: string;\n}\n\nexport class HierarchyQuery extends FacetQuery {\n    attributeId: string;\n    nodeId: string;\n\n    constructor(properties: HierarchyQueryOptions) {\n        super(properties);\n        this.top = properties.top ?? 30;\n        this.attributeId = properties.attributeId;\n        this.nodeId = properties.nodeId;\n    }\n\n    equals(other: Query /*, mode?: EqualsMode*/): boolean {\n        return other instanceof HierarchyQuery && super.equals(other) && this.nodeId === other.nodeId;\n    }\n\n    clone(): HierarchyQuery {\n        return new HierarchyQuery({\n            label: this.label,\n            icon: this.icon,\n            top: this.top,\n            skip: this.skip,\n            nlq: this.nlq,\n            sortOrder: this.sortOrder,\n            filter: this.filter.clone(),\n            searchTerm: this.getSearchTerm(),\n            sina: this.sina,\n            attributeId: this.attributeId,\n            nodeId: this.nodeId,\n        });\n    }\n\n    async _execute(query: HierarchyQuery): Promise<HierarchyResultSet> {\n        return this._doExecuteHierarchyQuery(query);\n    }\n\n    async _doExecuteHierarchyQuery(query: HierarchyQuery): Promise<HierarchyResultSet> {\n        const transformedQuery = this._filteredQueryTransform(query);\n        const resultSet = await this.sina.provider.executeHierarchyQuery(transformedQuery);\n        return this._filteredQueryBackTransform(query, resultSet);\n    }\n\n    _filteredQueryTransform(query: HierarchyQuery): HierarchyQuery {\n        return this._genericFilteredQueryTransform(query) as HierarchyQuery;\n    }\n\n    _filteredQueryBackTransform(query: HierarchyQuery, resultSet: HierarchyResultSet): HierarchyResultSet {\n        if (\n            query.filter.dataSource.type !== DataSourceType.BusinessObject ||\n            query.filter.dataSource.subType !== DataSourceSubType.Filtered\n        ) {\n            return resultSet;\n        }\n        resultSet.query = query;\n        return resultSet;\n    }\n}\n"],"mappings":";;;;;AAAAA,IAAAC,GAAAC,OAAA,6CAAAC,EAAAC,GAAA,mBAKSC,EAAiBF,EAAA,2BAAEG,EAAcH,EAAA,wBACjCI,EAAUH,EAAA,cASZ,MAAMI,UAAuBD,EAChCE,YACAC,OAEAC,YAAYC,GACRC,MAAMD,GACNE,KAAKC,IAAMH,EAAWG,KAAO,GAC7BD,KAAKL,YAAcG,EAAWH,YAC9BK,KAAKJ,OAASE,EAAWF,MAC7B,CAEAM,OAAOC,GACH,OAAOA,aAAiBT,GAAkBK,MAAMG,OAAOC,IAAUH,KAAKJ,SAAWO,EAAMP,MAC3F,CAEAQ,QACI,OAAO,IAAIV,EAAe,CACtBW,MAAOL,KAAKK,MACZC,KAAMN,KAAKM,KACXL,IAAKD,KAAKC,IACVM,KAAMP,KAAKO,KACXC,IAAKR,KAAKQ,IACVC,UAAWT,KAAKS,UAChBC,OAAQV,KAAKU,OAAON,QACpBO,WAAYX,KAAKY,gBACjBC,KAAMb,KAAKa,KACXlB,YAAaK,KAAKL,YAClBC,OAAQI,KAAKJ,QAErB,CAEA,cAAMkB,CAASC,GACX,OAAOf,KAAKgB,yBAAyBD,EACzC,CAEA,8BAAMC,CAAyBD,GAC3B,MAAME,EAAmBjB,KAAKkB,wBAAwBH,GACtD,MAAMI,QAAkBnB,KAAKa,KAAKO,SAASC,sBAAsBJ,GACjE,OAAOjB,KAAKsB,4BAA4BP,EAAOI,EACnD,CAEAD,wBAAwBH,GACpB,OAAOf,KAAKuB,+BAA+BR,EAC/C,CAEAO,4BAA4BP,EAAuBI,GAC/C,GACIJ,EAAML,OAAOc,WAAWC,OAASjC,EAAekC,gBAChDX,EAAML,OAAOc,WAAWG,UAAYpC,EAAkBqC,SACxD,CACE,OAAOT,CACX,CACAA,EAAUJ,MAAQA,EAClB,OAAOI,CACX,EACH,IAAAU,EAAA,CAAAC,WAAA,MAAAD,EAAAnC,iBAAA,OAAAmC,CAAA","ignoreList":[]}