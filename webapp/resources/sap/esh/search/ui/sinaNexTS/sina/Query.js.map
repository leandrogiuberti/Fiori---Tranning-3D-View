{"version":3,"file":"Query.js","names":["sap","ui","define","core","util","___SinaObject","___Filter","___LogicalOperator","___core_errors","___FilteredDataSource","SinaObject","Filter","LogicalOperator","QueryIsReadOnlyError","FilteredDataSource","Query","label","icon","filter","requestTimeout","sortOrder","skip","top","nlq","_lastQuery","_resultSetPromise","constructor","properties","super","this","sina","dataSource","setDataSource","searchTerm","setSearchTerm","rootCondition","setRootCondition","suppressRefuseOutdatedResponsesDecorator","_execute","refuseOutdatedResponsesDecorator","setTop","setSkip","setNlq","setSortOrder","query","Promise","resolve","clone","equals","other","abort","getResultSetAsync","_createReadOnlyClone","resultSet","then","bind","iResultSet","_formatResultSetAsync","_genericFilteredQueryTransform","filterCondition","conditions","length","createComplexCondition","operator","And","createFilter","transformedQuery","_setResultSet","resetResultSet","getSearchTerm","getDataSource","getRootCondition","resetConditions","autoInsertCondition","condition","autoRemoveCondition","setFilter","__exports","__esModule"],"sources":["Query.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\nimport * as core from \"../core/core\";\nimport * as util from \"../core/util\";\nimport { SinaObject, SinaObjectProperties } from \"./SinaObject\";\nimport { Filter } from \"./Filter\";\nimport { ResultSet } from \"./ResultSet\";\nimport { DataSource } from \"./DataSource\";\nimport { Condition } from \"./Condition\";\nimport { LogicalOperator } from \"./LogicalOperator\";\nimport { ComplexCondition } from \"./ComplexCondition\";\nimport { SearchQuery } from \"./SearchQuery\";\nimport { SortOrder } from \"./SortOrder\";\nimport { QueryIsReadOnlyError } from \"../core/errors\";\nimport { FilteredDataSource } from \"./FilteredDataSource\";\nexport interface QuerySortOrder {\n    id: string;\n    order: SortOrder;\n}\n\nexport interface QueryOptions extends SinaObjectProperties {\n    label?: string;\n    icon?: string;\n    top?: number;\n    skip?: number;\n    nlq?: boolean;\n    sortOrder?: Array<QuerySortOrder>;\n    filter?: Filter;\n    searchTerm?: string;\n    dataSource?: DataSource;\n    rootCondition?: Condition;\n    suppressRefuseOutdatedResponsesDecorator?: boolean;\n}\n\nexport abstract class Query extends SinaObject {\n    label: string;\n    icon: string;\n    filter: Filter;\n    requestTimeout = false;\n    sortOrder: Array<QuerySortOrder>;\n    skip: number;\n    top: number;\n    nlq: boolean;\n    private _lastQuery: Query;\n    private _resultSetPromise: Promise<ResultSet>;\n\n    constructor(properties: QueryOptions) {\n        super(properties);\n        this.top = properties.top ?? 10;\n        this.skip = properties.skip ?? 0;\n        this.nlq = properties.nlq ?? false;\n        this.sortOrder = properties.sortOrder ?? [];\n        this.filter = properties.filter ?? this.filter ?? new Filter({ sina: this.sina });\n        this.icon = properties.icon;\n        this.label = properties.label;\n        if (properties.dataSource) {\n            this.filter.setDataSource(properties.dataSource);\n        }\n        if (properties.searchTerm) {\n            this.filter.setSearchTerm(properties.searchTerm);\n        }\n        if (properties.rootCondition) {\n            this.filter.setRootCondition(properties.rootCondition);\n        }\n        if (this.requestTimeout) {\n            // this._execute = util.timeoutDecorator(this._execute, this.requestTimeout);\n        }\n        if (!properties.suppressRefuseOutdatedResponsesDecorator) {\n            this._execute = util.refuseOutdatedResponsesDecorator(this._execute);\n        }\n    }\n\n    public setTop(top = 10): void {\n        this.top = top;\n    }\n\n    public setSkip(skip = 0): void {\n        this.skip = skip;\n    }\n\n    public setNlq(nlq: boolean): void {\n        this.nlq = nlq;\n    }\n\n    public setSortOrder(sortOrder: Array<QuerySortOrder>): void {\n        this.sortOrder = sortOrder;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    async _execute(query: Query): Promise<ResultSet> {\n        return Promise.resolve(null);\n    }\n\n    clone(): Query {\n        return; // implement in subclass\n    }\n\n    equals(other: Query /*, mode?: EqualsMode */): boolean {\n        return (\n            other instanceof Query &&\n            this.icon === other.icon &&\n            this.label === other.label &&\n            this.top === other.top &&\n            this.skip === other.skip &&\n            this.nlq === other.nlq &&\n            this.filter.equals(other.filter) &&\n            core.equals(this.sortOrder, other.sortOrder)\n        );\n    }\n\n    abort(): void {\n        // TODO: Promise has no abort\n        // this._execute.abort(); // call abort on decorator\n    }\n\n    async getResultSetAsync(): Promise<ResultSet> {\n        if (this._lastQuery) {\n            // if query has not changed -> return existing result set\n            if (\n                this.equals(\n                    this._lastQuery as SearchQuery\n                    // EqualsMode.CheckFireQuery\n                )\n            ) {\n                return this._resultSetPromise;\n            }\n\n            // filter changed -> set skip=0\n            if (!this.filter.equals(this._lastQuery.filter)) {\n                this.setSkip(0);\n            }\n        }\n\n        // create a read only clone\n        this._lastQuery = this._createReadOnlyClone();\n\n        // delegate to subclass implementation\n        let resultSet;\n        this._resultSetPromise = Promise.resolve()\n            .then(\n                function () {\n                    return this._execute(this._lastQuery);\n                }.bind(this)\n            )\n            .then(\n                function (iResultSet) {\n                    resultSet = iResultSet;\n                    return this._formatResultSetAsync(resultSet); // formatter modifies result set\n                }.bind(this)\n            )\n            .then(\n                function () {\n                    return resultSet;\n                }.bind(this)\n            );\n        return this._resultSetPromise;\n    }\n\n    _genericFilteredQueryTransform(query: Query): Query {\n        // check for filtered datasource\n        if (!(query.filter.dataSource instanceof FilteredDataSource)) {\n            return query;\n        }\n        // assemble root condition of transformed query\n        let rootCondition;\n        if (query.filter.dataSource.filterCondition) {\n            if ((query.filter.rootCondition as ComplexCondition).conditions.length > 0) {\n                rootCondition = this.sina.createComplexCondition({\n                    operator: LogicalOperator.And,\n                    conditions: [\n                        query.filter.dataSource.filterCondition,\n                        query.filter.rootCondition as ComplexCondition,\n                    ],\n                });\n            } else {\n                rootCondition = query.filter.dataSource.filterCondition;\n            }\n        } else {\n            rootCondition = query.filter.rootCondition;\n        }\n        // create transformed query\n        const filter = this.sina.createFilter({\n            dataSource: query.filter.dataSource.dataSource,\n            searchTerm: query.filter.searchTerm,\n            rootCondition: rootCondition,\n        });\n        const transformedQuery = query.clone();\n        transformedQuery.filter = filter; // do not call setter because this would invalidate top and skip\n        return transformedQuery;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _formatResultSetAsync(resultSet: ResultSet): Promise<any> {\n        return Promise.resolve();\n    }\n\n    _setResultSet(resultSet: ResultSet): Promise<ResultSet> {\n        this._lastQuery = this._createReadOnlyClone();\n        this._resultSetPromise = Promise.resolve()\n            .then(\n                function () {\n                    return this._formatResultSetAsync(resultSet);\n                }.bind(this)\n            )\n            .then(function () {\n                return resultSet;\n            });\n        return this._resultSetPromise;\n    }\n\n    _createReadOnlyClone(): Query {\n        const query = this.clone();\n        query.getResultSetAsync = function () {\n            throw new QueryIsReadOnlyError();\n        };\n        return query;\n    }\n\n    resetResultSet(): void {\n        this._lastQuery = null;\n        this._resultSetPromise = null;\n    }\n\n    getSearchTerm(): string {\n        return this.filter.searchTerm;\n    }\n\n    getDataSource(): DataSource {\n        return this.filter.dataSource;\n    }\n\n    getRootCondition(): Condition {\n        return this.filter.rootCondition;\n    }\n\n    setSearchTerm(searchTerm: string): void {\n        this.filter.setSearchTerm(searchTerm);\n    }\n\n    setDataSource(dataSource: DataSource): void {\n        this.filter.setDataSource(dataSource);\n    }\n\n    setRootCondition(rootCondition: ComplexCondition): void {\n        this.filter.setRootCondition(rootCondition);\n    }\n\n    resetConditions(): void {\n        this.filter.resetConditions();\n    }\n\n    autoInsertCondition(condition: Condition): void {\n        this.filter.autoInsertCondition(condition);\n    }\n\n    autoRemoveCondition(condition: Condition): void {\n        this.filter.autoRemoveCondition(condition);\n    }\n\n    setFilter(filter: Filter): void {\n        if (!this.filter.equals(filter)) {\n            this.setSkip(0);\n        }\n        this.filter = filter;\n    }\n}\n"],"mappings":";;;;;AAAAA,IAAAC,GAAAC,OAAA,+HAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,mBAOSC,EAAUL,EAAA,oBACVM,EAAML,EAAA,gBAINM,EAAeL,EAAA,yBAIfM,EAAoBL,EAAA,8BACpBM,EAAkBL,EAAA,sBAoBpB,MAAeM,UAAcL,EAChCM,MACAC,KACAC,OACAC,eAAiB,MACjBC,UACAC,KACAC,IACAC,IACQC,WACAC,kBAERC,YAAYC,GACRC,MAAMD,GACNE,KAAKP,IAAMK,EAAWL,KAAO,GAC7BO,KAAKR,KAAOM,EAAWN,MAAQ,EAC/BQ,KAAKN,IAAMI,EAAWJ,KAAO,MAC7BM,KAAKT,UAAYO,EAAWP,WAAa,GACzCS,KAAKX,OAASS,EAAWT,QAAUW,KAAKX,QAAU,IAAIP,EAAO,CAAEmB,KAAMD,KAAKC,OAC1ED,KAAKZ,KAAOU,EAAWV,KACvBY,KAAKb,MAAQW,EAAWX,MACxB,GAAIW,EAAWI,WAAY,CACvBF,KAAKX,OAAOc,cAAcL,EAAWI,WACzC,CACA,GAAIJ,EAAWM,WAAY,CACvBJ,KAAKX,OAAOgB,cAAcP,EAAWM,WACzC,CACA,GAAIN,EAAWQ,cAAe,CAC1BN,KAAKX,OAAOkB,iBAAiBT,EAAWQ,cAC5C,CACA,GAAIN,KAAKV,eAAgB,CACrB,CAEJ,IAAKQ,EAAWU,yCAA0C,CACtDR,KAAKS,SAAWlC,EAAKmC,iCAAiCV,KAAKS,SAC/D,CACJ,CAEOE,OAAOlB,EAAM,IAChBO,KAAKP,IAAMA,CACf,CAEOmB,QAAQpB,EAAO,GAClBQ,KAAKR,KAAOA,CAChB,CAEOqB,OAAOnB,GACVM,KAAKN,IAAMA,CACf,CAEOoB,aAAavB,GAChBS,KAAKT,UAAYA,CACrB,CAGA,cAAMkB,CAASM,GACX,OAAOC,QAAQC,QAAQ,KAC3B,CAEAC,QACI,MACJ,CAEAC,OAAOC,GACH,OACIA,aAAiBlC,GACjBc,KAAKZ,OAASgC,EAAMhC,MACpBY,KAAKb,QAAUiC,EAAMjC,OACrBa,KAAKP,MAAQ2B,EAAM3B,KACnBO,KAAKR,OAAS4B,EAAM5B,MACpBQ,KAAKN,MAAQ0B,EAAM1B,KACnBM,KAAKX,OAAO8B,OAAOC,EAAM/B,SACzBf,EAAK6C,OAAOnB,KAAKT,UAAW6B,EAAM7B,UAE1C,CAEA8B,QAEI,CAGJ,uBAAMC,GACF,GAAItB,KAAKL,WAAY,CAEjB,GACIK,KAAKmB,OACDnB,KAAKL,YAGX,CACE,OAAOK,KAAKJ,iBAChB,CAGA,IAAKI,KAAKX,OAAO8B,OAAOnB,KAAKL,WAAWN,QAAS,CAC7CW,KAAKY,QAAQ,EACjB,CACJ,CAGAZ,KAAKL,WAAaK,KAAKuB,uBAGvB,IAAIC,EACJxB,KAAKJ,kBAAoBoB,QAAQC,UAC5BQ,KACG,WACI,OAAOzB,KAAKS,SAAST,KAAKL,WAC9B,EAAE+B,KAAK1B,OAEVyB,KACG,SAAUE,GACNH,EAAYG,EACZ,OAAO3B,KAAK4B,sBAAsBJ,EACtC,EAAEE,KAAK1B,OAEVyB,KACG,WACI,OAAOD,CACX,EAAEE,KAAK1B,OAEf,OAAOA,KAAKJ,iBAChB,CAEAiC,+BAA+Bd,GAE3B,KAAMA,EAAM1B,OAAOa,sBAAsBjB,GAAqB,CAC1D,OAAO8B,CACX,CAEA,IAAIT,EACJ,GAAIS,EAAM1B,OAAOa,WAAW4B,gBAAiB,CACzC,GAAKf,EAAM1B,OAAOiB,cAAmCyB,WAAWC,OAAS,EAAG,CACxE1B,EAAgBN,KAAKC,KAAKgC,uBAAuB,CAC7CC,SAAUnD,EAAgBoD,IAC1BJ,WAAY,CACRhB,EAAM1B,OAAOa,WAAW4B,gBACxBf,EAAM1B,OAAOiB,gBAGzB,KAAO,CACHA,EAAgBS,EAAM1B,OAAOa,WAAW4B,eAC5C,CACJ,KAAO,CACHxB,EAAgBS,EAAM1B,OAAOiB,aACjC,CAEA,MAAMjB,EAASW,KAAKC,KAAKmC,aAAa,CAClClC,WAAYa,EAAM1B,OAAOa,WAAWA,WACpCE,WAAYW,EAAM1B,OAAOe,WACzBE,cAAeA,IAEnB,MAAM+B,EAAmBtB,EAAMG,QAC/BmB,EAAiBhD,OAASA,EAC1B,OAAOgD,CACX,CAGAT,sBAAsBJ,GAClB,OAAOR,QAAQC,SACnB,CAEAqB,cAAcd,GACVxB,KAAKL,WAAaK,KAAKuB,uBACvBvB,KAAKJ,kBAAoBoB,QAAQC,UAC5BQ,KACG,WACI,OAAOzB,KAAK4B,sBAAsBJ,EACtC,EAAEE,KAAK1B,OAEVyB,KAAK,WACF,OAAOD,CACX,GACJ,OAAOxB,KAAKJ,iBAChB,CAEA2B,uBACI,MAAMR,EAAQf,KAAKkB,QACnBH,EAAMO,kBAAoB,WACtB,MAAM,IAAItC,CACd,EACA,OAAO+B,CACX,CAEAwB,iBACIvC,KAAKL,WAAa,KAClBK,KAAKJ,kBAAoB,IAC7B,CAEA4C,gBACI,OAAOxC,KAAKX,OAAOe,UACvB,CAEAqC,gBACI,OAAOzC,KAAKX,OAAOa,UACvB,CAEAwC,mBACI,OAAO1C,KAAKX,OAAOiB,aACvB,CAEAD,cAAcD,GACVJ,KAAKX,OAAOgB,cAAcD,EAC9B,CAEAD,cAAcD,GACVF,KAAKX,OAAOc,cAAcD,EAC9B,CAEAK,iBAAiBD,GACbN,KAAKX,OAAOkB,iBAAiBD,EACjC,CAEAqC,kBACI3C,KAAKX,OAAOsD,iBAChB,CAEAC,oBAAoBC,GAChB7C,KAAKX,OAAOuD,oBAAoBC,EACpC,CAEAC,oBAAoBD,GAChB7C,KAAKX,OAAOyD,oBAAoBD,EACpC,CAEAE,UAAU1D,GACN,IAAKW,KAAKX,OAAO8B,OAAO9B,GAAS,CAC7BW,KAAKY,QAAQ,EACjB,CACAZ,KAAKX,OAASA,CAClB,EACH,IAAA2D,EAAA,CAAAC,WAAA,MAAAD,EAAA9D,QAAA,OAAA8D,CAAA","ignoreList":[]}