{"version":3,"file":"SearchResultSet.js","names":["sap","ui","define","___ResultSet","___AttributeType","ResultSet","AttributeType","SearchResultSet","facets","totalCount","nlqResult","hierarchyNodePaths","constructor","properties","super","this","toString","args","result","push","prototype","apply","i","length","facet","join","toCSV","console","log","items","csvTitle","attribute","attributes","concat","id","slice","csvBody","item","metadata","type","Double","Integer","value","valueFormatted","__exports","__esModule"],"sources":["SearchResultSet.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\nimport { ResultSet, ResultSetOptions } from \"./ResultSet\";\nimport { SearchResultSetItem } from \"./SearchResultSetItem\";\nimport { FacetResultSet } from \"./FacetResultSet\";\nimport { HierarchyNodePath } from \"./HierarchyNodePath\";\nimport { NlqResult } from \"./NlqResult\";\nimport { AttributeType } from \"./AttributeType\";\n\nexport interface SearchResultSetOptions extends ResultSetOptions {\n    facets?: Array<FacetResultSet>;\n    totalCount: number;\n    hierarchyNodePaths?: Array<HierarchyNodePath>;\n    nlqResult?: NlqResult;\n}\nexport class SearchResultSet extends ResultSet {\n    // _meta: {\n    //     properties: {\n    //         facets: {\n    //             required: false,\n    //             default: function () {\n    //                 return [];\n    //             }\n    //         },\n    //         totalCount: {\n    //             required: true\n    //         },\n    //     }\n    // },\n    facets: Array<FacetResultSet> = [];\n    totalCount: number;\n    nlqResult?: NlqResult;\n    declare items: Array<SearchResultSetItem>;\n    hierarchyNodePaths: Array<HierarchyNodePath> = [];\n\n    constructor(properties: SearchResultSetOptions) {\n        super(properties);\n        this.facets = properties.facets ?? this.facets;\n        this.totalCount = properties.totalCount ?? this.totalCount;\n        this.hierarchyNodePaths = properties.hierarchyNodePaths ?? this.hierarchyNodePaths;\n        this.nlqResult = properties.nlqResult;\n    }\n\n    toString(...args: Array<string>): string {\n        const result = [];\n        result.push(ResultSet.prototype.toString.apply(this, args));\n        for (let i = 0; i < this.facets.length; ++i) {\n            if (i === 0) {\n                result.push(\"## Facets\");\n            }\n            const facet = this.facets[i];\n            result.push(facet.toString());\n        }\n        return result.join(\"\\n\");\n    }\n\n    // sina search result -> sample2/data/...csv in string\n    toCSV(): string {\n        console.log(\"===== Parse Result to CSV String: =====\\n\");\n        if (this.items.length === 0) {\n            console.log(\"\");\n            return \"\";\n        }\n\n        let csvTitle = \"\";\n        for (const attribute of this.items[0].attributes) {\n            csvTitle = csvTitle.concat('\"' + attribute.id + '\",');\n        }\n        csvTitle = csvTitle.slice(0, -1).concat(\"\\n\"); // remove last comma, add new line\n\n        let csvBody = \"\";\n        for (const item of this.items) {\n            for (const attribute of item.attributes) {\n                if (\n                    attribute.metadata?.type === AttributeType.Double ||\n                    attribute.metadata?.type === AttributeType.Integer\n                ) {\n                    csvBody = csvBody.concat('\"' + attribute.value?.toString() + '\",');\n                } else {\n                    csvBody = csvBody.concat('\"' + attribute.valueFormatted + '\",');\n                }\n            }\n            csvBody = csvBody.slice(0, -1).concat(\"\\n\"); // remove last comma, add new line\n        }\n        csvBody = csvBody.slice(0, -1); // remove last new line\n\n        console.log(csvTitle.concat(csvBody));\n        return csvTitle.concat(csvBody);\n    }\n}\n"],"mappings":";;;;;AAAAA,IAAAC,GAAAC,OAAA,2CAAAC,EAAAC,GAAA,mBAKSC,EAASF,EAAA,mBAKTG,EAAaF,EAAA,iBAQf,MAAMG,UAAwBF,EAcjCG,OAAgC,GAChCC,WACAC,UAEAC,mBAA+C,GAE/CC,YAAYC,GACRC,MAAMD,GACNE,KAAKP,OAASK,EAAWL,QAAUO,KAAKP,OACxCO,KAAKN,WAAaI,EAAWJ,YAAcM,KAAKN,WAChDM,KAAKJ,mBAAqBE,EAAWF,oBAAsBI,KAAKJ,mBAChEI,KAAKL,UAAYG,EAAWH,SAChC,CAEAM,YAAYC,GACR,MAAMC,EAAS,GACfA,EAAOC,KAAKd,EAAUe,UAAUJ,SAASK,MAAMN,KAAME,IACrD,IAAK,IAAIK,EAAI,EAAGA,EAAIP,KAAKP,OAAOe,SAAUD,EAAG,CACzC,GAAIA,IAAM,EAAG,CACTJ,EAAOC,KAAK,YAChB,CACA,MAAMK,EAAQT,KAAKP,OAAOc,GAC1BJ,EAAOC,KAAKK,EAAMR,WACtB,CACA,OAAOE,EAAOO,KAAK,KACvB,CAGAC,QACIC,QAAQC,IAAI,6CACZ,GAAIb,KAAKc,MAAMN,SAAW,EAAG,CACzBI,QAAQC,IAAI,IACZ,MAAO,EACX,CAEA,IAAIE,EAAW,GACf,IAAK,MAAMC,KAAahB,KAAKc,MAAM,GAAGG,WAAY,CAC9CF,EAAWA,EAASG,OAAO,IAAMF,EAAUG,GAAK,KACpD,CACAJ,EAAWA,EAASK,MAAM,GAAI,GAAGF,OAAO,MAExC,IAAIG,EAAU,GACd,IAAK,MAAMC,KAAQtB,KAAKc,MAAO,CAC3B,IAAK,MAAME,KAAaM,EAAKL,WAAY,CACrC,GACID,EAAUO,UAAUC,OAASjC,EAAckC,QAC3CT,EAAUO,UAAUC,OAASjC,EAAcmC,QAC7C,CACEL,EAAUA,EAAQH,OAAO,IAAMF,EAAUW,OAAO1B,WAAa,KACjE,KAAO,CACHoB,EAAUA,EAAQH,OAAO,IAAMF,EAAUY,eAAiB,KAC9D,CACJ,CACAP,EAAUA,EAAQD,MAAM,GAAI,GAAGF,OAAO,KAC1C,CACAG,EAAUA,EAAQD,MAAM,GAAI,GAE5BR,QAAQC,IAAIE,EAASG,OAAOG,IAC5B,OAAON,EAASG,OAAOG,EAC3B,EACH,IAAAQ,EAAA,CAAAC,WAAA,MAAAD,EAAArC,kBAAA,OAAAqC,CAAA","ignoreList":[]}