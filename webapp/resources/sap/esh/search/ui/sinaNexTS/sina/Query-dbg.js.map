{"version":3,"file":"Query-dbg.js","names":["sap","ui","define","core","util","___SinaObject","___Filter","___LogicalOperator","___core_errors","___FilteredDataSource","SinaObject","Filter","LogicalOperator","QueryIsReadOnlyError","FilteredDataSource","Query","label","icon","filter","requestTimeout","sortOrder","skip","top","nlq","_lastQuery","_resultSetPromise","constructor","properties","sina","dataSource","setDataSource","searchTerm","setSearchTerm","rootCondition","setRootCondition","suppressRefuseOutdatedResponsesDecorator","_execute","refuseOutdatedResponsesDecorator","setTop","setSkip","setNlq","setSortOrder","query","Promise","resolve","clone","equals","other","abort","getResultSetAsync","_createReadOnlyClone","resultSet","then","bind","iResultSet","_formatResultSetAsync","_genericFilteredQueryTransform","filterCondition","conditions","length","createComplexCondition","operator","And","createFilter","transformedQuery","_setResultSet","resetResultSet","getSearchTerm","getDataSource","getRootCondition","resetConditions","autoInsertCondition","condition","autoRemoveCondition","setFilter","__exports","__esModule"],"sources":["Query.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\nimport * as core from \"../core/core\";\nimport * as util from \"../core/util\";\nimport { SinaObject, SinaObjectProperties } from \"./SinaObject\";\nimport { Filter } from \"./Filter\";\nimport { ResultSet } from \"./ResultSet\";\nimport { DataSource } from \"./DataSource\";\nimport { Condition } from \"./Condition\";\nimport { LogicalOperator } from \"./LogicalOperator\";\nimport { ComplexCondition } from \"./ComplexCondition\";\nimport { SearchQuery } from \"./SearchQuery\";\nimport { SortOrder } from \"./SortOrder\";\nimport { QueryIsReadOnlyError } from \"../core/errors\";\nimport { FilteredDataSource } from \"./FilteredDataSource\";\nexport interface QuerySortOrder {\n    id: string;\n    order: SortOrder;\n}\n\nexport interface QueryOptions extends SinaObjectProperties {\n    label?: string;\n    icon?: string;\n    top?: number;\n    skip?: number;\n    nlq?: boolean;\n    sortOrder?: Array<QuerySortOrder>;\n    filter?: Filter;\n    searchTerm?: string;\n    dataSource?: DataSource;\n    rootCondition?: Condition;\n    suppressRefuseOutdatedResponsesDecorator?: boolean;\n}\n\nexport abstract class Query extends SinaObject {\n    label: string;\n    icon: string;\n    filter: Filter;\n    requestTimeout = false;\n    sortOrder: Array<QuerySortOrder>;\n    skip: number;\n    top: number;\n    nlq: boolean;\n    private _lastQuery: Query;\n    private _resultSetPromise: Promise<ResultSet>;\n\n    constructor(properties: QueryOptions) {\n        super(properties);\n        this.top = properties.top ?? 10;\n        this.skip = properties.skip ?? 0;\n        this.nlq = properties.nlq ?? false;\n        this.sortOrder = properties.sortOrder ?? [];\n        this.filter = properties.filter ?? this.filter ?? new Filter({ sina: this.sina });\n        this.icon = properties.icon;\n        this.label = properties.label;\n        if (properties.dataSource) {\n            this.filter.setDataSource(properties.dataSource);\n        }\n        if (properties.searchTerm) {\n            this.filter.setSearchTerm(properties.searchTerm);\n        }\n        if (properties.rootCondition) {\n            this.filter.setRootCondition(properties.rootCondition);\n        }\n        if (this.requestTimeout) {\n            // this._execute = util.timeoutDecorator(this._execute, this.requestTimeout);\n        }\n        if (!properties.suppressRefuseOutdatedResponsesDecorator) {\n            this._execute = util.refuseOutdatedResponsesDecorator(this._execute);\n        }\n    }\n\n    public setTop(top = 10): void {\n        this.top = top;\n    }\n\n    public setSkip(skip = 0): void {\n        this.skip = skip;\n    }\n\n    public setNlq(nlq: boolean): void {\n        this.nlq = nlq;\n    }\n\n    public setSortOrder(sortOrder: Array<QuerySortOrder>): void {\n        this.sortOrder = sortOrder;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    async _execute(query: Query): Promise<ResultSet> {\n        return Promise.resolve(null);\n    }\n\n    clone(): Query {\n        return; // implement in subclass\n    }\n\n    equals(other: Query /*, mode?: EqualsMode */): boolean {\n        return (\n            other instanceof Query &&\n            this.icon === other.icon &&\n            this.label === other.label &&\n            this.top === other.top &&\n            this.skip === other.skip &&\n            this.nlq === other.nlq &&\n            this.filter.equals(other.filter) &&\n            core.equals(this.sortOrder, other.sortOrder)\n        );\n    }\n\n    abort(): void {\n        // TODO: Promise has no abort\n        // this._execute.abort(); // call abort on decorator\n    }\n\n    async getResultSetAsync(): Promise<ResultSet> {\n        if (this._lastQuery) {\n            // if query has not changed -> return existing result set\n            if (\n                this.equals(\n                    this._lastQuery as SearchQuery\n                    // EqualsMode.CheckFireQuery\n                )\n            ) {\n                return this._resultSetPromise;\n            }\n\n            // filter changed -> set skip=0\n            if (!this.filter.equals(this._lastQuery.filter)) {\n                this.setSkip(0);\n            }\n        }\n\n        // create a read only clone\n        this._lastQuery = this._createReadOnlyClone();\n\n        // delegate to subclass implementation\n        let resultSet;\n        this._resultSetPromise = Promise.resolve()\n            .then(\n                function () {\n                    return this._execute(this._lastQuery);\n                }.bind(this)\n            )\n            .then(\n                function (iResultSet) {\n                    resultSet = iResultSet;\n                    return this._formatResultSetAsync(resultSet); // formatter modifies result set\n                }.bind(this)\n            )\n            .then(\n                function () {\n                    return resultSet;\n                }.bind(this)\n            );\n        return this._resultSetPromise;\n    }\n\n    _genericFilteredQueryTransform(query: Query): Query {\n        // check for filtered datasource\n        if (!(query.filter.dataSource instanceof FilteredDataSource)) {\n            return query;\n        }\n        // assemble root condition of transformed query\n        let rootCondition;\n        if (query.filter.dataSource.filterCondition) {\n            if ((query.filter.rootCondition as ComplexCondition).conditions.length > 0) {\n                rootCondition = this.sina.createComplexCondition({\n                    operator: LogicalOperator.And,\n                    conditions: [\n                        query.filter.dataSource.filterCondition,\n                        query.filter.rootCondition as ComplexCondition,\n                    ],\n                });\n            } else {\n                rootCondition = query.filter.dataSource.filterCondition;\n            }\n        } else {\n            rootCondition = query.filter.rootCondition;\n        }\n        // create transformed query\n        const filter = this.sina.createFilter({\n            dataSource: query.filter.dataSource.dataSource,\n            searchTerm: query.filter.searchTerm,\n            rootCondition: rootCondition,\n        });\n        const transformedQuery = query.clone();\n        transformedQuery.filter = filter; // do not call setter because this would invalidate top and skip\n        return transformedQuery;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _formatResultSetAsync(resultSet: ResultSet): Promise<any> {\n        return Promise.resolve();\n    }\n\n    _setResultSet(resultSet: ResultSet): Promise<ResultSet> {\n        this._lastQuery = this._createReadOnlyClone();\n        this._resultSetPromise = Promise.resolve()\n            .then(\n                function () {\n                    return this._formatResultSetAsync(resultSet);\n                }.bind(this)\n            )\n            .then(function () {\n                return resultSet;\n            });\n        return this._resultSetPromise;\n    }\n\n    _createReadOnlyClone(): Query {\n        const query = this.clone();\n        query.getResultSetAsync = function () {\n            throw new QueryIsReadOnlyError();\n        };\n        return query;\n    }\n\n    resetResultSet(): void {\n        this._lastQuery = null;\n        this._resultSetPromise = null;\n    }\n\n    getSearchTerm(): string {\n        return this.filter.searchTerm;\n    }\n\n    getDataSource(): DataSource {\n        return this.filter.dataSource;\n    }\n\n    getRootCondition(): Condition {\n        return this.filter.rootCondition;\n    }\n\n    setSearchTerm(searchTerm: string): void {\n        this.filter.setSearchTerm(searchTerm);\n    }\n\n    setDataSource(dataSource: DataSource): void {\n        this.filter.setDataSource(dataSource);\n    }\n\n    setRootCondition(rootCondition: ComplexCondition): void {\n        this.filter.setRootCondition(rootCondition);\n    }\n\n    resetConditions(): void {\n        this.filter.resetConditions();\n    }\n\n    autoInsertCondition(condition: Condition): void {\n        this.filter.autoInsertCondition(condition);\n    }\n\n    autoRemoveCondition(condition: Condition): void {\n        this.filter.autoRemoveCondition(condition);\n    }\n\n    setFilter(filter: Filter): void {\n        if (!this.filter.equals(filter)) {\n            this.setSkip(0);\n        }\n        this.filter = filter;\n    }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAJAA,GAAA,CAAAC,EAAA,CAAAC,MAAA,wIAAAC,IAAA,EAAAC,IAAA,EAAAC,aAAA,EAAAC,SAAA,EAAAC,kBAAA,EAAAC,cAAA,EAAAC,qBAAA;EAAA;;EAAA,MAOSC,UAAU,GAAAL,aAAA;EAAA,MACVM,MAAM,GAAAL,SAAA;EAAA,MAINM,eAAe,GAAAL,kBAAA;EAAA,MAIfM,oBAAoB,GAAAL,cAAA;EAAA,MACpBM,kBAAkB,GAAAL,qBAAA;EAoBpB,MAAeM,KAAK,SAASL,UAAU,CAAC;IAC3CM,KAAK;IACLC,IAAI;IACJC,MAAM;IACNC,cAAc,GAAG,KAAK;IACtBC,SAAS;IACTC,IAAI;IACJC,GAAG;IACHC,GAAG;IACKC,UAAU;IACVC,iBAAiB;IAEzBC,WAAWA,CAACC,UAAwB,EAAE;MAClC,KAAK,CAACA,UAAU,CAAC;MACjB,IAAI,CAACL,GAAG,GAAGK,UAAU,CAACL,GAAG,IAAI,EAAE;MAC/B,IAAI,CAACD,IAAI,GAAGM,UAAU,CAACN,IAAI,IAAI,CAAC;MAChC,IAAI,CAACE,GAAG,GAAGI,UAAU,CAACJ,GAAG,IAAI,KAAK;MAClC,IAAI,CAACH,SAAS,GAAGO,UAAU,CAACP,SAAS,IAAI,EAAE;MAC3C,IAAI,CAACF,MAAM,GAAGS,UAAU,CAACT,MAAM,IAAI,IAAI,CAACA,MAAM,IAAI,IAAIP,MAAM,CAAC;QAAEiB,IAAI,EAAE,IAAI,CAACA;MAAK,CAAC,CAAC;MACjF,IAAI,CAACX,IAAI,GAAGU,UAAU,CAACV,IAAI;MAC3B,IAAI,CAACD,KAAK,GAAGW,UAAU,CAACX,KAAK;MAC7B,IAAIW,UAAU,CAACE,UAAU,EAAE;QACvB,IAAI,CAACX,MAAM,CAACY,aAAa,CAACH,UAAU,CAACE,UAAU,CAAC;MACpD;MACA,IAAIF,UAAU,CAACI,UAAU,EAAE;QACvB,IAAI,CAACb,MAAM,CAACc,aAAa,CAACL,UAAU,CAACI,UAAU,CAAC;MACpD;MACA,IAAIJ,UAAU,CAACM,aAAa,EAAE;QAC1B,IAAI,CAACf,MAAM,CAACgB,gBAAgB,CAACP,UAAU,CAACM,aAAa,CAAC;MAC1D;MACA,IAAI,IAAI,CAACd,cAAc,EAAE;QACrB;MAAA;MAEJ,IAAI,CAACQ,UAAU,CAACQ,wCAAwC,EAAE;QACtD,IAAI,CAACC,QAAQ,GAAGhC,IAAI,CAACiC,gCAAgC,CAAC,IAAI,CAACD,QAAQ,CAAC;MACxE;IACJ;IAEOE,MAAMA,CAAChB,GAAG,GAAG,EAAE,EAAQ;MAC1B,IAAI,CAACA,GAAG,GAAGA,GAAG;IAClB;IAEOiB,OAAOA,CAAClB,IAAI,GAAG,CAAC,EAAQ;MAC3B,IAAI,CAACA,IAAI,GAAGA,IAAI;IACpB;IAEOmB,MAAMA,CAACjB,GAAY,EAAQ;MAC9B,IAAI,CAACA,GAAG,GAAGA,GAAG;IAClB;IAEOkB,YAAYA,CAACrB,SAAgC,EAAQ;MACxD,IAAI,CAACA,SAAS,GAAGA,SAAS;IAC9B;;IAEA;IACA,MAAMgB,QAAQA,CAACM,KAAY,EAAsB;MAC7C,OAAOC,OAAO,CAACC,OAAO,CAAC,IAAI,CAAC;IAChC;IAEAC,KAAKA,CAAA,EAAU;MACX,OAAO,CAAC;IACZ;IAEAC,MAAMA,CAACC,KAAY,EAAoC;MACnD,OACIA,KAAK,YAAYhC,KAAK,IACtB,IAAI,CAACE,IAAI,KAAK8B,KAAK,CAAC9B,IAAI,IACxB,IAAI,CAACD,KAAK,KAAK+B,KAAK,CAAC/B,KAAK,IAC1B,IAAI,CAACM,GAAG,KAAKyB,KAAK,CAACzB,GAAG,IACtB,IAAI,CAACD,IAAI,KAAK0B,KAAK,CAAC1B,IAAI,IACxB,IAAI,CAACE,GAAG,KAAKwB,KAAK,CAACxB,GAAG,IACtB,IAAI,CAACL,MAAM,CAAC4B,MAAM,CAACC,KAAK,CAAC7B,MAAM,CAAC,IAChCf,IAAI,CAAC2C,MAAM,CAAC,IAAI,CAAC1B,SAAS,EAAE2B,KAAK,CAAC3B,SAAS,CAAC;IAEpD;IAEA4B,KAAKA,CAAA,EAAS;MACV;MACA;IAAA;IAGJ,MAAMC,iBAAiBA,CAAA,EAAuB;MAC1C,IAAI,IAAI,CAACzB,UAAU,EAAE;QACjB;QACA,IACI,IAAI,CAACsB,MAAM,CACP,IAAI,CAACtB;QACL;QACJ,CAAC,EACH;UACE,OAAO,IAAI,CAACC,iBAAiB;QACjC;;QAEA;QACA,IAAI,CAAC,IAAI,CAACP,MAAM,CAAC4B,MAAM,CAAC,IAAI,CAACtB,UAAU,CAACN,MAAM,CAAC,EAAE;UAC7C,IAAI,CAACqB,OAAO,CAAC,CAAC,CAAC;QACnB;MACJ;;MAEA;MACA,IAAI,CAACf,UAAU,GAAG,IAAI,CAAC0B,oBAAoB,CAAC,CAAC;;MAE7C;MACA,IAAIC,SAAS;MACb,IAAI,CAAC1B,iBAAiB,GAAGkB,OAAO,CAACC,OAAO,CAAC,CAAC,CACrCQ,IAAI,CACD,YAAY;QACR,OAAO,IAAI,CAAChB,QAAQ,CAAC,IAAI,CAACZ,UAAU,CAAC;MACzC,CAAC,CAAC6B,IAAI,CAAC,IAAI,CACf,CAAC,CACAD,IAAI,CACD,UAAUE,UAAU,EAAE;QAClBH,SAAS,GAAGG,UAAU;QACtB,OAAO,IAAI,CAACC,qBAAqB,CAACJ,SAAS,CAAC,CAAC,CAAC;MAClD,CAAC,CAACE,IAAI,CAAC,IAAI,CACf,CAAC,CACAD,IAAI,CACD,YAAY;QACR,OAAOD,SAAS;MACpB,CAAC,CAACE,IAAI,CAAC,IAAI,CACf,CAAC;MACL,OAAO,IAAI,CAAC5B,iBAAiB;IACjC;IAEA+B,8BAA8BA,CAACd,KAAY,EAAS;MAChD;MACA,IAAI,EAAEA,KAAK,CAACxB,MAAM,CAACW,UAAU,YAAYf,kBAAkB,CAAC,EAAE;QAC1D,OAAO4B,KAAK;MAChB;MACA;MACA,IAAIT,aAAa;MACjB,IAAIS,KAAK,CAACxB,MAAM,CAACW,UAAU,CAAC4B,eAAe,EAAE;QACzC,IAAKf,KAAK,CAACxB,MAAM,CAACe,aAAa,CAAsByB,UAAU,CAACC,MAAM,GAAG,CAAC,EAAE;UACxE1B,aAAa,GAAG,IAAI,CAACL,IAAI,CAACgC,sBAAsB,CAAC;YAC7CC,QAAQ,EAAEjD,eAAe,CAACkD,GAAG;YAC7BJ,UAAU,EAAE,CACRhB,KAAK,CAACxB,MAAM,CAACW,UAAU,CAAC4B,eAAe,EACvCf,KAAK,CAACxB,MAAM,CAACe,aAAa;UAElC,CAAC,CAAC;QACN,CAAC,MAAM;UACHA,aAAa,GAAGS,KAAK,CAACxB,MAAM,CAACW,UAAU,CAAC4B,eAAe;QAC3D;MACJ,CAAC,MAAM;QACHxB,aAAa,GAAGS,KAAK,CAACxB,MAAM,CAACe,aAAa;MAC9C;MACA;MACA,MAAMf,MAAM,GAAG,IAAI,CAACU,IAAI,CAACmC,YAAY,CAAC;QAClClC,UAAU,EAAEa,KAAK,CAACxB,MAAM,CAACW,UAAU,CAACA,UAAU;QAC9CE,UAAU,EAAEW,KAAK,CAACxB,MAAM,CAACa,UAAU;QACnCE,aAAa,EAAEA;MACnB,CAAC,CAAC;MACF,MAAM+B,gBAAgB,GAAGtB,KAAK,CAACG,KAAK,CAAC,CAAC;MACtCmB,gBAAgB,CAAC9C,MAAM,GAAGA,MAAM,CAAC,CAAC;MAClC,OAAO8C,gBAAgB;IAC3B;;IAEA;IACAT,qBAAqBA,CAACJ,SAAoB,EAAgB;MACtD,OAAOR,OAAO,CAACC,OAAO,CAAC,CAAC;IAC5B;IAEAqB,aAAaA,CAACd,SAAoB,EAAsB;MACpD,IAAI,CAAC3B,UAAU,GAAG,IAAI,CAAC0B,oBAAoB,CAAC,CAAC;MAC7C,IAAI,CAACzB,iBAAiB,GAAGkB,OAAO,CAACC,OAAO,CAAC,CAAC,CACrCQ,IAAI,CACD,YAAY;QACR,OAAO,IAAI,CAACG,qBAAqB,CAACJ,SAAS,CAAC;MAChD,CAAC,CAACE,IAAI,CAAC,IAAI,CACf,CAAC,CACAD,IAAI,CAAC,YAAY;QACd,OAAOD,SAAS;MACpB,CAAC,CAAC;MACN,OAAO,IAAI,CAAC1B,iBAAiB;IACjC;IAEAyB,oBAAoBA,CAAA,EAAU;MAC1B,MAAMR,KAAK,GAAG,IAAI,CAACG,KAAK,CAAC,CAAC;MAC1BH,KAAK,CAACO,iBAAiB,GAAG,YAAY;QAClC,MAAM,IAAIpC,oBAAoB,CAAC,CAAC;MACpC,CAAC;MACD,OAAO6B,KAAK;IAChB;IAEAwB,cAAcA,CAAA,EAAS;MACnB,IAAI,CAAC1C,UAAU,GAAG,IAAI;MACtB,IAAI,CAACC,iBAAiB,GAAG,IAAI;IACjC;IAEA0C,aAAaA,CAAA,EAAW;MACpB,OAAO,IAAI,CAACjD,MAAM,CAACa,UAAU;IACjC;IAEAqC,aAAaA,CAAA,EAAe;MACxB,OAAO,IAAI,CAAClD,MAAM,CAACW,UAAU;IACjC;IAEAwC,gBAAgBA,CAAA,EAAc;MAC1B,OAAO,IAAI,CAACnD,MAAM,CAACe,aAAa;IACpC;IAEAD,aAAaA,CAACD,UAAkB,EAAQ;MACpC,IAAI,CAACb,MAAM,CAACc,aAAa,CAACD,UAAU,CAAC;IACzC;IAEAD,aAAaA,CAACD,UAAsB,EAAQ;MACxC,IAAI,CAACX,MAAM,CAACY,aAAa,CAACD,UAAU,CAAC;IACzC;IAEAK,gBAAgBA,CAACD,aAA+B,EAAQ;MACpD,IAAI,CAACf,MAAM,CAACgB,gBAAgB,CAACD,aAAa,CAAC;IAC/C;IAEAqC,eAAeA,CAAA,EAAS;MACpB,IAAI,CAACpD,MAAM,CAACoD,eAAe,CAAC,CAAC;IACjC;IAEAC,mBAAmBA,CAACC,SAAoB,EAAQ;MAC5C,IAAI,CAACtD,MAAM,CAACqD,mBAAmB,CAACC,SAAS,CAAC;IAC9C;IAEAC,mBAAmBA,CAACD,SAAoB,EAAQ;MAC5C,IAAI,CAACtD,MAAM,CAACuD,mBAAmB,CAACD,SAAS,CAAC;IAC9C;IAEAE,SAASA,CAACxD,MAAc,EAAQ;MAC5B,IAAI,CAAC,IAAI,CAACA,MAAM,CAAC4B,MAAM,CAAC5B,MAAM,CAAC,EAAE;QAC7B,IAAI,CAACqB,OAAO,CAAC,CAAC,CAAC;MACnB;MACA,IAAI,CAACrB,MAAM,GAAGA,MAAM;IACxB;EACJ;EAAC,IAAAyD,SAAA;IAAAC,UAAA;EAAA;EAAAD,SAAA,CAAA5D,KAAA,GAAAA,KAAA;EAAA,OAAA4D,SAAA;AAAA","ignoreList":[]}