{"version":3,"file":"Sina-dbg.js","names":["sap","ui","define","core","errors","util","___AttributeType","___AttributeFormatType","___AttributeGroupTextArrangement","___DataSourceType","___MatchingStrategy","___LogicalOperator","___ComparisonOperator","___FacetType","___SuggestionCalculationMode","___SuggestionType","___SortOrder","___ConditionType","___providers_tools_cds_CDSAnnotationsParser","___providers_tools_sors_NavigationTargetGenerator","___SearchResultSet","___SearchResultSetItem","___SearchResultSetItemAttribute","___ObjectSuggestion","___SearchQuery","___ChartQuery","___SuggestionQuery","___DataSourceQuery","___Filter","___ComplexCondition","___SimpleCondition","___AttributeMetadata","___AttributeGroupMetadata","___AttributeGroupMembership","___SearchResultSetItemAttributeGroup","___SearchResultSetItemAttributeGroupMembership","___SearchTermSuggestion","___SearchTermAndDataSourceSuggestion","___DataSourceSuggestion","___SuggestionResultSet","___ChartResultSet","___DataSourceResultSet","___ChartResultSetItem","___DataSourceResultSetItem","___Capabilities","___Configuration","___NavigationTarget","___DataSource","___UserCategoryDataSource","___providers_tools_ItemPostParser","___providers_tools_fiori_SuvNavTargetResolver","___providers_tools_fiori_FioriIntentsResolver","___formatters_ResultValueFormatter","___formatters_NavtargetsInResultSetFormatter","___formatters_HierarchyResultSetFormatter","___FilteredDataSource","___providers_inav2_Provider","___providers_abap_odata_Provider","___HierarchyQuery","___HierarchyNode","___HierarchyResultSet","inav2TypeConverter","___HierarchyNodePath","___HierarchyDisplayType","___formatters_SuggestionResultValueFormatter","___SearchTermAISuggestion","___PublicSina","AttributeType","AttributeFormatType","AttributeGroupTextArrangement","DataSourceSubType","DataSourceType","MatchingStrategy","LogicalOperator","ComparisonOperator","FacetType","SuggestionCalculationMode","SuggestionType","SortOrder","ConditionType","CDSAnnotationsParser","SorsNavigationTargetGenerator","SearchResultSet","SearchResultSetItem","SearchResultSetItemAttribute","ObjectSuggestion","SearchQuery","ChartQuery","SuggestionQuery","DataSourceQuery","Filter","ComplexCondition","SimpleCondition","AttributeMetadata","AttributeGroupMetadata","AttributeGroupMembership","SearchResultSetItemAttributeGroup","SearchResultSetItemAttributeGroupMembership","SearchTermSuggestion","SearchTermAndDataSourceSuggestion","DataSourceSuggestion","SuggestionResultSet","ChartResultSet","DataSourceResultSet","ChartResultSetItem","DataSourceResultSetItem","Capabilities","Configuration","NavigationTarget","DataSource","UserCategoryDataSource","ItemPostParser","SuvNavTargetResolver","FioriIntentsResolver","ResultValueFormatter","NavtargetsInResultSetFormatter","HierarchyResultSetFormatter","FilteredDataSource","InAV2Provider","ABAPODataProvider","HierarchyQuery","HierarchyNode","HierarchyResultSet","HierarchyNodePath","HierarchyDisplayType","SuggestionResultValueFormatter","ESHNoBusinessObjectDatasourceError","SearchTermAISuggestion","PublicSina","Sina","errorList","provider","createSearchNavigationTarget","createSearchQuery","createChartQuery","createHierarchyQuery","createSuggestionQuery","createDataSourceQuery","createFilter","createComplexCondition","createSimpleCondition","createHierarchyNode","createHierarchyNodePath","_createAttributeMetadata","_createAttributeGroupMetadata","_createAttributeGroupMembership","_createSearchResultSetItemAttribute","_createSearchResultSetItemAttributeGroup","_createSearchResultSetItemAttributeGroupMembership","_createSearchResultSetItem","_createSearchResultSet","_createSearchTermSuggestion","_createSearchTermAISuggestion","_createSearchTermAndDataSourceSuggestion","_createDataSourceSuggestion","_createObjectSuggestion","_createSuggestionResultSet","_createChartResultSet","_createHierarchyResultSet","_createChartResultSetItem","_createDataSourceResultSetItem","_createCapabilities","_createConfiguration","_createNavigationTarget","createNavigationTarget","_createSorsNavigationTargetGenerator","_createFioriIntentsResolver","_createCDSAnnotationsParser","_createItemPostParser","_createSuvNavTargetResolver","searchResultSetFormatters","suggestionResultSetFormatters","chartResultSetFormatters","metadataFormatters","dataSources","dataSourceMap","allDataSource","isDummyProvider","configurationPromise","capabilities","configuration","publicSina","constructor","createSinaObjectFactory","createDataSource","id","label","type","Category","getPublicSina","hasErrors","length","getErrors","addError","error","push","addErrors","initInternalSearchResultSetFormatters","ui5NumberFormat","NumberFormat","ui5DateFormat","DateFormat","initInternalSuggestionResultValueFormatter","initAsync","indexOf","initCustomFormattersAsync","err","SinaConfigurationError","sina","initializationResult","_formatMetadataAsync","getBusinessObjectDataSources","executeSequentialAsync","formatter","formatAsync","bind","promises","i","searchResultSetFormatter","suggestionResultSetFormatter","chartResultSetFormatter","j","metadataFormatter","Promise","all","loadMetadata","dataSource","resolve","createDataSourceMap","map","Clazz","properties","_createDataSourceResultSet","filteredItems","removeHierarchyDataSources","items","item","dataSourceResultSet","isNeededCache","list","getDataSource","isNeeded","dataSourceToBeChecked","cache","attributeMetaData","attributesMetadata","hierarchyName","hierarchyDisplayType","HierarchyResultView","element","isHierarchyDataSource","splice","BusinessObject","subType","Filtered","UserCategory","CanNotCreateAlreadyExistingDataSourceError","_addDataSource","_createDataSource","insertIndex","checkDataSource","getAllDataSource","result","hidden","getConfigurationAsync","forceReload","personalizedSearch","isPersonalizedSearchEditable","logUserEvent","event","getDebugInfo","dataSourceFromJson","json","fromJson","parseSimpleConditionFromJson","value","isObject","dateFromJson","userDefined","isDynamicValue","dynamic","operator","attribute","attributeLabel","valueLabel","parseComplexConditionFromJson","conditions","conditionJson","parseConditionFromJson","Simple","Complex","UnknownConditionTypeError","parseFilterFromJson","rootCondition","searchTerm","OnlyComplexConditionAllowedError","parseNavigationTargetFromJson","createStaticHierarchySearchNavigationTarget","hierarchyNodeId","hierarchyNodeLabel","navigationTargetLabel","hierarchyNodeAttributeName","hierarchyAttribute","helperHierarchyDataource","getHierarchyDataSource","filter","childrenCondition","DescendantOf","autoInsertCondition","__exports","__esModule"],"sources":["Sina.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\nimport * as core from \"../core/core\";\nimport * as errors from \"../core/errors\";\nimport * as util from \"../core/util\";\nimport { AttributeType } from \"./AttributeType\";\nimport { AttributeFormatType } from \"./AttributeFormatType\";\nimport { AttributeGroupTextArrangement } from \"./AttributeGroupTextArrangement\";\nimport { DataSourceSubType, DataSourceType } from \"./DataSourceType\";\nimport { MatchingStrategy } from \"./MatchingStrategy\";\nimport { LogicalOperator } from \"./LogicalOperator\";\nimport { ComparisonOperator } from \"./ComparisonOperator\";\nimport { FacetType } from \"./FacetType\";\nimport { SuggestionCalculationMode } from \"./SuggestionCalculationMode\";\nimport { SuggestionType } from \"./SuggestionType\";\nimport { SortOrder } from \"./SortOrder\";\nimport { ConditionType } from \"./ConditionType\";\nimport {\n    CDSAnnotationsParser,\n    CDSAnnotationsParserOptions,\n} from \"../providers/tools/cds/CDSAnnotationsParser\";\nimport {\n    NavigationTargetGenerator as SorsNavigationTargetGenerator,\n    NavigationTargetGeneratorOptions,\n} from \"../providers/tools/sors/NavigationTargetGenerator\";\nimport { SearchResultSet, SearchResultSetOptions } from \"./SearchResultSet\";\nimport { SearchResultSetItem, SearchResultSetItemOptions } from \"./SearchResultSetItem\";\nimport {\n    SearchResultSetItemAttribute,\n    SearchResultSetItemAttributeOptions,\n} from \"./SearchResultSetItemAttribute\";\nimport { ObjectSuggestion, ObjectSuggestionOptions } from \"./ObjectSuggestion\";\nimport { SearchQuery, SearchQueryOptions } from \"./SearchQuery\";\nimport { ChartQuery, ChartQueryOptions } from \"./ChartQuery\";\nimport { SuggestionQuery, SuggestionQueryOptions } from \"./SuggestionQuery\";\nimport { DataSourceQuery, DataSourceQueryOptions } from \"./DataSourceQuery\";\nimport { Filter, FilterOptions } from \"./Filter\";\nimport { ComplexCondition, ComplexConditionJSON, ComplexConditionProperties } from \"./ComplexCondition\";\nimport { SimpleCondition, SimpleConditionJSON, SimpleConditionProperties } from \"./SimpleCondition\";\nimport { AttributeMetadata, AttributeMetadataOptions } from \"./AttributeMetadata\";\nimport { AttributeGroupMetadata, AttributeGroupMetadataOptions } from \"./AttributeGroupMetadata\";\nimport { AttributeGroupMembership, AttributeGroupMembershipOptions } from \"./AttributeGroupMembership\";\nimport {\n    SearchResultSetItemAttributeGroup,\n    SearchResultSetItemAttributeGroupOptions,\n} from \"./SearchResultSetItemAttributeGroup\";\nimport {\n    SearchResultSetItemAttributeGroupMembership,\n    SearchResultSetItemAttributeGroupMembershipOptions,\n} from \"./SearchResultSetItemAttributeGroupMembership\";\nimport { SearchTermSuggestion, SearchTermSuggestionOptions } from \"./SearchTermSuggestion\";\nimport {\n    SearchTermAndDataSourceSuggestion,\n    SearchTermAndDataSourceSuggestionOptions,\n} from \"./SearchTermAndDataSourceSuggestion\";\nimport { DataSourceSuggestion, DataSourceSuggestionOptions } from \"./DataSourceSuggestion\";\nimport { SuggestionResultSet, SuggestionResultSetOptions } from \"./SuggestionResultSet\";\nimport { ChartResultSet, ChartResultSetOptions } from \"./ChartResultSet\";\nimport { DataSourceResultSet, DataSourceResultSetOptions } from \"./DataSourceResultSet\";\nimport { ChartResultSetItem, ChartResultSetItemOptions } from \"./ChartResultSetItem\";\nimport { DataSourceResultSetItem, DataSourceResultSetItemOptions } from \"./DataSourceResultSetItem\";\nimport { Capabilities, CapabilitiesOptions } from \"./Capabilities\";\nimport { Configuration, ConfigurationOptions } from \"./Configuration\";\nimport { NavigationTarget, NavigationTargetJson, NavigationTargetOptions } from \"./NavigationTarget\";\nimport { ChartResultSetFormatter, Formatter } from \"./formatters/Formatter\";\nimport { DataSource, DataSourceJSON, DataSourceAndAttributesJSON, DataSourceProperties } from \"./DataSource\";\nimport { UserCategoryDataSource } from \"./UserCategoryDataSource\";\nimport { ItemPostParser, ItemPostParserOptions } from \"../providers/tools/ItemPostParser\";\nimport {\n    SuvNavTargetResolver,\n    SuvNavTargetResolverOptions,\n} from \"../providers/tools/fiori/SuvNavTargetResolver\";\nimport {\n    FioriIntentsResolver,\n    FioriIntentsResolverOptions,\n} from \"../providers/tools/fiori/FioriIntentsResolver\";\nimport { ResultValueFormatter } from \"./formatters/ResultValueFormatter\";\nimport { NavtargetsInResultSetFormatter } from \"./formatters/NavtargetsInResultSetFormatter\";\nimport { HierarchyResultSetFormatter } from \"./formatters/HierarchyResultSetFormatter\";\nimport { SinaObject, SinaObjectProperties } from \"./SinaObject\";\nimport { AbstractProvider, AbstractProviderConfiguration } from \"../providers/AbstractProvider\";\nimport { FilteredDataSource, FilteredDataSourceProperties } from \"./FilteredDataSource\";\nimport { Provider as InAV2Provider } from \"../providers/inav2/Provider\";\nimport { Provider as ABAPODataProvider } from \"../providers/abap_odata/Provider\";\nimport { SinaConfiguration } from \"./SinaConfiguration\";\nimport { Condition } from \"./Condition\";\nimport { HierarchyQuery, HierarchyQueryOptions } from \"./HierarchyQuery\";\nimport { HierarchyNode, HierarchyNodeProperties } from \"./HierarchyNode\";\nimport { HierarchyResultSet, HierarchyResultSetOptions } from \"./HierarchyResultSet\";\nimport * as inav2TypeConverter from \"../providers/inav2/typeConverter\";\nimport { HierarchyNodePath, HierarchyNodePathProperties } from \"./HierarchyNodePath\";\nimport { HierarchyDisplayType } from \"./HierarchyDisplayType\";\nimport { Value } from \"./types\";\nimport { SuggestionResultValueFormatter } from \"./formatters/SuggestionResultValueFormatter\";\nimport { ESHNoBusinessObjectDatasourceError } from \"../core/errors\";\nimport { SearchTermAISuggestion } from \"./SearchTermAISuggestion\";\nimport { PublicSina } from \"./PublicSina\";\n\n/**\n * The Enterprise Search Client API.\n */\nexport class Sina {\n    errorList: Array<Error> = [];\n    inav2TypeConverter: typeof inav2TypeConverter;\n    provider: AbstractProvider;\n    createSearchNavigationTarget: (filter: Filter, label: string) => NavigationTarget;\n    createSearchQuery: (properties?: SearchQueryOptions) => SearchQuery;\n    createChartQuery: (properties: ChartQueryOptions) => ChartQuery;\n    createHierarchyQuery: (properties: HierarchyQueryOptions) => HierarchyQuery;\n    createSuggestionQuery: (properties?: SuggestionQueryOptions) => SuggestionQuery;\n    createDataSourceQuery: (properties: DataSourceQueryOptions) => DataSourceQuery;\n    createFilter: (properties?: FilterOptions) => Filter;\n    createComplexCondition: (properties?: ComplexConditionProperties) => ComplexCondition;\n    createSimpleCondition: (properties: SimpleConditionProperties) => SimpleCondition;\n    createHierarchyNode: (properties: HierarchyNodeProperties) => HierarchyNode;\n    createHierarchyNodePath: (properties: HierarchyNodePathProperties) => HierarchyNodePath;\n    _createAttributeMetadata: (properties: AttributeMetadataOptions) => AttributeMetadata;\n    _createAttributeGroupMetadata: (properties: AttributeGroupMetadataOptions) => AttributeGroupMetadata;\n    _createAttributeGroupMembership: (\n        properties: AttributeGroupMembershipOptions\n    ) => AttributeGroupMembership;\n    _createSearchResultSetItemAttribute: (\n        properties: SearchResultSetItemAttributeOptions\n    ) => SearchResultSetItemAttribute;\n    _createSearchResultSetItemAttributeGroup: (\n        properties: SearchResultSetItemAttributeGroupOptions\n    ) => SearchResultSetItemAttributeGroup;\n    _createSearchResultSetItemAttributeGroupMembership: (\n        properties: SearchResultSetItemAttributeGroupMembershipOptions\n    ) => SearchResultSetItemAttributeGroupMembership;\n    _createSearchResultSetItem: (properties: SearchResultSetItemOptions) => SearchResultSetItem;\n    _createSearchResultSet: (properties: SearchResultSetOptions) => SearchResultSet;\n    _createSearchTermSuggestion: (properties: SearchTermSuggestionOptions) => SearchTermSuggestion;\n    _createSearchTermAISuggestion: (properties: SearchTermSuggestionOptions) => SearchTermAISuggestion;\n    _createSearchTermAndDataSourceSuggestion: (\n        properties: SearchTermAndDataSourceSuggestionOptions\n    ) => SearchTermAndDataSourceSuggestion;\n    _createDataSourceSuggestion: (properties: DataSourceSuggestionOptions) => DataSourceSuggestion;\n    _createObjectSuggestion: (properties: ObjectSuggestionOptions) => ObjectSuggestion;\n    _createSuggestionResultSet: (properties: SuggestionResultSetOptions) => SuggestionResultSet;\n    _createChartResultSet: (properties: ChartResultSetOptions) => ChartResultSet;\n    _createHierarchyResultSet: (properties: HierarchyResultSetOptions) => HierarchyResultSet;\n    _createChartResultSetItem: (properties: ChartResultSetItemOptions) => ChartResultSetItem;\n    _createDataSourceResultSetItem: (properties: DataSourceResultSetItemOptions) => DataSourceResultSetItem;\n    _createCapabilities: (properties?: CapabilitiesOptions) => Capabilities;\n    _createConfiguration: (properties: ConfigurationOptions) => Configuration;\n    _createNavigationTarget: (properties: NavigationTargetOptions) => NavigationTarget;\n    createNavigationTarget: (properties: NavigationTargetOptions) => NavigationTarget;\n    _createSorsNavigationTargetGenerator: (\n        properties: NavigationTargetGeneratorOptions\n    ) => SorsNavigationTargetGenerator;\n    _createFioriIntentsResolver: (properties?: FioriIntentsResolverOptions) => FioriIntentsResolver;\n    _createCDSAnnotationsParser: (properties: CDSAnnotationsParserOptions) => CDSAnnotationsParser;\n    _createItemPostParser: (properties: ItemPostParserOptions) => ItemPostParser;\n    _createSuvNavTargetResolver: (properties?: SuvNavTargetResolverOptions) => SuvNavTargetResolver;\n    searchResultSetFormatters: Formatter[];\n    suggestionResultSetFormatters: Formatter[];\n    chartResultSetFormatters: ChartResultSetFormatter[];\n    metadataFormatters: Formatter[];\n    dataSources: DataSource[];\n    dataSourceMap: { [key: string]: DataSource };\n    allDataSource: DataSource;\n    DataSourceType: typeof DataSourceType;\n    HierarchyDisplayType: typeof HierarchyDisplayType;\n    DataSourceSubType: typeof DataSourceSubType;\n    isDummyProvider: boolean;\n    configurationPromise: Promise<Configuration>;\n    capabilities: Capabilities;\n    core: typeof core;\n    errors: typeof errors;\n    util: typeof util;\n    SortOrder: typeof SortOrder;\n    ComparisonOperator: typeof ComparisonOperator;\n    LogicalOperator: typeof LogicalOperator;\n    AttributeGroupTextArrangement: typeof AttributeGroupTextArrangement;\n    AttributeType: typeof AttributeType;\n    AttributeFormatType: typeof AttributeFormatType;\n    FacetType: typeof FacetType;\n    SuggestionType: typeof SuggestionType;\n    ConditionType: typeof ConditionType;\n    SuggestionCalculationMode: typeof SuggestionCalculationMode;\n    MatchingStrategy: typeof MatchingStrategy;\n    configuration: SinaConfiguration;\n    publicSina: PublicSina;\n\n    constructor(provider: AbstractProvider) {\n        this.core = core; // convenience: expose core lib\n        this.errors = errors; // convenience: expose core lib\n        this.util = util; // convenience: expose util lib\n        this.inav2TypeConverter = inav2TypeConverter; // do not use except for inav2 compatability\n        this.provider = provider;\n        this.createSearchQuery = this.createSinaObjectFactory(SearchQuery);\n        this.createChartQuery = this.createSinaObjectFactory(ChartQuery);\n        this.createHierarchyQuery = this.createSinaObjectFactory(HierarchyQuery);\n        this.createSuggestionQuery = this.createSinaObjectFactory(SuggestionQuery);\n        this.createDataSourceQuery = this.createSinaObjectFactory(DataSourceQuery);\n        this.createFilter = this.createSinaObjectFactory(Filter);\n        this.createComplexCondition = this.createSinaObjectFactory(ComplexCondition);\n        this.createSimpleCondition = this.createSinaObjectFactory(SimpleCondition);\n        this.createHierarchyNode = this.createSinaObjectFactory(HierarchyNode);\n        this.createHierarchyNodePath = this.createSinaObjectFactory(HierarchyNodePath);\n        this._createAttributeMetadata = this.createSinaObjectFactory(AttributeMetadata);\n        this._createAttributeGroupMetadata = this.createSinaObjectFactory(AttributeGroupMetadata);\n        this._createAttributeGroupMembership = this.createSinaObjectFactory(AttributeGroupMembership);\n        this._createSearchResultSetItemAttribute = this.createSinaObjectFactory(SearchResultSetItemAttribute);\n        this._createSearchResultSetItemAttributeGroup = this.createSinaObjectFactory(\n            SearchResultSetItemAttributeGroup\n        );\n        this._createSearchResultSetItemAttributeGroupMembership = this.createSinaObjectFactory(\n            SearchResultSetItemAttributeGroupMembership\n        );\n        this._createSearchResultSetItem = this.createSinaObjectFactory(SearchResultSetItem);\n        this._createSearchResultSet = this.createSinaObjectFactory(SearchResultSet);\n        this._createSearchTermSuggestion = this.createSinaObjectFactory(SearchTermSuggestion);\n        this._createSearchTermAISuggestion = this.createSinaObjectFactory(SearchTermAISuggestion);\n        this._createSearchTermAndDataSourceSuggestion = this.createSinaObjectFactory(\n            SearchTermAndDataSourceSuggestion\n        );\n        this._createDataSourceSuggestion = this.createSinaObjectFactory(DataSourceSuggestion);\n        this._createObjectSuggestion = this.createSinaObjectFactory(ObjectSuggestion);\n        this._createSuggestionResultSet = this.createSinaObjectFactory(SuggestionResultSet);\n        this._createChartResultSet = this.createSinaObjectFactory(ChartResultSet);\n        this._createHierarchyResultSet = this.createSinaObjectFactory(HierarchyResultSet);\n        this._createChartResultSetItem = this.createSinaObjectFactory(ChartResultSetItem);\n        this._createDataSourceResultSetItem = this.createSinaObjectFactory(DataSourceResultSetItem);\n        this._createCapabilities = this.createSinaObjectFactory(Capabilities);\n        this._createConfiguration = this.createSinaObjectFactory(Configuration);\n        this._createNavigationTarget = this.createSinaObjectFactory(NavigationTarget); // deprecated\n        this.createNavigationTarget = this.createSinaObjectFactory(NavigationTarget);\n        this._createSorsNavigationTargetGenerator = this.createSinaObjectFactory(\n            SorsNavigationTargetGenerator\n        );\n        this._createFioriIntentsResolver = this.createSinaObjectFactory(FioriIntentsResolver);\n        this._createCDSAnnotationsParser = this.createSinaObjectFactory(CDSAnnotationsParser);\n        this._createItemPostParser = this.createSinaObjectFactory(ItemPostParser);\n        this._createSuvNavTargetResolver = this.createSinaObjectFactory(SuvNavTargetResolver);\n        this.searchResultSetFormatters = [];\n        this.suggestionResultSetFormatters = [];\n        this.chartResultSetFormatters = [];\n        this.metadataFormatters = [];\n        this.dataSources = [];\n        this.dataSourceMap = {};\n        this.allDataSource = this.createDataSource({\n            id: \"All\",\n            label: \"All\",\n            type: DataSourceType.Category,\n        });\n        this.DataSourceType = DataSourceType;\n        this.DataSourceSubType = DataSourceSubType;\n        this.HierarchyDisplayType = HierarchyDisplayType;\n        this.AttributeGroupTextArrangement = AttributeGroupTextArrangement;\n        this.AttributeType = AttributeType;\n        this.AttributeFormatType = AttributeFormatType;\n        this.FacetType = FacetType;\n        this.SuggestionType = SuggestionType;\n        this.ConditionType = ConditionType;\n        this.SuggestionCalculationMode = SuggestionCalculationMode;\n        this.SortOrder = SortOrder;\n        this.MatchingStrategy = MatchingStrategy;\n        this.ComparisonOperator = ComparisonOperator;\n        this.LogicalOperator = LogicalOperator;\n    }\n\n    public getPublicSina(): PublicSina {\n        if (this.publicSina) {\n            return this.publicSina;\n        }\n        this.publicSina = new PublicSina(this);\n        return this.publicSina;\n    }\n\n    public hasErrors(): boolean {\n        return this.errorList.length > 0;\n    }\n\n    public getErrors(): Array<Error> {\n        return this.errorList;\n    }\n\n    public addError(error: Error) {\n        this.errorList.push(error);\n    }\n\n    public addErrors(errors: Array<Error>) {\n        this.errorList.push(...errors);\n    }\n\n    private initInternalSearchResultSetFormatters(configuration: SinaConfiguration): void {\n        this.searchResultSetFormatters.push(new NavtargetsInResultSetFormatter());\n        // this.searchResultSetFormatters.push(new RemovePureAdvancedSearchFacetsFormatter());\n        this.searchResultSetFormatters.push(\n            new ResultValueFormatter({\n                ui5NumberFormat: configuration.NumberFormat,\n                ui5DateFormat: configuration.DateFormat,\n            })\n        );\n        this.searchResultSetFormatters.push(new HierarchyResultSetFormatter());\n    }\n    private initInternalSuggestionResultValueFormatter(configuration: SinaConfiguration): void {\n        this.suggestionResultSetFormatters.push(\n            new SuggestionResultValueFormatter({\n                ui5NumberFormat: configuration.NumberFormat,\n                ui5DateFormat: configuration.DateFormat,\n            })\n        );\n    }\n\n    async initAsync(configuration: SinaConfiguration): Promise<void> {\n        this.configuration = configuration;\n        this.isDummyProvider = configuration.provider.indexOf(\"dummy\") > -1;\n        this.provider.label = configuration.label;\n\n        this.initInternalSearchResultSetFormatters(configuration);\n        this.initInternalSuggestionResultValueFormatter(configuration);\n\n        // init custom formatters shall after the registration of the internal formatters\n        try {\n            await this.initCustomFormattersAsync(configuration);\n        } catch (err) {\n            throw new errors.SinaConfigurationError(\"_evaluateConfigurationAsync\", err);\n        }\n\n        configuration.sina = this;\n        let initializationResult = await this.provider.initAsync(\n            configuration as AbstractProviderConfiguration\n        );\n        initializationResult = initializationResult || {\n            capabilities: null,\n        };\n        this.capabilities = initializationResult.capabilities || this._createCapabilities({ sina: this });\n\n        // run meta data formatters\n        // shall after the registration of the custom meta data formatter(initCustomFormattersAsync)\n        try {\n            await this._formatMetadataAsync();\n        } catch (err) {\n            throw new errors.SinaConfigurationError(\"metadataformatter(s)->formatAsync\", err);\n        }\n        // initialization\n        if (configuration.initAsync) {\n            try {\n                await configuration.initAsync(this);\n            } catch (err) {\n                throw new errors.SinaConfigurationError(\"configuration->initAsync\", err);\n            }\n        }\n        if (this.getBusinessObjectDataSources().length === 0 && !this.isDummyProvider) {\n            throw new ESHNoBusinessObjectDatasourceError();\n        }\n    }\n\n    private _formatMetadataAsync(): Promise<void> {\n        return core.executeSequentialAsync(\n            this.metadataFormatters,\n            function (this: Sina, formatter: Formatter) {\n                return formatter.formatAsync({\n                    dataSources: this.dataSources,\n                });\n            }.bind(this)\n        );\n    }\n\n    private async initCustomFormattersAsync(configuration: SinaConfiguration): Promise<void[]> {\n        const promises = [];\n\n        // search result set formatters\n        if (configuration.searchResultSetFormatters) {\n            for (let i = 0; i < configuration.searchResultSetFormatters.length; ++i) {\n                const searchResultSetFormatter = configuration.searchResultSetFormatters[i];\n                this.searchResultSetFormatters.push(searchResultSetFormatter);\n                if (searchResultSetFormatter.initAsync) {\n                    promises.push(searchResultSetFormatter.initAsync());\n                }\n            }\n        }\n\n        // suggestion result set formatters\n        if (configuration.suggestionResultSetFormatters) {\n            for (let i = 0; i < configuration.suggestionResultSetFormatters.length; ++i) {\n                const suggestionResultSetFormatter = configuration.suggestionResultSetFormatters[i];\n                this.suggestionResultSetFormatters.push(suggestionResultSetFormatter);\n                if (suggestionResultSetFormatter.initAsync) {\n                    promises.push(suggestionResultSetFormatter.initAsync());\n                }\n            }\n        }\n\n        // chart result set formatters\n        if (configuration.chartResultSetFormatters) {\n            for (let i = 0; i < configuration.chartResultSetFormatters.length; ++i) {\n                const chartResultSetFormatter = configuration.chartResultSetFormatters[i];\n                this.chartResultSetFormatters.push(chartResultSetFormatter);\n                if (chartResultSetFormatter.initAsync) {\n                    promises.push(chartResultSetFormatter.initAsync());\n                }\n            }\n        }\n\n        // metadata formatters\n        if (configuration.metadataFormatters) {\n            for (let j = 0; j < configuration.metadataFormatters.length; ++j) {\n                const metadataFormatter = configuration.metadataFormatters[j];\n                this.metadataFormatters.push(metadataFormatter);\n                if (metadataFormatter.initAsync) {\n                    promises.push(metadataFormatter.initAsync());\n                }\n            }\n        }\n\n        return Promise.all(promises);\n    }\n\n    async loadMetadata(dataSource: DataSource): Promise<void> {\n        // do not use\n        // only for compatability inav2\n        if (this.provider instanceof InAV2Provider) {\n            if (this.provider.loadMetadata) {\n                return this.provider.loadMetadata(dataSource);\n            }\n        }\n        return Promise.resolve();\n    }\n\n    createDataSourceMap(dataSources: Array<DataSource>): { [id: string]: DataSource } {\n        const map = {};\n        for (let i = 0; i < dataSources.length; ++i) {\n            const dataSource = dataSources[i];\n            map[dataSource.id] = dataSource;\n        }\n        return map;\n    }\n\n    private createSinaObjectFactory<T extends SinaObject>(\n        Clazz: new (properties: SinaObjectProperties) => T\n    ): (properties?: SinaObjectProperties) => T {\n        return function (properties) {\n            properties = properties ?? { sina: this };\n            properties.sina = this;\n            try {\n                return new Clazz(properties);\n            } finally {\n                delete properties.sina;\n            }\n        };\n    }\n\n    _createDataSourceResultSet(properties: DataSourceResultSetOptions): DataSourceResultSet {\n        const filteredItems = this.removeHierarchyDataSources(\n            properties.items as Array<DataSourceResultSetItem>,\n            (item: DataSourceResultSetItem) => item.dataSource\n        );\n        properties.items = filteredItems;\n        const dataSourceResultSet = new DataSourceResultSet(properties);\n        dataSourceResultSet.sina = this;\n        return dataSourceResultSet;\n    }\n\n    isNeededCache: Record<string, boolean> = {};\n    removeHierarchyDataSources<T>(list: Array<T>, getDataSource: (T) => DataSource): Array<T> {\n        const isNeeded = (dataSourceToBeChecked: DataSource): boolean => {\n            const cache = this.isNeededCache[dataSourceToBeChecked.id];\n            if (typeof cache !== \"undefined\") {\n                return cache;\n            }\n            for (const dataSource of this.dataSources) {\n                for (const attributeMetaData of dataSource.attributesMetadata) {\n                    if (\n                        (attributeMetaData as AttributeMetadata).hierarchyName ===\n                            dataSourceToBeChecked.hierarchyName &&\n                        (attributeMetaData as AttributeMetadata).hierarchyDisplayType ===\n                            HierarchyDisplayType.HierarchyResultView\n                    ) {\n                        this.isNeededCache[dataSourceToBeChecked.id] = true;\n                        return true;\n                    }\n                }\n            }\n            this.isNeededCache[dataSourceToBeChecked.id] = false;\n            return false;\n        };\n        for (let i = 0; i < list.length; i++) {\n            const element = list[i];\n            const dataSource = getDataSource(element);\n            if (!dataSource.isHierarchyDataSource) {\n                continue;\n            }\n            if (!isNeeded(dataSource)) {\n                list.splice(i, 1);\n                i--;\n            }\n        }\n        return list;\n    }\n\n    createDataSource(properties: DataSourceProperties | FilteredDataSourceProperties): DataSource {\n        properties.sina = this;\n        let dataSource;\n        switch (properties.type) {\n            case DataSourceType.BusinessObject:\n                switch (properties.subType) {\n                    case DataSourceSubType.Filtered:\n                        dataSource = new FilteredDataSource(properties as FilteredDataSourceProperties);\n                        break;\n                    default:\n                        dataSource = new DataSource(properties);\n                }\n                break;\n            case DataSourceType.UserCategory:\n                dataSource = new UserCategoryDataSource(properties);\n                break;\n            default:\n                dataSource = new DataSource(properties);\n        }\n        if (this.dataSourceMap[dataSource.id]) {\n            throw new errors.CanNotCreateAlreadyExistingDataSourceError(dataSource.id);\n        }\n        this._addDataSource(dataSource);\n        return dataSource;\n    }\n\n    /**\n     *\n     * @deprecated Use sina.createDataSource() instead\n     */\n    _createDataSource(properties: DataSourceProperties): DataSource {\n        return this.createDataSource(properties);\n    }\n\n    private _addDataSource(dataSource: DataSource): void {\n        if (\n            dataSource.type === DataSourceType.BusinessObject &&\n            dataSource.subType === DataSourceSubType.Filtered\n        ) {\n            // 1 filtered datasources\n            let insertIndex = -1;\n            for (let i = this.dataSources.length - 1; i >= 1; --i) {\n                const checkDataSource = this.dataSources[i];\n                if (\n                    checkDataSource.type === DataSourceType.BusinessObject &&\n                    checkDataSource.subType === DataSourceSubType.Filtered\n                ) {\n                    insertIndex = i;\n                    break;\n                }\n            }\n            if (insertIndex >= 0) {\n                this.dataSources.splice(insertIndex + 1, 0, dataSource);\n            } else {\n                this.dataSources.push(dataSource);\n            }\n        } else {\n            // 2 other datasources\n            this.dataSources.push(dataSource);\n        }\n        this.dataSourceMap[dataSource.id] = dataSource;\n    }\n\n    getAllDataSource(): DataSource {\n        return this.allDataSource;\n    }\n\n    getBusinessObjectDataSources(): DataSource[] {\n        const result = [];\n        for (let i = 0; i < this.dataSources.length; ++i) {\n            const dataSource = this.dataSources[i];\n            if (\n                !dataSource.hidden &&\n                dataSource.type === DataSourceType.BusinessObject &&\n                dataSource.subType !== DataSourceSubType.Filtered\n            ) {\n                result.push(dataSource);\n            }\n        }\n        return this.removeHierarchyDataSources(result, (dataSource: DataSource) => dataSource);\n    }\n\n    getDataSource(id: string): DataSource {\n        return this.dataSourceMap[id];\n    }\n\n    async getConfigurationAsync(properties: { forceReload?: boolean } = {}): Promise<Configuration> {\n        if (this.provider instanceof InAV2Provider || this.provider instanceof ABAPODataProvider) {\n            if (this.configurationPromise && !properties.forceReload) {\n                return this.configurationPromise;\n            }\n            this.configurationPromise = this.provider.getConfigurationAsync();\n            return this.configurationPromise;\n        }\n        return Promise.resolve(\n            this._createConfiguration({\n                personalizedSearch: false,\n                isPersonalizedSearchEditable: false,\n            })\n        );\n    }\n\n    logUserEvent(event: unknown): void {\n        this.provider.logUserEvent(event);\n    }\n\n    getDebugInfo(): string {\n        return this.provider.getDebugInfo();\n    }\n\n    dataSourceFromJson(json: DataSourceJSON | DataSourceAndAttributesJSON): DataSource {\n        return DataSource.fromJson(json, this);\n    }\n\n    parseSimpleConditionFromJson(json: SimpleConditionJSON): SimpleCondition {\n        let value;\n        if (core.isObject(json.value)) {\n            value = util.dateFromJson(json.value);\n        } else {\n            value = json.value;\n        }\n        // Following should satisfy no-unneeded-ternary eslint rule:\n        let userDefined;\n        if (json.userDefined) {\n            userDefined = true;\n        } else {\n            userDefined = false;\n        }\n        let isDynamicValue;\n        if (json.dynamic) {\n            isDynamicValue = true;\n        } else {\n            isDynamicValue = false;\n        }\n        return this.createSimpleCondition({\n            operator: json.operator,\n            attribute: json.attribute,\n            value: value,\n            attributeLabel: json.attributeLabel,\n            valueLabel: json.valueLabel,\n            userDefined: userDefined,\n            isDynamicValue: isDynamicValue,\n        });\n    }\n\n    parseComplexConditionFromJson(json: ComplexConditionJSON): ComplexCondition {\n        const conditions = [];\n        for (let i = 0; i < json.conditions.length; ++i) {\n            const conditionJson = json.conditions[i];\n            conditions.push(this.parseConditionFromJson(conditionJson));\n        }\n        // Following should satisfy no-unneeded-ternary eslint rule:\n        let userDefined;\n        if (json.userDefined) {\n            userDefined = true;\n        } else {\n            userDefined = false;\n        }\n        return this.createComplexCondition({\n            operator: json.operator,\n            conditions: conditions,\n            attributeLabel: json.attributeLabel,\n            valueLabel: json.valueLabel,\n            userDefined: userDefined,\n        });\n    }\n\n    parseConditionFromJson(json: SimpleConditionJSON | ComplexConditionJSON): Condition {\n        switch (json.type) {\n            case ConditionType.Simple:\n                return this.parseSimpleConditionFromJson(json as SimpleConditionJSON);\n            case ConditionType.Complex:\n                return this.parseComplexConditionFromJson(json as ComplexConditionJSON);\n            default:\n                throw new errors.UnknownConditionTypeError(json.type);\n        }\n    }\n\n    parseFilterFromJson(json: {\n        searchTerm: string;\n        rootCondition: ComplexConditionJSON;\n        dataSource: DataSource;\n    }): Filter {\n        const rootCondition = this.parseConditionFromJson(json.rootCondition);\n        if (rootCondition instanceof ComplexCondition) {\n            return this.createFilter({\n                searchTerm: json?.searchTerm,\n                rootCondition,\n                dataSource: this.dataSourceFromJson(json.dataSource),\n            });\n        } else {\n            throw new errors.OnlyComplexConditionAllowedError();\n        }\n    }\n\n    parseNavigationTargetFromJson(json: NavigationTargetJson) {\n        return this.createNavigationTarget(json);\n    }\n\n    // Assemble hiearchy down navigation link as title navigation\n    createStaticHierarchySearchNavigationTarget(\n        hierarchyNodeId: Value,\n        hierarchyNodeLabel: string,\n        dataSource: DataSource,\n        navigationTargetLabel: string,\n        hierarchyNodeAttributeName?: string\n    ): NavigationTarget {\n        if (!hierarchyNodeAttributeName) {\n            hierarchyNodeAttributeName = dataSource.hierarchyAttribute;\n            if (!hierarchyNodeAttributeName) {\n                const helperHierarchyDataource = dataSource.getHierarchyDataSource();\n                if (helperHierarchyDataource && helperHierarchyDataource.hierarchyAttribute) {\n                    hierarchyNodeAttributeName = helperHierarchyDataource.hierarchyAttribute;\n                } else {\n                    return null;\n                }\n            }\n        }\n\n        const filter = new Filter({\n            dataSource: dataSource,\n            searchTerm: \"\", //navigation mode, ignore content in search input box\n            sina: this,\n        });\n\n        // DescendantOf $$ROOT$$ === search for all without any filter condition\n        if (hierarchyNodeId !== \"$$ROOT$$\") {\n            // Set operator as DescendantOf and let Sina SearchQuery _executeSearchQuery decide the final operator/operators\n            const childrenCondition = new SimpleCondition({\n                attribute: hierarchyNodeAttributeName,\n                operator: ComparisonOperator.DescendantOf,\n                value: hierarchyNodeId,\n                valueLabel: hierarchyNodeLabel,\n            });\n            filter.autoInsertCondition(childrenCondition);\n        }\n\n        return this.createSearchNavigationTarget(filter, navigationTargetLabel || \"Children Folders\");\n    }\n\n    getHierarchyDataSource(hierarchyName: string): DataSource {\n        const dataSources = this.dataSources;\n        for (let i = 0; i < dataSources.length; ++i) {\n            const dataSource = dataSources[i];\n            if (dataSource.type !== this.DataSourceType.BusinessObject) {\n                continue;\n            }\n            if (!dataSource.isHierarchyDataSource) {\n                continue;\n            }\n            if (hierarchyName === dataSource.hierarchyName) {\n                return dataSource;\n            }\n        }\n    }\n}\n"],"mappings":"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","ignoreList":[]}