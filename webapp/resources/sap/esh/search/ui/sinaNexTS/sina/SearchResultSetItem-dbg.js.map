{"version":3,"file":"SearchResultSetItem-dbg.js","names":["sap","ui","define","___ResultSetItem","___core_core","___AttributeMetadata","ResultSetItem","generateGuid","AttributeMetadata","SearchResultSetItem","dataSource","attributes","attributesMap","titleAttributes","titleDescriptionAttributes","detailAttributes","defaultNavigationTarget","navigationTargets","score","hierarchyNodePaths","constructor","properties","setAttributes","setTitleAttributes","setTitleDescriptionAttributes","setDetailAttributes","setDefaultNavigationTarget","setNavigationTargets","navigationTarget","undefined","parent","addNavigationTarget","push","attribute","id","Array","isArray","length","i","item","key","parts","keyAttributeValues","filter","metadata","isKey","map","value","join","titleAttributeValues","titleAttribute","subTitleAttributes","getSubAttributes","subTitleAttribute","detailAttributeValues","maxDetailAttributes","Math","min","detailAttribute","subDetailAttributes","subDetailAttribute","toString","result","title","__exports","__esModule"],"sources":["SearchResultSetItem.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\nimport { ResultSetItem } from \"./ResultSetItem\";\nimport { DataSource } from \"./DataSource\";\nimport { SearchResultSetItemAttribute } from \"./SearchResultSetItemAttribute\";\nimport { NavigationTarget } from \"./NavigationTarget\";\nimport { SinaObjectProperties } from \"./SinaObject\";\nimport { generateGuid } from \"../core/core\";\nimport { SearchResultSetItemAttributeBase } from \"./SearchResultSetItemAttributeBase\";\nimport { HierarchyNodePath } from \"./HierarchyNodePath\";\nimport { SearchResultSetItemAttributeGroup } from \"./SearchResultSetItemAttributeGroup\";\nimport { AttributeMetadata } from \"./AttributeMetadata\";\n\nexport interface SearchResultSetItemOptions extends SinaObjectProperties {\n    dataSource: DataSource;\n    attributes: Array<SearchResultSetItemAttribute>;\n    titleAttributes: Array<SearchResultSetItemAttributeBase>;\n    titleDescriptionAttributes?: Array<SearchResultSetItemAttribute>;\n    detailAttributes: Array<SearchResultSetItemAttributeBase>;\n    defaultNavigationTarget?: NavigationTarget;\n    navigationTargets?: Array<NavigationTarget>;\n    score?: number;\n    hierarchyNodePaths?: Array<HierarchyNodePath>;\n}\nexport class SearchResultSetItem extends ResultSetItem {\n    // _meta: {\n    //     properties: {\n    //         dataSource: {\n    //             required: true\n    //         },\n    //         titleAttributes: {\n    //             required: true,\n    //             aggregation: true\n    //         },\n    //         titleDescriptionAttributes: {\n    //             required: false,\n    //             aggregation: true\n    //         },\n    //         detailAttributes: {\n    //             required: true,\n    //             aggregation: true\n    //         },\n    //         defaultNavigationTarget: {\n    //             required: false,\n    //             aggregation: true\n    //         },\n    //         navigationTargets: {\n    //             required: false,\n    //             aggregation: true\n    //         },\n    //         score: {\n    //             required: false,\n    //             default: 0\n    //         }\n    //     }\n    // },\n\n    dataSource: DataSource;\n    attributes: Array<SearchResultSetItemAttribute>;\n    attributesMap: Record<string, SearchResultSetItemAttribute>;\n    titleAttributes: Array<SearchResultSetItemAttributeBase>;\n    titleDescriptionAttributes: Array<SearchResultSetItemAttribute | SearchResultSetItemAttributeGroup>;\n    detailAttributes: Array<SearchResultSetItemAttributeBase>;\n    defaultNavigationTarget: NavigationTarget;\n    navigationTargets: Array<NavigationTarget>;\n    score = 0;\n    hierarchyNodePaths?: Array<HierarchyNodePath>;\n\n    constructor(properties: SearchResultSetItemOptions) {\n        super(properties);\n        this.dataSource = properties.dataSource ?? this.dataSource;\n        this.setAttributes(properties.attributes || []);\n        this.setTitleAttributes(properties.titleAttributes);\n        this.setTitleDescriptionAttributes(properties.titleDescriptionAttributes);\n        this.setDetailAttributes(properties.detailAttributes);\n        this.setDefaultNavigationTarget(properties.defaultNavigationTarget);\n        this.setNavigationTargets(properties.navigationTargets || []);\n        this.score = properties.score ?? this.score;\n        this.hierarchyNodePaths = properties.hierarchyNodePaths ?? this.hierarchyNodePaths;\n    }\n\n    setDefaultNavigationTarget(navigationTarget: NavigationTarget) {\n        if (!navigationTarget) {\n            this.defaultNavigationTarget = undefined;\n            return;\n        }\n        this.defaultNavigationTarget = navigationTarget;\n        navigationTarget.parent = this;\n    }\n\n    setNavigationTargets(navigationTargets: Array<NavigationTarget>) {\n        this.navigationTargets = [];\n        if (!navigationTargets) {\n            return;\n        }\n        for (const navigationTarget of navigationTargets) {\n            this.addNavigationTarget(navigationTarget);\n        }\n    }\n\n    addNavigationTarget(navigationTarget: NavigationTarget) {\n        this.navigationTargets.push(navigationTarget);\n        navigationTarget.parent = this;\n    }\n\n    setAttributes(attributes: Array<SearchResultSetItemAttribute>) {\n        this.attributes = [];\n        this.attributesMap = {};\n        for (const attribute of attributes) {\n            this.attributes.push(attribute);\n            this.attributesMap[attribute.id] = attribute;\n            attribute.parent = this;\n        }\n    }\n\n    setTitleAttributes(titleAttributes: Array<SearchResultSetItemAttributeBase>): SearchResultSetItem {\n        this.titleAttributes = [];\n        if (!Array.isArray(titleAttributes) || titleAttributes.length < 1) {\n            return this;\n        }\n        for (let i = 0; i < titleAttributes.length; i++) {\n            const item = titleAttributes[i] as SearchResultSetItemAttributeBase;\n            item.parent = this;\n            this.titleAttributes.push(item);\n        }\n        return this;\n    }\n\n    setTitleDescriptionAttributes(\n        titleDescriptionAttributes: Array<SearchResultSetItemAttribute>\n    ): SearchResultSetItem {\n        this.titleDescriptionAttributes = [];\n        if (!Array.isArray(titleDescriptionAttributes) || titleDescriptionAttributes.length < 1) {\n            return this;\n        }\n        for (let i = 0; i < titleDescriptionAttributes.length; i++) {\n            const item = titleDescriptionAttributes[i] as SearchResultSetItemAttribute;\n            item.parent = this;\n            this.titleDescriptionAttributes.push(item);\n        }\n        return this;\n    }\n\n    setDetailAttributes(detailAttributes: Array<SearchResultSetItemAttributeBase>): SearchResultSetItem {\n        this.detailAttributes = [];\n        if (!Array.isArray(detailAttributes) || detailAttributes.length < 1) {\n            return this;\n        }\n        for (let i = 0; i < detailAttributes.length; i++) {\n            const item = detailAttributes[i] as SearchResultSetItemAttributeBase;\n            item.parent = this;\n            this.detailAttributes.push(item);\n        }\n        return this;\n    }\n\n    get key(): string {\n        const parts = [];\n        parts.push(this.dataSource.id);\n        // Filter key single attributes and return their metadata.id\n        const keyAttributeValues = this.attributes\n            .filter(\n                (attribute) =>\n                    attribute.metadata instanceof AttributeMetadata && attribute.metadata.isKey === true\n            )\n            .map((attribute) => attribute.value);\n\n        if (keyAttributeValues.length > 0 && keyAttributeValues.join(\"\").length > 0) {\n            parts.push(...keyAttributeValues);\n        }\n\n        // If no key attributes are defined, use the title attributes' values\n        if (parts.length === 1) {\n            const titleAttributeValues = [];\n            for (const titleAttribute of this.titleAttributes) {\n                const subTitleAttributes = titleAttribute.getSubAttributes();\n                for (const subTitleAttribute of subTitleAttributes) {\n                    titleAttributeValues.push(subTitleAttribute.value);\n                }\n            }\n            if (titleAttributeValues.length > 0 && titleAttributeValues.join(\"\").length > 0) {\n                parts.push(...titleAttributeValues);\n            }\n        }\n\n        // If no key, no title attributes are defined,\n        // use the first 3 details attributes' values, if available\n        if (parts.length === 1) {\n            const detailAttributeValues = [];\n            const maxDetailAttributes = Math.min(3, this.detailAttributes.length);\n            for (let i = 0; i < maxDetailAttributes; i++) {\n                const detailAttribute = this.detailAttributes[i];\n                const subDetailAttributes = detailAttribute.getSubAttributes();\n                for (const subDetailAttribute of subDetailAttributes) {\n                    detailAttributeValues.push(subDetailAttribute.value);\n                }\n            }\n            if (detailAttributeValues.length > 0 && detailAttributeValues.join(\"\").length > 0) {\n                parts.push(...detailAttributeValues);\n            }\n        }\n\n        // no key, no title attributes, no first 3 details attributes -> use guid\n        // this bottom of the barrel workaround works only inside same search session.\n        // in cross search sessions scenario the key for same item will be different\n        // the potential comparison of same item will fail without any hint for end users\n        if (parts.length === 1) {\n            parts.push(generateGuid());\n        }\n        return parts.join(\"-\");\n    }\n\n    toString(): string {\n        let i;\n        const result = [];\n        const title = [];\n        for (i = 0; i < this.titleAttributes.length; ++i) {\n            const titleAttribute = this.titleAttributes[i];\n            title.push(titleAttribute.toString());\n        }\n        result.push(title.join(\" \"));\n        for (i = 0; i < this.detailAttributes.length; ++i) {\n            const detailAttribute = this.detailAttributes[i];\n            result.push(\"  - \" + detailAttribute.toString());\n        }\n        return result.join(\"\\n\");\n    }\n}\n"],"mappings":"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","ignoreList":[]}