{"version":3,"file":"util-dbg.js","names":["sap","ui","define","___ComparisonOperator","___ComplexCondition","___Filter","___LogicalOperator","___SearchResultSetItemAttribute","___SearchResultSetItemAttributeGroup","___SimpleCondition","___HierarchyDisplayType","ComparisonOperator","ComplexCondition","Filter","LogicalOperator","SearchResultSetItemAttribute","SearchResultSetItemAttributeGroup","SimpleCondition","HierarchyDisplayType","convertOperator2Wildcards","value","operator","Eq","result","values","split","i","length","trimedValue","trim","Co","Bw","Ew","push","join","getNavigationHierarchyDataSources","sina","hierarchyAttrId","hierarchyName","dataSource","navigationDataSources","boDataSources","getBusinessObjectDataSources","forEach","boDataSource","getHierarchyDataSource","attributesMetadata","attribute","id","hierarchyDisplayType","HierarchyResultView","StaticHierarchyFacet","assembleTitle","titleValueArray","titleAttributes","titleAttr","Array","isArray","attributes","subAttributeGroup","startsWith","valueFormatted","filter","item","assembleHierarchyDecendantsNavigations","attrName","attrValue","attrValueLabel","datasetCondition","DescendantOf","valueLabel","wrapComplexConditionDS","And","conditions","rootConditionDS","navigationDataSource","filterDS","searchTerm","rootCondition","navigationTargets","createSearchNavigationTarget","labelPlural","stringifyValue","String","undefined","toString","JSON","stringify","__exports","__esModule"],"sources":["util.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\nimport { ComparisonOperator } from \"./ComparisonOperator\";\nimport { ComplexCondition } from \"./ComplexCondition\";\nimport { DataSource } from \"./DataSource\";\nimport { Filter } from \"./Filter\";\nimport { LogicalOperator } from \"./LogicalOperator\";\nimport { SearchResultSetItem } from \"./SearchResultSetItem\";\nimport { SearchResultSetItemAttribute } from \"./SearchResultSetItemAttribute\";\nimport { SearchResultSetItemAttributeBase } from \"./SearchResultSetItemAttributeBase\";\nimport { SearchResultSetItemAttributeGroup } from \"./SearchResultSetItemAttributeGroup\";\nimport { SearchResultSetItemAttributeGroupMembership } from \"./SearchResultSetItemAttributeGroupMembership\";\nimport { SimpleCondition } from \"./SimpleCondition\";\nimport { Sina } from \"./Sina\";\nimport { Value } from \"./types\";\nimport { HierarchyDisplayType } from \"./HierarchyDisplayType\";\nimport { AttributeMetadata } from \"./AttributeMetadata\";\n\nexport function convertOperator2Wildcards(value: string, operator: ComparisonOperator): string {\n    if (operator === ComparisonOperator.Eq) {\n        return value;\n    }\n\n    const result = [];\n    const values = value.split(\" \");\n    for (let i = 0; i < values.length; i++) {\n        let trimedValue = values[i].trim();\n        if (trimedValue.length === 0) {\n            continue;\n        }\n\n        switch (operator) {\n            case ComparisonOperator.Co:\n                trimedValue = \"*\" + trimedValue + \"*\";\n                break;\n            case ComparisonOperator.Bw:\n                trimedValue = trimedValue + \"*\";\n                break;\n            case ComparisonOperator.Ew:\n                trimedValue = \"*\" + trimedValue;\n                break;\n            default:\n                break;\n        }\n\n        result.push(trimedValue);\n    }\n\n    return result.join(\" \");\n}\n\nexport function getNavigationHierarchyDataSources(\n    sina: Sina,\n    hierarchyAttrId: string,\n    hierarchyName: string,\n    dataSource: DataSource\n): Array<DataSource> {\n    const navigationDataSources = [];\n    if (hierarchyAttrId?.length && sina) {\n        const boDataSources: Array<DataSource> = sina.getBusinessObjectDataSources();\n        boDataSources.forEach((boDataSource) => {\n            if (boDataSource.getHierarchyDataSource() === dataSource) {\n                navigationDataSources.push(boDataSource);\n            } else if (boDataSource.hierarchyName === hierarchyAttrId) {\n                // avoid self reference\n                return;\n            } else {\n                boDataSource.attributesMetadata.forEach((attribute) => {\n                    if (\n                        ((attribute as AttributeMetadata).hierarchyName === hierarchyName &&\n                            attribute.id === hierarchyAttrId &&\n                            (attribute as AttributeMetadata).hierarchyDisplayType ===\n                                HierarchyDisplayType.HierarchyResultView) ||\n                        (attribute as AttributeMetadata).hierarchyDisplayType ===\n                            HierarchyDisplayType.StaticHierarchyFacet\n                    ) {\n                        navigationDataSources.push(boDataSource);\n                    }\n                });\n            }\n        });\n    }\n    return navigationDataSources;\n}\n\n// Prepare title as value label in filter condition\nexport function assembleTitle(result: SearchResultSetItem): string {\n    const titleValueArray = [];\n    result.titleAttributes.forEach((titleAttr: SearchResultSetItemAttributeBase) => {\n        if (titleAttr instanceof SearchResultSetItemAttributeGroup && Array.isArray(titleAttr.attributes)) {\n            titleAttr.attributes.forEach((subAttributeGroup: SearchResultSetItemAttributeGroupMembership) => {\n                if (\n                    subAttributeGroup.attribute &&\n                    subAttributeGroup.attribute instanceof SearchResultSetItemAttribute &&\n                    subAttributeGroup.attribute.value?.startsWith(\"sap-icon://\") !== true\n                ) {\n                    titleValueArray.push(subAttributeGroup.attribute.valueFormatted);\n                }\n            });\n        } else if (titleAttr instanceof SearchResultSetItemAttribute) {\n            if (titleAttr.value.startsWith(\"sap-icon://\") !== true) {\n                titleValueArray.push(titleAttr.valueFormatted);\n            }\n        }\n    });\n    return titleValueArray.filter((item) => typeof item === \"string\" && item.trim() !== \"\").join(\" \");\n}\n\n// Assemble down navigation to related descendants as bottom navigation toolbar link\nexport function assembleHierarchyDecendantsNavigations(\n    result: SearchResultSetItem,\n    attrName: string,\n    attrValue: Value,\n    attrValueLabel: string,\n    navigationDataSources: Array<DataSource>\n): void {\n    const datasetCondition = new SimpleCondition({\n        attribute: attrName,\n        operator: ComparisonOperator.DescendantOf,\n        value: attrValue,\n        valueLabel: attrValueLabel,\n    });\n    const wrapComplexConditionDS = new ComplexCondition({\n        operator: LogicalOperator.And,\n        conditions: [datasetCondition],\n    });\n    const rootConditionDS = new ComplexCondition({\n        operator: LogicalOperator.And,\n        conditions: [wrapComplexConditionDS],\n    });\n    navigationDataSources.forEach((navigationDataSource) => {\n        const filterDS = new Filter({\n            dataSource: navigationDataSource,\n            searchTerm: \"\", //navigation mode, ignore content in search input box\n            rootCondition: rootConditionDS,\n            sina: result.sina,\n        });\n        result.navigationTargets.push(\n            result.sina.createSearchNavigationTarget(filterDS, navigationDataSource.labelPlural)\n        );\n    });\n}\n\nexport function stringifyValue(value: unknown): string {\n    if (typeof value === \"string\") {\n        return value;\n    }\n    if (typeof value === \"number\" || typeof value === \"boolean\") {\n        return String(value);\n    }\n    if (value === null || value === undefined) {\n        return \"\";\n    }\n    if (typeof value === \"object\") {\n        if (typeof value.toString === \"function\") {\n            return value.toString();\n        } else {\n            return JSON.stringify(value);\n        }\n    }\n    return \"\" + value;\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAJAA,GAAA,CAAAC,EAAA,CAAAC,MAAA,oNAAAC,qBAAA,EAAAC,mBAAA,EAAAC,SAAA,EAAAC,kBAAA,EAAAC,+BAAA,EAAAC,oCAAA,EAAAC,kBAAA,EAAAC,uBAAA;EAAA;;EAAA,MAKSC,kBAAkB,GAAAR,qBAAA;EAAA,MAClBS,gBAAgB,GAAAR,mBAAA;EAAA,MAEhBS,MAAM,GAAAR,SAAA;EAAA,MACNS,eAAe,GAAAR,kBAAA;EAAA,MAEfS,4BAA4B,GAAAR,+BAAA;EAAA,MAE5BS,iCAAiC,GAAAR,oCAAA;EAAA,MAEjCS,eAAe,GAAAR,kBAAA;EAAA,MAGfS,oBAAoB,GAAAR,uBAAA;EAGtB,SAASS,yBAAyBA,CAACC,KAAa,EAAEC,QAA4B,EAAU;IAC3F,IAAIA,QAAQ,KAAKV,kBAAkB,CAACW,EAAE,EAAE;MACpC,OAAOF,KAAK;IAChB;IAEA,MAAMG,MAAM,GAAG,EAAE;IACjB,MAAMC,MAAM,GAAGJ,KAAK,CAACK,KAAK,CAAC,GAAG,CAAC;IAC/B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,MAAM,CAACG,MAAM,EAAED,CAAC,EAAE,EAAE;MACpC,IAAIE,WAAW,GAAGJ,MAAM,CAACE,CAAC,CAAC,CAACG,IAAI,CAAC,CAAC;MAClC,IAAID,WAAW,CAACD,MAAM,KAAK,CAAC,EAAE;QAC1B;MACJ;MAEA,QAAQN,QAAQ;QACZ,KAAKV,kBAAkB,CAACmB,EAAE;UACtBF,WAAW,GAAG,GAAG,GAAGA,WAAW,GAAG,GAAG;UACrC;QACJ,KAAKjB,kBAAkB,CAACoB,EAAE;UACtBH,WAAW,GAAGA,WAAW,GAAG,GAAG;UAC/B;QACJ,KAAKjB,kBAAkB,CAACqB,EAAE;UACtBJ,WAAW,GAAG,GAAG,GAAGA,WAAW;UAC/B;QACJ;UACI;MACR;MAEAL,MAAM,CAACU,IAAI,CAACL,WAAW,CAAC;IAC5B;IAEA,OAAOL,MAAM,CAACW,IAAI,CAAC,GAAG,CAAC;EAC3B;EAEO,SAASC,iCAAiCA,CAC7CC,IAAU,EACVC,eAAuB,EACvBC,aAAqB,EACrBC,UAAsB,EACL;IACjB,MAAMC,qBAAqB,GAAG,EAAE;IAChC,IAAIH,eAAe,EAAEV,MAAM,IAAIS,IAAI,EAAE;MACjC,MAAMK,aAAgC,GAAGL,IAAI,CAACM,4BAA4B,CAAC,CAAC;MAC5ED,aAAa,CAACE,OAAO,CAAEC,YAAY,IAAK;QACpC,IAAIA,YAAY,CAACC,sBAAsB,CAAC,CAAC,KAAKN,UAAU,EAAE;UACtDC,qBAAqB,CAACP,IAAI,CAACW,YAAY,CAAC;QAC5C,CAAC,MAAM,IAAIA,YAAY,CAACN,aAAa,KAAKD,eAAe,EAAE;UACvD;UACA;QACJ,CAAC,MAAM;UACHO,YAAY,CAACE,kBAAkB,CAACH,OAAO,CAAEI,SAAS,IAAK;YACnD,IACMA,SAAS,CAAuBT,aAAa,KAAKA,aAAa,IAC7DS,SAAS,CAACC,EAAE,KAAKX,eAAe,IAC/BU,SAAS,CAAuBE,oBAAoB,KACjD/B,oBAAoB,CAACgC,mBAAmB,IAC/CH,SAAS,CAAuBE,oBAAoB,KACjD/B,oBAAoB,CAACiC,oBAAoB,EAC/C;cACEX,qBAAqB,CAACP,IAAI,CAACW,YAAY,CAAC;YAC5C;UACJ,CAAC,CAAC;QACN;MACJ,CAAC,CAAC;IACN;IACA,OAAOJ,qBAAqB;EAChC;;EAEA;EACO,SAASY,aAAaA,CAAC7B,MAA2B,EAAU;IAC/D,MAAM8B,eAAe,GAAG,EAAE;IAC1B9B,MAAM,CAAC+B,eAAe,CAACX,OAAO,CAAEY,SAA2C,IAAK;MAC5E,IAAIA,SAAS,YAAYvC,iCAAiC,IAAIwC,KAAK,CAACC,OAAO,CAACF,SAAS,CAACG,UAAU,CAAC,EAAE;QAC/FH,SAAS,CAACG,UAAU,CAACf,OAAO,CAAEgB,iBAA8D,IAAK;UAC7F,IACIA,iBAAiB,CAACZ,SAAS,IAC3BY,iBAAiB,CAACZ,SAAS,YAAYhC,4BAA4B,IACnE4C,iBAAiB,CAACZ,SAAS,CAAC3B,KAAK,EAAEwC,UAAU,CAAC,aAAa,CAAC,KAAK,IAAI,EACvE;YACEP,eAAe,CAACpB,IAAI,CAAC0B,iBAAiB,CAACZ,SAAS,CAACc,cAAc,CAAC;UACpE;QACJ,CAAC,CAAC;MACN,CAAC,MAAM,IAAIN,SAAS,YAAYxC,4BAA4B,EAAE;QAC1D,IAAIwC,SAAS,CAACnC,KAAK,CAACwC,UAAU,CAAC,aAAa,CAAC,KAAK,IAAI,EAAE;UACpDP,eAAe,CAACpB,IAAI,CAACsB,SAAS,CAACM,cAAc,CAAC;QAClD;MACJ;IACJ,CAAC,CAAC;IACF,OAAOR,eAAe,CAACS,MAAM,CAAEC,IAAI,IAAK,OAAOA,IAAI,KAAK,QAAQ,IAAIA,IAAI,CAAClC,IAAI,CAAC,CAAC,KAAK,EAAE,CAAC,CAACK,IAAI,CAAC,GAAG,CAAC;EACrG;;EAEA;EACO,SAAS8B,sCAAsCA,CAClDzC,MAA2B,EAC3B0C,QAAgB,EAChBC,SAAgB,EAChBC,cAAsB,EACtB3B,qBAAwC,EACpC;IACJ,MAAM4B,gBAAgB,GAAG,IAAInD,eAAe,CAAC;MACzC8B,SAAS,EAAEkB,QAAQ;MACnB5C,QAAQ,EAAEV,kBAAkB,CAAC0D,YAAY;MACzCjD,KAAK,EAAE8C,SAAS;MAChBI,UAAU,EAAEH;IAChB,CAAC,CAAC;IACF,MAAMI,sBAAsB,GAAG,IAAI3D,gBAAgB,CAAC;MAChDS,QAAQ,EAAEP,eAAe,CAAC0D,GAAG;MAC7BC,UAAU,EAAE,CAACL,gBAAgB;IACjC,CAAC,CAAC;IACF,MAAMM,eAAe,GAAG,IAAI9D,gBAAgB,CAAC;MACzCS,QAAQ,EAAEP,eAAe,CAAC0D,GAAG;MAC7BC,UAAU,EAAE,CAACF,sBAAsB;IACvC,CAAC,CAAC;IACF/B,qBAAqB,CAACG,OAAO,CAAEgC,oBAAoB,IAAK;MACpD,MAAMC,QAAQ,GAAG,IAAI/D,MAAM,CAAC;QACxB0B,UAAU,EAAEoC,oBAAoB;QAChCE,UAAU,EAAE,EAAE;QAAE;QAChBC,aAAa,EAAEJ,eAAe;QAC9BtC,IAAI,EAAEb,MAAM,CAACa;MACjB,CAAC,CAAC;MACFb,MAAM,CAACwD,iBAAiB,CAAC9C,IAAI,CACzBV,MAAM,CAACa,IAAI,CAAC4C,4BAA4B,CAACJ,QAAQ,EAAED,oBAAoB,CAACM,WAAW,CACvF,CAAC;IACL,CAAC,CAAC;EACN;EAEO,SAASC,cAAcA,CAAC9D,KAAc,EAAU;IACnD,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;MAC3B,OAAOA,KAAK;IAChB;IACA,IAAI,OAAOA,KAAK,KAAK,QAAQ,IAAI,OAAOA,KAAK,KAAK,SAAS,EAAE;MACzD,OAAO+D,MAAM,CAAC/D,KAAK,CAAC;IACxB;IACA,IAAIA,KAAK,KAAK,IAAI,IAAIA,KAAK,KAAKgE,SAAS,EAAE;MACvC,OAAO,EAAE;IACb;IACA,IAAI,OAAOhE,KAAK,KAAK,QAAQ,EAAE;MAC3B,IAAI,OAAOA,KAAK,CAACiE,QAAQ,KAAK,UAAU,EAAE;QACtC,OAAOjE,KAAK,CAACiE,QAAQ,CAAC,CAAC;MAC3B,CAAC,MAAM;QACH,OAAOC,IAAI,CAACC,SAAS,CAACnE,KAAK,CAAC;MAChC;IACJ;IACA,OAAO,EAAE,GAAGA,KAAK;EACrB;EAAC,IAAAoE,SAAA;IAAAC,UAAA;EAAA;EAAAD,SAAA,CAAArE,yBAAA,GAAAA,yBAAA;EAAAqE,SAAA,CAAArD,iCAAA,GAAAA,iCAAA;EAAAqD,SAAA,CAAApC,aAAA,GAAAA,aAAA;EAAAoC,SAAA,CAAAxB,sCAAA,GAAAA,sCAAA;EAAAwB,SAAA,CAAAN,cAAA,GAAAA,cAAA;EAAA,OAAAM,SAAA;AAAA","ignoreList":[]}