{"version":3,"file":"ChartQuery-dbg.js","names":["sap","ui","define","core","___DataSourceType","___FacetQuery","DataSourceSubType","DataSourceType","FacetQuery","ChartQuery","top","dimension","constructor","properties","equals","other","clone","label","icon","skip","nlq","sortOrder","filter","sina","_formatResultSetAsync","resultSet","executeSequentialAsync","chartResultSetFormatters","formatter","formatAsync","_execute","query","_doExecuteChartQuery","transformedQuery","_filteredQueryTransform","provider","executeChartQuery","_filteredQueryBackTransform","_genericFilteredQueryTransform","dataSource","type","BusinessObject","subType","Filtered","__exports","__esModule"],"sources":["ChartQuery.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\nimport * as core from \"../core/core\";\nimport { ChartResultSet } from \"./ChartResultSet\";\nimport { DataSourceSubType, DataSourceType } from \"./DataSourceType\";\nimport { FacetQuery } from \"./FacetQuery\";\nimport { ChartResultSetFormatter } from \"./formatters/Formatter\";\nimport { QueryOptions } from \"./Query\";\n\nexport interface ChartQueryOptions extends QueryOptions {\n    dimension: string;\n}\n\nexport class ChartQuery extends FacetQuery {\n    // _meta: {\n    //     properties: {\n    //         top: {\n    //             default: 5 // top is defined in base class query, this just overwrites the default value\n    //         },\n    //         dimension: {\n    //             required: true\n    //         }\n    //     }\n    // }\n\n    top = 5;\n    dimension: string;\n\n    constructor(properties: ChartQueryOptions) {\n        super(properties);\n        this.top = properties.top ?? this.top;\n        this.dimension = properties.dimension ?? this.dimension;\n    }\n\n    equals(other: ChartQuery): boolean {\n        return other instanceof ChartQuery && super.equals(other) && this.dimension === other.dimension;\n    }\n\n    clone(): ChartQuery {\n        return new ChartQuery({\n            label: this.label,\n            icon: this.icon,\n            skip: this.skip,\n            top: this.top,\n            nlq: this.nlq,\n            sortOrder: this.sortOrder,\n            filter: this.filter.clone(),\n            sina: this.sina,\n            dimension: this.dimension,\n        });\n    }\n\n    async _formatResultSetAsync(resultSet: ChartResultSet): Promise<void> {\n        return core.executeSequentialAsync(\n            this.sina.chartResultSetFormatters,\n            function (formatter: ChartResultSetFormatter) {\n                return formatter.formatAsync(resultSet);\n            }\n        );\n    }\n\n    async _execute(query: ChartQuery): Promise<ChartResultSet> {\n        return this._doExecuteChartQuery(query);\n    }\n\n    async _doExecuteChartQuery(query: ChartQuery): Promise<ChartResultSet> {\n        const transformedQuery = this._filteredQueryTransform(query);\n        const resultSet = await this.sina.provider.executeChartQuery(transformedQuery);\n        return this._filteredQueryBackTransform(query, resultSet);\n    }\n\n    private _filteredQueryTransform(query: ChartQuery): ChartQuery {\n        return this._genericFilteredQueryTransform(query) as ChartQuery;\n    }\n\n    private _filteredQueryBackTransform(query: ChartQuery, resultSet: ChartResultSet): ChartResultSet {\n        if (\n            query.filter.dataSource.type !== DataSourceType.BusinessObject ||\n            query.filter.dataSource.subType !== DataSourceSubType.Filtered\n        ) {\n            return resultSet;\n        }\n        resultSet.query = query;\n        return resultSet;\n    }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAJAA,GAAA,CAAAC,EAAA,CAAAC,MAAA,iEAAAC,IAAA,EAAAC,iBAAA,EAAAC,aAAA;EAAA;;EAAA,MAOSC,iBAAiB,GAAAF,iBAAA;EAAA,MAAEG,cAAc,GAAAH,iBAAA;EAAA,MACjCI,UAAU,GAAAH,aAAA;EAQZ,MAAMI,UAAU,SAASD,UAAU,CAAC;IACvC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEAE,GAAG,GAAG,CAAC;IACPC,SAAS;IAETC,WAAWA,CAACC,UAA6B,EAAE;MACvC,KAAK,CAACA,UAAU,CAAC;MACjB,IAAI,CAACH,GAAG,GAAGG,UAAU,CAACH,GAAG,IAAI,IAAI,CAACA,GAAG;MACrC,IAAI,CAACC,SAAS,GAAGE,UAAU,CAACF,SAAS,IAAI,IAAI,CAACA,SAAS;IAC3D;IAEAG,MAAMA,CAACC,KAAiB,EAAW;MAC/B,OAAOA,KAAK,YAAYN,UAAU,IAAI,KAAK,CAACK,MAAM,CAACC,KAAK,CAAC,IAAI,IAAI,CAACJ,SAAS,KAAKI,KAAK,CAACJ,SAAS;IACnG;IAEAK,KAAKA,CAAA,EAAe;MAChB,OAAO,IAAIP,UAAU,CAAC;QAClBQ,KAAK,EAAE,IAAI,CAACA,KAAK;QACjBC,IAAI,EAAE,IAAI,CAACA,IAAI;QACfC,IAAI,EAAE,IAAI,CAACA,IAAI;QACfT,GAAG,EAAE,IAAI,CAACA,GAAG;QACbU,GAAG,EAAE,IAAI,CAACA,GAAG;QACbC,SAAS,EAAE,IAAI,CAACA,SAAS;QACzBC,MAAM,EAAE,IAAI,CAACA,MAAM,CAACN,KAAK,CAAC,CAAC;QAC3BO,IAAI,EAAE,IAAI,CAACA,IAAI;QACfZ,SAAS,EAAE,IAAI,CAACA;MACpB,CAAC,CAAC;IACN;IAEA,MAAMa,qBAAqBA,CAACC,SAAyB,EAAiB;MAClE,OAAOtB,IAAI,CAACuB,sBAAsB,CAC9B,IAAI,CAACH,IAAI,CAACI,wBAAwB,EAClC,UAAUC,SAAkC,EAAE;QAC1C,OAAOA,SAAS,CAACC,WAAW,CAACJ,SAAS,CAAC;MAC3C,CACJ,CAAC;IACL;IAEA,MAAMK,QAAQA,CAACC,KAAiB,EAA2B;MACvD,OAAO,IAAI,CAACC,oBAAoB,CAACD,KAAK,CAAC;IAC3C;IAEA,MAAMC,oBAAoBA,CAACD,KAAiB,EAA2B;MACnE,MAAME,gBAAgB,GAAG,IAAI,CAACC,uBAAuB,CAACH,KAAK,CAAC;MAC5D,MAAMN,SAAS,GAAG,MAAM,IAAI,CAACF,IAAI,CAACY,QAAQ,CAACC,iBAAiB,CAACH,gBAAgB,CAAC;MAC9E,OAAO,IAAI,CAACI,2BAA2B,CAACN,KAAK,EAAEN,SAAS,CAAC;IAC7D;IAEQS,uBAAuBA,CAACH,KAAiB,EAAc;MAC3D,OAAO,IAAI,CAACO,8BAA8B,CAACP,KAAK,CAAC;IACrD;IAEQM,2BAA2BA,CAACN,KAAiB,EAAEN,SAAyB,EAAkB;MAC9F,IACIM,KAAK,CAACT,MAAM,CAACiB,UAAU,CAACC,IAAI,KAAKjC,cAAc,CAACkC,cAAc,IAC9DV,KAAK,CAACT,MAAM,CAACiB,UAAU,CAACG,OAAO,KAAKpC,iBAAiB,CAACqC,QAAQ,EAChE;QACE,OAAOlB,SAAS;MACpB;MACAA,SAAS,CAACM,KAAK,GAAGA,KAAK;MACvB,OAAON,SAAS;IACpB;EACJ;EAAC,IAAAmB,SAAA;IAAAC,UAAA;EAAA;EAAAD,SAAA,CAAAnC,UAAA,GAAAA,UAAA;EAAA,OAAAmC,SAAA;AAAA","ignoreList":[]}