{"version":3,"file":"ChartQuery.js","names":["sap","ui","define","core","___DataSourceType","___FacetQuery","DataSourceSubType","DataSourceType","FacetQuery","ChartQuery","top","dimension","constructor","properties","super","this","equals","other","clone","label","icon","skip","nlq","sortOrder","filter","sina","_formatResultSetAsync","resultSet","executeSequentialAsync","chartResultSetFormatters","formatter","formatAsync","_execute","query","_doExecuteChartQuery","transformedQuery","_filteredQueryTransform","provider","executeChartQuery","_filteredQueryBackTransform","_genericFilteredQueryTransform","dataSource","type","BusinessObject","subType","Filtered","__exports","__esModule"],"sources":["ChartQuery.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\nimport * as core from \"../core/core\";\nimport { ChartResultSet } from \"./ChartResultSet\";\nimport { DataSourceSubType, DataSourceType } from \"./DataSourceType\";\nimport { FacetQuery } from \"./FacetQuery\";\nimport { ChartResultSetFormatter } from \"./formatters/Formatter\";\nimport { QueryOptions } from \"./Query\";\n\nexport interface ChartQueryOptions extends QueryOptions {\n    dimension: string;\n}\n\nexport class ChartQuery extends FacetQuery {\n    // _meta: {\n    //     properties: {\n    //         top: {\n    //             default: 5 // top is defined in base class query, this just overwrites the default value\n    //         },\n    //         dimension: {\n    //             required: true\n    //         }\n    //     }\n    // }\n\n    top = 5;\n    dimension: string;\n\n    constructor(properties: ChartQueryOptions) {\n        super(properties);\n        this.top = properties.top ?? this.top;\n        this.dimension = properties.dimension ?? this.dimension;\n    }\n\n    equals(other: ChartQuery): boolean {\n        return other instanceof ChartQuery && super.equals(other) && this.dimension === other.dimension;\n    }\n\n    clone(): ChartQuery {\n        return new ChartQuery({\n            label: this.label,\n            icon: this.icon,\n            skip: this.skip,\n            top: this.top,\n            nlq: this.nlq,\n            sortOrder: this.sortOrder,\n            filter: this.filter.clone(),\n            sina: this.sina,\n            dimension: this.dimension,\n        });\n    }\n\n    async _formatResultSetAsync(resultSet: ChartResultSet): Promise<void> {\n        return core.executeSequentialAsync(\n            this.sina.chartResultSetFormatters,\n            function (formatter: ChartResultSetFormatter) {\n                return formatter.formatAsync(resultSet);\n            }\n        );\n    }\n\n    async _execute(query: ChartQuery): Promise<ChartResultSet> {\n        return this._doExecuteChartQuery(query);\n    }\n\n    async _doExecuteChartQuery(query: ChartQuery): Promise<ChartResultSet> {\n        const transformedQuery = this._filteredQueryTransform(query);\n        const resultSet = await this.sina.provider.executeChartQuery(transformedQuery);\n        return this._filteredQueryBackTransform(query, resultSet);\n    }\n\n    private _filteredQueryTransform(query: ChartQuery): ChartQuery {\n        return this._genericFilteredQueryTransform(query) as ChartQuery;\n    }\n\n    private _filteredQueryBackTransform(query: ChartQuery, resultSet: ChartResultSet): ChartResultSet {\n        if (\n            query.filter.dataSource.type !== DataSourceType.BusinessObject ||\n            query.filter.dataSource.subType !== DataSourceSubType.Filtered\n        ) {\n            return resultSet;\n        }\n        resultSet.query = query;\n        return resultSet;\n    }\n}\n"],"mappings":";;;;;AAAAA,IAAAC,GAAAC,OAAA,4DAAAC,EAAAC,EAAAC,GAAA,mBAOSC,EAAiBF,EAAA,2BAAEG,EAAcH,EAAA,wBACjCI,EAAUH,EAAA,cAQZ,MAAMI,UAAmBD,EAY5BE,IAAM,EACNC,UAEAC,YAAYC,GACRC,MAAMD,GACNE,KAAKL,IAAMG,EAAWH,KAAOK,KAAKL,IAClCK,KAAKJ,UAAYE,EAAWF,WAAaI,KAAKJ,SAClD,CAEAK,OAAOC,GACH,OAAOA,aAAiBR,GAAcK,MAAME,OAAOC,IAAUF,KAAKJ,YAAcM,EAAMN,SAC1F,CAEAO,QACI,OAAO,IAAIT,EAAW,CAClBU,MAAOJ,KAAKI,MACZC,KAAML,KAAKK,KACXC,KAAMN,KAAKM,KACXX,IAAKK,KAAKL,IACVY,IAAKP,KAAKO,IACVC,UAAWR,KAAKQ,UAChBC,OAAQT,KAAKS,OAAON,QACpBO,KAAMV,KAAKU,KACXd,UAAWI,KAAKJ,WAExB,CAEA,2BAAMe,CAAsBC,GACxB,OAAOxB,EAAKyB,uBACRb,KAAKU,KAAKI,yBACV,SAAUC,GACN,OAAOA,EAAUC,YAAYJ,EACjC,EAER,CAEA,cAAMK,CAASC,GACX,OAAOlB,KAAKmB,qBAAqBD,EACrC,CAEA,0BAAMC,CAAqBD,GACvB,MAAME,EAAmBpB,KAAKqB,wBAAwBH,GACtD,MAAMN,QAAkBZ,KAAKU,KAAKY,SAASC,kBAAkBH,GAC7D,OAAOpB,KAAKwB,4BAA4BN,EAAON,EACnD,CAEQS,wBAAwBH,GAC5B,OAAOlB,KAAKyB,+BAA+BP,EAC/C,CAEQM,4BAA4BN,EAAmBN,GACnD,GACIM,EAAMT,OAAOiB,WAAWC,OAASnC,EAAeoC,gBAChDV,EAAMT,OAAOiB,WAAWG,UAAYtC,EAAkBuC,SACxD,CACE,OAAOlB,CACX,CACAA,EAAUM,MAAQA,EAClB,OAAON,CACX,EACH,IAAAmB,EAAA,CAAAC,WAAA,MAAAD,EAAArC,aAAA,OAAAqC,CAAA","ignoreList":[]}