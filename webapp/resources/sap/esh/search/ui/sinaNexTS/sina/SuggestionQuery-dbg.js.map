{"version":3,"file":"SuggestionQuery-dbg.js","names":["sap","ui","define","core","___Query","___SuggestionType","___SuggestionCalculationMode","___DataSourceType","___core_errors","Query","SuggestionType","SuggestionCalculationMode","DataSourceSubType","DataSourceType","QueryIsReadOnlyError","SuggestionQuery","calculationModes","Data","History","types","DataSource","Object","SearchTerm","constructor","properties","_formatResultSetAsync","resultSet","query","indexOf","filter","dataSource","type","sina","BusinessObject","executeSequentialAsync","suggestionResultSetFormatters","formatter","formatAsync","setTypes","setCalculationModes","_createReadOnlyClone","clone","getResultSetAsync","label","icon","skip","top","nlq","sortOrder","slice","equals","other","_execute","_doExecuteSuggestionQuery","transformedQuery","_filteredQueryTransform","provider","executeSuggestionQuery","_filteredQueryBackTransform","_genericFilteredQueryTransform","subType","Filtered","suggestion","items","SearchTermAI","searchTerm","__exports","__esModule"],"sources":["SuggestionQuery.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\nimport * as core from \"../core/core\";\nimport { Query, QueryOptions } from \"./Query\";\nimport { SuggestionType } from \"./SuggestionType\";\nimport { SuggestionCalculationMode } from \"./SuggestionCalculationMode\";\nimport { DataSourceSubType, DataSourceType } from \"./DataSourceType\";\nimport { QueryIsReadOnlyError } from \"../core/errors\";\nimport { SuggestionResultSet } from \"./SuggestionResultSet\";\nimport { SearchTermSuggestion } from \"./SearchTermSuggestion\";\n\nexport interface SuggestionQueryOptions extends QueryOptions {\n    types?: Array<SuggestionType>;\n    calculationModes?: Array<SuggestionCalculationMode>;\n}\nexport class SuggestionQuery extends Query {\n    // _meta: {\n    //     properties: {\n    //         types: {\n    //             default: function () {\n    //                 return [SuggestionType.DataSource, SuggestionType.Object, SuggestionType.SearchTerm];\n    //             },\n    //             setter: true\n    //         },\n    //         calculationModes: {\n    //             default: function () {\n    //                 return [SuggestionCalculationMode.Data, SuggestionCalculationMode.History];\n    //             },\n    //             setter: true\n    //         }\n    //     }\n    // },\n\n    calculationModes: Array<SuggestionCalculationMode> = [\n        SuggestionCalculationMode.Data,\n        SuggestionCalculationMode.History,\n    ];\n    types: Array<SuggestionType> = [\n        SuggestionType.DataSource,\n        SuggestionType.Object,\n        SuggestionType.SearchTerm,\n    ];\n\n    constructor(properties?: SuggestionQueryOptions) {\n        super(properties);\n        this.types = properties.types ?? this.types;\n        this.calculationModes = properties.calculationModes ?? this.calculationModes;\n    }\n\n    async _formatResultSetAsync(resultSet: SuggestionResultSet): Promise<void> {\n        const query = resultSet.query;\n        if (\n            query.types.indexOf(SuggestionType.Object) >= 0 &&\n            query.filter.dataSource.type === query.sina.DataSourceType.BusinessObject\n        ) {\n            return core.executeSequentialAsync(this.sina.suggestionResultSetFormatters, function (formatter) {\n                return formatter.formatAsync(resultSet);\n            });\n        }\n    }\n\n    setTypes(types: Array<SuggestionType>): void {\n        this.types = types;\n    }\n\n    setCalculationModes(calculationModes: Array<SuggestionCalculationMode>): void {\n        this.calculationModes = calculationModes;\n    }\n\n    _createReadOnlyClone(): SuggestionQuery {\n        const query = this.clone();\n        query.getResultSetAsync = function () {\n            throw new QueryIsReadOnlyError();\n        };\n        return query;\n    }\n\n    clone(): SuggestionQuery {\n        const clone = new SuggestionQuery({\n            label: this.label,\n            icon: this.icon,\n            skip: this.skip,\n            top: this.top,\n            nlq: this.nlq,\n            filter: this.filter.clone(),\n            sortOrder: this.sortOrder,\n            sina: this.sina,\n            types: this.types,\n            calculationModes: this.calculationModes,\n        });\n        clone.types = this.types.slice();\n        clone.calculationModes = this.calculationModes.slice();\n        return clone;\n    }\n\n    equals(other: SuggestionQuery): boolean {\n        if (!(other instanceof SuggestionQuery)) {\n            return false;\n        }\n\n        if (!super.equals(other)) {\n            return false;\n        }\n\n        if (!other) {\n            return false;\n        }\n        return (\n            core.equals(this.types, other.types, false) &&\n            core.equals(this.calculationModes, other.calculationModes, false)\n        );\n    }\n\n    async _execute(query: SuggestionQuery): Promise<SuggestionResultSet> {\n        return this._doExecuteSuggestionQuery(query);\n    }\n\n    async _doExecuteSuggestionQuery(query: SuggestionQuery): Promise<SuggestionResultSet> {\n        const transformedQuery = this._filteredQueryTransform(query);\n        const resultSet = await this.sina.provider.executeSuggestionQuery(transformedQuery);\n        return this._filteredQueryBackTransform(query, resultSet);\n    }\n\n    _filteredQueryTransform(query: SuggestionQuery): SuggestionQuery {\n        return this._genericFilteredQueryTransform(query) as SuggestionQuery;\n    }\n\n    _filteredQueryBackTransform(query: SuggestionQuery, resultSet: SuggestionResultSet): SuggestionResultSet {\n        if (\n            query.filter.dataSource.type !== DataSourceType.BusinessObject ||\n            query.filter.dataSource.subType !== DataSourceSubType.Filtered\n        ) {\n            return resultSet;\n        }\n        resultSet.query = query;\n        let filter;\n        for (const suggestion of resultSet.items) {\n            switch (suggestion.type) {\n                case SuggestionType.SearchTerm:\n                case SuggestionType.SearchTermAI:\n                    filter = query.filter.clone();\n                    filter.searchTerm = (suggestion as SearchTermSuggestion).filter.searchTerm;\n                    (suggestion as SearchTermSuggestion).filter = filter;\n                    break;\n                case SuggestionType.Object:\n                    // do not backtransform datasource in object\n                    break;\n                default:\n                    throw \"program error, not supported suggestion type \" + suggestion.type;\n            }\n        }\n        return resultSet;\n    }\n}\n"],"mappings":"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","ignoreList":[]}