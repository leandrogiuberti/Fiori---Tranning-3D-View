/*!
 * SAPUI5
 * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.
 * 
 */
sap.ui.define(["./Condition","./ConditionType","./LogicalOperator","./SimpleCondition"],function(t,i,n,o){"use strict";const e=t["Condition"];const s=i["ConditionType"];const r=n["LogicalOperator"];const c=o["isSimpleCondition"];const l=o["SimpleCondition"];function a(t){return t instanceof d}class d extends e{type=s.Complex;operator=r.And;conditions=[];constructor(t){super(t);this.operator=t.operator??this.operator;this.conditions=t.conditions??this.conditions}setSina(t){this.sina=t;for(const i of this.conditions){i.setSina(t)}}clone(){const t=[];for(let i=0;i<this.conditions.length;++i){t.push(this.conditions[i].clone())}return new d({sina:this.sina,operator:this.operator,conditions:t,valueLabel:this.valueLabel,attributeLabel:this.attributeLabel})}equals(t){if(!(t instanceof d)){return false}if(this.operator!==t.operator){return false}if(this.conditions.length!==t.conditions.length){return false}const i={};for(let n=0;n<this.conditions.length;++n){const o=this.conditions[n];let e=false;for(let n=0;n<t.conditions.length;++n){if(i[n]){continue}const s=t.conditions[n];if(a(o)&&a(s)){if(o.equals(s)){e=true;i[n]=true;break}}else if(c(o)&&c(s)){if(o.equals(s)){e=true;i[n]=true;break}}}if(!e){return false}}return true}containsAttribute(t){for(const i of this.conditions){if(i.containsAttribute(t)){return true}}return false}_collectAttributes(t){for(const i of this.conditions){i._collectAttributes(t)}}addCondition(t){if(!(t instanceof e)){t=this.sina.createSimpleCondition(t)}this.conditions.push(t)}removeConditionAt(t){this.conditions.splice(t,1)}hasFilters(){return this.conditions.length>=1}removeAttributeConditions(t){let i={deleted:false,attribute:"",value:""};for(let n=0;n<this.conditions.length;++n){const o=this.conditions[n];switch(o.type){case s.Complex:i=o.removeAttributeConditions(t);break;case s.Simple:if(o.attribute===t){i={deleted:true,attribute:o.attribute,value:o.value};this.removeConditionAt(n);n--}break}}this.cleanup();return i}getAttributeConditions(t){const i=[];const n=function(t,o){switch(t.type){case s.Complex:for(let i=0;i<t.conditions.length;i++){n(t.conditions[i],o)}break;case s.Simple:if(t.attribute===o){i.push(t)}break}};n(this,t);return i}cleanup(){let t=false;const i=function(n){for(let o=0;o<n.conditions.length;++o){const e=n.conditions[o];switch(e.type){case s.Complex:i(e);if(e.conditions.length===0){t=true;n.removeConditionAt(o);o--}break;case s.Simple:break}}};do{t=false;i(this)}while(t)}resetConditions(){this.conditions.splice(0,this.conditions.length)}getFirstAttribute(){if(this.conditions.length===0){return null}if(this.conditions[0]instanceof d){return this.conditions[0].getFirstAttribute()}if(this.conditions[0]instanceof l){return this.conditions[0].getFirstAttribute()}throw new Error("Condition is neither simple nor complex")}_collectFilterConditions(t,i){for(const n of this.conditions){n._collectFilterConditions(t,i)}}getAttribute(t){if(t instanceof l){return t.attribute}for(let i=0;i<t.conditions.length;++i){const n=this.getAttribute(t.conditions[i]);if(n){return n}}}autoInsertCondition(t){const i=this.getAttribute(t);let n,o;for(let t=0;t<this.conditions.length;++t){o=this.conditions[t];const e=this.getAttribute(o);if(e===i){n=o;break}}if(!n){if(this.sina){n=this.sina.createComplexCondition({operator:r.Or})}else{n=new d({operator:r.Or})}this.addCondition(n)}for(let i=0;i<n.conditions.length;++i){o=n.conditions[i];if(o.equals(t)){return}}n.addCondition(t)}autoRemoveCondition(t){const i=function(t,n){for(let o=0;o<t.conditions.length;++o){const e=t.conditions[o];if(e.equals(n)){t.removeConditionAt(o);o--;continue}if(e instanceof d){i(e,n);if(e.conditions.length===0){t.removeConditionAt(o);o--;continue}}}};i(this,t)}toJson(){const t={type:s.Complex,operator:this.operator,conditions:[],valueLabel:this.valueLabel,attributeLabel:this.attributeLabel};for(let i=0;i<this.conditions.length;++i){const n=this.conditions[i];if(n instanceof d){t.conditions.push(n.toJson())}if(n instanceof l){t.conditions.push(n.toJson())}}if(this.userDefined){t.userDefined=true}return t}toString(){let t=this.operator+" (";for(let i=0;i<this.conditions.length;++i){const n=this.conditions[i];if(n instanceof d){t+=n.toString()}if(n instanceof l){t+=n.toString()}if(i<this.conditions.length-1){t+=", "}}return t+")"}static fromString(t){const i=t.match(/^(\w+) \(/);if(!i){throw new Error("Invalid input string format")}const n=i[1];const o=t.slice(i[0].length,-1);const e=o.split(/,\s*(?=(?:[^()]*\([^()]*\))*[^()]*$)/);const s=[];for(const t of e){const i=t.trim();if(i){s.push(d.parseCondition(i))}}return new d({operator:n,conditions:s})}static parseCondition(t){const i=t.match(/^(\w+) \(/);if(i){return d.fromString(t)}else{return l.fromString(t)}}}var u={__esModule:true};u.isComplexCondition=a;u.ComplexCondition=d;return u});
//# sourceMappingURL=ComplexCondition.js.map