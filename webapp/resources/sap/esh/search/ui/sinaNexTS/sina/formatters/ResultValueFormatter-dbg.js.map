{"version":3,"file":"ResultValueFormatter-dbg.js","names":["sap","ui","define","___Formatter","___AttributeType","____sina_util","____core_Log","Formatter","AttributeType","stringifyValue","Log","ResultValueFormatter","sina","ui5NumberFormat","ui5DateFormat","log","constructor","properties","undefined","initAsync","Promise","resolve","format","resultSet","_formatItemsInUI5Form","formatAsync","that","items","forEach","item","_formatItemInUI5Form","getDataSource","dataSource","id","attributeMetadataMap","Object","keys","length","titleAttributes","attribute","formatAttribute","titleDescriptionAttributes","detailAttributes","attributes","metadata","type","Group","i","formatSingleAttribute","valueFormatted","formatValue","valueHighlighted","isHighlighted","formatValueByUI5","formattedValue","date","Integer","getIntegerInstance","value","Double","getFloatInstance","Timestamp","Date","isNaN","getTime","getDateTimeInstance","replace","getDateInstance","UTC","Time","getTimeInstance","error","warn","formatValueByPlainJS","__exports","__esModule"],"sources":["ResultValueFormatter.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\n/* eslint-disable @typescript-eslint/no-this-alias */\n\nimport { Formatter } from \"./Formatter\";\nimport { AttributeType } from \"../AttributeType\";\nimport { Sina } from \"../Sina\";\nimport { stringifyValue } from \"../../sina/util\";\nimport { ResultSet } from \"../ResultSet\";\nimport { SearchResultSet } from \"../SearchResultSet\";\nimport { SearchResultSetItemAttributeGroup } from \"../SearchResultSetItemAttributeGroup\";\nimport { SearchResultSetItemAttributeBase } from \"../SearchResultSetItemAttributeBase\";\nimport { SearchResultSetItemAttribute } from \"../SearchResultSetItemAttribute\";\nimport { SearchResultSetItem } from \"../SearchResultSetItem\";\nimport { Log } from \"../../core/Log\";\n\nexport interface NumberFormat {\n    getIntegerInstance(): IntergerInstance;\n    getFloatInstance(): FloatInstance;\n}\n\ninterface IntergerInstance {\n    format(number): string;\n}\n\ninterface FloatInstance {\n    format(number): string;\n}\n\nexport interface DateFormat {\n    getDateTimeInstance(): DateTimeInstance;\n    getDateInstance(object): DateInstance;\n    getTimeInstance(object): TimeInstance;\n}\n\ninterface DateTimeInstance {\n    format(Date): string;\n}\n\ninterface DateInstance {\n    format(Date): string;\n}\n\ninterface TimeInstance {\n    format(Date): string;\n}\n\nexport class ResultValueFormatter extends Formatter {\n    sina: Sina;\n    ui5NumberFormat?: NumberFormat;\n    ui5DateFormat?: DateFormat;\n    private log = new Log(\"ResultvalueFormatter\");\n\n    constructor(properties?: { ui5NumberFormat?: NumberFormat; ui5DateFormat?: DateFormat }) {\n        super();\n        this.ui5NumberFormat = properties?.ui5NumberFormat || undefined;\n        this.ui5DateFormat = properties?.ui5DateFormat || undefined;\n    }\n\n    initAsync(): Promise<void> {\n        return Promise.resolve();\n    }\n\n    format(resultSet: SearchResultSet): SearchResultSet {\n        return this._formatItemsInUI5Form(resultSet);\n    }\n\n    formatAsync(resultSet: SearchResultSet): Promise<ResultSet> {\n        resultSet = this._formatItemsInUI5Form(resultSet);\n        return Promise.resolve(resultSet);\n    }\n\n    private _formatItemsInUI5Form(resultSet: SearchResultSet): SearchResultSet {\n        const that = this;\n        that.sina = resultSet.sina;\n        resultSet.items.forEach(function (item) {\n            that._formatItemInUI5Form(item);\n        });\n        return resultSet;\n    }\n\n    public _formatItemInUI5Form(item: SearchResultSetItem) {\n        const that = this;\n        that.sina = item.sina;\n        if (\n            that.sina.getDataSource(item.dataSource.id) === undefined ||\n            that.sina.getDataSource(item.dataSource.id).attributeMetadataMap === undefined ||\n            Object.keys(that.sina.getDataSource(item.dataSource.id).attributeMetadataMap).length === 0\n        ) {\n            return;\n        }\n\n        item.titleAttributes.forEach(function (attribute) {\n            that.formatAttribute(attribute);\n        });\n\n        item.titleDescriptionAttributes.forEach(function (attribute) {\n            that.formatAttribute(attribute);\n        });\n\n        item.detailAttributes.forEach(function (attribute) {\n            that.formatAttribute(attribute);\n        });\n\n        // attributes are stored in following lists:\n        // - item.titleAttributes (sub-set)\n        // - item.titleDescriptionAttributes (sub-set)\n        // - item.detailAttributes (sub-set)\n        // - item.attributes (mother-set)\n        // - item.attributesMap (mother-set)\n        // Bug: some attributes are not pass-by-reference, format in one list, not effects others.\n        // Example: additional whyfound attributes created by whyfoundprocessor\n        // Workaround: format every list.\n\n        item.attributes.forEach(function (attribute) {\n            that.formatAttribute(attribute);\n        });\n    }\n\n    // attribute could be single attribute or group attribute\n    private formatAttribute(attribute: SearchResultSetItemAttributeBase): void {\n        const that = this;\n\n        // attribute \"HASHIERARCHYNODECHILD\" has undefined metadata\n        if (attribute?.metadata?.type === undefined) {\n            return;\n        }\n\n        if (attribute.metadata.type && attribute.metadata.type === AttributeType.Group) {\n            // group attributes\n            for (let i = 0; i < (attribute as SearchResultSetItemAttributeGroup).attributes.length; i++) {\n                that.formatAttribute(\n                    (attribute as SearchResultSetItemAttributeGroup).attributes[i].attribute\n                );\n            }\n        } else {\n            // single attribute\n            that.formatSingleAttribute(attribute as SearchResultSetItemAttribute);\n        }\n    }\n\n    private formatSingleAttribute(attribute: SearchResultSetItemAttribute): void {\n        attribute.valueFormatted = this.formatValue(attribute);\n\n        if (attribute.valueHighlighted === undefined || attribute.valueHighlighted?.length === 0) {\n            attribute.valueHighlighted = attribute.valueFormatted;\n            if (attribute.isHighlighted) {\n                // add client-side highlighted value\n                attribute.valueHighlighted = \"<b>\" + attribute.valueHighlighted + \"</b>\";\n            }\n        }\n    }\n\n    private formatValue(attribute: SearchResultSetItemAttribute): string {\n        if (typeof attribute?.valueFormatted === \"string\") {\n            return attribute.valueFormatted;\n        }\n\n        return this.formatValueByUI5(attribute);\n    }\n\n    private formatValueByUI5(attribute: SearchResultSetItemAttribute): string {\n        try {\n            let formattedValue = \"\";\n            let date = undefined;\n            switch (attribute.metadata.type) {\n                case AttributeType.Integer:\n                    formattedValue = this.ui5NumberFormat.getIntegerInstance().format(attribute.value);\n                    break;\n\n                case AttributeType.Double:\n                    formattedValue = this.ui5NumberFormat.getFloatInstance().format(attribute.value);\n                    break;\n\n                case AttributeType.Timestamp:\n                    // format: UTC date object -> time stamp string in time zone\n                    formattedValue = \"\";\n\n                    date = attribute.value;\n                    if (date instanceof Date && !isNaN(date.getTime())) {\n                        formattedValue = this.ui5DateFormat.getDateTimeInstance().format(date);\n                    }\n\n                    // attribute.value:                         formattedValue:\n                    // null                                     -> \"\"\n                    // undefined                                -> \"\"\n                    // \"\"                                       -> \"\"\n                    // new Date(\"2018-12-33T23:00:00.0000000Z\") -> \"\"\n                    // new Date(\"2018-03-22T23:00:00.0000000Z\") -> \"2018.03.23, 00:00:00\"\n                    // new Date(\"2018-03-22T23:00:00.000000Z\")) -> \"2018.03.23, 00:00:00\"\n                    // new Date(\"2018-03-22,23:00:00.000\"))     -> \"2018.03.22, 23:00:00\"\n                    // new Date(\"2018-03-2223:00:00.000000Z\"))  -> \"\"\n                    break;\n\n                case AttributeType.Date:\n                    // format: \"YYYY/MM/DD\" -> \"DD.MM.YYYY\" in UTC\n                    formattedValue = \"\";\n\n                    if (typeof attribute.value === \"string\") {\n                        date = new Date(attribute.value.replace(/\\//g, \"-\")); // \"YYYY-MM-DD\" is ISO 8601 format standard, \"YYYY/MM/DD\" NOT\n                        // new Date(\"2018-12-31\") = new Date(\"2018-12-31T00:00:00.0000000Z\")\n                        if (date instanceof Date && !isNaN(date.getTime())) {\n                            formattedValue = this.ui5DateFormat.getDateInstance({ UTC: true }).format(date);\n                        }\n                    }\n\n                    // attribute.value:                         formattedValue:\n                    // null                                     -> \"\"\n                    // undefined                                -> \"\"\n                    // \"\"                                       -> \"\"\n                    // \"2018-02-22\"                             -> \"2018.02.22\"\n                    // \"2018-02-2\"                              -> \"2018.02.01\"\n                    // \"2018-02-42\"                             -> \"\"\n                    // \"18-02-42\"                               -> \"\"\n                    break;\n\n                case AttributeType.Time:\n                    // format: \"hh:mm:ss\" -> \"hh.mm.ss AM\" in UTC\n                    formattedValue = \"\";\n\n                    if (typeof attribute.value === \"string\") {\n                        date = new Date(\"1970-01-01T\" + attribute.value + \".0000000Z\");\n                        if (date instanceof Date && !isNaN(date.getTime())) {\n                            formattedValue = this.ui5DateFormat.getTimeInstance({ UTC: true }).format(date);\n                        }\n                    }\n\n                    // attribute.value:                         formattedValue:\n                    // null                                     -> \"\"\n                    // undefined                                -> \"\"\n                    // \"\"                                       -> \"\"\n                    // \"13:42:59\"                               -> \"13:42:59\"\n                    // \"33:42:59\"                               -> \"\"\n                    break;\n\n                default:\n                    formattedValue = stringifyValue(attribute?.value);\n            }\n            return formattedValue;\n        } catch (error) {\n            this.log.warn(\"Error in formatting value: \" + error);\n            return stringifyValue(attribute?.value);\n        }\n    }\n\n    private formatValueByPlainJS(attribute: SearchResultSetItemAttribute): string {\n        return stringifyValue(attribute.value);\n        // stringifyValue convert value to string by checking typeof, NOT metadata type\n        // value could have different type from metadata type due to server mistake\n    }\n}\n"],"mappings":"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","ignoreList":[]}