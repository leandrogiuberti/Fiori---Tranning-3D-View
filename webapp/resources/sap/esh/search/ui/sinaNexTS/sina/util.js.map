{"version":3,"file":"util.js","names":["sap","ui","define","___ComparisonOperator","___ComplexCondition","___Filter","___LogicalOperator","___SearchResultSetItemAttribute","___SearchResultSetItemAttributeGroup","___SimpleCondition","___HierarchyDisplayType","ComparisonOperator","ComplexCondition","Filter","LogicalOperator","SearchResultSetItemAttribute","SearchResultSetItemAttributeGroup","SimpleCondition","HierarchyDisplayType","convertOperator2Wildcards","value","operator","Eq","result","values","split","i","length","trimedValue","trim","Co","Bw","Ew","push","join","getNavigationHierarchyDataSources","sina","hierarchyAttrId","hierarchyName","dataSource","navigationDataSources","boDataSources","getBusinessObjectDataSources","forEach","boDataSource","getHierarchyDataSource","attributesMetadata","attribute","id","hierarchyDisplayType","HierarchyResultView","StaticHierarchyFacet","assembleTitle","titleValueArray","titleAttributes","titleAttr","Array","isArray","attributes","subAttributeGroup","startsWith","valueFormatted","filter","item","assembleHierarchyDecendantsNavigations","attrName","attrValue","attrValueLabel","datasetCondition","DescendantOf","valueLabel","wrapComplexConditionDS","And","conditions","rootConditionDS","navigationDataSource","filterDS","searchTerm","rootCondition","navigationTargets","createSearchNavigationTarget","labelPlural","stringifyValue","String","undefined","toString","JSON","stringify","__exports","__esModule"],"sources":["util.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\nimport { ComparisonOperator } from \"./ComparisonOperator\";\nimport { ComplexCondition } from \"./ComplexCondition\";\nimport { DataSource } from \"./DataSource\";\nimport { Filter } from \"./Filter\";\nimport { LogicalOperator } from \"./LogicalOperator\";\nimport { SearchResultSetItem } from \"./SearchResultSetItem\";\nimport { SearchResultSetItemAttribute } from \"./SearchResultSetItemAttribute\";\nimport { SearchResultSetItemAttributeBase } from \"./SearchResultSetItemAttributeBase\";\nimport { SearchResultSetItemAttributeGroup } from \"./SearchResultSetItemAttributeGroup\";\nimport { SearchResultSetItemAttributeGroupMembership } from \"./SearchResultSetItemAttributeGroupMembership\";\nimport { SimpleCondition } from \"./SimpleCondition\";\nimport { Sina } from \"./Sina\";\nimport { Value } from \"./types\";\nimport { HierarchyDisplayType } from \"./HierarchyDisplayType\";\nimport { AttributeMetadata } from \"./AttributeMetadata\";\n\nexport function convertOperator2Wildcards(value: string, operator: ComparisonOperator): string {\n    if (operator === ComparisonOperator.Eq) {\n        return value;\n    }\n\n    const result = [];\n    const values = value.split(\" \");\n    for (let i = 0; i < values.length; i++) {\n        let trimedValue = values[i].trim();\n        if (trimedValue.length === 0) {\n            continue;\n        }\n\n        switch (operator) {\n            case ComparisonOperator.Co:\n                trimedValue = \"*\" + trimedValue + \"*\";\n                break;\n            case ComparisonOperator.Bw:\n                trimedValue = trimedValue + \"*\";\n                break;\n            case ComparisonOperator.Ew:\n                trimedValue = \"*\" + trimedValue;\n                break;\n            default:\n                break;\n        }\n\n        result.push(trimedValue);\n    }\n\n    return result.join(\" \");\n}\n\nexport function getNavigationHierarchyDataSources(\n    sina: Sina,\n    hierarchyAttrId: string,\n    hierarchyName: string,\n    dataSource: DataSource\n): Array<DataSource> {\n    const navigationDataSources = [];\n    if (hierarchyAttrId?.length && sina) {\n        const boDataSources: Array<DataSource> = sina.getBusinessObjectDataSources();\n        boDataSources.forEach((boDataSource) => {\n            if (boDataSource.getHierarchyDataSource() === dataSource) {\n                navigationDataSources.push(boDataSource);\n            } else if (boDataSource.hierarchyName === hierarchyAttrId) {\n                // avoid self reference\n                return;\n            } else {\n                boDataSource.attributesMetadata.forEach((attribute) => {\n                    if (\n                        ((attribute as AttributeMetadata).hierarchyName === hierarchyName &&\n                            attribute.id === hierarchyAttrId &&\n                            (attribute as AttributeMetadata).hierarchyDisplayType ===\n                                HierarchyDisplayType.HierarchyResultView) ||\n                        (attribute as AttributeMetadata).hierarchyDisplayType ===\n                            HierarchyDisplayType.StaticHierarchyFacet\n                    ) {\n                        navigationDataSources.push(boDataSource);\n                    }\n                });\n            }\n        });\n    }\n    return navigationDataSources;\n}\n\n// Prepare title as value label in filter condition\nexport function assembleTitle(result: SearchResultSetItem): string {\n    const titleValueArray = [];\n    result.titleAttributes.forEach((titleAttr: SearchResultSetItemAttributeBase) => {\n        if (titleAttr instanceof SearchResultSetItemAttributeGroup && Array.isArray(titleAttr.attributes)) {\n            titleAttr.attributes.forEach((subAttributeGroup: SearchResultSetItemAttributeGroupMembership) => {\n                if (\n                    subAttributeGroup.attribute &&\n                    subAttributeGroup.attribute instanceof SearchResultSetItemAttribute &&\n                    subAttributeGroup.attribute.value?.startsWith(\"sap-icon://\") !== true\n                ) {\n                    titleValueArray.push(subAttributeGroup.attribute.valueFormatted);\n                }\n            });\n        } else if (titleAttr instanceof SearchResultSetItemAttribute) {\n            if (titleAttr.value.startsWith(\"sap-icon://\") !== true) {\n                titleValueArray.push(titleAttr.valueFormatted);\n            }\n        }\n    });\n    return titleValueArray.filter((item) => typeof item === \"string\" && item.trim() !== \"\").join(\" \");\n}\n\n// Assemble down navigation to related descendants as bottom navigation toolbar link\nexport function assembleHierarchyDecendantsNavigations(\n    result: SearchResultSetItem,\n    attrName: string,\n    attrValue: Value,\n    attrValueLabel: string,\n    navigationDataSources: Array<DataSource>\n): void {\n    const datasetCondition = new SimpleCondition({\n        attribute: attrName,\n        operator: ComparisonOperator.DescendantOf,\n        value: attrValue,\n        valueLabel: attrValueLabel,\n    });\n    const wrapComplexConditionDS = new ComplexCondition({\n        operator: LogicalOperator.And,\n        conditions: [datasetCondition],\n    });\n    const rootConditionDS = new ComplexCondition({\n        operator: LogicalOperator.And,\n        conditions: [wrapComplexConditionDS],\n    });\n    navigationDataSources.forEach((navigationDataSource) => {\n        const filterDS = new Filter({\n            dataSource: navigationDataSource,\n            searchTerm: \"\", //navigation mode, ignore content in search input box\n            rootCondition: rootConditionDS,\n            sina: result.sina,\n        });\n        result.navigationTargets.push(\n            result.sina.createSearchNavigationTarget(filterDS, navigationDataSource.labelPlural)\n        );\n    });\n}\n\nexport function stringifyValue(value: unknown): string {\n    if (typeof value === \"string\") {\n        return value;\n    }\n    if (typeof value === \"number\" || typeof value === \"boolean\") {\n        return String(value);\n    }\n    if (value === null || value === undefined) {\n        return \"\";\n    }\n    if (typeof value === \"object\") {\n        if (typeof value.toString === \"function\") {\n            return value.toString();\n        } else {\n            return JSON.stringify(value);\n        }\n    }\n    return \"\" + value;\n}\n"],"mappings":"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","ignoreList":[]}