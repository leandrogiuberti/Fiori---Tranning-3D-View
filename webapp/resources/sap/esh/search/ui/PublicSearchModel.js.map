{"version":3,"file":"PublicSearchModel.js","names":["sap","ui","define","JSONModel","___sinaNexTS_sina_cloneUtil","clonePublic","PublicSearchModel","extend","constructor","_constructor","settings","JSONModel.prototype.constructor.call","this","modelName","internalSearchModel","setPropertyFromInternalModel","_setPropertyFromInternalModel","internalModel","sPath","oValue","oContext","bAsyncUpdate","propertyValue","absolutePath","getPath","fnDataToBeCloned","item","tiles","sinaItem","searchResults","items","map","searchResultItem","index","clonedData","resultSetItem","key","data","title","selected","setSelected","select","setProperty","selectionEnabled","setSelectionEnabled","enable","customItemStyleClass","setCustomItemStyleClass","error","Error","setPropertyInternal","undefined","_setPropertyInternal","success","publicProperty","isPublicProperty","length","targetPath","JSONModel.prototype.setProperty.call","startsWith","endsWith","updateMultiSelectionSelected","_setProperty","successPublicModel","propertyPathSearchModel","replace","successInternalModel","console","log","_isPublicProperty","publicSearchModelPropertyPath","filter","prop","sourcePath","RegExp","match","defaultModelName"],"sources":["PublicSearchModel.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\nimport Context from \"sap/ui/model/Context\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\nimport SearchModel from \"./SearchModel\";\nimport { ResultSet, ResultSetItem, ResultSetItemData } from \"./ResultSetApi\";\nimport { clonePublic } from \"./sinaNexTS/sina/cloneUtil\";\nimport { FormattedResultItem } from \"./SearchResultFormatter\";\n\nexport interface $PublicSearchModelSettings {\n    modelName: string;\n    internalSearchModel: SearchModel;\n}\n\n/**\n * @namespace sap.esh.search.ui\n */\n\nexport default class PublicSearchModel extends JSONModel {\n    private internalSearchModel: SearchModel;\n\n    public static defaultModelName = \"publicSearchModel\";\n    public static publicSearchModelPropertyPath: Array<{\n        sourcePath: string | RegExp;\n        targetPath?: string | ((sPath: string) => string);\n    }> = [\n        // when changing this list, make sure to keep QUnit test in sync: PublicSearchModel.spec.js\n        { sourcePath: \"/results\" },\n        {\n            sourcePath: /^\\/results\\/.*\\/selected$/, // RegExp: Starts with '/results' and ends with '/selected'\n            targetPath: (sPath) => sPath.replace(\"/results/\", \"/results/items/\"),\n        },\n        {\n            sourcePath: /^\\/tableRows\\/.*\\/selected$/, // RegExp: Starts with '/tableRows' and ends with '/selected'\n            targetPath: (sPath) => sPath.replace(\"/tableRows/\", \"/results/items/\"),\n        },\n        {\n            sourcePath: /^\\/results\\/.*\\/selectionEnabled$/, // RegExp: Starts with '/results' and ends with '/selectionEnabled'\n            targetPath: (sPath) => sPath.replace(\"/results/\", \"/results/items/\"),\n        },\n        {\n            sourcePath: /^\\/tableRows\\/.*\\/selectionEnabled$/, // RegExp: Starts with '/tableRows' and ends with '/selectionEnabled'\n            targetPath: (sPath) => sPath.replace(\"/tableRows/\", \"/results/items/\"),\n        },\n        {\n            sourcePath: /^\\/results\\/.*\\/customItemStyleClass$/, // RegExp: Starts with '/results' and ends with '/customItemStyleClass'\n            targetPath: (sPath) => sPath.replace(\"/results/\", \"/results/items/\"),\n        },\n        {\n            sourcePath: /^\\/tableRows\\/.*\\/customItemStyleClass$/, // RegExp: Starts with '/tableRows' and ends with '/customItemStyleClass'\n            targetPath: (sPath) => sPath.replace(\"/tableRows/\", \"/results/items/\"),\n        },\n        { sourcePath: \"/count\" },\n        { sourcePath: \"/config\" },\n        { sourcePath: \"/singleSelectionSelected\" },\n        { sourcePath: \"/multiSelectionSelected\" },\n        { sourcePath: \"/multiSelectionObjects\" },\n        { sourcePath: \"/resultviewSelectionVisibility\" },\n        { sourcePath: \"/hierarchyNodePaths\" },\n    ];\n    public modelName: string; // name used to bind to controls (see SearchCompositeControl)\n\n    constructor(settings: Partial<$PublicSearchModelSettings>) {\n        super();\n        this.modelName = settings.modelName;\n        this.internalSearchModel = settings.internalSearchModel;\n    }\n\n    public setPropertyFromInternalModel(\n        internalModel: SearchModel,\n        sPath: string,\n        oValue: unknown,\n        oContext?: Context,\n        bAsyncUpdate?: boolean\n    ) {\n        let propertyValue;\n        let absolutePath = sPath;\n        if (oContext) {\n            absolutePath = `${oContext.getPath()}/${sPath}`;\n        }\n        if (absolutePath === \"/results\") {\n            const fnDataToBeCloned = (item) => {\n                if (item[\"type\"] === \"appcontainer\") {\n                    return item.tiles;\n                } else {\n                    return item.sinaItem;\n                }\n            };\n            // search results\n            let searchResults: ResultSet;\n            try {\n                searchResults = {\n                    items: (oValue as FormattedResultItem[]).map((searchResultItem, index) => {\n                        // clone the attributes of 'sinaItem' (unformatted result item)\n                        const clonedData = clonePublic(\n                            fnDataToBeCloned(searchResultItem)\n                        ) as ResultSetItemData;\n                        const resultSetItem: ResultSetItem = {\n                            key: searchResultItem.key,\n                            data: clonedData,\n                            title: searchResultItem.title,\n                            selected: searchResultItem.selected,\n                            setSelected: (select: boolean): void => {\n                                internalModel.setProperty(`/results/${index}/selected`, select);\n                            },\n                            selectionEnabled: searchResultItem.selectionEnabled,\n                            setSelectionEnabled: (enable: boolean): void => {\n                                internalModel.setProperty(`/results/${index}/selectionEnabled`, enable);\n                            },\n                            customItemStyleClass: searchResultItem.customItemStyleClass, // css class to be added to result item (table, grid, list)\n                            setCustomItemStyleClass: (customItemStyleClass: string): void => {\n                                internalModel.setProperty(\n                                    `/results/${index}/customItemStyleClass`,\n                                    customItemStyleClass\n                                );\n                            },\n                        };\n                        return resultSetItem;\n                    }),\n                };\n            } catch (error) {\n                throw new Error(\"Public Model could not be updated. Error: \" + error + \")\");\n            }\n\n            propertyValue = searchResults;\n        }\n        if (!propertyValue) {\n            propertyValue = oValue;\n        }\n        this.setPropertyInternal(absolutePath, propertyValue, undefined, bAsyncUpdate);\n    }\n\n    setPropertyInternal(sPath: string, oValue: unknown, oContext?: Context, bAsyncUpdate?: boolean): boolean {\n        let absolutePath = sPath;\n        let success;\n        if (oContext) {\n            absolutePath = `${oContext.getPath()}/${sPath}`;\n        }\n        const publicProperty = this.isPublicProperty(absolutePath);\n        if (publicProperty.length > 0) {\n            if (typeof publicProperty[0]?.targetPath !== \"undefined\") {\n                // property shall be renamed for public model\n                if (typeof publicProperty[0]?.targetPath === \"function\") {\n                    success = super.setProperty(\n                        publicProperty[0]?.targetPath(absolutePath),\n                        oValue,\n                        undefined,\n                        bAsyncUpdate\n                    );\n                } else {\n                    success = super.setProperty(\n                        publicProperty[0]?.targetPath,\n                        oValue,\n                        oContext,\n                        bAsyncUpdate\n                    );\n                }\n            } else {\n                // default\n                success = super.setProperty(sPath, oValue, oContext, bAsyncUpdate);\n            }\n            // update 'multiSelectionObjects', ... of internal model\n            if (absolutePath.startsWith(\"/results/\") && absolutePath.endsWith(\"/selected\")) {\n                // console.log(\"SELECTION: publ model, set 'selected' property (path: '/results/.../selected')\");\n                this.internalSearchModel.updateMultiSelectionSelected();\n            }\n        } else {\n            // this property is private and shall not be added to public search model\n        }\n        return success;\n    }\n\n    setProperty(sPath: string, oValue: unknown, oContext?: Context, bAsyncUpdate?: boolean): boolean {\n        // in general we need to make sure this model is only updated by ELISA SearchModel !!!\n        // Changeable properties:\n        // - /results/items[...]/selected\n        // - /results/items[...]/selectionEnabled\n        // - /results/items[...]/customItemStyleClass\n        let absolutePath = sPath;\n        if (oContext) {\n            absolutePath = `${oContext.getPath()}/${sPath}`;\n        }\n\n        if (absolutePath.startsWith(\"/results/items/\") && absolutePath.endsWith(\"/selected\")) {\n            const successPublicModel = super.setProperty(sPath, oValue, oContext, bAsyncUpdate);\n            // selected: Checkbox (item) is set (if visible -> see selection modes)\n            const propertyPathSearchModel = `/results/${absolutePath\n                .replace(\"/results/items/\", \"\")\n                .replace(\"/selected\", \"\")}/selected`;\n            const successInternalModel = this.internalSearchModel.setPropertyInternal(\n                propertyPathSearchModel,\n                oValue,\n                undefined,\n                bAsyncUpdate,\n                false\n            );\n            console.log(\n                \"SELECTION: publ model, set 'selected' property (path: '/results/items/.../selected')\"\n            );\n            this.internalSearchModel.updateMultiSelectionSelected();\n            return successPublicModel && successInternalModel;\n        } else if (absolutePath.startsWith(\"/results/items/\") && absolutePath.endsWith(\"/selectionEnabled\")) {\n            const successPublicModel = super.setProperty(sPath, oValue, oContext, bAsyncUpdate);\n            // selectionEnabled: Checkbox (item) is enabled (if visible -> see selection modes)\n            const propertyPathSearchModel = `/results/${absolutePath\n                .replace(\"/results/items/\", \"\")\n                .replace(\"/selectionEnabled\", \"\")}/selectionEnabled`;\n            const successInternalModel = this.internalSearchModel.setPropertyInternal(\n                propertyPathSearchModel,\n                oValue,\n                undefined,\n                bAsyncUpdate,\n                false\n            );\n            return successPublicModel && successInternalModel;\n        } else if (\n            absolutePath.startsWith(\"/results/items/\") &&\n            absolutePath.endsWith(\"/customItemStyleClass\")\n        ) {\n            const successPublicModel = super.setProperty(sPath, oValue, oContext, bAsyncUpdate);\n            const propertyPathSearchModel = `/results/${absolutePath\n                .replace(\"/results/items/\", \"\")\n                .replace(\"/customItemStyleClass\", \"\")}/customItemStyleClass`;\n            const successInternalModel = this.internalSearchModel.setPropertyInternal(\n                propertyPathSearchModel,\n                oValue,\n                undefined,\n                bAsyncUpdate,\n                false\n            );\n            return successPublicModel && successInternalModel;\n        } else {\n            throw new Error(\n                `The public search model '${this.modelName}' is read-only but for properties \"/results/items/<idx>/selected\", \"/results/items/<idx>/selectionEnabled\" and \"/results/items/<idx>/customItemStyleClass\". You are changing property '${absolutePath}'.`\n            );\n        }\n    }\n\n    isPublicProperty(sPath): Array<{\n        sourcePath: string | RegExp;\n        targetPath?: string | ((sPath: string) => string);\n    }> {\n        const publicProperty = PublicSearchModel.publicSearchModelPropertyPath.filter((prop) => {\n            if (prop.sourcePath instanceof RegExp) {\n                return sPath.match(prop.sourcePath);\n            } else {\n                return prop.sourcePath === sPath;\n            }\n        });\n        return publicProperty;\n    }\n}\n"],"mappings":"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","ignoreList":[]}