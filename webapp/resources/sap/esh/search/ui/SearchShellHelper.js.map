{"version":3,"file":"SearchShellHelper.js","names":["sap","ui","define","__i18n","__SearchFieldGroup","SearchHelper","SearchModel","__SearchFieldStateManager","__SearchShellHelperHorizonTheme","__UIEvents","Element","EventBus","ResourceModel","___controls_webcompsearchfieldgroup_WebCompSearchFieldGroupBindings","___controls_webcompsearchfieldgroup_UShellWebCompLoader","_interopRequireDefault","obj","__esModule","default","i18n","SearchFieldGroup","SearchFieldStateManager","SearchShellHelperHorizonTheme","UIEvents","createWebCompSearchFieldGroupBindings","loadUShellWebComps","SearchShellHelper","static","constructor","Error","init","searchField","this","oModel","getModelSingleton","oShellHeader","getElementById","config","isWebCompSearchFieldGroupEnabled","isInitialized","window","ushell","Container","getServiceAsync","then","service","prefetch","oSearchFieldGroup","createWebCompSearchFieldGroup","setSearch","createSearchFieldGroup","searchFieldStateManager","shellHeader","model","searchFieldGroup","getInstance","subscribe","onSearchComponentLoaded","bind","attachAfterNavigate","onAfterNavigate","focusHandler","isSearchAppActive","setFocus","expandSearch","resetModel","resetQuery","oEvent","getParameter","notifySubscribers","ESHSearchLayoutChanged","focusSearchField","collapseSearch","setModel","bundle","oSearchInput","input","setMaxSuggestionWidth","oSearchSelect","select","setTooltip","getText","addEventDelegate","onAfterRendering","jQuery","attr","attachChange","focusSearchInput","selectContent","oSearchButton","button","attachPress","handleClickSearchButton","oSearchCancelButton","cancelButton","setCancelButtonActive","document","on","fnEscCallBack","attachSearchSizeChanged","sizeSearchFieldChanged","keyCode","isSearchInputFocused","preventDefault","getValue","setValue","event","size","getParameters","limit","setDisplayMode","setVisible","addStyleClass","removeStyleClass","onShellSearchButtonPressed","getSearchBoxValue","getDataSource","getDefaultDataSource","isSearchFieldExpandedByDefault"],"sources":["SearchShellHelper.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\nimport i18n from \"./i18n\";\nimport SearchFieldGroup from \"./controls/searchfieldgroup/SearchFieldGroup\";\nimport * as SearchHelper from \"sap/esh/search/ui/SearchHelper\";\nimport Event from \"sap/ui/base/Event\";\nimport SearchModel from \"sap/esh/search/ui/SearchModel\";\nimport SearchSelect from \"./controls/searchfieldgroup/SearchSelect\";\nimport SearchFieldStateManager from \"./controls/searchfieldgroup/SearchFieldStateManager\";\nimport SearchShellHelperHorizonTheme from \"./SearchShellHelperHorizonTheme\";\nimport UIEvents from \"./UIEvents\";\nimport Element from \"sap/ui/core/Element\";\nimport EventBus from \"sap/ui/core/EventBus\";\nimport ResourceModel from \"sap/ui/model/resource/ResourceModel\";\nimport { PeriodicRetry } from \"./SearchUtil\";\nimport WebCompSearchFieldStateManager from \"./controls/webcompsearchfieldgroup/WebCompSearchFieldStateManager\";\nimport Control from \"sap/ui/core/Control\";\nimport { createWebCompSearchFieldGroupBindings } from \"./controls/webcompsearchfieldgroup/WebCompSearchFieldGroupBindings\";\nimport type ShellBarSearch from \"@ui5/webcomponents-fiori/dist/ShellBarSearch\";\nimport { loadUShellWebComps } from \"./controls/webcompsearchfieldgroup/UShellWebCompLoader\";\n\nexport default abstract class SearchShellHelper {\n    static isInitialized: boolean;\n    static sSearchOverlayCSS: \"sapUshellShellShowSearchOverlay\";\n    static oModel: SearchModel;\n    static oShellHeader: any;\n    static oSearchFieldGroup: SearchFieldGroup;\n    static focusInputFieldTimeout: number | undefined;\n    static isFocusHandlerActive: boolean;\n    static searchFieldStateManager: SearchFieldStateManager | WebCompSearchFieldStateManager;\n    static periodicRetryFocus: PeriodicRetry;\n\n    // =======================================================================\n    // generic methods: used for webcomponents and not webcomponents use case\n    // =======================================================================\n\n    constructor() {\n        throw new Error(\"Cannot instantiate static class 'SearchShellHelper'\");\n    }\n\n    public static async init(searchField?: ShellBarSearch): Promise<void> {\n        // get search model and shell header\n        this.oModel = SearchModel.getModelSingleton({}, \"flp\") as SearchModel;\n        this.oShellHeader = Element.getElementById(\"shell-header\") as any;\n\n        if (this.oModel.config.isWebCompSearchFieldGroupEnabled() && !searchField) {\n            // ignore legacy initialization calls without a searchField\n            return;\n        }\n\n        if (this.isInitialized) {\n            // check already initialized\n            return;\n        }\n        this.isInitialized = true;\n\n        // pre-fetch all app tiles\n        (window.sap.ushell as any).Container.getServiceAsync(\"Search\").then((service) => {\n            service.prefetch();\n        });\n\n        // create search field group\n        if (this.oModel.config.isWebCompSearchFieldGroupEnabled()) {\n            this.oSearchFieldGroup = await this.createWebCompSearchFieldGroup(searchField);\n            /*this.searchFieldStateManager = new WebCompSearchFieldStateManager({\n                shellHeader: this.oShellHeader,\n                model: this.oModel,\n                searchFieldGroup: this.oSearchFieldGroup,\n            });*/\n            if (!searchField) {\n                this.oShellHeader.setSearch(this.oSearchFieldGroup);\n                // search field created by elisa needs to be added to shell\n                // search field provided by ushell is already part of shell\n            }\n        } else {\n            this.oSearchFieldGroup = this.createSearchFieldGroup();\n            this.searchFieldStateManager = new SearchFieldStateManager({\n                shellHeader: this.oShellHeader,\n                model: this.oModel,\n                searchFieldGroup: this.oSearchFieldGroup,\n            });\n            this.oShellHeader.setSearch(this.oSearchFieldGroup);\n        }\n\n        // after search comp loaded -> expand search field (important for reload of search result list)\n        EventBus.getInstance().subscribe(\n            \"shell\",\n            \"searchCompLoaded\",\n            this.onSearchComponentLoaded.bind(this),\n            {}\n        );\n\n        // after navigation -> set focus to first element of results list\n        (Element.getElementById(\"viewPortContainer\") as any).attachAfterNavigate(\n            this.onAfterNavigate.bind(this),\n            {}\n        );\n\n        // event ?? -> set focus to first element of results list\n        EventBus.getInstance().subscribe(\"sap.ushell\", \"appComponentLoaded\", () => {\n            if (this?.oModel?.focusHandler && SearchHelper.isSearchAppActive()) {\n                this.oModel.focusHandler.setFocus();\n            }\n        });\n    }\n\n    public static onSearchComponentLoaded(): void {\n        // triggered by shell after search component is loaded\n        // (search field is created in search component)\n        if (!SearchHelper.isSearchAppActive()) {\n            return;\n        }\n        this.expandSearch();\n    }\n\n    public static resetModel(): void {\n        this.oModel.resetQuery();\n    }\n\n    public static onAfterNavigate(oEvent: any): void {\n        // navigation tries to restore the focus -> but application knows better how to set the focus\n        // -> after navigation call focus setter of search application\n        if (\n            oEvent.getParameter(\"toId\") !== \"shellPage-Action-search\" &&\n            oEvent.getParameter(\"toId\") !== \"applicationShellPage-Action-search\" &&\n            oEvent.getParameter(\"toId\") !== \"application-Action-search\"\n        ) {\n            return;\n        }\n        this.oModel.focusHandler.setFocus();\n        this.oModel.notifySubscribers(UIEvents.ESHSearchLayoutChanged);\n    }\n\n    public static expandSearch(focusSearchField?: boolean): void {\n        this.searchFieldStateManager?.expandSearch(focusSearchField);\n    }\n\n    public static collapseSearch(): void {\n        this.searchFieldStateManager?.collapseSearch();\n    }\n\n    // =======================================================================\n    // webcomponents methods\n    // =======================================================================\n\n    private static async createWebCompSearchFieldGroup(\n        searchFieldGroup: ShellBarSearch\n    ): Promise<SearchFieldGroup> {\n        /*if (!searchFieldGroup) {\n            searchFieldGroup = new ShellBarSearch(\"searchFieldInShell\");\n        }*/\n        createWebCompSearchFieldGroupBindings(searchFieldGroup, await loadUShellWebComps());\n        (searchFieldGroup as Control).setModel(this.oModel);\n        (searchFieldGroup as Control).setModel(new ResourceModel({ bundle: i18n }), \"i18n\");\n        return searchFieldGroup as SearchFieldGroup;\n    }\n\n    // =======================================================================\n    //  classical (not webcomponent) methods\n    // =======================================================================\n\n    private static createSearchFieldGroup(): SearchFieldGroup {\n        // create search field group control\n        const oSearchFieldGroup = new SearchFieldGroup(\"searchFieldInShell\");\n        oSearchFieldGroup.setModel(this.oModel);\n        oSearchFieldGroup.setModel(new ResourceModel({ bundle: i18n }), \"i18n\");\n\n        // initialize search input\n        const oSearchInput = oSearchFieldGroup.input;\n        oSearchInput.setMaxSuggestionWidth(\"30rem\");\n\n        // initialize search select\n        const oSearchSelect = oSearchFieldGroup.select as SearchSelect;\n\n        oSearchSelect.setTooltip(i18n.getText(\"searchInTooltip\"));\n\n        oSearchSelect.addEventDelegate(\n            {\n                onAfterRendering: () => {\n                    jQuery('[id$=\"searchFieldInShell-select-icon\"]').attr(\"title\", i18n.getText(\"searchIn\"));\n                },\n            },\n            oSearchSelect\n        );\n        oSearchSelect.setTooltip(i18n.getText(\"searchIn\"));\n        oSearchSelect.attachChange(() => {\n            (this.searchFieldStateManager as SearchFieldStateManager).focusSearchInput({\n                selectContent: true,\n            });\n        });\n\n        // initialize search button\n        const oSearchButton = oSearchFieldGroup.button;\n        oSearchButton.attachPress(() => {\n            this.handleClickSearchButton();\n        });\n\n        // initialize cancel button\n        const oSearchCancelButton = oSearchFieldGroup.cancelButton;\n        oSearchCancelButton.attachPress(() => {\n            this.collapseSearch();\n        });\n        oSearchFieldGroup.setCancelButtonActive(false);\n\n        // esc key handler\n        jQuery(document).on(\"keydown\", this.fnEscCallBack.bind(this));\n\n        // header size changed -> adapt visibility cancel button, dropdown button size, visibility search button\n        this.oShellHeader.attachSearchSizeChanged(this.sizeSearchFieldChanged.bind(this));\n\n        return oSearchFieldGroup;\n    }\n\n    public static fnEscCallBack(oEvent: any): void {\n        // check that search field group is available\n        if (!this.oSearchFieldGroup) {\n            return;\n        }\n        // check for ESC\n        if (oEvent.keyCode !== 27) {\n            return;\n        }\n        // check that search field is focused\n        if (!this.searchFieldStateManager.isSearchInputFocused()) {\n            return;\n        }\n        // check that search app is active\n        if (SearchHelper.isSearchAppActive()) {\n            return;\n        }\n        oEvent.preventDefault(); // browser would delete value\n        if ((this.oSearchFieldGroup as SearchFieldGroup).input.getValue() === \"\") {\n            this.collapseSearch();\n        } else if ((this.oSearchFieldGroup as SearchFieldGroup).input.getValue() === \" \") {\n            (this.oSearchFieldGroup as SearchFieldGroup).input.setValue(\"\"); // ??\n        }\n    }\n\n    public static sizeSearchFieldChanged(event: Event): void {\n        // check that search field group is available\n        if (!this.oSearchFieldGroup) {\n            return;\n        }\n        const size = event.getParameters()[\"remSize\"];\n        // display mode of connector dropdown\n        let limit = 24;\n        if (size <= limit) {\n            (this.oSearchFieldGroup as SearchFieldGroup).select.setDisplayMode(\"icon\");\n        } else {\n            (this.oSearchFieldGroup as SearchFieldGroup).select.setDisplayMode(\"default\");\n        }\n        // visibility of search button\n        limit = 9;\n        if (size < limit) {\n            (this.oSearchFieldGroup as SearchFieldGroup).button.setVisible(false);\n        } else {\n            (this.oSearchFieldGroup as SearchFieldGroup).button.setVisible(true);\n        }\n        // cancel button\n        if ((event as any).getParameter(\"isFullWidth\")) {\n            (this.oSearchFieldGroup as SearchFieldGroup).setCancelButtonActive(true);\n            (this.oSearchFieldGroup as SearchFieldGroup).addStyleClass(\"sapUshellSearchInputFullWidth\");\n        } else {\n            (this.oSearchFieldGroup as SearchFieldGroup).setCancelButtonActive(false);\n            (this.oSearchFieldGroup as SearchFieldGroup).removeStyleClass(\"sapUshellSearchInputFullWidth\");\n        }\n    }\n\n    public static onShellSearchButtonPressed(): void {\n        SearchShellHelper.init();\n        if (this.oModel.config.isWebCompSearchFieldGroupEnabled()) {\n            return;\n        }\n        this.expandSearch(true);\n    }\n\n    public static handleClickSearchButton(): void {\n        if (\n            (this.searchFieldStateManager as SearchFieldStateManager).getSearchBoxValue() === \"\" &&\n            this.oModel.getDataSource() === this.oModel.getDefaultDataSource()\n        ) {\n            if (SearchShellHelperHorizonTheme.isSearchFieldExpandedByDefault()) {\n                // screen size XL: focus input field\n                (this.searchFieldStateManager as SearchFieldStateManager).focusSearchInput({\n                    selectContent: false,\n                });\n            } else {\n                // small screen size: collapse input field + focus shell magnifier\n                this.collapseSearch();\n            }\n        }\n    }\n}\n"],"mappings":"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","ignoreList":[]}