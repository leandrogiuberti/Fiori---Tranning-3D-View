{"version":3,"file":"SinaConfigurator.js","names":["sap","ui","define","___SearchConfigurationSettings","Log","___sinaNexTS_core_Log","___navigationtrackers_CustomNavigationTracker","___navigationtrackers_EventLoggerNavigationTracker","ResourceBundle","UI5NumberFormat","UI5DateFormat","__i18n","Localization","_interopRequireDefault","obj","__esModule","default","sinaParameters","Severity","generateCustomNavigationTracker","generateEventLoggerNavigationTracker","i18n","SinaConfigurator","model","loadedResourceBundles","constructor","this","Map","configure","sinaConfigurations","resultSinaConfigurations","sinaConfiguration","push","configureSina","configureLogging","configureCommonParameters","configureNavigationTrackers","configureGetTextFromResourceBundle","configureFormatLibrary","configureGetText","configureLanguage","configurationOptions","normalizeConfiguration","configureNavigationTracking","subProviders","map","subProviderConfiguration","provider","url","config","isUshell","cf","getLanguage","getLanguageFunction","navigationTrackers","parameterName","NumberFormat","DateFormat","sinaUI5Log","getLogger","logTarget","debug","info","warn","warning","error","sinaLogLevel","ERROR","getLevel","Level","ALL","TRACE","DEBUG","INFO","WARNING","WARN","logLevel","getTextFromResourceBundle","async","key","resourceBundle","has","get","create","set","getText","bind","__exports"],"sources":["SinaConfigurator.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\nimport { sinaParameters } from \"./SearchConfigurationSettings\";\nimport { AvailableProviders, SinaConfiguration } from \"./sinaNexTS/sina/SinaConfiguration\";\nimport Log from \"sap/base/Log\";\nimport { Severity } from \"./sinaNexTS/core/Log\";\nimport SearchModel from \"./SearchModel\";\nimport { generateCustomNavigationTracker } from \"./navigationtrackers/CustomNavigationTracker\";\nimport { generateEventLoggerNavigationTracker } from \"./navigationtrackers/EventLoggerNavigationTracker\";\nimport ResourceBundle from \"sap/base/i18n/ResourceBundle\";\nimport UI5NumberFormat from \"sap/ui/core/format/NumberFormat\";\nimport UI5DateFormat from \"sap/ui/core/format/DateFormat\";\nimport i18n from \"./i18n\";\nimport Localization from \"sap/base/i18n/Localization\";\n\ninterface ConfigurationOptions {\n    configureGetTextFromResourceBundle?: boolean;\n    configureLogging?: boolean;\n    configureCommonParameters?: boolean;\n    configureNavigationTrackers?: boolean;\n    configureFormatLibrary?: boolean;\n    configureGetText?: boolean;\n    configureLanguage?: boolean;\n}\n\nexport class SinaConfigurator {\n    model: SearchModel;\n    loadedResourceBundles: Map<string, ResourceBundle>;\n\n    constructor(model) {\n        this.model = model;\n        this.loadedResourceBundles = new Map();\n    }\n\n    configure(sinaConfigurations: Array<SinaConfiguration | AvailableProviders>): Array<SinaConfiguration> {\n        const resultSinaConfigurations = [];\n        for (const sinaConfiguration of sinaConfigurations) {\n            resultSinaConfigurations.push(\n                this.configureSina(sinaConfiguration, {\n                    configureLogging: true,\n                    configureCommonParameters: true,\n                    configureNavigationTrackers: true,\n                    configureGetTextFromResourceBundle: true,\n                    configureFormatLibrary: true,\n                    configureGetText: true,\n                    configureLanguage: true,\n                })\n            );\n        }\n        return resultSinaConfigurations;\n    }\n\n    configureSina(\n        sinaConfiguration: SinaConfiguration | AvailableProviders,\n        configurationOptions: ConfigurationOptions\n    ) {\n        sinaConfiguration = this.normalizeConfiguration(sinaConfiguration);\n        if (configurationOptions.configureCommonParameters) {\n            this.configureCommonParameters(sinaConfiguration);\n        }\n        if (configurationOptions.configureFormatLibrary) {\n            this.configureFormatLibrary(sinaConfiguration);\n        }\n        if (configurationOptions.configureLogging) {\n            this.configureLogging(sinaConfiguration);\n        }\n        if (configurationOptions.configureNavigationTrackers) {\n            this.configureNavigationTracking(sinaConfiguration);\n        }\n        if (configurationOptions.configureGetTextFromResourceBundle) {\n            this.configureGetTextFromResourceBundle(sinaConfiguration);\n        }\n        if (configurationOptions.configureGetText) {\n            this.configureGetText(sinaConfiguration);\n        }\n        if (configurationOptions.configureLanguage) {\n            this.configureLanguage(sinaConfiguration);\n        }\n        if (sinaConfiguration.subProviders) {\n            sinaConfiguration.subProviders = sinaConfiguration.subProviders.map((subProviderConfiguration) =>\n                this.configureSina(subProviderConfiguration, {\n                    configureNavigationTrackers: true,\n                })\n            );\n        }\n        return sinaConfiguration;\n    }\n\n    normalizeConfiguration(sinaConfiguration: SinaConfiguration | AvailableProviders): SinaConfiguration {\n        if (typeof sinaConfiguration === \"string\") {\n            return { provider: sinaConfiguration, url: \"\" };\n        }\n        return sinaConfiguration;\n    }\n\n    private configureLanguage(sinaConfiguration: SinaConfiguration) {\n        if (this.model.config.isUshell && typeof (sap as any).cf === \"undefined\") {\n            // is ushell but not cFLP / workzone (which defines sap.cf global)\n            // which does not have a sap-usercontext cookie to determine the users language\n            // do nothing, language setting will be done by ushell\n            return;\n        }\n        if (!sinaConfiguration.getLanguage) {\n            const getLanguageFunction = () => Localization.getLanguage();\n            sinaConfiguration[\"getLanguage\"] = getLanguageFunction;\n        }\n    }\n\n    configureNavigationTracking(sinaConfiguration: SinaConfiguration) {\n        sinaConfiguration.navigationTrackers = sinaConfiguration.navigationTrackers || [];\n        sinaConfiguration.navigationTrackers.push(generateCustomNavigationTracker(this.model));\n        sinaConfiguration.navigationTrackers.push(generateEventLoggerNavigationTracker(this.model));\n    }\n\n    configureCommonParameters(sinaConfiguration: SinaConfiguration) {\n        for (const parameterName of sinaParameters) {\n            if (!sinaConfiguration[parameterName]) {\n                sinaConfiguration[parameterName] = this.model.config[parameterName];\n            }\n        }\n    }\n\n    configureFormatLibrary(sinaConfiguration: SinaConfiguration) {\n        sinaConfiguration.NumberFormat = UI5NumberFormat;\n        sinaConfiguration.DateFormat = UI5DateFormat;\n    }\n\n    configureLogging(sinaConfiguration: SinaConfiguration) {\n        const sinaUI5Log = Log.getLogger(\"sap.esh.search.ui.sina\");\n        // log target\n        sinaConfiguration.logTarget = {\n            debug: sinaUI5Log.debug,\n            info: sinaUI5Log.info,\n            warn: sinaUI5Log.warning,\n            error: sinaUI5Log.error,\n        };\n        // map UI5 loglevel to Sina loglevel:\n        let sinaLogLevel = Severity.ERROR;\n        switch (sinaUI5Log.getLevel()) {\n            case Log.Level.ALL:\n            case Log.Level.TRACE:\n            case Log.Level.DEBUG:\n                sinaLogLevel = Severity.DEBUG;\n                break;\n            case Log.Level.INFO:\n                sinaLogLevel = Severity.INFO;\n                break;\n            case Log.Level.WARNING:\n                sinaLogLevel = Severity.WARN;\n                break;\n        }\n        sinaConfiguration.logLevel = sinaLogLevel;\n    }\n\n    configureGetTextFromResourceBundle(sinaConfiguration: SinaConfiguration) {\n        sinaConfiguration.getTextFromResourceBundle = async (url: string, key: string): Promise<string> => {\n            let resourceBundle: ResourceBundle;\n            if (this.loadedResourceBundles.has(url)) {\n                resourceBundle = this.loadedResourceBundles.get(url);\n            } else {\n                resourceBundle = await ResourceBundle.create({ url: url });\n                this.loadedResourceBundles.set(url, resourceBundle);\n            }\n            return resourceBundle.getText(key);\n        };\n    }\n\n    configureGetText(sinaConfiguration: SinaConfiguration) {\n        sinaConfiguration.getText = i18n.getText.bind(i18n);\n    }\n}\n"],"mappings":"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","ignoreList":[]}