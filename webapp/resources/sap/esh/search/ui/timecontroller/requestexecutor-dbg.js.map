{"version":3,"file":"requestexecutor-dbg.js","names":["sap","ui","define","ResponseListener","requestExecutor","resolve","reject","promise","constructor","Promise","_resolve","_reject","notify","status","RequestExecutorStatus","COMPLETED","executionResult","hasError","response","error","RequestExecutor","request","copiedRequest","time","INITIAL","responseListeners","clone","getRequest","delete","clearResponseListeners","createResponseListener","responseListener","push","execute","Date","getTime","PENDING","then","notifyResponseListeners","__exports","__esModule"],"sources":["requestexecutor.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\nimport { Request } from \"./request\";\n\nclass ResponseListener<Response> {\n    requestExecutor: RequestExecutor<Response>;\n    resolve: (response: Response) => void;\n    reject: (error: unknown) => void;\n    promise: Promise<Response>;\n    constructor(requestExecutor: RequestExecutor<Response>) {\n        this.requestExecutor = requestExecutor;\n        this.promise = new Promise<Response>((_resolve, _reject) => {\n            this.resolve = _resolve;\n            this.reject = _reject;\n        });\n    }\n    notify() {\n        if (this.requestExecutor.status !== RequestExecutorStatus.COMPLETED) {\n            throw \"program error\";\n        }\n        if (!this.requestExecutor.executionResult.hasError) {\n            // success\n            this.resolve(this.requestExecutor.executionResult.response);\n        } else {\n            // error\n            this.reject(this.requestExecutor.executionResult.error);\n        }\n    }\n}\n\nexport enum RequestExecutorStatus {\n    INITIAL = \"INITIAL\",\n    PENDING = \"PENDING\",\n    COMPLETED = \"COMPLETED\", // may be successful or with errors\n}\n\ninterface ExecutionResult<Response> {\n    error?: unknown;\n    response?: Response;\n    hasError?: boolean;\n}\n\nexport class RequestExecutor<Response> {\n    request: Request<Response>;\n    copiedRequest: Request<Response>;\n    time: number;\n    status: RequestExecutorStatus = RequestExecutorStatus.INITIAL;\n    executionResult: ExecutionResult<Response>;\n    responseListeners: Array<ResponseListener<Response>> = [];\n    constructor(request: Request<Response>) {\n        this.request = request;\n        this.copiedRequest = request.clone();\n    }\n    public getRequest(): Request<Response> {\n        return this.copiedRequest;\n    }\n    public delete() {\n        this.clearResponseListeners();\n    }\n    public createResponseListener(): Promise<Response> {\n        const responseListener = new ResponseListener<Response>(this);\n        if (this.status === RequestExecutorStatus.COMPLETED) {\n            responseListener.notify();\n        } else {\n            this.responseListeners.push(responseListener);\n        }\n        return responseListener.promise;\n    }\n    public clearResponseListeners() {\n        this.responseListeners = [];\n    }\n    public execute() {\n        this.time = new Date().getTime();\n        this.status = RequestExecutorStatus.PENDING;\n        if (this.executionResult) {\n            throw \"program error\";\n        }\n        this.request.execute().then(\n            (response: Response) => {\n                // success\n                this.status = RequestExecutorStatus.COMPLETED;\n                this.executionResult = { hasError: false, response: response };\n                this.notifyResponseListeners();\n            },\n            (error) => {\n                // error\n                this.status = RequestExecutorStatus.COMPLETED;\n                this.executionResult = { hasError: true, error: error };\n                this.notifyResponseListeners();\n            }\n        );\n    }\n    private notifyResponseListeners() {\n        for (const responseListener of this.responseListeners) {\n            responseListener.notify();\n        }\n        this.clearResponseListeners();\n    }\n}\n"],"mappings":"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","ignoreList":[]}