{"version":3,"file":"SearchFieldStateManager.js","names":["sap","ui","define","__SearchShellHelperHorizonTheme","Element","____SearchUtil","SearchHelper","_interopRequireDefault","obj","__esModule","default","SearchShellHelperHorizonTheme","PeriodicRetry","StateWatcher","SearchFieldStateManager","stateWatcher","shellHeader","model","searchFieldGroup","periodicRetryFocus","periodicRetryFocusOptions","constructor","props","this","checkInterval","config","searchFieldCheckInterval","initPeriodicRetryFocus","getState","isNoResultsScreen","isSearchInputFocused","isSearchFieldExpandedByDefault","compareStates","s1","s2","changed","handleStateChanged","bind","interval","start","newState","oldState","calculateSearchButtonStatus","shallShowOverlay","getSearchState","getSearchBoxValue","collapseSearch","isOverlayShown","setSearchState","expandSearch","getShellSearchButton","getElementById","focusSearchField","shellSearchButton","cancelButton","setVisible","focusSearchInput","selectContent","abortSuggestions","input","getValue","getDomRef","contains","document","activeElement","querySelector","focus","domRef","jQuery","is","getEnabled","selectText","maxRetries","action","options","run","isSearchAppActive","getProperty"],"sources":["SearchFieldStateManager.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\nimport SearchModel from \"sap/esh/search/ui/SearchModel\";\nimport Button from \"sap/m/Button\";\nimport Control from \"sap/ui/core/Control\";\nimport SearchShellHelperHorizonTheme from \"../../SearchShellHelperHorizonTheme\";\nimport Element from \"sap/ui/core/Element\";\nimport { PeriodicRetry, StateWatcher } from \"../../SearchUtil\";\nimport type SearchFieldGroup from \"./SearchFieldGroup\";\nimport * as SearchHelper from \"sap/esh/search/ui/SearchHelper\";\n\ninterface State {\n    isSearchInputFocused: boolean;\n    isNoResultsScreen: boolean;\n    isSearchFieldExpandedByDefault: boolean;\n}\n\nexport default class SearchFieldStateManager {\n    stateWatcher: StateWatcher<State>;\n    shellHeader: any;\n    model: SearchModel;\n    searchFieldGroup: SearchFieldGroup;\n    periodicRetryFocus: PeriodicRetry;\n    periodicRetryFocusOptions: { selectContent?: boolean };\n    constructor(props: { shellHeader: Control; model: SearchModel; searchFieldGroup: SearchFieldGroup }) {\n        this.shellHeader = props.shellHeader;\n        this.model = props.model;\n        this.searchFieldGroup = props.searchFieldGroup;\n        const checkInterval = this?.model?.config?.searchFieldCheckInterval ?? 100;\n        this.initPeriodicRetryFocus();\n        this.stateWatcher = new StateWatcher<State>({\n            getState: () => ({\n                isNoResultsScreen: this.isNoResultsScreen(),\n                isSearchInputFocused: this.isSearchInputFocused(),\n                isSearchFieldExpandedByDefault:\n                    SearchShellHelperHorizonTheme.isSearchFieldExpandedByDefault(),\n            }),\n            compareStates: (s1: State, s2: State) =>\n                s1.isNoResultsScreen === s2.isNoResultsScreen &&\n                s1.isSearchFieldExpandedByDefault === s2.isSearchFieldExpandedByDefault &&\n                s1.isSearchInputFocused === s2.isSearchInputFocused,\n            changed: this.handleStateChanged.bind(this),\n            interval: checkInterval,\n        });\n        if (checkInterval > 0) {\n            this.stateWatcher.start();\n        }\n    }\n\n    handleStateChanged(newState: State, oldState: State): void {\n        // console.log(\"schange\");\n        if (this.model) {\n            this.model.calculateSearchButtonStatus();\n        }\n\n        const shallShowOverlay = newState.isSearchInputFocused && !newState.isNoResultsScreen;\n\n        switch (this.shellHeader.getSearchState()) {\n            case \"EXP\":\n            case \"EXP_S\":\n                if (\n                    !newState.isSearchFieldExpandedByDefault &&\n                    oldState &&\n                    oldState.isSearchFieldExpandedByDefault &&\n                    this.getSearchBoxValue() === \"\"\n                ) {\n                    this.collapseSearch();\n                    return;\n                }\n                if (shallShowOverlay && !this.isOverlayShown()) {\n                    this.shellHeader.setSearchState(\"EXP_S\", 35, false); // intermediate state to force shell to show overlay\n                    this.shellHeader.setSearchState(\"EXP\", 35, true);\n                }\n                if (!shallShowOverlay && this.isOverlayShown) {\n                    this.shellHeader.setSearchState(\"EXP_S\", 35, false); // intermediate state to force shell to disable overlay\n                    this.shellHeader.setSearchState(\"EXP\", 35, false);\n                }\n                break;\n            case \"COL\":\n                if (newState.isSearchFieldExpandedByDefault) {\n                    this.expandSearch();\n                }\n                break;\n        }\n    }\n\n    getShellSearchButton(): Button {\n        return Element.getElementById(\"sf\") as any as Button;\n    }\n\n    expandSearch(focusSearchField?: boolean): void {\n        const shellSearchButton = this.getShellSearchButton();\n        if (!shellSearchButton) {\n            return;\n        }\n        this.shellHeader.setSearchState(\"EXP\", 35, false);\n        if (this.searchFieldGroup.cancelButton) {\n            this.searchFieldGroup.cancelButton.setVisible(true);\n        }\n        shellSearchButton.setVisible(false);\n        if (focusSearchField) {\n            this.focusSearchInput({\n                selectContent: false,\n            });\n        }\n    }\n\n    collapseSearch(): void {\n        const shellSearchButton = this.getShellSearchButton();\n        if (!shellSearchButton) {\n            return;\n        }\n        this.model.abortSuggestions();\n        this.shellHeader.setSearchState(\"COL\", 35, false);\n        if (this.searchFieldGroup.cancelButton) {\n            this.searchFieldGroup.cancelButton.setVisible(false);\n        }\n        shellSearchButton.setVisible(true);\n    }\n\n    getSearchBoxValue(): string {\n        return this.searchFieldGroup.input.getValue();\n    }\n\n    isSearchInputFocused(): boolean {\n        if (\n            !this.searchFieldGroup ||\n            !this.searchFieldGroup.input ||\n            !this.searchFieldGroup.input.getDomRef()\n        ) {\n            return false;\n        }\n        return this.searchFieldGroup.input.getDomRef().contains(document.activeElement);\n    }\n\n    isOverlayShown(): boolean {\n        return !!document.querySelector(\".sapUshellShellShowSearchOverlay\");\n    }\n\n    initPeriodicRetryFocus(): void {\n        const focus = () => {\n            if (!this?.searchFieldGroup?.input) {\n                return false;\n            }\n            const domRef = this.searchFieldGroup.input.getDomRef();\n            if (domRef && jQuery(domRef).is(\":visible\")) {\n                if (this.searchFieldGroup.input.getEnabled()) {\n                    this.searchFieldGroup.input.focus();\n                    if (this.periodicRetryFocusOptions.selectContent) {\n                        this.searchFieldGroup.input.selectText(0, 9999);\n                    }\n                    return true;\n                }\n            }\n            return false;\n        };\n        this.periodicRetryFocus = new PeriodicRetry({\n            interval: 100,\n            maxRetries: 10,\n            action: focus,\n        });\n    }\n\n    focusSearchInput(options: { selectContent?: boolean } = {}): void {\n        this.periodicRetryFocusOptions = options;\n        this.periodicRetryFocus.run();\n    }\n\n    isNoResultsScreen(): boolean {\n        return (\n            SearchHelper.isSearchAppActive() &&\n            this.model.getProperty(\"/boCount\") === 0 &&\n            this.model.getProperty(\"/appCount\") === 0\n        );\n    }\n}\n"],"mappings":"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","ignoreList":[]}