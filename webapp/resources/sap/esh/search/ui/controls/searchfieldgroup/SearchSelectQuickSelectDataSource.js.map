{"version":3,"file":"SearchSelectQuickSelectDataSource.js","names":["sap","ui","define","Select","Item","Element","SearchSelectQuickSelectDataSource","extend","renderer","apiVersion","constructor","_constructor","sId","options","Select.prototype.constructor.call","this","attachChange","event","itemControl","getParameter","item","getBindingContext","getObject","handleSelectDataSource","bindItems","path","template","key","text","bindProperty","parts","formatter","optimizeForValueHelp","addStyleClass","qds","qdsLength","count","length","_handleSelectDataSource","dataSource","oModel","getModel","config","bResetSearchTermOnQuickSelectDataSourceItemPress","setSearchBoxTerm","adjustFilters","setDataSource","searchButtonElements","window","document","querySelectorAll","forEach","searchButton","id","getId","replace","searchButtonUi5","getElementById"],"sources":["SearchSelectQuickSelectDataSource.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\nimport Select, { $SelectSettings } from \"sap/m/Select\";\nimport Item from \"sap/ui/core/Item\";\nimport SearchModel from \"sap/esh/search/ui/SearchModel\";\nimport { DataSource } from \"../../sinaNexTS/sina/DataSource\";\nimport Element from \"sap/ui/core/Element\";\n\n/**\n * @namespace sap.esh.search.ui.controls\n */\nexport default class SearchSelectQuickSelectDataSource extends Select {\n    constructor(sId?: string, options?: Partial<$SelectSettings>) {\n        super(sId, options);\n\n        this.attachChange((event) => {\n            const itemControl = event.getParameter(\"selectedItem\");\n            const item = itemControl.getBindingContext().getObject() as DataSource;\n            this.handleSelectDataSource(item);\n        });\n        this.bindItems({\n            path: \"/config/quickSelectDataSources\",\n            template: new Item(\"\", {\n                key: \"{id}\",\n                text: \"{labelPlural}\",\n            }),\n        });\n\n        this.bindProperty(\"maxWidth\", {\n            parts: [{ path: \"/config/optimizeForValueHelp\" }],\n\n            formatter: (optimizeForValueHelp) => {\n                if (optimizeForValueHelp) {\n                    this.addStyleClass(\"sapElisaSearchSelectQuickSelectDataSourceValueHelp\");\n                }\n                return \"100%\";\n            },\n        });\n\n        this.bindProperty(\"visible\", {\n            parts: [\n                { path: \"/config/optimizeForValueHelp\" },\n                { path: \"/config/quickSelectDataSources\" },\n                { path: \"/config/quickSelectDataSources/length\" },\n                { path: \"/count\" },\n            ],\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            formatter: (optimizeForValueHelp, qds, qdsLength, count) => {\n                if (optimizeForValueHelp) {\n                    // cannot be done in constructor (searchModel n.a.), control has no custom renderer -> thus put it here\n                    this.addStyleClass(\"sapElisaSearchSelectQuickSelectDataSourceValueHelp\");\n                }\n                return qds?.length > 0;\n            },\n        });\n    }\n\n    handleSelectDataSource(dataSource: DataSource): void {\n        const oModel = this.getModel() as SearchModel;\n        // reset search term (even if selected item gets pressed again)\n        if (oModel.config.bResetSearchTermOnQuickSelectDataSourceItemPress) {\n            oModel.setSearchBoxTerm(\"\", false);\n        }\n        // when filter is changed (here data source), give a callback to adjust the conditions\n        if (typeof oModel.config.adjustFilters === \"function\") {\n            oModel.config.adjustFilters(oModel);\n        }\n        oModel.setDataSource(dataSource, false); // true does not trigger search (example: DSP entity list) ?!?\n        const searchButtonElements = window.document.querySelectorAll(\n            '[id$=\"-searchInputHelpPageSearchFieldGroup-button\"]'\n        );\n        searchButtonElements.forEach((searchButton) => {\n            if (\n                searchButton.id ===\n                this.getId().replace(\n                    \"-searchInputHelpPageSearchFieldGroup-selectQsDs\",\n                    \"-searchInputHelpPageSearchFieldGroup-button\"\n                )\n            ) {\n                const searchButtonUi5 = Element.getElementById(searchButton.id);\n                searchButtonUi5[\"firePress\"](); // ToDo - workaround, see above\n            }\n        });\n    }\n\n    static renderer = {\n        apiVersion: 2,\n    };\n}\n"],"mappings":";;;;;AAAAA,IAAAC,GAAAC,OAAA,mEAAAC,EAAAC,EAAAC,GAAA,aAWA,MAGqBC,EAA0CH,EAAMI,OAAA,gEA0E1DC,SAAW,CACdC,WAAY,GA1EhBC,YAAW,SAAAC,EAACC,EAAcC,GACtBC,6BAAAC,KAAMH,EAAKC,GAEXE,KAAKC,aAAcC,IACf,MAAMC,EAAcD,EAAME,aAAa,gBACvC,MAAMC,EAAOF,EAAYG,oBAAoBC,YAC7CP,KAAKQ,uBAAuBH,KAEhCL,KAAKS,UAAU,CACXC,KAAM,iCACNC,SAAU,IAAItB,EAAK,GAAI,CACnBuB,IAAK,OACLC,KAAM,oBAIdb,KAAKc,aAAa,WAAY,CAC1BC,MAAO,CAAC,CAAEL,KAAM,iCAEhBM,UAAYC,IACR,GAAIA,EAAsB,CACtBjB,KAAKkB,cAAc,qDACvB,CACA,MAAO,UAIflB,KAAKc,aAAa,UAAW,CACzBC,MAAO,CACH,CAAEL,KAAM,gCACR,CAAEA,KAAM,kCACR,CAAEA,KAAM,yCACR,CAAEA,KAAM,WAGZM,UAAWA,CAACC,EAAsBE,EAAKC,EAAWC,KAC9C,GAAIJ,EAAsB,CAEtBjB,KAAKkB,cAAc,qDACvB,CACA,OAAOC,GAAKG,OAAS,IAGjC,EAEAd,uBAAsB,SAAAe,EAACC,GACnB,MAAMC,EAASzB,KAAK0B,WAEpB,GAAID,EAAOE,OAAOC,iDAAkD,CAChEH,EAAOI,iBAAiB,GAAI,MAChC,CAEA,UAAWJ,EAAOE,OAAOG,gBAAkB,WAAY,CACnDL,EAAOE,OAAOG,cAAcL,EAChC,CACAA,EAAOM,cAAcP,EAAY,OACjC,MAAMQ,EAAuBC,OAAOC,SAASC,iBACzC,uDAEJH,EAAqBI,QAASC,IAC1B,GACIA,EAAaC,KACbtC,KAAKuC,QAAQC,QACT,kDACA,+CAEN,CACE,MAAMC,EAAkBnD,EAAQoD,eAAeL,EAAaC,IAC5DG,EAAgB,cACpB,GAER,IAAC,OAxEgBlD,CAAiC","ignoreList":[]}