{"version":3,"file":"SearchLayoutResponsive.js","names":["sap","ui","define","ResponsiveSplitter","SplitterLayoutData","VBox","SplitPane","PaneContainer","sap_ui_core_library","Text","__UIEvents","_interopRequireDefault","obj","__esModule","default","Orientation","UIEvents","SearchLayoutResponsive","extend","renderer","apiVersion","metadata","properties","searchIsBusy","type","busyDelay","showFacets","facetPanelResizable","defaultValue","facetPanelWidthInPercent","facetPanelMinWidth","animateFacetTransition","aggregations","resultPanelContent","multiple","facetPanelContent","constructor","_constructor","sId","options","ResponsiveSplitter.prototype.constructor.call","this","facetsDummyContainer","items","_paneLeft","requiredParentWidth","content","_paneRight","_resultPanelContent","setLayoutData","size","resizable","_paneMainContainer","orientation","Horizontal","panes","resize","triggerUpdateLayout","paneContainer","setRootPaneContainer","setDefaultPane","getFacetPanelContent","_getFacetPanelContent","facetContainer","getContent","undefined","setFacetPanelContent","_setFacetPanelContent","oControl","_facetPanelContent","setContent","setResultPanelContent","_setResultPanelContent","oSearchResultPanel","setSearchIsBusy","_setSearchIsBusy","isBusy","searchModel","getModel","searchCompositeControl","getSearchCompositeControlInstanceByChildControl","setBusyIndicatorDelay","getProperty","setBusy","setShowFacets","_setShowFacets","updateLayout","setFacetPanelWidthInPercent","_setFacetPanelWidthInPercent","facetPanelWidthInPercentValue","setProperty","_facetPanelWidthSizeIsOutdated","_triggerUpdateLayout","paneLeftContainerLayoutData","getLayoutData","widthString","replace","facetPanelPaneWidth","parseInt","facetsAreVisible","_updateLayout","vBoxItems","getItems","length","addStyleClass","removeStyleClass","currentFacetPanelWidthSize","setVisible","minSize","oModel","config","optimizeForValueHelp","_previousFacetPanelWidthSize","handleAnimationEnd","notifySubscribers","ESHSearchLayoutChanged","searchFacets","document","querySelector","onTransitionEnd","removeEventListener","addEventListener","convertRemToPixel","_convertRemToPixel","remValue","parseFloat","getComputedStyle","documentElement","fontSize","convertPixelToRem","_convertPixelToRem","pxValue"],"sources":["SearchLayoutResponsive.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\nimport ResponsiveSplitter, { $ResponsiveSplitterSettings } from \"sap/ui/layout/ResponsiveSplitter\";\nimport SplitterLayoutData from \"sap/ui/layout/SplitterLayoutData\";\nimport VBox from \"sap/m/VBox\";\nimport BusyDialog from \"sap/m/BusyDialog\";\nimport SplitPane from \"sap/ui/layout/SplitPane\";\nimport PaneContainer from \"sap/ui/layout/PaneContainer\";\nimport type SearchModel from \"sap/esh/search/ui/SearchModel\";\nimport { Orientation } from \"sap/ui/core/library\";\nimport Int from \"sap/ui/model/odata/type/Int\";\nimport Control from \"sap/ui/core/Control\";\nimport Text from \"sap/m/Text\";\nimport SearchResultPanel from \"./resultview/SearchResultPanel\";\nimport { AggregationBindingInfo, PropertyBindingInfo } from \"sap/ui/base/ManagedObject\";\nimport UIEvents from \"../UIEvents\";\nimport SearchFacetList from \"./facets/SearchFacetList\";\n\nexport interface $SearchLayoutResponsiveSettings extends $ResponsiveSplitterSettings {\n    // properties\n    searchIsBusy: boolean | PropertyBindingInfo;\n    busyDelay: number | PropertyBindingInfo;\n    showFacets: boolean | PropertyBindingInfo;\n    facetPanelResizable: boolean | PropertyBindingInfo;\n    facetPanelWidthInPercent: number | PropertyBindingInfo;\n    facetPanelMinWidth: int | PropertyBindingInfo;\n    resultPanelContent: SearchResultPanel;\n    facetPanelContent: SearchFacetList | AggregationBindingInfo;\n    animateFacetTransition?: boolean | PropertyBindingInfo;\n}\n\n/**\n * @namespace sap.esh.search.ui.controls\n */\nexport default class SearchLayoutResponsive extends ResponsiveSplitter {\n    private _previousFacetPanelWidthSize: number;\n    private _paneMainContainer: PaneContainer;\n    private _paneLeft: SplitPane;\n    private _paneRight: SplitPane;\n    private _facetPanelWidthSizeIsOutdated: boolean;\n    private _busyIndicatorModal: BusyDialog;\n    private _busyFlag: boolean;\n    private _busyTimeout: number;\n    private _resultPanelContent: SearchResultPanel;\n    private _facetPanelContent: Control;\n\n    static readonly metadata = {\n        properties: {\n            searchIsBusy: {\n                type: \"boolean\",\n            },\n            busyDelay: {\n                type: \"int\",\n            },\n            showFacets: {\n                type: \"boolean\",\n            },\n            facetPanelResizable: {\n                type: \"boolean\",\n                defaultValue: false,\n            },\n            facetPanelWidthInPercent: {\n                type: \"int\",\n                defaultValue: 25,\n            },\n            facetPanelMinWidth: {\n                type: \"int\",\n                defaultValue: 288,\n            },\n            animateFacetTransition: {\n                type: \"boolean\",\n                defaultValue: false,\n            },\n        },\n        aggregations: {\n            resultPanelContent: {\n                type: \"object\",\n                multiple: false,\n            },\n            facetPanelContent: {\n                type: \"object\",\n                multiple: false,\n            },\n        },\n    };\n\n    constructor(sId?: string, options?: Partial<$SearchLayoutResponsiveSettings>) {\n        super(sId, options);\n\n        // facets\n        const facetsDummyContainer = new VBox(\"\", {\n            items: [new Text()], // dummy for initialization\n        });\n        this._paneLeft = new SplitPane({\n            requiredParentWidth: 10, // use minimal width -> single pane mode disabled\n            content: facetsDummyContainer,\n        });\n        // pane right, content\n        this._paneRight = new SplitPane({\n            requiredParentWidth: 10, // use minimal width -> single pane mode disabled\n            content: this._resultPanelContent,\n        });\n        // facet panel \"hidden\"\n        this._paneLeft.setLayoutData(\n            new SplitterLayoutData({\n                size: \"0%\", // width\n                resizable: false,\n            })\n        );\n        // panes\n        this._paneMainContainer = new PaneContainer({\n            orientation: Orientation.Horizontal,\n            panes: [this._paneLeft, this._paneRight],\n            resize: () => {\n                this.triggerUpdateLayout();\n            },\n        });\n        this._paneMainContainer.setLayoutData(\n            new SplitterLayoutData({\n                size: \"100%\", // height\n                resizable: false,\n            })\n        );\n        const paneContainer = this._paneMainContainer;\n        this.setRootPaneContainer(paneContainer);\n        this.setDefaultPane(this._paneRight); // not used\n    }\n\n    getFacetPanelContent(): Control {\n        const facetContainer = this._paneLeft;\n        if (facetContainer?.getContent()) {\n            return facetContainer.getContent();\n        }\n        return undefined;\n    }\n\n    setFacetPanelContent(oControl: Control): void {\n        this._facetPanelContent = oControl;\n        const facetContainer = this._paneLeft;\n        if (facetContainer) {\n            facetContainer.setContent(oControl);\n        }\n    }\n\n    setResultPanelContent(oSearchResultPanel: SearchResultPanel): void {\n        this._resultPanelContent = oSearchResultPanel;\n        if (this._paneRight) {\n            this._paneRight.setContent(oSearchResultPanel);\n        }\n    }\n\n    setSearchIsBusy(isBusy: boolean): void {\n        const searchModel = this.getModel() as SearchModel;\n        if (!searchModel) {\n            return;\n        }\n        const searchCompositeControl = searchModel.getSearchCompositeControlInstanceByChildControl(this);\n        if (!searchCompositeControl) {\n            return;\n        }\n        searchCompositeControl.setBusyIndicatorDelay(this.getProperty(\"busyDelay\"));\n        searchCompositeControl.setBusy(isBusy);\n    }\n\n    setShowFacets(showFacets: boolean): SearchLayoutResponsive {\n        if (!this._paneRight) {\n            return;\n        }\n\n        this.updateLayout(showFacets);\n\n        return this; // return \"this\" to allow method chaining\n    }\n\n    setFacetPanelWidthInPercent(facetPanelWidthInPercentValue: Int): SearchLayoutResponsive {\n        // the 3rd parameter supresses rerendering\n        this.setProperty(\"facetPanelWidthInPercent\", facetPanelWidthInPercentValue, true); // this validates and stores the new value\n        this._facetPanelWidthSizeIsOutdated = true;\n\n        return this; // return \"this\" to allow method chaining\n    }\n\n    /* call from i.e. result view after toolbar changes */\n    triggerUpdateLayout() {\n        const paneLeftContainerLayoutData = this?._paneLeft.getLayoutData();\n        const widthString = paneLeftContainerLayoutData.getProperty(\"size\").replace(\"%\", \"\");\n        const facetPanelPaneWidth = parseInt(widthString);\n        const facetsAreVisible = facetPanelPaneWidth > 0;\n        this.updateLayout(facetsAreVisible);\n    }\n\n    updateLayout(facetsAreVisible: boolean): void {\n        // update facets\n        // adjust the facet content\n        const facetContainer = this._paneLeft;\n        if (facetContainer?.getContent() instanceof VBox) {\n            const vBoxItems = (facetContainer.getContent() as VBox).getItems();\n            if (vBoxItems?.length > 0 && vBoxItems[0] instanceof Text) {\n                facetContainer.setContent(this._facetPanelContent);\n            }\n        }\n        // animation\n        if (this._facetPanelContent) {\n            // robustness when triggered by constructor\n            if (this.getProperty(\"animateFacetTransition\")) {\n                this._facetPanelContent.addStyleClass(\"sapUshellSearchFacetAnimation\");\n            } else {\n                this._facetPanelContent.removeStyleClass(\"sapUshellSearchFacetAnimation\");\n            }\n        }\n        // left pane - facets width / splitter position\n        if (this?._paneLeft?.getContent()) {\n            let currentFacetPanelWidthSize;\n            const paneLeftContainerLayoutData = this?._paneLeft.getLayoutData();\n            if (!facetsAreVisible) {\n                this._paneLeft.getContent().setVisible(false);\n                this._paneLeft.setLayoutData(\n                    new SplitterLayoutData({\n                        size: \"0%\", // width\n                        minSize: 0,\n                        resizable: false,\n                    })\n                );\n            } else {\n                this._paneLeft.getContent().setVisible(true);\n                const oModel = this.getModel() as SearchModel;\n                let facetPanelMinWidth = this.getProperty(\"facetPanelMinWidth\");\n                if (oModel.config.optimizeForValueHelp) {\n                    currentFacetPanelWidthSize = 0.01; // facet panel currently needs to be visible/rendered to open filter dialog\n                    facetPanelMinWidth = 0;\n                } else if (this._facetPanelWidthSizeIsOutdated) {\n                    currentFacetPanelWidthSize = this.getProperty(\"facetPanelWidthInPercent\");\n                    this._facetPanelWidthSizeIsOutdated = false;\n                } else {\n                    currentFacetPanelWidthSize = parseInt(\n                        paneLeftContainerLayoutData.getProperty(\"size\").replace(\"%\", \"\")\n                    );\n                    if (currentFacetPanelWidthSize < 1) {\n                        if (this._previousFacetPanelWidthSize) {\n                            currentFacetPanelWidthSize = this._previousFacetPanelWidthSize;\n                        } else {\n                            currentFacetPanelWidthSize = this.getProperty(\"facetPanelWidthInPercent\");\n                        }\n                    }\n                }\n                this._paneLeft.setLayoutData(\n                    new SplitterLayoutData({\n                        size: currentFacetPanelWidthSize + \"%\",\n                        minSize: facetPanelMinWidth,\n                        resizable: this.getProperty(\"facetPanelResizable\"),\n                    })\n                );\n                this._previousFacetPanelWidthSize = currentFacetPanelWidthSize; // remember width to restore when showing facets (after having closed them before)\n            }\n        }\n\n        this._paneMainContainer.setLayoutData(\n            new SplitterLayoutData({\n                size: \"100%\",\n                resizable: false,\n            })\n        );\n\n        const handleAnimationEnd = () => {\n            (this.getModel() as SearchModel).notifySubscribers(UIEvents.ESHSearchLayoutChanged);\n        };\n\n        const searchFacets = document.querySelector(\".sapUiFixFlexFixed\");\n        if (searchFacets) {\n            const onTransitionEnd = () => {\n                handleAnimationEnd();\n                searchFacets.removeEventListener(\"transitionend\", onTransitionEnd);\n            };\n            searchFacets.addEventListener(\"transitionend\", onTransitionEnd);\n        }\n    }\n\n    convertRemToPixel(remValue: number): number {\n        return remValue * parseFloat(getComputedStyle(document.documentElement).fontSize);\n    }\n\n    convertPixelToRem(pxValue: number): number {\n        return pxValue / parseFloat(getComputedStyle(document.documentElement).fontSize);\n    }\n\n    static renderer = {\n        apiVersion: 2,\n    };\n}\n"],"mappings":";;;;;AAAAA,IAAAC,GAAAC,OAAA,uMAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,sBAAAC,EAAAC,GAAA,OAAAA,KAAAC,mBAAAD,EAAAE,UAAA,YAAAF,EAAAE,QAAAF,CAAA,OAYSG,EAAWP,EAAA,qBAMbQ,EAAQL,EAAAD,GAgBf,MAGqBO,EAA+Bd,EAAkBe,OAAA,qDA2P3DC,SAAW,CACdC,WAAY,GAhPAC,SAAW,CACvBC,WAAY,CACRC,aAAc,CACVC,KAAM,WAEVC,UAAW,CACPD,KAAM,OAEVE,WAAY,CACRF,KAAM,WAEVG,oBAAqB,CACjBH,KAAM,UACNI,aAAc,OAElBC,yBAA0B,CACtBL,KAAM,MACNI,aAAc,IAElBE,mBAAoB,CAChBN,KAAM,MACNI,aAAc,KAElBG,uBAAwB,CACpBP,KAAM,UACNI,aAAc,QAGtBI,aAAc,CACVC,mBAAoB,CAChBT,KAAM,SACNU,SAAU,OAEdC,kBAAmB,CACfX,KAAM,SACNU,SAAU,SAKtBE,YAAW,SAAAC,EAACC,EAAcC,GACtBC,6BAAAC,KAAMH,EAAKC,GAGX,MAAMG,EAAuB,IAAIrC,EAAK,GAAI,CACtCsC,MAAO,CAAC,IAAIlC,KAEhBgC,KAAKG,UAAY,IAAItC,EAAU,CAC3BuC,oBAAqB,GACrBC,QAASJ,IAGbD,KAAKM,WAAa,IAAIzC,EAAU,CAC5BuC,oBAAqB,GACrBC,QAASL,KAAKO,sBAGlBP,KAAKG,UAAUK,cACX,IAAI7C,EAAmB,CACnB8C,KAAM,KACNC,UAAW,SAInBV,KAAKW,mBAAqB,IAAI7C,EAAc,CACxC8C,YAAatC,EAAYuC,WACzBC,MAAO,CAACd,KAAKG,UAAWH,KAAKM,YAC7BS,OAAQA,KACJf,KAAKgB,yBAGbhB,KAAKW,mBAAmBH,cACpB,IAAI7C,EAAmB,CACnB8C,KAAM,OACNC,UAAW,SAGnB,MAAMO,EAAgBjB,KAAKW,mBAC3BX,KAAKkB,qBAAqBD,GAC1BjB,KAAKmB,eAAenB,KAAKM,WAC7B,EAEAc,qBAAoB,SAAAC,IAChB,MAAMC,EAAiBtB,KAAKG,UAC5B,GAAImB,GAAgBC,aAAc,CAC9B,OAAOD,EAAeC,YAC1B,CACA,OAAOC,SACX,EAEAC,qBAAoB,SAAAC,EAACC,GACjB3B,KAAK4B,mBAAqBD,EAC1B,MAAML,EAAiBtB,KAAKG,UAC5B,GAAImB,EAAgB,CAChBA,EAAeO,WAAWF,EAC9B,CACJ,EAEAG,sBAAqB,SAAAC,EAACC,GAClBhC,KAAKO,oBAAsByB,EAC3B,GAAIhC,KAAKM,WAAY,CACjBN,KAAKM,WAAWuB,WAAWG,EAC/B,CACJ,EAEAC,gBAAe,SAAAC,EAACC,GACZ,MAAMC,EAAcpC,KAAKqC,WACzB,IAAKD,EAAa,CACd,MACJ,CACA,MAAME,EAAyBF,EAAYG,gDAAgDvC,MAC3F,IAAKsC,EAAwB,CACzB,MACJ,CACAA,EAAuBE,sBAAsBxC,KAAKyC,YAAY,cAC9DH,EAAuBI,QAAQP,EACnC,EAEAQ,cAAa,SAAAC,EAAC3D,GACV,IAAKe,KAAKM,WAAY,CAClB,MACJ,CAEAN,KAAK6C,aAAa5D,GAElB,OAAOe,IACX,EAEA8C,4BAA2B,SAAAC,EAACC,GAExBhD,KAAKiD,YAAY,2BAA4BD,EAA+B,MAC5EhD,KAAKkD,+BAAiC,KAEtC,OAAOlD,IACX,EAGAgB,oBAAmB,SAAAmC,IACf,MAAMC,EAA8BpD,MAAMG,UAAUkD,gBACpD,MAAMC,EAAcF,EAA4BX,YAAY,QAAQc,QAAQ,IAAK,IACjF,MAAMC,EAAsBC,SAASH,GACrC,MAAMI,EAAmBF,EAAsB,EAC/CxD,KAAK6C,aAAaa,EACtB,EAEAb,aAAY,SAAAc,EAACD,GAGT,MAAMpC,EAAiBtB,KAAKG,UAC5B,GAAImB,GAAgBC,uBAAwB3D,EAAM,CAC9C,MAAMgG,EAAatC,EAAeC,aAAsBsC,WACxD,GAAID,GAAWE,OAAS,GAAKF,EAAU,aAAc5F,EAAM,CACvDsD,EAAeO,WAAW7B,KAAK4B,mBACnC,CACJ,CAEA,GAAI5B,KAAK4B,mBAAoB,CAEzB,GAAI5B,KAAKyC,YAAY,0BAA2B,CAC5CzC,KAAK4B,mBAAmBmC,cAAc,gCAC1C,KAAO,CACH/D,KAAK4B,mBAAmBoC,iBAAiB,gCAC7C,CACJ,CAEA,GAAIhE,MAAMG,WAAWoB,aAAc,CAC/B,IAAI0C,EACJ,MAAMb,EAA8BpD,MAAMG,UAAUkD,gBACpD,IAAKK,EAAkB,CACnB1D,KAAKG,UAAUoB,aAAa2C,WAAW,OACvClE,KAAKG,UAAUK,cACX,IAAI7C,EAAmB,CACnB8C,KAAM,KACN0D,QAAS,EACTzD,UAAW,QAGvB,KAAO,CACHV,KAAKG,UAAUoB,aAAa2C,WAAW,MACvC,MAAME,EAASpE,KAAKqC,WACpB,IAAIhD,EAAqBW,KAAKyC,YAAY,sBAC1C,GAAI2B,EAAOC,OAAOC,qBAAsB,CACpCL,EAA6B,IAC7B5E,EAAqB,CACzB,MAAO,GAAIW,KAAKkD,+BAAgC,CAC5Ce,EAA6BjE,KAAKyC,YAAY,4BAC9CzC,KAAKkD,+BAAiC,KAC1C,KAAO,CACHe,EAA6BR,SACzBL,EAA4BX,YAAY,QAAQc,QAAQ,IAAK,KAEjE,GAAIU,EAA6B,EAAG,CAChC,GAAIjE,KAAKuE,6BAA8B,CACnCN,EAA6BjE,KAAKuE,4BACtC,KAAO,CACHN,EAA6BjE,KAAKyC,YAAY,2BAClD,CACJ,CACJ,CACAzC,KAAKG,UAAUK,cACX,IAAI7C,EAAmB,CACnB8C,KAAMwD,EAA6B,IACnCE,QAAS9E,EACTqB,UAAWV,KAAKyC,YAAY,0BAGpCzC,KAAKuE,6BAA+BN,CACxC,CACJ,CAEAjE,KAAKW,mBAAmBH,cACpB,IAAI7C,EAAmB,CACnB8C,KAAM,OACNC,UAAW,SAInB,MAAM8D,EAAqBA,KACtBxE,KAAKqC,WAA2BoC,kBAAkBlG,EAASmG,yBAGhE,MAAMC,EAAeC,SAASC,cAAc,sBAC5C,GAAIF,EAAc,CACd,MAAMG,EAAkBA,KACpBN,IACAG,EAAaI,oBAAoB,gBAAiBD,IAEtDH,EAAaK,iBAAiB,gBAAiBF,EACnD,CACJ,EAEAG,kBAAiB,SAAAC,EAACC,GACd,OAAOA,EAAWC,WAAWC,iBAAiBT,SAASU,iBAAiBC,SAC5E,EAEAC,kBAAiB,SAAAC,EAACC,GACd,OAAOA,EAAUN,WAAWC,iBAAiBT,SAASU,iBAAiBC,SAC3E,IAAC,OAzPgB/G,CAAsB","ignoreList":[]}