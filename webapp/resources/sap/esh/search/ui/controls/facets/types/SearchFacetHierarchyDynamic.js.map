{"version":3,"file":"SearchFacetHierarchyDynamic.js","names":["sap","ui","define","__i18n","Label","CheckBox","sap_m_library","BindingMode","__TreeView","Link","VBox","__TreeViewItem","FlexBox","_interopRequireDefault","obj","__esModule","default","i18n","FlexAlignItems","FlexJustifyContent","ListType","TreeView","TreeViewItem","SearchFacetHierarchyDynamic","extend","renderer","apiVersion","metadata","properties","showTitle","type","defaultValue","openShowMoreDialogFunction","constructor","_constructor","sId","options","VBox.prototype.constructor.call","this","addStyleClass","getShowTitle","header","justifyContent","SpaceBetween","alignItems","Center","items","text","addItem","treeView","treeNodeFactory","path","factory","oContext","createTreeItem","data","createShowMoreLink","getOpenShowMoreDialogFunction","_getOpenShowMoreDialogFunction","getProperty","_createShowMoreLink","oShowMoreLink","getText","press","facet","getBindingContext","getObject","openShowMoreDialog","searchModel","getModel","dimension","attributeId","selectedTabBarIndex","tabBarItems","undefined","sourceControl","oInfoZeile","oShowMoreSlot","visible","parts","formatter","isShowMoreDialog","_getShowTitle","_createTreeItem","treeNode","checkBox","selected","mode","OneWay","partiallySelected","select","event","getSource","toggleFilter","label","count","treeItem","content","attachPress","setType","Active"],"sources":["SearchFacetHierarchyDynamic.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\nimport i18n from \"../../../i18n\";\nimport Tree from \"sap/m/Tree\";\nimport CustomTreeItem from \"sap/m/CustomTreeItem\";\nimport Label from \"sap/m/Label\";\nimport CheckBox, { CheckBox$SelectEvent } from \"sap/m/CheckBox\";\nimport { FlexAlignItems, FlexJustifyContent, ListType } from \"sap/m/library\";\nimport BindingMode from \"sap/ui/model/BindingMode\";\nimport TreeView from \"../../../tree/TreeView\";\nimport Link from \"sap/m/Link\";\nimport VBox from \"sap/m/VBox\";\nimport SearchHierarchyDynamicFacet from \"../../../hierarchydynamic/SearchHierarchyDynamicFacet\";\nimport SearchModel from \"../../../SearchModel\";\nimport Context from \"sap/ui/model/Context\";\nimport SearchHierarchyDynamicTreeNode from \"../../../hierarchydynamic/SearchHierarchyDynamicTreeNode\";\nimport TreeViewItem from \"../../../tree/TreeViewItem\";\nimport FlexBox from \"sap/m/FlexBox\";\nimport { ShowMoreDialogOptions } from \"../../OpenShowMoreDialog\";\n\n/**\n * Hierarchy facet (dynamic)\n *\n * The SearchFacetHierarchyDynamic control is used for displaying dynamic hierarchy facets.\n * Corresponding model objects:\n * - hierarchydynamic/SearchHierarchyDynamicFacet.js : facet with pointer to root hierarchy node\n * - hierarchydynamic/SearchHierarchyDynamicNode.js  : hierarchy node\n */\n\n/**\n * @namespace sap.esh.search.ui.controls\n */\nexport default class SearchFacetHierarchyDynamic extends VBox {\n    static readonly metadata = {\n        properties: {\n            showTitle: {\n                type: \"boolean\",\n                defaultValue: true,\n            },\n            openShowMoreDialogFunction: {\n                type: \"function\",\n            },\n        },\n    };\n\n    private tree: Tree;\n    constructor(sId?: string, options?: any /* Partial<$SearchFacetHierarchyDynamic> */) {\n        super(sId, options);\n        this.addStyleClass(\"sapUshellSearchFacetContainer\");\n\n        // heading\n        if (this.getShowTitle()) {\n            const header = new FlexBox({\n                justifyContent: FlexJustifyContent.SpaceBetween,\n                alignItems: FlexAlignItems.Center,\n                items: [new Label({ text: \"{title}\" })],\n            });\n            header.addStyleClass(\"sapUshellSearchFacetHeader\");\n            this.addItem(header);\n        }\n\n        // tree\n        const treeView = new TreeView(\"\", {\n            treeNodeFactory: \"{treeNodeFactory}\",\n            items: {\n                path: \"rootTreeNode/childTreeNodes\",\n                factory: (sId: string, oContext: Context) => {\n                    return this.createTreeItem(sId, oContext);\n                },\n            },\n        });\n        // define group for F6 handling (tree)\n        treeView.data(\"sap-ui-fastnavgroup\", \"false\", true /* write into DOM */);\n        this.addItem(treeView);\n\n        // show more link\n        this.createShowMoreLink();\n    }\n\n    getOpenShowMoreDialogFunction(): (options: ShowMoreDialogOptions) => Promise<void> {\n        return this.getProperty(\"openShowMoreDialogFunction\");\n    }\n\n    createShowMoreLink() {\n        const oShowMoreLink = new Link(\"\", {\n            text: i18n.getText(\"showMore\"),\n            press: () => {\n                const facet = this.getBindingContext().getObject() as SearchHierarchyDynamicFacet;\n                const openShowMoreDialog = this.getOpenShowMoreDialogFunction();\n                openShowMoreDialog({\n                    searchModel: this.getModel() as SearchModel,\n                    dimension: facet.attributeId,\n                    selectedTabBarIndex: 0,\n                    tabBarItems: undefined,\n                    sourceControl: this,\n                });\n            },\n        });\n        const oInfoZeile = new Label(\"\", {\n            text: \"\",\n        });\n        oShowMoreLink.addStyleClass(\"sapUshellSearchFacetShowMoreLink\");\n        const oShowMoreSlot = new VBox(\"\", {\n            items: [oInfoZeile, oShowMoreLink],\n            visible: {\n                parts: [{ path: \"isShowMoreDialog\" }],\n                formatter: function (isShowMoreDialog) {\n                    return !isShowMoreDialog;\n                },\n            },\n        });\n        oShowMoreSlot.addStyleClass(\"sapUshellSearchFacetShowMore\");\n        this.addItem(oShowMoreSlot);\n    }\n\n    getShowTitle(): boolean {\n        return this.getProperty(\"showTitle\");\n    }\n\n    createTreeItem(sId: string, oContext: Context): CustomTreeItem {\n        const treeNode = oContext.getObject() as SearchHierarchyDynamicTreeNode;\n        const checkBox = new CheckBox({\n            selected: {\n                path: \"selected\",\n                mode: BindingMode.OneWay,\n            },\n            partiallySelected: {\n                path: \"partiallySelected\",\n                mode: BindingMode.OneWay,\n            },\n            select: function (event: CheckBox$SelectEvent) {\n                const treeNode = event\n                    .getSource()\n                    .getBindingContext()\n                    .getObject() as SearchHierarchyDynamicTreeNode;\n                treeNode.toggleFilter();\n            },\n        });\n        const label = new Label({\n            text: {\n                parts: [{ path: \"label\" }, { path: \"count\" }],\n                formatter: function (label, count) {\n                    return count ? label + \" (\" + count + \")\" : label;\n                },\n            },\n        });\n        const treeItem = new TreeViewItem(\"\", {\n            content: [checkBox, label],\n        });\n        treeItem.attachPress(() => {\n            treeNode.toggleFilter();\n        });\n        treeItem.setType(ListType.Active);\n        return treeItem;\n    }\n\n    static renderer = {\n        apiVersion: 2,\n    };\n}\n"],"mappings":"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","ignoreList":[]}