{"version":3,"file":"SearchFacetPieChart.js","names":["sap","ui","define","__i18n","thirdpartyD3","Control","____FacetTypeUI","Element","_interopRequireDefault","obj","__esModule","default","i18n","FacetTypeUI","SearchFacetPieChart","extend","renderer","apiVersion","render","oRm","oControl","openStart","attr","openEnd","close","PieChart","metadata","properties","oSearchFacetDialog","type","aggregations","items","multiple","constructor","_constructor","sId","settings","Control.prototype.constructor.call","this","iMissingCnt","d3","getFacetIndex","_getFacetIndex","domElement","getDomRef","myIconTabBar","classList","contains","parentElement","iconTabBars","document","querySelectorAll","i","length","iconTabBar","item","getFacetIndexByIdForLargePieChart","_getFacetIndexByIdForLargePieChart","chartId","index","chartElem","getElementById","tabStrip","tabStripId","id","ar","Array","from","currentTabId","getPieChartIndexByFacetIndex","_getPieChartIndexByFacetIndex","facetIndex","selKey","previousFacetsWithPieChart","mlibContents","firstChild","match","getSumSelected","_getSumSelected","data","itemValue","integerValue","facetType","Attribute","j","value","selected","getDataForPieChart","_getDataForPieChart","model","res","group","currentFacetIndex","itemValueText","searchResultTotal","oData","count","overallTotal","pieChartTotal","filterCondition","dimension","facetTitle","label","filterLabel","valueLabel","tooltip","filtered","removed","fill","maxLabelLength","push","totalCount","percCoveredInPie","Math","round","percMissing","sizeOfWedge","getText","stroke","getDataForPieChartLarge","_getDataForPieChartLarge","facetItems","facetTotalCount","maxItemsToShow","facetAttribute","directUpdate","_directUpdate","piechartParent","options","model1","fewerData","application","getModel","getParent","pieChartParentClass","height","relevantContainerHeight","$","parent","chartElements","chart","update","isFacetPanel","_isFacetPanel","onAfterRendering","_onAfterRendering","that","className","getProperty","aAriaDesc","map","chartElement","setAttribute","join","selectedFacetItem","getBindingContext","getObject","title","closest","infoZeile","querySelector","oInfoZeile","setVisible","message","setText","rerender","isIE","navigator","appName","svg","svgArcs","svgLabels","oldArcs","clickedSegment","firstUpdate","xOrigin","yOrigin","tweenGenArc","tweenGenText","arcSequence","parentSelector","init","select","svgHeight","HTMLElement","offsetHeight","svgWidth","offsetWidth","r","min","backgroundWidth","backgroundHeight","width","innerRadius","outerRadius","tweenGen","Tweens","tweenGenSimple","tweenGenSimpleText","arcCalculator","generateHistoricalArcCalculator","animationduration","labelHideThreshold","easing","pieChartClass","color","strokewidth","strokewidthHover","padding4click","multipleselectable","field","createAttributeService","append","initTween","static","Tweens1","undefined","translateStr4Padding","tweenGenEcstasy","tweenGenLSD","d","a","svgGenerator","s1","startAngle","oldArc","endAngle","s2","interpolate","t","chartInstance","labelText","labelElement","childNodes","labelpositionBefore","Labelposition","getBBox","svgArcGen","centroid","coordinationBefore","x","y","labelpositionAfter","labelWidth","adjustLabelWidth","coordinationAfter","interpolateArray","translateStrBuilder","coordinate","tranlateStr","padding","xOldOrig","yOldOrig","apexAngle","xNewOrig","sin","yNewOrig","cos","tmp","translateStr","splitRadius","splitOuterRadius","splitInnerRadius","splitInterpolation","resizeInterpolation","unifyInterpolation","moveInterpolation","cls","attribute","initFunction","prototype","call","notAnimatedUpdate","arcs","selectAll","remove","totalValue","percentage","calculateNewArcsOnly","sel","getIdOfArc","exit","empty","path","style","strokeColor","hovered","strokeWidth","opacityValue","initial","each","hasChildNodes","removeChild","lastChild","text","enter","on","e","event","code","keyCode","which","target","__onclick","oEvent","click","pieupdateuionly","returnCode","translateStrLabel","labelposition","labelElem","getLabelElementtbyLabel","getBoundingClientRect","Object","keys","cnt","getNumberOfClickedSegments","dataObject","onDetailPageSelectionChangeCharts","removeFilterCondition","key","__data__","apply","addFilterCondition","transition","duration","ease","mouseover","mouseout","textsG","removeDeletedArcs","element","targetWidth","shadowElement","textElement","textLength","tmpText","substr","getArcsWithLabel","arcsWithLabel","arc","args","getArcElementtbyLabel","tmpArcs","createZeroArc","angle","insertAfter","insertIndex","newArc","beforeArc","splice","layout","pie","sort","getIndexById","add2arcSequence","addNewData2Sequence","getIndex","forEach","generateDefaultArcCalculator","DefaultArcCalculator","slice","b","newArcs","arcsGen","calculateArcs","insertMissingArcs","arcs1","arcs2","ic","arc1InsertIndex","arc2Index","arc2","arc1Index","arc1","determineInsertIndex","sequenceIndex","sequenceIndex2","pieChart","HistoricalArcCalculator","labelPaddingX","labelPaddingY","radiusPadding","labelHeight","outsetMin","outsetMax","outsetStep","startLabelWidth","d3centroid","svgBackground","debug","outset","max","placementSuccessful","iterations","optimizationDirection","c","calc","c1","c2","c1v","c2v","isNaN","centroidX","centroidY","isStartAngleOnRight","isEndAngleOnRight","leftBorder","rightBorder","perimeterRightBorder","perimeterLeftBorder","PI","upperLabelBorder","lowerLabelBorder","calcLeftBorder","abs","doesFitHeight","calcRightBorder","perimeterUpperRightBorder","calcPerimeterBorder","perimeterLowerRightBorder","perimeterUpperLeftBorder","perimeterLowerLeftBorder","oldLabelWidth","floor","labelShortened","xSpace","asymmetry","cNew","cOld","border","upper","lower","isLeftLabel","isLeftBorder","y1","y2","tan","sqrt","Sequence","maxIndex","objectMap","object","_pieChart","arc2SortIndex","found","arc1SortIndex"],"sources":["SearchFacetPieChart.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\n/* global $ */\nimport i18n from \"../../../../i18n\";\nimport * as thirdpartyD3 from \"sap/ui/thirdparty/d3\";\nimport Control, { $ControlSettings } from \"sap/ui/core/Control\";\nimport SearchModel from \"sap/esh/search/ui/SearchModel\";\nimport RenderManager from \"sap/ui/core/RenderManager\";\nimport Dialog from \"sap/m/Dialog\";\nimport { FacetTypeUI } from \"../../FacetTypeUI\";\nimport Facet from \"../../../../Facet\";\nimport Label from \"sap/m/Label\";\nimport Element from \"sap/ui/core/Element\";\n\nexport interface $PieChartSettings extends $ControlSettings {\n    // dimension-angle: \"$count\",\n    \"dimension-pie\": string;\n    backgroundWidth: number;\n    backgroundHeight: number;\n    width: number;\n    height: number;\n    innerRadius: number;\n    outerRadius: number;\n    tweenGen: () => void; // PieChart.Tweens.tweenGenSimple\n    tweenGenText: () => void; // PieChart.Tweens.tweenGenSimpleText,\n    arcCalculator: HistoricalArcCalculator | DefaultArcCalculator | HistoricalArcCalculator; // PieChart.generateHistoricalArcCalculator(), // PieChart.generateDefaultArcCalculator(), PieChart.generateHistoricalArcCalculator(),\n    animationduration: number;\n    labelHideThreshold: number;\n    easing: string; // \"linear\";\"poly(4)\";\"quad\";\"cubic\" (default);\"sin\";\"exp\";\"circle\";\"elastic(a, p)\";\"back(s)\";\"bounce\"\n    pieChartClass: string; // \"sap-piechart\"\n    pieChartParentClass: string; // \"sapUshellSearchFacetPieChart\"\n    color: string; // \"blue\"\n    strokewidth: number;\n    strokewidthHover: number;\n    padding4click: number;\n    multipleselectable: boolean; // if set to false(single selection mode) no hover effect will be provided when any segment already has been clicked\n    oSearchFacetDialog: Dialog;\n}\nexport interface PieChartItem {\n    filterCondition?: any;\n    dimension?: string;\n    label?: string;\n    selected?: boolean;\n    filterLabel?: string;\n    id?: string;\n    value?: any;\n    valueLabel?: string;\n    tooltip?: string;\n    filtered?: boolean;\n    removed?: boolean;\n    fill?: string; // i.e. \"#007CAA\";\n    stroke?: string;\n    maxLabelLength?: number;\n}\nexport type svgAttr = (property: string, value: any) => { attr: svgAttr; style: svgStyle };\nexport type svgStyle = (property: string, value: any) => void;\nexport type svgSelect = (selector: string) => { remove: () => void };\nexport type svgSelectAll = (selector: string) => { remove: () => void };\nexport type svgAppend = (selector: string) => { attr: svgAttr; remove: () => void };\n\nexport interface SvgBackground {\n    select: svgSelect;\n    selectAll: svgSelect;\n    append: svgAppend;\n}\n\nexport type PieChartItems = Array<PieChartItem>;\n\n/**\n * @namespace sap.esh.search.ui.controls\n */\nexport default class SearchFacetPieChart extends Control {\n    static readonly metadata = {\n        properties: {\n            oSearchFacetDialog: {\n                type: \"object\",\n            },\n        },\n        aggregations: {\n            items: {\n                type: \"sap.esh.search.ui.FacetItem\",\n                multiple: true, // default type is \"sap.ui.core.Control\", multiple is \"true\"\n            },\n        },\n    };\n    static d3: any; // sap.ui.thirdparty.d3\n\n    private PieChart: any;\n    private chartElements: PieChartItems;\n    private iMissingCnt = 0;\n\n    constructor(sId?: string, settings?: Partial<$PieChartSettings>) {\n        super(sId, settings);\n        SearchFacetPieChart.d3 = thirdpartyD3;\n    }\n\n    static isIE(): boolean {\n        // eslint-disable-next-line no-restricted-globals\n        if (navigator.appName === \"Microsoft Internet Explorer\") {\n            return true;\n        }\n        return false;\n    }\n\n    static renderer = {\n        apiVersion: 2,\n        render(oRm: RenderManager, oControl: SearchFacetPieChart): void {\n            // outer div\n            oRm.openStart(\"div\", oControl);\n            oRm.attr(\"role\", \"figure\");\n            oRm.openEnd();\n            // close SearchFacetPieChart div\n            oRm.close(\"div\");\n            oControl.PieChart = PieChart;\n        },\n    };\n\n    getFacetIndex(): number {\n        // navigate to parent with class sapUshellSearchFacetIconTabBar\n        let domElement = this.getDomRef();\n        let myIconTabBar;\n        while (domElement) {\n            if (domElement.classList.contains(\"sapUshellSearchFacetIconTabBar\")) {\n                myIconTabBar = domElement;\n                break;\n            }\n            domElement = domElement.parentElement;\n        }\n        if (!myIconTabBar) {\n            return -1;\n        }\n\n        const iconTabBars = document.querySelectorAll(\".sapUshellSearchFacetIconTabBar\");\n        for (let i = 0; i < iconTabBars.length; ++i) {\n            const iconTabBar = iconTabBars.item(i);\n            if (iconTabBar === myIconTabBar) {\n                return i;\n            }\n        }\n        return -1;\n    }\n\n    getFacetIndexByIdForLargePieChart(chartId: string): number {\n        let index = -1;\n        // get the tabStrip element by id, then its parent, then its parent\n        const chartElem = document.getElementById(chartId);\n        const tabStrip = chartElem?.parentElement?.parentElement;\n        if (!tabStrip) {\n            return -1;\n        }\n        const tabStripId = tabStrip.id; // e.g. \"__container6\"\n        // get all elements with class 'searchFacetLargeChartContainer'\n        const ar = Array.from(document.querySelectorAll(\".searchFacetLargeChartContainer\")) as HTMLElement[];\n        for (let i = 0; i < ar.length; i++) {\n            const currentTabId = ar[i].id;\n            if (currentTabId === tabStripId) {\n                index = i;\n                break;\n            }\n        }\n        return index;\n    }\n\n    getPieChartIndexByFacetIndex(facetIndex: number): number {\n        let selKey;\n        let index = -1;\n        let previousFacetsWithPieChart = 0;\n        const iconTabBars = document.querySelectorAll(\".sapUshellSearchFacetIconTabBar\");\n        for (let i = 0; i < facetIndex; i++) {\n            const iconTabBar = iconTabBars[i] as HTMLElement;\n            if (!iconTabBar) continue;\n            const mlibContents = iconTabBar.querySelectorAll(\".sapMLIBContent\");\n            if (mlibContents.length < 2) continue;\n            const firstChild = mlibContents[1].firstChild as HTMLElement | null;\n            if (!firstChild || !(\"id\" in firstChild)) continue;\n            selKey = (firstChild as HTMLElement).id;\n            if (selKey && selKey.match(/pieChart/) !== null) {\n                previousFacetsWithPieChart++;\n            }\n        }\n        index = previousFacetsWithPieChart;\n        return index;\n    }\n\n    getSumSelected(data): number {\n        let itemValue;\n        let integerValue = 0;\n        if (data) {\n            for (let i = 0; i < data.length; i++) {\n                if (data[i].facetType === FacetTypeUI.Attribute) {\n                    for (let j = 0; j < data[i].items.length; j++) {\n                        itemValue = data[i].items[j].value;\n                        if (itemValue && data[i].items[j].selected) {\n                            integerValue += itemValue;\n                        }\n                    }\n                }\n            }\n        }\n        return integerValue;\n    }\n\n    getDataForPieChart(data, model, facetIndex: number): Array<PieChartItems> {\n        const res: Array<PieChartItems> = [];\n        let group: PieChartItems = [];\n        let item: PieChartItem;\n        let itemValue = 0;\n        let currentFacetIndex = -1;\n        let itemValueText = \"\";\n        const searchResultTotal = model.oData.count;\n        let overallTotal;\n        let pieChartTotal = 0;\n        this.iMissingCnt = 0;\n        for (let i = 0; i < data.length; i++) {\n            if (data[i].facetType === FacetTypeUI.Attribute) {\n                currentFacetIndex++;\n                group = [];\n                pieChartTotal = 0;\n                for (let j = 0; j < data[i].items.length; j++) {\n                    item = {};\n                    itemValue = data[i].items[j].value;\n                    if (itemValue) {\n                        itemValueText = \"\" + itemValue;\n                        pieChartTotal += itemValue;\n                        item.filterCondition = data[i].items[j].filterCondition;\n                        item.dimension = data[i].items[j].facetTitle;\n                        item.label = data[i].items[j].label;\n                        item.selected = data[i].items[j].selected;\n                        item.filterLabel = data[i].items[j].label;\n                        item.id = data[i].items[j].label;\n                        item.value = itemValue;\n                        item.valueLabel = data[i].items[j].valueLabel;\n                        if (itemValueText) {\n                            item.tooltip = data[i].items[j].label + \": \" + itemValue;\n                        } else {\n                            item.tooltip = data[i].items[j].label;\n                        }\n                        item.filtered = false;\n                        item.removed = false;\n                        item.fill = \"#007CAA\"; // ToDo: Use color code\n                        item.maxLabelLength = 30;\n                        group.push(item);\n                    } else if (currentFacetIndex === facetIndex) {\n                        this.iMissingCnt++;\n                    }\n                }\n                // ############# add a new pie segment that just reflects the data NOT in the pie chart\n                if (typeof data[i].totalCount === \"number\") {\n                    overallTotal = data[i].totalCount;\n                } else {\n                    overallTotal = searchResultTotal;\n                }\n                const percCoveredInPie = Math.round((pieChartTotal / overallTotal) * 100);\n                let percMissing = 100 - percCoveredInPie;\n                if (percMissing > 0) {\n                    if (percMissing === 100) {\n                        percMissing = 99;\n                    }\n                    const sizeOfWedge = (18 * pieChartTotal) / 350; // 18 is 5% of 360°\n                    const label = `${percMissing}`;\n                    item = {};\n                    item.filterCondition = null;\n                    item.dimension = \"\";\n                    item.label = label;\n                    item.id = \"perc_missing\";\n                    item.value = sizeOfWedge;\n                    item.valueLabel = label;\n                    item.tooltip = i18n.getText(\"facetPieChartOverflowText\", [label]);\n                    item.filtered = false;\n                    item.removed = false;\n                    item.fill = \"transparent\";\n                    item.stroke = \"none\";\n                    item.maxLabelLength = 30;\n                    group.push(item);\n                    // #############\n                }\n\n                res.push(group);\n            }\n        }\n        return res;\n    }\n\n    getDataForPieChartLarge(\n        facetItems: any,\n        model: any,\n        facetTotalCount: number,\n        maxItemsToShow: number\n    ): PieChartItems {\n        const group: Array<PieChartItem> = [];\n        let itemValue = 0;\n        const searchResultTotal = model.oData.count;\n        let overallTotal;\n        let pieChartTotal = 0;\n        this.iMissingCnt = 0;\n        let item: PieChartItem;\n        for (let j = 0; j < facetItems.length; j++) {\n            if (j + 1 >= maxItemsToShow) {\n                break; // limit number of items to show\n            }\n            itemValue = facetItems[j].value;\n            if (itemValue) {\n                item = {};\n                pieChartTotal = pieChartTotal + itemValue;\n                item.filterCondition = facetItems[j].filterCondition;\n                item.dimension = facetItems[j].facetAttribute;\n                item.label = facetItems[j].label;\n                item.selected = facetItems[j].selected;\n                item.filterLabel = facetItems[j].label;\n                item.id = facetItems[j].label;\n                item.value = itemValue;\n                item.valueLabel = facetItems[j].valueLabel;\n                item.tooltip = facetItems[j].label + \"\\t: \" + itemValue;\n                item.filtered = false;\n                item.removed = false;\n                item.fill = \"#007CAA\"; // ToDo: Use color code\n                item.maxLabelLength = 30;\n                group.push(item);\n            }\n        }\n        // ############# add a new pie segment that just reflects the data NOT in the pie chart\n        if (facetItems.length > 0) {\n            if (typeof facetTotalCount === \"undefined\") {\n                overallTotal = searchResultTotal;\n            } else {\n                overallTotal = facetTotalCount;\n            }\n            const percCoveredInPie = Math.round((pieChartTotal / overallTotal) * 100);\n            let percMissing = 100 - percCoveredInPie;\n            if (percMissing > 0) {\n                if (percMissing === 100) {\n                    percMissing = 99;\n                }\n                const sizeOfWedge = (18 * pieChartTotal) / 350; // 18 is 5% of 360°\n                const label = `${percMissing}`;\n                item = {};\n                item.filterCondition = null;\n                item.dimension = facetItems[0].facetAttribute;\n                item.label = label;\n                item.selected = false;\n                item.filterLabel = label;\n                item.id = \"perc_missing\";\n                item.value = sizeOfWedge;\n                item.valueLabel = label;\n                item.tooltip = i18n.getText(\"facetPieChartOverflowText2\", [label, maxItemsToShow]);\n                item.filtered = false;\n                item.removed = false;\n                item.fill = \"transparent\";\n                item.stroke = \"none\";\n                item.maxLabelLength = 30;\n                group.push(item);\n                // #############\n            }\n        }\n        return group;\n    }\n\n    directUpdate(facetItems, piechartParent, model, facetTotalCount: number, options): void {\n        let model1;\n        const fewerData = [];\n        const maxItemsToShow = 20; // if needed, 19 items plus one segment for missing percentage of data\n        const application = null;\n        model1 = this.getModel();\n        if (!model1) {\n            model1 = this.getParent().getModel();\n        }\n        options.pieChartParentClass = \"sapUshellSearchFacetPieChartLarge\";\n        options.height = options.relevantContainerHeight;\n        $(piechartParent).parent().parent().parent().height();\n        this.chartElements = this.getDataForPieChartLarge(\n            facetItems,\n            model1,\n            facetTotalCount,\n            maxItemsToShow\n        );\n        const chart = new PieChart(piechartParent, options, application, model1);\n        for (let i = 0; i < maxItemsToShow; i++) {\n            if (this.chartElements[i]) {\n                fewerData.push(this.chartElements[i]);\n            }\n        }\n        chart.update(fewerData);\n    }\n\n    isFacetPanel(): boolean {\n        let domElement = this.getDomRef();\n        while (domElement) {\n            if (domElement.classList.contains(\"sapUshellSearchFacetTabBar\")) {\n                return true;\n            }\n            domElement = domElement.parentElement;\n        }\n        return false;\n    }\n    onAfterRendering(): void {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const that = this;\n        let data, chartElements, chart, piechartParent, facetIndex;\n        const application = null;\n        const settings: Partial<$PieChartSettings> = {};\n\n        const model = this.getModel();\n        if (model) {\n            piechartParent = document.getElementById(this[\"sId\"]);\n\n            // ensure that we are in the 'small pie chart'\n            if (this.isFacetPanel()) {\n                settings.pieChartParentClass = \"sapUshellSearchFacetPieChart\";\n                facetIndex = this.getFacetIndex();\n                if (piechartParent) {\n                    piechartParent.className = settings.pieChartParentClass;\n                }\n                data = this.getDataForPieChart(model.getProperty(\"/facets\"), model, facetIndex);\n                chartElements = data[facetIndex];\n                const aAriaDesc = chartElements.map((chartElement) => {\n                    return chartElement.tooltip;\n                });\n                this.getDomRef().setAttribute(\"aria-label\", aAriaDesc.join(\"; \"));\n                const selectedFacetItem = this.getBindingContext().getObject() as Facet;\n                this.getDomRef().setAttribute(\n                    \"data-test-id-facet-dimension-value\",\n                    `${selectedFacetItem.title}-${selectedFacetItem.dimension}`\n                );\n\n                chart = new this.PieChart(piechartParent, settings, application, model);\n                chart.update(chartElements);\n                // update infozeile\n                const iconTabBar = this.getDomRef().closest(\".sapUshellSearchFacetIconTabBar\");\n                let infoZeile: HTMLElement | null = null;\n                if (iconTabBar) {\n                    infoZeile = iconTabBar.querySelector(\".sapUshellSearchFacetInfoZeile\");\n                }\n                if (infoZeile) {\n                    const oInfoZeile = Element.getElementById(infoZeile.id) as Label;\n                    if (that.iMissingCnt > 0) {\n                        oInfoZeile.setVisible(true);\n                        const message = i18n.getText(\"infoZeileNumberMoreSelected\", [that.iMissingCnt]);\n                        oInfoZeile.setText(message);\n                        oInfoZeile.rerender();\n                    } else {\n                        oInfoZeile.setVisible(false);\n                    }\n                }\n            } else if (\n                piechartParent &&\n                (piechartParent as HTMLElement).className === \"largeChart2piechart\"\n            ) {\n                // pie chart\n                (piechartParent as HTMLElement).setAttribute(\"tabindex\", \"0\");\n            }\n        }\n    }\n}\n\n/*** PIE CHART ***/\nclass PieChart {\n    application;\n    parent: string;\n    model: SearchModel;\n    chartElements: Array<any>;\n    options: any;\n    svg: any;\n    svgArcs: {\n        selectAll: (path: string) => {\n            data: any;\n            each: (...args: Array<any>) => void;\n            remove: () => void;\n        };\n    };\n    svgLabels: {\n        selectAll: (g: any) => {\n            data: any;\n            each: (...args: Array<any>) => void;\n            remove: () => void;\n        };\n    };\n    oldArcs: Array<any>;\n    clickedSegment: any;\n    firstUpdate: boolean;\n    xOrigin: number;\n    yOrigin: number;\n    tweenGenArc: any;\n    tweenGenText: any;\n    arcSequence: Sequence;\n\n    constructor(parentSelector, settings: $PieChartSettings, application: any, model: SearchModel) {\n        this.init(parentSelector, settings, application, model);\n    }\n\n    init(parentSelector, settings: $PieChartSettings, application: any, model: SearchModel) {\n        this.parent = parentSelector;\n        this.application = application;\n        this.model = model;\n        this.chartElements = [];\n        const parent = SearchFacetPieChart.d3.select(parentSelector);\n        let svgHeight = parentSelector instanceof HTMLElement ? parentSelector.offsetHeight : 0;\n        const svgWidth = parentSelector instanceof HTMLElement ? parentSelector.offsetWidth : 0;\n        if (settings.height > svgHeight) {\n            svgHeight = settings.height;\n        }\n        const r = Math.min(svgWidth, svgHeight) / 2;\n        // initialize this.options\n        this.options = {\n            // dimension-angle: \"$count\",\n            \"dimension-pie\": \"YEAR\",\n            backgroundWidth: svgWidth,\n            backgroundHeight: svgHeight,\n            width: svgWidth,\n            height: svgHeight,\n            innerRadius: 0,\n            outerRadius: r * 0.8,\n            tweenGen: PieChart.Tweens.tweenGenSimple,\n            tweenGenText: PieChart.Tweens.tweenGenSimpleText,\n            arcCalculator: PieChart.generateHistoricalArcCalculator(this), // PieChart.generateDefaultArcCalculator(), PieChart.generateHistoricalArcCalculator(),\n            animationduration: 1500,\n            labelHideThreshold: 0.05,\n            easing: \"linear\", // \"linear\";\"poly(4)\";\"quad\";\"cubic\" (default);\"sin\";\"exp\";\"circle\";\"elastic(a, p)\";\"back(s)\";\"bounce\"\n            pieChartClass: \"sap-piechart\",\n            pieChartParentClass: \"sapUshellSearchFacetPieChart\",\n            color: \"blue\",\n            strokewidth: 1,\n            strokewidthHover: 3,\n            padding4click: 7,\n            multipleselectable: true, // if set to false(single selection mode) no hover effect will be provided when any segment already has been clicked\n            oSearchFacetDialog: null,\n        };\n        // move passed in options to this.options\n        if (settings) {\n            for (const field in settings) {\n                this.options[field] = settings[field];\n            }\n        }\n        this.createAttributeService(PieChart, \"innerRadius\", function () {\n            this.init();\n        });\n        this.createAttributeService(PieChart, \"outerRadius\", function () {\n            this.init();\n        });\n        this.createAttributeService(PieChart, \"tweenGen\", function () {\n            this.init();\n        });\n        this.createAttributeService(PieChart, \"tweenGenText\", function () {\n            this.init();\n        });\n        this.createAttributeService(PieChart, \"width\", function () {\n            this.init();\n        });\n        this.createAttributeService(PieChart, \"height\", function () {\n            this.init();\n        });\n        this.createAttributeService(PieChart, \"animationduration\");\n        this.createAttributeService(PieChart, \"labelHideThreshold\");\n        this.createAttributeService(PieChart, \"arcCalculator\");\n        // create global svg elements: parent.append\n        const xOrigin = Math.round(this.options.width / 2);\n        const yOrigin = Math.round(this.options.height / 2);\n        this.svg = parent\n            .append(\"svg:svg\")\n            .attr(\"width\", svgWidth)\n            .attr(\"height\", svgHeight)\n            .attr(\"id\", parentSelector.id + \"_svg\")\n            .append(\"svg:g\")\n            .attr(\"transform\", \"translate(\" + xOrigin + \",\" + yOrigin + \")\");\n        this.svgArcs = this.svg.append(\"svg:g\");\n        this.svgLabels = this.svg.append(\"svg:g\");\n        this.svg.attr(\"class\", this.options.pieChartClass);\n        // initialize svg size and tween functions\n        this.initTween();\n        this.oldArcs = [];\n        // stack of clicked segments\n        this.clickedSegment = {};\n        // mark init state as firstUpdate\n        this.firstUpdate = true;\n    }\n\n    getParent() {\n        return this.parent;\n    }\n\n    static Tweens = (function () {\n        const Tweens1 = {\n            tweenGenSimple: undefined,\n            tweenGenSimpleText: undefined,\n            translateStr4Padding: undefined,\n            tweenGenEcstasy: undefined,\n            tweenGenLSD: undefined,\n        };\n        // animation function generator: Simple\n        // ======================================================================\n        Tweens1.tweenGenSimple = function (d, i, a, innerRadius, outerRadius, svgGenerator) {\n            const s1 = {\n                startAngle: d.oldArc.startAngle,\n                endAngle: d.oldArc.endAngle,\n                innerRadius: innerRadius,\n                outerRadius: outerRadius,\n            };\n            const s2 = {\n                startAngle: d.startAngle,\n                endAngle: d.endAngle,\n                innerRadius: innerRadius,\n                outerRadius: outerRadius,\n            };\n            const j = SearchFacetPieChart.d3.interpolate(s1, s2);\n            return function (t) {\n                return svgGenerator(j(t));\n            };\n        };\n        // animation function generator: Simple Text\n        // ======================================================================\n        Tweens1.tweenGenSimpleText = function (d, i, a, innerRadius, outerRadius, chartInstance, filtered) {\n            let labelText = \" \";\n            if (\n                d.labelElement.childNodes[1] &&\n                d.labelElement.childNodes[1].childNodes[0] &&\n                d.labelElement.childNodes[1].childNodes[0].data\n            ) {\n                labelText = d.labelElement.childNodes[1].childNodes[0].data;\n            }\n            const labelpositionBefore = new Labelposition(\n                chartInstance.options.width,\n                chartInstance.options.height,\n                d.oldArc.startAngle,\n                d.oldArc.endAngle,\n                chartInstance.options.outerRadius,\n                d.labelElement.childNodes[1].getBBox().width,\n                d.labelElement.childNodes[1].getBBox().height,\n                chartInstance.svgArcGen(d).centroid(d),\n                labelText,\n                chartInstance.svg\n            );\n            labelpositionBefore.update();\n            const coordinationBefore = [labelpositionBefore.x, labelpositionBefore.y];\n            const labelpositionAfter = new Labelposition(\n                chartInstance.options.width,\n                chartInstance.options.height,\n                d.startAngle,\n                d.endAngle,\n                chartInstance.options.outerRadius,\n                d.labelElement.childNodes[1].getBBox().width,\n                d.labelElement.childNodes[1].getBBox().height,\n                chartInstance.svgArcGen(d).centroid(d),\n                labelText,\n                chartInstance.svg\n            );\n            labelpositionAfter.update();\n            // in case that label shall be cut\n            if (labelpositionAfter.labelWidth < d.labelElement.childNodes[1].getBBox().width) {\n                chartInstance.adjustLabelWidth(d.labelElement, labelpositionAfter.labelWidth);\n            }\n            const coordinationAfter = [labelpositionAfter.x, labelpositionAfter.y];\n            const j = SearchFacetPieChart.d3.interpolateArray(coordinationBefore, coordinationAfter);\n            const translateStrBuilder = function (coordinate) {\n                let tranlateStr;\n                if (filtered) {\n                    tranlateStr = Tweens1.translateStr4Padding(\n                        d.startAngle,\n                        d.endAngle,\n                        chartInstance.options.padding4click,\n                        coordinate[0],\n                        coordinate[1]\n                    );\n                } else {\n                    tranlateStr = \"translate(\" + coordinate + \")\";\n                }\n                return tranlateStr;\n            };\n            return function (t) {\n                return translateStrBuilder(j(t));\n            };\n        };\n        Tweens1.translateStr4Padding = function (startAngle, endAngle, padding, xOldOrig, yOldOrig) {\n            // cal origin of transformed coordinate system\n            // in case that startangle = 0\n            const apexAngle = endAngle - startAngle;\n            let xNewOrig = padding * Math.sin(apexAngle / 2);\n            let yNewOrig = -(padding * Math.cos(apexAngle / 2));\n            // rotate it by startAngle\n            const tmp = xNewOrig * Math.cos(startAngle) - yNewOrig * Math.sin(startAngle);\n            yNewOrig = xNewOrig * Math.sin(startAngle) + yNewOrig * Math.cos(startAngle);\n            xNewOrig = tmp;\n            const translateStr = \"translate(\" + (xOldOrig + xNewOrig) + \", \" + (yOldOrig + yNewOrig) + \")\";\n            return translateStr;\n        };\n        // animation function generator: Ecstasy\n        // ======================================================================\n        Tweens1.tweenGenEcstasy = function (d, i, a, innerRadius, outerRadius, svgGenerator) {\n            // split\n            const splitRadius = Math.round((innerRadius + outerRadius) / 2);\n            let splitOuterRadius;\n            let splitInnerRadius;\n            if (i % 2) {\n                splitOuterRadius = outerRadius;\n                splitInnerRadius = splitRadius;\n            } else {\n                splitOuterRadius = splitRadius;\n                splitInnerRadius = innerRadius;\n            }\n            let s1 = {\n                startAngle: d.oldArc.startAngle,\n                endAngle: d.oldArc.endAngle,\n                innerRadius: innerRadius,\n                outerRadius: outerRadius,\n            };\n            let s2 = {\n                startAngle: d.oldArc.startAngle,\n                endAngle: d.oldArc.endAngle,\n                innerRadius: splitInnerRadius,\n                outerRadius: splitOuterRadius,\n            };\n            const splitInterpolation = SearchFacetPieChart.d3.interpolate(s1, s2);\n            // move + resize\n            s1 = {\n                startAngle: d.oldArc.startAngle,\n                endAngle: d.oldArc.endAngle,\n                innerRadius: splitInnerRadius,\n                outerRadius: splitOuterRadius,\n            };\n            s2 = {\n                startAngle: d.startAngle,\n                endAngle: d.endAngle,\n                innerRadius: splitInnerRadius,\n                outerRadius: splitOuterRadius,\n            };\n            const resizeInterpolation = SearchFacetPieChart.d3.interpolate(s1, s2);\n            // unify\n            s1 = {\n                startAngle: d.startAngle,\n                endAngle: d.endAngle,\n                innerRadius: splitInnerRadius,\n                outerRadius: splitOuterRadius,\n            };\n            s2 = {\n                startAngle: d.startAngle,\n                endAngle: d.endAngle,\n                innerRadius: innerRadius,\n                outerRadius: outerRadius,\n            };\n            const unifyInterpolation = SearchFacetPieChart.d3.interpolate(s1, s2);\n            // assemble total animation function\n            return function (t) {\n                if (t <= 0.25) {\n                    return svgGenerator(splitInterpolation(t * 4));\n                }\n                if (t <= 0.75) {\n                    return svgGenerator(resizeInterpolation((t - 0.25) * 2));\n                }\n                return svgGenerator(unifyInterpolation((t - 0.75) * 4));\n            };\n        };\n        // animation function generator: LSD\n        // ======================================================================\n        Tweens1.tweenGenLSD = function (d, i, a, innerRadius, outerRadius, svgGenerator) {\n            // split\n            const splitRadius = Math.round((innerRadius + outerRadius) / 2);\n            let splitOuterRadius;\n            let splitInnerRadius;\n            if (i % 2) {\n                splitOuterRadius = outerRadius;\n                splitInnerRadius = splitRadius;\n            } else {\n                splitOuterRadius = splitRadius;\n                splitInnerRadius = innerRadius;\n            }\n            let s1 = {\n                startAngle: d.oldArc.startAngle,\n                endAngle: d.oldArc.endAngle,\n                innerRadius: innerRadius,\n                outerRadius: outerRadius,\n            };\n            let s2 = {\n                startAngle: d.oldArc.startAngle,\n                endAngle: d.oldArc.endAngle,\n                innerRadius: splitInnerRadius,\n                outerRadius: splitOuterRadius,\n            };\n            const splitInterpolation = SearchFacetPieChart.d3.interpolate(s1, s2);\n            // move\n            s1 = {\n                startAngle: d.oldArc.startAngle,\n                endAngle: d.oldArc.endAngle,\n                innerRadius: splitInnerRadius,\n                outerRadius: splitOuterRadius,\n            };\n            s2 = {\n                startAngle: d.startAngle,\n                endAngle: d.startAngle + (d.oldArc.endAngle - d.oldArc.startAngle),\n                innerRadius: splitInnerRadius,\n                outerRadius: splitOuterRadius,\n            };\n            const moveInterpolation = SearchFacetPieChart.d3.interpolate(s1, s2);\n            // resize\n            s1 = {\n                startAngle: d.startAngle,\n                endAngle: d.startAngle + (d.oldArc.endAngle - d.oldArc.startAngle),\n                innerRadius: splitInnerRadius,\n                outerRadius: splitOuterRadius,\n            };\n            s2 = {\n                startAngle: d.startAngle,\n                endAngle: d.endAngle,\n                innerRadius: splitInnerRadius,\n                outerRadius: splitOuterRadius,\n            };\n            const resizeInterpolation = SearchFacetPieChart.d3.interpolate(s1, s2);\n            // unify\n            s1 = {\n                startAngle: d.startAngle,\n                endAngle: d.endAngle,\n                innerRadius: splitInnerRadius,\n                outerRadius: splitOuterRadius,\n            };\n            s2 = {\n                startAngle: d.startAngle,\n                endAngle: d.endAngle,\n                innerRadius: innerRadius,\n                outerRadius: outerRadius,\n            };\n            const unifyInterpolation = SearchFacetPieChart.d3.interpolate(s1, s2);\n            // assemble total animation function\n            return function (t) {\n                if (t <= 0.25) {\n                    return svgGenerator(splitInterpolation(t * 4));\n                }\n                if (t <= 0.5) {\n                    return svgGenerator(moveInterpolation((t - 0.25) * 4));\n                }\n                if (t <= 0.75) {\n                    return svgGenerator(resizeInterpolation((t - 0.5) * 4));\n                }\n                return svgGenerator(unifyInterpolation((t - 0.75) * 4));\n            };\n        };\n        return Tweens1;\n    })();\n    // create attribute get and set services\n    // ======================================================================\n    createAttributeService(cls, attribute, initFunction?: () => void) {\n        cls.prototype[attribute] = function (value) {\n            if (value === null) {\n                return this.options[attribute];\n            }\n            this.options[attribute] = value;\n            if (initFunction) {\n                initFunction.call(this);\n            }\n            return this;\n        };\n    }\n    // initialization of tween function\n    // ======================================================================\n    initTween() {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const that = this;\n        that.xOrigin = Math.round(that.options.width / 2);\n        that.yOrigin = Math.round(that.options.height / 2);\n        // adjust size\n        that.svg.attr(\"width\", this.options.width).attr(\"height\", this.options.height);\n        // tween function generator: generates tween function for svg:path\n        this.tweenGenArc = function (d, i, a) {\n            return that.options.tweenGen(\n                d,\n                i,\n                a,\n                that.options.innerRadius,\n                that.options.outerRadius,\n                that.svgArcGen(d)\n            );\n        };\n        // tween function generator: generates tween function for svg:text\n        this.tweenGenText = function (d, i, a, filtered) {\n            return that.options.tweenGenText(\n                d,\n                i,\n                a,\n                that.options.innerRadius,\n                that.options.outerRadius,\n                that,\n                filtered\n            );\n        };\n    }\n    // update (draw) pie chart\n    // ======================================================================\n    update(data) {\n        this.notAnimatedUpdate(data);\n    }\n    notAnimatedUpdate(data) {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const that = this;\n        let arcs = [];\n        if (!data) {\n            return;\n        }\n        this.chartElements = data;\n        // remove old elements\n        that.svgArcs.selectAll(\"path\").remove();\n        that.svgLabels.selectAll(\"g\").remove();\n        // ------------------------------------------------------------------\n        // 0. calculate percentage\n        // ------------------------------------------------------------------\n        let totalValue = 0;\n        for (let i = 0; i < data.length; ++i) {\n            totalValue += data[i].value;\n        }\n        for (let j = 0; j < data.length; ++j) {\n            data[j].percentage = data[j].value / totalValue;\n        }\n        // ------------------------------------------------------------------\n        // 1. arc calculation\n        // ------------------------------------------------------------------\n        arcs = this.options.arcCalculator.calculateNewArcsOnly(data);\n        // ------------------------------------------------------------------\n        // 2. update arcs\n        // ------------------------------------------------------------------\n        // data binding\n        let sel = this.svgArcs.selectAll(\"path\").data(arcs, PieChart.getIdOfArc);\n        // remove old arcs\n        if (!sel.exit().empty()) {\n            sel.exit().remove();\n        }\n        // change existing arcs + change size to zero for arcs to be removed and then remove them\n        if (!sel.empty()) {\n            sel.attr(\"d\", function (d) {\n                const path = that.svgArcGen(d);\n                return path(d);\n            })\n                .attr(\"transform\", function (d) {\n                    let translateStr;\n                    if (d.data.selected) {\n                        translateStr = PieChart.translateStr4Padding(\n                            d.startAngle,\n                            d.endAngle,\n                            that.options.padding4click,\n                            0,\n                            0\n                        );\n                    } else {\n                        translateStr = \"translate(0,0)\";\n                    }\n                    return translateStr;\n                })\n                .style(\"stroke\", function (d) {\n                    let strokeColor;\n                    if (d.data.stroke === \"none\") {\n                        strokeColor = d.data.stroke;\n                    } else if (d.data.selected || d.data.hovered) {\n                        strokeColor = \"#dadada\";\n                    } else {\n                        strokeColor = \"white\";\n                    }\n                    return strokeColor;\n                })\n                .style(\"stroke-width\", function (d) {\n                    let strokeWidth;\n                    if (d.data.selected || d.data.hovered) {\n                        strokeWidth = that.options.strokewidthHover;\n                    } else {\n                        strokeWidth = that.options.strokewidth;\n                    }\n                    return strokeWidth;\n                })\n                .style(\"opacity\", function (d) {\n                    let opacityValue;\n                    if (d.data.selected || d.data.hovered) {\n                        opacityValue = \"1\";\n                    } else if (d.data.initial) {\n                        opacityValue = \"0.75\";\n                    } else {\n                        opacityValue = \"0.5\";\n                    }\n                    return opacityValue;\n                })\n                .each(function (d) {\n                    while (this.hasChildNodes()) {\n                        this.removeChild(this.lastChild);\n                    }\n                    SearchFacetPieChart.d3\n                        .select(this)\n                        .append(\"svg:title\")\n                        .text(\"\" + d.data.tooltip);\n                });\n        }\n        // create new arcs\n        sel.enter()\n            .append(\"svg:path\")\n            .attr(\"data-label\", (d) => d.data.label)\n            .attr(\"transform\", function (d) {\n                let translateStr;\n                if (d.data.selected) {\n                    // in case that any clicked segments already existing (_onLarge,_onSmall, switch between bar and pie)\n                    that.clickedSegment[d.data.id] = this;\n                    translateStr = PieChart.translateStr4Padding(\n                        d.startAngle,\n                        d.endAngle,\n                        that.options.padding4click,\n                        0,\n                        0\n                    );\n                }\n                return translateStr;\n            })\n            .attr(\"shape-rendering\", \"geometricPrecision\")\n            .attr(\"tabindex\", \"0\")\n            .style(\"stroke\", function (d) {\n                let strokeColor;\n                if (d.data.stroke === \"none\") {\n                    strokeColor = d.data.stroke;\n                } else if (d.data.selected || d.data.hovered) {\n                    strokeColor = \"#dadada\";\n                } else {\n                    strokeColor = \"white\";\n                }\n                return strokeColor;\n            })\n            .style(\"stroke-width\", function (d) {\n                let strokeWidth;\n                if (d.data.selected || d.data.hovered) {\n                    strokeWidth = that.options.strokewidthHover;\n                } else {\n                    strokeWidth = that.options.strokewidth;\n                }\n                return strokeWidth;\n            })\n            .style(\"opacity\", function (d) {\n                let opacityValue;\n                if (d.data.selected || d.data.hovered) {\n                    opacityValue = \"1\";\n                } else if (d.data.initial) {\n                    opacityValue = \"0.75\";\n                } else {\n                    opacityValue = \"0.5\";\n                }\n                return opacityValue;\n            })\n            .attr(\"fill\", function (d) {\n                return d.data.fill;\n            })\n            .on(\"keydown\", function () {\n                const e = SearchFacetPieChart.d3.event;\n                const code = e.keyCode || e.which;\n                if (code == 32) {\n                    e.target.__onclick();\n                }\n            })\n            .on(\"click\", function (d, i) {\n                let oEvent;\n                if (d.data.click && d.data.pieupdateuionly === false) {\n                    const returnCode = d.data.click(d, i);\n                    if (!that.options.multipleselectable && !returnCode) {\n                        return;\n                    }\n                }\n                let translateStr, translateStrLabel;\n                let labelposition;\n                const labelElem = that.getLabelElementtbyLabel(d.data.label);\n                if (labelElem) {\n                    let labelText = \" \";\n                    if (\n                        labelElem.childNodes[1] &&\n                        labelElem.childNodes[1].childNodes[0] &&\n                        labelElem.childNodes[1].childNodes[0].data\n                    ) {\n                        labelText = labelElem.childNodes[1].childNodes[0].data;\n                    }\n                    labelposition = new Labelposition(\n                        that.options.width,\n                        that.options.height,\n                        d.startAngle,\n                        d.endAngle,\n                        that.options.outerRadius,\n                        labelElem.childNodes[1].getBoundingClientRect().width,\n                        labelElem.childNodes[1].getBoundingClientRect().height,\n                        that.svgArcGen(d).centroid(d),\n                        labelText,\n                        that.svg\n                    );\n                    labelposition.update();\n                    // in case that label shall be cut\n                    if (labelposition.labelWidth < labelElem.childNodes[1].getBoundingClientRect().width) {\n                        that.adjustLabelWidth(labelElem, labelposition.labelWidth);\n                    }\n                }\n                if (d.data.selected) {\n                    // already clicked,unclick\n                    if (!that.options.multipleselectable && Object.keys(that.clickedSegment).length > 0) {\n                        // delete existing segment from stack\n                        delete that.clickedSegment[d.data.id];\n                    }\n                    // back to old origin\n                    translateStr = \"translate(0,0)\";\n                    if (labelElem) {\n                        translateStrLabel = \"translate(\" + labelposition.x + \",\" + labelposition.y + \")\";\n                    }\n                    // ################################################### remove filter\n                    //  avr - remove filter\n                    // ###################################################\n                    d.data.selected = false; // avr hack for large pie chart\n                    if (that.options.oSearchFacetDialog) {\n                        oEvent = {}; // build object to pass to external fn\n                        oEvent.cnt = that.getNumberOfClickedSegments();\n                        oEvent.dataObject = d.data;\n                        that.options.oSearchFacetDialog.onDetailPageSelectionChangeCharts(oEvent);\n                    } else {\n                        that.model.removeFilterCondition(d.data.filterCondition, true);\n                    }\n                } else {\n                    // click (non animated)\n                    if (!that.options.multipleselectable) {\n                        // single selection mode, check whether already any segment was clicked\n                        if (Object.keys(that.clickedSegment).length > 0) {\n                            // not blank\n                            for (const key in that.clickedSegment) {\n                                // existing segment goes back to origin\n                                // simulate click event on it\n                                // log.debug(\"clicking new segments : \" + key + \"value: \" + that.clickedSegment[key]);\n                                const clickedSegment = that.clickedSegment[key];\n                                if (typeof clickedSegment.__onclick === \"function\") {\n                                    clickedSegment.__data__.data.pieupdateuionly = true;\n                                    clickedSegment.__onclick.apply(clickedSegment);\n                                }\n                                // delete existing segment from stack\n                                delete that.clickedSegment[key];\n                            }\n                        }\n                        if (Object.keys(that.clickedSegment).length < 1) {\n                            that.clickedSegment[d.data.id] = this;\n                        }\n                    }\n\n                    translateStr = PieChart.translateStr4Padding(\n                        d.startAngle,\n                        d.endAngle,\n                        that.options.padding4click,\n                        0,\n                        0\n                    );\n                    if (labelElem) {\n                        translateStrLabel = PieChart.translateStr4Padding(\n                            d.startAngle,\n                            d.endAngle,\n                            that.options.padding4click,\n                            labelposition.x,\n                            labelposition.y\n                        );\n                    }\n                    // ################################################### add filter\n                    //   avr - add new filter\n                    // ###################################################\n                    d.data.selected = true; // avr hack for large pie chart\n                    if (d.data.filterCondition) {\n                        if (that.options.oSearchFacetDialog) {\n                            oEvent = {}; // build object to pass to external fn\n                            oEvent.cnt = that.getNumberOfClickedSegments();\n                            oEvent.dataObject = d.data;\n                            that.options.oSearchFacetDialog.onDetailPageSelectionChangeCharts(oEvent);\n                        } else {\n                            that.model.addFilterCondition(d.data.filterCondition, true);\n                        }\n                    }\n                }\n                SearchFacetPieChart.d3\n                    .select(this)\n                    .transition()\n                    .duration(1000)\n                    .ease(SearchFacetPieChart.d3.ease(\"elastic\"))\n                    .attr(\"transform\", translateStr)\n                    .style(\"stroke\", (d) => {\n                        let strokeColor;\n                        if (d.data.stroke === \"none\") {\n                            strokeColor = d.data.stroke;\n                        } else if (d.data.selected) {\n                            strokeColor = \"#dadada\";\n                        } else {\n                            strokeColor = \"white\";\n                        }\n                        return strokeColor;\n                    })\n                    .style(\"stroke-width\", (d) => {\n                        let strokeWidth;\n                        if (d.data.selected) {\n                            strokeWidth = that.options.strokewidthHover;\n                        } else {\n                            strokeWidth = that.options.strokewidth;\n                        }\n                        return strokeWidth;\n                    })\n                    .style(\"opacity\", (d) => {\n                        let opacityValue;\n                        if (d.data.selected || d.data.hovered) {\n                            opacityValue = \"1\";\n                        } else if (d.data.initial) {\n                            opacityValue = \"0.75\";\n                        } else {\n                            opacityValue = \"0.5\";\n                        }\n                        return opacityValue;\n                    });\n                // transform corresponding label\n                const labelElement = that.getLabelElementtbyLabel(d.data.label);\n                if (labelElement) {\n                    SearchFacetPieChart.d3\n                        .select(labelElement)\n                        .transition()\n                        .duration(1000)\n                        .ease(SearchFacetPieChart.d3.ease(\"elastic\"))\n                        .attr(\"transform\", translateStrLabel);\n                }\n            })\n            .on(\"mouseover\", function (d, i) {\n                // no hover event for single selection mode when any segment already has been clicked\n                if (!that.options.multipleselectable && Object.keys(that.clickedSegment).length > 0) {\n                    return;\n                }\n                // no hover event for a clicked segment\n                if (d.data.selected || d.data.hovered) {\n                    return;\n                }\n                if (d.data.mouseover) {\n                    const returnCode = d.data.mouseover(d, i);\n                    if (!that.options.multipleselectable && !returnCode) {\n                        return;\n                    }\n                }\n            })\n            .on(\"mouseout\", function (d, i) {\n                if (d.data.selected) {\n                    SearchFacetPieChart.d3.select(this).style(\"opacity\", 1);\n                }\n                // no hover event for single selection mode when any segment already has been clicked\n                if (!that.options.multipleselectable && Object.keys(that.clickedSegment).length > 0) {\n                    return;\n                }\n                // no hover event for a clicked segment\n                if (d.data.selected) {\n                    return;\n                }\n                if (d.data.mouseout) {\n                    const returnCode = d.data.mouseout(d, i);\n                    if (!that.options.multipleselectable && !returnCode) {\n                        return;\n                    }\n                }\n            })\n            .attr(\"d\", (d) => {\n                const path = that.svgArcGen(d);\n                return path(d);\n            })\n            .append(\"svg:title\")\n            .text((d) => {\n                return \"\" + d.data.tooltip;\n            });\n        // ------------------------------------------------------------------\n        // 3. update labels of arcs\n        // ------------------------------------------------------------------\n        // data binding\n        sel = that.svgLabels.selectAll(\"g\").data(arcs, PieChart.getIdOfArc);\n        // remove\n        if (!sel.exit().empty()) {\n            sel.exit().remove();\n        }\n        // change existing labels + remove labels\n        if (!sel.empty()) {\n            sel.style(\"opacity\", function (d) {\n                if (d.removed || d.data.percentage < that.options.labelHideThreshold) {\n                    return 0;\n                }\n                return 1;\n            }).attr(\"transform\", function (d) {\n                let translateStr;\n                let labelposition;\n                if (this.childNodes[1] && this.childNodes[1].childNodes[0]) {\n                    labelposition = new Labelposition(\n                        that.options.width,\n                        that.options.height,\n                        d.startAngle,\n                        d.endAngle,\n                        that.options.outerRadius,\n                        this.getBoundingClientRect().width,\n                        this.getBoundingClientRect().height,\n                        that.svgArcGen(d).centroid(d),\n                        d.data.label,\n                        that.svg\n                    );\n                    // log.debug(\"non animation change/remove existing labels, text exists: \", this.childNodes[1].childNodes[0].data);\n                } else {\n                    labelposition = new Labelposition(\n                        that.options.width,\n                        that.options.height,\n                        d.startAngle,\n                        d.endAngle,\n                        that.options.outerRadius,\n                        this.getBoundingClientRect().width,\n                        this.getBoundingClientRect().height,\n                        that.svgArcGen(d).centroid(d),\n                        \" \",\n                        that.svg\n                    );\n                    // log.debug(\"non animation change/remove existing labels, no existing text \");\n                }\n                labelposition.update();\n                // in case that label shall be cut\n                if (labelposition.labelWidth < this.childNodes[1].getBoundingClientRect().width) {\n                    that.adjustLabelWidth(this, labelposition.labelWidth);\n                }\n                // translate all texts that.options.padding4arcs in outer direction\n                if (d.data.selected) {\n                    translateStr = PieChart.translateStr4Padding(\n                        d.startAngle,\n                        d.endAngle,\n                        that.options.padding4click,\n                        labelposition.x,\n                        labelposition.y\n                    );\n                } else {\n                    translateStr = \"translate(\" + labelposition.x + \",\" + labelposition.y + \")\";\n                }\n                return translateStr;\n            });\n        }\n        if (!sel.enter().empty()) {\n            // create new labels\n            const textsG = sel.enter().append(\"svg:g\").style(\"opacity\", 0);\n            textsG\n                .append(\"svg:text\")\n                .attr(\"class\", \"labelshadow\")\n                .attr(\"text-anchor\", \"middle\")\n                .text(function (d) {\n                    return \"\" + d.data.label;\n                })\n                .style(\"pointer-events\", \"none\");\n            textsG\n                .append(\"svg:text\")\n                .attr(\"class\", \"label\")\n                .attr(\"text-anchor\", \"middle\")\n                .text(function (d) {\n                    return \"\" + d.data.label;\n                })\n                .style(\"pointer-events\", \"none\");\n            textsG\n                .style(\"opacity\", function (d) {\n                    if (d.removed || d.data.percentage < that.options.labelHideThreshold) {\n                        return 0;\n                    }\n                    return 1;\n                })\n                .attr(\"transform\", function (d) {\n                    let translateStr;\n                    // log.debug(\"non animation new labels, text exists: \", this.childNodes[1].childNodes[0].data);\n                    const labelposition = new Labelposition(\n                        that.options.width,\n                        that.options.height,\n                        d.startAngle,\n                        d.endAngle,\n                        that.options.outerRadius,\n                        this.getBoundingClientRect().width,\n                        this.getBoundingClientRect().height,\n                        that.svgArcGen(d).centroid(d),\n                        d.data.label,\n                        that.svg\n                    );\n                    labelposition.update();\n                    // in case that label shall be cut\n                    if (labelposition.labelWidth < this.childNodes[1].getBoundingClientRect().width) {\n                        that.adjustLabelWidth(this, labelposition.labelWidth);\n                    }\n                    // translate all texts that.options.padding4arcs in outer direction\n                    if (d.data.selected) {\n                        translateStr = PieChart.translateStr4Padding(\n                            d.startAngle,\n                            d.endAngle,\n                            that.options.padding4click,\n                            labelposition.x,\n                            labelposition.y\n                        );\n                    } else {\n                        translateStr = \"translate(\" + labelposition.x + \",\" + labelposition.y + \")\";\n                    }\n                    return translateStr;\n                });\n        }\n        // save arcs for next update call (removed arcs are no longer needed)\n        that.oldArcs = PieChart.removeDeletedArcs(arcs);\n    }\n    getNumberOfClickedSegments(): number {\n        let cnt = 0;\n        const ar = this.chartElements;\n        for (let i = 0; i < ar.length; i++) {\n            if (ar[i].selected === true) {\n                cnt++;\n            }\n        }\n        return cnt;\n    }\n    // cut label to target widthl\n    // ======================================================================\n    adjustLabelWidth(element, targetWidth) {\n        const shadowElement = element.childNodes[0];\n        const textElement = element.childNodes[1];\n        // just remove all children when targetWidth is 0\n        if (targetWidth <= 0) {\n            shadowElement.childNodes[0].data = \"\";\n            textElement.childNodes[0].data = \"\";\n            return;\n        }\n        let textLength = shadowElement.childNodes[0].data.length;\n        shadowElement.childNodes[0].data += \"...\";\n        let tmpText = \"\";\n        while (shadowElement.getBBox().width > targetWidth) {\n            tmpText = shadowElement.childNodes[0].data;\n            tmpText = tmpText.substr(0, textLength - 1) + tmpText.substr(textLength, 3);\n            shadowElement.childNodes[0].data = tmpText;\n            textLength--;\n            if (textLength <= 0) {\n                shadowElement.childNodes[0].data = \"\";\n                break;\n            }\n        }\n        textElement.childNodes[0].data = shadowElement.childNodes[0].data;\n        // log.debug(\"label svg width:\", shadowElement.getBBox().width, \" label text: \", shadowElement.childNodes[0].data, \" targetWidth: \", targetWidth, \" original text: \", originalText, \" originBoundingWidth: \", originBoundingWidth);\n    }\n    // get arcs with label\n    // ======================================================================\n    getArcsWithLabel(arcs): Array<any> {\n        const arcsWithLabel = [];\n        for (let i = 0; i < arcs.length; ++i) {\n            const arc = arcs[i];\n            if (arc.data.percentage > this.options.labelHideThreshold) {\n                arcsWithLabel.push(arc);\n            }\n        }\n        return arcsWithLabel;\n    }\n    // function for generating the svg:path of the d attribute from an arc\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    svgArcGen(...args: Array<any>) {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const that = this;\n        const a = SearchFacetPieChart.d3.svg\n            .arc()\n            .innerRadius(function () {\n                return that.options.innerRadius;\n            })\n            .outerRadius(function () {\n                return that.options.outerRadius;\n            })\n            .startAngle((d) => {\n                return d.startAngle;\n            })\n            .endAngle((d) => {\n                return d.endAngle;\n            });\n        return a;\n    }\n    // get arc dom element by label\n    // ======================================================================\n    getArcElementtbyLabel(label) {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        let that = this; // ToDo, try to get rid of 'that' but take care, it is reassigned\n        that.svgArcs.selectAll(\"g\").each(function (data) {\n            if (data.data.label === label) {\n                // eslint-disable-next-line @typescript-eslint/no-this-alias\n                that = this;\n            }\n            return;\n        });\n        return that;\n    }\n    // get label element by label\n    // ======================================================================\n    getLabelElementtbyLabel(label): any {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        let that = this; // ToDo, try to get rid of 'that' but take care, it is reassigned\n        that.svgLabels.selectAll(\"g\").each(function (data) {\n            if (data.data.label === label) {\n                // eslint-disable-next-line @typescript-eslint/no-this-alias\n                that = this;\n            }\n        });\n        return that;\n    }\n    // helper: remove deleted arcs\n    // ======================================================================\n    static removeDeletedArcs(arcs) {\n        const tmpArcs = [];\n        for (let i = 0; i < arcs.length; ++i) {\n            const arc = arcs[i];\n            if (!arc.removed) {\n                tmpArcs.push(arc);\n            }\n        }\n        return tmpArcs;\n    }\n    // helper: create zero sized arc\n    // ======================================================================\n    static createZeroArc(angle, element) {\n        return {\n            startAngle: angle,\n            endAngle: angle,\n            data: element,\n            removed: true,\n        };\n    }\n    // helper: insert zero sized arc after insertIndex into arcs\n    // ======================================================================\n    insertAfter(arcs, insertIndex, arc) {\n        let newArc;\n        if (insertIndex >= 0) {\n            const beforeArc = arcs[insertIndex];\n            newArc = PieChart.createZeroArc(beforeArc.endAngle, arc.data);\n        } else {\n            newArc = PieChart.createZeroArc(0, arc.data);\n        }\n        newArc.oldArc = arc;\n        arcs.splice(insertIndex + 1, 0, newArc);\n    }\n    // helper: get id of arc\n    // ======================================================================\n    static getIdOfArc(arc) {\n        return arc.data.id;\n    }\n    // function for generating an arc from a element\n    // ======================================================================\n    static arcsGen = function () {\n        return SearchFacetPieChart.d3.layout\n            .pie()\n            .value(function (d) {\n                return d.value;\n            })\n            .sort(null);\n    };\n    // helper: get index of arc with given id in arcs\n    // ======================================================================\n    static getIndexById(arcs, id) {\n        for (let i = 0; i < arcs.length; ++i) {\n            const arc = arcs[i];\n            if (PieChart.getIdOfArc(arc) === id) {\n                return i;\n            }\n        }\n        return null;\n    }\n    // helper: add new data (if any) to arcSequence before sort (only for IE)\n    // ie sort has reverse order of parameter comparing to FF and Chrome\n    // ======================================================================\n    static add2arcSequence(data, arcSequence) {\n        if (SearchFacetPieChart.isIE()) {\n            const addNewData2Sequence = function (x) {\n                arcSequence.getIndex(x.id);\n            };\n            data.forEach(addNewData2Sequence);\n        }\n        return data;\n    }\n    // helper: get translate string of a arc with giving padding\n    // ======================================================================\n    static translateStr4Padding(startAngle, endAngle, padding, xOldOrig, yOldOrig) {\n        // cal origin of transformed coordinate system (in case startangle = 0)\n        const apexAngle = endAngle - startAngle;\n        let xNewOrig = padding * Math.sin(apexAngle / 2);\n        let yNewOrig = -(padding * Math.cos(apexAngle / 2));\n        // rotate it by startAngle\n        const tmp = xNewOrig * Math.cos(startAngle) - yNewOrig * Math.sin(startAngle);\n        yNewOrig = xNewOrig * Math.sin(startAngle) + yNewOrig * Math.cos(startAngle);\n        xNewOrig = tmp;\n        const translateStr = \"translate(\" + (xOldOrig + xNewOrig) + \", \" + (yOldOrig + yNewOrig) + \")\";\n        return translateStr;\n    }\n    // generator: default arc calculation\n    // ======================================================================\n    generateDefaultArcCalculator(): DefaultArcCalculator {\n        return new DefaultArcCalculator(this);\n    }\n    // calculate new arcs based on new data\n    // ======================================================================\n    calculateNewArcsOnly(data) {\n        // sort data\n        data = data.slice();\n        // ie sort has reverse order of parameter comparing to FF and Chrome\n        // new data has to be added (if any) to sequence at first, only necessary for IE\n        PieChart.add2arcSequence(data, this.arcSequence);\n        data.sort((a, b) => {\n            return this.arcSequence.getIndex(a.id) - this.arcSequence.getIndex(b.id);\n        });\n        // calculate new arcs based on new data\n        const newArcs = PieChart.arcsGen()(data);\n        return newArcs;\n    }\n    // calculate new arcs based on old arcs + new data\n    // ======================================================================\n    calculateArcs(oldArcs, data) {\n        const newArcs = PieChart.arcsGen()(data);\n        // insert new elements with size 0 (startAngle=endAngle) into old arcs\n        this.insertMissingArcs(oldArcs, newArcs, true);\n        // insert removed elements with size 0 (startAngle=endAngle) into new arcs\n        this.insertMissingArcs(newArcs, oldArcs, false);\n        return newArcs;\n    }\n    // insert arcs included in arcs2 but not in arcs1 into arcs1\n    // ======================================================================\n    insertMissingArcs(arcs1, arcs2, ic) {\n        let arc1InsertIndex = -1;\n        for (let arc2Index = 0; arc2Index < arcs2.length; ++arc2Index) {\n            const arc2 = arcs2[arc2Index];\n            const arc1Index = PieChart.getIndexById(arcs1, arc2.data.id);\n            let arc1;\n            if (arc1Index !== null) {\n                // --------------------------------------------------------\n                // 1) there is a corresponding arc in arcs1\n                // --------------------------------------------------------\n                arc1 = arcs1[arc1Index];\n                arc1.oldArc = arc2;\n                arc1InsertIndex = arc1Index;\n                continue;\n            } else {\n                // --------------------------------------------------------\n                // 2) no corresponding arc in arcs1 -> create zero sized arc\n                // --------------------------------------------------------\n                if (ic) {\n                    arc1InsertIndex = this.determineInsertIndex(arcs1, arc1InsertIndex, arcs2, arc2Index);\n                }\n                let newArc;\n                if (arc1InsertIndex >= 0) {\n                    const beforeArc = arcs1[arc1InsertIndex];\n                    newArc = PieChart.createZeroArc(beforeArc.endAngle, arc2.data);\n                } else {\n                    newArc = PieChart.createZeroArc(0, arc2.data);\n                }\n                newArc.oldArc = arc2;\n                arcs1.splice(arc1InsertIndex + 1, 0, newArc);\n                arc1InsertIndex++;\n            }\n        }\n    }\n    // determination of insertion index\n    // ======================================================================\n    determineInsertIndex(arcs1, arc1InsertIndex, arcs2, arc2Index) {\n        // determination is based on\n        // (1) historical information (this.arcSequence)\n        // (2) only arcs to be removed can be overtaken\n        // initialization\n        const arc2 = arcs2[arc2Index];\n        const sequenceIndex = this.arcSequence.getIndex(arc2.data.id);\n        let index;\n        // determine index\n        for (index = arc1InsertIndex + 1; index < arcs1.length; ++index) {\n            const sequenceIndex2 = this.arcSequence.getIndex(arcs1[index].data.id);\n            // exit condition based on historial information\n            if (sequenceIndex2 > sequenceIndex) {\n                break;\n            }\n            // exit condition: only arcs to be removed can be overtaken\n            if (PieChart.getIndexById(arcs2, arcs1[index].data.id) !== null) {\n                break;\n            }\n        }\n        return index - 1;\n    }\n    // generator: historical arc calculation\n    // ======================================================================\n    static generateHistoricalArcCalculator(pieChart: PieChart, ...args: Array<any>): HistoricalArcCalculator {\n        return new HistoricalArcCalculator(pieChart, args);\n    }\n}\n\n/*** LABEL POSITIO ***/\n// helper class for label positioning\n// ======================================================================\n\nclass Labelposition {\n    x: number;\n    y: number;\n    backgroundWidth: number;\n    backgroundHeight: number;\n    startAngle: number;\n    endAngle: number;\n    r: number; // radius\n    labelPaddingX: number;\n    labelPaddingY: number;\n    radiusPadding: number;\n    labelWidth: number;\n    labelHeight: number;\n    outsetMin: number;\n    outsetMax: number;\n    outsetStep: number;\n    apexAngle: number;\n    startLabelWidth: number;\n    d3centroid: any;\n    text: string;\n    svgBackground: SvgBackground;\n    translateStr: string;\n    debug: boolean;\n\n    constructor(\n        backgroundWidth: number,\n        backgroundHeight: number,\n        startAngle: number,\n        endAngle: number,\n        r: number,\n        labelWidth: number,\n        labelHeight: number,\n        d3centroid: any,\n        text: string,\n        svgBackground: SvgBackground\n    ) {\n        this.backgroundWidth = backgroundWidth;\n        this.backgroundHeight = backgroundHeight;\n        this.startAngle = startAngle;\n        this.endAngle = endAngle;\n        this.r = r;\n        this.labelPaddingX = 3;\n        this.labelPaddingY = 3;\n        this.radiusPadding = 4.24;\n        this.labelWidth = labelWidth + 2 * this.labelPaddingX;\n        this.labelHeight = labelHeight;\n        this.outsetMin = 0.3;\n        this.outsetMax = 1.2;\n        this.outsetStep = 0.025;\n        this.apexAngle = endAngle - startAngle;\n        this.startLabelWidth = this.labelWidth;\n        this.d3centroid = d3centroid;\n        this.text = text;\n        this.svgBackground = svgBackground;\n        this.debug = false;\n        this.labelHeight = this.labelHeight + 2 * this.labelPaddingY;\n        const xOrigin = Math.round(this.backgroundWidth / 2);\n        const yOrigin = Math.round(this.backgroundHeight / 2);\n        // translation to center\n        this.translateStr = \"translate(\" + xOrigin + \",\" + yOrigin + \")\";\n    }\n    update() {\n        // log.debug(\"\");\n        // log.debug(\"**** new calculation with parameters start:\", (this.startAngle * 360) / (2 * Math.PI), \" size:\", (this.apexAngle * 360) / (2 * Math.PI));\n        // log.debug(\"**** Labelwidth:\", this.labelWidth, \" d3centroid:\", this.d3centroid, \" label text:\", this.text);\n        let outset = Math.max(\n            this.outsetMin,\n            ((Math.sin(this.apexAngle / 2) / (this.apexAngle / 2)) * 2) / 3\n        ); // Outset for centroid (Schwerpunkt) of segment\n        let placementSuccessful = true;\n        let iterations = Math.max(100, this.labelWidth * 2, 1 / this.outsetStep);\n        let optimizationDirection = 0;\n        let c;\n        do {\n            placementSuccessful = true;\n            c = this.calc(outset, this.labelWidth);\n            if (outset > this.outsetMax || outset < this.outsetMin) {\n                // log.debug(\"outset became too small or too large. END\");\n                break;\n            }\n            if (this.labelWidth < 0) {\n                break;\n            }\n            // log.debug(\"outset\", outset);\n            let c1, c2, c1v, c2v;\n            if (optimizationDirection === 0) {\n                // direction not determined\n                /// calculate new proposed solution\n                c1 = this.calc(outset + this.outsetStep, this.labelWidth);\n                c2 = this.calc(outset - this.outsetStep, this.labelWidth);\n                /// value solutions\n                c1v = this.value(c1, c);\n                c2v = this.value(c2, c);\n                // log.debug(\"           current \", \" labelShortened\", c.labelShortened, \"labelWidth\", c.labelWidth, \"xSpace\", c.xSpace, \"asymmetry\", c.asymmetry, \" x:\", c.centroidX, \" y:\", c.centroidY);\n                // log.debug(\"           outset++\", \" labelShortened\", c1.labelShortened, \"labelWidth\", c1.labelWidth, \"xSpace\", c1.xSpace, \"asymmetry\", c1.asymmetry, \" value=>\", c1v, \" x:\", c1.centroidX, \" y:\", c.centroidY);\n                // log.debug(\"           outset--\", \" labelShortened\", c2.labelShortened, \"labelWidth\", c2.labelWidth, \"xSpace\", c2.xSpace, \"asymmetry\", c2.asymmetry, \"value=>\", c2v, \" x:\", c2.centroidX, \" y:\", c.centroidY);\n                if (c1v < c2v && c2v > 0.5) {\n                    // further inwards is better\n                    optimizationDirection = -1;\n                    // log.debug(\"           -> going inwards\");\n                    outset += this.outsetStep * optimizationDirection;\n                    placementSuccessful = false; // try again, we are not finished yet\n                } else if (c1v > 0.5 || c.labelWidth <= 0) {\n                    // outwards is better, or equal,   if text cannot be placed, try going outwards\n                    optimizationDirection = 1;\n                    // log.debug(\"           -> going outwards\");\n                    outset += this.outsetStep * optimizationDirection;\n                    placementSuccessful = false;\n                }\n            } else {\n                c1 = this.calc(outset + this.outsetStep * optimizationDirection, this.labelWidth);\n                c1v = this.value(c1, c);\n                // log.debug(\"           current \", \" labelShortened\", c.labelShortened, \"labelWidth\", c.labelWidth, \"xSpace\", c.xSpace, \"asymmetry\", c.asymmetry, \" x:\", c.centroidX, \" y:\", c.centroidY);\n                // log.debug(\"           outset+-\", \"labelShortened\", c1.labelShortened, \"labelWidth\", c1.labelWidth, \"xSpace\", c1.xSpace, \"asymmetry\", c1.asymmetry, \" value=>\", c1v, \" x:\", c1.centroidX, \" y:\", c.centroidY);\n                if (c1v > 0.5 || c.labelWidth <= 0) {\n                    outset += this.outsetStep * optimizationDirection;\n                    placementSuccessful = false;\n                }\n            }\n            iterations--;\n        } while (!placementSuccessful && iterations > 0 && !isNaN(outset));\n        c = this.calc(outset, this.labelWidth); // re-calculate just to draw debug lines correctly (otherwise they would be at the last tested position, not the final chosen)\n        /// this is the new result\n        this.labelWidth = c.labelWidth;\n        const x = c.x;\n        const y = c.y;\n        /// drawing\n        this.svgBackground.select(\"circle.centroid\").remove();\n        if (this.debug) {\n            this.svgBackground\n                .append(\"svg:circle\")\n                .attr(\"class\", \"centroid\")\n                .attr(\"cx\", c.centroidX)\n                .attr(\"cy\", c.centroidY)\n                .attr(\"r\", 2)\n                .style(\"fill\", \"blue\");\n        }\n        this.svgBackground.selectAll(\"line.helper\").remove();\n        if (this.debug) {\n            this.svgBackground\n                .append(\"svg:line\")\n                .attr(\"class\", \"helper helper2\")\n                .attr(\"x1\", -this.backgroundWidth / 2)\n                .attr(\"x2\", this.backgroundWidth / 2)\n                .attr(\"y1\", y - this.labelHeight / 2)\n                .attr(\"y2\", y - this.labelHeight / 2);\n            this.svgBackground\n                .append(\"svg:line\")\n                .attr(\"class\", \"helper helper2\")\n                .attr(\"x1\", -this.backgroundWidth / 2)\n                .attr(\"x2\", this.backgroundWidth / 2)\n                .attr(\"y1\", y + this.labelHeight / 2)\n                .attr(\"y2\", y + this.labelHeight / 2);\n            this.svgBackground\n                .append(\"svg:line\")\n                .attr(\"class\", \"helper\")\n                .attr(\"x1\", 0)\n                .attr(\"y1\", 0)\n                .attr(\"x2\", Math.sin(this.startAngle) * (this.r + this.radiusPadding))\n                .attr(\"y2\", -Math.cos(this.startAngle) * (this.r + this.radiusPadding));\n            this.svgBackground\n                .append(\"svg:line\")\n                .attr(\"class\", \"helper\")\n                .attr(\"x1\", 0)\n                .attr(\"y1\", 0)\n                .attr(\"x2\", Math.sin(this.endAngle) * (this.r + this.radiusPadding))\n                .attr(\"y2\", -Math.cos(this.endAngle) * (this.r + this.radiusPadding));\n            this.svgBackground\n                .append(\"svg:line\")\n                .attr(\"class\", \"helper\")\n                .attr(\"x1\", Math.sin(this.startAngle) * (this.r + this.radiusPadding))\n                .attr(\"y1\", -Math.cos(this.startAngle) * (this.r + this.radiusPadding))\n                .attr(\"x2\", this.isStartAngleOnRight() ? this.backgroundWidth / 2 : -this.backgroundWidth / 2)\n                .attr(\"y2\", -Math.cos(this.startAngle) * (this.r + this.radiusPadding));\n            this.svgBackground\n                .append(\"svg:line\")\n                .attr(\"class\", \"helper\")\n                .attr(\"x1\", Math.sin(this.endAngle) * (this.r + this.radiusPadding))\n                .attr(\"y1\", -Math.cos(this.endAngle) * (this.r + this.radiusPadding))\n                .attr(\"x2\", this.isEndAngleOnRight() ? this.backgroundWidth / 2 : -this.backgroundWidth / 2)\n                .attr(\"y2\", -Math.cos(this.endAngle) * (this.r + this.radiusPadding));\n        }\n        if (this.labelWidth < 2 * this.labelPaddingX) {\n            // label too short, it makes no sense to draw\n            this.labelWidth = 0; //this.startLabelWidth;\n        } else if (this.labelWidth < this.startLabelWidth) {\n            // label truncated;\n            this.labelWidth = this.labelWidth - 2 * this.labelPaddingX;\n        }\n        this.x = isNaN(x) ? 0 : x;\n        this.y = isNaN(x) ? 0 : y;\n        // log.debug(\"=======final x:\" + this.x + \" y:\" + this.y + \" labelwidth:\" + this.labelWidth);\n    }\n    calc(outset: number, labelWidth: number) {\n        let centroidX, centroidY, leftBorder, rightBorder, perimeterRightBorder, perimeterLeftBorder;\n        /// full circle?\n        if (this.startAngle - this.endAngle + 2 * Math.PI < 1e-9) {\n            centroidX = 0;\n            centroidY = 0;\n            rightBorder = this.backgroundWidth / 2;\n            leftBorder = -this.backgroundWidth / 2;\n            perimeterLeftBorder = -this.r;\n            perimeterRightBorder = this.r;\n            // log.debug(\"full circle -> placement at 0,0 regardless of outset\");\n        } else {\n            // Calculate Centroid\n            centroidX = Math.sin(this.apexAngle / 2) * this.r * outset; // calculation as if this.startAngle was 0\n            centroidY = Math.cos(this.apexAngle / 2) * -this.r * outset;\n            const tmp = centroidX * Math.cos(this.startAngle) - centroidY * Math.sin(this.startAngle); //rotate by this.startAngle\n            centroidY = centroidX * Math.sin(this.startAngle) + centroidY * Math.cos(this.startAngle); //rotate by this.startAngle\n            centroidX = tmp;\n            // log.debug(\"======Schwerpunkt x:\" + centroidX + \" y:\" + centroidY);\n            const upperLabelBorder = centroidY - this.labelHeight / 2;\n            const lowerLabelBorder = centroidY + this.labelHeight / 2;\n            leftBorder = Math.max(\n                this.calcLeftBorder(centroidX, upperLabelBorder),\n                this.calcLeftBorder(centroidX, lowerLabelBorder),\n                -this.backgroundWidth / 2\n            );\n            if (\n                Math.abs(this.startAngle - (this.endAngle % (2 * Math.PI))) > 1e-9 &&\n                centroidX > 0 &&\n                upperLabelBorder <= 0 &&\n                lowerLabelBorder >= 0\n            ) {\n                // label at \"mouth of Pacman\" (<\n                leftBorder = Math.max(leftBorder, 0);\n            }\n            // see if height fits\n            if (!this.doesFitHeight(leftBorder, upperLabelBorder, lowerLabelBorder, centroidX < 0, true)) {\n                leftBorder = this.backgroundWidth / 2;\n            }\n            rightBorder = Math.min(\n                this.calcRightBorder(centroidX, upperLabelBorder),\n                this.calcRightBorder(centroidX, lowerLabelBorder),\n\n                this.backgroundWidth / 2\n            );\n            if (\n                Math.abs(this.startAngle - (this.endAngle % (2 * Math.PI))) > 1e-9 &&\n                centroidX < 0 &&\n                upperLabelBorder <= 0 &&\n                lowerLabelBorder >= 0\n            ) {\n                // Pacman\n                rightBorder = Math.min(rightBorder, 0);\n            }\n            // see if height fits\n            if (!this.doesFitHeight(rightBorder, upperLabelBorder, lowerLabelBorder, centroidX < 0, false)) {\n                rightBorder = -this.backgroundWidth / 2;\n            }\n            let perimeterUpperRightBorder = this.calcPerimeterBorder(1, centroidY - this.labelHeight / 2);\n            if (perimeterUpperRightBorder < centroidX) {\n                perimeterUpperRightBorder = this.backgroundWidth / 2;\n            }\n            let perimeterLowerRightBorder = this.calcPerimeterBorder(1, centroidY + this.labelHeight / 2);\n            if (perimeterLowerRightBorder < centroidX) {\n                perimeterLowerRightBorder = this.backgroundWidth / 2;\n            }\n            perimeterRightBorder = Math.min(\n                perimeterUpperRightBorder,\n                perimeterLowerRightBorder,\n                rightBorder\n            );\n            let perimeterUpperLeftBorder = this.calcPerimeterBorder(-1, centroidY - this.labelHeight / 2);\n            if (perimeterUpperLeftBorder > centroidX) {\n                perimeterUpperLeftBorder = -this.backgroundWidth / 2;\n            }\n            let perimeterLowerLeftBorder = this.calcPerimeterBorder(-1, centroidY + this.labelHeight / 2);\n            if (perimeterLowerLeftBorder > centroidX) {\n                perimeterLowerLeftBorder = -this.backgroundWidth / 2;\n            }\n            perimeterLeftBorder = Math.max(perimeterUpperLeftBorder, perimeterLowerLeftBorder, leftBorder);\n            if (isNaN(perimeterRightBorder)) {\n                perimeterRightBorder = rightBorder;\n            }\n            if (isNaN(perimeterLeftBorder)) {\n                perimeterLeftBorder = leftBorder;\n            }\n        }\n        /// debug drawing\n        this.svgBackground.select(\"line.left\").remove();\n        this.svgBackground.select(\"line.right\").remove();\n        this.svgBackground.select(\"line.perimeterLeft\").remove();\n        this.svgBackground.select(\"line.perimeterRight\").remove();\n        if (this.debug) {\n            this.svgBackground\n                .append(\"svg:line\")\n                .attr(\"class\", \"left\")\n                .attr(\"y1\", -this.backgroundHeight / 2)\n                .attr(\"y2\", this.backgroundHeight / 2)\n                .attr(\"x1\", leftBorder)\n                .attr(\"x2\", leftBorder);\n            this.svgBackground\n                .append(\"svg:line\")\n                .attr(\"class\", \"right\")\n                .attr(\"y1\", -this.backgroundHeight / 2)\n                .attr(\"y2\", this.backgroundHeight / 2)\n                .attr(\"x1\", rightBorder)\n                .attr(\"x2\", rightBorder);\n            this.svgBackground\n                .append(\"svg:line\")\n                .attr(\"class\", \"perimeterLeft\")\n                .attr(\"y1\", -this.backgroundHeight / 2)\n                .attr(\"y2\", this.backgroundHeight / 2)\n                .attr(\"x1\", perimeterLeftBorder)\n                .attr(\"x2\", perimeterLeftBorder);\n            this.svgBackground\n                .append(\"svg:line\")\n                .attr(\"class\", \"perimeterRight\")\n                .attr(\"y1\", -this.backgroundHeight / 2)\n                .attr(\"y2\", this.backgroundHeight / 2)\n                .attr(\"x1\", perimeterRightBorder)\n                .attr(\"x2\", perimeterRightBorder);\n        }\n        const oldLabelWidth = labelWidth;\n        labelWidth = Math.min(labelWidth, Math.floor(rightBorder - leftBorder));\n        // calculate x\n        let x = centroidX;\n        x = Math.max(x, perimeterLeftBorder + labelWidth / 2);\n        x = Math.min(x, perimeterRightBorder - labelWidth / 2);\n        if (\n            x - labelWidth / 2 < perimeterLeftBorder - 1e-9 ||\n            x + labelWidth / 2 > perimeterRightBorder + 1e-9\n        ) {\n            // centered\n            x = (perimeterLeftBorder + perimeterRightBorder) / 2;\n        }\n        if (centroidX >= 0) {\n            x = Math.max(x, leftBorder + labelWidth / 2);\n            x = Math.min(x, rightBorder - labelWidth / 2);\n        } else {\n            x = Math.min(x, rightBorder - labelWidth / 2);\n            x = Math.max(x, leftBorder - labelWidth / 2);\n        }\n        // calculate y\n        const y = centroidY;\n        // return coordinates and parameters of the placement\n        return {\n            x: x,\n            y: y,\n            labelWidth: labelWidth,\n            labelShortened: labelWidth !== oldLabelWidth,\n            xSpace: rightBorder - leftBorder,\n            centroidX: centroidX,\n            centroidY: centroidY,\n            asymmetry: Math.abs(x - centroidX),\n        };\n    }\n    /// value function - how good is the new proposed solution compared to the current?\n    value(cNew, cOld) {\n        if (cNew.labelWidth < 0) {\n            return -10000;\n        }\n        if (cNew.labelWidth < cOld.labelWidth) {\n            return -100;\n        }\n        if (cNew.labelWidth > cOld.labelWidth) {\n            return (cNew.labelWidth - cOld.labelWidth) * 1000;\n        }\n        if (cOld.labelShortened && cNew.labelWidth === cOld.labelWidth) {\n            return (cNew.xSpace - cOld.xSpace) * 100;\n        }\n        return 0;\n    }\n    doesFitHeight(border, upper, lower, isLeftLabel, isLeftBorder) {\n        let y1 = -Math.cos(this.startAngle) * (this.r + this.radiusPadding);\n        let y2 = -Math.cos(this.endAngle) * (this.r + this.radiusPadding);\n        if (Math.abs(this.startAngle - (this.endAngle % (2 * Math.PI))) < 1e-9) {\n            y1 = -this.backgroundHeight / 2;\n            y2 = this.backgroundHeight / 2;\n        } else if (border === 0) {\n            // for \"Pacman\" slices (<  >)\n            y1 = -this.backgroundHeight / 2;\n            y2 = this.backgroundHeight / 2;\n        } else if (border > 0) {\n            if (!this.isStartAngleOnRight()) {\n                y1 = -this.backgroundHeight / 2;\n            } else if (border <= Math.sin(this.startAngle) * (this.r + this.radiusPadding)) {\n                // intersection of edge with this.startAngle at radiale (or horizontal part)?\n                y1 = border / -Math.tan(this.startAngle);\n            }\n            if (!this.isEndAngleOnRight()) {\n                y2 = this.backgroundHeight / 2;\n            } else if (border <= Math.sin(this.endAngle) * (this.r + this.radiusPadding)) {\n                // intersection of edge with this.startAngle at radiale (or horizontal part)?\n                y2 = border / -Math.tan(this.endAngle);\n            }\n            if (isLeftLabel && !isLeftBorder && y1 >= lower) {\n                y1 = -this.backgroundHeight / 2;\n            }\n            if (isLeftLabel && !isLeftBorder && y2 <= upper) {\n                y2 = this.backgroundHeight / 2;\n            }\n        } else {\n            if (this.isStartAngleOnRight()) {\n                y1 = this.backgroundHeight / 2;\n            } else if (border > Math.sin(this.startAngle) * (this.r + this.radiusPadding)) {\n                // intersection of edge with this.startAngle at radiale (or horizontal part)?\n                y1 = border / -Math.tan(this.startAngle);\n            }\n            if (this.isEndAngleOnRight()) {\n                y2 = -this.backgroundHeight / 2;\n            } else if (border > Math.sin(this.endAngle) * (this.r + this.radiusPadding)) {\n                // intersection of edge with this.startAngle at radiale (or horizontal part)?\n                y2 = border / -Math.tan(this.endAngle);\n            }\n            if (!isLeftLabel && isLeftBorder && y2 >= lower) {\n                y2 = -this.backgroundHeight / 2;\n            }\n            if (!isLeftLabel && isLeftBorder && y1 <= upper) {\n                y1 = this.backgroundHeight / 2;\n            }\n        }\n        /// debug drawing\n        if (!isLeftBorder) {\n            this.svgBackground.selectAll(\".rightBorder\").remove();\n            if (this.debug) {\n                this.svgBackground\n                    .append(\"svg:rect\")\n                    .attr(\"class\", \"rightBorder\")\n                    .attr(\"x\", border - 3)\n                    .attr(\"y\", y1 - 3)\n                    .attr(\"width\", 6)\n                    .attr(\"height\", 6)\n                    .style(\"fill\", \"green\");\n                this.svgBackground\n                    .append(\"svg:circle\")\n                    .attr(\"class\", \"rightBorder\")\n                    .attr(\"cx\", border)\n                    .attr(\"cy\", y2)\n                    .attr(\"this.r\", 3)\n                    .style(\"fill\", \"green\");\n            }\n        } else {\n            this.svgBackground.selectAll(\".leftBorder\").remove();\n            if (this.debug) {\n                this.svgBackground\n                    .append(\"svg:rect\")\n                    .attr(\"class\", \"leftBorder\")\n                    .attr(\"x\", border - 3)\n                    .attr(\"y\", y1 - 3)\n                    .attr(\"width\", 6)\n                    .attr(\"height\", 6)\n                    .style(\"fill\", \"red\");\n                this.svgBackground\n                    .append(\"svg:circle\")\n                    .attr(\"class\", \"leftBorder\")\n                    .attr(\"cx\", border)\n                    .attr(\"cy\", y2)\n                    .attr(\"this.r\", 3)\n                    .style(\"fill\", \"red\");\n            }\n        }\n        /// does the text fit the height?\n        return upper >= Math.min(y1, y2) - 1e-9 && lower <= Math.max(y1, y2) + 1e-9;\n    }\n    ///// calculate left border\n    calcLeftBorder(x, y) {\n        let border = -this.backgroundWidth / 2;\n        if (Math.abs(this.startAngle - (this.endAngle % (2 * Math.PI))) < 1e-9) {\n            return border;\n        }\n        if (y <= 0) {\n            // upper half\n            if (y > -Math.cos(this.startAngle) * (this.r + this.radiusPadding)) {\n                // intersection with edge, this.startAngle at radial (or horizontal part)?\n                border = Math.tan(this.startAngle) * -y;\n            }\n        } else if (y < -Math.cos(this.endAngle) * (this.r + this.radiusPadding)) {\n            border = Math.tan(this.endAngle) * -y;\n        }\n        return border;\n    }\n    ///// calculate right border\n    calcRightBorder(x, y) {\n        let border = this.backgroundWidth / 2;\n        if (Math.abs(this.startAngle - (this.endAngle % (2 * Math.PI))) < 1e-9) {\n            return border;\n        }\n        if (y >= 0) {\n            // lower half\n            if (-y > Math.cos(this.startAngle) * (this.r + this.radiusPadding)) {\n                // intersection with edge, this.endAngle at radial (or horizontal part)?\n                border = Math.tan(this.startAngle) * -y;\n            }\n        } else if (-y < Math.cos(this.endAngle) * (this.r + this.radiusPadding)) {\n            border = Math.tan(this.endAngle) * -y;\n        }\n        return border;\n    }\n    // calculate Perimeter Border\n    calcPerimeterBorder(x, y) {\n        let border = x > 0 ? this.backgroundWidth / 2 : -this.backgroundWidth / 2;\n        border = Math.sqrt(this.r * this.r - y * y);\n        if (x < 0) {\n            border *= -1;\n        }\n        return border;\n    }\n    // check wether this.startAngle on right side\n    isStartAngleOnRight() {\n        return this.startAngle > 0 && this.startAngle <= ((2 * Math.PI) / 360) * 180;\n    }\n    // check wether this.endAngle on right side\n    isEndAngleOnRight() {\n        return this.endAngle % (2 * Math.PI) < ((2 * Math.PI) / 360) * 180;\n    }\n}\n\n/*** ARC CALCULATOR ***/\nclass Sequence {\n    maxIndex: number;\n    objectMap: any;\n    constructor(...args: Array<any>) {\n        this.init(args);\n    }\n    //  helper class for storing objects in order\n    //  ======================================================================\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    init(...args: Array<any>) {\n        this.maxIndex = 0;\n        this.objectMap = {};\n    }\n    // get index of object if it exists in map, otherwise add it to map and return newly created index\n    // actually this is also an add function\n    getIndex(object) {\n        let index = this.objectMap[object];\n        if (typeof index !== \"undefined\") {\n            return index;\n        }\n        index = this.maxIndex;\n        this.maxIndex++;\n        this.objectMap[object] = index;\n        return index;\n    }\n}\nclass HistoricalArcCalculator {\n    private _pieChart: PieChart;\n    constructor(pieChart: PieChart, ...args: Array<any>) {\n        this._pieChart = pieChart;\n        this.init(pieChart, args);\n    }\n    init(pieChart: PieChart, ...args: Array<any>) {\n        pieChart.arcSequence = new Sequence(args);\n    }\n    // calculate new arcs based on new data\n    // ======================================================================\n    calculateNewArcsOnly(data) {\n        // sort data\n        data = data.slice();\n        // ie sort has reverse order of parameter comparing to FF and Chrome\n        // new data has to be added (if any) to sequence at first, only necessary for IE\n        PieChart.add2arcSequence(data, this._pieChart.arcSequence);\n        // calculate new arcs based on new data\n        const newArcs = PieChart.arcsGen()(data);\n        return newArcs;\n    }\n    // calculate new arcs based on old arcs + new data\n    // ======================================================================\n    calculateArcs(oldArcs, data) {\n        // sort data\n        data = data.slice();\n        // ie sort has reverse order of parameter comparing to FF and Chrome\n        // new data has to be added (if any) to sequence at first, only necessary for IE\n        PieChart.add2arcSequence(data, this._pieChart.arcSequence);\n        data.sort(function (a, b) {\n            return this._pieChart.arcSequence.getIndex(a.id) - this._pieChart.arcSequence.getIndex(b.id);\n        });\n        // calculate new arcs based on new data\n        const newArcs = PieChart.arcsGen()(data);\n        // insert new elements with size 0 (startAngle=endAngle) into old arcs\n        this.insertMissingArcs(oldArcs, newArcs);\n        // insert removed elements with size 0 (startAngle=endAngle) into new arcs\n        this.insertMissingArcs(newArcs, oldArcs);\n        return newArcs;\n    }\n    // insert arcs included in arcs2 but not in arcs1 into arcs1\n    // ======================================================================\n    insertMissingArcs(arcs1, arcs2) {\n        let arc1Index = 0;\n        for (let arc2Index = 0; arc2Index < arcs2.length; ++arc2Index) {\n            const arc2 = arcs2[arc2Index];\n            const arc2SortIndex = this._pieChart.arcSequence.getIndex(arc2.data.id);\n            let arc1;\n            let found = false;\n            for (; arc1Index < arcs1.length; ++arc1Index) {\n                arc1 = arcs1[arc1Index];\n                const arc1SortIndex = this._pieChart.arcSequence.getIndex(arc1.data.id);\n                if (arc1SortIndex === arc2SortIndex) {\n                    found = true;\n                    break;\n                }\n                if (arc1SortIndex > arc2SortIndex) {\n                    break;\n                }\n            }\n            if (found) {\n                arc1.oldArc = arc2;\n            } else {\n                let newArc;\n                if (arc1Index - 1 >= 0 && arc1Index - 1 < arcs1.length) {\n                    const beforeArc = arcs1[arc1Index - 1];\n                    newArc = PieChart.createZeroArc(beforeArc.endAngle, arc2.data);\n                } else {\n                    newArc = PieChart.createZeroArc(0, arc2.data);\n                }\n                arcs1.splice(arc1Index, 0, newArc);\n                newArc.oldArc = arc2;\n            }\n            arc1Index++;\n        }\n    }\n}\nclass DefaultArcCalculator {\n    constructor(pieChart: PieChart, ...args: Array<any>) {\n        this.init(pieChart, args);\n    }\n    init(pieChart: PieChart, ...args: Array<any>) {\n        pieChart.arcSequence = new Sequence(args);\n    }\n}\n"],"mappings":"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","ignoreList":[]}