{"version":3,"file":"SearchFacetQuickSelectDataSource-dbg.js","names":["sap","ui","define","List","StandardListItem","sap_m_library","CustomData","Tree","CustomListItem","__SearchFacetHierarchyStaticTreeItem","Label","Icon","_____eventlogging_UserEvents","VBox","FlexBox","__i18n","_interopRequireDefault","obj","__esModule","default","FlexAlignItems","FlexJustifyContent","ListSeparators","ListMode","ListType","SearchFacetHierarchyStaticTreeItem","UserEventType","i18n","SearchFacetQuickSelectDataSource","extend","renderer","apiVersion","constructor","_constructor","sId","options","VBox.prototype.constructor.call","addStyleClass","header","justifyContent","SpaceBetween","alignItems","Center","items","text","getText","addItem","dataSourcesList","itemPress","event","itemControl","getParameter","item","getBindingContext","getObject","handleSelectDataSource","dataSource","oModel","getModel","userEventQuickSelectSwitch","type","QUICK_SELECT_SWITCH","dataSourceKey","id","eventLogger","logEvent","path","factory","oContext","object","createTree","createListItem","setShowSeparators","None","setMode","SingleSelectMaster","getSelectedItem","bind","_handleSelectDataSource","config","bResetSearchTermOnQuickSelectDataSourceItemPress","setSearchBoxTerm","adjustFilters","setDataSource","_createTree","tree","mode","includeItemInSelection","createTreeItem","toggleOpenState","toggleExpand","delegate","onAfterRendering","expandTreeNodes","addEventDelegate","content","_expandTreeNodes","facetModel","rootNode","expandTreeNodeRecursively","_expandTreeNodeRecursively","node","isRootNode","expanded","doExpandTreeNode","children","i","length","childNode","_doExpandTreeNode","getItems","itemNode","expand","_createTreeItem","iconUrl","icon","src","push","label","attachBrowserEvent","getDataSource","treeItem","selectLine","parts","formatter","queryFilter","dataSourceId","_createListItem","Active","title","tooltip","customData","key","value","writeToDom","selected","model","searchInAreaOverwriteMode","getStaticHierarchyFilterConditions"],"sources":["SearchFacetQuickSelectDataSource.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\nimport List, { $ListSettings } from \"sap/m/List\";\nimport StandardListItem from \"sap/m/StandardListItem\";\nimport { FlexAlignItems, FlexJustifyContent, ListSeparators } from \"sap/m/library\";\nimport { ListMode } from \"sap/m/library\";\nimport { ListType } from \"sap/m/library\";\nimport CustomData from \"sap/ui/core/CustomData\";\nimport Tree, { Tree$ToggleOpenStateEvent } from \"sap/m/Tree\";\nimport CustomListItem from \"sap/m/CustomListItem\";\nimport SearchFacetHierarchyStaticTreeItem from \"./SearchFacetHierarchyStaticTreeItem\";\nimport Label from \"sap/m/Label\";\nimport Icon from \"sap/ui/core/Icon\";\nimport SearchModel from \"sap/esh/search/ui/SearchModel\";\nimport { DataSource } from \"../../../sinaNexTS/sina/DataSource\";\nimport { QuickSelectSwitchEvent, UserEventType } from \"../../../eventlogging/UserEvents\";\nimport Context from \"sap/ui/model/Context\";\nimport VBox from \"sap/m/VBox\";\nimport FlexBox from \"sap/m/FlexBox\";\nimport i18n from \"../../../i18n\";\n\nexport interface QuickSelectDataSource {\n    dataSource: DataSource;\n    type: \"quickSelectDataSourceTreeNode\";\n    children: Array<{ dataSource: DataSource }>;\n}\n\n/**\n * Quick-select datasource facet\n */\n\n/**\n * @namespace sap.esh.search.ui.controls\n */\nexport default class SearchFacetQuickSelectDataSource extends VBox {\n    private tree: Tree;\n\n    constructor(sId?: string, options?: Partial<$ListSettings>) {\n        super(sId, options);\n        this.addStyleClass(\"sapUshellSearchFacetContainer\");\n\n        const header = new FlexBox({\n            justifyContent: FlexJustifyContent.SpaceBetween,\n            alignItems: FlexAlignItems.Center,\n            items: [new Label({ text: i18n.getText(\"quickSelectDataSourcesHeader\") })],\n        });\n        header.addStyleClass(\"sapUshellSearchFacetHeader\");\n        this.addItem(header);\n\n        const dataSourcesList = new List({\n            itemPress: (event) => {\n                const itemControl = event.getParameter(\"srcControl\");\n                const item = itemControl.getBindingContext().getObject() as QuickSelectDataSource;\n                this.handleSelectDataSource(item.dataSource);\n                const oModel = this.getModel() as SearchModel;\n                const userEventQuickSelectSwitch: QuickSelectSwitchEvent = {\n                    type: UserEventType.QUICK_SELECT_SWITCH,\n                    dataSourceKey: item.dataSource.id,\n                };\n                oModel.eventLogger.logEvent(userEventQuickSelectSwitch);\n            },\n            items: {\n                path: \"items\",\n                factory: (sId: string, oContext: Context) => {\n                    const object = oContext.getObject() as QuickSelectDataSource;\n                    if (object.type === \"quickSelectDataSourceTreeNode\") {\n                        // tree display (one catalog)\n                        return this.createTree();\n                    } else {\n                        // flat list (repo explorer)\n                        return this.createListItem();\n                    }\n                },\n            },\n        });\n        dataSourcesList.setShowSeparators(ListSeparators.None);\n        dataSourcesList.setMode(ListMode.SingleSelectMaster);\n        this.addItem(dataSourcesList);\n\n        // legacy: keep compatability for exit setQuickSelectDataSourceAllAppearsNotSelected\n        (this as any).getSelectedItem = dataSourcesList.getSelectedItem.bind(dataSourcesList);\n    }\n\n    handleSelectDataSource(dataSource: DataSource): void {\n        const oModel = this.getModel() as SearchModel;\n        // reset search term (even if selected item gets pressed again)\n        if (oModel.config.bResetSearchTermOnQuickSelectDataSourceItemPress) {\n            oModel.setSearchBoxTerm(\"\", false);\n        }\n        // when filter is changed (here data source), give a callback to adjust the conditions\n        if (typeof oModel.config.adjustFilters === \"function\") {\n            oModel.config.adjustFilters(oModel);\n        }\n        oModel.setDataSource(dataSource);\n    }\n\n    createTree(): CustomListItem {\n        this.tree = new Tree({\n            mode: ListMode.None,\n            includeItemInSelection: true,\n            items: {\n                path: \"children\",\n                factory: this.createTreeItem.bind(this),\n            },\n            toggleOpenState: function (event: Tree$ToggleOpenStateEvent) {\n                (event.getParameter(\"itemContext\") as any).getObject().toggleExpand();\n            },\n        });\n        const delegate = {\n            onAfterRendering: function () {\n                this.expandTreeNodes();\n            }.bind(this),\n        };\n        this.addEventDelegate(delegate, this);\n        return new CustomListItem({\n            content: this.tree,\n        });\n    }\n\n    expandTreeNodes(): void {\n        const facetModel = this.getBindingContext().getObject();\n        const rootNode = (facetModel as any).items[0]; // ToDo\n        this.expandTreeNodeRecursively(rootNode, true);\n    }\n\n    expandTreeNodeRecursively(node: any, isRootNode?: boolean): void {\n        if (node.expanded && !isRootNode) {\n            this.doExpandTreeNode(node);\n        }\n        if (!node.children) {\n            return;\n        }\n        for (let i = 0; i < node.children.length; ++i) {\n            const childNode = node.children[i];\n            this.expandTreeNodeRecursively(childNode);\n        }\n    }\n\n    doExpandTreeNode(node: any): void {\n        const items = this.tree.getItems();\n        for (let i = 0; i < items.length; ++i) {\n            const item = items[i];\n            const itemNode = item.getBindingContext().getObject();\n            if (itemNode === node) {\n                this.tree.expand(i);\n                return;\n            }\n        }\n    }\n\n    createTreeItem(sId: string, oContext: any): SearchFacetHierarchyStaticTreeItem {\n        const content = [];\n        const iconUrl = oContext.getObject().icon;\n        if (iconUrl) {\n            const icon = new Icon(\"\", {\n                src: \"{icon}\",\n            });\n            icon.addStyleClass(\"sapUiTinyMarginEnd\");\n            content.push(icon);\n        }\n        const label = new Label({\n            text: \"{label}\",\n        });\n        label.attachBrowserEvent(\"click\", () => {\n            this.handleSelectDataSource(oContext.getObject().getDataSource());\n        });\n        content.push(label);\n        const treeItem = new SearchFacetHierarchyStaticTreeItem(\"\", {\n            content: content,\n            selectLine: {\n                parts: [\"/queryFilter\", \"dataSourceId\"],\n                formatter: function (queryFilter, dataSourceId) {\n                    return queryFilter.dataSource.id === dataSourceId;\n                },\n            },\n        });\n        return treeItem;\n    }\n\n    createListItem(): StandardListItem {\n        return new StandardListItem(\"\", {\n            type: ListType.Active,\n            title: \"{dataSource/label}\",\n            tooltip: \"{dataSource/label}\",\n            icon: \"{dataSource/icon}\",\n            customData: [\n                new CustomData({\n                    key: \"test-id-collection\",\n                    value: \"{dataSource/label}\",\n                    writeToDom: true,\n                }),\n            ],\n            selected: {\n                parts: [{ path: \"/queryFilter\" }, { path: \"dataSource\" }],\n                formatter(queryFilter, dataSource) {\n                    const model = this.getModel() as SearchModel;\n                    const { searchInAreaOverwriteMode } = model.config;\n                    if (\n                        searchInAreaOverwriteMode &&\n                        model.getStaticHierarchyFilterConditions().length === 1\n                    ) {\n                        return false;\n                    }\n                    return queryFilter.dataSource === dataSource;\n                },\n            },\n        });\n    }\n\n    static renderer = {\n        apiVersion: 2,\n    };\n}\n"],"mappings":"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","ignoreList":[]}