{"version":3,"file":"SearchFacetBarChart-dbg.js","names":["sap","ui","define","__i18n","ComparisonMicroChart","ComparisonMicroChartData","Control","sap_m_library","Element","_interopRequireDefault","obj","__esModule","default","i18n","ValueColor","SearchFacetBarChart","extend","renderer","apiVersion","render","oRm","oControl","openStart","openEnd","oComparisonMicroChart","width","colorPalette","tooltip","shrinkable","options","oSearchFacetDialog","setWidth","addStyleClass","addEventDelegate","onAfterRendering","chartDom","document","getElementById","getId","querySelector","classList","add","selectedFacetItem","getBindingContext","getObject","getDomRef","setAttribute","title","dimension","bind","barItems","getAggregation","barItems2","getProperty","length","iMissingCnt","barItem","addData","renderControl","close","metadata","properties","aItems","type","aggregations","items","multiple","constructor","_constructor","sId","settings","Control.prototype.constructor.call","bindAggregation","path","factory","oComparisonMicroChartData","value","color","formatter","isSelected","res","Good","Neutral","parts","label","displayValue","press","oEvent","context","getSource","model","getModel","data","selected","filterCondition","onDetailPageSelectionChangeCharts","removeFilterCondition","addFilterCondition","_onAfterRendering","domRef","facetIconTabBar","closest","infoZeile","oInfoZeile","id","setVisible","message","getText","setText","rerender"],"sources":["SearchFacetBarChart.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\nimport i18n from \"../../../../i18n\";\nimport ComparisonMicroChart, {\n    ComparisonMicroChart$PressEvent,\n} from \"sap/suite/ui/microchart/ComparisonMicroChart\";\nimport ComparisonMicroChartData from \"sap/suite/ui/microchart/ComparisonMicroChartData\";\nimport Control, { $ControlSettings } from \"sap/ui/core/Control\";\nimport { ValueColor } from \"sap/m/library\";\nimport RenderManager from \"sap/ui/core/RenderManager\";\nimport SearchModel from \"sap/esh/search/ui/SearchModel\";\nimport FacetItem from \"../../../../FacetItem\";\nimport { ComplexCondition } from \"../../../../sinaNexTS/sina/ComplexCondition\";\nimport Label from \"sap/m/Label\";\nimport SearchFacetDialog from \"../../SearchFacetDialog\";\nimport Facet from \"../../../../Facet\";\nimport Element from \"sap/ui/core/Element\";\n\nexport interface $SearchFacetBarChartSettings extends $ControlSettings {\n    aItems: Array<ComparisonMicroChartData>;\n    items: Array<ComparisonMicroChartData>;\n    oSearchFacetDialog: SearchFacetDialog;\n}\n\n/**\n * @namespace sap.esh.search.ui.controls\n */\nexport default class SearchFacetBarChart extends Control {\n    static readonly metadata = {\n        properties: {\n            aItems: {\n                type: \"object\",\n            },\n            oSearchFacetDialog: {\n                type: \"sap.esh.search.ui.controls.SearchFacetDialog\",\n            },\n        },\n        aggregations: {\n            items: {\n                type: \"sap.suite.ui.microchart.ComparisonMicroChartData\",\n                multiple: true,\n            },\n        },\n    };\n    options: Partial<$SearchFacetBarChartSettings>;\n    iMissingCnt: number;\n\n    constructor(sId?: string, settings?: Partial<$SearchFacetBarChartSettings>) {\n        super(sId, settings);\n\n        this.options = settings || {};\n        this.bindAggregation(\"items\", {\n            path: \"items\",\n            factory: (): ComparisonMicroChartData => {\n                const oComparisonMicroChartData = new ComparisonMicroChartData({\n                    title: { path: \"label\" },\n                    value: { path: \"value\" },\n                    color: {\n                        path: \"selected\",\n                        formatter: (isSelected: boolean): string => {\n                            let res;\n                            if (isSelected) {\n                                res = ValueColor.Good;\n                            } else {\n                                res = ValueColor.Neutral;\n                            }\n                            return res;\n                        },\n                    },\n                    tooltip: {\n                        parts: [{ path: \"label\" }, { path: \"value\" }],\n                        formatter: (label, value) => {\n                            return label + \": \" + value;\n                        },\n                    },\n                    displayValue: { path: \"valueLabel\" },\n                    press: (oEvent: ComparisonMicroChart$PressEvent) => {\n                        const context = (oEvent.getSource() as Control).getBindingContext();\n                        const model = context.getModel() as SearchModel;\n                        const data = context.getObject() as FacetItem;\n                        const isSelected = data.selected;\n                        const filterCondition = data.filterCondition as ComplexCondition; // ToDo\n\n                        if (isSelected) {\n                            // deselect (remove filter)\n                            if (this.options.oSearchFacetDialog) {\n                                this.options.oSearchFacetDialog.onDetailPageSelectionChangeCharts(oEvent);\n                            } else {\n                                model.removeFilterCondition(filterCondition, true);\n                            }\n                        } else if (this.options.oSearchFacetDialog) {\n                            // select (set filter), first for searchFacetDialog\n                            this.options.oSearchFacetDialog.onDetailPageSelectionChangeCharts(oEvent);\n                        } else {\n                            // select (set filter), without searchFacetDialog / for small facets\n                            model.addFilterCondition(filterCondition, true);\n                        }\n                    },\n                });\n                return oComparisonMicroChartData;\n            },\n        });\n    }\n\n    static renderer = {\n        apiVersion: 2,\n        render(oRm: RenderManager, oControl: SearchFacetBarChart): void {\n            // render start of tile container\n            oRm.openStart(\"div\", oControl);\n            oRm.openEnd();\n\n            const oComparisonMicroChart = new ComparisonMicroChart(\"\", {\n                width: \"90%\",\n                colorPalette: [], // the colorPalette merely stops the evaluation of the bar with 'neutral', 'good' etc\n                tooltip: \"\",\n                shrinkable: true,\n            } as any) as any;\n\n            if (oControl.options?.oSearchFacetDialog) {\n                oComparisonMicroChart.setWidth(\"95%\");\n                oComparisonMicroChart.addStyleClass(\"sapUshellSearchFacetBarChartLarge\");\n            } else {\n                oComparisonMicroChart.addStyleClass(\"sapUshellSearchFacetBarChart\");\n            }\n\n            oComparisonMicroChart.addEventDelegate({\n                onAfterRendering: function () {\n                    const chartDom = document.getElementById(this.getId());\n                    if (chartDom && chartDom.querySelector(\".Good\")) {\n                        chartDom.classList.add(\"sapUshellSearchFacetBarChartSelected\");\n                    }\n                    const selectedFacetItem = this.getBindingContext().getObject() as Facet;\n                    oComparisonMicroChart\n                        .getDomRef()\n                        .setAttribute(\n                            \"data-test-id-facet-dimension-value\",\n                            `${selectedFacetItem.title}-${selectedFacetItem.dimension}`\n                        );\n                }.bind(oControl),\n            });\n\n            let barItems = oControl.getAggregation(\"items\") as Array<ComparisonMicroChartData>;\n            const barItems2 = oControl.getProperty(\"aItems\");\n            if (barItems.length === 0 && barItems2) {\n                barItems = barItems2;\n            }\n            let iMissingCnt = 0;\n            for (const barItem of barItems) {\n                if (!oControl.options.oSearchFacetDialog) {\n                    if (barItem.getProperty(\"value\")) {\n                        oComparisonMicroChart.addData(barItem);\n                    } else {\n                        iMissingCnt++;\n                    }\n                } else {\n                    oComparisonMicroChart.addData(barItem);\n                }\n            }\n            oControl.iMissingCnt = iMissingCnt;\n            oRm.renderControl(oComparisonMicroChart);\n\n            // render end of tile container\n            oRm.close(\"div\");\n        },\n    };\n\n    onAfterRendering(): void {\n        const domRef = this.getDomRef() as HTMLElement;\n        const facetIconTabBar = domRef.closest(\".sapUshellSearchFacetIconTabBar\");\n        if (!facetIconTabBar) {\n            return;\n        }\n        const infoZeile = facetIconTabBar.querySelector(\".sapUshellSearchFacetInfoZeile\") as HTMLElement;\n        if (!infoZeile) {\n            return;\n        }\n        const oInfoZeile = Element.getElementById(infoZeile.id) as Label;\n        if (this.iMissingCnt > 0) {\n            oInfoZeile.setVisible(true);\n            const message = i18n.getText(\"infoZeileNumberMoreSelected\", [this.iMissingCnt]);\n            oInfoZeile.setText(message);\n            oInfoZeile.rerender();\n        } else {\n            oInfoZeile.setVisible(false);\n        }\n    }\n}\n"],"mappings":"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","ignoreList":[]}