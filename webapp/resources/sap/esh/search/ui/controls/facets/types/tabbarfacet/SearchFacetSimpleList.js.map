{"version":3,"file":"SearchFacetSimpleList.js","names":["sap","ui","define","__SearchFacetSimpleListItem","List","sap_m_library","____FacetTypeUI","______eventlogging_UserEvents","__errors","Element","______sinaNexTS_sina_DataSource","_interopRequireDefault","obj","__esModule","default","SearchFacetSimpleListItem","ListMode","ListSeparators","FacetTypeUI","UserEventType","errors","DataSource","SearchFacetSimpleList","extend","renderer","apiVersion","metadata","properties","facetType","type","defaultValue","constructor","_constructor","sId","settings","facetListGenericSettings","List.prototype.constructor.call","this","setProperty","setMode","SingleSelectMaster","setShowSeparators","None","setIncludeItemInSelection","attachSelectionChange","oEvent","getProperty","Attribute","handleItemPress","attachItemPress","oModel","getModel","listItem","getParameter","oSelectedItem","getBindingContext","getObject","config","searchScopeWithoutAll","filterCondition","allDataSource","addStyleClass","data","_handleItemPress","getSelected","adjustFilters","addFilterCondition","eventLogger","logEvent","FACET_FILTER_ADD","referencedAttribute","facetAttribute","clickedValue","value","clickedLabel","label","clickedPosition","getList","getItems","indexOf","dataSourceKey","getDataSource","id","removeFilterCondition","FACET_FILTER_DEL","onAfterRendering","_onAfterRendering","List.prototype.onAfterRendering.call","domRef","getDomRef","infoZeile","closest","querySelector","oInfoZeile","getElementById","setVisible","switchFacetType","_switchFacetType","items","path","template","isDataSource","listMode","getSearchInFacetListMode","currentItemData","getPath","err","oError","ConfigurationExitError","applicationComponent","MultiSelect","Error","bindItems"],"sources":["SearchFacetSimpleList.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\nimport SearchFacetSimpleListItem from \"./SearchFacetSimpleListItem\";\nimport List, { $ListSettings } from \"sap/m/List\";\nimport { ListMode } from \"sap/m/library\";\nimport { ListSeparators } from \"sap/m/library\";\nimport SearchModel from \"sap/esh/search/ui/SearchModel\";\nimport Label from \"sap/m/Label\";\nimport { ListBase$ItemPressEvent, ListBase$SelectionChangeEvent } from \"sap/m/ListBase\";\nimport { FacetTypeUI } from \"../../FacetTypeUI\";\nimport { UserEventType } from \"../../../../eventlogging/UserEvents\";\nimport FacetItem from \"../../../../FacetItem\";\nimport errors from \"../../../../error/errors\";\nimport Element from \"sap/ui/core/Element\";\nimport { DataSource } from \"../../../../sinaNexTS/sina/DataSource\";\n\nexport interface $SearchFacetSimpleListSettings extends $ListSettings {\n    facetType?: FacetTypeUI;\n}\n\n/**\n * Generic facet to be used for 'data sources' or 'attributes' (see property `facetType`)\n */\n\n/**\n * @namespace sap.esh.search.ui.controls\n */\nexport default class SearchFacetSimpleList extends List {\n    static readonly metadata = {\n        properties: {\n            facetType: {\n                type: \"string\",\n                defaultValue: FacetTypeUI.DataSource,\n            },\n        },\n    };\n\n    constructor(sId?: string, settings?: Partial<$SearchFacetSimpleListSettings>) {\n        let facetListGenericSettings;\n        if (settings?.facetType) {\n            facetListGenericSettings = { facetType: settings?.facetType };\n            delete settings.facetType;\n        }\n        super(sId, settings);\n\n        if (facetListGenericSettings?.facetType) {\n            this.setProperty(\"facetType\", facetListGenericSettings.facetType);\n        }\n\n        this.setMode(ListMode.SingleSelectMaster);\n        this.setShowSeparators(ListSeparators.None);\n        this.setIncludeItemInSelection(true);\n        this.attachSelectionChange((oEvent: ListBase$SelectionChangeEvent) => {\n            if (this.getProperty(\"facetType\") === FacetTypeUI.Attribute) {\n                this.handleItemPress(oEvent);\n            }\n        });\n        this.attachItemPress((oEvent: ListBase$ItemPressEvent): void => {\n            const oModel = this.getModel() as SearchModel;\n            const listItem = oEvent.getParameter(\"listItem\");\n            const oSelectedItem = listItem.getBindingContext().getObject() as FacetItem;\n            if (\n                oModel.config.searchScopeWithoutAll &&\n                oSelectedItem.filterCondition instanceof DataSource &&\n                oSelectedItem.filterCondition === oModel.allDataSource\n            ) {\n                return;\n            }\n            if (this.getProperty(\"facetType\") === FacetTypeUI.DataSource) {\n                this.handleItemPress(oEvent);\n            }\n        });\n        this.addStyleClass(\"sapUshellSearchFacet\");\n\n        // define group for F6 handling\n        this.data(\"sap-ui-fastnavgroup\", \"false\", true /* write into DOM */);\n    }\n\n    handleItemPress(oEvent: ListBase$SelectionChangeEvent): void {\n        const listItem = oEvent.getParameter(\"listItem\");\n        const oSelectedItem = listItem.getBindingContext().getObject() as FacetItem;\n        const oModel = this.getModel() as SearchModel;\n        const filterCondition = oSelectedItem.filterCondition;\n        if (listItem.getSelected()) {\n            // when filter conditions are changed, give a callback to adjust the conditions\n            if (typeof oModel.config.adjustFilters === \"function\") {\n                oModel.config.adjustFilters(oModel, filterCondition);\n            }\n            oModel.addFilterCondition(filterCondition);\n\n            oModel.eventLogger.logEvent({\n                type: UserEventType.FACET_FILTER_ADD,\n                referencedAttribute: oSelectedItem.facetAttribute,\n                clickedValue: oSelectedItem.value,\n                clickedLabel: oSelectedItem.label,\n                clickedPosition: (listItem as any).getList().getItems().indexOf(listItem),\n                dataSourceKey: oModel.getDataSource().id,\n            });\n        } else {\n            oModel.removeFilterCondition(oSelectedItem.filterCondition);\n            oModel.eventLogger.logEvent({\n                type: UserEventType.FACET_FILTER_DEL,\n                referencedAttribute: oSelectedItem.facetAttribute,\n                clickedValue: oSelectedItem.value,\n                clickedLabel: oSelectedItem.label,\n                clickedPosition: (listItem as any).getList().getItems().indexOf(listItem),\n                dataSourceKey: oModel.getDataSource().id,\n            });\n        }\n    }\n\n    onAfterRendering(oEvent): void {\n        super.onAfterRendering(oEvent);\n\n        // Use native DOM APIs to find the info row\n        const domRef = this.getDomRef();\n        if (!domRef) return;\n\n        const infoZeile = domRef\n            .closest(\".sapUshellSearchFacetIconTabBar\")\n            ?.querySelector(\".sapUshellSearchFacetInfoZeile\");\n\n        if (infoZeile) {\n            const oInfoZeile = Element.getElementById(infoZeile.id) as Label;\n            oInfoZeile.setVisible(false);\n        }\n    }\n\n    switchFacetType(facetType: FacetTypeUI): void {\n        const items = {\n            path: \"items\", // children of \"/facets\" (see SearchModel \"/facets/items\")\n            template: new SearchFacetSimpleListItem(\"\", {\n                isDataSource: facetType === FacetTypeUI.DataSource,\n            }),\n        };\n        switch (facetType) {\n            // attribute facet\n            case FacetTypeUI.Attribute: {\n                const oModel = this.getModel() as SearchModel;\n                let listMode;\n                if (oModel.config && typeof oModel.config.getSearchInFacetListMode === \"function\") {\n                    const currentItemData = oModel.getProperty(this.getBindingContext().getPath());\n                    try {\n                        listMode = oModel.config.getSearchInFacetListMode(currentItemData);\n                    } catch (err) {\n                        const oError = new errors.ConfigurationExitError(\n                            \"getSearchInFacetListMode\",\n                            oModel.config.applicationComponent,\n                            err\n                        );\n                        throw oError;\n                    }\n                }\n                this.setMode(listMode || ListMode.MultiSelect);\n                break;\n            }\n            // datasource facet\n            case FacetTypeUI.DataSource:\n                this.setMode(ListMode.SingleSelectMaster);\n                break;\n            default:\n                // unknown facet type\n                throw new Error(`unknown facet type ${facetType}.`);\n        }\n        this.bindItems(items);\n        this.setProperty(\"facetType\", facetType, true); // this validates and stores the new value\n    }\n\n    static renderer = {\n        apiVersion: 2,\n    };\n}\n"],"mappings":"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","ignoreList":[]}