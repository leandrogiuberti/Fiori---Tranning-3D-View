{"version":3,"file":"SearchFacetQuickSelectDataSource.js","names":["sap","ui","define","List","StandardListItem","sap_m_library","CustomData","Tree","CustomListItem","__SearchFacetHierarchyStaticTreeItem","Label","Icon","_____eventlogging_UserEvents","VBox","FlexBox","__i18n","_interopRequireDefault","obj","__esModule","default","FlexAlignItems","FlexJustifyContent","ListSeparators","ListMode","ListType","SearchFacetHierarchyStaticTreeItem","UserEventType","i18n","SearchFacetQuickSelectDataSource","extend","renderer","apiVersion","constructor","_constructor","sId","options","VBox.prototype.constructor.call","this","addStyleClass","header","justifyContent","SpaceBetween","alignItems","Center","items","text","getText","addItem","dataSourcesList","itemPress","event","itemControl","getParameter","item","getBindingContext","getObject","handleSelectDataSource","dataSource","oModel","getModel","userEventQuickSelectSwitch","type","QUICK_SELECT_SWITCH","dataSourceKey","id","eventLogger","logEvent","path","factory","oContext","object","createTree","createListItem","setShowSeparators","None","setMode","SingleSelectMaster","getSelectedItem","bind","_handleSelectDataSource","config","bResetSearchTermOnQuickSelectDataSourceItemPress","setSearchBoxTerm","adjustFilters","setDataSource","_createTree","tree","mode","includeItemInSelection","createTreeItem","toggleOpenState","toggleExpand","delegate","onAfterRendering","expandTreeNodes","addEventDelegate","content","_expandTreeNodes","facetModel","rootNode","expandTreeNodeRecursively","_expandTreeNodeRecursively","node","isRootNode","expanded","doExpandTreeNode","children","i","length","childNode","_doExpandTreeNode","getItems","itemNode","expand","_createTreeItem","iconUrl","icon","src","push","label","attachBrowserEvent","getDataSource","treeItem","selectLine","parts","formatter","queryFilter","dataSourceId","_createListItem","Active","title","tooltip","customData","key","value","writeToDom","selected","model","searchInAreaOverwriteMode","getStaticHierarchyFilterConditions"],"sources":["SearchFacetQuickSelectDataSource.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\nimport List, { $ListSettings } from \"sap/m/List\";\nimport StandardListItem from \"sap/m/StandardListItem\";\nimport { FlexAlignItems, FlexJustifyContent, ListSeparators } from \"sap/m/library\";\nimport { ListMode } from \"sap/m/library\";\nimport { ListType } from \"sap/m/library\";\nimport CustomData from \"sap/ui/core/CustomData\";\nimport Tree, { Tree$ToggleOpenStateEvent } from \"sap/m/Tree\";\nimport CustomListItem from \"sap/m/CustomListItem\";\nimport SearchFacetHierarchyStaticTreeItem from \"./SearchFacetHierarchyStaticTreeItem\";\nimport Label from \"sap/m/Label\";\nimport Icon from \"sap/ui/core/Icon\";\nimport SearchModel from \"sap/esh/search/ui/SearchModel\";\nimport { DataSource } from \"../../../sinaNexTS/sina/DataSource\";\nimport { QuickSelectSwitchEvent, UserEventType } from \"../../../eventlogging/UserEvents\";\nimport Context from \"sap/ui/model/Context\";\nimport VBox from \"sap/m/VBox\";\nimport FlexBox from \"sap/m/FlexBox\";\nimport i18n from \"../../../i18n\";\n\nexport interface QuickSelectDataSource {\n    dataSource: DataSource;\n    type: \"quickSelectDataSourceTreeNode\";\n    children: Array<{ dataSource: DataSource }>;\n}\n\n/**\n * Quick-select datasource facet\n */\n\n/**\n * @namespace sap.esh.search.ui.controls\n */\nexport default class SearchFacetQuickSelectDataSource extends VBox {\n    private tree: Tree;\n\n    constructor(sId?: string, options?: Partial<$ListSettings>) {\n        super(sId, options);\n        this.addStyleClass(\"sapUshellSearchFacetContainer\");\n\n        const header = new FlexBox({\n            justifyContent: FlexJustifyContent.SpaceBetween,\n            alignItems: FlexAlignItems.Center,\n            items: [new Label({ text: i18n.getText(\"quickSelectDataSourcesHeader\") })],\n        });\n        header.addStyleClass(\"sapUshellSearchFacetHeader\");\n        this.addItem(header);\n\n        const dataSourcesList = new List({\n            itemPress: (event) => {\n                const itemControl = event.getParameter(\"srcControl\");\n                const item = itemControl.getBindingContext().getObject() as QuickSelectDataSource;\n                this.handleSelectDataSource(item.dataSource);\n                const oModel = this.getModel() as SearchModel;\n                const userEventQuickSelectSwitch: QuickSelectSwitchEvent = {\n                    type: UserEventType.QUICK_SELECT_SWITCH,\n                    dataSourceKey: item.dataSource.id,\n                };\n                oModel.eventLogger.logEvent(userEventQuickSelectSwitch);\n            },\n            items: {\n                path: \"items\",\n                factory: (sId: string, oContext: Context) => {\n                    const object = oContext.getObject() as QuickSelectDataSource;\n                    if (object.type === \"quickSelectDataSourceTreeNode\") {\n                        // tree display (one catalog)\n                        return this.createTree();\n                    } else {\n                        // flat list (repo explorer)\n                        return this.createListItem();\n                    }\n                },\n            },\n        });\n        dataSourcesList.setShowSeparators(ListSeparators.None);\n        dataSourcesList.setMode(ListMode.SingleSelectMaster);\n        this.addItem(dataSourcesList);\n\n        // legacy: keep compatability for exit setQuickSelectDataSourceAllAppearsNotSelected\n        (this as any).getSelectedItem = dataSourcesList.getSelectedItem.bind(dataSourcesList);\n    }\n\n    handleSelectDataSource(dataSource: DataSource): void {\n        const oModel = this.getModel() as SearchModel;\n        // reset search term (even if selected item gets pressed again)\n        if (oModel.config.bResetSearchTermOnQuickSelectDataSourceItemPress) {\n            oModel.setSearchBoxTerm(\"\", false);\n        }\n        // when filter is changed (here data source), give a callback to adjust the conditions\n        if (typeof oModel.config.adjustFilters === \"function\") {\n            oModel.config.adjustFilters(oModel);\n        }\n        oModel.setDataSource(dataSource);\n    }\n\n    createTree(): CustomListItem {\n        this.tree = new Tree({\n            mode: ListMode.None,\n            includeItemInSelection: true,\n            items: {\n                path: \"children\",\n                factory: this.createTreeItem.bind(this),\n            },\n            toggleOpenState: function (event: Tree$ToggleOpenStateEvent) {\n                (event.getParameter(\"itemContext\") as any).getObject().toggleExpand();\n            },\n        });\n        const delegate = {\n            onAfterRendering: function () {\n                this.expandTreeNodes();\n            }.bind(this),\n        };\n        this.addEventDelegate(delegate, this);\n        return new CustomListItem({\n            content: this.tree,\n        });\n    }\n\n    expandTreeNodes(): void {\n        const facetModel = this.getBindingContext().getObject();\n        const rootNode = (facetModel as any).items[0]; // ToDo\n        this.expandTreeNodeRecursively(rootNode, true);\n    }\n\n    expandTreeNodeRecursively(node: any, isRootNode?: boolean): void {\n        if (node.expanded && !isRootNode) {\n            this.doExpandTreeNode(node);\n        }\n        if (!node.children) {\n            return;\n        }\n        for (let i = 0; i < node.children.length; ++i) {\n            const childNode = node.children[i];\n            this.expandTreeNodeRecursively(childNode);\n        }\n    }\n\n    doExpandTreeNode(node: any): void {\n        const items = this.tree.getItems();\n        for (let i = 0; i < items.length; ++i) {\n            const item = items[i];\n            const itemNode = item.getBindingContext().getObject();\n            if (itemNode === node) {\n                this.tree.expand(i);\n                return;\n            }\n        }\n    }\n\n    createTreeItem(sId: string, oContext: any): SearchFacetHierarchyStaticTreeItem {\n        const content = [];\n        const iconUrl = oContext.getObject().icon;\n        if (iconUrl) {\n            const icon = new Icon(\"\", {\n                src: \"{icon}\",\n            });\n            icon.addStyleClass(\"sapUiTinyMarginEnd\");\n            content.push(icon);\n        }\n        const label = new Label({\n            text: \"{label}\",\n        });\n        label.attachBrowserEvent(\"click\", () => {\n            this.handleSelectDataSource(oContext.getObject().getDataSource());\n        });\n        content.push(label);\n        const treeItem = new SearchFacetHierarchyStaticTreeItem(\"\", {\n            content: content,\n            selectLine: {\n                parts: [\"/queryFilter\", \"dataSourceId\"],\n                formatter: function (queryFilter, dataSourceId) {\n                    return queryFilter.dataSource.id === dataSourceId;\n                },\n            },\n        });\n        return treeItem;\n    }\n\n    createListItem(): StandardListItem {\n        return new StandardListItem(\"\", {\n            type: ListType.Active,\n            title: \"{dataSource/label}\",\n            tooltip: \"{dataSource/label}\",\n            icon: \"{dataSource/icon}\",\n            customData: [\n                new CustomData({\n                    key: \"test-id-collection\",\n                    value: \"{dataSource/label}\",\n                    writeToDom: true,\n                }),\n            ],\n            selected: {\n                parts: [{ path: \"/queryFilter\" }, { path: \"dataSource\" }],\n                formatter(queryFilter, dataSource) {\n                    const model = this.getModel() as SearchModel;\n                    const { searchInAreaOverwriteMode } = model.config;\n                    if (\n                        searchInAreaOverwriteMode &&\n                        model.getStaticHierarchyFilterConditions().length === 1\n                    ) {\n                        return false;\n                    }\n                    return queryFilter.dataSource === dataSource;\n                },\n            },\n        });\n    }\n\n    static renderer = {\n        apiVersion: 2,\n    };\n}\n"],"mappings":"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","ignoreList":[]}