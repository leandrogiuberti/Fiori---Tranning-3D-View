{"version":3,"file":"SearchResultGrid-dbg.js","names":["sap","ui","define","SearchHelper","GridContainer","ImageContent","GenericTile","TileContent","CheckBox","HBox","VBox","Toolbar","__SearchText","__SearchLink","ManagedObject","____SelectionMode","____sinaNexTS_sina_AttributeFormatType","_interopRequireDefault","obj","__esModule","default","SearchText","SearchLink","SelectionMode","AttributeFormatType","SearchResultGrid","extend","renderer","apiVersion","constructor","_constructor","sId","options","GridContainer.prototype.constructor.call","bindAggregation","path","factory","id","context","item","getObject","checkboxContent","headerToolbar","imageContent","tileContainer","oTitle","titleDescription","contentItems","data","attributes","design","content","addStyleClass","push","imageUrls","filter","attr","metadata","type","selected","select","ignoreNextTilePress","getItems","forEach","_syncSelectionCssClass","enabled","parts","visible","formatter","resultviewSelectionVisibility","resultviewSelectionMode","OneItem","addContent","length","value","src","escapeSettingsValue","imageFormat","format","Round","titleText","defaultNavigationTarget","titleAttributes","text","title","navigationTarget","detailAttributes","valueFormatted","items","oTile","tileContent","press","oEvent","publicModel","getModel","getProperty","getSource","getBindingContext","getPath","publicModelItem","getTileContent","setSelected","performNavigation","event","titleNavigation","onAfterRendering","_onAfterRendering","GridContainer.prototype.onAfterRendering.call","boldTagUnescaper","getDomRef","resultItemCustomStyleClassSetter","removeStyleClass"],"sources":["SearchResultGrid.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\nimport * as SearchHelper from \"sap/esh/search/ui/SearchHelper\";\nimport GridContainer, { $GridContainerSettings } from \"sap/f/GridContainer\";\nimport ImageContent from \"sap/m/ImageContent\";\nimport GenericTile from \"sap/m/GenericTile\";\nimport TileContent from \"sap/m/TileContent\";\nimport CheckBox from \"sap/m/CheckBox\";\nimport HBox from \"sap/m/HBox\";\nimport VBox from \"sap/m/VBox\";\nimport { ResultSetItem, ResultSetItemAttribute } from \"../../ResultSetApi\";\nimport { NavigationTarget } from \"../../sinaNexTS/sina/NavigationTarget\";\nimport Toolbar from \"sap/m/Toolbar\";\nimport SearchText from \"./SearchText\";\nimport SearchLink from \"../SearchLink\";\nimport ManagedObject from \"sap/ui/base/ManagedObject\";\nimport { SelectionMode } from \"../../SelectionMode\";\nimport { AttributeFormatType } from \"../../sinaNexTS/sina/AttributeFormatType\";\n\n/**\n * @namespace sap.esh.search.ui.controls\n */\nexport default class SearchResultGrid extends GridContainer {\n    private ignoreNextTilePress;\n\n    constructor(sId?: string, options?: $GridContainerSettings) {\n        super(sId, options);\n\n        this.bindAggregation(\"items\", {\n            path: \"publicSearchModel>/results/items\",\n            factory: (id, context): GenericTile => {\n                const item = context.getObject() as ResultSetItem;\n                let checkboxContent;\n                let headerToolbar: Toolbar;\n                let imageContent: ImageContent;\n                let tileContainer;\n                let oTitle;\n                let titleDescription;\n                const contentItems = [];\n                if (item.data.attributes) {\n                    headerToolbar = new Toolbar({ design: \"Transparent\", content: [] }).addStyleClass(\n                        \"sapUiTinyMarginBottom\"\n                    );\n                    contentItems.push(headerToolbar);\n                    const imageUrls: Array<ResultSetItemAttribute> = item.data.attributes.filter((attr) => {\n                        return attr?.metadata?.type === \"ImageUrl\"; // ToDo -> attribute 'HASHIERARCHYNODECHILD' has no property 'metadata'\n                    });\n                    checkboxContent = new CheckBox(`${id}--tileCheckBox`, {\n                        selected: { path: \"publicSearchModel>selected\" },\n                        select: () => {\n                            // console.log(\"SELECTION: tile checkbox, select event\");\n                            this.ignoreNextTilePress = true; // prevent navigation when selecting checkbox\n                            this.getItems().forEach((item) => {\n                                this._syncSelectionCssClass(item);\n                            });\n                        },\n                        enabled: {\n                            parts: [{ path: \"publicSearchModel>selectionEnabled\" }],\n                        },\n                        visible: {\n                            parts: [\n                                { path: \"publicSearchModel>/resultviewSelectionVisibility\" },\n                                { path: \"publicSearchModel>/config/resultviewSelectionMode\" },\n                            ],\n                            formatter: (resultviewSelectionVisibility, resultviewSelectionMode) => {\n                                return (\n                                    resultviewSelectionVisibility &&\n                                    resultviewSelectionMode !== SelectionMode.OneItem\n                                );\n                            },\n                        },\n                    });\n                    headerToolbar.addContent(checkboxContent);\n                    if (imageUrls.length > 0 && typeof imageUrls[0].value === \"string\") {\n                        imageContent = new ImageContent(`${id}-Image`, {\n                            src: ManagedObject.escapeSettingsValue(imageUrls[0].value as string),\n                        }).addStyleClass(\"sapUiMediumMarginBegin\");\n                        const imageFormat = imageUrls[0].metadata.format;\n                        if (imageFormat === AttributeFormatType.Round) {\n                            imageContent.addStyleClass(\"sapUshellResultListGrid-ImageContainerRound\");\n                        }\n                    }\n                    // title link\n                    let titleText;\n                    if (item.data?.defaultNavigationTarget) {\n                        if (item.data.titleAttributes.length > 0) {\n                            oTitle = new SearchLink(`${id}-Title`, {\n                                text: ManagedObject.escapeSettingsValue(item.title),\n                                navigationTarget: item.data.defaultNavigationTarget,\n                            });\n                            contentItems.push(oTitle);\n                        } else {\n                            oTitle = new SearchText(\"\", {\n                                text: ManagedObject.escapeSettingsValue(\n                                    item.data.defaultNavigationTarget.text ||\n                                        \"No Title (def. nav. target w/o text)\"\n                                ),\n                            });\n                            contentItems.push(oTitle);\n                        }\n                    } else if (item.data.titleAttributes.length > 0) {\n                        oTitle = new SearchText(\"\", {\n                            text: ManagedObject.escapeSettingsValue(item.title),\n                        });\n                        contentItems.push(oTitle);\n                    } else if (item.data.detailAttributes.length > 0) {\n                        titleText = item.data.detailAttributes[0].valueFormatted;\n                        oTitle = new SearchText(\"\", {\n                            text: ManagedObject.escapeSettingsValue(titleText),\n                        });\n                        contentItems.push(oTitle);\n                    }\n                    if (imageContent) {\n                        contentItems.push(imageContent);\n                    }\n                    tileContainer = new VBox({\n                        items: [headerToolbar, new VBox({ items: contentItems })],\n                    });\n                } else {\n                    // robustness for app search tiles (grid not rendered but updated based on search results!!!)\n                    if (item.data[\"title\"]) {\n                        oTitle = item.data[\"title\"];\n                        titleDescription = item.data[\"subtitle\"];\n                    }\n                    contentItems.push(new VBox({ items: [oTitle, titleDescription] }));\n                    tileContainer = new HBox({ items: contentItems });\n                }\n                const oTile: GenericTile = new GenericTile(`${id}-resultItemTile`, {\n                    tileContent: new TileContent(`${id}-resultItemTileContent`, {\n                        content: tileContainer,\n                    }),\n                    press: (oEvent) => {\n                        if (this.ignoreNextTilePress) {\n                            this.ignoreNextTilePress = false;\n                            return;\n                        }\n                        const publicModel = this.getModel(\"publicSearchModel\");\n                        const data = publicModel.getProperty(\n                            oEvent.getSource().getBindingContext(\"publicSearchModel\").getPath()\n                        ).data;\n                        if (\n                            publicModel.getProperty(\"/config/resultviewSelectionMode\") ===\n                            SelectionMode.OneItem\n                        ) {\n                            const publicModelItem = oEvent\n                                .getSource()\n                                .getTileContent()[0]\n                                .getBindingContext(\"publicSearchModel\")\n                                .getObject() as ResultSetItem;\n                            publicModelItem.setSelected(!publicModelItem.selected);\n                        } else {\n                            const defaultNavigationTarget = data.defaultNavigationTarget;\n                            if (typeof defaultNavigationTarget?.performNavigation === \"function\") {\n                                defaultNavigationTarget.performNavigation({ event: oEvent });\n                            }\n                            const titleNavigation: NavigationTarget = data.titleNavigation;\n                            if (typeof titleNavigation?.performNavigation === \"function\") {\n                                titleNavigation.performNavigation({ event: oEvent });\n                            }\n                        }\n                        this.getItems().forEach((item) => {\n                            this._syncSelectionCssClass(item);\n                        });\n                    },\n                }).addStyleClass(\"sapElisaGridTile\");\n                return oTile;\n            },\n        });\n        this.addStyleClass(\"sapUshellResultListGrid\");\n    }\n\n    onAfterRendering(oEvent): void {\n        super.onAfterRendering(oEvent);\n        // unescape bold tags\n        SearchHelper.boldTagUnescaper(this.getDomRef() as HTMLElement);\n        // apply custom style class to all result items based on property 'customItemStyleClass'\n        SearchHelper.resultItemCustomStyleClassSetter(this);\n        // sync background selection style\n        this.getItems().forEach((item) => {\n            this._syncSelectionCssClass(item);\n        });\n    }\n\n    // sync the CSS class for selection state\n    private _syncSelectionCssClass(item): void {\n        const selected = item.getBindingContext(\"publicSearchModel\").getProperty(\"selected\");\n        if (selected) {\n            item.addStyleClass(\"sapUshellSearchResultGridTile-Selected\");\n        } else {\n            item.removeStyleClass(\"sapUshellSearchResultGridTile-Selected\");\n        }\n    }\n\n    static renderer = {\n        apiVersion: 2,\n    };\n}\n"],"mappings":"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","ignoreList":[]}