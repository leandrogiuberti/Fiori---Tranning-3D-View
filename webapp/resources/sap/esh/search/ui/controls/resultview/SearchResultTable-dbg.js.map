{"version":3,"file":"SearchResultTable-dbg.js","names":["sap","ui","define","__i18n","__SearchResultTableFormatter","__SearchResultTableP13NPersonalizer","Table","ColumnResizer","Column","ColumnListItem","CustomListItem","____SearchResultTableColumnType","__SearchText","__SearchLink","Element","sap_m_library","HBox","Button","Icon","____sinaNexTS_sina_NavigationTarget","ActionSheet","ManagedObject","merge","Log","__ErrorHandler","FlexItemData","__UIEvents","EventBus","____SelectionMode","_interopRequireDefault","obj","__esModule","default","i18n","SearchResultTableFormatter","SearchResultTableP13NPersonalizer","TableColumnType","SearchText","SearchLink","ListMode","ListType","PlacementType","PopinDisplay","PopinLayout","NavigationTarget","ErrorHandler","UIEvents","SelectionMode","SearchResultTable","extend","renderer","apiVersion","constructor","_constructor","sId","options","Table.prototype.constructor.call","useStableIds","log","getLogger","errorHandler","getInstance","assembleTable","_assembleTable","oModel","bindProperty","parts","path","formatter","multiSelectionEnabled","resultviewSelectionMode","resultviewSelectionVisibility","MultipleItems","MultiSelect","None","OneItem","SingleSelectMaster","setProperty","attachSelectionChange","oEvent","listItem","getParameter","updateMultiSelectionSelected","formatVisible","bind","setNoDataText","getText","update","config","FF_resizeResultTableColumns","setupColumnResizable","addStyleClass","_formatVisible","resultViewType","count","visible","getModel","searchResultTablePersonalization","tablePersonalizer","initialize","_update","getBinding","bindTableColumns","bindTableItems","updateBindings","_bindTableColumns","bindAggregation","factory","column","getStableId","header","text","wrapping","width","getHeader","_bindTableItems","id","bData","assembleTableItems","_assembleTableItems","getObject","type","sortCellsInRows","getPath","assembleTableMainItem","_assembleTableMainItem","columnListItem","selected","resultviewMasterDetailMode","newType","pressFunction","notifySubscribers","ESHShowResultDetail","publish","Navigation","attachPress","Active","detachPress","Inactive","customItemStyleClass","subPath","searchResultTableCell","TITLE","titleUrl","hasTargetFunction","enabled","titleNavigation","targetFunction","targetUrl","length","titleLink","titleIconUrl","navigationTarget","setIcon","getAggregation","oIcon","src","escapeSettingsValue","isHighlighted","returnObject","titleInfoIconUrl","dynamicTooltip","titleInfoIconTooltip","titleInfoIcon","tooltip","setLayoutData","growFactor","minWidth","items","layoutData","justifyContent","fitContainer","RELATED_APPS","relatedAppsButton","icon","press","oldActionSheet","getElementById","getId","destroy","navigationObjects","navigationButtons","navigationButton","pressButton","event","navigationObject","performNavigation","i","destroyControl","push","actionSheet","buttons","placement","Auto","attachAfterClose","openBy","defaultNavigationTarget","attributeLink","setNavigationTarget","setText","value","EXTEND","extendTableColumn","bindingFunction","e","onError","cell","cellIcon","_sortCellsInRows","rowPath","rows","row","getProperty","cells","getSortedCells","_getSortedCells","sortedCells","columns","getTableColumns","p13NColumnName","_setupColumnResizable","that","columnResizer","attachColumnResize","setTimeout","saveTableColumns","addDependent","setupPopin","_setupPopin","setPopinLayout","Block","visibleCloumns","getColumns","forEach","setDemandPopin","setPopinDisplay","Inline","getVisible","setMinScreenWidth","setupColumnsAbsoluteWidth","_setupColumnsAbsoluteWidth","domRef","getDomRef","table","querySelector","tableWidth","offsetWidth","undefined","selectBoxWidth","selCol","searchResultTableFormatter","absoluteColumnWidthSum","visibleColumnsWithRelativeWidth","widthInPixel","getColumnWidthInPixel","defaultColumnWidth","borderWidth","singleWidth","Math","trunc","setTableColumns","_getStableId","parentId","postfixId","separator","_destroyControl","control","onBeforeRendering","_onBeforeRendering","onAfterRendering","_onAfterRendering","noDataCell","setAttribute","tableTitleRow","getSearchCompositeControlInstanceByChildControl","countBreadcrumbsHiddenElement"],"sources":["SearchResultTable.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\nimport i18n from \"../../i18n\";\nimport SearchModel from \"../../SearchModel\";\nimport SearchResultTableFormatter, {\n    Cell,\n    Row,\n    Column as FormattedColumn,\n} from \"../../SearchResultTableFormatter\";\nimport SearchResultTableP13NPersonalizer from \"../../SearchResultTableP13NPersonalizer\";\nimport Table, { $TableSettings } from \"sap/m/Table\";\nimport ColumnResizer from \"sap/m/plugins/ColumnResizer\";\nimport Column from \"sap/m/Column\";\nimport ColumnListItem from \"sap/m/ColumnListItem\";\nimport CustomListItem from \"sap/m/CustomListItem\";\nimport { TableColumnType } from \"../../SearchResultTableColumnType\";\nimport SearchText from \"./SearchText\";\nimport SearchLink from \"../SearchLink\";\nimport Element from \"sap/ui/core/Element\";\nimport { ListMode, ListType, PlacementType, PopinDisplay, PopinLayout } from \"sap/m/library\";\nimport HBox from \"sap/m/HBox\";\nimport Button from \"sap/m/Button\";\nimport Icon from \"sap/ui/core/Icon\";\nimport { NavigationTarget } from \"../../sinaNexTS/sina/NavigationTarget\";\nimport ActionSheet from \"sap/m/ActionSheet\";\nimport Event from \"sap/ui/base/Event\";\nimport ManagedObject from \"sap/ui/base/ManagedObject\";\nimport Context from \"sap/ui/model/Context\";\nimport merge from \"sap/base/util/merge\";\nimport Log from \"sap/base/Log\";\nimport ErrorHandler from \"../../error/ErrorHandler\";\nimport FlexItemData from \"sap/m/FlexItemData\";\nimport UIEvents from \"../../UIEvents\";\nimport EventBus from \"sap/ui/core/EventBus\";\nimport { SelectionMode } from \"../../SelectionMode\";\nimport { ListBase$SelectionChangeEvent } from \"sap/m/ListBase\";\n\n/**\n * @namespace sap.esh.search.ui.controls\n */\n\nexport default class SearchResultTable extends Table {\n    tablePersonalizer: SearchResultTableP13NPersonalizer;\n    private useStableIds = true;\n    private log = Log.getLogger(\"sap.esh.search.ui.controls.resultview.SearchResultTable\");\n    private errorHandler = ErrorHandler.getInstance();\n\n    static renderer = {\n        apiVersion: 2,\n    };\n\n    constructor(sId?: string, options?: $TableSettings) {\n        super(sId, options);\n    }\n\n    public assembleTable(oModel: SearchModel): void {\n        this.bindProperty(\"mode\", {\n            parts: [\n                { path: \"/multiSelectionEnabled\" },\n                { path: \"/config/resultviewSelectionMode\" },\n                { path: \"/resultviewSelectionVisibility\" },\n            ],\n            formatter: (\n                multiSelectionEnabled: boolean,\n                resultviewSelectionMode: string,\n                resultviewSelectionVisibility: boolean\n            ): string => {\n                if (\n                    multiSelectionEnabled === true ||\n                    resultviewSelectionMode === SelectionMode.MultipleItems\n                ) {\n                    if (resultviewSelectionVisibility === true) {\n                        return ListMode.MultiSelect;\n                    } else {\n                        return ListMode.None; // see ColumnListItem, type=\"Navigation\"\n                    }\n                } else if (resultviewSelectionMode === SelectionMode.OneItem) {\n                    if (resultviewSelectionVisibility === true) {\n                        return ListMode.SingleSelectMaster;\n                    } else {\n                        return ListMode.None;\n                    }\n                } else {\n                    return ListMode.None;\n                }\n            },\n        });\n        this.setProperty(\"rememberSelections\", false);\n        /* this.bindProperty(\"includeItemInSelection\", {\n            parts: [{ path: \"/config/resultviewSelectionMode\" }],\n            formatter: (resultviewSelectionMode: SelectionMode): boolean =>\n                resultviewSelectionMode === SelectionMode.SingleSelect ||\n                    resultviewSelectionMode === SelectionMode.SingleSelectMaster,\n        }); */\n        this.attachSelectionChange((oEvent: ListBase$SelectionChangeEvent): void => {\n            // console.log(\"SELECTION: table, selectionChange event \");\n            // for list mode \"SingleSelectMaster\" -> select on row click\n            // -> thus checkbox change will not be fired, and we need to update selection here\n            const listItem = oEvent.getParameter(\"listItem\") as ColumnListItem;\n            listItem.setProperty(\n                \"selected\",\n                oEvent.getParameter(\"selected\"),\n                true // no re-rendering needed, change originates in HTML\n            );\n            oModel.updateMultiSelectionSelected();\n        });\n        this.bindProperty(\"visible\", {\n            parts: [{ path: \"/resultViewType\" }, { path: \"/count\" }],\n            formatter: this.formatVisible.bind(this),\n        });\n        this.setProperty(\"sticky\", [\"ColumnHeaders\"]);\n        this.setNoDataText(i18n.getText(\"noCloumnsSelected\"));\n\n        this.update();\n\n        // this.setFixedLayout(false);\n        if (oModel.config?.FF_resizeResultTableColumns === true) {\n            this.setupColumnResizable();\n            // this.setupColumnsAbsoluteWidth(); -> need table width in run time, call in onAfterRendering\n            this.addStyleClass(\"sapElisa-search-result-table-resizable\");\n        } else {\n            // this.setAutoPopinMode(true); // not working\n            // this.setupPopin(); -> need set setMinScreenWidth in run time, call in onAfterRendering\n            this.addStyleClass(\"sapElisa-search-result-table-might-popin\");\n        }\n\n        this.addStyleClass(\"sapElisa-search-result-table\");\n    }\n\n    private formatVisible(resultViewType: string, count: number): boolean {\n        const visible = resultViewType === \"searchResultTable\" && count !== 0;\n        if (visible && (this.getModel() as SearchModel)?.config?.searchResultTablePersonalization !== false) {\n            if (!this.tablePersonalizer) {\n                this.tablePersonalizer = new SearchResultTableP13NPersonalizer(\n                    this.getModel() as SearchModel\n                );\n            }\n            this.tablePersonalizer.initialize(this);\n        }\n        return visible;\n    }\n\n    public update() {\n        //TODO: remove it and test\n        if (!this.getBinding(\"columns\")) {\n            this.bindTableColumns();\n        }\n        //TODO: remove it and test\n        if (!this.getBinding(\"items\")) {\n            this.bindTableItems();\n        }\n\n        if (this.getModel()) {\n            (this.getModel() as SearchModel).updateBindings(true);\n        }\n    }\n\n    private bindTableColumns(): void {\n        this.bindAggregation(\"columns\", {\n            path: \"/tableColumns\",\n            factory: (sId: string /*, oContext: any*/) => {\n                const column = new Column(this.getStableId(sId, \"column\"), {\n                    header: new SearchText(this.getStableId(sId, \"headerLabel\"), {\n                        text: \"{name}\",\n                        wrapping: false,\n                    }),\n                    visible: \"{visible}\",\n                    width: \"{width}\",\n                });\n                column.getHeader().addStyleClass(\"sapUshellSearchResultListItem-MightOverflow\");\n                return column;\n            },\n        });\n    }\n\n    private bindTableItems(): void {\n        this.bindAggregation(\"items\", {\n            path: \"/tableRows\",\n            factory: (id: string, bData: Context) => {\n                return this.assembleTableItems(id, bData);\n            },\n        });\n    }\n\n    assembleTableItems(id: string, bData): ColumnListItem | CustomListItem {\n        // footer item\n        if (bData.getObject().type === \"footer\") {\n            return new CustomListItem(this.getStableId(id, \"item-footer\"), {\n                visible: false,\n            });\n        }\n        // body item\n        this.sortCellsInRows(bData.getPath()); // sort cells of current row ONLY\n        return this.assembleTableMainItem(id, bData);\n    }\n\n    assembleTableMainItem(id: string, bData): ColumnListItem {\n        const oModel = this.getModel() as SearchModel;\n        const columnListItem = new ColumnListItem(this.getStableId(id, \"item\"), {\n            selected: { path: \"selected\" },\n        }).addStyleClass(\"sapUshellSearchTable\");\n        columnListItem.bindProperty(\"type\", {\n            parts: [\n                { path: \"/config/resultviewMasterDetailMode\" },\n                { path: \"/config/resultviewSelectionMode\" },\n            ],\n            formatter: (resultviewMasterDetailMode: string, resultviewSelectionMode: SelectionMode) => {\n                let newType;\n                const pressFunction = (oEvent): void => {\n                    // notify subscribers\n                    oModel.notifySubscribers(UIEvents.ESHShowResultDetail);\n                    EventBus.getInstance().publish(UIEvents.ESHShowResultDetail, oEvent);\n                };\n                if (resultviewMasterDetailMode) {\n                    newType = ListType.Navigation;\n                    columnListItem.attachPress(pressFunction.bind(this));\n                } else if (resultviewSelectionMode === SelectionMode.OneItem) {\n                    newType = ListType.Active;\n                    columnListItem.detachPress(pressFunction);\n                } else {\n                    newType = ListType.Inactive;\n                    columnListItem.detachPress(pressFunction);\n                }\n                return newType;\n            },\n        });\n\n        if (bData.getObject().customItemStyleClass) {\n            columnListItem.addStyleClass(bData.getObject().customItemStyleClass);\n        }\n        columnListItem.bindAggregation(\"cells\", {\n            path: \"cells\",\n            factory: (subPath: string, bData) => {\n                const searchResultTableCell = bData.getObject() as Cell;\n                if (searchResultTableCell.type === TableColumnType.TITLE) {\n                    // build title cell\n                    let titleUrl = \"\";\n                    let hasTargetFunction = false;\n                    let enabled = true;\n                    const titleNavigation: NavigationTarget = searchResultTableCell.titleNavigation;\n                    if (titleNavigation instanceof NavigationTarget) {\n                        hasTargetFunction = typeof titleNavigation.targetFunction === \"function\";\n                        titleUrl = titleNavigation.targetUrl;\n                    }\n                    if (\n                        (typeof titleUrl !== \"string\" || titleUrl.length === 0) &&\n                        hasTargetFunction === false\n                    ) {\n                        enabled = false;\n                    }\n                    let titleLink;\n                    const titleIconUrl = searchResultTableCell.titleIconUrl;\n                    if (titleNavigation) {\n                        titleLink = new SearchLink(this.getStableId(subPath, \"link\"), {\n                            navigationTarget: titleNavigation,\n                            text: { path: \"value\" },\n                            wrapping: false,\n                        });\n                        titleLink.setIcon(searchResultTableCell.titleIconUrl);\n                    } else {\n                        titleLink = new SearchText(this.getStableId(subPath, \"link\"), {\n                            text: { path: \"value\" },\n                            wrapping: false,\n                        });\n                        if (titleIconUrl && !((titleLink.getAggregation(\"icon\") as Icon) instanceof Icon)) {\n                            const oIcon = new Icon(this.getStableId(subPath, \"icon\"), {\n                                src: ManagedObject.escapeSettingsValue(titleIconUrl),\n                            });\n                            titleLink.setIcon(oIcon);\n                        }\n                    }\n                    titleLink.addStyleClass(\"sapUshellSearchResultListItem-MightOverflow\");\n                    titleLink.addStyleClass(\"sapUshellSearchTableTitleLink\");\n                    if (searchResultTableCell.isHighlighted) {\n                        titleLink.addStyleClass(\"sapUshellSearchResultItem-AttributeValueHighlighted\");\n                    }\n                    let returnObject: SearchLink | SearchText | HBox = titleLink;\n                    const titleInfoIconUrl = searchResultTableCell.titleInfoIconUrl;\n                    const dynamicTooltip =\n                        searchResultTableCell.titleInfoIconTooltip &&\n                        searchResultTableCell.titleInfoIconTooltip.length\n                            ? searchResultTableCell.titleInfoIconTooltip\n                            : i18n.getText(\"collectionShared\"); // fallback to shared tooltip\n                    if (titleInfoIconUrl) {\n                        const titleInfoIcon = new Icon(this.getStableId(subPath, \"infoIcon\"), {\n                            src: ManagedObject.escapeSettingsValue(titleInfoIconUrl),\n                            tooltip: dynamicTooltip,\n                        }).addStyleClass(\"sapUshellSearchTableTitleInfoIcon\");\n                        if (!enabled) {\n                            titleInfoIcon.addStyleClass(\"sapUshellSearchTableTitleInfoIconDisabled\");\n                        }\n\n                        // titleInfoIcon is aligned to the right of the HBox\n                        titleLink.setLayoutData(new FlexItemData({ growFactor: 1, minWidth: \"0px\" }));\n                        titleInfoIcon.setLayoutData(new FlexItemData({ growFactor: 0, minWidth: \"0px\" }));\n                        returnObject = new HBox(this.getStableId(subPath, \"titleContainer\"), {\n                            items: [\n                                titleLink,\n                                new HBox({\n                                    items: [titleInfoIcon],\n                                    layoutData: new FlexItemData({ growFactor: 1 }), // Spacer to push titleInfoIcon to the right\n                                    justifyContent: \"End\", // Align titleInfoIcon to the right within the spacer\n                                }),\n                            ],\n                            fitContainer: true,\n                            width: \"100%\",\n                            justifyContent: \"Start\", // Align titleLink to the start of the HBox\n                        });\n\n                        // titleInfoIcon follows titleLink directly\n                        // titleLink.setLayoutData(new FlexItemData({ growFactor: 0, minWidth: \"0px\" }));\n                        // titleInfoIcon.setLayoutData(new FlexItemData({ growFactor: 1, minWidth: \"0px\" }));\n\n                        // returnObject = new HBox(this.getStableId(subPath, \"titleContainer\"), {\n                        //     items: [titleLink, titleInfoIcon],\n                        //     fitContainer: true,\n                        //     width: \"100%\",\n                        //     justifyContent: \"Start\",\n                        // });\n                    }\n                    return returnObject;\n                }\n\n                // build related objects:\n                // 1. button to open action sheet: relAppsButton\n                // 2. action sheet: relAppsActionSheet\n                // 3. navigation buttons in action sheet: navigationButton\n                if (searchResultTableCell.type === TableColumnType.RELATED_APPS) {\n                    const relatedAppsButton = new Button(this.getStableId(subPath, \"relAppsButton\"), {\n                        icon: \"sap-icon://action\",\n                        tooltip: i18n.getText(\"intents\"),\n                        press: () => {\n                            // destroy old action sheet\n                            const oldActionSheet = Element.getElementById(\n                                this.getStableId(relatedAppsButton.getId(), \"relAppsActionSheet\")\n                            ) as ActionSheet;\n                            if (oldActionSheet) {\n                                oldActionSheet.destroy();\n                                return;\n                            }\n\n                            // related app navigation buttons\n                            const navigationObjects: Array<NavigationTarget> =\n                                searchResultTableCell.navigationObjects;\n                            const navigationButtons = [];\n                            let navigationButton;\n                            const pressButton = (event: Event, navigationObject: NavigationTarget) => {\n                                if (navigationObject instanceof NavigationTarget) {\n                                    navigationObject.performNavigation({ event: event });\n                                }\n                            };\n                            for (let i = 0; i < navigationObjects.length; i++) {\n                                const navigationObject: NavigationTarget = navigationObjects[i];\n                                this.destroyControl(this.getStableId(subPath, `navButton${i}`)); // find a better solution\n                                navigationButton = new Button(this.getStableId(subPath, `navButton${i}`), {\n                                    text: ManagedObject.escapeSettingsValue(navigationObject?.text),\n                                    tooltip: ManagedObject.escapeSettingsValue(navigationObject?.text),\n                                });\n                                navigationButton.attachPress(navigationObject, pressButton);\n                                navigationButtons.push(navigationButton);\n                            }\n\n                            // related app pop over\n                            const actionSheet = new ActionSheet(\n                                this.getStableId(relatedAppsButton.getId(), \"relAppsActionSheet\"),\n                                {\n                                    buttons: navigationButtons,\n                                    placement: PlacementType.Auto,\n                                }\n                            );\n                            actionSheet.attachAfterClose(() => {\n                                actionSheet.destroy();\n                            });\n                            actionSheet.openBy(relatedAppsButton);\n                        },\n                    });\n                    relatedAppsButton.addStyleClass(\"sapElisaSearchTableRelatedAppsButton\"); // for test purposes\n                    return relatedAppsButton;\n                }\n\n                // build cell with default navigation\n                const navigationTarget = searchResultTableCell.defaultNavigationTarget;\n                if (navigationTarget instanceof NavigationTarget) {\n                    const attributeLink = new SearchLink(this.getStableId(subPath, \"attrLink\"), {\n                        navigationTarget: null,\n                        wrapping: false,\n                        tooltip: ManagedObject.escapeSettingsValue(searchResultTableCell.tooltip || \"\"), // preserve SearchResultFormatter defined tooltip (hierarchical attribute of DSP)\n                    });\n                    // lazy loading because of potential {} in the href will be interpreted as binding path by UI5\n                    attributeLink.setNavigationTarget(navigationTarget);\n                    attributeLink.setText(searchResultTableCell.value);\n                    attributeLink.addStyleClass(\"sapUshellSearchResultListItem-MightOverflow\");\n                    attributeLink.setIcon(searchResultTableCell.icon);\n                    return attributeLink;\n                }\n\n                if (searchResultTableCell.type === TableColumnType.EXTEND) {\n                    // 'extendTableColumn' deprecated as of version 1.141\n                    try {\n                        return oModel.config.extendTableColumn.bindingFunction(searchResultTableCell); // ToDo\n                    } catch (e) {\n                        this.errorHandler.onError(e);\n                    }\n                }\n\n                // build other cells:\n                // TableColumnType.TITLE_DESCRIPTION\n                // TableColumnType.DETAIL\n                const cell = new SearchText(this.getStableId(subPath, \"searchText\"), {\n                    text: { path: \"value\" },\n                    wrapping: false,\n                }).addStyleClass(\"sapUshellSearchResultListItem-MightOverflow\");\n\n                if (searchResultTableCell.icon) {\n                    const cellIcon = new Icon(this.getStableId(subPath, \"cellIcon\"), {\n                        src: ManagedObject.escapeSettingsValue(searchResultTableCell.icon),\n                    });\n                    cell.setIcon(cellIcon);\n                }\n\n                if (searchResultTableCell.isHighlighted) {\n                    cell.addStyleClass(\"sapUshellSearchResultItem-AttributeValueHighlighted\");\n                }\n                return cell;\n            },\n        });\n\n        return columnListItem;\n    }\n\n    private sortCellsInRows(rowPath?: string): void {\n        const oModel = this.getModel() as SearchModel;\n        let rows;\n        if (rowPath) {\n            const row = [oModel.getProperty(rowPath)][0] as Row;\n            row.cells = this.getSortedCells(row.cells);\n            oModel.setProperty(rowPath, row);\n        } else {\n            rows = oModel.getProperty(\"/tableRows\");\n            for (const row of rows) {\n                row.cells = this.getSortedCells(row.cells);\n            }\n            oModel.setProperty(\"/tableRows\", rows);\n        }\n    }\n\n    private getSortedCells(cells: Array<Cell>): Array<Cell> {\n        const sortedCells = [] as Array<Cell>;\n        const columns = (this.getModel() as SearchModel).getTableColumns(false);\n        for (const column of columns) {\n            for (const cell of cells) {\n                if (column.p13NColumnName === cell.p13NColumnName) {\n                    sortedCells.push(cell);\n                    break;\n                }\n            }\n        }\n        return sortedCells;\n    }\n\n    private setupColumnResizable(): void {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const that = this;\n        // that.setFixedLayout(false);\n        const columnResizer = new ColumnResizer();\n        columnResizer.attachColumnResize(() => {\n            /*  Bug: \n                    step 1. table has 2 columns, 2nd column has 100% width.\n                    step 2. resize 2nd column from right side (search UI right side boundary), set column width to 20 pixcel.\n                    step 3. reload UI, 2nd column has old 100% width, 20 pixcel width expected.\n                    Reason: ColumnResize event is triggered before new width set to column. New width is not saved. \n                    workaround: delay saving width.\n                */\n            setTimeout(function () {\n                (that.getModel() as SearchModel).saveTableColumns(\n                    (that.getModel() as SearchModel).getTableColumns(false)\n                );\n            }, 500);\n        });\n        that.addDependent(columnResizer);\n    }\n\n    private setupPopin(): void {\n        const oModel = this.getModel() as SearchModel;\n        // check !oModel.config?.FF_resizeResultTableColumns before calling this function\n        if (!oModel) {\n            return;\n        }\n\n        this.setPopinLayout(PopinLayout.Block);\n\n        let visibleCloumns = 0;\n        // const uiColumnsOrdered = this.getColumns().sort(this._byOrder); // sort columns by perso order, necessary for setMinScreenWidth()\n        this.getColumns().forEach(function (column) {\n            column.setDemandPopin(true);\n            column.setPopinDisplay(PopinDisplay.Inline);\n            if (column.getVisible()) {\n                visibleCloumns++;\n                column.setMinScreenWidth(12 * visibleCloumns + \"rem\");\n            }\n        });\n\n        // if (visibleCloumns <= 3) {\n        //     this.setFixedLayout(false);\n        // } else {\n        //     this.setFixedLayout(true);\n        // }\n    }\n\n    // private _byOrder(columnA, columnB): number {\n    //     if (columnA.getOrder() < columnB.getOrder()) {\n    //         return -1;\n    //     }\n    //     if (columnA.getOrder() > columnB.getOrder()) {\n    //         return 1;\n    //     }\n    //     return 0;\n    // }\n\n    private setupColumnsAbsoluteWidth(): void {\n        const oModel = this.getModel() as SearchModel;\n        // check oModel.config?.FF_resizeResultTableColumns before calling this function\n        if (!oModel) {\n            return;\n        }\n\n        const domRef = this.getDomRef() as HTMLElement;\n        const table = domRef ? (domRef.querySelector(\"table\") as HTMLElement) : null;\n        const tableWidth = table ? table.offsetWidth : undefined;\n        if (typeof tableWidth !== \"number\") {\n            return;\n        }\n\n        let selectBoxWidth = 0;\n        if (table) {\n            const selCol = table.querySelector(\"th.sapMListTblSelCol\");\n            if (selCol) {\n                selectBoxWidth = (selCol as HTMLElement).offsetWidth;\n            }\n        }\n\n        const columns = merge([], oModel.getTableColumns(false)) as Array<FormattedColumn>;\n        const searchResultTableFormatter = new SearchResultTableFormatter(oModel);\n        let absoluteColumnWidthSum = 0;\n        let visibleColumnsWithRelativeWidth = 0;\n\n        // Step 1: sum up absolute width, and count relative and visible columns\n        columns.forEach((column) => {\n            const widthInPixel = searchResultTableFormatter.getColumnWidthInPixel(column.width);\n            if (widthInPixel) {\n                // column of absolute width (end with px)\n                absoluteColumnWidthSum += widthInPixel;\n            } else {\n                // column of relative width (end with %, or undefined, ...)\n                column.width = searchResultTableFormatter.defaultColumnWidth; // overwrite (stored) different formatted width to default width, i.e. undefined\n                if (column.visible) {\n                    visibleColumnsWithRelativeWidth++;\n                }\n            }\n        });\n\n        // Step 2: average rest absulte width to relative columns (visible or invisible, 100% or 30% etc.)\n        if (visibleColumnsWithRelativeWidth === 0) {\n            return;\n        }\n        const borderWidth = 2; // avoid x-scroll bar in table after reset columns\n        const singleWidth =\n            Math.trunc(\n                (tableWidth - selectBoxWidth - absoluteColumnWidthSum) / visibleColumnsWithRelativeWidth -\n                    borderWidth\n            ) + \"px\";\n        columns.forEach((column) => {\n            const widthInPixel = searchResultTableFormatter.getColumnWidthInPixel(column.width);\n            if (!widthInPixel) {\n                // column of relative width (end with %, or undefined)\n                // column visible and invisible\n                column.width = singleWidth;\n            }\n        });\n\n        // Step 3: set width in search model\n        oModel.setTableColumns(columns, true);\n    }\n\n    private getStableId(parentId: string, postfixId: string, separator = \"-\"): string {\n        if (this.useStableIds) {\n            return `${parentId}${separator}${postfixId}`;\n        } else {\n            return \"\";\n        }\n    }\n\n    private destroyControl(id: string) {\n        const control = Element.getElementById(id);\n        if (control) {\n            control.destroy();\n        }\n    }\n\n    onBeforeRendering(): void {\n        // set popin for columns\n        // const oModel = this.getModel() as SearchModel;\n        // if (oModel.config?.FF_resizeResultTableColumns !== true) {\n        //     this.setupPopin();\n        // }\n    }\n\n    onAfterRendering(): void {\n        const oModel = this.getModel() as SearchModel;\n        // colspan for no data cell\n        const domRef = this.getDomRef() as HTMLElement;\n        const noDataCell = domRef?.querySelector(\"table > tbody > tr > td.sapMListTblCellNoData:first-child\");\n        if (noDataCell) {\n            noDataCell.setAttribute(\"colspan\", \"3\");\n        }\n\n        // aria-labelledby for table title row\n        const tableTitleRow = domRef?.querySelector(\"table > thead > tr:first-child\");\n        if (tableTitleRow) {\n            tableTitleRow.setAttribute(\n                \"aria-labelledby\",\n                oModel\n                    ?.getSearchCompositeControlInstanceByChildControl(this)\n                    ?.countBreadcrumbsHiddenElement.getId()\n            );\n        }\n\n        // absolute width for columns\n        if (oModel.config?.FF_resizeResultTableColumns === true) {\n            this.setupColumnsAbsoluteWidth();\n        }\n\n        // popin for columns\n        if (oModel.config?.FF_resizeResultTableColumns !== true) {\n            this.setupPopin();\n        }\n    }\n}\n"],"mappings":"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","ignoreList":[]}