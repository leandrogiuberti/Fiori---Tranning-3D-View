{"version":3,"file":"SearchResultList-dbg.js","names":["sap","ui","define","List","ResizeHandler","sap_m_library","____SelectionMode","ListMode","SelectionMode","SearchResultList","extend","renderer","apiVersion","constructor","_constructor","sId","options","List.prototype.constructor.call","addStyleClass","attachSelectionChange","oEvent","oModel","getModel","listItem","getParameter","setProperty","getBindingContext","getPath","updateMultiSelectionSelected","bindProperty","parts","path","formatter","multiSelectionEnabled","resultviewSelectionVisibility","resultviewSelectionMode","MultipleItems","None","OneItem","SingleSelectMaster","onAfterRendering","_onAfterRendering","args","prototype","apply","model","getProperty","enableSelectionMode","_prepareResizeHandler","resizeThresholds","windowWidthIndex","windowWidth","window","innerWidth","i","length","lastWindowWidthIndex","_resizeHandler","forceResize","currentWindowWidthIndex","aMyListItems","getItems","listItemContent","getContent","resizeEventHappened","register","resize","_resize","_enableSelectionMode","domRef","getDomRef","classList","add"],"sources":["SearchResultList.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\nimport List, { $ListSettings } from \"sap/m/List\";\nimport SearchModel from \"../../SearchModel\";\nimport ResizeHandler from \"sap/ui/core/ResizeHandler\";\nimport { ListMode } from \"sap/m/library\";\nimport { SelectionMode } from \"../../SelectionMode\";\nimport ListItemBase from \"sap/m/ListItemBase\";\n\n/**\n * @namespace sap.esh.search.ui.controls\n */\nexport default class SearchResultList extends List {\n    private _resizeHandler: (forceResize?: boolean) => void;\n\n    constructor(sId?: string, options?: $ListSettings) {\n        super(sId, options);\n        this.addStyleClass(\"searchResultList\");\n        this.attachSelectionChange((oEvent): void => {\n            // console.log(\"SELECTION: table, selectionChange event \");\n            // for list mode \"SingleSelectMaster\" -> select on row click\n            // -> thus checkbox change will not be fired, and we need to update selection here\n            const oModel = this.getModel() as SearchModel;\n            const listItem = oEvent.getParameter(\"listItem\") as ListItemBase;\n            oModel.setProperty(\n                `${listItem.getBindingContext().getPath()}/selected`,\n                oEvent.getParameter(\"selected\")\n            );\n            oModel.updateMultiSelectionSelected();\n        });\n        this.bindProperty(\"mode\", {\n            parts: [\n                { path: \"/multiSelectionEnabled\" },\n                { path: \"/resultviewSelectionVisibility\" },\n                { path: \"/config/resultviewSelectionMode\" },\n            ],\n            formatter: (\n                multiSelectionEnabled: boolean,\n                resultviewSelectionVisibility: boolean,\n                resultviewSelectionMode: SelectionMode\n            ): string => {\n                if (\n                    resultviewSelectionMode === SelectionMode.MultipleItems &&\n                    multiSelectionEnabled === true\n                ) {\n                    if (resultviewSelectionVisibility === true) {\n                        return ListMode.None; // result list item comes with its own checkbox\n                    } else {\n                        return ListMode.None; // see ColumnListItem, type=\"Navigation\"\n                    }\n                } else if (resultviewSelectionMode === SelectionMode.OneItem) {\n                    return ListMode.SingleSelectMaster;\n                } else {\n                    return ListMode.None;\n                }\n            },\n        });\n    }\n\n    onAfterRendering(...args: Array<any>): void {\n        // first let the original sap.m.List do its work\n        List.prototype.onAfterRendering.apply(this, args);\n\n        const model = this.getModel() as SearchModel;\n        const multiSelectionEnabled = model.getProperty(\"/multiSelectionEnabled\");\n        if (multiSelectionEnabled) {\n            this.enableSelectionMode();\n        }\n\n        this._prepareResizeHandler();\n    }\n\n    private _prepareResizeHandler(): void {\n        const resizeThresholds = [768, 1151];\n        const windowWidthIndex = () => {\n            const windowWidth = window.innerWidth;\n\n            if (windowWidth < resizeThresholds[0]) {\n                return 0;\n            }\n\n            for (let i = 0; i < resizeThresholds.length - 1; i++) {\n                if (windowWidth >= resizeThresholds[i] && windowWidth < resizeThresholds[i + 1]) {\n                    return i + 1;\n                }\n            }\n\n            return resizeThresholds.length;\n        };\n\n        let lastWindowWidthIndex = windowWidthIndex();\n        this._resizeHandler = (forceResize: boolean): void => {\n            const currentWindowWidthIndex = windowWidthIndex();\n            if (currentWindowWidthIndex != lastWindowWidthIndex || forceResize) {\n                lastWindowWidthIndex = currentWindowWidthIndex;\n                const aMyListItems = this.getItems();\n                for (const listItem of aMyListItems) {\n                    const listItemContent = (listItem as any).getContent() as any;\n                    if (listItemContent?.length > 0) {\n                        if (typeof listItemContent[0]?.resizeEventHappened === \"function\") {\n                            listItemContent[0]?.resizeEventHappened();\n                        }\n                    }\n                }\n            }\n        };\n\n        ResizeHandler.register(this, () => {\n            this._resizeHandler();\n        });\n    }\n\n    public resize() {\n        if (typeof this._resizeHandler !== \"undefined\") {\n            this._resizeHandler(true /* forceResize */);\n        }\n    }\n\n    public enableSelectionMode(): void {\n        const domRef = this.getDomRef();\n        if (domRef && domRef.classList) {\n            domRef.classList.add(\"sapUshellSearchResultList-ShowMultiSelection\");\n        }\n    }\n\n    static renderer = {\n        apiVersion: 2,\n    };\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAJAA,GAAA,CAAAC,EAAA,CAAAC,MAAA,gGAAAC,IAAA,EAAAC,aAAA,EAAAC,aAAA,EAAAC,iBAAA;EAAA;;EAAA,MAQSC,QAAQ,GAAAF,aAAA;EAAA,MACRG,aAAa,GAAAF,iBAAA;EAGtB;AACA;AACA;EAFA,MAGqBG,gBAAgB,GAASN,IAAI,CAAAO,MAAA;IAiHvCC,QAAQ,EAAG;MACdC,UAAU,EAAE;IAChB,CAAC;IAhHDC,WAAW,WAAAC,aAACC,GAAY,EAAEC,OAAuB,EAAE;MAC/CC,+BAAA,OAAMF,GAAG,EAAEC,OAAO;MAClB,IAAI,CAACE,aAAa,CAAC,kBAAkB,CAAC;MACtC,IAAI,CAACC,qBAAqB,CAAEC,MAAM,IAAW;QACzC;QACA;QACA;QACA,MAAMC,MAAM,GAAG,IAAI,CAACC,QAAQ,CAAC,CAAgB;QAC7C,MAAMC,QAAQ,GAAGH,MAAM,CAACI,YAAY,CAAC,UAAU,CAAiB;QAChEH,MAAM,CAACI,WAAW,CACd,GAAGF,QAAQ,CAACG,iBAAiB,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC,WAAW,EACpDP,MAAM,CAACI,YAAY,CAAC,UAAU,CAClC,CAAC;QACDH,MAAM,CAACO,4BAA4B,CAAC,CAAC;MACzC,CAAC,CAAC;MACF,IAAI,CAACC,YAAY,CAAC,MAAM,EAAE;QACtBC,KAAK,EAAE,CACH;UAAEC,IAAI,EAAE;QAAyB,CAAC,EAClC;UAAEA,IAAI,EAAE;QAAiC,CAAC,EAC1C;UAAEA,IAAI,EAAE;QAAkC,CAAC,CAC9C;QACDC,SAAS,EAAEA,CACPC,qBAA8B,EAC9BC,6BAAsC,EACtCC,uBAAsC,KAC7B;UACT,IACIA,uBAAuB,KAAK3B,aAAa,CAAC4B,aAAa,IACvDH,qBAAqB,KAAK,IAAI,EAChC;YACE,IAAIC,6BAA6B,KAAK,IAAI,EAAE;cACxC,OAAO3B,QAAQ,CAAC8B,IAAI,CAAC,CAAC;YAC1B,CAAC,MAAM;cACH,OAAO9B,QAAQ,CAAC8B,IAAI,CAAC,CAAC;YAC1B;UACJ,CAAC,MAAM,IAAIF,uBAAuB,KAAK3B,aAAa,CAAC8B,OAAO,EAAE;YAC1D,OAAO/B,QAAQ,CAACgC,kBAAkB;UACtC,CAAC,MAAM;YACH,OAAOhC,QAAQ,CAAC8B,IAAI;UACxB;QACJ;MACJ,CAAC,CAAC;IACN,CAAC;IAEDG,gBAAgB,WAAAC,kBAAC,GAAGC,IAAgB,EAAQ;MACxC;MACAvC,IAAI,CAACwC,SAAS,CAACH,gBAAgB,CAACI,KAAK,CAAC,IAAI,EAAEF,IAAI,CAAC;MAEjD,MAAMG,KAAK,GAAG,IAAI,CAACvB,QAAQ,CAAC,CAAgB;MAC5C,MAAMW,qBAAqB,GAAGY,KAAK,CAACC,WAAW,CAAC,wBAAwB,CAAC;MACzE,IAAIb,qBAAqB,EAAE;QACvB,IAAI,CAACc,mBAAmB,CAAC,CAAC;MAC9B;MAEA,IAAI,CAACC,qBAAqB,CAAC,CAAC;IAChC,CAAC;IAEOA,qBAAqB,WAAAA,sBAAA,EAAS;MAClC,MAAMC,gBAAgB,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC;MACpC,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;QAC3B,MAAMC,WAAW,GAAGC,MAAM,CAACC,UAAU;QAErC,IAAIF,WAAW,GAAGF,gBAAgB,CAAC,CAAC,CAAC,EAAE;UACnC,OAAO,CAAC;QACZ;QAEA,KAAK,IAAIK,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,gBAAgB,CAACM,MAAM,GAAG,CAAC,EAAED,CAAC,EAAE,EAAE;UAClD,IAAIH,WAAW,IAAIF,gBAAgB,CAACK,CAAC,CAAC,IAAIH,WAAW,GAAGF,gBAAgB,CAACK,CAAC,GAAG,CAAC,CAAC,EAAE;YAC7E,OAAOA,CAAC,GAAG,CAAC;UAChB;QACJ;QAEA,OAAOL,gBAAgB,CAACM,MAAM;MAClC,CAAC;MAED,IAAIC,oBAAoB,GAAGN,gBAAgB,CAAC,CAAC;MAC7C,IAAI,CAACO,cAAc,GAAIC,WAAoB,IAAW;QAClD,MAAMC,uBAAuB,GAAGT,gBAAgB,CAAC,CAAC;QAClD,IAAIS,uBAAuB,IAAIH,oBAAoB,IAAIE,WAAW,EAAE;UAChEF,oBAAoB,GAAGG,uBAAuB;UAC9C,MAAMC,YAAY,GAAG,IAAI,CAACC,QAAQ,CAAC,CAAC;UACpC,KAAK,MAAMtC,QAAQ,IAAIqC,YAAY,EAAE;YACjC,MAAME,eAAe,GAAIvC,QAAQ,CAASwC,UAAU,CAAC,CAAQ;YAC7D,IAAID,eAAe,EAAEP,MAAM,GAAG,CAAC,EAAE;cAC7B,IAAI,OAAOO,eAAe,CAAC,CAAC,CAAC,EAAEE,mBAAmB,KAAK,UAAU,EAAE;gBAC/DF,eAAe,CAAC,CAAC,CAAC,EAAEE,mBAAmB,CAAC,CAAC;cAC7C;YACJ;UACJ;QACJ;MACJ,CAAC;MAED5D,aAAa,CAAC6D,QAAQ,CAAC,IAAI,EAAE,MAAM;QAC/B,IAAI,CAACR,cAAc,CAAC,CAAC;MACzB,CAAC,CAAC;IACN,CAAC;IAEMS,MAAM,WAAAC,QAAA,EAAG;MACZ,IAAI,OAAO,IAAI,CAACV,cAAc,KAAK,WAAW,EAAE;QAC5C,IAAI,CAACA,cAAc,CAAC,IAAI,CAAC,iBAAiB,CAAC;MAC/C;IACJ,CAAC;IAEMV,mBAAmB,WAAAqB,qBAAA,EAAS;MAC/B,MAAMC,MAAM,GAAG,IAAI,CAACC,SAAS,CAAC,CAAC;MAC/B,IAAID,MAAM,IAAIA,MAAM,CAACE,SAAS,EAAE;QAC5BF,MAAM,CAACE,SAAS,CAACC,GAAG,CAAC,8CAA8C,CAAC;MACxE;IACJ;EAAC;EAAA,OA/GgB/D,gBAAgB;AAAA","ignoreList":[]}