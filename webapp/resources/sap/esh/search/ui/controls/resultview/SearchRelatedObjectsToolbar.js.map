{"version":3,"file":"SearchRelatedObjectsToolbar.js","names":["sap","ui","define","__i18n","Toolbar","sap_m_library","Button","ToolbarLayoutData","ToolbarSpacer","ActionSheet","InvisibleText","IconPool","ItemNavigation","Control","____sinaNexTS_sina_NavigationTarget","__SearchLink","_interopRequireDefault","obj","__esModule","default","i18n","ToolbarDesign","ButtonType","PlacementType","NavigationTarget","SearchLink","SearchRelatedObjectsToolbar","extend","renderer","apiVersion","render","oRm","oControl","openStart","class","oModel","getModel","config","optimizeForValueHelp","openEnd","renderControl","getAggregation","_renderToolbar","close","metadata","properties","itemId","navigationObjects","type","multiple","positionInList","aggregations","_relatedObjectActionsToolbar","visibility","_ariaDescriptionForLinks","constructor","_constructor","sId","settings","Control.prototype.constructor.call","this","relatedObjectActionsToolbar","getId","design","Solid","data","addStyleClass","addEventDelegate","onAfterRendering","layoutToolbarElements","bind","setAggregation","text","getText","window","addEventListener","exit","_exit","args","prototype","apply","_overFlowActionSheet","destroy","destroyContent","getProperty","Array","isArray","length","navigationObjectsLinks","map","navigationObject","i","link","navigationTarget","layoutData","shrinkable","toolbarSpacer","addContent","forEach","_overFlowButton","icon","getIconURI","setType","Transparent","placement","Top","attachPress","isOpen","openBy","_onAfterRendering","_addAriaInformation","_layoutToolbarElements","isDestroyed","isDestroyStarted","getDomRef","toolbarElem","toolbarWidth","offsetWidth","getComputedStyle","display","overFlowButtonElem","style","toolbarElementsWidth","pressButton","event","_navigationObject","performNavigation","toolbarElements","from","querySelectorAll","element","elementWidth","parseInt","marginLeft","marginRight","_toolbarElementsWidth","overFlowButtonWidth","destroyButtons","button","addButton","getButtons","_setupItemNavigation","_theItemNavigation","setCycling","setRootDomRef","itemDomRefs","content","getContent","filter","item","hasStyleClass","domRef","hasAttribute","tabindex","setAttribute","push","overFlowButtonDomRef","setItemDomRefs","navigationLinks","isOverFlowButtonVisible","offsetParent","ariaDescriptionId","el","ariaDescription","getAttribute"],"sources":["SearchRelatedObjectsToolbar.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\nimport i18n from \"../../i18n\";\nimport Toolbar from \"sap/m/Toolbar\";\nimport { ToolbarDesign, ButtonType } from \"sap/m/library\";\nimport Button from \"sap/m/Button\";\nimport Event from \"sap/ui/base/Event\";\nimport ToolbarLayoutData from \"sap/m/ToolbarLayoutData\";\nimport ToolbarSpacer from \"sap/m/ToolbarSpacer\";\nimport ActionSheet from \"sap/m/ActionSheet\";\nimport { PlacementType } from \"sap/m/library\";\nimport InvisibleText from \"sap/ui/core/InvisibleText\";\nimport IconPool from \"sap/ui/core/IconPool\";\nimport ItemNavigation from \"sap/ui/core/delegate/ItemNavigation\";\nimport Control, { $ControlSettings } from \"sap/ui/core/Control\";\nimport SearchModel from \"sap/esh/search/ui/SearchModel\";\nimport RenderManager from \"sap/ui/core/RenderManager\";\nimport { NavigationTarget } from \"../../sinaNexTS/sina/NavigationTarget\";\nimport SearchLink from \"../SearchLink\";\n\nexport interface $SearchRelatedObjectsToolbarSettings extends $ControlSettings {\n    itemId: string;\n    navigationObjects: Array<NavigationTarget>;\n    positionInList: number;\n}\n\n/**\n * @namespace sap.esh.search.ui.controls\n */\nexport default class SearchRelatedObjectsToolbar extends Control {\n    private _theItemNavigation: ItemNavigation;\n    private _overFlowButton: Button;\n    private _overFlowActionSheet: ActionSheet; // items of overFlowButton\n\n    toolbarWidth: number;\n\n    static readonly metadata = {\n        properties: {\n            itemId: \"string\",\n            navigationObjects: {\n                type: \"object\",\n                multiple: true,\n            },\n            positionInList: \"int\",\n        },\n        aggregations: {\n            _relatedObjectActionsToolbar: {\n                type: \"sap.m.Toolbar\",\n                multiple: false,\n                visibility: \"hidden\",\n            },\n            _ariaDescriptionForLinks: {\n                type: \"sap.ui.core.InvisibleText\",\n                multiple: false,\n                visibility: \"hidden\",\n            },\n        },\n    };\n\n    constructor(sId?: string, settings?: $SearchRelatedObjectsToolbarSettings) {\n        super(sId, settings);\n\n        const relatedObjectActionsToolbar = new Toolbar(`${this.getId()}--toolbar`, {\n            design: ToolbarDesign.Solid,\n        });\n        relatedObjectActionsToolbar.data(\"sap-ui-fastnavgroup\", \"false\", true /* write into DOM */);\n        relatedObjectActionsToolbar.addStyleClass(\n            \"sapUshellSearchResultListItem-RelatedObjectsToolbar-Toolbar\"\n        );\n        relatedObjectActionsToolbar.addEventDelegate({\n            onAfterRendering: this.layoutToolbarElements.bind(this),\n        });\n        this.setAggregation(\"_relatedObjectActionsToolbar\", relatedObjectActionsToolbar);\n\n        this.setAggregation(\n            \"_ariaDescriptionForLinks\",\n            new InvisibleText({\n                text: i18n.getText(\"result_list_item_aria_has_more_links\"),\n            })\n        );\n\n        window.addEventListener(\"resize\", () => {\n            this.layoutToolbarElements();\n        });\n    }\n\n    exit(...args: Array<any>): void {\n        if (Control.prototype.exit) {\n            // check whether superclass implements the method\n            Control.prototype.exit.apply(this, args); // call the method with the original arguments\n        }\n        this._overFlowActionSheet?.destroy();\n    }\n\n    static renderer = {\n        apiVersion: 2,\n        render(oRm: RenderManager, oControl: SearchRelatedObjectsToolbar): void {\n            oRm.openStart(\"div\", oControl);\n            oRm.class(\"sapUshellSearchResultListItem-RelatedObjectsToolbar\");\n            const oModel = oControl.getModel() as SearchModel;\n            if (oModel.config.optimizeForValueHelp) {\n                oRm.class(\"sapUshellSearchResultListItem-RelatedObjectsToolbarValueHelp\");\n            }\n            oRm.openEnd();\n            oRm.renderControl(oControl.getAggregation(\"_ariaDescriptionForLinks\") as InvisibleText);\n            oControl._renderToolbar(oRm, oControl);\n            oRm.close(\"div\");\n        },\n    };\n\n    private _renderToolbar(oRm: RenderManager, oControl: SearchRelatedObjectsToolbar): void {\n        const oModel = oControl.getModel() as SearchModel;\n\n        const _relatedObjectActionsToolbar = oControl.getAggregation(\n            \"_relatedObjectActionsToolbar\"\n        ) as Toolbar;\n        _relatedObjectActionsToolbar.destroyContent();\n\n        if (oModel.config.optimizeForValueHelp) {\n            _relatedObjectActionsToolbar.addStyleClass(\n                \"sapUshellSearchResultListItem-RelatedObjectsToolbar-ToolbarValueHelp\"\n            );\n        }\n\n        const navigationObjects = oControl.getProperty(\"navigationObjects\");\n\n        if (Array.isArray(navigationObjects) && navigationObjects.length > 0) {\n            const navigationObjectsLinks: Array<SearchLink> = navigationObjects.map(\n                (navigationObject: NavigationTarget, i: number) => {\n                    const link = new SearchLink(`${oControl.getId()}--link_${i}`, {\n                        text: navigationObject?.text || \"\",\n                        navigationTarget: navigationObject,\n                        layoutData: new ToolbarLayoutData({\n                            shrinkable: false,\n                        }),\n                    });\n                    link.addStyleClass(\"sapUshellSearchResultListItem-RelatedObjectsToolbar-Element\");\n                    return link;\n                }\n            );\n\n            // 1. spacer\n            const toolbarSpacer = new ToolbarSpacer();\n            toolbarSpacer.addStyleClass(\"sapUshellSearchResultListItem-RelatedObjectsToolbar-Spacer\");\n            _relatedObjectActionsToolbar.addContent(toolbarSpacer);\n\n            // 2. navigation objects\n            navigationObjectsLinks.forEach((link) => {\n                _relatedObjectActionsToolbar.addContent(link);\n            });\n\n            // 3. overFlowButton\n            this._overFlowButton = new Button(`${this.getId()}--overflowButton`, {\n                icon: IconPool.getIconURI(\"overflow\"),\n            });\n            this._overFlowButton.addStyleClass(\n                \"sapUshellSearchResultListItem-RelatedObjectsToolbar-OverFlowButton\"\n            );\n            if (oModel.config.optimizeForValueHelp) {\n                this._overFlowButton.addStyleClass(\"sapUiSmallMarginBegin\");\n                this._overFlowButton.addStyleClass(\"sapUiTinyMarginEnd\");\n                this._overFlowButton.setType(ButtonType.Transparent);\n            }\n            _relatedObjectActionsToolbar.addContent(this._overFlowButton);\n\n            // 4. overFlowActionSheet (items of overFlowButton)\n            if (!this._overFlowActionSheet) {\n                this._overFlowActionSheet = new ActionSheet(`${this.getId()}--actionSheet`, {\n                    placement: PlacementType.Top,\n                });\n            }\n            this._overFlowButton.attachPress(() => {\n                if (this._overFlowActionSheet.isOpen()) {\n                    this._overFlowActionSheet.close();\n                } else {\n                    this._overFlowActionSheet.openBy(this._overFlowButton);\n                }\n            });\n\n            oRm.renderControl(_relatedObjectActionsToolbar);\n        }\n    }\n\n    // after rendering\n    // ===================================================================\n    onAfterRendering(): void {\n        if (this.getAggregation(\"_relatedObjectActionsToolbar\")) {\n            this._addAriaInformation();\n        }\n    }\n\n    /**\n     * Layout toolbar elements and move overflowing elements to the action sheet.\n     * CAUTION: DO NOT CALL ANY UI5 METHODS HERE OR RERENDERING ENDLESS LOOP WILL HAPPEN!!!\n     * @returns void\n     */\n    public layoutToolbarElements(): void {\n        if (this.isDestroyed() || this.isDestroyStarted()) {\n            return;\n        }\n        const _relatedObjectActionsToolbar = this.getAggregation(\"_relatedObjectActionsToolbar\") as Toolbar;\n        if (!(this.getDomRef() && _relatedObjectActionsToolbar.getDomRef())) {\n            return;\n        }\n\n        const toolbarElem = (\n            this.getAggregation(\"_relatedObjectActionsToolbar\") as Toolbar\n        ).getDomRef() as HTMLElement;\n        const toolbarWidth = toolbarElem.offsetWidth;\n\n        if (\n            getComputedStyle(this.getDomRef() as HTMLElement).display === \"none\" ||\n            getComputedStyle(toolbarElem).display === \"none\"\n        ) {\n            return;\n        }\n\n        this.toolbarWidth = toolbarWidth;\n\n        const overFlowButtonElem = this._overFlowButton.getDomRef() as HTMLElement;\n        overFlowButtonElem.style.display = \"none\";\n\n        let toolbarElementsWidth = 0;\n\n        const pressButton = (event: Event, _navigationObject: NavigationTarget) => {\n            if (_navigationObject instanceof NavigationTarget) {\n                _navigationObject.performNavigation({ event: event });\n            }\n        };\n\n        const toolbarElements = Array.from(\n            toolbarElem.querySelectorAll(\".sapUshellSearchResultListItem-RelatedObjectsToolbar-Element\")\n        ) as HTMLElement[];\n        let element: HTMLElement;\n        for (let i = 0; i < toolbarElements.length; i++) {\n            element = toolbarElements[i];\n            element.style.display = \"\";\n            const elementWidth =\n                element.offsetWidth +\n                parseInt(getComputedStyle(element).marginLeft) +\n                parseInt(getComputedStyle(element).marginRight);\n            const _toolbarElementsWidth = toolbarElementsWidth + elementWidth;\n\n            if (_toolbarElementsWidth > toolbarWidth) {\n                overFlowButtonElem.style.display = \"\";\n                const overFlowButtonWidth =\n                    overFlowButtonElem.offsetWidth +\n                    parseInt(getComputedStyle(overFlowButtonElem).marginLeft) +\n                    parseInt(getComputedStyle(overFlowButtonElem).marginRight);\n\n                for (; i >= 0; i--) {\n                    element = toolbarElements[i];\n                    toolbarElementsWidth -=\n                        element.offsetWidth +\n                        parseInt(getComputedStyle(element).marginLeft) +\n                        parseInt(getComputedStyle(element).marginRight);\n                    if (toolbarElementsWidth + overFlowButtonWidth <= toolbarWidth) {\n                        break;\n                    }\n                }\n\n                const navigationObjects = this.getProperty(\"navigationObjects\");\n                this._overFlowActionSheet.destroyButtons();\n\n                i = i >= 0 ? i : 0;\n                for (; i < toolbarElements.length; i++) {\n                    element = toolbarElements[i];\n                    element.style.display = \"none\";\n\n                    const navigationObject = navigationObjects[i];\n\n                    const button = new Button({\n                        text: navigationObject?.text || \"\",\n                    });\n                    button.attachPress(navigationObject, pressButton);\n                    this._overFlowActionSheet.addButton(button);\n                }\n                break;\n            }\n            toolbarElementsWidth = _toolbarElementsWidth;\n        }\n\n        if (this._overFlowActionSheet.getButtons().length === toolbarElements.length) {\n            // this._setupItemNavigation(); // overflow button focusable, if all action buttons are part of overflow sheet (see config.optimizeForValueHelp)\n        } else {\n            this._setupItemNavigation(); // overflow button focusable, only if next to action buttons\n        }\n    }\n\n    private _setupItemNavigation(): void {\n        if (!this._theItemNavigation) {\n            this._theItemNavigation = new ItemNavigation(null, []);\n            this[\"addDelegate\"](this._theItemNavigation);\n        }\n        this._theItemNavigation.setCycling(false);\n        this._theItemNavigation.setRootDomRef(this.getDomRef());\n        const itemDomRefs = [];\n        const _relatedObjectActionsToolbar = this.getAggregation(\"_relatedObjectActionsToolbar\") as Toolbar;\n        const content = _relatedObjectActionsToolbar.getContent();\n        content\n            .filter((item) =>\n                item.hasStyleClass(\"sapUshellSearchResultListItem-RelatedObjectsToolbar-Element\")\n            )\n            .forEach((item) => {\n                const domRef = item.getDomRef();\n                if (domRef && !domRef.hasAttribute(\"tabindex\")) {\n                    let tabindex = \"-1\";\n                    if (item[\"getPressed\"] && item[\"getPressed\"]()) {\n                        tabindex = \"0\";\n                    }\n                    domRef.setAttribute(\"tabindex\", tabindex);\n                }\n                itemDomRefs.push(domRef);\n            });\n\n        const overFlowButtonDomRef = this._overFlowButton.getDomRef();\n        overFlowButtonDomRef?.setAttribute(\"tabindex\", \"-1\"); // sap.ui.core.delegate.ItemNavigation is very special, regarding tabindex value \"1\" / \"-1\"\n\n        itemDomRefs.push(overFlowButtonDomRef);\n\n        this._theItemNavigation.setItemDomRefs(itemDomRefs);\n    }\n\n    private _addAriaInformation(): void {\n        const toolbarElem = (\n            this.getAggregation(\"_relatedObjectActionsToolbar\") as Toolbar\n        ).getDomRef() as HTMLElement;\n        const navigationLinks = Array.from(\n            toolbarElem.querySelectorAll(\".sapUshellSearchResultListItem-RelatedObjectsToolbar-Element\")\n        ) as HTMLElement[];\n        const overFlowButtonElem = this._overFlowButton.getDomRef() as HTMLElement;\n\n        const isOverFlowButtonVisible = overFlowButtonElem.offsetParent !== null;\n\n        if (navigationLinks.length > 0 || isOverFlowButtonVisible) {\n            const ariaDescriptionId = (\n                this.getAggregation(\"_ariaDescriptionForLinks\") as InvisibleText\n            ).getId();\n            navigationLinks.forEach(function (el) {\n                let ariaDescription = el.getAttribute(\"aria-describedby\") || \"\";\n                ariaDescription += \" \" + ariaDescriptionId;\n                el.setAttribute(\"aria-describedby\", ariaDescription);\n            });\n\n            if (isOverFlowButtonVisible) {\n                let ariaDescription = overFlowButtonElem.getAttribute(\"aria-describedby\") || \"\";\n                ariaDescription += \" \" + ariaDescriptionId;\n                overFlowButtonElem.setAttribute(\"aria-describedby\", ariaDescription);\n            }\n        }\n    }\n}\n"],"mappings":"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","ignoreList":[]}