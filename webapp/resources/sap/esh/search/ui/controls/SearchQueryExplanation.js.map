{"version":3,"file":"SearchQueryExplanation.js","names":["sap","ui","define","Control","___TypeGuardForControls","Tree","StandardTreeItem","JSONModel","CodeEditor","VerticalLayout","Label","Input","__i18n","SimpleForm","Title","Bar","ToggleButton","_interopRequireDefault","obj","__esModule","default","typesafeRender","i18n","SearchQueryExplanation","extend","renderer","apiVersion","render","oRm","oControl","conditionBuilderId","getId","oData","getProperty","mainView","getAggregation","toolbar","nlqRawDataButton","text","getText","press","showRawData","getPressed","conditionEditor","setVisible","nlqRawDataTitle","setText","conditionTree","collapseAll","expandToLevel","addStyleClass","addContentRight","oNlqDataModel","dataSource","scope","searchTerm","query","JSON","stringify","visible","filterConditionsTitle","oItems","items","convertFilterForTree","filter","setProperty","treeItemCounter","treeSettings","path","template","title","setTimeout","setAggregation","editorType","codeEditorSettings","type","value","height","form","addContent","setModel","metadata","properties","data","aggregations","multiple","visibility","constructor","_constructor","sId","settings","Control.prototype.constructor.call","this","width","formSettings","editable","layout","singleContainerFullSize","filterSubTree","length","conditionItem","OperatorType","push","nodes","SubFilters","ConditionAttribute","ConditionOperator","ConditionValue"],"sources":["SearchQueryExplanation.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\nimport Control, { $ControlSettings } from \"sap/ui/core/Control\";\nimport RenderManager from \"sap/ui/core/RenderManager\";\nimport { typesafeRender } from \"./TypeGuardForControls\";\nimport Tree, { $TreeSettings } from \"sap/m/Tree\";\nimport StandardTreeItem from \"sap/m/StandardTreeItem\";\nimport { PropertyBindingInfo } from \"sap/ui/base/ManagedObject\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\nimport CodeEditor, { $CodeEditorSettings } from \"sap/ui/codeeditor/CodeEditor\";\nimport VerticalLayout from \"sap/ui/layout/VerticalLayout\";\nimport Label from \"sap/m/Label\";\nimport Input from \"sap/m/Input\";\nimport i18n from \"../i18n\";\nimport SimpleForm, { $SimpleFormSettings } from \"sap/ui/layout/form/SimpleForm\";\nimport Title from \"sap/m/Title\";\nimport Bar from \"sap/m/Bar\";\nimport ToggleButton from \"sap/m/ToggleButton\";\n\nexport interface SearchQueryExplanationSettings extends $ControlSettings {\n    data?: string | PropertyBindingInfo;\n}\n\n/**\n * @namespace sap.esh.search.ui.controls\n */\nexport default class SearchQueryExplanation extends Control {\n    static readonly metadata = {\n        properties: {\n            data: {\n                type: \"object\",\n            },\n        },\n        aggregations: {\n            mainView: {\n                type: \"sap.ui.layout.VerticalLayout\",\n                multiple: false,\n                visibility: \"hidden\",\n            },\n            toolbar: {\n                type: \"sap.m.Bar\",\n                multiple: false,\n                visibility: \"hidden\",\n            },\n            form: {\n                type: \"sap.ui.layout.form.SimpleForm\",\n                multiple: false,\n                visibility: \"hidden\",\n            },\n            conditionEditor: {\n                type: \"sap.ui.codeeditor.CodeEditor\",\n                multiple: false,\n                visibility: \"hidden\",\n            },\n            conditionTree: {\n                type: \"sap.m.Tree\",\n                multiple: false,\n                visibility: \"hidden\",\n            },\n        },\n    };\n\n    constructor(sId?: string, settings?: Partial<SearchQueryExplanationSettings>) {\n        super(sId, settings);\n\n        const mainView = new VerticalLayout(`${this.getId()}-container`, { width: \"100%\" });\n        // toolbar\n        const toolbar = new Bar(`${this.getId()}-toolbar`);\n        mainView.addContent(toolbar);\n        // form\n        const formSettings: $SimpleFormSettings = {\n            editable: false,\n            layout: \"ResponsiveGridLayout\", // ToDo: SimpleFormLayout.ResponsiveGridLayout,\n            singleContainerFullSize: true,\n        };\n        const form = new SimpleForm(`${this.getId()}-form`, formSettings);\n        // data source\n        form.addContent(new Label(`${this.getId()}-dsLabel`, { text: i18n.getText(\"dataSource\") }));\n        form.addContent(\n            new Input(`${this.getId()}-dsValue`, {\n                value: \"{nlqData>/dataSource}\",\n                editable: false,\n            })\n        );\n        // search term\n        form.addContent(new Label(`${this.getId()}-searchTermLabel`, { text: i18n.getText(\"searchTerm\") }));\n        form.addContent(\n            new Input(`${this.getId()}-searchTermValue`, {\n                value: \"{nlqData>/searchTerm}\",\n                editable: false,\n            })\n        );\n        this.setAggregation(\"toolbar\", toolbar);\n        this.setAggregation(\"form\", form);\n        this.setAggregation(\"mainView\", mainView);\n    }\n\n    static convertFilterForTree(filterSubTree: any): Array<any> {\n        const items = [];\n        if (filterSubTree?.length > 0) {\n            // child node\n            for (const conditionItem of filterSubTree) {\n                if (conditionItem?.OperatorType) {\n                    items.push({\n                        text: conditionItem.OperatorType,\n                        nodes: SearchQueryExplanation.convertFilterForTree(conditionItem?.SubFilters),\n                    });\n                } else {\n                    const text = `${conditionItem.ConditionAttribute} ${conditionItem.ConditionOperator} ${conditionItem.ConditionValue}`;\n                    items.push({ text: text, nodes: [] });\n                }\n            }\n        } else if (filterSubTree?.OperatorType) {\n            // composite node (AND/OR)\n            items.push({\n                text: filterSubTree.OperatorType,\n                nodes: SearchQueryExplanation.convertFilterForTree(filterSubTree?.SubFilters),\n            });\n        } else if (filterSubTree?.ConditionOperator) {\n            const text = `${filterSubTree.ConditionAttribute} ${filterSubTree.ConditionOperator} ${filterSubTree.ConditionValue}`;\n            items.push({ text: text, nodes: [] });\n        } else {\n            items.push({ text: i18n.getText(\"noFilterConditions\"), nodes: [] });\n        }\n        return items;\n    }\n\n    static renderer = {\n        apiVersion: 2,\n        render(oRm: RenderManager, oControl: SearchQueryExplanation): void {\n            const conditionBuilderId = `${oControl.getId()}-filterConditions`;\n            const oData = oControl.getProperty(\"data\");\n            const mainView = oControl.getAggregation(\"mainView\") as VerticalLayout;\n            // toolbar\n            // =======\n            const toolbar = oControl.getAggregation(\"toolbar\") as Bar;\n            // NLQ raw response data\n            const nlqRawDataButton = new ToggleButton(`${oControl.getId()}-nlqRawDataToggleButton`, {\n                text: i18n.getText(\"showNlqRawData\"),\n                press: () => {\n                    const showRawData = nlqRawDataButton.getPressed();\n                    conditionEditor.setVisible(showRawData);\n                    nlqRawDataTitle.setVisible(showRawData);\n                    if (showRawData) {\n                        nlqRawDataButton.setText(i18n.getText(\"hideNlqRawData\"));\n                        conditionTree.collapseAll();\n                    } else {\n                        nlqRawDataButton.setText(i18n.getText(\"showNlqRawData\"));\n                        conditionTree.expandToLevel(1);\n                    }\n                },\n            }).addStyleClass(\"sapUiLargeMarginBegin\");\n            toolbar.addContentRight(nlqRawDataButton);\n\n            const oNlqDataModel = new JSONModel({\n                dataSource: oData.scope,\n                searchTerm: oData.query,\n                query: JSON.stringify(oControl.getProperty(\"data\")),\n            });\n\n            const nlqRawDataTitle = new Title(`${oControl.getId()}-nlqRawDataTitle`, {\n                text: i18n.getText(\"nlqRawData\"),\n                visible: false,\n            })\n                .addStyleClass(\"sapUiSmallMarginBegin\")\n                .addStyleClass(\"sapUiSmallMarginTop\");\n\n            // filter conditions\n            // =================\n            const filterConditionsTitle = new Title(`${oControl.getId()}-filterConditionsTitle`, {\n                text: i18n.getText(\"filterConditions\"),\n            }).addStyleClass(\"sapUiSmallMarginBegin\");\n\n            // tree\n            const oItems = {\n                dataSource: oData.scope,\n                searchTerm: oData.query,\n                items: SearchQueryExplanation.convertFilterForTree(oData?.filter),\n            };\n            oNlqDataModel.setProperty(\"/items\", oItems);\n            let treeItemCounter = 0;\n            const treeSettings: $TreeSettings = {\n                items: {\n                    path: \"nlqData>/items\",\n                    template: new StandardTreeItem(`${conditionBuilderId}-${treeItemCounter++}`, {\n                        title: \"{nlqData>text}\",\n                        // icon: \"{nlqData>icon}\",\n                    }),\n                },\n            };\n            const conditionTree = new Tree(`${conditionBuilderId}-tree`, treeSettings);\n            setTimeout(() => {\n                conditionTree.expandToLevel(1);\n            }, 0);\n            oControl.setAggregation(\"conditionTree\", conditionTree);\n            // editor\n            const editorType = \"text\";\n            const codeEditorSettings: $CodeEditorSettings = {\n                type: editorType,\n                value: \"{nlqData>/query}\",\n                height: \"100rem\",\n                visible: false,\n            };\n            const conditionEditor = new CodeEditor(\n                `${conditionBuilderId}-editor`,\n                codeEditorSettings\n            ).addStyleClass(\"sapUiSmallMarginBegin\");\n            oControl.setAggregation(\"conditionEditor\", conditionEditor);\n\n            // form\n            const form = oControl.getAggregation(\"form\") as SimpleForm;\n            mainView.addContent(form);\n\n            // if (oData?.filter) {\n            mainView.addContent(filterConditionsTitle);\n            mainView.addContent(conditionTree);\n            mainView.addContent(nlqRawDataTitle);\n            mainView.addContent(conditionEditor);\n            // }\n\n            oControl.setModel(oNlqDataModel, \"nlqData\");\n\n            // render control\n            // ==============\n            // - toolbar\n            typesafeRender(oControl.getAggregation(\"toolbar\"), oRm);\n            // - form and filter conditions\n            typesafeRender(mainView, oRm);\n        },\n    };\n}\n"],"mappings":"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","ignoreList":[]}