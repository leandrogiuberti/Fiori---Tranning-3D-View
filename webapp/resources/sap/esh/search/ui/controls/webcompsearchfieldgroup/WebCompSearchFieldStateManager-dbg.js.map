{"version":3,"file":"WebCompSearchFieldStateManager-dbg.js","names":["sap","ui","define","____SearchUtil","SearchHelper","StateWatcher","WebCompSearchFieldStateManager","stateWatcher","shellHeader","model","searchFieldGroup","constructor","props","checkInterval","config","searchFieldCheckInterval","getState","isNoResultsScreen","isSearchInputFocused","compareStates","s1","s2","changed","handleStateChanged","bind","interval","start","newState","shallShowOverlay","isOverlayShown","setSearchState","expandSearch","collapseSearch","isSearchAppActive","getProperty","document","querySelector","activeElement","getDomRef"],"sources":["WebCompSearchFieldStateManager.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\nimport type SearchModel from \"sap/esh/search/ui/SearchModel\";\nimport Control from \"sap/ui/core/Control\";\nimport { StateWatcher } from \"../../SearchUtil\";\nimport * as SearchHelper from \"sap/esh/search/ui/SearchHelper\";\nimport type SearchFieldGroup from \"../searchfieldgroup/SearchFieldGroup\";\n\ninterface State {\n    isSearchInputFocused: boolean;\n    isNoResultsScreen: boolean;\n}\n\nexport default class WebCompSearchFieldStateManager {\n    stateWatcher: StateWatcher<State>;\n    shellHeader: any;\n    model: SearchModel;\n    searchFieldGroup: SearchFieldGroup;\n    constructor(props: { shellHeader: Control; model: SearchModel; searchFieldGroup: SearchFieldGroup }) {\n        this.shellHeader = props.shellHeader;\n        this.model = props.model;\n        this.searchFieldGroup = props.searchFieldGroup;\n        const checkInterval = this?.model?.config?.searchFieldCheckInterval ?? 100;\n        this.stateWatcher = new StateWatcher<State>({\n            getState: () => ({\n                isNoResultsScreen: this.isNoResultsScreen(),\n                isSearchInputFocused: this.isSearchInputFocused(),\n            }),\n            compareStates: (s1: State, s2: State) =>\n                s1.isNoResultsScreen === s2.isNoResultsScreen &&\n                s1.isSearchInputFocused === s2.isSearchInputFocused,\n            changed: this.handleStateChanged.bind(this),\n            interval: checkInterval,\n        });\n        if (checkInterval > 0) {\n            this.stateWatcher.start();\n        }\n    }\n\n    handleStateChanged(newState: State): void {\n        // console.log(\"schange\" + newState.isSearchInputFocused);\n        const shallShowOverlay = newState.isSearchInputFocused && !newState.isNoResultsScreen;\n        if (shallShowOverlay && !this.isOverlayShown()) {\n            this.shellHeader.setSearchState(\"EXP_S\", 35, false); // intermediate state to force shell to show overlay\n            this.shellHeader.setSearchState(\"EXP\", 35, true);\n        }\n        if (!shallShowOverlay && this.isOverlayShown) {\n            this.shellHeader.setSearchState(\"EXP_S\", 35, false); // intermediate state to force shell to disable overlay\n            this.shellHeader.setSearchState(\"EXP\", 35, false);\n        }\n    }\n\n    expandSearch(): void {\n        this.shellHeader.setSearchState(\"EXP\", 35, false);\n    }\n\n    collapseSearch(): void {\n        this.shellHeader.setSearchState(\"COL\", 35, false);\n    }\n\n    isNoResultsScreen(): boolean {\n        return (\n            SearchHelper.isSearchAppActive() &&\n            this.model.getProperty(\"/boCount\") === 0 &&\n            this.model.getProperty(\"/appCount\") === 0\n        );\n    }\n\n    isSearchInputFocused(): boolean {\n        if (!document.querySelector(\"#searchFieldInShell:not([collapsed])\")) {\n            return false;\n        }\n        return document.activeElement === (this.searchFieldGroup as Control).getDomRef();\n    }\n\n    isOverlayShown(): boolean {\n        return !!document.querySelector(\".sapUshellShellShowSearchOverlay\");\n    }\n}\n"],"mappings":"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","ignoreList":[]}