{"version":3,"file":"WebCompSearchFieldGroupBindings.js","names":["sap","ui","define","__SearchScope","__SearchItemGroup","__SearchItemShowMore","BindingMode","__SuggestionType","__SearchItem","____error_errors","SearchHelper","__UIEvents","EventBus","_interopRequireDefault","obj","__esModule","default","SearchScope","SearchItem","SearchItemGroup","SearchItemShowMore","SuggestionType","isSearchSuggestion","ProgramError","UIEvents","createWebCompSearchFieldGroupBindings","webCompSearchFieldGroup","webComps","webCompSearchFieldGroupTmp","addMethods","bindProperty","parts","path","formatter","initializingObjSearch","mode","OneWay","bindAggregation","template","text","selected","selectedKey","key","attachEvent","event","dataSource","mParameters","scope","getBindingContext","getObject","model","getModel","setDataSource","setTimeout","focus","TwoWay","factory","sId","oContext","createSuggestionItem","length","triggerSuggestions","suggestionControl","getParameter","suggestion","e","preventDefault","handleSuggestionItemSelected","getValue","triggerSearch","searchFieldGroup","Object","assign","uiSuggestionType","Header","headerText","label","DataSource","scopeName","App","title","icon","SearchTermData","SearchTermHistory","SearchTermAI","isShowMoreApps","this","createShowMoreAppsSuggestion","searchTerm","label1","description","label2","Search","showMoreItem","itemsToShowCount","totalCount","onAfterRendering","eshRegistered","getDomRef","addEventListener","abortSuggestions","setSearchBoxTerm","getLastSearchTerm","titleNavigation","performNavigation","keyCode","handleAppSuggestionItemSelected","targetURL","url","indexOf","getHashFromUrl","decodeURIComponent","query","filter","notifySubscribers","ESHSearchFinished","getInstance","publish","window","hasher","prependHash","slice","setHash","location","href","logRecentActivity","open","getSearchBoxTerm","config","bRecentSearches","doSuggestion","subscribeOnlyOnce","autoStartApp","trim","isUshell","setValue","navigateToSearchApp","isSearchAppActive","fireSearchQuery","resetSearchResultItemMemory","sHash","createSearchNavigationTargetCurrentState","updateUrl","targetUrl","hash","require","Config","AppType","bLogRecentActivity","last","oRecentEntry","appType","URL","appId","ushell","Container","getRenderer","__exports"],"sources":["WebCompSearchFieldGroupBindings.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\nimport SearchScope from \"@ui5/webcomponents-fiori/dist/SearchScope\";\nimport SearchItem from \"@ui5/webcomponents-fiori/dist/SearchItem\";\nimport SearchItemGroup from \"@ui5/webcomponents-fiori/dist/SearchItemGroup\";\nimport SearchItemShowMore from \"@ui5/webcomponents-fiori/dist/SearchItemShowMore\";\nimport Search from \"@ui5/webcomponents-fiori/dist/Search\";\nimport Control from \"sap/ui/core/Control\";\nimport BindingMode from \"sap/ui/model/BindingMode\";\nimport SuggestionType, { isSearchSuggestion, Suggestion } from \"../../suggestions/SuggestionType\";\nimport { ProgramError } from \"../../error/errors\";\nimport type SearchModel from \"../../SearchModel\";\nimport * as SearchHelper from \"../../SearchHelper\";\nimport UIEvents from \"../../UIEvents\";\nimport EventBus from \"sap/ui/core/EventBus\";\nimport { SearchWebComps } from \"./UShellWebCompLoader\";\n\nexport function createWebCompSearchFieldGroupBindings(\n    webCompSearchFieldGroup: Search,\n    webComps?: SearchWebComps\n) {\n    // if no webcomponents provided -> use default webcomponents delivered with elisa\n    if (!webComps) {\n        webComps = {\n            SearchScope: SearchScope,\n            SearchItem: SearchItem,\n            SearchItemGroup: SearchItemGroup,\n            SearchItemShowMore: SearchItemShowMore,\n        };\n    }\n\n    // create alias because types do not work\n    const webCompSearchFieldGroupTmp = webCompSearchFieldGroup as Control;\n\n    // add methods\n    addMethods(webCompSearchFieldGroup);\n\n    // bind enabled\n    webCompSearchFieldGroupTmp.bindProperty(\"blocked\", {\n        parts: [\n            {\n                path: \"/initializingObjSearch\",\n            },\n        ],\n        formatter: (initializingObjSearch) => initializingObjSearch,\n    });\n\n    // bind placeholder\n    webCompSearchFieldGroupTmp.bindProperty(\"placeholder\", {\n        path: \"/searchTermPlaceholder\",\n        mode: BindingMode.OneWay,\n    });\n\n    // bind datasources dropdown\n    webCompSearchFieldGroupTmp.bindAggregation(\"scopes\", {\n        path: \"/dataSources\",\n        template: new (webComps.SearchScope as any)({\n            text: \"{labelPlural}\",\n            selected: {\n                parts: [\"/uiFilter/dataSource/id\", \"id\"],\n                formatter: (selectedKey: string, key: string) => {\n                    return selectedKey === key;\n                },\n            },\n        }) as Control,\n    });\n\n    // bind datasource change\n    webCompSearchFieldGroupTmp.attachEvent(\"scopeChange\", (event) => {\n        const dataSource = event.mParameters.scope.getBindingContext().getObject();\n        const model = webCompSearchFieldGroupTmp.getModel() as SearchModel;\n        model.setDataSource(dataSource, false);\n        setTimeout(() => {\n            webCompSearchFieldGroupTmp.focus();\n        }, 200);\n    });\n\n    // bind input box value (two-way)\n    webCompSearchFieldGroupTmp.bindProperty(\"value\", {\n        path: \"/uiFilter/searchTerm\",\n        mode: BindingMode.TwoWay,\n    });\n\n    // bind suggestion items\n    webCompSearchFieldGroupTmp.bindAggregation(\"items\", {\n        path: \"/suggestions\",\n        factory: (sId, oContext) => {\n            return (webCompSearchFieldGroup as any).createSuggestionItem(sId, oContext, webComps);\n        },\n    });\n\n    // bind suggestion popup open\n    webCompSearchFieldGroupTmp.bindProperty(\"open\", {\n        parts: [\"/suggestions/length\"],\n        formatter: (length) => length > 0,\n    });\n\n    // bind busy indicator\n    webCompSearchFieldGroupTmp.bindProperty(\"loading\", {\n        path: \"/isBusySuggestions\",\n    });\n\n    // register to suggestion events\n    webCompSearchFieldGroupTmp.attachEvent(\"input\", () => {\n        // console.log(\"xx fetch sugg\", (webCompSearchFieldGroupTmp as any).getValue(), x, y);\n        (webCompSearchFieldGroup as any).triggerSuggestions();\n    });\n\n    // register to search events\n    webCompSearchFieldGroupTmp.attachEvent(\"search\", (event) => {\n        const suggestionControl = event.getParameter(\"item\");\n        if (suggestionControl /*&& suggestionControl.getMetadata*/) {\n            // console.log(\"xx sug selected\");\n            let suggestion;\n            try {\n                suggestion = suggestionControl.getBindingContext().getObject();\n                // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            } catch (e) {\n                // console.log(\"xx suggestion object error\", e);\n                return;\n            }\n            // console.log(\"xx\", suggestion);\n            // prevent writing suggestion term to input box after this callback has finished\n            // input box content is handle in suggestionItemSelected dependend on suggestions type\n            event.preventDefault();\n            (webCompSearchFieldGroup as any).handleSuggestionItemSelected(suggestion);\n            return;\n        }\n        if ((webCompSearchFieldGroupTmp as any).getValue().length > 0) {\n            // for length=0 -> search field is collapsed, no need for search\n            // console.log(\"xx search\", (webCompSearchFieldGroupTmp as any).getValue());\n            (webCompSearchFieldGroup as any).triggerSearch();\n        }\n    });\n}\n\nexport function addMethods(searchFieldGroup) {\n    Object.assign(searchFieldGroup, {\n        createSuggestionItem(sId, oContext, webComps: SearchWebComps) {\n            const suggestion = oContext.getObject();\n            switch (suggestion.uiSuggestionType) {\n                case SuggestionType.Header:\n                    return new (webComps.SearchItemGroup as any)({\n                        headerText: suggestion.label,\n                    });\n                case SuggestionType.DataSource:\n                    return new (webComps.SearchItem as any)({\n                        text: suggestion.dataSource.label,\n                        scopeName: \"\",\n                    });\n                case SuggestionType.App:\n                    return new (webComps.SearchItem as any)({\n                        text: suggestion.title,\n                        icon: suggestion.icon,\n                        scopeName: \"\",\n                    });\n                case SuggestionType.SearchTermData:\n                case SuggestionType.SearchTermHistory:\n                case SuggestionType.SearchTermAI:\n                    if (suggestion.isShowMoreApps) {\n                        return this.createShowMoreAppsSuggestion(suggestion, webComps);\n                    }\n                    return new (webComps.SearchItem as any)({\n                        text: suggestion.searchTerm,\n                        scopeName: \"\",\n                    });\n                case SuggestionType.Object:\n                    return new (webComps.SearchItem as any)({\n                        text: suggestion.label1,\n                        description: suggestion.label2,\n                        scopeName: \"\",\n                    });\n                case SuggestionType.Search:\n                    return new (webComps.SearchItem as any)({\n                        text: \"search suggestion:\" + suggestion.label,\n                        scopeName: \"\",\n                    });\n                default:\n                    throw new ProgramError(null, \"Unknown suggestion type: \" + suggestion.uiSuggestionType);\n            }\n        },\n\n        createShowMoreAppsSuggestion(suggestion, webComps: SearchWebComps): SearchItemShowMore {\n            const model = this.getModel() as SearchModel;\n            const showMoreItem = new (webComps.SearchItemShowMore as any)({\n                itemsToShowCount: suggestion.totalCount,\n            });\n            // workaround because there is no suggestions event for SearchItemShowMore\n            Object.assign(showMoreItem, {\n                onAfterRendering: () => {\n                    if (!showMoreItem.eshRegistered) {\n                        showMoreItem.getDomRef().addEventListener(\"click\", () => {\n                            model.abortSuggestions();\n                            model.setSearchBoxTerm(model.getLastSearchTerm(), false); // restore search term TODO comment\n                            suggestion.titleNavigation.performNavigation();\n                        });\n                        showMoreItem.getDomRef().addEventListener(\"keydown\", (event) => {\n                            if (event.keyCode !== 13) {\n                                return;\n                            }\n                            model.abortSuggestions();\n                            model.setSearchBoxTerm(model.getLastSearchTerm(), false); // restore search term TODO comment\n                            suggestion.titleNavigation.performNavigation();\n                        });\n                        showMoreItem.eshRegistered = true;\n                    }\n                },\n            });\n            return showMoreItem;\n        },\n\n        handleSuggestionItemSelected(suggestion) {\n            const model = this.getModel() as SearchModel;\n            model.abortSuggestions();\n            switch (suggestion.uiSuggestionType) {\n                case SuggestionType.App:\n                    this.handleAppSuggestionItemSelected(suggestion);\n                    break;\n                case SuggestionType.Search:\n                case SuggestionType.SearchTermData:\n                case SuggestionType.SearchTermHistory:\n                case SuggestionType.SearchTermAI:\n                case SuggestionType.Object:\n                    model.setSearchBoxTerm(model.getLastSearchTerm(), false); // restore search term TODO comment\n                    if (isSearchSuggestion(suggestion)) {\n                        suggestion.titleNavigation.performNavigation();\n                    }\n                    break;\n                case SuggestionType.DataSource:\n                    model.setDataSource(suggestion.dataSource, false);\n                    model.setSearchBoxTerm(\"\", false);\n                    setTimeout(() => {\n                        this.focus();\n                    }, 200);\n                    break;\n                default:\n                    break; // log error?\n            }\n        },\n\n        handleAppSuggestionItemSelected(suggestion: Suggestion) {\n            const model = this.getModel() as SearchModel;\n\n            let targetURL = suggestion.url;\n\n            if (targetURL[0] === \"#\") {\n                if (\n                    targetURL.indexOf(\"#Action-search\") === 0 &&\n                    (targetURL === SearchHelper.getHashFromUrl() ||\n                        targetURL === decodeURIComponent(SearchHelper.getHashFromUrl()))\n                ) {\n                    // ugly workaround\n                    // in case the app suggestion points to the search app with query identical to current query\n                    // --> do noting except: restore query term + focus again the first item in the result list\n                    model.setSearchBoxTerm(model.query.filter.searchTerm, false);\n                    model.setDataSource(model.query.filter.dataSource, false);\n                    model.notifySubscribers(UIEvents.ESHSearchFinished);\n                    EventBus.getInstance().publish(UIEvents.ESHSearchFinished);\n                    return;\n                }\n                if (window[\"hasher\"]) {\n                    if (targetURL[1] === window.hasher.prependHash) {\n                        // hasher preprends a \"prependHash\" character between \"#\" and the rest.\n                        // so we remove the same character to have the desired string in the end after hasher changed it\n                        // this avoids a wrong url if the application does not use window.hasher.getHash which removes prependHash again\n                        targetURL = targetURL.slice(0, 1) + targetURL.slice(2);\n                    }\n                    window[\"hasher\"].setHash(targetURL);\n                } else {\n                    window.location.href = targetURL;\n                }\n                model.setSearchBoxTerm(\"\", false);\n            } else {\n                // special logging: only for urls started via suggestions\n                // (apps/urls started via click ontile have logger in tile click handler)\n                this.logRecentActivity(suggestion);\n                window.open(targetURL, \"_blank\", \"noopener,noreferrer\");\n                model.setSearchBoxTerm(\"\", false);\n            }\n        },\n\n        triggerSuggestions() {\n            const model = this.getModel() as SearchModel;\n            if (model.getSearchBoxTerm().length > 0 || model.config.bRecentSearches) {\n                model.doSuggestion();\n            } else {\n                model.abortSuggestions();\n            }\n        },\n\n        triggerSearch() {\n            // auto-start app\n            // it is necessay to do this in search input (and not in search model) because otherwise navigating back from the app to the\n            // search UI would result in a repeated navigation to the app\n            const model = this.getModel() as SearchModel;\n            SearchHelper.subscribeOnlyOnce(\n                \"triggerSearch\",\n                UIEvents.ESHSearchFinished,\n                function () {\n                    (this.getModel() as SearchModel).autoStartApp();\n                },\n                this\n            );\n            // special behaviour for S/4 -> replace empty search term with \"*\"\n            if (this.getValue().trim() === \"\" && model.config.isUshell) {\n                this.setValue(\"*\");\n            }\n            this.navigateToSearchApp();\n        },\n\n        navigateToSearchApp() {\n            const model = this.getModel() as SearchModel;\n            model.abortSuggestions();\n            if (SearchHelper.isSearchAppActive() || !model.config.isUshell) {\n                // app running -> just fire query\n                model.fireSearchQuery();\n            } else {\n                // app not running -> start via hash\n                // change hash:\n                // - do not use Searchhelper.hasher here\n                // - this is starting the search app from outside\n                model.resetSearchResultItemMemory();\n                const sHash = model.createSearchNavigationTargetCurrentState({\n                    updateUrl: true,\n                }).targetUrl;\n                window.location.hash = sHash;\n            }\n        },\n\n        logRecentActivity(suggestion: Suggestion): void {\n            // load ushell deps lazy only in case of FLP\n            sap.ui.require([\"sap/ushell/Config\", \"sap/ushell/services/AppType\"], function (Config, AppType) {\n                // ToDo 'require'\n                const bLogRecentActivity =\n                    Config.last(\"/core/shell/enableRecentActivity\") &&\n                    Config.last(\"/core/shell/enableRecentActivityLogging\");\n                if (bLogRecentActivity) {\n                    const oRecentEntry = {\n                        title: suggestion.title,\n                        appType: AppType.URL,\n                        url: suggestion.url,\n                        appId: suggestion.url,\n                    };\n                    ((window.sap.ushell as any).Container.getRenderer(\"fiori2\") as any).logRecentActivity(\n                        oRecentEntry\n                    );\n                }\n            });\n        },\n    });\n}\n"],"mappings":"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","ignoreList":[]}