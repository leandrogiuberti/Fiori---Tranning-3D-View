{"version":3,"file":"SearchFacetsFormatter-dbg.js","names":["sap","ui","define","__ErrorHandler","__SearchHierarchyDynamicFacetsFormatter","__SearchHierarchyStaticFacetsFormatter","__Facet","__FacetItem","___sinaNexTS_sina_ComparisonOperator","___controls_facets_FacetTypeUI","_interopRequireDefault","obj","__esModule","default","ErrorHandler","SearchHierarchyDynamicFacetsFormatter","SearchHierarchyStaticFacetsFormatter","Facet","FacetItem","ComparisonOperator","FacetTypeUI","SearchFacetsFormatter","searchFacetDialogModel","errorHandler","hierarchyDynamicFacetsFormatter","hierarchyStaticFacetsFormatter","treeQuickSelectDataSourceFacet","constructor","searchModel","getInstance","_getAncestorDataSources","aRecentDataSources","oFilterDataSource","dataSourceTree","findNode","getProperty","aAncestorNodes","getAncestors","reverse","i","length","ds","dataSource","dsFacetItem","label","labelPlural","icon","filterCondition","level","value","count","toString","push","_getSiblingDataSources","aSiblingFacetItems","currentDS","currentNode","aSiblingNodes","parent","unsureWhetherNodeisBelowRoot","getChildren","j","lenJ","fi","selected","_getChildrenDataSources","aChildFacetItems","aChildNodes","getDataSourceFacetFromTree","oDataSourceFacet","facetType","DataSource","title","aAncestors","items","aSiblings","allDataSource","_createFacetItemsFromConditionGroup","rootCondition","facetItems","conditions","complexCondition","condition","facetAttribute","type","sinaNext","ConditionType","Simple","attribute","getAttributeMetadata","isHierarchy","_formatLabel","valueLabel","operator","labelFormatted","Bw","Ew","Co","getAttributeFacetsFromResultSet","resultSet","oDataSource","getDataSource","DataSourceType","Category","Promise","resolve","aServerSideFacets","facets","filter","element","FacetType","Chart","aClientSideFacets","aClientSideFacetsByDimension","oServerSideFacet","facetTotalCount","totalCount","oClientSideFacet","Attribute","dimension","query","oFacetListItem","item","dimensionValueFormatted","measureValue","facetTitle","addDataTypeToClientSideFacets","oClientSideFacetsWithSelection","aFacetItemsWithFilterConditions","k","lenK","oSelectedFacetItem","oClientSideFacetWithSelection","indexOfClientSideFacetWithSelection","indexOf","splice","m","lenM","facetItem","equals","oFacet","metadata","dataType","error","onError","addQuickSelectDataSourceFacet","config","quickSelectDataSources","facet","createTreeQuickSelectDataSourceFacet","createListQuickSelectDataSourceFacet","QuickSelectDataSource","map","children","treeNodeProps","createTreeNodeQuickSelectDataSource","rootNode","expandPathToSelectedDataSource","collectPaths","paths","findDataSource","path","node","slice","childNode","expanded","childTreeNodeProps","dataSourceId","id","toggleExpand","getFacets","searchResultSet","resultFacets","appDataSource","sortFacets","setFacetIndex","hierarchyDynamicFacets","hierarchyStaticFacets","attributeFacets","facetIndex","facetPosition","HierarchyStatic","Hierarchy","index","position","getFilterRootCondition","containsAttribute","sort","f1","f2","getDialogFacetsFromMetaData","getAttributeDialogFacetsFromMetaData","getFacetsFromMetadata","a","b","localeCompare","oMetaData","Object","values","attributeMetadataMap","usage","AdvancedSearch","matchingStrategy","visible","getDialogFacetsFromChartQuery","filters","facetItemFoundInFacet","userDefined","advanced","listed","hasDialogFacetsFromMetaData","hasDialogFacets","handleDataSourceChanged","destroy"],"sources":["SearchFacetsFormatter.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\nimport ErrorHandler from \"./error/ErrorHandler\";\nimport SearchHierarchyDynamicFacetsFormatter from \"./hierarchydynamic/SearchHierarchyDynamicFacetsFormatter\";\nimport SearchHierarchyStaticFacetsFormatter from \"./hierarchystatic/SearchHierarchyStaticFacetsFormatter\";\nimport Facet from \"./Facet\";\nimport FacetItem from \"./FacetItem\";\nimport { DataSource } from \"./sinaNexTS/sina/DataSource\";\nimport { SearchResultSet } from \"./sinaNexTS/sina/SearchResultSet\";\nimport { ComparisonOperator } from \"./sinaNexTS/sina/ComparisonOperator\";\nimport SearchFacetDialogModel from \"./SearchFacetDialogModel\";\nimport { ChartResultSet } from \"./sinaNexTS/sina/ChartResultSet\";\nimport SearchModel from \"./SearchModel\";\nimport { FacetTypeUI } from \"./controls/facets/FacetTypeUI\";\nimport { AttributeMetadata } from \"./sinaNexTS/sina/AttributeMetadata\";\n\ninterface TreeNode {\n    expanded: boolean;\n    type: string;\n    label: string;\n    icon: string;\n    getDataSource: () => DataSource;\n    dataSourceId: string;\n    children: Array<TreeNode>;\n    toggleExpand: () => void;\n}\n\ninterface TreeNode {\n    expanded: boolean;\n    type: string;\n    label: string;\n    icon: string;\n    getDataSource: () => DataSource;\n    dataSourceId: string;\n    children: Array<TreeNode>;\n    toggleExpand: () => void;\n}\n\nexport default class SearchFacetsFormatter {\n    searchFacetDialogModel: SearchModel;\n    errorHandler: ErrorHandler;\n    hierarchyDynamicFacetsFormatter: SearchHierarchyDynamicFacetsFormatter;\n    hierarchyStaticFacetsFormatter: SearchHierarchyStaticFacetsFormatter;\n    treeQuickSelectDataSourceFacet: any;\n\n    constructor(searchModel: SearchModel) {\n        this.searchFacetDialogModel = searchModel;\n        this.errorHandler = ErrorHandler.getInstance();\n        this.hierarchyDynamicFacetsFormatter = new SearchHierarchyDynamicFacetsFormatter(searchModel);\n        this.hierarchyStaticFacetsFormatter = new SearchHierarchyStaticFacetsFormatter(searchModel);\n    }\n\n    private _getAncestorDataSources(searchModel: SearchModel): Array<FacetItem> {\n        const aRecentDataSources: Array<FacetItem> = [];\n        const oFilterDataSource = searchModel.dataSourceTree.findNode(\n            searchModel.getProperty(\"/uiFilter/dataSource\")\n        );\n        if (oFilterDataSource) {\n            const aAncestorNodes = oFilterDataSource.getAncestors().reverse();\n            for (let i = 0; i < aAncestorNodes.length; i++) {\n                const ds = aAncestorNodes[i].dataSource;\n                const dsFacetItem = new FacetItem({\n                    label: ds.labelPlural,\n                    icon: ds.icon || \"sap-icon://none\",\n                    filterCondition: ds as any,\n                    level: 0,\n                    value: aAncestorNodes[i].count ? aAncestorNodes[i].count.toString() : \"\",\n                });\n                aRecentDataSources.push(dsFacetItem);\n            }\n        }\n        return aRecentDataSources;\n    }\n\n    private _getSiblingDataSources(searchModel: SearchModel, level: number): Array<any> {\n        const aSiblingFacetItems = [];\n        const currentDS = searchModel.getProperty(\"/uiFilter/dataSource\");\n        const currentNode = searchModel.dataSourceTree.findNode(currentDS);\n        let aSiblingNodes;\n        if (currentNode.parent && !currentNode.unsureWhetherNodeisBelowRoot) {\n            aSiblingNodes = currentNode.parent.getChildren();\n        } else {\n            aSiblingNodes = [];\n        }\n        if (aSiblingNodes.length === 0) {\n            aSiblingNodes.push(currentNode);\n        }\n        for (let j = 0, lenJ = aSiblingNodes.length; j < lenJ; j++) {\n            const ds = aSiblingNodes[j].dataSource;\n            const fi = new FacetItem({\n                label: ds.labelPlural,\n                icon: ds.icon || \"sap-icon://none\",\n                value: aSiblingNodes[j].count,\n                filterCondition: ds,\n                selected: currentDS === ds,\n                level: level,\n            });\n            aSiblingFacetItems.push(fi);\n            if (fi.selected) {\n                aSiblingFacetItems.push(...this._getChildrenDataSources(searchModel, level + 1));\n            }\n        }\n        return aSiblingFacetItems;\n    }\n\n    private _getChildrenDataSources(searchModel: SearchModel, level: number): Array<FacetItem> {\n        // add children with data from the tree\n        const aChildFacetItems: Array<FacetItem> = [];\n        const currentDS = searchModel.getProperty(\"/uiFilter/dataSource\");\n        const aChildNodes = searchModel.dataSourceTree.findNode(currentDS).getChildren();\n        for (let j = 0, lenJ = aChildNodes.length; j < lenJ; j++) {\n            const ds = aChildNodes[j].dataSource;\n            const fi = new FacetItem({\n                label: ds.labelPlural,\n                icon: ds.icon || \"sap-icon://none\",\n                value: aChildNodes[j].count ? aChildNodes[j].count.toString() : \"\",\n                filterCondition: ds as any,\n                selected: false,\n                level: level,\n            });\n            aChildFacetItems.push(fi);\n        }\n        return aChildFacetItems;\n    }\n\n    getDataSourceFacetFromTree(searchModel: SearchModel): Facet {\n        const oDataSourceFacet = new Facet({\n            facetType: FacetTypeUI.DataSource,\n            title: \"Search In\",\n        });\n        const currentDS = searchModel.getProperty(\"/uiFilter/dataSource\");\n        const aAncestors = this._getAncestorDataSources(searchModel);\n        oDataSourceFacet.items.push(...aAncestors);\n        const aSiblings = this._getSiblingDataSources(\n            searchModel,\n            searchModel.allDataSource === currentDS ? 0 : 1\n        );\n        oDataSourceFacet.items.push(...aSiblings);\n        return oDataSourceFacet;\n    }\n\n    private _createFacetItemsFromConditionGroup(\n        dataSource: DataSource,\n        rootCondition: any\n    ): Array<FacetItem> {\n        // ToDo 'any'\n        const facetItems: Array<FacetItem> = [];\n        for (let i = 0; i < rootCondition.conditions.length; i++) {\n            const complexCondition = rootCondition.conditions[i];\n            for (let j = 0; j < complexCondition.conditions.length; j++) {\n                const condition = complexCondition.conditions[j];\n                let facetAttribute;\n                if (condition.type === this.searchFacetDialogModel.sinaNext.ConditionType.Simple) {\n                    facetAttribute = condition.attribute;\n                    if ((dataSource.getAttributeMetadata(facetAttribute) as AttributeMetadata).isHierarchy) {\n                        continue;\n                    }\n                    facetItems.push(\n                        new FacetItem({\n                            facetAttribute: facetAttribute,\n                            label: this._formatLabel(condition.valueLabel, condition.operator),\n                            filterCondition: condition,\n                            selected: true,\n                        })\n                    );\n                } else {\n                    facetAttribute = condition.conditions[0].attribute;\n                    if ((dataSource.getAttributeMetadata(facetAttribute) as AttributeMetadata).isHierarchy) {\n                        continue;\n                    }\n                    facetItems.push(\n                        new FacetItem({\n                            facetAttribute: facetAttribute,\n                            label: condition.valueLabel,\n                            filterCondition: condition,\n                            selected: true,\n                        })\n                    );\n                }\n            }\n        }\n        return facetItems;\n    }\n\n    private _formatLabel(label: string, operator) {\n        let labelFormatted;\n        switch (operator) {\n            case ComparisonOperator.Bw /*\"Bw\"*/:\n                labelFormatted = label + \"*\";\n                break;\n            case ComparisonOperator.Ew /*\"Ew\"*/:\n                labelFormatted = \"*\" + label;\n                break;\n            case ComparisonOperator.Co /*\"Co\"*/:\n                labelFormatted = \"*\" + label + \"*\";\n                break;\n            default:\n                labelFormatted = label;\n                break;\n        }\n        return labelFormatted;\n    }\n\n    private getAttributeFacetsFromResultSet(resultSet: SearchResultSet, searchModel: SearchModel): any {\n        const oDataSource = searchModel.getDataSource();\n        if (oDataSource.type === searchModel.sinaNext.DataSourceType.Category) {\n            return Promise.resolve([]); // UI decision: with Category, common attributes should not be shown\n        }\n\n        // get chart facets from resultSet\n        const aServerSideFacets = resultSet.facets.filter(function (element) {\n            return element && element.type && element.type === searchModel.sinaNext.FacetType.Chart;\n        }) as Array<ChartResultSet>;\n\n        // create facets and facet items from server response\n        const aClientSideFacets = [];\n        const aClientSideFacetsByDimension = {};\n        for (const oServerSideFacet of aServerSideFacets) {\n            let facetTotalCount;\n            if (typeof oServerSideFacet?.facetTotalCount === \"number\") {\n                facetTotalCount = oServerSideFacet?.facetTotalCount;\n            } else {\n                facetTotalCount = resultSet.totalCount;\n            }\n            const oClientSideFacet = new Facet({\n                title: oServerSideFacet.title,\n                facetType: FacetTypeUI.Attribute,\n                dimension: oServerSideFacet.query.dimension,\n                totalCount: facetTotalCount,\n            });\n            if (oServerSideFacet.items.length === 0) {\n                continue;\n            }\n            for (let j = 0; j < oServerSideFacet.items.length; j++) {\n                const oFacetListItem = oServerSideFacet.items[j];\n                const item = new FacetItem({\n                    facetAttribute: oServerSideFacet.query.dimension,\n                    label: this._formatLabel(\n                        oFacetListItem.dimensionValueFormatted,\n                        oFacetListItem.filterCondition.operator\n                    ),\n                    value: oFacetListItem.measureValue as any,\n                    filterCondition: oFacetListItem.filterCondition,\n                    icon: oFacetListItem.icon,\n                });\n                item.facetTitle = oServerSideFacet.title;\n                oClientSideFacet.items.push(item);\n            }\n            aClientSideFacetsByDimension[oServerSideFacet.query.dimension] = oClientSideFacet;\n            aClientSideFacets.push(oClientSideFacet);\n        }\n\n        this.addDataTypeToClientSideFacets(aClientSideFacets, searchModel);\n\n        // create facet items from global filter\n        const oClientSideFacetsWithSelection = {};\n        const aFacetItemsWithFilterConditions = this._createFacetItemsFromConditionGroup(\n            oDataSource,\n            searchModel.getProperty(\"/uiFilter/rootCondition\")\n        );\n\n        // combine facets from global filter with facets from server\n        for (let k = 0, lenK = aFacetItemsWithFilterConditions.length; k < lenK; k++) {\n            const oSelectedFacetItem = aFacetItemsWithFilterConditions[k];\n            const oClientSideFacetWithSelection =\n                aClientSideFacetsByDimension[oSelectedFacetItem.facetAttribute];\n            if (oClientSideFacetWithSelection) {\n                // remove and insert selected facet on top, only in facet panel\n                const indexOfClientSideFacetWithSelection = aClientSideFacets.indexOf(\n                    oClientSideFacetWithSelection\n                );\n                if (indexOfClientSideFacetWithSelection > 0) {\n                    aClientSideFacets.splice(indexOfClientSideFacetWithSelection, 1);\n                    aClientSideFacets.splice(0, 0, oClientSideFacetWithSelection);\n                }\n                // facet with the same title as a already selected facetitems facet was sent by the server\n                // -> merge the item into this facet. If the same facet item already exists just select it\n                // var facetItemFoundInFacet = false;\n                for (let m = 0, lenM = oClientSideFacetWithSelection.items.length; m < lenM; m++) {\n                    const facetItem = oClientSideFacetWithSelection.items[m];\n                    if (oSelectedFacetItem.filterCondition.equals(facetItem.filterCondition)) {\n                        facetItem.selected = true;\n                    }\n                }\n            }\n            oClientSideFacetsWithSelection[oSelectedFacetItem.facetAttribute] = oClientSideFacetWithSelection;\n        }\n\n        return Promise.resolve(aClientSideFacets);\n    }\n\n    addDataTypeToClientSideFacets(aClientSideFacets, searchModel: SearchModel): void {\n        const oDataSource = searchModel.getDataSource();\n        for (let i = 0; i < aClientSideFacets.length; i++) {\n            const oFacet = aClientSideFacets[i];\n            try {\n                const metadata = oDataSource.getAttributeMetadata(oFacet.dimension);\n                oFacet.dataType = metadata.type;\n            } catch (error) {\n                this.errorHandler.onError(error);\n            }\n        }\n    }\n\n    addQuickSelectDataSourceFacet(searchModel: SearchModel, facets: Array<any>): void {\n        if (searchModel.config.quickSelectDataSources.length === 0) {\n            return;\n        }\n        const dataSource = searchModel.config.quickSelectDataSources[0];\n        let facet;\n        if (dataSource.type === \"quickSelectDataSourceTreeNode\") {\n            // tree of datasources (one catalog)\n            facet = this.createTreeQuickSelectDataSourceFacet(searchModel);\n        } else {\n            // flat list of datasources (repository explorer)\n            facet = this.createListQuickSelectDataSourceFacet(searchModel);\n        }\n        facets.push(facet);\n    }\n\n    createListQuickSelectDataSourceFacet(searchModel: SearchModel): any {\n        return {\n            facetType: FacetTypeUI.QuickSelectDataSource,\n            items: searchModel.config.quickSelectDataSources.map((ds) => {\n                return {\n                    type: \"quickSelectDataSourceListItem\",\n                    dataSource: ds,\n                };\n            }),\n        };\n    }\n\n    createTreeQuickSelectDataSourceFacet(searchModel: SearchModel): any {\n        if (!this.treeQuickSelectDataSourceFacet) {\n            // use same structure as for list display\n            // root tree node is stored as first item\n            this.treeQuickSelectDataSourceFacet = {\n                facetType: FacetTypeUI.QuickSelectDataSource,\n                items: [\n                    {\n                        type: \"quickSelectDataSourceTreeNode\",\n                        children: searchModel.config.quickSelectDataSources.map((treeNodeProps) =>\n                            this.createTreeNodeQuickSelectDataSource(treeNodeProps)\n                        ),\n                    },\n                ],\n            };\n        }\n        const rootNode = this.treeQuickSelectDataSourceFacet.items[0];\n        this.expandPathToSelectedDataSource(searchModel, rootNode);\n        return this.treeQuickSelectDataSourceFacet;\n    }\n\n    expandPathToSelectedDataSource(searchModel: SearchModel, rootNode: TreeNode) {\n        type Path = Array<TreeNode>;\n\n        // helper function for collecting all tree paths to a datasource\n        function collectPaths(rootNode: TreeNode, dataSource): Array<Path> {\n            const paths: Array<Path> = [];\n            function findDataSource(path: Array<TreeNode>, node: TreeNode) {\n                path = path.slice();\n                path.push(node);\n                if (node.getDataSource && node.getDataSource() === dataSource) {\n                    paths.push(path);\n                    return;\n                }\n                if (!node.children) {\n                    return;\n                }\n                for (const childNode of node.children) {\n                    findDataSource(path, childNode);\n                }\n            }\n            findDataSource([], rootNode);\n            return paths;\n        }\n\n        // collect all paths in the tree to the current datasource\n        const paths = collectPaths(rootNode, searchModel.getDataSource());\n\n        // expand paths\n        for (const path of paths) {\n            for (let i = 0; i < path.length - 1; ++i) {\n                // i<path.length-1 because last path element is datasource itself and does not need expansion\n                const node = path[i];\n                node.expanded = true;\n            }\n        }\n    }\n\n    createTreeNodeQuickSelectDataSource(treeNodeProps): TreeNode {\n        let children = [];\n        if (treeNodeProps.children) {\n            children = treeNodeProps.children.map((childTreeNodeProps) => {\n                return this.createTreeNodeQuickSelectDataSource(childTreeNodeProps);\n            });\n        }\n        return {\n            expanded: false,\n            type: \"quickSelectDataSourceTreeNode\",\n            label: treeNodeProps.dataSource.labelPlural,\n            icon: treeNodeProps.dataSource.icon,\n            getDataSource: () => treeNodeProps.dataSource,\n            dataSourceId: treeNodeProps.dataSource.id,\n            children: children,\n            toggleExpand: function () {\n                this.expanded = !this.expanded;\n            },\n        };\n    }\n\n    async getFacets(\n        oDataSource: DataSource,\n        searchResultSet: SearchResultSet,\n        searchModel: SearchModel\n    ): Promise<any> {\n        const resultFacets = [];\n\n        // add datasource facet\n        resultFacets.push(this.getDataSourceFacetFromTree(searchModel));\n\n        // add quick select datasource facet\n        this.addQuickSelectDataSourceFacet(searchModel, resultFacets);\n\n        // for ds=apps or ds=category -> no attribute facets, just return\n        if (\n            oDataSource === searchModel.appDataSource ||\n            oDataSource.type === searchModel.sinaNext.DataSourceType.Category\n        ) {\n            this.sortFacets(resultFacets, searchModel);\n            this.setFacetIndex(resultFacets);\n            return resultFacets;\n        }\n\n        // return if we have no searchResultSet\n        if (!searchResultSet) {\n            this.sortFacets(resultFacets, searchModel);\n            this.setFacetIndex(resultFacets);\n            return resultFacets;\n        }\n\n        // add dynamic hierarchy facets\n        const hierarchyDynamicFacets = await this.hierarchyDynamicFacetsFormatter.getFacets(\n            searchResultSet,\n            searchModel\n        );\n        resultFacets.push(...hierarchyDynamicFacets);\n\n        // add static hierarchy facets\n        const hierarchyStaticFacets = await this.hierarchyStaticFacetsFormatter.getFacets(searchResultSet);\n        resultFacets.push(...hierarchyStaticFacets);\n\n        // add attribute facets\n        const attributeFacets = await this.getAttributeFacetsFromResultSet(searchResultSet, searchModel);\n        resultFacets.push(...attributeFacets);\n\n        // sort\n        this.sortFacets(resultFacets, searchModel);\n        this.setFacetIndex(resultFacets);\n        return resultFacets;\n    }\n\n    setFacetIndex(facets): void {\n        // facet index is needed in SearchHierarchyFacet and SearchHierarchyStaticFacet for updating facets in the UI\n        // see method refreshUI\n        for (let i = 0; i < facets.length; ++i) {\n            const facet = facets[i];\n            if (facet.setFacetIndex) {\n                facet.setFacetIndex(i);\n            } else {\n                facet.facetIndex = i;\n            }\n        }\n    }\n\n    sortFacets(facets: Array<Facet>, searchModel: SearchModel) {\n        const facetPosition: { [key in FacetTypeUI]: number } = {\n            [FacetTypeUI.DataSource]: -2000, // negative in order to not interfere with DSP exit\n            [FacetTypeUI.QuickSelectDataSource]: -1000, // negative in order to not interfere with DSP exit\n            [FacetTypeUI.HierarchyStatic]: 100,\n            [FacetTypeUI.Hierarchy]: 1000,\n            [FacetTypeUI.Attribute]: 1000,\n        };\n\n        for (let index = 0; index < facets.length; ++index) {\n            const facet = facets[index];\n\n            // keep original position\n            facet.position = index;\n\n            // add offset according to type\n            facet.position += facetPosition[facet.facetType];\n\n            // move facets with filters up\n            if (facet.facetType === FacetTypeUI.Attribute || facet.facetType === FacetTypeUI.Hierarchy) {\n                if (searchModel.getFilterRootCondition().containsAttribute(facet.dimension)) {\n                    facet.position -= 500;\n                }\n            }\n        }\n        facets.sort((f1, f2) => f1.position - f2.position);\n    }\n\n    getDialogFacetsFromMetaData(\n        dataSource: DataSource,\n        searchFacetDialogModel: SearchFacetDialogModel\n    ): Array<any> {\n        const facets = [];\n        // attribute facets\n        const attributeFacets = this.getAttributeDialogFacetsFromMetaData(dataSource, searchFacetDialogModel);\n        facets.push(...attributeFacets);\n        // dynamic hierarchy attribute facets\n        const hierarchyDynamicFacets = this.hierarchyDynamicFacetsFormatter.getFacetsFromMetadata(\n            dataSource,\n            searchFacetDialogModel\n        );\n        facets.push(...hierarchyDynamicFacets);\n        // sort\n        facets.sort(function (a, b) {\n            return a.title.localeCompare(b.title);\n        });\n        // set facet index\n        this.setFacetIndex(facets);\n        return facets;\n    }\n\n    getAttributeDialogFacetsFromMetaData(\n        oMetaData: DataSource,\n        searchFacetDialogModel: SearchFacetDialogModel\n    ): Array<any> {\n        const aServerSideFacets = Object.values(oMetaData.attributeMetadataMap);\n        const aClientSideFacets = [];\n        // extract facets from server response:\n        for (const oServerSideFacet of aServerSideFacets) {\n            if (\n                (oServerSideFacet.usage.Facet || oServerSideFacet.usage.AdvancedSearch) &&\n                (oServerSideFacet as AttributeMetadata).isHierarchy !== true // Hierarchy attribute based facet is not displayed in the showmore dialog, but in static hierarchy facet.\n            ) {\n                const oClientSideFacet = new Facet({\n                    title: (oServerSideFacet as AttributeMetadata).label,\n                    facetType: FacetTypeUI.Attribute,\n                    dimension: oServerSideFacet.id,\n                    dataType: oServerSideFacet.type,\n                    matchingStrategy: (oServerSideFacet as AttributeMetadata).matchingStrategy,\n                });\n\n                const aFacetItemsWithFilterConditions = this._createFacetItemsFromConditionGroup(\n                    searchFacetDialogModel.getDataSource(),\n                    searchFacetDialogModel.getProperty(\"/uiFilter/rootCondition\")\n                );\n                let count = 0;\n                for (let k = 0, lenK = aFacetItemsWithFilterConditions.length; k < lenK; k++) {\n                    const oSelectedFacetItem = aFacetItemsWithFilterConditions[k];\n                    oSelectedFacetItem.visible = oClientSideFacet.visible;\n                    if (oSelectedFacetItem.facetAttribute === oClientSideFacet.dimension) {\n                        count++;\n                        oClientSideFacet.items.splice(0, 0, oSelectedFacetItem);\n                    }\n                }\n                oClientSideFacet[\"count\"] = count; // ToDo, 'count does not exist ?!?'\n\n                aClientSideFacets.push(oClientSideFacet);\n            }\n        }\n\n        return aClientSideFacets;\n    }\n\n    getDialogFacetsFromChartQuery(\n        resultSet: ChartResultSet,\n        searchModel: SearchModel,\n        dimension: string,\n        filters?: Array<any>\n    ): Facet {\n        const oClientSideFacet = new Facet({\n            dimension: dimension,\n            totalCount: resultSet?.facetTotalCount,\n        });\n\n        if (resultSet) {\n            for (let j = 0; j < resultSet.items.length; j++) {\n                const oFacetListItem = resultSet.items[j];\n                const item = new FacetItem({\n                    value: oFacetListItem.measureValue as any,\n                    filterCondition: oFacetListItem.filterCondition,\n                    label: oFacetListItem.dimensionValueFormatted,\n                    facetAttribute: resultSet.query.dimension,\n                });\n                oClientSideFacet.items.push(item);\n            }\n\n            // add filter conditions as facet items:\n            let aFacetItemsWithFilterConditions;\n            if (filters) {\n                aFacetItemsWithFilterConditions = filters;\n            } else {\n                aFacetItemsWithFilterConditions = this._createFacetItemsFromConditionGroup(\n                    searchModel.getDataSource(),\n                    searchModel.getProperty(\"/uiFilter/rootCondition\")\n                );\n            }\n\n            for (let k = 0, lenK = aFacetItemsWithFilterConditions.length; k < lenK; k++) {\n                const oSelectedFacetItem = aFacetItemsWithFilterConditions[k];\n                if (oSelectedFacetItem.facetAttribute === oClientSideFacet.dimension) {\n                    let facetItemFoundInFacet = false;\n                    for (let m = 0, lenM = oClientSideFacet.items.length; m < lenM; m++) {\n                        const facetItem = oClientSideFacet.items[m];\n                        if (oSelectedFacetItem.filterCondition.equals(facetItem.filterCondition)) {\n                            facetItem.selected = true;\n                            facetItemFoundInFacet = true;\n                        }\n                    }\n                    if (!facetItemFoundInFacet) {\n                        // there is no such facet item -> add the facet item to the facet\n                        oClientSideFacet.items.splice(oClientSideFacet.items.length, 0, oSelectedFacetItem);\n                        if (oSelectedFacetItem.filterCondition.userDefined) {\n                            oSelectedFacetItem.advanced = true;\n                        } else {\n                            oSelectedFacetItem.listed = true;\n                            oSelectedFacetItem.value = \"\";\n                            oSelectedFacetItem.valueLabel = \"\";\n                        }\n                    } else {\n                        oSelectedFacetItem.listed = true;\n                    }\n                }\n            }\n        }\n\n        return oClientSideFacet;\n    }\n\n    hasDialogFacetsFromMetaData(searchModel: SearchModel): boolean {\n        const oMetaData = searchModel.getDataSource();\n        const aServerSideFacets = Object.values(oMetaData.attributeMetadataMap);\n        let hasDialogFacets = false;\n\n        // extract facets from server response:\n        for (const oServerSideFacet of aServerSideFacets) {\n            if (oServerSideFacet.usage) {\n                if (oServerSideFacet.usage.Facet || oServerSideFacet.usage.AdvancedSearch) {\n                    // TODO: ||, show more displays facets + advanced search\n                    hasDialogFacets = true;\n                    break;\n                }\n            }\n        }\n        return hasDialogFacets;\n    }\n\n    handleDataSourceChanged(): void {\n        this.hierarchyDynamicFacetsFormatter.handleDataSourceChanged();\n        this.hierarchyStaticFacetsFormatter.handleDataSourceChanged();\n    }\n\n    destroy(): void {\n        this.hierarchyDynamicFacetsFormatter.destroy();\n        this.hierarchyDynamicFacetsFormatter = null;\n        this.hierarchyStaticFacetsFormatter.destroy();\n        this.hierarchyStaticFacetsFormatter = null;\n    }\n}\n"],"mappings":"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","ignoreList":[]}