{"version":3,"file":"RecentlyUsedStorage.js","names":["sap","ui","define","Log","___suggestions_SuggestionType","___personalization_PersonalizationKeys","Type","SuggestionType","RecentEntriesPosition","PersonalizationKeys","StorageVersion","objectSuggestionCopyProperties","searchSuggestionCopyProperties","transactionSuggestionsCopyProperties","RecentlyUsedStorage","personalizationStorage","_oLogger","maxItems","key","recentSearches","searchModel","constructor","properties","this","getLogger","deleteAllItems","deleteItem","save","getSerializedItemsInternal","serializedItems","getItem","filter","item","version","V2","getItems","currentFilter","query","map","serializedItem","deSerialize","uiSuggestionType","Search","equals","copyProperties","target","source","property","label","tmpResult","Object","titleNavigation","sinaNext","parseNavigationTargetFromJson","dataSource","getDataSource","deSerializeSearchNavigationTarget","navigationTarget","Transaction","position","isRecentEntry","serialize","serializedRecentItem","toJson","id","label1","label2","serializeSearchNavigationTarget","searchNavigationTarget","navigationTargetParamters","parseSearchNavigationTarget","createSearchNavigationTarget","assign","updateUrl","navigationTargetJson","navigationTargetParameters","addItem","isStorageOfPersonalDataAllowed","some","index","items","debug","splice","length","oldest","pop","unshift","setItem"],"sources":["RecentlyUsedStorage.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\n// read and write recently used data into personalization storage\n\nimport Log, { Logger } from \"sap/base/Log\";\nimport PersonalizationStorage from \"./personalization/PersonalizationStorage\";\nimport SearchModel from \"./SearchModel\";\nimport { DataSource } from \"./sinaNexTS/sina/DataSource\";\nimport { Type, SuggestionType, RecentEntriesPosition } from \"./suggestions/SuggestionType\";\nimport { NavigationTarget, NavigationTargetJson } from \"./sinaNexTS/sina/NavigationTarget\";\nimport { Filter } from \"./sinaNexTS/sina/Filter\";\nimport { PersonalizationKeys } from \"./personalization/PersonalizationKeys\";\n\nenum StorageVersion {\n    V2 = 2,\n}\n\nconst objectSuggestionCopyProperties = [\n    \"uiSuggestionType\",\n    \"label\",\n    \"label1\",\n    \"label2\",\n    \"imageUrl\",\n    \"imageIsCircular\",\n    \"imageExists\",\n];\n\nconst searchSuggestionCopyProperties = [\"uiSuggestionType\", \"label\", \"icon\", \"filterIcon\"];\n\nconst transactionSuggestionsCopyProperties = [\"uiSuggestionType\", \"label\", \"url\", \"icon\", \"searchTerm\"];\n\nexport interface RecentItem {\n    label: string;\n    label1?: string;\n    label2?: string;\n    icon?: string;\n    uiSuggestionType?: Type;\n    imageUrl?: string;\n    imageExists?: true;\n    imageIsCircular?: boolean;\n    titleNavigation?: NavigationTarget;\n    dataSource?: DataSource;\n    // --\n    position?: number;\n    isRecentEntry?: boolean;\n    filter?: Filter;\n}\n\nexport interface RecentItemInStorage {\n    label?: string;\n    label1?: string;\n    label2?: string;\n    icon?: string;\n    uiSuggestionType?: Type;\n    imageUrl?: string;\n    imageExists?: true;\n    imageIsCircular?: string;\n    titleNavigation?: NavigationTargetJson;\n    // --\n    dataSource?: string;\n    key: string;\n    version?: StorageVersion;\n}\n\nexport default class RecentlyUsedStorage {\n    private personalizationStorage: PersonalizationStorage;\n    private _oLogger: Logger;\n    private maxItems;\n    private readonly key = PersonalizationKeys.recentSearches;\n    private readonly searchModel: SearchModel;\n\n    constructor(properties: {\n        personalizationStorage: PersonalizationStorage;\n        maxItems?: number;\n        searchModel: SearchModel;\n    }) {\n        this.personalizationStorage = properties.personalizationStorage;\n        this._oLogger = Log.getLogger(\"sap.esh.search.ui.RecentlyUsedStorage\");\n        this.maxItems = properties.maxItems || 10;\n        this.searchModel = properties.searchModel;\n    }\n\n    public async deleteAllItems(): Promise<unknown> {\n        this.personalizationStorage.deleteItem(this.key);\n        return this.personalizationStorage.save();\n    }\n\n    private getSerializedItemsInternal(): Array<RecentItemInStorage> {\n        const serializedItems =\n            (this.personalizationStorage.getItem(this.key) as Array<RecentItemInStorage>) ?? [];\n        return serializedItems.filter((item: RecentItemInStorage) => item.version >= StorageVersion.V2);\n    }\n\n    public getItems(): Array<RecentItem> {\n        const currentFilter = this.searchModel?.query?.filter;\n        return this.getSerializedItemsInternal()\n            .map((serializedItem) => this.deSerialize(serializedItem))\n            .filter((item: RecentItem) => {\n                if (item.uiSuggestionType === Type.Search && item.filter.equals(currentFilter)) {\n                    return false;\n                }\n                return true;\n            });\n    }\n\n    private copyProperties(target: object, source: object, properties: Array<string>) {\n        for (const property of properties) {\n            target[property] = source[property];\n        }\n    }\n\n    private deSerialize(serializedItem: RecentItemInStorage): RecentItem {\n        const item: RecentItem = { label: \"\" };\n        let tmpResult;\n        switch (serializedItem.uiSuggestionType) {\n            case SuggestionType.Object:\n                this.copyProperties(item, serializedItem, objectSuggestionCopyProperties);\n                item.titleNavigation = this.searchModel.sinaNext.parseNavigationTargetFromJson(\n                    serializedItem.titleNavigation\n                );\n                item.dataSource = this.searchModel.sinaNext.getDataSource(serializedItem.dataSource);\n                break;\n            case SuggestionType.Search:\n                this.copyProperties(item, serializedItem, searchSuggestionCopyProperties);\n                tmpResult = this.deSerializeSearchNavigationTarget(serializedItem.titleNavigation);\n                item.titleNavigation = tmpResult.navigationTarget;\n                item.filter = tmpResult.filter;\n                break;\n            case SuggestionType.Transaction:\n                this.copyProperties(item, serializedItem, transactionSuggestionsCopyProperties);\n                break;\n        }\n        item.position = RecentEntriesPosition;\n        item.isRecentEntry = true;\n        return item;\n    }\n\n    private serialize(item: RecentItem): RecentItemInStorage {\n        const serializedRecentItem: RecentItemInStorage = { key: \"\" };\n        switch (item.uiSuggestionType) {\n            case SuggestionType.Object:\n                this.copyProperties(serializedRecentItem, item, objectSuggestionCopyProperties);\n                serializedRecentItem.titleNavigation = item.titleNavigation.toJson();\n                serializedRecentItem.dataSource = item.dataSource.id;\n                serializedRecentItem.key = item.uiSuggestionType + \"/\" + item.label1 + \"/\" + item.label2;\n                break;\n            case SuggestionType.Search:\n                this.copyProperties(serializedRecentItem, item, searchSuggestionCopyProperties);\n                serializedRecentItem.titleNavigation = this.serializeSearchNavigationTarget(\n                    item.titleNavigation\n                );\n                serializedRecentItem.key = item.uiSuggestionType + \"/\" + item.label;\n                break;\n            case SuggestionType.Transaction:\n                this.copyProperties(serializedRecentItem, item, transactionSuggestionsCopyProperties);\n                serializedRecentItem.key = item.uiSuggestionType + \"/\" + item.label;\n                break;\n        }\n        serializedRecentItem.version = StorageVersion.V2;\n        return serializedRecentItem;\n    }\n\n    private serializeSearchNavigationTarget(searchNavigationTarget: NavigationTarget): NavigationTargetJson {\n        // parse navigation target\n        const navigationTargetParamters =\n            this.searchModel.parseSearchNavigationTarget(searchNavigationTarget);\n        // recreate navigation target with forced updateUrl=true\n        return this.searchModel\n            .createSearchNavigationTarget(Object.assign(navigationTargetParamters, { updateUrl: true }))\n            .toJson();\n    }\n\n    private deSerializeSearchNavigationTarget(navigationTargetJson: NavigationTargetJson): {\n        filter: Filter;\n        navigationTarget: NavigationTarget;\n    } {\n        // json -> navigation target\n        const searchNavigationTarget =\n            this.searchModel.sinaNext.parseNavigationTargetFromJson(navigationTargetJson);\n        // parse navigation target\n        const navigationTargetParameters =\n            this.searchModel.parseSearchNavigationTarget(searchNavigationTarget);\n        // recreate navigation target (this evaluates model.config.updateUrl and create a url based or target function based navigation target)\n        return {\n            filter: navigationTargetParameters.filter,\n            navigationTarget: this.searchModel.createSearchNavigationTarget(navigationTargetParameters),\n        };\n    }\n\n    /**\n     * Adds a search to the recent store. Item at index 0 is newest entry. If item is omitted, the current search will be saved.\n     **/\n    public addItem(item: RecentItem): void {\n        // check storage enabled\n        if (!this.personalizationStorage.isStorageOfPersonalDataAllowed()) return;\n\n        // serialize item\n        const serializedItem = this.serialize(item);\n\n        // remove existing items (with identical key)\n        const serializedItems = this.getSerializedItemsInternal();\n        serializedItems.some((item: RecentItemInStorage, index, items) => {\n            if (item.key === serializedItem.key) {\n                this._oLogger.debug(\n                    \"Removing already existing item \" + serializedItem.key + \" at pos \" + index\n                );\n                items.splice(index, 1);\n                return true;\n            }\n        });\n\n        // remove oldest item if limit reached\n        if (serializedItems.length >= this.maxItems) {\n            const oldest = serializedItems.pop();\n            this._oLogger.debug(\"Removing oldest item \" + oldest.key);\n        }\n\n        // add new item\n        this._oLogger.debug(\"Adding item \" + serializedItem.key);\n        serializedItems.unshift(serializedItem);\n        this.personalizationStorage.setItem(this.key, serializedItems);\n    }\n}\n"],"mappings":"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","ignoreList":[]}