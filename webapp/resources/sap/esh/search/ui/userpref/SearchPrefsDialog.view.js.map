{"version":3,"file":"SearchPrefsDialog.view.js","names":["sap","ui","define","Button","CheckBox","FlexBox","FlexItemData","Label","sap_m_library","List","MessageBox","StandardListItem","Title","VBox","View","BindingMode","__i18n","_interopRequireDefault","obj","__esModule","default","ListMode","i18n","SearchPrefsDialog","extend","createContent","_createContent","this","firstTimeBeforeRendering","oSearchPrefsVBox","items","createSearchPersonalizationContent","createNlqContent","createMyFavoritesContent","_createSearchPersonalizationContent","oTitlePersSearch","text","getText","oPersSearchCheckBox","selected","path","mode","TwoWay","enabled","layoutData","growFactor","oResetButton","press","resetHistory","bind","parts","formatter","isPersonalizedSearchEditable","resetButtonWasClicked","oPersSearchFlexBox","visible","_createMyFavoritesContent","oTitleDefaultSearch","oCheckBoxScope","oListLabel","addStyleClass","oListCount","selectedDataSourceCount","dataSourceCount","oListHeadlineFlexBox","oList","MultiSelect","selectionChange","oEvent","onListItemSelectionChange","growing","growingThreshold","bindAggregation","factory","oListItem","title","oDefaultSearchVBox","_createNlqContent","nlqTitle","push","nlqCheckBox","nlqConnectorListTitle","nlqActive","nlqEnabledInfoOnDataSource","nlqConnectorList","nlqDataSources","length","growingScrollToLoad","template","noNlqConnectorsLabel","nlqContent","onBeforeRendering","_onBeforeRendering","getModel","reload","_resetHistory","resetProfile","then","response","errorText","show","icon","Icon","ERROR","actions","Action","OK","styleClass","_onListItemSelectionChange","setProperty","getSource","getSelectedItems"],"sources":["SearchPrefsDialog.view.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\nimport Button from \"sap/m/Button\";\nimport CheckBox from \"sap/m/CheckBox\";\nimport FlexBox from \"sap/m/FlexBox\";\nimport FlexItemData from \"sap/m/FlexItemData\";\nimport Label from \"sap/m/Label\";\nimport { ListMode } from \"sap/m/library\";\nimport List from \"sap/m/List\";\nimport MessageBox from \"sap/m/MessageBox\";\nimport StandardListItem from \"sap/m/StandardListItem\";\nimport Title from \"sap/m/Title\";\nimport VBox from \"sap/m/VBox\";\nimport Event from \"sap/ui/base/Event\";\nimport View from \"sap/ui/core/mvc/View\";\nimport BindingMode from \"sap/ui/model/BindingMode\";\nimport i18n from \"../i18n\";\nimport SearchPrefsModel from \"./SearchPrefsModel\";\nimport type { DataSource } from \"../sinaNexTS/sina/DataSource\";\n\n/**\n * @namespace sap.esh.search.ui.userpref\n */\nexport default class SearchPrefsDialog extends View {\n    // search preferences dialog view\n\n    private firstTimeBeforeRendering: boolean;\n\n    createContent(): Array<VBox> {\n        this.firstTimeBeforeRendering = true;\n        const oSearchPrefsVBox = new VBox({\n            items: [\n                this.createSearchPersonalizationContent(),\n                this.createNlqContent(),\n                this.createMyFavoritesContent(),\n            ],\n        });\n        return [oSearchPrefsVBox];\n    }\n\n    createSearchPersonalizationContent(): VBox {\n        // *********** upper area (always visilble) ******************\n\n        // Title for Personalized Search\n        const oTitlePersSearch = new Title({\n            text: i18n.getText(\"sp.personalizedSearch\"),\n        });\n\n        // CheckBox for Track Search Activities\n        const oPersSearchCheckBox = new CheckBox(\"personalizedSearchCheckbox\", {\n            selected: {\n                path: \"/personalizedSearch\",\n                mode: BindingMode.TwoWay,\n            },\n            text: i18n.getText(\"sp.trackPersonalizedSearch\"),\n            enabled: { path: \"/isPersonalizedSearchEditable\" },\n            layoutData: new FlexItemData({ growFactor: 1 }),\n        });\n\n        // Reset button\n        const oResetButton = new Button(\"\", {\n            text: i18n.getText(\"sp.deleteSearchTracks\"),\n            press: this.resetHistory.bind(this),\n            enabled: {\n                parts: [{ path: \"/isPersonalizedSearchEditable\" }, { path: \"/resetButtonWasClicked\" }],\n                formatter: (\n                    isPersonalizedSearchEditable: boolean,\n                    resetButtonWasClicked: boolean\n                ): boolean => {\n                    return isPersonalizedSearchEditable && !resetButtonWasClicked;\n                },\n            },\n        });\n\n        const oPersSearchFlexBox = new FlexBox({\n            items: [oPersSearchCheckBox, oResetButton],\n        });\n\n        return new VBox(\"\", {\n            items: [oTitlePersSearch, oPersSearchFlexBox],\n            visible: { path: \"/isPersonalizedSearchAreaVisible\" },\n        });\n    }\n\n    createMyFavoritesContent(): VBox {\n        // *********** lower area - Not always visilble depending on isMyFavoritesAvailable ******************\n\n        // Title for Default Search Scope\n        const oTitleDefaultSearch: Title = new Title({\n            text: i18n.getText(\"sp.defaultSearchScope\"),\n        });\n\n        // Checkbox for using Personalized Search Scope (switch on/off)\n        const oCheckBoxScope = new CheckBox(\"defaultSearchScopeCheckbox\", {\n            selected: {\n                path: \"/favActive\",\n                mode: BindingMode.TwoWay,\n            },\n            text: i18n.getText(\"sp.usePersSearchScope\"),\n        });\n\n        // Headline for connector list\n        const oListLabel = new Label(\"connectorListLabel\", {\n            text: i18n.getText(\"sp.connectorList\"),\n            visible: { path: \"/favActive\" },\n            layoutData: new FlexItemData({ growFactor: 1 }),\n        }).addStyleClass(\"sapUiSmallMarginTop\");\n\n        // Display selected count and total count of connectors in headline\n        const oListCount = new Label(\"\", {\n            text: {\n                parts: [{ path: \"/selectedDataSourceCount\" }, { path: \"/dataSourceCount\" }],\n                formatter: (selectedDataSourceCount: number, dataSourceCount: number): string => {\n                    return i18n.getText(\"sp.connectorListCount\", [selectedDataSourceCount, dataSourceCount]);\n                },\n            },\n            visible: { path: \"/favActive\" },\n        }).addStyleClass(\"sapUiSmallMarginTop\");\n\n        const oListHeadlineFlexBox = new FlexBox({\n            items: [oListLabel, oListCount],\n        });\n\n        // Connector list\n        const oList = new List(\"connectorListId\", {\n            mode: ListMode.MultiSelect,\n            visible: { path: \"/favActive\" },\n            //    visible: \"{/favActive}\",\n            selectionChange: (oEvent: Event): void => {\n                this.onListItemSelectionChange(oEvent);\n            },\n            growing: true,\n            growingThreshold: 1000,\n            //  growingScrollToLoad: true,\n        }).addStyleClass(\"sapUiTinyMarginTop\");\n\n        oList.bindAggregation(\"items\", {\n            path: \"/subDataSources\",\n            factory: (): StandardListItem => {\n                const oListItem = new StandardListItem(\"\", {\n                    title: { path: \"label\" },\n                    selected: { path: \"selected\" },\n                });\n                return oListItem;\n            },\n        });\n\n        // assemble\n        const oDefaultSearchVBox = new VBox(\"\", {\n            items: [oTitleDefaultSearch, oCheckBoxScope, oListHeadlineFlexBox, oList],\n            visible: { path: \"/isMyFavoritesAvailable\" },\n        }).addStyleClass(\"sapUiSmallMarginTop\");\n\n        return oDefaultSearchVBox;\n    }\n\n    createNlqContent(): VBox {\n        const items = [];\n        // title\n        const nlqTitle: Title = new Title({\n            text: i18n.getText(\"sp.nlqTitle\"),\n        });\n        items.push(nlqTitle);\n\n        // nlq active checkbox\n        const nlqCheckBox = new CheckBox(\"\", {\n            selected: {\n                path: \"/nlqActive\",\n                mode: BindingMode.TwoWay,\n            },\n            text: i18n.getText(\"sp.nlqSwitch\"),\n            layoutData: new FlexItemData({ growFactor: 1 }),\n        });\n        nlqCheckBox.addStyleClass(\"sapUshellSearchPrefsNlq\");\n        items.push(nlqCheckBox);\n\n        // heading for connector list\n        const nlqConnectorListTitle = new Label({\n            text: i18n.getText(\"sp.nlqConnectorListTitle\"),\n            visible: {\n                parts: [\"/nlqActive\", \"/nlqEnabledInfoOnDataSource\"],\n                formatter: (nlqActive: boolean, nlqEnabledInfoOnDataSource: boolean): boolean => {\n                    return !!(nlqActive && nlqEnabledInfoOnDataSource); // important: convert undefined to false\n                },\n            },\n        });\n        nlqConnectorListTitle.addStyleClass(\"sapUiSmallMarginTop\");\n        items.push(nlqConnectorListTitle);\n\n        // connector list\n        const nlqConnectorList = new List({\n            visible: {\n                parts: [\"/nlqActive\", \"/nlqEnabledInfoOnDataSource\", \"/nlqDataSources\"],\n                formatter: (\n                    nlqActive: boolean,\n                    nlqEnabledInfoOnDataSource: boolean,\n                    nlqDataSources: Array<DataSource>\n                ): boolean => {\n                    return !!(nlqActive && nlqEnabledInfoOnDataSource && nlqDataSources.length > 0); // important: convert undefined to false\n                },\n            },\n            growing: true,\n            growingThreshold: 10,\n            growingScrollToLoad: false,\n            items: {\n                path: \"/nlqDataSources\",\n                template: new StandardListItem({\n                    title: \"{label}\",\n                }),\n            },\n        });\n        nlqConnectorList.addStyleClass(\"sapUshellSearchPrefsNlqConnectorList\");\n        items.push(nlqConnectorList);\n\n        // label no nlq connectors available\n        const noNlqConnectorsLabel = new Label({\n            visible: {\n                parts: [\"/nlqActive\", \"/nlqEnabledInfoOnDataSource\", \"/nlqDataSources\"],\n                formatter: (\n                    nlqActive: boolean,\n                    nlqEnabledInfoOnDataSource: boolean,\n                    nlqDataSources: Array<DataSource>\n                ): boolean => {\n                    return !!(nlqActive && nlqEnabledInfoOnDataSource && nlqDataSources.length === 0); // important: convert undefined to false\n                },\n            },\n            text: i18n.getText(\"sp.nlqNoConnectorsAvailable\"),\n        });\n        items.push(noNlqConnectorsLabel);\n\n        // vbox container\n        const nlqContent = new VBox(\"\", {\n            items: items,\n            visible: { path: \"/isNlqAreaVisible\" },\n        });\n        nlqContent.addStyleClass(\"sapUiSmallMarginTop\");\n        return nlqContent;\n    }\n\n    onBeforeRendering(): void {\n        // first -> no model reload\n        if (this.firstTimeBeforeRendering) {\n            this.firstTimeBeforeRendering = false;\n            return;\n        }\n        // reload model data\n        (this.getModel() as SearchPrefsModel).reload();\n    }\n\n    resetHistory(): void {\n        (this.getModel() as SearchPrefsModel).resetProfile().then(\n            () => {\n                // success: nothing to do here\n            },\n            (response) => {\n                // error: display error popup\n                let errorText = i18n.getText(\"sp.resetFailed\");\n                errorText += \"\\n\" + response;\n                MessageBox.show(errorText, {\n                    title: i18n.getText(\"sp.resetFailedTitle\"),\n                    icon: MessageBox.Icon.ERROR,\n                    actions: [MessageBox.Action.OK],\n                    styleClass: \"sapUshellSearchMessageBox\", // selector for closePopovers\n                });\n            }\n        );\n    }\n\n    // event: select listItem in connector list\n    onListItemSelectionChange(oEvent: Event) {\n        (this.getModel() as SearchPrefsModel).setProperty(\n            \"/selectedDataSourceCount\",\n            (oEvent.getSource() as List).getSelectedItems().length\n        );\n    }\n}\n"],"mappings":"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","ignoreList":[]}