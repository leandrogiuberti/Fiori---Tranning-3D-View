{"version":3,"file":"cFLPUtil-dbg.js","names":["sap","ui","define","___sinaNexTS_providers_multi_FederationType","___sinaNexTS_sina_SinaConfiguration","FederationType","AvailableProviders","createContentProviderSinaConfiguration","contentProviderId","service","window","ushell","Container","getServiceAsync","oSystemContext","getSystemContext","sRequestUrlForAppRouter","getFullyQualifiedXhrUrl","sinaProviderType","getProperty","provider","toLowerCase","label","url","readCFlpConfiguration","sinaConfigurations","cf","Promise","resolve","oApplications","getApplications","oContentProviders","Object","keys","reduce","o","sApplicationKey","oApplication","sContentProviderId","contentProviderIds","promises","i","length","push","subSinaProviderConfigurations","all","filter","elem","MULTI","subProviders","federationType","advanced_round_robin","DUMMY","__exports","__esModule"],"sources":["cFLPUtil.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\nimport { FederationType } from \"./sinaNexTS/providers/multi/FederationType\";\nimport { AvailableProviders, SinaConfiguration } from \"./sinaNexTS/sina/SinaConfiguration\";\n\nasync function createContentProviderSinaConfiguration(\n    contentProviderId: string\n): Promise<SinaConfiguration | void> {\n    const service = await (window.sap.ushell as any).Container.getServiceAsync(\"ClientSideTargetResolution\");\n    const oSystemContext = await service.getSystemContext(contentProviderId);\n\n    // uncoment for cflp jade dev env:\n    /*const fixProtocol = {\n        enable: async function () {\n            this.ctr = await (function () {\n                return new Promise((resolve) => {\n                    sap.ui.require(\n                        [\"sap/ushell/services/ClientSideTargetResolution/SystemContext\"],\n                        function (ctr) {\n                            resolve(ctr);\n                        }\n                    );\n                });\n            })();\n            this._getProtocol = this.ctr._getProtocol;\n            this.ctr._getProtocol = () => \"https\";\n        },\n        disable: function () {\n            this.ctr._getProtocol = this._getProtocol;\n        },\n    };\n    await fixProtocol.enable();*/\n\n    const sRequestUrlForAppRouter = oSystemContext.getFullyQualifiedXhrUrl(\n        \"sap/opu/odata/sap/ESH_SEARCH_SRV\"\n    );\n\n    const sinaProviderType = oSystemContext.getProperty(\"esearch.provider\");\n    if (!sinaProviderType) {\n        // destination of this content provider has no launchpad.esearch.provider property\n        // -> not relevant for search\n        return;\n    }\n    return {\n        contentProviderId,\n        provider: sinaProviderType.toLowerCase(),\n        label: contentProviderId,\n        url: sRequestUrlForAppRouter,\n    };\n}\n\nexport async function readCFlpConfiguration(\n    sinaConfigurations: Array<SinaConfiguration | AvailableProviders>\n): Promise<Array<SinaConfiguration | AvailableProviders>> {\n    if (!sap || !(sap as any).cf) {\n        return Promise.resolve(sinaConfigurations); // -> not active -> do nothing\n    }\n\n    // read content providers from cflp configuration\n    const service = await (window.sap.ushell as any).Container.getServiceAsync(\"CommonDataModel\");\n    const oApplications = await service.getApplications();\n\n    // extract content provider ids\n    const oContentProviders = Object.keys(oApplications).reduce(function (o, sApplicationKey) {\n        const oApplication = oApplications[sApplicationKey];\n        const sContentProviderId = oApplication[\"sap.app\"] && oApplication[\"sap.app\"].contentProviderId;\n        if (sContentProviderId) {\n            o[sContentProviderId] = true;\n        }\n        return o;\n    }, {});\n    const contentProviderIds = Object.keys(oContentProviders);\n\n    // create sina provider configuration\n    const promises = [];\n    for (let i = 0; i < contentProviderIds.length; ++i) {\n        const contentProviderId = contentProviderIds[i];\n        promises.push(createContentProviderSinaConfiguration(contentProviderId));\n    }\n    let subSinaProviderConfigurations: Array<SinaConfiguration> = await Promise.all(promises);\n\n    if (!subSinaProviderConfigurations || subSinaProviderConfigurations.length === 0) {\n        // fallback if configuration is empty\n        return sinaConfigurations;\n    } else {\n        // assemble multi provider configuration\n        subSinaProviderConfigurations = subSinaProviderConfigurations.filter(function (elem) {\n            if (typeof elem !== \"undefined\") {\n                return elem;\n            }\n        });\n        return [\n            {\n                provider: AvailableProviders.MULTI,\n                subProviders: subSinaProviderConfigurations,\n                federationType: FederationType.advanced_round_robin,\n                url: \"\", // not relevant for multi provider\n            },\n            AvailableProviders.DUMMY,\n        ];\n    }\n}\n"],"mappings":"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","ignoreList":[]}