{"version":3,"file":"SearchUrlParserInav2.js","names":["sap","ui","define","MessageBox","__errors","__i18n","_interopRequireDefault","obj","__esModule","default","errors","i18n","isComplexConditionJSON","conditionJSON","conditions","SearchUrlParserInav2","model","constructor","properties","this","parseUrlParameters","oParametersLowerCased","top","parseInt","setTop","dataSource","sinaNext","allDataSource","datasource","dataSourceJson","JSON","parse","dataSourceId","ObjectName","value","Type","getDataSource","createDataSource","type","DataSourceType","Category","id","label","labelPlural","filter","show","getText","icon","Icon","ERROR","title","actions","Action","OK","styleClass","internalError","Error","UnknownDataSourceType","loadMetadata","context","rootCondition","filterJson","parseCondition","e","createComplexCondition","toString","createFilter","searchTerm","searchterm","setProperty","setDataSource","conditionJson","parseComplexCondition","parseSimpleCondition","subConditions","i","length","subConditionJson","push","operator","valueLabel","attribute","createSimpleCondition","attributeLabel","parseValue","parseOperator","metadata","getAttributeMetadata","inav2TypeConverter","ina2Sina","ComparisonOperator","Eq","Gt","Ge","Lt","Le"],"sources":["SearchUrlParserInav2.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\nimport SearchModel from \"sap/esh/search/ui/SearchModel\";\nimport MessageBox from \"sap/m/MessageBox\";\nimport errors from \"./error/errors\";\nimport i18n from \"./i18n\";\nimport { ComparisonOperator } from \"./sinaNexTS/sina/ComparisonOperator\";\nimport { ComplexCondition } from \"./sinaNexTS/sina/ComplexCondition\";\nimport { DataSource } from \"./sinaNexTS/sina/DataSource\";\nimport { LogicalOperator } from \"./sinaNexTS/sina/LogicalOperator\";\nimport { SimpleCondition } from \"./sinaNexTS/sina/SimpleCondition\";\nimport { Value } from \"./sinaNexTS/sina/types\";\n\ninterface INAV2ConditionJSON {\n    label: string;\n    attribute: string;\n    attributeLabel: string;\n    value: string;\n    valueLabel: string;\n}\n\ninterface SimpleConditionJSON extends INAV2ConditionJSON {\n    operator: \"=\" | \">\" | \">=\" | \"<\" | \"<=\";\n}\n\ninterface ComplexConditionJSON extends INAV2ConditionJSON {\n    operator: LogicalOperator;\n    conditions?: Array<INAV2ConditionJSON>;\n}\n\ninterface Context {\n    attribute?: string;\n    dataSource: DataSource;\n}\n\nfunction isComplexConditionJSON(conditionJSON: unknown): conditionJSON is ComplexConditionJSON {\n    if (conditionJSON && (conditionJSON as ComplexConditionJSON).conditions) {\n        return true;\n    }\n    return false;\n}\n\nexport default class SearchUrlParserInav2 {\n    private model: SearchModel;\n\n    constructor(properties: { model: SearchModel }) {\n        this.model = properties.model;\n    }\n\n    public async parseUrlParameters(oParametersLowerCased: {\n        searchterm?: string;\n        top?: string;\n        datasource?: string;\n        filter?: string;\n    }): Promise<void> {\n        // top\n        if (oParametersLowerCased.top) {\n            const top = parseInt(oParametersLowerCased.top, 10);\n            this.model.setTop(top, false);\n        }\n\n        // datasource\n        let dataSource = this.model.sinaNext.allDataSource;\n        if (oParametersLowerCased.datasource) {\n            const dataSourceJson = JSON.parse(oParametersLowerCased.datasource);\n            const dataSourceId = dataSourceJson.ObjectName.value;\n            switch (dataSourceJson.Type) {\n                case \"Category\":\n                    if (dataSourceId === \"$$ALL$$\") {\n                        dataSource = this.model.sinaNext.allDataSource;\n                    } else {\n                        dataSource = this.model.sinaNext.getDataSource(dataSourceId);\n                        if (!dataSource) {\n                            dataSource = this.model.sinaNext.createDataSource({\n                                type: this.model.sinaNext.DataSourceType.Category,\n                                id: dataSourceId,\n                                label: dataSourceJson.label,\n                                labelPlural: dataSourceJson.labelPlural,\n                            });\n                        }\n                    }\n                    break;\n                case \"BusinessObject\":\n                    dataSource = this.model.sinaNext.getDataSource(dataSourceId);\n                    if (!dataSource) {\n                        dataSource = this.model.sinaNext.allDataSource;\n                        delete oParametersLowerCased.filter;\n                        MessageBox.show(\n                            i18n.getText(\"searchUrlParsingErrorLong\") +\n                                \"\\n(Unknow datasource \" +\n                                dataSourceId +\n                                \")\",\n                            {\n                                icon: MessageBox.Icon.ERROR,\n                                title: i18n.getText(\"searchUrlParsingError\"),\n                                actions: [MessageBox.Action.OK],\n                                styleClass: \"sapUshellSearchMessageBox\", // selector for closePopovers\n                            }\n                        );\n                    }\n                    break;\n                default: {\n                    const internalError = new Error(\"Unknown datasource type \" + dataSourceJson.Type);\n                    throw new errors.UnknownDataSourceType(internalError);\n                }\n            }\n        }\n\n        await this.model.sinaNext.loadMetadata(dataSource);\n\n        // root condition\n        const context = {\n            dataSource: dataSource,\n        };\n        let rootCondition;\n        if (oParametersLowerCased.filter) {\n            try {\n                const filterJson = JSON.parse(oParametersLowerCased.filter);\n                rootCondition = this.parseCondition(context, filterJson);\n            } catch (e) {\n                // fallback-filter + send error message\n                rootCondition = this.model.sinaNext.createComplexCondition();\n                MessageBox.show(i18n.getText(\"searchUrlParsingErrorLong\") + \"\\n(\" + e.toString() + \")\", {\n                    icon: MessageBox.Icon.ERROR,\n                    title: i18n.getText(\"searchUrlParsingError\"),\n                    actions: [MessageBox.Action.OK],\n                    styleClass: \"sapUshellSearchMessageBox\", // selector for closePopovers\n                });\n            }\n        } else {\n            rootCondition = this.model.sinaNext.createComplexCondition();\n        }\n\n        // filter\n        const filter = this.model.sinaNext.createFilter({\n            dataSource: dataSource,\n            searchTerm: oParametersLowerCased.searchterm,\n            rootCondition: rootCondition,\n        });\n        this.model.setProperty(\"/uiFilter\", filter);\n        this.model.setDataSource(filter.dataSource, false); // explicitely updata datasource (for categories: update ds list in model)\n    }\n\n    private parseCondition(\n        context: Context,\n        conditionJson: INAV2ConditionJSON\n    ): SimpleCondition | ComplexCondition {\n        if (isComplexConditionJSON(conditionJson)) {\n            return this.parseComplexCondition(context, conditionJson);\n        }\n        return this.parseSimpleCondition(context, conditionJson as SimpleConditionJSON);\n    }\n\n    private parseComplexCondition(context: Context, conditionJson: ComplexConditionJSON): ComplexCondition {\n        const subConditions = [];\n        for (let i = 0; i < conditionJson.conditions.length; ++i) {\n            const subConditionJson = conditionJson.conditions[i];\n            subConditions.push(this.parseCondition(context, subConditionJson));\n        }\n        return this.model.sinaNext.createComplexCondition({\n            operator: conditionJson.operator,\n            conditions: subConditions,\n            valueLabel: conditionJson.label,\n        });\n    }\n\n    private parseSimpleCondition(context: Context, conditionJson: SimpleConditionJSON): SimpleCondition {\n        context.attribute = conditionJson.attribute;\n        return this.model.sinaNext.createSimpleCondition({\n            attribute: conditionJson.attribute,\n            attributeLabel: conditionJson.attributeLabel,\n            value: this.parseValue(context, conditionJson.value),\n            valueLabel: conditionJson.valueLabel || conditionJson.label,\n            operator: this.parseOperator(context, conditionJson.operator),\n        });\n    }\n\n    private parseValue(context: Context, value): Value {\n        const metadata = context.dataSource.getAttributeMetadata(context.attribute);\n        return this.model.sinaNext.inav2TypeConverter.ina2Sina(metadata.type, value);\n    }\n\n    private parseOperator(context: unknown, operator: \"=\" | \">\" | \">=\" | \"<\" | \"<=\"): ComparisonOperator {\n        switch (operator) {\n            case \"=\":\n                return this.model.sinaNext.ComparisonOperator.Eq;\n            case \">\":\n                return this.model.sinaNext.ComparisonOperator.Gt;\n            case \">=\":\n                return this.model.sinaNext.ComparisonOperator.Ge;\n            case \"<\":\n                return this.model.sinaNext.ComparisonOperator.Lt;\n            case \"<=\":\n                return this.model.sinaNext.ComparisonOperator.Le;\n            default:\n                throw \"Unknown operator \" + operator;\n        }\n    }\n}\n"],"mappings":"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","ignoreList":[]}