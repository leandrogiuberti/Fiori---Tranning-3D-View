{"version":3,"file":"SearchFacetDialogModel.js","names":["sap","ui","define","__i18n","MessageBox","__SearchModel","sap_ui_core_library","__SearchHierarchyDynamicFacet","___SearchFacetDialogHelperDynamicHierarchy","_interopRequireDefault","obj","__esModule","default","i18n","SearchModel","TextDirection","SearchHierarchyDynamicFacet","createFilterFacetItemForDynamicHierarchy","SearchFacetDialogModel","aFilters","chartQuery","searchModel","constructor","settings","super","configuration","config","this","prepareFacetList","metaData","getDataSource","setProperty","oFacetFormatter","getDialogFacetsFromMetaData","initialFillFiltersForDynamicHierarchyFacets","filter","getProperty","facets","facet","conditions","rootCondition","getAttributeConditions","attributeId","condition","simpleCondition","facetItem","push","facetDialogSingleCall","properties","dimension","sAttribute","top","sAttributeLimit","setNlq","isNlqActive","getResultSetAsync","then","resultSet","oFacet","bInitialFilters","getDialogFacetsFromChartQuery","sBindingPath","items","facetTotalCount","error","errorTitle","getText","errorText","message","title","actions","Action","OK","onClose","styleClass","initialFocus","textDirection","Inherit","resetChartQueryFilterConditions","resetConditions","nonFilterByConditions","getStaticHierarchyFilterConditions","length","nonFilterByCondition","autoInsertCondition","hasFilterCondition","filterCondition","i","equals","hasFilter","item","addFilter","removeFilter","splice","changeFilterAdvaced","bAdvanced","advanced","addFilterCondition","getAttributeDataType","dataType","matchingStrategy","sinaNext","MatchingStrategy","Text","destroy"],"sources":["SearchFacetDialogModel.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\nimport i18n from \"./i18n\";\nimport MessageBox from \"sap/m/MessageBox\";\nimport SearchModel from \"./SearchModel\";\nimport { TextDirection } from \"sap/ui/core/library\";\nimport { Filter } from \"./sinaNexTS/sina/Filter\";\nimport SearchHierarchyDynamicFacet from \"./hierarchydynamic/SearchHierarchyDynamicFacet\";\nimport { SimpleCondition } from \"./sinaNexTS/sina/SimpleCondition\";\nimport { createFilterFacetItemForDynamicHierarchy } from \"./SearchFacetDialogHelperDynamicHierarchy\";\nimport FacetItem from \"./FacetItem\";\nimport { ChartQuery } from \"./sinaNexTS/sina/ChartQuery\";\nimport { ChartResultSet } from \"./sinaNexTS/sina/ChartResultSet\";\nimport Facet from \"./Facet\";\nimport { ComplexCondition } from \"./sinaNexTS/sina/ComplexCondition\";\n\nexport interface $SearchFacetDialogModelSettings {\n    searchModel: SearchModel;\n}\n\nexport default class SearchFacetDialogModel extends SearchModel {\n    aFilters: Array<FacetItem>;\n    chartQuery: ChartQuery;\n    searchModel: SearchModel;\n\n    constructor(settings: $SearchFacetDialogModelSettings) {\n        super({\n            searchModel: settings.searchModel,\n            configuration: settings.searchModel.config,\n        });\n        this.searchModel = settings.searchModel;\n        this.aFilters = [];\n    }\n\n    prepareFacetList(): void {\n        const metaData = this.getDataSource();\n        this.setProperty(\"/facetDialog\", this.oFacetFormatter.getDialogFacetsFromMetaData(metaData, this));\n        this.initialFillFiltersForDynamicHierarchyFacets();\n    }\n\n    initialFillFiltersForDynamicHierarchyFacets() {\n        const filter = this.getProperty(\"/uiFilter\") as Filter;\n        const facets = this.getProperty(\"/facetDialog\");\n        for (const facet of facets) {\n            if (!(facet instanceof SearchHierarchyDynamicFacet)) {\n                continue;\n            }\n            const conditions = (filter.rootCondition as ComplexCondition).getAttributeConditions(\n                facet.attributeId\n            );\n            for (const condition of conditions) {\n                const simpleCondition = condition as SimpleCondition;\n                const facetItem = createFilterFacetItemForDynamicHierarchy(facet, simpleCondition);\n                this.aFilters.push(facetItem);\n            }\n        }\n    }\n\n    // properties: sAttribute, sBindingPath\n    facetDialogSingleCall(properties: {\n        sAttribute: string;\n        sAttributeLimit: number;\n        sBindingPath: string;\n        bInitialFilters?: boolean;\n    }): Promise<void> {\n        this.chartQuery.dimension = properties.sAttribute;\n        this.chartQuery.top = properties.sAttributeLimit;\n        this.chartQuery.setNlq(this.searchModel.isNlqActive());\n\n        return this.chartQuery.getResultSetAsync().then(\n            (resultSet: ChartResultSet) => {\n                let oFacet: Facet;\n                if (properties.bInitialFilters) {\n                    oFacet = this.oFacetFormatter.getDialogFacetsFromChartQuery(\n                        resultSet,\n                        this,\n                        this.chartQuery.dimension\n                    );\n                } else {\n                    oFacet = this.oFacetFormatter.getDialogFacetsFromChartQuery(\n                        resultSet,\n                        this,\n                        this.chartQuery.dimension,\n                        this.aFilters\n                    );\n                }\n                this.setProperty(properties.sBindingPath + \"/items\", oFacet.items);\n                this.setProperty(properties.sBindingPath + \"/items\", oFacet.items);\n                if (typeof resultSet?.facetTotalCount === \"number\") {\n                    this.setProperty(properties.sBindingPath + \"/facetTotalCount\", resultSet.facetTotalCount);\n                }\n            },\n            (error: Error) => {\n                const errorTitle = i18n.getText(\"searchError\");\n                const errorText = error.message;\n                MessageBox.error(errorText, {\n                    title: errorTitle,\n                    actions: MessageBox.Action.OK,\n                    onClose: null,\n                    styleClass: \"sapUshellSearchMessageBox\", // selector for closePopovers\n                    initialFocus: null,\n                    textDirection: TextDirection.Inherit,\n                });\n            }\n        );\n    }\n\n    resetChartQueryFilterConditions(): void {\n        if (this.chartQuery) {\n            this.chartQuery.resetConditions();\n        }\n        // add static hierachy facets\n        const nonFilterByConditions = this.getStaticHierarchyFilterConditions();\n        if (nonFilterByConditions.length > 0) {\n            for (const nonFilterByCondition of nonFilterByConditions) {\n                this.chartQuery.autoInsertCondition(nonFilterByCondition);\n            }\n        }\n    }\n\n    hasFilterCondition(filterCondition): boolean {\n        for (let i = 0; i < this.aFilters.length; i++) {\n            if (\n                this.aFilters[i].filterCondition.equals &&\n                this.aFilters[i].filterCondition.equals(filterCondition)\n            ) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    hasFilter(item): boolean {\n        const filterCondition = item.filterCondition;\n        return this.hasFilterCondition(filterCondition);\n    }\n\n    addFilter(item: FacetItem): void {\n        if (!this.hasFilter(item)) {\n            this.aFilters.push(item);\n        }\n    }\n\n    removeFilter(item: FacetItem): void {\n        const filterCondition = item.filterCondition;\n        for (let i = 0; i < this.aFilters.length; i++) {\n            if (\n                this.aFilters[i].filterCondition.equals &&\n                this.aFilters[i].filterCondition.equals(filterCondition)\n            ) {\n                this.aFilters.splice(i, 1);\n                return;\n            }\n        }\n    }\n\n    changeFilterAdvaced(item, bAdvanced: boolean): void {\n        const filterCondition = item.filterCondition;\n        for (let i = 0; i < this.aFilters.length; i++) {\n            if (\n                this.aFilters[i].filterCondition.equals &&\n                this.aFilters[i].filterCondition.equals(filterCondition)\n            ) {\n                this.aFilters[i].advanced = bAdvanced;\n                return;\n            }\n        }\n    }\n\n    addFilterCondition(filterCondition): void {\n        this.chartQuery.filter.autoInsertCondition(filterCondition);\n    }\n\n    // determinate the attribute list data type\n    getAttributeDataType(facet): string {\n        switch (facet.dataType) {\n            case \"Integer\":\n                return \"integer\";\n            case \"Double\":\n                return \"number\";\n            case \"Timestamp\":\n                return \"timestamp\";\n            case \"Date\":\n                return \"date\";\n            case \"String\":\n                if (facet.matchingStrategy === this.sinaNext.MatchingStrategy.Text) {\n                    return \"text\";\n                }\n                return \"string\";\n            default:\n                return \"string\";\n        }\n    }\n\n    destroy(): void {\n        super.destroy();\n        this.oFacetFormatter.destroy();\n    }\n}\n"],"mappings":"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","ignoreList":[]}