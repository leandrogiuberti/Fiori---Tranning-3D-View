{"version":3,"file":"ResultViewsAssembler.js","names":["sap","ui","define","__SearchResultTable","InvisibleText","__SearchResultList","__i18n","sap_m_library","__SearchResultGrid","GridContainerSettings","__errors","VerticalLayout","GridContainer","___eventlogging_UserEvents","GridContainerItemLayoutData","Text","Button","FlexBox","CustomListItem","___controls_SearchTileHighlighter","__CustomSearchResultListItem","__SearchResultListItem","GenericTile","TileContent","Element","___SelectionMode","__UIEvents","EventBus","_interopRequireDefault","obj","__esModule","default","SearchResultTable","SearchResultList","i18n","ButtonType","FlexJustifyContent","ListMode","ListType","SearchResultGrid","errors","UserEventType","Highlighter","CustomSearchResultListItem","SearchResultListItem","SelectionMode","UIEvents","ResultViewsAssembler","compositeControl","constructor","this","assembleResultView","idPrefix","searchResultList","assembleSearchResultList","searchResultTable","assembleSearchResultTable","searchResultGrid","assembleSearchResultGrid","appSearchResult","assembleAppSearch","showMoreFooter","assembleShowMoreFooter","resultView","countBreadcrumbsHiddenElement","assembleCountBreadcrumbsHiddenElement","text","parts","path","formatter","count","getText","toString","oModel","getModelInternal","resultTable","assembleTable","addEventDelegate","onAfterRendering","controlDom","getDomRef","rows","querySelectorAll","row","Array","from","rowId","getAttribute","tableRow","getElementById","currentAriaLabelledBy","getAriaLabelledBy","indexOf","getId","addAriaLabelledBy","resultList","mode","None","width","showNoData","visible","resultViewType","bindItems","factory","oContext","assembleListItem","resultGrid","config","customGridView","err","oError","ConfigurationExitError","applicationComponent","gridContainerSettings","rowSize","columnSize","gap","layout","snapToRow","bUseExtendedChangeDetection","bindProperty","addStyleClass","gridContainer","isAppCategory","isUserCategoryAppSearchOnlyWithoutBOs","items","id","context","item","getObject","visualization","visualizationService","uShellVisualizationInstantiationService","visualizationControl","instantiateVisualization","attachPress","eventLogger","logEvent","type","TILE_NAVIGATE","tileTitle","title","targetUrl","targetURL","highlightTile","setActive","setLayoutData","getLayout","button","Transparent","appCount","appResults","length","press","newTop","getTop","pageSize","setProperty","setTop","SHOW_MORE","verticalLayout","content","oEvent","oInnerControl","getAggregation","aControls","findAggregatedObjects","oControl","isA","getComponentInstance","tile","tileHighlighter","setHighlightTerms","getModel","getProperty","highlight","oCurrentModel","container","boCount","boResults","justifyContent","Center","addItem","resultItemPath","oData","selected","appResultListItem","assembleAppContainerResultListItem","assembleResultListItem","dataSourceConfig","getDataSourceConfig","dataSource","searchResultListItemSettings","isTitleHighlighted","titleDescription","isTitleDescriptionHighlighted","titleNavigation","imageUrl","imageFormat","imageNavigation","geoJson","attributes","navigationObjects","selectionEnabled","customItemStyleClass","expanded","positionInList","resultSetId","layoutCache","titleIconUrl","titleInfoIconUrl","titleInfoIconTooltip","itemContent","searchResultListItemControl","searchResultListItemContentControl","setCountBreadcrumbsHiddenElement","listItem","resultviewMasterDetailMode","resultviewSelectionMode","newType","pressFunction","notifySubscribers","ESHShowResultDetail","getInstance","publish","Navigation","bind","OneItem","Active","detachPress","Inactive","setParentListItem","appItemContainerLayout","appContainerId","tileWidth","tileMargin","tileWidthWithMargin","containerPaddingLeft","fullItems","getItems","lastItem","clientWidth","maxWidth","hasStyleClass","slice","maxItems","Math","floor","i","appContainerShowMoreId","showMoreTile","tileContent","setDataSource","appDataSource","domRef","removeAttribute","setAttribute"],"sources":["ResultViewsAssembler.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\nimport Control from \"sap/ui/core/Control\";\nimport SearchCompositeControl from \"../SearchCompositeControl\";\nimport SearchResultTable from \"../controls/resultview/SearchResultTable\";\nimport ListItemBase from \"sap/m/ListItemBase\";\nimport InvisibleText from \"sap/ui/core/InvisibleText\";\nimport SearchModel from \"../SearchModel\";\nimport SearchResultList from \"../controls/resultview/SearchResultList\";\nimport i18n from \"../i18n\";\nimport { ButtonType, FlexJustifyContent, ListMode, ListType } from \"sap/m/library\";\nimport SearchResultGrid from \"../controls/resultview/SearchResultGrid\";\nimport GridContainerSettings from \"sap/f/GridContainerSettings\";\nimport errors from \"../error/errors\";\nimport VerticalLayout from \"sap/ui/layout/VerticalLayout\";\nimport GridContainer from \"sap/f/GridContainer\";\nimport { ESHApp } from \"../appsearch/CatalogSearch\";\nimport { UserEventType } from \"../eventlogging/UserEvents\";\nimport GridContainerItemLayoutData from \"sap/f/GridContainerItemLayoutData\";\nimport Text from \"sap/m/Text\";\nimport Button from \"sap/m/Button\";\nimport FlexBox from \"sap/m/FlexBox\";\nimport CustomListItem from \"sap/m/CustomListItem\";\nimport { ListItem } from \"../SearchModelTypes\";\nimport { Highlighter } from \"../controls/SearchTileHighlighter\";\nimport CustomSearchResultListItem from \"../controls/resultview/CustomSearchResultListItem\";\nimport SearchResultListItem from \"../controls/resultview/SearchResultListItem\";\nimport GenericTile from \"sap/m/GenericTile\";\nimport TileContent from \"sap/m/TileContent\";\nimport Element from \"sap/ui/core/Element\";\nimport { SelectionMode } from \"../SelectionMode\";\nimport UIEvents from \"../UIEvents\";\nimport EventBus from \"sap/ui/core/EventBus\";\n\nexport default class ResultViewsAssembler {\n    compositeControl: SearchCompositeControl;\n\n    constructor(compositeControl: SearchCompositeControl) {\n        this.compositeControl = compositeControl;\n    }\n\n    /* private _getPhoneSize(): number {\n        return 767;\n    } */\n\n    assembleResultView(idPrefix: string): Array<Control> {\n        // list\n        this.compositeControl.searchResultList = this.assembleSearchResultList(idPrefix);\n\n        // table\n        this.compositeControl.searchResultTable = this.assembleSearchResultTable(idPrefix);\n\n        // grid\n        this.compositeControl.searchResultGrid = this.assembleSearchResultGrid(idPrefix);\n\n        // app search result\n        this.compositeControl.appSearchResult = this.assembleAppSearch(idPrefix);\n\n        // show more footer\n        this.compositeControl.showMoreFooter = this.assembleShowMoreFooter();\n\n        const resultView = [\n            this.compositeControl.searchResultList,\n            this.compositeControl.searchResultTable,\n            this.compositeControl.searchResultGrid,\n            this.compositeControl.appSearchResult,\n            this.compositeControl.showMoreFooter,\n            this.compositeControl.countBreadcrumbsHiddenElement,\n        ];\n        return resultView;\n    }\n\n    assembleCountBreadcrumbsHiddenElement(): InvisibleText {\n        const countBreadcrumbsHiddenElement = new InvisibleText(\"\", {\n            text: {\n                parts: [{ path: \"/count\" }],\n                formatter: (count: number) => {\n                    if (typeof count !== \"number\") {\n                        return \"\";\n                    }\n                    return i18n.getText(\"results_count_for_screenreaders\", [count.toString()]);\n                },\n            },\n        });\n        return countBreadcrumbsHiddenElement;\n    }\n\n    assembleSearchResultTable(idPrefix: string): SearchResultTable {\n        const oModel = this.compositeControl.getModelInternal() as SearchModel;\n        const resultTable = new SearchResultTable(`${idPrefix}-ushell-search-result-table`, {});\n        resultTable.assembleTable(oModel);\n        // add aria label to table header row\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        resultTable.addEventDelegate({\n            onAfterRendering: (): void => {\n                const controlDom = this.compositeControl.getDomRef() as HTMLElement;\n                if (!controlDom) {\n                    return;\n                }\n                const rows = controlDom.querySelectorAll(\"table tbody tr\");\n                for (const row of Array.from(rows)) {\n                    const rowId = row.getAttribute(\"id\");\n                    const tableRow = Element.getElementById(rowId) as unknown as ListItemBase;\n                    if (tableRow) {\n                        const currentAriaLabelledBy = tableRow.getAriaLabelledBy();\n                        if (\n                            currentAriaLabelledBy.indexOf(\n                                this.compositeControl.countBreadcrumbsHiddenElement.getId()\n                            ) === -1\n                        ) {\n                            tableRow.addAriaLabelledBy(this.compositeControl.countBreadcrumbsHiddenElement);\n                        }\n                    }\n                    break; // stop after first line for now\n                }\n            },\n        });\n        return resultTable;\n    }\n\n    assembleSearchResultList(idPrefix: string): SearchResultList {\n        const resultList = new SearchResultList(idPrefix + \"-ushell-search-result-list\", {\n            mode: ListMode.None,\n            width: \"auto\",\n            showNoData: false,\n            visible: {\n                parts: [{ path: \"/resultViewType\" }, { path: \"/count\" }],\n                formatter: (resultViewType, count) => {\n                    return resultViewType === \"searchResultList\" && count !== 0;\n                },\n            },\n        });\n        resultList.bindItems({\n            path: \"/results\",\n            factory: (path: string, oContext) => {\n                return this.assembleListItem(path, oContext);\n            },\n        });\n\n        return resultList;\n    }\n\n    assembleSearchResultGrid(idPrefix: string): SearchResultGrid {\n        const oModel = this.compositeControl.getModelInternal() as SearchModel;\n        let resultGrid;\n        if (typeof oModel.config.customGridView === \"function\") {\n            try {\n                resultGrid = oModel.config.customGridView();\n            } catch (err) {\n                const oError = new errors.ConfigurationExitError(\n                    \"customGridView\",\n                    oModel.config.applicationComponent,\n                    err\n                );\n                throw oError;\n            }\n        } else {\n            const gridContainerSettings = new GridContainerSettings(\"\", {\n                rowSize: \"11rem\",\n                columnSize: \"11rem\",\n                gap: \"0.5rem\",\n            });\n            resultGrid = new SearchResultGrid(idPrefix + \"-ushell-search-result-grid\", {\n                layout: gridContainerSettings,\n                snapToRow: true,\n            });\n        }\n        resultGrid.bUseExtendedChangeDetection = false; // workaround to avoid circular structure issue for data binding\n        resultGrid.bindProperty(\"visible\", {\n            parts: [\"/resultViewType\", \"/count\"],\n            formatter: (resultViewType: string, count: number) => {\n                return resultViewType === \"searchResultGrid\" && count !== 0;\n            },\n        });\n        resultGrid.addStyleClass(\"sapUshellSearchGrid\");\n        return resultGrid;\n    }\n\n    assembleAppSearch(idPrefix: string): VerticalLayout {\n        const gridContainerSettings = new GridContainerSettings(\"\", {\n            rowSize: \"5.5rem\",\n            columnSize: \"5.5rem\",\n            gap: \"0.25rem\",\n        });\n        const gridContainer = new GridContainer(idPrefix + \"-ushell-search-result-app\", {\n            layout: gridContainerSettings,\n            snapToRow: true,\n            visible: {\n                parts: [{ path: \"/count\" }],\n                formatter: (count) => {\n                    const oModel = this.compositeControl.getModelInternal() as SearchModel;\n                    return (\n                        (oModel.isAppCategory() || oModel.isUserCategoryAppSearchOnlyWithoutBOs()) &&\n                        count !== 0\n                    );\n                },\n            },\n            items: {\n                path: \"/appResults\",\n                factory: (id, context) => {\n                    const oModel = this.compositeControl.getModelInternal() as SearchModel;\n                    if (oModel.isAppCategory() || oModel.isUserCategoryAppSearchOnlyWithoutBOs()) {\n                        const item = context.getObject() as ESHApp;\n                        const visualization = item.visualization;\n                        const visualizationService = oModel.uShellVisualizationInstantiationService;\n                        const visualizationControl =\n                            visualizationService.instantiateVisualization(visualization);\n                        visualizationControl.attachPress(() => {\n                            oModel.eventLogger.logEvent({\n                                type: UserEventType.TILE_NAVIGATE,\n                                tileTitle: visualization.title,\n                                targetUrl: visualization.targetURL,\n                            });\n                        });\n                        visualizationControl.addEventDelegate({\n                            onAfterRendering: this.highlightTile,\n                        });\n                        visualizationControl.setActive(false, true);\n                        visualizationControl.setLayoutData(\n                            new GridContainerItemLayoutData(visualizationControl.getLayout())\n                        );\n                        return visualizationControl;\n                    }\n                    // bind dummy view, prevent douplicated binding\n                    return new Text(\"\", { text: \"\" });\n                },\n            },\n        });\n        gridContainer.addStyleClass(\"sapUshellSearchGridContainer\");\n        const button = new Button({\n            text: \"{i18n>showMore}\",\n            type: ButtonType.Transparent,\n            visible: {\n                parts: [{ path: \"/appCount\" }, { path: \"/appResults\" }],\n                formatter: (appCount, appResults) => {\n                    const oModel = this.compositeControl.getModelInternal() as SearchModel;\n                    return (\n                        (oModel.isAppCategory() || oModel.isUserCategoryAppSearchOnlyWithoutBOs()) &&\n                        appResults.length < appCount\n                    );\n                },\n            },\n            press: () => {\n                const oModel = this.compositeControl.getModelInternal() as SearchModel;\n                const newTop = oModel.getTop() + oModel.pageSize;\n                oModel.setProperty(\"/focusIndex\", oModel.getTop());\n                oModel.setTop(newTop);\n                oModel.eventLogger.logEvent({\n                    type: UserEventType.SHOW_MORE,\n                });\n            },\n        });\n        button.addStyleClass(\"sapUshellResultListMoreFooter\");\n\n        const verticalLayout = new VerticalLayout(\"\", {\n            width: \"100%\",\n            visible: {\n                parts: [{ path: \"/count\" }],\n                formatter: (count) => {\n                    const oModel = this.compositeControl.getModelInternal() as SearchModel;\n                    return (\n                        (oModel.isAppCategory() || oModel.isUserCategoryAppSearchOnlyWithoutBOs()) &&\n                        count !== 0\n                    );\n                },\n            },\n            content: [gridContainer, button],\n        });\n        verticalLayout.addStyleClass(\"sapUshellResultApps\");\n\n        return verticalLayout;\n    }\n\n    highlightTile(oEvent: Event): void {\n        const oInnerControl = oEvent[\"srcControl\"]?.getAggregation(\"content\"); // ToDo\n        if (oInnerControl) {\n            let aControls = oInnerControl.findAggregatedObjects(true, (oControl) => {\n                return oControl.isA(\"sap.m.GenericTile\") || oControl.isA(\"sap.f.Card\");\n            });\n            if (aControls.length === 0 && oInnerControl.getComponentInstance) {\n                aControls = oInnerControl.getComponentInstance().findAggregatedObjects(true, (oControl) => {\n                    return oControl.isA(\"sap.m.GenericTile\") || oControl.isA(\"sap.f.Card\");\n                });\n            }\n            if (aControls.length > 0) {\n                const tile = aControls[0];\n                const tileHighlighter = new Highlighter();\n                tileHighlighter.setHighlightTerms(\n                    oEvent[\"srcControl\"]?.getModel().getProperty(\"/uiFilter/searchTerm\")\n                );\n                tileHighlighter.highlight(tile);\n            }\n        }\n    }\n\n    assembleShowMoreFooter(): FlexBox {\n        const button = new Button(this.compositeControl.getId() + \"-resultview-moreFooter-button\", {\n            text: \"{i18n>showMore}\",\n            type: ButtonType.Transparent,\n            press: (): void => {\n                const oCurrentModel = this.compositeControl.getModelInternal() as SearchModel;\n                oCurrentModel.setProperty(\"/focusIndex\", oCurrentModel.getTop());\n                const newTop = oCurrentModel.getTop() + oCurrentModel.pageSize;\n                oCurrentModel.setTop(newTop);\n                oCurrentModel.eventLogger.logEvent({\n                    type: UserEventType.SHOW_MORE,\n                });\n            },\n        });\n        button.addStyleClass(\"sapUshellResultListMoreFooter\");\n        const container = new FlexBox(this.compositeControl.getId() + \"-resultview-moreFooter\", {\n            visible: {\n                parts: [{ path: \"/boCount\" }, { path: \"/boResults\" }],\n                formatter: (boCount: number, boResults: Array<unknown>): boolean => {\n                    return boResults.length < boCount;\n                },\n            },\n            justifyContent: FlexJustifyContent.Center,\n        });\n        container.addStyleClass(\"sapUshellResultListMoreFooterContainer\");\n        container.addItem(button);\n        return container;\n    }\n\n    assembleListItem(resultItemPath: string, oContext): CustomListItem {\n        const oData = oContext.getObject() as ListItem; // ToDo\n        if (oData.type === \"footer\") {\n            return new CustomListItem(`${resultItemPath}-footerItem`, {\n                selected: { path: \"selected\" },\n            }); // return empty list item\n        } else if (oData.type === \"appcontainer\") {\n            this.compositeControl.appResultListItem = this.assembleAppContainerResultListItem(resultItemPath);\n            return this.compositeControl.appResultListItem;\n        }\n        return this.assembleResultListItem(resultItemPath, oData);\n    }\n\n    assembleResultListItem(resultItemPath: string, oData): CustomListItem {\n        const oModel = this.compositeControl.getModelInternal() as SearchModel;\n        const dataSourceConfig = oModel.config.getDataSourceConfig(oData.dataSource);\n\n        const searchResultListItemSettings = {\n            dataSource: oData.dataSource,\n            title: \"{title}\",\n            isTitleHighlighted: { path: \"isTitleHighlighted\" },\n            titleDescription: \"{titleDescription}\",\n            isTitleDescriptionHighlighted: { path: \"isTitleDescriptionHighlighted\" },\n            titleNavigation: { path: \"titleNavigation\" },\n            type: \"{dataSourceName}\",\n            imageUrl: \"{imageUrl}\",\n            imageFormat: \"{imageFormat}\",\n            imageNavigation: { path: \"imageNavigation\" },\n            geoJson: \"{geoJson}\",\n            attributes: { path: \"itemattributes\" },\n            navigationObjects: { path: \"navigationObjects\" },\n            selected: { path: \"selected\" },\n            selectionEnabled: { path: \"selectionEnabled\" },\n            customItemStyleClass: { path: \"customItemStyleClass\" },\n            expanded: { path: \"expanded\" },\n            positionInList: { path: \"positionInList\" },\n            resultSetId: { path: \"resultSetId\" },\n            layoutCache: { path: \"layoutCache\" },\n            titleIconUrl: { path: \"titleIconUrl\" },\n            titleInfoIconUrl: { path: \"titleInfoIconUrl\" },\n            titleInfoIconTooltip: \"{titleInfoIconTooltip}\",\n        };\n\n        let itemContent;\n        if (dataSourceConfig.searchResultListItemControl) {\n            itemContent = new dataSourceConfig.searchResultListItemControl(searchResultListItemSettings);\n        } else if (dataSourceConfig.searchResultListItemContentControl) {\n            searchResultListItemSettings[\"content\"] = // ToDo\n                new dataSourceConfig.searchResultListItemContentControl();\n            itemContent = new CustomSearchResultListItem(\n                `${resultItemPath}--customItemContent`,\n                searchResultListItemSettings\n            );\n        } else {\n            itemContent = new SearchResultListItem(\n                `${resultItemPath}--itemContent`,\n                searchResultListItemSettings\n            );\n        }\n\n        if (itemContent.setCountBreadcrumbsHiddenElement) {\n            itemContent.setCountBreadcrumbsHiddenElement(this.compositeControl.countBreadcrumbsHiddenElement);\n        }\n\n        const listItem = new CustomListItem(`${resultItemPath}--customListItem`, {\n            content: itemContent,\n        });\n        listItem.addStyleClass(\"sapUshellSearchResultListItem\");\n\n        listItem.bindProperty(\"type\", {\n            parts: [\n                { path: \"/config/resultviewMasterDetailMode\" },\n                { path: \"/config/resultviewSelectionMode\" },\n            ],\n            formatter: (resultviewMasterDetailMode: string, resultviewSelectionMode: SelectionMode) => {\n                let newType;\n                const pressFunction = (oEvent): void => {\n                    // notify subscribers\n                    oModel.notifySubscribers(UIEvents.ESHShowResultDetail);\n                    EventBus.getInstance().publish(UIEvents.ESHShowResultDetail, oEvent);\n                };\n                if (resultviewMasterDetailMode) {\n                    newType = ListType.Navigation;\n                    listItem.attachPress(pressFunction.bind(this));\n                } else if (resultviewSelectionMode === SelectionMode.OneItem) {\n                    newType = ListType.Active;\n                    listItem.detachPress(pressFunction);\n                } else {\n                    newType = ListType.Inactive;\n                    listItem.detachPress(pressFunction);\n                }\n\n                // special handling for phone mode, see _setListItemStatusBasedOnWindowSize in SearchResultListItem.ts\n                /* const windowWidth = window.innerWidth;\n                if (\n                    listItem.getContent()[0].getProperty(\"titleNavigation\") &&\n                    windowWidth <= this._getPhoneSize()\n                ) {\n                    newType = ListType.Active;\n                } */\n                return newType;\n            },\n        });\n        if (itemContent.setParentListItem) {\n            itemContent.setParentListItem(listItem);\n        }\n\n        return listItem;\n    }\n\n    assembleAppContainerResultListItem(resultItemPath: string): CustomListItem {\n        const appItemContainerLayout = new GridContainerSettings(\"\", {\n            rowSize: \"5.5rem\",\n            columnSize: \"5.5rem\",\n            gap: \"0.25rem\",\n        });\n        const appContainerId = `${resultItemPath}-appItemContainer`;\n        const container = new GridContainer(appContainerId, {\n            layout: appItemContainerLayout,\n            snapToRow: true,\n            items: {\n                path: \"/appResults\",\n                factory: (id, context) => {\n                    const oModel = this.compositeControl.getModelInternal() as SearchModel;\n                    if (!oModel.isAppCategory()) {\n                        const item = context.getObject() as ESHApp;\n                        const visualization = item.visualization;\n                        const visualizationService = oModel.uShellVisualizationInstantiationService;\n                        const visualizationControl =\n                            visualizationService.instantiateVisualization(visualization);\n                        visualizationControl.attachPress(() => {\n                            const oModel = this.compositeControl.getModelInternal() as SearchModel;\n                            oModel.eventLogger.logEvent({\n                                type: UserEventType.TILE_NAVIGATE,\n                                tileTitle: visualization.title,\n                                targetUrl: visualization.targetURL,\n                            });\n                        });\n                        visualizationControl.addEventDelegate({\n                            onAfterRendering: this.highlightTile,\n                        });\n                        visualizationControl.setActive(false, true);\n                        visualizationControl.setLayoutData(\n                            new GridContainerItemLayoutData(visualizationControl.getLayout())\n                        );\n                        return visualizationControl;\n                    }\n                    // bind dummy view, prevent duplicated binding\n                    // tile can handle only one view\n                    return new Text(id, {\n                        text: \"\",\n                    });\n                },\n            },\n        });\n        container.addStyleClass(\"sapUshellSearchGridContainer\");\n\n        container.addEventDelegate(\n            {\n                onAfterRendering: () => {\n                    const oModel = this.compositeControl.getModelInternal() as SearchModel;\n\n                    const tileWidth = 180;\n                    const tileMargin = 4;\n                    const tileWidthWithMargin = tileWidth + tileMargin;\n                    const containerPaddingLeft = 6;\n\n                    const fullItems = container.getItems();\n                    const appCount = oModel.getProperty(\"/appCount\");\n                    const boCount = oModel.getProperty(\"/boCount\");\n                    const lastItem = fullItems[fullItems.length - 1];\n\n                    // calculate the suitable items for container\n                    if (container.getDomRef().clientWidth === 0) {\n                        return;\n                    }\n                    let maxWidth = container.getDomRef().clientWidth - containerPaddingLeft - tileWidth; // container width - padding left - last show more tile width\n\n                    // after introducing new layout, we should new calculation for showMore button\n                    if (maxWidth < 0) {\n                        if (lastItem.hasStyleClass(\"sapUshellSearchResultListItemAppsShowMore\")) {\n                            const appResults = oModel.getProperty(\"/appResults\");\n                            oModel.setProperty(\"/appResults\", appResults.slice(0, -1));\n                        }\n                        return;\n                    }\n                    if (maxWidth < tileWidth) {\n                        maxWidth = tileWidth;\n                    }\n                    const maxItems = Math.floor(maxWidth / tileWidthWithMargin);\n\n                    if (lastItem.hasStyleClass(\"sapUshellSearchResultListItemAppsShowMore\")) {\n                        return; // already done with cutting and adding show more tile, do not do multipule times\n                    }\n\n                    if (fullItems.length > maxItems + 1) {\n                        // items greater than maxItems+showMore, must be cut\n                        let width = 0,\n                            i = 0;\n                        for (; i < fullItems.length; i++) {\n                            width = width + fullItems[i].getDomRef().clientWidth + tileMargin; // tile width + margin\n                            if (width > maxWidth) {\n                                break;\n                            }\n                        }\n                        const appResults = oModel.getProperty(\"/appResults\");\n                        oModel.setProperty(\"/appResults\", appResults.slice(0, i));\n                    } else if (fullItems.length < maxItems + 1) {\n                        // appCount greater than maxItems, add showMore tile\n                        if (\n                            appCount > maxItems &&\n                            !lastItem.hasStyleClass(\"sapUshellSearchResultListItemAppsShowMore\")\n                        ) {\n                            const appContainerShowMoreId = `${appContainerId}--showMore`;\n                            const showMoreTile = new GenericTile(appContainerShowMoreId, {\n                                tileContent: new TileContent(`${appContainerShowMoreId}--content`, {\n                                    content: new Text(`${appContainerShowMoreId}--content--text`, {\n                                        text: i18n.getText(\"showMoreApps\"),\n                                    }),\n                                }),\n                                press: () => {\n                                    const oModel = this.compositeControl.getModelInternal() as SearchModel;\n                                    oModel.setDataSource(oModel.appDataSource);\n                                },\n                            });\n                            showMoreTile.addStyleClass(\"sapUshellSearchResultListItemAppsShowMore\");\n                            container.addItem(showMoreTile);\n                            // force update showMore button to avoid outdated binding\n                            oModel.setProperty(\"/resultViewType\", \"appSearchResult\");\n                            oModel.setProperty(\"/resultViewType\", \"searchResultList\");\n                            oModel.setProperty(\"/boCount\", 0);\n                            oModel.setProperty(\"/boCount\", boCount);\n                        }\n                    }\n                },\n            },\n            container\n        );\n        const listItem = new CustomListItem(`${this.compositeControl.getId()}-appItem`, {\n            content: container,\n        });\n        listItem.addStyleClass(\"sapUshellSearchResultListItem\");\n        listItem.addStyleClass(\"sapUshellSearchResultListItemApps\");\n\n        listItem.addEventDelegate(\n            {\n                onAfterRendering: function () {\n                    const domRef = listItem.getDomRef() as HTMLElement;\n                    if (domRef) {\n                        domRef.removeAttribute(\"role\");\n                        domRef.setAttribute(\"aria-hidden\", \"true\");\n                    }\n                },\n            },\n            listItem\n        );\n\n        return listItem;\n    }\n}\n"],"mappings":"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","ignoreList":[]}