{"version":3,"file":"ToolbarAssembler.js","names":["sap","ui","define","IconPool","__i18n","Device","OverflowToolbarLayoutData","sap_m_library","OverflowToolbar","OverflowToolbarButton","__SearchSpreadsheet","___eventlogging_UserEvents","ToolbarSpacer","ToolbarSeparator","__errors","Button","ActionSheet","IconTabBar","IconTabFilter","SegmentedButton","SegmentedButtonItem","BindingMode","ViewSettingsDialog","Element","OverflowToolbarToggleButton","_interopRequireDefault","obj","__esModule","default","i18n","ButtonType","OverflowToolbarPriority","PlacementType","URLHelper","SearchSpreadsheet","UserEventType","errors","ToolbarAssembler","compositeControl","constructor","this","assembleFilterButton","oModel","getModelInternal","filterBtn","getId","icon","getIconURI","tooltip","parts","path","formatter","facetVisibility","getText","pressed","press","oEvent","searchContainer","setProperty","isVisible","getParameter","setFacetVisibility","eventLogger","logEvent","type","FACETS_SHOW","dataSourceKey","getDataSource","id","FACETS_HIDE","setTimeout","adjustSearchbarCustomGenericButtonWidth","visible","businessObjSearchEnabled","system","phone","config","optimizeForValueHelp","facets","addStyleClass","setLayoutData","priority","NeverOverflow","assembleResultviewSelectionButton","selectionBtn","resultviewSelectionVisibility","setResultviewSelectionVisibility","item","getSearchResultSet","items","setSelected","showSelectionToggleButton","assembleGenericButtonsToolbar","dataExportButton","assembleExportButton","High","assembleResultViewSwitch","sortButton","text","count","sortAttributes","isHomogenousResult","length","orderBy","sortOrder","Emphasized","Transparent","openSortDialog","sortDialog","assembleSearchResultSortDialog","tablePersonalizeButton","undefined","searchResultTablePersonalization","enabled","resultViewType","columns","searchResultTable","tablePersonalizer","openDialog","userEventTableConfigOpen","TABLE_CONFIG_OPEN","toolbarContent","push","bWithShareButton","isUshell","shareButton","assembleShareButton","resultViewSwitch","hasCustomButtons","customToolbar","customToolbarContent","getCustomToolbar","resultViewSwitchVisibility","searchInputLocation","concat","oSearchFieldGroup","err","oError","ConfigurationExitError","applicationComponent","errorHandler","onError","toolbar","content","sortDialogId","oldSortDialog","getElementById","destroy","sortDescending","Object","keys","confirm","paramsSortItem","paramsSortDescending","attributeId","getBindingContext","getObject","setSortDescending","resetOrderBy","setOrderBy","cancel","resetFilters","setSelectedSortItem","addDependent","searchSpreadsheet","onExport","oActionSheet","placement","Bottom","buttons","require","AddBookmarkButton","oBookmarkButton","width","beforePressHandler","oAppData","url","document","URL","title","getDocumentTitle","setAppData","addButton","oEmailButton","triggerEmail","oShareButton","openBy","assembleDataSourceTabBar","dataSourceTabBar","expandable","stretchContentHeight","bussinesObjSearchEnabled","exclusiveDataSource","selectedKey","mode","OneWay","select","searchScopeWithoutAll","setDataSource","data","setAriaTexts","headerLabel","headerDescription","bindAggregation","template","key","dataSource","allDataSource","selectionChange","getKey","setResultViewType","assignDragDropConfig","userEventResultViewSwitch","RESULT_VIEW_SWITCH","factory","context","oButton","setIcon","setTooltip","setKey","setVisible"],"sources":["ToolbarAssembler.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\nimport SearchModel from \"../SearchModel\";\nimport IconPool from \"sap/ui/core/IconPool\";\nimport i18n from \"../i18n\";\nimport Device from \"sap/ui/Device\";\nimport OverflowToolbarLayoutData from \"sap/m/OverflowToolbarLayoutData\";\nimport { ButtonType, OverflowToolbarPriority, PlacementType, URLHelper } from \"sap/m/library\";\nimport SearchCompositeControl from \"../SearchCompositeControl\";\nimport OverflowToolbar from \"sap/m/OverflowToolbar\";\nimport OverflowToolbarButton from \"sap/m/OverflowToolbarButton\";\nimport SearchSpreadsheet from \"../controls/SearchSpreadsheet\";\nimport { ResultViewSwitchEvent, TableConfigOpenEvent, UserEventType } from \"../eventlogging/UserEvents\";\nimport Control from \"sap/ui/core/Control\";\nimport ToolbarSpacer from \"sap/m/ToolbarSpacer\";\nimport ToolbarSeparator from \"sap/m/ToolbarSeparator\";\nimport errors from \"../error/errors\";\nimport Button from \"sap/m/Button\";\nimport ActionSheet from \"sap/m/ActionSheet\";\nimport IconTabBar from \"sap/m/IconTabBar\";\nimport { DataSource } from \"../sinaNexTS/sina/DataSource\";\nimport IconTabFilter from \"sap/m/IconTabFilter\";\nimport SegmentedButton, { SegmentedButton$SelectionChangeEvent } from \"sap/m/SegmentedButton\";\nimport SegmentedButtonItem from \"sap/m/SegmentedButtonItem\";\nimport BindingMode from \"sap/ui/model/BindingMode\";\nimport ViewSettingsDialog, { ViewSettingsDialog$ConfirmEvent } from \"sap/m/ViewSettingsDialog\";\nimport Element from \"sap/ui/core/Element\";\nimport { SortAttribute } from \"../SearchResultBaseFormatter\";\nimport OverflowToolbarToggleButton from \"sap/m/OverflowToolbarToggleButton\";\nimport { ToggleButton$PressEvent } from \"sap/m/ToggleButton\";\n\nexport default class ToolbarAssembler {\n    compositeControl: SearchCompositeControl;\n\n    constructor(compositeControl: SearchCompositeControl) {\n        this.compositeControl = compositeControl;\n    }\n\n    assembleFilterButton(): OverflowToolbarToggleButton {\n        const oModel = this.compositeControl.getModelInternal() as SearchModel;\n        const filterBtn = new OverflowToolbarToggleButton(\n            this.compositeControl.getId() + \"-searchBarFilterButton\",\n            {\n                icon: IconPool.getIconURI(\"filter\"),\n                tooltip: {\n                    parts: [{ path: \"/facetVisibility\" }],\n                    formatter: (facetVisibility: boolean): string => {\n                        return facetVisibility\n                            ? i18n.getText(\"hideFacetBtn_tooltip\")\n                            : i18n.getText(\"showFacetBtn_tooltip\");\n                    },\n                },\n                pressed: { path: \"/facetVisibility\" },\n                press: (oEvent: ToggleButton$PressEvent): void => {\n                    // open/close facet panel\n                    this.compositeControl.searchContainer.setProperty(\"animateFacetTransition\", true);\n                    const isVisible: boolean = oEvent.getParameter(\"pressed\");\n                    oModel.setFacetVisibility(isVisible);\n                    oModel.eventLogger.logEvent(\n                        isVisible\n                            ? {\n                                  type: UserEventType.FACETS_SHOW,\n                                  dataSourceKey: oModel.getDataSource().id,\n                              }\n                            : {\n                                  type: UserEventType.FACETS_HIDE,\n                                  dataSourceKey: oModel.getDataSource().id,\n                              }\n                    );\n                    this.compositeControl.searchContainer.setProperty(\"animateFacetTransition\", false);\n                    setTimeout(() => this.compositeControl.adjustSearchbarCustomGenericButtonWidth(), 100); // see this._resizeHandler();\n                },\n                visible: {\n                    path: \"/businessObjSearchEnabled\",\n                    formatter: (businessObjSearchEnabled: boolean): boolean => {\n                        // do not show button on phones\n                        // do not show in value-help mode\n                        // only show if business object search is active\n                        return (\n                            !Device.system.phone &&\n                            !oModel.config.optimizeForValueHelp &&\n                            oModel.config.facets &&\n                            businessObjSearchEnabled\n                        );\n                    },\n                },\n            }\n        );\n        filterBtn.addStyleClass(\"searchBarFilterButton\");\n        filterBtn.setLayoutData(\n            new OverflowToolbarLayoutData({ priority: OverflowToolbarPriority.NeverOverflow })\n        );\n        return filterBtn;\n    }\n\n    assembleResultviewSelectionButton(): OverflowToolbarToggleButton {\n        const oModel = this.compositeControl.getModelInternal() as SearchModel;\n        const selectionBtn = new OverflowToolbarToggleButton(\n            this.compositeControl.getId() + \"-searchBarResultviewSelectionButton\",\n            {\n                icon: IconPool.getIconURI(\"multi-select\"),\n                tooltip: {\n                    parts: [{ path: \"/resultviewSelectionVisibility\" }],\n                    formatter: (resultviewSelectionVisibility: boolean): string => {\n                        return resultviewSelectionVisibility\n                            ? i18n.getText(\"hideSelectionBtn_tooltip\")\n                            : i18n.getText(\"showSelectionBtn_tooltip\");\n                    },\n                },\n                pressed: { path: \"/resultviewSelectionVisibility\" },\n                press: (oEvent: ToggleButton$PressEvent): void => {\n                    // enable/disable selection of result view items (checkboxes)\n                    const isVisible: boolean = oEvent.getParameter(\"pressed\");\n                    oModel.setResultviewSelectionVisibility(isVisible);\n                    if (isVisible === false) {\n                        // reset selection when hiding checkboxes\n                        for (const item of this.compositeControl.getSearchResultSet().items) {\n                            item.setSelected(false);\n                        }\n                    }\n                },\n                visible: {\n                    path: \"/businessObjSearchEnabled\",\n                    formatter: (businessObjSearchEnabled: boolean): boolean => {\n                        // do not show button on phones\n                        // do not show in value-help mode\n                        // only show if business object search is active\n                        return (\n                            !Device.system.phone &&\n                            !oModel.config.optimizeForValueHelp &&\n                            oModel.config.showSelectionToggleButton &&\n                            oModel.config.facets &&\n                            businessObjSearchEnabled\n                        );\n                    },\n                },\n            }\n        );\n        selectionBtn.addStyleClass(\"searchBarResultviewSelectionButton\");\n        selectionBtn.setLayoutData(\n            new OverflowToolbarLayoutData({ priority: OverflowToolbarPriority.NeverOverflow })\n        );\n        return selectionBtn;\n    }\n\n    assembleGenericButtonsToolbar(): { toolbar: OverflowToolbar; hasCustomButtons: boolean } {\n        const oModel = this.compositeControl.getModelInternal() as SearchModel;\n\n        // table data export button\n        const dataExportButton = this.assembleExportButton();\n        dataExportButton.setLayoutData(\n            new OverflowToolbarLayoutData({ priority: OverflowToolbarPriority.High }) // 'high': Custom buttons can choose 'Low' or 'NeverOverflow' to make their button more/less important than ours\n        );\n\n        // display-switch tab strips\n        this.assembleResultViewSwitch();\n\n        // sort button\n        const sortButton = new OverflowToolbarButton(\n            (this.compositeControl.getId() ? this.compositeControl.getId() + \"-\" : \"\") + \"tableSortButton\",\n            {\n                icon: \"sap-icon://sort\",\n                text: \"{i18n>sortTable}\",\n                tooltip: \"{i18n>sortTable}\",\n                visible: {\n                    parts: [{ path: \"/count\" }, { path: \"/sortableAttributes\" }],\n                    formatter: (count, sortAttributes) => {\n                        const oModel = this.compositeControl.getModelInternal() as SearchModel;\n                        if (oModel && oModel.isHomogenousResult() && count > 0 && sortAttributes.length > 0) {\n                            return true;\n                        } else {\n                            return false;\n                        }\n                    },\n                },\n                type: {\n                    parts: [{ path: \"/orderBy\" }],\n                    formatter: (orderBy) => {\n                        if (orderBy && orderBy.sortOrder) {\n                            return ButtonType.Emphasized;\n                        } else {\n                            return ButtonType.Transparent;\n                        }\n                    },\n                },\n                press: () => {\n                    this.compositeControl.openSortDialog();\n                },\n            }\n        );\n        sortButton.addStyleClass(\"sapUshellSearchTableSortButton\");\n        sortButton.setLayoutData(\n            new OverflowToolbarLayoutData({ priority: OverflowToolbarPriority.High }) // 'high': Custom buttons can choose 'Low' or 'NeverOverflow' to make their button more/less important than ours\n        );\n\n        // sort dialog\n        this.compositeControl.sortDialog = this.assembleSearchResultSortDialog();\n\n        // table personalize button\n        let tablePersonalizeButton = undefined;\n        if (oModel?.config?.searchResultTablePersonalization !== false) {\n            tablePersonalizeButton = new OverflowToolbarButton(\n                (this.compositeControl.getId() ? this.compositeControl.getId() + \"-\" : \"\") +\n                    \"tablePersonalizeButton\",\n                {\n                    icon: \"sap-icon://action-settings\",\n                    text: \"{i18n>personalizeTable}\",\n                    tooltip: \"{i18n>personalizeTable}\",\n                    type: ButtonType.Transparent,\n                    enabled: {\n                        parts: [{ path: \"/resultViewType\" }],\n                        formatter: (resultViewType): boolean => resultViewType === \"searchResultTable\",\n                    },\n                    visible: {\n                        parts: [{ path: \"/count\" }, { path: \"/tableColumns\" }],\n                        formatter: (count, columns) => {\n                            const oModel = this.compositeControl.getModelInternal() as SearchModel;\n                            if (oModel && oModel.isHomogenousResult() && count > 0 && columns.length > 0) {\n                                return true;\n                            } else {\n                                return false;\n                            }\n                        },\n                    },\n                    press: () => {\n                        this.compositeControl.searchResultTable?.tablePersonalizer?.openDialog();\n                        const oModel = this.compositeControl.getModelInternal() as SearchModel;\n                        const userEventTableConfigOpen: TableConfigOpenEvent = {\n                            type: UserEventType.TABLE_CONFIG_OPEN,\n                            dataSourceKey: oModel.getDataSource().id,\n                        };\n                        oModel.eventLogger.logEvent(userEventTableConfigOpen);\n                    },\n                }\n            );\n            tablePersonalizeButton.addStyleClass(\"sapUshellSearchTablePersonalizeButton\");\n            tablePersonalizeButton.setLayoutData(\n                new OverflowToolbarLayoutData({ priority: OverflowToolbarPriority.High }) // 'high': Custom buttons can choose 'Low' or 'NeverOverflow' to make their button more/less important than ours\n            );\n        }\n\n        let toolbarContent: Array<Control> = [];\n        // standard buttons (export, sort, table personalization)\n        toolbarContent.push(dataExportButton);\n        toolbarContent.push(sortButton);\n        if (oModel?.config?.searchResultTablePersonalization !== false && tablePersonalizeButton) {\n            toolbarContent.push(tablePersonalizeButton);\n        }\n        // share button\n        const bWithShareButton = oModel?.config?.isUshell;\n        if (bWithShareButton) {\n            const shareButton = this.assembleShareButton();\n            shareButton.setLayoutData(\n                new OverflowToolbarLayoutData({ priority: OverflowToolbarPriority.High }) // 'high': Custom buttons can choose 'Low' or 'NeverOverflow' to make their button more/less important than ours\n            );\n            toolbarContent.push(shareButton);\n        }\n        toolbarContent.push(this.compositeControl.resultViewSwitch);\n\n        let hasCustomButtons = false;\n        try {\n            let customToolbar: Array<Control> = [new ToolbarSpacer()];\n            const customToolbarContent = oModel?.config?.getCustomToolbar() as Array<Control>;\n            if (customToolbarContent?.length > 0) {\n                hasCustomButtons = true;\n                customToolbarContent.push(\n                    new ToolbarSeparator(\"\", {\n                        visible: {\n                            parts: [{ path: \"/resultViewSwitchVisibility\" }, { path: \"/count\" }],\n                            formatter: (resultViewSwitchVisibility, count) => {\n                                return resultViewSwitchVisibility && count !== 0;\n                            },\n                        },\n                    })\n                );\n            }\n            if (oModel?.config?.searchInputLocation === \"Searchbar\") {\n                customToolbar = customToolbar.concat(this.compositeControl.oSearchFieldGroup);\n            }\n            customToolbar = customToolbar.concat(customToolbarContent);\n            toolbarContent = customToolbar.concat(toolbarContent);\n        } catch (err) {\n            const oError = new errors.ConfigurationExitError(\n                \"getCustomToolbar\",\n                oModel.config.applicationComponent,\n                err\n            );\n            this.compositeControl.errorHandler.onError(oError);\n            // do not throw oError, just do not any custom buttons to 'toolbar'\n        }\n        // put toobar buttons in a separate overflow toolbar to control its width independently of datasource tab strip\n        const toolbar = new OverflowToolbar(\n            this.compositeControl.getId() + \"-searchBar--genericButtonsToolbar\",\n            {\n                content: toolbarContent,\n            }\n        );\n        toolbar.addStyleClass(\"sapElisaSearchGenericButtonsToolbar\");\n        return { toolbar: toolbar, hasCustomButtons: hasCustomButtons };\n    }\n\n    assembleSearchResultSortDialog(): ViewSettingsDialog {\n        const sortDialogId = this.compositeControl.getId() + \"-sortDialog\";\n\n        // destroy old sort dialog\n        const oldSortDialog = Element.getElementById(sortDialogId);\n        if (oldSortDialog) {\n            oldSortDialog.destroy();\n        }\n\n        const sortDialog = new ViewSettingsDialog(sortDialogId, {\n            sortDescending: {\n                parts: [{ path: \"/orderBy\" }],\n                formatter: (orderBy): boolean => {\n                    return Object.keys(orderBy).length === 0 || orderBy.sortOrder === \"DESC\";\n                },\n            },\n            confirm: (oEvent: ViewSettingsDialog$ConfirmEvent) => {\n                const paramsSortItem = oEvent.getParameter(\"sortItem\");\n                const paramsSortDescending = oEvent.getParameter(\"sortDescending\");\n                const oModel = this.compositeControl.getModelInternal() as SearchModel;\n                const attributeId = (paramsSortItem.getBindingContext().getObject() as SortAttribute)\n                    .attributeId;\n                if (typeof paramsSortItem === \"undefined\" || attributeId === \"DEFAULT_SORT_ATTRIBUTE\") {\n                    sortDialog.setSortDescending(true);\n                    oModel.resetOrderBy(true);\n                } else {\n                    oModel.setOrderBy(\n                        {\n                            orderBy: attributeId,\n                            sortOrder: paramsSortDescending === true ? \"DESC\" : \"ASC\",\n                        },\n                        true\n                    );\n                }\n                // sortDialog.unbindAggregation(\"sortItems\", true);\n            },\n            cancel: () => {\n                // sortDialog.unbindAggregation(\"sortItems\", true);\n            },\n            resetFilters: () => {\n                // issue: default sort item can't be set, multiple reset selection in UI5\n                // workaround: set sort item after time delay\n                setTimeout(() => {\n                    sortDialog.setSortDescending(true);\n                    sortDialog.setSelectedSortItem(\"searchSortAttributeKeyDefault\");\n                }, 500);\n            },\n        });\n\n        sortDialog.addStyleClass(\"sapUshellSearchResultSortDialog\"); // obsolete\n        sortDialog.addStyleClass(\"sapElisaSearchResultSortDialog\");\n        this.compositeControl.addDependent(sortDialog);\n        return sortDialog;\n    }\n\n    assembleExportButton(): OverflowToolbarButton {\n        return new OverflowToolbarButton(\n            (this.compositeControl.getId() ? this.compositeControl.getId() + \"-\" : \"\") +\n                \"ushell-search-result-dataExportButton\",\n            {\n                icon: \"sap-icon://download\",\n                text: \"{i18n>exportData}\",\n                tooltip: \"{i18n>exportData}\",\n                type: ButtonType.Transparent,\n                visible: {\n                    parts: [{ path: \"/count\" }, { path: \"/tableColumns\" }],\n                    formatter: (count, columns) => {\n                        const oModel = this.compositeControl.getModelInternal() as SearchModel;\n                        if (oModel && oModel.isHomogenousResult() && count > 0 && columns.length > 0) {\n                            return true;\n                        } else {\n                            return false;\n                        }\n                    },\n                },\n                press: () => {\n                    if (this.compositeControl.searchSpreadsheet === undefined) {\n                        this.compositeControl.searchSpreadsheet = new SearchSpreadsheet(\n                            \"ushell-search-spreadsheet\"\n                        );\n                    }\n                    const oModel = this.compositeControl.getModelInternal() as SearchModel;\n                    this.compositeControl.searchSpreadsheet.onExport(oModel);\n                },\n            }\n        ).addStyleClass(\"sapUshellSearchTableDataExportButton\");\n    }\n\n    assembleShareButton(): OverflowToolbarButton {\n        // create action sheet\n        const oActionSheet = new ActionSheet(\n            (this.compositeControl.getId() ? this.compositeControl.getId() + \"-\" : \"\") + \"shareActionSheet\",\n            {\n                placement: PlacementType.Bottom,\n                buttons: [],\n            }\n        );\n        oActionSheet.addStyleClass(\"sapUshellSearchResultShareActionSheet\");\n        this.compositeControl.addDependent(oActionSheet); // -> destroys action sheet if SearchCompositeControl gets destroyed\n\n        // fill action sheet async with buttons\n        const oModel = this.compositeControl.getModelInternal() as SearchModel;\n        sap.ui.require([\"sap/ushell/ui/footerbar/AddBookmarkButton\"], (AddBookmarkButton) => {\n            // 1) bookmark button (entry in action sheet)\n            const oBookmarkButton = new AddBookmarkButton(\n                (this.compositeControl.getId() ? this.compositeControl.getId() + \"-\" : \"\") + \"bookmarkButton\",\n                {\n                    width: \"auto\",\n                    beforePressHandler: () => {\n                        const oAppData = {\n                            url: document.URL,\n                            title: oModel.getDocumentTitle(),\n                            icon: IconPool.getIconURI(\"search\"),\n                        };\n                        oBookmarkButton.setAppData(oAppData);\n                    },\n                }\n            );\n            oActionSheet.addButton(oBookmarkButton);\n            // 2) email button\n            const oEmailButton = new Button(\n                (this.compositeControl.getId() ? this.compositeControl.getId() + \"-\" : \"\") + \"emailButton\",\n                {\n                    icon: \"sap-icon://email\",\n                    text: i18n.getText(\"eMailFld\"),\n                    width: \"auto\",\n                    press: () => {\n                        URLHelper.triggerEmail(null, oModel.getDocumentTitle(), document.URL);\n                    },\n                }\n            );\n            oActionSheet.addButton(oEmailButton);\n        });\n\n        // share button which opens the action sheet\n        const oShareButton = new OverflowToolbarButton(\n            (this.compositeControl.getId() ? this.compositeControl.getId() + \"-\" : \"\") + \"shareButton\",\n            {\n                icon: \"sap-icon://action\",\n                text: i18n.getText(\"shareBtn\"),\n                tooltip: i18n.getText(\"shareBtn\"),\n                type: ButtonType.Transparent,\n                press: () => {\n                    oActionSheet.openBy(oShareButton);\n                },\n            }\n        );\n        return oShareButton;\n    }\n\n    assembleDataSourceTabBar(): IconTabBar {\n        const dataSourceTabBar = new IconTabBar(`${this.compositeControl.getId()}-dataSourceTabBar`, {\n            // tabDensityMode: \"Compact\", // not working, we have IconTabBar in left container of another bar -> see search.less\n            // headerMode: \"Inline\",   // do not use, confuses css when used on sap.m.Bar\n            expandable: false,\n            stretchContentHeight: false,\n            // selectedKey: \"{/tabStrips/strips/selected/id}\", // id of selected data source -> does not work, special logic see below, addEventDelegate -> onBeforeRendering\n            // backgroundDesign: BackgroundDesign.Transparent  // not relevant, content container is not in use\n            // content: -> not needed, we only need the 'switcher' for data source change (triggers new search to update search container)\n            visible: {\n                parts: [\n                    { path: \"/facetVisibility\" },\n                    { path: \"/count\" },\n                    { path: \"/businessObjSearchEnabled\" },\n                ],\n                formatter: (facetVisibility, count, bussinesObjSearchEnabled) => {\n                    const oModel = this.compositeControl.getModelInternal() as SearchModel;\n                    if (oModel.config.exclusiveDataSource) {\n                        return false;\n                    }\n                    return !facetVisibility && count > 0 && bussinesObjSearchEnabled;\n                },\n            },\n            selectedKey: {\n                path: \"/tabStrips/selected/id\",\n                mode: BindingMode.OneWay,\n            },\n            select: (oEvent) => {\n                const oModel = this.compositeControl.getModelInternal() as SearchModel;\n                if (oModel.config.searchScopeWithoutAll) {\n                    return;\n                }\n                if (oModel.getDataSource() !== oEvent.getParameter(\"item\").getBindingContext().getObject()) {\n                    // selection has changed\n                    oModel.setDataSource(\n                        oEvent.getParameter(\"item\").getBindingContext().getObject() as DataSource\n                    );\n                }\n            },\n        });\n        // define group for F6 handling\n        dataSourceTabBar.data(\"sap-ui-fastnavgroup\", \"false\", true /* write into DOM */);\n\n        dataSourceTabBar.addStyleClass(\"searchDataSourceTabStripBar\");\n        dataSourceTabBar.addStyleClass(\"sapUiSmallMarginBegin\");\n\n        dataSourceTabBar.setAriaTexts({\n            headerLabel: i18n.getText(\"dataSources\"),\n            headerDescription: i18n.getText(\"dataSources\"),\n        });\n\n        dataSourceTabBar.bindAggregation(\"items\", {\n            path: \"/tabStrips/strips\",\n            template: new IconTabFilter(\"\", {\n                key: \"{id}\", // data source id, only needed for indicator (bottom). We use bindingContext().getObject to switch search container content\n                text: \"{labelPlural}\",\n                visible: {\n                    path: \"\",\n                    formatter: (dataSource) => {\n                        const oModel = this.compositeControl.getModelInternal() as SearchModel;\n                        if (oModel.config.searchScopeWithoutAll && dataSource === oModel.allDataSource) {\n                            return false;\n                        }\n                    },\n                },\n            }),\n        });\n        return dataSourceTabBar;\n    }\n\n    assembleResultViewSwitch(): void {\n        if (this.compositeControl.resultViewSwitch !== undefined) {\n            return;\n        }\n        this.compositeControl.resultViewSwitch = new SegmentedButton(\n            this.compositeControl.getId() + \"-ResultViewType\",\n            {\n                selectedKey: \"{/resultViewType}\",\n                visible: {\n                    parts: [{ path: \"/resultViewSwitchVisibility\" }, { path: \"/count\" }],\n                    formatter: (resultViewSwitchVisibility: boolean, count: number) => {\n                        return resultViewSwitchVisibility && count !== 0;\n                    },\n                },\n                selectionChange: (oEvent: SegmentedButton$SelectionChangeEvent) => {\n                    const resultViewType = oEvent.getParameter(\"item\").getKey();\n                    this.compositeControl.setResultViewType(resultViewType);\n                    this.compositeControl.assignDragDropConfig();\n                    const oModel = this.compositeControl.getModelInternal() as SearchModel;\n                    const userEventResultViewSwitch: ResultViewSwitchEvent = {\n                        type: UserEventType.RESULT_VIEW_SWITCH,\n                        resultViewType: resultViewType,\n                    };\n                    oModel.eventLogger.logEvent(userEventResultViewSwitch);\n                },\n            }\n        );\n\n        this.compositeControl.resultViewSwitch.bindAggregation(\"items\", {\n            path: \"/resultViewTypes\",\n            factory: (id, context) => {\n                const oButton = new SegmentedButtonItem(\"\", { visible: true });\n                switch (\n                    context.getObject() as unknown as\n                        | \"searchResultList\"\n                        | \"searchResultTable\"\n                        | \"searchResultGrid\"\n                ) {\n                    case \"searchResultList\":\n                        oButton.setIcon(\"sap-icon://list\");\n                        oButton.setTooltip(i18n.getText(\"displayList\"));\n                        oButton.setKey(\"searchResultList\");\n                        break;\n                    case \"searchResultTable\":\n                        oButton.setIcon(\"sap-icon://table-view\");\n                        oButton.setTooltip(i18n.getText(\"displayTable\"));\n                        oButton.setKey(\"searchResultTable\");\n                        break;\n                    case \"searchResultGrid\":\n                        oButton.setIcon(\"sap-icon://grid\");\n                        oButton.setTooltip(i18n.getText(\"displayGrid\"));\n                        oButton.setKey(\"searchResultGrid\");\n                        break;\n                    default:\n                        oButton.setVisible(false);\n                }\n                return oButton;\n            },\n        });\n        this.compositeControl.resultViewSwitch.addStyleClass(\"sapUshellSearchResultViewSwitch\");\n        this.compositeControl.resultViewSwitch.setLayoutData(\n            new OverflowToolbarLayoutData({ priority: OverflowToolbarPriority.High }) // 'high': Custom buttons can choose 'Low' or 'NeverOverflow' to make their button more/less important than ours\n        );\n    }\n}\n"],"mappings":"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","ignoreList":[]}