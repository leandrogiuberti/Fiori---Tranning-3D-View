/*!
 * SAPUI5
 * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.
 * 
 */
sap.ui.define(["./tmpData"],function(e){"use strict";const t=e["createTmpData"];const d=e["deleteTmpData"];const i=e["getTmpData"];class r{id;label;expanded;expandable;childTreeNodes=[];tmpDataId;constructor(e){this.id=e.id;this.label=e.label;this.expanded=e.expanded??false;this.expandable=e.expandable??false;this.adjustPlaceholderChildTreeNode()}setTreeNodeFactory(e){this.getData().treeNodeFactory=e}getTreeNodeFactory(){return this.getData().treeNodeFactory}hasPlaceholderTreeNode(){return this.childTreeNodes.find(e=>e.id==="dummy")!==undefined}adjustPlaceholderChildTreeNode(){if(this.expandable){if(this.childTreeNodes.length===0){this.addPlaceholderTreeNode()}}else{if(this.hasPlaceholderTreeNode()){this.removePlaceHolderChildTreeNode()}}}addPlaceholderTreeNode(){if(this.hasPlaceholderTreeNode()){return}this.childTreeNodes.push({id:"dummy"})}removePlaceHolderChildTreeNode(){if(!this.hasPlaceholderTreeNode()){return}this.childTreeNodes.splice(0,1)}getChildTreeNodeById(e){for(const t of this.childTreeNodes){if(t.id===e){return t}}}addChildTreeNode(e){this.expandable=true;this.removePlaceHolderChildTreeNode();this.childTreeNodes.push(e);e.getData().parentTreeNode=this;e.register()}addChildTreeNodes(e){for(const t of e){this.addChildTreeNode(t)}}addChildTreeNodeAtIndex(e,t){this.expandable=true;this.removePlaceHolderChildTreeNode();this.childTreeNodes.splice(t,0,e);e.getData().parentTreeNode=this;e.register()}removeChildTreeNode(e){const t=this.childTreeNodes.indexOf(e);if(t<0){return}this.childTreeNodes.splice(t,1);e.getData().parentTreeNode=null;e.deRegister();this.adjustPlaceholderChildTreeNode()}delete(){for(const e of this.childTreeNodes.slice()){if(e.id==="dummy"){continue}e.delete()}const e=this.getData().parentTreeNode;if(e){e.removeChildTreeNode(this)}if(this.tmpDataId){d(this.tmpDataId)}}deleteChildTreeNodes(){for(const e of this.childTreeNodes.slice()){if(e.id==="dummy"){continue}e.delete()}}register(){const e=this.getData().parentTreeNode;if(!e.getTreeNodeFactory()){return}e.getTreeNodeFactory().registerTreeNode(this);for(const e of this.childTreeNodes){if(e.id==="dummy"){continue}e.register()}}deRegister(){if(!this.getTreeNodeFactory()){return}this.getTreeNodeFactory().deRegisterTreeNode(this);for(const e of this.childTreeNodes){if(e.id==="dummy"){continue}e.deRegister()}}getData(){if(!this.tmpDataId){const e=t();this.tmpDataId=e.tmpDataId;return e}return i(this.tmpDataId)}async setExpanded(e,t){this.expanded=e;if(this.getTreeNodeFactory().testMode){return}this.getTreeNodeFactory().saveFocus();if(this.expanded){try{this.deleteChildTreeNodes();this.getTreeNodeFactory().setBusy(true);const e=await this.fetchChildTreeNodes();if(e.length===0){this.expanded=false;this.setExpandable(false)}else{this.addChildTreeNodes(e)}}finally{this.getTreeNodeFactory().setBusy(false)}}else{this.deleteChildTreeNodes()}if(t){this.getTreeNodeFactory().updateUI()}this.getTreeNodeFactory().restoreFocus()}async fetchChildTreeNodes(){const e=this.getTreeNodeFactory();let t=e.cache.get(this.id);if(t){return t}t=await this.fetchChildTreeNodesImpl();e.cache.set(this.id,t);return t}fetchChildTreeNodesImpl(){return Promise.resolve([])}setExpandable(e){this.expandable=e;this.adjustPlaceholderChildTreeNode()}async updateRecursively(){const e=await this.fetchChildTreeNodes();this.updateChildren(e);for(const e of this.childTreeNodes){if(e.id==="dummy"){continue}if(!e.expanded){continue}await e.updateRecursively()}}updateChildren(e){const t=e=>{const t=this.getTreeNodeFactory().getTreeNode(e.id);if(t){t.getParentTreeNode().removeChildTreeNode(t);return t}else{return e}};if(e.length===0){this.deleteChildTreeNodes();this.expanded=false;this.setExpandable(false);return}this.removePlaceHolderChildTreeNode();let d;for(let i=0;i<e.length;++i){const r=e[i];if(i<=this.childTreeNodes.length-1){d=this.childTreeNodes[i];if(d.id===r.id){}else{d=t(r);this.addChildTreeNodeAtIndex(d,i)}}else{d=t(r);this.addChildTreeNode(d)}this.updateTreeNodeProperties(d,r);Object.assign(d.getData(),r.getData());if(d.expandable!==r.expandable){if(r.expandable){d.setExpandable(true)}else{d.deleteChildTreeNodes();d.setExpandable(false);d.expanded=false}}if(d!==r){r.delete()}}while(this.childTreeNodes.length>e.length){d=this.childTreeNodes[this.childTreeNodes.length-1];if(d.id==="dummy"){this.removePlaceHolderChildTreeNode()}else{d.delete()}}}updateTreeNodeProperties(e,t){const d=["id","expanded","expandable","childTreeNodes","tmpDataId"];for(const i in t){if(d.indexOf(i)>=0){continue}const r=t[i];if(["number","string","boolean"].indexOf(typeof r)<0){continue}e[i]=r}}visitChildNodesRecursively(e){for(const t of this.childTreeNodes){if(t.id==="dummy"){continue}e(t);t.visitChildNodesRecursively(e)}}visitParentNodesRecursively(e){const t=this.getParentTreeNode();if(t){e(t);t.visitParentNodesRecursively(e)}}getParentTreeNode(){return this.getData().parentTreeNode}isVisible(){const e=function(t){if(!t.expanded){return false}const d=t.getParentTreeNode();if(!d){return true}return e(d)};const t=this.getParentTreeNode();if(!t){return true}return e(t)}hasChildNodes(){for(const e of this.childTreeNodes){if(e.id==="dummy"){continue}return true}return false}hasExpandedChildNode(){for(const e of this.childTreeNodes){if(e.id==="dummy"){continue}if(e.expanded||e.hasExpandedChildNode()){return true}}return false}}return r});
//# sourceMappingURL=TreeNode.js.map