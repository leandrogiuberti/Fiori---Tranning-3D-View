{"version":3,"file":"TreeView-dbg.js","names":["sap","ui","define","Tree","___SearchHelper","sap_m_library","delayedExecution","ListSeparators","TreeView","extend","renderer","apiVersion","metadata","properties","treeNodeFactory","type","constructor","_constructor","sId","options","toggleOpenState","event","handleToggleOpenState","Tree.prototype.constructor.call","setShowSeparators","None","expandTreeNodes","setBusyIndicatorDelay","saveFocus","_saveFocus","domRef","getDomRef","focusTreeNodeId","undefined","childDomRefs","querySelectorAll","i","length","childDomRef","item","document","activeElement","getAttribute","restoreFocus","_restoreFocus","isFocused","setFocus","items","getItems","getBindingContext","getObject","id","focus","wait","delay","Promise","resolve","setTimeout","setTreeNodeFactory","_setTreeNodeFactory","setProperty","registerTreeView","getTreeNodeFactory","_getTreeNodeFactory","getProperty","destroy","_destroy","bSuppressInvalidate","Tree.prototype.destroy.call","deRegisterTreeView","_handleToggleOpenState","treeNode","getParameter","setExpanded","_expandTreeNodes","isDestroyed","collapseAll","expandTreeNodeRecursively","getRootTreeNode","_expandTreeNodeRecursively","expanded","doExpand","childTreeNode","childTreeNodes","_doExpand","context","itemTreeNode","expand"],"sources":["TreeView.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\nimport Tree, { $TreeSettings, Tree$ToggleOpenStateEvent } from \"sap/m/Tree\";\nimport { delayedExecution } from \"../SearchHelper\";\nimport TreeNode from \"./TreeNode\";\nimport { BaseTreeNodeFactory } from \"./TreeNodeFactory\";\nimport { ListSeparators } from \"sap/m/library\";\n\ninterface $TreeViewSettings extends $TreeSettings {\n    treeNodeFactory: BaseTreeNodeFactory | string;\n}\n\n/**\n * @namespace sap.esh.search.ui.tree.TreeView\n */\nexport default class TreeView extends Tree {\n    focusTreeNodeId: string;\n    static readonly metadata = {\n        properties: {\n            treeNodeFactory: {\n                type: \"object\",\n            },\n        },\n    };\n    constructor(sId?: string, options?: $TreeViewSettings) {\n        if (typeof sId === \"object\") {\n            options = sId;\n        }\n        options.toggleOpenState = (event: Tree$ToggleOpenStateEvent) => {\n            this.handleToggleOpenState(event);\n        };\n        super(sId, options);\n        this.setShowSeparators(ListSeparators.None);\n        this.expandTreeNodes = delayedExecution(this.expandTreeNodes, 200);\n        this.setBusyIndicatorDelay(200);\n    }\n\n    saveFocus() {\n        const domRef = this.getDomRef();\n        if (!domRef) {\n            this.focusTreeNodeId = undefined;\n            return;\n        }\n        const childDomRefs = domRef.querySelectorAll(\".sapMTreeItemBase\");\n        for (let i = 0; i < childDomRefs.length; ++i) {\n            const childDomRef = childDomRefs.item(i);\n            if (childDomRef === document.activeElement) {\n                this.focusTreeNodeId = childDomRef.getAttribute(\"data-esh-tree-node-id\");\n                return;\n            }\n        }\n        this.focusTreeNodeId = undefined;\n    }\n\n    async restoreFocus() {\n        const isFocused = () => {\n            return document.activeElement.getAttribute(\"data-esh-tree-node-id\") === this.focusTreeNodeId;\n        };\n        const setFocus = () => {\n            const items = this.getItems();\n            for (const item of items) {\n                if ((item.getBindingContext().getObject() as TreeNode).id === this.focusTreeNodeId) {\n                    item.focus();\n                    return;\n                }\n            }\n        };\n        const wait = (delay) =>\n            new Promise(function (resolve) {\n                setTimeout(resolve, delay);\n            });\n        for (let i = 0; i < 10; ++i) {\n            await wait(200);\n            if (isFocused()) {\n                return;\n            }\n            setFocus();\n        }\n    }\n\n    setTreeNodeFactory(treeNodeFactory: BaseTreeNodeFactory) {\n        this.setProperty(\"treeNodeFactory\", treeNodeFactory);\n        if (treeNodeFactory) {\n            treeNodeFactory.registerTreeView(this);\n        }\n    }\n\n    getTreeNodeFactory(): BaseTreeNodeFactory {\n        return this.getProperty(\"treeNodeFactory\");\n    }\n\n    destroy(bSuppressInvalidate) {\n        super.destroy(bSuppressInvalidate);\n        this.getTreeNodeFactory().deRegisterTreeView(this);\n    }\n\n    handleToggleOpenState(event: Tree$ToggleOpenStateEvent) {\n        const treeNode: TreeNode = (event.getParameter(\"itemContext\") as any).getObject(); // TODO: remove any once ui5 type is implemented\n        treeNode.setExpanded(event.getParameter(\"expanded\"), true);\n    }\n\n    expandTreeNodes() {\n        if (this.isDestroyed()) {\n            return;\n        }\n        this.collapseAll();\n        this.expandTreeNodeRecursively(this.getTreeNodeFactory().getRootTreeNode());\n    }\n\n    expandTreeNodeRecursively(treeNode: TreeNode): void {\n        if (treeNode.expanded) {\n            this.doExpand(treeNode);\n        }\n        for (const childTreeNode of treeNode.childTreeNodes) {\n            if (childTreeNode.id === \"dummy\") {\n                continue;\n            }\n            this.expandTreeNodeRecursively(childTreeNode);\n        }\n    }\n\n    doExpand(treeNode: TreeNode): void {\n        const items = this.getItems();\n        for (let i = 0; i < items.length; ++i) {\n            const item = items[i];\n            const context = item.getBindingContext();\n            if (!context) {\n                continue;\n            }\n            const itemTreeNode = context.getObject();\n            if (itemTreeNode === treeNode) {\n                this.expand(i);\n                return;\n            }\n        }\n    }\n\n    static renderer = {\n        apiVersion: 2,\n    };\n}\n"],"mappings":"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","ignoreList":[]}