{"version":3,"file":"TimeMerger.js","names":["sap","ui","define","TimeMerger","static","aborted","pending","returned","counter","processorCallback","processorNotificationSchedule","constructor","promiseList","timeDelay","this","length","abort","process","start","i","promise","then","assembleDoneCallback","assembleErrorCallback","scheduleProcessorNotification","window","clearTimeout","setTimeout","notifyProcessor","result","push","error"],"sources":["TimeMerger.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\nexport default class TimeMerger {\n    static counter = 0;\n    private aborted = false;\n    private pending: number;\n    private returned: Array<unknown> = [];\n    private counter: number;\n    private processorCallback?: (result: Array<unknown>) => void;\n    private processorNotificationSchedule?: number;\n\n    constructor(\n        readonly promiseList: Array<Promise<unknown>> = [],\n        readonly timeDelay = 1000\n    ) {\n        this.pending = this.promiseList.length;\n        this.counter = ++TimeMerger.counter;\n    }\n\n    abort(): void {\n        this.aborted = true;\n    }\n\n    process(processorCallback: (result: Array<unknown>) => void): TimeMerger {\n        this.processorCallback = processorCallback;\n        this.start();\n        return this;\n    }\n\n    start(): void {\n        // register done callback for all promises\n        for (let i = 0; i < this.promiseList.length; ++i) {\n            const promise = this.promiseList[i];\n            promise.then(this.assembleDoneCallback(), this.assembleErrorCallback());\n        }\n        // schedule time delayed merging of promise results\n        this.scheduleProcessorNotification();\n    }\n\n    scheduleProcessorNotification(): void {\n        if (this.processorNotificationSchedule) {\n            window.clearTimeout(this.processorNotificationSchedule);\n            this.processorNotificationSchedule = null;\n        }\n        this.processorNotificationSchedule = window.setTimeout(() => {\n            this.notifyProcessor();\n        }, this.timeDelay);\n    }\n\n    notifyProcessor(): void {\n        //console.log('--notify');\n        // check for abortion\n        if (this.aborted) {\n            return;\n        }\n        // notify callback if promises have returned\n        if (this.returned.length > 0) {\n            this.processorCallback(this.returned);\n            this.returned = [];\n        }\n        // check if we need to schedule a new merge\n        if (this.pending > 0) {\n            this.scheduleProcessorNotification();\n        }\n    }\n\n    assembleDoneCallback(): (result: unknown) => void {\n        return (result) => {\n            this.pending--;\n            this.returned.push(result);\n            if (this.pending === 0) {\n                if (this.processorNotificationSchedule) {\n                    window.clearTimeout(this.processorNotificationSchedule);\n                    this.processorNotificationSchedule = null;\n                }\n                this.notifyProcessor();\n            }\n        };\n    }\n\n    assembleErrorCallback(): (error: unknown) => void {\n        return (error) => {\n            this.pending--;\n            this.returned.push(error);\n            if (this.pending === 0) {\n                if (this.processorNotificationSchedule) {\n                    window.clearTimeout(this.processorNotificationSchedule);\n                    this.processorNotificationSchedule = null;\n                }\n                this.notifyProcessor();\n            }\n        };\n    }\n}\n"],"mappings":";;;;;AAAAA,IAAAC,GAAAC,OAAA,2BAKe,MAAMC,EACjBC,eAAiB,EACTC,QAAU,MACVC,QACAC,SAA2B,GAC3BC,QACAC,kBACAC,8BAERC,YACaC,EAAuC,GACvCC,EAAY,KACvBC,KAFWF,cAAoCE,KACpCD,YAETC,KAAKR,QAAUQ,KAAKF,YAAYG,OAChCD,KAAKN,UAAYL,EAAWK,OAChC,CAEAQ,QACIF,KAAKT,QAAU,IACnB,CAEAY,QAAQR,GACJK,KAAKL,kBAAoBA,EACzBK,KAAKI,QACL,OAAOJ,IACX,CAEAI,QAEI,IAAK,IAAIC,EAAI,EAAGA,EAAIL,KAAKF,YAAYG,SAAUI,EAAG,CAC9C,MAAMC,EAAUN,KAAKF,YAAYO,GACjCC,EAAQC,KAAKP,KAAKQ,uBAAwBR,KAAKS,wBACnD,CAEAT,KAAKU,+BACT,CAEAA,gCACI,GAAIV,KAAKJ,8BAA+B,CACpCe,OAAOC,aAAaZ,KAAKJ,+BACzBI,KAAKJ,8BAAgC,IACzC,CACAI,KAAKJ,8BAAgCe,OAAOE,WAAW,KACnDb,KAAKc,mBACNd,KAAKD,UACZ,CAEAe,kBAGI,GAAId,KAAKT,QAAS,CACd,MACJ,CAEA,GAAIS,KAAKP,SAASQ,OAAS,EAAG,CAC1BD,KAAKL,kBAAkBK,KAAKP,UAC5BO,KAAKP,SAAW,EACpB,CAEA,GAAIO,KAAKR,QAAU,EAAG,CAClBQ,KAAKU,+BACT,CACJ,CAEAF,uBACI,OAAQO,IACJf,KAAKR,UACLQ,KAAKP,SAASuB,KAAKD,GACnB,GAAIf,KAAKR,UAAY,EAAG,CACpB,GAAIQ,KAAKJ,8BAA+B,CACpCe,OAAOC,aAAaZ,KAAKJ,+BACzBI,KAAKJ,8BAAgC,IACzC,CACAI,KAAKc,iBACT,EAER,CAEAL,wBACI,OAAQQ,IACJjB,KAAKR,UACLQ,KAAKP,SAASuB,KAAKC,GACnB,GAAIjB,KAAKR,UAAY,EAAG,CACpB,GAAIQ,KAAKJ,8BAA+B,CACpCe,OAAOC,aAAaZ,KAAKJ,+BACzBI,KAAKJ,8BAAgC,IACzC,CACAI,KAAKc,iBACT,EAER,EACH,OAAAzB,CAAA","ignoreList":[]}