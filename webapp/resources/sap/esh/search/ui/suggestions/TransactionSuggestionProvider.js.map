{"version":3,"file":"TransactionSuggestionProvider.js","names":["sap","ui","define","___sinaNexTS_sina_DataSourceType","__SuggestionType","__Formatter","__BackendSystem","__FrontendSystem","Device","Container","_interopRequireDefault","obj","__esModule","default","DataSourceType","SuggestionType","Type","Formatter","BackendSystem","FrontendSystem","TransactionSuggestionProvider","model","suggestionHandler","suggestionLimit","sinaNext","suggestionQuery","transactionsDS","suggestionStartingCharacters","suggestionFormatter","transactionSuggestions","constructor","params","this","system","phone","createSuggestionQuery","createDataSource","id","label","type","BusinessObject","config","abortSuggestions","abort","getUrl","tCode","tCodeStartUrl","eshBackendSystemInfo","getSystem","equals","getSuggestions","filter","searchBusinessObjects","Promise","resolve","dataSource","getDataSource","userCategoryManager","favoritesIncludeApps","isFavActive","getCategory","includeApps","allDataSource","appDataSource","favDataSource","clone","suggestionTerm","searchTerm","toLowerCase","indexOf","slice","length","prepareSuggestionQuery","resultSet","getResultSetAsync","sinaSuggestions","items","sinaSuggestion","transactionSuggestion","uiSuggestionType","Transaction","position","properties","key","object","attributesMap","TCODE","value","url","icon","TCDTEXT","valueHighlighted","calculationMode","sina","can","getServiceAsync","isSupported","isNavigationSupported","target","shellHash","supported","format","transactionSuggestionLimit","getSuggestionLimit","addSuggestion","push","resetResultSet","setFilter","setDataSource","setTypes","Object","setCalculationModes","SuggestionCalculationMode","Data","setTop"],"sources":["TransactionSuggestionProvider.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\nimport SearchModel from \"sap/esh/search/ui/SearchModel\";\nimport { DataSource } from \"../sinaNexTS/sina/DataSource\";\nimport { DataSourceType } from \"../sinaNexTS/sina/DataSourceType\";\nimport { Filter } from \"../sinaNexTS/sina/Filter\";\nimport { Sina } from \"../sinaNexTS/sina/Sina\";\nimport { SuggestionQuery } from \"../sinaNexTS/sina/SuggestionQuery\";\nimport { SuggestionProvider } from \"./SuggestionProvider\";\nimport SuggestionType, { UISinaObjectSuggestion } from \"./SuggestionType\";\nimport { Type } from \"./SuggestionType\";\nimport CrossApplicationNavigation from \"sap/ushell/services/CrossApplicationNavigation\";\nimport SuggestionHandler from \"./SuggestionHandler\";\nimport { ObjectSuggestion } from \"../sinaNexTS/sina/ObjectSuggestion\";\nimport Formatter from \"./SinaObjectSuggestionFormatter\";\nimport BackendSystem from \"../flp/BackendSystem\";\nimport FrontendSystem from \"../flp/FrontendSystem\";\nimport Device from \"sap/ui/Device\";\nimport Container from \"sap/ushell/Container\";\n\nexport interface TransactionSuggestion extends UISinaObjectSuggestion {\n    searchTerm: string;\n    uiSuggestionType: Type.Transaction;\n    position: number;\n    key: string;\n    url: string;\n    icon: \"sap-icon://generate-shortcut\";\n}\n\nexport default class TransactionSuggestionProvider implements SuggestionProvider {\n    readonly model: SearchModel;\n    private suggestionHandler: SuggestionHandler;\n    private suggestionLimit: number;\n    private sinaNext: Sina;\n    private suggestionQuery: SuggestionQuery;\n    private transactionsDS: DataSource;\n    private suggestionStartingCharacters: number;\n    private suggestionFormatter = new Formatter();\n    public transactionSuggestions: Array<TransactionSuggestion> = [];\n\n    constructor(params: { model: SearchModel; suggestionHandler: SuggestionHandler }) {\n        this.model = params.model;\n        this.suggestionHandler = params.suggestionHandler;\n        this.suggestionLimit = Device.system.phone ? 5 : 7;\n        this.sinaNext = this.model.sinaNext;\n        this.suggestionQuery = this.sinaNext.createSuggestionQuery();\n        this.transactionsDS = this.sinaNext.createDataSource({\n            id: \"CD$ALL~ESH_TRANSACTION~\",\n            label: \"Transactions\",\n            type: DataSourceType.BusinessObject,\n        });\n        this.suggestionStartingCharacters = this.model.config.suggestionStartingCharacters;\n    }\n\n    abortSuggestions(): void {\n        this.suggestionQuery.abort();\n    }\n\n    // openTransactionSuggestion(tcode: string, startInNewWindow: boolean): void {\n    //     const transactionSuggestion = this.suggestionHandler.autoSelectTransactionSuggestion(tcode);\n    //     // const url = \"#Shell-startGUI?sap-ui2-tcode=\" + tcode;\n    //     if (!transactionSuggestion) return;\n    //     if (startInNewWindow) {\n    //         window.open(transactionSuggestion.url, \"_blank\", \"noopener,noreferrer\");\n    //     } else {\n    //         if (window.hasher) {\n    //             window.hasher.setHash(transactionSuggestion.url);\n    //         } else {\n    //             window.location.href = transactionSuggestion.url;\n    //         }\n    //     }\n    // }\n\n    private getUrl(tCode: string): string {\n        let tCodeStartUrl = \"#Shell-startGUI?sap-ui2-tcode=\" + tCode;\n        const eshBackendSystemInfo = BackendSystem.getSystem(this.model);\n        if (eshBackendSystemInfo && !eshBackendSystemInfo.equals(FrontendSystem.getSystem())) {\n            // add sid(XYZ.123) url parameter\n            tCodeStartUrl = `#Shell-startGUI?sap-system=sid(${eshBackendSystemInfo.id})&sap-ui2-tcode=${tCode}`;\n        }\n        return tCodeStartUrl;\n    }\n\n    async getSuggestions(filter: Filter): Promise<Array<TransactionSuggestion>> {\n        // check that BO search is enabled\n        if (!this.model.config.searchBusinessObjects) {\n            return Promise.resolve([]);\n        }\n        const dataSource = this.model.getDataSource();\n        const userCategoryManager = this.model.userCategoryManager;\n        const favoritesIncludeApps =\n            userCategoryManager?.isFavActive() &&\n            userCategoryManager?.getCategory(\"MyFavorites\")?.includeApps;\n        // check that datasource is all, apps or my favorites and my favorites include apps:\n        if (\n            dataSource !== this.model.allDataSource &&\n            dataSource !== this.model.appDataSource &&\n            !(dataSource === this.model.favDataSource && favoritesIncludeApps)\n        ) {\n            return Promise.resolve([]);\n        }\n        filter = filter.clone();\n        let suggestionTerm = filter.searchTerm;\n        if (\n            suggestionTerm.toLowerCase().indexOf(\"/n\") === 0 ||\n            suggestionTerm.toLowerCase().indexOf(\"/o\") === 0\n        ) {\n            suggestionTerm = suggestionTerm.slice(2);\n            filter.searchTerm = suggestionTerm;\n        }\n        this.transactionSuggestions = [];\n\n        if (suggestionTerm.length < this.suggestionStartingCharacters) {\n            return Promise.resolve([]);\n        }\n\n        // prepare sina suggestion query\n        this.prepareSuggestionQuery(filter);\n\n        const resultSet = await this.suggestionQuery.getResultSetAsync();\n        const sinaSuggestions = resultSet.items as Array<ObjectSuggestion>;\n\n        // const inTransactions = i18n.getText(\"suggestion_in_transactions\", [\"\"]);\n\n        // set type, datasource and position\n        for (const sinaSuggestion of sinaSuggestions) {\n            const transactionSuggestion: TransactionSuggestion = {\n                uiSuggestionType: Type.Transaction,\n                dataSource: this.transactionsDS,\n                position: SuggestionType.properties.Transaction.position,\n                key: sinaSuggestion.object.attributesMap.TCODE.value,\n                searchTerm: filter.searchTerm,\n                url: this.getUrl(sinaSuggestion.object.attributesMap.TCODE.value),\n                icon: \"sap-icon://generate-shortcut\",\n                label: sinaSuggestion.object.attributesMap.TCDTEXT.valueHighlighted,\n                type: sinaSuggestion.type,\n                calculationMode: sinaSuggestion.calculationMode,\n                object: sinaSuggestion.object,\n                sina: sinaSuggestion.sina,\n            };\n\n            const can: CrossApplicationNavigation = await Container.getServiceAsync(\n                \"CrossApplicationNavigation\"\n            );\n\n            const isSupported: Array<{\n                supported: boolean;\n            }> = await can.isNavigationSupported([\n                {\n                    target: {\n                        shellHash: transactionSuggestion.url,\n                    },\n                },\n            ]);\n            if (isSupported[0].supported) {\n                this.suggestionFormatter.format(this, transactionSuggestion);\n            }\n        }\n\n        // limit transaction suggestions\n        const transactionSuggestionLimit = this.suggestionHandler.getSuggestionLimit(Type.Transaction);\n        this.transactionSuggestions = this.transactionSuggestions.slice(0, transactionSuggestionLimit);\n\n        return this.transactionSuggestions;\n    }\n\n    addSuggestion(transactionSuggestion: TransactionSuggestion): void {\n        this.transactionSuggestions.push(transactionSuggestion);\n    }\n\n    private prepareSuggestionQuery(filter: Filter): void {\n        this.suggestionQuery.resetResultSet();\n        this.suggestionQuery.setFilter(filter);\n        this.suggestionQuery.setDataSource(this.transactionsDS);\n        this.suggestionQuery.setTypes([this.sinaNext.SuggestionType.Object]);\n        this.suggestionQuery.setCalculationModes([this.sinaNext.SuggestionCalculationMode.Data]);\n        this.suggestionQuery.setTop(10);\n    }\n}\n"],"mappings":"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","ignoreList":[]}