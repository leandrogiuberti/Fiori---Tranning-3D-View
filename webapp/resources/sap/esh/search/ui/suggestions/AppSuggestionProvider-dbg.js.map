{"version":3,"file":"AppSuggestionProvider-dbg.js","names":["sap","ui","define","__i18n","SearchHelper","___SuggestionType","Container","_interopRequireDefault","obj","__esModule","default","i18n","UISuggestionType","UISuggestionTypeProperties","AppSuggestionProvider","model","suggestApplications","suggestionHandler","constructor","options","refuseOutdatedRequests","suggestApplicationsNotDecorated","abortSuggestions","abort","combineSuggestionsWithIdenticalTitle","suggestions","suggestion","suggestionsTitleDict","i","length","firstAppSuggestion","title","subtitle","combinedSuggestionExists","combinedSuggestion","sortIndex","url","createSearchNavigationTarget","top","appTopDefault","filter","sinaNext","createFilter","dataSource","appDataSource","searchTerm","encodeFilter","targetUrl","label","getText","icon","keywords","uiSuggestionType","App","inApps","replace","suggestionTitle","Object","prototype","hasOwnProperty","call","push","sort","s1","s2","addAsterisk4ShowAllApps","searchTerms","searchTermsMatches","match","searchTermsArray","lastIndexOf","join","createShowMoreSuggestion","totalCount","suggestionTerm","tooltip","labelRaw","getProperty","SearchTermData","isShowMoreApps","titleNavigation","getSuggestions","getDataSource","userCategoryManager","favoritesIncludeApps","isFavActive","getCategory","includeApps","allDataSource","favDataSource","resultset","flpAppSuggestions","getElements","uiAppSuggestions","flpAppSuggestion","uiAppSuggestion","position","properties","key","appSuggestionLimit","getSuggestionLimit","slice","totalResults","service","getServiceAsync","queryApplications"],"sources":["AppSuggestionProvider.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\nimport SearchModel from \"sap/esh/search/ui/SearchModel\";\nimport i18n from \"../i18n\";\nimport { Filter } from \"../sinaNexTS/sina/Filter\";\nimport { SuggestionProvider } from \"./SuggestionProvider\";\nimport * as SearchHelper from \"sap/esh/search/ui/SearchHelper\";\nimport {\n    Type as UISuggestionType,\n    SuggestionType as UISuggestionTypeProperties,\n    Suggestion,\n} from \"./SuggestionType\";\nimport { DataSource } from \"../sinaNexTS/sina/DataSource\";\nimport SuggestionHandler from \"./SuggestionHandler\";\nimport Container from \"sap/ushell/Container\";\nimport { NavigationTarget } from \"../sinaNexTS/sina/NavigationTarget\";\n\nexport interface ShowMoreAppsSuggestion extends Suggestion {\n    title: string;\n    dataSource: DataSource;\n    labelRaw: string;\n    uiSuggestionType: UISuggestionType.SearchTermData;\n    searchTerm: string;\n    tooltip: string;\n    titleNavigation: NavigationTarget;\n    isShowMoreApps: boolean;\n    totalCount: number;\n}\n\nexport interface FLPAppSuggestion extends Suggestion {\n    title: string;\n    subtitle: string;\n    sortIndex: number;\n    label: string;\n    icon: string;\n    keywords: string;\n    combinedSuggestionExists?: boolean;\n}\n\nexport interface AppSuggestion extends FLPAppSuggestion {\n    uiSuggestionType: UISuggestionType.App;\n    dataSource: DataSource;\n    position: number;\n    key: string;\n}\n\nexport default class AppSuggestionProvider implements SuggestionProvider {\n    private model: SearchModel;\n    public suggestApplications: ((searchTerm: string) => Promise<{\n        getElements: () => Array<FLPAppSuggestion>;\n        totalResults: number;\n    }>) & { abort: () => void };\n    private suggestionHandler: SuggestionHandler;\n\n    constructor(options: { model: SearchModel; suggestionHandler: SuggestionHandler }) {\n        this.model = options.model;\n        this.suggestionHandler = options.suggestionHandler;\n        // decorate suggestion methods (decorator prevents request overtaking)\n        this.suggestApplications = SearchHelper.refuseOutdatedRequests(this.suggestApplicationsNotDecorated);\n    }\n\n    abortSuggestions(): void {\n        this.suggestApplications.abort();\n    }\n\n    combineSuggestionsWithIdenticalTitle(suggestions: Array<FLPAppSuggestion>): Array<FLPAppSuggestion> {\n        //            function JSONStringifyReplacer(key, value) {\n        //                if (key === \"sina\") {\n        //                    return undefined;\n        //                }\n        //                return value;\n        //            }\n\n        // collect suggestions in suggestionsTitleDict + create combined suggestions\n        let suggestion;\n        const suggestionsTitleDict: Record<string, FLPAppSuggestion> = {};\n        for (let i = 0; i < suggestions.length; i++) {\n            suggestion = suggestions[i];\n            const firstAppSuggestion = suggestionsTitleDict[suggestion.title + suggestion.subtitle];\n            if (firstAppSuggestion) {\n                if (!firstAppSuggestion.combinedSuggestionExists) {\n                    const combinedSuggestion = {\n                        title: \"combinedAppSuggestion\" + i,\n                        subtitle: suggestion.subtitle,\n                        sortIndex: firstAppSuggestion.sortIndex,\n                        url: this.model.createSearchNavigationTarget({\n                            top: this.model.appTopDefault,\n                            filter: this.model.sinaNext.createFilter({\n                                dataSource: this.model.appDataSource,\n                                searchTerm: suggestion.title,\n                            }),\n                            encodeFilter: false,\n                        }).targetUrl,\n                        label: i18n.getText(\"suggestion_in_apps\", [suggestion.label]),\n                        icon: \"sap-icon://search\",\n                        keywords: \"\",\n                        uiSuggestionType: UISuggestionType.App,\n                    };\n                    const inApps = i18n.getText(\"suggestion_in_apps\", [\"\"]);\n                    combinedSuggestion.label = combinedSuggestion.label.replace(\n                        inApps,\n                        \"<i>\" + inApps + \"</i>\"\n                    );\n                    suggestionsTitleDict[combinedSuggestion.title + combinedSuggestion.subtitle] =\n                        combinedSuggestion;\n                    firstAppSuggestion.combinedSuggestionExists = true;\n                }\n            } else {\n                suggestion.sortIndex = i;\n                suggestionsTitleDict[suggestion.title + suggestion.subtitle] = suggestion;\n            }\n        }\n\n        // filter out combined suggestions\n        suggestions = [];\n        for (const suggestionTitle in suggestionsTitleDict) {\n            if (Object.prototype.hasOwnProperty.call(suggestionsTitleDict, suggestionTitle)) {\n                suggestion = suggestionsTitleDict[suggestionTitle];\n                if (!suggestion.combinedSuggestionExists) {\n                    suggestions.push(suggestion);\n                }\n            }\n        }\n        suggestions.sort(function (s1, s2) {\n            return s1.sortIndex - s2.sortIndex;\n        });\n\n        return suggestions;\n    }\n\n    public addAsterisk4ShowAllApps(searchTerms: string): string {\n        const searchTermsMatches = searchTerms.match(/\\S+/g);\n        if (searchTermsMatches.length > 0) {\n            let searchTerm;\n            const searchTermsArray = [];\n            for (let i = 0; i < searchTermsMatches.length; i++) {\n                searchTerm = searchTermsMatches[i];\n                if (searchTerm && searchTerm.lastIndexOf(\"*\") !== searchTerm.length - 1) {\n                    searchTermsArray.push(searchTerm + \"*\");\n                } else {\n                    searchTermsArray.push(searchTerm);\n                }\n            }\n            searchTerms = searchTermsArray.join(\" \");\n        }\n\n        return searchTerms;\n    }\n\n    private createShowMoreSuggestion(totalCount: number, suggestionTerm: string): ShowMoreAppsSuggestion {\n        let title = i18n.getText(\"showAllNApps\", [totalCount]);\n        title = title.replace(/\"/g, \"\"); //remove trailing \"\"\n        const tooltip = title;\n        const label = \"<i>\" + title + \"</i>\";\n        return {\n            title: title,\n            tooltip: tooltip,\n            label: label,\n            dataSource: this.model.appDataSource,\n            labelRaw: this.model.getProperty(\"/uiFilter/searchTerm\"),\n            uiSuggestionType: UISuggestionType.SearchTermData,\n            isShowMoreApps: true,\n            searchTerm: this.model.getProperty(\"/uiFilter/searchTerm\") || \"\",\n            titleNavigation: this.model.createSearchNavigationTarget({\n                filter: this.model.sinaNext.createFilter({\n                    searchTerm: suggestionTerm,\n                    dataSource: this.model.appDataSource,\n                }),\n            }),\n            totalCount: totalCount,\n        };\n    }\n\n    public async getSuggestions(filter: Filter): Promise<Array<AppSuggestion | ShowMoreAppsSuggestion> | []> {\n        // check that datasource is all, apps or my favorites and my favorites include apps:\n        const dataSource = this.model.getDataSource();\n        const userCategoryManager = this.model.userCategoryManager;\n        const favoritesIncludeApps =\n            userCategoryManager?.isFavActive() &&\n            userCategoryManager?.getCategory(\"MyFavorites\")?.includeApps;\n        if (\n            dataSource !== this.model.allDataSource &&\n            dataSource !== this.model.appDataSource &&\n            !(dataSource === this.model.favDataSource && favoritesIncludeApps)\n        ) {\n            return [];\n        }\n\n        // no suggestions for searchTerm length < 1\n        if (filter.searchTerm.length < 1) {\n            return [];\n        }\n\n        // get suggestions\n        const suggestionTerm = this.model.getProperty(\"/uiFilter/searchTerm\");\n        const resultset = await this.suggestApplications(suggestionTerm);\n\n        // combine suggestions with identical title\n        let flpAppSuggestions = resultset.getElements();\n        flpAppSuggestions = this.combineSuggestionsWithIdenticalTitle(flpAppSuggestions);\n        let uiAppSuggestions: Array<AppSuggestion | ShowMoreAppsSuggestion> = [];\n\n        // set type, datasource and position\n        for (const flpAppSuggestion of flpAppSuggestions) {\n            const uiAppSuggestion: AppSuggestion = {\n                ...flpAppSuggestion,\n                uiSuggestionType: UISuggestionType.App,\n                dataSource: this.model.appDataSource,\n                position: UISuggestionTypeProperties.properties.App.position,\n                key: UISuggestionTypeProperties.App + flpAppSuggestion.url + flpAppSuggestion.icon,\n            };\n            uiAppSuggestions.push(uiAppSuggestion);\n        }\n\n        // limit app suggestions\n        const appSuggestionLimit = this.suggestionHandler.getSuggestionLimit(UISuggestionType.App);\n        uiAppSuggestions = uiAppSuggestions.slice(0, appSuggestionLimit);\n\n        // if there are more apps available, add a \"show all apps\" suggestion at the end\n        // but only if datasource is apps (nestle changes)\n        if (resultset.totalResults > appSuggestionLimit && dataSource === this.model.appDataSource) {\n            uiAppSuggestions.push(this.createShowMoreSuggestion(resultset.totalResults, suggestionTerm));\n        }\n\n        return uiAppSuggestions;\n    }\n\n    private async suggestApplicationsNotDecorated(searchTerm: string): Promise<{\n        getElements: () => Array<FLPAppSuggestion>;\n        totalResults: number;\n    }> {\n        const service: {\n            queryApplications: (arg0: { searchTerm: string; suggestion: boolean }) => Promise<{\n                getElements: () => Array<FLPAppSuggestion>;\n                totalResults: number;\n            }>;\n        } = await Container.getServiceAsync(\"Search\");\n        return service.queryApplications({\n            searchTerm: searchTerm,\n            suggestion: true,\n        });\n    }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAJAA,GAAA,CAAAC,EAAA,CAAAC,MAAA,sGAAAC,MAAA,EAAAC,YAAA,EAAAC,iBAAA,EAAAC,SAAA;EAAA;;EAAA,SAAAC,uBAAAC,GAAA;IAAA,OAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,WAAAD,GAAA,CAAAE,OAAA,mBAAAF,GAAA,CAAAE,OAAA,GAAAF,GAAA;EAAA;EAAA,MAMOG,IAAI,GAAAJ,sBAAA,CAAAJ,MAAA;EAAA,MAKCS,gBAAgB,GAAAP,iBAAA;EAAA,MACNQ,0BAA0B,GAAAR,iBAAA;EAqCjC,MAAMS,qBAAqB,CAA+B;IAC7DC,KAAK;IACNC,mBAAmB;IAIlBC,iBAAiB;IAEzBC,WAAWA,CAACC,OAAqE,EAAE;MAC/E,IAAI,CAACJ,KAAK,GAAGI,OAAO,CAACJ,KAAK;MAC1B,IAAI,CAACE,iBAAiB,GAAGE,OAAO,CAACF,iBAAiB;MAClD;MACA,IAAI,CAACD,mBAAmB,GAAGZ,YAAY,CAACgB,sBAAsB,CAAC,IAAI,CAACC,+BAA+B,CAAC;IACxG;IAEAC,gBAAgBA,CAAA,EAAS;MACrB,IAAI,CAACN,mBAAmB,CAACO,KAAK,CAAC,CAAC;IACpC;IAEAC,oCAAoCA,CAACC,WAAoC,EAA2B;MAChG;MACA;MACA;MACA;MACA;MACA;;MAEA;MACA,IAAIC,UAAU;MACd,MAAMC,oBAAsD,GAAG,CAAC,CAAC;MACjE,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,WAAW,CAACI,MAAM,EAAED,CAAC,EAAE,EAAE;QACzCF,UAAU,GAAGD,WAAW,CAACG,CAAC,CAAC;QAC3B,MAAME,kBAAkB,GAAGH,oBAAoB,CAACD,UAAU,CAACK,KAAK,GAAGL,UAAU,CAACM,QAAQ,CAAC;QACvF,IAAIF,kBAAkB,EAAE;UACpB,IAAI,CAACA,kBAAkB,CAACG,wBAAwB,EAAE;YAC9C,MAAMC,kBAAkB,GAAG;cACvBH,KAAK,EAAE,uBAAuB,GAAGH,CAAC;cAClCI,QAAQ,EAAEN,UAAU,CAACM,QAAQ;cAC7BG,SAAS,EAAEL,kBAAkB,CAACK,SAAS;cACvCC,GAAG,EAAE,IAAI,CAACrB,KAAK,CAACsB,4BAA4B,CAAC;gBACzCC,GAAG,EAAE,IAAI,CAACvB,KAAK,CAACwB,aAAa;gBAC7BC,MAAM,EAAE,IAAI,CAACzB,KAAK,CAAC0B,QAAQ,CAACC,YAAY,CAAC;kBACrCC,UAAU,EAAE,IAAI,CAAC5B,KAAK,CAAC6B,aAAa;kBACpCC,UAAU,EAAEnB,UAAU,CAACK;gBAC3B,CAAC,CAAC;gBACFe,YAAY,EAAE;cAClB,CAAC,CAAC,CAACC,SAAS;cACZC,KAAK,EAAErC,IAAI,CAACsC,OAAO,CAAC,oBAAoB,EAAE,CAACvB,UAAU,CAACsB,KAAK,CAAC,CAAC;cAC7DE,IAAI,EAAE,mBAAmB;cACzBC,QAAQ,EAAE,EAAE;cACZC,gBAAgB,EAAExC,gBAAgB,CAACyC;YACvC,CAAC;YACD,MAAMC,MAAM,GAAG3C,IAAI,CAACsC,OAAO,CAAC,oBAAoB,EAAE,CAAC,EAAE,CAAC,CAAC;YACvDf,kBAAkB,CAACc,KAAK,GAAGd,kBAAkB,CAACc,KAAK,CAACO,OAAO,CACvDD,MAAM,EACN,KAAK,GAAGA,MAAM,GAAG,MACrB,CAAC;YACD3B,oBAAoB,CAACO,kBAAkB,CAACH,KAAK,GAAGG,kBAAkB,CAACF,QAAQ,CAAC,GACxEE,kBAAkB;YACtBJ,kBAAkB,CAACG,wBAAwB,GAAG,IAAI;UACtD;QACJ,CAAC,MAAM;UACHP,UAAU,CAACS,SAAS,GAAGP,CAAC;UACxBD,oBAAoB,CAACD,UAAU,CAACK,KAAK,GAAGL,UAAU,CAACM,QAAQ,CAAC,GAAGN,UAAU;QAC7E;MACJ;;MAEA;MACAD,WAAW,GAAG,EAAE;MAChB,KAAK,MAAM+B,eAAe,IAAI7B,oBAAoB,EAAE;QAChD,IAAI8B,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAACjC,oBAAoB,EAAE6B,eAAe,CAAC,EAAE;UAC7E9B,UAAU,GAAGC,oBAAoB,CAAC6B,eAAe,CAAC;UAClD,IAAI,CAAC9B,UAAU,CAACO,wBAAwB,EAAE;YACtCR,WAAW,CAACoC,IAAI,CAACnC,UAAU,CAAC;UAChC;QACJ;MACJ;MACAD,WAAW,CAACqC,IAAI,CAAC,UAAUC,EAAE,EAAEC,EAAE,EAAE;QAC/B,OAAOD,EAAE,CAAC5B,SAAS,GAAG6B,EAAE,CAAC7B,SAAS;MACtC,CAAC,CAAC;MAEF,OAAOV,WAAW;IACtB;IAEOwC,uBAAuBA,CAACC,WAAmB,EAAU;MACxD,MAAMC,kBAAkB,GAAGD,WAAW,CAACE,KAAK,CAAC,MAAM,CAAC;MACpD,IAAID,kBAAkB,CAACtC,MAAM,GAAG,CAAC,EAAE;QAC/B,IAAIgB,UAAU;QACd,MAAMwB,gBAAgB,GAAG,EAAE;QAC3B,KAAK,IAAIzC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGuC,kBAAkB,CAACtC,MAAM,EAAED,CAAC,EAAE,EAAE;UAChDiB,UAAU,GAAGsB,kBAAkB,CAACvC,CAAC,CAAC;UAClC,IAAIiB,UAAU,IAAIA,UAAU,CAACyB,WAAW,CAAC,GAAG,CAAC,KAAKzB,UAAU,CAAChB,MAAM,GAAG,CAAC,EAAE;YACrEwC,gBAAgB,CAACR,IAAI,CAAChB,UAAU,GAAG,GAAG,CAAC;UAC3C,CAAC,MAAM;YACHwB,gBAAgB,CAACR,IAAI,CAAChB,UAAU,CAAC;UACrC;QACJ;QACAqB,WAAW,GAAGG,gBAAgB,CAACE,IAAI,CAAC,GAAG,CAAC;MAC5C;MAEA,OAAOL,WAAW;IACtB;IAEQM,wBAAwBA,CAACC,UAAkB,EAAEC,cAAsB,EAA0B;MACjG,IAAI3C,KAAK,GAAGpB,IAAI,CAACsC,OAAO,CAAC,cAAc,EAAE,CAACwB,UAAU,CAAC,CAAC;MACtD1C,KAAK,GAAGA,KAAK,CAACwB,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;MACjC,MAAMoB,OAAO,GAAG5C,KAAK;MACrB,MAAMiB,KAAK,GAAG,KAAK,GAAGjB,KAAK,GAAG,MAAM;MACpC,OAAO;QACHA,KAAK,EAAEA,KAAK;QACZ4C,OAAO,EAAEA,OAAO;QAChB3B,KAAK,EAAEA,KAAK;QACZL,UAAU,EAAE,IAAI,CAAC5B,KAAK,CAAC6B,aAAa;QACpCgC,QAAQ,EAAE,IAAI,CAAC7D,KAAK,CAAC8D,WAAW,CAAC,sBAAsB,CAAC;QACxDzB,gBAAgB,EAAExC,gBAAgB,CAACkE,cAAc;QACjDC,cAAc,EAAE,IAAI;QACpBlC,UAAU,EAAE,IAAI,CAAC9B,KAAK,CAAC8D,WAAW,CAAC,sBAAsB,CAAC,IAAI,EAAE;QAChEG,eAAe,EAAE,IAAI,CAACjE,KAAK,CAACsB,4BAA4B,CAAC;UACrDG,MAAM,EAAE,IAAI,CAACzB,KAAK,CAAC0B,QAAQ,CAACC,YAAY,CAAC;YACrCG,UAAU,EAAE6B,cAAc;YAC1B/B,UAAU,EAAE,IAAI,CAAC5B,KAAK,CAAC6B;UAC3B,CAAC;QACL,CAAC,CAAC;QACF6B,UAAU,EAAEA;MAChB,CAAC;IACL;IAEA,MAAaQ,cAAcA,CAACzC,MAAc,EAA+D;MACrG;MACA,MAAMG,UAAU,GAAG,IAAI,CAAC5B,KAAK,CAACmE,aAAa,CAAC,CAAC;MAC7C,MAAMC,mBAAmB,GAAG,IAAI,CAACpE,KAAK,CAACoE,mBAAmB;MAC1D,MAAMC,oBAAoB,GACtBD,mBAAmB,EAAEE,WAAW,CAAC,CAAC,IAClCF,mBAAmB,EAAEG,WAAW,CAAC,aAAa,CAAC,EAAEC,WAAW;MAChE,IACI5C,UAAU,KAAK,IAAI,CAAC5B,KAAK,CAACyE,aAAa,IACvC7C,UAAU,KAAK,IAAI,CAAC5B,KAAK,CAAC6B,aAAa,IACvC,EAAED,UAAU,KAAK,IAAI,CAAC5B,KAAK,CAAC0E,aAAa,IAAIL,oBAAoB,CAAC,EACpE;QACE,OAAO,EAAE;MACb;;MAEA;MACA,IAAI5C,MAAM,CAACK,UAAU,CAAChB,MAAM,GAAG,CAAC,EAAE;QAC9B,OAAO,EAAE;MACb;;MAEA;MACA,MAAM6C,cAAc,GAAG,IAAI,CAAC3D,KAAK,CAAC8D,WAAW,CAAC,sBAAsB,CAAC;MACrE,MAAMa,SAAS,GAAG,MAAM,IAAI,CAAC1E,mBAAmB,CAAC0D,cAAc,CAAC;;MAEhE;MACA,IAAIiB,iBAAiB,GAAGD,SAAS,CAACE,WAAW,CAAC,CAAC;MAC/CD,iBAAiB,GAAG,IAAI,CAACnE,oCAAoC,CAACmE,iBAAiB,CAAC;MAChF,IAAIE,gBAA+D,GAAG,EAAE;;MAExE;MACA,KAAK,MAAMC,gBAAgB,IAAIH,iBAAiB,EAAE;QAC9C,MAAMI,eAA8B,GAAG;UACnC,GAAGD,gBAAgB;UACnB1C,gBAAgB,EAAExC,gBAAgB,CAACyC,GAAG;UACtCV,UAAU,EAAE,IAAI,CAAC5B,KAAK,CAAC6B,aAAa;UACpCoD,QAAQ,EAAEnF,0BAA0B,CAACoF,UAAU,CAAC5C,GAAG,CAAC2C,QAAQ;UAC5DE,GAAG,EAAErF,0BAA0B,CAACwC,GAAG,GAAGyC,gBAAgB,CAAC1D,GAAG,GAAG0D,gBAAgB,CAAC5C;QAClF,CAAC;QACD2C,gBAAgB,CAAChC,IAAI,CAACkC,eAAe,CAAC;MAC1C;;MAEA;MACA,MAAMI,kBAAkB,GAAG,IAAI,CAAClF,iBAAiB,CAACmF,kBAAkB,CAACxF,gBAAgB,CAACyC,GAAG,CAAC;MAC1FwC,gBAAgB,GAAGA,gBAAgB,CAACQ,KAAK,CAAC,CAAC,EAAEF,kBAAkB,CAAC;;MAEhE;MACA;MACA,IAAIT,SAAS,CAACY,YAAY,GAAGH,kBAAkB,IAAIxD,UAAU,KAAK,IAAI,CAAC5B,KAAK,CAAC6B,aAAa,EAAE;QACxFiD,gBAAgB,CAAChC,IAAI,CAAC,IAAI,CAACW,wBAAwB,CAACkB,SAAS,CAACY,YAAY,EAAE5B,cAAc,CAAC,CAAC;MAChG;MAEA,OAAOmB,gBAAgB;IAC3B;IAEA,MAAcxE,+BAA+BA,CAACwB,UAAkB,EAG7D;MACC,MAAM0D,OAKL,GAAG,MAAMjG,SAAS,CAACkG,eAAe,CAAC,QAAQ,CAAC;MAC7C,OAAOD,OAAO,CAACE,iBAAiB,CAAC;QAC7B5D,UAAU,EAAEA,UAAU;QACtBnB,UAAU,EAAE;MAChB,CAAC,CAAC;IACN;EACJ;EAAC,OAAAZ,qBAAA;AAAA","ignoreList":[]}