{"version":3,"file":"RecentlyUsedSuggestionProvider.js","names":["sap","ui","define","___SuggestionType","RecentEntriesLimit","RecentlyUsedSuggestionProvider","model","suggestionHandler","constructor","params","this","abortSuggestions","getSuggestions","getSearchBoxTerm","length","Promise","resolve","recentlyUsedSuggestions","recentlyUsedStorage","getItems","slice"],"sources":["RecentlyUsedSuggestionProvider.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\nimport SearchModel from \"sap/esh/search/ui/SearchModel\";\nimport SuggestionHandler from \"./SuggestionHandler\";\nimport { SuggestionProvider } from \"./SuggestionProvider\";\nimport { RecentEntriesLimit, Suggestion } from \"./SuggestionType\";\n\nexport default class RecentlyUsedSuggestionProvider implements SuggestionProvider {\n    model: SearchModel;\n    suggestionHandler: SuggestionHandler;\n\n    constructor(params: { model: SearchModel; suggestionHandler: SuggestionHandler }) {\n        this.model = params.model;\n        this.suggestionHandler = params.suggestionHandler;\n    }\n\n    abortSuggestions(): void {\n        return;\n    }\n\n    async getSuggestions(): Promise<Array<Suggestion>> {\n        if (this.model.getSearchBoxTerm().length > 0) {\n            return Promise.resolve([]);\n        }\n        let recentlyUsedSuggestions = this.model.recentlyUsedStorage.getItems();\n        recentlyUsedSuggestions = recentlyUsedSuggestions.slice(0, RecentEntriesLimit);\n        return Promise.resolve(recentlyUsedSuggestions);\n    }\n}\n"],"mappings":";;;;;AAAAA,IAAAC,GAAAC,OAAA,8BAAAC,GAAA,mBAQSC,EAAkBD,EAAA,sBAEZ,MAAME,EACjBC,MACAC,kBAEAC,YAAYC,GACRC,KAAKJ,MAAQG,EAAOH,MACpBI,KAAKH,kBAAoBE,EAAOF,iBACpC,CAEAI,mBACI,MACJ,CAEA,oBAAMC,GACF,GAAIF,KAAKJ,MAAMO,mBAAmBC,OAAS,EAAG,CAC1C,OAAOC,QAAQC,QAAQ,GAC3B,CACA,IAAIC,EAA0BP,KAAKJ,MAAMY,oBAAoBC,WAC7DF,EAA0BA,EAAwBG,MAAM,EAAGhB,GAC3D,OAAOW,QAAQC,QAAQC,EAC3B,EACH,OAAAZ,CAAA","ignoreList":[]}