{"version":3,"file":"TimeMerger-dbg.js","names":["sap","ui","define","TimeMerger","counter","aborted","pending","returned","processorCallback","processorNotificationSchedule","constructor","promiseList","timeDelay","length","abort","process","start","i","promise","then","assembleDoneCallback","assembleErrorCallback","scheduleProcessorNotification","window","clearTimeout","setTimeout","notifyProcessor","result","push","error"],"sources":["TimeMerger.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\nexport default class TimeMerger {\n    static counter = 0;\n    private aborted = false;\n    private pending: number;\n    private returned: Array<unknown> = [];\n    private counter: number;\n    private processorCallback?: (result: Array<unknown>) => void;\n    private processorNotificationSchedule?: number;\n\n    constructor(\n        readonly promiseList: Array<Promise<unknown>> = [],\n        readonly timeDelay = 1000\n    ) {\n        this.pending = this.promiseList.length;\n        this.counter = ++TimeMerger.counter;\n    }\n\n    abort(): void {\n        this.aborted = true;\n    }\n\n    process(processorCallback: (result: Array<unknown>) => void): TimeMerger {\n        this.processorCallback = processorCallback;\n        this.start();\n        return this;\n    }\n\n    start(): void {\n        // register done callback for all promises\n        for (let i = 0; i < this.promiseList.length; ++i) {\n            const promise = this.promiseList[i];\n            promise.then(this.assembleDoneCallback(), this.assembleErrorCallback());\n        }\n        // schedule time delayed merging of promise results\n        this.scheduleProcessorNotification();\n    }\n\n    scheduleProcessorNotification(): void {\n        if (this.processorNotificationSchedule) {\n            window.clearTimeout(this.processorNotificationSchedule);\n            this.processorNotificationSchedule = null;\n        }\n        this.processorNotificationSchedule = window.setTimeout(() => {\n            this.notifyProcessor();\n        }, this.timeDelay);\n    }\n\n    notifyProcessor(): void {\n        //console.log('--notify');\n        // check for abortion\n        if (this.aborted) {\n            return;\n        }\n        // notify callback if promises have returned\n        if (this.returned.length > 0) {\n            this.processorCallback(this.returned);\n            this.returned = [];\n        }\n        // check if we need to schedule a new merge\n        if (this.pending > 0) {\n            this.scheduleProcessorNotification();\n        }\n    }\n\n    assembleDoneCallback(): (result: unknown) => void {\n        return (result) => {\n            this.pending--;\n            this.returned.push(result);\n            if (this.pending === 0) {\n                if (this.processorNotificationSchedule) {\n                    window.clearTimeout(this.processorNotificationSchedule);\n                    this.processorNotificationSchedule = null;\n                }\n                this.notifyProcessor();\n            }\n        };\n    }\n\n    assembleErrorCallback(): (error: unknown) => void {\n        return (error) => {\n            this.pending--;\n            this.returned.push(error);\n            if (this.pending === 0) {\n                if (this.processorNotificationSchedule) {\n                    window.clearTimeout(this.processorNotificationSchedule);\n                    this.processorNotificationSchedule = null;\n                }\n                this.notifyProcessor();\n            }\n        };\n    }\n}\n"],"mappings":"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","ignoreList":[]}