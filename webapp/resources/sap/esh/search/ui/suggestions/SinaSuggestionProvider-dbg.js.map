{"version":3,"file":"SinaSuggestionProvider-dbg.js","names":["sap","ui","define","__i18n","__SinaBaseSuggestionProvider","__SinaObjectSuggestionFormatter","___SuggestionType","SearchHelper","___sinaNexTS_sina_SearchResultSetItemAttribute","Device","_interopRequireDefault","obj","__esModule","default","i18n","SinaBaseSuggestionProvider","SinaObjectSuggestionFormatter","UISuggestionType","UISuggestionTypeProperties","SearchResultSetItemAttribute","SinaSuggestionProvider","suggestionLimit","suggestionStartingCharacters","model","sinaObjectSuggestionFormatter","suggestions","firstObjectDataSuggestion","numberSuggestionsByType","suggestionHandler","constructor","options","sinaNext","suggestionTypes","system","phone","config","abortSuggestions","suggestionQuery","abort","getSuggestions","filter","i","types","length","suggestionType","suggestionTerm","searchTerm","indexOf","SearchTermHistory","SearchTermData","dataSource","allDataSource","Object","DataSource","getDataSource","favDataSource","SearchTermAI","isNlqActive","createAllAndAppDsSuggestions","searchBusinessObjects","Promise","resolve","appDataSource","prepareSuggestionQuery","resultSet","getResultSetAsync","sinaSuggestions","items","formatSinaSuggestions","dataSources","unshift","includeApps","suggestionTerms","getProperty","suggestionTermsIgnoreStar","replace","oTester","Tester","id","oTestResult","test","label","bMatch","isSuggestionLimitReached","suggestion","sina","getText","sHighlightedText","position","properties","type","SuggestionType","calculationMode","SuggestionCalculationMode","Data","uiSuggestionType","addSuggestion","limit","getSuggestionLimit","numberSuggestions","preFormatSuggestions","sinaSuggestion","uiSuggestion","getSuggestionType","assembleKey","childSuggestions","key","detailAttr","object","detailAttributes","objKey","value","titleNavigation","createSearchNavigationTarget","formatSearchTermDataSuggestion","Transaction","sinaObjectSuggestion","format","push","assembleSearchInSuggestionLabel","grouped","addChildSuggestions","Math","min","sinaChildSuggestion","labelPlural","SearchTerm","History","SearchTermAndDataSource"],"sources":["SinaSuggestionProvider.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\nimport SearchModel from \"sap/esh/search/ui/SearchModel\";\nimport i18n from \"../i18n\";\nimport { Filter } from \"../sinaNexTS/sina/Filter\";\nimport { Suggestion as SinaSuggestion } from \"../sinaNexTS/sina/Suggestion\";\nimport SinaBaseSuggestionProvider from \"./SinaBaseSuggestionProvider\";\nimport SinaObjectSuggestionFormatter from \"./SinaObjectSuggestionFormatter\";\nimport { SuggestionProvider } from \"./SuggestionProvider\";\nimport {\n    Type as UISuggestionType,\n    SuggestionType as UISuggestionTypeProperties,\n    Suggestion,\n    UISinaSuggestion,\n    UISinaObjectSuggestion,\n} from \"./SuggestionType\";\nimport * as SearchHelper from \"sap/esh/search/ui/SearchHelper\";\nimport { SuggestionResultSet } from \"../sinaNexTS/sina/SuggestionResultSet\";\nimport { DataSource } from \"../sinaNexTS/sina/DataSource\";\nimport { Sina } from \"../sinaNexTS/sina/Sina\";\nimport SuggestionHandler from \"./SuggestionHandler\";\nimport { SearchResultSetItemAttribute } from \"../sinaNexTS/sina/SearchResultSetItemAttribute\";\nimport Device from \"sap/ui/Device\";\n\nexport interface SinaSuggestionProviderOptions {\n    model: SearchModel;\n    sinaNext: Sina;\n    suggestionTypes: Array<UISuggestionType>;\n    suggestionHandler: SuggestionHandler;\n}\n\nexport default class SinaSuggestionProvider extends SinaBaseSuggestionProvider implements SuggestionProvider {\n    suggestionLimit: number;\n    suggestionStartingCharacters: number;\n    readonly model: SearchModel;\n    private sinaObjectSuggestionFormatter: SinaObjectSuggestionFormatter;\n    suggestions: UISinaSuggestion[];\n    firstObjectDataSuggestion: boolean;\n    private numberSuggestionsByType: Partial<Record<UISuggestionType, number>>;\n    readonly suggestionHandler: SuggestionHandler;\n\n    // init\n    // ===================================================================\n    constructor(options: SinaSuggestionProviderOptions) {\n        // call super constructor\n        super(options.sinaNext);\n        this.model = options.model;\n        this.suggestionTypes = options.suggestionTypes;\n        this.suggestionHandler = options.suggestionHandler;\n        this.suggestionLimit = Device.system.phone ? 5 : 7;\n        this.suggestionStartingCharacters = this.model.config.suggestionStartingCharacters;\n        this.sinaObjectSuggestionFormatter = new SinaObjectSuggestionFormatter();\n    }\n\n    // abort suggestions\n    // ===================================================================\n    public abortSuggestions(): void {\n        this.suggestionQuery.abort();\n    }\n\n    // get suggestions\n    // ===================================================================\n    public async getSuggestions(filter: Filter): Promise<Array<Suggestion>> {\n        // reset global fields\n        this.suggestions = [];\n        this.firstObjectDataSuggestion = true;\n        this.numberSuggestionsByType = {};\n        for (let i = 0; i < UISuggestionTypeProperties.types.length; ++i) {\n            const suggestionType = UISuggestionTypeProperties.types[i];\n            this.numberSuggestionsByType[suggestionType] = 0;\n        }\n\n        // history based search term suggestions only starting by default from 1. character\n        const suggestionTerm = filter.searchTerm;\n        if (\n            this.suggestionTypes.length === 1 &&\n            this.suggestionTypes.indexOf(UISuggestionType.SearchTermHistory) >= 0 &&\n            suggestionTerm.length < 1\n        ) {\n            return [];\n        }\n\n        // data based search term suggestions only starting by default from 3. character and in general not for all datasource\n        if (\n            this.suggestionTypes.length === 1 &&\n            this.suggestionTypes.indexOf(UISuggestionType.SearchTermData) >= 0 &&\n            (suggestionTerm.length < this.suggestionStartingCharacters ||\n                filter.dataSource === this.model.allDataSource)\n        ) {\n            return [];\n        }\n\n        // object suggestions only starting by default from 3. character\n        if (\n            this.suggestionTypes.length === 1 &&\n            this.suggestionTypes.indexOf(UISuggestionType.Object) >= 0 &&\n            suggestionTerm.length < this.suggestionStartingCharacters\n        ) {\n            return [];\n        }\n\n        // data source suggestions only for ds=all and My Favorites\n        if (\n            this.suggestionTypes.length === 1 &&\n            this.suggestionTypes.indexOf(UISuggestionType.DataSource) >= 0 &&\n            this.model.getDataSource() !== this.model.sinaNext.allDataSource &&\n            this.model.getDataSource() !== this.model.favDataSource\n        ) {\n            return [];\n        }\n\n        // data source suggestions only starting from 1. character\n        if (\n            this.suggestionTypes.length === 1 &&\n            this.suggestionTypes.indexOf(UISuggestionType.DataSource) >= 0 &&\n            suggestionTerm.length < 1\n        ) {\n            return [];\n        }\n\n        // ai suggestions only if ai is active\n        if (\n            this.suggestionTypes.length === 1 &&\n            this.suggestionTypes.indexOf(UISuggestionType.SearchTermAI) >= 0 &&\n            !this.model.isNlqActive()\n        ) {\n            return [];\n        }\n\n        // handle client side datasource-suggestions for all and apps\n        this.createAllAndAppDsSuggestions();\n\n        // check that BO search is enabled\n        if (!this.model.config.searchBusinessObjects) {\n            return Promise.resolve(this.suggestions);\n        }\n\n        // no server request for ds = apps\n        if (this.model.getDataSource() === this.model.appDataSource) {\n            return Promise.resolve(this.suggestions);\n        }\n\n        // prepare sina suggestion query\n        this.prepareSuggestionQuery(filter);\n\n        // fire sina suggestion query\n        const resultSet = (await this.suggestionQuery.getResultSetAsync()) as SuggestionResultSet;\n        // concatenate searchterm + suggestion term\n        const sinaSuggestions = resultSet.items;\n\n        // assemble items from result set\n        this.formatSinaSuggestions(sinaSuggestions);\n\n        return this.suggestions;\n    }\n\n    // client side datasource suggestions for all and apps\n    // ===================================================================\n    private createAllAndAppDsSuggestions(): void {\n        if (this.suggestionTypes.indexOf(UISuggestionType.DataSource) < 0) {\n            return;\n        }\n\n        if (\n            this.model.getDataSource() !== this.model.allDataSource &&\n            this.model.getDataSource() !== this.model.favDataSource\n        ) {\n            return;\n        }\n\n        const dataSources: DataSource[] = [];\n        if (this.model.getDataSource() === this.model.allDataSource) {\n            dataSources.unshift(this.model.appDataSource);\n            dataSources.unshift(this.model.allDataSource);\n        }\n        if (this.model.getDataSource() === this.model.favDataSource) {\n            if (this.model.favDataSource.includeApps) {\n                dataSources.unshift(this.model.appDataSource);\n            }\n            dataSources.unshift(this.model.favDataSource);\n        }\n\n        const suggestionTerms: string = this.model.getProperty(\"/uiFilter/searchTerm\");\n        const suggestionTermsIgnoreStar = suggestionTerms.replace(/\\*/g, \"\");\n        const oTester = new SearchHelper.Tester(suggestionTermsIgnoreStar);\n\n        for (let i = 0; i < dataSources.length; ++i) {\n            const dataSource = dataSources[i];\n            if (dataSource.id === this.model.getDataSource().id) {\n                continue;\n            }\n            const oTestResult = oTester.test(dataSource.label);\n            if (oTestResult.bMatch === true) {\n                // limit number of suggestions\n                if (this.isSuggestionLimitReached(UISuggestionType.DataSource)) {\n                    return;\n                }\n\n                // create suggestion\n                const suggestion: UISinaSuggestion = {\n                    sina: this.sinaNext,\n                    label:\n                        \"<i>\" +\n                        i18n.getText(\"searchInPlaceholder\", [\"\"]) +\n                        \"</i> \" +\n                        oTestResult.sHighlightedText,\n                    dataSource: dataSource,\n                    position: UISuggestionTypeProperties.properties.DataSource.position,\n                    type: this.sinaNext.SuggestionType.DataSource,\n                    calculationMode: this.sinaNext.SuggestionCalculationMode.Data,\n                    uiSuggestionType: UISuggestionType.DataSource,\n                };\n                this.addSuggestion(suggestion);\n            }\n        }\n    }\n\n    // check suggestion limit\n    // ===================================================================\n    private isSuggestionLimitReached(suggestionType: UISuggestionType): boolean {\n        const limit = this.suggestionHandler.getSuggestionLimit(suggestionType);\n        const numberSuggestions = this.numberSuggestionsByType[suggestionType];\n        if (numberSuggestions >= limit) {\n            return true;\n        }\n        return false;\n    }\n\n    // preformat of suggestions: add ui position and ui suggestion type\n    // ===================================================================\n    private preFormatSuggestions(sinaSuggestions: SinaSuggestion[]): void {\n        for (let i = 0; i < sinaSuggestions.length; ++i) {\n            const sinaSuggestion = sinaSuggestions[i];\n            const uiSuggestion: Partial<UISinaSuggestion> = sinaSuggestion;\n            // suggestion type\n            uiSuggestion.uiSuggestionType = this.getSuggestionType(sinaSuggestion);\n            // set position\n            uiSuggestion.position =\n                UISuggestionTypeProperties.properties[uiSuggestion.uiSuggestionType].position;\n            // key\n            this.assembleKey(uiSuggestion);\n            // process children\n            if (uiSuggestion.childSuggestions) {\n                this.preFormatSuggestions(uiSuggestion.childSuggestions as unknown as Array<SinaSuggestion>);\n            }\n        }\n    }\n\n    // assemble key\n    // ===================================================================\n    private assembleKey(sinaSuggestion: Partial<UISinaSuggestion>): void {\n        switch (sinaSuggestion.uiSuggestionType) {\n            case UISuggestionType.DataSource:\n                sinaSuggestion.key = UISuggestionType.DataSource + sinaSuggestion.dataSource.id;\n                break;\n            case UISuggestionType.SearchTermData:\n                sinaSuggestion.key = UISuggestionType.SearchTermData + sinaSuggestion.searchTerm;\n                if (sinaSuggestion.dataSource) {\n                    sinaSuggestion.key += sinaSuggestion.dataSource.id;\n                }\n                break;\n            case UISuggestionType.SearchTermHistory:\n                sinaSuggestion.key = UISuggestionType.SearchTermData + sinaSuggestion.searchTerm; // use type SearchTermData : in ui history and data based suggestions are identical\n                if (sinaSuggestion.dataSource) {\n                    sinaSuggestion.key += sinaSuggestion.dataSource.id;\n                }\n                break;\n            case UISuggestionType.SearchTermAI:\n                sinaSuggestion.key = UISuggestionType.SearchTermAI + sinaSuggestion.searchTerm;\n                break;\n            case UISuggestionType.Object: {\n                // const objKey = sinaSuggestion.object.title\n                //     ? sinaSuggestion.object.title\n                //     : sinaSuggestion.object.detailAttributes[0].value;\n                // Does an object really have a title??\n                const detailAttr = sinaSuggestion.object.detailAttributes[0];\n                if (detailAttr instanceof SearchResultSetItemAttribute) {\n                    const objKey = detailAttr.value;\n                    sinaSuggestion.key = UISuggestionType.Object + objKey;\n                }\n                break;\n            }\n        }\n    }\n\n    // add sina suggestions\n    // ===================================================================\n    private formatSinaSuggestions(sinaSuggestions: Array<SinaSuggestion>): Array<UISinaSuggestion> {\n        // preprocess add ui position and key to all suggestions\n        this.preFormatSuggestions(sinaSuggestions);\n\n        // process suggestions\n        for (let i = 0; i < sinaSuggestions.length; ++i) {\n            const sinaSuggestion = sinaSuggestions[i] as unknown as UISinaSuggestion;\n\n            // limit number of suggestions\n            if (this.isSuggestionLimitReached(sinaSuggestion.uiSuggestionType)) {\n                continue;\n            }\n\n            // format according to type\n            switch (sinaSuggestion.uiSuggestionType) {\n                case UISuggestionType.DataSource:\n                    if (\n                        this.model.getDataSource() !== this.model.allDataSource &&\n                        this.model.getDataSource() !== this.model.favDataSource\n                    ) {\n                        continue;\n                    }\n                    //sinaSuggestion.label = /*<i>' + i18n.getText(\"searchInPlaceholder\", [\"\"]) + '</i> ' +*/ sinaSuggestion.label;\n                    this.addSuggestion(sinaSuggestion);\n                    break;\n                case UISuggestionType.SearchTermData:\n                    sinaSuggestion.titleNavigation = this.model.createSearchNavigationTarget(\n                        (sinaSuggestion as any).filter as Filter\n                    );\n                    this.formatSearchTermDataSuggestion(sinaSuggestion);\n                    break;\n                case UISuggestionType.SearchTermHistory:\n                    sinaSuggestion.titleNavigation = this.model.createSearchNavigationTarget(\n                        (sinaSuggestion as any).filter as Filter\n                    );\n                    this.addSuggestion(sinaSuggestion);\n                    break;\n                case UISuggestionType.SearchTermAI:\n                    this.addSuggestion(sinaSuggestion);\n                    break;\n                case UISuggestionType.Object:\n                case UISuggestionType.Transaction: {\n                    const sinaObjectSuggestion: UISinaObjectSuggestion = {\n                        ...sinaSuggestion,\n                        dataSource: sinaSuggestion.object.dataSource,\n                        object: sinaSuggestion.object,\n                    };\n                    this.sinaObjectSuggestionFormatter.format(this, sinaObjectSuggestion);\n                    break;\n                }\n                default:\n                    break;\n            }\n        }\n\n        return this.suggestions;\n    }\n\n    // add suggestion\n    // ===================================================================\n    public addSuggestion(suggestion: UISinaSuggestion): void {\n        this.suggestions.push(suggestion);\n        this.numberSuggestionsByType[suggestion.uiSuggestionType] += 1;\n    }\n\n    // format search term suggestion\n    // ===================================================================\n    private formatSearchTermDataSuggestion(sinaSuggestion: UISinaSuggestion): void {\n        if (this.model.getDataSource() === this.model.allDataSource) {\n            // 1. model datasource is all\n            if (this.firstObjectDataSuggestion) {\n                // 1.1 first suggestion (display also child suggestions)\n                this.firstObjectDataSuggestion = false;\n                if (sinaSuggestion.childSuggestions.length > 0) {\n                    sinaSuggestion.label = this.assembleSearchInSuggestionLabel(sinaSuggestion);\n                    sinaSuggestion.grouped = true;\n                    this.addSuggestion(sinaSuggestion);\n                    this.addChildSuggestions(sinaSuggestion);\n                } else {\n                    this.addSuggestion(sinaSuggestion);\n                }\n            } else {\n                // 1.2 subsequent suggestions (ignore child suggestions)\n                this.addSuggestion(sinaSuggestion);\n            }\n        } else {\n            // 2. model datasource is a connector\n            this.addSuggestion(sinaSuggestion);\n        }\n    }\n\n    // add child suggestions\n    // ===================================================================\n    private addChildSuggestions(sinaSuggestion: UISinaSuggestion): void {\n        // max 2 child suggestions\n        for (let i = 0; i < Math.min(2, sinaSuggestion.childSuggestions.length); ++i) {\n            // check limit\n            if (this.isSuggestionLimitReached(UISuggestionType.SearchTermData)) {\n                return;\n            }\n\n            // add suggestion\n            const sinaChildSuggestion = sinaSuggestion.childSuggestions[i];\n            sinaChildSuggestion.label = this.assembleSearchInSuggestionLabel(sinaChildSuggestion);\n            sinaChildSuggestion.grouped = true;\n            this.addSuggestion(sinaChildSuggestion);\n        }\n    }\n\n    // assemble search in suggestion label\n    // ===================================================================\n    private assembleSearchInSuggestionLabel(sinaSuggestion): string {\n        return i18n.getText(\"resultsIn\", [\n            \"<span>\" + sinaSuggestion.label + \"</span>\",\n            sinaSuggestion.filter.dataSource.labelPlural,\n        ]);\n    }\n\n    // get type of sina suggestion\n    // ===================================================================\n    private getSuggestionType(sinaSuggestion: SinaSuggestion): UISuggestionType {\n        switch (sinaSuggestion.type) {\n            case this.sinaNext.SuggestionType.SearchTerm:\n                if (sinaSuggestion.calculationMode === this.sinaNext.SuggestionCalculationMode.History) {\n                    return UISuggestionType.SearchTermHistory;\n                }\n                return UISuggestionType.SearchTermData;\n            case this.sinaNext.SuggestionType.SearchTermAndDataSource:\n                if (sinaSuggestion.calculationMode === this.sinaNext.SuggestionCalculationMode.History) {\n                    return UISuggestionType.SearchTermHistory;\n                }\n                return UISuggestionType.SearchTermData;\n            case this.sinaNext.SuggestionType.SearchTermAI:\n                return UISuggestionType.SearchTermAI;\n            case this.sinaNext.SuggestionType.DataSource:\n                return UISuggestionType.DataSource;\n            case this.sinaNext.SuggestionType.Object:\n                return UISuggestionType.Object;\n        }\n    }\n}\n"],"mappings":"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","ignoreList":[]}