{"version":3,"file":"UsageAnalyticsConsumerSina.js","names":["sap","ui","define","Log","__EventConsumer","_interopRequireDefault","obj","__esModule","default","EventConsumer","UsageAnalyticsConsumerSina","label","isLoggingEnabled","log","getLogger","constructor","sinaNext","super","this","initAsync","sinaConfig","getConfigurationAsync","personalizedSearch","debug","logEvent","event","logUserEvent","type","logTechnicalEvent"],"sources":["UsageAnalyticsConsumerSina.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\nimport Log from \"sap/base/Log\";\nimport { Sina } from \"../sinaNexTS/sina/Sina\";\nimport EventConsumer from \"./EventConsumer\";\nimport { AllUserEvents } from \"./UserEvents\";\nimport { AllTechnicalEvents } from \"./TechnicalEvents\";\n\n/**\n * Sina Usage Analytics Event Consumer.\n * Currently implementations are only available for abap_odata and InAV2 providers.\n * It is up to other sina providers to implement the logUserEvent method.\n */\nexport default class UsageAnalyticsConsumerSina extends EventConsumer {\n    public readonly label = \"sina\";\n    private isLoggingEnabled = false;\n    private log = Log.getLogger(\"sap.esh.search.ui.eventlogging.UsageAnalyticsConsumerSina\");\n\n    constructor(private readonly sinaNext: Sina) {\n        super();\n    }\n\n    async initAsync(): Promise<void> {\n        const sinaConfig = await this.sinaNext.getConfigurationAsync();\n        if (sinaConfig.personalizedSearch) {\n            this.isLoggingEnabled = true;\n            this.log.debug(\"sina usage analytics consumer is enabled\");\n        } else {\n            this.log.debug(\"sina usage analytics consumer is disabled\");\n        }\n    }\n\n    public logEvent(event: AllUserEvents | AllTechnicalEvents): void {\n        if (this.isLoggingEnabled) {\n            this.sinaNext.logUserEvent(event);\n            this.log.debug(`[${this.label}] Logged event ${event.type}`);\n        }\n    }\n\n    public logTechnicalEvent(event: AllTechnicalEvents): void {\n        this.logEvent(event);\n    }\n}\n"],"mappings":";;;;;AAAAA,IAAAC,GAAAC,OAAA,4CAAAC,EAAAC,GAAA,sBAAAC,EAAAC,GAAA,OAAAA,KAAAC,mBAAAD,EAAAE,UAAA,YAAAF,EAAAE,QAAAF,CAAA,OAOOG,EAAaJ,EAAAD,GASL,MAAMM,UAAmCD,EACpCE,MAAQ,OAChBC,iBAAmB,MACnBC,IAAMV,EAAIW,UAAU,6DAE5BC,YAA6BC,GACzBC,QAAQC,KADiBF,UAE7B,CAEA,eAAMG,GACF,MAAMC,QAAmBF,KAAKF,SAASK,wBACvC,GAAID,EAAWE,mBAAoB,CAC/BJ,KAAKN,iBAAmB,KACxBM,KAAKL,IAAIU,MAAM,2CACnB,KAAO,CACHL,KAAKL,IAAIU,MAAM,4CACnB,CACJ,CAEOC,SAASC,GACZ,GAAIP,KAAKN,iBAAkB,CACvBM,KAAKF,SAASU,aAAaD,GAC3BP,KAAKL,IAAIU,MAAM,IAAIL,KAAKP,uBAAuBc,EAAME,OACzD,CACJ,CAEOC,kBAAkBH,GACrBP,KAAKM,SAASC,EAClB,EACH,OAAAf,CAAA","ignoreList":[]}