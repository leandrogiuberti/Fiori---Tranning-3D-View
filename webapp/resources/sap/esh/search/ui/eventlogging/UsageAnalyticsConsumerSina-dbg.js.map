{"version":3,"file":"UsageAnalyticsConsumerSina-dbg.js","names":["sap","ui","define","Log","__EventConsumer","_interopRequireDefault","obj","__esModule","default","EventConsumer","UsageAnalyticsConsumerSina","label","isLoggingEnabled","log","getLogger","constructor","sinaNext","initAsync","sinaConfig","getConfigurationAsync","personalizedSearch","debug","logEvent","event","logUserEvent","type","logTechnicalEvent"],"sources":["UsageAnalyticsConsumerSina.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\nimport Log from \"sap/base/Log\";\nimport { Sina } from \"../sinaNexTS/sina/Sina\";\nimport EventConsumer from \"./EventConsumer\";\nimport { AllUserEvents } from \"./UserEvents\";\nimport { AllTechnicalEvents } from \"./TechnicalEvents\";\n\n/**\n * Sina Usage Analytics Event Consumer.\n * Currently implementations are only available for abap_odata and InAV2 providers.\n * It is up to other sina providers to implement the logUserEvent method.\n */\nexport default class UsageAnalyticsConsumerSina extends EventConsumer {\n    public readonly label = \"sina\";\n    private isLoggingEnabled = false;\n    private log = Log.getLogger(\"sap.esh.search.ui.eventlogging.UsageAnalyticsConsumerSina\");\n\n    constructor(private readonly sinaNext: Sina) {\n        super();\n    }\n\n    async initAsync(): Promise<void> {\n        const sinaConfig = await this.sinaNext.getConfigurationAsync();\n        if (sinaConfig.personalizedSearch) {\n            this.isLoggingEnabled = true;\n            this.log.debug(\"sina usage analytics consumer is enabled\");\n        } else {\n            this.log.debug(\"sina usage analytics consumer is disabled\");\n        }\n    }\n\n    public logEvent(event: AllUserEvents | AllTechnicalEvents): void {\n        if (this.isLoggingEnabled) {\n            this.sinaNext.logUserEvent(event);\n            this.log.debug(`[${this.label}] Logged event ${event.type}`);\n        }\n    }\n\n    public logTechnicalEvent(event: AllTechnicalEvents): void {\n        this.logEvent(event);\n    }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAJAA,GAAA,CAAAC,EAAA,CAAAC,MAAA,gDAAAC,GAAA,EAAAC,eAAA;EAAA;;EAAA,SAAAC,uBAAAC,GAAA;IAAA,OAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,WAAAD,GAAA,CAAAE,OAAA,mBAAAF,GAAA,CAAAE,OAAA,GAAAF,GAAA;EAAA;EAAA,MAOOG,aAAa,GAAAJ,sBAAA,CAAAD,eAAA;EAIpB;AACA;AACA;AACA;AACA;EACe,MAAMM,0BAA0B,SAASD,aAAa,CAAC;IAClDE,KAAK,GAAG,MAAM;IACtBC,gBAAgB,GAAG,KAAK;IACxBC,GAAG,GAAGV,GAAG,CAACW,SAAS,CAAC,2DAA2D,CAAC;IAExFC,WAAWA,CAAkBC,QAAc,EAAE;MACzC,KAAK,CAAC,CAAC;MAAC,KADiBA,QAAc,GAAdA,QAAc;IAE3C;IAEA,MAAMC,SAASA,CAAA,EAAkB;MAC7B,MAAMC,UAAU,GAAG,MAAM,IAAI,CAACF,QAAQ,CAACG,qBAAqB,CAAC,CAAC;MAC9D,IAAID,UAAU,CAACE,kBAAkB,EAAE;QAC/B,IAAI,CAACR,gBAAgB,GAAG,IAAI;QAC5B,IAAI,CAACC,GAAG,CAACQ,KAAK,CAAC,0CAA0C,CAAC;MAC9D,CAAC,MAAM;QACH,IAAI,CAACR,GAAG,CAACQ,KAAK,CAAC,2CAA2C,CAAC;MAC/D;IACJ;IAEOC,QAAQA,CAACC,KAAyC,EAAQ;MAC7D,IAAI,IAAI,CAACX,gBAAgB,EAAE;QACvB,IAAI,CAACI,QAAQ,CAACQ,YAAY,CAACD,KAAK,CAAC;QACjC,IAAI,CAACV,GAAG,CAACQ,KAAK,CAAC,IAAI,IAAI,CAACV,KAAK,kBAAkBY,KAAK,CAACE,IAAI,EAAE,CAAC;MAChE;IACJ;IAEOC,iBAAiBA,CAACH,KAAyB,EAAQ;MACtD,IAAI,CAACD,QAAQ,CAACC,KAAK,CAAC;IACxB;EACJ;EAAC,OAAAb,0BAAA;AAAA","ignoreList":[]}