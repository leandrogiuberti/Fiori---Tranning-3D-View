{"version":3,"file":"ErrorHandler-dbg.js","names":["sap","ui","define","Log","MessageBox","sap_ui_core_library","MessageType","__i18n","___errors","___sinaNexTS_core_errors","_interopRequireDefault","obj","__esModule","default","TextDirection","i18n","ESHUIError","DataSourceAttributeMetadataNotFoundError","ServerError","ServerErrorCode","SinaError","ErrorHandler","label","searchModel","instance","externalOnErrorHandler","_oLogger","getLogger","getInstance","properties","constructor","model","onErrorHandler","onError","error","options","e","handleError","onErrorAsync","Promise","resolve","logError","showError","setSearchModel","setExternalOnErrorHandler","getErrorTextGeneric","logMessage","name","stack","previous","Error","getErrorText","getErrorTextEsh","code","message","details","solution","sinaNext","getDebugInfo","convertErrorToMessage","convertErrorToMessageEsh","convertErrorToMessageGeneric","title","description","getText","type","E300","showReloadPopup","showMinorErrorsAsWarnings","E100","Warning","E400","E500","push","join","confirm","onClose","event","resetDataSource","resetAllFilterConditions","reloadNavigationTarget","createSearchNavigationTargetCurrentState","window","location","href","targetUrl","reload","styleClass","showMessageBox","text","props","initialFocus","textDirection","Inherit","Information","information","warning","pushUIMessage"],"sources":["ErrorHandler.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\nimport Log from \"sap/base/Log\";\nimport SearchModel from \"sap/esh/search/ui/SearchModel\";\nimport MessageBox from \"sap/m/MessageBox\";\nimport { TextDirection } from \"sap/ui/core/library\";\nimport MessageType from \"sap/ui/core/message/MessageType\";\nimport i18n from \"../i18n\";\nimport { ESHUIError } from \"./errors\";\nimport {\n    DataSourceAttributeMetadataNotFoundError,\n    ServerError,\n    ServerErrorCode,\n    SinaError,\n} from \"../sinaNexTS/core/errors\";\n\nexport interface IUIMessage {\n    type: MessageType;\n    title: string;\n    description: string;\n    shownToUser?: boolean;\n}\n\nexport interface ErrorHandlingOptions {\n    showMinorErrorsAsWarnings: boolean;\n}\n\n/**\n * This ErrorHandler is used to handle thrown instances of ESHUIError.\n * The default implementation will log the error stack to the console\n * and will also show the error message to the user in a popup window.\n */\nexport default class ErrorHandler {\n    private label?: string; // label of this instance, used as logging prefix\n    private searchModel?: SearchModel;\n    private static instance: ErrorHandler;\n    private externalOnErrorHandler?: (error: ESHUIError, options?: ErrorHandlingOptions) => void;\n    private readonly _oLogger = Log.getLogger(\"sap.esh.search.ui.error.ErrorHandler\");\n\n    public static getInstance(properties?: {\n        label?: string;\n        model?: SearchModel;\n        onErrorHandler?: (error: ESHUIError, options?: ErrorHandlingOptions) => void;\n    }): ErrorHandler {\n        if (!ErrorHandler.instance) {\n            ErrorHandler.instance = new ErrorHandler(properties);\n        }\n        return ErrorHandler.instance;\n    }\n\n    private constructor(properties: {\n        label?: string;\n        model?: SearchModel;\n        onErrorHandler?: (error: ESHUIError, options?: ErrorHandlingOptions) => void;\n    }) {\n        this.label = properties?.label;\n        this.searchModel = properties?.model;\n        this.externalOnErrorHandler = properties?.onErrorHandler;\n    }\n\n    /**\n     * Will call the default error handler. The default implementation will\n     * print error details to the console and shows an error message to the user.\n     * @param error instance of error which happened\n     * @returns void\n     */\n    public onError(error: ESHUIError, options?: ErrorHandlingOptions): void {\n        if (typeof this.externalOnErrorHandler === \"function\") {\n            try {\n                this.externalOnErrorHandler(error, options);\n            } catch (e) {\n                this.handleError(e, options);\n            }\n        } else {\n            this.handleError(error, options);\n        }\n    }\n\n    /**\n     * Will call the default error handler and then returns a resolved promise which\n     * allows to continue with a registered .then() method.\n     * The default implementation will\n     * print error details to the console and shows an error message to the user.\n     * @param error instance of error which happened\n     * @returns Promise<true>\n     */\n    public onErrorAsync(error: ESHUIError, options?: ErrorHandlingOptions): Promise<true> {\n        this.onError(error, options);\n        return Promise.resolve(true);\n    }\n\n    private handleError(error: Error, options?: ErrorHandlingOptions): void {\n        // log error in console\n        this.logError(error);\n        // show error in UI (message popup)\n        this.showError(error, options);\n    }\n\n    public setSearchModel(model: SearchModel) {\n        this.searchModel = model;\n    }\n\n    public setExternalOnErrorHandler(\n        onErrorHandler: (error: ESHUIError, options?: ErrorHandlingOptions) => void\n    ) {\n        this.externalOnErrorHandler = onErrorHandler;\n    }\n\n    private getErrorTextGeneric(error): string {\n        // name\n        let logMessage = error.name;\n        // toString\n        logMessage += \" \" + error;\n        // stack\n        if (typeof error.stack !== \"undefined\") {\n            logMessage = \"\\n\" + error.stack;\n        }\n        // previous\n        if (error.previous instanceof Error) {\n            logMessage += `\\n--> Previous error was: ${this.getErrorText(error.previous)}`;\n        }\n        return logMessage;\n    }\n\n    private getErrorTextEsh(error: ESHUIError | SinaError): string {\n        // name\n        let logMessage = error.name;\n        // code\n        if (error instanceof ServerError) {\n            logMessage += \" code:\" + error.code;\n        }\n        // message\n        logMessage += \" \" + error.message;\n        // details\n        if (error?.details) {\n            logMessage += \"\\n\" + error.details;\n        }\n        // solution\n        if (error?.solution) {\n            logMessage += \"\\n\" + error.solution;\n        }\n        // stack\n        if (typeof error.stack !== \"undefined\") {\n            logMessage += \"\\n\" + error.stack;\n        }\n        // previous\n        if (error.previous instanceof Error) {\n            logMessage += `\\n--> Previous error was: ${this.getErrorText(error.previous)}`;\n        }\n        return logMessage;\n    }\n\n    private getErrorText(error: Error): string {\n        if (error instanceof SinaError || error instanceof ESHUIError) {\n            return this.getErrorTextEsh(error);\n        } else {\n            return this.getErrorTextGeneric(error);\n        }\n    }\n\n    private logError(error: Error): void {\n        // error to string\n        let logMessage = this.label ? this.label + \": \" : \"\";\n        logMessage += this.getErrorText(error) + \"\\n\";\n        // add debug info\n        if (this.searchModel && this.searchModel.sinaNext) {\n            logMessage += this.searchModel.sinaNext.getDebugInfo() + \"\\n\";\n        }\n        // write into log\n        this._oLogger.error(logMessage, \"ErrorHandler\");\n    }\n\n    private convertErrorToMessage(error: Error, options?: ErrorHandlingOptions): IUIMessage {\n        if (error instanceof ESHUIError || error instanceof SinaError) {\n            return this.convertErrorToMessageEsh(error, options);\n        } else {\n            return this.convertErrorToMessageGeneric(error);\n        }\n    }\n\n    private convertErrorToMessageGeneric(error: Error): IUIMessage {\n        let title, description;\n        switch (error.name) {\n            case \"TypeError\":\n                title = i18n.getText(\"error.TypeError.message\");\n                description = i18n.getText(\"error.TypeError.solution\");\n                break;\n            case \"URIError\":\n                title = i18n.getText(\"searchError\");\n                description = i18n.getText(\"error.URIError.solution\");\n                break;\n            default:\n                title = \"\" + error;\n                description = \"\";\n        }\n        return { title, description, type: MessageType.Error };\n    }\n\n    private convertErrorToMessageEsh(\n        error: ESHUIError | SinaError,\n        options?: ErrorHandlingOptions\n    ): IUIMessage {\n        // handle reload errors\n        if (\n            (error instanceof ServerError && error.code === ServerErrorCode.E300) ||\n            error instanceof DataSourceAttributeMetadataNotFoundError\n        ) {\n            this.showReloadPopup();\n            return null;\n        }\n\n        // type\n        let type = MessageType.Error;\n        if (options?.showMinorErrorsAsWarnings) {\n            switch (error.name) {\n                case \"ServerError\":\n                    switch ((error as ServerError).code) {\n                        case ServerErrorCode.E100: // The search result is incomplete because some search connectors are temporary not available.\n                            type = MessageType.Warning;\n                            break;\n                        case ServerErrorCode.E400: //\tDuplicate search result list items\n                            type = MessageType.Warning;\n                            break;\n                        case ServerErrorCode.E500: //\tAI/nlq service not available\n                            type = MessageType.Warning;\n                            break;\n                    }\n            }\n        }\n\n        // title\n        const title = error.message || i18n.getText(\"searchError\");\n\n        // description\n        const description = [];\n        if (error.details) {\n            description.push(error.details);\n        }\n        if (error.solution) {\n            description.push(error.solution);\n        }\n        let code = \"\";\n        if (error.name === \"ServerError\") {\n            code = \" \" + (error as ServerError).code;\n        }\n        description.push(\"(\" + error.name + code + \")\");\n\n        return { title: title, description: description.join(\"\\n\"), type: type };\n    }\n\n    private showReloadPopup() {\n        MessageBox.confirm(i18n.getText(\"searchModelChanged\"), {\n            onClose: (event) => {\n                if (event === \"OK\") {\n                    if (this.searchModel) {\n                        this.searchModel.resetDataSource(false);\n                        this.searchModel.resetAllFilterConditions(false);\n                        const reloadNavigationTarget =\n                            this.searchModel.createSearchNavigationTargetCurrentState();\n                        window.location.href = reloadNavigationTarget.targetUrl;\n                    }\n                    window.location.reload();\n                }\n            },\n            styleClass: \"sapUshellSearchMessageBox\", // selector for closePopovers\n        });\n    }\n\n    private showMessageBox(message: IUIMessage) {\n        const text = message.title + \"\\n\" + message.description;\n        const props = {\n            onClose: null,\n            initialFocus: null,\n            textDirection: TextDirection.Inherit,\n            styleClass: \"sapUshellSearchMessageBox\", // selector for closePopovers\n        };\n        switch (message.type) {\n            case MessageType.Information:\n                MessageBox.information(text, props);\n                break;\n            case MessageType.Warning:\n                MessageBox.warning(text, props);\n                break;\n            case MessageType.Error:\n                MessageBox.error(text, props);\n                break;\n            default:\n                MessageBox.error(text, props);\n                break;\n        }\n    }\n\n    private showError(error: Error, options?: ErrorHandlingOptions): void {\n        const message = this.convertErrorToMessage(error, options);\n        if (!message) {\n            return;\n        }\n        if (this.searchModel) {\n            // display in message popover\n            this.searchModel.pushUIMessage(message);\n        } else {\n            // display in raw message box\n            this.showMessageBox(message);\n        }\n    }\n}\n"],"mappings":"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","ignoreList":[]}