{"version":3,"file":"SearchModel-dbg.js","names":["sap","ui","define","__i18n","Log","__ErrorHandler","SearchHelper","JSONModel","SearchResultFormatter","sap_esh_search_ui_SearchTabStripsFormatter","SearchResultTableFormatter","SearchFacetsFormatter","BreadcrumbsFormatter","SuggestionHandler","SearchConfiguration","PersonalizationStorage","keyValueStoreFactory","EventLogger","SearchUrlParser","cFLPUtil","UserCategoryManager","errors","RecentlyUsedStorage","___sinaNexTS_sina_SinaConfiguration","sinaFactory","__SearchResultSetItemMemory","___FolderModeUtils","MessageType","___sinaNexTS_sina_HierarchyDisplayType","__UIEvents","__SearchShellHelperHorizonTheme","merge","assert","Device","EventBus","core","___BusyIndicator","___sinaNexTS_sina_Filter","___SinaConfigurator","___UrlUtils","___suggestions_SearchSuggestionFactory","__PublicSearchModel","___personalization_PersonalizationKeys","___eventlogging_TechnicalEvents","___SelectionMode","_interopRequireDefault","obj","__esModule","default","__ui5_require_async","path","Promise","resolve","reject","require","module","endsWith","Object","defineProperty","value","err","i18n","ErrorHandler","SearchTabStripsFormatter","SearchTermExceedsLimitsError","UrlParseError","AvailableProviders","SearchResultSetItemMemory","FolderModeResultViewTypeCalculator","HierarchyDisplayType","UIEvents","SearchShellHelperHorizonTheme","BusyIndicator","Filter","SinaConfigurator","renderUrlFromParameters","createSearchSuggestionForCurrentSearch","PublicSearchModel","PersonalizationKeys","TechnicalEventType","SelectionMode","SearchModel","extend","selectKey","_selectKey","key","_selectedKeys","deselectKey","_deselectKey","isKeySelected","_isKeySelected","resetKeyStore","_resetKeyStore","forgetMissingSelections","_forgetMissingSelections","items","keysInResults","Set","map","i","keys","forEach","has","constructor","_constructor","settings","JSONModel.prototype.constructor.call","searchTermHandlers","logger","getLogger","JSONModel.prototype.setProperty.call","oSettings","isShowMoreDialogModel","searchModel","errorHandler","getInstance","setSearchModel","config","configuration","setExternalOnErrorHandler","onErrorHandler","publicSearchModel","modelName","defaultModelName","internalSearchModel","searchResultSetItemMemory","setSizeLimit","_suggestionHandler","model","folderModeResultViewTypeCalculator","_performanceLoggerSearchMethods","_searchApplicationsRefuseOutdatedReq","refuseOutdatedRequests","searchApplications","bind","pageSize","appTopDefault","boTopDefault","filterChanged","busyIndicator","setProperty","resetTableData","allDataSource","appDataSource","success","filterDescription","_subscribers","searchUrlParser","_userCategoryManagerPromise","_tempDataSources","tableFormatter","undefined","initAsyncPromise","oFacetFormatter","initializationStatus","initAsync","catch","getInitializationStatus","_getInitializationStatus","e","error","_initAsync","setBusy","dummyDataSourceForLoadingPhase","label","getText","labelPlural","enabled","id","keyValueStore","create","personalizationStorage","isUshell","setPersonalizationStorageInstance","bRecentSearches","recentlyUsedStorage","_personalizationStorage","initFacetVisibility","sinaNext","createSina","createSearchNavigationTarget","createAllAndAppDataSource","calculateIsNlqActive","isMyFavoritesAvailable","userCategoryManager","sina","loggerProperties","eventConsumers","eventLogger","calculateDefaultDataSource","provider","searchBusinessObjects","setFacetVisibility","SystemConstructionFunction","ushell","addRemoteSystem","alias","platform","baseUrl","createFilter","loadDataSources","resetDataSource","resetAllFilterConditions","query","createSearchQuery","limitAjaxRequests","setMultiSelectFacets","_tabStripFormatter","_breadcrumbsFormatter","Formatter","dataSourceTree","tree","setSearchBoxTerm","searchTerm","exclusiveDataSource","setDataSourceById","dataSource","filterRootCondition","setFilterRootCondition","onError","Container","uShellVisualizationInstantiationService","getServiceAsync","FF_enableTCodes","TransactionsHandler","push","userEventSessionStart","type","SESSION_START","getSearchBoxTerm","dataSourceKey","getDataSource","top","getTop","filter","getFilterRootCondition","logTechnicalEvent","_createSina","createAsync","trials","window","location","href","indexOf","SAMPLE","ABAP_ODATA","INAV2","DUMMY","readCFlpConfiguration","sinaConfiguration","sinaConfigurator","configure","createByTrialAsync","hasErrors","getErrors","initBusinessObjSearch","_initBusinessObjSearch","_calculateDefaultDataSource","defaultDataSource","defaultSearchScopeApps","isFavActive","getCategory","_initFacetVisibility","facets","optimizeForValueHelp","facetsVisible","getItem","searchFacetPanelButtonState","facetVisibility","warning","isBusinessObjSearchConfigured","_isBusinessObjSearchConfigured","renderers","fiori2","componentData","debug","isBusinessObjSearchEnabled","_isBusinessObjSearchEnabled","getProperty","_setProperty","sPath","oValue","oContext","bAsyncUpdate","setPropertyInternal","_setPropertyInternal","bUpdatePublicModel","notifySubscribers","ESHResultViewTypeChanged","publish","shortenSearchTermByConfigLimit","None","showSelectionToggleButton","calculateResultList","_calculateCountText","getPath","startsWith","object","getObject","searchResultSetItem","setExpanded","setPropertyFromInternalModel","_shortenSearchTermByConfigLimit","searchTermLengthLimit","length","slice","count","countAsStr","formatInteger","text","getSearchCompositeControlInstanceByChildControl","_getSearchCompositeControlInstanceByChildControl","childControlInstance","hasStyleClass","getParent","getPersonalizationStorageInstance","_getPersonalizationStorageInstance","_setPersonalizationStorageInstance","_getSearchBoxTerm","_setSearchBoxTerm","fireQuery","searchTermTrimLeft","replace","calculateSearchButtonStatus","fireSearchQuery","getLastSearchTerm","_getLastSearchTerm","getSearchTerm","_setFacetVisibility","visibility","system","phone","setItem","getFacetVisibility","_getFacetVisibility","setResultviewSelectionVisibility","_setResultviewSelectionVisibility","getResultviewSelectionVisibility","_getResultviewSelectionVisibility","_getTop","setTop","_setTop","resetTop","Error","_resetTop","isAppCategory","isUserCategory","subDataSources","getOrderBy","_getOrderBy","setOrderBy","_setOrderBy","orderBy","updateSortableAttributesSelection","resetOrderBy","_resetOrderBy","_updateSortableAttributesSelection","sortableAttributes","selected","orderById","attributeId","isEqualOrderBy","_isEqualOrderBy","modelOrderBy","queryOrderBy","queryOrderByElement","sortOrder","order","SortOrder","Ascending","Descending","_isMyFavoritesAvailable","isAvailable","userDefinedDatasourcesMulti","_calculateIsNlqActive","nlqActiveInUserSettings","nlqActive","isNlqActive","aiNlq","capabilities","nlq","_isNlqActive","getDocumentTitle","_getDocumentTitle","dataSourceLabel","title","resetQuery","_resetQuery","hasher","reset","resetConditions","setSearchTerm","resetSearchResultItemMemory","_resetSearchResultItemMemory","_createAllAndAppDataSource","getAllDataSource","_createDataSource","DataSourceType","Category","getUserCategoryManager","_getUserCategoryManager","then","_loadDataSources","dataSources","getBusinessObjectDataSources","displayedDataSources","usage","appSearch","splice","favDataSource","searchScopeWithoutAll","filterDataSources","calculatePlaceholder","_resetDataSource","setDataSource","getDefaultDataSource","isAllCategory","_isAllCategory","ds","isOtherCategory","_isOtherCategory","UserCategory","_isAppCategory","_isUserCategory","isBusinessObject","_isBusinessObject","BusinessObject","isUserCategoryAppSearchOnlyWithoutBOs","_isUserCategoryAppSearchOnlyWithoutBOs","_getDataSource","_getDefaultDataSource","_setDataSourceById","dataSourceId","_setDataSource","userEventDatasourceChange","DATASOURCE_CHANGE","dataSourceKeyOld","updateDataSourceList","notifyFilterChanged","_notifyFilterChanged","binding","checkUpdate","_getFilterRootCondition","rootCondition","_setFilterRootCondition","index","conditions","complexChildCondition","simpleGrandChildCondition","setRootCondition","addFilterCondition","_addFilterCondition","filterCondition","uiFilter","adjustFilters","attribute","autoInsertCondition","removeFilterCondition","_removeFilterCondition","autoRemoveCondition","_resetAllFilterConditions","resetFilterByFilterConditions","_resetFilterByFilterConditions","staticHierarchyFilterConditions","getStaticHierarchyFilterConditions","nonFilterByCondition","setFilter","_setFilter","hasStaticHierarchyFacetFilterConditionOnly","_hasStaticHierarchyFacetFilterConditionOnly","_getStaticHierarchyFilterConditions","getAttributes","attributeMetadata","attributeMetadataMap","isHierarchy","hierarchyDisplayType","StaticHierarchyFacet","getAttributeConditions","doSuggestion","_doSuggestion","clone","abortSuggestions","_abortSuggestions","_fireSearchQuery","deserializationIn","doFireSearchQuery","_doFireSearchQuery","deserialization","equals","getCalculateFacetsFlag","calculateFacets","setNlq","oldFilter","newFilter","handleDataSourceChanged","invalidate","reloadOnUrlChange","resetResultSet","setSortOrder","assembleSortOrder","setCalculateFacets","ESHSearchStarted","updateSearchURLSilently","logSearchRequestAdvanced","method","performanceLogger","getUniqueId","enterMethod","name","isSearch","comments","all","normalSearch","calculateResultViewSwitchVisibility","format","resultSet","formatNodePaths","formatHierarchyAttribute","hierarchyNodePaths","isFolderMode","searchSuggestion","addItem","getFacets","leaveMethod","onErrorAsync","change","Date","now","facet","handleModelUpdate","finally","overwriteBrowserTitle","document","ESHSearchFinished","updateMultiSelectionSelected","ensureOneTimeDisplayForErrorMessages","_ensureOneTimeDisplayForErrorMessages","shownToUser","_assembleSortOrder","_getCalculateFacetsFlag","_appSearch","includeApps","oResult","totalResults","getElements","_searchApplications","skip","service","queryApplications","_normalSearch","getResultSetAsync","showMinorErrorsAsWarnings","dataSourceOfPreviousSearch","nlqResult","_afterSearchPrepareResultList","searchResultSet","formatter","newResults","formatSortAttributes","setTableData","restoreResultSetItemExpansion","newResult","dataSourcesHints","isDocumentConnector","loadCustomModulesProm","loadCustomModulesForDataSourcesAsync","thisPromise","params","setSearchInLabelIconBindings","oError","ConfigurationExitError","applicationComponent","item","totalCount","enableOrDisableMultiSelection","_restoreResultSetItemExpansion","expanded","getExpanded","_enableOrDisableMultiSelection","MultipleItems","includes","resultviewSelectionMode","enableMultiSelectionResultItems","dataSourceConfig","getDataSourceConfig","selectionHandler","searchResultListSelectionHandlerControl","isMultiSelectionAvailable","_updateMultiSelectionSelected","results","getResultViewType","multiSelectionObjects","ESHSelectionChanged","_calculatePlaceholder","bPlaceHolderFixedValue","getSearchInputPlaceholderLabel","_updateDataSourceList","newDataSource","removeTempDataSources","unshift","_removeTempDataSources","tempDataSource","tempDataSources","internalError","ProgramError","invalidateQuery","_invalidateQuery","_logSearchRequestAdvanced","event","SEARCH_REQUEST","SEARCH_WITH_SEARCHTERM_FILTERS","SEARCH_WITH_FILTERS","SEARCH_WITHOUT_SEARCHTERM_FILTERS","SEARCH_WITH_SEARCHTERM","autoStartApp","_autoStartApp","aApps","url","tooltip","toLowerCase","trim","open","isHomogenousResult","_isHomogenousResult","getResultViewTypes","_getResultViewTypes","setResultViewTypes","_setResultViewTypes","types","_getResultViewType","setResultViewType","_setResultViewType","resultViewTypeForAllAndCategorySearch","resultViewTypeForBusinessObjectSearch","_calculateResultViewSwitchVisibility","validateResultViewSettings","resultViewTypes","resultViewType","activeTypes","activeType","fallbackResultViewType","calculate","_validateResultViewSettings","validateConfig","typeSuperset","errorBegin","errorEnding","Array","isArray","uniqueList","elem","toString","isSubsetOf","_calculateSearchButtonStatus","isSearchFieldExpandedByDefault","_calculateResultList","boResults","tiles","tilesItem","pushUIMessage","_pushUIMessage","finalErrors","removeAdjacentDuplicateMessages","_removeAdjacentDuplicateMessages","previousError","description","_updateSearchURLSilently","updateUrl","sHash","createSearchNavigationTargetCurrentState","targetUrl","setHash","parseURL","_parseURL","parse","subscribe","_subscribe","eventId","callback","listener","assertInternalEvents","unsubscribe","_unsubscribe","subscriber","_assertInternalEvents","callStack","stack","_notifySubscribers","apply","_createSearchNavigationTarget","parameter","searchNavigationTargetParameters","encodeFilter","createNavigationTarget","target","targetFunction","targetFunctionCustomData","_createSearchNavigationTargetCurrentState","options","parseSearchNavigationTarget","_parseSearchNavigationTarget","searchNavigationTarget","searchQueryParameters","urlParameters","parseUrlParameters","isEmptyObject","parseSearchUrlParameters","parseInt","orderby","sortorder","filterJson","JSON","parseFilterFromJson","getTableColumns","_getTableColumns","isStorage","fetchTableColumns","_fetchTableColumns","storageId","searchResultTableState","persoState","isTablePersoStateValid","aColumns","_isTablePersoStateValid","_persoSchemaVersion","column","p13NColumnName","setTableColumns","_setTableColumns","columns","saveTableColumns","_saveTableColumns","getTableInitialColumns","_getTableInitialColumns","formatInitialColumns","_setTableData","formattedResults","formatColumns","rows","formatRows","cells","_resetTableData","_searchModels","getModelSingleton","modelId"],"sources":["SearchModel.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\nimport i18n from \"./i18n\";\nimport Log from \"sap/base/Log\";\nimport ErrorHandler, { IUIMessage } from \"./error/ErrorHandler\";\nimport * as SearchHelper from \"sap/esh/search/ui/SearchHelper\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\nimport SearchResultFormatter, { FormattedResultItem } from \"sap/esh/search/ui/SearchResultFormatter\";\nimport {\n    Formatter as SearchTabStripsFormatter,\n    Tree as SearchTabStripsTree,\n} from \"sap/esh/search/ui/SearchTabStripsFormatter\";\nimport { SortAttribute } from \"sap/esh/search/ui/SearchResultBaseFormatter\";\nimport SearchResultTableFormatter, { Column } from \"sap/esh/search/ui/SearchResultTableFormatter\";\nimport SearchFacetsFormatter from \"sap/esh/search/ui/SearchFacetsFormatter\";\nimport * as BreadcrumbsFormatter from \"sap/esh/search/ui/BreadcrumbsFormatter\";\nimport SuggestionHandler from \"sap/esh/search/ui/suggestions/SuggestionHandler\";\nimport SearchConfiguration from \"sap/esh/search/ui/SearchConfiguration\";\nimport PersonalizationStorage from \"sap/esh/search/ui/personalization/PersonalizationStorage\";\nimport keyValueStoreFactory from \"sap/esh/search/ui/personalization/keyValueStoreFactory\";\nimport EventLogger from \"sap/esh/search/ui/eventlogging/EventLogger\";\nimport SearchUrlParser from \"sap/esh/search/ui/SearchUrlParser\";\nimport * as cFLPUtil from \"sap/esh/search/ui/cFLPUtil\";\nimport UserCategoryManager from \"sap/esh/search/ui/usercategories/UserCategoryManager\";\nimport errors, { SearchTermExceedsLimitsError, UrlParseError } from \"sap/esh/search/ui/error/errors\";\nimport RecentlyUsedStorage from \"sap/esh/search/ui/RecentlyUsedStorage\";\nimport { DataSource } from \"./sinaNexTS/sina/DataSource\";\nimport { SearchResultSet } from \"./sinaNexTS/sina/SearchResultSet\";\nimport { Sina } from \"./sinaNexTS/sina/Sina\";\nimport { SearchQuery } from \"./sinaNexTS/sina/SearchQuery\";\nimport { ComplexCondition } from \"./sinaNexTS/sina/ComplexCondition\";\nimport { QuerySortOrder } from \"./sinaNexTS/sina/Query\";\nimport { SearchFocusHandler } from \"sap/esh/search/ui/SearchHelper\";\nimport { ISearchTermHandler } from \"./searchtermhandler/ISearchTermHandler\";\nimport Context from \"sap/ui/model/Context\";\nimport { AvailableProviders, SinaConfiguration } from \"./sinaNexTS/sina/SinaConfiguration\";\nimport * as sinaFactory from \"./sinaNexTS/sina/sinaFactory\";\nimport SearchResultSetItemMemory from \"./SearchResultItemMemory\";\nimport { FolderModeResultViewTypeCalculator } from \"./FolderModeUtils\";\nimport MessageType from \"sap/ui/core/message/MessageType\";\nimport { HierarchyDisplayType } from \"./sinaNexTS/sina/HierarchyDisplayType\";\nimport { Condition } from \"./sinaNexTS/sina/Condition\";\nimport UIEvents from \"./UIEvents\";\nimport SearchShellHelperHorizonTheme from \"./SearchShellHelperHorizonTheme\";\nimport SearchConfigurationSettings from \"./SearchConfigurationSettings\";\nimport { PersoState } from \"./SearchResultTableP13NPersonalizer\";\nimport merge from \"sap/base/util/merge\";\nimport assert from \"sap/base/assert\";\nimport Device from \"sap/ui/Device\";\nimport EventBus from \"sap/ui/core/EventBus\";\nimport * as core from \"./sinaNexTS/core/core\";\n\ninterface EventSubscriber {\n    eventId: string;\n    callback: (eventId: string) => void;\n    listener: unknown;\n}\nimport { UserCategoryDataSource } from \"./sinaNexTS/sina/UserCategoryDataSource\";\nimport { OrderBy, SearchNavigationTargetParameters, SearchQueryParameters } from \"./SearchModelTypes\";\nimport SearchCompositeControl from \"./SearchCompositeControl\";\nimport Control from \"sap/ui/core/Control\";\nimport { BusyIndicator } from \"./BusyIndicator\";\nimport { Filter } from \"./sinaNexTS/sina/Filter\";\nimport type Container from \"sap/ushell/Container\";\nimport System from \"sap/ushell/System\";\nimport { NavigationTarget } from \"./sinaNexTS/sina/NavigationTarget\";\nimport { SinaConfigurator } from \"./SinaConfigurator\";\nimport { renderUrlFromParameters } from \"./UrlUtils\";\nimport { createSearchSuggestionForCurrentSearch } from \"./suggestions/SearchSuggestionFactory\";\nimport PublicSearchModel from \"./PublicSearchModel\";\nimport { PersonalizationKeys } from \"./personalization/PersonalizationKeys\";\nimport { SortOrder } from \"./sinaNexTS/sina/SortOrder\";\nimport { FLPAppSuggestion } from \"./suggestions/AppSuggestionProvider\";\nimport {\n    DataSourceChangeEvent,\n    SearchRequestEvent,\n    SessionStartEvent,\n    TechnicalEventType,\n} from \"./eventlogging/TechnicalEvents\";\nimport { SelectionMode } from \"./SelectionMode\";\n\nexport interface $SearchModelSettings {\n    configuration: Partial<SearchConfigurationSettings> | SearchConfiguration;\n    searchModel: SearchModel;\n}\n\n/**\n * @namespace sap.esh.search.ui\n */\nexport default class SearchModel extends JSONModel {\n    config: SearchConfiguration;\n    sinaNext?: Sina;\n    publicSearchModel: PublicSearchModel;\n    pageSize: number;\n    boTopDefault: number;\n    appTopDefault: number;\n    allDataSource: DataSource;\n    appDataSource: DataSource;\n    favDataSource: UserCategoryDataSource;\n    oFacetFormatter: SearchFacetsFormatter;\n    searchUrlParser: SearchUrlParser;\n    uShellVisualizationInstantiationService: any;\n    dataSourceTree: SearchTabStripsTree;\n    query: SearchQuery;\n    focusHandler: SearchFocusHandler;\n    recentlyUsedStorage: RecentlyUsedStorage;\n    eventLogger: EventLogger;\n    filterChanged: boolean;\n    userCategoryManager: UserCategoryManager;\n\n    public searchTermHandlers: Array<ISearchTermHandler> = [];\n    public errorHandler: ErrorHandler;\n    private _suggestionHandler: SuggestionHandler;\n    private _performanceLoggerSearchMethods: Array<string>;\n    private _subscribers: Array<EventSubscriber>;\n    private _initBusinessObjSearchProm: Promise<void>;\n    private _personalizationStorage: PersonalizationStorage;\n    private _userCategoryManagerPromise: Promise<UserCategoryManager>;\n    private _tabStripFormatter: SearchTabStripsFormatter;\n    private _breadcrumbsFormatter: BreadcrumbsFormatter.Formatter;\n    private resultSet: SearchResultSet;\n    private _tempDataSources: Array<DataSource>;\n    public tableFormatter: SearchResultTableFormatter;\n    private _searchApplicationsRefuseOutdatedReq: typeof this.searchApplications;\n    private static _searchModels: { [key: string]: SearchModel } = {};\n    private initAsyncPromise: Promise<void>;\n    private logger = Log.getLogger(\"sap.esh.search.ui.SearchModel\");\n    private searchResultSetItemMemory: SearchResultSetItemMemory;\n    private folderModeResultViewTypeCalculator: FolderModeResultViewTypeCalculator;\n    public busyIndicator: BusyIndicator;\n    public dataSourceOfPreviousSearch: DataSource;\n    private initializationStatus: Promise<void>;\n    private _selectedKeys: { [key: string]: boolean } = {};\n\n    private selectKey(key: string): void {\n        this._selectedKeys[key] = true;\n    }\n\n    private deselectKey(key: string): void {\n        delete this._selectedKeys[key];\n    }\n\n    private isKeySelected(key: string): boolean {\n        return !!this._selectedKeys[key];\n    }\n\n    public resetKeyStore(): void {\n        this._selectedKeys = {};\n    }\n\n    private forgetMissingSelections(items: Array<FormattedResultItem>): void {\n        const keysInResults = new Set(items.map((i) => i.key));\n        // Remove any remembered selection whose key is not in the current results\n        Object.keys(this._selectedKeys).forEach((key) => {\n            if (!keysInResults.has(key)) {\n                delete this._selectedKeys[key];\n            }\n        });\n    }\n\n    public static getModelSingleton(configuration: Partial<SearchConfigurationSettings>, id: string) {\n        const modelId = id || \"default\";\n        if (!SearchModel._searchModels[modelId]) {\n            configuration.isUshell = modelId === \"flp\" ? true : false;\n            SearchModel._searchModels[modelId] = new SearchModel({\n                configuration: configuration,\n            });\n        }\n        return SearchModel._searchModels[modelId];\n    }\n\n    constructor(settings: Partial<$SearchModelSettings>) {\n        super([]);\n\n        super.setProperty(\"/errors\", []);\n        const oSettings = settings || {};\n        const isShowMoreDialogModel = !!oSettings.searchModel; // show more dialog creates own search model instance\n\n        // pass searchmodel to error handler\n        this.errorHandler = ErrorHandler.getInstance();\n        if (!isShowMoreDialogModel) {\n            this.errorHandler.setSearchModel(this);\n        }\n\n        // get search configuration\n        this.config = new SearchConfiguration(oSettings?.configuration);\n\n        // pass custom error handler to error handler\n        if (!isShowMoreDialogModel) {\n            this.errorHandler.setExternalOnErrorHandler(this.config.onErrorHandler);\n        }\n\n        // public search model\n        this.publicSearchModel = new PublicSearchModel({\n            modelName: PublicSearchModel.defaultModelName,\n            internalSearchModel: this,\n        });\n        // memory for result set items storing for instance expansion state of item\n        this.searchResultSetItemMemory = new SearchResultSetItemMemory();\n\n        // set size limit in order to allow drop down list boxes with more than 100 entries\n        this.setSizeLimit(1000);\n\n        // create suggestions handler\n        this._suggestionHandler = new SuggestionHandler({\n            model: this,\n        });\n\n        // result view type calculator for folder mode\n        this.folderModeResultViewTypeCalculator = new FolderModeResultViewTypeCalculator(this);\n\n        this._performanceLoggerSearchMethods = []; // performance logging: Remember all method names of (open) search calls (only needed if search calls are running in parallel)\n\n        // decorate search methods (decorator prevents request overtaking)\n        this._searchApplicationsRefuseOutdatedReq = SearchHelper.refuseOutdatedRequests(\n            this.searchApplications.bind(this),\n            \"search\"\n        ); // app search\n\n        // initial values for boTop and appTop\n        this.pageSize = this.config.pageSize || 10;\n        this.appTopDefault = 20;\n        this.boTopDefault = this.pageSize;\n\n        this.filterChanged = false;\n\n        // init busy indicator\n        this.busyIndicator = new BusyIndicator(this);\n\n        // init the properties\n        // TODO: always use main result list (also for pure app results)\n\n        this.setProperty(\"/isQueryInvalidated\", true); // force request if query did not change\n        this.setProperty(\"/busyDelay\", 0); // delay before showing busy indicator, initalize with 0 for intial app loading\n        this.setProperty(\"/sortableAttributes\", []); // sort items of result\n        this.setProperty(\"/results\", []); // combined result list: apps + BOs\n        this.setProperty(\"/appResults\", []); // applications result list\n        this.setProperty(\"/boResults\", []); // business object result list\n        this.resetTableData();\n        this.setProperty(\"/breadcrumbsHierarchyNodePaths\", []);\n        this.setProperty(\"/breadcrumbsHierarchyAttribute\", \"\");\n        this.setProperty(\"/hierarchyNodePaths\", []);\n        this.setProperty(\"/isFolderMode\", false);\n        this.setProperty(\"/origBoResults\", []); // business object result list\n        this.setProperty(\"/count\", 0);\n        this.setProperty(\"/countText\", \"\");\n        this.setProperty(\"/boCount\", 0);\n        this.setProperty(\"/appCount\", 0);\n        this.setProperty(\"/facets\", []);\n        this.setProperty(\"/dataSources\", [this.allDataSource, this.appDataSource]);\n        this.setProperty(\"/appSearchDataSource\", null);\n        this.setProperty(\"/currentPersoServiceProvider\", null); // current persoServiceProvider of table\n        this.setProperty(\"/businessObjSearchEnabled\", true);\n        this.setProperty(\"/initializingObjSearch\", false);\n        this.setProperty(\"/suggestions\", []);\n        this.setProperty(\"/resultViewTypes\", []); // selectable result view types\n        this.setProperty(\"/resultViewType\", \"\"); // active result view type, default value set in calculateResultViewSwitchVisibility() in initBusinessObjSearch\n        this.setProperty(\"/resultViewSwitchVisibility\", false); // visibility of display switch tap strip\n        this.setProperty(\"/resultviewSelectionVisibility\", false); // visibility of selection (checkboxes)\n        this.setProperty(\"/documentTitle\", \"Search\");\n        this.setProperty(\"/top\", this.boTopDefault);\n        this.setProperty(\"/orderBy\", {});\n        this.setProperty(\"/facetVisibility\", false); // visibility of facet panel\n        this.setProperty(\"/focusIndex\", 0);\n        this.setProperty(\"/isErrorPopovered\", false);\n        this.setProperty(\"/nlqExplanation\", {});\n        this.setProperty(\"/nlqResult\", { success: false, filterDescription: \"\" });\n        this.setProperty(\"/firstSearchWasExecuted\", false);\n\n        this.setProperty(\"/multiSelectionAvailable\", false); //\n        this.setProperty(\"/multiSelectionEnabled\", false); //\n        this.setProperty(\"/multiSelection/actions\", []); //\n        this.setProperty(\"/multiSelectionSelected\", false);\n        this.setProperty(\"/multiSelectionObjects\", []);\n        this.setProperty(\"/singleSelectionSelected\", false);\n\n        this.setProperty(\"/inputHelpSelectedItems\", null);\n        this.setProperty(\"/inputHelp\", null);\n        this.setProperty(\"/config\", this.config);\n\n        this.setProperty(\"/searchInLabel\", \"\");\n        this.setProperty(\"/searchInIcon\", \"sap-icon://none\"); // prevent assert: Property 'src' (value: '') should be a valid Icon ...'\n\n        this.setProperty(\"/searchButtonStatus\", \"Search\");\n        this.setProperty(\"/isNlqActive\", false);\n\n        this._subscribers = [];\n\n        this.searchUrlParser = new SearchUrlParser({\n            model: this,\n        });\n        this._userCategoryManagerPromise = null;\n\n        this._tempDataSources = [];\n\n        this.tableFormatter = undefined;\n\n        // used for SearchFacetDialogModel: SearchFacetDialogModel is constructed with reference to original searchModel\n        // the _initBusinessObjSearchProm is reused from original searchModel in order to avoid double initialization\n        // in initBusinessObjSearch\n        if (oSettings?.searchModel?.initAsyncPromise) {\n            this.initAsyncPromise = oSettings.searchModel.initAsyncPromise;\n            this.oFacetFormatter = new SearchFacetsFormatter(this);\n        }\n\n        // Rest of the initialization is done asynchronously:\n        this.initializationStatus = this.initAsync();\n        this.initAsyncPromise = this.initializationStatus.catch(() => {\n            // ignore the error, it has already been written to browser console\n            // and staged in this.initializationStatus which can be queried by this.getInitializationStatus()\n            // we cannot use \"return Promise.reject(error) here, as we are in a constructor\"\n        });\n    }\n\n    // Get the status of initialization. In unsuccessful case, the corresponding error instance is returned either for error handling.\n    // published further in SearchCompositeControl as a public API\n    public async getInitializationStatus(): Promise<{\n        success: boolean;\n        error?: Error;\n    }> {\n        try {\n            await this.initializationStatus;\n            return { success: true };\n        } catch (e) {\n            return { success: false, error: e };\n        }\n    }\n    // ################################################################################\n    // Initialization:\n    // ################################################################################\n\n    async initAsync(): Promise<void> {\n        // check cached promise\n        if (this.initAsyncPromise) {\n            return this.initAsyncPromise;\n        }\n\n        // set dummy datasource indicating the loading phase\n        this.setProperty(\"/initializingObjSearch\", true);\n        this.busyIndicator.setBusy(true);\n        const dummyDataSourceForLoadingPhase = {\n            label: i18n.getText(\"genericLoading\"),\n            labelPlural: i18n.getText(\"genericLoading\"),\n            enabled: false,\n            id: \"$$Loading$$\",\n        };\n        this.setProperty(\"/dataSource\", dummyDataSourceForLoadingPhase);\n        this.setProperty(\"/dataSources\", [dummyDataSourceForLoadingPhase]);\n\n        try {\n            const keyValueStore = await keyValueStoreFactory.create(\n                this.config.personalizationStorage,\n                this.config.isUshell,\n                this.config.id\n            );\n            this.setPersonalizationStorageInstance(new PersonalizationStorage(keyValueStore, this));\n            if (this.config.bRecentSearches) {\n                this.recentlyUsedStorage = new RecentlyUsedStorage({\n                    personalizationStorage: this._personalizationStorage,\n                    searchModel: this,\n                });\n            }\n            this.initFacetVisibility();\n\n            // sina and datasources:\n            this.sinaNext = await this.createSina();\n\n            this.sinaNext.createSearchNavigationTarget = this.createSearchNavigationTarget.bind(this);\n            this.createAllAndAppDataSource();\n            this.calculateIsNlqActive();\n            // my favorites:\n            if (this.isMyFavoritesAvailable()) {\n                this.userCategoryManager = await UserCategoryManager.create({\n                    sina: this.sinaNext,\n                    personalizationStorage: this._personalizationStorage,\n                });\n            }\n\n            // usage tracking:\n            const loggerProperties = {\n                sinaNext: this.sinaNext,\n                searchModel: this,\n                eventConsumers: this.config.eventConsumers,\n            };\n            this.eventLogger = new EventLogger(loggerProperties);\n            await this.eventLogger.initAsync();\n\n            // set default DataSource\n            this.setProperty(\"/defaultDataSource\", this.calculateDefaultDataSource());\n\n            if (this.sinaNext.provider.id === \"dummy\") {\n                this.setProperty(\"/defaultDataSource\", this.appDataSource);\n                this.setProperty(\"/businessObjSearchEnabled\", false);\n                this.config.searchBusinessObjects = false;\n                this.setFacetVisibility(false, false);\n            }\n            if (this.sinaNext.provider.id === \"inav2\" && this.config.isUshell) {\n                // register enterprise search system\n                // this triggers a logoff request to the enteprise search backend in case of logoff from flp\n                // (this is not necessary for abap_odata because frontendserver system is registered by flp)\n                // load ushell deps lazy only in case of FLP\n                sap.ui.require([\"sap/ushell/System\"], (SystemConstructionFunction: typeof System) => {\n                    (sap.ushell[\"Container\"] as Container).addRemoteSystem(\n                        new SystemConstructionFunction({\n                            alias: \"ENTERPRISE_SEARCH\",\n                            platform: \"abap\",\n                            baseUrl: \"/ENTERPRISE_SEARCH\",\n                        })\n                    );\n                });\n            }\n            this.setProperty(\"/uiFilter\", this.sinaNext.createFilter());\n            this.loadDataSources();\n            this.resetDataSource(false);\n            this.resetAllFilterConditions(false);\n            this.query = this.sinaNext.createSearchQuery({\n                limitAjaxRequests: this.config.limitAjaxRequests,\n            });\n            this.query.setMultiSelectFacets(true);\n            this.oFacetFormatter = new SearchFacetsFormatter(this);\n            this._tabStripFormatter = new SearchTabStripsFormatter(this.allDataSource, this);\n            this._breadcrumbsFormatter = new BreadcrumbsFormatter.Formatter(this);\n            this.dataSourceTree = this._tabStripFormatter.tree;\n            // set by the API of SearchCompositeControl\n            this.setSearchBoxTerm(this.config.searchTerm, false);\n            if (this.config.exclusiveDataSource) {\n                this.setDataSourceById(this.config.exclusiveDataSource, false, false);\n            } else if (this.config.dataSource) {\n                this.setDataSourceById(this.config.dataSource, false, false);\n            }\n            if (this.config.filterRootCondition) {\n                this.setFilterRootCondition(this.config.filterRootCondition, false);\n            }\n\n            this.setProperty(\"/initializingObjSearch\", false);\n            this.busyIndicator.setBusy(false);\n\n            try {\n                await this.config.initAsync(this);\n            } catch (e) {\n                this.errorHandler.onError(e);\n            }\n\n            if (this.config.isUshell) {\n                const { default: Container } = await import(\"sap/ushell/Container\");\n                this.uShellVisualizationInstantiationService = await Container.getServiceAsync(\n                    \"VisualizationInstantiation\"\n                );\n            }\n            if (this.config.isUshell && this.config.FF_enableTCodes) {\n                // handle tcodes in search input only in ushell and if FF_enableTCodes is true:\n                const { default: TransactionsHandler } = await import(\n                    \"sap/esh/search/ui/searchtermhandler/TransactionsHandler\"\n                );\n                this.searchTermHandlers.push(new TransactionsHandler(this));\n            }\n        } catch (error: unknown) {\n            this.errorHandler.onError(<Error>error);\n            return Promise.reject(error);\n        } finally {\n            this.busyIndicator.setBusy(false);\n        }\n        const userEventSessionStart: SessionStartEvent = {\n            type: TechnicalEventType.SESSION_START,\n            searchTerm: this.getSearchBoxTerm(),\n            dataSourceKey: this.getDataSource().id,\n            top: this.getTop(),\n            filter: this.getFilterRootCondition() + \"\",\n        };\n        this.eventLogger.logTechnicalEvent(userEventSessionStart);\n        return Promise.resolve();\n    }\n\n    private async createSina(): Promise<Sina> {\n        // no enterprise search configured -> return dummy sina\n        if (!this.config.searchBusinessObjects) {\n            return sinaFactory.createAsync(\"dummy\");\n        }\n        // use url parameter\n        // sinaConfiguration={\"provider\":\"multi\",\"subProviders\":[\"abap_odata\",\"inav2\",\"sample\"],\"federationType\":\"round_robin\"}\n        // to active the multi provider\n        let trials: Array<SinaConfiguration | AvailableProviders> = [];\n        if (window.location.href.indexOf(\"demo/FioriLaunchpad.\") !== -1) {\n            trials = [AvailableProviders.SAMPLE];\n        } else {\n            trials = [\n                // {provider: 'multi', subProviders: ['abap_odata', 'inav2', 'sample'], federationType: 'round_robin'},\n                // {provider: \"multi\", subProviders: [{ provider: \"abap_odata\", label: \"a1\", url: \"/unvalid\" }, { provider: \"abap_odata\", label: \"a2\", url: \"/unvalid\" }]},\n                AvailableProviders.ABAP_ODATA,\n                AvailableProviders.INAV2,\n                AvailableProviders.DUMMY,\n            ];\n        }\n\n        // cFlp\n        trials = await cFLPUtil.readCFlpConfiguration(trials);\n\n        // sina configuration from flp overwrites\n        if (this.config.sinaConfiguration) {\n            trials = [this.config.sinaConfiguration];\n        }\n\n        // enhance sina configuration by logging, tracking, ...\n        const sinaConfigurator = new SinaConfigurator(this);\n        trials = sinaConfigurator.configure(trials);\n\n        // try to create a sina by trying providers, first succesful provider wins\n        const sina = await sinaFactory.createByTrialAsync(trials);\n        if (sina.hasErrors()) {\n            sina.getErrors().forEach((error) => this.errorHandler.onError(error));\n        }\n        return sina;\n    }\n\n    /**\n     *\n     * @deprecated use initAsync() instead\n     */\n    async initBusinessObjSearch(): Promise<void> {\n        return this.initAsync();\n    }\n\n    calculateDefaultDataSource(): DataSource {\n        let defaultDataSource = this.allDataSource;\n\n        if (this.config.defaultSearchScopeApps) {\n            // according config parameter, Apps as default\n            defaultDataSource = this.appDataSource;\n        }\n        if (this.config.defaultDataSource) {\n            // according config parameter, default dataSource id\n            defaultDataSource = this.sinaNext.getDataSource(this.config.defaultDataSource);\n        }\n        if (this.config.exclusiveDataSource) {\n            // according config parameter, exclusive dataSource id (the one and only DS used for this Search.Comp. control instance)\n            defaultDataSource = this.sinaNext.getDataSource(this.config.exclusiveDataSource);\n        }\n        if (this.userCategoryManager && this.userCategoryManager.isFavActive()) {\n            // set user definded dataSource as default\n            defaultDataSource = this.userCategoryManager.getCategory(\"MyFavorites\");\n        }\n        return defaultDataSource;\n    }\n\n    initFacetVisibility(): void {\n        // If facet functionality is turned off or \"optimizeForValueHelp\" is enabled, hide immediately.\n        if (!this.config.facets || this.config.optimizeForValueHelp) {\n            this.setFacetVisibility(false, false);\n            return;\n        }\n\n        // Otherwise, fall back to personalization\n        let facetsVisible: boolean;\n        try {\n            facetsVisible =\n                (this._personalizationStorage.getItem(\n                    PersonalizationKeys.searchFacetPanelButtonState\n                ) as boolean) ??\n                this.config.facetVisibility ??\n                false;\n        } catch (e) {\n            this.logger.warning(\"Error reading facet visibility from personalization storage\", e);\n        }\n        this.setFacetVisibility(facetsVisible, false);\n    }\n\n    // ################################################################################\n    // Get the state of things:\n    // ################################################################################\n    isBusinessObjSearchConfigured(): boolean {\n        try {\n            const config = window[\"sap-ushell-config\"].renderers.fiori2.componentData.config;\n            return config.searchBusinessObjects !== \"hidden\";\n        } catch (e) {\n            this.logger.debug(\"Error reading searchBusinessObjects from ushell config\", e);\n            return true;\n        }\n    }\n\n    isBusinessObjSearchEnabled(): boolean {\n        // TODO: how does this differ from isBusinessObjSearchConfigured() above?\n        return this.getProperty(\"/businessObjSearchEnabled\");\n    }\n\n    // ################################################################################\n    // Getter/Setter:\n    // ################################################################################\n    setProperty(sPath: string, oValue: unknown, oContext?: Context, bAsyncUpdate?: boolean): boolean {\n        return this.setPropertyInternal(sPath, oValue, oContext, bAsyncUpdate, true);\n    }\n\n    setPropertyInternal(\n        sPath: string,\n        oValue: unknown,\n        oContext?: Context,\n        bAsyncUpdate?: boolean,\n        bUpdatePublicModel = true\n    ): boolean {\n        try {\n            if (sPath === \"/resultViewType\") {\n                // run before updating '/resultViewType'\n                if (\n                    this.getProperty(\"/resultViewType\") !== \"\" &&\n                    oValue !== \"\" &&\n                    this.getProperty(\"/resultViewType\") !== oValue\n                ) {\n                    // notify subscribers\n                    this.notifySubscribers(UIEvents.ESHResultViewTypeChanged);\n                    EventBus.getInstance().publish(UIEvents.ESHResultViewTypeChanged);\n                }\n            }\n\n            if (sPath === \"/uiFilter/searchTerm\") {\n                oValue = this.shortenSearchTermByConfigLimit(oValue as string);\n            }\n\n            if (sPath === \"/resultviewSelectionVisibility\") {\n                if (\n                    oValue === false &&\n                    this.getProperty(\"/config/resultviewSelectionMode\") !== SelectionMode.None &&\n                    this.config.showSelectionToggleButton === false\n                ) {\n                    oValue = true;\n                }\n            }\n\n            let success = super.setProperty(sPath, oValue, oContext, bAsyncUpdate);\n            switch (sPath) {\n                case \"/boResults\":\n                case \"/appResults\":\n                    this.calculateResultList();\n                    break;\n                case \"/appCount\":\n                case \"/boCount\":\n                    success = this.setProperty(\n                        \"/count\",\n                        this.getProperty(\"/appCount\") + this.getProperty(\"/boCount\")\n                    );\n                    break;\n                case \"/count\":\n                    success = this.setProperty(\"/countText\", this._calculateCountText());\n                    break;\n                case \"expanded\":\n                    if (oContext && oContext.getPath().startsWith(\"/results/\")) {\n                        const object = oContext.getObject();\n                        if (\"key\" in object && object.key && typeof oValue === \"boolean\") {\n                            const searchResultSetItem = object as FormattedResultItem;\n                            this.searchResultSetItemMemory.setExpanded(searchResultSetItem.key, oValue);\n                        }\n                    }\n                    break;\n            }\n            if (bUpdatePublicModel) {\n                // update public search model (see PublicSearchModel), non public properties are skipped (w/o error/warning)\n                this.publicSearchModel?.setPropertyFromInternalModel(\n                    this,\n                    sPath,\n                    oValue,\n                    oContext,\n                    bAsyncUpdate\n                );\n            }\n            return success;\n        } catch (error) {\n            this.errorHandler.onError(error);\n        }\n    }\n\n    private shortenSearchTermByConfigLimit(searchTerm: string): string {\n        const searchTermLengthLimit = this.config.searchTermLengthLimit;\n        if (searchTermLengthLimit < 0) {\n            return searchTerm;\n        }\n        if (searchTerm.length > searchTermLengthLimit) {\n            this.errorHandler.onError(new SearchTermExceedsLimitsError(searchTermLengthLimit));\n            searchTerm = searchTerm.slice(0, searchTermLengthLimit);\n        }\n        return searchTerm;\n    }\n\n    private _calculateCountText() {\n        const count = this.getProperty(\"/count\");\n\n        if (typeof count !== \"number\") {\n            return \"\"; // robustness\n        }\n\n        const countAsStr = SearchHelper.formatInteger(count);\n\n        // DSP exit\n        if (this.getProperty(\"/searchInLabel\")) {\n            return (this.getProperty(\"/searchInLabel\") || i18n.getText(\"results\")) + \" (\" + countAsStr + \")\";\n        }\n\n        const text = i18n.getText(\"results\") + \" (\" + countAsStr + \")\"; // ToDo: RTL\n        return text;\n    }\n\n    public getSearchCompositeControlInstanceByChildControl(\n        childControlInstance: Control\n    ): SearchCompositeControl {\n        if (\n            typeof childControlInstance?.hasStyleClass === \"function\" &&\n            childControlInstance.hasStyleClass(\"sapUshellSearchInputHelpPage\")\n        ) {\n            return childControlInstance as SearchCompositeControl;\n        } else if (typeof childControlInstance?.getParent === \"function\") {\n            return this.getSearchCompositeControlInstanceByChildControl(\n                childControlInstance.getParent() as Control\n            );\n        }\n        return undefined;\n    }\n\n    getPersonalizationStorageInstance() {\n        return this._personalizationStorage;\n    }\n\n    setPersonalizationStorageInstance(personalizationStorage: PersonalizationStorage) {\n        this._personalizationStorage = personalizationStorage;\n    }\n\n    // TODO: move to datasource\n    getSearchBoxTerm(): string {\n        return this.getProperty(\"/uiFilter/searchTerm\") || \"\";\n    }\n\n    setSearchBoxTerm(searchTerm: string, fireQuery?: boolean): void {\n        searchTerm = searchTerm || \"\";\n        const searchTermTrimLeft = searchTerm.replace(/^\\s+/, \"\"); // TODO: rtl\n        this.setProperty(\"/uiFilter/searchTerm\", searchTermTrimLeft);\n        this.calculateSearchButtonStatus();\n        if (fireQuery || typeof fireQuery === \"undefined\") {\n            this.fireSearchQuery();\n        }\n    }\n\n    getLastSearchTerm(): string {\n        return this.query.getSearchTerm();\n    }\n\n    setFacetVisibility(visibility: boolean, fireQuery?: boolean): void {\n        if (Device.system.phone) {\n            visibility = false;\n        }\n\n        // set new value\n        this.setProperty(\"/facetVisibility\", visibility);\n\n        // set button status in sap storage\n        try {\n            this._personalizationStorage.setItem(PersonalizationKeys.searchFacetPanelButtonState, visibility);\n        } catch (e) {\n            this.logger.warning(\"Error writing facet visibility to personalization storage\", e);\n        }\n\n        if (fireQuery || typeof fireQuery === \"undefined\") {\n            this.fireSearchQuery();\n        }\n    }\n\n    getFacetVisibility(): boolean {\n        return this.getProperty(\"/facetVisibility\");\n    }\n\n    setResultviewSelectionVisibility(visibility: boolean): void {\n        this.setProperty(\"/resultviewSelectionVisibility\", visibility);\n    }\n\n    getResultviewSelectionVisibility(): boolean {\n        return this.getProperty(\"/resultviewSelectionVisibility\");\n    }\n\n    getTop(): number {\n        return this.getProperty(\"/top\");\n    }\n\n    setTop(top: number, fireQuery?: boolean): void {\n        if (top < 0) {\n            this.resetTop();\n            this.errorHandler.onError(\n                new Error(\n                    `Could not set 'top' with value '${top}'.\\nWe will use default value '${this.getProperty(\n                        \"/top\"\n                    )}' instead.`\n                )\n            );\n        } else {\n            this.setProperty(\"/top\", top);\n        }\n        if (fireQuery || typeof fireQuery === \"undefined\") {\n            this.fireSearchQuery();\n        }\n    }\n\n    resetTop(): void {\n        this.setProperty(\"/focusIndex\", 0);\n        if (\n            this.isAppCategory() ||\n            (this.isUserCategory() &&\n                this.userCategoryManager &&\n                this.userCategoryManager.getCategory(\"MyFavorites\").subDataSources.length === 0)\n        ) {\n            this.setTop(this.appTopDefault, false);\n        } else {\n            this.setTop(this.boTopDefault, false);\n        }\n    }\n\n    getOrderBy(): OrderBy {\n        return this.getProperty(\"/orderBy\");\n    }\n\n    setOrderBy(orderBy: OrderBy, fireQuery?: boolean): void {\n        this.setProperty(\"/orderBy\", orderBy);\n        this.updateSortableAttributesSelection(orderBy.orderBy);\n        if (fireQuery || typeof fireQuery === \"undefined\") {\n            this.fireSearchQuery();\n        }\n    }\n\n    resetOrderBy(fireQuery?: boolean): void {\n        this.setProperty(\"/orderBy\", {});\n        this.updateSortableAttributesSelection();\n        if (fireQuery || typeof fireQuery === \"undefined\") {\n            this.fireSearchQuery();\n        }\n    }\n\n    updateSortableAttributesSelection(orderBy?: string): void {\n        const sortableAttributes = this.getProperty(\"/sortableAttributes\");\n        if (sortableAttributes.length === 0) {\n            return;\n        }\n        // unselect all attributes\n        for (let i = 0; i < sortableAttributes.length; i++) {\n            sortableAttributes[i].selected = false;\n        }\n        // select one attribute\n        const orderById = orderBy === undefined ? \"DEFAULT_SORT_ATTRIBUTE\" : orderBy;\n        for (let i = 0; i < sortableAttributes.length; i++) {\n            if (sortableAttributes[i].attributeId === orderById) {\n                sortableAttributes[i].selected = true;\n            }\n        }\n        this.setProperty(\"/sortableAttributes\", sortableAttributes);\n    }\n\n    isEqualOrderBy(\n        modelOrderBy: { orderBy: string; sortOrder: \"DESC\" | \"ASC\" },\n        queryOrderBy: Array<QuerySortOrder>\n    ): boolean {\n        // 1) no sort order given\n        if (!modelOrderBy.orderBy) {\n            return queryOrderBy.length === 0;\n        }\n        // 2) sort order given\n        if (queryOrderBy.length !== 1) {\n            return false;\n        }\n        const queryOrderByElement = queryOrderBy[0];\n        if (queryOrderByElement.id !== modelOrderBy.orderBy) {\n            return false;\n        }\n        if (modelOrderBy.sortOrder === \"ASC\") {\n            return queryOrderByElement.order === this.sinaNext.SortOrder.Ascending;\n        }\n        return queryOrderByElement.order === this.sinaNext.SortOrder.Descending;\n    }\n\n    isMyFavoritesAvailable(): boolean {\n        let isAvailable = false;\n\n        if (this.sinaNext.provider.id === \"abap_odata\") {\n            isAvailable = true;\n        }\n        if (this.sinaNext.provider.id === \"multi\" && this.config.userDefinedDatasourcesMulti) {\n            isAvailable = true;\n        }\n        return isAvailable;\n    }\n\n    calculateIsNlqActive() {\n        const nlqActiveInUserSettings =\n            !this.config.isUshell ||\n            (this.getPersonalizationStorageInstance().getItem(PersonalizationKeys.nlqActive) as boolean); // only ushell has user settings\n        const isNlqActive =\n            this.config.aiNlq && // config setting\n            this.sinaNext.capabilities.nlq && // server capability\n            nlqActiveInUserSettings; // user setting\n        this.setProperty(\"/isNlqActive\", isNlqActive);\n    }\n\n    isNlqActive(): boolean {\n        return this.getProperty(\"/isNlqActive\");\n    }\n\n    getDocumentTitle(): string {\n        const searchTerm = this.getSearchBoxTerm();\n        const dataSourceLabel = this.getDataSource().labelPlural || this.getDataSource().label;\n        let title;\n        if (this.getDataSource() === this.allDataSource) {\n            title = i18n.getText(\"searchTileTitleProposalAll\", [searchTerm]);\n        } else {\n            title = i18n.getText(\"searchTileTitleProposal\", [searchTerm, dataSourceLabel]);\n        }\n        return title;\n    }\n\n    resetQuery(): void {\n        // This resets the UI search model but not sina.\n        // Deserializing a URL may NOT trigger a real ajax search request because also sina buffers the search results.\n        // This is used for for back navigation from an object page to the search UI without triggering a new search request.\n        if (this.getProperty(\"/initializingObjSearch\")) {\n            return;\n        }\n        SearchHelper.hasher.reset();\n        this.resetTop();\n        this.setSearchBoxTerm(\"\", false);\n        this.resetDataSource(false);\n        this.resetAllFilterConditions(false);\n        this.query.resetConditions();\n        this.query.setSearchTerm(\"random-jgfhfdskjghrtekjhg\");\n        this.setProperty(\"/facets\", []);\n        this.setProperty(\"/results\", []); // also resets public search model\n        this.setProperty(\"/appResults\", []);\n        this.setProperty(\"/boResults\", []);\n        this.setProperty(\"/breadcrumbsHierarchyNodePaths\", []);\n        this.setProperty(\"/breadcrumbsHierarchyAttribute\", \"\");\n        this.setProperty(\"/hierarchyNodePaths\", []);\n        this.setProperty(\"/isFolderMode\", false);\n        this.setProperty(\"/origBoResults\", []);\n        this.setProperty(\"/count\", 0);\n        this.setProperty(\"/boCount\", 0);\n        this.setProperty(\"/appCount\", 0);\n        this.setProperty(\"/nlqResult\", { success: false, filterDescription: \"\" });\n    }\n\n    resetSearchResultItemMemory() {\n        this.searchResultSetItemMemory.reset();\n    }\n\n    // ################################################################################\n    // Everything Datasource:\n    // ################################################################################\n\n    createAllAndAppDataSource(): void {\n        // all data source\n        this.allDataSource = this.sinaNext.getAllDataSource();\n        this.allDataSource.label = i18n.getText(\"label_all\");\n        this.allDataSource.labelPlural = i18n.getText(\"label_all\");\n\n        // app datasource\n        this.appDataSource = this.sinaNext._createDataSource({\n            id: \"$$APPS$$\",\n            label: i18n.getText(\"label_apps\"),\n            labelPlural: i18n.getText(\"label_apps\"),\n            type: this.sinaNext.DataSourceType.Category,\n        });\n        this.setProperty(\"/appSearchDataSource\", this.appDataSource);\n    }\n\n    async getUserCategoryManager(): Promise<UserCategoryManager> {\n        // caching\n        if (this._userCategoryManagerPromise) {\n            return this._userCategoryManagerPromise;\n        }\n        // create\n        this._userCategoryManagerPromise = this.initAsync().then(() => {\n            return this.userCategoryManager;\n        });\n        return this._userCategoryManagerPromise;\n    }\n\n    loadDataSources(): void {\n        // get all datasources from sina\n        let dataSources = this.sinaNext.getBusinessObjectDataSources();\n        dataSources = dataSources.slice();\n\n        // exclude app search datasource (here: app search datasource = connector with transactions)\n        let displayedDataSources = [];\n        dataSources.forEach(function (dataSource) {\n            if (!dataSource.usage.appSearch) {\n                displayedDataSources.push(dataSource);\n            }\n        });\n        // check \"Use Personalized Search Scope\" is active\n        if (this.userCategoryManager && this.userCategoryManager.isFavActive()) {\n            displayedDataSources.splice(0, 0, this.userCategoryManager.getCategory(\"MyFavorites\"));\n            this.favDataSource = this.userCategoryManager.getCategory(\"MyFavorites\");\n        }\n        // add app and all datasource\n        if (this.config.isUshell) {\n            displayedDataSources.splice(0, 0, this.appDataSource);\n        }\n        if (!this.config.searchScopeWithoutAll) {\n            displayedDataSources.splice(0, 0, this.allDataSource);\n        } else {\n            if (\n                !this.config.defaultDataSource &&\n                (!this.userCategoryManager ||\n                    (this.userCategoryManager && !this.userCategoryManager.isFavActive()))\n            ) {\n                // without all dataSource and no default dataSource, set the first item as default\n                this.setProperty(\"/defaultDataSource\", displayedDataSources[0]);\n            }\n        }\n        // exit for filtering datasources\n        try {\n            displayedDataSources = this.config.filterDataSources(displayedDataSources);\n        } catch (e) {\n            this.errorHandler.onError(e);\n        }\n        // set property\n        this.setProperty(\"/dataSources\", displayedDataSources);\n        this.setProperty(\"/searchTermPlaceholder\", this.calculatePlaceholder());\n    }\n\n    resetDataSource(fireQuery?: boolean): void {\n        this.setDataSource(this.getDefaultDataSource(), fireQuery);\n    }\n\n    isAllCategory(): boolean {\n        const ds = this.getProperty(\"/uiFilter/dataSource\");\n        return ds === this.allDataSource;\n    }\n\n    isOtherCategory(): boolean {\n        const ds = this.getProperty(\"/uiFilter/dataSource\");\n        return (\n            (ds.type === this.sinaNext.DataSourceType.Category ||\n                ds.type === this.sinaNext.DataSourceType.UserCategory) &&\n            !this.isAllCategory()\n        );\n    }\n\n    isAppCategory(): boolean {\n        const ds = this.getProperty(\"/uiFilter/dataSource\");\n        return ds === this.appDataSource;\n    }\n\n    isUserCategory(): boolean {\n        const ds = this.getProperty(\"/uiFilter/dataSource\");\n        return ds.type === this.sinaNext.DataSourceType.UserCategory;\n    }\n\n    isBusinessObject(): boolean {\n        return this.getProperty(\"/uiFilter/dataSource\").type === this.sinaNext.DataSourceType.BusinessObject;\n    }\n\n    isUserCategoryAppSearchOnlyWithoutBOs(): boolean {\n        return (\n            this.isUserCategory() &&\n            this.userCategoryManager &&\n            this.userCategoryManager.getCategory(\"MyFavorites\").subDataSources.length === 0\n        );\n    }\n\n    getDataSource(): DataSource {\n        return this.getProperty(\"/uiFilter/dataSource\");\n    }\n\n    getDefaultDataSource(): DataSource {\n        return this.getProperty(\"/defaultDataSource\");\n    }\n\n    /**\n     * @this sap.esh.search.ui.SearchModel\n     * @param {string} dataSourceId\n     * @param {boolean} [fireQuery]\n     * @param {boolean} [resetTop]\n     */\n    setDataSourceById(dataSourceId: string, fireQuery?: boolean, resetTop?: boolean): void {\n        const ds = this.sinaNext.getDataSource(dataSourceId);\n        if (ds && ds.id && ds.id === dataSourceId) {\n            this.setDataSource(ds, fireQuery, resetTop);\n            return;\n        }\n        throw new Error(\n            `Could not set data source with id ${dataSourceId} because it was not in the list of loaded data sources.`\n        );\n    }\n\n    setDataSource(dataSource: DataSource, fireQuery?: boolean, resetTop?: boolean): void {\n        if (this.getDataSource() !== dataSource) {\n            const userEventDatasourceChange: DataSourceChangeEvent = {\n                type: TechnicalEventType.DATASOURCE_CHANGE,\n                dataSourceKey: dataSource.id,\n                dataSourceKeyOld: this.getDataSource().id,\n            };\n            this.eventLogger.logTechnicalEvent(userEventDatasourceChange);\n        }\n\n        this.updateDataSourceList(dataSource);\n        this.getProperty(\"/uiFilter\").setDataSource(dataSource);\n\n        if (resetTop || resetTop === undefined) {\n            this.resetTop();\n        }\n\n        this.setProperty(\"/searchTermPlaceholder\", this.calculatePlaceholder());\n        this.calculateSearchButtonStatus();\n\n        if (fireQuery || fireQuery === undefined) {\n            this.fireSearchQuery();\n        }\n    }\n\n    // ################################################################################\n    // Filter conditions:\n    // ################################################################################\n    notifyFilterChanged(): void {\n        // notify ui about changed filter, data binding does not react on changes below\n        // conditions, so this is done manually\n        for (const binding of this[\"aBindings\"]) {\n            // ToDo\n            if (binding.sPath === \"/uiFilter/rootCondition\") {\n                binding.checkUpdate(true);\n            }\n        }\n    }\n\n    getFilterRootCondition(): ComplexCondition {\n        let rootCondition;\n        if (this.getProperty(\"/uiFilter\")) {\n            rootCondition = this.getProperty(\"/uiFilter\").rootCondition;\n        }\n        return rootCondition;\n    }\n\n    setFilterRootCondition(rootCondition: ComplexCondition, fireQuery?: boolean): void {\n        if (rootCondition.type !== \"Complex\") {\n            throw new Error(\"filter root condition must be of type ComplexCondition\");\n        }\n        for (let index = 0; index < rootCondition.conditions.length; index++) {\n            const complexChildCondition = rootCondition.conditions[index] as ComplexCondition;\n            if (complexChildCondition.type !== \"Complex\") {\n                throw new Error(\"filters of root condition must be of type ComplexCondition\");\n            }\n            for (let index = 0; index < complexChildCondition.conditions.length; index++) {\n                const simpleGrandChildCondition = complexChildCondition.conditions[index];\n                if (simpleGrandChildCondition.type !== \"Simple\") {\n                    throw new Error(\"filters of the lowest level must be of type SimpleCondition\");\n                }\n            }\n        }\n        this.getProperty(\"/uiFilter\").setRootCondition(rootCondition);\n        if (fireQuery || typeof fireQuery === \"undefined\") {\n            this.fireSearchQuery();\n        }\n\n        this.notifyFilterChanged();\n    }\n\n    addFilterCondition(filterCondition, fireQuery?: boolean): void {\n        try {\n            const uiFilter = this.getProperty(\"/uiFilter\");\n            // when filter conditions are changed, give a callback to adjust the conditions\n            if (typeof this.config.adjustFilters === \"function\") {\n                this.config.adjustFilters(this, filterCondition);\n            }\n\n            if (filterCondition.attribute || filterCondition.conditions) {\n                uiFilter.autoInsertCondition(filterCondition);\n            } else {\n                // or a datasource?\n                this.setDataSource(filterCondition, false);\n            }\n\n            if (fireQuery || typeof fireQuery === \"undefined\") {\n                this.fireSearchQuery();\n            }\n\n            this.notifyFilterChanged();\n        } catch (error) {\n            this.errorHandler.onError(error);\n        }\n    }\n\n    removeFilterCondition(filterCondition, fireQuery?: boolean): void {\n        if (filterCondition.attribute || filterCondition.conditions) {\n            this.getProperty(\"/uiFilter\").autoRemoveCondition(filterCondition);\n        } else {\n            this.setDataSource(filterCondition, false);\n        }\n\n        if (fireQuery || typeof fireQuery === \"undefined\") {\n            this.fireSearchQuery();\n        }\n\n        this.notifyFilterChanged();\n    }\n\n    resetAllFilterConditions(fireQuery?: boolean): void {\n        this.getProperty(\"/uiFilter\").resetConditions();\n        if (fireQuery || typeof fireQuery === \"undefined\") {\n            this.fireSearchQuery();\n        }\n        this.notifyFilterChanged();\n    }\n\n    resetFilterByFilterConditions(fireQuery?: boolean): void {\n        // 1. collect static hierarchy facet filter conditions\n        const staticHierarchyFilterConditions = this.getStaticHierarchyFilterConditions();\n\n        // 2. reset all filter conditions\n        this.getProperty(\"/uiFilter\").resetConditions();\n\n        // 3. add static hierarchy facet filter conditions\n        if (staticHierarchyFilterConditions.length > 0) {\n            for (const nonFilterByCondition of staticHierarchyFilterConditions) {\n                this.getProperty(\"/uiFilter\").autoInsertCondition(nonFilterByCondition);\n            }\n        }\n\n        // 4. notify filter changed\n        if (fireQuery || typeof fireQuery === \"undefined\") {\n            this.fireSearchQuery();\n        }\n        this.notifyFilterChanged();\n    }\n\n    setFilter(filter): void {\n        this.setDataSource(filter.dataSource, false);\n        this.setSearchBoxTerm(filter.searchTerm, false);\n        const uiFilter = this.getProperty(\"/uiFilter\");\n        uiFilter.setRootCondition(filter.rootCondition);\n        this.fireSearchQuery();\n    }\n\n    hasStaticHierarchyFacetFilterConditionOnly(): boolean {\n        const staticHierarchyFilterConditions = this.getStaticHierarchyFilterConditions();\n        return (\n            staticHierarchyFilterConditions.length > 0 &&\n            staticHierarchyFilterConditions.length ===\n                this.getProperty(\"/uiFilter\").rootCondition.conditions.length\n        );\n    }\n\n    getStaticHierarchyFilterConditions(): Condition[] {\n        const staticHierarchyFilterConditions = [];\n        for (const attribute of this.getProperty(\"/uiFilter\").rootCondition.getAttributes()) {\n            const attributeMetadata =\n                this.getProperty(\"/uiFilter\").dataSource.attributeMetadataMap[attribute];\n            if (\n                attributeMetadata &&\n                attributeMetadata.isHierarchy === true &&\n                attributeMetadata.hierarchyDisplayType === HierarchyDisplayType.StaticHierarchyFacet\n            ) {\n                for (const nonFilterByCondition of this.getProperty(\n                    \"/uiFilter\"\n                ).rootCondition.getAttributeConditions(attribute)) {\n                    staticHierarchyFilterConditions.push(nonFilterByCondition);\n                }\n            }\n        }\n        return staticHierarchyFilterConditions;\n    }\n\n    // ################################################################################\n    // Suggestions:\n    // ################################################################################\n\n    doSuggestion(): void {\n        this._suggestionHandler.doSuggestion(this.getProperty(\"/uiFilter\").clone());\n    }\n\n    abortSuggestions(): void {\n        this._suggestionHandler.abortSuggestions();\n    }\n\n    // ################################################################################\n    // Standard- and App-Search:\n    // ################################################################################\n\n    public async fireSearchQuery(deserializationIn?: { deserialization?: boolean }): Promise<true | void> {\n        try {\n            await this.initAsync();\n        } catch (error) {\n            return Promise.reject(error);\n        }\n        return this.doFireSearchQuery(deserializationIn);\n    }\n\n    private async doFireSearchQuery(\n        deserializationIn?: { deserialization?: boolean } | boolean\n    ): Promise<true | void> {\n        let deserialization: boolean;\n        if (typeof deserializationIn === \"object\" && \"deserialization\" in deserializationIn) {\n            deserialization = deserializationIn.deserialization;\n        } else {\n            deserialization = (deserializationIn as boolean) || undefined;\n        }\n\n        // decide whether to fire the query\n        const uiFilter = this.getProperty(\"/uiFilter\");\n        if (!uiFilter) {\n            // async search model creation might have failed (see browser console)\n            return;\n        }\n        if (\n            uiFilter.equals(this.query.filter) &&\n            this.getTop() === this.query.top &&\n            this.isEqualOrderBy(this.getOrderBy(), this.query.sortOrder) &&\n            this.getCalculateFacetsFlag() === this.query.calculateFacets &&\n            !this.getProperty(\"/isQueryInvalidated\")\n        ) {\n            return Promise.resolve();\n        }\n\n        // set natural language query flag\n        this.query.setNlq(this.isNlqActive());\n\n        // For re-set selection logic check\n        const oldFilter = this.query.filter;\n        const newFilter = uiFilter;\n        // Only reset selection if data source/Search term or any filter is changed,\n        if (!oldFilter.equals(newFilter)) {\n            this.resetKeyStore();\n        }\n\n        // If the user changed dataSource or searchTerm, reset orderBy\n        if (\n            !deserialization &&\n            ((this.query.filter.dataSource && uiFilter.dataSource !== this.query.filter.dataSource) ||\n                (this.query.filter.searchTerm && uiFilter.searchTerm !== this.query.filter.searchTerm))\n        ) {\n            this.resetOrderBy(false);\n        }\n\n        // notify facets formatter about datasource change\n        if (this.query.filter.dataSource && uiFilter.dataSource !== this.query.filter.dataSource) {\n            this.oFacetFormatter.handleDataSourceChanged();\n        }\n\n        // reset top if search term changes or filter condition or datasource\n        if (!deserialization) {\n            if (!uiFilter.equals(this.query.filter)) {\n                this.resetTop();\n            }\n        }\n\n        // reset tabstrip formatter if search term changes or filter condition\n        // UserCategory (My Favorites) is used and search for one connector\n        if (\n            uiFilter.searchTerm !== this.query.filter.searchTerm ||\n            !uiFilter.rootCondition.equals(this.query.filter.rootCondition)\n        ) {\n            this._tabStripFormatter.invalidate(this.getDataSource());\n        }\n\n        // (1) query invalidated or (2) deserialization of URL -> reset result set in order to force query to be executed\n        if (\n            this.getProperty(\"/isQueryInvalidated\") === true ||\n            (deserialization && this.config.reloadOnUrlChange)\n        ) {\n            this.query.resetResultSet();\n            this.setProperty(\"/isQueryInvalidated\", false);\n        }\n\n        // update query (app search also uses this.query despite search regest is not controlled by sina)\n        this.query.setFilter(uiFilter.clone());\n        this.query.setTop(this.getTop());\n        this.query.setSortOrder(this.assembleSortOrder());\n        this.query.setCalculateFacets(this.getCalculateFacetsFlag());\n\n        this.setProperty(\"/queryFilter\", this.query.filter);\n\n        // notify subscribers\n        this.notifySubscribers(UIEvents.ESHSearchStarted);\n        EventBus.getInstance().publish(UIEvents.ESHSearchStarted);\n\n        // enable busy indicator\n        if (deserialization || !this.config.isUshell) {\n            // - no delay: avoid flickering when starting seach ui from shell header\n            // - no delay in all none ushell use cases: in ushell we have no dynamic/static hierarchy facets\n            //   dynamic/static hierarchy facets needs fast blocking in order to avoid parallel ajax requests triggered by fast clicking user\n            this.setProperty(\"/busyDelay\", 0);\n        } else {\n            this.setProperty(\"/busyDelay\", 600);\n        }\n        this.busyIndicator.setBusy(true);\n\n        this.abortSuggestions();\n\n        // update url silently\n        this.updateSearchURLSilently(deserialization);\n\n        // for each new search the memory is reseted except in case of deserilization:\n        // when navigating back from factsheet (object page) / other applications\n        // the expand status of search result set items shall be restored -> do not clear memory\n        if (!deserialization) {\n            this.resetSearchResultItemMemory();\n        }\n\n        // log search request\n        this.logSearchRequestAdvanced();\n\n        const method = `Search for '${this.getSearchBoxTerm()}' (logId:${this.config.performanceLogger?.getUniqueId()})`;\n        this._performanceLoggerSearchMethods.push(method);\n        this.config.performanceLogger?.enterMethod(\n            { name: method },\n            {\n                isSearch: true,\n                comments: `Top: ${this.getTop()}, searchbox term: ${this.getSearchBoxTerm()}`,\n            }\n        );\n\n        // wait for all subsearch queries\n        return Promise.all([this.normalSearch(), this.appSearch()])\n            .then(() => {\n                this.calculateResultViewSwitchVisibility();\n                this.setProperty(\n                    \"/tabStrips\",\n                    this._tabStripFormatter.format(this.getDataSource(), this.resultSet, this)\n                );\n                this.setProperty(\n                    \"/breadcrumbsHierarchyNodePaths\",\n                    this._breadcrumbsFormatter.formatNodePaths(this.resultSet)\n                );\n                this.setProperty(\n                    \"/breadcrumbsHierarchyAttribute\",\n                    this._breadcrumbsFormatter.formatHierarchyAttribute(this.resultSet)\n                );\n                this.setProperty(\"/hierarchyNodePaths\", this.resultSet?.hierarchyNodePaths);\n                this.setProperty(\"/isFolderMode\", uiFilter.isFolderMode());\n                if (this.config.bRecentSearches && this.recentlyUsedStorage) {\n                    const searchSuggestion = createSearchSuggestionForCurrentSearch(this);\n                    if (searchSuggestion) {\n                        this.recentlyUsedStorage.addItem(searchSuggestion);\n                    }\n                }\n                return this.oFacetFormatter\n                    .getFacets(this.getDataSource(), this.resultSet, this)\n                    .catch((error) => {\n                        for (const method of this._performanceLoggerSearchMethods) {\n                            this.config.performanceLogger?.leaveMethod({ name: method });\n                        }\n                        this._performanceLoggerSearchMethods = [];\n                        return this.errorHandler.onErrorAsync(error);\n                    })\n                    .then((facets) => {\n                        if (facets?.length > 0) {\n                            facets[0].change = Date.now(); // workaround to prevent earlier force update facet tree\n                            this.setProperty(\"/facets\", facets);\n                            facets.forEach((facet) => facet.handleModelUpdate && facet.handleModelUpdate());\n                        }\n                    });\n            })\n            .catch((error) => {\n                for (const method of this._performanceLoggerSearchMethods) {\n                    this.config.performanceLogger?.leaveMethod({ name: method });\n                }\n                this._performanceLoggerSearchMethods = [];\n                return this.errorHandler.onErrorAsync(error);\n            })\n            .finally(() => {\n                try {\n                    if (this.config && this.config.overwriteBrowserTitle === true) {\n                        document.title = this.getDocumentTitle();\n                    }\n                    for (const method of this._performanceLoggerSearchMethods) {\n                        this.config.performanceLogger?.leaveMethod({ name: method });\n                    }\n                    this._performanceLoggerSearchMethods = [];\n                    this.notifySubscribers(UIEvents.ESHSearchFinished);\n                    EventBus.getInstance().publish(UIEvents.ESHSearchFinished);\n                    this.busyIndicator.setBusy(false);\n                    this.setProperty(\"/firstSearchWasExecuted\", true);\n                    this.notifyFilterChanged();\n                    // console.log(\"SELECTION: search model, doFireSearchQuery -> update selection\");\n                    this.updateMultiSelectionSelected();\n                } catch (error) {\n                    this.errorHandler.onError(error);\n                }\n                this.ensureOneTimeDisplayForErrorMessages();\n            });\n    }\n\n    ensureOneTimeDisplayForErrorMessages() {\n        // get errors\n        const errors = this.getProperty(\"/errors\") as Array<IUIMessage>;\n        // remove already shown errors / mark new errors as shown\n        for (let i = 0; i < errors.length; ++i) {\n            const error = errors[i];\n            if (error.shownToUser) {\n                // old and shown error -> remove\n                errors.splice(i, 1);\n                i--;\n                continue;\n            }\n            // new error displayed in this roundtrip -> remove next time method is called\n            error.shownToUser = true;\n        }\n        // update errors\n        this.setProperty(\"/errors\", errors);\n    }\n\n    assembleSortOrder(): Array<{ id: string; order: SortOrder }> {\n        const orderBy = this.getOrderBy();\n        if (!orderBy.orderBy) {\n            return [];\n        }\n        let order = this.sinaNext.SortOrder.Ascending;\n        if (orderBy.sortOrder === \"DESC\") {\n            order = this.sinaNext.SortOrder.Descending;\n        }\n        return [\n            {\n                id: orderBy.orderBy,\n                order: order,\n            },\n        ];\n    }\n\n    getCalculateFacetsFlag(): boolean {\n        if (\n            this.getDataSource().type === this.sinaNext.DataSourceType.Category ||\n            this.getFacetVisibility()\n        ) {\n            // tab strip needs data from data source facet if a category is selected because\n            // then the tab strips show also siblings. If connector is selected, the tab strip\n            // only shows All and the connector.\n            return true;\n        }\n        return false;\n    }\n\n    appSearch(): Promise<true | void> {\n        // only ushell should do app search\n        if (!this.config.isUshell) {\n            return Promise.resolve(true);\n        }\n\n        this.setProperty(\"/appResults\", []);\n        this.setProperty(\"/appCount\", 0);\n\n        if (\n            this.isBusinessObject() ||\n            (this.isOtherCategory() && !this.isAppCategory() && !this.isUserCategory()) ||\n            (this.isUserCategory() &&\n                this.userCategoryManager &&\n                !this.userCategoryManager.getCategory(\"MyFavorites\").includeApps)\n        ) {\n            // 1. do not search\n            return Promise.resolve(true);\n        }\n\n        // calculate top\n        const top = this.query.filter.dataSource === this.allDataSource ? this.appTopDefault : this.query.top;\n\n        // 2. search\n        return this._searchApplicationsRefuseOutdatedReq(this.query.filter.searchTerm, top, 0).then(\n            (oResult) => {\n                // 1.1 search call succeeded\n                this.setProperty(\"/appCount\", oResult.totalResults);\n                this.setProperty(\"/appResults\", oResult.getElements());\n            },\n            (error) => {\n                // 1.2 search call failed\n                return this.errorHandler.onErrorAsync(error);\n            }\n        );\n    }\n\n    async searchApplications(\n        searchTerm: string,\n        top: number,\n        skip: number\n    ): Promise<{\n        getElements: () => Array<FLPAppSuggestion>;\n        totalResults: number;\n        searchTerm: string;\n    }> {\n        if (this.config.isUshell) {\n            const { default: Container } = await import(\"sap/ushell/Container\");\n            const service: {\n                queryApplications: (arg0: { searchTerm: string; top: number; skip: number }) => Promise<{\n                    getElements: () => Array<FLPAppSuggestion>;\n                    totalResults: number;\n                    searchTerm: string;\n                }>;\n            } = await Container.getServiceAsync(\"Search\");\n            return service.queryApplications({\n                searchTerm: searchTerm,\n                top: top,\n                skip: skip,\n            });\n        } else {\n            return Promise.resolve({\n                totalResults: 0,\n                searchTerm: searchTerm,\n                getElements: () => {\n                    return [];\n                },\n            });\n        }\n    }\n\n    private async normalSearch(): Promise<void> {\n        // return in case :\n        // 1) enterprise search disabled\n        // 2) dataSource=apps\n        // 3) dataSource=MyFavorites and MyFavorites has not datasources\n        if (\n            !this.isBusinessObjSearchEnabled() ||\n            this.isAppCategory() ||\n            (this.isUserCategory() &&\n                this.userCategoryManager &&\n                this.userCategoryManager.getCategory(\"MyFavorites\").subDataSources.length === 0)\n        ) {\n            this.setProperty(\"/boResults\", []);\n            this.setProperty(\"/breadcrumbsHierarchyNodePaths\", []);\n            this.setProperty(\"/breadcrumbsHierarchyAttribute\", \"\");\n            this.setProperty(\"/hierarchyNodePaths\", []);\n            this.setProperty(\"/isFolderMode\", false);\n            this.setProperty(\"/origBoResults\", []);\n            this.setProperty(\"/boCount\", 0);\n            this.setProperty(\"/nlqExplanation\", {});\n            this.setProperty(\"/nlqResult\", { success: false, filterDescription: \"\" });\n            this.resultSet = null;\n            return;\n        }\n\n        // set datasource\n        this.setDataSource(this.getDataSource(), false, false); // why?? update of dropdown??\n\n        // set flag whether to calculcate the facets\n        this.query.setCalculateFacets(this.getCalculateFacetsFlag());\n\n        // search request\n        try {\n            const resultSet = (await this.query.getResultSetAsync()) as SearchResultSet;\n            if (resultSet.hasErrors()) {\n                resultSet.getErrors().forEach((error) => {\n                    this.errorHandler.onError(error, {\n                        showMinorErrorsAsWarnings: resultSet?.items?.length > 0,\n                    });\n                });\n            }\n            this.dataSourceOfPreviousSearch = this?.resultSet?.query?.filter?.dataSource;\n            this.resultSet = resultSet;\n            this.setProperty(\"/nlqResult\", resultSet.nlqResult);\n            await this._afterSearchPrepareResultList(resultSet);\n        } catch (error) {\n            this.dataSourceOfPreviousSearch = this?.resultSet?.query?.filter?.dataSource;\n            this.setProperty(\"/nlqResult\", { success: false, filterDescription: \"\" });\n            this.errorHandler.onError(error);\n        }\n    }\n\n    private _afterSearchPrepareResultList(searchResultSet: SearchResultSet): Promise<void> {\n        this.setProperty(\"/boResults\", []);\n        this.setProperty(\"/breadcrumbsHierarchyNodePaths\", []);\n        this.setProperty(\"/breadcrumbsHierarchyAttribute\", \"\");\n        this.setProperty(\"/hierarchyNodePaths\", []);\n        this.setProperty(\"/isFolderMode\", false);\n        this.setProperty(\"/origBoResults\", searchResultSet.items);\n        this.setProperty(\"/boCount\", 0);\n\n        const formatter = new SearchResultFormatter(this);\n        const newResults = formatter.format(searchResultSet, this.query.filter.searchTerm);\n        this.setProperty(\"/sortableAttributes\", formatter.formatSortAttributes() as Array<SortAttribute>); // move this.isHomogenousResult() && searchResultSet.totalCount > 0 to formatter\n\n        this.forgetMissingSelections(newResults);\n\n        this.setTableData(newResults); // format table even if table view is configured, used in getTableInitialColumns() for result export.\n\n        this.restoreResultSetItemExpansion(newResults);\n        let newResult;\n        const dataSources = [];\n        const dataSourcesHints = [];\n\n        for (let i = 0; i < newResults.length; i++) {\n            newResult = newResults[i];\n            // collect data sources to initiate loading of custom modules\n            dataSources.push(newResult.dataSource);\n            dataSourcesHints.push({\n                isDocumentConnector: newResult.isDocumentConnector,\n            });\n        }\n\n        const loadCustomModulesProm = this.config.loadCustomModulesForDataSourcesAsync(\n            dataSources,\n            dataSourcesHints\n        );\n\n        const thisPromise = Promise.all([Promise.resolve(searchResultSet), loadCustomModulesProm]).then(\n            (params) => {\n                // TODO: error handling\n\n                const searchResultSet = params[0];\n\n                // DSP exit\n                if (this.config && typeof this.config.setSearchInLabelIconBindings === \"function\") {\n                    try {\n                        this.config.setSearchInLabelIconBindings(this, searchResultSet.facets);\n                    } catch (err) {\n                        const oError = new errors.ConfigurationExitError(\n                            \"setSearchInLabelIconBindings\",\n                            this.config.applicationComponent,\n                            err\n                        );\n                        throw oError;\n                    }\n                }\n\n                for (const item of newResults) {\n                    if (this.isKeySelected(item.key)) {\n                        item.selected = true;\n                    }\n                }\n                this.setProperty(\"/boCount\", searchResultSet.totalCount);\n                this.setProperty(\"/boResults\", newResults);\n                this.enableOrDisableMultiSelection();\n\n                return Promise.resolve();\n            }\n        );\n\n        return thisPromise;\n    }\n\n    restoreResultSetItemExpansion(items: Array<FormattedResultItem>) {\n        for (const item of items) {\n            const expanded = this.searchResultSetItemMemory.getExpanded(item.key);\n            if (typeof expanded !== \"undefined\") {\n                item.expanded = expanded;\n            }\n        }\n    }\n\n    // ################################################################################\n    // Helper functions:\n    // ################################################################################\n\n    // handle multi-selection availability\n    // ===================================================================\n    enableOrDisableMultiSelection(): void {\n        if (\n            [SelectionMode.MultipleItems].includes(this.config.resultviewSelectionMode) ||\n            this.config.enableMultiSelectionResultItems // deprecated\n        ) {\n            this.setProperty(\"/multiSelectionAvailable\", true);\n            this.setProperty(\"/multiSelectionEnabled\", true);\n            return;\n        }\n\n        const dataSource = this.getDataSource();\n        const dataSourceConfig = this.config.getDataSourceConfig(dataSource);\n        const selectionHandler = new dataSourceConfig.searchResultListSelectionHandlerControl();\n        if (selectionHandler) {\n            this.setProperty(\"/multiSelectionAvailable\", selectionHandler.isMultiSelectionAvailable());\n        } else {\n            this.setProperty(\"/multiSelectionAvailable\", false);\n        }\n    }\n\n    updateMultiSelectionSelected(): void {\n        // console.log(\"SELECTION: SearchModel.updateMultiSelectionSelected\");\n        let results;\n        if (this.getResultViewType() === \"searchResultTable\") {\n            // UI in table view\n            results = this.getProperty(\"/tableRows\");\n        } else {\n            // UI in list or grid view\n            results = this.getProperty(\"/results\");\n        }\n        let count = 0;\n        const multiSelectionObjects = [];\n        for (let i = 0; i < results.length; i++) {\n            if (results[i].selected) {\n                this.selectKey(results[i].key);\n                count++;\n                multiSelectionObjects.push(results[i]);\n            } else {\n                this.deselectKey(results[i].key);\n            }\n        }\n        if (count > 0) {\n            this.setProperty(\"/multiSelectionSelected\", true);\n            this.setProperty(\"/multiSelectionObjects\", multiSelectionObjects);\n        } else {\n            this.setProperty(\"/multiSelectionSelected\", false);\n            this.setProperty(\"/multiSelectionObjects\", []);\n        }\n        if (count === 1) {\n            this.setProperty(\"/singleSelectionSelected\", true);\n        } else {\n            this.setProperty(\"/singleSelectionSelected\", false);\n        }\n        // notify subscribers\n        this.notifySubscribers(UIEvents.ESHSelectionChanged);\n        EventBus.getInstance().publish(UIEvents.ESHSelectionChanged, this);\n    }\n\n    calculatePlaceholder(): string {\n        let dataSourceLabel = this.getDataSource().labelPlural; // default label\n        if (this.isAllCategory() || this.config?.bPlaceHolderFixedValue === true) {\n            return i18n.getText(\"search\");\n        } else if (typeof this.config?.getSearchInputPlaceholderLabel === \"function\") {\n            try {\n                dataSourceLabel = this.config?.getSearchInputPlaceholderLabel(this.getProperty(\"/uiFilter\"));\n            } catch (err) {\n                const oError = new errors.ConfigurationExitError(\n                    \"getSearchInputPlaceholderLabel\",\n                    this.config.applicationComponent,\n                    err\n                );\n                // not significant, unnecessary to throw exception, display fallback placeholder text\n                this.errorHandler.onError(oError);\n            }\n        }\n        // robustness\n        if (typeof dataSourceLabel === \"undefined\" || dataSourceLabel === null || dataSourceLabel === \"\") {\n            dataSourceLabel = this.getDataSource().labelPlural;\n        }\n        return i18n.getText(\"searchInPlaceholder\", [dataSourceLabel]);\n    }\n\n    updateDataSourceList(newDataSource: DataSource): void {\n        const dataSources = this.getProperty(\"/dataSources\");\n        // delete old categories, until all data source\n        this.removeTempDataSources();\n        // check if newDataSource exists in existing list -> return\n        if (dataSources.indexOf(newDataSource) >= 0) {\n            return;\n        }\n        // add datasource\n        dataSources.unshift(newDataSource);\n        this._tempDataSources.push(newDataSource);\n        this.setProperty(\"/dataSources\", dataSources);\n    }\n\n    removeTempDataSources(): void {\n        const dataSources = this.getProperty(\"/dataSources\");\n        this._tempDataSources.forEach((tempDataSource, i, tempDataSources) => {\n            const index = dataSources.indexOf(tempDataSource);\n            if (index < 0) {\n                const internalError = new Error(\"could not find temp DataSource in DataSources\");\n                throw new errors.ProgramError(internalError);\n            }\n            dataSources.splice(index, 1);\n            tempDataSources.splice(i, 1);\n        });\n    }\n\n    invalidateQuery(): void {\n        this.setProperty(\"/isQueryInvalidated\", true);\n    }\n\n    private logSearchRequestAdvanced(): void {\n        const event: SearchRequestEvent = {\n            type: TechnicalEventType.SEARCH_REQUEST,\n            searchTerm: this.getSearchBoxTerm(),\n            filter: this.getFilterRootCondition() + \"\",\n            dataSourceKey: this.getDataSource().id,\n            top: this.getTop(),\n        };\n        if (this.getFilterRootCondition().conditions?.length > 0) {\n            if (this.getSearchBoxTerm()) {\n                event.type = TechnicalEventType.SEARCH_WITH_SEARCHTERM_FILTERS;\n            } else {\n                event.type = TechnicalEventType.SEARCH_WITH_FILTERS;\n            }\n        } else {\n            if (!this.getSearchBoxTerm()) {\n                event.type = TechnicalEventType.SEARCH_WITHOUT_SEARCHTERM_FILTERS;\n            } else {\n                event.type = TechnicalEventType.SEARCH_WITH_SEARCHTERM;\n            }\n        }\n        this.eventLogger.logTechnicalEvent(event);\n    }\n\n    autoStartApp(): void {\n        const searchTerm = this.getProperty(\"/uiFilter/searchTerm\");\n        if (this.getProperty(\"/appCount\") === 1 && this.getProperty(\"/count\") === 1) {\n            const aApps = this.getProperty(\"/appResults\");\n            if (\n                aApps &&\n                aApps.length > 0 &&\n                aApps[0] &&\n                aApps[0].url &&\n                searchTerm &&\n                aApps[0].tooltip &&\n                searchTerm.toLowerCase().trim() === aApps[0].tooltip.toLowerCase().trim()\n            ) {\n                if (aApps[0].url[0] === \"#\") {\n                    window.location.href = aApps[0].url;\n                } else {\n                    window.open(aApps[0].url, \"_blank\", \"noopener,noreferrer\");\n                }\n                return;\n            }\n        }\n    }\n\n    isHomogenousResult(): boolean {\n        if (this.isAllCategory()) {\n            return false;\n        }\n        if (this.isOtherCategory()) {\n            return false;\n        }\n        if (this.isAppCategory()) {\n            return false;\n        }\n        return true;\n    }\n\n    getResultViewTypes(): Array<string> {\n        return this.getProperty(\"/resultViewTypes\");\n    }\n\n    setResultViewTypes(types: string[]): void {\n        this.setProperty(\"/resultViewTypes\", types);\n    }\n\n    getResultViewType(): string {\n        return this.getProperty(\"/resultViewType\");\n    }\n\n    setResultViewType(type: string): void {\n        this.setProperty(\"/resultViewType\", type);\n        if (this.isAppCategory()) {\n            return;\n        } else if (this.isAllCategory() || this.isOtherCategory()) {\n            try {\n                this._personalizationStorage.setItem(\n                    PersonalizationKeys.resultViewTypeForAllAndCategorySearch,\n                    type\n                );\n            } catch (e) {\n                this.logger.warning(\n                    \"Could not store resultViewTypeForAllAndCategorySearch in personalization storage\",\n                    e\n                );\n            }\n        } else {\n            try {\n                this._personalizationStorage.setItem(\n                    PersonalizationKeys.resultViewTypeForBusinessObjectSearch,\n                    type\n                );\n            } catch (e) {\n                this.logger.warning(\n                    \"Could not store resultViewTypeForBusinessObjectSearch in personalization storage\",\n                    e\n                );\n            }\n        }\n    }\n\n    calculateResultViewSwitchVisibility(settings?: {\n        resultViewTypes: Array<string>;\n        resultViewType: string;\n    }): void {\n        /* view type by search scope\n         * search in Datasource    All     Category    Apps    BusinessObject\n         * -------------------------------------------------------------------\n         * \"appSearchResult\"                           x\n         * \"searchResultList\"      x        x                  x\n         * \"searchResultTable\"                                 x\n         * \"searchResultGrid\"      x        x                  x\n         */\n\n        this.validateResultViewSettings(settings);\n\n        // ==============================================================================================================\n        // click view switch buttons or use SearchComposite API (after SearchFinished) ->\n        // call calculateResultViewSwitchVisibility(), settings is SearchComposite's parameters ->\n        // calculate with settings:\n        // ==============================================================================================================\n        if (settings !== undefined) {\n            this.setResultViewTypes(settings.resultViewTypes);\n            this.setResultViewType(settings.resultViewType);\n            this.setProperty(\"/resultViewSwitchVisibility\", settings.resultViewTypes.length > 1);\n            return;\n        }\n\n        // ==============================================================================================================\n        // initialize Search UI with/without URL parameter or trigger new search (NormalSearch Resolve) ->\n        // call calculateResultViewSwitchVisibility(), settings is undefined ->\n        // calculate with hard code, storage and/or SearchConfiguration's parameters:\n        // ==============================================================================================================\n        let activeTypes;\n        let activeType;\n\n        // 1. Search in Apps\n        if (\n            this.isAppCategory() ||\n            (this.isUserCategory() &&\n                this.userCategoryManager &&\n                this.userCategoryManager.getCategory(\"MyFavorites\").subDataSources.length === 0)\n        ) {\n            activeTypes = [\"appSearchResult\"]; // ToDo: hard code\n            activeType = \"appSearchResult\"; // ToDo: hard code\n            this.setResultViewTypes(activeTypes);\n            this.setResultViewType(activeType);\n            this.setProperty(\"/resultViewSwitchVisibility\", activeTypes.length > 1);\n            return;\n        }\n\n        // 2. Search in All or other Category\n        if (this.isAllCategory() || this.isOtherCategory()) {\n            // 2.1.\n            if (this.config.isUshell) {\n                activeTypes = [\"searchResultList\"]; // ToDo: hard code\n                activeType = \"searchResultList\"; // ToDo: hard code\n            }\n            // 2.2\n            else {\n                activeTypes = [\"searchResultList\", \"searchResultGrid\"]; // ToDo: hard code\n                try {\n                    activeType = this._personalizationStorage.getItem(\n                        PersonalizationKeys.resultViewTypeForAllAndCategorySearch\n                    ); //storage\n                } catch (e) {\n                    this.logger.warning(\n                        \"Could not read resultViewTypeForAllAndCategorySearch from personalization storage\",\n                        e\n                    );\n                }\n\n                if (\n                    activeType === undefined ||\n                    activeType === null ||\n                    activeType.length === 0 ||\n                    !activeTypes.includes(activeType)\n                ) {\n                    activeType = \"searchResultList\"; //hard code\n                }\n            }\n            this.setResultViewTypes(activeTypes);\n            this.setResultViewType(activeType);\n            this.setProperty(\"/resultViewSwitchVisibility\", activeTypes.length > 1);\n            return;\n        }\n\n        // 3. Search in Business Object\n        activeTypes = this.config.resultViewTypes; // SearchConfiguration\n\n        try {\n            if (this._personalizationStorage instanceof PersonalizationStorage)\n                activeType = this._personalizationStorage.getItem(\n                    PersonalizationKeys.resultViewTypeForBusinessObjectSearch\n                ); //storage\n        } catch (e) {\n            this.logger.warning(\n                \"Could not read resultViewTypeForBusinessObjectSearch from personalization storage\",\n                e\n            );\n        }\n\n        if (\n            activeType === undefined ||\n            activeType === null ||\n            activeType.length === 0 ||\n            !activeTypes.includes(activeType)\n        ) {\n            activeType = this.config.fallbackResultViewType; //SearchConfiguration\n        }\n\n        // result view type calculation for navigation mode (folder or search mode)\n        activeType = this.folderModeResultViewTypeCalculator.calculate(\n            activeTypes,\n            activeType,\n            this.getProperty(\"/uiFilter\")\n        );\n\n        this.setResultViewTypes(activeTypes);\n        this.setResultViewType(activeType);\n        this.setProperty(\"/resultViewSwitchVisibility\", activeTypes.length > 1);\n    }\n\n    validateResultViewSettings(settings: { resultViewTypes: Array<string>; resultViewType: string }): void {\n        let validateConfig;\n        let typeSuperset; // superset of possible resultViewTypes\n        let types; // active result view types\n        let type; // active result view type\n        let errorBegin;\n        let errorEnding;\n\n        if (typeof settings === \"undefined\") {\n            // ==============================================================================================================\n            // initialize Search UI with/without URL parameter or trigger new search (NormalSearch Resolve) ->\n            // call validateResultViewSettings(), settings is undefined ->\n            // validate SearchConfiguration parameters: config.resultViewTypes, config.fallbackResultViewType\n            // ==============================================================================================================\n            validateConfig = true;\n        } else {\n            // ==============================================================================================================\n            // click view switch buttons or use SearchComposite API (after SearchFinished) ->\n            // call validateResultViewSettings(), settings is SearchComposite's parameters ->\n            // validate SearchCompositeControl parameters: settings.resultViewTypes, settings.resultViewType\n            // ==============================================================================================================\n            validateConfig = false;\n        }\n\n        if (validateConfig) {\n            typeSuperset = [\"searchResultList\", \"searchResultTable\", \"searchResultGrid\"];\n            types = this.config.resultViewTypes;\n            type = this.config.fallbackResultViewType;\n            errorBegin = \"\\nERROR: Search Result View Settings of SearchConfiguration:\\n\\n\";\n            errorEnding =\n                \". \\n Please check the validation and compatibility of resultViewTypes of SearchConfiguration!\";\n        } else {\n            if (this.isAppCategory()) {\n                typeSuperset = [\"appSearchResult\"];\n            } else if (this.isAllCategory() || this.isOtherCategory()) {\n                typeSuperset = [\"searchResultList\", \"searchResultGrid\"];\n            } else {\n                typeSuperset = [\"searchResultList\", \"searchResultTable\", \"searchResultGrid\"];\n            }\n            types = settings.resultViewTypes;\n            type = settings.resultViewType;\n            errorBegin = \"\\nERROR: Search Result View Settings of SearchCompositeControl\\n\\n\";\n            errorEnding =\n                \". \\n Please check the validation and compatibility of resultViewTypes and resultViewType of SearchCompositeControl!\" +\n                \"\\n When adding a new resultViewType and making it active at the same time, make use of function 'setResultViewSettings' to apply both changes together.\";\n        }\n\n        // check starts\n        // result view types not empty\n        if (!Array.isArray(types) || types.length === 0) {\n            throw Error(errorBegin + \"resultViewTypes should be non-empty array\" + errorEnding);\n        }\n\n        // result view types no duplicates\n        let uniqueList = types;\n        uniqueList = uniqueList.filter((elem, index) => {\n            return uniqueList.indexOf(elem) === index;\n        });\n        if (uniqueList.length !== types.length) {\n            throw Error(\n                errorBegin +\n                    \"resultViewTypes (\" +\n                    types.toString() +\n                    \") should not have duplicated value\" +\n                    errorEnding\n            );\n        }\n\n        // result view types is subset of possible superset\n        if (!SearchHelper.isSubsetOf(types, typeSuperset)) {\n            throw Error(\n                errorBegin +\n                    \"resultViewTypes (\" +\n                    types.toString() +\n                    \") contains invalid value. Possible values are (\" +\n                    typeSuperset.toString() +\n                    \")\" +\n                    errorEnding\n            );\n        }\n\n        // set default value to undefined fallbackResultViewType, after validating resultViewTypes\n        // move from setDefaults() of SearchConfiguration\n        if (typeof type === \"undefined\" && validateConfig) {\n            type = types[0];\n            this.config.fallbackResultViewType = types[0]; // assign resultViewTypes' first element to fallbackResultViewType\n        }\n\n        // result view type of string type\n        if (typeof type !== \"string\") {\n            throw Error(errorBegin + \"resultViewType should be of string\" + errorEnding);\n        }\n\n        // result view types contains active result view type\n        if (!types.includes(type)) {\n            throw Error(\n                errorBegin +\n                    \"resultViewTypes (\" +\n                    types.toString() +\n                    \") doesn't contain resultViewType (\" +\n                    type +\n                    \")\" +\n                    errorEnding\n            );\n        }\n    }\n\n    calculateSearchButtonStatus(): void {\n        // only used for: ushell with classic search field (no webcomponents)\n        if (!this.config.isUshell) {\n            this.setProperty(\"/searchButtonStatus\", \"Search\");\n            return;\n        }\n        if (\n            this.getDataSource() === this.getProperty(\"/defaultDataSource\") &&\n            this.getSearchBoxTerm().length === 0\n        ) {\n            if (SearchShellHelperHorizonTheme.isSearchFieldExpandedByDefault()) {\n                this.setProperty(\"/searchButtonStatus\", \"Focus\");\n            } else {\n                this.setProperty(\"/searchButtonStatus\", \"Close\");\n            }\n        } else {\n            this.setProperty(\"/searchButtonStatus\", \"Search\");\n        }\n    }\n\n    calculateResultList(): void {\n        // init\n        let results = [];\n\n        // add bo results\n        const boResults = this.getProperty(\"/boResults\");\n        if (boResults && boResults.length) {\n            results.push(...boResults);\n        }\n\n        // add app results (tiles)\n        const tiles = this.getProperty(\"/appResults\");\n        if (tiles && tiles.length > 0) {\n            const tilesItem = {\n                type: \"appcontainer\",\n                tiles: tiles,\n            };\n            if (results.length > 0) {\n                if (results.length > 3) {\n                    results.splice(3, 0, tilesItem);\n                } else {\n                    //results.splice(0, 0, tilesItem);\n                    results.push(tilesItem);\n                }\n            } else {\n                results = [tilesItem];\n            }\n        }\n        this.setProperty(\"/results\", results);\n    }\n\n    // ################################################################################\n    // UI message handling:\n    // ################################################################################\n\n    /**\n     * push an error object to error array\n     * @this sap.esh.search.ui.SearchModel\n     * @param { type: MessageType; title: string; description: string } error Error object\n     */\n    pushUIMessage(error: { type: MessageType; title: string; description: string }): void {\n        error.title = error.title === \"[object Object]\" ? i18n.getText(\"searchError\") : error.title;\n        error.type = error.type !== undefined ? error.type : MessageType.Error;\n        const errors = this.getProperty(\"/errors\");\n        errors.push(error);\n        const finalErrors = this.removeAdjacentDuplicateMessages(errors);\n        this.setProperty(\"/errors\", finalErrors);\n    }\n\n    /**\n     * remove all adjacent duplicate messages (message and 'next' message are the same -> keep first message only)\n     * @this sap.esh.search.ui.SearchModel\n     * @param {any[]} error\n     */\n    removeAdjacentDuplicateMessages(errors: Array<IUIMessage>) {\n        const finalErrors = [];\n        let previousError;\n        for (const error of errors) {\n            if (typeof previousError === \"undefined\") {\n                finalErrors.push(error);\n            } else if (\n                previousError.title !== error.title ||\n                previousError.description !== error.description ||\n                previousError.type !== error.type ||\n                previousError.shownToUser !== error.shownToUser\n            ) {\n                finalErrors.push(error);\n            }\n            previousError = error;\n        }\n        return finalErrors;\n    }\n\n    // ################################################################################\n    // Functions related to the URL:\n    // ################################################################################\n    updateSearchURLSilently(deserialization: boolean): void {\n        if (!deserialization && this.config.updateUrl) {\n            const sHash = this.createSearchNavigationTargetCurrentState().targetUrl;\n            SearchHelper.hasher.setHash(sHash);\n        }\n    }\n\n    parseURL(): void {\n        this.searchUrlParser.parse();\n    }\n\n    public subscribe(eventId: string, callback: (eventId: string) => void, listener: unknown): void {\n        // Subscription to internal events of search library is only allowed for internal components\n        // Subscribe to events of SearchCompositeControl:\n        //   - \"searchStarted\" is triggered when a search is started and the UI is waiting for results\n        //   - \"searchFinished\" is triggered as soon as the results are in and the UI finished its updates\n        //   - \"selectionChanged\" is triggered after selection changed (checkboxes of result items), will be deprecated as of 1.142\n        //   - \"resultViewTypeChanged\" is triggered after result view type got changed (list, table or grid), as of 1.141\n        //   - \"resultViewSelectionChanged\" is triggered after result view selection changed (checkboxes/item-selection of result items), as of 1.142\n\n        // subscribe\n        this._subscribers.push({\n            eventId: eventId || \"\",\n            callback: callback,\n            listener: listener || this,\n        });\n\n        // assert\n        this.assertInternalEvents(eventId);\n    }\n\n    public unsubscribe(eventId: string, callback: (eventId: string) => void, listener: unknown): void {\n        // unsubscribe\n        eventId = eventId || \"\";\n        listener = listener || this;\n        for (let index = 0; index < this._subscribers.length; index++) {\n            const subscriber = this._subscribers[index];\n            if (\n                subscriber.eventId === eventId &&\n                subscriber.callback === callback &&\n                subscriber.listener === listener\n            ) {\n                this._subscribers.splice(index, 1);\n            }\n        }\n\n        // assert\n        this.assertInternalEvents(eventId);\n    }\n\n    private assertInternalEvents(eventId: string): void {\n        const callStack = new Error().stack;\n        if (\n            callStack.includes(\"sap/esh/search/ui/SearchCompositeControl\") ||\n            callStack.includes(\"sap/esh/search/ui/library-preload\") ||\n            callStack.includes(\"sap/esh/search/ui/SearchShellHelper\")\n        ) {\n            // OK, called by ELISA component\n        } else {\n            assert(\n                false,\n                `Subscription to internal events ('${eventId}') of search library is only allowed for internal components.\\nSubscribe to events of SearchCompositeControl:\\n  - \"searchStarted\"        : Triggered when a search is started and the UI is waiting for results\\n  - \"searchFinished\"       : Triggered as soon as the results are in and the UI finished its updates\\n  - \"selectionChanged\"     : Triggered after selection changed (checkboxes of result items) \\n  - \"resultViewTypeChanged\": Triggered after result view type got changed (list, table or grid)`\n            );\n        }\n    }\n\n    notifySubscribers(eventId: string): void {\n        for (const subscriber of this._subscribers) {\n            if (subscriber.eventId === eventId) {\n                subscriber.callback.apply(subscriber.listener, [eventId]);\n            }\n        }\n    }\n\n    /**\n     * Create a NavigationTarget instance.\n     * Use this method for the creation a NavigationTarget instance by filter and label for it.\n     */\n    public createSearchNavigationTarget(\n        parameter: Filter | SearchNavigationTargetParameters,\n        label?: string\n    ): NavigationTarget {\n        // normalize input parameters\n        let searchNavigationTargetParameters: SearchNavigationTargetParameters;\n        if (parameter instanceof Filter) {\n            searchNavigationTargetParameters = { filter: parameter, label: label };\n        } else {\n            searchNavigationTargetParameters = parameter;\n        }\n\n        // fill defaults\n        searchNavigationTargetParameters.updateUrl =\n            searchNavigationTargetParameters.updateUrl ?? this.config.updateUrl;\n        searchNavigationTargetParameters.top =\n            searchNavigationTargetParameters.top ?? this.config.pageSize ?? 10;\n        searchNavigationTargetParameters.label = searchNavigationTargetParameters.label ?? \"Search\";\n        searchNavigationTargetParameters.encodeFilter = searchNavigationTargetParameters.encodeFilter ?? true;\n\n        // create navigation target\n        if (searchNavigationTargetParameters.updateUrl) {\n            // 1) navigation target using url\n            const url = renderUrlFromParameters(\n                this,\n                searchNavigationTargetParameters.top,\n                searchNavigationTargetParameters.filter,\n                searchNavigationTargetParameters.encodeFilter,\n                searchNavigationTargetParameters.orderBy\n            );\n            return this.sinaNext.createNavigationTarget({\n                targetUrl: url,\n                text: searchNavigationTargetParameters.label,\n                target: \"_self\",\n            });\n        } else {\n            // 2) navigation target using target function\n            return this.sinaNext.createNavigationTarget({\n                targetFunction: () => {\n                    this.setTop(searchNavigationTargetParameters.top, false);\n                    if (searchNavigationTargetParameters.orderBy) {\n                        this.setOrderBy(searchNavigationTargetParameters.orderBy, false);\n                    }\n                    this.setFilter(searchNavigationTargetParameters.filter);\n                },\n                targetFunctionCustomData: {\n                    top: searchNavigationTargetParameters.top,\n                    filter: searchNavigationTargetParameters.filter,\n                    orderBy: searchNavigationTargetParameters.orderBy,\n                } as SearchQueryParameters,\n                text: searchNavigationTargetParameters.label,\n            });\n        }\n    }\n\n    public createSearchNavigationTargetCurrentState(options?: { updateUrl?: boolean }): NavigationTarget {\n        return this.createSearchNavigationTarget({\n            top: this.getTop(),\n            filter: this.getProperty(\"/uiFilter\"),\n            encodeFilter: true,\n            orderBy: this.getOrderBy(),\n            updateUrl: options?.updateUrl,\n        });\n    }\n\n    public parseSearchNavigationTarget(searchNavigationTarget: NavigationTarget): SearchQueryParameters {\n        const searchQueryParameters: SearchQueryParameters = { filter: null };\n\n        // in case the search navigation target is targetFunction based the original query parameters\n        // are stored in the targetFunctionCustomData, see createSearchNavigationTarget\n        if (searchNavigationTarget.targetFunctionCustomData) {\n            return searchNavigationTarget.targetFunctionCustomData as SearchQueryParameters;\n        }\n\n        // parse url parameters\n        let urlParameters = SearchHelper.parseUrlParameters(searchNavigationTarget.targetUrl);\n        if (core.isEmptyObject(urlParameters)) {\n            return undefined;\n        }\n\n        // parameter modification exit\n        try {\n            urlParameters = this.config.parseSearchUrlParameters(urlParameters);\n        } catch (e) {\n            this.errorHandler.onError(e);\n        }\n\n        // top\n        if (urlParameters.top) {\n            searchQueryParameters.top = parseInt(urlParameters.top, 10);\n        }\n\n        // order by\n        if (urlParameters.orderby && urlParameters.sortorder) {\n            searchQueryParameters.orderBy = {\n                orderBy: urlParameters.orderby,\n                sortOrder: urlParameters.sortorder,\n            };\n        }\n\n        // filter conditions\n        if (urlParameters.filter) {\n            try {\n                const filterJson = JSON.parse(urlParameters.filter);\n                searchQueryParameters.filter = this.sinaNext.parseFilterFromJson(filterJson);\n            } catch (e) {\n                throw new UrlParseError(e);\n            }\n        }\n\n        return searchQueryParameters;\n    }\n\n    public getTableColumns(isStorage: boolean): Array<Column> {\n        if (!isStorage) {\n            return merge([], this.getProperty(\"/tableColumns\")) as Array<Column>; // pass-by-value, not pass-by-reference\n        } else {\n            return this.fetchTableColumns();\n        }\n    }\n\n    private fetchTableColumns(): Array<Column> {\n        try {\n            if (this.getProperty(\"/tableDataSource\").length > 0) {\n                const storageId =\n                    PersonalizationKeys.searchResultTableState + this.getProperty(\"/tableDataSource\");\n                const persoState = this.getPersonalizationStorageInstance()?.getItem(storageId) as PersoState;\n                if (this.isTablePersoStateValid(persoState)) {\n                    return merge([], persoState.aColumns) as Array<Column>; // pass-by-value, not pass-by-reference\n                }\n                return undefined;\n            }\n        } catch (error) {\n            this.logger.warning(\"Could not fetch table columns from personalization storage\", error);\n            return undefined;\n        }\n    }\n\n    private isTablePersoStateValid(persoState: PersoState): boolean {\n        if (!persoState || persoState._persoSchemaVersion !== \"p13n\" || !Array.isArray(persoState.aColumns)) {\n            return false;\n        }\n        for (const column of persoState.aColumns) {\n            if (column.p13NColumnName === undefined) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    public setTableColumns(columns: Array<Column>, isStorage: boolean): void {\n        this.setProperty(\"/tableColumns\", columns);\n        if (isStorage) {\n            this.saveTableColumns(columns);\n        }\n    }\n\n    public saveTableColumns(columns: Array<Column>): void {\n        try {\n            if (this.getProperty(\"/tableDataSource\").length > 0) {\n                const storageId =\n                    PersonalizationKeys.searchResultTableState + this.getProperty(\"/tableDataSource\");\n                this.getPersonalizationStorageInstance().setItem(storageId, {\n                    aColumns: columns,\n                    _persoSchemaVersion: \"p13n\",\n                });\n            }\n        } catch (error) {\n            this.logger.warning(\"Could not save table columns to personalization storage\", error);\n        }\n    }\n\n    public getTableInitialColumns(): Array<Column> {\n        if (!this.tableFormatter) {\n            this.tableFormatter = new SearchResultTableFormatter(this);\n        }\n\n        const columns = this.getTableColumns(false);\n        if (columns?.length > 0) {\n            return this.tableFormatter.formatInitialColumns(columns);\n        } else {\n            return [];\n        }\n    }\n\n    private setTableData(formattedResults: Array<FormattedResultItem>): void {\n        try {\n            if (this.isHomogenousResult()) {\n                /* \n                Principle: \n                    keep table data in search model as lang as datasource is not changed, otherwise 100%-width-columns in same-datasource-search will be modifed\n\n                Example 1:\n                1. Search \"*\" in Products -> has results -> set columns, set initial columns, set rows\n                    /tableDataSource        = Products\n                    /tableColumns           = [Product Id, Product Name, Product Price]\n                    /tableInitialColumns    = [Product Id, Product Name, Product Price]\n                    /tableRows              = [Product1, Product2, Product3]\n\n                2. Search \"$\" in Employees -> has empty result -> reset table data\n                    /tableDataSource        = undefined\n                    /tableColumns           = []\n                    /tableInitialColumns    = []\n                    /tableRows              = []\n\n                3. Search \"*\" in Employees -> has results -> set columns, set initial columns, set rows\n                    /tableDataSource        = Employees\n                    /tableColumns           = [Employee Id, Employee Name, Employee Address]\n                    /tableInitialColumns    = [Employee Id, Employee Name, Employee Address]\n                    /tableRows              = [Employee1, Employee2, Employee3]\n\n                Example 2:\n                1. Search \"*\" in Employees -> has results -> set columns, set initial columns, set rows\n                    /tableDataSource        = Employees\n                    /tableColumns           = [Employee Id, Employee Name, Employee Address]\n                    /tableInitialColumns    = [Employee Id, Employee Name, Employee Address]\n                    /tableRows              = [Employee1, Employee2, Employee3]\n\n                2. Search \"$\" in Employees -> has empty result -> reset table data\n                    /tableDataSource        = Employees\n                    /tableColumns           = [Employee Id, Employee Name, Employee Address]\n                    /tableInitialColumns    = [Employee Id, Employee Name, Employee Address]\n                    /tableRows              = []\n\n                3. Search \"*\" in Employees -> has results -> set columns, set initial columns, set rows\n                    /tableDataSource        = Employees\n                    /tableColumns           = [Employee Id, Employee Name, Employee Address]\n                    /tableInitialColumns    = [Employee Id, Employee Name, Employee Address]\n                    /tableRows              = [Employee1, Employee2, Employee3]\n                */\n\n                if (!this.tableFormatter) {\n                    this.tableFormatter = new SearchResultTableFormatter(this);\n                }\n\n                if (formattedResults.length > 0) {\n                    // set data source of table\n                    this.setProperty(\"/tableDataSource\", this.getDataSource().id);\n\n                    // set columns\n                    this.setTableColumns(this.tableFormatter.formatColumns(formattedResults), true);\n\n                    // set initial columns\n                    // prevent pass-by-reference between /tableColumns and /tableInitialColumns\n                    // use getTableInitialColumns() in run time, instead of setProperty(\"/tableInitialColumns\", ...)\n\n                    // set rows\n                    const rows = this.tableFormatter.formatRows(\n                        formattedResults,\n                        this.getTableColumns(false)\n                    );\n                    for (let i = 0; i < rows.length; i++) {\n                        formattedResults[i].cells = rows[i].cells;\n                    }\n                    this.setProperty(\"/tableRows\", formattedResults);\n                } else {\n                    this.resetTableData();\n                }\n            } else {\n                this.resetTableData();\n            }\n        } catch (error) {\n            this.logger.warning(\"Could not set table data\", error);\n            this.resetTableData();\n        }\n    }\n\n    private resetTableData(): void {\n        this.setProperty(\"/tableDataSource\", undefined);\n        this.setProperty(\"/tableColumns\", []);\n        // prevent pass-by-reference between /tableColumns and /tableInitialColumns\n        // use getTableInitialColumns() in run time, instead of setProperty(\"/tableInitialColumns\", ...)\n        // this.setProperty(\"/tableInitialColumns\", []);\n        this.setProperty(\"/tableRows\", []);\n    }\n}\n"],"mappings":"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","ignoreList":[]}