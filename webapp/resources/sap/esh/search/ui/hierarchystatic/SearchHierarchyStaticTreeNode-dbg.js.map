{"version":3,"file":"SearchHierarchyStaticTreeNode-dbg.js","names":["sap","ui","define","___eventlogging_UserEvents","__TreeNode","_interopRequireDefault","obj","__esModule","default","UserEventType","TreeNode","SearchHierarchyStaticTreeNode","hasFilter","icon","constructor","props","getData","facet","setExpanded","expanded","updateUI","mixinFilterNodes","getTreeNodeFactory","toggleFilter","setFilter","activateFilters","set","filterCondition","sina","createSimpleCondition","operator","ComparisonOperator","DescendantOf","attribute","attributeId","attributeLabel","title","value","id","valueLabel","label","uiFilter","model","getProperty","removeExistingFilters","config","searchInAreaOverwriteMode","resetQuickSelectDataSourceAll","setSearchBoxTerm","resetFilterByFilterConditions","autoInsertCondition","userEventStaticFacetSelect","type","STATIC_FACET_SELECT","clickedValue","clickedLabel","clickedPosition","dataSourceKey","getDataSource","eventLogger","logEvent","autoRemoveCondition","filterConditonsForRemoval","rootCondition","getAttributeConditions","fetchChildTreeNodesImpl","getId","item","i","attributes","length","getLabel","titleAttributes","titleAttribute","startsWith","push","valueFormatted","join","getIcon","filter","createFilter","dataSource","ChildOf","query","createSearchQuery","top","resultSet","getResultSetAsync","hasErrors","getErrors","forEach","error","errorHandler","onError","childTreeNodes","items","node","treeNodeFactory","createTreeNode","expandable","attributesMap","HASHIERARCHYNODECHILD","updateNodePath","path","index","Error","pathPart","childNode","getChildTreeNodeById","addChildTreeNode"],"sources":["SearchHierarchyStaticTreeNode.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\nimport { StaticFacetSelectEvent, UserEventType } from \"../eventlogging/UserEvents\";\nimport { HierarchyNode } from \"../sinaNexTS/sina/HierarchyNode\";\nimport { SearchResultSet } from \"../sinaNexTS/sina/SearchResultSet\";\nimport TreeNode, { TreeNodeProperties } from \"../tree/TreeNode\";\nimport SearchHierarchyStaticFacet from \"./SearchHierarchyStaticFacet\";\n\ninterface SearchHierarchyStaticTreeNodeProperties extends TreeNodeProperties {\n    icon?: string;\n    facet: SearchHierarchyStaticFacet;\n}\n\nexport default class SearchHierarchyStaticTreeNode extends TreeNode {\n    hasFilter: boolean;\n    icon: string;\n    constructor(props: SearchHierarchyStaticTreeNodeProperties) {\n        super(props);\n        this.icon = props.icon;\n        this.getData().facet = props.facet;\n    }\n\n    async setExpanded(expanded: boolean, updateUI?: boolean) {\n        await super.setExpanded(expanded, false);\n        this.getData().facet.mixinFilterNodes();\n        if (updateUI) {\n            this.getTreeNodeFactory().updateUI();\n        }\n    }\n\n    async toggleFilter(): Promise<void> {\n        const facet = this.getData().facet as SearchHierarchyStaticFacet;\n        if (!this.hasFilter) {\n            // set filter\n            this.setFilter(true);\n        } else {\n            // remove filter\n            this.setFilter(false);\n        }\n        await facet.activateFilters();\n    }\n\n    setFilter(set: boolean): void {\n        const facet = this.getData().facet as SearchHierarchyStaticFacet;\n        const filterCondition = facet.sina.createSimpleCondition({\n            operator: facet.sina.ComparisonOperator.DescendantOf,\n            attribute: facet.attributeId,\n            attributeLabel: facet.title, // TODO\n            value: this.id,\n            valueLabel: this.label,\n        });\n        const uiFilter = facet.model.getProperty(\"/uiFilter\");\n        if (set) {\n            this.removeExistingFilters();\n            if (facet.model.config.searchInAreaOverwriteMode) {\n                facet.model.config.resetQuickSelectDataSourceAll(facet.model);\n            }\n            facet.model.setSearchBoxTerm(\"\", false);\n            facet.model.resetFilterByFilterConditions(false);\n            uiFilter.autoInsertCondition(filterCondition);\n            const userEventStaticFacetSelect: StaticFacetSelectEvent = {\n                type: UserEventType.STATIC_FACET_SELECT,\n                clickedValue: this.id,\n                clickedLabel: this.label,\n                clickedPosition: -1, // position is not relevant for static facets\n                dataSourceKey: facet.model.getDataSource().id,\n            };\n            facet.model.eventLogger.logEvent(userEventStaticFacetSelect);\n        } else {\n            uiFilter.autoRemoveCondition(filterCondition);\n        }\n    }\n\n    removeExistingFilters() {\n        const facet = this.getData().facet as SearchHierarchyStaticFacet;\n        const uiFilter = facet.model.getProperty(\"/uiFilter\");\n        const filterConditonsForRemoval = uiFilter.rootCondition.getAttributeConditions(facet.attributeId);\n        for (const filterCondition of filterConditonsForRemoval) {\n            uiFilter.autoRemoveCondition(filterCondition);\n        }\n    }\n\n    async fetchChildTreeNodesImpl(): Promise<Array<SearchHierarchyStaticTreeNode>> {\n        // helper functions\n        const getId = (item) => {\n            for (let i = 0; i < item.attributes.length; ++i) {\n                const attribute = item.attributes[i];\n                if (attribute.id === facet.attributeId) {\n                    return attribute.value;\n                }\n            }\n        };\n        const getLabel = (item) => {\n            const label = [];\n            for (let i = 0; i < item.titleAttributes.length; ++i) {\n                const titleAttribute = item.titleAttributes[i];\n                if (!titleAttribute.value.startsWith(\"sap-icon://\")) {\n                    label.push(titleAttribute.valueFormatted);\n                }\n            }\n            return label.join(\" \");\n        };\n        const getIcon = (item) => {\n            for (let i = 0; i < item.attributes.length; ++i) {\n                const attribute = item.attributes[i];\n                if (typeof attribute.value === \"string\" && attribute.value.startsWith(\"sap-icon://\")) {\n                    return attribute.value;\n                }\n            }\n            return \"sap-icon://none\";\n        };\n\n        const facet = this.getData().facet as SearchHierarchyStaticFacet;\n        const filter = facet.sina.createFilter({ dataSource: facet.dataSource });\n        filter.autoInsertCondition(\n            facet.sina.createSimpleCondition({\n                attribute: facet.attributeId,\n                value: this.id,\n                operator: facet.sina.ComparisonOperator.ChildOf,\n            })\n        );\n        const query = facet.sina.createSearchQuery({\n            filter: filter,\n            top: 500,\n        });\n        const resultSet = (await query.getResultSetAsync()) as SearchResultSet;\n\n        if (resultSet.hasErrors()) {\n            resultSet.getErrors().forEach((error) => facet.model.errorHandler.onError(error));\n        }\n\n        const childTreeNodes = [];\n        for (let i = 0; i < resultSet.items.length; ++i) {\n            const item = resultSet.items[i];\n            const node = facet.treeNodeFactory.createTreeNode({\n                facet: facet,\n                id: getId(item),\n                label: getLabel(item),\n                icon: getIcon(item),\n                expandable:\n                    !item.attributesMap.HASHIERARCHYNODECHILD ||\n                    item.attributesMap.HASHIERARCHYNODECHILD.value === \"true\",\n            }); // ToDo, try to get rid of artificial attribute 'HASHIERARCHYNODECHILD'\n            childTreeNodes.push(node);\n        }\n        return childTreeNodes;\n    }\n\n    updateNodePath(path: Array<HierarchyNode>, index: number): void {\n        if (path[index].id !== this.id) {\n            throw new Error(\"program error\"); // TODO\n        }\n        if (index + 1 >= path.length) {\n            return;\n        }\n        const pathPart = path[index + 1];\n        let childNode = this.getChildTreeNodeById(pathPart.id) as SearchHierarchyStaticTreeNode;\n        if (!childNode) {\n            const facet = this.getData().facet as SearchHierarchyStaticFacet;\n            childNode = facet.treeNodeFactory.createTreeNode({\n                facet: facet,\n                id: pathPart.id,\n                label: pathPart.label,\n            });\n            this.addChildTreeNode(childNode);\n        }\n        childNode.updateNodePath(path, index + 1);\n    }\n}\n"],"mappings":"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","ignoreList":[]}