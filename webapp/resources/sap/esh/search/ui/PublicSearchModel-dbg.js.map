{"version":3,"file":"PublicSearchModel-dbg.js","names":["sap","ui","define","JSONModel","___sinaNexTS_sina_cloneUtil","clonePublic","PublicSearchModel","extend","constructor","_constructor","settings","JSONModel.prototype.constructor.call","modelName","internalSearchModel","setPropertyFromInternalModel","_setPropertyFromInternalModel","internalModel","sPath","oValue","oContext","bAsyncUpdate","propertyValue","absolutePath","getPath","fnDataToBeCloned","item","tiles","sinaItem","searchResults","items","map","searchResultItem","index","clonedData","resultSetItem","key","data","title","selected","setSelected","select","setProperty","selectionEnabled","setSelectionEnabled","enable","customItemStyleClass","setCustomItemStyleClass","error","Error","setPropertyInternal","undefined","_setPropertyInternal","success","publicProperty","isPublicProperty","length","targetPath","JSONModel.prototype.setProperty.call","startsWith","endsWith","updateMultiSelectionSelected","_setProperty","successPublicModel","propertyPathSearchModel","replace","successInternalModel","console","log","_isPublicProperty","publicSearchModelPropertyPath","filter","prop","sourcePath","RegExp","match","defaultModelName"],"sources":["PublicSearchModel.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\nimport Context from \"sap/ui/model/Context\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\nimport SearchModel from \"./SearchModel\";\nimport { ResultSet, ResultSetItem, ResultSetItemData } from \"./ResultSetApi\";\nimport { clonePublic } from \"./sinaNexTS/sina/cloneUtil\";\nimport { FormattedResultItem } from \"./SearchResultFormatter\";\n\nexport interface $PublicSearchModelSettings {\n    modelName: string;\n    internalSearchModel: SearchModel;\n}\n\n/**\n * @namespace sap.esh.search.ui\n */\n\nexport default class PublicSearchModel extends JSONModel {\n    private internalSearchModel: SearchModel;\n\n    public static defaultModelName = \"publicSearchModel\";\n    public static publicSearchModelPropertyPath: Array<{\n        sourcePath: string | RegExp;\n        targetPath?: string | ((sPath: string) => string);\n    }> = [\n        // when changing this list, make sure to keep QUnit test in sync: PublicSearchModel.spec.js\n        { sourcePath: \"/results\" },\n        {\n            sourcePath: /^\\/results\\/.*\\/selected$/, // RegExp: Starts with '/results' and ends with '/selected'\n            targetPath: (sPath) => sPath.replace(\"/results/\", \"/results/items/\"),\n        },\n        {\n            sourcePath: /^\\/tableRows\\/.*\\/selected$/, // RegExp: Starts with '/tableRows' and ends with '/selected'\n            targetPath: (sPath) => sPath.replace(\"/tableRows/\", \"/results/items/\"),\n        },\n        {\n            sourcePath: /^\\/results\\/.*\\/selectionEnabled$/, // RegExp: Starts with '/results' and ends with '/selectionEnabled'\n            targetPath: (sPath) => sPath.replace(\"/results/\", \"/results/items/\"),\n        },\n        {\n            sourcePath: /^\\/tableRows\\/.*\\/selectionEnabled$/, // RegExp: Starts with '/tableRows' and ends with '/selectionEnabled'\n            targetPath: (sPath) => sPath.replace(\"/tableRows/\", \"/results/items/\"),\n        },\n        {\n            sourcePath: /^\\/results\\/.*\\/customItemStyleClass$/, // RegExp: Starts with '/results' and ends with '/customItemStyleClass'\n            targetPath: (sPath) => sPath.replace(\"/results/\", \"/results/items/\"),\n        },\n        {\n            sourcePath: /^\\/tableRows\\/.*\\/customItemStyleClass$/, // RegExp: Starts with '/tableRows' and ends with '/customItemStyleClass'\n            targetPath: (sPath) => sPath.replace(\"/tableRows/\", \"/results/items/\"),\n        },\n        { sourcePath: \"/count\" },\n        { sourcePath: \"/config\" },\n        { sourcePath: \"/singleSelectionSelected\" },\n        { sourcePath: \"/multiSelectionSelected\" },\n        { sourcePath: \"/multiSelectionObjects\" },\n        { sourcePath: \"/resultviewSelectionVisibility\" },\n        { sourcePath: \"/hierarchyNodePaths\" },\n    ];\n    public modelName: string; // name used to bind to controls (see SearchCompositeControl)\n\n    constructor(settings: Partial<$PublicSearchModelSettings>) {\n        super();\n        this.modelName = settings.modelName;\n        this.internalSearchModel = settings.internalSearchModel;\n    }\n\n    public setPropertyFromInternalModel(\n        internalModel: SearchModel,\n        sPath: string,\n        oValue: unknown,\n        oContext?: Context,\n        bAsyncUpdate?: boolean\n    ) {\n        let propertyValue;\n        let absolutePath = sPath;\n        if (oContext) {\n            absolutePath = `${oContext.getPath()}/${sPath}`;\n        }\n        if (absolutePath === \"/results\") {\n            const fnDataToBeCloned = (item) => {\n                if (item[\"type\"] === \"appcontainer\") {\n                    return item.tiles;\n                } else {\n                    return item.sinaItem;\n                }\n            };\n            // search results\n            let searchResults: ResultSet;\n            try {\n                searchResults = {\n                    items: (oValue as FormattedResultItem[]).map((searchResultItem, index) => {\n                        // clone the attributes of 'sinaItem' (unformatted result item)\n                        const clonedData = clonePublic(\n                            fnDataToBeCloned(searchResultItem)\n                        ) as ResultSetItemData;\n                        const resultSetItem: ResultSetItem = {\n                            key: searchResultItem.key,\n                            data: clonedData,\n                            title: searchResultItem.title,\n                            selected: searchResultItem.selected,\n                            setSelected: (select: boolean): void => {\n                                internalModel.setProperty(`/results/${index}/selected`, select);\n                            },\n                            selectionEnabled: searchResultItem.selectionEnabled,\n                            setSelectionEnabled: (enable: boolean): void => {\n                                internalModel.setProperty(`/results/${index}/selectionEnabled`, enable);\n                            },\n                            customItemStyleClass: searchResultItem.customItemStyleClass, // css class to be added to result item (table, grid, list)\n                            setCustomItemStyleClass: (customItemStyleClass: string): void => {\n                                internalModel.setProperty(\n                                    `/results/${index}/customItemStyleClass`,\n                                    customItemStyleClass\n                                );\n                            },\n                        };\n                        return resultSetItem;\n                    }),\n                };\n            } catch (error) {\n                throw new Error(\"Public Model could not be updated. Error: \" + error + \")\");\n            }\n\n            propertyValue = searchResults;\n        }\n        if (!propertyValue) {\n            propertyValue = oValue;\n        }\n        this.setPropertyInternal(absolutePath, propertyValue, undefined, bAsyncUpdate);\n    }\n\n    setPropertyInternal(sPath: string, oValue: unknown, oContext?: Context, bAsyncUpdate?: boolean): boolean {\n        let absolutePath = sPath;\n        let success;\n        if (oContext) {\n            absolutePath = `${oContext.getPath()}/${sPath}`;\n        }\n        const publicProperty = this.isPublicProperty(absolutePath);\n        if (publicProperty.length > 0) {\n            if (typeof publicProperty[0]?.targetPath !== \"undefined\") {\n                // property shall be renamed for public model\n                if (typeof publicProperty[0]?.targetPath === \"function\") {\n                    success = super.setProperty(\n                        publicProperty[0]?.targetPath(absolutePath),\n                        oValue,\n                        undefined,\n                        bAsyncUpdate\n                    );\n                } else {\n                    success = super.setProperty(\n                        publicProperty[0]?.targetPath,\n                        oValue,\n                        oContext,\n                        bAsyncUpdate\n                    );\n                }\n            } else {\n                // default\n                success = super.setProperty(sPath, oValue, oContext, bAsyncUpdate);\n            }\n            // update 'multiSelectionObjects', ... of internal model\n            if (absolutePath.startsWith(\"/results/\") && absolutePath.endsWith(\"/selected\")) {\n                // console.log(\"SELECTION: publ model, set 'selected' property (path: '/results/.../selected')\");\n                this.internalSearchModel.updateMultiSelectionSelected();\n            }\n        } else {\n            // this property is private and shall not be added to public search model\n        }\n        return success;\n    }\n\n    setProperty(sPath: string, oValue: unknown, oContext?: Context, bAsyncUpdate?: boolean): boolean {\n        // in general we need to make sure this model is only updated by ELISA SearchModel !!!\n        // Changeable properties:\n        // - /results/items[...]/selected\n        // - /results/items[...]/selectionEnabled\n        // - /results/items[...]/customItemStyleClass\n        let absolutePath = sPath;\n        if (oContext) {\n            absolutePath = `${oContext.getPath()}/${sPath}`;\n        }\n\n        if (absolutePath.startsWith(\"/results/items/\") && absolutePath.endsWith(\"/selected\")) {\n            const successPublicModel = super.setProperty(sPath, oValue, oContext, bAsyncUpdate);\n            // selected: Checkbox (item) is set (if visible -> see selection modes)\n            const propertyPathSearchModel = `/results/${absolutePath\n                .replace(\"/results/items/\", \"\")\n                .replace(\"/selected\", \"\")}/selected`;\n            const successInternalModel = this.internalSearchModel.setPropertyInternal(\n                propertyPathSearchModel,\n                oValue,\n                undefined,\n                bAsyncUpdate,\n                false\n            );\n            console.log(\n                \"SELECTION: publ model, set 'selected' property (path: '/results/items/.../selected')\"\n            );\n            this.internalSearchModel.updateMultiSelectionSelected();\n            return successPublicModel && successInternalModel;\n        } else if (absolutePath.startsWith(\"/results/items/\") && absolutePath.endsWith(\"/selectionEnabled\")) {\n            const successPublicModel = super.setProperty(sPath, oValue, oContext, bAsyncUpdate);\n            // selectionEnabled: Checkbox (item) is enabled (if visible -> see selection modes)\n            const propertyPathSearchModel = `/results/${absolutePath\n                .replace(\"/results/items/\", \"\")\n                .replace(\"/selectionEnabled\", \"\")}/selectionEnabled`;\n            const successInternalModel = this.internalSearchModel.setPropertyInternal(\n                propertyPathSearchModel,\n                oValue,\n                undefined,\n                bAsyncUpdate,\n                false\n            );\n            return successPublicModel && successInternalModel;\n        } else if (\n            absolutePath.startsWith(\"/results/items/\") &&\n            absolutePath.endsWith(\"/customItemStyleClass\")\n        ) {\n            const successPublicModel = super.setProperty(sPath, oValue, oContext, bAsyncUpdate);\n            const propertyPathSearchModel = `/results/${absolutePath\n                .replace(\"/results/items/\", \"\")\n                .replace(\"/customItemStyleClass\", \"\")}/customItemStyleClass`;\n            const successInternalModel = this.internalSearchModel.setPropertyInternal(\n                propertyPathSearchModel,\n                oValue,\n                undefined,\n                bAsyncUpdate,\n                false\n            );\n            return successPublicModel && successInternalModel;\n        } else {\n            throw new Error(\n                `The public search model '${this.modelName}' is read-only but for properties \"/results/items/<idx>/selected\", \"/results/items/<idx>/selectionEnabled\" and \"/results/items/<idx>/customItemStyleClass\". You are changing property '${absolutePath}'.`\n            );\n        }\n    }\n\n    isPublicProperty(sPath): Array<{\n        sourcePath: string | RegExp;\n        targetPath?: string | ((sPath: string) => string);\n    }> {\n        const publicProperty = PublicSearchModel.publicSearchModelPropertyPath.filter((prop) => {\n            if (prop.sourcePath instanceof RegExp) {\n                return sPath.match(prop.sourcePath);\n            } else {\n                return prop.sourcePath === sPath;\n            }\n        });\n        return publicProperty;\n    }\n}\n"],"mappings":"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","ignoreList":[]}