{"version":3,"file":"BreadcrumbsFormatter.js","names":["sap","ui","define","___sinaNexTS_sina_HierarchyDisplayType","HierarchyDisplayType","Formatter","model","constructor","this","formatNodePaths","searchResultSet","path","_selectNodePath","formatHierarchyAttribute","name","paths","hierarchyNodePaths","Array","isArray","length","i","attributeName","attrMetadata","query","getDataSource","attributesMetadata","find","attributeMetadata","id","isHierarchy","hierarchyDisplayType","HierarchyResultView","StaticHierarchyFacet","__exports","__esModule"],"sources":["BreadcrumbsFormatter.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\nimport SearchModel from \"./SearchModel\";\nimport { AttributeMetadata } from \"./sinaNexTS/sina/AttributeMetadata\";\nimport { HierarchyDisplayType } from \"./sinaNexTS/sina/HierarchyDisplayType\";\nimport { HierarchyNode } from \"./sinaNexTS/sina/HierarchyNode\";\nimport { HierarchyNodePath } from \"./sinaNexTS/sina/HierarchyNodePath\";\nimport { SearchResultSet } from \"./sinaNexTS/sina/SearchResultSet\";\n\nexport class Formatter {\n    model: SearchModel;\n    constructor(model: SearchModel) {\n        this.model = model;\n    }\n    formatNodePaths(searchResultSet: SearchResultSet): Array<HierarchyNode> {\n        if (searchResultSet) {\n            const path = this._selectNodePath(searchResultSet);\n            if (path) {\n                return path.path;\n            }\n        }\n        return [];\n    }\n\n    formatHierarchyAttribute(searchResultSet: SearchResultSet): string {\n        if (searchResultSet) {\n            const path = this._selectNodePath(searchResultSet);\n            if (path) {\n                return path.name;\n            }\n        }\n        return \"\";\n    }\n\n    _selectNodePath(searchResultSet: SearchResultSet): HierarchyNodePath {\n        const paths = searchResultSet.hierarchyNodePaths;\n        if (paths && Array.isArray(paths) && paths.length > 0) {\n            for (let i = 0; i < paths.length; i++) {\n                const path = paths[i];\n                const attributeName = path.name;\n                if (path && Array.isArray(path.path) && attributeName) {\n                    const attrMetadata = searchResultSet.query\n                        .getDataSource()\n                        ?.attributesMetadata?.find(\n                            (attributeMetadata) => attributeMetadata.id === attributeName\n                        ) as AttributeMetadata | undefined;\n                    if (\n                        attrMetadata &&\n                        attrMetadata.isHierarchy === true &&\n                        (attrMetadata.hierarchyDisplayType === HierarchyDisplayType.HierarchyResultView ||\n                            attrMetadata.hierarchyDisplayType === HierarchyDisplayType.StaticHierarchyFacet)\n                    ) {\n                        return path;\n                    }\n                }\n            }\n        }\n        return null;\n    }\n}\n"],"mappings":";;;;;AAAAA,IAAAC,GAAAC,OAAA,mDAAAC,GAAA,mBAOSC,EAAoBD,EAAA,wBAKtB,MAAME,EACTC,MACAC,YAAYD,GACRE,KAAKF,MAAQA,CACjB,CACAG,gBAAgBC,GACZ,GAAIA,EAAiB,CACjB,MAAMC,EAAOH,KAAKI,gBAAgBF,GAClC,GAAIC,EAAM,CACN,OAAOA,EAAKA,IAChB,CACJ,CACA,MAAO,EACX,CAEAE,yBAAyBH,GACrB,GAAIA,EAAiB,CACjB,MAAMC,EAAOH,KAAKI,gBAAgBF,GAClC,GAAIC,EAAM,CACN,OAAOA,EAAKG,IAChB,CACJ,CACA,MAAO,EACX,CAEAF,gBAAgBF,GACZ,MAAMK,EAAQL,EAAgBM,mBAC9B,GAAID,GAASE,MAAMC,QAAQH,IAAUA,EAAMI,OAAS,EAAG,CACnD,IAAK,IAAIC,EAAI,EAAGA,EAAIL,EAAMI,OAAQC,IAAK,CACnC,MAAMT,EAAOI,EAAMK,GACnB,MAAMC,EAAgBV,EAAKG,KAC3B,GAAIH,GAAQM,MAAMC,QAAQP,EAAKA,OAASU,EAAe,CACnD,MAAMC,EAAeZ,EAAgBa,MAChCC,iBACCC,oBAAoBC,KACjBC,GAAsBA,EAAkBC,KAAOP,GAExD,GACIC,GACAA,EAAaO,cAAgB,OAC5BP,EAAaQ,uBAAyB1B,EAAqB2B,qBACxDT,EAAaQ,uBAAyB1B,EAAqB4B,sBACjE,CACE,OAAOrB,CACX,CACJ,CACJ,CACJ,CACA,OAAO,IACX,EACH,IAAAsB,EAAA,CAAAC,WAAA,MAAAD,EAAA5B,YAAA,OAAA4B,CAAA","ignoreList":[]}