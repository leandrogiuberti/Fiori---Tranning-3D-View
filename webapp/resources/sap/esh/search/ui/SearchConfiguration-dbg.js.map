{"version":3,"file":"SearchConfiguration-dbg.js","names":["sap","ui","define","__SearchResultListSelectionHandler","__SearchResultListItemNote","__SearchConfigurationSettings","Log","assert","___SelectionMode","_interopRequireDefault","obj","__esModule","default","SearchResultListSelectionHandler","SearchResultListItemNote","SearchConfigurationSettings","defaultSearchConfigurationSettings","deprecatedParameters","urlForbiddenParameters","SelectionMode","SearchConfiguration","log","getLogger","dataSourceConfigurations","dataSourceConfigurations_Regexes","defaultDataSourceConfig","searchResultListItem","undefined","searchResultListItemControl","searchResultListItemContent","searchResultListItemContentControl","searchResultListSelectionHandler","getName","searchResultListSelectionHandlerControl","documentDataSourceConfiguration","_dataSourceLoadingProms","_loadCustomModulesProm","constructor","configuration","extendSearchConfiguration","aiNlqExplainBar","isUshell","aiNlq","enableCharts","reloadOnUrlChange","readUshellConfiguration","readOutdatedUshellConfiguration","updateConfigFromUrlParameters","initDataSourceConfig","checkForDeprecatedParameters","parameter","Object","prototype","hasOwnProperty","call","msg","replacement","replacedBy","resultviewSelectionMode","MultipleItems","None","replacementInfo","config","window","renderers","fiori2","componentData","esearch","e","debug","target","sources","assign","searchBusinessObjects","dataSources","i","length","dataSourceConfig","id","regex","flags","regexFlags","regexObject","RegExp","push","message","JSON","stringify","warning","dataSourceConfiguration","noteprocessorurl","getParameterType","parameterName","parseBoolean","value","toLowerCase","parseEsDevConfig","parse","urlParameters","parseUrlParameters","parameterValue","includes","startsWith","resultViewTypes","split","filter","resultViewType","parameterType","parseInt","URLSearchParams","urlSearchParams","location","search","fromEntries","entries","loadCustomModulesAsync","dataSourceConfigurationProm","dataSourceConfigurationsProms","dataSourceId","loadCustomModulesForDataSourceIdAsync","Promise","all","loadCustomModulesForDataSourcesAsync","dataSourcesHints","dataSourcesLoadingProms","dataSourceHints","Array","isArray","dataSourceLoadingProm","loadCustomModulesForDataSourceAsync","dataSource","resolve","customControlAttrNames","moduleAttrName","controlAttrName","_prepareDataSourceConfigurationForDataSource","customControlProm","customControlProms","_doLoadCustomModulesAsync","_resolvedOrFailed","then","defaultModuleName","defaultControl","that","require","replace","customControl","getDataSourceConfig","test","isDocumentConnector","isWebCompSearchFieldGroupEnabled","FF_useWebComponentsSearchInput","document","querySelector"],"sources":["SearchConfiguration.ts"],"sourcesContent":["/*!\n * SAPUI5\n * Copyright (c) 2025 SAP SE or an SAP affiliate company. All rights reserved.\n * \n */\nimport SearchResultListSelectionHandler from \"./controls/resultview/SearchResultListSelectionHandler\";\nimport { DataSource } from \"./sinaNexTS/sina/DataSource\";\nimport SearchResultListItemNote from \"./controls/resultview/SearchResultListItemNote\";\nimport SearchConfigurationSettings, {\n    defaultSearchConfigurationSettings,\n    deprecatedParameters,\n    urlForbiddenParameters,\n} from \"./SearchConfigurationSettings\";\nimport Log from \"sap/base/Log\";\nimport assert from \"sap/base/assert\";\nimport { DataSourceConfiguration } from \"./SearchConfigurationTypes\";\nimport { SelectionMode } from \"./SelectionMode\";\n\nexport default class SearchConfiguration extends SearchConfigurationSettings {\n    private log = Log.getLogger(\"sap.esh.search.ui.SearchConfiguration\");\n    private dataSourceConfigurations: Record<string, DataSourceConfiguration>;\n    private dataSourceConfigurations_Regexes: Array<DataSourceConfiguration> = [];\n    private defaultDataSourceConfig: DataSourceConfiguration = {\n        searchResultListItem: undefined,\n        searchResultListItemControl: undefined,\n\n        searchResultListItemContent: undefined,\n        searchResultListItemContentControl: undefined,\n\n        searchResultListSelectionHandler: SearchResultListSelectionHandler[\"getMetadata\"]().getName(), // ToDo\n        searchResultListSelectionHandlerControl: SearchResultListSelectionHandler,\n    };\n    private documentDataSourceConfiguration: DataSourceConfiguration;\n\n    _dataSourceLoadingProms: Record<string, any>;\n    _loadCustomModulesProm: Promise<any>;\n\n    /**\n     * @this SearchConfiguration\n     * @constructor\n     */\n    constructor(configuration?: Partial<SearchConfigurationSettings> | SearchConfiguration) {\n        super();\n        SearchConfiguration.extendSearchConfiguration(this, configuration);\n        this.aiNlqExplainBar ??= false;\n        if (this.isUshell) {\n            this.aiNlq = true;\n            this.enableCharts = true;\n            this.reloadOnUrlChange = false;\n            this.readUshellConfiguration();\n            this.readOutdatedUshellConfiguration();\n        }\n        this.updateConfigFromUrlParameters();\n        this.initDataSourceConfig();\n        this.checkForDeprecatedParameters(configuration);\n    }\n\n    private checkForDeprecatedParameters(\n        configuration?: Partial<SearchConfigurationSettings> | SearchConfiguration\n    ): void {\n        for (const parameter in deprecatedParameters) {\n            if (configuration && Object.prototype.hasOwnProperty.call(configuration, parameter)) {\n                // if the provided value is the same as the default, skip the assertion\n                if (configuration[parameter] === defaultSearchConfigurationSettings[parameter]) {\n                    continue;\n                }\n                // stakeholder explicitly set this property\n                let msg = `You are using a deprecated configuration property for SearchCompositeControl which will be removed in a future release: '${parameter}'.`;\n                const replacement = deprecatedParameters[parameter];\n                if (replacement.replacedBy) {\n                    // do auto-assignment old => new\n                    if (replacement.replacedBy === \"enableMultiSelectionResultItems\") {\n                        if (this[parameter] === true) {\n                            this.resultviewSelectionMode = SelectionMode.MultipleItems;\n                        } else {\n                            this.resultviewSelectionMode = SelectionMode.None;\n                        }\n                    } else {\n                        this[replacement.replacedBy] = this[parameter];\n                    }\n                    msg += `\\nPlease use '${replacement.replacedBy}' instead.`;\n                }\n                if (replacement.replacementInfo) {\n                    msg += `\\n${replacement.replacementInfo}`;\n                }\n                assert(false, msg);\n            }\n        }\n    }\n\n    private readUshellConfiguration(): void {\n        // read global config\n        try {\n            const config = window[\"sap-ushell-config\"].renderers.fiori2.componentData.config.esearch;\n            SearchConfiguration.extendSearchConfiguration(this, config);\n        } catch (e) {\n            this.log.debug(\"Could not read ushell configuration\", e);\n        }\n    }\n\n    private static extendSearchConfiguration<T extends object>(target: T, ...sources: any[]): T {\n        // we calso take over properties having value null/undefined.\n        //   - it is currently possible to wipe out properties like 'performanceLogger' (ELISA default)\n        //   - we might want to use more sophisticated merging logic in the future\n        return Object.assign(target, ...sources);\n    }\n\n    readOutdatedUshellConfiguration(): void {\n        try {\n            // get config\n            const config = window[\"sap-ushell-config\"].renderers.fiori2.componentData.config;\n\n            // due to historical reasons the config parameter searchBusinessObjects is not in esearch but in parent object\n            // copy this parameter to config object\n            if (typeof config.searchBusinessObjects !== \"undefined\") {\n                if (config.searchBusinessObjects === \"hidden\" || config.searchBusinessObjects === false) {\n                    this.searchBusinessObjects = false;\n                } else {\n                    this.searchBusinessObjects = true;\n                }\n            }\n        } catch (e) {\n            this.log.debug(\"Could not read ushell configuration\", e);\n        }\n    }\n\n    initDataSourceConfig(): void {\n        // Prepare caching map for custom datasource configurations\n        this.dataSourceConfigurations = {};\n        this.dataSourceConfigurations_Regexes = [];\n\n        if (this.dataSources) {\n            for (let i = 0; i < this.dataSources.length; i++) {\n                const dataSourceConfig = this.dataSources[i];\n                if (dataSourceConfig.id) {\n                    this.dataSourceConfigurations[dataSourceConfig.id] = dataSourceConfig;\n                } else if (dataSourceConfig.regex) {\n                    const flags = dataSourceConfig.regexFlags || undefined;\n                    const regexObject = new RegExp(dataSourceConfig.regex, flags);\n                    if (regexObject) {\n                        dataSourceConfig.regexObject = regexObject;\n                        this.dataSourceConfigurations_Regexes.push(dataSourceConfig);\n                    }\n                } else {\n                    const message =\n                        \"Following datasource configuration does neither include a valid id nor a regular expression, therefore it is ignored:\\n\" +\n                        JSON.stringify(dataSourceConfig);\n                    this.log.warning(message);\n                }\n            }\n        }\n        this.dataSources = undefined;\n\n        // Special logic for Document Result List Item\n        this.documentDataSourceConfiguration = {\n            searchResultListItem: \"sap.esh.search.ui.controls.SearchResultListItemDocument\",\n        };\n\n        // Special logic for Note Result List Item\n        const dataSourceConfiguration: DataSourceConfiguration =\n            this.dataSourceConfigurations.noteprocessorurl || {};\n        this.dataSourceConfigurations.noteprocessorurl = dataSourceConfiguration;\n\n        this.dataSourceConfigurations.noteprocessorurl.searchResultListItemControl =\n            this.dataSourceConfigurations.noteprocessorurl.searchResultListItemControl ||\n            new SearchResultListItemNote();\n        this.dataSourceConfigurations.noteprocessorurl.searchResultListSelectionHandler =\n            this.dataSourceConfigurations.noteprocessorurl.searchResultListSelectionHandler ||\n            \"sap.esh.search.ui.controls.resultview.SearchResultListSelectionHandlerNote\";\n    }\n\n    getParameterType(parameterName): string {\n        if (parameterName in deprecatedParameters) {\n            if (deprecatedParameters[parameterName]) {\n                // if there a replacement use type from replacement\n                parameterName = deprecatedParameters[parameterName].replacedBy;\n            } else {\n                return \"string\"; // just return something so that following logic for printing outdated message works.\n            }\n        }\n\n        // eslint-disable-next-line no-prototype-builtins\n        if (!defaultSearchConfigurationSettings.hasOwnProperty(parameterName)) {\n            return \"\";\n        }\n        return typeof defaultSearchConfigurationSettings[parameterName];\n    }\n\n    parseBoolean(value: string): boolean {\n        if (value.toLowerCase() === \"true\") {\n            return true;\n        }\n        return false;\n    }\n\n    parseEsDevConfig(value: string) {\n        const config = JSON.parse(value);\n        for (const parameterName of urlForbiddenParameters) {\n            delete config[parameterName];\n        }\n        SearchConfiguration.extendSearchConfiguration(this, config);\n    }\n\n    updateConfigFromUrlParameters(): void {\n        const urlParameters = this.parseUrlParameters();\n        for (const parameterName in urlParameters) {\n            const parameterValue = urlParameters[parameterName];\n\n            // ignore forbidden parameters\n            if (urlForbiddenParameters.includes(parameterName)) {\n                continue;\n            }\n\n            // ignore sina url parameters (these parameters are handled by sina itself, see sinaFactory)\n            if (parameterName.startsWith(\"sina\")) {\n                continue;\n            }\n\n            // special handling for parameter demoMode\n            if (parameterName === \"demoMode\") {\n                this.searchBusinessObjects = true;\n                continue;\n            }\n\n            // special handling for parameter resultViewTypes\n            if (parameterName === \"resultViewTypes\") {\n                let resultViewTypes = parameterValue.split(\",\"); // convert to array\n                resultViewTypes = resultViewTypes.filter((resultViewType) => resultViewType.length > 0); // remove empty element\n                this.resultViewTypes = resultViewTypes;\n                continue;\n            }\n\n            // special handling for parameter esDevConfig\n            if (parameterName === \"esDevConfig\") {\n                this.parseEsDevConfig(parameterValue);\n                continue;\n            }\n\n            // default parameter handling\n            const parameterType = this.getParameterType(parameterName);\n            switch (parameterType) {\n                case \"string\":\n                    this[parameterName] = parameterValue;\n                    break;\n                case \"number\":\n                    this[parameterName] = parseInt(parameterValue);\n                    break;\n                case \"boolean\":\n                    this[parameterName] = this.parseBoolean(parameterValue);\n                    break;\n                default:\n                // ignore parameters not defined in SearchConfigurationSettings\n            }\n        }\n    }\n\n    parseUrlParameters(): { [name: string]: string } {\n        if (!URLSearchParams) {\n            return {};\n        }\n        const urlSearchParams = new URLSearchParams(window.location.search);\n        return Object.fromEntries(urlSearchParams.entries());\n    }\n\n    // use this as an early initialization routine\n    loadCustomModulesAsync(): Promise<any> {\n        if (this._loadCustomModulesProm) {\n            return this._loadCustomModulesProm;\n        }\n\n        let dataSourceConfigurationProm;\n        const dataSourceConfigurationsProms = [];\n\n        for (const dataSourceId in this.dataSourceConfigurations) {\n            dataSourceConfigurationProm = this.loadCustomModulesForDataSourceIdAsync(dataSourceId);\n            dataSourceConfigurationsProms.push(dataSourceConfigurationProm);\n        }\n\n        this._loadCustomModulesProm = Promise.all(dataSourceConfigurationsProms);\n        return this._loadCustomModulesProm;\n    }\n\n    async loadCustomModulesForDataSourcesAsync(dataSources, dataSourcesHints): Promise<any> {\n        const dataSourcesLoadingProms = [];\n        for (let i = 0; i < dataSources.length; i++) {\n            const dataSourceHints =\n                (Array.isArray(dataSourcesHints) && dataSourcesHints.length > i && dataSourcesHints[i]) || {};\n            const dataSourceLoadingProm = this.loadCustomModulesForDataSourceAsync(\n                dataSources[i],\n                dataSourceHints\n            );\n            dataSourcesLoadingProms.push(dataSourceLoadingProm);\n        }\n        return Promise.all(dataSourcesLoadingProms);\n    }\n\n    loadCustomModulesForDataSourceAsync(dataSource: DataSource, dataSourceHints = {}): Promise<any> {\n        dataSourceHints = dataSourceHints || {};\n        return this.loadCustomModulesForDataSourceIdAsync(dataSource.id, dataSourceHints);\n    }\n\n    loadCustomModulesForDataSourceIdAsync(\n        dataSourceId?: string,\n        dataSourceHints?: Record<string, any>\n    ): Promise<any> {\n        if (!dataSourceId) {\n            return Promise.resolve();\n        }\n\n        this._dataSourceLoadingProms = this._dataSourceLoadingProms || {};\n\n        let dataSourceLoadingProm = this._dataSourceLoadingProms[dataSourceId];\n        if (!dataSourceLoadingProm) {\n            const customControlAttrNames = [\n                {\n                    moduleAttrName: \"searchResultListItem\",\n                    controlAttrName: \"searchResultListItemControl\",\n                },\n                {\n                    moduleAttrName: \"searchResultListItemContent\",\n                    controlAttrName: \"searchResultListItemContentControl\",\n                },\n                {\n                    moduleAttrName: \"searchResultListSelectionHandler\",\n                    controlAttrName: \"searchResultListSelectionHandlerControl\",\n                },\n            ];\n\n            const dataSourceConfiguration = this._prepareDataSourceConfigurationForDataSource(\n                dataSourceId,\n                dataSourceHints\n            );\n\n            let customControlProm;\n            const customControlProms = [];\n\n            for (let i = 0; i < customControlAttrNames.length; i++) {\n                customControlProm = this._doLoadCustomModulesAsync(\n                    dataSourceId,\n                    dataSourceConfiguration,\n                    customControlAttrNames[i].moduleAttrName,\n                    customControlAttrNames[i].controlAttrName\n                );\n                customControlProms.push(customControlProm);\n            }\n\n            dataSourceLoadingProm = Promise.all(customControlProms);\n            dataSourceLoadingProm._resolvedOrFailed = false;\n            dataSourceLoadingProm.then(function () {\n                dataSourceLoadingProm._resolvedOrFailed = true;\n            });\n            this._dataSourceLoadingProms[dataSourceId] = dataSourceLoadingProm;\n        }\n        return dataSourceLoadingProm;\n    }\n\n    // Helper function to keep 'dataSourceConfiguration' instance unchanged within\n    // its scope while the main function loops over all instances\n    _doLoadCustomModulesAsync(\n        dataSourceId: string,\n        dataSourceConfiguration,\n        moduleAttrName: string,\n        controlAttrName: string,\n        defaultModuleName?: string,\n        defaultControl?\n    ): Promise<void> {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const that = this;\n        return new Promise(function (resolve) {\n            if (\n                dataSourceConfiguration[moduleAttrName] &&\n                (!dataSourceConfiguration[controlAttrName] ||\n                    dataSourceConfiguration[controlAttrName] == that.defaultDataSourceConfig[controlAttrName])\n            ) {\n                try {\n                    sap.ui.require(\n                        [dataSourceConfiguration[moduleAttrName].replace(/[.]/g, \"/\")],\n                        function (customControl) {\n                            dataSourceConfiguration[controlAttrName] = customControl;\n                            resolve();\n                        }\n                    );\n                } catch (e) {\n                    let message =\n                        \"Could not load custom module '\" +\n                        dataSourceConfiguration[moduleAttrName] +\n                        \"' for data source with id '\" +\n                        dataSourceId +\n                        \"'. \";\n                    message += \"Falling back to default data source configuration.\";\n                    that.log.warning(message, e);\n                    dataSourceConfiguration[moduleAttrName] =\n                        defaultModuleName || that.defaultDataSourceConfig[moduleAttrName];\n                    dataSourceConfiguration[controlAttrName] =\n                        defaultControl || that.defaultDataSourceConfig[controlAttrName];\n                    resolve();\n                }\n            } else {\n                if (!dataSourceConfiguration[controlAttrName]) {\n                    dataSourceConfiguration[moduleAttrName] =\n                        defaultModuleName || that.defaultDataSourceConfig[moduleAttrName];\n                    dataSourceConfiguration[controlAttrName] =\n                        defaultControl || that.defaultDataSourceConfig[controlAttrName];\n                }\n                resolve();\n            }\n        });\n    }\n\n    getDataSourceConfig(dataSource: DataSource): any {\n        if (\n            this._dataSourceLoadingProms &&\n            this._dataSourceLoadingProms[dataSource.id] &&\n            !this._dataSourceLoadingProms[dataSource.id]._resolvedOrFailed\n        ) {\n            // Return the default data source if the custom modules\n            // for this particular data source aren't loaded yet.\n            return this.defaultDataSourceConfig;\n        }\n\n        let config = this.dataSourceConfigurations[dataSource.id];\n        if (!config) {\n            config = this.defaultDataSourceConfig;\n            this.dataSourceConfigurations[dataSource.id] = config;\n        }\n\n        return config;\n    }\n\n    _prepareDataSourceConfigurationForDataSource(dataSourceId: string, dataSourcesHints): any {\n        let dataSourceConfiguration: any = {};\n        if (this.dataSourceConfigurations[dataSourceId]) {\n            dataSourceConfiguration = this.dataSourceConfigurations[dataSourceId];\n        } else {\n            for (let i = 0; i < this.dataSourceConfigurations_Regexes.length; i++) {\n                if (this.dataSourceConfigurations_Regexes[i].regexObject.test(dataSourceId)) {\n                    dataSourceConfiguration = this.dataSourceConfigurations_Regexes[i];\n                    break;\n                }\n            }\n        }\n\n        // Use SearchResultListItemDocument control for document-like objects.\n        // Can be overriden by another control in ushell configuration.\n        if (dataSourcesHints && dataSourcesHints.isDocumentConnector) {\n            if (!dataSourceConfiguration.searchResultListItem) {\n                dataSourceConfiguration.searchResultListItem =\n                    this.documentDataSourceConfiguration.searchResultListItem;\n            } else {\n                const message =\n                    \"Will attempt to load '\" +\n                    dataSourceConfiguration.searchResultListItem +\n                    \"' instead of '\" +\n                    this.documentDataSourceConfiguration.searchResultListItem +\n                    \"' for data source '\" +\n                    dataSourceId +\n                    \"'\";\n                this.log.warning(message);\n            }\n        }\n\n        this.dataSourceConfigurations[dataSourceId] = dataSourceConfiguration;\n        return dataSourceConfiguration;\n    }\n\n    isWebCompSearchFieldGroupEnabled(): boolean {\n        // check feature flag\n        if (!this.FF_useWebComponentsSearchInput) {\n            return false;\n        }\n        // in case of ushell, check if the web component is enabled in ushell header\n        if (this.isUshell) {\n            if (!document.querySelector(\"#shell-header .sapUshellShellBar\")) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\n"],"mappings":"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","ignoreList":[]}