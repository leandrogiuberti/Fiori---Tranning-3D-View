{"version":3,"file":"NewsSettingsPanel.js","names":["sap","ui","define","CheckBox","CustomListItem","HBox","Label","List","Switch","Text","Title","VBox","CustomData","__BaseSettingsPanel","___library","___utils_Accessibility","___utils_Constants","___utils_FESRUtil","__PersonalisationUtils","__UshellPersonalizer","_interopRequireDefault","obj","__esModule","default","BaseSettingsPanel","NewsType","getInvisibleText","SETTINGS_PANELS_KEYS","addFESRSemanticStepName","FESR_EVENTS","PersonalisationUtils","UshellPersonalizer","NewsSettingsPanel","extend","init","_init","BaseSettingsPanel.prototype.init.call","this","setProperty","NEWS","_i18nBundle","getText","addAggregation","getContent","attachPanelNavigated","loadNewsFeedSettings","aFavNewsFeed","_getContent","oHeader","setHeader","oTitle","setTitleMessage","oContentVBox","getId","alignItems","justifyContent","items","setNewsList","getPersonalization","_getPersonalization","_this","_temp2","oPersonalizer","_temp","Promise","resolve","getInstance","getPersContainerId","_getPanel","getOwnerComponent","then","_UshellPersonalizer$g","e","reject","_setHeader","headerText","text","oHeaderVBox","addStyleClass","_setTitleMessage","title","titleStyle","oTitleHbox","oTitleVBox","_setNewsList","oShowSwitchLabel","oShowSwitch","customTextOn","customTextOff","change","saveNewsFeedSettings","state","ariaLabelledBy","CHANGE","oCustNewsSwitchContainer","width","oShowAllPrep","oInvisibleText","oList","oNewsListVBox","direction","isCSVFileFormat","_isCSVFileFormat","fileName","split","pop","toLowerCase","_saveNewsFeedSettings","_this2","selectedFeeds","deselectedDefaultFeeds","newsType","oNewsPanel","getNewsType","showDefault","Default","customFileName","getProperty","feedKey","getCustomFeedKey","getItems","forEach","item","newsListContent","getAggregation","newsListHBox","checkbox","label","isSelected","getSelected","groupId","getDefaultGroupId","push","personalizer","read","personalizationData","defaultNewsFeed","favNewsFeed","showAllPreparationRequired","getState","write","setState","setCustomNewsFeed","_getDefaultGroupId","contentBox","customData","getCustomData","length","getValue","setItems","_setItems","aItems","destroyAggregation","oItem","i","oNewsListItemHbox","id","select","selected","enabled","disabled","addCustomData","key","value","group_id","customListItem","content","addItem","_loadNewsFeedSettings","_this3","sFeedKey","showDefaultNewsFeed","setVisible","oPersData","aPersNewsFeed","getCustomOrDefaultNewsFeed","aNewsFeed","_handleDefaultNewsFeed","_handleCustomNewsFeed","setText","mandatoryNewsFeed","getMandatoryDefaultNewsFeed","map","oNewsFeed","isDeselected","includes","favFeedTitles","isFavorite","isSupported","_isSupported","_this4","newsPanel","getParent","Custom","isNoUpdatesNewsFeed"],"sources":["NewsSettingsPanel.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport CheckBox from \"sap/m/CheckBox\";\nimport CustomListItem from \"sap/m/CustomListItem\";\nimport HBox from \"sap/m/HBox\";\nimport Label from \"sap/m/Label\";\nimport List from \"sap/m/List\";\nimport ListItemBase from \"sap/m/ListItemBase\";\nimport Switch from \"sap/m/Switch\";\nimport Text from \"sap/m/Text\";\nimport Title from \"sap/m/Title\";\nimport VBox from \"sap/m/VBox\";\nimport Component from \"sap/ui/core/Component\";\nimport Control from \"sap/ui/core/Control\";\nimport CustomData from \"sap/ui/core/CustomData\";\nimport BaseSettingsPanel from \"./BaseSettingsPanel\";\nimport { NewsType } from \"./library\";\nimport NewsAndPagesContainer from \"./NewsAndPagesContainer\";\nimport NewsPanel, { INewsFeed } from \"./NewsPanel\";\nimport { getInvisibleText } from \"./utils/Accessibility\";\nimport { SETTINGS_PANELS_KEYS } from \"./utils/Constants\";\nimport { addFESRSemanticStepName, FESR_EVENTS } from \"./utils/FESRUtil\";\nimport PersonalisationUtils from \"./utils/PersonalisationUtils\";\nimport UshellPersonalizer from \"./utils/UshellPersonalizer\";\n\ninterface IFavNewsFeed {\n\titems: string[];\n\tshowAllPreparationRequired?: boolean;\n}\n\n/**\n *\n * Class for My Home News Settings Panel.\n *\n * @extends BaseSettingsPanel\n *\n * @author SAP SE\n * @version 0.0.1\n * @since 1.121\n * @private\n *\n * @alias sap.cux.home.NewsSettingsPanel\n */\nexport default class NewsSettingsPanel extends BaseSettingsPanel {\n\tprivate oShowSwitch!: Switch;\n\tprivate oCustNewsSwitchContainer!: HBox;\n\tprivate oList!: List;\n\tprivate oPersonalizer!: UshellPersonalizer;\n\tprivate oNewsPanel!: NewsPanel;\n\tprivate aFavNewsFeed!: INewsFeed[] | string[];\n\tprivate deselectedDefaultFeeds!: string[];\n\tprivate headerText!: Text;\n\tprivate title!: Title;\n\n\t/**\n\t * Init lifecycle method\n\t *\n\t * @public\n\t * @override\n\t */\n\tpublic init(): void {\n\t\tsuper.init();\n\n\t\t//setup panel\n\t\tthis.setProperty(\"key\", SETTINGS_PANELS_KEYS.NEWS);\n\t\tthis.setProperty(\"title\", this._i18nBundle.getText(\"news\"));\n\t\tthis.setProperty(\"icon\", \"sap-icon://newspaper\");\n\n\t\t//setup layout content\n\t\tthis.addAggregation(\"content\", this.getContent());\n\n\t\t//fired every time on panel navigation\n\t\tthis.attachPanelNavigated(() => {\n\t\t\tvoid this.loadNewsFeedSettings();\n\t\t});\n\t\tthis.aFavNewsFeed = [];\n\t}\n\n\t/**\n\t * Returns the content for the News Settings Panel.\n\t *\n\t * @private\n\t * @returns {Control} The control containing the News Settings Panel content.\n\t */\n\tprivate getContent(): Control {\n\t\tconst oHeader = this.setHeader();\n\t\tconst oTitle = this.setTitleMessage();\n\t\tconst oContentVBox = new VBox(this.getId() + \"--idNewsPageOuterVBoX\", {\n\t\t\talignItems: \"Start\",\n\t\t\tjustifyContent: \"SpaceBetween\",\n\t\t\titems: [oHeader, oTitle, this.setNewsList()]\n\t\t});\n\t\treturn oContentVBox;\n\t}\n\n\t/**\n\t * Get personalization instance\n\t */\n\tprivate async getPersonalization() {\n\t\tif (!this.oPersonalizer) {\n\t\t\tthis.oPersonalizer = await UshellPersonalizer.getInstance(\n\t\t\t\tPersonalisationUtils.getPersContainerId(this._getPanel()),\n\t\t\t\tPersonalisationUtils.getOwnerComponent(this._getPanel()) as Component\n\t\t\t);\n\t\t}\n\t\treturn this.oPersonalizer;\n\t}\n\n\t/**\n\t * Returns the content for the News Settings Panel Header.\n\t *\n\t * @private\n\t * @returns {sap.ui.core.Control} The control containing the News Settings Panel's Header content.\n\t */\n\tprivate setHeader() {\n\t\tthis.headerText = new Text(this.getId() + \"--idCustNewsFeedSettingsText\", {\n\t\t\ttext: this._i18nBundle.getText(\"newsFeedSettingsText\")\n\t\t});\n\t\tconst oHeaderVBox = new VBox(this.getId() + \"--idCustNewsFeedSettingsTextContainer\", {\n\t\t\talignItems: \"Start\",\n\t\t\tjustifyContent: \"SpaceBetween\",\n\t\t\titems: [this.headerText]\n\t\t}).addStyleClass(\"sapUiSmallMarginTop sapUiSmallMarginBegin\");\n\t\treturn oHeaderVBox;\n\t}\n\n\t/**\n\t * Returns the content for the News Settings Panel Title description.\n\t *\n\t * @private\n\t * @returns {sap.ui.core.Control} The control containing the News Settings Panel's Title description.\n\t */\n\tprivate setTitleMessage() {\n\t\tthis.title = new Title(this.getId() + \"--idCustNewsFeedSettignsTitle\", {\n\t\t\ttext: this._i18nBundle.getText(\"newsFeedSettingsHeading\"),\n\t\t\ttitleStyle: \"H3\"\n\t\t});\n\t\tconst oTitleHbox = new HBox(this.getId() + \"--idCustNewsFeedSettingsTitleContainer\", {\n\t\t\talignItems: \"Center\",\n\t\t\tjustifyContent: \"SpaceBetween\",\n\t\t\titems: [this.title]\n\t\t});\n\t\tconst oTitleVBox = new VBox(this.getId() + \"--idCustNewsFeedSettingsTitleVBox\", {\n\t\t\talignItems: \"Start\",\n\t\t\tjustifyContent: \"SpaceBetween\",\n\t\t\titems: [oTitleHbox]\n\t\t}).addStyleClass(\"sapUiSmallMarginTop sapUiSmallMarginBegin\");\n\t\treturn oTitleVBox;\n\t}\n\n\t/**\n\t * Returns the content for the news List\n\t *\n\t * @private\n\t * @returns {sap.ui.core.Control} The control containing the News Settings Panel's List\n\t */\n\tprivate setNewsList() {\n\t\t//showAllPrepRequired Switch\n\t\tconst oShowSwitchLabel = new Label(this.getId() + \"--idShowAllCustNewsSwitchLabel\", {\n\t\t\ttext: this._i18nBundle.getText(\"showAllPreparationRequiredSwitchLabel\")\n\t\t});\n\t\tthis.oShowSwitch = new Switch(`${this.getId()}-showSwitch`, {\n\t\t\t// 'ariaLabelledBy': \"idShowAllCustNewsSwitchLabel idShowAllCustNewsSwitch\",\n\t\t\tcustomTextOn: \" \",\n\t\t\tcustomTextOff: \" \",\n\t\t\tchange: () => {\n\t\t\t\tvoid this.saveNewsFeedSettings();\n\t\t\t},\n\t\t\t// 'fesr:change': \"showPrepRequire\",\n\t\t\tstate: false,\n\t\t\tariaLabelledBy: [`${this.getId()}--idShowAllCustNewsSwitchLabel`]\n\t\t});\n\t\taddFESRSemanticStepName(this.oShowSwitch, FESR_EVENTS.CHANGE, \"showPrepRequire\");\n\t\tthis.oCustNewsSwitchContainer = new HBox(this.getId() + \"--idShowAllCustNewsSwitchContainer\", {\n\t\t\talignItems: \"Center\",\n\t\t\titems: [oShowSwitchLabel, this.oShowSwitch],\n\t\t\twidth: \"94%\"\n\t\t}).addStyleClass(\"sapUiSmallMarginTop\");\n\n\t\tconst oShowAllPrep = new VBox(this.getId() + \"--idShowAllCustNewsSwitchVBox\", {\n\t\t\titems: [this.oCustNewsSwitchContainer],\n\t\t\twidth: \"94%\"\n\t\t}).addStyleClass(\"sapUiSmallMarginTop\");\n\t\tconst oInvisibleText = getInvisibleText(`${this.getId()}--newsTitleText`, this._i18nBundle.getText(\"newsTitle\"));\n\t\t//List of news items\n\t\tthis.oList = new List(this.getId() + \"--idCustNewsFeedList\", {\n\t\t\tariaLabelledBy: [\n\t\t\t\toInvisibleText.getId(),\n\t\t\t\t`${this.getId()}--idCustNewsFeedSettingsText`,\n\t\t\t\t`${this.getId()}--idCustNewsFeedSettignsTitle`\n\t\t\t]\n\t\t});\n\t\t//Outer VBox\n\t\tconst oNewsListVBox = new VBox(this.getId() + \"--idCustNewsFeedListContainer\", {\n\t\t\tdirection: \"Column\",\n\t\t\titems: [this.oList, oShowAllPrep, oInvisibleText],\n\t\t\twidth: \"96%\"\n\t\t}).addStyleClass(\"sapUiSmallMarginTop sapUiSmallMarginBegin\");\n\t\treturn oNewsListVBox;\n\t}\n\n\t/**\n\t * Checks if the custom file format is CSV based on the custom file name.\n\t *\n\t * @param {string} fileName - The custom file name.\n\t * @returns {boolean} True if the file format is CSV, otherwise false.\n\t */\n\tprivate isCSVFileFormat(fileName: string): boolean {\n\t\treturn fileName.split(\".\").pop()?.toLowerCase() === \"csv\";\n\t}\n\n\t/**\n\t *\n\t * Saves news feed settings and shows news feed based on selection change of list of switch\n\t *\n\t * @private\n\t */\n\tprivate async saveNewsFeedSettings(): Promise<void> {\n\t\tconst selectedFeeds: string[] = [];\n\t\tconst deselectedDefaultFeeds: string[] = [];\n\t\tconst newsType = this.oNewsPanel?.getNewsType();\n\t\tconst showDefault = newsType === NewsType.Default;\n\t\tconst customFileName = this.oNewsPanel.getProperty(\"customFileName\") as string;\n\t\tconst feedKey = this.oNewsPanel.getCustomFeedKey();\n\n\t\tthis.oList.getItems().forEach((item: ListItemBase) => {\n\t\t\tconst newsListContent = item.getAggregation(\"content\") as Control[];\n\t\t\tconst newsListHBox = newsListContent[0] as HBox;\n\t\t\tconst [checkbox, label] = newsListHBox.getItems() as [CheckBox, Text];\n\t\t\tconst isSelected = checkbox.getSelected();\n\n\t\t\tif (showDefault) {\n\t\t\t\tconst groupId = this.getDefaultGroupId(newsListHBox);\n\t\t\t\tif (!isSelected && groupId) {\n\t\t\t\t\tdeselectedDefaultFeeds.push(groupId);\n\t\t\t\t}\n\t\t\t} else if (isSelected) {\n\t\t\t\tselectedFeeds.push(label.getText());\n\t\t\t}\n\t\t});\n\n\t\tconst personalizer = await this.getPersonalization();\n\t\tconst personalizationData = (await personalizer.read()) || {};\n\n\t\tif (showDefault) {\n\t\t\tpersonalizationData.defaultNewsFeed = { items: deselectedDefaultFeeds };\n\t\t} else {\n\t\t\tpersonalizationData.favNewsFeed = {\n\t\t\t\titems: selectedFeeds,\n\t\t\t\tshowAllPreparationRequired: this.isCSVFileFormat(customFileName) ? false : this.oShowSwitch.getState()\n\t\t\t} as IFavNewsFeed;\n\t\t}\n\n\t\tawait personalizer.write(personalizationData);\n\n\t\t// get the latest value of switch and set the state\n\t\tif (!showDefault) {\n\t\t\tthis.oShowSwitch.setState(personalizationData.favNewsFeed?.showAllPreparationRequired);\n\t\t}\n\t\tawait this.oNewsPanel.setCustomNewsFeed(showDefault ? \"\" : feedKey);\n\t}\n\n\t/** Get groupId info  for the default NewsList\n\t * @param {HBox} [contentBox] content Hbox\n\t * @returns {string} groupId\n\t * @private\n\t */\n\tprivate getDefaultGroupId(contentBox: HBox): string {\n\t\tconst customData = contentBox.getCustomData();\n\t\treturn customData?.length ? (customData[0].getValue() as string) : \"\";\n\t}\n\n\t/** Set items for the NewsList\n\t * @param {Array} [aItems] news items to be set as items aggregation\n\t * @private\n\t */\n\tprivate setItems(aItems: INewsFeed[]) {\n\t\tthis.oList.destroyAggregation(\"items\", true);\n\t\tconst newsType = this.oNewsPanel?.getNewsType();\n\t\tlet showDefault = newsType === NewsType.Default;\n\t\t(aItems || []).forEach((oItem: INewsFeed, i: number) => {\n\t\t\tlet oNewsListItemHbox = new HBox({\n\t\t\t\tid: `${this.getId()}--idCustNewsFeedItemContent--${i}`,\n\t\t\t\talignItems: \"Center\",\n\t\t\t\titems: [\n\t\t\t\t\tnew CheckBox(`${this.getId()}--custNewsFeedItemCheckBox--${i}`, {\n\t\t\t\t\t\tselect: () => {\n\t\t\t\t\t\t\tvoid this.saveNewsFeedSettings();\n\t\t\t\t\t\t},\n\t\t\t\t\t\tselected: oItem.selected as boolean,\n\t\t\t\t\t\tenabled: !oItem.disabled\n\t\t\t\t\t}),\n\t\t\t\t\tnew Text(`${this.getId()}--custNewsFeedItemText--${i}`, { text: oItem.title })\n\t\t\t\t],\n\t\t\t\twidth: \"100%\"\n\t\t\t});\n\t\t\tif (showDefault) {\n\t\t\t\t// if showDefault is true, add group_id as custom data to the item\n\t\t\t\toNewsListItemHbox.addCustomData(new CustomData({ key: \"newsGroupId\", value: oItem.group_id }));\n\t\t\t}\n\t\t\tconst customListItem = new CustomListItem({\n\t\t\t\tid: `${this.getId()}--idCustNewsFeedItem--${i}`,\n\t\t\t\tcontent: [oNewsListItemHbox]\n\t\t\t});\n\t\t\tthis.oList.addItem(customListItem);\n\t\t});\n\t}\n\n\t/**\n\t * Loads news feed settings\n\t *\n\t * @returns {Promise} resolves to news feed settings\n\t */\n\tprivate async loadNewsFeedSettings(): Promise<INewsFeed[] | undefined> {\n\t\tthis.oNewsPanel = this._getPanel() as NewsPanel;\n\t\tconst sFeedKey = this.oNewsPanel.getCustomFeedKey();\n\t\tconst newsType = this.oNewsPanel?.getNewsType();\n\t\tconst showDefaultNewsFeed = newsType === NewsType.Default;\n\n\t\tconst customFileName = this.oNewsPanel.getProperty(\"customFileName\") as string;\n\t\tif (this.isCSVFileFormat(customFileName) || showDefaultNewsFeed) {\n\t\t\tthis.oCustNewsSwitchContainer.setVisible(false);\n\t\t}\n\n\t\tconst oPersonalizer = await this.getPersonalization();\n\t\tconst oPersData = await oPersonalizer.read();\n\t\tconst aPersNewsFeed = (showDefaultNewsFeed ? oPersData?.[\"defaultNewsFeed\"] : oPersData?.[\"favNewsFeed\"]) as IFavNewsFeed;\n\t\tconst showAllPreparationRequired = aPersNewsFeed?.showAllPreparationRequired ?? !aPersNewsFeed;\n\n\t\tlet aNewsFeed: INewsFeed[] = await this.oNewsPanel.getCustomOrDefaultNewsFeed(showDefaultNewsFeed ? \"\" : sFeedKey, false);\n\n\t\tif (showDefaultNewsFeed) {\n\t\t\treturn this._handleDefaultNewsFeed(aNewsFeed, aPersNewsFeed);\n\t\t} else {\n\t\t\treturn this._handleCustomNewsFeed(aNewsFeed, aPersNewsFeed, showAllPreparationRequired);\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param {INewsFeed[]} aNewsFeed\n\t * @param {IFavNewsFeed} aPersNewsFeed\n\t * @returns {INewsFeed[] | undefined}\n\t * @private\n\t * @description Handles the default news feed settings by setting the header text, title, and items.\n\t * It maps the news feed items to set their selected and disabled states based on the personalisation data.\n\t * If no news feed is provided, it returns undefined.\n\t */\n\tprivate _handleDefaultNewsFeed(aNewsFeed: INewsFeed[], aPersNewsFeed: IFavNewsFeed): INewsFeed[] | undefined {\n\t\tthis.headerText.setText(this._i18nBundle.getText(\"defaultNewsSettingsText\"));\n\t\tthis.title.setText(this._i18nBundle.getText(\"defaultNewsSettingsHeading\"));\n\t\tconst mandatoryNewsFeed = this.oNewsPanel.getMandatoryDefaultNewsFeed();\n\t\tthis.deselectedDefaultFeeds = aPersNewsFeed?.items || [];\n\n\t\tif (!aNewsFeed || aNewsFeed.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\taNewsFeed = aNewsFeed.map((oNewsFeed: INewsFeed) => {\n\t\t\t// if group_id not available in deselectedDefaultFeeds, then mark it as selected\n\t\t\tconst isDeselected = oNewsFeed.group_id ? this.deselectedDefaultFeeds.includes(oNewsFeed.group_id) : false;\n\t\t\toNewsFeed.selected = !aPersNewsFeed ? true : !isDeselected;\n\t\t\t// if group_id is available in mandatoryNewsFeed, then mark it as disabled, user cannot hide mandatory feeds\n\t\t\tif (mandatoryNewsFeed.includes(oNewsFeed.group_id ?? \"\")) {\n\t\t\t\toNewsFeed.selected = true;\n\t\t\t\toNewsFeed.disabled = true;\n\t\t\t}\n\n\t\t\treturn oNewsFeed;\n\t\t});\n\n\t\tthis.setItems(aNewsFeed);\n\t\tthis.oShowSwitch.setState(false);\n\t\treturn aNewsFeed;\n\t}\n\n\t/**\n\t * @param {INewsFeed[]} aNewsFeed\n\t * @param aPersNewsFeed\n\t * @param showAllPreparationRequired\n\t * @returns {INewsFeed[] | undefined}\n\t * @private\n\t * This method is responsible for managing the custom news feed settings in the News Settings Panel.\n\t * It updates the header text and title, checks if the news feed is available, and maps the news feed items to set their selected state.\n\t * If the news feed is not available or empty, it returns undefined.\n\t * It also sets the state of the show switch based on the `showAllPreparationRequired` parameter.\n\t */\n\tprivate _handleCustomNewsFeed(\n\t\taNewsFeed: INewsFeed[],\n\t\taPersNewsFeed: IFavNewsFeed,\n\t\tshowAllPreparationRequired: boolean\n\t): INewsFeed[] | undefined {\n\t\tthis.headerText.setText(this._i18nBundle.getText(\"newsFeedSettingsText\"));\n\t\tthis.title.setText(this._i18nBundle.getText(\"newsFeedSettingsHeading\"));\n\n\t\tif (!aNewsFeed || aNewsFeed.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst favFeedTitles: string[] = aPersNewsFeed?.items || aNewsFeed;\n\t\taNewsFeed = aNewsFeed.map((oNewsFeed: INewsFeed) => {\n\t\t\tconst isFavorite = favFeedTitles.includes(oNewsFeed.title);\n\t\t\toNewsFeed.selected = !aPersNewsFeed ? true : isFavorite;\n\t\t\treturn oNewsFeed;\n\t\t});\n\n\t\tthis.aFavNewsFeed = aNewsFeed;\n\t\tthis.setItems(this.aFavNewsFeed);\n\t\tthis.oShowSwitch.setState(!!showAllPreparationRequired);\n\t\treturn aNewsFeed;\n\t}\n\n\t/**\n\t * Checks if the News Settings Panel is supported based on the properties of the News Panel.\n\t *\n\t * @returns {Promise<boolean>} A promise that resolves to true if the News Settings Panel is supported, otherwise false.\n\t */\n\tpublic async isSupported(): Promise<boolean> {\n\t\tconst newsPanel = this._getPanel() as NewsPanel;\n\t\tif (!newsPanel || !(newsPanel?.getParent() as NewsAndPagesContainer).getProperty(\"newsFeedVisibility\")) {\n\t\t\treturn Promise.resolve(false);\n\t\t}\n\n\t\treturn Promise.resolve(\n\t\t\t(newsPanel.getNewsType() === NewsType.Custom || newsPanel.getNewsType() === NewsType.Default) &&\n\t\t\t\t!newsPanel.isNoUpdatesNewsFeed()\n\t\t);\n\t}\n}\n"],"mappings":"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","ignoreList":[]}