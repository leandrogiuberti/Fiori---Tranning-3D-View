{"version":3,"file":"InsightsAdditionPanel.js","names":["sap","ui","define","Log","CardHelper","Button","sap_m_library","MessageBox","MessageToast","VBox","__BaseSettingsPanel","__CardsPanel","__InsightsContainer","___utils_Constants","___utils_FeatureUtils","___utils_FESRUtil","_interopRequireDefault","obj","__esModule","default","_catch","body","recover","result","e","then","BackgroundDesign","_finallyRethrows","finalizer","bind","ButtonType","BaseSettingsPanel","CardsPanel","InsightsContainer","CONTENT_ADDITION_PANEL_TYPES","FEATURE_TOGGLES","FESR_IDS","isNavigationSupportedForFeature","addFESRSemanticStepName","FESR_EVENTS","InsightsAdditionPanel","extend","init","_init","BaseSettingsPanel.prototype.init.call","this","setProperty","AI_INSIGHTS_CARDS","_i18nBundle","getText","addCardsButton","getId","text","type","Emphasized","enabled","press","onPressAddCards","PRESS","ADD_AI_CARD","addActionButton","_setupContent","attachEvent","resetAddCardInnerContent","enableAddButton","_enableAddButton","action","setEnabled","_this","_temp","Promise","resolve","_fetchAddCardDialogContent","dialogContent","wrapperVBox","items","backgroundDesign","Solid","height","addAggregation","error","message","reject","_this2","getServiceAsync","_getServiceAsync","cardHelperInstance","fetchAddCardInnerContent","event","_latestGeneratedManifest","getParameters","isValidManifest","Object","keys","length","getInsightsContainer","_getInsightsContainer","layout","getParent","getContent","find","container","isSupported","_isSupported","_this3","_temp3","isPanelSupported","removeActionButton","contentAdditionDialog","removePanel","updateActionButtons","insightsCardIntent","target","semanticObject","_temp2","undefined","AI_GENERATED_CARD","_isNavigationSupporte","_fetchCardsPanel","panel","_onPressAddCards","_this4","addContentDialog","_temp4","setBusy","_createCard","createdCardResponse","cardTitle","header","title","show","close","visible","information","styleClass","cardsPanel","refreshData","_wasThrown","_result","_resetAddCardInnerContent"],"sources":["InsightsAdditionPanel.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport Log from \"sap/base/Log\";\nimport CardHelper from \"sap/insights/CardHelper\";\nimport Button from \"sap/m/Button\";\nimport { BackgroundDesign, ButtonType } from \"sap/m/library\";\nimport MessageBox from \"sap/m/MessageBox\";\nimport MessageToast from \"sap/m/MessageToast\";\nimport VBox from \"sap/m/VBox\";\nimport Control from \"sap/ui/core/Control\";\nimport { Target } from \"sap/ushell/services/Navigation\";\nimport BaseLayout from \"./BaseLayout\";\nimport BaseSettingsPanel from \"./BaseSettingsPanel\";\nimport CardsPanel from \"./CardsPanel\";\nimport ContentAdditionDialog from \"./ContentAdditionDialog\";\nimport InsightsContainer from \"./InsightsContainer\";\nimport { ICardHelper, ICardHelperInstance, ICardManifest } from \"./interface/CardsInterface\";\nimport { CONTENT_ADDITION_PANEL_TYPES, FEATURE_TOGGLES, FESR_IDS } from \"./utils/Constants\";\nimport { isNavigationSupportedForFeature } from \"./utils/FeatureUtils\";\nimport { addFESRSemanticStepName, FESR_EVENTS } from \"./utils/FESRUtil\";\n\n/**\n *\n * Class for Apps Addition Panel in MyHome.\n *\n * @extends BaseSettingsPanel\n *\n * @author SAP SE\n * @version 0.0.1\n * @since 1.136\n * @private\n *\n * @alias sap.cux.home.InsightsAdditionPanel\n */\nexport default class InsightsAdditionPanel extends BaseSettingsPanel {\n\tprivate addCardsButton!: Button;\n\tprivate cardHelperInstance!: ICardHelperInstance;\n\tprivate isPanelSupported!: boolean;\n\tprivate _latestGeneratedManifest!: ICardManifest;\n\t/**\n\t * Init lifecycle method\n\t *\n\t * @public\n\t * @override\n\t */\n\tpublic init() {\n\t\tsuper.init();\n\n\t\t//setup panel\n\t\tthis.setProperty(\"key\", CONTENT_ADDITION_PANEL_TYPES.AI_INSIGHTS_CARDS);\n\t\tthis.setProperty(\"title\", this._i18nBundle.getText(\"insightsCards\"));\n\n\t\t//setup actions\n\t\tthis.addCardsButton = new Button(`${this.getId()}-add-cards-btn`, {\n\t\t\ttext: this._i18nBundle.getText(\"addFromInsightsDialogBtn\"),\n\t\t\ttype: ButtonType.Emphasized,\n\t\t\tenabled: false,\n\t\t\tpress: this.onPressAddCards.bind(this)\n\t\t});\n\t\taddFESRSemanticStepName(this.addCardsButton, FESR_EVENTS.PRESS, FESR_IDS.ADD_AI_CARD);\n\t\tthis.addActionButton(this.addCardsButton);\n\t\t//setup content\n\t\tvoid this._setupContent();\n\t\tthis.attachEvent(\"onDialogClose\", this.resetAddCardInnerContent.bind(this));\n\t}\n\n\t/**\n\t * Enables or disables the \"Add Cards\" button.\n\t *\n\t * @param {boolean} action - If true, the button is enabled; if false, it is disabled.\n\t */\n\tprivate enableAddButton(action: boolean) {\n\t\tthis.addCardsButton.setEnabled(action);\n\t}\n\n\t/**\n\t * It sets up the content for the \"Insights card\" dialog.\n\t * It fetches the inner dialog content for adding a card.\n\t * Adds the VBox to the panel's content aggregation.\n\t *\n\t * This also enables the \"Add\" button once content is fetched.\n\t *\n\t * @private\n\t * @returns {Promise<void>} A promise that resolves when setup is complete.\n\t */\n\tprivate async _setupContent(): Promise<void> {\n\t\ttry {\n\t\t\tconst dialogContent = await this._fetchAddCardDialogContent();\n\t\t\tif (dialogContent) {\n\t\t\t\tconst wrapperVBox = new VBox(`${this.getId()}-wrapperVBox`, {\n\t\t\t\t\titems: dialogContent,\n\t\t\t\t\tbackgroundDesign: BackgroundDesign.Solid,\n\t\t\t\t\theight: \"100%\"\n\t\t\t\t});\n\t\t\t\tthis.addAggregation(\"content\", wrapperVBox);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tLog.error((error as Error).message);\n\t\t}\n\t}\n\n\t/**\n\t * Fetches the dialog content for adding a new card and sets up the callback\n\t * to handle the card generation event, storing the generated manifest and enabling the add button.\n\t *\n\t * @private\n\t * @returns {Promise<Control[]>} A promise that resolves with an array of dialog content controls.\n\t */\n\tprivate async _fetchAddCardDialogContent(): Promise<Control[]> {\n\t\tthis.cardHelperInstance = await (CardHelper as ICardHelper).getServiceAsync();\n\t\treturn this.cardHelperInstance.fetchAddCardInnerContent((event) => {\n\t\t\tthis._latestGeneratedManifest = event.getParameters();\n\t\t\tconst isValidManifest = Object.keys(this._latestGeneratedManifest).length > 1;\n\t\t\tthis.enableAddButton(isValidManifest);\n\t\t});\n\t}\n\n\t/**\n\t * Retrieves the InsightsContainer instance from the parent layout.\n\t *\n\t * @private\n\t * @returns {InsightsContainer | undefined} The InsightsContainer instance or undefined if not found.\n\t */\n\tprivate getInsightsContainer(): InsightsContainer | undefined {\n\t\tconst layout = this.getParent()?.getParent() as BaseLayout;\n\t\treturn layout.getContent().find((container) => container instanceof InsightsContainer);\n\t}\n\n\t/**\n\t * Checks if the Insights Addition Panel is supported.\n\t *\n\t * @public\n\t * @async\n\t * @returns {Promise<boolean>} A promise that resolves to true if supported.\n\t */\n\tpublic async isSupported(): Promise<boolean> {\n\t\tconst insightsCardIntent: Target = {\n\t\t\ttarget: {\n\t\t\t\tsemanticObject: \"IntelligentPrompt\",\n\t\t\t\taction: \"personalize\"\n\t\t\t}\n\t\t};\n\t\tif (this.isPanelSupported === undefined) {\n\t\t\tthis.isPanelSupported = false;\n\t\t\tthis.isPanelSupported = await isNavigationSupportedForFeature(FEATURE_TOGGLES.AI_GENERATED_CARD, insightsCardIntent);\n\t\t}\n\t\t//remove panel if it's not supported\n\t\tif (!this.isPanelSupported) {\n\t\t\tthis.removeActionButton(this.addCardsButton);\n\t\t\tconst contentAdditionDialog = this.getParent() as ContentAdditionDialog;\n\t\t\tcontentAdditionDialog.removePanel(this);\n\t\t\tcontentAdditionDialog.updateActionButtons();\n\t\t}\n\t\treturn this.isPanelSupported;\n\t}\n\n\t/**\n\t * Retrieves the `CardsPanel` instance from the `InsightsContainer`.\n\t *\n\t * @private\n\t * @returns {CardsPanel | undefined} The found `CardsPanel` instance, or `undefined` if not found.\n\t */\n\tprivate _fetchCardsPanel(): CardsPanel | undefined {\n\t\treturn this.getInsightsContainer()\n\t\t\t?.getContent()\n\t\t\t.find((panel): panel is CardsPanel => panel instanceof CardsPanel);\n\t}\n\n\t/**\n\t * Handles the logic for creating and adding a new insight card to cards Panel.\n\t *\n\t * - Sets the dialog to busy while the card creation is in progress.\n\t * - It adds a new card using the latest generated manifest.\n\t * - On success, shows a message toast and closes the dialog.\n\t * - Refreshes the insights cards panel data.\n\t *\n\t * @private\n\t * @returns {Promise<void>} A promise that resolves when the card creation flow completes.\n\t */\n\tprivate async onPressAddCards() {\n\t\tconst addContentDialog = this.getParent() as ContentAdditionDialog;\n\t\ttry {\n\t\t\taddContentDialog.setBusy(true);\n\n\t\t\tconst createdCardResponse = await this.cardHelperInstance._createCard(this._latestGeneratedManifest);\n\t\t\tconst cardTitle = createdCardResponse[\"sap.card\"]?.header?.title;\n\t\t\tMessageToast.show(this._i18nBundle.getText(\"Card_Created\", [cardTitle]) as string);\n\t\t\taddContentDialog.close();\n\t\t\tif (!createdCardResponse?.[\"sap.insights\"]?.visible) {\n\t\t\t\tMessageBox.information(this._i18nBundle.getText(\"INT_CARD_LIMIT_MESSAGEBOX\") as string, {\n\t\t\t\t\tstyleClass: \"msgBoxAlign\"\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconst cardsPanel = this._fetchCardsPanel();\n\t\t\tawait cardsPanel?.refreshData();\n\t\t} catch (error) {\n\t\t\tLog.error((error as Error).message);\n\t\t} finally {\n\t\t\taddContentDialog.setBusy(false);\n\t\t}\n\t}\n\n\t/**\n\t * Resets the internal content related to card addition.\n\t * Disables the \"Add\" button.\n\t *\n\t * @private\n\t */\n\tprivate resetAddCardInnerContent() {\n\t\tthis.cardHelperInstance?.resetAddCardInnerContent();\n\t\tthis.enableAddButton(false);\n\t}\n}\n"],"mappings":"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","ignoreList":[]}