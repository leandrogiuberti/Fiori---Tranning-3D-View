{"version":3,"file":"InsightsCardsSettingsPanel.js","names":["sap","ui","define","ManageCards","__BaseSettingsPanel","___utils_Constants","_interopRequireDefault","obj","__esModule","default","BaseSettingsPanel","SETTINGS_PANELS_KEYS","InsightsCardsSettingsPanel","extend","constructor","prototype","apply","this","arguments","eventAttached","init","_init","BaseSettingsPanel.prototype.init.call","setProperty","INSIGHTS_CARDS","_i18nBundle","getText","addAggregation","_getContent","attachPanelNavigated","event","cardId","getParameter","manageCardsInstance","getParent","attachAfterClose","_getPanel","renderPanel"],"sources":["InsightsCardsSettingsPanel.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport ManageCards from \"sap/insights/ManageCards\";\nimport Dialog from \"sap/m/Dialog\";\nimport Control from \"sap/ui/core/Control\";\nimport BaseSettingsPanel, { BaseSettingsPanel$PanelNavigatedEvent } from \"./BaseSettingsPanel\";\nimport CardsPanel from \"./CardsPanel\";\nimport { SETTINGS_PANELS_KEYS } from \"./utils/Constants\";\n\ninterface IContext {\n\tcardId?: string;\n}\n\n/**\n *\n * Class for My Home Insights Cards Settings Panel.\n *\n * @extends BaseSettingsPanel\n *\n * @author SAP SE\n * @version 0.0.1\n * @since 1.121\n * @private\n *\n * @alias sap.cux.home.InsightsCardsSettingsPanel\n */\nexport default class InsightsCardsSettingsPanel extends BaseSettingsPanel {\n\tprivate eventAttached: boolean = false;\n\tprivate manageCardsInstance!: ManageCards;\n\t/**\n\t * Init lifecycle method\n\t *\n\t * @public\n\t * @override\n\t */\n\tpublic init(): void {\n\t\tsuper.init();\n\n\t\t//setup panel\n\t\tthis.setProperty(\"key\", SETTINGS_PANELS_KEYS.INSIGHTS_CARDS);\n\t\tthis.setProperty(\"title\", this._i18nBundle.getText(\"insightsCards\"));\n\t\tthis.setProperty(\"icon\", \"sap-icon://card\");\n\t\tthis.setProperty(\"showHeader\", false);\n\n\t\t//setup layout content\n\t\tthis.addAggregation(\"content\", this._getContent());\n\n\t\t//fired every time on panel navigation\n\t\tthis.attachPanelNavigated((event: BaseSettingsPanel$PanelNavigatedEvent) => {\n\t\t\tconst cardId = (event.getParameter(\"context\") as IContext)?.cardId;\n\t\t\tthis.manageCardsInstance?.setProperty(\"cardId\", cardId || \"\");\n\t\t\tif (!this.eventAttached) {\n\t\t\t\tthis.eventAttached = true;\n\t\t\t\t(this.getParent() as Dialog)?.attachAfterClose(() => {\n\t\t\t\t\tvoid (this._getPanel() as CardsPanel)?.renderPanel();\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Returns the content for the Insights Cards Settings Panel.\n\t *\n\t * @private\n\t * @returns {Control} The control containing the Insights Cards Settings Panel content.\n\t */\n\tprivate _getContent(): Control {\n\t\tif (!this.manageCardsInstance) {\n\t\t\tthis.manageCardsInstance = new ManageCards();\n\t\t}\n\t\treturn this.manageCardsInstance;\n\t}\n}\n"],"mappings":";;;;AAAAA,IAAAC,GAAAC,OAAA,gFAAAC,EAAAC,EAAAC,GAAA,sBAAAC,EAAAC,GAAA,OAAAA,KAAAC,mBAAAD,EAAAE,UAAA,YAAAF,EAAAE,QAAAF,CAAA,OAQOG,EAAiBJ,EAAAF,GAAA,MAEfO,EAAoBN,EAAA,wBAM7B,MAaqBO,EAAmCF,EAAiBG,OAAA,2CAAAC,YAAA,SAAAA,IAAAJ,EAAAK,UAAAD,YAAAE,MAAAC,KAAAC,WAAAD,KAChEE,cAAyB,KAAK,EAQ/BC,KAAI,SAAAC,IACVC,sBAAAL,MAGAA,KAAKM,YAAY,MAAOZ,EAAqBa,gBAC7CP,KAAKM,YAAY,QAASN,KAAKQ,YAAYC,QAAQ,kBACnDT,KAAKM,YAAY,OAAQ,mBACzBN,KAAKM,YAAY,aAAc,OAG/BN,KAAKU,eAAe,UAAWV,KAAKW,eAGpCX,KAAKY,qBAAsBC,IAC1B,MAAMC,EAAUD,EAAME,aAAa,YAAyBD,OAC5Dd,KAAKgB,qBAAqBV,YAAY,SAAUQ,GAAU,IAC1D,IAAKd,KAAKE,cAAe,CACxBF,KAAKE,cAAgB,KACpBF,KAAKiB,aAAwBC,iBAAiB,UACxClB,KAAKmB,aAA4BC,eAEzC,GAEF,EAQQT,YAAW,SAAAA,IAClB,IAAKX,KAAKgB,oBAAqB,CAC9BhB,KAAKgB,oBAAsB,IAAI9B,CAChC,CACA,OAAOc,KAAKgB,mBACb,IAAC,OA7CmBrB,CAA0B","ignoreList":[]}