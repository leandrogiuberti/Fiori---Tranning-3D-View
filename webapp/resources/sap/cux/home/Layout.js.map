{"version":3,"file":"Layout.js","names":["sap","ui","define","Log","Element","S4MyHome","Container","__AdvancedSettingsPanel","__BaseLayout","__BaseLayoutRenderer","__ContentAdditionDialog","__InsightsCardsSettingsPanel","__InsightsTilesSettingsPanel","__KeyUserLayoutSettingsPanel","__KeyUserNewsPagesSettingsPanel","__KeyUserSettingsDialog","__LayoutSettingsPanel","__NewsAndPagesContainer","__NewsSettingsPanel","__NoDataContainer","__PagePanel","__PageSettingsPanel","__SettingsDialog","__ToDosContainer","___utils_Constants","___utils_DataFormatUtils","___utils_PerformanceUtils","__PersonalisationUtils","_interopRequireDefault","obj","__esModule","default","_iteratorSymbol","Symbol","iterator","_settle","pact","state","value","s","_Pact","v","o","bind","then","observer","prototype","onFulfilled","onRejected","result","this","callback","e","_this","_isSettledPact","thenable","_forTo","array","body","check","i","reject","_cycle","length","AdvancedSettingsPanel","_forOf","target","step","next","done","return","_fixup","TypeError","values","push","BaseLayout","_catch","recover","BaseLayoutRenderer","ContentAdditionDialog","InsightsCardsSettingsPanel","InsightsTilesSettingsPanel","KeyUserLayoutSettingsPanel","KeyUserNewsPagesSettingsPanel","KeyUserSettingsDialog","LayoutSettingsPanel","NewsAndPagesContainer","NewsSettingsPanel","NoDataContainer","PagePanel","PageSettingsPanel","SettingsDialog","ToDosContainer","SETTINGS_PANELS_KEYS","recycleId","setupPerformanceTracking","PersonalisationUtils","Layout","extend","renderer","metadata","designtime","constructor","_constructor","id","settings","BaseLayout.prototype.constructor.call","_shellUserActions","_isDefaultSettingsDialog","_customNoDataContainerPresent","init","_init","BaseLayout.prototype.init.call","setProperty","_addUserActions","Promise","resolve","_temp3","getVisible","_userActionsAdded","userActions","icon","text","_i18nBundle","getText","tooltip","press","openSettingsDialog","getServiceAsync","extensionService","_temp2","toggleUserActions","event","show","getParameter","forEach","userAction","showOnHome","hideOnHome","attachRouteMatched","_temp","action","createUserAction","controlType","shellUserAction","error","warning","Error","message","_openSettingsDialog","selectedKey","context","_this2","settingsDialog","getAggregation","getPanels","_getSettingsPanels","_addPanelsToSettingsDialog","_calculateSectionsState","BaseLayout.prototype.openSettingsDialog.call","closeSettingsDialog","_closeSettingsDialog","close","onBeforeRendering","_onBeforeRendering","_this3","BaseLayout.prototype.onBeforeRendering.call","_setupSettingsDialog","_setupContentAdditionDialog","persContainerId","getProperty","setPersContainerId","getNoDataContainer","_aOrderedSections","setTimeout","_prepareLayoutData","_setupKeyUserSettingsDialog","allPanels","getItems","container","setAssociation","getContent","panel","panelEnableSettings","undefined","enableSettings","defaultSettingsDialog","_getDefaultSettingsDialog","setSettingsDialog","getId","settingsPanel","_getDefaultSettingsPanel","addPanel","sortedPanels","_sortPanels","removeAllPanels","insertPanel","_getLayoutSettingsPanel","_getAdvancedSettingsPanel","panelClassName","getMetadata","getName","settingsPanels","layoutSettingsPanel","advancedSettingsPanel","indexOf","_addSettingsPanel","panels","Object","keys","map","key","find","filter","Boolean","_advancedSettingsPanel","_layoutSettingsPanel","_getNoDataContainer","_noDataContainer","item","setVisible","hasVisibleSection","isLayoutExpanded","aOrderedElements","element","getElementById","completeId","aElements","aElementMap","sId","title","getTooltip","elementVisible","elementCustomSettings","getCustomSettings","sContainerType","blocked","visible","setNoDataContainerVisibility","_setNoDataContainerVisibility","contentVisible","noDataContainer","insertItem","removeItem","_this4","aSettingsPanel","_isCustomNews","oSettingsPanel","resetImportModel","setSectionDetails","_setSectionDetails","_this5","elementArray","_temp7","_temp6","oElementItem","bBlocked","_temp5","_temp4","_this5$checkPagesBloc","aNewsAndPagesPanel","_aNewsAndPagesPanel$l","checkPagesBlocked","checkToDoBlocked","_checkPagesBlocked","_this6","_temp0","_pagesAvailable","_temp9","oPanel","_temp8","getUserAvailablePages","aPages","_checkToDoBlocked","toDoContainer","_toDoAccessible","keyUserSettingsDialog","defaultKeyUserSettingsDialog","keyUserLayoutSettingsPanel","keyUserNewsPagesSettingsPanel","setAggregation","getpagesAvailable","_getpagesAvailable","isToDoAccessible","_isToDoAccessible","customNewAvailable","_customNewAvailable","getSections","_getSections","setSections","_setSections","sections","resetSections","_resetSections","contentAdditionDialog"],"sources":["Layout.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport { Event } from \"jquery\";\nimport Log from \"sap/base/Log\";\nimport UI5Event from \"sap/ui/base/Event\";\nimport Element, { MetadataOptions } from \"sap/ui/core/Element\";\nimport S4MyHome from \"sap/ushell/api/S4MyHome\";\nimport Container from \"sap/ushell/Container\";\nimport Extension from \"sap/ushell/services/Extension\";\nimport Item from \"sap/ushell/services/Extension/Item\";\nimport AdvancedSettingsPanel from \"./AdvancedSettingsPanel\";\nimport BaseContainer from \"./BaseContainer\";\nimport type { $BaseLayoutSettings } from \"./BaseLayout\";\nimport BaseLayout from \"./BaseLayout\";\nimport BaseLayoutRenderer from \"./BaseLayoutRenderer\";\nimport BasePanel from \"./BasePanel\";\nimport BaseSettingsDialog from \"./BaseSettingsDialog\";\nimport BaseSettingsPanel from \"./BaseSettingsPanel\";\nimport ContentAdditionDialog from \"./ContentAdditionDialog\";\nimport InsightsCardsSettingsPanel from \"./InsightsCardsSettingsPanel\";\nimport InsightsTilesSettingsPanel from \"./InsightsTilesSettingsPanel\";\nimport KeyUserLayoutSettingsPanel from \"./KeyUserLayoutSettingsPanel\";\nimport KeyUserNewsPagesSettingsPanel from \"./KeyUserNewsPagesSettingsPanel\";\nimport KeyUserSettingsDialog from \"./KeyUserSettingsDialog\";\nimport LayoutSettingsPanel from \"./LayoutSettingsPanel\";\nimport NewsAndPagesContainer from \"./NewsAndPagesContainer\";\nimport NewsSettingsPanel from \"./NewsSettingsPanel\";\nimport NoDataContainer from \"./NoDataContainer\";\nimport PagePanel from \"./PagePanel\";\nimport PageSettingsPanel from \"./PageSettingsPanel\";\nimport SettingsDialog from \"./SettingsDialog\";\nimport ToDosContainer from \"./ToDosContainer\";\nimport { SETTINGS_PANELS_KEYS } from \"./utils/Constants\";\nimport { recycleId } from \"./utils/DataFormatUtils\";\nimport { setupPerformanceTracking } from \"./utils/PerformanceUtils\";\nimport PersonalisationUtils from \"./utils/PersonalisationUtils\";\n\ninterface IElement {\n\tcompleteId: string;\n\tsContainerType: string;\n\tblocked: boolean;\n\tvisible: boolean;\n\ttitle: string;\n\ttext: string;\n}\n\nexport interface UserActionProperties {\n\ticon: string;\n\ttext: string;\n\ttooltip: string;\n\tpress: () => void;\n}\n\n/**\n *\n * Layout class for the My Home layout.\n *\n * @extends BaseLayout\n *\n * @author SAP SE\n * @version 0.0.1\n * @since 1.121\n *\n * @private\n * @ui5-restricted ux.eng.s4producthomes1\n *\n * @alias sap.cux.home.Layout\n */\nexport default class Layout extends BaseLayout {\n\tprivate _layoutSettingsPanel!: LayoutSettingsPanel;\n\tprivate _advancedSettingsPanel!: AdvancedSettingsPanel;\n\tprivate _isCustomNews!: boolean;\n\tprivate _pagesAvailable!: boolean;\n\tprivate _toDoAccessible!: boolean;\n\tprivate _aOrderedSections!: IElement[] | undefined;\n\tprivate _noDataContainer!: NoDataContainer;\n\tprivate _shellUserActions: Item[] = [];\n\tprivate _userActionsAdded!: boolean;\n\tprivate _isDefaultSettingsDialog: boolean = false;\n\tprivate _customNoDataContainerPresent: boolean = true;\n\n\tstatic readonly metadata: MetadataOptions = {\n\t\tdesigntime: \"sap/cux/home/designtime/Layout.designtime\"\n\t};\n\tstatic renderer: typeof BaseLayoutRenderer = BaseLayoutRenderer;\n\n\t/**\n\t * Constructor for a new layout.\n\t *\n\t * @param {string} [id] ID for the new control, generated automatically if an ID is not provided\n\t * @param {object} [settings] Initial settings for the new control\n\t */\n\tpublic constructor(id?: string, settings?: $BaseLayoutSettings) {\n\t\tsuper(id, settings);\n\t}\n\n\t/**\n\t * Init lifecycle method\n\t *\n\t * @private\n\t * @async\n\t * @override\n\t */\n\tpublic init(): void {\n\t\tsuper.init();\n\n\t\t//setup layout\n\t\tthis.setProperty(\"enableSettings\", true);\n\t\tthis.setProperty(\"enableFullScreen\", true);\n\t}\n\n\t/**\n\t * Adds all user actions to the Fiori launchpad.\n\t *\n\t * @private\n\t */\n\tprivate async _addUserActions() {\n\t\ttry {\n\t\t\tif (this.getVisible() && !this._userActionsAdded) {\n\t\t\t\tthis._userActionsAdded = true;\n\n\t\t\t\t// Configure User Actions\n\t\t\t\tconst userActions: UserActionProperties[] = [\n\t\t\t\t\t{\n\t\t\t\t\t\ticon: \"sap-icon://edit\",\n\t\t\t\t\t\ttext: this._i18nBundle.getText(\"myHomeSettings\") as string,\n\t\t\t\t\t\ttooltip: this._i18nBundle.getText(\"myHomeSettings\") as string,\n\t\t\t\t\t\tpress: () => {\n\t\t\t\t\t\t\tvoid this.openSettingsDialog();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t];\n\n\t\t\t\t// Attach User Actions\n\t\t\t\tconst extensionService = await Container.getServiceAsync<Extension>(\"Extension\");\n\t\t\t\tfor (let action of userActions) {\n\t\t\t\t\tconst shellUserAction = await extensionService.createUserAction(action, {\n\t\t\t\t\t\tcontrolType: \"sap.ushell.ui.launchpad.ActionItem\"\n\t\t\t\t\t});\n\t\t\t\t\tshellUserAction.showOnHome();\n\t\t\t\t\tthis._shellUserActions.push(shellUserAction);\n\t\t\t\t}\n\n\t\t\t\t// Toggle User Actions on Page Change\n\t\t\t\tconst toggleUserActions = (event: UI5Event<{ isMyHomeRoute: boolean }>) => {\n\t\t\t\t\tconst show = event.getParameter(\"isMyHomeRoute\");\n\t\t\t\t\tthis._shellUserActions.forEach(function (userAction) {\n\t\t\t\t\t\tif (show) {\n\t\t\t\t\t\t\tuserAction.showOnHome();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tuserAction.hideOnHome();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t};\n\t\t\t\tS4MyHome.attachRouteMatched({}, toggleUserActions, this);\n\t\t\t}\n\t\t} catch (error: unknown) {\n\t\t\tLog.warning(\"Unable to add User Actions\", error instanceof Error ? error.message : \"\");\n\t\t}\n\t}\n\n\t/**\n\t * Opens the settings dialog for the layout.\n\t * Overriden from the BaseLayout to ensure of all panels\n\t * to the dialog if not already added.\n\t *\n\t * @private\n\t * @param {string} selectedKey The key of the panel to navigate to\n\t * @override\n\t */\n\tpublic async openSettingsDialog(selectedKey: string = \"\", context?: object): Promise<void> {\n\t\tconst settingsDialog = this.getAggregation(\"settingsDialog\") as BaseSettingsDialog;\n\t\tif (settingsDialog.getPanels().length !== this._getSettingsPanels().length) {\n\t\t\tthis._addPanelsToSettingsDialog();\n\t\t}\n\t\tawait this._calculateSectionsState();\n\n\t\tsuper.openSettingsDialog(selectedKey, context);\n\t}\n\n\t/**\n\t * Close Settings Dialog\n\t *\n\t * @private\n\t *\n\t */\n\tpublic closeSettingsDialog(): void {\n\t\tconst settingsDialog = this.getAggregation(\"settingsDialog\") as BaseSettingsDialog;\n\t\tsettingsDialog?.close();\n\t}\n\n\t/**\n\t * onBeforeRendering lifecycle method\n\t *\n\t * @private\n\t * @override\n\t */\n\tpublic async onBeforeRendering(event: Event): Promise<void> {\n\t\tsuper.onBeforeRendering(event);\n\n\t\t//setup common layout features\n\t\tthis._setupSettingsDialog();\n\n\t\t//setup content addition dialog\n\t\tthis._setupContentAdditionDialog();\n\n\t\t// If PersContainerId provided set to PersonalisationUtils\n\t\tconst persContainerId = this.getProperty(\"persContainerId\") as string;\n\t\tif (persContainerId) {\n\t\t\tPersonalisationUtils.setPersContainerId(persContainerId);\n\t\t}\n\t\tthis.getNoDataContainer();\n\t\t//prepare layout data, if not already done\n\t\tif (!this._aOrderedSections) {\n\t\t\tsetTimeout(this._prepareLayoutData.bind(this));\n\t\t}\n\n\t\t// Setup KeyUserPersonalization\n\t\tthis._setupKeyUserSettingsDialog();\n\n\t\t// Initialize Performance Metrics\n\t\tawait setupPerformanceTracking(this);\n\n\t\t//configure user action button if the layout is in an ushell environment\n\t\tawait this._addUserActions();\n\t}\n\n\t/**\n\t * Sets up the settings dialog for the layout.\n\t *\n\t * @private\n\t */\n\tprivate _setupSettingsDialog(): void {\n\t\tconst allPanels: BasePanel[] = [];\n\t\t(this.getItems() || []).forEach((container) => {\n\t\t\t//link container to layout\n\t\t\tcontainer.setAssociation(\"layout\", this);\n\n\t\t\t//enable settings for all panels\n\t\t\tcontainer.getContent().forEach((panel) => {\n\t\t\t\tallPanels.push(panel);\n\t\t\t\tconst panelEnableSettings = panel.getProperty(\"enableSettings\") as boolean;\n\t\t\t\tpanel.setProperty(\"enableSettings\", panelEnableSettings !== undefined ? panelEnableSettings : true);\n\t\t\t});\n\t\t});\n\n\t\tconst enableSettings = this.getProperty(\"enableSettings\") as boolean;\n\t\tconst settingsDialog = this.getAggregation(\"settingsDialog\") as BaseSettingsDialog | undefined;\n\t\tif (!settingsDialog) {\n\t\t\tthis._isDefaultSettingsDialog = true;\n\n\t\t\t// If settings dialog is not provided and settings is enabled, create a default settings dialog\n\t\t\tif (enableSettings) {\n\t\t\t\tconst defaultSettingsDialog = this._getDefaultSettingsDialog(allPanels);\n\t\t\t\tthis.setSettingsDialog(defaultSettingsDialog);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Get default settings dialog\n\t * @private\n\t * @returns {BaseSettingsDialog} Default settings dialog\n\t */\n\tprivate _getDefaultSettingsDialog(allPanels: BasePanel[]): BaseSettingsDialog {\n\t\tconst defaultSettingsDialog = new SettingsDialog(`${this.getId()}-settings-dialog`);\n\n\t\tallPanels.forEach((panel) => {\n\t\t\tconst settingsPanel = this._getDefaultSettingsPanel(panel);\n\t\t\tif (settingsPanel) {\n\t\t\t\tdefaultSettingsDialog.addPanel(settingsPanel);\n\t\t\t}\n\t\t});\n\n\t\t//sort all panels and add them to the settings dialog\n\t\tconst sortedPanels = this._sortPanels(defaultSettingsDialog.getPanels());\n\t\tdefaultSettingsDialog.removeAllPanels();\n\t\tsortedPanels.forEach((panel) => defaultSettingsDialog.addPanel(panel));\n\n\t\tdefaultSettingsDialog.insertPanel(this._getLayoutSettingsPanel(), 0);\n\t\tdefaultSettingsDialog.addPanel(this._getAdvancedSettingsPanel());\n\n\t\treturn defaultSettingsDialog;\n\t}\n\n\t/**\n\t * Get default Settings Panel\n\t *\n\t * @private\n\t */\n\n\tprivate _getDefaultSettingsPanel(panel: BasePanel): BaseSettingsPanel | undefined {\n\t\tlet settingsPanel: BaseSettingsPanel | undefined;\n\t\tconst panelClassName = panel.getMetadata().getName();\n\t\tswitch (panelClassName) {\n\t\t\tcase \"sap.cux.home.NewsPanel\":\n\t\t\t\tsettingsPanel = new NewsSettingsPanel(`${panel.getId()}-news-settings`);\n\t\t\t\tbreak;\n\t\t\tcase \"sap.cux.home.PagePanel\":\n\t\t\t\tsettingsPanel = new PageSettingsPanel(`${panel.getId()}-page-settings`);\n\t\t\t\tbreak;\n\t\t\tcase \"sap.cux.home.TilesPanel\":\n\t\t\t\tsettingsPanel = new InsightsTilesSettingsPanel(`${panel.getId()}-tiles-settings`);\n\t\t\t\tbreak;\n\t\t\tcase \"sap.cux.home.CardsPanel\":\n\t\t\t\tsettingsPanel = new InsightsCardsSettingsPanel(`${panel.getId()}-cards-settings`);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t\tsettingsPanel?.setAssociation(\"panel\", panel);\n\t\treturn settingsPanel;\n\t}\n\n\t/**\n\t * Adds all settings panels to the settings dialog, including\n\t * the layout settings panel and advanced settings panel.\n\t *\n\t * @private\n\t */\n\tprivate _addPanelsToSettingsDialog(): void {\n\t\tconst settingsDialog = this.getAggregation(\"settingsDialog\") as BaseSettingsDialog;\n\n\t\t//sort all panels and add them to the settings dialog\n\t\tconst sortedPanels = this._sortPanels(settingsDialog.getPanels());\n\t\tsettingsDialog.removeAllPanels();\n\t\tsortedPanels.forEach((panel) => settingsDialog.addPanel(panel));\n\n\t\t// Layout Settings should be displayed only if no settings dialog is provided\n\t\tif (this._isDefaultSettingsDialog) {\n\t\t\tconst settingsPanels = settingsDialog.getPanels();\n\t\t\tconst layoutSettingsPanel = this._getLayoutSettingsPanel();\n\t\t\tconst advancedSettingsPanel = this._getAdvancedSettingsPanel();\n\n\t\t\tif (settingsPanels.indexOf(layoutSettingsPanel) !== 0) {\n\t\t\t\tsettingsDialog.insertPanel(layoutSettingsPanel, 0);\n\t\t\t}\n\n\t\t\tif (settingsPanels.indexOf(advancedSettingsPanel) !== settingsPanels.length - 1) {\n\t\t\t\tsettingsDialog.addPanel(advancedSettingsPanel);\n\t\t\t}\n\t\t}\n\n\t\tthis._addSettingsPanel(settingsDialog.getPanels(), true);\n\t}\n\n\t/**\n\t * Sorts settings panels based on a predefined order.\n\t *\n\t * @private\n\t * @returns {BaseSettingsPanel[]} Sorted settings panels.\n\t */\n\tprivate _sortPanels(panels: BaseSettingsPanel[]): BaseSettingsPanel[] {\n\t\treturn Object.keys(SETTINGS_PANELS_KEYS)\n\t\t\t.map((key) => panels.find((panel) => panel?.getProperty(\"key\") === key))\n\t\t\t.filter(Boolean) as BaseSettingsPanel[];\n\t}\n\n\t/**\n\t * Retrieves the advanced settings panel associated with the layout.\n\t *\n\t * @private\n\t * @returns {AdvancedSettingsPanel} The advanced settings panel.\n\t */\n\tprivate _getAdvancedSettingsPanel(): AdvancedSettingsPanel {\n\t\tif (!this._advancedSettingsPanel) {\n\t\t\tthis._advancedSettingsPanel = new AdvancedSettingsPanel(`${this.getId()}-advanced-settings`);\n\t\t\tthis._advancedSettingsPanel.setAssociation(\"panel\", this);\n\t\t}\n\n\t\treturn this._advancedSettingsPanel;\n\t}\n\n\t/**\n\t * Retrieves the layout settings panel associated with the layout.\n\t *\n\t * @private\n\t * @returns {LayoutSettingsPanel} The layout settings panel.\n\t */\n\tprivate _getLayoutSettingsPanel(): LayoutSettingsPanel {\n\t\tif (!this._layoutSettingsPanel) {\n\t\t\tthis._layoutSettingsPanel = new LayoutSettingsPanel(`${this.getId()}-layout-settings`);\n\t\t\tthis._layoutSettingsPanel.setAssociation(\"panel\", this);\n\t\t}\n\n\t\treturn this._layoutSettingsPanel;\n\t}\n\n\t/**\n\t * Setup of no data container\n\t *\n\t * @private\n\t * @returns {NoDataContainer} No data container\n\t */\n\tprivate getNoDataContainer(): NoDataContainer {\n\t\tif (!this._noDataContainer) {\n\t\t\tthis._noDataContainer = this.getItems().find((item) => item instanceof NoDataContainer) as NoDataContainer;\n\n\t\t\t// if no data container is already present, use it\n\t\t\tif (!this._noDataContainer) {\n\t\t\t\tthis._customNoDataContainerPresent = false;\n\t\t\t\tthis._noDataContainer = new NoDataContainer(recycleId(`${this.getId()}-noDataContainer`));\n\t\t\t}\n\t\t\tthis._noDataContainer.setVisible(false);\n\t\t}\n\t\treturn this._noDataContainer;\n\t}\n\t/**\n\t * Prepares the layout data.\n\t *\n\t * @private\n\t */\n\tprivate _prepareLayoutData(): void {\n\t\tlet hasVisibleSection = false;\n\t\tconst isLayoutExpanded = this.getProperty(\"expanded\") as boolean;\n\t\tconst aOrderedElements =\n\t\t\tthis._aOrderedSections?.map((element) => Element.getElementById(element.completeId) as BaseContainer) || [];\n\t\tconst aElements = isLayoutExpanded && aOrderedElements.length ? aOrderedElements : this.getItems();\n\t\t// set aelementsMap as elementMap[] | [];\n\t\tconst aElementMap: IElement[] = [];\n\t\taElements.forEach((element: BaseContainer) => {\n\t\t\tif (element !== this.getNoDataContainer()) {\n\t\t\t\tconst sId = element.getId();\n\n\t\t\t\t//if no title set for container , then layout setting should show tooltip as title within the settings dialog\n\t\t\t\tlet title = element.getProperty(\"title\") as string;\n\t\t\t\tif (!title) {\n\t\t\t\t\ttitle = element.getTooltip() as string;\n\t\t\t\t}\n\t\t\t\tconst elementVisible = element.getVisible();\n\t\t\t\tconst elementCustomSettings = element.getCustomSettings();\n\t\t\t\taElementMap.push({\n\t\t\t\t\tcompleteId: sId,\n\t\t\t\t\tsContainerType: element.getMetadata().getName(),\n\t\t\t\t\tblocked: false,\n\t\t\t\t\tvisible: element.getProperty(\"visible\") as boolean,\n\t\t\t\t\ttitle: elementCustomSettings.title || title,\n\t\t\t\t\ttext: elementCustomSettings.text\n\t\t\t\t});\n\t\t\t\tif (elementVisible) {\n\t\t\t\t\thasVisibleSection = true;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tthis._aOrderedSections = aElementMap;\n\t\tif (!this.getProperty(\"expanded\")) {\n\t\t\tthis.setNoDataContainerVisibility(!hasVisibleSection);\n\t\t}\n\t}\n\n\t/**\n\t * Sets the visibility of the no data container\n\t *\n\t * @private\n\t */\n\tpublic setNoDataContainerVisibility(contentVisible: boolean): void {\n\t\tconst noDataContainer = this.getNoDataContainer();\n\t\tnoDataContainer?.setVisible(contentVisible);\n\t\tif (!this._customNoDataContainerPresent) {\n\t\t\tif (contentVisible) {\n\t\t\t\tthis.insertItem(noDataContainer, 0);\n\t\t\t} else {\n\t\t\t\tthis.removeItem(noDataContainer);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Calculates the state of the sections based on the layout's content.\n\t * @private\n\t */\n\tpublic async _calculateSectionsState(): Promise<void> {\n\t\tconst settingsDialog = this.getAggregation(\"settingsDialog\") as SettingsDialog;\n\t\tconst aSettingsPanel = settingsDialog.getPanels();\n\t\tthis._isCustomNews = false;\n\t\taSettingsPanel.forEach((oSettingsPanel: BaseSettingsPanel) => {\n\t\t\tif (oSettingsPanel instanceof NewsSettingsPanel) {\n\t\t\t\tthis._isCustomNews = true;\n\t\t\t}\n\t\t\tif (oSettingsPanel instanceof AdvancedSettingsPanel) {\n\t\t\t\toSettingsPanel.resetImportModel(true);\n\t\t\t}\n\t\t});\n\t\tawait this.setSectionDetails();\n\t}\n\n\t/**\n\t * Sets the section details based on the layout's content.\n\t * @private\n\t */\n\tprivate async setSectionDetails(): Promise<void> {\n\t\tconst elementArray = this.getItems();\n\t\tfor (const element of elementArray) {\n\t\t\tlet bBlocked = false;\n\t\t\tconst sId = element.getId();\n\t\t\t//check news & apps visibility\n\t\t\tif (element instanceof NewsAndPagesContainer && element.getVisible()) {\n\t\t\t\tconst aNewsAndPagesPanel = element.getContent();\n\t\t\t\t//check whether user has access to pages\n\t\t\t\tbBlocked = aNewsAndPagesPanel.length ? await this.checkPagesBlocked(aNewsAndPagesPanel) : false;\n\t\t\t} else if (element instanceof ToDosContainer) {\n\t\t\t\tbBlocked = this.checkToDoBlocked(element);\n\t\t\t}\n\n\t\t\tthis._aOrderedSections?.forEach((oElementItem) => {\n\t\t\t\tif (oElementItem.completeId === sId) {\n\t\t\t\t\toElementItem.blocked = bBlocked;\n\t\t\t\t\toElementItem.visible = element.getVisible();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Check whether My Interest section is blocked or not\n\t * @private\n\t */\n\tprivate async checkPagesBlocked(aNewsAndPagesPanel: BasePanel[]): Promise<boolean> {\n\t\tfor (const oPanel of aNewsAndPagesPanel) {\n\t\t\tif (oPanel instanceof PagePanel) {\n\t\t\t\t// find if user has any pages accessible\n\t\t\t\tconst aPages = (await oPanel.getUserAvailablePages()) || [];\n\t\t\t\tthis._pagesAvailable = aPages.length > 0;\n\t\t\t}\n\t\t}\n\t\t//if user has no available pages and no  news feed, then block the section\n\t\tif (!this._pagesAvailable && !this._isCustomNews) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Check whether For Me Today section is blocked or not\n\t * @private\n\t */\n\tprivate checkToDoBlocked(toDoContainer: BaseContainer): boolean {\n\t\tif (!toDoContainer.getVisible()) {\n\t\t\tconst panels = toDoContainer.getContent();\n\t\t\tif (panels.length === 0) {\n\t\t\t\tthis._toDoAccessible = false;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Sets up the key user settings dialog for the layout.\n\t *\n\t * @private\n\t */\n\tprivate _setupKeyUserSettingsDialog(): void {\n\t\tconst keyUserSettingsDialog = this.getAggregation(\"keyUserSettingsDialog\") as BaseSettingsDialog;\n\t\tif (!keyUserSettingsDialog) {\n\t\t\tconst defaultKeyUserSettingsDialog = new KeyUserSettingsDialog(`${this.getId()}-keyUser-settings-dialog`);\n\n\t\t\t// Add Key User Layout Settings Panel\n\t\t\tconst keyUserLayoutSettingsPanel = new KeyUserLayoutSettingsPanel(`${this.getId()}-keyUser-layout-settings`);\n\t\t\tkeyUserLayoutSettingsPanel.setAssociation(\"panel\", this);\n\t\t\tdefaultKeyUserSettingsDialog.addPanel(keyUserLayoutSettingsPanel);\n\n\t\t\t// Add News and Pages Settings Panel If News and Pages Container is available\n\t\t\t(this.getItems() || []).forEach((container: BaseContainer) => {\n\t\t\t\tif (container instanceof NewsAndPagesContainer) {\n\t\t\t\t\tconst keyUserNewsPagesSettingsPanel = new KeyUserNewsPagesSettingsPanel(`${this.getId()}-keyUser-news-pages-settings`);\n\t\t\t\t\t// Set any panel of the containet to the settings panel as association\n\t\t\t\t\tkeyUserNewsPagesSettingsPanel.setAssociation(\"panel\", container.getContent()?.[0]);\n\t\t\t\t\tdefaultKeyUserSettingsDialog.addPanel(keyUserNewsPagesSettingsPanel);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis.setAggregation(\"keyUserSettingsDialog\", defaultKeyUserSettingsDialog);\n\t\t}\n\t}\n\n\t/**\n\t * Return the pages availability value\n\t * @private\n\t */\n\tpublic getpagesAvailable(): boolean {\n\t\treturn this._pagesAvailable;\n\t}\n\n\t/**\n\t * Return the To-Dos availability value\n\t * @private\n\t */\n\tpublic isToDoAccessible(): boolean {\n\t\treturn this._toDoAccessible;\n\t}\n\n\t/**\n\t * Return whether customNews available or not\n\t */\n\tpublic customNewAvailable(): boolean {\n\t\treturn this._isCustomNews;\n\t}\n\n\t/**\n\t * Returns the set of sections present within the layout\n\t *\n\t * @private\n\t */\n\tpublic getSections(): IElement[] {\n\t\treturn this._aOrderedSections!;\n\t}\n\n\t/**\n\t * Sets the sections present within the layout\n\t *\n\t * @private\n\t */\n\tpublic setSections(sections: IElement[]): void {\n\t\tthis._aOrderedSections = sections;\n\t}\n\n\t/**\n\t * Resets the ordered sections of the layout.\n\t *\n\t * @private\n\t */\n\tpublic resetSections(): void {\n\t\tthis._prepareLayoutData();\n\t}\n\n\t/**\n\t * Sets up the content addition dialog for the layout.\n\t *\n\t * @private\n\t */\n\tprivate _setupContentAdditionDialog(): void {\n\t\tlet contentAdditionDialog = this.getAggregation(\"contentAdditionDialog\") as ContentAdditionDialog;\n\t\tif (!contentAdditionDialog) {\n\t\t\tcontentAdditionDialog = new ContentAdditionDialog(`${this.getId()}-content-addition-dialog`);\n\t\t\tthis.setAggregation(\"contentAdditionDialog\", contentAdditionDialog);\n\t\t}\n\t}\n}\n"],"mappings":"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","ignoreList":[]}