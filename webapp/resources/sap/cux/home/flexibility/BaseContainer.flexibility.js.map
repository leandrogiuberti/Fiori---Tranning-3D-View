{"version":3,"file":"BaseContainer.flexibility.js","names":["sap","ui","define","HideControl","UnHideControl","___Layoutflexibility","CHANGE_TYPES","Action","resetLayoutSections","changeType","action","change","control","propertyBag","genericChange","Promise","resolve","then","getParent","resetSections","e","reject","__exports","HIDE","layers","USER","changeHandler","applyChange","revertChange","UNHIDE"],"sources":["BaseContainer.flexibility.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport HideControl from \"sap/ui/fl/changeHandler/HideControl\";\nimport UnHideControl from \"sap/ui/fl/changeHandler/UnhideControl\";\nimport BaseContainer from \"../BaseContainer\";\nimport { IKeyUserChange } from \"../interface/KeyUserInterface\";\nimport Layout from \"../Layout\";\nimport { CHANGE_TYPES } from \"./Layout.flexibility\";\n\nenum Action {\n\tapplyChange = \"applyChange\",\n\trevertChange = \"revertChange\"\n}\n\ntype ChangeHandler = {\n\tapplyChange: (change: IKeyUserChange, control: BaseContainer, propertyBag: object) => Promise<void>;\n\trevertChange: (change: IKeyUserChange, control: BaseContainer, propertyBag: object) => Promise<void>;\n};\n\nconst resetLayoutSections = async (\n\tchangeType: ChangeHandler,\n\taction: Action,\n\tchange: IKeyUserChange,\n\tcontrol: BaseContainer,\n\tpropertyBag: object\n) => {\n\tconst genericChange: ChangeHandler = changeType;\n\tawait genericChange[action](change, control, propertyBag);\n\n\t// Reset sections to update the layout\n\t(control.getParent() as Layout).resetSections?.();\n};\n\nexport default {\n\t[CHANGE_TYPES.HIDE]: {\n\t\tlayers: {\n\t\t\tUSER: true\n\t\t},\n\t\tchangeHandler: {\n\t\t\t...HideControl,\n\t\t\tapplyChange: async (change: IKeyUserChange, control: BaseContainer, propertyBag: object) => {\n\t\t\t\tawait resetLayoutSections(HideControl as ChangeHandler, Action.applyChange, change, control, propertyBag);\n\t\t\t},\n\t\t\trevertChange: async (change: IKeyUserChange, control: BaseContainer, propertyBag: object) => {\n\t\t\t\tawait resetLayoutSections(HideControl as ChangeHandler, Action.revertChange, change, control, propertyBag);\n\t\t\t}\n\t\t} as ChangeHandler\n\t},\n\t[CHANGE_TYPES.UNHIDE]: {\n\t\tlayers: {\n\t\t\tUSER: true\n\t\t},\n\t\tchangeHandler: {\n\t\t\t...UnHideControl,\n\t\t\tapplyChange: async (change: IKeyUserChange, control: BaseContainer, propertyBag: object) => {\n\t\t\t\tawait resetLayoutSections(UnHideControl as ChangeHandler, Action.applyChange, change, control, propertyBag);\n\t\t\t},\n\t\t\trevertChange: async (change: IKeyUserChange, control: BaseContainer, propertyBag: object) => {\n\t\t\t\tawait resetLayoutSections(UnHideControl as ChangeHandler, Action.revertChange, change, control, propertyBag);\n\t\t\t}\n\t\t} as ChangeHandler\n\t}\n};\n"],"mappings":";;;;AAAAA,IAAAC,GAAAC,OAAA,gHAAAC,EAAAC,EAAAC,GAAA,mBAUSC,EAAYD,EAAA,oBAEhBE,EAAM,SAANA,KAAM,6BAANA,EAAM,sCAANA,CAAM,EAANA,GAAM,IAUX,MAAMC,EAAmB,SACxBC,EACAC,EACAC,EACAC,EACAC,GAAmB,IAEnB,MAAMC,EAA+BL,EAAW,OAAAM,QAAAC,QAC1CF,EAAcJ,GAAQC,EAAQC,EAASC,IAAYI,KAAA,WAGxDL,EAAQM,YAAuBC,iBAAkB,EACnD,CAAC,MAAAC,GAAA,OAAAL,QAAAM,OAAAD,EAAA,GAAC,IAAAE,EAEa,CACd,CAAChB,EAAaiB,MAAO,CACpBC,OAAQ,CACPC,KAAM,MAEPC,cAAe,IACXvB,EACHwB,YAAW,SAAShB,EAAwBC,EAAwBC,GAAmB,IAAK,OAAAE,QAAAC,QACrFR,EAAoBL,EAA8BI,EAAOoB,YAAahB,EAAQC,EAASC,IAAYI,KAAA,aAC1G,CAAC,MAAAG,GAAA,OAAAL,QAAAM,OAAAD,EAAA,GACDQ,aAAY,SAASjB,EAAwBC,EAAwBC,GAAmB,IAAK,OAAAE,QAAAC,QACtFR,EAAoBL,EAA8BI,EAAOqB,aAAcjB,EAAQC,EAASC,IAAYI,KAAA,aAC3G,CAAC,MAAAG,GAAA,OAAAL,QAAAM,OAAAD,EAAA,KAGH,CAACd,EAAauB,QAAS,CACtBL,OAAQ,CACPC,KAAM,MAEPC,cAAe,IACXtB,EACHuB,YAAW,SAAShB,EAAwBC,EAAwBC,GAAmB,IAAK,OAAAE,QAAAC,QACrFR,EAAoBJ,EAAgCG,EAAOoB,YAAahB,EAAQC,EAASC,IAAYI,KAAA,aAC5G,CAAC,MAAAG,GAAA,OAAAL,QAAAM,OAAAD,EAAA,GACDQ,aAAY,SAASjB,EAAwBC,EAAwBC,GAAmB,IAAK,OAAAE,QAAAC,QACtFR,EAAoBJ,EAAgCG,EAAOqB,aAAcjB,EAAQC,EAASC,IAAYI,KAAA,aAC7G,CAAC,MAAAG,GAAA,OAAAL,QAAAM,OAAAD,EAAA,MAGH,OAAAE,CAAA","ignoreList":[]}