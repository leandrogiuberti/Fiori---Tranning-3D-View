{"version":3,"file":"SituationPanel-dbg.js","names":["sap","ui","define","Localization","GenericTile","Text","TileContent","sap_m_library","Component","S4MyHome","__ToDoPanel","___utils_SituationUtils","_interopRequireDefault","obj","__esModule","default","_catch","body","recover","result","e","then","LoadState","URLHelper","ValueColor","ToDoPanel","executeNavigation","fetchNavigationTargetData","getSituationMessage","SituationPanel","extend","constructor","_constructor","id","settings","ToDoPanel.prototype.constructor.call","init","_init","ToDoPanel.prototype.init.call","setProperty","_i18nBundle","getText","generateRequestUrls","_generateRequestUrls","cardCount","language","getSAPLogonLanguage","getCountUrl","getDataUrl","generateCardTemplate","_generateCardTemplate","context","mode","frameType","pressEnabled","header","getProperty","headerImage","valueColor","Critical","state","press","event","_onPressSituation","tileContent","content","text","footer","formatDate","_this","control","getSource","getBindingContext","loadState","SitnInstceKey","SitnEngineType","getObject","url","getTargetAppUrl","_temp3","Loading","_temp2","_temp","Promise","resolve","_fetchNavigationTarge","navigationTargetData","getOwnerComponentFor","getParent","error","_sErrorCode","redirect","reject","getNoDataText","_getNoDataText"],"sources":["SituationPanel.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport Localization from \"sap/base/i18n/Localization\";\nimport GenericTile from \"sap/m/GenericTile\";\nimport Text from \"sap/m/Text\";\nimport TileContent from \"sap/m/TileContent\";\nimport { LoadState, URLHelper, ValueColor } from \"sap/m/library\";\nimport Event from \"sap/ui/base/Event\";\nimport Component from \"sap/ui/core/Component\";\nimport Control from \"sap/ui/core/Control\";\nimport Context from \"sap/ui/model/Context\";\nimport S4MyHome from \"sap/ushell/api/S4MyHome\";\nimport type { $ToDoPanelSettings } from \"./ToDoPanel\";\nimport ToDoPanel from \"./ToDoPanel\";\nimport ToDosContainer from \"./ToDosContainer\";\nimport {\n\texecuteNavigation,\n\tfetchNavigationTargetData,\n\tgetSituationMessage,\n\tInstanceAttribute,\n\tNavigationData\n} from \"./utils/SituationUtils\";\n\ninterface Situation {\n\tSitnInstceKey: string;\n\tSitnInstceCreatedAtDateTime: string;\n\tSitnEngineType: string;\n\t_InstanceAttribute: InstanceAttribute[];\n\t_InstanceText: InstanceText;\n\tloadState?: LoadState;\n}\n\ninterface InstanceText {\n\tSituationTitle: string;\n\tSituationText: string;\n}\n\ninterface NavigationHelperError {\n\t_sErrorCode: string;\n}\n\n/**\n *\n * Panel class for managing and storing Situation cards.\n *\n * @extends ToDoPanel\n *\n * @author SAP SE\n * @version 0.0.1\n * @since 1.121\n *\n * @private\n * @ui5-restricted ux.eng.s4producthomes1\n *\n * @alias sap.cux.home.SituationPanel\n */\nexport default class SituationPanel extends ToDoPanel {\n\t/**\n\t * Constructor for a new Situation Panel.\n\t *\n\t * @param {string} [id] ID for the new control, generated automatically if an ID is not provided\n\t * @param {object} [settings] Initial settings for the new control\n\t */\n\tpublic constructor(id?: string, settings?: $ToDoPanelSettings) {\n\t\tsuper(id, settings);\n\t}\n\n\t/**\n\t * Init lifecycle method\n\t *\n\t * @private\n\t * @override\n\t */\n\tpublic init(): void {\n\t\tsuper.init();\n\n\t\t//Configure Header\n\t\tthis.setProperty(\"key\", \"situations\");\n\t\tthis.setProperty(\"title\", this._i18nBundle.getText(\"situationsTabTitle\"));\n\t}\n\n\t/**\n\t * Generates request URLs for fetching data based on the specified card count.\n\t * Overridden method to provide situation-specific URLs.\n\t *\n\t * @private\n\t * @override\n\t * @param {number} cardCount - The number of cards to retrieve.\n\t * @returns {string[]} An array of request URLs.\n\t */\n\tpublic generateRequestUrls(cardCount: number): string[] {\n\t\tconst language = Localization.getSAPLogonLanguage() || \"\";\n\t\treturn [\n\t\t\tthis.getCountUrl(),\n\t\t\t`${this.getDataUrl()}&$expand=_InstanceAttribute($expand=_InstanceAttributeValue($filter=(Language eq '${language}' or Language eq ''))),_InstanceText($filter=(Language eq '${language}' or Language eq ''))&$skip=0&$top=${cardCount}`\n\t\t];\n\t}\n\n\t/**\n\t * Generates a card template for situations.\n\t * Overridden method from To-Do panel to generate situation-specific card template.\n\t *\n\t * @private\n\t * @override\n\t * @param {string} id The ID for the template card.\n\t * @param {Context} context The context object.\n\t * @returns {Control} The generated card control template.\n\t */\n\tpublic generateCardTemplate(id: string, context: Context): Control {\n\t\treturn new GenericTile(`${id}-actionTile`, {\n\t\t\tmode: \"ActionMode\",\n\t\t\tframeType: \"TwoByOne\",\n\t\t\tpressEnabled: true,\n\t\t\theader: getSituationMessage(\n\t\t\t\tcontext.getProperty(\"_InstanceText/0/SituationTitle\") as string,\n\t\t\t\tcontext.getProperty(\"_InstanceAttribute\") as InstanceAttribute[]\n\t\t\t),\n\t\t\theaderImage: \"sap-icon://alert\",\n\t\t\tvalueColor: ValueColor.Critical,\n\t\t\tstate: context.getProperty(\"loadState\") as LoadState,\n\t\t\tpress: (event: Event) => {\n\t\t\t\tvoid this._onPressSituation(event);\n\t\t\t},\n\t\t\ttileContent: [\n\t\t\t\tnew TileContent(`${id}-actionTileContent`, {\n\t\t\t\t\tcontent: new Text(`${id}-text`, {\n\t\t\t\t\t\ttext: getSituationMessage(\n\t\t\t\t\t\t\tcontext.getProperty(\"_InstanceText/0/SituationText\") as string,\n\t\t\t\t\t\t\tcontext.getProperty(\"_InstanceAttribute\") as InstanceAttribute[]\n\t\t\t\t\t\t)\n\t\t\t\t\t}),\n\t\t\t\t\tfooter: S4MyHome.formatDate(context.getProperty(\"SitnInstceCreatedAtDateTime\") as string)\n\t\t\t\t})\n\t\t\t]\n\t\t});\n\t}\n\n\t/**\n\t * Handle the press event for a situation.\n\t *\n\t * @private\n\t * @param {Event} event - The event object.\n\t */\n\tprivate async _onPressSituation(event: Event): Promise<void> {\n\t\tconst control = event.getSource<GenericTile>();\n\t\tconst context = control.getBindingContext();\n\t\tconst { loadState, SitnInstceKey: id, SitnEngineType } = context?.getObject() as Situation;\n\t\tconst url = this.getTargetAppUrl();\n\n\t\tif (loadState !== LoadState.Loading && url) {\n\t\t\tif (id) {\n\t\t\t\ttry {\n\t\t\t\t\tconst navigationTargetData = (await fetchNavigationTargetData(id, SitnEngineType)) as NavigationData;\n\t\t\t\t\tawait executeNavigation(\n\t\t\t\t\t\tnavigationTargetData,\n\t\t\t\t\t\tComponent.getOwnerComponentFor(this.getParent() as ToDosContainer) as Component\n\t\t\t\t\t);\n\t\t\t\t} catch (error: unknown) {\n\t\t\t\t\tif (\n\t\t\t\t\t\terror &&\n\t\t\t\t\t\tSitnEngineType === \"1\" &&\n\t\t\t\t\t\t(error as NavigationHelperError)._sErrorCode === \"NavigationHandler.isIntentSupported.notSupported\"\n\t\t\t\t\t) {\n\t\t\t\t\t\t// Navigate to the situations app\n\t\t\t\t\t\tURLHelper.redirect(this.getTargetAppUrl(), false);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tURLHelper.redirect(url, false);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Get the text for the \"No Data\" message.\n\t *\n\t * @private\n\t * @returns {string} The text for the \"No Data\" message.\n\t */\n\tpublic getNoDataText(): string {\n\t\treturn this._i18nBundle.getText(\"noSituationTitle\") as string;\n\t}\n}\n"],"mappings":"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","ignoreList":[]}