{"version":3,"file":"AppsAdditionPanel.js","names":["sap","ui","define","Log","Button","CustomListItem","ExpandableText","FlexBox","GenericTile","HBox","Label","sap_m_library","MessageToast","Text","VBox","Fragment","sap_ui_core_library","ChangeReason","JSONModel","ResourceModel","Sorter","Container","__AppsContainer","__BaseSettingsPanel","__FavAppPanel","__InsightsContainer","__AppManager","___utils_Constants","___utils_DataFormatUtils","___utils_FeatureUtils","___utils_FESRUtil","_interopRequireDefault","obj","__esModule","default","_catch","body","recover","result","e","then","ButtonType","_finallyRethrows","finalizer","bind","URLHelper","_iteratorSymbol","Symbol","iterator","_settle","pact","state","value","s","_Pact","v","o","observer","prototype","onFulfilled","onRejected","this","callback","_this","_isSettledPact","thenable","_forTo","array","check","i","reject","_cycle","length","ValueState","_forOf","target","step","next","done","return","_fixup","TypeError","values","push","AppsContainer","BaseSettingsPanel","FavAppPanel","InsightsContainer","AppManager","AI_APP_FINDER_API","AI_APP_FINDER_BASE_URL","CONTENT_ADDITION_PANEL_TYPES","DEFAULT_APP_ICON","FEATURE_TOGGLES","FESR_IDS","MYINSIGHT_SECTION_ID","recycleId","isNavigationSupportedForFeature","addFESRSemanticStepName","FESR_EVENTS","Constants","DeprecatedInfoText","MinQueryLength","MaxDescriptionLength","SearchStatus","ErrorType","TileType","AppsAdditionPanel","extend","constructor","apply","arguments","appManagerInstance","getInstance","resetSearch","userSelectedApps","clear","model","setProperty","Searching","appSuggestionList","removeSelections","resetFeedback","init","_init","BaseSettingsPanel.prototype.init.call","Set","AI_APP_FINDER","_i18nBundle","getText","_setupActions","_setupContent","attachEvent","_isDialogPersisted","getParent","resetPanel","addAppsButton","getId","text","type","Emphasized","press","onPressAddApps","bindProperty","parts","formatter","hasError","searchStatus","Complete","PRESS","ADD_AI_APP","addActionButton","Promise","resolve","getServiceAsync","_Container$getService","vizInstantiationService","load","id","name","controller","_Fragment$load","panelContent","addAggregation","query","errorType","NoResultsFound","errorDescription","Idle","loadingAnimations","_generateSearchingAnimations","suggestedAppsCount","suggestedApps","aiPolicyText","_generateAIPolicyText","invalidQuery","feedback","thumbsUp","thumbsDown","sampleQueries","index","setModel","bundleName","byId","bindAggregation","path","factory","_generateListItem","sorter","comparator","firstApp","secondApp","getPriority","statusArray","hasAlreadyAdded","includes","hasDeprecated","firstPriority","secondPriority","attachUpdateFinished","getProperty","getItems","focus","searchTextArea","onsapenter","onPressGo","context","listItem","selected","content","renderType","direction","alignItems","items","_getAppPreviewContainer","_getAppDetailsContainer","addStyleClass","getMultiSelectControl","setEnabled","container","addItem","mode","frameType","width","header","subheader","tileIcon","visible","url","event","_persistDialog","redirect","getSource","getUrl","vizData","instance","instantiateVisualization","setActive","attachPress","gap","maxCharacters","showColon","_generateStatusTexts","isSupported","_isSupported","_this2","_temp3","isPanelSupported","removeActionButton","contentAdditionDialog","removePanel","updateActionButtons","appsIntent","semanticObject","action","_temp2","undefined","_temp","getFavAppPanel","AI_SMART_APPFINDER","_isNavigationSupporte","loadingShimmer","_resetPanel","defaultModelProperties","setData","getData","_onPressGo","_this3","isValidQuery","_temp5","fetchAppsFromSearch","rawApps","_temp4","fetchAllAvailableVisualizations","allVisualizations","fetchFavVizs","favoriteApps","fetchInsightApps","insightsApps","apps","_generateApps","_filterUnsupportedApps","_handleError","updateAggregation","Refresh","detailedReason","err","error","message","_wasThrown","_result","updatedApps","filter","app","isStaticApp","intents","map","navigationService","isNavigationSupported","supportedAppIndices","_","homePageVisualizations","find","viz","vizId","chipID","addedToHomePage","some","visualization","title","subTitle","description","appDescription","icon","iconUrl","tileType","Static","status","getAppStatusTexts","configuration","targetURL","_isValidQuery","trim","_fetchAllAvailableVisualizations","_this4","_temp7","allAvailableVisualizations","_temp6","searchableContentService","getApps","enableVisualizationPreview","allAvailableApps","reduce","visualizations","currentApp","concat","_fetchCSRFToken","fetch","method","headers","response","get","_fetchAppsFromSearch","_this5","token","JSON","stringify","UserInput","_exit","_temp0","_result2","json","_response$json2","queryResult","_temp9","ok","_response$json","errorResponse","_temp8","_getAppStatusTexts","statusTexts","parsedConfig","parse","tileConfig","tileConfiguration","infoText","display_info_text","toLowerCase","warning","stausTexts","applyStatusClass","_applyStatusClass","_onPressAddApps","_this6","_temp14","_temp12","_temp10","close","show","selectedItem","selectedAppTitle","getBindingContext","messageKey","staticAppsPresent","_temp1","dynamicAppsPresent","refreshInsightsApps","_temp11","refreshFavoriteApps","_temp13","addVisualization","getLayout","_getLayout","getAppsContainer","_getAppsContainer","_getFavAppPanel","getContent","panel","_refreshFavoriteApps","_this7","refreshPanel","getInsightsContainer","_getInsightsContainer","_refreshInsightsApps","_this8","refreshData","onListSelectionChange","_onListSelectionChange","getParameter","delete","add","Array","from","suggestedResponseCount","errorCode","match","_getErrorType","ServiceError","onSearchTextAreaLiveChange","_onSearchTextAreaLiveChange","textArea","getValue","setValueState","Information","setValueStateText","Warning","None","getValueState","linkText","_resetFeedback","sendFeedback","_sendFeedback","feedbackType"],"sources":["AppsAdditionPanel.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport Log from \"sap/base/Log\";\nimport Button from \"sap/m/Button\";\nimport CustomListItem from \"sap/m/CustomListItem\";\nimport ExpandableText from \"sap/m/ExpandableText\";\nimport FlexBox from \"sap/m/FlexBox\";\nimport GenericTile, { GenericTile$PressEvent } from \"sap/m/GenericTile\";\nimport HBox from \"sap/m/HBox\";\nimport Label from \"sap/m/Label\";\nimport { ButtonType, URLHelper } from \"sap/m/library\";\nimport List from \"sap/m/List\";\nimport { ListBase$SelectionChangeEvent } from \"sap/m/ListBase\";\nimport MessageToast from \"sap/m/MessageToast\";\nimport Text from \"sap/m/Text\";\nimport TextArea, { TextArea$LiveChangeEvent } from \"sap/m/TextArea\";\nimport VBox from \"sap/m/VBox\";\nimport Control from \"sap/ui/core/Control\";\nimport Fragment from \"sap/ui/core/Fragment\";\nimport { ValueState } from \"sap/ui/core/library\";\nimport ChangeReason from \"sap/ui/model/ChangeReason\";\nimport Context from \"sap/ui/model/Context\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\nimport ResourceModel from \"sap/ui/model/resource/ResourceModel\";\nimport Sorter from \"sap/ui/model/Sorter\";\nimport Container from \"sap/ushell/Container\";\nimport Navigation, { Target } from \"sap/ushell/services/Navigation\";\nimport SearchableContent, { AppData } from \"sap/ushell/services/SearchableContent\";\nimport VisualizationInstantiation from \"sap/ushell/services/VisualizationInstantiation\";\nimport AppsContainer from \"./AppsContainer\";\nimport BaseLayout from \"./BaseLayout\";\nimport BaseSettingsPanel from \"./BaseSettingsPanel\";\nimport ContentAdditionDialog from \"./ContentAdditionDialog\";\nimport FavAppPanel from \"./FavAppPanel\";\nimport InsightsContainer from \"./InsightsContainer\";\nimport { ICustomVisualization, ICustomVizInstance, IVisualization } from \"./interface/AppsInterface\";\nimport AppManager from \"./utils/AppManager\";\nimport {\n\tAI_APP_FINDER_API,\n\tAI_APP_FINDER_BASE_URL,\n\tCONTENT_ADDITION_PANEL_TYPES,\n\tDEFAULT_APP_ICON,\n\tFEATURE_TOGGLES,\n\tFESR_IDS,\n\tMYINSIGHT_SECTION_ID\n} from \"./utils/Constants\";\nimport { recycleId } from \"./utils/DataFormatUtils\";\nimport { isNavigationSupportedForFeature } from \"./utils/FeatureUtils\";\nimport { addFESRSemanticStepName, FESR_EVENTS } from \"./utils/FESRUtil\";\n\nconst Constants = {\n\tDeprecatedInfoText: \"deprecated\",\n\tMinQueryLength: 2,\n\tMaxDescriptionLength: 500\n};\n\nenum SearchStatus {\n\tIdle = \"idle\",\n\tSearching = \"searching\",\n\tComplete = \"complete\"\n}\n\nenum ErrorType {\n\tNoResultsFound = \"noResultsFound\",\n\tServiceError = \"serviceError\"\n}\n\nenum TileType {\n\tStatic = \"STATIC\"\n}\n\ninterface RawAppData {\n\ttitle: string;\n\tsubTitle: string;\n\tappDescription: string;\n\tchipID: string;\n\ttileType: TileType;\n\ticonUrl: string;\n\tconfiguration: string;\n}\ninterface SuggestedApp {\n\ticon: string;\n\ttitle: string;\n\tchipID: string;\n\tstatus: string[];\n\tsubTitle: string;\n\tdescription: string;\n\tisStaticApp: boolean;\n\taddedToHomePage: boolean;\n\tvizData?: IVisualization;\n}\n\ninterface QueryResponse {\n\tvalue: RawAppData[];\n}\n\ninterface ErrorResponse {\n\terror: {\n\t\tcode: string;\n\t\tmessage: string;\n\t};\n}\n\ninterface Configuration {\n\ttileConfiguration: string;\n}\n\ninterface TileConfig {\n\tdisplay_info_text: string;\n\t[key: string]: string;\n}\n\n/**\n *\n * Class for Apps Addition Panel in MyHome.\n *\n * @extends BaseSettingsPanel\n *\n * @author SAP SE\n * @version 0.0.1\n * @since 1.136\n *\n * @private\n *\n * @alias sap.cux.home.AppsAdditionPanel\n */\nexport default class AppsAdditionPanel extends BaseSettingsPanel {\n\tprivate appManagerInstance: AppManager = AppManager.getInstance();\n\tprivate vizInstantiationService!: VisualizationInstantiation;\n\tprivate allAvailableVisualizations!: IVisualization[];\n\tprivate userSelectedApps!: Set<CustomListItem>;\n\tprivate appSuggestionList!: List;\n\tprivate model!: JSONModel;\n\tprivate addAppsButton!: Button;\n\tprivate isPanelSupported!: boolean;\n\n\t/**\n\t * Init lifecycle method\n\t *\n\t * @public\n\t * @override\n\t */\n\tpublic init(): void {\n\t\tsuper.init();\n\t\tthis.userSelectedApps = new Set<CustomListItem>();\n\n\t\t//setup panel\n\t\tthis.setProperty(\"key\", CONTENT_ADDITION_PANEL_TYPES.AI_APP_FINDER);\n\t\tthis.setProperty(\"title\", this._i18nBundle.getText(\"addAppsAndTile\"));\n\n\t\t//setup actions\n\t\tthis._setupActions();\n\n\t\t//setup content\n\t\tvoid this._setupContent();\n\n\t\t//setup events\n\t\tthis.attachEvent(\"onDialogClose\", () => {\n\t\t\tif (!this._isDialogPersisted(this.getParent() as ContentAdditionDialog)) {\n\t\t\t\tthis.resetPanel();\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Sets up the actions for the Apps Addition Panel.\n\t *\n\t * @private\n\t */\n\tprivate _setupActions(): void {\n\t\tthis.addAppsButton = new Button(recycleId(`${this.getId()}-add-app-btn`), {\n\t\t\ttext: this._i18nBundle.getText(\"addFromInsightsDialogBtn\"),\n\t\t\ttype: ButtonType.Emphasized,\n\t\t\tpress: () => {\n\t\t\t\tvoid this.onPressAddApps();\n\t\t\t}\n\t\t});\n\n\t\tthis.addAppsButton.bindProperty(\"enabled\", {\n\t\t\tparts: [\"/hasError\", \"/searchStatus\", \"/userSelectedApps\"],\n\t\t\tformatter: (hasError: boolean, searchStatus: SearchStatus, userSelectedApps: string[]) => {\n\t\t\t\treturn !hasError && searchStatus === SearchStatus.Complete && userSelectedApps.length > 0;\n\t\t\t}\n\t\t});\n\n\t\taddFESRSemanticStepName(this.addAppsButton, FESR_EVENTS.PRESS, FESR_IDS.ADD_AI_APP);\n\t\tthis.addActionButton(this.addAppsButton);\n\t}\n\n\t/**\n\t * Sets up the content for the Apps Addition Panel.\n\t *\n\t * @private\n\t * @async\n\t */\n\tprivate async _setupContent(): Promise<void> {\n\t\tthis.vizInstantiationService = await Container.getServiceAsync<VisualizationInstantiation>(\"VisualizationInstantiation\");\n\n\t\t//load ui fragment\n\t\tconst panelContent = (await Fragment.load({\n\t\t\tid: `${this.getId()}-content`,\n\t\t\tname: \"sap.cux.home.utils.fragment.appsAdditionContent\",\n\t\t\tcontroller: this\n\t\t})) as Control;\n\t\tthis.addAggregation(\"content\", panelContent);\n\n\t\t//initialize ui model\n\t\tthis.model = new JSONModel({\n\t\t\tquery: \"\",\n\t\t\thasError: false,\n\t\t\terrorType: ErrorType.NoResultsFound,\n\t\t\terrorDescription: \"\",\n\t\t\tsearchStatus: SearchStatus.Idle,\n\t\t\tloadingAnimations: this._generateSearchingAnimations(),\n\t\t\tsuggestedAppsCount: 0,\n\t\t\tuserSelectedApps: [],\n\t\t\tsuggestedApps: [],\n\t\t\taiPolicyText: this._generateAIPolicyText(),\n\t\t\tinvalidQuery: true,\n\t\t\tfeedback: {\n\t\t\t\tthumbsUp: false,\n\t\t\t\tthumbsDown: false\n\t\t\t},\n\t\t\tsampleQueries: [\n\t\t\t\t{\n\t\t\t\t\tindex: 1,\n\t\t\t\t\tquery: this._i18nBundle.getText(\"sampleQuery_1\") as string\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tindex: 2,\n\t\t\t\t\tquery: this._i18nBundle.getText(\"sampleQuery_2\") as string\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tindex: 3,\n\t\t\t\t\tquery: this._i18nBundle.getText(\"sampleQuery_3\") as string\n\t\t\t\t}\n\t\t\t]\n\t\t});\n\n\t\tpanelContent.setModel(this.model);\n\t\tpanelContent.setModel(new ResourceModel({ bundleName: \"sap.cux.home.i18n.messagebundle\" }), \"i18n\");\n\t\tthis.addAppsButton.setModel(this.model);\n\n\t\t//bind suggested apps list\n\t\tthis.appSuggestionList = Fragment.byId(`${this.getId()}-content`, \"appsList\") as List;\n\t\tthis.appSuggestionList.bindAggregation(\"items\", {\n\t\t\tpath: \"/suggestedApps\",\n\t\t\tfactory: this._generateListItem.bind(this),\n\t\t\tsorter: new Sorter({\n\t\t\t\tpath: \"status\",\n\t\t\t\tcomparator: (firstApp: string[], secondApp: string[]) => {\n\t\t\t\t\tconst getPriority = (statusArray: string[]) => {\n\t\t\t\t\t\tif (statusArray.length === 0) return 0; // Empty array has highest priority\n\n\t\t\t\t\t\tconst hasAlreadyAdded = statusArray.includes(this._i18nBundle.getText(\"alreadyAddedApp\") as string);\n\t\t\t\t\t\tconst hasDeprecated = statusArray.includes(this._i18nBundle.getText(\"deprecatedApp\") as string);\n\n\t\t\t\t\t\tif (hasAlreadyAdded && hasDeprecated) return 3; // Both statuses - lowest priority\n\t\t\t\t\t\tif (hasAlreadyAdded) return 1; // Only \"Already Added\"\n\t\t\t\t\t\tif (hasDeprecated) return 2; // Only \"Deprecated\"\n\n\t\t\t\t\t\treturn 4; // Any other combination (fallback)\n\t\t\t\t\t};\n\n\t\t\t\t\tconst firstPriority = getPriority(firstApp);\n\t\t\t\t\tconst secondPriority = getPriority(secondApp);\n\n\t\t\t\t\treturn firstPriority - secondPriority;\n\t\t\t\t}\n\t\t\t})\n\t\t});\n\n\t\t//focus on the first item when the list is updated\n\t\tthis.appSuggestionList.attachUpdateFinished(() => {\n\t\t\tif (this.model.getProperty(\"/suggestedAppsCount\") > 0 && this.model.getProperty(\"/searchStatus\") === SearchStatus.Complete) {\n\t\t\t\tthis.appSuggestionList.getItems()?.[0]?.focus();\n\t\t\t}\n\t\t});\n\n\t\t//bind search field\n\t\tconst searchTextArea = Fragment.byId(`${this.getId()}-content`, \"searchTextArea\") as TextArea;\n\t\tsearchTextArea.onsapenter = this.onPressGo.bind(this);\n\t}\n\n\t/**\n\t * Generates a list item for the Apps Addition Panel.\n\t *\n\t * @private\n\t * @param {string} id - The unique ID for the list item.\n\t * @param {Context} context - The binding context for the list item.\n\t * @returns {CustomListItem} The generated list item control.\n\t */\n\tprivate _generateListItem(id: string, context: Context): CustomListItem {\n\t\tconst listItem = new CustomListItem(id, {\n\t\t\tselected: context.getProperty(\"addedToHomePage\") as boolean,\n\t\t\tcontent: [\n\t\t\t\tnew FlexBox(recycleId(`${id}-result-container`), {\n\t\t\t\t\trenderType: \"Bare\",\n\t\t\t\t\tdirection: context.getProperty(\"isStaticApp\") ? \"Column\" : \"Row\",\n\t\t\t\t\talignItems: context.getProperty(\"isStaticApp\") ? \"Start\" : \"Center\",\n\t\t\t\t\titems: [this._getAppPreviewContainer(id, context), this._getAppDetailsContainer(id, context)]\n\t\t\t\t}).addStyleClass(\"sapUiSmallMargin\")\n\t\t\t]\n\t\t});\n\n\t\t//bind associated checkbox to disable it when the app is already added to home page\n\t\tlistItem.getMultiSelectControl(true).setEnabled(!context.getProperty(\"addedToHomePage\"));\n\n\t\treturn listItem;\n\t}\n\n\t/**\n\t * Creates a preview container for the suggested app.\n\t *\n\t * @private\n\t * @param {string} id - The unique ID for the container.\n\t * @param {Context} context - The binding context for the app.\n\t * @returns {HBox} The app preview container.\n\t */\n\tprivate _getAppPreviewContainer(id: string, context: Context): HBox {\n\t\tconst container = new HBox(recycleId(`${id}-suggestedAppContainer`), {\n\t\t\trenderType: \"Bare\"\n\t\t});\n\n\t\tif (context.getProperty(\"isStaticApp\") as boolean) {\n\t\t\t// create generic tile for static app\n\t\t\tcontainer.addItem(\n\t\t\t\tnew GenericTile(recycleId(`${id}-staticApp`), {\n\t\t\t\t\tmode: \"IconMode\",\n\t\t\t\t\tframeType: \"TwoByHalf\",\n\t\t\t\t\twidth: \"19rem\",\n\t\t\t\t\theader: context.getProperty(\"title\") as string,\n\t\t\t\t\tsubheader: context.getProperty(\"subTitle\") as string,\n\t\t\t\t\ttileIcon: (context.getProperty(\"icon\") as string) || DEFAULT_APP_ICON,\n\t\t\t\t\tvisible: context.getProperty(\"isStaticApp\") as boolean,\n\t\t\t\t\turl: context.getProperty(\"url\") as string,\n\t\t\t\t\tpress: (event: GenericTile$PressEvent) => {\n\t\t\t\t\t\tthis._persistDialog(this.getParent() as ContentAdditionDialog);\n\t\t\t\t\t\tURLHelper.redirect(event.getSource()?.getUrl(), false);\n\t\t\t\t\t}\n\t\t\t\t}).addStyleClass(\"suggestedTile\")\n\t\t\t);\n\t\t} else {\n\t\t\t// create custom visualization for other apps\n\t\t\tconst vizData = context.getProperty(\"vizData\") as ICustomVisualization;\n\t\t\tconst instance = this.vizInstantiationService.instantiateVisualization(vizData) as ICustomVizInstance;\n\t\t\tinstance?.setActive(true);\n\t\t\tinstance?.attachPress(() => this._persistDialog(this.getParent() as ContentAdditionDialog));\n\t\t\tcontainer.addItem(instance);\n\t\t}\n\n\t\treturn container;\n\t}\n\n\t/**\n\t * Creates a details container for the suggested app.\n\t *\n\t * @private\n\t * @param {string} id - The unique ID for the container.\n\t * @param {Context} context - The binding context for the app.\n\t * @returns {VBox} The app details container.\n\t */\n\tprivate _getAppDetailsContainer(id: string, context: Context): VBox {\n\t\treturn new VBox(recycleId(`${id}-app-details-container`), {\n\t\t\trenderType: \"Bare\",\n\t\t\tgap: \"0.5rem\",\n\t\t\titems: [\n\t\t\t\tnew ExpandableText(recycleId(`${id}-description`), {\n\t\t\t\t\ttext: context.getProperty(\"description\") as string,\n\t\t\t\t\tmaxCharacters: Constants.MaxDescriptionLength\n\t\t\t\t}),\n\t\t\t\tnew HBox(recycleId(`${id}-app-status-container`), {\n\t\t\t\t\trenderType: \"Bare\",\n\t\t\t\t\tvisible: (context.getProperty(\"status\") as string[]).length > 0,\n\t\t\t\t\titems: [\n\t\t\t\t\t\tnew Label(recycleId(`${id}-appStatusLabel`), {\n\t\t\t\t\t\t\ttext: this._i18nBundle.getText(\"appStatus\"),\n\t\t\t\t\t\t\tshowColon: true\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tnew HBox(recycleId(`${id}-app-status-texts`), {\n\t\t\t\t\t\t\trenderType: \"Bare\",\n\t\t\t\t\t\t\titems: this._generateStatusTexts(id, context.getProperty(\"status\") as string[])\n\t\t\t\t\t\t}).addStyleClass(\"sapUiTinyMarginBegin statusTextsContainer\")\n\t\t\t\t\t]\n\t\t\t\t})\n\t\t\t]\n\t\t}).addStyleClass((context.getProperty(\"isStaticApp\") as boolean) ? \"sapUiSmallMarginTop\" : \"sapUiSmallMarginBegin\");\n\t}\n\n\t/**\n\t * Checks if the Apps Addition Panel is supported. Internally, it checks if the\n\t * AI Smart App Finder feature toggle is enabled and if the associated application\n\t * is accessible for the user.\n\t *\n\t * @public\n\t * @override\n\t * @async\n\t * @returns {Promise<boolean>} A promise that resolves to a boolean indicating support.\n\t */\n\tpublic async isSupported(): Promise<boolean> {\n\t\tconst appsIntent: Target = {\n\t\t\ttarget: {\n\t\t\t\tsemanticObject: \"IntelligentPrompt\",\n\t\t\t\taction: \"propose\"\n\t\t\t}\n\t\t};\n\t\tif (this.isPanelSupported === undefined) {\n\t\t\tthis.isPanelSupported = false;\n\n\t\t\tif (this.getFavAppPanel()) {\n\t\t\t\tthis.isPanelSupported = await isNavigationSupportedForFeature(FEATURE_TOGGLES.AI_SMART_APPFINDER, appsIntent);\n\t\t\t}\n\t\t}\n\n\t\t//remove panel if it's not supported\n\t\tif (!this.isPanelSupported) {\n\t\t\tthis.removeActionButton(this.addAppsButton);\n\t\t\tconst contentAdditionDialog = this.getParent() as ContentAdditionDialog;\n\t\t\tcontentAdditionDialog.removePanel(this);\n\t\t\tcontentAdditionDialog.updateActionButtons();\n\t\t}\n\n\t\treturn this.isPanelSupported;\n\t}\n\n\t/**\n\t * Generates the searching animation SVG as a string.\n\t *\n\t * @private\n\t * @returns {string} The SVG string for the loading animation.\n\t */\n\tprivate _generateSearchingAnimations(): string[] {\n\t\tconst loadingShimmer = `<defs>\n\t\t\t<linearGradient id=\"loadingShimmer\" x1=\"0\" y1=\"0\" x2=\"1\" y2=\"0\">\n\t\t\t\t<stop offset=\"0%\" stop-color=\"var(--sapContent_Placeholderloading_Background)\" />\n\t\t\t\t<stop offset=\"20%\" stop-color=\"var(--sapContent_Placeholderloading_Background)\" />\n\t\t\t\t<stop offset=\"50%\" stop-color=\"var(--sapContent_Placeholderloading_Background_Dark)\" />\n\t\t\t\t<stop offset=\"80%\" stop-color=\"var(--sapContent_Placeholderloading_Background)\" />\n\t\t\t\t<stop offset=\"100%\" stop-color=\"var(--sapContent_Placeholderloading_Background)\" />\n\n\t\t\t\t<animate\n\t\t\t\t\tattributeName=\"x1\"\n\t\t\t\t\tvalues=\"-0.6;0.6\"\n\t\t\t\t\tdur=\"2.5s\"\n\t\t\t\t\trepeatCount=\"indefinite\" />\n\t\t\t\t<animate\n\t\t\t\t\tattributeName=\"x2\"\n\t\t\t\t\tvalues=\"0.4;1.6\"\n\t\t\t\t\tdur=\"2.5s\"\n\t\t\t\t\trepeatCount=\"indefinite\" />\n\t\t\t</linearGradient>\n\t\t</defs>`;\n\n\t\treturn [\n\t\t\t`<svg height=\"167\" fill=\"none\">\n\t\t\t\t${loadingShimmer}\n\t\t\t\t<rect x=\"16\" y=\"75\" width=\"16\" height=\"16\" rx=\"4\" fill=\"var(--sapContent_Placeholderloading_Background)\"/>\n\t\t\t\t<rect x=\"48\" y=\"16\" width=\"37%\" height=\"70\" rx=\"16\" fill=\"url(#loadingShimmer)\"/>\n\t\t\t\t<rect x=\"48\" y=\"102\" width=\"93%\" height=\"48\" rx=\"4\" fill=\"url(#loadingShimmer)\"/>\n\t\t\t</svg>`,\n\t\t\t`<svg height=\"180\" fill=\"none\">\n\t\t\t\t${loadingShimmer}\n\t\t\t\t<rect x=\"16\" y=\"82\" width=\"16\" height=\"16\" rx=\"4\" fill=\"var(--sapContent_Placeholderloading_Background)\"/>\n\t\t\t\t<rect x=\"48\" y=\"16\" width=\"148\" height=\"148\" rx=\"16\" fill=\"url(#loadingShimmer)\"/>\n\t\t\t\t<rect x=\"212\" y=\"54\" width=\"75%\" height=\"48\" rx=\"4\" fill=\"url(#loadingShimmer)\"/>\n\t\t\t\t<rect x=\"212\" y=\"110\" width=\"13%\" height=\"16\" rx=\"4\" fill=\"url(#loadingShimmer)\"/>\n\t\t\t</svg>`\n\t\t];\n\t}\n\n\t/**\n\t * Resets the search state in the Apps Addition Panel.\n\t *\n\t * @private\n\t */\n\tprivate resetSearch: () => void = () => {\n\t\tthis.userSelectedApps.clear();\n\t\tthis.model.setProperty(\"/hasError\", false);\n\t\tthis.model.setProperty(\"/suggestedApps\", []);\n\t\tthis.model.setProperty(\"/suggestedAppsCount\", 0);\n\t\tthis.model.setProperty(\"/searchStatus\", SearchStatus.Searching);\n\t\tthis.model.setProperty(\"/userSelectedApps\", []);\n\t\tthis.appSuggestionList.removeSelections(true);\n\t\tthis.resetFeedback();\n\t};\n\n\t/**\n\t * Resets the panel to its default state.\n\t *\n\t * @private\n\t */\n\tpublic resetPanel(): void {\n\t\tconst defaultModelProperties = {\n\t\t\tquery: \"\",\n\t\t\thasError: false,\n\t\t\tsearchStatus: SearchStatus.Idle,\n\t\t\tsuggestedAppsCount: 0,\n\t\t\tuserSelectedApps: [],\n\t\t\tsuggestedApps: [],\n\t\t\tfeedback: {\n\t\t\t\tthumbsUp: false,\n\t\t\t\tthumbsDown: false\n\t\t\t},\n\t\t\tinvalidQuery: true\n\t\t};\n\n\t\tthis.model?.setData({ ...this.model.getData(), ...defaultModelProperties } as object);\n\t\tthis.userSelectedApps?.clear();\n\t}\n\n\t/**\n\t * Handles the \"Go\" button press event for searching suggested apps.\n\t *\n\t * @private\n\t * @async\n\t */\n\tpublic async onPressGo(): Promise<void> {\n\t\t// validate query\n\t\tconst query = this.model.getProperty(\"/query\") as string;\n\t\tif (!this.isValidQuery(query)) return;\n\n\t\ttry {\n\t\t\t// initiate search\n\t\t\tthis.resetSearch();\n\n\t\t\tconst rawApps = await this.fetchAppsFromSearch(query);\n\t\t\t// suggest apps if there are results and search is not cancelled\n\t\t\tif (this.model.getProperty(\"/searchStatus\") === SearchStatus.Searching) {\n\t\t\t\tconst allVisualizations = await this.fetchAllAvailableVisualizations();\n\t\t\t\tconst favoriteApps = await this.appManagerInstance.fetchFavVizs(true, true);\n\t\t\t\tconst insightsApps = await this.appManagerInstance.fetchInsightApps(true, this._i18nBundle.getText(\"insights\") as string);\n\n\t\t\t\t// generate suggested apps\n\t\t\t\tconst apps = this._generateApps(rawApps, allVisualizations, [...favoriteApps, ...insightsApps]);\n\t\t\t\tconst suggestedApps = await this._filterUnsupportedApps(apps);\n\n\t\t\t\tif (suggestedApps.length === 0 && !this.model.getProperty(\"/hasError\")) {\n\t\t\t\t\tthis._handleError(\"\", suggestedApps.length);\n\t\t\t\t} else {\n\t\t\t\t\t// update model with filtered apps\n\t\t\t\t\tthis.model.setProperty(\"/suggestedApps\", suggestedApps);\n\t\t\t\t\tthis.model.setProperty(\"/suggestedAppsCount\", suggestedApps.length);\n\t\t\t\t\tthis.appSuggestionList.updateAggregation(\"items\", ChangeReason.Refresh, { detailedReason: ChangeReason.Refresh });\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tLog.error((err as Error).message);\n\t\t\tthis._handleError();\n\t\t} finally {\n\t\t\t// update search status only if search is not cancelled\n\t\t\tif (this.model.getProperty(\"/searchStatus\") === SearchStatus.Searching) {\n\t\t\t\tthis.model.setProperty(\"/searchStatus\", SearchStatus.Complete);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Filters out unsupported apps based on accessibility.\n\t *\n\t * @private\n\t * @param {SuggestedApp[]} apps - The list of suggested apps to filter.\n\t * @returns {Promise<SuggestedApp[]>} A promise that resolves to the filtered list of supported apps.\n\t */\n\tprivate async _filterUnsupportedApps(apps: SuggestedApp[]): Promise<SuggestedApp[]> {\n\t\tconst updatedApps = apps.filter((app) => (app.isStaticApp ? true : (app.vizData ?? false)));\n\t\tconst intents = updatedApps.map((app) => app.vizData?.target) || [];\n\t\tconst navigationService = await Container.getServiceAsync<Navigation>(\"Navigation\");\n\t\tconst supportedAppIndices = await navigationService.isNavigationSupported(intents as Target[]);\n\n\t\treturn updatedApps.filter((_, index) => supportedAppIndices[index]);\n\t}\n\n\t/**\n\t * Generates suggested apps from raw app data and visualizations.\n\t *\n\t * @private\n\t * @param {RawAppData[]} rawApps - The raw app data to process.\n\t * @param {IVisualization[]} allVisualizations - All available visualizations.\n\t * @param {ICustomVisualization[]} homePageVisualizations - Visualizations available in homepage.\n\t * @returns {SuggestedApp[]} The list of suggested apps.\n\t */\n\tprivate _generateApps(\n\t\trawApps: RawAppData[],\n\t\tallVisualizations: IVisualization[],\n\t\thomePageVisualizations: ICustomVisualization[]\n\t): SuggestedApp[] {\n\t\treturn rawApps.map((app) => {\n\t\t\tconst vizData = allVisualizations.find((viz) => viz.vizId === app.chipID);\n\t\t\tconst addedToHomePage = homePageVisualizations.some((viz) => viz.visualization?.vizId === app.chipID);\n\t\t\treturn {\n\t\t\t\ttitle: app.title,\n\t\t\t\tchipID: app.chipID,\n\t\t\t\tsubTitle: app.subTitle,\n\t\t\t\tdescription: app.appDescription,\n\t\t\t\ticon: app.iconUrl,\n\t\t\t\tvizData,\n\t\t\t\taddedToHomePage,\n\t\t\t\tisStaticApp: app.tileType === TileType.Static,\n\t\t\t\tstatus: this.getAppStatusTexts(app.configuration, addedToHomePage),\n\t\t\t\turl: vizData?.targetURL || \"\"\n\t\t\t};\n\t\t}) as SuggestedApp[];\n\t}\n\n\t/**\n\t * Validates the query string based on minimum length.\n\t *\n\t * @private\n\t * @param {string} query - The query string to validate.\n\t * @returns {boolean} True if the query is valid, otherwise false.\n\t */\n\tprivate isValidQuery(query: string = \"\"): boolean {\n\t\tquery = query?.trim();\n\t\treturn query.length >= Constants.MinQueryLength && query.length <= Constants.MaxDescriptionLength;\n\t}\n\n\t/**\n\t * Fetches all available visualizations for the user.\n\t *\n\t * @private\n\t * @async\n\t * @returns {Promise<IVisualization[]>} A promise that resolves to the list of visualizations.\n\t */\n\tprivate async fetchAllAvailableVisualizations(): Promise<IVisualization[]> {\n\t\tif (!this.allAvailableVisualizations) {\n\t\t\tconst searchableContentService = await Container.getServiceAsync<SearchableContent>(\"SearchableContent\");\n\t\t\tconst allAvailableApps = await searchableContentService.getApps({ enableVisualizationPreview: false });\n\t\t\tthis.allAvailableVisualizations = allAvailableApps.reduce((visualizations: IVisualization[], currentApp: AppData) => {\n\t\t\t\treturn visualizations.concat(currentApp.visualizations);\n\t\t\t}, []);\n\t\t}\n\n\t\treturn this.allAvailableVisualizations;\n\t}\n\n\t/**\n\t * Fetches a CSRF token for secure API requests.\n\t *\n\t * @private\n\t * @async\n\t * @returns {Promise<string | null>} A promise that resolves to the CSRF token or null if fetching fails.\n\t */\n\tprivate async _fetchCSRFToken(): Promise<string | null> {\n\t\ttry {\n\t\t\tconst response = await fetch(AI_APP_FINDER_BASE_URL, { method: \"GET\", headers: { \"X-CSRF-Token\": \"Fetch\" } });\n\t\t\treturn response.headers.get(\"X-CSRF-Token\");\n\t\t} catch (error) {\n\t\t\tLog.error(\"Failed to fetch CSRF token\", error as Error);\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t/**\n\t * Fetches apps from the search API based on the query.\n\t *\n\t * @private\n\t * @async\n\t * @param {string} query - The search query string.\n\t * @returns {Promise<RawAppData[]>} A promise that resolves to the list of raw app data.\n\t */\n\tprivate async fetchAppsFromSearch(query: string): Promise<RawAppData[]> {\n\t\ttry {\n\t\t\tconst token = await this._fetchCSRFToken();\n\t\t\tconst headers = {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t...(token && { \"X-CSRF-Token\": token })\n\t\t\t};\n\n\t\t\tconst response = await fetch(AI_APP_FINDER_API, {\n\t\t\t\tmethod: \"POST\",\n\t\t\t\theaders,\n\t\t\t\tbody: JSON.stringify({ UserInput: query })\n\t\t\t});\n\n\t\t\t// handle error responses\n\t\t\tif (!response.ok) {\n\t\t\t\tconst errorResponse = (await response.json()) as ErrorResponse;\n\t\t\t\tthis._handleError(errorResponse.error?.message || \"\");\n\t\t\t\treturn [];\n\t\t\t}\n\n\t\t\tconst queryResult = (await response.json()) as QueryResponse;\n\t\t\treturn queryResult.value || [];\n\t\t} catch (error) {\n\t\t\tLog.error((error as Error).message);\n\t\t\tthis._handleError();\n\t\t\treturn [];\n\t\t}\n\t}\n\n\t/**\n\t * Retrieves status texts for an app based on its configuration and homepage status.\n\t *\n\t * @private\n\t * @param {string} configuration - The app's configuration string.\n\t * @param {boolean} addedToHomePage - Indicates if the app is already added to the homepage.\n\t * @returns {string[]} An array of status texts for the app.\n\t */\n\tprivate getAppStatusTexts(configuration: string, addedToHomePage: boolean): string[] {\n\t\tlet statusTexts = [];\n\n\t\tif (configuration) {\n\t\t\ttry {\n\t\t\t\tconst parsedConfig = JSON.parse(configuration) as Configuration;\n\t\t\t\tconst tileConfig = JSON.parse(parsedConfig?.tileConfiguration) as TileConfig;\n\t\t\t\tconst infoText = (tileConfig?.display_info_text || \"\").toLowerCase();\n\t\t\t\tif (infoText === Constants.DeprecatedInfoText) {\n\t\t\t\t\tstatusTexts.push(this._i18nBundle.getText(\"deprecatedApp\") as string);\n\t\t\t\t}\n\t\t\t} catch (error: unknown) {\n\t\t\t\tLog.warning((error as Error).message);\n\t\t\t}\n\t\t}\n\n\t\tif (addedToHomePage) {\n\t\t\tstatusTexts.push(this._i18nBundle.getText(\"alreadyAddedApp\") as string);\n\t\t}\n\n\t\treturn statusTexts;\n\t}\n\n\t/**\n\t * Generates status text controls for the provided status texts.\n\t *\n\t * @private\n\t * @param {string} id - The id of the list item.\n\t * @param {string[]} stausTexts - The list of status texts.\n\t * @returns {Text[]} An array of Text controls with applied styles.\n\t */\n\tprivate _generateStatusTexts(id: string, stausTexts: string[]): Text[] {\n\t\treturn stausTexts.map((status, index) => {\n\t\t\treturn new Text(recycleId(`${id}-statusText-${index}`), {\n\t\t\t\ttext: status\n\t\t\t}).addStyleClass(this.applyStatusClass(status));\n\t\t});\n\t}\n\n\t/**\n\t * Applies a CSS class to the status text based on its type.\n\t *\n\t * @private\n\t * @param {string} status - The status text to classify.\n\t * @returns {string} The CSS class for the status text.\n\t */\n\tpublic applyStatusClass(status: string): string {\n\t\tif (status === this._i18nBundle.getText(\"alreadyAddedApp\")) {\n\t\t\treturn \"addedAppStatusText\";\n\t\t} else if (status === this._i18nBundle.getText(\"deprecatedApp\")) {\n\t\t\treturn \"deprecatedAppStatusText\";\n\t\t} else {\n\t\t\treturn \"\";\n\t\t}\n\t}\n\n\t/**\n\t * Handles the \"Add Apps\" button press event to add selected apps to favorites.\n\t *\n\t * @private\n\t * @async\n\t */\n\tprivate async onPressAddApps(): Promise<void> {\n\t\tconst userSelectedApps = this.model.getProperty(\"/userSelectedApps\") as CustomListItem[];\n\t\tlet staticAppsPresent = false;\n\t\tlet dynamicAppsPresent = false;\n\n\t\tfor (const app of userSelectedApps) {\n\t\t\tconst isStaticApp = app.getBindingContext()?.getProperty(\"isStaticApp\") as boolean;\n\t\t\tif (isStaticApp) staticAppsPresent = true;\n\t\t\telse dynamicAppsPresent = true;\n\n\t\t\tconst vizId = app.getBindingContext()?.getProperty(\"chipID\") as string;\n\t\t\tawait this.appManagerInstance.addVisualization(vizId, isStaticApp ? undefined : MYINSIGHT_SECTION_ID);\n\t\t}\n\n\t\tif (staticAppsPresent) {\n\t\t\tawait this.refreshFavoriteApps();\n\t\t}\n\n\t\tif (dynamicAppsPresent) {\n\t\t\tawait this.refreshInsightsApps();\n\t\t}\n\n\t\t(this.getParent() as ContentAdditionDialog)?.close();\n\t\tif (userSelectedApps.length > 1) {\n\t\t\tMessageToast.show(this._i18nBundle.getText(\"contentAddedToMyhome\") as string);\n\t\t} else {\n\t\t\tconst selectedItem = userSelectedApps?.[0];\n\t\t\tconst selectedAppTitle = (selectedItem?.getBindingContext?.()?.getProperty?.(\"title\") as string) ?? \"\";\n\t\t\tconst messageKey = staticAppsPresent ? \"appAddedToFavorites\" : \"tileAddedToInsights\";\n\t\t\tMessageToast.show(this._i18nBundle.getText(messageKey, [selectedAppTitle]) as string);\n\t\t}\n\t\tthis.resetPanel();\n\t}\n\n\t/**\n\t * Retrieves the parent BaseLayout instance for this panel.\n\t *\n\t * @private\n\t * @returns {BaseLayout} The parent BaseLayout instance.\n\t */\n\tprivate getLayout(): BaseLayout {\n\t\treturn this.getParent()?.getParent() as BaseLayout;\n\t}\n\n\t/**\n\t * Retrieves the AppsContainer instance from the parent layout.\n\t *\n\t * @private\n\t * @returns {AppsContainer | undefined} The AppsContainer instance or undefined if not found.\n\t */\n\tprivate getAppsContainer(): AppsContainer | undefined {\n\t\treturn this.getLayout()\n\t\t\t?.getItems()\n\t\t\t.find((container) => container instanceof AppsContainer);\n\t}\n\n\t/**\n\t * Retrieves the favorite apps panel from the AppsContainer.\n\t *\n\t * @private\n\t * @returns {FavAppPanel | undefined} The favorite apps panel or undefined if not found.\n\t */\n\tprivate getFavAppPanel(): FavAppPanel | undefined {\n\t\treturn this.getAppsContainer()\n\t\t\t?.getContent()\n\t\t\t.find((panel) => panel instanceof FavAppPanel);\n\t}\n\n\t/**\n\t * Refreshes the favorite apps panel in the AppsContainer.\n\t *\n\t * @private\n\t * @async\n\t */\n\tprivate async refreshFavoriteApps(): Promise<void> {\n\t\tawait this.getAppsContainer()?.refreshPanel(this.getFavAppPanel() as FavAppPanel);\n\t}\n\n\t/**\n\t * Retrieves the InsightsContainer instance from the parent layout.\n\t *\n\t * @private\n\t * @returns {InsightsContainer | undefined} The AppsContainer instance or undefined if not found.\n\t */\n\tprivate getInsightsContainer(): InsightsContainer | undefined {\n\t\treturn this.getLayout()\n\t\t\t?.getItems()\n\t\t\t.find((container) => container instanceof InsightsContainer);\n\t}\n\n\t/**\n\t * Refreshes the Insights tiles panel in the InsightsContainer.\n\t *\n\t * @private\n\t * @async\n\t */\n\tprivate async refreshInsightsApps(): Promise<void> {\n\t\tawait this.getInsightsContainer()?.refreshData(\"tiles\");\n\t}\n\n\t/**\n\t * Handles the selection change event for the suggested apps list.\n\t *\n\t * @public\n\t * @param {ListBase$SelectionChangeEvent} event - The selection change event.\n\t */\n\tpublic onListSelectionChange(event: ListBase$SelectionChangeEvent): void {\n\t\tconst listItem = event.getParameter(\"listItem\") as CustomListItem;\n\t\tconst selected = event.getParameter(\"selected\") as boolean;\n\n\t\tif (!selected) this.userSelectedApps.delete(listItem);\n\t\telse {\n\t\t\tconst context = listItem.getBindingContext();\n\t\t\tconst addedToHomePage = context?.getProperty(\"addedToHomePage\") as boolean;\n\t\t\tif (!addedToHomePage) this.userSelectedApps.add(listItem);\n\t\t}\n\n\t\tthis.model.setProperty(\"/userSelectedApps\", Array.from(this.userSelectedApps));\n\t}\n\n\t/**\n\t * Handles errors by updating the model with error details.\n\t *\n\t * @private\n\t * @param {string} [message=\"\"] - The error message to process.\n\t */\n\tprivate _handleError(message: string = \"\", suggestedResponseCount?: number): void {\n\t\tconst [, errorCode] = message.match(/\\((\\d{2})\\d*\\)\\s*(.*)/) || [];\n\t\tif (suggestedResponseCount === 0 || message.length === 0) {\n\t\t\tmessage = this._i18nBundle.getText(\"NoResultErrorDescription\") || \"\";\n\t\t}\n\t\tthis.model.setProperty(\"/hasError\", true);\n\t\tthis.model.setProperty(\"/errorType\", this._getErrorType(errorCode));\n\t\tthis.model.setProperty(\"/errorDescription\", message);\n\t}\n\n\t/**\n\t * Determines the error type based on the provided error code.\n\t *\n\t * @private\n\t * @param {string} [errorCode=\"\"] - The error code to evaluate.\n\t * @returns {ErrorType} The corresponding error type.\n\t */\n\tprivate _getErrorType(errorCode: string = \"\"): ErrorType {\n\t\tif (errorCode === \"10\") {\n\t\t\treturn ErrorType.ServiceError;\n\t\t} else {\n\t\t\treturn ErrorType.NoResultsFound;\n\t\t}\n\t}\n\n\t/**\n\t * Handles live change event for the search text area, updating value state and messages.\n\t *\n\t * @private\n\t * @param {TextArea$LiveChangeEvent} event - The live change event from the text area.\n\t */\n\tpublic onSearchTextAreaLiveChange(event: TextArea$LiveChangeEvent) {\n\t\tconst textArea = event.getSource();\n\t\tconst query = textArea.getValue().trim();\n\n\t\tif (query.length !== 0 && query.length < Constants.MinQueryLength) {\n\t\t\ttextArea.setValueState(ValueState.Information);\n\t\t\ttextArea.setValueStateText(this._i18nBundle.getText(\"minLengthRequired\"));\n\t\t} else if (query.length > Constants.MaxDescriptionLength) {\n\t\t\ttextArea.setValueState(ValueState.Warning);\n\t\t\ttextArea.setValueStateText(this._i18nBundle.getText(\"maxLengthExceeded\"));\n\t\t} else {\n\t\t\ttextArea.setValueState(ValueState.None);\n\t\t\ttextArea.setValueStateText(\"\");\n\t\t}\n\n\t\tthis.model.setProperty(\"/invalidQuery\", query.length === 0 || textArea.getValueState() !== ValueState.None);\n\t}\n\n\t/**\n\t * Generates the AI policy text with a link for display in the footer.\n\t *\n\t * @private\n\t * @returns {string} The formatted AI policy text.\n\t */\n\tpublic _generateAIPolicyText(): string {\n\t\tconst linkText = this._i18nBundle.getText(\"createdWithAI\");\n\t\treturn this._i18nBundle.getText(\"aiPolicyText\", [linkText])!;\n\t}\n\n\t/**\n\t * Resets the feedback state.\n\t *\n\t * @private\n\t */\n\tprivate resetFeedback(): void {\n\t\tthis.model.setProperty(\"/feedback\", {\n\t\t\tthumbsUp: false,\n\t\t\tthumbsDown: false\n\t\t});\n\t}\n\n\t/**\n\t * Marks feedback as provided and shows a confirmation message toast.\n\t *\n\t * @private\n\t */\n\tpublic sendFeedback(feedbackType: string): void {\n\t\tthis.resetFeedback();\n\t\tthis.model.setProperty(`/feedback/${feedbackType}`, true);\n\t\tMessageToast.show(this._i18nBundle.getText(\"feedBackSent\") as string, {\n\t\t\twidth: \"20em\"\n\t\t});\n\t}\n}\n"],"mappings":";;;;AAAAA,IAAAC,GAAAC,OAAA,0kBAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,sBAAAC,EAAAC,GAAA,OAAAA,KAAAC,mBAAAD,EAAAE,UAAA,YAAAF,EAAAE,QAAAF,CAAA,CAkjBO,SAAAG,EAAgBC,EAAMC,GAC5B,IACC,IAAIC,EAASF,GACd,CAAE,MAAMG,GACP,OAAOF,EAAQE,EAChB,CACA,GAAID,GAAUA,EAAOE,KAAM,CAC1B,OAAOF,EAAOE,UAAU,EAAGH,EAC5B,CACA,OAAOC,CACR,CAAC,MA/iBQG,EAAU9B,EAAA,cAkjBZ,SAAS+B,EAAiBN,EAAMO,GACtC,IACC,IAAIL,EAASF,GACd,CAAE,MAAOG,GACR,OAAOI,EAAU,KAAMJ,EACxB,CACA,GAAID,GAAUA,EAAOE,KAAM,CAC1B,OAAOF,EAAOE,KAAKG,EAAUC,KAAK,KAAM,OAAQD,EAAUC,KAAK,KAAM,MACtE,CACA,OAAOD,EAAU,MAAOL,EACzB,CAAC,MA5jBoBO,EAASlC,EAAA,mBAuJjBmC,SAAuCC,SAAW,YAAeA,OAAOC,WAAaD,OAAOC,SAAWD,OAAO,oBAAuB,aA7H3I,SAASE,EAAQC,EAAMC,EAAOC,GACpC,IAAKF,EAAKG,EAAG,CACZ,GAAID,aAAiBE,EAAO,CAC3B,GAAIF,EAAMC,EAAG,CACZ,GAAIF,EAAQ,EAAG,CACdA,EAAQC,EAAMC,CACf,CACAD,EAAQA,EAAMG,CACf,KAAO,CACNH,EAAMI,EAAIP,EAAQL,KAAK,KAAMM,EAAMC,GACnC,MACD,CACD,CACA,GAAIC,GAASA,EAAMZ,KAAM,CACxBY,EAAMZ,KAAKS,EAAQL,KAAK,KAAMM,EAAMC,GAAQF,EAAQL,KAAK,KAAMM,EAAM,IACrE,MACD,CACAA,EAAKG,EAAIF,EACTD,EAAKK,EAAIH,EACT,MAAMK,EAAWP,EAAKM,EACtB,GAAIC,EAAU,CACbA,EAASP,EACV,CACD,CACD,CAAC,MA9DYI,EAAsB,WAClC,SAAAA,IAAkB,CAClBA,EAAMI,UAAUlB,KAAO,SAASmB,EAAaC,GAC5C,MAAMtB,EAAS,IAAAgB,EACf,MAAMH,EAAQU,KAAKR,EACnB,GAAIF,EAAO,CACV,MAAMW,EAAWX,EAAQ,EAAIQ,EAAcC,EAC3C,GAAIE,EAAU,CACb,IACCb,EAAQX,EAAQ,EAAGwB,EAASD,KAAKN,GAClC,CAAE,MAAOhB,GACRU,EAAQX,EAAQ,EAAGC,EACpB,CACA,OAAOD,CACR,KAAO,CACN,OAAOuB,IACR,CACD,CACAA,KAAKL,EAAI,SAASO,GACjB,IACC,MAAMX,EAAQW,EAAMR,EACpB,GAAIQ,EAAMV,EAAI,EAAG,CAChBJ,EAAQX,EAAQ,EAAGqB,EAAcA,EAAYP,GAASA,EACvD,MAAO,GAAIQ,EAAY,CACtBX,EAAQX,EAAQ,EAAGsB,EAAWR,GAC/B,KAAO,CACNH,EAAQX,EAAQ,EAAGc,EACpB,CACD,CAAE,MAAOb,GACRU,EAAQX,EAAQ,EAAGC,EACpB,CACD,EACA,OAAOD,CACR,EACA,OAAAgB,CACD,CAnCmC,GAgE5B,SAASU,EAAeC,GAC9B,OAAOA,aAAoBX,GAASW,EAASZ,EAAI,CAClD,CA+CO,SAASa,EAAOC,EAAO/B,EAAMgC,GACnC,IAAIC,GAAK,EAAGnB,EAAMoB,EAClB,SAASC,EAAOjC,GACf,IACC,QAAS+B,EAAIF,EAAMK,UAAYJ,IAAUA,KAAU,CAClD9B,EAASF,EAAKiC,GACd,GAAI/B,GAAUA,EAAOE,KAAM,CAC1B,GAAIwB,EAAe1B,GAAS,CAC3BA,EAASA,EAAOiB,CACjB,KAAO,CACNjB,EAAOE,KAAK+B,EAAQD,IAAWA,EAASrB,EAAQL,KAAK,KAAMM,EAAO,IAAII,EAAS,KAC/E,MACD,CACD,CACD,CACA,GAAIJ,EAAM,CACTD,EAAQC,EAAM,EAAGZ,EAClB,KAAO,CACNY,EAAOZ,CACR,CACD,CAAE,MAAOC,GACRU,EAAQC,IAASA,EAAO,IAAII,GAAU,EAAGf,EAC1C,CACD,CACAgC,IACA,OAAOrB,CACR,CAAC,MAtHQuB,EAAUzD,EAAA,cAkJZ,SAAS0D,EAAOC,EAAQvC,EAAMgC,GACpC,UAAWO,EAAO7B,KAAqB,WAAY,CAClD,IAAIE,EAAW2B,EAAO7B,KAAoB8B,EAAM1B,EAAMoB,EACtD,SAASC,EAAOjC,GACf,IACC,QAASsC,EAAO5B,EAAS6B,QAAQC,QAAUV,IAAUA,KAAU,CAC9D9B,EAASF,EAAKwC,EAAKxB,OACnB,GAAId,GAAUA,EAAOE,KAAM,CAC1B,GAAIwB,EAAe1B,GAAS,CAC3BA,EAASA,EAAOiB,CACjB,KAAO,CACNjB,EAAOE,KAAK+B,EAAQD,IAAWA,EAASrB,EAAQL,KAAK,KAAMM,EAAO,IAAII,EAAS,KAC/E,MACD,CACD,CACD,CACA,GAAIJ,EAAM,CACTD,EAAQC,EAAM,EAAGZ,EAClB,KAAO,CACNY,EAAOZ,CACR,CACD,CAAE,MAAOC,GACRU,EAAQC,IAASA,EAAO,IAAII,GAAU,EAAGf,EAC1C,CACD,CACAgC,IACA,GAAIvB,EAAS+B,OAAQ,CACpB,IAAIC,EAAS,SAAS5B,GACrB,IACC,IAAKwB,EAAKE,KAAM,CACf9B,EAAS+B,QACV,CACD,CAAE,MAAMxC,GACR,CACA,OAAOa,CACR,EACA,GAAIF,GAAQA,EAAKV,KAAM,CACtB,OAAOU,EAAKV,KAAKwC,EAAQ,SAASzC,GACjC,MAAMyC,EAAOzC,EACd,EACD,CACAyC,GACD,CACA,OAAO9B,CACR,CAEA,KAAM,WAAYyB,GAAS,CAC1B,MAAM,IAAIM,UAAU,yBACrB,CAEA,IAAIC,EAAS,GACb,IAAK,IAAIb,EAAI,EAAGA,EAAIM,EAAOH,OAAQH,IAAK,CACvCa,EAAOC,KAAKR,EAAON,GACpB,CACA,OAAOH,EAAOgB,EAAQ,SAASb,GAAK,OAAOjC,EAAK8C,EAAOb,GAAK,EAAGD,EAChE,CAAC,MA/LMgB,EAAarD,EAAAT,GAAA,MAEb+D,EAAiBtD,EAAAR,GAAA,MAEjB+D,EAAWvD,EAAAP,GAAA,MACX+D,EAAiBxD,EAAAN,GAAA,MAEjB+D,EAAUzD,EAAAL,GAAA,MAEhB+D,EAAiB9D,EAAA,2BACjB+D,EAAsB/D,EAAA,gCACtBgE,EAA4BhE,EAAA,sCAC5BiE,EAAgBjE,EAAA,0BAChBkE,EAAelE,EAAA,yBACfmE,EAAQnE,EAAA,kBACRoE,EAAoBpE,EAAA,8BAEZqE,EAASpE,EAAA,mBACTqE,EAA+BpE,EAAA,yCAC/BqE,GAAuBpE,EAAA,iCAAEqE,GAAWrE,EAAA,eAE7C,MAAMsE,GAAY,CACjBC,mBAAoB,aACpBC,eAAgB,EAChBC,qBAAsB,KACrB,IAEGC,GAAY,SAAZA,KAAY,eAAZA,EAAY,yBAAZA,EAAY,8BAAZA,CAAY,EAAZA,IAAY,QAMZC,GAAS,SAATA,KAAS,mCAATA,EAAS,sCAATA,CAAS,EAATA,IAAS,QAKTC,GAAQ,SAARA,KAAQ,0BAARA,CAAQ,EAARA,IAAQ,IA6Cb,MAcqBC,GAA0BtB,EAAiBuB,OAAA,kCAAAC,YAAA,SAAAA,IAAAxB,EAAA3B,UAAAmD,YAAAC,MAAAjD,KAAAkD,WAAAlD,KACvDmD,mBAAiCxB,EAAWyB,cAuVpDpD,KAKQqD,YAA0B,KACjCrD,KAAKsD,iBAAiBC,QACtBvD,KAAKwD,MAAMC,YAAY,YAAa,OACpCzD,KAAKwD,MAAMC,YAAY,iBAAkB,IACzCzD,KAAKwD,MAAMC,YAAY,sBAAuB,GAC9CzD,KAAKwD,MAAMC,YAAY,gBAAiBd,GAAae,WACrD1D,KAAKwD,MAAMC,YAAY,oBAAqB,IAC5CzD,KAAK2D,kBAAkBC,iBAAiB,MACxC5D,KAAK6D,gBACL,EAtVMC,KAAI,SAAAC,IACVC,sBAAAhE,MACAA,KAAKsD,iBAAmB,IAAIW,IAG5BjE,KAAKyD,YAAY,MAAO3B,EAA6BoC,eACrDlE,KAAKyD,YAAY,QAASzD,KAAKmE,YAAYC,QAAQ,mBAGnDpE,KAAKqE,qBAGArE,KAAKsE,gBAGVtE,KAAKuE,YAAY,gBAAiB,KACjC,IAAKvE,KAAKwE,mBAAmBxE,KAAKyE,aAAuC,CACxEzE,KAAK0E,YACN,GAEF,EAOQL,cAAa,SAAAA,IACpBrE,KAAK2E,cAAgB,IAAIpI,EAAO4F,EAAU,GAAGnC,KAAK4E,uBAAwB,CACzEC,KAAM7E,KAAKmE,YAAYC,QAAQ,4BAC/BU,KAAMlG,EAAWmG,WACjBC,MAAOA,UACDhF,KAAKiF,oBAIZjF,KAAK2E,cAAcO,aAAa,UAAW,CAC1CC,MAAO,CAAC,YAAa,gBAAiB,qBACtCC,UAAWA,CAACC,EAAmBC,EAA4BhC,KAClD+B,GAAYC,IAAiB3C,GAAa4C,UAAYjC,EAAiB3C,OAAS,IAI1F0B,GAAwBrC,KAAK2E,cAAerC,GAAYkD,MAAOvD,EAASwD,YACxEzF,KAAK0F,gBAAgB1F,KAAK2E,cAC3B,EAQcL,cAAa,SAAAA,IAAA,IAAkB,MAAApE,EAC5CF,KAAI,OAAA2F,QAAAC,QAAiCpI,EAAUqI,gBAA4C,+BAA6BlH,KAAA,SAAAmH,GAAxH5F,EAAK6F,wBAAuBD,EAE5B,OAAAH,QAAAC,QAC4B1I,EAAS8I,KAAK,CACzCC,GAAI,GAAG/F,EAAK0E,kBACZsB,KAAM,kDACNC,WAAUjG,KACTvB,KAAA,SAAAyH,GAJF,MAAMC,EAAYD,EAKlBlG,EAAKoG,eAAe,UAAWD,GAG/BnG,EAAKsD,MAAQ,IAAInG,EAAU,CAC1BkJ,MAAO,GACPlB,SAAU,MACVmB,UAAW5D,GAAU6D,eACrBC,iBAAkB,GAClBpB,aAAc3C,GAAagE,KAC3BC,kBAAmB1G,EAAK2G,+BACxBC,mBAAoB,EACpBxD,iBAAkB,GAClByD,cAAe,GACfC,aAAc9G,EAAK+G,wBACnBC,aAAc,KACdC,SAAU,CACTC,SAAU,MACVC,WAAY,OAEbC,cAAe,CACd,CACCC,MAAO,EACPhB,MAAOrG,EAAKiE,YAAYC,QAAQ,kBAEjC,CACCmD,MAAO,EACPhB,MAAOrG,EAAKiE,YAAYC,QAAQ,kBAEjC,CACCmD,MAAO,EACPhB,MAAOrG,EAAKiE,YAAYC,QAAQ,qBAKnCiC,EAAamB,SAAStH,EAAKsD,OAC3B6C,EAAamB,SAAS,IAAIlK,EAAc,CAAEmK,WAAY,oCAAsC,QAC5FvH,EAAKyE,cAAc6C,SAAStH,EAAKsD,OAGjCtD,EAAKyD,kBAAoBzG,EAASwK,KAAK,GAAGxH,EAAK0E,kBAAmB,YAClE1E,EAAKyD,kBAAkBgE,gBAAgB,QAAS,CAC/CC,KAAM,iBACNC,QAAS3H,EAAK4H,kBAAkB/I,KAAImB,GACpC6H,OAAQ,IAAIxK,EAAO,CAClBqK,KAAM,SACNI,WAAYA,CAACC,EAAoBC,KAChC,MAAMC,EAAeC,IACpB,GAAIA,EAAYzH,SAAW,EAAG,OAAO,EAErC,MAAM0H,EAAkBD,EAAYE,SAASpI,EAAKiE,YAAYC,QAAQ,oBACtE,MAAMmE,EAAgBH,EAAYE,SAASpI,EAAKiE,YAAYC,QAAQ,kBAEpE,GAAIiE,GAAmBE,EAAe,OAAO,EAC7C,GAAIF,EAAiB,OAAO,EAC5B,GAAIE,EAAe,OAAO,EAE1B,OAAO,GAGR,MAAMC,EAAgBL,EAAYF,GAClC,MAAMQ,EAAiBN,EAAYD,GAEnC,OAAOM,EAAgBC,OAM1BvI,EAAKyD,kBAAkB+E,qBAAqB,KAC3C,GAAIxI,EAAKsD,MAAMmF,YAAY,uBAAyB,GAAKzI,EAAKsD,MAAMmF,YAAY,mBAAqBhG,GAAa4C,SAAU,CAC3HrF,EAAKyD,kBAAkBiF,aAAa,IAAIC,OACzC,IAID,MAAMC,EAAiB5L,EAASwK,KAAK,GAAGxH,EAAK0E,kBAAmB,kBAChEkE,EAAeC,WAAa7I,EAAK8I,UAAUjK,KAAImB,EAAO,IACvD,CAAC,MAAAxB,GAAA,OAAAiH,QAAAlF,OAAA/B,EAAA,GAUOoJ,kBAAiB,SAAAA,EAAC7B,EAAYgD,GACrC,MAAMC,EAAW,IAAI1M,EAAeyJ,EAAI,CACvCkD,SAAUF,EAAQN,YAAY,mBAC9BS,QAAS,CACR,IAAI1M,EAAQyF,EAAU,GAAG8D,sBAAwB,CAChDoD,WAAY,OACZC,UAAWL,EAAQN,YAAY,eAAiB,SAAW,MAC3DY,WAAYN,EAAQN,YAAY,eAAiB,QAAU,SAC3Da,MAAO,CAACxJ,KAAKyJ,wBAAwBxD,EAAIgD,GAAUjJ,KAAK0J,wBAAwBzD,EAAIgD,MAClFU,cAAc,uBAKnBT,EAASU,sBAAsB,MAAMC,YAAYZ,EAAQN,YAAY,oBAErE,OAAOO,CACR,EAUQO,wBAAuB,SAAAA,EAACxD,EAAYgD,GAC3C,MAAMa,EAAY,IAAIlN,EAAKuF,EAAU,GAAG8D,2BAA6B,CACpEoD,WAAY,SAGb,GAAIJ,EAAQN,YAAY,eAA2B,CAElDmB,EAAUC,QACT,IAAIpN,EAAYwF,EAAU,GAAG8D,eAAiB,CAC7C+D,KAAM,WACNC,UAAW,YACXC,MAAO,QACPC,OAAQlB,EAAQN,YAAY,SAC5ByB,UAAWnB,EAAQN,YAAY,YAC/B0B,SAAWpB,EAAQN,YAAY,SAAsB5G,EACrDuI,QAASrB,EAAQN,YAAY,eAC7B4B,IAAKtB,EAAQN,YAAY,OACzB3D,MAAQwF,IACPxK,KAAKyK,eAAezK,KAAKyE,aACzBzF,EAAU0L,SAASF,EAAMG,aAAaC,SAAU,UAE/CjB,cAAc,iBAEnB,KAAO,CAEN,MAAMkB,EAAU5B,EAAQN,YAAY,WACpC,MAAMmC,EAAW9K,KAAK+F,wBAAwBgF,yBAAyBF,GACvEC,GAAUE,UAAU,MACpBF,GAAUG,YAAY,IAAMjL,KAAKyK,eAAezK,KAAKyE,cACrDqF,EAAUC,QAAQe,EACnB,CAEA,OAAOhB,CACR,EAUQJ,wBAAuB,SAAAA,EAACzD,EAAYgD,GAC3C,OAAO,IAAIhM,EAAKkF,EAAU,GAAG8D,2BAA6B,CACzDoD,WAAY,OACZ6B,IAAK,SACL1B,MAAO,CACN,IAAI/M,EAAe0F,EAAU,GAAG8D,iBAAmB,CAClDpB,KAAMoE,EAAQN,YAAY,eAC1BwC,cAAe5I,GAAUG,uBAE1B,IAAI9F,EAAKuF,EAAU,GAAG8D,0BAA4B,CACjDoD,WAAY,OACZiB,QAAUrB,EAAQN,YAAY,UAAuBhI,OAAS,EAC9D6I,MAAO,CACN,IAAI3M,EAAMsF,EAAU,GAAG8D,oBAAsB,CAC5CpB,KAAM7E,KAAKmE,YAAYC,QAAQ,aAC/BgH,UAAW,OAEZ,IAAIxO,EAAKuF,EAAU,GAAG8D,sBAAwB,CAC7CoD,WAAY,OACZG,MAAOxJ,KAAKqL,qBAAqBpF,EAAIgD,EAAQN,YAAY,aACvDgB,cAAc,mDAIlBA,cAAeV,EAAQN,YAAY,eAA6B,sBAAwB,wBAC5F,EAYa2C,YAAW,SAAAC,IAAA,IAAqB,MAAAC,EAOxCxL,KAAI,SAAAyL,IASR,IAAKD,EAAKE,iBAAkB,CAC3BF,EAAKG,mBAAmBH,EAAK7G,eAC7B,MAAMiH,EAAwBJ,EAAK/G,YACnCmH,EAAsBC,YAAWL,GACjCI,EAAsBE,qBACvB,CAEA,OAAON,EAAKE,gBAAiB,CAtB7B,MAAMK,EAAqB,CAC1BjL,OAAQ,CACPkL,eAAgB,oBAChBC,OAAQ,YAER,MAAAC,EAAA,cACEV,EAAKE,mBAAqBS,UAAS,CACtCX,EAAKE,iBAAmB,MAAM,MAAAU,EAAA,cAE1BZ,EAAKa,iBAAgB,QAAA1G,QAAAC,QACMxD,EAAgCJ,EAAgBsK,mBAAoBP,IAAWpN,KAAA,SAAA4N,GAA7Gf,EAAKE,iBAAgBa,CAAyF,IAHjF,GAGiF,GAAAH,KAAAzN,KAAA,OAAAyN,EAAAzN,KAAA,eAL9G,GAK8G,OAAAgH,QAAAC,QAAAsG,KAAAvN,KAAAuN,EAAAvN,KAAA8M,KAAAS,GAajH,CAAC,MAAAxN,GAAA,OAAAiH,QAAAlF,OAAA/B,EAAA,GAQOmI,6BAA4B,SAAAA,IACnC,MAAM2F,EAAiB,61BAqBvB,MAAO,CACN,2CACGA,4TAKH,2CACGA,yZAOL,EAuBO9H,WAAU,SAAA+H,IAChB,MAAMC,EAAyB,CAC9BnG,MAAO,GACPlB,SAAU,MACVC,aAAc3C,GAAagE,KAC3BG,mBAAoB,EACpBxD,iBAAkB,GAClByD,cAAe,GACfI,SAAU,CACTC,SAAU,MACVC,WAAY,OAEbH,aAAc,MAGflH,KAAKwD,OAAOmJ,QAAQ,IAAK3M,KAAKwD,MAAMoJ,aAAcF,IAClD1M,KAAKsD,kBAAkBC,OACxB,EAQayF,UAAS,SAAA6D,IAAA,IAAkB,MAAAC,EAEzB9M,KAAd,MAAMuG,EAAQuG,EAAKtJ,MAAMmF,YAAY,UACrC,IAAKmE,EAAKC,aAAaxG,GAAQ,OAAAZ,QAAAC,UAAO,MAAAoH,EAAAnO,EAAA,kBAAAP,EAAA,WAIrCwO,EAAKzJ,cAAc,OAAAsC,QAAAC,QAEGkH,EAAKG,oBAAoB1G,IAAM5H,KAAA,SAA/CuO,GAAO,MAAAC,EAAA,cAETL,EAAKtJ,MAAMmF,YAAY,mBAAqBhG,GAAae,UAAS,QAAAiC,QAAAC,QACrCkH,EAAKM,mCAAiCzO,KAAA,SAAhE0O,GAAiB,OAAA1H,QAAAC,QACIkH,EAAK3J,mBAAmBmK,aAAa,KAAM,OAAK3O,KAAA,SAArE4O,GAAY,OAAA5H,QAAAC,QACSkH,EAAK3J,mBAAmBqK,iBAAiB,KAAMV,EAAK3I,YAAYC,QAAQ,cAAsBzF,KAAA,SAAnH8O,GAGN,MAAMC,EAAOZ,EAAKa,cAAcT,EAASG,EAAmB,IAAIE,KAAiBE,IAAe,OAAA9H,QAAAC,QACpEkH,EAAKc,uBAAuBF,IAAK/O,KAAA,SAAvDoI,GAAa,GAEfA,EAAcpG,SAAW,IAAMmM,EAAKtJ,MAAMmF,YAAY,aAAY,CACrEmE,EAAKe,aAAa,GAAI9G,EAAcpG,OAAQ,MAG5CmM,EAAKtJ,MAAMC,YAAY,iBAAkBsD,GACzC+F,EAAKtJ,MAAMC,YAAY,sBAAuBsD,EAAcpG,QAC5DmM,EAAKnJ,kBAAkBmK,kBAAkB,QAAS1Q,EAAa2Q,QAAS,CAAEC,eAAgB5Q,EAAa2Q,SAAW,WAjBvG,GAiBuG,GAAAZ,KAAAxO,KAAA,OAAAwO,EAAAxO,KAAA,eAGrH,EAAC,SAAQsP,GACR3R,EAAI4R,MAAOD,EAAcE,SACzBrB,EAAKe,cACN,EAAC,WAAAO,EAAAC,GAEA,GAAIvB,EAAKtJ,MAAMmF,YAAY,mBAAqBhG,GAAae,UAAW,CACvEoJ,EAAKtJ,MAAMC,YAAY,gBAAiBd,GAAa4C,SACtD,CAAC,GAAA6I,EAAA,MAAAC,EAAA,OAAAA,CAAA,UAAA1I,QAAAC,QAAAoH,KAAArO,KAAAqO,EAAArO,KAAA,qBAEH,CAAC,MAAAD,GAAA,OAAAiH,QAAAlF,OAAA/B,EAAA,GASakP,uBAAsB,SAAAA,EAACF,GAAoB,IACxD,MAAMY,EAAcZ,EAAKa,OAAQC,GAASA,EAAIC,YAAc,KAAQD,EAAI3D,SAAW,OACnF,MAAM6D,EAAUJ,EAAYK,IAAKH,GAAQA,EAAI3D,SAAS/J,SAAW,GAAG,OAAA6E,QAAAC,QACpCpI,EAAUqI,gBAA4B,eAAalH,KAAA,SAA7EiQ,GAAiB,OAAAjJ,QAAAC,QACWgJ,EAAkBC,sBAAsBH,IAAoB/P,KAAA,SAAxFmQ,GAEN,OAAOR,EAAYC,OAAO,CAACQ,EAAGxH,IAAUuH,EAAoBvH,GAAQ,IACrE,CAAC,MAAA7I,GAAA,OAAAiH,QAAAlF,OAAA/B,EAAA,GAWOiP,cAAa,SAAAA,EACpBT,EACAG,EACA2B,GAEA,OAAO9B,EAAQyB,IAAKH,IACnB,MAAM3D,EAAUwC,EAAkB4B,KAAMC,GAAQA,EAAIC,QAAUX,EAAIY,QAClE,MAAMC,EAAkBL,EAAuBM,KAAMJ,GAAQA,EAAIK,eAAeJ,QAAUX,EAAIY,QAC9F,MAAO,CACNI,MAAOhB,EAAIgB,MACXJ,OAAQZ,EAAIY,OACZK,SAAUjB,EAAIiB,SACdC,YAAalB,EAAImB,eACjBC,KAAMpB,EAAIqB,QACVhF,UACAwE,kBACAZ,YAAaD,EAAIsB,WAAajN,GAASkN,OACvCC,OAAQhQ,KAAKiQ,kBAAkBzB,EAAI0B,cAAeb,GAClD9E,IAAKM,GAASsF,WAAa,KAG9B,EASQpD,aAAY,SAAAqD,EAAC7J,EAAgB,IACpCA,EAAQA,GAAO8J,OACf,OAAO9J,EAAM5F,QAAU4B,GAAUE,gBAAkB8D,EAAM5F,QAAU4B,GAAUG,oBAC9E,EASc0K,gCAA+B,SAAAkD,IAAA,IAA8B,MAAAC,EACrEvQ,KAAI,SAAAwQ,IAQT,OAAOD,EAAKE,0BAA2B,OAAAC,EAAA,eARlCH,EAAKE,2BAA0B,QAAA9K,QAAAC,QACIpI,EAAUqI,gBAAmC,sBAAoBlH,KAAA,SAAlGgS,GAAwB,OAAAhL,QAAAC,QACC+K,EAAyBC,QAAQ,CAAEC,2BAA4B,SAAQlS,KAAA,SAAhGmS,GACNP,EAAKE,2BAA6BK,EAAiBC,OAAO,CAACC,EAAkCC,IACrFD,EAAeE,OAAOD,EAAWD,gBACtC,GAAI,MAG+B,GAH/B,OAAArL,QAAAC,QAAA8K,KAAA/R,KAAA+R,EAAA/R,KAAA6R,KAAAE,GAIT,CAAC,MAAAhS,GAAA,OAAAiH,QAAAlF,OAAA/B,EAAA,GASayS,gBAAe,SAAAA,IAAA,IAA2B,OAAAxL,QAAAC,QAAAtH,EAAA,WACnD,OAAAqH,QAAAC,QACoBwL,MAAMvP,EAAwB,CAAEwP,OAAQ,MAAOC,QAAS,CAAE,eAAgB,YAAY3S,KAAA,SAAvG4S,GACN,OAAOA,EAASD,QAAQE,IAAI,eAAgB,EAC7C,EAAC,SAAQtD,GACR5R,EAAI4R,MAAM,6BAA8BA,GACxC,OAAO,IACR,GACD,CAAC,MAAAxP,GAAA,OAAAiH,QAAAlF,OAAA/B,EAAA,GAUauO,oBAAmB,SAAAwE,EAAClL,GAAa,IAAyB,MAAAmL,EAElD1R,KAAI,OAAA2F,QAAAC,QAAAtH,EAAA,WADrB,OAAAqH,QAAAC,QACiB8L,EAAKP,mBAAiBxS,KAAA,SAApCgT,GACN,MAAML,EAAU,CACf,eAAgB,sBACZK,GAAS,CAAE,eAAgBA,IAC9B,OAAAhM,QAAAC,QAEqBwL,MAAMxP,EAAmB,CAC/CyP,OAAQ,OACRC,UACA/S,KAAMqT,KAAKC,UAAU,CAAEC,UAAWvL,OACjC5H,KAAA,SAJI4S,GAAQ,IAAAQ,EAAA,eAAAC,EAAAC,GAAA,OAAAF,EAAAE,EAAAtM,QAAAC,QAaa2L,EAASW,QAAMvT,KAAA,SAAAwT,GAA1C,MAAMC,EAAWD,EACjB,OAAOC,EAAY7S,OAAS,EAAG,SAAA8S,EAAA,eAP1Bd,EAASe,GAAE,QAAA3M,QAAAC,QACc2L,EAASW,QAAMvT,KAAA,SAAA4T,GAA5C,MAAMC,EAAaD,EACnBb,EAAK7D,aAAa2E,EAActE,OAAOC,SAAW,IAAI,MAAAsE,EAC/C,GAAEV,EAAA,YAAAU,CAAA,IAIqB,GAR/B,OAAAJ,KAAA1T,KAAA0T,EAAA1T,KAAAqT,KAAAK,EAAA,IASD,EAAC,SAAQnE,GACR5R,EAAI4R,MAAOA,EAAgBC,SAC3BuD,EAAK7D,eACL,MAAO,EACR,GACD,CAAC,MAAAnP,GAAA,OAAAiH,QAAAlF,OAAA/B,EAAA,GAUOuR,kBAAiB,SAAAyC,EAACxC,EAAuBb,GAChD,IAAIsD,EAAc,GAElB,GAAIzC,EAAe,CAClB,IACC,MAAM0C,EAAehB,KAAKiB,MAAM3C,GAChC,MAAM4C,EAAalB,KAAKiB,MAAMD,GAAcG,mBAC5C,MAAMC,GAAYF,GAAYG,mBAAqB,IAAIC,cACvD,GAAIF,IAAazQ,GAAUC,mBAAoB,CAC9CmQ,EAAYrR,KAAKtB,KAAKmE,YAAYC,QAAQ,iBAC3C,CACD,CAAE,MAAO8J,GACR5R,EAAI6W,QAASjF,EAAgBC,QAC9B,CACD,CAEA,GAAIkB,EAAiB,CACpBsD,EAAYrR,KAAKtB,KAAKmE,YAAYC,QAAQ,mBAC3C,CAEA,OAAOuO,CACR,EAUQtH,qBAAoB,SAAAA,EAACpF,EAAYmN,GACxC,OAAOA,EAAWzE,IAAI,CAACqB,EAAQzI,IACvB,IAAIvK,EAAKmF,EAAU,GAAG8D,gBAAiBsB,KAAU,CACvD1C,KAAMmL,IACJrG,cAAc3J,KAAKqT,iBAAiBrD,IAEzC,EASOqD,iBAAgB,SAAAC,EAACtD,GACvB,GAAIA,IAAWhQ,KAAKmE,YAAYC,QAAQ,mBAAoB,CAC3D,MAAO,oBACR,MAAO,GAAI4L,IAAWhQ,KAAKmE,YAAYC,QAAQ,iBAAkB,CAChE,MAAO,yBACR,KAAO,CACN,MAAO,EACR,CACD,EAQca,eAAc,SAAAsO,IAAA,IAAkB,MAAAC,EACpBxT,KAAI,SAAAyT,IAAA,SAAAC,IAAA,SAAAC,IAqB5BH,EAAK/O,aAAuCmP,QAC7C,GAAItQ,EAAiB3C,OAAS,EAAG,CAChC5D,EAAa8W,KAAKL,EAAKrP,YAAYC,QAAQ,wBAC5C,KAAO,CACN,MAAM0P,EAAexQ,IAAmB,GACxC,MAAMyQ,EAAoBD,GAAcE,uBAAuBrL,cAAc,UAAuB,GACpG,MAAMsL,EAAaC,EAAoB,sBAAwB,sBAC/DnX,EAAa8W,KAAKL,EAAKrP,YAAYC,QAAQ6P,EAAY,CAACF,IACzD,CACAP,EAAK9O,YAAa,OAAAyP,EAAA,cAbdC,EAAkB,QAAAzO,QAAAC,QACf4N,EAAKa,uBAAqB1V,KAAA,eAYf,GAZe,OAAAwV,KAAAxV,KAAAwV,EAAAxV,KAAAgV,KAAAQ,EAAA,OAAAG,EAAA,cAL7BJ,EAAiB,QAAAvO,QAAAC,QACd4N,EAAKe,uBAAqB5V,KAAA,eAIA,GAJA,OAAA2V,KAAA3V,KAAA2V,EAAA3V,KAAA+U,KAAAY,EAAA,CAdjC,MAAMhR,EAAmBkQ,EAAKhQ,MAAMmF,YAAY,qBAChD,IAAIuL,EAAoB,MACxB,IAAIE,EAAqB,MAAM,MAAAI,EAAA3T,EAEbyC,EAAgB,SAAvBkL,GACV,MAAMC,EAAcD,EAAIwF,qBAAqBrL,YAAY,eACzD,GAAI8F,EAAayF,EAAoB,UAChCE,EAAqB,KAE1B,MAAMjF,EAAQX,EAAIwF,qBAAqBrL,YAAY,UAAoB,OAAAhD,QAAAC,QACjE4N,EAAKrQ,mBAAmBsR,iBAAiBtF,EAAOV,EAActC,UAAYjK,IAAqBvD,KAAA,aACtG,GAAC,OAAAgH,QAAAC,QAAA4O,KAAA7V,KAAA6V,EAAA7V,KAAA8U,KAAAe,GAoBF,CAAC,MAAA9V,GAAA,OAAAiH,QAAAlF,OAAA/B,EAAA,GAQOgW,UAAS,SAAAC,IAChB,OAAO3U,KAAKyE,aAAaA,WAC1B,EAQQmQ,iBAAgB,SAAAC,IACvB,OAAO7U,KAAK0U,aACT9L,WACDqG,KAAMnF,GAAcA,aAAqBvI,EAC5C,EAQQ8K,eAAc,SAAAyI,IACrB,OAAO9U,KAAK4U,oBACTG,aACD9F,KAAM+F,GAAUA,aAAiBvT,EACpC,EAQc8S,oBAAmB,SAAAU,IAAA,IAAkB,MAAAC,EAC5ClV,KAAI,OAAA2F,QAAAC,QAAJsP,EAAKN,oBAAoBO,aAAaD,EAAK7I,mBAAgC1N,KAAA,aAClF,CAAC,MAAAD,GAAA,OAAAiH,QAAAlF,OAAA/B,EAAA,GAQO0W,qBAAoB,SAAAC,IAC3B,OAAOrV,KAAK0U,aACT9L,WACDqG,KAAMnF,GAAcA,aAAqBpI,EAC5C,EAQc2S,oBAAmB,SAAAiB,IAAA,IAAkB,MAAAC,EAC5CvV,KAAI,OAAA2F,QAAAC,QAAJ2P,EAAKH,wBAAwBI,YAAY,UAAQ7W,KAAA,aACxD,CAAC,MAAAD,GAAA,OAAAiH,QAAAlF,OAAA/B,EAAA,GAQM+W,sBAAqB,SAAAC,EAAClL,GAC5B,MAAMtB,EAAWsB,EAAMmL,aAAa,YACpC,MAAMxM,EAAWqB,EAAMmL,aAAa,YAEpC,IAAKxM,EAAUnJ,KAAKsD,iBAAiBsS,OAAO1M,OACvC,CACJ,MAAMD,EAAUC,EAAS8K,oBACzB,MAAM3E,EAAkBpG,GAASN,YAAY,mBAC7C,IAAK0G,EAAiBrP,KAAKsD,iBAAiBuS,IAAI3M,EACjD,CAEAlJ,KAAKwD,MAAMC,YAAY,oBAAqBqS,MAAMC,KAAK/V,KAAKsD,kBAC7D,EAQQuK,aAAY,SAAAA,EAACM,EAAkB,GAAI6H,GAC1C,MAAM,CAAGC,GAAa9H,EAAQ+H,MAAM,0BAA4B,GAChE,GAAIF,IAA2B,GAAK7H,EAAQxN,SAAW,EAAG,CACzDwN,EAAUnO,KAAKmE,YAAYC,QAAQ,6BAA+B,EACnE,CACApE,KAAKwD,MAAMC,YAAY,YAAa,MACpCzD,KAAKwD,MAAMC,YAAY,aAAczD,KAAKmW,cAAcF,IACxDjW,KAAKwD,MAAMC,YAAY,oBAAqB0K,EAC7C,EASQgI,cAAa,SAAAA,EAACF,EAAoB,IACzC,GAAIA,IAAc,KAAM,CACvB,OAAOrT,GAAUwT,YAClB,KAAO,CACN,OAAOxT,GAAU6D,cAClB,CACD,EAQO4P,2BAA0B,SAAAC,EAAC9L,GACjC,MAAM+L,EAAW/L,EAAMG,YACvB,MAAMpE,EAAQgQ,EAASC,WAAWnG,OAElC,GAAI9J,EAAM5F,SAAW,GAAK4F,EAAM5F,OAAS4B,GAAUE,eAAgB,CAClE8T,EAASE,cAAc7V,EAAW8V,aAClCH,EAASI,kBAAkB3W,KAAKmE,YAAYC,QAAQ,qBACrD,MAAO,GAAImC,EAAM5F,OAAS4B,GAAUG,qBAAsB,CACzD6T,EAASE,cAAc7V,EAAWgW,SAClCL,EAASI,kBAAkB3W,KAAKmE,YAAYC,QAAQ,qBACrD,KAAO,CACNmS,EAASE,cAAc7V,EAAWiW,MAClCN,EAASI,kBAAkB,GAC5B,CAEA3W,KAAKwD,MAAMC,YAAY,gBAAiB8C,EAAM5F,SAAW,GAAK4V,EAASO,kBAAoBlW,EAAWiW,KACvG,EAQO5P,sBAAqB,SAAAA,IAC3B,MAAM8P,EAAW/W,KAAKmE,YAAYC,QAAQ,iBAC1C,OAAOpE,KAAKmE,YAAYC,QAAQ,eAAgB,CAAC2S,GAClD,EAOQlT,cAAa,SAAAmT,IACpBhX,KAAKwD,MAAMC,YAAY,YAAa,CACnC2D,SAAU,MACVC,WAAY,OAEd,EAOO4P,aAAY,SAAAC,EAACC,GACnBnX,KAAK6D,gBACL7D,KAAKwD,MAAMC,YAAY,aAAa0T,IAAgB,MACpDpa,EAAa8W,KAAK7T,KAAKmE,YAAYC,QAAQ,gBAA2B,CACrE8F,MAAO,QAET,IAAC,OA30BmBpH,EAAiB","ignoreList":[]}