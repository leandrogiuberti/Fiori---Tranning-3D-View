{"version":3,"file":"HttpHelper-dbg.js","names":["sap","ui","define","Log","BaseObject","___Constants","_catch","body","recover","result","e","then","REPO_BASE_URL","HttpHelper","constructor","fetchCSRFToken","fetch","method","headers","response","token","get","ok","Error","catch","error","message","Post","url","payload","csrfToken","JSON","stringify","json","GetJSON","GetMultipleRequests","urls","Promise","resolve","all","map","includes","_response$json","text","reject"],"sources":["HttpHelper.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nimport Log from \"sap/base/Log\";\nimport BaseObject from \"sap/ui/base/Object\";\nimport { REPO_BASE_URL } from \"./Constants\";\n\n/**\n *\n * @class Provides the HttpHelper Class used for Get and Post Calls.\n *\n * @extends sap.ui.BaseObject\n *\n * @author SAP SE\n * @version 0.0.1\n * @since 1.121.0\n * @private\n *\n * @alias sap.cux.home.utils.HttpHelper\n */\n\nexport default class HttpHelper extends BaseObject {\n\tprivate constructor() {\n\t\tsuper();\n\t}\n\n\t/**\n\t * Fetches the CSRF Token\n\t * @returns {Promise<string | void>} Promise that resolves with the CSRF Token\n\t */\n\tprivate static fetchCSRFToken(): Promise<string | void> {\n\t\treturn fetch(REPO_BASE_URL, {\n\t\t\tmethod: \"HEAD\",\n\t\t\theaders: {\n\t\t\t\t\"X-CSRF-Token\": \"Fetch\"\n\t\t\t}\n\t\t})\n\t\t\t.then((response) => {\n\t\t\t\tconst token = response.headers.get(\"X-CSRF-Token\");\n\t\t\t\tif (response.ok && token) {\n\t\t\t\t\treturn token;\n\t\t\t\t}\n\t\t\t\tthrow new Error(\"Cannot fetch X-CSRF-Token.\");\n\t\t\t})\n\t\t\t.catch((error: Error) => {\n\t\t\t\tLog.error(error.message);\n\t\t\t});\n\t}\n\n\t/**\n\t * Post Method\n\t * @param {string} url - The URL to post to\n\t * @param {object} payload - The payload to post\n\t * @returns {Promise<unknown>} Promise that resolves with the response\n\t */\n\tpublic static Post(url: string, payload: object): Promise<unknown> {\n\t\treturn HttpHelper.fetchCSRFToken()\n\t\t\t.then((csrfToken) => {\n\t\t\t\treturn fetch(url, {\n\t\t\t\t\tmethod: \"POST\",\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t\"X-CSRF-Token\": csrfToken as string,\n\t\t\t\t\t\t\"content-type\": \"application/json\"\n\t\t\t\t\t},\n\t\t\t\t\tbody: JSON.stringify(payload)\n\t\t\t\t});\n\t\t\t})\n\t\t\t.then((response) => {\n\t\t\t\treturn response.json();\n\t\t\t})\n\t\t\t.catch((error: Error) => {\n\t\t\t\tLog.error(error.message);\n\t\t\t});\n\t}\n\n\t/**\n\t * Get Method for JSON Data\n\t * @param {string} url - The URL to get from\n\t * @returns {Promise<unknown>} Promise that resolves with the JSON data response\n\t */\n\tpublic static GetJSON(url: string): Promise<unknown> {\n\t\treturn fetch(url)\n\t\t\t.then((response) => {\n\t\t\t\treturn response.json();\n\t\t\t})\n\t\t\t.catch((error: Error) => {\n\t\t\t\tLog.error(error.message);\n\t\t\t});\n\t}\n\t/**\n\t * Get Method for Multiple Requests\n\t *\n\t * @param {string[]} urls - An array of URLs to get from\n\t * @returns {Promise<(string | object)[]>} Promise that resolves with the responses from the URLs\n\t */\n\tpublic static async GetMultipleRequests(urls: string[] = []): Promise<(string | object)[]> {\n\t\ttry {\n\t\t\tconst results = await Promise.all(\n\t\t\t\turls.map(async (url) => {\n\t\t\t\t\tconst response = await fetch(url);\n\t\t\t\t\tif (response.headers.get(\"Content-Type\")?.includes(\"application/json\")) {\n\t\t\t\t\t\treturn (await response.json()) as object;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn await response.text();\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t);\n\n\t\t\treturn results;\n\t\t} catch (error: unknown) {\n\t\t\tLog.error((error as Error)?.message);\n\t\t\treturn [];\n\t\t}\n\t}\n}\n"],"mappings":"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","ignoreList":[]}