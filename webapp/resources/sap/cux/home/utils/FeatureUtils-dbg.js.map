{"version":3,"file":"FeatureUtils-dbg.js","names":["sap","ui","define","Log","Container","___Constants","__HttpHelper","_interopRequireDefault","obj","__esModule","default","_catch","body","recover","result","e","then","FEATURE_TOGGLE_SRVC_URL","FEATURE_TOGGLES","HttpHelper","featureToggles","Map","isFeatureEnabled","key","_temp2","get","has","Promise","resolve","_temp","unavailableToggles","Object","values","filter","toggle","getFeatureToggles","_getFeatureToggles","forEach","set","enabled","error","message","reject","keys","filterExpression","join","GetJSON","_HttpHelper$GetJSON","value","map","some","ToggleId","State","toUpperCase","isNavigationSupportedForFeature","featureToggle","intent","isFeatureToggleEnabled","getServiceAsync","navigationService","isNavigationSupported","supported","warning","Error","String","__exports"],"sources":["FeatureUtils.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nimport Log from \"sap/base/Log\";\nimport Container from \"sap/ushell/Container\";\nimport Navigation, { Target } from \"sap/ushell/services/Navigation\";\nimport { FEATURE_TOGGLE_SRVC_URL, FEATURE_TOGGLES } from \"./Constants\";\nimport HttpHelper from \"./HttpHelper\";\n\ninterface FeatureToggle {\n\tkey: FEATURE_TOGGLES;\n\tenabled: boolean;\n}\n\ninterface FeatureToggleResponse {\n\tvalue: {\n\t\tToggleId: FEATURE_TOGGLES;\n\t\tState: string;\n\t}[];\n}\n\nconst featureToggles = new Map<FEATURE_TOGGLES, boolean>();\n\n/**\n * Utility to check if a feature toggle is enabled.\n *\n * @param key The key of the feature toggle to check.\n * @returns Promise resolving to `true` if the feature toggle is enabled, `false` otherwise.\n */\nexport const isFeatureEnabled = async (key: FEATURE_TOGGLES): Promise<boolean> => {\n\tif (featureToggles.has(key)) {\n\t\treturn featureToggles.get(key)!;\n\t}\n\n\ttry {\n\t\tconst unavailableToggles = Object.values(FEATURE_TOGGLES).filter((toggle) => !featureToggles.has(toggle));\n\t\t(await getFeatureToggles(unavailableToggles)).forEach((toggle) => featureToggles.set(toggle.key, toggle.enabled));\n\t} catch (error) {\n\t\tLog.error(\"Error fetching feature toggles\", (error as Error).message);\n\t\tfeatureToggles.set(key, false);\n\t}\n\n\treturn featureToggles.get(key) || false;\n};\n\n/**\n * Utility to fetch feature toggles from the server.\n *\n * @param keys An array of feature toggle keys to fetch.\n * @returns Promise resolving to an array of feature toggles.\n */\nconst getFeatureToggles = async (keys: FEATURE_TOGGLES[]): Promise<FeatureToggle[]> => {\n\tconst filterExpression = `?$filter=(ToggleId eq '${keys.join(\"' or ToggleId eq '\")}')`;\n\tconst { value = [] } = (await HttpHelper.GetJSON(FEATURE_TOGGLE_SRVC_URL + filterExpression)) as FeatureToggleResponse;\n\n\treturn keys.map((key) => ({\n\t\tkey,\n\t\tenabled: value.some((toggle) => toggle.ToggleId === key && toggle.State.toUpperCase() === \"X\")\n\t}));\n};\n\n/**\n * Utility to check if a navigation target is supported when a feature toggle is enabled.\n *\n * @param featureToggleCheck A promise that resolves to true if the feature is enabled.\n * @param semanticObject Semantic object to be checked for navigation support.\n * @param action Action name for the semantic object.\n * @returns Promise resolving to `true` if navigation is supported and feature is enabled.\n */\nexport const isNavigationSupportedForFeature = async (featureToggle: FEATURE_TOGGLES, intent: Target): Promise<boolean> => {\n\ttry {\n\t\tconst isFeatureToggleEnabled = await isFeatureEnabled(featureToggle);\n\t\tif (!isFeatureToggleEnabled) {\n\t\t\treturn false;\n\t\t}\n\t\tconst navigationService = await Container.getServiceAsync<Navigation>(\"Navigation\");\n\t\tconst [{ supported }] = await navigationService.isNavigationSupported([intent]);\n\n\t\treturn supported || false;\n\t} catch (error) {\n\t\tLog.warning(error instanceof Error ? error.message : String(error));\n\t\treturn false;\n\t}\n};\n"],"mappings":"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","ignoreList":[]}