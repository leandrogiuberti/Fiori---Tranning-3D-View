{"version":3,"file":"FeatureUtils.js","names":["sap","ui","define","Log","Container","___Constants","__HttpHelper","_interopRequireDefault","obj","__esModule","default","_catch","body","recover","result","e","then","FEATURE_TOGGLE_SRVC_URL","FEATURE_TOGGLES","HttpHelper","featureToggles","Map","isFeatureEnabled","key","_temp2","get","has","Promise","resolve","_temp","unavailableToggles","Object","values","filter","toggle","getFeatureToggles","_getFeatureToggles","forEach","set","enabled","error","message","reject","keys","filterExpression","join","GetJSON","_HttpHelper$GetJSON","value","map","some","ToggleId","State","toUpperCase","isNavigationSupportedForFeature","featureToggle","intent","isFeatureToggleEnabled","getServiceAsync","navigationService","isNavigationSupported","supported","warning","Error","String","__exports"],"sources":["FeatureUtils.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nimport Log from \"sap/base/Log\";\nimport Container from \"sap/ushell/Container\";\nimport Navigation, { Target } from \"sap/ushell/services/Navigation\";\nimport { FEATURE_TOGGLE_SRVC_URL, FEATURE_TOGGLES } from \"./Constants\";\nimport HttpHelper from \"./HttpHelper\";\n\ninterface FeatureToggle {\n\tkey: FEATURE_TOGGLES;\n\tenabled: boolean;\n}\n\ninterface FeatureToggleResponse {\n\tvalue: {\n\t\tToggleId: FEATURE_TOGGLES;\n\t\tState: string;\n\t}[];\n}\n\nconst featureToggles = new Map<FEATURE_TOGGLES, boolean>();\n\n/**\n * Utility to check if a feature toggle is enabled.\n *\n * @param key The key of the feature toggle to check.\n * @returns Promise resolving to `true` if the feature toggle is enabled, `false` otherwise.\n */\nexport const isFeatureEnabled = async (key: FEATURE_TOGGLES): Promise<boolean> => {\n\tif (featureToggles.has(key)) {\n\t\treturn featureToggles.get(key)!;\n\t}\n\n\ttry {\n\t\tconst unavailableToggles = Object.values(FEATURE_TOGGLES).filter((toggle) => !featureToggles.has(toggle));\n\t\t(await getFeatureToggles(unavailableToggles)).forEach((toggle) => featureToggles.set(toggle.key, toggle.enabled));\n\t} catch (error) {\n\t\tLog.error(\"Error fetching feature toggles\", (error as Error).message);\n\t\tfeatureToggles.set(key, false);\n\t}\n\n\treturn featureToggles.get(key) || false;\n};\n\n/**\n * Utility to fetch feature toggles from the server.\n *\n * @param keys An array of feature toggle keys to fetch.\n * @returns Promise resolving to an array of feature toggles.\n */\nconst getFeatureToggles = async (keys: FEATURE_TOGGLES[]): Promise<FeatureToggle[]> => {\n\tconst filterExpression = `?$filter=(ToggleId eq '${keys.join(\"' or ToggleId eq '\")}')`;\n\tconst { value = [] } = (await HttpHelper.GetJSON(FEATURE_TOGGLE_SRVC_URL + filterExpression)) as FeatureToggleResponse;\n\n\treturn keys.map((key) => ({\n\t\tkey,\n\t\tenabled: value.some((toggle) => toggle.ToggleId === key && toggle.State.toUpperCase() === \"X\")\n\t}));\n};\n\n/**\n * Utility to check if a navigation target is supported when a feature toggle is enabled.\n *\n * @param featureToggleCheck A promise that resolves to true if the feature is enabled.\n * @param semanticObject Semantic object to be checked for navigation support.\n * @param action Action name for the semantic object.\n * @returns Promise resolving to `true` if navigation is supported and feature is enabled.\n */\nexport const isNavigationSupportedForFeature = async (featureToggle: FEATURE_TOGGLES, intent: Target): Promise<boolean> => {\n\ttry {\n\t\tconst isFeatureToggleEnabled = await isFeatureEnabled(featureToggle);\n\t\tif (!isFeatureToggleEnabled) {\n\t\t\treturn false;\n\t\t}\n\t\tconst navigationService = await Container.getServiceAsync<Navigation>(\"Navigation\");\n\t\tconst [{ supported }] = await navigationService.isNavigationSupported([intent]);\n\n\t\treturn supported || false;\n\t} catch (error) {\n\t\tLog.warning(error instanceof Error ? error.message : String(error));\n\t\treturn false;\n\t}\n};\n"],"mappings":";;;;AAAAA,IAAAC,GAAAC,OAAA,8EAAAC,EAAAC,EAAAC,EAAAC,GAAA,sBAAAC,EAAAC,GAAA,OAAAA,KAAAC,mBAAAD,EAAAE,UAAA,YAAAF,EAAAE,QAAAF,CAAA,CAkjBO,SAAAG,EAAgBC,EAAMC,GAC5B,IACC,IAAIC,EAASF,GACd,CAAE,MAAMG,GACP,OAAOF,EAAQE,EAChB,CACA,GAAID,GAAUA,EAAOE,KAAM,CAC1B,OAAOF,EAAOE,UAAU,EAAGH,EAC5B,CACA,OAAOC,CACR,CAAC,MArjBQG,EAAuBZ,EAAA,iCAAEa,EAAeb,EAAA,yBAC1Cc,EAAUZ,EAAAD,GAcjB,MAAMc,EAAiB,IAAIC,IAQpB,MAAMC,EAAgB,SAAUC,GAAoB,IAAuB,SAAAC,IAajF,OAAOJ,EAAeK,IAAIF,IAAQ,KAAM,CAZxC,GAAIH,EAAeM,IAAIH,GAAM,CAC5B,OAAAI,QAAAC,QAAOR,EAAeK,IAAIF,GAC3B,CAAC,MAAAM,EAAAlB,EAAA,WAGA,MAAMmB,EAAqBC,OAAOC,OAAOd,GAAiBe,OAAQC,IAAYd,EAAeM,IAAIQ,IAAS,OAAAP,QAAAC,QACnGO,EAAkBL,IAAmBd,KAAA,SAAAoB,GAA5CA,EAA8CC,QAASH,GAAWd,EAAekB,IAAIJ,EAAOX,IAAKW,EAAOK,SAAU,EACnH,EAAC,SAAQC,GACRrC,EAAIqC,MAAM,iCAAmCA,EAAgBC,SAC7DrB,EAAekB,IAAIf,EAAK,MACzB,GAAC,OAAAI,QAAAC,QAAAC,KAAAb,KAAAa,EAAAb,KAAAQ,KAAAK,GAGF,CAAC,MAAAd,GAAA,OAAAY,QAAAe,OAAA3B,EAAA,GAQD,MAAMoB,EAAiB,SAAUQ,GAAuB,IACvD,MAAMC,EAAmB,0BAA0BD,EAAKE,KAAK,0BAA0B,OAAAlB,QAAAC,QACzDT,EAAW2B,QAAQ7B,EAA0B2B,IAAiB5B,KAAA,SAAA+B,GAA5F,MAAMC,MAAEA,EAAQ,IAAID,EAEpB,OAAOJ,EAAKM,IAAK1B,IAAG,CACnBA,MACAgB,QAASS,EAAME,KAAMhB,GAAWA,EAAOiB,WAAa5B,GAAOW,EAAOkB,MAAMC,gBAAkB,OACvF,EACL,CAAC,MAAAtC,GAAA,OAAAY,QAAAe,OAAA3B,EAAA,GAUM,MAAMuC,EAA+B,SAAUC,EAAgCC,GAAc,IAAuB,OAAA7B,QAAAC,QAAAjB,EAAA,WACtH,OAAAgB,QAAAC,QACkCN,EAAiBiC,IAAcvC,KAAA,SAA9DyC,GAAsB,OACvBA,EAAsB9B,QAAAC,QAGKxB,EAAUsD,gBAA4B,eAAa1C,KAAA,SAA7E2C,GAAiB,OAAAhC,QAAAC,QACO+B,EAAkBC,sBAAsB,CAACJ,KAAQxC,KAAA,WAAxE6C,UAAEA,KAET,OAAOA,GAAa,KAAM,KALlB,KAAK,EAMd,EAAC,SAAQrB,GACRrC,EAAI2D,QAAQtB,aAAiBuB,MAAQvB,EAAMC,QAAUuB,OAAOxB,IAC5D,OAAO,KACR,GACD,CAAC,MAAAzB,GAAA,OAAAY,QAAAe,OAAA3B,EAAA,GAAC,IAAAkD,EAAA,CAAAxD,WAAA,MAAAwD,EAAA3C,mBAAA2C,EAAAX,kCAAA,OAAAW,CAAA","ignoreList":[]}