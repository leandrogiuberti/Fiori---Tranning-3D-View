{"version":3,"file":"PageManager.js","names":["sap","ui","define","BaseObject","EventBus","Config","Container","__ColorUtils","___Constants","___PagesIconsConstants","__UShellPersonalizer","_interopRequireDefault","obj","__esModule","default","ColorUtils","CUSTOM_SPACEID","DEFAULT_BG_COLOR","FALLBACK_ICON","fnFetchLegendColor","MYHOME_SPACE_ID","PAGE_SELECTION_LIMIT","PAGES","SPACES","UShellPersonalizer","PageManager","extend","constructor","_constructor","persContainerId","oOwnerComponent","BaseObject.prototype.constructor.call","this","colorUtils","_eventBus","getInstance","_getPersonalization","fetchAllAvailableSpaces","_fetchAllAvailableSpaces","_this","_aSpaces","Promise","resolve","getServiceAsync","then","oBookmarkService","getContentNodes","_oBookmarkService$get","aSpaces","filter","oSpace","id","forEach","BGColor","applyColorToAllPages","e","reject","fetchAllAvailablePages","_fetchAllAvailablePages","bFetchDistinctPages","_this2","_aPages","Array","isArray","children","oPage","find","oExistingPage","push","title","label","icon","isIconLoaded","pageId","spaceId","spaceTitle","url","hasCustomSpace","_hasCustomSpace","_this3","_this3$fetchAllAvaila","some","_getDefaultPages","aAvailablePages","aFavoritePages","slice","getFavPages","_getIconForPage","oFavPage","oIcon","includes","_applyIconsForFavPages","aFavPages","aPageWithoutIcon","_getFavPages","bUpdatePersonalisation","_this4","_temp4","length","selected","getFreeColor","addColor","_temp3","_temp2","oPersonalizer","read","oPersData","favouritePages","write","publish","_temp","_this4$_getPersonaliz","getFavoritePages","_getFavoritePages","bForceUpdate","bSpaceEnabled","encodeURIComponent","last","oGetFavPagesPromise","undefined","_getFavPages2","_this5","_this5$_getPersonaliz","_temp8","_temp7","_this5$_getDefaultPag","aPages","oAvailablePage","_temp6","_this5$getFavPages","_temp5","_this5$_getDefaultPag2","applyColorPersonalizations","_applyColorPersonalizations","personalizations","_this6","_temp0","allSpaces","personalization","isPagePersonalization","spaceObj","space","pageObj","page","availablePageObj","colorObj","isSpacePersonalization","favPageObj","favPage","favpageBGColor","oldColor","pageBackgroundColor","_temp9","applyIconPersonalizations","_applyIconPersonalizations","_this7","_temp10","isSpaceIconPersonalization","isPageIconPersonalization","oldIcon","_temp1","oCacheInstances","pageManagerInstance"],"sources":["PageManager.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport BaseObject from \"sap/ui/base/Object\";\nimport Component from \"sap/ui/core/Component\";\nimport EventBus from \"sap/ui/core/EventBus\";\nimport Config from \"sap/ushell/Config\";\nimport Container from \"sap/ushell/Container\";\nimport Bookmark from \"sap/ushell/services/BookmarkV2\";\nimport { ISpacePagePersonalization } from \"../interface/KeyUserInterface\";\nimport { IColor, IPage, ISpace } from \"../interface/PageSpaceInterface\";\nimport ColorUtils from \"./ColorUtils\";\nimport { CUSTOM_SPACEID, DEFAULT_BG_COLOR, FALLBACK_ICON, fnFetchLegendColor, MYHOME_SPACE_ID, PAGE_SELECTION_LIMIT } from \"./Constants\";\nimport { PAGES, SPACES } from \"./PagesIconsConstants\";\nimport UShellPersonalizer from \"./UshellPersonalizer\";\n\n/**\n *\n * Provides the PageManager Class used for fetch and process user pages.\n *\n * @extends sap.ui.BaseObject\n *\n * @author SAP SE\n * @version 0.0.1\n * @since 1.121.0\n * @private\n *\n * @alias sap.cux.home.utils.PageManager\n */\n\nexport default class PageManager extends BaseObject {\n\tcolorUtils: typeof ColorUtils = ColorUtils;\n\tpersContainerId: string;\n\toOwnerComponent: Component;\n\t_aSpaces!: ISpace[];\n\t_aPages!: IPage[];\n\taFavPages!: IPage[];\n\toPersonalizer!: UShellPersonalizer;\n\toGetFavPagesPromise!: Promise<IPage[]>;\n\tstatic oCacheInstances: { [key: string]: PageManager } = {};\n\tprivate _eventBus: EventBus;\n\tprivate constructor(persContainerId: string, oOwnerComponent: Component) {\n\t\tsuper();\n\t\tthis.persContainerId = persContainerId;\n\t\tthis.oOwnerComponent = oOwnerComponent;\n\t\tthis._eventBus = EventBus.getInstance();\n\t}\n\n\tstatic getInstance(persContainerId: string, oOwnerComponent: Component) {\n\t\tif (PageManager.oCacheInstances[persContainerId]) {\n\t\t\treturn PageManager.oCacheInstances[persContainerId];\n\t\t}\n\t\tconst pageManagerInstance = new PageManager(persContainerId, oOwnerComponent);\n\t\tPageManager.oCacheInstances[persContainerId] = pageManagerInstance;\n\t\treturn pageManagerInstance;\n\t}\n\n\tprivate _getPersonalization() {\n\t\treturn UShellPersonalizer.getInstance(this.persContainerId, this.oOwnerComponent);\n\t}\n\n\tpublic async fetchAllAvailableSpaces(): Promise<ISpace[]> {\n\t\tif (this._aSpaces) {\n\t\t\treturn Promise.resolve(this._aSpaces);\n\t\t}\n\t\tconst oBookmarkService: Bookmark = await Container.getServiceAsync(\"BookmarkV2\");\n\t\tconst aSpaces = (await oBookmarkService.getContentNodes()) as ISpace[];\n\t\t// Filter MyHome Space from Spaces\n\t\tthis._aSpaces = aSpaces.filter((oSpace) => oSpace.id !== MYHOME_SPACE_ID);\n\n\t\t// Add Initial Default Color for Spaces\n\t\tthis._aSpaces.forEach(function (oSpace) {\n\t\t\toSpace.BGColor = DEFAULT_BG_COLOR();\n\t\t\toSpace.applyColorToAllPages = false;\n\t\t});\n\n\t\treturn this._aSpaces;\n\t}\n\tpublic async fetchAllAvailablePages(bFetchDistinctPages: boolean = false): Promise<IPage[]> {\n\t\tif (this._aPages) {\n\t\t\treturn Promise.resolve(this._aPages);\n\t\t}\n\t\tconst aSpaces = await this.fetchAllAvailableSpaces();\n\t\tthis._aPages = [];\n\t\taSpaces.forEach((oSpace: ISpace) => {\n\t\t\tif (Array.isArray(oSpace.children)) {\n\t\t\t\toSpace.children.forEach((oPage: IPage) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\t!bFetchDistinctPages ||\n\t\t\t\t\t\t(bFetchDistinctPages && !this._aPages.find((oExistingPage) => oExistingPage.id === oPage.id))\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis._aPages.push({\n\t\t\t\t\t\t\ttitle: oPage.label,\n\t\t\t\t\t\t\ticon: FALLBACK_ICON,\n\t\t\t\t\t\t\tisIconLoaded: false,\n\t\t\t\t\t\t\tpageId: oPage.id,\n\t\t\t\t\t\t\tspaceId: oSpace.id,\n\t\t\t\t\t\t\tspaceTitle: oSpace.label,\n\t\t\t\t\t\t\turl: \"#Launchpad-openFLPPage?pageId=\" + oPage.id + \"&spaceId=\" + oSpace.id\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\treturn this._aPages;\n\t}\n\tpublic async hasCustomSpace() {\n\t\treturn (await this.fetchAllAvailableSpaces()).some((oSpace) => oSpace.id === CUSTOM_SPACEID);\n\t}\n\tprivate _getDefaultPages(aAvailablePages: IPage[]): Promise<IPage[]> {\n\t\tconst aFavoritePages = aAvailablePages.slice(0, PAGE_SELECTION_LIMIT) || [];\n\t\treturn this.getFavPages(aFavoritePages);\n\t}\n\t// Get icons from icon constants file\n\tprivate _getIconForPage(oFavPage: IPage) {\n\t\t// Check for icon in page icon constants file\n\t\tlet oIcon = PAGES.find((oPage) => oFavPage.pageId?.includes(oPage.id));\n\n\t\tif (!oIcon) {\n\t\t\t// Check for icon in space icon constants file\n\t\t\toIcon = SPACES.find((oSpace) => oFavPage.spaceId?.includes(oSpace.id));\n\t\t}\n\n\t\toFavPage.icon = oIcon?.icon || FALLBACK_ICON;\n\t\toFavPage.isIconLoaded = true;\n\t}\n\tprivate _applyIconsForFavPages(aFavPages: IPage[]) {\n\t\tconst aPageWithoutIcon = aFavPages.filter((oPage) => !oPage.isIconLoaded);\n\t\taPageWithoutIcon.forEach((oPage: IPage) => {\n\t\t\tthis._getIconForPage(oPage);\n\t\t});\n\t}\n\tpublic async getFavPages(aFavPages: IPage[], bUpdatePersonalisation: boolean = false) {\n\t\taFavPages.forEach((oPage: IPage) => {\n\t\t\toPage.selected = true;\n\t\t\tif (!oPage.BGColor) {\n\t\t\t\toPage.BGColor = this.colorUtils.getFreeColor();\n\t\t\t} else {\n\t\t\t\tthis.colorUtils.addColor(oPage.BGColor as string);\n\t\t\t}\n\t\t});\n\n\t\t// Update the Personalisation model\n\t\tif (bUpdatePersonalisation) {\n\t\t\tif (!this.oPersonalizer) {\n\t\t\t\tthis.oPersonalizer = await this._getPersonalization();\n\t\t\t}\n\t\t\tlet oPersData = await this.oPersonalizer.read();\n\t\t\tif (!oPersData) oPersData = { favouritePages: [] };\n\t\t\toPersData.favouritePages = aFavPages;\n\t\t\tawait this.oPersonalizer.write(oPersData);\n\t\t\tthis._eventBus.publish(\"pageChannel\", \"pageUpdated\");\n\t\t}\n\n\t\t// Fetch and apply Icons for Favorite Pages\n\t\tif (aFavPages.length) {\n\t\t\tthis._applyIconsForFavPages(aFavPages);\n\t\t}\n\t\treturn aFavPages;\n\t}\n\tpublic getFavoritePages(bForceUpdate: boolean = false) {\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n\t\tconst bSpaceEnabled = encodeURIComponent(Config.last(\"/core/spaces/enabled\"));\n\t\tif (!bSpaceEnabled) {\n\t\t\treturn Promise.resolve([]);\n\t\t}\n\t\tif (this.aFavPages && !bForceUpdate) {\n\t\t\treturn Promise.resolve(this.aFavPages);\n\t\t}\n\t\tif (this.oGetFavPagesPromise === undefined) {\n\t\t\tthis.oGetFavPagesPromise = this._getFavPages(bForceUpdate);\n\t\t}\n\t\treturn this.oGetFavPagesPromise;\n\t}\n\n\tprivate async _getFavPages(bForceUpdate: boolean) {\n\t\tthis.oPersonalizer = await this._getPersonalization();\n\t\tconst oPersData = await this.oPersonalizer.read();\n\t\tconst aFavoritePages: IPage[] | undefined = oPersData?.favouritePages;\n\t\tconst aAvailablePages = await this.fetchAllAvailablePages(true);\n\t\t// Set first 8 available pages are favorite if no favorite page data is present\n\t\tif (!aFavoritePages) {\n\t\t\tthis.aFavPages = await this._getDefaultPages(aAvailablePages);\n\t\t} else {\n\t\t\tlet aPages: IPage[] = [],\n\t\t\t\toExistingPage;\n\t\t\taFavoritePages?.forEach((oPage: IPage) => {\n\t\t\t\toExistingPage = aAvailablePages.find(function (oAvailablePage) {\n\t\t\t\t\treturn oAvailablePage.pageId === oPage.pageId;\n\t\t\t\t});\n\t\t\t\tif (oExistingPage) {\n\t\t\t\t\toExistingPage.BGColor = oPage.BGColor;\n\t\t\t\t\taPages.push(oExistingPage);\n\t\t\t\t}\n\t\t\t});\n\t\t\t// To send Maximum of 8 Pages (BCP incident: 2270169293)\n\t\t\taPages = aPages.slice(0, PAGE_SELECTION_LIMIT);\n\t\t\tif (aPages.length || !aFavoritePages?.length) {\n\t\t\t\tthis.aFavPages = await this.getFavPages(aPages, aPages.length !== aFavoritePages?.length || bForceUpdate);\n\t\t\t} else if (!aPages.length && aFavoritePages.length) {\n\t\t\t\t//Clean unaccessible page data\n\t\t\t\toPersData.favouritePages = [];\n\t\t\t\tawait this.oPersonalizer.write(oPersData);\n\t\t\t\tthis.aFavPages = await this._getDefaultPages(aAvailablePages);\n\t\t\t}\n\t\t}\n\t\treturn this.aFavPages;\n\t}\n\n\tpublic async applyColorPersonalizations(personalizations?: ISpacePagePersonalization[]) {\n\t\tif (!personalizations?.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.aFavPages) {\n\t\t\tawait this.getFavoritePages();\n\t\t}\n\n\t\tconst allSpaces = await this.fetchAllAvailableSpaces();\n\n\t\tpersonalizations.forEach((personalization) => {\n\t\t\tconst isPagePersonalization = !!personalization.pageId;\n\t\t\t//corresponding space obj of the master list of all spaces\n\t\t\tconst spaceObj = allSpaces?.find((space) => space.id === personalization.spaceId);\n\t\t\tconst pageObj = spaceObj?.children.find((page) => page.id === personalization.pageId);\n\t\t\t//corresponding page obj of the list of favorite/visible pages\n\t\t\tconst oPage = this.aFavPages.find((oPage) => oPage.pageId === personalization.pageId);\n\t\t\t//corresponding page obj of the master list of all pages\n\t\t\tconst availablePageObj = this._aPages?.find((page) => page.pageId === personalization.pageId);\n\t\t\t// Update the Personalisation model for space\n\t\t\tif (!isPagePersonalization && spaceObj) {\n\t\t\t\tconst colorObj = fnFetchLegendColor(personalization.BGColor as string);\n\t\t\t\tspaceObj.BGColor = colorObj;\n\t\t\t\tspaceObj.applyColorToAllPages = personalization.applyColorToAllPages;\n\t\t\t\tspaceObj.isSpacePersonalization = true;\n\n\t\t\t\t// Update the color for all pages in the space if applied\n\t\t\t\tspaceObj.children.forEach((oPage) => {\n\t\t\t\t\tconst favPageObj = this.aFavPages.find((favPage) => favPage.pageId === oPage.id);\n\t\t\t\t\tif (favPageObj) {\n\t\t\t\t\t\tconst favpageBGColor = favPageObj.isPagePersonalization ? favPageObj.oldColor : DEFAULT_BG_COLOR();\n\t\t\t\t\t\tfavPageObj.BGColor = spaceObj.applyColorToAllPages ? personalization.BGColor : favpageBGColor;\n\t\t\t\t\t\toPage.BGColor = favPageObj.BGColor;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * setting personalization color for unchecked pages\n\t\t\t\t\t\t * updating color for the children of master list of spaces\n\t\t\t\t\t\t * updating color for the available pages corresponding to the space id\n\t\t\t\t\t\t */\n\t\t\t\t\t\toPage.BGColor = spaceObj.applyColorToAllPages ? personalization.BGColor : DEFAULT_BG_COLOR();\n\t\t\t\t\t\tthis._aPages.forEach((page) => {\n\t\t\t\t\t\t\tif (page.spaceId === spaceObj.id) {\n\t\t\t\t\t\t\t\tpage.BGColor = oPage.BGColor;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else if (pageObj) {\n\t\t\t\t// Update the Personalisation model for page\n\t\t\t\tconst pageBackgroundColor = spaceObj?.applyColorToAllPages\n\t\t\t\t\t? ({ ...spaceObj.BGColor } as IColor)\n\t\t\t\t\t: fnFetchLegendColor(personalization.BGColor as string);\n\t\t\t\t//updating color for the favourite page\n\t\t\t\tif (oPage) {\n\t\t\t\t\toPage.isPagePersonalization = true;\n\t\t\t\t\toPage.BGColor = pageBackgroundColor;\n\t\t\t\t\toPage.oldColor = fnFetchLegendColor(personalization.BGColor as string);\n\t\t\t\t}\n\t\t\t\t//updating color for the children of master list of spaces\n\t\t\t\tpageObj.isPagePersonalization = true;\n\t\t\t\tpageObj.BGColor = pageBackgroundColor;\n\t\t\t\tpageObj.oldColor = fnFetchLegendColor(personalization.BGColor as string);\n\t\t\t\t//updating color for the page of master list of pages/available page\n\t\t\t\tif (availablePageObj) {\n\t\t\t\t\tavailablePageObj.isPagePersonalization = true;\n\t\t\t\t\tavailablePageObj.BGColor = pageBackgroundColor;\n\t\t\t\t\tavailablePageObj.oldColor = fnFetchLegendColor(personalization.BGColor as string);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tthis._eventBus.publish(\"pageChannel\", \"pageUpdated\");\n\t}\n\n\tpublic async applyIconPersonalizations(personalizations?: ISpacePagePersonalization[]) {\n\t\tif (!personalizations?.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.aFavPages) {\n\t\t\tawait this._getFavPages(false);\n\t\t}\n\t\tconst allSpaces = await this.fetchAllAvailableSpaces();\n\n\t\tpersonalizations.forEach((personalization) => {\n\t\t\tconst isPagePersonalization = !!personalization.pageId;\n\t\t\tconst spaceObj = allSpaces?.find((space) => space.id === personalization.spaceId);\n\n\t\t\t// Update the Personalisation model for space\n\t\t\tif (!isPagePersonalization) {\n\t\t\t\tif (spaceObj) {\n\t\t\t\t\tspaceObj.icon = personalization.icon;\n\t\t\t\t\tspaceObj.isSpaceIconPersonalization = true;\n\n\t\t\t\t\t// Update the icon for all pages in the space if applied\n\t\t\t\t\tspaceObj.children.forEach((oPage) => {\n\t\t\t\t\t\tif (!oPage.isPageIconPersonalization) {\n\t\t\t\t\t\t\tconst favPageObj = this.aFavPages.find((favPage) => favPage.pageId === oPage.id);\n\t\t\t\t\t\t\tif (favPageObj) {\n\t\t\t\t\t\t\t\tfavPageObj.icon = spaceObj.icon || FALLBACK_ICON;\n\t\t\t\t\t\t\t\toPage.icon = spaceObj.icon || FALLBACK_ICON;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Update the Personalisation model for page\n\t\t\t\tconst pageObj = spaceObj?.children.find((page) => page.id === personalization.pageId);\n\t\t\t\tconst oPage = this.aFavPages.find((oPage) => oPage.pageId === personalization.pageId);\n\t\t\t\tif (pageObj && oPage) {\n\t\t\t\t\toPage.isPageIconPersonalization = true;\n\t\t\t\t\tpageObj.isPageIconPersonalization = true;\n\t\t\t\t\toPage.icon = personalization.icon;\n\t\t\t\t\tpageObj.icon = personalization.icon;\n\t\t\t\t\toPage.oldIcon = personalization.oldIcon;\n\t\t\t\t\tpageObj.oldIcon = personalization.oldIcon;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tthis._eventBus.publish(\"pageChannel\", \"pageUpdated\");\n\t}\n}\n"],"mappings":"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","ignoreList":[]}