{"version":3,"file":"TaskUtils-dbg.js","names":["sap","ui","define","Log","Formatting","sap_m_library","Locale","DateFormat","_catch","body","recover","result","e","then","_fetchUserInfo","originId","userId","Promise","resolve","fetch","response","ok","Error","json","_response$json","d","data","userInfo","error","message","String","reject","Priority","TaskPriority","getTaskUrl","instanceId","targetAppUrl","taskInstanceURL","fetchUserDetails","Object","keys","includes","_isValidDate","dateString","length","year","parseInt","slice","month","day","date","Date","getFullYear","getMonth","getDate","_getParsedTime","time","NaN","dateRegex","yyyymmddRegex","isoRegex","dateMatch","match","test","parsedDate","getDateInstance","parse","getTime","isoMatch","formatDate","dateStr","pattern","getDatePattern","locale","getLanguageTag","language","dateFormat","getDateTimeInstance","value","formattedDate","isNaN","format","getPriority","priority","VERY_HIGH","VeryHigh","None","HIGH","High","MEDIUM","Medium","LOW","Low","__exports","__esModule"],"sources":["TaskUtils.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nimport Log from \"sap/base/Log\";\nimport Formatting from \"sap/base/i18n/Formatting\";\nimport { Priority } from \"sap/m/library\";\nimport Locale from \"sap/ui/core/Locale\";\nimport DateFormat from \"sap/ui/core/format/DateFormat\";\nimport { Response } from \"../ToDoPanel\";\n\ninterface UserInfo {\n\tEmail?: string;\n}\n\nexport enum TaskPriority {\n\tVERY_HIGH = \"VERY_HIGH\",\n\tHIGH = \"HIGH\",\n\tMEDIUM = \"MEDIUM\",\n\tLOW = \"LOW\"\n}\n\nconst userInfo: Record<string, UserInfo> = {};\n\n/**\n * Get the task URL for a given task.\n *\n * @private\n * @param {string} originId - The origin ID of the task.\n * @param {string} instanceId - The instance ID of the task.\n * @returns {string} The task URL.\n */\nexport function getTaskUrl(originId: string, instanceId: string, targetAppUrl: string): string {\n\tconst taskInstanceURL = `?showAdditionalAttributes=true&/detail/${originId}/${instanceId}/TaskCollection(SAP__Origin='${originId}',InstanceID='${instanceId}')`;\n\n\treturn targetAppUrl + taskInstanceURL;\n}\n\n/**\n * Fetches user details if required.\n *\n * @private\n * @param {string} originId - The origin ID.\n * @param {string} userId - The user ID.\n * @returns {Promise<UserInfo>} - A promise that resolves to the user information.\n */\nexport function fetchUserDetails(originId: string, userId: string): Promise<UserInfo> {\n\tif (Object.keys(userInfo).includes(userId)) {\n\t\treturn Promise.resolve(userInfo[userId]);\n\t} else {\n\t\treturn _fetchUserInfo(originId, userId);\n\t}\n}\n\n/**\n * Fetches user information for a specific user.\n *\n * @private\n * @param {string} originId - The origin ID.\n * @param {string} userId - The user ID.\n * @returns {Promise<UserInfo>} - A promise that resolves to the user information.\n */\nasync function _fetchUserInfo(originId: string, userId: string): Promise<UserInfo> {\n\ttry {\n\t\tconst response = await fetch(\n\t\t\t`/sap/opu/odata/IWPGW/TASKPROCESSING;mo;v=2/UserInfoCollection(SAP__Origin='${originId}',UniqueName='${userId}')?$format=json`\n\t\t);\n\n\t\tif (!response.ok) {\n\t\t\tthrow new Error(`Failed to Fetch User Info for: ${userId}`);\n\t\t}\n\n\t\tconst { d: data } = (await response.json()) as Response;\n\t\tuserInfo[userId] = data as UserInfo;\n\t\treturn userInfo[userId];\n\t} catch (error: unknown) {\n\t\tLog.error(error instanceof Error ? error.message : String(error));\n\t\treturn {};\n\t}\n}\n\n/**\n * Check whether given dateString is of format YYYYMMDD and is a valid value for Date object.\n *\n * @param {string} dateString - The datestring to be checked for validity\n * @returns {Date} if its a valid date return the date else false\n * @private\n */\nfunction _isValidDate(dateString: string): boolean {\n\t// Check if the input has the correct length\n\tif (dateString.length !== 8) {\n\t\treturn false;\n\t}\n\n\t// Parse the date components\n\tconst year = parseInt(dateString.slice(0, 4), 10);\n\tconst month = parseInt(dateString.slice(4, 6), 10) - 1;\n\tconst day = parseInt(dateString.slice(6), 10);\n\n\t// Create a Date object with the parsed components\n\tconst date = new Date(year, month, day);\n\n\t// Check if the parsed date is valid\n\treturn date.getFullYear() === year && date.getMonth() === month && date.getDate() === day;\n}\n\n/**\n * Parses different time formats supplied from the back-ends. It returns UNIX time stamp in milliseconds.\n * If Time Format contains unexpected symbols or Format is not recognized NaN is returned.\n * Referenced from: cross.fnd.fiori.inbox.CustomAttributeComparator\n *\n * @param {string | number} time date format to be parsed. If int UNIX time stamp in milliseconds is assumed.\n * @returns {number} UNIX time stamp in milliseconds. (milliseconds that have elapsed since 00:00:00 UTC, Thursday, 1 January 1970)\n * @private\n */\nfunction _getParsedTime(time: string | number): number {\n\tif (time == null || time === \"00000000\") {\n\t\treturn NaN;\n\t}\n\n\tif (typeof time === \"number\") {\n\t\treturn time;\n\t}\n\n\t// Check for various time formats\n\tconst dateRegex = /\\/(Date)\\((\\d+)\\)\\//;\n\tconst yyyymmddRegex = /^\\d{8}$/;\n\tconst isoRegex = /^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?(Z|([+-])(\\d{2}):(\\d{2}))?$/;\n\n\tconst dateMatch = time.match(dateRegex);\n\tif (dateMatch) {\n\t\t// Time Format \"/Date(869080830000)/\"\n\t\treturn parseInt(dateMatch[2], 10);\n\t}\n\n\tif (yyyymmddRegex.test(time) && _isValidDate(time)) {\n\t\t// Time Format \"YYYYMMDD\" (Old TGW format)\n\t\tconst parsedDate = DateFormat.getDateInstance().parse(time);\n\t\treturn parsedDate instanceof Date ? parsedDate.getTime() : NaN;\n\t}\n\n\tconst isoMatch = time.match(isoRegex);\n\tif (isoMatch) {\n\t\t// Time Format \"2018-01-05T00:00:00\" (BPM and TGW-cloud format, UTC)\n\t\treturn new Date(time).getTime();\n\t}\n\n\treturn NaN;\n}\n\n/**\n * Format a date string to a custom date and time format.\n *\n * @private\n * @param {string} dateStr - The date string to format.\n * @param {string} pattern - The pattern to be used for formatting the date.\n * @returns {string} The formatted date string.\n */\nexport function formatDate(dateStr: string, pattern: string = Formatting.getDatePattern(\"short\") || \"dd/MM/yyyy\"): string {\n\tconst locale = new Locale(Formatting.getLanguageTag().language);\n\tconst dateFormat = DateFormat.getDateTimeInstance({ pattern }, locale);\n\tconst value = _getParsedTime(dateStr);\n\tlet formattedDate = \"\";\n\n\tif (!isNaN(value)) {\n\t\tformattedDate = dateFormat.format(new Date(value));\n\t}\n\n\treturn formattedDate;\n}\n\n/**\n * Convert a priority string to a corresponding priority value.\n *\n * @private\n * @param {TaskPriority} priority - The task priority string.\n * @returns {string} The corresponding priority value.\n */\nexport function getPriority(priority: TaskPriority): Priority {\n\tif (priority === TaskPriority.VERY_HIGH) {\n\t\treturn Priority.VeryHigh ? Priority.VeryHigh : Priority.None;\n\t} else if (priority === TaskPriority.HIGH) {\n\t\treturn Priority.High;\n\t} else if (priority === TaskPriority.MEDIUM) {\n\t\treturn Priority.Medium;\n\t} else if (priority === TaskPriority.LOW) {\n\t\treturn Priority.Low;\n\t} else {\n\t\treturn Priority.None;\n\t}\n}\n"],"mappings":"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","ignoreList":[]}