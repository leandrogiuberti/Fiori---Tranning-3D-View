/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *  * (c) Copyright 2009-2025 SAP SE. All rights reserved
 */
sap.ui.define(["sap/ui/base/Object"],function(t){"use strict";function e(t,e){try{var n=t()}catch(t){return e(t)}if(n&&n.then){return n.then(void 0,e)}return n}var n=function(t){t["GET"]="GET";t["POST"]="POST";t["PUT"]="PUT";t["PATCH"]="PATCH";t["DELETE"]="DELETE";t["HEAD"]="HEAD";return t}(n||{});const r=t=>/%[0-9A-F]{2}/i.test(t);class o{batchRequests=[];constructor(t,e,n){this.url=r(t)?t:encodeURI(t);this.boundary=`batch_id_${Date.now()}_01`;this.options={headers:{"Content-Type":`multipart/mixed;boundary=${this.boundary}`},method:e};if(n){this.options.headers["X-CSRF-Token"]=n}}_constructBody(){const t=`--${this.boundary}`;const e=`Content-Type: application/http\r\nContent-Transfer-Encoding: binary\r\n`;const n=`Accept: application/json\r\n\r\n\r\n`;let r=`${t}\r\n`;for(let o=0;o<this.batchRequests.length;o++){const s=this.batchRequests[o];const c=o===this.batchRequests.length-1?"--\r\n":"\r\n";r+=`${e}\r\n`;r+=`${s.options.method} ${s.url} HTTP/1.1\r\n${n}`;r+=`${t}${c}`}return r}addRequest(t){this.batchRequests.push(t)}constructBodyWithPayload(){const t=`--${this.boundary}`;const e="Content-Type:application/http\r\nContent-Transfer-Encoding:binary\r\n";let n=`${t}\r\n`;const r="changeset_001";const o=`--${r}`;const s=`Content-Type: multipart/mixed; boundary=${r}\r\n`;n+=`${s}\r\n${o}\r\n`;for(let r=0;r<this.batchRequests.length;r++){const s=this.batchRequests[r];n+=`\r\n${e}`;n+=`Content-ID: ${r+1}\r\n\r\n`;n+=`${s.options.method} ${s.url} HTTP/1.1\r\n`;n+="sap-context-accept: header\r\nContent-Type:application/json\r\n\r\n";n+=`${JSON.stringify(s.payload)}\r\n\r\n`;n+=o;if(r===this.batchRequests.length-1){n+="--\r\n";n+=`${t}--`}}return n}}const s=function(t){const e=t.replace(/\r\n/g,"\n").split("\n").filter(t=>t!=="");const n=[];let r="";for(let t=1;t<e.length-1;t++){r=e[t].includes("Content-Type: ")?e[t].split("Content-Type: ")[1]:r;if(e[t+1].includes(e[0])){if(r==="application/json"){n.push(JSON.parse(e[t]))}else{n.push(e[t])}}}return n};const c=function(t){try{return Promise.resolve(e(function(){return Promise.resolve(fetch(t,{method:n.HEAD,headers:{"X-CSRF-Token":"Fetch"}})).then(function(t){if(t.ok){const e=t.headers.get("X-CSRF-Token");if(e){return e}}throw new Error("Cannot fetch X-CSRF-Token.")})},function(t){throw new Error(t.message)}))}catch(t){return Promise.reject(t)}};const i=t.extend("sap.cux.home.utils.BatchHelper",{fetchData:function t(e){try{const t=this;e.options.body=e.options.method===n.GET?e._constructBody():e.constructBodyWithPayload();e.options.method=n.POST;return Promise.resolve(fetch(t.url,e.options)).then(function(t){if(!t.ok){throw new Error("Failed to fetch data from the server.")}return Promise.resolve(t.text()).then(s)})}catch(t){return Promise.reject(t)}},createMultipartRequest:function t(e,n){try{const t=this;t.url=`${e}$batch`;return Promise.resolve(c(e)).then(function(e){const r=t.buildMultipartRequest(n,e);return Promise.resolve(t.fetchData(r))})}catch(t){return Promise.reject(t)}},createMultipartRequestWithPayload:function t(e,n,r){try{const t=this;t.url=`${e}$batch`;return Promise.resolve(c(e)).then(function(e){const o=t.buildMultipartRequestWithPayload(n,e,r);return Promise.resolve(t.fetchData(o))})}catch(t){return Promise.reject(t)}},buildMultipartRequest:function t(e,r,s=n.GET){const c=new o(e[0],s,r);e.forEach(t=>{c.addRequest(new o(t,s,r))});return c},buildMultipartRequestWithPayload:function t(e,n,r){const s=new o(e[0].url,r,n);s.payload=e[0].data;e.forEach(({url:t,data:e})=>{const c=new o(t,r,n);c.payload=e;s.addRequest(c)});return s}});return i});
//# sourceMappingURL=BatchHelper.js.map