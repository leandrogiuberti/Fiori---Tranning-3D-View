{"version":3,"file":"InsightsUtils-dbg.js","names":["sap","ui","define","UI5Element","___FESRUtil","addFESRId","getAssociatedFullScreenMenuItem","control","getElementById","getAssociation","getAssociatedFullScreenButton","createShowMoreMenuItem","id","fesrId","associatedFullScreenMenuItem","menuItem","clone","createShowMoreActionButton","associatedFullScreenButton","actionButton","sortMenuItems","menuItemOrder","menuItems","sort","a","b","aId","getId","bId","aIndex","findIndex","includes","bIndex","targetsAreEqual","targetA","targetB","Object","keys","length","semanticObject","action","__exports","__esModule"],"sources":["InsightsUtils.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nimport Button from \"sap/m/Button\";\nimport UI5Element from \"sap/ui/core/Element\";\nimport { Intent } from \"sap/ushell/services/AppLifeCycle\";\nimport MenuItem from \"../MenuItem\";\nimport { addFESRId } from \"./FESRUtil\";\n\n/**\n * Retrieves the associated full screen menu item.\n *\n * @returns {MenuItem} The associated full screen menu item.\n * @private\n */\nexport const getAssociatedFullScreenMenuItem = (control: UI5Element) => {\n\treturn UI5Element.getElementById(control.getAssociation(\"fullScreenMenuItem\", null) as string) as MenuItem;\n};\n\n/**\n * Retrieves the associated full screen button.\n *\n * @returns {Button} The associated full screen button.\n * @private\n *\n */\nexport const getAssociatedFullScreenButton = (control: UI5Element) => {\n\treturn UI5Element.getElementById(control.getAssociation(\"fullScreenButton\", null) as string) as Button;\n};\n\n/**\n * Creates a \"Show More\" menu item.\n *\n * @private\n * @param {string} id - The ID of the menu item.\n * @param {string} [fesrId] - The FESR ID for the menu item.\n * @returns {MenuItem} The created MenuItem instance.\n */\nexport const createShowMoreMenuItem = (control: UI5Element, id: string, fesrId?: string) => {\n\tconst associatedFullScreenMenuItem = getAssociatedFullScreenMenuItem(control);\n\tconst menuItem = associatedFullScreenMenuItem?.clone(id);\n\tif (fesrId) {\n\t\taddFESRId(menuItem, fesrId);\n\t}\n\n\treturn menuItem;\n};\n\n/**\n * Creates a \"Show More\" action button.\n *\n * @private\n * @param {string} id - The ID of the button.\n * @param {string} [fesrId] - The FESR ID for the button.\n * @returns {Button} The created Button instance.\n */\nexport const createShowMoreActionButton = (control: UI5Element, id: string, fesrId?: string) => {\n\tconst associatedFullScreenButton = getAssociatedFullScreenButton(control);\n\tconst actionButton = associatedFullScreenButton ? associatedFullScreenButton.clone(id) : null;\n\tif (fesrId && actionButton) {\n\t\taddFESRId(actionButton, fesrId);\n\t}\n\n\treturn actionButton;\n};\n\n/**\n * Sort Menuitems based on the order provided\n *\n * @private\n * @param {string[]} menuItemOrder - The Ids of the menu item in the order in which to be sorted.\n * @param {MenuItem[]} menuItems- The menuitems list to be sorted.\n * @returns {MenuItem[]} The sorted MenuItems.\n */\nexport const sortMenuItems = (menuItemOrder: string[], menuItems: MenuItem[]) => {\n\treturn menuItems?.sort((a, b) => {\n\t\tconst aId = a.getId();\n\t\tconst bId = b.getId();\n\t\tconst aIndex = menuItemOrder.findIndex((id) => aId.includes(id));\n\t\tconst bIndex = menuItemOrder.findIndex((id) => bId.includes(id));\n\t\treturn aIndex - bIndex;\n\t});\n};\n\n/**\n * Compares two intent objects to determine if they are equal.\n *\n * The function checks the following conditions:\n * 1. If both objects are empty (i.e., have no keys), they are considered equal.\n * 2. If both objects have keys, their `semanticObject` and `action` properties are compared for equality.\n * 3. If either object is `undefined` or the conditions above are not met, they are considered not equal.\n *\n * @param targetA - The first intent object to compare.\n * @param targetB - The second intent object to compare.\n * @returns `true` if the objects are considered equal, otherwise `false`.\n */\nexport const targetsAreEqual = (targetA?: Partial<Intent>, targetB?: Partial<Intent>): boolean => {\n\t// Check if both are empty objects\n\tif (targetA && targetB) {\n\t\tif (Object.keys(targetA).length === 0 && Object.keys(targetB).length === 0) {\n\t\t\treturn true;\n\t\t} else if (Object.keys(targetA).length && Object.keys(targetB).length) {\n\t\t\treturn targetA.semanticObject === targetB.semanticObject && targetA.action === targetB.action;\n\t\t}\n\t}\n\treturn false;\n};\n"],"mappings":"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","ignoreList":[]}