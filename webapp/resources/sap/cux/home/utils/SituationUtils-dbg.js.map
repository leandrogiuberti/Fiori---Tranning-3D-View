{"version":3,"file":"SituationUtils-dbg.js","names":["sap","ui","define","Formatting","Log","NavigationHandler","SelectionVariant","DateFormat","NumberFormat","ODataModel","dateFormatter","decimalFormatter","situationsModel","_getDateFormatter","datePattern","getDatePattern","getDateInstance","pattern","_getNumberFormatter","getFloatInstance","decimalSeparator","getNumberSymbol","groupingSeparator","groupingEnabled","getSituationMessage","rawText","params","split","composedText","replaceAll","forEach","param","SitnInstceAttribName","length","attributeSource","SitnInstceAttribSource","paramName","matchedAttributes","_InstanceAttributeValue","reduce","attribute","push","formattedValues","attributeMatched","rawVal","SitnInstceAttribValue","trim","formattedVal","SitnInstceAttribEntityType","format","parse","endsWith","substring","Number","join","executeNavigation","oData","ownerComponent","Promise","resolve","reject","navigationHandler","oSelectionVariant","_NavigationParam","map","SituationNotifParamName","addSelectOption","SituationNotifParameterVal","sNavigationParameters","toJSONString","navigate","SitnSemanticObject","SitnSemanticObjectAction","error","fetchNavigationTargetData","instanceId","situationEngineType","oContextBindingNavigation","_getSituationsModel","bindContext","undefined","$expand","$select","requestObject","SitnInstanceID","Error","message","serviceUrl","__exports","__esModule"],"sources":["SituationUtils.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\nimport Formatting from \"sap/base/i18n/Formatting\";\nimport Log from \"sap/base/Log\";\nimport NavigationHandler from \"sap/fe/navigation/NavigationHandler\";\nimport SelectionVariant from \"sap/fe/navigation/SelectionVariant\";\nimport Component from \"sap/ui/core/Component\";\nimport DateFormat from \"sap/ui/core/format/DateFormat\";\nimport NumberFormat from \"sap/ui/core/format/NumberFormat\";\nimport ODataModel from \"sap/ui/model/odata/v4/ODataModel\";\n\nexport interface InstanceAttribute {\n\tSitnInstceKey: string;\n\tSitnInstceAttribName: string;\n\tSitnInstceAttribSource: string;\n\tSitnInstceAttribEntityType: string;\n\t_InstanceAttributeValue: InstanceAttributeValue[];\n}\n\nexport interface InstanceAttributeValue {\n\tSitnInstceKey: string;\n\tSitnInstceAttribName: string;\n\tSitnInstceAttribSource: string;\n\tSitnInstceAttribValue: string;\n}\n\nexport interface NavigationData {\n\tSitnInstanceID: string;\n\tSitnSemanticObject: string;\n\tSitnSemanticObjectAction: string;\n\t_NavigationParam: NavigationParam[];\n}\n\ninterface NavigationParam {\n\tSituationNotifParamName: string;\n\tSituationNotifParameterVal: string;\n}\n\nlet dateFormatter: DateFormat;\nlet decimalFormatter: NumberFormat;\nlet situationsModel!: ODataModel;\n\n/**\n * Gets the date formatter instance using the medium date pattern.\n *\n * @returns {DateFormat} The date formatter instance.\n */\nconst _getDateFormatter = (): DateFormat => {\n\tif (!dateFormatter) {\n\t\tconst datePattern = Formatting.getDatePattern(\"medium\") || \"dd/MM/yyyy\";\n\t\tdateFormatter = DateFormat.getDateInstance({ pattern: datePattern });\n\t}\n\n\treturn dateFormatter;\n};\n\n/**\n * Gets the number formatter instance using the settings retrieved from Configuration.\n *\n * @returns {NumberFormat} The number formatter instance.\n */\nconst _getNumberFormatter = (): NumberFormat => {\n\tif (!decimalFormatter) {\n\t\tdecimalFormatter = NumberFormat.getFloatInstance({\n\t\t\tdecimalSeparator: Formatting.getNumberSymbol(\"decimal\") || \".\",\n\t\t\tgroupingSeparator: Formatting.getNumberSymbol(\"group\") || \",\",\n\t\t\tgroupingEnabled: true\n\t\t});\n\t}\n\n\treturn decimalFormatter;\n};\n\n/**\n * Compose the situation message by replacing placeholders with formatted parameter values.\n *\n * @private\n * @param {string} rawText - The raw text containing placeholders.\n * @param {InstanceAttribute[]} params - An array of parameters to replace in the text.\n * @returns {string} The composed text with replaced placeholders.\n */\nexport const getSituationMessage = (rawText: string, params: InstanceAttribute[] = []): string => {\n\tif (!rawText?.split) {\n\t\treturn rawText;\n\t}\n\n\tlet composedText = rawText.replaceAll(\"\\n\", \" \");\n\n\tparams.forEach((param) => {\n\t\tif (param.SitnInstceAttribName?.length > 0) {\n\t\t\tconst attributeSource = `0${param.SitnInstceAttribSource}`;\n\t\t\tconst paramName = `${attributeSource}.${param.SitnInstceAttribName}`;\n\t\t\tconst matchedAttributes = param._InstanceAttributeValue.reduce(function (matchedAttributes, attribute) {\n\t\t\t\tif (\n\t\t\t\t\tattribute.SitnInstceAttribSource === param.SitnInstceAttribSource &&\n\t\t\t\t\tattribute.SitnInstceAttribName === param.SitnInstceAttribName\n\t\t\t\t) {\n\t\t\t\t\tmatchedAttributes.push(attribute);\n\t\t\t\t}\n\n\t\t\t\treturn matchedAttributes;\n\t\t\t}, [] as InstanceAttributeValue[]);\n\n\t\t\tconst formattedValues: string[] = [];\n\t\t\tmatchedAttributes.forEach((attributeMatched) => {\n\t\t\t\tlet rawVal = attributeMatched?.SitnInstceAttribValue?.trim() || \"\";\n\t\t\t\tlet formattedVal;\n\n\t\t\t\tswitch (param.SitnInstceAttribEntityType) {\n\t\t\t\t\tcase \"Edm.DateTime\":\n\t\t\t\t\t\tformattedVal = _getDateFormatter().format(_getDateFormatter().parse(rawVal));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"Edm.Decimal\":\n\t\t\t\t\t\t// If the parameter string ends with a minus sign, move it to the first position\n\t\t\t\t\t\tif (rawVal.endsWith(\"-\")) {\n\t\t\t\t\t\t\trawVal = `-${rawVal.substring(0, rawVal.length - 1)}`;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tformattedVal = _getNumberFormatter().format(Number(rawVal));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tformattedVal = rawVal;\n\t\t\t\t}\n\n\t\t\t\tformattedValues.push(formattedVal);\n\t\t\t});\n\n\t\t\t// Replace placeholders with formatted values\n\t\t\tcomposedText = composedText.split(`{${paramName}}`).join(formattedValues.join(\", \"));\n\t\t}\n\t});\n\n\treturn composedText;\n};\n\n/**\n * Executes navigation based on provided data.\n *\n * @private\n * @param {NavigationData} oData - Data object containing navigation parameters.\n * @param {Component} ownerComponent - The owner component initiating the navigation.\n * @returns {Promise<void>} A promise that resolves or rejects based on the navigation result.\n */\nexport function executeNavigation(oData: NavigationData, ownerComponent: Component): Promise<void> {\n\treturn new Promise((resolve, reject) => {\n\t\t//@ts-expect-error: params\n\t\tconst navigationHandler = new NavigationHandler(ownerComponent);\n\t\tconst oSelectionVariant = new SelectionVariant();\n\t\toData._NavigationParam?.map(function (param) {\n\t\t\tif (param.SituationNotifParamName) {\n\t\t\t\toSelectionVariant.addSelectOption(param.SituationNotifParamName, \"I\", \"EQ\", param.SituationNotifParameterVal);\n\t\t\t}\n\t\t});\n\t\tconst sNavigationParameters = oSelectionVariant.toJSONString();\n\t\tnavigationHandler.navigate(\n\t\t\toData.SitnSemanticObject,\n\t\t\toData.SitnSemanticObjectAction,\n\t\t\tsNavigationParameters,\n\t\t\tresolve,\n\t\t\t(error: unknown) => reject(error as Error)\n\t\t);\n\t});\n}\n\n/**\n * Fetches navigation target data based on the provided instance ID.\n *\n * @private\n * @async\n * @param {string} instanceId - The instance ID for which to fetch navigation data.\n * @param {string} situationEngineType - Situation Engine Type\n * @returns {Promise<NavigationData>} A promise that resolves with an object containing navigation data.\n */\nexport function fetchNavigationTargetData(instanceId: string, situationEngineType: string): Promise<NavigationData> | undefined {\n\ttry {\n\t\tif (situationEngineType === \"1\") {\n\t\t\tconst oContextBindingNavigation = _getSituationsModel().bindContext(`/Navigation/${instanceId}`, undefined, {\n\t\t\t\t$expand: { _NavigationParam: { $select: [\"SituationNotifParamName\", \"SituationNotifParameterVal\"] } },\n\t\t\t\t$select: [\"SitnInstanceID\", \"SitnSemanticObject\", \"SitnSemanticObjectAction\"]\n\t\t\t});\n\t\t\treturn oContextBindingNavigation.requestObject();\n\t\t} else {\n\t\t\treturn Promise.resolve({\n\t\t\t\tSitnInstanceID: instanceId,\n\t\t\t\tSitnSemanticObject: \"SituationInstance\",\n\t\t\t\tSitnSemanticObjectAction: \"display\",\n\t\t\t\t_NavigationParam: [\n\t\t\t\t\t{\n\t\t\t\t\t\tSituationNotifParamName: \"ui-type\",\n\t\t\t\t\t\tSituationNotifParameterVal: \"extended\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tSituationNotifParamName: \"SitnInstceKey\",\n\t\t\t\t\t\tSituationNotifParameterVal: instanceId\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t});\n\t\t}\n\t} catch (error: unknown) {\n\t\tLog.error(error instanceof Error ? error.message : \"\");\n\t}\n}\n\n/**\n * Retrieves the Situations model. If the model does not exist, it creates a new one.\n *\n * @private\n * @returns {ODataModel} The Situations model instance.\n */\nfunction _getSituationsModel(): ODataModel {\n\tif (!situationsModel) {\n\t\tsituationsModel = new ODataModel({\n\t\t\tserviceUrl: \"/sap/opu/odata4/sap/a_sitn2mblinstce_v4/srvd/sap/a_sitn2mblinstce_srv/0002/\"\n\t\t});\n\t}\n\treturn situationsModel;\n}\n"],"mappings":"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","ignoreList":[]}