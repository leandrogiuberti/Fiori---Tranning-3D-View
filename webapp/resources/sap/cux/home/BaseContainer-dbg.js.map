{"version":3,"file":"BaseContainer-dbg.js","names":["sap","ui","define","Button","FlexBox","HBox","IconTabBar","List","Popover","StandardListItem","Title","sap_m_library","Control","CustomData","UI5Element","HTML","Lib","__BaseContainerRenderer","__BasePanel","__MenuItem","___library","___utils_Accessibility","___utils_DataFormatUtils","___utils_Device","___utils_FESRUtil","___utils_PerformanceUtils","__SideBySideIconTabFilter","_interopRequireDefault","obj","__esModule","default","BackgroundDesign","ButtonType","PlacementType","BaseContainerRenderer","BasePanel","MenuItem","OrientationType","getInvisibleText","recycleId","calculateDeviceType","DeviceType","addFESRId","addFESRSemanticStepName","FESR_EVENTS","getFESRId","recordElementLoadEnd","recordElementLoadStart","SideBySideIconTabFilter","BaseContainer","extend","renderer","metadata","library","properties","title","type","group","defaultValue","orientation","SideBySide","selectedKey","visibility","width","height","blocked","busy","busyIndicatorDelay","busyIndicatorSize","fieldGroupIds","visible","enableSettings","enableFullScreen","fullScreenName","enableLazyLoad","loaded","defaultAggregation","aggregations","content","singularName","multiple","actionButtons","menuItems","_placeholder","associations","layout","fullScreenButton","fullScreenMenuItem","events","onExpand","designtime","adjustLayout","_adjustLayout","load","_load","constructor","_constructor","id","settings","Control.prototype.constructor.call","_exemptedActions","init","_init","_controlMap","Map","_commonHeaderElementStates","_i18nBundle","getResourceBundleFor","_createHeader","containerCustomSettings","getId","key","value","addCustomData","placeholderContent","getGenericPlaceholderContent","setAggregation","getCustomSettings","_getCustomSettings","data","addCustomSetting","_addCustomSetting","control","controlId","isPanel","hasContainerTitle","getProperty","trim","length","get","set","renderType","addStyleClass","justifyContent","items","alignItems","addDependent","setTitleStyle","_getHeader","_getInnerControl","_iconTabBar","_wrapper","_onPanelSelect","event","setProperty","getParameter","_updateContainerHeader","_setPanelCount","panel","count","_getIconTabFilter","setCount","iconTabFilter","writeToDom","SELECT","onBeforeRendering","_onBeforeRendering","defaultKey","getContent","_createInnerControl","_addAllPanelContent","getVisible","_loadContent","_markPerformanceMetrics","onAfterRendering","_onAfterRendering","_attachResizeHandler","_observeContainer","_hidePanelHeaderIfSinglePanel","isSideBySideLayout","hasOnlyOnePanel","toggleStyleClass","getDomRef","_resizeObserver","disconnect","ResizeObserver","entries","_resizeTimeout","clearTimeout","window","setTimeout","_setDeviceType","observe","_detachResizeHandler","target","_containerObserver","IntersectionObserver","forEach","entry","isIntersecting","rootMargin","threshold","Horizontal","Vertical","setDirection","expandable","backgroundDesign","Transparent","headerMode","headerBackgroundDesign","select","isContainer","targetControl","removeAllItems","_updateHeader","headerTitle","setText","setVisible","_getLayout","_addLayoutHeaderElements","currentControl","_getSelectedPanel","_filterVisibleHeaderElements","getMenuItems","_addMenuItems","getAggregation","actionButton","addItem","_getHeaderButton","attachHeaderElements","elements","property","aggregation","headerElement","_getFullScreenMenuItem","_getHomeSettingsMenuItem","_getFullScreenButton","currentPropertyValue","previousPropertyValue","addAggregation","removeAggregation","setFullScreenElementRelations","isFullScreenEnabled","panels","_setupFullScreenElements","setupFullScreenElement","registerFullScreenElement","deregisterFullScreenElement","updateFullScreenElement","index","indexOfItem","_setFullScreenElementRelations","relation","targetAggregation","setAssociation","removeAssociation","menuItem","getText","icon","press","openSettingsDialog","toggleFullScreen","text","push","find","setSelectedKey","getPanelHeader","_getPanelHeader","header","isTitleVisible","getActionButtons","filter","element","_setTitle","list","itemPress","getSource","getParent","close","invisiblePopoverText","menuPopover","placement","VerticalPreferredBottom","showHeader","ariaLabelledBy","containerTitleId","menuButton","tooltip","openBy","item","_getMenuListItem","headerButton","firePress","PRESS","button","setTooltip","getTooltip","setIcon","getIcon","setEnabled","getEnabled","getElementById","getAssociation","getTitle","menuListItem","setTitle","toggleMenuListItem","_toggleMenuListItem","show","toggleActionButton","_toggleActionButton","actionButtonControl","removeContent","_removeContent","undefined","getWidth","_getWidth","toggleActionButtons","_toggleActionButtons","visibilityChanged","currentVisibility","includes","toggleFullScreenElements","_toggleFullScreenElements","fullScreenMenuButton","isPhone","getDeviceType","Mobile","parent","elementVisibilityChanged","fullScreenElement","elementKey","getKey","parentLayout","parentNode","clientWidth","deviceType","_deviceType","_getDeviceType","elementName","getMetadata","getName","attachEventOnce","exit","_exit","destroy","_getGenericPlaceholderContent"],"sources":["BaseContainer.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport ResourceBundle from \"sap/base/i18n/ResourceBundle\";\nimport Button from \"sap/m/Button\";\nimport FlexBox from \"sap/m/FlexBox\";\nimport HBox from \"sap/m/HBox\";\nimport IconTabBar, { IconTabBar$SelectEvent } from \"sap/m/IconTabBar\";\nimport IconTabFilter from \"sap/m/IconTabFilter\";\nimport List from \"sap/m/List\";\nimport Popover from \"sap/m/Popover\";\nimport StandardListItem from \"sap/m/StandardListItem\";\nimport Title from \"sap/m/Title\";\nimport { BackgroundDesign, ButtonType, PlacementType } from \"sap/m/library\";\nimport Event from \"sap/ui/base/Event\";\nimport Control from \"sap/ui/core/Control\";\nimport CustomData from \"sap/ui/core/CustomData\";\nimport type { MetadataOptions } from \"sap/ui/core/Element\";\nimport UI5Element from \"sap/ui/core/Element\";\nimport HTML from \"sap/ui/core/HTML\";\nimport Lib from \"sap/ui/core/Lib\";\nimport { CSSSize } from \"sap/ui/core/library\";\nimport { $BaseContainerSettings } from \"./BaseContainer\";\nimport BaseContainerRenderer from \"./BaseContainerRenderer\";\nimport BaseLayout from \"./BaseLayout\";\nimport BasePanel from \"./BasePanel\";\nimport MenuItem from \"./MenuItem\";\nimport { OrientationType } from \"./library\";\nimport { getInvisibleText } from \"./utils/Accessibility\";\nimport { recycleId } from \"./utils/DataFormatUtils\";\nimport { calculateDeviceType, DeviceType } from \"./utils/Device\";\nimport { addFESRId, addFESRSemanticStepName, FESR_EVENTS, getFESRId } from \"./utils/FESRUtil\";\nimport { recordElementLoadEnd, recordElementLoadStart, UIElements } from \"./utils/PerformanceUtils\";\nimport SideBySideIconTabFilter from \"./SideBySideIconTabFilter\";\n\ntype FullScreenElementRelation = {\n\tisFullScreenEnabled: boolean;\n\tcontrol: BaseContainer | BasePanel;\n\taggregation: string;\n\theaderElement: MenuItem | Button;\n};\n\n/**\n *\n * Abstract base class for all container controls in the Home Page Layout.\n *\n * @extends sap.ui.core.Control\n *\n * @author SAP SE\n * @version 0.0.1\n * @since 1.121\n *\n * @abstract\n * @private\n * @ui5-restricted ux.eng.s4producthomes1\n *\n * @ui5-metamodel\n * @alias sap.cux.home.BaseContainer\n */\nexport default abstract class BaseContainer extends Control {\n\tprotected _i18nBundle!: ResourceBundle;\n\tprivate _controlMap!: Map<string, Control | UI5Element>;\n\tprivate _wrapper!: FlexBox;\n\tprivate _iconTabBar!: IconTabBar;\n\tprivate _commonHeaderElementStates!: Map<string, boolean>;\n\tprivate _resizeObserver!: ResizeObserver;\n\tprivate _deviceType!: DeviceType;\n\tprivate _containerObserver!: IntersectionObserver;\n\tprivate _exemptedActions: string[] = [];\n\tpublic adjustLayout() {}\n\tprotected load() {}\n\tprivate _resizeTimeout!: number;\n\n\tconstructor(id?: string | $BaseContainerSettings);\n\tconstructor(id?: string, settings?: $BaseContainerSettings);\n\t/**\n\t * Constructor for a new Base Container.\n\t *\n\t * @param {string} [id] ID for the new control, generated automatically if an ID is not provided\n\t * @param {object} [settings] Initial settings for the new control\n\t */\n\tpublic constructor(id?: string, settings?: $BaseContainerSettings) {\n\t\tsuper(id, settings);\n\t}\n\n\tstatic readonly metadata: MetadataOptions = {\n\t\tlibrary: \"sap.cux.home\",\n\t\tproperties: {\n\t\t\t/**\n\t\t\t * Title of the container.\n\t\t\t */\n\t\t\ttitle: { type: \"string\", group: \"Data\", defaultValue: \"\" },\n\t\t\t/**\n\t\t\t * Orientation of the container.\n\t\t\t */\n\t\t\torientation: {\n\t\t\t\ttype: \"sap.cux.home.OrientationType\",\n\t\t\t\tgroup: \"Data\",\n\t\t\t\tdefaultValue: OrientationType.SideBySide\n\t\t\t},\n\t\t\t/**\n\t\t\t * Key of the selected panel of the container.\n\t\t\t */\n\t\t\tselectedKey: { type: \"string\", group: \"Data\", defaultValue: \"\", visibility: \"hidden\" },\n\t\t\t/**\n\t\t\t * Width to be set for the container.\n\t\t\t * @public\n\t\t\t */\n\t\t\twidth: { type: \"sap.ui.core.CSSSize\", group: \"Appearance\", defaultValue: \"100%\", visibility: \"public\" },\n\t\t\t/**\n\t\t\t * Height to be set for the container.\n\t\t\t * @public\n\t\t\t */\n\t\t\theight: { type: \"sap.ui.core.CSSSize\", group: \"Appearance\", visibility: \"public\" },\n\t\t\t/**\n\t\t\t * Whether the control is currently in blocked state.\n\t\t\t */\n\t\t\tblocked: { type: \"boolean\", group: \"Appearance\", defaultValue: false, visibility: \"hidden\" },\n\t\t\t/**\n\t\t\t * Whether the layout is currently in busy state.\n\t\t\t */\n\t\t\tbusy: { type: \"boolean\", group: \"Appearance\", defaultValue: false, visibility: \"hidden\" },\n\t\t\t/**\n\t\t\t * The delay in milliseconds, after which the busy indicator will show up for this control.\n\t\t\t */\n\t\t\tbusyIndicatorDelay: { type: \"int\", defaultValue: 1000, visibility: \"hidden\" },\n\t\t\t/**\n\t\t\t * The size of the BusyIndicator.\n\t\t\t */\n\t\t\tbusyIndicatorSize: { type: \"sap.ui.core.BusyIndicatorSize\", defaultValue: \"Medium\", visibility: \"hidden\" },\n\t\t\t/**\n\t\t\t * The IDs of a logical field group that this control belongs to.\n\t\t\t */\n\t\t\tfieldGroupIds: { type: \"string[]\", defaultValue: [], visibility: \"hidden\" },\n\t\t\t/**\n\t\t\t * The visible property of the container.\n\t\t\t */\n\t\t\tvisible: { type: \"boolean\", group: \"Appearance\", defaultValue: true, visibility: \"hidden\" },\n\t\t\t/**\n\t\t\t * Indicates whether home settings are enabled for this control.\n\t\t\t */\n\t\t\tenableSettings: { type: \"boolean\", group: \"Misc\", visibility: \"hidden\" },\n\t\t\t/**\n\t\t\t * Indicates whether full screen is enabled for this control.\n\t\t\t */\n\t\t\tenableFullScreen: { type: \"boolean\", group: \"Misc\", visibility: \"hidden\" },\n\t\t\t/**\n\t\t\t * The name of the URL parameter used to expand the container into full-screen mode.\n\t\t\t * This property specifies the parameter key expected in the URL query string\n\t\t\t * to identify the container to be expanded.\n\t\t\t */\n\t\t\tfullScreenName: { type: \"string\", group: \"Misc\", visibility: \"hidden\" },\n\t\t\t/**\n\t\t\t * Indicates whether lazy loading is enabled for this control.\n\t\t\t */\n\t\t\tenableLazyLoad: { type: \"boolean\", group: \"Misc\", defaultValue: true, visibility: \"hidden\" },\n\t\t\t/**\n\t\t\t * Indicates if the container is loaded.\n\t\t\t */\n\t\t\tloaded: { type: \"boolean\", group: \"Appearance\", defaultValue: false, visibility: \"hidden\" }\n\t\t},\n\t\tdefaultAggregation: \"content\",\n\t\taggregations: {\n\t\t\t/**\n\t\t\t * The container content aggregation which should be of type BasePanel.\n\t\t\t *\n\t\t\t * @public\n\t\t\t */\n\t\t\tcontent: { type: \"sap.cux.home.BasePanel\", singularName: \"content\", multiple: true, visibility: \"public\" },\n\t\t\t/**\n\t\t\t * This aggregation contains the actions that should be displayed within the container.\n\t\t\t *\n\t\t\t * @public\n\t\t\t */\n\t\t\tactionButtons: { type: \"sap.m.Button\", multiple: true, singularName: \"actionButton\", visibility: \"public\" },\n\t\t\t/**\n\t\t\t * This aggregation holds the items that should be shown within the dropdown menu of the container.\n\t\t\t *\n\t\t\t * @public\n\t\t\t */\n\t\t\tmenuItems: { type: \"sap.cux.home.MenuItem\", multiple: true, singularName: \"menuItem\", visibility: \"public\" },\n\t\t\t/**\n\t\t\t * Hidden aggregation for placeholder.\n\t\t\t */\n\t\t\t_placeholder: { type: \"sap.ui.core.HTML\", multiple: false, singularName: \"placeholder\", visibility: \"hidden\" }\n\t\t},\n\t\tassociations: {\n\t\t\tlayout: { type: \"sap.cux.home.BaseLayout\", multiple: false, singularName: \"layout\", visibility: \"hidden\" },\n\t\t\tfullScreenButton: { type: \"sap.m.Button\", multiple: false, singularName: \"fullScreenButton\", visibility: \"hidden\" },\n\t\t\tfullScreenMenuItem: { type: \"sap.cux.home.MenuItem\", multiple: false, singularName: \"fullScreenMenuItem\", visibility: \"hidden\" }\n\t\t},\n\t\tevents: {\n\t\t\t/**\n\t\t\t * Event is fired before the container is expanded.\n\t\t\t */\n\t\t\tonExpand: {}\n\t\t},\n\t\tdesigntime: true\n\t};\n\n\tstatic renderer: typeof BaseContainerRenderer = BaseContainerRenderer;\n\n\t/**\n\t * Init lifecycle method\n\t *\n\t * @private\n\t * @override\n\t */\n\tpublic init(): void {\n\t\tthis._controlMap = new Map();\n\t\tthis._commonHeaderElementStates = new Map();\n\t\tthis._i18nBundle = Lib.getResourceBundleFor(\"sap.cux.home.i18n\") as ResourceBundle;\n\t\tthis._createHeader(this);\n\n\t\t//create custom settings data\n\t\tconst containerCustomSettings = new CustomData(`${this.getId()}-custom-settings`, {\n\t\t\tkey: \"custom-settings\",\n\t\t\tvalue: {}\n\t\t});\n\t\tthis.addCustomData(containerCustomSettings);\n\n\t\t//create placeholder\n\t\tconst placeholderContent = this.getGenericPlaceholderContent();\n\t\tif (placeholderContent) {\n\t\t\tthis.setAggregation(\"_placeholder\", new HTML({ content: placeholderContent }), true);\n\t\t}\n\t}\n\n\t/**\n\t * Returns the custom settings data associated with the container\n\t * @private\n\t */\n\tpublic getCustomSettings() {\n\t\treturn (this.data(\"custom-settings\") || {}) as Record<string, string>;\n\t}\n\n\t/**\n\t * Adds the Custom setting data for the Section\n\t * @private\n\t * @param {string} key - The key of the Custom setting data\n\t * @param {string} value - The value to set for the specified key\n\t */\n\tprotected addCustomSetting(key: string, value: string) {\n\t\t(this.data(\"custom-settings\") as Record<string, string>)[key] = value;\n\t}\n\n\t/**\n\t * Creates and returns header for both container as well as panels\n\t *\n\t * @private\n\t * @param {BaseContainer | BasePanel} control - can be a container or a panel\n\t * @returns {HBox} header for the given container or panel\n\t */\n\tprivate _createHeader(control: BaseContainer | BasePanel): HBox {\n\t\tconst controlId = control.getId();\n\t\tconst id = `${controlId}-header`;\n\t\tconst isPanel = control instanceof BasePanel;\n\t\tconst hasContainerTitle = (this.getProperty(\"title\") as string)?.trim().length > 0;\n\n\t\tif (!this._controlMap.get(id)) {\n\t\t\t//create header elements\n\t\t\tthis._controlMap.set(`${controlId}-header-title`, new Title(`${controlId}-title`));\n\t\t\tthis._controlMap.set(\n\t\t\t\t`${controlId}-header-contentLeft`,\n\t\t\t\tnew HBox(`${controlId}-contentLeft`, { renderType: \"Bare\" }).addStyleClass(\"sapCuxSectionContentArea\")\n\t\t\t);\n\t\t\tthis._controlMap.set(\n\t\t\t\t`${controlId}-header-contentRight`,\n\t\t\t\tnew HBox(`${controlId}-contentRight`, { renderType: \"Bare\" }).addStyleClass(\"sapCuxSectionContentArea\")\n\t\t\t);\n\t\t\tthis._controlMap.set(\n\t\t\t\t`${controlId}-header-content`,\n\t\t\t\tnew HBox(`${controlId}-header-content`, {\n\t\t\t\t\twidth: \"100%\",\n\t\t\t\t\tjustifyContent: \"SpaceBetween\",\n\t\t\t\t\trenderType: \"Bare\",\n\t\t\t\t\titems: [\n\t\t\t\t\t\tthis._controlMap.get(`${controlId}-header-contentLeft`) as Control,\n\t\t\t\t\t\tthis._controlMap.get(`${controlId}-header-contentRight`) as Control\n\t\t\t\t\t]\n\t\t\t\t}).addStyleClass(\"sapUiTinyMarginBegin\")\n\t\t\t);\n\n\t\t\t//create header container\n\t\t\tthis._controlMap.set(\n\t\t\t\tid,\n\t\t\t\tnew HBox(`${controlId}-header`, {\n\t\t\t\t\talignItems: \"Center\",\n\t\t\t\t\titems: [\n\t\t\t\t\t\tthis._controlMap.get(`${controlId}-header-title`) as Control,\n\t\t\t\t\t\tthis._controlMap.get(`${controlId}-header-content`) as Control\n\t\t\t\t\t]\n\t\t\t\t})\n\t\t\t);\n\n\t\t\tthis.addDependent(this._controlMap.get(id) as Control);\n\t\t}\n\n\t\t//add control-specific styling\n\t\t(this._controlMap.get(id) as HBox)?.addStyleClass(isPanel && hasContainerTitle ? \"sapCuxPanelHeader\" : \"sapUiContainerHeader\");\n\t\t(this._controlMap.get(`${controlId}-header-title`) as Title).setTitleStyle(isPanel && hasContainerTitle ? \"H6\" : \"H4\");\n\n\t\treturn this._controlMap.get(id) as HBox;\n\t}\n\n\t/**\n\t * Returns container header\n\t *\n\t * @private\n\t * @returns {Object} container header\n\t */\n\tpublic _getHeader(): HBox {\n\t\treturn this._controlMap.get(`${this.getId()}-header`) as HBox;\n\t}\n\n\t/**\n\t * Returns inner control corresponding to the specified layout\n\t *\n\t * @private\n\t * @returns {IconTabBar | FlexBox} inner control based on the layout\n\t */\n\tpublic _getInnerControl(): IconTabBar | FlexBox {\n\t\treturn this.getProperty(\"orientation\") === OrientationType.SideBySide ? this._iconTabBar : this._wrapper;\n\t}\n\n\t/**\n\t * Handler for selection of panel in SideBySide layout\n\t *\n\t * @private\n\t * @param {Event} event - event object\n\t */\n\tprotected _onPanelSelect(event: IconTabBar$SelectEvent) {\n\t\t//suppress invalidation to prevent container re-rendering. render the specific header element instead\n\t\tthis.setProperty(\"selectedKey\", event.getParameter(\"selectedKey\"), true);\n\t\tthis._updateContainerHeader(this);\n\t}\n\n\t/**\n\t * Updates the count information of IconTabFilter of IconTabBar inner control\n\t * in case of SideBySide layout\n\t *\n\t * @private\n\t * @param {BasePanel} panel - associated panel\n\t * @param {string} count - updated count\n\t */\n\tpublic _setPanelCount(panel: BasePanel, count?: string) {\n\t\tif (this.getProperty(\"orientation\") === OrientationType.SideBySide) {\n\t\t\tthis._getIconTabFilter(panel).setCount(count);\n\t\t}\n\t}\n\n\t/**\n\t * Creates and returns IconTabBarFilter for the specified panel to be placed\n\t * in the IconTabBar inner control in case of SideBySide layout\n\t *\n\t * @private\n\t * @param {BasePanel} panel - panel whose icon tab filter must be fetched\n\t * @returns {IconTabFilter} IconTabFilter for the specified panel\n\t */\n\tprivate _getIconTabFilter(panel: BasePanel): IconTabFilter {\n\t\tconst id = `${panel.getId()}-tabFilter`;\n\n\t\tif (!this._controlMap.get(id)) {\n\t\t\tconst iconTabFilter = new SideBySideIconTabFilter(id, { panel });\n\t\t\ticonTabFilter.addCustomData(\n\t\t\t\tnew CustomData(`${panel.getId()}--customFilter`, {\n\t\t\t\t\tkey: \"sap-ui-fastnavgroup\",\n\t\t\t\t\tvalue: \"true\",\n\t\t\t\t\twriteToDom: true\n\t\t\t\t})\n\t\t\t);\n\t\t\tthis._controlMap.set(id, iconTabFilter);\n\t\t\taddFESRSemanticStepName(iconTabFilter, FESR_EVENTS.SELECT, panel.getProperty(\"key\") as string);\n\t\t}\n\n\t\treturn this._controlMap.get(id) as IconTabFilter;\n\t}\n\n\t/**\n\t * onBeforeRendering lifecycle method\n\t *\n\t * @private\n\t * @override\n\t */\n\tpublic onBeforeRendering(): void {\n\t\t// set selected key to the first panel key if not set\n\t\tif (this.getProperty(\"selectedKey\") === \"\") {\n\t\t\tconst defaultKey = this.getContent()?.[0]?.getProperty(\"key\") as string;\n\t\t\tthis.setProperty(\"selectedKey\", defaultKey, true);\n\t\t}\n\n\t\t//create layout-specific inner control\n\t\tthis._createInnerControl();\n\n\t\t//fetch and update container header\n\t\tthis._updateContainerHeader(this);\n\n\t\t//add content from all panels to inner control\n\t\tthis._addAllPanelContent();\n\n\t\t//load content if lazy loading is disabled\n\t\tif (this.getProperty(\"enableLazyLoad\") === false && !this.getProperty(\"loaded\") && this.getVisible()) {\n\t\t\tthis._loadContent();\n\t\t}\n\n\t\t// mark performance metrics\n\t\tthis._markPerformanceMetrics();\n\t}\n\n\t/**\n\t * onAfterRendering lifecycle method\n\t *\n\t * @private\n\t * @override\n\t */\n\tpublic onAfterRendering(): void {\n\t\tthis._attachResizeHandler();\n\n\t\t//observe container for lazy loading if enabled\n\t\tif (this.getProperty(\"enableLazyLoad\") as boolean) {\n\t\t\tthis._observeContainer();\n\t\t}\n\n\t\tthis._hidePanelHeaderIfSinglePanel();\n\t}\n\n\t/**\n\t * Hides the panel header if there is only one panel in the container,\n\t * in case of side-by-side orientation.\n\t *\n\t * @private\n\t */\n\tprivate _hidePanelHeaderIfSinglePanel(): void {\n\t\tconst isSideBySideLayout = this.getProperty(\"orientation\") === OrientationType.SideBySide;\n\t\tconst hasOnlyOnePanel = this.getContent()?.length === 1;\n\t\tthis.toggleStyleClass(\"sapUiITBHide\", isSideBySideLayout && hasOnlyOnePanel);\n\t}\n\n\t/**\n\t * Loads the content for the container.\n\t *\n\t * @private\n\t */\n\tprivate _loadContent() {\n\t\tthis.setProperty(\"loaded\", true);\n\t\tthis.load?.();\n\t}\n\n\t/**\n\t * Attaches a resize handler to the container to adjust\n\t * the layout based on device size changes.\n\t *\n\t * @private\n\t */\n\tpublic _attachResizeHandler() {\n\t\tif (this.getDomRef() && this.getProperty(\"loaded\")) {\n\t\t\tthis._resizeObserver?.disconnect();\n\t\t\tthis._resizeObserver = new ResizeObserver((entries) => {\n\t\t\t\tif (this._resizeTimeout) {\n\t\t\t\t\tclearTimeout(this._resizeTimeout);\n\t\t\t\t}\n\n\t\t\t\t//debounce resize event to prevent multiple calls\n\t\t\t\tthis._resizeTimeout = window.setTimeout(() => {\n\t\t\t\t\tif (this.getVisible()) {\n\t\t\t\t\t\tthis._setDeviceType(entries);\n\t\t\t\t\t\tthis.adjustLayout();\n\t\t\t\t\t}\n\t\t\t\t}, 10) as unknown as number;\n\t\t\t});\n\t\t\tthis._resizeObserver?.observe(this.getDomRef() as Element);\n\t\t}\n\t}\n\n\t/**\n\t * Detaches the resize handler from the container.\n\t *\n\t * @private\n\t */\n\tpublic _detachResizeHandler() {\n\t\tthis._resizeObserver?.disconnect();\n\t}\n\n\t/**\n\t * Adds intersection observer for lazy loading of container\n\t *\n\t * @private\n\t */\n\tprivate _observeContainer(): void {\n\t\tconst target = this.getDomRef();\n\t\tif (!this._containerObserver) {\n\t\t\tthis._containerObserver = new IntersectionObserver(\n\t\t\t\t(entries) =>\n\t\t\t\t\tentries.forEach((entry) => {\n\t\t\t\t\t\tif (!this.getProperty(\"loaded\") && this.getVisible() && entry.isIntersecting) {\n\t\t\t\t\t\t\tthis._loadContent();\n\t\t\t\t\t\t}\n\t\t\t\t\t}),\n\t\t\t\t{ rootMargin: \"0px\", threshold: 0.1 }\n\t\t\t);\n\t\t}\n\t\tthis._containerObserver?.disconnect();\n\t\t//observe container\n\t\tif (target) {\n\t\t\tthis._containerObserver.observe(target);\n\t\t}\n\t}\n\n\t/**\n\t * Create inner control for storing content from panel\n\t *\n\t * @private\n\t */\n\tprivate _createInnerControl(): void {\n\t\tconst layout = this.getProperty(\"orientation\") as OrientationType;\n\n\t\tif (layout === OrientationType.Horizontal || layout === OrientationType.Vertical) {\n\t\t\tif (!this._wrapper) {\n\t\t\t\tthis._wrapper = new FlexBox(`${this.getId()}-wrapper`, {\n\t\t\t\t\twidth: \"100%\",\n\t\t\t\t\trenderType: \"Bare\"\n\t\t\t\t}).addStyleClass(\"sapCuxBaseWrapper\");\n\t\t\t\tthis.addDependent(this._wrapper);\n\t\t\t}\n\t\t\tthis._wrapper.setDirection(layout === OrientationType.Horizontal ? \"Row\" : \"Column\");\n\t\t} else if (!this._iconTabBar) {\n\t\t\tthis._iconTabBar = new IconTabBar(`${this.getId()}-iconTabBar`, {\n\t\t\t\texpandable: true,\n\t\t\t\tbackgroundDesign: BackgroundDesign.Transparent,\n\t\t\t\theaderMode: \"Inline\",\n\t\t\t\theaderBackgroundDesign: BackgroundDesign.Transparent,\n\t\t\t\tselect: (event: Event) => this._onPanelSelect(event)\n\t\t\t});\n\t\t\tthis.addDependent(this._iconTabBar);\n\t\t}\n\t}\n\n\t/**\n\t * Update container header information\n\t *\n\t * @private\n\t */\n\tpublic _updateContainerHeader(control: BaseContainer | BasePanel): void {\n\t\tconst isSideBySideLayout = this.getProperty(\"orientation\") === OrientationType.SideBySide;\n\t\tconst isContainer = control instanceof BaseContainer;\n\t\tconst targetControl = !isContainer && isSideBySideLayout ? this : control;\n\n\t\t//clear container header elements\n\t\t(this._controlMap.get(targetControl.getId() + \"-header-contentLeft\") as HBox)?.removeAllItems();\n\t\t(this._controlMap.get(targetControl.getId() + \"-header-contentRight\") as HBox)?.removeAllItems();\n\n\t\t//update container header elements\n\t\tthis._updateHeader(control);\n\t}\n\n\t/**\n\t * Updates header information of a specified container or a panel\n\t *\n\t * @private\n\t * @param {BaseContainer | BasePanel} control - can be container or panel\n\t */\n\tprivate _updateHeader(control: BaseContainer | BasePanel): void {\n\t\tconst isSideBySideLayout = this.getProperty(\"orientation\") === OrientationType.SideBySide;\n\t\tconst isContainer = control instanceof BaseContainer;\n\n\t\t//Update Title\n\t\tconst headerTitle = this._controlMap.get(control.getId() + \"-header-title\") as Title;\n\t\theaderTitle?.setText(control.getProperty(\"title\") as string);\n\t\theaderTitle?.setVisible((control.getProperty(\"title\") as string)?.trim().length > 0);\n\n\t\t//Update Panel Header, if applicable\n\t\tif (!isContainer && isSideBySideLayout) {\n\t\t\tthis._getIconTabFilter(control)?.setText(control.getProperty(\"title\") as string);\n\t\t}\n\n\t\t//Add common header elements\n\t\tif (this._getLayout()) {\n\t\t\tthis._addLayoutHeaderElements();\n\t\t}\n\n\t\tconst currentControl = isContainer && isSideBySideLayout ? this._getSelectedPanel() : control;\n\t\tconst targetControl = !isContainer && isSideBySideLayout ? this : control;\n\n\t\t//Update Menu Items\n\t\tconst menuItems = this._filterVisibleHeaderElements(currentControl?.getMenuItems());\n\t\tif (menuItems.length > 0) {\n\t\t\tthis._addMenuItems(targetControl, menuItems);\n\t\t}\n\n\t\t//Update Action Buttons\n\t\t(currentControl?.getAggregation(\"actionButtons\") as Button[])?.forEach((actionButton: Button) => {\n\t\t\t(this._controlMap.get(targetControl.getId() + \"-header-contentRight\") as HBox)?.addItem(this._getHeaderButton(actionButton));\n\t\t});\n\t}\n\n\t/**\n\t * Attaches layout header elements like settings menu and full screen action to each\n\t * panel in the container, if enabled.\n\t *\n\t * @private\n\t */\n\tprivate _addLayoutHeaderElements(): void {\n\t\tconst attachHeaderElements = (control: BaseContainer | BasePanel) => {\n\t\t\tconst elements = [\n\t\t\t\t{ property: \"enableFullScreen\", aggregation: \"menuItems\", headerElement: this._getFullScreenMenuItem(control) },\n\t\t\t\t{ property: \"enableSettings\", aggregation: \"menuItems\", headerElement: this._getHomeSettingsMenuItem(control) },\n\t\t\t\t{ property: \"enableFullScreen\", aggregation: \"actionButtons\", headerElement: this._getFullScreenButton(control) }\n\t\t\t];\n\n\t\t\telements.forEach(({ property, aggregation, headerElement }) => {\n\t\t\t\tconst currentPropertyValue = control.getProperty(property) as boolean;\n\t\t\t\tconst previousPropertyValue = this._commonHeaderElementStates.get(`${headerElement.getId()}-${property}`);\n\n\t\t\t\t//update common header elements only if there's a change in property value\n\t\t\t\tif (currentPropertyValue !== previousPropertyValue) {\n\t\t\t\t\tthis._commonHeaderElementStates.set(`${headerElement.getId()}-${property}`, currentPropertyValue);\n\n\t\t\t\t\tif (currentPropertyValue) {\n\t\t\t\t\t\tcontrol.addAggregation(aggregation, headerElement);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcontrol.removeAggregation(aggregation, headerElement);\n\t\t\t\t\t}\n\n\t\t\t\t\t// set full screen element relations\n\t\t\t\t\tif (property === \"enableFullScreen\") {\n\t\t\t\t\t\tthis.setFullScreenElementRelations({\n\t\t\t\t\t\t\tisFullScreenEnabled: currentPropertyValue,\n\t\t\t\t\t\t\tcontrol,\n\t\t\t\t\t\t\taggregation,\n\t\t\t\t\t\t\theaderElement\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t// Add common header elements for container\n\t\tattachHeaderElements(this);\n\n\t\t// Add common header elements for inner panels\n\t\tconst panels = this.getContent() || [];\n\t\tpanels.forEach(attachHeaderElements);\n\n\t\t// setup full screen elements if required\n\t\tthis._setupFullScreenElements();\n\t}\n\n\t/**\n\t * Register/Degister elements for full screen, if enabled.\n\t *\n\t * @private\n\t */\n\tprivate _setupFullScreenElements() {\n\t\tconst layout = this._getLayout();\n\t\tconst setupFullScreenElement = (control: BaseContainer | BasePanel) => {\n\t\t\tconst currentPropertyValue = control.getProperty(\"enableFullScreen\") as boolean;\n\t\t\tconst previousPropertyValue = this._commonHeaderElementStates.get(`${control.getId()}-enableFullScreen`);\n\n\t\t\tif (currentPropertyValue !== previousPropertyValue) {\n\t\t\t\tthis._commonHeaderElementStates.set(`${control.getId()}-enableFullScreen`, currentPropertyValue);\n\n\t\t\t\tif (currentPropertyValue) {\n\t\t\t\t\tlayout?.registerFullScreenElement(control);\n\t\t\t\t} else {\n\t\t\t\t\tlayout?.deregisterFullScreenElement(control);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// update index of full screen element\n\t\t\tif (currentPropertyValue) {\n\t\t\t\tlayout?.updateFullScreenElement(control, {\n\t\t\t\t\tindex: layout?.indexOfItem(this)\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\t// Register full screen elements for container\n\t\tsetupFullScreenElement(this);\n\n\t\t// Register full screen elements for inner panels\n\t\tconst panels = this.getContent() || [];\n\t\tpanels.forEach(setupFullScreenElement);\n\t}\n\n\t/**\n\t * Sets or removes the full screen element relations based on the provided configuration.\n\t *\n\t * @private\n\t * @param {FullScreenElementRelation} relation - The configuration object containing the full screen element relation details.\n\t * @param {boolean} relation.isFullScreenEnabled - Indicates whether full screen is enabled.\n\t * @param {Control} relation.control - The control to set or remove the association.\n\t * @param {string} relation.aggregation - The aggregation type (e.g., \"actionButtons\").\n\t * @param {Element} relation.headerElement - The header element to associate or disassociate.\n\t *\n\t * @returns {void}\n\t */\n\tprivate setFullScreenElementRelations(relation: FullScreenElementRelation): void {\n\t\tconst { isFullScreenEnabled, control, aggregation, headerElement } = relation;\n\t\tconst targetAggregation = aggregation === \"actionButtons\" ? \"fullScreenButton\" : \"fullScreenMenuItem\";\n\n\t\tif (isFullScreenEnabled) {\n\t\t\tcontrol.setAssociation(targetAggregation, headerElement, true);\n\t\t} else {\n\t\t\tcontrol.removeAssociation(targetAggregation, headerElement, true);\n\t\t}\n\t}\n\n\t/**\n\t * Retrieves the my home settings menu item for a given panel.\n\t *\n\t * @private\n\t * @param {BaseContainer | BasePanel} panel - The panel for which to retrieve the home settings menu item.\n\t * @returns {MenuItem} The settings menu item for the given panel.\n\t */\n\tprivate _getHomeSettingsMenuItem(panel: BaseContainer | BasePanel): MenuItem {\n\t\tconst id = `${panel.getId()}-settings`;\n\t\tif (!this._controlMap.get(id)) {\n\t\t\tconst menuItem = new MenuItem(id, {\n\t\t\t\ttitle: this._i18nBundle.getText(\"myHomeSettings\"),\n\t\t\t\ticon: \"sap-icon://user-settings\",\n\t\t\t\tpress: () => {\n\t\t\t\t\t//open settings dialog\n\t\t\t\t\tconst layout = this._getLayout();\n\t\t\t\t\tlayout?.openSettingsDialog();\n\t\t\t\t}\n\t\t\t});\n\t\t\taddFESRId(menuItem, \"myHomeSettings\");\n\t\t\tthis._controlMap.set(id, menuItem);\n\t\t}\n\n\t\treturn this._controlMap.get(id) as MenuItem;\n\t}\n\n\t/**\n\t * Retrieves the full screen menu item for a given panel.\n\t *\n\t * @private\n\t * @param {BaseContainer | BasePanel} panel - The panel for which to retrieve the home settings menu item.\n\t * @returns {MenuItem} The settings menu item for the given panel.\n\t */\n\tprivate _getFullScreenMenuItem(panel: BaseContainer | BasePanel): MenuItem {\n\t\tconst id = `${panel.getId()}-showMore`;\n\t\tif (!this._controlMap.get(id)) {\n\t\t\tconst fullScreenMenuItem = new MenuItem(id, {\n\t\t\t\ttitle: this._i18nBundle.getText(\"expand\"),\n\t\t\t\ticon: \"sap-icon://display-more\",\n\t\t\t\tpress: () => {\n\t\t\t\t\tconst layout = this._getLayout();\n\t\t\t\t\tlayout?.toggleFullScreen(panel);\n\t\t\t\t}\n\t\t\t});\n\t\t\taddFESRId(fullScreenMenuItem, \"toggleFullScreen\");\n\t\t\tthis._controlMap.set(id, fullScreenMenuItem);\n\t\t}\n\t\treturn this._controlMap.get(id) as MenuItem;\n\t}\n\n\t/**\n\t * Generates a full screen action button for a given control, which can be a panel or a container.\n\t *\n\t * @private\n\t * @param {BaseContainer | BasePanel} control - The control for which the full screen button is generated.\n\t * @returns {Button} A Button instance configured to toggle full screen mode for the specified control.\n\t */\n\tprivate _getFullScreenButton(control: BaseContainer | BasePanel): Button {\n\t\tconst id = `${control.getId()}-fullScreen`;\n\t\tif (!this._controlMap.get(id)) {\n\t\t\tconst fullScreenButton = new Button(id, {\n\t\t\t\ttext: this._i18nBundle.getText(\"expand\"),\n\t\t\t\ttype: ButtonType.Transparent,\n\t\t\t\tpress: () => {\n\t\t\t\t\tconst layout = this._getLayout();\n\t\t\t\t\tlayout?.toggleFullScreen(control);\n\t\t\t\t}\n\t\t\t});\n\t\t\taddFESRId(fullScreenButton, \"toggleFullScreen\");\n\t\t\tthis._controlMap.set(id, fullScreenButton);\n\t\t\tthis._exemptedActions.push(id);\n\t\t}\n\n\t\treturn this._controlMap.get(id) as Button;\n\t}\n\n\t/**\n\t * Returns the selected panel in the IconTabBar inner control in\n\t * case of SideBySide layout\n\t *\n\t * @private\n\t * @returns {BasePanel} selected panel\n\t */\n\tpublic _getSelectedPanel(): BasePanel {\n\t\tconst panel =\n\t\t\tthis.getContent()?.find((panel) => panel.getProperty(\"key\") === this.getProperty(\"selectedKey\")) || this.getContent()?.[0];\n\t\tthis.setProperty(\"selectedKey\", panel?.getProperty(\"key\"), true);\n\n\t\treturn panel;\n\t}\n\n\t/**\n\t * Add content from all panels to the layout-specific inner control\n\t *\n\t * @private\n\t */\n\tprivate _addAllPanelContent(): void {\n\t\tconst panels = this.getContent() || [];\n\n\t\tif (this.getProperty(\"orientation\") === OrientationType.SideBySide) {\n\t\t\tthis._iconTabBar.removeAllItems();\n\t\t\tpanels.forEach((panel) => this._iconTabBar.addItem(this._getIconTabFilter(panel)));\n\t\t\tthis._iconTabBar.setSelectedKey(this.getProperty(\"selectedKey\") as string);\n\t\t}\n\t}\n\n\t/**\n\t * Returns header of the specified panel after updating it\n\t *\n\t * @private\n\t * @param {BasePanel} panel - panel to be updated\n\t * @returns {HBox} header associated with the panel\n\t */\n\tpublic getPanelHeader(panel: BasePanel): HBox {\n\t\tconst header = this._createHeader(panel);\n\t\tconst isTitleVisible = (panel.getProperty(\"title\") as string)?.trim().length > 0;\n\t\tconst hasContainerTitle = (this.getProperty(\"title\") as string)?.trim().length > 0;\n\n\t\t//update panel header elements\n\t\tthis._updateContainerHeader(panel);\n\n\t\t//add header styling only if any of the header elements are visible\n\t\theader.toggleStyleClass(\n\t\t\t\"sapCuxPanelHeader\",\n\t\t\thasContainerTitle &&\n\t\t\t\t(isTitleVisible ||\n\t\t\t\t\tthis._filterVisibleHeaderElements(panel.getMenuItems()).length > 0 ||\n\t\t\t\t\tthis._filterVisibleHeaderElements(panel.getActionButtons()).length > 0)\n\t\t);\n\n\t\treturn header;\n\t}\n\n\t/**\n\t * Filters the provided array of header elements to include only those that are visible.\n\t *\n\t * @private\n\t * @template T - The type of elements in the array, which can be either MenuItem or Button.\n\t * @param {T[]} [elements=[]] - The array of elements to filter. Defaults to an empty array if not provided.\n\t *\n\t * @returns {T[]} An array of elements that are visible.\n\t */\n\tprivate _filterVisibleHeaderElements<T extends MenuItem | Button>(elements: T[] = []): T[] {\n\t\treturn elements.filter((element) => element.getVisible());\n\t}\n\n\t/**\n\t * Setter for container title\n\t *\n\t * @private\n\t * @param {string} title - updated title\n\t * @returns {BaseContainer} BaseContainer instance for chaining\n\t */\n\tpublic _setTitle(title: string): BaseContainer {\n\t\t//suppress invalidate to prevent container re-rendering. re-render only the concerned element\n\t\tthis.setProperty(\"title\", title, true);\n\t\t(this._controlMap.get(`${this.getId()}-header-title`) as Title).setText(title);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Adds menu items to a control and sets up a menu button to display them.\n\t * If the menu for the control doesn't exist, it creates a new one.\n\t *\n\t * @private\n\t * @param {BaseContainer | BasePanel} control - The control to which the menu items will be added.\n\t * @param {MenuItem[]} menuItems - An array of menu items to be added to the menu.\n\t */\n\tprivate _addMenuItems(control: BaseContainer | BasePanel, menuItems: MenuItem[]): void {\n\t\tif (!this._controlMap.get(`${control.getId()}-menu`)) {\n\t\t\t//create menu list\n\t\t\tconst list = new List(`${control.getId()}-list`, {\n\t\t\t\titemPress: (event) => (event.getSource<List>().getParent() as Popover).close()\n\t\t\t});\n\t\t\tthis._controlMap.set(`${control.getId()}-menu`, list);\n\t\t\tconst invisiblePopoverText = getInvisibleText(\n\t\t\t\trecycleId(`${control.getId()}-popoverTitle`),\n\t\t\t\tthis._i18nBundle.getText(\"actions\")\n\t\t\t);\n\t\t\t//create menu popover\n\t\t\tconst menuPopover = new Popover(recycleId(`${control.getId()}-popover`), {\n\t\t\t\tplacement: PlacementType.VerticalPreferredBottom,\n\t\t\t\tshowHeader: false,\n\t\t\t\tariaLabelledBy: [invisiblePopoverText ? invisiblePopoverText?.getId() : \"\"],\n\t\t\t\tcontent: [list, invisiblePopoverText]\n\t\t\t});\n\n\t\t\tconst controlId = control.getId();\n\t\t\tconst containerTitleId = `${controlId}-header`;\n\n\t\t\t//create menu button\n\t\t\tconst menuButton = new Button(`${control.getId()}-menu-btn`, {\n\t\t\t\ticon: \"sap-icon://slim-arrow-down\",\n\t\t\t\ttype: ButtonType.Transparent,\n\t\t\t\ttooltip: this._i18nBundle.getText(\"more\"),\n\t\t\t\tariaLabelledBy: [containerTitleId],\n\t\t\t\tpress: (event) => menuPopover.openBy(event.getSource<Button>())\n\t\t\t});\n\t\t\tthis._controlMap.set(`${control.getId()}-menu-btn`, menuButton);\n\t\t}\n\n\t\t//add menu button to header\n\t\t(this._controlMap.get(control.getId() + \"-header-contentLeft\") as HBox)?.addItem(\n\t\t\tthis._controlMap.get(`${control.getId()}-menu-btn`) as Button\n\t\t);\n\n\t\t//Clear existing menu items and add new ones\n\t\t(this._controlMap.get(`${control.getId()}-menu`) as List).removeAllItems();\n\t\tmenuItems.forEach((item) => (this._controlMap.get(`${control.getId()}-menu`) as List).addItem(this._getMenuListItem(item)));\n\t}\n\n\t/**\n\t * Creates and returns a button for the corresponding header ActionButton\n\t *\n\t * @private\n\t * @param {Button} headerButton - ActionButton element\n\t * @returns {Button} Button instance created for the header element\n\t */\n\tprivate _getHeaderButton(headerButton: Button): Button {\n\t\tconst id = `${headerButton.getId()}-btn`;\n\t\tif (!this._controlMap.get(id)) {\n\t\t\tthis._controlMap.set(\n\t\t\t\tid,\n\t\t\t\tnew Button(id, {\n\t\t\t\t\ttype: ButtonType.Transparent,\n\t\t\t\t\tpress: () => headerButton.firePress()\n\t\t\t\t})\n\t\t\t);\n\t\t\taddFESRSemanticStepName(this._controlMap.get(id) as Button, FESR_EVENTS.PRESS, getFESRId(headerButton));\n\t\t}\n\n\t\t//Update button details\n\t\tconst button = this._controlMap.get(id) as Button;\n\t\tbutton.setText(headerButton.getText());\n\t\tbutton.setTooltip(headerButton.getTooltip() as string);\n\t\tbutton.setIcon(headerButton.getIcon());\n\t\tbutton.setVisible(headerButton.getVisible());\n\t\tbutton.setEnabled(headerButton.getEnabled());\n\n\t\treturn button;\n\t}\n\n\t/**\n\t * Retrieves the layout associated with the container, if available.\n\t *\n\t * @private\n\t * @returns {BaseLayout} The layout associated with the BaseContainer.\n\t */\n\tpublic _getLayout(): BaseLayout {\n\t\treturn UI5Element.getElementById(this.getAssociation(\"layout\", null) as string) as BaseLayout;\n\t}\n\n\t/**\n\t * Retrieves or creates a menu list item for a given menu item.\n\t *\n\t * @private\n\t * @param {MenuItem} menuItem - The menu item for which to retrieve or create a list item.\n\t * @returns {StandardListItem} The menu list item associated with the provided menu item.\n\t */\n\tprivate _getMenuListItem(menuItem: MenuItem): StandardListItem {\n\t\tif (!this._controlMap.get(`${menuItem.getId()}-listItem`)) {\n\t\t\tthis._controlMap.set(\n\t\t\t\t`${menuItem.getId()}-listItem`,\n\t\t\t\tnew StandardListItem(`${menuItem.getId()}-listItem`, {\n\t\t\t\t\ttype: \"Active\",\n\t\t\t\t\ticon: menuItem.getIcon(),\n\t\t\t\t\ttitle: menuItem.getTitle(),\n\t\t\t\t\tpress: (event) => menuItem.firePress({ button: event.getSource<Button>() })\n\t\t\t\t})\n\t\t\t);\n\t\t\taddFESRSemanticStepName(\n\t\t\t\tthis._controlMap.get(`${menuItem.getId()}-listItem`) as StandardListItem,\n\t\t\t\tFESR_EVENTS.PRESS,\n\t\t\t\tgetFESRId(menuItem)\n\t\t\t);\n\t\t}\n\t\t//Update list item details\n\t\tconst menuListItem = this._controlMap.get(`${menuItem.getId()}-listItem`) as StandardListItem;\n\t\tmenuListItem.setIcon(menuItem.getIcon());\n\t\tmenuListItem.setTitle(menuItem.getTitle());\n\t\tmenuListItem.setVisible(menuItem.getVisible());\n\t\treturn menuListItem;\n\t}\n\n\t/**\n\t * Toggles the visibility of menu Item.\n\t *\n\t * @private\n\t * @param {boolean} show - Indicates whether to show or hide the menu item.\n\t * @returns {void}\n\t */\n\tpublic toggleMenuListItem(menuItem: MenuItem, show: boolean): void {\n\t\tif (menuItem) {\n\t\t\tconst menuListItem = this._getMenuListItem(menuItem);\n\t\t\tmenuListItem?.setVisible(show);\n\t\t\tmenuItem.setProperty(\"visible\", show, true);\n\t\t}\n\t}\n\n\t/**\n\t * Toggles the visibility of action button.\n\t *\n\t * @private\n\t * @param {boolean} show - Indicates whether to show or hide the action button.\n\t * @returns {void}\n\t */\n\tpublic toggleActionButton(actionButton: Button, show: boolean): void {\n\t\tif (actionButton) {\n\t\t\tconst actionButtonControl = this._getHeaderButton(actionButton);\n\t\t\tactionButtonControl?.setVisible(show);\n\t\t\tactionButton.setProperty(\"visible\", show, true);\n\t\t}\n\t}\n\n\tpublic removeContent(panel: BasePanel) {\n\t\tif (this.getProperty(\"selectedKey\") && this.getProperty(\"selectedKey\") === panel?.getProperty?.(\"key\")) {\n\t\t\tthis.setProperty(\"selectedKey\", undefined, true);\n\t\t}\n\t\tthis.removeAggregation(\"content\", panel);\n\t}\n\n\t/**\n\t * Gets current value of property \"width\".\n\t *\n\t * Default value is: \"100%\"\n\t * @returns {CSSSize} Value of property \"width\"\n\t */\n\tpublic getWidth(): CSSSize {\n\t\treturn this.getProperty(\"width\") as CSSSize;\n\t}\n\n\t/**\n\t * Toggles the visibility of action buttons within the container and/or its inner panels.\n\t *\n\t * @private\n\t * @param {boolean} show - Indicates whether to show or hide the action buttons.\n\t * @returns {void}\n\t */\n\tpublic toggleActionButtons(show: boolean): void {\n\t\tconst isSideBySideLayout = this.getProperty(\"orientation\") === OrientationType.SideBySide;\n\t\tlet visibilityChanged = false;\n\t\tconst toggleActionButtons = (control: BaseContainer | BasePanel) => {\n\t\t\tcontrol.getActionButtons()?.forEach((actionButton) => {\n\t\t\t\tconst currentVisibility = actionButton.getVisible();\n\t\t\t\tif (currentVisibility !== show && !this._exemptedActions.includes(actionButton.getId())) {\n\t\t\t\t\tactionButton.setProperty(\"visible\", show, true);\n\t\t\t\t\tvisibilityChanged = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (!isSideBySideLayout && visibilityChanged) {\n\t\t\t\tthis._updateContainerHeader(control);\n\t\t\t}\n\t\t};\n\n\t\t// Toggle action buttons for container\n\t\ttoggleActionButtons(this);\n\n\t\t// Toggle action buttons for inner panels\n\t\tconst panels = this.getContent() || [];\n\t\tpanels.forEach(toggleActionButtons);\n\n\t\t// Update Header Container if required\n\t\tif (isSideBySideLayout && visibilityChanged) {\n\t\t\tthis._updateContainerHeader(this);\n\t\t}\n\t}\n\n\t/**\n\t * Toggles the visibility of the full screen button for the specified element.\n\t *\n\t * @private\n\t * @param {BaseContainer | BasePanel} element - The element for which to toggle the full screen button.\n\t * @param {boolean} show - Indicates whether to show or hide the full screen button.\n\t */\n\tpublic toggleFullScreenElements(element: BaseContainer | BasePanel, show: boolean): void {\n\t\tconst fullScreenButton = UI5Element.getElementById(element.getAssociation(\"fullScreenButton\", null) as string) as Button;\n\t\tconst fullScreenMenuButton = UI5Element.getElementById(element.getAssociation(\"fullScreenMenuItem\", null) as string) as MenuItem;\n\t\tconst isSideBySideLayout = this.getProperty(\"orientation\") === OrientationType.SideBySide;\n\t\tconst isPhone = this.getDeviceType() === DeviceType.Mobile;\n\t\tconst parent = element.getParent() as BaseContainer;\n\t\tlet elementVisibilityChanged = false;\n\t\tshow = !isPhone ? show : false;\n\t\t[fullScreenButton, fullScreenMenuButton].forEach((fullScreenElement: Button | MenuItem) => {\n\t\t\tif (fullScreenElement && show !== fullScreenElement.getVisible()) {\n\t\t\t\telementVisibilityChanged = true;\n\t\t\t\tfullScreenElement.setProperty(\"visible\", show, true);\n\t\t\t}\n\t\t});\n\t\tconst elementKey = element instanceof BasePanel && element.getKey();\n\t\tif (elementVisibilityChanged && (!isSideBySideLayout || (isSideBySideLayout && this.getProperty(\"selectedKey\") === elementKey))) {\n\t\t\tthis._updateContainerHeader(\n\t\t\t\tparent.getContent().length === 1 && !isSideBySideLayout ? (element.getParent() as BaseContainer) : element\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * Sets the device type based on the width of the container element.\n\t *\n\t * @private\n\t * @param {ResizeObserverEntry[]} entries - The entries returned by the ResizeObserver.\n\t * @returns {void}\n\t */\n\tprivate _setDeviceType(entries: ResizeObserverEntry[]): void {\n\t\tconst [entry] = entries;\n\t\tconst parentLayout = entry.target.parentNode as Element;\n\t\tconst width = parentLayout.clientWidth;\n\t\tconst deviceType = calculateDeviceType(width);\n\n\t\t//when width is zero, dom is not rendered hence setting device type can cause wrong calculation\n\t\tif (this._deviceType !== deviceType && width > 0) {\n\t\t\tthis._deviceType = deviceType;\n\t\t}\n\t}\n\n\t/**\n\t * Retrieves the device type for the current instance.\n\t *\n\t * @private\n\t * @returns {DeviceType} - The device type. If the device type is not set, it calculates\n\t * and returns the device type based on the current device width.\n\t */\n\tpublic getDeviceType(): DeviceType {\n\t\treturn this._deviceType || calculateDeviceType();\n\t}\n\n\t/**\n\t * Records the performance metrics for the container.\n\t * This is applicable only if the container is part of a layout.\n\t *\n\t * @private\n\t */\n\tprivate _markPerformanceMetrics() {\n\t\tconst elementName = this.getMetadata().getName() as keyof typeof UIElements;\n\t\trecordElementLoadStart(elementName);\n\n\t\tthis.getContent()?.forEach((panel) => {\n\t\t\tpanel.attachEventOnce(\"loaded\", () => {\n\t\t\t\trecordElementLoadEnd(elementName);\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Exit lifecycle method, to clean up resources.\n\t *\n\t * @private\n\t * @override\n\t */\n\texit(): void | undefined {\n\t\tthis._controlMap.forEach((control) => {\n\t\t\tcontrol.destroy();\n\t\t});\n\t\tthis._detachResizeHandler();\n\t}\n\n\t/**\n\t * Default implementation: returns undefined.\n\t */\n\tprotected getGenericPlaceholderContent(): string | undefined {\n\t\treturn undefined;\n\t}\n}\n"],"mappings":"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","ignoreList":[]}