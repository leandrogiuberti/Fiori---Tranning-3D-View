{"version":3,"file":"SpacePanel.js","names":["sap","ui","define","GridContainer","GridContainerSettings","Button","Dialog","IllustratedMessageSize","IllustratedMessageType","Input","Title","Toolbar","ToolbarSpacer","Icon","Parameters","Config","Container","__BaseAppPersPanel","__Group","___utils_Accessibility","___utils_CommonUtils","___utils_Constants","_interopRequireDefault","obj","__esModule","default","_iteratorSymbol","Symbol","iterator","_settle","pact","state","value","s","_Pact","v","o","bind","then","observer","prototype","onFulfilled","onRejected","result","this","callback","e","_this","_isSettledPact","thenable","_forTo","array","body","check","i","reject","_cycle","length","BaseAppPersPanel","_forOf","target","step","next","done","return","_fixup","TypeError","values","push","Group","getInvisibleText","filterVisualizations","getPageManagerInstance","MYHOME_PAGE_ID","_showAddApps","last","SpacePanel","extend","metadata","library","defaultAggregation","properties","spaceId","type","group","defaultValue","title","aggregations","apps","singularName","multiple","visibility","groups","constructor","_constructor","id","settings","BaseAppPersPanel.prototype.constructor.call","init","_init","BaseAppPersPanel.prototype.init.call","setProperty","pageManager","attachPersistDialog","_selectedGroupId","_showGroupDetailDialog","_selectedPageId","loadApps","_loadApps","_temp4","_this$pageManager$fet","_temp3","allVisualizations","destroyAggregation","groupVisualizations","filter","visualization","isSection","_generateGroups","_setGroups","appVisualizations","generateApps","setApps","_setGroupDetailDialogApps","allSpaces","space","find","children","_temp2","_temp","child","Promise","resolve","appManagerInstance","fetchFavVizs","visualizations","getProperty","_this$allSpaces","fetchAllAvailableSpaces","map","groupVisualization","index","bgColor","BGColor","key","getId","status","icon","number","badge","groupId","pageId","press","_handleGroupPress","menuItems","forEach","oMenuItem","addAggregation","navigateToAppFinder","_navigateToAppFinder","pageID","getServiceAsync","navigationService","navigationObject","sectionID","navigate","shellHash","JSON","stringify","editMode","_this2","_getGroup","dialog","_generateGroupDetailDialog","groupIconControl","_controlMap","get","setColor","name","getBgColor","open","_setGroupNameControl","getTitle","_this3","_temp5","getSectionVisualizations","_this3$appManagerInst","appsWrapper","_setAggregation","destroyItems","getApps","app","getParent","_getAppTile","_applyGroupedAppsPersonalization","_dispatchAppsLoadedEvent","tiles","getItems","_applyTilesPersonalization","fireEvent","set","src","size","addStyleClass","visible","oInvisibleText","_i18nBundle","getText","oGroupNameInput","width","ariaLabelledBy","layout","columnSize","gap","text","_closeGroupDetailDialog","content","contentWidth","endButton","escapeHandler","customHeader","groupDetailDialog","destroyApps","undefined","close","groupTitle","groupTitleControl","groupInputControl","setValue","setText","setVisible","setInitialFocus","event","getParameter","generateIllustratedMessage","_generateIllustratedMessage","illustratedMessage","BaseAppPersPanel.prototype.generateIllustratedMessage.call","setDescription","setIllustrationSize","Small","setIllustrationType","AddingColumns","addAdditionalContent","tooltip"],"sources":["SpacePanel.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport GridContainer from \"sap/f/GridContainer\";\nimport GridContainerSettings from \"sap/f/GridContainerSettings\";\nimport Button from \"sap/m/Button\";\nimport Dialog from \"sap/m/Dialog\";\nimport GenericTile from \"sap/m/GenericTile\";\nimport HBox from \"sap/m/HBox\";\nimport IllustratedMessageSize from \"sap/m/IllustratedMessageSize\";\nimport IllustratedMessageType from \"sap/m/IllustratedMessageType\";\nimport Input from \"sap/m/Input\";\nimport Title from \"sap/m/Title\";\nimport Toolbar from \"sap/m/Toolbar\";\nimport ToolbarSpacer from \"sap/m/ToolbarSpacer\";\nimport { MetadataOptions } from \"sap/ui/base/ManagedObject\";\nimport Icon from \"sap/ui/core/Icon\";\nimport InvisibleText from \"sap/ui/core/InvisibleText\";\nimport Parameters from \"sap/ui/core/theming/Parameters\";\nimport Config from \"sap/ushell/Config\";\nimport Container from \"sap/ushell/Container\";\nimport Navigation from \"sap/ushell/services/Navigation\";\nimport App from \"./App\";\nimport AppsContainer from \"./AppsContainer\";\nimport BaseAppPersPanel from \"./BaseAppPersPanel\";\nimport Group, { Group$PressEvent } from \"./Group\";\nimport { ISectionAndVisualization } from \"./interface/AppsInterface\";\nimport { ISpace } from \"./interface/PageSpaceInterface\";\nimport type { $SpacePanelSettings } from \"./SpacePanel\";\nimport { getInvisibleText } from \"./utils/Accessibility\";\nimport { filterVisualizations, getPageManagerInstance } from \"./utils/CommonUtils\";\nimport { MYHOME_PAGE_ID } from \"./utils/Constants\";\nimport PageManager from \"./utils/PageManager\";\nconst _showAddApps = () => {\n\treturn (Config.last(\"/core/shell/enablePersonalization\") || Config.last(\"/core/catalog/enabled\")) as boolean;\n};\n\n/**\n *\n * Provides the SpacePanel Class.\n *\n * @extends sap.cux.home.BaseAppPersPanel\n *\n * @author SAP SE\n * @version 0.0.1\n *\n * @private\n * @ui5-experimental-since 1.138.0\n * @ui5-restricted ux.eng.s4producthomes1\n *\n * @alias sap.cux.home.SpacePanel\n */\nexport default class SpacePanel extends BaseAppPersPanel {\n\tconstructor(idOrSettings?: string | $SpacePanelSettings);\n\tconstructor(id?: string, settings?: $SpacePanelSettings);\n\t/**\n\t * Constructor for a new favorite app panel.\n\t *\n\t * @param {string} [id] ID for the new control, generated automatically if an ID is not provided\n\t * @param {object} [settings] Initial settings for the new control\n\t */\n\tpublic constructor(id?: string, settings?: $SpacePanelSettings) {\n\t\tsuper(id, settings);\n\t}\n\n\tprivate _selectedGroupId: string | undefined;\n\tprivate _selectedPageId: string | undefined;\n\tprivate allSpaces!: ISpace[];\n\tprivate pageManager!: PageManager;\n\n\tstatic readonly metadata: MetadataOptions = {\n\t\tlibrary: \"sap.cux.home\",\n\t\tdefaultAggregation: \"apps\",\n\t\tproperties: {\n\t\t\t/**\n\t\t\t * Specifies the space whose apps should be loaded.\n\t\t\t */\n\t\t\tspaceId: { type: \"string\", group: \"Data\", defaultValue: \"\" },\n\t\t\t/**\n\t\t\t * Title for the tiles panel\n\t\t\t */\n\t\t\ttitle: { type: \"string\", group: \"Misc\", defaultValue: \"\" }\n\t\t},\n\t\taggregations: {\n\t\t\t/**\n\t\t\t * Apps aggregation for Favorite apps\n\t\t\t */\n\t\t\tapps: { type: \"sap.cux.home.App\", singularName: \"app\", multiple: true, visibility: \"hidden\" },\n\t\t\t/**\n\t\t\t * Group aggregation for Favorite apps\n\t\t\t */\n\t\t\tgroups: { type: \"sap.cux.home.Group\", singularName: \"group\", multiple: true, visibility: \"hidden\" }\n\t\t}\n\t};\n\n\tpublic init() {\n\t\tsuper.init();\n\n\t\tthis.setProperty(\"key\", \"spacePanel\");\n\t\tthis.pageManager = getPageManagerInstance(this);\n\n\t\tthis.attachPersistDialog(() => {\n\t\t\t// if while navigating to different page, a group detail dialog was open, then while navigating back group detail dialog should be in open state.\n\t\t\tif (this._selectedGroupId) {\n\t\t\t\tvoid this._showGroupDetailDialog(this._selectedGroupId, false, this._selectedPageId);\n\t\t\t}\n\t\t});\n\t}\n\n\t// /**\n\t//  * Sets the space ID for the panel and updates the title accordingly.\n\t//  * @param {string} spaceId - The ID of the space to set.\n\t//  * @returns {Promise<void>} A promise that resolves when the space ID is set.\n\t//  */\n\t// public async setSpaceId(spaceId: string): Promise<void> {\n\t// \tthis.setProperty(\"spaceId\", spaceId, true);\n\n\t// \t//update the panel title\n\t// \tthis.allSpaces = this.allSpaces || await this.pageManager.fetchAllAvailableSpaces();\n\t// \tconst space = this.allSpaces.find((space) => space.id === spaceId);\n\t// \tconst title = space ? space.label : this._i18nBundle.getText(\"invalidSpaceTitle\");\n\t// \tthis.setProperty(\"title\", title);\n\t// }\n\n\t/**\n\t * Fetch apps and set apps aggregation\n\t * @private\n\t */\n\tpublic async loadApps() {\n\t\tconst spaceId = this.getProperty(\"spaceId\") as string;\n\t\tthis.allSpaces = this.allSpaces || (await this.pageManager.fetchAllAvailableSpaces());\n\t\tconst space = this.allSpaces.find((space) => space.id === spaceId);\n\n\t\tif (!space || space.children.length === 0) this.setApps([]);\n\t\tlet allVisualizations: ISectionAndVisualization[] = [];\n\n\t\tif (space && space.children.length > 0) {\n\t\t\tfor (const child of space.children) {\n\t\t\t\tconst visualizations = await this.appManagerInstance.fetchFavVizs(true, false, child.id);\n\t\t\t\tallVisualizations.push(...visualizations);\n\t\t\t}\n\t\t}\n\n\t\t//Filter out static tiles\n\t\tallVisualizations = filterVisualizations(allVisualizations);\n\n\t\t//Create groups\n\t\tthis.destroyAggregation(\"groups\", true);\n\t\tconst groupVisualizations = allVisualizations.filter((visualization) => visualization.isSection);\n\t\tconst groups = this._generateGroups(groupVisualizations);\n\t\tthis._setGroups(groups);\n\n\t\t//Create apps\n\t\tthis.destroyAggregation(\"apps\", true);\n\t\tconst appVisualizations = allVisualizations.filter((visualization) => !visualization.isSection);\n\t\tconst apps = this.generateApps(appVisualizations);\n\t\tthis.setApps(apps);\n\t\tif (this._selectedGroupId) {\n\t\t\tvoid this._setGroupDetailDialogApps(this._selectedGroupId, this._selectedPageId);\n\t\t}\n\t}\n\n\t/**\n\t * Creates and returns group instances for given group objects\n\t * @private\n\t * @param {object[]} aGroupObject - Array of group object.\n\t * @returns {sap.cux.home.Group[]} - Array of group instances\n\t */\n\tprivate _generateGroups(groupVisualizations: ISectionAndVisualization[]): Group[] {\n\t\treturn groupVisualizations.map((groupVisualization, index) => {\n\t\t\tconst bgColor =\n\t\t\t\ttypeof groupVisualization.BGColor === \"object\" && \"key\" in groupVisualization.BGColor\n\t\t\t\t\t? groupVisualization.BGColor.key\n\t\t\t\t\t: groupVisualization.BGColor;\n\t\t\tconst group = new Group(`${this.getId()}-group-${index}`, {\n\t\t\t\ttitle: groupVisualization.title,\n\t\t\t\tbgColor: bgColor,\n\t\t\t\tstatus: groupVisualization.status,\n\t\t\t\ticon: groupVisualization.icon,\n\t\t\t\tnumber: groupVisualization.badge,\n\t\t\t\tgroupId: groupVisualization.id,\n\t\t\t\tpageId: groupVisualization.pageId,\n\t\t\t\tpress: this._handleGroupPress.bind(this)\n\t\t\t});\n\t\t\tgroupVisualization.menuItems?.forEach((oMenuItem) => {\n\t\t\t\tgroup.addAggregation(\"menuItems\", oMenuItem);\n\t\t\t});\n\t\t\treturn group;\n\t\t});\n\t}\n\n\t/**\n\t * Add multiple groups in the groups aggregation.\n\t * @private\n\t * @param {sap.cux.home.Group[]} groups - Array of groups.\n\t */\n\tprivate _setGroups(groups: Group[]) {\n\t\tgroups.forEach((group) => {\n\t\t\tthis.addAggregation(\"groups\", group, true);\n\t\t});\n\t}\n\n\t/**\n\t * Navigates to the App Finder with optional group Id.\n\t * @async\n\t * @private\n\t * @param {string} [groupId] - Optional group Id\n\t */\n\tprivate async navigateToAppFinder(groupId?: string, pageID: string = MYHOME_PAGE_ID) {\n\t\tconst navigationService = await Container.getServiceAsync<Navigation>(\"Navigation\");\n\t\tconst navigationObject: { pageID: string; sectionID?: string } = {\n\t\t\tpageID\n\t\t};\n\t\tif (groupId) {\n\t\t\tnavigationObject.sectionID = groupId;\n\t\t}\n\t\tawait navigationService.navigate({\n\t\t\ttarget: {\n\t\t\t\tshellHash: `Shell-appfinder?&/catalog/${JSON.stringify(navigationObject)}`\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Shows the detail dialog for a group.\n\t * @async\n\t * @param {string} groupId - The Id of the group.\n\t * @param {boolean} [editMode=false] - Whether to open the dialog in edit mode.\n\t * @private\n\t */\n\tprivate async _showGroupDetailDialog(groupId: string, editMode = false, pageId: string = MYHOME_PAGE_ID) {\n\t\tconst group = this._getGroup(groupId);\n\t\tif (!group) {\n\t\t\treturn;\n\t\t}\n\t\tthis._selectedGroupId = groupId;\n\t\tthis._selectedPageId = pageId;\n\t\tconst dialog = this._generateGroupDetailDialog();\n\t\t//set group icon\n\t\tconst groupIconControl = this._controlMap.get(`${this.getId()}-detailDialog-toolbar-color`) as Icon;\n\t\tgroupIconControl.setColor(Parameters.get({ name: group.getBgColor() }) as string);\n\t\t//set group apps\n\t\tawait this._setGroupDetailDialogApps(groupId, pageId);\n\t\tdialog.open();\n\t\t//set group title\n\t\tthis._setGroupNameControl(group.getTitle(), editMode);\n\t}\n\n\t/**\n\t * Sets the apps for the detail dialog for a group.\n\t * @async\n\t * @param {string} groupId - The Id of the group.\n\t * @returns {Promise<void>} - A Promise that resolves once the apps for the group detail dialog are set.\n\t * @private\n\t */\n\tprivate async _setGroupDetailDialogApps(groupId: string, pageId: string = MYHOME_PAGE_ID) {\n\t\tconst group = this._getGroup(groupId);\n\t\tif (group) {\n\t\t\tlet appVisualizations = filterVisualizations(await this.appManagerInstance.getSectionVisualizations(groupId, false, pageId));\n\t\t\tgroup.destroyAggregation(\"apps\", true);\n\t\t\tconst apps = this.generateApps(appVisualizations);\n\t\t\tconst appsWrapper = this._controlMap.get(`${this.getId()}-detailDialog-apps`) as GridContainer;\n\t\t\tthis._setAggregation(group, apps, \"apps\");\n\t\t\tappsWrapper.destroyItems();\n\t\t\tthis._setAggregation(\n\t\t\t\tappsWrapper,\n\t\t\t\tgroup.getApps().map((app) => (this.getParent() as AppsContainer)._getAppTile(app))\n\t\t\t);\n\t\t\tthis._applyGroupedAppsPersonalization(groupId);\n\t\t\tthis._dispatchAppsLoadedEvent(apps);\n\t\t}\n\t}\n\n\t/**\n\t * Applies personalization to the grouped apps within the specified group.\n\t * @param {string} groupId - The ID of the group to which the apps belong.\n\t * @private\n\t */\n\tprivate _applyGroupedAppsPersonalization(groupId: string) {\n\t\tconst appsWrapper = this._controlMap.get(`${this.getId()}-detailDialog-apps`) as GridContainer;\n\t\tconst tiles = (appsWrapper?.getItems() || []) as GenericTile[];\n\t\tvoid this._applyTilesPersonalization(tiles, groupId);\n\t}\n\n\t/**\n\t * Applies Deprecated Info for apps inside the group.\n\t * @param {App[]} apps - The ID of the group to which the apps belong.\n\t * @private\n\t */\n\tprivate _dispatchAppsLoadedEvent(apps: App[]) {\n\t\tconst appsWrapper = this._controlMap.get(`${this.getId()}-detailDialog-apps`) as GridContainer;\n\t\tconst tiles = (appsWrapper?.getItems() || []) as GenericTile[];\n\t\t(this.getParent() as AppsContainer).fireEvent(\"appsLoaded\", { apps, tiles });\n\t}\n\n\t/**\n\t * Generates the group detail dialog.\n\t * @private\n\t * @returns {sap.m.Dialog} The generated detail dialog for the group.\n\t */\n\tprivate _generateGroupDetailDialog() {\n\t\tconst id = `${this.getId()}-detailDialog`;\n\t\tif (!this._controlMap.get(id)) {\n\t\t\t//group color icon\n\t\t\tthis._controlMap.set(\n\t\t\t\t`${id}-toolbar-color`,\n\t\t\t\tnew Icon({\n\t\t\t\t\tid: `${id}-toolbar-color`,\n\t\t\t\t\tsrc: \"sap-icon://color-fill\",\n\t\t\t\t\tsize: \"1.25rem\"\n\t\t\t\t}).addStyleClass(\"sapUiTinyMarginEnd\")\n\t\t\t);\n\n\t\t\tthis._controlMap.set(\n\t\t\t\t`${id}-toolbar-title`,\n\t\t\t\tnew Title({\n\t\t\t\t\tid: `${id}-toolbar-title`,\n\t\t\t\t\tvisible: true\n\t\t\t\t})\n\t\t\t);\n\n\t\t\tconst oInvisibleText = getInvisibleText(`${id}-toolbar-renameTitle`, this._i18nBundle.getText(\"renameGroup\"));\n\t\t\tthis._controlMap.set(`${id}-toolbar-renameTitle`, oInvisibleText);\n\n\t\t\tconst oGroupNameInput = new Input({\n\t\t\t\tid: `${id}-toolbar-title-edit`,\n\t\t\t\twidth: \"13.75rem\",\n\t\t\t\tvisible: false,\n\t\t\t\tariaLabelledBy: [`${id}-toolbar-renameTitle`]\n\t\t\t});\n\n\t\t\tthis._controlMap.set(`${id}-toolbar-title-edit`, oGroupNameInput);\n\n\t\t\t//apps wrapper\n\t\t\tconst appsWrapper = new GridContainer({\n\t\t\t\tid: `${id}-apps`,\n\t\t\t\tlayout: new GridContainerSettings(`${id}-appsLayout`, {\n\t\t\t\t\tcolumnSize: \"19rem\",\n\t\t\t\t\tgap: \"0.5rem\"\n\t\t\t\t})\n\t\t\t}).addStyleClass(\"sapCuxAppsContainerBorder sapCuxAppsDetailContainerPadding\");\n\n\t\t\tthis._controlMap.set(`${id}-apps`, appsWrapper);\n\t\t\t//add apps button\n\t\t\tthis._controlMap.set(\n\t\t\t\t`${id}-addAppsBtn`,\n\t\t\t\tnew Button(`${id}-addAppsBtn`, {\n\t\t\t\t\ttext: this._i18nBundle.getText(\"addApps\"),\n\t\t\t\t\ticon: \"sap-icon://action\",\n\t\t\t\t\tvisible: _showAddApps(),\n\t\t\t\t\tpress: () => {\n\t\t\t\t\t\tconst groupId = this._selectedGroupId;\n\t\t\t\t\t\tthis._closeGroupDetailDialog();\n\t\t\t\t\t\tthis._selectedGroupId = groupId;\n\t\t\t\t\t\tvoid this.navigateToAppFinder(groupId, this._selectedPageId);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t);\n\n\t\t\tthis._controlMap.set(\n\t\t\t\tid,\n\t\t\t\tnew Dialog(id, {\n\t\t\t\t\tcontent: this._controlMap.get(`${id}-apps`) as HBox,\n\t\t\t\t\tcontentWidth: \"60.75rem\",\n\t\t\t\t\tendButton: new Button({\n\t\t\t\t\t\tid: `${id}-groupDetailCloseBtn`,\n\t\t\t\t\t\ttext: this._i18nBundle.getText(\"XBUT_CLOSE\"),\n\t\t\t\t\t\tpress: this._closeGroupDetailDialog.bind(this)\n\t\t\t\t\t}),\n\t\t\t\t\tescapeHandler: this._closeGroupDetailDialog.bind(this),\n\t\t\t\t\tcustomHeader: new Toolbar(`${this.getId()}-toolbar`, {\n\t\t\t\t\t\tcontent: [\n\t\t\t\t\t\t\tthis._controlMap.get(`${id}-toolbar-color`) as Icon,\n\t\t\t\t\t\t\tthis._controlMap.get(`${id}-toolbar-title`) as Title,\n\t\t\t\t\t\t\tthis._controlMap.get(`${id}-toolbar-title-edit`) as Input,\n\t\t\t\t\t\t\tthis._controlMap.get(`${id}-toolbar-renameTitle`) as InvisibleText,\n\t\t\t\t\t\t\tnew ToolbarSpacer({ id: `${this.getId()}-toolbarSpacer` }),\n\t\t\t\t\t\t\tthis._controlMap.get(`${id}-addAppsBtn`) as Button\n\t\t\t\t\t\t]\n\t\t\t\t\t})\n\t\t\t\t}).addStyleClass(\"sapCuxGroupDetailDialog\")\n\t\t\t);\n\t\t}\n\t\treturn this._controlMap.get(id) as Dialog;\n\t}\n\n\t/**\n\t * Closes the group detail dialog.\n\t * @private\n\t */\n\tprivate _closeGroupDetailDialog() {\n\t\tconst groupDetailDialog = this._controlMap.get(`${this.getId()}-detailDialog`) as Dialog;\n\t\tconst group = this._getGroup(this._selectedGroupId as string);\n\t\tgroup?.destroyApps();\n\t\tthis._selectedGroupId = undefined;\n\t\tgroupDetailDialog?.close();\n\t}\n\n\t/**\n\t * Sets the group name control in the detail dialog.\n\t * Shows input control to edit the group name in edit mode, otherwise, shows group name as title control.\n\t * @private\n\t * @param {string} groupTitle - The title of the group.\n\t * @param {boolean} editMode - Whether the dialog is in edit mode.\n\t */\n\tprivate _setGroupNameControl(groupTitle: string, editMode: boolean) {\n\t\tconst groupDetailDialog = this._controlMap.get(`${this.getId()}-detailDialog`) as Dialog;\n\t\tconst groupTitleControl = this._controlMap.get(`${this.getId()}-detailDialog-toolbar-title`) as Title;\n\t\tconst groupInputControl = this._controlMap.get(`${this.getId()}-detailDialog-toolbar-title-edit`) as Input;\n\t\tgroupInputControl.setValue(groupTitle);\n\t\tgroupTitleControl.setText(groupTitle);\n\t\tgroupInputControl?.setVisible(editMode);\n\t\tgroupTitleControl?.setVisible(!editMode);\n\t\tif (editMode) {\n\t\t\t//in edit mode set the focus on input\n\t\t\tgroupDetailDialog.setInitialFocus(groupInputControl);\n\t\t}\n\t}\n\n\t/**\n\t * Handles the press event of a group.\n\t * @param {Group$PressEvent} event - The press event object.\n\t * @private\n\t */\n\tprivate _handleGroupPress(event: Group$PressEvent) {\n\t\tconst groupId = event.getParameter(\"groupId\");\n\t\tconst pageId = event.getParameter(\"pageId\") || MYHOME_PAGE_ID;\n\t\tif (groupId) {\n\t\t\tvoid this._showGroupDetailDialog(groupId, false, pageId);\n\t\t}\n\t}\n\n\t/**\n\t * Generates illustrated message for favorite apps panel.\n\t * @private\n\t * @override\n\t * @returns {sap.m.IllustratedMessage} Illustrated error message.\n\t */\n\tprotected generateIllustratedMessage() {\n\t\tconst illustratedMessage = super.generateIllustratedMessage();\n\t\t//overrride the default title and add additional content\n\t\tillustratedMessage.setDescription(this._i18nBundle.getText(\"noFavAppsDescription\"));\n\t\tillustratedMessage.setIllustrationSize(IllustratedMessageSize.Small);\n\t\tillustratedMessage.setIllustrationType(IllustratedMessageType.AddingColumns);\n\t\tillustratedMessage.addAdditionalContent(\n\t\t\tnew Button(`${this.getId()}-errorMessage-addApps`, {\n\t\t\t\ttext: this._i18nBundle.getText(\"addApps\"),\n\t\t\t\ttooltip: this._i18nBundle.getText(\"addAppsTooltip\"),\n\t\t\t\ticon: \"sap-icon://action\",\n\t\t\t\tvisible: _showAddApps(),\n\t\t\t\tpress: () => {\n\t\t\t\t\tvoid this.navigateToAppFinder();\n\t\t\t\t},\n\t\t\t\ttype: \"Emphasized\"\n\t\t\t})\n\t\t);\n\t\treturn illustratedMessage;\n\t}\n}\n"],"mappings":"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","ignoreList":[]}