{"version":3,"file":"NewsSettingsPanel-dbg.js","names":["sap","ui","define","CheckBox","CustomListItem","HBox","Label","List","Switch","Text","Title","VBox","CustomData","__BaseSettingsPanel","___library","___utils_Accessibility","___utils_Constants","___utils_FESRUtil","__PersonalisationUtils","__UshellPersonalizer","_interopRequireDefault","obj","__esModule","default","BaseSettingsPanel","NewsType","getInvisibleText","SETTINGS_PANELS_KEYS","addFESRSemanticStepName","FESR_EVENTS","PersonalisationUtils","UshellPersonalizer","NewsSettingsPanel","extend","init","_init","BaseSettingsPanel.prototype.init.call","setProperty","NEWS","_i18nBundle","getText","addAggregation","getContent","attachPanelNavigated","loadNewsFeedSettings","aFavNewsFeed","_getContent","oHeader","setHeader","oTitle","setTitleMessage","oContentVBox","getId","alignItems","justifyContent","items","setNewsList","getPersonalization","_getPersonalization","_this","_temp2","oPersonalizer","_temp","Promise","resolve","getInstance","getPersContainerId","_getPanel","getOwnerComponent","then","_UshellPersonalizer$g","e","reject","_setHeader","headerText","text","oHeaderVBox","addStyleClass","_setTitleMessage","title","titleStyle","oTitleHbox","oTitleVBox","_setNewsList","oShowSwitchLabel","oShowSwitch","customTextOn","customTextOff","change","saveNewsFeedSettings","state","ariaLabelledBy","CHANGE","oCustNewsSwitchContainer","width","oShowAllPrep","oInvisibleText","oList","oNewsListVBox","direction","isCSVFileFormat","_isCSVFileFormat","fileName","split","pop","toLowerCase","_saveNewsFeedSettings","_this2","selectedFeeds","deselectedDefaultFeeds","newsType","oNewsPanel","getNewsType","showDefault","Default","customFileName","getProperty","feedKey","getCustomFeedKey","getItems","forEach","item","newsListContent","getAggregation","newsListHBox","checkbox","label","isSelected","getSelected","groupId","getDefaultGroupId","push","personalizer","read","personalizationData","defaultNewsFeed","favNewsFeed","showAllPreparationRequired","getState","write","setState","setCustomNewsFeed","_getDefaultGroupId","contentBox","customData","getCustomData","length","getValue","setItems","_setItems","aItems","destroyAggregation","oItem","i","oNewsListItemHbox","id","select","selected","enabled","disabled","addCustomData","key","value","group_id","customListItem","content","addItem","_loadNewsFeedSettings","_this3","sFeedKey","showDefaultNewsFeed","setVisible","oPersData","aPersNewsFeed","getCustomOrDefaultNewsFeed","aNewsFeed","_handleDefaultNewsFeed","_handleCustomNewsFeed","setText","mandatoryNewsFeed","getMandatoryDefaultNewsFeed","map","oNewsFeed","isDeselected","includes","favFeedTitles","isFavorite","isSupported","_isSupported","_this4","newsPanel","getParent","Custom","isNoUpdatesNewsFeed"],"sources":["NewsSettingsPanel.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport CheckBox from \"sap/m/CheckBox\";\nimport CustomListItem from \"sap/m/CustomListItem\";\nimport HBox from \"sap/m/HBox\";\nimport Label from \"sap/m/Label\";\nimport List from \"sap/m/List\";\nimport ListItemBase from \"sap/m/ListItemBase\";\nimport Switch from \"sap/m/Switch\";\nimport Text from \"sap/m/Text\";\nimport Title from \"sap/m/Title\";\nimport VBox from \"sap/m/VBox\";\nimport Component from \"sap/ui/core/Component\";\nimport Control from \"sap/ui/core/Control\";\nimport CustomData from \"sap/ui/core/CustomData\";\nimport BaseSettingsPanel from \"./BaseSettingsPanel\";\nimport { NewsType } from \"./library\";\nimport NewsAndPagesContainer from \"./NewsAndPagesContainer\";\nimport NewsPanel, { INewsFeed } from \"./NewsPanel\";\nimport { getInvisibleText } from \"./utils/Accessibility\";\nimport { SETTINGS_PANELS_KEYS } from \"./utils/Constants\";\nimport { addFESRSemanticStepName, FESR_EVENTS } from \"./utils/FESRUtil\";\nimport PersonalisationUtils from \"./utils/PersonalisationUtils\";\nimport UshellPersonalizer from \"./utils/UshellPersonalizer\";\n\ninterface IFavNewsFeed {\n\titems: string[];\n\tshowAllPreparationRequired?: boolean;\n}\n\n/**\n *\n * Class for My Home News Settings Panel.\n *\n * @extends BaseSettingsPanel\n *\n * @author SAP SE\n * @version 0.0.1\n * @since 1.121\n * @private\n *\n * @alias sap.cux.home.NewsSettingsPanel\n */\nexport default class NewsSettingsPanel extends BaseSettingsPanel {\n\tprivate oShowSwitch!: Switch;\n\tprivate oCustNewsSwitchContainer!: HBox;\n\tprivate oList!: List;\n\tprivate oPersonalizer!: UshellPersonalizer;\n\tprivate oNewsPanel!: NewsPanel;\n\tprivate aFavNewsFeed!: INewsFeed[] | string[];\n\tprivate deselectedDefaultFeeds!: string[];\n\tprivate headerText!: Text;\n\tprivate title!: Title;\n\n\t/**\n\t * Init lifecycle method\n\t *\n\t * @public\n\t * @override\n\t */\n\tpublic init(): void {\n\t\tsuper.init();\n\n\t\t//setup panel\n\t\tthis.setProperty(\"key\", SETTINGS_PANELS_KEYS.NEWS);\n\t\tthis.setProperty(\"title\", this._i18nBundle.getText(\"news\"));\n\t\tthis.setProperty(\"icon\", \"sap-icon://newspaper\");\n\n\t\t//setup layout content\n\t\tthis.addAggregation(\"content\", this.getContent());\n\n\t\t//fired every time on panel navigation\n\t\tthis.attachPanelNavigated(() => {\n\t\t\tvoid this.loadNewsFeedSettings();\n\t\t});\n\t\tthis.aFavNewsFeed = [];\n\t}\n\n\t/**\n\t * Returns the content for the News Settings Panel.\n\t *\n\t * @private\n\t * @returns {Control} The control containing the News Settings Panel content.\n\t */\n\tprivate getContent(): Control {\n\t\tconst oHeader = this.setHeader();\n\t\tconst oTitle = this.setTitleMessage();\n\t\tconst oContentVBox = new VBox(this.getId() + \"--idNewsPageOuterVBoX\", {\n\t\t\talignItems: \"Start\",\n\t\t\tjustifyContent: \"SpaceBetween\",\n\t\t\titems: [oHeader, oTitle, this.setNewsList()]\n\t\t});\n\t\treturn oContentVBox;\n\t}\n\n\t/**\n\t * Get personalization instance\n\t */\n\tprivate async getPersonalization() {\n\t\tif (!this.oPersonalizer) {\n\t\t\tthis.oPersonalizer = await UshellPersonalizer.getInstance(\n\t\t\t\tPersonalisationUtils.getPersContainerId(this._getPanel()),\n\t\t\t\tPersonalisationUtils.getOwnerComponent(this._getPanel()) as Component\n\t\t\t);\n\t\t}\n\t\treturn this.oPersonalizer;\n\t}\n\n\t/**\n\t * Returns the content for the News Settings Panel Header.\n\t *\n\t * @private\n\t * @returns {sap.ui.core.Control} The control containing the News Settings Panel's Header content.\n\t */\n\tprivate setHeader() {\n\t\tthis.headerText = new Text(this.getId() + \"--idCustNewsFeedSettingsText\", {\n\t\t\ttext: this._i18nBundle.getText(\"newsFeedSettingsText\")\n\t\t});\n\t\tconst oHeaderVBox = new VBox(this.getId() + \"--idCustNewsFeedSettingsTextContainer\", {\n\t\t\talignItems: \"Start\",\n\t\t\tjustifyContent: \"SpaceBetween\",\n\t\t\titems: [this.headerText]\n\t\t}).addStyleClass(\"sapUiSmallMarginTop sapUiSmallMarginBegin\");\n\t\treturn oHeaderVBox;\n\t}\n\n\t/**\n\t * Returns the content for the News Settings Panel Title description.\n\t *\n\t * @private\n\t * @returns {sap.ui.core.Control} The control containing the News Settings Panel's Title description.\n\t */\n\tprivate setTitleMessage() {\n\t\tthis.title = new Title(this.getId() + \"--idCustNewsFeedSettignsTitle\", {\n\t\t\ttext: this._i18nBundle.getText(\"newsFeedSettingsHeading\"),\n\t\t\ttitleStyle: \"H3\"\n\t\t});\n\t\tconst oTitleHbox = new HBox(this.getId() + \"--idCustNewsFeedSettingsTitleContainer\", {\n\t\t\talignItems: \"Center\",\n\t\t\tjustifyContent: \"SpaceBetween\",\n\t\t\titems: [this.title]\n\t\t});\n\t\tconst oTitleVBox = new VBox(this.getId() + \"--idCustNewsFeedSettingsTitleVBox\", {\n\t\t\talignItems: \"Start\",\n\t\t\tjustifyContent: \"SpaceBetween\",\n\t\t\titems: [oTitleHbox]\n\t\t}).addStyleClass(\"sapUiSmallMarginTop sapUiSmallMarginBegin\");\n\t\treturn oTitleVBox;\n\t}\n\n\t/**\n\t * Returns the content for the news List\n\t *\n\t * @private\n\t * @returns {sap.ui.core.Control} The control containing the News Settings Panel's List\n\t */\n\tprivate setNewsList() {\n\t\t//showAllPrepRequired Switch\n\t\tconst oShowSwitchLabel = new Label(this.getId() + \"--idShowAllCustNewsSwitchLabel\", {\n\t\t\ttext: this._i18nBundle.getText(\"showAllPreparationRequiredSwitchLabel\")\n\t\t});\n\t\tthis.oShowSwitch = new Switch(`${this.getId()}-showSwitch`, {\n\t\t\t// 'ariaLabelledBy': \"idShowAllCustNewsSwitchLabel idShowAllCustNewsSwitch\",\n\t\t\tcustomTextOn: \" \",\n\t\t\tcustomTextOff: \" \",\n\t\t\tchange: () => {\n\t\t\t\tvoid this.saveNewsFeedSettings();\n\t\t\t},\n\t\t\t// 'fesr:change': \"showPrepRequire\",\n\t\t\tstate: false,\n\t\t\tariaLabelledBy: [`${this.getId()}--idShowAllCustNewsSwitchLabel`]\n\t\t});\n\t\taddFESRSemanticStepName(this.oShowSwitch, FESR_EVENTS.CHANGE, \"showPrepRequire\");\n\t\tthis.oCustNewsSwitchContainer = new HBox(this.getId() + \"--idShowAllCustNewsSwitchContainer\", {\n\t\t\talignItems: \"Center\",\n\t\t\titems: [oShowSwitchLabel, this.oShowSwitch],\n\t\t\twidth: \"94%\"\n\t\t}).addStyleClass(\"sapUiSmallMarginTop\");\n\n\t\tconst oShowAllPrep = new VBox(this.getId() + \"--idShowAllCustNewsSwitchVBox\", {\n\t\t\titems: [this.oCustNewsSwitchContainer],\n\t\t\twidth: \"94%\"\n\t\t}).addStyleClass(\"sapUiSmallMarginTop\");\n\t\tconst oInvisibleText = getInvisibleText(`${this.getId()}--newsTitleText`, this._i18nBundle.getText(\"newsTitle\"));\n\t\t//List of news items\n\t\tthis.oList = new List(this.getId() + \"--idCustNewsFeedList\", {\n\t\t\tariaLabelledBy: [\n\t\t\t\toInvisibleText.getId(),\n\t\t\t\t`${this.getId()}--idCustNewsFeedSettingsText`,\n\t\t\t\t`${this.getId()}--idCustNewsFeedSettignsTitle`\n\t\t\t]\n\t\t});\n\t\t//Outer VBox\n\t\tconst oNewsListVBox = new VBox(this.getId() + \"--idCustNewsFeedListContainer\", {\n\t\t\tdirection: \"Column\",\n\t\t\titems: [this.oList, oShowAllPrep, oInvisibleText],\n\t\t\twidth: \"96%\"\n\t\t}).addStyleClass(\"sapUiSmallMarginTop sapUiSmallMarginBegin\");\n\t\treturn oNewsListVBox;\n\t}\n\n\t/**\n\t * Checks if the custom file format is CSV based on the custom file name.\n\t *\n\t * @param {string} fileName - The custom file name.\n\t * @returns {boolean} True if the file format is CSV, otherwise false.\n\t */\n\tprivate isCSVFileFormat(fileName: string): boolean {\n\t\treturn fileName.split(\".\").pop()?.toLowerCase() === \"csv\";\n\t}\n\n\t/**\n\t *\n\t * Saves news feed settings and shows news feed based on selection change of list of switch\n\t *\n\t * @private\n\t */\n\tprivate async saveNewsFeedSettings(): Promise<void> {\n\t\tconst selectedFeeds: string[] = [];\n\t\tconst deselectedDefaultFeeds: string[] = [];\n\t\tconst newsType = this.oNewsPanel?.getNewsType();\n\t\tconst showDefault = newsType === NewsType.Default;\n\t\tconst customFileName = this.oNewsPanel.getProperty(\"customFileName\") as string;\n\t\tconst feedKey = this.oNewsPanel.getCustomFeedKey();\n\n\t\tthis.oList.getItems().forEach((item: ListItemBase) => {\n\t\t\tconst newsListContent = item.getAggregation(\"content\") as Control[];\n\t\t\tconst newsListHBox = newsListContent[0] as HBox;\n\t\t\tconst [checkbox, label] = newsListHBox.getItems() as [CheckBox, Text];\n\t\t\tconst isSelected = checkbox.getSelected();\n\n\t\t\tif (showDefault) {\n\t\t\t\tconst groupId = this.getDefaultGroupId(newsListHBox);\n\t\t\t\tif (!isSelected && groupId) {\n\t\t\t\t\tdeselectedDefaultFeeds.push(groupId);\n\t\t\t\t}\n\t\t\t} else if (isSelected) {\n\t\t\t\tselectedFeeds.push(label.getText());\n\t\t\t}\n\t\t});\n\n\t\tconst personalizer = await this.getPersonalization();\n\t\tconst personalizationData = (await personalizer.read()) || {};\n\n\t\tif (showDefault) {\n\t\t\tpersonalizationData.defaultNewsFeed = { items: deselectedDefaultFeeds };\n\t\t} else {\n\t\t\tpersonalizationData.favNewsFeed = {\n\t\t\t\titems: selectedFeeds,\n\t\t\t\tshowAllPreparationRequired: this.isCSVFileFormat(customFileName) ? false : this.oShowSwitch.getState()\n\t\t\t} as IFavNewsFeed;\n\t\t}\n\n\t\tawait personalizer.write(personalizationData);\n\n\t\t// get the latest value of switch and set the state\n\t\tif (!showDefault) {\n\t\t\tthis.oShowSwitch.setState(personalizationData.favNewsFeed?.showAllPreparationRequired);\n\t\t}\n\t\tawait this.oNewsPanel.setCustomNewsFeed(showDefault ? \"\" : feedKey);\n\t}\n\n\t/** Get groupId info  for the default NewsList\n\t * @param {HBox} [contentBox] content Hbox\n\t * @returns {string} groupId\n\t * @private\n\t */\n\tprivate getDefaultGroupId(contentBox: HBox): string {\n\t\tconst customData = contentBox.getCustomData();\n\t\treturn customData?.length ? (customData[0].getValue() as string) : \"\";\n\t}\n\n\t/** Set items for the NewsList\n\t * @param {Array} [aItems] news items to be set as items aggregation\n\t * @private\n\t */\n\tprivate setItems(aItems: INewsFeed[]) {\n\t\tthis.oList.destroyAggregation(\"items\", true);\n\t\tconst newsType = this.oNewsPanel?.getNewsType();\n\t\tlet showDefault = newsType === NewsType.Default;\n\t\t(aItems || []).forEach((oItem: INewsFeed, i: number) => {\n\t\t\tlet oNewsListItemHbox = new HBox({\n\t\t\t\tid: `${this.getId()}--idCustNewsFeedItemContent--${i}`,\n\t\t\t\talignItems: \"Center\",\n\t\t\t\titems: [\n\t\t\t\t\tnew CheckBox(`${this.getId()}--custNewsFeedItemCheckBox--${i}`, {\n\t\t\t\t\t\tselect: () => {\n\t\t\t\t\t\t\tvoid this.saveNewsFeedSettings();\n\t\t\t\t\t\t},\n\t\t\t\t\t\tselected: oItem.selected as boolean,\n\t\t\t\t\t\tenabled: !oItem.disabled\n\t\t\t\t\t}),\n\t\t\t\t\tnew Text(`${this.getId()}--custNewsFeedItemText--${i}`, { text: oItem.title })\n\t\t\t\t],\n\t\t\t\twidth: \"100%\"\n\t\t\t});\n\t\t\tif (showDefault) {\n\t\t\t\t// if showDefault is true, add group_id as custom data to the item\n\t\t\t\toNewsListItemHbox.addCustomData(new CustomData({ key: \"newsGroupId\", value: oItem.group_id }));\n\t\t\t}\n\t\t\tconst customListItem = new CustomListItem({\n\t\t\t\tid: `${this.getId()}--idCustNewsFeedItem--${i}`,\n\t\t\t\tcontent: [oNewsListItemHbox]\n\t\t\t});\n\t\t\tthis.oList.addItem(customListItem);\n\t\t});\n\t}\n\n\t/**\n\t * Loads news feed settings\n\t *\n\t * @returns {Promise} resolves to news feed settings\n\t */\n\tprivate async loadNewsFeedSettings(): Promise<INewsFeed[] | undefined> {\n\t\tthis.oNewsPanel = this._getPanel() as NewsPanel;\n\t\tconst sFeedKey = this.oNewsPanel.getCustomFeedKey();\n\t\tconst newsType = this.oNewsPanel?.getNewsType();\n\t\tconst showDefaultNewsFeed = newsType === NewsType.Default;\n\n\t\tconst customFileName = this.oNewsPanel.getProperty(\"customFileName\") as string;\n\t\tif (this.isCSVFileFormat(customFileName) || showDefaultNewsFeed) {\n\t\t\tthis.oCustNewsSwitchContainer.setVisible(false);\n\t\t}\n\n\t\tconst oPersonalizer = await this.getPersonalization();\n\t\tconst oPersData = await oPersonalizer.read();\n\t\tconst aPersNewsFeed = (showDefaultNewsFeed ? oPersData?.[\"defaultNewsFeed\"] : oPersData?.[\"favNewsFeed\"]) as IFavNewsFeed;\n\t\tconst showAllPreparationRequired = aPersNewsFeed?.showAllPreparationRequired ?? !aPersNewsFeed;\n\n\t\tlet aNewsFeed: INewsFeed[] = await this.oNewsPanel.getCustomOrDefaultNewsFeed(showDefaultNewsFeed ? \"\" : sFeedKey, false);\n\n\t\tif (showDefaultNewsFeed) {\n\t\t\treturn this._handleDefaultNewsFeed(aNewsFeed, aPersNewsFeed);\n\t\t} else {\n\t\t\treturn this._handleCustomNewsFeed(aNewsFeed, aPersNewsFeed, showAllPreparationRequired);\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param {INewsFeed[]} aNewsFeed\n\t * @param {IFavNewsFeed} aPersNewsFeed\n\t * @returns {INewsFeed[] | undefined}\n\t * @private\n\t * @description Handles the default news feed settings by setting the header text, title, and items.\n\t * It maps the news feed items to set their selected and disabled states based on the personalisation data.\n\t * If no news feed is provided, it returns undefined.\n\t */\n\tprivate _handleDefaultNewsFeed(aNewsFeed: INewsFeed[], aPersNewsFeed: IFavNewsFeed): INewsFeed[] | undefined {\n\t\tthis.headerText.setText(this._i18nBundle.getText(\"defaultNewsSettingsText\"));\n\t\tthis.title.setText(this._i18nBundle.getText(\"defaultNewsSettingsHeading\"));\n\t\tconst mandatoryNewsFeed = this.oNewsPanel.getMandatoryDefaultNewsFeed();\n\t\tthis.deselectedDefaultFeeds = aPersNewsFeed?.items || [];\n\n\t\tif (!aNewsFeed || aNewsFeed.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\taNewsFeed = aNewsFeed.map((oNewsFeed: INewsFeed) => {\n\t\t\t// if group_id not available in deselectedDefaultFeeds, then mark it as selected\n\t\t\tconst isDeselected = oNewsFeed.group_id ? this.deselectedDefaultFeeds.includes(oNewsFeed.group_id) : false;\n\t\t\toNewsFeed.selected = !aPersNewsFeed ? true : !isDeselected;\n\t\t\t// if group_id is available in mandatoryNewsFeed, then mark it as disabled, user cannot hide mandatory feeds\n\t\t\tif (mandatoryNewsFeed.includes(oNewsFeed.group_id ?? \"\")) {\n\t\t\t\toNewsFeed.selected = true;\n\t\t\t\toNewsFeed.disabled = true;\n\t\t\t}\n\n\t\t\treturn oNewsFeed;\n\t\t});\n\n\t\tthis.setItems(aNewsFeed);\n\t\tthis.oShowSwitch.setState(false);\n\t\treturn aNewsFeed;\n\t}\n\n\t/**\n\t * @param {INewsFeed[]} aNewsFeed\n\t * @param aPersNewsFeed\n\t * @param showAllPreparationRequired\n\t * @returns {INewsFeed[] | undefined}\n\t * @private\n\t * This method is responsible for managing the custom news feed settings in the News Settings Panel.\n\t * It updates the header text and title, checks if the news feed is available, and maps the news feed items to set their selected state.\n\t * If the news feed is not available or empty, it returns undefined.\n\t * It also sets the state of the show switch based on the `showAllPreparationRequired` parameter.\n\t */\n\tprivate _handleCustomNewsFeed(\n\t\taNewsFeed: INewsFeed[],\n\t\taPersNewsFeed: IFavNewsFeed,\n\t\tshowAllPreparationRequired: boolean\n\t): INewsFeed[] | undefined {\n\t\tthis.headerText.setText(this._i18nBundle.getText(\"newsFeedSettingsText\"));\n\t\tthis.title.setText(this._i18nBundle.getText(\"newsFeedSettingsHeading\"));\n\n\t\tif (!aNewsFeed || aNewsFeed.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst favFeedTitles: string[] = aPersNewsFeed?.items || aNewsFeed;\n\t\taNewsFeed = aNewsFeed.map((oNewsFeed: INewsFeed) => {\n\t\t\tconst isFavorite = favFeedTitles.includes(oNewsFeed.title);\n\t\t\toNewsFeed.selected = !aPersNewsFeed ? true : isFavorite;\n\t\t\treturn oNewsFeed;\n\t\t});\n\n\t\tthis.aFavNewsFeed = aNewsFeed;\n\t\tthis.setItems(this.aFavNewsFeed);\n\t\tthis.oShowSwitch.setState(!!showAllPreparationRequired);\n\t\treturn aNewsFeed;\n\t}\n\n\t/**\n\t * Checks if the News Settings Panel is supported based on the properties of the News Panel.\n\t *\n\t * @returns {Promise<boolean>} A promise that resolves to true if the News Settings Panel is supported, otherwise false.\n\t */\n\tpublic async isSupported(): Promise<boolean> {\n\t\tconst newsPanel = this._getPanel() as NewsPanel;\n\t\tif (!newsPanel || !(newsPanel?.getParent() as NewsAndPagesContainer).getProperty(\"newsFeedVisibility\")) {\n\t\t\treturn Promise.resolve(false);\n\t\t}\n\n\t\treturn Promise.resolve(\n\t\t\t(newsPanel.getNewsType() === NewsType.Custom || newsPanel.getNewsType() === NewsType.Default) &&\n\t\t\t\t!newsPanel.isNoUpdatesNewsFeed()\n\t\t);\n\t}\n}\n"],"mappings":"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","ignoreList":[]}