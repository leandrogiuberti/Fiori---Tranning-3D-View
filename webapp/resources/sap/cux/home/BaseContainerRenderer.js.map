{"version":3,"file":"BaseContainerRenderer.js","names":["sap","ui","define","Log","___library","OrientationType","renderPanel","rm","control","panel","getVisible","orientation","getProperty","isSideBySide","SideBySide","openStart","getId","class","openEnd","renderControl","getPanelHeader","getContent","forEach","content","close","renderCustomPlaceholder","placeholder","getAggregation","error","__exports","apiVersion","render","Horizontal","style","getWidth","getHeight","isLazyLoadEnabled","this","renderContent","length","_getHeader","_getInnerControl"],"sources":["BaseContainerRenderer.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport Log from \"sap/base/Log\";\nimport HTML from \"sap/ui/core/HTML\";\nimport RenderManager from \"sap/ui/core/RenderManager\";\nimport BaseContainer from \"./BaseContainer\";\nimport BasePanel from \"./BasePanel\";\nimport { OrientationType } from \"./library\";\nimport Control from \"sap/ui/core/Control\";\n\nconst renderPanel = (rm: RenderManager, control: BaseContainer, panel: BasePanel) => {\n\tif (!panel.getVisible()) {\n\t\treturn;\n\t}\n\n\tconst orientation = control.getProperty(\"orientation\") as OrientationType;\n\tconst isSideBySide = orientation === OrientationType.SideBySide;\n\n\trm.openStart(\"div\", panel.getId()).class(\"sapUiBasePanel\").openEnd();\n\n\tif (!isSideBySide) {\n\t\t// render panel header\n\t\trm.renderControl(control.getPanelHeader(panel));\n\t}\n\n\t//render panel content\n\tpanel.getContent().forEach((content: Control) => {\n\t\trm.renderControl(content);\n\t});\n\n\trm.close(\"div\");\n};\n\n/**\n * Renders custom loader based on container type.\n */\nconst renderCustomPlaceholder = (rm: RenderManager, control: BaseContainer) => {\n\ttry {\n\t\tconst placeholder = control.getAggregation(\"_placeholder\") as HTML;\n\t\tif (!placeholder) {\n\t\t\trm.openStart(\"div\", control.getId() + \"-placeholder\")\n\t\t\t\t.class(\"sapUiBaseContainerPlaceholder\")\n\t\t\t\t.openEnd()\n\t\t\t\t.close(\"div\");\n\t\t\treturn;\n\t\t}\n\t\trm.renderControl(placeholder);\n\t} catch (error) {\n\t\tLog.error(\"Failed to render placeholder:\", error as string);\n\t}\n};\n\nexport default {\n\tapiVersion: 2,\n\n\t/**\n\t * Renders the control.\n\t *\n\t * @public\n\t * @override\n\t * @param {RenderManager} rm - The RenderManager object.\n\t * @param {BaseContainer} control - The BaseContainer control to be rendered.\n\t */\n\trender: function (rm: RenderManager, control: BaseContainer) {\n\t\trm.openStart(\"div\", control).class(\"sapCuxBaseContainer\");\n\n\t\t//Apply Layout based style classes\n\t\tif (control.getProperty(\"orientation\") === OrientationType.SideBySide) {\n\t\t\trm.class(\"sapCuxSideBySide\");\n\t\t} else if (control.getProperty(\"orientation\") === OrientationType.Horizontal) {\n\t\t\trm.class(\"sapCuxHorizontal\");\n\t\t} else {\n\t\t\trm.class(\"sapCuxVertical\");\n\t\t}\n\n\t\t//update width and height\n\t\trm.style(\"width\", control.getWidth());\n\t\trm.style(\"height\", control.getHeight());\n\t\trm.openEnd();\n\n\t\t//render content only if it is loaded, render placeholder otherwise\n\t\tconst isLazyLoadEnabled = control.getProperty(\"enableLazyLoad\") as boolean;\n\t\tif (!isLazyLoadEnabled || control.getProperty(\"loaded\")) {\n\t\t\tthis.renderContent(rm, control);\n\t\t} else {\n\t\t\trenderCustomPlaceholder(rm, control);\n\t\t}\n\n\t\trm.close(\"div\");\n\t},\n\n\t/**\n\t * Renders the content of the control.\n\t *\n\t * @private\n\t * @param {RenderManager} rm - The RenderManager object.\n\t * @param {BaseContainer} control - The BaseContainer control.\n\t */\n\trenderContent: function (rm: RenderManager, control: BaseContainer) {\n\t\tif (control.getContent()?.length > 0) {\n\t\t\t//render header\n\t\t\trm.openStart(\"div\", control.getId() + \"-header\")\n\t\t\t\t.class(\"sapUiBaseContainerHeader\")\n\t\t\t\t.openEnd();\n\t\t\trm.renderControl(control._getHeader());\n\t\t\trm.close(\"div\");\n\n\t\t\t//render inner control only if orientation is SideBySide\n\t\t\tconst orientation = control.getProperty(\"orientation\") as OrientationType;\n\t\t\tconst isSideBySide = orientation === OrientationType.SideBySide;\n\n\t\t\t//render content\n\t\t\trm.openStart(\"div\", control.getId() + \"-content\")\n\t\t\t\t.class(\"sapUiBaseContainerContent\")\n\t\t\t\t.class(`sapUiOrientation${orientation}`)\n\t\t\t\t.openEnd();\n\t\t\tif (isSideBySide) {\n\t\t\t\trm.renderControl(control._getInnerControl());\n\t\t\t} else {\n\t\t\t\t//render individual panels\n\t\t\t\tcontrol.getContent().forEach((panel: BasePanel) => renderPanel(rm, control, panel));\n\t\t\t}\n\n\t\t\trm.close(\"div\");\n\t\t}\n\t}\n};\n"],"mappings":";;;;AAAAA,IAAAC,GAAAC,OAAA,sCAAAC,EAAAC,GAAA,mBAUSC,EAAeD,EAAA,mBAGxB,MAAME,EAAcA,CAACC,EAAmBC,EAAwBC,KAC/D,IAAKA,EAAMC,aAAc,CACxB,MACD,CAEA,MAAMC,EAAcH,EAAQI,YAAY,eACxC,MAAMC,EAAeF,IAAgBN,EAAgBS,WAErDP,EAAGQ,UAAU,MAAON,EAAMO,SAASC,MAAM,kBAAkBC,UAE3D,IAAKL,EAAc,CAElBN,EAAGY,cAAcX,EAAQY,eAAeX,GACzC,CAGAA,EAAMY,aAAaC,QAASC,IAC3BhB,EAAGY,cAAcI,KAGlBhB,EAAGiB,MAAM,QAMV,MAAMC,EAA0BA,CAAClB,EAAmBC,KACnD,IACC,MAAMkB,EAAclB,EAAQmB,eAAe,gBAC3C,IAAKD,EAAa,CACjBnB,EAAGQ,UAAU,MAAOP,EAAQQ,QAAU,gBACpCC,MAAM,iCACNC,UACAM,MAAM,OACR,MACD,CACAjB,EAAGY,cAAcO,EAClB,CAAE,MAAOE,GACRzB,EAAIyB,MAAM,gCAAiCA,EAC5C,GACC,IAAAC,EAEa,CACdC,WAAY,EAUZC,OAAQ,SAAUxB,EAAmBC,GACpCD,EAAGQ,UAAU,MAAOP,GAASS,MAAM,uBAGnC,GAAIT,EAAQI,YAAY,iBAAmBP,EAAgBS,WAAY,CACtEP,EAAGU,MAAM,mBACV,MAAO,GAAIT,EAAQI,YAAY,iBAAmBP,EAAgB2B,WAAY,CAC7EzB,EAAGU,MAAM,mBACV,KAAO,CACNV,EAAGU,MAAM,iBACV,CAGAV,EAAG0B,MAAM,QAASzB,EAAQ0B,YAC1B3B,EAAG0B,MAAM,SAAUzB,EAAQ2B,aAC3B5B,EAAGW,UAGH,MAAMkB,EAAoB5B,EAAQI,YAAY,kBAC9C,IAAKwB,GAAqB5B,EAAQI,YAAY,UAAW,CACxDyB,KAAKC,cAAc/B,EAAIC,EACxB,KAAO,CACNiB,EAAwBlB,EAAIC,EAC7B,CAEAD,EAAGiB,MAAM,MACV,EASAc,cAAe,SAAU/B,EAAmBC,GAC3C,GAAIA,EAAQa,cAAckB,OAAS,EAAG,CAErChC,EAAGQ,UAAU,MAAOP,EAAQQ,QAAU,WACpCC,MAAM,4BACNC,UACFX,EAAGY,cAAcX,EAAQgC,cACzBjC,EAAGiB,MAAM,OAGT,MAAMb,EAAcH,EAAQI,YAAY,eACxC,MAAMC,EAAeF,IAAgBN,EAAgBS,WAGrDP,EAAGQ,UAAU,MAAOP,EAAQQ,QAAU,YACpCC,MAAM,6BACNA,MAAM,mBAAmBN,KACzBO,UACF,GAAIL,EAAc,CACjBN,EAAGY,cAAcX,EAAQiC,mBAC1B,KAAO,CAENjC,EAAQa,aAAaC,QAASb,GAAqBH,EAAYC,EAAIC,EAASC,GAC7E,CAEAF,EAAGiB,MAAM,MACV,CACD,GACA,OAAAK,CAAA","ignoreList":[]}