{"version":3,"file":"BasePanel.js","names":["sap","ui","define","DragDropInfo","Element","Lib","sap_ui_core_library","___utils_Device","___utils_DragDropUtils","dnd","calculateDeviceType","attachKeyboardHandler","BasePanel","extend","metadata","library","properties","title","type","group","defaultValue","key","visible","tooltip","visibility","enableSettings","enableKeyUserSettings","enableFullScreen","fullScreenName","defaultAggregation","aggregations","content","multiple","singularName","actionButtons","menuItems","events","onExpand","loaded","associations","fullScreenButton","constructor","_constructor","id","settings","Element.prototype.constructor.call","this","init","_init","_i18nBundle","getResourceBundleFor","getProperty","setProperty","getId","_setCount","count","getParent","_setPanelCount","getDeviceType","_getDeviceType","container","addDragDropConfigTo","_addDragDropConfigTo","dropHandler","keyboardHandler","dropPositionType","DropPosition","Between","addDragDropConfig","sourceAggregation","targetAggregation","dropPosition","dropLayout","DropLayout","Horizontal","drop","attachBrowserEvent","event","disableNavigation","metaKey","ctrlKey","dragDropEvent"],"sources":["BasePanel.ts"],"sourcesContent":["/*!\n * SAP UI development toolkit for HTML5 (SAPUI5)\n *  * (c) Copyright 2009-2025 SAP SE. All rights reserved\n */\n\nimport ResourceBundle from \"sap/base/i18n/ResourceBundle\";\nimport GridContainer from \"sap/f/GridContainer\";\nimport FlexBox from \"sap/m/FlexBox\";\nimport HeaderContainer from \"sap/m/HeaderContainer\";\nimport DragDropInfo from \"sap/ui/core/dnd/DragDropInfo\";\nimport { DropInfo$DropEvent } from \"sap/ui/core/dnd/DropInfo\";\nimport type { MetadataOptions } from \"sap/ui/core/Element\";\nimport Element from \"sap/ui/core/Element\";\nimport Lib from \"sap/ui/core/Lib\";\nimport { dnd } from \"sap/ui/core/library\";\nimport BaseContainer from \"./BaseContainer\";\nimport { $BasePanelSettings } from \"./BasePanel\";\nimport { DeviceType, calculateDeviceType } from \"./utils/Device\";\nimport { attachKeyboardHandler } from \"./utils/DragDropUtils\";\n\n/**\n *\n * Abstract base class for all panels placed in {@link sap.cux.home.BaseContainer}.\n *\n * @extends sap.ui.core.Element\n *\n * @author SAP SE\n * @version 0.0.1\n * @since 1.121\n *\n * @abstract\n * @private\n * @ui5-restricted ux.eng.s4producthomes1\n *\n * @alias sap.cux.home.BasePanel\n */\nexport default abstract class BasePanel extends Element {\n\tprotected _i18nBundle!: ResourceBundle;\n\n\tconstructor(id?: string | $BasePanelSettings);\n\tconstructor(id?: string, settings?: $BasePanelSettings);\n\t/**\n\t * Constructor for a new Base Panel.\n\t *\n\t * @param {string} [id] ID for the new control, generated automatically if an ID is not provided\n\t * @param {object} [settings] Initial settings for the new control\n\t */\n\tpublic constructor(id?: string, settings?: $BasePanelSettings) {\n\t\tsuper(id, settings);\n\t}\n\n\tstatic readonly metadata: MetadataOptions = {\n\t\tlibrary: \"sap.cux.home\",\n\t\tproperties: {\n\t\t\t/**\n\t\t\t * Title for the panel.\n\t\t\t */\n\t\t\ttitle: { type: \"string\", group: \"Misc\", defaultValue: \"\" },\n\t\t\t/**\n\t\t\t * Key for the panel.\n\t\t\t */\n\t\t\tkey: { type: \"string\", group: \"Misc\", defaultValue: \"\" },\n\t\t\t/**\n\t\t\t * Specifies whether the panel should be visible.\n\t\t\t */\n\t\t\tvisible: { type: \"boolean\", group: \"Misc\", defaultValue: true },\n\t\t\t/**\n\t\t\t * Tooltip for the panel.\n\t\t\t */\n\t\t\ttooltip: { type: \"string\", group: \"Misc\", defaultValue: \"\", visibility: \"hidden\" },\n\t\t\t/**\n\t\t\t * Specifies whether settings should be enabled for the panel.\n\t\t\t */\n\t\t\tenableSettings: { type: \"boolean\", group: \"Misc\", visibility: \"hidden\" },\n\t\t\t/**\n\t\t\t * Specifies whether key user settings should be enabled for the panel.\n\t\t\t */\n\t\t\tenableKeyUserSettings: { type: \"boolean\", group: \"Misc\", visibility: \"hidden\", defaultValue: true },\n\t\t\t/**\n\t\t\t * Indicates whether full screen is enabled for this control.\n\t\t\t */\n\t\t\tenableFullScreen: { type: \"boolean\", group: \"Misc\", visibility: \"hidden\" },\n\t\t\t/**\n\t\t\t * The name of the URL parameter used to expand the container into full-screen mode.\n\t\t\t * This property specifies the parameter key expected in the URL query string\n\t\t\t * to identify the container to be expanded.\n\t\t\t */\n\t\t\tfullScreenName: { type: \"string\", group: \"Misc\", visibility: \"hidden\" }\n\t\t},\n\t\tdefaultAggregation: \"content\",\n\t\taggregations: {\n\t\t\t/**\n\t\t\t * Specifies the content aggregation of the panel.\n\t\t\t */\n\t\t\tcontent: { multiple: true, singularName: \"content\" },\n\t\t\t/**\n\t\t\t * Specifies the actions to be shown within the panel.\n\t\t\t */\n\t\t\tactionButtons: { type: \"sap.m.Button\", multiple: true, singularName: \"actionButton\" },\n\t\t\t/**\n\t\t\t * Specifies the items that are shown within the dropdown menu of the panel.\n\t\t\t */\n\t\t\tmenuItems: { type: \"sap.cux.home.MenuItem\", multiple: true, singularName: \"menuItem\" }\n\t\t},\n\t\tevents: {\n\t\t\t/**\n\t\t\t * Event is fired before the container is expanded.\n\t\t\t */\n\t\t\tonExpand: {},\n\t\t\t/**\n\t\t\t * Event is fired after the panel is loaded.\n\t\t\t */\n\t\t\tloaded: {}\n\t\t},\n\t\tassociations: {\n\t\t\tfullScreenButton: { type: \"sap.m.Button\", multiple: false, singularName: \"fullScreenButton\", visibility: \"hidden\" }\n\t\t}\n\t};\n\n\t/**\n\t * Init lifecycle method\n\t *\n\t * @private\n\t * @override\n\t */\n\tpublic init(): void {\n\t\tthis._i18nBundle = Lib.getResourceBundleFor(\"sap.cux.home.i18n\") as ResourceBundle;\n\n\t\t// set default key if not provided\n\t\tif (!this.getProperty(\"key\")) {\n\t\t\tthis.setProperty(\"key\", this.getId());\n\t\t}\n\t}\n\n\t/**\n\t * Updates the count information of IconTabFilter of IconTabBar inner control\n\t * in case of SideBySide layout\n\t *\n\t * @private\n\t * @param {string} count - updated count information\n\t */\n\tpublic _setCount(count?: string): void {\n\t\t(this.getParent() as BaseContainer)?._setPanelCount(this, count);\n\t}\n\n\t/**\n\t * Retrieves the device type for the current panel.\n\t *\n\t * @private\n\t * @returns {DeviceType} - The device type of the parent container if it exists,\n\t * otherwise calculates and returns the device type based on the current device width.\n\t */\n\tprotected getDeviceType(): DeviceType {\n\t\tconst container = this.getParent() as BaseContainer;\n\t\treturn container ? container.getDeviceType() : calculateDeviceType();\n\t}\n\n\tprotected addDragDropConfigTo(\n\t\tcontainer: GridContainer | FlexBox | HeaderContainer,\n\t\tdropHandler: (event: DropInfo$DropEvent) => void,\n\t\tkeyboardHandler?: (event: KeyboardEvent) => void,\n\t\tdropPositionType: dnd.DropPosition = dnd.DropPosition.Between\n\t): void {\n\t\tcontainer\n\t\t\t.addDragDropConfig(\n\t\t\t\tnew DragDropInfo(`${container.getId()}--addDragDropConfig`, {\n\t\t\t\t\tsourceAggregation: \"items\",\n\t\t\t\t\ttargetAggregation: \"items\",\n\t\t\t\t\tdropPosition: dropPositionType,\n\t\t\t\t\tdropLayout: dnd.DropLayout.Horizontal,\n\t\t\t\t\tdrop: dropHandler\n\t\t\t\t})\n\t\t\t)\n\t\t\t.attachBrowserEvent(\"keydown\", (event: KeyboardEvent) => {\n\t\t\t\tconst disableNavigation = event.metaKey || event.ctrlKey;\n\t\t\t\tvoid attachKeyboardHandler(event, disableNavigation, (dragDropEvent: DropInfo$DropEvent) => {\n\t\t\t\t\tdropHandler(dragDropEvent);\n\t\t\t\t});\n\t\t\t});\n\t\tif (keyboardHandler) {\n\t\t\tcontainer.attachBrowserEvent(\"keydown\", keyboardHandler);\n\t\t}\n\t}\n}\n"],"mappings":";;;;AAAAA,IAAAC,GAAAC,OAAA,iJAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,mBAcSC,EAAGH,EAAA,aAGSI,EAAmBH,EAAA,6BAC/BI,EAAqBH,EAAA,yBAE9B,MAgB8BI,EAAkBR,EAAOS,OAAA,0BAetCC,SAA4B,CAC3CC,QAAS,eACTC,WAAY,CAIXC,MAAO,CAAEC,KAAM,SAAUC,MAAO,OAAQC,aAAc,IAItDC,IAAK,CAAEH,KAAM,SAAUC,MAAO,OAAQC,aAAc,IAIpDE,QAAS,CAAEJ,KAAM,UAAWC,MAAO,OAAQC,aAAc,MAIzDG,QAAS,CAAEL,KAAM,SAAUC,MAAO,OAAQC,aAAc,GAAII,WAAY,UAIxEC,eAAgB,CAAEP,KAAM,UAAWC,MAAO,OAAQK,WAAY,UAI9DE,sBAAuB,CAAER,KAAM,UAAWC,MAAO,OAAQK,WAAY,SAAUJ,aAAc,MAI7FO,iBAAkB,CAAET,KAAM,UAAWC,MAAO,OAAQK,WAAY,UAMhEI,eAAgB,CAAEV,KAAM,SAAUC,MAAO,OAAQK,WAAY,WAE9DK,mBAAoB,UACpBC,aAAc,CAIbC,QAAS,CAAEC,SAAU,KAAMC,aAAc,WAIzCC,cAAe,CAAEhB,KAAM,eAAgBc,SAAU,KAAMC,aAAc,gBAIrEE,UAAW,CAAEjB,KAAM,wBAAyBc,SAAU,KAAMC,aAAc,aAE3EG,OAAQ,CAIPC,SAAU,CAAC,EAIXC,OAAQ,CAAC,GAEVC,aAAc,CACbC,iBAAkB,CAAEtB,KAAM,eAAgBc,SAAU,MAAOC,aAAc,mBAAoBT,WAAY,YApEpGiB,YAAW,SAAAC,EAACC,EAAaC,GAC/BC,6BAAAC,KAAMH,EAAIC,EACX,EA4EOG,KAAI,SAAAC,IACVF,KAAKG,YAAc5C,EAAI6C,qBAAqB,qBAG5C,IAAKJ,KAAKK,YAAY,OAAQ,CAC7BL,KAAKM,YAAY,MAAON,KAAKO,QAC9B,CACD,EASOC,UAAS,SAAAA,EAACC,GACfT,KAAKU,aAA+BC,eAAeX,KAAMS,EAC3D,EASUG,cAAa,SAAAC,IACtB,MAAMC,EAAYd,KAAKU,YACvB,OAAOI,EAAYA,EAAUF,gBAAkBhD,GAChD,EAEUmD,oBAAmB,SAAAC,EAC5BF,EACAG,EACAC,EACAC,EAAqCxD,EAAIyD,aAAaC,SAEtDP,EACEQ,kBACA,IAAIjE,EAAa,GAAGyD,EAAUP,6BAA8B,CAC3DgB,kBAAmB,QACnBC,kBAAmB,QACnBC,aAAcN,EACdO,WAAY/D,EAAIgE,WAAWC,WAC3BC,KAAMZ,KAGPa,mBAAmB,UAAYC,IAC/B,MAAMC,EAAoBD,EAAME,SAAWF,EAAMG,aAC5CrE,EAAsBkE,EAAOC,EAAoBG,IACrDlB,EAAYkB,OAGf,GAAIjB,EAAiB,CACpBJ,EAAUgB,mBAAmB,UAAWZ,EACzC,CACD,IAAC,OAlJ4BpD,CAAS","ignoreList":[]}