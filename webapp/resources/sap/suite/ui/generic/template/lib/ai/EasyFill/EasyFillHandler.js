sap.ui.define(["sap/ui/base/Object","sap/base/util/extend","sap/ui/comp/smartform/Group","sap/ui/comp/smartform/GroupElement","sap/ui/comp/smartfield/SmartField","sap/ui/comp/smartfield/SmartLabel","sap/m/MessageToast","sap/ui/model/json/JSONModel","sap/ui/model/odata/AnnotationHelper"],function(e,t,s,a,n,o,l,i,r){"use strict";function c(e,t,c,u){let d;let p;let f;let b;let y;let E;async function I(e,s){let a;y=t.getView().getModel("i18n").getResourceBundle();const n=!!t.getView().getModel("easyFillDialogModel");if(!n){f=u.getModel();const e=f.getDeferredGroups();e.push("EasyFillFETransientChanges");f.setDeferredGroups(e);const s={isBusy:false,isUpdatableVisible:false,isNonUpdatableVisible:false,isIllustrationVisible:true,isSaveEnabled:false,stateType:"Initial",feedbackEnabled:true,isEasyFillButtonEnabled:false};let a=new i(s);t.getView().setModel(a,"easyFillDialogModel")}p=s?s:u.getBindingContext();var o="sap.suite.ui.generic.template.lib.ai.EasyFill.fragments.EasyFillDialog";c.oCommonUtils.getDialogFragmentAsync(o,{onFeedbackPress:function(){const e=t.getView().getModel("easyFillDialogModel");e.setProperty("/feedbackEnabled",false);l.show(y.getText("EASYFILL_RESULT_FEEDBACK"))},formatIllustrationType:function(e){switch(e){case"Initial":return"sapIllus-NoSearchResults";case"NoEntries":return"sapIllus-NoEntries";case"Error":return"sapIllus-UnableToLoad";default:return"sapIllus-NoSearchResults"}},formatIllustrationTitle:function(e){switch(e){case"Initial":return y.getText("EASY_FILL_ILLUSTRATION_TITLE_INITIAL");case"NoEntries":return y.getText("EASY_FILL_ILLUSTRATION_TITLE_NO_ENTRIES");case"Error":return y.getText("EASY_FILL_ILLUSTRATION_TITLE_ERROR");default:return y.getText("EASY_FILL_ILLUSTRATION_TITLE_INITIAL")}},formatIllustrationDescription:function(e){switch(e){case"Initial":return y.getText("EASY_FILL_ILLUSTRATION_DESCRIPTION_INITIAL");case"NoEntries":return y.getText("EASY_FILL_ILLUSTRATION_DESCRIPTION_NO_ENTRIES");case"Error":return y.getText("EASY_FILL_ILLUSTRATION_DESCRIPTION_ERROR");default:return y.getText("EASY_FILL_ILLUSTRATION_DESCRIPTION_INITIAL")}},onSaveFromEasyFillDialog:async function(e){var t=d.getObject();for(const e in t){if(e!=="__metadata"&&b[e]){p.setProperty(e,t[e])}}S(true);a.close()},onLiveChange:function(e){const s=t.getView().getModel("easyFillDialogModel");s.setProperty("/isEasyFillButtonEnabled",!!e.getSource().getValue())},onCancelEasyFillDialog:function(){S(true);a.close()},onEasyFillSubmitInputToAI:async function(e){S();const s=t.getView().getModel("easyFillDialogModel");s.setProperty("/isBusy",true);let a=m();let n=await c.oServices.oFioriAIHandler.fioriaiLib.EasyFill.extractFieldValuesFromText(t.byId("EasyFillInputTextArea").getValue(),a);s.setProperty("/isBusy",false);F(n,a);if(n.success){const{updatableFields:e,nonUpdatableFields:a}=_(n.data);b=e;if(Object.keys(e).length+Object.keys(a).length===0){s.setProperty("/stateType","NoEntries");return}s.setProperty("/isIllustrationVisible",false);A();s.setProperty("/isUpdatableVisible",Object.keys(e).length>0);if(Object.keys(e).length>0){const s=t.byId("EasyFillUpdatebleForm");const a=h(e,false,u.getBindingContext(),false);const n=h(e,true,d,true);s.addGroup(a);s.addGroup(n);L()}s.setProperty("/isNonUpdatableVisible",Object.keys(a).length>0);if(Object.keys(a).length>0){const e=t.byId("EasyFillNonUpdatebleForm");const s=h(a,false,u.getBindingContext(),false);const n=h(a,false,d,true);e.addGroup(s);e.addGroup(n)}}else{s.setProperty("/stateType","Error")}},onEasyFillClearAll:function(){S(true)},onLinkPress:async function(e){if(!E){E=await g()}E.openBy(e.getSource())}},"easyFillPopup",undefined,true,true).then(function(e){a=e;e.open()})}function g(){return new Promise(async(e,t)=>{const s="sap.suite.ui.generic.template.fragments.AINotice";const a=await c.oCommonUtils.getDialogFragmentAsync(s,{onCloseAiPopover:function(){E.close()}},"aiPopover",undefined,true);e(a)})}function m(){const e={};const s=c.oCommonUtils.getMetaModelEntityType(t.getOwnerComponent().getEntitySet());s.property.forEach(t=>{e[t.name]={description:T(t),dataType:t.type}});return e}function T(e){return e["com.sap.vocabularies.Common.v1.Label"]?r.format(p,e["com.sap.vocabularies.Common.v1.Label"]):e["sap:label"]}function F(e,t){if(e.success){for(const s of Object.keys(e.data)){const a=t[s].dataType;if(a==="Edm.DateTimeOffset"||a==="Edm.DateTime"){e.data[s]=new Date(e.data[s])}}}}function L(){setTimeout(async()=>{const e=t.getView().getModel("easyFillDialogModel");try{const s=t.byId("EasyFillUpdatebleForm");const a=await s.check();e.setProperty("/isSaveEnabled",a.length===0)}catch(t){e.setProperty("/isSaveEnabled",false)}},0)}function S(e){const s=t.getView().getModel("easyFillDialogModel");const a=t.byId("EasyFillNonUpdatebleForm");const n=t.byId("EasyFillUpdatebleForm");n.destroyGroups();a.destroyGroups();P();s.setProperty("/isUpdatableVisible",false);s.setProperty("/isNonUpdatableVisible",false);s.setProperty("/isIllustrationVisible",true);s.setProperty("/isSaveEnabled",false);s.setProperty("/stateType","Initial");s.setProperty("/feedbackEnabled",true);if(e){t.byId("EasyFillInputTextArea").setValue("");s.setProperty("/isEasyFillButtonEnabled",false)}}function _(e){const s=c.oCommonUtils.getMetaModelEntityType(t.getOwnerComponent().getEntitySet());const a={};const n={};Object.keys(e).forEach(t=>{const o=s.property.find(e=>e.name===t);const{bIsVisible:l,bIsEditable:i}=O(o);if(l){if(i){a[t]=e[t]}else{n[t]=e[t]}}});return{updatableFields:a,nonUpdatableFields:n}}function O(e){const t={bIsVisible:true,bIsEditable:true};const s=e["sap:updatable"];if(s){t.bIsEditable=s==="false"?false:true;return t}const a=e["com.sap.vocabularies.Common.v1.FieldControl"];if(a&&a["EnumMember"]){const e=a["EnumMember"];t.bIsVisible=e==="com.sap.vocabularies.Common.v1.FieldControlType/Hidden"?false:true;t.bIsEditable=e==="com.sap.vocabularies.Common.v1.FieldControlType/ReadOnly"?false:true;return t}const n=e["com.sap.vocabularies.UI.v1.Hidden"];if(n){t.bIsVisible=false;if(n["Bool"]){t.bIsVisible=n["Bool"]==="true"?false:true}else if(n["Path"]){t.bIsVisible=!p.getObject()[n["Path"]]}return t}const o=e["sap:field-control"];if(o){const e=p.getObject()[o];t.bIsVisible=e===0?false:true;t.bIsEditable=e===1?false:true;return t}return t}function P(){if(d){f.resetChanges([d.getPath()],false,true);d=null}}function A(){if(d){P()}d=f.createEntry("/"+t.getOwnerComponent().getEntitySet(),{groupId:"EasyFillFETransientChanges",changeSetId:"EasyFillFETransientChanges"})}function N(){L()}function h(e,t,l,i){var r=new s({title:i?y.getText("EASY_FILL_PROPOSED_VALUES"):y.getText("EASY_FILL_PREVIOUS_VALUES")});for(const s of Object.keys(e)){const c=new a;const u=new n({value:"{"+s+"}",editable:t,enabled:t,contextEditable:t,change:N.bind(this)});const d=new o;d.setLabelFor(u);c.addElement(u);if(i){l.setProperty(s,e[s])}r.addGroupElement(c)}r.setBindingContext(l);return r}return{onEasyFillButtonClick:function(e){const s=t.getView().getModel("ui").getProperty("/editable");if(s){I(e)}else{t._templateEventHandlers.onEditByEasyFill().then(t=>{p=t;I(e,t)}).catch(Function.prototype)}}}}return e.extend("sap.suite.ui.generic.template.lib.ai.EasyFill.EasyFillHandler",{constructor:function(e,s,a,n){t(this,c(e,s,a,n))}})});
//# sourceMappingURL=EasyFillHandler.js.map