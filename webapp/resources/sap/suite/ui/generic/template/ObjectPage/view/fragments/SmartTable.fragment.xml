<core:FragmentDefinition xmlns="sap.m" xmlns:core="sap.ui.core" xmlns:st="sap.ui.comp.smarttable" xmlns:table="sap.ui.table" xmlns:layout="sap.ui.layout" xmlns:plugins="sap.m.plugins"
	xmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"
	template:require="{AH: 'sap/suite/ui/generic/template/js/AnnotationHelper', AHModel: 'sap/ui/model/odata/AnnotationHelper', StableIdHelper: 'sap/suite/ui/generic/template/js/StableIdHelper'}">

	<!-- @classdesc @name: Name: sap.suite.ui.generic.template.ObjectPage.view.fragments.SmartTable.fragment.xml
		@param {UI.Facet} [facet] @param {edm.EntitySet} [entitySet] @param {edm.EntityType}
		[entityType] -->
	<template:with path="facet>Target" var="target">
		<template:with path="target>" helper="AHModel.gotoEntitySet" var="listEntitySet">
			<template:with path="listEntitySet>entityType" helper="AHModel.gotoEntityType" var="listEntityType">
				<template:with path="target>" helper="AH.getListItemCollection" var="collection">
					<template:with path="listEntityType>com.sap.vocabularies.UI.v1.HeaderInfo" var="header">
						<template:with path="parameter>/" helper="StableIdHelper.preparePathForStableId" var="smartControlId">
							<template:with path="parameter>/" helper="StableIdHelper.preparePathForStableId" var="facetId">
								<template:if test="{= ${facetId>}.buildStableId({type: 'ObjectPage', subType: 'Facet', sRecordType: ${facet>RecordType}, sAnnotationPath: ${facet>Target/AnnotationPath}, sAnnotationId: ${facet>ID/String}, bIsHeaderFacet: ${isHeaderFacet>value}})}"/>
								<template:if test="{= ${smartControlId>}.buildStableId({type: 'ObjectPageTable', subType: 'SmartTable', sFacet: ${facetId>id}})}" />
								<!-- Header Level for Smart Table is hardcoded here with "H5" for fallback scenarios, After Section Title hiding logic, if required the level is calculated on the class /ObjectPage/controller/SectionTitleHandler.js-->
								<!-- Header Style for Smart Table is hardcoded here with "H5" for all Scenarios.-->
								<st:SmartTable id="{smartControlId>id}"
									initialise="._templateEventHandlers.onTableInit($event, '{facetId>id}')"
									persistencyKey="{parts: [{path: 'smartControlId>id'}, {path: 'objectPageTableSettings>value/persistencyKeyState'}], formatter: 'AH.getPersistencyKey'}"
									tableBindingPath="{= ${path: 'target>AnnotationPath'}.slice(0, ${path: 'target>AnnotationPath'}.lastIndexOf('/')) }"
									fitContainer="false"
									enableAutoBinding="false"
									showRowCount="true"
									fieldChange="._templateEventHandlers.onTableSmartFieldModelValueChanged"
									beforeRebindTable="._templateEventHandlers.onBeforeRebindDetailTable"
									beforeExport="._templateEventHandlers.onBeforeExport"
									header="{path: 'objectPageTableSettings>value/headerInfo/TypeNamePlural', formatter: 'AHModel.format'}"
									headerLevel="H5"
									headerStyle="H5"
									useVariantManagement="{objectPageTableSettings>value/variantManagement}"
									enableExport="{objectPageTableSettings>value/bExportToExcel}"
									useTablePersonalisation="true"
									entitySet="{path: 'listEntitySet>name'}"
									ignoreFromPersonalisation="{path: 'collection>', formatter: 'AH.suppressP13NDuplicateColumns'}"
									enableAutoColumnWidth="{= ${device>/system/phone} ? false : ${appSettings>/enableAutoColumnWidthForSmartTable}}"
									demandPopin="{= ${objectPageTableSettings>value/type} === 'ResponsiveTable'}"
									showDetailsButton="{= ${objectPageTableSettings>value/type} === 'ResponsiveTable'}"
									showFullScreenButton="{= ${device>/system/phone}}"
									detailsButtonSetting="{= ${objectPageTableSettings>value/type} === 'ResponsiveTable' ? 'None,Low,Medium' : null}"
									noData="{parts: [{path: 'entitySet>name'}, {path: 'smartControlId>id'}], formatter:'AH.setNoDataTextForSmartTable'}"
									visible="{path: 'facet>', formatter: 'AH.getBindingForHiddenPath'}"
									editable="{ui>/editable}"
									showPasteButton = "{objectPageTableSettings>value/vShowPasteButton}"
									placeToolbarInTable="{=${device>/system/desktop}}"
									beforePaste="._templateEventHandlers.onBeforePaste('{smartControlId>id}', $event)"
									paste="._templateEventHandlers.onPaste('{smartControlId>id}', $event)"
									customizeConfig="{parts: [{path: 'entitySet>'}, {path: 'listEntitySet>'}, {path: 'objectPageTableSettings>calculateWidthIncludingColumnHeader'}], formatter: 'AH.buildSmartTableCustomizeConfig'}"
									useInfoToolbar="On">
									<st:dataStateIndicator>
										<plugins:DataStateIndicator filter="._templateEventHandlers.dataStateFilter" close="._templateEventHandlers.dataStateClose" enableFiltering="true" />
									</st:dataStateIndicator>
									<st:dependents>
										 <core:Fragment fragmentName="sap.suite.ui.generic.template.ObjectPage.view.fragments.TableCommands" type="XML"/>
									</st:dependents>
									<st:customData>
										<core:CustomData key="headerInfo" value="{path: 'header>', formatter: 'AH.buildHeaderInfoCustomData'}"/>
										<core:CustomData key="sectionId" value="{path: 'facet>', formatter: 'AH.getStableIdPartFromFacet'}" />
										<core:CustomData key="useSmartToggle" value="true" />
										<core:CustomData key="useSmartField" value="true" />
										<core:CustomData key="dateFormatSettings"
											value='\{"UTC":true,"style":"medium"\}' />
										<core:CustomData key="useUTCDateTime" value="true" />
										<core:CustomData key="defaultTextInEditModeSource" value="ValueList" />
										<template:if test="{= ${objectPageTableSettings>value/lineItemQualifier}}">
											<core:CustomData key="lineItemQualifier"
												value="{= ${objectPageTableSettings>value/lineItemQualifier}}" />
										</template:if>
										<template:if test="{= ${objectPageTableSettings>value/lineItemSortOrder}}">
											<core:CustomData key="TemplateSortOrder"
												value="{= ${objectPageTableSettings>value/lineItemSortOrder}}" />
										</template:if>
									</st:customData>
									<st:semanticObjectController>
										<!-- Fragment SemanticObjectControllerForDataField uses variable 'entitySet to address the entoty set. Currently entitySet points to the entity set of whole OP. Reset pointer to the entity set of the table.-->
										<template:with path="listEntitySet>" var="entitySet">
											<core:Fragment fragmentName="sap.suite.ui.generic.template.fragments.SemanticObjectControllerForDataField" type="XML"/>
										</template:with>
									</st:semanticObjectController>
									<st:layoutData>
										<layout:GridData id="{path: 'facet>', formatter: 'AH.getStableIdPartFromFacet'}::Table::GridData" span="XL12 L12 M12 S12" />
									</st:layoutData>
									<st:customToolbar>
										<OverflowToolbar id="{path: 'facet>', formatter: 'AH.getStableIdPartFromFacet'}::Table::Toolbar" design="Transparent">
											<!--Object page segmented button for multiple views-->
											<core:Fragment fragmentName="sap.suite.ui.generic.template.ObjectPage.view.fragments.MultipleViewsSingleTableMode" type="XML"/>
											<ToolbarSpacer />
											<!--Object page search field-->
											<template:if test="{= ${listEntitySet>Org.OData.Capabilities.V1.SearchRestrictions/Searchable/Bool} !== 'false' }">
												<core:Fragment fragmentName="sap.suite.ui.generic.template.fragments.SearchField" type="XML"/>
											</template:if>
											<core:ExtensionPoint name="TableToolBarExtension|{parameter>/entitySet}|{facetId>id}"/>
											<!-- Custom Action Breakout -->
											<template:repeat list="{objectPageTableSettings>value/extensionActions}" var="customAction">
												<Button id="{customAction>id}"
													text="{customAction>text}"
													enabled="{customAction>enabled}"
													press="{customAction>press}"
													type="Transparent">
													<layoutData>
														<OverflowToolbarLayoutData priority="{path: 'customAction>importance', formatter: 'AH.getToolbarButtonPriorityFromImportance'}"/>
													</layoutData>
												</Button>
											</template:repeat>
											<core:Fragment fragmentName="sap.suite.ui.generic.template.fragments.AnnotatedActionButtons" type="XML"/>
											<customData>
												<core:CustomData
													key="annotatedActionIds"
													value="{parts: [{path: 'collection>'}, {path: 'facet>'}, {path: 'parameter>/settings/quickVariantSelectionX'}, {path: 'tabItem>'}, {path: 'chartItem>'}], formatter: 'AH.buildActionButtonsCustomData'}" />
											</customData>
											<template:with path="objectPageTableSettings>value/createWithParameterDialog" var="createWithParameterDialog">
												<core:Fragment fragmentName="sap.suite.ui.generic.template.ObjectPage.view.fragments.CRUDActionButtons" type="XML"/>
											</template:with>
										</OverflowToolbar>
									</st:customToolbar>
									<st:copyProvider>
										<plugins:CopyProvider visible="{objectPageTableSettings>value/copy}" />
									</st:copyProvider>
									<template:if test="{= ${parameter>/isDraftEnabled} }">
										<template:then>
											<st:customData>
												<core:CustomData key="creationMode" value="{parts: [{path: 'facet>'}, {path: 'parameter>/settings'}, {path: 'appSettings>/'}], formatter: 'AH.getCreationMode'}" />
												<core:CustomData key="disableInlineCreateSort" value="{parts: [{path: 'facet>'}, {path: 'parameter>/settings'}], formatter: 'AH.isInlineCreateSorting'}" />
												<core:CustomData key="isCreationAllowedByBoolAndPathRestrictions" value="{= ${parts: [{path: 'listEntitySet>Org.OData.Capabilities.V1.InsertRestrictions'}, {path: 'listEntitySet>'}, {value: 'Insertable'}, {path: 'entitySet>'}], formatter: 'AH.isCreationAllowedByBoolAndPathRestrictions'}}"/>
												<core:CustomData key="inlineCreationRowsConfig" value="{= ${parts: [{path: 'entitySet>'}, {path: 'listEntitySet>'}], formatter: 'AH.buildInlineCreationRowsConfig'} }"/>
											</st:customData>
										</template:then>
										<template:else>
											<template:with path="objectPageTableSettings>value/createWithParameterDialog" var="createWithParameterDialog">
												<core:Fragment fragmentName="sap.suite.ui.generic.template.fragments.CreateWithDialog" type="XML"/>
											</template:with>
										</template:else>
									</template:if>
									<template:if test="{= ${objectPageTableSettings>value/type} === 'AnalyticalTable' &amp;&amp; ${listEntityType>sap:semantics} === 'aggregate'}">
										<template:then>
											<table:AnalyticalTable id="{path: 'facet>', formatter: 'AH.getStableIdPartFromFacet'}::analyticalTable"
												visibleRowCountMode="Auto" enableColumnReordering="true"
												rowSelectionChange="._templateEventHandlers.onSelectionChange"
												beforeOpenContextMenu="._templateEventHandlers.beforeOpenContextMenu($event, '{smartControlId>id}')"
												enableColumnFreeze="true" enableCellFilter="true" rowActionCount="{= ${parts: [ {path: 'listEntitySet>'}, {path: 'parameter>/settings/subPages/'}, {path: 'parameter>/manifest'}, {path: 'facet>Target/AnnotationPath'},{path: 'parameter>/isDraftEnabled'}], formatter: 'AH.getRowActionCountForDetailPage'}}"
												threshold="{= ${objectPageTableSettings>value/threshold} ? ${objectPageTableSettings>value/threshold} : '100'}"
												scrollThreshold="{= ${objectPageTableSettings>value/scrollThreshold} ? ${objectPageTableSettings>value/scrollThreshold} : '300'}">
												<core:Fragment fragmentName="sap.suite.ui.generic.template.ObjectPage.view.fragments.SmartTableUiTableCommons" type="XML"/>
												<table:columns>
													<core:ExtensionPoint name="AnalyticalTableColumnsExtension|{listEntitySet>name}|{path: 'facet>', formatter: 'AH.getStableIdPartFromFacet'}" />
													<template:with path="objectPageTableSettings>value" var="tableSettings">
														<core:Fragment fragmentName="sap.suite.ui.generic.template.fragments.AnalyticalTableColumns" type="XML"/>
													</template:with>
												</table:columns>
											</table:AnalyticalTable>
										</template:then>
										<!--Tree table implementation: Begins-->
										<template:elseif test="{= ${objectPageTableSettings>value/type} === 'TreeTable'}">
											<table:TreeTable id="{path: 'facet>', formatter: 'AH.getStableIdPartFromFacet'}::treeTable"
												visibleRowCountMode="Auto"
												rowSelectionChange="._templateEventHandlers.onSelectionChange"
												beforeOpenContextMenu="._templateEventHandlers.beforeOpenContextMenu($event, '{smartControlId>id}')"
												rowActionCount="{= ({parts: [{path: 'listEntitySet>'}, {path: 'parameter>/settings/subPages/'}], formatter: 'AH.hasSubObjectPage'} ? 1 : 0 )}"
												threshold="{= ${objectPageTableSettings>value/threshold} ? ${objectPageTableSettings>value/threshold} : '100'}"
												scrollThreshold="{= ${objectPageTableSettings>value/scrollThreshold} ? ${objectPageTableSettings>value/scrollThreshold} : '300'}">
												<core:Fragment fragmentName="sap.suite.ui.generic.template.ObjectPage.view.fragments.SmartTableUiTableCommons" type="XML"/>
												<table:columns>
													<core:ExtensionPoint name="TreeTableColumnsExtension|{listEntitySet>name}|{path: 'facet>', formatter: 'AH.getStableIdPartFromFacet'}"/>
													<template:with path="objectPageTableSettings>value" var="tableSettings">
														<core:Fragment fragmentName="sap.suite.ui.generic.template.fragments.TreeTableColumns" type="XML"/>
													</template:with>
												</table:columns>
											</table:TreeTable>
										</template:elseif>
										<!--Tree table implementation: Ends-->
										<template:elseif test="{= ${objectPageTableSettings>value/type} === 'GridTable'}">
											<table:Table id="{path: 'facet>', formatter: 'AH.getStableIdPartFromFacet'}::gridTable"
												enableColumnReordering="true" visibleRowCountMode="Auto"
												rowSelectionChange="._templateEventHandlers.onSelectionChange"
												beforeOpenContextMenu="._templateEventHandlers.beforeOpenContextMenu($event, '{smartControlId>id}')"
												enableColumnFreeze="true" enableCellFilter="true"
												rowActionCount="{= ${parts: [ {path: 'listEntitySet>'}, {path: 'parameter>/settings/subPages/'},{path: 'parameter>/manifest'}, {path: 'facet>Target/AnnotationPath'},{path: 'parameter>/isDraftEnabled'}], formatter: 'AH.getRowActionCountForDetailPage'}}"
												threshold="{= ${objectPageTableSettings>value/threshold} ? ${objectPageTableSettings>value/threshold} : '100'}"
												scrollThreshold="{= ${objectPageTableSettings>value/scrollThreshold} ? ${objectPageTableSettings>value/scrollThreshold} : '300'}">
												<core:Fragment fragmentName="sap.suite.ui.generic.template.ObjectPage.view.fragments.SmartTableUiTableCommons" type="XML"/>
												<table:columns>
													<core:ExtensionPoint name="GridTableColumnsExtension|{listEntitySet>name}|{path: 'facet>', formatter: 'AH.getStableIdPartFromFacet'}" />
													<template:with path="objectPageTableSettings>value" var="tableSettings">
														<core:Fragment fragmentName="sap.suite.ui.generic.template.fragments.GridTableColumns" type="XML"/>
													</template:with>
												</table:columns>
											</table:Table>
										</template:elseif>
										<template:else>
											<Table
												id="{path: 'facet>', formatter: 'AH.getStableIdPartFromFacet'}::responsiveTable"
												fixedLayout="{= ${appSettings>/enableAutoColumnWidthForSmartTable} ? undefined : !!${parameter>/settings/isWorklist} }"
												growing="true" growingThreshold="10"
												mode="{objectPageTableSettings>value/mode}"
												selectionChange="._templateEventHandlers.onSelectionChange"
												beforeOpenContextMenu="._templateEventHandlers.beforeOpenContextMenu($event, '{smartControlId>id}')"
												delete="._templateEventHandlers.deleteEntry"
												itemPress="._templateEventHandlers.onListNavigate"
												updateFinished="._templateEventHandlers.checkUpdateFinished"
												sticky="ColumnHeaders,HeaderToolbar,InfoToolbar,GroupHeaders"
												rememberSelections="false"
												multiSelectMode="{= (${objectPageTableSettings>value/multiSelect} &amp;&amp; ${objectPageTableSettings>value/selectAll}) ? 'SelectAll' : 'ClearAll'}">
												<template:with path="objectPageTableSettings>value" var="tableSettings">
													<core:Fragment fragmentName="sap.suite.ui.generic.template.fragments.SmartTableResponsiveTableCommons" type="XML" />
												</template:with>
											</Table>
										</template:else>
									</template:if>
								</st:SmartTable>
							</template:with>
						</template:with>
					</template:with>
				</template:with>
			</template:with>
		</template:with>
	</template:with>
</core:FragmentDefinition>
