<core:FragmentDefinition xmlns="sap.m"
						 xmlns:core="sap.ui.core"
						 xmlns:smarttable="sap.ui.comp.smarttable"
						 xmlns:table="sap.ui.table"
						 xmlns:plugins="sap.m.plugins"
	xmlns:customData="http://schemas.sap.com/sapui5/extension/sap.ui.core.CustomData/1"
	xmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"
	template:require="{
		AH: 'sap/suite/ui/generic/template/js/AnnotationHelper',
		AHModel: 'sap/ui/model/odata/AnnotationHelper',
		AHListReport: 'sap/suite/ui/generic/template/ListReport/AnnotationHelper',
		AHMultipleViews:'sap/suite/ui/generic/template/js/AnnotationHelperMultipleViews',
		StableIdHelper: 'sap/suite/ui/generic/template/js/StableIdHelper'}">

	<template:with path="entityType>com.sap.vocabularies.UI.v1.HeaderInfo" var="header">
		<template:with path="entitySet>dummy" var="facet">
			<template:with path="tableAnnotationPath>" helper="AH.searchForFirstSemKey_Title_Description" var="targetColumn">
				<template:with path="parameter>/" helper="StableIdHelper.preparePathForStableId" var="smartControlId">
					<template:if test="{= ${smartControlId>}.buildStableId({type: 'ListReportTable', subType: 'SmartTable', sQuickVariantKey: ${tabItem>key}})}" />
					<smarttable:SmartTable id="{smartControlId>id}" useDateRangeType="{= ${parameter>/settings/filterSettings/dateSettings/useDateRange} }"
						smartFilterId="{= ${parameter>/settings/quickVariantSelectionX} ? '' : 'listReportFilter'}"
						visible="{path: 'tabItem>', formatter: 'AHMultipleViews.getVisibleForTableTabs'}"
						initialise="._templateEventHandlers.onTableInit"
						persistencyKey="{= ${path: 'parameter>/settings/routeConfig/', formatter: 'AH.getPersistencyKeyForSmartTable'} }{= ${parameter>/settings/quickVariantSelectionX} ? ${path: 'tabItem>', formatter: 'AH.getSuffixFromIconTabFilterKey'} : ''}"
						header="{= !${parameter>/settings/quickVariantSelection/showCounts} ? ${path: 'header>TypeNamePlural', formatter: 'AHModel.format'} : '' }"
						beforeRebindTable="._templateEventHandlers.onBeforeRebindTable"
						beforeExport="._templateEventHandlers.onBeforeExport"
						useVariantManagement="{= !${parameter>/settings/variantManagementHidden} || (!${parameter>/settings/isWorklist} &amp;&amp; !${parameter>/settings/smartVariantManagement}) }"
						entitySet="{entitySet>name}"
						enableAutoColumnWidth="{= ${device>/system/phone} ? 'false' : ${appSettings>/enableAutoColumnWidthForSmartTable}}"
						demandPopin="{parameter>/templateSpecific/isResponsiveTable}"
						showDetailsButton="{parameter>/templateSpecific/isResponsiveTable}"
						showFullScreenButton="{device>/system/phone}"
						detailsButtonSetting="{= ${parameter>/templateSpecific/isResponsiveTable} ? 'None,Low,Medium' : null}"
						enableExport="{= !${parameter>/settings/isWorklist} }"
						smartVariant="{= (${parameter>/settings/smartVariantManagement} &amp;&amp; !${parameter>/settings/variantManagementHidden}) ? 'template::PageVariant' : null }"
						customData:p13nDialogSettings="{= (${parameter>/settings/smartVariantManagement} &amp;&amp; !${parameter>/settings/enableTableFilterInPageVariant} &amp;&amp; !${parameter>/settings/isWorklist}) ? '{filter:{visible:false}}' : '{filter:{visible:true}}'}"
						ignoreFromPersonalisation="{parts: [{path: 'entityType>com.sap.vocabularies.UI.v1.LineItem'}], formatter: 'AH.suppressP13NDuplicateColumns'}"
						showTablePersonalisation="true"
						placeToolbarInTable="{parameter>/templateSpecific/isResponsiveTable}"
						customizeConfig="{parts: [{path: 'entitySet>'}, {path: 'entitySet>dummy'}, {path: 'tableSettings>calculateWidthIncludingColumnHeader'}], formatter: 'AH.buildSmartTableCustomizeConfig'}"
						initialNoDataText="{= !${parameter>/settings/isWorklist} ? '{i18n>NODATA_SMARTTABLE_LR}' : '$NO_FILTERBAR'}"
						noData="{i18n>NOITEMS_LR_SMARTTABLE}"
						headerLevel="H3"
						useInfoToolbar="On">

						<smarttable:dependents>
							<core:Fragment fragmentName="sap.suite.ui.generic.template.listTemplates.fragments.TableCommands" type="XML"/>
						</smarttable:dependents>
						<smarttable:customData>
							<core:CustomData key="headerInfo" value="{path: 'header>', formatter: 'AH.buildHeaderInfoCustomData'}"/>
							<core:CustomData key="dateFormatSettings" value='\{"UTC":true,"style":"medium"\}' />
							<core:CustomData key="useUTCDateTime" value="true" />
							<core:CustomData key="defaultTextInEditModeSource" value="ValueList" />
							 <template:if test="{parts: [{path: 'entityType>'}, {path: 'tabItem>annotationPath'}], formatter: 'AH.tabItemHasPresentationVariant'}">
								<template:then>
									<core:CustomData key="lineItemQualifier"
										value="{parts: [{path: 'entityType>'}, {path: 'tabItem>annotationPath'}], formatter: 'AH.getPresentationVariantVisualisation'}" />
									<core:CustomData key="TemplateSortOrder"
										value="{parts: [{path: 'entityType>'}, {path: 'tabItem>annotationPath'}], formatter: 'AH.getPresentationVariantSortOrder'}" />
									<core:CustomData key="presentationVariantQualifier"
										value="{parts: [{path: 'entityType>'}, {path: 'tabItem>annotationPath'}], formatter: 'AH.getPresentationVariantQualifier'}" />
									<core:CustomData key="InitialExpansionLevel"
										value="{parts: [{path: 'entityType>'}, {path: 'tabItem>annotationPath'}], formatter: 'AH.getPresentationVariantInitialExpansionLevel'}" />
								</template:then>
								<template:else>
									<core:CustomData key="lineItemQualifier" value="{workingContext>lineItemQualifier}" />
									<core:CustomData key="presentationVariantQualifier"
											value="{parts: [{path: 'entityType>'}, {path: 'parameter>/settings/annotationPath'}], formatter: 'AH.getPresentationVariantQualifier'}" />
									<template:with path="parameter>/variables" helper="AH.getNewVariable" var="variant">
										<template:if test="{= ${variant>}.set(${parts: [{path: 'entityType>'}, {path: 'parameter>/settings/annotationPath'}], formatter: 'AHListReport.getValidPresentationVariantForSingleView'})}"/>
										<template:if test="{variant>SortOrder}">
											<core:CustomData key="TemplateSortOrder"
												value="{path: 'variant>SortOrder', formatter: 'AH.getSortOrder'}" />
										</template:if>
										<template:if test="{= ${variant>InitialExpansionLevel}}">
											<core:CustomData key="InitialExpansionLevel" value="{variant>InitialExpansionLevel/Int}" />
										</template:if>
									</template:with>
								</template:else>
							</template:if>
						</smarttable:customData>
						<smarttable:layoutData>
							<FlexItemData growFactor="1" />
						</smarttable:layoutData>
						<smarttable:semanticObjectController>
							<core:Fragment fragmentName="sap.suite.ui.generic.template.fragments.SemanticObjectControllerForDataField" type="XML"/>
						</smarttable:semanticObjectController>
						<smarttable:customToolbar>
							<core:Fragment fragmentName="sap.suite.ui.generic.template.ListReport.view.fragments.SmartTableToolbar" type="XML" />
						</smarttable:customToolbar>
						<smarttable:dataStateIndicator>
							<plugins:DataStateIndicator filter="._templateEventHandlers.dataStateFilter" close="._templateEventHandlers.dataStateClose" enableFiltering="true" />
						</smarttable:dataStateIndicator>
						<smarttable:copyProvider>
							<plugins:CopyProvider visible="{tableSettings>copy}" />
						</smarttable:copyProvider>
						<template:if test="{= ${tableSettings>type} === 'AnalyticalTable' }">
							<template:then>
								<table:AnalyticalTable	id="{:= ${parameter>/stableId}.getStableId({type: 'ListReportTable', subType: 'AnalyticalTable', sQuickVariantKey: ${tabItem>key}})}"
									visibleRowCountMode="Auto"
									showOverlay="{= ${_templPriv>/listReport/firstSelection} &amp;&amp; !${_templPriv>/generic/bDataAreShownInTable}}"
									class="{path: 'parameter>/settings/condensedTableLayout', formatter: 'AHListReport.setSizeCondensedCssClass'}"
									enableColumnReordering="true"
									rowSelectionChange="._templateEventHandlers.onSelectionChange"
									beforeOpenContextMenu="._templateEventHandlers.beforeOpenContextMenu($event, '{smartControlId>id}')"
									enableColumnFreeze="true" enableCellFilter="true"
									rowActionCount="{parts: [{path: 'entitySet>'}, {path: 'parameter>/settings/subPages/'}, {path: 'parameter>/manifest/'}, {path: 'parameter>/settings/'}], formatter: 'AH.getRowActionCountForListReport'}"
									threshold="{= ${tableSettings>threshold} ? ${tableSettings>threshold} : '100'}"
									scrollThreshold="{= ${tableSettings>scrollThreshold} ? ${tableSettings>scrollThreshold} : '300'}">
									<template:with path="entitySet>" var="listEntitySet">
										<core:Fragment fragmentName="sap.suite.ui.generic.template.listTemplates.fragments.SmartTableUiTableCommons" type="XML"/>
									</template:with>
									<template:with path="entitySet>" var="listEntitySet">
										<table:columns>
											<!-- In case of multiple views, extension points have to be separated
												 to allow providing stable ids in extensions - but for compatibility, also
												 keep old extension point -->
											<core:ExtensionPoint name="AnalyticalTableColumnsExtension|{parameter>/entitySet}" />
											<template:if test="{= ${tabItem>} }">
												<core:ExtensionPoint
													name="AnalyticalTableColumnsExtension|{parameter>/entitySet}|{path: 'tabItem>', formatter: 'AH.getIconTabFilterKey'}" />
											</template:if>
											<template:with path="tableAnnotationPath>" var="collection">
												<core:Fragment fragmentName="sap.suite.ui.generic.template.fragments.AnalyticalTableColumns" type="XML" />
											</template:with>
										</table:columns>
									</template:with>
								</table:AnalyticalTable>
							</template:then>
							<!--Tree table implementation: Begins -->
							<template:elseif test="{= ${tableSettings>type} === 'TreeTable'}">
								<table:TreeTable id="{:= ${parameter>/stableId}.getStableId({type: 'ListReportTable', subType: 'TreeTable', sQuickVariantKey: ${tabItem>key}})}"
									visibleRowCountMode="Auto"
									showOverlay="{= ${_templPriv>/listReport/firstSelection} &amp;&amp; !${_templPriv>/generic/bDataAreShownInTable}}"
									class="{path: 'parameter>/settings/condensedTableLayout', formatter: 'AHListReport.setSizeCondensedCssClass'}"
									rowSelectionChange="._templateEventHandlers.onSelectionChange"
									beforeOpenContextMenu="._templateEventHandlers.beforeOpenContextMenu($event, '{smartControlId>id}')"
									rowActionCount="{parts: [{path: 'entitySet>'}, {path: 'parameter>/settings/subPages/'}, {path: 'parameter>/manifest/'}, {path: 'parameter>/settings/'}], formatter: 'AH.getRowActionCountForListReport'}"
									threshold="{= ${tableSettings>threshold} ? ${tableSettings>threshold} : '100'}"
									scrollThreshold="{= ${tableSettings>scrollThreshold} ? ${tableSettings>scrollThreshold} : '300'}">
									<template:with path="entitySet>" var="listEntitySet">
										<core:Fragment fragmentName="sap.suite.ui.generic.template.listTemplates.fragments.SmartTableUiTableCommons" type="XML"/>
									</template:with>
									<template:with path="entitySet>" var="listEntitySet">
										<table:columns>
											<!-- In case of multiple views, extension points have to be separated
												 to allow providing stable ids in extensions - but for compatibility, also
												 keep old extension point -->
											<core:ExtensionPoint name="TreeTableColumnsExtension|{parameter>/entitySet}" />
											<template:if test="{tabItem>}">
												<core:ExtensionPoint
													name="TreeTableColumnsExtension|{parameter>/entitySet}|{path: 'tabItem>', formatter: 'AH.getIconTabFilterKey'}" />
											</template:if>
											<template:with path="tableAnnotationPath>" var="collection">
												<core:Fragment fragmentName="sap.suite.ui.generic.template.fragments.TreeTableColumns" type="XML" />
											</template:with>
										</table:columns>
									</template:with>
								</table:TreeTable>
							</template:elseif>
							<!--Tree table implementation: Ends -->
							<template:elseif test="{= ${tableSettings>type} === 'GridTable' }">
								<table:Table id="{:= ${parameter>/stableId}.getStableId({type: 'ListReportTable', subType: 'GridTable', sQuickVariantKey: ${tabItem>key}})}"
									visibleRowCountMode="Auto"
									showOverlay="{= ${_templPriv>/listReport/firstSelection} &amp;&amp; !${_templPriv>/generic/bDataAreShownInTable}}"
									class="{path: 'parameter>/settings/condensedTableLayout', formatter: 'AHListReport.setSizeCondensedCssClass'}"
									enableColumnReordering="true"
									rowSelectionChange="._templateEventHandlers.onSelectionChange"
									beforeOpenContextMenu="._templateEventHandlers.beforeOpenContextMenu($event, '{smartControlId>id}')"
									enableColumnFreeze="true" enableCellFilter="true"
									rowActionCount="{parts: [{path: 'entitySet>'}, {path: 'parameter>/settings/subPages/'}, {path: 'parameter>/manifest/'}, {path: 'parameter>/settings/'}], formatter: 'AH.getRowActionCountForListReport'}"
									threshold="{= ${tableSettings>threshold} ? ${tableSettings>threshold} : '100'}"
									scrollThreshold="{= ${tableSettings>scrollThreshold} ? ${tableSettings>scrollThreshold} : '300'}">
									<template:with path="entitySet>" var="listEntitySet">
										<core:Fragment fragmentName="sap.suite.ui.generic.template.listTemplates.fragments.SmartTableUiTableCommons" type="XML"/>
									</template:with>
									<template:with path="entitySet>" var="listEntitySet">
										<table:columns>
											<!-- In case of multiple views, extension points have to be separated
												 to allow providing stable ids in extensions - but for compatibility, also
												 keep old extension point -->
											<core:ExtensionPoint name="GridTableColumnsExtension|{parameter>/entitySet}" />
											<template:if test="{= ${tabItem>} }">
												<core:ExtensionPoint
													name="GridTableColumnsExtension|{parameter>/entitySet}|{path: 'tabItem>', formatter: 'AH.getIconTabFilterKey'}" />
											</template:if>
											<template:with path="tableAnnotationPath>" var="collection">
												<core:Fragment fragmentName="sap.suite.ui.generic.template.fragments.GridTableColumns" type="XML" />
											</template:with>
										</table:columns>
									</template:with>
								</table:Table>
							</template:elseif>
							<template:else >
								<Table id="{:= ${parameter>/stableId}.getStableId({type: 'ListReportTable', subType: 'ResponsiveTable', sQuickVariantKey: ${tabItem>key}})}"
									showOverlay="{= ${_templPriv>/listReport/firstSelection} &amp;&amp; !${_templPriv>/generic/bDataAreShownInTable}}"
									fixedLayout="{= ${appSettings>/enableAutoColumnWidthForSmartTable} ? undefined : !!${parameter>/settings/isWorklist} }"
									growing="true" growingScrollToLoad="true"
									sticky="ColumnHeaders,HeaderToolbar,InfoToolbar,GroupHeaders"
									mode="{tableSettings>mode}"
									selectionChange="._templateEventHandlers.onSelectionChange"
									beforeOpenContextMenu="._templateEventHandlers.beforeOpenContextMenu($event, '{smartControlId>id}')"
									delete="._templateEventHandlers.deleteEntry"
									itemPress="._templateEventHandlers.onListNavigate"
									rememberSelections="false"
									multiSelectMode="{= (${tableSettings>multiSelect} &amp;&amp; ${tableSettings>selectAll}) ? 'SelectAll' : 'ClearAll'}">
									<template:with path="entitySet>" var="listEntitySet">
										<template:with path="tableAnnotationPath>" var="collection">
											<core:Fragment fragmentName="sap.suite.ui.generic.template.fragments.SmartTableResponsiveTableCommons" type="XML" />
										</template:with>
									</template:with>
								</Table>
							</template:else>
						</template:if>
					</smarttable:SmartTable>
				</template:with>
			</template:with>
		</template:with>
	</template:with>
</core:FragmentDefinition>
