<core:FragmentDefinition xmlns="sap.m" xmlns:core="sap.ui.core"
	xmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"
	template:require="{AH: 'sap/suite/ui/generic/template/js/AnnotationHelper', ALPHelper: 'sap/suite/ui/generic/template/AnalyticalListPage/util/AnnotationHelper'}">

	<OverflowToolbar id="{:= ${parameter>/stableId}.getStableId({type: 'ALPChart', subType: 'SmartChartToolbar', sQuickVariantKey: ${tabItem>key}})}" design="Transparent">
		<ToolbarSpacer/>		
		<!-- Custom Action Breakout -->
		<template:repeat list="{parameter>/manifest/sap.ui5/extends/extensions/sap.ui.controllerExtensions/sap.suite.ui.generic.template.AnalyticalListPage.view.AnalyticalListPage/sap.ui.generic.app}" var="tmpEntitySet">
			<core:Fragment fragmentName="sap.suite.ui.generic.template.listTemplates.fragments.ChartActions" type="XML"/>
		</template:repeat>
		<!-- Annotated Action Buttons -->
		<template:with path="workingContext>chartPath" helper="ALPHelper.resolveMetaModelPath" var="chart">
			<template:with path="chart>Actions" var="collection">
				<core:Fragment fragmentName="sap.suite.ui.generic.template.fragments.AnnotatedActionButtons" type="XML"/>
				<customData>
					<core:CustomData
						key="annotatedActionIds"
						value="{parts: [{path: 'collection>'}, {path: 'facet>'}, {path: 'parameter>/settings/quickVariantSelectionX'}, {path: 'tabItem>'}, {path: 'chartItem>'}], formatter: 'AH.buildActionButtonsCustomData'}" />
				</customData>
			</template:with>
		</template:with>
		<!-- add Add to cards repository Button-->
		<template:if test="{= !${parameter>/settings/chartSettings/addCardtoInsightsHidden}}">
			<Button id="{:= ${parameter>/stableId}.getStableId({type: 'ALPChart', subType: 'AddCardtoInsights', sQuickVariantKey: ${tabItem>key}})}" icon="sap-icon://add-folder" press="._templateEventHandlers.onAddCardsToRepository" text="{i18n>ST_ADD_CARDS_TO_INSIGHTS}" enabled="{_templPriv>/generic/bDataAreShownInChart}"
				visible="{parts: [{path: 'parameter>/templateSpecific/bInsightsEnabled'}], formatter: 'AH.getInsightsButtonVisibility'}">
				<layoutData>
					<OverflowToolbarLayoutData priority="AlwaysOverflow"/>
				</layoutData>
			</Button>
		</template:if>
	</OverflowToolbar>

</core:FragmentDefinition>