<core:FragmentDefinition xmlns="sap.m" xmlns:core="sap.ui.core" xmlns:smartField="sap.ui.comp.smartfield" xmlns:table="sap.ui.table"
    xmlns:smartMultiInput="sap.ui.comp.smartmultiinput" xmlns:fe="sap.suite.ui.generic.template.genericUtilities"
	xmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"
    template:require="{AH: 'sap/suite/ui/generic/template/js/AnnotationHelper', AHModel: 'sap/ui/model/odata/AnnotationHelper', AHStream:'sap/suite/ui/generic/template/js/AnnotationHelperStreamSupport'}">

    <template:with path="dataField>Target" helper="AHModel.resolvePath" var="dataFieldTarget">
        <template:if test="{= (${dataField>RecordType} === 'com.sap.vocabularies.UI.v1.DataFieldWithIntentBasedNavigation')}">
            <!-- template for DataFieldWithIntentBasedNavigation -->
            <template:then>
                <fe:Link
                    text="{parts: [{path: 'dataField>'}, {path: 'listEntitySet>'}], formatter: 'AH.getLinkTextForDFwithIBN'}"
                    press="._templateEventHandlers.onDataFieldWithIntentBasedNavigation"
                    accessibleRole="Button"
                    wrapping="false">
                    <fe:customData>
                        <core:CustomData key="SemanticObject" value="{path: 'dataField>SemanticObject', formatter: 'AHModel.format'}" />
                        <core:CustomData key="Action" value="{path: 'dataField>Action', formatter: 'AHModel.format'}" />
                    </fe:customData>
                </fe:Link>
            </template:then>
            <template:elseif test="{parts: [{path: 'listEntitySet>'}, {path: 'dataField>'}], formatter: 'AHStream.checkIfEntityOrAssociationHasStreamEnabled'}">
                <template:with path="listEntityType>" helper="AHModel.resolvePath" var="entityType">
                    <core:Fragment fragmentName="sap.suite.ui.generic.template.fragments.FileUploader" type="XML"/>	
                </template:with>
            </template:elseif>	
            <template:elseif test="{= (${dataField>RecordType} === 'com.sap.vocabularies.UI.v1.DataField')}">
               <smartField:SmartField value="{path: 'dataField>Value', formatter: 'AHModel.simplePath'}" editable="false" contextEditable="false" fetchValueListReadOnly="false"
                    ariaLabelledBy="{columnId>id}">
                    <smartField:configuration>
                        <smartField:Configuration displayBehaviour="{parts: [{path: 'dataField>'}, {path: 'listEntitySet>'}, {path: 'dataFieldTarget>Data'}], formatter: 'AH.getTextArrangementForSCFields'}"/>
                    </smartField:configuration>
                    <template:if test="{= ${dataField>Criticality}}">
                        <smartField:controlProposal>
                            <smartField:ControlProposal>
                                <smartField:objectStatus>
                                    <smartField:ObjectStatus criticality="{= ${dataField>Criticality/EnumMember} ? ${dataField>Criticality/EnumMember} : ${path: 'dataField>Criticality', formatter: 'AHModel.simplePath'} }"
                                                            criticalityRepresentationType="{= (${dataField>CriticalityRepresentation/EnumMember} === 'com.sap.vocabularies.UI.v1.CriticalityRepresentationType/WithoutIcon') ? 'WithoutIcon' : 'WithIcon'}"
                                                            ariaLabelledBy="{columnId>id}"/>
                                </smartField:objectStatus>
                            </smartField:ControlProposal>
                        </smartField:controlProposal>
                    </template:if>
                </smartField:SmartField>
            </template:elseif>
            <!-- template for DataFieldForAction and DataFieldForIntentBasedNavigation -->
            <template:elseif test="{= (${dataField>RecordType} === 'com.sap.vocabularies.UI.v1.DataFieldForAction' || ${dataField>RecordType} === 'com.sap.vocabularies.UI.v1.DataFieldForIntentBasedNavigation') &amp;&amp; ${dataField>Inline/Bool} === 'true'}" >
                <core:Fragment fragmentName="sap.suite.ui.generic.template.fragments.InlineButton" type="XML" />
            </template:elseif>

            <!-- ObjectPage Self-Linking.  Template for DataFieldWithNavigationPath-->
            <template:elseif test="{= (${dataField>RecordType} === 'com.sap.vocabularies.UI.v1.DataFieldWithNavigationPath')}">
                <smartField:SmartField value="{path: 'dataField>Value', formatter: 'AH.getDataFieldValueSimplePath'}"
                     editable="{ui>/editable}" linkPress="._templateEventHandlers.onDataFieldWithNavigationPath">
                    <smartField:customData>
                        <core:CustomData key="Target" value="{dataField>Target/NavigationPropertyPath}" />
                    </smartField:customData>
                    <smartField:configuration>
					<smartField:Configuration displayBehaviour="{parts: [{path: 'dataField>'}, {path: 'listEntitySet>'}], formatter: 'AH.getTextArrangementForSmartControl'}" />
				</smartField:configuration>
                </smartField:SmartField>
            </template:elseif>

            <template:elseif test="{= ${dataField>RecordType} === 'com.sap.vocabularies.UI.v1.DataFieldForAnnotation'}">
                 <!--	Handle ContactPopUpOver	 -->
                <template:if test="{= ${dataField>Target/AnnotationPath}.indexOf('com.sap.vocabularies.Communication.v1.Contact') >= 0}">
                    <template:then>
                        <template:with path="dataField>Target" helper="AHModel.resolvePath" var="contact">
                        <VBox>
                            <fe:Link binding="{= ${ path: 'dataField>Target/AnnotationPath'}.indexOf('/') > -1 ? '{' + ${path: 'dataField>Target/AnnotationPath'}.slice(0, ${ path: 'dataField>Target/AnnotationPath'}.indexOf('/')) + '}' : null}"
                                        text="{path: 'contact>fn', formatter: 'AHModel.format'}"
                                        press="._templateEventHandlers.onContactDetails">
                                <fe:customData>
                                    <core:CustomData key="Location" value="SmartTable"/>
                                    <core:CustomData key="contactDetails" value="{= ${path: 'contact>', formatter: 'AH.getCustomDataForContactPopup'}}"/>
                                </fe:customData>
                            </fe:Link>
                        </VBox>
                        </template:with>
                    </template:then>
                    <template:elseif test="{= ${dataFieldTarget>Visualization/EnumMember} === 'com.sap.vocabularies.UI.v1.VisualizationType/Rating'}">
                      <template:with path="dataFieldTarget>Value" helper="AHModel.resolvePath" var="value">
							<!--Due to SideEffect issues the RatingIndicator is not editable -->
							<!-- Rating Indicator Control -->
						  <RatingIndicator
								enabled="true" editable="false" maxValue="{path: 'dataFieldTarget>TargetValue', formatter: 'AHModel.format'}"
								binding="{= ${ path: 'dataField>Target/AnnotationPath'}.indexOf('/') > -1 ? '{' + ${path: 'dataField>Target/AnnotationPath'}.slice(0, ${ path: 'dataField>Target/AnnotationPath'}.indexOf('/')) + '}' : null}"
								value="{path: 'dataFieldTarget>Value', formatter: 'AHModel.format'}" iconSize="16px" />
					   </template:with>
					</template:elseif>
                    <template:elseif test="{= ${dataFieldTarget>Visualization/EnumMember} === 'com.sap.vocabularies.UI.v1.VisualizationType/Progress'}">
                        <template:with path="dataFieldTarget>Value" helper="AHModel.resolvePath" var="value">
                        <!-- Progress Bar Control -->
                        <!-- The formatter 'RuntimeFormatters.formatDisplayValueForProgressIndicator' is used by 'AH.buildExpressionForProgressIndicatorDisplayValue' -->
                            <ProgressIndicator
                                        core:require="{RuntimeFormatters: 'sap/suite/ui/generic/template/js/RuntimeFormatters'}"
                                        binding="{= ${ path: 'dataField>Target/AnnotationPath'}.indexOf('/') > -1 ? '{' + ${path: 'dataField>Target/AnnotationPath'}.slice(0, ${ path: 'dataField>Target/AnnotationPath'}.indexOf('/')) + '}' : null}"
                                        percentValue="{ parts: [{path:'dataFieldTarget>'}, {path:'value>'}], formatter: 'AH.buildExpressionForProgressIndicatorPercentValue' }"
                                        displayValue="{ parts: [{path:'dataFieldTarget>'}, {path:'value>Org.OData.Measures.V1.Unit'}], formatter: 'AH.buildExpressionForProgressIndicatorDisplayValue'}"
                                        state="{path:'dataFieldTarget>', formatter: 'AH.buildExpressionForProgressIndicatorCriticality'}">
                                <customData>
                                    <core:CustomData key="Target" value="{= ${path: 'dataFieldTarget>TargetValue', formatter: 'AHModel.format'} }" />
                                    <core:CustomData key="UoM" value="{= ${path: 'value>Org.OData.Measures.V1.Unit', formatter: 'AHModel.format'} }" />
                                </customData>
                            </ProgressIndicator>
                        </template:with>
                    </template:elseif>
                </template:if>
            </template:elseif>
        </template:if>
       <template:if test="{= ${dataField>RecordType} === 'com.sap.vocabularies.UI.v1.DataField'}">
            <template:with path="dataField>Value" helper="AHModel.resolvePath" var="dataFieldValue">
                <template:if test="{parts: [{path: 'listEntitySet>'}, {path: 'dataField>'}], formatter: 'AH.checkMultiplicityForDataFieldAssociation'}">
                    <smartMultiInput:SmartMultiInput
                        visible="true"
                        editable="{tableobserver>/editable}"
                        enableODataSelect="true"
                        clientSideMandatoryCheck="false"
                        tokenUpdate="._templateEventHandlers.submitChangesForSmartMultiInput"
                        selectionFinish="._templateEventHandlers.submitChangesForSmartMultiInput"
                        modeToggled="._templateEventHandlers.onSmartFieldModeToggled($event, '{listEntitySet>name}')"
                        value="{path: 'dataField>Value', formatter: 'AHModel.simplePath'}"
                        textLabel="{path: 'dataField>', formatter: 'AH.getDataFieldLabel'}"
                        fetchValueListReadOnly="false"/>
                </template:if>
            </template:with>
	    </template:if>
    </template:with>

</core:FragmentDefinition>
