/*!
 * SAPUI5
    (c) Copyright 2009-2021 SAP SE. All rights reserved
  
 */
/*global sap*/
sap.ui.define(
[
"sap/sac/df/firefly/ff1500.dataprovider.api","sap/sac/df/firefly/ff4305.olap.model"
],
function(oFF)
{
"use strict";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES = function() {};
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.prototype = {};
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.prototype._ff_c = "FF5000_OLAP_DATAPROVIDER_RESOURCES";

oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_analysis_GetQueryMetadata_json = "manifests/actions/analysis/GetQueryMetadata.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_axis_MoveDimensionAfter_json = "manifests/actions/axis/MoveDimensionAfter.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_axis_MoveDimensionBefore_json = "manifests/actions/axis/MoveDimensionBefore.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_axis_MoveDimensionToAxis_json = "manifests/actions/axis/MoveDimensionToAxis.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_axis_MoveDimensionToColumns_json = "manifests/actions/axis/MoveDimensionToColumns.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_axis_MoveDimensionToRows_json = "manifests/actions/axis/MoveDimensionToRows.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_axis_RemoveDimension_json = "manifests/actions/axis/RemoveDimension.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_axis_SwapAxis_json = "manifests/actions/axis/SwapAxis.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_axis_SwapDimensions_json = "manifests/actions/axis/SwapDimensions.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_filter_AddNewElement_json = "manifests/actions/filter/AddNewElement.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_filter_AddNewOperation_json = "manifests/actions/filter/AddNewOperation.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_filter_AddSingleMemberFilter_json = "manifests/actions/filter/AddSingleMemberFilter.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_filter_CanElementHaveChildren_json = "manifests/actions/filter/CanElementHaveChildren.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_filter_CanElementHaveOperations_json = "manifests/actions/filter/CanElementHaveOperations.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_filter_ClearElementChildren_json = "manifests/actions/filter/ClearElementChildren.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_filter_GetElementChildren_json = "manifests/actions/filter/GetElementChildren.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_filter_GetElementType_json = "manifests/actions/filter/GetElementType.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_filter_GetLayers_json = "manifests/actions/filter/GetLayers.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_filter_IsOperation_json = "manifests/actions/filter/IsOperation.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_filter_RemoveElement_json = "manifests/actions/filter/RemoveElement.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_filter_RemoveSingleMemberFilter_json = "manifests/actions/filter/RemoveSingleMemberFilter.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_filter_SetElementField_json = "manifests/actions/filter/SetElementField.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_filter_SetElementHierarchy_json = "manifests/actions/filter/SetElementHierarchy.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_filter_SetNewRootElement_json = "manifests/actions/filter/SetNewRootElement.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_filter_SetOperationOperand_json = "manifests/actions/filter/SetOperationOperand.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_filter_SetOperationOperator_json = "manifests/actions/filter/SetOperationOperator.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_filter_SetOperationSign_json = "manifests/actions/filter/SetOperationSign.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_filter_SetSimpleEqualFilterList_json = "manifests/actions/filter/SetSimpleEqualFilterList.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_hierarchy_ActivateHierarchy_json = "manifests/actions/hierarchy/ActivateHierarchy.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_hierarchy_AssignHierarchy_json = "manifests/actions/hierarchy/AssignHierarchy.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_hierarchy_DeactivateHierarchy_json = "manifests/actions/hierarchy/DeactivateHierarchy.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_hierarchy_GetAssignedHierarchy_json = "manifests/actions/hierarchy/GetAssignedHierarchy.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_hierarchy_IsHierarchyActive_json = "manifests/actions/hierarchy/IsHierarchyActive.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_hierarchy_IsHierarchyAssigned_json = "manifests/actions/hierarchy/IsHierarchyAssigned.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_hierarchy_SetDrillLevel_json = "manifests/actions/hierarchy/SetDrillLevel.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_hierarchy_UnassignHierarchy_json = "manifests/actions/hierarchy/UnassignHierarchy.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_lifecycle_CloneDataProvider_json = "manifests/actions/lifecycle/CloneDataProvider.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_lifecycle_ConnectDataProviderToSystemSimple_json = "manifests/actions/lifecycle/ConnectDataProviderToSystemSimple.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_lifecycle_ConnectDataProvider_json = "manifests/actions/lifecycle/ConnectDataProvider.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_lifecycle_DisconnectDataProvider_json = "manifests/actions/lifecycle/DisconnectDataProvider.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_lifecycle_KillDataProvider_json = "manifests/actions/lifecycle/KillDataProvider.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_lifecycle_ReconnectDataProvider_json = "manifests/actions/lifecycle/ReconnectDataProvider.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_lifecycle_ReleaseDataProvider_json = "manifests/actions/lifecycle/ReleaseDataProvider.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_planning_BackupVersion_json = "manifests/actions/planning/BackupVersion.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_planning_CloseVersion_json = "manifests/actions/planning/CloseVersion.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_planning_DiscardNewValues_json = "manifests/actions/planning/DiscardNewValues.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_planning_DropVersion_json = "manifests/actions/planning/DropVersion.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_planning_EpmAddActionParameterLevelFieldName_json = "manifests/actions/planning/EpmAddActionParameterLevelFieldName.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_planning_EpmAddActionParameterMemberValueItem_json = "manifests/actions/planning/EpmAddActionParameterMemberValueItem.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_planning_EpmAddActionParameterValue_json = "manifests/actions/planning/EpmAddActionParameterValue.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_planning_EpmClearActionParameterLevelFieldNames_json = "manifests/actions/planning/EpmClearActionParameterLevelFieldNames.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_planning_EpmClearActionParameterValue_json = "manifests/actions/planning/EpmClearActionParameterValue.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_planning_EpmExecutePlanningAction_json = "manifests/actions/planning/EpmExecutePlanningAction.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_planning_EpmFetchPlanningAction_json = "manifests/actions/planning/EpmFetchPlanningAction.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_planning_EpmGetActionParameters_json = "manifests/actions/planning/EpmGetActionParameters.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_planning_EpmPushActionParameterMemberValue_json = "manifests/actions/planning/EpmPushActionParameterMemberValue.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_planning_EpmSetActionParameterHierarchyName_json = "manifests/actions/planning/EpmSetActionParameterHierarchyName.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_planning_InitializeEpmPlanning_json = "manifests/actions/planning/InitializeEpmPlanning.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_planning_InitializeEpmVersion_json = "manifests/actions/planning/InitializeEpmVersion.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_planning_RedoVersion_json = "manifests/actions/planning/RedoVersion.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_planning_ResetVersion_json = "manifests/actions/planning/ResetVersion.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_planning_SetPlanningMode_json = "manifests/actions/planning/SetPlanningMode.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_planning_SetPlanningVersionSettingsMode_json = "manifests/actions/planning/SetPlanningVersionSettingsMode.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_planning_TransferNewValues_json = "manifests/actions/planning/TransferNewValues.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_planning_UndoVersion_json = "manifests/actions/planning/UndoVersion.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_presentation_AddFieldToResultSet_json = "manifests/actions/presentation/AddFieldToResultSet.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_presentation_GetFieldContainerAvailableDisplays_json = "manifests/actions/presentation/GetFieldContainerAvailableDisplays.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_presentation_GetFieldContainerAvailableKeyDisplays_json = "manifests/actions/presentation/GetFieldContainerAvailableKeyDisplays.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_presentation_GetFieldContainerAvailableKeyViews_json = "manifests/actions/presentation/GetFieldContainerAvailableKeyViews.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_presentation_GetFieldContainerAvailableTextViews_json = "manifests/actions/presentation/GetFieldContainerAvailableTextViews.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_presentation_GetFieldContainerDefaultKeyDisplay_json = "manifests/actions/presentation/GetFieldContainerDefaultKeyDisplay.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_presentation_GetFieldContainerDefaultKeyView_json = "manifests/actions/presentation/GetFieldContainerDefaultKeyView.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_presentation_GetFieldContainerDefaultTextView_json = "manifests/actions/presentation/GetFieldContainerDefaultTextView.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_presentation_GetFieldContainerDisplay_json = "manifests/actions/presentation/GetFieldContainerDisplay.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_presentation_GetFieldContainerKeyDisplay_json = "manifests/actions/presentation/GetFieldContainerKeyDisplay.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_presentation_GetFieldContainerKeyView_json = "manifests/actions/presentation/GetFieldContainerKeyView.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_presentation_GetFieldContainerTextView_json = "manifests/actions/presentation/GetFieldContainerTextView.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_presentation_IsFieldContainerKeyViewActive_json = "manifests/actions/presentation/IsFieldContainerKeyViewActive.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_presentation_IsFieldContainerKeyViewDefault_json = "manifests/actions/presentation/IsFieldContainerKeyViewDefault.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_presentation_IsFieldContainerKeyViewSupported_json = "manifests/actions/presentation/IsFieldContainerKeyViewSupported.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_presentation_IsFieldContainerTextViewActive_json = "manifests/actions/presentation/IsFieldContainerTextViewActive.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_presentation_IsFieldContainerTextViewDefault_json = "manifests/actions/presentation/IsFieldContainerTextViewDefault.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_presentation_IsFieldContainerTextViewSupported_json = "manifests/actions/presentation/IsFieldContainerTextViewSupported.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_presentation_IsFieldInResultSet_json = "manifests/actions/presentation/IsFieldInResultSet.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_presentation_RemoveFieldFromResultSet_json = "manifests/actions/presentation/RemoveFieldFromResultSet.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_presentation_ResetFieldContainerKeyViewToDefault_json = "manifests/actions/presentation/ResetFieldContainerKeyViewToDefault.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_presentation_ResetFieldContainerTextViewToDefault_json = "manifests/actions/presentation/ResetFieldContainerTextViewToDefault.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_presentation_SetFieldContainerDisplay_json = "manifests/actions/presentation/SetFieldContainerDisplay.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_presentation_SetFieldContainerKeyDisplay_json = "manifests/actions/presentation/SetFieldContainerKeyDisplay.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_presentation_SetFieldContainerKeyView_json = "manifests/actions/presentation/SetFieldContainerKeyView.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_presentation_SetFieldContainerTextView_json = "manifests/actions/presentation/SetFieldContainerTextView.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_properties_GetProperty_json = "manifests/actions/properties/GetProperty.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_properties_ListAllProperties_json = "manifests/actions/properties/ListAllProperties.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_properties_SetProperty_json = "manifests/actions/properties/SetProperty.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_queryModel_GetAccountMembers_json = "manifests/actions/queryModel/GetAccountMembers.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_queryModel_GetDimensions_json = "manifests/actions/queryModel/GetDimensions.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_queryModel_GetMeasureMembers_json = "manifests/actions/queryModel/GetMeasureMembers.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_queryModel_GetSecondaryStructureMembers_json = "manifests/actions/queryModel/GetSecondaryStructureMembers.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_queryModel_SetDataSourceText_json = "manifests/actions/queryModel/SetDataSourceText.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_readmode_GetCurrentResultsetReadMode_json = "manifests/actions/readmode/GetCurrentResultsetReadMode.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_readmode_GetSupportedResultsetReadModes_json = "manifests/actions/readmode/GetSupportedResultsetReadModes.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_readmode_SetResultsetReadMode_json = "manifests/actions/readmode/SetResultsetReadMode.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_resultset_FetchNewResultSet_json = "manifests/actions/resultset/FetchNewResultSet.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_resultset_FetchNewTile_json = "manifests/actions/resultset/FetchNewTile.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_resultset_GetAsciiResultSet_json = "manifests/actions/resultset/GetAsciiResultSet.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_resultset_GetCsvResultSet_json = "manifests/actions/resultset/GetCsvResultSet.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_resultset_GetGridTile_json = "manifests/actions/resultset/GetGridTile.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_serialization_ExportInsightInformation_json = "manifests/actions/serialization/ExportInsightInformation.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_serialization_ExportRepository_json = "manifests/actions/serialization/ExportRepository.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_serialization_ImportRepository_json = "manifests/actions/serialization/ImportRepository.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_sort_ClearDimensionSort_json = "manifests/actions/sort/ClearDimensionSort.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_sort_ClearMeasureSort_json = "manifests/actions/sort/ClearMeasureSort.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_sort_SortByField_json = "manifests/actions/sort/SortByField.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_sort_SortByMeasure_json = "manifests/actions/sort/SortByMeasure.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_sort_SortByMemberKey_json = "manifests/actions/sort/SortByMemberKey.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_sort_SortByMemberText_json = "manifests/actions/sort/SortByMemberText.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_suppression_GetCurrentSuppressionType_json = "manifests/actions/suppression/GetCurrentSuppressionType.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_suppression_GetSupportedSuppressionTypes_json = "manifests/actions/suppression/GetSupportedSuppressionTypes.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_suppression_SetSuppressionType_json = "manifests/actions/suppression/SetSuppressionType.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_test_DpTestCustomAction_json = "manifests/actions/test/DpTestCustomAction.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_totals_GetTotalsPosition_json = "manifests/actions/totals/GetTotalsPosition.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_totals_GetTotalsVisibility_json = "manifests/actions/totals/GetTotalsVisibility.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_totals_SetTotalsPosition_json = "manifests/actions/totals/SetTotalsPosition.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_totals_SetTotalsVisibility_json = "manifests/actions/totals/SetTotalsVisibility.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_variable_CancelVariableChangeAction_json = "manifests/actions/variable/CancelVariableChangeAction.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_variable_EndVariableChangeAction_json = "manifests/actions/variable/EndVariableChangeAction.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_variable_StartVariableChangeAction_json = "manifests/actions/variable/StartVariableChangeAction.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_viz_AddDatapointVariableValue_json = "manifests/actions/viz/AddDatapointVariableValue.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_viz_AddMemberToTypedValueSelection_json = "manifests/actions/viz/AddMemberToTypedValueSelection.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_viz_AddVisualizationVariableValue_json = "manifests/actions/viz/AddVisualizationVariableValue.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_viz_ClearAllTypedValueSelections_json = "manifests/actions/viz/ClearAllTypedValueSelections.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_viz_ClearDatapointVariableValue_json = "manifests/actions/viz/ClearDatapointVariableValue.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_viz_ClearMemberRestrictionsForDimension_json = "manifests/actions/viz/ClearMemberRestrictionsForDimension.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_viz_ClearMemberRestrictions_json = "manifests/actions/viz/ClearMemberRestrictions.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_viz_ClearSelectionPathElementForDimension_json = "manifests/actions/viz/ClearSelectionPathElementForDimension.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_viz_ClearSelectionPath_json = "manifests/actions/viz/ClearSelectionPath.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_viz_ClearTypedValueSelectionsForType_json = "manifests/actions/viz/ClearTypedValueSelectionsForType.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_viz_ClearVisualizationVariableValue_json = "manifests/actions/viz/ClearVisualizationVariableValue.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_viz_CreateVisualizationDefinition_json = "manifests/actions/viz/CreateVisualizationDefinition.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_viz_GetActiveVisualizationDefinition_json = "manifests/actions/viz/GetActiveVisualizationDefinition.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_viz_GetAllVisualizationNames_json = "manifests/actions/viz/GetAllVisualizationNames.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_viz_GetAllVisualizations_json = "manifests/actions/viz/GetAllVisualizations.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_viz_GetChartColorPalette_json = "manifests/actions/viz/GetChartColorPalette.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_viz_GetChartOrientation_json = "manifests/actions/viz/GetChartOrientation.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_viz_GetDimensionsInChartFeed_json = "manifests/actions/viz/GetDimensionsInChartFeed.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_viz_GetMembersForDimensionInTypedValueSelection_json = "manifests/actions/viz/GetMembersForDimensionInTypedValueSelection.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_viz_GetMembersInTypedValueSelection_json = "manifests/actions/viz/GetMembersInTypedValueSelection.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_viz_GetOrCreateVisualizationDefinition_json = "manifests/actions/viz/GetOrCreateVisualizationDefinition.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_viz_GetVisualizationChartType_json = "manifests/actions/viz/GetVisualizationChartType.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_viz_MoveDimensionToChartFeedAtIndex_json = "manifests/actions/viz/MoveDimensionToChartFeedAtIndex.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_viz_MoveDimensionToChartFeed_json = "manifests/actions/viz/MoveDimensionToChartFeed.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_viz_PutMemberRestriction_json = "manifests/actions/viz/PutMemberRestriction.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_viz_PutSelectionPathElement_json = "manifests/actions/viz/PutSelectionPathElement.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_viz_RemoveDimensionFromChartFeed_json = "manifests/actions/viz/RemoveDimensionFromChartFeed.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_viz_RemoveMemberFromTypedValueSelection_json = "manifests/actions/viz/RemoveMemberFromTypedValueSelection.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_viz_RemoveMemberRestrictionsForMember_json = "manifests/actions/viz/RemoveMemberRestrictionsForMember.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_viz_RemoveVisualizationDefinition_json = "manifests/actions/viz/RemoveVisualizationDefinition.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_viz_SetActiveVisualizationDefinition_json = "manifests/actions/viz/SetActiveVisualizationDefinition.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_viz_SetChartColorPalette_json = "manifests/actions/viz/SetChartColorPalette.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_viz_SetChartOrientation_json = "manifests/actions/viz/SetChartOrientation.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_viz_SetChartStructure_json = "manifests/actions/viz/SetChartStructure.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_viz_SetDatapointVariableValue_json = "manifests/actions/viz/SetDatapointVariableValue.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_viz_SetKpiMemberDeviation_json = "manifests/actions/viz/SetKpiMemberDeviation.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_viz_SetKpiMemberException_json = "manifests/actions/viz/SetKpiMemberException.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_viz_SetKpiMemberMain_json = "manifests/actions/viz/SetKpiMemberMain.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_viz_SetKpiMemberTarget_json = "manifests/actions/viz/SetKpiMemberTarget.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_viz_SetKpiMemberTrend_json = "manifests/actions/viz/SetKpiMemberTrend.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_viz_SetKpiStructure_json = "manifests/actions/viz/SetKpiStructure.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_viz_SetVisualizationChartType_json = "manifests/actions/viz/SetVisualizationChartType.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_viz_SetVisualizationSynchronizationMode_json = "manifests/actions/viz/SetVisualizationSynchronizationMode.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_viz_SetVisualizationVariableValue_json = "manifests/actions/viz/SetVisualizationVariableValue.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_actions_viz_SynchronizeVisualizationDefinition_json = "manifests/actions/viz/SynchronizeVisualizationDefinition.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_programs_DataProvider_json = "manifests/programs/DataProvider.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_programs_SubSysDataProviderPool_json = "manifests/programs/SubSysDataProviderPool.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.PATH_manifests_programs_SubSysFileSystemfsdp_json = "manifests/programs/SubSysFileSystemfsdp.json";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_analysis_GetQueryMetadata_json = "ewogICJOYW1lIjogImdldFF1ZXJ5TWV0YWRhdGEiLAogICJEaXNwbGF5TmFtZSI6ICJHZXQgcXVlcnkgbWV0YWRhdGEiLAogICJEZXNjcmlwdGlvbiI6ICJHZXQgdGhlIG1ldGFkYXRhIGRlZmluaXRpb24gb2YgdGhlIGN1cnJlbnQgY29ubmVjdGVkIHF1ZXJ5IiwKICAiQ2F0ZWdvcnkiOiAiQW5hbHlzaXNBY3Rpb25zIiwKICAiU3RhZ2UiOiAiUHVibGlzaGVkIiwKICAiUmV2aWV3RGF0ZSI6ICIwMS8wNC8yMDI1IiwKICAiUGFyYW1ldGVycyI6IFsKICBdCn0K";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_axis_MoveDimensionAfter_json = "ewogICJOYW1lIjogIm1vdmVEaW1lbnNpb25BZnRlciIsCiAgIkRpc3BsYXlOYW1lIjogIk1vdmUgZGltZW5zaW9uIGFmdGVyIiwKICAiRGVzY3JpcHRpb24iOiAiUHV0IGEgZGltZW5zaW9uIG9uIHRoZSBheGlzIGJlaGluZCBhbm90aGVyIGRpbWVuc2lvbiIsCiAgIkNhdGVnb3J5IjogIkF4aXNBY3Rpb25zIiwKICAiU3RhZ2UiOiAiUHVibGlzaGVkIiwKICAiUmV2aWV3RGF0ZSI6ICIwMS8wNC8yMDI1IiwKICAiUGFyYW1ldGVycyI6IFsKICAgIHsKICAgICAgIk5hbWUiOiAiRGltZW5zaW9uTmFtZSIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJTb3VyY2UgZGltZW5zaW9uIG5hbWUiLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIHRlY2huaWNhbCBuYW1lIG9mIHRoZSBkaW1lbnNpb24gdG8gYmUgbW92ZWQiLAogICAgICAiVHlwZSI6ICJEaW1lbnNpb24iLAogICAgICAiUHJpbWl0aXZlVHlwZSI6ICJTdHJpbmciCiAgICB9LAogICAgewogICAgICAiTmFtZSI6ICJUYXJnZXREaW1lbnNpb25OYW1lIiwKICAgICAgIkRpc3BsYXlOYW1lIjogIlRhcmdldCBkaW1lbnNpb24gbmFtZSIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUaGUgdGVjaG5pY2FsIG5hbWUgb2YgdGhlIGRpbWVuc2lvbiBhZnRlciB3aGljaCB0aGUgc291cmNlIGRpbWVuc2lvbiBzaG91bGQgYmUgbW92ZWQiLAogICAgICAiVHlwZSI6ICJEaW1lbnNpb24iLAogICAgICAiUHJpbWl0aXZlVHlwZSI6ICJTdHJpbmciCiAgICB9CiAgXQp9Cg==";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_axis_MoveDimensionBefore_json = "ewogICJOYW1lIjogIm1vdmVEaW1lbnNpb25CZWZvcmUiLAogICJEaXNwbGF5TmFtZSI6ICJNb3ZlIGRpbWVuc2lvbiBiZWZvcmUiLAogICJEZXNjcmlwdGlvbiI6ICJQdXQgYSBkaW1lbnNpb24gb24gdGhlIGF4aXMgYmVmb3JlIGFub3RoZXIgZGltZW5zaW9uIiwKICAiQ2F0ZWdvcnkiOiAiQXhpc0FjdGlvbnMiLAogICJTdGFnZSI6ICJQdWJsaXNoZWQiLAogICJSZXZpZXdEYXRlIjogIjAxLzA0LzIwMjUiLAogICJQYXJhbWV0ZXJzIjogWwogICAgewogICAgICAiTmFtZSI6ICJEaW1lbnNpb25OYW1lIiwKICAgICAgIkRpc3BsYXlOYW1lIjogIlNvdXJjZSBkaW1lbnNpb24gbmFtZSIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUaGUgdGVjaG5pY2FsIG5hbWUgb2YgdGhlIGRpbWVuc2lvbiB0byBiZSBtb3ZlZCIsCiAgICAgICJUeXBlIjogIkRpbWVuc2lvbiIsCiAgICAgICJQcmltaXRpdmVUeXBlIjogIlN0cmluZyIKICAgIH0sCiAgICB7CiAgICAgICJOYW1lIjogIlRhcmdldERpbWVuc2lvbk5hbWUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiVGFyZ2V0IGRpbWVuc2lvbiBuYW1lIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSB0ZWNobmljYWwgbmFtZSBvZiB0aGUgZGltZW5zaW9uIGJlZm9yZSB3aGljaCB0aGUgc291cmNlIGRpbWVuc2lvbiBzaG91bGQgYmUgbW92ZWQiLAogICAgICAiVHlwZSI6ICJEaW1lbnNpb24iLAogICAgICAiUHJpbWl0aXZlVHlwZSI6ICJTdHJpbmciCiAgICB9CiAgXQp9Cg==";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_axis_MoveDimensionToAxis_json = "ewogICJOYW1lIjogIm1vdmVEaW1lbnNpb25Ub0F4aXMiLAogICJEaXNwbGF5TmFtZSI6ICJNb3ZlIGRpbWVuc2lvbiB0byBheGlzIiwKICAiRGVzY3JpcHRpb24iOiAiUHV0IGEgZGltZW5zaW9uIG9uIGEgY2VydGFpbiBheGlzIiwKICAiQ2F0ZWdvcnkiOiAiQXhpc0FjdGlvbnMiLAogICJTdGFnZSI6ICJQdWJsaXNoZWQiLAogICJSZXZpZXdEYXRlIjogIjAxLzA0LzIwMjUiLAogICJQYXJhbWV0ZXJzIjogWwogICAgewogICAgICAiTmFtZSI6ICJEaW1lbnNpb25OYW1lIiwKICAgICAgIkRpc3BsYXlOYW1lIjogIkRpbWVuc2lvbiBuYW1lIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSB0ZWNobmljYWwgbmFtZSBvZiB0aGUgZGltZW5zaW9uIHRvIGJlIG1vdmVkIiwKICAgICAgIlR5cGUiOiAiRGltZW5zaW9uIiwKICAgICAgIlByaW1pdGl2ZVR5cGUiOiAiU3RyaW5nIgogICAgfSwKICAgIHsKICAgICAgIk5hbWUiOiAiQXhpc1R5cGVOYW1lIiwKICAgICAgIkRpc3BsYXlOYW1lIjogIkF4aXMgdHlwZSBuYW1lIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSBuYW1lIG9mIHRoZSBheGlzIHR5cGUgdG8gd2hpY2ggdGhlIGRpbWVuc2lvbiBpcyBtb3ZlZCIsCiAgICAgICJUeXBlIjogIkF4aXNUeXBlIiwKICAgICAgIlByaW1pdGl2ZVR5cGUiOiAiUm93cywgQ29sdW1ucywgRnJlZSIKICAgIH0KICBdCn0K";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_axis_MoveDimensionToColumns_json = "ewogICJOYW1lIjogIm1vdmVEaW1lbnNpb25Ub0NvbHVtbnMiLAogICJEaXNwbGF5TmFtZSI6ICJNb3ZlIGRpbWVuc2lvbiB0byBjb2x1bW5zIiwKICAiRGVzY3JpcHRpb24iOiAiUHV0IGEgZGltZW5zaW9uIG9uIHRoZSBjb2x1bW5zIGF4aXMiLAogICJDYXRlZ29yeSI6ICJBeGlzQWN0aW9ucyIsCiAgIlN0YWdlIjogIlB1Ymxpc2hlZCIsCiAgIlJldmlld0RhdGUiOiAiMDEvMDQvMjAyNSIsCiAgIlBhcmFtZXRlcnMiOiBbCiAgICB7CiAgICAgICJOYW1lIjogIkRpbWVuc2lvbk5hbWUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiRGltZW5zaW9uIG5hbWUiLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIHRlY2huaWNhbCBuYW1lIG9mIHRoZSBkaW1lbnNpb24gdG8gYmUgbW92ZWQiLAogICAgICAiVHlwZSI6ICJEaW1lbnNpb24iLAogICAgICAiUHJpbWl0aXZlVHlwZSI6ICJTdHJpbmciCiAgICB9CiAgXQp9Cg==";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_axis_MoveDimensionToRows_json = "ewogICJOYW1lIjogIm1vdmVEaW1lbnNpb25Ub1Jvd3MiLAogICJEaXNwbGF5TmFtZSI6ICJNb3ZlIGRpbWVuc2lvbiB0byByb3dzIiwKICAiRGVzY3JpcHRpb24iOiAiUHV0IGEgZGltZW5zaW9uIG9uIHRoZSByb3dzIGF4aXMiLAogICJDYXRlZ29yeSI6ICJBeGlzQWN0aW9ucyIsCiAgIlN0YWdlIjogIlB1Ymxpc2hlZCIsCiAgIlJldmlld0RhdGUiOiAiMDEvMDQvMjAyNSIsCiAgIlBhcmFtZXRlcnMiOiBbCiAgICB7CiAgICAgICJOYW1lIjogIkRpbWVuc2lvbk5hbWUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiRGltZW5zaW9uIG5hbWUiLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIHRlY2huaWNhbCBuYW1lIG9mIHRoZSBkaW1lbnNpb24gdG8gYmUgbW92ZWQiLAogICAgICAiVHlwZSI6ICJEaW1lbnNpb24iLAogICAgICAiUHJpbWl0aXZlVHlwZSI6ICJTdHJpbmciCiAgICB9CiAgXQp9Cg==";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_axis_RemoveDimension_json = "ewogICJOYW1lIjogInJlbW92ZURpbWVuc2lvbiIsCiAgIkRpc3BsYXlOYW1lIjogIlJlbW92ZSBkaW1lbnNpb24iLAogICJEZXNjcmlwdGlvbiI6ICJQdXQgYSBkaW1lbnNpb24gb24gdGhlIGZyZWUgYXhpcyB0byByZW1vdmUgaXQgZnJvbSB0aGUgZ3JpZCIsCiAgIkNhdGVnb3J5IjogIkF4aXNBY3Rpb25zIiwKICAiU3RhZ2UiOiAiUHVibGlzaGVkIiwKICAiUmV2aWV3RGF0ZSI6ICIwMS8wNC8yMDI1IiwKICAiUGFyYW1ldGVycyI6IFsKICAgIHsKICAgICAgIk5hbWUiOiAiRGltZW5zaW9uTmFtZSIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJEaW1lbnNpb24gbmFtZSIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUaGUgdGVjaG5pY2FsIG5hbWUgb2YgdGhlIGRpbWVuc2lvbiB0byBiZSByZW1vdmVkIiwKICAgICAgIlR5cGUiOiAiRGltZW5zaW9uIiwKICAgICAgIlByaW1pdGl2ZVR5cGUiOiAiU3RyaW5nIgogICAgfQogIF0KfQo=";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_axis_SwapAxis_json = "ewogICJOYW1lIjogInN3YXBBeGlzIiwKICAiRGlzcGxheU5hbWUiOiAiU3dhcCBBeGlzIiwKICAiRGVzY3JpcHRpb24iOiAiU3dpdGNoaW5nIGRpbWVuc2lvbnMgZnJvbSBSb3dzIHRvIENvbHVtbnMgYW5kIHZpY2UgdmVyc2EiLAogICJDYXRlZ29yeSI6ICJBeGlzQWN0aW9ucyIsCiAgIlN0YWdlIjogIlB1Ymxpc2hlZCIsCiAgIlJldmlld0RhdGUiOiAiMDEvMDQvMjAyNSIsCiAgIlBhcmFtZXRlcnMiOiBbXQp9Cg==";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_axis_SwapDimensions_json = "ewogICJOYW1lIjogInN3YXBEaW1lbnNpb25zIiwKICAiRGlzcGxheU5hbWUiOiAiU3dhcCBkaW1lbnNpb25zIiwKICAiRGVzY3JpcHRpb24iOiAiU3dpdGNoZXMgdGhlIHBvc2l0aW9ucyBvZiB0d28gZGltZW5zaW9ucyIsCiAgIkNhdGVnb3J5IjogIkF4aXNBY3Rpb25zIiwKICAiU3RhZ2UiOiAiUHVibGlzaGVkIiwKICAiUmV2aWV3RGF0ZSI6ICIwMS8wNC8yMDI1IiwKICAiUGFyYW1ldGVycyI6IFsKICAgIHsKICAgICAgIk5hbWUiOiAiRGltZW5zaW9uTmFtZTEiLAogICAgICAiRGlzcGxheU5hbWUiOiAiRGltZW5zaW9uIG5hbWUgMSIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUaGUgZmlyc3QgZGltZW5zaW9uIHRvIGJlIHN3YXBwZWQgd2l0aCB0aGUgc2Vjb25kIiwKICAgICAgIlR5cGUiOiAiRGltZW5zaW9uIiwKICAgICAgIlByaW1pdGl2ZVR5cGUiOiAiU3RyaW5nIgogICAgfSwKICAgIHsKICAgICAgIk5hbWUiOiAiRGltZW5zaW9uTmFtZTIiLAogICAgICAiRGlzcGxheU5hbWUiOiAiRGltZW5zaW9uIG5hbWUgMiIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUaGUgc2Vjb25kIGRpbWVuc2lvbiB0byBiZSBzd2FwcGVkIHdpdGggdGhlIGZpcnN0IiwKICAgICAgIlR5cGUiOiAiRGltZW5zaW9uIiwKICAgICAgIlByaW1pdGl2ZVR5cGUiOiAiU3RyaW5nIgogICAgfQogIF0KfQo=";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_filter_AddNewElement_json = "ewogICJOYW1lIjogImFkZE5ld0VsZW1lbnQiLAogICJEaXNwbGF5TmFtZSI6ICJBZGQgbmV3IGVsZW1lbnQiLAogICJEZXNjcmlwdGlvbiI6ICJBZGQgYSBuZXcgZWxlbWVudCB0byB0aGUgc3BlY2lmaWVkIHBhcmVudCIsCiAgIkNhdGVnb3J5IjogIkZpbHRlckFjdGlvbnMiLAogICJTdGFnZSI6ICJQdWJsaXNoZWQiLAogICJSZXZpZXdEYXRlIjogIjA1LzA2LzIwMjUiLAogICJQYXJhbWV0ZXJzIjogWwogICAgewogICAgICAiTmFtZSI6ICJMYXllciIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJMYXllciIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUaGUgbmFtZSBvZiB0aGUgbGF5ZXIgZnJvbSB3aGljaCB0byBnZXQgdGhlIHBhcmVudCIsCiAgICAgICJUeXBlIjogIlN0cmluZyIsCiAgICAgICJQcmltaXRpdmVUeXBlIjogIlN0cmluZyIKICAgIH0sCiAgICB7CiAgICAgICJOYW1lIjogIlBhcmVudFVuaXF1ZUlkIiwKICAgICAgIkRpc3BsYXlOYW1lIjogIlBhcmVudCB1bmlxdWUgaWQiLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIHVuaXF1ZSBpZCBvZiB0aGUgcGFyZW50IHRvIHdoaWNoIHRvIGFkZCB0aGUgZWxlbWVudCIsCiAgICAgICJUeXBlIjogIlN0cmluZyIsCiAgICAgICJQcmltaXRpdmVUeXBlIjogIlN0cmluZyIKICAgIH0sCiAgICB7CiAgICAgICJOYW1lIjogIlR5cGUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiVHlwZSIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUaGUgdHlwZSBvZiBlbGVtZW50IHRvIGFkZCIsCiAgICAgICJUeXBlIjogIkZpbHRlckNvbXBvbmVudFR5cGUiLAogICAgICAiUHJpbWl0aXZlVHlwZSI6ICJTdHJpbmciCiAgICB9CiAgXQp9Cg==";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_filter_AddNewOperation_json = "ewogICJOYW1lIjogImFkZE5ld09wZXJhdGlvbiIsCiAgIkRpc3BsYXlOYW1lIjogIkFkZCBuZXcgb3BlcmF0aW9uIiwKICAiRGVzY3JpcHRpb24iOiAiQWRkIGEgbmV3IG9wZXJhdGlvbiB0byB0aGUgc3BlY2lmaWVkIHBhcmVudCIsCiAgIkNhdGVnb3J5IjogIkZpbHRlckFjdGlvbnMiLAogICJTdGFnZSI6ICJQdWJsaXNoZWQiLAogICJSZXZpZXdEYXRlIjogIjA1LzA2LzIwMjUiLAogICJQYXJhbWV0ZXJzIjogWwogICAgewogICAgICAiTmFtZSI6ICJMYXllciIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJMYXllciIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUaGUgbmFtZSBvZiB0aGUgbGF5ZXIgZnJvbSB3aGljaCB0byBnZXQgdGhlIHBhcmVudCIsCiAgICAgICJUeXBlIjogIlN0cmluZyIsCiAgICAgICJQcmltaXRpdmVUeXBlIjogIlN0cmluZyIKICAgIH0sCiAgICB7CiAgICAgICJOYW1lIjogIlBhcmVudFVuaXF1ZUlkIiwKICAgICAgIkRpc3BsYXlOYW1lIjogIlBhcmVudCB1bmlxdWUgaWQiLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIHVuaXF1ZSBpZCBvZiB0aGUgcGFyZW50IHRvIHdoaWNoIHRvIGFkZCB0aGUgb3BlcmF0aW9uIiwKICAgICAgIlR5cGUiOiAiU3RyaW5nIiwKICAgICAgIlByaW1pdGl2ZVR5cGUiOiAiU3RyaW5nIgogICAgfQogIF0KfQo=";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_filter_AddSingleMemberFilter_json = "ewogICJOYW1lIjogImFkZFNpbmdsZU1lbWJlckZpbHRlciIsCiAgIkRpc3BsYXlOYW1lIjogIkFkZCBzaW5nbGUgbWVtYmVyIGZpbHRlciIsCiAgIkRlc2NyaXB0aW9uIjogIkFkZCBhIGZpbHRlciBmb3IgYSBkaW1lbnNpb24gbWVtYmVyIiwKICAiQ2F0ZWdvcnkiOiAiRmlsdGVyQWN0aW9ucyIsCiAgIlN0YWdlIjogIlB1Ymxpc2hlZCIsCiAgIlJldmlld0RhdGUiOiAiMDEvMDQvMjAyNSIsCiAgIlBhcmFtZXRlcnMiOiBbCiAgICB7CiAgICAgICJOYW1lIjogIkRpbWVuc2lvbk5hbWUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiRGltZW5zaW9uIG5hbWUiLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIHRlY2huaWNhbCBuYW1lIG9mIHRoZSBkaW1lbnNpb24gdG8gYmUgZmlsdGVyZWQiLAogICAgICAiVHlwZSI6ICJEaW1lbnNpb24iLAogICAgICAiUHJpbWl0aXZlVHlwZSI6ICJTdHJpbmciCiAgICB9LAogICAgewogICAgICAiTmFtZSI6ICJDb21wYXJpc29uT3BlcmF0b3JOYW1lIiwKICAgICAgIkRpc3BsYXlOYW1lIjogIkNvbXBhcmlzb24gb3BlcmF0b3IgbmFtZSIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUaGUgbmFtZSBvZiB0aGUgY29tcGFyaXNvbiBvcGVyYXRvciB0byB1c2UgZm9yIHRoZSBmaWx0ZXIiLAogICAgICAiVHlwZSI6ICJDb21wYXJpc29uT3BlcmF0b3IiLAogICAgICAiUHJpbWl0aXZlVHlwZSI6ICJTdHJpbmciCiAgICB9LAogICAgewogICAgICAiTmFtZSI6ICJNZW1iZXJOYW1lIiwKICAgICAgIkRpc3BsYXlOYW1lIjogIk1lbWJlciBuYW1lIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSBuYW1lIG9mIHRoZSBtZW1iZXIgdG8gZmlsdGVyIGZvciIsCiAgICAgICJUeXBlIjogIkRpbWVuc2lvbk1lbWJlciIsCiAgICAgICJQcmltaXRpdmVUeXBlIjogIlN0cmluZyIKICAgIH0KICBdCn0K";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_filter_CanElementHaveChildren_json = "ewogICJOYW1lIjogImNhbkVsZW1lbnRIYXZlQ2hpbGRyZW4iLAogICJEaXNwbGF5TmFtZSI6ICJDYW4gZWxlbWVudCBoYXZlIGNoaWxkcmVuIiwKICAiRGVzY3JpcHRpb24iOiAiQ2hlY2sgd2hldGhlciBhbiBlbGVtZW50IGNhbiBoYXZlIGNoaWxkcmVuIiwKICAiQ2F0ZWdvcnkiOiAiRmlsdGVyQWN0aW9ucyIsCiAgIlN0YWdlIjogIlB1Ymxpc2hlZCIsCiAgIlJldmlld0RhdGUiOiAiMDUvMDYvMjAyNSIsCiAgIlBhcmFtZXRlcnMiOiBbCiAgICB7CiAgICAgICJOYW1lIjogIkxheWVyIiwKICAgICAgIkRpc3BsYXlOYW1lIjogIkxheWVyIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSBuYW1lIG9mIHRoZSBsYXllciBmcm9tIHdoaWNoIHRvIGdldCB0aGUgZWxlbWVudCIsCiAgICAgICJUeXBlIjogIlN0cmluZyIsCiAgICAgICJQcmltaXRpdmVUeXBlIjogIlN0cmluZyIKICAgIH0sCiAgICB7CiAgICAgICJOYW1lIjogIkVsZW1lbnRVbmlxdWVJZCIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJFbGVtZW50IHVuaXF1ZSBpZCIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUaGUgdW5pcXVlIGlkIG9mIHRoZSBlbGVtZW50IHRvIGNoZWNrIiwKICAgICAgIlR5cGUiOiAiU3RyaW5nIiwKICAgICAgIlByaW1pdGl2ZVR5cGUiOiAiU3RyaW5nIgogICAgfQogIF0KfQo=";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_filter_CanElementHaveOperations_json = "ewogICJOYW1lIjogImNhbkVsZW1lbnRIYXZlT3BlcmF0aW9ucyIsCiAgIkRpc3BsYXlOYW1lIjogIkNhbiBlbGVtZW50IGhhdmUgb3BlcmF0aW9ucyIsCiAgIkRlc2NyaXB0aW9uIjogIkNoZWNrIHdoZXRoZXIgYW4gZWxlbWVudCBjYW4gaGF2ZSBvcGVyYXRpb25zIiwKICAiQ2F0ZWdvcnkiOiAiRmlsdGVyQWN0aW9ucyIsCiAgIlN0YWdlIjogIlB1Ymxpc2hlZCIsCiAgIlJldmlld0RhdGUiOiAiMDUvMDYvMjAyNSIsCiAgIlBhcmFtZXRlcnMiOiBbCiAgICB7CiAgICAgICJOYW1lIjogIkxheWVyIiwKICAgICAgIkRpc3BsYXlOYW1lIjogIkxheWVyIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSBuYW1lIG9mIHRoZSBsYXllciBmcm9tIHdoaWNoIHRvIGdldCB0aGUgZWxlbWVudCIsCiAgICAgICJUeXBlIjogIlN0cmluZyIsCiAgICAgICJQcmltaXRpdmVUeXBlIjogIlN0cmluZyIKICAgIH0sCiAgICB7CiAgICAgICJOYW1lIjogIkVsZW1lbnRVbmlxdWVJZCIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJFbGVtZW50IHVuaXF1ZSBpZCIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUaGUgdW5pcXVlIGlkIG9mIHRoZSBlbGVtZW50IHRvIGNoZWNrIiwKICAgICAgIlR5cGUiOiAiU3RyaW5nIiwKICAgICAgIlByaW1pdGl2ZVR5cGUiOiAiU3RyaW5nIgogICAgfQogIF0KfQo=";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_filter_ClearElementChildren_json = "ewogICJOYW1lIjogImNsZWFyRWxlbWVudENoaWxkcmVuIiwKICAiRGlzcGxheU5hbWUiOiAiQ2xlYXIgZWxlbWVudCBjaGlsZHJlbiIsCiAgIkRlc2NyaXB0aW9uIjogIkNsZWFyIHRoZSBjaGlsZHJlbiBvZiBhIGZpbHRlciBlbGVtZW50IiwKICAiQ2F0ZWdvcnkiOiAiRmlsdGVyQWN0aW9ucyIsCiAgIlN0YWdlIjogIlB1Ymxpc2hlZCIsCiAgIlJldmlld0RhdGUiOiAiMDUvMDYvMjAyNSIsCiAgIlBhcmFtZXRlcnMiOiBbCiAgICB7CiAgICAgICJOYW1lIjogIkxheWVyIiwKICAgICAgIkRpc3BsYXlOYW1lIjogIkxheWVyIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSBuYW1lIG9mIHRoZSBsYXllciBmcm9tIHdoaWNoIHRvIGdldCB0aGUgcGFyZW50IiwKICAgICAgIlR5cGUiOiAiU3RyaW5nIiwKICAgICAgIlByaW1pdGl2ZVR5cGUiOiAiU3RyaW5nIgogICAgfSwKICAgIHsKICAgICAgIk5hbWUiOiAiUGFyZW50VW5pcXVlSWQiLAogICAgICAiRGlzcGxheU5hbWUiOiAiUGFyZW50IHVuaXF1ZSBpZCIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUaGUgdW5pcXVlIGlkIG9mIHRoZSBwYXJlbnQgZnJvbSB3aGljaCB0byBjbGVhciB0aGUgY2hpbGRyZW4iLAogICAgICAiVHlwZSI6ICJTdHJpbmciLAogICAgICAiUHJpbWl0aXZlVHlwZSI6ICJTdHJpbmciCiAgICB9CiAgXQp9Cg==";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_filter_GetElementChildren_json = "ewogICJOYW1lIjogImdldEVsZW1lbnRDaGlsZHJlbiIsCiAgIkRpc3BsYXlOYW1lIjogIkdldCBlbGVtZW50IGNoaWxkcmVuIiwKICAiRGVzY3JpcHRpb24iOiAiR2V0IHRoZSB1bmlxdWUgaWRzIG9mIHRoZSBjaGlsZHJlbiBvZiBhIGZpbHRlciBlbGVtZW50IiwKICAiQ2F0ZWdvcnkiOiAiRmlsdGVyQWN0aW9ucyIsCiAgIlN0YWdlIjogIlB1Ymxpc2hlZCIsCiAgIlJldmlld0RhdGUiOiAiMDUvMDYvMjAyNSIsCiAgIlBhcmFtZXRlcnMiOiBbCiAgICB7CiAgICAgICJOYW1lIjogIkxheWVyIiwKICAgICAgIkRpc3BsYXlOYW1lIjogIkxheWVyIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSBuYW1lIG9mIHRoZSBsYXllciBmcm9tIHdoaWNoIHRvIGdldCB0aGUgZWxlbWVudCIsCiAgICAgICJUeXBlIjogIlN0cmluZyIsCiAgICAgICJQcmltaXRpdmVUeXBlIjogIlN0cmluZyIKICAgIH0sCiAgICB7CiAgICAgICJOYW1lIjogIlBhcmVudFVuaXF1ZUlkIiwKICAgICAgIkRpc3BsYXlOYW1lIjogIlBhcmVudCB1bmlxdWUgaWQiLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIHVuaXF1ZSBpZCBvZiB0aGUgcGFyZW50IGZyb20gd2hpY2ggdG8gZ2V0IHRoZSBjaGlsZHJlbiIsCiAgICAgICJUeXBlIjogIlN0cmluZyIsCiAgICAgICJQcmltaXRpdmVUeXBlIjogIlN0cmluZyIKICAgIH0KICBdCn0K";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_filter_GetElementType_json = "ewogICJOYW1lIjogImdldEVsZW1lbnRUeXBlIiwKICAiRGlzcGxheU5hbWUiOiAiR2V0IGVsZW1lbnQgdHlwZSIsCiAgIkRlc2NyaXB0aW9uIjogIkdldCB0aGUgdHlwZSBvZiBhIGZpbHRlciBlbGVtZW50IiwKICAiQ2F0ZWdvcnkiOiAiRmlsdGVyQWN0aW9ucyIsCiAgIlN0YWdlIjogIlB1Ymxpc2hlZCIsCiAgIlJldmlld0RhdGUiOiAiMDUvMDYvMjAyNSIsCiAgIlBhcmFtZXRlcnMiOiBbCiAgICB7CiAgICAgICJOYW1lIjogIkxheWVyIiwKICAgICAgIkRpc3BsYXlOYW1lIjogIkxheWVyIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSBuYW1lIG9mIHRoZSBsYXllciBmcm9tIHdoaWNoIHRvIGdldCB0aGUgZWxlbWVudCIsCiAgICAgICJUeXBlIjogIlN0cmluZyIsCiAgICAgICJQcmltaXRpdmVUeXBlIjogIlN0cmluZyIKICAgIH0sCiAgICB7CiAgICAgICJOYW1lIjogIkVsZW1lbnRVbmlxdWVJZCIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJFbGVtZW50IHVuaXF1ZSBpZCIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUaGUgdW5pcXVlIGlkIG9mIHRoZSBlbGVtZW50IHRvIGdldCB0aGUgdHlwZSBmcm9tIiwKICAgICAgIlR5cGUiOiAiU3RyaW5nIiwKICAgICAgIlByaW1pdGl2ZVR5cGUiOiAiU3RyaW5nIgogICAgfQogIF0KfQo=";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_filter_GetLayers_json = "ewogICJOYW1lIjogImdldExheWVycyIsCiAgIkRpc3BsYXlOYW1lIjogIkdldCBsYXllcnMiLAogICJEZXNjcmlwdGlvbiI6ICJHZXQgdGhlIGF2YWlsYWJsZSBsYXllcnMgd2hlcmUgZmlsdGVycyBjYW4gYmUgc2V0IiwKICAiQ2F0ZWdvcnkiOiAiRmlsdGVyQWN0aW9ucyIsCiAgIlN0YWdlIjogIlB1Ymxpc2hlZCIsCiAgIlJldmlld0RhdGUiOiAiMDUvMDYvMjAyNSIsCiAgIlBhcmFtZXRlcnMiOiBbXQp9Cg==";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_filter_IsOperation_json = "ewogICJOYW1lIjogImlzT3BlcmF0aW9uIiwKICAiRGlzcGxheU5hbWUiOiAiSXMgb3BlcmF0aW9uIiwKICAiRGVzY3JpcHRpb24iOiAiQ2hlY2sgd2hldGhlciBhbiBlbGVtZW50IGlzIGFuIG9wZXJhdGlvbiIsCiAgIkNhdGVnb3J5IjogIkZpbHRlckFjdGlvbnMiLAogICJTdGFnZSI6ICJQdWJsaXNoZWQiLAogICJSZXZpZXdEYXRlIjogIjA1LzA2LzIwMjUiLAogICJQYXJhbWV0ZXJzIjogWwogICAgewogICAgICAiTmFtZSI6ICJMYXllciIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJMYXllciIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUaGUgbmFtZSBvZiB0aGUgbGF5ZXIgZnJvbSB3aGljaCB0byBnZXQgdGhlIGVsZW1lbnQiLAogICAgICAiVHlwZSI6ICJTdHJpbmciLAogICAgICAiUHJpbWl0aXZlVHlwZSI6ICJTdHJpbmciCiAgICB9LAogICAgewogICAgICAiTmFtZSI6ICJFbGVtZW50VW5pcXVlSWQiLAogICAgICAiRGlzcGxheU5hbWUiOiAiRWxlbWVudCB1bmlxdWUgaWQiLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIHVuaXF1ZSBpZCBvZiB0aGUgZWxlbWVudCB0byBjaGVjayIsCiAgICAgICJUeXBlIjogIlN0cmluZyIsCiAgICAgICJQcmltaXRpdmVUeXBlIjogIlN0cmluZyIKICAgIH0KICBdCn0K";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_filter_RemoveElement_json = "ewogICJOYW1lIjogInJlbW92ZUVsZW1lbnQiLAogICJEaXNwbGF5TmFtZSI6ICJSZW1vdmUgZWxlbWVudCIsCiAgIkRlc2NyaXB0aW9uIjogIlJlbW92ZSBhbiBlbGVtZW50IiwKICAiQ2F0ZWdvcnkiOiAiRmlsdGVyQWN0aW9ucyIsCiAgIlN0YWdlIjogIlB1Ymxpc2hlZCIsCiAgIlJldmlld0RhdGUiOiAiMDUvMDYvMjAyNSIsCiAgIlBhcmFtZXRlcnMiOiBbCiAgICB7CiAgICAgICJOYW1lIjogIkxheWVyIiwKICAgICAgIkRpc3BsYXlOYW1lIjogIkxheWVyIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSBuYW1lIG9mIHRoZSBsYXllciBmcm9tIHdoaWNoIHRvIGdldCB0aGUgZWxlbWVudCIsCiAgICAgICJUeXBlIjogIlN0cmluZyIsCiAgICAgICJQcmltaXRpdmVUeXBlIjogIlN0cmluZyIKICAgIH0sCiAgICB7CiAgICAgICJOYW1lIjogIkVsZW1lbnRVbmlxdWVJZCIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJFbGVtZW50IHVuaXF1ZSBpZCIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUaGUgdW5pcXVlIGlkIG9mIHRoZSBlbGVtZW50IHRvIHJlbW92ZSIsCiAgICAgICJUeXBlIjogIlN0cmluZyIsCiAgICAgICJQcmltaXRpdmVUeXBlIjogIlN0cmluZyIKICAgIH0KICBdCn0K";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_filter_RemoveSingleMemberFilter_json = "ewogICJOYW1lIjogInJlbW92ZVNpbmdsZU1lbWJlckZpbHRlciIsCiAgIkRpc3BsYXlOYW1lIjogIlJlbW92ZSBzaW5nbGUgbWVtYmVyIGZpbHRlciIsCiAgIkRlc2NyaXB0aW9uIjogIlJlbW92ZSBhIGZpbHRlciBmb3IgYSBkaW1lbnNpb24gbWVtYmVyIiwKICAiQ2F0ZWdvcnkiOiAiRmlsdGVyQWN0aW9ucyIsCiAgIlN0YWdlIjogIlB1Ymxpc2hlZCIsCiAgIlJldmlld0RhdGUiOiAiMDEvMDQvMjAyNSIsCiAgIlBhcmFtZXRlcnMiOiBbCiAgICB7CiAgICAgICJOYW1lIjogIkRpbWVuc2lvbk5hbWUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiRGltZW5zaW9uIG5hbWUiLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIHRlY2huaWNhbCBuYW1lIG9mIHRoZSBkaW1lbnNpb24gdG8gcmVtb3ZlIHRoZSBmaWx0ZXIgZnJvbSIsCiAgICAgICJUeXBlIjogIkRpbWVuc2lvbiIsCiAgICAgICJQcmltaXRpdmVUeXBlIjogIlN0cmluZyIKICAgIH0sCiAgICB7CiAgICAgICJOYW1lIjogIkNvbXBhcmlzb25PcGVyYXRvck5hbWUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiQ29tcGFyaXNvbiBvcGVyYXRvciBuYW1lIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSBuYW1lIG9mIHRoZSBjb21wYXJpc29uIG9wZXJhdG9yIG9mIHRoZSBmaWx0ZXIgdG8gYmUgcmVtb3ZlZCIsCiAgICAgICJUeXBlIjogIkNvbXBhcmlzb25PcGVyYXRvciIsCiAgICAgICJQcmltaXRpdmVUeXBlIjogIlN0cmluZyIKICAgIH0sCiAgICB7CiAgICAgICJOYW1lIjogIk1lbWJlck5hbWUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiTWVtYmVyIG5hbWUiLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIG5hbWUgb2YgdGhlIG1lbWJlciB3aG9zZSBmaWx0ZXIgc2hvdWxkIGJlIHJlbW92ZWQiLAogICAgICAiVHlwZSI6ICJEaW1lbnNpb25NZW1iZXIiLAogICAgICAiUHJpbWl0aXZlVHlwZSI6ICJTdHJpbmciCiAgICB9CiAgXQp9Cg==";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_filter_SetElementField_json = "ewogICJOYW1lIjogInNldEVsZW1lbnRGaWVsZCIsCiAgIkRpc3BsYXlOYW1lIjogIlNldCBlbGVtZW50IGZpZWxkIiwKICAiRGVzY3JpcHRpb24iOiAiU2V0IHRoZSBmaWVsZCB0byBmaWx0ZXIgb24gYW4gZWxlbWVudCIsCiAgIkNhdGVnb3J5IjogIkZpbHRlckFjdGlvbnMiLAogICJTdGFnZSI6ICJQdWJsaXNoZWQiLAogICJSZXZpZXdEYXRlIjogIjA1LzA2LzIwMjUiLAogICJQYXJhbWV0ZXJzIjogWwogICAgewogICAgICAiTmFtZSI6ICJMYXllciIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJMYXllciIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUaGUgbmFtZSBvZiB0aGUgbGF5ZXIgZnJvbSB3aGljaCB0byBnZXQgdGhlIGVsZW1lbnQiLAogICAgICAiVHlwZSI6ICJTdHJpbmciLAogICAgICAiUHJpbWl0aXZlVHlwZSI6ICJTdHJpbmciCiAgICB9LAogICAgewogICAgICAiTmFtZSI6ICJFbGVtZW50VW5pcXVlSWQiLAogICAgICAiRGlzcGxheU5hbWUiOiAiRWxlbWVudCB1bmlxdWUgaWQiLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIHVuaXF1ZSBpZCBvZiB0aGUgb3BlcmF0aW9uIG9uIHdoaWNoIHRvIHNldCB0aGUgZmllbGQiLAogICAgICAiVHlwZSI6ICJTdHJpbmciLAogICAgICAiUHJpbWl0aXZlVHlwZSI6ICJTdHJpbmciCiAgICB9LAogICAgewogICAgICAiTmFtZSI6ICJGaWVsZE5hbWUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiRmllbGQgbmFtZSIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUaGUgbmFtZSBvZiB0aGUgZmllbGQgdG8gc2V0IiwKICAgICAgIlR5cGUiOiAiU3RyaW5nIiwKICAgICAgIlByaW1pdGl2ZVR5cGUiOiAiU3RyaW5nIgogICAgfQogIF0KfQo=";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_filter_SetElementHierarchy_json = "ewogICJOYW1lIjogInNldEVsZW1lbnRIaWVyYXJjaHkiLAogICJEaXNwbGF5TmFtZSI6ICJTZXQgZWxlbWVudCBoaWVyYXJjaHkiLAogICJEZXNjcmlwdGlvbiI6ICJTZXQgdGhlIGhpZXJhcmNoeSB0byBmaWx0ZXIgb24gYW4gZWxlbWVudCIsCiAgIkNhdGVnb3J5IjogIkZpbHRlckFjdGlvbnMiLAogICJTdGFnZSI6ICJQdWJsaXNoZWQiLAogICJSZXZpZXdEYXRlIjogIjA1LzA2LzIwMjUiLAogICJQYXJhbWV0ZXJzIjogWwogICAgewogICAgICAiTmFtZSI6ICJMYXllciIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJMYXllciIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUaGUgbmFtZSBvZiB0aGUgbGF5ZXIgZnJvbSB3aGljaCB0byBnZXQgdGhlIGVsZW1lbnQiLAogICAgICAiVHlwZSI6ICJTdHJpbmciLAogICAgICAiUHJpbWl0aXZlVHlwZSI6ICJTdHJpbmciCiAgICB9LAogICAgewogICAgICAiTmFtZSI6ICJFbGVtZW50VW5pcXVlSWQiLAogICAgICAiRGlzcGxheU5hbWUiOiAiRWxlbWVudCB1bmlxdWUgaWQiLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIHVuaXF1ZSBpZCBvZiB0aGUgb3BlcmF0aW9uIG9uIHdoaWNoIHRvIHNldCB0aGUgZmllbGQiLAogICAgICAiVHlwZSI6ICJTdHJpbmciLAogICAgICAiUHJpbWl0aXZlVHlwZSI6ICJTdHJpbmciCiAgICB9LAogICAgewogICAgICAiTmFtZSI6ICJIaWVyYXJjaHlOYW1lIiwKICAgICAgIkRpc3BsYXlOYW1lIjogIkhpZXJhcmNoeSBuYW1lIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSBuYW1lIG9mIHRoZSBoaWVyYXJjaHkgdG8gc2V0IiwKICAgICAgIlR5cGUiOiAiU3RyaW5nIiwKICAgICAgIlByaW1pdGl2ZVR5cGUiOiAiU3RyaW5nIgogICAgfQogIF0KfQo=";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_filter_SetNewRootElement_json = "ewogICJOYW1lIjogInNldE5ld1Jvb3RFbGVtZW50IiwKICAiRGlzcGxheU5hbWUiOiAiU2V0IG5ldyByb290IGVsZW1lbnQiLAogICJEZXNjcmlwdGlvbiI6ICJTZXQgYSBuZXcgcm9vdCBlbGVtZW50IG9uIHRoZSBzcGVjaWZpZWQgbGF5ZXIiLAogICJDYXRlZ29yeSI6ICJGaWx0ZXJBY3Rpb25zIiwKICAiU3RhZ2UiOiAiUHVibGlzaGVkIiwKICAiUmV2aWV3RGF0ZSI6ICIwNS8wNi8yMDI1IiwKICAiUGFyYW1ldGVycyI6IFsKICAgIHsKICAgICAgIk5hbWUiOiAiTGF5ZXIiLAogICAgICAiRGlzcGxheU5hbWUiOiAiTGF5ZXIiLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIG5hbWUgb2YgdGhlIGxheWVyIGZyb20gd2hpY2ggdG8gc2V0IHRoZSByb290IiwKICAgICAgIlR5cGUiOiAiU3RyaW5nIiwKICAgICAgIlByaW1pdGl2ZVR5cGUiOiAiU3RyaW5nIgogICAgfSwKICAgIHsKICAgICAgIk5hbWUiOiAiVHlwZSIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJUeXBlIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSB0eXBlIG9mIGVsZW1lbnQgdG8gc2V0IGFzIHJvb3QiLAogICAgICAiVHlwZSI6ICJGaWx0ZXJDb21wb25lbnRUeXBlIiwKICAgICAgIlByaW1pdGl2ZVR5cGUiOiAiU3RyaW5nIgogICAgfQogIF0KfQo=";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_filter_SetOperationOperand_json = "ewogICJOYW1lIjogInNldE9wZXJhdGlvbk9wZXJhbmQiLAogICJEaXNwbGF5TmFtZSI6ICJTZXQgb3BlcmF0aW9uIG9wZXJhbmQiLAogICJEZXNjcmlwdGlvbiI6ICJTZXQgdGhlIG9wZXJhbmQgb2YgYW4gb3BlcmF0aW9uIiwKICAiQ2F0ZWdvcnkiOiAiRmlsdGVyQWN0aW9ucyIsCiAgIlN0YWdlIjogIlB1Ymxpc2hlZCIsCiAgIlJldmlld0RhdGUiOiAiMDUvMDYvMjAyNSIsCiAgIlBhcmFtZXRlcnMiOiBbCiAgICB7CiAgICAgICJOYW1lIjogIkxheWVyIiwKICAgICAgIkRpc3BsYXlOYW1lIjogIkxheWVyIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSBuYW1lIG9mIHRoZSBsYXllciBmcm9tIHdoaWNoIHRvIGdldCB0aGUgb3BlcmF0aW9uIiwKICAgICAgIlR5cGUiOiAiU3RyaW5nIiwKICAgICAgIlByaW1pdGl2ZVR5cGUiOiAiU3RyaW5nIgogICAgfSwKICAgIHsKICAgICAgIk5hbWUiOiAiT3BlcmF0aW9uVW5pcXVlSWQiLAogICAgICAiRGlzcGxheU5hbWUiOiAiT3BlcmF0aW9uIHVuaXF1ZSBpZCIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUaGUgdW5pcXVlIGlkIG9mIHRoZSBvcGVyYXRpb24gb24gd2hpY2ggdG8gc2V0IHRoZSBvcGVyYW5kIiwKICAgICAgIlR5cGUiOiAiU3RyaW5nIiwKICAgICAgIlByaW1pdGl2ZVR5cGUiOiAiU3RyaW5nIgogICAgfSwKICAgIHsKICAgICAgIk5hbWUiOiAiSW5kZXgiLAogICAgICAiRGlzcGxheU5hbWUiOiAiSW5kZXgiLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIGluZGV4IHBvc2l0aW9uIG9mIHRoZSBvcGVyYW5kIHRvIHNldCIsCiAgICAgICJUeXBlIjogIkludGVnZXIiLAogICAgICAiUHJpbWl0aXZlVHlwZSI6ICJJbnRlZ2VyIgogICAgfSwKICAgIHsKICAgICAgIk5hbWUiOiAiVmFsdWUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiVmFsdWUiLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIHZhbHVlIHRvIHNldCBhcyBvcGVyYW5kIiwKICAgICAgIlR5cGUiOiAiU3RyaW5nIiwKICAgICAgIlByaW1pdGl2ZVR5cGUiOiAiU3RyaW5nIgogICAgfQogIF0KfQo=";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_filter_SetOperationOperator_json = "ewogICJOYW1lIjogInNldE9wZXJhdGlvbk9wZXJhdG9yIiwKICAiRGlzcGxheU5hbWUiOiAiU2V0IG9wZXJhdGlvbiBvcGVyYXRvciIsCiAgIkRlc2NyaXB0aW9uIjogIlNldCB0aGUgb3BlcmF0b3Igb2YgYW4gb3BlcmF0aW9uIiwKICAiQ2F0ZWdvcnkiOiAiRmlsdGVyQWN0aW9ucyIsCiAgIlN0YWdlIjogIlB1Ymxpc2hlZCIsCiAgIlJldmlld0RhdGUiOiAiMDUvMDYvMjAyNSIsCiAgIlBhcmFtZXRlcnMiOiBbCiAgICB7CiAgICAgICJOYW1lIjogIkxheWVyIiwKICAgICAgIkRpc3BsYXlOYW1lIjogIkxheWVyIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSBuYW1lIG9mIHRoZSBsYXllciBmcm9tIHdoaWNoIHRvIGdldCB0aGUgb3BlcmF0aW9uIiwKICAgICAgIlR5cGUiOiAiU3RyaW5nIiwKICAgICAgIlByaW1pdGl2ZVR5cGUiOiAiU3RyaW5nIgogICAgfSwKICAgIHsKICAgICAgIk5hbWUiOiAiT3BlcmF0aW9uVW5pcXVlSWQiLAogICAgICAiRGlzcGxheU5hbWUiOiAiT3BlcmF0aW9uIHVuaXF1ZSBpZCIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUaGUgdW5pcXVlIGlkIG9mIHRoZSBvcGVyYXRpb24gb24gd2hpY2ggdG8gc2V0IHRoZSBvcGVyYXRvciIsCiAgICAgICJUeXBlIjogIlN0cmluZyIsCiAgICAgICJQcmltaXRpdmVUeXBlIjogIlN0cmluZyIKICAgIH0sCiAgICB7CiAgICAgICJOYW1lIjogIkNvbXBhcmlzb25PcGVyYXRvck5hbWUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiQ29tcGFyaXNvbiBvcGVyYXRvciBuYW1lIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSBuYW1lIG9mIHRoZSBjb21wYXJpc29uIG9wZXJhdG9yIHRvIHVzZSBmb3IgdGhlIGZpbHRlciIsCiAgICAgICJUeXBlIjogIkNvbXBhcmlzb25PcGVyYXRvciIsCiAgICAgICJQcmltaXRpdmVUeXBlIjogIlN0cmluZyIKICAgIH0KICBdCn0K";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_filter_SetOperationSign_json = "ewogICJOYW1lIjogInNldE9wZXJhdGlvblNpZ24iLAogICJEaXNwbGF5TmFtZSI6ICJTZXQgb3BlcmF0aW9uIHNpZ24iLAogICJEZXNjcmlwdGlvbiI6ICJTZXQgdGhlIHNpZ24gb2YgYW4gb3BlcmF0aW9uIiwKICAiQ2F0ZWdvcnkiOiAiRmlsdGVyQWN0aW9ucyIsCiAgIlN0YWdlIjogIlB1Ymxpc2hlZCIsCiAgIlJldmlld0RhdGUiOiAiMDUvMDYvMjAyNSIsCiAgIlBhcmFtZXRlcnMiOiBbCiAgICB7CiAgICAgICJOYW1lIjogIkxheWVyIiwKICAgICAgIkRpc3BsYXlOYW1lIjogIkxheWVyIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSBuYW1lIG9mIHRoZSBsYXllciBmcm9tIHdoaWNoIHRvIGdldCB0aGUgb3BlcmF0aW9uIiwKICAgICAgIlR5cGUiOiAiU3RyaW5nIiwKICAgICAgIlByaW1pdGl2ZVR5cGUiOiAiU3RyaW5nIgogICAgfSwKICAgIHsKICAgICAgIk5hbWUiOiAiT3BlcmF0aW9uVW5pcXVlSWQiLAogICAgICAiRGlzcGxheU5hbWUiOiAiT3BlcmF0aW9uIHVuaXF1ZSBpZCIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUaGUgdW5pcXVlIGlkIG9mIHRoZSBvcGVyYXRpb24gb24gd2hpY2ggdG8gc2V0IHRoZSBzaWduIiwKICAgICAgIlR5cGUiOiAiU3RyaW5nIiwKICAgICAgIlByaW1pdGl2ZVR5cGUiOiAiU3RyaW5nIgogICAgfSwKICAgIHsKICAgICAgIk5hbWUiOiAiU2lnbk5hbWUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiU2lnbiBuYW1lIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSBuYW1lIG9mIHRoZSBzaWduIHRvIHVzZSBmb3IgdGhlIGZpbHRlciIsCiAgICAgICJUeXBlIjogIlNldFNpZ24iLAogICAgICAiUHJpbWl0aXZlVHlwZSI6ICJTdHJpbmciCiAgICB9CiAgXQp9Cg==";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_filter_SetSimpleEqualFilterList_json = "ewogICJOYW1lIjogInNldFNpbXBsZUVxdWFsRmlsdGVyTGlzdCIsCiAgIkRpc3BsYXlOYW1lIjogIlNldCBzaW1wbGUgZXF1YWwgZmlsdGVyIGxpc3QiLAogICJEZXNjcmlwdGlvbiI6ICJTZXQgYSBzaW1wbGUgbGlzdCBvZiBtZW1iZXIgbmFtZXMgYXMgYW4gZXF1YWwgZmlsdGVyIiwKICAiQ2F0ZWdvcnkiOiAiRmlsdGVyQWN0aW9ucyIsCiAgIlN0YWdlIjogIlB1Ymxpc2hlZCIsCiAgIlJldmlld0RhdGUiOiAiMDEvMDQvMjAyNSIsCiAgIlBhcmFtZXRlcnMiOiBbCiAgICB7CiAgICAgICJOYW1lIjogIkRpbWVuc2lvbk5hbWUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiRGltZW5zaW9uIG5hbWUiLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIHRlY2huaWNhbCBuYW1lIG9mIHRoZSBkaW1lbnNpb24gdG8gc2V0IHRoZSBmaWx0ZXIgb24iLAogICAgICAiVHlwZSI6ICJEaW1lbnNpb24iLAogICAgICAiUHJpbWl0aXZlVHlwZSI6ICJTdHJpbmciCiAgICB9LAogICAgewogICAgICAiTmFtZSI6ICJWYWx1ZUxpc3QiLAogICAgICAiRGlzcGxheU5hbWUiOiAiVmFsdWUgbGlzdCIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUaGUgbGlzdCBvZiBtZW1iZXIgbmFtZXMiLAogICAgICAiVHlwZSI6ICJBcnJheSIKICAgIH0sCiAgICB7CiAgICAgICJOYW1lIjogIkhpZXJhcmNoeU5hbWUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiSGllcmFyY2h5IG5hbWUiLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIG5hbWUgb2YgdGhlIGhpZXJhcmNoeSB0byBiZSB1c2VkIGJ5IHRoZSBmaWx0ZXIiLAogICAgICAiVHlwZSI6ICJTdHJpbmciCiAgICB9LAogICAgewogICAgICAiTmFtZSI6ICJVc2VFeGNsdWRlIiwKICAgICAgIkRpc3BsYXlOYW1lIjogIlVzZSBleGNsdWRlIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIldoZXRoZXIgdGhlIGxpc3Qgc2hvdWxkIGJlIHVzZWQgdG8gZXhjbHVkZSB0aGUgbWVtYmVycyIsCiAgICAgICJUeXBlIjogIkJvb2xlYW4iCiAgICB9CiAgXQp9Cg==";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_hierarchy_ActivateHierarchy_json = "ewogICJOYW1lIjogImFjdGl2YXRlSGllcmFyY2h5IiwKICAiRGlzcGxheU5hbWUiOiAiQWN0aXZhdGUgaGllcmFyY2h5IiwKICAiRGVzY3JpcHRpb24iOiAiQWN0aXZhdGUgdGhlIGhpZXJhcmNoeSBvZiBhIGRpbWVuc2lvbiBhZnRlciBhc3NpZ25pbmcgb25lIiwKICAiQ2F0ZWdvcnkiOiAiSGllcmFyY2h5QWN0aW9ucyIsCiAgIlN0YWdlIjogIlB1Ymxpc2hlZCIsCiAgIlJldmlld0RhdGUiOiAiMDEvMDQvMjAyNSIsCiAgIlBhcmFtZXRlcnMiOiBbCiAgICB7CiAgICAgICJOYW1lIjogIkRpbWVuc2lvbk5hbWUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiRGltZW5zaW9uIG5hbWUiLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIG5hbWUgb2YgdGhlIGRpbWVuc2lvbiBvbiB3aGljaCB0byBhY3RpdmF0ZSB0aGUgaGllcmFyY2h5IiwKICAgICAgIlR5cGUiOiAiRGltZW5zaW9uIiwKICAgICAgIlByaW1pdGl2ZVR5cGUiOiAiU3RyaW5nIgogICAgfQogIF0KfQo=";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_hierarchy_AssignHierarchy_json = "ewogICJOYW1lIjogImFzc2lnbkhpZXJhcmNoeSIsCiAgIkRpc3BsYXlOYW1lIjogIkFzc2lnbiBoaWVyYXJjaHkiLAogICJEZXNjcmlwdGlvbiI6ICJTZXRzIHRoZSBoaWVyYXJjaHkgb2YgYSBkaW1lbnNpb24iLAogICJDYXRlZ29yeSI6ICJIaWVyYXJjaHlBY3Rpb25zIiwKICAiU3RhZ2UiOiAiUHVibGlzaGVkIiwKICAiUmV2aWV3RGF0ZSI6ICIwMS8wNC8yMDI1IiwKICAiUGFyYW1ldGVycyI6IFsKICAgIHsKICAgICAgIk5hbWUiOiAiRGltZW5zaW9uTmFtZSIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJEaW1lbnNpb24gbmFtZSIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUaGUgbmFtZSBvZiB0aGUgZGltZW5zaW9uIG9uIHdoaWNoIHRvIHNldCB0aGUgaGllcmFyY2h5IiwKICAgICAgIlR5cGUiOiAiRGltZW5zaW9uIiwKICAgICAgIlByaW1pdGl2ZVR5cGUiOiAiU3RyaW5nIgogICAgfSwKICAgIHsKICAgICAgIk5hbWUiOiAiSGllcmFyY2h5TmFtZSIsCiAgICAgICJUeXBlIjogIlN0cmluZyIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJIaWVyYXJjaHkgbmFtZSIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUaGUgbmFtZSBvZiB0aGUgaGllcmFyY2h5IHRvIGJlIHNldCIKICAgIH0KICBdCn0K";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_hierarchy_DeactivateHierarchy_json = "ewogICJOYW1lIjogImRlYWN0aXZhdGVIaWVyYXJjaHkiLAogICJEaXNwbGF5TmFtZSI6ICJEZWFjdGl2YXRlIGhpZXJhcmNoeSIsCiAgIkRlc2NyaXB0aW9uIjogIkRlYWN0aXZhdGUgdGhlIGhpZXJhcmNoeSBvZiBhIGRpbWVuc2lvbiB0aGF0IGlzIGFzc2lnbmVkIiwKICAiQ2F0ZWdvcnkiOiAiSGllcmFyY2h5QWN0aW9ucyIsCiAgIlN0YWdlIjogIlB1Ymxpc2hlZCIsCiAgIlJldmlld0RhdGUiOiAiMDEvMDQvMjAyNSIsCiAgIlBhcmFtZXRlcnMiOiBbCiAgICB7CiAgICAgICJOYW1lIjogIkRpbWVuc2lvbk5hbWUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiRGltZW5zaW9uIG5hbWUiLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIG5hbWUgb2YgdGhlIGRpbWVuc2lvbiBvbiB3aGljaCB0byBkZWFjdGl2YXRlIHRoZSBoaWVyYXJjaHkiLAogICAgICAiVHlwZSI6ICJEaW1lbnNpb24iLAogICAgICAiUHJpbWl0aXZlVHlwZSI6ICJTdHJpbmciCiAgICB9CiAgXQp9Cg==";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_hierarchy_GetAssignedHierarchy_json = "ewogICJOYW1lIjogImdldEFzc2lnbmVkSGllcmFyY2h5IiwKICAiRGlzcGxheU5hbWUiOiAiR2V0IGFzc2lnbmVkIGhpZXJhcmNoeSIsCiAgIkRlc2NyaXB0aW9uIjogIlJldHJpZXZlIHRoZSBoaWVyYXJjaHkgbmFtZSBhc3NpZ25lZCB0byBhIGRpbWVuc2lvbiIsCiAgIkNhdGVnb3J5IjogIkhpZXJhcmNoeUFjdGlvbnMiLAogICJTdGFnZSI6ICJQdWJsaXNoZWQiLAogICJSZXZpZXdEYXRlIjogIjAxLzA0LzIwMjUiLAogICJQYXJhbWV0ZXJzIjogWwogICAgewogICAgICAiTmFtZSI6ICJEaW1lbnNpb25OYW1lIiwKICAgICAgIkRpc3BsYXlOYW1lIjogIkRpbWVuc2lvbiBuYW1lIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSBuYW1lIG9mIHRoZSBkaW1lbnNpb24gZnJvbSB3aGljaCB0byBnZXQgdGhlIGhpZXJhcmNoeSBuYW1lIiwKICAgICAgIlR5cGUiOiAiRGltZW5zaW9uIiwKICAgICAgIlByaW1pdGl2ZVR5cGUiOiAiU3RyaW5nIgogICAgfQogIF0KfQo=";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_hierarchy_IsHierarchyActive_json = "ewogICJOYW1lIjogImlzSGllcmFyY2h5QWN0aXZlIiwKICAiRGlzcGxheU5hbWUiOiAiSXMgaGllcmFyY2h5IGFjdGl2ZSIsCiAgIkRlc2NyaXB0aW9uIjogIkNoZWNrIHdoZXRoZXIgYSBoaWVyYXJjaHkgaXMgYWN0aXZlIiwKICAiQ2F0ZWdvcnkiOiAiSGllcmFyY2h5QWN0aW9ucyIsCiAgIlN0YWdlIjogIlB1Ymxpc2hlZCIsCiAgIlJldmlld0RhdGUiOiAiMDEvMDQvMjAyNSIsCiAgIlBhcmFtZXRlcnMiOiBbCiAgICB7CiAgICAgICJOYW1lIjogIkRpbWVuc2lvbk5hbWUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiRGltZW5zaW9uIG5hbWUiLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIG5hbWUgb2YgdGhlIGRpbWVuc2lvbiB0byBjaGVjayBpZiB0aGUgaGllcmFyY2h5IGlzIGFjdGl2ZSIsCiAgICAgICJUeXBlIjogIkRpbWVuc2lvbiIsCiAgICAgICJQcmltaXRpdmVUeXBlIjogIlN0cmluZyIKICAgIH0KICBdCn0K";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_hierarchy_IsHierarchyAssigned_json = "ewogICJOYW1lIjogImlzSGllcmFyY2h5QXNzaWduZWQiLAogICJEaXNwbGF5TmFtZSI6ICJJcyBoaWVyYXJjaHkgYXNzaWduZWQiLAogICJEZXNjcmlwdGlvbiI6ICJDaGVjayB3aGV0aGVyIGEgaGllcmFyY2h5IGlzIGFzc2lnbmVkIiwKICAiQ2F0ZWdvcnkiOiAiSGllcmFyY2h5QWN0aW9ucyIsCiAgIlN0YWdlIjogIlB1Ymxpc2hlZCIsCiAgIlJldmlld0RhdGUiOiAiMDEvMDQvMjAyNSIsCiAgIlBhcmFtZXRlcnMiOiBbCiAgICB7CiAgICAgICJOYW1lIjogIkRpbWVuc2lvbk5hbWUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiRGltZW5zaW9uIG5hbWUiLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIG5hbWUgb2YgdGhlIGRpbWVuc2lvbiB0byBjaGVjayBpZiB0aGUgaGllcmFyY2h5IGlzIGFzc2lnbmVkIiwKICAgICAgIlR5cGUiOiAiRGltZW5zaW9uIiwKICAgICAgIlByaW1pdGl2ZVR5cGUiOiAiU3RyaW5nIgogICAgfQogIF0KfQo=";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_hierarchy_SetDrillLevel_json = "ewogICJOYW1lIjogInNldERyaWxsTGV2ZWwiLAogICJEaXNwbGF5TmFtZSI6ICJTZXQgRHJpbGwgTGV2ZWwiLAogICJEZXNjcmlwdGlvbiI6ICJTZXQgdGhlIERyaWxsIExldmVsIG9mIHRoZSBIaWVyYXJjaHkiLAogICJDYXRlZ29yeSI6ICJIaWVyYXJjaHlBY3Rpb25zIiwKICAiU3RhZ2UiOiAiUHVibGlzaGVkIiwKICAiUmV2aWV3RGF0ZSI6ICIwMS8wNC8yMDI1IiwKICAiUGFyYW1ldGVycyI6IFsKICAgIHsKICAgICAgIk5hbWUiOiAiRGltZW5zaW9uTmFtZSIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJEaW1lbnNpb24gbmFtZSIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUaGUgbmFtZSBvZiB0aGUgZGltZW5zaW9uIG9uIHdoaWNoIHRvIHNldCBhIERyaWxsIExldmVsIiwKICAgICAgIlR5cGUiOiAiRGltZW5zaW9uIiwKICAgICAgIlByaW1pdGl2ZVR5cGUiOiAiU3RyaW5nIgogICAgfSwKICAgIHsKICAgICAgIk5hbWUiOiAiRHJpbGxMZXZlbCIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJEcmlsbCBsZXZlbCIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJXaGF0IGxldmVsIHRvIGJlIGRyaWxsZWQgdG8iLAogICAgICAiVHlwZSI6ICJJbnRlZ2VyIgogICAgfQogIF0KfQo=";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_hierarchy_UnassignHierarchy_json = "ewogICJOYW1lIjogInVuYXNzaWduSGllcmFyY2h5IiwKICAiRGlzcGxheU5hbWUiOiAiVW5hc3NpZ24gaGllcmFyY2h5IiwKICAiRGVzY3JpcHRpb24iOiAiUmVtb3ZlcyB0aGUgaGllcmFyY2h5IG9mIGEgZGltZW5zaW9uIiwKICAiQ2F0ZWdvcnkiOiAiSGllcmFyY2h5QWN0aW9ucyIsCiAgIlN0YWdlIjogIlB1Ymxpc2hlZCIsCiAgIlJldmlld0RhdGUiOiAiMDEvMDQvMjAyNSIsCiAgIlBhcmFtZXRlcnMiOiBbCiAgICB7CiAgICAgICJOYW1lIjogIkRpbWVuc2lvbk5hbWUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiRGltZW5zaW9uIG5hbWUiLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIG5hbWUgb2YgdGhlIGRpbWVuc2lvbiBvbiB3aGljaCB0byByZW1vdmUgdGhlIGhpZXJhcmNoeSIsCiAgICAgICJUeXBlIjogIkRpbWVuc2lvbiIsCiAgICAgICJQcmltaXRpdmVUeXBlIjogIlN0cmluZyIKICAgIH0KICBdCn0K";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_lifecycle_CloneDataProvider_json = "ewogICJOYW1lIjogImNsb25lRGF0YVByb3ZpZGVyIiwKICAiRGlzcGxheU5hbWUiOiAiQ2xvbmUgRGF0YVByb3ZpZGVyIiwKICAiRGVzY3JpcHRpb24iOiAiQ3JlYXRlIGEgY2xvbmUgb2YgdGhlIERhdGFQcm92aWRlciIsCiAgIkNhdGVnb3J5IjogIkxpZmVjeWNsZUFjdGlvbnMiLAogICJTdGFnZSI6ICJQdWJsaXNoZWQiLAogICJSZXZpZXdEYXRlIjogIjAxLzA0LzIwMjUiLAogICJQYXJhbWV0ZXJzIjogWwogICAgewogICAgICAiTmFtZSI6ICJDbG9uZU5hbWUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiQ2xvbmUgbmFtZSIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUaGUgbmFtZSBvZiB0aGUgY2xvbmUiLAogICAgICAiVHlwZSI6ICJTdHJpbmciCiAgICB9LAogICAgewogICAgICAiTmFtZSI6ICJSZXVzZVNhbWVDb25uZWN0aW9uIiwKICAgICAgIkRpc3BsYXlOYW1lIjogIlJldXNlIHNhbWUgY29ubmVjdGlvbiIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUYWtlIHRoZSBjb25uZWN0aW9uIGZyb20gdGhlIG9yaWdpbmFsLCBtYWtpbmcgaXQgYSBzaGFyZWQgcmVzb3VyY2UiLAogICAgICAiVHlwZSI6ICJCb29sZWFuIiwKICAgICAgIkRlZmF1bHQiOiBmYWxzZQogICAgfQogIF0KfQo=";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_lifecycle_ConnectDataProviderToSystemSimple_json = "ewogICJOYW1lIjogImNvbm5lY3REYXRhUHJvdmlkZXJUb1N5c3RlbVNpbXBsZSIsCiAgIkRpc3BsYXlOYW1lIjogIkNvbm5lY3QgRGF0YVByb3ZpZGVyIiwKICAiRGVzY3JpcHRpb24iOiAiTWFrZXMgdGhlIERhdGFQcm92aWRlciBjb25uZWN0IHRvIHRoZSBwcm92aWRlZCBEYXRhU291cmNlIiwKICAiQ2F0ZWdvcnkiOiAiTGlmZWN5Y2xlQWN0aW9ucyIsCiAgIlN0YWdlIjogIlB1Ymxpc2hlZCIsCiAgIlJldmlld0RhdGUiOiAiMDEvMDQvMjAyNSIsCiAgIlBhcmFtZXRlcnMiOiBbCiAgICB7CiAgICAgICJOYW1lIjogIlN5c3RlbU5hbWUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiU3lzdGVtIG5hbWUiLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIG5hbWUgb2YgdGhlIHN5c3RlbSB0byBjb25uZWN0IHRvIiwKICAgICAgIlR5cGUiOiAiU3RyaW5nIgogICAgfSwKICAgIHsKICAgICAgIk5hbWUiOiAiRnVsbFF1YWxpZmllZERhdGFTb3VyY2VOYW1lIiwKICAgICAgIkRpc3BsYXlOYW1lIjogIkZ1bGwgcXVhbGlmaWVkIERhdGFTb3VyY2UgbmFtZSIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUaGUgZnVsbHkgcXVhbGlmaWVkIG5hbWUgb2YgdGhlIERhdGFTb3VyY2UsIGUuZyAndmlldzpbTVlfU0NIRU1BXVtNWV9QQUNLQUdFXVtNWV9PQkpFQ1RdJyIsCiAgICAgICJUeXBlIjogIlN0cmluZyIKICAgIH0sCiAgICB7CiAgICAgICJOYW1lIjogIkNsb3NlQ29ubmVjdGlvbiIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJDbG9zZSBjb25uZWN0aW9uIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIkRldGVybWluZXMgd2hldGhlciB0aGUgRGF0YVByb3ZpZGVyIHNob3VsZCBjbG9zZSB0aGUgcHJldmlvdXMgY29ubmVjdGlvbiwgZnJlZWluZyByZXNvdXJjZXMgYW5kIG1ha2luZyBpdCB1bnVzYWJsZSIsCiAgICAgICJUeXBlIjogIkJvb2xlYW4iLAogICAgICAiRGVmYXVsdCI6IHRydWUKICAgIH0KICBdCn0K";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_lifecycle_ConnectDataProvider_json = "ewogICJOYW1lIjogImNvbm5lY3REYXRhUHJvdmlkZXIiLAogICJEaXNwbGF5TmFtZSI6ICJDb25uZWN0IERhdGFQcm92aWRlciIsCiAgIkRlc2NyaXB0aW9uIjogIk1ha2VzIHRoZSBEYXRhUHJvdmlkZXIgY29ubmVjdCB0byB0aGUgcHJvdmlkZWQgRGF0YVNvdXJjZSIsCiAgIkNhdGVnb3J5IjogIkxpZmVjeWNsZUFjdGlvbnMiLAogICJTdGFnZSI6ICJQdWJsaXNoZWQiLAogICJSZXZpZXdEYXRlIjogIjAxLzA0LzIwMjUiLAogICJQYXJhbWV0ZXJzIjogWwogICAgewogICAgICAiTmFtZSI6ICJDb25maWdKc29uIiwKICAgICAgIkRpc3BsYXlOYW1lIjogIkNvbmZpZ3VyYXRpb24gSnNvbiIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUaGUgRGF0YVNvdXJjZSBjb25maWd1cmF0aW9uIGFzIGEganNvbiBvYmplY3QiLAogICAgICAiVHlwZSI6ICJPYmplY3QiCiAgICB9LAogICAgewogICAgICAiTmFtZSI6ICJDbG9zZUNvbm5lY3Rpb24iLAogICAgICAiRGlzcGxheU5hbWUiOiAiQ2xvc2UgY29ubmVjdGlvbiIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJEZXRlcm1pbmVzIHdoZXRoZXIgdGhlIERhdGFQcm92aWRlciBzaG91bGQgY2xvc2UgdGhlIHByZXZpb3VzIGNvbm5lY3Rpb24sIGZyZWVpbmcgcmVzb3VyY2VzIGFuZCBtYWtpbmcgaXQgdW51c2FibGUiLAogICAgICAiVHlwZSI6ICJCb29sZWFuIiwKICAgICAgIkRlZmF1bHQiOiB0cnVlCiAgICB9CiAgXQp9Cg==";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_lifecycle_DisconnectDataProvider_json = "ewogICJOYW1lIjogImRpc2Nvbm5lY3REYXRhUHJvdmlkZXIiLAogICJEaXNwbGF5TmFtZSI6ICJEaXNjb25uZWN0IERhdGFQcm92aWRlciIsCiAgIkRlc2NyaXB0aW9uIjogIkNsb3NlcyB0aGUgY29ubmVjdGlvbiB0byBmcmVlIHVwIHJlc291cmNlcyIsCiAgIkNhdGVnb3J5IjogIkxpZmVjeWNsZUFjdGlvbnMiLAogICJTdGFnZSI6ICJQdWJsaXNoZWQiLAogICJSZXZpZXdEYXRlIjogIjAxLzA0LzIwMjUiLAogICJQYXJhbWV0ZXJzIjogWwogICAgewogICAgICAiTmFtZSI6ICJDbG9zZUNvbm5lY3Rpb24iLAogICAgICAiRGlzcGxheU5hbWUiOiAiQ2xvc2UgY29ubmVjdGlvbiIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJEZXRlcm1pbmVzIHdoZXRoZXIgdGhlIERhdGFQcm92aWRlciBzaG91bGQgY2xvc2UgdGhlIHByZXZpb3VzIGNvbm5lY3Rpb24sIGZyZWVpbmcgcmVzb3VyY2VzIGFuZCBtYWtpbmcgaXQgdW51c2FibGUiLAogICAgICAiVHlwZSI6ICJCb29sZWFuIiwKICAgICAgIkRlZmF1bHQiOiB0cnVlCiAgICB9CiAgXQp9Cg==";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_lifecycle_KillDataProvider_json = "ewogICJOYW1lIjogInJlbGVhc2VEYXRhUHJvdmlkZXIiLAogICJEaXNwbGF5TmFtZSI6ICJSZWxlYXNlIERhdGFQcm92aWRlciIsCiAgIkRlc2NyaXB0aW9uIjogIlJlbGVhc2VzIHRoZSBlbnRpcmUgRGF0YVByb3ZpZGVyIiwKICAiQ2F0ZWdvcnkiOiAiTGlmZWN5Y2xlQWN0aW9ucyIsCiAgIlN0YWdlIjogIlB1Ymxpc2hlZCIsCiAgIlJldmlld0RhdGUiOiAiMDEvMDQvMjAyNSIsCiAgIlBhcmFtZXRlcnMiOiBbCiAgICB7CiAgICAgICJOYW1lIjogIkNsb3NlQ29ubmVjdGlvbiIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJDbG9zZSBjb25uZWN0aW9uIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIkRldGVybWluZXMgd2hldGhlciB0aGUgRGF0YVByb3ZpZGVyIHNob3VsZCBjbG9zZSB0aGUgY29ubmVjdGlvbiwgZnJlZWluZyByZXNvdXJjZXMgYW5kIG1ha2luZyBpdCB1bnVzYWJsZSIsCiAgICAgICJUeXBlIjogIkJvb2xlYW4iLAogICAgICAiRGVmYXVsdCI6IHRydWUKICAgIH0KICBdCn0K";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_lifecycle_ReconnectDataProvider_json = "ewogICJOYW1lIjogInJlY29ubmVjdERhdGFQcm92aWRlciIsCiAgIkRpc3BsYXlOYW1lIjogIlJlY29ubmVjdCBEYXRhUHJvdmlkZXIiLAogICJEZXNjcmlwdGlvbiI6ICJVc2UgdGhlIGN1cnJlbnQgY29ubmVjdGlvbiBjb25maWcgdG8gc2V0IHVwIGEgbmV3IGNvbm5lY3Rpb24iLAogICJDYXRlZ29yeSI6ICJMaWZlY3ljbGVBY3Rpb25zIiwKICAiU3RhZ2UiOiAiUHVibGlzaGVkIiwKICAiUmV2aWV3RGF0ZSI6ICIwMS8wNC8yMDI1IiwKICAiUGFyYW1ldGVycyI6IFsKICAgIHsKICAgICAgIk5hbWUiOiAiQ2xvc2VDb25uZWN0aW9uIiwKICAgICAgIkRpc3BsYXlOYW1lIjogIkNsb3NlIGNvbm5lY3Rpb24iLAogICAgICAiRGVzY3JpcHRpb24iOiAiRGV0ZXJtaW5lcyB3aGV0aGVyIHRoZSBEYXRhUHJvdmlkZXIgc2hvdWxkIGNsb3NlIHRoZSBwcmV2aW91cyBjb25uZWN0aW9uLCBmcmVlaW5nIHJlc291cmNlcyBhbmQgbWFraW5nIGl0IHVudXNhYmxlIiwKICAgICAgIlR5cGUiOiAiQm9vbGVhbiIsCiAgICAgICJEZWZhdWx0IjogdHJ1ZQogICAgfQogIF0KfQo=";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_lifecycle_ReleaseDataProvider_json = "ewogICJOYW1lIjogInJlbGVhc2VEYXRhUHJvdmlkZXIiLAogICJEaXNwbGF5TmFtZSI6ICJSZWxlYXNlIERhdGFQcm92aWRlciIsCiAgIkRlc2NyaXB0aW9uIjogIkRlc3Ryb3kgdGhlIGRhdGEgcHJvdmlkZXIgbWFraW5nIGl0IHVudXNhYmxlIiwKICAiQ2F0ZWdvcnkiOiAiTGlmZWN5Y2xlQWN0aW9ucyIsCiAgIlN0YWdlIjogIlB1Ymxpc2hlZCIsCiAgIlJldmlld0RhdGUiOiAiMDEvMDQvMjAyNSIsCiAgIlBhcmFtZXRlcnMiOiBbCiAgICB7CiAgICAgICJOYW1lIjogIkNsb3NlQ29ubmVjdGlvbiIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJDbG9zZSBjb25uZWN0aW9uIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIkRldGVybWluZXMgd2hldGhlciB0aGUgRGF0YVByb3ZpZGVyIHNob3VsZCBjbG9zZSB0aGUgcHJldmlvdXMgY29ubmVjdGlvbiwgZnJlZWluZyByZXNvdXJjZXMgYW5kIG1ha2luZyBpdCB1bnVzYWJsZSIsCiAgICAgICJUeXBlIjogIkJvb2xlYW4iLAogICAgICAiRGVmYXVsdCI6IHRydWUKICAgIH0KICBdCn0K";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_planning_BackupVersion_json = "ewogICJOYW1lIjogImJhY2t1cFZlcnNpb24iLAogICJEaXNwbGF5TmFtZSI6ICJCYWNrdXAgdmVyc2lvbiIsCiAgIkRlc2NyaXB0aW9uIjogIlNhdmUgdGhlIHZlcnNpb24gb24gdGhlIGJhY2tlbmQiLAogICJDYXRlZ29yeSI6ICJQbGFubmluZ0FjdGlvbnMiLAogICJTdGFnZSI6ICJEZXZlbG9wZWQiLAogICJSZXZpZXdEYXRlIjogIjAxLzA0LzIwMjUiLAogICJQYXJhbWV0ZXJzIjogWwogICAgewogICAgICAiTmFtZSI6ICJWZXJzaW9uSWQiLAogICAgICAiRGlzcGxheU5hbWUiOiAiVmVyc2lvbiBpZCIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUaGUgaWQgb2YgdGhlIHZlcnNpb24iLAogICAgICAiVHlwZSI6ICJJbnRlZ2VyIgogICAgfSwKICAgIHsKICAgICAgIk5hbWUiOiAiU2hhcmVkVmVyc2lvbiIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJTaGFyZWQgdmVyc2lvbiIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJXaGV0aGVyIHRoZSB2ZXJzaW9uIGlzIHRvIGJlIHNoYXJlZCIsCiAgICAgICJUeXBlIjogIkJvb2xlYW4iCiAgICB9LAogICAgewogICAgICAiTmFtZSI6ICJWZXJzaW9uT3duZXIiLAogICAgICAiRGlzcGxheU5hbWUiOiAiVmVyc2lvbiBvd25lciIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUaGUgbmFtZSBvZiB0aGUgdXNlciB0aGF0IG93bnMgdGhlIHZlcnNpb24iLAogICAgICAiVHlwZSI6ICJTdHJpbmciCiAgICB9LAogICAgewogICAgICAiTmFtZSI6ICJEZXNjcmlwdGlvbiIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJEZXNjcmlwdGlvbiIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUaGUgZGVzY3JpcHRpb24gb2YgdGhlIHZlcnNpb24iLAogICAgICAiVHlwZSI6ICJCb29sZWFuIgogICAgfQogIF0KfQo=";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_planning_CloseVersion_json = "ewogICJOYW1lIjogImNsb3NlVmVyc2lvbiIsCiAgIkRpc3BsYXlOYW1lIjogIkNsb3NlIHZlcnNpb24iLAogICJEZXNjcmlwdGlvbiI6ICJTdG9wIHRoZSBlZGl0IG9mIHRoZSB2ZXJzaW9uIGFuZCBoaWRlIGl0IGZyb20gdGhlIHJlc3VsdCBzZXQiLAogICJDYXRlZ29yeSI6ICJQbGFubmluZ0FjdGlvbnMiLAogICJTdGFnZSI6ICJEZXZlbG9wZWQiLAogICJSZXZpZXdEYXRlIjogIjAxLzA0LzIwMjUiLAogICJQYXJhbWV0ZXJzIjogWwogICAgewogICAgICAiTmFtZSI6ICJWZXJzaW9uSWQiLAogICAgICAiRGlzcGxheU5hbWUiOiAiVmVyc2lvbiBpZCIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUaGUgaWQgb2YgdGhlIHZlcnNpb24iLAogICAgICAiVHlwZSI6ICJJbnRlZ2VyIgogICAgfSwKICAgIHsKICAgICAgIk5hbWUiOiAiU2hhcmVkVmVyc2lvbiIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJTaGFyZWQgdmVyc2lvbiIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJXaGV0aGVyIHRoZSB2ZXJzaW9uIGlzIHRvIGJlIHNoYXJlZCIsCiAgICAgICJUeXBlIjogIkJvb2xlYW4iCiAgICB9LAogICAgewogICAgICAiTmFtZSI6ICJWZXJzaW9uT3duZXIiLAogICAgICAiRGlzcGxheU5hbWUiOiAiVmVyc2lvbiBvd25lciIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUaGUgbmFtZSBvZiB0aGUgdXNlciB0aGF0IG93bnMgdGhlIHZlcnNpb24iLAogICAgICAiVHlwZSI6ICJTdHJpbmciCiAgICB9LAogICAgewogICAgICAiTmFtZSI6ICJEZXNjcmlwdGlvbiIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJEZXNjcmlwdGlvbiIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUaGUgZGVzY3JpcHRpb24gb2YgdGhlIHZlcnNpb24iLAogICAgICAiVHlwZSI6ICJCb29sZWFuIgogICAgfQogIF0KfQo=";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_planning_DiscardNewValues_json = "ewogICJOYW1lIjogImRpc2NhcmROZXdWYWx1ZXMiLAogICJEaXNwbGF5TmFtZSI6ICJEaXNjYXJkIG5ldyB2YWx1ZXMiLAogICJEZXNjcmlwdGlvbiI6ICJEcm9wIHRoZSBuZXcgdXNlciBpbnB1dHMiLAogICJDYXRlZ29yeSI6ICJQbGFubmluZ0FjdGlvbnMiLAogICJTdGFnZSI6ICJEZXZlbG9wZWQiLAogICJSZXZpZXdEYXRlIjogIjAxLzA0LzIwMjUiLAogICJQYXJhbWV0ZXJzIjogWwogIF0KfQo=";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_planning_DropVersion_json = "ewogICJOYW1lIjogImRyb3BWZXJzaW9uIiwKICAiRGlzcGxheU5hbWUiOiAiRHJvcCB2ZXJzaW9uIiwKICAiRGVzY3JpcHRpb24iOiAiRGlzY2FyZCB0aGUgdmVyc2lvbiwgbG9vc2luZyBhbGwgY2hhbmdlcyIsCiAgIkNhdGVnb3J5IjogIlBsYW5uaW5nQWN0aW9ucyIsCiAgIlN0YWdlIjogIkRldmVsb3BlZCIsCiAgIlJldmlld0RhdGUiOiAiMDEvMDQvMjAyNSIsCiAgIlBhcmFtZXRlcnMiOiBbCiAgICB7CiAgICAgICJOYW1lIjogIlZlcnNpb25JZCIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJWZXJzaW9uIGlkIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSBpZCBvZiB0aGUgdmVyc2lvbiIsCiAgICAgICJUeXBlIjogIkludGVnZXIiCiAgICB9LAogICAgewogICAgICAiTmFtZSI6ICJTaGFyZWRWZXJzaW9uIiwKICAgICAgIkRpc3BsYXlOYW1lIjogIlNoYXJlZCB2ZXJzaW9uIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIldoZXRoZXIgdGhlIHZlcnNpb24gaXMgdG8gYmUgc2hhcmVkIiwKICAgICAgIlR5cGUiOiAiQm9vbGVhbiIKICAgIH0sCiAgICB7CiAgICAgICJOYW1lIjogIlZlcnNpb25Pd25lciIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJWZXJzaW9uIG93bmVyIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSBuYW1lIG9mIHRoZSB1c2VyIHRoYXQgb3ducyB0aGUgdmVyc2lvbiIsCiAgICAgICJUeXBlIjogIlN0cmluZyIKICAgIH0sCiAgICB7CiAgICAgICJOYW1lIjogIkRlc2NyaXB0aW9uIiwKICAgICAgIkRpc3BsYXlOYW1lIjogIkRlc2NyaXB0aW9uIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSBkZXNjcmlwdGlvbiBvZiB0aGUgdmVyc2lvbiIsCiAgICAgICJUeXBlIjogIkJvb2xlYW4iCiAgICB9CiAgXQp9Cg==";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_planning_EpmAddActionParameterLevelFieldName_json = "ewogICJOYW1lIjogImVwbUFkZEFjdGlvblBhcmFtZXRlckxldmVsRmllbGROYW1lIiwKICAiRGlzcGxheU5hbWUiOiAiRXBtIEFkZCBBY3Rpb24gUGFyYW1ldGVyIExldmVsIEZpZWxkIE5hbWUiLAogICJEZXNjcmlwdGlvbiI6ICJBZGQgYSBsZXZlbCBmaWVsZCBuYW1lIGZvciB0aGUgcGxhbm5pbmcgYWN0aW9uIHBhcmFtZXRlciIsCiAgIkNhdGVnb3J5IjogIlBsYW5uaW5nQWN0aW9ucyIsCiAgIlN0YWdlIjogIkRldmVsb3BlZCIsCiAgIlJldmlld0RhdGUiOiAiMjkvMDgvMjAyNSIsCiAgIlBhcmFtZXRlcnMiOiBbCiAgICB7CiAgICAgICJOYW1lIjogImFjdGlvblR5cGUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiQWN0aW9uIFR5cGUiLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIHR5cGUgb2YgdGhlIGFjdGlvbiIsCiAgICAgICJUeXBlIjogIlN0cmluZyIKICAgIH0sCiAgICB7CiAgICAgICJOYW1lIjogInBhY2thZ2VOYW1lIiwKICAgICAgIkRpc3BsYXlOYW1lIjogIlBhY2thZ2UgTmFtZSIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUaGUgcGFja2FnZSBuYW1lIiwKICAgICAgIlR5cGUiOiAic3RyaW5nIgogICAgfSwKICAgIHsKICAgICAgIk5hbWUiOiAibG9jYWxOYW1lIiwKICAgICAgIkRpc3BsYXlOYW1lIjogIkxvY2FsIE5hbWUiLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIG5vbiBmdWxseSBxdWFsaWZpZWQgJ2xvY2FsJyBuYW1lIG9mIHRoZSBhY3Rpb24iLAogICAgICAiVHlwZSI6ICJTdHJpbmciCiAgICB9LAogICAgewogICAgICAiTmFtZSI6ICJwYXJhbWV0ZXJOYW1lIiwKICAgICAgIkRpc3BsYXlOYW1lIjogIlBhcmFtZXRlciBOYW1lIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSBwYXJhbWV0ZXIgbmFtZSIsCiAgICAgICJUeXBlIjogIlN0cmluZyIKICAgIH0sCiAgICB7CiAgICAgICJOYW1lIjogImxldmVsRmllbGROYW1lIiwKICAgICAgIkRpc3BsYXlOYW1lIjogIkxldmVsIEZpZWxkIE5hbWUiLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIGxldmVsIGZpZWxkIG5hbWUiLAogICAgICAiVHlwZSI6ICJTdHJpbmciCiAgICB9CiAgXQp9Cg==";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_planning_EpmAddActionParameterMemberValueItem_json = "ewogICJOYW1lIjogImVwbUFkZEFjdGlvblBhcmFtZXRlck1lbWJlclZhbHVlSXRlbSIsCiAgIkRpc3BsYXlOYW1lIjogIkVwbSBBZGQgQWN0aW9uIFBhcmFtZXRlciBNZW1iZXIgVmFsdWUgSXRlbSIsCiAgIkRlc2NyaXB0aW9uIjogIkFkZCBhIG1lbWJlciB2YWx1ZSBpdGVtIGZvciB0aGUgcGxhbm5pbmcgYWN0aW9uIHBhcmFtZXRlciIsCiAgIkNhdGVnb3J5IjogIlBsYW5uaW5nQWN0aW9ucyIsCiAgIlN0YWdlIjogIkRldmVsb3BlZCIsCiAgIlJldmlld0RhdGUiOiAiMjkvMDgvMjAyNSIsCiAgIlBhcmFtZXRlcnMiOiBbCiAgICB7CiAgICAgICJOYW1lIjogImFjdGlvblR5cGUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiQWN0aW9uIFR5cGUiLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIHR5cGUgb2YgdGhlIGFjdGlvbiIsCiAgICAgICJUeXBlIjogIlN0cmluZyIKICAgIH0sCiAgICB7CiAgICAgICJOYW1lIjogInBhY2thZ2VOYW1lIiwKICAgICAgIkRpc3BsYXlOYW1lIjogIlBhY2thZ2UgTmFtZSIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUaGUgcGFja2FnZSBuYW1lIiwKICAgICAgIlR5cGUiOiAic3RyaW5nIgogICAgfSwKICAgIHsKICAgICAgIk5hbWUiOiAibG9jYWxOYW1lIiwKICAgICAgIkRpc3BsYXlOYW1lIjogIkxvY2FsIE5hbWUiLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIG5vbiBmdWxseSBxdWFsaWZpZWQgJ2xvY2FsJyBuYW1lIG9mIHRoZSBhY3Rpb24iLAogICAgICAiVHlwZSI6ICJTdHJpbmciCiAgICB9LAogICAgewogICAgICAiTmFtZSI6ICJwYXJhbWV0ZXJOYW1lIiwKICAgICAgIkRpc3BsYXlOYW1lIjogIlBhcmFtZXRlciBOYW1lIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSBwYXJhbWV0ZXIgbmFtZSIsCiAgICAgICJUeXBlIjogIlN0cmluZyIKICAgIH0sCiAgICB7CiAgICAgICJOYW1lIjogInZhbHVlSXRlbSIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJWYWx1ZSBJdGVtIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSB2YWx1ZSBpdGVtIiwKICAgICAgIlR5cGUiOiAiU3RyaW5nIgogICAgfQogIF0KfQo=";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_planning_EpmAddActionParameterValue_json = "ewogICJOYW1lIjogImVwbUFkZEFjdGlvblBhcmFtZXRlclZhbHVlIiwKICAiRGlzcGxheU5hbWUiOiAiRXBtIEFkZCBBY3Rpb24gUGFyYW1ldGVyIFZhbHVlIiwKICAiRGVzY3JpcHRpb24iOiAiQWRkIGEgdmFsdWUgZm9yIHRoZSBwbGFubmluZyBhY3Rpb24gcGFyYW1ldGVyIiwKICAiQ2F0ZWdvcnkiOiAiUGxhbm5pbmdBY3Rpb25zIiwKICAiU3RhZ2UiOiAiRGV2ZWxvcGVkIiwKICAiUmV2aWV3RGF0ZSI6ICIyOS8wOC8yMDI1IiwKICAiUGFyYW1ldGVycyI6IFsKICAgIHsKICAgICAgIk5hbWUiOiAiYWN0aW9uVHlwZSIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJBY3Rpb24gVHlwZSIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUaGUgdHlwZSBvZiB0aGUgYWN0aW9uIiwKICAgICAgIlR5cGUiOiAiU3RyaW5nIgogICAgfSwKICAgIHsKICAgICAgIk5hbWUiOiAicGFja2FnZU5hbWUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiUGFja2FnZSBOYW1lIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSBwYWNrYWdlIG5hbWUiLAogICAgICAiVHlwZSI6ICJzdHJpbmciCiAgICB9LAogICAgewogICAgICAiTmFtZSI6ICJsb2NhbE5hbWUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiTG9jYWwgTmFtZSIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUaGUgbm9uIGZ1bGx5IHF1YWxpZmllZCAnbG9jYWwnIG5hbWUgb2YgdGhlIGFjdGlvbiIsCiAgICAgICJUeXBlIjogIlN0cmluZyIKICAgIH0sCiAgICB7CiAgICAgICJOYW1lIjogInBhcmFtZXRlck5hbWUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiUGFyYW1ldGVyIE5hbWUiLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIHBhcmFtZXRlciBuYW1lIiwKICAgICAgIlR5cGUiOiAiU3RyaW5nIgogICAgfSwKICAgIHsKICAgICAgIk5hbWUiOiAidmFsdWUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiVmFsdWUiLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIHZhbHVlIiwKICAgICAgIlR5cGUiOiAiU3RyaW5nIgogICAgfQogIF0KfQo=";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_planning_EpmClearActionParameterLevelFieldNames_json = "ewogICJOYW1lIjogImVwbUNsZWFyQWN0aW9uUGFyYW1ldGVyTGV2ZWxGaWVsZE5hbWVzIiwKICAiRGlzcGxheU5hbWUiOiAiRXBtIENsZWFyIEFjdGlvbiBQYXJhbWV0ZXIgTGV2ZWwgRmllbGQgTmFtZXMiLAogICJEZXNjcmlwdGlvbiI6ICJDbGVhciB0aGUgbGV2ZWwgZmllbGQgbmFtZXMgZm9yIHRoZSBwbGFubmluZyBhY3Rpb24gcGFyYW1ldGVyIiwKICAiQ2F0ZWdvcnkiOiAiUGxhbm5pbmdBY3Rpb25zIiwKICAiU3RhZ2UiOiAiRGV2ZWxvcGVkIiwKICAiUmV2aWV3RGF0ZSI6ICIyOS8wOC8yMDI1IiwKICAiUGFyYW1ldGVycyI6IFsKICAgIHsKICAgICAgIk5hbWUiOiAiYWN0aW9uVHlwZSIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJBY3Rpb24gVHlwZSIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUaGUgdHlwZSBvZiB0aGUgYWN0aW9uIiwKICAgICAgIlR5cGUiOiAiU3RyaW5nIgogICAgfSwKICAgIHsKICAgICAgIk5hbWUiOiAicGFja2FnZU5hbWUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiUGFja2FnZSBOYW1lIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSBwYWNrYWdlIG5hbWUiLAogICAgICAiVHlwZSI6ICJzdHJpbmciCiAgICB9LAogICAgewogICAgICAiTmFtZSI6ICJsb2NhbE5hbWUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiTG9jYWwgTmFtZSIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUaGUgbm9uIGZ1bGx5IHF1YWxpZmllZCAnbG9jYWwnIG5hbWUgb2YgdGhlIGFjdGlvbiIsCiAgICAgICJUeXBlIjogIlN0cmluZyIKICAgIH0sCiAgICB7CiAgICAgICJOYW1lIjogInBhcmFtZXRlck5hbWUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiUGFyYW1ldGVyIE5hbWUiLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIHBhcmFtZXRlciBuYW1lIiwKICAgICAgIlR5cGUiOiAiU3RyaW5nIgogICAgfQogIF0KfQo=";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_planning_EpmClearActionParameterValue_json = "ewogICJOYW1lIjogImVwbUNsZWFyQWN0aW9uUGFyYW1ldGVyVmFsdWUiLAogICJEaXNwbGF5TmFtZSI6ICJFcG0gQ2xlYXIgQWN0aW9uIFBhcmFtZXRlciBWYWx1ZSIsCiAgIkRlc2NyaXB0aW9uIjogIkNsZWFyIHRoZSB2YWx1ZSBmb3IgdGhlIHBsYW5uaW5nIGFjdGlvbiBwYXJhbWV0ZXIiLAogICJDYXRlZ29yeSI6ICJQbGFubmluZ0FjdGlvbnMiLAogICJTdGFnZSI6ICJEZXZlbG9wZWQiLAogICJSZXZpZXdEYXRlIjogIjI5LzA4LzIwMjUiLAogICJQYXJhbWV0ZXJzIjogWwogICAgewogICAgICAiTmFtZSI6ICJhY3Rpb25UeXBlIiwKICAgICAgIkRpc3BsYXlOYW1lIjogIkFjdGlvbiBUeXBlIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSB0eXBlIG9mIHRoZSBhY3Rpb24iLAogICAgICAiVHlwZSI6ICJTdHJpbmciCiAgICB9LAogICAgewogICAgICAiTmFtZSI6ICJwYWNrYWdlTmFtZSIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJQYWNrYWdlIE5hbWUiLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIHBhY2thZ2UgbmFtZSIsCiAgICAgICJUeXBlIjogInN0cmluZyIKICAgIH0sCiAgICB7CiAgICAgICJOYW1lIjogImxvY2FsTmFtZSIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJMb2NhbCBOYW1lIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSBub24gZnVsbHkgcXVhbGlmaWVkICdsb2NhbCcgbmFtZSBvZiB0aGUgYWN0aW9uIiwKICAgICAgIlR5cGUiOiAiU3RyaW5nIgogICAgfSwKICAgIHsKICAgICAgIk5hbWUiOiAicGFyYW1ldGVyTmFtZSIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJQYXJhbWV0ZXIgTmFtZSIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUaGUgcGFyYW1ldGVyIG5hbWUiLAogICAgICAiVHlwZSI6ICJTdHJpbmciCiAgICB9CiAgXQp9Cg==";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_planning_EpmExecutePlanningAction_json = "ewogICJOYW1lIjogImVwbUV4ZWN1dGVQbGFubmluZ0FjdGlvbiIsCiAgIkRpc3BsYXlOYW1lIjogIkVwbSBFeGVjdXRlIFBsYW5uaW5nIEFjdGlvbiIsCiAgIkRlc2NyaXB0aW9uIjogIkV4ZWN1dGUgdGhlIHNhYyBtb2RlbGxlZCBwbGFubmluZyBhY3Rpb24iLAogICJDYXRlZ29yeSI6ICJQbGFubmluZ0FjdGlvbnMiLAogICJTdGFnZSI6ICJEZXZlbG9wZWQiLAogICJSZXZpZXdEYXRlIjogIjI5LzA4LzIwMjUiLAogICJQYXJhbWV0ZXJzIjogWwogICAgewogICAgICAiTmFtZSI6ICJhY3Rpb25UeXBlIiwKICAgICAgIkRpc3BsYXlOYW1lIjogIkFjdGlvbiBUeXBlIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSB0eXBlIG9mIHRoZSBhY3Rpb24iLAogICAgICAiVHlwZSI6ICJTdHJpbmciCiAgICB9LAogICAgewogICAgICAiTmFtZSI6ICJwYWNrYWdlTmFtZSIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJQYWNrYWdlIE5hbWUiLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIHBhY2thZ2UgbmFtZSIsCiAgICAgICJUeXBlIjogInN0cmluZyIKICAgIH0sCiAgICB7CiAgICAgICJOYW1lIjogImxvY2FsTmFtZSIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJMb2NhbCBOYW1lIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSBub24gZnVsbHkgcXVhbGlmaWVkICdsb2NhbCcgbmFtZSBvZiB0aGUgYWN0aW9uIiwKICAgICAgIlR5cGUiOiAiU3RyaW5nIgogICAgfQogIF0KfQo=";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_planning_EpmFetchPlanningAction_json = "ewogICJOYW1lIjogImVwbUZldGNoUGxhbm5pbmdBY3Rpb24iLAogICJEaXNwbGF5TmFtZSI6ICJFcG0gRmV0Y2ggUGxhbm5pbmcgQWN0aW9uIiwKICAiRGVzY3JpcHRpb24iOiAiRmV0Y2ggdGhlIHNhYyBtb2RlbGxlZCBwbGFubmluZyBhY3Rpb24iLAogICJDYXRlZ29yeSI6ICJQbGFubmluZ0FjdGlvbnMiLAogICJTdGFnZSI6ICJEZXZlbG9wZWQiLAogICJSZXZpZXdEYXRlIjogIjI5LzA4LzIwMjUiLAogICJQYXJhbWV0ZXJzIjogWwogICAgewogICAgICAiTmFtZSI6ICJhY3Rpb25UeXBlIiwKICAgICAgIkRpc3BsYXlOYW1lIjogIkFjdGlvbiBUeXBlIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSB0eXBlIG9mIHRoZSBhY3Rpb24iLAogICAgICAiVHlwZSI6ICJTdHJpbmciCiAgICB9LAogICAgewogICAgICAiTmFtZSI6ICJwYWNrYWdlTmFtZSIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJQYWNrYWdlIE5hbWUiLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIHBhY2thZ2UgbmFtZSIsCiAgICAgICJUeXBlIjogInN0cmluZyIKICAgIH0sCiAgICB7CiAgICAgICJOYW1lIjogImxvY2FsTmFtZSIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJMb2NhbCBOYW1lIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSBub24gZnVsbHkgcXVhbGlmaWVkICdsb2NhbCcgbmFtZSBvZiB0aGUgYWN0aW9uIiwKICAgICAgIlR5cGUiOiAiU3RyaW5nIgogICAgfQogIF0KfQo=";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_planning_EpmGetActionParameters_json = "ewogICJOYW1lIjogImVwbUdldEFjdGlvblBhcmFtZXRlcnMiLAogICJEaXNwbGF5TmFtZSI6ICJFcG0gR2V0IEFjdGlvbiBQYXJhbWV0ZXJzIiwKICAiRGVzY3JpcHRpb24iOiAiR2V0IHRoZSBwYXJhbWV0ZXJzIGxpc3QgZm9yIHRoZSBzYWMgbW9kZWxsZWQgcGxhbm5pbmcgYWN0aW9uIiwKICAiQ2F0ZWdvcnkiOiAiUGxhbm5pbmdBY3Rpb25zIiwKICAiU3RhZ2UiOiAiRGV2ZWxvcGVkIiwKICAiUmV2aWV3RGF0ZSI6ICIyOS8wOC8yMDI1IiwKICAiUGFyYW1ldGVycyI6IFsKICAgIHsKICAgICAgIk5hbWUiOiAiYWN0aW9uVHlwZSIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJBY3Rpb24gVHlwZSIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUaGUgdHlwZSBvZiB0aGUgYWN0aW9uIiwKICAgICAgIlR5cGUiOiAiU3RyaW5nIgogICAgfSwKICAgIHsKICAgICAgIk5hbWUiOiAicGFja2FnZU5hbWUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiUGFja2FnZSBOYW1lIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSBwYWNrYWdlIG5hbWUiLAogICAgICAiVHlwZSI6ICJzdHJpbmciCiAgICB9LAogICAgewogICAgICAiTmFtZSI6ICJsb2NhbE5hbWUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiTG9jYWwgTmFtZSIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUaGUgbm9uIGZ1bGx5IHF1YWxpZmllZCAnbG9jYWwnIG5hbWUgb2YgdGhlIGFjdGlvbiIsCiAgICAgICJUeXBlIjogIlN0cmluZyIKICAgIH0KICBdCn0K";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_planning_EpmPushActionParameterMemberValue_json = "ewogICJOYW1lIjogImVwbVB1c2hBY3Rpb25QYXJhbWV0ZXJNZW1iZXJWYWx1ZSIsCiAgIkRpc3BsYXlOYW1lIjogIkVwbSBQdXNoIEFjdGlvbiBQYXJhbWV0ZXIgTWVtYmVyIFZhbHVlIiwKICAiRGVzY3JpcHRpb24iOiAiUHVzaCBhIG5ldyBtZW1iZXIgdmFsdWUgZm9yIHRoZSBwbGFubmluZyBhY3Rpb24gcGFyYW1ldGVyIiwKICAiQ2F0ZWdvcnkiOiAiUGxhbm5pbmdBY3Rpb25zIiwKICAiU3RhZ2UiOiAiRGV2ZWxvcGVkIiwKICAiUmV2aWV3RGF0ZSI6ICIyOS8wOC8yMDI1IiwKICAiUGFyYW1ldGVycyI6IFsKICAgIHsKICAgICAgIk5hbWUiOiAiYWN0aW9uVHlwZSIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJBY3Rpb24gVHlwZSIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUaGUgdHlwZSBvZiB0aGUgYWN0aW9uIiwKICAgICAgIlR5cGUiOiAiU3RyaW5nIgogICAgfSwKICAgIHsKICAgICAgIk5hbWUiOiAicGFja2FnZU5hbWUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiUGFja2FnZSBOYW1lIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSBwYWNrYWdlIG5hbWUiLAogICAgICAiVHlwZSI6ICJzdHJpbmciCiAgICB9LAogICAgewogICAgICAiTmFtZSI6ICJsb2NhbE5hbWUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiTG9jYWwgTmFtZSIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUaGUgbm9uIGZ1bGx5IHF1YWxpZmllZCAnbG9jYWwnIG5hbWUgb2YgdGhlIGFjdGlvbiIsCiAgICAgICJUeXBlIjogIlN0cmluZyIKICAgIH0sCiAgICB7CiAgICAgICJOYW1lIjogInBhcmFtZXRlck5hbWUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiUGFyYW1ldGVyIE5hbWUiLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIHBhcmFtZXRlciBuYW1lIiwKICAgICAgIlR5cGUiOiAiU3RyaW5nIgogICAgfQogIF0KfQo=";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_planning_EpmSetActionParameterHierarchyName_json = "ewogICJOYW1lIjogImVwbVNldEFjdGlvblBhcmFtZXRlckhpZXJhcmNoeU5hbWUiLAogICJEaXNwbGF5TmFtZSI6ICJFcG0gU2V0IEFjdGlvbiBQYXJhbWV0ZXIgSGllcmFyY2h5IE5hbWUiLAogICJEZXNjcmlwdGlvbiI6ICJTZXQgdGhlIGhpZXJhcmNoeSBuYW1lIGZvciB0aGUgcGxhbm5pbmcgYWN0aW9uIHBhcmFtZXRlciIsCiAgIkNhdGVnb3J5IjogIlBsYW5uaW5nQWN0aW9ucyIsCiAgIlN0YWdlIjogIkRldmVsb3BlZCIsCiAgIlJldmlld0RhdGUiOiAiMjkvMDgvMjAyNSIsCiAgIlBhcmFtZXRlcnMiOiBbCiAgICB7CiAgICAgICJOYW1lIjogImFjdGlvblR5cGUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiQWN0aW9uIFR5cGUiLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIHR5cGUgb2YgdGhlIGFjdGlvbiIsCiAgICAgICJUeXBlIjogIlN0cmluZyIKICAgIH0sCiAgICB7CiAgICAgICJOYW1lIjogInBhY2thZ2VOYW1lIiwKICAgICAgIkRpc3BsYXlOYW1lIjogIlBhY2thZ2UgTmFtZSIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUaGUgcGFja2FnZSBuYW1lIiwKICAgICAgIlR5cGUiOiAic3RyaW5nIgogICAgfSwKICAgIHsKICAgICAgIk5hbWUiOiAibG9jYWxOYW1lIiwKICAgICAgIkRpc3BsYXlOYW1lIjogIkxvY2FsIE5hbWUiLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIG5vbiBmdWxseSBxdWFsaWZpZWQgJ2xvY2FsJyBuYW1lIG9mIHRoZSBhY3Rpb24iLAogICAgICAiVHlwZSI6ICJTdHJpbmciCiAgICB9LAogICAgewogICAgICAiTmFtZSI6ICJwYXJhbWV0ZXJOYW1lIiwKICAgICAgIkRpc3BsYXlOYW1lIjogIlBhcmFtZXRlciBOYW1lIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSBwYXJhbWV0ZXIgbmFtZSIsCiAgICAgICJUeXBlIjogIlN0cmluZyIKICAgIH0sCiAgICB7CiAgICAgICJOYW1lIjogImhpZXJhcmNoeU5hbWUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiSGllcmFyY2h5IE5hbWUiLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIGhpZXJhcmNoeSBuYW1lIiwKICAgICAgIlR5cGUiOiAiU3RyaW5nIgogICAgfQogIF0KfQo=";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_planning_InitializeEpmPlanning_json = "ewogICJOYW1lIjogImluaXRpYWxpemVFcG1QbGFubmluZyIsCiAgIkRpc3BsYXlOYW1lIjogImluaXRpYWxpemUgRVBNIFBsYW5uaW5nIiwKICAiRGVzY3JpcHRpb24iOiAiU2V0dXAgdGhlIHBsYW5uaW5nIHNlcnZpY2UgZm9yIEVQTSAoSGFuYSBQbGFubmluZykiLAogICJDYXRlZ29yeSI6ICJQbGFubmluZ0FjdGlvbnMiLAogICJTdGFnZSI6ICJEZXZlbG9wZWQiLAogICJSZXZpZXdEYXRlIjogIjAxLzA0LzIwMjUiLAogICJQYXJhbWV0ZXJzIjogWwogICAgewogICAgICAiTmFtZSI6ICJQbGFubmluZ0RhdGFTb3VyY2VOYW1lIiwKICAgICAgIkRpc3BsYXlOYW1lIjogIlBsYW5uaW5nIERhdGFTb3VyY2UgbmFtZSIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUaGUgbmFtZSBvZiB0aGUgRGF0YVNvdXJjZSB0byB1c2UgUGxhbm5pbmcgd2l0aCIsCiAgICAgICJUeXBlIjogIlN0cmluZyIKICAgIH0sCiAgICB7CiAgICAgICJOYW1lIjogIlBsYW5uaW5nTW9kZWxCZWhhdmlvdXIiLAogICAgICAiRGlzcGxheU5hbWUiOiAiUGxhbm5pbmcgbW9kZWwgYmVoYXZpb3VyIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSBzZXR1cCBiZWhhdmlvciBvZiB0aGUgUGxhbm5pbmcgbW9kZWwiLAogICAgICAiVHlwZSI6ICJTdHJpbmciCiAgICB9LAogICAgewogICAgICAiTmFtZSI6ICJQbGFubmluZ1BlcnNpc3RlbmNlVHlwZSIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJQbGFubmluZyBwZXJzaXN0ZW5jZSB0eXBlIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIiIsCiAgICAgICJUeXBlIjogIlN0cmluZyIKICAgIH0sCiAgICB7CiAgICAgICJOYW1lIjogIldpdGhTaGFyZWRWZXJzaW9ucyIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJXaXRoIHNoYXJlZCB2ZXJzaW9ucyIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJTZXQgdXAgdGhlIFBsYW5uaW5nIHNlcnZpY2UgdG8gYWxzbyBzaG93IHZlcnNpb25zIHNoYXJlZCBieSBvdGhlciB1c2VycyIsCiAgICAgICJUeXBlIjogIkJvb2xlYW4iCiAgICB9LAogICAgewogICAgICAiTmFtZSI6ICJCYWNrZW5kVXNlck5hbWUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiQmFja2VuZCB1c2VyIG5hbWUiLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIG5hbWUgb2YgdGhlIFBsYW5uaW5nIHVzZXIgb24gdGhlIGJhY2tlbmQiLAogICAgICAiVHlwZSI6ICJTdHJpbmciCiAgICB9CiAgXQp9Cg==";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_planning_InitializeEpmVersion_json = "ewogICJOYW1lIjogImluaXRpYWxpemVFcG1WZXJzaW9uIiwKICAiRGlzcGxheU5hbWUiOiAiaW5pdGlhbGl6ZSBFUE0gdmVyc2lvbiIsCiAgIkRlc2NyaXB0aW9uIjogIkNyZWF0ZSBhIFBsYW5uaW5nIHZlcnNpb24gZm9yIEVQTSAoSGFuYSBQbGFubmluZykiLAogICJDYXRlZ29yeSI6ICJQbGFubmluZ0FjdGlvbnMiLAogICJTdGFnZSI6ICJEZXZlbG9wZWQiLAogICJSZXZpZXdEYXRlIjogIjAxLzA0LzIwMjUiLAogICJQYXJhbWV0ZXJzIjogWwogICAgewogICAgICAiTmFtZSI6ICJWZXJzaW9uSWQiLAogICAgICAiRGlzcGxheU5hbWUiOiAiVmVyc2lvbiBpZCIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUaGUgaWQgb2YgdGhlIG5ldyB2ZXJzaW9uIiwKICAgICAgIlR5cGUiOiAiSW50ZWdlciIKICAgIH0sCiAgICB7CiAgICAgICJOYW1lIjogIlNoYXJlZFZlcnNpb24iLAogICAgICAiRGlzcGxheU5hbWUiOiAiU2hhcmVkIHZlcnNpb24iLAogICAgICAiRGVzY3JpcHRpb24iOiAiV2hldGhlciB0aGUgdmVyc2lvbiBpcyB0byBiZSBzaGFyZWQiLAogICAgICAiVHlwZSI6ICJCb29sZWFuIgogICAgfSwKICAgIHsKICAgICAgIk5hbWUiOiAiVmVyc2lvbk93bmVyIiwKICAgICAgIkRpc3BsYXlOYW1lIjogIlZlcnNpb24gb3duZXIiLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIG5hbWUgb2YgdGhlIHVzZXIgdGhhdCBvd25zIHRoZSB2ZXJzaW9uIiwKICAgICAgIlR5cGUiOiAiU3RyaW5nIgogICAgfSwKICAgIHsKICAgICAgIk5hbWUiOiAiRGVzY3JpcHRpb24iLAogICAgICAiRGlzcGxheU5hbWUiOiAiRGVzY3JpcHRpb24iLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIGRlc2NyaXB0aW9uIG9mIHRoZSB2ZXJzaW9uIiwKICAgICAgIlR5cGUiOiAiQm9vbGVhbiIKICAgIH0sCiAgICB7CiAgICAgICJOYW1lIjogIlNvdXJjZVZlcnNpb24iLAogICAgICAiRGlzcGxheU5hbWUiOiAiU291cmNlIHZlcnNpb24iLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIHZlcnNpb24gbmFtZSBmcm9tIHdoaWNoIHRvIGNvcHkgdGhlIG5ldyB2ZXJzaW9uIiwKICAgICAgIlR5cGUiOiAiU3RyaW5nIgogICAgfSwKICAgIHsKICAgICAgIk5hbWUiOiAiU291cmNlQ2F0ZWdvcnkiLAogICAgICAiRGlzcGxheU5hbWUiOiAiU291cmNlIGNhdGVnb3J5IiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSBjYXRlZ29yeSBvZiB0aGUgc291cmNlIHZlcnNpb24iLAogICAgICAiVHlwZSI6ICJTdHJpbmciCiAgICB9LAogICAgewogICAgICAiTmFtZSI6ICJTb3VyY2VWZXJzaW9uRnVsbE5hbWUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiU291cmNlIHZlcnNpb24gZnVsbCBuYW1lIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSBmdWxseSBxdWFsaWZpZWQgbmFtZSBvZiB0aGUgc291cmNlIHZlcnNpb24iLAogICAgICAiVHlwZSI6ICJTdHJpbmciCiAgICB9CiAgXQp9Cg==";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_planning_RedoVersion_json = "ewogICJOYW1lIjogInJlZG9WZXJzaW9uIiwKICAiRGlzcGxheU5hbWUiOiAiUmVkbyB2ZXJzaW9uIiwKICAiRGVzY3JpcHRpb24iOiAiUmVkbyB0aGUgcHJldmlvdXMgdW5kb25lIGNoYW5nZSBvbiB0aGUgIHZlcnNpb24iLAogICJDYXRlZ29yeSI6ICJQbGFubmluZ0FjdGlvbnMiLAogICJTdGFnZSI6ICJEZXZlbG9wZWQiLAogICJSZXZpZXdEYXRlIjogIjAxLzA0LzIwMjUiLAogICJQYXJhbWV0ZXJzIjogWwogICAgewogICAgICAiTmFtZSI6ICJWZXJzaW9uSWQiLAogICAgICAiRGlzcGxheU5hbWUiOiAiVmVyc2lvbiBpZCIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUaGUgaWQgb2YgdGhlIHZlcnNpb24iLAogICAgICAiVHlwZSI6ICJJbnRlZ2VyIgogICAgfSwKICAgIHsKICAgICAgIk5hbWUiOiAiU2hhcmVkVmVyc2lvbiIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJTaGFyZWQgdmVyc2lvbiIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJXaGV0aGVyIHRoZSB2ZXJzaW9uIGlzIHRvIGJlIHNoYXJlZCIsCiAgICAgICJUeXBlIjogIkJvb2xlYW4iCiAgICB9LAogICAgewogICAgICAiTmFtZSI6ICJWZXJzaW9uT3duZXIiLAogICAgICAiRGlzcGxheU5hbWUiOiAiVmVyc2lvbiBvd25lciIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUaGUgbmFtZSBvZiB0aGUgdXNlciB0aGF0IG93bnMgdGhlIHZlcnNpb24iLAogICAgICAiVHlwZSI6ICJTdHJpbmciCiAgICB9LAogICAgewogICAgICAiTmFtZSI6ICJEZXNjcmlwdGlvbiIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJEZXNjcmlwdGlvbiIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUaGUgZGVzY3JpcHRpb24gb2YgdGhlIHZlcnNpb24iLAogICAgICAiVHlwZSI6ICJCb29sZWFuIgogICAgfQogIF0KfQo=";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_planning_ResetVersion_json = "ewogICJOYW1lIjogInJlc2V0VmVyc2lvbiIsCiAgIkRpc3BsYXlOYW1lIjogIlJlc2V0IHZlcnNpb24iLAogICJEZXNjcmlwdGlvbiI6ICJSZXNldCB0aGUgdmVyc2lvbiB0byB0aGUgcHJldmlvdXNseSBzYXZlZCBzdGF0ZSIsCiAgIkNhdGVnb3J5IjogIlBsYW5uaW5nQWN0aW9ucyIsCiAgIlN0YWdlIjogIkRldmVsb3BlZCIsCiAgIlJldmlld0RhdGUiOiAiMDEvMDQvMjAyNSIsCiAgIlBhcmFtZXRlcnMiOiBbCiAgICB7CiAgICAgICJOYW1lIjogIlZlcnNpb25JZCIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJWZXJzaW9uIGlkIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSBpZCBvZiB0aGUgdmVyc2lvbiIsCiAgICAgICJUeXBlIjogIkludGVnZXIiCiAgICB9LAogICAgewogICAgICAiTmFtZSI6ICJTaGFyZWRWZXJzaW9uIiwKICAgICAgIkRpc3BsYXlOYW1lIjogIlNoYXJlZCB2ZXJzaW9uIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIldoZXRoZXIgdGhlIHZlcnNpb24gaXMgdG8gYmUgc2hhcmVkIiwKICAgICAgIlR5cGUiOiAiQm9vbGVhbiIKICAgIH0sCiAgICB7CiAgICAgICJOYW1lIjogIlZlcnNpb25Pd25lciIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJWZXJzaW9uIG93bmVyIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSBuYW1lIG9mIHRoZSB1c2VyIHRoYXQgb3ducyB0aGUgdmVyc2lvbiIsCiAgICAgICJUeXBlIjogIlN0cmluZyIKICAgIH0sCiAgICB7CiAgICAgICJOYW1lIjogIkRlc2NyaXB0aW9uIiwKICAgICAgIkRpc3BsYXlOYW1lIjogIkRlc2NyaXB0aW9uIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSBkZXNjcmlwdGlvbiBvZiB0aGUgdmVyc2lvbiIsCiAgICAgICJUeXBlIjogIkJvb2xlYW4iCiAgICB9CiAgXQp9Cg==";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_planning_SetPlanningMode_json = "ewogICJOYW1lIjogInNldFBsYW5uaW5nTW9kZSIsCiAgIkRpc3BsYXlOYW1lIjogIlNldCBQbGFubmluZyBtb2RlIiwKICAiRGVzY3JpcHRpb24iOiAiU2V0IHRoZSBtb2RlIGluIGluIHdoaWNoIHRvIHVzZSBQbGFubmluZyIsCiAgIkNhdGVnb3J5IjogIlBsYW5uaW5nQWN0aW9ucyIsCiAgIlN0YWdlIjogIkRldmVsb3BlZCIsCiAgIlJldmlld0RhdGUiOiAiMDEvMDQvMjAyNSIsCiAgIlBhcmFtZXRlcnMiOiBbCiAgICB7CiAgICAgICJOYW1lIjogIlBsYW5uaW5nTW9kZSIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJQbGFubmluZyBtb2RlIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSBtb2RlIGluIGluIHdoaWNoIHRvIHVzZSBQbGFubmluZyIsCiAgICAgICJUeXBlIjogIlN0cmluZyIKICAgIH0KICBdCn0K";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_planning_SetPlanningVersionSettingsMode_json = "ewogICJOYW1lIjogInNldFBsYW5uaW5nVmVyc2lvblNldHRpbmdzTW9kZSIsCiAgIkRpc3BsYXlOYW1lIjogIlNldCBQbGFubmluZyB2ZXJzaW9uIHNldHRpbmdzIG1vZGUiLAogICJEZXNjcmlwdGlvbiI6ICJTZXQgdGhlIG1vZGUgZm9yIFBsYW5uaW5nIHZlcnNpb24gc2V0dGluZ3MiLAogICJDYXRlZ29yeSI6ICJQbGFubmluZ0FjdGlvbnMiLAogICJTdGFnZSI6ICJEZXZlbG9wZWQiLAogICJSZXZpZXdEYXRlIjogIjAxLzA0LzIwMjUiLAogICJQYXJhbWV0ZXJzIjogWwogICAgewogICAgICAiTmFtZSI6ICJQbGFubmluZ1ZlcnNpb25TZXR0aW5nc01vZGUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiUGxhbm5pbmcgdmVyc2lvbiBzZXR0aW5ncyBtb2RlIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSBtb2RlIG9mIFBsYW5uaW5nIHZlcnNpb24gc2V0dGluZ3MiLAogICAgICAiVHlwZSI6ICJTdHJpbmciCiAgICB9CiAgXQp9Cg==";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_planning_TransferNewValues_json = "ewogICJOYW1lIjogInRyYW5zZmVyTmV3VmFsdWVzIiwKICAiRGlzcGxheU5hbWUiOiAiVHJhbnNmZXIgbmV3IHZhbHVlcyIsCiAgIkRlc2NyaXB0aW9uIjogIlNlbmQgdGhlIG5ldyB1c2VyIGlucHV0cyB0byB0aGUgYmFja2VuZCIsCiAgIkNhdGVnb3J5IjogIlBsYW5uaW5nQWN0aW9ucyIsCiAgIlN0YWdlIjogIkRldmVsb3BlZCIsCiAgIlJldmlld0RhdGUiOiAiMDEvMDQvMjAyNSIsCiAgIlBhcmFtZXRlcnMiOiBbCiAgXQp9Cg==";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_planning_UndoVersion_json = "ewogICJOYW1lIjogInVuZG9WZXJzaW9uIiwKICAiRGlzcGxheU5hbWUiOiAiVW5kbyB2ZXJzaW9uIiwKICAiRGVzY3JpcHRpb24iOiAiVW5kbyB0aGUgcHJldmlvdXMgY2hhbmdlIG9uIHRoZSB2ZXJzaW9uIiwKICAiQ2F0ZWdvcnkiOiAiUGxhbm5pbmdBY3Rpb25zIiwKICAiU3RhZ2UiOiAiRGV2ZWxvcGVkIiwKICAiUmV2aWV3RGF0ZSI6ICIwMS8wNC8yMDI1IiwKICAiUGFyYW1ldGVycyI6IFsKICAgIHsKICAgICAgIk5hbWUiOiAiVmVyc2lvbklkIiwKICAgICAgIkRpc3BsYXlOYW1lIjogIlZlcnNpb24gaWQiLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIGlkIG9mIHRoZSB2ZXJzaW9uIiwKICAgICAgIlR5cGUiOiAiSW50ZWdlciIKICAgIH0sCiAgICB7CiAgICAgICJOYW1lIjogIlNoYXJlZFZlcnNpb24iLAogICAgICAiRGlzcGxheU5hbWUiOiAiU2hhcmVkIHZlcnNpb24iLAogICAgICAiRGVzY3JpcHRpb24iOiAiV2hldGhlciB0aGUgdmVyc2lvbiBpcyB0byBiZSBzaGFyZWQiLAogICAgICAiVHlwZSI6ICJCb29sZWFuIgogICAgfSwKICAgIHsKICAgICAgIk5hbWUiOiAiVmVyc2lvbk93bmVyIiwKICAgICAgIkRpc3BsYXlOYW1lIjogIlZlcnNpb24gb3duZXIiLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIG5hbWUgb2YgdGhlIHVzZXIgdGhhdCBvd25zIHRoZSB2ZXJzaW9uIiwKICAgICAgIlR5cGUiOiAiU3RyaW5nIgogICAgfSwKICAgIHsKICAgICAgIk5hbWUiOiAiRGVzY3JpcHRpb24iLAogICAgICAiRGlzcGxheU5hbWUiOiAiRGVzY3JpcHRpb24iLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIGRlc2NyaXB0aW9uIG9mIHRoZSB2ZXJzaW9uIiwKICAgICAgIlR5cGUiOiAiQm9vbGVhbiIKICAgIH0KICBdCn0K";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_presentation_AddFieldToResultSet_json = "ewogICJOYW1lIjogImFkZEZpZWxkVG9SZXN1bHRTZXQiLAogICJEaXNwbGF5TmFtZSI6ICJBZGQgZmllbGQgdG8gcmVzdWx0IHNldCIsCiAgIkRlc2NyaXB0aW9uIjogIkFkZCBhIGZpZWxkIHRvIHRoZSByZXN1bHQgc2V0IiwKICAiQ2F0ZWdvcnkiOiAiUHJlc2VudGF0aW9uQWN0aW9ucyIsCiAgIlN0YWdlIjogIlB1Ymxpc2hlZCIsCiAgIlJldmlld0RhdGUiOiAiMDEvMDQvMjAyNSIsCiAgIlBhcmFtZXRlcnMiOiBbCiAgICB7CiAgICAgICJOYW1lIjogIkZpZWxkTmFtZSIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJGaWVsZCBuYW1lIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSB0ZWNobmljYWwgbmFtZSBvZiB0aGUgZmllbGQgdG8gYWRkIHRvIGl0cyBkaW1lbnNpb24ncyByZXN1bHQgc2V0IGZpZWxkcyIsCiAgICAgICJUeXBlIjogIkZpZWxkIiwKICAgICAgIlByaW1pdGl2ZVR5cGUiOiAiU3RyaW5nIgogICAgfQogIF0KfQo=";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_presentation_GetFieldContainerAvailableDisplays_json = "ewogICJOYW1lIjogImdldEZpZWxkQ29udGFpbmVyQXZhaWxhYmxlRGlzcGxheXMiLAogICJEaXNwbGF5TmFtZSI6ICJHZXQgRGlzcGxheXMiLAogICJEZXNjcmlwdGlvbiI6ICJSZXRyaWV2ZXMgdGhlIGRpc3BsYXkgdHlwZXMgb2YgdGhlIHJlc3BlY3RpdmUgZGltZW5zaW9uIG9yIGF0dHJpYnV0ZSIsCiAgIkNhdGVnb3J5IjogIlByZXNlbnRhdGlvbkFjdGlvbnMiLAogICJTdGFnZSI6ICJQdWJsaXNoZWQiLAogICJSZXZpZXdEYXRlIjogIjAxLzA0LzIwMjUiLAogICJQYXJhbWV0ZXJzIjogWwogICAgewogICAgICAiTmFtZSI6ICJEaW1lbnNpb25OYW1lIiwKICAgICAgIkRpc3BsYXlOYW1lIjogIkRpbWVuc2lvbiBuYW1lIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSBuYW1lIG9mIHRoZSBkaW1lbnNpb24iLAogICAgICAiVHlwZSI6ICJEaW1lbnNpb24iLAogICAgICAiUHJpbWl0aXZlVHlwZSI6ICJTdHJpbmciCiAgICB9LAogICAgewogICAgICAiTmFtZSI6ICJBdHRyaWJ1dGVOYW1lIiwKICAgICAgIkRpc3BsYXlOYW1lIjogIkF0dHJpYnV0ZSBuYW1lIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSAob3B0aW9uYWwpIGF0dHJpYnV0ZSBuYW1lIChvciBudWxsKSIsCiAgICAgICJUeXBlIjogIlN0cmluZyIKICAgIH0KICBdCn0K";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_presentation_GetFieldContainerAvailableKeyDisplays_json = "ewogICJOYW1lIjogImdldEZpZWxkQ29udGFpbmVyQXZhaWxhYmxlS2V5RGlzcGxheXMiLAogICJEaXNwbGF5TmFtZSI6ICJHZXQgS2V5IERpc3BsYXlzIiwKICAiRGVzY3JpcHRpb24iOiAiUmV0cmlldmVzIHRoZSBrZXkgZGlzcGxheSB0eXBlcyBvZiB0aGUgcmVzcGVjdGl2ZSBkaW1lbnNpb24gb3IgYXR0cmlidXRlIiwKICAiQ2F0ZWdvcnkiOiAiUHJlc2VudGF0aW9uQWN0aW9ucyIsCiAgIlN0YWdlIjogIlB1Ymxpc2hlZCIsCiAgIlJldmlld0RhdGUiOiAiMDEvMDQvMjAyNSIsCiAgIlBhcmFtZXRlcnMiOiBbCiAgICB7CiAgICAgICJOYW1lIjogIkRpbWVuc2lvbk5hbWUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiRGltZW5zaW9uIG5hbWUiLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIG5hbWUgb2YgdGhlIGRpbWVuc2lvbiIsCiAgICAgICJUeXBlIjogIkRpbWVuc2lvbiIsCiAgICAgICJQcmltaXRpdmVUeXBlIjogIlN0cmluZyIKICAgIH0sCiAgICB7CiAgICAgICJOYW1lIjogIkF0dHJpYnV0ZU5hbWUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiQXR0cmlidXRlIG5hbWUiLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIChvcHRpb25hbCkgYXR0cmlidXRlIG5hbWUgKG9yIG51bGwpIiwKICAgICAgIlR5cGUiOiAiU3RyaW5nIgogICAgfQogIF0KfQo=";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_presentation_GetFieldContainerAvailableKeyViews_json = "ewogICJOYW1lIjogImdldEZpZWxkQ29udGFpbmVyQXZhaWxhYmxlS2V5Vmlld3MiLAogICJEaXNwbGF5TmFtZSI6ICJHZXQgS2V5IFZpZXdzIiwKICAiRGVzY3JpcHRpb24iOiAiUmV0cmlldmVzIHRoZSBrZXkgdmlldyAocHJlc2VudGF0aW9uKSB0eXBlcyBvZiB0aGUgcmVzcGVjdGl2ZSBkaW1lbnNpb24gb3IgYXR0cmlidXRlIiwKICAiQ2F0ZWdvcnkiOiAiUHJlc2VudGF0aW9uQWN0aW9ucyIsCiAgIlN0YWdlIjogIlB1Ymxpc2hlZCIsCiAgIlJldmlld0RhdGUiOiAiMDEvMDQvMjAyNSIsCiAgIlBhcmFtZXRlcnMiOiBbCiAgICB7CiAgICAgICJOYW1lIjogIkRpbWVuc2lvbk5hbWUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiRGltZW5zaW9uIG5hbWUiLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIG5hbWUgb2YgdGhlIGRpbWVuc2lvbiIsCiAgICAgICJUeXBlIjogIkRpbWVuc2lvbiIsCiAgICAgICJQcmltaXRpdmVUeXBlIjogIlN0cmluZyIKICAgIH0sCiAgICB7CiAgICAgICJOYW1lIjogIkF0dHJpYnV0ZU5hbWUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiQXR0cmlidXRlIG5hbWUiLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIChvcHRpb25hbCkgYXR0cmlidXRlIG5hbWUgKG9yIG51bGwpIiwKICAgICAgIlR5cGUiOiAiU3RyaW5nIgogICAgfQogIF0KfQo=";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_presentation_GetFieldContainerAvailableTextViews_json = "ewogICJOYW1lIjogImdldEZpZWxkQ29udGFpbmVyQXZhaWxhYmxlVGV4dFZpZXdzIiwKICAiRGlzcGxheU5hbWUiOiAiR2V0IFRleHQgVmlld3MiLAogICJEZXNjcmlwdGlvbiI6ICJSZXRyaWV2ZXMgdGhlIHRleHQgdmlldyAocHJlc2VudGF0aW9uKSB0eXBlcyBvZiB0aGUgcmVzcGVjdGl2ZSBkaW1lbnNpb24gb3IgYXR0cmlidXRlIiwKICAiQ2F0ZWdvcnkiOiAiUHJlc2VudGF0aW9uQWN0aW9ucyIsCiAgIlN0YWdlIjogIlB1Ymxpc2hlZCIsCiAgIlJldmlld0RhdGUiOiAiMDEvMDQvMjAyNSIsCiAgIlBhcmFtZXRlcnMiOiBbCiAgICB7CiAgICAgICJOYW1lIjogIkRpbWVuc2lvbk5hbWUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiRGltZW5zaW9uIG5hbWUiLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIG5hbWUgb2YgdGhlIGRpbWVuc2lvbiIsCiAgICAgICJUeXBlIjogIkRpbWVuc2lvbiIsCiAgICAgICJQcmltaXRpdmVUeXBlIjogIlN0cmluZyIKICAgIH0sCiAgICB7CiAgICAgICJOYW1lIjogIkF0dHJpYnV0ZU5hbWUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiQXR0cmlidXRlIG5hbWUiLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIChvcHRpb25hbCkgYXR0cmlidXRlIG5hbWUgKG9yIG51bGwpIiwKICAgICAgIlR5cGUiOiAiU3RyaW5nIgogICAgfQogIF0KfQo=";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_presentation_GetFieldContainerDefaultKeyDisplay_json = "ewogICJOYW1lIjogImdldEZpZWxkQ29udGFpbmVyRGVmYXVsdEtleURpc3BsYXkiLAogICJEaXNwbGF5TmFtZSI6ICJHZXQgRGVmYXVsdCBLZXkgRGlzcGxheSIsCiAgIkRlc2NyaXB0aW9uIjogIlJldHJpZXZlcyB0aGUgZGVmYXVsdCBrZXkgZGlzcGxheSB0eXBlIG9mIHRoZSByZXNwZWN0aXZlIGRpbWVuc2lvbiBvciBhdHRyaWJ1dGUiLAogICJDYXRlZ29yeSI6ICJQcmVzZW50YXRpb25BY3Rpb25zIiwKICAiU3RhZ2UiOiAiUHVibGlzaGVkIiwKICAiUmV2aWV3RGF0ZSI6ICIwMS8wNC8yMDI1IiwKICAiUGFyYW1ldGVycyI6IFsKICAgIHsKICAgICAgIk5hbWUiOiAiRGltZW5zaW9uTmFtZSIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJEaW1lbnNpb24gbmFtZSIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUaGUgbmFtZSBvZiB0aGUgZGltZW5zaW9uIiwKICAgICAgIlR5cGUiOiAiRGltZW5zaW9uIiwKICAgICAgIlByaW1pdGl2ZVR5cGUiOiAiU3RyaW5nIgogICAgfSwKICAgIHsKICAgICAgIk5hbWUiOiAiQXR0cmlidXRlTmFtZSIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJBdHRyaWJ1dGUgbmFtZSIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUaGUgKG9wdGlvbmFsKSBhdHRyaWJ1dGUgbmFtZSAob3IgbnVsbCkiLAogICAgICAiVHlwZSI6ICJTdHJpbmciCiAgICB9CiAgXQp9Cg==";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_presentation_GetFieldContainerDefaultKeyView_json = "ewogICJOYW1lIjogImdldEZpZWxkQ29udGFpbmVyRGVmYXVsdEtleVZpZXciLAogICJEaXNwbGF5TmFtZSI6ICJHZXQgRGVmYXVsdCBLZXkgVmlldyIsCiAgIkRlc2NyaXB0aW9uIjogIlJldHJpZXZlcyB0aGUgZGVmYXVsdCBrZXkgdmlldyAocHJlc2VudGF0aW9uKSB0eXBlIG9mIHRoZSByZXNwZWN0aXZlIGRpbWVuc2lvbiBvciBhdHRyaWJ1dGUiLAogICJDYXRlZ29yeSI6ICJQcmVzZW50YXRpb25BY3Rpb25zIiwKICAiU3RhZ2UiOiAiUHVibGlzaGVkIiwKICAiUmV2aWV3RGF0ZSI6ICIwMS8wNC8yMDI1IiwKICAiUGFyYW1ldGVycyI6IFsKICAgIHsKICAgICAgIk5hbWUiOiAiRGltZW5zaW9uTmFtZSIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJEaW1lbnNpb24gbmFtZSIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUaGUgbmFtZSBvZiB0aGUgZGltZW5zaW9uIiwKICAgICAgIlR5cGUiOiAiRGltZW5zaW9uIiwKICAgICAgIlByaW1pdGl2ZVR5cGUiOiAiU3RyaW5nIgogICAgfSwKICAgIHsKICAgICAgIk5hbWUiOiAiQXR0cmlidXRlTmFtZSIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJBdHRyaWJ1dGUgbmFtZSIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUaGUgKG9wdGlvbmFsKSBhdHRyaWJ1dGUgbmFtZSAob3IgbnVsbCkiLAogICAgICAiVHlwZSI6ICJTdHJpbmciCiAgICB9CiAgXQp9Cg==";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_presentation_GetFieldContainerDefaultTextView_json = "ewogICJOYW1lIjogImdldEZpZWxkQ29udGFpbmVyRGVmYXVsdFRleHRWaWV3IiwKICAiRGlzcGxheU5hbWUiOiAiR2V0IERlZmF1bHQgVGV4dCBWaWV3IiwKICAiRGVzY3JpcHRpb24iOiAiUmV0cmlldmVzIHRoZSBkZWZhdWx0IHRleHQgdmlldyAocHJlc2VudGF0aW9uKSB0eXBlIG9mIHRoZSByZXNwZWN0aXZlIGRpbWVuc2lvbiBvciBhdHRyaWJ1dGUiLAogICJDYXRlZ29yeSI6ICJQcmVzZW50YXRpb25BY3Rpb25zIiwKICAiU3RhZ2UiOiAiUHVibGlzaGVkIiwKICAiUmV2aWV3RGF0ZSI6ICIwMS8wNC8yMDI1IiwKICAiUGFyYW1ldGVycyI6IFsKICAgIHsKICAgICAgIk5hbWUiOiAiRGltZW5zaW9uTmFtZSIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJEaW1lbnNpb24gbmFtZSIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUaGUgbmFtZSBvZiB0aGUgZGltZW5zaW9uIiwKICAgICAgIlR5cGUiOiAiRGltZW5zaW9uIiwKICAgICAgIlByaW1pdGl2ZVR5cGUiOiAiU3RyaW5nIgogICAgfSwKICAgIHsKICAgICAgIk5hbWUiOiAiQXR0cmlidXRlTmFtZSIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJBdHRyaWJ1dGUgbmFtZSIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUaGUgKG9wdGlvbmFsKSBhdHRyaWJ1dGUgbmFtZSAob3IgbnVsbCkiLAogICAgICAiVHlwZSI6ICJTdHJpbmciCiAgICB9CiAgXQp9Cg==";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_presentation_GetFieldContainerDisplay_json = "ewogICJOYW1lIjogImdldEZpZWxkQ29udGFpbmVyRGlzcGxheSIsCiAgIkRpc3BsYXlOYW1lIjogIkdldCBEaXNwbGF5IiwKICAiRGVzY3JpcHRpb24iOiAiUmV0cmlldmVzIHRoZSBjdXJyZW50IGRpc3BsYXkgdHlwZSBvZiB0aGUgcmVzcGVjdGl2ZSBkaW1lbnNpb24gb3IgYXR0cmlidXRlIiwKICAiQ2F0ZWdvcnkiOiAiUHJlc2VudGF0aW9uQWN0aW9ucyIsCiAgIlN0YWdlIjogIlB1Ymxpc2hlZCIsCiAgIlJldmlld0RhdGUiOiAiMDEvMDQvMjAyNSIsCiAgIlBhcmFtZXRlcnMiOiBbCiAgICB7CiAgICAgICJOYW1lIjogIkRpbWVuc2lvbk5hbWUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiRGltZW5zaW9uIG5hbWUiLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIG5hbWUgb2YgdGhlIGRpbWVuc2lvbiIsCiAgICAgICJUeXBlIjogIkRpbWVuc2lvbiIsCiAgICAgICJQcmltaXRpdmVUeXBlIjogIlN0cmluZyIKICAgIH0sCiAgICB7CiAgICAgICJOYW1lIjogIkF0dHJpYnV0ZU5hbWUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiQXR0cmlidXRlIG5hbWUiLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIChvcHRpb25hbCkgYXR0cmlidXRlIG5hbWUgKG9yIG51bGwpIiwKICAgICAgIlR5cGUiOiAiU3RyaW5nIgogICAgfQogIF0KfQo=";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_presentation_GetFieldContainerKeyDisplay_json = "ewogICJOYW1lIjogImdldEZpZWxkQ29udGFpbmVyS2V5RGlzcGxheSIsCiAgIkRpc3BsYXlOYW1lIjogIkdldCBLZXkgRGlzcGxheSIsCiAgIkRlc2NyaXB0aW9uIjogIlJldHJpZXZlcyB0aGUgY3VycmVudCBrZXkgZGlzcGxheSB0eXBlIG9mIHRoZSByZXNwZWN0aXZlIGRpbWVuc2lvbiBvciBhdHRyaWJ1dGUiLAogICJDYXRlZ29yeSI6ICJQcmVzZW50YXRpb25BY3Rpb25zIiwKICAiU3RhZ2UiOiAiUHVibGlzaGVkIiwKICAiUmV2aWV3RGF0ZSI6ICIwMS8wNC8yMDI1IiwKICAiUGFyYW1ldGVycyI6IFsKICAgIHsKICAgICAgIk5hbWUiOiAiRGltZW5zaW9uTmFtZSIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJEaW1lbnNpb24gbmFtZSIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUaGUgbmFtZSBvZiB0aGUgZGltZW5zaW9uIiwKICAgICAgIlR5cGUiOiAiRGltZW5zaW9uIiwKICAgICAgIlByaW1pdGl2ZVR5cGUiOiAiU3RyaW5nIgogICAgfSwKICAgIHsKICAgICAgIk5hbWUiOiAiQXR0cmlidXRlTmFtZSIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJBdHRyaWJ1dGUgbmFtZSIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUaGUgKG9wdGlvbmFsKSBhdHRyaWJ1dGUgbmFtZSAob3IgbnVsbCkiLAogICAgICAiVHlwZSI6ICJTdHJpbmciCiAgICB9CiAgXQp9Cg==";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_presentation_GetFieldContainerKeyView_json = "ewogICJOYW1lIjogImdldEZpZWxkQ29udGFpbmVyS2V5VmlldyIsCiAgIkRpc3BsYXlOYW1lIjogIkdldCBLZXkgVmlldyIsCiAgIkRlc2NyaXB0aW9uIjogIlJldHJpZXZlcyB0aGUgY3VycmVudCBrZXkgdmlldyAocHJlc2VudGF0aW9uKSB0eXBlIG9mIHRoZSByZXNwZWN0aXZlIGRpbWVuc2lvbiBvciBhdHRyaWJ1dGUiLAogICJDYXRlZ29yeSI6ICJQcmVzZW50YXRpb25BY3Rpb25zIiwKICAiU3RhZ2UiOiAiUHVibGlzaGVkIiwKICAiUmV2aWV3RGF0ZSI6ICIwMS8wNC8yMDI1IiwKICAiUGFyYW1ldGVycyI6IFsKICAgIHsKICAgICAgIk5hbWUiOiAiRGltZW5zaW9uTmFtZSIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJEaW1lbnNpb24gbmFtZSIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUaGUgbmFtZSBvZiB0aGUgZGltZW5zaW9uIiwKICAgICAgIlR5cGUiOiAiRGltZW5zaW9uIiwKICAgICAgIlByaW1pdGl2ZVR5cGUiOiAiU3RyaW5nIgogICAgfSwKICAgIHsKICAgICAgIk5hbWUiOiAiQXR0cmlidXRlTmFtZSIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJBdHRyaWJ1dGUgbmFtZSIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUaGUgKG9wdGlvbmFsKSBhdHRyaWJ1dGUgbmFtZSAob3IgbnVsbCkiLAogICAgICAiVHlwZSI6ICJTdHJpbmciCiAgICB9CiAgXQp9Cg==";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_presentation_GetFieldContainerTextView_json = "ewogICJOYW1lIjogImdldEZpZWxkQ29udGFpbmVyVGV4dFZpZXciLAogICJEaXNwbGF5TmFtZSI6ICJHZXQgVGV4dCBWaWV3IiwKICAiRGVzY3JpcHRpb24iOiAiUmV0cmlldmVzIHRoZSBjdXJyZW50IHRleHQgdmlldyAocHJlc2VudGF0aW9uKSB0eXBlIG9mIHRoZSByZXNwZWN0aXZlIGRpbWVuc2lvbiBvciBhdHRyaWJ1dGUiLAogICJDYXRlZ29yeSI6ICJQcmVzZW50YXRpb25BY3Rpb25zIiwKICAiU3RhZ2UiOiAiUHVibGlzaGVkIiwKICAiUmV2aWV3RGF0ZSI6ICIwMS8wNC8yMDI1IiwKICAiUGFyYW1ldGVycyI6IFsKICAgIHsKICAgICAgIk5hbWUiOiAiRGltZW5zaW9uTmFtZSIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJEaW1lbnNpb24gbmFtZSIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUaGUgbmFtZSBvZiB0aGUgZGltZW5zaW9uIiwKICAgICAgIlR5cGUiOiAiRGltZW5zaW9uIiwKICAgICAgIlByaW1pdGl2ZVR5cGUiOiAiU3RyaW5nIgogICAgfSwKICAgIHsKICAgICAgIk5hbWUiOiAiQXR0cmlidXRlTmFtZSIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJBdHRyaWJ1dGUgbmFtZSIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUaGUgKG9wdGlvbmFsKSBhdHRyaWJ1dGUgbmFtZSAob3IgbnVsbCkiLAogICAgICAiVHlwZSI6ICJTdHJpbmciCiAgICB9CiAgXQp9Cg==";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_presentation_IsFieldContainerKeyViewActive_json = "ewogICJOYW1lIjogImlzRmllbGRDb250YWluZXJLZXlWaWV3QWN0aXZlIiwKICAiRGlzcGxheU5hbWUiOiAiSXMgS2V5IFZpZXcgQWN0aXZlIiwKICAiRGVzY3JpcHRpb24iOiAiQ2hlY2tzIHdoZXRoZXIgZm9yIHRoZSByZXNwZWN0aXZlIGRpbWVuc2lvbiBvciBhdHRyaWJ1dGUgYSBrZXkgaXMgc3VwcG9zZWQgdG8gYmUgZGlzcGxheWVkIiwKICAiQ2F0ZWdvcnkiOiAiUHJlc2VudGF0aW9uQWN0aW9ucyIsCiAgIlN0YWdlIjogIlB1Ymxpc2hlZCIsCiAgIlJldmlld0RhdGUiOiAiMDEvMDQvMjAyNSIsCiAgIlBhcmFtZXRlcnMiOiBbCiAgICB7CiAgICAgICJOYW1lIjogIkRpbWVuc2lvbk5hbWUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiRGltZW5zaW9uIG5hbWUiLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIG5hbWUgb2YgdGhlIGRpbWVuc2lvbiIsCiAgICAgICJUeXBlIjogIkRpbWVuc2lvbiIsCiAgICAgICJQcmltaXRpdmVUeXBlIjogIlN0cmluZyIKICAgIH0sCiAgICB7CiAgICAgICJOYW1lIjogIkF0dHJpYnV0ZU5hbWUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiQXR0cmlidXRlIG5hbWUiLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIChvcHRpb25hbCkgYXR0cmlidXRlIG5hbWUgKG9yIG51bGwpIiwKICAgICAgIlR5cGUiOiAiU3RyaW5nIgogICAgfQogIF0KfQo=";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_presentation_IsFieldContainerKeyViewDefault_json = "ewogICJOYW1lIjogImlzRmllbGRDb250YWluZXJLZXlWaWV3RGVmYXVsdCIsCiAgIkRpc3BsYXlOYW1lIjogIklzIEtleSBWaWV3IERlZmF1bHQiLAogICJEZXNjcmlwdGlvbiI6ICJDaGVja3Mgd2hldGhlciBmb3IgdGhlIHJlc3BlY3RpdmUgZGltZW5zaW9uIG9yIGF0dHJpYnV0ZSB0aGUgZGVmYXVsdCBrZXkgdmlldyBpcyBzZWxlY3RlZCIsCiAgIkNhdGVnb3J5IjogIlByZXNlbnRhdGlvbkFjdGlvbnMiLAogICJTdGFnZSI6ICJQdWJsaXNoZWQiLAogICJSZXZpZXdEYXRlIjogIjAxLzA0LzIwMjUiLAogICJQYXJhbWV0ZXJzIjogWwogICAgewogICAgICAiTmFtZSI6ICJEaW1lbnNpb25OYW1lIiwKICAgICAgIkRpc3BsYXlOYW1lIjogIkRpbWVuc2lvbiBuYW1lIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSBuYW1lIG9mIHRoZSBkaW1lbnNpb24iLAogICAgICAiVHlwZSI6ICJEaW1lbnNpb24iLAogICAgICAiUHJpbWl0aXZlVHlwZSI6ICJTdHJpbmciCiAgICB9LAogICAgewogICAgICAiTmFtZSI6ICJBdHRyaWJ1dGVOYW1lIiwKICAgICAgIkRpc3BsYXlOYW1lIjogIkF0dHJpYnV0ZSBuYW1lIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSAob3B0aW9uYWwpIGF0dHJpYnV0ZSBuYW1lIChvciBudWxsKSIsCiAgICAgICJUeXBlIjogIlN0cmluZyIKICAgIH0KICBdCn0K";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_presentation_IsFieldContainerKeyViewSupported_json = "ewogICJOYW1lIjogImlzRmllbGRDb250YWluZXJLZXlWaWV3U3VwcG9ydGVkIiwKICAiRGlzcGxheU5hbWUiOiAiSXMgS2V5IFZpZXcgU3VwcG9ydGVkIiwKICAiRGVzY3JpcHRpb24iOiAiQ2hlY2tzIHdoZXRoZXIgZm9yIHRoZSByZXNwZWN0aXZlIGRpbWVuc2lvbiBvciBhdHRyaWJ1dGUgYSBrZXkgY2FuIGJlIGRpc3BsYXllZCIsCiAgIkNhdGVnb3J5IjogIlByZXNlbnRhdGlvbkFjdGlvbnMiLAogICJTdGFnZSI6ICJQdWJsaXNoZWQiLAogICJSZXZpZXdEYXRlIjogIjAxLzA0LzIwMjUiLAogICJQYXJhbWV0ZXJzIjogWwogICAgewogICAgICAiTmFtZSI6ICJEaW1lbnNpb25OYW1lIiwKICAgICAgIkRpc3BsYXlOYW1lIjogIkRpbWVuc2lvbiBuYW1lIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSBuYW1lIG9mIHRoZSBkaW1lbnNpb24iLAogICAgICAiVHlwZSI6ICJEaW1lbnNpb24iLAogICAgICAiUHJpbWl0aXZlVHlwZSI6ICJTdHJpbmciCiAgICB9LAogICAgewogICAgICAiTmFtZSI6ICJBdHRyaWJ1dGVOYW1lIiwKICAgICAgIkRpc3BsYXlOYW1lIjogIkF0dHJpYnV0ZSBuYW1lIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSAob3B0aW9uYWwpIGF0dHJpYnV0ZSBuYW1lIChvciBudWxsKSIsCiAgICAgICJUeXBlIjogIlN0cmluZyIKICAgIH0KICBdCn0K";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_presentation_IsFieldContainerTextViewActive_json = "ewogICJOYW1lIjogImlzRmllbGRDb250YWluZXJUZXh0Vmlld0FjdGl2ZSIsCiAgIkRpc3BsYXlOYW1lIjogIklzIFRleHQgVmlldyBBY3RpdmUiLAogICJEZXNjcmlwdGlvbiI6ICJDaGVja3Mgd2hldGhlciBmb3IgdGhlIHJlc3BlY3RpdmUgZGltZW5zaW9uIG9yIGF0dHJpYnV0ZSBhIHRleHQgaXMgc3VwcG9zZWQgdG8gYmUgZGlzcGxheWVkIiwKICAiQ2F0ZWdvcnkiOiAiUHJlc2VudGF0aW9uQWN0aW9ucyIsCiAgIlN0YWdlIjogIlB1Ymxpc2hlZCIsCiAgIlJldmlld0RhdGUiOiAiMDEvMDQvMjAyNSIsCiAgIlBhcmFtZXRlcnMiOiBbCiAgICB7CiAgICAgICJOYW1lIjogIkRpbWVuc2lvbk5hbWUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiRGltZW5zaW9uIG5hbWUiLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIG5hbWUgb2YgdGhlIGRpbWVuc2lvbiIsCiAgICAgICJUeXBlIjogIkRpbWVuc2lvbiIsCiAgICAgICJQcmltaXRpdmVUeXBlIjogIlN0cmluZyIKICAgIH0sCiAgICB7CiAgICAgICJOYW1lIjogIkF0dHJpYnV0ZU5hbWUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiQXR0cmlidXRlIG5hbWUiLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIChvcHRpb25hbCkgYXR0cmlidXRlIG5hbWUgKG9yIG51bGwpIiwKICAgICAgIlR5cGUiOiAiU3RyaW5nIgogICAgfQogIF0KfQo=";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_presentation_IsFieldContainerTextViewDefault_json = "ewogICJOYW1lIjogImlzRmllbGRDb250YWluZXJUZXh0Vmlld0RlZmF1bHQiLAogICJEaXNwbGF5TmFtZSI6ICJJcyBUZXh0IFZpZXcgRGVmYXVsdCIsCiAgIkRlc2NyaXB0aW9uIjogIkNoZWNrcyB3aGV0aGVyIGZvciB0aGUgcmVzcGVjdGl2ZSBkaW1lbnNpb24gb3IgYXR0cmlidXRlIHRoZSBkZWZhdWx0IHRleHQgdmlldyBpcyBzZWxlY3RlZCIsCiAgIkNhdGVnb3J5IjogIlByZXNlbnRhdGlvbkFjdGlvbnMiLAogICJTdGFnZSI6ICJQdWJsaXNoZWQiLAogICJSZXZpZXdEYXRlIjogIjAxLzA0LzIwMjUiLAogICJQYXJhbWV0ZXJzIjogWwogICAgewogICAgICAiTmFtZSI6ICJEaW1lbnNpb25OYW1lIiwKICAgICAgIkRpc3BsYXlOYW1lIjogIkRpbWVuc2lvbiBuYW1lIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSBuYW1lIG9mIHRoZSBkaW1lbnNpb24iLAogICAgICAiVHlwZSI6ICJEaW1lbnNpb24iLAogICAgICAiUHJpbWl0aXZlVHlwZSI6ICJTdHJpbmciCiAgICB9LAogICAgewogICAgICAiTmFtZSI6ICJBdHRyaWJ1dGVOYW1lIiwKICAgICAgIkRpc3BsYXlOYW1lIjogIkF0dHJpYnV0ZSBuYW1lIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSAob3B0aW9uYWwpIGF0dHJpYnV0ZSBuYW1lIChvciBudWxsKSIsCiAgICAgICJUeXBlIjogIlN0cmluZyIKICAgIH0KICBdCn0K";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_presentation_IsFieldContainerTextViewSupported_json = "ewogICJOYW1lIjogImlzRmllbGRDb250YWluZXJUZXh0Vmlld1N1cHBvcnRlZCIsCiAgIkRpc3BsYXlOYW1lIjogIklzIFRleHQgVmlldyBTdXBwb3J0ZWQiLAogICJEZXNjcmlwdGlvbiI6ICJDaGVja3Mgd2hldGhlciBmb3IgdGhlIHJlc3BlY3RpdmUgZGltZW5zaW9uIG9yIGF0dHJpYnV0ZSBhIHRleHQgY2FuIGJlIGRpc3BsYXllZCIsCiAgIkNhdGVnb3J5IjogIlByZXNlbnRhdGlvbkFjdGlvbnMiLAogICJTdGFnZSI6ICJQdWJsaXNoZWQiLAogICJSZXZpZXdEYXRlIjogIjAxLzA0LzIwMjUiLAogICJQYXJhbWV0ZXJzIjogWwogICAgewogICAgICAiTmFtZSI6ICJEaW1lbnNpb25OYW1lIiwKICAgICAgIkRpc3BsYXlOYW1lIjogIkRpbWVuc2lvbiBuYW1lIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSBuYW1lIG9mIHRoZSBkaW1lbnNpb24iLAogICAgICAiVHlwZSI6ICJEaW1lbnNpb24iLAogICAgICAiUHJpbWl0aXZlVHlwZSI6ICJTdHJpbmciCiAgICB9LAogICAgewogICAgICAiTmFtZSI6ICJBdHRyaWJ1dGVOYW1lIiwKICAgICAgIkRpc3BsYXlOYW1lIjogIkF0dHJpYnV0ZSBuYW1lIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSAob3B0aW9uYWwpIGF0dHJpYnV0ZSBuYW1lIChvciBudWxsKSIsCiAgICAgICJUeXBlIjogIlN0cmluZyIKICAgIH0KICBdCn0K";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_presentation_IsFieldInResultSet_json = "ewogICJOYW1lIjogImlzRmllbGRJblJlc3VsdFNldCIsCiAgIkRpc3BsYXlOYW1lIjogIklzIGZpZWxkIGluIHRoZSByZXN1bHQgc2V0IiwKICAiRGVzY3JpcHRpb24iOiAiQ2hlY2sgd2hldGhlciB0aGUgZmllbGQgaXMgZGlzcGxheWVkIGluIHRoZSByZXN1bHQgc2V0IiwKICAiQ2F0ZWdvcnkiOiAiUHJlc2VudGF0aW9uQWN0aW9ucyIsCiAgIlN0YWdlIjogIlB1Ymxpc2hlZCIsCiAgIlJldmlld0RhdGUiOiAiMDEvMDQvMjAyNSIsCiAgIlBhcmFtZXRlcnMiOiBbCiAgICB7CiAgICAgICJOYW1lIjogIkZpZWxkTmFtZSIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJGaWVsZCBuYW1lIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSB0ZWNobmljYWwgbmFtZSBvZiB0aGUgZmllbGQgdG8gYmUgY2hlY2tlZCIsCiAgICAgICJUeXBlIjogIkZpZWxkIiwKICAgICAgIlByaW1pdGl2ZVR5cGUiOiAiU3RyaW5nIgogICAgfQogIF0KfQo=";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_presentation_RemoveFieldFromResultSet_json = "ewogICJOYW1lIjogInJlbW92ZUZpZWxkRnJvbVJlc3VsdFNldCIsCiAgIkRpc3BsYXlOYW1lIjogIlJlbW92ZSBmaWVsZCBmcm9tIHJlc3VsdCBzZXQiLAogICJEZXNjcmlwdGlvbiI6ICJSZW1vdmUgYSBmaWVsZCBmcm9tIHRoZSByZXN1bHQgc2V0IiwKICAiQ2F0ZWdvcnkiOiAiUHJlc2VudGF0aW9uQWN0aW9ucyIsCiAgIlN0YWdlIjogIlB1Ymxpc2hlZCIsCiAgIlJldmlld0RhdGUiOiAiMDEvMDQvMjAyNSIsCiAgIlBhcmFtZXRlcnMiOiBbCiAgICB7CiAgICAgICJOYW1lIjogIkZpZWxkTmFtZSIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJGaWVsZCBuYW1lIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSB0ZWNobmljYWwgbmFtZSBvZiB0aGUgZmllbGQgdG8gcmVtb3ZlIGZyb20gaXRzIGRpbWVuc2lvbidzIHJlc3VsdCBzZXQgZmllbGRzIiwKICAgICAgIlR5cGUiOiAiRmllbGQiLAogICAgICAiUHJpbWl0aXZlVHlwZSI6ICJTdHJpbmciCiAgICB9CiAgXQp9Cg==";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_presentation_ResetFieldContainerKeyViewToDefault_json = "ewogICJOYW1lIjogInJlc2V0RmllbGRDb250YWluZXJLZXlWaWV3VG9EZWZhdWx0IiwKICAiRGlzcGxheU5hbWUiOiAiUmVzZXQgS2V5IFZpZXcgVG8gRGVmYXVsdCIsCiAgIkRlc2NyaXB0aW9uIjogIlJlc2V0cyB0aGUga2V5IHZpZXcgZm9yIHRoZSByZXNwZWN0aXZlIGRpbWVuc2lvbiBvciBhdHRyaWJ1dGUgdG8gdGhlIGRlZmF1bHQgcHJlc2VudGF0aW9uIHR5cGUiLAogICJDYXRlZ29yeSI6ICJQcmVzZW50YXRpb25BY3Rpb25zIiwKICAiU3RhZ2UiOiAiUHVibGlzaGVkIiwKICAiUmV2aWV3RGF0ZSI6ICIwMS8wNC8yMDI1IiwKICAiUGFyYW1ldGVycyI6IFsKICAgIHsKICAgICAgIk5hbWUiOiAiRGltZW5zaW9uTmFtZSIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJEaW1lbnNpb24gbmFtZSIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUaGUgbmFtZSBvZiB0aGUgZGltZW5zaW9uIiwKICAgICAgIlR5cGUiOiAiRGltZW5zaW9uIiwKICAgICAgIlByaW1pdGl2ZVR5cGUiOiAiU3RyaW5nIgogICAgfSwKICAgIHsKICAgICAgIk5hbWUiOiAiQXR0cmlidXRlTmFtZSIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJBdHRyaWJ1dGUgbmFtZSIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUaGUgKG9wdGlvbmFsKSBhdHRyaWJ1dGUgbmFtZSAob3IgbnVsbCkiLAogICAgICAiVHlwZSI6ICJTdHJpbmciCiAgICB9CiAgXQp9Cg==";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_presentation_ResetFieldContainerTextViewToDefault_json = "ewogICJOYW1lIjogInJlc2V0RmllbGRDb250YWluZXJUZXh0Vmlld1RvRGVmYXVsdCIsCiAgIkRpc3BsYXlOYW1lIjogIlJlc2V0IFRleHQgVmlldyBUbyBEZWZhdWx0IiwKICAiRGVzY3JpcHRpb24iOiAiUmVzZXRzIHRoZSB0ZXh0IHZpZXcgZm9yIHRoZSByZXNwZWN0aXZlIGRpbWVuc2lvbiBvciBhdHRyaWJ1dGUgdG8gdGhlIGRlZmF1bHQgcHJlc2VudGF0aW9uIHR5cGUiLAogICJDYXRlZ29yeSI6ICJQcmVzZW50YXRpb25BY3Rpb25zIiwKICAiU3RhZ2UiOiAiUHVibGlzaGVkIiwKICAiUmV2aWV3RGF0ZSI6ICIwMS8wNC8yMDI1IiwKICAiUGFyYW1ldGVycyI6IFsKICAgIHsKICAgICAgIk5hbWUiOiAiRGltZW5zaW9uTmFtZSIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJEaW1lbnNpb24gbmFtZSIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUaGUgbmFtZSBvZiB0aGUgZGltZW5zaW9uIiwKICAgICAgIlR5cGUiOiAiRGltZW5zaW9uIiwKICAgICAgIlByaW1pdGl2ZVR5cGUiOiAiU3RyaW5nIgogICAgfSwKICAgIHsKICAgICAgIk5hbWUiOiAiQXR0cmlidXRlTmFtZSIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJBdHRyaWJ1dGUgbmFtZSIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUaGUgKG9wdGlvbmFsKSBhdHRyaWJ1dGUgbmFtZSAob3IgbnVsbCkiLAogICAgICAiVHlwZSI6ICJTdHJpbmciCiAgICB9CiAgXQp9Cg==";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_presentation_SetFieldContainerDisplay_json = "ewogICJOYW1lIjogInNldEZpZWxkQ29udGFpbmVyRGlzcGxheSIsCiAgIkRpc3BsYXlOYW1lIjogIlNldCBEaXNwbGF5IFR5cGUiLAogICJEZXNjcmlwdGlvbiI6ICJTcGVjaWZpZXMgdGhlIGRpc3BsYXkgdHlwZSBmb3IgdGhlIHJlc3BlY3RpdmUgZGltZW5zaW9uIG9yIGF0dHJpYnV0ZSIsCiAgIkNhdGVnb3J5IjogIlByZXNlbnRhdGlvbkFjdGlvbnMiLAogICJTdGFnZSI6ICJQdWJsaXNoZWQiLAogICJSZXZpZXdEYXRlIjogIjAxLzA0LzIwMjUiLAogICJQYXJhbWV0ZXJzIjogWwogICAgewogICAgICAiTmFtZSI6ICJEaW1lbnNpb25OYW1lIiwKICAgICAgIkRpc3BsYXlOYW1lIjogIkRpbWVuc2lvbiBuYW1lIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSBuYW1lIG9mIHRoZSBkaW1lbnNpb24iLAogICAgICAiVHlwZSI6ICJEaW1lbnNpb24iLAogICAgICAiUHJpbWl0aXZlVHlwZSI6ICJTdHJpbmciCiAgICB9LAogICAgewogICAgICAiTmFtZSI6ICJBdHRyaWJ1dGVOYW1lIiwKICAgICAgIkRpc3BsYXlOYW1lIjogIkF0dHJpYnV0ZSBuYW1lIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSAob3B0aW9uYWwpIGF0dHJpYnV0ZSBuYW1lIChvciBudWxsKSIsCiAgICAgICJUeXBlIjogIlN0cmluZyIKICAgIH0sCiAgICB7CiAgICAgICJOYW1lIjogIkRpc3BsYXlUeXBlIiwKICAgICAgIkRpc3BsYXlOYW1lIjogIkRpc3BsYXkgVHlwZSIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUaGUgZGlzcGxheSB0eXBlLCBsaWtlIE5vbmUsIEtleUFuZFRleHQsIFRleHRBbmRLZXksIEtleSwgVGV4dCIsCiAgICAgICJUeXBlIjogIlN0cmluZyIKICAgIH0KICBdCn0K";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_presentation_SetFieldContainerKeyDisplay_json = "ewogICJOYW1lIjogInNldEZpZWxkQ29udGFpbmVyS2V5RGlzcGxheSIsCiAgIkRpc3BsYXlOYW1lIjogIlNldCBLZXkgRGlzcGxheSIsCiAgIkRlc2NyaXB0aW9uIjogIlNwZWNpZmllcyB0aGUga2V5IGRpc3BsYXkgdHlwZSBmb3IgdGhlIHJlc3BlY3RpdmUgZGltZW5zaW9uIG9yIGF0dHJpYnV0ZSIsCiAgIkNhdGVnb3J5IjogIlByZXNlbnRhdGlvbkFjdGlvbnMiLAogICJTdGFnZSI6ICJQdWJsaXNoZWQiLAogICJSZXZpZXdEYXRlIjogIjAxLzA0LzIwMjUiLAogICJQYXJhbWV0ZXJzIjogWwogICAgewogICAgICAiTmFtZSI6ICJEaW1lbnNpb25OYW1lIiwKICAgICAgIkRpc3BsYXlOYW1lIjogIkRpbWVuc2lvbiBuYW1lIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSBuYW1lIG9mIHRoZSBkaW1lbnNpb24iLAogICAgICAiVHlwZSI6ICJEaW1lbnNpb24iLAogICAgICAiUHJpbWl0aXZlVHlwZSI6ICJTdHJpbmciCiAgICB9LAogICAgewogICAgICAiTmFtZSI6ICJBdHRyaWJ1dGVOYW1lIiwKICAgICAgIkRpc3BsYXlOYW1lIjogIkF0dHJpYnV0ZSBuYW1lIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSAob3B0aW9uYWwpIGF0dHJpYnV0ZSBuYW1lIChvciBudWxsKSIsCiAgICAgICJUeXBlIjogIlN0cmluZyIKICAgIH0sCiAgICB7CiAgICAgICJOYW1lIjogIktleURpc3BsYXlUeXBlIiwKICAgICAgIkRpc3BsYXlOYW1lIjogIktleSBEaXNwbGF5IFR5cGUiLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIGRpc3BsYXkgdHlwZSwgbGlrZSBFeHRlcm5hbCwgSW50ZXJuYWwsIENvbXBvdW5kZWQsIE5vbkNvbXBvdW5kZWQiLAogICAgICAiVHlwZSI6ICJTdHJpbmciCiAgICB9CiAgXQp9Cg==";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_presentation_SetFieldContainerKeyView_json = "ewogICJOYW1lIjogInNldEZpZWxkQ29udGFpbmVyS2V5VmlldyIsCiAgIkRpc3BsYXlOYW1lIjogIlNldCBLZXkgVmlldyIsCiAgIkRlc2NyaXB0aW9uIjogIlNwZWNpZmllcyB0aGUga2V5IHZpZXcgKHByZXNlbnRhdGlvbikgdHlwZSBmb3IgdGhlIHJlc3BlY3RpdmUgZGltZW5zaW9uIG9yIGF0dHJpYnV0ZSIsCiAgIkNhdGVnb3J5IjogIlByZXNlbnRhdGlvbkFjdGlvbnMiLAogICJTdGFnZSI6ICJQdWJsaXNoZWQiLAogICJSZXZpZXdEYXRlIjogIjAxLzA0LzIwMjUiLAogICJQYXJhbWV0ZXJzIjogWwogICAgewogICAgICAiTmFtZSI6ICJEaW1lbnNpb25OYW1lIiwKICAgICAgIkRpc3BsYXlOYW1lIjogIkRpbWVuc2lvbiBuYW1lIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSBuYW1lIG9mIHRoZSBkaW1lbnNpb24iLAogICAgICAiVHlwZSI6ICJEaW1lbnNpb24iLAogICAgICAiUHJpbWl0aXZlVHlwZSI6ICJTdHJpbmciCiAgICB9LAogICAgewogICAgICAiTmFtZSI6ICJBdHRyaWJ1dGVOYW1lIiwKICAgICAgIkRpc3BsYXlOYW1lIjogIkF0dHJpYnV0ZSBuYW1lIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSAob3B0aW9uYWwpIGF0dHJpYnV0ZSBuYW1lIChvciBudWxsKSIsCiAgICAgICJUeXBlIjogIlN0cmluZyIKICAgIH0sCiAgICB7CiAgICAgICJOYW1lIjogIktleVByZXNlbnRhdGlvblR5cGUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiS2V5IFByZXNlbnRhdGlvbiBUeXBlIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSBwcmVzZW50YXRpb24gdHlwZSwgbGlrZSBLZXksIERpc3BsYXlLZXksIERpc3BsYXlLZXlOb25Db21wb3VuZGVkLCBEaXNwbGF5S2V5TWl4ZWQgZXRjLiIsCiAgICAgICJUeXBlIjogIlN0cmluZyIKICAgIH0KICBdCn0K";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_presentation_SetFieldContainerTextView_json = "ewogICJOYW1lIjogInNldEZpZWxkQ29udGFpbmVyVGV4dFZpZXciLAogICJEaXNwbGF5TmFtZSI6ICJTZXQgVGV4dCBWaWV3IiwKICAiRGVzY3JpcHRpb24iOiAiU3BlY2lmaWVzIHRoZSB0ZXh0IHZpZXcgKHByZXNlbnRhdGlvbikgdHlwZSBmb3IgdGhlIHJlc3BlY3RpdmUgZGltZW5zaW9uIG9yIGF0dHJpYnV0ZSIsCiAgIkNhdGVnb3J5IjogIlByZXNlbnRhdGlvbkFjdGlvbnMiLAogICJTdGFnZSI6ICJQdWJsaXNoZWQiLAogICJSZXZpZXdEYXRlIjogIjAxLzA0LzIwMjUiLAogICJQYXJhbWV0ZXJzIjogWwogICAgewogICAgICAiTmFtZSI6ICJEaW1lbnNpb25OYW1lIiwKICAgICAgIkRpc3BsYXlOYW1lIjogIkRpbWVuc2lvbiBuYW1lIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSBuYW1lIG9mIHRoZSBkaW1lbnNpb24iLAogICAgICAiVHlwZSI6ICJEaW1lbnNpb24iLAogICAgICAiUHJpbWl0aXZlVHlwZSI6ICJTdHJpbmciCiAgICB9LAogICAgewogICAgICAiTmFtZSI6ICJBdHRyaWJ1dGVOYW1lIiwKICAgICAgIkRpc3BsYXlOYW1lIjogIkF0dHJpYnV0ZSBuYW1lIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSAob3B0aW9uYWwpIGF0dHJpYnV0ZSBuYW1lIChvciBudWxsKSIsCiAgICAgICJUeXBlIjogIlN0cmluZyIKICAgIH0sCiAgICB7CiAgICAgICJOYW1lIjogIlRleHRQcmVzZW50YXRpb25UeXBlIiwKICAgICAgIkRpc3BsYXlOYW1lIjogIlRleHQgUHJlc2VudGF0aW9uIFR5cGUiLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIHByZXNlbnRhdGlvbiB0eXBlLCBsaWtlIFNob3J0VGV4dCwgTWVkaXVtVGV4dCwgTG9uZ1RleHQsIFhMTG9uZ1RleHQgZXRjLiIsCiAgICAgICJUeXBlIjogIlN0cmluZyIKICAgIH0KICBdCn0K";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_properties_GetProperty_json = "ewogICJOYW1lIjogImdldFByb3BlcnR5IiwKICAiRGlzcGxheU5hbWUiOiAiR2V0IHByb3BlcnR5IiwKICAiRGVzY3JpcHRpb24iOiAiR2V0IGEgZGF0YSBwcm92aWRlciBwcm9wZXJ0eSB2YWx1ZSIsCiAgIkNhdGVnb3J5IjogIlByb3BlcnR5QWN0aW9ucyIsCiAgIlN0YWdlIjogIlB1Ymxpc2hlZCIsCiAgIlJldmlld0RhdGUiOiAiMDEvMDQvMjAyNSIsCiAgIlBhcmFtZXRlcnMiOiBbCiAgICB7CiAgICAgICJOYW1lIjogIlByb3BlcnR5TmFtZSIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJQcm9wZXJ0eSBuYW1lIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSBuYW1lIG9mIHRoZSBwcm9wZXJ0eSB0byBnZXQiLAogICAgICAiVHlwZSI6ICJEYXRhUHJvdmlkZXJQcm9wZXJ0eSIsCiAgICAgICJQcmltaXRpdmVUeXBlIjogIlN0cmluZyIKICAgIH0KICBdCn0K";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_properties_ListAllProperties_json = "ewogICJOYW1lIjogImxpc3RBbGxQcm9wZXJ0aWVzIiwKICAiRGlzcGxheU5hbWUiOiAiTGlzdCBhbGwgcHJvcGVydGllcyIsCiAgIkRlc2NyaXB0aW9uIjogIkdldCBhbGwgcnVudGltZSBwcm9wZXJ0aWVzIHNldCBvbiB0aGUgZGF0YSBwcm92aWRlciIsCiAgIkNhdGVnb3J5IjogIlByb3BlcnR5QWN0aW9ucyIsCiAgIlN0YWdlIjogIlB1Ymxpc2hlZCIsCiAgIlJldmlld0RhdGUiOiAiMDEvMDQvMjAyNSIsCiAgIlBhcmFtZXRlcnMiOiBbCiAgICB7CiAgICAgICJOYW1lIjogIldpdGhWYWx1ZXMiLAogICAgICAiRGlzcGxheU5hbWUiOiAiV2l0aCB2YWx1ZXMiLAogICAgICAiRGVzY3JpcHRpb24iOiAiRGV0ZXJtaW5lcyB3aGV0aGVyIHRoZSBjdXJyZW50IHZhbHVlcyBzaG91bGQgYmUgaW5jbHVkZWQgaW4gdGhlIGxpc3QiLAogICAgICAiVHlwZSI6ICJCb29sZWFuIiwKICAgICAgIkRlZmF1bHQiOiBmYWxzZQogICAgfQogIF0KfQo=";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_properties_SetProperty_json = "ewogICJOYW1lIjogInNldFByb3BlcnR5IiwKICAiRGlzcGxheU5hbWUiOiAiU2V0IHByb3BlcnR5IiwKICAiRGVzY3JpcHRpb24iOiAiU2V0IGEgZGF0YSBwcm92aWRlciBwcm9wZXJ0eSBkdXJpbmcgcnVudGltZSIsCiAgIkNhdGVnb3J5IjogIlByb3BlcnR5QWN0aW9ucyIsCiAgIlN0YWdlIjogIlB1Ymxpc2hlZCIsCiAgIlJldmlld0RhdGUiOiAiMDEvMDQvMjAyNSIsCiAgIlBhcmFtZXRlcnMiOiBbCiAgICB7CiAgICAgICJOYW1lIjogIlByb3BlcnR5TmFtZSIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJQcm9wZXJ0eSBuYW1lIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSBuYW1lIG9mIHRoZSBwcm9wZXJ0eSB0byBiZSBzZXQiLAogICAgICAiVHlwZSI6ICJEYXRhUHJvdmlkZXJQcm9wZXJ0eSIsCiAgICAgICJQcmltaXRpdmVUeXBlIjogIlN0cmluZyIKICAgIH0sCiAgICB7CiAgICAgICJOYW1lIjogIlByb3BlcnR5VmFsdWUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiUHJvcGVydHkgdmFsdWUiLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIHZhbHVlIG9mIHRoZSBwcm9wZXJ0eSB0byBiZSBzZXQiLAogICAgICAiVHlwZSI6ICJTdHJpbmciCiAgICB9CiAgXQp9Cg==";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_queryModel_GetAccountMembers_json = "ewogICJOYW1lIjogImdldEFjY291bnRNZW1iZXJzIiwKICAiRGlzcGxheU5hbWUiOiAiR2V0IEFjY291bnQgTWVtYmVycyIsCiAgIkRlc2NyaXB0aW9uIjogIkdldCB0aGUgbWVtYmVycyBpbiB0aGUgQWNjb3VudCBEaW1lbnNpb24gaW4gdGhlIFF1ZXJ5IiwKICAiQ2F0ZWdvcnkiOiAiUXVlcnlNb2RlbEFjdGlvbnMiLAogICJTdGFnZSI6ICJQdWJsaXNoZWQiLAogICJSZXZpZXdEYXRlIjogIjAxLzA0LzIwMjUiLAogICJQYXJhbWV0ZXJzIjogW10KfQo=";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_queryModel_GetDimensions_json = "ewogICJOYW1lIjogImdldERpbWVuc2lvbnMiLAogICJEaXNwbGF5TmFtZSI6ICJHZXQgRGltZW5zaW9ucyIsCiAgIkRlc2NyaXB0aW9uIjogIkdldCBhbGwgZGltZW5zaW9ucyBpbiB0aGUgUXVlcnkiLAogICJDYXRlZ29yeSI6ICJRdWVyeU1vZGVsQWN0aW9ucyIsCiAgIlN0YWdlIjogIlB1Ymxpc2hlZCIsCiAgIlJldmlld0RhdGUiOiAiMDEvMDQvMjAyNSIsCiAgIlBhcmFtZXRlcnMiOiBbXQp9Cg==";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_queryModel_GetMeasureMembers_json = "ewogICJOYW1lIjogImdldE1lYXN1cmVNZW1iZXJzIiwKICAiRGlzcGxheU5hbWUiOiAiR2V0IE1lYXN1cmUgTWVtYmVycyIsCiAgIkRlc2NyaXB0aW9uIjogIkdldCB0aGUgbWVtYmVycyBmcm9tIHRoZSBtZWFzdXJlcyBzdHJ1Y3R1cmUgaW4gdGhlIFF1ZXJ5IiwKICAiQ2F0ZWdvcnkiOiAiUXVlcnlNb2RlbEFjdGlvbnMiLAogICJTdGFnZSI6ICJQdWJsaXNoZWQiLAogICJSZXZpZXdEYXRlIjogIjAxLzA0LzIwMjUiLAogICJQYXJhbWV0ZXJzIjogW10KfQo=";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_queryModel_GetSecondaryStructureMembers_json = "ewogICJOYW1lIjogImdldFNlY29uZGFyeVN0cnVjdHVyZU1lbWJlcnMiLAogICJEaXNwbGF5TmFtZSI6ICJHZXQgU2Vjb25kYXJ5IFN0cnVjdHVyZSBNZW1iZXJzIiwKICAiRGVzY3JpcHRpb24iOiAiR2V0IHRoZSBtZW1iZXJzIGZyb20gdGhlIHNlY29uZGFyeSBzdHJ1Y3R1cmUgaW4gdGhlIFF1ZXJ5IiwKICAiQ2F0ZWdvcnkiOiAiUXVlcnlNb2RlbEFjdGlvbnMiLAogICJTdGFnZSI6ICJQdWJsaXNoZWQiLAogICJSZXZpZXdEYXRlIjogIjAxLzA0LzIwMjUiLAogICJQYXJhbWV0ZXJzIjogW10KfQo=";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_queryModel_SetDataSourceText_json = "ewogICJOYW1lIjogInNldERhdGFTb3VyY2VUZXh0IiwKICAiRGlzcGxheU5hbWUiOiAiU2V0IERhdGEgU291cmNlIFRleHQiLAogICJEZXNjcmlwdGlvbiI6ICJTZXQgdGhlIGRhdGEgc291cmNlIHRleHQgZm9yIHRoZSBRdWVyeSBNb2RlbCIsCiAgIkNhdGVnb3J5IjogIlF1ZXJ5TW9kZWxBY3Rpb25zIiwKICAiU3RhZ2UiOiAiUHVibGlzaGVkIiwKICAiUmV2aWV3RGF0ZSI6ICIwMS8wNC8yMDI1IiwKICAiUGFyYW1ldGVycyI6IFsKICAgIHsKICAgICAgIk5hbWUiOiAiVGV4dCIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJUaGUgVGV4dCIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUaGUgdGV4dCB5b3Ugd2FudCB0byBzZXQiLAogICAgICAiVHlwZSI6ICJTdHJpbmciCiAgICB9CiAgXQp9Cg==";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_readmode_GetCurrentResultsetReadMode_json = "ewogICJOYW1lIjogImdldEN1cnJlbnRSZXN1bHRTZXRSZWFkTW9kZSIsCiAgIkRpc3BsYXlOYW1lIjogIkdldCBjdXJyZW50IHJlc3VsdCBzZXQgcmVhZCBtb2RlIiwKICAiRGVzY3JpcHRpb24iOiAiUmV0cmlldmUgdGhlIGN1cnJlbnQgcmVzdWx0IHNldCByZWFkIG1vZGUgZm9yIHRoZSBnaXZlbiBkaW1lbnNpb24iLAogICJDYXRlZ29yeSI6ICJSZWFkTW9kZUFjdGlvbnMiLAogICJTdGFnZSI6ICJQdWJsaXNoZWQiLAogICJSZXZpZXdEYXRlIjogIjAxLzA0LzIwMjUiLAogICJQYXJhbWV0ZXJzIjogWwogICAgewogICAgICAiTmFtZSI6ICJEaW1lbnNpb25OYW1lIiwKICAgICAgIkRpc3BsYXlOYW1lIjogIkRpbWVuc2lvbiBOYW1lIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSBuYW1lIG9mIHRoZSBkaW1lbnNpb24gZm9yIHdoaWNoIHRoZSBjdXJyZW50IHJlc3VsdCBzZXQgcmVhZCBtb2RlIGlzIHJldHJpZXZlZCIsCiAgICAgICJUeXBlIjogIkRpbWVuc2lvbiIsCiAgICAgICJQcmltaXRpdmVUeXBlIjogIlN0cmluZyIKICAgIH0KICBdCn0=";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_readmode_GetSupportedResultsetReadModes_json = "ewogICJOYW1lIjogImdldFN1cHBvcnRlZFJlc3VsdFNldFJlYWRNb2RlcyIsCiAgIkRpc3BsYXlOYW1lIjogIkdldCBzdXBwb3J0ZWQgcmVzdWx0IHNldCByZWFkIG1vZGVzIiwKICAiRGVzY3JpcHRpb24iOiAiUmV0cmlldmUgdGhlIGxpc3Qgb2YgYXZhaWxhYmxlIC8gc3VwcG9ydGVkIHJlc3VsdCBzZXQgcmVhZCBtb2RlIGZvciB0aGUgZ2l2ZW4gZGltZW5zaW9uIiwKICAiQ2F0ZWdvcnkiOiAiUmVhZE1vZGVBY3Rpb25zIiwKICAiU3RhZ2UiOiAiUHVibGlzaGVkIiwKICAiUmV2aWV3RGF0ZSI6ICIwMS8wNC8yMDI1IiwKICAiUGFyYW1ldGVycyI6IFsKICAgIHsKICAgICAgIk5hbWUiOiAiRGltZW5zaW9uTmFtZSIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJEaW1lbnNpb24gTmFtZSIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUaGUgbmFtZSBvZiB0aGUgZGltZW5zaW9uIGZvciB3aGljaCB0aGUgc3VwcG9ydGVkIHJlc3VsdCBzZXQgcmVhZCBtb2RlcyBhcmUgcmV0cmlldmVkIiwKICAgICAgIlR5cGUiOiAiRGltZW5zaW9uIiwKICAgICAgIlByaW1pdGl2ZVR5cGUiOiAiU3RyaW5nIgogICAgfQogIF0KfQ==";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_readmode_SetResultsetReadMode_json = "ewogICJOYW1lIjogInNldFJlc3VsdFNldFJlYWRNb2RlIiwKICAiRGlzcGxheU5hbWUiOiAiU2V0IHJlc3VsdCBzZXQgcmVhZCBtb2RlIiwKICAiRGVzY3JpcHRpb24iOiAiU3BlY2lmeSB0aGUgcmVzdWx0IHNldCByZWFkIG1vZGUgZm9yIHRoZSBnaXZlbiBkaW1lbnNpb24iLAogICJDYXRlZ29yeSI6ICJSZWFkTW9kZUFjdGlvbnMiLAogICJTdGFnZSI6ICJQdWJsaXNoZWQiLAogICJSZXZpZXdEYXRlIjogIjAxLzA0LzIwMjUiLAogICJQYXJhbWV0ZXJzIjogWwogICAgewogICAgICAiTmFtZSI6ICJEaW1lbnNpb25OYW1lIiwKICAgICAgIkRpc3BsYXlOYW1lIjogIkRpbWVuc2lvbiBOYW1lIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSBuYW1lIG9mIHRoZSBkaW1lbnNpb24gZm9yIHdoaWNoIHRoZSByZXN1bHQgc2V0IHJlYWQgbW9kZSBpcyBzZXQiLAogICAgICAiVHlwZSI6ICJEaW1lbnNpb24iLAogICAgICAiUHJpbWl0aXZlVHlwZSI6ICJTdHJpbmciCiAgICB9LAogICAgewogICAgICAiTmFtZSI6ICJSZWFkTW9kZSIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJSZWFkIE1vZGUiLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIHJlYWQgbW9kZSB0byBiZSBzZXQiLAogICAgICAiVHlwZSI6ICJNZW1iZXJSZWFkTW9kZSIsCiAgICAgICJQcmltaXRpdmVUeXBlIjogIlN0cmluZyIKICAgIH0sCiAgICB7CiAgICAgICJOYW1lIjogIlN5bmNocm9uaXplUmVhZE1vZGVzQW5kU3VwcHJlc3Npb24iLAogICAgICAiRGlzcGxheU5hbWUiOiAiU3luY2hyb25pemUgUmVhZCBNb2RlcyBhbmQgU3VwcHJlc3Npb24iLAogICAgICAiRGVzY3JpcHRpb24iOiAiRmxhZyB3aGV0aGVyIG90aGVyIHJlYWQgbW9kZXMgb24gdGhlIGF4aXMgYW5kIHRoZSBzdXBwcmVzc2lvbiB0eXBlIHNob3VsZCBiZSBzeW5jaHJvbml6ZWQgYWNjb3JkaW5nbHkiLAogICAgICAiVHlwZSI6ICJCb29sZWFuIgogICAgfQogIF0KfQ==";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_resultset_FetchNewResultSet_json = "ewogICJOYW1lIjogImZldGNoTmV3UmVzdWx0U2V0IiwKICAiRGlzcGxheU5hbWUiOiAiRmV0Y2ggbmV3IHJlc3VsdCBzZXQiLAogICJEZXNjcmlwdGlvbiI6ICJHZXQgdGhlIGxhdGVzdCByZXN1bHQgc2V0IGZyb20gdGhlIGJhY2tlbmQiLAogICJDYXRlZ29yeSI6ICJSZXN1bHRTZXRBY3Rpb25zIiwKICAiU3RhZ2UiOiAiUHVibGlzaGVkIiwKICAiUmV2aWV3RGF0ZSI6ICIwMS8wNC8yMDI1IiwKICAiUGFyYW1ldGVycyI6IFsKICBdCn0K";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_resultset_FetchNewTile_json = "ewogICJOYW1lIjogImZldGNoTmV3VGlsZSIsCiAgIkRpc3BsYXlOYW1lIjogIkZldGNoIG5ldyB0aWxlIiwKICAiRGVzY3JpcHRpb24iOiAiUmVxdWVzdHMgYSBzdWJzZXQgb2YgdGhlIHJlc3VsdCBzZXQgZnJvbSB0aGUgYmFja2VuZCIsCiAgIkNhdGVnb3J5IjogIlJlc3VsdFNldEFjdGlvbnMiLAogICJTdGFnZSI6ICJQdWJsaXNoZWQiLAogICJSZXZpZXdEYXRlIjogIjAxLzA0LzIwMjUiLAogICJQYXJhbWV0ZXJzIjogWwogICAgewogICAgICAiTmFtZSI6ICJSb3dGcm9tIiwKICAgICAgIkRpc3BsYXlOYW1lIjogIlJvdyBmcm9tIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSByb3cgaW5kZXggZnJvbSB3aGVyZSB0aGUgdGlsZSBzaG91bGQgc3RhcnQiLAogICAgICAiVHlwZSI6ICJJbnRlZ2VyIiwKICAgICAgIkRlZmF1bHQiOiAwCiAgICB9LAogICAgewogICAgICAiTmFtZSI6ICJSb3dUbyIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJSb3cgdG8iLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIHJvdyBpbmRleCBmcm9tIHdoZXJlIHRoZSB0aWxlIHNob3VsZCBlbmQiLAogICAgICAiVHlwZSI6ICJJbnRlZ2VyIiwKICAgICAgIkRlZmF1bHQiOiAtMQogICAgfSwKICAgIHsKICAgICAgIk5hbWUiOiAiQ29sdW1uRnJvbSIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJDb2x1bW4gZnJvbSIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUaGUgY29sdW1uIGluZGV4IGZyb20gd2hlcmUgdGhlIHRpbGUgc2hvdWxkIHN0YXJ0IiwKICAgICAgIlR5cGUiOiAiSW50ZWdlciIsCiAgICAgICJEZWZhdWx0IjogMAogICAgfSwKICAgIHsKICAgICAgIk5hbWUiOiAiQ29sdW1uVG8iLAogICAgICAiRGlzcGxheU5hbWUiOiAiQ29sdW1uIGZyb20iLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIGNvbHVtbiBpbmRleCBmcm9tIHdoZXJlIHRoZSB0aWxlIHNob3VsZCBlbmQiLAogICAgICAiVHlwZSI6ICJJbnRlZ2VyIiwKICAgICAgIkRlZmF1bHQiOiAtMQogICAgfSwKICAgIHsKICAgICAgIk5hbWUiOiAiVGFibGVWaXN1YWxpemF0aW9uTmFtZSIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJUYWJsZSB2aXN1YWxpemF0aW9uIG5hbWUiLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIChvcHRpb25hbCkgbmFtZSBvZiB0aGUgdGFibGUgdmlzdWFsaXphdGlvbiB0byB1c2UgZm9yIHRoZSB0aWxlIiwKICAgICAgIlR5cGUiOiAiU3RyaW5nIiwKICAgICAgIkRlZmF1bHQiOiBudWxsCiAgICB9CiAgXQp9Cg==";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_resultset_GetAsciiResultSet_json = "ewogICJOYW1lIjogImdldEFzY2lpUmVzdWx0U2V0IiwKICAiRGlzcGxheU5hbWUiOiAiR2V0IEFTQ0lJIHJlc3VsdCBzZXQiLAogICJEZXNjcmlwdGlvbiI6ICJHZXQgdGhlIHJlc3VsdCBzZXQgaW4gQVNDSUkgZm9ybWF0IiwKICAiQ2F0ZWdvcnkiOiAiUmVzdWx0U2V0QWN0aW9ucyIsCiAgIlN0YWdlIjogIlB1Ymxpc2hlZCIsCiAgIlJldmlld0RhdGUiOiAiMDEvMDQvMjAyNSIsCiAgIlBhcmFtZXRlcnMiOiBbCiAgICB7CiAgICAgICJOYW1lIjogIk1heFJvd0NvdW50IiwKICAgICAgIkRpc3BsYXlOYW1lIjogIk1heCByb3cgY291bnQiLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIG1heGltdW0gbnVtYmVyIG9mIHJvd3MgdG8gcmV0dXJuIiwKICAgICAgIlR5cGUiOiAiSW50ZWdlciIsCiAgICAgICJEZWZhdWx0IjogLTEKICAgIH0sCiAgICB7CiAgICAgICJOYW1lIjogIk1heENvbHVtbkNvdW50IiwKICAgICAgIkRpc3BsYXlOYW1lIjogIk1heCBjb2x1bW4gY291bnQiLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIG1heGltdW0gbnVtYmVyIG9mIGNvbHVtbnMgdG8gcmV0dXJuIiwKICAgICAgIlR5cGUiOiAiSW50ZWdlciIsCiAgICAgICJEZWZhdWx0IjogLTEKICAgIH0KICBdCn0K";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_resultset_GetCsvResultSet_json = "ewogICJOYW1lIjogImdldENzdlJlc3VsdFNldCIsCiAgIkRpc3BsYXlOYW1lIjogIkdldCBDU1YgcmVzdWx0IHNldCIsCiAgIkRlc2NyaXB0aW9uIjogIkdldCB0aGUgcmVzdWx0IHNldCBpbiBDU1YgZm9ybWF0IiwKICAiQ2F0ZWdvcnkiOiAiUmVzdWx0U2V0QWN0aW9ucyIsCiAgIlN0YWdlIjogIlB1Ymxpc2hlZCIsCiAgIlJldmlld0RhdGUiOiAiMDEvMDQvMjAyNSIsCiAgIlBhcmFtZXRlcnMiOiBbCiAgICB7CiAgICAgICJOYW1lIjogIk1heFJvd0NvdW50IiwKICAgICAgIkRpc3BsYXlOYW1lIjogIk1heCByb3cgY291bnQiLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIG1heGltdW0gbnVtYmVyIG9mIHJvd3MgdG8gcmV0dXJuIiwKICAgICAgIlR5cGUiOiAiSW50ZWdlciIsCiAgICAgICJEZWZhdWx0IjogLTEKICAgIH0sCiAgICB7CiAgICAgICJOYW1lIjogIk1heENvbHVtbkNvdW50IiwKICAgICAgIkRpc3BsYXlOYW1lIjogIk1heCBjb2x1bW4gY291bnQiLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIG1heGltdW0gbnVtYmVyIG9mIGNvbHVtbnMgdG8gcmV0dXJuIiwKICAgICAgIlR5cGUiOiAiSW50ZWdlciIsCiAgICAgICJEZWZhdWx0IjogLTEKICAgIH0KICBdCn0K";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_resultset_GetGridTile_json = "ewogICJOYW1lIjogImdldEdyaWRUaWxlIiwKICAiRGlzcGxheU5hbWUiOiAiR2V0IGdyaWQgdGlsZSIsCiAgIkRlc2NyaXB0aW9uIjogIkdldCB0aGUgcmVzdWx0IHNldCBncmlkIHRpbGUiLAogICJDYXRlZ29yeSI6ICJSZXN1bHRTZXRBY3Rpb25zIiwKICAiU3RhZ2UiOiAiUHVibGlzaGVkIiwKICAiUmV2aWV3RGF0ZSI6ICIwMS8wNC8yMDI1IiwKICAiUGFyYW1ldGVycyI6IFtdCn0K";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_serialization_ExportInsightInformation_json = "ewogICJOYW1lIjogImV4cG9ydEluc2lnaHRJbmZvcm1hdGlvbiIsCiAgIkRpc3BsYXlOYW1lIjogIkV4cG9ydCBJbnNpZ2h0IGluZm9ybWF0aW9uIiwKICAiRGVzY3JpcHRpb24iOiAiR2V0IHRoZSBjdXJyZW50IHN0YXRlIG9mIHRoZSBkYXRhIHByb3ZpZGVyIGFzIGEgaW5zaWdodCBqc29uIiwKICAiQ2F0ZWdvcnkiOiAiU2VyaWFsaXphdGlvbkFjdGlvbnMiLAogICJTdGFnZSI6ICJQdWJsaXNoZWQiLAogICJSZXZpZXdEYXRlIjogIjExLzA2LzIwMjUiLAogICJQYXJhbWV0ZXJzIjogWwogIF0KfQo=";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_serialization_ExportRepository_json = "ewogICJOYW1lIjogImV4cG9ydFJlcG9zaXRvcnkiLAogICJEaXNwbGF5TmFtZSI6ICJFeHBvcnQgUmVwb3NpdG9yeSIsCiAgIkRlc2NyaXB0aW9uIjogIkdldCB0aGUgY3VycmVudCBzdGF0ZSBvZiB0aGUgZGF0YSBwcm92aWRlciBhcyBhIHJlcG9zaXRvcnkganNvbiIsCiAgIkNhdGVnb3J5IjogIlNlcmlhbGl6YXRpb25BY3Rpb25zIiwKICAiU3RhZ2UiOiAiUHVibGlzaGVkIiwKICAiUmV2aWV3RGF0ZSI6ICIwMS8wNC8yMDI1IiwKICAiUGFyYW1ldGVycyI6IFsKICAgIHsKICAgICAgIk5hbWUiOiAiVXNlRGVsdGEiLAogICAgICAiRGlzcGxheU5hbWUiOiAiVXNlIERlbHRhIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIkRlY2lkZXMgd2hldGhlciB0aGUgZXhwb3J0IHNob3VsZCBiZSBpbiBkZWx0YSBmb3JtYXQiLAogICAgICAiVHlwZSI6ICJCb29sZWFuIiwKICAgICAgIkRlZmF1bHQiOiB0cnVlCiAgICB9CiAgXQp9Cg==";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_serialization_ImportRepository_json = "ewogICJOYW1lIjogImltcG9ydFJlcG9zaXRvcnkiLAogICJEaXNwbGF5TmFtZSI6ICJJbXBvcnQgUmVwb3NpdG9yeSIsCiAgIkRlc2NyaXB0aW9uIjogIlNldCB0aGUgY3VycmVudCBzdGF0ZSBvZiB0aGUgZGF0YSBwcm92aWRlciBhcyByZXBvc2l0b3J5IGpzb24iLAogICJDYXRlZ29yeSI6ICJTZXJpYWxpemF0aW9uQWN0aW9ucyIsCiAgIlN0YWdlIjogIlB1Ymxpc2hlZCIsCiAgIlJldmlld0RhdGUiOiAiMDEvMDQvMjAyNSIsCiAgIlBhcmFtZXRlcnMiOiBbCiAgICB7CiAgICAgICJOYW1lIjogIlJlcG9zaXRvcnkiLAogICAgICAiRGlzcGxheU5hbWUiOiAiUmVwb3NpdG9yeSIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUaGUgcmVwb3NpdG9yeSBqc29uIHRvIGltcG9ydCIsCiAgICAgICJUeXBlIjogIk9iamVjdCIKICAgIH0sCiAgICB7CiAgICAgICJOYW1lIjogIlVzZURlbHRhIiwKICAgICAgIkRpc3BsYXlOYW1lIjogIlVzZSBEZWx0YSIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJEZWNpZGVzIHdoZXRoZXIgdGhlIGltcG9ydCBzaG91bGQgYmUgaW4gZGVsdGEgZm9ybWF0IiwKICAgICAgIlR5cGUiOiAiQm9vbGVhbiIsCiAgICAgICJEZWZhdWx0IjogdHJ1ZQogICAgfQogIF0KfQo=";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_sort_ClearDimensionSort_json = "ewogICJOYW1lIjogImNsZWFyRGltZW5zaW9uU29ydCIsCiAgIkRpc3BsYXlOYW1lIjogIkNsZWFyIGRpbWVuc2lvbiBzb3J0IiwKICAiRGVzY3JpcHRpb24iOiAiUmVtb3ZlIHRoZSBzb3J0aW5nIG9uIHRoZSBnaXZlbiBkaW1lbnNpb24iLAogICJDYXRlZ29yeSI6ICJTb3J0QWN0aW9ucyIsCiAgIlN0YWdlIjogIlB1Ymxpc2hlZCIsCiAgIlJldmlld0RhdGUiOiAiMDEvMDQvMjAyNSIsCiAgIlBhcmFtZXRlcnMiOiBbCiAgICB7CiAgICAgICJOYW1lIjogIkRpbWVuc2lvbk5hbWUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiRGltZW5zaW9uIG5hbWUiLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIG5hbWUgb2YgdGhlIGRpbWVuc2lvbiB0byBjbGVhciB0aGUgc29ydCBvbiIsCiAgICAgICJUeXBlIjogIkRpbWVuc2lvbiIsCiAgICAgICJQcmltaXRpdmVUeXBlIjogIlN0cmluZyIKICAgIH0KICBdCn0K";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_sort_ClearMeasureSort_json = "ewogICJOYW1lIjogImNsZWFyTWVhc3VyZVNvcnQiLAogICJEaXNwbGF5TmFtZSI6ICJDbGVhciBtZWFzdXJlIHNvcnQiLAogICJEZXNjcmlwdGlvbiI6ICJSZW1vdmUgdGhlIHNvcnRpbmcgb24gdGhlIGdpdmVuIG1lYXN1cmUgbWVtYmVyIiwKICAiQ2F0ZWdvcnkiOiAiU29ydEFjdGlvbnMiLAogICJTdGFnZSI6ICJQdWJsaXNoZWQiLAogICJSZXZpZXdEYXRlIjogIjAxLzA0LzIwMjUiLAogICJQYXJhbWV0ZXJzIjogWwogICAgewogICAgICAiTmFtZSI6ICJNZWFzdXJlTWVtYmVyTmFtZSIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJNZWFzdXJlIG1lbWJlciBuYW1lIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSBuYW1lIG9mIHRoZSBtZWFzdXJlIG1lbWJlciB0byBjbGVhciB0aGUgc29ydCBvbiIsCiAgICAgICJUeXBlIjogIk1lYXN1cmVNZW1iZXIiLAogICAgICAiUHJpbWl0aXZlVHlwZSI6ICJTdHJpbmciCiAgICB9CiAgXQp9Cg==";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_sort_SortByField_json = "ewogICJOYW1lIjogInNvcnRCeUZpZWxkIiwKICAiRGlzcGxheU5hbWUiOiAiU29ydCBieSBmaWVsZCIsCiAgIkRlc2NyaXB0aW9uIjogIlNvcnQgYnkgYSBkaW1lbnNpb24gZmllbGQiLAogICJDYXRlZ29yeSI6ICJTb3J0QWN0aW9ucyIsCiAgIlN0YWdlIjogIlB1Ymxpc2hlZCIsCiAgIlJldmlld0RhdGUiOiAiMDEvMDQvMjAyNSIsCiAgIlBhcmFtZXRlcnMiOiBbCiAgICB7CiAgICAgICJOYW1lIjogIkZpZWxkTmFtZSIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJGaWVsZCBuYW1lIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSBuYW1lIG9mIHRoZSBmaWVsZCB0byBzb3J0IG9uIiwKICAgICAgIlR5cGUiOiAiRGltZW5zaW9uIiwKICAgICAgIlByaW1pdGl2ZVR5cGUiOiAiU3RyaW5nIgogICAgfSwKICAgIHsKICAgICAgIk5hbWUiOiAiU29ydERpcmVjdGlvbiIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJTb3J0IGRpcmVjdGlvbiIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUaGUgZGlyZWN0aW9uIGluIHdoaWNoIHRvIHNvcnQiLAogICAgICAiVHlwZSI6ICJTb3J0RGlyZWN0aW9uIiwKICAgICAgIlByaW1pdGl2ZVR5cGUiOiAiQXNjZW5kaW5nLCBEZXNjZW5kaW5nIgogICAgfQogIF0KfQo=";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_sort_SortByMeasure_json = "ewogICJOYW1lIjogInNvcnRCeU1lYXN1cmUiLAogICJEaXNwbGF5TmFtZSI6ICJTb3J0IGJ5IG1lYXN1cmUiLAogICJEZXNjcmlwdGlvbiI6ICJTZXQgdGhlIHNvcnQgb3JkZXIgZm9yIGEgbWVhc3VyZSIsCiAgIkNhdGVnb3J5IjogIlNvcnRBY3Rpb25zIiwKICAiU3RhZ2UiOiAiUHVibGlzaGVkIiwKICAiUmV2aWV3RGF0ZSI6ICIwMS8wNC8yMDI1IiwKICAiUGFyYW1ldGVycyI6IFsKICAgIHsKICAgICAgIk5hbWUiOiAiTWVhc3VyZU1lbWJlck5hbWUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiTWVhc3VyZSBtZW1iZXIgbmFtZSIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUaGUgbmFtZSBvZiB0aGUgbWVhc3VyZSBtZW1iZXIgdG8gc29ydCBvbiIsCiAgICAgICJUeXBlIjogIk1lYXN1cmVNZW1iZXIiLAogICAgICAiUHJpbWl0aXZlVHlwZSI6ICJTdHJpbmciCiAgICB9LAogICAgewogICAgICAiTmFtZSI6ICJTb3J0RGlyZWN0aW9uIiwKICAgICAgIkRpc3BsYXlOYW1lIjogIlNvcnQgZGlyZWN0aW9uIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSBkaXJlY3Rpb24gaW4gd2hpY2ggdG8gc29ydCIsCiAgICAgICJUeXBlIjogIlNvcnREaXJlY3Rpb24iLAogICAgICAiUHJpbWl0aXZlVHlwZSI6ICJBc2NlbmRpbmcsIERlc2NlbmRpbmciCiAgICB9CiAgXQp9Cg==";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_sort_SortByMemberKey_json = "ewogICJOYW1lIjogInNvcnRCeU1lbWJlcktleSIsCiAgIkRpc3BsYXlOYW1lIjogIlNvcnQgYnkgbWVtYmVyIGtleSIsCiAgIkRlc2NyaXB0aW9uIjogIlNvcnQgYSBkaW1lbnNpb24gYnkgdGhlIGtleXMgb2YgdGhlIG1lbWJlcnMiLAogICJDYXRlZ29yeSI6ICJTb3J0QWN0aW9ucyIsCiAgIlN0YWdlIjogIlB1Ymxpc2hlZCIsCiAgIlJldmlld0RhdGUiOiAiMDEvMDQvMjAyNSIsCiAgIlBhcmFtZXRlcnMiOiBbCiAgICB7CiAgICAgICJOYW1lIjogIkRpbWVuc2lvbk5hbWUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiRGltZW5zaW9uIG5hbWUiLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIG5hbWUgb2YgdGhlIGRpbWVuc2lvbiB0byBzb3J0IG9uIiwKICAgICAgIlR5cGUiOiAiRGltZW5zaW9uIiwKICAgICAgIlByaW1pdGl2ZVR5cGUiOiAiU3RyaW5nIgogICAgfSwKICAgIHsKICAgICAgIk5hbWUiOiAiU29ydERpcmVjdGlvbiIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJTb3J0IGRpcmVjdGlvbiIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUaGUgZGlyZWN0aW9uIGluIHdoaWNoIHRvIHNvcnQiLAogICAgICAiVHlwZSI6ICJTb3J0RGlyZWN0aW9uIiwKICAgICAgIlByaW1pdGl2ZVR5cGUiOiAiQXNjZW5kaW5nLCBEZXNjZW5kaW5nIgogICAgfQogIF0KfQo=";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_sort_SortByMemberText_json = "ewogICJOYW1lIjogInNvcnRCeU1lbWJlclRleHQiLAogICJEaXNwbGF5TmFtZSI6ICJTb3J0IGJ5IG1lbWJlciB0ZXh0IiwKICAiRGVzY3JpcHRpb24iOiAiU29ydCBhIGRpbWVuc2lvbiBieSB0aGUgdGV4dHMgb2YgdGhlIG1lbWJlcnMiLAogICJDYXRlZ29yeSI6ICJTb3J0QWN0aW9ucyIsCiAgIlN0YWdlIjogIlB1Ymxpc2hlZCIsCiAgIlJldmlld0RhdGUiOiAiMDEvMDQvMjAyNSIsCiAgIlBhcmFtZXRlcnMiOiBbCiAgICB7CiAgICAgICJOYW1lIjogIkRpbWVuc2lvbk5hbWUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiRGltZW5zaW9uIG5hbWUiLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIG5hbWUgb2YgdGhlIGRpbWVuc2lvbiB0byBzb3J0IG9uIiwKICAgICAgIlR5cGUiOiAiRGltZW5zaW9uIiwKICAgICAgIlByaW1pdGl2ZVR5cGUiOiAiU3RyaW5nIgogICAgfSwKICAgIHsKICAgICAgIk5hbWUiOiAiU29ydERpcmVjdGlvbiIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJTb3J0IGRpcmVjdGlvbiIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUaGUgZGlyZWN0aW9uIGluIHdoaWNoIHRvIHNvcnQiLAogICAgICAiVHlwZSI6ICJTb3J0RGlyZWN0aW9uIiwKICAgICAgIlByaW1pdGl2ZVR5cGUiOiAiQXNjZW5kaW5nLCBEZXNjZW5kaW5nIgogICAgfQogIF0KfQo=";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_suppression_GetCurrentSuppressionType_json = "ewogICJOYW1lIjogImdldEN1cnJlbnRTdXBwcmVzc2lvblR5cGUiLAogICJEaXNwbGF5TmFtZSI6ICJHZXQgY3VycmVudCBzdXBwcmVzc2lvbiB0eXBlIiwKICAiRGVzY3JpcHRpb24iOiAiUmV0cmlldmUgdGhlIGN1cnJlbnQgc3VwcHJlc3Npb24gdHlwZSBmb3IgdGhlIGdpdmVuIGF4aXMiLAogICJDYXRlZ29yeSI6ICJTdXBwcmVzc2lvbkFjdGlvbnMiLAogICJTdGFnZSI6ICJQdWJsaXNoZWQiLAogICJSZXZpZXdEYXRlIjogIjAxLzA0LzIwMjUiLAogICJQYXJhbWV0ZXJzIjogWwogICAgewogICAgICAiTmFtZSI6ICJBeGlzVHlwZSIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJBeGlzIFR5cGUiLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIHR5cGUgb2YgdGhlIGF4aXMgZm9yIHdoaWNoIHRoZSBjdXJyZW50IHN1cHByZXNzaW9uIHR5cGUgaXMgcmV0cmlldmVkIiwKICAgICAgIlR5cGUiOiAiQXhpc1R5cGUiLAogICAgICAiUHJpbWl0aXZlVHlwZSI6ICJSb3dzLCBDb2x1bW5zLCBGcmVlIgogICAgfQogIF0KfQ==";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_suppression_GetSupportedSuppressionTypes_json = "ewogICJOYW1lIjogImdldFN1cHBvcnRlZFN1cHByZXNzaW9uVHlwZXMiLAogICJEaXNwbGF5TmFtZSI6ICJHZXQgc3VwcG9ydGVkIHN1cHByZXNzaW9uIHR5cGVzIiwKICAiRGVzY3JpcHRpb24iOiAiUmV0cmlldmUgdGhlIGxpc3Qgb2YgYXZhaWxhYmxlIC8gc3VwcG9ydGVkIHN1cHByZXNzaW9uIHR5cGVzIiwKICAiQ2F0ZWdvcnkiOiAiU3VwcHJlc3Npb25BY3Rpb25zIiwKICAiU3RhZ2UiOiAiUHVibGlzaGVkIiwKICAiUmV2aWV3RGF0ZSI6ICIwMS8wNC8yMDI1IiwKICAiUGFyYW1ldGVycyI6IFsKICAgIHsKICAgICAgIk5hbWUiOiAiQXhpc1R5cGUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiQXhpcyBUeXBlIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSB0eXBlIG9mIHRoZSBheGlzIGZvciB3aGljaCB0aGUgc3VwcG9ydGVkIHN1cHByZXNzaW9uIHR5cGVzIGFyZSByZXRyaWV2ZWQiLAogICAgICAiVHlwZSI6ICJBeGlzVHlwZSIsCiAgICAgICJQcmltaXRpdmVUeXBlIjogIlJvd3MsIENvbHVtbnMsIEZyZWUiCiAgICB9CiAgXQp9";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_suppression_SetSuppressionType_json = "ewogICJOYW1lIjogInNldFN1cHByZXNzaW9uVHlwZSIsCiAgIkRpc3BsYXlOYW1lIjogIlNldCBzdXBwcmVzc2lvbiB0eXBlIiwKICAiRGVzY3JpcHRpb24iOiAiU3BlY2lmeSB0aGUgc3VwcHJlc3Npb24gdHlwZSBmb3IgdGhlIGdpdmVuIGF4aXMiLAogICJDYXRlZ29yeSI6ICJTdXBwcmVzc2lvbkFjdGlvbnMiLAogICJTdGFnZSI6ICJQdWJsaXNoZWQiLAogICJSZXZpZXdEYXRlIjogIjAxLzA0LzIwMjUiLAogICJQYXJhbWV0ZXJzIjogWwogICAgewogICAgICAiTmFtZSI6ICJBeGlzVHlwZSIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJBeGlzIFR5cGUiLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIHR5cGUgb2YgdGhlIGF4aXMgZm9yIHdoaWNoIHRoZSBzdXBwcmVzc2lvbiB0eXBlIGlzIHNldCIsCiAgICAgICJUeXBlIjogIkF4aXNUeXBlIiwKICAgICAgIlByaW1pdGl2ZVR5cGUiOiAiUm93cywgQ29sdW1ucyBGcmVlIgogICAgfSwKICAgIHsKICAgICAgIk5hbWUiOiAiU3VwcHJlc3Npb25UeXBlIiwKICAgICAgIkRpc3BsYXlOYW1lIjogIlN1cHByZXNzaW9uIFR5cGUiLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIHN1cHByZXNzaW9uIHR5cGUgdG8gYmUgc2V0IiwKICAgICAgIlR5cGUiOiAiWmVyb1N1cHByZXNzaW9uVHlwZSIsCiAgICAgICJQcmltaXRpdmVUeXBlIjogIk5PTkUsIFRPVEFMX0lTX1pFUk8sIEFMTF9DRUxMU19BUkVfWkVSTywgQUxMX0NFTExTX0FSRV9OVUxMIgogICAgfSwKICAgIHsKICAgICAgIk5hbWUiOiAiU3luY2hyb25pemVSZWFkTW9kZXNBbmRTdXBwcmVzc2lvbiIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJTeW5jaHJvbml6ZSBSZWFkIE1vZGVzIGFuZCBTdXBwcmVzc2lvbiIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJGbGFnIHdoZXRoZXIgb3RoZXIgcmVhZCBtb2RlcyBvbiB0aGUgYXhpcyBhbmQgdGhlIHN1cHByZXNzaW9uIHR5cGUgc2hvdWxkIGJlIHN5bmNocm9uaXplZCBhY2NvcmRpbmdseSIsCiAgICAgICJUeXBlIjogIkJvb2xlYW4iCiAgICB9CiAgXQp9";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_test_DpTestCustomAction_json = "ewogICJOYW1lIjogImRwVGVzdEN1c3RvbUFjdGlvbiIsCiAgIkRpc3BsYXlOYW1lIjogIkRhdGFQcm92aWRlciB0ZXN0IGN1c3RvbSBhY3Rpb24iLAogICJEZXNjcmlwdGlvbiI6ICJBIGN1c3RvbSBhY3Rpb24gYWRkZWQgZnJvbSBhIHByb2plY3Qgb3V0c2lkZSB0aGUgRFAgdG8gdGVzdCB0aGF0IHRoaXMgd29ya3MiLAogICJDYXRlZ29yeSI6ICJUZXN0QWN0aW9ucyIsCiAgIlN0YWdlIjogIlBsYW5uZWQiLAogICJSZXZpZXdEYXRlIjogIjAxLzA0LzIwMjUiLAogICJQYXJhbWV0ZXJzIjogWwogICAgewogICAgICAiTmFtZSI6ICJUZXN0VmFsdWUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiVGVzdCB2YWx1ZSIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJBIHRlc3QgdmFsdWUgdG8gdGVzdCB0aGUgdGVzdCBhY3Rpb24hIiwKICAgICAgIlR5cGUiOiAiU3RyaW5nIgogICAgfQogIF0KfQo=";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_totals_GetTotalsPosition_json = "ewogICJOYW1lIjogImdldFRvdGFsc1Bvc2l0aW9uIiwKICAiRGlzcGxheU5hbWUiOiAiR2V0IHRoZSBUb3RhbHMgUG9zaXRpb24iLAogICJEZXNjcmlwdGlvbiI6ICJSZXRyaWV2ZSB0aGUgdG90YWxzIHBvc2l0aW9uIGZvciB0aGUgZ2l2ZW4gbW9kZWwgY29tcG9uZW50IGF0IHRoZSBzcGVjaWZpZWQgbGV2ZWwiLAogICJDYXRlZ29yeSI6ICJUb3RhbHNBY3Rpb25zIiwKICAiU3RhZ2UiOiAiUHVibGlzaGVkIiwKICAiUmV2aWV3RGF0ZSI6ICIwMS8wNC8yMDI1IiwKICAiUGFyYW1ldGVycyI6IFsKICAgIHsKICAgICAgIk5hbWUiOiAiTW9kZWxMZXZlbCIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJNb2RlbCBMZXZlbCIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUaGUgbW9kZWwgbGV2ZWwgZS5nLiBlaXRoZXIgdGhlIHF1ZXJ5IG1vZGVsLCB0aGUgYXhpcyBvciB0aGUgZGltZW5zaW9uIiwKICAgICAgIlR5cGUiOiAiU3RyaW5nIgogICAgfSwKICAgIHsKICAgICAgIk5hbWUiOiAiRWxlbWVudE5hbWUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiVGhlIEVsZW1lbnQgTmFtZSIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUaGUgZWxlbWVudCBuYW1lLCBlLmcuIHRoZSBheGlzIG9yIGRpbWVuc2lvbiBuYW1lIiwKICAgICAgIlR5cGUiOiAiU3RyaW5nIgogICAgfQogIF0KfQ==";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_totals_GetTotalsVisibility_json = "ewogICJOYW1lIjogImdldFRvdGFsc1Zpc2liaWxpdHkiLAogICJEaXNwbGF5TmFtZSI6ICJHZXQgdGhlIFRvdGFscyBWaXNpYmlsaXR5IiwKICAiRGVzY3JpcHRpb24iOiAiUmV0cmlldmUgdGhlIHRvdGFscyB2aXNpYmlsaXR5IGZvciB0aGUgZ2l2ZW4gbW9kZWwgY29tcG9uZW50IGF0IHRoZSBzcGVjaWZpZWQgbGV2ZWwgYW5kIHJlc3VsdCBzdHJ1Y3R1cmUgZWxlbWVudCIsCiAgIkNhdGVnb3J5IjogIlRvdGFsc0FjdGlvbnMiLAogICJTdGFnZSI6ICJQdWJsaXNoZWQiLAogICJSZXZpZXdEYXRlIjogIjAxLzA0LzIwMjUiLAogICJQYXJhbWV0ZXJzIjogWwogICAgewogICAgICAiTmFtZSI6ICJSZXN1bHRTdHJ1Y3R1cmVFbGVtZW50IiwKICAgICAgIkRpc3BsYXlOYW1lIjogIlJlc3VsdCBTdHJ1Y3R1cmUgRWxlbWVudCIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUaGUgcmVzdWx0IHN0cnVjdHVyZSBlbGVtZW50IChlLmcuIFRvdGFscywgVG90YWxzSW5jbHVkaW5nLCBUb3RhbHNSZW1haW5pbmcpIiwKICAgICAgIlR5cGUiOiAiU3RyaW5nIgogICAgfSwKICAgIHsKICAgICAgIk5hbWUiOiAiTW9kZWxMZXZlbCIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJNb2RlbCBMZXZlbCIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUaGUgbW9kZWwgbGV2ZWwgZS5nLiBlaXRoZXIgdGhlIHF1ZXJ5IG1vZGVsLCB0aGUgYXhpcyBvciB0aGUgZGltZW5zaW9uIiwKICAgICAgIlR5cGUiOiAiU3RyaW5nIgogICAgfSwKICAgIHsKICAgICAgIk5hbWUiOiAiRWxlbWVudE5hbWUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiVGhlIEVsZW1lbnQgTmFtZSIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUaGUgZWxlbWVudCBuYW1lLCBlLmcuIHRoZSBheGlzIG9yIGRpbWVuc2lvbiBuYW1lIiwKICAgICAgIlR5cGUiOiAiU3RyaW5nIgogICAgfQogIF0KfQ==";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_totals_SetTotalsPosition_json = "ewogICJOYW1lIjogInNldFRvdGFsc1Bvc2l0aW9uIiwKICAiRGlzcGxheU5hbWUiOiAiU2V0IHRoZSBUb3RhbHMgUG9zaXRpb24iLAogICJEZXNjcmlwdGlvbiI6ICJTZXQgdGhlIHRvdGFscyBwb3NpdGlvbiBmb3IgdGhlIGdpdmVuIG1vZGVsIGNvbXBvbmVudCBhdCB0aGUgc3BlY2lmaWVkIGxldmVsIiwKICAiQ2F0ZWdvcnkiOiAiVG90YWxzQWN0aW9ucyIsCiAgIlN0YWdlIjogIlB1Ymxpc2hlZCIsCiAgIlJldmlld0RhdGUiOiAiMDEvMDQvMjAyNSIsCiAgIlBhcmFtZXRlcnMiOiBbCiAgICB7CiAgICAgICJOYW1lIjogIk1vZGVsTGV2ZWwiLAogICAgICAiRGlzcGxheU5hbWUiOiAiTW9kZWwgTGV2ZWwiLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIG1vZGVsIGxldmVsIGUuZy4gZWl0aGVyIHRoZSBxdWVyeSBtb2RlbCwgdGhlIGF4aXMgb3IgdGhlIGRpbWVuc2lvbiIsCiAgICAgICJUeXBlIjogIlN0cmluZyIKICAgIH0sCiAgICB7CiAgICAgICJOYW1lIjogIkVsZW1lbnROYW1lIiwKICAgICAgIkRpc3BsYXlOYW1lIjogIlRoZSBFbGVtZW50IE5hbWUiLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIGVsZW1lbnQgbmFtZSwgZS5nLiB0aGUgYXhpcyBvciBkaW1lbnNpb24gbmFtZSIsCiAgICAgICJUeXBlIjogIlN0cmluZyIKICAgIH0sCiAgICB7CiAgICAgICJOYW1lIjogIlRvdGFsc1Bvc2l0aW9uIiwKICAgICAgIkRpc3BsYXlOYW1lIjogIlRvdGFscyBQb3NpdGlvbiIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUaGUgdG90YWxzIHBvc2l0aW9uIGFsc28ga25vd24gYXMgVG90YWxzIEFsaWdubWVudCBUeXBlIiwKICAgICAgIlR5cGUiOiAiU3RyaW5nIgogICAgfQogIF0KfQ==";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_totals_SetTotalsVisibility_json = "ewogICJOYW1lIjogInNldFRvdGFsc1Zpc2liaWxpdHkiLAogICJEaXNwbGF5TmFtZSI6ICJTZXQgdGhlIFRvdGFscyBWaXNpYmlsaXR5IiwKICAiRGVzY3JpcHRpb24iOiAiU3BlY2lmeSB0aGUgdG90YWxzIHZpc2liaWxpdHkgZm9yIHRoZSBnaXZlbiBtb2RlbCBjb21wb25lbnQgYXQgdGhlIHNwZWNpZmllZCBsZXZlbCBhbmQgcmVzdWx0IHN0cnVjdHVyZSBlbGVtZW50IiwKICAiQ2F0ZWdvcnkiOiAiVG90YWxzQWN0aW9ucyIsCiAgIlN0YWdlIjogIlB1Ymxpc2hlZCIsCiAgIlJldmlld0RhdGUiOiAiMDEvMDQvMjAyNSIsCiAgIlBhcmFtZXRlcnMiOiBbCiAgICB7CiAgICAgICJOYW1lIjogIlJlc3VsdFN0cnVjdHVyZUVsZW1lbnQiLAogICAgICAiRGlzcGxheU5hbWUiOiAiUmVzdWx0IFN0cnVjdHVyZSBFbGVtZW50IiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSByZXN1bHQgc3RydWN0dXJlIGVsZW1lbnQgKGUuZy4gVG90YWxzLCBUb3RhbHNJbmNsdWRpbmcsIFRvdGFsc1JlbWFpbmluZykiLAogICAgICAiVHlwZSI6ICJTdHJpbmciCiAgICB9LAogICAgewogICAgICAiTmFtZSI6ICJNb2RlbExldmVsIiwKICAgICAgIkRpc3BsYXlOYW1lIjogIk1vZGVsIExldmVsIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSBtb2RlbCBsZXZlbCBlLmcuIGVpdGhlciB0aGUgcXVlcnkgbW9kZWwsIHRoZSBheGlzIG9yIHRoZSBkaW1lbnNpb24iLAogICAgICAiVHlwZSI6ICJTdHJpbmciCiAgICB9LAogICAgewogICAgICAiTmFtZSI6ICJFbGVtZW50TmFtZSIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJUaGUgRWxlbWVudCBOYW1lIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSBlbGVtZW50IG5hbWUsIGUuZy4gdGhlIGF4aXMgb3IgZGltZW5zaW9uIG5hbWUiLAogICAgICAiVHlwZSI6ICJTdHJpbmciCiAgICB9LAogICAgewogICAgICAiTmFtZSI6ICJSZXN1bHRWaXNpYmlsaXR5IiwKICAgICAgIkRpc3BsYXlOYW1lIjogIlRoZSBSZXN1bHQgVmlzaWJpbGl0eSIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUaGUgcmVzdWx0IHZpc2liaWxpdHkgdG8gc2V0IiwKICAgICAgIlR5cGUiOiAiU3RyaW5nIgogICAgfQogIF0KfQ==";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_variable_CancelVariableChangeAction_json = "ewogICJOYW1lIjogImNhbmNlbFZhcmlhYmxlQ2hhbmdlIiwKICAiRGlzcGxheU5hbWUiOiAiQ2FuY2VsIHZhcmlhYmxlIGNoYW5nZSIsCiAgIkRlc2NyaXB0aW9uIjogIkRpc2NhcmQgdGhlIGNoYW5nZXMgYW5kIHN0b3AgbW9kaWZ5aW5nIHRoZSB2YXJpYWJsZXMiLAogICJDYXRlZ29yeSI6ICJWYXJpYWJsZUFjdGlvbnMiLAogICJTdGFnZSI6ICJEZXZlbG9wZWQiLAogICJSZXZpZXdEYXRlIjogIjAxLzA0LzIwMjUiLAogICJQYXJhbWV0ZXJzIjogWwogIF0KfQo=";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_variable_EndVariableChangeAction_json = "ewogICJOYW1lIjogImVuZFZhcmlhYmxlQ2hhbmdlIiwKICAiRGlzcGxheU5hbWUiOiAiRW5kIHZhcmlhYmxlIGNoYW5nZSIsCiAgIkRlc2NyaXB0aW9uIjogIlNhdmUgdGhlIGNoYW5nZXMgYW5kIHN0b3AgbW9kaWZ5aW5nIHRoZSB2YXJpYWJsZXMiLAogICJDYXRlZ29yeSI6ICJWYXJpYWJsZUFjdGlvbnMiLAogICJTdGFnZSI6ICJEZXZlbG9wZWQiLAogICJSZXZpZXdEYXRlIjogIjAxLzA0LzIwMjUiLAogICJQYXJhbWV0ZXJzIjogWwogIF0KfQo=";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_variable_StartVariableChangeAction_json = "ewogICJOYW1lIjogInN0YXJ0VmFyaWFibGVDaGFuZ2UiLAogICJEaXNwbGF5TmFtZSI6ICJTdGFydCB2YXJpYWJsZSBjaGFuZ2UiLAogICJEZXNjcmlwdGlvbiI6ICJUYWtlIHRoZSBuZWNlc3Nhcnkgc3RlcHMgdG8gYmUgYWJsZSB0byBjaGFuZ2UgdmFyaWFibGVzIiwKICAiQ2F0ZWdvcnkiOiAiVmFyaWFibGVBY3Rpb25zIiwKICAiU3RhZ2UiOiAiRGV2ZWxvcGVkIiwKICAiUmV2aWV3RGF0ZSI6ICIwMS8wNC8yMDI1IiwKICAiUGFyYW1ldGVycyI6IFsKICBdCn0K";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_viz_AddDatapointVariableValue_json = "ewogICJOYW1lIjogImFkZERhdGFwb2ludFZhcmlhYmxlVmFsdWUiLAogICJEaXNwbGF5TmFtZSI6ICJBZGQgRGF0YXBvaW50IFZhcmlhYmxlIFZhbHVlIiwKICAiRGVzY3JpcHRpb24iOiAiQWRkIGEgVmFsdWUgdG8gdGhlIERhdGFwb2ludCBWYXJpYWJsZSIsCiAgIkNhdGVnb3J5IjogIlZpekFjdGlvbnMiLAogICJTdGFnZSI6ICJEZXZlbG9wZWQiLAogICJSZXZpZXdEYXRlIjogIjE1LzA0LzIwMjUiLAogICJQYXJhbWV0ZXJzIjogWwogICAgewogICAgICAiTmFtZSI6ICJWaXN1YWxpemF0aW9uTmFtZSIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJWaXN1YWxpemF0aW9uIG5hbWUiLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIHRlY2huaWNhbCBuYW1lIG9mIHRoZSB2aXN1YWxpemF0aW9uIHdpdGggd2hpY2ggaXQgY2FuIGJlIGZvdW5kIiwKICAgICAgIlR5cGUiOiAiU3RyaW5nIgogICAgfSwKICAgIHsKICAgICAgIk5hbWUiOiAiRGF0YXBvaW50VmFyaWFibGVDb250YWluZXJOYW1lIiwKICAgICAgIkRpc3BsYXlOYW1lIjogIkRhdGFwb2ludCBWYXJpYWJsZSBjb250YWluZXIgbmFtZSIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUaGUgdGVjaG5pY2FsIG5hbWUgb2YgdGhlIGRhdGEgcG9pbnQgdmFyaWFibGUgY29udGFpbmVyIHdpdGggd2hpY2ggaXQgY2FuIGJlIGZvdW5kIiwKICAgICAgIlR5cGUiOiAiU3RyaW5nIgogICAgfSwKICAgIHsKICAgICAgIk5hbWUiOiAiVmFyaWFibGVOYW1lIiwKICAgICAgIkRpc3BsYXlOYW1lIjogIlZhcmlhYmxlIG5hbWUiLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIHRlY2huaWNhbCBuYW1lIG9mIHRoZSB2YXJpYWJsZSB3aXRoIHdoaWNoIGl0IGNhbiBiZSBmb3VuZCIsCiAgICAgICJUeXBlIjogIlN0cmluZyIKICAgIH0sCiAgICB7CiAgICAgICJOYW1lIjogIlZhcmlhYmxlVmFsdWUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiVmFyaWFibGUgdmFsdWUiLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIHN0cmluZyB2YWx1ZSB0byBhZGQgdG8gdGhlIHZhcmlhYmxlIiwKICAgICAgIlR5cGUiOiAiU3RyaW5nIgogICAgfQogIF0KfQo=";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_viz_AddMemberToTypedValueSelection_json = "ewogICJOYW1lIjogImFkZE1lbWJlclRvVHlwZWRWYWx1ZVNlbGVjdGlvbiIsCiAgIkRpc3BsYXlOYW1lIjogIkFkZCBNZW1iZXIgdG8gVHlwZWQgVmFsdWUgU2VsZWN0aW9uIiwKICAiRGVzY3JpcHRpb24iOiAiQWRkIGEgTWVtYmVyIHRvIGEgdHlwZWQgdmFsdWUgc2VsZWN0aW9uIG9mIGEgY2hhcnQiLAogICJDYXRlZ29yeSI6ICJWaXpBY3Rpb25zIiwKICAiU3RhZ2UiOiAiRGV2ZWxvcGVkIiwKICAiUmV2aWV3RGF0ZSI6ICIxNS8wNC8yMDI1IiwKICAiUGFyYW1ldGVycyI6IFsKICAgIHsKICAgICAgIk5hbWUiOiAiVmlzdWFsaXphdGlvbk5hbWUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiVmlzdWFsaXphdGlvbiBuYW1lIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSB0ZWNobmljYWwgbmFtZSBvZiB0aGUgdmlzdWFsaXphdGlvbiB3aXRoIHdoaWNoIGl0IGNhbiBiZSBmb3VuZCIsCiAgICAgICJUeXBlIjogIlN0cmluZyIKICAgIH0sCiAgICB7CiAgICAgICJOYW1lIjogIlZpc3VhbGl6YXRpb25WYWx1ZVR5cGUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiVmlzdWFsaXphdGlvbiBWYWx1ZSBUeXBlIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSB2aXN1YWxpemF0aW9uIHZhbHVlIHR5cGUiLAogICAgICAiVHlwZSI6ICJTdHJpbmciCiAgICB9LAogICAgewogICAgICAiTmFtZSI6ICJNZW1iZXJOYW1lIiwKICAgICAgIkRpc3BsYXlOYW1lIjogIk1lbWJlciBuYW1lIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSBtZW1iZXIgbmFtZSBvbiB0aGUgY2hhcnQgc3RydWN0dXJlIGRpbWVuc2lvbiIsCiAgICAgICJUeXBlIjogIlN0cmluZyIKICAgIH0KICBdCn0K";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_viz_AddVisualizationVariableValue_json = "ewogICJOYW1lIjogImFkZFZpc3VhbGl6YXRpb25WYXJpYWJsZVZhbHVlIiwKICAiRGlzcGxheU5hbWUiOiAiQWRkIFZpc3VhbGl6YXRpb24gVmFyaWFibGUgVmFsdWUiLAogICJEZXNjcmlwdGlvbiI6ICJBZGQgYSBWYWx1ZSB0byB0aGUgVmlzdWFsaXphdGlvbiBWYXJpYWJsZSIsCiAgIkNhdGVnb3J5IjogIlZpekFjdGlvbnMiLAogICJTdGFnZSI6ICJEZXZlbG9wZWQiLAogICJSZXZpZXdEYXRlIjogIjE1LzA0LzIwMjUiLAogICJQYXJhbWV0ZXJzIjogWwogICAgewogICAgICAiTmFtZSI6ICJWaXN1YWxpemF0aW9uTmFtZSIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJWaXN1YWxpemF0aW9uIG5hbWUiLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIHRlY2huaWNhbCBuYW1lIG9mIHRoZSB2aXN1YWxpemF0aW9uIHdpdGggd2hpY2ggaXQgY2FuIGJlIGZvdW5kIiwKICAgICAgIlR5cGUiOiAiU3RyaW5nIgogICAgfSwKICAgIHsKICAgICAgIk5hbWUiOiAiVmFyaWFibGVOYW1lIiwKICAgICAgIkRpc3BsYXlOYW1lIjogIlZhcmlhYmxlIG5hbWUiLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIHRlY2huaWNhbCBuYW1lIG9mIHRoZSB2YXJpYWJsZSB3aXRoIHdoaWNoIGl0IGNhbiBiZSBmb3VuZCIsCiAgICAgICJUeXBlIjogIlN0cmluZyIKICAgIH0sCiAgICB7CiAgICAgICJOYW1lIjogIlZhcmlhYmxlVmFsdWUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiVmFyaWFibGUgdmFsdWUiLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIHN0cmluZyB2YWx1ZSB0byBhZGQgdG8gdGhlIHZhcmlhYmxlIiwKICAgICAgIlR5cGUiOiAiU3RyaW5nIgogICAgfQogIF0KfQo=";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_viz_ClearAllTypedValueSelections_json = "ewogICJOYW1lIjogImNsZWFyQWxsVHlwZWRWYWx1ZVNlbGVjdGlvbnMiLAogICJEaXNwbGF5TmFtZSI6ICJDbGVhciBhbGwgdHlwZWQgdmFsdWUgc2VsZWN0aW9ucyIsCiAgIkRlc2NyaXB0aW9uIjogIkNsZWFyIGFsbCB0eXBlZCB2YWx1ZSBzZWxlY3Rpb25zIGZvciB0aGUgc3BlY2lmaWVkIGNoYXJ0IiwKICAiQ2F0ZWdvcnkiOiAiVml6QWN0aW9ucyIsCiAgIlN0YWdlIjogIkRldmVsb3BlZCIsCiAgIlJldmlld0RhdGUiOiAiMTUvMDQvMjAyNSIsCiAgIlBhcmFtZXRlcnMiOiBbCiAgICB7CiAgICAgICJOYW1lIjogIlZpc3VhbGl6YXRpb25OYW1lIiwKICAgICAgIkRpc3BsYXlOYW1lIjogIlZpc3VhbGl6YXRpb24gbmFtZSIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUaGUgdGVjaG5pY2FsIG5hbWUgb2YgdGhlIHZpc3VhbGl6YXRpb24gd2l0aCB3aGljaCBpdCBjYW4gYmUgZm91bmQiLAogICAgICAiVHlwZSI6ICJTdHJpbmciCiAgICB9CiAgXQp9Cg==";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_viz_ClearDatapointVariableValue_json = "ewogICJOYW1lIjogImNsZWFyRGF0YXBvaW50VmFyaWFibGVWYWx1ZSIsCiAgIkRpc3BsYXlOYW1lIjogIkNsZWFyIFZpc3VhbGl6YXRpb24gVmFyaWFibGUiLAogICJEZXNjcmlwdGlvbiI6ICJDbGVhciBUaGUgVmlzdWFsaXphdGlvbiBWYXJpYWJsZSIsCiAgIkNhdGVnb3J5IjogIlZpekFjdGlvbnMiLAogICJTdGFnZSI6ICJEZXZlbG9wZWQiLAogICJSZXZpZXdEYXRlIjogIjE1LzA0LzIwMjUiLAogICJQYXJhbWV0ZXJzIjogWwogICAgewogICAgICAiTmFtZSI6ICJWaXN1YWxpemF0aW9uTmFtZSIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJWaXN1YWxpemF0aW9uIG5hbWUiLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIHRlY2huaWNhbCBuYW1lIG9mIHRoZSB2aXN1YWxpemF0aW9uIHdpdGggd2hpY2ggaXQgY2FuIGJlIGZvdW5kIiwKICAgICAgIlR5cGUiOiAiU3RyaW5nIgogICAgfSwKICAgIHsKICAgICAgIk5hbWUiOiAiRGF0YXBvaW50VmFyaWFibGVDb250YWluZXJOYW1lIiwKICAgICAgIkRpc3BsYXlOYW1lIjogIkRhdGFwb2ludCBWYXJpYWJsZSBjb250YWluZXIgbmFtZSIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUaGUgdGVjaG5pY2FsIG5hbWUgb2YgdGhlIGRhdGEgcG9pbnQgdmFyaWFibGUgY29udGFpbmVyIHdpdGggd2hpY2ggaXQgY2FuIGJlIGZvdW5kIiwKICAgICAgIlR5cGUiOiAiU3RyaW5nIgogICAgfSwKICAgIHsKICAgICAgIk5hbWUiOiAiVmFyaWFibGVOYW1lIiwKICAgICAgIkRpc3BsYXlOYW1lIjogIlZhcmlhYmxlIG5hbWUiLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIHRlY2huaWNhbCBuYW1lIG9mIHRoZSB2YXJpYWJsZSB3aXRoIHdoaWNoIGl0IGNhbiBiZSBmb3VuZCIsCiAgICAgICJUeXBlIjogIlN0cmluZyIKICAgIH0KICBdCn0K";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_viz_ClearMemberRestrictionsForDimension_json = "ewogICJOYW1lIjogImNsZWFyTWVtYmVyUmVzdHJpY3Rpb25zRm9yRGltZW5zaW9uIiwKICAiRGlzcGxheU5hbWUiOiAiQ2xlYXIgTWVtYmVyIFJlc3RyaWN0aW9ucyBmb3IgRGltZW5zaW9uIiwKICAiRGVzY3JpcHRpb24iOiAiUmVtb3ZlIGFsbCBtZW1iZXIgZm9yIHRoZSBzcGVjaWZpZWQgZGltZW5zaW9uIiwKICAiQ2F0ZWdvcnkiOiAiVml6QWN0aW9ucyIsCiAgIlN0YWdlIjogIkRldmVsb3BlZCIsCiAgIlJldmlld0RhdGUiOiAiMTUvMDQvMjAyNSIsCiAgIlBhcmFtZXRlcnMiOiBbCiAgICB7CiAgICAgICJOYW1lIjogIlZpc3VhbGl6YXRpb25OYW1lIiwKICAgICAgIkRpc3BsYXlOYW1lIjogIlZpc3VhbGl6YXRpb24gbmFtZSIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUaGUgdGVjaG5pY2FsIG5hbWUgb2YgdGhlIHZpc3VhbGl6YXRpb24gd2l0aCB3aGljaCBpdCBjYW4gYmUgZm91bmQiLAogICAgICAiVHlwZSI6ICJTdHJpbmciCiAgICB9LAogICAgewogICAgICAiTmFtZSI6ICJEaW1lbnNpb25OYW1lIiwKICAgICAgIkRpc3BsYXlOYW1lIjogIkRpbWVuc2lvbiBOYW1lIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSBuYW1lIG9mIHRoZSBkaW1lbnNpb24iLAogICAgICAiVHlwZSI6ICJTdHJpbmciCiAgICB9CiAgXQp9Cg==";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_viz_ClearMemberRestrictions_json = "ewogICJOYW1lIjogImNsZWFyTWVtYmVyUmVzdHJpY3Rpb25zIiwKICAiRGlzcGxheU5hbWUiOiAiQ2xlYXIgTWVtYmVyIFJlc3RyaWN0aW9ucyIsCiAgIkRlc2NyaXB0aW9uIjogIlJlbW92ZSBhbGwgbWVtYmVyIHJlc3RyaWN0aW9ucyIsCiAgIkNhdGVnb3J5IjogIlZpekFjdGlvbnMiLAogICJTdGFnZSI6ICJEZXZlbG9wZWQiLAogICJSZXZpZXdEYXRlIjogIjE1LzA0LzIwMjUiLAogICJQYXJhbWV0ZXJzIjogWwogICAgewogICAgICAiTmFtZSI6ICJWaXN1YWxpemF0aW9uTmFtZSIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJWaXN1YWxpemF0aW9uIG5hbWUiLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIHRlY2huaWNhbCBuYW1lIG9mIHRoZSB2aXN1YWxpemF0aW9uIHdpdGggd2hpY2ggaXQgY2FuIGJlIGZvdW5kIiwKICAgICAgIlR5cGUiOiAiU3RyaW5nIgogICAgfQogIF0KfQo=";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_viz_ClearSelectionPathElementForDimension_json = "ewogICJOYW1lIjogImNsZWFyU2VsZWN0aW9uUGF0aEVsZW1lbnRGb3JEaW1lbnNpb24iLAogICJEaXNwbGF5TmFtZSI6ICJDbGVhciBTZWxlY3Rpb24gUGF0aCBFbGVtZW50IGZvciBEaW1lbnNpb24iLAogICJEZXNjcmlwdGlvbiI6ICJDbGVhciB0aGUgc2VsZWN0aW9uIHBhdGggZWxlbWVudCBmb3IgdGhlIHNwZWNpZmllZCBkaW1lbnNpb24iLAogICJDYXRlZ29yeSI6ICJWaXpBY3Rpb25zIiwKICAiU3RhZ2UiOiAiRGV2ZWxvcGVkIiwKICAiUmV2aWV3RGF0ZSI6ICIxNS8wNC8yMDI1IiwKICAiUGFyYW1ldGVycyI6IFsKICAgIHsKICAgICAgIk5hbWUiOiAiVmlzdWFsaXphdGlvbk5hbWUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiVmlzdWFsaXphdGlvbiBuYW1lIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSB0ZWNobmljYWwgbmFtZSBvZiB0aGUgdmlzdWFsaXphdGlvbiB3aXRoIHdoaWNoIGl0IGNhbiBiZSBmb3VuZCIsCiAgICAgICJUeXBlIjogIlN0cmluZyIKICAgIH0sCiAgICB7CiAgICAgICJOYW1lIjogIkRpbWVuc2lvbk5hbWUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiRGltZW5zaW9uIE5hbWUiLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIG5hbWUgb2YgdGhlIGRpbWVuc2lvbiIsCiAgICAgICJUeXBlIjogIlN0cmluZyIKICAgIH0KICBdCn0K";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_viz_ClearSelectionPath_json = "ewogICJOYW1lIjogImNsZWFyU2VsZWN0aW9uUGF0aCIsCiAgIkRpc3BsYXlOYW1lIjogIkNsZWFyIFNlbGVjdGlvbiBQYXRoIiwKICAiRGVzY3JpcHRpb24iOiAiUmVtb3ZlIHRoZSBzZWxlY3Rpb24gcGF0aCIsCiAgIkNhdGVnb3J5IjogIlZpekFjdGlvbnMiLAogICJTdGFnZSI6ICJEZXZlbG9wZWQiLAogICJSZXZpZXdEYXRlIjogIjE1LzA0LzIwMjUiLAogICJQYXJhbWV0ZXJzIjogWwogICAgewogICAgICAiTmFtZSI6ICJWaXN1YWxpemF0aW9uTmFtZSIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJWaXN1YWxpemF0aW9uIG5hbWUiLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIHRlY2huaWNhbCBuYW1lIG9mIHRoZSB2aXN1YWxpemF0aW9uIHdpdGggd2hpY2ggaXQgY2FuIGJlIGZvdW5kIiwKICAgICAgIlR5cGUiOiAiU3RyaW5nIgogICAgfQogIF0KfQo=";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_viz_ClearTypedValueSelectionsForType_json = "ewogICJOYW1lIjogImNsZWFyVHlwZWRWYWx1ZVNlbGVjdGlvbnNGb3JUeXBlIiwKICAiRGlzcGxheU5hbWUiOiAiQ2xlYXIgdHlwZWQgdmFsdWUgc2VsZWN0aW9ucyBmb3IgdHlwZSIsCiAgIkRlc2NyaXB0aW9uIjogIkNsZWFyIHRoZSB0eXBlZCB2YWx1ZSBzZWxlY3Rpb25zIGZvciB0aGUgc3BlY2lmaWVkIHZpc3VhbGl6YXRpb24gdmFsdWUgdHlwZSIsCiAgIkNhdGVnb3J5IjogIlZpekFjdGlvbnMiLAogICJTdGFnZSI6ICJEZXZlbG9wZWQiLAogICJSZXZpZXdEYXRlIjogIjE1LzA0LzIwMjUiLAogICJQYXJhbWV0ZXJzIjogWwogICAgewogICAgICAiTmFtZSI6ICJWaXN1YWxpemF0aW9uTmFtZSIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJWaXN1YWxpemF0aW9uIG5hbWUiLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIHRlY2huaWNhbCBuYW1lIG9mIHRoZSB2aXN1YWxpemF0aW9uIHdpdGggd2hpY2ggaXQgY2FuIGJlIGZvdW5kIiwKICAgICAgIlR5cGUiOiAiU3RyaW5nIgogICAgfSwKICAgIHsKICAgICAgIk5hbWUiOiAiVmlzdWFsaXphdGlvblZhbHVlVHlwZSIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJWaXN1YWxpemF0aW9uIFZhbHVlIFR5cGUiLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIHZpc3VhbGl6YXRpb24gdmFsdWUgdHlwZSIsCiAgICAgICJUeXBlIjogIlN0cmluZyIKICAgIH0KICBdCn0K";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_viz_ClearVisualizationVariableValue_json = "ewogICJOYW1lIjogImNsZWFyVmlzdWFsaXphdGlvblZhcmlhYmxlVmFsdWUiLAogICJEaXNwbGF5TmFtZSI6ICJDbGVhciBWaXN1YWxpemF0aW9uIFZhcmlhYmxlIiwKICAiRGVzY3JpcHRpb24iOiAiQ2xlYXIgVGhlIFZpc3VhbGl6YXRpb24gVmFyaWFibGUiLAogICJDYXRlZ29yeSI6ICJWaXpBY3Rpb25zIiwKICAiU3RhZ2UiOiAiRGV2ZWxvcGVkIiwKICAiUmV2aWV3RGF0ZSI6ICIxNS8wNC8yMDI1IiwKICAiUGFyYW1ldGVycyI6IFsKICAgIHsKICAgICAgIk5hbWUiOiAiVmlzdWFsaXphdGlvbk5hbWUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiVmlzdWFsaXphdGlvbiBuYW1lIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSB0ZWNobmljYWwgbmFtZSBvZiB0aGUgdmlzdWFsaXphdGlvbiB3aXRoIHdoaWNoIGl0IGNhbiBiZSBmb3VuZCIsCiAgICAgICJUeXBlIjogIlN0cmluZyIKICAgIH0sCiAgICB7CiAgICAgICJOYW1lIjogIlZhcmlhYmxlTmFtZSIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJWYXJpYWJsZSBuYW1lIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSB0ZWNobmljYWwgbmFtZSBvZiB0aGUgdmFyaWFibGUgd2l0aCB3aGljaCBpdCBjYW4gYmUgZm91bmQiLAogICAgICAiVHlwZSI6ICJTdHJpbmciCiAgICB9CiAgXQp9Cg==";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_viz_CreateVisualizationDefinition_json = "ewogICJOYW1lIjogImNyZWF0ZVZpc3VhbGl6YXRpb25EZWZpbml0aW9uIiwKICAiRGlzcGxheU5hbWUiOiAiQ3JlYXRlIHZpc3VhbGl6YXRpb24gZGVmaW5pdGlvbiIsCiAgIkRlc2NyaXB0aW9uIjogIkNyZWF0ZSBhIG5ldyB2aXN1YWxpemF0aW9uIGRlZmluaXRpb24iLAogICJDYXRlZ29yeSI6ICJWaXpBY3Rpb25zIiwKICAiU3RhZ2UiOiAiUHVibGlzaGVkIiwKICAiUmV2aWV3RGF0ZSI6ICIwMS8wNC8yMDI1IiwKICAiUGFyYW1ldGVycyI6IFsKICAgIHsKICAgICAgIk5hbWUiOiAiVmlzdWFsaXphdGlvbk5hbWUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiVmlzdWFsaXphdGlvbiBuYW1lIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSB0ZWNobmljYWwgbmFtZSBvZiB0aGUgdmlzdWFsaXphdGlvbiB3aXRoIHdoaWNoIGl0IGNhbiBiZSBmb3VuZCIsCiAgICAgICJUeXBlIjogIlN0cmluZyIKICAgIH0sCiAgICB7CiAgICAgICJOYW1lIjogIlZpc3VhbGl6YXRpb25UeXBlTmFtZSIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJWaXN1YWxpemF0aW9uIHR5cGUgbmFtZSIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUaGUgbmFtZSBvZiB0aGUgdmlzdWFsaXphdGlvbiB0eXBlIHRoYXQgdGhlIGRlZmluaXRpb24gc2hvdWxkIHVzZSAoZS5nLiBDaGFydCwgR3JpZCkiLAogICAgICAiVHlwZSI6ICJWaXN1YWxpemF0aW9uVHlwZSIsCiAgICAgICJQcmltaXRpdmVUeXBlIjogIkdyaWQsIENoYXJ0LCBLUEkiCiAgICB9LAogICAgewogICAgICAiTmFtZSI6ICJQcm90b2NvbEJpbmRpbmdUeXBlTmFtZSIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJQcm90b2NvbCBiaW5kaW5nIHR5cGUgbmFtZSIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUaGUgbmFtZSBvZiB0aGUgcHJvdG9jb2wgYmluZGluZyB0eXBlIHRoYXQgdGhlIGRlZmluaXRpb24gc2hvdWxkIHVzZSAoZS5nLiBIaWdoQ2hhcnQpIiwKICAgICAgIlR5cGUiOiAiUHJvdG9jb2xCaW5kaW5nVHlwZSIsCiAgICAgICJQcmltaXRpdmVUeXBlIjogIlN0cmluZyIKICAgIH0sCiAgICB7CiAgICAgICJOYW1lIjogIkNoYXJ0VHlwZU5hbWUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiQ2hhcnQgdHlwZSBuYW1lIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIkluIGNhc2Ugb2YgY2hhcnRzLCB3aGljaCB0eXBlIHRoYXQgdGhlIGRlZmluaXRpb24gc2hvdWxkIHVzZSAoZS5nLiBCYXIsIENvbHVtbiwgTGluZSkiLAogICAgICAiVHlwZSI6ICJDaGFydFR5cGUiLAogICAgICAiUHJpbWl0aXZlVHlwZSI6ICJTdHJpbmciCiAgICB9CiAgXQp9Cg==";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_viz_GetActiveVisualizationDefinition_json = "ewogICJOYW1lIjogImdldEFjdGl2ZVZpc3VhbGl6YXRpb25EZWZpbml0aW9uIiwKICAiRGlzcGxheU5hbWUiOiAiR2V0IGFjdGl2ZSB2aXN1YWxpemF0aW9uIGRlZmluaXRpb24iLAogICJEZXNjcmlwdGlvbiI6ICJHZXQgdGhlIHZpc3VhbGl6YXRpb24gZGVmaW5pdGlvbiB0aGF0IGlzIGN1cnJlbnRseSBhY3RpdmUiLAogICJDYXRlZ29yeSI6ICJWaXpBY3Rpb25zIiwKICAiU3RhZ2UiOiAiUHVibGlzaGVkIiwKICAiUmV2aWV3RGF0ZSI6ICIwMS8wNC8yMDI1IiwKICAiUGFyYW1ldGVycyI6IFtdCn0K";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_viz_GetAllVisualizationNames_json = "ewogICJOYW1lIjogImdldEFsbFZpc3VhbGl6YXRpb25OYW1lcyIsCiAgIkRpc3BsYXlOYW1lIjogIkdldCBhbGwgdmlzdWFsaXphdGlvbiBuYW1lcyIsCiAgIkRlc2NyaXB0aW9uIjogIkdldCB0aGUgbmFtZXMgb2YgYWxsIGF2YWlsYWJsZSB2aXN1YWxpemF0aW9uIGRlZmluaXRpb25zIiwKICAiQ2F0ZWdvcnkiOiAiVml6QWN0aW9ucyIsCiAgIlN0YWdlIjogIlB1Ymxpc2hlZCIsCiAgIlJldmlld0RhdGUiOiAiMDEvMDQvMjAyNSIsCiAgIlBhcmFtZXRlcnMiOiBbXQp9Cg==";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_viz_GetAllVisualizations_json = "ewogICJOYW1lIjogImdldEFsbFZpc3VhbGl6YXRpb25zIiwKICAiRGlzcGxheU5hbWUiOiAiR2V0IGFsbCB2aXN1YWxpemF0aW9ucyIsCiAgIkRlc2NyaXB0aW9uIjogIkdldCBhbGwgYXZhaWxhYmxlIHZpc3VhbGl6YXRpb24gZGVmaW5pdGlvbnMiLAogICJDYXRlZ29yeSI6ICJWaXpBY3Rpb25zIiwKICAiU3RhZ2UiOiAiUHVibGlzaGVkIiwKICAiUmV2aWV3RGF0ZSI6ICIwMS8wNC8yMDI1IiwKICAiUGFyYW1ldGVycyI6IFtdCn0K";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_viz_GetChartColorPalette_json = "ewogICJOYW1lIjogImdldENoYXJ0Q29sb3JQYWxldHRlIiwKICAiRGlzcGxheU5hbWUiOiAiR2V0IGNoYXJ0IGNvbG9yIHBhbGV0dGUiLAogICJEZXNjcmlwdGlvbiI6ICJHZXQgdGhlIGNvbG9yIHBhbGV0dGUgb2YgdGhlIGdpdmVuIGNoYXJ0IHZpc3VhbGl6YXRpb24iLAogICJDYXRlZ29yeSI6ICJWaXpBY3Rpb25zIiwKICAiU3RhZ2UiOiAiUHVibGlzaGVkIiwKICAiUmV2aWV3RGF0ZSI6ICIyMS8wNS8yMDI1IiwKICAiUGFyYW1ldGVycyI6IFsKICAgIHsKICAgICAgIk5hbWUiOiAiVmlzdWFsaXphdGlvbk5hbWUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiVmlzdWFsaXphdGlvbiBuYW1lIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSB0ZWNobmljYWwgbmFtZSBvZiB0aGUgdmlzdWFsaXphdGlvbiB3aXRoIHdoaWNoIGl0IGNhbiBiZSBmb3VuZCIsCiAgICAgICJUeXBlIjogIlN0cmluZyIKICAgIH0KICBdCn0K";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_viz_GetChartOrientation_json = "ewogICJOYW1lIjogImdldENoYXJ0T3JpZW50YXRpb24iLAogICJEaXNwbGF5TmFtZSI6ICJHZXQgY2hhcnQgb3JpZW50YXRpb24iLAogICJEZXNjcmlwdGlvbiI6ICJHZXQgb3JpZW50YXRpb24gb2YgdGhlIGdpdmVuIGNoYXJ0IHZpc3VhbGl6YXRpb24iLAogICJDYXRlZ29yeSI6ICJWaXpBY3Rpb25zIiwKICAiU3RhZ2UiOiAiUHVibGlzaGVkIiwKICAiUmV2aWV3RGF0ZSI6ICIyMS8wNS8yMDI1IiwKICAiUGFyYW1ldGVycyI6IFsKICAgIHsKICAgICAgIk5hbWUiOiAiVmlzdWFsaXphdGlvbk5hbWUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiVmlzdWFsaXphdGlvbiBuYW1lIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSB0ZWNobmljYWwgbmFtZSBvZiB0aGUgdmlzdWFsaXphdGlvbiB3aXRoIHdoaWNoIGl0IGNhbiBiZSBmb3VuZCIsCiAgICAgICJUeXBlIjogIlN0cmluZyIKICAgIH0KICBdCn0K";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_viz_GetDimensionsInChartFeed_json = "ewogICJOYW1lIjogImdldERpbWVuc2lvbnNJbkNoYXJ0RmVlZCIsCiAgIkRpc3BsYXlOYW1lIjogIkdldCBkaW1lbnNpb25zIGluIGNoYXJ0IGZlZWQiLAogICJEZXNjcmlwdGlvbiI6ICJHZXQgdGhlIGRpbWVuc2lvbnMgY3VycmVudGx5IHByZXNlbnQgaW4gdGhlIGdpdmVuIGNoYXJ0IGZlZWQiLAogICJDYXRlZ29yeSI6ICJWaXpBY3Rpb25zIiwKICAiU3RhZ2UiOiAiUHVibGlzaGVkIiwKICAiUmV2aWV3RGF0ZSI6ICIwMS8wNC8yMDI1IiwKICAiUGFyYW1ldGVycyI6IFsKICAgIHsKICAgICAgIk5hbWUiOiAiVmlzdWFsaXphdGlvbk5hbWUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiVmlzdWFsaXphdGlvbiBuYW1lIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSB0ZWNobmljYWwgbmFtZSBvZiB0aGUgdmlzdWFsaXphdGlvbiB3aXRoIHdoaWNoIGl0IGNhbiBiZSBmb3VuZCIsCiAgICAgICJUeXBlIjogIlN0cmluZyIKICAgIH0sCiAgICB7CiAgICAgICJOYW1lIjogIlZpc3VhbGl6YXRpb25WYWx1ZVR5cGUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiVmlzdWFsaXphdGlvbiBWYWx1ZSBUeXBlIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSB2aXN1YWxpemF0aW9uIHZhbHVlIHR5cGUgb2YgdGhlIHNlbGVjdGlvbiAoYmFzaWNhbGx5IHRoZSB0eXBlIG9mIGZlZWQpIiwKICAgICAgIlR5cGUiOiAiU3RyaW5nIgogICAgfQogIF0KfQo=";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_viz_GetMembersForDimensionInTypedValueSelection_json = "ewogICJOYW1lIjogImdldE1lbWJlcnNGb3JEaW1lbnNpb25JblR5cGVkVmFsdWVTZWxlY3Rpb24iLAogICJEaXNwbGF5TmFtZSI6ICJHZXQgbWVtYmVycyBmb3IgYSBkaW1lbnNpb24gaW4gdGhlIHR5cGVkIHZhbHVlIHNlbGVjdGlvbiIsCiAgIkRlc2NyaXB0aW9uIjogIkdldCB0aGUgbWVtYmVycyBvZiBhIGNlcnRhaW4gZGltZW5zaW9uIGN1cnJlbnRseSBwcmVzZW50IGluIHRoZSBnaXZlbiBjaGFydCB2YWx1ZSBzZWxlY3Rpb24iLAogICJDYXRlZ29yeSI6ICJWaXpBY3Rpb25zIiwKICAiU3RhZ2UiOiAiUHVibGlzaGVkIiwKICAiUmV2aWV3RGF0ZSI6ICIwMS8wNC8yMDI1IiwKICAiUGFyYW1ldGVycyI6IFsKICAgIHsKICAgICAgIk5hbWUiOiAiVmlzdWFsaXphdGlvbk5hbWUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiVmlzdWFsaXphdGlvbiBuYW1lIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSB0ZWNobmljYWwgbmFtZSBvZiB0aGUgdmlzdWFsaXphdGlvbiB3aXRoIHdoaWNoIGl0IGNhbiBiZSBmb3VuZCIsCiAgICAgICJUeXBlIjogIlN0cmluZyIKICAgIH0sCiAgICB7CiAgICAgICJOYW1lIjogIlZpc3VhbGl6YXRpb25WYWx1ZVR5cGUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiVmlzdWFsaXphdGlvbiBWYWx1ZSBUeXBlIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSB2aXN1YWxpemF0aW9uIHZhbHVlIHR5cGUgb2YgdGhlIHNlbGVjdGlvbiAoYmFzaWNhbGx5IHRoZSB0eXBlIG9mIGZlZWQpIiwKICAgICAgIlR5cGUiOiAiU3RyaW5nIgogICAgfSwKICAgIHsKICAgICAgIk5hbWUiOiAiRGltZW5zaW9uTmFtZSIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJEaW1lbnNpb24gbmFtZSIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUaGUgbmFtZSBvZiB0aGUgZGltZW5zaW9uIHRvIHdoaWNoIHRoZSBtZW1iZXJzIGJlbG9uZyB0byIsCiAgICAgICJUeXBlIjogIkRpbWVuc2lvbiIsCiAgICAgICJQcmltaXRpdmVUeXBlIjogIlN0cmluZyIKICAgIH0KICBdCn0K";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_viz_GetMembersInTypedValueSelection_json = "ewogICJOYW1lIjogImdldE1lbWJlcnNJblR5cGVkVmFsdWVTZWxlY3Rpb24iLAogICJEaXNwbGF5TmFtZSI6ICJHZXQgbWVtYmVycyBpbiB0aGUgdHlwZWQgdmFsdWUgc2VsZWN0aW9uIiwKICAiRGVzY3JpcHRpb24iOiAiR2V0IHRoZSBtZW1iZXJzIGN1cnJlbnRseSBwcmVzZW50IGluIHRoZSBnaXZlbiBjaGFydCB2YWx1ZSBzZWxlY3Rpb24iLAogICJDYXRlZ29yeSI6ICJWaXpBY3Rpb25zIiwKICAiU3RhZ2UiOiAiUHVibGlzaGVkIiwKICAiUmV2aWV3RGF0ZSI6ICIwMS8wNC8yMDI1IiwKICAiUGFyYW1ldGVycyI6IFsKICAgIHsKICAgICAgIk5hbWUiOiAiVmlzdWFsaXphdGlvbk5hbWUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiVmlzdWFsaXphdGlvbiBuYW1lIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSB0ZWNobmljYWwgbmFtZSBvZiB0aGUgdmlzdWFsaXphdGlvbiB3aXRoIHdoaWNoIGl0IGNhbiBiZSBmb3VuZCIsCiAgICAgICJUeXBlIjogIlN0cmluZyIKICAgIH0sCiAgICB7CiAgICAgICJOYW1lIjogIlZpc3VhbGl6YXRpb25WYWx1ZVR5cGUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiVmlzdWFsaXphdGlvbiBWYWx1ZSBUeXBlIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSB2aXN1YWxpemF0aW9uIHZhbHVlIHR5cGUgb2YgdGhlIHNlbGVjdGlvbiAoYmFzaWNhbGx5IHRoZSB0eXBlIG9mIGZlZWQpIiwKICAgICAgIlR5cGUiOiAiU3RyaW5nIgogICAgfQogIF0KfQo=";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_viz_GetOrCreateVisualizationDefinition_json = "ewogICJOYW1lIjogImdldE9yQ3JlYXRlVmlzdWFsaXphdGlvbkRlZmluaXRpb24iLAogICJEaXNwbGF5TmFtZSI6ICJHZXQgb3IgY3JlYXRlIHZpc3VhbGl6YXRpb24gZGVmaW5pdGlvbiIsCiAgIkRlc2NyaXB0aW9uIjogIkNyZWF0ZSBhIG5ldyB2aXN1YWxpemF0aW9uIGRlZmluaXRpb24gb3IgZ2V0IGFuIGV4aXN0aW5nIG9uZSBpZiB0aGUgbmFtZSBpcyBwcmVzZW50IiwKICAiQ2F0ZWdvcnkiOiAiVml6QWN0aW9ucyIsCiAgIlN0YWdlIjogIlB1Ymxpc2hlZCIsCiAgIlJldmlld0RhdGUiOiAiMDEvMDQvMjAyNSIsCiAgIlBhcmFtZXRlcnMiOiBbCiAgICB7CiAgICAgICJOYW1lIjogIlZpc3VhbGl6YXRpb25OYW1lIiwKICAgICAgIkRpc3BsYXlOYW1lIjogIlZpc3VhbGl6YXRpb24gbmFtZSIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUaGUgdGVjaG5pY2FsIG5hbWUgb2YgdGhlIHZpc3VhbGl6YXRpb24gd2l0aCB3aGljaCBpdCBjYW4gYmUgZm91bmQiLAogICAgICAiVHlwZSI6ICJTdHJpbmciCiAgICB9LAogICAgewogICAgICAiTmFtZSI6ICJWaXN1YWxpemF0aW9uVHlwZU5hbWUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiVmlzdWFsaXphdGlvbiB0eXBlIG5hbWUiLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIG5hbWUgb2YgdGhlIHZpc3VhbGl6YXRpb24gdHlwZSB0aGF0IHRoZSBkZWZpbml0aW9uIHNob3VsZCB1c2UgKGUuZy4gQ2hhcnQsIEdyaWQpIiwKICAgICAgIlR5cGUiOiAiVmlzdWFsaXphdGlvblR5cGUiLAogICAgICAiUHJpbWl0aXZlVHlwZSI6ICJHcmlkLCBDaGFydCwgS1BJIgogICAgfSwKICAgIHsKICAgICAgIk5hbWUiOiAiUHJvdG9jb2xCaW5kaW5nVHlwZU5hbWUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiUHJvdG9jb2wgYmluZGluZyB0eXBlIG5hbWUiLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIG5hbWUgb2YgdGhlIHByb3RvY29sIGJpbmRpbmcgdHlwZSB0aGF0IHRoZSBkZWZpbml0aW9uIHNob3VsZCB1c2UgKGUuZy4gSGlnaENoYXJ0KSIsCiAgICAgICJUeXBlIjogIlByb3RvY29sQmluZGluZ1R5cGUiLAogICAgICAiUHJpbWl0aXZlVHlwZSI6ICJTdHJpbmciCiAgICB9LAogICAgewogICAgICAiTmFtZSI6ICJDaGFydFR5cGVOYW1lIiwKICAgICAgIkRpc3BsYXlOYW1lIjogIkNoYXJ0IHR5cGUgbmFtZSIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJJbiBjYXNlIG9mIGNoYXJ0cywgd2hpY2ggdHlwZSB0aGF0IHRoZSBkZWZpbml0aW9uIHNob3VsZCB1c2UgKGUuZy4gQmFyLCBDb2x1bW4sIExpbmUpIiwKICAgICAgIlR5cGUiOiAiQ2hhcnRUeXBlIiwKICAgICAgIlByaW1pdGl2ZVR5cGUiOiAiU3RyaW5nIgogICAgfQogIF0KfQo=";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_viz_GetVisualizationChartType_json = "ewogICJOYW1lIjogImdldFZpc3VhbGl6YXRpb25DaGFydFR5cGUiLAogICJEaXNwbGF5TmFtZSI6ICJHZXQgdmlzdWFsaXphdGlvbiBjaGFydCB0eXBlIiwKICAiRGVzY3JpcHRpb24iOiAiR2V0IHRoZSBjaGFydCB0eXBlIGZyb20gdmlzdWFsaXphdGlvbiBkZWZpbml0aW9uIiwKICAiQ2F0ZWdvcnkiOiAiVml6QWN0aW9ucyIsCiAgIlN0YWdlIjogIlB1Ymxpc2hlZCIsCiAgIlJldmlld0RhdGUiOiAiMDEvMDQvMjAyNSIsCiAgIlBhcmFtZXRlcnMiOiBbCiAgICB7CiAgICAgICJOYW1lIjogIlZpc3VhbGl6YXRpb25OYW1lIiwKICAgICAgIkRpc3BsYXlOYW1lIjogIlZpc3VhbGl6YXRpb24gbmFtZSIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUaGUgdGVjaG5pY2FsIG5hbWUgb2YgdGhlIHZpc3VhbGl6YXRpb24gd2l0aCB3aGljaCBpdCBjYW4gYmUgZm91bmQiLAogICAgICAiVHlwZSI6ICJTdHJpbmciCiAgICB9CiAgXQp9Cg==";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_viz_MoveDimensionToChartFeedAtIndex_json = "ewogICJOYW1lIjogIm1vdmVEaW1lbnNpb25Ub0NoYXJ0RmVlZCIsCiAgIkRpc3BsYXlOYW1lIjogIk1vdmUgZGltZW5zaW9uIHRvIGNoYXJ0IGZlZWQiLAogICJEZXNjcmlwdGlvbiI6ICJNb3ZlIHRoZSBkaW1lbnNpb24gdG8gdGhlIGdpdmVuIGNoYXJ0IGZlZWQiLAogICJDYXRlZ29yeSI6ICJWaXpBY3Rpb25zIiwKICAiU3RhZ2UiOiAiUHVibGlzaGVkIiwKICAiUmV2aWV3RGF0ZSI6ICIwMS8wNC8yMDI1IiwKICAiUGFyYW1ldGVycyI6IFsKICAgIHsKICAgICAgIk5hbWUiOiAiVmlzdWFsaXphdGlvbk5hbWUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiVmlzdWFsaXphdGlvbiBuYW1lIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSB0ZWNobmljYWwgbmFtZSBvZiB0aGUgdmlzdWFsaXphdGlvbiB3aXRoIHdoaWNoIGl0IGNhbiBiZSBmb3VuZCIsCiAgICAgICJUeXBlIjogIlN0cmluZyIKICAgIH0sCiAgICB7CiAgICAgICJOYW1lIjogIkRpbWVuc2lvbk5hbWUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiRGltZW5zaW9uIG5hbWUiLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIG5hbWUgb2YgdGhlIGRpbWVuc2lvbiB0byBtb3ZlIiwKICAgICAgIlR5cGUiOiAiRGltZW5zaW9uIiwKICAgICAgIlByaW1pdGl2ZVR5cGUiOiAiU3RyaW5nIgogICAgfSwKICAgIHsKICAgICAgIk5hbWUiOiAiVmlzdWFsaXphdGlvblZhbHVlVHlwZSIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJWaXN1YWxpemF0aW9uIFZhbHVlIFR5cGUiLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIHZpc3VhbGl6YXRpb24gdmFsdWUgdHlwZSBvZiB0aGUgc2VsZWN0aW9uIChiYXNpY2FsbHkgdGhlIHR5cGUgb2YgZmVlZCkiLAogICAgICAiVHlwZSI6ICJTdHJpbmciCiAgICB9LAogICAgewogICAgICAiTmFtZSI6ICJJbmRleCIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJJbmRleCIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUaGUgaW5kZXggYXQgd2hpY2ggdG8gbW92ZSB0aGUgZGltZW5zaW9uIiwKICAgICAgIlR5cGUiOiAiSW50ZWdlciIKICAgIH0KICBdCn0K";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_viz_MoveDimensionToChartFeed_json = "ewogICJOYW1lIjogIm1vdmVEaW1lbnNpb25Ub0NoYXJ0RmVlZCIsCiAgIkRpc3BsYXlOYW1lIjogIk1vdmUgZGltZW5zaW9uIHRvIGNoYXJ0IGZlZWQiLAogICJEZXNjcmlwdGlvbiI6ICJNb3ZlIHRoZSBkaW1lbnNpb24gdG8gdGhlIGdpdmVuIGNoYXJ0IGZlZWQiLAogICJDYXRlZ29yeSI6ICJWaXpBY3Rpb25zIiwKICAiU3RhZ2UiOiAiUHVibGlzaGVkIiwKICAiUmV2aWV3RGF0ZSI6ICIwMS8wNC8yMDI1IiwKICAiUGFyYW1ldGVycyI6IFsKICAgIHsKICAgICAgIk5hbWUiOiAiVmlzdWFsaXphdGlvbk5hbWUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiVmlzdWFsaXphdGlvbiBuYW1lIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSB0ZWNobmljYWwgbmFtZSBvZiB0aGUgdmlzdWFsaXphdGlvbiB3aXRoIHdoaWNoIGl0IGNhbiBiZSBmb3VuZCIsCiAgICAgICJUeXBlIjogIlN0cmluZyIKICAgIH0sCiAgICB7CiAgICAgICJOYW1lIjogIkRpbWVuc2lvbk5hbWUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiRGltZW5zaW9uIG5hbWUiLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIG5hbWUgb2YgdGhlIGRpbWVuc2lvbiB0byBtb3ZlIiwKICAgICAgIlR5cGUiOiAiRGltZW5zaW9uIiwKICAgICAgIlByaW1pdGl2ZVR5cGUiOiAiU3RyaW5nIgogICAgfSwKICAgIHsKICAgICAgIk5hbWUiOiAiVmlzdWFsaXphdGlvblZhbHVlVHlwZSIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJWaXN1YWxpemF0aW9uIFZhbHVlIFR5cGUiLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIHZpc3VhbGl6YXRpb24gdmFsdWUgdHlwZSBvZiB0aGUgc2VsZWN0aW9uIChiYXNpY2FsbHkgdGhlIHR5cGUgb2YgZmVlZCkiLAogICAgICAiVHlwZSI6ICJTdHJpbmciCiAgICB9CiAgXQp9Cg==";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_viz_PutMemberRestriction_json = "ewogICJOYW1lIjogInB1dE1lbWJlclJlc3RyaWN0aW9uIiwKICAiRGlzcGxheU5hbWUiOiAiUHV0IE1lbWJlciBSZXN0cmljdGlvbiIsCiAgIkRlc2NyaXB0aW9uIjogIlB1dCBhIG1lbWJlciByZXN0cmljdGlvbiB0byB0aGUgc3BlY2lmaWVkIHZpc3VhbGl6YXRpb24gdG8gcmVzdHJpY3QgaXQgdG8gYSBzZWN0aW9uIG9mIHRoZSBmdWxsIHRhYmxlIiwKICAiQ2F0ZWdvcnkiOiAiVml6QWN0aW9ucyIsCiAgIlN0YWdlIjogIkRldmVsb3BlZCIsCiAgIlJldmlld0RhdGUiOiAiMTUvMDQvMjAyNSIsCiAgIlBhcmFtZXRlcnMiOiBbCiAgICB7CiAgICAgICJOYW1lIjogIlZpc3VhbGl6YXRpb25OYW1lIiwKICAgICAgIkRpc3BsYXlOYW1lIjogIlZpc3VhbGl6YXRpb24gbmFtZSIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUaGUgdGVjaG5pY2FsIG5hbWUgb2YgdGhlIHZpc3VhbGl6YXRpb24gd2l0aCB3aGljaCBpdCBjYW4gYmUgZm91bmQiLAogICAgICAiVHlwZSI6ICJTdHJpbmciCiAgICB9LAogICAgewogICAgICAiTmFtZSI6ICJEaW1lbnNpb25OYW1lIiwKICAgICAgIkRpc3BsYXlOYW1lIjogIkRpbWVuc2lvbiBOYW1lIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSBuYW1lIG9mIHRoZSBkaW1lbnNpb24iLAogICAgICAiVHlwZSI6ICJTdHJpbmciCiAgICB9LAogICAgewogICAgICAiTmFtZSI6ICJNZW1iZXJOYW1lIiwKICAgICAgIkRpc3BsYXlOYW1lIjogIk1lbWJlciBOYW1lIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSBuYW1lIG9mIHRoZSBtZW1iZXIiLAogICAgICAiVHlwZSI6ICJTdHJpbmciCiAgICB9CiAgXQp9Cg==";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_viz_PutSelectionPathElement_json = "ewogICJOYW1lIjogInB1dFNlbGVjdGlvblBhdGhFbGVtZW50IiwKICAiRGlzcGxheU5hbWUiOiAiUHV0IFNlbGVjdGlvbiBQYXRoIEVsZW1lbnQiLAogICJEZXNjcmlwdGlvbiI6ICJQdXQgYSBzZWxlY3Rpb24gcGF0aCBlbGVtZW50IHRvIHRoZSBzcGVjaWZpZWQgdmlzdWFsaXphdGlvbiB0byByZXN0cmljdCBpdCB0byBhIHNlY3Rpb24gb2YgdGhlIGZ1bGwgdGFibGUiLAogICJDYXRlZ29yeSI6ICJWaXpBY3Rpb25zIiwKICAiU3RhZ2UiOiAiRGV2ZWxvcGVkIiwKICAiUmV2aWV3RGF0ZSI6ICIxNS8wNC8yMDI1IiwKICAiUGFyYW1ldGVycyI6IFsKICAgIHsKICAgICAgIk5hbWUiOiAiVmlzdWFsaXphdGlvbk5hbWUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiVmlzdWFsaXphdGlvbiBuYW1lIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSB0ZWNobmljYWwgbmFtZSBvZiB0aGUgdmlzdWFsaXphdGlvbiB3aXRoIHdoaWNoIGl0IGNhbiBiZSBmb3VuZCIsCiAgICAgICJUeXBlIjogIlN0cmluZyIKICAgIH0sCiAgICB7CiAgICAgICJOYW1lIjogIkRpbWVuc2lvbk5hbWUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiRGltZW5zaW9uIE5hbWUiLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIG5hbWUgb2YgdGhlIGRpbWVuc2lvbiIsCiAgICAgICJUeXBlIjogIlN0cmluZyIKICAgIH0sCiAgICB7CiAgICAgICJOYW1lIjogIk1lbWJlck5hbWUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiTWVtYmVyIE5hbWUiLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIG5hbWUgb2YgdGhlIG1lbWJlciIsCiAgICAgICJUeXBlIjogIlN0cmluZyIKICAgIH0KICBdCn0K";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_viz_RemoveDimensionFromChartFeed_json = "ewogICJOYW1lIjogInJlbW92ZURpbWVuc2lvbkZyb21DaGFydEZlZWQiLAogICJEaXNwbGF5TmFtZSI6ICJSZW1vdmUgZGltZW5zaW9uIGZyb20gY2hhcnQgZmVlZCIsCiAgIkRlc2NyaXB0aW9uIjogIlJlbW92ZSB0aGUgZGltZW5zaW9uIGZyb20gdGhlIGdpdmVuIGNoYXJ0IGZlZWQiLAogICJDYXRlZ29yeSI6ICJWaXpBY3Rpb25zIiwKICAiU3RhZ2UiOiAiUHVibGlzaGVkIiwKICAiUmV2aWV3RGF0ZSI6ICIwMS8wNC8yMDI1IiwKICAiUGFyYW1ldGVycyI6IFsKICAgIHsKICAgICAgIk5hbWUiOiAiVmlzdWFsaXphdGlvbk5hbWUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiVmlzdWFsaXphdGlvbiBuYW1lIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSB0ZWNobmljYWwgbmFtZSBvZiB0aGUgdmlzdWFsaXphdGlvbiB3aXRoIHdoaWNoIGl0IGNhbiBiZSBmb3VuZCIsCiAgICAgICJUeXBlIjogIlN0cmluZyIKICAgIH0sCiAgICB7CiAgICAgICJOYW1lIjogIkRpbWVuc2lvbk5hbWUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiRGltZW5zaW9uIG5hbWUiLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIG5hbWUgb2YgdGhlIGRpbWVuc2lvbiB0byByZW1vdmUiLAogICAgICAiVHlwZSI6ICJEaW1lbnNpb24iLAogICAgICAiUHJpbWl0aXZlVHlwZSI6ICJTdHJpbmciCiAgICB9LAogICAgewogICAgICAiTmFtZSI6ICJWaXN1YWxpemF0aW9uVmFsdWVUeXBlIiwKICAgICAgIkRpc3BsYXlOYW1lIjogIlZpc3VhbGl6YXRpb24gVmFsdWUgVHlwZSIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUaGUgdmlzdWFsaXphdGlvbiB2YWx1ZSB0eXBlIG9mIHRoZSBzZWxlY3Rpb24gKGJhc2ljYWxseSB0aGUgdHlwZSBvZiBmZWVkKSIsCiAgICAgICJUeXBlIjogIlN0cmluZyIKICAgIH0KICBdCn0K";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_viz_RemoveMemberFromTypedValueSelection_json = "ewogICJOYW1lIjogInJlbW92ZU1lbWJlckZyb21UeXBlZFZhbHVlU2VsZWN0aW9uIiwKICAiRGlzcGxheU5hbWUiOiAiUmVtb3ZlIG1lbWJlciBmcm9tIHR5cGVkIHZhbHVlIHNlbGVjdGlvbiIsCiAgIkRlc2NyaXB0aW9uIjogIlJlbW92ZSBhIE1lbWJlciB0byBhIHR5cGVkIHZhbHVlIHNlbGVjdGlvbiBvZiBhIGNoYXJ0IiwKICAiQ2F0ZWdvcnkiOiAiVml6QWN0aW9ucyIsCiAgIlN0YWdlIjogIlB1Ymxpc2hlZCIsCiAgIlJldmlld0RhdGUiOiAiMDEvMDQvMjAyNSIsCiAgIlBhcmFtZXRlcnMiOiBbCiAgICB7CiAgICAgICJOYW1lIjogIlZpc3VhbGl6YXRpb25OYW1lIiwKICAgICAgIkRpc3BsYXlOYW1lIjogIlZpc3VhbGl6YXRpb24gbmFtZSIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUaGUgdGVjaG5pY2FsIG5hbWUgb2YgdGhlIHZpc3VhbGl6YXRpb24gd2l0aCB3aGljaCBpdCBjYW4gYmUgZm91bmQiLAogICAgICAiVHlwZSI6ICJTdHJpbmciCiAgICB9LAogICAgewogICAgICAiTmFtZSI6ICJWaXN1YWxpemF0aW9uVmFsdWVUeXBlIiwKICAgICAgIkRpc3BsYXlOYW1lIjogIlZpc3VhbGl6YXRpb24gVmFsdWUgVHlwZSIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUaGUgdmlzdWFsaXphdGlvbiB2YWx1ZSB0eXBlIiwKICAgICAgIlR5cGUiOiAiU3RyaW5nIgogICAgfSwKICAgIHsKICAgICAgIk5hbWUiOiAiTWVtYmVyTmFtZSIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJNZW1iZXIgbmFtZSIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUaGUgbWVtYmVyIG5hbWUgb24gdGhlIGNoYXJ0IHN0cnVjdHVyZSBkaW1lbnNpb24iLAogICAgICAiVHlwZSI6ICJTdHJpbmciCiAgICB9CiAgXQp9Cg==";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_viz_RemoveMemberRestrictionsForMember_json = "ewogICJOYW1lIjogInJlbW92ZU1lbWJlclJlc3RyaWN0aW9uRm9yTWVtYmVyIiwKICAiRGlzcGxheU5hbWUiOiAiUmVtb3ZlIE1lbWJlciBSZXN0cmljdGlvbiBmb3IgTWVtYmVyIiwKICAiRGVzY3JpcHRpb24iOiAiUmVtb3ZlIGEgbWVtYmVyIGZyb20gdGhlIG1lbWJlciByZXN0cmljdGlvbiIsCiAgIkNhdGVnb3J5IjogIlZpekFjdGlvbnMiLAogICJTdGFnZSI6ICJEZXZlbG9wZWQiLAogICJSZXZpZXdEYXRlIjogIjE1LzA0LzIwMjUiLAogICJQYXJhbWV0ZXJzIjogWwogICAgewogICAgICAiTmFtZSI6ICJWaXN1YWxpemF0aW9uTmFtZSIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJWaXN1YWxpemF0aW9uIG5hbWUiLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIHRlY2huaWNhbCBuYW1lIG9mIHRoZSB2aXN1YWxpemF0aW9uIHdpdGggd2hpY2ggaXQgY2FuIGJlIGZvdW5kIiwKICAgICAgIlR5cGUiOiAiU3RyaW5nIgogICAgfSwKICAgIHsKICAgICAgIk5hbWUiOiAiRGltZW5zaW9uTmFtZSIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJEaW1lbnNpb24gTmFtZSIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUaGUgbmFtZSBvZiB0aGUgZGltZW5zaW9uIiwKICAgICAgIlR5cGUiOiAiU3RyaW5nIgogICAgfSwKICAgIHsKICAgICAgIk5hbWUiOiAiTWVtYmVyTmFtZSIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJNZW1iZXIgTmFtZSIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUaGUgbmFtZSBvZiB0aGUgbWVtYmVyIiwKICAgICAgIlR5cGUiOiAiU3RyaW5nIgogICAgfQogIF0KfQo=";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_viz_RemoveVisualizationDefinition_json = "ewogICJOYW1lIjogInJlbW92ZVZpc3VhbGl6YXRpb25EZWZpbml0aW9uIiwKICAiRGlzcGxheU5hbWUiOiAiUmVtb3ZlIHZpc3VhbGl6YXRpb24gZGVmaW5pdGlvbiIsCiAgIkRlc2NyaXB0aW9uIjogIlJlbW92ZSBhIHZpc3VhbGl6YXRpb24gZGVmaW5pdGlvbiIsCiAgIkNhdGVnb3J5IjogIlZpekFjdGlvbnMiLAogICJTdGFnZSI6ICJQdWJsaXNoZWQiLAogICJSZXZpZXdEYXRlIjogIjAxLzA0LzIwMjUiLAogICJQYXJhbWV0ZXJzIjogWwogICAgewogICAgICAiTmFtZSI6ICJWaXN1YWxpemF0aW9uTmFtZSIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJWaXN1YWxpemF0aW9uIG5hbWUiLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIHRlY2huaWNhbCBuYW1lIG9mIHRoZSB2aXN1YWxpemF0aW9uIHRvIGJlIHJlbW92ZWQiLAogICAgICAiVHlwZSI6ICJTdHJpbmciCiAgICB9CiAgXQp9Cg==";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_viz_SetActiveVisualizationDefinition_json = "ewogICJOYW1lIjogInNldEFjdGl2ZVZpc3VhbGl6YXRpb25EZWZpbml0aW9uIiwKICAiRGlzcGxheU5hbWUiOiAiU2V0IGFjdGl2ZSB2aXN1YWxpemF0aW9uIGRlZmluaXRpb24iLAogICJEZXNjcmlwdGlvbiI6ICJTZXQgdGhlIHZpc3VhbGl6YXRpb24gZGVmaW5pdGlvbiB0aGF0IGlzIGN1cnJlbnRseSBhY3RpdmUiLAogICJDYXRlZ29yeSI6ICJWaXpBY3Rpb25zIiwKICAiU3RhZ2UiOiAiUHVibGlzaGVkIiwKICAiUmV2aWV3RGF0ZSI6ICIwMS8wNC8yMDI1IiwKICAiUGFyYW1ldGVycyI6IFsKICAgIHsKICAgICAgIk5hbWUiOiAiVmlzdWFsaXphdGlvbk5hbWUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiVmlzdWFsaXphdGlvbiBuYW1lIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSB0ZWNobmljYWwgbmFtZSBvZiB0aGUgdmlzdWFsaXphdGlvbiB3aXRoIHdoaWNoIGl0IGNhbiBiZSBmb3VuZCIsCiAgICAgICJUeXBlIjogIlN0cmluZyIKICAgIH0KICBdCn0K";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_viz_SetChartColorPalette_json = "ewogICJOYW1lIjogInNldENoYXJ0Q29sb3JQYWxldHRlIiwKICAiRGlzcGxheU5hbWUiOiAiU2V0IGNoYXJ0IGNvbG9yIHBhbGV0dGUiLAogICJEZXNjcmlwdGlvbiI6ICJTZXQgdGhlIGNvbG9yIHBhbGV0dGUgb2YgdGhlIGdpdmVuIGNoYXJ0IHZpc3VhbGl6YXRpb24iLAogICJDYXRlZ29yeSI6ICJWaXpBY3Rpb25zIiwKICAiU3RhZ2UiOiAiUHVibGlzaGVkIiwKICAiUmV2aWV3RGF0ZSI6ICIyMS8wNS8yMDI1IiwKICAiUGFyYW1ldGVycyI6IFsKICAgIHsKICAgICAgIk5hbWUiOiAiVmlzdWFsaXphdGlvbk5hbWUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiVmlzdWFsaXphdGlvbiBuYW1lIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSB0ZWNobmljYWwgbmFtZSBvZiB0aGUgdmlzdWFsaXphdGlvbiB3aXRoIHdoaWNoIGl0IGNhbiBiZSBmb3VuZCIsCiAgICAgICJUeXBlIjogIlN0cmluZyIKICAgIH0sCiAgICB7CiAgICAgICJOYW1lIjogIkNvbG9yUGFsZXR0ZSIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJDb2xvciBwYWxldHRlIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIkEgbGlzdCBvZiBjb2xvciB2YWx1ZXMgKGluIGhleCkgdGhhdCBzaG91bGQgYmUgc2V0IiwKICAgICAgIlR5cGUiOiAiQXJyYXkiCiAgICB9CiAgXQp9Cg==";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_viz_SetChartOrientation_json = "ewogICJOYW1lIjogInNldENoYXJ0T3JpZW50YXRpb24iLAogICJEaXNwbGF5TmFtZSI6ICJTZXQgY2hhcnQgb3JpZW50YXRpb24iLAogICJEZXNjcmlwdGlvbiI6ICJTZXQgb3JpZW50YXRpb24gb2YgdGhlIGdpdmVuIGNoYXJ0IHZpc3VhbGl6YXRpb24iLAogICJDYXRlZ29yeSI6ICJWaXpBY3Rpb25zIiwKICAiU3RhZ2UiOiAiUHVibGlzaGVkIiwKICAiUmV2aWV3RGF0ZSI6ICIyMS8wNS8yMDI1IiwKICAiUGFyYW1ldGVycyI6IFsKICAgIHsKICAgICAgIk5hbWUiOiAiVmlzdWFsaXphdGlvbk5hbWUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiVmlzdWFsaXphdGlvbiBuYW1lIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSB0ZWNobmljYWwgbmFtZSBvZiB0aGUgdmlzdWFsaXphdGlvbiB3aXRoIHdoaWNoIGl0IGNhbiBiZSBmb3VuZCIsCiAgICAgICJUeXBlIjogIlN0cmluZyIKICAgIH0sCiAgICB7CiAgICAgICJOYW1lIjogIkNoYXJ0T3JpZW50YXRpb24iLAogICAgICAiRGlzcGxheU5hbWUiOiAiQ2hhcnQgb3JpZW50YXRpb24iLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIG9yaWVudGF0aW9uIHRoYXQgc2hvdWxkIGJlIHNldCIsCiAgICAgICJUeXBlIjogIkNoYXJ0T3JpZW50YXRpb24iLAogICAgICAiUHJpbWl0aXZlVHlwZSI6ICJTdHJpbmciCiAgICB9CiAgXQp9Cg==";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_viz_SetChartStructure_json = "ewogICJOYW1lIjogInNldENoYXJ0U3RydWN0dXJlIiwKICAiRGlzcGxheU5hbWUiOiAiU2V0IENoYXJ0IFN0cnVjdHVyZSIsCiAgIkRlc2NyaXB0aW9uIjogIlNldHMgdGhlIGNoYXJ0IHN0cnVjdHVyZSBkaW1lbnNpb24iLAogICJDYXRlZ29yeSI6ICJWaXpBY3Rpb25zIiwKICAiU3RhZ2UiOiAiRGV2ZWxvcGVkIiwKICAiUmV2aWV3RGF0ZSI6ICIxNS8wNC8yMDI1IiwKICAiUGFyYW1ldGVycyI6IFsKICAgIHsKICAgICAgIk5hbWUiOiAiVmlzdWFsaXphdGlvbk5hbWUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiVmlzdWFsaXphdGlvbiBuYW1lIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSB0ZWNobmljYWwgbmFtZSBvZiB0aGUgdmlzdWFsaXphdGlvbiB3aXRoIHdoaWNoIGl0IGNhbiBiZSBmb3VuZCIsCiAgICAgICJUeXBlIjogIlN0cmluZyIKICAgIH0sCiAgICB7CiAgICAgICJOYW1lIjogIkNoYXJ0U3RydWN0dXJlIiwKICAgICAgIkRpc3BsYXlOYW1lIjogIkNoYXJ0IFN0cnVjdHVyZSIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUaGUgdGVjaG5pY2FsIG5hbWUgb2YgdGhlIHN0cnVjdHVyZSBkaW1lbnNpb24gd2l0aCB3aGljaCBpdCBjYW4gYmUgZm91bmQiLAogICAgICAiVHlwZSI6ICJTdHJpbmciCiAgICB9CiAgXQp9Cg==";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_viz_SetDatapointVariableValue_json = "ewogICJOYW1lIjogInNldERhdGFwb2ludFZhcmlhYmxlVmFsdWUiLAogICJEaXNwbGF5TmFtZSI6ICJTZXQgRGF0YXBvaW50IFZhcmlhYmxlIFZhbHVlIiwKICAiRGVzY3JpcHRpb24iOiAiU2V0IFRoZSBEYXRhcG9pbnQgVmFyaWFibGUgVmFsdWUiLAogICJDYXRlZ29yeSI6ICJWaXpBY3Rpb25zIiwKICAiU3RhZ2UiOiAiRGV2ZWxvcGVkIiwKICAiUmV2aWV3RGF0ZSI6ICIxNS8wNC8yMDI1IiwKICAiUGFyYW1ldGVycyI6IFsKICAgIHsKICAgICAgIk5hbWUiOiAiVmlzdWFsaXphdGlvbk5hbWUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiVmlzdWFsaXphdGlvbiBuYW1lIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSB0ZWNobmljYWwgbmFtZSBvZiB0aGUgdmlzdWFsaXphdGlvbiB3aXRoIHdoaWNoIGl0IGNhbiBiZSBmb3VuZCIsCiAgICAgICJUeXBlIjogIlN0cmluZyIKICAgIH0sCiAgICB7CiAgICAgICJOYW1lIjogIkRhdGFwb2ludFZhcmlhYmxlQ29udGFpbmVyTmFtZSIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJEYXRhcG9pbnQgVmFyaWFibGUgY29udGFpbmVyIG5hbWUiLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIHRlY2huaWNhbCBuYW1lIG9mIHRoZSBkYXRhIHBvaW50IHZhcmlhYmxlIGNvbnRhaW5lciB3aXRoIHdoaWNoIGl0IGNhbiBiZSBmb3VuZCIsCiAgICAgICJUeXBlIjogIlN0cmluZyIKICAgIH0sCiAgICB7CiAgICAgICJOYW1lIjogIlZhcmlhYmxlTmFtZSIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJWYXJpYWJsZSBuYW1lIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSB0ZWNobmljYWwgbmFtZSBvZiB0aGUgdmFyaWFibGUgd2l0aCB3aGljaCBpdCBjYW4gYmUgZm91bmQiLAogICAgICAiVHlwZSI6ICJTdHJpbmciCiAgICB9LAogICAgewogICAgICAiTmFtZSI6ICJWYXJpYWJsZVZhbHVlIiwKICAgICAgIkRpc3BsYXlOYW1lIjogIlZhcmlhYmxlIHZhbHVlIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSBzdHJpbmcgdmFsdWUgdG8gc2V0IHRvIHRoZSB2YXJpYWJsZSIsCiAgICAgICJUeXBlIjogIlN0cmluZyIKICAgIH0KICBdCn0K";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_viz_SetKpiMemberDeviation_json = "ewogICJOYW1lIjogInNldEtwaU1lbWJlckRldmlhdGlvbiIsCiAgIkRpc3BsYXlOYW1lIjogIlNldCBLUEkgTWVtYmVyIERldmlhdGlvbiIsCiAgIkRlc2NyaXB0aW9uIjogIlNldHMgdGhlIGRldmlhdGlvbiBLUEkgbWVtYmVyIG5hbWUiLAogICJDYXRlZ29yeSI6ICJWaXpBY3Rpb25zIiwKICAiU3RhZ2UiOiAiRGV2ZWxvcGVkIiwKICAiUmV2aWV3RGF0ZSI6ICIxNS8wNC8yMDI1IiwKICAiUGFyYW1ldGVycyI6IFsKICAgIHsKICAgICAgIk5hbWUiOiAiVmlzdWFsaXphdGlvbk5hbWUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiVmlzdWFsaXphdGlvbiBuYW1lIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSB0ZWNobmljYWwgbmFtZSBvZiB0aGUgdmlzdWFsaXphdGlvbiB3aXRoIHdoaWNoIGl0IGNhbiBiZSBmb3VuZCIsCiAgICAgICJUeXBlIjogIlN0cmluZyIKICAgIH0sCiAgICB7CiAgICAgICJOYW1lIjogIk1lbWJlck5hbWUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiTWVtYmVyIE5hbWUiLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIG5hbWUgb2YgdGhlIG1lbWJlciBvbiB0aGUgS1BJIHN0cnVjdHVyZSIsCiAgICAgICJUeXBlIjogIlN0cmluZyIKICAgIH0KICBdCn0K";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_viz_SetKpiMemberException_json = "ewogICJOYW1lIjogInNldEtwaU1lbWJlckV4Y2VwdGlvbiIsCiAgIkRpc3BsYXlOYW1lIjogIlNldCBLUEkgTWVtYmVyIEV4Y2VwdGlvbiIsCiAgIkRlc2NyaXB0aW9uIjogIlNldHMgdGhlIGV4Y2VwdGlvbiBLUEkgbWVtYmVyIG5hbWUiLAogICJDYXRlZ29yeSI6ICJWaXpBY3Rpb25zIiwKICAiU3RhZ2UiOiAiRGV2ZWxvcGVkIiwKICAiUmV2aWV3RGF0ZSI6ICIxNS8wNC8yMDI1IiwKICAiUGFyYW1ldGVycyI6IFsKICAgIHsKICAgICAgIk5hbWUiOiAiVmlzdWFsaXphdGlvbk5hbWUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiVmlzdWFsaXphdGlvbiBuYW1lIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSB0ZWNobmljYWwgbmFtZSBvZiB0aGUgdmlzdWFsaXphdGlvbiB3aXRoIHdoaWNoIGl0IGNhbiBiZSBmb3VuZCIsCiAgICAgICJUeXBlIjogIlN0cmluZyIKICAgIH0sCiAgICB7CiAgICAgICJOYW1lIjogIk1lbWJlck5hbWUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiTWVtYmVyIE5hbWUiLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIG5hbWUgb2YgdGhlIG1lbWJlciBvbiB0aGUgS1BJIHN0cnVjdHVyZSIsCiAgICAgICJUeXBlIjogIlN0cmluZyIKICAgIH0KICBdCn0K";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_viz_SetKpiMemberMain_json = "ewogICJOYW1lIjogInNldEtwaU1lbWJlck1haW4iLAogICJEaXNwbGF5TmFtZSI6ICJTZXQgS1BJIE1lbWJlciBNYWluIiwKICAiRGVzY3JpcHRpb24iOiAiU2V0cyB0aGUgbWFpbiBLUEkgbWVtYmVyIG5hbWUiLAogICJDYXRlZ29yeSI6ICJWaXpBY3Rpb25zIiwKICAiU3RhZ2UiOiAiRGV2ZWxvcGVkIiwKICAiUmV2aWV3RGF0ZSI6ICIxNS8wNC8yMDI1IiwKICAiUGFyYW1ldGVycyI6IFsKICAgIHsKICAgICAgIk5hbWUiOiAiVmlzdWFsaXphdGlvbk5hbWUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiVmlzdWFsaXphdGlvbiBuYW1lIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSB0ZWNobmljYWwgbmFtZSBvZiB0aGUgdmlzdWFsaXphdGlvbiB3aXRoIHdoaWNoIGl0IGNhbiBiZSBmb3VuZCIsCiAgICAgICJUeXBlIjogIlN0cmluZyIKICAgIH0sCiAgICB7CiAgICAgICJOYW1lIjogIk1lbWJlck5hbWUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiTWVtYmVyIE5hbWUiLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIG5hbWUgb2YgdGhlIG1lbWJlciBvbiB0aGUgS1BJIHN0cnVjdHVyZSIsCiAgICAgICJUeXBlIjogIlN0cmluZyIKICAgIH0KICBdCn0K";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_viz_SetKpiMemberTarget_json = "ewogICJOYW1lIjogInNldEtwaU1lbWJlclRhcmdldCIsCiAgIkRpc3BsYXlOYW1lIjogIlNldCBLUEkgTWVtYmVyIFRhcmdldCIsCiAgIkRlc2NyaXB0aW9uIjogIlNldHMgdGhlIHRhcmdldCBLUEkgbWVtYmVyIG5hbWUiLAogICJDYXRlZ29yeSI6ICJWaXpBY3Rpb25zIiwKICAiU3RhZ2UiOiAiRGV2ZWxvcGVkIiwKICAiUmV2aWV3RGF0ZSI6ICIxNS8wNC8yMDI1IiwKICAiUGFyYW1ldGVycyI6IFsKICAgIHsKICAgICAgIk5hbWUiOiAiVmlzdWFsaXphdGlvbk5hbWUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiVmlzdWFsaXphdGlvbiBuYW1lIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSB0ZWNobmljYWwgbmFtZSBvZiB0aGUgdmlzdWFsaXphdGlvbiB3aXRoIHdoaWNoIGl0IGNhbiBiZSBmb3VuZCIsCiAgICAgICJUeXBlIjogIlN0cmluZyIKICAgIH0sCiAgICB7CiAgICAgICJOYW1lIjogIk1lbWJlck5hbWUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiTWVtYmVyIE5hbWUiLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIG5hbWUgb2YgdGhlIG1lbWJlciBvbiB0aGUgS1BJIHN0cnVjdHVyZSIsCiAgICAgICJUeXBlIjogIlN0cmluZyIKICAgIH0KICBdCn0K";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_viz_SetKpiMemberTrend_json = "ewogICJOYW1lIjogInNldEtwaU1lbWJlclRyZW5kIiwKICAiRGlzcGxheU5hbWUiOiAiU2V0IEtQSSBNZW1iZXIgVHJlbmQiLAogICJEZXNjcmlwdGlvbiI6ICJTZXRzIHRoZSB0cmVuZCBLUEkgbWVtYmVyIG5hbWUiLAogICJDYXRlZ29yeSI6ICJWaXpBY3Rpb25zIiwKICAiU3RhZ2UiOiAiRGV2ZWxvcGVkIiwKICAiUmV2aWV3RGF0ZSI6ICIxNS8wNC8yMDI1IiwKICAiUGFyYW1ldGVycyI6IFsKICAgIHsKICAgICAgIk5hbWUiOiAiVmlzdWFsaXphdGlvbk5hbWUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiVmlzdWFsaXphdGlvbiBuYW1lIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSB0ZWNobmljYWwgbmFtZSBvZiB0aGUgdmlzdWFsaXphdGlvbiB3aXRoIHdoaWNoIGl0IGNhbiBiZSBmb3VuZCIsCiAgICAgICJUeXBlIjogIlN0cmluZyIKICAgIH0sCiAgICB7CiAgICAgICJOYW1lIjogIk1lbWJlck5hbWUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiTWVtYmVyIE5hbWUiLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIG5hbWUgb2YgdGhlIG1lbWJlciBvbiB0aGUgS1BJIHN0cnVjdHVyZSIsCiAgICAgICJUeXBlIjogIlN0cmluZyIKICAgIH0KICBdCn0K";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_viz_SetKpiStructure_json = "ewogICJOYW1lIjogInNldEtwaVN0cnVjdHVyZSIsCiAgIkRpc3BsYXlOYW1lIjogIlNldCBLUEkgU3RydWN0dXJlIiwKICAiRGVzY3JpcHRpb24iOiAiU2V0cyB0aGUga3BpIHN0cnVjdHVyZSBkaW1lbnNpb24iLAogICJDYXRlZ29yeSI6ICJWaXpBY3Rpb25zIiwKICAiU3RhZ2UiOiAiRGV2ZWxvcGVkIiwKICAiUmV2aWV3RGF0ZSI6ICIxNS8wNC8yMDI1IiwKICAiUGFyYW1ldGVycyI6IFsKICAgIHsKICAgICAgIk5hbWUiOiAiVmlzdWFsaXphdGlvbk5hbWUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiVmlzdWFsaXphdGlvbiBuYW1lIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSB0ZWNobmljYWwgbmFtZSBvZiB0aGUgdmlzdWFsaXphdGlvbiB3aXRoIHdoaWNoIGl0IGNhbiBiZSBmb3VuZCIsCiAgICAgICJUeXBlIjogIlN0cmluZyIKICAgIH0sCiAgICB7CiAgICAgICJOYW1lIjogIktwaVN0cnVjdHVyZSIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJLUEkgU3RydWN0dXJlIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSB0ZWNobmljYWwgbmFtZSBvZiB0aGUgc3RydWN0dXJlIGRpbWVuc2lvbiB3aXRoIHdoaWNoIGl0IGNhbiBiZSBmb3VuZCIsCiAgICAgICJUeXBlIjogIlN0cmluZyIKICAgIH0KICBdCn0K";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_viz_SetVisualizationChartType_json = "ewogICJOYW1lIjogInNldFZpc3VhbGl6YXRpb25DaGFydFR5cGUiLAogICJEaXNwbGF5TmFtZSI6ICJTZXQgdmlzdWFsaXphdGlvbiBjaGFydCB0eXBlIiwKICAiRGVzY3JpcHRpb24iOiAiU2V0IHRoZSBjaGFydCB0eXBlIG9mIHRoZSB2aXN1YWxpemF0aW9uIGRlZmluaXRpb24iLAogICJDYXRlZ29yeSI6ICJWaXpBY3Rpb25zIiwKICAiU3RhZ2UiOiAiUHVibGlzaGVkIiwKICAiUmV2aWV3RGF0ZSI6ICIwMS8wNC8yMDI1IiwKICAiUGFyYW1ldGVycyI6IFsKICAgIHsKICAgICAgIk5hbWUiOiAiVmlzdWFsaXphdGlvbk5hbWUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiVmlzdWFsaXphdGlvbiBuYW1lIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSB0ZWNobmljYWwgbmFtZSBvZiB0aGUgdmlzdWFsaXphdGlvbiB3aXRoIHdoaWNoIGl0IGNhbiBiZSBmb3VuZCIsCiAgICAgICJUeXBlIjogIlN0cmluZyIKICAgIH0sCiAgICB7CiAgICAgICJOYW1lIjogIkNoYXJ0VHlwZU5hbWUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiQ2hhcnQgdHlwZSBuYW1lIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSB0eXBlIG9mIGNoYXJ0IHRoYXQgc2hvdWxkIGJlIHNldCIsCiAgICAgICJUeXBlIjogIkNoYXJ0VHlwZSIsCiAgICAgICJQcmltaXRpdmVUeXBlIjogIlN0cmluZyIKICAgIH0KICBdCn0K";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_viz_SetVisualizationSynchronizationMode_json = "ewogICJOYW1lIjogInNldFZpc3VhbGl6YXRpb25TeW5jaHJvbml6YXRpb25Nb2RlIiwKICAiRGlzcGxheU5hbWUiOiAiU2V0IFZpc3VhbGl6YXRpb24gU3luY2hyb25pemF0aW9uIE1vZGUiLAogICJEZXNjcmlwdGlvbiI6ICJTZXQgVGhlIFZpc3VhbGl6YXRpb24gU3luY2hyb25pemF0aW9uIE1vZGUiLAogICJDYXRlZ29yeSI6ICJWaXpBY3Rpb25zIiwKICAiU3RhZ2UiOiAiRGV2ZWxvcGVkIiwKICAiUmV2aWV3RGF0ZSI6ICIxNS8wNC8yMDI1IiwKICAiUGFyYW1ldGVycyI6IFsKICAgIHsKICAgICAgIk5hbWUiOiAiU3luY2hyb25pemF0aW9uTW9kZSIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJTeW5jaHJvbml6YXRpb24gTW9kZSIsCiAgICAgICJEZXNjcmlwdGlvbiI6ICJUaGUgc3luY2hyb25pemF0aW9uIG1vZGUgc3BlY2lmeWluZyB3aGV0aGVyIHRoZSBjaGFydCBzaG91bGQgYmUgYXV0b21hdGljYWxseSBhZGFwdCB0aGUgZHJpbGwgb3Igbm90IiwKICAgICAgIlR5cGUiOiAiU3RyaW5nIgogICAgfQogIF0KfQo=";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_viz_SetVisualizationVariableValue_json = "ewogICJOYW1lIjogInNldFZpc3VhbGl6YXRpb25WYXJpYWJsZVZhbHVlIiwKICAiRGlzcGxheU5hbWUiOiAiU2V0IFZpc3VhbGl6YXRpb24gVmFyaWFibGUgVmFsdWUiLAogICJEZXNjcmlwdGlvbiI6ICJTZXQgVGhlIFZpc3VhbGl6YXRpb24gVmFyaWFibGUgVmFsdWUiLAogICJDYXRlZ29yeSI6ICJWaXpBY3Rpb25zIiwKICAiU3RhZ2UiOiAiRGV2ZWxvcGVkIiwKICAiUmV2aWV3RGF0ZSI6ICIxNS8wNC8yMDI1IiwKICAiUGFyYW1ldGVycyI6IFsKICAgIHsKICAgICAgIk5hbWUiOiAiVmlzdWFsaXphdGlvbk5hbWUiLAogICAgICAiRGlzcGxheU5hbWUiOiAiVmlzdWFsaXphdGlvbiBuYW1lIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSB0ZWNobmljYWwgbmFtZSBvZiB0aGUgdmlzdWFsaXphdGlvbiB3aXRoIHdoaWNoIGl0IGNhbiBiZSBmb3VuZCIsCiAgICAgICJUeXBlIjogIlN0cmluZyIKICAgIH0sCiAgICB7CiAgICAgICJOYW1lIjogIlZhcmlhYmxlTmFtZSIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJWYXJpYWJsZSBuYW1lIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSB0ZWNobmljYWwgbmFtZSBvZiB0aGUgdmFyaWFibGUgd2l0aCB3aGljaCBpdCBjYW4gYmUgZm91bmQiLAogICAgICAiVHlwZSI6ICJTdHJpbmciCiAgICB9LAogICAgewogICAgICAiTmFtZSI6ICJWYXJpYWJsZVZhbHVlIiwKICAgICAgIkRpc3BsYXlOYW1lIjogIlZhcmlhYmxlIHZhbHVlIiwKICAgICAgIkRlc2NyaXB0aW9uIjogIlRoZSBzdHJpbmcgdmFsdWUgdG8gc2V0IHRvIHRoZSB2YXJpYWJsZSIsCiAgICAgICJUeXBlIjogIlN0cmluZyIKICAgIH0KICBdCn0K";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_actions_viz_SynchronizeVisualizationDefinition_json = "ewogICJOYW1lIjogInN5bmNocm9uaXplVmlzdWFsaXphdGlvbkRlZmluaXRpb24iLAogICJEaXNwbGF5TmFtZSI6ICJTeW5jaHJvbml6ZSB2aXN1YWxpemF0aW9uIGRlZmluaXRpb24iLAogICJEZXNjcmlwdGlvbiI6ICJBcHBseSB2aXN1YWxpemF0aW9uIHNldHRpbmdzIHRvIHRoZSBtb2RlbCIsCiAgIkNhdGVnb3J5IjogIlZpekFjdGlvbnMiLAogICJTdGFnZSI6ICJQdWJsaXNoZWQiLAogICJSZXZpZXdEYXRlIjogIjAxLzA0LzIwMjUiLAogICJQYXJhbWV0ZXJzIjogWwogICAgewogICAgICAiTmFtZSI6ICJWaXN1YWxpemF0aW9uTmFtZSIsCiAgICAgICJEaXNwbGF5TmFtZSI6ICJWaXN1YWxpemF0aW9uIG5hbWUiLAogICAgICAiRGVzY3JpcHRpb24iOiAiVGhlIHRlY2huaWNhbCBuYW1lIG9mIHRoZSB2aXN1YWxpemF0aW9uIHdpdGggd2hpY2ggaXQgY2FuIGJlIGZvdW5kIiwKICAgICAgIlR5cGUiOiAiU3RyaW5nIgogICAgfQogIF0KfQo=";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_programs_DataProvider_json = "ewogICJOYW1lIjogIkRhdGFQcm92aWRlciIsCiAgIlByb2ZpbGVzIjogWyIqIl0sCiAgIkRpc3BsYXlOYW1lIjogIkRhdGFQcm92aWRlciIsCiAgIkRlc2NyaXB0aW9uIjogIk1hbmFnZXMgYW55dGhpbmcgbmVjZXNzYXJ5IHRvIGdldCBkYXRhIiwKICAiQXV0aG9yIjogIkFsZXhhbmRlciBCZXJnIiwKICAiQ2F0ZWdvcnkiOiAiT2xhcCIsCiAgIkNvbnRhaW5lciI6ICJOb25lIiwKICAiQ2xhc3MiOiAiY29tLnNhcC5maXJlZmx5LmRhdGFwcm92aWRlci5wcm9ncmFtLk9sYXBEYXRhUHJvdmlkZXJQcm9ncmFtIiwKICAiUHJvZ3JhbVN0YXJ0VGltZW91dER1cmF0aW9uIjogMzAwMDAwLAogICJTdWJTeXN0ZW1zIjogWwoJIkRhdGFQcm92aWRlclBvb2wiLAoJIlN5c3RlbUxhbmRzY2FwZSIsCgkiVXNlclByb2ZpbGUiLAoJIkNhY2hlIgogIF0sCiAgIk1vZHVsZXMiOiBbCiAgICAiZmY0NDEwLm9sYXAuaXAucHJvdmlkZXJzIiwKICAgICJmZjUwMDAub2xhcC5kYXRhcHJvdmlkZXIiCiAgXQp9Cg==";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_programs_SubSysDataProviderPool_json = "ewogICJOYW1lIjogIkBTdWJTeXMuRGF0YVByb3ZpZGVyUG9vbCIsCiAgIlR5cGUiOiAiU3ViU3lzdGVtIiwKICAiQ2F0ZWdvcnkiOiAiU3ViU3lzdGVtIiwKICAiUHJvZmlsZXMiOiBbIioiXSwKICAiRGlzcGxheU5hbWUiOiAiRGF0YVByb3ZpZGVyIFBvb2wgU3ViU3lzdGVtIiwKICAiRGVzY3JpcHRpb24iOiAiRGF0YVByb3ZpZGVyIFBvb2wgU3ViU3lzdGVtIiwKICAiQXV0aG9yIjogIk1hcmNpbiBQYXNrdWRhIiwKICAiQ29udGFpbmVyIjogIk5vbmUiLAogICJDbGFzcyI6ICJjb20uc2FwLmZpcmVmbHkuZGF0YXByb3ZpZGVyLmludGVncmF0aW9uLnBvb2wuU3ViU3lzRGF0YVByb3ZpZGVyUG9vbCIsCiAgIlN1YlN5c3RlbXMiOiBbCiAgXSwKICAiTW9kdWxlcyI6IFsKICAgICJmZjgwMDUub2xhcC51aS5hcGkiCiAgXQp9Cg==";
oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES.manifests_programs_SubSysFileSystemfsdp_json = "ewogICJOYW1lIjogIkBTdWJTeXMuRmlsZVN5c3RlbS5mc2RwIiwKICAiVHlwZSI6ICJTdWJTeXN0ZW0iLAogICJDYXRlZ29yeSI6ICJTdWJTeXN0ZW0iLAogICJQcm9maWxlcyI6WyIqIl0sCiAgIkRpc3BsYXlOYW1lIjogIkRhdGFwcm92aWRlciBGaWxlc3lzdGVtIiwKICAiRGVzY3JpcHRpb24iOiAiRGF0YXByb3ZpZGVyIEZpbGVzeXN0ZW0iLAogICJBdXRob3IiOiAiTWFyY28gUGVzYXJlc2UiLAogICJDb250YWluZXIiOiAiTm9uZSIsCiAgIkNsYXNzIjogImNvbS5zYXAuZmlyZWZseS5kYXRhcHJvdmlkZXIuaW50ZWdyYXRpb24uZnMuU3ViU3lzRGF0YVByb3ZpZGVyRmlsZVN5c3RlbSIsCiAgIlN1YlN5c3RlbXMiOiBbCiAgICAiRGF0YVByb3ZpZGVyUG9vbCIKICBdLAogICJNb2R1bGVzIjogWwogICAgImZmODAwNS5vbGFwLnVpLmFwaSIKICBdCn0K";

oFF.XResources.registerResourceClass("ff5000.olap.dataprovider", oFF.FF5000_OLAP_DATAPROVIDER_RESOURCES);

oFF.OlapDataProviderFactory = function() {};
oFF.OlapDataProviderFactory.prototype = new oFF.XObject();
oFF.OlapDataProviderFactory.prototype._ff_c = "OlapDataProviderFactory";

oFF.OlapDataProviderFactory.CONTENT_LIB_CDATA = "cdata";
oFF.OlapDataProviderFactory.CONTENT_LIB_CONTENT = "content";
oFF.OlapDataProviderFactory.CONTENT_LIB_ENTITIES = "entities";
oFF.OlapDataProviderFactory.DATA_SOURCE_KEY = "dataSource";
oFF.OlapDataProviderFactory.INA_REPO_KEY = "inaRepo";
oFF.OlapDataProviderFactory.SYSTEM_NAME_ALT_KEY = "system";
oFF.OlapDataProviderFactory.SYSTEM_NAME_KEY = "systemName";
oFF.OlapDataProviderFactory._createDataProvider = function(process, config, queryManager)
{
	let startData = oFF.ProgramStartData.create();
	startData.putXObject(oFF.OlapDataProviderProgram.DATA_DP_CONFIG, config);
	if (oFF.notNull(queryManager))
	{
		startData.putXObject(oFF.OlapDataProviderProgram.DATA_EXISTING_QM, queryManager);
	}
	let runner = oFF.OlapDataProviderFactory._createDataProviderProgramRunner(process);
	runner.setProgramStartData(startData);
	return runner.runProgram().onThenExt((program) => {
		return program.getDataProvider();
	});
};
oFF.OlapDataProviderFactory._createDataProviderProgramRunner = function(process)
{
	return oFF.ProgramRunner.createRunner(process, oFF.OlapDataProviderProgram.PROGRAM_NAME);
};
oFF.OlapDataProviderFactory._getInsightContent = function(insightContent)
{
	if (oFF.notNull(insightContent))
	{
		if (oFF.OlapDataProviderFactory._isContentLibJson(insightContent))
		{
			return oFF.OlapDataProviderFactory._getInsightContentFromContentLibJson(insightContent);
		}
		else
		{
			return insightContent;
		}
	}
	return null;
};
oFF.OlapDataProviderFactory._getInsightContentFromContentLibJson = function(insightContent)
{
	let cdataStruct = insightContent.containsKey(oFF.OlapDataProviderFactory.CONTENT_LIB_CDATA) ? insightContent.getStructureByKey(oFF.OlapDataProviderFactory.CONTENT_LIB_CDATA) : insightContent;
	if (cdataStruct.containsKey(oFF.OlapDataProviderFactory.CONTENT_LIB_CONTENT))
	{
		let contentStruct = cdataStruct.getStructureByKey(oFF.OlapDataProviderFactory.CONTENT_LIB_CONTENT);
		if (contentStruct.containsKey(oFF.OlapDataProviderFactory.CONTENT_LIB_ENTITIES))
		{
			let entitiesList = contentStruct.getListByKey(oFF.OlapDataProviderFactory.CONTENT_LIB_ENTITIES);
			if (entitiesList.hasElements())
			{
				return entitiesList.getStructureAt(0);
			}
		}
	}
	return null;
};
oFF.OlapDataProviderFactory._isContentLibJson = function(insightContent)
{
	return oFF.XCollectionUtils.hasElements(insightContent) && insightContent.containsKey(oFF.OlapDataProviderFactory.CONTENT_LIB_CDATA) || insightContent.containsKey(oFF.OlapDataProviderFactory.CONTENT_LIB_CONTENT);
};
oFF.OlapDataProviderFactory.createDataProviderFromFile = function(process, dpName, filePath, dpConfig)
{
	if (oFF.isNull(process))
	{
		return oFF.XPromise.reject(oFF.XError.create("Missing process!"));
	}
	let fileToLoad = oFF.XFile.create(process, filePath);
	let loadStructurePromise = oFF.XFilePromise.loadJsonStructure(fileToLoad);
	return loadStructurePromise.onThenPromise((fileStructure) => {
		return oFF.OlapDataProviderFactory.createDataProviderFromFileContent(process, dpName, fileStructure);
	});
};
oFF.OlapDataProviderFactory.createDataProviderFromFileContent = function(process, dpName, fileStructure)
{
	let contentStructure = oFF.OlapDataProviderFactory._getInsightContent(fileStructure);
	if (oFF.isNull(contentStructure))
	{
		throw oFF.XException.createException("Missing file structure!");
	}
	let systemName;
	let fullQualifiedDataSourceName;
	let inaRepoJson;
	systemName = contentStructure.getStringByKey(oFF.OlapDataProviderFactory.SYSTEM_NAME_KEY);
	if (oFF.XStringUtils.isNullOrEmpty(systemName))
	{
		systemName = contentStructure.getStringByKey(oFF.OlapDataProviderFactory.SYSTEM_NAME_ALT_KEY);
	}
	fullQualifiedDataSourceName = contentStructure.getStringByKey(oFF.OlapDataProviderFactory.DATA_SOURCE_KEY);
	inaRepoJson = contentStructure.getStructureByKey(oFF.OlapDataProviderFactory.INA_REPO_KEY);
	if (oFF.XStringUtils.isNullOrEmpty(systemName))
	{
		throw oFF.XException.createException("Missing system name!");
	}
	if (oFF.XStringUtils.isNullOrEmpty(fullQualifiedDataSourceName))
	{
		throw oFF.XException.createException("Missing data source!");
	}
	let dataSource = oFF.QFactory.createDataSource();
	dataSource.setSystemName(systemName);
	dataSource.setFullQualifiedName(fullQualifiedDataSourceName);
	let dpCreateConfiguration = oFF.OlapDataProviderConfiguration.createDefaultConfig(process, dpName);
	dpCreateConfiguration.setStartAsConnected(true);
	dpCreateConfiguration.setRepoDeltaEnabled(true);
	dpCreateConfiguration.getOlapStartConnection().setDataSource(dataSource);
	dpCreateConfiguration.getStartConnection().setRepoJson(inaRepoJson);
	dpCreateConfiguration.getStartConnection().setStartWithAutoFetch(true);
	return oFF.OlapDataProviderFactory.createDataProviderFromSource(dpCreateConfiguration);
};
oFF.OlapDataProviderFactory.createDataProviderFromQueryManager = function(queryManager, configuration)
{
	return oFF.OlapDataProviderFactory._createDataProvider(configuration.getProcess(), configuration, queryManager);
};
oFF.OlapDataProviderFactory.createDataProviderFromSource = function(configuration)
{
	return oFF.OlapDataProviderFactory._createDataProvider(configuration.getProcess(), configuration, null);
};
oFF.OlapDataProviderFactory.staticSetup = function()
{
	let factoryBase = oFF.DataProviderFactory.getInstance();
	factoryBase.registerFactory(new oFF.OlapDataProviderFactory());
};
oFF.OlapDataProviderFactory.prototype.createDataProviderConfiguration = function(process, dataProviderName)
{
	return oFF.OlapDataProviderConfiguration.createDefaultConfig(process, dataProviderName);
};
oFF.OlapDataProviderFactory.prototype.createDataProviderFromProcess = function(process, dpName, systemName, fullQualifiedDataSourceName, dpConfig)
{
	let config = oFF.OlapDataProviderConfiguration.createDefaultConfig(process, dpName);
	config.deserializeJson(dpConfig);
	config.setForceLoggingEnabled(true);
	if (oFF.XStringUtils.isNotNullAndNotEmpty(systemName) && oFF.XStringUtils.isNotNullAndNotEmpty(fullQualifiedDataSourceName))
	{
		config.getStartConnection().setSystemName(systemName);
		config.getStartConnection().setDataSourceName(fullQualifiedDataSourceName);
	}
	return oFF.OlapDataProviderFactory._createDataProvider(process, config, null).onThenExt((dp) => {
		return dp;
	});
};
oFF.OlapDataProviderFactory.prototype.createDataProviderWithConfig = function(config)
{
	let olapConfig = config;
	return oFF.OlapDataProviderFactory._createDataProvider(olapConfig.getProcess(), olapConfig, null).onThenExt((dp) => {
		return dp;
	});
};
oFF.OlapDataProviderFactory.prototype.createDataProviderWithDataSource = function(process, dpName, dataSourceJson)
{
	let app = oFF.Application.getApplicationFromProcess(process);
	let importer = oFF.QInAImportFactory.createForRepository(app, null);
	let dataSource = importer.importDataSource(dataSourceJson);
	let config = oFF.OlapDataProviderConfiguration.createDefaultConfig(process, dpName);
	config.getOlapStartConnection().setDataSource(dataSource);
	return oFF.OlapDataProviderFactory.createDataProviderFromSource(config).onThenExt((dp) => {
		return dp;
	});
};

oFF.OlapDataProviderOlapAccess = {

	getOlapInterface:function(dataProvider)
	{
			return dataProvider;
	},
	getOlapInterfaces:function(dataProviders)
	{
			let newDataProviders = oFF.XList.create();
		for (let i = 0; i < dataProviders.size(); i++)
		{
			newDataProviders.add(dataProviders.get(i));
		}
		return newDataProviders;
	}
};

oFF.OlapDataProviderActionConstants = {

	PARAM_AXIS_TYPE_NAME:"axisTypeName",
	PARAM_CHART_TYPE_NAME:"chartTypeName",
	PARAM_COMPARISON_OPERATOR:"comparisonOperator",
	PARAM_DIMENSION_NAME:"dimensionName",
	PARAM_MEMBER_NAME:"memberName",
	PARAM_PROTOCOL_BINDING_TYPE:"protocolBindingType",
	PARAM_VIZ_NAME:"vizName",
	PARAM_VIZ_TYPE_NAME:"vizTypeName"
};

oFF.OdpActionParameterConverter = function() {};
oFF.OdpActionParameterConverter.prototype = new oFF.XObject();
oFF.OdpActionParameterConverter.prototype._ff_c = "OdpActionParameterConverter";

oFF.OdpActionParameterConverter.create = function()
{
	return new oFF.OdpActionParameterConverter();
};
oFF.OdpActionParameterConverter.prototype.fromAxisType = function(value)
{
	return oFF.DfNameObject.getSafeName(value);
};
oFF.OdpActionParameterConverter.prototype.fromBoolean = function(value)
{
	return oFF.XBoolean.convertToString(value);
};
oFF.OdpActionParameterConverter.prototype.fromChartOrientation = function(value)
{
	return oFF.DfNameObject.getSafeName(value);
};
oFF.OdpActionParameterConverter.prototype.fromChartType = function(value)
{
	return oFF.DfNameObject.getSafeName(value);
};
oFF.OdpActionParameterConverter.prototype.fromComparisonOperator = function(value)
{
	return oFF.DfNameObject.getSafeName(value);
};
oFF.OdpActionParameterConverter.prototype.fromDimension = function(value)
{
	return oFF.DfNameObject.getSafeName(value);
};
oFF.OdpActionParameterConverter.prototype.fromFieldContainerDisplay = function(value)
{
	return oFF.DfNameObject.getSafeName(value);
};
oFF.OdpActionParameterConverter.prototype.fromFieldContainerKeyDisplay = function(value)
{
	return oFF.DfNameObject.getSafeName(value);
};
oFF.OdpActionParameterConverter.prototype.fromFilterType = function(value)
{
	return oFF.DfNameObject.getSafeName(value);
};
oFF.OdpActionParameterConverter.prototype.fromInteger = function(value)
{
	return oFF.XInteger.convertToString(value);
};
oFF.OdpActionParameterConverter.prototype.fromMemberReadMode = function(memberReadMode)
{
	return oFF.DfNameObject.getSafeName(memberReadMode);
};
oFF.OdpActionParameterConverter.prototype.fromModelLevel = function(value)
{
	return oFF.DfNameObject.getSafeName(value);
};
oFF.OdpActionParameterConverter.prototype.fromPlanningMode = function(value)
{
	return oFF.DfNameObject.getSafeName(value);
};
oFF.OdpActionParameterConverter.prototype.fromPlanningModelBehaviour = function(value)
{
	return oFF.DfNameObject.getSafeName(value);
};
oFF.OdpActionParameterConverter.prototype.fromPlanningPersistenceType = function(value)
{
	return oFF.DfNameObject.getSafeName(value);
};
oFF.OdpActionParameterConverter.prototype.fromPlanningVersionSettingsMode = function(value)
{
	return oFF.DfNameObject.getSafeName(value);
};
oFF.OdpActionParameterConverter.prototype.fromPresentationType = function(value)
{
	return oFF.DfNameObject.getSafeName(value);
};
oFF.OdpActionParameterConverter.prototype.fromProtocolBindingType = function(value)
{
	return oFF.DfNameObject.getSafeName(value);
};
oFF.OdpActionParameterConverter.prototype.fromResultAlignment = function(value)
{
	return oFF.DfNameObject.getSafeName(value);
};
oFF.OdpActionParameterConverter.prototype.fromResultStructureElement = function(value)
{
	return oFF.DfNameObject.getSafeName(value);
};
oFF.OdpActionParameterConverter.prototype.fromResultVisibility = function(value)
{
	return oFF.DfNameObject.getSafeName(value);
};
oFF.OdpActionParameterConverter.prototype.fromSign = function(value)
{
	return oFF.DfNameObject.getSafeName(value);
};
oFF.OdpActionParameterConverter.prototype.fromSortDirection = function(value)
{
	return oFF.DfNameObject.getSafeName(value);
};
oFF.OdpActionParameterConverter.prototype.fromStringList = function(value)
{
	let prList = oFF.PrUtils.fromListOfString(value);
	return oFF.PrUtils.serialize(prList, false, false, -1);
};
oFF.OdpActionParameterConverter.prototype.fromStructure = function(value)
{
	return oFF.PrUtils.serialize(value, false, false, 0);
};
oFF.OdpActionParameterConverter.prototype.fromVisualizationType = function(value)
{
	return oFF.DfNameObject.getSafeName(value);
};
oFF.OdpActionParameterConverter.prototype.fromVisualizationValueType = function(value)
{
	return oFF.DfNameObject.getSafeName(value);
};
oFF.OdpActionParameterConverter.prototype.fromZeroSuppressionType = function(value)
{
	return oFF.DfNameObject.getSafeName(value);
};
oFF.OdpActionParameterConverter.prototype.toAxisType = function(stringValue)
{
	return oFF.notNull(stringValue) ? oFF.AxisType.lookup(stringValue) : null;
};
oFF.OdpActionParameterConverter.prototype.toBoolean = function(stringValue, defaultValue)
{
	return oFF.notNull(stringValue) ? oFF.XBoolean.convertFromString(stringValue) : defaultValue;
};
oFF.OdpActionParameterConverter.prototype.toChartOrientation = function(stringValue)
{
	return oFF.notNull(stringValue) ? oFF.ChartOrientation.lookup(stringValue) : null;
};
oFF.OdpActionParameterConverter.prototype.toChartType = function(stringValue)
{
	return oFF.notNull(stringValue) ? oFF.ChartType.lookup(stringValue) : null;
};
oFF.OdpActionParameterConverter.prototype.toComparisonOperator = function(stringValue)
{
	return oFF.notNull(stringValue) ? oFF.ComparisonOperator.lookup(stringValue) : null;
};
oFF.OdpActionParameterConverter.prototype.toDimension = function(dataProvider, stringValue)
{
	if (oFF.isNull(stringValue) || dataProvider.getQueryManager() === null)
	{
		return null;
	}
	return dataProvider.getQueryManager().getQueryModel().getDimensionByName(stringValue);
};
oFF.OdpActionParameterConverter.prototype.toFieldContainerDisplay = function(stringValue)
{
	return oFF.notNull(stringValue) ? oFF.FieldContainerDisplay.lookup(stringValue) : null;
};
oFF.OdpActionParameterConverter.prototype.toFieldContainerKeyDisplay = function(stringValue)
{
	return oFF.notNull(stringValue) ? oFF.FieldContainerKeyDisplay.lookup(stringValue) : null;
};
oFF.OdpActionParameterConverter.prototype.toFilterType = function(stringValue)
{
	return oFF.notNull(stringValue) ? oFF.FilterComponentType.lookup(stringValue) : null;
};
oFF.OdpActionParameterConverter.prototype.toInteger = function(stringValue)
{
	return oFF.XInteger.convertFromString(stringValue);
};
oFF.OdpActionParameterConverter.prototype.toMemberReadMode = function(stringValue)
{
	return oFF.notNull(stringValue) ? oFF.QMemberReadMode.lookup(stringValue) : null;
};
oFF.OdpActionParameterConverter.prototype.toModelLevel = function(stringValue)
{
	return oFF.notNull(stringValue) ? oFF.QModelLevel.lookup(stringValue) : null;
};
oFF.OdpActionParameterConverter.prototype.toPlanningMode = function(stringValue)
{
	return oFF.notNull(stringValue) ? oFF.PlanningMode.lookup(stringValue) : null;
};
oFF.OdpActionParameterConverter.prototype.toPlanningModelBehaviour = function(stringValue)
{
	return oFF.notNull(stringValue) ? oFF.PlanningModelBehaviour.lookup(stringValue) : null;
};
oFF.OdpActionParameterConverter.prototype.toPlanningPersistenceType = function(stringValue)
{
	return oFF.notNull(stringValue) ? oFF.PlanningPersistenceType.lookup(stringValue) : null;
};
oFF.OdpActionParameterConverter.prototype.toPlanningVersionSettingsMode = function(stringValue)
{
	return oFF.notNull(stringValue) ? oFF.PlanningVersionSettingsMode.lookup(stringValue) : null;
};
oFF.OdpActionParameterConverter.prototype.toPresentationType = function(stringValue)
{
	return oFF.notNull(stringValue) ? oFF.PresentationType.lookup(stringValue) : null;
};
oFF.OdpActionParameterConverter.prototype.toProtocolBindingType = function(stringValue)
{
	return oFF.notNull(stringValue) ? oFF.ProtocolBindingType.lookup(stringValue) : null;
};
oFF.OdpActionParameterConverter.prototype.toResultAlignment = function(stringValue)
{
	return oFF.notNull(stringValue) ? oFF.ResultAlignment.lookup(stringValue) : null;
};
oFF.OdpActionParameterConverter.prototype.toResultStructureElement = function(stringValue)
{
	return oFF.notNull(stringValue) ? oFF.ResultStructureElement.lookup(stringValue) : null;
};
oFF.OdpActionParameterConverter.prototype.toResultVisibility = function(stringValue)
{
	return oFF.notNull(stringValue) ? oFF.ResultVisibility.lookup(stringValue) : null;
};
oFF.OdpActionParameterConverter.prototype.toSign = function(stringValue)
{
	return oFF.notNull(stringValue) ? oFF.SetSign.lookup(stringValue) : null;
};
oFF.OdpActionParameterConverter.prototype.toSortDirection = function(stringValue)
{
	return oFF.notNull(stringValue) ? oFF.XSortDirection.lookup(stringValue) : null;
};
oFF.OdpActionParameterConverter.prototype.toStringList = function(stringValue)
{
	if (oFF.notNull(stringValue))
	{
		let deserialized = oFF.PrUtils.deserialize(stringValue);
		if (oFF.notNull(deserialized) && deserialized.isList())
		{
			return oFF.PrUtils.asListOfString(deserialized.asList());
		}
	}
	return null;
};
oFF.OdpActionParameterConverter.prototype.toStructure = function(stringValue)
{
	return oFF.notNull(stringValue) ? oFF.PrUtils.deserialize(stringValue).asStructure() : null;
};
oFF.OdpActionParameterConverter.prototype.toVisualizationType = function(stringValue)
{
	return oFF.notNull(stringValue) ? oFF.VisualizationType.lookup(stringValue) : null;
};
oFF.OdpActionParameterConverter.prototype.toVisualizationValueType = function(stringValue)
{
	return oFF.notNull(stringValue) ? oFF.VisualizationValueType.lookup(stringValue) : null;
};
oFF.OdpActionParameterConverter.prototype.toZeroSuppressionType = function(stringValue)
{
	return oFF.notNull(stringValue) ? oFF.ZeroSuppressionType.lookup(stringValue) : null;
};

oFF.OlapDataProviderQueryMetadataAnalyzer = function() {};
oFF.OlapDataProviderQueryMetadataAnalyzer.prototype = new oFF.XObject();
oFF.OlapDataProviderQueryMetadataAnalyzer.prototype._ff_c = "OlapDataProviderQueryMetadataAnalyzer";

oFF.OlapDataProviderQueryMetadataAnalyzer.ACCOUNT_DIMENSION = "Account dimension";
oFF.OlapDataProviderQueryMetadataAnalyzer.AFFECTED_VARIABLES = "affectedVariables";
oFF.OlapDataProviderQueryMetadataAnalyzer.BOOKED_READ_MODE = "bookedReadMode";
oFF.OlapDataProviderQueryMetadataAnalyzer.CONDITIONS = "Conditions";
oFF.OlapDataProviderQueryMetadataAnalyzer.CUSTOM_VARIABLE = "customVariable";
oFF.OlapDataProviderQueryMetadataAnalyzer.DEPENDENT_VARIABLE_NAMES = "dependentVariableNames";
oFF.OlapDataProviderQueryMetadataAnalyzer.DIMENSIONS = "Dimensions";
oFF.OlapDataProviderQueryMetadataAnalyzer.DIMENSION_NAMES = "Dimension names";
oFF.OlapDataProviderQueryMetadataAnalyzer.DIMENSION_TYPES = "Dimension types";
oFF.OlapDataProviderQueryMetadataAnalyzer.DIM_MEMBER_VARIABLES = "Dimension member variables";
oFF.OlapDataProviderQueryMetadataAnalyzer.DIM_WITH_ACTIVE_HIERARCHY = "Dimensions with active hierarchy";
oFF.OlapDataProviderQueryMetadataAnalyzer.DIM_WITH_BOOKED_READ_MODE = "Dimensions with booked read mode";
oFF.OlapDataProviderQueryMetadataAnalyzer.DIM_WITH_MASTER_READ_MODE = "Dimensions with master read mode";
oFF.OlapDataProviderQueryMetadataAnalyzer.DIM_WITH_TIME_DEPENDENT_HIERARCHY = "Dimensions with time dependent hierarchy";
oFF.OlapDataProviderQueryMetadataAnalyzer.DIM_WITH_VERSION_DEPENDENT_HIERARCHY = "Dimensions with version dependent hierarchy";
oFF.OlapDataProviderQueryMetadataAnalyzer.DYNAMIC_FILTER = "Dynamic filter";
oFF.OlapDataProviderQueryMetadataAnalyzer.DYNAMIC_OR_EXIT_VARIABLE = "dynamicOrExitVariable";
oFF.OlapDataProviderQueryMetadataAnalyzer.EXCEPTIONS = "Exceptions";
oFF.OlapDataProviderQueryMetadataAnalyzer.EXIT_VARIABLES = "Exit variables";
oFF.OlapDataProviderQueryMetadataAnalyzer.FIXED_FILTER = "Fixed filter";
oFF.OlapDataProviderQueryMetadataAnalyzer.FORMULA_VARIABLES = "Formula variables";
oFF.OlapDataProviderQueryMetadataAnalyzer.FULL_QUERY_NAME = "Full query name";
oFF.OlapDataProviderQueryMetadataAnalyzer.HIERARCHY_ACTIVE = "hierarchyActive";
oFF.OlapDataProviderQueryMetadataAnalyzer.HIERARCHY_NAME = "hierarchyName";
oFF.OlapDataProviderQueryMetadataAnalyzer.HIERARCHY_NAME_VARIABLES = "Hierarchy name variables";
oFF.OlapDataProviderQueryMetadataAnalyzer.HIERARCHY_TIME_DEPENDENT = "hierarchyTimeDependent";
oFF.OlapDataProviderQueryMetadataAnalyzer.HIERARCHY_VERSION_DEPENDENT = "hierarchyVersionDependent";
oFF.OlapDataProviderQueryMetadataAnalyzer.INITIAL_VALUE_ALLOWED = "initialValueAllowed";
oFF.OlapDataProviderQueryMetadataAnalyzer.KEY_FIELD = "keyField";
oFF.OlapDataProviderQueryMetadataAnalyzer.MANDATORY = "mandatory";
oFF.OlapDataProviderQueryMetadataAnalyzer.MASTER_READ_MODE = "masterReadMode";
oFF.OlapDataProviderQueryMetadataAnalyzer.MEASURE_MEMBER_TYPES = "Measure member types";
oFF.OlapDataProviderQueryMetadataAnalyzer.NAME = "name";
oFF.OlapDataProviderQueryMetadataAnalyzer.OPTION_LIST_VARIABLES = "Option list variables";
oFF.OlapDataProviderQueryMetadataAnalyzer.PLANNING_QUERY = "Planning query";
oFF.OlapDataProviderQueryMetadataAnalyzer.READ_MODES = "Read modes";
oFF.OlapDataProviderQueryMetadataAnalyzer.SECONDARY_STRUCTURE = "Secondary structure";
oFF.OlapDataProviderQueryMetadataAnalyzer.SIMPLE_TYPE_VARIABLES = "Simple type variables";
oFF.OlapDataProviderQueryMetadataAnalyzer.SYSTEM = "System";
oFF.OlapDataProviderQueryMetadataAnalyzer.TEXT = "text";
oFF.OlapDataProviderQueryMetadataAnalyzer.TEXT_VARIABLES = "Text variables";
oFF.OlapDataProviderQueryMetadataAnalyzer.VARIABLES = "Variables";
oFF.OlapDataProviderQueryMetadataAnalyzer.VARIABLE_TYPE = "variableType";
oFF.OlapDataProviderQueryMetadataAnalyzer.create = function()
{
	return new oFF.OlapDataProviderQueryMetadataAnalyzer();
};
oFF.OlapDataProviderQueryMetadataAnalyzer.prototype._getDimensionInfo = function(dimension)
{
	let properties = oFF.PrStructure.create();
	properties.putString(oFF.OlapDataProviderQueryMetadataAnalyzer.NAME, dimension.getName());
	properties.putString(oFF.OlapDataProviderQueryMetadataAnalyzer.TEXT, oFF.XStringUtils.escapeCodeString(dimension.getText()));
	properties.putString(oFF.OlapDataProviderQueryMetadataAnalyzer.KEY_FIELD, dimension.getKeyField() === null ? "null" : dimension.getKeyField().getName());
	properties.putString(oFF.OlapDataProviderQueryMetadataAnalyzer.HIERARCHY_NAME, dimension.getHierarchyName());
	properties.putBoolean(oFF.OlapDataProviderQueryMetadataAnalyzer.HIERARCHY_ACTIVE, dimension.isHierarchyActive());
	properties.putBoolean(oFF.OlapDataProviderQueryMetadataAnalyzer.HIERARCHY_TIME_DEPENDENT, dimension.hasTimeDependentHierarchies());
	properties.putBoolean(oFF.OlapDataProviderQueryMetadataAnalyzer.HIERARCHY_VERSION_DEPENDENT, dimension.hasVersionDependentHierarchies());
	properties.putBoolean(oFF.OlapDataProviderQueryMetadataAnalyzer.MASTER_READ_MODE, dimension.supportsReadMode(oFF.QContextType.RESULT_SET, oFF.QMemberReadMode.MASTER));
	properties.putBoolean(oFF.OlapDataProviderQueryMetadataAnalyzer.BOOKED_READ_MODE, dimension.supportsReadMode(oFF.QContextType.RESULT_SET, oFF.QMemberReadMode.BOOKED) || dimension.supportsReadMode(oFF.QContextType.RESULT_SET, oFF.QMemberReadMode.BOOKED_AND_SPACE) || dimension.supportsReadMode(oFF.QContextType.RESULT_SET, oFF.QMemberReadMode.BOOKED_AND_SPACE_AND_STATE));
	return properties;
};
oFF.OlapDataProviderQueryMetadataAnalyzer.prototype._getVariableInfo = function(variable)
{
	let properties = oFF.PrStructure.create();
	properties.putString(oFF.OlapDataProviderQueryMetadataAnalyzer.NAME, variable.getName());
	properties.putString(oFF.OlapDataProviderQueryMetadataAnalyzer.TEXT, oFF.XStringUtils.escapeCodeString(variable.getText()));
	let affectedVars = oFF.PrFactory.createList().addAllStrings(oFF.XCollectionUtils.map(variable.getAffectedVariables(), (_var) => {
		return _var.getName();
	}));
	properties.put(oFF.OlapDataProviderQueryMetadataAnalyzer.AFFECTED_VARIABLES, affectedVars);
	properties.putString(oFF.OlapDataProviderQueryMetadataAnalyzer.DEPENDENT_VARIABLE_NAMES, oFF.XCollectionUtils.join(variable.getDependentVariablesNames(), ", "));
	properties.putString(oFF.OlapDataProviderQueryMetadataAnalyzer.VARIABLE_TYPE, variable.getVariableType().toString());
	properties.putBoolean(oFF.OlapDataProviderQueryMetadataAnalyzer.INITIAL_VALUE_ALLOWED, variable.isInitialValueAllowed());
	properties.putBoolean(oFF.OlapDataProviderQueryMetadataAnalyzer.CUSTOM_VARIABLE, variable.isCustomVariable());
	properties.putBoolean(oFF.OlapDataProviderQueryMetadataAnalyzer.DYNAMIC_OR_EXIT_VARIABLE, variable.isDynamicOrExitVariable());
	properties.putBoolean(oFF.OlapDataProviderQueryMetadataAnalyzer.MANDATORY, variable.isMandatory());
	return properties;
};
oFF.OlapDataProviderQueryMetadataAnalyzer.prototype.analyze = function(queryModel)
{
	if (oFF.isNull(queryModel))
	{
		throw oFF.XException.createIllegalStateException("Query model is not available for analysis");
	}
	let result = oFF.PrFactory.createStructure();
	let dataSource = queryModel.getDataSource();
	let variables = queryModel.getVariables();
	let variableTypes = oFF.XStream.of(variables).map((variable) => {
		return variable.getVariableType();
	}).distinct().collect(oFF.XStreamCollector.toList());
	let dimensions = queryModel.getDimensions();
	let memberTypes = oFF.PrFactory.createList().addAllStrings(oFF.XStream.of(dimensions).filter((dim1) => {
		return dim1.getKeyField() !== null;
	}).map((dim2) => {
		return dim2.getKeyField().getValueType();
	}).distinct().collect(oFF.XStreamCollector.toListOfString((valueType) => {
		return valueType.toString();
	})));
	let dimWithActiveHierarchy = oFF.PrFactory.createList().addAllStrings(oFF.XStream.of(dimensions).filter((dim3) => {
		return dim3.isHierarchyActive() && oFF.XStringUtils.isNotNullAndNotEmpty(dim3.getHierarchyName());
	}).collect(oFF.XStreamCollector.toListOfString((dim4) => {
		return dim4.getName();
	})));
	let readModeTypes = oFF.PrFactory.createList().addAllStrings(oFF.XStream.of(dimensions).map((dim5) => {
		return dim5.getSupportedReadModes(oFF.QContextType.RESULT_SET);
	}).flatMap((readModes) => {
		return oFF.XStream.of(readModes);
	}).distinct().collect(oFF.XStreamCollector.toListOfString((readMode) => {
		return readMode.getName();
	})));
	let measureDimension = queryModel.getMeasureDimension();
	let measureMemberTypes = oFF.PrFactory.createList().addAllStrings(oFF.XStream.of(oFF.notNull(measureDimension) ? measureDimension.getAllStructureMembers() : null).map((member1) => {
		return member1.getMemberType();
	}).distinct().collect(oFF.XStreamCollector.toListOfString((member2) => {
		return member2.getName();
	})));
	result.putString(oFF.OlapDataProviderQueryMetadataAnalyzer.FULL_QUERY_NAME, dataSource.getFullQualifiedName());
	result.putString(oFF.OlapDataProviderQueryMetadataAnalyzer.SYSTEM, dataSource.getSystemName());
	result.putBoolean(oFF.OlapDataProviderQueryMetadataAnalyzer.VARIABLES, variableTypes.hasElements());
	result.putBoolean(oFF.OlapDataProviderQueryMetadataAnalyzer.DIM_MEMBER_VARIABLES, oFF.XCollectionUtils.contains(variableTypes, (vt1) => {
		return vt1.isTypeOf(oFF.VariableType.DIMENSION_MEMBER_VARIABLE);
	}));
	result.putBoolean(oFF.OlapDataProviderQueryMetadataAnalyzer.HIERARCHY_NAME_VARIABLES, oFF.XCollectionUtils.contains(variableTypes, (vt2) => {
		return vt2.isTypeOf(oFF.VariableType.HIERARCHY_NAME_VARIABLE);
	}));
	result.putBoolean(oFF.OlapDataProviderQueryMetadataAnalyzer.SIMPLE_TYPE_VARIABLES, oFF.XCollectionUtils.contains(variableTypes, (vt3) => {
		return vt3.isTypeOf(oFF.VariableType.SIMPLE_TYPE_VARIABLE);
	}));
	result.putBoolean(oFF.OlapDataProviderQueryMetadataAnalyzer.TEXT_VARIABLES, oFF.XCollectionUtils.contains(variableTypes, (vt4) => {
		return vt4.isTypeOf(oFF.VariableType.TEXT_VARIABLE);
	}));
	result.putBoolean(oFF.OlapDataProviderQueryMetadataAnalyzer.FORMULA_VARIABLES, oFF.XCollectionUtils.contains(variableTypes, (vt5) => {
		return vt5.isTypeOf(oFF.VariableType.FORMULA_VARIABLE);
	}));
	result.putBoolean(oFF.OlapDataProviderQueryMetadataAnalyzer.OPTION_LIST_VARIABLES, oFF.XCollectionUtils.contains(variableTypes, (vt6) => {
		return vt6.isTypeOf(oFF.VariableType.OPTION_LIST_VARIABLE);
	}));
	result.putBoolean(oFF.OlapDataProviderQueryMetadataAnalyzer.DYNAMIC_FILTER, queryModel.getFilter().getDynamicFilter().getFilterRootElement() !== null);
	result.putBoolean(oFF.OlapDataProviderQueryMetadataAnalyzer.FIXED_FILTER, queryModel.getFilter().getFixedFilter().getFilterRootElement() !== null);
	result.put(oFF.OlapDataProviderQueryMetadataAnalyzer.DIMENSION_TYPES, memberTypes);
	result.put(oFF.OlapDataProviderQueryMetadataAnalyzer.DIM_WITH_ACTIVE_HIERARCHY, dimWithActiveHierarchy);
	result.putBoolean(oFF.OlapDataProviderQueryMetadataAnalyzer.DIM_WITH_ACTIVE_HIERARCHY, oFF.XCollectionUtils.contains(dimensions, (dimension) => {
		return dimension.isHierarchyActive() && oFF.XStringUtils.isNotNullAndNotEmpty(dimension.getHierarchyName());
	}));
	result.put(oFF.OlapDataProviderQueryMetadataAnalyzer.READ_MODES, readModeTypes);
	result.put(oFF.OlapDataProviderQueryMetadataAnalyzer.MEASURE_MEMBER_TYPES, measureMemberTypes);
	result.putBoolean(oFF.OlapDataProviderQueryMetadataAnalyzer.ACCOUNT_DIMENSION, queryModel.getAccountDimension() !== null);
	result.putBoolean(oFF.OlapDataProviderQueryMetadataAnalyzer.SECONDARY_STRUCTURE, queryModel.getNonMeasureDimension() !== null);
	result.putBoolean(oFF.OlapDataProviderQueryMetadataAnalyzer.CONDITIONS, queryModel.getConditionManager().hasConditions());
	result.putBoolean(oFF.OlapDataProviderQueryMetadataAnalyzer.EXCEPTIONS, queryModel.getExceptionManager().hasElements());
	result.putBoolean(oFF.OlapDataProviderQueryMetadataAnalyzer.PLANNING_QUERY, queryModel.isPlanning() || queryModel.getQueryManager().isDataEntryEnabled());
	result.putBoolean(oFF.OlapDataProviderQueryMetadataAnalyzer.EXIT_VARIABLES, oFF.XCollectionUtils.contains(variables, (_var) => {
		return _var.isDynamicOrExitVariable();
	}));
	let dimTimeDepHierarchy = oFF.PrFactory.createList().addAllStrings(oFF.XStream.of(dimensions).filter((dim6) => {
		return dim6.hasTimeDependentHierarchies();
	}).collect(oFF.XStreamCollector.toListOfString((dim7) => {
		return dim7.getName();
	})));
	let dimVersionDepHierarchy = oFF.PrFactory.createList().addAllStrings(oFF.XStream.of(dimensions).filter((dim8) => {
		return dim8.hasVersionDependentHierarchies();
	}).collect(oFF.XStreamCollector.toListOfString((dim9) => {
		return dim9.getName();
	})));
	let dimReadModeMaster = oFF.PrFactory.createList().addAllStrings(oFF.XStream.of(dimensions).filter((dim10) => {
		return dim10.supportsReadMode(oFF.QContextType.RESULT_SET, oFF.QMemberReadMode.MASTER);
	}).collect(oFF.XStreamCollector.toListOfString((dim11) => {
		return dim11.getName();
	})));
	let dimReadModeBooked = oFF.PrFactory.createList().addAllStrings(oFF.XStream.of(dimensions).filter((dim12) => {
		return dim12.supportsReadMode(oFF.QContextType.RESULT_SET, oFF.QMemberReadMode.BOOKED) || dim12.supportsReadMode(oFF.QContextType.RESULT_SET, oFF.QMemberReadMode.BOOKED_AND_SPACE) || dim12.supportsReadMode(oFF.QContextType.RESULT_SET, oFF.QMemberReadMode.BOOKED_AND_SPACE_AND_STATE);
	}).collect(oFF.XStreamCollector.toListOfString((dim13) => {
		return dim13.getName();
	})));
	result.put(oFF.OlapDataProviderQueryMetadataAnalyzer.DIMENSION_NAMES, oFF.PrFactory.createList().addAllStrings(queryModel.getDimensionNames()));
	result.put(oFF.OlapDataProviderQueryMetadataAnalyzer.DIM_WITH_TIME_DEPENDENT_HIERARCHY, dimTimeDepHierarchy);
	result.put(oFF.OlapDataProviderQueryMetadataAnalyzer.DIM_WITH_VERSION_DEPENDENT_HIERARCHY, dimVersionDepHierarchy);
	result.put(oFF.OlapDataProviderQueryMetadataAnalyzer.DIM_WITH_MASTER_READ_MODE, dimReadModeMaster);
	result.put(oFF.OlapDataProviderQueryMetadataAnalyzer.DIM_WITH_BOOKED_READ_MODE, dimReadModeBooked);
	let dimensionsInfo = oFF.PrFactory.createList();
	dimensionsInfo.addAll(oFF.XCollectionUtils.map(dimensions, this._getDimensionInfo.bind(this)));
	result.put(oFF.OlapDataProviderQueryMetadataAnalyzer.DIMENSIONS, dimensionsInfo);
	let variablesInfo = oFF.PrFactory.createList();
	variablesInfo.addAll(oFF.XCollectionUtils.map(variables, this._getVariableInfo.bind(this)));
	result.put(oFF.OlapDataProviderQueryMetadataAnalyzer.VARIABLES, variablesInfo);
	return result.getStringRepresentation();
};

oFF.OlapDataProviderFilterActionUtils = {

	canHaveChildren:function(element)
	{
			return oFF.notNull(element) && element.getOlapComponentType().isTypeOf(oFF.FilterComponentType.BOOLEAN_ALGEBRA);
	},
	canHaveField:function(element)
	{
			return oFF.OlapDataProviderFilterActionUtils.isOperation(element) || oFF.OlapDataProviderFilterActionUtils.isCartesianList(element);
	},
	canHaveHierarchy:function(element)
	{
			return oFF.OlapDataProviderFilterActionUtils.isOperation(element) || oFF.OlapDataProviderFilterActionUtils.isCartesianList(element);
	},
	canHaveOperation:function(element)
	{
			return oFF.OlapDataProviderFilterActionUtils.isCartesianList(element);
	},
	createFilterElement:function(context, type)
	{
			if (type === oFF.FilterComponentType.OPERATION)
		{
			return oFF.QFactory.createFilterCartesianElement(context);
		}
		if (type === oFF.FilterComponentType.CARTESIAN_LIST)
		{
			return oFF.QFactory.createFilterCartesianList(context);
		}
		if (type === oFF.FilterComponentType.CARTESIAN_PRODUCT)
		{
			return oFF.QFactory.createFilterCartesianProduct(context);
		}
		if (type === oFF.FilterComponentType.AND)
		{
			return oFF.QFactory.createFilterAnd(context);
		}
		if (type === oFF.FilterComponentType.OR)
		{
			return oFF.QFactory.createFilterOr(context);
		}
		if (type === oFF.FilterComponentType.NOT)
		{
			return oFF.QFactory.createFilterNot(context);
		}
		return null;
	},
	findElementByUniqueId:function(ancestor, uniqueId)
	{
			if (oFF.isNull(ancestor))
		{
			return null;
		}
		if (oFF.XString.isEqual(ancestor.getUniqueId(), uniqueId))
		{
			return ancestor;
		}
		let iterator = ancestor.getChildrenIterator();
		while (iterator.hasNext())
		{
			let child = iterator.next();
			let result = oFF.OlapDataProviderFilterActionUtils.findElementByUniqueId(child, uniqueId);
			if (oFF.notNull(result))
			{
				return result;
			}
		}
		return null;
	},
	findElementInLayerByUniqueId:function(dataProvider, layer, uniqueId)
	{
			let modelComponent = oFF.OlapDataProviderFilterActionUtils.getModelComponentOfLayer(dataProvider, layer);
		let rootElement = oFF.OlapDataProviderFilterActionUtils.getRootElement(modelComponent);
		return oFF.OlapDataProviderFilterActionUtils.findElementByUniqueId(rootElement, uniqueId);
	},
	getComponentTypeForLayer:function(dataProvider, layerName)
	{
			let queryModel = dataProvider.getQueryManager().getQueryModel();
		let modelComponent = oFF.OlapDataProviderFilterActionUtils.getModelComponentOfLayer(dataProvider, layerName);
		if (modelComponent === queryModel.getFilter().getDynamicFilter())
		{
			return oFF.OlapComponentType.FILTER_DYNAMIC;
		}
		if (modelComponent === queryModel.getFilter().getVisibilityFilter())
		{
			return oFF.OlapComponentType.FILTER_VISIBILITY;
		}
		return oFF.notNull(modelComponent) ? oFF.OlapComponentType.VARIABLE_CONTAINER : null;
	},
	getModelComponentOfLayer:function(dataProvider, layerName)
	{
			let queryModel = dataProvider.getQueryManager().getQueryModel();
		let lowerCaseLayerName = oFF.XString.toLowerCase(layerName);
		if (oFF.XString.isEqual(lowerCaseLayerName, oFF.XString.toLowerCase(oFF.FilterLayer.DYNAMIC.getName())))
		{
			return queryModel.getFilter().getDynamicFilter();
		}
		if (oFF.XString.isEqual(lowerCaseLayerName, oFF.XString.toLowerCase(oFF.FilterLayer.VISIBILITY.getName())))
		{
			return queryModel.getFilter().getVisibilityFilter();
		}
		let variables = dataProvider.getQueryManager().getInputEnabledAndNonTechnicalVariables();
		let variable = oFF.XStream.of(variables).filter((x) => {
			return x.getVariableType().isTypeOf(oFF.VariableType.DIMENSION_MEMBER_VARIABLE);
		}).find((y) => {
			return oFF.XString.isEqual(lowerCaseLayerName, oFF.XString.toLowerCase(y.getName()));
		});
		return variable.orElse(null);
	},
	getRootElement:function(modelComponent)
	{
			if (oFF.isNull(modelComponent))
		{
			return null;
		}
		if (modelComponent.getOlapComponentType() === oFF.OlapComponentType.FILTER_EXPRESSION)
		{
			return modelComponent.getFilterRootElement();
		}
		if (modelComponent.getOlapComponentType() === oFF.VariableType.DIMENSION_MEMBER_VARIABLE)
		{
			return modelComponent.getMemberFilter();
		}
		return null;
	},
	getRootElementOfLayer:function(dataProvider, layerName)
	{
			return oFF.OlapDataProviderFilterActionUtils.getRootElement(oFF.OlapDataProviderFilterActionUtils.getModelComponentOfLayer(dataProvider, layerName));
	},
	isCartesianList:function(element)
	{
			return oFF.notNull(element) && element.getOlapComponentType().isTypeOf(oFF.FilterComponentType.CARTESIAN_LIST);
	},
	isOperation:function(element)
	{
			return oFF.notNull(element) && element.getOlapComponentType().isTypeOf(oFF.FilterComponentType.OPERATION);
	}
};

oFF.OlapDataProviderLifecycleUtils = {

};

oFF.OlapDataProviderVersionParameters = function() {};
oFF.OlapDataProviderVersionParameters.prototype = new oFF.XObject();
oFF.OlapDataProviderVersionParameters.prototype._ff_c = "OlapDataProviderVersionParameters";

oFF.OlapDataProviderVersionParameters.createFromList = function(parameters)
{
	let converter = oFF.OdpActionParameterConverter.create();
	let obj = new oFF.OlapDataProviderVersionParameters();
	obj.m_versionId = converter.toInteger(parameters.get(0));
	obj.m_sharedVersion = converter.toBoolean(parameters.get(1), false);
	obj.m_versionOwner = parameters.get(2);
	obj.m_description = parameters.get(3);
	return obj;
};
oFF.OlapDataProviderVersionParameters.createParameters = function(versionId, sharedVersion, versionOwner, description)
{
	let obj = new oFF.OlapDataProviderVersionParameters();
	obj.m_versionId = versionId;
	obj.m_sharedVersion = sharedVersion;
	obj.m_versionOwner = versionOwner;
	obj.m_description = description;
	return obj;
};
oFF.OlapDataProviderVersionParameters.prototype.m_description = null;
oFF.OlapDataProviderVersionParameters.prototype.m_sharedVersion = false;
oFF.OlapDataProviderVersionParameters.prototype.m_versionId = 0;
oFF.OlapDataProviderVersionParameters.prototype.m_versionOwner = null;
oFF.OlapDataProviderVersionParameters.prototype.convertToParameterList = function()
{
	let converter = oFF.OdpActionParameterConverter.create();
	let parameters = oFF.XList.create();
	parameters.add(converter.fromInteger(this.m_versionId));
	parameters.add(converter.fromBoolean(this.m_sharedVersion));
	parameters.add(this.m_versionOwner);
	parameters.add(this.m_description);
	return parameters;
};
oFF.OlapDataProviderVersionParameters.prototype.getDescription = function()
{
	return this.m_description;
};
oFF.OlapDataProviderVersionParameters.prototype.getVersionId = function()
{
	return this.m_versionId;
};
oFF.OlapDataProviderVersionParameters.prototype.getVersionOwner = function()
{
	return this.m_versionOwner;
};
oFF.OlapDataProviderVersionParameters.prototype.isSharedVersion = function()
{
	return this.m_sharedVersion;
};

oFF.OlapDataProviderMemberUtil = {

	getMemberNames:function(dimension)
	{
			let structureMembers = dimension.getAllStructureMembers().getValuesAsReadOnlyList();
		let memberList = oFF.XList.create();
		for (let i = 0; i < structureMembers.size(); i++)
		{
			memberList.add(structureMembers.get(i).getName());
		}
		memberList.sortByDirection(oFF.XSortDirection.ASCENDING);
		return memberList;
	}
};

oFF.OdpVizActionVizDefinition = function() {};
oFF.OdpVizActionVizDefinition.prototype = new oFF.XObject();
oFF.OdpVizActionVizDefinition.prototype._ff_c = "OdpVizActionVizDefinition";

oFF.OdpVizActionVizDefinition.createDefinition = function(vizName, vizType, protocolType, chartType)
{
	let obj = new oFF.OdpVizActionVizDefinition();
	obj.setupExt(vizName, vizType, protocolType, chartType);
	return obj;
};
oFF.OdpVizActionVizDefinition.createDefinitionFromParameterList = function(dataProvider, parameters)
{
	let converter = oFF.OdpActionParameterConverter.create();
	let vizName = parameters.get(0);
	let vizType = converter.toVisualizationType(parameters.get(1));
	let protocolBindingType = parameters.size() >= 3 ? converter.toProtocolBindingType(parameters.get(2)) : null;
	let chartType = parameters.size() >= 4 ? converter.toChartType(parameters.get(3)) : null;
	return oFF.OdpVizActionVizDefinition.createDefinition(vizName, vizType, protocolBindingType, chartType);
};
oFF.OdpVizActionVizDefinition.prototype.m_chartType = null;
oFF.OdpVizActionVizDefinition.prototype.m_protocolType = null;
oFF.OdpVizActionVizDefinition.prototype.m_vizName = null;
oFF.OdpVizActionVizDefinition.prototype.m_vizType = null;
oFF.OdpVizActionVizDefinition.prototype._applyChartType = function(definition, vizType, chartType)
{
	if (oFF.notNull(chartType) && vizType === oFF.VisualizationType.CHART && oFF.notNull(definition))
	{
		let chartDefinition = definition;
		chartDefinition.getChartSetting().setChartType(chartType);
	}
};
oFF.OdpVizActionVizDefinition.prototype.convertToFireflyDefinition = function(vizManager)
{
	let definition = vizManager.getOrCreateVisualisationDefinition(this.m_vizName, this.m_protocolType, this.m_vizType.getSemanticBindingType());
	this._applyChartType(definition, this.m_vizType, this.m_chartType);
	return definition;
};
oFF.OdpVizActionVizDefinition.prototype.convertToParameterList = function()
{
	let converter = oFF.OdpActionParameterConverter.create();
	let parameters = oFF.XList.create();
	parameters.add(this.m_vizName);
	parameters.add(converter.fromVisualizationType(this.m_vizType));
	parameters.add(converter.fromProtocolBindingType(this.m_protocolType));
	parameters.add(converter.fromChartType(this.m_chartType));
	return parameters;
};
oFF.OdpVizActionVizDefinition.prototype.convertToStructure = function()
{
	let vizJson = oFF.PrFactory.createStructure();
	vizJson.putString(oFF.OlapDataProviderConfiguration.VIZ_NAME, this.m_vizName);
	vizJson.putStringNotNull(oFF.OlapDataProviderConfiguration.VIZ_TYPE, oFF.DfNameObject.getSafeName(this.m_vizType));
	vizJson.putStringNotNull(oFF.OlapDataProviderConfiguration.VIZ_PROTOCOL, oFF.DfNameObject.getSafeName(this.m_protocolType));
	vizJson.putStringNotNull(oFF.OlapDataProviderConfiguration.VIZ_CHART_TYPE, oFF.DfNameObject.getSafeName(this.m_chartType));
	return vizJson;
};
oFF.OdpVizActionVizDefinition.prototype.getChartType = function()
{
	return this.m_chartType;
};
oFF.OdpVizActionVizDefinition.prototype.getProtocolType = function()
{
	return this.m_protocolType;
};
oFF.OdpVizActionVizDefinition.prototype.getVizName = function()
{
	return this.m_vizName;
};
oFF.OdpVizActionVizDefinition.prototype.getVizType = function()
{
	return this.m_vizType;
};
oFF.OdpVizActionVizDefinition.prototype.setupExt = function(vizName, vizType, protocolType, chartType)
{
	this.m_vizName = vizName;
	this.m_vizType = vizType;
	this.m_protocolType = oFF.notNull(protocolType) ? protocolType : (oFF.notNull(this.m_vizType) ? this.m_vizType.getDefaultProtocolBindingType() : null);
	this.m_chartType = oFF.notNull(chartType) ? chartType : (oFF.notNull(this.m_vizType) ? this.m_vizType.getDefaultChartType() : null);
};

oFF.OdpStringMultiAction = function() {};
oFF.OdpStringMultiAction.prototype = new oFF.XObject();
oFF.OdpStringMultiAction.prototype._ff_c = "OdpStringMultiAction";

oFF.OdpStringMultiAction.prototype.m_parameters = null;
oFF.OdpStringMultiAction.prototype.getParameters = function()
{
	if (oFF.isNull(this.m_parameters))
	{
		this.m_parameters = oFF.XList.create();
	}
	return this.m_parameters;
};
oFF.OdpStringMultiAction.prototype.releaseObject = function()
{
	oFF.XObjectExt.release(this.m_parameters);
	oFF.XObject.prototype.releaseObject.call( this );
};

oFF.OdpStringMultiActionCollection = function() {};
oFF.OdpStringMultiActionCollection.prototype = new oFF.XObject();
oFF.OdpStringMultiActionCollection.prototype._ff_c = "OdpStringMultiActionCollection";

oFF.OdpStringMultiActionCollection.create = function(dps)
{
	let obj = new oFF.OdpStringMultiActionCollection();
	obj.m_dps = dps;
	return obj;
};
oFF.OdpStringMultiActionCollection.prototype.m_dps = null;
oFF.OdpStringMultiActionCollection.prototype.executeActionByName = function(actionName, parameters)
{
	let list = oFF.XPromiseList.create();
	for (let i = 0; i < this.m_dps.size(); i++)
	{
		list.add(this.m_dps.get(i).executeActionByName(actionName, parameters));
	}
	let all = oFF.XPromise.allSettled(list);
	let retprom = all.onThenExt((res) => {
		let ret = res.size() > 0 ? res.get(res.size() - 1) : null;
		return ret;
	});
	return retprom;
};
oFF.OdpStringMultiActionCollection.prototype.hasAction = function(actionName)
{
	for (let i = 0; i < this.m_dps.size(); i++)
	{
		if (!this.m_dps.get(i).hasAction(actionName))
		{
			return false;
		}
	}
	return true;
};
oFF.OdpStringMultiActionCollection.prototype.releaseObject = function()
{
	oFF.XObjectExt.release(this.m_dps);
	oFF.XObject.prototype.releaseObject.call( this );
};

oFF.OdpStringMultiActionContext = function() {};
oFF.OdpStringMultiActionContext.prototype = new oFF.XObject();
oFF.OdpStringMultiActionContext.prototype._ff_c = "OdpStringMultiActionContext";

oFF.OdpStringMultiActionContext.create = function(env, collection)
{
	let obj = new oFF.OdpStringMultiActionContext();
	obj.m_environment = oFF.XEnvironment.createCopy(env);
	obj.m_collection = collection;
	return obj;
};
oFF.OdpStringMultiActionContext.prototype.m_answers = 0;
oFF.OdpStringMultiActionContext.prototype.m_collection = null;
oFF.OdpStringMultiActionContext.prototype.m_environment = null;
oFF.OdpStringMultiActionContext.prototype.getActions = function()
{
	return this.m_collection;
};
oFF.OdpStringMultiActionContext.prototype.getEnvironment = function()
{
	return this.m_environment;
};
oFF.OdpStringMultiActionContext.prototype.pushResult = function(sres)
{
	for (let i = this.m_answers; i > 0; i--)
	{
		this.m_environment.setVariable(oFF.XStringUtils.concatenateWithInt("ans", i), this.m_environment.getVariable(oFF.XStringUtils.concatenateWithInt("ans", i - 1)));
	}
	this.m_environment.setVariable("ans0", sres);
	this.m_environment.setVariable("ans", sres);
	if (this.m_answers < 10)
	{
		this.m_answers++;
	}
};
oFF.OdpStringMultiActionContext.prototype.releaseObject = function()
{
	oFF.XObjectExt.release(this.m_environment);
	oFF.XObject.prototype.releaseObject.call( this );
};

oFF.OdpStringMultiActionJsonParser = function() {};
oFF.OdpStringMultiActionJsonParser.prototype = new oFF.XObject();
oFF.OdpStringMultiActionJsonParser.prototype._ff_c = "OdpStringMultiActionJsonParser";

oFF.OdpStringMultiActionJsonParser.prototype.parse = function(source, contexts)
{
	let rcontexts = source.getStructureByKey("contexts");
	let i;
	let j;
	if (oFF.notNull(rcontexts))
	{
		let keys = rcontexts.getKeysAsReadOnlyList();
		for (i = 0; i < keys.size(); i++)
		{
			let rdps = rcontexts.getListByKey(keys.get(i));
			let dps = oFF.XList.create();
			for (j = 0; j < rdps.size(); j++)
			{
				dps.add(contexts.getByKey(rdps.getStringAt(j)));
			}
			contexts.put(keys.get(i), oFF.OdpStringMultiActionCollection.create(dps));
		}
	}
	let commands = oFF.OdpStringMultiActionSequence.create();
	let rcommands = source.getListByKey("commands");
	for (i = 0; i < rcommands.size(); i++)
	{
		let rcommand = rcommands.getStructureAt(i);
		let rname = rcommand.getStringByKey("name");
		let rparameters = rcommand.getListByKey("parameters");
		let dot = oFF.XString.indexOf(rname, ".");
		let command = oFF.OdpStringMultiActionCall.createActionCall(dot !== -1 ? oFF.XString.substring(rname, 0, dot) : "default", dot !== -1 ? oFF.XString.substring(rname, dot + 1, -1) : rname);
		for (j = 0; j < rparameters.size(); j++)
		{
			command.getParameters().add(oFF.OdpStringMultiActionStringLiteral.create(rparameters.getStringAt(j)));
		}
		commands.getParameters().add(command);
	}
	return commands;
};

oFF.OdpStringMultiActionParser = function() {};
oFF.OdpStringMultiActionParser.prototype = new oFF.XObject();
oFF.OdpStringMultiActionParser.prototype._ff_c = "OdpStringMultiActionParser";

oFF.OdpStringMultiActionParser.prototype.autoComplete = function(source, cursor, fcompletion, scompletion)
{
	let pos = 0;
	let symbol = "";
	let symbols = "(,);\"' \n\r\t";
	let inDoubleQuotes = false;
	let inSingleQuotes = false;
	let seq = oFF.OdpStringMultiActionSequence.create();
	let actions = oFF.XList.create();
	let ops = oFF.XList.create();
	for (pos = 0; pos < oFF.XString.size(source); pos++)
	{
		let next = this.indexOfAnyFrom(source, inDoubleQuotes ? "\"" : inSingleQuotes ? "'" : symbols, pos);
		if (next !== pos)
		{
			if (!inDoubleQuotes && !inSingleQuotes)
			{
				symbol = oFF.XString.substring(source, pos, next);
				if (pos <= cursor && (cursor <= next || next === -1))
				{
					fcompletion(ops, oFF.XStringValue.create(symbol));
					return;
				}
			}
			else
			{
				symbol = oFF.XStringUtils.concatenate2(symbol, oFF.XString.substring(source, pos, next));
				if (pos <= cursor && (cursor <= next || next === -1))
				{
					scompletion(ops, oFF.XStringValue.create(symbol), oFF.XBooleanValue.create(inSingleQuotes));
					return;
				}
			}
		}
		if (next === -1)
		{
			break;
		}
		pos = next;
		let c = oFF.XString.getCharAt(source, pos);
		if (c === oFF.XString.getCharAt(symbols, 4))
		{
			if (inDoubleQuotes && pos + 1 < oFF.XString.size(source) && c === oFF.XString.getCharAt(source, pos + 1))
			{
				symbol = oFF.XStringUtils.concatenate2(symbol, "\"");
			}
			else
			{
				inDoubleQuotes = !inDoubleQuotes;
				if (inDoubleQuotes)
				{
					symbol = "";
				}
				else
				{
					actions.add(oFF.OdpStringMultiActionStringLiteral.create(symbol));
				}
			}
		}
		else if (c === oFF.XString.getCharAt(symbols, 5))
		{
			if (inSingleQuotes && pos + 1 < oFF.XString.size(source) && c === oFF.XString.getCharAt(source, pos + 1))
			{
				symbol = oFF.XStringUtils.concatenate2(symbol, "'");
			}
			else
			{
				inSingleQuotes = !inSingleQuotes;
				if (inSingleQuotes)
				{
					symbol = "";
				}
				else
				{
					actions.add(oFF.OdpStringMultiActionStringLiteral.create(symbol));
				}
			}
		}
		else if (c === oFF.XString.getCharAt(symbols, 0))
		{
			let dot = oFF.XString.indexOf(symbol, ".");
			actions.add(null);
			ops.add(oFF.OdpStringMultiActionCall.createActionCall(dot !== -1 ? oFF.XString.substring(symbol, 0, dot) : "default", dot !== -1 ? oFF.XString.substring(symbol, dot + 1, -1) : symbol));
		}
		else if (c === oFF.XString.getCharAt(symbols, 1))
		{
			if (actions.size() === 0 || ops.size() === 0)
			{
				continue;
			}
			ops.get(ops.size() - 1).getParameters().add(actions.get(actions.size() - 1));
			actions.removeAt(actions.size() - 1);
		}
		else if (c === oFF.XString.getCharAt(symbols, 2))
		{
			if (actions.size() === 0 || ops.size() === 0)
			{
				continue;
			}
			if (actions.get(actions.size() - 1) !== null)
			{
				ops.get(ops.size() - 1).getParameters().add(actions.get(actions.size() - 1));
				actions.removeAt(actions.size() - 1);
				if (actions.size() === 0)
				{
					continue;
				}
			}
			actions.removeAt(actions.size() - 1);
			actions.add(ops.get(ops.size() - 1));
			ops.removeAt(ops.size() - 1);
		}
		else if (c === oFF.XString.getCharAt(symbols, 3))
		{
			if (ops.size() > 0)
			{
				ops.clear();
				actions.clear();
				continue;
			}
			if (actions.size() > 0)
			{
				seq.getParameters().add(actions.get(actions.size() - 1));
				actions.removeAt(actions.size() - 1);
			}
		}
	}
	if (actions.size() > 0)
	{
		seq.getParameters().add(actions.get(actions.size() - 1));
		actions.removeAt(actions.size() - 1);
	}
	if (pos <= cursor && cursor <= pos + 1)
	{
		if (inDoubleQuotes || inSingleQuotes)
		{
			scompletion(ops, oFF.XStringValue.create(symbol), oFF.XBooleanValue.create(inSingleQuotes));
		}
		else if (pos === 0 || oFF.XString.getCharAt(source, pos - 1) !== oFF.XString.getCharAt(symbols, 2) && oFF.XString.getCharAt(source, pos - 1) !== oFF.XString.getCharAt(symbols, 4) && oFF.XString.getCharAt(source, pos - 1) !== oFF.XString.getCharAt(symbols, 5))
		{
			fcompletion(ops, oFF.XStringValue.create(""));
			scompletion(ops, oFF.XStringValue.create(""), null);
		}
	}
};
oFF.OdpStringMultiActionParser.prototype.indexOfAnyFrom = function(source, chars, offset)
{
	for (let i = offset; i < oFF.XString.size(source); i++)
	{
		for (let j = 0; j < oFF.XString.size(chars); j++)
		{
			if (oFF.XString.getCharAt(source, i) === oFF.XString.getCharAt(chars, j))
			{
				return i;
			}
		}
	}
	return -1;
};
oFF.OdpStringMultiActionParser.prototype.parse = function(source)
{
	let errors = oFF.XList.create();
	let ret = this.parseWithError(source, errors);
	oFF.XObjectExt.release(errors);
	return ret;
};
oFF.OdpStringMultiActionParser.prototype.parseWithError = function(source, errors)
{
	let pos = 0;
	let symbol = "";
	let symbols = "(,);\"' \n\r\t";
	let inDoubleQuotes = false;
	let inSingleQuotes = false;
	let seq = oFF.OdpStringMultiActionSequence.create();
	let actions = oFF.XList.create();
	let ops = oFF.XList.create();
	for (pos = 0; pos < oFF.XString.size(source); pos++)
	{
		let next = this.indexOfAnyFrom(source, inDoubleQuotes ? "\"" : inSingleQuotes ? "'" : symbols, pos);
		if (next !== pos)
		{
			if (!inDoubleQuotes && !inSingleQuotes)
			{
				symbol = oFF.XString.substring(source, pos, next);
			}
			else
			{
				symbol = oFF.XStringUtils.concatenate2(symbol, oFF.XString.substring(source, pos, next));
			}
		}
		if (next === -1)
		{
			break;
		}
		pos = next;
		let c = oFF.XString.getCharAt(source, pos);
		if (c === oFF.XString.getCharAt(symbols, 4))
		{
			if (inDoubleQuotes && pos + 1 < oFF.XString.size(source) && c === oFF.XString.getCharAt(source, pos + 1))
			{
				symbol = oFF.XStringUtils.concatenate2(symbol, "\"");
			}
			else
			{
				inDoubleQuotes = !inDoubleQuotes;
				if (inDoubleQuotes)
				{
					symbol = "";
				}
				else
				{
					actions.add(oFF.OdpStringMultiActionStringLiteral.create(symbol));
				}
			}
		}
		else if (c === oFF.XString.getCharAt(symbols, 5))
		{
			if (inSingleQuotes && pos + 1 < oFF.XString.size(source) && c === oFF.XString.getCharAt(source, pos + 1))
			{
				symbol = oFF.XStringUtils.concatenate2(symbol, "'");
			}
			else
			{
				inSingleQuotes = !inSingleQuotes;
				if (inSingleQuotes)
				{
					symbol = "";
				}
				else
				{
					actions.add(oFF.OdpStringMultiActionStringLiteral.create(symbol));
				}
			}
		}
		else if (c === oFF.XString.getCharAt(symbols, 0))
		{
			if (oFF.XStringUtils.isNullOrEmpty(symbol))
			{
				errors.add(oFF.XError.create(oFF.XStringUtils.concatenateWithInt("Function call without name at pos ", pos)));
				continue;
			}
			let dot = oFF.XString.indexOf(symbol, ".");
			actions.add(null);
			ops.add(oFF.OdpStringMultiActionCall.createActionCall(dot !== -1 ? oFF.XString.substring(symbol, 0, dot) : "default", dot !== -1 ? oFF.XString.substring(symbol, dot + 1, -1) : symbol));
		}
		else if (c === oFF.XString.getCharAt(symbols, 1))
		{
			if (actions.get(actions.size() - 1) === null)
			{
				errors.add(oFF.XError.create(oFF.XStringUtils.concatenateWithInt("Closed more brackets than opened at pos ", pos)));
				continue;
			}
			ops.get(ops.size() - 1).getParameters().add(actions.get(actions.size() - 1));
			actions.removeAt(actions.size() - 1);
		}
		else if (c === oFF.XString.getCharAt(symbols, 2))
		{
			if (ops.size() === 0)
			{
				errors.add(oFF.XError.create(oFF.XStringUtils.concatenateWithInt("Closed more brackets than opened at pos ", pos)));
				continue;
			}
			if (actions.get(actions.size() - 1) !== null)
			{
				ops.get(ops.size() - 1).getParameters().add(actions.get(actions.size() - 1));
				actions.removeAt(actions.size() - 1);
			}
			actions.removeAt(actions.size() - 1);
			actions.add(ops.get(ops.size() - 1));
			ops.removeAt(ops.size() - 1);
		}
		else if (c === oFF.XString.getCharAt(symbols, 3))
		{
			if (ops.size() > 0)
			{
				errors.add(oFF.XError.create(oFF.XStringUtils.concatenateWithInt(oFF.XStringUtils.concatenate3("Unclosed function '", ops.get(ops.size() - 1).toString(), "' at pos "), pos)));
				ops.clear();
				actions.clear();
				continue;
			}
			if (actions.size() > 0)
			{
				seq.getParameters().add(actions.get(actions.size() - 1));
				actions.removeAt(actions.size() - 1);
			}
		}
	}
	if (actions.size() > 0)
	{
		seq.getParameters().add(actions.get(actions.size() - 1));
		actions.removeAt(actions.size() - 1);
	}
	if (inSingleQuotes)
	{
		errors.add(oFF.XError.create("Unclosed ' at the end of the script"));
	}
	else if (inDoubleQuotes)
	{
		errors.add(oFF.XError.create("Unclosed \" at the end of the script"));
	}
	if (ops.size() > 0)
	{
		errors.add(oFF.XError.create(oFF.XStringUtils.concatenate3("Unclosed function '", ops.get(ops.size() - 1).toString(), "' at the end of the script")));
	}
	if (errors.size() > 0)
	{
		return oFF.OdpStringMultiActionSyntaxError.create(errors.get(0));
	}
	return seq;
};

oFF.OlapDataProviderMetadataConfiguration = function() {};
oFF.OlapDataProviderMetadataConfiguration.prototype = new oFF.XObject();
oFF.OlapDataProviderMetadataConfiguration.prototype._ff_c = "OlapDataProviderMetadataConfiguration";

oFF.OlapDataProviderMetadataConfiguration.create = function()
{
	let obj = new oFF.OlapDataProviderMetadataConfiguration();
	obj.setupConfig();
	return obj;
};
oFF.OlapDataProviderMetadataConfiguration.prototype.LIGHTWEIGHT_METADATA_ENABLED = "Lightweight";
oFF.OlapDataProviderMetadataConfiguration.prototype.METADATA_CACHE_ENABLED = "CacheEnabled";
oFF.OlapDataProviderMetadataConfiguration.prototype.REQUIRED_DIMENSIONS = "RequiredDimensions";
oFF.OlapDataProviderMetadataConfiguration.prototype.m_configJson = null;
oFF.OlapDataProviderMetadataConfiguration.prototype.getRequiredDimensions = function()
{
	let dimConfig = this.m_configJson.getListByKey(this.REQUIRED_DIMENSIONS);
	let requiredDimension = oFF.XList.create();
	if (oFF.notNull(dimConfig))
	{
		oFF.XCollectionUtils.forEach(dimConfig.getValuesAsReadOnlyList(), (key) => {
			requiredDimension.add(key.toString());
		});
	}
	return requiredDimension;
};
oFF.OlapDataProviderMetadataConfiguration.prototype.isLightWeightMetadataEnabled = function()
{
	return this.m_configJson.getBooleanByKey(this.LIGHTWEIGHT_METADATA_ENABLED);
};
oFF.OlapDataProviderMetadataConfiguration.prototype.isMetadataCacheEnabled = function()
{
	return this.m_configJson.getBooleanByKey(this.METADATA_CACHE_ENABLED);
};
oFF.OlapDataProviderMetadataConfiguration.prototype.releaseObject = function()
{
	this.m_configJson = oFF.XObjectExt.release(this.m_configJson);
	oFF.XObject.prototype.releaseObject.call( this );
};
oFF.OlapDataProviderMetadataConfiguration.prototype.setLightWeightMetadataEnabled = function(lightWeightMetadataEnabled)
{
	this.m_configJson.putBoolean(this.LIGHTWEIGHT_METADATA_ENABLED, lightWeightMetadataEnabled);
};
oFF.OlapDataProviderMetadataConfiguration.prototype.setMetadataCacheEnabled = function(metadataCacheEnabled)
{
	this.m_configJson.putBoolean(this.METADATA_CACHE_ENABLED, metadataCacheEnabled);
};
oFF.OlapDataProviderMetadataConfiguration.prototype.setRequiredDimensions = function(requiredDimensions)
{
	let dimensions = this.m_configJson.putNewList(this.REQUIRED_DIMENSIONS);
	dimensions.addAllStrings(requiredDimensions);
};
oFF.OlapDataProviderMetadataConfiguration.prototype.setupConfig = function()
{
	this.setup();
	this.m_configJson = oFF.PrFactory.createStructure();
	this.setupDefaults();
};
oFF.OlapDataProviderMetadataConfiguration.prototype.setupDefaults = function()
{
	this.setLightWeightMetadataEnabled(false);
	this.setMetadataCacheEnabled(false);
};

oFF.OlapDataProviderCalcViewRPCHandlerListener = function() {};
oFF.OlapDataProviderCalcViewRPCHandlerListener.prototype = new oFF.XObject();
oFF.OlapDataProviderCalcViewRPCHandlerListener.prototype._ff_c = "OlapDataProviderCalcViewRPCHandlerListener";

oFF.OlapDataProviderCalcViewRPCHandlerListener.create = function(resolve, reject)
{
	let listener = new oFF.OlapDataProviderCalcViewRPCHandlerListener();
	listener.m_resolve = resolve;
	listener.m_reject = reject;
	return listener;
};
oFF.OlapDataProviderCalcViewRPCHandlerListener.prototype.m_reject = null;
oFF.OlapDataProviderCalcViewRPCHandlerListener.prototype.m_resolve = null;
oFF.OlapDataProviderCalcViewRPCHandlerListener.prototype.onRPCResponse = function(extResult, structure)
{
	if (!extResult.getErrors().hasElements() && extResult.getData() !== null)
	{
		this.m_resolve(structure);
		return;
	}
	this.m_reject(oFF.XError.create("Calculation View creation failed."));
};

oFF.OlapDataProviderInsightLoader = function() {};
oFF.OlapDataProviderInsightLoader.prototype = new oFF.XObject();
oFF.OlapDataProviderInsightLoader.prototype._ff_c = "OlapDataProviderInsightLoader";

oFF.OlapDataProviderInsightLoader.createLoader = function(dataProvider, insightDataSource)
{
	let obj = new oFF.OlapDataProviderInsightLoader();
	obj.m_dataProvider = dataProvider;
	obj.m_insightDataSource = insightDataSource;
	return obj;
};
oFF.OlapDataProviderInsightLoader.prototype.m_dataProvider = null;
oFF.OlapDataProviderInsightLoader.prototype.m_inaDataSource = null;
oFF.OlapDataProviderInsightLoader.prototype.m_insightDataSource = null;
oFF.OlapDataProviderInsightLoader.prototype.m_modelDataSource = null;
oFF.OlapDataProviderInsightLoader.prototype.m_repo = null;
oFF.OlapDataProviderInsightLoader.prototype.m_sfx = null;
oFF.OlapDataProviderInsightLoader.prototype.getDocument = function(jsonContent)
{
	if (jsonContent.containsKey(oFF.OlapApiSfxConstants.INA_REPO))
	{
		return oFF.XPromise.resolve(jsonContent);
	}
	return oFF.XPromise.create((resolve, reject) => {
		let cdata = jsonContent.getStructureByKey(oFF.OlapApiSfxConstants.CDATA);
		let content = cdata.getStructureByKey(oFF.OlapApiSfxConstants.CONTENT);
		let entities = content.getListByKey(oFF.OlapApiSfxConstants.ENTITIES);
		for (let i = 0; i < entities.size(); i++)
		{
			let entity = entities.getStructureAt(i);
			if (entity.containsKey(oFF.OlapApiSfxConstants.INA_REPO))
			{
				resolve(entity);
				return;
			}
		}
		reject(oFF.XError.create("could not find document in insight json"));
	});
};
oFF.OlapDataProviderInsightLoader.prototype.getModelDataSource = function()
{
	return this.m_modelDataSource;
};
oFF.OlapDataProviderInsightLoader.prototype.getModelNameFromDocument = function(document)
{
	return document.getStringByKey(oFF.OlapApiSfxConstants.MODEL);
};
oFF.OlapDataProviderInsightLoader.prototype.getQueryManagerDataSource = function()
{
	return this.m_inaDataSource;
};
oFF.OlapDataProviderInsightLoader.prototype.getRepo = function()
{
	return this.m_repo;
};
oFF.OlapDataProviderInsightLoader.prototype.getRepoFromDocument = function(document)
{
	return document.getStructureByKey(oFF.OlapApiSfxConstants.INA_REPO);
};
oFF.OlapDataProviderInsightLoader.prototype.getSfx = function()
{
	return this.m_sfx;
};
oFF.OlapDataProviderInsightLoader.prototype.handleFileContent = function(jsonContent)
{
	return this.getDocument(jsonContent).onThenPromise((document) => {
		this.m_repo = this.getRepoFromDocument(document);
		let inaImport = oFF.QInAImportFactory.createForRepository(this.m_dataProvider.getApplication(), null);
		this.m_inaDataSource = inaImport.importDataSource(this.m_repo);
		let modelName = this.getModelNameFromDocument(document);
		if (oFF.XStringUtils.isNotNullAndNotEmpty(modelName))
		{
			let modelDataSource = oFF.QFactory.createDataSource();
			modelDataSource.setObjectName(modelName);
			modelDataSource.setModelName(modelName);
			modelDataSource.setType(oFF.MetaObjectType.SFX);
			modelDataSource.setSystemName(this.m_insightDataSource.getSystemName());
			this.m_modelDataSource = modelDataSource;
			let modelLoader = oFF.OlapDataProviderSacModelLoader.createLoader(this.m_dataProvider, modelDataSource, null);
			let modelLoadPromise = modelLoader.load().onThen((empty) => {
				this.m_sfx = modelLoader.getSfx();
				this.m_inaDataSource = modelLoader.getQueryManagerDataSource();
			});
			if (!this.m_dataProvider.getConfig().isStrictModelDependencyOnInsights())
			{
				modelLoadPromise = modelLoadPromise.onCatch((err) => {
					let errorEvt = this.m_dataProvider.getEventing().getEmitterForError().newTypedEvent();
					errorEvt.addError(err);
					errorEvt.queue();
				});
			}
			return modelLoadPromise;
		}
		return oFF.XPromise.resolve(null);
	});
};
oFF.OlapDataProviderInsightLoader.prototype.load = function()
{
	let fileUri;
	let objectPath = oFF.XUri.createFromUrl(this.m_insightDataSource.getObjectName());
	if (objectPath.getProtocolType() !== null)
	{
		fileUri = objectPath;
	}
	else
	{
		let path = oFF.XPath.create();
		path.addChildDir(oFF.KernelConstants.DEFAULT_WIDGET_VFS_LOCATION);
		if (this.m_insightDataSource.getSystemName() !== null)
		{
			path.addChildDir(this.m_insightDataSource.getSystemName());
		}
		path.addChildPath(this.m_insightDataSource.getObjectName());
		fileUri = oFF.XUri.create();
		fileUri.setProtocolType(oFF.ProtocolType.VFS);
		fileUri.setPath(path.getPath());
	}
	let file = oFF.XFile.createByUri(this.m_dataProvider.getProcess(), fileUri);
	return oFF.XFilePromise.loadJsonStructure(file).onThenPromise(this.handleFileContent.bind(this)).onFinally(() => {
		oFF.XObjectExt.release(file);
	});
};
oFF.OlapDataProviderInsightLoader.prototype.releaseObject = function()
{
	this.m_dataProvider = null;
	this.m_insightDataSource = null;
	this.m_inaDataSource = null;
	this.m_sfx = null;
	oFF.XObject.prototype.releaseObject.call( this );
};

oFF.OlapDataProviderSacModelLoader = function() {};
oFF.OlapDataProviderSacModelLoader.prototype = new oFF.XObject();
oFF.OlapDataProviderSacModelLoader.prototype._ff_c = "OlapDataProviderSacModelLoader";

oFF.OlapDataProviderSacModelLoader.CLIB = "clib";
oFF.OlapDataProviderSacModelLoader.SYS = "/sys";
oFF.OlapDataProviderSacModelLoader.createLoader = function(dataProvider, modelDataSource, externalModelFile)
{
	let obj = new oFF.OlapDataProviderSacModelLoader();
	obj.m_dataProvider = dataProvider;
	obj.m_modelDataSource = modelDataSource;
	obj.m_externalModelFile = externalModelFile;
	return obj;
};
oFF.OlapDataProviderSacModelLoader.prototype.m_dataProvider = null;
oFF.OlapDataProviderSacModelLoader.prototype.m_externalModelFile = null;
oFF.OlapDataProviderSacModelLoader.prototype.m_inaDataSource = null;
oFF.OlapDataProviderSacModelLoader.prototype.m_modelDataSource = null;
oFF.OlapDataProviderSacModelLoader.prototype.m_sfx = null;
oFF.OlapDataProviderSacModelLoader.prototype.convertToSfx = function(jsonContent)
{
	if (oFF.OdpSacModelHandler.isFlexibleTimeDimensionModel(jsonContent))
	{
		return oFF.XPromise.reject(this.createUnsupportedModelTypeError());
	}
	let modelJson = jsonContent;
	if (modelJson.getStructureByKey(oFF.OlapApiSfxConstants.CDATA) === null)
	{
		modelJson = oFF.PrFactory.createStructure();
		modelJson.put(oFF.OlapApiSfxConstants.CDATA, jsonContent);
	}
	let modelContent = oFF.XContent.createJsonObjectContent(oFF.QModelFormat.SFX, modelJson);
	let docConverter = oFF.DocConverterFactory.createDocConverter(oFF.QModelFormat.SFX, oFF.QModelFormat.INA_REPOSITORY);
	let converterResult = docConverter.convert(this.m_dataProvider.getApplication(), modelContent, oFF.QModelFormat.INA_REPOSITORY);
	if (converterResult.hasErrors())
	{
		let error = oFF.MessageUtil.condenseMessagesToSingleError(converterResult);
		return oFF.XPromise.reject(error);
	}
	return oFF.XPromise.resolve(converterResult.getData().getJsonContent().asStructure());
};
oFF.OlapDataProviderSacModelLoader.prototype.createModelFile = function()
{
	if (oFF.notNull(this.m_externalModelFile))
	{
		let attributes = this.m_externalModelFile.getAttributesForChanges();
		attributes.putString(oFF.XFileAttribute.FILE_TYPE, oFF.OlapDataProviderFileType.SAC_MODEL.getPrimaryFileAttributeNodeType());
		attributes.putString(oFF.XFileAttribute.NODE_TYPE, oFF.OlapDataProviderFileType.SAC_MODEL.getPrimaryFileAttributeNodeType());
		return oFF.XPromise.resolve(this.m_externalModelFile);
	}
	let fileUri;
	let objectPath = oFF.XUri.createFromUrl(this.m_modelDataSource.getObjectName());
	if (objectPath.getProtocolType() !== null)
	{
		fileUri = objectPath;
	}
	else
	{
		let path = oFF.XPath.create();
		path.addChildDir(oFF.OlapDataProviderSacModelLoader.SYS);
		path.addChildDir(this.m_modelDataSource.getSystemName());
		path.addChildDir(oFF.OlapDataProviderSacModelLoader.CLIB);
		path.addChildPath(this.m_modelDataSource.getObjectName());
		fileUri = oFF.XUri.create();
		fileUri.setProtocolType(oFF.ProtocolType.VFS);
		fileUri.setPath(path.getPath());
	}
	fileUri.addQueryElement(oFF.XFileAttribute.FILE_TYPE, oFF.OlapDataProviderFileType.SAC_MODEL.getPrimaryFileAttributeNodeType());
	fileUri.addQueryElement(oFF.XFileAttribute.NODE_TYPE, oFF.OlapDataProviderFileType.SAC_MODEL.getPrimaryFileAttributeNodeType());
	let file = oFF.XFile.createByUri(this.m_dataProvider.getProcess(), fileUri);
	return oFF.XPromise.resolve(file);
};
oFF.OlapDataProviderSacModelLoader.prototype.createUnsupportedModelTypeError = function()
{
	let error = oFF.XError.create("unsupported model type");
	error.setErrorType(oFF.DataProviderErrorType.INVALID_MODEL_TYPE);
	return error;
};
oFF.OlapDataProviderSacModelLoader.prototype.getQueryManagerDataSource = function()
{
	return this.m_inaDataSource;
};
oFF.OlapDataProviderSacModelLoader.prototype.getSfx = function()
{
	return this.m_sfx;
};
oFF.OlapDataProviderSacModelLoader.prototype.handleSfx = function(sfxJson)
{
	if (oFF.isNull(sfxJson))
	{
		return oFF.XPromise.reject(oFF.XError.create("sfx was empty"));
	}
	this.m_sfx = sfxJson;
	let importer = oFF.QInAImportFactory.createForRepository(this.m_dataProvider.getApplication(), null);
	let inaDataSource = importer.importDataSource(this.m_sfx);
	if (oFF.XStringUtils.isNotNullAndNotEmpty(this.m_modelDataSource.getModelName()))
	{
		inaDataSource.setModelName(this.m_modelDataSource.getModelName());
	}
	else
	{
		inaDataSource.setModelName(this.m_modelDataSource.getObjectName());
	}
	if (oFF.XStringUtils.isNullOrEmpty(inaDataSource.getSystemName()))
	{
		inaDataSource.setSystemName(this.m_modelDataSource.getSystemName());
	}
	this.m_inaDataSource = inaDataSource;
	let systemLandscape = this.m_dataProvider.getProcess().getSystemLandscape();
	if (oFF.OdpSacModelHandler.isBPCModel(systemLandscape, this.m_inaDataSource) || oFF.OdpSacModelHandler.isUniverseModel(systemLandscape, this.m_inaDataSource))
	{
		return oFF.XPromise.reject(this.createUnsupportedModelTypeError());
	}
	return oFF.XPromise.resolve(null);
};
oFF.OlapDataProviderSacModelLoader.prototype.load = function()
{
	return this.createModelFile().onThenPromise(this.loadModelJson.bind(this)).onThenPromise(this.convertToSfx.bind(this)).onThenPromise(this.handleSfx.bind(this));
};
oFF.OlapDataProviderSacModelLoader.prototype.loadModelJson = function(file)
{
	return oFF.XPromise.create((resolve, reject) => {
		file.processLoad(this.m_dataProvider.getProcess().getDefaultSyncType(), oFF.XLambdaFileLoadedListener.create((fileResult, content) => {
			if (fileResult.hasErrors())
			{
				let error = oFF.MessageUtil.condenseMessagesToSingleError(fileResult);
				reject(error);
			}
			else if (oFF.isNull(content) || content.getJsonContent() === null || content.getJsonContent().asStructure() === null)
			{
				let msg = oFF.XStringUtils.concatenate2("no content could be loaded for model: ", this.m_modelDataSource.getFullQualifiedName());
				reject(oFF.XError.create(msg));
			}
			else
			{
				resolve(content.getJsonContent().asStructure());
			}
		}), null, oFF.CompressionType.NONE);
	});
};
oFF.OlapDataProviderSacModelLoader.prototype.releaseObject = function()
{
	this.m_dataProvider = null;
	this.m_modelDataSource = null;
	this.m_inaDataSource = null;
	this.m_sfx = null;
	this.m_externalModelFile = null;
	oFF.XObject.prototype.releaseObject.call( this );
};

oFF.OlapDataProviderEventBuffer = function() {};
oFF.OlapDataProviderEventBuffer.prototype = new oFF.XObject();
oFF.OlapDataProviderEventBuffer.prototype._ff_c = "OlapDataProviderEventBuffer";

oFF.OlapDataProviderEventBuffer.create = function(dataProvider)
{
	let obj = new oFF.OlapDataProviderEventBuffer();
	obj.setupExt(dataProvider);
	return obj;
};
oFF.OlapDataProviderEventBuffer.prototype.m_dataProvider = null;
oFF.OlapDataProviderEventBuffer.prototype.m_events = null;
oFF.OlapDataProviderEventBuffer.prototype.m_loopExecuted = null;
oFF.OlapDataProviderEventBuffer.prototype.m_paused = false;
oFF.OlapDataProviderEventBuffer.prototype.m_timeoutId = null;
oFF.OlapDataProviderEventBuffer.prototype.flush = function()
{
	oFF.XTimeout.clear(this.m_timeoutId);
	this.triggerExecution();
};
oFF.OlapDataProviderEventBuffer.prototype.getEventByType = function(eventType)
{
	return oFF.XCollectionUtils.findFirst(this.m_events, (evt) => {
		return evt.getEventType() === eventType;
	});
};
oFF.OlapDataProviderEventBuffer.prototype.getPendingEvents = function()
{
	return this.m_events;
};
oFF.OlapDataProviderEventBuffer.prototype.queueEvent = function(event)
{
	if (!this.m_paused && !event.isBuffered())
	{
		this.triggerExecutionWithEvents(oFF.XCollectionUtils.singletonList(event));
		return;
	}
	this.queueEventInternal(event);
	if (this.m_paused)
	{
		return;
	}
	let eventBufferTimeout = this.m_dataProvider.getConfig().getEventBufferTimeout();
	if (eventBufferTimeout <= 0)
	{
		this.triggerExecution();
		return;
	}
	oFF.XTimeout.clear(this.m_timeoutId);
	this.m_timeoutId = oFF.XTimeout.timeout(eventBufferTimeout, this.triggerExecution.bind(this));
};
oFF.OlapDataProviderEventBuffer.prototype.queueEventInternal = function(event)
{
	let oldEvent = this.getEventByType(event.getEventType());
	if (oFF.notNull(oldEvent) && oldEvent.canMerge())
	{
		oldEvent.merge(event);
		this.m_events.removeElement(oldEvent);
		this.m_events.add(oldEvent);
	}
	else
	{
		this.m_events.add(event);
	}
};
oFF.OlapDataProviderEventBuffer.prototype.releaseObject = function()
{
	oFF.XTimeout.clear(this.m_timeoutId);
	this.m_timeoutId = null;
	this.m_dataProvider = null;
	this.m_events = oFF.XObjectExt.release(this.m_events);
	oFF.XObject.prototype.releaseObject.call( this );
};
oFF.OlapDataProviderEventBuffer.prototype.setLoopExecuted = function(loopExecuted)
{
	this.m_loopExecuted = loopExecuted;
};
oFF.OlapDataProviderEventBuffer.prototype.setPaused = function(paused)
{
	if (this.m_paused !== paused)
	{
		this.m_paused = paused;
		if (this.m_paused)
		{
			oFF.XTimeout.clear(this.m_timeoutId);
		}
	}
	if (!paused)
	{
		this.flush();
	}
};
oFF.OlapDataProviderEventBuffer.prototype.setupExt = function(dataProvider)
{
	this.m_dataProvider = dataProvider;
	this.m_events = oFF.XList.create();
};
oFF.OlapDataProviderEventBuffer.prototype.triggerExecution = function()
{
	let events = this.m_events.createListCopy();
	this.m_events.clear();
	this.triggerExecutionWithEvents(events);
};
oFF.OlapDataProviderEventBuffer.prototype.triggerExecutionWithEvents = function(events)
{
	if (!oFF.XCollectionUtils.hasElements(events))
	{
		return;
	}
	let allEmitter = this.m_dataProvider.getEventing().getEmitterForAll();
	let allEvent = allEmitter.newTypedEvent();
	for (let i = 0; i < events.size(); i++)
	{
		let event = events.get(i);
		this.m_dataProvider.getLoggerBase().logEvent(event);
		this.m_dataProvider.getEventingBase().getListenerCollectionBaseForEventType(event.getEventType()).callListener(event);
		allEvent.addSubEvent(event);
	}
	this.m_dataProvider.getEventingBase().getListenerCollectionBaseForEventType(allEvent.getEventType()).callListener(allEvent);
	if (oFF.notNull(this.m_loopExecuted))
	{
		this.m_loopExecuted(events);
	}
};

oFF.OlapDataProviderActionCollectionRegistry = {

	s_actionCollectionClasses:null,
	getActionCollectionClass:function(actionName)
	{
			return oFF.OlapDataProviderActionCollectionRegistry.s_actionCollectionClasses.getByKey(actionName);
	},
	getAllActionCollectionClasses:function()
	{
			return oFF.OlapDataProviderActionCollectionRegistry.s_actionCollectionClasses.getValuesAsReadOnlyList();
	},
	registerCollectionByClass:function(pluginClass)
	{
			if (oFF.notNull(pluginClass))
		{
			try
			{
				let tmpInstance = pluginClass.newInstance(null);
				let actionName = tmpInstance.getName();
				if (!oFF.OlapDataProviderActionCollectionRegistry.s_actionCollectionClasses.containsKey(actionName))
				{
					oFF.OlapDataProviderActionCollectionRegistry.s_actionCollectionClasses.put(actionName, pluginClass);
				}
			}
			catch (e)
			{
				throw oFF.XException.createRuntimeException("Failed to register action class! Class might be invalid!");
			}
		}
	},
	staticSetup:function()
	{
			oFF.OlapDataProviderActionCollectionRegistry.s_actionCollectionClasses = oFF.XLinkedHashMapByString.create();
	}
};

oFF.OlapDataProviderActionRegistry = {

	s_actionClasses:null,
	getActionClass:function(actionName)
	{
			return oFF.OlapDataProviderActionRegistry.s_actionClasses.getByKey(actionName);
	},
	getAllActionClasses:function()
	{
			return oFF.OlapDataProviderActionRegistry.s_actionClasses;
	},
	registerActionByClass:function(actionClass)
	{
			if (oFF.notNull(actionClass))
		{
			try
			{
				let tmpInstance = actionClass.newInstance(null);
				let actionName = tmpInstance.getName();
				if (oFF.OlapDataProviderActionRegistry.s_actionClasses.containsKey(actionName))
				{
					let msg = oFF.XStringUtils.concatenate2("Failed to register action class! Class already exists: ", actionName);
					throw oFF.XException.createRuntimeException(msg);
				}
				oFF.OlapDataProviderActionRegistry.s_actionClasses.put(actionName, actionClass);
			}
			catch (e)
			{
				throw oFF.XException.createRuntimeException("Failed to register action class! Class might be invalid!");
			}
		}
	},
	staticSetup:function()
	{
			oFF.OlapDataProviderActionRegistry.s_actionClasses = oFF.XLinkedHashMapByString.create();
	}
};

oFF.OlapDataProviderActionValidator = function() {};
oFF.OlapDataProviderActionValidator.prototype = new oFF.XObject();
oFF.OlapDataProviderActionValidator.prototype._ff_c = "OlapDataProviderActionValidator";

oFF.OlapDataProviderActionValidator.create = function(dataProvider)
{
	let obj = new oFF.OlapDataProviderActionValidator();
	obj.setupExt(dataProvider);
	return obj;
};
oFF.OlapDataProviderActionValidator.prototype.m_dataProvider = null;
oFF.OlapDataProviderActionValidator.prototype.addAllErrors = function(messageManager, errors)
{
	if (!oFF.XCollectionUtils.hasElements(errors))
	{
		return;
	}
	oFF.XCollectionUtils.forEach(errors, (error) => {
		messageManager.addError(oFF.ErrorCodes.OTHER_ERROR, error.getText());
	});
};
oFF.OlapDataProviderActionValidator.prototype.applyDefaultValues = function(actionName, incomingParameters)
{
	let actionManifest = this.m_dataProvider.getActions().getActionManifest(actionName);
	if (oFF.isNull(actionManifest))
	{
		return incomingParameters;
	}
	let parametersWithDefaults = oFF.XList.create();
	let parameterDefinitions = actionManifest.getParameterList();
	for (let i = 0; i < parameterDefinitions.size(); i++)
	{
		let parameterDefinition = parameterDefinitions.get(i);
		if (i < incomingParameters.size() && incomingParameters.get(i) !== null)
		{
			parametersWithDefaults.add(incomingParameters.get(i));
		}
		else if (parameterDefinition.getDefaultValue() !== null)
		{
			parametersWithDefaults.add(parameterDefinition.getDefaultValue().getStringRepresentation());
		}
		else
		{
			return incomingParameters;
		}
	}
	return parametersWithDefaults;
};
oFF.OlapDataProviderActionValidator.prototype.setupExt = function(dataProvider)
{
	this.m_dataProvider = dataProvider;
};
oFF.OlapDataProviderActionValidator.prototype.validateParameters = function(actionName, parameters)
{
	let messageManager = oFF.MessageManagerSimple.createMessageManager();
	let actionManifest = this.m_dataProvider.getActions().getActionManifest(actionName);
	if (oFF.isNull(actionManifest))
	{
		messageManager.addWarning(oFF.ErrorCodes.OTHER_ERROR, oFF.XStringUtils.concatenate2("no manifest exists for action: ", actionName));
		return messageManager;
	}
	let parameterDefinitions = actionManifest.getParameterList();
	for (let i = 0; i < parameters.size(); i++)
	{
		if (i >= parameterDefinitions.size())
		{
			messageManager.addError(oFF.ErrorCodes.OTHER_ERROR, "more parameters provided than defined in the manifest");
			return messageManager;
		}
		let parameter = parameters.get(i);
		let parameterDefinition = parameterDefinitions.get(i);
		let errors = null;
		try
		{
			if (oFF.XObject.isOfClass(parameterDefinition, oFF.XClass.create(oFF.OdpDfActionProperty)))
			{
				let dpParameterDefinition = parameterDefinition;
				errors = dpParameterDefinition.validateWithDataProvider(this.m_dataProvider, parameter);
			}
			else
			{
				let element = oFF.PrUtils.deserialize(parameter);
				errors = parameterDefinition.validate(element);
			}
		}
		catch (t)
		{
			messageManager.addError(oFF.ErrorCodes.OTHER_ERROR, oFF.XException.getMessage(t));
		}
		this.addAllErrors(messageManager, errors);
	}
	return messageManager;
};

oFF.DataProviderFileRequestAdapter = function() {};
oFF.DataProviderFileRequestAdapter.prototype = new oFF.XObject();
oFF.DataProviderFileRequestAdapter.prototype._ff_c = "DataProviderFileRequestAdapter";

oFF.DataProviderFileRequestAdapter.create = function(callback)
{
	let adapter = new oFF.DataProviderFileRequestAdapter();
	adapter.callback = callback;
	return adapter;
};
oFF.DataProviderFileRequestAdapter.prototype.callback = null;
oFF.DataProviderFileRequestAdapter.prototype.onHttpFileProcessed = function(extResult, data, customIdentifier)
{
	this.callback(extResult);
};

oFF.OlapDataProviderActionManifestConstants = {

	CATEGORY_KEY:"Category",
	DESCRIPTION_KEY:"Description",
	DISPLAY_NAME_KEY:"DisplayName",
	NAME_KEY:"Name",
	PARAMETERS_KEY:"Parameters",
	REVIEW_DATE_KEY:"ReviewDate",
	STAGE_KEY:"Stage"
};

oFF.OlapDataProviderActionManifestLoader = function() {};
oFF.OlapDataProviderActionManifestLoader.prototype = new oFF.XObject();
oFF.OlapDataProviderActionManifestLoader.prototype._ff_c = "OlapDataProviderActionManifestLoader";

oFF.OlapDataProviderActionManifestLoader.MANIFESTS_RESOURCE_LOCATION = "/manifests/actions/";
oFF.OlapDataProviderActionManifestLoader.s_instance = null;
oFF.OlapDataProviderActionManifestLoader.getInstance = function()
{
	if (oFF.isNull(oFF.OlapDataProviderActionManifestLoader.s_instance))
	{
		oFF.OlapDataProviderActionManifestLoader.s_instance = new oFF.OlapDataProviderActionManifestLoader();
		oFF.OlapDataProviderActionManifestLoader.s_instance.setupLoader();
	}
	return oFF.OlapDataProviderActionManifestLoader.s_instance;
};
oFF.OlapDataProviderActionManifestLoader.prototype.m_resourceLoader = null;
oFF.OlapDataProviderActionManifestLoader.prototype.loadActionManifests = function()
{
	let parser = oFF.JsonParserFactory.newInstance();
	let resources = this.m_resourceLoader.loadResources();
	let registry = oFF.OlapDataProviderActionManifestRegistry.getInstance();
	oFF.XCollectionUtils.forEach(resources, (resource) => {
		let manifestJson = parser.parse(resource);
		let manifest = oFF.OlapDataProviderActionManifest.createByStructure(manifestJson);
		registry.registerActionManifest(manifest);
	});
	oFF.XObjectExt.release(parser);
};
oFF.OlapDataProviderActionManifestLoader.prototype.releaseObject = function()
{
	this.m_resourceLoader = oFF.XObjectExt.release(this.m_resourceLoader);
	oFF.OlapDataProviderActionManifestLoader.s_instance = null;
	oFF.XObject.prototype.releaseObject.call( this );
};
oFF.OlapDataProviderActionManifestLoader.prototype.setupLoader = function()
{
	this.m_resourceLoader = oFF.ResourceLoader.create(oFF.OlapDataProviderActionManifestLoader.MANIFESTS_RESOURCE_LOCATION);
};

oFF.OlapDataProviderActionManifestRegistry = function() {};
oFF.OlapDataProviderActionManifestRegistry.prototype = new oFF.XObject();
oFF.OlapDataProviderActionManifestRegistry.prototype._ff_c = "OlapDataProviderActionManifestRegistry";

oFF.OlapDataProviderActionManifestRegistry.s_instance = null;
oFF.OlapDataProviderActionManifestRegistry.getInstance = function()
{
	if (oFF.isNull(oFF.OlapDataProviderActionManifestRegistry.s_instance))
	{
		oFF.OlapDataProviderActionManifestRegistry.s_instance = new oFF.OlapDataProviderActionManifestRegistry();
		oFF.OlapDataProviderActionManifestRegistry.s_instance.setupRegistry();
	}
	return oFF.OlapDataProviderActionManifestRegistry.s_instance;
};
oFF.OlapDataProviderActionManifestRegistry.prototype.m_manifests = null;
oFF.OlapDataProviderActionManifestRegistry.prototype.getActionManifest = function(name)
{
	return this.m_manifests.getByKey(name);
};
oFF.OlapDataProviderActionManifestRegistry.prototype.getActionManifests = function()
{
	return this.m_manifests;
};
oFF.OlapDataProviderActionManifestRegistry.prototype.hasActionManifest = function(name)
{
	return this.m_manifests.containsKey(name);
};
oFF.OlapDataProviderActionManifestRegistry.prototype.registerActionManifest = function(manifest)
{
	this.m_manifests.put(manifest.getName(), manifest);
};
oFF.OlapDataProviderActionManifestRegistry.prototype.releaseObject = function()
{
	this.m_manifests = oFF.XCollectionUtils.releaseEntriesAndCollectionIfNotNull(this.m_manifests);
	oFF.OlapDataProviderActionManifestRegistry.s_instance = null;
	oFF.XObject.prototype.releaseObject.call( this );
};
oFF.OlapDataProviderActionManifestRegistry.prototype.setupRegistry = function()
{
	this.m_manifests = oFF.XHashMapByString.create();
};

oFF.OdpConfigurationSerializer = function() {};
oFF.OdpConfigurationSerializer.prototype = new oFF.XObject();
oFF.OdpConfigurationSerializer.prototype._ff_c = "OdpConfigurationSerializer";

oFF.OdpConfigurationSerializer.createSerializer = function(process)
{
	let obj = new oFF.OdpConfigurationSerializer();
	obj.m_process = process;
	return obj;
};
oFF.OdpConfigurationSerializer.prototype.m_process = null;
oFF.OdpConfigurationSerializer.prototype.deserializeConfig = function(structure)
{
	let config = oFF.OlapDataProviderConfiguration.createDefaultConfig(this.m_process, null);
	this.deserializeConfigTo(structure, config);
	return config;
};
oFF.OdpConfigurationSerializer.prototype.deserializeConfigTo = function(structure, config)
{
	if (oFF.isNull(structure))
	{
		return;
	}
	let configJson = oFF.OdpSerializationUtils.normalizeKeys(structure);
	let dataProviderName = configJson.getStringByKey(oFF.OdpSerializationConstants.CONFIG_DATA_PROVIDER_NAME);
	if (oFF.XStringUtils.isNotNullAndNotEmpty(dataProviderName))
	{
		config.setDataProviderName(dataProviderName);
	}
	if (configJson.containsKey(oFF.OdpSerializationConstants.CONFIG_FORCE_LOGGING_ENABLED))
	{
		let loggingEnabled = configJson.getBooleanByKey(oFF.OdpSerializationConstants.CONFIG_FORCE_LOGGING_ENABLED);
		config.setForceLoggingEnabled(loggingEnabled);
	}
	if (configJson.containsKey(oFF.OdpSerializationConstants.CONFIG_REPO_DELTA_FORMAT_ENABLED))
	{
		let deltaFormatEnabled = configJson.getBooleanByKey(oFF.OdpSerializationConstants.CONFIG_REPO_DELTA_FORMAT_ENABLED);
		config.setRepoDeltaEnabled(deltaFormatEnabled);
	}
	if (configJson.containsKey(oFF.OdpSerializationConstants.CONFIG_DATA_READ_ONLY))
	{
		let dataReadOnly = configJson.getBooleanByKey(oFF.OdpSerializationConstants.CONFIG_DATA_READ_ONLY);
		config.setDataReadOnly(dataReadOnly);
	}
	if (configJson.containsKey(oFF.OdpSerializationConstants.CONFIG_AUTO_SUBMIT_ENABLED))
	{
		let autoSubmit = configJson.getBooleanByKey(oFF.OdpSerializationConstants.CONFIG_AUTO_SUBMIT_ENABLED);
		config.setAutoSubmitEnabled(autoSubmit);
	}
	if (configJson.containsKey(oFF.OdpSerializationConstants.CONFIG_METADATA_CACHE_ENABLED))
	{
		let metadataCache = configJson.getBooleanByKey(oFF.OdpSerializationConstants.CONFIG_METADATA_CACHE_ENABLED);
		config.setMetadataCacheEnabled(metadataCache);
	}
	if (configJson.containsKey(oFF.OdpSerializationConstants.CONFIG_START_AS_CONNECTED))
	{
		let startAsConnected = configJson.getBooleanByKey(oFF.OdpSerializationConstants.CONFIG_START_AS_CONNECTED);
		config.setStartAsConnected(startAsConnected);
	}
	if (configJson.containsKey(oFF.OdpSerializationConstants.CONFIG_START_WITH_DEFAULT_HOOKS_ENABLED))
	{
		let defaultHooks = configJson.getBooleanByKey(oFF.OdpSerializationConstants.CONFIG_START_WITH_DEFAULT_HOOKS_ENABLED);
		config.setShouldStartWithDefaultHooks(defaultHooks);
	}
	if (configJson.containsKey(oFF.OdpSerializationConstants.CONFIG_LOAD_ACTION_MANIFESTS))
	{
		let loadManifests = configJson.getBooleanByKey(oFF.OdpSerializationConstants.CONFIG_LOAD_ACTION_MANIFESTS);
		config.setLoadingActionManifests(loadManifests);
	}
	if (configJson.containsKey(oFF.OdpSerializationConstants.CONFIG_ADD_TO_DATA_PROVIDER_POOL))
	{
		let addToDpPool = configJson.getBooleanByKey(oFF.OdpSerializationConstants.CONFIG_ADD_TO_DATA_PROVIDER_POOL);
		config.setShouldAddToDataProviderPool(addToDpPool);
	}
	if (configJson.containsKey(oFF.OdpSerializationConstants.CONFIG_EVENT_BUFFER_TIMEOUT))
	{
		let eventBufferTimeout = configJson.getIntegerByKey(oFF.OdpSerializationConstants.CONFIG_EVENT_BUFFER_TIMEOUT);
		config.setEventBufferTimeout(eventBufferTimeout);
	}
	if (configJson.containsKey(oFF.OdpSerializationConstants.CONFIG_DEFAULT_WAIT_TIMEOUT))
	{
		let defaultWaitTimeout = configJson.getIntegerByKey(oFF.OdpSerializationConstants.CONFIG_DEFAULT_WAIT_TIMEOUT);
		config.setDefaultWaitTimeout(defaultWaitTimeout);
	}
	let fillStrategy = configJson.getStringByKey(oFF.OdpSerializationConstants.CONFIG_VISUALIZATION_FILL_STRATEGY);
	config.setStartWithFillStrategy(oFF.OlapDataProviderVisualizationFillStrategy.lookup(fillStrategy));
	let semanticInfo = structure.getStructureByKey(oFF.OdpSerializationConstants.CONFIG_SEMANTIC_INFO);
	config.setSemanticInfo(semanticInfo);
	let connection = oFF.OlapDataProviderConnection.createDefaultConnection(this.m_process);
	connection.deserializeJson(configJson.getStructureByKey(oFF.OdpSerializationConstants.CONNECTION));
	config.setStartConnection(connection);
};
oFF.OdpConfigurationSerializer.prototype.releaseObject = function()
{
	this.m_process = null;
	oFF.XObject.prototype.releaseObject.call( this );
};
oFF.OdpConfigurationSerializer.prototype.serializeConfig = function(config)
{
	let structure = oFF.PrFactory.createStructure();
	let defaultConfig = oFF.OlapDataProviderConfiguration.createDefaultConfig(this.m_process, null);
	structure.putStringNotNullAndNotEmpty(oFF.OdpSerializationConstants.CONFIG_DATA_PROVIDER_NAME, config.getDataProviderName());
	if (config.isForceLoggingEnabled() !== defaultConfig.isForceLoggingEnabled())
	{
		structure.putBoolean(oFF.OdpSerializationConstants.CONFIG_FORCE_LOGGING_ENABLED, config.isForceLoggingEnabled());
	}
	if (config.isRepoDeltaEnabled() !== defaultConfig.isRepoDeltaEnabled())
	{
		structure.putBoolean(oFF.OdpSerializationConstants.CONFIG_REPO_DELTA_FORMAT_ENABLED, config.isRepoDeltaEnabled());
	}
	if (config.isDataReadOnly() !== defaultConfig.isDataReadOnly())
	{
		structure.putBoolean(oFF.OdpSerializationConstants.CONFIG_DATA_READ_ONLY, config.isDataReadOnly());
	}
	if (config.isAutoSubmitEnabled() !== defaultConfig.isAutoSubmitEnabled())
	{
		structure.putBoolean(oFF.OdpSerializationConstants.CONFIG_AUTO_SUBMIT_ENABLED, config.isAutoSubmitEnabled());
	}
	if (config.isMetadataCacheEnabled() !== defaultConfig.isMetadataCacheEnabled())
	{
		structure.putBoolean(oFF.OdpSerializationConstants.CONFIG_METADATA_CACHE_ENABLED, config.isMetadataCacheEnabled());
	}
	if (config.isStartAsConnected() !== defaultConfig.isStartAsConnected())
	{
		structure.putBoolean(oFF.OdpSerializationConstants.CONFIG_START_AS_CONNECTED, config.isStartAsConnected());
	}
	if (config.shouldStartWithDefaultHooks() !== defaultConfig.shouldStartWithDefaultHooks())
	{
		structure.putBoolean(oFF.OdpSerializationConstants.CONFIG_START_WITH_DEFAULT_HOOKS_ENABLED, config.shouldStartWithDefaultHooks());
	}
	if (config.isLoadingActionManifests() !== defaultConfig.isLoadingActionManifests())
	{
		structure.putBoolean(oFF.OdpSerializationConstants.CONFIG_LOAD_ACTION_MANIFESTS, config.isLoadingActionManifests());
	}
	if (config.shouldAddToDataProviderPool() !== defaultConfig.shouldAddToDataProviderPool())
	{
		structure.putBoolean(oFF.OdpSerializationConstants.CONFIG_ADD_TO_DATA_PROVIDER_POOL, config.shouldAddToDataProviderPool());
	}
	if (config.getEventBufferTimeout() !== defaultConfig.getEventBufferTimeout())
	{
		structure.putInteger(oFF.OdpSerializationConstants.CONFIG_EVENT_BUFFER_TIMEOUT, config.getEventBufferTimeout());
	}
	if (config.getDefaultWaitTimeout() !== defaultConfig.getDefaultWaitTimeout())
	{
		structure.putInteger(oFF.OdpSerializationConstants.CONFIG_DEFAULT_WAIT_TIMEOUT, config.getDefaultWaitTimeout());
	}
	let fillStrategy = config.getStartingFillStrategy();
	if (oFF.notNull(fillStrategy))
	{
		structure.putString(oFF.OdpSerializationConstants.CONFIG_VISUALIZATION_FILL_STRATEGY, fillStrategy.getName());
	}
	let connection = config.getOlapStartConnection();
	if (oFF.notNull(connection))
	{
		structure.put(oFF.OdpSerializationConstants.CONNECTION, connection.serializeJson());
	}
	structure.putIfNotNull(oFF.OdpSerializationConstants.CONFIG_SEMANTIC_INFO, config.getSemanticInfo());
	return structure;
};

oFF.OdpConnectionSerializer = function() {};
oFF.OdpConnectionSerializer.prototype = new oFF.XObject();
oFF.OdpConnectionSerializer.prototype._ff_c = "OdpConnectionSerializer";

oFF.OdpConnectionSerializer.createSerializer = function(process)
{
	let obj = new oFF.OdpConnectionSerializer();
	obj.m_process = process;
	return obj;
};
oFF.OdpConnectionSerializer.prototype.m_process = null;
oFF.OdpConnectionSerializer.prototype.deserializeConnection = function(structure)
{
	let connection = oFF.OlapDataProviderConnection.createDefaultConnection(this.m_process);
	this.deserializeConnectionTo(structure, connection);
	return connection;
};
oFF.OdpConnectionSerializer.prototype.deserializeConnectionTo = function(structure, connection)
{
	if (oFF.isNull(structure))
	{
		return;
	}
	let connectionJson = oFF.OdpSerializationUtils.normalizeKeys(structure);
	if (connectionJson.containsKey(oFF.OdpSerializationConstants.CONNECTION_USE_EXIT_VARIABLES_VALUES_FOR_SETUP))
	{
		let useExitVariables = connectionJson.getBooleanByKey(oFF.OdpSerializationConstants.CONNECTION_USE_EXIT_VARIABLES_VALUES_FOR_SETUP);
		connection.setUseExitVariableValuesForSetup(useExitVariables);
	}
	if (connectionJson.containsKey(oFF.OdpSerializationConstants.CONNECTION_START_WITH_AUTO_FETCH))
	{
		let startWithAutoFetch = connectionJson.getBooleanByKey(oFF.OdpSerializationConstants.CONNECTION_START_WITH_AUTO_FETCH);
		connection.setStartWithAutoFetch(startWithAutoFetch);
	}
	let rriName = connectionJson.getStringByKey(oFF.OdpSerializationConstants.CONNECTION_RRI_NAME);
	let rriValue = connectionJson.getStringByKey(oFF.OdpSerializationConstants.CONNECTION_RRI_VALUE);
	let dataSourceRepo = connectionJson.getStructureByKey(oFF.OdpSerializationConstants.CONNECTION_DATA_SOURCE_REPO);
	let format = connectionJson.getStringByKey(oFF.OdpSerializationConstants.CONNECTION_DATA_SOURCE_REPO_FORMAT);
	let dataSourceDef = connectionJson.getStructureByKey(oFF.OdpSerializationConstants.CONNECTION_DATA_SOURCE);
	if (oFF.isNull(dataSourceRepo) && oFF.notNull(dataSourceDef))
	{
		dataSourceRepo = oFF.PrFactory.createStructure();
		dataSourceRepo.put(oFF.OdpSerializationConstants.CONNECTION_DATA_SOURCE, dataSourceDef);
		format = oFF.QModelFormat.INA_REPOSITORY.getName();
	}
	if (oFF.notNull(dataSourceRepo))
	{
		let modelFormat = oFF.ContentType.lookup(format);
		let application = oFF.Application.getApplicationFromProcess(this.m_process);
		let importer = oFF.QInAImportFactory.create(application, modelFormat, null);
		let dataSource = importer.importDataSource(dataSourceRepo);
		connection.setDataSource(dataSource);
	}
	else
	{
		let dataSourceName = connectionJson.getStringByKey(oFF.OdpSerializationConstants.CONNECTION_DATA_SOURCE_FQN);
		if (oFF.notNull(dataSourceName))
		{
			connection.setDataSourceName(dataSourceName);
		}
	}
	let connectionDataSource = connection.getDataSource();
	if (oFF.notNull(connectionDataSource) && oFF.XStringUtils.isNotNullAndNotEmpty(rriName) && oFF.XStringUtils.isNotNullAndNotEmpty(rriValue))
	{
		connectionDataSource.setRriName(rriName);
		connectionDataSource.setRriValue(rriValue);
	}
	let systemName = connectionJson.getStringByKey(oFF.OdpSerializationConstants.CONNECTION_SYSTEM);
	if (oFF.notNull(systemName))
	{
		connection.setSystemName(systemName);
	}
	let visualizations = connectionJson.getListByKey(oFF.OdpSerializationConstants.CONNECTION_VISUALIZATIONS);
	connection.setVisualizations(oFF.OdpSerializationUtils.normalizeKeysInList(visualizations));
	let sfx = connectionJson.getStructureByKey(oFF.OdpSerializationConstants.CONNECTION_SFX);
	connection.setSfxJson(sfx);
	let repo = connectionJson.getStructureByKey(oFF.OdpSerializationConstants.CONNECTION_REPO);
	connection.setRepoJson(repo);
};
oFF.OdpConnectionSerializer.prototype.releaseObject = function()
{
	this.m_process = null;
	oFF.XObject.prototype.releaseObject.call( this );
};
oFF.OdpConnectionSerializer.prototype.serializeConnection = function(connection)
{
	let structure = oFF.PrFactory.createStructure();
	let defaultConnection = oFF.OlapDataProviderConnection.createDefaultConnection(this.m_process);
	if (connection.isUsingExitVariableValuesForSetup() !== defaultConnection.isUsingExitVariableValuesForSetup())
	{
		structure.putBoolean(oFF.OdpSerializationConstants.CONNECTION_USE_EXIT_VARIABLES_VALUES_FOR_SETUP, connection.isUsingExitVariableValuesForSetup());
	}
	if (connection.isStartWithAutoFetch() !== defaultConnection.isStartWithAutoFetch())
	{
		structure.putBoolean(oFF.OdpSerializationConstants.CONNECTION_START_WITH_AUTO_FETCH, connection.isStartWithAutoFetch());
	}
	let dataSource = connection.getDataSource();
	if (oFF.notNull(dataSource))
	{
		let application = oFF.Application.getApplicationFromProcess(this.m_process);
		let exporter = oFF.QInAExportFactory.create(application, oFF.QModelFormat.INA_REPOSITORY, null, null);
		let dataSourceElement = exporter.exportDataSource(dataSource, false);
		structure.put(oFF.OdpSerializationConstants.CONNECTION_DATA_SOURCE_REPO, dataSourceElement);
		structure.putString(oFF.OdpSerializationConstants.CONNECTION_DATA_SOURCE_REPO_FORMAT, oFF.QModelFormat.INA_REPOSITORY.getName());
	}
	let visualizations = connection.getVisualizations();
	if (oFF.XCollectionUtils.hasElements(visualizations))
	{
		structure.put(oFF.OdpSerializationConstants.CONNECTION_VISUALIZATIONS, visualizations);
	}
	let sfxJson = connection.getSfxJson();
	if (oFF.XCollectionUtils.hasElements(sfxJson))
	{
		structure.put(oFF.OdpSerializationConstants.CONNECTION_SFX, sfxJson);
	}
	let repoJson = connection.getRepoJson();
	if (oFF.XCollectionUtils.hasElements(repoJson))
	{
		structure.put(oFF.OdpSerializationConstants.CONNECTION_REPO, repoJson);
	}
	return structure;
};

oFF.OdpSerializationConstants = {

	CONFIG:"Configuration",
	CONFIG_ADD_TO_DATA_PROVIDER_POOL:"AddToDataProviderPool",
	CONFIG_AUTO_SUBMIT_ENABLED:"AutoSubmitEnabled",
	CONFIG_DATA_PROVIDER_NAME:"DataProviderName",
	CONFIG_DATA_READ_ONLY:"DataReadOnly",
	CONFIG_DEFAULT_WAIT_TIMEOUT:"DefaultWaitTimeout",
	CONFIG_EVENT_BUFFER_TIMEOUT:"EventBufferTimeout",
	CONFIG_FORCE_LOGGING_ENABLED:"ForceLoggingEnabled",
	CONFIG_LOAD_ACTION_MANIFESTS:"LoadActionManifests",
	CONFIG_METADATA_CACHE_ENABLED:"MetadataCacheEnabled",
	CONFIG_REPO_DELTA_FORMAT_ENABLED:"RepoDeltaFormatEnabled",
	CONFIG_SEMANTIC_INFO:"SemanticInfo",
	CONFIG_START_AS_CONNECTED:"StartAsConnected",
	CONFIG_START_WITH_DEFAULT_HOOKS_ENABLED:"StartWithDefaultHooksEnabled",
	CONFIG_VISUALIZATION_FILL_STRATEGY:"VisualizationFillStrategy",
	CONNECTION:"Connection",
	CONNECTION_DATA_SOURCE:"DataSource",
	CONNECTION_DATA_SOURCE_FQN:"DataSourceFullQualifiedName",
	CONNECTION_DATA_SOURCE_REPO:"DataSourceRepo",
	CONNECTION_DATA_SOURCE_REPO_FORMAT:"DataSourceRepoFormat",
	CONNECTION_REPO:"Repo",
	CONNECTION_RRI_NAME:"RriName",
	CONNECTION_RRI_VALUE:"RriValue",
	CONNECTION_SFX:"Sfx",
	CONNECTION_START_WITH_AUTO_FETCH:"StartWithAutoFetch",
	CONNECTION_SYSTEM:"SystemName",
	CONNECTION_USE_EXIT_VARIABLES_VALUES_FOR_SETUP:"UseExitVariableValuesForSetup",
	CONNECTION_VISUALIZATIONS:"Visualizations",
	INSIGHT_DATA_SOURCE:"dataSource",
	INSIGHT_INA_REPO:"inaRepo",
	INSIGHT_MODEL:"model",
	INSIGHT_SYSTEM:"system",
	PROPERTIES:"Properties",
	REPOSITORY:"Repository"
};

oFF.OdpSerializationUtils = {

	normalizeKeys:function(structure)
	{
			let copy = oFF.PrFactory.createStructure();
		oFF.XCollectionUtils.mapEntries(structure, (key, value) => {
			let firstLetter = oFF.XString.substring(key, 0, 1);
			let rest = oFF.XString.substring(key, 1, -1);
			let newKey = oFF.XStringUtils.concatenate2(oFF.XString.toUpperCase(firstLetter), rest);
			copy.put(newKey, value);
		});
		return copy;
	},
	normalizeKeysInList:function(list)
	{
			if (!oFF.XCollectionUtils.hasElements(list))
		{
			return list;
		}
		let copy = oFF.PrFactory.createList();
		for (let i = 0; i < list.size(); i++)
		{
			let structure = list.getStructureAt(i);
			copy.add(oFF.OdpSerializationUtils.normalizeKeys(structure));
		}
		return copy;
	}
};

oFF.OdpSacModelHandler = {

	DEFAULT_SYSTEM_NAME:"EHS",
	isBPCModel:function(systemLandscape, modelDataSource)
	{
			let systemDescription = systemLandscape.getSystemDescription(modelDataSource.getSystemName());
		if (oFF.isNull(systemDescription))
		{
			return false;
		}
		let systemType = systemDescription.getSystemType();
		return systemType.isTypeOf(oFF.SystemType.BPCE) || systemType.isTypeOf(oFF.SystemType.BPCS);
	},
	isFlexibleTimeDimensionModel:function(modelJson)
	{
			if (oFF.isNull(modelJson))
		{
			return false;
		}
		let modelContent = modelJson;
		if (modelJson.containsKey(oFF.OlapApiSfxConstants.CDATA))
		{
			modelContent = modelJson.getStructureByKey(oFF.OlapApiSfxConstants.CDATA);
		}
		if (modelContent.containsKey(oFF.OlapApiSfxConstants.DIMENSIONS))
		{
			let dimensions = modelContent.getListByKey(oFF.OlapApiSfxConstants.DIMENSIONS);
			let dimensionsSize = dimensions.size();
			let dimension;
			for (let i = 0; i < dimensionsSize; i++)
			{
				dimension = dimensions.get(i).asStructure();
				let isUserManaged = dimension.getBooleanByKey(oFF.OlapApiSfxConstants.IS_USER_MANAGED);
				let hasWeekPatternEnabled = dimension.getBooleanByKey(oFF.OlapApiSfxConstants.HAS_WEEK_PATTERN_ENABLED);
				let isTimeConfigEnablePattern = dimension.getBooleanByKey(oFF.OlapApiSfxConstants.IS_TIME_CONFIG_ENABLE_PATTERN);
				if (isUserManaged || hasWeekPatternEnabled || isTimeConfigEnablePattern)
				{
					return true;
				}
			}
		}
		return false;
	},
	isUniverseModel:function(systemLandscape, modelDataSource)
	{
			let systemDescription = systemLandscape.getSystemDescription(modelDataSource.getSystemName());
		if (oFF.isNull(systemDescription))
		{
			return false;
		}
		return systemDescription.getSystemType().isTypeOf(oFF.SystemType.UNV);
	}
};

oFF.OlapDataProviderUtil = {

	getOlapAllEvent:function(allEvt)
	{
			try
		{
			if (allEvt.getBasicDataProvider().getType() === oFF.DataProviderType.OLAP)
			{
				return allEvt;
			}
		}
		catch (t)
		{
			return null;
		}
		return null;
	},
	getOlapDataProvider:function(dataProvider)
	{
			try
		{
			if (oFF.notNull(dataProvider) && dataProvider.getType() === oFF.DataProviderType.OLAP)
			{
				return dataProvider;
			}
		}
		catch (t)
		{
			return null;
		}
		return null;
	}
};

oFF.OdpStringMultiActionSequence = function() {};
oFF.OdpStringMultiActionSequence.prototype = new oFF.OdpStringMultiAction();
oFF.OdpStringMultiActionSequence.prototype._ff_c = "OdpStringMultiActionSequence";

oFF.OdpStringMultiActionSequence.create = function()
{
	return new oFF.OdpStringMultiActionSequence();
};
oFF.OdpStringMultiActionSequence.prototype.evalParameters = function(context, params, i)
{
	if (i >= this.getParameters().size())
	{
		return oFF.XPromise.resolve(params);
	}
	return this.getParameters().get(i).execute(context).onThenPromise((res) => {
		params.add(res);
		return this.evalParameters(context, params, i + 1);
	});
};
oFF.OdpStringMultiActionSequence.prototype.execute = function(context)
{
	return this.evalParameters(context, oFF.XList.create(), 0).onThenExt((list) => {
		return context.getEnvironment().resolveString("${ans}");
	});
};

oFF.OdpStringMultiActionStringLiteral = function() {};
oFF.OdpStringMultiActionStringLiteral.prototype = new oFF.OdpStringMultiAction();
oFF.OdpStringMultiActionStringLiteral.prototype._ff_c = "OdpStringMultiActionStringLiteral";

oFF.OdpStringMultiActionStringLiteral.create = function(constant)
{
	let obj = new oFF.OdpStringMultiActionStringLiteral();
	obj.m_constant = constant;
	return obj;
};
oFF.OdpStringMultiActionStringLiteral.prototype.m_constant = null;
oFF.OdpStringMultiActionStringLiteral.prototype.execute = function(context)
{
	return oFF.XPromise.resolve(context.getEnvironment().resolveString(this.m_constant));
};
oFF.OdpStringMultiActionStringLiteral.prototype.toString = function()
{
	return this.m_constant;
};

oFF.OdpStringMultiActionSyntaxError = function() {};
oFF.OdpStringMultiActionSyntaxError.prototype = new oFF.OdpStringMultiAction();
oFF.OdpStringMultiActionSyntaxError.prototype._ff_c = "OdpStringMultiActionSyntaxError";

oFF.OdpStringMultiActionSyntaxError.create = function(err)
{
	let obj = new oFF.OdpStringMultiActionSyntaxError();
	obj.m_err = err;
	return obj;
};
oFF.OdpStringMultiActionSyntaxError.prototype.m_err = null;
oFF.OdpStringMultiActionSyntaxError.prototype.execute = function(context)
{
	return oFF.XPromise.reject(this.m_err);
};

oFF.OlapDataProviderConnection = function() {};
oFF.OlapDataProviderConnection.prototype = new oFF.XObject();
oFF.OlapDataProviderConnection.prototype._ff_c = "OlapDataProviderConnection";

oFF.OlapDataProviderConnection.createConnection = function(application)
{
	let obj = new oFF.OlapDataProviderConnection();
	obj.setupConfig(application.getProcess());
	return obj;
};
oFF.OlapDataProviderConnection.createConnectionFromJson = function(application, configJson)
{
	let obj = new oFF.OlapDataProviderConnection();
	obj.setupConfig(application.getProcess());
	obj.deserializeJson(configJson);
	return obj;
};
oFF.OlapDataProviderConnection.createDefaultConnection = function(process)
{
	let obj = new oFF.OlapDataProviderConnection();
	obj.setupConfig(process);
	return obj;
};
oFF.OlapDataProviderConnection.prototype.m_dataSource = null;
oFF.OlapDataProviderConnection.prototype.m_file = null;
oFF.OlapDataProviderConnection.prototype.m_process = null;
oFF.OlapDataProviderConnection.prototype.m_repo = null;
oFF.OlapDataProviderConnection.prototype.m_sfx = null;
oFF.OlapDataProviderConnection.prototype.m_startWithAutoFetch = false;
oFF.OlapDataProviderConnection.prototype.m_useExitVariableValuesForSetup = false;
oFF.OlapDataProviderConnection.prototype.m_visualizations = null;
oFF.OlapDataProviderConnection.prototype.createConnectionCopy = function()
{
	let cloneConnection = new oFF.OlapDataProviderConnection();
	cloneConnection.m_process = this.m_process;
	cloneConnection.m_visualizations = oFF.PrUtils.deepCopyElement(this.m_visualizations);
	cloneConnection.m_sfx = oFF.PrUtils.deepCopyElement(this.m_sfx);
	cloneConnection.m_repo = oFF.PrUtils.deepCopyElement(this.m_repo);
	cloneConnection.m_useExitVariableValuesForSetup = this.m_useExitVariableValuesForSetup;
	cloneConnection.m_startWithAutoFetch = this.m_startWithAutoFetch;
	if (oFF.notNull(this.m_dataSource))
	{
		let dataSource = oFF.QFactory.createDataSource();
		dataSource.copyFrom(this.m_dataSource, null);
		cloneConnection.m_dataSource = dataSource;
	}
	cloneConnection.m_file = this.m_file;
	return cloneConnection;
};
oFF.OlapDataProviderConnection.prototype.deserializeJson = function(configJson)
{
	let serializer = oFF.OdpConnectionSerializer.createSerializer(this.m_process);
	serializer.deserializeConnectionTo(configJson, this);
	oFF.XObjectExt.release(serializer);
};
oFF.OlapDataProviderConnection.prototype.getDataSource = function()
{
	return this.m_dataSource;
};
oFF.OlapDataProviderConnection.prototype.getDataSourceName = function()
{
	if (oFF.notNull(this.m_dataSource) && oFF.XStringUtils.isNotNullAndNotEmpty(this.m_dataSource.getFullQualifiedName()))
	{
		return this.m_dataSource.getFullQualifiedName();
	}
	if (oFF.notNull(this.m_file) && oFF.XStringUtils.isNotNullAndNotEmpty(this.m_file.getUrl()))
	{
		return this.m_file.getUrl();
	}
	return null;
};
oFF.OlapDataProviderConnection.prototype.getFile = function()
{
	return this.m_file;
};
oFF.OlapDataProviderConnection.prototype.getRepoJson = function()
{
	return this.m_repo;
};
oFF.OlapDataProviderConnection.prototype.getSfxJson = function()
{
	return this.m_sfx;
};
oFF.OlapDataProviderConnection.prototype.getSystemName = function()
{
	return oFF.notNull(this.m_dataSource) ? this.m_dataSource.getSystemName() : null;
};
oFF.OlapDataProviderConnection.prototype.getVisualizations = function()
{
	return this.m_visualizations;
};
oFF.OlapDataProviderConnection.prototype.isEmpty = function()
{
	return oFF.XStringUtils.isNullOrEmpty(this.getDataSourceName());
};
oFF.OlapDataProviderConnection.prototype.isStartWithAutoFetch = function()
{
	return this.m_startWithAutoFetch;
};
oFF.OlapDataProviderConnection.prototype.isUsingExitVariableValuesForSetup = function()
{
	return this.m_useExitVariableValuesForSetup;
};
oFF.OlapDataProviderConnection.prototype.releaseObject = function()
{
	this.m_process = null;
	this.m_dataSource = null;
	this.m_visualizations = null;
	this.m_sfx = null;
	this.m_repo = null;
	this.m_file = null;
	oFF.XObject.prototype.releaseObject.call( this );
};
oFF.OlapDataProviderConnection.prototype.serializeJson = function()
{
	let serializer = oFF.OdpConnectionSerializer.createSerializer(this.m_process);
	let result = serializer.serializeConnection(this);
	oFF.XObjectExt.release(serializer);
	return result;
};
oFF.OlapDataProviderConnection.prototype.setDataSource = function(dataSource)
{
	this.m_dataSource = dataSource;
};
oFF.OlapDataProviderConnection.prototype.setDataSourceName = function(dataSourceName)
{
	if (oFF.isNull(this.m_dataSource))
	{
		this.m_dataSource = oFF.QFactory.createDataSource();
	}
	this.m_dataSource.setFullQualifiedName(dataSourceName);
	if (oFF.XStringUtils.isNullOrEmpty(this.m_dataSource.getObjectName()))
	{
		this.m_dataSource = null;
	}
};
oFF.OlapDataProviderConnection.prototype.setFile = function(file)
{
	this.m_file = file;
};
oFF.OlapDataProviderConnection.prototype.setRepoJson = function(repoJson)
{
	this.m_repo = oFF.PrUtils.deepCopyElement(repoJson);
};
oFF.OlapDataProviderConnection.prototype.setSfxJson = function(sfxJson)
{
	this.m_sfx = oFF.PrUtils.deepCopyElement(sfxJson);
};
oFF.OlapDataProviderConnection.prototype.setStartWithAutoFetch = function(startWithAutoFetch)
{
	this.m_startWithAutoFetch = startWithAutoFetch;
};
oFF.OlapDataProviderConnection.prototype.setSystemName = function(systemName)
{
	if (oFF.isNull(this.m_dataSource))
	{
		this.m_dataSource = oFF.QFactory.createDataSource();
	}
	this.m_dataSource.setSystemName(systemName);
};
oFF.OlapDataProviderConnection.prototype.setUseExitVariableValuesForSetup = function(useExitVariableValuesForSetup)
{
	this.m_useExitVariableValuesForSetup = useExitVariableValuesForSetup;
};
oFF.OlapDataProviderConnection.prototype.setVisualizations = function(visualizations)
{
	this.m_visualizations = oFF.PrUtils.deepCopyElement(visualizations);
};
oFF.OlapDataProviderConnection.prototype.setupConfig = function(process)
{
	this.setup();
	this.m_process = process;
	this.setupDefaults();
};
oFF.OlapDataProviderConnection.prototype.setupDefaults = function()
{
	this.setVisualizations(oFF.PrFactory.createList());
	this.setStartWithAutoFetch(true);
};
oFF.OlapDataProviderConnection.prototype.toString = function()
{
	return oFF.XStringUtils.concatenate2("datasource: ", this.getDataSourceName());
};

oFF.OlapDataProviderConnector = function() {};
oFF.OlapDataProviderConnector.prototype = new oFF.XObject();
oFF.OlapDataProviderConnector.prototype._ff_c = "OlapDataProviderConnector";

oFF.OlapDataProviderConnector.addModelFormulaExceptionsToFormulaExceptionManager = function(queryModel)
{
	let fem = queryModel.getFormulaExceptionManager();
	if (oFF.notNull(fem))
	{
		oFF.XStream.of(fem.getAllModelFormulaExceptions()).filter((fe) => {
			return fe.isActive() && !fem.containsKey(oFF.DfNameObject.getSafeName(fe));
		}).forEach((afe) => {
			fem.add(afe);
		});
	}
};
oFF.OlapDataProviderConnector.create = function(dataProvider)
{
	let obj = new oFF.OlapDataProviderConnector();
	obj.setupExt(dataProvider);
	return obj;
};
oFF.OlapDataProviderConnector.defaultFinalizeQueryManager = function(dataProvider)
{
	let cmd = dataProvider.getQueryManager().getConvenienceCommands();
	let queryModel = cmd.getQueryModel();
	if (cmd.getModelCapabilities().supportsUniqueAxisProperties())
	{
		let uniqueAxisProperties = queryModel.getReturnedUniqueAxisProperties();
		let leadingStructure = queryModel.isLeadingStructureAccount() ? queryModel.getAccountDimension() : queryModel.getMeasureDimension();
		if (oFF.notNull(uniqueAxisProperties) && !oFF.XCollectionUtils.hasElements(uniqueAxisProperties.getRowProperties()) && !oFF.XCollectionUtils.hasElements(uniqueAxisProperties.getColumnProperties()) && oFF.notNull(leadingStructure))
		{
			cmd.toggleUniqueAxisProperties(null, oFF.UniqueAxisPropertyType.UNIT_INDEX, true);
			cmd.toggleUniqueAxisProperties(null, oFF.UniqueAxisPropertyType.NUMERIC_SHIFT, true);
			cmd.toggleUniqueAxisProperties(null, oFF.UniqueAxisPropertyType.CELL_VALUE_TYPES, true);
		}
	}
	oFF.OlapDataProviderConnector.addModelFormulaExceptionsToFormulaExceptionManager(queryModel);
	return null;
};
oFF.OlapDataProviderConnector.prototype.m_connection = null;
oFF.OlapDataProviderConnector.prototype.m_connectionPromise = null;
oFF.OlapDataProviderConnector.prototype.m_dataProvider = null;
oFF.OlapDataProviderConnector.prototype.m_defaultFinalizeQueryManagerId = null;
oFF.OlapDataProviderConnector.prototype.m_inaDataSource = null;
oFF.OlapDataProviderConnector.prototype.m_modelDataSource = null;
oFF.OlapDataProviderConnector.prototype.m_persistencyDataSource = null;
oFF.OlapDataProviderConnector.prototype.m_skipHooks = false;
oFF.OlapDataProviderConnector.prototype.activateAllDefaultHooks = function()
{
	this.activateDefaultFinalizeQueryManagerHook();
};
oFF.OlapDataProviderConnector.prototype.activateDefaultFinalizeQueryManagerHook = function()
{
	this.m_defaultFinalizeQueryManagerId = this.getHooks().getFinalizeQueryManagerHooks().addFunction(oFF.OlapDataProviderConnector.defaultFinalizeQueryManager);
};
oFF.OlapDataProviderConnector.prototype.applyFilterFromVariables = function(filters)
{
	let queryModel = this.m_dataProvider.getQueryManager().getQueryModel();
	let dynamicFilter = queryModel.getFilter().getDynamicFilter();
	let keys = filters.getKeysAsIterator();
	while (keys.hasNext())
	{
		let dimName = keys.next();
		let variableFilter = filters.getByKey(dimName);
		let dimension = queryModel.getDimensionByName(dimName);
		let cartesianList = dynamicFilter.getCartesianListWithDefault(dimension);
		cartesianList.deserializeFromElementExt(oFF.QModelFormat.INA_REPOSITORY, variableFilter.serializeToElement(oFF.QModelFormat.INA_REPOSITORY));
	}
};
oFF.OlapDataProviderConnector.prototype.applySemantics = function(correlationId)
{
	let semanticInfo = this.m_dataProvider.getConfig().getSemanticInfo();
	if (oFF.notNull(semanticInfo))
	{
		this.setVizVariablesForStructureDim(this.m_dataProvider.getQueryManager().getQueryModel().getMeasureDimension(), semanticInfo.getStructureByKey(oFF.DimensionType.MEASURE_STRUCTURE.getName()));
		this.setVizVariablesForStructureDim(this.m_dataProvider.getQueryManager().getQueryModel().getSecondaryCalculationDimension(), semanticInfo.getStructureByKey(oFF.DimensionType.SECONDARY_STRUCTURE.getName()));
	}
	return oFF.XPromise.resolve(null);
};
oFF.OlapDataProviderConnector.prototype.attemptCalcViewAndQueryManagerCreation = function(queryServiceConfig, correlationId)
{
	return this.getXSAQuery(queryServiceConfig).onThenPromise((xsaStructure) => {
		return this.createCalcView(queryServiceConfig, xsaStructure);
	}).onThenPromise((empty) => {
		return this.createQueryManager(queryServiceConfig, correlationId, false);
	});
};
oFF.OlapDataProviderConnector.prototype.createCalcView = function(queryServiceConfig, xsaStructure)
{
	return oFF.XPromise.create((resolve, reject) => {
		let config = this.m_dataProvider.getConfig();
		let listener = oFF.OlapDataProviderCalcViewRPCHandlerListener.create(resolve, reject);
		let connectionName = queryServiceConfig.getSystemDescription().getName();
		let systemDescription = config.getApplication().getSystemLandscape().getSystemDescription(connectionName);
		let inaPath = systemDescription.getServiceProperties(oFF.SystemServices.INA_SERVICE).getByKey(oFF.ConnectionParameters.PATH);
		let pathExtension = oFF.XStringUtils.concatenate2(inaPath, "/sap/fpa/remote/qbuilder/query");
		let rpchandler = oFF.OlapDataProviderCalcViewRPCHandler.create(config.getApplication(), connectionName, xsaStructure.getStringByKey("queryInfo"), pathExtension, queryServiceConfig.getDataSource().getContext(), null, null);
		rpchandler.processSyncAction(config.getProcess().getDefaultSyncType(), listener, null);
	});
};
oFF.OlapDataProviderConnector.prototype.createQueryManager = function(queryServiceConfig, correlationId, shouldReattempt)
{
	return oFF.XPromise.create((resolve, reject) => {
		let config = this.m_dataProvider.getConfig();
		let syncType = config.getProcess().getDefaultSyncType();
		let queryManagerCreationListenerLambda = oFF.QueryManagerCreationListenerLambda.createSingleUse((result) => {
			if (result.hasErrors())
			{
				let calcViewNeedsCreation = oFF.XStream.of(result.getErrors()).find((message) => {
					return message.getCode() === oFF.ErrorCodes.CALC_VIEW_NOT_FOUND_NEEDS_CREATION;
				}).isPresent();
				let reattempting = calcViewNeedsCreation && shouldReattempt;
				if (reattempting)
				{
					this.handleHookWithParam(this.getHooks().getBeforeCalcViewCreationHooks(), this.m_dataProvider, correlationId);
					queryServiceConfig.clearMessages();
					this.attemptCalcViewAndQueryManagerCreation(queryServiceConfig, correlationId).onThen(resolve).onCatch(reject);
				}
				else
				{
					reject(oFF.MessageUtil.condenseMessagesToSingleError(result));
				}
				return;
			}
			let queryManager = result.getData();
			this.m_dataProvider.setQueryManager(queryManager);
			this.m_dataProvider.updateLifecycle(correlationId);
			this.setReadOnly(queryManager, config.isDataReadOnly());
			this.handleHookWithParam(this.getHooks().getQueryManagerCreatedHooks(), this.m_dataProvider, correlationId).onThen((empty) => {
				resolve(null);
			}).onCatch(reject);
		});
		queryServiceConfig.processQueryManagerCreation(syncType, queryManagerCreationListenerLambda, null);
	});
};
oFF.OlapDataProviderConnector.prototype.createQueryServiceConfig = function(queryManagerDataSource, correlationId)
{
	let config = this.m_dataProvider.getConfig();
	let application = config.getApplication();
	let serviceConfig = oFF.QueryServiceConfig.createWithDataSource(application, queryManagerDataSource.getSystemName(), queryManagerDataSource);
	serviceConfig.setIsFusionActive(false);
	if (config.getMetadataConfiguration() !== null)
	{
		if (config.getMetadataConfiguration().isMetadataCacheEnabled())
		{
			serviceConfig.enableMetadataCache(true);
		}
		if (config.getMetadataConfiguration().isLightWeightMetadataEnabled())
		{
			serviceConfig.setLightweight(true);
		}
		if (config.getMetadataConfiguration().getRequiredDimensions() !== null)
		{
			serviceConfig.setRequiredDimensions(config.getMetadataConfiguration().getRequiredDimensions());
		}
	}
	if (config.isMetadataCacheEnabled())
	{
		serviceConfig.enableMetadataCache(true);
	}
	return this.handleHookWithParam2(this.getHooks().getServiceConfigCreatedHooks(), this.m_dataProvider, serviceConfig, correlationId).onThenExt((empty) => {
		return serviceConfig;
	});
};
oFF.OlapDataProviderConnector.prototype.createVisualizationFromJson = function(jsonViz)
{
	let vizName = jsonViz.getStringByKey(oFF.OlapDataProviderConfiguration.VIZ_NAME);
	let type = jsonViz.getStringByKey(oFF.OlapDataProviderConfiguration.VIZ_TYPE);
	let protocol = jsonViz.getStringByKey(oFF.OlapDataProviderConfiguration.VIZ_PROTOCOL);
	let defaultChartType = jsonViz.getStringByKey(oFF.OlapDataProviderConfiguration.VIZ_CHART_TYPE);
	let active = jsonViz.getBooleanByKey(oFF.OlapDataProviderConfiguration.VIZ_ACTIVE);
	if (oFF.XStringUtils.isNullOrEmpty(vizName) || oFF.XStringUtils.isNullOrEmpty(type))
	{
		return null;
	}
	let protocolBindingType = oFF.ProtocolBindingType.lookup(protocol);
	let vizType = oFF.VisualizationType.lookup(type);
	if (oFF.isNull(vizType))
	{
		return null;
	}
	if (oFF.isNull(protocolBindingType))
	{
		protocolBindingType = vizType.getDefaultProtocolBindingType();
	}
	let chartType = oFF.ChartType.lookup(defaultChartType);
	let visualizationManager = this.m_dataProvider.getQueryManager().getQueryModel().getVisualizationManager();
	let definition = visualizationManager.getOrCreateVisualisationDefinition(vizName, protocolBindingType, vizType.getSemanticBindingType());
	if (oFF.notNull(chartType) && vizType === oFF.VisualizationType.CHART)
	{
		let chartDefinition = definition;
		chartDefinition.getChartSetting().setChartType(chartType);
	}
	if (active)
	{
		visualizationManager.setCurrentActiveVisualizationDefinition(definition);
	}
	return definition;
};
oFF.OlapDataProviderConnector.prototype.deactivateAllDefaultHooks = function()
{
	this.deactivateDefaultFinalizeQueryManagerHook();
};
oFF.OlapDataProviderConnector.prototype.deactivateDefaultFinalizeQueryManagerHook = function()
{
	this.getHooks().getFinalizeQueryManagerHooks().removeFunctionByUuid(this.m_defaultFinalizeQueryManagerId);
	this.m_defaultFinalizeQueryManagerId = null;
};
oFF.OlapDataProviderConnector.prototype.finalizeQueryManager = function(correlationId)
{
	return this.handleHookWithParam(this.getHooks().getFinalizeQueryManagerHooks(), this.m_dataProvider, correlationId).onThenPromise((empty) => {
		let resultingBase = this.m_dataProvider.getResultingBase();
		let startWithAutoFetch = this.m_connection.isStartWithAutoFetch();
		resultingBase.setAutoFetchActiveWithoutNewResult(startWithAutoFetch, correlationId);
		if (!startWithAutoFetch)
		{
			return oFF.XPromise.resolve(null);
		}
		let usingExitVariableValuesForSetup = this.m_connection.isUsingExitVariableValuesForSetup();
		this.setExitVariablesWinControl(usingExitVariableValuesForSetup);
		return resultingBase.fetchNewResultSet(correlationId).onThenExt((result) => {
			this.setExitVariablesWinControl(false);
			return null;
		});
	});
};
oFF.OlapDataProviderConnector.prototype.finalizeVariables = function(correlationId)
{
	return this.handleHookWithResult(this.getHooks().getFinalizeVariablesHooks(), this.m_dataProvider, oFF.XBooleanValue.create(false), correlationId).onThenPromise((variablesChanged) => {
		if (this.m_dataProvider.isAutoSubmitEffective())
		{
			return oFF.XPromise.resolve(null);
		}
		let variablesHaveBeenChanged = oFF.XCollectionUtils.contains(variablesChanged, (change) => {
			return change.getBoolean();
		});
		return this.processClassicSubmit(variablesHaveBeenChanged, correlationId);
	});
};
oFF.OlapDataProviderConnector.prototype.getCurrentConnected = function()
{
	return this.m_connection;
};
oFF.OlapDataProviderConnector.prototype.getDimensionMemberExitVariablesForFilters = function()
{
	let queryManager = this.m_dataProvider.getQueryManager();
	return oFF.XStream.of(queryManager.getVariables()).filter((variable) => {
		if (variable.isTechnicalVariable() || !variable.getVariableType().isTypeOf(oFF.VariableType.DIMENSION_MEMBER_VARIABLE))
		{
			return false;
		}
		let dimVar = variable;
		return dimVar.isUsedInDynamicFilter() && (dimVar.isEnforcedDynamicValue() || !dimVar.isInputEnabled());
	}).map((variable2) => {
		return variable2;
	}).collect(oFF.XStreamCollector.toList());
};
oFF.OlapDataProviderConnector.prototype.getExitAndDynamicVariableUpdatePromise = function(correlationId)
{
	if (!this.m_connection.isUsingExitVariableValuesForSetup())
	{
		return oFF.XPromise.resolve(null);
	}
	return oFF.XPromise.create((resolve, reject) => {
		let queryManager = this.m_dataProvider.getQueryManager();
		let syncType = queryManager.getSession().getDefaultSyncType();
		queryManager.resetExitOrUpdateDynamicVariable(syncType, oFF.QueryExecutionListenerLambda.createSingleUse((exitResult) => {
			if (exitResult.hasErrors())
			{
				let errorEvt = this.m_dataProvider.getEventing().getEmitterForError().newTypedEvent();
				errorEvt.addError(oFF.MessageUtil.condenseMessagesToSingleError(exitResult));
				errorEvt.setCorrelationId(correlationId);
				errorEvt.queue();
			}
			resolve(null);
		}), null, true);
	});
};
oFF.OlapDataProviderConnector.prototype.getFilterFromVariables = function(variablesHaveBeenChanged)
{
	let filters = oFF.XHashMapByString.create();
	if (!this.m_connection.isUsingExitVariableValuesForSetup() && !variablesHaveBeenChanged)
	{
		return filters;
	}
	let variablesToPreserve = oFF.XList.create();
	if (variablesHaveBeenChanged)
	{
		oFF.XCollectionUtils.addAllIfNotPresent(variablesToPreserve, this.getInputEnabledVarsUsedInFilter());
	}
	if (this.m_connection.isUsingExitVariableValuesForSetup())
	{
		oFF.XCollectionUtils.addAllIfNotPresent(variablesToPreserve, this.getDimensionMemberExitVariablesForFilters());
	}
	let queryModel = this.m_dataProvider.getQueryManager().getQueryModel();
	let dynamicFilter = queryModel.getFilter().getDynamicFilter();
	for (let i = 0; i < variablesToPreserve.size(); i++)
	{
		let dimVar = variablesToPreserve.get(i);
		let dimension = dimVar.getDimension();
		let cartesianList = dynamicFilter.getCartesianList(dimension);
		if (oFF.notNull(cartesianList))
		{
			filters.put(dimension.getName(), cartesianList.cloneOlapComponent(queryModel, null));
		}
	}
	return filters;
};
oFF.OlapDataProviderConnector.prototype.getHooks = function()
{
	return this.m_dataProvider.getHooksBase();
};
oFF.OlapDataProviderConnector.prototype.getInaDataSource = function()
{
	return this.m_inaDataSource;
};
oFF.OlapDataProviderConnector.prototype.getInputEnabledVarsUsedInFilter = function()
{
	let queryManager = this.m_dataProvider.getQueryManager();
	return oFF.XStream.of(queryManager.getInputEnabledAndNonTechnicalVariables()).filter((variable) => {
		if (!variable.getVariableType().isTypeOf(oFF.VariableType.DIMENSION_MEMBER_VARIABLE))
		{
			return false;
		}
		let dimVar = variable;
		return dimVar.isUsedInDynamicFilter();
	}).map((variable2) => {
		return variable2;
	}).collect(oFF.XStreamCollector.toList());
};
oFF.OlapDataProviderConnector.prototype.getModelDataSource = function()
{
	return this.m_modelDataSource;
};
oFF.OlapDataProviderConnector.prototype.getPersistencyDataSource = function()
{
	return this.m_persistencyDataSource;
};
oFF.OlapDataProviderConnector.prototype.getQueryManagerDataSource = function(dataSource, correlationId)
{
	if (oFF.isNull(dataSource))
	{
		return this.rejectWithErrorEvent("DataProvider Connector has no data source set", correlationId);
	}
	let dataSourcePromise;
	if (dataSource.getType() === oFF.MetaObjectType.SFX)
	{
		let loader = oFF.OlapDataProviderSacModelLoader.createLoader(this.m_dataProvider, dataSource, this.m_connection.getFile());
		dataSourcePromise = loader.load().onThenExt((empty) => {
			this.m_connection.setSfxJson(loader.getSfx());
			this.m_modelDataSource = dataSource;
			this.m_inaDataSource = loader.getQueryManagerDataSource();
			oFF.XObjectExt.release(loader);
			return this.m_inaDataSource;
		});
	}
	else if (dataSource.getType() === oFF.MetaObjectType.INSIGHT)
	{
		let loader = oFF.OlapDataProviderInsightLoader.createLoader(this.m_dataProvider, dataSource);
		dataSourcePromise = loader.load().onThenExt((empty) => {
			this.m_connection.setRepoJson(loader.getRepo());
			this.m_connection.setSfxJson(loader.getSfx());
			this.m_persistencyDataSource = dataSource;
			this.m_modelDataSource = loader.getModelDataSource();
			this.m_inaDataSource = loader.getQueryManagerDataSource();
			oFF.XObjectExt.release(loader);
			return this.m_inaDataSource;
		});
	}
	else
	{
		this.m_inaDataSource = dataSource;
		dataSourcePromise = oFF.XPromise.resolve(dataSource);
	}
	return dataSourcePromise.onThenPromise((ds) => {
		return this.handleHookWithParam2(this.getHooks().getLowLevelDataSourceResolvedHooks(), this.m_dataProvider, ds, correlationId).onThenExt((empty) => {
			return ds;
		});
	});
};
oFF.OlapDataProviderConnector.prototype.getXSAQuery = function(queryServiceConfig)
{
	return oFF.XPromise.create((resolve, reject) => {
		let config = this.m_dataProvider.getConfig();
		let listener = oFF.OlapDataProviderCalcViewRPCHandlerListener.create(resolve, reject);
		let ehsDefined = config.getApplication().getSystemLandscape().getSystemDescription("EHS") !== null;
		let xsaSystemName = ehsDefined ? "EHS" : config.getApplication().getSystemLandscape().getMasterSystemName();
		let systemDescription = config.getApplication().getSystemLandscape().getSystemDescription(xsaSystemName);
		let composableServicePath = systemDescription.getServiceProperties(oFF.SystemServices.QUERY_INFO).getByKey(oFF.ConnectionParameters.PATH);
		let pathExtension = ehsDefined ? "/api/v1/queryinfo/" : oFF.XStringUtils.concatenate2(composableServicePath, "/queryinfo/");
		let resourceLink = oFF.XStringUtils.concatenate2(pathExtension, queryServiceConfig.getDataSource().getName());
		let rpchandler = oFF.OlapDataProviderCalcViewRPCHandler.create(config.getApplication(), xsaSystemName, null, resourceLink, queryServiceConfig.getDataSource().getContext(), null, null);
		rpchandler.processSyncAction(config.getProcess().getDefaultSyncType(), listener, null);
	});
};
oFF.OlapDataProviderConnector.prototype.handleHookWithParam = function(hooks, value, correlationId)
{
	return this.handleHookWithResult(hooks, value, null, correlationId).onThenExt((result) => {
		return null;
	});
};
oFF.OlapDataProviderConnector.prototype.handleHookWithParam2 = function(hooks, value1, value2, correlationId)
{
	if (this.m_skipHooks || !oFF.XCollectionUtils.hasElements(hooks))
	{
		return oFF.XPromise.resolve(null);
	}
	let hookPromise = oFF.XPromise.resolve(null);
	let hookLambdas = hooks.getValuesAsReadOnlyList();
	for (let i = 0; i < hookLambdas.size(); i++)
	{
		let current = hookLambdas.get(i);
		hookPromise = hookPromise.onThenPromise((empty) => {
			return current(value1, value2);
		});
	}
	hookPromise.onCatch((err) => {
		this.queueErrorEvent(err, correlationId);
	});
	return hookPromise;
};
oFF.OlapDataProviderConnector.prototype.handleHookWithResult = function(hooks, value, defaultValue, correlationId)
{
	if (this.m_skipHooks || !oFF.XCollectionUtils.hasElements(hooks))
	{
		return oFF.XPromise.resolve(oFF.XCollectionUtils.singletonList(defaultValue));
	}
	let hookPromise = oFF.XPromise.resolve(defaultValue);
	let allResults = oFF.XList.create();
	let hookLambdas = hooks.getValuesAsReadOnlyList();
	for (let i = 0; i < hookLambdas.size(); i++)
	{
		let current = hookLambdas.get(i);
		hookPromise = hookPromise.onThenPromise((result) => {
			return current(value);
		}).onThen((currentResult) => {
			allResults.add(currentResult);
		});
	}
	hookPromise.onCatch((err) => {
		this.queueErrorEvent(err, correlationId);
	});
	return hookPromise.onThenExt((result) => {
		return allResults;
	});
};
oFF.OlapDataProviderConnector.prototype.loadRepo = function(repoJson)
{
	this.m_connection.setRepoJson(repoJson);
	let queryManager = this.m_dataProvider.getQueryManager();
	let config = this.m_dataProvider.getConfig();
	let modelFormat = config.isRepoDeltaEnabled() ? oFF.QModelFormat.INA_REPOSITORY_DELTA : oFF.QModelFormat.INA_REPOSITORY;
	let result = queryManager.getQueryModel().deserializeFromElementExt(modelFormat, repoJson);
	if (result.hasErrors())
	{
		return oFF.XPromise.reject(oFF.MessageUtil.condenseMessagesToSingleError(result));
	}
	return oFF.XPromise.resolve(null);
};
oFF.OlapDataProviderConnector.prototype.loadRepoAfterClassicSubmit = function(variablesHaveBeenChanged, correlationId)
{
	let repoJson = this.m_connection.getRepoJson() !== null ? this.m_connection.getRepoJson() : oFF.PrFactory.createStructure();
	return this.handleHookWithParam2(this.getHooks().getBeforeRepoLoadHooks(), this.m_dataProvider, repoJson, correlationId).onThenPromise((empty) => {
		let queryManager = this.m_dataProvider.getQueryManager();
		if (!oFF.XCollectionUtils.hasElements(repoJson))
		{
			return this.handleHookWithParam(this.getHooks().getAfterRepoLoadHooks(), this.m_dataProvider, correlationId);
		}
		let config = this.m_dataProvider.getConfig();
		let queryModel = queryManager.getQueryModel();
		let modelFormat = config.isRepoDeltaEnabled() ? oFF.QModelFormat.INA_REPOSITORY_DELTA : oFF.QModelFormat.INA_REPOSITORY;
		let variableValues = queryModel.getVariableContainer().serializeToElement(modelFormat);
		let variablesFilter = this.getFilterFromVariables(variablesHaveBeenChanged);
		return this.loadRepo(repoJson).onThenPromise((empty2) => {
			if (oFF.notNull(variableValues))
			{
				let result = queryModel.getVariableContainer().deserializeFromElementExt(modelFormat, variableValues);
				if (result.hasErrors())
				{
					return oFF.XPromise.reject(oFF.MessageUtil.condenseMessagesToSingleError(result));
				}
			}
			this.applyFilterFromVariables(variablesFilter);
			return this.handleHookWithParam(this.getHooks().getAfterRepoLoadHooks(), this.m_dataProvider, correlationId);
		});
	});
};
oFF.OlapDataProviderConnector.prototype.loadRepoBeforeSubmit = function(correlationId)
{
	let repoJson = this.m_connection.getRepoJson() !== null ? this.m_connection.getRepoJson() : oFF.PrFactory.createStructure();
	return this.handleHookWithParam2(this.getHooks().getBeforeRepoLoadHooks(), this.m_dataProvider, repoJson, correlationId).onThenPromise((empty) => {
		let repoLoad;
		let queryManager = this.m_dataProvider.getQueryManager();
		if (!oFF.XCollectionUtils.hasElements(repoJson))
		{
			repoLoad = oFF.XPromise.resolve(null);
		}
		else if (this.m_dataProvider.isAutoSubmitEffective())
		{
			repoLoad = this.loadRepo(repoJson);
		}
		else
		{
			let config = this.m_dataProvider.getConfig();
			let modelFormat = config.isRepoDeltaEnabled() ? oFF.QModelFormat.INA_REPOSITORY_DELTA : oFF.QModelFormat.INA_REPOSITORY;
			queryManager.getQueryModel().getVariableContainer().deserializeFromElementExt(modelFormat, repoJson);
			repoLoad = oFF.XPromise.resolve(null);
		}
		return repoLoad.onThenPromise((empty2) => {
			return this.handleHookWithParam(this.getHooks().getAfterRepoLoadHooks(), this.m_dataProvider, correlationId);
		});
	});
};
oFF.OlapDataProviderConnector.prototype.loadSfx = function(correlationId)
{
	let sfxJson = this.m_connection.getSfxJson() !== null ? this.m_connection.getSfxJson() : oFF.PrFactory.createStructure();
	return this.handleHookWithParam2(this.getHooks().getBeforeSfxLoadHooks(), this.m_dataProvider, sfxJson, correlationId).onThenPromise((empty) => {
		let queryManager = this.m_dataProvider.getQueryManager();
		if (oFF.XCollectionUtils.hasElements(sfxJson))
		{
			this.m_connection.setSfxJson(sfxJson);
			let queryModel = queryManager.getQueryModel();
			queryModel.stopEventing();
			let result = queryModel.deserializeFromElementExt(oFF.QModelFormat.INA_REPOSITORY, sfxJson);
			queryModel.resumeEventing();
			if (result.hasErrors())
			{
				return oFF.XPromise.reject(oFF.MessageUtil.condenseMessagesToSingleError(result));
			}
		}
		return this.handleHookWithParam(this.getHooks().getAfterSfxLoadHooks(), this.m_dataProvider, correlationId);
	});
};
oFF.OlapDataProviderConnector.prototype.loadVisualizations = function(correlationId)
{
	let visualizationJson = this.m_connection.getVisualizations();
	return this.handleHookWithParam2(this.getHooks().getBeforeVisualizationLoadHooks(), this.m_dataProvider, visualizationJson, correlationId).onThenPromise((empty) => {
		let visualizations = oFF.XList.create();
		if (oFF.XCollectionUtils.hasElements(visualizationJson))
		{
			let synchronizer = this.m_dataProvider.getQueryManager().getQueryModel().getVisualizationManager().getViz2QmSynchronizer();
			let previousMode = synchronizer.getMode();
			synchronizer.setMode(oFF.Viz2QmSynchronizationMode.NONE);
			for (let index = 0; index < visualizationJson.size(); index++)
			{
				let visualization = visualizationJson.getStructureAt(index);
				oFF.XCollectionUtils.addIfNotNull(visualizations, this.createVisualizationFromJson(visualization));
			}
			synchronizer.setMode(previousMode);
		}
		return this.handleHookWithParam2(this.getHooks().getAfterVisualizationLoadHooks(), this.m_dataProvider, visualizations, correlationId);
	});
};
oFF.OlapDataProviderConnector.prototype.processClassicSubmit = function(variablesHaveBeenChanged, correlationId)
{
	return oFF.XPromise.create((resolve, reject) => {
		let queryManager = this.m_dataProvider.getQueryManager();
		let syncType = this.m_dataProvider.getApplication().getDefaultSyncType();
		queryManager.submitVariables(syncType, oFF.VariableProcessorCallbackLambda.createSingleUse((result) => {
			if (result.hasErrors())
			{
				let errorEvt = this.m_dataProvider.getEventing().getEmitterForError().newTypedEvent();
				errorEvt.addError(oFF.MessageUtil.condenseMessagesToSingleError(result));
				errorEvt.setCorrelationId(correlationId);
				errorEvt.queue();
				reject(oFF.MessageUtil.condenseMessagesToSingleError(result));
				return;
			}
			this.loadSfx(correlationId).onThenPromise((empty1) => {
				return this.loadRepoAfterClassicSubmit(variablesHaveBeenChanged, correlationId);
			}).onThen((empty2) => {
				resolve(null);
			}).onCatch(reject);
		}), null);
	});
};
oFF.OlapDataProviderConnector.prototype.processClassicSubmitIfNecessary = function(correlationId)
{
	if (oFF.notNull(this.m_connectionPromise) && this.m_connectionPromise.getState() === oFF.XPromiseState.PENDING)
	{
		return oFF.XPromise.resolve(null);
	}
	let corrId = oFF.notNull(correlationId) ? correlationId : oFF.XGuid.getGuid();
	if (this.m_dataProvider.getQueryManager() === null || !this.m_dataProvider.getQueryManager().isSubmitNeeded() || this.m_dataProvider.isAutoSubmitEffective())
	{
		return oFF.XPromise.resolve(null);
	}
	this.m_skipHooks = true;
	return this.processClassicSubmit(true, corrId).onFinally(() => {
		this.m_skipHooks = false;
	});
};
oFF.OlapDataProviderConnector.prototype.processConnectionSetup = function(correlationId)
{
	this.m_skipHooks = false;
	let corrId = oFF.notNull(correlationId) ? correlationId : oFF.XGuid.getGuid();
	if (oFF.isNull(this.m_connection))
	{
		return this.rejectWithErrorEvent("DataProvider Connector has no connection config set", correlationId);
	}
	if (oFF.notNull(this.m_connectionPromise) && this.m_connectionPromise.getState() === oFF.XPromiseState.PENDING)
	{
		return this.m_connectionPromise;
	}
	this.m_persistencyDataSource = null;
	this.m_modelDataSource = null;
	this.m_inaDataSource = null;
	this.m_dataProvider.getEventingBase().setEventingPaused(true);
	let connectionPromise = this.resolveConnectionFile(corrId).onThenPromise((dataSource) => {
		return this.getQueryManagerDataSource(dataSource, corrId);
	}).onThenPromise((dataSource) => {
		return this.createQueryServiceConfig(dataSource, corrId);
	}).onThenPromise((serviceConfig) => {
		return this.createQueryManager(serviceConfig, corrId, true);
	}).onThenPromise((empty0) => {
		return this.loadSfx(corrId);
	}).onThenPromise((empty1) => {
		return this.loadVisualizations(corrId);
	}).onThenPromise((empty2) => {
		return this.loadRepoBeforeSubmit(corrId);
	}).onThenPromise((empty3) => {
		return this.getExitAndDynamicVariableUpdatePromise(corrId);
	}).onThenPromise((empty4) => {
		return this.finalizeVariables(corrId);
	}).onThenPromise((empty5) => {
		return this.finalizeQueryManager(corrId);
	}).onThenPromise((empty5) => {
		return this.applySemantics(corrId);
	});
	connectionPromise.onCatch((err) => {
		let errorEvt = this.m_dataProvider.getEventing().getEmitterForError().newTypedEvent();
		errorEvt.addError(err);
		errorEvt.setCorrelationId(corrId);
		errorEvt.queue();
	}).onFinally(() => {
		this.m_dataProvider.getEventingBase().setEventingPaused(false);
		this.m_connectionPromise = null;
	});
	this.m_connectionPromise = connectionPromise;
	return connectionPromise;
};
oFF.OlapDataProviderConnector.prototype.processDisconnect = function(releaseConnection, correlationId)
{
	this.m_skipHooks = false;
	let corrId = oFF.notNull(correlationId) ? correlationId : oFF.XGuid.getGuid();
	let queryManager = this.m_dataProvider.getQueryManager();
	if (oFF.isNull(queryManager))
	{
		return oFF.XPromise.resolve(null);
	}
	this.m_persistencyDataSource = null;
	this.m_modelDataSource = null;
	this.m_inaDataSource = null;
	if (!releaseConnection)
	{
		this.m_dataProvider.setQueryManager(null);
		this.m_dataProvider.updateLifecycle(corrId);
		return oFF.XPromise.resolve(null);
	}
	return oFF.XPromise.create((resolve, reject) => {
		queryManager.processShutdown(queryManager.getSession().getDefaultSyncType(), oFF.QueryManagerShutdownListenerLambda.createSingleUse((shutdownResult) => {
			if (shutdownResult.hasErrors())
			{
				reject(oFF.MessageUtil.condenseMessagesToSingleError(shutdownResult));
				return;
			}
			oFF.XObjectExt.release(queryManager);
			this.m_dataProvider.setQueryManager(null);
			this.m_dataProvider.updateLifecycle(corrId);
			resolve(null);
		}), null);
	});
};
oFF.OlapDataProviderConnector.prototype.processReinitIfNecessary = function(correlationId)
{
	let corrId = oFF.notNull(correlationId) ? correlationId : oFF.XGuid.getGuid();
	let queryManager = this.m_dataProvider.getQueryManager();
	if (oFF.isNull(queryManager) || !queryManager.isReinitNeeded())
	{
		return oFF.XPromise.resolve(null);
	}
	this.m_skipHooks = true;
	return oFF.XPromise.create((resolve, reject) => {
		let syncType = queryManager.getSession().getDefaultSyncType();
		queryManager.reInitVariablesAfterSubmit(syncType, oFF.VariableProcessorCallbackLambda.createSingleUse((result) => {
			this.m_skipHooks = false;
			if (result.hasErrors())
			{
				let errorEvt = this.m_dataProvider.getEventing().getEmitterForError().newTypedEvent();
				errorEvt.addError(oFF.MessageUtil.condenseMessagesToSingleError(result));
				errorEvt.setCorrelationId(corrId);
				errorEvt.queue();
				reject(oFF.MessageUtil.condenseMessagesToSingleError(result));
			}
			else
			{
				resolve(null);
			}
		}), null);
	});
};
oFF.OlapDataProviderConnector.prototype.queueErrorEvent = function(error, correlationId)
{
	let errorEvt = this.m_dataProvider.getEventing().getEmitterForError().newTypedEvent();
	errorEvt.addError(error);
	errorEvt.setCorrelationId(correlationId);
	errorEvt.queue();
};
oFF.OlapDataProviderConnector.prototype.rejectWithErrorEvent = function(message, correlationId)
{
	let error = oFF.XError.create(message);
	this.queueErrorEvent(error, correlationId);
	return oFF.XPromise.reject(error);
};
oFF.OlapDataProviderConnector.prototype.releaseObject = function()
{
	this.m_dataProvider = null;
	this.m_connection = oFF.XObjectExt.release(this.m_connection);
	oFF.XObject.prototype.releaseObject.call( this );
};
oFF.OlapDataProviderConnector.prototype.resolveConnectionFile = function(correlationId)
{
	let file = this.m_connection.getFile();
	let dataSource = this.m_connection.getDataSource();
	if ((oFF.isNull(dataSource) || oFF.XStringUtils.isNullOrEmpty(dataSource.getObjectName())) && oFF.notNull(file))
	{
		let fileDataSource = oFF.QFactory.createDataSource();
		let nodeType = file.getAttributes().getStringByKey(oFF.XFileAttribute.NODE_TYPE);
		let fileType = oFF.OlapDataProviderFileType.lookupByFileAttributeNodeType(nodeType);
		if (fileType === oFF.OlapDataProviderFileType.SAC_MODEL)
		{
			let attributes = file.getAttributes();
			let uniqueId = attributes.getStringByKey(oFF.XFileAttribute.UNIQUE_ID);
			let systemName = attributes.getStringByKey(oFF.XFileAttribute.SYSTEM_NAME);
			fileDataSource.setType(fileType.getMetaObjectType());
			fileDataSource.setSystemName(systemName);
			fileDataSource.setObjectName(oFF.notNull(uniqueId) ? uniqueId : file.getName());
			fileDataSource.setModelName(fileDataSource.getObjectName());
		}
		dataSource = fileDataSource;
		this.m_connection.setDataSource(dataSource);
		if (oFF.isNull(dataSource))
		{
			return this.rejectWithErrorEvent("DataProvider could not resolve data source file", correlationId);
		}
	}
	return oFF.XPromise.resolve(dataSource);
};
oFF.OlapDataProviderConnector.prototype.setConnection = function(connection)
{
	this.m_connection = connection;
};
oFF.OlapDataProviderConnector.prototype.setExitVariablesWinControl = function(winControl)
{
	let queryManager = this.m_dataProvider.getQueryManager();
	queryManager.stopEventing();
	let variables = queryManager.getVariables();
	oFF.XStream.of(variables).filter((variable) => {
		return variable.getVariableType().isTypeOf(oFF.VariableType.DIMENSION_MEMBER_VARIABLE);
	}).filter((variable2) => {
		return variable2.isDynamicOrExitVariable();
	}).map((normalVar) => {
		return normalVar;
	}).forEach((dimVar) => {
		dimVar.setWinControlInAutoSubmit(winControl);
	});
	queryManager.resumeEventing();
};
oFF.OlapDataProviderConnector.prototype.setReadOnly = function(queryManager, dataReadOnly)
{
	if (oFF.notNull(queryManager) && queryManager.getQueryModel() !== null)
	{
		queryManager.getQueryModel().setPlanningMode(dataReadOnly ? oFF.PlanningMode.DISABLE_PLANNING : oFF.PlanningMode.FOR_PRIVATE_VERSIONS_ONLY);
	}
};
oFF.OlapDataProviderConnector.prototype.setVizVariablesForStructureDim = function(dimension, dimensionMemberMapping)
{
	let vizVariableMapping = oFF.PrUtils.deserialize("{\"Actual\":\"VersionActualsVariable\",\"Previous\":\"VersionPreviousVariable\",\"Budget\":\"VersionBudgetPlanVariable\",\"Forecast\":\"VersionForecastVariable\",\"AbsoluteVariance\":\"AbsoluteVarianceVariable\",\"PercentageVariance\":\"PercentageVarianceVariable\"}");
	if (oFF.notNull(dimensionMemberMapping) && oFF.notNull(dimension))
	{
		oFF.XCollectionUtils.forEach(dimensionMemberMapping.getKeysAsReadOnlyList(), (key) => {
			let members = dimensionMemberMapping.getStructureByKey(key);
			let vizVarName = vizVariableMapping.asStructure().getStringByKey(key);
			this.m_dataProvider.getQueryManager().getConvenienceCommands().setupVisualizationVariableIfNotExists(null, oFF.XValueType.STRING, vizVarName, vizVarName, true);
			oFF.XCollectionUtils.forEach(members, (member) => {
				let structureMember = oFF.XCollectionUtils.findFirst(dimension.getAllStructureMembers(), (structMember) => {
					return oFF.XString.isEqual(structMember.getFieldValue(dimension.getDisplayKeyField()).getValue().getStringRepresentation(), member.asString().getString());
				});
				if (oFF.notNull(structureMember))
				{
					let vizVarValue = structureMember.getFieldValue(dimension.getKeyField()).getValue().getStringRepresentation();
					if (oFF.notNull(vizVarValue))
					{
						this.m_dataProvider.getQueryManager().getConvenienceCommands().addVisualizationVariableValue(null, vizVarName, vizVarValue);
					}
				}
			});
		});
		this.m_dataProvider.getQueryManager().getConvenienceCommands().setVisualizationVariableValue(null, oFF.OlapVisualizationConstants.SAC_VERSION_DIMENSION_TYPE_VARIABLE, dimension.getDimensionType().getName());
	}
};
oFF.OlapDataProviderConnector.prototype.setupExt = function(dataProvider)
{
	this.m_dataProvider = dataProvider;
	if (this.m_dataProvider.getConfig().shouldStartWithDefaultHooks())
	{
		this.activateAllDefaultHooks();
	}
};

oFF.OlapDataProviderEventListenerCollection = function() {};
oFF.OlapDataProviderEventListenerCollection.prototype = new oFF.XObject();
oFF.OlapDataProviderEventListenerCollection.prototype._ff_c = "OlapDataProviderEventListenerCollection";

oFF.OlapDataProviderEventListenerCollection.create = function(eventTemplate)
{
	let obj = new oFF.OlapDataProviderEventListenerCollection();
	obj.setupExt(eventTemplate);
	return obj;
};
oFF.OlapDataProviderEventListenerCollection.prototype.m_eventType = null;
oFF.OlapDataProviderEventListenerCollection.prototype.m_listener = null;
oFF.OlapDataProviderEventListenerCollection.prototype.callListener = function(event)
{
	this.m_listener.accept(event);
};
oFF.OlapDataProviderEventListenerCollection.prototype.getListener = function()
{
	return this.m_listener;
};
oFF.OlapDataProviderEventListenerCollection.prototype.getName = function()
{
	return this.m_eventType.getName();
};
oFF.OlapDataProviderEventListenerCollection.prototype.releaseObject = function()
{
	this.m_eventType = null;
	this.m_listener = oFF.XObjectExt.release(this.m_listener);
	oFF.XObject.prototype.releaseObject.call( this );
};
oFF.OlapDataProviderEventListenerCollection.prototype.setupExt = function(eventTemplate)
{
	this.m_eventType = eventTemplate.getEventType();
	this.m_listener = oFF.XConsumerCollection.create();
};

oFF.OlapDataProviderHooks = function() {};
oFF.OlapDataProviderHooks.prototype = new oFF.XObject();
oFF.OlapDataProviderHooks.prototype._ff_c = "OlapDataProviderHooks";

oFF.OlapDataProviderHooks.createHooks = function()
{
	let obj = new oFF.OlapDataProviderHooks();
	obj.setupExt(null);
	return obj;
};
oFF.OlapDataProviderHooks.createHooksWithOther = function(otherHooks)
{
	let obj = new oFF.OlapDataProviderHooks();
	obj.setupExt(otherHooks);
	return obj;
};
oFF.OlapDataProviderHooks.prototype.m_afterRepoLoadHooks = null;
oFF.OlapDataProviderHooks.prototype.m_afterSfxLoadHooks = null;
oFF.OlapDataProviderHooks.prototype.m_afterVisualizationLoadHooks = null;
oFF.OlapDataProviderHooks.prototype.m_beforeCalcViewCreationHooks = null;
oFF.OlapDataProviderHooks.prototype.m_beforeRepoLoadHooks = null;
oFF.OlapDataProviderHooks.prototype.m_beforeSfxLoadHooks = null;
oFF.OlapDataProviderHooks.prototype.m_beforeVisualizationLoadHooks = null;
oFF.OlapDataProviderHooks.prototype.m_finalizeQueryManagerHooks = null;
oFF.OlapDataProviderHooks.prototype.m_finalizeVariablesHooks = null;
oFF.OlapDataProviderHooks.prototype.m_lowLevelDatasourceResolvedHooks = null;
oFF.OlapDataProviderHooks.prototype.m_queryManagerCreatedHooks = null;
oFF.OlapDataProviderHooks.prototype.m_serviceConfigCreatedHooks = null;
oFF.OlapDataProviderHooks.prototype.getAfterRepoLoadHooks = function()
{
	return this.m_afterRepoLoadHooks;
};
oFF.OlapDataProviderHooks.prototype.getAfterRepoLoadRegister = function()
{
	return this.m_afterRepoLoadHooks;
};
oFF.OlapDataProviderHooks.prototype.getAfterSfxLoadHooks = function()
{
	return this.m_afterSfxLoadHooks;
};
oFF.OlapDataProviderHooks.prototype.getAfterSfxLoadRegister = function()
{
	return this.m_afterSfxLoadHooks;
};
oFF.OlapDataProviderHooks.prototype.getAfterVisualizationLoadHooks = function()
{
	return this.m_afterVisualizationLoadHooks;
};
oFF.OlapDataProviderHooks.prototype.getAfterVisualizationLoadRegister = function()
{
	return this.m_afterVisualizationLoadHooks;
};
oFF.OlapDataProviderHooks.prototype.getBeforeCalcViewCreationHooks = function()
{
	return this.m_beforeCalcViewCreationHooks;
};
oFF.OlapDataProviderHooks.prototype.getBeforeCalcViewCreationRegister = function()
{
	return this.m_beforeCalcViewCreationHooks;
};
oFF.OlapDataProviderHooks.prototype.getBeforeRepoLoadHooks = function()
{
	return this.m_beforeRepoLoadHooks;
};
oFF.OlapDataProviderHooks.prototype.getBeforeRepoLoadRegister = function()
{
	return this.m_beforeRepoLoadHooks;
};
oFF.OlapDataProviderHooks.prototype.getBeforeSfxLoadHooks = function()
{
	return this.m_beforeSfxLoadHooks;
};
oFF.OlapDataProviderHooks.prototype.getBeforeSfxLoadRegister = function()
{
	return this.m_beforeSfxLoadHooks;
};
oFF.OlapDataProviderHooks.prototype.getBeforeVisualizationLoadHooks = function()
{
	return this.m_beforeVisualizationLoadHooks;
};
oFF.OlapDataProviderHooks.prototype.getBeforeVisualizationLoadRegister = function()
{
	return this.m_beforeVisualizationLoadHooks;
};
oFF.OlapDataProviderHooks.prototype.getFinalizeQueryManagerHooks = function()
{
	return this.m_finalizeQueryManagerHooks;
};
oFF.OlapDataProviderHooks.prototype.getFinalizeQueryManagerRegister = function()
{
	return this.m_finalizeQueryManagerHooks;
};
oFF.OlapDataProviderHooks.prototype.getFinalizeVariablesHooks = function()
{
	return this.m_finalizeVariablesHooks;
};
oFF.OlapDataProviderHooks.prototype.getFinalizeVariablesRegister = function()
{
	return this.m_finalizeVariablesHooks;
};
oFF.OlapDataProviderHooks.prototype.getLowLevelDataSourceResolvedHooks = function()
{
	return this.m_lowLevelDatasourceResolvedHooks;
};
oFF.OlapDataProviderHooks.prototype.getLowLevelDataSourceResolvedRegister = function()
{
	return this.m_lowLevelDatasourceResolvedHooks;
};
oFF.OlapDataProviderHooks.prototype.getQueryManagerCreatedHooks = function()
{
	return this.m_queryManagerCreatedHooks;
};
oFF.OlapDataProviderHooks.prototype.getQueryManagerCreatedRegister = function()
{
	return this.m_queryManagerCreatedHooks;
};
oFF.OlapDataProviderHooks.prototype.getServiceConfigCreatedHooks = function()
{
	return this.m_serviceConfigCreatedHooks;
};
oFF.OlapDataProviderHooks.prototype.getServiceConfigCreatedRegister = function()
{
	return this.m_serviceConfigCreatedHooks;
};
oFF.OlapDataProviderHooks.prototype.releaseObject = function()
{
	this.m_lowLevelDatasourceResolvedHooks = oFF.XObjectExt.release(this.m_lowLevelDatasourceResolvedHooks);
	this.m_serviceConfigCreatedHooks = oFF.XObjectExt.release(this.m_serviceConfigCreatedHooks);
	this.m_queryManagerCreatedHooks = oFF.XObjectExt.release(this.m_queryManagerCreatedHooks);
	this.m_beforeSfxLoadHooks = oFF.XObjectExt.release(this.m_beforeSfxLoadHooks);
	this.m_afterSfxLoadHooks = oFF.XObjectExt.release(this.m_afterSfxLoadHooks);
	this.m_beforeRepoLoadHooks = oFF.XObjectExt.release(this.m_beforeRepoLoadHooks);
	this.m_afterRepoLoadHooks = oFF.XObjectExt.release(this.m_afterRepoLoadHooks);
	this.m_beforeVisualizationLoadHooks = oFF.XObjectExt.release(this.m_beforeVisualizationLoadHooks);
	this.m_afterVisualizationLoadHooks = oFF.XObjectExt.release(this.m_afterVisualizationLoadHooks);
	this.m_finalizeVariablesHooks = oFF.XObjectExt.release(this.m_finalizeVariablesHooks);
	this.m_finalizeQueryManagerHooks = oFF.XObjectExt.release(this.m_finalizeQueryManagerHooks);
	this.m_beforeCalcViewCreationHooks = oFF.XObjectExt.release(this.m_beforeCalcViewCreationHooks);
	oFF.XObject.prototype.releaseObject.call( this );
};
oFF.OlapDataProviderHooks.prototype.setupExt = function(otherHooks)
{
	this.m_lowLevelDatasourceResolvedHooks = oFF.XBiFunctionCollection.create();
	this.m_serviceConfigCreatedHooks = oFF.XBiFunctionCollection.create();
	this.m_queryManagerCreatedHooks = oFF.XFunctionCollection.create();
	this.m_beforeSfxLoadHooks = oFF.XBiFunctionCollection.create();
	this.m_afterSfxLoadHooks = oFF.XFunctionCollection.create();
	this.m_beforeRepoLoadHooks = oFF.XBiFunctionCollection.create();
	this.m_afterRepoLoadHooks = oFF.XFunctionCollection.create();
	this.m_beforeVisualizationLoadHooks = oFF.XBiFunctionCollection.create();
	this.m_afterVisualizationLoadHooks = oFF.XBiFunctionCollection.create();
	this.m_finalizeVariablesHooks = oFF.XFunctionCollection.create();
	this.m_finalizeQueryManagerHooks = oFF.XFunctionCollection.create();
	this.m_beforeCalcViewCreationHooks = oFF.XFunctionCollection.create();
	if (oFF.notNull(otherHooks))
	{
		oFF.XCollectionUtils.forEach(otherHooks.getLowLevelDataSourceResolvedRegister(), (x) => {
			this.m_lowLevelDatasourceResolvedHooks.addBiFunction(x);
		});
		oFF.XCollectionUtils.forEach(otherHooks.getServiceConfigCreatedRegister(), (x) => {
			this.m_serviceConfigCreatedHooks.addBiFunction(x);
		});
		oFF.XCollectionUtils.forEach(otherHooks.getQueryManagerCreatedRegister(), (x) => {
			this.m_queryManagerCreatedHooks.addFunction(x);
		});
		oFF.XCollectionUtils.forEach(otherHooks.getBeforeSfxLoadRegister(), (x) => {
			this.m_beforeSfxLoadHooks.addBiFunction(x);
		});
		oFF.XCollectionUtils.forEach(otherHooks.getAfterSfxLoadRegister(), (x) => {
			this.m_afterSfxLoadHooks.addFunction(x);
		});
		oFF.XCollectionUtils.forEach(otherHooks.getBeforeRepoLoadRegister(), (x) => {
			this.m_beforeRepoLoadHooks.addBiFunction(x);
		});
		oFF.XCollectionUtils.forEach(otherHooks.getAfterRepoLoadRegister(), (x) => {
			this.m_afterRepoLoadHooks.addFunction(x);
		});
		oFF.XCollectionUtils.forEach(otherHooks.getBeforeVisualizationLoadRegister(), (x) => {
			this.m_beforeVisualizationLoadHooks.addBiFunction(x);
		});
		oFF.XCollectionUtils.forEach(otherHooks.getAfterVisualizationLoadRegister(), (x) => {
			this.m_afterVisualizationLoadHooks.addBiFunction(x);
		});
		oFF.XCollectionUtils.forEach(otherHooks.getFinalizeVariablesRegister(), (x) => {
			this.m_finalizeVariablesHooks.addFunction(x);
		});
		oFF.XCollectionUtils.forEach(otherHooks.getFinalizeQueryManagerRegister(), (x) => {
			this.m_finalizeQueryManagerHooks.addFunction(x);
		});
		oFF.XCollectionUtils.forEach(otherHooks.getBeforeCalcViewCreationRegister(), (x) => {
			this.m_beforeCalcViewCreationHooks.addFunction(x);
		});
	}
};

oFF.OlapDataProviderResulting = function() {};
oFF.OlapDataProviderResulting.prototype = new oFF.XObject();
oFF.OlapDataProviderResulting.prototype._ff_c = "OlapDataProviderResulting";

oFF.OlapDataProviderResulting.create = function(dataProviderBase)
{
	let obj = new oFF.OlapDataProviderResulting();
	obj.setupExt(dataProviderBase);
	return obj;
};
oFF.OlapDataProviderResulting.timeout = function(duration, procedure)
{
	if (duration <= 0)
	{
		procedure();
	}
	else
	{
		oFF.XTimeout.timeout(duration, procedure);
	}
};
oFF.OlapDataProviderResulting.prototype.m_autoFetchSkippedBecauseConsumerChangesVariables = false;
oFF.OlapDataProviderResulting.prototype.m_dataProvider = null;
oFF.OlapDataProviderResulting.prototype.m_fillStrategy = null;
oFF.OlapDataProviderResulting.prototype.m_properties = null;
oFF.OlapDataProviderResulting.prototype.m_propertyListenerId = null;
oFF.OlapDataProviderResulting.prototype.autoFetchResultSet = function(correlationId)
{
	if (this.isAutoFetchActive() && !this.m_autoFetchSkippedBecauseConsumerChangesVariables)
	{
		this.processQuery(correlationId, true);
	}
};
oFF.OlapDataProviderResulting.prototype.autoFillVisualizations = function(correlationId)
{
	if (this.isAutoFetchActive())
	{
		let corrId = oFF.notNull(correlationId) ? correlationId : oFF.XGuid.getGuid();
		this.getFetchStartEvent(corrId).queue();
		let messages = oFF.MessageManagerSimple.createMessageManager();
		this.processFillVisualizations(messages, correlationId).onThen((empty) => {
			let doneEvt = this.getEventing().getEmitterForResultDataFetch().newTypedEvent();
			doneEvt.setCorrelationId(corrId);
			doneEvt.setStep(oFF.OlapDataProviderResultDataFetchStep.ALL_DONE);
			doneEvt.queue();
		});
	}
};
oFF.OlapDataProviderResulting.prototype.fetchNewResultSet = function(correlationId)
{
	return this.processQuery(correlationId, false);
};
oFF.OlapDataProviderResulting.prototype.fetchNewResultSetAfterAutoFetchEnabled = function(correlationId)
{
	if (this.m_autoFetchSkippedBecauseConsumerChangesVariables)
	{
		return oFF.XPromise.resolve(oFF.MessageManagerSimple.createMessageManager());
	}
	return this.processQuery(correlationId, false);
};
oFF.OlapDataProviderResulting.prototype.fetchNewTile = function(rowFrom, rowTo, columnFrom, columnTo, tableDefinitionName, correlationId)
{
	return this.processFetchTile(rowFrom, rowTo, columnFrom, columnTo, tableDefinitionName, correlationId);
};
oFF.OlapDataProviderResulting.prototype.fireAllDoneEvent = function(correlationId)
{
	let doneEvt = this.getEventing().getEmitterForResultDataFetch().newTypedEvent();
	doneEvt.setCorrelationId(correlationId);
	doneEvt.setStep(oFF.OlapDataProviderResultDataFetchStep.ALL_DONE);
	doneEvt.queue();
};
oFF.OlapDataProviderResulting.prototype.getEventing = function()
{
	return this.m_dataProvider.getEventingBase();
};
oFF.OlapDataProviderResulting.prototype.getFetchStartEvent = function(correlationId)
{
	let evt = this.getEventing().getEmitterForResultDataFetch().newTypedEvent();
	evt.setCorrelationId(correlationId);
	evt.setStep(oFF.OlapDataProviderResultDataFetchStep.FETCH_STARTED);
	return evt;
};
oFF.OlapDataProviderResulting.prototype.getTableDefinitionWithDefault = function(tableDefinitionName)
{
	return this.m_dataProvider.getOrCreateQueryManager().onThenPromise((queryManager) => {
		if (oFF.isNull(queryManager))
		{
			return oFF.XPromise.resolve(null);
		}
		let visualizationManager = this.m_dataProvider.getQueryManager().getQueryModel().getVisualizationManager();
		let visualization = null;
		if (oFF.XStringUtils.isNotNullAndNotEmpty(tableDefinitionName))
		{
			visualization = visualizationManager.getVisualizationDefinitionByName(tableDefinitionName);
			if (oFF.isNull(visualization))
			{
				let msg = oFF.XStringUtils.concatenate2("The given visualization does not exist: ", tableDefinitionName);
				return oFF.XPromise.reject(oFF.XError.create(msg));
			}
			if (visualization.getSemanticBindingType() !== oFF.SemanticBindingType.TABLE)
			{
				let msg = oFF.XStringUtils.concatenate2("The given visualization is not a table definition: ", tableDefinitionName);
				return oFF.XPromise.reject(oFF.XError.create(msg));
			}
		}
		else
		{
			visualization = visualizationManager.getCurrentActiveVisualizationDefinition();
			if (oFF.isNull(visualization))
			{
				return oFF.XPromise.reject(oFF.XError.create("There is no active visualization"));
			}
			if (visualization.getSemanticBindingType() !== oFF.SemanticBindingType.TABLE)
			{
				return oFF.XPromise.reject(oFF.XError.create("The current active visualization is not a table definition"));
			}
		}
		let tableDefinition = visualization;
		let visualizationContainer = tableDefinition.getActiveTableContainer();
		if (oFF.isNull(visualizationContainer))
		{
			return oFF.XPromise.reject(oFF.XError.create("There is no active table container"));
		}
		return oFF.XPromise.resolve(tableDefinition);
	});
};
oFF.OlapDataProviderResulting.prototype.getVisualizationFillStrategy = function()
{
	return this.m_fillStrategy;
};
oFF.OlapDataProviderResulting.prototype.handleGridFillResult = function(result, currentMessages, correlationId)
{
	currentMessages.addAllMessages(result);
	let fetchEvt = this.getEventing().getEmitterForResultDataFetch().newTypedEvent();
	fetchEvt.setCorrelationId(correlationId);
	fetchEvt.setStep(oFF.OlapDataProviderResultDataFetchStep.GRID_COLLECTED);
	fetchEvt.addMessages(result);
	fetchEvt.queue();
	if (result.hasErrors())
	{
		let gridError = oFF.MessageUtil.condenseMessagesToSingleError(result);
		let errorEvt = this.getEventing().getEmitterForError().newTypedEvent();
		errorEvt.setCorrelationId(correlationId);
		errorEvt.addError(gridError);
		errorEvt.queue();
	}
};
oFF.OlapDataProviderResulting.prototype.handleQueryResult = function(result, currentMessages, correlationId)
{
	currentMessages.addAllMessages(result);
	let fetchEvt = this.getEventing().getEmitterForResultDataFetch().newTypedEvent();
	fetchEvt.setCorrelationId(correlationId);
	fetchEvt.setStep(oFF.OlapDataProviderResultDataFetchStep.QUERY_EXECUTED);
	fetchEvt.addMessages(result);
	fetchEvt.queue();
	if (result.hasErrors())
	{
		let error = oFF.MessageUtil.condenseMessagesToSingleError(result);
		let errorEvt = this.getEventing().getEmitterForError().newTypedEvent();
		errorEvt.setCorrelationId(correlationId);
		errorEvt.addError(error);
		errorEvt.queue();
	}
};
oFF.OlapDataProviderResulting.prototype.handleVizFill = function(result, definition, currentMessages, correlationId)
{
	currentMessages.addAllMessages(result);
	if (result.hasErrors())
	{
		let vizError = oFF.MessageUtil.condenseMessagesToSingleError(result);
		let errorEvt = this.m_dataProvider.getEventing().getEmitterForError().newTypedEvent();
		errorEvt.setCorrelationId(correlationId);
		errorEvt.addError(vizError);
		errorEvt.queue();
	}
	else
	{
		let fetchEvt = this.getEventing().getEmitterForResultDataFetch().newTypedEvent();
		fetchEvt.setCorrelationId(correlationId);
		fetchEvt.setStep(oFF.OlapDataProviderResultDataFetchStep.VISUALIZATION_FILLED);
		fetchEvt.addMessages(result);
		fetchEvt.addAffectedVisualizationName(definition.getName());
		fetchEvt.queue();
	}
};
oFF.OlapDataProviderResulting.prototype.isAutoFetchActive = function()
{
	let propertyValue = this.m_properties.getPropertyValue(oFF.OlapDataProviderPropertyType.AUTO_FETCH.getName());
	if (oFF.isNull(propertyValue))
	{
		return false;
	}
	return propertyValue.getBoolean();
};
oFF.OlapDataProviderResulting.prototype.onDpPropertyChanged = function(propertyName, correlationId)
{
	if (oFF.XString.isEqual(oFF.OlapDataProviderPropertyType.AUTO_FETCH.getName(), propertyName) && this.isAutoFetchActive())
	{
		this.fetchNewResultSetAfterAutoFetchEnabled(correlationId);
	}
};
oFF.OlapDataProviderResulting.prototype.processDefinitionExecution = function(application, definition, currentMessages, correlationId)
{
	return oFF.XPromise.create((resolve, reject) => {
		oFF.OlapDataProviderResulting.timeout(this.m_dataProvider.getConfig().getDefaultWaitTimeout(), () => {
			definition.processExecutionGeneric(application.getDefaultSyncType(), oFF.GenericVisualizationProvidedListenerLambda.createSingleUse((result) => {
				this.handleVizFill(result, definition, currentMessages, correlationId);
				resolve(null);
			}), null);
		});
	});
};
oFF.OlapDataProviderResulting.prototype.processFetchTile = function(rowFrom, rowTo, columnFrom, columnTo, tableDefinitionName, correlationId)
{
	return this.getTableDefinitionWithDefault(tableDefinitionName).onThenPromise((tableDefinition) => {
		return oFF.XPromise.create((resolve, reject) => {
			let currentMessages = oFF.MessageManagerSimple.createMessageManager();
			let vizListener = oFF.AbstractVisualizationProvidedListenerLambda.createSingleUse((result) => {
				this.handleVizFill(result, tableDefinition, currentMessages, correlationId);
			});
			let gridListener = oFF.AbstractResultsetCollectorListenerLambda.createSingleUse((result) => {
				this.handleGridFillResult(result, currentMessages, correlationId);
				this.fireAllDoneEvent(correlationId);
				resolve(currentMessages);
			});
			let queryListener = oFF.QueryExecutionListenerLambda.createSingleUse((result) => {
				this.handleQueryResult(result, currentMessages, correlationId);
			});
			let fetchStartEvent = this.getFetchStartEvent(correlationId);
			if (oFF.XStringUtils.isNotNullAndNotEmpty(tableDefinitionName))
			{
				fetchStartEvent.addAffectedVisualizationName(tableDefinitionName);
			}
			fetchStartEvent.queue();
			let visualizationContainer = tableDefinition.getActiveTableContainer();
			visualizationContainer.processTileVisualization(this.m_dataProvider.getProcess().getDefaultSyncType(), vizListener, gridListener, queryListener, null, rowFrom, rowTo, columnFrom, columnTo);
		});
	});
};
oFF.OlapDataProviderResulting.prototype.processFillVisualizations = function(currentMessages, correlationId)
{
	let queryManager = this.m_dataProvider.getQueryManager();
	let application = this.m_dataProvider.getApplication();
	let vizManager = queryManager.getQueryModel().getVisualizationManager();
	if (this.m_fillStrategy === oFF.OlapDataProviderVisualizationFillStrategy.NONE)
	{
		return oFF.XPromise.resolve(null);
	}
	if (this.m_fillStrategy === oFF.OlapDataProviderVisualizationFillStrategy.ACTIVE)
	{
		let activeVisualizationDefinition = vizManager.getCurrentActiveVisualizationDefinition();
		if (oFF.isNull(activeVisualizationDefinition))
		{
			return oFF.XPromise.resolve(null);
		}
		return this.processDefinitionExecution(application, activeVisualizationDefinition, currentMessages, correlationId);
	}
	if (this.m_fillStrategy === oFF.OlapDataProviderVisualizationFillStrategy.ALL)
	{
		let fillPromise = oFF.XPromise.resolve(null);
		let definitions = vizManager.getVisualizationDefinitions();
		for (let i = 0; i < definitions.size(); i++)
		{
			let definition = definitions.get(i);
			fillPromise = fillPromise.onThenPromise((empty) => {
				return this.processDefinitionExecution(application, definition, currentMessages, correlationId);
			});
		}
		return fillPromise;
	}
	let errorMessage = oFF.XStringUtils.concatenate2("visualization fill strategy not implemented: ", this.m_fillStrategy.getName());
	return oFF.XPromise.reject(oFF.XError.create(errorMessage));
};
oFF.OlapDataProviderResulting.prototype.processQuery = function(corrId, isImplicitFetch)
{
	return this.m_dataProvider.getOrCreateQueryManager().onThenPromise((queryManager) => {
		if (oFF.isNull(queryManager))
		{
			return oFF.XPromise.resolve(null);
		}
		if (isImplicitFetch && queryManager.hasInputEnabledVariables() && !queryManager.isDirectVariableTransferEnabled() && queryManager.getVariableProcessorState() === oFF.VariableProcessorState.CHANGEABLE_STARTUP)
		{
			return oFF.XPromise.resolve(null);
		}
		let correlationId = oFF.notNull(corrId) ? corrId : oFF.XGuid.getGuid();
		this.getFetchStartEvent(correlationId).queue();
		let fetchPromise;
		if (queryManager.getQueryModel().getVisualizationManager().getGridCollector() !== null)
		{
			fetchPromise = this.processQueryWithGrid(correlationId);
		}
		else
		{
			fetchPromise = this.processQueryWithoutGrid(correlationId);
		}
		fetchPromise.onCatch((err) => {
			let errorEvt = this.getEventing().getEmitterForError().newTypedEvent();
			errorEvt.setCorrelationId(correlationId);
			errorEvt.addError(err);
			errorEvt.queue();
		});
		fetchPromise.onFinally(() => {
			this.fireAllDoneEvent(correlationId);
		});
		return fetchPromise;
	});
};
oFF.OlapDataProviderResulting.prototype.processQueryWithGrid = function(correlationId)
{
	return oFF.XPromise.create((resolve, reject) => {
		let application = this.m_dataProvider.getApplication();
		let messages = oFF.MessageManagerSimple.createMessageManager();
		let gridCollector = this.m_dataProvider.getQueryManager().getQueryModel().getVisualizationManager().getSynchronizedGridCollector();
		let queryListener = oFF.QueryExecutionListenerLambda.createSingleUse((result) => {
			this.handleQueryResult(result, messages, correlationId);
		});
		let gridListener = oFF.AbstractResultsetCollectorListenerLambda.createSingleUse((result) => {
			this.handleGridFillResult(result, messages, correlationId);
			this.processFillVisualizations(messages, correlationId).onCatch((err) => {
				reject(err);
			}).onThen((empty2) => {
				resolve(messages);
			});
		});
		gridCollector.processExecution(application.getDefaultSyncType(), gridListener, queryListener, null);
	});
};
oFF.OlapDataProviderResulting.prototype.processQueryWithoutGrid = function(correlationId)
{
	return oFF.XPromise.create((resolve, reject) => {
		let application = this.m_dataProvider.getApplication();
		let messages = oFF.MessageManagerSimple.createMessageManager();
		let queryManager = this.m_dataProvider.getQueryManager();
		let queryListener = oFF.QueryExecutionListenerLambda.createSingleUse((result) => {
			this.handleQueryResult(result, messages, correlationId);
			this.processFillVisualizations(messages, correlationId).onCatch((err) => {
				reject(err);
			}).onThen((empty2) => {
				resolve(messages);
			});
		});
		queryManager.processQueryExecution(application.getDefaultSyncType(), queryListener, null);
	});
};
oFF.OlapDataProviderResulting.prototype.releaseObject = function()
{
	this.unsubscribePropertyListener();
	this.m_properties = null;
	this.m_dataProvider = null;
	oFF.XObject.prototype.releaseObject.call( this );
};
oFF.OlapDataProviderResulting.prototype.setAutoFetchActive = function(active, correlationId)
{
	if (this.isAutoFetchActive() === active)
	{
		return oFF.XPromise.resolve(oFF.MessageManagerSimple.createMessageManager());
	}
	if (active)
	{
		this.getEventing().flushEventQueue();
	}
	this.setAutoFetchInternal(active, correlationId);
	if (this.isAutoFetchActive())
	{
		return this.fetchNewResultSetAfterAutoFetchEnabled(correlationId);
	}
	return oFF.XPromise.resolve(oFF.MessageManagerSimple.createMessageManager());
};
oFF.OlapDataProviderResulting.prototype.setAutoFetchActiveWithoutNewResult = function(active, correlationId)
{
	this.setAutoFetchInternal(active, correlationId);
};
oFF.OlapDataProviderResulting.prototype.setAutoFetchInternal = function(active, correlationId)
{
	this.unsubscribePropertyListener();
	this.m_properties.setPropertyValueWithCorrelationId(oFF.OlapDataProviderPropertyType.AUTO_FETCH.getName(), oFF.XBooleanValue.create(active), correlationId);
	this.subscribePropertyListener();
};
oFF.OlapDataProviderResulting.prototype.setAutoFetchSkippedBecauseConsumerChangesVariables = function(autoFetchSkippedBecauseConsumerChangesVariables)
{
	this.m_autoFetchSkippedBecauseConsumerChangesVariables = autoFetchSkippedBecauseConsumerChangesVariables;
};
oFF.OlapDataProviderResulting.prototype.setVisualizationFillStrategy = function(fillStrategy)
{
	if (oFF.isNull(fillStrategy))
	{
		this.m_fillStrategy = oFF.OlapDataProviderVisualizationFillStrategy.NONE;
	}
	else
	{
		this.m_fillStrategy = fillStrategy;
	}
};
oFF.OlapDataProviderResulting.prototype.setupExt = function(dataProviderBase)
{
	this.m_dataProvider = dataProviderBase;
	this.m_properties = this.m_dataProvider.getPropertiesBase();
	let startingFillStrategy = this.m_dataProvider.getConfig().getStartingFillStrategy();
	this.m_fillStrategy = oFF.notNull(startingFillStrategy) ? startingFillStrategy : oFF.OlapDataProviderVisualizationFillStrategy.ALL;
	let startWithAutoFetch = this.m_dataProvider.getConfig().getStartConnection().isStartWithAutoFetch();
	this.m_properties.setPropertyValueSilently(oFF.OlapDataProviderPropertyType.AUTO_FETCH.getName(), oFF.XBooleanValue.create(startWithAutoFetch));
	this.subscribePropertyListener();
};
oFF.OlapDataProviderResulting.prototype.subscribePropertyListener = function()
{
	this.m_propertyListenerId = this.m_properties.getPropertyListeners().prependConsumer((name, corrId) => {
		this.onDpPropertyChanged(name, corrId);
	});
};
oFF.OlapDataProviderResulting.prototype.unsubscribePropertyListener = function()
{
	if (oFF.notNull(this.m_properties) && oFF.notNull(this.m_propertyListenerId))
	{
		this.m_properties.getPropertyListeners().removeConsumerByUuid(this.m_propertyListenerId);
		this.m_propertyListenerId = null;
	}
};

oFF.OlapDataProviderLogger = function() {};
oFF.OlapDataProviderLogger.prototype = new oFF.XObject();
oFF.OlapDataProviderLogger.prototype._ff_c = "OlapDataProviderLogger";

oFF.OlapDataProviderLogger.COMMAND_NAME = "actionName";
oFF.OlapDataProviderLogger.CORRELATION_ID = "correlationId";
oFF.OlapDataProviderLogger.EVENT_TYPE = "eventType";
oFF.OlapDataProviderLogger.EXTERNAL = "external";
oFF.OlapDataProviderLogger.MAX_LOG_COUNT = 1000;
oFF.OlapDataProviderLogger.MESSAGE = "message";
oFF.OlapDataProviderLogger.MESSAGE_CLASS_EVENT = "Event";
oFF.OlapDataProviderLogger.NAME = "name";
oFF.OlapDataProviderLogger.PARAMETERS = "parameters";
oFF.OlapDataProviderLogger.PARAM_PLACEHOLDER = "OuDataProviderActionsLogger.placeholder";
oFF.OlapDataProviderLogger.PROPERTIES = "properties";
oFF.OlapDataProviderLogger.STATE = "state";
oFF.OlapDataProviderLogger.STEP = "step";
oFF.OlapDataProviderLogger.VALUE = "value";
oFF.OlapDataProviderLogger.addErrorInformation = function(structure, error)
{
	if (error.getMessage() !== null)
	{
		structure.putString(oFF.OlapDataProviderLogger.MESSAGE, error.getMessage().getText());
	}
	else
	{
		structure.putString(oFF.OlapDataProviderLogger.MESSAGE, error.getText());
	}
};
oFF.OlapDataProviderLogger.createActionsLogger = function(process, forceLoggingEnabled)
{
	let obj = new oFF.OlapDataProviderLogger();
	obj.setupLogger(process, forceLoggingEnabled);
	return obj;
};
oFF.OlapDataProviderLogger.getDefaultEventStructure = function(evt)
{
	let eventJson = oFF.PrFactory.createStructure();
	eventJson.putString(oFF.OlapDataProviderLogger.CORRELATION_ID, evt.getCorrelationId());
	eventJson.putString(oFF.OlapDataProviderLogger.EVENT_TYPE, evt.getEventType().getName());
	eventJson.putBoolean(oFF.OlapDataProviderLogger.EXTERNAL, evt.isExternal());
	return eventJson;
};
oFF.OlapDataProviderLogger.prototype.m_logListener = null;
oFF.OlapDataProviderLogger.prototype.m_logging = false;
oFF.OlapDataProviderLogger.prototype.m_messages = null;
oFF.OlapDataProviderLogger.prototype.addToLogAndNotify = function(message)
{
	this.m_messages.add(message);
	if (this.m_messages.size() > oFF.OlapDataProviderLogger.MAX_LOG_COUNT)
	{
		this.m_messages.removeAt(0);
	}
	this.m_logListener.accept(message);
};
oFF.OlapDataProviderLogger.prototype.clearAll = function()
{
	this.m_messages.clear();
	this.m_logListener.accept(null);
};
oFF.OlapDataProviderLogger.prototype.getLog = function()
{
	return this.m_messages;
};
oFF.OlapDataProviderLogger.prototype.getLogListener = function()
{
	return this.m_logListener;
};
oFF.OlapDataProviderLogger.prototype.isLoggingEnabled = function()
{
	return this.m_logging || oFF.XCollectionUtils.hasElements(this.m_logListener);
};
oFF.OlapDataProviderLogger.prototype.logActionExecutionEvt = function(actionEvent)
{
	let correlationId = actionEvent.getCorrelationId();
	let actionName = actionEvent.getActionName();
	let params = actionEvent.getParameters();
	let eventJson = oFF.OlapDataProviderLogger.getDefaultEventStructure(actionEvent);
	eventJson.putString(oFF.OlapDataProviderLogger.CORRELATION_ID, correlationId);
	eventJson.putString(oFF.OlapDataProviderLogger.COMMAND_NAME, actionName);
	let parameterList = eventJson.putNewList(oFF.OlapDataProviderLogger.PARAMETERS);
	for (let i = 0; i < params.size(); i++)
	{
		let param = params.get(i);
		if (!oFF.XString.isEqual(param, oFF.OlapDataProviderLogger.PARAM_PLACEHOLDER))
		{
			parameterList.addString(param);
		}
	}
	this.logEventJson(eventJson);
};
oFF.OlapDataProviderLogger.prototype.logError = function(error, external)
{
	if (!this.isLoggingEnabled())
	{
		return;
	}
	let errorJson = oFF.PrStructure.create();
	oFF.OlapDataProviderLogger.addErrorInformation(errorJson, error);
	errorJson.putBoolean(oFF.OlapDataProviderLogger.EXTERNAL, external);
	this.logErrorJson(errorJson);
};
oFF.OlapDataProviderLogger.prototype.logErrorEvt = function(errorEvt)
{
	for (let i = 0; i < errorEvt.getErrors().size(); i++)
	{
		let error = errorEvt.getErrors().get(i);
		let errorJson = oFF.OlapDataProviderLogger.getDefaultEventStructure(errorEvt);
		oFF.OlapDataProviderLogger.addErrorInformation(errorJson, error);
		this.logErrorJson(errorJson);
	}
};
oFF.OlapDataProviderLogger.prototype.logErrorJson = function(errorJson)
{
	let jsonString = oFF.PrUtils.serialize(errorJson, false, false, 0);
	let error = oFF.XMessage.createError(oFF.OriginLayer.APPLICATION, jsonString, null, false, null);
	this.addToLogAndNotify(error);
};
oFF.OlapDataProviderLogger.prototype.logEvent = function(event)
{
	if (!this.isLoggingEnabled())
	{
		return;
	}
	if (event.getEventType() === oFF.DataProviderEventType.ERROR)
	{
		this.logErrorEvt(event);
	}
	else if (event.getEventType() === oFF.DataProviderEventType.PROPERTY_CHANGE)
	{
		this.logPropertyChangeEvt(event);
	}
	else if (event.getEventType() === oFF.DataProviderEventType.ACTION_EXECUTION)
	{
		this.logActionExecutionEvt(event);
	}
	else if (event.getEventType() === oFF.OlapDataProviderEventType.RESULT_DATA_FETCH)
	{
		this.logResultFetchEvt(event);
	}
	else if (event.getEventType() === oFF.OlapDataProviderEventType.MODEL_STATE)
	{
		this.logModelStateEvt(event);
	}
	else
	{
		let eventJson = oFF.OlapDataProviderLogger.getDefaultEventStructure(event);
		this.logEventJson(eventJson);
	}
};
oFF.OlapDataProviderLogger.prototype.logEventJson = function(eventJson)
{
	let jsonString = oFF.PrUtils.serialize(eventJson, false, false, 0);
	let message = oFF.XMessage.createMessage(oFF.OriginLayer.APPLICATION, oFF.Severity.DEBUG, 0, jsonString, null, false, null);
	message.setMessageClass(oFF.OlapDataProviderLogger.MESSAGE_CLASS_EVENT);
	this.addToLogAndNotify(message);
};
oFF.OlapDataProviderLogger.prototype.logMessage = function(message)
{
	if (!this.isLoggingEnabled())
	{
		return;
	}
	this.addToLogAndNotify(message);
};
oFF.OlapDataProviderLogger.prototype.logModelStateEvt = function(modelStateEvt)
{
	let eventJson = oFF.OlapDataProviderLogger.getDefaultEventStructure(modelStateEvt);
	eventJson.putString(oFF.OlapDataProviderLogger.STATE, modelStateEvt.getNewState().getName());
	this.logEventJson(eventJson);
};
oFF.OlapDataProviderLogger.prototype.logPropertyChangeEvt = function(propertyEvent)
{
	let eventJson = oFF.OlapDataProviderLogger.getDefaultEventStructure(propertyEvent);
	let changedProperties = propertyEvent.getChangedProperties();
	let changedValues = propertyEvent.getNewPropertyValues();
	let propertiesList = eventJson.putNewList(oFF.OlapDataProviderLogger.PROPERTIES);
	for (let i = 0; i < changedProperties.size(); i++)
	{
		let propertyName = changedProperties.get(i);
		let value = changedValues.get(i);
		let propertyStructure = propertiesList.addNewStructure();
		propertyStructure.putString(oFF.OlapDataProviderLogger.NAME, propertyName);
		propertyStructure.putString(oFF.OlapDataProviderLogger.VALUE, value.getStringRepresentation());
	}
	this.logEventJson(eventJson);
};
oFF.OlapDataProviderLogger.prototype.logResultFetchEvt = function(dataFetchEvt)
{
	let eventJson = oFF.OlapDataProviderLogger.getDefaultEventStructure(dataFetchEvt);
	eventJson.putString(oFF.OlapDataProviderLogger.STEP, dataFetchEvt.getStep().getName());
	this.logEventJson(eventJson);
};
oFF.OlapDataProviderLogger.prototype.releaseObject = function()
{
	this.m_messages = oFF.XObjectExt.release(this.m_messages);
	oFF.XObject.prototype.releaseObject.call( this );
};
oFF.OlapDataProviderLogger.prototype.setupLogger = function(process, forceLoggingEnabled)
{
	this.m_messages = oFF.XList.create();
	this.m_logging = forceLoggingEnabled;
	this.m_logListener = oFF.XConsumerCollection.create();
	if (!forceLoggingEnabled)
	{
		let severityString = process.getEnvironment().getStringByKey(oFF.XEnvironmentConstants.FIREFLY_LOG_SEVERITY);
		let logSeverity = oFF.Severity.fromName(severityString);
		this.m_logging = logSeverity === oFF.Severity.DEBUG;
	}
};

oFF.OlapDataProviderActionManifest = function() {};
oFF.OlapDataProviderActionManifest.prototype = new oFF.XObject();
oFF.OlapDataProviderActionManifest.prototype._ff_c = "OlapDataProviderActionManifest";

oFF.OlapDataProviderActionManifest.createByStructure = function(manifestStructure)
{
	let newManifest = new oFF.OlapDataProviderActionManifest();
	newManifest.setupByStructure(manifestStructure);
	return newManifest;
};
oFF.OlapDataProviderActionManifest.prototype.m_category = null;
oFF.OlapDataProviderActionManifest.prototype.m_description = null;
oFF.OlapDataProviderActionManifest.prototype.m_displayName = null;
oFF.OlapDataProviderActionManifest.prototype.m_name = null;
oFF.OlapDataProviderActionManifest.prototype.m_parameters = null;
oFF.OlapDataProviderActionManifest.prototype.m_reviewDate = null;
oFF.OlapDataProviderActionManifest.prototype.m_stage = null;
oFF.OlapDataProviderActionManifest.prototype.getCategory = function()
{
	return this.m_category;
};
oFF.OlapDataProviderActionManifest.prototype.getDescription = function()
{
	return this.m_description;
};
oFF.OlapDataProviderActionManifest.prototype.getDisplayName = function()
{
	return this.m_displayName;
};
oFF.OlapDataProviderActionManifest.prototype.getName = function()
{
	return this.m_name;
};
oFF.OlapDataProviderActionManifest.prototype.getParameterList = function()
{
	return this.m_parameters.getValuesAsReadOnlyList();
};
oFF.OlapDataProviderActionManifest.prototype.getReviewDate = function()
{
	return this.m_reviewDate;
};
oFF.OlapDataProviderActionManifest.prototype.getStage = function()
{
	return this.m_stage;
};
oFF.OlapDataProviderActionManifest.prototype.parseStructure = function(manifestStructure)
{
	if (oFF.XStringUtils.isNullOrEmpty(this.m_name))
	{
		this.m_name = manifestStructure.getStringByKey(oFF.OlapDataProviderActionManifestConstants.NAME_KEY);
	}
	this.m_displayName = manifestStructure.getStringByKey(oFF.OlapDataProviderActionManifestConstants.DISPLAY_NAME_KEY);
	this.m_description = manifestStructure.getStringByKey(oFF.OlapDataProviderActionManifestConstants.DESCRIPTION_KEY);
	this.m_category = manifestStructure.getStringByKey(oFF.OlapDataProviderActionManifestConstants.CATEGORY_KEY);
	this.m_stage = manifestStructure.getStringByKey(oFF.OlapDataProviderActionManifestConstants.STAGE_KEY);
	this.m_reviewDate = manifestStructure.getStringByKey(oFF.OlapDataProviderActionManifestConstants.REVIEW_DATE_KEY);
	if (manifestStructure.containsKey(oFF.OlapDataProviderActionManifestConstants.PARAMETERS_KEY))
	{
		let propertiesStruct = manifestStructure.getListByKey(oFF.OlapDataProviderActionManifestConstants.PARAMETERS_KEY);
		this.m_parameters = oFF.CoPropertyFactory.processAllPropertiesFromList(propertiesStruct).getValuesAsReadOnlyList();
	}
};
oFF.OlapDataProviderActionManifest.prototype.setupByStructure = function(struct)
{
	this.setupInternal();
	this.parseStructure(struct);
};
oFF.OlapDataProviderActionManifest.prototype.setupInternal = function()
{
	this.m_parameters = oFF.XList.create();
};
oFF.OlapDataProviderActionManifest.prototype.toString = function()
{
	return this.m_name;
};

oFF.OlapDataProviderProperties = function() {};
oFF.OlapDataProviderProperties.prototype = new oFF.XObject();
oFF.OlapDataProviderProperties.prototype._ff_c = "OlapDataProviderProperties";

oFF.OlapDataProviderProperties.createProperties = function()
{
	let obj = new oFF.OlapDataProviderProperties();
	obj.setupProperties();
	return obj;
};
oFF.OlapDataProviderProperties.prototype.m_currentValues = null;
oFF.OlapDataProviderProperties.prototype.m_propertyListeners = null;
oFF.OlapDataProviderProperties.prototype.getAllProperties = function()
{
	return this.m_currentValues;
};
oFF.OlapDataProviderProperties.prototype.getPropertyListeners = function()
{
	return this.m_propertyListeners;
};
oFF.OlapDataProviderProperties.prototype.getPropertyValue = function(name)
{
	let propertyType = oFF.OlapDataProviderPropertyType.lookup(name);
	if (oFF.isNull(propertyType))
	{
		let unknownMessage = oFF.XStringUtils.concatenate2("[dp property] unknown property: ", name);
		throw oFF.XException.createIllegalArgumentException(unknownMessage);
	}
	return this.m_currentValues.getByKey(name);
};
oFF.OlapDataProviderProperties.prototype.releaseObject = function()
{
	this.m_currentValues = oFF.XCollectionUtils.releaseEntriesAndCollectionIfNotNull(this.m_currentValues);
	this.m_propertyListeners = oFF.XObjectExt.release(this.m_propertyListeners);
	oFF.XObject.prototype.releaseObject.call( this );
};
oFF.OlapDataProviderProperties.prototype.setPropertyValue = function(name, value)
{
	this.setPropertyValueWithCorrelationId(name, value, oFF.XGuid.getGuid());
};
oFF.OlapDataProviderProperties.prototype.setPropertyValueInternal = function(name, value)
{
	let propertyType = oFF.OlapDataProviderPropertyType.lookup(name);
	if (oFF.isNull(propertyType))
	{
		let nullMessage = oFF.XStringUtils.concatenate2("[dp property] provided value was null. property: ", name);
		throw oFF.XException.createIllegalArgumentException(nullMessage);
	}
	let expectedValueType = propertyType.getValueType();
	if (expectedValueType !== value.getValueType())
	{
		let buffer = oFF.XStringBuffer.create();
		buffer.append("[dp property] value type mismatch. ");
		buffer.append("property: ").append(name).append(", ");
		buffer.append("expected: ").append(expectedValueType.getName()).append(", ");
		buffer.append("actual: ").append(value.getValueType().getName());
		throw oFF.XException.createIllegalArgumentException(buffer.toString());
	}
	if (value.isEqualTo(this.m_currentValues.getByKey(name)))
	{
		return false;
	}
	this.m_currentValues.put(name, value);
	return true;
};
oFF.OlapDataProviderProperties.prototype.setPropertyValueSilently = function(name, value)
{
	this.setPropertyValueInternal(name, value);
};
oFF.OlapDataProviderProperties.prototype.setPropertyValueWithCorrelationId = function(name, value, correlationId)
{
	if (this.setPropertyValueInternal(name, value))
	{
		this.m_propertyListeners.accept(name, correlationId);
	}
};
oFF.OlapDataProviderProperties.prototype.setupProperties = function()
{
	this.m_currentValues = oFF.XHashMapByString.create();
	this.m_propertyListeners = oFF.XBiConsumerCollection.create();
};

oFF.DfOlapDataProviderActionsCollection = function() {};
oFF.DfOlapDataProviderActionsCollection.prototype = new oFF.XObject();
oFF.DfOlapDataProviderActionsCollection.prototype._ff_c = "DfOlapDataProviderActionsCollection";

oFF.DfOlapDataProviderActionsCollection.prototype.m_actions = null;
oFF.DfOlapDataProviderActionsCollection.prototype.getActions = function()
{
	return this.m_actions;
};
oFF.DfOlapDataProviderActionsCollection.prototype.releaseObject = function()
{
	this.m_actions = null;
	oFF.XObject.prototype.releaseObject.call( this );
};
oFF.DfOlapDataProviderActionsCollection.prototype.setupCollection = function(actions)
{
	this.m_actions = actions;
};

oFF.OlapDataProviderActionResult = function() {};
oFF.OlapDataProviderActionResult.prototype = new oFF.XObject();
oFF.OlapDataProviderActionResult.prototype._ff_c = "OlapDataProviderActionResult";

oFF.OlapDataProviderActionResult.create = function(actionName)
{
	let obj = new oFF.OlapDataProviderActionResult();
	obj.setupExt(actionName);
	return obj;
};
oFF.OlapDataProviderActionResult.createGenericCopy = function(other)
{
	let obj = new oFF.OlapDataProviderActionResult();
	obj.setupExt(other.getActionName());
	obj.m_logParamNames = other.getLogParamsNames().createListCopy();
	obj.m_logParamValues = other.getLogParamsValues().createListCopy();
	obj.m_changes.mergeChanges(other.getChanges());
	return obj;
};
oFF.OlapDataProviderActionResult.prototype.m_actionName = null;
oFF.OlapDataProviderActionResult.prototype.m_changes = null;
oFF.OlapDataProviderActionResult.prototype.m_logParamNames = null;
oFF.OlapDataProviderActionResult.prototype.m_logParamValues = null;
oFF.OlapDataProviderActionResult.prototype.m_returnValue = null;
oFF.OlapDataProviderActionResult.prototype.addLogParameter = function(parameterName, parameterValue)
{
	this.m_logParamNames.add(parameterName);
	this.m_logParamValues.add(parameterValue);
};
oFF.OlapDataProviderActionResult.prototype.getActionName = function()
{
	return this.m_actionName;
};
oFF.OlapDataProviderActionResult.prototype.getChanges = function()
{
	return this.m_changes;
};
oFF.OlapDataProviderActionResult.prototype.getChangesBase = function()
{
	return this.m_changes;
};
oFF.OlapDataProviderActionResult.prototype.getLogParamsNames = function()
{
	return this.m_logParamNames;
};
oFF.OlapDataProviderActionResult.prototype.getLogParamsValues = function()
{
	return this.m_logParamValues;
};
oFF.OlapDataProviderActionResult.prototype.getReturnValue = function()
{
	return this.m_returnValue;
};
oFF.OlapDataProviderActionResult.prototype.releaseObject = function()
{
	this.m_actionName = null;
	this.m_logParamNames = oFF.XObjectExt.release(this.m_logParamNames);
	this.m_logParamValues = oFF.XObjectExt.release(this.m_logParamValues);
	this.m_changes = oFF.XObjectExt.release(this.m_changes);
	oFF.XObject.prototype.releaseObject.call( this );
};
oFF.OlapDataProviderActionResult.prototype.setReturnValue = function(returnValue)
{
	this.m_returnValue = returnValue;
};
oFF.OlapDataProviderActionResult.prototype.setupExt = function(actionName)
{
	this.m_actionName = actionName;
	this.m_logParamNames = oFF.XList.create();
	this.m_logParamValues = oFF.XList.create();
	this.m_changes = oFF.OlapDataProviderActionChanges.create();
};

oFF.OdpStringMultiActionCall = function() {};
oFF.OdpStringMultiActionCall.prototype = new oFF.OdpStringMultiActionSequence();
oFF.OdpStringMultiActionCall.prototype._ff_c = "OdpStringMultiActionCall";

oFF.OdpStringMultiActionCall.createActionCall = function(context, f)
{
	let obj = new oFF.OdpStringMultiActionCall();
	obj.m_context = context;
	obj.m_function = f;
	return obj;
};
oFF.OdpStringMultiActionCall.prototype.m_context = null;
oFF.OdpStringMultiActionCall.prototype.m_function = null;
oFF.OdpStringMultiActionCall.prototype.execute = function(context)
{
	if (!context.getActions().containsKey(this.m_context))
	{
		return oFF.XPromise.reject(oFF.XError.create(oFF.XStringUtils.concatenate3("Unknown Context '", this.m_context, "'")));
	}
	return this.evalParameters(context, oFF.XList.create(), 0).onThenPromise((params) => {
		return context.getActions().getByKey(this.m_context).executeActionByName(this.m_function, params).onThenExt((res) => {
			let sres = oFF.notNull(res) ? res.toString() : "";
			context.pushResult(sres);
			return sres;
		});
	});
};
oFF.OdpStringMultiActionCall.prototype.toString = function()
{
	return this.m_function;
};

oFF.OlapDataProviderConfiguration = function() {};
oFF.OlapDataProviderConfiguration.prototype = new oFF.XObject();
oFF.OlapDataProviderConfiguration.prototype._ff_c = "OlapDataProviderConfiguration";

oFF.OlapDataProviderConfiguration.VIZ_ACTIVE = "Active";
oFF.OlapDataProviderConfiguration.VIZ_CHART_TYPE = "ChartType";
oFF.OlapDataProviderConfiguration.VIZ_NAME = "Name";
oFF.OlapDataProviderConfiguration.VIZ_PROTOCOL = "Protocol";
oFF.OlapDataProviderConfiguration.VIZ_TYPE = "Type";
oFF.OlapDataProviderConfiguration.createConfig = function(application, dataSource)
{
	let obj = new oFF.OlapDataProviderConfiguration();
	obj.setupConfig(application.getProcess(), application, dataSource);
	return obj;
};
oFF.OlapDataProviderConfiguration.createConfigForEmptyDataProvider = function(application)
{
	let obj = new oFF.OlapDataProviderConfiguration();
	obj.setupConfig(application.getProcess(), application, null);
	return obj;
};
oFF.OlapDataProviderConfiguration.createConfigFromJson = function(application, configJson)
{
	let obj = new oFF.OlapDataProviderConfiguration();
	obj.setupConfig(application.getProcess(), application, null);
	obj.deserializeJson(configJson);
	return obj;
};
oFF.OlapDataProviderConfiguration.createDefaultConfig = function(process, dataProviderName)
{
	let obj = new oFF.OlapDataProviderConfiguration();
	let application = oFF.OlapDataProviderConfiguration.getOrCreateApplicationWithSystemLandscape(process);
	obj.setupConfig(process, application, null);
	obj.setDataProviderName(dataProviderName);
	return obj;
};
oFF.OlapDataProviderConfiguration.getOrCreateApplicationWithSystemLandscape = function(process)
{
	let application = oFF.Application.getApplicationFromProcess(process);
	if (oFF.notNull(application) && application.getSystemLandscape() !== null)
	{
		return application;
	}
	let newApplication = oFF.ApplicationFactory.createApplication(process);
	newApplication.setSystemLandscape(process.getSystemLandscape());
	return newApplication;
};
oFF.OlapDataProviderConfiguration.prototype.m_addToDataProviderPool = false;
oFF.OlapDataProviderConfiguration.prototype.m_application = null;
oFF.OlapDataProviderConfiguration.prototype.m_autoSubmitEnabled = false;
oFF.OlapDataProviderConfiguration.prototype.m_connectionConfig = null;
oFF.OlapDataProviderConfiguration.prototype.m_dataProviderName = null;
oFF.OlapDataProviderConfiguration.prototype.m_dataReadOnly = false;
oFF.OlapDataProviderConfiguration.prototype.m_defaultWaitTimeout = 0;
oFF.OlapDataProviderConfiguration.prototype.m_eventBufferTimeout = 0;
oFF.OlapDataProviderConfiguration.prototype.m_existingQueryManager = null;
oFF.OlapDataProviderConfiguration.prototype.m_forceLoggingEnabled = false;
oFF.OlapDataProviderConfiguration.prototype.m_hooks = null;
oFF.OlapDataProviderConfiguration.prototype.m_loadActionManifests = false;
oFF.OlapDataProviderConfiguration.prototype.m_metadataCacheEnabled = false;
oFF.OlapDataProviderConfiguration.prototype.m_metadataConfiguration = null;
oFF.OlapDataProviderConfiguration.prototype.m_process = null;
oFF.OlapDataProviderConfiguration.prototype.m_repoDeltaFormatEnabled = false;
oFF.OlapDataProviderConfiguration.prototype.m_semanticInfo = null;
oFF.OlapDataProviderConfiguration.prototype.m_startAsConnected = false;
oFF.OlapDataProviderConfiguration.prototype.m_startWithDefaultHooksEnabled = false;
oFF.OlapDataProviderConfiguration.prototype.m_strictModelDependencyOnInsights = false;
oFF.OlapDataProviderConfiguration.prototype.m_visualizationFillStrategy = null;
oFF.OlapDataProviderConfiguration.prototype.createConfigCopy = function()
{
	let cloneConfig = new oFF.OlapDataProviderConfiguration();
	cloneConfig.m_process = this.m_process;
	cloneConfig.m_application = this.m_application;
	cloneConfig.m_hooks = oFF.OlapDataProviderHooks.createHooksWithOther(this.m_hooks);
	cloneConfig.m_connectionConfig = this.m_connectionConfig.createConnectionCopy();
	cloneConfig.m_existingQueryManager = this.m_existingQueryManager;
	cloneConfig.m_dataProviderName = this.m_dataProviderName;
	cloneConfig.m_forceLoggingEnabled = this.m_forceLoggingEnabled;
	cloneConfig.m_repoDeltaFormatEnabled = this.m_repoDeltaFormatEnabled;
	cloneConfig.m_dataReadOnly = this.m_dataReadOnly;
	cloneConfig.m_autoSubmitEnabled = this.m_autoSubmitEnabled;
	cloneConfig.m_metadataCacheEnabled = this.m_metadataCacheEnabled;
	cloneConfig.m_eventBufferTimeout = this.m_eventBufferTimeout;
	cloneConfig.m_defaultWaitTimeout = this.m_defaultWaitTimeout;
	cloneConfig.m_startAsConnected = this.m_startAsConnected;
	cloneConfig.m_startWithDefaultHooksEnabled = this.m_startWithDefaultHooksEnabled;
	cloneConfig.m_loadActionManifests = this.m_loadActionManifests;
	cloneConfig.m_addToDataProviderPool = this.m_addToDataProviderPool;
	cloneConfig.m_visualizationFillStrategy = this.m_visualizationFillStrategy;
	cloneConfig.m_semanticInfo = oFF.PrUtils.deepCopyElement(this.m_semanticInfo);
	return cloneConfig;
};
oFF.OlapDataProviderConfiguration.prototype.deserializeJson = function(configJson)
{
	let serializer = oFF.OdpConfigurationSerializer.createSerializer(this.m_process);
	serializer.deserializeConfigTo(configJson, this);
	oFF.XObjectExt.release(serializer);
};
oFF.OlapDataProviderConfiguration.prototype.getApplication = function()
{
	return this.m_application;
};
oFF.OlapDataProviderConfiguration.prototype.getDataProviderName = function()
{
	return this.m_dataProviderName;
};
oFF.OlapDataProviderConfiguration.prototype.getDefaultWaitTimeout = function()
{
	return this.m_defaultWaitTimeout;
};
oFF.OlapDataProviderConfiguration.prototype.getEventBufferTimeout = function()
{
	return this.m_eventBufferTimeout;
};
oFF.OlapDataProviderConfiguration.prototype.getExistingQueryManager = function()
{
	return this.m_existingQueryManager;
};
oFF.OlapDataProviderConfiguration.prototype.getHooks = function()
{
	return this.m_hooks;
};
oFF.OlapDataProviderConfiguration.prototype.getMetadataConfiguration = function()
{
	return this.m_metadataConfiguration;
};
oFF.OlapDataProviderConfiguration.prototype.getOlapStartConnection = function()
{
	return this.m_connectionConfig;
};
oFF.OlapDataProviderConfiguration.prototype.getProcess = function()
{
	return this.m_process;
};
oFF.OlapDataProviderConfiguration.prototype.getSemanticInfo = function()
{
	return this.m_semanticInfo;
};
oFF.OlapDataProviderConfiguration.prototype.getStartConnection = function()
{
	return this.m_connectionConfig;
};
oFF.OlapDataProviderConfiguration.prototype.getStartConnectionDataSource = function()
{
	return this.m_connectionConfig.getDataSource();
};
oFF.OlapDataProviderConfiguration.prototype.getStartingFillStrategy = function()
{
	return this.m_visualizationFillStrategy;
};
oFF.OlapDataProviderConfiguration.prototype.isAutoSubmitEnabled = function()
{
	return this.m_autoSubmitEnabled;
};
oFF.OlapDataProviderConfiguration.prototype.isDataReadOnly = function()
{
	return this.m_dataReadOnly;
};
oFF.OlapDataProviderConfiguration.prototype.isForceLoggingEnabled = function()
{
	return this.m_forceLoggingEnabled;
};
oFF.OlapDataProviderConfiguration.prototype.isLoadingActionManifests = function()
{
	return this.m_loadActionManifests;
};
oFF.OlapDataProviderConfiguration.prototype.isMetadataCacheEnabled = function()
{
	return this.m_metadataCacheEnabled;
};
oFF.OlapDataProviderConfiguration.prototype.isRepoDeltaEnabled = function()
{
	return this.m_repoDeltaFormatEnabled;
};
oFF.OlapDataProviderConfiguration.prototype.isStartAsConnected = function()
{
	return this.m_startAsConnected;
};
oFF.OlapDataProviderConfiguration.prototype.isStartWithAutoFetch = function()
{
	return this.m_connectionConfig.isStartWithAutoFetch();
};
oFF.OlapDataProviderConfiguration.prototype.isStrictModelDependencyOnInsights = function()
{
	return this.m_strictModelDependencyOnInsights;
};
oFF.OlapDataProviderConfiguration.prototype.releaseObject = function()
{
	this.m_process = null;
	this.m_application = null;
	this.m_connectionConfig = oFF.XObjectExt.release(this.m_connectionConfig);
	this.m_metadataConfiguration = oFF.XObjectExt.release(this.m_metadataConfiguration);
	this.m_hooks = oFF.XObjectExt.release(this.m_hooks);
	this.m_existingQueryManager = null;
	oFF.XObject.prototype.releaseObject.call( this );
};
oFF.OlapDataProviderConfiguration.prototype.serializeJson = function()
{
	let serializer = oFF.OdpConfigurationSerializer.createSerializer(this.m_process);
	let result = serializer.serializeConfig(this);
	oFF.XObjectExt.release(serializer);
	return result;
};
oFF.OlapDataProviderConfiguration.prototype.setApplication = function(application)
{
	this.m_application = application;
};
oFF.OlapDataProviderConfiguration.prototype.setAutoSubmitEnabled = function(autoSubmitEnabled)
{
	this.m_autoSubmitEnabled = autoSubmitEnabled;
};
oFF.OlapDataProviderConfiguration.prototype.setDataProviderName = function(dataProviderName)
{
	this.m_dataProviderName = dataProviderName;
};
oFF.OlapDataProviderConfiguration.prototype.setDataReadOnly = function(dataReadOnly)
{
	this.m_dataReadOnly = dataReadOnly;
};
oFF.OlapDataProviderConfiguration.prototype.setDefaultWaitTimeout = function(defaultWaitTimeout)
{
	this.m_defaultWaitTimeout = defaultWaitTimeout;
};
oFF.OlapDataProviderConfiguration.prototype.setEventBufferTimeout = function(eventBufferTimeout)
{
	this.m_eventBufferTimeout = eventBufferTimeout;
};
oFF.OlapDataProviderConfiguration.prototype.setExistingQueryManager = function(existingQueryManager)
{
	this.m_existingQueryManager = existingQueryManager;
	this.m_connectionConfig.setDataSource(existingQueryManager.getDataSource());
};
oFF.OlapDataProviderConfiguration.prototype.setForceLoggingEnabled = function(forceLoggingEnabled)
{
	this.m_forceLoggingEnabled = forceLoggingEnabled;
};
oFF.OlapDataProviderConfiguration.prototype.setLoadingActionManifests = function(loadingActionManifests)
{
	this.m_loadActionManifests = loadingActionManifests;
};
oFF.OlapDataProviderConfiguration.prototype.setMetadataCacheEnabled = function(metadataCacheEnabled)
{
	this.m_metadataCacheEnabled = metadataCacheEnabled;
};
oFF.OlapDataProviderConfiguration.prototype.setMetadataConfiguration = function(metadataConfiguration)
{
	this.m_metadataConfiguration = metadataConfiguration;
};
oFF.OlapDataProviderConfiguration.prototype.setProcess = function(process)
{
	this.m_process = process;
};
oFF.OlapDataProviderConfiguration.prototype.setRepoDeltaEnabled = function(repoDeltaEnabled)
{
	this.m_repoDeltaFormatEnabled = repoDeltaEnabled;
};
oFF.OlapDataProviderConfiguration.prototype.setSemanticInfo = function(semanticInfo)
{
	this.m_semanticInfo = semanticInfo;
};
oFF.OlapDataProviderConfiguration.prototype.setShouldAddToDataProviderPool = function(addedToDataProviderPool)
{
	this.m_addToDataProviderPool = addedToDataProviderPool;
};
oFF.OlapDataProviderConfiguration.prototype.setShouldStartWithDefaultHooks = function(startWithDefaultHooks)
{
	this.m_startWithDefaultHooksEnabled = startWithDefaultHooks;
};
oFF.OlapDataProviderConfiguration.prototype.setStartAsConnected = function(startAsConnected)
{
	this.m_startAsConnected = startAsConnected;
};
oFF.OlapDataProviderConfiguration.prototype.setStartConnection = function(connectionConfig)
{
	this.m_connectionConfig = connectionConfig;
};
oFF.OlapDataProviderConfiguration.prototype.setStartConnectionDataSource = function(dataSource)
{
	this.m_connectionConfig.setDataSource(dataSource);
};
oFF.OlapDataProviderConfiguration.prototype.setStartWithAutoFetch = function(startWithAutoFetch)
{
	this.m_connectionConfig.setStartWithAutoFetch(startWithAutoFetch);
};
oFF.OlapDataProviderConfiguration.prototype.setStartWithFillStrategy = function(fillStrategy)
{
	this.m_visualizationFillStrategy = fillStrategy;
};
oFF.OlapDataProviderConfiguration.prototype.setStrictModelDependencyOnInsights = function(strictModelDependencyOnInsights)
{
	this.m_strictModelDependencyOnInsights = strictModelDependencyOnInsights;
};
oFF.OlapDataProviderConfiguration.prototype.setupConfig = function(process, application, dataSource)
{
	this.setup();
	this.m_process = process;
	this.m_application = application;
	this.m_connectionConfig = oFF.OlapDataProviderConnection.createConnection(application);
	this.m_connectionConfig.setDataSource(dataSource);
	this.m_hooks = oFF.OlapDataProviderHooks.createHooks();
	this.setupDefaults();
};
oFF.OlapDataProviderConfiguration.prototype.setupDefaults = function()
{
	this.setDataReadOnly(true);
	this.setAutoSubmitEnabled(true);
	this.setStartAsConnected(true);
	this.setEventBufferTimeout(12);
	this.setDefaultWaitTimeout(10);
	this.setShouldAddToDataProviderPool(true);
	this.setShouldStartWithDefaultHooks(true);
	this.setLoadingActionManifests(true);
	this.setStrictModelDependencyOnInsights(true);
	if (this.m_process.getDefaultSyncType() === oFF.SyncType.BLOCKING)
	{
		this.setEventBufferTimeout(0);
		this.setDefaultWaitTimeout(0);
	}
};
oFF.OlapDataProviderConfiguration.prototype.shouldAddToDataProviderPool = function()
{
	return this.m_addToDataProviderPool;
};
oFF.OlapDataProviderConfiguration.prototype.shouldStartWithDefaultHooks = function()
{
	return this.m_startWithDefaultHooksEnabled;
};
oFF.OlapDataProviderConfiguration.prototype.toString = function()
{
	if (oFF.notNull(this.m_dataProviderName))
	{
		return oFF.XStringUtils.concatenate2("dp name: ", this.getDataProviderName());
	}
	if (oFF.notNull(this.m_application) && this.m_application.getApplicationName() !== null)
	{
		return oFF.XStringUtils.concatenate2("app name: ", this.m_application.getApplicationName());
	}
	if (oFF.notNull(this.m_process) && this.m_process.getProcessId() !== null)
	{
		return oFF.XStringUtils.concatenate2("process id: ", this.m_process.getProcessId());
	}
	return "empty config";
};

oFF.OlapDataProviderActionChanges = function() {};
oFF.OlapDataProviderActionChanges.prototype = new oFF.XObject();
oFF.OlapDataProviderActionChanges.prototype._ff_c = "OlapDataProviderActionChanges";

oFF.OlapDataProviderActionChanges.create = function()
{
	let obj = new oFF.OlapDataProviderActionChanges();
	obj.setupExt();
	return obj;
};
oFF.OlapDataProviderActionChanges.prototype.m_changedComponentTypes = null;
oFF.OlapDataProviderActionChanges.prototype.m_changedEventTypes = null;
oFF.OlapDataProviderActionChanges.prototype.m_changedVisualizationNames = null;
oFF.OlapDataProviderActionChanges.prototype.m_correlationId = null;
oFF.OlapDataProviderActionChanges.prototype.m_external = false;
oFF.OlapDataProviderActionChanges.prototype.addChangedEventType = function(eventType)
{
	this.m_changedEventTypes.add(eventType);
};
oFF.OlapDataProviderActionChanges.prototype.addChangedOlapComponentType = function(olapComponentType)
{
	this.m_changedComponentTypes.add(olapComponentType);
};
oFF.OlapDataProviderActionChanges.prototype.addChangedVisualizationName = function(name)
{
	this.m_changedVisualizationNames.add(name);
};
oFF.OlapDataProviderActionChanges.prototype.getChangedComponentTypes = function()
{
	return this.m_changedComponentTypes;
};
oFF.OlapDataProviderActionChanges.prototype.getChangedEventTypes = function()
{
	return this.m_changedEventTypes;
};
oFF.OlapDataProviderActionChanges.prototype.getChangedVisualizationNames = function()
{
	return this.m_changedVisualizationNames;
};
oFF.OlapDataProviderActionChanges.prototype.getCorrelationId = function()
{
	return this.m_correlationId;
};
oFF.OlapDataProviderActionChanges.prototype.isExternal = function()
{
	return this.m_external;
};
oFF.OlapDataProviderActionChanges.prototype.mergeChanges = function(otherChanges)
{
	this.m_external = this.m_external || otherChanges.isExternal();
	this.m_changedEventTypes.addAll(otherChanges.getChangedEventTypes());
	this.m_changedComponentTypes.addAll(otherChanges.getChangedComponentTypes());
	this.m_changedVisualizationNames.addAll(otherChanges.getChangedVisualizationNames());
};
oFF.OlapDataProviderActionChanges.prototype.releaseObject = function()
{
	this.m_changedEventTypes = oFF.XObjectExt.release(this.m_changedEventTypes);
	this.m_changedVisualizationNames = oFF.XObjectExt.release(this.m_changedVisualizationNames);
	this.m_changedComponentTypes = oFF.XObjectExt.release(this.m_changedComponentTypes);
	oFF.XObject.prototype.releaseObject.call( this );
};
oFF.OlapDataProviderActionChanges.prototype.setCorrelationId = function(correlationId)
{
	this.m_correlationId = correlationId;
};
oFF.OlapDataProviderActionChanges.prototype.setExternal = function(external)
{
	this.m_external = external;
};
oFF.OlapDataProviderActionChanges.prototype.setupExt = function()
{
	this.m_changedEventTypes = oFF.XSetOfNameObject.create();
	this.m_changedVisualizationNames = oFF.XHashSetOfString.create();
	this.m_changedComponentTypes = oFF.XSetOfNameObject.create();
};

oFF.OlapDataProviderAnalysisActionsCollection = function() {};
oFF.OlapDataProviderAnalysisActionsCollection.prototype = new oFF.DfOlapDataProviderActionsCollection();
oFF.OlapDataProviderAnalysisActionsCollection.prototype._ff_c = "OlapDataProviderAnalysisActionsCollection";

oFF.OlapDataProviderAnalysisActionsCollection.NAME = "AnalysisActions";
oFF.OlapDataProviderAnalysisActionsCollection.createCollection = function(actions)
{
	let obj = new oFF.OlapDataProviderAnalysisActionsCollection();
	obj.setupCollection(actions);
	return obj;
};
oFF.OlapDataProviderAnalysisActionsCollection.prototype.getName = function()
{
	return oFF.OlapDataProviderAnalysisActionsCollection.NAME;
};
oFF.OlapDataProviderAnalysisActionsCollection.prototype.getQueryMetadata = function()
{
	let action = oFF.OdpAnalysisActionGetQueryMetadata.create();
	return this.getActions().performTypedAction(action);
};

oFF.OlapDataProviderAxisActionsCollection = function() {};
oFF.OlapDataProviderAxisActionsCollection.prototype = new oFF.DfOlapDataProviderActionsCollection();
oFF.OlapDataProviderAxisActionsCollection.prototype._ff_c = "OlapDataProviderAxisActionsCollection";

oFF.OlapDataProviderAxisActionsCollection.NAME = "AxisActions";
oFF.OlapDataProviderAxisActionsCollection.createCollection = function(actions)
{
	let obj = new oFF.OlapDataProviderAxisActionsCollection();
	obj.setupCollection(actions);
	return obj;
};
oFF.OlapDataProviderAxisActionsCollection.prototype.getName = function()
{
	return oFF.OlapDataProviderAxisActionsCollection.NAME;
};
oFF.OlapDataProviderAxisActionsCollection.prototype.moveDimensionAfter = function(dimensionName, targetDimensionName)
{
	let action = oFF.OdpAxisActionMoveDimensionAfter.create();
	action.setTypedParameters(dimensionName, targetDimensionName);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderAxisActionsCollection.prototype.moveDimensionBefore = function(dimensionName, targetDimensionName)
{
	let action = oFF.OdpAxisActionMoveDimensionBefore.create();
	action.setTypedParameters(dimensionName, targetDimensionName);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderAxisActionsCollection.prototype.moveDimensionToAxis = function(dimensionName, axisType)
{
	let action = oFF.OdpAxisActionMoveDimensionToAxis.create();
	action.setTypedParameters(dimensionName, axisType);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderAxisActionsCollection.prototype.moveDimensionToColumns = function(dimensionName)
{
	let action = oFF.OdpAxisActionMoveDimensionToColumns.create();
	action.setTypedParameters(dimensionName);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderAxisActionsCollection.prototype.moveDimensionToRows = function(dimensionName)
{
	let action = oFF.OdpAxisActionMoveDimensionToRows.create();
	action.setTypedParameters(dimensionName);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderAxisActionsCollection.prototype.removeDimension = function(dimensionName)
{
	let action = oFF.OdpAxisActionRemoveDimension.create();
	action.setTypedParameters(dimensionName);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderAxisActionsCollection.prototype.swapAxis = function()
{
	let action = oFF.OdpAxisActionSwapAxis.create();
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderAxisActionsCollection.prototype.swapDimensions = function(dimensionName1, dimensionName2)
{
	let action = oFF.OdpAxisActionSwapDimensions.create();
	action.setTypedParameters(dimensionName1, dimensionName2);
	return this.getActions().performTypedAction(action);
};

oFF.OlapDataProviderDimensionActionsCollection = function() {};
oFF.OlapDataProviderDimensionActionsCollection.prototype = new oFF.DfOlapDataProviderActionsCollection();
oFF.OlapDataProviderDimensionActionsCollection.prototype._ff_c = "OlapDataProviderDimensionActionsCollection";

oFF.OlapDataProviderDimensionActionsCollection.NAME = "DimensionActions";
oFF.OlapDataProviderDimensionActionsCollection.createCollection = function(actions)
{
	let obj = new oFF.OlapDataProviderDimensionActionsCollection();
	obj.setupCollection(actions);
	return obj;
};
oFF.OlapDataProviderDimensionActionsCollection.prototype.getName = function()
{
	return oFF.OlapDataProviderDimensionActionsCollection.NAME;
};
oFF.OlapDataProviderDimensionActionsCollection.prototype.releaseObject = function()
{
	oFF.DfOlapDataProviderActionsCollection.prototype.releaseObject.call( this );
};
oFF.OlapDataProviderDimensionActionsCollection.prototype.setupCollection = function(actions)
{
	oFF.DfOlapDataProviderActionsCollection.prototype.setupCollection.call( this , actions);
};

oFF.OlapDataProviderFilterActionsCollection = function() {};
oFF.OlapDataProviderFilterActionsCollection.prototype = new oFF.DfOlapDataProviderActionsCollection();
oFF.OlapDataProviderFilterActionsCollection.prototype._ff_c = "OlapDataProviderFilterActionsCollection";

oFF.OlapDataProviderFilterActionsCollection.NAME = "FilterActions";
oFF.OlapDataProviderFilterActionsCollection.createCollection = function(actions)
{
	let obj = new oFF.OlapDataProviderFilterActionsCollection();
	obj.setupCollection(actions);
	return obj;
};
oFF.OlapDataProviderFilterActionsCollection.prototype.addNewElement = function(layer, parentUniqueId, type)
{
	let action = oFF.OdpFilterActionAddNewElement.create();
	action.setTypedParameters(layer, parentUniqueId, type);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderFilterActionsCollection.prototype.addNewOperation = function(layer, parentUniqueId)
{
	let action = oFF.OdpFilterActionAddNewOperation.create();
	action.setTypedParameters(layer, parentUniqueId);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderFilterActionsCollection.prototype.addSingleMemberFilter = function(dimensionName, operator, memberName)
{
	let action = oFF.OdpFilterActionAddSingleMemberFilter.create();
	action.setTypedParameters(dimensionName, operator, memberName);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderFilterActionsCollection.prototype.applyComplexFilters = function(dynamicFilterSerialization)
{
	let action = oFF.OdpFilterActionApplyComplexFilters.create();
	action.setTypedParameters(dynamicFilterSerialization);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderFilterActionsCollection.prototype.canElementHaveChildren = function(layer, elementUniqueId)
{
	let action = oFF.OdpFilterActionCanElementHaveChildren.create();
	action.setTypedParameters(layer, elementUniqueId);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderFilterActionsCollection.prototype.canElementHaveOperations = function(layer, elementUniqueId)
{
	let action = oFF.OdpFilterActionCanElementHaveOperations.create();
	action.setTypedParameters(layer, elementUniqueId);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderFilterActionsCollection.prototype.clearElementChildren = function(layer, parentUniqueId)
{
	let action = oFF.OdpFilterActionClearElementChildren.create();
	action.setTypedParameters(layer, parentUniqueId);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderFilterActionsCollection.prototype.getElementChildren = function(layer, parentUniqueId)
{
	let action = oFF.OdpFilterActionGetElementChildren.create();
	action.setTypedParameters(layer, parentUniqueId);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderFilterActionsCollection.prototype.getElementType = function(layer, elementUniqueId)
{
	let action = oFF.OdpFilterActionGetElementType.create();
	action.setTypedParameters(layer, elementUniqueId);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderFilterActionsCollection.prototype.getLayers = function()
{
	let action = oFF.OdpFilterActionGetLayers.create();
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderFilterActionsCollection.prototype.getName = function()
{
	return oFF.OlapDataProviderFilterActionsCollection.NAME;
};
oFF.OlapDataProviderFilterActionsCollection.prototype.isOperation = function(layer, elementUniqueId)
{
	let action = oFF.OdpFilterActionIsOperation.create();
	action.setTypedParameters(layer, elementUniqueId);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderFilterActionsCollection.prototype.removeElement = function(layer, elementUniqueId)
{
	let action = oFF.OdpFilterActionRemoveElement.create();
	action.setTypedParameters(layer, elementUniqueId);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderFilterActionsCollection.prototype.removeSingleMemberFilter = function(dimensionName, operator, memberName)
{
	let action = oFF.OdpFilterActionRemoveSingleMemberFilter.create();
	action.setTypedParameters(dimensionName, operator, memberName);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderFilterActionsCollection.prototype.setElementField = function(layer, elementUniqueId, fieldName)
{
	let action = oFF.OdpFilterActionSetElementField.create();
	action.setTypedParameters(layer, elementUniqueId, fieldName);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderFilterActionsCollection.prototype.setElementHierarchy = function(layer, elementUniqueId, hierarchyName)
{
	let action = oFF.OdpFilterActionSetElementHierarchy.create();
	action.setTypedParameters(layer, elementUniqueId, hierarchyName);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderFilterActionsCollection.prototype.setNewRootElement = function(layer, type)
{
	let action = oFF.OdpFilterActionSetNewRootElement.create();
	action.setTypedParameters(layer, type);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderFilterActionsCollection.prototype.setOperationOperand = function(layer, operationUniqueId, index, value)
{
	let action = oFF.OdpFilterActionSetOperationOperand.create();
	action.setTypedParameters(layer, operationUniqueId, index, value);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderFilterActionsCollection.prototype.setOperationOperator = function(layer, operationUniqueId, operator)
{
	let action = oFF.OdpFilterActionSetOperationOperator.create();
	action.setTypedParameters(layer, operationUniqueId, operator);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderFilterActionsCollection.prototype.setOperationSign = function(layer, operationUniqueId, sign)
{
	let action = oFF.OdpFilterActionSetOperationSign.create();
	action.setTypedParameters(layer, operationUniqueId, sign);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderFilterActionsCollection.prototype.setSimpleEqualFilterList = function(dimensionName, valueList, hierarchyName, useExclude)
{
	let action = oFF.OdpFilterActionSetSimpleEqualFilterList.create();
	action.setTypedParameters(dimensionName, valueList, hierarchyName, useExclude);
	return this.getActions().performTypedAction(action);
};

oFF.OlapDataProviderHierarchyActionsCollection = function() {};
oFF.OlapDataProviderHierarchyActionsCollection.prototype = new oFF.DfOlapDataProviderActionsCollection();
oFF.OlapDataProviderHierarchyActionsCollection.prototype._ff_c = "OlapDataProviderHierarchyActionsCollection";

oFF.OlapDataProviderHierarchyActionsCollection.NAME = "HierarchyActions";
oFF.OlapDataProviderHierarchyActionsCollection.createCollection = function(actions)
{
	let obj = new oFF.OlapDataProviderHierarchyActionsCollection();
	obj.setupCollection(actions);
	return obj;
};
oFF.OlapDataProviderHierarchyActionsCollection.prototype.activateHierarchy = function(dimName)
{
	let action = oFF.OdpHierarchyActionActivateHierarchy.create();
	action.setTypedParameters(dimName);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderHierarchyActionsCollection.prototype.assignHierarchy = function(dimName, hierarchyName)
{
	let action = oFF.OdpHierarchyActionAssignHierarchy.create();
	action.setTypedParameters(dimName, hierarchyName);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderHierarchyActionsCollection.prototype.deactivateHierarchy = function(dimName)
{
	let action = oFF.OdpHierarchyActionDeactivateHierarchy.create();
	action.setTypedParameters(dimName);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderHierarchyActionsCollection.prototype.getAssignedHierarchy = function(dimName)
{
	let action = oFF.OdpHierarchyActionGetAssignedHierarchy.create();
	action.setTypedParameters(dimName);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderHierarchyActionsCollection.prototype.getName = function()
{
	return oFF.OlapDataProviderHierarchyActionsCollection.NAME;
};
oFF.OlapDataProviderHierarchyActionsCollection.prototype.isHierarchyActive = function(dimName)
{
	let action = oFF.OdpHierarchyActionIsHierarchyActive.create();
	action.setTypedParameters(dimName);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderHierarchyActionsCollection.prototype.isHierarchyAssigned = function(dimName)
{
	let action = oFF.OdpHierarchyActionIsHierarchyAssigned.create();
	action.setTypedParameters(dimName);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderHierarchyActionsCollection.prototype.setDrillLevel = function(dimName, drillLevel)
{
	let action = oFF.OdpHierarchyActionSetDrillLevel.create();
	action.setTypedParameters(dimName, drillLevel);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderHierarchyActionsCollection.prototype.unassignHierarchy = function(dimName)
{
	let action = oFF.OdpHierarchyActionUnassignHierarchy.create();
	action.setTypedParameters(dimName);
	return this.getActions().performTypedAction(action);
};

oFF.OlapDataProviderLifecycleActionsCollection = function() {};
oFF.OlapDataProviderLifecycleActionsCollection.prototype = new oFF.DfOlapDataProviderActionsCollection();
oFF.OlapDataProviderLifecycleActionsCollection.prototype._ff_c = "OlapDataProviderLifecycleActionsCollection";

oFF.OlapDataProviderLifecycleActionsCollection.NAME = "LifecycleActions";
oFF.OlapDataProviderLifecycleActionsCollection.createCollection = function(actions)
{
	let obj = new oFF.OlapDataProviderLifecycleActionsCollection();
	obj.setupCollection(actions);
	return obj;
};
oFF.OlapDataProviderLifecycleActionsCollection.prototype.cloneDataProvider = function(cloneName, reuseSameConnection)
{
	let action = oFF.OdpLifecycleActionClone.create();
	action.setTypedParameters(cloneName, reuseSameConnection);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderLifecycleActionsCollection.prototype.connectDataProvider = function(newConnection, closeConnection)
{
	let action = oFF.OdpLifecycleActionConnect.create();
	action.setTypedParameters(newConnection, closeConnection);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderLifecycleActionsCollection.prototype.connectDataProviderToSystemSimple = function(systemName, fullQualifiedDataSourceName, closeConnection)
{
	let action = oFF.OdpLifecycleActionConnectToSystemSimple.create();
	action.setTypedParameters(systemName, fullQualifiedDataSourceName, closeConnection);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderLifecycleActionsCollection.prototype.disconnectDataProvider = function()
{
	let action = oFF.OdpLifecycleActionDisconnect.create();
	action.setTypedParameters(true);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderLifecycleActionsCollection.prototype.getName = function()
{
	return oFF.OlapDataProviderLifecycleActionsCollection.NAME;
};
oFF.OlapDataProviderLifecycleActionsCollection.prototype.reconnectDataProvider = function(closeConnection)
{
	let action = oFF.OdpLifecycleActionReconnect.create();
	action.setTypedParameters(closeConnection);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderLifecycleActionsCollection.prototype.releaseDataProvider = function(closeConnection)
{
	let action = oFF.OdpLifecycleActionRelease.create();
	action.setTypedParameters(closeConnection);
	return this.getActions().performTypedAction(action);
};

oFF.OlapDataProviderPlanningActionsCollection = function() {};
oFF.OlapDataProviderPlanningActionsCollection.prototype = new oFF.DfOlapDataProviderActionsCollection();
oFF.OlapDataProviderPlanningActionsCollection.prototype._ff_c = "OlapDataProviderPlanningActionsCollection";

oFF.OlapDataProviderPlanningActionsCollection.NAME = "PlanningActions";
oFF.OlapDataProviderPlanningActionsCollection.createCollection = function(actions)
{
	let obj = new oFF.OlapDataProviderPlanningActionsCollection();
	obj.setupCollection(actions);
	return obj;
};
oFF.OlapDataProviderPlanningActionsCollection.prototype.addEpmPlanningActionParameterMemberLevelFieldName = function(actionType, packageName, localName, parameterName, levelFieldName)
{
	let action = oFF.OdpActionEpmAddActionParameterLevelFieldName.create();
	action.setTypedParameters(actionType, packageName, localName, parameterName, levelFieldName);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderPlanningActionsCollection.prototype.addEpmPlanningActionParameterMemberValueItem = function(actionType, packageName, localName, parameterName, valueItem)
{
	let action = oFF.OdpActionEpmAddActionParameterMemberValueItem.create();
	action.setTypedParameters(actionType, packageName, localName, parameterName, valueItem);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderPlanningActionsCollection.prototype.addEpmPlanningActionParameterValue = function(actionType, packageName, localName, parameterName, value)
{
	let action = oFF.OdpActionEpmAddActionParameterValue.create();
	action.setTypedParameters(actionType, packageName, localName, parameterName, value);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderPlanningActionsCollection.prototype.backupVersion = function(versionId, sharedVersion, versionOwner, description)
{
	let action = oFF.OdpActionBackupVersion.create();
	action.setTypedParameters(versionId, sharedVersion, versionOwner, description);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderPlanningActionsCollection.prototype.clearEpmPlanningActionParameterLevelFieldNames = function(actionType, packageName, localName, parameterName)
{
	let action = oFF.OdpActionEpmClearActionParameterLevelFieldNames.create();
	action.setTypedParameters(actionType, packageName, localName, parameterName);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderPlanningActionsCollection.prototype.clearEpmPlanningActionParameterValue = function(actionType, packageName, localName, parameterName)
{
	let action = oFF.OdpActionEpmClearActionParameterValue.create();
	action.setTypedParameters(actionType, packageName, localName, parameterName);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderPlanningActionsCollection.prototype.closeVersion = function(versionId, sharedVersion, versionOwner, description)
{
	let action = oFF.OdpActionCloseVersion.create();
	action.setTypedParameters(versionId, sharedVersion, versionOwner, description);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderPlanningActionsCollection.prototype.discardNewValues = function()
{
	let action = oFF.OdpActionDiscardNewValues.create();
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderPlanningActionsCollection.prototype.dropVersion = function(versionId, sharedVersion, versionOwner, description)
{
	let action = oFF.OdpActionDropVersion.create();
	action.setTypedParameters(versionId, sharedVersion, versionOwner, description);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderPlanningActionsCollection.prototype.executeEpmPlanningAction = function(actionType, packageName, localName)
{
	let action = oFF.OdpActionEpmExecutePlanningAction.create();
	action.setTypedParameters(actionType, packageName, localName);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderPlanningActionsCollection.prototype.fetchEpmPlanningAction = function(actionType, packageName, localName)
{
	let action = oFF.OdpActionEpmFetchPlanningAction.create();
	action.setTypedParameters(actionType, packageName, localName);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderPlanningActionsCollection.prototype.getEpmPlanningActionParameters = function(actionType, packageName, localName)
{
	let action = oFF.OdpActionEpmGetActionParameters.create();
	action.setTypedParameters(actionType, packageName, localName);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderPlanningActionsCollection.prototype.getName = function()
{
	return oFF.OlapDataProviderPlanningActionsCollection.NAME;
};
oFF.OlapDataProviderPlanningActionsCollection.prototype.initializeEpmPlanning = function(planningDataSourceName, planningModelBehaviour, planningPersistenceType, withSharedVersions, backendUserName)
{
	let action = oFF.OdpActionInitializeEpmPlanning.create();
	action.setTypedParameters(planningDataSourceName, planningModelBehaviour, planningPersistenceType, withSharedVersions, backendUserName);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderPlanningActionsCollection.prototype.initializeEpmVersion = function(versionId, sharedVersion, versionOwner, description, sourceVersion, sourceCategory, sourceVersionFull)
{
	let action = oFF.OdpActionInitializeEpmVersion.create();
	action.setTypedParameters(versionId, sharedVersion, versionOwner, description, sourceVersion, sourceCategory, sourceVersionFull);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderPlanningActionsCollection.prototype.pushEpmPlanningActionParameterMemberValue = function(actionType, packageName, localName, parameterName)
{
	let action = oFF.OdpActionEpmPushActionParameterMemberValue.create();
	action.setTypedParameters(actionType, packageName, localName, parameterName);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderPlanningActionsCollection.prototype.redoVersion = function(versionId, sharedVersion, versionOwner, description)
{
	let action = oFF.OdpActionRedoVersion.create();
	action.setTypedParameters(versionId, sharedVersion, versionOwner, description);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderPlanningActionsCollection.prototype.releaseObject = function()
{
	oFF.DfOlapDataProviderActionsCollection.prototype.releaseObject.call( this );
};
oFF.OlapDataProviderPlanningActionsCollection.prototype.resetVersion = function(versionId, sharedVersion, versionOwner, description)
{
	let action = oFF.OdpActionResetVersion.create();
	action.setTypedParameters(versionId, sharedVersion, versionOwner, description);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderPlanningActionsCollection.prototype.setEpmPlanningActionParameterHierarchyName = function(actionType, packageName, localName, parameterName, hierarchyName)
{
	let action = oFF.OdpActionEpmSetActionParameterHierarchyName.create();
	action.setTypedParameters(actionType, packageName, localName, parameterName, hierarchyName);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderPlanningActionsCollection.prototype.setPlanningMode = function(mode)
{
	let action = oFF.OdpActionSetPlanningMode.create();
	action.setTypedParameters(mode);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderPlanningActionsCollection.prototype.setPlanningVersionSettingsMode = function(mode)
{
	let action = oFF.OdpActionSetPlanningVersionSettingsMode.create();
	action.setTypedParameters(mode);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderPlanningActionsCollection.prototype.setupCollection = function(actions)
{
	oFF.DfOlapDataProviderActionsCollection.prototype.setupCollection.call( this , actions);
};
oFF.OlapDataProviderPlanningActionsCollection.prototype.transferNewValues = function()
{
	let action = oFF.OdpActionTransferNewValues.create();
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderPlanningActionsCollection.prototype.undoVersion = function(versionId, sharedVersion, versionOwner, description)
{
	let action = oFF.OdpActionUndoVersion.create();
	action.setTypedParameters(versionId, sharedVersion, versionOwner, description);
	return this.getActions().performTypedAction(action);
};

oFF.OlapDataProviderPresentationActionsCollection = function() {};
oFF.OlapDataProviderPresentationActionsCollection.prototype = new oFF.DfOlapDataProviderActionsCollection();
oFF.OlapDataProviderPresentationActionsCollection.prototype._ff_c = "OlapDataProviderPresentationActionsCollection";

oFF.OlapDataProviderPresentationActionsCollection.NAME = "PresentationActions";
oFF.OlapDataProviderPresentationActionsCollection.createCollection = function(actions)
{
	let obj = new oFF.OlapDataProviderPresentationActionsCollection();
	obj.setupCollection(actions);
	return obj;
};
oFF.OlapDataProviderPresentationActionsCollection.prototype.addFieldToResultSet = function(fieldName)
{
	let action = oFF.OdpPresentationActionAddResultSetField.create();
	action.setTypedParameters(fieldName);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderPresentationActionsCollection.prototype.getAvailableDisplays = function(dimName, attributeName)
{
	let action = oFF.OdpPresentationActionGetAvailableDisplays.create();
	action.setTypedParameters(dimName, attributeName);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderPresentationActionsCollection.prototype.getAvailableKeyDisplays = function(dimName, attributeName)
{
	let action = oFF.OdpPresentationActionGetAvailableKeyDisplays.create();
	action.setTypedParameters(dimName, attributeName);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderPresentationActionsCollection.prototype.getAvailableKeyViews = function(dimName, attributeName)
{
	let action = oFF.OdpPresentationActionGetAvailableKeyViews.create();
	action.setTypedParameters(dimName, attributeName);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderPresentationActionsCollection.prototype.getAvailableTextViews = function(dimName, attributeName)
{
	let action = oFF.OdpPresentationActionGetAvailableTextViews.create();
	action.setTypedParameters(dimName, attributeName);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderPresentationActionsCollection.prototype.getDefaultKeyDisplay = function(dimName, attributeName)
{
	let action = oFF.OdpPresentationActionGetDefaultKeyDisplay.create();
	action.setTypedParameters(dimName, attributeName);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderPresentationActionsCollection.prototype.getDefaultKeyView = function(dimName, attributeName)
{
	let action = oFF.OdpPresentationActionGetDefaultKeyView.create();
	action.setTypedParameters(dimName, attributeName);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderPresentationActionsCollection.prototype.getDefaultTextView = function(dimName, attributeName)
{
	let action = oFF.OdpPresentationActionGetDefaultTextView.create();
	action.setTypedParameters(dimName, attributeName);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderPresentationActionsCollection.prototype.getDisplay = function(dimName, attributeName)
{
	let action = oFF.OdpPresentationActionGetDisplay.create();
	action.setTypedParameters(dimName, attributeName);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderPresentationActionsCollection.prototype.getKeyDisplay = function(dimName, attributeName)
{
	let action = oFF.OdpPresentationActionGetKeyDisplay.create();
	action.setTypedParameters(dimName, attributeName);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderPresentationActionsCollection.prototype.getKeyView = function(dimName, attributeName)
{
	let action = oFF.OdpPresentationActionGetKeyView.create();
	action.setTypedParameters(dimName, attributeName);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderPresentationActionsCollection.prototype.getName = function()
{
	return oFF.OlapDataProviderPresentationActionsCollection.NAME;
};
oFF.OlapDataProviderPresentationActionsCollection.prototype.getTextView = function(dimName, attributeName)
{
	let action = oFF.OdpPresentationActionGetTextView.create();
	action.setTypedParameters(dimName, attributeName);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderPresentationActionsCollection.prototype.isFieldInResultSet = function(fieldName)
{
	let action = oFF.OdpPresentationActionIsFieldInResultSet.create();
	action.setTypedParameters(fieldName);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderPresentationActionsCollection.prototype.isKeyViewActive = function(dimName, attributeName)
{
	let action = oFF.OdpPresentationActionIsKeyViewActive.create();
	action.setTypedParameters(dimName, attributeName);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderPresentationActionsCollection.prototype.isKeyViewDefault = function(dimName, attributeName)
{
	let action = oFF.OdpPresentationActionIsKeyViewDefault.create();
	action.setTypedParameters(dimName, attributeName);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderPresentationActionsCollection.prototype.isKeyViewSupported = function(dimName, attributeName)
{
	let action = oFF.OdpPresentationActionIsKeyViewSupported.create();
	action.setTypedParameters(dimName, attributeName);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderPresentationActionsCollection.prototype.isTextViewActive = function(dimName, attributeName)
{
	let action = oFF.OdpPresentationActionIsTextViewActive.create();
	action.setTypedParameters(dimName, attributeName);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderPresentationActionsCollection.prototype.isTextViewDefault = function(dimName, attributeName)
{
	let action = oFF.OdpPresentationActionIsTextViewDefault.create();
	action.setTypedParameters(dimName, attributeName);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderPresentationActionsCollection.prototype.isTextViewSupported = function(dimName, attributeName)
{
	let action = oFF.OdpPresentationActionIsTextViewSupported.create();
	action.setTypedParameters(dimName, attributeName);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderPresentationActionsCollection.prototype.removeFieldFromResultSet = function(fieldName)
{
	let action = oFF.OdpPresentationActionRemoveResultSetField.create();
	action.setTypedParameters(fieldName);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderPresentationActionsCollection.prototype.resetKeyViewToDefault = function(dimName, attributeName)
{
	let action = oFF.OdpPresentationActionResetKeyViewToDefault.create();
	action.setTypedParameters(dimName, attributeName);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderPresentationActionsCollection.prototype.resetTextViewToDefault = function(dimName, attributeName)
{
	let action = oFF.OdpPresentationActionResetTextViewToDefault.create();
	action.setTypedParameters(dimName, attributeName);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderPresentationActionsCollection.prototype.setDisplay = function(dimName, attributeName, display)
{
	let action = oFF.OdpPresentationActionSetDisplay.create();
	action.setTypedParameters(dimName, attributeName, display);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderPresentationActionsCollection.prototype.setKeyDisplay = function(dimName, attributeName, keyDisplay)
{
	let action = oFF.OdpPresentationActionSetKeyDisplay.create();
	action.setTypedParameters(dimName, attributeName, keyDisplay);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderPresentationActionsCollection.prototype.setKeyView = function(dimName, attributeName, keyView)
{
	let action = oFF.OdpPresentationActionSetKeyView.create();
	action.setTypedParameters(dimName, attributeName, keyView);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderPresentationActionsCollection.prototype.setTextView = function(dimName, attributeName, textView)
{
	let action = oFF.OdpPresentationActionSetTextView.create();
	action.setTypedParameters(dimName, attributeName, textView);
	return this.getActions().performTypedAction(action);
};

oFF.OlapDataProviderPropertyActionsCollection = function() {};
oFF.OlapDataProviderPropertyActionsCollection.prototype = new oFF.DfOlapDataProviderActionsCollection();
oFF.OlapDataProviderPropertyActionsCollection.prototype._ff_c = "OlapDataProviderPropertyActionsCollection";

oFF.OlapDataProviderPropertyActionsCollection.NAME = "PropertyActions";
oFF.OlapDataProviderPropertyActionsCollection.createCollection = function(actions)
{
	let obj = new oFF.OlapDataProviderPropertyActionsCollection();
	obj.setupCollection(actions);
	return obj;
};
oFF.OlapDataProviderPropertyActionsCollection.prototype.getName = function()
{
	return oFF.OlapDataProviderPropertyActionsCollection.NAME;
};
oFF.OlapDataProviderPropertyActionsCollection.prototype.getProperty = function(property)
{
	let action = oFF.OdpPropertyActionGetValue.create();
	action.setTypedParameters(property);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderPropertyActionsCollection.prototype.listAllProperties = function(withValues)
{
	let action = oFF.OdpPropertyActionListAll.create();
	action.setTypedParameters(withValues);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderPropertyActionsCollection.prototype.setProperty = function(property, value)
{
	let action = oFF.OdpPropertyActionSetValue.create();
	action.setTypedParameters(property, value);
	return this.getActions().performTypedAction(action);
};

oFF.OlapDataProviderQueryModelActionsCollection = function() {};
oFF.OlapDataProviderQueryModelActionsCollection.prototype = new oFF.DfOlapDataProviderActionsCollection();
oFF.OlapDataProviderQueryModelActionsCollection.prototype._ff_c = "OlapDataProviderQueryModelActionsCollection";

oFF.OlapDataProviderQueryModelActionsCollection.NAME = "QueryModelActions";
oFF.OlapDataProviderQueryModelActionsCollection.createCollection = function(actions)
{
	let obj = new oFF.OlapDataProviderQueryModelActionsCollection();
	obj.setupCollection(actions);
	return obj;
};
oFF.OlapDataProviderQueryModelActionsCollection.prototype.getAccountMembers = function()
{
	let action = oFF.OdpQueryModelGetAccountMembers.create();
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderQueryModelActionsCollection.prototype.getDimensions = function()
{
	let action = oFF.OdpQueryModelGetDimensions.create();
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderQueryModelActionsCollection.prototype.getMeasureMembers = function()
{
	let action = oFF.OdpQueryModelGetMeasureMembers.create();
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderQueryModelActionsCollection.prototype.getName = function()
{
	return oFF.OlapDataProviderQueryModelActionsCollection.NAME;
};
oFF.OlapDataProviderQueryModelActionsCollection.prototype.getSecondStructureMembers = function()
{
	let action = oFF.OdpQueryModelGetSecondaryStructureMembers.create();
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderQueryModelActionsCollection.prototype.setDataSourceText = function(dataSourceText)
{
	let action = oFF.OdpQueryModelSetDataSourceText.create();
	action.setTypedParameters(dataSourceText);
	return this.getActions().performTypedAction(action);
};

oFF.OlapDataProviderReadModeActionsCollection = function() {};
oFF.OlapDataProviderReadModeActionsCollection.prototype = new oFF.DfOlapDataProviderActionsCollection();
oFF.OlapDataProviderReadModeActionsCollection.prototype._ff_c = "OlapDataProviderReadModeActionsCollection";

oFF.OlapDataProviderReadModeActionsCollection.NAME = "ReadModeActions";
oFF.OlapDataProviderReadModeActionsCollection.createCollection = function(actions)
{
	let obj = new oFF.OlapDataProviderReadModeActionsCollection();
	obj.setupCollection(actions);
	return obj;
};
oFF.OlapDataProviderReadModeActionsCollection.prototype.getName = function()
{
	return oFF.OlapDataProviderReadModeActionsCollection.NAME;
};
oFF.OlapDataProviderReadModeActionsCollection.prototype.getReadMode = function(dimensionName)
{
	let action = oFF.OdpActionGetCurrentResultSetReadMode.create();
	action.setTypedParameters(dimensionName);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderReadModeActionsCollection.prototype.getSupportedReadModes = function(dimensionName)
{
	let action = oFF.OdpActionGetSupportedResultSetReadModes.create();
	action.setTypedParameters(dimensionName);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderReadModeActionsCollection.prototype.setReadMode = function(dimensionName, readMode, synchronizeReadModesAndSuppression)
{
	let action = oFF.OdpActionSetResultSetReadMode.create();
	action.setTypedParameters(dimensionName, readMode, synchronizeReadModesAndSuppression);
	return this.getActions().performTypedAction(action);
};

oFF.OlapDataProviderResultSetActionsCollection = function() {};
oFF.OlapDataProviderResultSetActionsCollection.prototype = new oFF.DfOlapDataProviderActionsCollection();
oFF.OlapDataProviderResultSetActionsCollection.prototype._ff_c = "OlapDataProviderResultSetActionsCollection";

oFF.OlapDataProviderResultSetActionsCollection.NAME = "ResultSetActions";
oFF.OlapDataProviderResultSetActionsCollection.createCollection = function(actions)
{
	let obj = new oFF.OlapDataProviderResultSetActionsCollection();
	obj.setupCollection(actions);
	return obj;
};
oFF.OlapDataProviderResultSetActionsCollection.prototype.fetchNewResultSet = function()
{
	let action = oFF.OdpResultSetActionFetchNewResultSet.create();
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderResultSetActionsCollection.prototype.fetchNewTile = function(rowFrom, rowTo, columnFrom, columnTo, tableDefinitionName)
{
	let action = oFF.OdpResultSetActionFetchNewTile.create();
	action.setTypedParameters(rowFrom, rowTo, columnFrom, columnTo, tableDefinitionName);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderResultSetActionsCollection.prototype.getAsciiResultSet = function(maxRowCount, maxColumnCount)
{
	let action = oFF.OdpResultSetActionGetAscii.create();
	action.setTypedParameters(maxRowCount, maxColumnCount);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderResultSetActionsCollection.prototype.getCsvResultSet = function(maxRowCount, maxColumnCount)
{
	let action = oFF.OdpResultSetActionGetCsv.create();
	action.setTypedParameters(maxRowCount, maxColumnCount);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderResultSetActionsCollection.prototype.getGridTile = function()
{
	let action = oFF.OdpResultSetActionGetGridTile.create();
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderResultSetActionsCollection.prototype.getName = function()
{
	return oFF.OlapDataProviderResultSetActionsCollection.NAME;
};

oFF.OlapDataProviderSerializationActionsCollection = function() {};
oFF.OlapDataProviderSerializationActionsCollection.prototype = new oFF.DfOlapDataProviderActionsCollection();
oFF.OlapDataProviderSerializationActionsCollection.prototype._ff_c = "OlapDataProviderSerializationActionsCollection";

oFF.OlapDataProviderSerializationActionsCollection.NAME = "SerializationActions";
oFF.OlapDataProviderSerializationActionsCollection.createCollection = function(actions)
{
	let obj = new oFF.OlapDataProviderSerializationActionsCollection();
	obj.setupCollection(actions);
	return obj;
};
oFF.OlapDataProviderSerializationActionsCollection.prototype.exportInsightInformation = function()
{
	let action = oFF.OdpSerializationActionExportInsightInformation.create();
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderSerializationActionsCollection.prototype.exportRepository = function(useDelta)
{
	let action = oFF.OdpSerializationActionExportRepository.create();
	action.setTypedParameters(useDelta);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderSerializationActionsCollection.prototype.getName = function()
{
	return oFF.OlapDataProviderSerializationActionsCollection.NAME;
};
oFF.OlapDataProviderSerializationActionsCollection.prototype.importRepository = function(repository, useDelta)
{
	let action = oFF.OdpSerializationActionImportRepository.create();
	action.setTypedParameters(repository, useDelta);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderSerializationActionsCollection.prototype.load = function(structure)
{
	let action = oFF.OdpSerializationActionLoad.create();
	action.setTypedParameters(structure);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderSerializationActionsCollection.prototype.save = function()
{
	let action = oFF.OdpSerializationActionSave.create();
	return this.getActions().performTypedAction(action);
};

oFF.OlapDataProviderSortActionsCollection = function() {};
oFF.OlapDataProviderSortActionsCollection.prototype = new oFF.DfOlapDataProviderActionsCollection();
oFF.OlapDataProviderSortActionsCollection.prototype._ff_c = "OlapDataProviderSortActionsCollection";

oFF.OlapDataProviderSortActionsCollection.NAME = "SortActions";
oFF.OlapDataProviderSortActionsCollection.createCollection = function(actions)
{
	let obj = new oFF.OlapDataProviderSortActionsCollection();
	obj.setupCollection(actions);
	return obj;
};
oFF.OlapDataProviderSortActionsCollection.prototype.clearDimensionSort = function(dimensionName)
{
	let action = oFF.OdpActionClearDimensionSort.create();
	action.setTypedParameters(dimensionName);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderSortActionsCollection.prototype.clearMeasureSort = function(measureName)
{
	let action = oFF.OdpActionClearMeasureSort.create();
	action.setTypedParameters(measureName);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderSortActionsCollection.prototype.getName = function()
{
	return oFF.OlapDataProviderSortActionsCollection.NAME;
};
oFF.OlapDataProviderSortActionsCollection.prototype.sortByDimensionMemberKey = function(dimensionName, sortDirection)
{
	let action = oFF.OdpActionSortByMemberKey.create();
	action.setTypedParameters(dimensionName, sortDirection);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderSortActionsCollection.prototype.sortByDimensionMemberText = function(dimensionName, sortDirection)
{
	let action = oFF.OdpActionSortByMemberText.create();
	action.setTypedParameters(dimensionName, sortDirection);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderSortActionsCollection.prototype.sortByField = function(fieldName, sortDirection)
{
	let action = oFF.OdpActionSortByField.create();
	action.setTypedParameters(fieldName, sortDirection);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderSortActionsCollection.prototype.sortByMeasure = function(measureName, sortDirection)
{
	let action = oFF.OdpActionSortByMeasure.create();
	action.setTypedParameters(measureName, sortDirection);
	return this.getActions().performTypedAction(action);
};

oFF.OlapDataProviderSuppressionActionsCollection = function() {};
oFF.OlapDataProviderSuppressionActionsCollection.prototype = new oFF.DfOlapDataProviderActionsCollection();
oFF.OlapDataProviderSuppressionActionsCollection.prototype._ff_c = "OlapDataProviderSuppressionActionsCollection";

oFF.OlapDataProviderSuppressionActionsCollection.NAME = "SuppressionActions";
oFF.OlapDataProviderSuppressionActionsCollection.createCollection = function(actions)
{
	let obj = new oFF.OlapDataProviderSuppressionActionsCollection();
	obj.setupCollection(actions);
	return obj;
};
oFF.OlapDataProviderSuppressionActionsCollection.prototype.getName = function()
{
	return oFF.OlapDataProviderSuppressionActionsCollection.NAME;
};
oFF.OlapDataProviderSuppressionActionsCollection.prototype.getSupportedSuppressionTypes = function(axisType)
{
	let action = oFF.OdpGetSupportedSuppressionTypes.create();
	action.setTypedParameters(axisType);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderSuppressionActionsCollection.prototype.getSuppressionType = function(axisType)
{
	let action = oFF.OdpGetCurrentSuppressionType.create();
	action.setTypedParameters(axisType);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderSuppressionActionsCollection.prototype.setSuppressionType = function(axisType, suppressionType, synchronizeReadModesAndSuppression)
{
	let action = oFF.OdpSetResultSetSuppressionType.create();
	action.setTypedParameters(axisType, suppressionType, synchronizeReadModesAndSuppression);
	return this.getActions().performTypedAction(action);
};

oFF.OlapDataProviderTotalsActionsCollection = function() {};
oFF.OlapDataProviderTotalsActionsCollection.prototype = new oFF.DfOlapDataProviderActionsCollection();
oFF.OlapDataProviderTotalsActionsCollection.prototype._ff_c = "OlapDataProviderTotalsActionsCollection";

oFF.OlapDataProviderTotalsActionsCollection.NAME = "TotalsActions";
oFF.OlapDataProviderTotalsActionsCollection.createCollection = function(actions)
{
	let obj = new oFF.OlapDataProviderTotalsActionsCollection();
	obj.setupCollection(actions);
	return obj;
};
oFF.OlapDataProviderTotalsActionsCollection.prototype.getName = function()
{
	return oFF.OlapDataProviderTotalsActionsCollection.NAME;
};
oFF.OlapDataProviderTotalsActionsCollection.prototype.getTotalsPosition = function(modelLevel, name)
{
	let action = oFF.OdpTotalsGetPosition.create();
	action.setTypedParameters(modelLevel, name);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderTotalsActionsCollection.prototype.getTotalsVisibility = function(resultStructureElement, modelLevel, name)
{
	let action = oFF.OdpTotalsGetVisibility.create();
	action.setTypedParameters(resultStructureElement, modelLevel, name);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderTotalsActionsCollection.prototype.setTotalsPosition = function(modelLevel, name, alignment)
{
	let action = oFF.OdpTotalsSetPosition.create();
	action.setTypedParameters(modelLevel, name, alignment);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderTotalsActionsCollection.prototype.setTotalsVisibility = function(resultStructureElement, modelLevel, name, visibility)
{
	let action = oFF.OdpTotalsSetVisibility.create();
	action.setTypedParameters(resultStructureElement, modelLevel, name, visibility);
	return this.getActions().performTypedAction(action);
};

oFF.OlapDataProviderVariableActionsCollection = function() {};
oFF.OlapDataProviderVariableActionsCollection.prototype = new oFF.DfOlapDataProviderActionsCollection();
oFF.OlapDataProviderVariableActionsCollection.prototype._ff_c = "OlapDataProviderVariableActionsCollection";

oFF.OlapDataProviderVariableActionsCollection.NAME = "VariableActions";
oFF.OlapDataProviderVariableActionsCollection.createCollection = function(actions)
{
	let obj = new oFF.OlapDataProviderVariableActionsCollection();
	obj.setupCollection(actions);
	return obj;
};
oFF.OlapDataProviderVariableActionsCollection.prototype.cancelVariableChange = function()
{
	let action = oFF.OdpCancelVariableChangeAction.create();
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderVariableActionsCollection.prototype.endVariableChange = function()
{
	let action = oFF.OdpEndVariableChangeAction.create();
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderVariableActionsCollection.prototype.getName = function()
{
	return oFF.OlapDataProviderVariableActionsCollection.NAME;
};
oFF.OlapDataProviderVariableActionsCollection.prototype.startVariableChange = function()
{
	let action = oFF.OdpStartVariableChangeAction.create();
	return this.getActions().performTypedAction(action);
};

oFF.OlapDataProviderVizActionsCollection = function() {};
oFF.OlapDataProviderVizActionsCollection.prototype = new oFF.DfOlapDataProviderActionsCollection();
oFF.OlapDataProviderVizActionsCollection.prototype._ff_c = "OlapDataProviderVizActionsCollection";

oFF.OlapDataProviderVizActionsCollection.NAME = "VizActions";
oFF.OlapDataProviderVizActionsCollection.createCollection = function(actions)
{
	let obj = new oFF.OlapDataProviderVizActionsCollection();
	obj.setupCollection(actions);
	return obj;
};
oFF.OlapDataProviderVizActionsCollection.prototype.addDatapointVariableValue = function(vizName, dataPointVariableContainerName, variableName, variableValue)
{
	let action = oFF.OdpVizActionAddDatapointVariableValue.create();
	action.setTypedParameters(vizName, dataPointVariableContainerName, variableName, variableValue);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderVizActionsCollection.prototype.addMemberToTypedValueSelection = function(vizName, visualizationValueType, memberName)
{
	let action = oFF.OdpVizActionAddMemberToTypedValueSelection.create();
	action.setTypedParameters(vizName, visualizationValueType, memberName);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderVizActionsCollection.prototype.addVisualizationVariableValue = function(vizName, variableName, variableValue)
{
	let action = oFF.OdpVizActionAddVisualizationVariableValue.create();
	action.setTypedParameters(vizName, variableName, variableValue);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderVizActionsCollection.prototype.clearAllTypedValueSelections = function(vizName)
{
	let action = oFF.OdpVizActionClearAllTypedValueSelections.create();
	action.setTypedParameters(vizName);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderVizActionsCollection.prototype.clearDatapointVariableValue = function(vizName, dataPointVariableContainerName, variableName)
{
	let action = oFF.OdpVizActionClearDatapointVariableValue.create();
	action.setTypedParameters(vizName, dataPointVariableContainerName, variableName);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderVizActionsCollection.prototype.clearMemberRestrictions = function(vizName)
{
	let action = oFF.OdpVizActionClearMemberRestrictions.create();
	action.setTypedParameters(vizName);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderVizActionsCollection.prototype.clearMemberRestrictionsForDimension = function(vizName, dimensionName)
{
	let action = oFF.OdpVizActionClearMemberRestrictionsForDimension.create();
	action.setTypedParameters(vizName, dimensionName);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderVizActionsCollection.prototype.clearSelectionPath = function(vizName)
{
	let action = oFF.OdpVizActionClearSelectionPath.create();
	action.setTypedParameters(vizName);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderVizActionsCollection.prototype.clearSelectionPathElementForDimension = function(vizName, dimensionName)
{
	let action = oFF.OdpVizActionClearSelectionPathElementForDimension.create();
	action.setTypedParameters(vizName, dimensionName);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderVizActionsCollection.prototype.clearTypedValueSelectionsForType = function(vizName, visualizationValueType)
{
	let action = oFF.OdpVizActionClearTypedValueSelectionsForType.create();
	action.setTypedParameters(vizName, visualizationValueType);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderVizActionsCollection.prototype.clearVisualizationVariableValue = function(vizName, variableName)
{
	let action = oFF.OdpVizActionClearVisualizationVariableValue.create();
	action.setTypedParameters(vizName, variableName);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderVizActionsCollection.prototype.createVisualizationDefinition = function(vizName, vizType, protocolBindingType, chartType)
{
	let action = oFF.OdpVizActionCreateVizDefinition.create();
	action.setTypedParameters(vizName, vizType, protocolBindingType, chartType);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderVizActionsCollection.prototype.getActiveVisualizationDefinition = function()
{
	let action = oFF.OdpVizActionGetActiveVizDefinition.create();
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderVizActionsCollection.prototype.getAllVisualizationNames = function()
{
	let action = oFF.OdpVizActionGetAllVisualizationNames.create();
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderVizActionsCollection.prototype.getAllVisualizations = function()
{
	let action = oFF.OdpVizActionGetAllVisualizations.create();
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderVizActionsCollection.prototype.getChartColorPalette = function(vizName)
{
	let action = oFF.OdpVizActionGetChartColorPalette.create();
	action.setTypedParameters(vizName);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderVizActionsCollection.prototype.getChartOrientation = function(vizName)
{
	let action = oFF.OdpVizActionGetChartOrientation.create();
	action.setTypedParameters(vizName);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderVizActionsCollection.prototype.getDimensionsInChartFeed = function(vizName, valueType)
{
	let action = oFF.OdpVizActionGetDimensionsInChartFeed.create();
	action.setTypedParameters(vizName, valueType);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderVizActionsCollection.prototype.getMembersInTypedSelection = function(vizName, visualizationValueType)
{
	let action = oFF.OdpVizActionGetMembersInTypedValueSelection.create();
	action.setTypedParameters(vizName, visualizationValueType);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderVizActionsCollection.prototype.getMembersOfDimensionInTypedSelection = function(vizName, visualizationValueType, dimName)
{
	let action = oFF.OdpVizActionGetMembersForDimensionInTypedValueSelection.create();
	action.setTypedParameters(vizName, visualizationValueType, dimName);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderVizActionsCollection.prototype.getName = function()
{
	return oFF.OlapDataProviderVizActionsCollection.NAME;
};
oFF.OlapDataProviderVizActionsCollection.prototype.getOrCreateVisualizationDefinition = function(vizName, vizType, protocolBindingType, chartType)
{
	let action = oFF.OdpVizActionGetOrCreateVizDefinition.create();
	action.setTypedParameters(vizName, vizType, protocolBindingType, chartType);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderVizActionsCollection.prototype.getVisualizationChartType = function(vizName)
{
	let action = oFF.OdpVizActionGetVisualizationChartType.create();
	action.setTypedParameters(vizName);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderVizActionsCollection.prototype.moveDimensionToChartFeed = function(vizName, dimName, valueType)
{
	let action = oFF.OdpVizActionMoveDimensionToChartFeedAtIndex.create();
	action.setTypedParameters(vizName, dimName, valueType, -1);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderVizActionsCollection.prototype.moveDimensionToChartFeedAtIndex = function(vizName, dimName, valueType, index)
{
	let action = oFF.OdpVizActionMoveDimensionToChartFeedAtIndex.create();
	action.setTypedParameters(vizName, dimName, valueType, index);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderVizActionsCollection.prototype.putMemberRestriction = function(vizName, dimensionName, memberName)
{
	let action = oFF.OdpVizActionPutMemberRestriction.create();
	action.setTypedParameters(vizName, dimensionName, memberName);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderVizActionsCollection.prototype.putSelectionPathElement = function(vizName, dimensionName, memberName)
{
	let action = oFF.OdpVizActionPutSelectionPathElement.create();
	action.setTypedParameters(vizName, dimensionName, memberName);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderVizActionsCollection.prototype.removeDimensionFromChartFeed = function(vizName, dimName, valueType)
{
	let action = oFF.OdpVizActionRemoveDimensionFromChartFeed.create();
	action.setTypedParameters(vizName, dimName, valueType);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderVizActionsCollection.prototype.removeMemberFromTypedValueSelection = function(vizName, visualizationValueType, memberName)
{
	let action = oFF.OdpVizActionRemoveMemberFromTypedValueSelection.create();
	action.setTypedParameters(vizName, visualizationValueType, memberName);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderVizActionsCollection.prototype.removeMemberRestrictionForMember = function(vizName, dimensionName, memberName)
{
	let action = oFF.OdpVizActionRemoveMemberRestrictionForMember.create();
	action.setTypedParameters(vizName, dimensionName, memberName);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderVizActionsCollection.prototype.removeVisualizationDefinition = function(vizName)
{
	let action = oFF.OdpVizActionRemoveVizDefinition.create();
	action.setTypedParameters(vizName);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderVizActionsCollection.prototype.setActiveVisualizationDefinition = function(vizName)
{
	let action = oFF.OdpVizActionSetActiveVizDefinition.create();
	action.setTypedParameters(vizName);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderVizActionsCollection.prototype.setChartColorPalette = function(vizName, palette)
{
	let action = oFF.OdpVizActionSetChartColorPalette.create();
	action.setTypedParameters(vizName, palette);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderVizActionsCollection.prototype.setChartOrientation = function(vizName, orientation)
{
	let action = oFF.OdpVizActionSetChartOrientation.create();
	action.setTypedParameters(vizName, orientation);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderVizActionsCollection.prototype.setChartStructure = function(vizName, dimensionName)
{
	let action = oFF.OdpVizActionSetChartStructure.create();
	action.setTypedParameters(vizName, dimensionName);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderVizActionsCollection.prototype.setDatapointVariableValue = function(vizName, dataPointVariableContainerName, variableName, variableValue)
{
	let action = oFF.OdpVizActionSetDatapointVariableValue.create();
	action.setTypedParameters(vizName, dataPointVariableContainerName, variableName, variableValue);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderVizActionsCollection.prototype.setKpiMemberDeviation = function(vizName, memberName)
{
	let action = oFF.OdpVizActionSetKpiMemberDeviation.create();
	action.setTypedParameters(vizName, memberName);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderVizActionsCollection.prototype.setKpiMemberException = function(vizName, memberName)
{
	let action = oFF.OdpVizActionSetKpiMemberException.create();
	action.setTypedParameters(vizName, memberName);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderVizActionsCollection.prototype.setKpiMemberMain = function(vizName, memberName)
{
	let action = oFF.OdpVizActionSetKpiMemberMain.create();
	action.setTypedParameters(vizName, memberName);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderVizActionsCollection.prototype.setKpiMemberTarget = function(vizName, memberName)
{
	let action = oFF.OdpVizActionSetKpiMemberTarget.create();
	action.setTypedParameters(vizName, memberName);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderVizActionsCollection.prototype.setKpiMemberTrend = function(vizName, memberName)
{
	let action = oFF.OdpVizActionSetKpiMemberTrend.create();
	action.setTypedParameters(vizName, memberName);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderVizActionsCollection.prototype.setKpiStructure = function(vizName, dimensionName)
{
	let action = oFF.OdpVizActionSetKpiStructure.create();
	action.setTypedParameters(vizName, dimensionName);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderVizActionsCollection.prototype.setVisualizationChartType = function(vizName, chartType)
{
	let action = oFF.OdpVizActionSetVisualizationChartType.create();
	action.setTypedParameters(vizName, chartType);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderVizActionsCollection.prototype.setVisualizationSynchronizationMode = function(synchronizationMode)
{
	let action = oFF.OdpVizActionSetVisualizationSynchronizationMode.create();
	action.setTypedParameters(synchronizationMode);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderVizActionsCollection.prototype.setVisualizationVariableValue = function(vizName, variableName, variableValue)
{
	let action = oFF.OdpVizActionSetVisualizationVariableValue.create();
	action.setTypedParameters(vizName, variableName, variableValue);
	return this.getActions().performTypedAction(action);
};
oFF.OlapDataProviderVizActionsCollection.prototype.synchronizeVisualizationDefinition = function(vizName)
{
	let action = oFF.OdpVizActionSynchronizeVizDefinition.create();
	action.setTypedParameters(vizName);
	return this.getActions().performTypedAction(action);
};

oFF.OlapDataProviderEventEmitter = function() {};
oFF.OlapDataProviderEventEmitter.prototype = new oFF.XObject();
oFF.OlapDataProviderEventEmitter.prototype._ff_c = "OlapDataProviderEventEmitter";

oFF.OlapDataProviderEventEmitter.createEmitter = function(dataProvider, baseEvent)
{
	let obj = new oFF.OlapDataProviderEventEmitter();
	obj.setupEmitter(dataProvider, baseEvent);
	return obj;
};
oFF.OlapDataProviderEventEmitter.prototype.m_dataProvider = null;
oFF.OlapDataProviderEventEmitter.prototype.m_eventTemplate = null;
oFF.OlapDataProviderEventEmitter.prototype.m_external = false;
oFF.OlapDataProviderEventEmitter.prototype.getDataProvider = function()
{
	return this.m_dataProvider;
};
oFF.OlapDataProviderEventEmitter.prototype.getEventType = function()
{
	return this.m_eventTemplate.getEventType();
};
oFF.OlapDataProviderEventEmitter.prototype.getEventing = function()
{
	return this.m_dataProvider.getEventingBase();
};
oFF.OlapDataProviderEventEmitter.prototype.getListener = function()
{
	return this.m_dataProvider.getEventingBase().getListenerForEventType(this.getEventType());
};
oFF.OlapDataProviderEventEmitter.prototype.getName = function()
{
	return this.getEventType().getName();
};
oFF.OlapDataProviderEventEmitter.prototype.isExternalEmitter = function()
{
	return this.m_external;
};
oFF.OlapDataProviderEventEmitter.prototype.newTypedEvent = function()
{
	let eventClass = oFF.XClass.createByInstance(this.m_eventTemplate);
	let eventBase = eventClass.newInstance(this.m_dataProvider);
	eventBase.setupDataProviderEvent(this.m_dataProvider, this);
	eventBase.setExternalChanges(this.m_external);
	return eventBase;
};
oFF.OlapDataProviderEventEmitter.prototype.releaseObject = function()
{
	this.m_dataProvider = null;
	this.m_eventTemplate = oFF.XObjectExt.release(this.m_eventTemplate);
	oFF.XObject.prototype.releaseObject.call( this );
};
oFF.OlapDataProviderEventEmitter.prototype.setExternalEmitter = function(external)
{
	this.m_external = external;
};
oFF.OlapDataProviderEventEmitter.prototype.setupEmitter = function(dataProvider, baseEvent)
{
	this.m_dataProvider = dataProvider;
	this.m_eventTemplate = baseEvent;
};

oFF.DfOuDataProviderEvent = function() {};
oFF.DfOuDataProviderEvent.prototype = new oFF.XObject();
oFF.DfOuDataProviderEvent.prototype._ff_c = "DfOuDataProviderEvent";

oFF.DfOuDataProviderEvent.prototype.m_correlationId = null;
oFF.DfOuDataProviderEvent.prototype.m_dataProvider = null;
oFF.DfOuDataProviderEvent.prototype.m_emitter = null;
oFF.DfOuDataProviderEvent.prototype.m_externalChanges = false;
oFF.DfOuDataProviderEvent.prototype.canMerge = function()
{
	return true;
};
oFF.DfOuDataProviderEvent.prototype.getBasicDataProvider = function()
{
	return this.m_dataProvider;
};
oFF.DfOuDataProviderEvent.prototype.getCorrelationId = function()
{
	return this.m_correlationId;
};
oFF.DfOuDataProviderEvent.prototype.getDataProvider = function()
{
	return this.m_dataProvider;
};
oFF.DfOuDataProviderEvent.prototype.getEmitterBase = function()
{
	return this.m_emitter;
};
oFF.DfOuDataProviderEvent.prototype.isBuffered = function()
{
	return true;
};
oFF.DfOuDataProviderEvent.prototype.isExternal = function()
{
	return this.m_externalChanges;
};
oFF.DfOuDataProviderEvent.prototype.merge = function(otherEvent)
{
	this.m_externalChanges = otherEvent.isExternal();
	this.mergeInternal(otherEvent);
};
oFF.DfOuDataProviderEvent.prototype.queue = function()
{
	this.m_dataProvider.getEventing().queueEvent(this);
};
oFF.DfOuDataProviderEvent.prototype.releaseObject = function()
{
	this.m_dataProvider = null;
	this.m_emitter = null;
	oFF.XObject.prototype.releaseObject.call( this );
};
oFF.DfOuDataProviderEvent.prototype.send = function()
{
	this.queue();
};
oFF.DfOuDataProviderEvent.prototype.setCorrelationId = function(correlationId)
{
	this.m_correlationId = correlationId;
};
oFF.DfOuDataProviderEvent.prototype.setExternalChanges = function(externalChanges)
{
	this.m_externalChanges = externalChanges;
};
oFF.DfOuDataProviderEvent.prototype.setupDataProviderEvent = function(dataProvider, emitter)
{
	this.m_dataProvider = dataProvider;
	this.m_emitter = emitter;
	this.setupDataProviderEventExt();
};
oFF.DfOuDataProviderEvent.prototype.toString = function()
{
	return this.getEventType().getName();
};

oFF.OlapDataProviderActions = function() {};
oFF.OlapDataProviderActions.prototype = new oFF.XObject();
oFF.OlapDataProviderActions.prototype._ff_c = "OlapDataProviderActions";

oFF.OlapDataProviderActions.createDataProviderActions = function(dataProvider)
{
	let obj = new oFF.OlapDataProviderActions();
	obj.setupDataProviderActions(dataProvider);
	return obj;
};
oFF.OlapDataProviderActions.prototype.m_actionChainActive = false;
oFF.OlapDataProviderActions.prototype.m_actionChainId = null;
oFF.OlapDataProviderActions.prototype.m_actionsCollections = null;
oFF.OlapDataProviderActions.prototype.m_dataProvider = null;
oFF.OlapDataProviderActions.prototype.m_endActionChainWhenReady = false;
oFF.OlapDataProviderActions.prototype.m_runningActionPromises = null;
oFF.OlapDataProviderActions.prototype.m_validator = null;
oFF.OlapDataProviderActions.prototype.addActionPromise = function(promise, correlationId)
{
	let eventingBase = this.m_dataProvider.getEventingBase();
	promise.onThen((result) => {
		this.handleActionPromiseEnd();
		eventingBase.setActionChanges(correlationId, result.getChanges());
		eventingBase.finalizeActionChanges();
	}).onCatch((err) => {
		this.handleActionPromiseEnd();
		if (oFF.notNull(err) && err.getErrorType() !== oFF.DataProviderErrorType.ACTION_MANIFEST_VALIDATION)
		{
			let errorEvt = eventingBase.getEmitterForError().newTypedEvent();
			errorEvt.setCorrelationId(correlationId);
			errorEvt.addError(err);
			errorEvt.queue();
		}
	});
};
oFF.OlapDataProviderActions.prototype.endActionChain = function()
{
	this.m_actionChainActive = false;
	this.m_actionChainId = null;
	if (this.m_runningActionPromises.hasElements())
	{
		this.m_endActionChainWhenReady = true;
	}
	else
	{
		this.m_dataProvider.getEventingBase().setEventingPaused(false);
	}
};
oFF.OlapDataProviderActions.prototype.executeActionByName = function(actionName, parameters)
{
	let actionClass = oFF.OlapDataProviderActionRegistry.getActionClass(actionName);
	if (oFF.isNull(actionClass))
	{
		return oFF.XPromise.reject(oFF.XError.create(oFF.XStringUtils.concatenate2("no action found with name: ", actionName)));
	}
	let action = actionClass.newInstance(null);
	action.setParameters(parameters);
	return this.performAction(action);
};
oFF.OlapDataProviderActions.prototype.getActionCategories = function()
{
	let categories = this.m_actionsCollections.getKeysAsReadOnlyList().createListCopy();
	categories.sortByDirection(oFF.XSortDirection.ASCENDING);
	return categories;
};
oFF.OlapDataProviderActions.prototype.getActionCollectionByName = function(name)
{
	return this.m_actionsCollections.getByKey(name);
};
oFF.OlapDataProviderActions.prototype.getActionManifest = function(name)
{
	return oFF.OlapDataProviderActionManifestRegistry.getInstance().getActionManifest(name);
};
oFF.OlapDataProviderActions.prototype.getActionManifests = function()
{
	return oFF.OlapDataProviderActionManifestRegistry.getInstance().getActionManifests().getValuesAsReadOnlyList();
};
oFF.OlapDataProviderActions.prototype.getAnalysisActions = function()
{
	return this.getActionCollectionByName(oFF.OlapDataProviderAnalysisActionsCollection.NAME);
};
oFF.OlapDataProviderActions.prototype.getAxisActions = function()
{
	return this.getActionCollectionByName(oFF.OlapDataProviderAxisActionsCollection.NAME);
};
oFF.OlapDataProviderActions.prototype.getBasicLifecycleActions = function()
{
	return this.getActionCollectionByName(oFF.OlapDataProviderLifecycleActionsCollection.NAME);
};
oFF.OlapDataProviderActions.prototype.getDataProvider = function()
{
	return this.m_dataProvider;
};
oFF.OlapDataProviderActions.prototype.getDimensionActions = function()
{
	return this.getActionCollectionByName(oFF.OlapDataProviderDimensionActionsCollection.NAME);
};
oFF.OlapDataProviderActions.prototype.getFilterActions = function()
{
	return this.getActionCollectionByName(oFF.OlapDataProviderFilterActionsCollection.NAME);
};
oFF.OlapDataProviderActions.prototype.getHierarchyActions = function()
{
	return this.getActionCollectionByName(oFF.OlapDataProviderHierarchyActionsCollection.NAME);
};
oFF.OlapDataProviderActions.prototype.getLifecycleActions = function()
{
	return this.getActionCollectionByName(oFF.OlapDataProviderLifecycleActionsCollection.NAME);
};
oFF.OlapDataProviderActions.prototype.getPlanningActions = function()
{
	return this.getActionCollectionByName(oFF.OlapDataProviderPlanningActionsCollection.NAME);
};
oFF.OlapDataProviderActions.prototype.getPresentationActions = function()
{
	return this.getActionCollectionByName(oFF.OlapDataProviderPresentationActionsCollection.NAME);
};
oFF.OlapDataProviderActions.prototype.getPropertyActions = function()
{
	return this.getActionCollectionByName(oFF.OlapDataProviderPropertyActionsCollection.NAME);
};
oFF.OlapDataProviderActions.prototype.getQueryModelActions = function()
{
	return this.getActionCollectionByName(oFF.OlapDataProviderQueryModelActionsCollection.NAME);
};
oFF.OlapDataProviderActions.prototype.getReadModeActions = function()
{
	return this.getActionCollectionByName(oFF.OlapDataProviderReadModeActionsCollection.NAME);
};
oFF.OlapDataProviderActions.prototype.getResultSetActions = function()
{
	return this.getActionCollectionByName(oFF.OlapDataProviderResultSetActionsCollection.NAME);
};
oFF.OlapDataProviderActions.prototype.getRunningActionPromises = function()
{
	return this.m_runningActionPromises;
};
oFF.OlapDataProviderActions.prototype.getSerializationActions = function()
{
	return this.getActionCollectionByName(oFF.OlapDataProviderSerializationActionsCollection.NAME);
};
oFF.OlapDataProviderActions.prototype.getSortActions = function()
{
	return this.getActionCollectionByName(oFF.OlapDataProviderSortActionsCollection.NAME);
};
oFF.OlapDataProviderActions.prototype.getSuppressionActions = function()
{
	return this.getActionCollectionByName(oFF.OlapDataProviderSuppressionActionsCollection.NAME);
};
oFF.OlapDataProviderActions.prototype.getTotalsActions = function()
{
	return this.getActionCollectionByName(oFF.OlapDataProviderTotalsActionsCollection.NAME);
};
oFF.OlapDataProviderActions.prototype.getVariableActions = function()
{
	return this.getActionCollectionByName(oFF.OlapDataProviderVariableActionsCollection.NAME);
};
oFF.OlapDataProviderActions.prototype.getVisualizationActions = function()
{
	return this.getActionCollectionByName(oFF.OlapDataProviderVizActionsCollection.NAME);
};
oFF.OlapDataProviderActions.prototype.handleActionManifestValidation = function(action, correlationId)
{
	return oFF.XPromise.create((resolve, reject) => {
		let messageCollection = this.m_validator.validateParameters(action.getName(), action.getParameters());
		if (messageCollection.hasErrors())
		{
			let errorEvent = this.m_dataProvider.getEventingBase().getEmitterForError().newTypedEvent();
			errorEvent.setCorrelationId(correlationId);
			oFF.XCollectionUtils.forEach(messageCollection.getErrors(), (error) => {
				errorEvent.addError(oFF.XError.createWithMessage(error));
			});
			errorEvent.queue();
			let condensedError = oFF.MessageUtil.condenseMessagesToSingleError(messageCollection);
			condensedError.setErrorType(oFF.DataProviderErrorType.ACTION_MANIFEST_VALIDATION);
			reject(condensedError);
			return;
		}
		resolve(oFF.XBooleanValue.create(true));
	});
};
oFF.OlapDataProviderActions.prototype.handleActionPromiseEnd = function()
{
	for (let i = this.m_runningActionPromises.size() - 1; i >= 0; i--)
	{
		let actionPromise = this.m_runningActionPromises.get(i);
		if (actionPromise.isSettled())
		{
			this.m_runningActionPromises.removeAt(i);
		}
	}
	if (this.m_runningActionPromises.isEmpty() && this.m_endActionChainWhenReady)
	{
		this.m_endActionChainWhenReady = false;
		this.m_dataProvider.getEventingBase().setEventingPaused(false);
	}
};
oFF.OlapDataProviderActions.prototype.handleQmSetup = function(action)
{
	if (action.isQueryManagerNeeded())
	{
		return this.m_dataProvider.getOrCreateQueryManager();
	}
	return oFF.XPromise.resolve(null);
};
oFF.OlapDataProviderActions.prototype.hasAction = function(actionName)
{
	return oFF.OlapDataProviderActionRegistry.getActionClass(actionName) !== null;
};
oFF.OlapDataProviderActions.prototype.performAction = function(action)
{
	return this.performAnyAction(action, () => {
		return action.execute(this.m_dataProvider);
	});
};
oFF.OlapDataProviderActions.prototype.performAnyAction = function(action, promiseSupplier)
{
	if (this.getDataProvider().isReleasing())
	{
		let earlyResult = null;
		return oFF.XPromise.resolve(earlyResult);
	}
	let olapAction = action;
	let correlationId = this.m_actionChainActive ? this.m_actionChainId : oFF.XGuid.getGuid();
	let releaseAction = olapAction.isReleaseAction();
	if (releaseAction)
	{
		this.sendActionExecutionEvent(olapAction, correlationId);
	}
	let actionPromise = this.handleQmSetup(olapAction).onThenPromise((qm) => {
		return this.handleActionManifestValidation(olapAction, correlationId);
	}).onThenPromise((valid) => {
		return promiseSupplier();
	});
	if (!releaseAction)
	{
		actionPromise.onFinally(() => {
			this.sendActionExecutionEvent(olapAction, correlationId);
		});
		this.addActionPromise(actionPromise, correlationId);
	}
	return actionPromise.onThenExt((result) => {
		return result.getReturnValue();
	});
};
oFF.OlapDataProviderActions.prototype.performTypedAction = function(action)
{
	return this.performAnyAction(action, () => {
		return action.executeWithTypedResult(this.m_dataProvider);
	});
};
oFF.OlapDataProviderActions.prototype.releaseObject = function()
{
	this.m_dataProvider = null;
	this.m_runningActionPromises = oFF.XObjectExt.release(this.m_runningActionPromises);
	this.m_actionsCollections = oFF.XCollectionUtils.releaseEntriesAndCollectionIfNotNull(this.m_actionsCollections);
	oFF.XObject.prototype.releaseObject.call( this );
};
oFF.OlapDataProviderActions.prototype.sendActionExecutionEvent = function(action, correlationId)
{
	let eventingBase = this.m_dataProvider.getEventingBase();
	let actionExeEvent = eventingBase.getEmitterForActionExecution().newTypedEvent();
	actionExeEvent.setCorrelationId(correlationId);
	actionExeEvent.setActionName(action.getName());
	actionExeEvent.setParameters(action.getParameters());
	actionExeEvent.queue();
};
oFF.OlapDataProviderActions.prototype.setupDataProviderActions = function(dataProvider)
{
	oFF.XObject.prototype.setup.call( this );
	this.m_dataProvider = dataProvider;
	this.m_validator = oFF.OlapDataProviderActionValidator.create(this.m_dataProvider);
	this.m_runningActionPromises = oFF.XList.create();
	this.m_actionsCollections = oFF.XListOfNameObject.create();
	this.m_actionsCollections.add(oFF.OlapDataProviderLifecycleActionsCollection.createCollection(this));
	this.m_actionsCollections.add(oFF.OlapDataProviderPropertyActionsCollection.createCollection(this));
	this.m_actionsCollections.add(oFF.OlapDataProviderAxisActionsCollection.createCollection(this));
	this.m_actionsCollections.add(oFF.OlapDataProviderDimensionActionsCollection.createCollection(this));
	this.m_actionsCollections.add(oFF.OlapDataProviderVizActionsCollection.createCollection(this));
	this.m_actionsCollections.add(oFF.OlapDataProviderResultSetActionsCollection.createCollection(this));
	this.m_actionsCollections.add(oFF.OlapDataProviderFilterActionsCollection.createCollection(this));
	this.m_actionsCollections.add(oFF.OlapDataProviderAnalysisActionsCollection.createCollection(this));
	this.m_actionsCollections.add(oFF.OlapDataProviderHierarchyActionsCollection.createCollection(this));
	this.m_actionsCollections.add(oFF.OlapDataProviderPresentationActionsCollection.createCollection(this));
	this.m_actionsCollections.add(oFF.OlapDataProviderTotalsActionsCollection.createCollection(this));
	this.m_actionsCollections.add(oFF.OlapDataProviderReadModeActionsCollection.createCollection(this));
	this.m_actionsCollections.add(oFF.OlapDataProviderSerializationActionsCollection.createCollection(this));
	this.m_actionsCollections.add(oFF.OlapDataProviderSuppressionActionsCollection.createCollection(this));
	this.m_actionsCollections.add(oFF.OlapDataProviderQueryModelActionsCollection.createCollection(this));
	this.m_actionsCollections.add(oFF.OlapDataProviderVariableActionsCollection.createCollection(this));
	this.m_actionsCollections.add(oFF.OlapDataProviderSortActionsCollection.createCollection(this));
	this.m_actionsCollections.add(oFF.OlapDataProviderPlanningActionsCollection.createCollection(this));
	let allActionClasses = oFF.OlapDataProviderActionCollectionRegistry.getAllActionCollectionClasses();
	oFF.XCollectionUtils.forEach(allActionClasses, (actionClass) => {
		let actionCollection = actionClass.newInstance(null);
		actionCollection.setupCollection(this);
		this.m_actionsCollections.add(actionCollection);
	});
};
oFF.OlapDataProviderActions.prototype.startActionChain = function()
{
	this.startActionChainWithId(null);
};
oFF.OlapDataProviderActions.prototype.startActionChainWithId = function(correlationId)
{
	this.m_actionChainActive = true;
	this.m_actionChainId = oFF.notNull(correlationId) ? correlationId : oFF.XGuid.getGuid();
	this.m_dataProvider.getEventingBase().setEventingPaused(true);
};

oFF.DataProviderPool = function() {};
oFF.DataProviderPool.prototype = new oFF.XObject();
oFF.DataProviderPool.prototype._ff_c = "DataProviderPool";

oFF.DataProviderPool.createGlobal = function(process)
{
	let newObj = new oFF.DataProviderPool();
	newObj._setupDpPool(oFF.ProtocolType.FS_DP, process);
	return newObj;
};
oFF.DataProviderPool.createLocal = function(process)
{
	let newObj = new oFF.DataProviderPool();
	newObj._setupDpPool(oFF.ProtocolType.FS_DP, process);
	return newObj;
};
oFF.DataProviderPool.prototype.m_changedConsumers = null;
oFF.DataProviderPool.prototype.m_dataProviders = null;
oFF.DataProviderPool.prototype.m_poolUri = null;
oFF.DataProviderPool.prototype.m_process = null;
oFF.DataProviderPool.prototype._getGlobalPool = function()
{
	let pool;
	if (this.m_poolUri.getProtocolType() === oFF.ProtocolType.FS_DP)
	{
		pool = this;
	}
	else
	{
		pool = this.m_process.getSubSystem(oFF.SubSystemType.DATA_PROVIDER_POOL);
	}
	return pool;
};
oFF.DataProviderPool.prototype._getLocalPool = function(uri)
{
	let pool = null;
	let path = uri.getPath();
	let elements = oFF.XStringTokenizer.splitString(path, oFF.XUri.PATH_SEPARATOR);
	let process = this.m_process.getKernel().getKernelProcess();
	for (let i = 1; i < elements.size() - 1 && oFF.notNull(process); i++)
	{
		let name = elements.get(i);
		if (oFF.XString.startsWith(name, "."))
		{
			name = oFF.XString.substring(name, 1, -1);
			process = process.getChildProcessById(name);
		}
		else
		{
			process = null;
		}
	}
	if (oFF.notNull(process))
	{
		pool = process.getDataProviderPool();
	}
	return pool;
};
oFF.DataProviderPool.prototype._getPool = function(uri)
{
	let pool = null;
	let targetType = uri.getProtocolType();
	if (targetType === oFF.ProtocolType.FS_DP)
	{
		pool = this._getGlobalPool();
	}
	else
	{
		pool = this._getLocalPool(uri);
	}
	return pool;
};
oFF.DataProviderPool.prototype._notifyDataSpaceChanged = function(changedDpName)
{
	this.m_changedConsumers.accept(changedDpName);
};
oFF.DataProviderPool.prototype._setupDpPool = function(protocolType, process)
{
	this.m_process = process;
	let uri = oFF.XUri.create();
	uri.setProtocolType(protocolType);
	this.m_poolUri = uri;
	this.m_dataProviders = oFF.XListOfNameObject.create();
	this.m_changedConsumers = oFF.XConsumerCollection.create();
};
oFF.DataProviderPool.prototype.addChangeConsumer = function(consumer)
{
	return this.m_changedConsumers.addConsumer(consumer);
};
oFF.DataProviderPool.prototype.addDataProvider = function(dataProvider)
{
	this.m_dataProviders.add(dataProvider);
	this._notifyDataSpaceChanged(dataProvider.getName());
};
oFF.DataProviderPool.prototype.getAllDataProviderNames = function()
{
	return this.m_dataProviders.getKeysAsReadOnlyList();
};
oFF.DataProviderPool.prototype.getAllDataProviders = function()
{
	return oFF.XCollectionUtils.map(this.m_dataProviders, (dp) => {
		return dp;
	});
};
oFF.DataProviderPool.prototype.getComponentType = function()
{
	return oFF.IoComponentType.DATA_PROVIDER_POOL;
};
oFF.DataProviderPool.prototype.getDataProviderByName = function(name)
{
	return this.m_dataProviders.getByKey(name);
};
oFF.DataProviderPool.prototype.getDataProviderByUri = function(uri)
{
	let dp = null;
	if (oFF.notNull(uri))
	{
		let fileName = uri.getPathContainer().getFileName();
		dp = this.getDataProviderByName(fileName);
		if (oFF.isNull(dp))
		{
			let pool = this._getPool(uri);
			if (oFF.notNull(pool) && oFF.notNull(fileName))
			{
				dp = pool.getDataProviderByName(fileName);
			}
		}
	}
	return dp;
};
oFF.DataProviderPool.prototype.getPoolUri = function()
{
	return this.m_poolUri;
};
oFF.DataProviderPool.prototype.getProcess = function()
{
	return this.m_process;
};
oFF.DataProviderPool.prototype.getSession = function()
{
	return this.m_process;
};
oFF.DataProviderPool.prototype.hasDataProviderByName = function(name)
{
	return this.m_dataProviders.containsKey(name);
};
oFF.DataProviderPool.prototype.releaseObject = function()
{
	this.m_changedConsumers = oFF.XObjectExt.release(this.m_changedConsumers);
	this.m_dataProviders = oFF.XObjectExt.release(this.m_dataProviders);
	this.m_process = null;
	oFF.XObject.prototype.releaseObject.call( this );
};
oFF.DataProviderPool.prototype.removeChangeConsumerByUuid = function(consumerUuid)
{
	this.m_changedConsumers.removeConsumerByUuid(consumerUuid);
};
oFF.DataProviderPool.prototype.removeDataProviderByName = function(name)
{
	this.m_dataProviders.removeElement(this.m_dataProviders.getByKey(name));
	this._notifyDataSpaceChanged(name);
};
oFF.DataProviderPool.prototype.removeDataProviderByUri = function(uri)
{
	if (oFF.notNull(uri))
	{
		let fileName = uri.getPathContainer().getFileName();
		this.removeDataProviderByName(fileName);
	}
};

oFF.OlapDataProviderModelState = function() {};
oFF.OlapDataProviderModelState.prototype = new oFF.XConstant();
oFF.OlapDataProviderModelState.prototype._ff_c = "OlapDataProviderModelState";

oFF.OlapDataProviderModelState.QUERY = null;
oFF.OlapDataProviderModelState.VARIABLE = null;
oFF.OlapDataProviderModelState.staticSetup = function()
{
	oFF.OlapDataProviderModelState.QUERY = oFF.XConstant.setupName(new oFF.OlapDataProviderModelState(), "Query");
	oFF.OlapDataProviderModelState.VARIABLE = oFF.XConstant.setupName(new oFF.OlapDataProviderModelState(), "Variable");
};

oFF.OlapDataProviderPropertyType = function() {};
oFF.OlapDataProviderPropertyType.prototype = new oFF.XConstant();
oFF.OlapDataProviderPropertyType.prototype._ff_c = "OlapDataProviderPropertyType";

oFF.OlapDataProviderPropertyType.AUTO_FETCH = null;
oFF.OlapDataProviderPropertyType.s_lookup = null;
oFF.OlapDataProviderPropertyType.create = function(name, valueType)
{
	let object = oFF.XConstant.setupName(new oFF.OlapDataProviderPropertyType(), name);
	object.m_valueType = valueType;
	oFF.OlapDataProviderPropertyType.s_lookup.put(oFF.XString.toLowerCase(name), object);
	return object;
};
oFF.OlapDataProviderPropertyType.lookup = function(name)
{
	return oFF.OlapDataProviderPropertyType.s_lookup.getByKey(oFF.XString.toLowerCase(name));
};
oFF.OlapDataProviderPropertyType.staticSetup = function()
{
	oFF.OlapDataProviderPropertyType.s_lookup = oFF.XHashMapByString.create();
	oFF.OlapDataProviderPropertyType.AUTO_FETCH = oFF.OlapDataProviderPropertyType.create("olap.resulting.autoFetch", oFF.XValueType.BOOLEAN);
};
oFF.OlapDataProviderPropertyType.prototype.m_valueType = null;
oFF.OlapDataProviderPropertyType.prototype.getValueType = function()
{
	return this.m_valueType;
};

oFF.OlapDataProviderState = function() {};
oFF.OlapDataProviderState.prototype = new oFF.XConstant();
oFF.OlapDataProviderState.prototype._ff_c = "OlapDataProviderState";

oFF.OlapDataProviderState.IN_SYNC = null;
oFF.OlapDataProviderState.IN_SYNC_WITH_ERROR = null;
oFF.OlapDataProviderState.PROCESSING = null;
oFF.OlapDataProviderState.staticSetup = function()
{
	oFF.OlapDataProviderState.IN_SYNC = oFF.XConstant.setupName(new oFF.OlapDataProviderState(), "InSync");
	oFF.OlapDataProviderState.IN_SYNC_WITH_ERROR = oFF.XConstant.setupName(new oFF.OlapDataProviderState(), "InSyncWithError");
	oFF.OlapDataProviderState.PROCESSING = oFF.XConstant.setupName(new oFF.OlapDataProviderState(), "Processing");
};

oFF.OlapDataProviderVisualizationFillStrategy = function() {};
oFF.OlapDataProviderVisualizationFillStrategy.prototype = new oFF.XConstant();
oFF.OlapDataProviderVisualizationFillStrategy.prototype._ff_c = "OlapDataProviderVisualizationFillStrategy";

oFF.OlapDataProviderVisualizationFillStrategy.ACTIVE = null;
oFF.OlapDataProviderVisualizationFillStrategy.ALL = null;
oFF.OlapDataProviderVisualizationFillStrategy.NONE = null;
oFF.OlapDataProviderVisualizationFillStrategy.s_lookup = null;
oFF.OlapDataProviderVisualizationFillStrategy.create = function(name)
{
	let obj = oFF.XConstant.setupName(new oFF.OlapDataProviderVisualizationFillStrategy(), name);
	oFF.OlapDataProviderVisualizationFillStrategy.s_lookup.put(name, obj);
	return obj;
};
oFF.OlapDataProviderVisualizationFillStrategy.lookup = function(name)
{
	return oFF.OlapDataProviderVisualizationFillStrategy.s_lookup.getByKey(name);
};
oFF.OlapDataProviderVisualizationFillStrategy.staticSetup = function()
{
	oFF.OlapDataProviderVisualizationFillStrategy.s_lookup = oFF.XHashMapByString.create();
	oFF.OlapDataProviderVisualizationFillStrategy.ALL = oFF.OlapDataProviderVisualizationFillStrategy.create("All");
	oFF.OlapDataProviderVisualizationFillStrategy.ACTIVE = oFF.OlapDataProviderVisualizationFillStrategy.create("Active");
	oFF.OlapDataProviderVisualizationFillStrategy.NONE = oFF.OlapDataProviderVisualizationFillStrategy.create("None");
};

oFF.DfOlapDataProviderAction = function() {};
oFF.DfOlapDataProviderAction.prototype = new oFF.XObject();
oFF.DfOlapDataProviderAction.prototype._ff_c = "DfOlapDataProviderAction";

oFF.DfOlapDataProviderAction.prototype.m_parameters = null;
oFF.DfOlapDataProviderAction.prototype.applyDefaultValues = function(incomingParameters)
{
	let actionManifest = oFF.OlapDataProviderActionManifestRegistry.getInstance().getActionManifest(this.getName());
	if (oFF.isNull(actionManifest))
	{
		return incomingParameters;
	}
	let parametersWithDefaults = oFF.XList.create();
	let parameterDefinitions = actionManifest.getParameterList();
	for (let i = 0; i < parameterDefinitions.size(); i++)
	{
		let parameterDefinition = parameterDefinitions.get(i);
		if (i < incomingParameters.size() && incomingParameters.get(i) !== null)
		{
			parametersWithDefaults.add(incomingParameters.get(i));
		}
		else if (parameterDefinition.getDefaultValue() !== null)
		{
			parametersWithDefaults.add(parameterDefinition.getDefaultValue().getStringRepresentation());
		}
		else
		{
			parametersWithDefaults.add(null);
		}
	}
	return parametersWithDefaults;
};
oFF.DfOlapDataProviderAction.prototype.execute = function(dataProvider)
{
	return this.executeWithTypedResult(dataProvider).onThenExt((result) => {
		let newResult = oFF.OlapDataProviderActionResult.createGenericCopy(result);
		let returnValue = result.getReturnValue();
		if (oFF.notNull(returnValue))
		{
			if (oFF.XObject.isXObject(returnValue))
			{
				newResult.setReturnValue(oFF.XObject.castToAny(returnValue));
			}
			else
			{
				newResult.setReturnValue(this.returnValueToObject(returnValue));
			}
		}
		return newResult;
	});
};
oFF.DfOlapDataProviderAction.prototype.executeWithTypedResult = function(dataProvider)
{
	return this.doAction(dataProvider);
};
oFF.DfOlapDataProviderAction.prototype.getParameter = function(i)
{
	return this.m_parameters.get(i);
};
oFF.DfOlapDataProviderAction.prototype.getParameters = function()
{
	return this.m_parameters;
};
oFF.DfOlapDataProviderAction.prototype.isQueryManagerNeeded = function()
{
	return true;
};
oFF.DfOlapDataProviderAction.prototype.isReleaseAction = function()
{
	return false;
};
oFF.DfOlapDataProviderAction.prototype.newActionResult = function()
{
	let result = oFF.OlapDataProviderActionResult.create(this.getName());
	for (let i = 0; i < this.m_parameters.size(); i++)
	{
		let name = oFF.XStringUtils.concatenate2("value", oFF.XInteger.convertToString(i));
		let value = this.m_parameters.get(i);
		result.addLogParameter(name, value);
	}
	return result;
};
oFF.DfOlapDataProviderAction.prototype.releaseObject = function()
{
	this.m_parameters = oFF.XObjectExt.release(this.m_parameters);
	oFF.XObject.prototype.releaseObject.call( this );
};
oFF.DfOlapDataProviderAction.prototype.returnValueToObject = oFF.noSupport;
oFF.DfOlapDataProviderAction.prototype.setParameters = function(parameters)
{
	let params = oFF.XCollectionUtils.hasElements(parameters) ? parameters : oFF.XList.create();
	this.m_parameters = this.applyDefaultValues(params);
};
oFF.DfOlapDataProviderAction.prototype.setupAction = function()
{
	this.m_parameters = oFF.XList.create();
};
oFF.DfOlapDataProviderAction.prototype.toString = function()
{
	return this.getName();
};

oFF.OdpDfActionProperty = function() {};
oFF.OdpDfActionProperty.prototype = new oFF.DfCoProperty();
oFF.OdpDfActionProperty.prototype._ff_c = "OdpDfActionProperty";

oFF.OdpDfActionProperty.prototype.assertOlap = function(errors, dataProvider)
{
	let olapDataProvider = oFF.OlapDataProviderUtil.getOlapDataProvider(dataProvider);
	if (oFF.isNull(olapDataProvider))
	{
		errors.add(oFF.XError.create("not an olap DataProvider"));
	}
	return olapDataProvider;
};
oFF.OdpDfActionProperty.prototype.assertQueryManager = function(errors, dataProvider)
{
	let olapDataProvider = this.assertOlap(errors, dataProvider);
	if (oFF.XCollectionUtils.hasElements(errors))
	{
		return null;
	}
	let queryManager = olapDataProvider.getQueryManager();
	if (oFF.isNull(queryManager))
	{
		errors.add(oFF.XError.create("no QueryManager available"));
	}
	return queryManager;
};
oFF.OdpDfActionProperty.prototype.getNotValidValueError = function(message, value)
{
	return oFF.XError.create(oFF.XStringUtils.concatenate2(message, oFF.notNull(value) ? value : "null"));
};

oFF.OlapDataProviderActionExecutionEvent = function() {};
oFF.OlapDataProviderActionExecutionEvent.prototype = new oFF.DfOuDataProviderEvent();
oFF.OlapDataProviderActionExecutionEvent.prototype._ff_c = "OlapDataProviderActionExecutionEvent";

oFF.OlapDataProviderActionExecutionEvent.prototype.m_actionName = null;
oFF.OlapDataProviderActionExecutionEvent.prototype.m_parameters = null;
oFF.OlapDataProviderActionExecutionEvent.prototype.canMerge = function()
{
	return false;
};
oFF.OlapDataProviderActionExecutionEvent.prototype.getActionName = function()
{
	return this.m_actionName;
};
oFF.OlapDataProviderActionExecutionEvent.prototype.getEventType = function()
{
	return oFF.DataProviderEventType.ACTION_EXECUTION;
};
oFF.OlapDataProviderActionExecutionEvent.prototype.getParameters = function()
{
	return this.m_parameters;
};
oFF.OlapDataProviderActionExecutionEvent.prototype.isBuffered = function()
{
	return false;
};
oFF.OlapDataProviderActionExecutionEvent.prototype.mergeInternal = function(otherEvent) {};
oFF.OlapDataProviderActionExecutionEvent.prototype.releaseObject = function()
{
	oFF.DfOuDataProviderEvent.prototype.releaseObject.call( this );
};
oFF.OlapDataProviderActionExecutionEvent.prototype.setActionName = function(actionName)
{
	this.m_actionName = actionName;
};
oFF.OlapDataProviderActionExecutionEvent.prototype.setParameters = function(parameters)
{
	this.m_parameters = parameters;
};
oFF.OlapDataProviderActionExecutionEvent.prototype.setupDataProviderEventExt = function() {};

oFF.OlapDataProviderAllEvent = function() {};
oFF.OlapDataProviderAllEvent.prototype = new oFF.DfOuDataProviderEvent();
oFF.OlapDataProviderAllEvent.prototype._ff_c = "OlapDataProviderAllEvent";

oFF.OlapDataProviderAllEvent.prototype.m_subEvents = null;
oFF.OlapDataProviderAllEvent.prototype.addSubEvent = function(event)
{
	this.m_subEvents.add(event);
};
oFF.OlapDataProviderAllEvent.prototype.canMerge = function()
{
	return false;
};
oFF.OlapDataProviderAllEvent.prototype.getActionExecutionEvent = function()
{
	return this.getEventByType(oFF.DataProviderEventType.ACTION_EXECUTION);
};
oFF.OlapDataProviderAllEvent.prototype.getErrorEvent = function()
{
	return this.getEventByType(oFF.DataProviderEventType.ERROR);
};
oFF.OlapDataProviderAllEvent.prototype.getEventByType = function(eventType)
{
	return oFF.XCollectionUtils.findFirst(this.m_subEvents, (evt) => {
		return evt.getEventType() === eventType;
	});
};
oFF.OlapDataProviderAllEvent.prototype.getEventType = function()
{
	return oFF.DataProviderEventType.ALL;
};
oFF.OlapDataProviderAllEvent.prototype.getLifecycleEvent = function()
{
	return this.getEventByType(oFF.DataProviderEventType.LIFECYCLE);
};
oFF.OlapDataProviderAllEvent.prototype.getModelChangeEvent = function()
{
	return this.getEventByType(oFF.OlapDataProviderEventType.MODEL_CHANGE);
};
oFF.OlapDataProviderAllEvent.prototype.getPropertyChangeEvent = function()
{
	return this.getEventByType(oFF.DataProviderEventType.PROPERTY_CHANGE);
};
oFF.OlapDataProviderAllEvent.prototype.getResultDataFetchEvent = function()
{
	return this.getEventByType(oFF.OlapDataProviderEventType.RESULT_DATA_FETCH);
};
oFF.OlapDataProviderAllEvent.prototype.getSubEvents = function()
{
	return this.m_subEvents;
};
oFF.OlapDataProviderAllEvent.prototype.getVisualizationChangeEvent = function()
{
	return this.getEventByType(oFF.OlapDataProviderEventType.VISUALIZATION_CHANGE);
};
oFF.OlapDataProviderAllEvent.prototype.isExternal = function()
{
	let events = this.m_subEvents.getValuesAsReadOnlyList();
	for (let i = 0; i < events.size(); i++)
	{
		if (events.get(i).isExternal())
		{
			return true;
		}
	}
	return oFF.DfOuDataProviderEvent.prototype.isExternal.call( this );
};
oFF.OlapDataProviderAllEvent.prototype.mergeInternal = function(otherEvent) {};
oFF.OlapDataProviderAllEvent.prototype.releaseObject = function()
{
	this.m_subEvents = oFF.XObjectExt.release(this.m_subEvents);
	oFF.DfOuDataProviderEvent.prototype.releaseObject.call( this );
};
oFF.OlapDataProviderAllEvent.prototype.setupDataProviderEventExt = function()
{
	this.m_subEvents = oFF.XList.create();
};

oFF.OlapDataProviderErrorEvent = function() {};
oFF.OlapDataProviderErrorEvent.prototype = new oFF.DfOuDataProviderEvent();
oFF.OlapDataProviderErrorEvent.prototype._ff_c = "OlapDataProviderErrorEvent";

oFF.OlapDataProviderErrorEvent.prototype.m_errors = null;
oFF.OlapDataProviderErrorEvent.prototype.addError = function(error)
{
	this.m_errors.add(error);
	return this;
};
oFF.OlapDataProviderErrorEvent.prototype.addErrors = function(error)
{
	this.m_errors.addAll(error);
	return this;
};
oFF.OlapDataProviderErrorEvent.prototype.getErrors = function()
{
	return this.m_errors;
};
oFF.OlapDataProviderErrorEvent.prototype.getEventType = function()
{
	return oFF.DataProviderEventType.ERROR;
};
oFF.OlapDataProviderErrorEvent.prototype.isBuffered = function()
{
	return false;
};
oFF.OlapDataProviderErrorEvent.prototype.mergeInternal = function(otherEvent)
{
	if (otherEvent.getEventType() !== this.getEventType())
	{
		return;
	}
	let otherErrorEvent = otherEvent;
	this.m_errors.addAll(otherErrorEvent.getErrors());
};
oFF.OlapDataProviderErrorEvent.prototype.releaseObject = function()
{
	this.m_errors = oFF.XObjectExt.release(this.m_errors);
	oFF.DfOuDataProviderEvent.prototype.releaseObject.call( this );
};
oFF.OlapDataProviderErrorEvent.prototype.setupDataProviderEventExt = function()
{
	this.m_errors = oFF.XList.create();
};

oFF.OlapDataProviderLifecycleEvent = function() {};
oFF.OlapDataProviderLifecycleEvent.prototype = new oFF.DfOuDataProviderEvent();
oFF.OlapDataProviderLifecycleEvent.prototype._ff_c = "OlapDataProviderLifecycleEvent";

oFF.OlapDataProviderLifecycleEvent.prototype.m_newState = null;
oFF.OlapDataProviderLifecycleEvent.prototype.m_oldState = null;
oFF.OlapDataProviderLifecycleEvent.prototype.canMerge = function()
{
	return false;
};
oFF.OlapDataProviderLifecycleEvent.prototype.getEventType = function()
{
	return oFF.DataProviderEventType.LIFECYCLE;
};
oFF.OlapDataProviderLifecycleEvent.prototype.getNewState = function()
{
	return this.m_newState;
};
oFF.OlapDataProviderLifecycleEvent.prototype.getOldState = function()
{
	return this.m_oldState;
};
oFF.OlapDataProviderLifecycleEvent.prototype.isBuffered = function()
{
	return false;
};
oFF.OlapDataProviderLifecycleEvent.prototype.isNewlyConnected = function()
{
	return oFF.notNull(this.m_oldState) && this.m_oldState.isTypeOf(oFF.DataProviderLifecycle.DISCONNECTED) && this.m_newState.isTypeOf(oFF.DataProviderLifecycle.CONNECTED);
};
oFF.OlapDataProviderLifecycleEvent.prototype.mergeInternal = function(otherEvent) {};
oFF.OlapDataProviderLifecycleEvent.prototype.releaseObject = function()
{
	oFF.DfOuDataProviderEvent.prototype.releaseObject.call( this );
};
oFF.OlapDataProviderLifecycleEvent.prototype.setNewState = function(newState)
{
	this.m_newState = newState;
};
oFF.OlapDataProviderLifecycleEvent.prototype.setOldState = function(oldState)
{
	this.m_oldState = oldState;
};
oFF.OlapDataProviderLifecycleEvent.prototype.setupDataProviderEventExt = function() {};

oFF.OlapDataProviderModelChangeEvent = function() {};
oFF.OlapDataProviderModelChangeEvent.prototype = new oFF.DfOuDataProviderEvent();
oFF.OlapDataProviderModelChangeEvent.prototype._ff_c = "OlapDataProviderModelChangeEvent";

oFF.OlapDataProviderModelChangeEvent.prototype.m_changedComponents = null;
oFF.OlapDataProviderModelChangeEvent.prototype.addAllChangedComponents = function(changedComponents)
{
	this.m_changedComponents.addAll(changedComponents);
};
oFF.OlapDataProviderModelChangeEvent.prototype.addChangedComponent = function(changedComponent)
{
	this.m_changedComponents.add(changedComponent);
};
oFF.OlapDataProviderModelChangeEvent.prototype.getChangedComponents = function()
{
	return this.m_changedComponents;
};
oFF.OlapDataProviderModelChangeEvent.prototype.getEventType = function()
{
	return oFF.OlapDataProviderEventType.MODEL_CHANGE;
};
oFF.OlapDataProviderModelChangeEvent.prototype.hasAnyComponentChanged = function()
{
	return this.m_changedComponents.hasElements();
};
oFF.OlapDataProviderModelChangeEvent.prototype.hasComponentChanged = function(componentType)
{
	return this.m_changedComponents.contains(componentType);
};
oFF.OlapDataProviderModelChangeEvent.prototype.hasComponentOrParentChanged = function(componentType)
{
	return oFF.XCollectionUtils.contains(this.m_changedComponents, (changedComponent) => {
		return changedComponent.isTypeOf(componentType);
	});
};
oFF.OlapDataProviderModelChangeEvent.prototype.mergeInternal = function(otherEvent)
{
	if (otherEvent.getEventType() !== this.getEventType())
	{
		return;
	}
	let otherModelEvent = otherEvent;
	this.m_changedComponents.addAll(otherModelEvent.getChangedComponents());
};
oFF.OlapDataProviderModelChangeEvent.prototype.releaseObject = function()
{
	this.m_changedComponents = oFF.XObjectExt.release(this.m_changedComponents);
	oFF.DfOuDataProviderEvent.prototype.releaseObject.call( this );
};
oFF.OlapDataProviderModelChangeEvent.prototype.setupDataProviderEventExt = function()
{
	this.m_changedComponents = oFF.XSetOfNameObject.create();
};

oFF.OlapDataProviderModelStateEvent = function() {};
oFF.OlapDataProviderModelStateEvent.prototype = new oFF.DfOuDataProviderEvent();
oFF.OlapDataProviderModelStateEvent.prototype._ff_c = "OlapDataProviderModelStateEvent";

oFF.OlapDataProviderModelStateEvent.prototype.m_newState = null;
oFF.OlapDataProviderModelStateEvent.prototype.canMerge = function()
{
	return false;
};
oFF.OlapDataProviderModelStateEvent.prototype.getEventType = function()
{
	return oFF.OlapDataProviderEventType.MODEL_STATE;
};
oFF.OlapDataProviderModelStateEvent.prototype.getNewState = function()
{
	return this.m_newState;
};
oFF.OlapDataProviderModelStateEvent.prototype.isBuffered = function()
{
	return false;
};
oFF.OlapDataProviderModelStateEvent.prototype.mergeInternal = function(otherEvent) {};
oFF.OlapDataProviderModelStateEvent.prototype.releaseObject = function()
{
	this.m_newState = null;
	oFF.DfOuDataProviderEvent.prototype.releaseObject.call( this );
};
oFF.OlapDataProviderModelStateEvent.prototype.setNewState = function(state)
{
	this.m_newState = state;
};
oFF.OlapDataProviderModelStateEvent.prototype.setupDataProviderEventExt = function() {};

oFF.OlapDataProviderPropertyChangeEvent = function() {};
oFF.OlapDataProviderPropertyChangeEvent.prototype = new oFF.DfOuDataProviderEvent();
oFF.OlapDataProviderPropertyChangeEvent.prototype._ff_c = "OlapDataProviderPropertyChangeEvent";

oFF.OlapDataProviderPropertyChangeEvent.prototype.m_changedProperties = null;
oFF.OlapDataProviderPropertyChangeEvent.prototype.m_newPropertyValues = null;
oFF.OlapDataProviderPropertyChangeEvent.prototype.addChangedProperty = function(name, value)
{
	this.m_changedProperties.add(name);
	this.m_newPropertyValues.add(value);
};
oFF.OlapDataProviderPropertyChangeEvent.prototype.getChangedProperties = function()
{
	return this.m_changedProperties;
};
oFF.OlapDataProviderPropertyChangeEvent.prototype.getEventType = function()
{
	return oFF.DataProviderEventType.PROPERTY_CHANGE;
};
oFF.OlapDataProviderPropertyChangeEvent.prototype.getNewPropertyValues = function()
{
	return this.m_newPropertyValues;
};
oFF.OlapDataProviderPropertyChangeEvent.prototype.mergeInternal = function(otherEvent)
{
	if (otherEvent.getEventType() !== this.getEventType())
	{
		return;
	}
	let otherPropertyEvent = otherEvent;
	this.m_changedProperties.addAll(otherPropertyEvent.getChangedProperties());
	this.m_newPropertyValues.addAll(otherPropertyEvent.getNewPropertyValues());
};
oFF.OlapDataProviderPropertyChangeEvent.prototype.releaseObject = function()
{
	this.m_changedProperties = oFF.XObjectExt.release(this.m_changedProperties);
	this.m_newPropertyValues = oFF.XObjectExt.release(this.m_newPropertyValues);
	oFF.DfOuDataProviderEvent.prototype.releaseObject.call( this );
};
oFF.OlapDataProviderPropertyChangeEvent.prototype.setupDataProviderEventExt = function()
{
	this.m_changedProperties = oFF.XList.create();
	this.m_newPropertyValues = oFF.XList.create();
};

oFF.OlapDataProviderResultDataFetchEvent = function() {};
oFF.OlapDataProviderResultDataFetchEvent.prototype = new oFF.DfOuDataProviderEvent();
oFF.OlapDataProviderResultDataFetchEvent.prototype._ff_c = "OlapDataProviderResultDataFetchEvent";

oFF.OlapDataProviderResultDataFetchEvent.prototype.m_affectedVisualizationNames = null;
oFF.OlapDataProviderResultDataFetchEvent.prototype.m_messageManager = null;
oFF.OlapDataProviderResultDataFetchEvent.prototype.m_step = null;
oFF.OlapDataProviderResultDataFetchEvent.prototype.addAffectedVisualizationName = function(vizName)
{
	this.m_affectedVisualizationNames.add(vizName);
	return this;
};
oFF.OlapDataProviderResultDataFetchEvent.prototype.addAffectedVisualizationNames = function(vizNames)
{
	this.m_affectedVisualizationNames.addAll(vizNames);
	return this;
};
oFF.OlapDataProviderResultDataFetchEvent.prototype.addMessages = function(messages)
{
	this.m_messageManager.addAllMessages(messages);
	return this;
};
oFF.OlapDataProviderResultDataFetchEvent.prototype.canMerge = function()
{
	return false;
};
oFF.OlapDataProviderResultDataFetchEvent.prototype.getAffectedVisualizationNames = function()
{
	return this.m_affectedVisualizationNames;
};
oFF.OlapDataProviderResultDataFetchEvent.prototype.getEventType = function()
{
	return oFF.OlapDataProviderEventType.RESULT_DATA_FETCH;
};
oFF.OlapDataProviderResultDataFetchEvent.prototype.getFilledVisualizationNames = function()
{
	return this.m_affectedVisualizationNames;
};
oFF.OlapDataProviderResultDataFetchEvent.prototype.getMessages = function()
{
	return this.m_messageManager;
};
oFF.OlapDataProviderResultDataFetchEvent.prototype.getStep = function()
{
	return this.m_step;
};
oFF.OlapDataProviderResultDataFetchEvent.prototype.isBuffered = function()
{
	return false;
};
oFF.OlapDataProviderResultDataFetchEvent.prototype.mergeInternal = function(otherEvent) {};
oFF.OlapDataProviderResultDataFetchEvent.prototype.releaseObject = function()
{
	this.m_step = null;
	this.m_messageManager = oFF.XObjectExt.release(this.m_messageManager);
	this.m_affectedVisualizationNames = oFF.XObjectExt.release(this.m_affectedVisualizationNames);
	oFF.DfOuDataProviderEvent.prototype.releaseObject.call( this );
};
oFF.OlapDataProviderResultDataFetchEvent.prototype.setStep = function(step)
{
	this.m_step = step;
	return this;
};
oFF.OlapDataProviderResultDataFetchEvent.prototype.setupDataProviderEventExt = function()
{
	this.m_messageManager = oFF.MessageManagerSimple.createMessageManager();
	this.m_affectedVisualizationNames = oFF.XList.create();
};

oFF.OlapDataProviderResultDataFetchStep = function() {};
oFF.OlapDataProviderResultDataFetchStep.prototype = new oFF.XConstant();
oFF.OlapDataProviderResultDataFetchStep.prototype._ff_c = "OlapDataProviderResultDataFetchStep";

oFF.OlapDataProviderResultDataFetchStep.ALL_DONE = null;
oFF.OlapDataProviderResultDataFetchStep.FETCH_STARTED = null;
oFF.OlapDataProviderResultDataFetchStep.GRID_COLLECTED = null;
oFF.OlapDataProviderResultDataFetchStep.QUERY_EXECUTED = null;
oFF.OlapDataProviderResultDataFetchStep.VISUALIZATION_FILLED = null;
oFF.OlapDataProviderResultDataFetchStep.createStep = function(name)
{
	return oFF.XConstant.setupName(new oFF.OlapDataProviderResultDataFetchStep(), name);
};
oFF.OlapDataProviderResultDataFetchStep.staticSetup = function()
{
	oFF.OlapDataProviderResultDataFetchStep.FETCH_STARTED = oFF.OlapDataProviderResultDataFetchStep.createStep("FetchStarted");
	oFF.OlapDataProviderResultDataFetchStep.QUERY_EXECUTED = oFF.OlapDataProviderResultDataFetchStep.createStep("QueryExecuted");
	oFF.OlapDataProviderResultDataFetchStep.GRID_COLLECTED = oFF.OlapDataProviderResultDataFetchStep.createStep("GridCollected");
	oFF.OlapDataProviderResultDataFetchStep.VISUALIZATION_FILLED = oFF.OlapDataProviderResultDataFetchStep.createStep("VisualizationFilled");
	oFF.OlapDataProviderResultDataFetchStep.ALL_DONE = oFF.OlapDataProviderResultDataFetchStep.createStep("AllDone");
};

oFF.OlapDataProviderVisualizationChangeEvent = function() {};
oFF.OlapDataProviderVisualizationChangeEvent.prototype = new oFF.DfOuDataProviderEvent();
oFF.OlapDataProviderVisualizationChangeEvent.prototype._ff_c = "OlapDataProviderVisualizationChangeEvent";

oFF.OlapDataProviderVisualizationChangeEvent.prototype.m_changedVisualizations = null;
oFF.OlapDataProviderVisualizationChangeEvent.prototype.addAllChangedVisualizationNames = function(changedVisualizations)
{
	this.m_changedVisualizations.addAll(changedVisualizations);
};
oFF.OlapDataProviderVisualizationChangeEvent.prototype.addChangedVisualizationName = function(changedVisualization)
{
	this.m_changedVisualizations.add(changedVisualization);
};
oFF.OlapDataProviderVisualizationChangeEvent.prototype.getChangedVisualizationNames = function()
{
	return this.m_changedVisualizations;
};
oFF.OlapDataProviderVisualizationChangeEvent.prototype.getEventType = function()
{
	return oFF.OlapDataProviderEventType.VISUALIZATION_CHANGE;
};
oFF.OlapDataProviderVisualizationChangeEvent.prototype.mergeInternal = function(otherEvent)
{
	if (otherEvent.getEventType() !== this.getEventType())
	{
		return;
	}
	let otherVizEvent = otherEvent;
	this.m_changedVisualizations.addAll(otherVizEvent.getChangedVisualizationNames());
};
oFF.OlapDataProviderVisualizationChangeEvent.prototype.releaseObject = function()
{
	this.m_changedVisualizations = oFF.XObjectExt.release(this.m_changedVisualizations);
	oFF.DfOuDataProviderEvent.prototype.releaseObject.call( this );
};
oFF.OlapDataProviderVisualizationChangeEvent.prototype.setupDataProviderEventExt = function()
{
	this.m_changedVisualizations = oFF.XHashSetOfString.create();
};

oFF.OlapDataProviderFileType = function() {};
oFF.OlapDataProviderFileType.prototype = new oFF.XConstant();
oFF.OlapDataProviderFileType.prototype._ff_c = "OlapDataProviderFileType";

oFF.OlapDataProviderFileType.SAC_MODEL = null;
oFF.OlapDataProviderFileType.s_all = null;
oFF.OlapDataProviderFileType.createDataProviderFileType = function(name, associatedType, fileAttributeNodeType1, fileAttributeNodeType2)
{
	let obj = oFF.XConstant.setupName(new oFF.OlapDataProviderFileType(), name);
	obj.m_metaObjectType = associatedType;
	obj.m_primaryFileAttributeNodeType = fileAttributeNodeType1;
	obj.m_secondaryFileAttributeNodeType = fileAttributeNodeType2;
	oFF.OlapDataProviderFileType.s_all.add(obj);
	return obj;
};
oFF.OlapDataProviderFileType.lookup = function(name)
{
	return oFF.OlapDataProviderFileType.s_all.getByKey(name);
};
oFF.OlapDataProviderFileType.lookupByFileAttributeNodeType = function(fileAttributeNodeType)
{
	return oFF.XCollectionUtils.findFirst(oFF.OlapDataProviderFileType.s_all, (obj) => {
		return oFF.XString.isEqual(obj.m_primaryFileAttributeNodeType, fileAttributeNodeType) || oFF.XString.isEqual(obj.m_secondaryFileAttributeNodeType, fileAttributeNodeType);
	});
};
oFF.OlapDataProviderFileType.staticSetup = function()
{
	oFF.OlapDataProviderFileType.s_all = oFF.XSetOfNameObject.create();
	oFF.OlapDataProviderFileType.SAC_MODEL = oFF.OlapDataProviderFileType.createDataProviderFileType("SacModel", oFF.MetaObjectType.SFX, "CUBE", "Model");
};
oFF.OlapDataProviderFileType.prototype.m_metaObjectType = null;
oFF.OlapDataProviderFileType.prototype.m_primaryFileAttributeNodeType = null;
oFF.OlapDataProviderFileType.prototype.m_secondaryFileAttributeNodeType = null;
oFF.OlapDataProviderFileType.prototype.getMetaObjectType = function()
{
	return this.m_metaObjectType;
};
oFF.OlapDataProviderFileType.prototype.getPrimaryFileAttributeNodeType = function()
{
	return this.m_primaryFileAttributeNodeType;
};
oFF.OlapDataProviderFileType.prototype.getSecondaryFileAttributeNodeType = function()
{
	return this.m_secondaryFileAttributeNodeType;
};

oFF.OlapDataProvider = function() {};
oFF.OlapDataProvider.prototype = new oFF.XObject();
oFF.OlapDataProvider.prototype._ff_c = "OlapDataProvider";

oFF.OlapDataProvider.createDataProvider = function(config)
{
	let obj = new oFF.OlapDataProvider();
	obj.setupDataProvider(config.getExistingQueryManager(), config);
	return obj;
};
oFF.OlapDataProvider.createDataProviderWithQueryManager = function(queryManager, config)
{
	let obj = new oFF.OlapDataProvider();
	obj.setupDataProvider(queryManager, config);
	return obj;
};
oFF.OlapDataProvider.prototype.m_actions = null;
oFF.OlapDataProvider.prototype.m_config = null;
oFF.OlapDataProvider.prototype.m_connector = null;
oFF.OlapDataProvider.prototype.m_createdAt = 0;
oFF.OlapDataProvider.prototype.m_eventing = null;
oFF.OlapDataProvider.prototype.m_lifecycle = null;
oFF.OlapDataProvider.prototype.m_logger = null;
oFF.OlapDataProvider.prototype.m_name = null;
oFF.OlapDataProvider.prototype.m_notificationCenter = null;
oFF.OlapDataProvider.prototype.m_properties = null;
oFF.OlapDataProvider.prototype.m_queryManager = null;
oFF.OlapDataProvider.prototype.m_queryManagerCreationPromise = null;
oFF.OlapDataProvider.prototype.m_releasePromise = null;
oFF.OlapDataProvider.prototype.m_resulting = null;
oFF.OlapDataProvider.prototype.getActions = function()
{
	return this.m_actions;
};
oFF.OlapDataProvider.prototype.getApplication = function()
{
	return this.m_config.getApplication();
};
oFF.OlapDataProvider.prototype.getBasicActions = function()
{
	return this.m_actions;
};
oFF.OlapDataProvider.prototype.getBasicEventing = function()
{
	return this.m_eventing;
};
oFF.OlapDataProvider.prototype.getCc = function()
{
	return oFF.notNull(this.m_queryManager) ? this.m_queryManager.getConvenienceCommands() : null;
};
oFF.OlapDataProvider.prototype.getConfig = function()
{
	return this.m_config;
};
oFF.OlapDataProvider.prototype.getConnection = function()
{
	return this.m_connector.getCurrentConnected();
};
oFF.OlapDataProvider.prototype.getConnector = function()
{
	return this.m_connector;
};
oFF.OlapDataProvider.prototype.getConnectorBase = function()
{
	return this.m_connector;
};
oFF.OlapDataProvider.prototype.getCreatedAt = function()
{
	return this.m_createdAt;
};
oFF.OlapDataProvider.prototype.getDataSourceName = function()
{
	let currentlyConnectedConfig = this.m_connector.getCurrentConnected();
	if (oFF.isNull(currentlyConnectedConfig))
	{
		return null;
	}
	return currentlyConnectedConfig.getDataSourceName();
};
oFF.OlapDataProvider.prototype.getEventing = function()
{
	return this.m_eventing;
};
oFF.OlapDataProvider.prototype.getEventingBase = function()
{
	return this.m_eventing;
};
oFF.OlapDataProvider.prototype.getExternalRepresentation = function(format)
{
	let structure = oFF.PrFactory.createStructure();
	structure.putString(oFF.ObjectPathConstants.OBJECT_NAME, this.getName());
	let visualizations = structure.putNewList(oFF.ObjectPathConstants.OBJECT_TYPE_VISUALISATION);
	oFF.XCollectionUtils.forEach(this.getQueryManager().getQueryModel().getVisualizationManager().getVisualizationDefinitions(), (item) => {
		visualizations.addString(item.getName());
	});
	let variables = structure.putNewList(oFF.ObjectPathConstants.OBJECT_TYPE_VARIABLES);
	oFF.XCollectionUtils.forEach(this.getQueryManager().getQueryModel().getVariables(), (item) => {
		variables.addString(item.getName());
	});
	let dimensions = structure.putNewList(oFF.ObjectPathConstants.OBJECT_TYPE_DIMENSIONS);
	oFF.XCollectionUtils.forEach(this.getQueryManager().getQueryModel().getDimensions(), (item) => {
		dimensions.addString(item.getName());
	});
	return structure;
};
oFF.OlapDataProvider.prototype.getHooks = function()
{
	return this.m_config.getHooks();
};
oFF.OlapDataProvider.prototype.getHooksBase = function()
{
	return this.m_config.getHooks();
};
oFF.OlapDataProvider.prototype.getInaDataSource = function()
{
	return this.getConnector().getInaDataSource();
};
oFF.OlapDataProvider.prototype.getLifecycle = function()
{
	return this.m_lifecycle;
};
oFF.OlapDataProvider.prototype.getLogger = function()
{
	return this.m_logger;
};
oFF.OlapDataProvider.prototype.getLoggerBase = function()
{
	return this.m_logger;
};
oFF.OlapDataProvider.prototype.getName = function()
{
	return this.m_name;
};
oFF.OlapDataProvider.prototype.getNotificationCenter = function()
{
	return this.m_notificationCenter;
};
oFF.OlapDataProvider.prototype.getObjectFromPath = function(path)
{
	let sObjectType = oFF.ObjectPathUtils.getObjectType(path);
	let object = null;
	switch (sObjectType)
	{
		case oFF.ObjectPathConstants.OBJECT_TYPE_VISUALISATION:
			let vizName = oFF.ObjectPathUtils.getObjectName(path, oFF.ObjectPathConstants.OBJECT_TYPE_VISUALISATION);
			object = this.getQueryManager().getQueryModel().getVisualizationManager().getVisualizationDefinitionByName(vizName);
			break;

		case oFF.ObjectPathConstants.OBJECT_TYPE_VARIABLES:
			let variableName = oFF.ObjectPathUtils.getObjectName(path, oFF.ObjectPathConstants.OBJECT_TYPE_VARIABLES);
			object = this.getQueryManager().getQueryModel().getVariable(variableName);
			break;

		case oFF.ObjectPathConstants.OBJECT_TYPE_DIMENSIONS:
			let dimensionName = oFF.ObjectPathUtils.getObjectName(path, oFF.ObjectPathConstants.OBJECT_TYPE_DIMENSIONS);
			object = this.getQueryManager().getQueryModel().getDimensionByName(dimensionName);
			break;

		default:
			break;
	}
	return object;
};
oFF.OlapDataProvider.prototype.getObjectName = function()
{
	return this.getName();
};
oFF.OlapDataProvider.prototype.getObjectPath = function()
{
	return oFF.ObjectPathUtils.createPath(null, this.getObjectType(), this.getObjectName());
};
oFF.OlapDataProvider.prototype.getObjectType = function()
{
	return oFF.ObjectPathConstants.OBJECT_TYPE_DATAPROVIDER;
};
oFF.OlapDataProvider.prototype.getOrCreateQueryManager = function()
{
	if (oFF.notNull(this.m_queryManager) && !this.m_queryManager.isReleased())
	{
		return oFF.XPromise.resolve(this.m_queryManager);
	}
	if (oFF.notNull(this.m_queryManagerCreationPromise) && this.m_queryManagerCreationPromise.getState() !== oFF.XPromiseState.FULFILLED)
	{
		return this.m_queryManagerCreationPromise;
	}
	this.m_queryManagerCreationPromise = this.getActions().getLifecycleActions().connectDataProvider(null, false).onThenExt((empty) => {
		return this.m_queryManager;
	});
	return this.m_queryManagerCreationPromise;
};
oFF.OlapDataProvider.prototype.getPathForObject = function(object)
{
	return "";
};
oFF.OlapDataProvider.prototype.getProcess = function()
{
	return this.m_config.getProcess();
};
oFF.OlapDataProvider.prototype.getProperties = function()
{
	return this.m_properties;
};
oFF.OlapDataProvider.prototype.getPropertiesBase = function()
{
	return this.m_properties;
};
oFF.OlapDataProvider.prototype.getQueryManager = function()
{
	if (oFF.isNull(this.m_queryManager) || this.m_queryManager.isReleased())
	{
		return null;
	}
	return this.m_queryManager;
};
oFF.OlapDataProvider.prototype.getResulting = function()
{
	return this.m_resulting;
};
oFF.OlapDataProvider.prototype.getResultingBase = function()
{
	return this.m_resulting;
};
oFF.OlapDataProvider.prototype.getSession = function()
{
	return this.m_config.getProcess();
};
oFF.OlapDataProvider.prototype.getState = function()
{
	if (!this.m_actions.getRunningActionPromises().isEmpty())
	{
		return oFF.OlapDataProviderState.PROCESSING;
	}
	return oFF.OlapDataProviderState.IN_SYNC;
};
oFF.OlapDataProvider.prototype.getStringActions = function()
{
	return this.getActions();
};
oFF.OlapDataProvider.prototype.getSystemName = function()
{
	let currentlyConnectedConfig = this.m_connector.getCurrentConnected();
	if (oFF.isNull(currentlyConnectedConfig))
	{
		return null;
	}
	return currentlyConnectedConfig.getSystemName();
};
oFF.OlapDataProvider.prototype.getType = function()
{
	return oFF.DataProviderType.OLAP;
};
oFF.OlapDataProvider.prototype.isAutoSubmitEffective = function()
{
	let queryManager = this.getQueryManager();
	if (oFF.isNull(this.m_queryManager) || !this.m_config.isAutoSubmitEnabled())
	{
		return false;
	}
	return queryManager.getModelCapabilities().supportsAutoVariableSubmit() || queryManager.isDirectVariableTransferEnabled();
};
oFF.OlapDataProvider.prototype.isReleasing = function()
{
	return oFF.notNull(this.m_releasePromise) && this.m_releasePromise.getState() === oFF.XPromiseState.PENDING;
};
oFF.OlapDataProvider.prototype.releaseObject = function()
{
	this.m_lifecycle = oFF.DataProviderLifecycle.RELEASED;
	this.m_name = null;
	this.m_queryManager = null;
	this.m_config = oFF.XObjectExt.release(this.m_config);
	this.m_createdAt = -1;
	this.m_logger = oFF.XObjectExt.release(this.m_logger);
	this.m_connector = oFF.XObjectExt.release(this.m_connector);
	this.m_eventing = oFF.XObjectExt.release(this.m_eventing);
	this.m_actions = oFF.XObjectExt.release(this.m_actions);
	this.m_resulting = oFF.XObjectExt.release(this.m_resulting);
	this.m_properties = oFF.XObjectExt.release(this.m_properties);
	this.m_notificationCenter = oFF.XObjectExt.release(this.m_notificationCenter);
	oFF.XObject.prototype.releaseObject.call( this );
};
oFF.OlapDataProvider.prototype.setConfig = function(config)
{
	if (oFF.isNull(config))
	{
		this.m_config = oFF.OlapDataProviderConfiguration.createDefaultConfig(this.m_config.getProcess(), this.getName());
	}
	else
	{
		this.m_config = config;
	}
};
oFF.OlapDataProvider.prototype.setConnection = function(connection)
{
	let newConnection = connection;
	if (oFF.isNull(newConnection))
	{
		newConnection = oFF.OlapDataProviderConnection.createDefaultConnection(this.m_config.getProcess());
	}
	this.m_connector.setConnection(newConnection);
};
oFF.OlapDataProvider.prototype.setLifecycle = function(lifecycle, correlationId)
{
	if (oFF.isNull(lifecycle) || this.m_lifecycle === lifecycle)
	{
		return;
	}
	let oldLifecycle = this.m_lifecycle;
	this.m_lifecycle = lifecycle;
	let lifeEvt = this.m_eventing.getEmitterForLifecycle().newTypedEvent();
	lifeEvt.setCorrelationId(correlationId);
	lifeEvt.setOldState(oldLifecycle);
	lifeEvt.setNewState(this.m_lifecycle);
	lifeEvt.queue();
};
oFF.OlapDataProvider.prototype.setQueryManager = function(queryManager)
{
	if (this.m_queryManager === queryManager)
	{
		return;
	}
	this.m_eventing.setQueryManager(queryManager);
	this.m_queryManager = queryManager;
};
oFF.OlapDataProvider.prototype.setupDataProvider = function(queryManager, config)
{
	oFF.XObject.prototype.setup.call( this );
	this.m_queryManager = queryManager;
	this.m_config = config;
	this.m_createdAt = oFF.XSystemUtils.getCurrentTimeInMilliseconds();
	this.m_name = this.m_config.getDataProviderName() !== null ? this.m_config.getDataProviderName() : oFF.XGuid.getGuid();
	let startConnectionConfiguration = this.m_config.getStartConnection();
	this.m_connector = oFF.OlapDataProviderConnector.create(this);
	this.m_connector.setConnection(startConnectionConfiguration);
	this.m_properties = oFF.OlapDataProviderProperties.createProperties();
	this.m_logger = oFF.OlapDataProviderLogger.createActionsLogger(this.m_config.getProcess(), this.m_config.isForceLoggingEnabled());
	this.m_actions = oFF.OlapDataProviderActions.createDataProviderActions(this);
	this.m_eventing = oFF.OlapDataProviderEventing.createEventing(this, this.m_queryManager);
	this.m_resulting = oFF.OlapDataProviderResulting.create(this);
	this.m_notificationCenter = oFF.XNotificationCenter.create();
	this.updateLifecycle(oFF.XGuid.getGuid());
	if (this.m_config.shouldAddToDataProviderPool())
	{
		let dataProviderPool = this.m_config.getProcess().getDataProviderPool();
		if (oFF.notNull(dataProviderPool))
		{
			dataProviderPool.addDataProvider(this);
		}
	}
};
oFF.OlapDataProvider.prototype.startRelease = function()
{
	if (oFF.notNull(this.m_releasePromise) && this.m_releasePromise.getState() === oFF.XPromiseState.PENDING)
	{
		return this.m_releasePromise;
	}
	if (this.m_config.shouldAddToDataProviderPool())
	{
		let dataProviderPool = this.getApplication().getProcess().getDataProviderPool();
		if (oFF.notNull(dataProviderPool))
		{
			dataProviderPool.removeDataProviderByName(this.getName());
		}
	}
	this.m_releasePromise = oFF.XPromise.create((resolve, reject) => {
		oFF.XTimeout.timeout(this.m_config.getDefaultWaitTimeout(), () => {
			let promiseList = oFF.XPromiseList.createFromList(this.m_actions.getRunningActionPromises());
			let allPromise = oFF.XPromise.all(promiseList);
			allPromise.onFinally(() => {
				this.setLifecycle(oFF.DataProviderLifecycle.RELEASED, null);
				this.m_eventing.flushEventQueue();
				oFF.XObjectExt.release(this);
				this.m_releasePromise = null;
				resolve(null);
			});
		});
	});
	return this.m_releasePromise;
};
oFF.OlapDataProvider.prototype.toString = function()
{
	if (this.isReleased())
	{
		return "released";
	}
	let buffer = oFF.XStringBuffer.create();
	buffer.append(this.getConnection().getSystemName());
	buffer.append("~");
	buffer.append(this.getConnection().getDataSourceName());
	buffer.append(this.getDataSourceName());
	if (oFF.notNull(this.m_queryManager))
	{
		buffer.append("~").append(this.m_queryManager.getInstanceId());
	}
	buffer.append("~").append(this.getState().getName());
	return buffer.toString();
};
oFF.OlapDataProvider.prototype.updateLifecycle = function(correlationId)
{
	if (this.isReleasing() || this.isReleased())
	{
		this.setLifecycle(oFF.DataProviderLifecycle.RELEASED, correlationId);
		return;
	}
	let lifecycle = oFF.notNull(this.m_queryManager) ? oFF.DataProviderLifecycle.CONNECTED : oFF.DataProviderLifecycle.DISCONNECTED;
	this.setLifecycle(lifecycle, correlationId);
};

oFF.OlapDataProviderEventing = function() {};
oFF.OlapDataProviderEventing.prototype = new oFF.XObject();
oFF.OlapDataProviderEventing.prototype._ff_c = "OlapDataProviderEventing";

oFF.OlapDataProviderEventing.createEventing = function(dataProvider, queryManager)
{
	let obj = new oFF.OlapDataProviderEventing();
	obj.setupExt(dataProvider, queryManager);
	return obj;
};
oFF.OlapDataProviderEventing.getCorrelationIdFromEvents = function(modelEvt, lifecycleEvt)
{
	if (oFF.notNull(modelEvt) && modelEvt.getCorrelationId() !== null)
	{
		return modelEvt.getCorrelationId();
	}
	if (oFF.notNull(lifecycleEvt) && lifecycleEvt.getCorrelationId() !== null)
	{
		return lifecycleEvt.getCorrelationId();
	}
	return null;
};
oFF.OlapDataProviderEventing.prototype.m_changedComponentTypes = null;
oFF.OlapDataProviderEventing.prototype.m_changes = null;
oFF.OlapDataProviderEventing.prototype.m_currentModelState = null;
oFF.OlapDataProviderEventing.prototype.m_dataProvider = null;
oFF.OlapDataProviderEventing.prototype.m_emitters = null;
oFF.OlapDataProviderEventing.prototype.m_eventBuffer = null;
oFF.OlapDataProviderEventing.prototype.m_listeners = null;
oFF.OlapDataProviderEventing.prototype.m_queryManager = null;
oFF.OlapDataProviderEventing.prototype.m_triggerResult = false;
oFF.OlapDataProviderEventing.prototype.finalizeActionChanges = function()
{
	let changes = this.m_changes;
	this.m_changes = oFF.OlapDataProviderActionChanges.create();
	if (changes.getChangedEventTypes().hasElements())
	{
		if (changes.getChangedEventTypes().contains(oFF.OlapDataProviderEventType.MODEL_CHANGE))
		{
			let modelEvent = this.getEmitterForModelChanges().newTypedEvent();
			modelEvent.setCorrelationId(changes.getCorrelationId());
			modelEvent.setExternalChanges(changes.isExternal());
			modelEvent.addAllChangedComponents(changes.getChangedComponentTypes());
			modelEvent.queue();
		}
		if (changes.getChangedEventTypes().contains(oFF.OlapDataProviderEventType.VISUALIZATION_CHANGE))
		{
			let vizEvent = this.getEmitterForVisualizationChanges().newTypedEvent();
			vizEvent.setCorrelationId(changes.getCorrelationId());
			vizEvent.addAllChangedVisualizationNames(changes.getChangedVisualizationNames());
			vizEvent.queue();
		}
	}
};
oFF.OlapDataProviderEventing.prototype.flushEventQueue = function()
{
	this.m_eventBuffer.flush();
};
oFF.OlapDataProviderEventing.prototype.getEmitterForActionExecution = function()
{
	return this.getEmitterForEventType(oFF.DataProviderEventType.ACTION_EXECUTION);
};
oFF.OlapDataProviderEventing.prototype.getEmitterForAll = function()
{
	return this.getEmitterForEventType(oFF.DataProviderEventType.ALL);
};
oFF.OlapDataProviderEventing.prototype.getEmitterForError = function()
{
	return this.getEmitterForEventType(oFF.DataProviderEventType.ERROR);
};
oFF.OlapDataProviderEventing.prototype.getEmitterForEventType = function(eventType)
{
	return this.m_emitters.getByKey(eventType.getName());
};
oFF.OlapDataProviderEventing.prototype.getEmitterForLifecycle = function()
{
	return this.getEmitterForEventType(oFF.DataProviderEventType.LIFECYCLE);
};
oFF.OlapDataProviderEventing.prototype.getEmitterForModelChanges = function()
{
	return this.getEmitterForEventType(oFF.OlapDataProviderEventType.MODEL_CHANGE);
};
oFF.OlapDataProviderEventing.prototype.getEmitterForModelState = function()
{
	return this.getEmitterForEventType(oFF.OlapDataProviderEventType.MODEL_STATE);
};
oFF.OlapDataProviderEventing.prototype.getEmitterForPropertyChanges = function()
{
	return this.getEmitterForEventType(oFF.DataProviderEventType.PROPERTY_CHANGE);
};
oFF.OlapDataProviderEventing.prototype.getEmitterForResultDataFetch = function()
{
	return this.getEmitterForEventType(oFF.OlapDataProviderEventType.RESULT_DATA_FETCH);
};
oFF.OlapDataProviderEventing.prototype.getEmitterForVisualizationChanges = function()
{
	return this.getEmitterForEventType(oFF.OlapDataProviderEventType.VISUALIZATION_CHANGE);
};
oFF.OlapDataProviderEventing.prototype.getListenerCollectionBaseForEventType = function(eventType)
{
	return this.m_listeners.getByKey(eventType.getName());
};
oFF.OlapDataProviderEventing.prototype.getListenerForActionExecution = function()
{
	return this.getListenerForEventType(oFF.DataProviderEventType.ACTION_EXECUTION);
};
oFF.OlapDataProviderEventing.prototype.getListenerForAll = function()
{
	return this.getListenerForEventType(oFF.DataProviderEventType.ALL);
};
oFF.OlapDataProviderEventing.prototype.getListenerForError = function()
{
	return this.getListenerForEventType(oFF.DataProviderEventType.ERROR);
};
oFF.OlapDataProviderEventing.prototype.getListenerForEventType = function(eventType)
{
	return this.m_listeners.getByKey(eventType.getName()).getListener();
};
oFF.OlapDataProviderEventing.prototype.getListenerForLifecycle = function()
{
	return this.getListenerForEventType(oFF.DataProviderEventType.LIFECYCLE);
};
oFF.OlapDataProviderEventing.prototype.getListenerForModelChanges = function()
{
	return this.getListenerForEventType(oFF.OlapDataProviderEventType.MODEL_CHANGE);
};
oFF.OlapDataProviderEventing.prototype.getListenerForModelState = function()
{
	return this.getListenerForEventType(oFF.OlapDataProviderEventType.MODEL_STATE);
};
oFF.OlapDataProviderEventing.prototype.getListenerForPropertyChanges = function()
{
	return this.getListenerForEventType(oFF.DataProviderEventType.PROPERTY_CHANGE);
};
oFF.OlapDataProviderEventing.prototype.getListenerForResultDataFetch = function()
{
	return this.getListenerForEventType(oFF.OlapDataProviderEventType.RESULT_DATA_FETCH);
};
oFF.OlapDataProviderEventing.prototype.getListenerForVisualizationChanges = function()
{
	return this.getListenerForEventType(oFF.OlapDataProviderEventType.VISUALIZATION_CHANGE);
};
oFF.OlapDataProviderEventing.prototype.notifyExternalError = function(error)
{
	let errorEvent = this.getEmitterForError().newTypedEvent();
	errorEvent.setExternalChanges(true);
	errorEvent.addError(error);
	errorEvent.queue();
};
oFF.OlapDataProviderEventing.prototype.notifyExternalModelChange = function(componentType)
{
	let modelChange = this.getEmitterForModelChanges().newTypedEvent();
	modelChange.setExternalChanges(true);
	modelChange.addChangedComponent(oFF.notNull(componentType) ? componentType : oFF.OlapComponentType.QUERY_MODEL);
	modelChange.queue();
};
oFF.OlapDataProviderEventing.prototype.notifyExternalVisualizationChange = function(visualizationName)
{
	let vizChange = this.getEmitterForVisualizationChanges().newTypedEvent();
	vizChange.setExternalChanges(true);
	if (oFF.notNull(visualizationName))
	{
		vizChange.addChangedVisualizationName(visualizationName);
	}
	vizChange.queue();
};
oFF.OlapDataProviderEventing.prototype.onDpPropertyChanged = function(propertyName, correlationId)
{
	let value = this.m_dataProvider.getProperties().getPropertyValue(propertyName);
	let propertyChangeEvent = this.getEmitterForPropertyChanges().newTypedEvent();
	propertyChangeEvent.addChangedProperty(propertyName, value);
	propertyChangeEvent.setCorrelationId(correlationId);
	propertyChangeEvent.queue();
};
oFF.OlapDataProviderEventing.prototype.onLoopExecuted = function(events)
{
	let modelEvt = oFF.XCollectionUtils.findFirst(events, (evt) => {
		return evt.getEventType() === oFF.OlapDataProviderEventType.MODEL_CHANGE;
	});
	let vizEvt = oFF.XCollectionUtils.findFirst(events, (evt) => {
		return evt.getEventType() === oFF.OlapDataProviderEventType.VISUALIZATION_CHANGE;
	});
	let lifecycleEvt = oFF.XCollectionUtils.findFirst(events, (evt) => {
		return evt.getEventType() === oFF.DataProviderEventType.LIFECYCLE;
	});
	if (oFF.notNull(lifecycleEvt) && lifecycleEvt.isNewlyConnected())
	{
		this.m_triggerResult = false;
		if (this.m_dataProvider.getResulting().isAutoFetchActive())
		{
			return;
		}
	}
	if (this.m_triggerResult || oFF.notNull(modelEvt))
	{
		if (this.m_eventBuffer.getPendingEvents().hasElements())
		{
			this.m_triggerResult = true;
			return;
		}
		this.m_triggerResult = false;
		let correlationId = oFF.OlapDataProviderEventing.getCorrelationIdFromEvents(modelEvt, lifecycleEvt);
		this.m_dataProvider.getResultingBase().autoFetchResultSet(correlationId);
	}
	else if (oFF.notNull(vizEvt))
	{
		this.m_dataProvider.getResultingBase().autoFillVisualizations(vizEvt.getCorrelationId());
	}
};
oFF.OlapDataProviderEventing.prototype.onModelComponentChanged = function(modelComponent, customIdentifier)
{
	if (oFF.notNull(modelComponent))
	{
		this.m_changedComponentTypes.add(modelComponent.getOlapComponentType());
	}
};
oFF.OlapDataProviderEventing.prototype.onVariableProcessorStateChanged = function(variableProcessor, customIdentifier)
{
	if (this.m_currentModelState !== oFF.OlapDataProviderModelState.QUERY && (variableProcessor.getVariableProcessorState() === oFF.VariableProcessorState.SUBMITTED || variableProcessor.getVariableProcessorState() === oFF.VariableProcessorState.CHANGEABLE_DIRECT_VALUE_TRANSFER))
	{
		this.m_currentModelState = oFF.OlapDataProviderModelState.QUERY;
		let modelStateEvent = this.getEmitterForModelState().newTypedEvent();
		modelStateEvent.setNewState(oFF.OlapDataProviderModelState.QUERY);
		modelStateEvent.queue();
	}
	else if (this.m_currentModelState !== oFF.OlapDataProviderModelState.VARIABLE && variableProcessor.getVariableProcessorState().isTypeOf(oFF.VariableProcessorState.CHANGEABLE_STATEFUL))
	{
		this.m_currentModelState = oFF.OlapDataProviderModelState.VARIABLE;
		let modelStateEvent = this.getEmitterForModelState().newTypedEvent();
		modelStateEvent.setNewState(oFF.OlapDataProviderModelState.VARIABLE);
		modelStateEvent.queue();
	}
};
oFF.OlapDataProviderEventing.prototype.queueEvent = function(event)
{
	if (event.getCorrelationId() === null)
	{
		event.setCorrelationId(oFF.XGuid.getGuid());
	}
	if (event.getEventType() === oFF.OlapDataProviderEventType.MODEL_CHANGE)
	{
		let modelChangeEvent = event;
		modelChangeEvent.addAllChangedComponents(this.m_changedComponentTypes);
		this.m_changedComponentTypes.clear();
	}
	this.m_eventBuffer.queueEvent(event);
};
oFF.OlapDataProviderEventing.prototype.registerEvent = function(baseTemplate, eventTemplate)
{
	this.registerEventInternal(baseTemplate, eventTemplate, true);
};
oFF.OlapDataProviderEventing.prototype.registerEventInternal = function(baseTemplate, eventTemplate, external)
{
	let emitter = oFF.OlapDataProviderEventEmitter.createEmitter(this.m_dataProvider, baseTemplate);
	emitter.setExternalEmitter(external);
	this.m_emitters.add(emitter);
	let listener = oFF.OlapDataProviderEventListenerCollection.create(eventTemplate);
	this.m_listeners.add(listener);
};
oFF.OlapDataProviderEventing.prototype.releaseObject = function()
{
	this.m_dataProvider = null;
	this.m_queryManager = null;
	this.m_emitters = oFF.XCollectionUtils.releaseEntriesAndCollectionIfNotNull(this.m_emitters);
	this.m_listeners = oFF.XCollectionUtils.releaseEntriesAndCollectionIfNotNull(this.m_listeners);
	this.m_changes = oFF.XObjectExt.release(this.m_changes);
	oFF.XObject.prototype.releaseObject.call( this );
};
oFF.OlapDataProviderEventing.prototype.setActionChanges = function(correlationId, changes)
{
	if (this.m_changes.getCorrelationId() === null)
	{
		this.m_changes.setCorrelationId(correlationId);
	}
	this.m_changes.mergeChanges(changes);
};
oFF.OlapDataProviderEventing.prototype.setEventingPaused = function(paused)
{
	this.m_eventBuffer.setPaused(paused);
};
oFF.OlapDataProviderEventing.prototype.setQueryManager = function(queryManager)
{
	if (oFF.notNull(this.m_queryManager) && this.m_queryManager.getQueryModel() !== null)
	{
		this.m_queryManager.getQueryModel().unregisterChangedListener(this);
		this.m_queryManager.getVariableContainer().unregisterChangedListener(this);
		this.m_queryManager.unregisterVariableProcessorStateChangedListener(this);
	}
	this.m_queryManager = queryManager;
	if (oFF.notNull(this.m_queryManager) && this.m_queryManager.getQueryModel() !== null)
	{
		this.m_queryManager.getQueryModel().registerChangedListener(this, null);
		this.m_queryManager.getVariableContainer().registerChangedListener(this, null);
		this.m_queryManager.registerVariableProcessorStateChangedListener(this, null);
	}
};
oFF.OlapDataProviderEventing.prototype.setupExt = function(dataProvider, queryManager)
{
	this.m_dataProvider = dataProvider;
	this.m_changes = oFF.OlapDataProviderActionChanges.create();
	this.m_changedComponentTypes = oFF.XSetOfNameObject.create();
	this.m_eventBuffer = oFF.OlapDataProviderEventBuffer.create(this.m_dataProvider);
	this.m_eventBuffer.setLoopExecuted(this.onLoopExecuted.bind(this));
	this.m_dataProvider.getPropertiesBase().getPropertyListeners().addConsumer((name, corrId) => {
		this.onDpPropertyChanged(name, corrId);
	});
	this.m_emitters = oFF.XSetOfNameObject.create();
	this.m_listeners = oFF.XSetOfNameObject.create();
	this.registerEventInternal(new oFF.OlapDataProviderAllEvent(), new oFF.OlapDataProviderAllEvent(), false);
	this.registerEventInternal(new oFF.OlapDataProviderErrorEvent(), new oFF.OlapDataProviderErrorEvent(), false);
	this.registerEventInternal(new oFF.OlapDataProviderLifecycleEvent(), new oFF.OlapDataProviderLifecycleEvent(), false);
	this.registerEventInternal(new oFF.OlapDataProviderActionExecutionEvent(), new oFF.OlapDataProviderActionExecutionEvent(), false);
	this.registerEventInternal(new oFF.OlapDataProviderPropertyChangeEvent(), new oFF.OlapDataProviderPropertyChangeEvent(), false);
	this.registerEventInternal(new oFF.OlapDataProviderModelStateEvent(), new oFF.OlapDataProviderModelStateEvent(), false);
	this.registerEventInternal(new oFF.OlapDataProviderModelChangeEvent(), new oFF.OlapDataProviderModelChangeEvent(), false);
	this.registerEventInternal(new oFF.OlapDataProviderVisualizationChangeEvent(), new oFF.OlapDataProviderVisualizationChangeEvent(), false);
	this.registerEventInternal(new oFF.OlapDataProviderResultDataFetchEvent(), new oFF.OlapDataProviderResultDataFetchEvent(), false);
	this.setQueryManager(queryManager);
};

oFF.OlapDataProviderProgram = function() {};
oFF.OlapDataProviderProgram.prototype = new oFF.DfProgram();
oFF.OlapDataProviderProgram.prototype._ff_c = "OlapDataProviderProgram";

oFF.OlapDataProviderProgram.DATA_DP_CONFIG = "dataProviderConfig";
oFF.OlapDataProviderProgram.DATA_EXISTING_QM = "existingQueryManager";
oFF.OlapDataProviderProgram.PARAM_DATASOURCE_FQN = "dataSourceFqn";
oFF.OlapDataProviderProgram.PARAM_DATA_PROVIDER_NAME = "dataProviderName";
oFF.OlapDataProviderProgram.PARAM_DP_CONFIG_JSON = "dataProviderConfigJson";
oFF.OlapDataProviderProgram.PARAM_REPO_FILE_PATH = "repoFilePath";
oFF.OlapDataProviderProgram.PARAM_SYSTEM_NAME = "systemName";
oFF.OlapDataProviderProgram.PROGRAM_NAME = "DataProvider";
oFF.OlapDataProviderProgram.prototype.m_dataProvider = null;
oFF.OlapDataProviderProgram.prototype.createDataProvider = function(config)
{
	return this.loadRepoJson().onThenPromise((repoJson) => {
		if (oFF.notNull(repoJson))
		{
			config.getStartConnection().setRepoJson(repoJson);
		}
		if (config.getExistingQueryManager() !== null)
		{
			this.m_dataProvider = oFF.OlapDataProvider.createDataProvider(config);
			return oFF.XPromise.resolve(oFF.XBooleanValue.create(true));
		}
		let queryManager = this.getFromStartData(oFF.OlapDataProviderProgram.DATA_EXISTING_QM);
		if (oFF.notNull(queryManager))
		{
			this.m_dataProvider = oFF.OlapDataProvider.createDataProviderWithQueryManager(queryManager, config);
			return oFF.XPromise.resolve(oFF.XBooleanValue.create(true));
		}
		this.m_dataProvider = oFF.OlapDataProvider.createDataProvider(config);
		if (!config.isStartAsConnected())
		{
			return oFF.XPromise.resolve(oFF.XBooleanValue.create(true));
		}
		if (config.getStartConnection().isEmpty())
		{
			return oFF.XPromise.resolve(oFF.XBooleanValue.create(true));
		}
		let lifecycleActions = this.m_dataProvider.getActions().getLifecycleActions();
		return lifecycleActions.reconnectDataProvider(false).onThenExt((empty) => {
			return oFF.XBooleanValue.create(true);
		});
	});
};
oFF.OlapDataProviderProgram.prototype.getDataProvider = function()
{
	return this.m_dataProvider;
};
oFF.OlapDataProviderProgram.prototype.getDataProviderConfig = function()
{
	let config = this.getFromStartData(oFF.OlapDataProviderProgram.DATA_DP_CONFIG);
	if (oFF.notNull(config))
	{
		return config;
	}
	let dpProcess = this.getProcess().getParentProcess().newChildProcess(oFF.ProcessType.GENERIC);
	return oFF.OlapDataProviderConfiguration.createDefaultConfig(dpProcess, null);
};
oFF.OlapDataProviderProgram.prototype.getFromStartData = function(name)
{
	let startData = this.getStartData();
	return oFF.notNull(startData) ? startData.getXObjectByKey(name) : null;
};
oFF.OlapDataProviderProgram.prototype.getProgramName = function()
{
	return oFF.OlapDataProviderProgram.PROGRAM_NAME;
};
oFF.OlapDataProviderProgram.prototype.getProgramType = function()
{
	return oFF.ProgramType.BACKGROUND;
};
oFF.OlapDataProviderProgram.prototype.handleArguments = function(config)
{
	let args = this.getArgumentStructure();
	let configJsonString = args.getStringByKey(oFF.OlapDataProviderProgram.PARAM_DP_CONFIG_JSON);
	let configJson = oFF.PrUtils.deserialize(configJsonString);
	if (oFF.notNull(configJson) && configJson.isStructure())
	{
		config.deserializeJson(configJson.asStructure());
	}
	let dataProviderName = args.getStringByKey(oFF.OlapDataProviderProgram.PARAM_DATA_PROVIDER_NAME);
	if (oFF.XStringUtils.isNotNullAndNotEmpty(dataProviderName))
	{
		config.setDataProviderName(dataProviderName);
	}
	let dataSourceName = args.getStringByKey(oFF.OlapDataProviderProgram.PARAM_DATASOURCE_FQN);
	if (oFF.XStringUtils.isNotNullAndNotEmpty(dataSourceName))
	{
		config.getStartConnection().setDataSourceName(dataSourceName);
	}
	let systemName = args.getStringByKey(oFF.OlapDataProviderProgram.PARAM_SYSTEM_NAME);
	if (oFF.XStringUtils.isNotNullAndNotEmpty(systemName))
	{
		config.getStartConnection().setSystemName(systemName);
	}
};
oFF.OlapDataProviderProgram.prototype.loadRepoJson = function()
{
	let repoFilePath = this.getArgumentStructure().getStringByKey(oFF.OlapDataProviderProgram.PARAM_REPO_FILE_PATH);
	if (oFF.isNull(repoFilePath))
	{
		return oFF.XPromise.resolve(null);
	}
	let repoFile = oFF.XFile.create(this.getProcess(), repoFilePath);
	return oFF.XFilePromise.isExisting(repoFile).onThenPromise((fileExists) => {
		if (!fileExists.getBoolean())
		{
			return oFF.XPromise.resolve(null);
		}
		return oFF.XFilePromise.loadJsonStructure(repoFile);
	}).onCatch((err) => {
		this.logError(err.getText());
	});
};
oFF.OlapDataProviderProgram.prototype.newProgram = function()
{
	let program = new oFF.OlapDataProviderProgram();
	program.setup();
	return program;
};
oFF.OlapDataProviderProgram.prototype.prepareProgramMetadata = function(metadata)
{
	metadata.addParameter(oFF.OlapDataProviderProgram.PARAM_DATA_PROVIDER_NAME, "The name of the data provider.");
	metadata.addParameter(oFF.OlapDataProviderProgram.PARAM_SYSTEM_NAME, "The name of the backend system.");
	metadata.addParameter(oFF.OlapDataProviderProgram.PARAM_DATASOURCE_FQN, "The full qualified data source name.");
	metadata.addParameter(oFF.OlapDataProviderProgram.PARAM_REPO_FILE_PATH, "An optional path to a file that contains a repository json to be loaded.");
	metadata.addParameter(oFF.OlapDataProviderProgram.PARAM_DP_CONFIG_JSON, "A json string that contains the config for the new data provider.");
};
oFF.OlapDataProviderProgram.prototype.processArguments = function(args) {};
oFF.OlapDataProviderProgram.prototype.processConfiguration = function(configuration) {};
oFF.OlapDataProviderProgram.prototype.releaseObject = function()
{
	this.m_dataProvider = null;
	oFF.DfProgram.prototype.releaseObject.call( this );
};
oFF.OlapDataProviderProgram.prototype.runProcess = function()
{
	return false;
};
oFF.OlapDataProviderProgram.prototype.setupProcess = function()
{
	let config = this.getDataProviderConfig();
	this.handleArguments(config);
	if (config.isLoadingActionManifests())
	{
		oFF.OlapDataProviderActionManifestLoader.getInstance().loadActionManifests();
	}
	return this.createDataProvider(config).onThen((result) => {
		let entity = this.getProcess().findEntity(oFF.ProcessEntity.DATA_APPLICATION);
		if (oFF.notNull(entity))
		{
			entity.addDataProvider(this.m_dataProvider);
		}
	});
};

oFF.DfOlapDataProviderActionWithNoResult = function() {};
oFF.DfOlapDataProviderActionWithNoResult.prototype = new oFF.DfOlapDataProviderAction();
oFF.DfOlapDataProviderActionWithNoResult.prototype._ff_c = "DfOlapDataProviderActionWithNoResult";


oFF.DfOlapDataProviderActionWithStringResult = function() {};
oFF.DfOlapDataProviderActionWithStringResult.prototype = new oFF.DfOlapDataProviderAction();
oFF.DfOlapDataProviderActionWithStringResult.prototype._ff_c = "DfOlapDataProviderActionWithStringResult";

oFF.DfOlapDataProviderActionWithStringResult.prototype.returnValueToObject = function(returnValue)
{
	return oFF.XStringValue.create(returnValue);
};

oFF.OdpActionParameterAxisType = function() {};
oFF.OdpActionParameterAxisType.prototype = new oFF.OdpDfActionProperty();
oFF.OdpActionParameterAxisType.prototype._ff_c = "OdpActionParameterAxisType";

oFF.OdpActionParameterAxisType.prototype.getPropertyDataType = function()
{
	return oFF.DataProviderActionParameterType.AXIS_TYPE;
};
oFF.OdpActionParameterAxisType.prototype.parseSpecificProperty = function(propertyMetadataStructure) {};
oFF.OdpActionParameterAxisType.prototype.setupSpecificProperty = function() {};
oFF.OdpActionParameterAxisType.prototype.validateSpecificProperty = function(jsonElement)
{
	return oFF.XList.create();
};
oFF.OdpActionParameterAxisType.prototype.validateWithDataProvider = function(dataProvider, value)
{
	let axisType = oFF.AxisType.lookup(value);
	if (oFF.isNull(axisType))
	{
		return oFF.XCollectionUtils.singletonList(this.getNotValidValueError("not a valid axis type: ", value));
	}
	return oFF.XList.create();
};

oFF.OdpActionParameterChartOrientation = function() {};
oFF.OdpActionParameterChartOrientation.prototype = new oFF.OdpDfActionProperty();
oFF.OdpActionParameterChartOrientation.prototype._ff_c = "OdpActionParameterChartOrientation";

oFF.OdpActionParameterChartOrientation.prototype.getPropertyDataType = function()
{
	return oFF.DataProviderActionParameterType.CHART_ORIENTATION;
};
oFF.OdpActionParameterChartOrientation.prototype.parseSpecificProperty = function(propertyMetadataStructure) {};
oFF.OdpActionParameterChartOrientation.prototype.setupSpecificProperty = function() {};
oFF.OdpActionParameterChartOrientation.prototype.validateSpecificProperty = function(jsonElement)
{
	return oFF.XList.create();
};
oFF.OdpActionParameterChartOrientation.prototype.validateWithDataProvider = function(dataProvider, value)
{
	let orientation = oFF.ChartOrientation.lookup(value);
	if (oFF.isNull(orientation))
	{
		return oFF.XCollectionUtils.singletonList(this.getNotValidValueError("not a valid chart orientation: ", value));
	}
	return oFF.XList.create();
};

oFF.OdpActionParameterChartType = function() {};
oFF.OdpActionParameterChartType.prototype = new oFF.OdpDfActionProperty();
oFF.OdpActionParameterChartType.prototype._ff_c = "OdpActionParameterChartType";

oFF.OdpActionParameterChartType.prototype.getPropertyDataType = function()
{
	return oFF.DataProviderActionParameterType.CHART_TYPE;
};
oFF.OdpActionParameterChartType.prototype.parseSpecificProperty = function(propertyMetadataStructure) {};
oFF.OdpActionParameterChartType.prototype.setupSpecificProperty = function() {};
oFF.OdpActionParameterChartType.prototype.validateSpecificProperty = function(jsonElement)
{
	return oFF.XList.create();
};
oFF.OdpActionParameterChartType.prototype.validateWithDataProvider = function(dataProvider, value)
{
	let chartType = oFF.ChartType.lookup(value);
	if (oFF.isNull(chartType))
	{
		return oFF.XCollectionUtils.singletonList(this.getNotValidValueError("not a valid chart type: ", value));
	}
	return oFF.XList.create();
};

oFF.OdpActionParameterComparisonOperator = function() {};
oFF.OdpActionParameterComparisonOperator.prototype = new oFF.OdpDfActionProperty();
oFF.OdpActionParameterComparisonOperator.prototype._ff_c = "OdpActionParameterComparisonOperator";

oFF.OdpActionParameterComparisonOperator.prototype.getPropertyDataType = function()
{
	return oFF.DataProviderActionParameterType.COMPARISON_OPERATOR;
};
oFF.OdpActionParameterComparisonOperator.prototype.parseSpecificProperty = function(propertyMetadataStructure) {};
oFF.OdpActionParameterComparisonOperator.prototype.setupSpecificProperty = function() {};
oFF.OdpActionParameterComparisonOperator.prototype.validateSpecificProperty = function(jsonElement)
{
	return oFF.XList.create();
};
oFF.OdpActionParameterComparisonOperator.prototype.validateWithDataProvider = function(dataProvider, value)
{
	let comparisonOperator = oFF.ComparisonOperator.lookup(value);
	if (oFF.isNull(comparisonOperator))
	{
		return oFF.XCollectionUtils.singletonList(this.getNotValidValueError("not a valid comparison operator: ", value));
	}
	return oFF.XList.create();
};

oFF.OdpActionParameterDimension = function() {};
oFF.OdpActionParameterDimension.prototype = new oFF.OdpDfActionProperty();
oFF.OdpActionParameterDimension.prototype._ff_c = "OdpActionParameterDimension";

oFF.OdpActionParameterDimension.prototype.getPropertyDataType = function()
{
	return oFF.DataProviderActionParameterType.DIMENSION;
};
oFF.OdpActionParameterDimension.prototype.parseSpecificProperty = function(propertyMetadataStructure) {};
oFF.OdpActionParameterDimension.prototype.setupSpecificProperty = function() {};
oFF.OdpActionParameterDimension.prototype.validateSpecificProperty = function(jsonElement)
{
	return oFF.XList.create();
};
oFF.OdpActionParameterDimension.prototype.validateWithDataProvider = function(dataProvider, value)
{
	let errors = oFF.XList.create();
	let queryManager = this.assertQueryManager(errors, dataProvider);
	if (oFF.XCollectionUtils.hasElements(errors))
	{
		return errors;
	}
	let dimension = queryManager.getQueryModel().getDimensionByName(value);
	if (oFF.isNull(dimension))
	{
		errors.add(this.getNotValidValueError("no dimension exists with name: ", value));
	}
	return errors;
};

oFF.OdpActionParameterDimensionMember = function() {};
oFF.OdpActionParameterDimensionMember.prototype = new oFF.OdpDfActionProperty();
oFF.OdpActionParameterDimensionMember.prototype._ff_c = "OdpActionParameterDimensionMember";

oFF.OdpActionParameterDimensionMember.prototype.getPropertyDataType = function()
{
	return oFF.DataProviderActionParameterType.DIMENSION_MEMBER;
};
oFF.OdpActionParameterDimensionMember.prototype.parseSpecificProperty = function(propertyMetadataStructure) {};
oFF.OdpActionParameterDimensionMember.prototype.setupSpecificProperty = function() {};
oFF.OdpActionParameterDimensionMember.prototype.validateSpecificProperty = function(jsonElement)
{
	return oFF.XList.create();
};
oFF.OdpActionParameterDimensionMember.prototype.validateWithDataProvider = function(dataProvider, value)
{
	return oFF.XList.create();
};

oFF.OdpActionParameterField = function() {};
oFF.OdpActionParameterField.prototype = new oFF.OdpDfActionProperty();
oFF.OdpActionParameterField.prototype._ff_c = "OdpActionParameterField";

oFF.OdpActionParameterField.prototype.getPropertyDataType = function()
{
	return oFF.DataProviderActionParameterType.FIELD;
};
oFF.OdpActionParameterField.prototype.parseSpecificProperty = function(propertyMetadataStructure) {};
oFF.OdpActionParameterField.prototype.setupSpecificProperty = function() {};
oFF.OdpActionParameterField.prototype.validateSpecificProperty = function(jsonElement)
{
	return oFF.XList.create();
};
oFF.OdpActionParameterField.prototype.validateWithDataProvider = function(dataProvider, value)
{
	let errors = oFF.XList.create();
	let queryManager = this.assertQueryManager(errors, dataProvider);
	let field = queryManager.getQueryModel().getFieldByName(value);
	if (oFF.isNull(field))
	{
		return oFF.XCollectionUtils.singletonList(this.getNotValidValueError("no field exists with name: ", value));
	}
	return errors;
};

oFF.OdpActionParameterFilterComponentType = function() {};
oFF.OdpActionParameterFilterComponentType.prototype = new oFF.OdpDfActionProperty();
oFF.OdpActionParameterFilterComponentType.prototype._ff_c = "OdpActionParameterFilterComponentType";

oFF.OdpActionParameterFilterComponentType.prototype.getPropertyDataType = function()
{
	return oFF.DataProviderActionParameterType.FILTER_COMPONENT_TYPE;
};
oFF.OdpActionParameterFilterComponentType.prototype.parseSpecificProperty = function(propertyMetadataStructure) {};
oFF.OdpActionParameterFilterComponentType.prototype.setupSpecificProperty = function() {};
oFF.OdpActionParameterFilterComponentType.prototype.validateSpecificProperty = function(jsonElement)
{
	return oFF.XList.create();
};
oFF.OdpActionParameterFilterComponentType.prototype.validateWithDataProvider = function(dataProvider, value)
{
	let filterComponentType = oFF.FilterComponentType.lookup(value);
	if (oFF.isNull(filterComponentType))
	{
		return oFF.XCollectionUtils.singletonList(this.getNotValidValueError("not a valid filter component type: ", value));
	}
	return oFF.XList.create();
};

oFF.OdpActionParameterMeasureMember = function() {};
oFF.OdpActionParameterMeasureMember.prototype = new oFF.OdpDfActionProperty();
oFF.OdpActionParameterMeasureMember.prototype._ff_c = "OdpActionParameterMeasureMember";

oFF.OdpActionParameterMeasureMember.prototype.getPropertyDataType = function()
{
	return oFF.DataProviderActionParameterType.MEASURE_MEMBER;
};
oFF.OdpActionParameterMeasureMember.prototype.parseSpecificProperty = function(propertyMetadataStructure) {};
oFF.OdpActionParameterMeasureMember.prototype.setupSpecificProperty = function() {};
oFF.OdpActionParameterMeasureMember.prototype.validateSpecificProperty = function(jsonElement)
{
	return oFF.XList.create();
};
oFF.OdpActionParameterMeasureMember.prototype.validateWithDataProvider = function(dataProvider, value)
{
	let errors = oFF.XList.create();
	let queryManager = this.assertQueryManager(errors, dataProvider);
	if (oFF.XCollectionUtils.hasElements(errors))
	{
		return errors;
	}
	let dimension = queryManager.getQueryModel().getMeasureDimension().getStructureMember(value);
	if (oFF.isNull(dimension))
	{
		errors.add(this.getNotValidValueError("no dimension exists with name: ", value));
	}
	return errors;
};

oFF.OdpActionParameterMemberReadMode = function() {};
oFF.OdpActionParameterMemberReadMode.prototype = new oFF.OdpDfActionProperty();
oFF.OdpActionParameterMemberReadMode.prototype._ff_c = "OdpActionParameterMemberReadMode";

oFF.OdpActionParameterMemberReadMode.prototype.getPropertyDataType = function()
{
	return oFF.DataProviderActionParameterType.MEMBER_READ_MODE;
};
oFF.OdpActionParameterMemberReadMode.prototype.parseSpecificProperty = function(propertyMetadataStructure) {};
oFF.OdpActionParameterMemberReadMode.prototype.setupSpecificProperty = function() {};
oFF.OdpActionParameterMemberReadMode.prototype.validateSpecificProperty = function(jsonElement)
{
	return oFF.XList.create();
};
oFF.OdpActionParameterMemberReadMode.prototype.validateWithDataProvider = function(dataProvider, value)
{
	let memberReadMode = oFF.QMemberReadMode.lookup(value);
	if (oFF.isNull(memberReadMode))
	{
		return oFF.XCollectionUtils.singletonList(this.getNotValidValueError("not a valid member read mode: ", value));
	}
	return oFF.XList.create();
};

oFF.OdpActionParameterPropertyType = function() {};
oFF.OdpActionParameterPropertyType.prototype = new oFF.OdpDfActionProperty();
oFF.OdpActionParameterPropertyType.prototype._ff_c = "OdpActionParameterPropertyType";

oFF.OdpActionParameterPropertyType.prototype.getPropertyDataType = function()
{
	return oFF.DataProviderActionParameterType.DATA_PROVIDER_PROPERTY;
};
oFF.OdpActionParameterPropertyType.prototype.parseSpecificProperty = function(propertyMetadataStructure) {};
oFF.OdpActionParameterPropertyType.prototype.setupSpecificProperty = function() {};
oFF.OdpActionParameterPropertyType.prototype.validateSpecificProperty = function(jsonElement)
{
	return oFF.XList.create();
};
oFF.OdpActionParameterPropertyType.prototype.validateWithDataProvider = function(dataProvider, value)
{
	let propertyType = oFF.OlapDataProviderPropertyType.lookup(value);
	if (oFF.isNull(propertyType))
	{
		return oFF.XCollectionUtils.singletonList(this.getNotValidValueError("not a valid property type: ", value));
	}
	return oFF.XList.create();
};

oFF.OdpActionParameterProtocolBindingType = function() {};
oFF.OdpActionParameterProtocolBindingType.prototype = new oFF.OdpDfActionProperty();
oFF.OdpActionParameterProtocolBindingType.prototype._ff_c = "OdpActionParameterProtocolBindingType";

oFF.OdpActionParameterProtocolBindingType.prototype.getPropertyDataType = function()
{
	return oFF.DataProviderActionParameterType.PROTOCOL_BINDING_TYPE;
};
oFF.OdpActionParameterProtocolBindingType.prototype.parseSpecificProperty = function(propertyMetadataStructure) {};
oFF.OdpActionParameterProtocolBindingType.prototype.setupSpecificProperty = function() {};
oFF.OdpActionParameterProtocolBindingType.prototype.validateSpecificProperty = function(jsonElement)
{
	return oFF.XList.create();
};
oFF.OdpActionParameterProtocolBindingType.prototype.validateWithDataProvider = function(dataProvider, value)
{
	let protocolType = oFF.ProtocolBindingType.lookup(value);
	if (oFF.isNull(protocolType))
	{
		return oFF.XCollectionUtils.singletonList(this.getNotValidValueError("not a valid protocol binding type: ", value));
	}
	return oFF.XList.create();
};

oFF.OdpActionParameterSetSign = function() {};
oFF.OdpActionParameterSetSign.prototype = new oFF.OdpDfActionProperty();
oFF.OdpActionParameterSetSign.prototype._ff_c = "OdpActionParameterSetSign";

oFF.OdpActionParameterSetSign.prototype.getPropertyDataType = function()
{
	return oFF.DataProviderActionParameterType.SET_SIGN;
};
oFF.OdpActionParameterSetSign.prototype.parseSpecificProperty = function(propertyMetadataStructure) {};
oFF.OdpActionParameterSetSign.prototype.setupSpecificProperty = function() {};
oFF.OdpActionParameterSetSign.prototype.validateSpecificProperty = function(jsonElement)
{
	return oFF.XList.create();
};
oFF.OdpActionParameterSetSign.prototype.validateWithDataProvider = function(dataProvider, value)
{
	let sign = oFF.SetSign.lookup(value);
	if (oFF.isNull(sign))
	{
		return oFF.XCollectionUtils.singletonList(this.getNotValidValueError("not a valid sign: ", value));
	}
	return oFF.XList.create();
};

oFF.OdpActionParameterSortDirection = function() {};
oFF.OdpActionParameterSortDirection.prototype = new oFF.OdpDfActionProperty();
oFF.OdpActionParameterSortDirection.prototype._ff_c = "OdpActionParameterSortDirection";

oFF.OdpActionParameterSortDirection.prototype.getPropertyDataType = function()
{
	return oFF.DataProviderActionParameterType.SORT_DIRECTION;
};
oFF.OdpActionParameterSortDirection.prototype.parseSpecificProperty = function(propertyMetadataStructure) {};
oFF.OdpActionParameterSortDirection.prototype.setupSpecificProperty = function() {};
oFF.OdpActionParameterSortDirection.prototype.validateSpecificProperty = function(jsonElement)
{
	return oFF.XList.create();
};
oFF.OdpActionParameterSortDirection.prototype.validateWithDataProvider = function(dataProvider, value)
{
	let sortDirection = oFF.XSortDirection.lookup(value);
	if (oFF.isNull(sortDirection))
	{
		return oFF.XCollectionUtils.singletonList(this.getNotValidValueError("not a valid sort direction: ", value));
	}
	return oFF.XList.create();
};

oFF.OdpActionParameterVisualizationType = function() {};
oFF.OdpActionParameterVisualizationType.prototype = new oFF.OdpDfActionProperty();
oFF.OdpActionParameterVisualizationType.prototype._ff_c = "OdpActionParameterVisualizationType";

oFF.OdpActionParameterVisualizationType.prototype.getPropertyDataType = function()
{
	return oFF.DataProviderActionParameterType.VISUALIZATION_TYPE;
};
oFF.OdpActionParameterVisualizationType.prototype.parseSpecificProperty = function(propertyMetadataStructure) {};
oFF.OdpActionParameterVisualizationType.prototype.setupSpecificProperty = function() {};
oFF.OdpActionParameterVisualizationType.prototype.validateSpecificProperty = function(jsonElement)
{
	return oFF.XList.create();
};
oFF.OdpActionParameterVisualizationType.prototype.validateWithDataProvider = function(dataProvider, value)
{
	let vizType = oFF.VisualizationType.lookup(value);
	if (oFF.isNull(vizType))
	{
		return oFF.XCollectionUtils.singletonList(this.getNotValidValueError("not a valid visualization type: ", value));
	}
	return oFF.XList.create();
};

oFF.OdpActionParameterVisualizationValueType = function() {};
oFF.OdpActionParameterVisualizationValueType.prototype = new oFF.OdpDfActionProperty();
oFF.OdpActionParameterVisualizationValueType.prototype._ff_c = "OdpActionParameterVisualizationValueType";

oFF.OdpActionParameterVisualizationValueType.prototype.getPropertyDataType = function()
{
	return oFF.DataProviderActionParameterType.VISUALIZATION_VALUE_TYPE;
};
oFF.OdpActionParameterVisualizationValueType.prototype.parseSpecificProperty = function(propertyMetadataStructure) {};
oFF.OdpActionParameterVisualizationValueType.prototype.setupSpecificProperty = function() {};
oFF.OdpActionParameterVisualizationValueType.prototype.validateSpecificProperty = function(jsonElement)
{
	return oFF.XList.create();
};
oFF.OdpActionParameterVisualizationValueType.prototype.validateWithDataProvider = function(dataProvider, value)
{
	let valueType = oFF.VisualizationValueType.lookup(value);
	if (oFF.isNull(valueType))
	{
		return oFF.XCollectionUtils.singletonList(this.getNotValidValueError("not a valid visualization value type: ", value));
	}
	return oFF.XList.create();
};

oFF.OdpActionParameterZeroSuppressionType = function() {};
oFF.OdpActionParameterZeroSuppressionType.prototype = new oFF.OdpDfActionProperty();
oFF.OdpActionParameterZeroSuppressionType.prototype._ff_c = "OdpActionParameterZeroSuppressionType";

oFF.OdpActionParameterZeroSuppressionType.prototype.getPropertyDataType = function()
{
	return oFF.DataProviderActionParameterType.ZERO_SUPPRESSION_TYPE;
};
oFF.OdpActionParameterZeroSuppressionType.prototype.parseSpecificProperty = function(propertyMetadataStructure) {};
oFF.OdpActionParameterZeroSuppressionType.prototype.setupSpecificProperty = function() {};
oFF.OdpActionParameterZeroSuppressionType.prototype.validateSpecificProperty = function(jsonElement)
{
	return oFF.XList.create();
};
oFF.OdpActionParameterZeroSuppressionType.prototype.validateWithDataProvider = function(dataProvider, value)
{
	let zeroSuppressionType = oFF.ZeroSuppressionType.lookup(value);
	if (oFF.isNull(zeroSuppressionType))
	{
		return oFF.XCollectionUtils.singletonList(this.getNotValidValueError("not a valid zero suppression type: ", value));
	}
	return oFF.XList.create();
};

oFF.OdpAnalysisActionGetQueryMetadata = function() {};
oFF.OdpAnalysisActionGetQueryMetadata.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpAnalysisActionGetQueryMetadata.prototype._ff_c = "OdpAnalysisActionGetQueryMetadata";

oFF.OdpAnalysisActionGetQueryMetadata.NAME = "getQueryMetadata";
oFF.OdpAnalysisActionGetQueryMetadata.create = function()
{
	let obj = new oFF.OdpAnalysisActionGetQueryMetadata();
	obj.setupAction();
	return obj;
};
oFF.OdpAnalysisActionGetQueryMetadata.prototype.m_queryMetadataAnalyzer = null;
oFF.OdpAnalysisActionGetQueryMetadata.prototype.doAction = function(dataProvider)
{
	return oFF.XPromise.create((resolve, reject) => {
		try
		{
			let result = this.newActionResult();
			if (oFF.isNull(this.m_queryMetadataAnalyzer))
			{
				this.m_queryMetadataAnalyzer = oFF.OlapDataProviderQueryMetadataAnalyzer.create();
			}
			let analyze = this.m_queryMetadataAnalyzer.analyze(dataProvider.getQueryManager().getQueryModel());
			result.setReturnValue(oFF.XStringValue.create(analyze));
			resolve(result);
		}
		catch (e)
		{
			reject(oFF.XError.create(oFF.XException.getMessage(e)));
		}
	});
};
oFF.OdpAnalysisActionGetQueryMetadata.prototype.getName = function()
{
	return oFF.OdpAnalysisActionGetQueryMetadata.NAME;
};
oFF.OdpAnalysisActionGetQueryMetadata.prototype.releaseObject = function()
{
	this.m_queryMetadataAnalyzer = oFF.XObjectExt.release(this.m_queryMetadataAnalyzer);
	oFF.DfOlapDataProviderAction.prototype.releaseObject.call( this );
};
oFF.OdpAnalysisActionGetQueryMetadata.prototype.setupAction = function()
{
	oFF.DfOlapDataProviderAction.prototype.setupAction.call( this );
	this.m_queryMetadataAnalyzer = oFF.OlapDataProviderQueryMetadataAnalyzer.create();
};

oFF.OdpFilterActionAddNewElement = function() {};
oFF.OdpFilterActionAddNewElement.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpFilterActionAddNewElement.prototype._ff_c = "OdpFilterActionAddNewElement";

oFF.OdpFilterActionAddNewElement.NAME = "addNewElement";
oFF.OdpFilterActionAddNewElement.create = function()
{
	let obj = new oFF.OdpFilterActionAddNewElement();
	obj.setupAction();
	return obj;
};
oFF.OdpFilterActionAddNewElement.prototype.doAction = function(dataProvider)
{
	return oFF.XPromise.create((resolve, reject) => {
		let converter = oFF.OdpActionParameterConverter.create();
		let layer = this.getParameter(0);
		let uniqueId = this.getParameter(1);
		let type = converter.toFilterType(this.getParameter(2));
		let target = oFF.OlapDataProviderFilterActionUtils.findElementInLayerByUniqueId(dataProvider, layer, uniqueId);
		if (oFF.isNull(target))
		{
			let notFoundMessage = oFF.XStringUtils.concatenate2("no element found with id: ", uniqueId);
			reject(oFF.XError.create(notFoundMessage));
			return;
		}
		if (!oFF.OlapDataProviderFilterActionUtils.canHaveChildren(target))
		{
			let cannotHaveChildren = oFF.XStringUtils.concatenate2("cannot have children on element of type: ", target.getOlapComponentType().getName());
			reject(oFF.XError.create(cannotHaveChildren));
			return;
		}
		let newElement = oFF.OlapDataProviderFilterActionUtils.createFilterElement(target, type);
		if (oFF.isNull(newElement))
		{
			let notCreatedMessage = oFF.XStringUtils.concatenate2("could not create element of type: ", type.getName());
			reject(oFF.XError.create(notCreatedMessage));
			return;
		}
		target.add(newElement);
		let newUniqueId = newElement.getUniqueId();
		let changedType = oFF.OlapDataProviderFilterActionUtils.getComponentTypeForLayer(dataProvider, layer);
		let result = this.newActionResult();
		result.setReturnValue(newUniqueId);
		result.getChangesBase().addChangedEventType(oFF.OlapDataProviderEventType.MODEL_CHANGE);
		result.getChangesBase().addChangedOlapComponentType(changedType);
		resolve(result);
	});
};
oFF.OdpFilterActionAddNewElement.prototype.getName = function()
{
	return oFF.OdpFilterActionAddNewElement.NAME;
};
oFF.OdpFilterActionAddNewElement.prototype.setTypedParameters = function(layer, parentUniqueId, type)
{
	let converter = oFF.OdpActionParameterConverter.create();
	let parameters = oFF.XList.create();
	parameters.add(layer);
	parameters.add(parentUniqueId);
	parameters.add(converter.fromFilterType(type));
	this.setParameters(parameters);
};

oFF.OdpFilterActionAddNewOperation = function() {};
oFF.OdpFilterActionAddNewOperation.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpFilterActionAddNewOperation.prototype._ff_c = "OdpFilterActionAddNewOperation";

oFF.OdpFilterActionAddNewOperation.NAME = "addNewOperation";
oFF.OdpFilterActionAddNewOperation.create = function()
{
	let obj = new oFF.OdpFilterActionAddNewOperation();
	obj.setupAction();
	return obj;
};
oFF.OdpFilterActionAddNewOperation.prototype.doAction = function(dataProvider)
{
	return oFF.XPromise.create((resolve, reject) => {
		let layer = this.getParameter(0);
		let uniqueId = this.getParameter(1);
		let target = oFF.OlapDataProviderFilterActionUtils.findElementInLayerByUniqueId(dataProvider, layer, uniqueId);
		if (oFF.isNull(target))
		{
			let notFoundMessage = oFF.XStringUtils.concatenate2("no element found with id: ", uniqueId);
			reject(oFF.XError.create(notFoundMessage));
			return;
		}
		if (!oFF.OlapDataProviderFilterActionUtils.canHaveOperation(target))
		{
			let targetTypeName = target.getOlapComponentType().getName();
			let typeMismatchError = oFF.XStringUtils.concatenate2("cannot have operations on element of type: ", targetTypeName);
			reject(oFF.XError.create(typeMismatchError));
			return;
		}
		let newOperation = target.addNewCartesianElement();
		let newUniqueId = newOperation.getUniqueId();
		let changedType = oFF.OlapDataProviderFilterActionUtils.getComponentTypeForLayer(dataProvider, layer);
		let result = this.newActionResult();
		result.setReturnValue(newUniqueId);
		result.getChangesBase().addChangedEventType(oFF.OlapDataProviderEventType.MODEL_CHANGE);
		result.getChangesBase().addChangedOlapComponentType(changedType);
		resolve(result);
	});
};
oFF.OdpFilterActionAddNewOperation.prototype.getName = function()
{
	return oFF.OdpFilterActionAddNewOperation.NAME;
};
oFF.OdpFilterActionAddNewOperation.prototype.setTypedParameters = function(layer, parentUniqueId)
{
	let parameters = oFF.XList.create();
	parameters.add(layer);
	parameters.add(parentUniqueId);
	this.setParameters(parameters);
};

oFF.OdpFilterActionCanElementHaveChildren = function() {};
oFF.OdpFilterActionCanElementHaveChildren.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpFilterActionCanElementHaveChildren.prototype._ff_c = "OdpFilterActionCanElementHaveChildren";

oFF.OdpFilterActionCanElementHaveChildren.NAME = "canElementHaveChildren";
oFF.OdpFilterActionCanElementHaveChildren.create = function()
{
	let obj = new oFF.OdpFilterActionCanElementHaveChildren();
	obj.setupAction();
	return obj;
};
oFF.OdpFilterActionCanElementHaveChildren.prototype.doAction = function(dataProvider)
{
	return oFF.XPromise.create((resolve, reject) => {
		let layer = this.getParameter(0);
		let uniqueId = this.getParameter(1);
		let target = oFF.OlapDataProviderFilterActionUtils.findElementInLayerByUniqueId(dataProvider, layer, uniqueId);
		let returnValue = oFF.OlapDataProviderFilterActionUtils.canHaveChildren(target);
		let result = this.newActionResult();
		result.setReturnValue(oFF.XBooleanValue.create(returnValue));
		resolve(result);
	});
};
oFF.OdpFilterActionCanElementHaveChildren.prototype.getName = function()
{
	return oFF.OdpFilterActionCanElementHaveChildren.NAME;
};
oFF.OdpFilterActionCanElementHaveChildren.prototype.setTypedParameters = function(layer, elementUniqueId)
{
	let parameters = oFF.XList.create();
	parameters.add(layer);
	parameters.add(elementUniqueId);
	this.setParameters(parameters);
};

oFF.OdpFilterActionCanElementHaveOperations = function() {};
oFF.OdpFilterActionCanElementHaveOperations.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpFilterActionCanElementHaveOperations.prototype._ff_c = "OdpFilterActionCanElementHaveOperations";

oFF.OdpFilterActionCanElementHaveOperations.NAME = "canElementHaveOperations";
oFF.OdpFilterActionCanElementHaveOperations.create = function()
{
	let obj = new oFF.OdpFilterActionCanElementHaveOperations();
	obj.setupAction();
	return obj;
};
oFF.OdpFilterActionCanElementHaveOperations.prototype.doAction = function(dataProvider)
{
	return oFF.XPromise.create((resolve, reject) => {
		let layer = this.getParameter(0);
		let uniqueId = this.getParameter(1);
		let target = oFF.OlapDataProviderFilterActionUtils.findElementInLayerByUniqueId(dataProvider, layer, uniqueId);
		let returnValue = oFF.OlapDataProviderFilterActionUtils.canHaveOperation(target);
		let result = this.newActionResult();
		result.setReturnValue(oFF.XBooleanValue.create(returnValue));
		resolve(result);
	});
};
oFF.OdpFilterActionCanElementHaveOperations.prototype.getName = function()
{
	return oFF.OdpFilterActionCanElementHaveOperations.NAME;
};
oFF.OdpFilterActionCanElementHaveOperations.prototype.setTypedParameters = function(layer, elementUniqueId)
{
	let parameters = oFF.XList.create();
	parameters.add(layer);
	parameters.add(elementUniqueId);
	this.setParameters(parameters);
};

oFF.OdpFilterActionClearElementChildren = function() {};
oFF.OdpFilterActionClearElementChildren.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpFilterActionClearElementChildren.prototype._ff_c = "OdpFilterActionClearElementChildren";

oFF.OdpFilterActionClearElementChildren.NAME = "clearElementChildren";
oFF.OdpFilterActionClearElementChildren.create = function()
{
	let obj = new oFF.OdpFilterActionClearElementChildren();
	obj.setupAction();
	return obj;
};
oFF.OdpFilterActionClearElementChildren.prototype.doAction = function(dataProvider)
{
	return oFF.XPromise.create((resolve, reject) => {
		let layer = this.getParameter(0);
		let uniqueId = this.getParameter(1);
		let target = oFF.OlapDataProviderFilterActionUtils.findElementInLayerByUniqueId(dataProvider, layer, uniqueId);
		let result = this.newActionResult();
		if (oFF.isNull(target))
		{
			resolve(result);
			return;
		}
		if (target.getOlapComponentType().isTypeOf(oFF.FilterComponentType.BOOLEAN_ALGEBRA))
		{
			target.clear();
			let changedType = oFF.OlapDataProviderFilterActionUtils.getComponentTypeForLayer(dataProvider, layer);
			result.getChangesBase().addChangedEventType(oFF.OlapDataProviderEventType.MODEL_CHANGE);
			result.getChangesBase().addChangedOlapComponentType(changedType);
		}
		resolve(result);
	});
};
oFF.OdpFilterActionClearElementChildren.prototype.getName = function()
{
	return oFF.OdpFilterActionClearElementChildren.NAME;
};
oFF.OdpFilterActionClearElementChildren.prototype.setTypedParameters = function(layer, parentUniqueId)
{
	let parameters = oFF.XList.create();
	parameters.add(layer);
	parameters.add(parentUniqueId);
	this.setParameters(parameters);
};

oFF.OdpFilterActionGetElementChildren = function() {};
oFF.OdpFilterActionGetElementChildren.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpFilterActionGetElementChildren.prototype._ff_c = "OdpFilterActionGetElementChildren";

oFF.OdpFilterActionGetElementChildren.NAME = "getElementChildren";
oFF.OdpFilterActionGetElementChildren.create = function()
{
	let obj = new oFF.OdpFilterActionGetElementChildren();
	obj.setupAction();
	return obj;
};
oFF.OdpFilterActionGetElementChildren.prototype.doAction = function(dataProvider)
{
	return oFF.XPromise.create((resolve, reject) => {
		let layer = this.getParameter(0);
		let uniqueId = this.getParameter(1);
		let target = oFF.OlapDataProviderFilterActionUtils.findElementInLayerByUniqueId(dataProvider, layer, uniqueId);
		let childIds = oFF.XList.create();
		if (oFF.notNull(target))
		{
			let iterator = target.getChildrenIterator();
			while (iterator.hasNext())
			{
				let child = iterator.next();
				childIds.add(child.getUniqueId());
			}
		}
		let result = this.newActionResult();
		result.setReturnValue(childIds);
		resolve(result);
	});
};
oFF.OdpFilterActionGetElementChildren.prototype.getName = function()
{
	return oFF.OdpFilterActionGetElementChildren.NAME;
};
oFF.OdpFilterActionGetElementChildren.prototype.setTypedParameters = function(layer, parentUniqueId)
{
	let parameters = oFF.XList.create();
	parameters.add(layer);
	parameters.add(parentUniqueId);
	this.setParameters(parameters);
};

oFF.OdpFilterActionGetElementType = function() {};
oFF.OdpFilterActionGetElementType.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpFilterActionGetElementType.prototype._ff_c = "OdpFilterActionGetElementType";

oFF.OdpFilterActionGetElementType.NAME = "getElementType";
oFF.OdpFilterActionGetElementType.create = function()
{
	let obj = new oFF.OdpFilterActionGetElementType();
	obj.setupAction();
	return obj;
};
oFF.OdpFilterActionGetElementType.prototype.doAction = function(dataProvider)
{
	return oFF.XPromise.create((resolve, reject) => {
		let layer = this.getParameter(0);
		let uniqueId = this.getParameter(1);
		let target = oFF.OlapDataProviderFilterActionUtils.findElementInLayerByUniqueId(dataProvider, layer, uniqueId);
		let olapComponentType = oFF.notNull(target) ? target.getOlapComponentType() : null;
		let result = this.newActionResult();
		result.setReturnValue(olapComponentType);
		resolve(result);
	});
};
oFF.OdpFilterActionGetElementType.prototype.getName = function()
{
	return oFF.OdpFilterActionGetElementType.NAME;
};
oFF.OdpFilterActionGetElementType.prototype.setTypedParameters = function(layer, elementUniqueId)
{
	let parameters = oFF.XList.create();
	parameters.add(layer);
	parameters.add(elementUniqueId);
	this.setParameters(parameters);
};

oFF.OdpFilterActionGetLayers = function() {};
oFF.OdpFilterActionGetLayers.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpFilterActionGetLayers.prototype._ff_c = "OdpFilterActionGetLayers";

oFF.OdpFilterActionGetLayers.NAME = "getLayers";
oFF.OdpFilterActionGetLayers.create = function()
{
	let obj = new oFF.OdpFilterActionGetLayers();
	obj.setupAction();
	return obj;
};
oFF.OdpFilterActionGetLayers.prototype.doAction = function(dataProvider)
{
	return oFF.XPromise.create((resolve, reject) => {
		let layers = oFF.XList.create();
		layers.add(oFF.FilterLayer.DYNAMIC.getName());
		layers.add(oFF.FilterLayer.VISIBILITY.getName());
		let variables = dataProvider.getQueryManager().getInputEnabledAndNonTechnicalVariables();
		oFF.XStream.of(variables).filter((x) => {
			return x.getVariableType().isTypeOf(oFF.VariableType.DIMENSION_MEMBER_VARIABLE);
		}).forEach((y) => {
			layers.add(y.getName());
		});
		let result = this.newActionResult();
		result.setReturnValue(layers);
		resolve(result);
	});
};
oFF.OdpFilterActionGetLayers.prototype.getName = function()
{
	return oFF.OdpFilterActionGetLayers.NAME;
};
oFF.OdpFilterActionGetLayers.prototype.setTypedParameters = function()
{
	this.setParameters(oFF.XList.create());
};

oFF.OdpFilterActionIsOperation = function() {};
oFF.OdpFilterActionIsOperation.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpFilterActionIsOperation.prototype._ff_c = "OdpFilterActionIsOperation";

oFF.OdpFilterActionIsOperation.NAME = "isOperation";
oFF.OdpFilterActionIsOperation.create = function()
{
	let obj = new oFF.OdpFilterActionIsOperation();
	obj.setupAction();
	return obj;
};
oFF.OdpFilterActionIsOperation.prototype.doAction = function(dataProvider)
{
	return oFF.XPromise.create((resolve, reject) => {
		let layer = this.getParameter(0);
		let uniqueId = this.getParameter(1);
		let target = oFF.OlapDataProviderFilterActionUtils.findElementInLayerByUniqueId(dataProvider, layer, uniqueId);
		let returnValue = oFF.OlapDataProviderFilterActionUtils.isOperation(target);
		let result = this.newActionResult();
		result.setReturnValue(oFF.XBooleanValue.create(returnValue));
		resolve(result);
	});
};
oFF.OdpFilterActionIsOperation.prototype.getName = function()
{
	return oFF.OdpFilterActionIsOperation.NAME;
};
oFF.OdpFilterActionIsOperation.prototype.setTypedParameters = function(layer, elementUniqueId)
{
	let parameters = oFF.XList.create();
	parameters.add(layer);
	parameters.add(elementUniqueId);
	this.setParameters(parameters);
};

oFF.OdpFilterActionRemoveElement = function() {};
oFF.OdpFilterActionRemoveElement.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpFilterActionRemoveElement.prototype._ff_c = "OdpFilterActionRemoveElement";

oFF.OdpFilterActionRemoveElement.NAME = "removeElement";
oFF.OdpFilterActionRemoveElement.create = function()
{
	let obj = new oFF.OdpFilterActionRemoveElement();
	obj.setupAction();
	return obj;
};
oFF.OdpFilterActionRemoveElement.prototype.doAction = function(dataProvider)
{
	return oFF.XPromise.create((resolve, reject) => {
		let layer = this.getParameter(0);
		let uniqueId = this.getParameter(1);
		let target = oFF.OlapDataProviderFilterActionUtils.findElementInLayerByUniqueId(dataProvider, layer, uniqueId);
		if (oFF.isNull(target))
		{
			let notFoundMessage = oFF.XStringUtils.concatenate2("no element found with id: ", uniqueId);
			reject(oFF.XError.create(notFoundMessage));
			return;
		}
		let parent = target.getParent();
		parent.removeElement(target);
		let changedType = oFF.OlapDataProviderFilterActionUtils.getComponentTypeForLayer(dataProvider, layer);
		let result = this.newActionResult();
		result.getChangesBase().addChangedEventType(oFF.OlapDataProviderEventType.MODEL_CHANGE);
		result.getChangesBase().addChangedOlapComponentType(changedType);
		resolve(result);
	});
};
oFF.OdpFilterActionRemoveElement.prototype.getName = function()
{
	return oFF.OdpFilterActionRemoveElement.NAME;
};
oFF.OdpFilterActionRemoveElement.prototype.setTypedParameters = function(layer, elementUniqueId)
{
	let parameters = oFF.XList.create();
	parameters.add(layer);
	parameters.add(elementUniqueId);
	this.setParameters(parameters);
};

oFF.OdpFilterActionSetElementField = function() {};
oFF.OdpFilterActionSetElementField.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpFilterActionSetElementField.prototype._ff_c = "OdpFilterActionSetElementField";

oFF.OdpFilterActionSetElementField.NAME = "setElementField";
oFF.OdpFilterActionSetElementField.create = function()
{
	let obj = new oFF.OdpFilterActionSetElementField();
	obj.setupAction();
	return obj;
};
oFF.OdpFilterActionSetElementField.prototype.doAction = function(dataProvider)
{
	return oFF.XPromise.create((resolve, reject) => {
		let layer = this.getParameter(0);
		let uniqueId = this.getParameter(1);
		let fieldName = this.getParameter(2);
		let target = oFF.OlapDataProviderFilterActionUtils.findElementInLayerByUniqueId(dataProvider, layer, uniqueId);
		if (oFF.isNull(target))
		{
			let notFoundMessage = oFF.XStringUtils.concatenate2("no element found with id: ", uniqueId);
			reject(oFF.XError.create(notFoundMessage));
			return;
		}
		if (!oFF.OlapDataProviderFilterActionUtils.canHaveField(target))
		{
			let targetTypeName = target.getOlapComponentType().getName();
			let typeMismatchError = oFF.XStringUtils.concatenate2("field cannot be set on elements of type: ", targetTypeName);
			reject(oFF.XError.create(typeMismatchError));
			return;
		}
		let field = dataProvider.getQueryManager().getQueryModel().getFieldByName(fieldName);
		target.setField(field);
		let changedType = oFF.OlapDataProviderFilterActionUtils.getComponentTypeForLayer(dataProvider, layer);
		let result = this.newActionResult();
		result.getChangesBase().addChangedEventType(oFF.OlapDataProviderEventType.MODEL_CHANGE);
		result.getChangesBase().addChangedOlapComponentType(changedType);
		resolve(result);
	});
};
oFF.OdpFilterActionSetElementField.prototype.getName = function()
{
	return oFF.OdpFilterActionSetElementField.NAME;
};
oFF.OdpFilterActionSetElementField.prototype.setTypedParameters = function(layer, operationUniqueId, fieldName)
{
	let parameters = oFF.XList.create();
	parameters.add(layer);
	parameters.add(operationUniqueId);
	parameters.add(fieldName);
	this.setParameters(parameters);
};

oFF.OdpFilterActionSetElementHierarchy = function() {};
oFF.OdpFilterActionSetElementHierarchy.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpFilterActionSetElementHierarchy.prototype._ff_c = "OdpFilterActionSetElementHierarchy";

oFF.OdpFilterActionSetElementHierarchy.NAME = "setElementHierarchy";
oFF.OdpFilterActionSetElementHierarchy.create = function()
{
	let obj = new oFF.OdpFilterActionSetElementHierarchy();
	obj.setupAction();
	return obj;
};
oFF.OdpFilterActionSetElementHierarchy.prototype.doAction = function(dataProvider)
{
	return oFF.XPromise.create((resolve, reject) => {
		let layer = this.getParameter(0);
		let uniqueId = this.getParameter(1);
		let hierarchyName = this.getParameter(2);
		let target = oFF.OlapDataProviderFilterActionUtils.findElementInLayerByUniqueId(dataProvider, layer, uniqueId);
		if (oFF.isNull(target))
		{
			let notFoundMessage = oFF.XStringUtils.concatenate2("no element found with id: ", uniqueId);
			reject(oFF.XError.create(notFoundMessage));
			return;
		}
		if (!oFF.OlapDataProviderFilterActionUtils.canHaveHierarchy(target))
		{
			let targetTypeName = target.getOlapComponentType().getName();
			let typeMismatchError = oFF.XStringUtils.concatenate2("hierarchy cannot be set on elements of type: ", targetTypeName);
			reject(oFF.XError.create(typeMismatchError));
			return;
		}
		target.setHierarchyName(hierarchyName);
		let changedType = oFF.OlapDataProviderFilterActionUtils.getComponentTypeForLayer(dataProvider, layer);
		let result = this.newActionResult();
		result.getChangesBase().addChangedEventType(oFF.OlapDataProviderEventType.MODEL_CHANGE);
		result.getChangesBase().addChangedOlapComponentType(changedType);
		resolve(result);
	});
};
oFF.OdpFilterActionSetElementHierarchy.prototype.getName = function()
{
	return oFF.OdpFilterActionSetElementHierarchy.NAME;
};
oFF.OdpFilterActionSetElementHierarchy.prototype.setTypedParameters = function(layer, operationUniqueId, hierarchyName)
{
	let parameters = oFF.XList.create();
	parameters.add(layer);
	parameters.add(operationUniqueId);
	parameters.add(hierarchyName);
	this.setParameters(parameters);
};

oFF.OdpFilterActionSetNewRootElement = function() {};
oFF.OdpFilterActionSetNewRootElement.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpFilterActionSetNewRootElement.prototype._ff_c = "OdpFilterActionSetNewRootElement";

oFF.OdpFilterActionSetNewRootElement.NAME = "setNewRootElement";
oFF.OdpFilterActionSetNewRootElement.create = function()
{
	let obj = new oFF.OdpFilterActionSetNewRootElement();
	obj.setupAction();
	return obj;
};
oFF.OdpFilterActionSetNewRootElement.prototype.doAction = function(dataProvider)
{
	return oFF.XPromise.create((resolve, reject) => {
		let converter = oFF.OdpActionParameterConverter.create();
		let layer = this.getParameter(0);
		let type = converter.toFilterType(this.getParameter(1));
		let modelComponent = oFF.OlapDataProviderFilterActionUtils.getModelComponentOfLayer(dataProvider, layer);
		let newUniqueId;
		if (oFF.notNull(modelComponent) && modelComponent.getOlapComponentType().isTypeOf(oFF.VariableType.DIMENSION_MEMBER_VARIABLE))
		{
			let memberFilter = modelComponent.getMemberFilter();
			memberFilter.clear();
			newUniqueId = memberFilter.getUniqueId();
		}
		else if (oFF.notNull(modelComponent) && modelComponent.getOlapComponentType().isTypeOf(oFF.OlapComponentType.FILTER_EXPRESSION))
		{
			let newElement = oFF.OlapDataProviderFilterActionUtils.createFilterElement(modelComponent, type);
			if (oFF.isNull(newElement))
			{
				let notCreatedMessage = oFF.XStringUtils.concatenate2("could not create element of type: ", type.getName());
				reject(oFF.XError.create(notCreatedMessage));
				return;
			}
			if (newElement.getOlapComponentType().isTypeOf(oFF.FilterComponentType.CARTESIAN_PRODUCT))
			{
				modelComponent.setCartesianProduct(newElement);
			}
			else
			{
				modelComponent.setComplexRoot(newElement);
			}
			newUniqueId = newElement.getUniqueId();
		}
		else
		{
			let notFoundMessage = oFF.XStringUtils.concatenate2("no layer found with name: ", layer);
			reject(oFF.XError.create(notFoundMessage));
			return;
		}
		let changedType = oFF.OlapDataProviderFilterActionUtils.getComponentTypeForLayer(dataProvider, layer);
		let result = this.newActionResult();
		result.setReturnValue(newUniqueId);
		result.getChangesBase().addChangedEventType(oFF.OlapDataProviderEventType.MODEL_CHANGE);
		result.getChangesBase().addChangedOlapComponentType(changedType);
		resolve(result);
	});
};
oFF.OdpFilterActionSetNewRootElement.prototype.getName = function()
{
	return oFF.OdpFilterActionSetNewRootElement.NAME;
};
oFF.OdpFilterActionSetNewRootElement.prototype.setTypedParameters = function(layer, type)
{
	let converter = oFF.OdpActionParameterConverter.create();
	let parameters = oFF.XList.create();
	parameters.add(layer);
	parameters.add(converter.fromFilterType(type));
	this.setParameters(parameters);
};

oFF.OdpFilterActionSetOperationOperand = function() {};
oFF.OdpFilterActionSetOperationOperand.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpFilterActionSetOperationOperand.prototype._ff_c = "OdpFilterActionSetOperationOperand";

oFF.OdpFilterActionSetOperationOperand.NAME = "setOperationOperand";
oFF.OdpFilterActionSetOperationOperand.create = function()
{
	let obj = new oFF.OdpFilterActionSetOperationOperand();
	obj.setupAction();
	return obj;
};
oFF.OdpFilterActionSetOperationOperand.prototype.doAction = function(dataProvider)
{
	return oFF.XPromise.create((resolve, reject) => {
		let converter = oFF.OdpActionParameterConverter.create();
		let layer = this.getParameter(0);
		let uniqueId = this.getParameter(1);
		let index = converter.toInteger(this.getParameter(2));
		let value = this.getParameter(3);
		let target = oFF.OlapDataProviderFilterActionUtils.findElementInLayerByUniqueId(dataProvider, layer, uniqueId);
		if (oFF.isNull(target))
		{
			let notFoundMessage = oFF.XStringUtils.concatenate2("no element found with id: ", uniqueId);
			reject(oFF.XError.create(notFoundMessage));
			return;
		}
		if (!oFF.OlapDataProviderFilterActionUtils.isOperation(target))
		{
			let targetTypeName = target.getOlapComponentType().getName();
			let typeMismatchError = oFF.XStringUtils.concatenate2("operand can only be set on operations, but the target type is: ", targetTypeName);
			reject(oFF.XError.create(typeMismatchError));
			return;
		}
		target.getValueAt(index).setString(value);
		let changedType = oFF.OlapDataProviderFilterActionUtils.getComponentTypeForLayer(dataProvider, layer);
		let result = this.newActionResult();
		result.getChangesBase().addChangedEventType(oFF.OlapDataProviderEventType.MODEL_CHANGE);
		result.getChangesBase().addChangedOlapComponentType(changedType);
		resolve(result);
	});
};
oFF.OdpFilterActionSetOperationOperand.prototype.getName = function()
{
	return oFF.OdpFilterActionSetOperationOperand.NAME;
};
oFF.OdpFilterActionSetOperationOperand.prototype.setTypedParameters = function(layer, operationUniqueId, index, value)
{
	let converter = oFF.OdpActionParameterConverter.create();
	let parameters = oFF.XList.create();
	parameters.add(layer);
	parameters.add(operationUniqueId);
	parameters.add(converter.fromInteger(index));
	parameters.add(value);
	this.setParameters(parameters);
};

oFF.OdpFilterActionSetOperationOperator = function() {};
oFF.OdpFilterActionSetOperationOperator.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpFilterActionSetOperationOperator.prototype._ff_c = "OdpFilterActionSetOperationOperator";

oFF.OdpFilterActionSetOperationOperator.NAME = "setOperationOperator";
oFF.OdpFilterActionSetOperationOperator.create = function()
{
	let obj = new oFF.OdpFilterActionSetOperationOperator();
	obj.setupAction();
	return obj;
};
oFF.OdpFilterActionSetOperationOperator.prototype.doAction = function(dataProvider)
{
	return oFF.XPromise.create((resolve, reject) => {
		let converter = oFF.OdpActionParameterConverter.create();
		let layer = this.getParameter(0);
		let uniqueId = this.getParameter(1);
		let operator = converter.toComparisonOperator(this.getParameter(2));
		let target = oFF.OlapDataProviderFilterActionUtils.findElementInLayerByUniqueId(dataProvider, layer, uniqueId);
		if (oFF.isNull(target))
		{
			let notFoundMessage = oFF.XStringUtils.concatenate2("no element found with id: ", uniqueId);
			reject(oFF.XError.create(notFoundMessage));
			return;
		}
		if (!oFF.OlapDataProviderFilterActionUtils.isOperation(target))
		{
			let targetTypeName = target.getOlapComponentType().getName();
			let typeMismatchError = oFF.XStringUtils.concatenate2("operator can only be set on operations, but the target type is: ", targetTypeName);
			reject(oFF.XError.create(typeMismatchError));
			return;
		}
		target.setComparisonOperator(operator);
		let changedType = oFF.OlapDataProviderFilterActionUtils.getComponentTypeForLayer(dataProvider, layer);
		let result = this.newActionResult();
		result.getChangesBase().addChangedEventType(oFF.OlapDataProviderEventType.MODEL_CHANGE);
		result.getChangesBase().addChangedOlapComponentType(changedType);
		resolve(result);
	});
};
oFF.OdpFilterActionSetOperationOperator.prototype.getName = function()
{
	return oFF.OdpFilterActionSetOperationOperator.NAME;
};
oFF.OdpFilterActionSetOperationOperator.prototype.setTypedParameters = function(layer, operationUniqueId, operator)
{
	let converter = oFF.OdpActionParameterConverter.create();
	let parameters = oFF.XList.create();
	parameters.add(layer);
	parameters.add(operationUniqueId);
	parameters.add(converter.fromComparisonOperator(operator));
	this.setParameters(parameters);
};

oFF.OdpFilterActionSetOperationSign = function() {};
oFF.OdpFilterActionSetOperationSign.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpFilterActionSetOperationSign.prototype._ff_c = "OdpFilterActionSetOperationSign";

oFF.OdpFilterActionSetOperationSign.NAME = "setOperationSign";
oFF.OdpFilterActionSetOperationSign.create = function()
{
	let obj = new oFF.OdpFilterActionSetOperationSign();
	obj.setupAction();
	return obj;
};
oFF.OdpFilterActionSetOperationSign.prototype.doAction = function(dataProvider)
{
	return oFF.XPromise.create((resolve, reject) => {
		let converter = oFF.OdpActionParameterConverter.create();
		let layer = this.getParameter(0);
		let uniqueId = this.getParameter(1);
		let sign = converter.toSign(this.getParameter(2));
		let target = oFF.OlapDataProviderFilterActionUtils.findElementInLayerByUniqueId(dataProvider, layer, uniqueId);
		if (oFF.isNull(target))
		{
			let notFoundMessage = oFF.XStringUtils.concatenate2("no element found with id: ", uniqueId);
			reject(oFF.XError.create(notFoundMessage));
			return;
		}
		if (!oFF.OlapDataProviderFilterActionUtils.isOperation(target))
		{
			let targetTypeName = target.getOlapComponentType().getName();
			let typeMismatchError = oFF.XStringUtils.concatenate2("sign can only be set on operations, but the target type is: ", targetTypeName);
			reject(oFF.XError.create(typeMismatchError));
			return;
		}
		target.setSetSign(sign);
		let changedType = oFF.OlapDataProviderFilterActionUtils.getComponentTypeForLayer(dataProvider, layer);
		let result = this.newActionResult();
		result.getChangesBase().addChangedEventType(oFF.OlapDataProviderEventType.MODEL_CHANGE);
		result.getChangesBase().addChangedOlapComponentType(changedType);
		resolve(result);
	});
};
oFF.OdpFilterActionSetOperationSign.prototype.getName = function()
{
	return oFF.OdpFilterActionSetOperationSign.NAME;
};
oFF.OdpFilterActionSetOperationSign.prototype.setTypedParameters = function(layer, operationUniqueId, sign)
{
	let converter = oFF.OdpActionParameterConverter.create();
	let parameters = oFF.XList.create();
	parameters.add(layer);
	parameters.add(operationUniqueId);
	parameters.add(converter.fromSign(sign));
	this.setParameters(parameters);
};

oFF.OdpFilterActionSetSimpleEqualFilterList = function() {};
oFF.OdpFilterActionSetSimpleEqualFilterList.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpFilterActionSetSimpleEqualFilterList.prototype._ff_c = "OdpFilterActionSetSimpleEqualFilterList";

oFF.OdpFilterActionSetSimpleEqualFilterList.NAME = "setSimpleEqualFilterList";
oFF.OdpFilterActionSetSimpleEqualFilterList.create = function()
{
	let obj = new oFF.OdpFilterActionSetSimpleEqualFilterList();
	obj.setupAction();
	return obj;
};
oFF.OdpFilterActionSetSimpleEqualFilterList.prototype.doAction = function(dataProvider)
{
	return oFF.XPromise.create((resolve, reject) => {
		let filterIsChanged = false;
		let converter = oFF.OdpActionParameterConverter.create();
		let dimensionName = this.getParameter(0);
		if (oFF.XStringUtils.isNullOrEmpty(dimensionName))
		{
			reject(oFF.XError.create("Empty dimension name supplied"));
			return;
		}
		let element = oFF.PrUtils.deserialize(this.getParameter(1));
		let valueList = oFF.PrUtils.asListOfString(element);
		let hierarchyName = this.getParameter(2);
		let useExclude = converter.toBoolean(this.getParameter(3), false);
		let convenienceCommands = dataProvider.getQueryManager().getConvenienceCommands();
		let dimension = convenienceCommands.getDimension(dimensionName);
		if (oFF.isNull(dimension))
		{
			reject(oFF.XError.create(oFF.XStringUtils.concatenate3("Dimension with name '", dimensionName, "' does not exist")));
			return;
		}
		let dynamicFilter = dataProvider.getQueryManager().getQueryModel().getFilter().getDynamicFilter();
		if (oFF.QFilterUtil.clearSelectionsInContainerByDimension(dimensionName, dynamicFilter))
		{
			filterIsChanged = true;
		}
		if (oFF.notNull(valueList) && valueList.hasElements())
		{
			oFF.XCollectionUtils.forEach(valueList, (value) => {
				let filterOp = dynamicFilter.addSingleMemberFilterByDimension(dimension, value, oFF.ComparisonOperator.EQUAL);
				filterOp.setSetSign(useExclude ? oFF.SetSign.EXCLUDING : oFF.SetSign.INCLUDING);
				if (oFF.notNull(hierarchyName))
				{
					filterOp.setHierarchyName(hierarchyName);
				}
			});
			let cartesianProduct = dynamicFilter.getCartesianProduct();
			if (oFF.notNull(hierarchyName) && oFF.notNull(cartesianProduct))
			{
				let cartesianList = cartesianProduct.getCartesianListByDimensionName(dimensionName);
				if (oFF.notNull(cartesianList))
				{
					cartesianList.setHierarchyName(hierarchyName);
					let fieldMetadata = dimension.getHierarchyKeyField().getMetadata();
					if (oFF.notNull(fieldMetadata))
					{
						cartesianList.setFieldMetadata(fieldMetadata);
					}
				}
			}
			filterIsChanged = true;
		}
		let result = this.newActionResult();
		result.setReturnValue(oFF.XBooleanValue.create(filterIsChanged));
		if (filterIsChanged)
		{
			result.getChangesBase().addChangedEventType(oFF.OlapDataProviderEventType.MODEL_CHANGE);
		}
		resolve(result);
	});
};
oFF.OdpFilterActionSetSimpleEqualFilterList.prototype.getName = function()
{
	return oFF.OdpFilterActionSetSimpleEqualFilterList.NAME;
};
oFF.OdpFilterActionSetSimpleEqualFilterList.prototype.setTypedParameters = function(dimensionName, valueList, hierarchyName, useExclude)
{
	let converter = oFF.OdpActionParameterConverter.create();
	let parameters = oFF.XList.create();
	parameters.add(dimensionName);
	parameters.add(oFF.PrUtils.fromListOfString(valueList).getStringRepresentation());
	parameters.add(hierarchyName);
	parameters.add(converter.fromBoolean(useExclude));
	this.setParameters(parameters);
};

oFF.OdpHierarchyActionIsHierarchyActive = function() {};
oFF.OdpHierarchyActionIsHierarchyActive.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpHierarchyActionIsHierarchyActive.prototype._ff_c = "OdpHierarchyActionIsHierarchyActive";

oFF.OdpHierarchyActionIsHierarchyActive.NAME = "isHierarchyActive";
oFF.OdpHierarchyActionIsHierarchyActive.create = function()
{
	let obj = new oFF.OdpHierarchyActionIsHierarchyActive();
	obj.setupAction();
	return obj;
};
oFF.OdpHierarchyActionIsHierarchyActive.prototype.doAction = function(dataProvider)
{
	let dimensionName = this.getParameter(0);
	let hierarchyActive = dataProvider.getCc().isHierarchyActive(dimensionName);
	let result = this.newActionResult();
	result.setReturnValue(oFF.XBooleanValue.create(hierarchyActive));
	return oFF.XPromise.resolve(result);
};
oFF.OdpHierarchyActionIsHierarchyActive.prototype.getName = function()
{
	return oFF.OdpHierarchyActionIsHierarchyActive.NAME;
};
oFF.OdpHierarchyActionIsHierarchyActive.prototype.setTypedParameters = function(dimName)
{
	let parameters = oFF.XList.create();
	parameters.add(dimName);
	this.setParameters(parameters);
};

oFF.OdpHierarchyActionIsHierarchyAssigned = function() {};
oFF.OdpHierarchyActionIsHierarchyAssigned.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpHierarchyActionIsHierarchyAssigned.prototype._ff_c = "OdpHierarchyActionIsHierarchyAssigned";

oFF.OdpHierarchyActionIsHierarchyAssigned.NAME = "isHierarchyAssigned";
oFF.OdpHierarchyActionIsHierarchyAssigned.create = function()
{
	let obj = new oFF.OdpHierarchyActionIsHierarchyAssigned();
	obj.setupAction();
	return obj;
};
oFF.OdpHierarchyActionIsHierarchyAssigned.prototype.doAction = function(dataProvider)
{
	let dimensionName = this.getParameter(0);
	let hierarchyAssigned = dataProvider.getCc().isHierarchyAssigned(dimensionName);
	let result = this.newActionResult();
	result.setReturnValue(oFF.XBooleanValue.create(hierarchyAssigned));
	return oFF.XPromise.resolve(result);
};
oFF.OdpHierarchyActionIsHierarchyAssigned.prototype.getName = function()
{
	return oFF.OdpHierarchyActionIsHierarchyAssigned.NAME;
};
oFF.OdpHierarchyActionIsHierarchyAssigned.prototype.setTypedParameters = function(dimName)
{
	let parameters = oFF.XList.create();
	parameters.add(dimName);
	this.setParameters(parameters);
};

oFF.OdpLifecycleActionClone = function() {};
oFF.OdpLifecycleActionClone.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpLifecycleActionClone.prototype._ff_c = "OdpLifecycleActionClone";

oFF.OdpLifecycleActionClone.NAME = "cloneDataProvider";
oFF.OdpLifecycleActionClone.create = function()
{
	let obj = new oFF.OdpLifecycleActionClone();
	obj.setupAction();
	return obj;
};
oFF.OdpLifecycleActionClone.prototype.doAction = function(dataProvider)
{
	let dpName = this.getParameter(0);
	let reuseConnection = oFF.XBoolean.convertFromString(this.getParameter(1));
	let cloneConfig = dataProvider.getConfig().createConfigCopy();
	cloneConfig.setDataProviderName(dpName);
	let dpPromise;
	if (dataProvider.getQueryManager() !== null)
	{
		if (reuseConnection)
		{
			dpPromise = oFF.OlapDataProviderFactory.createDataProviderFromQueryManager(dataProvider.getQueryManager(), cloneConfig);
		}
		else
		{
			let cloneQm = dataProvider.getQueryManager().cloneQueryManager();
			dpPromise = oFF.OlapDataProviderFactory.createDataProviderFromQueryManager(cloneQm, cloneConfig);
		}
	}
	else
	{
		dpPromise = oFF.OlapDataProviderFactory.createDataProviderFromSource(cloneConfig);
	}
	return dpPromise.onThenExt((copyDp) => {
		let allProperties = dataProvider.getProperties().getAllProperties();
		oFF.XCollectionUtils.mapEntries(allProperties, (name, value) => {
			copyDp.getProperties().setPropertyValue(name, value);
		});
		let result = this.newActionResult();
		result.setReturnValue(copyDp);
		return result;
	});
};
oFF.OdpLifecycleActionClone.prototype.getName = function()
{
	return oFF.OdpLifecycleActionClone.NAME;
};
oFF.OdpLifecycleActionClone.prototype.isQueryManagerNeeded = function()
{
	return false;
};
oFF.OdpLifecycleActionClone.prototype.setTypedParameters = function(cloneName, reuseSameConnection)
{
	let parameters = oFF.XList.create();
	parameters.add(cloneName);
	parameters.add(oFF.XBoolean.convertToString(reuseSameConnection));
	this.setParameters(parameters);
};

oFF.OdpLifecycleActionConnect = function() {};
oFF.OdpLifecycleActionConnect.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpLifecycleActionConnect.prototype._ff_c = "OdpLifecycleActionConnect";

oFF.OdpLifecycleActionConnect.NAME = "connectDataProvider";
oFF.OdpLifecycleActionConnect.create = function()
{
	let obj = new oFF.OdpLifecycleActionConnect();
	obj.setupAction();
	return obj;
};
oFF.OdpLifecycleActionConnect.prototype.doAction = function(dataProvider)
{
	let converter = oFF.OdpActionParameterConverter.create();
	let newConfigJson = converter.toStructure(this.getParameter(0));
	let closePreviousConnection = converter.toBoolean(this.getParameter(1), true);
	if (oFF.notNull(newConfigJson) && newConfigJson.isStructure())
	{
		let newConnection = oFF.OlapDataProviderConnection.createConnectionFromJson(dataProvider.getApplication(), newConfigJson.asStructure());
		dataProvider.setConnection(newConnection);
	}
	let lifecycleActions = dataProvider.getActions().getLifecycleActions();
	return lifecycleActions.reconnectDataProvider(closePreviousConnection).onThenExt((empty) => {
		return this.newActionResult();
	});
};
oFF.OdpLifecycleActionConnect.prototype.getName = function()
{
	return oFF.OdpLifecycleActionConnect.NAME;
};
oFF.OdpLifecycleActionConnect.prototype.isQueryManagerNeeded = function()
{
	return false;
};
oFF.OdpLifecycleActionConnect.prototype.setTypedParameters = function(connection, disconnectFromPrevious)
{
	let converter = oFF.OdpActionParameterConverter.create();
	let parameters = oFF.XList.create();
	if (oFF.isNull(connection))
	{
		parameters.add(null);
	}
	else
	{
		let configString = oFF.PrUtils.serialize(connection.serializeJson(), false, false, 0);
		parameters.add(configString);
	}
	parameters.add(converter.fromBoolean(disconnectFromPrevious));
	this.setParameters(parameters);
};

oFF.OdpLifecycleActionConnectToSystemSimple = function() {};
oFF.OdpLifecycleActionConnectToSystemSimple.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpLifecycleActionConnectToSystemSimple.prototype._ff_c = "OdpLifecycleActionConnectToSystemSimple";

oFF.OdpLifecycleActionConnectToSystemSimple.NAME = "connectDataProviderToSystemSimple";
oFF.OdpLifecycleActionConnectToSystemSimple.create = function()
{
	let obj = new oFF.OdpLifecycleActionConnectToSystemSimple();
	obj.setupAction();
	return obj;
};
oFF.OdpLifecycleActionConnectToSystemSimple.prototype.doAction = function(dataProvider)
{
	let converter = oFF.OdpActionParameterConverter.create();
	let systemName = this.getParameter(0);
	let fullQualifiedDataSourceName = this.getParameter(1);
	let closePreviousConnection = converter.toBoolean(this.getParameter(2), true);
	if (oFF.XStringUtils.isNullOrEmpty(systemName))
	{
		return oFF.XPromise.reject(oFF.XError.create("invalid system name"));
	}
	if (oFF.XStringUtils.isNullOrEmpty(fullQualifiedDataSourceName))
	{
		return oFF.XPromise.reject(oFF.XError.create("invalid data source name"));
	}
	let connection = dataProvider.getConnection();
	let newConnection = oFF.OlapDataProviderConnection.createConnectionFromJson(dataProvider.getApplication(), connection.serializeJson());
	let dataSource = oFF.QFactory.createDataSourceWithFqn(fullQualifiedDataSourceName);
	dataSource.setSystemName(systemName);
	newConnection.setDataSource(dataSource);
	let lifecycleActions = dataProvider.getActions().getLifecycleActions();
	return lifecycleActions.connectDataProvider(newConnection, closePreviousConnection).onThenExt((empty2) => {
		return this.newActionResult();
	});
};
oFF.OdpLifecycleActionConnectToSystemSimple.prototype.getName = function()
{
	return oFF.OdpLifecycleActionConnectToSystemSimple.NAME;
};
oFF.OdpLifecycleActionConnectToSystemSimple.prototype.setTypedParameters = function(systemName, dataSourceFqn, disconnectFromPrevious)
{
	let converter = oFF.OdpActionParameterConverter.create();
	let parameters = oFF.XList.create();
	parameters.add(systemName);
	parameters.add(dataSourceFqn);
	parameters.add(converter.fromBoolean(disconnectFromPrevious));
	this.setParameters(parameters);
};

oFF.OdpLifecycleActionDisconnect = function() {};
oFF.OdpLifecycleActionDisconnect.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpLifecycleActionDisconnect.prototype._ff_c = "OdpLifecycleActionDisconnect";

oFF.OdpLifecycleActionDisconnect.NAME = "disconnectDataProvider";
oFF.OdpLifecycleActionDisconnect.create = function()
{
	let obj = new oFF.OdpLifecycleActionDisconnect();
	obj.setupAction();
	return obj;
};
oFF.OdpLifecycleActionDisconnect.prototype.doAction = function(dataProvider)
{
	let converter = oFF.OdpActionParameterConverter.create();
	let closeConnection = converter.toBoolean(this.getParameter(0), true);
	return dataProvider.getConnectorBase().processDisconnect(closeConnection, null).onThenExt((empty2) => {
		return this.newActionResult();
	});
};
oFF.OdpLifecycleActionDisconnect.prototype.getName = function()
{
	return oFF.OdpLifecycleActionDisconnect.NAME;
};
oFF.OdpLifecycleActionDisconnect.prototype.isQueryManagerNeeded = function()
{
	return false;
};
oFF.OdpLifecycleActionDisconnect.prototype.setTypedParameters = function(closeConnection)
{
	let converter = oFF.OdpActionParameterConverter.create();
	let parameters = oFF.XList.create();
	parameters.add(converter.fromBoolean(closeConnection));
	this.setParameters(parameters);
};

oFF.OdpLifecycleActionReconnect = function() {};
oFF.OdpLifecycleActionReconnect.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpLifecycleActionReconnect.prototype._ff_c = "OdpLifecycleActionReconnect";

oFF.OdpLifecycleActionReconnect.NAME = "reconnectDataProvider";
oFF.OdpLifecycleActionReconnect.create = function()
{
	let obj = new oFF.OdpLifecycleActionReconnect();
	obj.setupAction();
	return obj;
};
oFF.OdpLifecycleActionReconnect.prototype.doAction = function(dataProvider)
{
	let converter = oFF.OdpActionParameterConverter.create();
	let closePreviousConnection = converter.toBoolean(this.getParameter(0), true);
	let lifecycleActions = dataProvider.getActions().getLifecycleActions();
	let actionPromise = oFF.XPromise.resolve(null);
	if (closePreviousConnection && dataProvider.getQueryManager() !== null)
	{
		actionPromise = lifecycleActions.disconnectDataProvider();
	}
	let connection = dataProvider.getConnection();
	if (connection.isEmpty())
	{
		return oFF.XPromise.reject(oFF.XError.create("cannot connect data provider to empty system or data source"));
	}
	return actionPromise.onThenPromise((empty1) => {
		return dataProvider.getConnectorBase().processConnectionSetup(null);
	}).onThenExt((empty2) => {
		return this.newActionResult();
	});
};
oFF.OdpLifecycleActionReconnect.prototype.getName = function()
{
	return oFF.OdpLifecycleActionReconnect.NAME;
};
oFF.OdpLifecycleActionReconnect.prototype.isQueryManagerNeeded = function()
{
	return false;
};
oFF.OdpLifecycleActionReconnect.prototype.setTypedParameters = function(closePreviousConnection)
{
	let converter = oFF.OdpActionParameterConverter.create();
	let parameters = oFF.XList.create();
	parameters.add(converter.fromBoolean(closePreviousConnection));
	this.setParameters(parameters);
};

oFF.OdpLifecycleActionRelease = function() {};
oFF.OdpLifecycleActionRelease.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpLifecycleActionRelease.prototype._ff_c = "OdpLifecycleActionRelease";

oFF.OdpLifecycleActionRelease.NAME = "releaseDataProvider";
oFF.OdpLifecycleActionRelease.create = function()
{
	let obj = new oFF.OdpLifecycleActionRelease();
	obj.setupAction();
	return obj;
};
oFF.OdpLifecycleActionRelease.prototype.doAction = function(dataProvider)
{
	let converter = oFF.OdpActionParameterConverter.create();
	let closeConnection = converter.toBoolean(this.getParameter(0), true);
	let disconnectPromise = oFF.XPromise.resolve(null);
	if (closeConnection)
	{
		disconnectPromise = dataProvider.getActions().getLifecycleActions().disconnectDataProvider();
	}
	return disconnectPromise.onThenPromise((empty) => {
		let result = this.newActionResult();
		return dataProvider.startRelease().onThenExt((empty2) => {
			return result;
		});
	});
};
oFF.OdpLifecycleActionRelease.prototype.getName = function()
{
	return oFF.OdpLifecycleActionRelease.NAME;
};
oFF.OdpLifecycleActionRelease.prototype.isQueryManagerNeeded = function()
{
	return false;
};
oFF.OdpLifecycleActionRelease.prototype.isReleaseAction = function()
{
	return true;
};
oFF.OdpLifecycleActionRelease.prototype.setTypedParameters = function(disconnectFromPrevious)
{
	let converter = oFF.OdpActionParameterConverter.create();
	let parameters = oFF.XList.create();
	parameters.add(converter.fromBoolean(disconnectFromPrevious));
	this.setParameters(parameters);
};

oFF.OdpActionBackupVersion = function() {};
oFF.OdpActionBackupVersion.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpActionBackupVersion.prototype._ff_c = "OdpActionBackupVersion";

oFF.OdpActionBackupVersion.NAME = "backupVersion";
oFF.OdpActionBackupVersion.create = function()
{
	let obj = new oFF.OdpActionBackupVersion();
	obj.setupAction();
	return obj;
};
oFF.OdpActionBackupVersion.prototype.doAction = function(dataProvider)
{
	let parameters = oFF.OlapDataProviderVersionParameters.createFromList(this.getParameters());
	let versionId = parameters.getVersionId();
	let sharedVersion = parameters.isSharedVersion();
	let versionOwner = parameters.getVersionOwner();
	let description = parameters.getDescription();
	let cc = dataProvider.getCc();
	return cc.backupVersion(versionId, sharedVersion, versionOwner, description).onThenExt((pResult) => {
		let result = this.newActionResult();
		result.getChangesBase().addChangedEventType(oFF.OlapDataProviderEventType.MODEL_CHANGE);
		return result;
	});
};
oFF.OdpActionBackupVersion.prototype.getName = function()
{
	return oFF.OdpActionBackupVersion.NAME;
};
oFF.OdpActionBackupVersion.prototype.setTypedParameters = function(versionId, sharedVersion, versionOwner, description)
{
	let parameters = oFF.OlapDataProviderVersionParameters.createParameters(versionId, sharedVersion, versionOwner, description);
	this.setParameters(parameters.convertToParameterList());
};

oFF.OdpActionCloseVersion = function() {};
oFF.OdpActionCloseVersion.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpActionCloseVersion.prototype._ff_c = "OdpActionCloseVersion";

oFF.OdpActionCloseVersion.NAME = "closeVersion";
oFF.OdpActionCloseVersion.create = function()
{
	let obj = new oFF.OdpActionCloseVersion();
	obj.setupAction();
	return obj;
};
oFF.OdpActionCloseVersion.prototype.doAction = function(dataProvider)
{
	let parameters = oFF.OlapDataProviderVersionParameters.createFromList(this.getParameters());
	let versionId = parameters.getVersionId();
	let sharedVersion = parameters.isSharedVersion();
	let versionOwner = parameters.getVersionOwner();
	let description = parameters.getDescription();
	let cc = dataProvider.getCc();
	return cc.closeVersion(versionId, sharedVersion, versionOwner, description).onThenExt((pResult) => {
		let result = this.newActionResult();
		result.getChangesBase().addChangedEventType(oFF.OlapDataProviderEventType.MODEL_CHANGE);
		return result;
	});
};
oFF.OdpActionCloseVersion.prototype.getName = function()
{
	return oFF.OdpActionCloseVersion.NAME;
};
oFF.OdpActionCloseVersion.prototype.setTypedParameters = function(versionId, sharedVersion, versionOwner, description)
{
	let parameters = oFF.OlapDataProviderVersionParameters.createParameters(versionId, sharedVersion, versionOwner, description);
	this.setParameters(parameters.convertToParameterList());
};

oFF.OdpActionDiscardNewValues = function() {};
oFF.OdpActionDiscardNewValues.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpActionDiscardNewValues.prototype._ff_c = "OdpActionDiscardNewValues";

oFF.OdpActionDiscardNewValues.NAME = "discardNewValues";
oFF.OdpActionDiscardNewValues.create = function()
{
	let obj = new oFF.OdpActionDiscardNewValues();
	obj.setupAction();
	return obj;
};
oFF.OdpActionDiscardNewValues.prototype.doAction = function(dataProvider)
{
	let cc = dataProvider.getCc();
	cc.discardNewValues();
	let result = this.newActionResult();
	result.getChangesBase().addChangedEventType(oFF.OlapDataProviderEventType.MODEL_CHANGE);
	return oFF.XPromise.resolve(result);
};
oFF.OdpActionDiscardNewValues.prototype.getName = function()
{
	return oFF.OdpActionDiscardNewValues.NAME;
};
oFF.OdpActionDiscardNewValues.prototype.setTypedParameters = function()
{
	let parameters = oFF.XList.create();
	this.setParameters(parameters);
};

oFF.OdpActionDropVersion = function() {};
oFF.OdpActionDropVersion.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpActionDropVersion.prototype._ff_c = "OdpActionDropVersion";

oFF.OdpActionDropVersion.NAME = "dropVersion";
oFF.OdpActionDropVersion.create = function()
{
	let obj = new oFF.OdpActionDropVersion();
	obj.setupAction();
	return obj;
};
oFF.OdpActionDropVersion.prototype.doAction = function(dataProvider)
{
	let parameters = oFF.OlapDataProviderVersionParameters.createFromList(this.getParameters());
	let versionId = parameters.getVersionId();
	let sharedVersion = parameters.isSharedVersion();
	let versionOwner = parameters.getVersionOwner();
	let description = parameters.getDescription();
	let cc = dataProvider.getCc();
	return cc.dropVersion(versionId, sharedVersion, versionOwner, description).onThenExt((pResult) => {
		let result = this.newActionResult();
		result.getChangesBase().addChangedEventType(oFF.OlapDataProviderEventType.MODEL_CHANGE);
		return result;
	});
};
oFF.OdpActionDropVersion.prototype.getName = function()
{
	return oFF.OdpActionDropVersion.NAME;
};
oFF.OdpActionDropVersion.prototype.setTypedParameters = function(versionId, sharedVersion, versionOwner, description)
{
	let parameters = oFF.OlapDataProviderVersionParameters.createParameters(versionId, sharedVersion, versionOwner, description);
	this.setParameters(parameters.convertToParameterList());
};

oFF.OdpActionEpmAddActionParameterLevelFieldName = function() {};
oFF.OdpActionEpmAddActionParameterLevelFieldName.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpActionEpmAddActionParameterLevelFieldName.prototype._ff_c = "OdpActionEpmAddActionParameterLevelFieldName";

oFF.OdpActionEpmAddActionParameterLevelFieldName.NAME = "epmAddActionParameterLevelFieldName";
oFF.OdpActionEpmAddActionParameterLevelFieldName.create = function()
{
	let obj = new oFF.OdpActionEpmAddActionParameterLevelFieldName();
	obj.setupAction();
	return obj;
};
oFF.OdpActionEpmAddActionParameterLevelFieldName.prototype.doAction = function(dataProvider)
{
	let parameters = this.getParameters();
	let actionType = oFF.EpmActionType.lookup(parameters.get(0));
	let packageName = parameters.get(1);
	let localName = parameters.get(2);
	let parameterName = parameters.get(3);
	let levelFieldName = parameters.get(4);
	let cc = dataProvider.getCc();
	cc.addEpmPlanningActionParameterLevelFieldName(actionType, packageName, localName, parameterName, levelFieldName);
	return oFF.XPromise.resolve(this.newActionResult());
};
oFF.OdpActionEpmAddActionParameterLevelFieldName.prototype.getName = function()
{
	return oFF.OdpActionEpmAddActionParameterLevelFieldName.NAME;
};
oFF.OdpActionEpmAddActionParameterLevelFieldName.prototype.setTypedParameters = function(actionType, packageName, localName, parameterName, levelFieldName)
{
	let parameters = oFF.XList.create();
	parameters.add(oFF.DfNameObject.getSafeName(actionType));
	parameters.add(packageName);
	parameters.add(localName);
	parameters.add(parameterName);
	parameters.add(levelFieldName);
	this.setParameters(parameters);
};

oFF.OdpActionEpmAddActionParameterMemberValueItem = function() {};
oFF.OdpActionEpmAddActionParameterMemberValueItem.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpActionEpmAddActionParameterMemberValueItem.prototype._ff_c = "OdpActionEpmAddActionParameterMemberValueItem";

oFF.OdpActionEpmAddActionParameterMemberValueItem.NAME = "epmAddActionParameterMemberValueItem";
oFF.OdpActionEpmAddActionParameterMemberValueItem.create = function()
{
	let obj = new oFF.OdpActionEpmAddActionParameterMemberValueItem();
	obj.setupAction();
	return obj;
};
oFF.OdpActionEpmAddActionParameterMemberValueItem.prototype.doAction = function(dataProvider)
{
	let parameters = this.getParameters();
	let actionType = oFF.EpmActionType.lookup(parameters.get(0));
	let packageName = parameters.get(1);
	let localName = parameters.get(2);
	let parameterName = parameters.get(3);
	let memberValueItem = parameters.get(4);
	let cc = dataProvider.getCc();
	cc.addEpmPlanningActionParameterMemberValueItem(actionType, packageName, localName, parameterName, memberValueItem);
	return oFF.XPromise.resolve(this.newActionResult());
};
oFF.OdpActionEpmAddActionParameterMemberValueItem.prototype.getName = function()
{
	return oFF.OdpActionEpmAddActionParameterMemberValueItem.NAME;
};
oFF.OdpActionEpmAddActionParameterMemberValueItem.prototype.setTypedParameters = function(actionType, packageName, localName, parameterName, valueItem)
{
	let parameters = oFF.XList.create();
	parameters.add(oFF.DfNameObject.getSafeName(actionType));
	parameters.add(packageName);
	parameters.add(localName);
	parameters.add(parameterName);
	parameters.add(valueItem);
	this.setParameters(parameters);
};

oFF.OdpActionEpmAddActionParameterValue = function() {};
oFF.OdpActionEpmAddActionParameterValue.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpActionEpmAddActionParameterValue.prototype._ff_c = "OdpActionEpmAddActionParameterValue";

oFF.OdpActionEpmAddActionParameterValue.NAME = "epmAddActionParameterValue";
oFF.OdpActionEpmAddActionParameterValue.create = function()
{
	let obj = new oFF.OdpActionEpmAddActionParameterValue();
	obj.setupAction();
	return obj;
};
oFF.OdpActionEpmAddActionParameterValue.prototype.doAction = function(dataProvider)
{
	let parameters = this.getParameters();
	let actionType = oFF.EpmActionType.lookup(parameters.get(0));
	let packageName = parameters.get(1);
	let localName = parameters.get(2);
	let parameterName = parameters.get(3);
	let value = parameters.get(4);
	let cc = dataProvider.getCc();
	cc.addEpmPlanningActionParameterValue(actionType, packageName, localName, parameterName, value);
	return oFF.XPromise.resolve(this.newActionResult());
};
oFF.OdpActionEpmAddActionParameterValue.prototype.getName = function()
{
	return oFF.OdpActionEpmAddActionParameterValue.NAME;
};
oFF.OdpActionEpmAddActionParameterValue.prototype.setTypedParameters = function(actionType, packageName, localName, parameterName, value)
{
	let parameters = oFF.XList.create();
	parameters.add(oFF.DfNameObject.getSafeName(actionType));
	parameters.add(packageName);
	parameters.add(localName);
	parameters.add(parameterName);
	parameters.add(value);
	this.setParameters(parameters);
};

oFF.OdpActionEpmClearActionParameterLevelFieldNames = function() {};
oFF.OdpActionEpmClearActionParameterLevelFieldNames.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpActionEpmClearActionParameterLevelFieldNames.prototype._ff_c = "OdpActionEpmClearActionParameterLevelFieldNames";

oFF.OdpActionEpmClearActionParameterLevelFieldNames.NAME = "epmClearActionParameterLevelFieldNames";
oFF.OdpActionEpmClearActionParameterLevelFieldNames.create = function()
{
	let obj = new oFF.OdpActionEpmClearActionParameterLevelFieldNames();
	obj.setupAction();
	return obj;
};
oFF.OdpActionEpmClearActionParameterLevelFieldNames.prototype.doAction = function(dataProvider)
{
	let parameters = this.getParameters();
	let actionType = oFF.EpmActionType.lookup(parameters.get(0));
	let packageName = parameters.get(1);
	let localName = parameters.get(2);
	let parameterName = parameters.get(3);
	let cc = dataProvider.getCc();
	cc.clearEpmPlanningActionParameterLevelFieldNames(actionType, packageName, localName, parameterName);
	return oFF.XPromise.resolve(this.newActionResult());
};
oFF.OdpActionEpmClearActionParameterLevelFieldNames.prototype.getName = function()
{
	return oFF.OdpActionEpmClearActionParameterLevelFieldNames.NAME;
};
oFF.OdpActionEpmClearActionParameterLevelFieldNames.prototype.setTypedParameters = function(actionType, packageName, localName, parameterName)
{
	let parameters = oFF.XList.create();
	parameters.add(oFF.DfNameObject.getSafeName(actionType));
	parameters.add(packageName);
	parameters.add(localName);
	parameters.add(parameterName);
	this.setParameters(parameters);
};

oFF.OdpActionEpmClearActionParameterValue = function() {};
oFF.OdpActionEpmClearActionParameterValue.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpActionEpmClearActionParameterValue.prototype._ff_c = "OdpActionEpmClearActionParameterValue";

oFF.OdpActionEpmClearActionParameterValue.NAME = "epmClearActionParameterValue";
oFF.OdpActionEpmClearActionParameterValue.create = function()
{
	let obj = new oFF.OdpActionEpmClearActionParameterValue();
	obj.setupAction();
	return obj;
};
oFF.OdpActionEpmClearActionParameterValue.prototype.doAction = function(dataProvider)
{
	let parameters = this.getParameters();
	let actionType = oFF.EpmActionType.lookup(parameters.get(0));
	let packageName = parameters.get(1);
	let localName = parameters.get(2);
	let parameterName = parameters.get(3);
	let cc = dataProvider.getCc();
	cc.clearEpmPlanningActionParameterValue(actionType, packageName, localName, parameterName);
	return oFF.XPromise.resolve(this.newActionResult());
};
oFF.OdpActionEpmClearActionParameterValue.prototype.getName = function()
{
	return oFF.OdpActionEpmClearActionParameterValue.NAME;
};
oFF.OdpActionEpmClearActionParameterValue.prototype.setTypedParameters = function(actionType, packageName, localName, parameterName)
{
	let parameters = oFF.XList.create();
	parameters.add(oFF.DfNameObject.getSafeName(actionType));
	parameters.add(packageName);
	parameters.add(localName);
	parameters.add(parameterName);
	this.setParameters(parameters);
};

oFF.OdpActionEpmExecutePlanningAction = function() {};
oFF.OdpActionEpmExecutePlanningAction.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpActionEpmExecutePlanningAction.prototype._ff_c = "OdpActionEpmExecutePlanningAction";

oFF.OdpActionEpmExecutePlanningAction.NAME = "epmExecutePlanningAction";
oFF.OdpActionEpmExecutePlanningAction.create = function()
{
	let obj = new oFF.OdpActionEpmExecutePlanningAction();
	obj.setupAction();
	return obj;
};
oFF.OdpActionEpmExecutePlanningAction.prototype.doAction = function(dataProvider)
{
	let parameters = this.getParameters();
	let actionType = oFF.EpmActionType.lookup(parameters.get(0));
	let packageName = parameters.get(1);
	let localName = parameters.get(2);
	let cc = dataProvider.getCc();
	return cc.executePlanningAction(actionType, packageName, localName).onThenExt((pResult) => {
		let result = this.newActionResult();
		result.setReturnValue(pResult.getData());
		return result;
	});
};
oFF.OdpActionEpmExecutePlanningAction.prototype.getName = function()
{
	return oFF.OdpActionEpmExecutePlanningAction.NAME;
};
oFF.OdpActionEpmExecutePlanningAction.prototype.setTypedParameters = function(actionType, packageName, localName)
{
	let parameters = oFF.XList.create();
	parameters.add(oFF.DfNameObject.getSafeName(actionType));
	parameters.add(packageName);
	parameters.add(localName);
	this.setParameters(parameters);
};

oFF.OdpActionEpmFetchPlanningAction = function() {};
oFF.OdpActionEpmFetchPlanningAction.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpActionEpmFetchPlanningAction.prototype._ff_c = "OdpActionEpmFetchPlanningAction";

oFF.OdpActionEpmFetchPlanningAction.NAME = "epmFetchPlanningAction";
oFF.OdpActionEpmFetchPlanningAction.create = function()
{
	let obj = new oFF.OdpActionEpmFetchPlanningAction();
	obj.setupAction();
	return obj;
};
oFF.OdpActionEpmFetchPlanningAction.prototype.doAction = function(dataProvider)
{
	let parameters = this.getParameters();
	let actionType = oFF.EpmActionType.lookup(parameters.get(0));
	let packageName = parameters.get(1);
	let localName = parameters.get(2);
	let cc = dataProvider.getCc();
	return cc.fetchEpmPlanningAction(actionType, packageName, localName).onThenExt((pResult) => {
		let result = this.newActionResult();
		result.setReturnValue(pResult.getData());
		return result;
	});
};
oFF.OdpActionEpmFetchPlanningAction.prototype.getName = function()
{
	return oFF.OdpActionEpmFetchPlanningAction.NAME;
};
oFF.OdpActionEpmFetchPlanningAction.prototype.setTypedParameters = function(actionType, packageName, localName)
{
	let parameters = oFF.XList.create();
	parameters.add(oFF.DfNameObject.getSafeName(actionType));
	parameters.add(packageName);
	parameters.add(localName);
	this.setParameters(parameters);
};

oFF.OdpActionEpmGetActionParameters = function() {};
oFF.OdpActionEpmGetActionParameters.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpActionEpmGetActionParameters.prototype._ff_c = "OdpActionEpmGetActionParameters";

oFF.OdpActionEpmGetActionParameters.NAME = "epmGetActionParameters";
oFF.OdpActionEpmGetActionParameters.create = function()
{
	let obj = new oFF.OdpActionEpmGetActionParameters();
	obj.setupAction();
	return obj;
};
oFF.OdpActionEpmGetActionParameters.prototype.doAction = function(dataProvider)
{
	let parameters = this.getParameters();
	let actionType = oFF.EpmActionType.lookup(parameters.get(0));
	let packageName = parameters.get(1);
	let localName = parameters.get(2);
	let cc = dataProvider.getCc();
	let result = cc.getEpmPlanningActionParameters(actionType, packageName, localName);
	let promisedResult;
	if (oFF.isNull(result))
	{
		promisedResult = oFF.XPromise.reject(oFF.XError.create("Planning action cannot be found"));
	}
	else
	{
		let actionResult = this.newActionResult();
		actionResult.setReturnValue(result);
		promisedResult = oFF.XPromise.resolve(actionResult);
	}
	return promisedResult;
};
oFF.OdpActionEpmGetActionParameters.prototype.getName = function()
{
	return oFF.OdpActionEpmGetActionParameters.NAME;
};
oFF.OdpActionEpmGetActionParameters.prototype.setTypedParameters = function(actionType, packageName, localName)
{
	let parameters = oFF.XList.create();
	parameters.add(oFF.DfNameObject.getSafeName(actionType));
	parameters.add(packageName);
	parameters.add(localName);
	this.setParameters(parameters);
};

oFF.OdpActionEpmPushActionParameterMemberValue = function() {};
oFF.OdpActionEpmPushActionParameterMemberValue.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpActionEpmPushActionParameterMemberValue.prototype._ff_c = "OdpActionEpmPushActionParameterMemberValue";

oFF.OdpActionEpmPushActionParameterMemberValue.NAME = "epmPushActionParameterMemberValue";
oFF.OdpActionEpmPushActionParameterMemberValue.create = function()
{
	let obj = new oFF.OdpActionEpmPushActionParameterMemberValue();
	obj.setupAction();
	return obj;
};
oFF.OdpActionEpmPushActionParameterMemberValue.prototype.doAction = function(dataProvider)
{
	let parameters = this.getParameters();
	let actionType = oFF.EpmActionType.lookup(parameters.get(0));
	let packageName = parameters.get(1);
	let localName = parameters.get(2);
	let parameterName = parameters.get(3);
	let cc = dataProvider.getCc();
	cc.pushEpmPlanningActionParameterMemberValue(actionType, packageName, localName, parameterName);
	return oFF.XPromise.resolve(this.newActionResult());
};
oFF.OdpActionEpmPushActionParameterMemberValue.prototype.getName = function()
{
	return oFF.OdpActionEpmPushActionParameterMemberValue.NAME;
};
oFF.OdpActionEpmPushActionParameterMemberValue.prototype.setTypedParameters = function(actionType, packageName, localName, parameterName)
{
	let parameters = oFF.XList.create();
	parameters.add(oFF.DfNameObject.getSafeName(actionType));
	parameters.add(packageName);
	parameters.add(localName);
	parameters.add(parameterName);
	this.setParameters(parameters);
};

oFF.OdpActionEpmSetActionParameterHierarchyName = function() {};
oFF.OdpActionEpmSetActionParameterHierarchyName.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpActionEpmSetActionParameterHierarchyName.prototype._ff_c = "OdpActionEpmSetActionParameterHierarchyName";

oFF.OdpActionEpmSetActionParameterHierarchyName.NAME = "epmSetActionParameterHierarchyName";
oFF.OdpActionEpmSetActionParameterHierarchyName.create = function()
{
	let obj = new oFF.OdpActionEpmSetActionParameterHierarchyName();
	obj.setupAction();
	return obj;
};
oFF.OdpActionEpmSetActionParameterHierarchyName.prototype.doAction = function(dataProvider)
{
	let parameters = this.getParameters();
	let actionType = oFF.EpmActionType.lookup(parameters.get(0));
	let packageName = parameters.get(1);
	let localName = parameters.get(2);
	let parameterName = parameters.get(3);
	let hierarchyName = parameters.get(4);
	let cc = dataProvider.getCc();
	cc.setEpmPlanningActionParameterHierarchyName(actionType, packageName, localName, parameterName, hierarchyName);
	return oFF.XPromise.resolve(this.newActionResult());
};
oFF.OdpActionEpmSetActionParameterHierarchyName.prototype.getName = function()
{
	return oFF.OdpActionEpmSetActionParameterHierarchyName.NAME;
};
oFF.OdpActionEpmSetActionParameterHierarchyName.prototype.setTypedParameters = function(actionType, packageName, localName, parameterName, hierarchyName)
{
	let parameters = oFF.XList.create();
	parameters.add(oFF.DfNameObject.getSafeName(actionType));
	parameters.add(packageName);
	parameters.add(localName);
	parameters.add(parameterName);
	parameters.add(hierarchyName);
	this.setParameters(parameters);
};

oFF.OdpActionInitializeEpmPlanning = function() {};
oFF.OdpActionInitializeEpmPlanning.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpActionInitializeEpmPlanning.prototype._ff_c = "OdpActionInitializeEpmPlanning";

oFF.OdpActionInitializeEpmPlanning.NAME = "initializeEpmPlanning";
oFF.OdpActionInitializeEpmPlanning.create = function()
{
	let obj = new oFF.OdpActionInitializeEpmPlanning();
	obj.setupAction();
	return obj;
};
oFF.OdpActionInitializeEpmPlanning.prototype.doAction = function(dataProvider)
{
	let converter = oFF.OdpActionParameterConverter.create();
	let planningDataSourceName = this.getParameter(0);
	let planningModelBehaviour = converter.toPlanningModelBehaviour(this.getParameter(1));
	let planningPersistenceType = converter.toPlanningPersistenceType(this.getParameter(2));
	let withSharedVersions = converter.toBoolean(this.getParameter(3), false);
	let backendUserName = this.getParameter(4);
	let cc = dataProvider.getCc();
	return cc.initializeEpmPlanning(planningDataSourceName, planningModelBehaviour, planningPersistenceType, withSharedVersions, backendUserName).onThenExt((pResult) => {
		let result = this.newActionResult();
		result.getChangesBase().addChangedEventType(oFF.OlapDataProviderEventType.MODEL_CHANGE);
		return result;
	});
};
oFF.OdpActionInitializeEpmPlanning.prototype.getName = function()
{
	return oFF.OdpActionInitializeEpmPlanning.NAME;
};
oFF.OdpActionInitializeEpmPlanning.prototype.setTypedParameters = function(planningDataSourceName, planningModelBehaviour, planningPersistenceType, withSharedVersions, backendUserName)
{
	let converter = oFF.OdpActionParameterConverter.create();
	let parameters = oFF.XList.create();
	parameters.add(planningDataSourceName);
	parameters.add(converter.fromPlanningModelBehaviour(planningModelBehaviour));
	parameters.add(converter.fromPlanningPersistenceType(planningPersistenceType));
	parameters.add(converter.fromBoolean(withSharedVersions));
	parameters.add(backendUserName);
	this.setParameters(parameters);
};

oFF.OdpActionInitializeEpmVersion = function() {};
oFF.OdpActionInitializeEpmVersion.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpActionInitializeEpmVersion.prototype._ff_c = "OdpActionInitializeEpmVersion";

oFF.OdpActionInitializeEpmVersion.NAME = "initializeEpmVersion";
oFF.OdpActionInitializeEpmVersion.create = function()
{
	let obj = new oFF.OdpActionInitializeEpmVersion();
	obj.setupAction();
	return obj;
};
oFF.OdpActionInitializeEpmVersion.prototype.doAction = function(dataProvider)
{
	let converter = oFF.OdpActionParameterConverter.create();
	let versionId = converter.toInteger(this.getParameter(0));
	let sharedVersion = converter.toBoolean(this.getParameter(1), false);
	let versionOwner = this.getParameter(2);
	let description = this.getParameter(3);
	let sourceVersion = this.getParameter(4);
	let sourceCategory = this.getParameter(5);
	let sourceVersionFull = this.getParameter(6);
	let cc = dataProvider.getCc();
	return cc.initializeEpmVersion(versionId, sharedVersion, versionOwner, description, sourceVersion, sourceCategory, sourceVersionFull).onThenExt((pResult) => {
		let result = this.newActionResult();
		result.getChangesBase().addChangedEventType(oFF.OlapDataProviderEventType.MODEL_CHANGE);
		return result;
	});
};
oFF.OdpActionInitializeEpmVersion.prototype.getName = function()
{
	return oFF.OdpActionInitializeEpmVersion.NAME;
};
oFF.OdpActionInitializeEpmVersion.prototype.setTypedParameters = function(versionId, sharedVersion, versionOwner, description, sourceVersion, sourceCategory, sourceVersionFull)
{
	let converter = oFF.OdpActionParameterConverter.create();
	let parameters = oFF.XList.create();
	parameters.add(converter.fromInteger(versionId));
	parameters.add(converter.fromBoolean(sharedVersion));
	parameters.add(versionOwner);
	parameters.add(description);
	parameters.add(sourceVersion);
	parameters.add(sourceCategory);
	parameters.add(sourceVersionFull);
	this.setParameters(parameters);
};

oFF.OdpActionRedoVersion = function() {};
oFF.OdpActionRedoVersion.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpActionRedoVersion.prototype._ff_c = "OdpActionRedoVersion";

oFF.OdpActionRedoVersion.NAME = "redoVersion";
oFF.OdpActionRedoVersion.create = function()
{
	let obj = new oFF.OdpActionRedoVersion();
	obj.setupAction();
	return obj;
};
oFF.OdpActionRedoVersion.prototype.doAction = function(dataProvider)
{
	let parameters = oFF.OlapDataProviderVersionParameters.createFromList(this.getParameters());
	let versionId = parameters.getVersionId();
	let sharedVersion = parameters.isSharedVersion();
	let versionOwner = parameters.getVersionOwner();
	let description = parameters.getDescription();
	let cc = dataProvider.getCc();
	return cc.redoVersion(versionId, sharedVersion, versionOwner, description).onThenExt((pResult) => {
		let result = this.newActionResult();
		result.getChangesBase().addChangedEventType(oFF.OlapDataProviderEventType.MODEL_CHANGE);
		return result;
	});
};
oFF.OdpActionRedoVersion.prototype.getName = function()
{
	return oFF.OdpActionRedoVersion.NAME;
};
oFF.OdpActionRedoVersion.prototype.setTypedParameters = function(versionId, sharedVersion, versionOwner, description)
{
	let parameters = oFF.OlapDataProviderVersionParameters.createParameters(versionId, sharedVersion, versionOwner, description);
	this.setParameters(parameters.convertToParameterList());
};

oFF.OdpActionResetVersion = function() {};
oFF.OdpActionResetVersion.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpActionResetVersion.prototype._ff_c = "OdpActionResetVersion";

oFF.OdpActionResetVersion.NAME = "resetVersion";
oFF.OdpActionResetVersion.create = function()
{
	let obj = new oFF.OdpActionResetVersion();
	obj.setupAction();
	return obj;
};
oFF.OdpActionResetVersion.prototype.doAction = function(dataProvider)
{
	let parameters = oFF.OlapDataProviderVersionParameters.createFromList(this.getParameters());
	let versionId = parameters.getVersionId();
	let sharedVersion = parameters.isSharedVersion();
	let versionOwner = parameters.getVersionOwner();
	let description = parameters.getDescription();
	let cc = dataProvider.getCc();
	return cc.resetVersion(versionId, sharedVersion, versionOwner, description).onThenExt((pResult) => {
		let result = this.newActionResult();
		result.getChangesBase().addChangedEventType(oFF.OlapDataProviderEventType.MODEL_CHANGE);
		return result;
	});
};
oFF.OdpActionResetVersion.prototype.getName = function()
{
	return oFF.OdpActionResetVersion.NAME;
};
oFF.OdpActionResetVersion.prototype.setTypedParameters = function(versionId, sharedVersion, versionOwner, description)
{
	let parameters = oFF.OlapDataProviderVersionParameters.createParameters(versionId, sharedVersion, versionOwner, description);
	this.setParameters(parameters.convertToParameterList());
};

oFF.OdpActionSetPlanningMode = function() {};
oFF.OdpActionSetPlanningMode.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpActionSetPlanningMode.prototype._ff_c = "OdpActionSetPlanningMode";

oFF.OdpActionSetPlanningMode.NAME = "setPlanningMode";
oFF.OdpActionSetPlanningMode.create = function()
{
	let obj = new oFF.OdpActionSetPlanningMode();
	obj.setupAction();
	return obj;
};
oFF.OdpActionSetPlanningMode.prototype.doAction = function(dataProvider)
{
	let converter = oFF.OdpActionParameterConverter.create();
	let planningMode = converter.toPlanningMode(this.getParameter(0));
	let cc = dataProvider.getCc();
	cc.setPlanningMode(planningMode);
	let result = this.newActionResult();
	result.getChangesBase().addChangedEventType(oFF.OlapDataProviderEventType.MODEL_CHANGE);
	return oFF.XPromise.resolve(result);
};
oFF.OdpActionSetPlanningMode.prototype.getName = function()
{
	return oFF.OdpActionSetPlanningMode.NAME;
};
oFF.OdpActionSetPlanningMode.prototype.setTypedParameters = function(planningMode)
{
	let converter = oFF.OdpActionParameterConverter.create();
	let parameters = oFF.XList.create();
	parameters.add(converter.fromPlanningMode(planningMode));
	this.setParameters(parameters);
};

oFF.OdpActionSetPlanningVersionSettingsMode = function() {};
oFF.OdpActionSetPlanningVersionSettingsMode.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpActionSetPlanningVersionSettingsMode.prototype._ff_c = "OdpActionSetPlanningVersionSettingsMode";

oFF.OdpActionSetPlanningVersionSettingsMode.NAME = "setPlanningVersionSettingsMode";
oFF.OdpActionSetPlanningVersionSettingsMode.create = function()
{
	let obj = new oFF.OdpActionSetPlanningVersionSettingsMode();
	obj.setupAction();
	return obj;
};
oFF.OdpActionSetPlanningVersionSettingsMode.prototype.doAction = function(dataProvider)
{
	let converter = oFF.OdpActionParameterConverter.create();
	let planningVersionSettingsMode = converter.toPlanningVersionSettingsMode(this.getParameter(0));
	let cc = dataProvider.getCc();
	cc.setPlanningVersionSettingsMode(planningVersionSettingsMode);
	let result = this.newActionResult();
	result.getChangesBase().addChangedEventType(oFF.OlapDataProviderEventType.MODEL_CHANGE);
	return oFF.XPromise.resolve(result);
};
oFF.OdpActionSetPlanningVersionSettingsMode.prototype.getName = function()
{
	return oFF.OdpActionSetPlanningVersionSettingsMode.NAME;
};
oFF.OdpActionSetPlanningVersionSettingsMode.prototype.setTypedParameters = function(planningVersionSettingsMode)
{
	let converter = oFF.OdpActionParameterConverter.create();
	let parameters = oFF.XList.create();
	parameters.add(converter.fromPlanningVersionSettingsMode(planningVersionSettingsMode));
	this.setParameters(parameters);
};

oFF.OdpActionTransferNewValues = function() {};
oFF.OdpActionTransferNewValues.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpActionTransferNewValues.prototype._ff_c = "OdpActionTransferNewValues";

oFF.OdpActionTransferNewValues.NAME = "transferNewValues";
oFF.OdpActionTransferNewValues.create = function()
{
	let obj = new oFF.OdpActionTransferNewValues();
	obj.setupAction();
	return obj;
};
oFF.OdpActionTransferNewValues.prototype.doAction = function(dataProvider)
{
	let cc = dataProvider.getCc();
	cc.transferNewValues();
	let result = this.newActionResult();
	result.getChangesBase().addChangedEventType(oFF.OlapDataProviderEventType.MODEL_CHANGE);
	return oFF.XPromise.resolve(result);
};
oFF.OdpActionTransferNewValues.prototype.getName = function()
{
	return oFF.OdpActionTransferNewValues.NAME;
};
oFF.OdpActionTransferNewValues.prototype.setTypedParameters = function()
{
	let parameters = oFF.XList.create();
	this.setParameters(parameters);
};

oFF.OdpActionUndoVersion = function() {};
oFF.OdpActionUndoVersion.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpActionUndoVersion.prototype._ff_c = "OdpActionUndoVersion";

oFF.OdpActionUndoVersion.NAME = "undoVersion";
oFF.OdpActionUndoVersion.create = function()
{
	let obj = new oFF.OdpActionUndoVersion();
	obj.setupAction();
	return obj;
};
oFF.OdpActionUndoVersion.prototype.doAction = function(dataProvider)
{
	let parameters = oFF.OlapDataProviderVersionParameters.createFromList(this.getParameters());
	let versionId = parameters.getVersionId();
	let sharedVersion = parameters.isSharedVersion();
	let versionOwner = parameters.getVersionOwner();
	let description = parameters.getDescription();
	let cc = dataProvider.getCc();
	return cc.undoVersion(versionId, sharedVersion, versionOwner, description).onThenExt((pResult) => {
		let result = this.newActionResult();
		result.getChangesBase().addChangedEventType(oFF.OlapDataProviderEventType.MODEL_CHANGE);
		return result;
	});
};
oFF.OdpActionUndoVersion.prototype.getName = function()
{
	return oFF.OdpActionUndoVersion.NAME;
};
oFF.OdpActionUndoVersion.prototype.setTypedParameters = function(versionId, sharedVersion, versionOwner, description)
{
	let parameters = oFF.OlapDataProviderVersionParameters.createParameters(versionId, sharedVersion, versionOwner, description);
	this.setParameters(parameters.convertToParameterList());
};

oFF.OdpPresentationActionGetAvailableDisplays = function() {};
oFF.OdpPresentationActionGetAvailableDisplays.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpPresentationActionGetAvailableDisplays.prototype._ff_c = "OdpPresentationActionGetAvailableDisplays";

oFF.OdpPresentationActionGetAvailableDisplays.NAME = "getFieldContainerAvailableDisplays";
oFF.OdpPresentationActionGetAvailableDisplays.create = function()
{
	let obj = new oFF.OdpPresentationActionGetAvailableDisplays();
	obj.setupAction();
	return obj;
};
oFF.OdpPresentationActionGetAvailableDisplays.prototype.doAction = function(dataProvider)
{
	let value = dataProvider.getCc().getAvailableFieldContainerDisplays(this.getParameter(0), this.getParameter(1));
	let result = this.newActionResult();
	result.setReturnValue(value);
	return oFF.XPromise.resolve(result);
};
oFF.OdpPresentationActionGetAvailableDisplays.prototype.getName = function()
{
	return oFF.OdpPresentationActionGetAvailableDisplays.NAME;
};
oFF.OdpPresentationActionGetAvailableDisplays.prototype.setTypedParameters = function(dimName, attrName)
{
	let parameters = oFF.XList.create();
	parameters.add(dimName);
	parameters.add(attrName);
	this.setParameters(parameters);
};

oFF.OdpPresentationActionGetAvailableKeyDisplays = function() {};
oFF.OdpPresentationActionGetAvailableKeyDisplays.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpPresentationActionGetAvailableKeyDisplays.prototype._ff_c = "OdpPresentationActionGetAvailableKeyDisplays";

oFF.OdpPresentationActionGetAvailableKeyDisplays.NAME = "getFieldContainerAvailableKeyDisplays";
oFF.OdpPresentationActionGetAvailableKeyDisplays.create = function()
{
	let obj = new oFF.OdpPresentationActionGetAvailableKeyDisplays();
	obj.setupAction();
	return obj;
};
oFF.OdpPresentationActionGetAvailableKeyDisplays.prototype.doAction = function(dataProvider)
{
	let value = dataProvider.getCc().getAvailableFieldContainerKeyDisplays(this.getParameter(0), this.getParameter(1));
	let result = this.newActionResult();
	result.setReturnValue(value);
	return oFF.XPromise.resolve(result);
};
oFF.OdpPresentationActionGetAvailableKeyDisplays.prototype.getName = function()
{
	return oFF.OdpPresentationActionGetAvailableKeyDisplays.NAME;
};
oFF.OdpPresentationActionGetAvailableKeyDisplays.prototype.setTypedParameters = function(dimName, attrName)
{
	let parameters = oFF.XList.create();
	parameters.add(dimName);
	parameters.add(attrName);
	this.setParameters(parameters);
};

oFF.OdpPresentationActionGetAvailableKeyViews = function() {};
oFF.OdpPresentationActionGetAvailableKeyViews.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpPresentationActionGetAvailableKeyViews.prototype._ff_c = "OdpPresentationActionGetAvailableKeyViews";

oFF.OdpPresentationActionGetAvailableKeyViews.NAME = "getFieldContainerAvailableKeyViews";
oFF.OdpPresentationActionGetAvailableKeyViews.create = function()
{
	let obj = new oFF.OdpPresentationActionGetAvailableKeyViews();
	obj.setupAction();
	return obj;
};
oFF.OdpPresentationActionGetAvailableKeyViews.prototype.doAction = function(dataProvider)
{
	let value = dataProvider.getCc().getAvailableFieldContainerKeyViews(this.getParameter(0), this.getParameter(1));
	let result = this.newActionResult();
	result.setReturnValue(value);
	return oFF.XPromise.resolve(result);
};
oFF.OdpPresentationActionGetAvailableKeyViews.prototype.getName = function()
{
	return oFF.OdpPresentationActionGetAvailableKeyViews.NAME;
};
oFF.OdpPresentationActionGetAvailableKeyViews.prototype.setTypedParameters = function(dimName, attrName)
{
	let parameters = oFF.XList.create();
	parameters.add(dimName);
	parameters.add(attrName);
	this.setParameters(parameters);
};

oFF.OdpPresentationActionGetAvailableTextViews = function() {};
oFF.OdpPresentationActionGetAvailableTextViews.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpPresentationActionGetAvailableTextViews.prototype._ff_c = "OdpPresentationActionGetAvailableTextViews";

oFF.OdpPresentationActionGetAvailableTextViews.NAME = "getFieldContainerAvailableTextViews";
oFF.OdpPresentationActionGetAvailableTextViews.create = function()
{
	let obj = new oFF.OdpPresentationActionGetAvailableTextViews();
	obj.setupAction();
	return obj;
};
oFF.OdpPresentationActionGetAvailableTextViews.prototype.doAction = function(dataProvider)
{
	let value = dataProvider.getCc().getAvailableFieldContainerTextViews(this.getParameter(0), this.getParameter(1));
	let result = this.newActionResult();
	result.setReturnValue(value);
	return oFF.XPromise.resolve(result);
};
oFF.OdpPresentationActionGetAvailableTextViews.prototype.getName = function()
{
	return oFF.OdpPresentationActionGetAvailableTextViews.NAME;
};
oFF.OdpPresentationActionGetAvailableTextViews.prototype.setTypedParameters = function(dimName, attrName)
{
	let parameters = oFF.XList.create();
	parameters.add(dimName);
	parameters.add(attrName);
	this.setParameters(parameters);
};

oFF.OdpPresentationActionGetDefaultKeyDisplay = function() {};
oFF.OdpPresentationActionGetDefaultKeyDisplay.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpPresentationActionGetDefaultKeyDisplay.prototype._ff_c = "OdpPresentationActionGetDefaultKeyDisplay";

oFF.OdpPresentationActionGetDefaultKeyDisplay.NAME = "getFieldContainerDefaultKeyDisplay";
oFF.OdpPresentationActionGetDefaultKeyDisplay.create = function()
{
	let obj = new oFF.OdpPresentationActionGetDefaultKeyDisplay();
	obj.setupAction();
	return obj;
};
oFF.OdpPresentationActionGetDefaultKeyDisplay.prototype.doAction = function(dataProvider)
{
	let value = dataProvider.getCc().getFieldContainerDefaultKeyDisplay(this.getParameter(0), this.getParameter(1));
	let result = this.newActionResult();
	result.setReturnValue(value);
	return oFF.XPromise.resolve(result);
};
oFF.OdpPresentationActionGetDefaultKeyDisplay.prototype.getName = function()
{
	return oFF.OdpPresentationActionGetDefaultKeyDisplay.NAME;
};
oFF.OdpPresentationActionGetDefaultKeyDisplay.prototype.setTypedParameters = function(dimName, attrName)
{
	let parameters = oFF.XList.create();
	parameters.add(dimName);
	parameters.add(attrName);
	this.setParameters(parameters);
};

oFF.OdpPresentationActionGetDefaultKeyView = function() {};
oFF.OdpPresentationActionGetDefaultKeyView.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpPresentationActionGetDefaultKeyView.prototype._ff_c = "OdpPresentationActionGetDefaultKeyView";

oFF.OdpPresentationActionGetDefaultKeyView.NAME = "getFieldContainerDefaultKeyView";
oFF.OdpPresentationActionGetDefaultKeyView.create = function()
{
	let obj = new oFF.OdpPresentationActionGetDefaultKeyView();
	obj.setupAction();
	return obj;
};
oFF.OdpPresentationActionGetDefaultKeyView.prototype.doAction = function(dataProvider)
{
	let value = dataProvider.getCc().getFieldContainerDefaultKeyView(this.getParameter(0), this.getParameter(1));
	let result = this.newActionResult();
	result.setReturnValue(value);
	return oFF.XPromise.resolve(result);
};
oFF.OdpPresentationActionGetDefaultKeyView.prototype.getName = function()
{
	return oFF.OdpPresentationActionGetDefaultKeyView.NAME;
};
oFF.OdpPresentationActionGetDefaultKeyView.prototype.setTypedParameters = function(dimName, attrName)
{
	let parameters = oFF.XList.create();
	parameters.add(dimName);
	parameters.add(attrName);
	this.setParameters(parameters);
};

oFF.OdpPresentationActionGetDefaultTextView = function() {};
oFF.OdpPresentationActionGetDefaultTextView.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpPresentationActionGetDefaultTextView.prototype._ff_c = "OdpPresentationActionGetDefaultTextView";

oFF.OdpPresentationActionGetDefaultTextView.NAME = "getFieldContainerDefaultTextView";
oFF.OdpPresentationActionGetDefaultTextView.create = function()
{
	let obj = new oFF.OdpPresentationActionGetDefaultTextView();
	obj.setupAction();
	return obj;
};
oFF.OdpPresentationActionGetDefaultTextView.prototype.doAction = function(dataProvider)
{
	let value = dataProvider.getCc().getFieldContainerDefaultTextView(this.getParameter(0), this.getParameter(1));
	let result = this.newActionResult();
	result.setReturnValue(value);
	return oFF.XPromise.resolve(result);
};
oFF.OdpPresentationActionGetDefaultTextView.prototype.getName = function()
{
	return oFF.OdpPresentationActionGetDefaultTextView.NAME;
};
oFF.OdpPresentationActionGetDefaultTextView.prototype.setTypedParameters = function(dimName, attrName)
{
	let parameters = oFF.XList.create();
	parameters.add(dimName);
	parameters.add(attrName);
	this.setParameters(parameters);
};

oFF.OdpPresentationActionGetDisplay = function() {};
oFF.OdpPresentationActionGetDisplay.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpPresentationActionGetDisplay.prototype._ff_c = "OdpPresentationActionGetDisplay";

oFF.OdpPresentationActionGetDisplay.NAME = "getFieldContainerDisplay";
oFF.OdpPresentationActionGetDisplay.create = function()
{
	let obj = new oFF.OdpPresentationActionGetDisplay();
	obj.setupAction();
	return obj;
};
oFF.OdpPresentationActionGetDisplay.prototype.doAction = function(dataProvider)
{
	let value = dataProvider.getCc().getFieldContainerDisplay(this.getParameter(0), this.getParameter(1));
	let result = this.newActionResult();
	result.setReturnValue(value);
	return oFF.XPromise.resolve(result);
};
oFF.OdpPresentationActionGetDisplay.prototype.getName = function()
{
	return oFF.OdpPresentationActionGetDisplay.NAME;
};
oFF.OdpPresentationActionGetDisplay.prototype.setTypedParameters = function(dimName, attrName)
{
	let parameters = oFF.XList.create();
	parameters.add(dimName);
	parameters.add(attrName);
	this.setParameters(parameters);
};

oFF.OdpPresentationActionGetKeyDisplay = function() {};
oFF.OdpPresentationActionGetKeyDisplay.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpPresentationActionGetKeyDisplay.prototype._ff_c = "OdpPresentationActionGetKeyDisplay";

oFF.OdpPresentationActionGetKeyDisplay.NAME = "getFieldContainerKeyDisplay";
oFF.OdpPresentationActionGetKeyDisplay.create = function()
{
	let obj = new oFF.OdpPresentationActionGetKeyDisplay();
	obj.setupAction();
	return obj;
};
oFF.OdpPresentationActionGetKeyDisplay.prototype.doAction = function(dataProvider)
{
	let value = dataProvider.getCc().getFieldContainerKeyDisplay(this.getParameter(0), this.getParameter(1));
	let result = this.newActionResult();
	result.setReturnValue(value);
	return oFF.XPromise.resolve(result);
};
oFF.OdpPresentationActionGetKeyDisplay.prototype.getName = function()
{
	return oFF.OdpPresentationActionGetKeyDisplay.NAME;
};
oFF.OdpPresentationActionGetKeyDisplay.prototype.setTypedParameters = function(dimName, attrName)
{
	let parameters = oFF.XList.create();
	parameters.add(dimName);
	parameters.add(attrName);
	this.setParameters(parameters);
};

oFF.OdpPresentationActionGetKeyView = function() {};
oFF.OdpPresentationActionGetKeyView.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpPresentationActionGetKeyView.prototype._ff_c = "OdpPresentationActionGetKeyView";

oFF.OdpPresentationActionGetKeyView.NAME = "getFieldContainerKeyView";
oFF.OdpPresentationActionGetKeyView.create = function()
{
	let obj = new oFF.OdpPresentationActionGetKeyView();
	obj.setupAction();
	return obj;
};
oFF.OdpPresentationActionGetKeyView.prototype.doAction = function(dataProvider)
{
	let value = dataProvider.getCc().getFieldContainerKeyView(this.getParameter(0), this.getParameter(1));
	let result = this.newActionResult();
	result.setReturnValue(value);
	return oFF.XPromise.resolve(result);
};
oFF.OdpPresentationActionGetKeyView.prototype.getName = function()
{
	return oFF.OdpPresentationActionGetKeyView.NAME;
};
oFF.OdpPresentationActionGetKeyView.prototype.setTypedParameters = function(dimName, attrName)
{
	let parameters = oFF.XList.create();
	parameters.add(dimName);
	parameters.add(attrName);
	this.setParameters(parameters);
};

oFF.OdpPresentationActionGetTextView = function() {};
oFF.OdpPresentationActionGetTextView.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpPresentationActionGetTextView.prototype._ff_c = "OdpPresentationActionGetTextView";

oFF.OdpPresentationActionGetTextView.NAME = "getFieldContainerTextView";
oFF.OdpPresentationActionGetTextView.create = function()
{
	let obj = new oFF.OdpPresentationActionGetTextView();
	obj.setupAction();
	return obj;
};
oFF.OdpPresentationActionGetTextView.prototype.doAction = function(dataProvider)
{
	let value = dataProvider.getCc().getFieldContainerTextView(this.getParameter(0), this.getParameter(1));
	let result = this.newActionResult();
	result.setReturnValue(value);
	return oFF.XPromise.resolve(result);
};
oFF.OdpPresentationActionGetTextView.prototype.getName = function()
{
	return oFF.OdpPresentationActionGetTextView.NAME;
};
oFF.OdpPresentationActionGetTextView.prototype.setTypedParameters = function(dimName, attrName)
{
	let parameters = oFF.XList.create();
	parameters.add(dimName);
	parameters.add(attrName);
	this.setParameters(parameters);
};

oFF.OdpPresentationActionIsFieldInResultSet = function() {};
oFF.OdpPresentationActionIsFieldInResultSet.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpPresentationActionIsFieldInResultSet.prototype._ff_c = "OdpPresentationActionIsFieldInResultSet";

oFF.OdpPresentationActionIsFieldInResultSet.NAME = "isFieldInResultSet";
oFF.OdpPresentationActionIsFieldInResultSet.create = function()
{
	let obj = new oFF.OdpPresentationActionIsFieldInResultSet();
	obj.setupAction();
	return obj;
};
oFF.OdpPresentationActionIsFieldInResultSet.prototype.doAction = function(dataProvider)
{
	let field = dataProvider.getCc().getField(this.getParameter(0));
	let dimension = oFF.isNull(field) ? null : field.getDimension();
	let attribute = oFF.isNull(field) ? null : field.getAttribute();
	let flt = oFF.isNull(dimension) ? null : dimension.getFieldLayoutType();
	let resultSetFields = null;
	if (flt === oFF.FieldLayoutType.FIELD_BASED)
	{
		resultSetFields = dimension.getResultSetFields();
	}
	else if (oFF.notNull(attribute))
	{
		resultSetFields = attribute.getResultSetFields();
	}
	let fieldShown = oFF.notNull(resultSetFields) && (field.getObtainability() === null || field.getObtainability() === oFF.ObtainabilityType.ALWAYS) && resultSetFields.contains(field);
	let result = this.newActionResult();
	result.setReturnValue(oFF.XBooleanValue.create(fieldShown));
	return oFF.XPromise.resolve(result);
};
oFF.OdpPresentationActionIsFieldInResultSet.prototype.getName = function()
{
	return oFF.OdpPresentationActionIsFieldInResultSet.NAME;
};
oFF.OdpPresentationActionIsFieldInResultSet.prototype.setTypedParameters = function(fieldName)
{
	let parameters = oFF.XList.create();
	parameters.add(fieldName);
	this.setParameters(parameters);
};

oFF.OdpPresentationActionIsKeyViewActive = function() {};
oFF.OdpPresentationActionIsKeyViewActive.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpPresentationActionIsKeyViewActive.prototype._ff_c = "OdpPresentationActionIsKeyViewActive";

oFF.OdpPresentationActionIsKeyViewActive.NAME = "isFieldContainerKeyViewActive";
oFF.OdpPresentationActionIsKeyViewActive.create = function()
{
	let obj = new oFF.OdpPresentationActionIsKeyViewActive();
	obj.setupAction();
	return obj;
};
oFF.OdpPresentationActionIsKeyViewActive.prototype.doAction = function(dataProvider)
{
	let hierarchyActive = dataProvider.getCc().isFieldContainerKeyViewActive(this.getParameter(0), this.getParameter(1));
	let result = this.newActionResult();
	result.setReturnValue(oFF.XBooleanValue.create(hierarchyActive));
	return oFF.XPromise.resolve(result);
};
oFF.OdpPresentationActionIsKeyViewActive.prototype.getName = function()
{
	return oFF.OdpPresentationActionIsKeyViewActive.NAME;
};
oFF.OdpPresentationActionIsKeyViewActive.prototype.setTypedParameters = function(dimName, attrName)
{
	let parameters = oFF.XList.create();
	parameters.add(dimName);
	parameters.add(attrName);
	this.setParameters(parameters);
};

oFF.OdpPresentationActionIsKeyViewDefault = function() {};
oFF.OdpPresentationActionIsKeyViewDefault.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpPresentationActionIsKeyViewDefault.prototype._ff_c = "OdpPresentationActionIsKeyViewDefault";

oFF.OdpPresentationActionIsKeyViewDefault.NAME = "isFieldContainerKeyViewDefault";
oFF.OdpPresentationActionIsKeyViewDefault.create = function()
{
	let obj = new oFF.OdpPresentationActionIsKeyViewDefault();
	obj.setupAction();
	return obj;
};
oFF.OdpPresentationActionIsKeyViewDefault.prototype.doAction = function(dataProvider)
{
	let hierarchyActive = dataProvider.getCc().isFieldContainerKeyViewDefault(this.getParameter(0), this.getParameter(1));
	let result = this.newActionResult();
	result.setReturnValue(oFF.XBooleanValue.create(hierarchyActive));
	return oFF.XPromise.resolve(result);
};
oFF.OdpPresentationActionIsKeyViewDefault.prototype.getName = function()
{
	return oFF.OdpPresentationActionIsKeyViewDefault.NAME;
};
oFF.OdpPresentationActionIsKeyViewDefault.prototype.setTypedParameters = function(dimName, attrName)
{
	let parameters = oFF.XList.create();
	parameters.add(dimName);
	parameters.add(attrName);
	this.setParameters(parameters);
};

oFF.OdpPresentationActionIsKeyViewSupported = function() {};
oFF.OdpPresentationActionIsKeyViewSupported.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpPresentationActionIsKeyViewSupported.prototype._ff_c = "OdpPresentationActionIsKeyViewSupported";

oFF.OdpPresentationActionIsKeyViewSupported.NAME = "isFieldContainerKeyViewSupported";
oFF.OdpPresentationActionIsKeyViewSupported.create = function()
{
	let obj = new oFF.OdpPresentationActionIsKeyViewSupported();
	obj.setupAction();
	return obj;
};
oFF.OdpPresentationActionIsKeyViewSupported.prototype.doAction = function(dataProvider)
{
	let hierarchyActive = dataProvider.getCc().isFieldContainerKeyViewSupported(this.getParameter(0), this.getParameter(1));
	let result = this.newActionResult();
	result.setReturnValue(oFF.XBooleanValue.create(hierarchyActive));
	return oFF.XPromise.resolve(result);
};
oFF.OdpPresentationActionIsKeyViewSupported.prototype.getName = function()
{
	return oFF.OdpPresentationActionIsKeyViewSupported.NAME;
};
oFF.OdpPresentationActionIsKeyViewSupported.prototype.setTypedParameters = function(dimName, attrName)
{
	let parameters = oFF.XList.create();
	parameters.add(dimName);
	parameters.add(attrName);
	this.setParameters(parameters);
};

oFF.OdpPresentationActionIsTextViewActive = function() {};
oFF.OdpPresentationActionIsTextViewActive.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpPresentationActionIsTextViewActive.prototype._ff_c = "OdpPresentationActionIsTextViewActive";

oFF.OdpPresentationActionIsTextViewActive.NAME = "isFieldContainerTextViewActive";
oFF.OdpPresentationActionIsTextViewActive.create = function()
{
	let obj = new oFF.OdpPresentationActionIsTextViewActive();
	obj.setupAction();
	return obj;
};
oFF.OdpPresentationActionIsTextViewActive.prototype.doAction = function(dataProvider)
{
	let hierarchyActive = dataProvider.getCc().isFieldContainerTextViewActive(this.getParameter(0), this.getParameter(1));
	let result = this.newActionResult();
	result.setReturnValue(oFF.XBooleanValue.create(hierarchyActive));
	return oFF.XPromise.resolve(result);
};
oFF.OdpPresentationActionIsTextViewActive.prototype.getName = function()
{
	return oFF.OdpPresentationActionIsTextViewActive.NAME;
};
oFF.OdpPresentationActionIsTextViewActive.prototype.setTypedParameters = function(dimName, attrName)
{
	let parameters = oFF.XList.create();
	parameters.add(dimName);
	parameters.add(attrName);
	this.setParameters(parameters);
};

oFF.OdpPresentationActionIsTextViewDefault = function() {};
oFF.OdpPresentationActionIsTextViewDefault.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpPresentationActionIsTextViewDefault.prototype._ff_c = "OdpPresentationActionIsTextViewDefault";

oFF.OdpPresentationActionIsTextViewDefault.NAME = "isFieldContainerTextViewDefault";
oFF.OdpPresentationActionIsTextViewDefault.create = function()
{
	let obj = new oFF.OdpPresentationActionIsTextViewDefault();
	obj.setupAction();
	return obj;
};
oFF.OdpPresentationActionIsTextViewDefault.prototype.doAction = function(dataProvider)
{
	let hierarchyActive = dataProvider.getCc().isFieldContainerTextViewDefault(this.getParameter(0), this.getParameter(1));
	let result = this.newActionResult();
	result.setReturnValue(oFF.XBooleanValue.create(hierarchyActive));
	return oFF.XPromise.resolve(result);
};
oFF.OdpPresentationActionIsTextViewDefault.prototype.getName = function()
{
	return oFF.OdpPresentationActionIsTextViewDefault.NAME;
};
oFF.OdpPresentationActionIsTextViewDefault.prototype.setTypedParameters = function(dimName, attrName)
{
	let parameters = oFF.XList.create();
	parameters.add(dimName);
	parameters.add(attrName);
	this.setParameters(parameters);
};

oFF.OdpPresentationActionIsTextViewSupported = function() {};
oFF.OdpPresentationActionIsTextViewSupported.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpPresentationActionIsTextViewSupported.prototype._ff_c = "OdpPresentationActionIsTextViewSupported";

oFF.OdpPresentationActionIsTextViewSupported.NAME = "isFieldContainerTextViewSupported";
oFF.OdpPresentationActionIsTextViewSupported.create = function()
{
	let obj = new oFF.OdpPresentationActionIsTextViewSupported();
	obj.setupAction();
	return obj;
};
oFF.OdpPresentationActionIsTextViewSupported.prototype.doAction = function(dataProvider)
{
	let hierarchyActive = dataProvider.getCc().isFieldContainerTextViewSupported(this.getParameter(0), this.getParameter(1));
	let result = this.newActionResult();
	result.setReturnValue(oFF.XBooleanValue.create(hierarchyActive));
	return oFF.XPromise.resolve(result);
};
oFF.OdpPresentationActionIsTextViewSupported.prototype.getName = function()
{
	return oFF.OdpPresentationActionIsTextViewSupported.NAME;
};
oFF.OdpPresentationActionIsTextViewSupported.prototype.setTypedParameters = function(dimName, attrName)
{
	let parameters = oFF.XList.create();
	parameters.add(dimName);
	parameters.add(attrName);
	this.setParameters(parameters);
};

oFF.OdpPropertyActionGetValue = function() {};
oFF.OdpPropertyActionGetValue.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpPropertyActionGetValue.prototype._ff_c = "OdpPropertyActionGetValue";

oFF.OdpPropertyActionGetValue.NAME = "getProperty";
oFF.OdpPropertyActionGetValue.create = function()
{
	let obj = new oFF.OdpPropertyActionGetValue();
	obj.setupAction();
	return obj;
};
oFF.OdpPropertyActionGetValue.prototype.doAction = function(dataProvider)
{
	let propertyName = this.getParameter(0);
	let value = dataProvider.getProperties().getPropertyValue(propertyName);
	let result = this.newActionResult();
	result.setReturnValue(value);
	return oFF.XPromise.resolve(result);
};
oFF.OdpPropertyActionGetValue.prototype.getName = function()
{
	return oFF.OdpPropertyActionGetValue.NAME;
};
oFF.OdpPropertyActionGetValue.prototype.isQueryManagerNeeded = function()
{
	return false;
};
oFF.OdpPropertyActionGetValue.prototype.setTypedParameters = function(property)
{
	let parameters = oFF.XList.create();
	parameters.add(property.getName());
	this.setParameters(parameters);
};

oFF.OdpPropertyActionListAll = function() {};
oFF.OdpPropertyActionListAll.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpPropertyActionListAll.prototype._ff_c = "OdpPropertyActionListAll";

oFF.OdpPropertyActionListAll.NAME = "listAllProperties";
oFF.OdpPropertyActionListAll.create = function()
{
	let obj = new oFF.OdpPropertyActionListAll();
	obj.setupAction();
	return obj;
};
oFF.OdpPropertyActionListAll.prototype.doAction = function(dataProvider)
{
	let withValues = oFF.XBoolean.convertFromString(this.getParameter(0));
	let properties = dataProvider.getProperties().getAllProperties();
	let keys = properties.getKeysAsReadOnlyList().createListCopy();
	keys.sortByDirection(oFF.XSortDirection.ASCENDING);
	if (!withValues)
	{
		let earlyResult = this.newActionResult();
		earlyResult.setReturnValue(keys);
		return oFF.XPromise.resolve(earlyResult);
	}
	let output = oFF.XCollectionUtils.map(keys, (key) => {
		let value = properties.getByKey(key);
		return oFF.XStringUtils.concatenate3(key, ":", value.getStringRepresentation());
	});
	let result = this.newActionResult();
	result.setReturnValue(output);
	return oFF.XPromise.resolve(result);
};
oFF.OdpPropertyActionListAll.prototype.getName = function()
{
	return oFF.OdpPropertyActionListAll.NAME;
};
oFF.OdpPropertyActionListAll.prototype.isQueryManagerNeeded = function()
{
	return false;
};
oFF.OdpPropertyActionListAll.prototype.setTypedParameters = function(withValues)
{
	let parameters = oFF.XList.create();
	parameters.add(oFF.XBoolean.convertToString(withValues));
	this.setParameters(parameters);
};

oFF.OdpQueryModelGetAccountMembers = function() {};
oFF.OdpQueryModelGetAccountMembers.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpQueryModelGetAccountMembers.prototype._ff_c = "OdpQueryModelGetAccountMembers";

oFF.OdpQueryModelGetAccountMembers.NAME = "getAccountMembers";
oFF.OdpQueryModelGetAccountMembers.create = function()
{
	let obj = new oFF.OdpQueryModelGetAccountMembers();
	obj.setupAction();
	return obj;
};
oFF.OdpQueryModelGetAccountMembers.prototype.doAction = function(dataProvider)
{
	return oFF.XPromise.create((resolve, reject) => {
		try
		{
			let queryModel = oFF.XObject.castToAny(dataProvider.getQueryManager().getQueryModel());
			let accountDimension = queryModel.getAccountDimension();
			if (oFF.isNull(accountDimension))
			{
				resolve(this.newActionResult());
			}
			else
			{
				let memberList = oFF.OlapDataProviderMemberUtil.getMemberNames(accountDimension);
				let result = this.newActionResult();
				result.setReturnValue(memberList);
				resolve(result);
			}
		}
		catch (e)
		{
			reject(oFF.XError.createWithThrowable(e));
		}
	});
};
oFF.OdpQueryModelGetAccountMembers.prototype.getName = function()
{
	return oFF.OdpQueryModelGetAccountMembers.NAME;
};
oFF.OdpQueryModelGetAccountMembers.prototype.setTypedParameters = function() {};

oFF.OdpQueryModelGetDimensions = function() {};
oFF.OdpQueryModelGetDimensions.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpQueryModelGetDimensions.prototype._ff_c = "OdpQueryModelGetDimensions";

oFF.OdpQueryModelGetDimensions.NAME = "getDimensions";
oFF.OdpQueryModelGetDimensions.create = function()
{
	let obj = new oFF.OdpQueryModelGetDimensions();
	obj.setupAction();
	return obj;
};
oFF.OdpQueryModelGetDimensions.prototype.doAction = function(dataProvider)
{
	return oFF.XPromise.create((resolve, reject) => {
		try
		{
			let queryModel = oFF.XObject.castToAny(dataProvider.getQueryManager().getQueryModel());
			let dimensions = queryModel.getDimensions().createListCopy();
			let memberList = oFF.XList.create();
			for (let i = 0; i < dimensions.size(); i++)
			{
				memberList.add(dimensions.get(i).getName());
			}
			let result = this.newActionResult();
			result.setReturnValue(memberList);
			resolve(result);
		}
		catch (e)
		{
			reject(oFF.XError.createWithThrowable(e));
		}
	});
};
oFF.OdpQueryModelGetDimensions.prototype.getName = function()
{
	return oFF.OdpQueryModelGetDimensions.NAME;
};
oFF.OdpQueryModelGetDimensions.prototype.setTypedParameters = function() {};

oFF.OdpQueryModelGetMeasureMembers = function() {};
oFF.OdpQueryModelGetMeasureMembers.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpQueryModelGetMeasureMembers.prototype._ff_c = "OdpQueryModelGetMeasureMembers";

oFF.OdpQueryModelGetMeasureMembers.NAME = "getMeasureMembers";
oFF.OdpQueryModelGetMeasureMembers.create = function()
{
	let obj = new oFF.OdpQueryModelGetMeasureMembers();
	obj.setupAction();
	return obj;
};
oFF.OdpQueryModelGetMeasureMembers.prototype.doAction = function(dataProvider)
{
	return oFF.XPromise.create((resolve, reject) => {
		try
		{
			let queryModel = oFF.XObject.castToAny(dataProvider.getQueryManager().getQueryModel());
			let memberList = oFF.OlapDataProviderMemberUtil.getMemberNames(queryModel.getMeasureDimension());
			let result = this.newActionResult();
			result.setReturnValue(memberList);
			resolve(result);
		}
		catch (e)
		{
			reject(oFF.XError.createWithThrowable(e));
		}
	});
};
oFF.OdpQueryModelGetMeasureMembers.prototype.getName = function()
{
	return oFF.OdpQueryModelGetMeasureMembers.NAME;
};
oFF.OdpQueryModelGetMeasureMembers.prototype.setTypedParameters = function() {};

oFF.OdpQueryModelGetSecondaryStructureMembers = function() {};
oFF.OdpQueryModelGetSecondaryStructureMembers.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpQueryModelGetSecondaryStructureMembers.prototype._ff_c = "OdpQueryModelGetSecondaryStructureMembers";

oFF.OdpQueryModelGetSecondaryStructureMembers.NAME = "getSecondaryStructureMembers";
oFF.OdpQueryModelGetSecondaryStructureMembers.create = function()
{
	let obj = new oFF.OdpQueryModelGetSecondaryStructureMembers();
	obj.setupAction();
	return obj;
};
oFF.OdpQueryModelGetSecondaryStructureMembers.prototype.doAction = function(dataProvider)
{
	return oFF.XPromise.create((resolve, reject) => {
		try
		{
			let queryModel = oFF.XObject.castToAny(dataProvider.getQueryManager().getQueryModel());
			let secondStructureDimension = queryModel.getSecondaryCalculationDimension();
			if (oFF.isNull(secondStructureDimension))
			{
				resolve(this.newActionResult());
			}
			else
			{
				let memberList = oFF.OlapDataProviderMemberUtil.getMemberNames(secondStructureDimension);
				let result = this.newActionResult();
				result.setReturnValue(memberList);
				resolve(result);
			}
		}
		catch (e)
		{
			reject(oFF.XError.createWithThrowable(e));
		}
	});
};
oFF.OdpQueryModelGetSecondaryStructureMembers.prototype.getName = function()
{
	return oFF.OdpQueryModelGetSecondaryStructureMembers.NAME;
};
oFF.OdpQueryModelGetSecondaryStructureMembers.prototype.setTypedParameters = function() {};

oFF.OdpActionGetCurrentResultSetReadMode = function() {};
oFF.OdpActionGetCurrentResultSetReadMode.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpActionGetCurrentResultSetReadMode.prototype._ff_c = "OdpActionGetCurrentResultSetReadMode";

oFF.OdpActionGetCurrentResultSetReadMode.NAME = "getCurrentResultSetReadMode";
oFF.OdpActionGetCurrentResultSetReadMode.create = function()
{
	let obj = new oFF.OdpActionGetCurrentResultSetReadMode();
	obj.setupAction();
	return obj;
};
oFF.OdpActionGetCurrentResultSetReadMode.prototype.doAction = function(dataProvider)
{
	let dimension = dataProvider.getCc().getDimension(this.getParameter(0));
	let result = this.newActionResult();
	result.setReturnValue(dimension.getReadMode(oFF.QContextType.RESULT_SET));
	return oFF.XPromise.resolve(result);
};
oFF.OdpActionGetCurrentResultSetReadMode.prototype.getName = function()
{
	return oFF.OdpActionGetCurrentResultSetReadMode.NAME;
};
oFF.OdpActionGetCurrentResultSetReadMode.prototype.setTypedParameters = function(dimName)
{
	let parameters = oFF.XList.create();
	parameters.add(dimName);
	this.setParameters(parameters);
};

oFF.OdpActionGetSupportedResultSetReadModes = function() {};
oFF.OdpActionGetSupportedResultSetReadModes.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpActionGetSupportedResultSetReadModes.prototype._ff_c = "OdpActionGetSupportedResultSetReadModes";

oFF.OdpActionGetSupportedResultSetReadModes.NAME = "getSupportedResultSetReadModes";
oFF.OdpActionGetSupportedResultSetReadModes.create = function()
{
	let obj = new oFF.OdpActionGetSupportedResultSetReadModes();
	obj.setupAction();
	return obj;
};
oFF.OdpActionGetSupportedResultSetReadModes.prototype.doAction = function(dataProvider)
{
	let dimension = dataProvider.getCc().getDimension(this.getParameter(0));
	let result = this.newActionResult();
	result.setReturnValue(dimension.getSupportedReadModes(oFF.QContextType.RESULT_SET));
	return oFF.XPromise.resolve(result);
};
oFF.OdpActionGetSupportedResultSetReadModes.prototype.getName = function()
{
	return oFF.OdpActionGetSupportedResultSetReadModes.NAME;
};
oFF.OdpActionGetSupportedResultSetReadModes.prototype.setTypedParameters = function(dimName)
{
	let parameters = oFF.XList.create();
	parameters.add(dimName);
	this.setParameters(parameters);
};

oFF.OdpActionSetResultSetReadMode = function() {};
oFF.OdpActionSetResultSetReadMode.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpActionSetResultSetReadMode.prototype._ff_c = "OdpActionSetResultSetReadMode";

oFF.OdpActionSetResultSetReadMode.NAME = "setResultSetReadMode";
oFF.OdpActionSetResultSetReadMode.create = function()
{
	let obj = new oFF.OdpActionSetResultSetReadMode();
	obj.setupAction();
	return obj;
};
oFF.OdpActionSetResultSetReadMode.prototype.doAction = function(dataProvider)
{
	let converter = oFF.OdpActionParameterConverter.create();
	dataProvider.getCc().setDimensionMemberReadModeGracefulExt(this.getParameter(0), oFF.QContextType.RESULT_SET, converter.toMemberReadMode(this.getParameter(1)), converter.toBoolean(this.getParameter(2), false));
	let result = this.newActionResult();
	result.getChangesBase().addChangedEventType(oFF.OlapDataProviderEventType.MODEL_CHANGE);
	return oFF.XPromise.resolve(result);
};
oFF.OdpActionSetResultSetReadMode.prototype.getName = function()
{
	return oFF.OdpActionSetResultSetReadMode.NAME;
};
oFF.OdpActionSetResultSetReadMode.prototype.setTypedParameters = function(dimName, readMode, synchronizeReadModeAndSuppression)
{
	let converter = oFF.OdpActionParameterConverter.create();
	let parameters = oFF.XList.create();
	parameters.add(dimName);
	parameters.add(converter.fromMemberReadMode(readMode));
	parameters.add(converter.fromBoolean(synchronizeReadModeAndSuppression));
	this.setParameters(parameters);
};

oFF.OdpResultSetActionFetchNewResultSet = function() {};
oFF.OdpResultSetActionFetchNewResultSet.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpResultSetActionFetchNewResultSet.prototype._ff_c = "OdpResultSetActionFetchNewResultSet";

oFF.OdpResultSetActionFetchNewResultSet.NAME = "fetchNewResultSet";
oFF.OdpResultSetActionFetchNewResultSet.create = function()
{
	let obj = new oFF.OdpResultSetActionFetchNewResultSet();
	obj.setupAction();
	return obj;
};
oFF.OdpResultSetActionFetchNewResultSet.prototype.doAction = function(dataProvider)
{
	return dataProvider.getResulting().fetchNewResultSet(null).onThenExt((messages) => {
		let actionResult = this.newActionResult();
		actionResult.setReturnValue(messages);
		return actionResult;
	});
};
oFF.OdpResultSetActionFetchNewResultSet.prototype.getName = function()
{
	return oFF.OdpResultSetActionFetchNewResultSet.NAME;
};
oFF.OdpResultSetActionFetchNewResultSet.prototype.setTypedParameters = function() {};

oFF.OdpResultSetActionFetchNewTile = function() {};
oFF.OdpResultSetActionFetchNewTile.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpResultSetActionFetchNewTile.prototype._ff_c = "OdpResultSetActionFetchNewTile";

oFF.OdpResultSetActionFetchNewTile.NAME = "fetchNewTile";
oFF.OdpResultSetActionFetchNewTile.create = function()
{
	let obj = new oFF.OdpResultSetActionFetchNewTile();
	obj.setupAction();
	return obj;
};
oFF.OdpResultSetActionFetchNewTile.prototype.doAction = function(dataProvider)
{
	let rowFrom = oFF.XInteger.convertFromString(this.getParameter(0));
	let rowTo = oFF.XInteger.convertFromString(this.getParameter(1));
	let columnFrom = oFF.XInteger.convertFromString(this.getParameter(2));
	let columnTo = oFF.XInteger.convertFromString(this.getParameter(3));
	let tableDefinitionName = this.getParameter(4);
	let resulting = dataProvider.getResulting();
	return resulting.fetchNewTile(rowFrom, rowTo, columnFrom, columnTo, tableDefinitionName, null).onThenExt((messages) => {
		let actionResult = this.newActionResult();
		actionResult.setReturnValue(messages);
		return actionResult;
	});
};
oFF.OdpResultSetActionFetchNewTile.prototype.getName = function()
{
	return oFF.OdpResultSetActionFetchNewTile.NAME;
};
oFF.OdpResultSetActionFetchNewTile.prototype.setTypedParameters = function(rowFrom, rowTo, columnFrom, columnTo, tableDefinitionName)
{
	let converter = oFF.OdpActionParameterConverter.create();
	let parameters = oFF.XList.create();
	parameters.add(converter.fromInteger(rowFrom));
	parameters.add(converter.fromInteger(rowTo));
	parameters.add(converter.fromInteger(columnFrom));
	parameters.add(converter.fromInteger(columnTo));
	parameters.add(tableDefinitionName);
	this.setParameters(parameters);
};

oFF.OdpResultSetActionGetGridTile = function() {};
oFF.OdpResultSetActionGetGridTile.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpResultSetActionGetGridTile.prototype._ff_c = "OdpResultSetActionGetGridTile";

oFF.OdpResultSetActionGetGridTile.NAME = "getGridTile";
oFF.OdpResultSetActionGetGridTile.create = function()
{
	let obj = new oFF.OdpResultSetActionGetGridTile();
	obj.setupAction();
	return obj;
};
oFF.OdpResultSetActionGetGridTile.prototype.doAction = function(dataProvider)
{
	return oFF.XPromise.create((resolve, reject) => {
		if (oFF.notNull(dataProvider))
		{
			let queryManager = dataProvider.getQueryManager();
			let gridCollector = queryManager.getQueryModel().getVisualizationManager().getGridCollector();
			gridCollector.processExecution(oFF.SyncType.NON_BLOCKING, oFF.AbstractResultsetCollectorListenerLambda.createSingleUse((result) => {
				if (result.hasErrors())
				{
					reject(oFF.MessageUtil.condenseMessagesToSingleError(result));
					return;
				}
				let actionResult = this.newActionResult();
				actionResult.setReturnValue(result.getData());
				resolve(actionResult);
			}), null, null);
		}
		else
		{
			reject(oFF.XError.create("No data provider configured to retrieve grid tile"));
		}
	});
};
oFF.OdpResultSetActionGetGridTile.prototype.getName = function()
{
	return oFF.OdpResultSetActionGetGridTile.NAME;
};

oFF.OdpSerializationActionExportInsightInformation = function() {};
oFF.OdpSerializationActionExportInsightInformation.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpSerializationActionExportInsightInformation.prototype._ff_c = "OdpSerializationActionExportInsightInformation";

oFF.OdpSerializationActionExportInsightInformation.NAME = "exportInsightInformation";
oFF.OdpSerializationActionExportInsightInformation.create = function()
{
	let obj = new oFF.OdpSerializationActionExportInsightInformation();
	obj.setupAction();
	return obj;
};
oFF.OdpSerializationActionExportInsightInformation.prototype.doAction = function(dataProvider)
{
	return dataProvider.getActions().getSerializationActions().exportRepository(true).onThenExt((repo) => {
		let structure = oFF.PrFactory.createStructure();
		if (oFF.notNull(repo))
		{
			structure.put(oFF.OdpSerializationConstants.INSIGHT_INA_REPO, repo);
		}
		let inaDataSource = dataProvider.getInaDataSource();
		if (oFF.notNull(inaDataSource))
		{
			structure.putString(oFF.OdpSerializationConstants.INSIGHT_DATA_SOURCE, inaDataSource.getFullQualifiedName());
			structure.putString(oFF.OdpSerializationConstants.INSIGHT_SYSTEM, inaDataSource.getSystemName());
			structure.putStringNotNullAndNotEmpty(oFF.OdpSerializationConstants.INSIGHT_MODEL, inaDataSource.getModelName());
		}
		let actionResult = this.newActionResult();
		actionResult.setReturnValue(structure);
		return actionResult;
	});
};
oFF.OdpSerializationActionExportInsightInformation.prototype.getName = function()
{
	return oFF.OdpSerializationActionExportInsightInformation.NAME;
};
oFF.OdpSerializationActionExportInsightInformation.prototype.isQueryManagerNeeded = function()
{
	return false;
};

oFF.OdpSerializationActionExportRepository = function() {};
oFF.OdpSerializationActionExportRepository.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpSerializationActionExportRepository.prototype._ff_c = "OdpSerializationActionExportRepository";

oFF.OdpSerializationActionExportRepository.NAME = "exportRepository";
oFF.OdpSerializationActionExportRepository.create = function()
{
	let obj = new oFF.OdpSerializationActionExportRepository();
	obj.setupAction();
	return obj;
};
oFF.OdpSerializationActionExportRepository.prototype.doAction = function(dataProvider)
{
	let queryManager = dataProvider.getQueryManager();
	let inaRepo;
	if (oFF.isNull(queryManager))
	{
		inaRepo = dataProvider.getConnection().getRepoJson();
	}
	else
	{
		let useDelta = oFF.XBoolean.convertFromString(this.getParameter(0));
		let modelFormat = useDelta ? oFF.QModelFormat.INA_REPOSITORY_DELTA : oFF.QModelFormat.INA_REPOSITORY;
		inaRepo = queryManager.getQueryModel().serializeToElement(modelFormat).asStructure();
	}
	let actionResult = this.newActionResult();
	actionResult.setReturnValue(inaRepo);
	return oFF.XPromise.resolve(actionResult);
};
oFF.OdpSerializationActionExportRepository.prototype.getName = function()
{
	return oFF.OdpSerializationActionExportRepository.NAME;
};
oFF.OdpSerializationActionExportRepository.prototype.isQueryManagerNeeded = function()
{
	return false;
};
oFF.OdpSerializationActionExportRepository.prototype.setTypedParameters = function(useDelta)
{
	let parameters = oFF.XList.create();
	parameters.add(oFF.XBoolean.convertToString(useDelta));
	this.setParameters(parameters);
};

oFF.OdpSerializationActionImportRepository = function() {};
oFF.OdpSerializationActionImportRepository.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpSerializationActionImportRepository.prototype._ff_c = "OdpSerializationActionImportRepository";

oFF.OdpSerializationActionImportRepository.NAME = "importRepository";
oFF.OdpSerializationActionImportRepository.create = function()
{
	let obj = new oFF.OdpSerializationActionImportRepository();
	obj.setupAction();
	return obj;
};
oFF.OdpSerializationActionImportRepository.prototype.doAction = function(dataProvider)
{
	let queryModel = dataProvider.getQueryManager().getQueryModel();
	return oFF.XPromise.create((resolve, reject) => {
		let inaRepo = this.getParameter(0);
		let useDelta = oFF.XBoolean.convertFromString(this.getParameter(1));
		let modelFormat = useDelta ? oFF.QModelFormat.INA_REPOSITORY_DELTA : oFF.QModelFormat.INA_REPOSITORY;
		let result = queryModel.deserializeExt(modelFormat, inaRepo);
		if (result.hasErrors())
		{
			reject(oFF.MessageUtil.condenseMessagesToSingleError(result));
			return;
		}
		let actionResult = this.newActionResult();
		actionResult.getChangesBase().addChangedEventType(oFF.OlapDataProviderEventType.MODEL_CHANGE);
		resolve(actionResult);
	});
};
oFF.OdpSerializationActionImportRepository.prototype.getName = function()
{
	return oFF.OdpSerializationActionImportRepository.NAME;
};
oFF.OdpSerializationActionImportRepository.prototype.setTypedParameters = function(repository, useDelta)
{
	let parameters = oFF.XList.create();
	parameters.add(oFF.PrUtils.serialize(repository, false, false, 0));
	parameters.add(oFF.XBoolean.convertToString(useDelta));
	this.setParameters(parameters);
};

oFF.OdpSerializationActionLoad = function() {};
oFF.OdpSerializationActionLoad.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpSerializationActionLoad.prototype._ff_c = "OdpSerializationActionLoad";

oFF.OdpSerializationActionLoad.NAME = "load";
oFF.OdpSerializationActionLoad.create = function()
{
	let obj = new oFF.OdpSerializationActionLoad();
	obj.setupAction();
	return obj;
};
oFF.OdpSerializationActionLoad.prototype.doAction = function(dataProvider)
{
	let element = oFF.PrUtils.deserialize(this.getParameter(0));
	if (oFF.isNull(element) || !element.isStructure())
	{
		return oFF.XPromise.reject(oFF.XError.create("no valid structure to load was provided"));
	}
	let structure = element.asStructure();
	let properties = structure.getStructureByKey(oFF.OdpSerializationConstants.PROPERTIES);
	if (oFF.notNull(properties))
	{
		oFF.XCollectionUtils.mapEntries(properties, (key, value) => {
			dataProvider.getProperties().setPropertyValue(key, value.copyAsPrimitiveXValue());
		});
	}
	let config = structure.getStructureByKey(oFF.OdpSerializationConstants.CONFIG);
	if (oFF.notNull(config))
	{
		let configCopy = dataProvider.getConfig().createConfigCopy();
		configCopy.deserializeJson(config);
		dataProvider.setConfig(configCopy);
	}
	let connection = structure.getStructureByKey(oFF.OdpSerializationConstants.CONNECTION);
	let connectionCopy = dataProvider.getConnection().createConnectionCopy();
	connectionCopy.deserializeJson(connection);
	let repository = structure.getStructureByKey(oFF.OdpSerializationConstants.REPOSITORY);
	if (oFF.notNull(repository))
	{
		connectionCopy.setRepoJson(repository);
	}
	dataProvider.setConnection(connectionCopy);
	if (dataProvider.getQueryManager() === null)
	{
		return oFF.XPromise.resolve(this.newActionResult());
	}
	let lifecycleActions = dataProvider.getActions().getLifecycleActions();
	return lifecycleActions.reconnectDataProvider(true).onThenExt((empty) => {
		return this.newActionResult();
	});
};
oFF.OdpSerializationActionLoad.prototype.getName = function()
{
	return oFF.OdpSerializationActionLoad.NAME;
};
oFF.OdpSerializationActionLoad.prototype.isQueryManagerNeeded = function()
{
	return false;
};
oFF.OdpSerializationActionLoad.prototype.setTypedParameters = function(structure)
{
	let parameters = oFF.XList.create();
	parameters.add(oFF.PrUtils.serialize(structure, false, false, 0));
	this.setParameters(parameters);
};

oFF.OdpSerializationActionSave = function() {};
oFF.OdpSerializationActionSave.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpSerializationActionSave.prototype._ff_c = "OdpSerializationActionSave";

oFF.OdpSerializationActionSave.NAME = "save";
oFF.OdpSerializationActionSave.create = function()
{
	let obj = new oFF.OdpSerializationActionSave();
	obj.setupAction();
	return obj;
};
oFF.OdpSerializationActionSave.prototype.doAction = function(dataProvider)
{
	return dataProvider.getActions().getSerializationActions().exportRepository(true).onThenExt((repo) => {
		let structure = oFF.PrFactory.createStructure();
		structure.putIfNotNull(oFF.OdpSerializationConstants.REPOSITORY, repo);
		let configCopy = dataProvider.getConfig().createConfigCopy();
		configCopy.setStartConnection(null);
		structure.putIfNotNull(oFF.OdpSerializationConstants.CONFIG, configCopy.serializeJson());
		let connectionCopy = dataProvider.getConnection().createConnectionCopy();
		connectionCopy.setSfxJson(null);
		connectionCopy.setRepoJson(null);
		connectionCopy.setVisualizations(null);
		structure.putIfNotNull(oFF.OdpSerializationConstants.CONNECTION, connectionCopy.serializeJson());
		let properties = structure.putNewStructure(oFF.OdpSerializationConstants.PROPERTIES);
		let allProperties = dataProvider.getProperties().getAllProperties();
		oFF.XCollectionUtils.mapEntries(allProperties, (key, value) => {
			properties.putIfNotNull(key, oFF.PrFactory.createFromValue(value));
		});
		let actionResult = this.newActionResult();
		actionResult.setReturnValue(structure);
		return actionResult;
	});
};
oFF.OdpSerializationActionSave.prototype.getName = function()
{
	return oFF.OdpSerializationActionSave.NAME;
};
oFF.OdpSerializationActionSave.prototype.isQueryManagerNeeded = function()
{
	return false;
};

oFF.OdpActionClearDimensionSort = function() {};
oFF.OdpActionClearDimensionSort.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpActionClearDimensionSort.prototype._ff_c = "OdpActionClearDimensionSort";

oFF.OdpActionClearDimensionSort.NAME = "clearDimensionSort";
oFF.OdpActionClearDimensionSort.create = function()
{
	let obj = new oFF.OdpActionClearDimensionSort();
	obj.setupAction();
	return obj;
};
oFF.OdpActionClearDimensionSort.prototype.doAction = function(dataProvider)
{
	let dimensionName = this.getParameter(0);
	let cc = dataProvider.getCc();
	cc.clearDimensionSort(dimensionName);
	let result = this.newActionResult();
	result.getChangesBase().addChangedEventType(oFF.OlapDataProviderEventType.MODEL_CHANGE);
	return oFF.XPromise.resolve(result);
};
oFF.OdpActionClearDimensionSort.prototype.getName = function()
{
	return oFF.OdpActionClearDimensionSort.NAME;
};
oFF.OdpActionClearDimensionSort.prototype.setTypedParameters = function(dimensionName)
{
	let parameters = oFF.XList.create();
	parameters.add(dimensionName);
	this.setParameters(parameters);
};

oFF.OdpActionClearMeasureSort = function() {};
oFF.OdpActionClearMeasureSort.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpActionClearMeasureSort.prototype._ff_c = "OdpActionClearMeasureSort";

oFF.OdpActionClearMeasureSort.NAME = "clearMeasureSort";
oFF.OdpActionClearMeasureSort.create = function()
{
	let obj = new oFF.OdpActionClearMeasureSort();
	obj.setupAction();
	return obj;
};
oFF.OdpActionClearMeasureSort.prototype.doAction = function(dataProvider)
{
	let measureName = this.getParameter(0);
	let cc = dataProvider.getCc();
	cc.clearSort(oFF.SortType.MEASURE, measureName);
	let result = this.newActionResult();
	result.getChangesBase().addChangedEventType(oFF.OlapDataProviderEventType.MODEL_CHANGE);
	return oFF.XPromise.resolve(result);
};
oFF.OdpActionClearMeasureSort.prototype.getName = function()
{
	return oFF.OdpActionClearMeasureSort.NAME;
};
oFF.OdpActionClearMeasureSort.prototype.setTypedParameters = function(measureName)
{
	let parameters = oFF.XList.create();
	parameters.add(measureName);
	this.setParameters(parameters);
};

oFF.OdpActionSortByField = function() {};
oFF.OdpActionSortByField.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpActionSortByField.prototype._ff_c = "OdpActionSortByField";

oFF.OdpActionSortByField.NAME = "sortByField";
oFF.OdpActionSortByField.create = function()
{
	let obj = new oFF.OdpActionSortByField();
	obj.setupAction();
	return obj;
};
oFF.OdpActionSortByField.prototype.doAction = function(dataProvider)
{
	let converter = oFF.OdpActionParameterConverter.create();
	let fieldName = this.getParameter(0);
	let sortDirection = converter.toSortDirection(this.getParameter(1));
	let cc = dataProvider.getCc();
	cc.sortByField(fieldName, sortDirection);
	let result = this.newActionResult();
	result.getChangesBase().addChangedEventType(oFF.OlapDataProviderEventType.MODEL_CHANGE);
	return oFF.XPromise.resolve(result);
};
oFF.OdpActionSortByField.prototype.getName = function()
{
	return oFF.OdpActionSortByField.NAME;
};
oFF.OdpActionSortByField.prototype.setTypedParameters = function(fieldName, sortDirection)
{
	let converter = oFF.OdpActionParameterConverter.create();
	let parameters = oFF.XList.create();
	parameters.add(fieldName);
	parameters.add(converter.fromSortDirection(sortDirection));
	this.setParameters(parameters);
};

oFF.OdpActionSortByMeasure = function() {};
oFF.OdpActionSortByMeasure.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpActionSortByMeasure.prototype._ff_c = "OdpActionSortByMeasure";

oFF.OdpActionSortByMeasure.NAME = "sortByMeasure";
oFF.OdpActionSortByMeasure.create = function()
{
	let obj = new oFF.OdpActionSortByMeasure();
	obj.setupAction();
	return obj;
};
oFF.OdpActionSortByMeasure.prototype.doAction = function(dataProvider)
{
	let converter = oFF.OdpActionParameterConverter.create();
	let measureName = this.getParameter(0);
	let sortDirection = converter.toSortDirection(this.getParameter(1));
	let cc = dataProvider.getCc();
	cc.sortByMeasure(measureName, sortDirection);
	let result = this.newActionResult();
	result.getChangesBase().addChangedEventType(oFF.OlapDataProviderEventType.MODEL_CHANGE);
	return oFF.XPromise.resolve(result);
};
oFF.OdpActionSortByMeasure.prototype.getName = function()
{
	return oFF.OdpActionSortByMeasure.NAME;
};
oFF.OdpActionSortByMeasure.prototype.setTypedParameters = function(measureName, sortDirection)
{
	let converter = oFF.OdpActionParameterConverter.create();
	let parameters = oFF.XList.create();
	parameters.add(measureName);
	parameters.add(converter.fromSortDirection(sortDirection));
	this.setParameters(parameters);
};

oFF.OdpActionSortByMemberKey = function() {};
oFF.OdpActionSortByMemberKey.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpActionSortByMemberKey.prototype._ff_c = "OdpActionSortByMemberKey";

oFF.OdpActionSortByMemberKey.NAME = "sortByMemberKey";
oFF.OdpActionSortByMemberKey.create = function()
{
	let obj = new oFF.OdpActionSortByMemberKey();
	obj.setupAction();
	return obj;
};
oFF.OdpActionSortByMemberKey.prototype.doAction = function(dataProvider)
{
	let converter = oFF.OdpActionParameterConverter.create();
	let dimensionName = this.getParameter(0);
	let sortDirection = converter.toSortDirection(this.getParameter(1));
	let cc = dataProvider.getCc();
	cc.sortByKey(dimensionName, sortDirection);
	let result = this.newActionResult();
	result.getChangesBase().addChangedEventType(oFF.OlapDataProviderEventType.MODEL_CHANGE);
	return oFF.XPromise.resolve(result);
};
oFF.OdpActionSortByMemberKey.prototype.getName = function()
{
	return oFF.OdpActionSortByMemberKey.NAME;
};
oFF.OdpActionSortByMemberKey.prototype.setTypedParameters = function(dimensionName, sortDirection)
{
	let converter = oFF.OdpActionParameterConverter.create();
	let parameters = oFF.XList.create();
	parameters.add(dimensionName);
	parameters.add(converter.fromSortDirection(sortDirection));
	this.setParameters(parameters);
};

oFF.OdpActionSortByMemberText = function() {};
oFF.OdpActionSortByMemberText.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpActionSortByMemberText.prototype._ff_c = "OdpActionSortByMemberText";

oFF.OdpActionSortByMemberText.NAME = "sortByMemberText";
oFF.OdpActionSortByMemberText.create = function()
{
	let obj = new oFF.OdpActionSortByMemberText();
	obj.setupAction();
	return obj;
};
oFF.OdpActionSortByMemberText.prototype.doAction = function(dataProvider)
{
	let converter = oFF.OdpActionParameterConverter.create();
	let dimensionName = this.getParameter(0);
	let sortDirection = converter.toSortDirection(this.getParameter(1));
	let cc = dataProvider.getCc();
	cc.sortByText(dimensionName, sortDirection);
	let result = this.newActionResult();
	result.getChangesBase().addChangedEventType(oFF.OlapDataProviderEventType.MODEL_CHANGE);
	return oFF.XPromise.resolve(result);
};
oFF.OdpActionSortByMemberText.prototype.getName = function()
{
	return oFF.OdpActionSortByMemberText.NAME;
};
oFF.OdpActionSortByMemberText.prototype.setTypedParameters = function(dimensionName, sortDirection)
{
	let converter = oFF.OdpActionParameterConverter.create();
	let parameters = oFF.XList.create();
	parameters.add(dimensionName);
	parameters.add(converter.fromSortDirection(sortDirection));
	this.setParameters(parameters);
};

oFF.OdpGetCurrentSuppressionType = function() {};
oFF.OdpGetCurrentSuppressionType.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpGetCurrentSuppressionType.prototype._ff_c = "OdpGetCurrentSuppressionType";

oFF.OdpGetCurrentSuppressionType.NAME = "getCurrentSuppressionType";
oFF.OdpGetCurrentSuppressionType.create = function()
{
	let obj = new oFF.OdpGetCurrentSuppressionType();
	obj.setupAction();
	return obj;
};
oFF.OdpGetCurrentSuppressionType.prototype.doAction = function(dataProvider)
{
	let converter = oFF.OdpActionParameterConverter.create();
	let axisType = converter.toAxisType(oFF.XCollectionUtils.getOptionalAtIndex(this.getParameters(), 0).orElse(null));
	let axis = oFF.isNull(axisType) ? null : dataProvider.getCc().getQueryModel().getAxis(axisType);
	let result = this.newActionResult();
	result.setReturnValue(oFF.notNull(axis) ? axis.getZeroSuppressionType() : null);
	return oFF.XPromise.resolve(result);
};
oFF.OdpGetCurrentSuppressionType.prototype.getName = function()
{
	return oFF.OdpGetCurrentSuppressionType.NAME;
};
oFF.OdpGetCurrentSuppressionType.prototype.setTypedParameters = function(axisType)
{
	let converter = oFF.OdpActionParameterConverter.create();
	let parameters = oFF.XList.create();
	parameters.add(converter.fromAxisType(axisType));
	this.setParameters(parameters);
};

oFF.OdpGetSupportedSuppressionTypes = function() {};
oFF.OdpGetSupportedSuppressionTypes.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpGetSupportedSuppressionTypes.prototype._ff_c = "OdpGetSupportedSuppressionTypes";

oFF.OdpGetSupportedSuppressionTypes.NAME = "getSupportedSuppressionTypes";
oFF.OdpGetSupportedSuppressionTypes.create = function()
{
	let obj = new oFF.OdpGetSupportedSuppressionTypes();
	obj.setupAction();
	return obj;
};
oFF.OdpGetSupportedSuppressionTypes.prototype.doAction = function(dataProvider)
{
	let converter = oFF.OdpActionParameterConverter.create();
	let axisType = converter.toAxisType(oFF.XCollectionUtils.getOptionalAtIndex(this.getParameters(), 0).orElse(null));
	let axis = oFF.isNull(axisType) ? null : dataProvider.getCc().getQueryModel().getAxis(axisType);
	let result = this.newActionResult();
	result.setReturnValue(oFF.isNull(axis) ? null : axis.getAvailableZeroSuppressionTypes());
	return oFF.XPromise.resolve(result);
};
oFF.OdpGetSupportedSuppressionTypes.prototype.getName = function()
{
	return oFF.OdpGetSupportedSuppressionTypes.NAME;
};
oFF.OdpGetSupportedSuppressionTypes.prototype.setTypedParameters = function(axisType)
{
	let converter = oFF.OdpActionParameterConverter.create();
	let parameters = oFF.XList.create();
	parameters.add(converter.fromAxisType(axisType));
	this.setParameters(parameters);
};

oFF.OdpSetResultSetSuppressionType = function() {};
oFF.OdpSetResultSetSuppressionType.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpSetResultSetSuppressionType.prototype._ff_c = "OdpSetResultSetSuppressionType";

oFF.OdpSetResultSetSuppressionType.NAME = "setSuppressionType";
oFF.OdpSetResultSetSuppressionType.create = function()
{
	let obj = new oFF.OdpSetResultSetSuppressionType();
	obj.setupAction();
	return obj;
};
oFF.OdpSetResultSetSuppressionType.prototype.doAction = function(dataProvider)
{
	let converter = oFF.OdpActionParameterConverter.create();
	dataProvider.getCc().setAxisZeroSuppressionTypeExt(converter.toAxisType(this.getParameter(0)), converter.toZeroSuppressionType(this.getParameter(1)), converter.toBoolean(this.getParameter(2), false));
	let result = this.newActionResult();
	result.getChangesBase().addChangedEventType(oFF.OlapDataProviderEventType.MODEL_CHANGE);
	return oFF.XPromise.resolve(result);
};
oFF.OdpSetResultSetSuppressionType.prototype.getName = function()
{
	return oFF.OdpSetResultSetSuppressionType.NAME;
};
oFF.OdpSetResultSetSuppressionType.prototype.setTypedParameters = function(axisType, suppressionType, synchronizeReadModeAndSuppression)
{
	let converter = oFF.OdpActionParameterConverter.create();
	let parameters = oFF.XList.create();
	parameters.add(converter.fromAxisType(axisType));
	parameters.add(converter.fromZeroSuppressionType(suppressionType));
	parameters.add(converter.fromBoolean(synchronizeReadModeAndSuppression));
	this.setParameters(parameters);
};

oFF.OdpTotalsGetPosition = function() {};
oFF.OdpTotalsGetPosition.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpTotalsGetPosition.prototype._ff_c = "OdpTotalsGetPosition";

oFF.OdpTotalsGetPosition.NAME = "getTotalsPosition";
oFF.OdpTotalsGetPosition.create = function()
{
	let obj = new oFF.OdpTotalsGetPosition();
	obj.setupAction();
	return obj;
};
oFF.OdpTotalsGetPosition.prototype.doAction = function(dataProvider)
{
	let converter = oFF.OdpActionParameterConverter.create();
	let modelLevel = converter.toModelLevel(this.getParameter(0));
	let value = dataProvider.getCc().getUniqueResultAlignment(modelLevel, this.getParameter(1));
	let result = this.newActionResult();
	result.setReturnValue(value);
	return oFF.XPromise.resolve(result);
};
oFF.OdpTotalsGetPosition.prototype.getName = function()
{
	return oFF.OdpTotalsGetPosition.NAME;
};
oFF.OdpTotalsGetPosition.prototype.setTypedParameters = function(modelLevel, elementName)
{
	let converter = oFF.OdpActionParameterConverter.create();
	let parameters = oFF.XList.create();
	parameters.add(converter.fromModelLevel(modelLevel));
	parameters.add(elementName);
	this.setParameters(parameters);
};

oFF.OdpTotalsGetVisibility = function() {};
oFF.OdpTotalsGetVisibility.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpTotalsGetVisibility.prototype._ff_c = "OdpTotalsGetVisibility";

oFF.OdpTotalsGetVisibility.NAME = "getTotalsVisibility";
oFF.OdpTotalsGetVisibility.create = function()
{
	let obj = new oFF.OdpTotalsGetVisibility();
	obj.setupAction();
	return obj;
};
oFF.OdpTotalsGetVisibility.prototype.doAction = function(dataProvider)
{
	let converter = oFF.OdpActionParameterConverter.create();
	let resultStructureElement = converter.toResultStructureElement(this.getParameter(0));
	let modelLevel = converter.toModelLevel(this.getParameter(1));
	let value = dataProvider.getCc().getUniqueResultVisibilityByElementAndAlignment(null, resultStructureElement, modelLevel, this.getParameter(2));
	let result = this.newActionResult();
	result.setReturnValue(value);
	return oFF.XPromise.resolve(result);
};
oFF.OdpTotalsGetVisibility.prototype.getName = function()
{
	return oFF.OdpTotalsGetVisibility.NAME;
};
oFF.OdpTotalsGetVisibility.prototype.setTypedParameters = function(resultStructureElement, modelLevel, elementName)
{
	let converter = oFF.OdpActionParameterConverter.create();
	let parameters = oFF.XList.create();
	parameters.add(converter.fromResultStructureElement(resultStructureElement));
	parameters.add(converter.fromModelLevel(modelLevel));
	parameters.add(elementName);
	this.setParameters(parameters);
};

oFF.OdpTotalsSetPosition = function() {};
oFF.OdpTotalsSetPosition.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpTotalsSetPosition.prototype._ff_c = "OdpTotalsSetPosition";

oFF.OdpTotalsSetPosition.NAME = "setTotalsPosition";
oFF.OdpTotalsSetPosition.create = function()
{
	let obj = new oFF.OdpTotalsSetPosition();
	obj.setupAction();
	return obj;
};
oFF.OdpTotalsSetPosition.prototype.doAction = function(dataProvider)
{
	let converter = oFF.OdpActionParameterConverter.create();
	let modelLevel = converter.toModelLevel(this.getParameter(0));
	let resultAlignment = converter.toResultAlignment(this.getParameter(2));
	dataProvider.getCc().alignTotalsWithPriority(modelLevel, this.getParameter(1), resultAlignment, 0);
	let result = this.newActionResult();
	result.getChangesBase().addChangedEventType(oFF.OlapDataProviderEventType.MODEL_CHANGE);
	return oFF.XPromise.resolve(result);
};
oFF.OdpTotalsSetPosition.prototype.getName = function()
{
	return oFF.OdpTotalsSetPosition.NAME;
};
oFF.OdpTotalsSetPosition.prototype.setTypedParameters = function(modelLevel, elementName, position)
{
	let converter = oFF.OdpActionParameterConverter.create();
	let parameters = oFF.XList.create();
	parameters.add(converter.fromModelLevel(modelLevel));
	parameters.add(elementName);
	parameters.add(converter.fromResultAlignment(position));
	this.setParameters(parameters);
};

oFF.OdpTotalsSetVisibility = function() {};
oFF.OdpTotalsSetVisibility.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpTotalsSetVisibility.prototype._ff_c = "OdpTotalsSetVisibility";

oFF.OdpTotalsSetVisibility.NAME = "setTotalsVisibility";
oFF.OdpTotalsSetVisibility.create = function()
{
	let obj = new oFF.OdpTotalsSetVisibility();
	obj.setupAction();
	return obj;
};
oFF.OdpTotalsSetVisibility.prototype.doAction = function(dataProvider)
{
	let converter = oFF.OdpActionParameterConverter.create();
	let resultStructureElement = converter.toResultStructureElement(this.getParameter(0));
	let modelLevel = converter.toModelLevel(this.getParameter(1));
	let resultVisibility = converter.toResultVisibility(this.getParameter(3));
	dataProvider.getCc().setTotalsVisibleByElement(modelLevel, this.getParameter(2), resultStructureElement, resultVisibility);
	let result = this.newActionResult();
	result.getChangesBase().addChangedEventType(oFF.OlapDataProviderEventType.MODEL_CHANGE);
	return oFF.XPromise.resolve(result);
};
oFF.OdpTotalsSetVisibility.prototype.getName = function()
{
	return oFF.OdpTotalsSetVisibility.NAME;
};
oFF.OdpTotalsSetVisibility.prototype.setTypedParameters = function(resultStructureElement, modelLevel, elementName, resultVisibility)
{
	let converter = oFF.OdpActionParameterConverter.create();
	let parameters = oFF.XList.create();
	parameters.add(converter.fromResultStructureElement(resultStructureElement));
	parameters.add(converter.fromModelLevel(modelLevel));
	parameters.add(elementName);
	parameters.add(converter.fromResultVisibility(resultVisibility));
	this.setParameters(parameters);
};

oFF.OdpVizActionAddDatapointVariableValue = function() {};
oFF.OdpVizActionAddDatapointVariableValue.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpVizActionAddDatapointVariableValue.prototype._ff_c = "OdpVizActionAddDatapointVariableValue";

oFF.OdpVizActionAddDatapointVariableValue.NAME = "addDatapointVariableValue";
oFF.OdpVizActionAddDatapointVariableValue.create = function()
{
	let obj = new oFF.OdpVizActionAddDatapointVariableValue();
	obj.setupAction();
	return obj;
};
oFF.OdpVizActionAddDatapointVariableValue.prototype.doAction = function(dataProvider)
{
	dataProvider.getCc().addDataPointVariableValue(this.getParameter(0), this.getParameter(1), this.getParameter(2), this.getParameter(3));
	let result = this.newActionResult();
	result.getChangesBase().addChangedEventType(oFF.OlapDataProviderEventType.VISUALIZATION_CHANGE);
	return oFF.XPromise.resolve(result);
};
oFF.OdpVizActionAddDatapointVariableValue.prototype.getName = function()
{
	return oFF.OdpVizActionAddDatapointVariableValue.NAME;
};
oFF.OdpVizActionAddDatapointVariableValue.prototype.setTypedParameters = function(visualizationName, dataPointVariableContainerName, variableName, variableValue)
{
	let parameters = oFF.XList.create();
	parameters.add(visualizationName);
	parameters.add(dataPointVariableContainerName);
	parameters.add(variableName);
	parameters.add(variableValue);
	this.setParameters(parameters);
};

oFF.OdpVizActionAddMemberToTypedValueSelection = function() {};
oFF.OdpVizActionAddMemberToTypedValueSelection.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpVizActionAddMemberToTypedValueSelection.prototype._ff_c = "OdpVizActionAddMemberToTypedValueSelection";

oFF.OdpVizActionAddMemberToTypedValueSelection.NAME = "addMemberToTypedValueSelection";
oFF.OdpVizActionAddMemberToTypedValueSelection.create = function()
{
	let obj = new oFF.OdpVizActionAddMemberToTypedValueSelection();
	obj.setupAction();
	return obj;
};
oFF.OdpVizActionAddMemberToTypedValueSelection.prototype.doAction = function(dataProvider)
{
	let converter = oFF.OdpActionParameterConverter.create();
	dataProvider.getCc().addMemberToTypedValueSelection(this.getParameter(0), converter.toVisualizationValueType(this.getParameter(1)), this.getParameter(2));
	let result = this.newActionResult();
	result.getChangesBase().addChangedEventType(oFF.OlapDataProviderEventType.VISUALIZATION_CHANGE);
	result.getChangesBase().addChangedEventType(oFF.OlapDataProviderEventType.MODEL_CHANGE);
	return oFF.XPromise.resolve(result);
};
oFF.OdpVizActionAddMemberToTypedValueSelection.prototype.getName = function()
{
	return oFF.OdpVizActionAddMemberToTypedValueSelection.NAME;
};
oFF.OdpVizActionAddMemberToTypedValueSelection.prototype.setTypedParameters = function(visualizationName, visualizationValueType, memberName)
{
	let converter = oFF.OdpActionParameterConverter.create();
	let parameters = oFF.XList.create();
	parameters.add(visualizationName);
	parameters.add(converter.fromVisualizationValueType(visualizationValueType));
	parameters.add(memberName);
	this.setParameters(parameters);
};

oFF.OdpVizActionAddVisualizationVariableValue = function() {};
oFF.OdpVizActionAddVisualizationVariableValue.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpVizActionAddVisualizationVariableValue.prototype._ff_c = "OdpVizActionAddVisualizationVariableValue";

oFF.OdpVizActionAddVisualizationVariableValue.NAME = "addVisualizationVariableValue";
oFF.OdpVizActionAddVisualizationVariableValue.create = function()
{
	let obj = new oFF.OdpVizActionAddVisualizationVariableValue();
	obj.setupAction();
	return obj;
};
oFF.OdpVizActionAddVisualizationVariableValue.prototype.doAction = function(dataProvider)
{
	dataProvider.getCc().addVisualizationVariableValue(this.getParameter(0), this.getParameter(1), this.getParameter(2));
	let result = this.newActionResult();
	result.getChangesBase().addChangedEventType(oFF.OlapDataProviderEventType.VISUALIZATION_CHANGE);
	return oFF.XPromise.resolve(result);
};
oFF.OdpVizActionAddVisualizationVariableValue.prototype.getName = function()
{
	return oFF.OdpVizActionAddVisualizationVariableValue.NAME;
};
oFF.OdpVizActionAddVisualizationVariableValue.prototype.setTypedParameters = function(visualizationName, variableName, variableValue)
{
	let parameters = oFF.XList.create();
	parameters.add(visualizationName);
	parameters.add(variableName);
	parameters.add(variableValue);
	this.setParameters(parameters);
};

oFF.OdpVizActionClearAllTypedValueSelections = function() {};
oFF.OdpVizActionClearAllTypedValueSelections.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpVizActionClearAllTypedValueSelections.prototype._ff_c = "OdpVizActionClearAllTypedValueSelections";

oFF.OdpVizActionClearAllTypedValueSelections.NAME = "clearAllTypedValueSelections";
oFF.OdpVizActionClearAllTypedValueSelections.create = function()
{
	let obj = new oFF.OdpVizActionClearAllTypedValueSelections();
	obj.setupAction();
	return obj;
};
oFF.OdpVizActionClearAllTypedValueSelections.prototype.doAction = function(dataProvider)
{
	dataProvider.getCc().clearAllTypedValueSelections(this.getParameter(0));
	let result = this.newActionResult();
	result.getChangesBase().addChangedEventType(oFF.OlapDataProviderEventType.VISUALIZATION_CHANGE);
	return oFF.XPromise.resolve(result);
};
oFF.OdpVizActionClearAllTypedValueSelections.prototype.getName = function()
{
	return oFF.OdpVizActionClearAllTypedValueSelections.NAME;
};
oFF.OdpVizActionClearAllTypedValueSelections.prototype.setTypedParameters = function(visualizationName)
{
	let parameters = oFF.XList.create();
	parameters.add(visualizationName);
	this.setParameters(parameters);
};

oFF.OdpVizActionClearDatapointVariableValue = function() {};
oFF.OdpVizActionClearDatapointVariableValue.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpVizActionClearDatapointVariableValue.prototype._ff_c = "OdpVizActionClearDatapointVariableValue";

oFF.OdpVizActionClearDatapointVariableValue.NAME = "clearDatapointVariableValue";
oFF.OdpVizActionClearDatapointVariableValue.create = function()
{
	let obj = new oFF.OdpVizActionClearDatapointVariableValue();
	obj.setupAction();
	return obj;
};
oFF.OdpVizActionClearDatapointVariableValue.prototype.doAction = function(dataProvider)
{
	dataProvider.getCc().clearDataPointVariable(this.getParameter(0), this.getParameter(1), this.getParameter(2));
	let result = this.newActionResult();
	result.getChangesBase().addChangedEventType(oFF.OlapDataProviderEventType.VISUALIZATION_CHANGE);
	return oFF.XPromise.resolve(result);
};
oFF.OdpVizActionClearDatapointVariableValue.prototype.getName = function()
{
	return oFF.OdpVizActionClearDatapointVariableValue.NAME;
};
oFF.OdpVizActionClearDatapointVariableValue.prototype.setTypedParameters = function(visualizationName, dataPointVariableContainerName, variableName)
{
	let parameters = oFF.XList.create();
	parameters.add(visualizationName);
	parameters.add(dataPointVariableContainerName);
	parameters.add(variableName);
	this.setParameters(parameters);
};

oFF.OdpVizActionClearMemberRestrictions = function() {};
oFF.OdpVizActionClearMemberRestrictions.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpVizActionClearMemberRestrictions.prototype._ff_c = "OdpVizActionClearMemberRestrictions";

oFF.OdpVizActionClearMemberRestrictions.NAME = "clearMemberRestrictions";
oFF.OdpVizActionClearMemberRestrictions.create = function()
{
	let obj = new oFF.OdpVizActionClearMemberRestrictions();
	obj.setupAction();
	return obj;
};
oFF.OdpVizActionClearMemberRestrictions.prototype.doAction = function(dataProvider)
{
	dataProvider.getCc().clearMemberRestrictions(this.getParameter(0));
	let result = this.newActionResult();
	result.getChangesBase().addChangedEventType(oFF.OlapDataProviderEventType.VISUALIZATION_CHANGE);
	return oFF.XPromise.resolve(result);
};
oFF.OdpVizActionClearMemberRestrictions.prototype.getName = function()
{
	return oFF.OdpVizActionClearMemberRestrictions.NAME;
};
oFF.OdpVizActionClearMemberRestrictions.prototype.setTypedParameters = function(visualizationName)
{
	let parameters = oFF.XList.create();
	parameters.add(visualizationName);
	this.setParameters(parameters);
};

oFF.OdpVizActionClearMemberRestrictionsForDimension = function() {};
oFF.OdpVizActionClearMemberRestrictionsForDimension.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpVizActionClearMemberRestrictionsForDimension.prototype._ff_c = "OdpVizActionClearMemberRestrictionsForDimension";

oFF.OdpVizActionClearMemberRestrictionsForDimension.NAME = "clearMemberRestrictionsForDimension";
oFF.OdpVizActionClearMemberRestrictionsForDimension.create = function()
{
	let obj = new oFF.OdpVizActionClearMemberRestrictionsForDimension();
	obj.setupAction();
	return obj;
};
oFF.OdpVizActionClearMemberRestrictionsForDimension.prototype.doAction = function(dataProvider)
{
	dataProvider.getCc().clearMemberRestrictionsForDimension(this.getParameter(0), this.getParameter(1));
	let result = this.newActionResult();
	result.getChangesBase().addChangedEventType(oFF.OlapDataProviderEventType.VISUALIZATION_CHANGE);
	return oFF.XPromise.resolve(result);
};
oFF.OdpVizActionClearMemberRestrictionsForDimension.prototype.getName = function()
{
	return oFF.OdpVizActionClearMemberRestrictionsForDimension.NAME;
};
oFF.OdpVizActionClearMemberRestrictionsForDimension.prototype.setTypedParameters = function(visualizationName, dimensionName)
{
	let parameters = oFF.XList.create();
	parameters.add(visualizationName);
	parameters.add(dimensionName);
	this.setParameters(parameters);
};

oFF.OdpVizActionClearSelectionPath = function() {};
oFF.OdpVizActionClearSelectionPath.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpVizActionClearSelectionPath.prototype._ff_c = "OdpVizActionClearSelectionPath";

oFF.OdpVizActionClearSelectionPath.NAME = "clearSelectionPath";
oFF.OdpVizActionClearSelectionPath.create = function()
{
	let obj = new oFF.OdpVizActionClearSelectionPath();
	obj.setupAction();
	return obj;
};
oFF.OdpVizActionClearSelectionPath.prototype.doAction = function(dataProvider)
{
	dataProvider.getCc().clearSelectionPath(this.getParameter(0));
	let result = this.newActionResult();
	result.getChangesBase().addChangedEventType(oFF.OlapDataProviderEventType.VISUALIZATION_CHANGE);
	return oFF.XPromise.resolve(result);
};
oFF.OdpVizActionClearSelectionPath.prototype.getName = function()
{
	return oFF.OdpVizActionClearSelectionPath.NAME;
};
oFF.OdpVizActionClearSelectionPath.prototype.setTypedParameters = function(visualizationName)
{
	let parameters = oFF.XList.create();
	parameters.add(visualizationName);
	this.setParameters(parameters);
};

oFF.OdpVizActionClearSelectionPathElementForDimension = function() {};
oFF.OdpVizActionClearSelectionPathElementForDimension.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpVizActionClearSelectionPathElementForDimension.prototype._ff_c = "OdpVizActionClearSelectionPathElementForDimension";

oFF.OdpVizActionClearSelectionPathElementForDimension.NAME = "clearSelectionPathElementForDimension";
oFF.OdpVizActionClearSelectionPathElementForDimension.create = function()
{
	let obj = new oFF.OdpVizActionClearSelectionPathElementForDimension();
	obj.setupAction();
	return obj;
};
oFF.OdpVizActionClearSelectionPathElementForDimension.prototype.doAction = function(dataProvider)
{
	dataProvider.getCc().clearSelectionPathElementForDimension(this.getParameter(0), this.getParameter(1));
	let result = this.newActionResult();
	result.getChangesBase().addChangedEventType(oFF.OlapDataProviderEventType.VISUALIZATION_CHANGE);
	return oFF.XPromise.resolve(result);
};
oFF.OdpVizActionClearSelectionPathElementForDimension.prototype.getName = function()
{
	return oFF.OdpVizActionClearSelectionPathElementForDimension.NAME;
};
oFF.OdpVizActionClearSelectionPathElementForDimension.prototype.setTypedParameters = function(visualizationName, dimensionName)
{
	let parameters = oFF.XList.create();
	parameters.add(visualizationName);
	parameters.add(dimensionName);
	this.setParameters(parameters);
};

oFF.OdpVizActionClearTypedValueSelectionsForType = function() {};
oFF.OdpVizActionClearTypedValueSelectionsForType.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpVizActionClearTypedValueSelectionsForType.prototype._ff_c = "OdpVizActionClearTypedValueSelectionsForType";

oFF.OdpVizActionClearTypedValueSelectionsForType.NAME = "clearTypedValueSelectionsForType";
oFF.OdpVizActionClearTypedValueSelectionsForType.create = function()
{
	let obj = new oFF.OdpVizActionClearTypedValueSelectionsForType();
	obj.setupAction();
	return obj;
};
oFF.OdpVizActionClearTypedValueSelectionsForType.prototype.doAction = function(dataProvider)
{
	dataProvider.getCc().clearTypedValueSelectionsForType(this.getParameter(0), oFF.VisualizationValueType.lookup(this.getParameter(1)));
	let result = this.newActionResult();
	result.getChangesBase().addChangedEventType(oFF.OlapDataProviderEventType.VISUALIZATION_CHANGE);
	return oFF.XPromise.resolve(result);
};
oFF.OdpVizActionClearTypedValueSelectionsForType.prototype.getName = function()
{
	return oFF.OdpVizActionClearTypedValueSelectionsForType.NAME;
};
oFF.OdpVizActionClearTypedValueSelectionsForType.prototype.setTypedParameters = function(visualizationName, visualizationValueType)
{
	let parameters = oFF.XList.create();
	parameters.add(visualizationName);
	parameters.add(oFF.DfNameObject.getSafeName(visualizationValueType));
	this.setParameters(parameters);
};

oFF.OdpVizActionClearVisualizationVariableValue = function() {};
oFF.OdpVizActionClearVisualizationVariableValue.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpVizActionClearVisualizationVariableValue.prototype._ff_c = "OdpVizActionClearVisualizationVariableValue";

oFF.OdpVizActionClearVisualizationVariableValue.NAME = "clearVisualizationVariableValue";
oFF.OdpVizActionClearVisualizationVariableValue.create = function()
{
	let obj = new oFF.OdpVizActionClearVisualizationVariableValue();
	obj.setupAction();
	return obj;
};
oFF.OdpVizActionClearVisualizationVariableValue.prototype.doAction = function(dataProvider)
{
	dataProvider.getCc().clearVisualizationVariable(this.getParameter(0), this.getParameter(1));
	let result = this.newActionResult();
	result.getChangesBase().addChangedEventType(oFF.OlapDataProviderEventType.VISUALIZATION_CHANGE);
	return oFF.XPromise.resolve(result);
};
oFF.OdpVizActionClearVisualizationVariableValue.prototype.getName = function()
{
	return oFF.OdpVizActionClearVisualizationVariableValue.NAME;
};
oFF.OdpVizActionClearVisualizationVariableValue.prototype.setTypedParameters = function(visualizationName, variableName)
{
	let parameters = oFF.XList.create();
	parameters.add(visualizationName);
	parameters.add(variableName);
	this.setParameters(parameters);
};

oFF.OdpVizActionCreateVizDefinition = function() {};
oFF.OdpVizActionCreateVizDefinition.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpVizActionCreateVizDefinition.prototype._ff_c = "OdpVizActionCreateVizDefinition";

oFF.OdpVizActionCreateVizDefinition.NAME = "createVisualizationDefinition";
oFF.OdpVizActionCreateVizDefinition.create = function()
{
	let obj = new oFF.OdpVizActionCreateVizDefinition();
	obj.setupAction();
	return obj;
};
oFF.OdpVizActionCreateVizDefinition.prototype.doAction = function(dataProvider)
{
	let vizDef = oFF.OdpVizActionVizDefinition.createDefinitionFromParameterList(dataProvider, this.getParameters());
	let queryManager = dataProvider.getQueryManager();
	let result = this.newActionResult();
	if (oFF.isNull(queryManager))
	{
		let connection = dataProvider.getConnection();
		let newViz = vizDef.convertToStructure();
		connection.getVisualizations().add(newViz);
		return oFF.XPromise.resolve(result);
	}
	let vizManager = queryManager.getQueryModel().getVisualizationManager();
	let definition = vizDef.convertToFireflyDefinition(vizManager);
	result.setReturnValue(definition);
	result.getChangesBase().addChangedEventType(oFF.OlapDataProviderEventType.VISUALIZATION_CHANGE);
	result.getChangesBase().addChangedVisualizationName(vizDef.getVizName());
	return oFF.XPromise.resolve(result);
};
oFF.OdpVizActionCreateVizDefinition.prototype.getName = function()
{
	return oFF.OdpVizActionCreateVizDefinition.NAME;
};
oFF.OdpVizActionCreateVizDefinition.prototype.isQueryManagerNeeded = function()
{
	return false;
};
oFF.OdpVizActionCreateVizDefinition.prototype.setTypedParameters = function(vizName, vizType, protocolType, chartType)
{
	let definition = oFF.OdpVizActionVizDefinition.createDefinition(vizName, vizType, protocolType, chartType);
	this.setParameters(definition.convertToParameterList());
};

oFF.OdpVizActionGetActiveVizDefinition = function() {};
oFF.OdpVizActionGetActiveVizDefinition.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpVizActionGetActiveVizDefinition.prototype._ff_c = "OdpVizActionGetActiveVizDefinition";

oFF.OdpVizActionGetActiveVizDefinition.NAME = "getActiveVisualizationDefinition";
oFF.OdpVizActionGetActiveVizDefinition.create = function()
{
	let obj = new oFF.OdpVizActionGetActiveVizDefinition();
	obj.setupAction();
	return obj;
};
oFF.OdpVizActionGetActiveVizDefinition.prototype.doAction = function(dataProvider)
{
	let queryManager = dataProvider.getQueryManager();
	let vizManager = queryManager.getQueryModel().getVisualizationManager();
	return oFF.XPromise.create((resolve, reject) => {
		let definition = vizManager.getCurrentActiveVisualizationDefinition();
		if (oFF.isNull(definition))
		{
			reject(oFF.XError.create("No active visualization definition found"));
		}
		else
		{
			let result = this.newActionResult();
			result.setReturnValue(definition);
			resolve(result);
		}
	});
};
oFF.OdpVizActionGetActiveVizDefinition.prototype.getName = function()
{
	return oFF.OdpVizActionGetActiveVizDefinition.NAME;
};

oFF.OdpVizActionGetAllVisualizationNames = function() {};
oFF.OdpVizActionGetAllVisualizationNames.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpVizActionGetAllVisualizationNames.prototype._ff_c = "OdpVizActionGetAllVisualizationNames";

oFF.OdpVizActionGetAllVisualizationNames.NAME = "getAllVisualizationNames";
oFF.OdpVizActionGetAllVisualizationNames.create = function()
{
	let obj = new oFF.OdpVizActionGetAllVisualizationNames();
	obj.setupAction();
	return obj;
};
oFF.OdpVizActionGetAllVisualizationNames.prototype.doAction = function(dataProvider)
{
	let values = oFF.XList.create();
	let vizManager = dataProvider.getQueryManager().getQueryModel().getVisualizationManager();
	let vizDefinitions = vizManager.getVisualizationDefinitions();
	for (let index = 0; index < vizDefinitions.size(); index++)
	{
		values.add(vizDefinitions.get(index).getName());
	}
	let result = this.newActionResult();
	result.setReturnValue(values);
	return oFF.XPromise.resolve(result);
};
oFF.OdpVizActionGetAllVisualizationNames.prototype.getName = function()
{
	return oFF.OdpVizActionGetAllVisualizationNames.NAME;
};

oFF.OdpVizActionGetAllVisualizations = function() {};
oFF.OdpVizActionGetAllVisualizations.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpVizActionGetAllVisualizations.prototype._ff_c = "OdpVizActionGetAllVisualizations";

oFF.OdpVizActionGetAllVisualizations.NAME = "getAllVisualizations";
oFF.OdpVizActionGetAllVisualizations.create = function()
{
	let obj = new oFF.OdpVizActionGetAllVisualizations();
	obj.setupAction();
	return obj;
};
oFF.OdpVizActionGetAllVisualizations.prototype.doAction = function(dataProvider)
{
	let vizManager = dataProvider.getQueryManager().getQueryModel().getVisualizationManager();
	let vizDefinitions = vizManager.getVisualizationDefinitions();
	let result = this.newActionResult();
	result.setReturnValue(vizDefinitions);
	return oFF.XPromise.resolve(result);
};
oFF.OdpVizActionGetAllVisualizations.prototype.getName = function()
{
	return oFF.OdpVizActionGetAllVisualizations.NAME;
};

oFF.OdpVizActionGetChartColorPalette = function() {};
oFF.OdpVizActionGetChartColorPalette.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpVizActionGetChartColorPalette.prototype._ff_c = "OdpVizActionGetChartColorPalette";

oFF.OdpVizActionGetChartColorPalette.NAME = "getChartColorPalette";
oFF.OdpVizActionGetChartColorPalette.create = function()
{
	let obj = new oFF.OdpVizActionGetChartColorPalette();
	obj.setupAction();
	return obj;
};
oFF.OdpVizActionGetChartColorPalette.prototype.doAction = function(dataProvider)
{
	let palette = dataProvider.getCc().getChartColorPalette(this.getParameter(0));
	let result = this.newActionResult();
	result.setReturnValue(palette);
	return oFF.XPromise.resolve(result);
};
oFF.OdpVizActionGetChartColorPalette.prototype.getName = function()
{
	return oFF.OdpVizActionGetChartColorPalette.NAME;
};
oFF.OdpVizActionGetChartColorPalette.prototype.setTypedParameters = function(visualizationName)
{
	let parameters = oFF.XList.create();
	parameters.add(visualizationName);
	this.setParameters(parameters);
};

oFF.OdpVizActionGetChartOrientation = function() {};
oFF.OdpVizActionGetChartOrientation.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpVizActionGetChartOrientation.prototype._ff_c = "OdpVizActionGetChartOrientation";

oFF.OdpVizActionGetChartOrientation.NAME = "getChartOrientation";
oFF.OdpVizActionGetChartOrientation.create = function()
{
	let obj = new oFF.OdpVizActionGetChartOrientation();
	obj.setupAction();
	return obj;
};
oFF.OdpVizActionGetChartOrientation.prototype.doAction = function(dataProvider)
{
	let orientation = dataProvider.getCc().getChartOrientation(this.getParameter(0));
	let result = this.newActionResult();
	result.setReturnValue(orientation);
	return oFF.XPromise.resolve(result);
};
oFF.OdpVizActionGetChartOrientation.prototype.getName = function()
{
	return oFF.OdpVizActionGetChartOrientation.NAME;
};
oFF.OdpVizActionGetChartOrientation.prototype.setTypedParameters = function(visualizationName)
{
	let parameters = oFF.XList.create();
	parameters.add(visualizationName);
	this.setParameters(parameters);
};

oFF.OdpVizActionGetDimensionsInChartFeed = function() {};
oFF.OdpVizActionGetDimensionsInChartFeed.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpVizActionGetDimensionsInChartFeed.prototype._ff_c = "OdpVizActionGetDimensionsInChartFeed";

oFF.OdpVizActionGetDimensionsInChartFeed.NAME = "getDimensionsInChartFeed";
oFF.OdpVizActionGetDimensionsInChartFeed.create = function()
{
	let obj = new oFF.OdpVizActionGetDimensionsInChartFeed();
	obj.setupAction();
	return obj;
};
oFF.OdpVizActionGetDimensionsInChartFeed.prototype.doAction = function(dataProvider)
{
	let converter = oFF.OdpActionParameterConverter.create();
	let vizName = this.getParameter(0);
	let vizValueType = converter.toVisualizationValueType(this.getParameter(1));
	let dimensions = dataProvider.getCc().getDimensionsInChartFeed(vizName, vizValueType);
	let result = this.newActionResult();
	result.setReturnValue(dimensions);
	return oFF.XPromise.resolve(result);
};
oFF.OdpVizActionGetDimensionsInChartFeed.prototype.getName = function()
{
	return oFF.OdpVizActionGetDimensionsInChartFeed.NAME;
};
oFF.OdpVizActionGetDimensionsInChartFeed.prototype.setTypedParameters = function(visualizationName, valueType)
{
	let converter = oFF.OdpActionParameterConverter.create();
	let parameters = oFF.XList.create();
	parameters.add(visualizationName);
	parameters.add(converter.fromVisualizationValueType(valueType));
	this.setParameters(parameters);
};

oFF.OdpVizActionGetMembersForDimensionInTypedValueSelection = function() {};
oFF.OdpVizActionGetMembersForDimensionInTypedValueSelection.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpVizActionGetMembersForDimensionInTypedValueSelection.prototype._ff_c = "OdpVizActionGetMembersForDimensionInTypedValueSelection";

oFF.OdpVizActionGetMembersForDimensionInTypedValueSelection.NAME = "getMembersForDimensionInTypedValueSelection";
oFF.OdpVizActionGetMembersForDimensionInTypedValueSelection.create = function()
{
	let obj = new oFF.OdpVizActionGetMembersForDimensionInTypedValueSelection();
	obj.setupAction();
	return obj;
};
oFF.OdpVizActionGetMembersForDimensionInTypedValueSelection.prototype.doAction = function(dataProvider)
{
	let converter = oFF.OdpActionParameterConverter.create();
	let vizName = this.getParameter(0);
	let vizValueType = converter.toVisualizationValueType(this.getParameter(1));
	let dimName = this.getParameter(2);
	let members = dataProvider.getCc().getMembersForDimensionInTypedValueSelection(vizName, vizValueType, dimName);
	let result = this.newActionResult();
	result.setReturnValue(members);
	return oFF.XPromise.resolve(result);
};
oFF.OdpVizActionGetMembersForDimensionInTypedValueSelection.prototype.getName = function()
{
	return oFF.OdpVizActionGetMembersForDimensionInTypedValueSelection.NAME;
};
oFF.OdpVizActionGetMembersForDimensionInTypedValueSelection.prototype.setTypedParameters = function(visualizationName, valueType, dimName)
{
	let converter = oFF.OdpActionParameterConverter.create();
	let parameters = oFF.XList.create();
	parameters.add(visualizationName);
	parameters.add(converter.fromVisualizationValueType(valueType));
	parameters.add(dimName);
	this.setParameters(parameters);
};

oFF.OdpVizActionGetMembersInTypedValueSelection = function() {};
oFF.OdpVizActionGetMembersInTypedValueSelection.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpVizActionGetMembersInTypedValueSelection.prototype._ff_c = "OdpVizActionGetMembersInTypedValueSelection";

oFF.OdpVizActionGetMembersInTypedValueSelection.NAME = "getMembersInTypedValueSelection";
oFF.OdpVizActionGetMembersInTypedValueSelection.create = function()
{
	let obj = new oFF.OdpVizActionGetMembersInTypedValueSelection();
	obj.setupAction();
	return obj;
};
oFF.OdpVizActionGetMembersInTypedValueSelection.prototype.doAction = function(dataProvider)
{
	let converter = oFF.OdpActionParameterConverter.create();
	let vizName = this.getParameter(0);
	let vizValueType = converter.toVisualizationValueType(this.getParameter(1));
	let members = dataProvider.getCc().getMembersInTypedValueSelection(vizName, vizValueType);
	let result = this.newActionResult();
	result.setReturnValue(members);
	return oFF.XPromise.resolve(result);
};
oFF.OdpVizActionGetMembersInTypedValueSelection.prototype.getName = function()
{
	return oFF.OdpVizActionGetMembersInTypedValueSelection.NAME;
};
oFF.OdpVizActionGetMembersInTypedValueSelection.prototype.setTypedParameters = function(visualizationName, valueType)
{
	let converter = oFF.OdpActionParameterConverter.create();
	let parameters = oFF.XList.create();
	parameters.add(visualizationName);
	parameters.add(converter.fromVisualizationValueType(valueType));
	this.setParameters(parameters);
};

oFF.OdpVizActionGetOrCreateVizDefinition = function() {};
oFF.OdpVizActionGetOrCreateVizDefinition.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpVizActionGetOrCreateVizDefinition.prototype._ff_c = "OdpVizActionGetOrCreateVizDefinition";

oFF.OdpVizActionGetOrCreateVizDefinition.NAME = "getOrCreateVisualizationDefinition";
oFF.OdpVizActionGetOrCreateVizDefinition.create = function()
{
	let obj = new oFF.OdpVizActionGetOrCreateVizDefinition();
	obj.setupAction();
	return obj;
};
oFF.OdpVizActionGetOrCreateVizDefinition.prototype._isVizDefinitionUnique = function(definition, protocolBindingType, vizType)
{
	return oFF.notNull(definition) && definition.getProtocolBindingType() === protocolBindingType && definition.getSemanticBindingType() === vizType.getSemanticBindingType();
};
oFF.OdpVizActionGetOrCreateVizDefinition.prototype.doAction = function(dataProvider)
{
	let vizDef = oFF.OdpVizActionVizDefinition.createDefinitionFromParameterList(dataProvider, this.getParameters());
	let queryManager = dataProvider.getQueryManager();
	let vizManager = queryManager.getQueryModel().getVisualizationManager();
	let result = this.newActionResult();
	let definition = vizManager.getVisualizationDefinitionByName(vizDef.getVizName());
	if (oFF.notNull(definition))
	{
		if (!this._isVizDefinitionUnique(definition, vizDef.getProtocolType(), vizDef.getVizType()))
		{
			return oFF.XPromise.reject(oFF.XError.create("Visualization name already exists for a different type."));
		}
		result.setReturnValue(definition);
		return oFF.XPromise.resolve(result);
	}
	definition = vizDef.convertToFireflyDefinition(vizManager);
	result.setReturnValue(definition);
	result.getChangesBase().addChangedEventType(oFF.OlapDataProviderEventType.VISUALIZATION_CHANGE);
	result.getChangesBase().addChangedVisualizationName(vizDef.getVizName());
	return oFF.XPromise.resolve(result);
};
oFF.OdpVizActionGetOrCreateVizDefinition.prototype.getName = function()
{
	return oFF.OdpVizActionGetOrCreateVizDefinition.NAME;
};
oFF.OdpVizActionGetOrCreateVizDefinition.prototype.setTypedParameters = function(vizName, vizType, protocolType, chartType)
{
	let definition = oFF.OdpVizActionVizDefinition.createDefinition(vizName, vizType, protocolType, chartType);
	this.setParameters(definition.convertToParameterList());
};

oFF.OdpVizActionGetVisualizationChartType = function() {};
oFF.OdpVizActionGetVisualizationChartType.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpVizActionGetVisualizationChartType.prototype._ff_c = "OdpVizActionGetVisualizationChartType";

oFF.OdpVizActionGetVisualizationChartType.NAME = "getVisualizationChartType";
oFF.OdpVizActionGetVisualizationChartType.create = function()
{
	let obj = new oFF.OdpVizActionGetVisualizationChartType();
	obj.setupAction();
	return obj;
};
oFF.OdpVizActionGetVisualizationChartType.prototype.doAction = function(dataProvider)
{
	return oFF.XPromise.create((resolve, reject) => {
		let vizName = this.getParameter(0);
		let queryManager = dataProvider.getQueryManager();
		let vizManager = queryManager.getQueryModel().getVisualizationManager();
		let definition = vizManager.getVisualizationDefinitionByName(vizName);
		if (oFF.notNull(definition))
		{
			if (definition.getProtocolBindingType() === oFF.ProtocolBindingType.HIGH_CHART_PROTOCOL && definition.getSemanticBindingType() === oFF.SemanticBindingType.CHART)
			{
				let chartType = definition.getChartSetting().getChartType();
				let result = this.newActionResult();
				result.setReturnValue(chartType);
				resolve(result);
				return;
			}
		}
		reject(oFF.XError.create("No support for charts in visualization definition."));
	});
};
oFF.OdpVizActionGetVisualizationChartType.prototype.getName = function()
{
	return oFF.OdpVizActionGetVisualizationChartType.NAME;
};
oFF.OdpVizActionGetVisualizationChartType.prototype.setTypedParameters = function(vizName)
{
	let parameters = oFF.XList.create();
	parameters.add(vizName);
	this.setParameters(parameters);
};

oFF.OdpVizActionPutMemberRestriction = function() {};
oFF.OdpVizActionPutMemberRestriction.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpVizActionPutMemberRestriction.prototype._ff_c = "OdpVizActionPutMemberRestriction";

oFF.OdpVizActionPutMemberRestriction.NAME = "putMemberRestriction";
oFF.OdpVizActionPutMemberRestriction.create = function()
{
	let obj = new oFF.OdpVizActionPutMemberRestriction();
	obj.setupAction();
	return obj;
};
oFF.OdpVizActionPutMemberRestriction.prototype.doAction = function(dataProvider)
{
	dataProvider.getCc().putMemberRestriction(this.getParameter(0), this.getParameter(1), this.getParameter(2));
	let result = this.newActionResult();
	result.getChangesBase().addChangedEventType(oFF.OlapDataProviderEventType.VISUALIZATION_CHANGE);
	return oFF.XPromise.resolve(result);
};
oFF.OdpVizActionPutMemberRestriction.prototype.getName = function()
{
	return oFF.OdpVizActionPutMemberRestriction.NAME;
};
oFF.OdpVizActionPutMemberRestriction.prototype.setTypedParameters = function(visualizationName, dimensionName, memberName)
{
	let parameters = oFF.XList.create();
	parameters.add(visualizationName);
	parameters.add(dimensionName);
	parameters.add(memberName);
	this.setParameters(parameters);
};

oFF.OdpVizActionPutSelectionPathElement = function() {};
oFF.OdpVizActionPutSelectionPathElement.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpVizActionPutSelectionPathElement.prototype._ff_c = "OdpVizActionPutSelectionPathElement";

oFF.OdpVizActionPutSelectionPathElement.NAME = "putSelectionPathElement";
oFF.OdpVizActionPutSelectionPathElement.create = function()
{
	let obj = new oFF.OdpVizActionPutSelectionPathElement();
	obj.setupAction();
	return obj;
};
oFF.OdpVizActionPutSelectionPathElement.prototype.doAction = function(dataProvider)
{
	dataProvider.getCc().putSelectionPathElement(this.getParameter(0), this.getParameter(1), this.getParameter(2));
	let result = this.newActionResult();
	result.getChangesBase().addChangedEventType(oFF.OlapDataProviderEventType.VISUALIZATION_CHANGE);
	return oFF.XPromise.resolve(result);
};
oFF.OdpVizActionPutSelectionPathElement.prototype.getName = function()
{
	return oFF.OdpVizActionPutSelectionPathElement.NAME;
};
oFF.OdpVizActionPutSelectionPathElement.prototype.setTypedParameters = function(visualizationName, dimensionName, memberName)
{
	let parameters = oFF.XList.create();
	parameters.add(visualizationName);
	parameters.add(dimensionName);
	parameters.add(memberName);
	this.setParameters(parameters);
};

oFF.OdpVizActionRemoveMemberFromTypedValueSelection = function() {};
oFF.OdpVizActionRemoveMemberFromTypedValueSelection.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpVizActionRemoveMemberFromTypedValueSelection.prototype._ff_c = "OdpVizActionRemoveMemberFromTypedValueSelection";

oFF.OdpVizActionRemoveMemberFromTypedValueSelection.NAME = "removeMemberFromTypedValueSelection";
oFF.OdpVizActionRemoveMemberFromTypedValueSelection.create = function()
{
	let obj = new oFF.OdpVizActionRemoveMemberFromTypedValueSelection();
	obj.setupAction();
	return obj;
};
oFF.OdpVizActionRemoveMemberFromTypedValueSelection.prototype.doAction = function(dataProvider)
{
	let converter = oFF.OdpActionParameterConverter.create();
	dataProvider.getCc().removeMemberFromTypedValueSelection(this.getParameter(0), converter.toVisualizationValueType(this.getParameter(1)), this.getParameter(2));
	let result = this.newActionResult();
	result.getChangesBase().addChangedEventType(oFF.OlapDataProviderEventType.VISUALIZATION_CHANGE);
	result.getChangesBase().addChangedEventType(oFF.OlapDataProviderEventType.MODEL_CHANGE);
	return oFF.XPromise.resolve(result);
};
oFF.OdpVizActionRemoveMemberFromTypedValueSelection.prototype.getName = function()
{
	return oFF.OdpVizActionRemoveMemberFromTypedValueSelection.NAME;
};
oFF.OdpVizActionRemoveMemberFromTypedValueSelection.prototype.setTypedParameters = function(visualizationName, visualizationValueType, memberName)
{
	let converter = oFF.OdpActionParameterConverter.create();
	let parameters = oFF.XList.create();
	parameters.add(visualizationName);
	parameters.add(converter.fromVisualizationValueType(visualizationValueType));
	parameters.add(memberName);
	this.setParameters(parameters);
};

oFF.OdpVizActionRemoveMemberRestrictionForMember = function() {};
oFF.OdpVizActionRemoveMemberRestrictionForMember.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpVizActionRemoveMemberRestrictionForMember.prototype._ff_c = "OdpVizActionRemoveMemberRestrictionForMember";

oFF.OdpVizActionRemoveMemberRestrictionForMember.NAME = "removeMemberRestrictionForMember";
oFF.OdpVizActionRemoveMemberRestrictionForMember.create = function()
{
	let obj = new oFF.OdpVizActionRemoveMemberRestrictionForMember();
	obj.setupAction();
	return obj;
};
oFF.OdpVizActionRemoveMemberRestrictionForMember.prototype.doAction = function(dataProvider)
{
	dataProvider.getCc().removeMemberRestrictionsForMember(this.getParameter(0), this.getParameter(1), this.getParameter(2));
	let result = this.newActionResult();
	result.getChangesBase().addChangedEventType(oFF.OlapDataProviderEventType.VISUALIZATION_CHANGE);
	return oFF.XPromise.resolve(result);
};
oFF.OdpVizActionRemoveMemberRestrictionForMember.prototype.getName = function()
{
	return oFF.OdpVizActionRemoveMemberRestrictionForMember.NAME;
};
oFF.OdpVizActionRemoveMemberRestrictionForMember.prototype.setTypedParameters = function(visualizationName, dimensionName, memberName)
{
	let parameters = oFF.XList.create();
	parameters.add(visualizationName);
	parameters.add(dimensionName);
	parameters.add(memberName);
	this.setParameters(parameters);
};

oFF.OdpVizActionRemoveVizDefinition = function() {};
oFF.OdpVizActionRemoveVizDefinition.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpVizActionRemoveVizDefinition.prototype._ff_c = "OdpVizActionRemoveVizDefinition";

oFF.OdpVizActionRemoveVizDefinition.NAME = "removeVisualizationDefinition";
oFF.OdpVizActionRemoveVizDefinition.create = function()
{
	let obj = new oFF.OdpVizActionRemoveVizDefinition();
	obj.setupAction();
	return obj;
};
oFF.OdpVizActionRemoveVizDefinition.prototype.doAction = function(dataProvider)
{
	let vizName = this.getParameter(0);
	let queryManager = dataProvider.getQueryManager();
	let vizManager = queryManager.getQueryModel().getVisualizationManager();
	let result = this.newActionResult();
	if (vizManager.getVisualizationDefinitionByName(vizName) === null)
	{
		return oFF.XPromise.resolve(result);
	}
	vizManager.removeVisualizationDefinitionByName(vizName);
	result.getChangesBase().addChangedEventType(oFF.OlapDataProviderEventType.VISUALIZATION_CHANGE);
	result.getChangesBase().addChangedVisualizationName(vizName);
	return oFF.XPromise.resolve(result);
};
oFF.OdpVizActionRemoveVizDefinition.prototype.getName = function()
{
	return oFF.OdpVizActionRemoveVizDefinition.NAME;
};
oFF.OdpVizActionRemoveVizDefinition.prototype.setTypedParameters = function(vizName)
{
	this.setParameters(oFF.XCollectionUtils.singletonList(vizName));
};

oFF.OdpVizActionSetActiveVizDefinition = function() {};
oFF.OdpVizActionSetActiveVizDefinition.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpVizActionSetActiveVizDefinition.prototype._ff_c = "OdpVizActionSetActiveVizDefinition";

oFF.OdpVizActionSetActiveVizDefinition.NAME = "setActiveVisualizationDefinition";
oFF.OdpVizActionSetActiveVizDefinition.create = function()
{
	let obj = new oFF.OdpVizActionSetActiveVizDefinition();
	obj.setupAction();
	return obj;
};
oFF.OdpVizActionSetActiveVizDefinition.prototype.doAction = function(dataProvider)
{
	let vizName = this.getParameter(0);
	let queryManager = dataProvider.getQueryManager();
	let vizManager = queryManager.getQueryModel().getVisualizationManager();
	return oFF.XPromise.create((resolve, reject) => {
		let result = this.newActionResult();
		let currentActive = vizManager.getCurrentActiveVisualizationDefinition();
		if (oFF.XString.isEqual(currentActive.getName(), vizName))
		{
			resolve(result);
			return;
		}
		let definition = vizManager.getVisualizationDefinitionByName(vizName);
		if (oFF.isNull(definition))
		{
			reject(oFF.XError.create("No visualization definition found"));
			return;
		}
		vizManager.setCurrentActiveVisualizationDefinition(definition);
		result.getChangesBase().addChangedEventType(oFF.OlapDataProviderEventType.MODEL_CHANGE);
		result.getChangesBase().addChangedEventType(oFF.OlapDataProviderEventType.VISUALIZATION_CHANGE);
		result.getChangesBase().addChangedVisualizationName(vizName);
		resolve(result);
	});
};
oFF.OdpVizActionSetActiveVizDefinition.prototype.getName = function()
{
	return oFF.OdpVizActionSetActiveVizDefinition.NAME;
};
oFF.OdpVizActionSetActiveVizDefinition.prototype.setTypedParameters = function(vizName)
{
	let parameters = oFF.XList.create();
	parameters.add(vizName);
	this.setParameters(parameters);
};

oFF.OdpVizActionSetChartColorPalette = function() {};
oFF.OdpVizActionSetChartColorPalette.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpVizActionSetChartColorPalette.prototype._ff_c = "OdpVizActionSetChartColorPalette";

oFF.OdpVizActionSetChartColorPalette.NAME = "setChartColorPalette";
oFF.OdpVizActionSetChartColorPalette.create = function()
{
	let obj = new oFF.OdpVizActionSetChartColorPalette();
	obj.setupAction();
	return obj;
};
oFF.OdpVizActionSetChartColorPalette.prototype.doAction = function(dataProvider)
{
	let converter = oFF.OdpActionParameterConverter.create();
	let vizName = this.getParameter(0);
	let palette = converter.toStringList(this.getParameter(1));
	dataProvider.getCc().setChartColorPalette(vizName, palette);
	let result = this.newActionResult();
	result.getChangesBase().addChangedEventType(oFF.OlapDataProviderEventType.VISUALIZATION_CHANGE);
	result.getChangesBase().addChangedEventType(oFF.OlapDataProviderEventType.MODEL_CHANGE);
	return oFF.XPromise.resolve(result);
};
oFF.OdpVizActionSetChartColorPalette.prototype.getName = function()
{
	return oFF.OdpVizActionSetChartColorPalette.NAME;
};
oFF.OdpVizActionSetChartColorPalette.prototype.setTypedParameters = function(visualizationName, palette)
{
	let converter = oFF.OdpActionParameterConverter.create();
	let parameters = oFF.XList.create();
	parameters.add(visualizationName);
	parameters.add(converter.fromStringList(palette));
	this.setParameters(parameters);
};

oFF.OdpVizActionSetChartOrientation = function() {};
oFF.OdpVizActionSetChartOrientation.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpVizActionSetChartOrientation.prototype._ff_c = "OdpVizActionSetChartOrientation";

oFF.OdpVizActionSetChartOrientation.NAME = "setChartOrientation";
oFF.OdpVizActionSetChartOrientation.create = function()
{
	let obj = new oFF.OdpVizActionSetChartOrientation();
	obj.setupAction();
	return obj;
};
oFF.OdpVizActionSetChartOrientation.prototype.doAction = function(dataProvider)
{
	let converter = oFF.OdpActionParameterConverter.create();
	let vizName = this.getParameter(0);
	let orientation = converter.toChartOrientation(this.getParameter(1));
	dataProvider.getCc().setChartOrientation(vizName, orientation);
	let result = this.newActionResult();
	result.getChangesBase().addChangedEventType(oFF.OlapDataProviderEventType.VISUALIZATION_CHANGE);
	result.getChangesBase().addChangedEventType(oFF.OlapDataProviderEventType.MODEL_CHANGE);
	return oFF.XPromise.resolve(result);
};
oFF.OdpVizActionSetChartOrientation.prototype.getName = function()
{
	return oFF.OdpVizActionSetChartOrientation.NAME;
};
oFF.OdpVizActionSetChartOrientation.prototype.setTypedParameters = function(visualizationName, orientation)
{
	let converter = oFF.OdpActionParameterConverter.create();
	let parameters = oFF.XList.create();
	parameters.add(visualizationName);
	parameters.add(converter.fromChartOrientation(orientation));
	this.setParameters(parameters);
};

oFF.OdpVizActionSetChartStructure = function() {};
oFF.OdpVizActionSetChartStructure.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpVizActionSetChartStructure.prototype._ff_c = "OdpVizActionSetChartStructure";

oFF.OdpVizActionSetChartStructure.NAME = "setChartStructure";
oFF.OdpVizActionSetChartStructure.create = function()
{
	let obj = new oFF.OdpVizActionSetChartStructure();
	obj.setupAction();
	return obj;
};
oFF.OdpVizActionSetChartStructure.prototype.doAction = function(dataProvider)
{
	dataProvider.getCc().setChartStructureByName(this.getParameter(0), this.getParameter(1));
	let result = this.newActionResult();
	result.getChangesBase().addChangedEventType(oFF.OlapDataProviderEventType.VISUALIZATION_CHANGE);
	return oFF.XPromise.resolve(result);
};
oFF.OdpVizActionSetChartStructure.prototype.getName = function()
{
	return oFF.OdpVizActionSetChartStructure.NAME;
};
oFF.OdpVizActionSetChartStructure.prototype.setTypedParameters = function(visualizationName, chartStructureName)
{
	let parameters = oFF.XList.create();
	parameters.add(visualizationName);
	parameters.add(chartStructureName);
	this.setParameters(parameters);
};

oFF.OdpVizActionSetDatapointVariableValue = function() {};
oFF.OdpVizActionSetDatapointVariableValue.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpVizActionSetDatapointVariableValue.prototype._ff_c = "OdpVizActionSetDatapointVariableValue";

oFF.OdpVizActionSetDatapointVariableValue.NAME = "setDatapointVariableValue";
oFF.OdpVizActionSetDatapointVariableValue.create = function()
{
	let obj = new oFF.OdpVizActionSetDatapointVariableValue();
	obj.setupAction();
	return obj;
};
oFF.OdpVizActionSetDatapointVariableValue.prototype.doAction = function(dataProvider)
{
	dataProvider.getCc().setDataPointVariableValue(this.getParameter(0), this.getParameter(1), this.getParameter(2), this.getParameter(3));
	let result = this.newActionResult();
	result.getChangesBase().addChangedEventType(oFF.OlapDataProviderEventType.VISUALIZATION_CHANGE);
	return oFF.XPromise.resolve(result);
};
oFF.OdpVizActionSetDatapointVariableValue.prototype.getName = function()
{
	return oFF.OdpVizActionSetDatapointVariableValue.NAME;
};
oFF.OdpVizActionSetDatapointVariableValue.prototype.setTypedParameters = function(visualizationName, dataPointVariableContainerName, variableName, variableValue)
{
	let parameters = oFF.XList.create();
	parameters.add(visualizationName);
	parameters.add(dataPointVariableContainerName);
	parameters.add(variableName);
	parameters.add(variableValue);
	this.setParameters(parameters);
};

oFF.OdpVizActionSetKpiMemberDeviation = function() {};
oFF.OdpVizActionSetKpiMemberDeviation.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpVizActionSetKpiMemberDeviation.prototype._ff_c = "OdpVizActionSetKpiMemberDeviation";

oFF.OdpVizActionSetKpiMemberDeviation.NAME = "setKpiMemberDeviation";
oFF.OdpVizActionSetKpiMemberDeviation.create = function()
{
	let obj = new oFF.OdpVizActionSetKpiMemberDeviation();
	obj.setupAction();
	return obj;
};
oFF.OdpVizActionSetKpiMemberDeviation.prototype.doAction = function(dataProvider)
{
	dataProvider.getCc().setKpiMemberDeviation(this.getParameter(0), this.getParameter(1));
	let result = this.newActionResult();
	result.getChangesBase().addChangedEventType(oFF.OlapDataProviderEventType.VISUALIZATION_CHANGE);
	return oFF.XPromise.resolve(result);
};
oFF.OdpVizActionSetKpiMemberDeviation.prototype.getName = function()
{
	return oFF.OdpVizActionSetKpiMemberDeviation.NAME;
};
oFF.OdpVizActionSetKpiMemberDeviation.prototype.setTypedParameters = function(visualizationName, memberName)
{
	let parameters = oFF.XList.create();
	parameters.add(visualizationName);
	parameters.add(memberName);
	this.setParameters(parameters);
};

oFF.OdpVizActionSetKpiMemberException = function() {};
oFF.OdpVizActionSetKpiMemberException.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpVizActionSetKpiMemberException.prototype._ff_c = "OdpVizActionSetKpiMemberException";

oFF.OdpVizActionSetKpiMemberException.NAME = "setKpiMemberException";
oFF.OdpVizActionSetKpiMemberException.create = function()
{
	let obj = new oFF.OdpVizActionSetKpiMemberException();
	obj.setupAction();
	return obj;
};
oFF.OdpVizActionSetKpiMemberException.prototype.doAction = function(dataProvider)
{
	dataProvider.getCc().setKpiMemberException(this.getParameter(0), this.getParameter(1));
	let result = this.newActionResult();
	result.getChangesBase().addChangedEventType(oFF.OlapDataProviderEventType.VISUALIZATION_CHANGE);
	return oFF.XPromise.resolve(result);
};
oFF.OdpVizActionSetKpiMemberException.prototype.getName = function()
{
	return oFF.OdpVizActionSetKpiMemberException.NAME;
};
oFF.OdpVizActionSetKpiMemberException.prototype.setTypedParameters = function(visualizationName, memberName)
{
	let parameters = oFF.XList.create();
	parameters.add(visualizationName);
	parameters.add(memberName);
	this.setParameters(parameters);
};

oFF.OdpVizActionSetKpiMemberMain = function() {};
oFF.OdpVizActionSetKpiMemberMain.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpVizActionSetKpiMemberMain.prototype._ff_c = "OdpVizActionSetKpiMemberMain";

oFF.OdpVizActionSetKpiMemberMain.NAME = "setKpiMemberMain";
oFF.OdpVizActionSetKpiMemberMain.create = function()
{
	let obj = new oFF.OdpVizActionSetKpiMemberMain();
	obj.setupAction();
	return obj;
};
oFF.OdpVizActionSetKpiMemberMain.prototype.doAction = function(dataProvider)
{
	dataProvider.getCc().setKpiMemberMain(this.getParameter(0), this.getParameter(1));
	let result = this.newActionResult();
	result.getChangesBase().addChangedEventType(oFF.OlapDataProviderEventType.VISUALIZATION_CHANGE);
	return oFF.XPromise.resolve(result);
};
oFF.OdpVizActionSetKpiMemberMain.prototype.getName = function()
{
	return oFF.OdpVizActionSetKpiMemberMain.NAME;
};
oFF.OdpVizActionSetKpiMemberMain.prototype.setTypedParameters = function(visualizationName, memberName)
{
	let parameters = oFF.XList.create();
	parameters.add(visualizationName);
	parameters.add(memberName);
	this.setParameters(parameters);
};

oFF.OdpVizActionSetKpiMemberTarget = function() {};
oFF.OdpVizActionSetKpiMemberTarget.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpVizActionSetKpiMemberTarget.prototype._ff_c = "OdpVizActionSetKpiMemberTarget";

oFF.OdpVizActionSetKpiMemberTarget.NAME = "setKpiMemberTarget";
oFF.OdpVizActionSetKpiMemberTarget.create = function()
{
	let obj = new oFF.OdpVizActionSetKpiMemberTarget();
	obj.setupAction();
	return obj;
};
oFF.OdpVizActionSetKpiMemberTarget.prototype.doAction = function(dataProvider)
{
	dataProvider.getCc().setKpiMemberTarget(this.getParameter(0), this.getParameter(1));
	let result = this.newActionResult();
	result.getChangesBase().addChangedEventType(oFF.OlapDataProviderEventType.VISUALIZATION_CHANGE);
	return oFF.XPromise.resolve(result);
};
oFF.OdpVizActionSetKpiMemberTarget.prototype.getName = function()
{
	return oFF.OdpVizActionSetKpiMemberTarget.NAME;
};
oFF.OdpVizActionSetKpiMemberTarget.prototype.setTypedParameters = function(visualizationName, memberName)
{
	let parameters = oFF.XList.create();
	parameters.add(visualizationName);
	parameters.add(memberName);
	this.setParameters(parameters);
};

oFF.OdpVizActionSetKpiMemberTrend = function() {};
oFF.OdpVizActionSetKpiMemberTrend.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpVizActionSetKpiMemberTrend.prototype._ff_c = "OdpVizActionSetKpiMemberTrend";

oFF.OdpVizActionSetKpiMemberTrend.NAME = "setKpiMemberTrend";
oFF.OdpVizActionSetKpiMemberTrend.create = function()
{
	let obj = new oFF.OdpVizActionSetKpiMemberTrend();
	obj.setupAction();
	return obj;
};
oFF.OdpVizActionSetKpiMemberTrend.prototype.doAction = function(dataProvider)
{
	dataProvider.getCc().setKpiMemberTrend(this.getParameter(0), this.getParameter(1));
	let result = this.newActionResult();
	result.getChangesBase().addChangedEventType(oFF.OlapDataProviderEventType.VISUALIZATION_CHANGE);
	return oFF.XPromise.resolve(result);
};
oFF.OdpVizActionSetKpiMemberTrend.prototype.getName = function()
{
	return oFF.OdpVizActionSetKpiMemberTrend.NAME;
};
oFF.OdpVizActionSetKpiMemberTrend.prototype.setTypedParameters = function(visualizationName, memberName)
{
	let parameters = oFF.XList.create();
	parameters.add(visualizationName);
	parameters.add(memberName);
	this.setParameters(parameters);
};

oFF.OdpVizActionSetKpiStructure = function() {};
oFF.OdpVizActionSetKpiStructure.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpVizActionSetKpiStructure.prototype._ff_c = "OdpVizActionSetKpiStructure";

oFF.OdpVizActionSetKpiStructure.NAME = "setKpiStructure";
oFF.OdpVizActionSetKpiStructure.create = function()
{
	let obj = new oFF.OdpVizActionSetKpiStructure();
	obj.setupAction();
	return obj;
};
oFF.OdpVizActionSetKpiStructure.prototype.doAction = function(dataProvider)
{
	dataProvider.getCc().setKpiStructureByName(this.getParameter(0), this.getParameter(1));
	let result = this.newActionResult();
	result.getChangesBase().addChangedEventType(oFF.OlapDataProviderEventType.VISUALIZATION_CHANGE);
	return oFF.XPromise.resolve(result);
};
oFF.OdpVizActionSetKpiStructure.prototype.getName = function()
{
	return oFF.OdpVizActionSetKpiStructure.NAME;
};
oFF.OdpVizActionSetKpiStructure.prototype.setTypedParameters = function(visualizationName, kpiStructureName)
{
	let parameters = oFF.XList.create();
	parameters.add(visualizationName);
	parameters.add(kpiStructureName);
	this.setParameters(parameters);
};

oFF.OdpVizActionSetVisualizationChartType = function() {};
oFF.OdpVizActionSetVisualizationChartType.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpVizActionSetVisualizationChartType.prototype._ff_c = "OdpVizActionSetVisualizationChartType";

oFF.OdpVizActionSetVisualizationChartType.NAME = "setVisualizationChartType";
oFF.OdpVizActionSetVisualizationChartType.create = function()
{
	let obj = new oFF.OdpVizActionSetVisualizationChartType();
	obj.setupAction();
	return obj;
};
oFF.OdpVizActionSetVisualizationChartType.prototype.doAction = function(dataProvider)
{
	let converter = oFF.OdpActionParameterConverter.create();
	let vizName = this.getParameter(0);
	let chartType = converter.toChartType(this.getParameter(1));
	let queryManager = dataProvider.getQueryManager();
	let vizManager = queryManager.getQueryModel().getVisualizationManager();
	return oFF.XPromise.create((resolve, reject) => {
		let result = this.newActionResult();
		let definition = vizManager.getVisualizationDefinitionByName(vizName);
		if (oFF.notNull(definition))
		{
			if (definition.getSemanticBindingType() === oFF.SemanticBindingType.CHART)
			{
				if (oFF.isNull(chartType))
				{
					reject(oFF.XError.create("No chart type provided."));
					return;
				}
				let chartDefinition = definition;
				chartDefinition.getChartSetting().setChartType(chartType);
				result.getChangesBase().addChangedEventType(oFF.OlapDataProviderEventType.VISUALIZATION_CHANGE);
				result.getChangesBase().addChangedVisualizationName(vizName);
				resolve(result);
			}
			else
			{
				reject(oFF.XError.create("Visualization definition does not support charts."));
			}
		}
		else
		{
			reject(oFF.XError.create(oFF.XStringUtils.concatenate3("No visualization with name '", vizName, "' found. ")));
		}
	});
};
oFF.OdpVizActionSetVisualizationChartType.prototype.getName = function()
{
	return oFF.OdpVizActionSetVisualizationChartType.NAME;
};
oFF.OdpVizActionSetVisualizationChartType.prototype.setTypedParameters = function(vizName, chartType)
{
	let converter = oFF.OdpActionParameterConverter.create();
	let parameters = oFF.XList.create();
	parameters.add(vizName);
	parameters.add(converter.fromChartType(chartType));
	this.setParameters(parameters);
};

oFF.OdpVizActionSetVisualizationSynchronizationMode = function() {};
oFF.OdpVizActionSetVisualizationSynchronizationMode.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpVizActionSetVisualizationSynchronizationMode.prototype._ff_c = "OdpVizActionSetVisualizationSynchronizationMode";

oFF.OdpVizActionSetVisualizationSynchronizationMode.NAME = "setVisualizationSynchronizationMode";
oFF.OdpVizActionSetVisualizationSynchronizationMode.create = function()
{
	let obj = new oFF.OdpVizActionSetVisualizationSynchronizationMode();
	obj.setupAction();
	return obj;
};
oFF.OdpVizActionSetVisualizationSynchronizationMode.prototype.doAction = function(dataProvider)
{
	dataProvider.getCc().setVisualizationSynchronizationMode(oFF.Viz2QmSynchronizationMode.lookup(this.getParameter(0)));
	let result = this.newActionResult();
	result.getChangesBase().addChangedEventType(oFF.OlapDataProviderEventType.MODEL_CHANGE);
	return oFF.XPromise.resolve(result);
};
oFF.OdpVizActionSetVisualizationSynchronizationMode.prototype.getName = function()
{
	return oFF.OdpVizActionSetVisualizationSynchronizationMode.NAME;
};
oFF.OdpVizActionSetVisualizationSynchronizationMode.prototype.setTypedParameters = function(synchronizationMode)
{
	let parameters = oFF.XList.create();
	parameters.add(oFF.DfNameObject.getSafeName(synchronizationMode));
	this.setParameters(parameters);
};

oFF.OdpVizActionSetVisualizationVariableValue = function() {};
oFF.OdpVizActionSetVisualizationVariableValue.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpVizActionSetVisualizationVariableValue.prototype._ff_c = "OdpVizActionSetVisualizationVariableValue";

oFF.OdpVizActionSetVisualizationVariableValue.NAME = "setVisualizationVariableValue";
oFF.OdpVizActionSetVisualizationVariableValue.create = function()
{
	let obj = new oFF.OdpVizActionSetVisualizationVariableValue();
	obj.setupAction();
	return obj;
};
oFF.OdpVizActionSetVisualizationVariableValue.prototype.doAction = function(dataProvider)
{
	dataProvider.getCc().setVisualizationVariableValue(this.getParameter(0), this.getParameter(1), this.getParameter(2));
	let result = this.newActionResult();
	result.getChangesBase().addChangedEventType(oFF.OlapDataProviderEventType.VISUALIZATION_CHANGE);
	return oFF.XPromise.resolve(result);
};
oFF.OdpVizActionSetVisualizationVariableValue.prototype.getName = function()
{
	return oFF.OdpVizActionSetVisualizationVariableValue.NAME;
};
oFF.OdpVizActionSetVisualizationVariableValue.prototype.setTypedParameters = function(visualizationName, variableName, variableValue)
{
	let parameters = oFF.XList.create();
	parameters.add(visualizationName);
	parameters.add(variableName);
	parameters.add(variableValue);
	this.setParameters(parameters);
};

oFF.OdpVizActionSynchronizeVizDefinition = function() {};
oFF.OdpVizActionSynchronizeVizDefinition.prototype = new oFF.DfOlapDataProviderAction();
oFF.OdpVizActionSynchronizeVizDefinition.prototype._ff_c = "OdpVizActionSynchronizeVizDefinition";

oFF.OdpVizActionSynchronizeVizDefinition.NAME = "synchronizeVisualizationDefinition";
oFF.OdpVizActionSynchronizeVizDefinition.create = function()
{
	let obj = new oFF.OdpVizActionSynchronizeVizDefinition();
	obj.setupAction();
	return obj;
};
oFF.OdpVizActionSynchronizeVizDefinition.prototype.doAction = function(dataProvider)
{
	let vizName = this.getParameter(0);
	let queryManager = dataProvider.getQueryManager();
	let vizManager = queryManager.getQueryModel().getVisualizationManager();
	return oFF.XPromise.create((resolve, reject) => {
		let result = this.newActionResult();
		let definition = vizManager.getVisualizationDefinitionByName(vizName);
		if (oFF.isNull(definition))
		{
			definition = vizManager.getCurrentActiveVisualizationDefinition();
		}
		if (oFF.isNull(definition))
		{
			reject(oFF.XError.create("No visualization definition found"));
			return;
		}
		if (definition.getSemanticBindingType() === oFF.SemanticBindingType.CHART)
		{
			definition.getChartSetting().synchronizeChartSetting();
			result.getChangesBase().addChangedEventType(oFF.OlapDataProviderEventType.MODEL_CHANGE);
		}
		resolve(result);
	});
};
oFF.OdpVizActionSynchronizeVizDefinition.prototype.getName = function()
{
	return oFF.OdpVizActionSynchronizeVizDefinition.NAME;
};
oFF.OdpVizActionSynchronizeVizDefinition.prototype.setTypedParameters = function(vizName)
{
	let parameters = oFF.XList.create();
	parameters.add(vizName);
	this.setParameters(parameters);
};

oFF.OlapDataProviderEventType = function() {};
oFF.OlapDataProviderEventType.prototype = new oFF.DataProviderEventType();
oFF.OlapDataProviderEventType.prototype._ff_c = "OlapDataProviderEventType";

oFF.OlapDataProviderEventType.MODEL_CHANGE = null;
oFF.OlapDataProviderEventType.MODEL_STATE = null;
oFF.OlapDataProviderEventType.RESULT_DATA_FETCH = null;
oFF.OlapDataProviderEventType.VISUALIZATION_CHANGE = null;
oFF.OlapDataProviderEventType.createOlapEventType = function(name)
{
	let object = new oFF.OlapDataProviderEventType();
	object.setupConstant(name);
	return object;
};
oFF.OlapDataProviderEventType.staticSetupOlapEventType = function()
{
	oFF.OlapDataProviderEventType.MODEL_STATE = oFF.OlapDataProviderEventType.createOlapEventType("ModelState");
	oFF.OlapDataProviderEventType.MODEL_CHANGE = oFF.OlapDataProviderEventType.createOlapEventType("ModelChange");
	oFF.OlapDataProviderEventType.VISUALIZATION_CHANGE = oFF.OlapDataProviderEventType.createOlapEventType("VizChange");
	oFF.OlapDataProviderEventType.RESULT_DATA_FETCH = oFF.OlapDataProviderEventType.createOlapEventType("ResultDataFetch");
};

oFF.DataProviderFile = function() {};
oFF.DataProviderFile.prototype = new oFF.DfXFileProvider();
oFF.DataProviderFile.prototype._ff_c = "DataProviderFile";

oFF.DataProviderFile.DIMENSIONS_FILE = "dimensions";
oFF.DataProviderFile.RESULT_SET_FILE = "resultSet";
oFF.DataProviderFile.create = function(dataProvider, process, fs, uri, isFolder)
{
	let obj = new oFF.DataProviderFile();
	obj.setupFolder(dataProvider, process, fs, uri, isFolder);
	return obj;
};
oFF.DataProviderFile.prototype.m_dataProvider = null;
oFF.DataProviderFile.prototype.m_isDpFolder = false;
oFF.DataProviderFile.prototype.getDataProvider = function()
{
	return this.m_dataProvider;
};
oFF.DataProviderFile.prototype.isDataProviderFolder = function()
{
	return this.m_isDpFolder;
};
oFF.DataProviderFile.prototype.processProviderCommand = function(syncType, listener, customIdentifier, type, command)
{
	return oFF.DataProviderFileCommandAction.createAndRun(syncType, this, oFF.DataProviderFileRequestAdapter.create((fileRequestAction) => {
		if (oFF.notNull(listener))
		{
			let data = fileRequestAction.getData();
			listener.onFileProviderCommand(fileRequestAction, data, data.getProviderContent(), customIdentifier);
		}
	}), customIdentifier, type, command);
};
oFF.DataProviderFile.prototype.processProviderFetchChildren = function(syncType, listener, customIdentifier, config)
{
	return oFF.DataProviderFileFetchChildrenAction.createAndRun(syncType, this, oFF.DataProviderFileRequestAdapter.create((fileRequestAction) => {
		if (oFF.notNull(listener))
		{
			let data = fileRequestAction.getData();
			listener.onFileProviderChildrenFetched(fileRequestAction, data, data.getProviderChildFiles(), data.getProviderChildrenResultset(), customIdentifier);
		}
	}), customIdentifier);
};
oFF.DataProviderFile.prototype.processProviderFetchMetadata = function(syncType, listener, customIdentifier, cachingType)
{
	return oFF.DataProviderFileFetchMetadataAction.createAndRun(syncType, this, oFF.DataProviderFileRequestAdapter.create((fileRequestAction) => {
		if (oFF.notNull(listener))
		{
			let data = fileRequestAction.getData();
			listener.onFileProviderFetchMetadata(fileRequestAction, data, data.getProviderMetadataAndAttributes(), customIdentifier);
		}
	}), customIdentifier);
};
oFF.DataProviderFile.prototype.processProviderLoad = function(syncType, listener, customIdentifier, compression)
{
	return oFF.DataProviderFileLoadAction.createAndRun(syncType, this, oFF.DataProviderFileRequestAdapter.create((fileRequestAction) => {
		if (oFF.notNull(listener))
		{
			let data = fileRequestAction.getData();
			listener.onFileProviderLoaded(fileRequestAction, data, data.getProviderContent(), customIdentifier);
		}
	}), customIdentifier);
};
oFF.DataProviderFile.prototype.setupFolder = function(dataProvider, process, fs, uri, isFolder)
{
	this.setupFile(process, fs, uri);
	this.m_dataProvider = dataProvider;
	if (isFolder)
	{
		this.m_isDpFolder = true;
		let content = oFF.XContent.createContent();
		content.setObject(this.m_dataProvider);
		this.setProviderFileContent(content);
	}
	let metadata = oFF.PrStructure.create();
	metadata.putString(oFF.XFileAttribute.NAME, this.m_dataProvider.getName());
	metadata.putBoolean(oFF.XFileAttribute.IS_DIRECTORY, this.isDataProviderFolder());
	metadata.putBoolean(oFF.XFileAttribute.IS_EXISTING, true);
	metadata.putBoolean(oFF.XFileAttribute.SUPPORTS_COMMANDS, this.isDataProviderFolder());
	metadata.putLong(oFF.XFileAttribute.CREATED_AT, this.m_dataProvider.getCreatedAt());
	metadata.putLong(oFF.XFileAttribute.CHANGED_AT, this.m_dataProvider.getCreatedAt());
	metadata.putBoolean(oFF.XFileAttribute.IS_READABLE, true);
	metadata.putBoolean(oFF.XFileAttribute.IS_WRITEABLE, false);
	if (this.m_isDpFolder)
	{
		let actionMdStruct = metadata.putNewStructure(oFF.XFileAttribute.COMMANDS_METADATA);
		let actionList = actionMdStruct.putNewList(oFF.XFileAttribute.COMMANDS_LIST);
		let allActionManifests = dataProvider.getActions().getActionManifests();
		for (let i = 0; i < allActionManifests.size(); i++)
		{
			let actionStruct = actionList.addNewStructure();
			let action = allActionManifests.get(i);
			actionStruct.putString(oFF.XFileAttribute.COMMAND_NAME, action.getName());
			let parameterList = actionStruct.putNewList(oFF.XFileAttribute.COMMAND_ARGS);
			let parameterNames = action.getParameterList();
			for (let j = 0; j < parameterNames.size(); j++)
			{
				let parameterDefinition = parameterNames.get(j);
				let parameterStruct = parameterList.addNewStructure();
				parameterStruct.putString(oFF.XFileAttribute.COMMAND_ARG_NAME, parameterDefinition.getName());
				parameterStruct.putString(oFF.XFileAttribute.COMMAND_ARG_TYPE, parameterDefinition.getType().getName());
			}
		}
	}
	this.setProviderMetadata(metadata);
};
oFF.DataProviderFile.prototype.supportsProviderCommands = function()
{
	return true;
};
oFF.DataProviderFile.prototype.supportsProviderFetchChildren = function()
{
	return true;
};
oFF.DataProviderFile.prototype.supportsProviderLoad = function()
{
	return true;
};

oFF.DataProviderRootFolder = function() {};
oFF.DataProviderRootFolder.prototype = new oFF.DfXFileProvider();
oFF.DataProviderRootFolder.prototype._ff_c = "DataProviderRootFolder";

oFF.DataProviderRootFolder.create = function(process, fs, uri)
{
	let obj = new oFF.DataProviderRootFolder();
	obj.setupFolder(process, fs, uri);
	return obj;
};
oFF.DataProviderRootFolder.prototype.processProviderFetchChildren = function(syncType, listener, customIdentifier, config)
{
	return oFF.DataProviderRootFolderFetchChildrenAction.createAndRun(syncType, this, oFF.DataProviderFileRequestAdapter.create((fileRequestAction) => {
		if (oFF.notNull(listener))
		{
			let data = fileRequestAction.getData();
			listener.onFileProviderChildrenFetched(fileRequestAction, data, data.getProviderChildFiles(), data.getProviderChildrenResultset(), customIdentifier);
		}
	}), customIdentifier);
};
oFF.DataProviderRootFolder.prototype.processProviderFetchMetadata = function(syncType, listener, customIdentifier, cachingType)
{
	return null;
};
oFF.DataProviderRootFolder.prototype.setupFolder = function(process, fs, uri)
{
	this.setupFile(process, fs, uri);
	let metadata = oFF.PrStructure.create();
	metadata.putBoolean(oFF.XFileAttribute.IS_DIRECTORY, true);
	this.setProviderMetadata(metadata);
};
oFF.DataProviderRootFolder.prototype.supportsProviderFetchChildren = function()
{
	return true;
};

oFF.DfDataProviderFile = function() {};
oFF.DfDataProviderFile.prototype = new oFF.DfXFileProvider();
oFF.DfDataProviderFile.prototype._ff_c = "DfDataProviderFile";

oFF.DfDataProviderFile.prototype.isDataProviderFolder = function()
{
	return false;
};

oFF.SubSysDataProviderPool = function() {};
oFF.SubSysDataProviderPool.prototype = new oFF.DfProgramSubSys();
oFF.SubSysDataProviderPool.prototype._ff_c = "SubSysDataProviderPool";

oFF.SubSysDataProviderPool.DEFAULT_PROGRAM_NAME = "@SubSys.DataProviderPool";
oFF.SubSysDataProviderPool.prototype.m_dpPool = null;
oFF.SubSysDataProviderPool.prototype.getAdminApi = function()
{
	return this.m_dpPool;
};
oFF.SubSysDataProviderPool.prototype.getMainApi = function()
{
	return this.m_dpPool;
};
oFF.SubSysDataProviderPool.prototype.getProgramName = function()
{
	return oFF.SubSysDataProviderPool.DEFAULT_PROGRAM_NAME;
};
oFF.SubSysDataProviderPool.prototype.getSubSystemType = function()
{
	return oFF.SubSystemType.DATA_PROVIDER_POOL;
};
oFF.SubSysDataProviderPool.prototype.newProgram = function()
{
	let prg = new oFF.SubSysDataProviderPool();
	prg.setup();
	return prg;
};
oFF.SubSysDataProviderPool.prototype.runProcess = function()
{
	this.m_dpPool = oFF.DataProviderPool.createGlobal(this.getProcess());
	let parentProcess = this.getProcess().getParentProcess();
	let fileSystemManager = parentProcess.getFileSystemManager();
	let activeFileSystem = fileSystemManager.getActiveFileSystem();
	if (activeFileSystem.getProtocolType() === oFF.ProtocolType.VFS)
	{
		let vfs = activeFileSystem;
		vfs.addMountPointByUri("/dp", oFF.XUri.createFromUrl("fsdp:///"));
	}
	this.activateSubSystem(null, oFF.SubSystemStatus.ACTIVE);
	return true;
};

oFF.OdpAxisActionMoveDimensionAfter = function() {};
oFF.OdpAxisActionMoveDimensionAfter.prototype = new oFF.DfOlapDataProviderActionWithNoResult();
oFF.OdpAxisActionMoveDimensionAfter.prototype._ff_c = "OdpAxisActionMoveDimensionAfter";

oFF.OdpAxisActionMoveDimensionAfter.NAME = "moveDimensionAfter";
oFF.OdpAxisActionMoveDimensionAfter.create = function()
{
	let obj = new oFF.OdpAxisActionMoveDimensionAfter();
	obj.setupAction();
	return obj;
};
oFF.OdpAxisActionMoveDimensionAfter.prototype.doAction = function(dataProvider)
{
	return oFF.XPromise.create((resolve, reject) => {
		dataProvider.getCc().moveDimensionAfter(this.getParameter(0), this.getParameter(1));
		let result = this.newActionResult();
		result.getChangesBase().addChangedEventType(oFF.OlapDataProviderEventType.MODEL_CHANGE);
		resolve(result);
	});
};
oFF.OdpAxisActionMoveDimensionAfter.prototype.getName = function()
{
	return oFF.OdpAxisActionMoveDimensionAfter.NAME;
};
oFF.OdpAxisActionMoveDimensionAfter.prototype.setTypedParameters = function(dimensionName, targetDimensionName)
{
	let parameters = oFF.XList.create();
	parameters.add(dimensionName);
	parameters.add(targetDimensionName);
	this.setParameters(parameters);
};

oFF.OdpAxisActionMoveDimensionBefore = function() {};
oFF.OdpAxisActionMoveDimensionBefore.prototype = new oFF.DfOlapDataProviderActionWithNoResult();
oFF.OdpAxisActionMoveDimensionBefore.prototype._ff_c = "OdpAxisActionMoveDimensionBefore";

oFF.OdpAxisActionMoveDimensionBefore.NAME = "moveDimensionBefore";
oFF.OdpAxisActionMoveDimensionBefore.create = function()
{
	let obj = new oFF.OdpAxisActionMoveDimensionBefore();
	obj.setupAction();
	return obj;
};
oFF.OdpAxisActionMoveDimensionBefore.prototype.doAction = function(dataProvider)
{
	return oFF.XPromise.create((resolve, reject) => {
		dataProvider.getCc().moveDimensionBefore(this.getParameter(0), this.getParameter(1));
		let result = this.newActionResult();
		result.getChangesBase().addChangedEventType(oFF.OlapDataProviderEventType.MODEL_CHANGE);
		resolve(result);
	});
};
oFF.OdpAxisActionMoveDimensionBefore.prototype.getName = function()
{
	return oFF.OdpAxisActionMoveDimensionBefore.NAME;
};
oFF.OdpAxisActionMoveDimensionBefore.prototype.setTypedParameters = function(dimensionName, targetDimensionName)
{
	let parameters = oFF.XList.create();
	parameters.add(dimensionName);
	parameters.add(targetDimensionName);
	this.setParameters(parameters);
};

oFF.OdpAxisActionMoveDimensionToAxis = function() {};
oFF.OdpAxisActionMoveDimensionToAxis.prototype = new oFF.DfOlapDataProviderActionWithNoResult();
oFF.OdpAxisActionMoveDimensionToAxis.prototype._ff_c = "OdpAxisActionMoveDimensionToAxis";

oFF.OdpAxisActionMoveDimensionToAxis.NAME = "moveDimensionToAxis";
oFF.OdpAxisActionMoveDimensionToAxis.create = function()
{
	let obj = new oFF.OdpAxisActionMoveDimensionToAxis();
	obj.setupAction();
	return obj;
};
oFF.OdpAxisActionMoveDimensionToAxis.prototype.doAction = function(dataProvider)
{
	let converter = oFF.OdpActionParameterConverter.create();
	let queryManager = dataProvider.getQueryManager();
	let dimensionName = this.getParameter(0);
	let axisType = converter.toAxisType(this.getParameter(1));
	let cmd = queryManager.getConvenienceCommands();
	let isVisible = oFF.AxisType.isAxisVisible(axisType);
	cmd.moveDimensionToAxis(dimensionName, axisType);
	if (!isVisible)
	{
		cmd.clearNonMainFieldsFromResultSet(null, dimensionName);
		cmd.removeInvalidSortOperations();
	}
	else
	{
		cmd.moveSortToPosition(oFF.SortType.ABSTRACT_DIMENSION_SORT, dimensionName, 0);
	}
	let result = this.newActionResult();
	result.getChangesBase().addChangedEventType(oFF.OlapDataProviderEventType.MODEL_CHANGE);
	return oFF.XPromise.resolve(result);
};
oFF.OdpAxisActionMoveDimensionToAxis.prototype.getName = function()
{
	return oFF.OdpAxisActionMoveDimensionToAxis.NAME;
};
oFF.OdpAxisActionMoveDimensionToAxis.prototype.setTypedParameters = function(dimensionName, axisType)
{
	let converter = oFF.OdpActionParameterConverter.create();
	let parameters = oFF.XList.create();
	parameters.add(dimensionName);
	parameters.add(converter.fromAxisType(axisType));
	this.setParameters(parameters);
};

oFF.OdpAxisActionMoveDimensionToColumns = function() {};
oFF.OdpAxisActionMoveDimensionToColumns.prototype = new oFF.DfOlapDataProviderActionWithNoResult();
oFF.OdpAxisActionMoveDimensionToColumns.prototype._ff_c = "OdpAxisActionMoveDimensionToColumns";

oFF.OdpAxisActionMoveDimensionToColumns.NAME = "moveDimensionToColumns";
oFF.OdpAxisActionMoveDimensionToColumns.create = function()
{
	let obj = new oFF.OdpAxisActionMoveDimensionToColumns();
	obj.setupAction();
	return obj;
};
oFF.OdpAxisActionMoveDimensionToColumns.prototype.doAction = function(dataProvider)
{
	let axisActions = dataProvider.getActions().getAxisActions();
	return axisActions.moveDimensionToAxis(this.getParameter(0), oFF.AxisType.COLUMNS).onThenExt((empty) => {
		return this.newActionResult();
	});
};
oFF.OdpAxisActionMoveDimensionToColumns.prototype.getName = function()
{
	return oFF.OdpAxisActionMoveDimensionToColumns.NAME;
};
oFF.OdpAxisActionMoveDimensionToColumns.prototype.setTypedParameters = function(dimensionName)
{
	let parameters = oFF.XList.create();
	parameters.add(dimensionName);
	this.setParameters(parameters);
};

oFF.OdpAxisActionMoveDimensionToRows = function() {};
oFF.OdpAxisActionMoveDimensionToRows.prototype = new oFF.DfOlapDataProviderActionWithNoResult();
oFF.OdpAxisActionMoveDimensionToRows.prototype._ff_c = "OdpAxisActionMoveDimensionToRows";

oFF.OdpAxisActionMoveDimensionToRows.NAME = "moveDimensionToRows";
oFF.OdpAxisActionMoveDimensionToRows.create = function()
{
	let obj = new oFF.OdpAxisActionMoveDimensionToRows();
	obj.setupAction();
	return obj;
};
oFF.OdpAxisActionMoveDimensionToRows.prototype.doAction = function(dataProvider)
{
	let axisActions = dataProvider.getActions().getAxisActions();
	return axisActions.moveDimensionToAxis(this.getParameter(0), oFF.AxisType.ROWS).onThenExt((empty) => {
		return this.newActionResult();
	});
};
oFF.OdpAxisActionMoveDimensionToRows.prototype.getName = function()
{
	return oFF.OdpAxisActionMoveDimensionToRows.NAME;
};
oFF.OdpAxisActionMoveDimensionToRows.prototype.setTypedParameters = function(dimensionName)
{
	let parameters = oFF.XList.create();
	parameters.add(dimensionName);
	this.setParameters(parameters);
};

oFF.OdpAxisActionRemoveDimension = function() {};
oFF.OdpAxisActionRemoveDimension.prototype = new oFF.DfOlapDataProviderActionWithNoResult();
oFF.OdpAxisActionRemoveDimension.prototype._ff_c = "OdpAxisActionRemoveDimension";

oFF.OdpAxisActionRemoveDimension.NAME = "removeDimension";
oFF.OdpAxisActionRemoveDimension.create = function()
{
	let obj = new oFF.OdpAxisActionRemoveDimension();
	obj.setupAction();
	return obj;
};
oFF.OdpAxisActionRemoveDimension.prototype.doAction = function(dataProvider)
{
	let axisActions = dataProvider.getActions().getAxisActions();
	return axisActions.moveDimensionToAxis(this.getParameter(0), oFF.AxisType.FREE).onThenExt((empty) => {
		return this.newActionResult();
	});
};
oFF.OdpAxisActionRemoveDimension.prototype.getName = function()
{
	return oFF.OdpAxisActionRemoveDimension.NAME;
};
oFF.OdpAxisActionRemoveDimension.prototype.setTypedParameters = function(dimensionName)
{
	let parameters = oFF.XList.create();
	parameters.add(dimensionName);
	this.setParameters(parameters);
};

oFF.OdpAxisActionSwapAxis = function() {};
oFF.OdpAxisActionSwapAxis.prototype = new oFF.DfOlapDataProviderActionWithNoResult();
oFF.OdpAxisActionSwapAxis.prototype._ff_c = "OdpAxisActionSwapAxis";

oFF.OdpAxisActionSwapAxis.NAME = "swapAxis";
oFF.OdpAxisActionSwapAxis.create = function()
{
	let obj = new oFF.OdpAxisActionSwapAxis();
	obj.setupAction();
	return obj;
};
oFF.OdpAxisActionSwapAxis.prototype.doAction = function(dataProvider)
{
	let queryManager = dataProvider.getQueryManager();
	queryManager.getConvenienceCommands().switchAxesExt(true);
	let result = this.newActionResult();
	result.getChangesBase().addChangedEventType(oFF.OlapDataProviderEventType.MODEL_CHANGE);
	return oFF.XPromise.resolve(result);
};
oFF.OdpAxisActionSwapAxis.prototype.getName = function()
{
	return oFF.OdpAxisActionSwapAxis.NAME;
};

oFF.OdpAxisActionSwapDimensions = function() {};
oFF.OdpAxisActionSwapDimensions.prototype = new oFF.DfOlapDataProviderActionWithNoResult();
oFF.OdpAxisActionSwapDimensions.prototype._ff_c = "OdpAxisActionSwapDimensions";

oFF.OdpAxisActionSwapDimensions.NAME = "swapDimensions";
oFF.OdpAxisActionSwapDimensions.create = function()
{
	let obj = new oFF.OdpAxisActionSwapDimensions();
	obj.setupAction();
	return obj;
};
oFF.OdpAxisActionSwapDimensions.prototype.doAction = function(dataProvider)
{
	return oFF.XPromise.create((resolve, reject) => {
		dataProvider.getCc().swapDimensions(this.getParameter(0), this.getParameter(1));
		let result = this.newActionResult();
		result.getChangesBase().addChangedEventType(oFF.OlapDataProviderEventType.MODEL_CHANGE);
		resolve(result);
	});
};
oFF.OdpAxisActionSwapDimensions.prototype.getName = function()
{
	return oFF.OdpAxisActionSwapDimensions.NAME;
};
oFF.OdpAxisActionSwapDimensions.prototype.setTypedParameters = function(dimensionName1, dimensionName2)
{
	let parameters = oFF.XList.create();
	parameters.add(dimensionName1);
	parameters.add(dimensionName2);
	this.setParameters(parameters);
};

oFF.OdpFilterActionAddSingleMemberFilter = function() {};
oFF.OdpFilterActionAddSingleMemberFilter.prototype = new oFF.DfOlapDataProviderActionWithStringResult();
oFF.OdpFilterActionAddSingleMemberFilter.prototype._ff_c = "OdpFilterActionAddSingleMemberFilter";

oFF.OdpFilterActionAddSingleMemberFilter.NAME = "addSingleMemberFilter";
oFF.OdpFilterActionAddSingleMemberFilter.create = function()
{
	let obj = new oFF.OdpFilterActionAddSingleMemberFilter();
	obj.setupAction();
	return obj;
};
oFF.OdpFilterActionAddSingleMemberFilter.prototype.doAction = function(dataProvider)
{
	return oFF.XPromise.create((resolve, reject) => {
		let converter = oFF.OdpActionParameterConverter.create();
		let dimensionName = this.getParameter(0);
		if (oFF.XStringUtils.isNullOrEmpty(dimensionName))
		{
			reject(oFF.XError.create("Empty dimension name supplied"));
			return;
		}
		let comparisonOperator = converter.toComparisonOperator(this.getParameter(1));
		if (oFF.isNull(comparisonOperator))
		{
			reject(oFF.XError.create("Invalid comparison operator supplied"));
			return;
		}
		let memberName = this.getParameter(2);
		if (oFF.XStringUtils.isNullOrEmpty(memberName))
		{
			reject(oFF.XError.create("Empty member name supplied"));
			return;
		}
		let convenienceCommands = dataProvider.getQueryManager().getConvenienceCommands();
		let dimension = convenienceCommands.getDimension(dimensionName);
		if (oFF.isNull(dimension))
		{
			reject(oFF.XError.create(oFF.XStringUtils.concatenate3("Dimension with name '", dimensionName, "' does not exist")));
			return;
		}
		let filterOperation = convenienceCommands.addSingleMemberFilterByDimension(dimension, memberName, comparisonOperator);
		let result = this.newActionResult();
		result.setReturnValue(filterOperation.getUniqueId());
		result.getChangesBase().addChangedEventType(oFF.OlapDataProviderEventType.MODEL_CHANGE);
		resolve(result);
	});
};
oFF.OdpFilterActionAddSingleMemberFilter.prototype.getName = function()
{
	return oFF.OdpFilterActionAddSingleMemberFilter.NAME;
};
oFF.OdpFilterActionAddSingleMemberFilter.prototype.setTypedParameters = function(dimensionName, operator, memberName)
{
	let converter = oFF.OdpActionParameterConverter.create();
	let parameters = oFF.XList.create();
	parameters.add(dimensionName);
	parameters.add(converter.fromComparisonOperator(operator));
	parameters.add(memberName);
	this.setParameters(parameters);
};

oFF.OdpFilterActionApplyComplexFilters = function() {};
oFF.OdpFilterActionApplyComplexFilters.prototype = new oFF.DfOlapDataProviderActionWithNoResult();
oFF.OdpFilterActionApplyComplexFilters.prototype._ff_c = "OdpFilterActionApplyComplexFilters";

oFF.OdpFilterActionApplyComplexFilters.NAME = "applyComplexFilters";
oFF.OdpFilterActionApplyComplexFilters.create = function()
{
	let obj = new oFF.OdpFilterActionApplyComplexFilters();
	obj.setupAction();
	return obj;
};
oFF.OdpFilterActionApplyComplexFilters.prototype.m_dynamicFilterSerialization = null;
oFF.OdpFilterActionApplyComplexFilters.prototype.doAction = function(dataProvider)
{
	return oFF.XPromise.create((resolve, reject) => {
		let queryModel = dataProvider.getQueryManager().getQueryModel();
		let filter = queryModel.getFilter();
		let dynamicFilter = filter.getDynamicFilter();
		let expression = oFF.QFactory.createFilterExpression(queryModel, filter);
		expression.deserializeFromElementExt(oFF.QModelFormat.INA_REPOSITORY_DELTA, this.m_dynamicFilterSerialization);
		expression.setPreserveOnRepoSerialization(true);
		let expressionRoot = expression.getFilterRootElement();
		if (oFF.isNull(expressionRoot))
		{
			resolve(this.newActionResult());
			return;
		}
		let dynamicRoot = dynamicFilter.getFilterRootElement();
		if (dynamicFilter.getModelCapabilities().supportsMultiComplexFilter())
		{
			if (expression.isCartesianProduct())
			{
				if (dynamicFilter.isComplexFilter())
				{
					dynamicFilter.getComplexRoot().add(dynamicRoot);
				}
				else
				{
					dynamicFilter.getCartesianProductWithDefault().addAll(expressionRoot);
				}
			}
			else
			{
				dynamicFilter.setComplexRoot(expressionRoot);
				dynamicFilter.getComplexRoot().add(dynamicRoot);
			}
		}
		else
		{
			let cartProduct = expression.isCartesianProduct() ? expressionRoot : oFF.QFilterUtil.convertComplexFilterToCartesianExt(expressionRoot, true);
			dynamicFilter.getCartesianProductWithDefault().addAll(cartProduct);
		}
		let result = this.newActionResult();
		result.getChangesBase().addChangedEventType(oFF.OlapDataProviderEventType.MODEL_CHANGE);
		resolve(result);
	});
};
oFF.OdpFilterActionApplyComplexFilters.prototype.getName = function()
{
	return oFF.OdpFilterActionApplyComplexFilters.NAME;
};
oFF.OdpFilterActionApplyComplexFilters.prototype.setTypedParameters = function(dynamicFilterSerialization)
{
	this.m_dynamicFilterSerialization = dynamicFilterSerialization;
};

oFF.OdpFilterActionRemoveSingleMemberFilter = function() {};
oFF.OdpFilterActionRemoveSingleMemberFilter.prototype = new oFF.DfOlapDataProviderActionWithNoResult();
oFF.OdpFilterActionRemoveSingleMemberFilter.prototype._ff_c = "OdpFilterActionRemoveSingleMemberFilter";

oFF.OdpFilterActionRemoveSingleMemberFilter.NAME = "removeSingleMemberFilter";
oFF.OdpFilterActionRemoveSingleMemberFilter.create = function()
{
	let obj = new oFF.OdpFilterActionRemoveSingleMemberFilter();
	obj.setupAction();
	return obj;
};
oFF.OdpFilterActionRemoveSingleMemberFilter.prototype.doAction = function(dataProvider)
{
	return oFF.XPromise.create((resolve, reject) => {
		let converter = oFF.OdpActionParameterConverter.create();
		let dimensionName = this.getParameter(0);
		if (oFF.XStringUtils.isNullOrEmpty(dimensionName))
		{
			reject(oFF.XError.create("Empty dimension name supplied"));
			return;
		}
		let comparisonOperator = converter.toComparisonOperator(this.getParameter(1));
		if (oFF.isNull(comparisonOperator))
		{
			reject(oFF.XError.create("Invalid comparison operator supplied"));
			return;
		}
		let memberName = this.getParameter(2);
		if (oFF.XStringUtils.isNullOrEmpty(memberName))
		{
			reject(oFF.XError.create("Empty member name supplied"));
			return;
		}
		let convenienceCommands = dataProvider.getQueryManager().getConvenienceCommands();
		let dimension = convenienceCommands.getDimension(dimensionName);
		if (oFF.isNull(dimension))
		{
			reject(oFF.XError.create(oFF.XStringUtils.concatenate3("Dimension with name '", dimensionName, "' does not exist")));
			return;
		}
		convenienceCommands.clearSingleMemberFilterByDimension(dimension, memberName, comparisonOperator);
		let result = this.newActionResult();
		result.getChangesBase().addChangedEventType(oFF.OlapDataProviderEventType.MODEL_CHANGE);
		resolve(result);
	});
};
oFF.OdpFilterActionRemoveSingleMemberFilter.prototype.getName = function()
{
	return oFF.OdpFilterActionRemoveSingleMemberFilter.NAME;
};
oFF.OdpFilterActionRemoveSingleMemberFilter.prototype.setTypedParameters = function(dimensionName, operator, memberName)
{
	let converter = oFF.OdpActionParameterConverter.create();
	let parameters = oFF.XList.create();
	parameters.add(dimensionName);
	parameters.add(converter.fromComparisonOperator(operator));
	parameters.add(memberName);
	this.setParameters(parameters);
};

oFF.OdpHierarchyActionActivateHierarchy = function() {};
oFF.OdpHierarchyActionActivateHierarchy.prototype = new oFF.DfOlapDataProviderActionWithNoResult();
oFF.OdpHierarchyActionActivateHierarchy.prototype._ff_c = "OdpHierarchyActionActivateHierarchy";

oFF.OdpHierarchyActionActivateHierarchy.NAME = "activateHierarchy";
oFF.OdpHierarchyActionActivateHierarchy.create = function()
{
	let obj = new oFF.OdpHierarchyActionActivateHierarchy();
	obj.setupAction();
	return obj;
};
oFF.OdpHierarchyActionActivateHierarchy.prototype.doAction = function(dataProvider)
{
	dataProvider.getCc().activateHierarchy(this.getParameter(0));
	dataProvider.getCc().refreshFieldContainerDisplayForDimension(this.getParameter(0), null);
	let result = this.newActionResult();
	result.getChangesBase().addChangedEventType(oFF.OlapDataProviderEventType.MODEL_CHANGE);
	return oFF.XPromise.resolve(result);
};
oFF.OdpHierarchyActionActivateHierarchy.prototype.getName = function()
{
	return oFF.OdpHierarchyActionActivateHierarchy.NAME;
};
oFF.OdpHierarchyActionActivateHierarchy.prototype.setTypedParameters = function(dimName)
{
	let parameters = oFF.XList.create();
	parameters.add(dimName);
	this.setParameters(parameters);
};

oFF.OdpHierarchyActionAssignHierarchy = function() {};
oFF.OdpHierarchyActionAssignHierarchy.prototype = new oFF.DfOlapDataProviderActionWithNoResult();
oFF.OdpHierarchyActionAssignHierarchy.prototype._ff_c = "OdpHierarchyActionAssignHierarchy";

oFF.OdpHierarchyActionAssignHierarchy.NAME = "assignHierarchy";
oFF.OdpHierarchyActionAssignHierarchy.create = function()
{
	let obj = new oFF.OdpHierarchyActionAssignHierarchy();
	obj.setupAction();
	return obj;
};
oFF.OdpHierarchyActionAssignHierarchy.prototype.doAction = function(dataProvider)
{
	dataProvider.getCc().assignHierarchy(this.getParameter(0), this.getParameter(1));
	let result = this.newActionResult();
	result.getChangesBase().addChangedEventType(oFF.OlapDataProviderEventType.MODEL_CHANGE);
	return oFF.XPromise.resolve(result);
};
oFF.OdpHierarchyActionAssignHierarchy.prototype.getName = function()
{
	return oFF.OdpHierarchyActionAssignHierarchy.NAME;
};
oFF.OdpHierarchyActionAssignHierarchy.prototype.setTypedParameters = function(dimName, hierarchyName)
{
	let parameters = oFF.XList.create();
	parameters.add(dimName);
	parameters.add(hierarchyName);
	this.setParameters(parameters);
};

oFF.OdpHierarchyActionDeactivateHierarchy = function() {};
oFF.OdpHierarchyActionDeactivateHierarchy.prototype = new oFF.DfOlapDataProviderActionWithNoResult();
oFF.OdpHierarchyActionDeactivateHierarchy.prototype._ff_c = "OdpHierarchyActionDeactivateHierarchy";

oFF.OdpHierarchyActionDeactivateHierarchy.NAME = "deactivateHierarchy";
oFF.OdpHierarchyActionDeactivateHierarchy.create = function()
{
	let obj = new oFF.OdpHierarchyActionDeactivateHierarchy();
	obj.setupAction();
	return obj;
};
oFF.OdpHierarchyActionDeactivateHierarchy.prototype.doAction = function(dataProvider)
{
	dataProvider.getCc().deactivateHierarchy(this.getParameter(0));
	dataProvider.getCc().refreshFieldContainerDisplayForDimension(this.getParameter(0), null);
	let result = this.newActionResult();
	result.getChangesBase().addChangedEventType(oFF.OlapDataProviderEventType.MODEL_CHANGE);
	return oFF.XPromise.resolve(result);
};
oFF.OdpHierarchyActionDeactivateHierarchy.prototype.getName = function()
{
	return oFF.OdpHierarchyActionDeactivateHierarchy.NAME;
};
oFF.OdpHierarchyActionDeactivateHierarchy.prototype.setTypedParameters = function(dimName)
{
	let parameters = oFF.XList.create();
	parameters.add(dimName);
	this.setParameters(parameters);
};

oFF.OdpHierarchyActionGetAssignedHierarchy = function() {};
oFF.OdpHierarchyActionGetAssignedHierarchy.prototype = new oFF.DfOlapDataProviderActionWithStringResult();
oFF.OdpHierarchyActionGetAssignedHierarchy.prototype._ff_c = "OdpHierarchyActionGetAssignedHierarchy";

oFF.OdpHierarchyActionGetAssignedHierarchy.NAME = "getAssignedHierarchy";
oFF.OdpHierarchyActionGetAssignedHierarchy.create = function()
{
	let obj = new oFF.OdpHierarchyActionGetAssignedHierarchy();
	obj.setupAction();
	return obj;
};
oFF.OdpHierarchyActionGetAssignedHierarchy.prototype.doAction = function(dataProvider)
{
	let dimensionName = this.getParameter(0);
	let assignedHierarchy = dataProvider.getCc().getAssignedHierarchy(dimensionName);
	let result = this.newActionResult();
	result.setReturnValue(assignedHierarchy);
	return oFF.XPromise.resolve(result);
};
oFF.OdpHierarchyActionGetAssignedHierarchy.prototype.getName = function()
{
	return oFF.OdpHierarchyActionGetAssignedHierarchy.NAME;
};
oFF.OdpHierarchyActionGetAssignedHierarchy.prototype.setTypedParameters = function(dimName)
{
	let parameters = oFF.XList.create();
	parameters.add(dimName);
	this.setParameters(parameters);
};

oFF.OdpHierarchyActionSetDrillLevel = function() {};
oFF.OdpHierarchyActionSetDrillLevel.prototype = new oFF.DfOlapDataProviderActionWithNoResult();
oFF.OdpHierarchyActionSetDrillLevel.prototype._ff_c = "OdpHierarchyActionSetDrillLevel";

oFF.OdpHierarchyActionSetDrillLevel.NAME = "setDrillLevel";
oFF.OdpHierarchyActionSetDrillLevel.create = function()
{
	let obj = new oFF.OdpHierarchyActionSetDrillLevel();
	obj.setupAction();
	return obj;
};
oFF.OdpHierarchyActionSetDrillLevel.prototype.doAction = function(dataProvider)
{
	dataProvider.getCc().setDimensionHierarchyDrillLevel(this.getParameter(0), oFF.XInteger.convertFromString(this.getParameter(1)));
	dataProvider.getCc().refreshFieldContainerDisplayForDimension(this.getParameter(0), null);
	let result = this.newActionResult();
	result.getChangesBase().addChangedEventType(oFF.OlapDataProviderEventType.MODEL_CHANGE);
	return oFF.XPromise.resolve(result);
};
oFF.OdpHierarchyActionSetDrillLevel.prototype.getName = function()
{
	return oFF.OdpHierarchyActionSetDrillLevel.NAME;
};
oFF.OdpHierarchyActionSetDrillLevel.prototype.setTypedParameters = function(dimName, drillLevel)
{
	let converter = oFF.OdpActionParameterConverter.create();
	let parameters = oFF.XList.create();
	parameters.add(dimName);
	parameters.add(converter.fromInteger(drillLevel));
	this.setParameters(parameters);
};

oFF.OdpHierarchyActionUnassignHierarchy = function() {};
oFF.OdpHierarchyActionUnassignHierarchy.prototype = new oFF.DfOlapDataProviderActionWithNoResult();
oFF.OdpHierarchyActionUnassignHierarchy.prototype._ff_c = "OdpHierarchyActionUnassignHierarchy";

oFF.OdpHierarchyActionUnassignHierarchy.NAME = "unassignHierarchy";
oFF.OdpHierarchyActionUnassignHierarchy.create = function()
{
	let obj = new oFF.OdpHierarchyActionUnassignHierarchy();
	obj.setupAction();
	return obj;
};
oFF.OdpHierarchyActionUnassignHierarchy.prototype.doAction = function(dataProvider)
{
	dataProvider.getCc().unassignHierarchy(this.getParameter(0));
	dataProvider.getCc().refreshFieldContainerDisplayForDimension(this.getParameter(0), null);
	let result = this.newActionResult();
	result.getChangesBase().addChangedEventType(oFF.OlapDataProviderEventType.MODEL_CHANGE);
	return oFF.XPromise.resolve(result);
};
oFF.OdpHierarchyActionUnassignHierarchy.prototype.getName = function()
{
	return oFF.OdpHierarchyActionUnassignHierarchy.NAME;
};
oFF.OdpHierarchyActionUnassignHierarchy.prototype.setTypedParameters = function(dimName)
{
	let parameters = oFF.XList.create();
	parameters.add(dimName);
	this.setParameters(parameters);
};

oFF.OdpPresentationActionAddResultSetField = function() {};
oFF.OdpPresentationActionAddResultSetField.prototype = new oFF.DfOlapDataProviderActionWithNoResult();
oFF.OdpPresentationActionAddResultSetField.prototype._ff_c = "OdpPresentationActionAddResultSetField";

oFF.OdpPresentationActionAddResultSetField.NAME = "addFieldToResultSet";
oFF.OdpPresentationActionAddResultSetField.create = function()
{
	let obj = new oFF.OdpPresentationActionAddResultSetField();
	obj.setupAction();
	return obj;
};
oFF.OdpPresentationActionAddResultSetField.prototype.doAction = function(dataProvider)
{
	let field = dataProvider.getCc().getField(this.getParameter(0));
	let dimension = oFF.isNull(field) ? null : field.getDimension();
	let attribute = oFF.isNull(field) ? null : field.getAttribute();
	let flt = oFF.isNull(dimension) ? null : dimension.getFieldLayoutType();
	if (flt === oFF.FieldLayoutType.FIELD_BASED && oFF.notNull(dimension))
	{
		dataProvider.getCc().addField(dimension.getDimensionType(), dimension.getName(), field.getPresentationType(), field.getName(), oFF.QContextType.RESULT_SET);
	}
	else if (oFF.notNull(attribute) && oFF.notNull(dimension))
	{
		dataProvider.getCc().addAttributeField(dimension.getDimensionType(), dimension.getName(), attribute.getName(), field.getPresentationType(), field.getName(), oFF.QContextType.RESULT_SET);
	}
	let result = this.newActionResult();
	result.getChangesBase().addChangedEventType(oFF.OlapDataProviderEventType.MODEL_CHANGE);
	return oFF.XPromise.resolve(result);
};
oFF.OdpPresentationActionAddResultSetField.prototype.getName = function()
{
	return oFF.OdpPresentationActionAddResultSetField.NAME;
};
oFF.OdpPresentationActionAddResultSetField.prototype.setTypedParameters = function(fieldName)
{
	let parameters = oFF.XList.create();
	parameters.add(fieldName);
	this.setParameters(parameters);
};

oFF.OdpPresentationActionRemoveResultSetField = function() {};
oFF.OdpPresentationActionRemoveResultSetField.prototype = new oFF.DfOlapDataProviderActionWithNoResult();
oFF.OdpPresentationActionRemoveResultSetField.prototype._ff_c = "OdpPresentationActionRemoveResultSetField";

oFF.OdpPresentationActionRemoveResultSetField.NAME = "removeFieldFromResultSet";
oFF.OdpPresentationActionRemoveResultSetField.create = function()
{
	let obj = new oFF.OdpPresentationActionRemoveResultSetField();
	obj.setupAction();
	return obj;
};
oFF.OdpPresentationActionRemoveResultSetField.prototype.doAction = function(dataProvider)
{
	let field = dataProvider.getCc().getField(this.getParameter(0));
	let dimension = oFF.isNull(field) ? null : field.getDimension();
	if (oFF.notNull(dimension))
	{
		let attribute = field.getAttribute();
		let flt = dimension.getFieldLayoutType();
		if (flt === oFF.FieldLayoutType.FIELD_BASED)
		{
			dataProvider.getCc().removeField(dimension.getDimensionType(), dimension.getName(), field.getPresentationType(), field.getName(), oFF.QContextType.RESULT_SET);
		}
		else if (oFF.notNull(attribute))
		{
			dataProvider.getCc().removeAttributeField(dimension.getDimensionType(), dimension.getName(), attribute.getName(), field.getPresentationType(), field.getName(), oFF.QContextType.RESULT_SET);
		}
	}
	let result = this.newActionResult();
	result.getChangesBase().addChangedEventType(oFF.OlapDataProviderEventType.MODEL_CHANGE);
	return oFF.XPromise.resolve(result);
};
oFF.OdpPresentationActionRemoveResultSetField.prototype.getName = function()
{
	return oFF.OdpPresentationActionRemoveResultSetField.NAME;
};
oFF.OdpPresentationActionRemoveResultSetField.prototype.setTypedParameters = function(fieldName)
{
	let parameters = oFF.XList.create();
	parameters.add(fieldName);
	this.setParameters(parameters);
};

oFF.OdpPresentationActionResetKeyViewToDefault = function() {};
oFF.OdpPresentationActionResetKeyViewToDefault.prototype = new oFF.DfOlapDataProviderActionWithNoResult();
oFF.OdpPresentationActionResetKeyViewToDefault.prototype._ff_c = "OdpPresentationActionResetKeyViewToDefault";

oFF.OdpPresentationActionResetKeyViewToDefault.NAME = "resetFieldContainerKeyViewToDefault";
oFF.OdpPresentationActionResetKeyViewToDefault.create = function()
{
	let obj = new oFF.OdpPresentationActionResetKeyViewToDefault();
	obj.setupAction();
	return obj;
};
oFF.OdpPresentationActionResetKeyViewToDefault.prototype.doAction = function(dataProvider)
{
	dataProvider.getCc().resetFieldContainerKeyViewToDefault(this.getParameter(0), this.getParameter(1));
	let result = this.newActionResult();
	result.getChangesBase().addChangedEventType(oFF.OlapDataProviderEventType.MODEL_CHANGE);
	return oFF.XPromise.resolve(result);
};
oFF.OdpPresentationActionResetKeyViewToDefault.prototype.getName = function()
{
	return oFF.OdpPresentationActionResetKeyViewToDefault.NAME;
};
oFF.OdpPresentationActionResetKeyViewToDefault.prototype.setTypedParameters = function(dimName, attrName)
{
	let parameters = oFF.XList.create();
	parameters.add(dimName);
	parameters.add(attrName);
	this.setParameters(parameters);
};

oFF.OdpPresentationActionResetTextViewToDefault = function() {};
oFF.OdpPresentationActionResetTextViewToDefault.prototype = new oFF.DfOlapDataProviderActionWithNoResult();
oFF.OdpPresentationActionResetTextViewToDefault.prototype._ff_c = "OdpPresentationActionResetTextViewToDefault";

oFF.OdpPresentationActionResetTextViewToDefault.NAME = "resetFieldContainerTextViewToDefault";
oFF.OdpPresentationActionResetTextViewToDefault.create = function()
{
	let obj = new oFF.OdpPresentationActionResetTextViewToDefault();
	obj.setupAction();
	return obj;
};
oFF.OdpPresentationActionResetTextViewToDefault.prototype.doAction = function(dataProvider)
{
	dataProvider.getCc().resetFieldContainerTextViewToDefault(this.getParameter(0), this.getParameter(1));
	let result = this.newActionResult();
	result.getChangesBase().addChangedEventType(oFF.OlapDataProviderEventType.MODEL_CHANGE);
	return oFF.XPromise.resolve(result);
};
oFF.OdpPresentationActionResetTextViewToDefault.prototype.getName = function()
{
	return oFF.OdpPresentationActionResetTextViewToDefault.NAME;
};
oFF.OdpPresentationActionResetTextViewToDefault.prototype.setTypedParameters = function(dimName, attrName)
{
	let parameters = oFF.XList.create();
	parameters.add(dimName);
	parameters.add(attrName);
	this.setParameters(parameters);
};

oFF.OdpPresentationActionSetDisplay = function() {};
oFF.OdpPresentationActionSetDisplay.prototype = new oFF.DfOlapDataProviderActionWithNoResult();
oFF.OdpPresentationActionSetDisplay.prototype._ff_c = "OdpPresentationActionSetDisplay";

oFF.OdpPresentationActionSetDisplay.NAME = "setFieldContainerDisplay";
oFF.OdpPresentationActionSetDisplay.create = function()
{
	let obj = new oFF.OdpPresentationActionSetDisplay();
	obj.setupAction();
	return obj;
};
oFF.OdpPresentationActionSetDisplay.prototype.doAction = function(dataProvider)
{
	let converter = oFF.OdpActionParameterConverter.create();
	dataProvider.getCc().setFieldContainerDisplay(this.getParameter(0), this.getParameter(1), converter.toFieldContainerDisplay(this.getParameter(2)));
	let result = this.newActionResult();
	result.getChangesBase().addChangedEventType(oFF.OlapDataProviderEventType.MODEL_CHANGE);
	return oFF.XPromise.resolve(result);
};
oFF.OdpPresentationActionSetDisplay.prototype.getName = function()
{
	return oFF.OdpPresentationActionSetDisplay.NAME;
};
oFF.OdpPresentationActionSetDisplay.prototype.setTypedParameters = function(dimName, attrName, fieldContainerDisplay)
{
	let converter = oFF.OdpActionParameterConverter.create();
	let parameters = oFF.XList.create();
	parameters.add(dimName);
	parameters.add(attrName);
	parameters.add(converter.fromFieldContainerDisplay(fieldContainerDisplay));
	this.setParameters(parameters);
};

oFF.OdpPresentationActionSetKeyDisplay = function() {};
oFF.OdpPresentationActionSetKeyDisplay.prototype = new oFF.DfOlapDataProviderActionWithNoResult();
oFF.OdpPresentationActionSetKeyDisplay.prototype._ff_c = "OdpPresentationActionSetKeyDisplay";

oFF.OdpPresentationActionSetKeyDisplay.NAME = "setFieldContainerKeyDisplay";
oFF.OdpPresentationActionSetKeyDisplay.create = function()
{
	let obj = new oFF.OdpPresentationActionSetKeyDisplay();
	obj.setupAction();
	return obj;
};
oFF.OdpPresentationActionSetKeyDisplay.prototype.doAction = function(dataProvider)
{
	let converter = oFF.OdpActionParameterConverter.create();
	dataProvider.getCc().setFieldContainerKeyDisplay(this.getParameter(0), this.getParameter(1), converter.toFieldContainerKeyDisplay(this.getParameter(2)));
	let result = this.newActionResult();
	result.getChangesBase().addChangedEventType(oFF.OlapDataProviderEventType.MODEL_CHANGE);
	return oFF.XPromise.resolve(result);
};
oFF.OdpPresentationActionSetKeyDisplay.prototype.getName = function()
{
	return oFF.OdpPresentationActionSetKeyDisplay.NAME;
};
oFF.OdpPresentationActionSetKeyDisplay.prototype.setTypedParameters = function(dimName, attrName, fieldContainerDisplay)
{
	let converter = oFF.OdpActionParameterConverter.create();
	let parameters = oFF.XList.create();
	parameters.add(dimName);
	parameters.add(attrName);
	parameters.add(converter.fromFieldContainerKeyDisplay(fieldContainerDisplay));
	this.setParameters(parameters);
};

oFF.OdpPresentationActionSetKeyView = function() {};
oFF.OdpPresentationActionSetKeyView.prototype = new oFF.DfOlapDataProviderActionWithNoResult();
oFF.OdpPresentationActionSetKeyView.prototype._ff_c = "OdpPresentationActionSetKeyView";

oFF.OdpPresentationActionSetKeyView.NAME = "setFieldContainerKeyView";
oFF.OdpPresentationActionSetKeyView.create = function()
{
	let obj = new oFF.OdpPresentationActionSetKeyView();
	obj.setupAction();
	return obj;
};
oFF.OdpPresentationActionSetKeyView.prototype.doAction = function(dataProvider)
{
	let converter = oFF.OdpActionParameterConverter.create();
	dataProvider.getCc().setFieldContainerKeyView(this.getParameter(0), this.getParameter(1), converter.toPresentationType(this.getParameter(2)));
	let result = this.newActionResult();
	result.getChangesBase().addChangedEventType(oFF.OlapDataProviderEventType.MODEL_CHANGE);
	return oFF.XPromise.resolve(result);
};
oFF.OdpPresentationActionSetKeyView.prototype.getName = function()
{
	return oFF.OdpPresentationActionSetKeyView.NAME;
};
oFF.OdpPresentationActionSetKeyView.prototype.setTypedParameters = function(dimName, attrName, presentationType)
{
	let converter = oFF.OdpActionParameterConverter.create();
	let parameters = oFF.XList.create();
	parameters.add(dimName);
	parameters.add(attrName);
	parameters.add(converter.fromPresentationType(presentationType));
	this.setParameters(parameters);
};

oFF.OdpPresentationActionSetTextView = function() {};
oFF.OdpPresentationActionSetTextView.prototype = new oFF.DfOlapDataProviderActionWithNoResult();
oFF.OdpPresentationActionSetTextView.prototype._ff_c = "OdpPresentationActionSetTextView";

oFF.OdpPresentationActionSetTextView.NAME = "setFieldContainerTextView";
oFF.OdpPresentationActionSetTextView.create = function()
{
	let obj = new oFF.OdpPresentationActionSetTextView();
	obj.setupAction();
	return obj;
};
oFF.OdpPresentationActionSetTextView.prototype.doAction = function(dataProvider)
{
	let converter = oFF.OdpActionParameterConverter.create();
	dataProvider.getCc().setFieldContainerTextView(this.getParameter(0), this.getParameter(1), converter.toPresentationType(this.getParameter(2)));
	let result = this.newActionResult();
	result.getChangesBase().addChangedEventType(oFF.OlapDataProviderEventType.MODEL_CHANGE);
	return oFF.XPromise.resolve(result);
};
oFF.OdpPresentationActionSetTextView.prototype.getName = function()
{
	return oFF.OdpPresentationActionSetTextView.NAME;
};
oFF.OdpPresentationActionSetTextView.prototype.setTypedParameters = function(dimName, attrName, presentationType)
{
	let converter = oFF.OdpActionParameterConverter.create();
	let parameters = oFF.XList.create();
	parameters.add(dimName);
	parameters.add(attrName);
	parameters.add(converter.fromPresentationType(presentationType));
	this.setParameters(parameters);
};

oFF.OdpPropertyActionSetValue = function() {};
oFF.OdpPropertyActionSetValue.prototype = new oFF.DfOlapDataProviderActionWithNoResult();
oFF.OdpPropertyActionSetValue.prototype._ff_c = "OdpPropertyActionSetValue";

oFF.OdpPropertyActionSetValue.NAME = "setProperty";
oFF.OdpPropertyActionSetValue.create = function()
{
	let obj = new oFF.OdpPropertyActionSetValue();
	obj.setupAction();
	return obj;
};
oFF.OdpPropertyActionSetValue.prototype.doAction = function(dataProvider)
{
	let propertyName = this.getParameter(0);
	let valueString = this.getParameter(1);
	let property = oFF.OlapDataProviderPropertyType.lookup(propertyName);
	let valueAccess = oFF.XValueAccess.createWithType(property.getValueType());
	valueAccess.parseString(valueString);
	let value = valueAccess.getValue();
	dataProvider.getProperties().setPropertyValue(propertyName, value);
	return oFF.XPromise.resolve(this.newActionResult());
};
oFF.OdpPropertyActionSetValue.prototype.getName = function()
{
	return oFF.OdpPropertyActionSetValue.NAME;
};
oFF.OdpPropertyActionSetValue.prototype.isQueryManagerNeeded = function()
{
	return false;
};
oFF.OdpPropertyActionSetValue.prototype.setTypedParameters = function(property, value)
{
	let parameters = oFF.XList.create();
	parameters.add(property.getName());
	parameters.add(value.getStringRepresentation());
	this.setParameters(parameters);
};

oFF.OdpQueryModelSetDataSourceText = function() {};
oFF.OdpQueryModelSetDataSourceText.prototype = new oFF.DfOlapDataProviderActionWithNoResult();
oFF.OdpQueryModelSetDataSourceText.prototype._ff_c = "OdpQueryModelSetDataSourceText";

oFF.OdpQueryModelSetDataSourceText.NAME = "setDataSourceText";
oFF.OdpQueryModelSetDataSourceText.create = function()
{
	let obj = new oFF.OdpQueryModelSetDataSourceText();
	obj.setupAction();
	return obj;
};
oFF.OdpQueryModelSetDataSourceText.prototype.doAction = function(dataProvider)
{
	return oFF.XPromise.create((resolve, reject) => {
		try
		{
			let queryModel = oFF.XObject.castToAny(dataProvider.getQueryManager().getQueryModel());
			queryModel.setText(this.getParameter(0));
			let result = this.newActionResult();
			result.getChangesBase().addChangedEventType(oFF.OlapDataProviderEventType.MODEL_CHANGE);
			resolve(result);
		}
		catch (e)
		{
			reject(oFF.XError.createWithThrowable(e));
		}
	});
};
oFF.OdpQueryModelSetDataSourceText.prototype.getName = function()
{
	return oFF.OdpQueryModelSetDataSourceText.NAME;
};
oFF.OdpQueryModelSetDataSourceText.prototype.setTypedParameters = function(dataSourceName)
{
	let parameters = oFF.XList.create();
	parameters.add(dataSourceName);
	this.setParameters(parameters);
};

oFF.OdpResultSetActionGetAscii = function() {};
oFF.OdpResultSetActionGetAscii.prototype = new oFF.DfOlapDataProviderActionWithStringResult();
oFF.OdpResultSetActionGetAscii.prototype._ff_c = "OdpResultSetActionGetAscii";

oFF.OdpResultSetActionGetAscii.NAME = "getAsciiResultSet";
oFF.OdpResultSetActionGetAscii.create = function()
{
	let obj = new oFF.OdpResultSetActionGetAscii();
	obj.setupAction();
	return obj;
};
oFF.OdpResultSetActionGetAscii.prototype.doAction = function(dataProvider)
{
	let queryManager = dataProvider.getQueryManager();
	return oFF.XPromise.create((resolve, reject) => {
		let maxRowCount = oFF.XInteger.convertFromString(this.getParameter(0));
		let maxColumnCount = oFF.XInteger.convertFromString(this.getParameter(1));
		let asciiGrid = queryManager.getConvenienceCommands().getAsciiResultSet(maxRowCount, maxColumnCount);
		let actionResult = this.newActionResult();
		actionResult.setReturnValue(asciiGrid);
		resolve(actionResult);
	});
};
oFF.OdpResultSetActionGetAscii.prototype.getName = function()
{
	return oFF.OdpResultSetActionGetAscii.NAME;
};
oFF.OdpResultSetActionGetAscii.prototype.setTypedParameters = function(maxRowCount, maxColumnCount)
{
	let parameters = oFF.XList.create();
	parameters.add(oFF.XInteger.convertToString(maxRowCount));
	parameters.add(oFF.XInteger.convertToString(maxColumnCount));
	this.setParameters(parameters);
};

oFF.OdpResultSetActionGetCsv = function() {};
oFF.OdpResultSetActionGetCsv.prototype = new oFF.DfOlapDataProviderActionWithStringResult();
oFF.OdpResultSetActionGetCsv.prototype._ff_c = "OdpResultSetActionGetCsv";

oFF.OdpResultSetActionGetCsv.NAME = "getCsvResultSet";
oFF.OdpResultSetActionGetCsv.create = function()
{
	let obj = new oFF.OdpResultSetActionGetCsv();
	obj.setupAction();
	return obj;
};
oFF.OdpResultSetActionGetCsv.prototype.doAction = function(dataProvider)
{
	let queryManager = dataProvider.getQueryManager();
	return oFF.XPromise.create((resolve, reject) => {
		let maxRowCount = oFF.XInteger.convertFromString(this.getParameter(0));
		let maxColumnCount = oFF.XInteger.convertFromString(this.getParameter(1));
		let csvGrid = queryManager.getConvenienceCommands().getCsvResultSet(maxRowCount, maxColumnCount);
		let actionResult = this.newActionResult();
		actionResult.setReturnValue(csvGrid);
		resolve(actionResult);
	});
};
oFF.OdpResultSetActionGetCsv.prototype.getName = function()
{
	return oFF.OdpResultSetActionGetCsv.NAME;
};
oFF.OdpResultSetActionGetCsv.prototype.setTypedParameters = function(maxRowCount, maxColumnCount)
{
	let parameters = oFF.XList.create();
	parameters.add(oFF.XInteger.convertToString(maxRowCount));
	parameters.add(oFF.XInteger.convertToString(maxColumnCount));
	this.setParameters(parameters);
};

oFF.OdpCancelVariableChangeAction = function() {};
oFF.OdpCancelVariableChangeAction.prototype = new oFF.DfOlapDataProviderActionWithNoResult();
oFF.OdpCancelVariableChangeAction.prototype._ff_c = "OdpCancelVariableChangeAction";

oFF.OdpCancelVariableChangeAction.NAME = "cancelVariableChange";
oFF.OdpCancelVariableChangeAction.create = function()
{
	let obj = new oFF.OdpCancelVariableChangeAction();
	obj.setupAction();
	return obj;
};
oFF.OdpCancelVariableChangeAction.prototype.doAction = function(dataProvider)
{
	let queryManager = dataProvider.getQueryManager();
	if (!queryManager.isSubmitNeeded())
	{
		dataProvider.getResultingBase().setAutoFetchSkippedBecauseConsumerChangesVariables(false);
		return oFF.XPromise.resolve(this.newActionResult());
	}
	return oFF.XPromise.create((resolve, reject) => {
		queryManager.cancelReInitVariables(queryManager.getSession().getDefaultSyncType(), oFF.VariableProcessorCallbackLambda.createSingleUse((result) => {
			dataProvider.getResultingBase().setAutoFetchSkippedBecauseConsumerChangesVariables(false);
			if (result.hasErrors())
			{
				reject(oFF.MessageUtil.condenseMessagesToSingleError(result));
			}
			else
			{
				resolve(this.newActionResult());
			}
		}), null);
	});
};
oFF.OdpCancelVariableChangeAction.prototype.getName = function()
{
	return oFF.OdpCancelVariableChangeAction.NAME;
};
oFF.OdpCancelVariableChangeAction.prototype.setTypedParameters = function() {};

oFF.OdpEndVariableChangeAction = function() {};
oFF.OdpEndVariableChangeAction.prototype = new oFF.DfOlapDataProviderActionWithNoResult();
oFF.OdpEndVariableChangeAction.prototype._ff_c = "OdpEndVariableChangeAction";

oFF.OdpEndVariableChangeAction.NAME = "endVariableChange";
oFF.OdpEndVariableChangeAction.create = function()
{
	let obj = new oFF.OdpEndVariableChangeAction();
	obj.setupAction();
	return obj;
};
oFF.OdpEndVariableChangeAction.prototype.doAction = function(dataProvider)
{
	return dataProvider.getConnectorBase().processClassicSubmitIfNecessary(null).onThenExt((empty) => {
		dataProvider.getResultingBase().setAutoFetchSkippedBecauseConsumerChangesVariables(false);
		let actionResult = this.newActionResult();
		actionResult.getChangesBase().addChangedEventType(oFF.OlapDataProviderEventType.MODEL_CHANGE);
		return actionResult;
	});
};
oFF.OdpEndVariableChangeAction.prototype.getName = function()
{
	return oFF.OdpEndVariableChangeAction.NAME;
};
oFF.OdpEndVariableChangeAction.prototype.setTypedParameters = function() {};

oFF.OdpStartVariableChangeAction = function() {};
oFF.OdpStartVariableChangeAction.prototype = new oFF.DfOlapDataProviderActionWithNoResult();
oFF.OdpStartVariableChangeAction.prototype._ff_c = "OdpStartVariableChangeAction";

oFF.OdpStartVariableChangeAction.NAME = "startVariableChange";
oFF.OdpStartVariableChangeAction.create = function()
{
	let obj = new oFF.OdpStartVariableChangeAction();
	obj.setupAction();
	return obj;
};
oFF.OdpStartVariableChangeAction.prototype.doAction = function(dataProvider)
{
	dataProvider.getResultingBase().setAutoFetchSkippedBecauseConsumerChangesVariables(true);
	return dataProvider.getConnectorBase().processReinitIfNecessary(null).onThenExt((empty) => {
		return this.newActionResult();
	});
};
oFF.OdpStartVariableChangeAction.prototype.getName = function()
{
	return oFF.OdpStartVariableChangeAction.NAME;
};
oFF.OdpStartVariableChangeAction.prototype.setTypedParameters = function() {};

oFF.OdpVizActionMoveDimensionToChartFeedAtIndex = function() {};
oFF.OdpVizActionMoveDimensionToChartFeedAtIndex.prototype = new oFF.DfOlapDataProviderActionWithNoResult();
oFF.OdpVizActionMoveDimensionToChartFeedAtIndex.prototype._ff_c = "OdpVizActionMoveDimensionToChartFeedAtIndex";

oFF.OdpVizActionMoveDimensionToChartFeedAtIndex.NAME = "moveDimensionToChartFeed";
oFF.OdpVizActionMoveDimensionToChartFeedAtIndex.create = function()
{
	let obj = new oFF.OdpVizActionMoveDimensionToChartFeedAtIndex();
	obj.setupAction();
	return obj;
};
oFF.OdpVizActionMoveDimensionToChartFeedAtIndex.prototype.doAction = function(dataProvider)
{
	let converter = oFF.OdpActionParameterConverter.create();
	let vizName = this.getParameter(0);
	let dimName = this.getParameter(1);
	let vizValueType = converter.toVisualizationValueType(this.getParameter(2));
	let index = converter.toInteger(this.getParameter(3));
	dataProvider.getCc().moveDimensionToChartFeedAtIndex(vizName, dimName, vizValueType, index);
	let result = this.newActionResult();
	result.getChangesBase().addChangedEventType(oFF.OlapDataProviderEventType.VISUALIZATION_CHANGE);
	result.getChangesBase().addChangedEventType(oFF.OlapDataProviderEventType.MODEL_CHANGE);
	return oFF.XPromise.resolve(result);
};
oFF.OdpVizActionMoveDimensionToChartFeedAtIndex.prototype.getName = function()
{
	return oFF.OdpVizActionMoveDimensionToChartFeedAtIndex.NAME;
};
oFF.OdpVizActionMoveDimensionToChartFeedAtIndex.prototype.setTypedParameters = function(visualizationName, dimensionName, valueType, index)
{
	let converter = oFF.OdpActionParameterConverter.create();
	let parameters = oFF.XList.create();
	parameters.add(visualizationName);
	parameters.add(dimensionName);
	parameters.add(converter.fromVisualizationValueType(valueType));
	parameters.add(converter.fromInteger(index));
	this.setParameters(parameters);
};

oFF.OdpVizActionRemoveDimensionFromChartFeed = function() {};
oFF.OdpVizActionRemoveDimensionFromChartFeed.prototype = new oFF.DfOlapDataProviderActionWithNoResult();
oFF.OdpVizActionRemoveDimensionFromChartFeed.prototype._ff_c = "OdpVizActionRemoveDimensionFromChartFeed";

oFF.OdpVizActionRemoveDimensionFromChartFeed.NAME = "removeDimensionFromChartFeed";
oFF.OdpVizActionRemoveDimensionFromChartFeed.create = function()
{
	let obj = new oFF.OdpVizActionRemoveDimensionFromChartFeed();
	obj.setupAction();
	return obj;
};
oFF.OdpVizActionRemoveDimensionFromChartFeed.prototype.doAction = function(dataProvider)
{
	let converter = oFF.OdpActionParameterConverter.create();
	let vizName = this.getParameter(0);
	let dimName = this.getParameter(1);
	let vizValueType = converter.toVisualizationValueType(this.getParameter(2));
	dataProvider.getCc().removeDimensionFromChartFeed(vizName, dimName, vizValueType);
	let result = this.newActionResult();
	result.getChangesBase().addChangedEventType(oFF.OlapDataProviderEventType.VISUALIZATION_CHANGE);
	result.getChangesBase().addChangedEventType(oFF.OlapDataProviderEventType.MODEL_CHANGE);
	return oFF.XPromise.resolve(result);
};
oFF.OdpVizActionRemoveDimensionFromChartFeed.prototype.getName = function()
{
	return oFF.OdpVizActionRemoveDimensionFromChartFeed.NAME;
};
oFF.OdpVizActionRemoveDimensionFromChartFeed.prototype.setTypedParameters = function(visualizationName, dimensionName, valueType)
{
	let converter = oFF.OdpActionParameterConverter.create();
	let parameters = oFF.XList.create();
	parameters.add(visualizationName);
	parameters.add(dimensionName);
	parameters.add(converter.fromVisualizationValueType(valueType));
	this.setParameters(parameters);
};

oFF.OlapDataProviderCalcViewRPCHandler = function() {};
oFF.OlapDataProviderCalcViewRPCHandler.prototype = new oFF.SyncActionExt();
oFF.OlapDataProviderCalcViewRPCHandler.prototype._ff_c = "OlapDataProviderCalcViewRPCHandler";

oFF.OlapDataProviderCalcViewRPCHandler.create = function(application, connectionName, requestString, extendedPath, context, listener, customIdentifier)
{
	let handler = new oFF.OlapDataProviderCalcViewRPCHandler();
	handler.m_connectionName = connectionName;
	handler.m_application = application;
	handler.m_requestString = requestString;
	handler.m_extendedPath = extendedPath;
	handler.setupAction(application.getDefaultSyncType(), listener, customIdentifier, context);
	return handler;
};
oFF.OlapDataProviderCalcViewRPCHandler.prototype.m_application = null;
oFF.OlapDataProviderCalcViewRPCHandler.prototype.m_connectionName = null;
oFF.OlapDataProviderCalcViewRPCHandler.prototype.m_extendedPath = null;
oFF.OlapDataProviderCalcViewRPCHandler.prototype.m_requestString = null;
oFF.OlapDataProviderCalcViewRPCHandler.prototype.callListener = function(extResult, listener, data, customIdentifier)
{
	listener.onRPCResponse(extResult, extResult.getData());
};
oFF.OlapDataProviderCalcViewRPCHandler.prototype.onFunctionExecuted = function(extResult, response, customIdentifier)
{
	this.addAllMessages(extResult);
	if (extResult.getData() !== null)
	{
		this.setData(extResult.getData().getRootElement());
	}
	this.endSync();
};
oFF.OlapDataProviderCalcViewRPCHandler.prototype.processSynchronization = function(syncType)
{
	let systemDescription = this.m_application.getSystemLandscape().getSystemDescription(this.m_connectionName);
	if (oFF.notNull(systemDescription))
	{
		let connection = this.m_application.getConnectionPool().getConnection(this.m_connectionName);
		let systemURL = connection.getSystemDescription().getUrl();
		let fullURL = oFF.XStringUtils.concatenate2(systemURL, this.m_extendedPath);
		let urlBase = oFF.XUri.createFromUrl(fullURL);
		this.sendRequest(syncType, urlBase);
		return true;
	}
	return false;
};
oFF.OlapDataProviderCalcViewRPCHandler.prototype.sendRequest = function(syncType, serviceUri)
{
	let connection = this.m_application.getConnectionPool().getConnection(this.m_connectionName);
	let _function = connection.newRpcFunctionByUri(serviceUri);
	let serviceRequest = _function.getRpcRequest();
	serviceRequest.setMethod(oFF.HttpRequestMethod.HTTP_GET);
	serviceRequest.setRequestContentType(oFF.ContentType.APPLICATION_JSON);
	let jsonParser = oFF.JsonParserFactory.newInstance();
	if (oFF.XStringUtils.isNotNullAndNotEmpty(this.m_requestString))
	{
		let element = jsonParser.parse(this.m_requestString);
		serviceRequest.setRequestStructure(element);
		serviceRequest.setMethod(oFF.HttpRequestMethod.HTTP_POST);
	}
	_function.processFunctionExecution(syncType, this, null);
};

oFF.DataProviderFileSystem = function() {};
oFF.DataProviderFileSystem.prototype = new oFF.DfXFileSystemBasic();
oFF.DataProviderFileSystem.prototype._ff_c = "DataProviderFileSystem";

oFF.DataProviderFileSystem.create = function(process)
{
	let newObj = new oFF.DataProviderFileSystem();
	newObj.setupProcessContext(process);
	return newObj;
};
oFF.DataProviderFileSystem.prototype.getDataProviderFolderName = function(uri)
{
	let previous = null;
	let current = uri;
	while (!oFF.XString.isEqual(current.getPath(), this.getRootDirectoryUri().getPath()))
	{
		previous = current;
		current = oFF.XUri.createParent(current);
	}
	return oFF.notNull(previous) ? previous.getPathContainer().getPathNames().get(0) : null;
};
oFF.DataProviderFileSystem.prototype.getProtocolType = function()
{
	return oFF.ProtocolType.FS_DP;
};
oFF.DataProviderFileSystem.prototype.isDataProviderFolder = function(uri)
{
	let parent = oFF.XUri.createParent(uri);
	return oFF.XString.isEqual(parent.getPath(), this.getRootDirectoryUri().getPath());
};
oFF.DataProviderFileSystem.prototype.newFile = function(process, uri)
{
	let path = uri.getPath();
	if (oFF.XString.isEqual(path, this.getRootDirectoryUri().getPath()))
	{
		return oFF.DataProviderRootFolder.create(process, this, uri);
	}
	let dpName = this.getDataProviderFolderName(uri);
	let isFolder = this.isDataProviderFolder(uri);
	let dp = this.getProcess().getDataProviderPool().getDataProviderByName(dpName);
	if (oFF.isNull(dp))
	{
		throw oFF.XException.createRuntimeException(oFF.XStringUtils.concatenate2("file system could not find data provider under: ", uri.getPath()));
	}
	return oFF.DataProviderFile.create(dp, process, this, uri, isFolder);
};
oFF.DataProviderFileSystem.prototype.setupProcessContext = function(process)
{
	oFF.DfXFileSystemBasic.prototype.setupProcessContext.call( this , process);
};

oFF.SubSysDataProviderFileSystem = function() {};
oFF.SubSysDataProviderFileSystem.prototype = new oFF.DfSubSysFilesystem();
oFF.SubSysDataProviderFileSystem.prototype._ff_c = "SubSysDataProviderFileSystem";

oFF.SubSysDataProviderFileSystem.DEFAULT_PROGRAM_NAME = "@SubSys.FileSystem.fsdp";
oFF.SubSysDataProviderFileSystem.prototype.m_fs = null;
oFF.SubSysDataProviderFileSystem.prototype.getFileSystem = function(protocolType)
{
	return this.m_fs;
};
oFF.SubSysDataProviderFileSystem.prototype.getProgramName = function()
{
	return oFF.SubSysDataProviderFileSystem.DEFAULT_PROGRAM_NAME;
};
oFF.SubSysDataProviderFileSystem.prototype.getProtocolType = function()
{
	return oFF.ProtocolType.FS_DP;
};
oFF.SubSysDataProviderFileSystem.prototype.newProgram = function()
{
	let prg = new oFF.SubSysDataProviderFileSystem();
	prg.setup();
	return prg;
};
oFF.SubSysDataProviderFileSystem.prototype.runProcess = function()
{
	let process = this.getProcess();
	this.m_fs = oFF.DataProviderFileSystem.create(process);
	this.activateSubSystem(null, oFF.SubSystemStatus.ACTIVE);
	return false;
};

oFF.DataProviderRootFolderFetchChildrenAction = function() {};
oFF.DataProviderRootFolderFetchChildrenAction.prototype = new oFF.SyncActionExt();
oFF.DataProviderRootFolderFetchChildrenAction.prototype._ff_c = "DataProviderRootFolderFetchChildrenAction";

oFF.DataProviderRootFolderFetchChildrenAction.createAndRun = function(syncType, dpFile, listener, customIdentifier)
{
	let object = new oFF.DataProviderRootFolderFetchChildrenAction();
	object.setData(dpFile);
	object.setupActionAndRun(syncType, listener, customIdentifier, dpFile);
	return object;
};
oFF.DataProviderRootFolderFetchChildrenAction.prototype.callListener = function(extResult, listener, data, customIdentifier)
{
	listener.onHttpFileProcessed(extResult, data, customIdentifier);
};
oFF.DataProviderRootFolderFetchChildrenAction.prototype.getRootFolderChildren = function(file)
{
	let children = oFF.XList.create();
	let dataProviderPool = this.getProcess().getDataProviderPool();
	let rootUri = file.getProviderFileSystem().getRootDirectoryUri();
	let allDataProviderNames = dataProviderPool.getAllDataProviderNames();
	for (let i = 0; i < allDataProviderNames.size(); i++)
	{
		let dataProviderName = allDataProviderNames.get(i);
		let dpUri = oFF.XUri.createChildDir(rootUri, dataProviderName);
		let dp = this.getProcess().getDataProviderPool().getDataProviderByName(dataProviderName);
		let dataProviderFolder = oFF.DataProviderFile.create(dp, this.getProcess(), file.getProviderFileSystem(), dpUri, true);
		children.add(dataProviderFolder);
	}
	return children;
};
oFF.DataProviderRootFolderFetchChildrenAction.prototype.processSynchronization = function(syncType)
{
	let file = this.getActionContext();
	let rootFolderChildren = this.getRootFolderChildren(file);
	file.setProviderChildFiles(rootFolderChildren, rootFolderChildren.size());
	return false;
};

oFF.DfDataProviderFileAction = function() {};
oFF.DfDataProviderFileAction.prototype = new oFF.SyncActionExt();
oFF.DfDataProviderFileAction.prototype._ff_c = "DfDataProviderFileAction";

oFF.DfDataProviderFileAction.prototype.callListener = function(extResult, listener, data, customIdentifier)
{
	listener.onHttpFileProcessed(extResult, data, customIdentifier);
};

oFF.OlapDataProviderActionParameters = function() {};
oFF.OlapDataProviderActionParameters.prototype = new oFF.XProperties();
oFF.OlapDataProviderActionParameters.prototype._ff_c = "OlapDataProviderActionParameters";

oFF.OlapDataProviderActionParameters.createFromExisting = function(properties)
{
	let obj = new oFF.OlapDataProviderActionParameters();
	obj.setupExt(null, null);
	obj.putAll(properties);
	return obj;
};
oFF.OlapDataProviderActionParameters.createParams = function()
{
	let obj = new oFF.OlapDataProviderActionParameters();
	obj.setupExt(null, null);
	return obj;
};
oFF.OlapDataProviderActionParameters.prototype.getAxisType = function()
{
	return oFF.AxisType.lookup(this.getStringByKey(oFF.OlapDataProviderActionConstants.PARAM_AXIS_TYPE_NAME));
};
oFF.OlapDataProviderActionParameters.prototype.getChartType = function()
{
	return oFF.ChartType.lookup(this.getStringByKey(oFF.OlapDataProviderActionConstants.PARAM_CHART_TYPE_NAME));
};
oFF.OlapDataProviderActionParameters.prototype.getComparisonOperator = function()
{
	let comparisonOperatorString = this.getStringByKey(oFF.OlapDataProviderActionConstants.PARAM_COMPARISON_OPERATOR);
	return oFF.notNull(comparisonOperatorString) ? oFF.ComparisonOperator.lookup(comparisonOperatorString) : null;
};
oFF.OlapDataProviderActionParameters.prototype.getDimensionName = function()
{
	return this.getStringByKey(oFF.OlapDataProviderActionConstants.PARAM_DIMENSION_NAME);
};
oFF.OlapDataProviderActionParameters.prototype.getMemberName = function()
{
	return this.getStringByKey(oFF.OlapDataProviderActionConstants.PARAM_MEMBER_NAME);
};
oFF.OlapDataProviderActionParameters.prototype.getProtocolBindingType = function()
{
	return oFF.ProtocolBindingType.lookup(this.getStringByKey(oFF.OlapDataProviderActionConstants.PARAM_PROTOCOL_BINDING_TYPE));
};
oFF.OlapDataProviderActionParameters.prototype.getVisualizationName = function()
{
	return this.getStringByKey(oFF.OlapDataProviderActionConstants.PARAM_VIZ_NAME);
};
oFF.OlapDataProviderActionParameters.prototype.getVisualizationType = function()
{
	return oFF.VisualizationType.lookup(this.getStringByKey(oFF.OlapDataProviderActionConstants.PARAM_VIZ_TYPE_NAME));
};
oFF.OlapDataProviderActionParameters.prototype.setAxisType = function(axisType)
{
	if (oFF.notNull(axisType))
	{
		this.putString(oFF.OlapDataProviderActionConstants.PARAM_AXIS_TYPE_NAME, axisType.getName());
	}
};
oFF.OlapDataProviderActionParameters.prototype.setChartType = function(chartType)
{
	if (oFF.notNull(chartType))
	{
		this.putString(oFF.OlapDataProviderActionConstants.PARAM_CHART_TYPE_NAME, chartType.getName());
	}
};
oFF.OlapDataProviderActionParameters.prototype.setComparisonOperator = function(comparisonOperator)
{
	this.putString(oFF.OlapDataProviderActionConstants.PARAM_COMPARISON_OPERATOR, comparisonOperator);
};
oFF.OlapDataProviderActionParameters.prototype.setDimensionName = function(dimensionName)
{
	this.putString(oFF.OlapDataProviderActionConstants.PARAM_DIMENSION_NAME, dimensionName);
};
oFF.OlapDataProviderActionParameters.prototype.setMemberName = function(memberName)
{
	this.putString(oFF.OlapDataProviderActionConstants.PARAM_MEMBER_NAME, memberName);
};
oFF.OlapDataProviderActionParameters.prototype.setProtocolBindingType = function(bindingType)
{
	if (oFF.notNull(bindingType))
	{
		this.putString(oFF.OlapDataProviderActionConstants.PARAM_PROTOCOL_BINDING_TYPE, bindingType.getName());
	}
};
oFF.OlapDataProviderActionParameters.prototype.setVisualizationName = function(vizName)
{
	this.putString(oFF.OlapDataProviderActionConstants.PARAM_VIZ_NAME, vizName);
};
oFF.OlapDataProviderActionParameters.prototype.setVisualizationType = function(vizType)
{
	if (oFF.notNull(vizType))
	{
		this.putString(oFF.OlapDataProviderActionConstants.PARAM_VIZ_TYPE_NAME, vizType.getName());
	}
};

oFF.DataProviderFileCommandAction = function() {};
oFF.DataProviderFileCommandAction.prototype = new oFF.DfDataProviderFileAction();
oFF.DataProviderFileCommandAction.prototype._ff_c = "DataProviderFileCommandAction";

oFF.DataProviderFileCommandAction.createAndRun = function(syncType, dpFile, listener, customIdentifier, type, command)
{
	let object = new oFF.DataProviderFileCommandAction();
	object.m_command = command;
	object.setData(dpFile);
	object.setupActionAndRun(syncType, listener, customIdentifier, dpFile);
	return object;
};
oFF.DataProviderFileCommandAction.prototype.m_command = null;
oFF.DataProviderFileCommandAction.prototype.processSynchronization = function(syncType)
{
	let file = this.getActionContext();
	let fileContent = file.getProviderContent();
	if (oFF.isNull(fileContent) || fileContent.getObject() === null)
	{
		this.addError(0, "DataProvider file has no content");
		return false;
	}
	let dataProvider = fileContent.getObject();
	dataProvider.getActions().executeActionByName(this.m_command, oFF.XList.create()).onFinally(this.endSync.bind(this));
	return true;
};

oFF.DataProviderFileFetchChildrenAction = function() {};
oFF.DataProviderFileFetchChildrenAction.prototype = new oFF.DfDataProviderFileAction();
oFF.DataProviderFileFetchChildrenAction.prototype._ff_c = "DataProviderFileFetchChildrenAction";

oFF.DataProviderFileFetchChildrenAction.createAndRun = function(syncType, dpFile, listener, customIdentifier)
{
	let object = new oFF.DataProviderFileFetchChildrenAction();
	object.setData(dpFile);
	object.setupActionAndRun(syncType, listener, customIdentifier, dpFile);
	return object;
};
oFF.DataProviderFileFetchChildrenAction.prototype.processSynchronization = function(syncType)
{
	let file = this.getActionContext();
	let fs = file.getProviderFileSystem();
	if (file.isDataProviderFolder())
	{
		let dataProvider = file.getDataProvider();
		let files = oFF.XList.create();
		files.add(oFF.DataProviderFile.create(dataProvider, this.getProcess(), fs, oFF.XUri.createChildFile(file.getUri(), oFF.DataProviderFile.DIMENSIONS_FILE), false));
		files.add(oFF.DataProviderFile.create(dataProvider, this.getProcess(), fs, oFF.XUri.createChildFile(file.getUri(), oFF.DataProviderFile.RESULT_SET_FILE), false));
		file.setProviderChildFiles(files, files.size());
	}
	return false;
};

oFF.DataProviderFileFetchMetadataAction = function() {};
oFF.DataProviderFileFetchMetadataAction.prototype = new oFF.DfDataProviderFileAction();
oFF.DataProviderFileFetchMetadataAction.prototype._ff_c = "DataProviderFileFetchMetadataAction";

oFF.DataProviderFileFetchMetadataAction.createAndRun = function(syncType, dpFile, listener, customIdentifier)
{
	let object = new oFF.DataProviderFileFetchMetadataAction();
	object.setData(dpFile);
	object.setupActionAndRun(syncType, listener, customIdentifier, dpFile);
	return object;
};
oFF.DataProviderFileFetchMetadataAction.prototype.processSynchronization = function(syncType)
{
	return false;
};

oFF.DataProviderFileLoadAction = function() {};
oFF.DataProviderFileLoadAction.prototype = new oFF.DfDataProviderFileAction();
oFF.DataProviderFileLoadAction.prototype._ff_c = "DataProviderFileLoadAction";

oFF.DataProviderFileLoadAction.createAndRun = function(syncType, dpFile, listener, customIdentifier)
{
	let object = new oFF.DataProviderFileLoadAction();
	object.setData(dpFile);
	object.setupActionAndRun(syncType, listener, customIdentifier, dpFile);
	return object;
};
oFF.DataProviderFileLoadAction.prototype.loadDimensions = function()
{
	let file = this.getActionContext();
	let dp = file.getDataProvider();
	dp.getOrCreateQueryManager().onThen((queryManager) => {
		let dimensionNames = queryManager.getQueryModel().getDimensionNames();
		let buffer = oFF.XStringBuffer.create();
		oFF.XCollectionUtils.forEach(dimensionNames, (name) => {
			buffer.appendLine(name);
		});
		let content = oFF.XContent.createStringContent(oFF.ContentType.TEXT, buffer.toString());
		file.setProviderFileContent(content);
		this.endSync();
	});
};
oFF.DataProviderFileLoadAction.prototype.loadResultSet = function()
{
	let file = this.getActionContext();
	let dp = file.getDataProvider();
	dp.getActions().getResultSetActions().getAsciiResultSet(-1, -1).onThen((asciiRS) => {
		let rsContent = oFF.XContent.createStringContent(oFF.ContentType.TEXT, asciiRS);
		file.setProviderFileContent(rsContent);
		this.endSync();
	});
};
oFF.DataProviderFileLoadAction.prototype.processSynchronization = function(syncType)
{
	let file = this.getActionContext();
	file.setProviderIsExisting(true);
	if (oFF.XString.isEqual(file.getName(), oFF.DataProviderFile.DIMENSIONS_FILE))
	{
		this.loadDimensions();
	}
	else if (oFF.XString.isEqual(file.getName(), oFF.DataProviderFile.RESULT_SET_FILE))
	{
		this.loadResultSet();
	}
	return true;
};

oFF.OlapDataProviderModule = function() {};
oFF.OlapDataProviderModule.prototype = new oFF.DfModule();
oFF.OlapDataProviderModule.prototype._ff_c = "OlapDataProviderModule";

oFF.OlapDataProviderModule.s_module = null;
oFF.OlapDataProviderModule.getInstance = function()
{
	if (oFF.isNull(oFF.OlapDataProviderModule.s_module))
	{
		oFF.DfModule.checkInitialized(oFF.DataProviderApiModule.getInstance());
		oFF.DfModule.checkInitialized(oFF.OlapApiModule.getInstance());
		oFF.OlapDataProviderModule.s_module = oFF.DfModule.startExt(new oFF.OlapDataProviderModule());
		oFF.OlapDataProviderState.staticSetup();
		oFF.OlapDataProviderEventType.staticSetupOlapEventType();
		oFF.OlapDataProviderPropertyType.staticSetup();
		oFF.OlapDataProviderResultDataFetchStep.staticSetup();
		oFF.OlapDataProviderFactory.staticSetup();
		oFF.OlapDataProviderActionCollectionRegistry.staticSetup();
		oFF.OlapDataProviderActionRegistry.staticSetup();
		oFF.OlapDataProviderModelState.staticSetup();
		oFF.OlapDataProviderVisualizationFillStrategy.staticSetup();
		oFF.OlapDataProviderFileType.staticSetup();
		oFF.ProgramRegistry.setProgramFactory(new oFF.SubSysDataProviderPool());
		oFF.ProgramRegistry.setProgramFactory(new oFF.SubSysDataProviderFileSystem());
		oFF.ProgramRegistry.setProgramFactory(new oFF.OlapDataProviderProgram());
		oFF.CoPropertyFactory.registerPropertyTypeClass(oFF.DataProviderActionParameterType.DATA_PROVIDER_PROPERTY, oFF.XClass.create(oFF.OdpActionParameterPropertyType));
		oFF.CoPropertyFactory.registerPropertyTypeClass(oFF.DataProviderActionParameterType.AXIS_TYPE, oFF.XClass.create(oFF.OdpActionParameterAxisType));
		oFF.CoPropertyFactory.registerPropertyTypeClass(oFF.DataProviderActionParameterType.CHART_TYPE, oFF.XClass.create(oFF.OdpActionParameterChartType));
		oFF.CoPropertyFactory.registerPropertyTypeClass(oFF.DataProviderActionParameterType.CHART_ORIENTATION, oFF.XClass.create(oFF.OdpActionParameterChartOrientation));
		oFF.CoPropertyFactory.registerPropertyTypeClass(oFF.DataProviderActionParameterType.COMPARISON_OPERATOR, oFF.XClass.create(oFF.OdpActionParameterComparisonOperator));
		oFF.CoPropertyFactory.registerPropertyTypeClass(oFF.DataProviderActionParameterType.DIMENSION, oFF.XClass.create(oFF.OdpActionParameterDimension));
		oFF.CoPropertyFactory.registerPropertyTypeClass(oFF.DataProviderActionParameterType.DIMENSION_MEMBER, oFF.XClass.create(oFF.OdpActionParameterDimensionMember));
		oFF.CoPropertyFactory.registerPropertyTypeClass(oFF.DataProviderActionParameterType.MEASURE_MEMBER, oFF.XClass.create(oFF.OdpActionParameterMeasureMember));
		oFF.CoPropertyFactory.registerPropertyTypeClass(oFF.DataProviderActionParameterType.FIELD, oFF.XClass.create(oFF.OdpActionParameterField));
		oFF.CoPropertyFactory.registerPropertyTypeClass(oFF.DataProviderActionParameterType.PROTOCOL_BINDING_TYPE, oFF.XClass.create(oFF.OdpActionParameterProtocolBindingType));
		oFF.CoPropertyFactory.registerPropertyTypeClass(oFF.DataProviderActionParameterType.VISUALIZATION_TYPE, oFF.XClass.create(oFF.OdpActionParameterVisualizationType));
		oFF.CoPropertyFactory.registerPropertyTypeClass(oFF.DataProviderActionParameterType.VISUALIZATION_VALUE_TYPE, oFF.XClass.create(oFF.OdpActionParameterVisualizationValueType));
		oFF.CoPropertyFactory.registerPropertyTypeClass(oFF.DataProviderActionParameterType.MEMBER_READ_MODE, oFF.XClass.create(oFF.OdpActionParameterMemberReadMode));
		oFF.CoPropertyFactory.registerPropertyTypeClass(oFF.DataProviderActionParameterType.ZERO_SUPPRESSION_TYPE, oFF.XClass.create(oFF.OdpActionParameterZeroSuppressionType));
		oFF.CoPropertyFactory.registerPropertyTypeClass(oFF.DataProviderActionParameterType.SORT_DIRECTION, oFF.XClass.create(oFF.OdpActionParameterSortDirection));
		oFF.CoPropertyFactory.registerPropertyTypeClass(oFF.DataProviderActionParameterType.FILTER_COMPONENT_TYPE, oFF.XClass.create(oFF.OdpActionParameterFilterComponentType));
		oFF.CoPropertyFactory.registerPropertyTypeClass(oFF.DataProviderActionParameterType.SET_SIGN, oFF.XClass.create(oFF.OdpActionParameterSetSign));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpAnalysisActionGetQueryMetadata));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpAxisActionMoveDimensionAfter));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpAxisActionMoveDimensionBefore));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpAxisActionMoveDimensionToAxis));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpAxisActionMoveDimensionToColumns));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpAxisActionMoveDimensionToRows));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpAxisActionRemoveDimension));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpAxisActionSwapAxis));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpAxisActionSwapDimensions));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpFilterActionAddNewElement));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpFilterActionAddNewOperation));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpFilterActionAddSingleMemberFilter));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpFilterActionCanElementHaveChildren));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpFilterActionCanElementHaveOperations));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpFilterActionClearElementChildren));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpFilterActionGetElementChildren));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpFilterActionGetElementType));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpFilterActionGetLayers));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpFilterActionIsOperation));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpFilterActionRemoveElement));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpFilterActionRemoveSingleMemberFilter));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpFilterActionSetElementField));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpFilterActionSetElementHierarchy));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpFilterActionSetNewRootElement));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpFilterActionSetOperationOperand));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpFilterActionSetOperationOperator));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpFilterActionSetOperationSign));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpFilterActionSetSimpleEqualFilterList));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpHierarchyActionActivateHierarchy));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpHierarchyActionAssignHierarchy));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpHierarchyActionDeactivateHierarchy));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpHierarchyActionGetAssignedHierarchy));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpHierarchyActionIsHierarchyActive));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpHierarchyActionIsHierarchyAssigned));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpHierarchyActionSetDrillLevel));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpHierarchyActionUnassignHierarchy));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpLifecycleActionConnect));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpLifecycleActionConnectToSystemSimple));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpLifecycleActionDisconnect));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpLifecycleActionReconnect));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpLifecycleActionRelease));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpLifecycleActionClone));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpPresentationActionAddResultSetField));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpPresentationActionGetAvailableDisplays));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpPresentationActionGetAvailableKeyDisplays));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpPresentationActionGetAvailableKeyViews));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpPresentationActionGetAvailableTextViews));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpPresentationActionGetDefaultKeyDisplay));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpPresentationActionGetDefaultKeyView));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpPresentationActionGetDefaultTextView));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpPresentationActionGetDisplay));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpPresentationActionGetKeyDisplay));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpPresentationActionGetKeyView));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpPresentationActionGetTextView));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpPresentationActionIsFieldInResultSet));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpPresentationActionIsKeyViewActive));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpPresentationActionIsKeyViewDefault));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpPresentationActionIsKeyViewSupported));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpPresentationActionIsTextViewActive));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpPresentationActionIsTextViewDefault));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpPresentationActionIsTextViewSupported));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpPresentationActionRemoveResultSetField));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpPresentationActionResetKeyViewToDefault));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpPresentationActionResetTextViewToDefault));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpPresentationActionSetDisplay));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpPresentationActionSetKeyDisplay));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpPresentationActionSetKeyView));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpPresentationActionSetTextView));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpPropertyActionGetValue));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpPropertyActionListAll));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpPropertyActionSetValue));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpQueryModelGetAccountMembers));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpQueryModelGetDimensions));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpQueryModelGetMeasureMembers));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpQueryModelGetSecondaryStructureMembers));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpQueryModelSetDataSourceText));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpActionGetCurrentResultSetReadMode));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpActionGetSupportedResultSetReadModes));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpActionSetResultSetReadMode));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpResultSetActionFetchNewResultSet));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpResultSetActionGetAscii));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpResultSetActionGetCsv));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpResultSetActionGetGridTile));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpSerializationActionExportInsightInformation));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpSerializationActionExportRepository));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpSerializationActionImportRepository));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpGetCurrentSuppressionType));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpGetSupportedSuppressionTypes));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpSetResultSetSuppressionType));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpTotalsGetPosition));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpTotalsGetVisibility));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpTotalsSetPosition));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpTotalsSetVisibility));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpCancelVariableChangeAction));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpEndVariableChangeAction));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpStartVariableChangeAction));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpVizActionAddDatapointVariableValue));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpVizActionAddMemberToTypedValueSelection));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpVizActionAddVisualizationVariableValue));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpVizActionClearAllTypedValueSelections));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpVizActionClearDatapointVariableValue));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpVizActionClearMemberRestrictions));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpVizActionClearMemberRestrictionsForDimension));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpVizActionClearSelectionPath));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpVizActionClearSelectionPathElementForDimension));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpVizActionClearTypedValueSelectionsForType));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpVizActionClearVisualizationVariableValue));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpVizActionCreateVizDefinition));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpVizActionGetActiveVizDefinition));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpVizActionGetAllVisualizationNames));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpVizActionGetAllVisualizations));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpVizActionGetChartColorPalette));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpVizActionGetChartOrientation));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpVizActionGetDimensionsInChartFeed));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpVizActionGetMembersForDimensionInTypedValueSelection));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpVizActionGetMembersInTypedValueSelection));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpVizActionGetOrCreateVizDefinition));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpVizActionGetVisualizationChartType));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpVizActionMoveDimensionToChartFeedAtIndex));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpVizActionPutMemberRestriction));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpVizActionPutSelectionPathElement));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpVizActionRemoveDimensionFromChartFeed));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpVizActionRemoveMemberFromTypedValueSelection));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpVizActionRemoveMemberRestrictionForMember));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpVizActionRemoveVizDefinition));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpVizActionSetActiveVizDefinition));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpVizActionSetChartColorPalette));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpVizActionSetChartOrientation));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpVizActionSetChartStructure));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpVizActionSetDatapointVariableValue));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpVizActionSetKpiMemberDeviation));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpVizActionSetKpiMemberException));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpVizActionSetKpiMemberMain));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpVizActionSetKpiMemberTarget));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpVizActionSetKpiMemberTrend));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpVizActionSetKpiStructure));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpVizActionSetVisualizationChartType));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpVizActionSetVisualizationSynchronizationMode));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpVizActionSetVisualizationVariableValue));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpVizActionSynchronizeVizDefinition));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpActionSortByMeasure));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpActionSortByField));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpActionSortByMemberKey));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpActionSortByMemberText));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpActionClearMeasureSort));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpActionClearDimensionSort));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpActionInitializeEpmPlanning));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpActionInitializeEpmVersion));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpActionTransferNewValues));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpActionDiscardNewValues));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpActionBackupVersion));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpActionCloseVersion));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpActionDropVersion));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpActionResetVersion));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpActionUndoVersion));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpActionRedoVersion));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpActionSetPlanningMode));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpActionSetPlanningVersionSettingsMode));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpActionEpmFetchPlanningAction));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpActionEpmGetActionParameters));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpActionEpmClearActionParameterValue));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpActionEpmClearActionParameterLevelFieldNames));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpActionEpmSetActionParameterHierarchyName));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpActionEpmPushActionParameterMemberValue));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpActionEpmAddActionParameterLevelFieldName));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpActionEpmAddActionParameterMemberValueItem));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpActionEpmAddActionParameterValue));
		oFF.OlapDataProviderActionRegistry.registerActionByClass(oFF.XClass.create(oFF.OdpActionEpmExecutePlanningAction));
		oFF.DfModule.stopExt(oFF.OlapDataProviderModule.s_module);
	}
	return oFF.OlapDataProviderModule.s_module;
};
oFF.OlapDataProviderModule.prototype.getName = function()
{
	return "ff5000.olap.dataprovider";
};

oFF.OlapDataProviderModule.getInstance();

return oFF;
} );