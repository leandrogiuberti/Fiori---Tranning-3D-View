/*!
 * SAPUI5
    (c) Copyright 2009-2021 SAP SE. All rights reserved
  
 */
sap.ui.define(["sap/sac/df/firefly/ff1500.dataprovider.api","sap/sac/df/firefly/ff1600.menuengine.api","sap/sac/df/firefly/ff2130.composable.fs"],function(e){"use strict";e.DataApplicationNotifications={NOTIFY_DATA_PROVIDER_CREATED:"DataApplication.DataProviderCreated",NOTIFY_DATA_PROVIDER_EVENT_FIRED:"DataApplication.DataProviderEventFired",NOTIFY_DATA_PROVIDER_RELEASED:"DataApplication.DataProviderReleased",PARAM_DATA_PROVIDER_EVENT_OBJECT:"DataApplication.DataProviderEventObject",PARAM_DATA_PROVIDER_EVENT_TYPE:"DataApplication.DataProviderEventType",PARAM_DATA_PROVIDER_NAME:"DataApplication.DataProviderName"};e.AsConfigManagerSafeAccess={s_fallbackConfigManager:null,s_fallbackConfigManagerProvider:null,from:function(t){let a=null;if(e.XObjectExt.isValidObject(t)){a=t.getConfigManager()}else if(e.notNull(e.AsConfigManagerSafeAccess.s_fallbackConfigManager)){a=e.AsConfigManagerSafeAccess.s_fallbackConfigManager}else if(e.notNull(e.AsConfigManagerSafeAccess.s_fallbackConfigManagerProvider)){e.AsConfigManagerSafeAccess.s_fallbackConfigManager=e.AsConfigManagerSafeAccess.s_fallbackConfigManagerProvider();a=e.AsConfigManagerSafeAccess.s_fallbackConfigManager}return a},getChartConfigFromProcess:function(t){let a=e.AsConfigManagerSafeAccess.from(t.findEntity(e.ProcessEntity.DATA_APPLICATION));let r=null;if(e.notNull(a)){r=a.getChartConfig()}return r},getFeatureConfigFromProcess:function(t){let a=e.AsConfigManagerSafeAccess.from(t.findEntity(e.ProcessEntity.DATA_APPLICATION));let r=null;if(e.notNull(a)){r=a.getFeatureConfig()}return r},setSupplier:function(t){e.AsConfigManagerSafeAccess.s_fallbackConfigManagerProvider=t}};e.PluginConstants={DATA_PROVIDER_COMMAND_PLUGIN_NAME:"DataProviderCommand",PARAM_CONFIG:"config",PARAM_CONFIG_FILE:"configFile",PARAM_DATA_PROVIDER_NAME:"dataProviderName",PARAM_PLUGIN_NAME:"pluginName",PARAM_WORKSPACE_DIR:"workspaceDir",VISUALIZATION_RENDERER_DOCUMENT_PLUGIN_NAME:"VisualizationRendererDocument"};e.ProgramConstants={DATA_PROVIDER_PROGRAM_NAME:"DataProvider",HORIZON_PROGRAM_NAME:"Horizon"};e.AsContentSections={CONNECTION:"Connection",DATA_PROVIDER_START_CONNECTION:"DataProviderStartConnection"};e.AsMenuMapperFactory={s_menuMapperSupplier:null,s_menuTreeGeneratorSupplier:null,createGenericMenuMapper:function(t){return e.isNull(e.AsMenuMapperFactory.s_menuMapperSupplier)||e.isNull(t)?null:e.AsMenuMapperFactory.s_menuMapperSupplier(t)},createMenuTreeGenerator:function(){return e.isNull(e.AsMenuMapperFactory.s_menuTreeGeneratorSupplier)?null:e.AsMenuMapperFactory.s_menuTreeGeneratorSupplier()},setMenuMapperSupplier:function(t){e.AsMenuMapperFactory.s_menuMapperSupplier=t},setMenuTreeGeneratorSupplier:function(t){e.AsMenuMapperFactory.s_menuTreeGeneratorSupplier=t}};e.DataProviderManagerProgram=function(){};e.DataProviderManagerProgram.prototype=new e.DfProgram;e.DataProviderManagerProgram.prototype._ff_c="DataProviderManagerProgram";e.DataProviderManagerProgram.ARGUMENTS_MARKUP_TABLE_HEADER="||Name||Type||Description||";e.DataProviderManagerProgram.COMMAND_CREATE="create";e.DataProviderManagerProgram.COMMAND_DESTROY="destroy";e.DataProviderManagerProgram.COMMAND_EXECUTE="execute";e.DataProviderManagerProgram.COMMAND_LIST="list";e.DataProviderManagerProgram.COMMAND_MARKUP="markup";e.DataProviderManagerProgram.PARAM_ACTION_ARGUMENTS="args";e.DataProviderManagerProgram.PARAM_ACTION_NAME="action";e.DataProviderManagerProgram.PARAM_COMMAND="command";e.DataProviderManagerProgram.PARAM_DATASOURCE="datasource";e.DataProviderManagerProgram.PARAM_DP_CONFIG="dpConfig";e.DataProviderManagerProgram.PARAM_PATH="path";e.DataProviderManagerProgram.PARAM_SYSTEM="system";e.DataProviderManagerProgram.PROGRAM_NAME="dp";e.DataProviderManagerProgram.prototype.m_actionName=null;e.DataProviderManagerProgram.prototype.m_command=null;e.DataProviderManagerProgram.prototype.m_datasource=null;e.DataProviderManagerProgram.prototype.m_path=null;e.DataProviderManagerProgram.prototype.m_remainingParameters=null;e.DataProviderManagerProgram.prototype.m_serializedDpConfig=null;e.DataProviderManagerProgram.prototype.m_systemName=null;e.DataProviderManagerProgram.prototype._getDpConfig=function(){let t=null;if(e.XStringUtils.isNotNullAndNotEmpty(this.m_serializedDpConfig)){let a=e.PrUtils.deserialize(this.m_serializedDpConfig);if(e.notNull(a)&&a.isStructure()){t=a.asStructure()}}if(e.isNull(t)){t=e.PrFactory.createStructure();t.putBoolean("startAsConnected",true)}t.putBoolean("isDataProviderManager",true);return t};e.DataProviderManagerProgram.prototype.getDataProviderManager=function(){let t=this.getProcess().findEntity(e.ProcessEntity.DATA_APPLICATION);return t.getDataProviderManager()};e.DataProviderManagerProgram.prototype.getProgramName=function(){return e.DataProviderManagerProgram.PROGRAM_NAME};e.DataProviderManagerProgram.prototype.getProgramType=function(){return e.ProgramType.BACKGROUND};e.DataProviderManagerProgram.prototype.newProgram=function(){let t=new e.DataProviderManagerProgram;t.setup();return t};e.DataProviderManagerProgram.prototype.prepareProgramMetadata=function(t){t.addParameter(e.DataProviderManagerProgram.PARAM_COMMAND,"The cli command to be run");t.addParameter(e.DataProviderManagerProgram.PARAM_PATH,"The file path where the Data Provider should be saved");t.addOption(e.DataProviderManagerProgram.PARAM_SYSTEM,"The system to be used by the Data Provider",null,e.XValueType.STRING);t.addOption(e.DataProviderManagerProgram.PARAM_DATASOURCE,"The full-qualified name of the datasource",null,e.XValueType.STRING);t.addOption(e.DataProviderManagerProgram.PARAM_DP_CONFIG,"The optional config to be passed to the Data Provider during creation. Serialized json",null,e.XValueType.STRING);t.addOption(e.DataProviderManagerProgram.PARAM_ACTION_NAME,"The action to be run on the Data Provider",null,e.XValueType.STRING)};e.DataProviderManagerProgram.prototype.printActionsAsMarkup=function(t){let a=this.getStdout();let r=0;let n=t.getBasicActions().getActionCategories();let i=t.getBasicActions().getActionManifests().createListCopy();let o=e.XComparatorName.create();i.sortByComparator(o);let s=e.XStringBuffer.create();let p=e.XStringBuffer.create();for(let t=0;t<n.size();t++){let a=n.get(t);let o=e.XStringBuffer.create();o.append(e.XStringUtils.concatenate3("h1. *",a,"*")).appendNewLine();for(let t=0;t<i.size();t++){if(e.XString.isEqual(i.get(t).getCategory(),a)){if(e.XString.isEqual(a,o.toString())){o.appendNewLine()}o.append("h2. ");o.append(this.printDPActionAsMarkup(i.get(t)));r++}}if(e.XString.isEqual(e.XStringUtils.concatenate4("h1. *",a,"*","\n"),o.toString())){o.append("No commands currently exist in this category.").appendNewLine()}p.append(o.toString())}s.append("*Total Data Provider Commands:* ").appendInt(r).appendNewLine();s.append("{toc:printable=false|style=disc|maxLevel=1|indent=5px|minLevel=1|outline=true|include=.*}").appendNewLine();s.append(p.toString());a.println(s.toString())};e.DataProviderManagerProgram.prototype.printAllCommands=function(){let t=this.getStdout();t.println("Available commands:");t.println(e.XStringUtils.concatenate2(e.DataProviderManagerProgram.COMMAND_LIST," - Show available Data Providers"));t.println(e.XStringUtils.concatenate2(e.DataProviderManagerProgram.COMMAND_CREATE," - Create a Data Provider. Params: path, system and dataSource"));t.println(e.XStringUtils.concatenate2(e.DataProviderManagerProgram.COMMAND_DESTROY," - Destroy a Data Provider. Params: path"));t.println(e.XStringUtils.concatenate2(e.DataProviderManagerProgram.COMMAND_EXECUTE," - Execute an action on a Data Provider. Params: path, actionName, actionParameters"));t.println(e.XStringUtils.concatenate2(e.DataProviderManagerProgram.COMMAND_MARKUP," - See all commands in Wiki Markup. Params: path"))};e.DataProviderManagerProgram.prototype.printAvailableDPs=function(){let t=this.getStdout();let a=this.getDataProviderManager().getDataProviderNames();if(a.isEmpty()){t.print("There are currently no available Data Providers.")}else{t.println("Available Data Providers:");e.XCollectionUtils.forEach(a,e=>{t.println(e)})}};e.DataProviderManagerProgram.prototype.printCreateHelp=function(){let t=this.getStdout();t.println("Please provide valid parameters:");t.println(e.XStringUtils.concatenate2(e.DataProviderManagerProgram.PARAM_PATH," - The file path to save the Data Provider"));t.println(e.XStringUtils.concatenate2(e.DataProviderManagerProgram.PARAM_SYSTEM," - The system to operate on, e.g. KIW"));t.println(e.XStringUtils.concatenate2(e.DataProviderManagerProgram.PARAM_DATASOURCE," - The full-qualified datasource, e.g. query:[0BICS_C03_BICSTEST_Q0000]"))};e.DataProviderManagerProgram.prototype.printDPAction=function(t){let a=e.XStringBuffer.create();a.append(t.getName());let r=t.getParameterList();a.append("(");if(e.XCollectionUtils.hasElements(r)){for(let e=0;e<r.size();e++){let t=r.get(e);a.append(t.getType().getName());a.append(" ");a.append(t.getName());if(e+1<r.size()){a.append(", ")}}}a.append(")").appendNewLine();return a.toString()};e.DataProviderManagerProgram.prototype.printDPActionAsMarkup=function(t){let a=e.XStringBuffer.create();let r=t.getParameterList();let n=e.XStringBuffer.create().append(e.DataProviderManagerProgram.ARGUMENTS_MARKUP_TABLE_HEADER);let i=e.XStringBuffer.create();a.append(t.getName()).append(" - ").append(t.getStage()).appendNewLine();a.append(t.getDescription()).appendNewLine();if(!r.isEmpty()){a.append("Arguments:").appendNewLine();if(e.XCollectionUtils.hasElements(r)){for(let t=0;t<r.size();t++){let a=r.get(t);i.append("|");i.append(e.XStringUtils.concatenate2(a.getName(),"|"));i.append(e.XStringUtils.concatenate2(a.getType().getName(),"|"));i.append(e.XStringUtils.concatenate2(a.getDescription(),"|"));if(a.getDefaultValue()!==null&&e.XString.isEqual(n.toString(),e.DataProviderManagerProgram.ARGUMENTS_MARKUP_TABLE_HEADER)){n.append("Default Value||");i.append(e.XStringUtils.concatenate2(a.getDefaultValue().asString().toString(),"|"))}else if(!e.XString.isEqual(n.toString(),e.DataProviderManagerProgram.ARGUMENTS_MARKUP_TABLE_HEADER)){i.append("|")}i.appendNewLine()}}a.append(n.toString()).appendNewLine();a.append(i.toString()).appendNewLine()}else{a.append("This command has no arguments.").appendNewLine()}a.append("*Review Date:* ").append(t.getReviewDate()).appendNewLine().appendNewLine();return a.toString()};e.DataProviderManagerProgram.prototype.printDPActions=function(t){let a=this.getStdout();a.println("Available actions:");let r=t.getBasicActions().getActionCategories();let n=t.getBasicActions().getActionManifests().createListCopy();let i=e.XComparatorName.create();n.sortByComparator(i);let o=e.XStringBuffer.create();for(let t=0;t<r.size();t++){let a=r.get(t);let i=e.XStringBuffer.create();i.append(a);for(let t=0;t<n.size();t++){if(e.XString.isEqual(n.get(t).getCategory(),a)){if(e.XString.isEqual(a,i.toString())){i.append(":").appendNewLine()}i.append("    ");i.append(this.printDPAction(n.get(t)))}}if(e.XString.isEqual(a,i.toString())){i.flush()}else{i.appendNewLine();o.append(i.toString())}}a.println(o.toString())};e.DataProviderManagerProgram.prototype.printDestroyHelp=function(){let t=this.getStdout();t.println("Please provide valid parameters:");t.println(e.XStringUtils.concatenate2(e.DataProviderManagerProgram.PARAM_PATH," - The file path to save the Data Provider"))};e.DataProviderManagerProgram.prototype.printExecuteHelp=function(){let t=this.getStdout();t.println("Please provide valid parameters:");t.println(e.XStringUtils.concatenate2(e.DataProviderManagerProgram.PARAM_PATH," - The path to he Data Provider you wish to execute this command on"));t.println(e.XStringUtils.concatenate2(e.DataProviderManagerProgram.PARAM_ACTION_NAME," - The action you wish to execute"));t.println(e.XStringUtils.concatenate2(e.DataProviderManagerProgram.PARAM_ACTION_ARGUMENTS," - The arguments for the action"))};e.DataProviderManagerProgram.prototype.processArguments=function(t){this.m_command=t.getStringByKey(e.DataProviderManagerProgram.PARAM_COMMAND);this.m_path=t.getStringByKey(e.DataProviderManagerProgram.PARAM_PATH);let a=t.getArgumentList();if(e.XString.isEqual(this.m_command,e.DataProviderManagerProgram.COMMAND_CREATE)){if(a.size()>=4){this.m_systemName=a.get(2);this.m_datasource=a.get(3);if(a.size()>=5){this.m_serializedDpConfig=a.get(4)}}else{this.m_systemName=t.getStringByKey(e.DataProviderManagerProgram.PARAM_SYSTEM);this.m_datasource=t.getStringByKey(e.DataProviderManagerProgram.PARAM_DATASOURCE);this.m_serializedDpConfig=t.getStringByKey(e.DataProviderManagerProgram.PARAM_DP_CONFIG)}}if(e.XString.isEqual(this.m_command,e.DataProviderManagerProgram.COMMAND_EXECUTE)&&a.size()>=3){this.m_actionName=a.get(2);this.m_remainingParameters=e.XList.create();for(let e=3;e<a.size();e++){this.m_remainingParameters.add(a.get(e))}}};e.DataProviderManagerProgram.prototype.processConfiguration=function(e){};e.DataProviderManagerProgram.prototype.runAction=function(){let t=this.getStdout();if(e.XStringUtils.isNullOrEmpty(this.m_path)){this.printExecuteHelp();this.exitNow(0);return false}let a=this.getDataProviderManager().getDataProvider(this.m_path);if(e.XStringUtils.isNullOrEmpty(this.m_path)||e.isNull(a)){if(e.isNull(a)){t.println(e.XStringUtils.concatenate2("Data Provider not found: ",this.m_path))}this.printAvailableDPs();this.exitNow(-1);return false}if(e.XStringUtils.isNullOrEmpty(this.m_actionName)){this.printDPActions(a);this.exitNow(0);return false}let r=e.XList.create();for(let e=0;e<this.m_remainingParameters.size();e++){r.add(this.m_remainingParameters.get(e))}if(this.validateAction(a,this.m_actionName,r)){a.getStringActions().executeActionByName(this.m_actionName,r).then(a=>{if(e.notNull(a)){if(!e.XString.isEqual(a.toString(),"")){t.println(a.toString())}}return a},e=>{t.println(e.getText());return e}).onThen(e=>{this.exitNow(0)}).onCatch(e=>{this.exitNow(-1)})}else{t.println(e.XStringUtils.concatenate2("Invalid arguments for action: ",this.m_actionName));let r=a.getBasicActions().getActionManifest(this.m_actionName);if(e.isNull(r)){t.println("Action does not exist.")}else{t.println(e.XStringUtils.concatenate2("Correct format: ",this.printDPAction(r)))}this.exitNow(-1)}return true};e.DataProviderManagerProgram.prototype.runCreate=function(){let t=this.getStdout();if(e.XStringUtils.isNullOrEmpty(this.m_path)||e.XStringUtils.isNullOrEmpty(this.m_systemName)||e.XStringUtils.isNullOrEmpty(this.m_datasource)){this.printCreateHelp();this.exitNow(0);return false}if(this.getDataProviderManager().getDataProvider(this.m_path)!==null){t.println(e.XStringUtils.concatenate2("Path already exists: ",this.m_path));this.exitNow(-1);return false}let a=e.XUri.createFromUrl(this.m_path);let r=a.getPathContainer().getFileName();let n=this.getDataProviderManager().createDataProviderConfig(this.getProcess().getParentProcess(),r);n.deserializeJson(this._getDpConfig());n.getStartConnection().setSystemName(this.m_systemName);n.getStartConnection().setDataSourceName(this.m_datasource);this.getDataProviderManager().createDataProvider(n).onThen(e=>{t.println("creation successful");this.printAvailableDPs();this.exitNow(0)}).onCatch(a=>{t.println(e.XStringUtils.concatenate2("Data Provider creation failed: ",a.getText()));this.getDataProviderManager().releaseDataProvider(this.m_path);this.exitNow(-1)});return true};e.DataProviderManagerProgram.prototype.runDestroy=function(){let t=this.getStdout();if(e.XStringUtils.isNullOrEmpty(this.m_path)){this.printDestroyHelp();this.exitNow(0);return false}let a=this.getDataProviderManager().getDataProvider(this.m_path);if(e.isNull(a)){t.println(e.XStringUtils.concatenate2("Could not find Data Provider for the specified path: ",this.m_path));this.exitNow(0);return false}t.println("Shutting down...");a.getBasicActions().getBasicLifecycleActions().disconnectDataProvider().onThen(r=>{e.XObjectExt.release(a);t.println("Data Provider successfully destroyed")}).onCatch(e=>{t.println("destruction failed");t.println(e.getText())}).onThen(e=>{this.exitNow(0)}).onCatch(e=>{this.exitNow(-1)});return true};e.DataProviderManagerProgram.prototype.runMarkup=function(){let t=this.getStdout();if(e.isNull(this.m_path)){t.println("No path provided.\nCorrect usage: dp markup path");this.exitNow(-1);return false}let a=this.getDataProviderManager().getDataProvider(this.m_path);if(e.XStringUtils.isNullOrEmpty(this.m_path)||e.isNull(a)){if(e.isNull(a)){t.println(e.XStringUtils.concatenate2("Data Provider not found: ",this.m_path))}this.printAvailableDPs();this.exitNow(-1);return false}this.printActionsAsMarkup(a);this.exitNow(0);return true};e.DataProviderManagerProgram.prototype.runProcess=function(){let t=this.getStdout();if(e.XStringUtils.isNullOrEmpty(this.m_command)){this.printAllCommands();this.exitNow(0);return false}if(e.XString.isEqual(this.m_command,e.DataProviderManagerProgram.COMMAND_LIST)){this.printAvailableDPs();this.exitNow(0);return false}if(e.XString.isEqual(this.m_command,e.DataProviderManagerProgram.COMMAND_CREATE)){return this.runCreate()}if(e.XString.isEqual(this.m_command,e.DataProviderManagerProgram.COMMAND_DESTROY)){return this.runDestroy()}if(e.XString.isEqual(this.m_command,e.DataProviderManagerProgram.COMMAND_EXECUTE)){return this.runAction()}if(e.XString.isEqual(this.m_command,e.DataProviderManagerProgram.COMMAND_MARKUP)){return this.runMarkup()}t.println(e.XStringUtils.concatenate2("Unknown command: ",this.m_command));this.exitNow(-1);return false};e.DataProviderManagerProgram.prototype.setupProcess=function(){return null};e.DataProviderManagerProgram.prototype.validateAction=function(t,a,r){let n=t.getBasicActions().getActionManifest(a);if(e.isNull(n)){return false}let i=n.getParameterList();if(i.size()>=r.size()){for(let e=0;e<i.size();e++){if(i.get(e).getDefaultValue()===null&&r.get(e)===null){return false}}}else if(r.size()>i.size()){return false}return true};e.SpaceComponentType=function(){};e.SpaceComponentType.prototype=new e.XComponentType;e.SpaceComponentType.prototype._ff_c="SpaceComponentType";e.SpaceComponentType.DATA_APPLICATION=null;e.SpaceComponentType.createSpaceComponentType=function(t,a){let r=new e.SpaceComponentType;r.setupExt(t,a);return r};e.SpaceComponentType.staticSetupSpaceComponents=function(){e.SpaceComponentType.DATA_APPLICATION=e.SpaceComponentType.createSpaceComponentType("DataApplication",e.XComponentType._ROOT)};e.AsContentType=function(){};e.AsContentType.prototype=new e.ContentType;e.AsContentType.prototype._ff_c="AsContentType";e.AsContentType.AGGREGATION=null;e.AsContentType.s_lookup=null;e.AsContentType._createExt=function(t,a,r,n,i){let o=new e.AsContentType;o.setupContentType(t,null,a,r,n,i);e.AsContentType.s_lookup.put(t,o);return o};e.AsContentType.staticSetupSpaceContentType=function(){e.AsContentType.s_lookup=e.XHashMapByString.create();e.AsContentType.AGGREGATION=e.AsContentType._createExt("ComposableSpaceContentAggregation",e.ContentType.JSON,"csa",null,null)};e.SpaceModule=function(){};e.SpaceModule.prototype=new e.DfModule;e.SpaceModule.prototype._ff_c="SpaceModule";e.SpaceModule.s_module=null;e.SpaceModule.getInstance=function(){if(e.isNull(e.SpaceModule.s_module)){e.DfModule.checkInitialized(e.ComposableFsModule.getInstance());e.SpaceModule.s_module=e.DfModule.startExt(new e.SpaceModule);e.CoGlobalConfigurationUtils.setSupplier(t=>e.AsConfigManagerSafeAccess.getFeatureConfigFromProcess(t));e.CoChartDefaultConfigurationUtils.setSupplier(t=>e.AsConfigManagerSafeAccess.getChartConfigFromProcess(t));e.SpaceComponentType.staticSetupSpaceComponents();e.AsContentType.staticSetupSpaceContentType();e.ProgramRegistry.setProgramFactory(new e.DataProviderManagerProgram);e.DfModule.stopExt(e.SpaceModule.s_module)}return e.SpaceModule.s_module};e.SpaceModule.prototype.getName=function(){return"ff2165.space"};e.SpaceModule.getInstance();return e});
//# sourceMappingURL=ff2165.space.js.map