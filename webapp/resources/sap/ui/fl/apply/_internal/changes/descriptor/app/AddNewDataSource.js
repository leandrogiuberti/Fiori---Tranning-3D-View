/*!
 * OpenUI5
 * (c) Copyright 2025 SAP SE or an SAP affiliate company.
 * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
 */
sap.ui.define(["sap/ui/fl/util/DescriptorChangeCheck"],function(t){"use strict";const n=["uri"];const a=[...n,"type","settings","customType"];const o={type:"^(OData|ODataAnnotation|INA|XML|JSON|FHIR|WebSocket|http)$",customType:"^false$"};const e={uri:typeof"string",type:typeof"string",settings:typeof{},dataSourceCustom:typeof false,annotations:typeof[]};function s(t,n){return Object.keys(t).includes(n)}function i(t){return t.type||"OData"}function r(t,n){const[a]=Object.entries(t).find(([,t])=>i(t)===n)||[];return a}function c(t,n,a){a.forEach(function(a){if(!s(t,a)){throw new Error(`Referenced annotation '${a}' in the annotation array of data source '${n}' does not exist in the manifest.`)}})}function u(t,n){const a=r(n,"OData");const o=r(n,"ODataAnnotation");if(!(a&&o)){throw new Error("When adding two data sources it is only allwoed to add a data source with type 'OData' and the other one must be of type 'ODataAnnotation'.")}if(!n[a]?.settings?.annotations?.includes(o)){throw new Error(`Data source '${a}' does not include annotation '${o}' under 'settings/annotations' array.`)}const e=n[a].settings.annotations.filter(function(t){return t!==o});c(t,a,e)}function f(t,n){const a=r(n,"OData");if(n[a].settings?.annotations){c(t,a,n[a].settings.annotations)}}function p(t,n,a){a.forEach(function(a){if(s(t,a)){throw new Error(`There is already a dataSource '${a}' existing in the manifest.`)}d(n,a)});if(a.length===1){f(t,n)}if(a.length===2){u(t,n)}}function d(t,n){const a=i(t[n]);if(t[n].settings?.annotations){if(a!=="OData"){throw new Error(`Data source '${n}' which is of type '${a}' contains the annotations array. Only data sources with type 'OData' could contain the 'settings/annotations' array.`)}if(!Array.isArray(t[n].settings.annotations)){throw new Error("Property 'annotations' must be of type 'array'.")}}}const h={applyChange(s,i){s["sap.app"].dataSources||={};const r=i.getContent();const c=t.getAndCheckContentObject(r,"dataSource",i.getChangeType(),n,a,o,e);c.forEach(function(n){t.checkIdNamespaceCompliance(n,i)});p(s["sap.app"].dataSources,r.dataSource,c);Object.assign(s["sap.app"].dataSources,r.dataSource);return s}};return h});
//# sourceMappingURL=AddNewDataSource.js.map