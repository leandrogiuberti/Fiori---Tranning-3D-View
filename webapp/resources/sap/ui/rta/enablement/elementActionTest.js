/*!
 * OpenUI5
 * (c) Copyright 2025 SAP SE or an SAP affiliate company.
 * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
 */
sap.ui.define(["sap/ui/core/mvc/XMLView","sap/ui/core/util/reflection/JsControlTreeModifier","sap/ui/core/ComponentContainer","sap/ui/core/UIComponent","sap/ui/dt/DesignTime","sap/ui/dt/DesignTimeStatus","sap/ui/dt/OverlayRegistry","sap/ui/fl/apply/_internal/changes/Utils","sap/ui/fl/apply/_internal/flexState/FlexState","sap/ui/fl/changeHandler/condenser/Classification","sap/ui/fl/initial/_internal/ManifestUtils","sap/ui/fl/write/api/PersistenceWriteAPI","sap/ui/fl/Layer","sap/ui/model/Model","sap/ui/qunit/utils/nextUIUpdate","sap/ui/rta/command/CommandFactory","sap/ui/rta/util/changeVisualization/ChangeCategories","sap/ui/rta/util/changeVisualization/ChangeVisualization","sap/ui/thirdparty/sinon-4","test-resources/sap/ui/fl/api/FlexTestAPI","test-resources/sap/ui/fl/qunit/FlQUnitUtils","sap/ui/fl/library"],function(e,t,n,i,a,o,s,r,c,l,h,d,m,u,g,f,p,C,w,y,v){"use strict";function b(A,x){if(b._only&&A.indexOf(b._only)<0){return}if(typeof x.xmlView==="string"){x.xmlView={viewContent:x.xmlView}}const U=w.createSandbox();x.before||=function(){};x.after||=function(){};QUnit.module(A,function(){QUnit.test("When using the 'elementActionTest' function to test if your control is ready for UI adaptation at runtime",function(e){e.ok(x.afterAction,"then you implement a function to check if your action has been successful: See the afterAction parameter.");e.ok(x.afterUndo,"then you implement a function to check if the undo has been successful: See the afterUndo parameter.");e.ok(x.afterRedo,"then you implement a function to check if the redo has been successful: See the afterRedo parameter.");e.ok(x.xmlView,"then you provide an XML view to test on: See the.xmlView parameter.");const t=(new DOMParser).parseFromString(x.xmlView.viewContent,"application/xml").documentElement;e.ok(t.tagName.match("View$"),"then you use the sap.ui.core.mvc View tag as the first tag in your view");e.ok(x.action,"then you provide an action: See the action parameter.");e.ok(x.action.name,"then you provide an action name: See the action.name parameter.");e.ok(x.action.controlId||x.action.control,"then you provide the control or control's id to operate the action on: See the action.controlId.")})});const V="sap.ui.rta.control.enabling.comp";const I=false;const k=true;const D=i.extend(V,{metadata:{interfaces:["sap.ui.core.IAsyncContentCreation"],manifest:{"sap.app":{id:V,type:"application"}}},createContent(){const t={...x.xmlView};t.id=this.createId("view");if(t.async===undefined){t.async=this.getComponentData().async}t.definition=t.viewContent;this.oViewPromise=e.create(t);return this.oViewPromise}});function P(e){this.oUiComponent=new D({id:"comp",componentData:{async:e}});return this.oUiComponent.oViewPromise.then(async function(){this.oUiComponentContainer=new n({component:this.oUiComponent,height:"100%"});this.oUiComponentContainer.placeAt(x.placeAt||"qunit-fixture");this.oView=this.oUiComponent.getRootControl();if(x.model instanceof u){this.oView.setModel(x.model)}await g();return x.model&&x.model.getMetaModel()&&x.model.getMetaModel().loaded()}.bind(this))}function E(e,t){const n=[].concat(x.previousActions||[],x.action);const i=[];async function a(n,a){const o=await O.call(this,e,n);i.push(o);await o.execute();if(a&&t?.relevantForDuplicateChangeCheck&&await j.call(this,o,n)){await N(this.oDesignTime);t.duplicateChangeCheckActive=true;const a=await O.call(this,e,n);i.push(a);try{await a.execute()}catch(t){e.strictEqual(a.getPreparedChange()?.hasApplyProcessFailed(),true,`then on second application of the same action returns the following error message: ${t.message||t}`)}}await N(this.oDesignTime)}return n.reduce(function(e,t,i){return e.then(a.bind(this,t,i===n.length-1))}.bind(this),Promise.resolve()).then(function(){return i})}function T(e){if(typeof e.control==="function"){return e.control(this.oView)}return this.oView.byId(e.controlId)}function M(e){return e.designtimeActionControl?e.designtimeActionControl(this.oView):undefined}function S(){this.oDesignTime=new a({rootElements:[this.oView]});return new Promise(function(e){this.oDesignTime.attachEventOnce("synced",e)}.bind(this))}function F(e){if(e){return typeof e==="function"?e(this.oView):e}return{}}function R(e,t,n,i,a,o){if(Array.isArray(t.name)){const i=a.getAction(t.name[0],n,t.name[1]);e.ok(i,`the ${t[0]} via ${t.name[1]} action is available in the designtime`)}else if(t.name==="createContainer"||t.name==="addIFrame"){e.ok(o.getAction(t.name,n),`the ${t.name} action is available in the calculated designtime metadata during execution`)}else if(t.name==="move"){e.ok(a.getAction(t.name,i),`the ${t.name} action is available in the calculated designtime metadata during execution`)}else{e.ok(a.getAction(t.name,n),`the ${t.name} action is available in the calculated designtime metadata during execution`)}}async function O(e,t){try{let n=t.name;let i;let a;let o=await T.call(this,t);const r=F.call(this,t.parameter);const c=await M.call(this,t);await S.call(this);let l=s.getOverlay(c||o);if(!l){throw new Error(`The provided control ${o.getId()}does not have any overlay existing during test execution. `+"With this testsetup it is no possible to check for designtime action definition. In some cases it is not "+"possible to identify the control with the designtime metadata automatically just by the given 'action.control'. "+"In this case please provide the 'action.designtimeActionControl' property with a valid control containing "+"the designtime metadata definition for this check.")}let h=l.getDesignTimeMetadata();const d=h.getResponsibleElement(o);if(x.label){e.strictEqual(h.getLabel(o),x.label,"then the control label is correct")}if(t.name==="move"){a=r.movedElements[0].element||r.movedElements[0].id;const e=s.getOverlay(a);const t=e.getRelevantContainer();o=t;h=e.getParentAggregationOverlay().getDesignTimeMetadata()}else if(Array.isArray(t.name)){const e=h.getActionDataFromAggregations(t.name[0],o,undefined,t.name[1]);const i=l.getAggregationOverlay(e[0].aggregation);h=i.getDesignTimeMetadata();n="addDelegateProperty"}else if(t.name==="createContainer"||t.name==="addIFrame"){const e=h.getActionDataFromAggregations(t.name,c||o);const n=l.getAggregationOverlay(e[0].aggregation);i=n.getDesignTimeMetadata()}else if(d){if(t.name==="reveal"){o=t.revealedElement(this.oView);l=s.getOverlay(t.revealedElement(this.oView));h=l.getDesignTimeMetadata();if(t.label){const n=h.getAction("reveal");e.strictEqual(n.getLabel(o),t.label,"then the control label is correct")}}else{o=d;l=s.getOverlay(o);h=l.getDesignTimeMetadata();o.getMetadata().loadDesignTime(o)}}R(e,t,o,a,h,i);const u=new f({flexSettings:{layer:x.layer||m.CUSTOMER}});const g=await u.getCommandFor(o,n,r,h);e.ok(g,"then the registration for action to change type, the registration for change and "+`control type to change handler is available and ${x.action.name} is a valid action`);return g}catch(e){throw new Error(e)}}function W(e){return e.reduce(function(e,t){return e.then(t.execute.bind(t))},Promise.resolve())}function z(e){const t=e.slice().reverse();return t.reduce(function(e,t){return e.then(t.undo.bind(t))},Promise.resolve())}async function Q(e,t){if(t?.duplicateChangeCheckActive){const t=e[e.length-1];await t.undo()}}function _(e){e.forEach(e=>{e.destroy()})}async function q(e,t,n){const i={remainingCommands:[],deletedCommands:[]};if(t.length===1){i.remainingCommands.push(t[0]);return Promise.resolve(i)}const a=t.map(e=>e.getPreparedChange());const o=await d._condense({selector:e,changes:a});if(x.changesAfterCondensing!==undefined){n.equal(o.length,x.changesAfterCondensing,"after condensing the amount of changes is correct")}const s=o.map(e=>e.getId());t.forEach(e=>{if(s.indexOf(e.getPreparedChange().getId())>-1){i.remainingCommands.push(e)}else{i.deletedCommands.push(e)}});return i}async function L(e,t,n){if(!x.changeVisualization){return}let i;if(typeof x.changeVisualization==="function"){i=x.changeVisualization(e)}else{i=x.changeVisualization}const a=new C({rootControlId:e.getId(),isActive:true});U.stub(a,"_updateChangeIndicators");const o=t.map(e=>e.getPreparedChange());U.stub(a,"_collectChanges").resolves(o);await a._updateChangeRegistry();await a._selectChangeCategory(p.ALL);const s=a._oChangeIndicatorRegistry;const r=s.getSelectorsWithRegisteredChanges();const c=i.displayElementId;const l=c?e.createId(c):e.getId();n.ok(r[l]&&r[l].length,"there is a change indicator at the correct element");const h=s.getAllRegisteredChanges();const d=o[o.length-1];const m=h.find(e=>e.change.getId()===d.getId());const u=i.info;function g(t){return t.map(t=>e.createId(t))}if(u){if(u.affectedControls){const e=g(u.affectedControls);n.deepEqual(e,m.visualizationInfo.affectedElementIds,"then the affected control ids are correct")}if(u.dependentControls){const e=g(u.dependentControls);n.deepEqual(e,m.visualizationInfo.dependentElementIds,"then the dependent control ids are correct")}if(u.displayControls){const e=g(u.displayControls);n.deepEqual(e,m.visualizationInfo.displayElementIds,"then the display control ids are correct")}if(u.descriptionPayload){n.deepEqual(u.descriptionPayload,m.visualizationInfo.descriptionPayload,"then the descriptionPayload is correct")}}}function $(e){const t=[];e.forEach(function(e){const n=e.getPreparedChange();if(e.getAppComponent){t.push(d.remove({change:n,selector:e.getAppComponent()}))}});return Promise.all(t)}async function j(e,n){let i;const a=await T.call(this,n);const o=e.getPreparedChange();o.setRevertData(o.getRevertData()||{});try{const n=await r.getChangeHandler({flexObject:o,control:a,controlType:a.getMetadata().getName(),modifier:t});if(n&&typeof n.getCondenserInfo==="function"){i=await n.getCondenserInfo(o,{modifier:t,appComponent:e.getAppComponent()})}return i?.classification===l.Create}catch(e){return false}}async function X(e,t){await P.call(this,I);await J.call(this,e,t)}function J(e,t){const n=[].concat(x.previousActions||[],x.action);const i=[];let a;async function o(n,o){const s=await O.call(this,e,n);i.push(s);a=s.getAppComponent();let r;if(o&&t?.relevantForDuplicateChangeCheck&&await j.call(this,s,n)){t.duplicateChangeCheckActive=true;r=await O.call(this,e,n);i.push(r)}this.oUiComponentContainer.destroy();const l=[d.add({change:s.getPreparedChange(),selector:a})];if(r){l.push(d.add({change:r.getPreparedChange(),selector:a}))}const m=h.getFlexReferenceForControl(a);c.update(m,l.map(e=>({type:"add",flexObject:e.convertToFileContent()})));return await P.call(this,k)}return n.reduce(function(e,t,i){return e.then(o.bind(this,t,i===n.length-1))}.bind(this),Promise.resolve()).then(function(){this.aCommands=i;const e=i.map(e=>e.getPreparedChange());return d.remove({flexObjects:e,selector:a})}.bind(this))}if(!x.jsOnly){QUnit.module(`${A} on async views`,{before(e){this.hookContext={};return x.before.call(this.hookContext,e)},after(e){return x.after.call(this.hookContext,e)},async beforeEach(){await v.initializeFlexStateWithData(U,V,{changes:[]})},afterEach(){this.oUiComponentContainer.destroy();this.oDesignTime.destroy();_(this.aCommands);y.reset();U.restore()}},function(){QUnit.test("When applying the change directly on the XMLView",async function(e){await X.call(this,e);await L(this.oView,this.aCommands,e);await x.afterAction(this.oUiComponent,this.oView,e)});QUnit.test("When executing on XML and reverting the change in JS (e.g. variant switch)",async function(e){await X.call(this,e);await z(this.aCommands);await $(this.aCommands);await g();await x.afterUndo(this.oUiComponent,this.oView,e)});QUnit.test("When executing on XML, reverting the change in JS (e.g. variant switch) and applying again",async function(e){await X.call(this,e);const t=await q(this.oView,this.aCommands,e);this.aRemainingCommands=t.remainingCommands;await z(this.aCommands);await $(this.aCommands);await W(this.aRemainingCommands);await g();await x.afterRedo(this.oUiComponent,this.oView,e)});QUnit.test("When executing on XML and applying the create change twice (check for duplicate change errors) and reverting just one change in JS",async function(e){const t={relevantForDuplicateChangeCheck:true};await X.call(this,e,t);await Q(this.aCommands,t);await $(this.aCommands);g();await x.afterAction(this.oUiComponent,this.oView,e)})})}function N(e){if(e.getStatus()!==o.SYNCED){return new Promise(function(t){e.attachEventOnce("synced",t)})}return Promise.resolve()}QUnit.module(A,{before(e){this.hookContext={};return x.before.call(this.hookContext,e)},after(e){return x.after.call(this.hookContext,e)},async beforeEach(e){await v.initializeFlexStateWithData(U,V,{changes:[]});return P.call(this,I).then(E.bind(this,e)).then(function(e){this.aCommands=e}.bind(this))},afterEach(){this.oDesignTime.destroy();this.oUiComponentContainer.destroy();_(this.aCommands);y.reset();U.restore()}},function(){QUnit.test("When executing the underlying command on the control at runtime",async function(e){await N(this.oDesignTime);await L(this.oView,this.aCommands,e);await g();await x.afterAction(this.oUiComponent,this.oView,e)});QUnit.test("When executing and undoing the command",async function(e){await N(this.oDesignTime);await z(this.aCommands);await $(this.aCommands);await g();await x.afterUndo(this.oUiComponent,this.oView,e)});QUnit.test("When executing, undoing and redoing the command",async function(e){await N(this.oDesignTime);const t=await q(this.oView,this.aCommands,e);this.aRemainingCommands=t.remainingCommands;await z(this.aCommands);await $(this.aCommands);await W(this.aRemainingCommands);await g();await x.afterRedo(this.oUiComponent,this.oView,e)});QUnit.test("When executing and applying the create change twice (check for duplicate change errors) and undoing just one command",async function(e){this.oUiComponentContainer.destroy();await P.call(this,I);const t={relevantForDuplicateChangeCheck:true};const n=await E.call(this,e,t);this.aCommands=n;await N(this.oDesignTime);await Q(this.aCommands,t);await $(this.aCommands);g();await x.afterAction(this.oUiComponent,this.oView,e)})})}b.skip=function(){};b.only=function(e){b._only=e};return b});
//# sourceMappingURL=elementActionTest.js.map