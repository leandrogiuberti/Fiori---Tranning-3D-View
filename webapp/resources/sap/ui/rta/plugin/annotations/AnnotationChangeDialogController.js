/*!
 * OpenUI5
 * (c) Copyright 2025 SAP SE or an SAP affiliate company.
 * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
 */
sap.ui.define(["sap/m/Input","sap/m/Label","sap/m/Select","sap/m/Switch","sap/ui/core/mvc/Controller","sap/ui/core/Element","sap/ui/core/Item","sap/ui/layout/form/FormElement","sap/ui/model/Filter","sap/ui/model/FilterOperator","sap/ui/rta/plugin/annotations/AnnotationTypes"],function(e,t,n,o,r,a,i,s,l,p,u){"use strict";const c=r.extend("sap.ui.rta.plugin.annotations.AnnotationChangeDialogController");c.prototype.initialize=function(){return new Promise(e=>{this._fnResolveAfterClose=e})};c.prototype.filterProperties=function(e,t){const n=[];if(e&&e.length>0){const o=new l("label",t?p.EQ:p.Contains,e);n.push(o)}const o=a.getElementById("sapUiRtaChangeAnnotationDialog_propertyList");const r=o.getBinding("formElements");r.filter(n)};c.prototype.onFilterProperties=function(e){const t=e.getSource().getValue();this.filterProperties(t)};c.prototype.switchDisplayMode=function(e){const t=e.getParameter("state");const n=a.getElementById("sapUiRtaChangeAnnotationDialog_propertyList");const o=n.getModel();o.setProperty("/showChangedPropertiesOnly",t);if(t){const e=o.getProperty("/changedProperties");const t=o.getProperty("/properties").filter(t=>e.some(e=>e.annotationPath===t.annotationPath)||t.originalValue!==t.currentValue);o.setProperty("/propertiesToDisplay",t)}else{o.setProperty("/propertiesToDisplay",o.getProperty("/properties"))}};c.prototype.onSave=function(e){const t=e.getSource().getModel().getData();const n=t.properties.map(e=>{if(e.originalValue===e.currentValue){return null}const n={serviceUrl:t.serviceUrl,content:{annotationPath:e.annotationPath}};n.content[t.valueType===u.StringType?"text":"value"]=t.objectAsKey?JSON.parse(e.currentValue):e.currentValue;return n}).filter(Boolean);this._fnResolveAfterClose(n)};c.prototype.onCancel=function(){this._fnResolveAfterClose([])};function g(t){if(t===u.ValueListType){const e=new n({selectedKey:"{currentValue}"});const t=new i({key:"{key}",text:"{text}"});e.bindItems({path:"/possibleValues",template:t,templateShareable:false});return e}if(t===u.StringType){return new e({value:"{currentValue}",liveChange:e=>{const t=e.getParameter("newValue");const n=e.getSource().getBindingContext();e.getSource().getModel().setProperty("currentValue",t,n)}})}if(t===u.BooleanType){return new o({state:"{currentValue}"})}throw new Error(`Unsupported value type: ${t}`)}c.prototype.editorFactory=function(e,n){const o=n.getProperty("/valueType");const r=n.getProperty("/singleRename");return new s({id:e,label:new t({text:r?"{i18n>ANNOTATION_CHANGE_DIALOG_SINGLE_RENAME_LABEL}":"{= ${label} || ${propertyName}}",tooltip:"{tooltip}"}),fields:[g.call(this,o)]})};return c});
//# sourceMappingURL=AnnotationChangeDialogController.js.map