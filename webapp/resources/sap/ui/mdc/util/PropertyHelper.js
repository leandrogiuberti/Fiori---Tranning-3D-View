/*!
 * OpenUI5
 * (c) Copyright 2025 SAP SE or an SAP affiliate company.
 * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
 */
sap.ui.define(["sap/ui/base/Object","sap/ui/base/DataType","sap/base/util/merge","sap/base/util/isPlainObject","sap/base/util/deepEqual","sap/ui/mdc/util/PropertyHelperUtil","sap/base/future"],(e,t,r,o,n,i,a)=>{"use strict";const p={key:{type:"string",mandatory:true,inComplexProperty:{allowed:true}},label:{type:"string",mandatory:true,inComplexProperty:{allowed:true}},tooltip:{type:"string",inComplexProperty:{allowed:true}},visible:{type:"boolean",default:{value:true},inComplexProperty:{allowed:true}},path:{type:"string"},dataType:{type:"string",mandatory:true},formatOptions:{type:"object"},constraints:{type:"object"},maxConditions:{type:"int",default:{value:-1}},caseSensitive:{type:"boolean",default:{value:true}},group:{type:"string",inComplexProperty:{allowed:true}},groupLabel:{type:"string",inComplexProperty:{allowed:true}},filterable:{type:"boolean",default:{value:true},inComplexProperty:{valueIfNotAllowed:false}},sortable:{type:"boolean",default:{value:true},inComplexProperty:{valueIfNotAllowed:false}},propertyInfos:{type:"PropertyReference[]",inComplexProperty:{allowed:true}}};const s={key:"name"};const l={isComplex:function(e){return M.isPropertyComplex(this)},getSimpleProperties:function(e){if(!f.get(e)){return[]}if(this.isComplex()){return this.propertyInfos.map(t=>e.getProperty(t))}else{return[this]}},getSortableProperties:function(e){return this.getSimpleProperties().filter(e=>e.sortable)},getFilterableProperties:function(e){return this.getSimpleProperties().filter(e=>e.filterable)}};const u=["key","label","tooltip","visible","path","dataType","formatOptions","constraints","maxConditions","group","groupLabel","caseSensitive"];const f=new WeakMap;function c(e,t){let r="";if(!t){r=`Invalid property definition: ${e}`}else if(Array.isArray(t)){const o=t.map(e=>`'${Object.keys(e)[0]}'`).join(",");r=`Invalid property definition for properties with keys ${o}: ${e}`}else{const o=t.key??t.name;r=`Invalid property definition for property with key '${o}': ${e}`}return r}function y(e,t){const r=c(e,t);if(i.bValidationException){a.errorThrows(r,{suffix:`Migrate this control's propertyInfo to avoid breaking changes in the future.`})}else{d(e,t)}}function d(e,t){const r=c(e,t);throw new Error(r)}function P(e,t){t.map(t=>{Object.keys(l).forEach(r=>{Object.defineProperty(t,r,{value:function(){return l[r].call(this,e)},writable:true})})})}function b(e){const t=Object.getOwnPropertyNames(e);Object.freeze(e);for(let r=0;r<t.length;r++){const n=e[t[r]];if(typeof n==="function"){Object.freeze(n)}else if(o(n)&&!Object.isFrozen(n)){b(n)}else if(Array.isArray(n)){b(n)}}}function m(e,t){if(!t){return e}return t.split(".").reduce((e,t)=>e&&e[t]?e[t]:null,e)}function h(e){let r;if(typeof e==="object"){r="object"}else{r=e.replace("PropertyReference","string")}return t.getType(r)}function g(e){const t=h(e);if(t.isArrayType()){return t.getBaseType().getDefaultValue()}else{return t.getDefaultValue()}}function v(e,t,r){t.forEach(t=>{e.prepareProperty(t,r)});b(t)}function x(e,t,r,o,n,i){const a=o==null;let p=[];const s=M.isPropertyComplex(t);if(a){i=f.get(e).mAttributeMetadata;n=t}if(!n){return[]}for(const l in i){const u=i[l];const f=a?l:o+"."+l;const c=n[l];if(s&&!u.inComplexProperty.allowed){if("valueIfNotAllowed"in u.inComplexProperty){n[l]=u.inComplexProperty.valueIfNotAllowed}continue}if(c!=null&&typeof u.type==="string"&&u.type.startsWith("PropertyReference")||f==="propertyInfos"){continue}if(c==null){w(n,u,o,l,p,c)}if(typeof u.type==="object"){p=p.concat(x(e,t,r,f,n[l],u.type))}}return p}function w(e,t,o,n,i,a){const p=t.default;if(p.ignoreIfNull&&a===null){return}if(typeof p.value==="string"&&p.value.startsWith("attribute:")){i.push({source:p.value.substring(p.value.indexOf(":")+1),targetPath:o,targetAttribute:n,targetType:t.type})}else if(Array.isArray(p.value)){e[n]=r([],p.value)}else if(typeof p.value==="object"&&p.value!==null){e[n]=r({},p.value)}else{e[n]=p.value}}function C(e){return Object.freeze(e.reduce((e,t)=>{e[t.key]=t;return e},{}))}function j(e,t){for(const r in e){const o=e[r];const n=!t;o.mandatory=o.mandatory===true&&n;o.default={...o.default};o.default.value=o.default.value??g(o.type);o.inComplexProperty={...o.inComplexProperty};if(o.inComplexProperty.allowed===true){o.inComplexProperty.allowed=n||t.inComplexProperty.allowed===true}else if(!("allowed"in o.inComplexProperty)){const e=t?.inComplexProperty.allowed===true&&t?.inComplexProperty.propagateAllowance!==false;o.inComplexProperty.allowed=e}if(typeof o.type==="object"){j(o.type,o)}delete o.inComplexProperty.propagateAllowance}}function A(e,t){if(!Array.isArray(t)){d("Property infos must be an array.")}const o=f.get(e);const n=r([],t);e.validateProperties(n,o.aPreviousRawProperties);const i=O(n);const a=C(i);P(e,i);v(e,i,a);e._validatePropertyConsistency(i,o.aProperties);o.aProperties=i;o.mProperties=a;o.aPreviousRawProperties=r([],t)}function O(e){const t=Object.entries(s);return e.map(e=>{const r={...e};t.forEach(([t,o])=>{if(t in e&&o in e&&e[t]!==e[o]){d(`The values of legacy-attribute '${o}' and it's replacement '${t}' must be identical.`,e)}if(!(t in e)&&o in e){r[t]=e[o]}if(!(o in e)&&t in e){r[o]=e[t]}});return r})}function I(e){return e.key||s["key"]&&e[s["key"]]}const M=e.extend("sap.ui.mdc.util.PropertyHelper",{constructor:function(t,r,o){e.call(this);if(r&&!e.isObjectA(r,"sap.ui.base.ManagedObject")){throw new Error("The type of the parent is invalid.")}Object.keys(o||{}).forEach(e=>{if(e in p&&o[e]!==true){throw new Error("The attribute '"+e+"' is reserved and cannot be overridden by additional attributes.")}});const n={};const i=Object.keys(o||{});n.mAttributeMetadata=u.concat(i).reduce((e,t)=>{e[t]=t in p?p[t]:o[t];return e},{});j(n.mAttributeMetadata);n.aMandatoryAttributes=Object.keys(n.mAttributeMetadata).filter(e=>n.mAttributeMetadata[e].mandatory);n.oParent=r||null;f.set(this,n);this.setProperties(t)}});M.prototype.validateProperties=function(e,t){const r=new Set;for(let o=0;o<e.length;o++){this.validateProperty(e[o],e,t);r.add(I(e[o]))}if(r.size!==e.length){d("Properties do not have unique keys.")}};M.prototype._validatePropertyConsistency=function(e,t){if(t?.length){const r=f.get(this);const{mAttributeMetadata:o}=r;const i=[];for(const r of t){const t=I(r);const a=e.find(e=>I(e)===t);if(!a){i.push({[t]:"PROPERTY_MISSING"})}else{const e=Object.entries(o).reduce((e,[t,o])=>{if(!n(r[t],a[t])){return[...e,{[t]:[r[t],a[t]]}]}return e},[]);if(e.length){i.push({[t]:e})}}}if(i.length){y(`Detected property info modifications after update:`,i)}}};M.prototype.validateProperty=function(e,t,r){if(!o(e)){d("Property info must be a plain object.")}k(this,e,t);if(M.isPropertyComplex(e)){if(!e.propertyInfos||e.propertyInfos.length===0){d("Complex property does not reference existing properties.",e)}}const n=f.get(this);n.aMandatoryAttributes.forEach(t=>{const r=n.mAttributeMetadata[t];const o=r.inComplexProperty.allowed;const i=s[t];const a=i&&i in e;const p=a?e[i]==null:e[t]==null;if(p&&M.isPropertyComplex(e)&&!o){return}if(!(t in e||a)){y("Property does not contain mandatory attribute '"+t+"'.",e)}else if(p){d("Property does not contain mandatory attribute '"+t+"'.",e)}})};function k(e,t,r,o,n,i){const a=o==null;if(a){i=f.get(e).mAttributeMetadata;n=t}for(const p in n){let l=i[p];const u=a?p:o+"."+p;const f=n[p];if(!l){l=i[Object.entries(s).find(e=>e[1]===p)?.[0]]}if(!l){y("Property contains invalid attribute '"+u+"'.",t)}else if(M.isPropertyComplex(t)&&!l.inComplexProperty.allowed){y("Complex property contains invalid attribute '"+u+"'.",t)}else if(typeof l.type==="object"&&f&&typeof f==="object"){k(e,t,r,u,f,l.type)}else if(f!=null&&!h(l.type).isValid(f)){d("The value of '"+u+"' is invalid.",t)}else if(f&&typeof l.type==="string"&&l.type.startsWith("PropertyReference")){T(e,t,r,u,f,l)}}}function T(e,t,r,o,n,i){const a=i.type.endsWith("[]")?n:[n];const p=new Set(a);if(a.indexOf(I(t))>-1){d("Property references itself in the '"+o+"' attribute.",t)}if(p.size!==a.length){d("Property contains duplicate names in the '"+o+"' attribute.",t)}for(let e=0;e<r.length;e++){if(p.has(I(r[e]))){if(M.isPropertyComplex(r[e])){d("Property references complex properties in the '"+o+"' attribute.",t)}p.delete(I(r[e]))}}if(p.size>0){d("Property references non-existing properties in the '"+o+"' attribute.",t)}}M.prototype.prepareProperty=function(e,t){const r=x(this,e,t);r.forEach(t=>{const r=m(e,t.targetPath);if(r){let o=m(e,t.source);if(o==null){o=g(t.targetType)}r[t.targetAttribute]=o}})};M.prototype.getParent=function(){const e=f.get(this);return e?e.oParent:null};M.prototype.setProperties=function(e){A(this,e)};M.prototype.getProperties=function(){const e=f.get(this);return e?e.aProperties:[]};M.prototype.getPropertyMap=function(){const e=f.get(this);return e?e.mProperties:{}};M.prototype.getProperty=function(e){return this.getPropertyMap()[e]||null};M.prototype.hasProperty=function(e){return e in this.getPropertyMap()};M.isPropertyComplex=function(e){return e!=null&&typeof e==="object"?"propertyInfos"in e:false};M.prototype.destroy=function(){e.prototype.destroy.apply(this,arguments);f.delete(this)};M.prototype._getAttributeMetadata=function(){const e=f.get(this);return e?r({},e.mAttributeMetadata):null};M.prototype.getRedundantProperties=function(){return[]};Object.defineProperties(M,{reportInvalidProperty:{value:y},throwInvalidPropertyError:{value:d}});return M});
//# sourceMappingURL=PropertyHelper.js.map