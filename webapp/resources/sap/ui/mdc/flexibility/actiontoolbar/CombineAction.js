/*!
 * OpenUI5
 * (c) Copyright 2025 SAP SE or an SAP affiliate company.
 * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
 */
sap.ui.define(["sap/base/i18n/Localization","sap/m/changeHandler/CombineButtons"],(t,e)=>{"use strict";const n={...e};const a="$sap.m.flexibility.CombineButtonsModel";function o(e){const{buttons:n,modifier:o,appComponent:r,menu:i,actionToolbar:s,actionToolbarAggregation:c,view:g,changeContent:l,revertData:u}=e;let d="";let m="";let p="";const b=[];const w=t.getRTL();const y=[];return n.reduce(async(t,e,n)=>{const v=n;const P=l.buttonsIdForSave[v];const C="$sap.m.flexibility.MenuButtonModel"+v;const A=o.getParent(e);await t;const f=await o.getProperty(e,"text");const B=await o.createControl("sap.m.MenuItem",r,g,P);const I=await o.findIndexInParentAggregation(A);u.insertIndexes[v]=I;const M=await o.createControl("sap.ui.fl.util.ManagedObjectModel",r,g,Object.assign({},P,{id:P.id+"-managedObjectModel"}),{object:e,name:a});await o.insertAggregation(B,"dependents",M,0,g);const h=await o.createControl("sap.ui.core.CustomData",r,g,Object.assign({},P,{id:P.id+"-customData"}),{key:"{ path: '"+a+">key' }",value:"{ path: '"+a+">value' }"});o.bindProperty(B,"text",a+">/text");o.bindProperty(B,"icon",a+">/icon");o.bindProperty(B,"enabled",a+">/enabled");o.bindProperty(B,"visible",a+">/visible");await o.bindAggregation(B,"customData",{path:a+">/customData",template:h,templateShareable:false},g);if(f){if(w){y.unshift(f)}else{y.push(f)}}const S=Object.assign({},P,{id:P.id+"-originalButtonId"});const j=await o.createControl("sap.ui.core.CustomData",r,g,S);o.setProperty(j,"key","originalButtonId");o.setProperty(j,"value",o.getId(e));await o.removeAggregation(s,c,A);await o.insertAggregation(s,"dependents",A,0,g);await o.insertAggregation(e,"customData",j,0,g);await o.insertAggregation(i,"items",B,v,g);b[v]=await o.createControl("sap.ui.fl.util.ManagedObjectModel",r,g,Object.assign({},P,{id:P.id+"-managedObjectModelMenuItem"}),{object:B,name:C});d=d+p+"${"+C+">/enabled}";m=m+p+"${"+C+">/visible}";p=" || ";return{menuButtonModels:b,menuButtonName:y,propertyEnabled:d,propertyVisible:m}},Promise.resolve())}n.applyChange=async function(t,n,a){if(a.modifier.targets!=="jsControlTree"){return Promise.reject(new Error("Combine buttons change can't be applied on XML tree"))}const r=t.getContent();const i=a.modifier;const s=a.view;const c=a.appComponent;const g={parentAggregation:"",insertIndexes:[]};const l=await Promise.all(r.combineButtonSelectors.map(t=>i.bySelector(t,c,s)));const u=await i.getParentAggregationName(l[0],i.getParent(l[0]));const d=await i.bySelector(r.combineButtonSelectors[0],c,s);const m=i.getParent(d);const p=i.getParent(m);const b=await i.getParentAggregationName(m,p);g.parentAggregation=b;const w=await i.findIndexInParentAggregation(m);const y=await i.createControl("sap.m.Menu",c,s,r.menuIdSelector);y.attachEvent("itemSelected","sap.m.changeHandler.CombineButtons.pressHandler",e.pressHandler);const v=await o({buttons:l,modifier:i,appComponent:c,menu:y,actionToolbar:p,actionToolbarAggregation:b,view:s,changeContent:r,revertData:g});const P=v.menuButtonModels;const C=v.menuButtonName;const A=v.propertyVisible;const f=v.propertyEnabled;const B=await i.createControl("sap.m.MenuButton",c,s,r.menuButtonIdSelector,{visible:"{= "+A+"}",enabled:"{= "+f+"}"});await P.reduce(async(t,e)=>{await t;return i.insertAggregation(B,"dependents",e,0,s)},Promise.resolve());i.setProperty(B,"text",C.join("/"));await i.insertAggregation(B,"menu",y,0,s);const I=await i.createControl("sap.ui.mdc.actiontoolbar.ActionToolbarAction",c,s,{...r.menuButtonIdSelector,id:r.menuButtonIdSelector.id+"--action"});await i.insertAggregation(I,u,B,0,s);await i.insertAggregation(p,b,I,w,s);t.setRevertData(g);return Promise.resolve()};function r(t,e){return t.reduce(async(t,n)=>{await t;const a=await e.getProperty(n,"key");if(a==="originalButtonId"){return e.destroy(n)}return undefined},Promise.resolve())}n.revertChange=async function(t,e,n){const a=n.modifier;const o=n.view;const i=t.getRevertData();const s=t.getContent();const c=i.parentAggregation;const g=await a.bySelector(s.menuButtonIdSelector,n.appComponent,o);const l=a.getParent(g);const u=a.getParent(l);const d=s.combineButtonSelectors.slice().reverse();await a.removeAggregation(u,c,l);await a.destroy(l);const m=d.length;await d.reduce(async(t,e,s)=>{const g=s;await t;const l=a.bySelector(e,n.appComponent,o);const d=await a.getAggregation(l,"customData");await r(d,a);const p=a.getParent(l);return a.insertAggregation(u,c,p,i.insertIndexes[m-g-1],o)},Promise.resolve());t.resetRevertData()};return n},true);
//# sourceMappingURL=CombineAction.js.map