/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

        (c) Copyright 2009-2015 SAP SE. All rights reserved
    
 */
sap.ui.define(["sap/base/Log","../thirdparty/three"],function(e,t){"use strict";const r=31;const n=31;var a=function(){this._maskMaterial=new t.MeshBasicMaterial({side:t.DoubleSide,fog:false});this._depthMaterial=new t.ShaderMaterial({vertexShader:["#include <clipping_planes_pars_vertex>","void main() {","\t#include <data_texture_explicit>","\t#include <begin_vertex>","\t#include <project_vertex>","\t#include <clipping_planes_vertex>","}"].join("\n"),fragmentShader:["#include <clipping_planes_pars_fragment>","void main() {","\t#include <clipping_planes_fragment>","\thighp vec4 value = vec4(fract(vec4(1.0, 255.0, 65025.0, 16581375.0) * gl_FragCoord.z));","\tvalue.xyz -= value.yzw * (1.0 / 255.0);","\tgl_FragColor = value;","}"].join("\n"),side:t.DoubleSide,clipping:true});this._renderTarget=new t.WebGLRenderTarget(r,n,{minFilter:t.NearestFilter,magFilter:t.NearestFilter});this._renderTarget.texture.generateMipmaps=false;this._renderTarget.depthBuffer=true};var i;var l=new t.Matrix4;var o=new t.Frustum;var s=new t.Matrix4;var c=new t.Vector2;var u=new t.Raycaster;var d=new t.Ray;var p=new t.Sphere;var f=[];var g=new Uint8Array(4);var h=new t.Vector3;function v(e){var t=e.parent;while(t){if(t.userData.closed){e=t}t=t.parent}while(e.parent&&e.userData.skipIt){e=e.parent}return e}a.prototype.hitTest=function(e,a,x,_,m,y,C,M,w){if(i?.constructor!==C.constructor){i=new C.constructor}i.copy(C);const b=r>>1;const T=n>>1;const S=0;const j=0;var D=C.view;if(D){const t=D.width/x;const n=D.height/_;i.setViewOffset(D.fullWidth,D.fullHeight,D.offsetX+(e-.5*r)*t,D.offsetY+(a-.5*r)*n,t*r,n*r)}else{i.setViewOffset(x,_,e-r*.5,a-n*.5,r,n)}i.updateMatrixWorld();i.updateProjectionMatrix();l.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse);o.setFromProjectionMatrix(l);u.setFromCamera(c.set(S,j),i);const P=m.getContextRedBits();const B=m.getContextGreenBits();const F=m.getContextBlueBits();const R=P+B;const I=(1<<P)-1;const $=(1<<B)-1;const O=(1<<F)-1;const k=1/I;const V=1/$;const W=1/O;const z=this._maskMaterial;var A=new t.Color;m.getClearColor(A);var G=m.getClearAlpha();var N=m.autoClear;m.setRenderTarget(this._renderTarget);m.clippingPlanes=M||[];m.autoClear=false;m.setClearColor(0,0);m.clear(true,true,false);var E=z.color;var L=0;f.length=0;var U=w&&w.ignoreUnderlay?null:[];var H=[];var X=w&&w.ignoreOverlay?null:[];function Y(e,t){if(!t){H.push(e)}else if(t<0){if(U){U.push(e)}}else if(X){X.push(e)}}function q(e,r){if(!e.visible||e.userData.selectable===false){return}r=r||e.userData.renderStage;var n=e.geometry;if(n&&e.material){if(n.userData.isPointCloud){Y(e,r)}else if(o.intersectsObject(e)){const a=e.matrixWorld;const i=e.userData.renderGroup;if(i?.boundingSphere){p.setFromPackedArray(i.boundingSphere)}else{if(n.boundingSphere==null){n.computeBoundingSphere()}p.copy(n.boundingSphere)}p.applyMatrix4(a);if(u.ray.intersectsSphere(p)){s.copy(a).invert();d.copy(u.ray).applyMatrix4(s);const l=i?.boundingBox?t.Box3.newFromPackedArray(i.boundingBox):n.boundingBox;if(l==null||d.intersectsBox(l)){Y(e,r)}}}}var a=e.children;for(var i=0,l=a.length;i<l;i++){q(a[i],r)}}q(y);function J(e,t){const r=e.material;e.material=t;if(e.geometry.userData.isPointCloud){t.specularMap=r.specularMap}m.render(e,i);e.material=r}function K(e){L+=1;f.push(e);E.setRGB((L&I)*k,(L>>P&$)*V,(L>>R&O)*W);J(e,z)}if(U!=null&&U.length>0){U.forEach(K);m.clearDepth()}H.forEach(K);if(X!=null&&X.length>0){m.clearDepth();X.forEach(K)}m.readRenderTargetPixels(this._renderTarget,b,T,1,1,g);L=(g[0]>>8-P)+(g[1]>>8-B<<P)+(g[2]>>8-F<<R);let Q=L>0?f[L-1]:null;if(Q){m.clear(true,true,false);J(Q,this._depthMaterial);m.readRenderTargetPixels(this._renderTarget,b,T,1,1,g);const e=(g[0]+(g[1]+(g[2]+g[3]/255)/255)/255)/255*2-1;h.set(S,j,e).unproject(i);if(Q.geometry.userData.isPointCloud&&y.userData._instanceIndexToNodeMap instanceof Map){this._clusterIndexMaterial??=new t.ShaderMaterial({vertexShader:["#include <clipping_planes_pars_vertex>","varying lowp vec3 clusterColor;","void main() {","\t#include <data_texture_explicit>","\t#include <begin_vertex>","\t#include <project_vertex>","\t#include <clipping_planes_vertex>","\thighp int index = int(clusterInstance);",`\tclusterColor.x = float(index & ${I}) * ${k};`,`\tclusterColor.y = float((index >> ${P}) & ${$}) * ${V};`,`\tclusterColor.z = float((index >> ${R}) & ${O}) * ${W};`,"}"].join("\n"),fragmentShader:["#include <clipping_planes_pars_fragment>","varying lowp vec3 clusterColor;","void main() {","\t#include <clipping_planes_fragment>","\tgl_FragColor = vec4(clusterColor, 1.0);","}"].join("\n"),side:t.DoubleSide,clipping:true});m.clear(true,true,false);J(Q,this._clusterIndexMaterial);m.readRenderTargetPixels(this._renderTarget,b,T,1,1,g);const e=(g[0]>>8-P)+(g[1]>>8-B<<P)+(g[2]>>8-F<<R);if(e>0){Q=y.userData._instanceIndexToNodeMap.get(e)??Q}}}m.setRenderTarget(null);m.clippingPlanes=[];m.setClearColor(A,G);m.autoClear=N;return Q?{distance:u.ray.origin.distanceTo(h),point:h,object:v(Q)}:null};a.prototype.hitTestPrecise=function(e,t,r,n,a,i,l){u.setFromCamera(c.set(e/r*2-1,t/n*-2+1),i);if(l&&l.length>0){for(var o in l){var s=l[o];var d=s.distanceToPoint(u.ray.origin),p=-d/s.normal.dot(u.ray.direction);if(p>0){if(d<0){u.near=Math.max(u.near,p)}else{u.far=Math.min(u.far,p)}}else if(d<0){return null}}}var f=u.intersectObjects(a.children,true);if(l&&l.length>0){u.near=0;u.far=Infinity}if(f){for(var g in f){var h=f[g];var x=v(h.object);if(x.visible&&!x.isBillboard&&!x.isDetailView){h.object=x;return h}}}return null};a.prototype.hitTestPoint=function(e,t,r,n,a,i,l){u.setFromCamera(c.set(e/r*2-1,t/n*-2+1),i);if(l&&l.length>0){for(var o in l){var s=l[o];var d=s.distanceToPoint(u.ray.origin),p=-d/s.normal.dot(u.ray.direction);if(p>0){if(d<0){u.near=Math.max(u.near,p)}else{u.far=Math.min(u.far,p)}}else if(d<0){return null}}}var f=u.intersectObjects(a.children,true);if(l&&l.length>0){u.near=0;u.far=Infinity}return f.length===1?f[0].point:null};return a});
//# sourceMappingURL=HitTester.js.map