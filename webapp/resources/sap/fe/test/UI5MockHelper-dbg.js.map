{"version":3,"names":["createMockContext","oContextData","oBinding","isInactive","mocked","mock","Object","getPrototypeOf","Context","createNewContext","_isKeptAlive","_contextData","_oBinding","_isInactive","isA","mockImplementation","sClassName","getProperty","key","requestProperty","keyOrKeys","Array","isArray","Promise","resolve","map","requestObject","setProperty","value","getObject","path","result","includes","parts","split","reduce","sum","part","getPath","getBinding","getModel","setKeepAlive","bool","_fnOnBeforeDestroy","_bRequestMessages","isKeepAlive","_exports","MockContext","createMockEvent","params","source","Event","_params","getSource","mockReturnValue","getParameter","name","getParameters","MockEvent","createMockListBinding","aContextData","oMockModel","ODataListBinding","_aMockContexts","contextData","_mockModel","setModel","model","requestContexts","getCurrentContexts","getAllCurrentContexts","getLength","length","getContexts","getUpdateGroupId","MockListBinding","createMockPropertyBinding","ODataPropertyBinding","_value","_path","getValue","MockPropertyBinding","createMockCompositeBinding","aBindings","CompositeBinding","_aBindings","getBindings","binding","MockCompositeBinding","createMockContextBinding","oContext","ODataContextBinding","mockModel","oMockContext","getInternalMockContext","oModel","getBoundContext","invoke","mockResolvedValue","MockContextBinding","createMockMetaModel","oMetaData","ODataMetaModel","oMetaContext","getMetaContext","sPath","$path","createBindingContext","getMetaPath","metamodel","MockMetaModel","createMockModel","oMockListBinding","oMockContextBinding","ODataModel","fnOptimisticBatchEnabler","mockListBinding","mockContextBinding","setMetaModel","oMetaModel","bindList","bindContext","getMetaModel","MockModel","createMockModelFromListBinding","createMockModelFromContextBinding","undefined","createMockView","View","MockView","createMockController","Controller","_routing","InternalRouting","_sideEffects","SideEffects","_intentBasedNavigation","InternalIntentBasedNavigation","editFlow","EditFlow","share","Share","collaborativeDraft","CollaborativeDraft","recommendations","Recommendations","messageHandler","MessageHandler","getAppComponent","jest","fn","AppComponent","getView","MockController","mockMVC","existing","view","controller","getController","getText","textID","parameters","metaPath","resourceModel","ResourceModel","bundleName","enhanceWith","async","createMockResourceModel"],"sourceRoot":".","sources":["UI5MockHelper.ts"],"sourcesContent":["import type { WithMock } from \"@sap-ux/jest-mock-ui5/dist/generic\";\nimport { mock } from \"@sap-ux/jest-mock-ui5/dist/generic\";\nimport AppComponent from \"sap/fe/core/AppComponent\";\nimport type { FEView } from \"sap/fe/core/BaseController\";\nimport ResourceModel from \"sap/fe/core/ResourceModel\";\nimport CollaborativeDraft from \"sap/fe/core/controllerextensions/CollaborativeDraft\";\nimport EditFlow from \"sap/fe/core/controllerextensions/EditFlow\";\nimport InternalIntentBasedNavigation from \"sap/fe/core/controllerextensions/InternalIntentBasedNavigation\";\nimport InternalRouting from \"sap/fe/core/controllerextensions/InternalRouting\";\nimport MessageHandler from \"sap/fe/core/controllerextensions/MessageHandler\";\nimport Recommendations from \"sap/fe/core/controllerextensions/Recommendations\";\nimport Share from \"sap/fe/core/controllerextensions/Share\";\nimport SideEffects from \"sap/fe/core/controllerextensions/SideEffects\";\nimport Event from \"sap/ui/base/Event\";\nimport type EventProvider from \"sap/ui/base/EventProvider\";\nimport Controller from \"sap/ui/core/mvc/Controller\";\nimport View from \"sap/ui/core/mvc/View\";\nimport CompositeBinding from \"sap/ui/model/CompositeBinding\";\nimport Context from \"sap/ui/model/odata/v4/Context\";\nimport ODataContextBinding from \"sap/ui/model/odata/v4/ODataContextBinding\";\nimport ODataListBinding from \"sap/ui/model/odata/v4/ODataListBinding\";\nimport ODataMetaModel from \"sap/ui/model/odata/v4/ODataMetaModel\";\nimport ODataModel from \"sap/ui/model/odata/v4/ODataModel\";\nimport ODataPropertyBinding from \"sap/ui/model/odata/v4/ODataPropertyBinding\";\n\n/**\n * Utility type to mock a sap.ui.model.odata.v4.Context\n */\nexport type MockContext = WithMock<Context> & {\n\t_isKeptAlive: boolean;\n\t_contextData: any;\n\t_oBinding: any;\n\t_isInactive: boolean;\n};\n/**\n * Factory function to create a new MockContext.\n * @param oContextData A map of the different properties of the context. The value for the key '$path' will be returned by the 'getPath' method\n * @param oBinding The binding of the context\n * @param isInactive Is the context iniactive or not\n * @returns A new MockContext\n */\nexport function createMockContext(oContextData?: any, oBinding?: any, isInactive?: boolean): MockContext {\n\t// Ugly workaround to get a proper mock pbject, as Context isn't properly exported from UI5\n\tconst mocked = mock(Object.getPrototypeOf((Context as any).createNewContext(null, null, \"/e\"))) as MockContext;\n\tmocked._isKeptAlive = false;\n\tmocked._contextData = oContextData || {};\n\tmocked._oBinding = oBinding;\n\tmocked._isInactive = !!isInactive;\n\n\t// Default behavior\n\tmocked.mock.isA.mockImplementation((sClassName: string) => {\n\t\treturn sClassName === \"sap.ui.model.odata.v4.Context\";\n\t});\n\tmocked.mock.getProperty.mockImplementation((key: string) => {\n\t\treturn mocked._contextData[key];\n\t});\n\tmocked.mock.requestProperty.mockImplementation((keyOrKeys: string | string[]) => {\n\t\tif (Array.isArray(keyOrKeys)) {\n\t\t\treturn Promise.resolve(keyOrKeys.map((key) => mocked._contextData[key]));\n\t\t}\n\t\treturn Promise.resolve(mocked._contextData[keyOrKeys]);\n\t});\n\tmocked.mock.requestObject.mockImplementation((key: string | undefined) => {\n\t\treturn key ? Promise.resolve(mocked._contextData[key]) : mocked._contextData;\n\t});\n\tmocked.mock.setProperty.mockImplementation((key: string, value: any) => {\n\t\tmocked._contextData[key] = value;\n\t\treturn mocked._contextData[key];\n\t});\n\n\tmocked.mock.getObject.mockImplementation((path: string) => {\n\t\tlet result = path ? mocked._contextData[path] : mocked._contextData;\n\n\t\tif (!result && path && path.includes(\"/\")) {\n\t\t\tconst parts = path.split(\"/\");\n\t\t\tresult = parts.reduce((sum, part: any) => {\n\t\t\t\tsum = part && sum ? sum[part] : sum;\n\t\t\t\treturn sum;\n\t\t\t}, mocked._contextData);\n\t\t}\n\n\t\treturn result;\n\t});\n\n\tmocked.mock.getPath.mockImplementation(() => mocked._contextData[\"$path\"]);\n\tmocked.mock.getBinding.mockImplementation(() => mocked._oBinding);\n\tmocked.mock.getModel.mockImplementation(() => mocked._oBinding?.getModel());\n\tmocked.mock.setKeepAlive.mockImplementation((bool: boolean, _fnOnBeforeDestroy?: any, _bRequestMessages?: boolean) => {\n\t\tmocked._isKeptAlive = bool;\n\t});\n\tmocked.mock.isKeepAlive.mockImplementation(() => mocked._isKeptAlive);\n\tmocked.mock.isInactive.mockImplementation(() => mocked._isInactive);\n\n\treturn mocked;\n}\n/**\n * For compatibility reasons, we keep a new operator. Use the factory function createMockContext instead.\n */\nexport const MockContext: new (oValues?: any, oBinding?: any, isInactive?: boolean) => MockContext = createMockContext as any;\n\n/**\n * Utility type to mock a sap.ui.base.Event\n */\nexport type MockEvent = WithMock<Event> & {\n\t_params: { [key: string]: any };\n};\n/**\n * Factory function to create a new MockEvent.\n * @param params The parameters of the event\n * @param source\n * @returns A new MockEvent\n */\nexport function createMockEvent(params?: { [key: string]: unknown }, source?: EventProvider): MockEvent {\n\tconst mocked = mock(Event) as MockEvent;\n\tmocked._params = params || {};\n\n\tif (source) {\n\t\tmocked.mock.getSource.mockReturnValue(source);\n\t}\n\n\t// Default behavior\n\tmocked.mock.getParameter.mockImplementation((name) => mocked._params[name]);\n\tmocked.mock.getParameters.mockImplementation(() => {\n\t\treturn mocked._params;\n\t});\n\n\treturn mocked;\n}\n/**\n * For compatibility reasons, we keep a new operator. Use the factory function createMockEvent instead.\n */\nexport const MockEvent: new (params?: { [key: string]: any }) => MockEvent = createMockEvent as any;\n\n/**\n * Utility type to mock a sap.ui.model.odata.v4.ODataListBinding\n */\nexport type MockListBinding = WithMock<ODataListBinding> & {\n\t_aMockContexts: MockContext[];\n\t_mockModel?: MockModel;\n\n\t/**\n\t * Utility method to set the model of the ListBinding\n\t */\n\tsetModel: (model: MockModel) => void;\n};\n/**\n * Factory function to create a new MockListBinding.\n * @param aContextData An array of objects holding the different properties of the contexts referenced by the ListBinding\n * @param oMockModel The model of the ListBinding\n * @returns A new MockListBinding\n */\nexport function createMockListBinding(aContextData?: any[], oMockModel?: MockModel): MockListBinding {\n\tconst mocked = mock(ODataListBinding) as MockListBinding;\n\taContextData = aContextData || [];\n\tmocked._aMockContexts = aContextData.map((contextData) => {\n\t\treturn createMockContext(contextData, mocked);\n\t});\n\tmocked._mockModel = oMockModel;\n\n\t// Utility API\n\tmocked.setModel = (model: MockModel) => {\n\t\tmocked._mockModel = model;\n\t};\n\n\t// Default behavior\n\tmocked.mock.isA.mockImplementation((sClassName: string) => {\n\t\treturn sClassName === \"sap.ui.model.odata.v4.ODataListBinding\";\n\t});\n\tmocked.mock.requestContexts.mockImplementation(() => {\n\t\treturn Promise.resolve(mocked._aMockContexts);\n\t});\n\tmocked.mock.getCurrentContexts.mockImplementation(() => {\n\t\treturn mocked._aMockContexts;\n\t});\n\tmocked.mock.getAllCurrentContexts.mockImplementation(() => {\n\t\treturn mocked._aMockContexts;\n\t});\n\tmocked.mock.getLength.mockImplementation(() => {\n\t\treturn mocked._aMockContexts.length;\n\t});\n\tmocked.mock.getContexts.mockImplementation(() => {\n\t\treturn mocked._aMockContexts;\n\t});\n\tmocked.mock.getModel.mockImplementation(() => {\n\t\treturn mocked._mockModel;\n\t});\n\tmocked.mock.getUpdateGroupId.mockReturnValue(\"auto\");\n\n\treturn mocked;\n}\n/**\n * For compatibility reasons, we keep a new operator. Use the factory function createMockListBinding instead.\n */\nexport const MockListBinding: new (aContexts?: any[], mockModel?: MockModel) => MockListBinding = createMockListBinding as any;\n\n/**\n * Utility type to mock a sap.ui.model.odata.v4.ODataPropertyBinding\n */\nexport type MockPropertyBinding = WithMock<ODataPropertyBinding> & {\n\t_value?: any;\n\t_path?: string;\n\t_mockModel?: MockModel;\n};\n/**\n * Factory function to create a new MockPropertyBinding.\n * @param value The value returnd by the PropertyBinding\n * @param path The path of the PropertyBinding\n * @param oMockModel The model of the PropertyBinding\n * @returns A new MockPropertyBinding\n */\nexport function createMockPropertyBinding(value: any, path?: string, oMockModel?: MockModel): MockPropertyBinding {\n\tconst mocked = mock(ODataPropertyBinding) as MockPropertyBinding;\n\tmocked._mockModel = oMockModel;\n\tmocked._value = value;\n\tmocked._path = path;\n\n\t// Default behavior\n\tmocked.mock.isA.mockImplementation((sClassName: string) => {\n\t\treturn sClassName === \"sap.ui.model.odata.v4.ODataPropertyBinding\";\n\t});\n\tmocked.mock.getModel.mockImplementation(() => {\n\t\treturn mocked._mockModel;\n\t});\n\tmocked.mock.getValue.mockImplementation(() => {\n\t\treturn mocked._value;\n\t});\n\tmocked.mock.getPath.mockImplementation(() => {\n\t\treturn mocked._path;\n\t});\n\n\treturn mocked;\n}\n/**\n * For compatibility reasons, we keep a new operator. Use the factory function createMockPropertyBinding instead.\n */\nexport const MockPropertyBinding: new (value: any, oMockModel?: MockModel) => MockPropertyBinding = createMockPropertyBinding as any;\n\n/**\n * Utility type to mock a sap.ui.model.CompositeBinding\n */\nexport type MockCompositeBinding = WithMock<CompositeBinding> & {\n\t_aBindings: MockPropertyBinding[];\n};\n/**\n * Factory function to create a new MockCompositeBinding.\n * @param aBindings The bindings of the CompositeBinding\n * @returns A new MockCompositeBinding\n */\nexport function createMockCompositeBinding(aBindings: MockPropertyBinding[]): MockCompositeBinding {\n\tconst mocked = mock(CompositeBinding) as MockCompositeBinding;\n\tmocked._aBindings = aBindings;\n\n\t// Default behavior\n\tmocked.mock.isA.mockImplementation((sClassName: string) => {\n\t\treturn sClassName === \"sap.ui.model.CompositeBinding\";\n\t});\n\tmocked.mock.getBindings.mockImplementation(() => {\n\t\treturn mocked._aBindings;\n\t});\n\tmocked.mock.getValue.mockImplementation(() => {\n\t\treturn mocked._aBindings.map((binding) => binding.getValue());\n\t});\n\n\treturn mocked;\n}\n/**\n * For compatibility reasons, we keep a new operator. Use the factory function createMockCompositeBinding instead.\n */\nexport const MockCompositeBinding: new (aBindings: MockPropertyBinding[]) => MockCompositeBinding = createMockCompositeBinding as any;\n\n/**\n * Utility type to mock a sap.ui.model.odata.v4.ODataContextBinding\n */\nexport type MockContextBinding = WithMock<ODataContextBinding> & {\n\toMockContext: MockContext;\n\tisKeptAlive: boolean;\n\tmockModel?: MockModel;\n\n\t/**\n\t * Utility method to access the internal MockContext of the ContextBinding\n\t */\n\tgetInternalMockContext: () => MockContext;\n\t/**\n\t * Utility method to set the model of the ContextBinding\n\t */\n\tsetModel: (oModel: MockModel) => void;\n};\n/**\n * Factory function to create a new MockContextBinding.\n * @param oContext The context of the ContextBinding\n * @param oMockModel The model of the ContextBinding\n * @returns A new MockContextBinding\n */\nexport function createMockContextBinding(oContext?: any, oMockModel?: MockModel): MockContextBinding {\n\tconst mocked = mock(ODataContextBinding) as MockContextBinding;\n\tmocked.mockModel = oMockModel;\n\tmocked.oMockContext = createMockContext(oContext || {}, mocked);\n\n\t// Utility API\n\tmocked.getInternalMockContext = () => {\n\t\treturn mocked.oMockContext;\n\t};\n\tmocked.setModel = (oModel: MockModel) => {\n\t\tmocked.mockModel = oModel;\n\t};\n\n\t// Default behavior\n\tmocked.mock.isA.mockImplementation((sClassName: string) => {\n\t\treturn sClassName === \"sap.ui.model.odata.v4.ODataContextBinding\";\n\t});\n\tmocked.mock.getBoundContext.mockImplementation(() => {\n\t\treturn mocked.oMockContext;\n\t});\n\tmocked.mock.getModel.mockImplementation(() => {\n\t\treturn mocked.mockModel;\n\t});\n\tmocked.mock.invoke.mockResolvedValue(true);\n\n\treturn mocked;\n}\n/**\n * For compatibility reasons, we keep a new operator. Use the factory function createMockContextBinding instead.\n */\nexport const MockContextBinding: new (oContext?: any, oMockModel?: MockModel) => MockContextBinding = createMockContextBinding as any;\n\n/**\n * Utility type to mock a sap.ui.model.odata.v4.ODataMetaModel\n */\nexport type MockMetaModel = WithMock<ODataMetaModel> & {\n\toMetaContext: MockContext;\n};\n/**\n * Factory function to create a new MockMetaModel.\n * @param oMetaData A map of the different metadata properties of the MetaModel (path -> value).\n * @returns A new MockMetaModel\n */\nexport function createMockMetaModel(oMetaData?: any): MockMetaModel {\n\tconst mocked = mock(ODataMetaModel) as MockMetaModel;\n\tmocked.oMetaContext = createMockContext(oMetaData || {});\n\n\t// Default behavior\n\tmocked.mock.getMetaContext.mockImplementation((sPath: string) => {\n\t\treturn createMockContext({ $path: sPath });\n\t});\n\tmocked.mock.getObject.mockImplementation((sPath: string) => {\n\t\treturn mocked.oMetaContext.getProperty(sPath);\n\t});\n\tmocked.mock.createBindingContext.mockImplementation((sPath: string) => {\n\t\treturn createMockContext({ $path: sPath });\n\t});\n\tmocked.mock.getMetaPath.mockImplementation((sPath: string) => {\n\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t// @ts-ignore\n\t\tconst metamodel = new ODataMetaModel();\n\t\treturn sPath ? metamodel.getMetaPath(sPath) : sPath;\n\t});\n\tmocked.mock.isA.mockImplementation((sClassName: string) => {\n\t\treturn sClassName === \"sap.ui.model.odata.v4.ODataMetaModel\";\n\t});\n\n\treturn mocked;\n}\n/**\n * For compatibility reasons, we keep a new operator. Use the factory function createMockMetaModel instead.\n */\nexport const MockMetaModel: new (oMetaData?: any) => MockMetaModel = createMockMetaModel as any;\n\n/**\n * Utility type to mock a sap.ui.model.odata.v4.ODataModel\n */\nexport type MockModel = WithMock<ODataModel> & {\n\toMetaModel?: MockMetaModel;\n\tmockListBinding?: MockListBinding;\n\tmockContextBinding?: MockContextBinding;\n\n\t/**\n\t * Utility method to set the metamodel of the MockModel\n\t */\n\tsetMetaModel: (oMetaModel: MockMetaModel) => void;\n};\n/**\n * Factory function to create a new MockModel.\n * @param oMockListBinding A list binding that will be returned when calling bindList.\n * @param oMockContextBinding A context binding that will be returned when calling bindContext.\n * @returns A new MockModel\n */\nexport function createMockModel(oMockListBinding?: MockListBinding, oMockContextBinding?: MockContextBinding): MockModel {\n\tconst mocked = mock(ODataModel) as MockModel;\n\tmocked.fnOptimisticBatchEnabler = null;\n\tmocked.mockListBinding = oMockListBinding;\n\tmocked.mockContextBinding = oMockContextBinding;\n\tif (oMockListBinding) {\n\t\toMockListBinding.setModel(mocked);\n\t}\n\tif (oMockContextBinding) {\n\t\toMockContextBinding.setModel(mocked);\n\t}\n\n\t// Utility API\n\tmocked.setMetaModel = (oMetaModel: MockMetaModel) => {\n\t\tmocked.oMetaModel = oMetaModel;\n\t};\n\n\t// Default behavior\n\tmocked.mock.bindList.mockImplementation(() => {\n\t\treturn mocked.mockListBinding;\n\t});\n\tmocked.mock.bindContext.mockImplementation(() => {\n\t\treturn mocked.mockContextBinding;\n\t});\n\tmocked.mock.getMetaModel.mockImplementation(() => {\n\t\treturn mocked.oMetaModel;\n\t});\n\tmocked.mock.isA.mockImplementation((sClassName: string) => {\n\t\treturn sClassName === \"sap.ui.model.odata.v4.ODataModel\";\n\t});\n\n\treturn mocked;\n}\n/**\n * For compatibility reasons, we keep a new operator. Use the factory function createMockModel instead.\n */\nexport const MockModel: new (oMockListBinding?: MockListBinding, oMockContextBinding?: MockContextBinding) => MockModel =\n\tcreateMockModel as any;\n/**\n * Factory function to create a new MockModel used with a listBinding.\n * @param oMockListBinding A list binding that will be returned when calling bindList.\n * @returns A new MockModel\n */\nexport function createMockModelFromListBinding(oMockListBinding: MockListBinding): MockModel {\n\treturn createMockModel(oMockListBinding);\n}\n/**\n *  Factory function to create a new MockModel used with a contextBinding.\n * @param oMockContextBinding A context binding that will be returned when calling bindContext.\n * @returns A new MockModel\n */\nexport function createMockModelFromContextBinding(oMockContextBinding: MockContextBinding): MockModel {\n\treturn createMockModel(undefined, oMockContextBinding);\n}\n\n/**\n * Utility type to mock a sap.ui.core.mvc.View\n */\nexport type MockView = WithMock<FEView>;\n/**\n * Factory function to create a new MockView.\n * @returns A new MockView\n */\nexport function createMockView(): MockView {\n\tconst mocked = mock(View);\n\n\t// Default behavior\n\tmocked.mock.isA.mockImplementation((sClassName: string) => {\n\t\treturn sClassName === \"sap.ui.core.mvc.View\";\n\t});\n\n\treturn mocked as MockView;\n}\n/**\n * For compatibility reasons, we keep a new operator. Use the factory function createMockView instead.\n */\nexport const MockView: new () => MockView = createMockView as any;\n\n/**\n * Utility type to mock a sap.fe.core.PageController\n */\nexport type MockController = WithMock<Controller> & {\n\t_routing: WithMock<InternalRouting>;\n\t_sideEffects: WithMock<SideEffects>;\n\t_intentBasedNavigation: WithMock<InternalIntentBasedNavigation>;\n\teditFlow: WithMock<EditFlow>;\n\tshare: WithMock<Share>;\n\trecommendations: WithMock<Recommendations>;\n\tcollaborativeDraft: WithMock<CollaborativeDraft>;\n\tmessageHandler: WithMock<MessageHandler>;\n\tgetAppComponent: () => WithMock<AppComponent>;\n\tgetModel: () => MockModel;\n};\n\n/**\n * Factory function to create a new MockController.\n * @param model Optional model that should be returned by the getModel method\n * @returns A new MockController\n */\nexport function createMockController(model?: MockModel): MockController {\n\tconst mocked = mock(Controller) as MockController;\n\tmocked._routing = mock(InternalRouting);\n\tmocked._sideEffects = mock(SideEffects);\n\tmocked._intentBasedNavigation = mock(InternalIntentBasedNavigation);\n\tmocked.editFlow = mock(EditFlow);\n\tmocked.share = mock(Share);\n\tmocked.collaborativeDraft = mock(CollaborativeDraft);\n\tmocked.recommendations = mock(Recommendations);\n\tmocked.messageHandler = mock(MessageHandler);\n\tmocked.getAppComponent = jest.fn().mockReturnValue(mock(AppComponent));\n\t// Default Behavior\n\tmocked.mock.getView.mockReturnValue(createMockView());\n\tmocked.mock.isA.mockReturnValue(false);\n\tmocked.getModel = jest.fn().mockReturnValue(model);\n\n\treturn mocked;\n}\n/**\n * For compatibility reasons, we keep a new operator. Use the factory function mockController instead.\n */\nexport const MockController: new () => MockController = createMockController as any;\n\nexport interface MVCMock {\n\tmodel: MockModel;\n\tview: MockView;\n\tcontroller: MockController;\n}\n/**\n * Generate model, view and controller mocks that refer to each other.\n * @param existing Optional existing mocked instances that should be used\n * @returns Mocked model, view and controller instances\n */\nexport function mockMVC(existing?: Partial<MVCMock>): MVCMock {\n\tconst model = existing?.model || createMockModel();\n\tconst view = existing?.view || createMockView();\n\tconst controller = existing?.controller || createMockController(model);\n\n\tview.mock.getController.mockReturnValue(controller);\n\tview.mock.getModel.mockReturnValue(model);\n\tcontroller.mock.getView.mockReturnValue(view);\n\n\treturn { model, view, controller };\n}\n\n/**\n * To be used to load messages bundles for tests without app/page component.\n * @param textID ID of the Text\n * @param parameters Array of parameters that are used to create the text\n * @param metaPath Entity set name or action name to overload a text\n * @returns Determined text\n */\nexport function getText(textID: string, parameters?: any[], metaPath?: string) {\n\tconst resourceModel = new ResourceModel({\n\t\tbundleName: \"sap.fe.core.messagebundle\",\n\t\tenhanceWith: [{ bundleName: \"sap.fe.macros.messagebundle\" }, { bundleName: \"sap.fe.templates.messagebundle\" }],\n\t\tasync: false\n\t});\n\treturn resourceModel.getText(textID, parameters, metaPath);\n}\n\n/**\n * Utility type to mock ResourceModel\n */\nexport type MockResourceModel = WithMock<ResourceModel>;\n/**\n * Factory function to create a new MockView.\n * @returns A new MockView\n */\nexport function createMockResourceModel(): MockResourceModel {\n\tconst mocked = mock(ResourceModel);\n\tmocked.getText = jest.fn().mockImplementation(getText);\n\treturn mocked;\n}\n"],"mappings":"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","ignoreList":[],"file":"UI5MockHelper-dbg.js"}