{"version":3,"names":["Log","setLevel","jest","setTimeout","nameSpaceMap","macro","macroShare","macros","feBB","macroField","macrodata","log","customData","control","controls","core","dt","m","f","fl","internalMacro","mdc","actiontoolbar","mdcField","mdcTable","u","uxap","macroMicroChart","microChart","macroTable","mdcvc","mdcv","valueHelp","contentSwitcher","filterBar","draftIndicator","visualFilter","fieldhelp","reveseNamespaceMap","Object","keys","reduce","reverseMap","currentName","select","xpath","useNamespaces","defaultFakeSideEffectService","computeFieldGroupIds","_getTemplatedSelector","xmldom","selector","rootPath","nodeName","startsWith","_buildPreProcessorSettings","sMetadataUrl","mBindingContexts","mModels","fakeSideEffectService","oMetaModel","getMetaModel","hasOwnProperty","assign","converterContext","TemplateModel","forEach","sModelName","isTemplateModel","data","settings","models","metaModel","bindingContexts","appComponent","getSideEffectsService","fn","getDiagnostics","undefined","getShellServices","getManifestEntry","mockReturnValue","sKey","expect","getObject","toBeDefined","oModel","createBindingContext","_loadResourceView","viewName","name","replace","view","LoaderExtensions","loadResource","documentElement","runXPathQuery","extend","toHaveControl","nodes","message","outputXml","serializeXML","pass","length","toNotHaveControl","toHaveTemplatingErrors","xml","xmlText","base64Entries","match","errorMessages","map","atob","slice","join","_exports","formatBuildingBlockXML","xmlString","Array","isArray","formatXML","getControlAttribute","controlSelector","attributeName","xmlDom","serializer","window","XMLSerializer","node","serializeToString","START","END","UID","UID2","lines","currentLine","level","attributes","newline","push","repeat","appendAttributes","sort","a","b","localeCompare","includes","attribute","value","append","parser","read","createParser","onOpenTagStart","onOpenTagName","onAttrName","unshift","onAttrValue","onOpenTagEnd","selfClosed","onCloseTagStart","onCloseTagName","onCloseTagEnd","parse","trim","compileCDS","cdsUrl","options","arguments","cdsString","fs","readFileSync","edmxContent","cds2edmx","dir","path","resolve","allOptions","entries","edmxFileName","filename","_ref","optionKey","optionValue","toString","basename","edmxFilePath","mkdirSync","recursive","writeFileSync","cds","service","sources","require","csn","compiler","compileSources","edmxOptions","odataForeignKeys","odataFormat","odataContainment","edmx","to","Error","getFakeSideEffectsService","classNameODataModel","scopeObject","getModel","isA","getServiceUrl","getService","getCapabilities","serviceInstance","SideEffectsFactory","createInstance","scopeType","getInterface","getFakeDiagnostics","issues","addIssue","issueCategory","issueSeverity","details","getIssues","checkIfIssueExists","find","issue","getConverterContextForTest","manifestSettings","convertedTypes","convertTypes","dataModelPath","contextPath","getInvolvedDataModelObjects","entitySet","ConverterContext","ManifestWrapper","metaModelCache","oRequestor","_MetadataRequestor","create","ODataMetaModel","_requestAnnotationChanges","fetchEntityContainer","getDataModelObjectPathForProperty","property","targetPath","startingEntitySet","navigationProperties","targetObject","targetEntitySet","targetEntityType","entityType","contextLocation","evaluateBinding","bindingString","bindingElement","BindingInfo","_len","args","_key","formatter","apply","evaluateBindingWithModel","modelContent","namedModelsContent","_formatters","ValueFormatter","text","InvisibleText","bindProperty","defaultModel","JSONModel","setModel","setBindingContext","content","model","getText","TESTVIEWID","applyFlexChanges","flexChanges","resultXML","querySelectorAll","id","changes","createFlexibilityChangesObject","appId","oManifest","type","crossNavigation","outbounds","oAppComponent","getComponentData","getManifestObject","getEntry","getLocalId","sId","spyOn","AppStorage","Promise","Loader","Component","Utils","FlexState","initialize","componentId","XmlPreprocessor","process","changesApplied","getChangesFromXML","toBe","variantDependentControlChanges","flatMap","e","filter","attr","getTemplatingResult","xmlInput","createMockResourceModel","templatedXml","DOMParser","xmlDoc","parseFromString","oPreprocessorSettings","XMLPreprocessor","firstElementChild","getTemplatedXML","jsx","defineXMLNamespaceMap","templatedXML","serialiedXML","not","processView","oViewDocument","oPreprocessedView","asElement","asString","outerHTML","processFragment","testData","inputXml","inputDoc","jsonModel","setData","resultDoc","fragments","getElementsByTagName","fragment","innerHTML","xmlResult","children","serializeControl","controlToSerialize","showCustomStyleClasses","tabCount","CONTROLID","getTab","toAdd","tab","i","serializeDelegate","start","sAggregationName","controlDetail","getParent","indexInParent","getAggregation","indexOf","getMetadata","getName","end","middle","getId","ManagedObjectMetadata","isGeneratedId","oControlKey","mProperties","propertyValue","JSON","stringify","mBindingInfos","bindingDetail","oOutputFormat","binding","mAssociations","associationValue","associationValueElement","aCustomStyleClasses","mEventRegistry","startAggregation","sName","out","endAggregation","controlToRender","Serializer","serialize","serializeControlAsXML","preferValue","definedNamespaces","getNamespaceAlias","className","namesSplit","split","namespace","namespaceAlias","nameFull","hasAggregation","mAggregationsKey","mAggregations","propName","concat","uniqueKeys","Set","from","template","fFunction","outXML","createAwaiter","fnResolve","myPromise","promise","registerMockFragments","_len2","_key2","originalLoadTemplate","XMLTemplateProcessor","loadTemplatePromise","loadTemplateStub","mockImplementation","templateName","extension","parseXMLString","initializeAppComponent","viewLevel","ODataModel","prototype","cdsFile","__dirname","guid","uid","cdsContent","jestUI5","mockUrl","pageContent","PageController","DefaultPageContent","_PageController","_inheritsLoose","_proto","render","_jsx","Page","sap","ui","define","_AppComponent","AppComponent","metadata","manifest","title","dataSources","mainService","uri","odataVersion","dataSource","routing","targets","Default","mainContextPath","viewType","viewContent","routes","pattern","target","feManifestSettings","mockAppComponent","initialized","v","getRouter","getTarget","load","templateComponent","object","findElement","collection","element","item","waitForEvent","eventName","attachEventOnce","event","keepBindingStringForTest","enabled","BindingParser","_keepBindingStrings","delayFor","delay"],"sourceRoot":".","sources":["JestTemplatingHelper.tsx"],"sourcesContent":["import type { AnyAnnotation, ConvertedMetadata, EntitySet, Property } from \"@sap-ux/vocabularies-types\";\nimport compiler from \"@sap/cds-compiler\";\nimport * as fs from \"fs\";\nimport type { Range, Ranges } from \"htmljs-parser\";\nimport { createParser } from \"htmljs-parser\";\nimport * as path from \"path\";\nimport Log from \"sap/base/Log\";\nimport LoaderExtensions from \"sap/base/util/LoaderExtensions\";\nimport uid from \"sap/base/util/uid\";\nimport jsx from \"sap/fe/base/jsx-runtime/jsx\";\nimport AppComponent from \"sap/fe/core/AppComponent\";\nimport PageController from \"sap/fe/core/PageController\";\nimport type TemplateComponent from \"sap/fe/core/TemplateComponent\";\nimport TemplateModel from \"sap/fe/core/TemplateModel\";\nimport { parseXMLString } from \"sap/fe/core/buildingBlocks/templating/BuildingBlockTemplateProcessor\";\nimport ConverterContext from \"sap/fe/core/converters/ConverterContext\";\nimport type { ListReportManifestSettings, ObjectPageManifestSettings } from \"sap/fe/core/converters/ManifestSettings\";\nimport ManifestWrapper from \"sap/fe/core/converters/ManifestWrapper\";\nimport { convertTypes, getInvolvedDataModelObjects } from \"sap/fe/core/converters/MetaModelConverter\";\nimport type { IDiagnostics, PageContextPathTarget } from \"sap/fe/core/converters/TemplateConverter\";\nimport type { IssueCategory, IssueSeverity } from \"sap/fe/core/converters/helpers/IssueManager\";\nimport ValueFormatter from \"sap/fe/core/formatters/ValueFormatter\";\nimport type { SideEffectsService } from \"sap/fe/core/services/SideEffectsServiceFactory\";\nimport SideEffectsFactory from \"sap/fe/core/services/SideEffectsServiceFactory\";\nimport type { DataModelObjectPath } from \"sap/fe/core/templating/DataModelPathHelper\";\nimport { createMockResourceModel } from \"sap/fe/test/UI5MockHelper\";\nimport Page from \"sap/m/Page\";\nimport BindingInfo from \"sap/ui/base/BindingInfo\";\nimport BindingParser from \"sap/ui/base/BindingParser\";\nimport type UI5Event from \"sap/ui/base/Event\";\nimport type EventProvider from \"sap/ui/base/EventProvider\";\nimport type ManagedObject from \"sap/ui/base/ManagedObject\";\nimport type { BaseAggregationBindingInfo } from \"sap/ui/base/ManagedObject\";\nimport ManagedObjectMetadata from \"sap/ui/base/ManagedObjectMetadata\";\nimport Component from \"sap/ui/core/Component\";\nimport type UI5Element from \"sap/ui/core/Element\";\nimport InvisibleText from \"sap/ui/core/InvisibleText\";\nimport type { ManifestContent } from \"sap/ui/core/Manifest\";\nimport XMLTemplateProcessor from \"sap/ui/core/XMLTemplateProcessor\";\nimport XMLPreprocessor from \"sap/ui/core/util/XMLPreprocessor\";\nimport Serializer from \"sap/ui/core/util/serializer/Serializer\";\nimport Utils from \"sap/ui/fl/Utils\";\nimport FlexState from \"sap/ui/fl/apply/_internal/flexState/FlexState\";\nimport Loader from \"sap/ui/fl/initial/_internal/Loader\";\nimport AppStorage from \"sap/ui/fl/initial/_internal/Storage\";\nimport XmlPreprocessor from \"sap/ui/fl/initial/_internal/preprocessors/XmlPreprocessor\";\nimport type Context from \"sap/ui/model/Context\";\nimport type MetaModel from \"sap/ui/model/MetaModel\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\nimport ODataMetaModel from \"sap/ui/model/odata/v4/ODataMetaModel\";\nimport ODataModel from \"sap/ui/model/odata/v4/ODataModel\";\nimport _MetadataRequestor from \"sap/ui/model/odata/v4/lib/_MetadataRequestor\";\nimport xpath from \"xpath\";\nimport { createFlexibilityChangesObject } from \"./JestFlexibilityHelper\";\n\ntype PreProcessorSettingsType = {\n\tmodels: {\n\t\t[name: string]: JSONModel | ODataMetaModel;\n\t};\n\tbindingContexts: {\n\t\t[name: string]: Context | undefined;\n\t};\n};\ntype MockFragment = {\n\tname: string;\n\tcontent: string;\n};\n\ntype JestTemplatedView = {\n\tasElement: Element | undefined;\n\tasString: string;\n};\n\nLog.setLevel(1 as any, \"sap.ui.core.util.XMLPreprocessor\");\njest.setTimeout(40000);\n\nconst nameSpaceMap: Record<string, string> = {\n\tmacro: \"sap.fe.macros\",\n\tmacroShare: \"sap.fe.macros.share\",\n\tmacros: \"sap.fe.macros\",\n\tfeBB: \"sap.fe.core.buildingBlocks.templating\",\n\tmacroField: \"sap.fe.macros.field\",\n\tmacrodata: \"http://schemas.sap.com/sapui5/extension/sap.ui.core.CustomData/1\",\n\tlog: \"http://schemas.sap.com/sapui5/extension/sap.ui.core.CustomData/1\",\n\tcustomData: \"http://schemas.sap.com/sapui5/extension/sap.ui.core.CustomData/1\",\n\tcontrol: \"sap.fe.core.controls\",\n\tcontrols: \"sap.fe.macros.controls\",\n\tcore: \"sap.ui.core\",\n\tdt: \"sap.ui.dt\",\n\tm: \"sap.m\",\n\tf: \"sap.ui.layout.form\",\n\tfl: \"sap.ui.fl\",\n\tinternalMacro: \"sap.fe.macros.internal\",\n\tmdc: \"sap.ui.mdc\",\n\tactiontoolbar: \"sap.ui.mdc.actiontoolbar\",\n\tmdcField: \"sap.ui.mdc.field\",\n\tmdcTable: \"sap.ui.mdc.table\",\n\tu: \"sap.ui.unified\",\n\tuxap: \"sap.uxap\",\n\tmacroMicroChart: \"sap.fe.macros.microchart\",\n\tmicroChart: \"sap.suite.ui.microchart\",\n\tmacroTable: \"sap.fe.macros.table\",\n\tmdcvc: \"sap.ui.mdc.valuehelp.content\",\n\tmdcv: \"sap.ui.mdc.valuehelp\",\n\tvalueHelp: \"sap.fe.macros.valueHelp\",\n\tcontentSwitcher: \"sap.fe.macros.contentSwitcher\",\n\tfilterBar: \"sap.fe.macros.filterBar\",\n\tdraftIndicator: \"sap.fe.macros.draftIndicator\",\n\tvisualFilter: \"sap.fe.macros.visualfilters\",\n\tfieldhelp: \"sap.ui.core.fieldhelp\"\n};\nconst reveseNamespaceMap = Object.keys(nameSpaceMap).reduce((reverseMap: Record<string, string>, currentName) => {\n\treverseMap[nameSpaceMap[currentName]] = currentName;\n\treturn reverseMap;\n}, {});\nconst select = xpath.useNamespaces(nameSpaceMap);\n\nconst defaultFakeSideEffectService = { computeFieldGroupIds: () => [] };\n\nfunction _getTemplatedSelector(xmldom: Node, selector: string): string {\n\t/**\n\t * if a root element has been added during the templating by our Jest Templating methods\n\t * the root element is added to the selector path.\n\t */\n\tconst rootPath = \"/root\";\n\treturn `${xmldom.nodeName === \"root\" && !selector.startsWith(rootPath) ? rootPath : \"\"}${selector}`;\n}\n\nasync function _buildPreProcessorSettings(\n\tsMetadataUrl: string | undefined,\n\tmBindingContexts: { [x: string]: string },\n\tmModels: { [x: string]: any },\n\tfakeSideEffectService?: unknown\n): Promise<PreProcessorSettingsType> {\n\tlet oMetaModel: ODataMetaModel | undefined;\n\tif (sMetadataUrl) {\n\t\toMetaModel = await getMetaModel(sMetadataUrl);\n\t\t// To ensure our macro can use #setBindingContext we ensure there is a pre existing JSONModel for converterContext\n\t\t// if not already passed to teh templating\n\t\tif (!mModels.hasOwnProperty(\"converterContext\")) {\n\t\t\tmModels = Object.assign(mModels, { converterContext: new TemplateModel({}, oMetaModel!) });\n\t\t}\n\n\t\tObject.keys(mModels).forEach(function (sModelName) {\n\t\t\tif (mModels[sModelName] && mModels[sModelName].isTemplateModel) {\n\t\t\t\tmModels[sModelName] = new TemplateModel(mModels[sModelName].data, oMetaModel!);\n\t\t\t}\n\t\t});\n\t}\n\n\tconst settings: any = {\n\t\tmodels: Object.assign(\n\t\t\t{\n\t\t\t\tmetaModel: oMetaModel\n\t\t\t},\n\t\t\tmModels\n\t\t),\n\t\tbindingContexts: {},\n\t\tappComponent: {\n\t\t\tgetSideEffectsService: jest.fn(),\n\t\t\tgetDiagnostics: () => undefined,\n\t\t\tgetShellServices: jest.fn(),\n\t\t\tgetManifestEntry: () => undefined\n\t\t}\n\t};\n\n\tsettings.appComponent.getSideEffectsService.mockReturnValue(fakeSideEffectService ?? defaultFakeSideEffectService);\n\t//Inject models and bindingContexts\n\tObject.keys(mBindingContexts).forEach(function (sKey) {\n\t\t/* Assert to make sure the annotations are in the test metadata -> avoid misleading tests */\n\t\texpect(typeof oMetaModel?.getObject(mBindingContexts[sKey])).toBeDefined();\n\t\tconst oModel = mModels[sKey] || oMetaModel;\n\t\tsettings.bindingContexts[sKey] = oModel.createBindingContext(mBindingContexts[sKey]); //Value is sPath\n\t\tsettings.models[sKey] = oModel;\n\t});\n\treturn settings;\n}\n\nfunction _loadResourceView(viewName: string): Element {\n\tconst name = viewName.replace(/\\./g, \"/\") + \".view.xml\";\n\tconst view = LoaderExtensions.loadResource(name);\n\treturn view.documentElement;\n}\n\nexport const runXPathQuery = function (selector: string, xmldom: Node | undefined) {\n\treturn select(selector, xmldom);\n};\n\nexpect.extend({\n\ttoHaveControl(xmldom, selector) {\n\t\tconst nodes = runXPathQuery(_getTemplatedSelector(xmldom, selector), xmldom);\n\t\treturn {\n\t\t\tmessage: () => {\n\t\t\t\tconst outputXml = serializeXML(xmldom);\n\t\t\t\treturn `did not find controls matching ${selector} in generated xml:\\n ${outputXml}`;\n\t\t\t},\n\t\t\tpass: nodes && nodes.length >= 1\n\t\t};\n\t},\n\ttoNotHaveControl(xmldom, selector) {\n\t\tconst nodes = runXPathQuery(_getTemplatedSelector(xmldom, selector), xmldom);\n\t\treturn {\n\t\t\tmessage: () => {\n\t\t\t\tconst outputXml = serializeXML(xmldom);\n\t\t\t\treturn `There is a control matching ${selector} in generated xml:\\n ${outputXml}`;\n\t\t\t},\n\t\t\tpass: nodes && nodes.length === 0\n\t\t};\n\t},\n\t/**\n\t * Checks for errors in `xml` created during templating of an XML string or\n\t * an XML node.\n\t *\n\t * This function checkes for the xml errors created by the\n\t * function [BuildingBlockTemplateProcessor.createErrorXML]{@link sap.fe.core.buildingBlocks.templating.BuildingBlockTemplateProcessor#createErrorXML}.\n\t * @param xml XML String or XML Node to be tested for errors\n\t * @returns Jest Matcher result object\n\t */\n\ttoHaveTemplatingErrors(xml: string | Node) {\n\t\tconst xmlText = typeof xml === \"string\" ? xml : serializeXML(xml);\n\t\tconst base64Entries: string[] = xmlText.match(/BBF\\.base64Decode\\('([^']*)'\\)/gm) || ([] as string[]);\n\t\tconst errorMessages: string[] = base64Entries.map((message: string) => {\n\t\t\tif (message && message.length > 0) {\n\t\t\t\treturn atob(message.match(/('[^']*)/)?.[0]?.slice(1) || \"\");\n\t\t\t}\n\t\t\treturn \"\";\n\t\t});\n\t\tif (errorMessages.length <= 0) {\n\t\t\treturn {\n\t\t\t\tmessage: () => `XML Templating without errors`,\n\t\t\t\tpass: false\n\t\t\t};\n\t\t} else {\n\t\t\treturn {\n\t\t\t\tmessage: () => errorMessages.join(\"\\n\"),\n\t\t\t\tpass: true\n\t\t\t};\n\t\t}\n\t}\n});\n\nexport const formatBuildingBlockXML = function (xmlString: string | string[]): string {\n\tif (Array.isArray(xmlString)) {\n\t\txmlString = xmlString.join(\"\");\n\t}\n\treturn formatXML(xmlString);\n};\n\nexport const getControlAttribute = function (controlSelector: string, attributeName: string, xmlDom: Node) {\n\tconst selector = `string(${_getTemplatedSelector(xmlDom, controlSelector)}/@${attributeName})`;\n\treturn runXPathQuery(selector, xmlDom);\n};\n\n/**\n * Serialize the parts or the complete given XML DOM to string.\n * @param xmlDom DOM node that is to be serialized.\n * @param selector Optional selector of sub nodes\n * @returns XML string\n */\nexport const serializeXML = function (xmlDom: Node, selector?: string) {\n\tconst serializer = new window.XMLSerializer();\n\tlet xmlString: string;\n\tif (selector) {\n\t\tconst nodes = runXPathQuery(selector, xmlDom) as Node[];\n\t\txmlString = nodes.map((node) => serializer.serializeToString(node)).join(\"\\n\");\n\t} else {\n\t\txmlString = serializer.serializeToString(xmlDom);\n\t}\n\treturn formatXML(xmlString);\n};\n\n/**\n * Formats a string containing an XML document.\n *\n * This function only considers XML tags and attributes, ignoring everything else (text, comments). Additionally,\n * attribute values containing a varying UID are replaced with a constant value.\n *\n * An \"XML\" string containing multiple root elements can be.\n * @param xmlString  The input XML string. This function also accepts \"XML\" strings with multiple root elements.\n * @returns The formatted XML string.\n */\nexport const formatXML = function (xmlString: string): string {\n\tconst START = \"<__XML__>\",\n\t\tEND = \"</__XML__>\",\n\t\tUID = /uid--id-\\d{13}-\\d{1,3}/,\n\t\tUID2 = /id-\\d{13}-\\d{1,3}/,\n\t\tlines: string[] = [];\n\n\tlet currentLine = \"\",\n\t\tlevel = -1,\n\t\tattributes: { name: string; value?: string }[] = [];\n\n\tfunction newline() {\n\t\tif (currentLine && currentLine !== START) {\n\t\t\tlines.push(currentLine);\n\t\t}\n\n\t\tcurrentLine = level > 0 ? \"  \".repeat(level) : \"\";\n\t}\n\n\tfunction appendAttributes() {\n\t\tif (attributes.length > 0) {\n\t\t\tattributes = attributes.sort((a, b) => {\n\t\t\t\tif (a.name.startsWith(\"xmlns\") && !b.name.startsWith(\"xmlns\")) {\n\t\t\t\t\treturn -1;\n\t\t\t\t} else if (!a.name.startsWith(\"xmlns\") && b.name.startsWith(\"xmlns\")) {\n\t\t\t\t\treturn 1;\n\t\t\t\t} else if (a.name.startsWith(\"xmlns\") && b.name.startsWith(\"xmlns\")) {\n\t\t\t\t\treturn a.name.localeCompare(b.name);\n\t\t\t\t} else if (a.name.includes(\":\") && !b.name.includes(\":\")) {\n\t\t\t\t\treturn -1;\n\t\t\t\t} else if (!a.name.includes(\":\") && b.name.includes(\":\")) {\n\t\t\t\t\treturn 1;\n\t\t\t\t} else {\n\t\t\t\t\treturn a.name.localeCompare(b.name);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tlevel++;\n\t\t\tfor (const attribute of attributes) {\n\t\t\t\tnewline();\n\t\t\t\tcurrentLine += attribute.name;\n\t\t\t\tif (attribute.value) currentLine += attribute.value;\n\t\t\t}\n\t\t\tlevel--;\n\t\t\tattributes = [];\n\t\t\tnewline();\n\t\t}\n\t}\n\n\tfunction append(data: Range) {\n\t\tcurrentLine += parser.read(data);\n\t}\n\n\tconst parser = createParser({\n\t\tonOpenTagStart(data: Range) {\n\t\t\tnewline();\n\t\t\tappend(data);\n\t\t},\n\n\t\tonOpenTagName: append,\n\n\t\tonAttrName(data: Range) {\n\t\t\tattributes.unshift({ name: parser.read(data) });\n\t\t},\n\n\t\tonAttrValue(data: Ranges.AttrValue) {\n\t\t\tattributes[0].value = parser.read(data).replace(UID, \"uid--id\"); // replace varying UIDs with a constant value\n\t\t\tattributes[0].value = parser.read(data).replace(UID2, \"id\"); // replace varying UIDs with a constant value\n\t\t},\n\n\t\tonOpenTagEnd(data: Ranges.OpenTagEnd) {\n\t\t\tappendAttributes();\n\t\t\tappend(data);\n\t\t\tif (!data.selfClosed) level++;\n\t\t},\n\n\t\tonCloseTagStart(data: Range) {\n\t\t\tlevel--;\n\t\t\tnewline();\n\t\t\tappend(data);\n\t\t},\n\n\t\tonCloseTagName: append,\n\t\tonCloseTagEnd: append\n\t});\n\n\tparser.parse(START + xmlString + END);\n\treturn lines.join(\"\\n\").trim();\n};\n\n/**\n * Compile a CDS file into an EDMX file.\n * @param cdsUrl The path to the file containing the CDS definition. This file must declare the namespace\n * sap.fe.test and a service JestService\n * @param options Options for creating the EDMX output\n * @returns The path of the generated EDMX\n */\nexport const compileCDS = function (cdsUrl: string, options: compiler.ODataOptions = {}) {\n\tconst cdsString = fs.readFileSync(cdsUrl, \"utf-8\");\n\tconst edmxContent = cds2edmx(cdsString, \"sap.fe.test.JestService\", options);\n\tconst dir = path.resolve(cdsUrl, \"..\", \"gen\");\n\n\t// If the caller provided CDS compiler options: Include them in the filename. This prevents unpredictable results if the same CDS source\n\t// file is used simultaneously with a different set of options (e.g. in a test running in parallel)\n\tconst allOptions = Object.entries(options);\n\tallOptions.sort((a, b) => b[0].localeCompare(a[0]));\n\n\tconst edmxFileName =\n\t\tallOptions.reduce(\n\t\t\t(filename, [optionKey, optionValue]) => `${filename}#${optionKey}=${optionValue.toString()}#`,\n\t\t\tpath.basename(cdsUrl).replace(\".cds\", \"\")\n\t\t) + \".xml\";\n\n\tconst edmxFilePath = path.resolve(dir, edmxFileName);\n\n\tfs.mkdirSync(dir, { recursive: true });\n\n\tfs.writeFileSync(edmxFilePath, edmxContent);\n\treturn edmxFilePath;\n};\n\n/**\n * Compile CDS to EDMX.\n * @param cds The CDS model. It must define at least one service.\n * @param service The fully-qualified name of the service to be compiled. Defaults to \"sap.fe.test.JestService\".\n * @param options Options for creating the EDMX output\n * @returns The compiled service model as EDMX.\n */\nexport function cds2edmx(cds: string, service = \"sap.fe.test.JestService\", options: compiler.ODataOptions = {}) {\n\tconst sources: Record<string, string> = { \"source.cds\": cds };\n\n\t// allow to include stuff from @sap/cds/common\n\tif (cds.includes(\"'@sap/cds/common'\")) {\n\t\tsources[\"common.cds\"] = fs.readFileSync(require.resolve(\"@sap/cds/common.cds\"), \"utf-8\");\n\t}\n\n\tconst csn = compiler.compileSources(sources, {});\n\n\tconst edmxOptions: compiler.ODataOptions = {\n\t\todataForeignKeys: true,\n\t\todataFormat: \"structured\",\n\t\todataContainment: true,\n\t\t...options,\n\t\tservice: service\n\t};\n\n\tconst edmx = compiler.to.edmx(csn, edmxOptions);\n\tif (!edmx) {\n\t\tthrow new Error(`Compilation failed. Hint: Make sure that the CDS model defines service ${service}.`);\n\t}\n\treturn edmx;\n}\n\nexport const getFakeSideEffectsService = async function (\n\tmetaModel: ODataMetaModel,\n\tclassNameODataModel = \"sap.ui.model.odata.v4.ODataModel\"\n): Promise<SideEffectsService> {\n\tconst scopeObject = {\n\t\tgetModel: () => {\n\t\t\treturn {\n\t\t\t\tisA: () => classNameODataModel === \"sap.ui.model.odata.v4.ODataModel\",\n\t\t\t\tgetMetaModel: () => {\n\t\t\t\t\treturn metaModel;\n\t\t\t\t},\n\t\t\t\tgetServiceUrl: () => undefined\n\t\t\t};\n\t\t},\n\t\tgetService: () => {\n\t\t\treturn {\n\t\t\t\tgetCapabilities: () => undefined\n\t\t\t};\n\t\t}\n\t};\n\tconst serviceInstance = await new SideEffectsFactory().createInstance({ scopeObject, scopeType: \"\", settings: {} });\n\treturn serviceInstance.getInterface();\n};\n\nexport const getFakeDiagnostics = function (): IDiagnostics {\n\tconst issues: any[] = [];\n\treturn {\n\t\taddIssue(issueCategory: IssueCategory, issueSeverity: IssueSeverity, details: string): void {\n\t\t\tissues.push({\n\t\t\t\tissueCategory,\n\t\t\t\tissueSeverity,\n\t\t\t\tdetails\n\t\t\t});\n\t\t},\n\t\tgetIssues(): any[] {\n\t\t\treturn issues;\n\t\t},\n\t\tcheckIfIssueExists(issueCategory: IssueCategory, issueSeverity: IssueSeverity, details: string): boolean {\n\t\t\treturn issues.find((issue) => {\n\t\t\t\treturn issue.issueCategory === issueCategory && issue.issueSeverity === issueSeverity && issue.details === details;\n\t\t\t});\n\t\t}\n\t};\n};\n\nexport const getConverterContextForTest = function (\n\tmetaModel: ODataMetaModel,\n\tmanifestSettings: ListReportManifestSettings | ObjectPageManifestSettings\n) {\n\tconst convertedTypes = convertTypes(metaModel);\n\tconst dataModelPath = manifestSettings.contextPath\n\t\t? getInvolvedDataModelObjects<PageContextPathTarget>(metaModel.createBindingContext(manifestSettings.contextPath) as Context)\n\t\t: getInvolvedDataModelObjects<PageContextPathTarget>(metaModel.createBindingContext(`/${manifestSettings.entitySet}`));\n\treturn new ConverterContext<PageContextPathTarget>(\n\t\tconvertedTypes,\n\t\tnew ManifestWrapper(manifestSettings),\n\t\tgetFakeDiagnostics(),\n\t\tdataModelPath\n\t);\n};\nconst metaModelCache: any = {};\nexport const getMetaModel = async function (sMetadataUrl: string) {\n\tconst oRequestor = _MetadataRequestor.create({}, \"4.0\", undefined, {}, {}, function () {\n\t\treturn null;\n\t});\n\tif (!metaModelCache[sMetadataUrl]) {\n\t\tconst oMetaModel = new (ODataMetaModel as any)(oRequestor, sMetadataUrl, undefined, { _requestAnnotationChanges: () => [] });\n\t\tawait oMetaModel.fetchEntityContainer();\n\t\tmetaModelCache[sMetadataUrl] = oMetaModel;\n\t}\n\n\treturn metaModelCache[sMetadataUrl];\n};\n\nexport const getDataModelObjectPathForProperty = function <T = Property | EntitySet | AnyAnnotation>(\n\tentitySet: EntitySet,\n\tconvertedTypes: ConvertedMetadata,\n\tproperty?: T\n): DataModelObjectPath<T> {\n\tconst targetPath: DataModelObjectPath<T> = {\n\t\tstartingEntitySet: entitySet,\n\t\tnavigationProperties: [],\n\t\ttargetObject: property,\n\t\ttargetEntitySet: entitySet,\n\t\ttargetEntityType: entitySet.entityType,\n\t\tconvertedTypes: convertedTypes\n\t};\n\ttargetPath.contextLocation = targetPath as DataModelObjectPath<EntitySet>;\n\treturn targetPath;\n};\n\nexport const evaluateBinding = function (bindingString: string, ...args: any[]) {\n\tconst bindingElement = BindingInfo.parse(bindingString);\n\treturn bindingElement.formatter.apply(undefined, args);\n};\n\ntype ModelContent = {\n\t[name: string]: any;\n};\n\n/**\n * Evaluate a binding against a model.\n * @param bindingString The binding string.\n * @param modelContent Content of the default model to use for evaluation.\n * @param namedModelsContent Contents of additional, named models to use.\n * @returns The evaluated binding.\n */\nexport function evaluateBindingWithModel(\n\tbindingString: string | undefined,\n\tmodelContent: ModelContent,\n\tnamedModelsContent?: { [modelName: string]: ModelContent }\n): string {\n\tconst bindingElement = BindingInfo.parse(bindingString, null, false, false, false, false, {\n\t\t\".\": {\n\t\t\t_formatters: {\n\t\t\t\tValueFormatter: ValueFormatter\n\t\t\t}\n\t\t}\n\t});\n\tconst text = new InvisibleText();\n\ttext.bindProperty(\"text\", bindingElement);\n\n\tconst defaultModel = new JSONModel(modelContent);\n\ttext.setModel(defaultModel);\n\ttext.setBindingContext(defaultModel.createBindingContext(\"/\"));\n\n\tif (namedModelsContent) {\n\t\tfor (const [name, content] of Object.entries(namedModelsContent)) {\n\t\t\tconst model = new JSONModel(content);\n\t\t\ttext.setModel(model, name);\n\t\t\ttext.setBindingContext(model.createBindingContext(\"/\"), name);\n\t\t}\n\t}\n\n\treturn text.getText();\n}\n\nconst TESTVIEWID = \"testViewId\";\n\nconst applyFlexChanges = async function (flexChanges: { [x: string]: object[] }, oMetaModel: MetaModel, resultXML: any) {\n\t// prefix Ids\n\t[...resultXML.querySelectorAll(\"[id]\")].forEach((node) => {\n\t\tnode.id = `${TESTVIEWID}--${node.id}`;\n\t});\n\tconst changes = createFlexibilityChangesObject(TESTVIEWID, flexChanges);\n\tconst appId = \"someComponent\";\n\tconst oManifest = {\n\t\t\"sap.app\": {\n\t\t\tid: appId,\n\t\t\ttype: \"application\",\n\t\t\tcrossNavigation: {\n\t\t\t\toutbounds: []\n\t\t\t}\n\t\t}\n\t};\n\tconst oAppComponent: AppComponent = {\n\t\tgetDiagnostics: jest.fn().mockReturnValue(getFakeDiagnostics()),\n\t\tgetModel: jest.fn().mockReturnValue({\n\t\t\tgetMetaModel: jest.fn().mockReturnValue(oMetaModel)\n\t\t}),\n\t\tgetComponentData: jest.fn().mockReturnValue({}),\n\t\tgetManifestObject: jest.fn().mockReturnValue({\n\t\t\tgetEntry: function (name: string) {\n\t\t\t\treturn (oManifest as any)[name];\n\t\t\t}\n\t\t}),\n\t\tgetLocalId: jest.fn((sId) => sId)\n\t} as unknown as AppComponent;\n\t//fake changes\n\tjest.spyOn(AppStorage, \"loadFlexData\").mockReturnValue(Promise.resolve(changes));\n\tjest.spyOn(Loader, \"getFlexData\").mockReturnValue(Promise.resolve({ data: changes }));\n\tjest.spyOn(Loader, \"getCachedFlexData\").mockReturnValue(changes);\n\n\tjest.spyOn(Component as unknown as { getComponentById: () => AppComponent }, \"getComponentById\").mockReturnValue(oAppComponent);\n\tjest.spyOn(Utils, \"getAppComponentForControl\").mockReturnValue(oAppComponent);\n\tawait FlexState.initialize({\n\t\tcomponentId: appId\n\t});\n\tresultXML = await XmlPreprocessor.process(resultXML, { name: \"Test Fragment\", componentId: appId, id: TESTVIEWID });\n\n\t//Assert that all changes have been applied\n\tconst changesApplied = getChangesFromXML(resultXML);\n\texpect(changesApplied.length).toBe(flexChanges?.changes?.length ?? 0 + flexChanges?.variantDependentControlChanges?.length ?? 0);\n\treturn resultXML;\n};\n\nexport const getChangesFromXML = (xml: any) =>\n\t[...xml.querySelectorAll(\"*\")]\n\t\t.flatMap((e) => [...e.attributes].map((a) => a.name))\n\t\t.filter((attr) => attr.includes(\"sap.ui.fl.appliedChanges\"));\n\nexport const getTemplatingResult = async function (\n\txmlInput: string,\n\tsMetadataUrl: string | undefined,\n\tmBindingContexts: { [x: string]: any; entitySet?: string },\n\tmModels: { [x: string]: any },\n\tflexChanges?: { [x: string]: object[] },\n\tfakeSideEffectService?: unknown\n) {\n\tif (!mModels[\"sap.fe.i18n\"]) {\n\t\tmModels[\"sap.fe.i18n\"] = createMockResourceModel();\n\t}\n\n\tconst templatedXml = `<root>${xmlInput}</root>`;\n\tconst parser = new window.DOMParser();\n\tconst xmlDoc = parser.parseFromString(templatedXml, \"text/xml\");\n\t// To ensure our macro can use #setBindingContext we ensure there is a pre existing JSONModel for converterContext\n\t// if not already passed to teh templating\n\n\tconst oPreprocessorSettings = await _buildPreProcessorSettings(sMetadataUrl, mBindingContexts, mModels, fakeSideEffectService);\n\n\t//This context for macro testing\n\tif (oPreprocessorSettings.models[\"this\"]) {\n\t\toPreprocessorSettings.bindingContexts[\"this\"] = oPreprocessorSettings.models[\"this\"].createBindingContext(\"/\");\n\t}\n\n\tlet resultXML = (await XMLPreprocessor.process(xmlDoc.firstElementChild!, { name: \"Test Fragment\" }, oPreprocessorSettings)) as any;\n\n\tif (sMetadataUrl && flexChanges) {\n\t\t// apply flex changes\n\t\tconst oMetaModel = await getMetaModel(sMetadataUrl);\n\t\tresultXML = await applyFlexChanges(flexChanges, oMetaModel, resultXML);\n\t}\n\treturn resultXML;\n};\n\nexport const getTemplatedXML = async function (\n\txmlInput: string,\n\tsMetadataUrl: string | undefined,\n\tmBindingContexts: { [x: string]: string },\n\tmModels: { [x: string]: any },\n\tflexChanges?: { [x: string]: object[] },\n\tfakeSideEffectService?: unknown\n): Promise<string> {\n\treturn jsx.defineXMLNamespaceMap(reveseNamespaceMap, async () => {\n\t\tconst templatedXML = await getTemplatingResult(\n\t\t\txmlInput,\n\t\t\tsMetadataUrl,\n\t\t\tmBindingContexts,\n\t\t\tmModels,\n\t\t\tflexChanges,\n\t\t\tfakeSideEffectService\n\t\t);\n\t\tconst serialiedXML = serializeXML(templatedXML, undefined);\n\t\texpect(serialiedXML).not.toHaveTemplatingErrors();\n\t\treturn serialiedXML;\n\t}) as unknown as Promise<string>;\n};\n\n/**\n * Process the requested view with the provided data.\n * @param name Fully qualified name of the view to be tested.\n * @param sMetadataUrl Url of the metadata.\n * @param mBindingContexts Map of the bindingContexts to set on the models.\n * @param mModels Map of the models.\n * @param flexChanges Object with UI changes like 'changes' or 'variantDependentControlChanges'\n * @returns Templated view as string\n */\nexport async function processView(\n\tname: string,\n\tsMetadataUrl: string,\n\tmBindingContexts: { [x: string]: string },\n\tmModels: { [x: string]: any },\n\tflexChanges?: { [x: string]: object[] }\n): Promise<JestTemplatedView> {\n\tconst oMetaModel = await getMetaModel(sMetadataUrl);\n\tconst oViewDocument = _loadResourceView(name);\n\tconst oPreprocessorSettings = await _buildPreProcessorSettings(sMetadataUrl, mBindingContexts, mModels);\n\tlet oPreprocessedView = await XMLPreprocessor.process(oViewDocument, { name: name }, oPreprocessorSettings);\n\tif (flexChanges) {\n\t\toPreprocessedView = await applyFlexChanges(flexChanges ?? [], oMetaModel, oPreprocessedView);\n\t}\n\treturn {\n\t\tasElement: oPreprocessedView,\n\t\tasString: formatXML(oPreprocessedView?.outerHTML || \"\")\n\t};\n}\n\n/**\n * Process the requested XML fragment with the provided data.\n * @param name Fully qualified name of the fragment to be tested.\n * @param testData Test data consisting\n * @returns Templated fragment as string\n */\nexport async function processFragment(name: string, testData: { [model: string]: object }): Promise<string> {\n\tconst inputXml = `<root><core:Fragment fragmentName=\"${name}\" type=\"XML\" xmlns:core=\"sap.ui.core\" /></root>`;\n\tconst parser = new window.DOMParser();\n\n\tconst inputDoc = parser.parseFromString(inputXml, \"text/xml\");\n\n\t// build model and bindings for given test data\n\tconst settings = {\n\t\tmodels: {} as { [name: string]: JSONModel },\n\t\tbindingContexts: {} as { [name: string]: object },\n\t\tappComponent: { getSideEffectsService: jest.fn(), getDiagnostics: () => undefined }\n\t};\n\tfor (const model in testData) {\n\t\tconst jsonModel = new JSONModel();\n\t\tjsonModel.setData(testData[model]);\n\t\tsettings.models[model] = jsonModel;\n\t\tsettings.bindingContexts[model] = settings.models[model].createBindingContext(\"/\");\n\t}\n\tsettings.appComponent.getSideEffectsService.mockReturnValue(defaultFakeSideEffectService);\n\n\t// execute the pre-processor\n\tconst resultDoc = await XMLPreprocessor.process(inputDoc.firstElementChild, { name }, settings);\n\n\t// exclude nested fragments from test snapshots\n\tconst fragments = resultDoc.getElementsByTagName(\"core:Fragment\") as any;\n\tif (fragments?.length > 0) {\n\t\tfor (const fragment of fragments) {\n\t\t\tfragment.innerHTML = \"\";\n\t\t}\n\t}\n\n\t// Keep the fragment result as child of root node when fragment generates multiple root controls\n\tconst xmlResult = resultDoc.children.length > 1 ? resultDoc.outerHTML : resultDoc.innerHTML;\n\n\treturn formatXML(xmlResult);\n}\n\nexport function serializeControl(controlToSerialize?: UI5Element | UI5Element[], showCustomStyleClasses = false) {\n\tlet tabCount = 0;\n\tconst UID = /uid--id-\\d{13}-\\d{1,3}/;\n\tconst CONTROLID = /id-\\d{13}-\\d{1,3}/;\n\tfunction getTab(toAdd = 0) {\n\t\tlet tab = \"\";\n\t\tfor (let i = 0; i < tabCount + toAdd; i++) {\n\t\t\ttab += \"\\t\";\n\t\t}\n\t\treturn tab;\n\t}\n\tconst serializeDelegate = {\n\t\tstart: function (control: any, sAggregationName: string) {\n\t\t\tlet controlDetail = \"\";\n\t\t\tif (sAggregationName) {\n\t\t\t\tif (control.getParent()) {\n\t\t\t\t\tconst indexInParent = (control.getParent().getAggregation(sAggregationName) as ManagedObject[])?.indexOf?.(control);\n\t\t\t\t\tif (indexInParent > 0) {\n\t\t\t\t\t\tcontrolDetail += `,\\n${getTab()}`;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tcontrolDetail += `${control.getMetadata().getName()}(`;\n\t\t\treturn controlDetail;\n\t\t},\n\t\tend: function () {\n\t\t\treturn \"})\";\n\t\t},\n\t\tmiddle: function (control: any) {\n\t\t\tlet id = control.getId();\n\t\t\tid = typeof id === \"string\" ? id?.replace?.(CONTROLID, \"id\") : id;\n\t\t\tlet data = `{id: ${ManagedObjectMetadata.isGeneratedId(id) ? \"__dynamicId\" : id}`;\n\t\t\tfor (const oControlKey in control.mProperties) {\n\t\t\t\tif (control.mProperties.hasOwnProperty(oControlKey)) {\n\t\t\t\t\tlet propertyValue = control.mProperties[oControlKey];\n\t\t\t\t\tpropertyValue = typeof propertyValue === \"string\" ? propertyValue?.replace?.(UID, \"uid--id\") : propertyValue;\n\t\t\t\t\tpropertyValue = typeof propertyValue === \"string\" ? propertyValue?.replace?.(CONTROLID, \"id\") : propertyValue;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tpropertyValue = typeof propertyValue === \"object\" ? JSON.stringify(propertyValue) : propertyValue;\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t// Stringify may fail for circular references but it's not the end of the world\n\t\t\t\t\t}\n\n\t\t\t\t\tdata += `,\\n${getTab()} ${oControlKey}: ${propertyValue}`;\n\t\t\t\t} else if (control.mBindingInfos.hasOwnProperty(oControlKey)) {\n\t\t\t\t\tconst bindingDetail = { ...control.mBindingInfos[oControlKey] };\n\t\t\t\t\tif (bindingDetail.type?.oOutputFormat) {\n\t\t\t\t\t\tdelete bindingDetail.type.oOutputFormat;\n\t\t\t\t\t}\n\t\t\t\t\tif (bindingDetail.binding) {\n\t\t\t\t\t\tdelete bindingDetail.binding;\n\t\t\t\t\t}\n\t\t\t\t\tdata += `,\\n${getTab()} ${oControlKey}: ${JSON.stringify(bindingDetail)}`;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (const oControlKey in control.mAssociations) {\n\t\t\t\tif (control.mAssociations.hasOwnProperty(oControlKey)) {\n\t\t\t\t\tlet associationValue = control.mAssociations[oControlKey];\n\t\t\t\t\tif (!Array.isArray(associationValue)) {\n\t\t\t\t\t\tassociationValue = [associationValue];\n\t\t\t\t\t}\n\t\t\t\t\tassociationValue = associationValue.map((associationValueElement: string) => {\n\t\t\t\t\t\tif (typeof associationValueElement === \"string\") {\n\t\t\t\t\t\t\treturn ManagedObjectMetadata.isGeneratedId(associationValueElement)\n\t\t\t\t\t\t\t\t? \"__dynamicId\"\n\t\t\t\t\t\t\t\t: associationValueElement?.replace?.(CONTROLID, \"id\");\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn associationValueElement;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tdata += `,\\n${getTab()} ${oControlKey}: ${(associationValue?.join?.(\",\") ?? associationValue) || undefined}`;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (showCustomStyleClasses && control.aCustomStyleClasses?.length > 0) {\n\t\t\t\tdata += `,\\n${getTab()} customStyleClasses : ${control.aCustomStyleClasses.join(\", \")}`;\n\t\t\t}\n\t\t\tfor (const oControlKey in control.mEventRegistry) {\n\t\t\t\tif (control.mEventRegistry.hasOwnProperty(oControlKey)) {\n\t\t\t\t\tdata += `,\\n${getTab()} ${oControlKey}: true`;\n\t\t\t\t}\n\t\t\t}\n\t\t\tdata += ``;\n\t\t\treturn data;\n\t\t},\n\t\tstartAggregation: function (control: { mBindingInfos: Record<string, BaseAggregationBindingInfo> }, sName: string) {\n\t\t\tlet out = `,\\n${getTab()}${sName}`;\n\t\t\ttabCount++;\n\n\t\t\tif (control.mBindingInfos[sName]) {\n\t\t\t\tout += `={ path:'${control.mBindingInfos[sName].path}', template:\\n${getTab()}`;\n\t\t\t} else {\n\t\t\t\tout += `=[\\n${getTab()}`;\n\t\t\t}\n\t\t\treturn out;\n\t\t},\n\t\tendAggregation: function (control: any, sName: string) {\n\t\t\ttabCount--;\n\t\t\tif (control.mBindingInfos[sName]) {\n\t\t\t\treturn `\\n${getTab()}}`;\n\t\t\t} else {\n\t\t\t\treturn `\\n${getTab()}]`;\n\t\t\t}\n\t\t}\n\t};\n\tif (Array.isArray(controlToSerialize)) {\n\t\treturn controlToSerialize.map((controlToRender: UI5Element) => {\n\t\t\treturn new Serializer(controlToRender, serializeDelegate).serialize();\n\t\t});\n\t} else {\n\t\treturn new Serializer(controlToSerialize, serializeDelegate).serialize();\n\t}\n}\n\nexport function serializeControlAsXML(\n\tcontrolToSerialize?: ManagedObject | ManagedObject[] | null,\n\tshowCustomStyleClasses = false,\n\tpreferValue = false\n) {\n\tlet tabCount = 0;\n\tconst UID = /uid--id-\\d{13}-\\d{1,3}/;\n\tconst CONTROLID = /id-\\d{13}-\\d{1,3}/;\n\tconst definedNamespaces: Record<string, number> = {};\n\n\tfunction getNamespaceAlias(className: string): string {\n\t\tconst namesSplit = className.split(\".\");\n\t\tconst namespace = namesSplit.slice(0, -1);\n\t\tconst name = namesSplit[namesSplit.length - 1];\n\t\tlet namespaceAlias = namespace[namespace.length - 1];\n\t\tif (reveseNamespaceMap[namespace.join(\".\")]) {\n\t\t\tnamespaceAlias = reveseNamespaceMap[namespace.join(\".\")];\n\t\t}\n\t\tif (namespaceAlias === undefined) {\n\t\t\tnamespaceAlias = \"test\";\n\t\t}\n\t\treturn namespaceAlias;\n\t}\n\n\tfunction getTab(toAdd = 0) {\n\t\tlet tab = \"\";\n\t\tfor (let i = 0; i < tabCount + toAdd; i++) {\n\t\t\ttab += \"\\t\";\n\t\t}\n\t\treturn tab;\n\t}\n\tconst serializeDelegate = {\n\t\tstart: function (control: any, sAggregationName: string) {\n\t\t\tlet controlDetail = \"\";\n\t\t\tif (sAggregationName) {\n\t\t\t\tif (control.getParent()) {\n\t\t\t\t\tconst indexInParent = (control.getParent().getAggregation(sAggregationName) as ManagedObject[])?.indexOf?.(control);\n\t\t\t\t\tif (indexInParent > 0) {\n\t\t\t\t\t\tcontrolDetail += `\\n${getTab()}`;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst nameFull = control.getMetadata().getName();\n\t\t\tconst namesSplit = nameFull.split(\".\");\n\t\t\tconst name = namesSplit[namesSplit.length - 1];\n\t\t\tconst namespaceAlias = getNamespaceAlias(nameFull);\n\t\t\tcontrolDetail += `<${namespaceAlias}:${name}\\n`;\n\t\t\tif (!definedNamespaces[namespaceAlias]) {\n\t\t\t\tdefinedNamespaces[namespaceAlias] = 1;\n\t\t\t\tcontrolDetail += `${getTab()}xmlns:${namespaceAlias}=\"${nameSpaceMap[namespaceAlias]}\"\\n`;\n\t\t\t} else {\n\t\t\t\tdefinedNamespaces[namespaceAlias]++;\n\t\t\t}\n\t\t\treturn controlDetail;\n\t\t},\n\t\tend: function (control: any) {\n\t\t\tconst nameFull = control.getMetadata().getName();\n\t\t\tconst namesSplit = nameFull.split(\".\");\n\t\t\tconst name = namesSplit[namesSplit.length - 1];\n\t\t\tconst namespaceAlias = getNamespaceAlias(nameFull);\n\t\t\tlet hasAggregation = false;\n\t\t\tfor (const mAggregationsKey in control.mAggregations) {\n\t\t\t\tif (\n\t\t\t\t\t(!Array.isArray(control.mAggregations[mAggregationsKey]) &&\n\t\t\t\t\t\tcontrol.mAggregations[mAggregationsKey] !== null &&\n\t\t\t\t\t\tcontrol.mAggregations[mAggregationsKey] !== undefined) ||\n\t\t\t\t\t(Array.isArray(control.mAggregations[mAggregationsKey]) && control.mAggregations[mAggregationsKey].length > 0)\n\t\t\t\t) {\n\t\t\t\t\thasAggregation = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tdefinedNamespaces[namespaceAlias]--;\n\t\t\tif (hasAggregation) {\n\t\t\t\treturn `</${namespaceAlias}:${name}>`;\n\t\t\t} else {\n\t\t\t\treturn `/>`;\n\t\t\t}\n\t\t},\n\t\tmiddle: function (control: any) {\n\t\t\tlet id = control.getId();\n\t\t\tid = typeof id === \"string\" ? id?.replace?.(CONTROLID, \"id\") : id;\n\t\t\tlet data = \"\";\n\t\t\tif (!ManagedObjectMetadata.isGeneratedId(id)) {\n\t\t\t\tdata = `id=\"${id}\"`;\n\t\t\t}\n\t\t\tlet keys = Object.keys(control.mProperties)\n\t\t\t\t.filter((propName) => propName !== \"id\")\n\t\t\t\t.concat(Object.keys(control.mBindingInfos))\n\t\t\t\t.concat(Object.keys(control.mAssociations))\n\t\t\t\t.concat(Object.keys(control.mEventRegistry));\n\t\t\tkeys = keys.sort((a, b) => a.localeCompare(b));\n\t\t\tconst uniqueKeys = new Set(keys);\n\t\t\tkeys = Array.from(uniqueKeys);\n\t\t\tfor (const oControlKey of keys) {\n\t\t\t\tif (!preferValue && control.mBindingInfos.hasOwnProperty(oControlKey)) {\n\t\t\t\t\tconst bindingDetail = { ...control.mBindingInfos[oControlKey] };\n\t\t\t\t\tif (bindingDetail.bindingString) {\n\t\t\t\t\t\tdata += `\\n${getTab()}${oControlKey}=\"${bindingDetail.bindingString.replace(\">\", \"&gt;\")}\"`;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (bindingDetail.type?.oOutputFormat) {\n\t\t\t\t\t\t\tdelete bindingDetail.type.oOutputFormat;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (bindingDetail.binding) {\n\t\t\t\t\t\t\tdelete bindingDetail.binding;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (bindingDetail.template) {\n\t\t\t\t\t\t\tdelete bindingDetail.template;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdata += `\\n${getTab()}${oControlKey}='${JSON.stringify(bindingDetail)}'`;\n\t\t\t\t\t}\n\t\t\t\t} else if (control.mProperties.hasOwnProperty(oControlKey) && control.mProperties[oControlKey] !== undefined) {\n\t\t\t\t\tlet propertyValue = control.mProperties[oControlKey];\n\t\t\t\t\tif (typeof propertyValue === \"string\") {\n\t\t\t\t\t\tpropertyValue = propertyValue.replace(UID, \"uid--id\").replace(CONTROLID, \"id\").replace(/\"/g, \"&quot;\");\n\t\t\t\t\t}\n\t\t\t\t\ttry {\n\t\t\t\t\t\tpropertyValue =\n\t\t\t\t\t\t\ttypeof propertyValue === \"object\" ? JSON.stringify(propertyValue).replace(/\"/g, \"&quot;\") : propertyValue;\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t// Stringify may fail for circular references but it's not the end of the world\n\t\t\t\t\t}\n\n\t\t\t\t\tdata += `\\n${getTab()} ${oControlKey}=\"${propertyValue}\"`;\n\t\t\t\t} else if (control.mAssociations.hasOwnProperty(oControlKey)) {\n\t\t\t\t\tlet associationValue = control.mAssociations[oControlKey];\n\t\t\t\t\tif (!Array.isArray(associationValue)) {\n\t\t\t\t\t\tassociationValue = [associationValue];\n\t\t\t\t\t}\n\t\t\t\t\tassociationValue = associationValue.map((associationValueElement: string) => {\n\t\t\t\t\t\treturn typeof associationValueElement === \"string\"\n\t\t\t\t\t\t\t? associationValueElement?.replace?.(CONTROLID, \"id\")\n\t\t\t\t\t\t\t: associationValueElement;\n\t\t\t\t\t});\n\n\t\t\t\t\tdata += `\\n${getTab()} ${oControlKey}=\"${(associationValue?.join?.(\",\") ?? associationValue) || undefined}\"`;\n\t\t\t\t} else if (control.mEventRegistry.hasOwnProperty(oControlKey)) {\n\t\t\t\t\tif (control.mEventRegistry[oControlKey][0]?.fFunction?.name) {\n\t\t\t\t\t\tdata += `\\n${getTab()} ${oControlKey}=\"${control.mEventRegistry[oControlKey][0]?.fFunction?.name}\"`;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdata += `\\n${getTab()} ${oControlKey}=\"someEventHandler\"`;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (showCustomStyleClasses && control.aCustomStyleClasses?.length > 0) {\n\t\t\t\tdata += `\\n${getTab()} customStyleClasses : ${control.aCustomStyleClasses.join(\", \")}`;\n\t\t\t}\n\t\t\tdata += `\\n`;\n\t\t\tlet hasAggregation = false;\n\t\t\tfor (const mAggregationsKey in control.mAggregations) {\n\t\t\t\tif (\n\t\t\t\t\t(!Array.isArray(control.mAggregations[mAggregationsKey]) &&\n\t\t\t\t\t\tcontrol.mAggregations[mAggregationsKey] !== null &&\n\t\t\t\t\t\tcontrol.mAggregations[mAggregationsKey] !== undefined) ||\n\t\t\t\t\t(Array.isArray(control.mAggregations[mAggregationsKey]) && control.mAggregations[mAggregationsKey].length > 0)\n\t\t\t\t) {\n\t\t\t\t\thasAggregation = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (hasAggregation) {\n\t\t\t\tdata += \">\";\n\t\t\t}\n\t\t\treturn data;\n\t\t},\n\t\tstartAggregation: function (control: any, sName: string) {\n\t\t\tconst namespaceAlias = getNamespaceAlias(control.getMetadata().getName());\n\t\t\tlet out = `\\n${getTab()}<${namespaceAlias}:${sName}>`;\n\t\t\ttabCount++;\n\t\t\tout += `\\n${getTab()}`;\n\t\t\treturn out;\n\t\t},\n\t\tendAggregation: function (control: any, sName: string) {\n\t\t\ttabCount--;\n\t\t\tconst namespaceAlias = getNamespaceAlias(control.getMetadata().getName());\n\t\t\tif (control.mBindingInfos[sName]) {\n\t\t\t\treturn `\\n${getTab()}</${namespaceAlias}:${sName}>\\n`;\n\t\t\t} else {\n\t\t\t\treturn `\\n${getTab()}</${namespaceAlias}:${sName}>\\n`;\n\t\t\t}\n\t\t}\n\t};\n\tlet outXML;\n\tif (Array.isArray(controlToSerialize)) {\n\t\toutXML = controlToSerialize.map((controlToRender: ManagedObject) => {\n\t\t\treturn new Serializer(controlToRender, serializeDelegate).serialize();\n\t\t});\n\t} else {\n\t\toutXML = new Serializer(controlToSerialize, serializeDelegate).serialize();\n\t}\n\treturn formatXML(`<root>${outXML}</root>`);\n}\n\nexport function createAwaiter() {\n\tlet fnResolve!: Function;\n\tconst myPromise = new Promise((resolve) => {\n\t\tfnResolve = resolve;\n\t});\n\treturn { promise: myPromise, resolve: fnResolve };\n}\n\nexport function registerMockFragments(...fragments: MockFragment[]): jest.SpyInstance {\n\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\tconst originalLoadTemplate = (XMLTemplateProcessor as any).loadTemplatePromise;\n\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\tconst loadTemplateStub = jest.spyOn(XMLTemplateProcessor as any, \"loadTemplatePromise\");\n\tloadTemplateStub.mockImplementation(((templateName: string, extension: string) => {\n\t\tfor (const fragment of fragments) {\n\t\t\tif (fragment.name === templateName) {\n\t\t\t\treturn parseXMLString(fragment.content)[0];\n\t\t\t}\n\t\t}\n\t\treturn originalLoadTemplate(templateName, extension);\n\t}) as (() => Element) | undefined);\n\treturn loadTemplateStub;\n}\n\n/**\n * Creates a new instance of an appComponent and templateComponent with the given options.\n * @param options\n * @param options.cdsFile The path to the CDS file to use for the appComponent\n * @param options.mainContextPath The main context path to use for the appComponent\n * @param options.pageContent The page content to use for the appComponent\n * @param options.content The content to use for the app Component\n * @param options.componentId\n * @param options.manifestSettings\n * @param name The name to use for the appComponent\n * @param viewLevel The view level to use for the appComponent\n * @returns The appcomponent and templateComponent to use for testing\n */\nexport async function initializeAppComponent(\n\toptions?: {\n\t\tcdsFile?: string;\n\t\tcomponentId?: string;\n\t\tmainContextPath?: string;\n\t\tpageContent?: Function;\n\t\tmanifestSettings?: Partial<ListReportManifestSettings | ObjectPageManifestSettings>;\n\t\tfeManifestSettings?: Partial<ManifestContent[\"sap.fe\"]>;\n\t\tcontent?: Partial<ListReportManifestSettings[\"content\"] | ObjectPageManifestSettings[\"content\"]>;\n\t\tguid?: string;\n\t},\n\tname?: string,\n\tviewLevel?: number\n): Promise<{ appComponent: AppComponent; templateComponent: TemplateComponent }> {\n\tjest.spyOn(ODataModel.prototype, \"setOptimisticBatchEnabler\").mockReturnValue(undefined);\n\tlet cdsFile = options?.cdsFile;\n\tif (!cdsFile) {\n\t\tcdsFile = compileCDS(path.join(__dirname, \"./data/Products.cds\"));\n\t}\n\tconst guid = options?.guid ?? uid();\n\tconst id = options?.componentId ?? `sap.fe.test.${guid}`;\n\tconst cdsContent = fs.readFileSync(cdsFile).toString();\n\twindow.jestUI5.mockUrl(`/sap/fe/core/mock/${guid}/$metadata?sap-language=EN`, cdsContent);\n\tif (!options?.pageContent) {\n\t\tjest.spyOn(PageController.prototype, \"_onInternalAfterBinding\").mockImplementation(jest.fn());\n\t}\n\tclass DefaultPageContent extends PageController {\n\t\trender() {\n\t\t\treturn <Page></Page>;\n\t\t}\n\t}\n\tsap.ui.define(`sap/fe/test/${guid}/Component`, [\"sap/fe/core/AppComponent\"], function (_AppComponent: AppComponent) {\n\t\t\"use strict\";\n\n\t\treturn AppComponent.extend(`sap.fe.test.${guid}.Component`, {\n\t\t\tmetadata: {\n\t\t\t\tmanifest: {\n\t\t\t\t\t\"sap.app\": {\n\t\t\t\t\t\tid: `test${guid}`,\n\t\t\t\t\t\ttitle: \"App Title\",\n\t\t\t\t\t\tdataSources: {\n\t\t\t\t\t\t\tmainService: {\n\t\t\t\t\t\t\t\turi: `/sap/fe/core/mock/${guid}/`,\n\t\t\t\t\t\t\t\ttype: \"OData\",\n\t\t\t\t\t\t\t\tsettings: {\n\t\t\t\t\t\t\t\t\todataVersion: \"4.0\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"sap.ui5\": {\n\t\t\t\t\t\tmodels: {\n\t\t\t\t\t\t\t\"\": {\n\t\t\t\t\t\t\t\tdataSource: \"mainService\",\n\t\t\t\t\t\t\t\tsettings: {}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\trouting: {\n\t\t\t\t\t\t\ttargets: {\n\t\t\t\t\t\t\t\tDefault: {\n\t\t\t\t\t\t\t\t\ttype: \"Component\",\n\t\t\t\t\t\t\t\t\tname: name ?? \"sap.fe.core.fpm\",\n\t\t\t\t\t\t\t\t\tid: \"Default\",\n\t\t\t\t\t\t\t\t\tviewLevel: viewLevel,\n\t\t\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\t\t\tsettings: {\n\t\t\t\t\t\t\t\t\t\t\t...(options?.manifestSettings ?? {}),\n\t\t\t\t\t\t\t\t\t\t\tcontextPath: options?.mainContextPath ?? \"/Products\",\n\t\t\t\t\t\t\t\t\t\t\tviewType: \"JSX\",\n\t\t\t\t\t\t\t\t\t\t\tviewContent: options?.pageContent ?? DefaultPageContent,\n\t\t\t\t\t\t\t\t\t\t\tcontent: options?.content\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\troutes: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tpattern: \":?query:\",\n\t\t\t\t\t\t\t\t\tname: \"Default\",\n\t\t\t\t\t\t\t\t\ttarget: \"Default\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"sap.fe\": options?.feManifestSettings ?? {}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t});\n\tconst mockAppComponent = (await Component.create({ name: `sap.fe.test.${guid}`, id: id })) as AppComponent;\n\n\tawait mockAppComponent.initialized;\n\tconst v = await (mockAppComponent.getRouter().getTarget(\"Default\") as { load?: Function }).load?.();\n\treturn { appComponent: mockAppComponent, templateComponent: v.object };\n}\n\n/**\n * Find an element in a collection that matches the given selector.\n * @param collection\n * @param selector\n * @returns The element that matches the selector or undefined if no element matches the selector\n */\nexport function findElement(collection: HTMLCollection, selector: (element: HTMLElement) => boolean): HTMLElement | undefined {\n\tfor (let i = 0; i < collection.length; i++) {\n\t\tconst element = collection.item(i) as HTMLElement;\n\t\tif (selector(element)) {\n\t\t\treturn element;\n\t\t}\n\t}\n\treturn undefined;\n}\n\n/**\n * Wait for an event to be resolved before continuing.\n * @param control\n * @param eventName\n * @returns A Promise that resolves when the event is received\n */\nexport async function waitForEvent<T extends {}>(control: EventProvider, eventName: string): Promise<UI5Event<T>> {\n\treturn new Promise((resolve) => {\n\t\tcontrol.attachEventOnce(eventName, (event: Event) => {\n\t\t\tresolve(event as unknown as UI5Event<T>);\n\t\t});\n\t});\n}\n\n/**\n * Tell the binding parser to keep the binding strings for testing.\n * @param enabled\n */\nexport function keepBindingStringForTest(enabled: boolean): void {\n\tBindingParser._keepBindingStrings = enabled;\n}\n\nexport async function delayFor(delay: number): Promise<void> {\n\treturn new Promise<void>((resolve) => {\n\t\tsetTimeout(resolve, delay);\n\t});\n}\n"],"mappings":"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","ignoreList":[],"file":"JestTemplatingHelper-dbg.js"}