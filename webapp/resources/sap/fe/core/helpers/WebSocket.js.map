{"version":3,"file":"WebSocket.js","names":["WEBSOCKET_STATUS","_exports","ChannelType","createWebSocket","channelType","model","additionalParameters","hostLocation","window","location","serviceUrl","getServiceUrl","socketBaseURL","getWebSocketBaseUrl","Error","channelUrl","getWebSocketChannelUrl","socketURI","useBackendUrl","URLSearchParams","search","get","replace","protocol","host","startsWith","p","encodeURI","SapPcpWebSocket","SUPPORTED_PROTOCOLS","v10","getMetaModel","getObject","CollaborationDraft","SideEffectsEvents","channelName"],"sources":["./WebSocket.ts"],"sourcesContent":["import SapPcpWebSocket, { SUPPORTED_PROTOCOLS } from \"sap/ui/core/ws/SapPcpWebSocket\";\nimport type ODataModel from \"sap/ui/model/odata/v4/ODataModel\";\n\nexport enum WEBSOCKET_STATUS {\n\tCLOSED = 0,\n\tCLOSING = 1,\n\tCONNECTING = 2,\n\tCONNECTED = 3,\n\tERROR = 4\n}\n\nexport enum ChannelType {\n\tCollaborationDraft = \"CollaborationDraft\",\n\tSideEffectsEvents = \"SideEffectsEvents\"\n}\n\nexport type WebSocketParameter = Record<string, string>;\n\nexport function createWebSocket(channelType: ChannelType, model: ODataModel, additionalParameters?: WebSocketParameter): SapPcpWebSocket {\n\tconst hostLocation = window.location;\n\tconst serviceUrl = model.getServiceUrl();\n\tconst socketBaseURL = getWebSocketBaseUrl(model);\n\tif (!socketBaseURL) {\n\t\tthrow Error(\"WebSocket Base URL annotation not found\");\n\t}\n\n\tconst channelUrl = getWebSocketChannelUrl(channelType, model);\n\tlet socketURI;\n\n\t// Support useBackendUrl for local testing\n\tconst useBackendUrl = new URLSearchParams(window.location.search).get(\"useBackendUrl\");\n\tif (useBackendUrl) {\n\t\tsocketURI = useBackendUrl.replace(\"https\", \"wss\");\n\t} else {\n\t\tsocketURI = hostLocation.protocol === \"https:\" ? \"wss:\" : \"ws:\";\n\t\tsocketURI += `//${hostLocation.host}`;\n\t}\n\n\tsocketURI += `${(socketBaseURL.startsWith(\"/\") ? \"\" : \"/\") + socketBaseURL}?${channelUrl}relatedService=${serviceUrl}`;\n\n\tif (additionalParameters) {\n\t\tfor (const p in additionalParameters) {\n\t\t\tsocketURI += `&${p}=${encodeURI(additionalParameters[p])}`;\n\t\t}\n\t}\n\treturn new SapPcpWebSocket(socketURI, [SUPPORTED_PROTOCOLS.v10]);\n}\n\nexport function getWebSocketBaseUrl(model: ODataModel): string | undefined {\n\treturn model.getMetaModel().getObject(\"/@com.sap.vocabularies.Common.v1.WebSocketBaseURL\");\n}\n\nexport function getWebSocketChannelUrl(channelType: ChannelType, model: ODataModel): string | undefined {\n\tif (!getWebSocketBaseUrl(model)) {\n\t\treturn \"\";\n\t}\n\n\tswitch (channelType) {\n\t\tcase ChannelType.CollaborationDraft:\n\t\t\t// currently collaboration draft does not need a channel (might change later)\n\t\t\treturn \"\";\n\t\tcase ChannelType.SideEffectsEvents:\n\t\t\t// the service need a WebSocketChannel annotated with a #sideEffects qualifier\n\t\t\tconst channelName = model.getMetaModel().getObject(\"/@com.sap.vocabularies.Common.v1.WebSocketChannel#sideEffects\");\n\t\t\treturn `sideEffects=${channelName}&`;\n\t}\n}\n"],"mappings":";;;;mHAGYA,EAAgB,SAAhBA,OAAgB,sBAAhBA,IAAgB,wBAAhBA,IAAgB,8BAAhBA,IAAgB,4BAAhBA,IAAgB,2BAAhBA,CAAgB,MAAAC,EAAAD,mBAAA,IAQhBE,EAAW,SAAXA,KAAW,2CAAXA,EAAW,gDAAXA,CAAW,MAAAD,EAAAC,cAOhB,SAASC,EAAgBC,EAA0BC,EAAmBC,GAC5E,MAAMC,EAAeC,OAAOC,SAC5B,MAAMC,EAAaL,EAAMM,gBACzB,MAAMC,EAAgBC,EAAoBR,GAC1C,IAAKO,EAAe,CACnB,MAAME,MAAM,0CACb,CAEA,MAAMC,EAAaC,EAAuBZ,EAAaC,GACvD,IAAIY,EAGJ,MAAMC,EAAgB,IAAIC,gBAAgBX,OAAOC,SAASW,QAAQC,IAAI,iBACtE,GAAIH,EAAe,CAClBD,EAAYC,EAAcI,QAAQ,QAAS,MAC5C,KAAO,CACNL,EAAYV,EAAagB,WAAa,SAAW,OAAS,MAC1DN,GAAa,KAAKV,EAAaiB,MAChC,CAEAP,GAAa,IAAIL,EAAca,WAAW,KAAO,GAAK,KAAOb,KAAiBG,mBAA4BL,IAE1G,GAAIJ,EAAsB,CACzB,IAAK,MAAMoB,KAAKpB,EAAsB,CACrCW,GAAa,IAAIS,KAAKC,UAAUrB,EAAqBoB,KACtD,CACD,CACA,OAAO,IAAIE,EAAgBX,EAAW,CAACY,EAAoBC,KAC5D,CAAC7B,EAAAE,kBAEM,SAASU,EAAoBR,GACnC,OAAOA,EAAM0B,eAAeC,UAAU,oDACvC,CAAC/B,EAAAY,sBAEM,SAASG,EAAuBZ,EAA0BC,GAChE,IAAKQ,EAAoBR,GAAQ,CAChC,MAAO,EACR,CAEA,OAAQD,GACP,KAAKF,EAAY+B,mBAEhB,MAAO,GACR,KAAK/B,EAAYgC,kBAEhB,MAAMC,EAAc9B,EAAM0B,eAAeC,UAAU,iEACnD,MAAO,eAAeG,KAEzB,CAAClC,EAAAe,yBAAA,OAAAf,CAAA","ignoreList":[]}