{"version":3,"file":"EditState.js","names":["enumEditState","CLEAN","PROCESSED","DIRTY","currentEditState","setEditStateDirty","setEditStateProcessed","resetEditState","isEditStateDirty","cleanProcessedEditState"],"sources":["./EditState.ts"],"sourcesContent":["const enumEditState = {\n\tCLEAN: 0,\n\tPROCESSED: 1,\n\tDIRTY: 2\n};\nlet currentEditState = enumEditState.CLEAN;\n\nexport default {\n\t/**\n\t * This sets the edit state as dirty, meaning bindings have to be refreshed.\n\t */\n\tsetEditStateDirty: function (): void {\n\t\tcurrentEditState = enumEditState.DIRTY;\n\t},\n\n\t/**\n\t * This sets the edit state as processed, meaning is can be reset to clean after all bindings are refreshed.\n\t */\n\tsetEditStateProcessed: function (): void {\n\t\tcurrentEditState = enumEditState.PROCESSED;\n\t},\n\n\t/**\n\t * Resets the edit state to the initial state.\n\t */\n\tresetEditState: function (): void {\n\t\tcurrentEditState = enumEditState.CLEAN;\n\t},\n\n\t/**\n\t * Returns true if the edit state is not clean, meaning bindings have to be refreshed\n\t */\n\n\tisEditStateDirty: function (): boolean {\n\t\treturn currentEditState !== enumEditState.CLEAN;\n\t},\n\n\t/**\n\t * Cleans the edit state if it has been processed, i.e. bindings have been properly refreshed.\n\t */\n\tcleanProcessedEditState: function (): void {\n\t\tif (currentEditState === enumEditState.PROCESSED) {\n\t\t\tcurrentEditState = enumEditState.CLEAN;\n\t\t}\n\t}\n};\n"],"mappings":";;;;yCAAA,MAAMA,EAAgB,CACrBC,MAAO,EACPC,UAAW,EACXC,MAAO,GAER,IAAIC,EAAmBJ,EAAcC,MAAM,MAE5B,CAIdI,kBAAmB,WAClBD,EAAmBJ,EAAcG,KAClC,EAKAG,sBAAuB,WACtBF,EAAmBJ,EAAcE,SAClC,EAKAK,eAAgB,WACfH,EAAmBJ,EAAcC,KAClC,EAMAO,iBAAkB,WACjB,OAAOJ,IAAqBJ,EAAcC,KAC3C,EAKAQ,wBAAyB,WACxB,GAAIL,IAAqBJ,EAAcE,UAAW,CACjDE,EAAmBJ,EAAcC,KAClC,CACD,EACA","ignoreList":[]}