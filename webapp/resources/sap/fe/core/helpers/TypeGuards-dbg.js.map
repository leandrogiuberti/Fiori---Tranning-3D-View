{"version":3,"names":["isFulfilled","p","status","_exports","isRejected","isContext","potentialContext","isA","isFunctionArray","potentialFunctionArray","Array","isArray","length","every","item","isAnnotationOfType","potentialAnnotationType","typeName","includes","$Type","isAnnotationOfTerm","potentialAnnotation","termName","term","isAnnotationTerm","hasOwnProperty","isServiceObject","serviceObject","isComplexType","_type","isTypeDefinition","isEntityContainer","isEntitySet","isSingleton","isEntityType","isProperty","isNavigationProperty","isSingleNavigationProperty","isCollection","isMultipleNavigationProperty","isPathAnnotationExpression","expression","type","isAnnotationPath","isPropertyPathExpression","isAction"],"sourceRoot":".","sources":["TypeGuards.ts"],"sourcesContent":["import type {\n\tAnnotationTerm,\n\tComplexType,\n\tEntityContainer,\n\tEntitySet,\n\tEntityType,\n\tMultipleNavigationProperty,\n\tNavigationProperty,\n\tPathAnnotationExpression,\n\tProperty,\n\tPropertyPath,\n\tServiceObject,\n\tSingleNavigationProperty,\n\tSingleton,\n\tTypeDefinition\n} from \"@sap-ux/vocabularies-types\";\nimport type { Action, AnnotationPath } from \"@sap-ux/vocabularies-types/Edm\";\nimport type Context from \"sap/ui/model/odata/v4/Context\";\n\nexport function isFulfilled<T>(p: PromiseSettledResult<T>): p is PromiseFulfilledResult<T> {\n\treturn p.status === \"fulfilled\";\n}\nexport function isRejected<T>(p: PromiseSettledResult<T>): p is PromiseRejectedResult {\n\treturn p.status === \"rejected\";\n}\n\nexport function isContext(potentialContext: Context | unknown | undefined): potentialContext is Context {\n\treturn (potentialContext as Context)?.isA?.<Context>(\"sap.ui.model.Context\");\n}\n\nexport function isFunctionArray(potentialFunctionArray: Function[] | unknown): potentialFunctionArray is Function[] {\n\treturn (\n\t\tArray.isArray(potentialFunctionArray) &&\n\t\tpotentialFunctionArray.length > 0 &&\n\t\tpotentialFunctionArray.every((item) => typeof item === \"function\")\n\t);\n}\n\ntype AnnotationType = {\n\t$Type?: string;\n\tfullyQualifiedName?: string;\n};\nexport type _AnnotationTerm = {\n\tterm: string;\n\tqualifier?: string;\n};\n\n/**\n * Checks whether the argument is an annotation of the given type.\n * @param potentialAnnotationType The annotation to check\n * @param typeName The type to check for\n * @returns Whether the argument is an annotation of the given type\n */\nexport function isAnnotationOfType<T extends object & AnnotationType>(\n\tpotentialAnnotationType: unknown,\n\ttypeName: T[\"$Type\"] | T[\"$Type\"][]\n): potentialAnnotationType is T {\n\tif (Array.isArray(typeName)) {\n\t\treturn typeName.includes((potentialAnnotationType as AnnotationType)?.$Type);\n\t}\n\treturn (potentialAnnotationType as AnnotationType)?.$Type === typeName;\n}\n\n/**\n * Checks whether the argument is an annotation of the given term.\n * @param potentialAnnotation The annotation to check\n * @param termName The term to check for\n * @returns Whether the argument is an annotation of the given term\n */\nexport function isAnnotationOfTerm<T extends object & _AnnotationTerm>(\n\tpotentialAnnotation: unknown,\n\ttermName: T[\"term\"]\n): potentialAnnotation is AnnotationTerm<T> {\n\treturn (potentialAnnotation as _AnnotationTerm)?.term === termName;\n}\n\nexport function isAnnotationTerm(potentialAnnotation: unknown): potentialAnnotation is _AnnotationTerm {\n\treturn (potentialAnnotation as _AnnotationTerm).hasOwnProperty(\"term\");\n}\n\n/**\n * Checks whether the argument is a {@link ServiceObject}.\n * @param serviceObject The object to be checked.\n * @returns Whether the argument is a {@link ServiceObject}.\n */\nexport function isServiceObject(serviceObject: unknown | undefined): serviceObject is ServiceObject {\n\treturn serviceObject?.hasOwnProperty(\"_type\") ?? false;\n}\n\n/**\n * Checks whether the argument is a {@link ComplexType}.\n * @param serviceObject The object to be checked.\n * @returns Whether the argument is a {@link ComplexType}.\n */\nexport function isComplexType(serviceObject: unknown): serviceObject is ComplexType {\n\treturn (serviceObject as ComplexType)?._type === \"ComplexType\";\n}\n\n/**\n * Checks whether the argument is a {@link TypeDefinition}.\n * @param serviceObject The object to be checked.\n * @returns Whether the argument is a {@link TypeDefinition}.\n */\nexport function isTypeDefinition(serviceObject: unknown): serviceObject is TypeDefinition {\n\treturn (serviceObject as TypeDefinition)?._type === \"TypeDefinition\";\n}\n\n/**\n * Checks whether the argument is an {@link EntityContainer}.\n * @param serviceObject The object to be checked.\n * @returns Whether the argument is an {@link EntityContainer}.\n */\nexport function isEntityContainer(serviceObject: unknown): serviceObject is EntityContainer {\n\treturn (serviceObject as EntityContainer)?._type === \"EntityContainer\";\n}\n\n/**\n * Checks whether the argument is an {@link EntitySet}.\n * @param serviceObject The object to be checked.\n * @returns Whether the argument is an {@link EntitySet}.\n */\nexport function isEntitySet(serviceObject: unknown): serviceObject is EntitySet {\n\treturn (serviceObject as EntitySet)?._type === \"EntitySet\";\n}\n\n/**\n * Checks whether the argument is a {@link Singleton}.\n * @param serviceObject The object to be checked.\n * @returns Whether the argument is a {@link Singleton}\n */\nexport function isSingleton(serviceObject: unknown): serviceObject is Singleton {\n\treturn (serviceObject as Singleton)?._type === \"Singleton\";\n}\n\n/**\n * Checks whether the argument is an {@link EntityType}.\n * @param serviceObject The object to be checked.\n * @returns Whether the argument is an {@link EntityType}\n */\nexport function isEntityType(serviceObject: unknown): serviceObject is EntityType {\n\treturn (serviceObject as EntityType)?._type === \"EntityType\";\n}\n\n/**\n * Checks whether the argument is a {@link Property}.\n * @param serviceObject The object to be checked.\n * @returns Whether the argument is a {@link Property}.\n */\nexport function isProperty(serviceObject: unknown): serviceObject is Property {\n\treturn (serviceObject as Property)?._type === \"Property\";\n}\n\n/**\n * Checks whether the argument is a {@link NavigationProperty}.\n *\n * Hint: There are also the more specific functions {@link isSingleNavigationProperty} and {@link isMultipleNavigationProperty}. These can be\n * used to check for to-one and to-many navigation properties, respectively.\n * @param serviceObject The object to be checked.\n * @returns Whether the argument is a {@link NavigationProperty}.\n */\nexport function isNavigationProperty(serviceObject: unknown): serviceObject is NavigationProperty {\n\treturn (serviceObject as NavigationProperty)?._type === \"NavigationProperty\";\n}\n\n/**\n * Checks whether the argument is a {@link SingleNavigationProperty}.\n * @param serviceObject The object to be checked.\n * @returns Whether the argument is a {@link SingleNavigationProperty}.\n */\nexport function isSingleNavigationProperty(serviceObject: unknown): serviceObject is SingleNavigationProperty {\n\treturn isNavigationProperty(serviceObject) && !serviceObject.isCollection;\n}\n\n/**\n * Checks whether the argument is a {@link MultipleNavigationProperty}.\n * @param serviceObject The object to be checked.\n * @returns Whether the argument is a {@link MultipleNavigationProperty}.\n */\nexport function isMultipleNavigationProperty(serviceObject: unknown): serviceObject is MultipleNavigationProperty {\n\treturn isNavigationProperty(serviceObject) && serviceObject.isCollection;\n}\n\n/**\n * Checks whether the argument is a {@link PathAnnotationExpression}.\n * @param expression The object to be checked.\n * @returns Whether the argument is a {@link PathAnnotationExpression}.\n */\nexport function isPathAnnotationExpression<T>(expression: unknown): expression is PathAnnotationExpression<T> {\n\treturn (expression as PathAnnotationExpression<T>)?.type === \"Path\";\n}\n\n/**\n * Checks whether the argument is a {@link AnnotationPathExpression}.\n * @param expression The object to be checked.\n * @returns Whether the argument is a {@link AnnotationPathExpression}.\n */\nexport function isAnnotationPath<T>(expression: unknown): expression is AnnotationPath<T> {\n\treturn (expression as AnnotationPath<T>)?.type === \"AnnotationPath\";\n}\n\n/**\n * Checks whether the argument is a {@link PropertyPath}.\n * @param expression The object to be checked.\n * @returns Whether the argument is a {@link PropertyPath}.\n */\nexport function isPropertyPathExpression(expression: unknown): expression is PropertyPath {\n\treturn (expression as PropertyPath)?.type === \"PropertyPath\";\n}\n\n/**\n * Checks whether the argument is an {@link Action}.\n * @param serviceObject The object to be checked.\n * @returns Whether the argument is an {@link Action}.\n */\nexport function isAction(serviceObject: unknown): serviceObject is Action {\n\treturn (serviceObject as Action)?._type === \"Action\";\n}\n"],"mappings":"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","ignoreList":[],"file":"TypeGuards-dbg.js"}