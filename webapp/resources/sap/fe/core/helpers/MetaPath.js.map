{"version":3,"file":"MetaPath.js","names":["isServiceObject","objectPart","hasOwnProperty","enhancePath","sBasePath","sPathAddition","startsWith","endsWith","MetaPath","convertedMetadata","metaPath","contextPath","this","navigationProperties","contextNavigationProperties","absolutePath","relativePath","replace","substring","resolvedMetaPath","resolvePath","resolvedContextPath","target","undefined","Error","targetObject","rootEntitySet","currentEntitySet","currentEntityType","navigatedPaths","objectPath","forEach","_type","push","name","targetType","navigationPropertyBinding","join","entityType","getResolvedContextPath","serviceObjectPath","length","map","nav","_exports","_proto","prototype","contextRootEntitySet","getContextPath","getPath","sPathPart","getRelativePath","getTarget","getClosestEntitySet","closestEntitySet","navigationProperty","getClosestEntityType","closestEntityType","getContextClosestEntitySet","getNavigationProperties","getMetaPathForPath","targetPath","getMetaPathForObject","isAnnotationPath","value","isPathAnnotationExpression","path","metaPathApp","fullyQualifiedName","getConvertedMetadata","getDataModelObjectPath","startingEntitySet","targetEntitySet","targetEntityType","convertedTypes"],"sources":["./MetaPath.ts"],"sourcesContent":["import type {\n\tConvertedMetadata,\n\tEntitySet,\n\tEntityType,\n\tNavigationProperty,\n\tPathAnnotationExpression,\n\tResolutionTarget,\n\tServiceObject,\n\tServiceObjectAndAnnotation,\n\tSingleton\n} from \"@sap-ux/vocabularies-types\";\nimport type { AnnotationPath, Property, PropertyAnnotationValue } from \"@sap-ux/vocabularies-types/Edm\";\nimport { isAnnotationPath, isPathAnnotationExpression } from \"sap/fe/core/helpers/TypeGuards\";\nimport type { DataModelObjectPath } from \"sap/fe/core/templating/DataModelPathHelper\";\n\nfunction isServiceObject(objectPart: ServiceObjectAndAnnotation): objectPart is ServiceObject {\n\treturn objectPart && objectPart.hasOwnProperty(\"_type\");\n}\n\nfunction enhancePath(sBasePath: string, sPathAddition?: string): string {\n\tif (sPathAddition) {\n\t\tif (sPathAddition.startsWith(\"/\")) {\n\t\t\treturn sPathAddition;\n\t\t} else if (sPathAddition.startsWith(\"@\")) {\n\t\t\treturn sBasePath + sPathAddition;\n\t\t} else if (!sBasePath.endsWith(\"/\")) {\n\t\t\treturn sBasePath + \"/\" + sPathAddition;\n\t\t} else {\n\t\t\treturn sBasePath + sPathAddition;\n\t\t}\n\t}\n\treturn sBasePath;\n}\n\ntype ResolvedTarget<T> = T extends AnnotationPath<infer K>\n\t? K\n\t: T extends PropertyAnnotationValue<infer V extends string>\n\t? V\n\t: T extends PathAnnotationExpression<unknown>\n\t? Property | undefined\n\t: T;\n\ntype ContextRootEntity = EntitySet | Singleton;\n\nexport default class MetaPath<T> {\n\tprivate rootEntitySet: EntitySet | Singleton;\n\n\tprivate contextRootEntitySet: ContextRootEntity | undefined;\n\n\tprivate absolutePath: string;\n\n\tprivate serviceObjectPath: string;\n\n\tprivate relativePath: string;\n\n\tprivate navigationProperties: NavigationProperty[];\n\n\tprivate contextNavigationProperties: NavigationProperty[];\n\n\tprivate currentEntitySet: EntitySet | Singleton | undefined;\n\n\tprivate currentEntityType?: EntityType;\n\n\tprivate targetObject: T;\n\n\t/**\n\t * Create the MetaPath object.\n\t * @param convertedMetadata The current model converter output\n\t * @param metaPath The current object metaPath\n\t * @param contextPath The current context\n\t */\n\tconstructor(\n\t\tprivate convertedMetadata: ConvertedMetadata,\n\t\tprivate metaPath: string,\n\t\tprivate contextPath: string\n\t) {\n\t\tthis.navigationProperties = [];\n\t\tthis.contextNavigationProperties = [];\n\t\tthis.absolutePath = enhancePath(contextPath, metaPath);\n\t\tthis.relativePath = this.absolutePath.replace(contextPath, \"\");\n\t\tif (this.relativePath.startsWith(\"/\")) {\n\t\t\tthis.relativePath = this.relativePath.substring(1);\n\t\t}\n\n\t\tconst resolvedMetaPath: ResolutionTarget<T> = this.convertedMetadata.resolvePath(this.absolutePath);\n\t\tconst resolvedContextPath: ResolutionTarget<T> = this.convertedMetadata.resolvePath(contextPath);\n\t\tif (resolvedMetaPath.target === undefined || resolvedMetaPath.target === null) {\n\t\t\tthrow new Error(`No annotation target found for ${metaPath}`);\n\t\t}\n\t\tthis.targetObject = resolvedMetaPath.target;\n\t\tlet rootEntitySet: EntitySet | Singleton | undefined;\n\t\tlet currentEntitySet: EntitySet | Singleton | undefined;\n\t\tlet currentEntityType: EntityType | undefined;\n\t\tlet navigatedPaths: string[] = [];\n\t\tresolvedMetaPath.objectPath.forEach((objectPart: ServiceObjectAndAnnotation) => {\n\t\t\tif (isServiceObject(objectPart)) {\n\t\t\t\tswitch (objectPart._type) {\n\t\t\t\t\tcase \"NavigationProperty\":\n\t\t\t\t\t\tnavigatedPaths.push(objectPart.name);\n\t\t\t\t\t\tthis.navigationProperties.push(objectPart);\n\t\t\t\t\t\tcurrentEntityType = objectPart.targetType;\n\t\t\t\t\t\tif (currentEntitySet && currentEntitySet.navigationPropertyBinding.hasOwnProperty(navigatedPaths.join(\"/\"))) {\n\t\t\t\t\t\t\tcurrentEntitySet = currentEntitySet.navigationPropertyBinding[navigatedPaths.join(\"/\")];\n\t\t\t\t\t\t\tnavigatedPaths = [];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"Singleton\":\n\t\t\t\t\tcase \"EntitySet\":\n\t\t\t\t\t\tif (rootEntitySet === undefined) {\n\t\t\t\t\t\t\trootEntitySet = objectPart;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcurrentEntitySet = objectPart;\n\t\t\t\t\t\tcurrentEntityType = currentEntitySet.entityType;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"EntityType\":\n\t\t\t\t\t\tif (currentEntityType === undefined) {\n\t\t\t\t\t\t\tcurrentEntityType = objectPart;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tresolvedContextPath.objectPath.forEach((objectPart: ServiceObjectAndAnnotation) => {\n\t\t\trootEntitySet = this.getResolvedContextPath(objectPart, currentEntityType, rootEntitySet);\n\t\t});\n\t\tif (rootEntitySet === undefined || currentEntityType === undefined) {\n\t\t\tthrow new Error(\"MetaPath doesn't contain an entitySet -> Should never happen\");\n\t\t}\n\t\tthis.serviceObjectPath = this.contextPath;\n\t\tif (this.navigationProperties.length) {\n\t\t\tthis.serviceObjectPath += \"/\" + this.navigationProperties.map((nav) => nav.name).join(\"/\");\n\t\t}\n\t\tthis.rootEntitySet = rootEntitySet;\n\t\tthis.currentEntitySet = currentEntitySet;\n\t\tthis.currentEntityType = currentEntityType;\n\t}\n\n\tprivate getResolvedContextPath(\n\t\tobjectPart: ServiceObjectAndAnnotation,\n\t\tcurrentEntityType: EntityType | undefined,\n\t\trootEntitySet: EntitySet | Singleton | undefined\n\t): EntitySet | Singleton | undefined {\n\t\tif (isServiceObject(objectPart)) {\n\t\t\tswitch (objectPart._type) {\n\t\t\t\tcase \"NavigationProperty\":\n\t\t\t\t\tthis.contextNavigationProperties.push(objectPart);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"EntitySet\":\n\t\t\t\t\tif (this.contextRootEntitySet === undefined) {\n\t\t\t\t\t\tthis.contextRootEntitySet = objectPart;\n\t\t\t\t\t}\n\t\t\t\t\tif (rootEntitySet === undefined && objectPart.entityType === currentEntityType) {\n\t\t\t\t\t\trootEntitySet = objectPart;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn rootEntitySet;\n\t}\n\n\tpublic getContextPath(): string {\n\t\treturn this.contextPath;\n\t}\n\n\t/**\n\t * Retrieve the absolute path for this MetaPath.\n\t * @param sPathPart The path to evaluate\n\t * @returns The absolute path\n\t */\n\tpublic getPath(sPathPart?: string): string {\n\t\treturn enhancePath(this.absolutePath, sPathPart);\n\t}\n\n\t/**\n\t * Retrieve the path relative to the context for this MetaPath.\n\t * @param sPathPart The path to evaluate\n\t * @returns The relative path\n\t */\n\tpublic getRelativePath(sPathPart?: string): string {\n\t\treturn enhancePath(this.relativePath, sPathPart);\n\t}\n\n\t/**\n\t * Retrieve the typed target for this object call.\n\t * @returns The typed target object\n\t */\n\tpublic getTarget(): T {\n\t\treturn this.targetObject;\n\t}\n\n\t/**\n\t * Retrieve the closest entityset in the path.\n\t * @returns The closest entityset\n\t */\n\tpublic getClosestEntitySet(): EntitySet | Singleton {\n\t\tlet closestEntitySet: EntitySet | Singleton = this.rootEntitySet;\n\t\tfor (const navigationProperty of this.navigationProperties) {\n\t\t\tif (closestEntitySet.navigationPropertyBinding[navigationProperty.name]) {\n\t\t\t\tclosestEntitySet = closestEntitySet.navigationPropertyBinding[navigationProperty.name];\n\t\t\t}\n\t\t}\n\t\treturn closestEntitySet;\n\t}\n\n\tpublic getClosestEntityType(): EntityType {\n\t\tlet closestEntityType: EntityType = this.rootEntitySet.entityType;\n\t\tfor (const navigationProperty of this.navigationProperties) {\n\t\t\tclosestEntityType = navigationProperty.targetType;\n\t\t}\n\t\treturn closestEntityType;\n\t}\n\n\t/**\n\t * Retrieve the closest entityset in the path.\n\t * @returns The closest entityset\n\t */\n\tpublic getContextClosestEntitySet(): EntitySet | Singleton | undefined {\n\t\tlet closestEntitySet: EntitySet | Singleton | undefined = this.contextRootEntitySet;\n\t\tif (closestEntitySet) {\n\t\t\tfor (const navigationProperty of this.contextNavigationProperties) {\n\t\t\t\tif (closestEntitySet.navigationPropertyBinding[navigationProperty.name]) {\n\t\t\t\t\tclosestEntitySet = closestEntitySet.navigationPropertyBinding[navigationProperty.name];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn closestEntitySet;\n\t}\n\n\tpublic getNavigationProperties(): NavigationProperty[] {\n\t\treturn this.navigationProperties;\n\t}\n\n\tpublic getMetaPathForPath<SubType>(targetPath: string): MetaPath<SubType> | undefined {\n\t\ttry {\n\t\t\treturn new MetaPath<SubType>(this.convertedMetadata, enhancePath(this.serviceObjectPath, targetPath), this.contextPath);\n\t\t} catch {\n\t\t\treturn undefined;\n\t\t}\n\t}\n\n\tpublic getMetaPathForObject<SubType extends { fullyQualifiedName: string }>(\n\t\ttargetObject: SubType\n\t): MetaPath<ResolvedTarget<SubType>> | undefined {\n\t\tif (isAnnotationPath(targetObject)) {\n\t\t\treturn this.getMetaPathForPath<ResolvedTarget<SubType>>(targetObject.value);\n\t\t} else if (isPathAnnotationExpression(targetObject)) {\n\t\t\treturn this.getMetaPathForPath<ResolvedTarget<SubType>>(targetObject.path);\n\t\t} else {\n\t\t\tlet metaPathApp = targetObject?.fullyQualifiedName?.replace(\n\t\t\t\tthis.rootEntitySet?.entityType.fullyQualifiedName,\n\t\t\t\tthis.contextPath\n\t\t\t);\n\t\t\tif (metaPathApp === targetObject?.fullyQualifiedName) {\n\t\t\t\tmetaPathApp = targetObject.fullyQualifiedName?.replace(\n\t\t\t\t\t(this.targetObject as { fullyQualifiedName: string })?.fullyQualifiedName,\n\t\t\t\t\tthis.relativePath\n\t\t\t\t); // This branch is reached when the target has no relationship to the parent, in that case the fullyQualifiedName refers to the full path of the new target as something completely independent somehow, we need to make sure it's considered as a root object.\n\t\t\t}\n\t\t\treturn new MetaPath<ResolvedTarget<SubType>>(this.convertedMetadata, metaPathApp, this.contextPath);\n\t\t}\n\t}\n\n\tpublic getConvertedMetadata(): ConvertedMetadata {\n\t\treturn this.convertedMetadata;\n\t}\n\n\tpublic getDataModelObjectPath(): DataModelObjectPath<T> {\n\t\treturn {\n\t\t\ttargetObject: this.targetObject,\n\t\t\tstartingEntitySet: this.rootEntitySet,\n\t\t\ttargetEntitySet: this.getClosestEntitySet(),\n\t\t\ttargetEntityType: this.getClosestEntityType(),\n\t\t\tnavigationProperties: this.getNavigationProperties(),\n\t\t\tconvertedTypes: this.convertedMetadata\n\t\t};\n\t}\n}\n"],"mappings":"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","ignoreList":[]}