{"version":3,"names":["getSearchRestrictions","fullPath","metaModel","searchRestrictions","navigationSearchRestrictions","navigationText","searchRestrictionsTerm","entityTypePathParts","replaceAll","split","filter","ModelHelper","filterOutNavPropBinding","entitySetPath","getEntitySetPath","entitySetPathParts","isContainment","getObject","join","containmentNavPath","length","navPath","joinString","parentEntitySetPath","slice","navigationRestrictions","METAMODEL_FUNCTIONS","getNavigationRestrictions","SearchRestrictions","_exports","metaModelContext","navigationPath","restrictedProperties","RestrictedProperties","find","restrictedProperty","NavigationProperty","$NavigationPropertyPath","isInNonFilterableProperties","metamodelContext","contextPath","isNotFilterable","filterRestrictionsAnnotation","NonFilterableProperties","some","property","$PropertyPath","isCustomAggregate","interanlIsCustomAggregate","isApplySupported","entitySetAnnotations","customAggregatesAnnotations","getAllCustomAggregates","customAggregates","Object","keys","undefined","includes","checkEntitySetIsFilterable","navigationContext","isFilterable","isContextPathFilterable","propertyDataType","getPropertyDataType","isTypeFilterable","esParts","splice","contexts","isNoFilterable","context","item","index","array","filterRestrictions","FilterRestrictions","nonFilterableProperties","targetPropertyPath","propertyPath","dataType","getProperty","annotationPath","isPropertyFilterable","skipHiddenFilters","Error","createBindingContext","hiddenPath","hiddenFilterPath","compileExpression","not","or","pathInModel","getCreatePopupFields","path","appComponent","dataModel","getInvolvedDataModelObjects","getContext","nonComputedVisibleKeys","immutableVisibleFields","visibileRequiredProperties","requiredProperties","getRequiredPropertiesFromInsertRestrictions","entityProperties","targetEntityType","prop","annotations","isKey","propName","name","isImmutable","Core","Immutable","valueOf","isNonComputed","Computed","isVisible","UI","Hidden","isComputedDefaultValue","ComputedDefaultValue","isKeyComputedDefaultValueWithText","type","Common","Text","push","diagnostics","getDiagnostics","message","addIssue","IssueCategory","Annotation","IssueSeverity","Medium","IssueCategoryType","Annotations","IgnoredAnnotation","concat","getRequiredProperties","checkUpdateRestrictions","arguments","requiredPropertiesWithPath","entitySetAnnotation","endsWith","replace","joinText","hasRestrictedPropertiesInAnnotations","UpdateRestrictions","RequiredProperties","InsertRestrictions","getRequiredPropertiesFromAnnotations","forEach","requiredProperty","getRequiredPropertiesFromUpdateRestrictions","isNavigationRestrictions","navAnnotations","entityAnnotations","entitytSetAnnotations","annotation","annotationKey","startsWith","annotationParts","customAggregate","contextDefiningProperties","label","sortable","sortOrder","custom","getSortRestrictionsInfo","sortRestrictionsInfo","propertyInfo","sortRestrictions","Sortable","propertyItem","NonSortableProperties","propertyName","AscendingOnlyProperties","sortDirection","DescendingOnlyProperties","getFilterRestrictionsInfo","i","filterRestrictionsInfo","filterable","requiresFilter","RequiresFilter","Filterable","map","filterableProperties","FilterExpressionRestrictions","Property","getFilterableData","AllowedExpressions","filterDataObj","isMultiValueFilterExpression","filterExpression","isMultiValue"],"sourceRoot":".","sources":["MetaModelFunction.ts"],"sourcesContent":["// The goal of this file is to disappear as soon as we can.\n// It is a temporary solution to move all metamodel related operation from CommonUtils to a separate file.\n\nimport type * as Edm from \"@sap-ux/vocabularies-types/Edm\";\nimport type {\n\tFilterRestrictionsType,\n\tNavigationPropertyRestrictionTypes,\n\tNavigationRestrictionsType,\n\tSearchRestrictionsType\n} from \"@sap-ux/vocabularies-types/vocabularies/Capabilities\";\nimport type { CompiledBindingToolkitExpression } from \"sap/fe/base/BindingToolkit\";\nimport { compileExpression, not, or, pathInModel } from \"sap/fe/base/BindingToolkit\";\nimport type AppComponent from \"sap/fe/core/AppComponent\";\nimport { IssueCategory, IssueCategoryType, IssueSeverity } from \"sap/fe/core/converters/helpers/IssueManager\";\nimport ModelHelper from \"sap/fe/core/helpers/ModelHelper\";\nimport type { DefaultTypeForEdmType } from \"sap/fe/core/type/EDM\";\nimport { isTypeFilterable } from \"sap/fe/core/type/EDM\";\nimport type Context from \"sap/ui/model/Context\";\nimport type ODataMetaModel from \"sap/ui/model/odata/v4/ODataMetaModel\";\nimport type { ExpandPathType, MetaModelEntitySetAnnotation, MetaModelType } from \"types/metamodel_types\";\nimport { getInvolvedDataModelObjects } from \"../converters/MetaModelConverter\";\n\n// From FilterBar.block.ts only\nexport function getSearchRestrictions(fullPath: string, metaModel: ODataMetaModel): MetaModelType<SearchRestrictionsType> | undefined {\n\tlet searchRestrictions;\n\tlet navigationSearchRestrictions;\n\tconst navigationText = \"$NavigationPropertyBinding\";\n\tconst searchRestrictionsTerm = \"@Org.OData.Capabilities.V1.SearchRestrictions\";\n\tconst entityTypePathParts = fullPath.replaceAll(\"%2F\", \"/\").split(\"/\").filter(ModelHelper.filterOutNavPropBinding);\n\tconst entitySetPath = ModelHelper.getEntitySetPath(fullPath, metaModel);\n\tconst entitySetPathParts = entitySetPath.split(\"/\").filter(ModelHelper.filterOutNavPropBinding);\n\tconst isContainment = metaModel.getObject(`/${entityTypePathParts.join(\"/\")}/$ContainsTarget`) ? true : false;\n\tconst containmentNavPath = isContainment ? entityTypePathParts[entityTypePathParts.length - 1] : \"\";\n\n\t//LEAST PRIORITY - Search restrictions directly at Entity Set\n\t//e.g. FR in \"NS.EntityContainer/SalesOrderManage\" ContextPath: /SalesOrderManage\n\tif (!isContainment) {\n\t\tsearchRestrictions = metaModel.getObject(`${entitySetPath}${searchRestrictionsTerm}`) as\n\t\t\t| MetaModelType<SearchRestrictionsType>\n\t\t\t| undefined;\n\t}\n\tif (entityTypePathParts.length > 1) {\n\t\tconst navPath: string = isContainment ? containmentNavPath : entitySetPathParts[entitySetPathParts.length - 1];\n\t\t// In case of containment we take entitySet provided as parent. And in case of normal we would remove the last navigation from entitySetPath.\n\t\tconst joinString = `/${navigationText}/`;\n\t\tconst parentEntitySetPath = isContainment ? entitySetPath : `/${entitySetPathParts.slice(0, -1).join(joinString)}`;\n\n\t\t//HIGHEST priority - Navigation restrictions\n\t\t//e.g. Parent \"/Customer\" with NavigationPropertyPath=\"Set\" ContextPath: Customer/Set\n\t\tconst navigationRestrictions = METAMODEL_FUNCTIONS.getNavigationRestrictions(\n\t\t\tmetaModel,\n\t\t\tparentEntitySetPath,\n\t\t\tnavPath.replaceAll(\"%2F\", \"/\")\n\t\t);\n\t\tnavigationSearchRestrictions = navigationRestrictions?.SearchRestrictions;\n\t}\n\treturn navigationSearchRestrictions ?? searchRestrictions;\n}\n\n// From CommonUtils\nexport function getNavigationRestrictions(\n\tmetaModelContext: ODataMetaModel,\n\tentitySetPath: string,\n\tnavigationPath: string\n): MetaModelType<NavigationPropertyRestrictionTypes> | undefined {\n\tconst navigationRestrictions = metaModelContext.getObject(`${entitySetPath}@Org.OData.Capabilities.V1.NavigationRestrictions`) as\n\t\t| MetaModelType<NavigationRestrictionsType>\n\t\t| undefined;\n\tconst restrictedProperties = navigationRestrictions?.RestrictedProperties;\n\treturn restrictedProperties?.find(function (restrictedProperty) {\n\t\treturn restrictedProperty.NavigationProperty?.$NavigationPropertyPath === navigationPath;\n\t});\n}\n\n// Internal usage only\nfunction isInNonFilterableProperties(metamodelContext: ODataMetaModel, entitySetPath: string, contextPath: string): boolean {\n\tlet isNotFilterable = false;\n\tconst filterRestrictionsAnnotation = metamodelContext.getObject(`${entitySetPath}@Org.OData.Capabilities.V1.FilterRestrictions`) as\n\t\t| MetaModelType<FilterRestrictionsType>\n\t\t| undefined;\n\tif (filterRestrictionsAnnotation?.NonFilterableProperties) {\n\t\tisNotFilterable = filterRestrictionsAnnotation.NonFilterableProperties.some(function (property) {\n\t\t\treturn (\n\t\t\t\t(property as unknown as ExpandPathType<Edm.NavigationPropertyPath>).$NavigationPropertyPath === contextPath ||\n\t\t\t\tproperty.$PropertyPath === contextPath\n\t\t\t);\n\t\t});\n\t}\n\treturn isNotFilterable;\n}\n\n// Internal usage only\nexport function isCustomAggregate(metamodelContext: ODataMetaModel, entitySetPath: string, contextPath: string): boolean {\n\tlet interanlIsCustomAggregate = false;\n\t// eslint-disable-next-line regex/invalid-warn\n\tconst isApplySupported = metamodelContext.getObject(entitySetPath + \"@Org.OData.Aggregation.V1.ApplySupported\") ? true : false;\n\tif (isApplySupported) {\n\t\tconst entitySetAnnotations = metamodelContext.getObject(`${entitySetPath}@`) as MetaModelEntitySetAnnotation;\n\t\tconst customAggregatesAnnotations = METAMODEL_FUNCTIONS.getAllCustomAggregates(entitySetAnnotations) as object | undefined;\n\t\tconst customAggregates = customAggregatesAnnotations ? Object.keys(customAggregatesAnnotations) : undefined;\n\t\tif (customAggregates?.includes(contextPath)) {\n\t\t\tinteranlIsCustomAggregate = true;\n\t\t}\n\t}\n\treturn interanlIsCustomAggregate;\n}\n\n// Internal usage only\n\nfunction checkEntitySetIsFilterable(\n\tentitySetPath: string,\n\tmetaModelContext: ODataMetaModel,\n\tproperty: string,\n\tnavigationContext: Context | null\n): boolean {\n\tlet isFilterable =\n\t\tentitySetPath.split(\"/\").length === 2 && !property.includes(\"/\")\n\t\t\t? !isInNonFilterableProperties(metaModelContext, entitySetPath, property)\n\t\t\t: !isContextPathFilterable(metaModelContext, entitySetPath, property);\n\t// check if type can be used for filtering\n\tif (isFilterable && navigationContext) {\n\t\tconst propertyDataType = getPropertyDataType(navigationContext);\n\t\tif (propertyDataType) {\n\t\t\tisFilterable = propertyDataType ? isTypeFilterable(propertyDataType as keyof typeof DefaultTypeForEdmType) : false;\n\t\t} else {\n\t\t\tisFilterable = false;\n\t\t}\n\t}\n\treturn isFilterable;\n}\n\n// Internal usage only\nfunction isContextPathFilterable(metaModelContext: ODataMetaModel, entitySetPath: string, contextPath: string): boolean {\n\tconst fullPath = `${entitySetPath}/${contextPath}`,\n\t\tesParts = fullPath.split(\"/\").splice(0, 2),\n\t\tcontexts = fullPath.split(\"/\").splice(2);\n\tlet isNoFilterable = false,\n\t\tcontext = \"\";\n\n\tentitySetPath = esParts.join(\"/\");\n\n\tisNoFilterable = contexts.some(function (item: string, index: number, array: string[]) {\n\t\tif (context.length > 0) {\n\t\t\tcontext += `/${item}`;\n\t\t} else {\n\t\t\tcontext = item;\n\t\t}\n\t\tif (index === array.length - 2) {\n\t\t\t// In case of \"/Customer/Set/Property\" this is to check navigation restrictions of \"Customer\" for non-filterable properties in \"Set\"\n\t\t\tconst navigationRestrictions = METAMODEL_FUNCTIONS.getNavigationRestrictions(metaModelContext, entitySetPath, item);\n\t\t\tconst filterRestrictions = navigationRestrictions?.FilterRestrictions;\n\t\t\tconst nonFilterableProperties = filterRestrictions?.NonFilterableProperties;\n\t\t\tconst targetPropertyPath = array[array.length - 1];\n\t\t\tif (\n\t\t\t\tnonFilterableProperties?.find(function (propertyPath) {\n\t\t\t\t\treturn propertyPath.$PropertyPath === targetPropertyPath;\n\t\t\t\t})\n\t\t\t) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\tif (index === array.length - 1) {\n\t\t\t//last path segment\n\t\t\tisNoFilterable = isInNonFilterableProperties(metaModelContext, entitySetPath, context);\n\t\t} else if (metaModelContext.getObject(`${entitySetPath}/$NavigationPropertyBinding/${item}`)) {\n\t\t\t//check existing context path and initialize it\n\t\t\tisNoFilterable = isInNonFilterableProperties(metaModelContext, entitySetPath, context);\n\t\t\tcontext = \"\";\n\t\t\t//set the new EntitySet\n\t\t\tentitySetPath = \"/\" + metaModelContext.getObject(`${entitySetPath}/$NavigationPropertyBinding/${item}`);\n\t\t}\n\t\treturn isNoFilterable;\n\t});\n\treturn isNoFilterable;\n}\n\n// Internal usage only\n\nfunction getPropertyDataType(navigationContext: Context): string | undefined {\n\tlet dataType = navigationContext.getProperty(\"$Type\") as string | undefined;\n\t// if $kind exists, it's not a DataField and we have the final type already\n\tif (!navigationContext.getProperty(\"$kind\")) {\n\t\tswitch (dataType) {\n\t\t\tcase \"com.sap.vocabularies.UI.v1.DataFieldForAction\":\n\t\t\tcase \"com.sap.vocabularies.UI.v1.DataFieldForIntentBasedNavigation\":\n\t\t\t\tdataType = undefined;\n\t\t\t\tbreak;\n\n\t\t\tcase \"com.sap.vocabularies.UI.v1.DataField\":\n\t\t\tcase \"com.sap.vocabularies.UI.v1.DataFieldWithNavigationPath\":\n\t\t\tcase \"com.sap.vocabularies.UI.v1.DataFieldWithUrl\":\n\t\t\tcase \"com.sap.vocabularies.UI.v1.DataFieldWithIntentBasedNavigation\":\n\t\t\tcase \"com.sap.vocabularies.UI.v1.DataFieldWithAction\":\n\t\t\t\tdataType = navigationContext.getProperty(\"Value/$Path/$Type\") as string | undefined;\n\t\t\t\tbreak;\n\n\t\t\tcase \"com.sap.vocabularies.UI.v1.DataFieldForAnnotation\":\n\t\t\tdefault:\n\t\t\t\tconst annotationPath = navigationContext.getProperty(\"Target/$AnnotationPath\") as string | undefined;\n\t\t\t\tif (annotationPath) {\n\t\t\t\t\tif (annotationPath.includes(\"com.sap.vocabularies.Communication.v1.Contact\")) {\n\t\t\t\t\t\tdataType = navigationContext.getProperty(\"Target/$AnnotationPath/fn/$Path/$Type\") as string | undefined;\n\t\t\t\t\t} else if (annotationPath.includes(\"com.sap.vocabularies.UI.v1.DataPoint\")) {\n\t\t\t\t\t\tdataType = navigationContext.getProperty(\"Value/$Path/$Type\") as string | undefined;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// e.g. FieldGroup or Chart\n\t\t\t\t\t\tdataType = undefined;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tdataType = undefined;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn dataType;\n}\n\n// From CommonUtils, CommonHelper, FilterBarDelegate, FilterField, ValueListHelper, TableDelegate\n// TODO check used places and rework this\nexport function isPropertyFilterable(\n\tmetaModelContext: ODataMetaModel,\n\tentitySetPath: string,\n\tproperty: string,\n\tskipHiddenFilters?: boolean\n): boolean | CompiledBindingToolkitExpression {\n\tif (typeof property !== \"string\") {\n\t\tthrow new Error(\"sProperty parameter must be a string\");\n\t}\n\n\t// Parameters should be rendered as filterfields\n\tif (metaModelContext.getObject(`${entitySetPath}/@com.sap.vocabularies.Common.v1.ResultContext`) === true) {\n\t\treturn true;\n\t}\n\n\tconst navigationContext = metaModelContext.createBindingContext(`${entitySetPath}/${property}`);\n\n\tif (navigationContext && !skipHiddenFilters) {\n\t\tif (\n\t\t\tnavigationContext.getProperty(\"@com.sap.vocabularies.UI.v1.Hidden\") === true ||\n\t\t\tnavigationContext.getProperty(\"@com.sap.vocabularies.UI.v1.HiddenFilter\") === true\n\t\t) {\n\t\t\treturn false;\n\t\t}\n\t\tconst hiddenPath = navigationContext.getProperty(\"@com.sap.vocabularies.UI.v1.Hidden/$Path\") as string | undefined;\n\t\tconst hiddenFilterPath = navigationContext.getProperty(\"@com.sap.vocabularies.UI.v1.HiddenFilter/$Path\") as string | undefined;\n\n\t\tif (hiddenPath && hiddenFilterPath) {\n\t\t\treturn compileExpression(not(or(pathInModel(hiddenPath), pathInModel(hiddenFilterPath))));\n\t\t} else if (hiddenPath) {\n\t\t\treturn compileExpression(not(pathInModel(hiddenPath)));\n\t\t} else if (hiddenFilterPath) {\n\t\t\treturn compileExpression(not(pathInModel(hiddenFilterPath)));\n\t\t}\n\t}\n\treturn checkEntitySetIsFilterable(entitySetPath, metaModelContext, property, navigationContext);\n}\n\n/**\n * This function processes the entity properties and returns an array of required, non-computed key and immutable fields.\n * @param metaModel Metamodel\n * @param path Entityset Path\n * @param appComponent App Component\n * @returns An array of required, non-computed key and immutable fields\n */\nexport function getCreatePopupFields(metaModel: ODataMetaModel, path: string, appComponent?: AppComponent): string[] {\n\tconst dataModel = getInvolvedDataModelObjects(metaModel.getContext(path));\n\tconst nonComputedVisibleKeys: string[] = [];\n\tconst immutableVisibleFields: string[] = [];\n\tconst visibileRequiredProperties: string[] = [];\n\t//We first process the required properties\n\tconst requiredProperties = METAMODEL_FUNCTIONS.getRequiredPropertiesFromInsertRestrictions(path, metaModel);\n\tconst entityProperties = dataModel.targetEntityType.entityProperties;\n\tfor (const prop of entityProperties) {\n\t\tconst annotations = prop.annotations,\n\t\t\tisKey = prop.isKey,\n\t\t\tpropName = prop.name,\n\t\t\tisImmutable = annotations.Core?.Immutable?.valueOf() === true,\n\t\t\tisNonComputed = !(annotations.Core?.Computed?.valueOf() === true),\n\t\t\tisVisible = !(annotations.UI?.Hidden?.valueOf() === true),\n\t\t\tisComputedDefaultValue = annotations.Core?.ComputedDefaultValue?.valueOf() === true,\n\t\t\tisKeyComputedDefaultValueWithText =\n\t\t\t\tisKey && prop.type === \"Edm.Guid\" ? isComputedDefaultValue && annotations.Common?.Text : false;\n\t\tif ((isKeyComputedDefaultValueWithText || (isKey && prop.type !== \"Edm.Guid\")) && isNonComputed && isVisible) {\n\t\t\tnonComputedVisibleKeys.push(propName);\n\t\t} else if (requiredProperties.includes(propName) && isVisible && !(isKey && !nonComputedVisibleKeys.includes(propName))) {\n\t\t\tvisibileRequiredProperties.push(propName);\n\t\t} else if (isImmutable && isNonComputed && isVisible) {\n\t\t\timmutableVisibleFields.push(propName);\n\t\t}\n\n\t\tif (!isNonComputed && isComputedDefaultValue && appComponent) {\n\t\t\tconst diagnostics = appComponent.getDiagnostics();\n\t\t\tconst message = \"Core.ComputedDefaultValue is ignored as Core.Computed is already set to true\";\n\t\t\tdiagnostics.addIssue(\n\t\t\t\tIssueCategory.Annotation,\n\t\t\t\tIssueSeverity.Medium,\n\t\t\t\tmessage,\n\t\t\t\tIssueCategoryType,\n\t\t\t\tIssueCategoryType.Annotations.IgnoredAnnotation\n\t\t\t);\n\t\t}\n\t}\n\t//The order of fields will be non computed key fields, required properties and then non computed immutable fields.\n\treturn nonComputedVisibleKeys.concat(visibileRequiredProperties).concat(immutableVisibleFields);\n}\n// Internal only, exposed for tests\nfunction getRequiredProperties(path: string, metaModelContext: ODataMetaModel, checkUpdateRestrictions = false): string[] {\n\tconst requiredProperties: string[] = [];\n\tlet requiredPropertiesWithPath: { $PropertyPath: string }[] = [];\n\tconst navigationText = \"$NavigationPropertyBinding\";\n\tlet entitySetAnnotation: MetaModelEntitySetAnnotation | null = null;\n\tif (path.endsWith(\"$\")) {\n\t\t// if sPath comes with a $ in the end, removing it as it is of no significance\n\t\tpath = path.replace(\"/$\", \"\");\n\t}\n\tconst entityTypePathParts = path.replaceAll(\"%2F\", \"/\").split(\"/\").filter(ModelHelper.filterOutNavPropBinding);\n\tconst entitySetPath = ModelHelper.getEntitySetPath(path, metaModelContext);\n\tconst entitySetPathParts = entitySetPath.split(\"/\").filter(ModelHelper.filterOutNavPropBinding);\n\tconst isContainment = metaModelContext.getObject(`/${entityTypePathParts.join(\"/\")}/$ContainsTarget`) ? true : false;\n\tconst containmentNavPath = isContainment ? entityTypePathParts[entityTypePathParts.length - 1] : \"\";\n\n\t//Restrictions directly at Entity Set\n\t//e.g. FR in \"NS.EntityContainer/SalesOrderManage\" ContextPath: /SalesOrderManage\n\tif (!isContainment) {\n\t\tentitySetAnnotation = metaModelContext.getObject(`${entitySetPath}@`) as MetaModelEntitySetAnnotation;\n\t}\n\tif (entityTypePathParts.length > 1) {\n\t\tconst navPath = isContainment ? containmentNavPath : entitySetPathParts[entitySetPathParts.length - 1];\n\t\tconst joinText = `/${navigationText}/`;\n\t\tconst parentEntitySetPath = isContainment ? entitySetPath : `/${entitySetPathParts.slice(0, -1).join(joinText)}`;\n\t\t//Navigation restrictions\n\t\t//e.g. Parent \"/Customer\" with NavigationPropertyPath=\"Set\" ContextPath: Customer/Set\n\t\tconst navigationRestrictions = METAMODEL_FUNCTIONS.getNavigationRestrictions(\n\t\t\tmetaModelContext,\n\t\t\tparentEntitySetPath,\n\t\t\tnavPath.replaceAll(\"%2F\", \"/\")\n\t\t);\n\n\t\tif (\n\t\t\tnavigationRestrictions !== undefined &&\n\t\t\tMETAMODEL_FUNCTIONS.hasRestrictedPropertiesInAnnotations(navigationRestrictions, true, checkUpdateRestrictions)\n\t\t) {\n\t\t\trequiredPropertiesWithPath = checkUpdateRestrictions\n\t\t\t\t? navigationRestrictions.UpdateRestrictions?.RequiredProperties ?? []\n\t\t\t\t: navigationRestrictions.InsertRestrictions?.RequiredProperties ?? [];\n\t\t}\n\t\tif (\n\t\t\t!requiredPropertiesWithPath.length &&\n\t\t\tMETAMODEL_FUNCTIONS.hasRestrictedPropertiesInAnnotations(entitySetAnnotation, false, checkUpdateRestrictions)\n\t\t) {\n\t\t\trequiredPropertiesWithPath = METAMODEL_FUNCTIONS.getRequiredPropertiesFromAnnotations(\n\t\t\t\tentitySetAnnotation,\n\t\t\t\tcheckUpdateRestrictions\n\t\t\t);\n\t\t}\n\t} else if (METAMODEL_FUNCTIONS.hasRestrictedPropertiesInAnnotations(entitySetAnnotation, false, checkUpdateRestrictions)) {\n\t\trequiredPropertiesWithPath = METAMODEL_FUNCTIONS.getRequiredPropertiesFromAnnotations(entitySetAnnotation, checkUpdateRestrictions);\n\t}\n\trequiredPropertiesWithPath.forEach(function (requiredProperty) {\n\t\tconst propertyPath = requiredProperty.$PropertyPath;\n\t\trequiredProperties.push(propertyPath);\n\t});\n\treturn requiredProperties;\n}\n\n// TransactionHelper // InternalField\nexport function getRequiredPropertiesFromInsertRestrictions(path: string, metamodelContext: ODataMetaModel): string[] {\n\treturn METAMODEL_FUNCTIONS.getRequiredProperties(path, metamodelContext);\n}\n\n// InternalField\nexport function getRequiredPropertiesFromUpdateRestrictions(path: string, metamodelContext: ODataMetaModel): string[] {\n\treturn METAMODEL_FUNCTIONS.getRequiredProperties(path, metamodelContext, true);\n}\n\n// Internal only, exposed for tests\nfunction getRequiredPropertiesFromAnnotations(\n\tannotations: MetaModelEntitySetAnnotation | null,\n\tcheckUpdateRestrictions = false\n): { $PropertyPath: string }[] {\n\tif (checkUpdateRestrictions) {\n\t\treturn annotations?.[\"@Org.OData.Capabilities.V1.UpdateRestrictions\"]?.RequiredProperties ?? [];\n\t}\n\treturn annotations?.[\"@Org.OData.Capabilities.V1.InsertRestrictions\"]?.RequiredProperties ?? [];\n}\n\n// Internal only, exposed for tests\nfunction hasRestrictedPropertiesInAnnotations(\n\tannotations: MetaModelType<NavigationPropertyRestrictionTypes> | MetaModelEntitySetAnnotation | null,\n\tisNavigationRestrictions = false,\n\tcheckUpdateRestrictions = false\n): boolean {\n\tif (isNavigationRestrictions) {\n\t\tconst navAnnotations = annotations as MetaModelType<NavigationPropertyRestrictionTypes> | undefined;\n\t\tif (checkUpdateRestrictions) {\n\t\t\treturn navAnnotations?.UpdateRestrictions?.RequiredProperties ? true : false;\n\t\t}\n\t\treturn navAnnotations?.InsertRestrictions?.RequiredProperties ? true : false;\n\t} else if (checkUpdateRestrictions) {\n\t\tconst entityAnnotations = annotations as MetaModelEntitySetAnnotation | undefined;\n\t\treturn entityAnnotations?.[\"@Org.OData.Capabilities.V1.UpdateRestrictions\"]?.RequiredProperties ? true : false;\n\t}\n\tconst entitytSetAnnotations = annotations as MetaModelEntitySetAnnotation | undefined;\n\treturn entitytSetAnnotations?.[\"@Org.OData.Capabilities.V1.InsertRestrictions\"]?.RequiredProperties ? true : false;\n}\n\nexport type CustomAggregateDefinition = {\n\tcontextDefiningProperties?: string[];\n\tlabel?: string;\n\tname?: string;\n\tpropertyPath?: string;\n\tsortable?: boolean;\n\tsortOrder?: string;\n\tcustom?: boolean;\n};\n\n// Used in this file and FilterUtils\n/**\n * Returns custom aggregates for a given entitySet.\n * @param annotations A list of annotations of the entity set\n * @returns A map to the custom aggregates keyed by their qualifiers\n */\nexport function getAllCustomAggregates(annotations: MetaModelEntitySetAnnotation): Record<string, CustomAggregateDefinition> {\n\tconst customAggregates: Record<string, CustomAggregateDefinition> = {};\n\tlet annotation;\n\tfor (const annotationKey in annotations) {\n\t\tif (annotationKey.startsWith(\"@Org.OData.Aggregation.V1.CustomAggregate\")) {\n\t\t\tannotation = annotationKey.replace(\"@Org.OData.Aggregation.V1.CustomAggregate#\", \"\");\n\t\t\tconst annotationParts = annotation.split(\"@\");\n\n\t\t\tif (annotationParts.length == 2) {\n\t\t\t\tconst customAggregate: CustomAggregateDefinition = {};\n\t\t\t\t//inner annotation that is not part of \tValidation.AggregatableTerms\n\t\t\t\tif (annotationParts[1] == \"Org.OData.Aggregation.V1.ContextDefiningProperties\") {\n\t\t\t\t\tcustomAggregate.contextDefiningProperties = annotations[annotationKey] as string[];\n\t\t\t\t}\n\n\t\t\t\tif (annotationParts[1] == \"com.sap.vocabularies.Common.v1.Label\") {\n\t\t\t\t\tcustomAggregate.label = annotations[annotationKey] as string;\n\t\t\t\t}\n\t\t\t\tcustomAggregates[annotationParts[0]] = customAggregate;\n\t\t\t} else if (annotationParts.length == 1) {\n\t\t\t\tcustomAggregates[annotationParts[0]] = {\n\t\t\t\t\tname: annotationParts[0],\n\t\t\t\t\tpropertyPath: annotationParts[0],\n\t\t\t\t\tlabel: `Custom Aggregate (${annotation})`,\n\t\t\t\t\tsortable: true,\n\t\t\t\t\tsortOrder: \"both\",\n\t\t\t\t\tcustom: true\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n\n\treturn customAggregates;\n}\n\n// Used in ValueListHelper, ChartDelegate and ValueHelp-TableDelegate\nexport type SortRestrictionsPropertyInfoType = {\n\tsortable: boolean;\n\tsortDirection?: string;\n};\n\nexport type SortRestrictionsInfoType = {\n\tsortable: boolean;\n\tpropertyInfo: Record<string, SortRestrictionsPropertyInfoType>;\n};\n/**\n * Determines the sorting information from the restriction annotation.\n * @param entitySetAnnotations EntitySet or collection annotations with the sort restrictions annotation\n * @returns An object containing the sort restriction information\n */\nexport function getSortRestrictionsInfo(entitySetAnnotations: MetaModelEntitySetAnnotation): SortRestrictionsInfoType {\n\tconst sortRestrictionsInfo: SortRestrictionsInfoType = {\n\t\tsortable: true,\n\t\tpropertyInfo: {}\n\t};\n\n\tconst sortRestrictions = entitySetAnnotations[\"@Org.OData.Capabilities.V1.SortRestrictions\"];\n\n\tif (!sortRestrictions) {\n\t\treturn sortRestrictionsInfo;\n\t}\n\n\tif (sortRestrictions.Sortable === false) {\n\t\tsortRestrictionsInfo.sortable = false;\n\t}\n\n\tfor (const propertyItem of sortRestrictions.NonSortableProperties || []) {\n\t\tconst propertyName = propertyItem.$PropertyPath;\n\t\tsortRestrictionsInfo.propertyInfo[propertyName] = {\n\t\t\tsortable: false\n\t\t};\n\t}\n\n\tfor (const propertyItem of sortRestrictions.AscendingOnlyProperties || []) {\n\t\tconst propertyName = propertyItem.$PropertyPath;\n\t\tsortRestrictionsInfo.propertyInfo[propertyName] = {\n\t\t\tsortable: true,\n\t\t\tsortDirection: \"asc\" // not used, yet\n\t\t};\n\t}\n\n\tfor (const propertyItem of sortRestrictions.DescendingOnlyProperties || []) {\n\t\tconst propertyName = propertyItem.$PropertyPath;\n\t\tsortRestrictionsInfo.propertyInfo[propertyName] = {\n\t\t\tsortable: true,\n\t\t\tsortDirection: \"desc\" // not used, yet\n\t\t};\n\t}\n\n\treturn sortRestrictionsInfo;\n}\n\n// Used in ChartDelegate and ValueHelp-TableDelegate\nexport type FilterRestrictionsPropertyInfoType = {\n\tfilterable: boolean;\n\tallowedExpressions?: string[];\n};\n\nexport type FilterRestrictionsInfoType = {\n\tfilterable: boolean;\n\trequiresFilter: boolean;\n\tpropertyInfo: Record<string, FilterRestrictionsPropertyInfoType>;\n\trequiredProperties: string[];\n};\n/**\n * Determines the filter information based on the filter restrictions annoation.\n * @param filterRestrictions The filter restrictions annotation\n * @returns An object containing the filter restriction information\n */\nexport function getFilterRestrictionsInfo(filterRestrictions?: MetaModelType<FilterRestrictionsType>): FilterRestrictionsInfoType {\n\tlet i, propertyName;\n\tconst filterRestrictionsInfo: FilterRestrictionsInfoType = {\n\t\tfilterable: true,\n\t\trequiresFilter: filterRestrictions?.RequiresFilter || false,\n\t\tpropertyInfo: {},\n\t\trequiredProperties: []\n\t};\n\n\tif (!filterRestrictions) {\n\t\treturn filterRestrictionsInfo;\n\t}\n\n\tif (filterRestrictions.Filterable === false) {\n\t\tfilterRestrictionsInfo.filterable = false;\n\t}\n\n\t//Hierarchical Case\n\tif (filterRestrictions.RequiredProperties) {\n\t\tfor (i = 0; i < filterRestrictions.RequiredProperties.length; i++) {\n\t\t\tpropertyName = filterRestrictions.RequiredProperties[i].$PropertyPath;\n\t\t\tfilterRestrictionsInfo.requiredProperties.push(propertyName);\n\t\t}\n\t}\n\n\tconst nonFilterableProperties = filterRestrictions.NonFilterableProperties?.map((prop) => prop.$PropertyPath) || [];\n\tconst filterableProperties = filterRestrictions.FilterExpressionRestrictions?.map((prop) => prop.Property?.$PropertyPath) || [];\n\tgetFilterableData(filterRestrictionsInfo.propertyInfo, nonFilterableProperties, filterableProperties);\n\n\tif (filterRestrictions.FilterExpressionRestrictions) {\n\t\t//TBD\n\t\tfor (i = 0; i < filterRestrictions.FilterExpressionRestrictions.length; i++) {\n\t\t\tpropertyName = filterRestrictions.FilterExpressionRestrictions[i].Property?.$PropertyPath;\n\t\t\tif (propertyName) {\n\t\t\t\tfilterRestrictionsInfo.propertyInfo[propertyName][\"allowedExpressions\"] = filterRestrictions.FilterExpressionRestrictions[i]\n\t\t\t\t\t.AllowedExpressions as unknown as string[];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn filterRestrictionsInfo;\n}\n\n/**\n * This function will update the obj to have list of properties which can be filtered or not.\n * @param filterDataObj\n * @param nonFilterableProperties\n * @param filterableProperties\n */\nexport function getFilterableData(\n\tfilterDataObj: Record<string, FilterRestrictionsPropertyInfoType>,\n\tnonFilterableProperties: string[],\n\tfilterableProperties: (string | undefined)[]\n): void {\n\tfor (let i = 0; i < nonFilterableProperties.length; i++) {\n\t\tfilterDataObj[nonFilterableProperties[i]] = {\n\t\t\tfilterable: false\n\t\t};\n\t}\n\tfor (let i = 0; i < filterableProperties.length; i++) {\n\t\tconst propName = filterableProperties[i];\n\t\tif (propName) {\n\t\t\tfilterDataObj[propName] = {\n\t\t\t\tfilterable: true\n\t\t\t};\n\t\t}\n\t}\n}\n\n// Used in ChartDelegate and ValueHelp-TableDelegate\n/**\n * Provides the information if the FilterExpression is a multiValue Filter Expression.\n * @param filterExpression The FilterExpressionType\n * @returns A boolean value wether it is a multiValue Filter Expression or not\n */\nexport function isMultiValueFilterExpression(filterExpression: string): boolean {\n\tlet isMultiValue = true;\n\n\t//SingleValue | MultiValue | SingleRange | MultiRange | SearchExpression | MultiRangeOrSearchExpression\n\tswitch (filterExpression) {\n\t\tcase \"SearchExpression\":\n\t\tcase \"SingleRange\":\n\t\tcase \"SingleValue\":\n\t\t\tisMultiValue = false;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t}\n\n\treturn isMultiValue;\n}\n\n// DO NOT USE, only for tests and internally in this file\nexport const METAMODEL_FUNCTIONS = {\n\tgetRequiredProperties,\n\tgetRequiredPropertiesFromAnnotations,\n\thasRestrictedPropertiesInAnnotations,\n\tgetRequiredPropertiesFromInsertRestrictions,\n\tgetNavigationRestrictions,\n\tgetAllCustomAggregates,\n\tgetFilterableData\n};\n"],"mappings":"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","ignoreList":[],"file":"MetaModelFunction-dbg.js"}