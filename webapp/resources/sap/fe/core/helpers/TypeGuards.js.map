{"version":3,"file":"TypeGuards.js","names":["isFulfilled","p","status","_exports","isRejected","isContext","potentialContext","isA","isFunctionArray","potentialFunctionArray","Array","isArray","length","every","item","isAnnotationOfType","potentialAnnotationType","typeName","includes","$Type","isAnnotationOfTerm","potentialAnnotation","termName","term","isAnnotationTerm","hasOwnProperty","isServiceObject","serviceObject","isComplexType","_type","isTypeDefinition","isEntityContainer","isEntitySet","isSingleton","isEntityType","isProperty","isNavigationProperty","isSingleNavigationProperty","isCollection","isMultipleNavigationProperty","isPathAnnotationExpression","expression","type","isAnnotationPath","isPropertyPathExpression","isAction"],"sources":["./TypeGuards.ts"],"sourcesContent":["import type {\n\tAnnotationTerm,\n\tComplexType,\n\tEntityContainer,\n\tEntitySet,\n\tEntityType,\n\tMultipleNavigationProperty,\n\tNavigationProperty,\n\tPathAnnotationExpression,\n\tProperty,\n\tPropertyPath,\n\tServiceObject,\n\tSingleNavigationProperty,\n\tSingleton,\n\tTypeDefinition\n} from \"@sap-ux/vocabularies-types\";\nimport type { Action, AnnotationPath } from \"@sap-ux/vocabularies-types/Edm\";\nimport type Context from \"sap/ui/model/odata/v4/Context\";\n\nexport function isFulfilled<T>(p: PromiseSettledResult<T>): p is PromiseFulfilledResult<T> {\n\treturn p.status === \"fulfilled\";\n}\nexport function isRejected<T>(p: PromiseSettledResult<T>): p is PromiseRejectedResult {\n\treturn p.status === \"rejected\";\n}\n\nexport function isContext(potentialContext: Context | unknown | undefined): potentialContext is Context {\n\treturn (potentialContext as Context)?.isA?.<Context>(\"sap.ui.model.Context\");\n}\n\nexport function isFunctionArray(potentialFunctionArray: Function[] | unknown): potentialFunctionArray is Function[] {\n\treturn (\n\t\tArray.isArray(potentialFunctionArray) &&\n\t\tpotentialFunctionArray.length > 0 &&\n\t\tpotentialFunctionArray.every((item) => typeof item === \"function\")\n\t);\n}\n\ntype AnnotationType = {\n\t$Type?: string;\n\tfullyQualifiedName?: string;\n};\nexport type _AnnotationTerm = {\n\tterm: string;\n\tqualifier?: string;\n};\n\n/**\n * Checks whether the argument is an annotation of the given type.\n * @param potentialAnnotationType The annotation to check\n * @param typeName The type to check for\n * @returns Whether the argument is an annotation of the given type\n */\nexport function isAnnotationOfType<T extends object & AnnotationType>(\n\tpotentialAnnotationType: unknown,\n\ttypeName: T[\"$Type\"] | T[\"$Type\"][]\n): potentialAnnotationType is T {\n\tif (Array.isArray(typeName)) {\n\t\treturn typeName.includes((potentialAnnotationType as AnnotationType)?.$Type);\n\t}\n\treturn (potentialAnnotationType as AnnotationType)?.$Type === typeName;\n}\n\n/**\n * Checks whether the argument is an annotation of the given term.\n * @param potentialAnnotation The annotation to check\n * @param termName The term to check for\n * @returns Whether the argument is an annotation of the given term\n */\nexport function isAnnotationOfTerm<T extends object & _AnnotationTerm>(\n\tpotentialAnnotation: unknown,\n\ttermName: T[\"term\"]\n): potentialAnnotation is AnnotationTerm<T> {\n\treturn (potentialAnnotation as _AnnotationTerm)?.term === termName;\n}\n\nexport function isAnnotationTerm(potentialAnnotation: unknown): potentialAnnotation is _AnnotationTerm {\n\treturn (potentialAnnotation as _AnnotationTerm).hasOwnProperty(\"term\");\n}\n\n/**\n * Checks whether the argument is a {@link ServiceObject}.\n * @param serviceObject The object to be checked.\n * @returns Whether the argument is a {@link ServiceObject}.\n */\nexport function isServiceObject(serviceObject: unknown | undefined): serviceObject is ServiceObject {\n\treturn serviceObject?.hasOwnProperty(\"_type\") ?? false;\n}\n\n/**\n * Checks whether the argument is a {@link ComplexType}.\n * @param serviceObject The object to be checked.\n * @returns Whether the argument is a {@link ComplexType}.\n */\nexport function isComplexType(serviceObject: unknown): serviceObject is ComplexType {\n\treturn (serviceObject as ComplexType)?._type === \"ComplexType\";\n}\n\n/**\n * Checks whether the argument is a {@link TypeDefinition}.\n * @param serviceObject The object to be checked.\n * @returns Whether the argument is a {@link TypeDefinition}.\n */\nexport function isTypeDefinition(serviceObject: unknown): serviceObject is TypeDefinition {\n\treturn (serviceObject as TypeDefinition)?._type === \"TypeDefinition\";\n}\n\n/**\n * Checks whether the argument is an {@link EntityContainer}.\n * @param serviceObject The object to be checked.\n * @returns Whether the argument is an {@link EntityContainer}.\n */\nexport function isEntityContainer(serviceObject: unknown): serviceObject is EntityContainer {\n\treturn (serviceObject as EntityContainer)?._type === \"EntityContainer\";\n}\n\n/**\n * Checks whether the argument is an {@link EntitySet}.\n * @param serviceObject The object to be checked.\n * @returns Whether the argument is an {@link EntitySet}.\n */\nexport function isEntitySet(serviceObject: unknown): serviceObject is EntitySet {\n\treturn (serviceObject as EntitySet)?._type === \"EntitySet\";\n}\n\n/**\n * Checks whether the argument is a {@link Singleton}.\n * @param serviceObject The object to be checked.\n * @returns Whether the argument is a {@link Singleton}\n */\nexport function isSingleton(serviceObject: unknown): serviceObject is Singleton {\n\treturn (serviceObject as Singleton)?._type === \"Singleton\";\n}\n\n/**\n * Checks whether the argument is an {@link EntityType}.\n * @param serviceObject The object to be checked.\n * @returns Whether the argument is an {@link EntityType}\n */\nexport function isEntityType(serviceObject: unknown): serviceObject is EntityType {\n\treturn (serviceObject as EntityType)?._type === \"EntityType\";\n}\n\n/**\n * Checks whether the argument is a {@link Property}.\n * @param serviceObject The object to be checked.\n * @returns Whether the argument is a {@link Property}.\n */\nexport function isProperty(serviceObject: unknown): serviceObject is Property {\n\treturn (serviceObject as Property)?._type === \"Property\";\n}\n\n/**\n * Checks whether the argument is a {@link NavigationProperty}.\n *\n * Hint: There are also the more specific functions {@link isSingleNavigationProperty} and {@link isMultipleNavigationProperty}. These can be\n * used to check for to-one and to-many navigation properties, respectively.\n * @param serviceObject The object to be checked.\n * @returns Whether the argument is a {@link NavigationProperty}.\n */\nexport function isNavigationProperty(serviceObject: unknown): serviceObject is NavigationProperty {\n\treturn (serviceObject as NavigationProperty)?._type === \"NavigationProperty\";\n}\n\n/**\n * Checks whether the argument is a {@link SingleNavigationProperty}.\n * @param serviceObject The object to be checked.\n * @returns Whether the argument is a {@link SingleNavigationProperty}.\n */\nexport function isSingleNavigationProperty(serviceObject: unknown): serviceObject is SingleNavigationProperty {\n\treturn isNavigationProperty(serviceObject) && !serviceObject.isCollection;\n}\n\n/**\n * Checks whether the argument is a {@link MultipleNavigationProperty}.\n * @param serviceObject The object to be checked.\n * @returns Whether the argument is a {@link MultipleNavigationProperty}.\n */\nexport function isMultipleNavigationProperty(serviceObject: unknown): serviceObject is MultipleNavigationProperty {\n\treturn isNavigationProperty(serviceObject) && serviceObject.isCollection;\n}\n\n/**\n * Checks whether the argument is a {@link PathAnnotationExpression}.\n * @param expression The object to be checked.\n * @returns Whether the argument is a {@link PathAnnotationExpression}.\n */\nexport function isPathAnnotationExpression<T>(expression: unknown): expression is PathAnnotationExpression<T> {\n\treturn (expression as PathAnnotationExpression<T>)?.type === \"Path\";\n}\n\n/**\n * Checks whether the argument is a {@link AnnotationPathExpression}.\n * @param expression The object to be checked.\n * @returns Whether the argument is a {@link AnnotationPathExpression}.\n */\nexport function isAnnotationPath<T>(expression: unknown): expression is AnnotationPath<T> {\n\treturn (expression as AnnotationPath<T>)?.type === \"AnnotationPath\";\n}\n\n/**\n * Checks whether the argument is a {@link PropertyPath}.\n * @param expression The object to be checked.\n * @returns Whether the argument is a {@link PropertyPath}.\n */\nexport function isPropertyPathExpression(expression: unknown): expression is PropertyPath {\n\treturn (expression as PropertyPath)?.type === \"PropertyPath\";\n}\n\n/**\n * Checks whether the argument is an {@link Action}.\n * @param serviceObject The object to be checked.\n * @returns Whether the argument is an {@link Action}.\n */\nexport function isAction(serviceObject: unknown): serviceObject is Action {\n\treturn (serviceObject as Action)?._type === \"Action\";\n}\n"],"mappings":";;;;kDAmBO,SAASA,EAAeC,GAC9B,OAAOA,EAAEC,SAAW,WACrB,CAACC,EAAAH,cACM,SAASI,EAAcH,GAC7B,OAAOA,EAAEC,SAAW,UACrB,CAACC,EAAAC,aAEM,SAASC,EAAUC,GACzB,OAAQA,GAA8BC,MAAe,uBACtD,CAACJ,EAAAE,YAEM,SAASG,EAAgBC,GAC/B,OACCC,MAAMC,QAAQF,IACdA,EAAuBG,OAAS,GAChCH,EAAuBI,MAAOC,UAAgBA,IAAS,WAEzD,CAACX,EAAAK,kBAiBM,SAASO,EACfC,EACAC,GAEA,GAAIP,MAAMC,QAAQM,GAAW,CAC5B,OAAOA,EAASC,SAAUF,GAA4CG,MACvE,CACA,OAAQH,GAA4CG,QAAUF,CAC/D,CAEAd,EAAAY,qBAMO,SAASK,EACfC,EACAC,GAEA,OAAQD,GAAyCE,OAASD,CAC3D,CAACnB,EAAAiB,qBAEM,SAASI,EAAiBH,GAChC,OAAQA,EAAwCI,eAAe,OAChE,CAEAtB,EAAAqB,mBAKO,SAASE,EAAgBC,GAC/B,OAAOA,GAAeF,eAAe,UAAY,KAClD,CAEAtB,EAAAuB,kBAKO,SAASE,EAAcD,GAC7B,OAAQA,GAA+BE,QAAU,aAClD,CAEA1B,EAAAyB,gBAKO,SAASE,EAAiBH,GAChC,OAAQA,GAAkCE,QAAU,gBACrD,CAEA1B,EAAA2B,mBAKO,SAASC,EAAkBJ,GACjC,OAAQA,GAAmCE,QAAU,iBACtD,CAEA1B,EAAA4B,oBAKO,SAASC,EAAYL,GAC3B,OAAQA,GAA6BE,QAAU,WAChD,CAEA1B,EAAA6B,cAKO,SAASC,EAAYN,GAC3B,OAAQA,GAA6BE,QAAU,WAChD,CAEA1B,EAAA8B,cAKO,SAASC,EAAaP,GAC5B,OAAQA,GAA8BE,QAAU,YACjD,CAEA1B,EAAA+B,eAKO,SAASC,EAAWR,GAC1B,OAAQA,GAA4BE,QAAU,UAC/C,CAEA1B,EAAAgC,aAQO,SAASC,EAAqBT,GACpC,OAAQA,GAAsCE,QAAU,oBACzD,CAEA1B,EAAAiC,uBAKO,SAASC,EAA2BV,GAC1C,OAAOS,EAAqBT,KAAmBA,EAAcW,YAC9D,CAEAnC,EAAAkC,6BAKO,SAASE,EAA6BZ,GAC5C,OAAOS,EAAqBT,IAAkBA,EAAcW,YAC7D,CAEAnC,EAAAoC,+BAKO,SAASC,EAA8BC,GAC7C,OAAQA,GAA4CC,OAAS,MAC9D,CAEAvC,EAAAqC,6BAKO,SAASG,EAAoBF,GACnC,OAAQA,GAAkCC,OAAS,gBACpD,CAEAvC,EAAAwC,mBAKO,SAASC,EAAyBH,GACxC,OAAQA,GAA6BC,OAAS,cAC/C,CAEAvC,EAAAyC,2BAKO,SAASC,EAASlB,GACxB,OAAQA,GAA0BE,QAAU,QAC7C,CAAC1B,EAAA0C,WAAA,OAAA1C,CAAA","ignoreList":[]}