{"version":3,"file":"PropertyHelper.js","names":["isComputed","oProperty","annotations","Core","Computed","valueOf","_exports","isImmutable","Immutable","isKey","isSemanticKey","property","contextDataModelObject","semanticKeys","contextLocation","targetEntityType","Common","SemanticKey","some","key","$target","fullyQualifiedName","hasDateType","includes","type","getLabel","Label","toString","hasSemanticObject","SemanticObjectHelper","getAssociatedTimezoneProperty","isPathAnnotationExpression","Timezone","undefined","getAssociatedTimezonePropertyPath","path","getAssociatedTextProperty","Text","getAssociatedExternalIdPropertyPath","ExternalID","getAssociatedExternalIdProperty","getAssociatedUnitProperty","Measures","Unit","getAssociatedUnitPropertyPath","getAssociatedCurrencyProperty","ISOCurrency","getAssociatedCurrencyPropertyPath","getStaticUnitOrCurrency","unitOrCurrency","getStaticTimezone","staticTimezone","getAssociatedTextPropertyPath","hasValueHelp","ValueList","ValueListReferences","ValueListMapping","ValueListRelevantQualifiers","hasValueHelpWithFixedValues","ValueListWithFixedValues","hasValueListForValidation","ValueListForValidation","hasTimezone","isUnit","IsUnit","hasText","isImageURL","UI","IsImageURL","isCurrency","IsCurrency","hasCurrency","hasUnit","isGuid","hasStaticPercentUnit","isMultiLineText","parameter","MultiLineText","isTimezone","IsTimezone"],"sources":["./PropertyHelper.ts"],"sourcesContent":["import type { ActionParameter, Property } from \"@sap-ux/vocabularies-types\";\nimport { isPathAnnotationExpression } from \"sap/fe/core/helpers/TypeGuards\";\nimport type { DataModelObjectPath } from \"sap/fe/core/templating/DataModelPathHelper\";\nimport * as SemanticObjectHelper from \"sap/fe/core/templating/SemanticObjectHelper\";\n\n/**\n * Check whether the property has the Core.Computed annotation or not.\n * @param oProperty The target property\n * @returns `true` if the property is computed\n */\nexport const isComputed = function (oProperty: Property): boolean {\n\treturn !!oProperty.annotations?.Core?.Computed?.valueOf();\n};\n\n/**\n * Check whether the property has the Core.Immutable annotation or not.\n * @param oProperty The target property\n * @returns `true` if it's immutable\n */\nexport const isImmutable = function (oProperty: Property): boolean {\n\treturn !!oProperty.annotations?.Core?.Immutable?.valueOf();\n};\n\n/**\n * Check whether the property is a key or not.\n * @param oProperty The target property\n * @returns `true` if it's a key\n */\nexport const isKey = function (oProperty: Property): boolean {\n\treturn !!oProperty.isKey;\n};\n\n/**\n * Check whether the property is a semanticKey for the context entity.\n * @param property\n * @param contextDataModelObject The DataModelObject that holds the context\n * @returns `true`if it's a semantic key\n */\nexport const isSemanticKey = function (property: Property | undefined, contextDataModelObject: DataModelObjectPath<unknown>): boolean {\n\tconst semanticKeys = contextDataModelObject.contextLocation?.targetEntityType?.annotations?.Common?.SemanticKey;\n\treturn (\n\t\tsemanticKeys?.some(function (key) {\n\t\t\treturn key?.$target?.fullyQualifiedName === property?.fullyQualifiedName;\n\t\t}) ?? false\n\t);\n};\n\n/**\n * Checks whether the property has a date time or not.\n * @param oProperty\n * @returns `true` if it is of type date / datetime / datetimeoffset\n */\nexport const hasDateType = function (oProperty: Property): boolean {\n\treturn [\"Edm.Date\", \"Edm.DateTime\", \"Edm.DateTimeOffset\"].includes(oProperty.type);\n};\n\n/**\n * Retrieve the label annotation.\n * @param oProperty The target property\n * @returns The label string\n */\nexport const getLabel = function (oProperty: Property): string {\n\treturn oProperty.annotations?.Common?.Label?.toString() || \"\";\n};\n\n/**\n * Check whether the property has a semantic object defined or not.\n * @param property The target property\n * @returns `true` if it has a semantic object\n */\nexport const hasSemanticObject = function (property: Property): boolean {\n\treturn SemanticObjectHelper.hasSemanticObject(property);\n};\n\n/**\n * Retrieves the timezone property associated to the property, if applicable.\n * @param oProperty The target property\n * @returns The timezone property, if it exists\n */\nexport const getAssociatedTimezoneProperty = function (oProperty: Property): Property | undefined {\n\treturn isPathAnnotationExpression(oProperty?.annotations?.Common?.Timezone)\n\t\t? (oProperty.annotations?.Common?.Timezone.$target as unknown as Property)\n\t\t: undefined;\n};\n\n/**\n * Retrieves the timezone property path associated to the property, if applicable.\n * @param oProperty The target property\n * @returns The timezone property path, if it exists\n */\nexport const getAssociatedTimezonePropertyPath = function (oProperty: Property): string | undefined {\n\treturn isPathAnnotationExpression(oProperty?.annotations?.Common?.Timezone)\n\t\t? oProperty?.annotations?.Common?.Timezone?.path\n\t\t: undefined;\n};\n\n/**\n * Retrieves the associated text property for a property, if it exists.\n * @param oProperty The target property\n * @returns The text property, if it exists\n */\nexport const getAssociatedTextProperty = function (oProperty: Property): Property | undefined {\n\treturn isPathAnnotationExpression(oProperty?.annotations?.Common?.Text)\n\t\t? (oProperty.annotations?.Common?.Text.$target as unknown as Property)\n\t\t: undefined;\n};\n\n/**\n * Retrieves the Common.ExternalID property path if it exists.\n * @param property The target property\n * @returns The Common.ExternalID property path or undefined if it does not exist\n */\nexport const getAssociatedExternalIdPropertyPath = function (property: Property | undefined): string | undefined {\n\t//return property.annotations.Common?.ExternalID?.path;\n\treturn isPathAnnotationExpression(property?.annotations.Common?.ExternalID) ? property?.annotations.Common?.ExternalID.path : undefined;\n};\n\n/**\n * Retrieves the associated externalID property for that property, if it exists.\n * @param property The target property\n * @returns The externalID property, if it exists\n */\nexport const getAssociatedExternalIdProperty = function (property: Property): Property | undefined {\n\treturn isPathAnnotationExpression(property?.annotations?.Common?.ExternalID)\n\t\t? (property.annotations?.Common?.ExternalID.$target as unknown as Property)\n\t\t: undefined;\n};\n\n/**\n * Retrieves the unit property associated to the property, if applicable.\n * @param oProperty The target property\n * @returns The unit property, if it exists\n */\nexport const getAssociatedUnitProperty = function (oProperty: Property | undefined): Property | undefined {\n\treturn oProperty && isPathAnnotationExpression(oProperty.annotations.Measures?.Unit)\n\t\t? oProperty.annotations.Measures?.Unit.$target\n\t\t: undefined;\n};\n\nexport const getAssociatedUnitPropertyPath = function (oProperty: Property): string | undefined {\n\treturn isPathAnnotationExpression(oProperty?.annotations?.Measures?.Unit) ? oProperty.annotations?.Measures?.Unit.path : undefined;\n};\n\n/**\n * Retrieves the associated currency property for that property if it exists.\n * @param oProperty The target property\n * @returns The unit property, if it exists\n */\nexport const getAssociatedCurrencyProperty = function (oProperty: Property | undefined): Property | undefined {\n\treturn oProperty && isPathAnnotationExpression(oProperty.annotations.Measures?.ISOCurrency)\n\t\t? oProperty.annotations.Measures?.ISOCurrency.$target\n\t\t: undefined;\n};\n\nexport const getAssociatedCurrencyPropertyPath = function (oProperty: Property): string | undefined {\n\treturn isPathAnnotationExpression(oProperty?.annotations?.Measures?.ISOCurrency)\n\t\t? oProperty.annotations?.Measures?.ISOCurrency.path\n\t\t: undefined;\n};\n\n/**\n * Retrieves the associated static currency or unit for a given property if it exists.\n * @param property The target property\n * @returns The unit or currency static value, if it exists\n */\nexport const getStaticUnitOrCurrency = function (property: Property): string | undefined {\n\tconst unitOrCurrency = property.annotations?.Measures?.ISOCurrency ?? property.annotations?.Measures?.Unit;\n\tif (!unitOrCurrency || isPathAnnotationExpression(unitOrCurrency)) {\n\t\treturn undefined;\n\t}\n\treturn `${unitOrCurrency}`;\n};\n\n/**\n * Retrieves the associated timezone static text a given property if it exists.\n * @param property The target property\n * @returns The timezone static value, if it exists\n */\n\nexport const getStaticTimezone = function (property: Property): string | undefined {\n\tconst staticTimezone = property.annotations?.Common?.Timezone;\n\tif (!staticTimezone || isPathAnnotationExpression(staticTimezone)) {\n\t\treturn undefined;\n\t}\n\treturn `${staticTimezone}`;\n};\n\n/**\n * Retrieves the Common.Text property path if it exists.\n * @param oProperty The target property\n * @returns The Common.Text property path or undefined if it does not exist\n */\nexport const getAssociatedTextPropertyPath = function (oProperty: Property | undefined): string | undefined {\n\treturn isPathAnnotationExpression(oProperty?.annotations?.Common?.Text) ? oProperty?.annotations?.Common?.Text.path : undefined;\n};\n\n/**\n * Check whether the property has a value help annotation defined or not.\n * @param property The target property to be checked\n * @returns `true` if it has a value help\n */\nexport const hasValueHelp = function (property: Property | ActionParameter): boolean {\n\treturn (\n\t\t!!property.annotations?.Common?.ValueList ||\n\t\t!!property.annotations?.Common?.ValueListReferences ||\n\t\t!!property.annotations?.Common?.ValueListMapping ||\n\t\t!!property.annotations?.Common?.ValueListRelevantQualifiers // Covers cases where context dependent annotation are present\n\t);\n};\n\n/**\n * Check whether the property has a value help with fixed value annotation defined or not.\n * @param oProperty The target property\n * @returns `true` if it has a value help\n */\nexport const hasValueHelpWithFixedValues = function (oProperty: Property | ActionParameter): boolean {\n\treturn !!oProperty?.annotations?.Common?.ValueListWithFixedValues?.valueOf();\n};\n\n/**\n * Check whether the property has a value help for validation annotation defined or not.\n * @param oProperty The target property\n * @returns `true` if it has a value help\n */\nexport const hasValueListForValidation = function (oProperty: Property | ActionParameter): boolean {\n\treturn oProperty.annotations?.Common?.ValueListForValidation !== undefined;\n};\n\nexport const hasTimezone = function (oProperty: Property): boolean {\n\treturn oProperty.annotations?.Common?.Timezone !== undefined;\n};\n/**\n * Checks whether the property is a unit property.\n * @param property The property to be checked\n * @returns `true` if it is a unit\n */\nexport const isUnit = function (property: Property | ActionParameter): boolean {\n\treturn !!property.annotations?.Common?.IsUnit?.valueOf();\n};\n\n/**\n * Checks whether the property has a text property.\n * @param property The property to be checked\n * @returns `true` if it is a Text\n */\nexport const hasText = function (property: Property): boolean {\n\treturn property.annotations?.Common?.Text !== undefined;\n};\n\n/**\n * Checks whether the property has an ImageURL.\n * @param property The property to be checked\n * @returns `true` if it is an ImageURL\n */\nexport const isImageURL = function (property: Property): boolean {\n\treturn !!property.annotations?.UI?.IsImageURL?.valueOf();\n};\n\n/**\n * Checks whether the property is a currency property.\n * @param oProperty The property to be checked\n * @returns `true` if it is a currency\n */\nexport const isCurrency = function (oProperty: Property | ActionParameter): boolean {\n\treturn !!oProperty.annotations?.Common?.IsCurrency?.valueOf();\n};\n\n/**\n * Checks whether the property has a currency property.\n * @param property The property to be checked\n * @returns `true` if it has a currency\n */\nexport const hasCurrency = function (property: Property): boolean {\n\treturn property.annotations?.Measures?.ISOCurrency !== undefined;\n};\n\n/**\n * Checks whether the property has a unit property.\n * @param property The property to be checked\n * @returns `true` if it has a unit\n */\n\nexport const hasUnit = function (property: Property): boolean {\n\treturn property.annotations?.Measures?.Unit !== undefined;\n};\n\n/**\n * Checks whether the property type has Edm.Guid.\n * @param property The property to be checked\n * @returns `true` if it is a Guid\n */\nexport const isGuid = function (property: Property | ActionParameter): boolean {\n\treturn property.type === \"Edm.Guid\";\n};\n\n/**\n * Checks if the property has a static unit that is %.\n * @param property The target property\n * @returns `true` if the property is annotated with the static unit %\n */\nexport const hasStaticPercentUnit = function (property: Property): boolean {\n\treturn property?.annotations?.Measures?.Unit?.toString() === \"%\";\n};\n\n/**\n * Check if the form element or action parameter supports multi line text input.\n * @param parameter Property or ActionParameter.\n * @returns Boolean\n */\nexport function isMultiLineText(parameter: Property | ActionParameter | undefined): boolean {\n\treturn parameter?.annotations?.UI?.MultiLineText?.valueOf() === true;\n}\n\n/**\n * Checks whether the property is a timezone property.\n * @param property The property to be checked\n * @returns `true` if it is a timezone property\n */\nexport function isTimezone(property: Property): boolean {\n\treturn !!property.annotations?.Common?.IsTimezone?.valueOf();\n}\n"],"mappings":"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","ignoreList":[]}