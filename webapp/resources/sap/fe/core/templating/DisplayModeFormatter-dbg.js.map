{"version":3,"names":["ODATA_TYPE_MAPPING","_exports","getDisplayMode","oPropertyPath","oDataModelObjectPath","oProperty","isPathAnnotationExpression","isPropertyPathExpression","$target","oEntityType","targetEntityType","oTextAnnotation","annotations","Common","Text","oTextArrangementAnnotation","UI","TextArrangement","toString","sDisplayValue"],"sourceRoot":".","sources":["DisplayModeFormatter.ts"],"sourcesContent":["/**\n * Separating these methods from the UIFormatters as they are used also in the converter.\n * These methods must NOT use any dependency from the SAP UI5 runtime.\n * When consumed outside of converters, you should call them via UIFormatters.\n */\n\nimport type { PathAnnotationExpression, Property } from \"@sap-ux/vocabularies-types\";\nimport type { AnnotationPath } from \"@sap-ux/vocabularies-types/Edm\";\nimport type { DataFieldAbstractTypes, DataPointTypeTypes } from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport { isPathAnnotationExpression, isPropertyPathExpression } from \"sap/fe/core/helpers/TypeGuards\";\nimport type { DataModelObjectPath } from \"sap/fe/core/templating/DataModelPathHelper\";\n\nexport type PropertyOrPath<P> = string | P | PathAnnotationExpression<P> | AnnotationPath<P>;\n\nexport const ODATA_TYPE_MAPPING: Record<string, string> = {\n\t\"sap.ui.model.odata.type.Boolean\": \"Edm.Boolean\",\n\t\"sap.ui.model.odata.type.Byte\": \"Edm.Byte\",\n\t\"sap.ui.model.odata.type.Date\": \"Edm.Date\",\n\t\"sap.ui.model.odata.type.DateTimeOffset\": \"Edm.DateTimeOffset\",\n\t\"sap.ui.model.odata.type.Decimal\": \"Edm.Decimal\",\n\t\"sap.ui.model.odata.type.Double\": \"Edm.Double\",\n\t\"sap.ui.model.odata.type.Guid\": \"Edm.Guid\",\n\t\"sap.ui.model.odata.type.Int16\": \"Edm.Int16\",\n\t\"sap.ui.model.odata.type.Int32\": \"Edm.Int32\",\n\t\"sap.ui.model.odata.type.Int64\": \"Edm.Int64\",\n\t\"sap.ui.model.odata.type.SByte\": \"Edm.SByte\",\n\t\"sap.ui.model.odata.type.Single\": \"Edm.Single\",\n\t\"sap.ui.model.odata.type.Stream\": \"Edm.Stream\",\n\t\"sap.ui.model.odata.type.TimeOfDay\": \"Edm.TimeOfDay\",\n\t\"sap.ui.model.odata.type.String\": \"Edm.String\"\n};\n\nexport type DisplayMode = \"Value\" | \"Description\" | \"DescriptionValue\" | \"ValueDescription\";\nexport const getDisplayMode = function (\n\toPropertyPath: PropertyOrPath<Property | DataFieldAbstractTypes | DataPointTypeTypes> | undefined,\n\toDataModelObjectPath?: DataModelObjectPath<Property | DataFieldAbstractTypes | DataPointTypeTypes>\n): DisplayMode {\n\tif (!oPropertyPath || typeof oPropertyPath === \"string\") {\n\t\treturn \"Value\";\n\t}\n\tconst oProperty =\n\t\t((isPathAnnotationExpression(oPropertyPath) || isPropertyPathExpression(oPropertyPath)) && oPropertyPath.$target) ||\n\t\t(oPropertyPath as Property);\n\tconst oEntityType = oDataModelObjectPath && oDataModelObjectPath.targetEntityType;\n\tconst oTextAnnotation = oProperty.annotations?.Common?.Text;\n\tconst oTextArrangementAnnotation =\n\t\t(typeof oTextAnnotation !== \"string\" && oTextAnnotation?.annotations?.UI?.TextArrangement?.toString()) ||\n\t\toEntityType?.annotations?.UI?.TextArrangement?.toString();\n\n\tlet sDisplayValue = oTextAnnotation ? \"DescriptionValue\" : \"Value\";\n\tif ((oTextAnnotation && oTextArrangementAnnotation) || oEntityType?.annotations?.UI?.TextArrangement?.toString()) {\n\t\tif (oTextArrangementAnnotation === \"UI.TextArrangementType/TextOnly\") {\n\t\t\tsDisplayValue = \"Description\";\n\t\t} else if (oTextArrangementAnnotation === \"UI.TextArrangementType/TextLast\") {\n\t\t\tsDisplayValue = \"ValueDescription\";\n\t\t} else if (oTextArrangementAnnotation === \"UI.TextArrangementType/TextSeparate\") {\n\t\t\tsDisplayValue = \"Value\";\n\t\t} else {\n\t\t\t//Default should be TextFirst if there is a Text annotation and neither TextOnly nor TextLast are set\n\t\t\tsDisplayValue = \"DescriptionValue\";\n\t\t}\n\t}\n\treturn sDisplayValue as DisplayMode;\n};\n"],"mappings":";;;;;;;;;;EAAA;AACA;AACA;AACA;AACA;EAUO,MAAMA,kBAA0C,GAAG;IACzD,iCAAiC,EAAE,aAAa;IAChD,8BAA8B,EAAE,UAAU;IAC1C,8BAA8B,EAAE,UAAU;IAC1C,wCAAwC,EAAE,oBAAoB;IAC9D,iCAAiC,EAAE,aAAa;IAChD,gCAAgC,EAAE,YAAY;IAC9C,8BAA8B,EAAE,UAAU;IAC1C,+BAA+B,EAAE,WAAW;IAC5C,+BAA+B,EAAE,WAAW;IAC5C,+BAA+B,EAAE,WAAW;IAC5C,+BAA+B,EAAE,WAAW;IAC5C,gCAAgC,EAAE,YAAY;IAC9C,gCAAgC,EAAE,YAAY;IAC9C,mCAAmC,EAAE,eAAe;IACpD,gCAAgC,EAAE;EACnC,CAAC;EAACC,QAAA,CAAAD,kBAAA,GAAAA,kBAAA;EAGK,MAAME,cAAc,GAAG,SAAAA,CAC7BC,aAAiG,EACjGC,oBAAkG,EACpF;IACd,IAAI,CAACD,aAAa,IAAI,OAAOA,aAAa,KAAK,QAAQ,EAAE;MACxD,OAAO,OAAO;IACf;IACA,MAAME,SAAS,GACb,CAACC,0BAA0B,CAACH,aAAa,CAAC,IAAII,wBAAwB,CAACJ,aAAa,CAAC,KAAKA,aAAa,CAACK,OAAO,IAC/GL,aAA0B;IAC5B,MAAMM,WAAW,GAAGL,oBAAoB,IAAIA,oBAAoB,CAACM,gBAAgB;IACjF,MAAMC,eAAe,GAAGN,SAAS,CAACO,WAAW,EAAEC,MAAM,EAAEC,IAAI;IAC3D,MAAMC,0BAA0B,GAC9B,OAAOJ,eAAe,KAAK,QAAQ,IAAIA,eAAe,EAAEC,WAAW,EAAEI,EAAE,EAAEC,eAAe,EAAEC,QAAQ,CAAC,CAAC,IACrGT,WAAW,EAAEG,WAAW,EAAEI,EAAE,EAAEC,eAAe,EAAEC,QAAQ,CAAC,CAAC;IAE1D,IAAIC,aAAa,GAAGR,eAAe,GAAG,kBAAkB,GAAG,OAAO;IAClE,IAAKA,eAAe,IAAII,0BAA0B,IAAKN,WAAW,EAAEG,WAAW,EAAEI,EAAE,EAAEC,eAAe,EAAEC,QAAQ,CAAC,CAAC,EAAE;MACjH,IAAIH,0BAA0B,KAAK,iCAAiC,EAAE;QACrEI,aAAa,GAAG,aAAa;MAC9B,CAAC,MAAM,IAAIJ,0BAA0B,KAAK,iCAAiC,EAAE;QAC5EI,aAAa,GAAG,kBAAkB;MACnC,CAAC,MAAM,IAAIJ,0BAA0B,KAAK,qCAAqC,EAAE;QAChFI,aAAa,GAAG,OAAO;MACxB,CAAC,MAAM;QACN;QACAA,aAAa,GAAG,kBAAkB;MACnC;IACD;IACA,OAAOA,aAAa;EACrB,CAAC;EAAClB,QAAA,CAAAC,cAAA,GAAAA,cAAA;EAAA,OAAAD,QAAA;AAAA","ignoreList":[],"file":"DisplayModeFormatter-dbg.js"}