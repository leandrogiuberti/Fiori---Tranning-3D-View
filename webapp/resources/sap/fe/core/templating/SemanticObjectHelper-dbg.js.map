{"version":3,"names":["getDynamicPathFromSemanticObject","semanticObject","dynamicSemObjectRegex","match","startsWith","length","_exports","hasSemanticObject","property","_propertyCommonAnnotations","annotations","Common","key","term","getSemanticObjects","semanticObjects","annotation","isAnnotationOfTerm","push","getSemanticObjectMappings","semanticObjectMappings","getSemanticObjectUnavailableActions","semanticObjectUnavailableActions","getPropertyWithSemanticObject","dataModelObjectPath","propertyWithSemanticObject","targetObject","navigationProperties","navProperty","contextLocation","find","contextNavProp","fullyQualifiedName","getSemanticObjectsAndQualifierMap","qualifierMap","semanticObjectsList","semanticObjectsExpressionList","undefined","semanticObjectExpression","getExpressionFromAnnotation","compiledSemanticObject","compileExpression","includes","qualifier","getReachableSemanticObjectsSettings","semanticObjectsCurrentUserCanNavigateTo","semanticObjectList","dynamicSemanticObjectsList","result","actualSemanticObject","forEach","_type","hasReachableStaticSemanticObject","dynamicSemanticObjects","manageSemanticObjectsForCurrentUser","dataModelPath","internalDataModel","getProperty","propertySemanticObjectList","propertyWithSemanticObjectFromNavigation","isNavigationProperty","SemanticObject","semanticObjectValue","customSemanticObjects","JSON","parse","internalSemanticObject","semanticObjectExpressionFromField","resolveBindingString"],"sourceRoot":".","sources":["SemanticObjectHelper.ts"],"sourcesContent":["import type { NavigationProperty, Property } from \"@sap-ux/vocabularies-types\";\nimport type {\n\tSemanticObject,\n\tSemanticObjectMapping,\n\tSemanticObjectUnavailableActions\n} from \"@sap-ux/vocabularies-types/vocabularies/Common\";\nimport { CommonAnnotationTerms } from \"@sap-ux/vocabularies-types/vocabularies/Common\";\nimport type { DataFieldAbstractTypes, DataPointType } from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport {\n\tcompileExpression,\n\tgetExpressionFromAnnotation,\n\tresolveBindingString,\n\ttype BindingToolkitExpression,\n\ttype CompiledBindingToolkitExpression\n} from \"sap/fe/base/BindingToolkit\";\nimport { isAnnotationOfTerm, isNavigationProperty } from \"sap/fe/core/helpers/TypeGuards\";\nimport type { DataModelObjectPath } from \"sap/fe/core/templating/DataModelPathHelper\";\nimport type { PropertyBindingInfo } from \"sap/ui/base/ManagedObject\";\nimport type JSONModel from \"sap/ui/model/json/JSONModel\";\n\ntype PropertyOrNavigationProperty = Property | NavigationProperty | undefined;\n\n/**\n * Get the path of the semantic object if it is a dynamic SemanticObject.\n * @param semanticObject The value of the Common.SemanticObject annotation.\n * @returns  The path of the semantic object if it is a dynamic SemanticObject, null otherwise.\n */\nexport const getDynamicPathFromSemanticObject = (semanticObject: string): string | null => {\n\tconst dynamicSemObjectRegex = semanticObject?.match(/{(.*?)}/);\n\tif (semanticObject?.startsWith(\"{=\")) {\n\t\treturn semanticObject;\n\t}\n\tif (dynamicSemObjectRegex?.length && dynamicSemObjectRegex.length > 1) {\n\t\treturn dynamicSemObjectRegex[1];\n\t}\n\treturn null;\n};\n\n/**\n * Check whether a property or a NavigationProperty has a semantic object defined or not.\n * @param property The target property\n * @returns `true` if it has a semantic object\n */\nexport const hasSemanticObject = function (property: Property | NavigationProperty | DataFieldAbstractTypes | DataPointType): boolean {\n\tconst _propertyCommonAnnotations = property.annotations?.Common as Record<string, { term?: CommonAnnotationTerms; qualifier?: string }>;\n\tif (_propertyCommonAnnotations) {\n\t\tfor (const key in _propertyCommonAnnotations) {\n\t\t\tif (_propertyCommonAnnotations[key]?.term === CommonAnnotationTerms.SemanticObject) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n};\n\nexport const getSemanticObjects = function (property: Property | NavigationProperty): SemanticObject[] {\n\tconst semanticObjects: SemanticObject[] = [];\n\tconst _propertyCommonAnnotations = property.annotations?.Common as Record<string, { term?: CommonAnnotationTerms; qualifier?: string }>;\n\tif (_propertyCommonAnnotations) {\n\t\tfor (const key in _propertyCommonAnnotations) {\n\t\t\tconst annotation = _propertyCommonAnnotations[key];\n\t\t\tif (isAnnotationOfTerm<SemanticObject>(annotation, CommonAnnotationTerms.SemanticObject)) {\n\t\t\t\tsemanticObjects.push(annotation);\n\t\t\t}\n\t\t}\n\t}\n\treturn semanticObjects;\n};\n\nexport const getSemanticObjectMappings = function (property: Property | NavigationProperty): SemanticObjectMapping[] {\n\tconst semanticObjectMappings: SemanticObjectMapping[] = [];\n\tconst _propertyCommonAnnotations = property.annotations?.Common as Record<string, { term?: CommonAnnotationTerms; qualifier?: string }>;\n\tif (_propertyCommonAnnotations) {\n\t\tfor (const key in _propertyCommonAnnotations) {\n\t\t\tconst annotation = _propertyCommonAnnotations[key];\n\t\t\tif (isAnnotationOfTerm<SemanticObjectMapping>(annotation, CommonAnnotationTerms.SemanticObjectMapping)) {\n\t\t\t\tsemanticObjectMappings.push(annotation);\n\t\t\t}\n\t\t}\n\t}\n\treturn semanticObjectMappings;\n};\n\nexport const getSemanticObjectUnavailableActions = function (property: Property | NavigationProperty): SemanticObjectUnavailableActions[] {\n\tconst semanticObjectUnavailableActions: SemanticObjectUnavailableActions[] = [];\n\tconst _propertyCommonAnnotations = property.annotations?.Common as Record<string, { term?: CommonAnnotationTerms; qualifier?: string }>;\n\tif (_propertyCommonAnnotations) {\n\t\tfor (const key in _propertyCommonAnnotations) {\n\t\t\tconst annotation = _propertyCommonAnnotations[key];\n\t\t\tif (isAnnotationOfTerm<SemanticObjectUnavailableActions>(annotation, CommonAnnotationTerms.SemanticObjectUnavailableActions)) {\n\t\t\t\tsemanticObjectUnavailableActions.push(annotation);\n\t\t\t}\n\t\t}\n\t}\n\treturn semanticObjectUnavailableActions;\n};\n\n/**\n * Get the property or the navigation property in  its relative path that holds semanticObject annotation if it exists.\n * @param dataModelObjectPath\n * @returns A property or a NavProperty or undefined\n */\nexport const getPropertyWithSemanticObject = function (\n\tdataModelObjectPath: DataModelObjectPath<Property | NavigationProperty | DataFieldAbstractTypes | DataPointType>\n): PropertyOrNavigationProperty {\n\tlet propertyWithSemanticObject: PropertyOrNavigationProperty;\n\tif (dataModelObjectPath.targetObject && hasSemanticObject(dataModelObjectPath.targetObject)) {\n\t\tpropertyWithSemanticObject = dataModelObjectPath.targetObject as Property | NavigationProperty;\n\t} else if (dataModelObjectPath.navigationProperties.length > 0) {\n\t\t// there are no semantic objects on the property itself so we look for some on nav properties\n\t\tfor (const navProperty of dataModelObjectPath.navigationProperties) {\n\t\t\tif (\n\t\t\t\t!dataModelObjectPath.contextLocation?.navigationProperties.find(\n\t\t\t\t\t(contextNavProp) => contextNavProp.fullyQualifiedName === navProperty.fullyQualifiedName\n\t\t\t\t) &&\n\t\t\t\t!propertyWithSemanticObject &&\n\t\t\t\thasSemanticObject(navProperty)\n\t\t\t) {\n\t\t\t\tpropertyWithSemanticObject = navProperty;\n\t\t\t}\n\t\t}\n\t}\n\treturn propertyWithSemanticObject;\n};\n\n/**\n * Get the semanticObject compile binding from metadata and a map to the qualifiers.\n * @param propertyWithSemanticObject The property that holds semanticObject annotataions if it exists\n * @returns An object containing semanticObjectList and qualifierMap\n */\nexport const getSemanticObjectsAndQualifierMap = function (propertyWithSemanticObject: PropertyOrNavigationProperty): {\n\tsemanticObjectsList: string[];\n\tsemanticObjectsExpressionList: BindingToolkitExpression<string>[];\n\tqualifierMap: Record<string, CompiledBindingToolkitExpression>;\n} {\n\tconst qualifierMap: Record<string, CompiledBindingToolkitExpression> = {};\n\tconst semanticObjectsList: string[] = [];\n\tconst semanticObjectsExpressionList: BindingToolkitExpression<string>[] = [];\n\tif (propertyWithSemanticObject !== undefined) {\n\t\tfor (const semanticObject of getSemanticObjects(propertyWithSemanticObject)) {\n\t\t\tconst semanticObjectExpression = getExpressionFromAnnotation(semanticObject);\n\t\t\tconst compiledSemanticObject = compileExpression(semanticObjectExpression);\n\t\t\t// this should not happen, but we make sure not to add twice the semanticObject otherwise the mdcLink crashes\n\t\t\tif (compiledSemanticObject && !semanticObjectsList.includes(compiledSemanticObject)) {\n\t\t\t\tqualifierMap[semanticObject.qualifier || \"\"] = compiledSemanticObject;\n\t\t\t\tsemanticObjectsList.push(compiledSemanticObject);\n\t\t\t\tsemanticObjectsExpressionList.push(semanticObjectExpression);\n\t\t\t}\n\t\t}\n\t}\n\treturn { semanticObjectsList, semanticObjectsExpressionList, qualifierMap };\n};\n\n/**\n * Determines if the current user can navigate to semantic objects based on the provided lists.\n * @param semanticObjectsCurrentUserCanNavigateTo The list of semantic objects the current user can navigate to.\n * @param semanticObjectList An object containing lists and maps of semantic objects.\n * @param semanticObjectList.semanticObjectsList The list of all semantic objects.\n * @param semanticObjectList.semanticObjectsExpressionList The list of expressions for semantic objects.\n * @param semanticObjectList.qualifierMap A map of qualifiers to compiled expressions.\n * @returns An object containing information about static and dynamic semantic objects.\n */\nexport const getReachableSemanticObjectsSettings = function (\n\tsemanticObjectsCurrentUserCanNavigateTo: string[],\n\tsemanticObjectList: {\n\t\tsemanticObjectsList: string[];\n\t\tsemanticObjectsExpressionList: BindingToolkitExpression<string>[];\n\t\tqualifierMap: Record<string, CompiledBindingToolkitExpression>;\n\t}\n): { hasReachableStaticSemanticObject: boolean; dynamicSemanticObjects: BindingToolkitExpression<string>[] } {\n\tconst dynamicSemanticObjectsList: BindingToolkitExpression<string>[] = [];\n\tlet result = false;\n\tif (semanticObjectsCurrentUserCanNavigateTo) {\n\t\tfor (const semanticObject of semanticObjectsCurrentUserCanNavigateTo) {\n\t\t\tfor (const actualSemanticObject of semanticObjectList.semanticObjectsList) {\n\t\t\t\tif (semanticObject === actualSemanticObject) {\n\t\t\t\t\tresult = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (result) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tsemanticObjectList.semanticObjectsExpressionList.forEach((semanticObjectExpression) => {\n\t\t\tif (semanticObjectExpression._type !== \"Constant\") {\n\t\t\t\tdynamicSemanticObjectsList.push(semanticObjectExpression);\n\t\t\t}\n\t\t});\n\t}\n\treturn { hasReachableStaticSemanticObject: result, dynamicSemanticObjects: dynamicSemanticObjectsList };\n};\n\n/**\n * Check the user rights to navigate to the semantic objects.\n * @param semanticObject The semantic object name\n * @param dataModelPath The DataModelObjectPath of the property\n * @param settings The TemplateProcessorSettings of the internal field\n * @returns An object containing semanticObjectList and qualifierMap\n */\nexport const manageSemanticObjectsForCurrentUser = function (\n\tsemanticObject: PropertyBindingInfo | undefined,\n\tdataModelPath: DataModelObjectPath<Property>,\n\tinternalDataModel: JSONModel\n): { hasReachableStaticSemanticObject: boolean; dynamicSemanticObjects: BindingToolkitExpression<string>[] } {\n\tconst property: Property = dataModelPath.targetObject!;\n\tconst semanticObjectsCurrentUserCanNavigateTo = internalDataModel?.getProperty(\"/semanticObjects\");\n\tconst propertySemanticObjectList = getSemanticObjectsAndQualifierMap(property);\n\n\t// semantic object is in navigation\n\tconst propertyWithSemanticObjectFromNavigation = getPropertyWithSemanticObject(dataModelPath);\n\tif (isNavigationProperty(propertyWithSemanticObjectFromNavigation)) {\n\t\tconst semanticObjectExpression = getExpressionFromAnnotation(\n\t\t\tpropertyWithSemanticObjectFromNavigation?.annotations?.Common?.SemanticObject\n\t\t);\n\t\tconst semanticObjectValue = compileExpression(semanticObjectExpression);\n\t\tpropertySemanticObjectList.semanticObjectsExpressionList.push(semanticObjectExpression);\n\t\tpropertySemanticObjectList.semanticObjectsList.push(semanticObjectValue as string);\n\t}\n\n\t// custom semanticObject from field property\n\n\tif (semanticObject !== undefined && semanticObject !== \"\") {\n\t\tif (semanticObject[0] === \"[\") {\n\t\t\tconst customSemanticObjects = JSON.parse(semanticObject);\n\t\t\tcustomSemanticObjects.forEach((internalSemanticObject: string) => {\n\t\t\t\tpropertySemanticObjectList.semanticObjectsList.push(internalSemanticObject);\n\t\t\t});\n\t\t} else {\n\t\t\tpropertySemanticObjectList.semanticObjectsList.push(semanticObject);\n\t\t\t// The semanticObject property of the field contains a formatter or a binding expression\n\t\t\tif (semanticObject.startsWith(\"{\") || semanticObject.startsWith(\"{=\")) {\n\t\t\t\tconst semanticObjectExpressionFromField = resolveBindingString(semanticObject) as BindingToolkitExpression<string>;\n\t\t\t\tpropertySemanticObjectList.semanticObjectsExpressionList.push(semanticObjectExpressionFromField);\n\t\t\t}\n\t\t}\n\t}\n\treturn getReachableSemanticObjectsSettings(semanticObjectsCurrentUserCanNavigateTo, propertySemanticObjectList);\n};\n"],"mappings":"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","ignoreList":[],"file":"SemanticObjectHelper-dbg.js"}