{"version":3,"names":["getCriticalityExpression","target","propertyDataModelPath","relativeLocations","getRelativePaths","undefined","annotationTarget","targetObject","Criticality","criticality","criticalityFormatters","getCriticality","constant","pathInModel","fullyQualifiedName","getCriticalityExpressionForCards","criticalityExpression","isInsightsCard","negativeCriticality","criticalCriticality","positiveCriticality","informationCriticality","ifElse","or","equal","_exports","criticalityExpressionForIntegrationCards","criticalityProperty","getExpressionFromAnnotation","compileExpression","criticalityIconExpressionForIntegrationCards","condition","CriticalityRepresentation","iconPath","buildExpressionForCriticalityColor","specificColorMap","virtualCriticalityExpression","Negative","Critical","Positive","Information","Neutral","buildExpressionForCriticalityIcon","buildExpressionForCriticalityButtonType","buildExpressionForCriticalityColorMicroChart","dataPoint","sColorExpression","buildExpressionForCriticality","criticalityMap","arguments","length","error","critical","good","neutral"],"sourceRoot":".","sources":["CriticalityFormatters.ts"],"sourcesContent":["import type { PropertyAnnotationValue } from \"@sap-ux/vocabularies-types\";\nimport type {\n\tDataField,\n\tDataFieldAbstractTypes,\n\tDataFieldForAction,\n\tDataPoint,\n\tDataPointType\n} from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport { CriticalityType } from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport type { BindingToolkitExpression } from \"sap/fe/base/BindingToolkit\";\nimport { compileExpression, constant, equal, getExpressionFromAnnotation, ifElse, or, pathInModel } from \"sap/fe/base/BindingToolkit\";\nimport criticalityFormatters from \"sap/fe/core/formatters/CriticalityFormatter\";\nimport { getRelativePaths, type DataModelObjectPath } from \"sap/fe/core/templating/DataModelPathHelper\";\n\nconst getCriticalityExpression = (\n\ttarget: DataFieldAbstractTypes | DataPointType | DataModelObjectPath<DataPointType | DataFieldAbstractTypes>,\n\tpropertyDataModelPath?: DataModelObjectPath<DataPointType | DataFieldAbstractTypes>\n): BindingToolkitExpression<unknown> => {\n\tconst relativeLocations = propertyDataModelPath ? getRelativePaths(propertyDataModelPath) : undefined;\n\tconst annotationTarget =\n\t\t(target as DataModelObjectPath<DataPointType | DataFieldAbstractTypes>).targetObject ??\n\t\t(target as DataPointType | DataFieldAbstractTypes);\n\tif (annotationTarget.Criticality) {\n\t\tconst criticality = criticalityFormatters.getCriticality(annotationTarget.Criticality);\n\t\tif (criticality) {\n\t\t\t// it's a constant so no need to use a virtual property\n\t\t\treturn constant(criticality);\n\t\t}\n\t\treturn pathInModel(`${annotationTarget.fullyQualifiedName}@$ui5.fe.virtual.criticality`, undefined, relativeLocations);\n\t}\n\treturn constant(undefined);\n};\n\nexport const getCriticalityExpressionForCards = (\n\tcriticalityExpression: BindingToolkitExpression<string | number>,\n\tisInsightsCard: boolean\n): BindingToolkitExpression<string> => {\n\tconst negativeCriticality = isInsightsCard ? constant(\"sap-icon://error\") : constant(\"attention\");\n\tconst criticalCriticality = isInsightsCard ? constant(\"sap-icon://warning\") : constant(\"warning\");\n\tconst positiveCriticality = isInsightsCard ? constant(\"sap-icon://status-positive\") : constant(\"good\");\n\tconst informationCriticality = isInsightsCard\n\t\t? ifElse(\n\t\t\t\tor(\n\t\t\t\t\tequal(criticalityExpression, constant(\"UI.CriticalityType/Information\")),\n\t\t\t\t\tequal(criticalityExpression as BindingToolkitExpression<number>, constant(5)),\n\t\t\t\t\tequal(criticalityExpression, constant(\"5\"))\n\t\t\t\t),\n\t\t\t\tconstant(\"sap-icon://information\"),\n\t\t\t\tconstant(\"\")\n\t\t  )\n\t\t: constant(\"default\");\n\treturn ifElse(\n\t\tor(\n\t\t\tequal(criticalityExpression, constant(\"UI.CriticalityType/Negative\")),\n\t\t\tequal(criticalityExpression as BindingToolkitExpression<number>, constant(1)),\n\t\t\tequal(criticalityExpression, constant(\"1\"))\n\t\t),\n\t\tnegativeCriticality,\n\t\tifElse(\n\t\t\tor(\n\t\t\t\tequal(criticalityExpression, constant(\"UI.CriticalityType/Critical\")),\n\t\t\t\tequal(criticalityExpression as BindingToolkitExpression<number>, constant(2)),\n\t\t\t\tequal(criticalityExpression, constant(\"2\"))\n\t\t\t),\n\t\t\tcriticalCriticality,\n\t\t\tifElse(\n\t\t\t\tor(\n\t\t\t\t\tequal(criticalityExpression, constant(\"UI.CriticalityType/Positive\")),\n\t\t\t\t\tequal(criticalityExpression as BindingToolkitExpression<number>, constant(3)),\n\t\t\t\t\tequal(criticalityExpression, constant(\"3\"))\n\t\t\t\t),\n\t\t\t\tpositiveCriticality,\n\t\t\t\tinformationCriticality\n\t\t\t)\n\t\t)\n\t);\n};\n\n/**\n * Builds an expression to determine the criticality status for integration cards.\n * Used when virtual properties cannot be applied.\n * @param criticalityProperty The criticality annotation value (string or number).\n * @returns An expression resolving to the criticality status for integration cards.\n */\nexport const criticalityExpressionForIntegrationCards = (\n\tcriticalityProperty: PropertyAnnotationValue<string | number> | undefined\n): string | undefined => {\n\tif (criticalityProperty) {\n\t\tconst criticalityExpression: BindingToolkitExpression<string | number> = getExpressionFromAnnotation(criticalityProperty);\n\t\treturn compileExpression(\n\t\t\tifElse(\n\t\t\t\tor(\n\t\t\t\t\tequal(criticalityExpression, constant(CriticalityType.Negative)),\n\t\t\t\t\tequal(criticalityExpression, constant(1)),\n\t\t\t\t\tequal(criticalityExpression, constant(\"1\"))\n\t\t\t\t),\n\t\t\t\tconstant(\"Error\"),\n\t\t\t\tifElse(\n\t\t\t\t\tor(\n\t\t\t\t\t\tequal(criticalityExpression, constant(CriticalityType.Critical)),\n\t\t\t\t\t\tequal(criticalityExpression, constant(2)),\n\t\t\t\t\t\tequal(criticalityExpression, constant(\"2\"))\n\t\t\t\t\t),\n\t\t\t\t\tconstant(\"Warning\"),\n\t\t\t\t\tifElse(\n\t\t\t\t\t\tor(\n\t\t\t\t\t\t\tequal(criticalityExpression, constant(CriticalityType.Positive)),\n\t\t\t\t\t\t\tequal(criticalityExpression, constant(3)),\n\t\t\t\t\t\t\tequal(criticalityExpression, constant(\"3\"))\n\t\t\t\t\t\t),\n\t\t\t\t\t\tconstant(\"Success\"),\n\t\t\t\t\t\tifElse(\n\t\t\t\t\t\t\tor(\n\t\t\t\t\t\t\t\tequal(criticalityExpression, constant(CriticalityType.Information)),\n\t\t\t\t\t\t\t\tequal(criticalityExpression, constant(5)),\n\t\t\t\t\t\t\t\tequal(criticalityExpression, constant(\"5\"))\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tconstant(\"Information\"),\n\t\t\t\t\t\t\tconstant(\"None\")\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\t}\n};\n\n/**\n * Builds an expression to determine the criticality icon for integration cards.\n * Used when virtual properties cannot be applied.\n * @param target The target object containing the criticality property.\n * @returns An expression resolving to the criticality icon for integration cards.\n */\nexport const criticalityIconExpressionForIntegrationCards = (\n\ttarget: DataPointType | DataModelObjectPath<DataPointType>\n): string | undefined => {\n\tconst criticalityProperty = (target as DataPointType)?.Criticality;\n\tconst criticalityExpression: BindingToolkitExpression<string> = getExpressionFromAnnotation(criticalityProperty);\n\tconst condition =\n\t\t(target as DataPointType).CriticalityRepresentation &&\n\t\t(target as DataPointType).CriticalityRepresentation === \"UI.CriticalityRepresentationType/WithoutIcon\";\n\tlet iconPath;\n\tif (!condition) {\n\t\tif (criticalityProperty) {\n\t\t\ticonPath = getCriticalityExpressionForCards(criticalityExpression, true);\n\t\t} else {\n\t\t\ticonPath = constant(\"\");\n\t\t}\n\t} else {\n\t\ticonPath = constant(\"\");\n\t}\n\treturn compileExpression(iconPath);\n};\n\n/**\n * Returns an expression to set button type based on Criticality\n * Supported Criticality: Positive, Negative, Critical, and Information leading to Success, Error, Warning, and None state respectively.\n * @param target A DataField, a DataPoint, or a DataModelObjectPath.\n * @param propertyDataModelPath DataModelObjectPath.\n * @returns An expression to deduce the state of an objectStatus.\n */\nexport const buildExpressionForCriticalityColor = (\n\ttarget: DataPointType | DataFieldAbstractTypes | DataModelObjectPath<DataPointType | DataFieldAbstractTypes>,\n\tpropertyDataModelPath?: DataModelObjectPath<DataPointType | DataFieldAbstractTypes>,\n\tspecificColorMap?: Record<string, string>\n): string | undefined => {\n\tconst virtualCriticalityExpression = getCriticalityExpression(target, propertyDataModelPath);\n\treturn compileExpression(\n\t\tifElse(\n\t\t\tequal(virtualCriticalityExpression, constant(CriticalityType.Negative)),\n\t\t\tconstant(specificColorMap?.Negative ?? \"Error\"),\n\t\t\tifElse(\n\t\t\t\tequal(virtualCriticalityExpression, constant(CriticalityType.Critical)),\n\t\t\t\tconstant(specificColorMap?.Critical ?? \"Warning\"),\n\t\t\t\tifElse(\n\t\t\t\t\tequal(virtualCriticalityExpression, constant(CriticalityType.Positive)),\n\t\t\t\t\tconstant(specificColorMap?.Positive ?? \"Success\"),\n\t\t\t\t\tifElse(\n\t\t\t\t\t\tequal(virtualCriticalityExpression, constant(CriticalityType.Information)),\n\t\t\t\t\t\tconstant(specificColorMap?.Information ?? \"Information\"),\n\t\t\t\t\t\tconstant(specificColorMap?.Neutral ?? \"None\")\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t)\n\t\t)\n\t);\n};\n\n/**\n * Returns an expression to set icon type based on Criticality\n * Supported Criticality: Positive, Negative, Critical and Information.\n * @param target A DataField a DataPoint or a DataModelObjectPath.\n * @param [propertyDataModelPath] DataModelObjectPath.\n * @returns An expression to deduce the icon of an objectStatus.\n */\nexport const buildExpressionForCriticalityIcon = (\n\ttarget: DataPointType | DataFieldAbstractTypes | DataModelObjectPath<DataPointType | DataFieldAbstractTypes>,\n\tpropertyDataModelPath?: DataModelObjectPath<DataPointType | DataFieldAbstractTypes>\n): string | undefined => {\n\tconst annotationTarget =\n\t\t(target as DataModelObjectPath<DataPointType>).targetObject ?? (target as DataPointType | DataFieldAbstractTypes);\n\tconst virtualCriticalityExpression = getCriticalityExpression(annotationTarget, propertyDataModelPath);\n\tconst condition = annotationTarget.CriticalityRepresentation === \"UI.CriticalityRepresentationType/WithoutIcon\";\n\tlet iconPath;\n\tif (!condition) {\n\t\ticonPath = ifElse(\n\t\t\tequal(virtualCriticalityExpression, constant(CriticalityType.Negative)),\n\t\t\tconstant(\"sap-icon://error\"),\n\t\t\tifElse(\n\t\t\t\tequal(virtualCriticalityExpression, constant(CriticalityType.Critical)),\n\t\t\t\tconstant(\"sap-icon://warning\"),\n\t\t\t\tifElse(\n\t\t\t\t\tequal(virtualCriticalityExpression, constant(CriticalityType.Positive)),\n\t\t\t\t\tconstant(\"sap-icon://status-positive\"),\n\t\t\t\t\tifElse(\n\t\t\t\t\t\tequal(virtualCriticalityExpression, constant(CriticalityType.Information)),\n\t\t\t\t\t\tconstant(\"sap-icon://information\"),\n\t\t\t\t\t\tconstant(\"\")\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\t} else {\n\t\ticonPath = constant(\"\");\n\t}\n\treturn compileExpression(iconPath);\n};\n\n/**\n * Returns an expression to set button type based on Criticality\n * Supported Criticality: Positive and Negative leading to Accept and Reject button type respectively.\n * @param annotationTarget A DataField, DataPoint, DataModelObjectPath.\n * @returns An expression to deduce button type.\n */\nexport const buildExpressionForCriticalityButtonType = (\n\tannotationTarget: DataModelObjectPath<DataPointType | DataFieldForAction>\n): string | undefined => {\n\tconst virtualCriticalityExpression = getCriticalityExpression(annotationTarget);\n\treturn compileExpression(\n\t\tifElse(\n\t\t\tequal(virtualCriticalityExpression, constant(undefined)),\n\t\t\tconstant(\"Ghost\"),\n\t\t\tifElse(\n\t\t\t\tequal(virtualCriticalityExpression, constant(CriticalityType.Negative)),\n\t\t\t\tconstant(\"Reject\"),\n\t\t\t\tifElse(equal(virtualCriticalityExpression, constant(CriticalityType.Positive)), constant(\"Accept\"), constant(\"Default\"))\n\t\t\t)\n\t\t)\n\t);\n};\n\n/**\n * Returns an expression to set color in MicroCharts based on Criticality\n * Supported Criticality: Positive, Negative and Critical leading to Good, Error and Critical color respectively.\n * @param dataPoint A DataField, DataPoint, DataModelObjectPath\n * @returns An expression to deduce colors in Microcharts\n */\nexport const buildExpressionForCriticalityColorMicroChart = (dataPoint: DataPoint | DataModelObjectPath<DataPoint>): string | undefined => {\n\tconst annotationTarget = (dataPoint as DataModelObjectPath<DataPoint>)?.targetObject ?? (dataPoint as DataPoint);\n\tconst sColorExpression = buildExpressionForCriticality(annotationTarget);\n\treturn compileExpression(sColorExpression);\n};\n\n/**\n * Generates an expression to set color based on Criticality.\n * @param annotationTarget A DataField, DataPoint\n * @param criticalityMap Criticality Mapper\n * @returns An expression to deduce colors in datapoints\n */\nexport const buildExpressionForCriticality = (\n\tannotationTarget: DataField | DataPoint | DataFieldAbstractTypes,\n\tcriticalityMap = {\n\t\terror: \"Error\",\n\t\tcritical: \"Critical\",\n\t\tgood: \"Good\",\n\t\tneutral: \"Neutral\"\n\t}\n): BindingToolkitExpression<string> => {\n\tconst virtualCriticalityExpression = getCriticalityExpression(annotationTarget);\n\treturn ifElse(\n\t\tequal(virtualCriticalityExpression, constant(CriticalityType.Negative)),\n\t\tconstant(criticalityMap.error),\n\t\tifElse(\n\t\t\tequal(virtualCriticalityExpression, constant(CriticalityType.Critical)),\n\t\t\tconstant(criticalityMap.critical),\n\t\t\tifElse(\n\t\t\t\tequal(virtualCriticalityExpression, constant(CriticalityType.Positive)),\n\t\t\t\tconstant(criticalityMap.good),\n\t\t\t\tconstant(criticalityMap.neutral)\n\t\t\t)\n\t\t)\n\t);\n};\n"],"mappings":"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","ignoreList":[],"file":"CriticalityFormatters-dbg.js"}