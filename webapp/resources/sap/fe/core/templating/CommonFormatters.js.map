{"version":3,"file":"CommonFormatters.js","names":["getExpressionBinding","expression","compileExpression","_exports","getBindingWithTextArrangement","propertyDataModelPath","propertyBindingExpression","fieldFormatOptions","customFormatter","targetDisplayModeOverride","displayMode","outExpression","propertyDefinition","isPropertyPathExpression","targetObject","$target","targetDisplayMode","UIFormatters","getDisplayMode","commonText","annotations","Common","Text","relativeLocation","getRelativePaths","formatter","valueFormatters","formatWithBrackets","formatWithTypeInformation","getExpressionFromAnnotation","formatResult","getBindingWithText","targetDataModelPath","isPathAnnotationExpression","enhanceDataModelPath","path","pathInModel","getContextRelativeTargetObjectPath","textArrangementBinding","UI","isReferencePropertyStaticallyHidden","DataFieldDefault","undefined"],"sources":["./CommonFormatters.ts"],"sourcesContent":["import type { PathAnnotationExpression, Property } from \"@sap-ux/vocabularies-types\";\nimport type { BindingToolkitExpression, CompiledBindingToolkitExpression } from \"sap/fe/base/BindingToolkit\";\nimport {\n\tcompileExpression,\n\tformatResult,\n\tformatWithTypeInformation,\n\tgetExpressionFromAnnotation,\n\tpathInModel\n} from \"sap/fe/base/BindingToolkit\";\nimport valueFormatters from \"sap/fe/core/formatters/ValueFormatter\";\nimport { isPathAnnotationExpression, isPropertyPathExpression } from \"sap/fe/core/helpers/TypeGuards\";\nimport type { DataModelObjectPath } from \"sap/fe/core/templating/DataModelPathHelper\";\nimport { enhanceDataModelPath, getContextRelativeTargetObjectPath, getRelativePaths } from \"sap/fe/core/templating/DataModelPathHelper\";\nimport type * as DisplayModeFormatter from \"sap/fe/core/templating/DisplayModeFormatter\";\nimport * as UIFormatters from \"sap/fe/core/templating/UIFormatters\";\nimport { isReferencePropertyStaticallyHidden } from \"../converters/helpers/DataFieldHelper\";\nexport type DisplayMode = DisplayModeFormatter.DisplayMode;\n\n// Import-export methods related to the common annotations used by the converter to use them in the templating through the Common Formatters.\n\n/**\n * Retrieves the expressionBinding created out of a binding expression.\n * @param expression The expression which needs to be compiled\n * @returns The expression-binding string\n */\nexport const getExpressionBinding = function (expression: BindingToolkitExpression<unknown>): CompiledBindingToolkitExpression {\n\treturn compileExpression(expression);\n};\nexport const getBindingWithTextArrangement = function (\n\tpropertyDataModelPath: DataModelObjectPath<Property>,\n\tpropertyBindingExpression: BindingToolkitExpression<string>,\n\tfieldFormatOptions?: { displayMode?: DisplayMode },\n\tcustomFormatter?: string\n): BindingToolkitExpression<string> {\n\tconst targetDisplayModeOverride = fieldFormatOptions?.displayMode;\n\tlet outExpression = propertyBindingExpression;\n\tconst propertyDefinition = isPropertyPathExpression(propertyDataModelPath.targetObject)\n\t\t? (propertyDataModelPath.targetObject.$target as Property)\n\t\t: (propertyDataModelPath.targetObject as Property);\n\tconst targetDisplayMode = targetDisplayModeOverride || UIFormatters.getDisplayMode(propertyDataModelPath);\n\tconst commonText = propertyDefinition?.annotations?.Common?.Text;\n\tconst relativeLocation = getRelativePaths(propertyDataModelPath);\n\tconst formatter = customFormatter || valueFormatters.formatWithBrackets;\n\tpropertyBindingExpression = propertyDefinition && formatWithTypeInformation(propertyDefinition, propertyBindingExpression);\n\tif (targetDisplayMode !== \"Value\" && commonText) {\n\t\tswitch (targetDisplayMode) {\n\t\t\tcase \"Description\":\n\t\t\t\toutExpression = getExpressionFromAnnotation(commonText, relativeLocation);\n\t\t\t\tbreak;\n\t\t\tcase \"DescriptionValue\":\n\t\t\t\toutExpression = formatResult(\n\t\t\t\t\t[getExpressionFromAnnotation(commonText, relativeLocation), propertyBindingExpression],\n\t\t\t\t\tformatter\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase \"ValueDescription\":\n\t\t\t\toutExpression = formatResult(\n\t\t\t\t\t[propertyBindingExpression, getExpressionFromAnnotation(commonText, relativeLocation)],\n\t\t\t\t\tformatter\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\treturn outExpression;\n};\nexport const getBindingWithText = function (\n\ttargetDataModelPath: DataModelObjectPath<Property | PathAnnotationExpression<Property>>,\n\tcustomFormatter?: string\n): CompiledBindingToolkitExpression {\n\tlet propertyDataModelPath: DataModelObjectPath<Property>;\n\tif (isPathAnnotationExpression<Property>(targetDataModelPath?.targetObject)) {\n\t\tpropertyDataModelPath = enhanceDataModelPath<Property>(targetDataModelPath, targetDataModelPath.targetObject?.path);\n\t} else {\n\t\tpropertyDataModelPath = targetDataModelPath as DataModelObjectPath<Property>;\n\t}\n\tconst propertyDefinition = propertyDataModelPath.targetObject as Property;\n\n\tlet propertyBindingExpression = pathInModel(\n\t\tgetContextRelativeTargetObjectPath(propertyDataModelPath)\n\t) as BindingToolkitExpression<string>;\n\n\tpropertyBindingExpression = formatWithTypeInformation(propertyDefinition, propertyBindingExpression, true);\n\tconst textArrangementBinding = getBindingWithTextArrangement(propertyDataModelPath, propertyBindingExpression, {}, customFormatter);\n\treturn ((propertyDefinition.annotations.UI &&\n\t\t!isReferencePropertyStaticallyHidden(propertyDefinition.annotations.UI.DataFieldDefault) &&\n\t\tcompileExpression(textArrangementBinding)) ||\n\t\tundefined) as CompiledBindingToolkitExpression;\n};\n"],"mappings":";;;;unBAyBO,MAAMA,EAAuB,SAAUC,GAC7C,OAAOC,EAAkBD,EAC1B,EAAEE,EAAAH,uBACK,MAAMI,EAAgC,SAC5CC,EACAC,EACAC,EACAC,GAEA,MAAMC,EAA4BF,GAAoBG,YACtD,IAAIC,EAAgBL,EACpB,MAAMM,EAAqBC,EAAyBR,EAAsBS,cACtET,EAAsBS,aAAaC,QACnCV,EAAsBS,aAC1B,MAAME,EAAoBP,GAA6BQ,EAAaC,eAAeb,GACnF,MAAMc,EAAaP,GAAoBQ,aAAaC,QAAQC,KAC5D,MAAMC,EAAmBC,EAAiBnB,GAC1C,MAAMoB,EAAYjB,GAAmBkB,EAAgBC,mBACrDrB,EAA4BM,GAAsBgB,EAA0BhB,EAAoBN,GAChG,GAAIU,IAAsB,SAAWG,EAAY,CAChD,OAAQH,GACP,IAAK,cACJL,EAAgBkB,EAA4BV,EAAYI,GACxD,MACD,IAAK,mBACJZ,EAAgBmB,EACf,CAACD,EAA4BV,EAAYI,GAAmBjB,GAC5DmB,GAED,MACD,IAAK,mBACJd,EAAgBmB,EACf,CAACxB,EAA2BuB,EAA4BV,EAAYI,IACpEE,GAED,MAEH,CACA,OAAOd,CACR,EAAER,EAAAC,gCACK,MAAM2B,EAAqB,SACjCC,EACAxB,GAEA,IAAIH,EACJ,GAAI4B,EAAqCD,GAAqBlB,cAAe,CAC5ET,EAAwB6B,EAA+BF,EAAqBA,EAAoBlB,cAAcqB,KAC/G,KAAO,CACN9B,EAAwB2B,CACzB,CACA,MAAMpB,EAAqBP,EAAsBS,aAEjD,IAAIR,EAA4B8B,EAC/BC,EAAmChC,IAGpCC,EAA4BsB,EAA0BhB,EAAoBN,EAA2B,MACrG,MAAMgC,EAAyBlC,EAA8BC,EAAuBC,EAA2B,CAAC,EAAGE,GACnH,OAASI,EAAmBQ,YAAYmB,KACtCC,EAAoC5B,EAAmBQ,YAAYmB,GAAGE,mBACvEvC,EAAkBoC,IAClBI,SACF,EAAEvC,EAAA4B,qBAAA,OAAA5B,CAAA","ignoreList":[]}