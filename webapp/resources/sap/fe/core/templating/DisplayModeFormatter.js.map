{"version":3,"file":"DisplayModeFormatter.js","names":["ODATA_TYPE_MAPPING","_exports","getDisplayMode","oPropertyPath","oDataModelObjectPath","oProperty","isPathAnnotationExpression","isPropertyPathExpression","$target","oEntityType","targetEntityType","oTextAnnotation","annotations","Common","Text","oTextArrangementAnnotation","UI","TextArrangement","toString","sDisplayValue"],"sources":["./DisplayModeFormatter.ts"],"sourcesContent":["/**\n * Separating these methods from the UIFormatters as they are used also in the converter.\n * These methods must NOT use any dependency from the SAP UI5 runtime.\n * When consumed outside of converters, you should call them via UIFormatters.\n */\n\nimport type { PathAnnotationExpression, Property } from \"@sap-ux/vocabularies-types\";\nimport type { AnnotationPath } from \"@sap-ux/vocabularies-types/Edm\";\nimport type { DataFieldAbstractTypes, DataPointTypeTypes } from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport { isPathAnnotationExpression, isPropertyPathExpression } from \"sap/fe/core/helpers/TypeGuards\";\nimport type { DataModelObjectPath } from \"sap/fe/core/templating/DataModelPathHelper\";\n\nexport type PropertyOrPath<P> = string | P | PathAnnotationExpression<P> | AnnotationPath<P>;\n\nexport const ODATA_TYPE_MAPPING: Record<string, string> = {\n\t\"sap.ui.model.odata.type.Boolean\": \"Edm.Boolean\",\n\t\"sap.ui.model.odata.type.Byte\": \"Edm.Byte\",\n\t\"sap.ui.model.odata.type.Date\": \"Edm.Date\",\n\t\"sap.ui.model.odata.type.DateTimeOffset\": \"Edm.DateTimeOffset\",\n\t\"sap.ui.model.odata.type.Decimal\": \"Edm.Decimal\",\n\t\"sap.ui.model.odata.type.Double\": \"Edm.Double\",\n\t\"sap.ui.model.odata.type.Guid\": \"Edm.Guid\",\n\t\"sap.ui.model.odata.type.Int16\": \"Edm.Int16\",\n\t\"sap.ui.model.odata.type.Int32\": \"Edm.Int32\",\n\t\"sap.ui.model.odata.type.Int64\": \"Edm.Int64\",\n\t\"sap.ui.model.odata.type.SByte\": \"Edm.SByte\",\n\t\"sap.ui.model.odata.type.Single\": \"Edm.Single\",\n\t\"sap.ui.model.odata.type.Stream\": \"Edm.Stream\",\n\t\"sap.ui.model.odata.type.TimeOfDay\": \"Edm.TimeOfDay\",\n\t\"sap.ui.model.odata.type.String\": \"Edm.String\"\n};\n\nexport type DisplayMode = \"Value\" | \"Description\" | \"DescriptionValue\" | \"ValueDescription\";\nexport const getDisplayMode = function (\n\toPropertyPath: PropertyOrPath<Property | DataFieldAbstractTypes | DataPointTypeTypes> | undefined,\n\toDataModelObjectPath?: DataModelObjectPath<Property | DataFieldAbstractTypes | DataPointTypeTypes>\n): DisplayMode {\n\tif (!oPropertyPath || typeof oPropertyPath === \"string\") {\n\t\treturn \"Value\";\n\t}\n\tconst oProperty =\n\t\t((isPathAnnotationExpression(oPropertyPath) || isPropertyPathExpression(oPropertyPath)) && oPropertyPath.$target) ||\n\t\t(oPropertyPath as Property);\n\tconst oEntityType = oDataModelObjectPath && oDataModelObjectPath.targetEntityType;\n\tconst oTextAnnotation = oProperty.annotations?.Common?.Text;\n\tconst oTextArrangementAnnotation =\n\t\t(typeof oTextAnnotation !== \"string\" && oTextAnnotation?.annotations?.UI?.TextArrangement?.toString()) ||\n\t\toEntityType?.annotations?.UI?.TextArrangement?.toString();\n\n\tlet sDisplayValue = oTextAnnotation ? \"DescriptionValue\" : \"Value\";\n\tif ((oTextAnnotation && oTextArrangementAnnotation) || oEntityType?.annotations?.UI?.TextArrangement?.toString()) {\n\t\tif (oTextArrangementAnnotation === \"UI.TextArrangementType/TextOnly\") {\n\t\t\tsDisplayValue = \"Description\";\n\t\t} else if (oTextArrangementAnnotation === \"UI.TextArrangementType/TextLast\") {\n\t\t\tsDisplayValue = \"ValueDescription\";\n\t\t} else if (oTextArrangementAnnotation === \"UI.TextArrangementType/TextSeparate\") {\n\t\t\tsDisplayValue = \"Value\";\n\t\t} else {\n\t\t\t//Default should be TextFirst if there is a Text annotation and neither TextOnly nor TextLast are set\n\t\t\tsDisplayValue = \"DescriptionValue\";\n\t\t}\n\t}\n\treturn sDisplayValue as DisplayMode;\n};\n"],"mappings":";;;;uJAcO,MAAMA,EAA6C,CACzD,kCAAmC,cACnC,+BAAgC,WAChC,+BAAgC,WAChC,yCAA0C,qBAC1C,kCAAmC,cACnC,iCAAkC,aAClC,+BAAgC,WAChC,gCAAiC,YACjC,gCAAiC,YACjC,gCAAiC,YACjC,gCAAiC,YACjC,iCAAkC,aAClC,iCAAkC,aAClC,oCAAqC,gBACrC,iCAAkC,cACjCC,EAAAD,qBAGK,MAAME,EAAiB,SAC7BC,EACAC,GAEA,IAAKD,UAAwBA,IAAkB,SAAU,CACxD,MAAO,OACR,CACA,MAAME,GACHC,EAA2BH,IAAkBI,EAAyBJ,KAAmBA,EAAcK,SACxGL,EACF,MAAMM,EAAcL,GAAwBA,EAAqBM,iBACjE,MAAMC,EAAkBN,EAAUO,aAAaC,QAAQC,KACvD,MAAMC,SACGJ,IAAoB,UAAYA,GAAiBC,aAAaI,IAAIC,iBAAiBC,YAC3FT,GAAaG,aAAaI,IAAIC,iBAAiBC,WAEhD,IAAIC,EAAgBR,EAAkB,mBAAqB,QAC3D,GAAKA,GAAmBI,GAA+BN,GAAaG,aAAaI,IAAIC,iBAAiBC,WAAY,CACjH,GAAIH,IAA+B,kCAAmC,CACrEI,EAAgB,aACjB,MAAO,GAAIJ,IAA+B,kCAAmC,CAC5EI,EAAgB,kBACjB,MAAO,GAAIJ,IAA+B,sCAAuC,CAChFI,EAAgB,OACjB,KAAO,CAENA,EAAgB,kBACjB,CACD,CACA,OAAOA,CACR,EAAElB,EAAAC,iBAAA,OAAAD,CAAA","ignoreList":[]}