{"version":3,"file":"TraceInfo.js","names":["aTraceInfo","traceNamespace","xmlns","traceIsOn","location","search","includes","aNamespaces","oCallbacks","fnClone","oObject","JSON","parse","stringify","async","collectContextInfo","sValue","oContexts","oVisitor","oNode","aContexts","aPromises","BindingInfo","e","Array","isArray","filter","oContext","path","parts","forEach","aParts","oPartContext","oModel","model","sSimplePath","oRealContext","aInnerParts","split","getContext","visitorResult","getResult","push","then","oResult","getModel","getMetadata","getName","getPath","data","catch","bindingFor","exc","Promise","all","fillAttributes","oResults","oAttributes","sName","result","originalValue","resolvedValue","error","stack","toString","collectInfo","i","attributes","length","oAttribute","nodeName","getAttribute","properties","contexts","resolve","sControlName","bIsControl","test","oTraceMetadataContext","isError","control","namespaceURI","metaDataContexts","firstChild","ownerDocument","children","find","node","startsWith","setAttributeNS","bRelevant","Object","keys","assign","viewInfo","getViewInfo","macroInfo","getSettings","traceID","visitAttributes","visitChildNodes","exception","XMLSerializer","serializeToString","Log","message","namespace","XMLPreprocessor","plugIn","bind","traceMacroCalls","oMetadata","mContexts","aMetadataContextKeys","metadataContexts","aProperties","macro","name","sKey","oMetaDataContext","oProperty","this","getObject","parentMacroID","macroID","contextPath","getTraceInfo","id","aErrors","traceInfo","isTraceInfoActive"],"sources":["./TraceInfo.ts"],"sourcesContent":["import Log from \"sap/base/Log\";\nimport type {\n\tIVisitorCallback,\n\tTransformedBuildingBlockMetadata\n} from \"sap/fe/core/buildingBlocks/templating/BuildingBlockTemplateProcessor\";\nimport BindingInfo from \"sap/ui/base/BindingInfo\";\nimport XMLPreprocessor from \"sap/ui/core/util/XMLPreprocessor\";\nimport type Context from \"sap/ui/model/Context\";\n//Trace information\nconst aTraceInfo: TraceMetadataContext[] = [\n\t/* Structure for a macro\n\t\t\t{\n\t\t\t\tmacro: '', //name of macro\n\t\t\t\tmetaDataContexts: [ //Properties of type sap.ui.model.Context\n\t\t\t\t\t{\n\t\t\t\t\t\tname: '', //context property name / key\n\t\t\t\t\t\tpath: '', //from oContext.getPath()\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\tproperties: { // Other properties which become part of {this>}\n\t\t\t\t\tproperty1: value,\n\t\t\t\t\tproperty2: value\n\t\t\t\t}\n\t\t\t\tviewInfo: {\n\t\t\t\t\tviewInfo: {} // As specified in view or fragment creation\n\t\t\t\t},\n\t\t\t\ttraceID: this.index, //ID for this trace information,\n\t\t\t\tmacroInfo: {\n\t\t\t\t\tmacroID: index, // traceID of this macro (redundant for macros)\n\t\t\t\t\tparentMacroID, index // traceID of the parent macro (if it has a parent)\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Structure for a control\n\t\t\t{\n\t\t\t\tcontrol: '', //control class\n\t\t\t\tproperties: { // Other properties which become part of {this>}\n\t\t\t\t\tproperty1: {\n\t\t\t\t\t\toriginalValue: '', //Value before templating\n\t\t\t\t\t\tresolvedValue: '' //Value after templating\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcontexts: { //Models and Contexts used during templating\n\t\t\t\t\t// Model or context name used for this control\n\t\t\t\t\tmodelName1: { // For ODataMetaModel\n\t\t\t\t\t\tpath1: {\n\t\t\t\t\t\t\tpath: '', //absolut path within metamodel\n\t\t\t\t\t\t\tdata: '', //data of path unless type Object\n\t\t\t\t\t\t}\n\t\t\t\t\tmodelName2: {\n\t\t\t\t\t\t// for other model types\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tproperty1: value,\n\t\t\t\t\t\t\tproperty2: value\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// In case binding cannot be resolved -> mark as runtime binding\n\t\t\t\t\t\t// This is not always true, e.g. in case the path is metamodelpath\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"bindingFor\": \"Runtime\"\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tviewInfo: {\n\t\t\t\t\tviewInfo: {} // As specified in view or fragment creation\n\t\t\t\t},\n\t\t\t\tmacroInfo: {\n\t\t\t\t\tmacroID: index, // traceID of the macro that created this control\n\t\t\t\t\tparentMacroID, index // traceID of the macro's parent macro\n\t\t\t\t},\n\t\t\t\ttraceID: this.index //ID for this trace information\n\t\t\t}\n\t\t\t*/\n];\nconst traceNamespace = \"http://schemas.sap.com/sapui5/extension/sap.fe.info/1\",\n\txmlns = \"http://www.w3.org/2000/xmlns/\",\n\t/**\n\t * Switch is currently based on url parameter\n\t */\n\ttraceIsOn = location.search.includes(\"sap-ui-xx-feTraceInfo=true\"),\n\t/**\n\t * Specify all namespaces that shall be traced during templating\n\t */\n\taNamespaces = [\n\t\t\"sap.m\",\n\t\t\"sap.uxap\",\n\t\t\"sap.ui.unified\",\n\t\t\"sap.f\",\n\t\t\"sap.ui.table\",\n\t\t\"sap.suite.ui.microchart\",\n\t\t\"sap.ui.layout.form\",\n\t\t\"sap.ui.mdc\",\n\t\t\"sap.ui.mdc.link\",\n\t\t\"sap.ui.mdc.field\",\n\t\t\"sap.fe.fpm\"\n\t],\n\toCallbacks: Record<string, unknown> = {};\n\nfunction fnClone(oObject: object): unknown {\n\treturn JSON.parse(JSON.stringify(oObject));\n}\ntype TraceContext = {\n\tpath: string;\n\tmodel: string;\n\tparts: TraceContext[];\n};\nasync function collectContextInfo(\n\tsValue: string | null,\n\toContexts: Record<string, TraceContext>,\n\toVisitor: IVisitorCallback,\n\toNode: Element\n): Promise<unknown[]> {\n\tlet aContexts: TraceContext[];\n\tconst aPromises: Promise<unknown>[] = [];\n\ttry {\n\t\taContexts = BindingInfo.parse(sValue) || [];\n\t} catch (e) {\n\t\taContexts = [];\n\t}\n\taContexts = Array.isArray(aContexts) ? aContexts : [aContexts];\n\taContexts\n\t\t.filter(function (oContext) {\n\t\t\treturn oContext.path || oContext.parts;\n\t\t})\n\t\t.forEach(function (oContext: TraceContext) {\n\t\t\tconst aParts = oContext.parts || [oContext];\n\t\t\taParts\n\t\t\t\t.filter(function (oPartContext: TraceContext) {\n\t\t\t\t\treturn oPartContext.path;\n\t\t\t\t})\n\t\t\t\t.forEach(function (oPartContext: TraceContext) {\n\t\t\t\t\tconst oModel: Record<string, unknown> = (oContexts[oPartContext.model] = oContexts[oPartContext.model] || {});\n\t\t\t\t\tconst sSimplePath = !oPartContext.path.includes(\">\")\n\t\t\t\t\t\t? (oPartContext.model && `${oPartContext.model}>`) + oPartContext.path\n\t\t\t\t\t\t: oPartContext.path;\n\t\t\t\t\tlet oRealContext: Context | undefined;\n\t\t\t\t\tlet aInnerParts;\n\n\t\t\t\t\tif (typeof oPartContext.model === \"undefined\" && sSimplePath.includes(\">\")) {\n\t\t\t\t\t\taInnerParts = sSimplePath.split(\">\");\n\t\t\t\t\t\toPartContext.model = aInnerParts[0];\n\t\t\t\t\t\toPartContext.path = aInnerParts[1];\n\t\t\t\t\t}\n\t\t\t\t\ttry {\n\t\t\t\t\t\toRealContext = oVisitor.getContext(sSimplePath);\n\n\t\t\t\t\t\tconst visitorResult = oVisitor.getResult(`{${sSimplePath}}`, oNode)!;\n\t\t\t\t\t\taPromises.push(\n\t\t\t\t\t\t\tvisitorResult\n\t\t\t\t\t\t\t\t.then(function (oResult: Context) {\n\t\t\t\t\t\t\t\t\tif (oRealContext?.getModel().getMetadata().getName() === \"sap.ui.model.json.JSONModel\") {\n\t\t\t\t\t\t\t\t\t\tif (!oResult.getModel()) {\n\t\t\t\t\t\t\t\t\t\t\toModel[oPartContext.path] = oResult;\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\toModel[oPartContext.path] = `Context from ${oResult.getPath()}`;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\toModel[oPartContext.path] = {\n\t\t\t\t\t\t\t\t\t\t\tpath: oRealContext!.getPath(),\n\t\t\t\t\t\t\t\t\t\t\tdata: typeof oResult === \"object\" ? \"[ctrl/cmd-click] on path to see data\" : oResult\n\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t.catch(function () {\n\t\t\t\t\t\t\t\t\toModel[oPartContext.path] = {\n\t\t\t\t\t\t\t\t\t\tbindingFor: \"Runtime\"\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t);\n\t\t\t\t\t} catch (exc) {\n\t\t\t\t\t\toModel[oPartContext.path] = {\n\t\t\t\t\t\t\tbindingFor: \"Runtime\"\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t});\n\treturn Promise.all(aPromises);\n}\nasync function fillAttributes(\n\toResults: Promise<unknown>,\n\toAttributes: Record<string, unknown>,\n\tsName: string,\n\tsValue: unknown\n): Promise<void> {\n\treturn oResults\n\t\t.then(function (result: unknown) {\n\t\t\toAttributes[sName] =\n\t\t\t\tsValue !== result\n\t\t\t\t\t? {\n\t\t\t\t\t\t\toriginalValue: sValue,\n\t\t\t\t\t\t\tresolvedValue: result\n\t\t\t\t\t  }\n\t\t\t\t\t: sValue;\n\t\t\treturn;\n\t\t})\n\t\t.catch(function (e: unknown) {\n\t\t\tconst error = e as Error;\n\t\t\toAttributes[sName] = {\n\t\t\t\toriginalValue: sValue,\n\t\t\t\terror: (error.stack && error.stack.toString()) || e\n\t\t\t};\n\t\t});\n}\nasync function collectInfo(oNode: Element, oVisitor: IVisitorCallback): Promise<{ properties: {}; contexts: {} }> {\n\tconst oAttributes = {};\n\tconst aPromises = [];\n\tconst oContexts = {};\n\tlet oResults;\n\tfor (let i = oNode.attributes.length >>> 0; i--; ) {\n\t\tconst oAttribute = oNode.attributes[i],\n\t\t\tsName = oAttribute.nodeName,\n\t\t\tsValue = oNode.getAttribute(sName)!;\n\t\tif (![\"core:require\"].includes(sName)) {\n\t\t\taPromises.push(collectContextInfo(sValue, oContexts, oVisitor, oNode));\n\t\t\toResults = oVisitor.getResult(sValue, oNode);\n\t\t\tif (oResults) {\n\t\t\t\taPromises.push(fillAttributes(oResults, oAttributes, sName, sValue));\n\t\t\t} else {\n\t\t\t\t//What\n\t\t\t}\n\t\t}\n\t}\n\treturn Promise.all(aPromises).then(function () {\n\t\treturn { properties: oAttributes, contexts: oContexts };\n\t});\n}\nexport type TraceMetadataContext = {\n\tisError: boolean;\n\tmacro?: string;\n\tcontrol?: string;\n\tname?: string;\n\tcontextPath?: string;\n\tviewInfo?: unknown;\n\tmacroInfo?: MacroInfo;\n\ttraceID?: number;\n\terror?: {\n\t\texception: Error;\n\t\tnode: string;\n\t};\n\tmetaDataContexts: { name: string; path: string }[];\n\tproperties: Record<string, unknown>;\n};\nasync function resolve(oNode: Element, oVisitor: IVisitorCallback): Promise<void> {\n\ttry {\n\t\tconst sControlName = oNode.nodeName.split(\":\")[1] || oNode.nodeName,\n\t\t\tbIsControl = /^[A-Z]/.test(sControlName),\n\t\t\toTraceMetadataContext: TraceMetadataContext = {\n\t\t\t\tisError: false,\n\t\t\t\tcontrol: `${oNode.namespaceURI}.${oNode.nodeName.split(\":\")[1] || oNode.nodeName}`,\n\t\t\t\tmetaDataContexts: [],\n\t\t\t\tproperties: {}\n\t\t\t};\n\n\t\tif (bIsControl) {\n\t\t\tconst firstChild = [...(oNode.ownerDocument.children as unknown as Element[])].find((node) => !node.nodeName.startsWith(\"#\"));\n\t\t\tif (firstChild && !firstChild.getAttribute(\"xmlns:trace\")) {\n\t\t\t\tfirstChild.setAttributeNS(xmlns, \"xmlns:trace\", traceNamespace);\n\t\t\t\tfirstChild.setAttributeNS(traceNamespace, \"trace:is\", \"on\");\n\t\t\t}\n\t\t\treturn await collectInfo(oNode, oVisitor)\n\t\t\t\t.then(async function (result: { properties: {}; contexts: {} }): Promise<void> {\n\t\t\t\t\tconst bRelevant = Object.keys(result.contexts).length > 0; //If no context was used it is not relevant so we ignore Object.keys(result.properties).length\n\t\t\t\t\tif (bRelevant) {\n\t\t\t\t\t\tObject.assign(oTraceMetadataContext, result);\n\t\t\t\t\t\toTraceMetadataContext.viewInfo = oVisitor.getViewInfo();\n\t\t\t\t\t\toTraceMetadataContext.macroInfo = oVisitor.getSettings()[\"_macroInfo\"];\n\t\t\t\t\t\toTraceMetadataContext.traceID = aTraceInfo.length;\n\t\t\t\t\t\toNode.setAttributeNS(traceNamespace, \"trace:traceID\", oTraceMetadataContext.traceID.toString());\n\t\t\t\t\t\taTraceInfo.push(oTraceMetadataContext);\n\t\t\t\t\t}\n\t\t\t\t\treturn oVisitor.visitAttributes(oNode);\n\t\t\t\t})\n\t\t\t\t.then(async function () {\n\t\t\t\t\treturn oVisitor.visitChildNodes(oNode);\n\t\t\t\t})\n\t\t\t\t.catch(function (exc: unknown) {\n\t\t\t\t\toTraceMetadataContext.error = {\n\t\t\t\t\t\texception: exc as Error,\n\t\t\t\t\t\tnode: new XMLSerializer().serializeToString(oNode)\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t} else {\n\t\t\tawait oVisitor.visitAttributes(oNode);\n\t\t\tawait oVisitor.visitChildNodes(oNode);\n\t\t}\n\t} catch (exc: unknown) {\n\t\tLog.error(`Error while tracing '${oNode?.nodeName}': ${(exc as Error).message}`, \"TraceInfo\");\n\t\treturn oVisitor.visitAttributes(oNode).then(async function () {\n\t\t\treturn oVisitor.visitChildNodes(oNode);\n\t\t});\n\t}\n}\n/**\n * Register path-through XMLPreprocessor plugin for all namespaces\n * given above in aNamespaces\n */\nif (traceIsOn) {\n\taNamespaces.forEach(function (namespace: string) {\n\t\toCallbacks[namespace] = XMLPreprocessor.plugIn(resolve.bind(namespace), namespace);\n\t});\n}\n\n/**\n * Adds information about the processing of one macro to the collection.\n * @param sName Macro class name\n * @param oMetadata Definition from macro\n * @param mContexts Available named contexts\n * @param oNode\n * @param oVisitor\n * @returns The traced metadata context\n */\nexport type MacroInfo = {\n\tparentMacroID: string;\n\tmacroID: string;\n};\nfunction traceMacroCalls(\n\tsName: string,\n\toMetadata: TransformedBuildingBlockMetadata,\n\tmContexts: Record<string, Context>,\n\toNode: Element,\n\toVisitor: IVisitorCallback\n): TraceMetadataContext {\n\ttry {\n\t\tlet aMetadataContextKeys = (oMetadata.metadataContexts && Object.keys(oMetadata.metadataContexts)) || [];\n\t\tconst aProperties = (oMetadata.properties && Object.keys(oMetadata.properties)) || [];\n\t\tconst macroInfo: MacroInfo = fnClone(oVisitor.getSettings()[\"_macroInfo\"] || {}) as MacroInfo;\n\t\tconst oTraceMetadataContext: TraceMetadataContext = {\n\t\t\tisError: false,\n\t\t\tmacro: sName,\n\t\t\tmetaDataContexts: [],\n\t\t\tproperties: {}\n\t\t};\n\n\t\tif (aMetadataContextKeys.length === 0) {\n\t\t\t//In case the macro has no metadata.js we take all metadataContexts except this\n\t\t\taMetadataContextKeys = Object.keys(mContexts).filter(function (name: string) {\n\t\t\t\treturn name !== \"this\";\n\t\t\t});\n\t\t}\n\n\t\tif (!oNode.getAttribute(\"xmlns:trace\")) {\n\t\t\toNode.setAttributeNS(xmlns, \"xmlns:trace\", traceNamespace);\n\t\t}\n\n\t\tif (aMetadataContextKeys.length > 0) {\n\t\t\taMetadataContextKeys.forEach(function (sKey: string) {\n\t\t\t\tconst oContext = mContexts[sKey],\n\t\t\t\t\toMetaDataContext = oContext && {\n\t\t\t\t\t\tname: sKey,\n\t\t\t\t\t\tpath: oContext.getPath()\n\t\t\t\t\t\t//data: JSON.stringify(oContext.getObject(),null,2)\n\t\t\t\t\t};\n\n\t\t\t\tif (oMetaDataContext) {\n\t\t\t\t\toTraceMetadataContext.metaDataContexts.push(oMetaDataContext);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\taProperties.forEach(function (sKey: string) {\n\t\t\t\tconst oProperty = mContexts.this.getObject(sKey);\n\n\t\t\t\tif (oProperty) {\n\t\t\t\t\toTraceMetadataContext.properties[sKey] = oProperty;\n\t\t\t\t}\n\t\t\t});\n\t\t\toTraceMetadataContext.viewInfo = oVisitor.getViewInfo();\n\t\t\toTraceMetadataContext.traceID = aTraceInfo.length;\n\t\t\tmacroInfo.parentMacroID = macroInfo.macroID;\n\t\t\tmacroInfo.macroID = oTraceMetadataContext.traceID.toString();\n\t\t\toTraceMetadataContext.macroInfo = macroInfo;\n\t\t\toNode.setAttributeNS(traceNamespace, \"trace:macroID\", oTraceMetadataContext.traceID.toString());\n\t\t\taTraceInfo.push(oTraceMetadataContext);\n\t\t}\n\t\treturn oTraceMetadataContext;\n\t} catch (exc) {\n\t\treturn {\n\t\t\tisError: true,\n\t\t\terror: {\n\t\t\t\texception: exc as Error,\n\t\t\t\tnode: new XMLSerializer().serializeToString(oNode)\n\t\t\t},\n\t\t\tname: sName,\n\t\t\tcontextPath: oVisitor?.getContext()?.getPath(),\n\t\t\tmetaDataContexts: [],\n\t\t\tproperties: {}\n\t\t};\n\t}\n}\n/**\n * Returns the globally stored trace information for the macro or\n * control marked with the given id.\n *\n * Returns all trace information if no id is specified\n *\n *\n * <pre>Structure for a macro\n * {\n * macro: '', //name of macro\n * metaDataContexts: [ //Properties of type sap.ui.model.Context\n * {\n * name: '', //context property name / key\n * path: '', //from oContext.getPath()\n * }\n * ],\n * properties: { // Other properties which become part of {this>}\n * property1: value,\n * property2: value\n * }\n * viewInfo: {\n * viewInfo: {} // As specified in view or fragment creation\n * },\n * traceID: this.index, //ID for this trace information,\n * macroInfo: {\n * macroID: index, // traceID of this macro (redundant for macros)\n * parentMacroID, index // traceID of the parent macro (if it has a parent)\n * }\n * }\n * Structure for a control\n * {\n * control: '', //control class\n * properties: { // Other properties which become part of {this>}\n * property1: {\n * originalValue: '', //Value before templating\n * resolvedValue: '' //Value after templating\n * }\n * }\n * contexts: { //Models and Contexts used during templating\n * // Model or context name used for this control\n * modelName1: { // For ODataMetaModel\n * path1: {\n * path: '', //absolut path within metamodel\n * data: '', //data of path unless type Object\n * }\n * modelName2: {\n * // for other model types\n * {\n * property1: value,\n * property2: value\n * }\n * // In case binding cannot be resolved -> mark as runtime binding\n * // This is not always true, e.g. in case the path is metamodelpath\n * {\n * \"bindingFor\": \"Runtime\"\n * }\n * }\n * },\n * viewInfo: {\n * viewInfo: {} // As specified in view or fragment creation\n * },\n * macroInfo: {\n * macroID: index, // traceID of the macro that created this control\n * parentMacroID, index // traceID of the macro's parent macro\n * },\n * traceID: this.index //ID for this trace information\n * }</pre>.\n * @param id TraceInfo id\n * @returns Object / Array for TraceInfo\n */\nfunction getTraceInfo(id: number): TraceMetadataContext | TraceMetadataContext[] {\n\tif (id) {\n\t\treturn aTraceInfo[id];\n\t}\n\tconst aErrors = aTraceInfo.filter(function (traceInfo: TraceMetadataContext) {\n\t\treturn traceInfo.error;\n\t});\n\treturn (aErrors.length > 0 && aErrors) || aTraceInfo;\n}\n/**\n * Returns true if TraceInfo is active.\n * @returns `true` when active\n */\nfunction isTraceInfoActive(): boolean {\n\treturn traceIsOn;\n}\n/**\n * @typedef sap.fe.macros.TraceInfo\n * TraceInfo for SAP Fiori elements\n *\n * Once traces is switched, information about macros and controls\n * that are processed during xml preprocessing ( @see {@link sap.ui.core.util.XMLPreprocessor})\n * will be collected within this singleton\n * @namespace\n * @global\n * @since 1.74.0\n */\nexport default {\n\tisTraceInfoActive: isTraceInfoActive,\n\ttraceMacroCalls: traceMacroCalls,\n\tgetTraceInfo: getTraceInfo\n};\n"],"mappings":"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","ignoreList":[]}