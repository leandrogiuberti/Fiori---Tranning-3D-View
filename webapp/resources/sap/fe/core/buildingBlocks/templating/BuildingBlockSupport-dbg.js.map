{"version":3,"names":["blockAttribute","attributeDefinition","target","propertyKey","propertyDescriptor","metadata","ensureMetadata","constructor","defaultValue","initializer","properties","toString","undefined","_exports","blockEvent","type","isPublic","blockAggregation","aggregationDefinition","aggregations","isDefault","defaultAggregation","Object","getOwnPropertyNames","includes","merge","namespace","name","stereotype","defineBuildingBlock","buildingBlockDefinition","classDefinition","publicNamespace","xmlTag","fragment","designtime","isOpen","libraries","convertBuildingBlockMetadata","baseMetadata","controllerExtensions","associations","references","methods","events","interfaces","bbDefaultAggregation","currentProperty","isAssociation","underlyingType","multiple","aggregationKey","buildingBlockMetadata"],"sourceRoot":".","sources":["BuildingBlockSupport.ts"],"sourcesContent":["import merge from \"sap/base/util/merge\";\nimport type { UI5AggregationMetadata, UI5ControlMetadataDefinition } from \"sap/fe/base/ClassSupport\";\nimport type BuildingBlockTemplatingBase from \"sap/fe/core/buildingBlocks/templating/BuildingBlockTemplatingBase\";\nimport type Context from \"sap/ui/model/Context\";\n\nexport type ObjectValue2 = string | boolean | number | Context | undefined | object | null;\ntype ObjectValue3<T> = T | Record<string, T> | T[];\nexport type ObjectValue = ObjectValue3<ObjectValue2 | Record<string, ObjectValue2> | ObjectValue2[]>;\n\n/**\n * Type for the accessor decorator that we end up with in babel.\n */\ntype AccessorDescriptor<T> = TypedPropertyDescriptor<T> & { initializer?: () => T };\ntype BaseBuildingBlockPropertyDefinition = {\n\ttype: string;\n\tunderlyingType?: string;\n\tdefaultClass?: Function;\n\tisPublic?: boolean;\n\t/** Make sure to type the optionality of your TypeScript property correctly */\n\trequired?: boolean;\n\t/** This property is only considered for runtime building blocks */\n\tbindable?: boolean;\n\t/** Function that allows to validate or transform the given input */\n\tvalidate?: Function;\n\t/** Define the allowed values in the metadata */\n\tallowedValues?: string[];\n\t/** Whether this should point to an association */\n\tisAssociation?: boolean;\n};\nexport type BuildingBlockMetadataContextDefinition = BaseBuildingBlockPropertyDefinition & {\n\ttype: \"sap.ui.model.Context\";\n\texpectedTypes: string[];\n\t// For documentation only\n\texpectedAnnotations: string[];\n\t// Enforces the type\n\texpectedAnnotationTypes: string[];\n};\n/**\n * Available properties to define a building block property\n */\nexport type BuildingBlockPropertyDefinition = BaseBuildingBlockPropertyDefinition | BuildingBlockMetadataContextDefinition;\n\n/**\n * Available properties to define a building block aggregation\n */\nexport type BuildingBlockAggregationDefinition = {\n\tisPublic?: boolean;\n\ttype: string;\n\taltTypes?: string[];\n\tslot?: string;\n\tisDefault?: boolean;\n\tmultiple?: boolean;\n\tskipKey?: boolean;\n\n\t/** Defines whether the element is based on an actual node that will be rendered or only on XML that will be interpreted */\n\thasVirtualNode?: boolean;\n\tprocessAggregations?: Function;\n};\n\n/**\n * Available properties to define a building block class\n */\nexport type BuildingBlockDefinition = {\n\tname: string;\n\tnamespace?: string;\n\tpublicNamespace?: string;\n\txmlTag?: string;\n\tfragment?: string;\n\tdesigntime?: string;\n\tisOpen?: boolean;\n\treturnTypes?: string[];\n\tlibraries?: string[];\n} & ({ namespace: string } | { publicNamespace: string });\n\n/**\n * Metadata attached to each building block class\n */\nexport type BuildingBlockMetadata = BuildingBlockDefinition & {\n\tproperties: Record<string, BuildingBlockPropertyDefinition & { defaultValue?: unknown }>;\n\taggregations: Record<string, BuildingBlockAggregationDefinition>;\n\tstereotype: string;\n\tdefaultAggregation?: string;\n\tlibraries?: string[];\n};\n\n/**\n * Indicates that you must declare the property to be used as an XML attribute that can be used from outside the building block.\n *\n * When you define a runtime building block, ensure that you use the correct type: Depending on its metadata,\n * a property can either be a {@link sap.ui.model.Context} (<code>type: 'sap.ui.model.Context'</code>),\n * a constant (<code>bindable: false</code>), or a {@link BindingToolkitExpression} (<code>bindable: true</code>).\n *\n * Use this decorator only for properties that are to be set from outside or are used in inner XML templating.\n * If you just need simple computed properties, use undecorated, private TypeScript properties.\n * @param attributeDefinition\n * @returns The decorated property\n */\nexport function blockAttribute(attributeDefinition: BuildingBlockPropertyDefinition): PropertyDecorator {\n\treturn function (target: BuildingBlockTemplatingBase, propertyKey: string | Symbol, propertyDescriptor: AccessorDescriptor<unknown>) {\n\t\tconst metadata = ensureMetadata(target.constructor);\n\t\t// If there is no defaultValue we can take the value from the initializer (natural way of defining defaults)\n\t\t(attributeDefinition as { defaultValue?: unknown }).defaultValue = propertyDescriptor.initializer?.();\n\t\tdelete propertyDescriptor.initializer;\n\t\tif (\n\t\t\tmetadata.properties[propertyKey.toString()] === undefined ||\n\t\t\tmetadata.properties[propertyKey.toString()] !== attributeDefinition\n\t\t) {\n\t\t\tmetadata.properties[propertyKey.toString()] = attributeDefinition;\n\t\t}\n\n\t\treturn propertyDescriptor;\n\t} as unknown as PropertyDecorator; // Needed to make TS happy with those decorators;\n}\n\n/**\n * Decorator for building blocks.\n *\n * This is an alias for @blockAttribute({ type: \"function\" }).\n * @returns The decorated property\n */\nexport function blockEvent(): PropertyDecorator {\n\treturn blockAttribute({ type: \"function\", isPublic: true });\n}\n\n/**\n * Indicates that the property shall be declared as an xml aggregation that can be used from the outside of the building block.\n * @param aggregationDefinition\n * @returns The decorated property\n */\nexport function blockAggregation(aggregationDefinition: BuildingBlockAggregationDefinition): PropertyDecorator {\n\treturn function (target: BuildingBlockTemplatingBase, propertyKey: string, propertyDescriptor: AccessorDescriptor<unknown>) {\n\t\tconst metadata = ensureMetadata(target.constructor);\n\t\tdelete propertyDescriptor.initializer;\n\t\tif (metadata.aggregations[propertyKey] === undefined || metadata.aggregations[propertyKey] !== aggregationDefinition) {\n\t\t\tmetadata.aggregations[propertyKey] = aggregationDefinition;\n\t\t}\n\t\tif (aggregationDefinition.isDefault === true) {\n\t\t\tmetadata.defaultAggregation = propertyKey;\n\t\t}\n\n\t\treturn propertyDescriptor;\n\t} as unknown as PropertyDecorator;\n}\n\n/**\n * Ensure to create the relevant metadata for the Building block.\n * @param target The building block definition\n * @returns The metadata of the building block\n */\nfunction ensureMetadata(target: Partial<typeof BuildingBlockTemplatingBase>): BuildingBlockMetadata {\n\tif (!Object.getOwnPropertyNames(target).includes(\"metadata\") || target.metadata === undefined) {\n\t\ttarget.metadata = merge(\n\t\t\t{\n\t\t\t\tnamespace: \"\",\n\t\t\t\tname: \"\",\n\t\t\t\tproperties: {},\n\t\t\t\taggregations: {},\n\t\t\t\tstereotype: \"xmlmacro\"\n\t\t\t},\n\t\t\ttarget.metadata ?? {}\n\t\t) as BuildingBlockMetadata;\n\t}\n\treturn target.metadata;\n}\n\nexport function defineBuildingBlock(buildingBlockDefinition: BuildingBlockDefinition): ClassDecorator {\n\treturn function (classDefinition: Partial<typeof BuildingBlockTemplatingBase>) {\n\t\tconst metadata = ensureMetadata(classDefinition);\n\t\tmetadata.namespace = buildingBlockDefinition.namespace;\n\t\tmetadata.publicNamespace = buildingBlockDefinition.publicNamespace;\n\t\tmetadata.name = buildingBlockDefinition.name;\n\t\tmetadata.xmlTag = buildingBlockDefinition.xmlTag;\n\t\tmetadata.fragment = buildingBlockDefinition.fragment;\n\t\tmetadata.designtime = buildingBlockDefinition.designtime;\n\t\tmetadata.isOpen = buildingBlockDefinition.isOpen;\n\t\tmetadata.libraries = buildingBlockDefinition.libraries;\n\t};\n}\n\n/**\n * Convert an existing building block metadata into a ui5 control metadata.\n * @param buildingBlockDefinition\n * @returns The equivalent ui5 control metadata\n */\nexport function convertBuildingBlockMetadata(buildingBlockDefinition: typeof BuildingBlockTemplatingBase): UI5ControlMetadataDefinition {\n\tconst baseMetadata: UI5ControlMetadataDefinition = {\n\t\tcontrollerExtensions: {},\n\t\tproperties: {},\n\t\taggregations: {},\n\t\tassociations: {},\n\t\treferences: {},\n\t\tmethods: {},\n\t\tevents: {},\n\t\tinterfaces: []\n\t};\n\tconst metadata = ensureMetadata(buildingBlockDefinition);\n\tlet bbDefaultAggregation = metadata.defaultAggregation;\n\tfor (const propertyKey in metadata.properties) {\n\t\tconst currentProperty = { ...metadata.properties[propertyKey] };\n\t\tif (propertyKey === \"visible\") {\n\t\t\tcurrentProperty.defaultValue = true;\n\t\t}\n\t\tif (currentProperty.type === \"function\") {\n\t\t\tbaseMetadata.events[propertyKey] = {};\n\t\t} else if (currentProperty.isAssociation === true) {\n\t\t\tbaseMetadata.associations[propertyKey] = { type: \"sap.ui.core.Control\" };\n\t\t} else if (currentProperty.type === \"object\") {\n\t\t\tcurrentProperty.type = currentProperty.underlyingType ?? \"sap.fe.macros.controls.BuildingBlockObjectProperty\";\n\t\t\t(currentProperty as UI5AggregationMetadata).multiple = false;\n\t\t\tbaseMetadata.aggregations[propertyKey] = currentProperty;\n\t\t\tbbDefaultAggregation ??= propertyKey;\n\t\t} else if (currentProperty.type === \"array\") {\n\t\t\tcurrentProperty.type = currentProperty.underlyingType ?? \"sap.fe.macros.controls.BuildingBlockObjectProperty\";\n\t\t\t(currentProperty as UI5AggregationMetadata).multiple = true;\n\t\t\tbaseMetadata.aggregations[propertyKey] = currentProperty;\n\t\t\tbbDefaultAggregation ??= propertyKey;\n\t\t} else {\n\t\t\tif (currentProperty.type === \"sap.ui.model.Context\") {\n\t\t\t\tcurrentProperty.type = \"string\";\n\t\t\t}\n\t\t\tbaseMetadata.properties[propertyKey] = { ...currentProperty };\n\t\t}\n\t}\n\tfor (const aggregationKey in metadata.aggregations) {\n\t\tbaseMetadata.aggregations[aggregationKey] = metadata.aggregations[aggregationKey];\n\t}\n\tbaseMetadata.defaultAggregation = bbDefaultAggregation;\n\tbaseMetadata.buildingBlockMetadata = metadata;\n\treturn baseMetadata;\n}\n"],"mappings":"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","ignoreList":[],"file":"BuildingBlockSupport-dbg.js"}