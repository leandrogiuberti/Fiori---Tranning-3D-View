{"version":3,"file":"AnyElement.js","names":["AnyElement","Element","extend","metadata","properties","anyText","updateProperty","sName","this","setAnyText","getBindingInfo","binding","getExternalValue"],"sources":["./AnyElement.ts"],"sourcesContent":["import type { PropertyBindingInfo } from \"sap/ui/base/ManagedObject\";\nimport Element from \"sap/ui/core/Element\";\n\nexport type AnyElementType = Element & {\n\tnew (props: { anyText?: PropertyBindingInfo }): AnyElementType;\n\tmBindingInfos: object;\n\tgetAnyText(): string;\n\tsetAnyText(value: unknown): void;\n\tgetBindingInfo(property: string): object;\n\textend(sName: string, sExtension: string): AnyElementType;\n};\n\n/**\n * A custom element to evaluate the value of Binding.\n * @hideconstructor\n */\nconst AnyElement = Element.extend(\"sap.fe.core.controls.AnyElement\", {\n\tmetadata: {\n\t\tproperties: {\n\t\t\tanyText: \"string\"\n\t\t}\n\t},\n\tupdateProperty: function (this: AnyElementType, sName: string) {\n\t\t// Avoid Promise processing in Element and set Promise as value directly\n\t\tif (sName === \"anyText\") {\n\t\t\tthis.setAnyText(this.getBindingInfo(sName).binding.getExternalValue());\n\t\t}\n\t}\n});\n\nexport default AnyElement as unknown as AnyElementType;\n"],"mappings":";;;;+DAgBA,MAAMA,EAAaC,EAAQC,OAAO,kCAAmC,CACpEC,SAAU,CACTC,WAAY,CACXC,QAAS,WAGXC,eAAgB,SAAgCC,GAE/C,GAAIA,IAAU,UAAW,CACxBC,KAAKC,WAAWD,KAAKE,eAAeH,GAAOI,QAAQC,mBACpD,CACD,IACE,OAEYZ,CAAU","ignoreList":[]}