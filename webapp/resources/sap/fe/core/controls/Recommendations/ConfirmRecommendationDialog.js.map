{"version":3,"file":"ConfirmRecommendationDialog.js","names":["ProgrammingModel","FELibrary","RecommendationDialogDecision","_exports","ConfirmRecommendationDialog","_dec","defineUI5Class","_dec2","defineReference","_class","_class2","_ManagedObject","props","_this","call","this","_initializerDefineProperty","_descriptor","view","programmingModel","confirmRecommendationDialogResourceModel","getResourceModel","_inheritsLoose","_proto","prototype","getOpenRecommendations","visibleContextPaths","getVisiblePageContextPaths","openRecommendations","getOpenRecommendationsForVisibleContextPaths","recommendations","length","forEach","recommendation","primaryContext","context","fallbackContext","getBindingContext","propertyPath","isEmpty","ctx","path","value","getProperty","undefined","push","visiblePageContextPaths","getPath","controller","getController","fclController","getAppComponent","getRootViewController","isFclEnabled","_isFclEnabled","isFullScreen","getHelper","getCurrentUIState","rightMostContext","getRightmostContext","includes","contextPaths","localAnnotationModel","getModel","getLocalAnnotationModel","contextPath","localAnnotationObject","getObject","annotationObject","fetchLocalAnnotationObject","recommendationObject","currentKey","currentValue","keys","MetaModelConverter","getInvolvedDataModelObjectEntityKeys","contextIdentifier","getOpenRecommendationsForContext","contextData","recommendationContext","contextKey","arguments","currentValueIsContext","isA","split","openRecommendation","contextIdentifierText","description","text","Array","isArray","open","async","isSave","standardRecommendationHelper","addContextIdentifierText","recommendationData","acceptAllParams","onBeforeAcceptRecommendations","legacyRecommendationsExist","checkIfRecommendationsExist","fetchAcceptAllParams","acceptModel","getAcceptAllModel","setModel","getData","items","Skipped","dialog","getContent","setEscapeHandler","onContinueEditing","bind","addDependent","Promise","resolve","reject","promiseResolve","promiseReject","close","confirmRecommendationDialog","current","destroy","onAcceptAndSave","isAccepted","acceptRecommendations","Accept","Log","error","onIgnoreAndSave","rejectedRecommendations","processedContextPaths","Set","has","_processRecommendationContext","ignoreRecommendationForContexts","Reject","rejectedContextData","_filterRecommendationKeys","_clearRecommendationProperties","setProperty","add","key","Object","Continue","getFieldName","targetPath","involvedDataModelObject","getInvolvedDataModelObjectsForTargetPath","getMetaModel","targetObject","annotations","Common","Label","toString","getText","displayMode","valueFormatters","formatWithBrackets","getButton","type","pressHandler","_jsx","Button","width","press","children","layoutData","_Fragment","FlexItemData","minWidth","getFooter","Toolbar","content","_jsxs","ToolbarSpacer","_getDialogButtonText","save","recommendationDialogDecision","isAcceptButton","isCreateMode","JSONModel","entityNameLabel","getEntityName","identifierTexts","getDisplayModeForTargetPath","listData","fieldName","valueOf","fieldValue","setData","getGroup","getMessage","acceptAllData","messageText","Text","getDialogContent","List","model","sorter","Sorter","CustomListItem","HBox","class","Dialog","title","state","ValueState","Information","ref","resizable","contentWidth","footer","ManagedObject","_applyDecoratedDescriptor","configurable","enumerable","writable","initializer"],"sources":["./ConfirmRecommendationDialog.tsx"],"sourcesContent":["import type { Property } from \"@sap-ux/vocabularies-types\";\nimport Log from \"sap/base/Log\";\nimport type { PropertiesOf } from \"sap/fe/base/ClassSupport\";\nimport { defineReference, defineUI5Class } from \"sap/fe/base/ClassSupport\";\nimport type { Ref } from \"sap/fe/base/jsx-runtime/jsx\";\nimport * as MetaModelConverter from \"sap/fe/core/converters/MetaModelConverter\";\nimport { getResourceModel } from \"sap/fe/core/helpers/ResourceModelHelper\";\nimport FELibrary from \"sap/fe/core/library\";\nimport Button from \"sap/m/Button\";\nimport CustomListItem from \"sap/m/CustomListItem\";\nimport Dialog from \"sap/m/Dialog\";\nimport FlexItemData from \"sap/m/FlexItemData\";\nimport HBox from \"sap/m/HBox\";\nimport List from \"sap/m/List\";\nimport Text from \"sap/m/Text\";\nimport Toolbar from \"sap/m/Toolbar\";\nimport ToolbarSpacer from \"sap/m/ToolbarSpacer\";\nimport ManagedObject from \"sap/ui/base/ManagedObject\";\nimport type UI5Element from \"sap/ui/core/Element\";\nimport { ValueState } from \"sap/ui/core/library\";\nimport type View from \"sap/ui/core/mvc/View\";\nimport type Context from \"sap/ui/model/Context\";\nimport Sorter from \"sap/ui/model/Sorter\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\nimport type { default as ODataV4Context } from \"sap/ui/model/odata/v4/Context\";\nimport type ODataMetaModel from \"sap/ui/model/odata/v4/ODataMetaModel\";\nimport type ODataModel from \"sap/ui/model/odata/v4/ODataModel\";\nimport type { EventHandler } from \"types/extension_types\";\nimport type BaseController from \"../../BaseController\";\nimport type PageController from \"../../PageController\";\nimport type ResourceModel from \"../../ResourceModel\";\nimport type { AcceptAllParams, RecommendationData } from \"../../controllerextensions/Recommendations\";\nimport valueFormatters from \"../../formatters/ValueFormatter\";\nimport type { RecommendationContextsInfo } from \"../../helpers/StandardRecommendationHelper\";\nimport { standardRecommendationHelper, type StandardRecommendationDataType } from \"../../helpers/StandardRecommendationHelper\";\nimport type FclController from \"../../rootView/Fcl.controller\";\n\nconst ProgrammingModel = FELibrary.ProgrammingModel;\ntype ProgrammingModelType = (typeof ProgrammingModel)[keyof typeof ProgrammingModel];\n\nexport enum RecommendationDialogDecision {\n\tAccept = \"Accept_Recommendations\",\n\tReject = \"Reject_Recommendations\",\n\tContinue = \"Continue_Editing\",\n\tSkipped = \"Skipped\"\n}\n\n@defineUI5Class(\"sap.fe.core.controls.Recommendations.ConfirmRecommendationDialog\")\nexport class ConfirmRecommendationDialog extends ManagedObject {\n\tconstructor(props: PropertiesOf<ConfirmRecommendationDialog>) {\n\t\tsuper(props);\n\t\tthis.view = props.view as View;\n\t\tthis.programmingModel = props.programmingModel;\n\t\tthis.confirmRecommendationDialogResourceModel = getResourceModel(this.view);\n\t}\n\n\t@defineReference()\n\tconfirmRecommendationDialog!: Ref<Dialog>;\n\n\tpublic view!: View;\n\n\tpublic programmingModel!: ProgrammingModelType;\n\n\tprivate confirmRecommendationDialogResourceModel!: ResourceModel;\n\n\tprotected key!: string;\n\n\tprivate isSave!: boolean;\n\n\tprivate acceptAllParams!: AcceptAllParams;\n\n\t/**\n\t * Resolves the promise with the selected dialog list option\n\t */\n\tprivate promiseResolve!: Function;\n\n\t/**\n\t * Rejects the promise of open dialog\n\t */\n\tpublic promiseReject!: Function;\n\n\t/**\n\t *\n\t * @returns Recommendation Data\n\t */\n\n\tpublic getOpenRecommendations(): RecommendationData[] {\n\t\tconst visibleContextPaths = this.getVisiblePageContextPaths();\n\t\tconst openRecommendations = this.getOpenRecommendationsForVisibleContextPaths(visibleContextPaths);\n\t\tconst recommendations: RecommendationData[] = [];\n\n\t\tif (openRecommendations.length > 0) {\n\t\t\topenRecommendations.forEach((recommendation) => {\n\t\t\t\tconst primaryContext = recommendation.context;\n\t\t\t\tconst fallbackContext = this.view.getBindingContext();\n\t\t\t\tconst propertyPath = recommendation.propertyPath ?? \"\";\n\n\t\t\t\tconst isEmpty = (ctx: Context | undefined | null, path: string): boolean => {\n\t\t\t\t\tconst value = ctx?.getProperty(path);\n\t\t\t\t\treturn value === null || value === undefined || value === \"\";\n\t\t\t\t};\n\n\t\t\t\t// push recommendation if property is empty in both contexts\n\t\t\t\tif (isEmpty(primaryContext, propertyPath) && isEmpty(fallbackContext, propertyPath)) {\n\t\t\t\t\trecommendations.push(recommendation);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn recommendations;\n\t}\n\n\t/**\n\t *\n\t * @returns Collection of context paths\n\t */\n\n\tpublic getVisiblePageContextPaths(): (string | undefined)[] {\n\t\tconst visiblePageContextPaths = [this.view.getBindingContext()?.getPath()];\n\t\tconst controller = this.view.getController() as BaseController;\n\t\tconst fclController = controller.getAppComponent().getRootViewController() as FclController;\n\t\tconst isFclEnabled = controller.getAppComponent()._isFclEnabled();\n\t\tconst isFullScreen = isFclEnabled ? fclController.getHelper().getCurrentUIState().isFullScreen : true;\n\t\tif (isFclEnabled && !isFullScreen) {\n\t\t\tconst rightMostContext = fclController.getRightmostContext();\n\t\t\tif (!visiblePageContextPaths.includes(rightMostContext?.getPath())) {\n\t\t\t\tvisiblePageContextPaths.push(rightMostContext?.getPath());\n\t\t\t}\n\t\t}\n\t\treturn visiblePageContextPaths;\n\t}\n\n\t/**\n\t *\n\t * @param contextPaths Paths of the contexts\n\t * @returns RecommendationData for visible contexts\n\t */\n\tpublic getOpenRecommendationsForVisibleContextPaths(contextPaths: (string | undefined)[]): RecommendationData[] {\n\t\tconst openRecommendations: RecommendationData[] = [];\n\t\tif (contextPaths.length > 0) {\n\t\t\tconst localAnnotationModel = (this.view.getModel() as ODataModel).getLocalAnnotationModel();\n\t\t\t// check context paths in local annotation models which match to\n\t\t\t// 1. current page and\n\t\t\t// 2. immediate children of the current page\n\t\t\t// Need to consider also immediate children\n\t\t\t// iterate over all keys\n\t\t\tcontextPaths.forEach((contextPath) => {\n\t\t\t\tif (contextPath !== undefined) {\n\t\t\t\t\tconst localAnnotationObject = localAnnotationModel.getObject(contextPath);\n\t\t\t\t\tif (localAnnotationObject) {\n\t\t\t\t\t\tconst annotationObject = localAnnotationObject;\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * The local annotation object will be of the following structure :\n\t\t\t\t\t\t * {\n\t\t\t\t\t\t * \"PropertyName@$ui5.fe.recommendations.placeholderDescription\": Value\n\t\t\t\t\t\t * \"PropertyName@$ui5.fe.recommendations.placeholderValue\": Value\n\t\t\t\t\t\t * \"PropertyName@$ui5.fe.recommendations.typeAheadValues\": Value\n\t\t\t\t\t\t * PropertyName: {\n\t\t\t\t\t\t * \t\t\"PropertyName@$ui5.fe.recommendations.placeholderDescription\": Value\n\t\t\t\t\t\t * \t\t\"PropertyName@$ui5.fe.recommendations.placeholderValue\": Value\n\t\t\t\t\t\t * \t\t\"PropertyName@$ui5.fe.recommendations.typeAheadValues\": Value\n\t\t\t\t\t\t * \t\trecommendationContext:{ context }\n\t\t\t\t\t\t * \t }\n\t\t\t\t\t\t * recommendationContext:{ context }\n\t\t\t\t\t\t * }\n\t\t\t\t\t\t *\n\t\t\t\t\t\t * so in order to get the recommendations as per each context - for parent/child entities we need to iterate over each keys recursively in the fetchLocalAnnotationObject function,\n\t\t\t\t\t\t * form the corresponding structure and then send it for getting the recommendations accordingly.\n\t\t\t\t\t\t */\n\t\t\t\t\t\tthis.fetchLocalAnnotationObject(annotationObject, openRecommendations);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn openRecommendations;\n\t}\n\n\t/**\n\t *\n\t * @param annotationObject\n\t * @param openRecommendations Recommendation Data\n\t */\n\n\tprivate fetchLocalAnnotationObject(annotationObject: Record<string, unknown>, openRecommendations: RecommendationData[]): void {\n\t\tif (annotationObject[\"recommendationContext\"]) {\n\t\t\tconst recommendationObject: Record<string, unknown> = {};\n\t\t\trecommendationObject[\"recommendationContext\"] = annotationObject[\"recommendationContext\"] as ODataV4Context;\n\t\t\tfor (const currentKey in annotationObject) {\n\t\t\t\tconst currentValue = annotationObject[currentKey];\n\t\t\t\tif (currentValue) {\n\t\t\t\t\tif ((currentValue as Record<string, ODataV4Context>)[\"recommendationContext\"]) {\n\t\t\t\t\t\tthis.fetchLocalAnnotationObject(annotationObject[currentKey] as Record<string, unknown>, openRecommendations);\n\t\t\t\t\t} else if (\n\t\t\t\t\t\tcurrentKey.includes(\"@$ui5.fe.recommendations.placeholderValue\") ||\n\t\t\t\t\t\tcurrentKey.includes(\"@$ui5.fe.recommendations.placeholderDescription\") ||\n\t\t\t\t\t\tcurrentKey.includes(\"@$ui5.fe.recommendations.typeAheadValues\")\n\t\t\t\t\t) {\n\t\t\t\t\t\trecommendationObject[currentKey] = currentValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst keys = MetaModelConverter.getInvolvedDataModelObjectEntityKeys(\n\t\t\t\trecommendationObject[\"recommendationContext\"] as ODataV4Context\n\t\t\t);\n\t\t\t(recommendationObject[\"recommendationContext\"] as RecommendationContextsInfo).contextIdentifier = keys[\"semanticKeys\"]\n\t\t\t\t? keys[\"semanticKeys\"]\n\t\t\t\t: keys[\"technicalKeys\"];\n\t\t\tthis.getOpenRecommendationsForContext(\n\t\t\t\trecommendationObject,\n\t\t\t\trecommendationObject[\"recommendationContext\"] as ODataV4Context,\n\t\t\t\topenRecommendations\n\t\t\t);\n\t\t}\n\t}\n\t/**\n\t *\n\t * @param contextData The context data object for recommendations\n\t * @param recommendationContext The recommendation context\n\t * @param openRecommendations RecommendationData\n\t * @param contextKey Context Key\n\t */\n\n\tprivate getOpenRecommendationsForContext(\n\t\tcontextData: Record<string, unknown>,\n\t\trecommendationContext: ODataV4Context,\n\t\topenRecommendations: RecommendationData[],\n\t\tcontextKey = \"\"\n\t): void {\n\t\tfor (const currentKey in contextData) {\n\t\t\tconst currentValue = contextData[currentKey];\n\t\t\tif (currentValue) {\n\t\t\t\tconst currentValueIsContext =\n\t\t\t\t\t(currentValue as ODataV4Context).isA && (currentValue as ODataV4Context).isA(\"sap.ui.model.odata.v4.Context\");\n\t\t\t\tif (currentKey.includes(\"@$ui5.fe.recommendations.placeholderValue\")) {\n\t\t\t\t\tconst propertyPath = currentKey.split(\"@$ui5.fe.recommendations.placeholderValue\")[0];\n\t\t\t\t\tconst openRecommendation: RecommendationData = {\n\t\t\t\t\t\tcontext: recommendationContext,\n\t\t\t\t\t\tpropertyPath: contextKey ? `${contextKey}/${propertyPath}` : propertyPath,\n\t\t\t\t\t\tvalue: currentValue as string,\n\t\t\t\t\t\tcontextIdentifier: (recommendationContext as RecommendationContextsInfo).contextIdentifier,\n\t\t\t\t\t\tcontextIdentifierText: []\n\t\t\t\t\t};\n\t\t\t\t\tconst description = contextData[`${propertyPath}@$ui5.fe.recommendations.placeholderDescription`];\n\t\t\t\t\tif (description) {\n\t\t\t\t\t\topenRecommendation.text = description as string;\n\t\t\t\t\t}\n\t\t\t\t\topenRecommendations.push(openRecommendation);\n\t\t\t\t} else if (typeof currentValue === \"object\" && !Array.isArray(currentValue) && !currentValueIsContext) {\n\t\t\t\t\tthis.getOpenRecommendationsForContext(\n\t\t\t\t\t\tcurrentValue as Record<string, unknown>,\n\t\t\t\t\t\trecommendationContext,\n\t\t\t\t\t\topenRecommendations,\n\t\t\t\t\t\tcurrentKey\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Opens the confirm recommendations dialog.\n\t * @param isSave Boolean flag which would be set to true if we are saving the document and would be false if we do apply changes\n\t * @returns Promise which would resolve with RecommendationDialogDecision (Accept, Ignore, Continue, Skipped)\n\t */\n\tpublic async open(isSave: boolean): Promise<RecommendationDialogDecision | undefined> {\n\t\t// check for built-in recommendations\n\t\tconst openRecommendations = this.getOpenRecommendations();\n\t\tif (openRecommendations.length > 0) {\n\t\t\tstandardRecommendationHelper.addContextIdentifierText(\n\t\t\t\t{ recommendationData: openRecommendations },\n\t\t\t\tthis.view.getBindingContext()?.getPath()\n\t\t\t);\n\t\t\tthis.acceptAllParams = {\n\t\t\t\trecommendationData: openRecommendations\n\t\t\t};\n\t\t\tawait (this.view?.getController() as PageController).recommendations.onBeforeAcceptRecommendations(this.acceptAllParams);\n\t\t} else {\n\t\t\t// if built-in recommendations are not found then check for legacy recommendations.\n\t\t\tconst legacyRecommendationsExist = (this.view?.getController() as PageController).recommendations.checkIfRecommendationsExist();\n\t\t\tif (legacyRecommendationsExist) {\n\t\t\t\tthis.acceptAllParams = await (this.view?.getController() as PageController).recommendations.fetchAcceptAllParams();\n\t\t\t} else {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t}\n\t\tconst acceptModel = this.getAcceptAllModel();\n\t\tthis.view.setModel(acceptModel, \"_acceptDialogModel\");\n\t\tif (!acceptModel.getData().items?.length) {\n\t\t\treturn RecommendationDialogDecision.Skipped;\n\t\t}\n\t\tthis.isSave = isSave;\n\t\tconst dialog = this.getContent();\n\t\tdialog?.setEscapeHandler(this.onContinueEditing.bind(this));\n\t\tthis.view.addDependent(dialog as UI5Element);\n\t\tdialog?.open();\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.promiseResolve = resolve;\n\t\t\tthis.promiseReject = reject;\n\t\t});\n\t}\n\n\t/**\n\t * Handler to close the confirmRecommendation dialog.\n\t *\n\t */\n\tpublic close(): void {\n\t\tthis.confirmRecommendationDialog.current?.close();\n\t\tthis.confirmRecommendationDialog.current?.destroy();\n\t}\n\n\t/**\n\t * Handler for Accept and Save button.\n\t */\n\tprivate async onAcceptAndSave(): Promise<void> {\n\t\ttry {\n\t\t\tconst isAccepted = await (this.view?.getController() as PageController).recommendations.acceptRecommendations(\n\t\t\t\tthis.acceptAllParams\n\t\t\t);\n\t\t\tif (!isAccepted) {\n\t\t\t\tthis.promiseReject(\"Accept Failed\");\n\t\t\t}\n\t\t\tthis.promiseResolve(RecommendationDialogDecision.Accept);\n\t\t} catch {\n\t\t\tLog.error(\"Accept Recommendations Failed\");\n\t\t\tthis.promiseReject(\"Accept Failed\");\n\t\t} finally {\n\t\t\tthis.close();\n\t\t}\n\t}\n\n\t/**\n\t * Handler for Reject and Save button.\n\t */\n\t/**\n\t * Handler for Reject and Save button.\n\t */\n\tprivate onIgnoreAndSave(): void {\n\t\tconst localAnnotationModel = (this.view.getModel() as ODataModel).getLocalAnnotationModel();\n\t\tconst rejectedRecommendations = localAnnotationModel.getProperty(\"/rejectedRecommendations\") ?? {};\n\n\t\tif (!this.acceptAllParams?.recommendationData) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst processedContextPaths = new Set<string>();\n\n\t\tfor (const recommendation of this.acceptAllParams.recommendationData) {\n\t\t\tconst contextPath = recommendation.context?.getPath() ?? \"\";\n\n\t\t\tif (contextPath !== \"\" && !processedContextPaths.has(contextPath)) {\n\t\t\t\tconst annotationObject = localAnnotationModel.getObject(contextPath);\n\n\t\t\t\tif (annotationObject !== null && typeof annotationObject === \"object\") {\n\t\t\t\t\tthis._processRecommendationContext(\n\t\t\t\t\t\tcontextPath,\n\t\t\t\t\t\tannotationObject,\n\t\t\t\t\t\trejectedRecommendations,\n\t\t\t\t\t\tlocalAnnotationModel,\n\t\t\t\t\t\tprocessedContextPaths\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t(this.view?.getController() as PageController).recommendations.ignoreRecommendationForContexts();\n\t\tthis.promiseResolve(RecommendationDialogDecision.Reject);\n\t\tthis.close();\n\t}\n\n\t/**\n\t * Processes a single recommendation context.\n\t * @param contextPath The context path being processed\n\t * @param annotationObject The annotation object for the context\n\t * @param rejectedRecommendations The rejected recommendations object\n\t * @param localAnnotationModel The local annotation model\n\t * @param processedContextPaths Set to track processed contexts\n\t */\n\tprivate _processRecommendationContext(\n\t\tcontextPath: string,\n\t\tannotationObject: Record<string, unknown>,\n\t\trejectedRecommendations: Record<string, unknown>,\n\t\tlocalAnnotationModel: JSONModel,\n\t\tprocessedContextPaths: Set<string>\n\t): void {\n\t\t// Build a shallow copy, then filter for recommendation keys only\n\t\tconst rejectedContextData = this._filterRecommendationKeys(annotationObject);\n\n\t\t// Clear recommendation properties from local annotation model\n\t\tthis._clearRecommendationProperties(annotationObject, contextPath, localAnnotationModel);\n\n\t\t// Store the filtered rejected context in rejectedRecommendations\n\t\trejectedRecommendations[contextPath] = rejectedContextData;\n\t\tlocalAnnotationModel.setProperty(\"/rejectedRecommendations\", rejectedRecommendations);\n\n\t\t// Mark this contextPath as processed\n\t\tprocessedContextPaths.add(contextPath);\n\t}\n\n\t/**\n\t * Filters annotation object to keep only recommendation keys.\n\t * @param annotationObject The source annotation object\n\t * @returns Object containing only recommendation-related keys\n\t */\n\tprivate _filterRecommendationKeys(annotationObject: Record<string, unknown>): Record<string, unknown> {\n\t\tconst rejectedContextData: Record<string, unknown> = {};\n\n\t\tfor (const key of Object.keys(annotationObject)) {\n\t\t\tif (key.includes(\"ui5.fe.recommendations\")) {\n\t\t\t\trejectedContextData[key] = annotationObject[key];\n\t\t\t}\n\t\t}\n\n\t\treturn rejectedContextData;\n\t}\n\n\t/**\n\t * Clears recommendation properties from local annotation model.\n\t * @param annotationObject The annotation object containing keys to clear\n\t * @param contextPath The context path for property clearing\n\t * @param localAnnotationModel The local annotation model\n\t */\n\tprivate _clearRecommendationProperties(\n\t\tannotationObject: Record<string, unknown>,\n\t\tcontextPath: string,\n\t\tlocalAnnotationModel: JSONModel\n\t): void {\n\t\tfor (const key of Object.keys(annotationObject)) {\n\t\t\tif (key.includes(\"ui5.fe.recommendations\")) {\n\t\t\t\tlocalAnnotationModel.setProperty(`${contextPath}/${key}`, undefined);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Handler for Continue Editing button.\n\t */\n\tprivate onContinueEditing(): void {\n\t\tthis.promiseResolve(RecommendationDialogDecision.Continue);\n\t\tthis.close();\n\t}\n\n\t/**\n\t * Gets the label or name of the Field based on its property path.\n\t * @param targetPath\n\t * @returns Returns the label of the Field.\n\t */\n\tprivate getFieldName(targetPath: string): string {\n\t\tconst involvedDataModelObject = MetaModelConverter.getInvolvedDataModelObjectsForTargetPath<Property>(\n\t\t\ttargetPath,\n\t\t\tthis.view?.getBindingContext()?.getModel()?.getMetaModel() as ODataMetaModel\n\t\t);\n\t\treturn (\n\t\t\tinvolvedDataModelObject?.targetObject?.annotations?.Common?.Label?.toString() ||\n\t\t\ttargetPath.split(\"/\")[targetPath.split(\"/\").length - 1]\n\t\t);\n\t}\n\n\t/**\n\t * Fetches text for recommendation based on display mode.\n\t * @param recommendation\n\t * @param displayMode\n\t * @returns Text for a recommendation\n\t */\n\tprivate getText(recommendation: StandardRecommendationDataType, displayMode: string): string {\n\t\tif (recommendation.text || recommendation.value) {\n\t\t\tswitch (displayMode) {\n\t\t\t\tcase \"Description\":\n\t\t\t\t\treturn recommendation.text!;\n\t\t\t\tcase \"DescriptionValue\":\n\t\t\t\t\treturn valueFormatters.formatWithBrackets(recommendation.text, recommendation.value);\n\t\t\t\tcase \"ValueDescription\":\n\t\t\t\t\treturn valueFormatters.formatWithBrackets(recommendation.value, recommendation.text);\n\t\t\t\tcase \"Value\":\n\t\t\t\t\treturn recommendation.value!;\n\t\t\t}\n\t\t}\n\t\treturn recommendation.value || \"\";\n\t}\n\n\t/**\n\t * Returns Button with given text, type and pressHandler.\n\t * @param text Text for the button\n\t * @param type Type of the button\n\t * @param pressHandler Press Handler for the button\n\t * @returns Button with the given settings\n\t */\n\tprivate getButton(text: string, type: string, pressHandler: EventHandler): Button {\n\t\treturn (\n\t\t\t<Button text={text} type={type} width={\"auto\"} press={pressHandler}>\n\t\t\t\t{{\n\t\t\t\t\tlayoutData: (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<FlexItemData minWidth={\"100%\"}></FlexItemData>\n\t\t\t\t\t\t</>\n\t\t\t\t\t)\n\t\t\t\t}}\n\t\t\t</Button>\n\t\t);\n\t}\n\n\t/**\n\t * Returns Footer with Buttons.\n\t * @returns Footer\n\t */\n\n\tprivate getFooter(): Toolbar {\n\t\treturn (\n\t\t\t<Toolbar>\n\t\t\t\t{{\n\t\t\t\t\tcontent: (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<ToolbarSpacer />\n\t\t\t\t\t\t\t{this.getButton(\n\t\t\t\t\t\t\t\tthis._getDialogButtonText(this.isSave, RecommendationDialogDecision.Accept),\n\t\t\t\t\t\t\t\t\"Emphasized\",\n\t\t\t\t\t\t\t\tthis.onAcceptAndSave.bind(this)\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{this.getButton(\n\t\t\t\t\t\t\t\tthis._getDialogButtonText(this.isSave, RecommendationDialogDecision.Reject),\n\t\t\t\t\t\t\t\t\"Ghost\",\n\t\t\t\t\t\t\t\tthis.onIgnoreAndSave.bind(this)\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{this.getButton(\n\t\t\t\t\t\t\t\tthis.confirmRecommendationDialogResourceModel.getText(\"C_RECOMMENDATION_DIALOG_CONTINUE_EDITING\"),\n\t\t\t\t\t\t\t\t\"Ghost\",\n\t\t\t\t\t\t\t\tthis.onContinueEditing.bind(this)\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</>\n\t\t\t\t\t)\n\t\t\t\t}}\n\t\t\t</Toolbar>\n\t\t);\n\t}\n\n\tprivate _getDialogButtonText(save: boolean, recommendationDialogDecision: RecommendationDialogDecision): string {\n\t\tconst isAcceptButton = recommendationDialogDecision === RecommendationDialogDecision.Accept;\n\t\tif (save) {\n\t\t\tconst isCreateMode = this.view.getBindingContext(\"pageInternal\")?.getProperty(\"createMode\");\n\n\t\t\tif (isCreateMode) {\n\t\t\t\treturn isAcceptButton\n\t\t\t\t\t? this.confirmRecommendationDialogResourceModel.getText(\"C_RECOMMENDATION_DIALOG_ACCEPT_AND_CREATE\")\n\t\t\t\t\t: this.confirmRecommendationDialogResourceModel.getText(\"C_RECOMMENDATION_DIALOG_REJECT_AND_CREATE\");\n\t\t\t}\n\n\t\t\treturn isAcceptButton\n\t\t\t\t? this.confirmRecommendationDialogResourceModel.getText(\"C_RECOMMENDATION_DIALOG_ACCEPT_AND_SAVE\")\n\t\t\t\t: this.confirmRecommendationDialogResourceModel.getText(\"C_RECOMMENDATION_DIALOG_REJECT_AND_SAVE\");\n\t\t}\n\n\t\t// Not saving – plain Accept/Ignore\n\t\treturn isAcceptButton\n\t\t\t? this.confirmRecommendationDialogResourceModel.getText(\"C_RECOMMENDATION_DIALOG_ACCEPT\")\n\t\t\t: this.confirmRecommendationDialogResourceModel.getText(\"C_RECOMMENDATION_DIALOG_REJECT\");\n\t}\n\n\t/**\n\t * This method created a JSON Model for the accept all dialog data.\n\t * @returns The JSON Model for accept all dialog.\n\t */\n\tgetAcceptAllModel(): JSONModel {\n\t\tconst acceptModel = new JSONModel();\n\t\tconst items = [];\n\t\tfor (const recommendationData of this.acceptAllParams?.recommendationData || []) {\n\t\t\tconst entityNameLabel = standardRecommendationHelper.getEntityName(recommendationData.context as ODataV4Context) || \"\";\n\n\t\t\tconst identifierTexts =\n\t\t\t\trecommendationData.contextIdentifierText && recommendationData.contextIdentifierText.length > 0\n\t\t\t\t\t? `${entityNameLabel} (${recommendationData.contextIdentifierText})`\n\t\t\t\t\t: entityNameLabel;\n\n\t\t\tif (recommendationData.value || recommendationData.text) {\n\t\t\t\tconst targetPath = recommendationData.context?.getPath() + \"/\" + recommendationData.propertyPath;\n\t\t\t\tconst displayMode = standardRecommendationHelper.getDisplayModeForTargetPath(\n\t\t\t\t\ttargetPath,\n\t\t\t\t\tthis.view?.getBindingContext()?.getModel()?.getMetaModel() as ODataMetaModel\n\t\t\t\t);\n\t\t\t\tconst listData = {\n\t\t\t\t\tfieldName: this.getFieldName(targetPath).valueOf(),\n\t\t\t\t\tfieldValue: this.getText(recommendationData, displayMode),\n\t\t\t\t\tidentifierTexts: identifierTexts\n\t\t\t\t};\n\t\t\t\titems.push(listData);\n\t\t\t}\n\t\t}\n\t\tacceptModel.setData({ items: items });\n\t\treturn acceptModel;\n\t}\n\n\t/**\n\t * This method groups the contexts according to the identifier texts.\n\t * @param context The context of the item\n\t * @returns The text of the group\n\t */\n\tgetGroup(context: ODataV4Context): string {\n\t\treturn context.getProperty(\"identifierTexts\");\n\t}\n\n\t/**\n\t * This function returns the message to be shown in the accept dialog.\n\t * @returns A message with the desired text.\n\t */\n\tgetMessage(): Text {\n\t\tconst acceptAllData = (this.view.getModel(\"_acceptDialogModel\") as JSONModel)?.getData()?.items;\n\t\tconst messageText =\n\t\t\tacceptAllData.length > 1\n\t\t\t\t? this.confirmRecommendationDialogResourceModel.getText(\"C_RECOMMENDATION_DIALOG_TEXT\", [acceptAllData.length])\n\t\t\t\t: this.confirmRecommendationDialogResourceModel.getText(\"C_RECOMMENDATION_DIALOG_TEXT_SINGULAR\");\n\t\treturn <Text text={messageText} />;\n\t}\n\n\t/**\n\t * This method creates the content for the dialog.\n\t * @returns A list as content of the dialog.\n\t */\n\tgetDialogContent(): List {\n\t\treturn (\n\t\t\t<List items={{ model: \"_acceptDialogModel\", path: \"/items\", sorter: new Sorter(\"identifierTexts\", false, this.getGroup) }}>\n\t\t\t\t<CustomListItem>\n\t\t\t\t\t<HBox class=\"sapUiSmallMarginBegin sapUiTinyMargin\">\n\t\t\t\t\t\t<Text text=\"{_acceptDialogModel>fieldName}: {_acceptDialogModel>fieldValue}\" />\n\t\t\t\t\t</HBox>\n\t\t\t\t</CustomListItem>\n\t\t\t</List>\n\t\t);\n\t}\n\n\t/**\n\t * The building block render function.\n\t * @returns An XML-based string\n\t */\n\tgetContent(): Dialog {\n\t\treturn (\n\t\t\t<Dialog\n\t\t\t\ttitle={this.confirmRecommendationDialogResourceModel.getText(\"C_RECOMMENDATION_DIALOG_TITLE\")}\n\t\t\t\tstate={ValueState.Information}\n\t\t\t\ttype={\"Message\"}\n\t\t\t\tref={this.confirmRecommendationDialog}\n\t\t\t\tresizable={\"true\"}\n\t\t\t\tcontentWidth={\"35rem\"}\n\t\t\t>\n\t\t\t\t{{\n\t\t\t\t\tcontent: (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t{this.getMessage()}\n\t\t\t\t\t\t\t{this.getDialogContent()}\n\t\t\t\t\t\t</>\n\t\t\t\t\t),\n\t\t\t\t\tfooter: <>{this.getFooter()}</>\n\t\t\t\t}}\n\t\t\t</Dialog>\n\t\t) as Dialog;\n\t}\n}\n"],"mappings":";;;;kvDAqCA,MAAMA,EAAmBC,EAAUD,iBAAiB,IAGxCE,EAA4B,SAA5BA,KAA4B,mCAA5BA,EAA4B,mCAA5BA,EAA4B,+BAA5BA,EAA4B,4BAA5BA,CAA4B,MAAAC,EAAAD,+BAAA,IAQ3BE,GAA2BC,EADvCC,EAAe,oEAAmEC,EASjFC,IAAiBH,EAAAI,GAAAC,EAAA,SAAAC,GAPlB,SAAAP,EAAYQ,GAAkD,IAAAC,EAC7DA,EAAAF,EAAAG,KAAAC,KAAMH,IAAMG,KAACC,EAAAH,EAAA,8BAAAI,EAAAJ,GACbA,EAAKK,KAAON,EAAMM,KAClBL,EAAKM,iBAAmBP,EAAMO,iBAC9BN,EAAKO,yCAA2CC,EAAiBR,EAAKK,MAAM,OAAAL,CAC7E,CAACV,EAAAC,8BAAAkB,EAAAlB,EAAAO,GAAA,IAAAY,EAAAnB,EAAAoB,UA2BDD,EAKOE,uBAAP,SAAOA,IACN,MAAMC,EAAsBX,KAAKY,6BACjC,MAAMC,EAAsBb,KAAKc,6CAA6CH,GAC9E,MAAMI,EAAwC,GAE9C,GAAIF,EAAoBG,OAAS,EAAG,CACnCH,EAAoBI,QAASC,IAC5B,MAAMC,EAAiBD,EAAeE,QACtC,MAAMC,EAAkBrB,KAAKG,KAAKmB,oBAClC,MAAMC,EAAeL,EAAeK,cAAgB,GAEpD,MAAMC,EAAUA,CAACC,EAAiCC,KACjD,MAAMC,EAAQF,GAAKG,YAAYF,GAC/B,OAAOC,IAAU,MAAQA,IAAUE,WAAaF,IAAU,IAI3D,GAAIH,EAAQL,EAAgBI,IAAiBC,EAAQH,EAAiBE,GAAe,CACpFR,EAAgBe,KAAKZ,EACtB,GAEF,CACA,OAAOH,CACR,EAEAP,EAKOI,2BAAP,SAAOA,IACN,MAAMmB,EAA0B,CAAC/B,KAAKG,KAAKmB,qBAAqBU,WAChE,MAAMC,EAAajC,KAAKG,KAAK+B,gBAC7B,MAAMC,EAAgBF,EAAWG,kBAAkBC,wBACnD,MAAMC,EAAeL,EAAWG,kBAAkBG,gBAClD,MAAMC,EAAeF,EAAeH,EAAcM,YAAYC,oBAAoBF,aAAe,KACjG,GAAIF,IAAiBE,EAAc,CAClC,MAAMG,EAAmBR,EAAcS,sBACvC,IAAKb,EAAwBc,SAASF,GAAkBX,WAAY,CACnED,EAAwBD,KAAKa,GAAkBX,UAChD,CACD,CACA,OAAOD,CACR,EAEAvB,EAKOM,6CAAP,SAAOA,EAA6CgC,GACnD,MAAMjC,EAA4C,GAClD,GAAIiC,EAAa9B,OAAS,EAAG,CAC5B,MAAM+B,EAAwB/C,KAAKG,KAAK6C,WAA0BC,0BAMlEH,EAAa7B,QAASiC,IACrB,GAAIA,IAAgBrB,UAAW,CAC9B,MAAMsB,EAAwBJ,EAAqBK,UAAUF,GAC7D,GAAIC,EAAuB,CAC1B,MAAME,EAAmBF,EAmBzBnD,KAAKsD,2BAA2BD,EAAkBxC,EACnD,CACD,GAEF,CACA,OAAOA,CACR,EAEAL,EAMQ8C,2BAAR,SAAQA,EAA2BD,EAA2CxC,GAC7E,GAAIwC,EAAiB,yBAA0B,CAC9C,MAAME,EAAgD,CAAC,EACvDA,EAAqB,yBAA2BF,EAAiB,yBACjE,IAAK,MAAMG,KAAcH,EAAkB,CAC1C,MAAMI,EAAeJ,EAAiBG,GACtC,GAAIC,EAAc,CACjB,GAAKA,EAAgD,yBAA0B,CAC9EzD,KAAKsD,2BAA2BD,EAAiBG,GAAwC3C,EAC1F,MAAO,GACN2C,EAAWX,SAAS,8CACpBW,EAAWX,SAAS,oDACpBW,EAAWX,SAAS,4CACnB,CACDU,EAAqBC,GAAcC,CACpC,CACD,CACD,CACA,MAAMC,EAAOC,EAAmBC,qCAC/BL,EAAqB,0BAErBA,EAAqB,yBAAwDM,kBAAoBH,EAAK,gBACpGA,EAAK,gBACLA,EAAK,iBACR1D,KAAK8D,iCACJP,EACAA,EAAqB,yBACrB1C,EAEF,CACD,EACAL,EAQQsD,iCAAR,SAAQA,EACPC,EACAC,EACAnD,GAEO,IADPoD,EAAUC,UAAAlD,OAAA,GAAAkD,UAAA,KAAArC,UAAAqC,UAAA,GAAG,GAEb,IAAK,MAAMV,KAAcO,EAAa,CACrC,MAAMN,EAAeM,EAAYP,GACjC,GAAIC,EAAc,CACjB,MAAMU,EACJV,EAAgCW,KAAQX,EAAgCW,IAAI,iCAC9E,GAAIZ,EAAWX,SAAS,6CAA8C,CACrE,MAAMtB,EAAeiC,EAAWa,MAAM,6CAA6C,GACnF,MAAMC,EAAyC,CAC9ClD,QAAS4C,EACTzC,aAAc0C,EAAa,GAAGA,KAAc1C,IAAiBA,EAC7DI,MAAO8B,EACPI,kBAAoBG,EAAqDH,kBACzEU,sBAAuB,IAExB,MAAMC,EAAcT,EAAY,GAAGxC,oDACnC,GAAIiD,EAAa,CAChBF,EAAmBG,KAAOD,CAC3B,CACA3D,EAAoBiB,KAAKwC,EAC1B,MAAO,UAAWb,IAAiB,WAAaiB,MAAMC,QAAQlB,KAAkBU,EAAuB,CACtGnE,KAAK8D,iCACJL,EACAO,EACAnD,EACA2C,EAEF,CACD,CACD,CACD,EAEAhD,EAKaoE,KAAbC,eAAaD,EAAKE,GAEjB,MAAMjE,EAAsBb,KAAKU,yBACjC,GAAIG,EAAoBG,OAAS,EAAG,CACnC+D,EAA6BC,yBAC5B,CAAEC,mBAAoBpE,GACtBb,KAAKG,KAAKmB,qBAAqBU,WAEhChC,KAAKkF,gBAAkB,CACtBD,mBAAoBpE,SAEdb,KAAKG,MAAM+B,iBAAmCnB,gBAAgBoE,8BAA8BnF,KAAKkF,gBACzG,KAAO,CAEN,MAAME,GAA8BpF,KAAKG,MAAM+B,iBAAmCnB,gBAAgBsE,8BAClG,GAAID,EAA4B,CAC/BpF,KAAKkF,sBAAyBlF,KAAKG,MAAM+B,iBAAmCnB,gBAAgBuE,sBAC7F,KAAO,CACN,OAAOzD,SACR,CACD,CACA,MAAM0D,EAAcvF,KAAKwF,oBACzBxF,KAAKG,KAAKsF,SAASF,EAAa,sBAChC,IAAKA,EAAYG,UAAUC,OAAO3E,OAAQ,CACzC,OAAO7B,EAA6ByG,OACrC,CACA5F,KAAK8E,OAASA,EACd,MAAMe,EAAS7F,KAAK8F,aACpBD,GAAQE,iBAAiB/F,KAAKgG,kBAAkBC,KAAKjG,OACrDA,KAAKG,KAAK+F,aAAaL,GACvBA,GAAQjB,OACR,OAAO,IAAIuB,QAAQ,CAACC,EAASC,KAC5BrG,KAAKsG,eAAiBF,EACtBpG,KAAKuG,cAAgBF,GAEvB,EAEA7F,EAIOgG,MAAP,SAAOA,IACNxG,KAAKyG,4BAA4BC,SAASF,QAC1CxG,KAAKyG,4BAA4BC,SAASC,SAC3C,EAEAnG,EAGcoG,gBAAd/B,eAAc+B,IACb,IACC,MAAMC,QAAoB7G,KAAKG,MAAM+B,iBAAmCnB,gBAAgB+F,sBACvF9G,KAAKkF,iBAEN,IAAK2B,EAAY,CAChB7G,KAAKuG,cAAc,gBACpB,CACAvG,KAAKsG,eAAenH,EAA6B4H,OAClD,CAAE,MACDC,EAAIC,MAAM,iCACVjH,KAAKuG,cAAc,gBACpB,CAAC,QACAvG,KAAKwG,OACN,CACD,EAKAhG,EAGQ0G,gBAAR,SAAQA,IACP,MAAMnE,EAAwB/C,KAAKG,KAAK6C,WAA0BC,0BAClE,MAAMkE,EAA0BpE,EAAqBnB,YAAY,6BAA+B,CAAC,EAEjG,IAAK5B,KAAKkF,iBAAiBD,mBAAoB,CAC9C,MACD,CAEA,MAAMmC,EAAwB,IAAIC,IAElC,IAAK,MAAMnG,KAAkBlB,KAAKkF,gBAAgBD,mBAAoB,CACrE,MAAM/B,EAAchC,EAAeE,SAASY,WAAa,GAEzD,GAAIkB,IAAgB,KAAOkE,EAAsBE,IAAIpE,GAAc,CAClE,MAAMG,EAAmBN,EAAqBK,UAAUF,GAExD,GAAIG,IAAqB,aAAeA,IAAqB,SAAU,CACtErD,KAAKuH,8BACJrE,EACAG,EACA8D,EACApE,EACAqE,EAEF,CACD,CACD,EAECpH,KAAKG,MAAM+B,iBAAmCnB,gBAAgByG,kCAC/DxH,KAAKsG,eAAenH,EAA6BsI,QACjDzH,KAAKwG,OACN,EAEAhG,EAQQ+G,8BAAR,SAAQA,EACPrE,EACAG,EACA8D,EACApE,EACAqE,GAGA,MAAMM,EAAsB1H,KAAK2H,0BAA0BtE,GAG3DrD,KAAK4H,+BAA+BvE,EAAkBH,EAAaH,GAGnEoE,EAAwBjE,GAAewE,EACvC3E,EAAqB8E,YAAY,2BAA4BV,GAG7DC,EAAsBU,IAAI5E,EAC3B,EAEA1C,EAKQmH,0BAAR,SAAQA,EAA0BtE,GACjC,MAAMqE,EAA+C,CAAC,EAEtD,IAAK,MAAMK,KAAOC,OAAOtE,KAAKL,GAAmB,CAChD,GAAI0E,EAAIlF,SAAS,0BAA2B,CAC3C6E,EAAoBK,GAAO1E,EAAiB0E,EAC7C,CACD,CAEA,OAAOL,CACR,EAEAlH,EAMQoH,+BAAR,SAAQA,EACPvE,EACAH,EACAH,GAEA,IAAK,MAAMgF,KAAOC,OAAOtE,KAAKL,GAAmB,CAChD,GAAI0E,EAAIlF,SAAS,0BAA2B,CAC3CE,EAAqB8E,YAAY,GAAG3E,KAAe6E,IAAOlG,UAC3D,CACD,CACD,EAEArB,EAGQwF,kBAAR,SAAQA,IACPhG,KAAKsG,eAAenH,EAA6B8I,UACjDjI,KAAKwG,OACN,EAEAhG,EAKQ0H,aAAR,SAAQA,EAAaC,GACpB,MAAMC,EAA0BzE,EAAmB0E,yCAClDF,EACAnI,KAAKG,MAAMmB,qBAAqB0B,YAAYsF,gBAE7C,OACCF,GAAyBG,cAAcC,aAAaC,QAAQC,OAAOC,YACnER,EAAW9D,MAAM,KAAK8D,EAAW9D,MAAM,KAAKrD,OAAS,EAEvD,EAEAR,EAMQoI,QAAR,SAAQA,EAAQ1H,EAAgD2H,GAC/D,GAAI3H,EAAeuD,MAAQvD,EAAeS,MAAO,CAChD,OAAQkH,GACP,IAAK,cACJ,OAAO3H,EAAeuD,KACvB,IAAK,mBACJ,OAAOqE,EAAgBC,mBAAmB7H,EAAeuD,KAAMvD,EAAeS,OAC/E,IAAK,mBACJ,OAAOmH,EAAgBC,mBAAmB7H,EAAeS,MAAOT,EAAeuD,MAChF,IAAK,QACJ,OAAOvD,EAAeS,MAEzB,CACA,OAAOT,EAAeS,OAAS,EAChC,EAEAnB,EAOQwI,UAAR,SAAQA,EAAUvE,EAAcwE,EAAcC,GAC7C,OACCC,EAACC,EAAM,CAAC3E,KAAMA,EAAMwE,KAAMA,EAAMI,MAAO,OAAQC,MAAOJ,EAAaK,SACjE,CACAC,WACCL,EAAAM,EAAA,CAAAF,SACCJ,EAACO,EAAY,CAACC,SAAU,aAM9B,EAEAnJ,EAKQoJ,UAAR,SAAQA,IACP,OACCT,EAACU,EAAO,CAAAN,SACN,CACAO,QACCC,EAAAN,EAAA,CAAAF,SAAA,CACCJ,EAACa,EAAa,IACbhK,KAAKgJ,UACLhJ,KAAKiK,qBAAqBjK,KAAK8E,OAAQ3F,EAA6B4H,QACpE,aACA/G,KAAK4G,gBAAgBX,KAAKjG,OAE1BA,KAAKgJ,UACLhJ,KAAKiK,qBAAqBjK,KAAK8E,OAAQ3F,EAA6BsI,QACpE,QACAzH,KAAKkH,gBAAgBjB,KAAKjG,OAE1BA,KAAKgJ,UACLhJ,KAAKK,yCAAyCuI,QAAQ,4CACtD,QACA5I,KAAKgG,kBAAkBC,KAAKjG,YAOnC,EAACQ,EAEOyJ,qBAAR,SAAQA,EAAqBC,EAAeC,GAC3C,MAAMC,EAAiBD,IAAiChL,EAA6B4H,OACrF,GAAImD,EAAM,CACT,MAAMG,EAAerK,KAAKG,KAAKmB,kBAAkB,iBAAiBM,YAAY,cAE9E,GAAIyI,EAAc,CACjB,OAAOD,EACJpK,KAAKK,yCAAyCuI,QAAQ,6CACtD5I,KAAKK,yCAAyCuI,QAAQ,4CAC1D,CAEA,OAAOwB,EACJpK,KAAKK,yCAAyCuI,QAAQ,2CACtD5I,KAAKK,yCAAyCuI,QAAQ,0CAC1D,CAGA,OAAOwB,EACJpK,KAAKK,yCAAyCuI,QAAQ,kCACtD5I,KAAKK,yCAAyCuI,QAAQ,iCAC1D,EAEApI,EAIAgF,kBAAA,SAAAA,IACC,MAAMD,EAAc,IAAI+E,EACxB,MAAM3E,EAAQ,GACd,IAAK,MAAMV,KAAsBjF,KAAKkF,iBAAiBD,oBAAsB,GAAI,CAChF,MAAMsF,EAAkBxF,EAA6ByF,cAAcvF,EAAmB7D,UAA8B,GAEpH,MAAMqJ,EACLxF,EAAmBV,uBAAyBU,EAAmBV,sBAAsBvD,OAAS,EAC3F,GAAGuJ,MAAoBtF,EAAmBV,yBAC1CgG,EAEJ,GAAItF,EAAmBtD,OAASsD,EAAmBR,KAAM,CACxD,MAAM0D,EAAalD,EAAmB7D,SAASY,UAAY,IAAMiD,EAAmB1D,aACpF,MAAMsH,EAAc9D,EAA6B2F,4BAChDvC,EACAnI,KAAKG,MAAMmB,qBAAqB0B,YAAYsF,gBAE7C,MAAMqC,EAAW,CAChBC,UAAW5K,KAAKkI,aAAaC,GAAY0C,UACzCC,WAAY9K,KAAK4I,QAAQ3D,EAAoB4D,GAC7C4B,gBAAiBA,GAElB9E,EAAM7D,KAAK6I,EACZ,CACD,CACApF,EAAYwF,QAAQ,CAAEpF,MAAOA,IAC7B,OAAOJ,CACR,EAEA/E,EAKAwK,SAAA,SAAAA,EAAS5J,GACR,OAAOA,EAAQQ,YAAY,kBAC5B,EAEApB,EAIAyK,WAAA,SAAAA,IACC,MAAMC,EAAiBlL,KAAKG,KAAK6C,SAAS,uBAAqC0C,WAAWC,MAC1F,MAAMwF,EACLD,EAAclK,OAAS,EACpBhB,KAAKK,yCAAyCuI,QAAQ,+BAAgC,CAACsC,EAAclK,SACrGhB,KAAKK,yCAAyCuI,QAAQ,yCAC1D,OAAOO,EAACiC,EAAI,CAAC3G,KAAM0G,GACpB,EAEA3K,EAIA6K,iBAAA,SAAAA,IACC,OACClC,EAACmC,EAAI,CAAC3F,MAAO,CAAE4F,MAAO,qBAAsB7J,KAAM,SAAU8J,OAAQ,IAAIC,EAAO,kBAAmB,MAAOzL,KAAKgL,WAAYzB,SACzHJ,EAACuC,EAAc,CAAAnC,SACdJ,EAACwC,EAAI,CAACC,MAAM,wCAAuCrC,SAClDJ,EAACiC,EAAI,CAAC3G,KAAK,yEAKhB,EAEAjE,EAIAsF,WAAA,SAAAA,IACC,OACCqD,EAAC0C,EAAM,CACNC,MAAO9L,KAAKK,yCAAyCuI,QAAQ,iCAC7DmD,MAAOC,EAAWC,YAClBhD,KAAM,UACNiD,IAAKlM,KAAKyG,4BACV0F,UAAW,OACXC,aAAc,QAAQ7C,SAErB,CACAO,QACCC,EAAAN,EAAA,CAAAF,SAAA,CACEvJ,KAAKiL,aACLjL,KAAKqL,sBAGRgB,OAAQlD,EAAAM,EAAA,CAAAF,SAAGvJ,KAAK4J,gBAIpB,EAAC,OAAAvK,CAAA,CAnlBiB,CAR8BiN,GAAapM,EAAAqM,EAAA5M,EAAAc,UAAA,+BAAAjB,GAAA,CAAAgN,aAAA,KAAAC,WAAA,KAAAC,SAAA,KAAAC,YAAA,OAAAhN,KAAAD,GAAAN,EAAAC,8BAAA,OAAAD,CAAA","ignoreList":[]}