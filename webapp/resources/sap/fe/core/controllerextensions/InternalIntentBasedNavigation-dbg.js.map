{"version":3,"names":["InternalIntentBasedNavigation","_dec","defineUI5Class","_dec2","methodOverride","_dec3","publicExtension","_dec4","finalExtension","_dec5","_dec6","_dec7","_dec8","extensible","OverrideExecution","Instead","_dec9","_dec10","_dec11","privateExtension","_dec12","_dec13","_dec14","_dec15","_dec16","_dec17","_dec18","_dec19","_dec20","_dec21","_dec22","_dec23","_class","_class2","_ControllerExtension","call","_inheritsLoose","_proto","prototype","onInit","_oAppComponent","base","getAppComponent","_oMetaModel","getModel","getMetaModel","_oNavigationService","getNavigationService","_oView","getView","navigate","semanticObject","action","navigationParameters","source","navigationAlreadyStarted","_doNavigate","vNavigationContexts","navigationContexts","aNavigationContexts","Array","isArray","vSemanticObjectMapping","semanticObjectMapping","vOutboundParams","additionalNavigationParameters","oTargetInfo","oView","oController","getController","aSemanticAttributes","oSelectionVariant","SelectionVariant","length","forEach","oNavigationContext","oNavigationContextAsContext","oNavigationContextAsObject","isA","oSemanticAttributes","getObject","sMetaPath","getMetaPath","getPath","finalSemanticAttributes","processSemanticAttributes","removeSensitiveData","oNavContext","prepareContextForExternalNavigation","propertiesWithoutConflict","push","semanticAttributes","data","metaPath","mixAttributesAndSelectionVariant","toJSONString","oModel","sEntitySet","getEntitySet","sContextUrl","constructContextUrl","undefined","setFilterContextUrl","_applyOutboundParams","intentBasedNavigation","adaptNavigationContext","_applySemanticObjectMappings","_removeTechnicalParameters","sNavMode","_intentBasedNavigation","getNavigationMode","mRefreshStrategies","refreshStrategies","oInternalModel","getViewData","refreshStrategyOnAppRestore","mViewRefreshStrategies","mergeObjects","mRefreshStrategy","KeepAliveHelper","getRefreshStrategyForIntent","setProperty","navMode","onError","sap","ui","require","MessageBoxClass","oResourceBundle","Library","getResourceBundleFor","error","getText","title","Error","oBindingContext","getBindingContext","oMetaModel","converterType","ModelHelper","isStickySessionSupported","draft","processDataLossOrDraftDiscardConfirmation","bind","Function","NavigationType","ForwardNavigation","oContext","oDistinctKeys","sContextPath","aMetaPathParts","split","filter","Boolean","_findDistinctKeysInObject","LookUpObject","sLookUpObjectMetaPath","sKey","oNewLookUpObject","sMainEntitySetName","sMainEntityTypeName","oPropertiesWithoutConflict","sMainEntityValuePath","sCurrentValuePath","sLastValuePath","originalContextKeys","Object","keys","removedContextKeys","key","includes","sDistinctKey","aConflictingPaths","sWinnerValuePath","i","sPath","sPathInContext","replace","sEntityTypeName","sValue","join","getProperty","sProperty","navigateWithConfirmationDialog","sSemanticObject","sAction","mNavigationParameters","shouldContinue","notApplicableContexts","metaModel","entitySetPath","convertedMetadata","convertTypes","entitySet","resolvePath","target","notApplicableContextsDialog","NotApplicableContextDialog","entityType","resourceModel","getResourceModel","applicableContexts","name","actionName","open","removeSelectOption","oAttributes","transAggregations","customAggregates","_getAggregates","getDiagnostics","aProperties","element","_deleteAggregates","aPropertyAnnotations","_getPropertyAnnotations","PersonalData","IsPotentiallySensitive","UI","ExcludeFromNavigationContext","Analytics","Measure","Common","FieldControl","oFieldControl","_isFieldControlPathInapplicable","aggregates","sProp","createBindingContext","oFullContext","MetaModelConverter","getInvolvedDataModelObjects","targetObject","annotations","oDiagnostics","converterContext","_getConverterContext","aggregationHelper","AggregationHelper","getEntityType","isAnalyticsSupported","transAggregationsPreprocessing","getTransAggregations","map","transAgg","Name","Value","getCustomAggregateDefinitions","customAggregate","qualifier","oViewData","contextPath","fullContextPath","CommonUtils","getConverterContextForPath","sFieldControlPath","oAttribute","bInapplicable","aParts","hasOwnProperty","vMappings","oMappings","JSON","parse","item","sLocalProperty","sSemanticObjectProperty","oSelectOption","getSelectOption","renameSelectOption","storeFocusInfoInHistory","focusInfo","focusControl","Element","getActiveElement","focusControlId","getId","focusMDCTable","FPMHelper","getMdcTable","type","controlId","tableId","contextPathFocus","history","replaceState","assign","state","navigateOutbound","sOutbound","aNavParams","oManifestEntry","getManifestEntry","oOutbound","crossNavigation","outbounds","Log","outboundParams","parameters","getOutboundParams","oParams","navParameterValue","aParameters","aSelectProperties","getSelectOptionsPropertyNames","addSelectOption","oOutboundParams","oParamsMapping","oMapping","value","format","onChevronPressNavigateOutBound","sOutboundTarget","sCreatePath","oOutbounds","getRoutingService","getOutbounds","oDisplayOutbound","oRefreshStrategies","intents","oDefaultRefreshStrategy","getMetaPathForContext","RefreshStrategyType","Self","_feDefault","Promise","resolve","context","pathsToRetain","bKeepNavProperties","keepNavigationPropertiesForNavigation","getSemanticAttributesWithoutNavigationProperties","manifest","app","considerNavigationPropertiesForExternalNavigation","ret","navProperties","getNavigationPropertiesFromEntityType","navProp","navPropName","propertyPath","navigationProperties","ControllerExtension","_applyDecoratedDescriptor","getOwnPropertyDescriptor"],"sourceRoot":".","sources":["InternalIntentBasedNavigation.ts"],"sourcesContent":["import type { EntitySet, EntityType, NavigationProperty, Property } from \"@sap-ux/vocabularies-types\";\nimport type { PropertyAnnotations } from \"@sap-ux/vocabularies-types/vocabularies/Edm_Types\";\nimport Log from \"sap/base/Log\";\nimport mergeObjects from \"sap/base/util/merge\";\nimport { defineUI5Class, extensible, finalExtension, methodOverride, privateExtension, publicExtension } from \"sap/fe/base/ClassSupport\";\nimport type AppComponent from \"sap/fe/core/AppComponent\";\nimport type { FEView } from \"sap/fe/core/BaseController\";\nimport CommonUtils from \"sap/fe/core/CommonUtils\";\nimport type PageController from \"sap/fe/core/PageController\";\nimport NotApplicableContextDialog from \"sap/fe/core/controllerextensions/editFlow/NotApplicableContextDialog\";\nimport draft from \"sap/fe/core/controllerextensions/editFlow/draft\";\nimport type ConverterContext from \"sap/fe/core/converters/ConverterContext\";\nimport * as MetaModelConverter from \"sap/fe/core/converters/MetaModelConverter\";\nimport { convertTypes } from \"sap/fe/core/converters/MetaModelConverter\";\nimport type { PageContextPathTarget } from \"sap/fe/core/converters/TemplateConverter\";\nimport FPMHelper from \"sap/fe/core/helpers/FPMHelper\";\nimport KeepAliveHelper from \"sap/fe/core/helpers/KeepAliveHelper\";\nimport type { RefreshStrategies, SORefreshStrategy } from \"sap/fe/core/helpers/KeepAliveRefreshTypes\";\nimport { RefreshStrategyType } from \"sap/fe/core/helpers/KeepAliveRefreshTypes\";\nimport ModelHelper from \"sap/fe/core/helpers/ModelHelper\";\nimport { getResourceModel } from \"sap/fe/core/helpers/ResourceModelHelper\";\nimport type { NavigationService } from \"sap/fe/core/services/NavigationServiceFactory\";\nimport type Diagnostics from \"sap/fe/core/support/Diagnostics\";\nimport SelectionVariant from \"sap/fe/navigation/SelectionVariant\";\nimport type MessageBox from \"sap/m/MessageBox\";\nimport type Control from \"sap/ui/core/Control\";\nimport Element from \"sap/ui/core/Element\";\nimport Library from \"sap/ui/core/Lib\";\nimport type { ManifestOutboundEntryParameter } from \"sap/ui/core/Manifest\";\nimport ControllerExtension from \"sap/ui/core/mvc/ControllerExtension\";\nimport OverrideExecution from \"sap/ui/core/mvc/OverrideExecution\";\nimport type Context from \"sap/ui/model/Context\";\nimport type ODataV4Context from \"sap/ui/model/odata/v4/Context\";\nimport type ODataMetaModel from \"sap/ui/model/odata/v4/ODataMetaModel\";\nimport { AggregationHelper } from \"../converters/helpers/Aggregation\";\n\n/**\n * Navigation Parameters used during navigation\n */\nexport type NavigationParameters = {\n\t/**\n\t * Single instance or multiple instances of {@link sap.ui.model.odata.v4.Context}, or alternatively an object or array of objects, to be passed to the intent.\n\t */\n\tnavigationContexts?: object | ODataV4Context[];\n\t/**\n\t * String representation of SemanticObjectMapping or SemanticObjectMapping that applies to this navigation.\n\t */\n\tsemanticObjectMapping?: string | object;\n\tdefaultRefreshStrategy?: object;\n\trefreshStrategies?: RefreshStrategies;\n\tadditionalNavigationParameters?: Record<string, string>;\n\t/**\n\t * Single instance or multiple instances of {@link sap.ui.model.odata.v4.Context}, or alternatively an object or array of objects, to be passed to the intent and for which the IBN button is enabled\n\t */\n\tapplicableContexts?: ODataV4Context[];\n\t/**\n\t * Single instance or multiple instances of {@link sap.ui.model.odata.v4.Context}, or alternatively an object or array of objects, which cannot be passed to the intent.\n\t * \tif an array of contexts is passed the context is used to determine the meta path and accordingly remove the sensitive data\n\t * If an array of objects is passed, the following format is expected:\n\t * {\n\t * \tdata: {\n\t * \t\tProductID: 7634,\n\t * \t\t\tName: \"Laptop\"\n\t * \t},\n\t * \tmetaPath: \"/SalesOrderManage\"\n\t * }\n\t * The metaPath is used to remove any sensitive data.\n\t */\n\tnotApplicableContexts?: ODataV4Context[];\n\n\tlabel?: string;\n\tnavMode?: string;\n};\n/**\n * {@link sap.ui.core.mvc.ControllerExtension Controller extension}\n * @since 1.84.0\n */\n@defineUI5Class(\"sap.fe.core.controllerextensions.InternalInternalBasedNavigation\")\nclass InternalIntentBasedNavigation extends ControllerExtension {\n\tprotected base!: PageController;\n\n\tprivate _oAppComponent!: AppComponent;\n\n\tprivate _oMetaModel!: ODataMetaModel;\n\n\tprivate _oNavigationService!: NavigationService;\n\n\tprivate _oView!: FEView;\n\n\tnavigationAlreadyStarted: boolean | undefined;\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\t@methodOverride()\n\tonInit(): void {\n\t\tthis._oAppComponent = this.base.getAppComponent();\n\t\tthis._oMetaModel = this._oAppComponent.getModel().getMetaModel();\n\t\tthis._oNavigationService = this._oAppComponent.getNavigationService();\n\t\tthis._oView = this.base.getView();\n\t}\n\n\t/**\n\t * Enables intent-based navigation (SemanticObject-Action) with the provided context.\n\t * If semantic object mapping is provided, this is also applied to the selection variant after the adaptation by a consumer.\n\t * This takes care of removing any technical parameters and determines if an explace or inplace navigation should take place.\n\t * @param semanticObject Semantic object for the target app\n\t * @param action  Action for the target app\n\t * @param [navigationParameters] Optional parameters to be passed to the external navigation\n\t * @param [navigationParameters.navigationContexts] Uses one of the following to be passed to the intent:\n\t *    a single instance of {@link sap.ui.model.odata.v4.Context}\n\t *    multiple instances of {@link sap.ui.model.odata.v4.Context}\n\t *    an object or an array of objects\n\t *\t\t  If an array of objects is passed, the context is used to determine the metaPath and to remove any sensitive data\n\t *\t\t  If an array of objects is passed, the following format ix expected:\n\t *\t\t  {\n\t *\t\t\tdata: {\n\t *\t \t\t\tProductID: 7634,\n\t *\t\t\t\tName: \"Laptop\"\n\t *\t\t\t },\n\t *\t\t\t metaPath: \"/SalesOrderManage\"\n\t *        }\n\t * @param [navigationParameters.semanticObjectMapping] String representation of the SemanticObjectMapping or SemanticObjectMapping that applies to this navigation\n\t * @param [navigationParameters.defaultRefreshStrategy] Default refresh strategy to be used in case no refresh strategy is specified for the intent in the view.\n\t * @param [navigationParameters.refreshStrategies]\n\t * @param [navigationParameters.additionalNavigationParameters] Additional navigation parameters configured in the crossAppNavigation outbound parameters.\n\t * @param source The control object of the navigation source.\n\t */\n\t@publicExtension()\n\t@finalExtension()\n\tnavigate(semanticObject: string, action: string, navigationParameters?: NavigationParameters, source?: Control): void {\n\t\ttry {\n\t\t\tif (this.navigationAlreadyStarted !== true) {\n\t\t\t\tthis.navigationAlreadyStarted = true;\n\t\t\t\tconst _doNavigate = (): void => {\n\t\t\t\t\tconst vNavigationContexts: object | ODataV4Context[] | undefined =\n\t\t\t\t\t\tnavigationParameters && navigationParameters.navigationContexts;\n\t\t\t\t\tconst aNavigationContexts: undefined | (ODataV4Context | object)[] =\n\t\t\t\t\t\tvNavigationContexts && !Array.isArray(vNavigationContexts) ? [vNavigationContexts] : vNavigationContexts;\n\t\t\t\t\tconst vSemanticObjectMapping = navigationParameters && navigationParameters.semanticObjectMapping,\n\t\t\t\t\t\tvOutboundParams = navigationParameters && navigationParameters.additionalNavigationParameters,\n\t\t\t\t\t\toTargetInfo: { semanticObject: string; action: string; propertiesWithoutConflict?: Record<string, string> } = {\n\t\t\t\t\t\t\tsemanticObject: semanticObject,\n\t\t\t\t\t\t\taction: action\n\t\t\t\t\t\t},\n\t\t\t\t\t\toView = this.base.getView(),\n\t\t\t\t\t\toController = oView.getController();\n\n\t\t\t\t\tif (semanticObject && action) {\n\t\t\t\t\t\tlet aSemanticAttributes: unknown[] = [],\n\t\t\t\t\t\t\toSelectionVariant = new SelectionVariant();\n\t\t\t\t\t\t// 1. get SemanticAttributes for navigation\n\t\t\t\t\t\tif (aNavigationContexts && aNavigationContexts.length) {\n\t\t\t\t\t\t\taNavigationContexts.forEach((oNavigationContext) => {\n\t\t\t\t\t\t\t\t// 1.1.a if navigation context is instance of sap.ui.mode.odata.v4.Context\n\t\t\t\t\t\t\t\t// else check if navigation context is of type object\n\t\t\t\t\t\t\t\tconst oNavigationContextAsContext = oNavigationContext as ODataV4Context;\n\t\t\t\t\t\t\t\tconst oNavigationContextAsObject = oNavigationContext as\n\t\t\t\t\t\t\t\t\t| { data: unknown[] | Record<string, unknown>; metaPath: string }\n\t\t\t\t\t\t\t\t\t| undefined;\n\n\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\toNavigationContextAsContext.isA &&\n\t\t\t\t\t\t\t\t\toNavigationContextAsContext.isA<ODataV4Context>(\"sap.ui.model.odata.v4.Context\")\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t// 1.1.b remove sensitive data\n\t\t\t\t\t\t\t\t\tlet oSemanticAttributes = oNavigationContextAsContext.getObject();\n\t\t\t\t\t\t\t\t\tconst sMetaPath = this._oMetaModel.getMetaPath(oNavigationContextAsContext.getPath());\n\t\t\t\t\t\t\t\t\t// TODO: also remove sensitive data from  navigation properties\n\t\t\t\t\t\t\t\t\tconst finalSemanticAttributes = this.processSemanticAttributes(\n\t\t\t\t\t\t\t\t\t\toNavigationContextAsContext,\n\t\t\t\t\t\t\t\t\t\toSemanticAttributes\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\toSemanticAttributes = this.removeSensitiveData(finalSemanticAttributes, sMetaPath);\n\t\t\t\t\t\t\t\t\tconst oNavContext = this.prepareContextForExternalNavigation(\n\t\t\t\t\t\t\t\t\t\tfinalSemanticAttributes,\n\t\t\t\t\t\t\t\t\t\toNavigationContextAsContext\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\toTargetInfo[\"propertiesWithoutConflict\"] = oNavContext.propertiesWithoutConflict;\n\t\t\t\t\t\t\t\t\taSemanticAttributes.push(oNavContext.semanticAttributes);\n\t\t\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\t\t\toNavigationContextAsObject &&\n\t\t\t\t\t\t\t\t\t!(oNavigationContextAsObject && Array.isArray(oNavigationContextAsObject.data)) &&\n\t\t\t\t\t\t\t\t\ttypeof oNavigationContext === \"object\"\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t// 1.1.b remove sensitive data from object\n\t\t\t\t\t\t\t\t\taSemanticAttributes.push(\n\t\t\t\t\t\t\t\t\t\tthis.removeSensitiveData(oNavigationContextAsObject.data, oNavigationContextAsObject.metaPath)\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t} else if (oNavigationContextAsObject && Array.isArray(oNavigationContextAsObject.data)) {\n\t\t\t\t\t\t\t\t\t// oNavigationContext.data can be array already ex : [{Customer: \"10001\"}, {Customer: \"10091\"}]\n\t\t\t\t\t\t\t\t\t// hence assigning it to the aSemanticAttributes\n\t\t\t\t\t\t\t\t\taSemanticAttributes = this.removeSensitiveData(\n\t\t\t\t\t\t\t\t\t\toNavigationContextAsObject.data,\n\t\t\t\t\t\t\t\t\t\toNavigationContextAsObject.metaPath\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// 2.1 Merge base selection variant and sanitized semantic attributes into one SelectionVariant\n\t\t\t\t\t\tif (aSemanticAttributes && aSemanticAttributes.length) {\n\t\t\t\t\t\t\toSelectionVariant = this._oNavigationService.mixAttributesAndSelectionVariant(\n\t\t\t\t\t\t\t\taSemanticAttributes,\n\t\t\t\t\t\t\t\toSelectionVariant.toJSONString()\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// 3. Add filterContextUrl to SV so the NavigationHandler can remove any sensitive data based on view entitySet\n\t\t\t\t\t\tconst oModel = this._oView.getModel(),\n\t\t\t\t\t\t\tsEntitySet = this.getEntitySet(),\n\t\t\t\t\t\t\tsContextUrl = sEntitySet ? this._oNavigationService.constructContextUrl(sEntitySet, oModel) : undefined;\n\t\t\t\t\t\tif (sContextUrl) {\n\t\t\t\t\t\t\toSelectionVariant.setFilterContextUrl(sContextUrl);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Apply Outbound Parameters to the SV\n\t\t\t\t\t\tif (vOutboundParams) {\n\t\t\t\t\t\t\tthis._applyOutboundParams(oSelectionVariant, vOutboundParams);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// 4. give an opportunity for the application to influence the SelectionVariant\n\t\t\t\t\t\toController.intentBasedNavigation.adaptNavigationContext(oSelectionVariant, oTargetInfo);\n\n\t\t\t\t\t\t// 5. Apply semantic object mappings to the SV\n\t\t\t\t\t\tif (vSemanticObjectMapping) {\n\t\t\t\t\t\t\tthis._applySemanticObjectMappings(oSelectionVariant, vSemanticObjectMapping);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// 6. remove technical parameters from Selection Variant\n\t\t\t\t\t\tthis._removeTechnicalParameters(oSelectionVariant);\n\n\t\t\t\t\t\t// 7. check if programming model is sticky and page is editable\n\t\t\t\t\t\tlet sNavMode: string | undefined = oController._intentBasedNavigation.getNavigationMode();\n\n\t\t\t\t\t\t// 8. Updating refresh strategy in internal model\n\t\t\t\t\t\tconst mRefreshStrategies = (navigationParameters && navigationParameters.refreshStrategies) || {},\n\t\t\t\t\t\t\toInternalModel = oView.getModel(\"internal\");\n\t\t\t\t\t\tif (oInternalModel) {\n\t\t\t\t\t\t\tif ((oView && oView.getViewData()).refreshStrategyOnAppRestore) {\n\t\t\t\t\t\t\t\tconst mViewRefreshStrategies = oView.getViewData().refreshStrategyOnAppRestore || {};\n\t\t\t\t\t\t\t\tmergeObjects(mRefreshStrategies, mViewRefreshStrategies);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tconst mRefreshStrategy = KeepAliveHelper.getRefreshStrategyForIntent(\n\t\t\t\t\t\t\t\tmRefreshStrategies,\n\t\t\t\t\t\t\t\tsemanticObject,\n\t\t\t\t\t\t\t\taction\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (mRefreshStrategy) {\n\t\t\t\t\t\t\t\toInternalModel.setProperty(\"/refreshStrategyOnAppRestore\", mRefreshStrategy);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// 9. Check if navMode parameter is set and use it\n\t\t\t\t\t\tsNavMode = navigationParameters?.navMode ? navigationParameters?.navMode : sNavMode;\n\n\t\t\t\t\t\t// 10. Navigate via NavigationHandler\n\t\t\t\t\t\tconst onError = function (): void {\n\t\t\t\t\t\t\tsap.ui.require([\"sap/m/MessageBox\"], function (MessageBoxClass: typeof MessageBox) {\n\t\t\t\t\t\t\t\tconst oResourceBundle = Library.getResourceBundleFor(\"sap.fe.core\")!;\n\t\t\t\t\t\t\t\tMessageBoxClass.error(oResourceBundle.getText(\"C_COMMON_HELPER_NAVIGATION_ERROR_MESSAGE\"), {\n\t\t\t\t\t\t\t\t\ttitle: oResourceBundle.getText(\"C_COMMON_SAPFE_ERROR\")\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t};\n\t\t\t\t\t\tthis._oNavigationService.navigate(\n\t\t\t\t\t\t\tsemanticObject,\n\t\t\t\t\t\t\taction,\n\t\t\t\t\t\t\toSelectionVariant.toJSONString(),\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\tonError,\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\tsNavMode\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new Error(\"Semantic Object/action is not provided\");\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tif (source?.data(\"debounce\")) return; //debouncing the IBN navigation\n\t\t\t\tsource?.data(\"debounce\", true);\n\t\t\t\tconst oBindingContext = this.base.getView().getBindingContext();\n\t\t\t\tconst oMetaModel = oBindingContext && oBindingContext.getModel().getMetaModel();\n\t\t\t\tif (\n\t\t\t\t\tthis.base.getView().getViewData().converterType === \"ObjectPage\" &&\n\t\t\t\t\toMetaModel &&\n\t\t\t\t\t!ModelHelper.isStickySessionSupported(oMetaModel) &&\n\t\t\t\t\t!(navigationParameters?.navMode === \"explace\")\n\t\t\t\t) {\n\t\t\t\t\tdraft.processDataLossOrDraftDiscardConfirmation(\n\t\t\t\t\t\t_doNavigate.bind(this),\n\t\t\t\t\t\tFunction.prototype,\n\t\t\t\t\t\tthis.base.getView().getBindingContext(),\n\t\t\t\t\t\tthis.base.getView().getController(),\n\t\t\t\t\t\tfalse,\n\t\t\t\t\t\tdraft.NavigationType.ForwardNavigation\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\t_doNavigate();\n\t\t\t\t}\n\t\t\t\tsource?.data(\"debounce\", false);\n\t\t\t}\n\t\t} finally {\n\t\t\tthis.navigationAlreadyStarted = false;\n\t\t}\n\t}\n\n\t/**\n\t * Prepare attributes to be passed to external navigation.\n\t * @param oSemanticAttributes Context data after removing all sensitive information.\n\t * @param oContext Actual context from which the semanticAttributes were derived.\n\t * @returns Object of prepared attributes for external navigation and no conflict properties.\n\t */\n\t@publicExtension()\n\t@finalExtension()\n\tprepareContextForExternalNavigation(\n\t\toSemanticAttributes: Record<string, unknown>,\n\t\toContext: Context\n\t): { semanticAttributes: unknown; propertiesWithoutConflict: Record<string, string> } {\n\t\t// 1. Find all distinct keys in the object SemanticAttributes\n\t\t// Store meta path for each occurence of the key\n\t\tconst oDistinctKeys: Record<string, string[]> = {},\n\t\t\tsContextPath = oContext.getPath(),\n\t\t\toMetaModel = oContext.getModel().getMetaModel() as ODataMetaModel,\n\t\t\tsMetaPath = oMetaModel.getMetaPath(sContextPath),\n\t\t\taMetaPathParts = sMetaPath.split(\"/\").filter(Boolean);\n\n\t\tfunction _findDistinctKeysInObject(LookUpObject: Record<string, unknown>, sLookUpObjectMetaPath: string): void {\n\t\t\tfor (const sKey in LookUpObject) {\n\t\t\t\t// null case??\n\t\t\t\tif (LookUpObject[sKey] === null || typeof LookUpObject[sKey] !== \"object\") {\n\t\t\t\t\tif (!oDistinctKeys[sKey]) {\n\t\t\t\t\t\t// if key is found for the first time then create array\n\t\t\t\t\t\toDistinctKeys[sKey] = [];\n\t\t\t\t\t}\n\t\t\t\t\t// push path to array\n\t\t\t\t\toDistinctKeys[sKey].push(sLookUpObjectMetaPath);\n\t\t\t\t} else {\n\t\t\t\t\t// if a nested object is found\n\t\t\t\t\tconst oNewLookUpObject = LookUpObject[sKey];\n\t\t\t\t\t_findDistinctKeysInObject(oNewLookUpObject as Record<string, unknown>, `${sLookUpObjectMetaPath}/${sKey}`);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t_findDistinctKeysInObject(oSemanticAttributes, sMetaPath);\n\n\t\t// 2. Determine distinct key value and add conflicted paths to semantic attributes\n\t\tconst sMainEntitySetName = aMetaPathParts[0],\n\t\t\tsMainEntityTypeName = oMetaModel.getObject(`/${sMainEntitySetName}/@sapui.name`),\n\t\t\toPropertiesWithoutConflict: Record<string, string> = {};\n\t\tlet sMainEntityValuePath, sCurrentValuePath, sLastValuePath;\n\t\tconst originalContextKeys = Object.keys(oContext.getObject()) || [];\n\t\tconst removedContextKeys = originalContextKeys.filter((key) => !Object.keys(oSemanticAttributes as object).includes(key));\n\t\tfor (const sDistinctKey in oDistinctKeys) {\n\t\t\tif (removedContextKeys.includes(sDistinctKey)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst aConflictingPaths = oDistinctKeys[sDistinctKey];\n\t\t\tlet sWinnerValuePath;\n\t\t\t// Find winner value for each distinct key in case of conflict by the following rule:\n\n\t\t\t// -> A. if any meta path for a distinct key is the same as main entity take that as the value\n\t\t\t// -> B. if A is not met keep the value from the current context (sMetaPath === path of distince key)\n\t\t\t// -> C. if A, B or C are not met take the last path for value\n\t\t\tif (aConflictingPaths.length > 1) {\n\t\t\t\t// conflict\n\t\t\t\tfor (let i = 0; i <= aConflictingPaths.length - 1; i++) {\n\t\t\t\t\tconst sPath = aConflictingPaths[i];\n\t\t\t\t\tlet sPathInContext = sPath.replace(sPath === sMetaPath ? sMetaPath : `${sMetaPath}/`, \"\");\n\t\t\t\t\tsPathInContext = (sPathInContext === \"\" ? sPathInContext : `${sPathInContext}/`) + sDistinctKey;\n\t\t\t\t\tconst sEntityTypeName = oMetaModel.getObject(`${sPath}/@sapui.name`);\n\t\t\t\t\t// rule A\n\n\t\t\t\t\t// rule A\n\t\t\t\t\tif (sEntityTypeName === sMainEntityTypeName) {\n\t\t\t\t\t\tsMainEntityValuePath = sPathInContext;\n\t\t\t\t\t}\n\n\t\t\t\t\t// rule B\n\t\t\t\t\tif (sPath === sMetaPath) {\n\t\t\t\t\t\tsCurrentValuePath = sPathInContext;\n\t\t\t\t\t}\n\n\t\t\t\t\t// rule C\n\t\t\t\t\tsLastValuePath = sPathInContext;\n\n\t\t\t\t\t// add conflicted path to semantic attributes\n\t\t\t\t\t// check if the current path points to main entity and prefix attribute names accordingly\n\t\t\t\t\toSemanticAttributes[\n\t\t\t\t\t\t`${sMetaPath}/${sPathInContext}`\n\t\t\t\t\t\t\t.split(\"/\")\n\t\t\t\t\t\t\t.filter(function (sValue: string) {\n\t\t\t\t\t\t\t\treturn sValue != \"\";\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.join(\".\")\n\t\t\t\t\t] = oContext.getProperty(sPathInContext);\n\t\t\t\t}\n\t\t\t\t// A || B || C\n\t\t\t\tsWinnerValuePath = sMainEntityValuePath || sCurrentValuePath || sLastValuePath;\n\t\t\t\toSemanticAttributes[sDistinctKey] = oContext.getProperty(sWinnerValuePath as string);\n\t\t\t\tsMainEntityValuePath = undefined;\n\t\t\t\tsCurrentValuePath = undefined;\n\t\t\t\tsLastValuePath = undefined;\n\t\t\t} else {\n\t\t\t\t// no conflict, add distinct key without adding paths\n\t\t\t\tconst sPath = aConflictingPaths[0]; // because there is only one and hence no conflict\n\t\t\t\tlet sPathInContext = sPath.replace(sPath === sMetaPath ? sMetaPath : `${sMetaPath}/`, \"\");\n\t\t\t\tsPathInContext = (sPathInContext === \"\" ? sPathInContext : `${sPathInContext}/`) + sDistinctKey;\n\t\t\t\toSemanticAttributes[sDistinctKey] = oContext.getProperty(sPathInContext);\n\t\t\t\toPropertiesWithoutConflict[sDistinctKey] = `${sMetaPath}/${sPathInContext}`\n\t\t\t\t\t.split(\"/\")\n\t\t\t\t\t.filter(function (sValue: string) {\n\t\t\t\t\t\treturn sValue != \"\";\n\t\t\t\t\t})\n\t\t\t\t\t.join(\".\");\n\t\t\t}\n\t\t}\n\t\t// 3. Remove all Navigation properties\n\t\tfor (const sProperty in oSemanticAttributes) {\n\t\t\tif (oSemanticAttributes[sProperty] !== null && typeof oSemanticAttributes[sProperty] === \"object\") {\n\t\t\t\tdelete oSemanticAttributes[sProperty];\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\tsemanticAttributes: oSemanticAttributes,\n\t\t\tpropertiesWithoutConflict: oPropertiesWithoutConflict\n\t\t};\n\t}\n\n\t/**\n\t * Get Navigation mode.\n\t * @returns The navigation mode\n\t */\n\t@publicExtension()\n\t@extensible(OverrideExecution.Instead)\n\tgetNavigationMode(): undefined {\n\t\treturn undefined;\n\t}\n\n\t/**\n\t * Allows for navigation to a given intent (SemanticObject-Action) with the provided context, using a dialog that shows the contexts which cannot be passed\n\t * If semantic object mapping is provided, this setting is also applied to the selection variant after adaptation by a consumer.\n\t * This setting also removes any technical parameters and determines if an inplace or explace navigation should take place.\n\t * @param sSemanticObject Semantic object for the target app\n\t * @param sAction  Action for the target app\n\t * @param [mNavigationParameters] Optional parameters to be passed to the external navigation\n\t * @param source\n\t */\n\t@publicExtension()\n\t@finalExtension()\n\tasync navigateWithConfirmationDialog(\n\t\tsSemanticObject: string,\n\t\tsAction: string,\n\t\tmNavigationParameters?: NavigationParameters,\n\t\tsource?: Control\n\t): Promise<void> {\n\t\tlet shouldContinue = true;\n\t\tif (source?.data(\"debounce\")) return; //debouncing the IBN navigation\n\t\tsource?.data(\"debounce\", true);\n\t\tif (mNavigationParameters?.notApplicableContexts && mNavigationParameters.notApplicableContexts?.length >= 1) {\n\t\t\tconst metaModel = this.base.getView().getModel().getMetaModel();\n\t\t\tconst entitySetPath = metaModel.getMetaPath(mNavigationParameters.notApplicableContexts[0].getPath());\n\t\t\tconst convertedMetadata = convertTypes(metaModel);\n\t\t\tconst entitySet = convertedMetadata.resolvePath<EntitySet>(entitySetPath).target!;\n\t\t\t// Show the contexts that are not applicable and will not therefore be processed\n\t\t\tconst notApplicableContextsDialog = new NotApplicableContextDialog({\n\t\t\t\ttitle: \"\",\n\t\t\t\tentityType: entitySet.entityType,\n\t\t\t\tresourceModel: getResourceModel(this.getView()),\n\t\t\t\tnotApplicableContexts: mNavigationParameters.notApplicableContexts,\n\t\t\t\tapplicableContexts: mNavigationParameters?.applicableContexts ?? [],\n\t\t\t\tentitySet: entitySet.name,\n\t\t\t\tactionName: sAction\n\t\t\t});\n\t\t\tmNavigationParameters.navigationContexts = mNavigationParameters.applicableContexts;\n\t\t\tshouldContinue = await notApplicableContextsDialog.open(this.getView());\n\t\t}\n\t\tif (shouldContinue) {\n\t\t\tthis.navigate(sSemanticObject, sAction, mNavigationParameters);\n\t\t}\n\t\tsource?.data(\"debounce\", false);\n\t}\n\n\t_removeTechnicalParameters(oSelectionVariant: SelectionVariant): void {\n\t\toSelectionVariant.removeSelectOption(\"@odata.context\");\n\t\toSelectionVariant.removeSelectOption(\"@odata.metadataEtag\");\n\t\toSelectionVariant.removeSelectOption(\"SAP__Messages\");\n\t}\n\n\t/**\n\t * Get targeted Entity set.\n\t * @returns Entity set name\n\t */\n\t@privateExtension()\n\tgetEntitySet(): string {\n\t\treturn this._oView.getViewData().entitySet!;\n\t}\n\n\t/**\n\t * Removes sensitive data from the semantic attribute with respect to the entitySet.\n\t * @param oAttributes Context data\n\t * @param sMetaPath Meta path to reach the entitySet in the MetaModel\n\t * @param metaModel MetaModel\n\t * @returns Array of semantic Attributes\n\t */\n\t// TO-DO add unit tests for this function in the controller extension qunit.\n\t@publicExtension()\n\t@finalExtension()\n\tremoveSensitiveData<T extends Record<string, unknown> | unknown[]>(oAttributes: T, sMetaPath: string, metaModel?: ODataMetaModel): T {\n\t\tif (oAttributes) {\n\t\t\tconst { transAggregations, customAggregates } = this._getAggregates(\n\t\t\t\tsMetaPath,\n\t\t\t\tthis.base.getView(),\n\t\t\t\tthis.base.getAppComponent().getDiagnostics()\n\t\t\t);\n\t\t\tconst aProperties = Object.keys(oAttributes);\n\t\t\tif (!Array.isArray(oAttributes) && aProperties.length) {\n\t\t\t\tdelete oAttributes[\"@odata.context\"];\n\t\t\t\tdelete oAttributes[\"@odata.metadataEtag\"];\n\t\t\t\tdelete oAttributes[\"SAP__Messages\"];\n\t\t\t\tfor (const element of aProperties) {\n\t\t\t\t\tif (oAttributes[element] && typeof oAttributes[element] === \"object\") {\n\t\t\t\t\t\tthis.removeSensitiveData(oAttributes[element] as Record<string, unknown>, `${sMetaPath}/${element}`, metaModel);\n\t\t\t\t\t}\n\t\t\t\t\tif (element.includes(\"@odata.type\")) {\n\t\t\t\t\t\tdelete oAttributes[element];\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tthis._deleteAggregates([...transAggregations, ...customAggregates], element, oAttributes);\n\t\t\t\t\tconst aPropertyAnnotations = this._getPropertyAnnotations(\n\t\t\t\t\t\telement,\n\t\t\t\t\t\tsMetaPath,\n\t\t\t\t\t\toAttributes,\n\t\t\t\t\t\tmetaModel || this._oMetaModel\n\t\t\t\t\t);\n\t\t\t\t\tif (aPropertyAnnotations) {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\taPropertyAnnotations.PersonalData?.IsPotentiallySensitive ||\n\t\t\t\t\t\t\taPropertyAnnotations.UI?.ExcludeFromNavigationContext ||\n\t\t\t\t\t\t\taPropertyAnnotations.Analytics?.Measure\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tdelete oAttributes[element];\n\t\t\t\t\t\t} else if (aPropertyAnnotations.Common?.FieldControl) {\n\t\t\t\t\t\t\tconst oFieldControl = aPropertyAnnotations.Common.FieldControl as unknown as {\n\t\t\t\t\t\t\t\t$EnumMember?: string;\n\t\t\t\t\t\t\t\t$Path?: string;\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t(oFieldControl[\"$EnumMember\"] && oFieldControl[\"$EnumMember\"].split(\"/\")[1] === \"Inapplicable\") ||\n\t\t\t\t\t\t\t\t(oFieldControl[\"$Path\"] && this._isFieldControlPathInapplicable(oFieldControl[\"$Path\"], oAttributes))\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tdelete oAttributes[element];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn oAttributes;\n\t}\n\n\t/**\n\t * Remove the attribute from navigation data if it is a measure.\n\t * @param aggregates Array of Aggregates\n\t * @param sProp Attribute name\n\t * @param oAttributes SemanticAttributes\n\t */\n\t_deleteAggregates(aggregates: string[] | undefined, sProp: string, oAttributes: Record<string, unknown>): void {\n\t\tif (aggregates && aggregates.includes(sProp)) {\n\t\t\tdelete oAttributes[sProp];\n\t\t}\n\t}\n\n\t/**\n\t * Returns the property annotations.\n\t * @param sProp\n\t * @param sMetaPath\n\t * @param oAttributes\n\t * @param oMetaModel\n\t * @returns - The property annotations\n\t */\n\t_getPropertyAnnotations(\n\t\tsProp: string,\n\t\tsMetaPath: string,\n\t\toAttributes: Record<string, unknown>,\n\t\toMetaModel: ODataMetaModel\n\t): PropertyAnnotations | null | undefined {\n\t\tif (oAttributes[sProp] && sMetaPath && !sMetaPath.includes(\"undefined\")) {\n\t\t\tconst oContext = oMetaModel.createBindingContext(`${sMetaPath}/${sProp}`) as ODataV4Context;\n\t\t\tconst oFullContext = MetaModelConverter.getInvolvedDataModelObjects<Property>(oContext);\n\t\t\treturn oFullContext?.targetObject?.annotations;\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t * Returns the aggregates part of the EntitySet or EntityType.\n\t * @param sMetaPath\n\t * @param oView\n\t * @param oDiagnostics\n\t * @returns - The aggregates\n\t */\n\t_getAggregates(\n\t\tsMetaPath: string,\n\t\toView: FEView,\n\t\toDiagnostics: Diagnostics\n\t): { transAggregations: string[]; customAggregates: string[] } {\n\t\tconst converterContext = this._getConverterContext(sMetaPath, oView, oDiagnostics);\n\t\tconst aggregationHelper = new AggregationHelper(converterContext.getEntityType(), converterContext);\n\t\tconst isAnalyticsSupported = aggregationHelper.isAnalyticsSupported();\n\t\tlet transAggregations: string[], customAggregates;\n\t\tif (isAnalyticsSupported) {\n\t\t\tconst transAggregationsPreprocessing = aggregationHelper.getTransAggregations();\n\t\t\tif (transAggregationsPreprocessing?.length) {\n\t\t\t\ttransAggregations = transAggregationsPreprocessing.map((transAgg) => {\n\t\t\t\t\treturn (transAgg.Name as string) || (transAgg as unknown as { Value: string }).Value;\n\t\t\t\t});\n\t\t\t}\n\t\t\tcustomAggregates = aggregationHelper.getCustomAggregateDefinitions();\n\t\t\tif (customAggregates?.length) {\n\t\t\t\tcustomAggregates = customAggregates.map((customAggregate) => {\n\t\t\t\t\treturn customAggregate.qualifier;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\ttransAggregations ??= [];\n\t\tcustomAggregates = customAggregates ? (customAggregates as string[]) : [];\n\t\treturn { transAggregations, customAggregates };\n\t}\n\n\t/**\n\t * Returns converterContext.\n\t * @param sMetaPath\n\t * @param oView\n\t * @param oDiagnostics\n\t * @returns - ConverterContext\n\t */\n\t_getConverterContext(sMetaPath: string, oView: FEView, oDiagnostics: Diagnostics): ConverterContext<PageContextPathTarget> {\n\t\tconst oViewData = oView.getViewData();\n\t\tlet sEntitySet = oViewData.entitySet;\n\t\tconst sContextPath = oViewData.contextPath;\n\t\tif (sContextPath && (!sEntitySet || sEntitySet.includes(\"/\"))) {\n\t\t\tsEntitySet = oViewData?.fullContextPath.split(\"/\")[1];\n\t\t}\n\t\treturn CommonUtils.getConverterContextForPath(sMetaPath, oView.getModel().getMetaModel(), sEntitySet!, oDiagnostics);\n\t}\n\n\t/**\n\t * Check if path-based FieldControl evaluates to inapplicable.\n\t * @param sFieldControlPath Field control path\n\t * @param oAttribute SemanticAttributes\n\t * @returns `true` if inapplicable\n\t */\n\t_isFieldControlPathInapplicable(sFieldControlPath: string, oAttribute: Record<string, unknown>): boolean {\n\t\tlet bInapplicable = false;\n\t\tconst aParts = sFieldControlPath.split(\"/\");\n\t\t// sensitive data is removed only if the path has already been resolved.\n\t\tif (aParts.length > 1) {\n\t\t\tbInapplicable = !!(\n\t\t\t\toAttribute[aParts[0]] &&\n\t\t\t\t(oAttribute[aParts[0]] as object).hasOwnProperty(aParts[1]) &&\n\t\t\t\t(oAttribute[aParts[0]] as Record<string, number>)[aParts[1]] === 0\n\t\t\t);\n\t\t} else {\n\t\t\tbInapplicable = oAttribute[sFieldControlPath] === 0;\n\t\t}\n\t\treturn bInapplicable;\n\t}\n\n\t/**\n\t * Method to replace Local Properties with Semantic Object mappings.\n\t * @param oSelectionVariant SelectionVariant consisting of filterbar, Table and Page Context\n\t * @param vMappings A string representation of semantic object mapping\n\t * @returns - Modified SelectionVariant with LocalProperty replaced with SemanticObjectProperties.\n\t */\n\t_applySemanticObjectMappings(oSelectionVariant: SelectionVariant, vMappings: object | string): SelectionVariant {\n\t\tconst oMappings = typeof vMappings === \"string\" ? JSON.parse(vMappings) : vMappings;\n\t\tfor (const item of oMappings) {\n\t\t\tconst sLocalProperty =\n\t\t\t\t(item[\"LocalProperty\"] && item[\"LocalProperty\"][\"$PropertyPath\"]) ||\n\t\t\t\t(item[\"@com.sap.vocabularies.Common.v1.LocalProperty\"] && item[\"@com.sap.vocabularies.Common.v1.LocalProperty\"][\"$Path\"]);\n\t\t\tconst sSemanticObjectProperty =\n\t\t\t\titem[\"SemanticObjectProperty\"] || item[\"@com.sap.vocabularies.Common.v1.SemanticObjectProperty\"];\n\t\t\tconst oSelectOption = oSelectionVariant.getSelectOption(sLocalProperty);\n\t\t\tif (oSelectOption && sLocalProperty !== sSemanticObjectProperty) {\n\t\t\t\t//remove the selectOption to be overwritten then rename the one coming from the local property\n\t\t\t\toSelectionVariant.removeSelectOption(sSemanticObjectProperty);\n\t\t\t\toSelectionVariant.renameSelectOption(sLocalProperty, sSemanticObjectProperty);\n\t\t\t}\n\t\t}\n\t\treturn oSelectionVariant;\n\t}\n\n\t/**\n\t * Method to store the focusInformation to the history object.\n\t */\n\tprotected storeFocusInfoInHistory(): void {\n\t\tlet focusInfo = null;\n\t\tconst focusControl = Element.getActiveElement();\n\t\tconst focusControlId = focusControl?.getId();\n\t\tconst focusMDCTable = focusControl && FPMHelper.getMdcTable(focusControl);\n\t\tif (focusControl?.isA(\"sap.m.Button\")) {\n\t\t\tfocusInfo = {\n\t\t\t\ttype: \"Control\",\n\t\t\t\tcontrolId: focusControlId\n\t\t\t};\n\t\t} else if (focusMDCTable) {\n\t\t\tfocusInfo = {\n\t\t\t\ttype: \"Row\",\n\t\t\t\ttableId: focusMDCTable.getId(),\n\t\t\t\tcontextPathFocus: focusControl.getBindingContext()?.getPath()\n\t\t\t};\n\t\t}\n\t\thistory.replaceState(Object.assign({}, history.state, { focusInfo: focusInfo }), \"\");\n\t}\n\n\t/**\n\t * Navigates to an Outbound provided in the manifest.\n\t * @param sOutbound Identifier to location the outbound in the manifest\n\t * @param mNavigationParameters Optional map containing key/value pairs to be passed to the intent\n\t * @since 1.86.0\n\t */\n\t@publicExtension()\n\t@finalExtension()\n\tnavigateOutbound(sOutbound: string, mNavigationParameters?: Record<string, unknown | unknown[]>): void {\n\t\tthis.storeFocusInfoInHistory();\n\t\tlet aNavParams: Record<string, string>[] | undefined;\n\t\tconst oManifestEntry = this.base.getAppComponent().getManifestEntry(\"sap.app\"),\n\t\t\toOutbound = oManifestEntry.crossNavigation?.outbounds?.[sOutbound];\n\t\tif (!oOutbound) {\n\t\t\tLog.error(\"Outbound is not defined in manifest!!\");\n\t\t\treturn;\n\t\t}\n\t\tconst sSemanticObject = oOutbound.semanticObject,\n\t\t\tsAction = oOutbound.action,\n\t\t\toutboundParams = oOutbound.parameters && this.getOutboundParams(oOutbound.parameters);\n\n\t\tif (mNavigationParameters) {\n\t\t\taNavParams = [];\n\t\t\tObject.keys(mNavigationParameters).forEach(function (key: string) {\n\t\t\t\tlet oParams: Record<string, string>;\n\t\t\t\tconst navParameterValue = mNavigationParameters![key];\n\t\t\t\tif (Array.isArray(navParameterValue)) {\n\t\t\t\t\tfor (const item of navParameterValue) {\n\t\t\t\t\t\toParams = {};\n\t\t\t\t\t\toParams[key] = item;\n\t\t\t\t\t\taNavParams?.push(oParams);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\toParams = {};\n\t\t\t\t\toParams[key] = navParameterValue as string;\n\t\t\t\t\taNavParams?.push(oParams);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tif (aNavParams || outboundParams) {\n\t\t\tmNavigationParameters = {\n\t\t\t\tnavigationContexts: {\n\t\t\t\t\tdata: aNavParams || outboundParams\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\tthis.base._intentBasedNavigation.navigate(sSemanticObject, sAction, mNavigationParameters);\n\t}\n\n\t/**\n\t * Method to apply outbound parameters defined in the manifest.\n\t * @param oSelectionVariant SelectionVariant consisting of a filter bar, a table, and a page context\n\t * @param vOutboundParams Outbound Properties defined in the manifest\n\t * @returns - The modified SelectionVariant with outbound parameters.\n\t */\n\t_applyOutboundParams(oSelectionVariant: SelectionVariant, vOutboundParams: Record<string, string>): SelectionVariant {\n\t\tconst aParameters = Object.keys(vOutboundParams);\n\t\tconst aSelectProperties = oSelectionVariant.getSelectOptionsPropertyNames();\n\t\taParameters.forEach(function (key: string) {\n\t\t\tif (!aSelectProperties.includes(key)) {\n\t\t\t\toSelectionVariant.addSelectOption(key, \"I\", \"EQ\", vOutboundParams[key]);\n\t\t\t}\n\t\t});\n\t\treturn oSelectionVariant;\n\t}\n\n\t/**\n\t * Method to get the outbound parameters defined in the manifest.\n\t * @param oOutboundParams Parameters defined in the outbounds. Only \"plain\" is supported\n\t * @returns Parameters with the key-Value pair\n\t */\n\t@publicExtension()\n\t@finalExtension()\n\tgetOutboundParams(oOutboundParams: Record<string, ManifestOutboundEntryParameter>): Record<string, string> {\n\t\tconst oParamsMapping: Record<string, string> = {};\n\t\tif (oOutboundParams) {\n\t\t\tconst aParameters = Object.keys(oOutboundParams) || [];\n\t\t\tif (aParameters.length > 0) {\n\t\t\t\taParameters.forEach(function (key: string) {\n\t\t\t\t\tconst oMapping = oOutboundParams[key];\n\t\t\t\t\tif (oMapping.value && oMapping.value.value && oMapping.value.format === \"plain\") {\n\t\t\t\t\t\tif (!oParamsMapping[key]) {\n\t\t\t\t\t\t\toParamsMapping[key] = oMapping.value.value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\treturn oParamsMapping;\n\t}\n\n\t/**\n\t * Triggers an outbound navigation when a user chooses the chevron.\n\t * @param {object} oController\n\t * @param {string} sOutboundTarget Name of the outbound target (needs to be defined in the manifest)\n\t * @param oContext The context that contains the data for the target app\n\t * @param {string} sCreatePath Create path when the chevron is created.\n\t * @param {string} navMode Opens in new tab or window when set to 'explace'.\n\t * @returns {Promise} Promise which is resolved once the navigation is triggered\n\t */\n\n\t@publicExtension()\n\t@finalExtension()\n\tasync onChevronPressNavigateOutBound(\n\t\toController: PageController,\n\t\tsOutboundTarget: string,\n\t\toContext: ODataV4Context | ODataV4Context[] | undefined,\n\t\tsCreatePath: string,\n\t\tnavMode?: string\n\t): Promise<void> {\n\t\tconst oOutbounds = oController.getAppComponent().getRoutingService().getOutbounds();\n\t\tconst oDisplayOutbound = oOutbounds[sOutboundTarget];\n\t\tlet additionalNavigationParameters;\n\t\tif (oDisplayOutbound && oDisplayOutbound.semanticObject && oDisplayOutbound.action) {\n\t\t\tconst oRefreshStrategies: RefreshStrategies = {\n\t\t\t\tintents: {}\n\t\t\t};\n\t\t\tconst oDefaultRefreshStrategy: SORefreshStrategy = {};\n\t\t\tlet sMetaPath: string;\n\t\t\tlet navigationContexts: ODataV4Context[] = [];\n\t\t\tif (oContext) {\n\t\t\t\tif (Array.isArray(oContext)) {\n\t\t\t\t\tnavigationContexts = oContext;\n\t\t\t\t\tsMetaPath = ModelHelper.getMetaPathForContext(oContext[0]);\n\t\t\t\t} else if (oContext.isA && oContext.isA<ODataV4Context>(\"sap.ui.model.odata.v4.Context\")) {\n\t\t\t\t\tsMetaPath = ModelHelper.getMetaPathForContext(oContext);\n\t\t\t\t\tnavigationContexts = [oContext];\n\t\t\t\t}\n\t\t\t\toDefaultRefreshStrategy[sMetaPath!] = RefreshStrategyType.Self;\n\t\t\t\toRefreshStrategies._feDefault = oDefaultRefreshStrategy;\n\t\t\t}\n\n\t\t\tif (sCreatePath) {\n\t\t\t\tconst sKey = `${oDisplayOutbound.semanticObject}-${oDisplayOutbound.action}`;\n\t\t\t\toRefreshStrategies.intents![sKey] = {};\n\t\t\t\toRefreshStrategies.intents![sKey]![sCreatePath] = RefreshStrategyType.Self;\n\t\t\t}\n\t\t\tif (oDisplayOutbound && oDisplayOutbound.parameters) {\n\t\t\t\tconst oParams = oDisplayOutbound.parameters && this.getOutboundParams(oDisplayOutbound.parameters);\n\t\t\t\tif (Object.keys(oParams).length > 0) {\n\t\t\t\t\tadditionalNavigationParameters = oParams;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\toController._intentBasedNavigation.navigate(oDisplayOutbound.semanticObject, oDisplayOutbound.action, {\n\t\t\t\tnavigationContexts: navigationContexts,\n\t\t\t\trefreshStrategies: oRefreshStrategies,\n\t\t\t\tadditionalNavigationParameters: additionalNavigationParameters,\n\t\t\t\tnavMode: navMode\n\t\t\t});\n\n\t\t\t//TODO: check why returning a promise is required\n\t\t\treturn Promise.resolve();\n\t\t} else {\n\t\t\tthrow new Error(`outbound target ${sOutboundTarget} not found in cross navigation definition of manifest`);\n\t\t}\n\t}\n\n\t/**\n\t * Process the semantic attributes based on the navigation properties.\n\t * @param context Context\n\t * @param semanticAttributes Semantic attributes\n\t * @param pathsToRetain Navigation properties to be retained in case of links\n\t * @returns Processed semantic attributes\n\t */\n\tprocessSemanticAttributes(\n\t\tcontext: Context,\n\t\tsemanticAttributes: Record<string, unknown>,\n\t\tpathsToRetain?: Array<string>\n\t): Record<string, unknown> {\n\t\tconst bKeepNavProperties = this.keepNavigationPropertiesForNavigation();\n\t\tif (!bKeepNavProperties) {\n\t\t\treturn this.getSemanticAttributesWithoutNavigationProperties(context, pathsToRetain);\n\t\t} else {\n\t\t\treturn semanticAttributes;\n\t\t}\n\t}\n\n\t/**\n\t * Check if navigation properties has to be considered for the external navigation.\n\t * @returns `true` if navigation properties has to be considered\n\t */\n\t@publicExtension()\n\t@finalExtension()\n\tkeepNavigationPropertiesForNavigation(): boolean {\n\t\tlet bKeepNavProperties = false;\n\t\tconst manifest = this.base.getAppComponent().getManifestEntry(\"sap.fe\");\n\t\tbKeepNavProperties = manifest?.app?.considerNavigationPropertiesForExternalNavigation || false;\n\t\treturn bKeepNavProperties;\n\t}\n\n\t/**\n\t * Get semantic attributes from context.\n\t * @param context Context\n\t * @param pathsToRetain Navigation properties to be retained in case of links\n\t * @returns Semantic Attributes\n\t */\n\t@publicExtension()\n\t@finalExtension()\n\tgetSemanticAttributesWithoutNavigationProperties(context: Context, pathsToRetain?: Array<string>): Record<string, unknown> {\n\t\tconst metaModel = context.getModel().getMetaModel() as ODataMetaModel,\n\t\t\tcontextPath = context.getPath(),\n\t\t\tmetaPath = metaModel.getMetaPath(contextPath),\n\t\t\tret = context.getObject();\n\t\tconst navProperties = this.getNavigationPropertiesFromEntityType(metaModel, metaPath);\n\t\tif (navProperties && navProperties.length > 0) {\n\t\t\tnavProperties.forEach((navProp: NavigationProperty) => {\n\t\t\t\tconst navPropName = navProp.name;\n\t\t\t\tif (Array.isArray(pathsToRetain) && pathsToRetain.length > 0) {\n\t\t\t\t\t// We consider 1.1 navigation properties which are used for rendering the semantic links to be passed as part of context\n\t\t\t\t\tif (ret.hasOwnProperty(navPropName) && ret[navPropName]) {\n\t\t\t\t\t\tObject.keys(ret[navPropName]).forEach(function (key: string) {\n\t\t\t\t\t\t\tconst propertyPath = `${navPropName}/${key}`;\n\t\t\t\t\t\t\tif (!pathsToRetain?.includes(propertyPath) && ret[navPropName].hasOwnProperty(key)) {\n\t\t\t\t\t\t\t\tdelete ret[navPropName][key];\n\t\t\t\t\t\t\t\tif (Object.keys(ret[navPropName]).length === 0) {\n\t\t\t\t\t\t\t\t\tdelete ret[navPropName];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdelete ret[navPropName];\n\t\t\t\t\t}\n\t\t\t\t} else if (ret.hasOwnProperty(navPropName)) {\n\t\t\t\t\tdelete ret[navPropName];\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn ret;\n\t}\n\n\t/**\n\t * Retrieve the navigation properties from entityType using metamodel.\n\t * @param metaModel MetaModel\n\t * @param metaPath MetaPath\n\t * @returns Navigation properties\n\t */\n\tgetNavigationPropertiesFromEntityType(metaModel: ODataMetaModel, metaPath: string): NavigationProperty[] {\n\t\tconst convertedMetadata = convertTypes(metaModel);\n\t\tconst entityType = convertedMetadata.resolvePath<EntityType>(`${metaPath}/`).target!;\n\t\treturn entityType?.navigationProperties;\n\t}\n}\n\nexport default InternalIntentBasedNavigation;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;EAoCA;AACA;AACA;EAmCA;AACA;AACA;AACA;EAHA,IAKMA,6BAA6B,IAAAC,IAAA,GADlCC,cAAc,CAAC,kEAAkE,CAAC,EAAAC,KAAA,GAkBjFC,cAAc,CAAC,CAAC,EAAAC,KAAA,GAkChBC,eAAe,CAAC,CAAC,EAAAC,KAAA,GACjBC,cAAc,CAAC,CAAC,EAAAC,KAAA,GAsLhBH,eAAe,CAAC,CAAC,EAAAI,KAAA,GACjBF,cAAc,CAAC,CAAC,EAAAG,KAAA,GAwHhBL,eAAe,CAAC,CAAC,EAAAM,KAAA,GACjBC,UAAU,CAACC,iBAAiB,CAACC,OAAO,CAAC,EAAAC,KAAA,GAcrCV,eAAe,CAAC,CAAC,EAAAW,MAAA,GACjBT,cAAc,CAAC,CAAC,EAAAU,MAAA,GA4ChBC,gBAAgB,CAAC,CAAC,EAAAC,MAAA,GAalBd,eAAe,CAAC,CAAC,EAAAe,MAAA,GACjBb,cAAc,CAAC,CAAC,EAAAc,MAAA,GAuNhBhB,eAAe,CAAC,CAAC,EAAAiB,MAAA,GACjBf,cAAc,CAAC,CAAC,EAAAgB,MAAA,GAgEhBlB,eAAe,CAAC,CAAC,EAAAmB,MAAA,GACjBjB,cAAc,CAAC,CAAC,EAAAkB,MAAA,GA6BhBpB,eAAe,CAAC,CAAC,EAAAqB,MAAA,GACjBnB,cAAc,CAAC,CAAC,EAAAoB,MAAA,GAgFhBtB,eAAe,CAAC,CAAC,EAAAuB,MAAA,GACjBrB,cAAc,CAAC,CAAC,EAAAsB,MAAA,GAchBxB,eAAe,CAAC,CAAC,EAAAyB,MAAA,GACjBvB,cAAc,CAAC,CAAC,EAAAP,IAAA,CAAA+B,MAAA,IAAAC,OAAA,0BAAAC,oBAAA;IAvzBjB,SAAAlC,8BAAA,EAAc;MAAA,OACbkC,oBAAA,CAAAC,IAAA,KAAM,CAAC;IACR;IAACC,cAAA,CAAApC,6BAAA,EAAAkC,oBAAA;IAAA,IAAAG,MAAA,GAAArC,6BAAA,CAAAsC,SAAA;IAAAD,MAAA,CAGDE,MAAM,GADN,SACAA,MAAMA,CAAA,EAAS;MACd,IAAI,CAACC,cAAc,GAAG,IAAI,CAACC,IAAI,CAACC,eAAe,CAAC,CAAC;MACjD,IAAI,CAACC,WAAW,GAAG,IAAI,CAACH,cAAc,CAACI,QAAQ,CAAC,CAAC,CAACC,YAAY,CAAC,CAAC;MAChE,IAAI,CAACC,mBAAmB,GAAG,IAAI,CAACN,cAAc,CAACO,oBAAoB,CAAC,CAAC;MACrE,IAAI,CAACC,MAAM,GAAG,IAAI,CAACP,IAAI,CAACQ,OAAO,CAAC,CAAC;IAClC;;IAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAzBC;IAAAZ,MAAA,CA4BAa,QAAQ,GAFR,SAEAA,QAAQA,CAACC,cAAsB,EAAEC,MAAc,EAAEC,oBAA2C,EAAEC,MAAgB,EAAQ;MACrH,IAAI;QACH,IAAI,IAAI,CAACC,wBAAwB,KAAK,IAAI,EAAE;UAC3C,IAAI,CAACA,wBAAwB,GAAG,IAAI;UACpC,MAAMC,WAAW,GAAGA,CAAA,KAAY;YAC/B,MAAMC,mBAA0D,GAC/DJ,oBAAoB,IAAIA,oBAAoB,CAACK,kBAAkB;YAChE,MAAMC,mBAA4D,GACjEF,mBAAmB,IAAI,CAACG,KAAK,CAACC,OAAO,CAACJ,mBAAmB,CAAC,GAAG,CAACA,mBAAmB,CAAC,GAAGA,mBAAmB;YACzG,MAAMK,sBAAsB,GAAGT,oBAAoB,IAAIA,oBAAoB,CAACU,qBAAqB;cAChGC,eAAe,GAAGX,oBAAoB,IAAIA,oBAAoB,CAACY,8BAA8B;cAC7FC,WAA2G,GAAG;gBAC7Gf,cAAc,EAAEA,cAAc;gBAC9BC,MAAM,EAAEA;cACT,CAAC;cACDe,KAAK,GAAG,IAAI,CAAC1B,IAAI,CAACQ,OAAO,CAAC,CAAC;cAC3BmB,WAAW,GAAGD,KAAK,CAACE,aAAa,CAAC,CAAC;YAEpC,IAAIlB,cAAc,IAAIC,MAAM,EAAE;cAC7B,IAAIkB,mBAA8B,GAAG,EAAE;gBACtCC,iBAAiB,GAAG,IAAIC,gBAAgB,CAAC,CAAC;cAC3C;cACA,IAAIb,mBAAmB,IAAIA,mBAAmB,CAACc,MAAM,EAAE;gBACtDd,mBAAmB,CAACe,OAAO,CAAEC,kBAAkB,IAAK;kBACnD;kBACA;kBACA,MAAMC,2BAA2B,GAAGD,kBAAoC;kBACxE,MAAME,0BAA0B,GAAGF,kBAEvB;kBAEZ,IACCC,2BAA2B,CAACE,GAAG,IAC/BF,2BAA2B,CAACE,GAAG,CAAiB,+BAA+B,CAAC,EAC/E;oBACD;oBACA,IAAIC,mBAAmB,GAAGH,2BAA2B,CAACI,SAAS,CAAC,CAAC;oBACjE,MAAMC,SAAS,GAAG,IAAI,CAACtC,WAAW,CAACuC,WAAW,CAACN,2BAA2B,CAACO,OAAO,CAAC,CAAC,CAAC;oBACrF;oBACA,MAAMC,uBAAuB,GAAG,IAAI,CAACC,yBAAyB,CAC7DT,2BAA2B,EAC3BG,mBACD,CAAC;oBACDA,mBAAmB,GAAG,IAAI,CAACO,mBAAmB,CAACF,uBAAuB,EAAEH,SAAS,CAAC;oBAClF,MAAMM,WAAW,GAAG,IAAI,CAACC,mCAAmC,CAC3DJ,uBAAuB,EACvBR,2BACD,CAAC;oBACDV,WAAW,CAAC,2BAA2B,CAAC,GAAGqB,WAAW,CAACE,yBAAyB;oBAChFnB,mBAAmB,CAACoB,IAAI,CAACH,WAAW,CAACI,kBAAkB,CAAC;kBACzD,CAAC,MAAM,IACNd,0BAA0B,IAC1B,EAAEA,0BAA0B,IAAIjB,KAAK,CAACC,OAAO,CAACgB,0BAA0B,CAACe,IAAI,CAAC,CAAC,IAC/E,OAAOjB,kBAAkB,KAAK,QAAQ,EACrC;oBACD;oBACAL,mBAAmB,CAACoB,IAAI,CACvB,IAAI,CAACJ,mBAAmB,CAACT,0BAA0B,CAACe,IAAI,EAAEf,0BAA0B,CAACgB,QAAQ,CAC9F,CAAC;kBACF,CAAC,MAAM,IAAIhB,0BAA0B,IAAIjB,KAAK,CAACC,OAAO,CAACgB,0BAA0B,CAACe,IAAI,CAAC,EAAE;oBACxF;oBACA;oBACAtB,mBAAmB,GAAG,IAAI,CAACgB,mBAAmB,CAC7CT,0BAA0B,CAACe,IAAI,EAC/Bf,0BAA0B,CAACgB,QAC5B,CAAC;kBACF;gBACD,CAAC,CAAC;cACH;cACA;cACA,IAAIvB,mBAAmB,IAAIA,mBAAmB,CAACG,MAAM,EAAE;gBACtDF,iBAAiB,GAAG,IAAI,CAACzB,mBAAmB,CAACgD,gCAAgC,CAC5ExB,mBAAmB,EACnBC,iBAAiB,CAACwB,YAAY,CAAC,CAChC,CAAC;cACF;;cAEA;cACA,MAAMC,MAAM,GAAG,IAAI,CAAChD,MAAM,CAACJ,QAAQ,CAAC,CAAC;gBACpCqD,UAAU,GAAG,IAAI,CAACC,YAAY,CAAC,CAAC;gBAChCC,WAAW,GAAGF,UAAU,GAAG,IAAI,CAACnD,mBAAmB,CAACsD,mBAAmB,CAACH,UAAU,EAAED,MAAM,CAAC,GAAGK,SAAS;cACxG,IAAIF,WAAW,EAAE;gBAChB5B,iBAAiB,CAAC+B,mBAAmB,CAACH,WAAW,CAAC;cACnD;;cAEA;cACA,IAAInC,eAAe,EAAE;gBACpB,IAAI,CAACuC,oBAAoB,CAAChC,iBAAiB,EAAEP,eAAe,CAAC;cAC9D;;cAEA;cACAI,WAAW,CAACoC,qBAAqB,CAACC,sBAAsB,CAAClC,iBAAiB,EAAEL,WAAW,CAAC;;cAExF;cACA,IAAIJ,sBAAsB,EAAE;gBAC3B,IAAI,CAAC4C,4BAA4B,CAACnC,iBAAiB,EAAET,sBAAsB,CAAC;cAC7E;;cAEA;cACA,IAAI,CAAC6C,0BAA0B,CAACpC,iBAAiB,CAAC;;cAElD;cACA,IAAIqC,QAA4B,GAAGxC,WAAW,CAACyC,sBAAsB,CAACC,iBAAiB,CAAC,CAAC;;cAEzF;cACA,MAAMC,kBAAkB,GAAI1D,oBAAoB,IAAIA,oBAAoB,CAAC2D,iBAAiB,IAAK,CAAC,CAAC;gBAChGC,cAAc,GAAG9C,KAAK,CAACvB,QAAQ,CAAC,UAAU,CAAC;cAC5C,IAAIqE,cAAc,EAAE;gBACnB,IAAI,CAAC9C,KAAK,IAAIA,KAAK,CAAC+C,WAAW,CAAC,CAAC,EAAEC,2BAA2B,EAAE;kBAC/D,MAAMC,sBAAsB,GAAGjD,KAAK,CAAC+C,WAAW,CAAC,CAAC,CAACC,2BAA2B,IAAI,CAAC,CAAC;kBACpFE,YAAY,CAACN,kBAAkB,EAAEK,sBAAsB,CAAC;gBACzD;gBACA,MAAME,gBAAgB,GAAGC,eAAe,CAACC,2BAA2B,CACnET,kBAAkB,EAClB5D,cAAc,EACdC,MACD,CAAC;gBACD,IAAIkE,gBAAgB,EAAE;kBACrBL,cAAc,CAACQ,WAAW,CAAC,8BAA8B,EAAEH,gBAAgB,CAAC;gBAC7E;cACD;;cAEA;cACAV,QAAQ,GAAGvD,oBAAoB,EAAEqE,OAAO,GAAGrE,oBAAoB,EAAEqE,OAAO,GAAGd,QAAQ;;cAEnF;cACA,MAAMe,OAAO,GAAG,SAAAA,CAAA,EAAkB;gBACjCC,GAAG,CAACC,EAAE,CAACC,OAAO,CAAC,CAAC,kBAAkB,CAAC,EAAE,UAAUC,eAAkC,EAAE;kBAClF,MAAMC,eAAe,GAAGC,OAAO,CAACC,oBAAoB,CAAC,aAAa,CAAE;kBACpEH,eAAe,CAACI,KAAK,CAACH,eAAe,CAACI,OAAO,CAAC,0CAA0C,CAAC,EAAE;oBAC1FC,KAAK,EAAEL,eAAe,CAACI,OAAO,CAAC,sBAAsB;kBACtD,CAAC,CAAC;gBACH,CAAC,CAAC;cACH,CAAC;cACD,IAAI,CAACtF,mBAAmB,CAACI,QAAQ,CAChCC,cAAc,EACdC,MAAM,EACNmB,iBAAiB,CAACwB,YAAY,CAAC,CAAC,EAChCM,SAAS,EACTsB,OAAO,EACPtB,SAAS,EACTO,QACD,CAAC;YACF,CAAC,MAAM;cACN,MAAM,IAAI0B,KAAK,CAAC,wCAAwC,CAAC;YAC1D;UACD,CAAC;UACD,IAAIhF,MAAM,EAAEsC,IAAI,CAAC,UAAU,CAAC,EAAE,OAAO,CAAC;UACtCtC,MAAM,EAAEsC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC;UAC9B,MAAM2C,eAAe,GAAG,IAAI,CAAC9F,IAAI,CAACQ,OAAO,CAAC,CAAC,CAACuF,iBAAiB,CAAC,CAAC;UAC/D,MAAMC,UAAU,GAAGF,eAAe,IAAIA,eAAe,CAAC3F,QAAQ,CAAC,CAAC,CAACC,YAAY,CAAC,CAAC;UAC/E,IACC,IAAI,CAACJ,IAAI,CAACQ,OAAO,CAAC,CAAC,CAACiE,WAAW,CAAC,CAAC,CAACwB,aAAa,KAAK,YAAY,IAChED,UAAU,IACV,CAACE,WAAW,CAACC,wBAAwB,CAACH,UAAU,CAAC,IACjD,EAAEpF,oBAAoB,EAAEqE,OAAO,KAAK,SAAS,CAAC,EAC7C;YACDmB,KAAK,CAACC,yCAAyC,CAC9CtF,WAAW,CAACuF,IAAI,CAAC,IAAI,CAAC,EACtBC,QAAQ,CAAC1G,SAAS,EAClB,IAAI,CAACG,IAAI,CAACQ,OAAO,CAAC,CAAC,CAACuF,iBAAiB,CAAC,CAAC,EACvC,IAAI,CAAC/F,IAAI,CAACQ,OAAO,CAAC,CAAC,CAACoB,aAAa,CAAC,CAAC,EACnC,KAAK,EACLwE,KAAK,CAACI,cAAc,CAACC,iBACtB,CAAC;UACF,CAAC,MAAM;YACN1F,WAAW,CAAC,CAAC;UACd;UACAF,MAAM,EAAEsC,IAAI,CAAC,UAAU,EAAE,KAAK,CAAC;QAChC;MACD,CAAC,SAAS;QACT,IAAI,CAACrC,wBAAwB,GAAG,KAAK;MACtC;IACD;;IAEA;AACD;AACA;AACA;AACA;AACA,OALC;IAAAlB,MAAA,CAQAmD,mCAAmC,GAFnC,SAEAA,mCAAmCA,CAClCT,mBAA4C,EAC5CoE,QAAiB,EACoE;MACrF;MACA;MACA,MAAMC,aAAuC,GAAG,CAAC,CAAC;QACjDC,YAAY,GAAGF,QAAQ,CAAChE,OAAO,CAAC,CAAC;QACjCsD,UAAU,GAAGU,QAAQ,CAACvG,QAAQ,CAAC,CAAC,CAACC,YAAY,CAAC,CAAmB;QACjEoC,SAAS,GAAGwD,UAAU,CAACvD,WAAW,CAACmE,YAAY,CAAC;QAChDC,cAAc,GAAGrE,SAAS,CAACsE,KAAK,CAAC,GAAG,CAAC,CAACC,MAAM,CAACC,OAAO,CAAC;MAEtD,SAASC,yBAAyBA,CAACC,YAAqC,EAAEC,qBAA6B,EAAQ;QAC9G,KAAK,MAAMC,IAAI,IAAIF,YAAY,EAAE;UAChC;UACA,IAAIA,YAAY,CAACE,IAAI,CAAC,KAAK,IAAI,IAAI,OAAOF,YAAY,CAACE,IAAI,CAAC,KAAK,QAAQ,EAAE;YAC1E,IAAI,CAACT,aAAa,CAACS,IAAI,CAAC,EAAE;cACzB;cACAT,aAAa,CAACS,IAAI,CAAC,GAAG,EAAE;YACzB;YACA;YACAT,aAAa,CAACS,IAAI,CAAC,CAACnE,IAAI,CAACkE,qBAAqB,CAAC;UAChD,CAAC,MAAM;YACN;YACA,MAAME,gBAAgB,GAAGH,YAAY,CAACE,IAAI,CAAC;YAC3CH,yBAAyB,CAACI,gBAAgB,EAA6B,GAAGF,qBAAqB,IAAIC,IAAI,EAAE,CAAC;UAC3G;QACD;MACD;MAEAH,yBAAyB,CAAC3E,mBAAmB,EAAEE,SAAS,CAAC;;MAEzD;MACA,MAAM8E,kBAAkB,GAAGT,cAAc,CAAC,CAAC,CAAC;QAC3CU,mBAAmB,GAAGvB,UAAU,CAACzD,SAAS,CAAC,IAAI+E,kBAAkB,cAAc,CAAC;QAChFE,0BAAkD,GAAG,CAAC,CAAC;MACxD,IAAIC,oBAAoB,EAAEC,iBAAiB,EAAEC,cAAc;MAC3D,MAAMC,mBAAmB,GAAGC,MAAM,CAACC,IAAI,CAACpB,QAAQ,CAACnE,SAAS,CAAC,CAAC,CAAC,IAAI,EAAE;MACnE,MAAMwF,kBAAkB,GAAGH,mBAAmB,CAACb,MAAM,CAAEiB,GAAG,IAAK,CAACH,MAAM,CAACC,IAAI,CAACxF,mBAA6B,CAAC,CAAC2F,QAAQ,CAACD,GAAG,CAAC,CAAC;MACzH,KAAK,MAAME,YAAY,IAAIvB,aAAa,EAAE;QACzC,IAAIoB,kBAAkB,CAACE,QAAQ,CAACC,YAAY,CAAC,EAAE;UAC9C;QACD;QACA,MAAMC,iBAAiB,GAAGxB,aAAa,CAACuB,YAAY,CAAC;QACrD,IAAIE,gBAAgB;QACpB;;QAEA;QACA;QACA;QACA,IAAID,iBAAiB,CAACnG,MAAM,GAAG,CAAC,EAAE;UACjC;UACA,KAAK,IAAIqG,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIF,iBAAiB,CAACnG,MAAM,GAAG,CAAC,EAAEqG,CAAC,EAAE,EAAE;YACvD,MAAMC,KAAK,GAAGH,iBAAiB,CAACE,CAAC,CAAC;YAClC,IAAIE,cAAc,GAAGD,KAAK,CAACE,OAAO,CAACF,KAAK,KAAK9F,SAAS,GAAGA,SAAS,GAAG,GAAGA,SAAS,GAAG,EAAE,EAAE,CAAC;YACzF+F,cAAc,GAAG,CAACA,cAAc,KAAK,EAAE,GAAGA,cAAc,GAAG,GAAGA,cAAc,GAAG,IAAIL,YAAY;YAC/F,MAAMO,eAAe,GAAGzC,UAAU,CAACzD,SAAS,CAAC,GAAG+F,KAAK,cAAc,CAAC;YACpE;;YAEA;YACA,IAAIG,eAAe,KAAKlB,mBAAmB,EAAE;cAC5CE,oBAAoB,GAAGc,cAAc;YACtC;;YAEA;YACA,IAAID,KAAK,KAAK9F,SAAS,EAAE;cACxBkF,iBAAiB,GAAGa,cAAc;YACnC;;YAEA;YACAZ,cAAc,GAAGY,cAAc;;YAE/B;YACA;YACAjG,mBAAmB,CAClB,GAAGE,SAAS,IAAI+F,cAAc,EAAE,CAC9BzB,KAAK,CAAC,GAAG,CAAC,CACVC,MAAM,CAAC,UAAU2B,MAAc,EAAE;cACjC,OAAOA,MAAM,IAAI,EAAE;YACpB,CAAC,CAAC,CACDC,IAAI,CAAC,GAAG,CAAC,CACX,GAAGjC,QAAQ,CAACkC,WAAW,CAACL,cAAc,CAAC;UACzC;UACA;UACAH,gBAAgB,GAAGX,oBAAoB,IAAIC,iBAAiB,IAAIC,cAAc;UAC9ErF,mBAAmB,CAAC4F,YAAY,CAAC,GAAGxB,QAAQ,CAACkC,WAAW,CAACR,gBAA0B,CAAC;UACpFX,oBAAoB,GAAG7D,SAAS;UAChC8D,iBAAiB,GAAG9D,SAAS;UAC7B+D,cAAc,GAAG/D,SAAS;QAC3B,CAAC,MAAM;UACN;UACA,MAAM0E,KAAK,GAAGH,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC;UACpC,IAAII,cAAc,GAAGD,KAAK,CAACE,OAAO,CAACF,KAAK,KAAK9F,SAAS,GAAGA,SAAS,GAAG,GAAGA,SAAS,GAAG,EAAE,EAAE,CAAC;UACzF+F,cAAc,GAAG,CAACA,cAAc,KAAK,EAAE,GAAGA,cAAc,GAAG,GAAGA,cAAc,GAAG,IAAIL,YAAY;UAC/F5F,mBAAmB,CAAC4F,YAAY,CAAC,GAAGxB,QAAQ,CAACkC,WAAW,CAACL,cAAc,CAAC;UACxEf,0BAA0B,CAACU,YAAY,CAAC,GAAG,GAAG1F,SAAS,IAAI+F,cAAc,EAAE,CACzEzB,KAAK,CAAC,GAAG,CAAC,CACVC,MAAM,CAAC,UAAU2B,MAAc,EAAE;YACjC,OAAOA,MAAM,IAAI,EAAE;UACpB,CAAC,CAAC,CACDC,IAAI,CAAC,GAAG,CAAC;QACZ;MACD;MACA;MACA,KAAK,MAAME,SAAS,IAAIvG,mBAAmB,EAAE;QAC5C,IAAIA,mBAAmB,CAACuG,SAAS,CAAC,KAAK,IAAI,IAAI,OAAOvG,mBAAmB,CAACuG,SAAS,CAAC,KAAK,QAAQ,EAAE;UAClG,OAAOvG,mBAAmB,CAACuG,SAAS,CAAC;QACtC;MACD;MACA,OAAO;QACN3F,kBAAkB,EAAEZ,mBAAmB;QACvCU,yBAAyB,EAAEwE;MAC5B,CAAC;IACF;;IAEA;AACD;AACA;AACA,OAHC;IAAA5H,MAAA,CAMAyE,iBAAiB,GAFjB,SAEAA,iBAAiBA,CAAA,EAAc;MAC9B,OAAOT,SAAS;IACjB;;IAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OARC;IAAAhE,MAAA,CAWMkJ,8BAA8B,GAFpC,eAEMA,8BAA8BA,CACnCC,eAAuB,EACvBC,OAAe,EACfC,qBAA4C,EAC5CpI,MAAgB,EACA;MAChB,IAAIqI,cAAc,GAAG,IAAI;MACzB,IAAIrI,MAAM,EAAEsC,IAAI,CAAC,UAAU,CAAC,EAAE,OAAO,CAAC;MACtCtC,MAAM,EAAEsC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC;MAC9B,IAAI8F,qBAAqB,EAAEE,qBAAqB,IAAIF,qBAAqB,CAACE,qBAAqB,EAAEnH,MAAM,IAAI,CAAC,EAAE;QAC7G,MAAMoH,SAAS,GAAG,IAAI,CAACpJ,IAAI,CAACQ,OAAO,CAAC,CAAC,CAACL,QAAQ,CAAC,CAAC,CAACC,YAAY,CAAC,CAAC;QAC/D,MAAMiJ,aAAa,GAAGD,SAAS,CAAC3G,WAAW,CAACwG,qBAAqB,CAACE,qBAAqB,CAAC,CAAC,CAAC,CAACzG,OAAO,CAAC,CAAC,CAAC;QACrG,MAAM4G,iBAAiB,GAAGC,YAAY,CAACH,SAAS,CAAC;QACjD,MAAMI,SAAS,GAAGF,iBAAiB,CAACG,WAAW,CAAYJ,aAAa,CAAC,CAACK,MAAO;QACjF;QACA,MAAMC,2BAA2B,GAAG,IAAIC,0BAA0B,CAAC;UAClEhE,KAAK,EAAE,EAAE;UACTiE,UAAU,EAAEL,SAAS,CAACK,UAAU;UAChCC,aAAa,EAAEC,gBAAgB,CAAC,IAAI,CAACvJ,OAAO,CAAC,CAAC,CAAC;UAC/C2I,qBAAqB,EAAEF,qBAAqB,CAACE,qBAAqB;UAClEa,kBAAkB,EAAEf,qBAAqB,EAAEe,kBAAkB,IAAI,EAAE;UACnER,SAAS,EAAEA,SAAS,CAACS,IAAI;UACzBC,UAAU,EAAElB;QACb,CAAC,CAAC;QACFC,qBAAqB,CAAChI,kBAAkB,GAAGgI,qBAAqB,CAACe,kBAAkB;QACnFd,cAAc,GAAG,MAAMS,2BAA2B,CAACQ,IAAI,CAAC,IAAI,CAAC3J,OAAO,CAAC,CAAC,CAAC;MACxE;MACA,IAAI0I,cAAc,EAAE;QACnB,IAAI,CAACzI,QAAQ,CAACsI,eAAe,EAAEC,OAAO,EAAEC,qBAAqB,CAAC;MAC/D;MACApI,MAAM,EAAEsC,IAAI,CAAC,UAAU,EAAE,KAAK,CAAC;IAChC,CAAC;IAAAvD,MAAA,CAEDsE,0BAA0B,GAA1B,SAAAA,0BAA0BA,CAACpC,iBAAmC,EAAQ;MACrEA,iBAAiB,CAACsI,kBAAkB,CAAC,gBAAgB,CAAC;MACtDtI,iBAAiB,CAACsI,kBAAkB,CAAC,qBAAqB,CAAC;MAC3DtI,iBAAiB,CAACsI,kBAAkB,CAAC,eAAe,CAAC;IACtD;;IAEA;AACD;AACA;AACA,OAHC;IAAAxK,MAAA,CAKA6D,YAAY,GADZ,SACAA,YAAYA,CAAA,EAAW;MACtB,OAAO,IAAI,CAAClD,MAAM,CAACkE,WAAW,CAAC,CAAC,CAAC+E,SAAS;IAC3C;;IAEA;AACD;AACA;AACA;AACA;AACA;AACA;IACC;IAAA;IAAA5J,MAAA,CAGAiD,mBAAmB,GAFnB,SAEAA,mBAAmBA,CAAgDwH,WAAc,EAAE7H,SAAiB,EAAE4G,SAA0B,EAAK;MACpI,IAAIiB,WAAW,EAAE;QAChB,MAAM;UAAEC,iBAAiB;UAAEC;QAAiB,CAAC,GAAG,IAAI,CAACC,cAAc,CAClEhI,SAAS,EACT,IAAI,CAACxC,IAAI,CAACQ,OAAO,CAAC,CAAC,EACnB,IAAI,CAACR,IAAI,CAACC,eAAe,CAAC,CAAC,CAACwK,cAAc,CAAC,CAC5C,CAAC;QACD,MAAMC,WAAW,GAAG7C,MAAM,CAACC,IAAI,CAACuC,WAAW,CAAC;QAC5C,IAAI,CAAClJ,KAAK,CAACC,OAAO,CAACiJ,WAAW,CAAC,IAAIK,WAAW,CAAC1I,MAAM,EAAE;UACtD,OAAOqI,WAAW,CAAC,gBAAgB,CAAC;UACpC,OAAOA,WAAW,CAAC,qBAAqB,CAAC;UACzC,OAAOA,WAAW,CAAC,eAAe,CAAC;UACnC,KAAK,MAAMM,OAAO,IAAID,WAAW,EAAE;YAClC,IAAIL,WAAW,CAACM,OAAO,CAAC,IAAI,OAAON,WAAW,CAACM,OAAO,CAAC,KAAK,QAAQ,EAAE;cACrE,IAAI,CAAC9H,mBAAmB,CAACwH,WAAW,CAACM,OAAO,CAAC,EAA6B,GAAGnI,SAAS,IAAImI,OAAO,EAAE,EAAEvB,SAAS,CAAC;YAChH;YACA,IAAIuB,OAAO,CAAC1C,QAAQ,CAAC,aAAa,CAAC,EAAE;cACpC,OAAOoC,WAAW,CAACM,OAAO,CAAC;cAC3B;YACD;YACA,IAAI,CAACC,iBAAiB,CAAC,CAAC,GAAGN,iBAAiB,EAAE,GAAGC,gBAAgB,CAAC,EAAEI,OAAO,EAAEN,WAAW,CAAC;YACzF,MAAMQ,oBAAoB,GAAG,IAAI,CAACC,uBAAuB,CACxDH,OAAO,EACPnI,SAAS,EACT6H,WAAW,EACXjB,SAAS,IAAI,IAAI,CAAClJ,WACnB,CAAC;YACD,IAAI2K,oBAAoB,EAAE;cACzB,IACCA,oBAAoB,CAACE,YAAY,EAAEC,sBAAsB,IACzDH,oBAAoB,CAACI,EAAE,EAAEC,4BAA4B,IACrDL,oBAAoB,CAACM,SAAS,EAAEC,OAAO,EACtC;gBACD,OAAOf,WAAW,CAACM,OAAO,CAAC;cAC5B,CAAC,MAAM,IAAIE,oBAAoB,CAACQ,MAAM,EAAEC,YAAY,EAAE;gBACrD,MAAMC,aAAa,GAAGV,oBAAoB,CAACQ,MAAM,CAACC,YAGjD;gBACD,IACEC,aAAa,CAAC,aAAa,CAAC,IAAIA,aAAa,CAAC,aAAa,CAAC,CAACzE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,cAAc,IAC7FyE,aAAa,CAAC,OAAO,CAAC,IAAI,IAAI,CAACC,+BAA+B,CAACD,aAAa,CAAC,OAAO,CAAC,EAAElB,WAAW,CAAE,EACpG;kBACD,OAAOA,WAAW,CAACM,OAAO,CAAC;gBAC5B;cACD;YACD;UACD;QACD;MACD;MACA,OAAON,WAAW;IACnB;;IAEA;AACD;AACA;AACA;AACA;AACA,OALC;IAAAzK,MAAA,CAMAgL,iBAAiB,GAAjB,SAAAA,iBAAiBA,CAACa,UAAgC,EAAEC,KAAa,EAAErB,WAAoC,EAAQ;MAC9G,IAAIoB,UAAU,IAAIA,UAAU,CAACxD,QAAQ,CAACyD,KAAK,CAAC,EAAE;QAC7C,OAAOrB,WAAW,CAACqB,KAAK,CAAC;MAC1B;IACD;;IAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA,OAPC;IAAA9L,MAAA,CAQAkL,uBAAuB,GAAvB,SAAAA,uBAAuBA,CACtBY,KAAa,EACblJ,SAAiB,EACjB6H,WAAoC,EACpCrE,UAA0B,EACe;MACzC,IAAIqE,WAAW,CAACqB,KAAK,CAAC,IAAIlJ,SAAS,IAAI,CAACA,SAAS,CAACyF,QAAQ,CAAC,WAAW,CAAC,EAAE;QACxE,MAAMvB,QAAQ,GAAGV,UAAU,CAAC2F,oBAAoB,CAAC,GAAGnJ,SAAS,IAAIkJ,KAAK,EAAE,CAAmB;QAC3F,MAAME,YAAY,GAAGC,kBAAkB,CAACC,2BAA2B,CAAWpF,QAAQ,CAAC;QACvF,OAAOkF,YAAY,EAAEG,YAAY,EAAEC,WAAW;MAC/C;MACA,OAAO,IAAI;IACZ;;IAEA;AACD;AACA;AACA;AACA;AACA;AACA,OANC;IAAApM,MAAA,CAOA4K,cAAc,GAAd,SAAAA,cAAcA,CACbhI,SAAiB,EACjBd,KAAa,EACbuK,YAAyB,EACqC;MAC9D,MAAMC,gBAAgB,GAAG,IAAI,CAACC,oBAAoB,CAAC3J,SAAS,EAAEd,KAAK,EAAEuK,YAAY,CAAC;MAClF,MAAMG,iBAAiB,GAAG,IAAIC,iBAAiB,CAACH,gBAAgB,CAACI,aAAa,CAAC,CAAC,EAAEJ,gBAAgB,CAAC;MACnG,MAAMK,oBAAoB,GAAGH,iBAAiB,CAACG,oBAAoB,CAAC,CAAC;MACrE,IAAIjC,iBAA2B,EAAEC,gBAAgB;MACjD,IAAIgC,oBAAoB,EAAE;QACzB,MAAMC,8BAA8B,GAAGJ,iBAAiB,CAACK,oBAAoB,CAAC,CAAC;QAC/E,IAAID,8BAA8B,EAAExK,MAAM,EAAE;UAC3CsI,iBAAiB,GAAGkC,8BAA8B,CAACE,GAAG,CAAEC,QAAQ,IAAK;YACpE,OAAQA,QAAQ,CAACC,IAAI,IAAgBD,QAAQ,CAAkCE,KAAK;UACrF,CAAC,CAAC;QACH;QACAtC,gBAAgB,GAAG6B,iBAAiB,CAACU,6BAA6B,CAAC,CAAC;QACpE,IAAIvC,gBAAgB,EAAEvI,MAAM,EAAE;UAC7BuI,gBAAgB,GAAGA,gBAAgB,CAACmC,GAAG,CAAEK,eAAe,IAAK;YAC5D,OAAOA,eAAe,CAACC,SAAS;UACjC,CAAC,CAAC;QACH;MACD;MACA1C,iBAAiB,KAAK,EAAE;MACxBC,gBAAgB,GAAGA,gBAAgB,GAAIA,gBAAgB,GAAgB,EAAE;MACzE,OAAO;QAAED,iBAAiB;QAAEC;MAAiB,CAAC;IAC/C;;IAEA;AACD;AACA;AACA;AACA;AACA;AACA,OANC;IAAA3K,MAAA,CAOAuM,oBAAoB,GAApB,SAAAA,oBAAoBA,CAAC3J,SAAiB,EAAEd,KAAa,EAAEuK,YAAyB,EAA2C;MAC1H,MAAMgB,SAAS,GAAGvL,KAAK,CAAC+C,WAAW,CAAC,CAAC;MACrC,IAAIjB,UAAU,GAAGyJ,SAAS,CAACzD,SAAS;MACpC,MAAM5C,YAAY,GAAGqG,SAAS,CAACC,WAAW;MAC1C,IAAItG,YAAY,KAAK,CAACpD,UAAU,IAAIA,UAAU,CAACyE,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE;QAC9DzE,UAAU,GAAGyJ,SAAS,EAAEE,eAAe,CAACrG,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MACtD;MACA,OAAOsG,WAAW,CAACC,0BAA0B,CAAC7K,SAAS,EAAEd,KAAK,CAACvB,QAAQ,CAAC,CAAC,CAACC,YAAY,CAAC,CAAC,EAAEoD,UAAU,EAAGyI,YAAY,CAAC;IACrH;;IAEA;AACD;AACA;AACA;AACA;AACA,OALC;IAAArM,MAAA,CAMA4L,+BAA+B,GAA/B,SAAAA,+BAA+BA,CAAC8B,iBAAyB,EAAEC,UAAmC,EAAW;MACxG,IAAIC,aAAa,GAAG,KAAK;MACzB,MAAMC,MAAM,GAAGH,iBAAiB,CAACxG,KAAK,CAAC,GAAG,CAAC;MAC3C;MACA,IAAI2G,MAAM,CAACzL,MAAM,GAAG,CAAC,EAAE;QACtBwL,aAAa,GAAG,CAAC,EAChBD,UAAU,CAACE,MAAM,CAAC,CAAC,CAAC,CAAC,IACpBF,UAAU,CAACE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAYC,cAAc,CAACD,MAAM,CAAC,CAAC,CAAC,CAAC,IAC1DF,UAAU,CAACE,MAAM,CAAC,CAAC,CAAC,CAAC,CAA4BA,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAClE;MACF,CAAC,MAAM;QACND,aAAa,GAAGD,UAAU,CAACD,iBAAiB,CAAC,KAAK,CAAC;MACpD;MACA,OAAOE,aAAa;IACrB;;IAEA;AACD;AACA;AACA;AACA;AACA,OALC;IAAA5N,MAAA,CAMAqE,4BAA4B,GAA5B,SAAAA,4BAA4BA,CAACnC,iBAAmC,EAAE6L,SAA0B,EAAoB;MAC/G,MAAMC,SAAS,GAAG,OAAOD,SAAS,KAAK,QAAQ,GAAGE,IAAI,CAACC,KAAK,CAACH,SAAS,CAAC,GAAGA,SAAS;MACnF,KAAK,MAAMI,IAAI,IAAIH,SAAS,EAAE;QAC7B,MAAMI,cAAc,GAClBD,IAAI,CAAC,eAAe,CAAC,IAAIA,IAAI,CAAC,eAAe,CAAC,CAAC,eAAe,CAAC,IAC/DA,IAAI,CAAC,+CAA+C,CAAC,IAAIA,IAAI,CAAC,+CAA+C,CAAC,CAAC,OAAO,CAAE;QAC1H,MAAME,uBAAuB,GAC5BF,IAAI,CAAC,wBAAwB,CAAC,IAAIA,IAAI,CAAC,wDAAwD,CAAC;QACjG,MAAMG,aAAa,GAAGpM,iBAAiB,CAACqM,eAAe,CAACH,cAAc,CAAC;QACvE,IAAIE,aAAa,IAAIF,cAAc,KAAKC,uBAAuB,EAAE;UAChE;UACAnM,iBAAiB,CAACsI,kBAAkB,CAAC6D,uBAAuB,CAAC;UAC7DnM,iBAAiB,CAACsM,kBAAkB,CAACJ,cAAc,EAAEC,uBAAuB,CAAC;QAC9E;MACD;MACA,OAAOnM,iBAAiB;IACzB;;IAEA;AACD;AACA,OAFC;IAAAlC,MAAA,CAGUyO,uBAAuB,GAAjC,SAAUA,uBAAuBA,CAAA,EAAS;MACzC,IAAIC,SAAS,GAAG,IAAI;MACpB,MAAMC,YAAY,GAAGC,OAAO,CAACC,gBAAgB,CAAC,CAAC;MAC/C,MAAMC,cAAc,GAAGH,YAAY,EAAEI,KAAK,CAAC,CAAC;MAC5C,MAAMC,aAAa,GAAGL,YAAY,IAAIM,SAAS,CAACC,WAAW,CAACP,YAAY,CAAC;MACzE,IAAIA,YAAY,EAAElM,GAAG,CAAC,cAAc,CAAC,EAAE;QACtCiM,SAAS,GAAG;UACXS,IAAI,EAAE,SAAS;UACfC,SAAS,EAAEN;QACZ,CAAC;MACF,CAAC,MAAM,IAAIE,aAAa,EAAE;QACzBN,SAAS,GAAG;UACXS,IAAI,EAAE,KAAK;UACXE,OAAO,EAAEL,aAAa,CAACD,KAAK,CAAC,CAAC;UAC9BO,gBAAgB,EAAEX,YAAY,CAACxI,iBAAiB,CAAC,CAAC,EAAErD,OAAO,CAAC;QAC7D,CAAC;MACF;MACAyM,OAAO,CAACC,YAAY,CAACvH,MAAM,CAACwH,MAAM,CAAC,CAAC,CAAC,EAAEF,OAAO,CAACG,KAAK,EAAE;QAAEhB,SAAS,EAAEA;MAAU,CAAC,CAAC,EAAE,EAAE,CAAC;IACrF;;IAEA;AACD;AACA;AACA;AACA;AACA,OALC;IAAA1O,MAAA,CAQA2P,gBAAgB,GAFhB,SAEAA,gBAAgBA,CAACC,SAAiB,EAAEvG,qBAA2D,EAAQ;MACtG,IAAI,CAACoF,uBAAuB,CAAC,CAAC;MAC9B,IAAIoB,UAAgD;MACpD,MAAMC,cAAc,GAAG,IAAI,CAAC1P,IAAI,CAACC,eAAe,CAAC,CAAC,CAAC0P,gBAAgB,CAAC,SAAS,CAAC;QAC7EC,SAAS,GAAGF,cAAc,CAACG,eAAe,EAAEC,SAAS,GAAGN,SAAS,CAAC;MACnE,IAAI,CAACI,SAAS,EAAE;QACfG,GAAG,CAACrK,KAAK,CAAC,uCAAuC,CAAC;QAClD;MACD;MACA,MAAMqD,eAAe,GAAG6G,SAAS,CAAClP,cAAc;QAC/CsI,OAAO,GAAG4G,SAAS,CAACjP,MAAM;QAC1BqP,cAAc,GAAGJ,SAAS,CAACK,UAAU,IAAI,IAAI,CAACC,iBAAiB,CAACN,SAAS,CAACK,UAAU,CAAC;MAEtF,IAAIhH,qBAAqB,EAAE;QAC1BwG,UAAU,GAAG,EAAE;QACf5H,MAAM,CAACC,IAAI,CAACmB,qBAAqB,CAAC,CAAChH,OAAO,CAAC,UAAU+F,GAAW,EAAE;UACjE,IAAImI,OAA+B;UACnC,MAAMC,iBAAiB,GAAGnH,qBAAqB,CAAEjB,GAAG,CAAC;UACrD,IAAI7G,KAAK,CAACC,OAAO,CAACgP,iBAAiB,CAAC,EAAE;YACrC,KAAK,MAAMrC,IAAI,IAAIqC,iBAAiB,EAAE;cACrCD,OAAO,GAAG,CAAC,CAAC;cACZA,OAAO,CAACnI,GAAG,CAAC,GAAG+F,IAAI;cACnB0B,UAAU,EAAExM,IAAI,CAACkN,OAAO,CAAC;YAC1B;UACD,CAAC,MAAM;YACNA,OAAO,GAAG,CAAC,CAAC;YACZA,OAAO,CAACnI,GAAG,CAAC,GAAGoI,iBAA2B;YAC1CX,UAAU,EAAExM,IAAI,CAACkN,OAAO,CAAC;UAC1B;QACD,CAAC,CAAC;MACH;MACA,IAAIV,UAAU,IAAIO,cAAc,EAAE;QACjC/G,qBAAqB,GAAG;UACvBhI,kBAAkB,EAAE;YACnBkC,IAAI,EAAEsM,UAAU,IAAIO;UACrB;QACD,CAAC;MACF;MACA,IAAI,CAAChQ,IAAI,CAACoE,sBAAsB,CAAC3D,QAAQ,CAACsI,eAAe,EAAEC,OAAO,EAAEC,qBAAqB,CAAC;IAC3F;;IAEA;AACD;AACA;AACA;AACA;AACA,OALC;IAAArJ,MAAA,CAMAkE,oBAAoB,GAApB,SAAAA,oBAAoBA,CAAChC,iBAAmC,EAAEP,eAAuC,EAAoB;MACpH,MAAM8O,WAAW,GAAGxI,MAAM,CAACC,IAAI,CAACvG,eAAe,CAAC;MAChD,MAAM+O,iBAAiB,GAAGxO,iBAAiB,CAACyO,6BAA6B,CAAC,CAAC;MAC3EF,WAAW,CAACpO,OAAO,CAAC,UAAU+F,GAAW,EAAE;QAC1C,IAAI,CAACsI,iBAAiB,CAACrI,QAAQ,CAACD,GAAG,CAAC,EAAE;UACrClG,iBAAiB,CAAC0O,eAAe,CAACxI,GAAG,EAAE,GAAG,EAAE,IAAI,EAAEzG,eAAe,CAACyG,GAAG,CAAC,CAAC;QACxE;MACD,CAAC,CAAC;MACF,OAAOlG,iBAAiB;IACzB;;IAEA;AACD;AACA;AACA;AACA,OAJC;IAAAlC,MAAA,CAOAsQ,iBAAiB,GAFjB,SAEAA,iBAAiBA,CAACO,eAA+D,EAA0B;MAC1G,MAAMC,cAAsC,GAAG,CAAC,CAAC;MACjD,IAAID,eAAe,EAAE;QACpB,MAAMJ,WAAW,GAAGxI,MAAM,CAACC,IAAI,CAAC2I,eAAe,CAAC,IAAI,EAAE;QACtD,IAAIJ,WAAW,CAACrO,MAAM,GAAG,CAAC,EAAE;UAC3BqO,WAAW,CAACpO,OAAO,CAAC,UAAU+F,GAAW,EAAE;YAC1C,MAAM2I,QAAQ,GAAGF,eAAe,CAACzI,GAAG,CAAC;YACrC,IAAI2I,QAAQ,CAACC,KAAK,IAAID,QAAQ,CAACC,KAAK,CAACA,KAAK,IAAID,QAAQ,CAACC,KAAK,CAACC,MAAM,KAAK,OAAO,EAAE;cAChF,IAAI,CAACH,cAAc,CAAC1I,GAAG,CAAC,EAAE;gBACzB0I,cAAc,CAAC1I,GAAG,CAAC,GAAG2I,QAAQ,CAACC,KAAK,CAACA,KAAK;cAC3C;YACD;UACD,CAAC,CAAC;QACH;MACD;MACA,OAAOF,cAAc;IACtB;;IAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OARC;IAAA9Q,MAAA,CAYMkR,8BAA8B,GAFpC,eAEMA,8BAA8BA,CACnCnP,WAA2B,EAC3BoP,eAAuB,EACvBrK,QAAuD,EACvDsK,WAAmB,EACnB/L,OAAgB,EACA;MAChB,MAAMgM,UAAU,GAAGtP,WAAW,CAAC1B,eAAe,CAAC,CAAC,CAACiR,iBAAiB,CAAC,CAAC,CAACC,YAAY,CAAC,CAAC;MACnF,MAAMC,gBAAgB,GAAGH,UAAU,CAACF,eAAe,CAAC;MACpD,IAAIvP,8BAA8B;MAClC,IAAI4P,gBAAgB,IAAIA,gBAAgB,CAAC1Q,cAAc,IAAI0Q,gBAAgB,CAACzQ,MAAM,EAAE;QACnF,MAAM0Q,kBAAqC,GAAG;UAC7CC,OAAO,EAAE,CAAC;QACX,CAAC;QACD,MAAMC,uBAA0C,GAAG,CAAC,CAAC;QACrD,IAAI/O,SAAiB;QACrB,IAAIvB,kBAAoC,GAAG,EAAE;QAC7C,IAAIyF,QAAQ,EAAE;UACb,IAAIvF,KAAK,CAACC,OAAO,CAACsF,QAAQ,CAAC,EAAE;YAC5BzF,kBAAkB,GAAGyF,QAAQ;YAC7BlE,SAAS,GAAG0D,WAAW,CAACsL,qBAAqB,CAAC9K,QAAQ,CAAC,CAAC,CAAC,CAAC;UAC3D,CAAC,MAAM,IAAIA,QAAQ,CAACrE,GAAG,IAAIqE,QAAQ,CAACrE,GAAG,CAAiB,+BAA+B,CAAC,EAAE;YACzFG,SAAS,GAAG0D,WAAW,CAACsL,qBAAqB,CAAC9K,QAAQ,CAAC;YACvDzF,kBAAkB,GAAG,CAACyF,QAAQ,CAAC;UAChC;UACA6K,uBAAuB,CAAC/O,SAAS,CAAE,GAAGiP,mBAAmB,CAACC,IAAI;UAC9DL,kBAAkB,CAACM,UAAU,GAAGJ,uBAAuB;QACxD;QAEA,IAAIP,WAAW,EAAE;UAChB,MAAM5J,IAAI,GAAG,GAAGgK,gBAAgB,CAAC1Q,cAAc,IAAI0Q,gBAAgB,CAACzQ,MAAM,EAAE;UAC5E0Q,kBAAkB,CAACC,OAAO,CAAElK,IAAI,CAAC,GAAG,CAAC,CAAC;UACtCiK,kBAAkB,CAACC,OAAO,CAAElK,IAAI,CAAC,CAAE4J,WAAW,CAAC,GAAGS,mBAAmB,CAACC,IAAI;QAC3E;QACA,IAAIN,gBAAgB,IAAIA,gBAAgB,CAACnB,UAAU,EAAE;UACpD,MAAME,OAAO,GAAGiB,gBAAgB,CAACnB,UAAU,IAAI,IAAI,CAACC,iBAAiB,CAACkB,gBAAgB,CAACnB,UAAU,CAAC;UAClG,IAAIpI,MAAM,CAACC,IAAI,CAACqI,OAAO,CAAC,CAACnO,MAAM,GAAG,CAAC,EAAE;YACpCR,8BAA8B,GAAG2O,OAAO;UACzC;QACD;QAEAxO,WAAW,CAACyC,sBAAsB,CAAC3D,QAAQ,CAAC2Q,gBAAgB,CAAC1Q,cAAc,EAAE0Q,gBAAgB,CAACzQ,MAAM,EAAE;UACrGM,kBAAkB,EAAEA,kBAAkB;UACtCsD,iBAAiB,EAAE8M,kBAAkB;UACrC7P,8BAA8B,EAAEA,8BAA8B;UAC9DyD,OAAO,EAAEA;QACV,CAAC,CAAC;;QAEF;QACA,OAAO2M,OAAO,CAACC,OAAO,CAAC,CAAC;MACzB,CAAC,MAAM;QACN,MAAM,IAAIhM,KAAK,CAAC,mBAAmBkL,eAAe,uDAAuD,CAAC;MAC3G;IACD;;IAEA;AACD;AACA;AACA;AACA;AACA;AACA,OANC;IAAAnR,MAAA,CAOAgD,yBAAyB,GAAzB,SAAAA,yBAAyBA,CACxBkP,OAAgB,EAChB5O,kBAA2C,EAC3C6O,aAA6B,EACH;MAC1B,MAAMC,kBAAkB,GAAG,IAAI,CAACC,qCAAqC,CAAC,CAAC;MACvE,IAAI,CAACD,kBAAkB,EAAE;QACxB,OAAO,IAAI,CAACE,gDAAgD,CAACJ,OAAO,EAAEC,aAAa,CAAC;MACrF,CAAC,MAAM;QACN,OAAO7O,kBAAkB;MAC1B;IACD;;IAEA;AACD;AACA;AACA,OAHC;IAAAtD,MAAA,CAMAqS,qCAAqC,GAFrC,SAEAA,qCAAqCA,CAAA,EAAY;MAChD,IAAID,kBAAkB,GAAG,KAAK;MAC9B,MAAMG,QAAQ,GAAG,IAAI,CAACnS,IAAI,CAACC,eAAe,CAAC,CAAC,CAAC0P,gBAAgB,CAAC,QAAQ,CAAC;MACvEqC,kBAAkB,GAAGG,QAAQ,EAAEC,GAAG,EAAEC,iDAAiD,IAAI,KAAK;MAC9F,OAAOL,kBAAkB;IAC1B;;IAEA;AACD;AACA;AACA;AACA;AACA,OALC;IAAApS,MAAA,CAQAsS,gDAAgD,GAFhD,SAEAA,gDAAgDA,CAACJ,OAAgB,EAAEC,aAA6B,EAA2B;MAC1H,MAAM3I,SAAS,GAAG0I,OAAO,CAAC3R,QAAQ,CAAC,CAAC,CAACC,YAAY,CAAC,CAAmB;QACpE8M,WAAW,GAAG4E,OAAO,CAACpP,OAAO,CAAC,CAAC;QAC/BU,QAAQ,GAAGgG,SAAS,CAAC3G,WAAW,CAACyK,WAAW,CAAC;QAC7CoF,GAAG,GAAGR,OAAO,CAACvP,SAAS,CAAC,CAAC;MAC1B,MAAMgQ,aAAa,GAAG,IAAI,CAACC,qCAAqC,CAACpJ,SAAS,EAAEhG,QAAQ,CAAC;MACrF,IAAImP,aAAa,IAAIA,aAAa,CAACvQ,MAAM,GAAG,CAAC,EAAE;QAC9CuQ,aAAa,CAACtQ,OAAO,CAAEwQ,OAA2B,IAAK;UACtD,MAAMC,WAAW,GAAGD,OAAO,CAACxI,IAAI;UAChC,IAAI9I,KAAK,CAACC,OAAO,CAAC2Q,aAAa,CAAC,IAAIA,aAAa,CAAC/P,MAAM,GAAG,CAAC,EAAE;YAC7D;YACA,IAAIsQ,GAAG,CAAC5E,cAAc,CAACgF,WAAW,CAAC,IAAIJ,GAAG,CAACI,WAAW,CAAC,EAAE;cACxD7K,MAAM,CAACC,IAAI,CAACwK,GAAG,CAACI,WAAW,CAAC,CAAC,CAACzQ,OAAO,CAAC,UAAU+F,GAAW,EAAE;gBAC5D,MAAM2K,YAAY,GAAG,GAAGD,WAAW,IAAI1K,GAAG,EAAE;gBAC5C,IAAI,CAAC+J,aAAa,EAAE9J,QAAQ,CAAC0K,YAAY,CAAC,IAAIL,GAAG,CAACI,WAAW,CAAC,CAAChF,cAAc,CAAC1F,GAAG,CAAC,EAAE;kBACnF,OAAOsK,GAAG,CAACI,WAAW,CAAC,CAAC1K,GAAG,CAAC;kBAC5B,IAAIH,MAAM,CAACC,IAAI,CAACwK,GAAG,CAACI,WAAW,CAAC,CAAC,CAAC1Q,MAAM,KAAK,CAAC,EAAE;oBAC/C,OAAOsQ,GAAG,CAACI,WAAW,CAAC;kBACxB;gBACD;cACD,CAAC,CAAC;YACH,CAAC,MAAM;cACN,OAAOJ,GAAG,CAACI,WAAW,CAAC;YACxB;UACD,CAAC,MAAM,IAAIJ,GAAG,CAAC5E,cAAc,CAACgF,WAAW,CAAC,EAAE;YAC3C,OAAOJ,GAAG,CAACI,WAAW,CAAC;UACxB;QACD,CAAC,CAAC;MACH;MACA,OAAOJ,GAAG;IACX;;IAEA;AACD;AACA;AACA;AACA;AACA,OALC;IAAA1S,MAAA,CAMA4S,qCAAqC,GAArC,SAAAA,qCAAqCA,CAACpJ,SAAyB,EAAEhG,QAAgB,EAAwB;MACxG,MAAMkG,iBAAiB,GAAGC,YAAY,CAACH,SAAS,CAAC;MACjD,MAAMS,UAAU,GAAGP,iBAAiB,CAACG,WAAW,CAAa,GAAGrG,QAAQ,GAAG,CAAC,CAACsG,MAAO;MACpF,OAAOG,UAAU,EAAE+I,oBAAoB;IACxC,CAAC;IAAA,OAAArV,6BAAA;EAAA,EA/2B0CsV,mBAAmB,GAAAC,yBAAA,CAAAtT,OAAA,CAAAK,SAAA,aAAAnC,KAAA,GAAAmK,MAAA,CAAAkL,wBAAA,CAAAvT,OAAA,CAAAK,SAAA,aAAAL,OAAA,CAAAK,SAAA,GAAAiT,yBAAA,CAAAtT,OAAA,CAAAK,SAAA,eAAAjC,KAAA,EAAAE,KAAA,GAAA+J,MAAA,CAAAkL,wBAAA,CAAAvT,OAAA,CAAAK,SAAA,eAAAL,OAAA,CAAAK,SAAA,GAAAiT,yBAAA,CAAAtT,OAAA,CAAAK,SAAA,0CAAA7B,KAAA,EAAAC,KAAA,GAAA4J,MAAA,CAAAkL,wBAAA,CAAAvT,OAAA,CAAAK,SAAA,0CAAAL,OAAA,CAAAK,SAAA,GAAAiT,yBAAA,CAAAtT,OAAA,CAAAK,SAAA,wBAAA3B,KAAA,EAAAC,KAAA,GAAA0J,MAAA,CAAAkL,wBAAA,CAAAvT,OAAA,CAAAK,SAAA,wBAAAL,OAAA,CAAAK,SAAA,GAAAiT,yBAAA,CAAAtT,OAAA,CAAAK,SAAA,qCAAAtB,KAAA,EAAAC,MAAA,GAAAqJ,MAAA,CAAAkL,wBAAA,CAAAvT,OAAA,CAAAK,SAAA,qCAAAL,OAAA,CAAAK,SAAA,GAAAiT,yBAAA,CAAAtT,OAAA,CAAAK,SAAA,mBAAApB,MAAA,GAAAoJ,MAAA,CAAAkL,wBAAA,CAAAvT,OAAA,CAAAK,SAAA,mBAAAL,OAAA,CAAAK,SAAA,GAAAiT,yBAAA,CAAAtT,OAAA,CAAAK,SAAA,0BAAAlB,MAAA,EAAAC,MAAA,GAAAiJ,MAAA,CAAAkL,wBAAA,CAAAvT,OAAA,CAAAK,SAAA,0BAAAL,OAAA,CAAAK,SAAA,GAAAiT,yBAAA,CAAAtT,OAAA,CAAAK,SAAA,uBAAAhB,MAAA,EAAAC,MAAA,GAAA+I,MAAA,CAAAkL,wBAAA,CAAAvT,OAAA,CAAAK,SAAA,uBAAAL,OAAA,CAAAK,SAAA,GAAAiT,yBAAA,CAAAtT,OAAA,CAAAK,SAAA,wBAAAd,MAAA,EAAAC,MAAA,GAAA6I,MAAA,CAAAkL,wBAAA,CAAAvT,OAAA,CAAAK,SAAA,wBAAAL,OAAA,CAAAK,SAAA,GAAAiT,yBAAA,CAAAtT,OAAA,CAAAK,SAAA,qCAAAZ,MAAA,EAAAC,MAAA,GAAA2I,MAAA,CAAAkL,wBAAA,CAAAvT,OAAA,CAAAK,SAAA,qCAAAL,OAAA,CAAAK,SAAA,GAAAiT,yBAAA,CAAAtT,OAAA,CAAAK,SAAA,4CAAAV,MAAA,EAAAC,MAAA,GAAAyI,MAAA,CAAAkL,wBAAA,CAAAvT,OAAA,CAAAK,SAAA,4CAAAL,OAAA,CAAAK,SAAA,GAAAiT,yBAAA,CAAAtT,OAAA,CAAAK,SAAA,uDAAAR,MAAA,EAAAC,MAAA,GAAAuI,MAAA,CAAAkL,wBAAA,CAAAvT,OAAA,CAAAK,SAAA,uDAAAL,OAAA,CAAAK,SAAA,GAAAL,OAAA,MAAAD,MAAA;EAAA,OAk3BhDhC,6BAA6B;AAAA","ignoreList":[],"file":"InternalIntentBasedNavigation-dbg.js"}