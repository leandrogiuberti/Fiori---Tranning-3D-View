{"version":3,"file":"CollaborativeDraft.js","names":["CollaborativeDraft","_dec","defineUI5Class","_class","_BaseControllerExtens","apply","this","arguments","_exports","_inheritsLoose","_proto","prototype","getCollaborativeDraftService","collaborativeDraftService","base","getAppComponent","handleContentFocusIn","source","focusEvent","isA","getParent","targetOutsideOfControlDomRef","getDomRef","contains","relatedTarget","lastFocusId","getLastFocusId","getId","getLastFocusFieldGroups","getFieldGroupIds","join","lastFocused","Element","getElementById","sendFocusOutMessage","setLastFocusInformation","sendFocusInMessage","handleContentFocusOut","fieldGroupEvent","control","getSource","fieldGroupIds","getParameter","some","groupId","startsWith","CollaborationFieldGroupPrefix","sourceControl","currentFocusedControl","getActiveElement","undefined","lastFocusFieldGroups","focusedField","fieldpAPI","collaborationPath","getCollaborationPath","send","action","Activity","Lock","content","Unlock","field","bindingContext","getBindingContext","getMainPropertyRelativePath","fieldWrapper","FieldEditMode","Editable","EditableDisplay","EditableReadOnly","includes","getProperty","getPath","keypath","getBindingInfo","template","getBindingPath","path","message","getView","isConnected","connect","async","draftRootContext","disconnect","uiModel","getModel","cleanDraftRoot","setProperty","isCollaborationEnabled","retainAsyncMessages","activityPaths","releaseAsyncMessages","updateLocksForContextPath","oldContextPath","newContextPath","getCurrentDraftRootPath","internalModel","getDraftUserListPromise","isInitialShare","setInitialShare","isInitial","setDraftRoot","userListPromise","getObject","Promise","resolve","draftAdminUsers","bindList","requestContexts","then","e","map","c","catch","Log","error","requestSideEffects","requestObject","activateCollaboration","pageContext","isActiveEntity","CommonUtils","findOrCreateRootContext","$$groupId","getGroupId","$select","rootContext","currentDraftRootPath","usersInvited","me","CollaborationUtils","getMe","hasMe","singleUser","UserID","id","err","executeShareAction","sharePromise","shareObject","addSelf","sendLockChange","context","propertyName","isLocked","sendPropertyValuesChange","propertyNames","Array","isArray","Change","prop","sendContextsCreated","contexts","Create","sendContextsDeleted","Delete","BaseControllerExtension"],"sources":["./CollaborativeDraft.ts"],"sourcesContent":["import Log from \"sap/base/Log\";\nimport { defineUI5Class } from \"sap/fe/base/ClassSupport\";\nimport type Field from \"sap/fe/macros/Field\";\nimport type FieldWrapper from \"sap/fe/macros/controls/FieldWrapper\";\nimport type Tokenizer from \"sap/m/Tokenizer\";\nimport type ManagedObject from \"sap/ui/base/ManagedObject\";\nimport type Control from \"sap/ui/core/Control\";\nimport type { Control$ValidateFieldGroupEvent } from \"sap/ui/core/Control\";\nimport Element from \"sap/ui/core/Element\";\nimport type MultiValueField from \"sap/ui/mdc/MultiValueField\";\nimport type JSONModel from \"sap/ui/model/json/JSONModel\";\nimport type Context from \"sap/ui/model/odata/v4/Context\";\nimport type { FEView } from \"../BaseController\";\nimport CommonUtils from \"../CommonUtils\";\nimport type PageController from \"../PageController\";\nimport type { CollaborativeDraftService } from \"../services/collaborativeDraftServiceFactory\";\nimport { FieldEditMode } from \"../templating/UIFormatters\";\nimport BaseControllerExtension from \"./BaseControllerExtension\";\nimport { Activity, CollaborationFieldGroupPrefix, CollaborationUtils, addSelf, shareObject } from \"./collaboration/CollaborationCommon\";\n\ntype DraftAdminUser = {\n\tDraftEntityType: string;\n\tDraftUUID: string;\n\tUserID: string;\n};\n\n/**\n * A controller extension to handle collaborative draft scenarios.\n * @ui5-experimental-since 1.141.0\n * @since 1.141.0\n * @public\n */\n@defineUI5Class(\"sap.fe.core.controllerextensions.CollaborativeDraft\")\nexport default class CollaborativeDraft extends BaseControllerExtension {\n\tprivate base!: PageController;\n\n\tprivate lastFocusId: string | undefined;\n\n\tprivate lastFocusFieldGroups: string | undefined;\n\n\tprivate collaborativeDraftService!: CollaborativeDraftService;\n\n\tprivate getCollaborativeDraftService(): CollaborativeDraftService {\n\t\tthis.collaborativeDraftService = this.collaborativeDraftService ?? this.base.getAppComponent().getCollaborativeDraftService();\n\t\treturn this.collaborativeDraftService;\n\t}\n\n\t/**\n\t * Callback when the focus is set in the Field or one of its children.\n\t * @param source\n\t * @param focusEvent\n\t */\n\tpublic handleContentFocusIn(source: Field | MultiValueField, focusEvent?: FocusEvent): void {\n\t\t// We send the event only if the focus was previously out of the Field\n\t\tif (source.isA<Tokenizer>(\"sap.m.Tokenizer\")) {\n\t\t\tsource = source.getParent()?.getParent() as MultiValueField;\n\t\t}\n\t\tlet targetOutsideOfControlDomRef = false;\n\t\tif (focusEvent) {\n\t\t\ttargetOutsideOfControlDomRef = !source.getDomRef()?.contains(focusEvent.relatedTarget as Node);\n\t\t}\n\t\tif (source.isA<MultiValueField>(\"sap.ui.mdc.MultiValueField\") || targetOutsideOfControlDomRef) {\n\t\t\t// We need to handle the case where the newly focused Field is different from the previous one, but they share the same fieldGroupIDs\n\t\t\t// (e.g. fields in different rows in the same column of a table)\n\t\t\t// In such case, the focusOut handler was not called (because we stay in the same fieldGroupID), so we need to send a focusOut event manually\n\t\t\tconst lastFocusId = this.getLastFocusId();\n\t\t\tif (lastFocusId && lastFocusId !== source.getId() && this.getLastFocusFieldGroups() === source.getFieldGroupIds().join(\",\")) {\n\t\t\t\tconst lastFocused = Element.getElementById(lastFocusId) as Field;\n\t\t\t\tthis?.sendFocusOutMessage(lastFocused);\n\t\t\t}\n\n\t\t\tthis.setLastFocusInformation(source);\n\n\t\t\tthis.sendFocusInMessage(source);\n\t\t}\n\t}\n\n\t/**\n\t * Callback when the focus is removed from the Field or one of its children.\n\t * @param fieldGroupEvent\n\t */\n\tpublic handleContentFocusOut(fieldGroupEvent: Control$ValidateFieldGroupEvent): void {\n\t\tlet control: ManagedObject | null = fieldGroupEvent.getSource();\n\t\tif (control.isA<Tokenizer>(\"sap.m.Tokenizer\")) {\n\t\t\tcontrol = control.getParent()?.getParent() as MultiValueField;\n\t\t}\n\t\tif (!control.isA<MultiValueField>(\"sap.ui.mdc.MultiValueField\")) {\n\t\t\twhile (control && !control?.isA<Field>(\"sap.fe.macros.Field\")) {\n\t\t\t\tcontrol = control?.getParent();\n\t\t\t}\n\t\t\tif (!control) return;\n\t\t}\n\n\t\tconst fieldGroupIds = fieldGroupEvent.getParameter(\"fieldGroupIds\") as string[];\n\n\t\t// We send the event only if the validated fieldCroup corresponds to a collaboration group\n\t\tif (\n\t\t\tfieldGroupIds.some((groupId) => {\n\t\t\t\treturn groupId.startsWith(CollaborationFieldGroupPrefix);\n\t\t\t})\n\t\t) {\n\t\t\tconst sourceControl: Control = fieldGroupEvent.getSource();\n\n\t\t\t// Determine if the control that sent the event still has the focus (or one of its children).\n\t\t\t// This could happen e.g. if the user pressed <Enter> to validate the input.\n\t\t\tlet currentFocusedControl: ManagedObject | null | undefined = Element.getActiveElement();\n\t\t\twhile (currentFocusedControl && currentFocusedControl !== sourceControl) {\n\t\t\t\tcurrentFocusedControl = currentFocusedControl.getParent();\n\t\t\t}\n\t\t\tif (currentFocusedControl !== sourceControl) {\n\t\t\t\t// The control that sent the event isn't focused anymore\n\t\t\t\tthis.sendFocusOutMessage(control);\n\t\t\t\tif (this.getLastFocusId() === control.getId()) {\n\t\t\t\t\tthis.setLastFocusInformation(undefined);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Gets the id of the last focused Field (if any).\n\t * @returns ID\n\t */\n\tprivate getLastFocusId(): string | undefined {\n\t\treturn this.lastFocusId;\n\t}\n\n\t/**\n\t * Gets the fieldgroups of the last focused Field (if any).\n\t * @returns A string containing the fieldgroups separated by ','\n\t */\n\tprivate getLastFocusFieldGroups(): string | undefined {\n\t\treturn this.lastFocusFieldGroups;\n\t}\n\n\t/**\n\t * Stores information about the last focused Field (id and fieldgroups).\n\t * @param focusedField\n\t */\n\tprivate setLastFocusInformation(focusedField: Field | MultiValueField | undefined): void {\n\t\tthis.lastFocusId = focusedField?.getId();\n\t\tthis.lastFocusFieldGroups = focusedField?.getFieldGroupIds().join(\",\");\n\t}\n\n\t/**\n\t * If collaboration is enabled, send a Lock collaboration message.\n\t * @param fieldpAPI\n\t */\n\tprivate sendFocusInMessage(fieldpAPI: Field | MultiValueField): void {\n\t\tconst collaborationPath = this.getCollaborationPath(fieldpAPI);\n\n\t\tif (collaborationPath) {\n\t\t\tthis.send({ action: Activity.Lock, content: collaborationPath });\n\t\t}\n\t}\n\n\t/**\n\t * If collaboration is enabled, send an Unlock collaboration message.\n\t * @param fieldpAPI\n\t */\n\tprivate sendFocusOutMessage(fieldpAPI: Field | MultiValueField | undefined): void {\n\t\tif (!fieldpAPI) {\n\t\t\treturn;\n\t\t}\n\t\tconst collaborationPath = this.getCollaborationPath(fieldpAPI);\n\t\tif (collaborationPath) {\n\t\t\tthis.send({ action: Activity.Unlock, content: collaborationPath });\n\t\t}\n\t}\n\n\t/**\n\t * Gets the path used to send collaboration messages.\n\t * @param field\n\t * @returns The path (or undefined is no valid path could be found)\n\t */\n\tprivate getCollaborationPath(field: Field | MultiValueField): string | undefined {\n\t\t// Note: we send messages even if the context is inactive (empty creation rows),\n\t\t// otherwise we can't update the corresponding locks when the context is activated.\n\t\tconst bindingContext = field?.getBindingContext() as Context | undefined;\n\t\tif (!bindingContext) {\n\t\t\treturn;\n\t\t}\n\t\tif (field.isA<Field>(\"sap.fe.macros.Field\")) {\n\t\t\tif (!field.getMainPropertyRelativePath()) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\tconst fieldWrapper = field.content as FieldWrapper | undefined;\n\t\t\tif (\n\t\t\t\t![FieldEditMode.Editable, FieldEditMode.EditableDisplay, FieldEditMode.EditableReadOnly].includes(\n\t\t\t\t\tfieldWrapper?.getProperty(\"editMode\")\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\t// The field is not in edit mode --> no collaboration messages\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\treturn `${bindingContext.getPath()}/${field.getMainPropertyRelativePath()}`;\n\t\t} else if (field.isA<MultiValueField>(\"sap.ui.mdc.MultiValueField\")) {\n\t\t\tconst keypath = field.getBindingInfo(\"items\").template.getBindingPath(\"key\");\n\t\t\treturn `${bindingContext.getPath()}/${field.getBindingInfo(\"items\").path}/${keypath}`;\n\t\t}\n\t}\n\n\tpublic send(message: {\n\t\taction: Activity;\n\t\tcontent: string | string[] | undefined;\n\t\ttriggeredActionName?: string;\n\t\trefreshListBinding?: boolean;\n\t\tactionRequestedProperties?: string[];\n\t}): void {\n\t\tthis.getCollaborativeDraftService().send(this.getView(), message);\n\t}\n\n\tpublic isConnected(): boolean {\n\t\treturn this.getCollaborativeDraftService().isConnected(this.getView());\n\t}\n\n\tpublic async connect(draftRootContext: Context): Promise<void> {\n\t\treturn this.getCollaborativeDraftService().connect(draftRootContext, this.getView() as FEView);\n\t}\n\n\tpublic disconnect(): void {\n\t\tconst uiModel = this.getView().getModel(\"ui\") as JSONModel;\n\t\tthis.cleanDraftRoot();\n\t\tuiModel.setProperty(\"/hasCollaborationAuthorization\", undefined);\n\n\t\tif (this.isConnected()) {\n\t\t\tthis.getCollaborativeDraftService().disconnect(this.getView() as FEView);\n\t\t}\n\t}\n\n\tpublic isCollaborationEnabled(): boolean {\n\t\treturn this.getCollaborativeDraftService().isCollaborationEnabled(this.getView());\n\t}\n\n\tpublic retainAsyncMessages(activityPaths: string | string[]): void {\n\t\treturn this.getCollaborativeDraftService().retainAsyncMessages(this.getView(), activityPaths);\n\t}\n\n\tpublic releaseAsyncMessages(activityPaths: string | string[]): void {\n\t\treturn this.getCollaborativeDraftService().releaseAsyncMessages(this.getView(), activityPaths);\n\t}\n\n\tpublic updateLocksForContextPath(oldContextPath: string, newContextPath: string): void {\n\t\treturn this.getCollaborativeDraftService().updateLocksForContextPath(this.getView(), oldContextPath, newContextPath);\n\t}\n\n\tprivate getCurrentDraftRootPath(): string | undefined {\n\t\tconst internalModel = this.getView().getModel(\"internal\");\n\t\treturn internalModel?.getProperty(\"/collaborativeDraftRootPath\");\n\t}\n\n\tprivate getDraftUserListPromise(): Promise<DraftAdminUser[]> | undefined {\n\t\tconst internalModel = this.getView().getModel(\"internal\");\n\t\treturn internalModel?.getProperty(\"/collaborativeDraftUserListPromise\");\n\t}\n\n\tprivate isInitialShare(): boolean {\n\t\tconst internalModel = this.getView().getModel(\"internal\");\n\t\treturn internalModel?.getProperty(\"/collaborativeDraftShareInitial\") === true;\n\t}\n\n\tsetInitialShare(isInitial: boolean): void {\n\t\tconst internalModel = this.getView().getModel(\"internal\") as JSONModel;\n\t\tinternalModel?.setProperty(\"/collaborativeDraftShareInitial\", isInitial);\n\t}\n\n\t/**\n\t * Sets the draft root context for the collaboration.\n\t * Its path is stored in the internal model, so that it can be used later to check if the collaboration is active.\n\t * It also retrieves the list of users invited in the draft and stores it in the internal model.\n\t * @param draftRootContext The context for the draft root\n\t * @param groupId The groupId to request the list of users invited in the draft\n\t */\n\tprivate setDraftRoot(draftRootContext: Context, groupId: string): void {\n\t\tconst internalModel = this.getView().getModel(\"internal\") as JSONModel;\n\t\tlet userListPromise: Promise<DraftAdminUser[]>;\n\t\tif (draftRootContext.getObject(\"DraftAdministrativeData/DraftAdministrativeUser\") === undefined) {\n\t\t\tuserListPromise = new Promise((resolve) => {\n\t\t\t\tconst draftAdminUsers = draftRootContext\n\t\t\t\t\t.getModel()\n\t\t\t\t\t.bindList(\"DraftAdministrativeData/DraftAdministrativeUser\", draftRootContext);\n\t\t\t\tdraftAdminUsers\n\t\t\t\t\t.requestContexts()\n\t\t\t\t\t.then((e: Context[]) => {\n\t\t\t\t\t\treturn resolve(e.map((c: Context) => c.getObject()));\n\t\t\t\t\t})\n\t\t\t\t\t.catch((e: Error) => {\n\t\t\t\t\t\tLog.error(\"Error while loading the DraftAdministrativeUser \" + e);\n\t\t\t\t\t});\n\t\t\t});\n\t\t} else {\n\t\t\tuserListPromise = draftRootContext\n\t\t\t\t.requestSideEffects([\"DraftAdministrativeData/DraftAdministrativeUser\"], groupId)\n\t\t\t\t.then(async () => draftRootContext.requestObject(\"DraftAdministrativeData/DraftAdministrativeUser\"));\n\t\t}\n\n\t\tinternalModel?.setProperty(\"/collaborativeDraftUserListPromise\", userListPromise);\n\t\tinternalModel?.setProperty(\"/collaborativeDraftRootPath\", draftRootContext.getPath());\n\t}\n\n\t/**\n\t * Cleans the draft root context and the list of users invited in the draft.\n\t * This is called when the collaboration is deactivated or when the draft root context changes.\n\t */\n\tprivate cleanDraftRoot(): void {\n\t\tconst internalModel = this.getView().getModel(\"internal\") as JSONModel;\n\t\tinternalModel?.setProperty(\"/collaborativeDraftUserListPromise\", undefined);\n\t\tinternalModel?.setProperty(\"/collaborativeDraftRootPath\", undefined);\n\t}\n\n\t/**\n\t * Activates the collaboration for the given page context.\n\t * Checks if the current user is authorized to collaborate on the draft, and sets the flag in the UI model accordingly.\n\t * @param pageContext The page context (not necessarily a draft root)\n\t * @param isActiveEntity Is the context the active one (not a draft)?\n\t * @returns True if the user is authorized to collaborate, false otherwise.\n\t */\n\tasync activateCollaboration(pageContext: Context, isActiveEntity: boolean): Promise<boolean> {\n\t\ttry {\n\t\t\tconst uiModel = this.getView().getModel(\"ui\") as JSONModel;\n\t\t\tif (isActiveEntity) {\n\t\t\t\t// We're not in a draft -> disconnect if we were connected before\n\t\t\t\tuiModel.setProperty(\"/hasCollaborationAuthorization\", undefined);\n\t\t\t\tthis.disconnect();\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tconst draftRootContext = CommonUtils.findOrCreateRootContext(\n\t\t\t\tpageContext,\n\t\t\t\t\"Draft\",\n\t\t\t\tthis.getView(),\n\t\t\t\tthis.base.getAppComponent(),\n\t\t\t\t{ $$groupId: pageContext.getGroupId(), $select: \"DraftAdministrativeData/DraftAdministrativeUser\" }\n\t\t\t).rootContext;\n\t\t\tif (!draftRootContext) {\n\t\t\t\tLog.error(\"Couldn't find draft root context for enabling collaboration\");\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tconst currentDraftRootPath = this.getCurrentDraftRootPath();\n\t\t\tif (currentDraftRootPath !== draftRootContext.getPath()) {\n\t\t\t\tLog.error(\n\t\t\t\t\t`Unexpected path for checking collaboration authorizations: ${draftRootContext.getPath()} (expecting ${currentDraftRootPath})`\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tconst usersInvited = await this.getDraftUserListPromise();\n\t\t\tif (uiModel.getProperty(\"/hasCollaborationAuthorization\") !== undefined) {\n\t\t\t\treturn uiModel.getProperty(\"/hasCollaborationAuthorization\"); // Already checked, all good\n\t\t\t}\n\t\t\tconst me = CollaborationUtils.getMe(this.base.getAppComponent());\n\t\t\tconst hasMe = usersInvited?.some((singleUser) => singleUser.UserID === me.id) ?? false;\n\t\t\tuiModel.setProperty(\"/hasCollaborationAuthorization\", hasMe);\n\t\t\tuiModel.setProperty(\"/showCollaborationStrip\", !hasMe);\n\n\t\t\tif (hasMe) {\n\t\t\t\tthis.connect(draftRootContext).catch((error) => {\n\t\t\t\t\tLog.error(\"Error when connecting to the collaboration draft \" + error);\n\t\t\t\t});\n\t\t\t} else if (this.isConnected()) {\n\t\t\t\t// Disconnect the websocket but keep the properties in the internal model (so don't call this.disconnect)\n\t\t\t\tthis.getCollaborativeDraftService().disconnect(this.getView() as FEView);\n\t\t\t}\n\t\t\treturn hasMe;\n\t\t} catch (err) {\n\t\t\tLog.error(\"Error while activating the collaborative draft \" + err);\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Adds the current user in the draft root context.\n\t * @param pageContext The page context (not necessarily a draft root)\n\t */\n\tasync executeShareAction(pageContext: Context): Promise<void> {\n\t\ttry {\n\t\t\tconst draftRootContext = CommonUtils.findOrCreateRootContext(\n\t\t\t\tpageContext,\n\t\t\t\t\"Draft\",\n\t\t\t\tthis.getView(),\n\t\t\t\tthis.base.getAppComponent(),\n\t\t\t\t{ $$groupId: pageContext.getGroupId(), $select: \"DraftAdministrativeData/DraftAdministrativeUser\" }\n\t\t\t).rootContext;\n\t\t\tif (!draftRootContext) {\n\t\t\t\tLog.error(\"Couldn't find draft root context for enabling collaboration\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst currentDraftRootPath = this.getCurrentDraftRootPath();\n\t\t\tif (currentDraftRootPath !== undefined && currentDraftRootPath !== draftRootContext.getPath()) {\n\t\t\t\t// Collaboration was enabled on another draft --> disconnect first\n\t\t\t\tthis.disconnect();\n\t\t\t}\n\n\t\t\tif (currentDraftRootPath === draftRootContext.getPath()) {\n\t\t\t\treturn; // share was already called before, we don't need to call the Share action again\n\t\t\t}\n\n\t\t\tconst sharePromise = this.isInitialShare()\n\t\t\t\t? shareObject(draftRootContext, undefined, draftRootContext.getGroupId())\n\t\t\t\t: addSelf(draftRootContext);\n\t\t\tthis.setInitialShare(false); // Reset the initial share flag, so that we don't call the initial Share action again\n\t\t\tthis.setDraftRoot(draftRootContext, draftRootContext.getGroupId());\n\t\t\tawait sharePromise;\n\t\t} catch (err) {\n\t\t\tLog.error(\"Error while adding current user in the collaborative draft \" + err);\n\t\t}\n\t}\n\n\t/**\n\t * Sends a notification to other users that a property has been locked or unlocked by the current user.\n\t * @param context The context for the property\n\t * @param propertyName The name of the property\n\t * @param isLocked True if the property is locked, false if it is unlocked\n\t * @public\n\t * @ui5-experimental-since 1.141.0\n\t * @since 1.141.0\n\t */\n\tsendLockChange(context: Context, propertyName: string, isLocked: boolean): void {\n\t\tthis.send({ action: isLocked ? Activity.Lock : Activity.Unlock, content: `${context.getPath()}/${propertyName}` });\n\t}\n\n\t/**\n\t * Sends a notification to other users that property values have been changed by the current user.\n\t *\n\t * This notification must be sent after the changes have been sent successfully to the back-end.\n\t * @param context The context for the properties\n\t * @param propertyNames The property name or the array of property names\n\t * @public\n\t * @ui5-experimental-since 1.141.0\n\t * @since 1.141.0\n\t */\n\tsendPropertyValuesChange(context: Context, propertyNames: string | string[]): void {\n\t\tif (!Array.isArray(propertyNames)) {\n\t\t\tpropertyNames = [propertyNames];\n\t\t}\n\t\tthis.send({ action: Activity.Change, content: propertyNames.map((prop) => `${context.getPath()}/${prop}`) });\n\t}\n\n\t/**\n\t * Sends a notification to other users that new contexts have been created by the current user.\n\t *\n\t * This notification must be sent after the new contexts have been created successfully in the back-end.\n\t * @param contexts The array of newly created contexts\n\t * @public\n\t * @ui5-experimental-since 1.141.0\n\t * @since 1.141.0\n\t */\n\tsendContextsCreated(contexts: Context[]): void {\n\t\tthis.send({ action: Activity.Create, content: contexts.map((context) => context.getPath()) });\n\t}\n\n\t/**\n\t * Sends a notification to other users that contexts have been deleted by the current user.\n\t *\n\t * This notification must be sent after the contexts have been deleted successfully in the back-end.\n\t * @param contexts The array of deleted contexts\n\t * @public\n\t * @ui5-experimental-since 1.141.0\n\t * @since 1.141.0\n\t */\n\tsendContextsDeleted(contexts: Context[]): void {\n\t\tthis.send({ action: Activity.Delete, content: contexts.map((context) => context.getPath()) });\n\t}\n}\n"],"mappings":"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","ignoreList":[]}