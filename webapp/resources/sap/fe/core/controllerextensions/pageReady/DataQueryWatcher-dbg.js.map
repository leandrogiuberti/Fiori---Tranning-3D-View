{"version":3,"names":["DataQueryWatcher","_oEventProvider","_fnOnFinished","_aBindingRegistrations","_aOtherEventSources","_isSearchPending","_aMDCTables","_aMDCCharts","_proto","prototype","isSearchPending","isDataReceived","_isDataReceived","resetDataReceived","undefined","reset","forEach","reg","binding","detachEvent","onDataRequested","onDataReceived","oElement","onSearch","register","oEvent","params","getSource","bindingRegistration","find","Log","error","getGroupId","fireEvent","receivedCount","requestedCount","attachEventOnce","triggeredBySearch","bAllDone","some","every","aMDCTableLinkedToFilterBar","filter","oTable","getId","getFilter","getVisible","getParent","getProperty","aMDCChartsLinkedToFilterBar","oChart","length","registerTable","innerChartBoundPromise","registerChart","oError","_event","data","table","getRowBinding","chart","getControlDelegate","getInnerChart","getBinding","boundControl","push","registerBinding","arguments","includes","oRowBinding","attachEvent","oInnerChart","registerTableOrChart","element","isA","initialized","getAutoBindOnInit","getDomRef","Utils","whenBound","registerFilterBar","filterBar"],"sourceRoot":".","sources":["DataQueryWatcher.ts"],"sourcesContent":["import Log from \"sap/base/Log\";\nimport type ChartDelegate from \"sap/fe/macros/chart/ChartDelegate\";\n// eslint-disable-next-line @typescript-eslint/no-restricted-imports\nimport Utils from \"sap/fe/macros/table/Utils\";\nimport type Event from \"sap/ui/base/Event\";\nimport type EventProvider from \"sap/ui/base/EventProvider\";\nimport type Control from \"sap/ui/core/Control\";\nimport type Chart from \"sap/ui/mdc/Chart\";\nimport type FilterBar from \"sap/ui/mdc/FilterBar\";\nimport type Table from \"sap/ui/mdc/Table\";\nimport type { FilterBarBase$SearchEvent } from \"sap/ui/mdc/filterbar/FilterBarBase\";\nimport type Binding from \"sap/ui/model/Binding\";\nimport type ODataListBinding from \"sap/ui/model/odata/v4/ODataListBinding\";\n\nclass DataQueryWatcher {\n\tprotected _aBindingRegistrations: { binding: Binding; boundControl?: Control; requestedCount: number; receivedCount: number }[] = [];\n\n\tprotected _aOtherEventSources: EventProvider[] = [];\n\n\tprotected _isSearchPending = false;\n\n\tprotected _isDataReceived?: boolean;\n\n\tprotected _aMDCTables: Table[] = [];\n\n\tprotected _aMDCCharts: Chart[] = [];\n\n\tpublic constructor(\n\t\tprotected _oEventProvider: EventProvider,\n\t\tprotected _fnOnFinished: () => void\n\t) {}\n\n\t// Accessors\n\tpublic isSearchPending(): boolean {\n\t\treturn this._isSearchPending;\n\t}\n\n\tpublic isDataReceived(): boolean | undefined {\n\t\treturn this._isDataReceived;\n\t}\n\n\tpublic resetDataReceived(): void {\n\t\tthis._isDataReceived = undefined;\n\t}\n\n\t/**\n\t * Reset the state: unsubscribe to all data events and remove all registered objects.\n\t */\n\tpublic reset(): void {\n\t\t// Remove all remaining callbacks\n\t\tthis._aBindingRegistrations.forEach((reg) => {\n\t\t\treg.binding.detachEvent(\"dataRequested\", this.onDataRequested, this);\n\t\t\treg.binding.detachEvent(\"dataReceived\", this.onDataReceived, this);\n\t\t});\n\t\tthis._aOtherEventSources.forEach((oElement: EventProvider): void => {\n\t\t\toElement.detachEvent(\"search\", this.onSearch, this);\n\t\t\toElement.detachEvent(\"bindingUpdated\", this.register, this);\n\t\t});\n\t\tthis._aBindingRegistrations = [];\n\t\tthis._aOtherEventSources = [];\n\t\tthis._aMDCTables = [];\n\t\tthis._aMDCCharts = [];\n\t\tthis._isSearchPending = false;\n\t\tthis._isDataReceived = undefined;\n\t}\n\n\t// //////////////////////////////////////////////////\n\t// Callback when data is received on a binding.\n\tprotected onDataReceived(oEvent: Event<{}, Binding>, params: { triggeredBySearch: boolean }): void {\n\t\t// Look for the corresponding binding registration\n\t\tconst binding = oEvent.getSource();\n\t\tconst bindingRegistration = this._aBindingRegistrations.find((reg) => {\n\t\t\treturn reg.binding === binding;\n\t\t});\n\t\tif (!bindingRegistration) {\n\t\t\tLog.error(\"PageReady - data received on an unregistered binding\");\n\t\t\treturn;\n\t\t}\n\t\tswitch ((binding as ODataListBinding).getGroupId()) {\n\t\t\tcase \"$auto.Workers\":\n\t\t\t\tthis._oEventProvider.fireEvent(\"workersBatchReceived\");\n\t\t\t\tbreak;\n\t\t\tcase \"$auto.Heroes\":\n\t\t\t\tthis._oEventProvider.fireEvent(\"heroesBatchReceived\");\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t}\n\t\tbindingRegistration.receivedCount++;\n\t\tif (bindingRegistration.receivedCount < bindingRegistration.requestedCount) {\n\t\t\t// There are other request pending --> resubscribe to wait until they return\n\t\t\tbinding.attachEventOnce(\"dataReceived\", { triggeredBySearch: params.triggeredBySearch }, this.onDataReceived, this);\n\t\t\treturn;\n\t\t}\n\t\t// Check if at least one binding has requested data, and all bindings that have requested data have received it\n\t\tconst bAllDone =\n\t\t\tthis._aBindingRegistrations.some((reg) => {\n\t\t\t\treturn reg.requestedCount !== 0;\n\t\t\t}) &&\n\t\t\tthis._aBindingRegistrations.every((reg) => {\n\t\t\t\treturn reg.requestedCount === 0 || reg.receivedCount >= reg.requestedCount;\n\t\t\t});\n\t\tif (params.triggeredBySearch || bindingRegistration.receivedCount >= bindingRegistration.requestedCount) {\n\t\t\tthis._isSearchPending = false;\n\t\t}\n\t\tif (bAllDone) {\n\t\t\tthis._isDataReceived = true;\n\t\t\tthis._fnOnFinished();\n\t\t}\n\t}\n\n\t// //////////////////////////////////////////////////\n\t// Callback when data is requested on a binding.\n\tprotected onDataRequested(oEvent: Event<{}, Binding>, params: { triggeredBySearch: boolean }): void {\n\t\t// Look for the corresponding binding registration\n\t\tconst binding = oEvent.getSource();\n\t\tconst bindingRegistration = this._aBindingRegistrations.find((reg) => {\n\t\t\treturn reg.binding === binding;\n\t\t});\n\t\tif (!bindingRegistration) {\n\t\t\tLog.error(\"PageReady - data requested on an unregistered binding\");\n\t\t\treturn;\n\t\t}\n\t\tbindingRegistration.requestedCount++;\n\t\tthis._isDataReceived = false;\n\t\tif (bindingRegistration.requestedCount - bindingRegistration.receivedCount === 1) {\n\t\t\t// Listen to dataReceived only if there's no other request pending\n\t\t\t// Otherwise the 'dataReceived' handler would be called several times when the first query returns\n\t\t\t// and we wouldn't wait for all queries to be finished\n\t\t\t// (we will resubscribe to the dataReceived event in onDataReceived if necessary)\n\t\t\tbinding.attachEventOnce(\"dataReceived\", { triggeredBySearch: params.triggeredBySearch }, this.onDataReceived, this);\n\t\t}\n\t}\n\n\t// //////////////////////////////////////////////////\n\t// Callback when a search is triggered from a filterbar\n\tprotected onSearch(oEvent: FilterBarBase$SearchEvent): void {\n\t\tconst aMDCTableLinkedToFilterBar = this._aMDCTables.filter((oTable) => {\n\t\t\treturn (\n\t\t\t\toEvent.getSource().getId() === oTable.getFilter() &&\n\t\t\t\toTable.getVisible() &&\n\t\t\t\t!oTable.getParent()?.getProperty(\"bindingSuspended\")\n\t\t\t);\n\t\t});\n\t\tconst aMDCChartsLinkedToFilterBar = this._aMDCCharts.filter((oChart) => {\n\t\t\treturn oEvent.getSource().getId() === oChart.getFilter() && oChart.getVisible();\n\t\t});\n\t\tif (aMDCTableLinkedToFilterBar.length > 0 || aMDCChartsLinkedToFilterBar.length > 0) {\n\t\t\tthis._isSearchPending = true;\n\t\t}\n\t\taMDCTableLinkedToFilterBar.forEach((oTable) => {\n\t\t\tthis.registerTable(oTable, true);\n\t\t});\n\t\taMDCChartsLinkedToFilterBar.forEach(async (oChart: Chart & { innerChartBoundPromise?: Promise<void> }) => {\n\t\t\ttry {\n\t\t\t\tif (oChart.innerChartBoundPromise) {\n\t\t\t\t\tawait oChart.innerChartBoundPromise;\n\t\t\t\t}\n\t\t\t\tthis.registerChart(oChart, true);\n\t\t\t} catch (oError: unknown) {\n\t\t\t\tLog.error(\"Cannot find a inner bound chart\", oError as string);\n\t\t\t}\n\t\t});\n\t}\n\n\t// //////////////////////////////////////////////////\n\t// Register a binding (with an optional table/chart)\n\t// and attach callbacks on dateRequested/dataReceived events\n\tpublic register(_event: Event | null, data: { binding?: Binding; table?: Table; chart?: Chart; triggeredBySearch: boolean }): void {\n\t\tconst binding: Binding | undefined =\n\t\t\tdata.binding ||\n\t\t\tdata.table?.getRowBinding() ||\n\t\t\t(data.chart?.getControlDelegate() as typeof ChartDelegate).getInnerChart(data.chart).getBinding(\"data\");\n\t\tconst boundControl = (data.table || data.chart) as Control | undefined;\n\t\tif (!binding) {\n\t\t\treturn;\n\t\t}\n\t\t// Check if the binding is already registered\n\t\tlet bindingRegistration = this._aBindingRegistrations.find((reg) => {\n\t\t\treturn reg.binding === binding;\n\t\t});\n\t\tif (bindingRegistration) {\n\t\t\tif (boundControl) {\n\t\t\t\t// The binding was already registerd without boundControl information --> update boundControl\n\t\t\t\tbindingRegistration.boundControl = boundControl;\n\t\t\t}\n\t\t\t// This binding has already requested data, but we're registering it again (on search) --> attach to dataRequested again\n\t\t\tif (bindingRegistration.requestedCount > 0) {\n\t\t\t\tbinding.detachEvent(\"dataRequested\", this.onDataRequested, this);\n\t\t\t\tbinding.attachEventOnce(\"dataRequested\", { triggeredBySearch: data.triggeredBySearch }, this.onDataRequested, this);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\tif (boundControl) {\n\t\t\t// Check if there's a different binding registered for the bound control\n\t\t\tbindingRegistration = this._aBindingRegistrations.find((reg) => {\n\t\t\t\treturn reg.boundControl === boundControl;\n\t\t\t});\n\t\t\tif (bindingRegistration && bindingRegistration.binding !== binding) {\n\t\t\t\t// The control had a different binding. This can happen in case of MDC charts who recreated their binding after search\n\t\t\t\t// The previous binding is destroyed, we can replace it with the new and reset counters\n\t\t\t\tbindingRegistration.binding = binding;\n\t\t\t\tbindingRegistration.requestedCount = 0;\n\t\t\t\tbindingRegistration.receivedCount = 0;\n\t\t\t}\n\t\t}\n\t\tif (!bindingRegistration) {\n\t\t\tbindingRegistration = {\n\t\t\t\tbinding: binding,\n\t\t\t\tboundControl: boundControl,\n\t\t\t\trequestedCount: 0,\n\t\t\t\treceivedCount: 0\n\t\t\t};\n\t\t\tthis._aBindingRegistrations.push(bindingRegistration);\n\t\t}\n\t\tbinding.detachEvent(\"dataRequested\", this.onDataRequested, this);\n\t\tbinding.attachEventOnce(\"dataRequested\", { triggeredBySearch: data.triggeredBySearch }, this.onDataRequested, this);\n\t}\n\n\t/**\n\t * Registers a binding for watching its data events (dataRequested and dataReceived).\n\t * @param binding The binding\n\t */\n\tpublic registerBinding(binding: Binding): void {\n\t\tthis.register(null, { binding, triggeredBySearch: false });\n\t}\n\n\t/**\n\t * Registers an MDCTable for watching the data events on its row binding (dataRequested and dataReceived).\n\t * @param table The table\n\t * @param triggeredBySearch True if this registration is triggered by a filterBar search\n\t */\n\tprotected registerTable(table: Table, triggeredBySearch = false): void {\n\t\tif (!this._aMDCTables.includes(table)) {\n\t\t\tthis._aMDCTables.push(table);\n\t\t}\n\t\tconst oRowBinding = table.getRowBinding();\n\t\tif (oRowBinding) {\n\t\t\tthis.register(null, { table, triggeredBySearch });\n\t\t}\n\t\tif (!this._aOtherEventSources.includes(table)) {\n\t\t\ttable.attachEvent(\"bindingUpdated\", { table, triggeredBySearch }, this.register, this);\n\t\t\tthis._aOtherEventSources.push(table);\n\t\t}\n\t}\n\n\t/**\n\t * Registers an MDCChart for watching the data events on its inner data binding (dataRequested and dataReceived).\n\t * @param chart The chart\n\t * @param triggeredBySearch True if this registration is triggered by a filterBar search\n\t */\n\tprotected registerChart(chart: Chart, triggeredBySearch = false): void {\n\t\tif (!this._aMDCCharts.includes(chart)) {\n\t\t\tthis._aMDCCharts.push(chart);\n\t\t}\n\t\tconst oInnerChart = (chart.getControlDelegate() as typeof ChartDelegate).getInnerChart(chart);\n\t\tconst binding = oInnerChart?.getBinding(\"data\");\n\t\tif (binding) {\n\t\t\tthis.register(null, { chart, triggeredBySearch });\n\t\t}\n\t\tif (!this._aOtherEventSources.includes(chart)) {\n\t\t\tchart.attachEvent(\"bindingUpdated\", { chart, triggeredBySearch }, this.register, this);\n\t\t\tthis._aOtherEventSources.push(chart);\n\t\t}\n\t}\n\n\t/**\n\t * Registers an MDCTable or MDCChart for watching the data events on its inner data binding (dataRequested and dataReceived).\n\t * @param element  The table or chart\n\t */\n\tpublic async registerTableOrChart(element: Table | Chart): Promise<void> {\n\t\tif (!element.isA<Table>(\"sap.ui.mdc.Table\") && !element.isA<Chart>(\"sap.ui.mdc.Chart\")) {\n\t\t\treturn;\n\t\t}\n\t\ttry {\n\t\t\tawait element.initialized(); // access binding only after table/chart is bound\n\t\t\tif (element.isA<Table>(\"sap.ui.mdc.Table\")) {\n\t\t\t\tthis.registerTable(element);\n\t\t\t\t//If the autoBindOnInit is enabled, the table will be rebound\n\t\t\t\t//Then we need to wait for this rebind to occur to ensure the pageReady will also wait for the data to be received\n\t\t\t\tif (element.getAutoBindOnInit() && element.getDomRef()) {\n\t\t\t\t\tawait Utils.whenBound(element);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.registerChart(element);\n\t\t\t}\n\t\t} catch (oError: unknown) {\n\t\t\tLog.error(\"PageReady - Cannot register a table or a chart\", oError as string);\n\t\t}\n\t}\n\n\t/**\n\t * Registers an MDCFilterBar for watching its search event.\n\t * @param filterBar The filter bar\n\t */\n\tpublic registerFilterBar(filterBar: FilterBar): void {\n\t\tfilterBar.attachEvent(\"search\", this.onSearch, this);\n\t\tthis._aOtherEventSources.push(filterBar);\n\t}\n}\nexport default DataQueryWatcher;\n"],"mappings":"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","ignoreList":[],"file":"DataQueryWatcher-dbg.js"}