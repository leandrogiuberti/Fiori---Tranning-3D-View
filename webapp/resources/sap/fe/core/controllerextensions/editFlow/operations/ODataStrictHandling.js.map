{"version":3,"file":"ODataStrictHandling.js","names":["InvocationGrouping","FELibrary","ODataStrictHandling","parameters","this","strictHandlingResolves","strictHandlingWarningMessages","canceled","isCanceled","contexts","length","binding","getBinding","isA","tableAPI","ElementRegistry","filter","element","getContent","getRowBinding","_exports","_proto","prototype","handleOdataStrictHandling","async","operationContextBinding","internalOperationsPromiseResolve","onContextValidation","messages412","arguments","undefined","handlingResolve","strictHandlingPromise","Promise","resolve","push","message","getType","MessageType","Error","Log","warning","additionalText","column","getIdentifierColumn","getContext","getObject","setAdditionalText","events","onResponse","manageStrictHandlingFails","messageHandling","hasTransitionErrorsOrWarnings","invocationGrouping","ChangeSet","displayMessages","strictHandlingResolve","messageModel","Messaging","getMessageModel","messagesInModel","getData","setData","concat","error","messages","actionName","ResourceModelHelper","getLocalizedText","label","appComponent","getDescription","getDescriptionUrl","displayMessageOnMessageBox","displayMessagesOnDialog","messageResolve","promise","resourceModel","getResourceModel","messageText","getMessage","identifierText","getAdditionalText","isMultiContext412","genericChangesetMessage","getText","warningMessageText","cancelButtonTxt","displayedMessage","tableTypeName","getTableDefinition","headerInfoTypeName","CommonUtils","getTranslatedTextFromExpBindingString","toString","MessageBox","title","actions","emphasizedAction","onClose","action","messageDialogModel","JSONModel","warningMessage","warningDesc","genericMessage","Message","type","Information","target","persistent","description","StrictDialog","messageObject","prepareMessageViewForDialog","onBeginButtonPress","handleMessageOnValidation","bind","onEndButtonPress","handleMessageOnCancel","open","removeBoundTransitionMessages","removeUnboundTransitionMessages","onValidation","information","contentWidth","onCancel"],"sources":["./ODataStrictHandling.ts"],"sourcesContent":["import Log from \"sap/base/Log\";\nimport type AppComponent from \"sap/fe/core/AppComponent\";\nimport CommonUtils from \"sap/fe/core/CommonUtils\";\nimport ResourceModelHelper from \"sap/fe/core/helpers/ResourceModelHelper\";\nimport FELibrary from \"sap/fe/core/library\";\nimport type TableAPI from \"sap/fe/macros/table/TableAPI\";\nimport MessageBox from \"sap/m/MessageBox\";\nimport ElementRegistry from \"sap/ui/core/ElementRegistry\";\nimport Messaging from \"sap/ui/core/Messaging\";\nimport Message from \"sap/ui/core/message/Message\";\nimport MessageType from \"sap/ui/core/message/MessageType\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\nimport type Context from \"sap/ui/model/odata/v4/Context\";\nimport type ODataContextBinding from \"sap/ui/model/odata/v4/ODataContextBinding\";\nimport StrictDialog from \"../../dialog/ODataStrictDialog\";\nimport messageHandling from \"../../messageHandler/messageHandling\";\nconst InvocationGrouping = FELibrary.InvocationGrouping;\n\nexport default class ODataStrictHandling {\n\tprivate strictHandlingResolves: { handlingResolve: (value: boolean) => void; onContextValidation: Function }[] = [];\n\n\tprivate strictHandlingWarningMessages: Message[] = [];\n\n\tprivate canceled = false;\n\n\tprivate readonly tableAPI: TableAPI | undefined;\n\n\t/**\n\t * Creates an instance of ODataStrictHandling.\n\t * This class is used to handle strict handling operations in OData V4.\n\t * It manages the responses from the OData service when strict handling is enabled,\n\t * and provides a way to display messages to the user when operations fail due to strict handling.\n\t * @param parameters The parameters for the strict handling.\n\t * @param parameters.appComponent The AppComponent instance.\n\t * @param parameters.contexts An array of Context instances used for the operation.\n\t * @param parameters.label A label for the operation, used in messages.\n\t * @param parameters.invocationGrouping Optional parameter to specify the grouping of the invocation (e.g., ChangeSet).\n\t * @param parameters.events The events for the strict handling\n\t * @param parameters.events.onResponse The event triggered when the backend returns 412 messages.\n\t * @param parameters.events.onCancel The event triggered when the strict handling is canceled by the end user.\n\t * @param parameters.events.onValidation The event triggered when the strict handling is validated by the end user.\n\t */\n\tconstructor(\n\t\tprivate readonly parameters: {\n\t\t\tappComponent: AppComponent;\n\t\t\tcontexts: Context[];\n\t\t\tlabel: string;\n\t\t\tinvocationGrouping?: string;\n\t\t\tevents?: {\n\t\t\t\tonResponse?: (messages: Message[]) => void;\n\t\t\t\tonCancel?: () => void;\n\t\t\t\tonValidation?: () => void;\n\t\t\t};\n\t\t}\n\t) {\n\t\tif (this.parameters.contexts.length) {\n\t\t\tconst binding = this.parameters.contexts[0].getBinding();\n\t\t\tif (binding?.isA(\"sap.ui.model.odata.v4.ODataListBinding\")) {\n\t\t\t\tthis.tableAPI = ElementRegistry.filter(\n\t\t\t\t\t(element) => element.isA<TableAPI>(\"sap.fe.macros.table.TableAPI\") && element.getContent()?.getRowBinding() === binding\n\t\t\t\t)[0] as TableAPI | undefined;\n\t\t\t}\n\t\t}\n\t}\n\n\tasync handleOdataStrictHandling(\n\t\toperationContextBinding: ODataContextBinding,\n\t\tinternalOperationsPromiseResolve: Function | undefined,\n\t\tonContextValidation: Function,\n\t\tmessages412: Message[] = []\n\t): Promise<boolean> {\n\t\tlet handlingResolve!: (value: boolean) => void;\n\t\tconst strictHandlingPromise = new Promise<boolean>(function (resolve) {\n\t\t\thandlingResolve = resolve;\n\t\t});\n\t\tthis.strictHandlingResolves.push({ handlingResolve, onContextValidation });\n\t\t// Find error message in the 412 response and raise warning.\n\t\tif (messages412.filter((message) => message.getType() === MessageType.Error).length) {\n\t\t\tLog.warning(\n\t\t\t\t\"Warning: 412 ('Pre-condition Check Failed due to strict-handling') returns messages of type error but only warning messages are appropriate!\"\n\t\t\t);\n\t\t}\n\t\tlet additionalText = \"\";\n\t\t// If there is more than one context we need the identifier. This would fix if the action is triggered via table chevron\n\t\tif (this.parameters.contexts.length > 1) {\n\t\t\tconst column = this.tableAPI?.getIdentifierColumn();\n\t\t\tif (typeof column === \"string\") {\n\t\t\t\tadditionalText = operationContextBinding.getContext()?.getObject(column);\n\t\t\t}\n\t\t}\n\t\t// set type and subtitle for all warning messages\n\t\tfor (const message of messages412) {\n\t\t\tmessage.setAdditionalText(additionalText);\n\t\t\tthis.strictHandlingWarningMessages.push(message);\n\t\t}\n\t\tthis.parameters.events?.onResponse?.(messages412);\n\t\tinternalOperationsPromiseResolve?.();\n\t\treturn strictHandlingPromise;\n\t}\n\n\tpublic isCanceled = (): boolean => {\n\t\treturn this.canceled;\n\t};\n\n\t/**\n\t * Manages the strict handling fails.\n\t * @returns The promise of the strict handling\n\t */\n\tpublic async manageStrictHandlingFails(): Promise<void> {\n\t\tif (this.strictHandlingResolves.length) {\n\t\t\ttry {\n\t\t\t\tif (\n\t\t\t\t\t(!messageHandling.hasTransitionErrorsOrWarnings() ||\n\t\t\t\t\t\tthis.parameters.invocationGrouping !== InvocationGrouping.ChangeSet) &&\n\t\t\t\t\tthis.strictHandlingWarningMessages.length\n\t\t\t\t) {\n\t\t\t\t\tawait this.displayMessages();\n\t\t\t\t} else {\n\t\t\t\t\tfor (const strictHandlingResolve of this.strictHandlingResolves) {\n\t\t\t\t\t\tstrictHandlingResolve.handlingResolve(false);\n\t\t\t\t\t}\n\t\t\t\t\tconst messageModel = Messaging.getMessageModel();\n\t\t\t\t\tconst messagesInModel = messageModel.getData();\n\t\t\t\t\tmessageModel.setData(messagesInModel.concat(this.strictHandlingWarningMessages));\n\t\t\t\t}\n\t\t\t} catch {\n\t\t\t\tLog.error(\"Re-triggering of strict handling operations failed\");\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async displayMessages(): Promise<void> {\n\t\tconst messages = this.strictHandlingWarningMessages;\n\t\tif (!messages.length) {\n\t\t\treturn;\n\t\t}\n\t\tconst actionName = ResourceModelHelper.getLocalizedText(this.parameters.label, this.parameters.appComponent);\n\t\treturn messages.length === 1 && !(messages[0].getDescription()?.length || messages[0].getDescriptionUrl()?.length)\n\t\t\t? this.displayMessageOnMessageBox(messages[0], actionName)\n\t\t\t: this.displayMessagesOnDialog(messages, actionName);\n\t}\n\n\tprivate async displayMessageOnMessageBox(message: Message, actionName: string): Promise<void> {\n\t\tlet messageResolve!: Function;\n\t\tconst promise = new Promise<void>((resolve) => {\n\t\t\tmessageResolve = resolve;\n\t\t});\n\t\tconst resourceModel = ResourceModelHelper.getResourceModel(this.parameters.appComponent);\n\t\tconst messageText = message.getMessage();\n\t\tconst identifierText = message.getAdditionalText();\n\t\tconst isMultiContext412 = this.parameters.contexts.length > 1;\n\t\tconst genericChangesetMessage = resourceModel.getText(\"C_COMMON_DIALOG_CANCEL_SINGLE_MESSAGE_TEXT\");\n\t\tconst warningMessageText =\n\t\t\tthis.parameters.invocationGrouping === InvocationGrouping.ChangeSet\n\t\t\t\t? resourceModel.getText(\"C_COMMON_DIALOG_CANCEL_MESSAGE_TEXT\", [actionName])\n\t\t\t\t: resourceModel.getText(\"C_COMMON_DIALOG_SKIP_SINGLE_MESSAGE_TEXT\");\n\t\tlet cancelButtonTxt: string = resourceModel.getText(\"C_COMMON_DIALOG_CANCEL\");\n\t\tlet displayedMessage = \"\";\n\t\tif (!isMultiContext412) {\n\t\t\tdisplayedMessage = `${messageText}\\n${resourceModel.getText(\"PROCEED\")}`;\n\t\t} else if (identifierText !== undefined && identifierText !== \"\") {\n\t\t\tcancelButtonTxt =\n\t\t\t\tthis.parameters.invocationGrouping === InvocationGrouping.ChangeSet\n\t\t\t\t\t? cancelButtonTxt\n\t\t\t\t\t: resourceModel.getText(\"C_COMMON_DIALOG_SKIP\");\n\t\t\tconst tableTypeName = this.tableAPI?.getTableDefinition().headerInfoTypeName;\n\t\t\tconst headerInfoTypeName =\n\t\t\t\tthis.tableAPI && typeof tableTypeName === \"string\"\n\t\t\t\t\t? CommonUtils.getTranslatedTextFromExpBindingString(tableTypeName, this.tableAPI)\n\t\t\t\t\t: tableTypeName;\n\t\t\tif (headerInfoTypeName) {\n\t\t\t\tdisplayedMessage = `${headerInfoTypeName.toString()} ${identifierText}: ${messageText}\\n\\n${warningMessageText}`;\n\t\t\t} else {\n\t\t\t\tdisplayedMessage = `${identifierText}: ${messageText}\\n\\n${warningMessageText}`;\n\t\t\t}\n\t\t} else {\n\t\t\tcancelButtonTxt =\n\t\t\t\tthis.parameters.invocationGrouping === InvocationGrouping.ChangeSet\n\t\t\t\t\t? cancelButtonTxt\n\t\t\t\t\t: resourceModel.getText(\"C_COMMON_DIALOG_SKIP\");\n\t\t\tdisplayedMessage = `${messageText}\\n\\n${warningMessageText}`;\n\t\t}\n\t\tif (isMultiContext412 && this.parameters.invocationGrouping === InvocationGrouping.ChangeSet) {\n\t\t\tdisplayedMessage = `${genericChangesetMessage}\\n\\n${displayedMessage}`;\n\t\t}\n\t\tMessageBox.warning(displayedMessage, {\n\t\t\ttitle: resourceModel.getText(\"WARNING\"),\n\t\t\tactions: [actionName, cancelButtonTxt],\n\t\t\temphasizedAction: actionName,\n\t\t\tonClose: (action: string) => {\n\t\t\t\tthis[action === actionName ? \"handleMessageOnValidation\" : \"handleMessageOnCancel\"]();\n\t\t\t\tmessageResolve();\n\t\t\t}\n\t\t});\n\t\treturn promise;\n\t}\n\n\tprivate async displayMessagesOnDialog(messages: Message[], actionName: string): Promise<void> {\n\t\tlet messageResolve!: Function;\n\t\tconst promise = new Promise<void>((resolve) => {\n\t\t\tmessageResolve = resolve;\n\t\t});\n\t\tconst messageDialogModel = new JSONModel();\n\t\tconst resourceModel = ResourceModelHelper.getResourceModel(this.parameters.appComponent);\n\t\tconst isMultiContext412 = this.parameters.contexts.length > 1;\n\t\tlet warningMessage = \"\";\n\t\tlet warningDesc = \"\";\n\t\tlet cancelButtonTxt: string = resourceModel.getText(\"C_COMMON_DIALOG_CANCEL\");\n\t\tif (isMultiContext412) {\n\t\t\tcancelButtonTxt =\n\t\t\t\tthis.parameters.invocationGrouping === InvocationGrouping.ChangeSet\n\t\t\t\t\t? cancelButtonTxt\n\t\t\t\t\t: resourceModel.getText(\"C_COMMON_DIALOG_SKIP\");\n\t\t\twarningMessage = resourceModel.getText(\n\t\t\t\tthis.parameters.invocationGrouping === InvocationGrouping.ChangeSet\n\t\t\t\t\t? \"C_COMMON_DIALOG_CANCEL_MESSAGES_WARNING\"\n\t\t\t\t\t: \"C_COMMON_DIALOG_SKIP_MESSAGES_WARNING\"\n\t\t\t);\n\t\t\twarningDesc = resourceModel.getText(\n\t\t\t\tthis.parameters.invocationGrouping === InvocationGrouping.ChangeSet\n\t\t\t\t\t? \"C_COMMON_DIALOG_CANCEL_MESSAGES_TEXT\"\n\t\t\t\t\t: \"C_COMMON_DIALOG_SKIP_MESSAGES_TEXT\",\n\t\t\t\t[actionName]\n\t\t\t);\n\t\t} else {\n\t\t\twarningMessage = resourceModel.getText(\"C_COMMON_DIALOG_CANCEL_MESSAGES_GENERIC_ACTION_WARNING\", [actionName]);\n\t\t}\n\t\tconst genericMessage = new Message({\n\t\t\tmessage: warningMessage,\n\t\t\ttype: MessageType.Information,\n\t\t\ttarget: undefined,\n\t\t\tpersistent: true,\n\t\t\tdescription: warningDesc.length ? warningDesc : undefined\n\t\t});\n\t\tmessages = [genericMessage].concat(messages);\n\t\tmessageDialogModel.setData(messages);\n\t\tnew StrictDialog({\n\t\t\tmessageObject: messageHandling.prepareMessageViewForDialog(messageDialogModel, true, isMultiContext412),\n\t\t\tactionName,\n\t\t\tmessageDialogModel,\n\t\t\tcancelButtonTxt,\n\t\t\tonBeginButtonPress: this.handleMessageOnValidation.bind(this),\n\t\t\tonEndButtonPress: this.handleMessageOnCancel.bind(this),\n\t\t\tonClose: messageResolve\n\t\t}).open();\n\t\treturn promise;\n\t}\n\n\tprivate handleMessageOnValidation(): void {\n\t\tfor (const strictHandlingResolve of this.strictHandlingResolves) {\n\t\t\tstrictHandlingResolve.onContextValidation();\n\t\t\tstrictHandlingResolve.handlingResolve(true);\n\t\t}\n\t\tmessageHandling.removeBoundTransitionMessages();\n\t\tmessageHandling.removeUnboundTransitionMessages();\n\t\tthis.strictHandlingWarningMessages = [];\n\t\tthis.parameters.events?.onValidation?.();\n\t}\n\n\tprivate handleMessageOnCancel(): void {\n\t\tconst resourceModel = ResourceModelHelper.getResourceModel(this.parameters.appComponent);\n\t\tthis.strictHandlingWarningMessages = [];\n\t\tthis.canceled = true;\n\t\tfor (const strictHandlingResolve of this.strictHandlingResolves) {\n\t\t\tstrictHandlingResolve.handlingResolve(false);\n\t\t}\n\t\tthis.strictHandlingResolves = [];\n\t\tif (this.parameters.invocationGrouping === InvocationGrouping.ChangeSet) {\n\t\t\tMessageBox.information(resourceModel.getText(\"M_CHANGESET_CANCEL_MESSAGES\"), {\n\t\t\t\tcontentWidth: \"150px\"\n\t\t\t} as object);\n\t\t}\n\t\tthis.parameters.events?.onCancel?.();\n\t}\n}\n"],"mappings":"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","ignoreList":[]}