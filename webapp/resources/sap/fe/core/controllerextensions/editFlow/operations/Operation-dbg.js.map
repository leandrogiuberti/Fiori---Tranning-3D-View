{"version":3,"names":["InvocationGrouping","FELibrary","Operation","appComponent","model","convertedAction","parameters","executionPromise","Promise","resolve","reject","executionResolve","executionReject","parametersValues","numberOfODataExecutions","externalParametersValues","contexts","setMessageCollectedPromise","entitySetName","isBound","undefined","getMetaModel","getMetaContext","getPath","getObject","operationMessage","OperationMessage","messageHandler","action","label","invocationGrouping","disableNotification","skipMessages","events","onMessageCollected","manageDialogOnMessages","messageCollectedResolve","onMessagePageNavigationCallback","operationParameters","closeParameterDialog","OperationParameters","skipParameterDialog","defaultValuesExtensionFunction","isCreateAction","parameterValues","view","onParameterDialogOpened","bind","onParameterDialogClosed","_exports","_proto","prototype","clear","odataOperation","setDefaultParametersValues","execute","internalExecution","operationResult","getOperationParameters","confirmAction","ODataOperation","disableStrictHandling","oDataProperties","disableSideEffects","ghostContextBindingProtection","onStrictValidation","oDataEvents","onStrictCancel","onStrictResponse","messages412","addWarningMessagesToMessageHandler","onStrictHandling","onODataResponse","onODataSubmit","onRequestSideEffects","enhance$select","groupId","replaceWithRVC","ignoreETag","bindingParameters","deferredSubmit","reactToOperations","isParameterDialog","some","isRejected","closeDialog","messageCollectedPromise","isParameterDialogOpened","e","isErrorIntoParameterDialog","actionHelper","isStaticAction","length","resetDialog","ChangeSet","isStrictCanceled","resetParameterDialogState","getOperationResults","isActionCritical","context","isActionCriticalValue","isActionCriticalBindingExp","getIsActionCriticalExpression","convertTypes","isConstant","compileConstant","anyObject","Any","anyBoolean","compileExpression","setModel","getModel","setBindingContext","booleanBinding","getBinding","isA","all","getBindings","map","nestedBinding","requestValue","isCritical","actionName","getActionName","boundActionName","includes","split","suffixResourceKey","MessageBox","confirm","ResourceModelHelper","getResourceModel","getText","title","getConfirmTitle","onClose","Action","OK","Error","Constants","CancelActionDialog","key","resourceModel","titleOverrideExists","checkIfResourceKeyExists","getOperationFromName","name","metaModel","convertedMetaModel","sourceEntityType","getInvolvedDataModelObjects","targetEntityType","replace","namespace","pop","actions","find","importName","entityContainer","fullyQualifiedName","actionImports","actionImport"],"sourceRoot":".","sources":["Operation.ts"],"sourcesContent":["import type { ActionImport, Action as EdmAction, PrimitiveType } from \"@sap-ux/vocabularies-types\";\nimport { compileConstant, compileExpression, isConstant } from \"sap/fe/base/BindingToolkit\";\nimport type { BindContextParameters } from \"sap/fe/core/controllerextensions/editFlow/draft\";\nimport Any from \"sap/fe/core/controls/Any\";\nimport { isRejected } from \"sap/fe/core/helpers/TypeGuards\";\nimport FELibrary from \"sap/fe/core/library\";\nimport { getIsActionCriticalExpression } from \"sap/fe/core/templating/ActionHelper\";\nimport MessageBox from \"sap/m/MessageBox\";\nimport type Message from \"sap/ui/core/message/Message\";\nimport type CompositeBinding from \"sap/ui/model/CompositeBinding\";\nimport type Context from \"sap/ui/model/odata/v4/Context\";\nimport type ODataModel from \"sap/ui/model/odata/v4/ODataModel\";\nimport type ODataPropertyBinding from \"sap/ui/model/odata/v4/ODataPropertyBinding\";\nimport type AppComponent from \"../../../AppComponent\";\nimport type { FEView } from \"../../../BaseController\";\nimport { convertTypes, getInvolvedDataModelObjects } from \"../../../converters/MetaModelConverter\";\nimport * as ResourceModelHelper from \"../../../helpers/ResourceModelHelper\";\nimport type { ActionSideEffectsType } from \"../../../services/SideEffectsServiceFactory\";\nimport type MessageHandler from \"../../MessageHandler\";\nimport type { OperationResult } from \"./ODataOperation\";\nimport ODataOperation from \"./ODataOperation\";\nimport OperationMessage from \"./OperationMessage\";\nimport OperationParameters from \"./OperationParameters\";\nimport actionHelper from \"./actionHelper\";\n\nconst InvocationGrouping = FELibrary.InvocationGrouping;\n\nexport type OperationParametersType = {\n\tmessageHandler: MessageHandler;\n\tview?: FEView;\n\tparameterValues?: Record<string, PrimitiveType>[];\n\tlabel?: string;\n\tinvocationGrouping?: string;\n\tskipParameterDialog?: boolean;\n\tskipMessages?: boolean;\n\tentitySetName?: string;\n\toDataProperties?: {\n\t\tghostContextBindingProtection?: boolean;\n\t\tenhance$select?: boolean;\n\t\tdisableStrictHandling?: boolean;\n\t\tdisableSideEffects?: boolean;\n\t\tignoreETag?: boolean;\n\t\tgroupId?: string;\n\t\treplaceWithRVC?: boolean;\n\t\tdeferredSubmit?: boolean;\n\t};\n\tisCreateAction?: boolean;\n\tcontexts?: Context[];\n\tbindingParameters?: BindContextParameters;\n\tdefaultValuesExtensionFunction?: string;\n\toDataEvents?: {\n\t\tonODataResponse?: () => void;\n\t\tonODataSubmit?: () => void;\n\t\tonRequestSideEffects?: (\n\t\t\tsideEffects: ActionSideEffectsType,\n\t\t\toperation: EdmAction | ActionImport,\n\t\t\tsideEffectsPromises: Promise<unknown>[]\n\t\t) => void;\n\t\tonStrictCancel?: () => void;\n\t\tonStrictValidation?: () => void;\n\t};\n};\n\nexport default class Operation {\n\tprivate readonly contexts: Context[];\n\n\tprivate readonly entitySetName: string | undefined;\n\n\tprivate executionResolve!: Function;\n\n\tprivate executionReject!: Function;\n\n\tprivate readonly executionPromise = new Promise<PromiseSettledResult<OperationResult>[]>((resolve, reject) => {\n\t\tthis.executionResolve = resolve;\n\t\tthis.executionReject = reject;\n\t});\n\n\tprivate messageCollectedResolve!: Function;\n\n\tprivate messageCollectedPromise!: Promise<void>;\n\n\tprivate readonly operationMessage: OperationMessage;\n\n\tprivate readonly operationParameters: OperationParameters;\n\n\tprivate parametersValues: Record<string, PrimitiveType> = {};\n\n\tprivate numberOfODataExecutions = 0;\n\n\tprivate externalParametersValues = false;\n\n\tprivate odataOperation: ODataOperation | undefined;\n\n\t/**\n\t * Creates an instance of Operation.\n\t * This instance is used to execute an OData operation, which can be an action or an action import.\n\t * The operation can be executed with or without a parameter dialog.\n\t * If the operation is executed with a parameter dialog, the parameters are collected from the user.\n\t * If the operation is executed without a parameter dialog, the parameters must be provided in the constructor.\n\t * The operation can be executed with multiple contexts, which are used to execute the operation on each context.\n\t * The operation can be executed with a message handler, which is used to handle the messages generated by the operation.\n\t * The operation can be executed with OData properties, which are used to configure the OData operation.\n\t * The operation can be executed with OData events, which are used to handle the OData responses and side effects.\n\t * The operation can be executed with binding parameters, which are used to bind the operation to the context.\n\t * The operation can be executed with a default values extension function, which is used to set the default values for the parameters.\n\t * @param appComponent The application component\n\t * @param model The OData model where the operation is executed\n\t * @param convertedAction The converted action to execute\n\t * @param parameters The operation parameters\n\t * @param parameters.contexts The contexts for the operation\n\t * @param parameters.messageHandler The message handler to use for the operation\n\t * @param parameters.view The view where the operation is executed\n\t * @param parameters.parameterValues The values for the parameters of the operation\n\t * @param parameters.label The label for the operation\n\t * @param parameters.invocationGrouping The invocation grouping for the operation\n\t * @param parameters.skipParameterDialog If set to true the parameter dialog is skipped and the parameters are used directly\n\t * @param parameters.skipMessages Whether to skip the messages for the operation\n\t * @param parameters.entitySetName The entity set name for the operation\n\t * @param parameters.oDataProperties The OData properties for the operation\n\t * @param parameters.oDataProperties.ghostContextBindingProtection Whether to enable ghost context binding protection\n\t * @param parameters.oDataProperties.enhance$select Whether to enhance the $select parameter for requesting the sap messages\n\t * @param parameters.oDataProperties.disableStrictHandling Whether to disable the oData strict handling\n\t * @param parameters.oDataProperties.disableSideEffects Whether to disable side effects\n\t * @param parameters.oDataProperties.ignoreETag Whether to ignore the ETag\n\t * @param parameters.oDataProperties.groupId The group ID for the operation\n\t * @param parameters.oDataProperties.replaceWithRVC Whether this operation binding's parent context, which must belong to a list binding, is replaced with the operation's return value context (see below) and that list context is returned instead\n\t * @param parameters.oDataProperties.deferredSubmit If true the operation is not submitted immediately and must be submitted by the developer\n\t * @param parameters.oDataEvents The OData events for the operation\n\t * @param parameters.oDataEvents.onParameterDialogOpened The function to call when the parameter dialog is opened\n\t * @param parameters.oDataEvents.onParameterDialogClosed The function to call when the parameter dialog is closed\n\t * @param parameters.oDataEvents.onMessagePageNavigationCallback The function to call before page navigation is triggered\n\t * @param parameters.oDataEvents.onMessageCollected The function to call when the messages are collected\n\t * @param parameters.oDataEvents.onStrictResponse The function to call when the strict response is received\n\t * @param parameters.oDataEvents.onStrictCancel The function to call when the strict handling is canceled\n\t * @param parameters.oDataEvents.onStrictValidation The function to call when the strict validation is triggered\n\t * @param parameters.oDataEvents.onODataResponse The function to call when the OData response is received\n\t * @param parameters.oDataEvents.onODataSubmit The function to call when the OData submit is triggered\n\t * @param parameters.oDataEvents.onRequestSideEffects The function to call when the request side effects are triggered\n\t * @param parameters.isCreateAction Whether the operation is a create action\n\t * @param parameters.bindingParameters The binding parameters for the operation\n\t * @param parameters.defaultValuesExtensionFunction The default values extension function for the operation\n\t * @param parameters.closeParameterDialog The function to close the parameter dialog\n\t */\n\tconstructor(\n\t\tprivate readonly appComponent: AppComponent,\n\t\tprivate readonly model: ODataModel,\n\t\tprivate readonly convertedAction: EdmAction,\n\t\tprivate readonly parameters: OperationParametersType\n\t) {\n\t\tthis.contexts = parameters.contexts ?? [];\n\n\t\tthis.setMessageCollectedPromise();\n\n\t\t// If entitySetName is not provided, it is derived from the first context as fallback.\n\t\tthis.entitySetName =\n\t\t\tparameters.entitySetName ??\n\t\t\t(this.convertedAction.isBound && this.contexts[0] !== undefined\n\t\t\t\t? this.model.getMetaModel().getMetaContext(this.contexts[0].getPath()).getObject(\"@sapui.name\")\n\t\t\t\t: undefined);\n\n\t\tthis.operationMessage = new OperationMessage({\n\t\t\tmessageHandler: this.parameters.messageHandler,\n\t\t\taction: this.convertedAction,\n\t\t\tcontexts: this.contexts,\n\t\t\tlabel: this.parameters.label,\n\t\t\tinvocationGrouping: this.parameters.invocationGrouping,\n\t\t\tdisableNotification: this.parameters.skipMessages,\n\t\t\tentitySetName: this.entitySetName,\n\t\t\tevents: {\n\t\t\t\tonMessageCollected: (): void => {\n\t\t\t\t\t// Due to the mess into the message handling\n\t\t\t\t\t// the dialog should be closed or not only after the messages are collected\n\t\t\t\t\t// it means in the middle of the message handling workflow via\n\t\t\t\t\t// a callback function\n\t\t\t\t\tthis.manageDialogOnMessages();\n\t\t\t\t\tthis.messageCollectedResolve();\n\t\t\t\t},\n\t\t\t\tonMessagePageNavigationCallback: (): void => {\n\t\t\t\t\tthis.operationParameters.closeParameterDialog();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tthis.operationParameters = new OperationParameters(\n\t\t\tthis.appComponent,\n\t\t\tthis.model,\n\t\t\tthis.convertedAction,\n\t\t\tthis.parameters.skipParameterDialog,\n\t\t\t{\n\t\t\t\tcontexts: this.contexts,\n\t\t\t\tdefaultValuesExtensionFunction: this.parameters.defaultValuesExtensionFunction,\n\t\t\t\tisCreateAction: this.parameters.isCreateAction,\n\t\t\t\tlabel: this.parameters.label,\n\t\t\t\tparameterValues: this.parameters.parameterValues,\n\t\t\t\tentitySetName: this.entitySetName,\n\t\t\t\tview: this.parameters.view,\n\t\t\t\tmessageHandler: this.parameters.messageHandler,\n\t\t\t\tevents: {\n\t\t\t\t\tonParameterDialogOpened: this.operationMessage.onParameterDialogOpened.bind(this.operationMessage),\n\t\t\t\t\tonParameterDialogClosed: this.operationMessage.onParameterDialogClosed.bind(this.operationMessage)\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\n\tclear(): void {\n\t\tthis.operationParameters.closeParameterDialog();\n\t\tthis.odataOperation?.clear();\n\t}\n\n\t/**\n\t * Set the values related to the parameters  for the operation\n\t * If the values are set the operation parameter dialog is skipped.\n\t * @param parametersValues The values for the parameters\n\t */\n\tpublic setDefaultParametersValues(parametersValues: Record<string, PrimitiveType>): void {\n\t\tthis.parametersValues = parametersValues;\n\t\tthis.externalParametersValues = true;\n\t}\n\n\t/**\n\t * Executes the operation.\n\t * @returns A promise containing the results\n\t */\n\tpublic async execute(): Promise<PromiseSettledResult<OperationResult>[]> {\n\t\tthis.internalExecution();\n\t\treturn this.executionPromise;\n\t}\n\n\t/**\n\t * Executes the operation.\n\t */\n\tprivate async internalExecution(): Promise<void> {\n\t\tlet operationResult: PromiseSettledResult<OperationResult>[] = [];\n\t\ttry {\n\t\t\tthis.numberOfODataExecutions++;\n\t\t\tif (!this.externalParametersValues) {\n\t\t\t\tthis.parametersValues = await this.operationParameters.getOperationParameters();\n\t\t\t}\n\t\t\tif (this.numberOfODataExecutions === 1) {\n\t\t\t\tawait this.confirmAction();\n\t\t\t}\n\t\t\tthis.odataOperation = new ODataOperation(\n\t\t\t\tthis.convertedAction,\n\t\t\t\t{\n\t\t\t\t\tappComponent: this.appComponent,\n\t\t\t\t\tcontexts: this.contexts,\n\t\t\t\t\tmodel: this.model,\n\t\t\t\t\tlabel: this.parameters.label,\n\t\t\t\t\tinvocationGrouping: this.parameters.invocationGrouping,\n\t\t\t\t\tdisableStrictHandling: this.parameters.oDataProperties?.disableStrictHandling,\n\t\t\t\t\tdisableSideEffects: this.parameters.oDataProperties?.disableSideEffects,\n\t\t\t\t\tghostContextBindingProtection: this.parameters.oDataProperties?.ghostContextBindingProtection,\n\t\t\t\t\tevents: {\n\t\t\t\t\t\tonStrictValidation: this.parameters.oDataEvents?.onStrictValidation,\n\t\t\t\t\t\tonStrictCancel: this.parameters.oDataEvents?.onStrictCancel,\n\t\t\t\t\t\tonStrictResponse: (messages412: Message[]): void => {\n\t\t\t\t\t\t\tthis.parameters.messageHandler.addWarningMessagesToMessageHandler(messages412);\n\t\t\t\t\t\t\tthis.operationMessage.onStrictHandling();\n\t\t\t\t\t\t},\n\t\t\t\t\t\tonODataResponse: this.parameters.oDataEvents?.onODataResponse,\n\t\t\t\t\t\tonODataSubmit: this.parameters.oDataEvents?.onODataSubmit,\n\t\t\t\t\t\tonRequestSideEffects: this.parameters.oDataEvents?.onRequestSideEffects\n\t\t\t\t\t},\n\t\t\t\t\tparametersValues: this.parametersValues\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tenhance$select: this.parameters.oDataProperties?.enhance$select,\n\t\t\t\t\tgroupId: this.parameters.oDataProperties?.groupId,\n\t\t\t\t\treplaceWithRVC: this.parameters.oDataProperties?.replaceWithRVC,\n\t\t\t\t\tignoreETag: this.parameters.oDataProperties?.ignoreETag,\n\t\t\t\t\tbindingParameters: this.parameters.bindingParameters,\n\t\t\t\t\tdeferredSubmit: this.parameters.oDataProperties?.deferredSubmit\n\t\t\t\t}\n\t\t\t);\n\t\t\toperationResult = await this.odataOperation.execute();\n\t\t\tthis.operationMessage.reactToOperations(operationResult);\n\n\t\t\tif (this.operationParameters.isParameterDialog()) {\n\t\t\t\tif (!operationResult.some(isRejected)) {\n\t\t\t\t\tthis.closeDialog();\n\t\t\t\t} else {\n\t\t\t\t\tawait this.messageCollectedPromise;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.operationParameters.isParameterDialogOpened()) {\n\t\t\t\tthis.setMessageCollectedPromise();\n\t\t\t\tthis.internalExecution();\n\t\t\t} else {\n\t\t\t\tthis.executionResolve(operationResult);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tthis.executionReject(e);\n\t\t}\n\t}\n\n\t/**\n\t * Manages the parameter dialog after the messages.\n\t */\n\n\tprivate manageDialogOnMessages(): void {\n\t\tconst isErrorIntoParameterDialog = this.operationMessage.isErrorIntoParameterDialog();\n\n\t\tif (actionHelper.isStaticAction(this.convertedAction) || this.contexts.length === 0) {\n\t\t\t// Don't close the dialog if the action is static or an import\n\t\t\treturn this.resetDialog();\n\t\t} else if (this.parameters.invocationGrouping === InvocationGrouping.ChangeSet) {\n\t\t\t// When the end user cancel the process on the strict dialog, we need to keep the parameter dialog (only on ChangeSet) #6376592\n\t\t\tif (isErrorIntoParameterDialog || this.odataOperation?.isStrictCanceled() === true) {\n\t\t\t\treturn this.resetDialog();\n\t\t\t} else {\n\t\t\t\treturn this.closeDialog();\n\t\t\t}\n\t\t} else if ((this.parameters.contexts && this.parameters.contexts.length > 1) || !isErrorIntoParameterDialog) {\n\t\t\t// does not matter if error is in APD or not, if there are multiple contexts selected or if the error is not the APD, we close it.\n\t\t\treturn this.closeDialog();\n\t\t}\n\t\treturn this.resetDialog();\n\t}\n\n\t/**\n\t * Sets the message collected promise.\n\t * This promise is resolved when the messages are collected.\n\t */\n\tprivate setMessageCollectedPromise(): void {\n\t\tthis.messageCollectedPromise = new Promise<void>((resolve) => {\n\t\t\tthis.messageCollectedResolve = resolve;\n\t\t});\n\t}\n\n\t/**\n\t * Closes the parameter dialog.\n\t */\n\tprivate closeDialog(): void {\n\t\tthis.operationParameters.closeParameterDialog();\n\t}\n\n\t/**\n\t * Resets the parameter dialog.\n\t */\n\tprivate resetDialog(): void {\n\t\tthis.operationParameters.resetParameterDialogState();\n\t}\n\n\t/**\n\t * Gets the result of the operation.\n\t * @returns The result\n\t */\n\tpublic async getOperationResults(): Promise<PromiseSettledResult<OperationResult>[]> {\n\t\treturn this.executionPromise;\n\t}\n\n\t/**\n\t * Checks if action is critical.\n\t * @returns True if the action is critical, otherwise false\n\t */\n\tprivate async isActionCritical(): Promise<boolean> {\n\t\t//only works with single context (as former code);\n\t\tconst context = this.parameters.contexts?.[0];\n\t\t// default is true.\n\t\tlet isActionCriticalValue: boolean | Promise<boolean> = true;\n\t\tconst isActionCriticalBindingExp = getIsActionCriticalExpression(this.convertedAction, convertTypes(this.model.getMetaModel()));\n\t\tif (isConstant(isActionCriticalBindingExp)) {\n\t\t\tisActionCriticalValue = compileConstant(isActionCriticalBindingExp, false, undefined, true) as boolean;\n\t\t} else if (context) {\n\t\t\tconst anyObject = new Any({ anyBoolean: compileExpression(isActionCriticalBindingExp) });\n\t\t\tanyObject.setModel(context.getModel());\n\t\t\tanyObject.setBindingContext(context);\n\t\t\tconst booleanBinding = anyObject.getBinding(\"anyBoolean\") as ODataPropertyBinding | undefined;\n\t\t\tif (booleanBinding) {\n\t\t\t\tif (booleanBinding.isA<CompositeBinding>(\"sap.ui.model.CompositeBinding\")) {\n\t\t\t\t\tawait Promise.all(booleanBinding.getBindings().map((nestedBinding) => nestedBinding.requestValue?.()));\n\t\t\t\t} else {\n\t\t\t\t\tawait booleanBinding.requestValue?.();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn isActionCriticalValue;\n\t}\n\n\t/**\n\t * Manages the message box to display when an action is critical.\n\t * @returns A promise which is resolved if the action is not critical or the message box is closed.\n\t */\n\tprivate async confirmAction(): Promise<void> {\n\t\tif (!this.operationParameters.isParameterDialog()) {\n\t\t\tconst isCritical = await this.isActionCritical();\n\t\t\tif (isCritical) {\n\t\t\t\tconst actionName = actionHelper.getActionName(this.convertedAction);\n\t\t\t\tawait new Promise((resolve, reject) => {\n\t\t\t\t\tconst boundActionName = actionName.includes(\".\") ? actionName.split(\".\")[actionName.split(\".\").length - 1] : actionName;\n\t\t\t\t\tconst suffixResourceKey = boundActionName && this.entitySetName ? `${this.entitySetName}|${boundActionName}` : \"\";\n\n\t\t\t\t\tMessageBox.confirm(\n\t\t\t\t\t\tResourceModelHelper.getResourceModel(this.parameters.view ?? this.appComponent).getText(\n\t\t\t\t\t\t\t\"C_OPERATIONS_ACTION_CONFIRM_MESSAGE\",\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\tsuffixResourceKey\n\t\t\t\t\t\t),\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttitle: this.getConfirmTitle(suffixResourceKey),\n\t\t\t\t\t\t\tonClose: (action: string) => {\n\t\t\t\t\t\t\t\tif (action === MessageBox.Action.OK) {\n\t\t\t\t\t\t\t\t\tresolve(true);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\treject(new Error(FELibrary.Constants.CancelActionDialog));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tgetConfirmTitle(suffixResourceKey: string): string | undefined {\n\t\t// A title only exists if it has been defined in the extension. Otherwise \"Confirmation\"\n\t\t// is used from the MessageBox control.\n\t\tif (!this.parameters.view) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst key = \"C_OPERATIONS_ACTION_CONFIRM_TITLE\";\n\t\tconst resourceModel = ResourceModelHelper.getResourceModel(this.parameters.view ?? this.appComponent);\n\t\tconst titleOverrideExists = resourceModel.checkIfResourceKeyExists(`${key}|${suffixResourceKey}`);\n\t\tif (titleOverrideExists) {\n\t\t\treturn resourceModel.getText(key, undefined, suffixResourceKey);\n\t\t}\n\t}\n\n\t/**\n\t * Returns the converted operation from its name.\n\t * The operation can be an action or an action import.\n\t * For the bound operation, the context must be provided and one of the following formats is expected:\n\t *  - short name (e.g. \"MyAction\")\n\t *  - short name with entityType (e.g. \"MyEntitytype.MyAction\")\n\t *  - fully qualified name (e.g. \"MyService.MyAction\")\n\t *  - fully qualified name with the overlay (e.g. \"MyService.MyAction(MyEntityType)\")\n\t *  - fully qualified name with the parenthesis for the operations (e.g. \"MyService.MyFunction()\")\n\t * For the imports, one of the following formats is expected:\n\t *  - short name (e.g. \"MyActionImport\")\n\t *  - fully qualified name with entity container (e.g. \"MyService.entityContainer/MyActionImport\")\n\t *  - fully qualified name of the related operation (e.g. \"MyService.MyActionImport\")\n\t *  - fully qualified name of the related operation with parenthesis (e.g. \"MyService.MyActionImport()\").\n\t * @param name The name of the operation\n\t * @param model The OData model\n\t * @param context The context of the operation for bound actions\n\t * @returns The converted operation\n\t */\n\tstatic getOperationFromName(name: string, model: ODataModel, context?: Context): EdmAction | ActionImport | undefined {\n\t\tconst metaModel = model.getMetaModel();\n\t\tconst convertedMetaModel = convertTypes(metaModel);\n\t\tif (context) {\n\t\t\t//looking for bound action\n\t\t\tconst sourceEntityType = getInvolvedDataModelObjects(metaModel.getMetaContext(context.getPath())).targetEntityType.name;\n\t\t\tconst actionName = name\n\t\t\t\t.replace(/\\(.*\\)$/g, \"\") // remove the part related to the overlay\n\t\t\t\t.replace(`${convertedMetaModel.namespace}.`, \"\") // remove the part related to the service name\n\t\t\t\t.split(\".\")\n\t\t\t\t.pop(); // remove the part related to the entity type\n\t\t\treturn convertedMetaModel.actions.find((action: EdmAction) => {\n\t\t\t\treturn (\n\t\t\t\t\taction.name === actionName &&\n\t\t\t\t\taction.isBound &&\n\t\t\t\t\taction.sourceEntityType &&\n\t\t\t\t\tsourceEntityType === action.sourceEntityType.name\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\t\tconst importName = name\n\t\t\t.replace(`${convertedMetaModel.entityContainer.fullyQualifiedName}/`, \"\")\n\t\t\t.replace(`${convertedMetaModel.namespace}.`, \"\")\n\t\t\t.replace(\"()\", \"\");\n\t\t// Remove the entityContainer part (sap.fe.MyService.EntityContainer/myImport) or the service name (sap.fe.MyService.myImport) and the parenthesis (sap.fe.MyService.myImport())\n\t\treturn convertedMetaModel.actionImports.find((actionImport: ActionImport) => {\n\t\t\treturn actionImport.name === importName;\n\t\t});\n\t}\n}\n"],"mappings":"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","ignoreList":[],"file":"Operation-dbg.js"}