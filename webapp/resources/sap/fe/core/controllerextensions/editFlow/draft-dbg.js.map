{"version":3,"names":["draftOperations","EDIT","ACTIVATION","DISCARD","PREPARE","getActionName","oContext","sOperation","oModel","getModel","oMetaModel","getMetaModel","sEntitySetPath","getMetaPath","getPath","getObject","createOperation","oOptions","sOperationName","bindContext","getConvertedAction","context","operation","operationName","metaModel","actionPath","boundAction","createBindingContext","convertTypes","resolvePath","target","getReturnType","hasPrepareAction","executeDraftEditAction","bPreserveChanges","oView","groupId","messageHandler","overwriteChange","convertedAction","Operation","CommonUtils","getAppComponent","contexts","label","getResourceModel","getText","bindingParameters","$$inheritExpandSelect","$$updateGroupId","skipMessages","oDataProperties","disableSideEffects","ignoreETag","isEmptyObject","replaceWithRVC","getBinding","isA","deferredSubmit","setDefaultParametersValues","PreserveChanges","result","execute","status","modifiedError","Error","reason","message","value","returnedContext","executeDraftValidation","appComponent","ModelHelper","getMessagesPath","draft","isKeepAlive","requestObject","executeDraftPreparationAction","getUpdateGroupId","requestMessages","getSideEffectsService","error","Log","undefined","executeDraftActivationAction","oAppComponent","sGroupId","oPreparePromise","resourceModel","isStandardSave","bHasPrepareAction","bIgnoreEtag","getProperty","e","prepareOperation","destroy","clear","actionName","oSideEffectsService","oBindingParameters","getODataActionSideEffects","aTargetPaths","pathExpressions","length","requestSideEffects","oError","getMessagePathForPrepare","getMessagePathForContext","metaContext","getMetaContext","convertedContext","getInvolvedDataModelObjects","messages","targetEntityType","annotations","Common","Messages","isPathAnnotationExpression","path","bMessages","sMessagesPath","oOperation","$select","setParameter","getGroupId","invoke","then","catch","removeTransitionMessages","arguments","data","messageHandling","removeUnboundTransitionMessages","removeBoundTransitionMessages","executeDraftDiscardAction","bEnableStrictHandling","disableStrictHandling","computeSiblingInformation","rootCurrentContext","rightmostCurrentContext","rootContextInfo","createKeepAliveContext","startsWith","model","additionalPath","replace","segments","substring","split","unshift","oldPaths","newPaths","currentPath","paths","rootSiblingPathPromise","shift","canonicalPathPromises","map","segment","endsWith","siblingContext","$$groupId","getBoundContext","requestCanonicalPath","Promise","resolve","canonicalPaths","all","some","rootSiblingPath","push","siblingPath","forEach","canonicalPath","index","navigation","keys","parameters","messagePath","targetContext","getKeepAliveContext","pathMapping","oldPath","newPath","createDraftFromActiveDocument","mParameters","transactionDetails","mParam","bRunPreserveChangesFlow","response","draftDataContext","draftAdminData","sInfo","InProcessByUserDescription","InProcessByUser","sEntitySet","getViewData","entitySet","sLockedByUserMsg","MessageBox","CreatedByUserDescription","CreatedByUser","sUnsavedChangesMsg","showEditConfirmationMessageBox","oDraftContext","oResponse","isCollaborationDraftSupported","siblingInfo","_isFclEnabled","waitForContextRequested","existingDraftReused","canceled","sEditActionName","oSideEffects","triggerActions","requestSideEffectsForODataAction","activateDocument","bExecute","fnBeforeActivateDocument","oActiveDocumentContext","sBatchGroup","ignoreEtag","hasPendingChanges","submitBatch","oActivatePromise","values","fnAfterActivateDocument","localI18nRef","Library","getResourceBundleFor","reject","oDialog","Dialog","title","state","content","Text","text","beginButton","Button","type","press","close","endButton","afterClose","addStyleClass","open","deleteDraft","isTransient","delete","sDiscardAction","bIsActiveEntity","IsActiveEntity","isInactive","resetChanges","isDraftRoot","targetEntitySet","processDataLossOrDraftDiscardConfirmation","draftDataLossPopup","silentlyKeepDraftOnForwardNavigation","NavigationType"],"sourceRoot":".","sources":["draft.ts"],"sourcesContent":["import type { Action as EdmAction } from \"@sap-ux/vocabularies-types\";\nimport Log from \"sap/base/Log\";\nimport isEmptyObject from \"sap/base/util/isEmptyObject\";\nimport type AppComponent from \"sap/fe/core/AppComponent\";\nimport CommonUtils from \"sap/fe/core/CommonUtils\";\nimport type ResourceModel from \"sap/fe/core/ResourceModel\";\nimport draftDataLossPopup from \"sap/fe/core/controllerextensions/editFlow/draftDataLossPopup\";\nimport messageHandling from \"sap/fe/core/controllerextensions/messageHandler/messageHandling\";\nimport { convertTypes, getInvolvedDataModelObjects } from \"sap/fe/core/converters/MetaModelConverter\";\nimport { getResourceModel } from \"sap/fe/core/helpers/ResourceModelHelper\";\nimport { isPathAnnotationExpression } from \"sap/fe/core/helpers/TypeGuards\";\nimport type { SideEffectsService } from \"sap/fe/core/services/SideEffectsServiceFactory\";\nimport Button from \"sap/m/Button\";\nimport Dialog from \"sap/m/Dialog\";\nimport MessageBox from \"sap/m/MessageBox\";\nimport Text from \"sap/m/Text\";\nimport Library from \"sap/ui/core/Lib\";\nimport type View from \"sap/ui/core/mvc/View\";\nimport type Context from \"sap/ui/model/odata/v4/Context\";\nimport type { ContextErrorType } from \"sap/ui/model/odata/v4/Context\";\nimport type ODataContextBinding from \"sap/ui/model/odata/v4/ODataContextBinding\";\nimport type { FEView } from \"../../BaseController\";\nimport ModelHelper from \"../../helpers/ModelHelper\";\nimport type MessageHandler from \"../MessageHandler\";\nimport Operation from \"./operations/Operation\";\n\nexport type SiblingInformation = {\n\ttargetContext: Context;\n\tpathMapping: { oldPath: string; newPath: string }[];\n};\n\nexport type RootContextInfo = {\n\trootSiblingPathPromise: Promise<Context | undefined>;\n};\n\nexport type BindContextParameters = {\n\t/**\n\t * The value for the \"5.1.2 System Query Option $expand\" or an object which determines that value. The object\n\t * is a map from expand path to expand options, where the options are again maps of system query options,\n\t * typically with string values. $count can also be given as a `boolean` value, $expand can recursively\n\t * be given as a map, $levels can also be given as a `number` value, and $select can also be given as an\n\t * array (but without navigation paths). An empty map can also be given as `null` or `true`. See also {@link https://ui5.sap.com/#/topic/1ab4f62de6ab467096a2a98b363a1373 Parameters}.\n\t */\n\t$expand?: string | object;\n\t/**\n\t * A comma separated list or an array of items which determine the value for the \"5.1.3 System Query Option\n\t * $select\". Since 1.75.0, when using the \"autoExpandSelect\" model parameter (see {@link sap.ui.model.odata.v4.ODataModel#constructor}),\n\t * paths with navigation properties can be included and will contribute to the \"5.1.2 System Query Option\n\t * $expand\".\n\t */\n\t$select?: string;\n\t/**\n\t * Whether a binding relative to an {@link sap.ui.model.odata.v4.Context} uses the canonical path computed\n\t * from its context's path for data service requests; only the value `true` is allowed.\n\t */\n\t$$canonicalPath?: boolean;\n\t/**\n\t * The group ID to be used for **read** requests triggered by this binding; if not specified, either the\n\t * parent binding's group ID (if the binding is relative) or the model's group ID is used, see {@link sap.ui.model.odata.v4.ODataModel#constructor}.\n\t * Valid values are `undefined`, '$auto', '$auto.*', '$direct' or application group IDs as specified in\n\t * {@link sap.ui.model.odata.v4.ODataModel}.\n\t */\n\t$$groupId?: string;\n\t/**\n\t * For operation bindings only: Whether $expand and $select from the parent binding are used in the request\n\t * sent on {@link #execute}. If set to `true`, the binding must not set the $expand itself, the operation\n\t * must be bound, and the return value and the binding parameter must belong to the same entity set.\n\t */\n\t$$inheritExpandSelect?: boolean;\n\t/**\n\t * Whether the binding always uses an own service request to read its data; only the value `true` is allowed.\n\t */\n\t$$ownRequest?: boolean;\n\t/**\n\t * Whether implicit loading of side effects via PATCH requests is switched off; only the value `true` is\n\t * allowed. This sets the preference \"return=minimal\" and requires the service to return an ETag header\n\t * for \"204 No Content\" responses. If not specified, the value of the parent binding is used.\n\t */\n\t$$patchWithoutSideEffects?: boolean;\n\t/**\n\t * The group ID to be used for **update** requests triggered by this binding; if not specified, either the\n\t * parent binding's update group ID (if the binding is relative) or the model's update group ID is used,\n\t * see {@link sap.ui.model.odata.v4.ODataModel#constructor}. For valid values, see parameter \"$$groupId\".\n\t */\n\t$$updateGroupId?: string;\n};\n\n/* Constants for draft operations */\nconst draftOperations = {\n\tEDIT: \"EditAction\",\n\tACTIVATION: \"ActivationAction\",\n\tDISCARD: \"DiscardAction\",\n\tPREPARE: \"PreparationAction\"\n};\n\n/**\n * Static functions for the draft programming model\n * @namespace\n * @since 1.54.0\n */\n\n/**\n * Determines the action name for a draft operation.\n * @param oContext The context that should be bound to the operation\n * @param sOperation The operation name\n * @returns The name of the draft operation\n */\nfunction getActionName(oContext: Context, sOperation: string): string {\n\tconst oModel = oContext.getModel(),\n\t\toMetaModel = oModel.getMetaModel(),\n\t\tsEntitySetPath = oMetaModel.getMetaPath(oContext.getPath());\n\n\treturn oMetaModel.getObject(`${sEntitySetPath}@com.sap.vocabularies.Common.v1.DraftRoot/${sOperation}`);\n}\n/**\n * Creates an operation context binding for the given context and operation.\n * @param oContext The context that should be bound to the operation\n * @param sOperation The operation (action or function import)\n * @param oOptions Options to create the operation context\n * @returns The context binding of the bound operation\n */\nfunction createOperation(oContext: Context, sOperation: string, oOptions?: BindContextParameters): ODataContextBinding {\n\tconst sOperationName = getActionName(oContext, sOperation);\n\n\treturn oContext.getModel().bindContext(`${sOperationName}(...)`, oContext, oOptions);\n}\n\n/**\n * Gets the converted action for a given context and operation.\n * @param context  The context that should be bound to the operation\n * @param operation The operation name\n * @returns The converted action\n */\nfunction getConvertedAction(context: Context, operation: string): EdmAction | undefined {\n\tconst operationName = getActionName(context, operation);\n\tconst metaModel = context.getModel().getMetaModel(),\n\t\tactionPath = `${metaModel.getMetaPath(context.getPath())}/${operationName}`,\n\t\tboundAction = metaModel.createBindingContext(actionPath)!;\n\treturn convertTypes(metaModel).resolvePath<EdmAction | undefined>(boundAction.getPath()).target;\n}\n\n/**\n * Determines the return type for a draft operation.\n * @param oContext The context that should be bound to the operation\n * @param sOperation The operation name\n * @returns The return type of the draft operation\n */\nfunction getReturnType(oContext: Context, sOperation: string): unknown {\n\tconst oModel = oContext.getModel(),\n\t\toMetaModel = oModel.getMetaModel(),\n\t\tsEntitySetPath = oMetaModel.getMetaPath(oContext.getPath());\n\n\treturn oMetaModel.getObject(`${sEntitySetPath}@com.sap.vocabularies.Common.v1.DraftRoot/${sOperation}/$ReturnType`);\n}\n/**\n * Check if optional draft prepare action exists.\n * @param oContext The context that should be bound to the operation\n * @returns True if a a prepare action exists\n */\nfunction hasPrepareAction(oContext: Context): boolean {\n\treturn !!getActionName(oContext, draftOperations.PREPARE);\n}\n/**\n * Creates a new draft from an active document.\n * @param oContext Context for which the action should be performed\n * @param bPreserveChanges If true - existing changes from another user that are not locked are preserved and an error is sent from the backend, otherwise false - existing changes from another user that are not locked are overwritten</li>\n * @param oView If true - existing changes from another\n * @param groupId The batch groupId for post call of edit action\n * @param messageHandler  The message handler controller extension\n * @param overwriteChange\n * @returns Resolve function returns the context of the operation\n */\nasync function executeDraftEditAction(\n\toContext: Context,\n\tbPreserveChanges: boolean,\n\toView: View,\n\tgroupId: string,\n\tmessageHandler: MessageHandler,\n\toverwriteChange?: boolean\n): Promise<Context | undefined> {\n\t// If the context is not loaded (i.e. oContext.getObject() == undefined), we assume it corresponds to an active context\n\t// This situation happens when opening an OP directly in edit mode (InternalRouting._bindPageForEdit)\n\tconst convertedAction = getConvertedAction(oContext, draftOperations.EDIT);\n\tif (convertedAction) {\n\t\tconst operation = new Operation(CommonUtils.getAppComponent(oView), oContext.getModel(), convertedAction, {\n\t\t\tmessageHandler: messageHandler,\n\t\t\tcontexts: [oContext],\n\t\t\tlabel: getResourceModel(oView).getText(\"C_COMMON_OBJECT_PAGE_EDIT\"),\n\t\t\tbindingParameters: { $$inheritExpandSelect: true, $$updateGroupId: \"$auto\" },\n\t\t\tskipMessages: true,\n\t\t\toDataProperties: {\n\t\t\t\tdisableSideEffects: true,\n\t\t\t\tignoreETag: isEmptyObject(oContext.getObject()), // If the context has not been loaded yet, we can ignore the ETag (as no previous ETag is available)\n\t\t\t\tgroupId: groupId,\n\t\t\t\treplaceWithRVC: oContext.getBinding().isA(\"sap.ui.model.odata.v4.ODataListBinding\"),\n\t\t\t\tdeferredSubmit: overwriteChange !== true //\tIf the context is coming from a list binding we pass the flag true to replace the context by the active one\n\t\t\t}\n\t\t});\n\t\toperation.setDefaultParametersValues({ PreserveChanges: bPreserveChanges });\n\t\tconst result = await operation.execute();\n\t\tif (result[0].status === \"rejected\") {\n\t\t\tconst modifiedError = new Error(result[0].reason.message) as Error & { status?: number };\n\t\t\t// we need to persist the status in the error to be able to show the locked by another user dialog\n\t\t\tmodifiedError.status = result[0].reason.status;\n\t\t\tthrow modifiedError;\n\t\t} else {\n\t\t\treturn result[0].value.returnedContext;\n\t\t}\n\t} else {\n\t\tthrow new Error(\"The edit action not found\");\n\t}\n}\n\n/**\n * Executes the validation of the draft. The PrepareAction is triggered if the messages are annotated and entitySet gets a PreparationAction annotated.\n * If the operation succeeds and operation doesn't get a return type (RAP system) the messages are requested.\n * @param context Context for which the PrepareAction should be performed\n * @param appComponent The AppComponent\n * @param ignoreETag If set to true, ETags are ignored when executing the action\n * @returns Resolve function returns\n *  - the context of the operation if the action has been successfully executed\n *  - void if the action has failed\n *  - undefined if the action has not been triggered since the prerequisites are not met\n */\nasync function executeDraftValidation(\n\tcontext: Context,\n\tappComponent: AppComponent,\n\tignoreETag: boolean\n): Promise<ODataContextBinding | void | undefined> {\n\tif (ModelHelper.getMessagesPath(context.getModel().getMetaModel(), context.getPath()) && draft.hasPrepareAction(context)) {\n\t\ttry {\n\t\t\tif (!ignoreETag && !context.isKeepAlive()) {\n\t\t\t\t// We need to wait for the entity related to the context to post the action with the If-Match header\n\t\t\t\t// Some triggers (enter on table) can generate a promise in the cache so if we don't wait for the entity\n\t\t\t\t// the POST will be sent without If-Match and will generate an error on backend side.\n\t\t\t\tawait (context.getBinding() as ODataContextBinding).requestObject(\"\");\n\t\t\t}\n\t\t\tconst operation = draft.executeDraftPreparationAction(context, context.getUpdateGroupId(), true, ignoreETag);\n\t\t\tif (!getReturnType(context, draftOperations.PREPARE)) {\n\t\t\t\trequestMessages(context, appComponent.getSideEffectsService());\n\t\t\t}\n\n\t\t\treturn await operation;\n\t\t} catch (error: unknown) {\n\t\t\tLog.error(\"Error while requesting messages\", error as string);\n\t\t}\n\t}\n\n\treturn undefined;\n}\n\n/**\n * Activates a draft document. The draft will replace the sibling entity and will be deleted by the back end.\n * @param oContext Context for which the action should be performed\n * @param oAppComponent The AppComponent\n * @param messageHandler\n * @param [sGroupId] The optional batch group in which the operation is to be executed\n * @param [oPreparePromise] The promise of the prepare action\n * @param [resourceModel] The resource model to load text resources\n * @returns Resolve function returns the context of the operation\n */\nasync function executeDraftActivationAction(\n\toContext: Context,\n\toAppComponent: AppComponent,\n\tmessageHandler: MessageHandler,\n\tsGroupId?: string,\n\toPreparePromise?: Promise<void | ODataContextBinding>,\n\tresourceModel?: ResourceModel,\n\tisStandardSave?: boolean | undefined\n): Promise<Context> {\n\tconst bHasPrepareAction = draft.hasPrepareAction(oContext);\n\t// According to the draft spec if the service contains a prepare action and we trigger both prepare and\n\t// activate in one $batch the activate action is called with iF-Match=*\n\tconst bIgnoreEtag = bHasPrepareAction;\n\tlet operation: Operation | undefined;\n\tif (!oContext.getProperty(\"IsActiveEntity\")) {\n\t\tconst convertedAction = getConvertedAction(oContext, draftOperations.ACTIVATION);\n\t\tconst label = isStandardSave ? resourceModel?.getText(\"T_OP_OBJECT_PAGE_SAVE\") : resourceModel?.getText(\"C_OP_OBJECT_PAGE_SAVE\");\n\t\tif (convertedAction) {\n\t\t\ttry {\n\t\t\t\toperation = new Operation(oAppComponent, oContext.getModel(), convertedAction, {\n\t\t\t\t\tmessageHandler: messageHandler,\n\t\t\t\t\tcontexts: [oContext],\n\t\t\t\t\tlabel: label,\n\t\t\t\t\tbindingParameters: { $$inheritExpandSelect: true },\n\t\t\t\t\tskipMessages: true,\n\t\t\t\t\toDataProperties: {\n\t\t\t\t\t\tdisableSideEffects: true,\n\t\t\t\t\t\tgroupId: sGroupId,\n\t\t\t\t\t\tignoreETag: bIgnoreEtag,\n\t\t\t\t\t\treplaceWithRVC: oContext.getBinding().isA(\"sap.ui.model.odata.v4.ODataListBinding\")\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tconst result = await operation.execute();\n\t\t\t\tif (result[0].status === \"rejected\") {\n\t\t\t\t\tthrow new Error(result[0].reason);\n\t\t\t\t} else if (result[0].value.returnedContext === undefined) {\n\t\t\t\t\tthrow new Error(\"No context returned by the action\");\n\t\t\t\t}\n\t\t\t\treturn result[0].value.returnedContext;\n\t\t\t} catch (e) {\n\t\t\t\tif (bHasPrepareAction) {\n\t\t\t\t\t// destroy the operation bindings to avoid additional message requests sent by the model\n\t\t\t\t\tconst prepareOperation = await oPreparePromise;\n\t\t\t\t\tprepareOperation?.destroy();\n\t\t\t\t\toperation?.clear();\n\n\t\t\t\t\tconst actionName = getActionName(oContext, draftOperations.PREPARE),\n\t\t\t\t\t\toSideEffectsService = oAppComponent.getSideEffectsService(),\n\t\t\t\t\t\toBindingParameters = oSideEffectsService.getODataActionSideEffects(actionName, oContext),\n\t\t\t\t\t\taTargetPaths = oBindingParameters && oBindingParameters.pathExpressions;\n\t\t\t\t\tif (aTargetPaths && aTargetPaths.length > 0) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tawait oSideEffectsService.requestSideEffects(aTargetPaths, oContext);\n\t\t\t\t\t\t} catch (oError: unknown) {\n\t\t\t\t\t\t\tLog.error(\"Error while requesting side effects\", oError as string);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tawait requestMessages(oContext, oSideEffectsService, true);\n\t\t\t\t\t\t} catch (oError: unknown) {\n\t\t\t\t\t\t\tLog.error(\"Error while requesting messages\", oError as string);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new Error(\"The activation action not found\");\n\t\t}\n\t} else {\n\t\tthrow new Error(\"The activation action cannot be executed on an active document\");\n\t}\n}\n\n/**\n * Gets the supported message property path on the PrepareAction for a context.\n * @param context Context to be checked\n * @returns Path to the message\n */\nfunction getMessagePathForPrepare(context: Context): string | undefined {\n\t// If there is no return parameter, it is not possible to request Messages.\n\t// RAP draft prepare has no return parameter\n\treturn getReturnType(context, draftOperations.PREPARE) ? getMessagePathForContext(context) : undefined;\n}\n\n/**\n * Gets the supported message property path for a context.\n * @param context Context to be checked\n * @returns Path to the message\n */\nfunction getMessagePathForContext(context: Context): string | undefined {\n\tconst metaContext = context.getModel().getMetaModel().getMetaContext(context.getPath());\n\tconst convertedContext = getInvolvedDataModelObjects(metaContext);\n\tconst messages = convertedContext.targetEntityType.annotations.Common?.Messages;\n\treturn isPathAnnotationExpression(messages) ? messages.path : undefined;\n}\n\n/**\n * Execute a preparation action.\n * @param oContext Context for which the action should be performed\n * @param groupId The optional batch group in which we want to execute the operation\n * @param bMessages If set to true, the PREPARE action retrieves SAP_Messages\n * @param ignoreETag If set to true, ETag information is ignored when the action is executed\n * @returns Resolve function returns the context of the operation\n */\nasync function executeDraftPreparationAction(\n\toContext: Context,\n\tgroupId?: string,\n\tbMessages?: boolean,\n\tignoreETag?: boolean\n): Promise<void | ODataContextBinding> {\n\tif (!oContext.getProperty(\"IsActiveEntity\")) {\n\t\tconst sMessagesPath = bMessages ? getMessagePathForPrepare(oContext) : undefined;\n\t\tconst oOperation = createOperation(oContext, draftOperations.PREPARE, sMessagesPath ? { $select: sMessagesPath } : undefined);\n\n\t\t// TODO: side effects qualifier shall be even deprecated to be checked\n\t\toOperation.setParameter(\"SideEffectsQualifier\", \"\");\n\n\t\tconst sGroupId = groupId || oOperation.getGroupId();\n\t\treturn oOperation\n\t\t\t.invoke(sGroupId, ignoreETag)\n\t\t\t.then(function () {\n\t\t\t\treturn oOperation;\n\t\t\t})\n\t\t\t.catch(function (oError: unknown) {\n\t\t\t\tLog.error(\"Error while executing the operation\", oError as string);\n\t\t\t\treturn oOperation;\n\t\t\t});\n\t} else {\n\t\tthrow new Error(\"The preparation action cannot be executed on an active document\");\n\t}\n}\n\n/**\n * Requests the messages if annotated for a given context.\n * @param oContext Context for which the messages shall be requested\n * @param oSideEffectsService Service for the SideEffects on SAP Fiori elements\n * @param removeTransitionMessages If set to true, transition messages are removed if state messages exist\n * @returns Promise which is resolved once messages were requested\n */\nasync function requestMessages(\n\toContext: Context,\n\toSideEffectsService: SideEffectsService,\n\tremoveTransitionMessages = false\n): Promise<void> {\n\tconst sMessagesPath = ModelHelper.getMessagesPath(oContext.getModel().getMetaModel(), oContext.getPath());\n\tif (sMessagesPath) {\n\t\tawait oSideEffectsService.requestSideEffects([sMessagesPath], oContext);\n\t\tif (removeTransitionMessages) {\n\t\t\tconst data = await oContext.requestObject();\n\t\t\tif (data[sMessagesPath].length > 0) {\n\t\t\t\t//if state messages are available from the PREPARATION action, then previous transition messages are removed\n\t\t\t\tmessageHandling.removeUnboundTransitionMessages();\n\t\t\t\tmessageHandling.removeBoundTransitionMessages();\n\t\t\t}\n\t\t}\n\t}\n\treturn;\n}\n/**\n * Executes discard of a draft function using HTTP Post.\n * @param oContext Context for which the action should be performed\n * @param messageHandler The message handler controller extension\n * @param oAppComponent App Component\n * @param bEnableStrictHandling\n * @returns Resolve function returns the context of the operation\n */\nasync function executeDraftDiscardAction(\n\toContext: Context,\n\tmessageHandler: MessageHandler,\n\toAppComponent: AppComponent,\n\tbEnableStrictHandling?: boolean\n): Promise<void> {\n\tif (!oContext.getProperty(\"IsActiveEntity\")) {\n\t\tconst convertedAction = getConvertedAction(oContext, draftOperations.DISCARD);\n\t\tif (convertedAction) {\n\t\t\tconst result = await new Operation(oAppComponent, oContext.getModel(), convertedAction, {\n\t\t\t\tmessageHandler: messageHandler,\n\t\t\t\tlabel: getResourceModel(oAppComponent)?.getText(\"C_TRANSACTION_HELPER_DRAFT_DISCARD_BUTTON\") || \"\",\n\t\t\t\tcontexts: [oContext],\n\t\t\t\tskipMessages: true,\n\t\t\t\toDataProperties: {\n\t\t\t\t\tdisableSideEffects: true,\n\t\t\t\t\tdisableStrictHandling: !bEnableStrictHandling,\n\t\t\t\t\tignoreETag: isEmptyObject(oContext.getObject()), // If the context has not been loaded yet, we can ignore the ETag (as no previous ETag is available)\n\t\t\t\t\tgroupId: \"direct\",\n\t\t\t\t\treplaceWithRVC: undefined,\n\t\t\t\t\tdeferredSubmit: false\n\t\t\t\t}\n\t\t\t}).execute();\n\t\t\tif (result[0].status === \"rejected\") {\n\t\t\t\tthrow new Error(result[0].reason);\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new Error(\"The discard action not found\");\n\t\t}\n\t} else {\n\t\tthrow new Error(\"The discard action cannot be executed on an active document\");\n\t}\n}\n\n/**\n * This method creates a sibling context for a subobject page and calculates a sibling path for all intermediate paths\n * between the object page and the subobject page.\n * @param rootCurrentContext The context for the root of the draft\n * @param rightmostCurrentContext The context of the subobject page\n * @param rootContextInfo The context info of root of the draft\n * @param groupId\n * @param bindingParameters Optional binding parameters when creating the context\n * @param createKeepAliveContext If set to true, the context will be created as a keep-alive context\n * @returns The siblingInformation object\n */\nasync function computeSiblingInformation(\n\trootCurrentContext: Context,\n\trightmostCurrentContext: Context,\n\trootContextInfo?: RootContextInfo,\n\tgroupId?: string,\n\tbindingParameters?: object,\n\tcreateKeepAliveContext = false\n): Promise<SiblingInformation | undefined> {\n\tif (!rightmostCurrentContext.getPath().startsWith(rootCurrentContext.getPath())) {\n\t\t// Wrong usage !!\n\t\tLog.error(\"Cannot compute rightmost sibling context\");\n\t\tthrow new Error(\"Cannot compute rightmost sibling context\");\n\t}\n\n\tif (\n\t\trightmostCurrentContext.getProperty(\"IsActiveEntity\") === false &&\n\t\trightmostCurrentContext.getProperty(\"HasActiveEntity\") === false\n\t) {\n\t\t// We already know the sibling for rightmostCurrentContext doesn't exist\n\t\t// --> No need to check canonical paths etc...\n\t\treturn undefined;\n\t}\n\n\tconst model = rootCurrentContext.getModel();\n\ttry {\n\t\t// //////////////////////////////////////////////////////////////////\n\t\t// 1. Find all segments between the root object and the sub-object\n\t\t// Example: for root = /Param(aa)/Entity(bb) and rightMost = /Param(aa)/Entity(bb)/_Nav(cc)/_SubNav(dd)\n\t\t// ---> [\"Param(aa)/Entity(bb)\", \"_Nav(cc)\", \"_SubNav(dd)\"]\n\n\t\t// Find all segments in the rightmost path\n\t\tconst additionalPath = rightmostCurrentContext.getPath().replace(rootCurrentContext.getPath(), \"\");\n\t\tconst segments = additionalPath ? additionalPath.substring(1).split(\"/\") : [];\n\t\t// First segment is always the full path of the root object, which can contain '/' in case of a parametrized entity\n\t\tsegments.unshift(rootCurrentContext.getPath().substring(1));\n\n\t\t// //////////////////////////////////////////////////////////////////\n\t\t// 2. Request canonical paths of the sibling entity for each segment\n\t\t// Example: for [\"Param(aa)/Entity(bb)\", \"_Nav(cc)\", \"_SubNav(dd)\"]\n\t\t// --> request canonical paths for \"Param(aa)/Entity(bb)/SiblingEntity\", \"Param(aa)/Entity(bb)/_Nav(cc)/SiblingEntity\", \"Param(aa)/Entity(bb)/_Nav(cc)/_SubNav(dd)/SiblingEntity\"\n\t\tconst oldPaths: string[] = [];\n\t\tconst newPaths: string[] = [];\n\t\tlet currentPath = \"\";\n\n\t\t// Computing sibling entity of root of the draft context is not required if the context is already in the sub-OP\n\t\t// Example: Edit in Sub-OP where new context is already available\n\t\tconst paths = [...segments];\n\t\tif (rootContextInfo?.rootSiblingPathPromise) {\n\t\t\tpaths.shift();\n\t\t\tcurrentPath = \"/\" + rootCurrentContext?.getPath()?.substring(1);\n\t\t}\n\t\tconst canonicalPathPromises = paths.map(async (segment) => {\n\t\t\tcurrentPath += `/${segment}`;\n\t\t\toldPaths.unshift(currentPath);\n\t\t\tif (currentPath.endsWith(\")\")) {\n\t\t\t\tconst siblingContext = model\n\t\t\t\t\t.bindContext(`${currentPath}/SiblingEntity`, undefined, groupId ? { $$groupId: groupId } : undefined)\n\t\t\t\t\t.getBoundContext();\n\t\t\t\treturn siblingContext.requestCanonicalPath();\n\t\t\t} else {\n\t\t\t\treturn Promise.resolve(undefined); // 1-1 relation\n\t\t\t}\n\t\t});\n\n\t\t// //////////////////////////////////////////////////////////////////\n\t\t// 3. Reconstruct the full paths from canonical paths (for path mapping)\n\t\t// Example: for canonical paths \"/Param(aa)/Entity(bb-sibling)\", \"/Entity2(cc-sibling)\", \"/Entity3(dd-sibling)\"\n\t\t// --> [\"Param(aa)/Entity(bb-sibling)\", \"Param(aa)/Entity(bb-sibling)/_Nav(cc-sibling)\", \"Param(aa)/Entity(bb-sibling)/_Nav(cc-sibling)/_SubNav(dd-sibling)\"]\n\t\tconst canonicalPaths = (await Promise.all(canonicalPathPromises)) as string[];\n\n\t\t// Workaround (temporary ?): when the sibling doesn't exist, requestCanonicalPath returns the same path\n\t\tif (\n\t\t\tcanonicalPaths.some((path) => {\n\t\t\t\treturn path && path.endsWith(\"/SiblingEntity\");\n\t\t\t})\n\t\t) {\n\t\t\t// At least one sibling entity doesn't exist\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (rootContextInfo?.rootSiblingPathPromise) {\n\t\t\tconst rootSiblingPath = (await rootContextInfo.rootSiblingPathPromise)?.getPath() as string;\n\t\t\tcanonicalPaths.unshift(rootSiblingPath);\n\t\t\toldPaths.push(rootCurrentContext.getPath());\n\t\t}\n\t\tlet siblingPath = \"\";\n\t\tcanonicalPaths.forEach((canonicalPath, index) => {\n\t\t\tif (index !== 0) {\n\t\t\t\tif (segments[index].endsWith(\")\")) {\n\t\t\t\t\tconst navigation = segments[index].replace(/\\(.*$/, \"\"); // Keep only navigation name from the segment, i.e. aaa(xxx) --> aaa\n\t\t\t\t\tconst keys = canonicalPath.replace(/.*\\(/, \"(\"); // Keep only the keys from the canonical path, i.e. aaa(xxx) --> (xxx)\n\t\t\t\t\tsiblingPath += `/${navigation}${keys}`;\n\t\t\t\t} else {\n\t\t\t\t\tsiblingPath += `/${segments[index]}`; // 1-1 relation\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsiblingPath = canonicalPath; // To manage parametrized entities\n\t\t\t}\n\t\t\tnewPaths.unshift(siblingPath);\n\t\t});\n\n\t\tlet parameters: { $select?: string; $$groupId?: string };\n\t\tconst messagePath = getMessagePathForContext(rightmostCurrentContext);\n\t\tif (createKeepAliveContext) {\n\t\t\tparameters = { $$groupId: \"$auto.Workers\" }; // We need to use the same group ID as for the parent list binding\n\t\t} else {\n\t\t\tparameters = bindingParameters ?? {};\n\t\t\tif (messagePath) {\n\t\t\t\tif (parameters.$select) {\n\t\t\t\t\tparameters.$select += `,${messagePath}`;\n\t\t\t\t} else {\n\t\t\t\t\tparameters.$select = messagePath;\n\t\t\t\t}\n\t\t\t}\n\t\t\tparameters.$$groupId = \"$auto.Heroes\";\n\t\t}\n\n\t\treturn {\n\t\t\ttargetContext: createKeepAliveContext\n\t\t\t\t? model.getKeepAliveContext(siblingPath, !!messagePath, parameters)\n\t\t\t\t: model.bindContext(siblingPath, undefined, parameters).getBoundContext(), // Create the rightmost sibling context from its path\n\t\t\tpathMapping: oldPaths.map((oldPath, index) => {\n\t\t\t\treturn {\n\t\t\t\t\toldPath,\n\t\t\t\t\tnewPath: newPaths[index]\n\t\t\t\t};\n\t\t\t})\n\t\t};\n\t} catch (error) {\n\t\t// A canonical path couldn't be resolved (because a sibling doesn't exist)\n\t\treturn undefined;\n\t}\n}\n\n/**\n * Creates a draft document from an existing document.\n *\n * The function supports several hooks as there is a certain coreography defined.\n * @param oContext Context of the active document for the new draft\n * @param oAppComponent The AppComponent\n * @param mParameters The parameters\n * @param [mParameters.oView] The view\n * @param [mParameters.bPreserveChanges] Preserve changes of an existing draft of another user\n * @param groupId The batch groupId for post call of edit action\n * @param messageHandler The message handler controller extension\n * @param transactionDetails Optional object to return additional details about how the transaction was executed\n * @param transactionDetails.existingDraftReused An existing draft was returned, instead of returning a new one\n * @returns Promise resolves with the {@link sap.ui.model.odata.v4.Context context} of the new draft document\n */\nasync function createDraftFromActiveDocument(\n\toContext: Context,\n\toAppComponent: AppComponent,\n\tmParameters: {\n\t\toView: FEView;\n\t\tbPreserveChanges?: boolean | undefined;\n\t},\n\tgroupId: string,\n\tmessageHandler: MessageHandler,\n\ttransactionDetails?: {\n\t\texistingDraftReused?: boolean;\n\t}\n): Promise<Context | undefined> {\n\tconst mParam = mParameters || {},\n\t\tbRunPreserveChangesFlow =\n\t\t\ttypeof mParam.bPreserveChanges === \"undefined\" || (typeof mParam.bPreserveChanges === \"boolean\" && mParam.bPreserveChanges); //default true\n\n\t/**\n\t * Overwrite the existing change.\n\t * @param response Context of the active document for the new draft or the error retrieved\n\t * @returns Resolves with result of {@link sap.fe.core.actions#executeDraftEditAction}\n\t */\n\tasync function overwriteChange(response: Context | ContextErrorType): Promise<Context | ContextErrorType | undefined> {\n\t\t//Overwrite existing changes\n\t\tconst oModel = oContext.getModel();\n\t\tconst draftDataContext = oModel.bindContext(`${oContext.getPath()}/DraftAdministrativeData`).getBoundContext();\n\t\tconst resourceModel = getResourceModel(mParameters.oView);\n\t\tconst draftAdminData = await draftDataContext.requestObject();\n\t\tif (draftAdminData) {\n\t\t\t// remove all unbound transition messages as we show a special dialog\n\t\t\tmessageHandling.removeUnboundTransitionMessages();\n\t\t\tlet sInfo = draftAdminData.InProcessByUserDescription || draftAdminData.InProcessByUser;\n\t\t\tconst sEntitySet = mParameters.oView.getViewData().entitySet;\n\t\t\tif (sInfo) {\n\t\t\t\tconst sLockedByUserMsg = resourceModel.getText(\"C_DRAFT_OBJECT_PAGE_DRAFT_LOCKED_BY_USER\", sInfo, sEntitySet);\n\t\t\t\tMessageBox.error(sLockedByUserMsg);\n\t\t\t\tthrow new Error(sLockedByUserMsg);\n\t\t\t} else {\n\t\t\t\tsInfo = draftAdminData.CreatedByUserDescription || draftAdminData.CreatedByUser;\n\t\t\t\tconst sUnsavedChangesMsg = resourceModel.getText(\"C_DRAFT_OBJECT_PAGE_DRAFT_UNSAVED_CHANGES\", sInfo, sEntitySet);\n\t\t\t\tawait draft.showEditConfirmationMessageBox(sUnsavedChangesMsg, oContext);\n\t\t\t\treturn draft.executeDraftEditAction(oContext, false, mParameters.oView, groupId, messageHandler, true); // true because we overwrite changes\n\t\t\t}\n\t\t} else if ((response as ContextErrorType)?.message) {\n\t\t\tMessageBox.error((response as ContextErrorType).message);\n\t\t}\n\t\tthrow new Error(`Draft creation aborted for document: ${oContext.getPath()}`);\n\t}\n\n\tif (!oContext) {\n\t\tthrow new Error(\"Binding context to active document is required\");\n\t}\n\tlet oDraftContext: Context | ContextErrorType | undefined;\n\ttry {\n\t\toDraftContext = await draft.executeDraftEditAction(oContext, bRunPreserveChangesFlow, mParameters.oView, groupId, messageHandler);\n\t} catch (oResponse) {\n\t\tif ((oResponse as ContextErrorType).status === 409 || (oResponse as ContextErrorType).status === 423) {\n\t\t\tmessageHandling.removeBoundTransitionMessages();\n\t\t\tmessageHandling.removeUnboundTransitionMessages();\n\t\t\tconst bindingParameters = ModelHelper.isCollaborationDraftSupported(oContext.getModel().getMetaModel())\n\t\t\t\t? { $select: \"DraftAdministrativeData/DraftAdministrativeUser\" }\n\t\t\t\t: undefined;\n\t\t\tconst siblingInfo = await draft.computeSiblingInformation(\n\t\t\t\toContext,\n\t\t\t\toContext,\n\t\t\t\tundefined,\n\t\t\t\tundefined,\n\t\t\t\tbindingParameters,\n\t\t\t\toAppComponent._isFclEnabled()\n\t\t\t);\n\t\t\tif (siblingInfo?.targetContext) {\n\t\t\t\t//there is a context authorized to be edited by the current user\n\t\t\t\tawait CommonUtils.waitForContextRequested(siblingInfo.targetContext);\n\t\t\t\tif (transactionDetails) {\n\t\t\t\t\ttransactionDetails.existingDraftReused = true;\n\t\t\t\t}\n\n\t\t\t\treturn siblingInfo.targetContext;\n\t\t\t} else {\n\t\t\t\t//there is no draft owned by the current user\n\t\t\t\toDraftContext = await overwriteChange(oResponse as ContextErrorType);\n\t\t\t}\n\t\t} else if (!(oResponse && (oResponse as ContextErrorType).canceled)) {\n\t\t\tthrow new Error(oResponse as string);\n\t\t}\n\t}\n\n\tif (oDraftContext) {\n\t\tconst sEditActionName = draft.getActionName(oDraftContext as Context, draftOperations.EDIT);\n\t\tconst oSideEffects = oAppComponent.getSideEffectsService().getODataActionSideEffects(sEditActionName, oDraftContext as Context);\n\t\tif (oSideEffects?.triggerActions?.length) {\n\t\t\tawait oAppComponent.getSideEffectsService().requestSideEffectsForODataAction(oSideEffects, oDraftContext as Context);\n\t\t\treturn oDraftContext as Context;\n\t\t} else {\n\t\t\treturn oDraftContext as Context;\n\t\t}\n\t} else {\n\t\treturn undefined;\n\t}\n}\n/**\n * Creates an active document from a draft document.\n *\n * The function supports several hooks as there is a certain choreography defined.\n * @param oContext Context of the active document for the new draft\n * @param oAppComponent The AppComponent\n * @param messageHandler The message handler controller extension\n * @param mParameters The parameters\n * @param [mParameters.fnBeforeActivateDocument] Callback that allows a veto before the 'Create' request is executed\n * @param [mParameters.fnAfterActivateDocument] Callback for postprocessing after document was activated.\n * @param [mParameters.resourceModel] Resource Model\n * @returns Promise resolves with the {@link sap.ui.model.odata.v4.Context context} of the new draft document\n */\nasync function activateDocument(\n\toContext: Context,\n\toAppComponent: AppComponent,\n\tmessageHandler: MessageHandler,\n\tmParameters: { fnBeforeActivateDocument?: Function; fnAfterActivateDocument?: Function; resourceModel?: ResourceModel },\n\tisStandardSave?: boolean | undefined\n): Promise<Context> {\n\tconst mParam = mParameters || {};\n\tif (!oContext) {\n\t\tthrow new Error(\"Binding context to draft document is required\");\n\t}\n\n\tconst bExecute = mParam.fnBeforeActivateDocument ? await mParam.fnBeforeActivateDocument(oContext) : true;\n\tif (!bExecute) {\n\t\tthrow new Error(`Activation of the document was aborted by extension for document: ${oContext.getPath()}`);\n\t}\n\n\tlet oActiveDocumentContext: Context;\n\tif (!draft.hasPrepareAction(oContext)) {\n\t\toActiveDocumentContext = await executeDraftActivationAction(\n\t\t\toContext,\n\t\t\toAppComponent,\n\t\t\tmessageHandler,\n\t\t\tundefined,\n\t\t\tundefined,\n\t\t\tmParameters.resourceModel\n\t\t);\n\t} else {\n\t\t/* activation requires preparation */\n\t\tconst sBatchGroup = \"$auto\";\n\t\t//when there are pending changes there will be a patch request merged together with the draftPrepare and draftAcivate.\n\t\t//The patch changes the Etag, therfore the prepare needs to ignore Etags\n\t\tconst ignoreEtag: boolean = oContext.getModel().hasPendingChanges(\"$auto\") ? true : false;\n\t\t// we use the same batchGroup to force prepare and activate in a same batch but with different changeset\n\t\tconst oPreparePromise = draft.executeDraftPreparationAction(oContext, sBatchGroup, undefined, ignoreEtag);\n\t\toContext.getModel().submitBatch(sBatchGroup);\n\t\tconst oActivatePromise = draft.executeDraftActivationAction(\n\t\t\toContext,\n\t\t\toAppComponent,\n\t\t\tmessageHandler,\n\t\t\tsBatchGroup,\n\t\t\toPreparePromise,\n\t\t\tmParameters.resourceModel,\n\t\t\tisStandardSave\n\t\t);\n\n\t\tconst values = await Promise.all([oPreparePromise, oActivatePromise]);\n\t\toActiveDocumentContext = values[1];\n\t}\n\treturn mParam.fnAfterActivateDocument ? mParam.fnAfterActivateDocument(oContext, oActiveDocumentContext) : oActiveDocumentContext;\n}\n\n/**\n * Display the confirmation dialog box after pressing the edit button of an object page with unsaved changes.\n * @param sUnsavedChangesMsg Dialog box message informing the user that if he starts editing, the previous unsaved changes will be lost\n * @param oContext Context of the active document for the new draft\n * @returns Promise resolves\n */\nasync function showEditConfirmationMessageBox(sUnsavedChangesMsg: string, oContext: Context): Promise<boolean> {\n\tconst localI18nRef = Library.getResourceBundleFor(\"sap.fe.core\")!;\n\treturn new Promise(function (resolve: (value: boolean) => void, reject: (reason?: unknown) => void) {\n\t\tconst oDialog = new Dialog({\n\t\t\ttitle: localI18nRef.getText(\"C_MESSAGE_HANDLING_SAPFE_ERROR_MESSAGES_PAGE_TITLE_WARNING\"),\n\t\t\tstate: \"Warning\",\n\t\t\tcontent: new Text({\n\t\t\t\ttext: sUnsavedChangesMsg\n\t\t\t}),\n\t\t\tbeginButton: new Button({\n\t\t\t\ttext: localI18nRef.getText(\"C_COMMON_OBJECT_PAGE_EDIT\"),\n\t\t\t\ttype: \"Emphasized\",\n\t\t\t\tpress: function (): void {\n\t\t\t\t\toDialog.close();\n\t\t\t\t\tresolve(true);\n\t\t\t\t}\n\t\t\t}),\n\t\t\tendButton: new Button({\n\t\t\t\ttext: localI18nRef.getText(\"C_COMMON_OBJECT_PAGE_CANCEL\"),\n\t\t\t\tpress: function (): void {\n\t\t\t\t\toDialog.close();\n\t\t\t\t\treject(`Draft creation aborted for document: ${oContext.getPath()}`);\n\t\t\t\t}\n\t\t\t}),\n\t\t\tafterClose: function (): void {\n\t\t\t\toDialog.destroy();\n\t\t\t}\n\t\t});\n\t\toDialog.addStyleClass(\"sapUiContentPadding\");\n\t\toDialog.open();\n\t});\n}\n\n/**\n * HTTP POST call when DraftAction is present for Draft Delete; HTTP DELETE call when there is no DraftAction\n * and Active Instance always uses DELETE.\n * @param oContext Context of the document to be discarded\n * @param messageHandler The message handler controller extension\n * @param oAppComponent Context of the document to be discarded\n * @param bEnableStrictHandling\n * @returns A Promise resolved when the context is deleted\n */\nasync function deleteDraft(\n\toContext: Context,\n\tmessageHandler: MessageHandler,\n\toAppComponent: AppComponent,\n\tbEnableStrictHandling?: boolean\n): Promise<void> {\n\tif (oContext.isTransient()) {\n\t\t// Transient contexts (e.g. when trying to delete a context which couldn't be created because of an error) can be deleted immediately\n\t\treturn oContext.delete();\n\t}\n\tconst sDiscardAction = getActionName(oContext, draftOperations.DISCARD);\n\tconst bIsActiveEntity = oContext.getObject().IsActiveEntity;\n\n\tif (bIsActiveEntity || (!bIsActiveEntity && !sDiscardAction)) {\n\t\t//Use Delete in case of active entity and no discard action available for draft\n\t\tif (oContext.hasPendingChanges() && !oContext.isInactive()) {\n\t\t\tawait oContext.getBinding().resetChanges();\n\t\t\treturn oContext.delete();\n\t\t} else {\n\t\t\t// When cancelling an edit draft root node, use model.delete instead of context.delete, to only send deletion to backend,\n\t\t\t// but keep context alive (including bindings). Thus, we can ensure seamless transistion from draft to active instance\n\t\t\t// (without intermediate undefined bindings e.g. leading to flickering). This doesn't work in case of FCL apps, as\n\t\t\t// model.delete doesn't clean up the parent listBinding properly, leading to incorrect OData requests.\n\t\t\t// In other cases (deleting active, discarding create draft or discarding draft node), stay with context.delete.\n\t\t\t// When cancelling a create draft, page is closed, thus the problem of flickering cannot occur.\n\t\t\t// In case of discarding a draft node, theoretically the same problem could\n\t\t\t// occur, but needs quite specific modelling (button visibility on item level bound against service property in an FCL app)\n\t\t\t// and acting (looking at button on third column while discarding on 2nd column). Currently, model seems not to be prepared\n\t\t\t// for that case, thus due to the minimal impact (only intermediate visual state), accepting this for the time being.\n\t\t\treturn !oAppComponent._isFclEnabled() &&\n\t\t\t\t!oContext.getProperty(\"IsActiveEntity\") &&\n\t\t\t\tModelHelper.isDraftRoot(\n\t\t\t\t\tgetInvolvedDataModelObjects(oContext.getModel().getMetaModel().getMetaContext(oContext.getPath()))?.targetEntitySet\n\t\t\t\t) &&\n\t\t\t\toContext.getProperty(\"HasActiveEntity\")\n\t\t\t\t? oContext.getModel().delete(oContext)\n\t\t\t\t: oContext.delete();\n\t\t}\n\t} else {\n\t\t//Use Discard Post Action if it is a draft entity and discard action exists\n\t\tawait executeDraftDiscardAction(oContext, messageHandler, oAppComponent, bEnableStrictHandling);\n\t}\n}\n\nconst draft = {\n\tcreateDraftFromActiveDocument: createDraftFromActiveDocument,\n\tactivateDocument: activateDocument,\n\tdeleteDraft: deleteDraft,\n\texecuteDraftEditAction: executeDraftEditAction,\n\texecuteDraftValidation: executeDraftValidation,\n\texecuteDraftPreparationAction: executeDraftPreparationAction,\n\texecuteDraftActivationAction: executeDraftActivationAction,\n\thasPrepareAction: hasPrepareAction,\n\tcomputeSiblingInformation: computeSiblingInformation,\n\tprocessDataLossOrDraftDiscardConfirmation: draftDataLossPopup.processDataLossOrDraftDiscardConfirmation,\n\tsilentlyKeepDraftOnForwardNavigation: draftDataLossPopup.silentlyKeepDraftOnForwardNavigation,\n\tcreateOperation: createOperation,\n\texecuteDraftDiscardAction: executeDraftDiscardAction,\n\tNavigationType: draftDataLossPopup.NavigationType,\n\tgetActionName: getActionName,\n\tshowEditConfirmationMessageBox: showEditConfirmationMessageBox\n};\n\nexport default draft;\n"],"mappings":"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","ignoreList":[],"file":"draft-dbg.js"}