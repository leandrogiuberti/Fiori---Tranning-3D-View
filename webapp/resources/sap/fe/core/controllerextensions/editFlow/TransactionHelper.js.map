{"version":3,"file":"TransactionHelper.js","names":["CreationMode","FELibrary","ProgrammingModel","DeleteOptionTypes","deleteHelper","DeleteDialogContentControl","getParameters","mParameters","getMetadata","getName","TransactionHelper","_proto","prototype","busyLock","appComponent","busyPath","BusyLocker","lock","getModel","busyUnlock","unlock","getProgrammingModel","source","path","isA","getPath","isRelative","getResolvedPath","metaModel","getMetaModel","ModelHelper","isDraftSupported","Draft","isStickySessionSupported","Sticky","NonDraft","validateDocument","async","oContext","oView","sCustomValidationFunction","customValidationFunction","sModule","substring","lastIndexOf","replace","sFunctionName","length","mData","data","FPMHelper","validationWrapper","Promise","resolve","getDataFromDefaultValueFunction","listBinding","model","metaContext","getMetaContext","listBindingObjectPath","MetaModelConverter","getInvolvedDataModelObjects","defaultFuncOnTargetObject","targetObject","annotations","Common","DefaultValuesFunction","defaultFuncOnTargetEntitySet","targetEntitySet","defaultFunctionName","toString","undefined","functionOnNavProp","isNavigationProperty","defaultFunctionContext","bindingPath","context","getContext","startsWith","includes","firstNav","split","parentPath","bindContext","getBoundContext","getHeaderContext","operation","Operation","getOperationFromName","isAnAction","isAction","result","ODataOperation","contexts","enhance$select","groupId","execute","filter","isFulfilled","value","boundContext","getObject","isListBindingHierarchical","getAggregation","hierarchyQualifier","isListBindingAnalytical","aggregation","createContext","initialData","options","dataForCreation","this","listBindingForCreation","parentContext","isExpanded","expand","Object","assign","bindList","$$groupId","getGroupId","$$updateGroupId","getUpdateGroupId","objectPath","parentNavigation","targetEntityType","Aggregation","ParentNavigationProperty","Error","parentBindingData","create","createAtEnd","createInactive","getCreationParameters","createData","metaPath","getMetaPath","nonComputedVisibleFields","getCreatePopupFields","fieldName","createDocument","mainListBinding","inParameters","resourceModel","messageHandler","fromCopyPaste","defaultValueFunctionData","newDocumentContext","parameters","programmingModel","getBusyPath","beforeCreateCallBack","inactive","messageHandlingKey","registerToHoldMessages","performCreation","showMessageDialog","control","parentControl","unHoldKey","error","Constants","ActionExecutionFailed","CancelActionDialog","isTransient","delete","busyMode","busyId","createDocumentContext","createParameters","entries","map","_ref","key","toES6Promise","contextPath","Log","OnBeforeCreateFailed","reduce","currentObject","createPromise","CommonUtils","INLINEEDIT_UPDATEGROUPID","submitBatch","createHash","getRouterProxy","getHash","componentData","getComponentData","startupParameters","newAction","_getNewAction","performCreationWithAction","status","reason","returnedContext","performCreationWithPOST","actionName","headerContextPath","messagesPath","getMessagesPath","bindingParameters","$$patchWithoutSideEffects","selectedProperties","push","join","callAction","showActionParameterDialog","label","_getSpecificCreateActionDialogLabel","view","isCreateAction","skipParameterDialog","defaultData","canHaveDialog","creationMode","CreationRow","Inline","creationDialogFields","CreationDialog","forEach","createWithDialog","refreshListBinding","waitForCreateCompletion","keepTransientContextOnFailed","msg","message","_isDraftEnabled","vContexts","contextForDraftModel","sProgrammingModel","deleteDocument","contextsToDelete","Array","isArray","firstContext","selectedContexts","draftEnabled","items","unSavedContext","entitySetName","getCollectionNameFromContext","numberOfSelectedContexts","lockedContext","find","contextData","IsActiveEntity","HasDraftEntity","DraftAdministrativeData","InProcessByUser","DraftIsCreatedByMe","showDeleMessageLockedObjet","nonTableTxt","unSavedContextUser","getText","title","description","type","deletableContexts","text","selected","TEXT","totalDeletable","draftsWithNonDeletableActive","draftsWithDeletableActive","unSavedContexts","updateDraftOptionsForDeletableTexts","nonDeletableText","getNonDeletableText","optionsDeletableTexts","getOptionsForDeletableTexts","commonBinding","getBinding","bindingType","updateContentForDeleteDialog","noDialog","silentMode","confirmed","showDeleteConfirmationDialog","messageHandling","removeBoundTransitionMessages","deleteConfirmHandler","lockingUserName","promiseKeeper","PromiseKeeper","MessageBox","show","onClose","promise","dialog","createDeleteDialog","addStyleClass","open","dialogConfirmed","vBox","VBox","resourceBundleCore","Library","getResourceBundleFor","Dialog","state","content","ariaLabelledBy","beginButton","Button","press","close","endButton","afterClose","destroy","editDocument","transactionDetails","removeTransitionMessages","oNewContext","draft","createDraftFromActiveDocument","bPreserveChanges","sticky","editDocumentInStickySession","err","showMessages","concurrentEditFlag","prepareSiblingContext","semanticKeys","SemanticKeyHelper","getSemanticKeys","semanticKeyPaths","$PropertyPath","$select","entityPath","technicalKeys","cancelDocument","mInParameters","isNewObject","isObjectModified","oModel","returnedValue","siblingContext","siblingContextCanonicalPath","draftAdminData","siblingData","draftDataContext","all","requestCanonicalPath","requestObject","CreationDateTime","LastChangeDateTime","skipDiscardPopover","_confirmDiscard","cancelButton","isKeepAlive","setKeepAlive","beforeCancelCallBack","hasPendingChanges","resetChanges","deleteDraft","discardedContext","discardDocument","refresh","activeContext","activeContextData","saveDocument","executeSideEffectsOnError","bindingsForSideEffects","skipConfirmationMsg","arguments","isStandardSave","oActiveDocument","activateDocument","messagesReceived","getMessages","concat","getType","MessageType","Success","MessageToast","hasTransientContext","getSideEffectsService","requestSideEffectsForNavigationProperty","sActionName","contextToProcess","sName","controlId","byId","oResult","convertedAction","parameterValues","invocationGrouping","oDataProperties","ghostContextBindingProtection","ignoreETag","oDataEvents","onODataSubmit","onODataResponse","onRequestSideEffects","handleActionEnablementOnOperation","internalModelContext","operationAvailableMap","defaultValuesExtensionFunction","convertedActionImport","action","_handleActionResponse","name","actionHelper","isStaticAction","getProperty","ActionRuntime","setActionEnablement","JSON","parse","getSelectedContexts","updateDeleteInfoForSelectedContexts","aTransientMessages","setProperty","handleValidationError","errorToRemove","Messaging","getMessageModel","getData","validation","removeMessages","_createPopover","settings","Popover","isModified","setEnabled","reject","confirmationPopover","showHeader","placement","Text","id","confirmButton","width","addAriaLabelledBy","addContent","attachBeforeOpen","setInitialFocus","attachAfterClose","destroyContent","CancelDiscardDraft","openBy","isRoot","requestSideEffects","$NavigationPropertyPath","requestRefresh","fieldNames","listMetaPath","transientListBinding","refreshInternal","transientContext","fieldMetaContexts","createBindingContext","createDialog","getCoreUIFactory","newCreateDialog","setUserDefaults","createAction","openDialog","e","resultPromiseKeeper","onExitDialog","event","getParameter","closeDialog","setBusy","bIsCreateDialog","transientData","keys","propertyPath","oProperty","$kind","createDataAsArray","_ref2","UiModelConstants","DocumentModified","newContext","creationSuccess","afterCreateCallBack","displayErrorMessages","showBoundStateMessages","CreationFailed","isOperationDialogOpen","isOpen","attachExitDialog","parentListBinding","onCreateCompleted","createdContext","success","detachCreateCompleted","attachCreateCompleted","creationSuccessful","created","catch","contextError","trace","oStartupParameters","sCreateHash","oMetaModel","sMetaPath","sNewAction","preferredMode","toUpperCase","sPreferredMode","lineItems","lineItem","isDataFieldForAction","Action","Label","singleton"],"sources":["./TransactionHelper.ts"],"sourcesContent":["import type { Action as EdmAction, EntitySet, NavigationProperty } from \"@sap-ux/vocabularies-types\";\nimport type { LineItem } from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport Log from \"sap/base/Log\";\nimport type AppComponent from \"sap/fe/core/AppComponent\";\nimport type { FEView } from \"sap/fe/core/BaseController\";\nimport CommonUtils from \"sap/fe/core/CommonUtils\";\nimport type ResourceModel from \"sap/fe/core/ResourceModel\";\nimport type { ExitDialogEvent } from \"sap/fe/core/UIProvider\";\nimport { getCoreUIFactory } from \"sap/fe/core/UIProvider\";\nimport BusyLocker from \"sap/fe/core/controllerextensions/BusyLocker\";\nimport type MessageHandler from \"sap/fe/core/controllerextensions/MessageHandler\";\nimport type { BindContextParameters } from \"sap/fe/core/controllerextensions/editFlow/draft\";\nimport draft from \"sap/fe/core/controllerextensions/editFlow/draft\";\nimport UiModelConstants from \"sap/fe/core/controllerextensions/editFlow/editFlowConstants\";\nimport sticky from \"sap/fe/core/controllerextensions/editFlow/sticky\";\nimport messageHandling from \"sap/fe/core/controllerextensions/messageHandler/messageHandling\";\nimport * as MetaModelConverter from \"sap/fe/core/converters/MetaModelConverter\";\nimport { isDataFieldForAction } from \"sap/fe/core/converters/annotations/DataField\";\nimport type { DeleteOption, DeleteParameters } from \"sap/fe/core/helpers/DeleteHelper\";\nimport deleteHelper from \"sap/fe/core/helpers/DeleteHelper\";\nimport FPMHelper from \"sap/fe/core/helpers/FPMHelper\";\nimport { getCreatePopupFields } from \"sap/fe/core/helpers/MetaModelFunction\";\nimport type { InternalModelContext } from \"sap/fe/core/helpers/ModelHelper\";\nimport ModelHelper from \"sap/fe/core/helpers/ModelHelper\";\nimport PromiseKeeper from \"sap/fe/core/helpers/PromiseKeeper\";\nimport SemanticKeyHelper from \"sap/fe/core/helpers/SemanticKeyHelper\";\nimport toES6Promise from \"sap/fe/core/helpers/ToES6Promise\";\nimport { isAction, isFulfilled, isNavigationProperty } from \"sap/fe/core/helpers/TypeGuards\";\nimport FELibrary from \"sap/fe/core/library\";\nimport Button from \"sap/m/Button\";\nimport Dialog from \"sap/m/Dialog\";\nimport MessageBox from \"sap/m/MessageBox\";\nimport MessageToast from \"sap/m/MessageToast\";\nimport type { $PopoverSettings } from \"sap/m/Popover\";\nimport Popover from \"sap/m/Popover\";\nimport Text from \"sap/m/Text\";\nimport VBox from \"sap/m/VBox\";\nimport type Event from \"sap/ui/base/Event\";\nimport type Control from \"sap/ui/core/Control\";\nimport Library from \"sap/ui/core/Lib\";\nimport Messaging from \"sap/ui/core/Messaging\";\nimport type Message from \"sap/ui/core/message/Message\";\nimport MessageType from \"sap/ui/core/message/MessageType\";\nimport type View from \"sap/ui/core/mvc/View\";\nimport type Table from \"sap/ui/mdc/Table\";\nimport type MultiValueFieldItem from \"sap/ui/mdc/field/MultiValueFieldItem\";\nimport type Binding from \"sap/ui/model/Binding\";\nimport type Context from \"sap/ui/model/Context\";\nimport type ODataV4Context from \"sap/ui/model/odata/v4/Context\";\nimport type ODataListBinding from \"sap/ui/model/odata/v4/ODataListBinding\";\nimport type { ODataListBinding$CreateCompletedEvent } from \"sap/ui/model/odata/v4/ODataListBinding\";\nimport type ODataMetaModel from \"sap/ui/model/odata/v4/ODataMetaModel\";\nimport type ODataModel from \"sap/ui/model/odata/v4/ODataModel\";\nimport ActionRuntime from \"../../ActionRuntime\";\nimport type { OperationResult } from \"./operations/ODataOperation\";\nimport ODataOperation from \"./operations/ODataOperation\";\nimport Operation from \"./operations/Operation\";\nimport actionHelper from \"./operations/actionHelper\";\n\nconst CreationMode = FELibrary.CreationMode;\nconst ProgrammingModel = FELibrary.ProgrammingModel;\n\n//Enums for delete text calculations for delete confirm dialog.\nconst DeleteOptionTypes = deleteHelper.DeleteOptionTypes;\nconst DeleteDialogContentControl = deleteHelper.DeleteDialogContentControl;\n\n/* Make sure that the mParameters is not the oEvent */\nfunction getParameters<T>(mParameters?: Event | T): T {\n\tif (mParameters && (mParameters as Event).getMetadata && (mParameters as Event).getMetadata().getName() === \"sap.ui.base.Event\") {\n\t\tmParameters = {} as T;\n\t}\n\treturn (mParameters as T) || ({} as T);\n}\n\nexport type CreateParameters = {\n\tdata?: Record<string, unknown>;\n\tbusyMode?: string;\n\tbusyId?: string;\n\tkeepTransientContextOnFailed?: boolean;\n\tparentControl: View;\n\tinactive?: boolean;\n\tbeforeCreateCallBack?: Function;\n\tafterCreateCallBack?: (context: ODataV4Context) => Promise<void>;\n\tskipParameterDialog?: boolean;\n\tcreationMode?: string;\n\tcreateAtEnd?: boolean;\n\tparentContext?: ODataV4Context;\n\tcreationDialogFields?: string[];\n};\n\nexport type CancelParameters = { cancelButton: Button; skipDiscardPopover: boolean; beforeCancelCallBack?: Function };\nexport type TransactionDeleteParameters = DeleteParameters & {\n\tselectedContexts?: ODataV4Context[];\n\ttitle?: string;\n\tnoDialog?: boolean;\n};\n\nexport type EditTransactionExecutionDetails = {\n\texistingDraftReused?: boolean; // true if an existing draft was returned, instead of returning a new one\n};\n\nclass TransactionHelper {\n\tbusyLock(appComponent: AppComponent, busyPath?: string): void {\n\t\tBusyLocker.lock(appComponent.getModel(\"ui\"), busyPath);\n\t}\n\n\tbusyUnlock(appComponent: AppComponent, busyPath?: string): void {\n\t\tBusyLocker.unlock(appComponent.getModel(\"ui\"), busyPath);\n\t}\n\n\tgetProgrammingModel(source: ODataV4Context | Binding): typeof ProgrammingModel {\n\t\tlet path: string;\n\t\tif (source.isA<ODataV4Context>(\"sap.ui.model.odata.v4.Context\")) {\n\t\t\tpath = source.getPath();\n\t\t} else {\n\t\t\tpath = (source.isRelative() ? source.getResolvedPath() : source.getPath()) ?? \"\";\n\t\t}\n\n\t\tconst metaModel = source.getModel()?.getMetaModel() as ODataMetaModel | undefined;\n\t\tif (metaModel && ModelHelper.isDraftSupported(metaModel, path)) {\n\t\t\treturn ProgrammingModel.Draft;\n\t\t} else if (metaModel && ModelHelper.isStickySessionSupported(metaModel)) {\n\t\t\treturn ProgrammingModel.Sticky;\n\t\t} else {\n\t\t\treturn ProgrammingModel.NonDraft;\n\t\t}\n\t}\n\n\t/**\n\t * Validates a document.\n\t * @param oContext Context of the document to be validated\n\t * @param [mParameters] Can contain the following attributes:\n\t * @param [mParameters.data] A map of data that should be validated\n\t * @param [mParameters.customValidationFunction] A string representing the path to the validation function\n\t * @param oView Contains the object of the current view\n\t * @returns Promise resolves with result of the custom validation function\n\t * @final\n\t */\n\tasync validateDocument(\n\t\toContext: ODataV4Context,\n\t\tmParameters: { customValidationFunction?: string; data: Record<string, unknown> },\n\t\toView: View\n\t): Promise<{ messageTarget?: string; messageText: string }[]> {\n\t\tconst sCustomValidationFunction = mParameters && mParameters.customValidationFunction;\n\t\tif (sCustomValidationFunction) {\n\t\t\tconst sModule = sCustomValidationFunction.substring(0, sCustomValidationFunction.lastIndexOf(\".\") || -1).replace(/\\./gi, \"/\"),\n\t\t\t\tsFunctionName = sCustomValidationFunction.substring(\n\t\t\t\t\tsCustomValidationFunction.lastIndexOf(\".\") + 1,\n\t\t\t\t\tsCustomValidationFunction.length\n\t\t\t\t),\n\t\t\t\tmData = mParameters.data;\n\t\t\tdelete mData[\"@$ui5.context.isTransient\"];\n\t\t\treturn FPMHelper.validationWrapper(sModule, sFunctionName, mData, oView, oContext);\n\t\t}\n\t\treturn Promise.resolve([]);\n\t}\n\n\t/**\n\t * Retrieves default values from the DefaultValue function.\n\t * @param listBinding The list binding to be used for creation\n\t * @param appComponent The app component\n\t * @returns A promise with an object containing the default values (or undefined if there's no default value function)\n\t */\n\tpublic async getDataFromDefaultValueFunction(listBinding: ODataListBinding, appComponent: AppComponent): Promise<object | undefined> {\n\t\tconst model = listBinding.getModel();\n\t\tconst metaModel = model.getMetaModel();\n\t\tconst metaContext = metaModel.getMetaContext(listBinding.getResolvedPath() as string);\n\t\tconst listBindingObjectPath = MetaModelConverter.getInvolvedDataModelObjects(metaContext);\n\n\t\tconst defaultFuncOnTargetObject = (listBindingObjectPath.targetObject as NavigationProperty | EntitySet).annotations.Common\n\t\t\t?.DefaultValuesFunction;\n\t\tconst defaultFuncOnTargetEntitySet = (listBindingObjectPath.targetEntitySet as EntitySet | undefined)?.annotations.Common\n\t\t\t?.DefaultValuesFunction;\n\t\tconst defaultFunctionName = (defaultFuncOnTargetObject ?? defaultFuncOnTargetEntitySet)?.toString();\n\n\t\tif (!defaultFunctionName) {\n\t\t\t// No default value function\n\t\t\treturn undefined;\n\t\t}\n\t\tconst functionOnNavProp = isNavigationProperty(listBindingObjectPath.targetObject) && defaultFuncOnTargetObject !== undefined;\n\t\tlet defaultFunctionContext;\n\n\t\tif (functionOnNavProp) {\n\t\t\t// If the path is a deep navigation, derive the correct parent context\n\t\t\tconst bindingPath = listBinding.getPath();\n\t\t\tconst context = listBinding.getContext();\n\t\t\tif (bindingPath?.startsWith(\"/\")) {\n\t\t\t\tdefaultFunctionContext = context;\n\t\t\t} else if (bindingPath && context && bindingPath.includes(\"/\")) {\n\t\t\t\t// Extract the first part of the navigation path (e.g., _ToHeader/_ToItems → _ToHeader)\n\t\t\t\tconst firstNav = bindingPath.split(\"/\")[0];\n\n\t\t\t\t// Build the full path to the correct context for the function call\n\t\t\t\tconst parentPath = `${context.getPath()}/${firstNav}`;\n\n\t\t\t\t// Create a new binding context for this path\n\t\t\t\tdefaultFunctionContext = model.bindContext(parentPath).getBoundContext();\n\t\t\t} else {\n\t\t\t\t// Fallback to the current context if no navigation found\n\t\t\t\tdefaultFunctionContext = context;\n\t\t\t}\n\t\t} else {\n\t\t\t// If not a navigation property, use the header context (root object page context)\n\t\t\tdefaultFunctionContext = listBinding.getHeaderContext();\n\t\t}\n\t\t//const defaultFunctionContext = functionOnNavProp ? listBinding.getContext() : listBinding.getHeaderContext();\n\t\tif (!defaultFunctionContext) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst operation =\n\t\t\tOperation.getOperationFromName(defaultFunctionName, model, defaultFunctionContext) ??\n\t\t\tOperation.getOperationFromName(defaultFunctionName, model);\n\t\tif (!operation) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst isAnAction = isAction(operation);\n\t\tconst result = await new ODataOperation(\n\t\t\toperation,\n\t\t\t{\n\t\t\t\tappComponent,\n\t\t\t\tmodel,\n\t\t\t\tcontexts: isAnAction ? [defaultFunctionContext] : []\n\t\t\t},\n\t\t\t{\n\t\t\t\tenhance$select: false,\n\t\t\t\tgroupId: isAnAction ? \"functionGroup\" : \"functionImport\"\n\t\t\t}\n\t\t).execute();\n\t\treturn result.filter(isFulfilled)[0]?.value.boundContext.getObject();\n\t}\n\n\t/**\n\t * Checks if a list binding corresponds to a hierarchy.\n\t * @param listBinding\n\t * @returns True if the list binding is hierarchical.\n\t */\n\tisListBindingHierarchical(listBinding: ODataListBinding): boolean {\n\t\treturn (listBinding.getAggregation() as { hierarchyQualifier?: string } | undefined)?.hierarchyQualifier ? true : false;\n\t}\n\n\t/**\n\t * Checks if the given list binding is analytical.\n\t * @param listBinding The list binding to check\n\t * @returns TRUE if the list binding is analytical, `false` otherwise.\n\t */\n\tisListBindingAnalytical(listBinding: ODataListBinding): boolean {\n\t\tconst aggregation = listBinding.getAggregation() as { hierarchyQualifier?: string } | undefined;\n\t\treturn aggregation !== undefined && !aggregation.hierarchyQualifier;\n\t}\n\n\t/**\n\t * Creates a new context in a list binding. Handles both flat and hierarchical cases.\n\t * @param listBinding\n\t * @param initialData Initial data to create the context.\n\t * @param options Creation options.\n\t * @param options.createAtEnd Create the context at the end of the list (ignored in case of a hierarchy).\n\t * @param options.createInactive Create the context as inactive (ignored in case of a hierarchy).\n\t * @param options.parentContext Create the context as a\t child of this context (ony used in case of a hierarchy).\n\t * @returns The created context.\n\t */\n\tprivate async createContext(\n\t\tlistBinding: ODataListBinding,\n\t\tinitialData: object | undefined,\n\t\toptions: { createAtEnd?: boolean; createInactive?: boolean; parentContext?: ODataV4Context }\n\t): Promise<ODataV4Context> {\n\t\tconst dataForCreation = initialData ?? {};\n\n\t\tif (this.isListBindingHierarchical(listBinding)) {\n\t\t\tlet listBindingForCreation: ODataListBinding;\n\t\t\tif (options.parentContext?.isExpanded() === false) {\n\t\t\t\t// If the parent context already has children and is collapsed, we expand it first\n\t\t\t\tawait listBinding.expand(options.parentContext);\n\t\t\t}\n\n\t\t\tif (listBinding.isRelative()) {\n\t\t\t\tObject.assign(dataForCreation, { \"@$ui5.node.parent\": options.parentContext });\n\t\t\t\tlistBindingForCreation = listBinding;\n\t\t\t} else {\n\t\t\t\t// Absolute binding: creation from the ListReport\n\t\t\t\t// We use a temporary flat listBinding for the creation, to avoid adding the new context in the table (we don't want to display it until it's saved)\n\t\t\t\tconst model = listBinding.getModel();\n\t\t\t\tconst metaModel = model.getMetaModel();\n\t\t\t\tlistBindingForCreation = model.bindList(listBinding.getPath(), undefined, undefined, undefined, {\n\t\t\t\t\t$$groupId: listBinding.getGroupId(),\n\t\t\t\t\t$$updateGroupId: listBinding.getUpdateGroupId()\n\t\t\t\t});\n\n\t\t\t\t// Add the parent path in the initial data if a parent is provided\n\t\t\t\tif (options.parentContext) {\n\t\t\t\t\tconst objectPath = MetaModelConverter.getInvolvedDataModelObjects(metaModel.getMetaContext(listBinding.getPath()));\n\t\t\t\t\tconst hierarchyQualifier = (listBinding.getAggregation() as { hierarchyQualifier: string }).hierarchyQualifier;\n\t\t\t\t\tconst parentNavigation =\n\t\t\t\t\t\tobjectPath.targetEntityType.annotations.Aggregation?.[`RecursiveHierarchy#${hierarchyQualifier}`]\n\t\t\t\t\t\t\t?.ParentNavigationProperty.value;\n\t\t\t\t\tif (!parentNavigation) {\n\t\t\t\t\t\tthrow new Error(`Cannot find parent navigation property for ${listBinding.getPath()}`);\n\t\t\t\t\t}\n\t\t\t\t\tconst parentBindingData: Record<string, string> = {};\n\t\t\t\t\tparentBindingData[`${parentNavigation}@odata.bind`] = options.parentContext.getPath().replace(/^\\//, \"\"); // Remove leading \"/\" from the path\n\t\t\t\t\tObject.assign(dataForCreation, parentBindingData);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn listBindingForCreation.create(dataForCreation, true);\n\t\t} else if (this.isListBindingAnalytical(listBinding)) {\n\t\t\tif (listBinding.isRelative()) {\n\t\t\t\tthrow new Error(\"Creating a new document in a analytical table is supported only in a ListReport\");\n\t\t\t} else {\n\t\t\t\t// We use a temporary flat listBinding for the creation, to avoid adding the new context in the table (we don't want to display it until it's saved)\n\t\t\t\tconst model = listBinding.getModel();\n\t\t\t\tconst listBindingForCreation = model.bindList(listBinding.getPath(), undefined, undefined, undefined, {\n\t\t\t\t\t$$groupId: listBinding.getGroupId(),\n\t\t\t\t\t$$updateGroupId: listBinding.getUpdateGroupId()\n\t\t\t\t});\n\t\t\t\treturn listBindingForCreation.create(dataForCreation, true);\n\t\t\t}\n\t\t} else {\n\t\t\treturn listBinding.create(dataForCreation, true, options.createAtEnd, options.createInactive);\n\t\t}\n\t}\n\n\tgetCreationParameters(listBinding: ODataListBinding, createData: object | undefined, appComponent: AppComponent): string[] {\n\t\tconst metaModel = listBinding.getModel().getMetaModel();\n\t\tconst metaPath = metaModel.getMetaPath(listBinding.getHeaderContext()!.getPath());\n\n\t\tconst nonComputedVisibleFields = getCreatePopupFields(metaModel, metaPath, appComponent);\n\t\t// Do not consider fields for which we provide some initial data\n\t\treturn nonComputedVisibleFields.filter((fieldName: string) => {\n\t\t\treturn !(fieldName in (createData ?? {}));\n\t\t});\n\t}\n\n\t/**\n\t * Creates a new document.\n\t * @param mainListBinding OData V4 ListBinding object\n\t * @param [inParameters] Optional, can contain the following attributes:\n\t * @param [inParameters.data] A map of data that should be sent within the POST\n\t * @param [inParameters.busyMode] Global (default), Local, None TODO: to be refactored\n\t * @param [inParameters.busyId] ID of the local busy indicator\n\t * @param [inParameters.keepTransientContextOnFailed] If set, the context stays in the list if the POST failed and POST will be repeated with the next change\n\t * @param [inParameters.inactive] If set, the context is set as inactive for empty rows\n\t * @param [inParameters.skipParameterDialog] Skips the action parameter dialog\n\t * @param appComponent The app component\n\t * @param resourceModel The resource model\n\t * @param messageHandler The message handler extension\n\t * @param fromCopyPaste True if the creation has been triggered by a paste action\n\t * @param defaultValueFunctionData Default values retrieved from the DefaultValuesFunction to be applied to the new document\n\t * @returns Promise resolves with new binding context\n\t * @final\n\t */\n\tasync createDocument(\n\t\tmainListBinding: ODataListBinding,\n\t\tinParameters: CreateParameters | undefined,\n\t\tappComponent: AppComponent,\n\t\tresourceModel: ResourceModel,\n\t\tmessageHandler: MessageHandler,\n\t\tfromCopyPaste: boolean,\n\t\tdefaultValueFunctionData?: object | undefined\n\t): Promise<ODataV4Context> {\n\t\tlet newDocumentContext: ODataV4Context | undefined;\n\t\tconst parameters = getParameters(inParameters);\n\t\tif (!mainListBinding) {\n\t\t\tthrow new Error(\"Binding required for new document creation\");\n\t\t}\n\t\tconst programmingModel = this.getProgrammingModel(mainListBinding);\n\t\tif (programmingModel !== ProgrammingModel.Draft && programmingModel !== ProgrammingModel.Sticky) {\n\t\t\tthrow new Error(\"Create document only allowed for draft or sticky session supported services\");\n\t\t}\n\t\tconst busyPath = this.getBusyPath(parameters);\n\t\tparameters.beforeCreateCallBack = fromCopyPaste ? undefined : parameters.beforeCreateCallBack;\n\t\tif (!inParameters?.inactive) {\n\t\t\tthis.busyLock(appComponent, busyPath);\n\t\t}\n\t\tconst messageHandlingKey = messageHandler.registerToHoldMessages();\n\t\ttry {\n\t\t\tnewDocumentContext = await this.performCreation(\n\t\t\t\tmainListBinding,\n\t\t\t\tparameters,\n\t\t\t\tappComponent,\n\t\t\t\tmessageHandler,\n\t\t\t\tresourceModel,\n\t\t\t\tfromCopyPaste,\n\t\t\t\tdefaultValueFunctionData\n\t\t\t);\n\t\t\tawait messageHandler.showMessageDialog({ control: parameters.parentControl, unHoldKey: messageHandlingKey });\n\t\t\treturn newDocumentContext!;\n\t\t} catch (error: unknown) {\n\t\t\t// TODO: currently, the only errors handled here are raised as string - should be changed to Error objects\n\t\t\tawait messageHandler.showMessageDialog({ control: parameters.parentControl, unHoldKey: messageHandlingKey });\n\t\t\tif (\n\t\t\t\t(error === FELibrary.Constants.ActionExecutionFailed || error === FELibrary.Constants.CancelActionDialog) &&\n\t\t\t\tnewDocumentContext?.isTransient()\n\t\t\t) {\n\t\t\t\t// This is a workaround suggested by model as Context.delete results in an error\n\t\t\t\t// TODO: remove the $direct once model resolves this issue\n\t\t\t\t// this line shows the expected console error Uncaught (in promise) Error: Request canceled: POST Travel; group: submitLater\n\t\t\t\tnewDocumentContext.delete(\"$direct\");\n\t\t\t}\n\t\t\tthrow error;\n\t\t} finally {\n\t\t\tif (!inParameters?.inactive) {\n\t\t\t\tthis.busyUnlock(appComponent, busyPath);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate getBusyPath(mParameters: CreateParameters): string {\n\t\treturn mParameters.busyMode === \"Local\" ? `/busyLocal/${mParameters.busyId}` : \"/busy\";\n\t}\n\n\t/**\n\t * Creates a new document.\n\t * @param mainListBinding OData V4 ListBinding object.\n\t * @param parameters Contains the following attributes\n\t * @param parameters.data A map of data that should be sent within the POST\n\t * @param parameters.busyMode Global (default), Local, None\n\t * @param parameters.busyId ID of the local busy indicator\n\t * @param parameters.keepTransientContextOnFailed If set, the context stays in the list if the POST failed and POST will be repeated with the next change\n\t * @param parameters.parentControl\n\t * @param parameters.inactive If set, the context is set as inactive for empty rows\n\t * @param parameters.beforeCreateCallBack Callback to be called before the creation\n\t * @param parameters.skipParameterDialog Skips the action parameter dialog\n\t * @param parameters.createAtEnd Create the context at the end of the list (ignored in case of a hierarchy).\n\t * @param parameters.createInactive Create the context as inactive (ignored in case of a hierarchy).\n\t * @param parameters.parentContext Create the context as a child of this context (only used in case of a hierarchy).\n\t * @returns Promise resolves with new binding context\n\t */\n\tprivate async createDocumentContext(mainListBinding: ODataListBinding, parameters: CreateParameters): Promise<ODataV4Context> {\n\t\tif (parameters.beforeCreateCallBack) {\n\t\t\t//beforeCreateCallBack expects createParameters of type any[]\n\t\t\tconst createParameters = parameters.data ? Object.entries(parameters.data).map(([key, value]) => ({ [key]: value })) : [];\n\t\t\ttry {\n\t\t\t\tawait toES6Promise(\n\t\t\t\t\tparameters.beforeCreateCallBack({\n\t\t\t\t\t\tcontextPath: mainListBinding && mainListBinding.getPath(),\n\t\t\t\t\t\tcreateParameters: createParameters\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t} catch (error: unknown) {\n\t\t\t\tLog.error(error as string);\n\t\t\t\tthrow FELibrary.Constants.OnBeforeCreateFailed;\n\t\t\t}\n\t\t\tparameters.data = createParameters.reduce((result, currentObject) => {\n\t\t\t\treturn { ...result, ...currentObject };\n\t\t\t}, {});\n\t\t}\n\t\tconst createPromise = this.createContext(mainListBinding, parameters.data, {\n\t\t\tcreateAtEnd: !!parameters.createAtEnd,\n\t\t\tcreateInactive: !!parameters.inactive,\n\t\t\tparentContext: parameters.parentContext\n\t\t});\n\t\tif (mainListBinding.getUpdateGroupId() === CommonUtils.INLINEEDIT_UPDATEGROUPID) {\n\t\t\tmainListBinding.getModel().submitBatch(CommonUtils.INLINEEDIT_UPDATEGROUPID);\n\t\t}\n\t\treturn createPromise;\n\t}\n\n\t/**\n\t * Creates a new document either via new Action or standard POST create.\n\t * @param mainListBinding OData V4 ListBinding object\n\t * @param parameters Contains the following attributes\n\t * @param parameters.data A map of data that should be sent within the POST\n\t * @param parameters.busyMode Global (default), Local, None\n\t * @param parameters.busyId ID of the local busy indicator\n\t * @param parameters.keepTransientContextOnFailed If set, the context stays in the list if the POST failed and POST will be repeated with the next change\n\t * @param parameters.parentControl\n\t * @param parameters.inactive If set, the context is set as inactive for empty rows\n\t * @param parameters.beforeCreateCallBack Callback to be called before the creation\n\t * @param parameters.skipParameterDialog Skips the action parameter dialog\n\t * @param parameters.createAtEnd Create the context at the end of the list (ignored in case of a hierarchy).\n\t * @param parameters.createInactive Create the context as inactive (ignored in case of a hierarchy).\n\t * @param parameters.parentContext Create the context as a child of this context (only used in case of a hierarchy).\n\t * @param appComponent The app component\n\t * @param messageHandler The message handler extension\n\t * @param resourceModel\n\t * @param fromCopyPaste True if the creation has been triggered by a paste action\n\t * @param defaultValueFunctionData Default values retrieved from the DefaultValuesFunction to be applied to the new document\n\t * @returns Promise resolves with new binding context\n\t */\n\tprivate async performCreation(\n\t\tmainListBinding: ODataListBinding,\n\t\tparameters: CreateParameters,\n\t\tappComponent: AppComponent,\n\t\tmessageHandler: MessageHandler,\n\t\tresourceModel: ResourceModel,\n\t\tfromCopyPaste: boolean,\n\t\tdefaultValueFunctionData?: object | undefined\n\t): Promise<ODataV4Context | undefined> {\n\t\tconst metaModel = mainListBinding.getModel().getMetaModel();\n\t\tconst metaPath = metaModel.getMetaPath(mainListBinding.getHeaderContext()!.getPath());\n\t\tconst createHash = appComponent.getRouterProxy().getHash();\n\t\tconst componentData = appComponent.getComponentData();\n\t\tconst startupParameters = componentData?.startupParameters ?? {};\n\t\tconst newAction = !mainListBinding.isRelative()\n\t\t\t? this._getNewAction(startupParameters, createHash, metaModel, metaPath)\n\t\t\t: undefined;\n\n\t\tif (newAction) {\n\t\t\tconst result = await this.performCreationWithAction(\n\t\t\t\tnewAction,\n\t\t\t\tmainListBinding,\n\t\t\t\tparameters,\n\t\t\t\tappComponent,\n\t\t\t\tresourceModel,\n\t\t\t\tmessageHandler\n\t\t\t);\n\t\t\tif (result.status === \"rejected\") {\n\t\t\t\tthrow result.reason;\n\t\t\t}\n\t\t\treturn result.value.returnedContext;\n\t\t} else {\n\t\t\treturn this.performCreationWithPOST(\n\t\t\t\tmainListBinding,\n\t\t\t\tparameters,\n\t\t\t\tappComponent,\n\t\t\t\tresourceModel,\n\t\t\t\tmessageHandler,\n\t\t\t\tfromCopyPaste,\n\t\t\t\tdefaultValueFunctionData\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * Creates a document with an action.\n\t * @param actionName\n\t * @param mainListBinding\n\t * @param parameters\n\t * @param appComponent\n\t * @param resourceModel\n\t * @param messageHandler\n\t * @returns The created context.\n\t */\n\tprivate async performCreationWithAction(\n\t\tactionName: string,\n\t\tmainListBinding: ODataListBinding,\n\t\tparameters: CreateParameters,\n\t\tappComponent: AppComponent,\n\t\tresourceModel: ResourceModel,\n\t\tmessageHandler: MessageHandler\n\t): Promise<PromiseSettledResult<OperationResult>> {\n\t\tconst headerContextPath = mainListBinding.getHeaderContext()!.getPath();\n\t\tconst metaModel = mainListBinding.getModel().getMetaModel();\n\t\tconst metaPath = metaModel.getMetaPath(headerContextPath);\n\t\tconst messagesPath = ModelHelper.getMessagesPath(metaModel, metaPath);\n\t\tconst bindingParameters: BindContextParameters = { $$patchWithoutSideEffects: true, $$updateGroupId: \"$auto\" };\n\n\t\tconst selectedProperties: string[] = [];\n\t\tif (messagesPath) {\n\t\t\tselectedProperties.push(messagesPath);\n\t\t}\n\t\tif (this.getProgrammingModel(mainListBinding) === ProgrammingModel.Draft) {\n\t\t\tselectedProperties.push(\"IsActiveEntity\", \"HasDraftEntity\", \"HasActiveEntity\"); // Needed for our internal logic (e.g. navigation)\n\t\t}\n\t\tif (selectedProperties.length > 0) {\n\t\t\tbindingParameters[\"$select\"] = selectedProperties.join(\",\");\n\t\t}\n\t\tconst result = await this.callAction(\n\t\t\tactionName,\n\t\t\t{\n\t\t\t\tcontexts: mainListBinding.getHeaderContext(),\n\t\t\t\tshowActionParameterDialog: true,\n\t\t\t\tlabel: this._getSpecificCreateActionDialogLabel(metaModel, metaPath, actionName, resourceModel),\n\t\t\t\tbindingParameters: bindingParameters,\n\t\t\t\tview: parameters.parentControl,\n\t\t\t\tisCreateAction: true,\n\t\t\t\tskipParameterDialog: parameters.skipParameterDialog\n\t\t\t},\n\t\t\tappComponent,\n\t\t\tmessageHandler\n\t\t);\n\t\treturn result[0];\n\t}\n\n\t/**\n\t * Creates a docuemnt with a standard POST request.\n\t * @param mainListBinding\n\t * @param parameters\n\t * @param appComponent\n\t * @param resourceModel\n\t * @param messageHandler\n\t * @param fromCopyPaste\n\t * @param defaultValueFunctionData Default values retrieved from the DefaultValuesFunction to be applied to the new document\n\t * @returns The created context.\n\t */\n\tprivate async performCreationWithPOST(\n\t\tmainListBinding: ODataListBinding,\n\t\tparameters: CreateParameters,\n\t\tappComponent: AppComponent,\n\t\tresourceModel: ResourceModel,\n\t\tmessageHandler: MessageHandler,\n\t\tfromCopyPaste: boolean,\n\t\tdefaultValueFunctionData?: object | undefined\n\t): Promise<ODataV4Context | undefined> {\n\t\ttry {\n\t\t\tlet newDocumentContext: ODataV4Context | undefined;\n\t\t\tconst initialData = parameters.data;\n\t\t\tif (!fromCopyPaste) {\n\t\t\t\tlet defaultData = defaultValueFunctionData;\n\t\t\t\tif (defaultData === undefined) {\n\t\t\t\t\tdefaultData = await this.getDataFromDefaultValueFunction(mainListBinding, appComponent);\n\t\t\t\t}\n\t\t\t\tparameters.data = Object.assign({}, defaultData, parameters.data);\n\t\t\t}\n\t\t\tif (parameters.data) {\n\t\t\t\tdelete parameters.data[\"@odata.context\"];\n\t\t\t}\n\n\t\t\tconst canHaveDialog = parameters.creationMode !== CreationMode.CreationRow && parameters.creationMode !== CreationMode.Inline;\n\t\t\tconst creationDialogFields = canHaveDialog ? this.getCreationParameters(mainListBinding, initialData, appComponent) : [];\n\t\t\tif (parameters.creationMode === CreationMode.CreationDialog) {\n\t\t\t\tparameters.creationDialogFields?.forEach((fieldName) => {\n\t\t\t\t\tif (!creationDialogFields.includes(fieldName)) {\n\t\t\t\t\t\tcreationDialogFields.push(fieldName);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif (creationDialogFields.length === 0) {\n\t\t\t\t\t// In CreationDialog mode, the dialog is mandatory\n\t\t\t\t\tthrow new Error(\"No fields available for the creation dialog\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (creationDialogFields.length > 0) {\n\t\t\t\tnewDocumentContext = await this.createWithDialog(\n\t\t\t\t\tmainListBinding,\n\t\t\t\t\tcreationDialogFields,\n\t\t\t\t\tparameters,\n\t\t\t\t\tappComponent,\n\t\t\t\t\tresourceModel,\n\t\t\t\t\tmessageHandler\n\t\t\t\t);\n\t\t\t\tif (this.isListBindingAnalytical(mainListBinding)) {\n\t\t\t\t\t// Refresh the list binding is needed to allow the new document created via the creationDialog to be visible in the list report.\n\t\t\t\t\t// This wasn't done for the analytical table because the expansion state is lost but we decided to do it as new documents\n\t\t\t\t\t// created via the creation dialog were not displayed in the table.\n\t\t\t\t\tthis.refreshListBinding(mainListBinding, appComponent);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnewDocumentContext = await this.createDocumentContext(mainListBinding, parameters);\n\t\t\t\tif (!parameters.inactive) {\n\t\t\t\t\tawait this.waitForCreateCompletion(newDocumentContext, parameters.keepTransientContextOnFailed === true);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn newDocumentContext;\n\t\t} catch (error: unknown) {\n\t\t\tconst msg = (error as Error).message ?? error;\n\t\t\tLog.error(\"Error while creating the new document\", msg);\n\t\t\tthrow msg;\n\t\t}\n\t}\n\n\t_isDraftEnabled(vContexts: ODataV4Context[]): boolean {\n\t\tconst contextForDraftModel = vContexts[0];\n\t\tconst sProgrammingModel = this.getProgrammingModel(contextForDraftModel);\n\t\treturn sProgrammingModel === ProgrammingModel.Draft;\n\t}\n\n\t/**\n\t * Delete one or multiple document(s).\n\t * @param contexts Contexts Either one context or an array with contexts to be deleted\n\t * @param mParameters Optional, can contain the following attributes:\n\t * @param mParameters.title Title of the object to be deleted\n\t * @param mParameters.description Description of the object to be deleted\n\t * @param mParameters.numberOfSelectedContexts Number of objects selected\n\t * @param mParameters.noDialog To disable the confirmation dialog\n\t * @param appComponent The appComponent\n\t * @param resourceModel The resource model to load text resources\n\t * @param messageHandler The message handler extension\n\t * @returns A promise resolved to true once the documents are deleted, or to false if the deletion was canceled by the user.\n\t */\n\tasync deleteDocument(\n\t\tcontexts: ODataV4Context | ODataV4Context[],\n\t\tmParameters: TransactionDeleteParameters,\n\t\tappComponent: AppComponent,\n\t\tresourceModel: ResourceModel,\n\t\tmessageHandler: MessageHandler\n\t): Promise<boolean> {\n\t\t// delete document lock\n\t\tthis.busyLock(appComponent);\n\n\t\tconst contextsToDelete = Array.isArray(contexts) ? [...contexts] : [contexts];\n\t\tconst firstContext = (mParameters.selectedContexts ?? contextsToDelete)[0];\n\n\t\ttry {\n\t\t\tconst draftEnabled = this._isDraftEnabled(mParameters.selectedContexts || contextsToDelete);\n\t\t\tconst items: Control[] = [];\n\t\t\tlet options: DeleteOption[] = [];\n\t\t\tlet unSavedContext: Context | undefined;\n\t\t\t// items(texts) and options(checkBoxes and single default option) for confirm dialog.\n\t\t\tif (mParameters) {\n\t\t\t\tmParameters = getParameters(mParameters);\n\t\t\t\tmParameters.entitySetName = this.getCollectionNameFromContext(firstContext);\n\t\t\t\tif (!mParameters.numberOfSelectedContexts) {\n\t\t\t\t\t// non-Table\n\t\t\t\t\tif (draftEnabled) {\n\t\t\t\t\t\t// Check if 1 of the drafts is locked by another user\n\t\t\t\t\t\tconst lockedContext = contextsToDelete.find((context) => {\n\t\t\t\t\t\t\tconst contextData = context.getObject();\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\tcontextData.IsActiveEntity === true &&\n\t\t\t\t\t\t\t\tcontextData.HasDraftEntity === true &&\n\t\t\t\t\t\t\t\tcontextData.DraftAdministrativeData &&\n\t\t\t\t\t\t\t\tcontextData.DraftAdministrativeData.InProcessByUser &&\n\t\t\t\t\t\t\t\t!contextData.DraftAdministrativeData.DraftIsCreatedByMe\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t});\n\t\t\t\t\t\tif (lockedContext) {\n\t\t\t\t\t\t\t// Show message box with the name of the locking user and return\n\t\t\t\t\t\t\tawait this.showDeleMessageLockedObjet(lockedContext, resourceModel);\n\t\t\t\t\t\t\treturn false; // No deletion happened\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tunSavedContext = contextsToDelete.find((context) => {\n\t\t\t\t\t\t\t\tconst { IsActiveEntity, HasDraftEntity, DraftAdministrativeData } = context.getObject() || {};\n\t\t\t\t\t\t\t\treturn IsActiveEntity === true && HasDraftEntity === true && !!DraftAdministrativeData?.InProcessByUser;\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tlet nonTableTxt = \"\";\n\t\t\t\t\tif (unSavedContext) {\n\t\t\t\t\t\tconst unSavedContextUser = unSavedContext.getObject().DraftAdministrativeData.InProcessByUser;\n\t\t\t\t\t\tnonTableTxt = resourceModel.getText(\n\t\t\t\t\t\t\t\"C_TRANSACTION_HELPER_CONFIRM_DELETE_WITH_UNSAVED_CHANGES\",\n\t\t\t\t\t\t\t[unSavedContextUser],\n\t\t\t\t\t\t\tmParameters.entitySetName\n\t\t\t\t\t\t);\n\t\t\t\t\t} else if (mParameters.title) {\n\t\t\t\t\t\tif (mParameters.description) {\n\t\t\t\t\t\t\tnonTableTxt = resourceModel.getText(\n\t\t\t\t\t\t\t\t\"C_TRANSACTION_HELPER_CONFIRM_DELETE_WITH_OBJECTINFO\",\n\t\t\t\t\t\t\t\t[mParameters.title, mParameters.description],\n\t\t\t\t\t\t\t\tmParameters.entitySetName\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tnonTableTxt = resourceModel.getText(\n\t\t\t\t\t\t\t\t\"C_TRANSACTION_HELPER_CONFIRM_DELETE_WITH_OBJECTTITLE_ONLY\",\n\t\t\t\t\t\t\t\t[mParameters.title],\n\t\t\t\t\t\t\t\tmParameters.entitySetName\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnonTableTxt = resourceModel.getText(\n\t\t\t\t\t\t\t\"C_TRANSACTION_HELPER_CONFIRM_DELETE_WITH_OBJECTTITLE_SINGULAR\",\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\tmParameters.entitySetName\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\toptions.push({\n\t\t\t\t\t\ttype: DeleteOptionTypes.deletableContexts,\n\t\t\t\t\t\tcontexts: contextsToDelete,\n\t\t\t\t\t\ttext: nonTableTxt,\n\t\t\t\t\t\tselected: true,\n\t\t\t\t\t\tcontrol: DeleteDialogContentControl.TEXT\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\t// Table\n\t\t\t\t\tlet totalDeletable = contextsToDelete.length;\n\n\t\t\t\t\tif (draftEnabled) {\n\t\t\t\t\t\ttotalDeletable +=\n\t\t\t\t\t\t\t(mParameters.draftsWithNonDeletableActive?.length ?? 0) +\n\t\t\t\t\t\t\t(mParameters.draftsWithDeletableActive?.length ?? 0) +\n\t\t\t\t\t\t\t(mParameters.unSavedContexts?.length ?? 0);\n\t\t\t\t\t\tdeleteHelper.updateDraftOptionsForDeletableTexts(\n\t\t\t\t\t\t\tmParameters,\n\t\t\t\t\t\t\tcontextsToDelete,\n\t\t\t\t\t\t\ttotalDeletable,\n\t\t\t\t\t\t\tresourceModel,\n\t\t\t\t\t\t\titems,\n\t\t\t\t\t\t\toptions\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst nonDeletableText = deleteHelper.getNonDeletableText(mParameters, totalDeletable, resourceModel);\n\t\t\t\t\t\tif (nonDeletableText) {\n\t\t\t\t\t\t\titems.push(nonDeletableText);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tconst optionsDeletableTexts = deleteHelper.getOptionsForDeletableTexts(mParameters, contextsToDelete, resourceModel);\n\t\t\t\t\toptions = [...options, ...optionsDeletableTexts];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst commonBinding = firstContext.getBinding() as Binding;\n\t\t\tlet bindingType: \"Tree\" | \"Analytical\" | undefined;\n\t\t\tif (commonBinding.isA<ODataListBinding>(\"sap.ui.model.odata.v4.ODataListBinding\")) {\n\t\t\t\tif (this.isListBindingHierarchical(commonBinding)) {\n\t\t\t\t\tbindingType = \"Tree\";\n\t\t\t\t} else if (this.isListBindingAnalytical(commonBinding)) {\n\t\t\t\t\tbindingType = \"Analytical\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Confirm the deletion if needed\n\t\t\tdeleteHelper.updateContentForDeleteDialog(options, items);\n\t\t\tif (mParameters.noDialog !== true && mParameters.silentMode !== true) {\n\t\t\t\tconst confirmed = await this.showDeleteConfirmationDialog(items, mParameters, resourceModel);\n\t\t\t\tif (!confirmed) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Proceed with the deletion\n\t\t\tmessageHandling.removeBoundTransitionMessages();\n\t\t\tawait deleteHelper.deleteConfirmHandler(\n\t\t\t\toptions,\n\t\t\t\tmParameters,\n\t\t\t\tmessageHandler,\n\t\t\t\tresourceModel,\n\t\t\t\tappComponent,\n\t\t\t\tdraftEnabled,\n\t\t\t\tbindingType\n\t\t\t);\n\n\t\t\treturn true;\n\t\t} finally {\n\t\t\t// delete document unlock\n\t\t\tthis.busyUnlock(appComponent);\n\t\t}\n\t}\n\n\t/**\n\t * Shows an error message when trying to delee a locked object.\n\t * @param lockedContext\n\t * @param resourceModel\n\t * @returns A promise that resolves when the message box is closed\n\t */\n\tprivate async showDeleMessageLockedObjet(lockedContext: ODataV4Context, resourceModel: ResourceModel): Promise<void> {\n\t\tconst lockingUserName = lockedContext.getObject().DraftAdministrativeData.InProcessByUser;\n\t\tconst promiseKeeper = new PromiseKeeper<void>();\n\t\tMessageBox.show(resourceModel.getText(\"C_TRANSACTION_HELPER_CONFIRM_DELETE_WITH_SINGLE_OBJECT_LOCKED\", [lockingUserName]), {\n\t\t\ttitle: resourceModel.getText(\"C_COMMON_DELETE\"),\n\t\t\tonClose: () => {\n\t\t\t\tpromiseKeeper.resolve();\n\t\t\t}\n\t\t});\n\n\t\treturn promiseKeeper.promise;\n\t}\n\n\t/**\n\t * Shows the dialog to confirm the object deletion.\n\t * @param items\n\t * @param parameters\n\t * @param resourceModel\n\t * @returns True if the user accepted the deletion, false otherwise\n\t */\n\tprivate async showDeleteConfirmationDialog(\n\t\titems: Control[],\n\t\tparameters: Partial<{ parentControl: Control | undefined; entitySetName: string }>,\n\t\tresourceModel: ResourceModel\n\t): Promise<boolean> {\n\t\tconst promiseKeeper = new PromiseKeeper<boolean>();\n\t\tconst dialog = this.createDeleteDialog(items, parameters, resourceModel, promiseKeeper);\n\t\tdialog.addStyleClass(\"sapUiContentPadding\");\n\t\tdialog.open();\n\t\treturn promiseKeeper.promise;\n\t}\n\n\t/**\n\t * Create the confirmation dialog fo the deletion.\n\t * @param items An array of controls used for the dialog content\n\t * @param parameters Contains the following attributes:\n\t * @param parameters.parentControl Parent control of the delete button if any\n\t * @param parameters.entitySetName Name of the current entitySet\n\t * @param resourceModel The resource model to load text resources\n\t * @param promiseKeeper\n\t * @returns The created delete confirmation dialog\n\t */\n\tcreateDeleteDialog(\n\t\titems: Control[],\n\t\tparameters: Partial<{ parentControl: Control | undefined; entitySetName: string }>,\n\t\tresourceModel: ResourceModel,\n\t\tpromiseKeeper: PromiseKeeper<boolean>\n\t): Dialog {\n\t\tlet dialogConfirmed = false;\n\t\tconst vBox = new VBox({ items: items });\n\t\tconst resourceBundleCore = Library.getResourceBundleFor(\"sap.fe.core\")!;\n\t\tlet title: string | undefined;\n\t\tif (parameters.parentControl?.isA(\"sap.ui.mdc.Table\")) {\n\t\t\ttitle = resourceModel.getText(\"M_COMMON_TABLE_DELETE\", undefined, parameters.entitySetName);\n\t\t} else {\n\t\t\ttitle = resourceBundleCore.getText(\"C_COMMON_DELETE\");\n\t\t}\n\t\tconst dialog = new Dialog({\n\t\t\ttitle: title,\n\t\t\tstate: \"Warning\",\n\t\t\tcontent: [vBox],\n\t\t\tariaLabelledBy: items,\n\t\t\tbeginButton: new Button({\n\t\t\t\ttext: title,\n\t\t\t\ttype: \"Emphasized\",\n\t\t\t\tpress: function (): void {\n\t\t\t\t\tdialogConfirmed = true;\n\t\t\t\t\tdialog.close();\n\t\t\t\t}\n\t\t\t}),\n\t\t\tendButton: new Button({\n\t\t\t\ttext: resourceModel.getText(\"C_COMMON_DIALOG_CANCEL\"),\n\t\t\t\tpress: function (): void {\n\t\t\t\t\tdialog.close();\n\t\t\t\t}\n\t\t\t}),\n\t\t\tafterClose: function (): void {\n\t\t\t\tdialog.destroy();\n\t\t\t\t// if dialog is closed unconfirmed (e.g. via \"Cancel\" or Escape button), ensure to reject promise\n\t\t\t\tpromiseKeeper.resolve(dialogConfirmed);\n\t\t\t}\n\t\t});\n\t\treturn dialog;\n\t}\n\n\t/**\n\t * Edits a document.\n\t * @param oContext Context of the active document\n\t * @param oView Current view\n\t * @param appComponent The appComponent\n\t * @param messageHandler The message handler extension\n\t * @param groupId The batch groupId for post call of edit action\n\t * @param transactionDetails Optional object to return additional details about how the transaction was executed\n\t * @returns Promise resolves with the new draft context in case of draft programming model\n\t * @final\n\t */\n\tasync editDocument(\n\t\toContext: ODataV4Context,\n\t\toView: FEView,\n\t\tappComponent: AppComponent,\n\t\tmessageHandler: MessageHandler,\n\t\tgroupId: string,\n\t\ttransactionDetails?: EditTransactionExecutionDetails\n\t): Promise<ODataV4Context | undefined> {\n\t\tconst sProgrammingModel = this.getProgrammingModel(oContext);\n\t\tif (!oContext) {\n\t\t\tthrow new Error(\"Binding context to active document is required\");\n\t\t}\n\t\tif (sProgrammingModel !== ProgrammingModel.Draft && sProgrammingModel !== ProgrammingModel.Sticky) {\n\t\t\tthrow new Error(\"Edit is only allowed for draft or sticky session supported services\");\n\t\t}\n\t\tthis.busyLock(appComponent);\n\t\t// before triggering the edit action we'll have to remove all bound transition messages\n\t\tmessageHandler.removeTransitionMessages();\n\t\tconst messageHandlingKey = messageHandler.registerToHoldMessages();\n\n\t\ttry {\n\t\t\tconst oNewContext =\n\t\t\t\tsProgrammingModel === ProgrammingModel.Draft\n\t\t\t\t\t? await draft.createDraftFromActiveDocument(\n\t\t\t\t\t\t\toContext,\n\t\t\t\t\t\t\tappComponent,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tbPreserveChanges: true,\n\t\t\t\t\t\t\t\toView: oView\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tgroupId,\n\t\t\t\t\t\t\tmessageHandler,\n\t\t\t\t\t\t\ttransactionDetails\n\t\t\t\t\t  )\n\t\t\t\t\t: await sticky.editDocumentInStickySession(oContext, appComponent, messageHandler);\n\n\t\t\tawait messageHandler.showMessageDialog({ unHoldKey: messageHandlingKey });\n\t\t\treturn oNewContext;\n\t\t} catch (err: unknown) {\n\t\t\tawait messageHandler.showMessages({ concurrentEditFlag: true, unHoldKey: messageHandlingKey });\n\t\t\tthrow err;\n\t\t} finally {\n\t\t\tthis.busyUnlock(appComponent);\n\t\t}\n\t}\n\n\tprepareSiblingContext(context: ODataV4Context): ODataV4Context {\n\t\tconst model = context.getModel();\n\t\tconst metaModel = model.getMetaModel();\n\t\tconst contextPath = context.getPath();\n\t\tconst semanticKeys = SemanticKeyHelper.getSemanticKeys(metaModel, metaModel.getMetaContext(contextPath).getObject(\"@sapui.name\"));\n\t\tif (semanticKeys && semanticKeys.length) {\n\t\t\tconst semanticKeyPaths = semanticKeys.map((key) => key.$PropertyPath);\n\t\t\treturn model.bindContext(`${contextPath}/SiblingEntity`, undefined, { $select: semanticKeyPaths }).getBoundContext();\n\t\t}\n\t\tconst entityPath = metaModel.getMetaPath(contextPath);\n\t\tconst technicalKeys = metaModel.getObject(`${entityPath}/SiblingEntity/`)[\"$Key\"];\n\t\treturn model.bindContext(`${contextPath}/SiblingEntity`, undefined, { $select: technicalKeys }).getBoundContext();\n\t}\n\t/**\n\t * Cancel 'edit' mode of a document.\n\t * @param oContext Context of the document to be canceled or deleted\n\t * @param [mInParameters] Optional, can contain the following attributes:\n\t * @param mInParameters.cancelButton Cancel Button of the discard popover (mandatory for now)\n\t * @param mInParameters.skipDiscardPopover Optional, supresses the discard popover incase of draft applications while navigating out of OP\n\t * @param appComponent The appComponent\n\t * @param resourceModel The model to load text resources\n\t * @param messageHandler The message handler extension\n\t * @param isNewObject True if we're trying to cancel a newly created object\n\t * @param isObjectModified True if the object has been modified by the user\n\t * @returns Promise resolves with ???\n\t * @final\n\t */\n\tasync cancelDocument(\n\t\toContext: ODataV4Context,\n\t\tmInParameters: CancelParameters | undefined,\n\t\tappComponent: AppComponent,\n\t\tresourceModel: ResourceModel,\n\t\tmessageHandler: MessageHandler,\n\t\tisNewObject: boolean,\n\t\tisObjectModified: boolean\n\t): Promise<{\n\t\tactiveContext: ODataV4Context | undefined;\n\t\tactiveContextData: Record<string, unknown> | undefined;\n\t}> {\n\t\t//context must always be passed - mandatory parameter\n\t\tif (!oContext) {\n\t\t\tthrow new Error(\"No context exists. Pass a meaningful context\");\n\t\t}\n\t\tconst mParameters = getParameters(mInParameters);\n\t\tconst oModel = oContext.getModel();\n\t\tconst sProgrammingModel = this.getProgrammingModel(oContext);\n\n\t\tif (sProgrammingModel !== ProgrammingModel.Draft && sProgrammingModel !== ProgrammingModel.Sticky) {\n\t\t\tthrow new Error(\"Cancel document only allowed for draft or sticky session supported services\");\n\t\t}\n\t\tthis.busyLock(appComponent);\n\t\ttry {\n\t\t\tlet returnedValue: ODataV4Context | undefined;\n\t\t\tlet siblingContext: ODataV4Context | undefined,\n\t\t\t\tsiblingContextCanonicalPath: string | undefined,\n\t\t\t\tdraftAdminData: { DraftAdministrativeData: { CreationDateTime: Date; LastChangeDateTime: Date } },\n\t\t\t\tsiblingData: Record<string, unknown> | undefined;\n\n\t\t\tif (sProgrammingModel === ProgrammingModel.Draft && !isObjectModified) {\n\t\t\t\tsiblingContext = this.prepareSiblingContext(oContext);\n\t\t\t\tconst draftDataContext = oModel\n\t\t\t\t\t.bindContext(oContext.getPath(), undefined, {\n\t\t\t\t\t\t$select: [\"DraftAdministrativeData/CreationDateTime\", \"DraftAdministrativeData/LastChangeDateTime\"]\n\t\t\t\t\t})\n\t\t\t\t\t.getBoundContext();\n\t\t\t\t[siblingContextCanonicalPath, draftAdminData, siblingData] = await Promise.all([\n\t\t\t\t\tisNewObject ? undefined : siblingContext?.requestCanonicalPath(),\n\t\t\t\t\tdraftDataContext.requestObject(),\n\t\t\t\t\tisNewObject ? undefined : siblingContext?.requestObject()\n\t\t\t\t]);\n\t\t\t\tif (draftAdminData) {\n\t\t\t\t\tisObjectModified =\n\t\t\t\t\t\tdraftAdminData.DraftAdministrativeData?.CreationDateTime !==\n\t\t\t\t\t\tdraftAdminData.DraftAdministrativeData?.LastChangeDateTime;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!mParameters.skipDiscardPopover) {\n\t\t\t\tawait this._confirmDiscard(mParameters.cancelButton, isObjectModified, resourceModel);\n\t\t\t}\n\t\t\tif (oContext.isKeepAlive()) {\n\t\t\t\t// if the context is kept alive we set it again to detach the onBeforeDestroy callback and handle navigation here\n\t\t\t\t// the context needs to still be kept alive to be able to reset changes properly\n\t\t\t\toContext.setKeepAlive(true, undefined);\n\t\t\t}\n\t\t\tif (mParameters.beforeCancelCallBack) {\n\t\t\t\tawait mParameters.beforeCancelCallBack({ context: oContext });\n\t\t\t}\n\t\t\tif (sProgrammingModel === ProgrammingModel.Draft) {\n\t\t\t\tif (isNewObject) {\n\t\t\t\t\tif (oContext.hasPendingChanges()) {\n\t\t\t\t\t\toContext.getBinding().resetChanges();\n\t\t\t\t\t}\n\t\t\t\t\tawait draft.deleteDraft(oContext, messageHandler, appComponent);\n\t\t\t\t} else {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (oContext.hasPendingChanges()) {\n\t\t\t\t\t\t\toContext.getBinding().resetChanges();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsiblingContext = siblingContext ?? this.prepareSiblingContext(oContext);\n\t\t\t\t\t\t[siblingContextCanonicalPath, siblingData] = await Promise.all([\n\t\t\t\t\t\t\tsiblingContext?.requestCanonicalPath(),\n\t\t\t\t\t\t\tsiblingContext?.requestObject()\n\t\t\t\t\t\t]);\n\t\t\t\t\t\treturnedValue = siblingContextCanonicalPath\n\t\t\t\t\t\t\t? oModel.bindContext(siblingContextCanonicalPath).getBoundContext()\n\t\t\t\t\t\t\t: undefined;\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tawait draft.deleteDraft(oContext, messageHandler, appComponent);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst discardedContext = await sticky.discardDocument(oContext);\n\t\t\t\tif (discardedContext) {\n\t\t\t\t\tif (discardedContext.hasPendingChanges()) {\n\t\t\t\t\t\tdiscardedContext.getBinding().resetChanges();\n\t\t\t\t\t}\n\t\t\t\t\tif (!isNewObject) {\n\t\t\t\t\t\tdiscardedContext.refresh();\n\t\t\t\t\t\treturnedValue = discardedContext;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// remove existing bound transition messages\n\t\t\tmessageHandler.removeTransitionMessages();\n\t\t\t// show unbound messages\n\t\t\tawait messageHandler.showMessages();\n\n\t\t\treturn {\n\t\t\t\tactiveContext: returnedValue,\n\t\t\t\tactiveContextData: siblingData\n\t\t\t};\n\t\t} catch (err: unknown) {\n\t\t\tawait messageHandler.showMessages();\n\t\t\tthrow err;\n\t\t} finally {\n\t\t\tthis.busyUnlock(appComponent);\n\t\t}\n\t}\n\n\t/**\n\t * Saves the document.\n\t * @param context Context of the document to be saved\n\t * @param appComponent The appComponent\n\t * @param resourceModel The model to load text resources\n\t * @param executeSideEffectsOnError True if we should execute side effects in case of an error\n\t * @param bindingsForSideEffects The listBindings to be used for executing side effects on error\n\t * @param messageHandler The message handler extension\n\t * @param isNewObject True if we're trying to cancel a newly created object\n\t * @param skipConfirmationMsg\n\t * @returns Promise resolves with ???\n\t * @final\n\t */\n\tasync saveDocument(\n\t\tcontext: ODataV4Context,\n\t\tappComponent: AppComponent,\n\t\tresourceModel: ResourceModel,\n\t\texecuteSideEffectsOnError: boolean,\n\t\tbindingsForSideEffects: ODataListBinding[],\n\t\tmessageHandler: MessageHandler,\n\t\tisNewObject: boolean,\n\t\tskipConfirmationMsg = false,\n\t\tisStandardSave?: boolean\n\t): Promise<ODataV4Context> {\n\t\tconst sProgrammingModel = this.getProgrammingModel(context);\n\t\tif (sProgrammingModel !== ProgrammingModel.Sticky && sProgrammingModel !== ProgrammingModel.Draft) {\n\t\t\tthrow new Error(\"Save is only allowed for draft or sticky session supported services\");\n\t\t}\n\n\t\ttry {\n\t\t\tthis.busyLock(appComponent);\n\t\t\tconst entitySetName = this.getCollectionNameFromContext(context);\n\t\t\tconst oActiveDocument =\n\t\t\t\tsProgrammingModel === ProgrammingModel.Draft\n\t\t\t\t\t? await draft.activateDocument(context, appComponent, messageHandler, { resourceModel: resourceModel }, isStandardSave)\n\t\t\t\t\t: await sticky.activateDocument(\n\t\t\t\t\t\t\tcontext,\n\t\t\t\t\t\t\tappComponent,\n\t\t\t\t\t\t\tmessageHandler,\n\t\t\t\t\t\t\t{ resourceModel: resourceModel },\n\t\t\t\t\t\t\tisStandardSave\n\t\t\t\t\t  );\n\n\t\t\tconst messagesReceived = messageHandling.getMessages().concat(messageHandling.getMessages(true, true)); // get unbound and bound messages present in the model\n\t\t\tif (!skipConfirmationMsg && !(messagesReceived.length === 1 && messagesReceived[0].getType() === MessageType.Success)) {\n\t\t\t\t// show our object creation toast only if it is not coming from backend\n\t\t\t\tMessageToast.show(\n\t\t\t\t\tisNewObject\n\t\t\t\t\t\t? resourceModel.getText(\"C_TRANSACTION_HELPER_OBJECT_CREATED\", undefined, entitySetName)\n\t\t\t\t\t\t: resourceModel.getText(\"C_TRANSACTION_HELPER_OBJECT_SAVED\", undefined, entitySetName)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn oActiveDocument;\n\t\t} catch (err: unknown) {\n\t\t\tif (executeSideEffectsOnError && bindingsForSideEffects?.length > 0) {\n\t\t\t\t/* The sideEffects are executed only for table items in transient state */\n\t\t\t\tbindingsForSideEffects.forEach((listBinding) => {\n\t\t\t\t\tif (!CommonUtils.hasTransientContext(listBinding)) {\n\t\t\t\t\t\tappComponent.getSideEffectsService().requestSideEffectsForNavigationProperty(listBinding.getPath(), context);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\tawait messageHandler.showMessages();\n\t\t\tthrow err;\n\t\t} finally {\n\t\t\tthis.busyUnlock(appComponent);\n\t\t}\n\t}\n\n\t/**\n\t * Calls a bound or unbound action.\n\t * @param sActionName The name of the action to be called\n\t * @param [mParameters] Contains the following attributes:\n\t * @param [mParameters.parameterValues] A map of action parameter names and provided values\n\t * @param [mParameters.skipParameterDialog] Skips the parameter dialog if values are provided for all of them\n\t * @param [mParameters.contexts] Mandatory for a bound action: Either one context or an array with contexts for which the action is to be called\n\t * @param [mParameters.model] Mandatory for an unbound action: An instance of an OData V4 model\n\t * @param [mParameters.invocationGrouping] Mode how actions are to be called: 'ChangeSet' to put all action calls into one changeset, 'Isolated' to put them into separate changesets\n\t * @param [mParameters.label] A human-readable label for the action\n\t * @param mParameters.bindingParameters\n\t * @param mParameters.showActionParameterDialog\n\t * @param mParameters.entitySetName\n\t * @param mParameters.view\n\t * @param mParameters.controlId\n\t * @param mParameters.isCreateAction\n\t * @param mParameters.operationAvailableMap\n\t * @param mParameters.internalModelContext\n\t * @param mParameters.groupId\n\t * @param mParameters.defaultValuesExtensionFunction\n\t * @param mParameters.ignoreETag If specified, the action is called without ETag handling\n\t * @param appComponent The appComponent\n\t * @param messageHandler The message handler extension\n\t * @returns Promise resolves with an array of response objects (TODO: to be changed)\n\t * @final\n\t */\n\tasync callAction(\n\t\tsActionName: string,\n\t\tmParameters: {\n\t\t\tbindingParameters?: BindContextParameters;\n\t\t\tparameterValues?: Record<string, unknown>[];\n\t\t\tskipParameterDialog?: boolean;\n\t\t\tshowActionParameterDialog?: boolean;\n\t\t\tlabel?: string;\n\t\t\tinvocationGrouping?: string;\n\t\t\tentitySetName?: string;\n\t\t\tcontexts?: ODataV4Context | ODataV4Context[] | null;\n\t\t\tmodel?: ODataModel;\n\t\t\tview: View;\n\t\t\tcontrolId?: string;\n\t\t\tisCreateAction?: boolean;\n\t\t\toperationAvailableMap?: string;\n\t\t\tinternalModelContext?: InternalModelContext | null;\n\t\t\tgroupId?: string;\n\t\t\tdefaultValuesExtensionFunction?: string;\n\t\t\tignoreETag?: boolean;\n\t\t},\n\t\tappComponent: AppComponent,\n\t\tmessageHandler: MessageHandler\n\t): Promise<PromiseSettledResult<OperationResult>[]> {\n\t\tmParameters = getParameters(mParameters);\n\t\tlet contextToProcess;\n\t\tlet oModel: ODataModel | undefined;\n\t\tif (!sActionName) {\n\t\t\tthrow new Error(\"Provide name of action to be executed\");\n\t\t}\n\t\t// action imports are not directly obtained from the metaModel by it is present inside the entityContainer\n\t\t// and the acions it refers to present outside the entitycontainer, hence to obtain kind of the action\n\t\t// split() on its name was required\n\t\tconst sName = sActionName.split(\"/\")[1];\n\n\t\tcontextToProcess = sName ? undefined : mParameters.contexts;\n\t\t//checking whether the context is an array with more than 0 length or not an array(create action)\n\t\tif (contextToProcess && ((Array.isArray(contextToProcess) && contextToProcess.length) || !Array.isArray(contextToProcess))) {\n\t\t\tcontextToProcess = Array.isArray(contextToProcess) ? contextToProcess[0] : contextToProcess;\n\t\t\toModel = contextToProcess.getModel();\n\t\t}\n\t\tif (mParameters.model) {\n\t\t\toModel = mParameters.model;\n\t\t}\n\t\tif (!oModel) {\n\t\t\tthrow new Error(\"Pass a context for a bound action or pass the model for an unbound action\");\n\t\t}\n\t\ttry {\n\t\t\tconst control = (mParameters.controlId ? mParameters.view.byId(mParameters.controlId) : mParameters.view) as\n\t\t\t\t| Control\n\t\t\t\t| undefined;\n\t\t\tlet oResult: PromiseSettledResult<OperationResult>[];\n\t\t\tif (contextToProcess && mParameters.contexts) {\n\t\t\t\tconst contexts = Array.isArray(mParameters.contexts) ? mParameters.contexts : [mParameters.contexts]; // Ensure that contexts is an array (for static actions it's not an we need to fix it)\n\t\t\t\tconst convertedAction = Operation.getOperationFromName(sActionName, oModel, contexts[0]);\n\t\t\t\tif (!isAction(convertedAction)) {\n\t\t\t\t\tthrow new Error(\"Unknown bound action\");\n\t\t\t\t}\n\t\t\t\toResult = await new Operation(appComponent, oModel, convertedAction, {\n\t\t\t\t\tparameterValues: mParameters.parameterValues as Record<string, string | boolean | number | MultiValueFieldItem[]>[],\n\t\t\t\t\tcontexts,\n\t\t\t\t\tinvocationGrouping: mParameters.invocationGrouping,\n\t\t\t\t\tlabel: mParameters.label,\n\t\t\t\t\tskipParameterDialog: mParameters.skipParameterDialog,\n\t\t\t\t\tbindingParameters: mParameters.bindingParameters,\n\t\t\t\t\tentitySetName: mParameters.entitySetName,\n\t\t\t\t\toDataProperties: {\n\t\t\t\t\t\tghostContextBindingProtection: true,\n\t\t\t\t\t\tenhance$select: true,\n\t\t\t\t\t\tgroupId: mParameters.groupId,\n\t\t\t\t\t\tignoreETag: mParameters.ignoreETag\n\t\t\t\t\t},\n\t\t\t\t\toDataEvents: {\n\t\t\t\t\t\tonODataSubmit: (): void => {\n\t\t\t\t\t\t\tmessageHandler?.removeTransitionMessages();\n\t\t\t\t\t\t\tthis.busyLock(appComponent);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tonODataResponse: (): void => {\n\t\t\t\t\t\t\tthis.busyUnlock(appComponent);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tonRequestSideEffects: (): void => {\n\t\t\t\t\t\t\tthis.handleActionEnablementOnOperation({\n\t\t\t\t\t\t\t\tinternalModelContext: mParameters.internalModelContext,\n\t\t\t\t\t\t\t\toperationAvailableMap: mParameters.operationAvailableMap,\n\t\t\t\t\t\t\t\tcontrol: control,\n\t\t\t\t\t\t\t\tcontexts,\n\t\t\t\t\t\t\t\tconvertedAction\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tview: mParameters.view as FEView,\n\t\t\t\t\tisCreateAction: mParameters.isCreateAction,\n\t\t\t\t\tmessageHandler: messageHandler,\n\t\t\t\t\tdefaultValuesExtensionFunction: mParameters.defaultValuesExtensionFunction\n\t\t\t\t}).execute();\n\t\t\t} else {\n\t\t\t\tconst convertedActionImport = Operation.getOperationFromName(sActionName, oModel);\n\t\t\t\tif (!convertedActionImport || isAction(convertedActionImport)) {\n\t\t\t\t\tthrow new Error(\"Unknown action import\");\n\t\t\t\t}\n\t\t\t\toResult = await new Operation(appComponent, oModel, convertedActionImport.action, {\n\t\t\t\t\tparameterValues: mParameters.parameterValues as Record<string, string | boolean | number | MultiValueFieldItem[]>[],\n\t\t\t\t\tlabel: mParameters.label,\n\t\t\t\t\tskipParameterDialog: mParameters.skipParameterDialog,\n\t\t\t\t\tbindingParameters: mParameters.bindingParameters,\n\t\t\t\t\tentitySetName: mParameters.entitySetName,\n\t\t\t\t\toDataEvents: {\n\t\t\t\t\t\tonODataSubmit: (): void => {\n\t\t\t\t\t\t\tthis.busyLock(appComponent);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tonODataResponse: (): void => {\n\t\t\t\t\t\t\tthis.busyUnlock(appComponent);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\toDataProperties: {\n\t\t\t\t\t\tignoreETag: mParameters.ignoreETag\n\t\t\t\t\t},\n\t\t\t\t\tmessageHandler: messageHandler,\n\t\t\t\t\tview: mParameters.view as FEView\n\t\t\t\t}).execute();\n\t\t\t}\n\n\t\t\tif (messageHandler) {\n\t\t\t\tthis._handleActionResponse(mParameters, sActionName);\n\t\t\t}\n\t\t\treturn oResult;\n\t\t} catch (err: unknown) {\n\t\t\tif (messageHandler) {\n\t\t\t\tthis._handleActionResponse(mParameters, sActionName);\n\t\t\t}\n\t\t\tthrow err;\n\t\t}\n\t}\n\n\t/**\n\t * Gets the collection name from the context.\n\t * @param context The context\n\t * @returns The collection name\n\t */\n\tgetCollectionNameFromContext(context: ODataV4Context): string | undefined {\n\t\tconst metaContext = context.getModel().getMetaModel().getMetaContext(context.getPath());\n\t\treturn (MetaModelConverter.getInvolvedDataModelObjects(metaContext).targetObject as EntitySet | NavigationProperty | undefined)\n\t\t\t?.name;\n\t}\n\n\thandleActionEnablementOnOperation(parameters: {\n\t\tinternalModelContext?: InternalModelContext | null;\n\t\toperationAvailableMap?: string;\n\t\tcontrol?: Control;\n\t\tcontexts?: ODataV4Context[];\n\t\tconvertedAction: EdmAction;\n\t}): void {\n\t\tif (parameters.internalModelContext && parameters.operationAvailableMap) {\n\t\t\tlet selectedContexts: ODataV4Context[] = [];\n\t\t\t//check for skipping static actions\n\t\t\tif (!actionHelper.isStaticAction(parameters.convertedAction)) {\n\t\t\t\tselectedContexts = parameters.internalModelContext.getProperty(\"selectedContexts\") || [];\n\t\t\t\tActionRuntime.setActionEnablement(\n\t\t\t\t\tparameters.internalModelContext,\n\t\t\t\t\tJSON.parse(parameters.operationAvailableMap),\n\t\t\t\t\tselectedContexts,\n\t\t\t\t\t\"table\"\n\t\t\t\t);\n\t\t\t} else if (parameters.control) {\n\t\t\t\tif (parameters.control.isA<Table>(\"sap.ui.mdc.Table\")) {\n\t\t\t\t\tselectedContexts = parameters.control.getSelectedContexts() as ODataV4Context[];\n\t\t\t\t\tActionRuntime.setActionEnablement(\n\t\t\t\t\t\tparameters.internalModelContext,\n\t\t\t\t\t\tJSON.parse(parameters.operationAvailableMap),\n\t\t\t\t\t\tselectedContexts,\n\t\t\t\t\t\t\"table\"\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t\t//update delete button\n\t\t\tdeleteHelper.updateDeleteInfoForSelectedContexts(parameters.internalModelContext, selectedContexts);\n\t\t}\n\t}\n\n\t_handleActionResponse(\n\t\tmParameters: {\n\t\t\tlabel?: string;\n\t\t\tinternalModelContext?: InternalModelContext | null;\n\t\t},\n\t\tsActionName: string\n\t): void {\n\t\tconst aTransientMessages = messageHandling.getMessages(true, true);\n\t\tif (aTransientMessages.length > 0 && mParameters && mParameters.internalModelContext) {\n\t\t\tmParameters.internalModelContext.setProperty(\"sActionName\", mParameters.label ? mParameters.label : sActionName);\n\t\t}\n\t}\n\n\t/**\n\t * Handles validation errors for the 'Discard' action.\n\t * @final\n\t */\n\thandleValidationError(): void {\n\t\tconst errorToRemove = Messaging.getMessageModel()\n\t\t\t.getData()\n\t\t\t.filter((error: Message) => error.validation); // only needs to handle validation messages, technical and persistent errors needs not to be checked here.\n\t\tMessaging.removeMessages(errorToRemove);\n\t}\n\n\t/**\n\t * Creates a new Popover. Factory method to make unit tests easier.\n\t * @param settings Initial parameters for the popover\n\t * @returns A new Popover\n\t */\n\t_createPopover(settings?: $PopoverSettings): Popover {\n\t\treturn new Popover(settings);\n\t}\n\n\t/**\n\t * Shows a popover to confirm discard if needed.\n\t * @param cancelButton The control which will open the popover\n\t * @param isModified True if the object has been modified and a confirmation popover must be shown\n\t * @param resourceModel The model to load text resources\n\t * @returns Promise resolves if user confirms discard, rejects if otherwise, rejects if no control passed to open popover\n\t * @final\n\t */\n\tasync _confirmDiscard(cancelButton: Button, isModified: boolean, resourceModel: ResourceModel): Promise<void> {\n\t\t// If the data isn't modified, do not show any confirmation popover\n\t\tif (!isModified) {\n\t\t\tthis.handleValidationError();\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tcancelButton.setEnabled(false);\n\t\treturn new Promise<void>((resolve, reject) => {\n\t\t\tconst confirmationPopover = this._createPopover({\n\t\t\t\tshowHeader: false,\n\t\t\t\tplacement: \"Top\"\n\t\t\t});\n\t\t\tconfirmationPopover.addStyleClass(\"sapUiContentPadding\");\n\n\t\t\t// Create the content of the popover\n\t\t\tconst title = new Text({\n\t\t\t\tid: \"DraftDiscardMessage\",\n\t\t\t\ttext: resourceModel.getText(\"C_TRANSACTION_HELPER_DRAFT_DISCARD_MESSAGE\")\n\t\t\t});\n\t\t\tconst confirmButton = new Button({\n\t\t\t\ttext: resourceModel.getText(\"C_TRANSACTION_HELPER_DRAFT_DISCARD_BUTTON\"),\n\t\t\t\twidth: \"100%\",\n\t\t\t\tpress: (): void => {\n\t\t\t\t\tthis.handleValidationError();\n\t\t\t\t\tconfirmationPopover.data(\"continueDiscard\", true);\n\t\t\t\t\tconfirmationPopover.close();\n\t\t\t\t}\n\t\t\t});\n\t\t\tconfirmButton.addAriaLabelledBy(title);\n\t\t\tconfirmationPopover.addContent(new VBox({ items: [title, confirmButton] }));\n\n\t\t\t// Attach handler\n\t\t\tconfirmationPopover.attachBeforeOpen(() => {\n\t\t\t\tconfirmationPopover.setInitialFocus(confirmButton);\n\t\t\t});\n\t\t\tconfirmationPopover.attachAfterClose(() => {\n\t\t\t\tconfirmationPopover.destroyContent();\n\t\t\t\tcancelButton.setEnabled(true);\n\t\t\t\tif (confirmationPopover.data(\"continueDiscard\")) {\n\t\t\t\t\tresolve();\n\t\t\t\t} else {\n\t\t\t\t\treject(FELibrary.Constants.CancelDiscardDraft);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconfirmationPopover.openBy(cancelButton, false);\n\t\t});\n\t}\n\n\t/**\n\t * Reloads data for an ODataListBinding.\n\t * @param listBinding The listbinding to refresh\n\t * @param appComponent\n\t * @returns The corresponding promise\n\t */\n\tasync refreshListBinding(listBinding: ODataListBinding, appComponent: AppComponent): Promise<void> {\n\t\ttry {\n\t\t\tif (listBinding.isRoot()) {\n\t\t\t\tif (this.isListBindingHierarchical(listBinding)) {\n\t\t\t\t\t// We use a side-effect refresh for a TreeTable, to preserve expansion states\n\t\t\t\t\tawait appComponent\n\t\t\t\t\t\t.getSideEffectsService()\n\t\t\t\t\t\t.requestSideEffects([{ $NavigationPropertyPath: \"\" }], listBinding.getHeaderContext()!);\n\t\t\t\t} else {\n\t\t\t\t\tawait listBinding.requestRefresh();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tawait appComponent\n\t\t\t\t\t.getSideEffectsService()\n\t\t\t\t\t.requestSideEffects([{ $NavigationPropertyPath: listBinding.getPath() }], listBinding.getContext());\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tLog.error(`Error while refreshing list binding ${listBinding.getPath()}`, error as string);\n\t\t}\n\t}\n\n\tasync createWithDialog(\n\t\tlistBinding: ODataListBinding,\n\t\tfieldNames: string[],\n\t\tparameters: {\n\t\t\tparentControl?: Control;\n\t\t\tdata?: Record<string, unknown>;\n\t\t\tbIsCreateDialog?: boolean;\n\t\t\tbeforeCreateCallBack?: Function;\n\t\t\tafterCreateCallBack?: (newDocumentContext: ODataV4Context) => Promise<void>;\n\t\t\tcreateAtEnd?: boolean;\n\t\t\tinactive?: boolean;\n\t\t\tparentContext?: ODataV4Context;\n\t\t\tkeepTransientContextOnFailed?: boolean;\n\t\t\tcreateAction?: boolean;\n\t\t\tcreationMode?: string;\n\t\t},\n\t\tappComponent: AppComponent,\n\t\tresourceModel: ResourceModel,\n\t\tmessageHandler: MessageHandler\n\t): Promise<ODataV4Context> {\n\t\tconst model = listBinding.getModel() as ODataModel;\n\t\tconst metaModel = model.getMetaModel();\n\t\tconst listMetaPath = metaModel.getMetaPath(listBinding.getResolvedPath()!);\n\n\t\t// Create a fake (transient) listBinding and context, just for the binding context of the dialog\n\t\tconst transientListBinding = model.bindList(listBinding.getPath(), listBinding.getContext(), undefined, undefined, {\n\t\t\t$$updateGroupId: \"submitLater\"\n\t\t});\n\t\ttransientListBinding.refreshInternal = function (): void {\n\t\t\t/* */\n\t\t};\n\t\tconst transientContext = transientListBinding.create(parameters.data, true);\n\t\tconst fieldMetaContexts = fieldNames.map((name) => {\n\t\t\treturn metaModel.createBindingContext(`${listMetaPath}/${name}`) as Context;\n\t\t});\n\n\t\tconst createDialog = getCoreUIFactory().newCreateDialog(\n\t\t\ttransientContext,\n\t\t\tfieldNames,\n\t\t\tappComponent,\n\t\t\tparameters.creationMode === CreationMode.CreationDialog ? \"Standalone\" : \"WithNavigation\",\n\t\t\tparameters.parentControl\n\t\t);\n\n\t\ttry {\n\t\t\tawait CommonUtils.setUserDefaults(\n\t\t\t\tappComponent,\n\t\t\t\tfieldMetaContexts,\n\t\t\t\ttransientContext,\n\t\t\t\tfalse,\n\t\t\t\tparameters.createAction,\n\t\t\t\tparameters.data\n\t\t\t);\n\t\t\tcreateDialog.openDialog();\n\t\t} catch (e) {\n\t\t\tawait messageHandler.showMessages();\n\t\t\tthrow e;\n\t\t}\n\n\t\tconst resultPromiseKeeper = new PromiseKeeper<ODataV4Context>();\n\n\t\tconst onExitDialog = async (event: ExitDialogEvent): Promise<void> => {\n\t\t\tif (!event.getParameter(\"accept\")) {\n\t\t\t\t// User has cancelled creation: destroy the transient list binding and close the dialog\n\t\t\t\ttransientListBinding.destroy();\n\t\t\t\tcreateDialog.closeDialog();\n\t\t\t\tresultPromiseKeeper.reject(FELibrary.Constants.CancelActionDialog);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcreateDialog.setBusy(true);\n\t\t\tparameters.bIsCreateDialog = true;\n\t\t\ttry {\n\t\t\t\tconst transientData = transientContext.getObject();\n\t\t\t\tlet createData: Record<string, unknown> = {};\n\t\t\t\tObject.keys(transientData).forEach((propertyPath) => {\n\t\t\t\t\tconst oProperty = metaModel.getObject(`${listMetaPath}/${propertyPath}`);\n\t\t\t\t\t// Ensure navigation properties are not part of the payload, as deep create not supported\n\t\t\t\t\t// And remove any property starting by @$ui5 as they are not property created by filling the form\n\t\t\t\t\tif (oProperty && oProperty.$kind !== \"NavigationProperty\" && !propertyPath?.startsWith(\"@$ui5\")) {\n\t\t\t\t\t\tcreateData[propertyPath] = transientData[propertyPath];\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif (parameters.beforeCreateCallBack) {\n\t\t\t\t\t//beforeCreateCallBack expects createParameters of type any[]\n\t\t\t\t\tconst createDataAsArray = Object.entries(createData).map(([key, value]) => ({ [key]: value }));\n\t\t\t\t\ttry {\n\t\t\t\t\t\tawait toES6Promise(\n\t\t\t\t\t\t\tparameters.beforeCreateCallBack({\n\t\t\t\t\t\t\t\tcontextPath: listBinding.getPath(),\n\t\t\t\t\t\t\t\tcreateParameters: createDataAsArray\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t);\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tLog.error(\"Error while creating the new document\", error as string);\n\t\t\t\t\t\tthrow FELibrary.Constants.OnBeforeCreateFailed;\n\t\t\t\t\t}\n\t\t\t\t\tcreateData = createDataAsArray.reduce((result, currentObject) => {\n\t\t\t\t\t\treturn { ...result, ...currentObject };\n\t\t\t\t\t}, {});\n\t\t\t\t}\n\t\t\t\tif (Object.keys(createData).length > 0) {\n\t\t\t\t\tappComponent.getModel(\"ui\").setProperty(UiModelConstants.DocumentModified, true);\n\t\t\t\t}\n\t\t\t\tconst newContext = await this.createContext(listBinding, createData, {\n\t\t\t\t\tcreateAtEnd: parameters.createAtEnd,\n\t\t\t\t\tcreateInactive: parameters.inactive,\n\t\t\t\t\tparentContext: parameters.parentContext\n\t\t\t\t});\n\n\t\t\t\tconst creationSuccess = await this.waitForCreateCompletion(newContext, parameters.keepTransientContextOnFailed === true);\n\t\t\t\tif (creationSuccess) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tawait parameters.afterCreateCallBack?.(newContext);\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tcreateDialog.displayErrorMessages(Messaging.getMessageModel().getData());\n\t\t\t\t\t\tawait messageHandler.showMessageDialog({ showBoundStateMessages: true });\n\n\t\t\t\t\t\t// Delete the created document and refresh its list binding (otherwise the created document is still visible in the list)\n\t\t\t\t\t\tawait this.deleteDocument(newContext, { silentMode: true }, appComponent, resourceModel, messageHandler);\n\t\t\t\t\t\tawait this.refreshListBinding(listBinding, appComponent);\n\n\t\t\t\t\t\tLog.error(\"Error while creating/saving the new document\", error as string);\n\t\t\t\t\t\tthrow FELibrary.Constants.CreationFailed;\n\t\t\t\t\t}\n\n\t\t\t\t\ttransientListBinding.destroy();\n\t\t\t\t\tcreateDialog.closeDialog();\n\t\t\t\t\tresultPromiseKeeper.resolve(newContext);\n\t\t\t\t}\n\t\t\t} catch (error: unknown) {\n\t\t\t\t// in case of creation failed, dialog should stay open - to achieve the same, nothing has to be done (like in case of success with bKeepDialogOpen)\n\t\t\t\tif (![FELibrary.Constants.OnBeforeCreateFailed, FELibrary.Constants.CreationFailed].includes(error)) {\n\t\t\t\t\t// other errors are not expected\n\t\t\t\t\ttransientListBinding.destroy();\n\t\t\t\t\tcreateDialog.closeDialog();\n\t\t\t\t\tresultPromiseKeeper.reject(error as string | Error);\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tcreateDialog.setBusy(false);\n\t\t\t\tmessageHandler.showMessages({ isOperationDialogOpen: createDialog.isOpen() });\n\t\t\t}\n\t\t};\n\n\t\tcreateDialog.attachExitDialog({}, onExitDialog);\n\n\t\treturn resultPromiseKeeper.promise;\n\t}\n\n\t/**\n\t * Waits for the creation of a context to be finished.\n\t * @param newContext The context being created\n\t * @param keepTransientContextOnFailed\n\t * @returns True if the creation was successful\n\t */\n\tasync waitForCreateCompletion(newContext: ODataV4Context, keepTransientContextOnFailed: boolean): Promise<boolean> {\n\t\tconst promiseKeeper = new PromiseKeeper<boolean>();\n\t\tconst parentListBinding = newContext.getBinding() as ODataListBinding;\n\n\t\tconst onCreateCompleted = (event: ODataListBinding$CreateCompletedEvent): void => {\n\t\t\tconst createdContext = event.getParameter(\"context\");\n\t\t\tconst success = event.getParameter(\"success\");\n\t\t\tif (createdContext === newContext) {\n\t\t\t\tparentListBinding.detachCreateCompleted(onCreateCompleted);\n\t\t\t\tpromiseKeeper.resolve(success === true);\n\t\t\t}\n\t\t};\n\n\t\tparentListBinding.attachCreateCompleted(onCreateCompleted);\n\n\t\tconst creationSuccessful = await promiseKeeper.promise;\n\t\tif (!creationSuccessful) {\n\t\t\tif (!keepTransientContextOnFailed) {\n\t\t\t\t// Cancel the pending POST and delete the context in the listBinding\n\t\t\t\t(newContext.created() ?? Promise.resolve()).catch(function (contextError: unknown) {\n\t\t\t\t\tLog.trace(\"transient creation context deletion error\", contextError as string);\n\t\t\t\t});\n\t\t\t\tparentListBinding.resetChanges();\n\t\t\t\tparentListBinding.getModel().resetChanges(parentListBinding.getUpdateGroupId());\n\t\t\t\tthrow FELibrary.Constants.CreationFailed;\n\t\t\t}\n\t\t\treturn false;\n\t\t} else {\n\t\t\tawait newContext.created();\n\t\t\treturn true;\n\t\t}\n\t}\n\n\t/**\n\t * Retrieves the name of the NewAction to be executed.\n\t * @param oStartupParameters Startup parameters of the application\n\t * @param [oStartupParameters.preferredMode]\n\t * @param sCreateHash Hash to be checked for action type\n\t * @param oMetaModel The MetaModel used to check for NewAction parameter\n\t * @param sMetaPath The MetaPath\n\t * @returns The name of the action\n\t * @final\n\t */\n\t_getNewAction(\n\t\toStartupParameters: {\n\t\t\tpreferredMode?: string[];\n\t\t},\n\t\tsCreateHash: string,\n\t\toMetaModel: ODataMetaModel,\n\t\tsMetaPath: string\n\t): string {\n\t\tlet sNewAction;\n\n\t\tif (oStartupParameters && oStartupParameters.preferredMode && sCreateHash.toUpperCase().includes(\"I-ACTION=CREATEWITH\")) {\n\t\t\tconst sPreferredMode = oStartupParameters.preferredMode[0];\n\t\t\tsNewAction = sPreferredMode.toUpperCase().includes(\"CREATEWITH:\")\n\t\t\t\t? sPreferredMode.substring(sPreferredMode.lastIndexOf(\":\") + 1)\n\t\t\t\t: undefined;\n\t\t} else if (\n\t\t\toStartupParameters &&\n\t\t\toStartupParameters.preferredMode &&\n\t\t\tsCreateHash.toUpperCase().includes(\"I-ACTION=AUTOCREATEWITH\")\n\t\t) {\n\t\t\tconst sPreferredMode = oStartupParameters.preferredMode[0];\n\t\t\tsNewAction = sPreferredMode.toUpperCase().includes(\"AUTOCREATEWITH:\")\n\t\t\t\t? sPreferredMode.substring(sPreferredMode.lastIndexOf(\":\") + 1)\n\t\t\t\t: undefined;\n\t\t} else {\n\t\t\tsNewAction =\n\t\t\t\toMetaModel && oMetaModel.getObject !== undefined\n\t\t\t\t\t? oMetaModel.getObject(`${sMetaPath}@com.sap.vocabularies.Session.v1.StickySessionSupported/NewAction`) ||\n\t\t\t\t\t  oMetaModel.getObject(`${sMetaPath}@com.sap.vocabularies.Common.v1.DraftRoot/NewAction`)\n\t\t\t\t\t: undefined;\n\t\t}\n\t\treturn sNewAction;\n\t}\n\n\t/**\n\t * Retrieves the label for the title of a specific create action dialog, e.g. Create Sales Order from Quotation.\n\t *\n\t * The following priority is applied:\n\t * 1. label of line-item annotation.\n\t * 2. label annotated in the action.\n\t * 3. \"Create\" as a constant from i18n.\n\t * @param oMetaModel The MetaModel used to check for the NewAction parameter\n\t * @param sMetaPath The MetaPath\n\t * @param sNewAction Contains the name of the action to be executed\n\t * @param resourceModel ResourceBundle to access the default Create label\n\t * @returns The label for the Create Action Dialog\n\t * @final\n\t */\n\t_getSpecificCreateActionDialogLabel(\n\t\toMetaModel: ODataMetaModel | undefined,\n\t\tsMetaPath: string,\n\t\tsNewAction: string,\n\t\tresourceModel: ResourceModel | undefined\n\t): string | undefined {\n\t\tconst lineItems = oMetaModel?.getObject(`${sMetaPath}/@com.sap.vocabularies.UI.v1.LineItem`) as LineItem | undefined;\n\n\t\tconst label = lineItems?.find((lineItem) => isDataFieldForAction(lineItem) && lineItem.Action.split(\"(\", 1)[0] === sNewAction)\n\t\t\t?.Label;\n\n\t\treturn (\n\t\t\tlabel ||\n\t\t\toMetaModel?.getObject(`${sMetaPath}/${sNewAction}@com.sap.vocabularies.Common.v1.Label`) ||\n\t\t\tresourceModel?.getText(\"C_TRANSACTION_HELPER_SAPFE_ACTION_CREATE\")\n\t\t);\n\t}\n}\n\nconst singleton = new TransactionHelper();\nexport default singleton;\n"],"mappings":";;;;swCA2DA,MAAMA,EAAeC,EAAUD,aAC/B,MAAME,EAAmBD,EAAUC,iBAGnC,MAAMC,EAAoBC,EAAaD,kBACvC,MAAME,EAA6BD,EAAaC,2BAGhD,SAASC,EAAiBC,GACzB,GAAIA,GAAgBA,EAAsBC,aAAgBD,EAAsBC,cAAcC,YAAc,oBAAqB,CAChIF,EAAc,CAAC,CAChB,CACA,OAAQA,GAAsB,CAAC,CAChC,CAAC,IA6BKG,EAAiB,oBAAAA,IAAA,KAAAC,EAAAD,EAAAE,UAAAD,EACtBE,SAAA,SAAAA,EAASC,EAA4BC,GACpCC,EAAWC,KAAKH,EAAaI,SAAS,MAAOH,EAC9C,EAACJ,EAEDQ,WAAA,SAAAA,EAAWL,EAA4BC,GACtCC,EAAWI,OAAON,EAAaI,SAAS,MAAOH,EAChD,EAACJ,EAEDU,oBAAA,SAAAA,EAAoBC,GACnB,IAAIC,EACJ,GAAID,EAAOE,IAAoB,iCAAkC,CAChED,EAAOD,EAAOG,SACf,KAAO,CACNF,GAAQD,EAAOI,aAAeJ,EAAOK,kBAAoBL,EAAOG,YAAc,EAC/E,CAEA,MAAMG,EAAYN,EAAOJ,YAAYW,eACrC,GAAID,GAAaE,EAAYC,iBAAiBH,EAAWL,GAAO,CAC/D,OAAOrB,EAAiB8B,KACzB,MAAO,GAAIJ,GAAaE,EAAYG,yBAAyBL,GAAY,CACxE,OAAO1B,EAAiBgC,MACzB,KAAO,CACN,OAAOhC,EAAiBiC,QACzB,CACD,EAEAxB,EAUMyB,iBAANC,eAAMD,EACLE,EACA/B,EACAgC,GAEA,MAAMC,EAA4BjC,GAAeA,EAAYkC,yBAC7D,GAAID,EAA2B,CAC9B,MAAME,EAAUF,EAA0BG,UAAU,EAAGH,EAA0BI,YAAY,OAAS,GAAGC,QAAQ,OAAQ,KACxHC,EAAgBN,EAA0BG,UACzCH,EAA0BI,YAAY,KAAO,EAC7CJ,EAA0BO,QAE3BC,EAAQzC,EAAY0C,YACdD,EAAM,6BACb,OAAOE,EAAUC,kBAAkBT,EAASI,EAAeE,EAAOT,EAAOD,EAC1E,CACA,OAAOc,QAAQC,QAAQ,GACxB,EAEA1C,EAMa2C,gCAAbjB,eAAaiB,EAAgCC,EAA+BzC,GAC3E,MAAM0C,EAAQD,EAAYrC,WAC1B,MAAMU,EAAY4B,EAAM3B,eACxB,MAAM4B,EAAc7B,EAAU8B,eAAeH,EAAY5B,mBACzD,MAAMgC,EAAwBC,EAAmBC,4BAA4BJ,GAE7E,MAAMK,EAA6BH,EAAsBI,aAAgDC,YAAYC,QAClHC,sBACH,MAAMC,EAAgCR,EAAsBS,iBAA2CJ,YAAYC,QAChHC,sBACH,MAAMG,GAAuBP,GAA6BK,IAA+BG,WAEzF,IAAKD,EAAqB,CAEzB,OAAOE,SACR,CACA,MAAMC,EAAoBC,EAAqBd,EAAsBI,eAAiBD,IAA8BS,UACpH,IAAIG,EAEJ,GAAIF,EAAmB,CAEtB,MAAMG,EAAcpB,EAAY9B,UAChC,MAAMmD,EAAUrB,EAAYsB,aAC5B,GAAIF,GAAaG,WAAW,KAAM,CACjCJ,EAAyBE,CAC1B,MAAO,GAAID,GAAeC,GAAWD,EAAYI,SAAS,KAAM,CAE/D,MAAMC,EAAWL,EAAYM,MAAM,KAAK,GAGxC,MAAMC,EAAa,GAAGN,EAAQnD,aAAauD,IAG3CN,EAAyBlB,EAAM2B,YAAYD,GAAYE,iBACxD,KAAO,CAENV,EAAyBE,CAC1B,CACD,KAAO,CAENF,EAAyBnB,EAAY8B,kBACtC,CAEA,IAAKX,EAAwB,CAC5B,OAAOH,SACR,CAEA,MAAMe,EACLC,EAAUC,qBAAqBnB,EAAqBb,EAAOkB,IAC3Da,EAAUC,qBAAqBnB,EAAqBb,GACrD,IAAK8B,EAAW,CACf,OAAOf,SACR,CAEA,MAAMkB,EAAaC,EAASJ,GAC5B,MAAMK,QAAe,IAAIC,EACxBN,EACA,CACCxE,eACA0C,QACAqC,SAAUJ,EAAa,CAACf,GAA0B,IAEnD,CACCoB,eAAgB,MAChBC,QAASN,EAAa,gBAAkB,mBAExCO,UACF,OAAOL,EAAOM,OAAOC,GAAa,IAAIC,MAAMC,aAAaC,WAC1D,EAEA1F,EAKA2F,0BAAA,SAAAA,EAA0B/C,GACzB,OAAQA,EAAYgD,kBAAkEC,mBAAqB,KAAO,KACnH,EAEA7F,EAKA8F,wBAAA,SAAAA,EAAwBlD,GACvB,MAAMmD,EAAcnD,EAAYgD,iBAChC,OAAOG,IAAgBnC,YAAcmC,EAAYF,kBAClD,EAEA7F,EAUcgG,cAAdtE,eAAcsE,EACbpD,EACAqD,EACAC,GAEA,MAAMC,EAAkBF,GAAe,CAAC,EAExC,GAAIG,KAAKT,0BAA0B/C,GAAc,CAChD,IAAIyD,EACJ,GAAIH,EAAQI,eAAeC,eAAiB,MAAO,OAE5C3D,EAAY4D,OAAON,EAAQI,cAClC,CAEA,GAAI1D,EAAY7B,aAAc,CAC7B0F,OAAOC,OAAOP,EAAiB,CAAE,oBAAqBD,EAAQI,gBAC9DD,EAAyBzD,CAC1B,KAAO,CAGN,MAAMC,EAAQD,EAAYrC,WAC1B,MAAMU,EAAY4B,EAAM3B,eACxBmF,EAAyBxD,EAAM8D,SAAS/D,EAAY9B,UAAW8C,UAAWA,UAAWA,UAAW,CAC/FgD,UAAWhE,EAAYiE,aACvBC,gBAAiBlE,EAAYmE,qBAI9B,GAAIb,EAAQI,cAAe,CAC1B,MAAMU,EAAa/D,EAAmBC,4BAA4BjC,EAAU8B,eAAeH,EAAY9B,YACvG,MAAM+E,EAAsBjD,EAAYgD,iBAAoDC,mBAC5F,MAAMoB,EACLD,EAAWE,iBAAiB7D,YAAY8D,cAAc,sBAAsBtB,MACzEuB,yBAAyB5B,MAC7B,IAAKyB,EAAkB,CACtB,MAAM,IAAII,MAAM,8CAA8CzE,EAAY9B,YAC3E,CACA,MAAMwG,EAA4C,CAAC,EACnDA,EAAkB,GAAGL,gBAAiCf,EAAQI,cAAcxF,UAAUoB,QAAQ,MAAO,IACrGuE,OAAOC,OAAOP,EAAiBmB,EAChC,CACD,CAEA,OAAOjB,EAAuBkB,OAAOpB,EAAiB,KACvD,MAAO,GAAIC,KAAKN,wBAAwBlD,GAAc,CACrD,GAAIA,EAAY7B,aAAc,CAC7B,MAAM,IAAIsG,MAAM,kFACjB,KAAO,CAEN,MAAMxE,EAAQD,EAAYrC,WAC1B,MAAM8F,EAAyBxD,EAAM8D,SAAS/D,EAAY9B,UAAW8C,UAAWA,UAAWA,UAAW,CACrGgD,UAAWhE,EAAYiE,aACvBC,gBAAiBlE,EAAYmE,qBAE9B,OAAOV,EAAuBkB,OAAOpB,EAAiB,KACvD,CACD,KAAO,CACN,OAAOvD,EAAY2E,OAAOpB,EAAiB,KAAMD,EAAQsB,YAAatB,EAAQuB,eAC/E,CACD,EAACzH,EAED0H,sBAAA,SAAAA,EAAsB9E,EAA+B+E,EAAgCxH,GACpF,MAAMc,EAAY2B,EAAYrC,WAAWW,eACzC,MAAM0G,EAAW3G,EAAU4G,YAAYjF,EAAY8B,mBAAoB5D,WAEvE,MAAMgH,EAA2BC,EAAqB9G,EAAW2G,EAAUzH,GAE3E,OAAO2H,EAAyBxC,OAAQ0C,KAC9BA,KAAcL,GAAc,CAAC,IAExC,EAEA3H,EAkBMiI,eAANvG,eAAMuG,EACLC,EACAC,EACAhI,EACAiI,EACAC,EACAC,EACAC,GAEA,IAAIC,EACJ,MAAMC,EAAa9I,EAAcwI,GACjC,IAAKD,EAAiB,CACrB,MAAM,IAAIb,MAAM,6CACjB,CACA,MAAMqB,EAAmBtC,KAAK1F,oBAAoBwH,GAClD,GAAIQ,IAAqBnJ,EAAiB8B,OAASqH,IAAqBnJ,EAAiBgC,OAAQ,CAChG,MAAM,IAAI8F,MAAM,8EACjB,CACA,MAAMjH,EAAWgG,KAAKuC,YAAYF,GAClCA,EAAWG,qBAAuBN,EAAgB1E,UAAY6E,EAAWG,qBACzE,IAAKT,GAAcU,SAAU,CAC5BzC,KAAKlG,SAASC,EAAcC,EAC7B,CACA,MAAM0I,EAAqBT,EAAeU,yBAC1C,IACCP,QAA2BpC,KAAK4C,gBAC/Bd,EACAO,EACAtI,EACAkI,EACAD,EACAE,EACAC,SAEKF,EAAeY,kBAAkB,CAAEC,QAAST,EAAWU,cAAeC,UAAWN,IACvF,OAAON,CACR,CAAE,MAAOa,SAEFhB,EAAeY,kBAAkB,CAAEC,QAAST,EAAWU,cAAeC,UAAWN,IACvF,IACEO,IAAU/J,EAAUgK,UAAUC,uBAAyBF,IAAU/J,EAAUgK,UAAUE,qBACtFhB,GAAoBiB,cACnB,CAIDjB,EAAmBkB,OAAO,UAC3B,CACA,MAAML,CACP,CAAC,QACA,IAAKlB,GAAcU,SAAU,CAC5BzC,KAAK5F,WAAWL,EAAcC,EAC/B,CACD,CACD,EAACJ,EAEO2I,YAAR,SAAQA,EAAY/I,GACnB,OAAOA,EAAY+J,WAAa,QAAU,cAAc/J,EAAYgK,SAAW,OAChF,EAEA5J,EAiBc6J,sBAAdnI,eAAcmI,EAAsB3B,EAAmCO,GACtE,GAAIA,EAAWG,qBAAsB,CAEpC,MAAMkB,EAAmBrB,EAAWnG,KAAOmE,OAAOsD,QAAQtB,EAAWnG,MAAM0H,IAAIC,IAAA,IAAEC,EAAK1E,GAAMyE,EAAA,MAAM,CAAEC,CAACA,GAAM1E,KAAY,GACvH,UACO2E,EACL1B,EAAWG,qBAAqB,CAC/BwB,YAAalC,GAAmBA,EAAgBpH,UAChDgJ,iBAAkBA,IAGrB,CAAE,MAAOT,GACRgB,EAAIhB,MAAMA,GACV,MAAM/J,EAAUgK,UAAUgB,oBAC3B,CACA7B,EAAWnG,KAAOwH,EAAiBS,OAAO,CAACvF,EAAQwF,KAC3C,IAAKxF,KAAWwF,IACrB,CAAC,EACL,CACA,MAAMC,EAAgBrE,KAAKJ,cAAckC,EAAiBO,EAAWnG,KAAM,CAC1EkF,cAAeiB,EAAWjB,YAC1BC,iBAAkBgB,EAAWI,SAC7BvC,cAAemC,EAAWnC,gBAE3B,GAAI4B,EAAgBnB,qBAAuB2D,EAAYC,yBAA0B,CAChFzC,EAAgB3H,WAAWqK,YAAYF,EAAYC,yBACpD,CACA,OAAOF,CACR,EAEAzK,EAsBcgJ,gBAAdtH,eAAcsH,EACbd,EACAO,EACAtI,EACAkI,EACAD,EACAE,EACAC,GAEA,MAAMtH,EAAYiH,EAAgB3H,WAAWW,eAC7C,MAAM0G,EAAW3G,EAAU4G,YAAYK,EAAgBxD,mBAAoB5D,WAC3E,MAAM+J,EAAa1K,EAAa2K,iBAAiBC,UACjD,MAAMC,EAAgB7K,EAAa8K,mBACnC,MAAMC,EAAoBF,GAAeE,mBAAqB,CAAC,EAC/D,MAAMC,GAAajD,EAAgBnH,aAChCqF,KAAKgF,cAAcF,EAAmBL,EAAY5J,EAAW2G,GAC7DhE,UAEH,GAAIuH,EAAW,CACd,MAAMnG,QAAeoB,KAAKiF,0BACzBF,EACAjD,EACAO,EACAtI,EACAiI,EACAC,GAED,GAAIrD,EAAOsG,SAAW,WAAY,CACjC,MAAMtG,EAAOuG,MACd,CACA,OAAOvG,EAAOQ,MAAMgG,eACrB,KAAO,CACN,OAAOpF,KAAKqF,wBACXvD,EACAO,EACAtI,EACAiI,EACAC,EACAC,EACAC,EAEF,CACD,EAEAvI,EAUcqL,0BAAd3J,eAAc2J,EACbK,EACAxD,EACAO,EACAtI,EACAiI,EACAC,GAEA,MAAMsD,EAAoBzD,EAAgBxD,mBAAoB5D,UAC9D,MAAMG,EAAYiH,EAAgB3H,WAAWW,eAC7C,MAAM0G,EAAW3G,EAAU4G,YAAY8D,GACvC,MAAMC,EAAezK,EAAY0K,gBAAgB5K,EAAW2G,GAC5D,MAAMkE,EAA2C,CAAEC,0BAA2B,KAAMjF,gBAAiB,SAErG,MAAMkF,EAA+B,GACrC,GAAIJ,EAAc,CACjBI,EAAmBC,KAAKL,EACzB,CACA,GAAIxF,KAAK1F,oBAAoBwH,KAAqB3I,EAAiB8B,MAAO,CACzE2K,EAAmBC,KAAK,iBAAkB,iBAAkB,kBAC7D,CACA,GAAID,EAAmB5J,OAAS,EAAG,CAClC0J,EAAkB,WAAaE,EAAmBE,KAAK,IACxD,CACA,MAAMlH,QAAeoB,KAAK+F,WACzBT,EACA,CACCxG,SAAUgD,EAAgBxD,mBAC1B0H,0BAA2B,KAC3BC,MAAOjG,KAAKkG,oCAAoCrL,EAAW2G,EAAU8D,EAAYtD,GACjF0D,kBAAmBA,EACnBS,KAAM9D,EAAWU,cACjBqD,eAAgB,KAChBC,oBAAqBhE,EAAWgE,qBAEjCtM,EACAkI,GAED,OAAOrD,EAAO,EACf,EAEAhF,EAWcyL,wBAAd/J,eAAc+J,EACbvD,EACAO,EACAtI,EACAiI,EACAC,EACAC,EACAC,GAEA,IACC,IAAIC,EACJ,MAAMvC,EAAcwC,EAAWnG,KAC/B,IAAKgG,EAAe,CACnB,IAAIoE,EAAcnE,EAClB,GAAImE,IAAgB9I,UAAW,CAC9B8I,QAAoBtG,KAAKzD,gCAAgCuF,EAAiB/H,EAC3E,CACAsI,EAAWnG,KAAOmE,OAAOC,OAAO,CAAC,EAAGgG,EAAajE,EAAWnG,KAC7D,CACA,GAAImG,EAAWnG,KAAM,QACbmG,EAAWnG,KAAK,iBACxB,CAEA,MAAMqK,EAAgBlE,EAAWmE,eAAiBvN,EAAawN,aAAepE,EAAWmE,eAAiBvN,EAAayN,OACvH,MAAMC,EAAuBJ,EAAgBvG,KAAKsB,sBAAsBQ,EAAiBjC,EAAa9F,GAAgB,GACtH,GAAIsI,EAAWmE,eAAiBvN,EAAa2N,eAAgB,CAC5DvE,EAAWsE,sBAAsBE,QAASjF,IACzC,IAAK+E,EAAqB3I,SAAS4D,GAAY,CAC9C+E,EAAqBd,KAAKjE,EAC3B,IAGD,GAAI+E,EAAqB3K,SAAW,EAAG,CAEtC,MAAM,IAAIiF,MAAM,8CACjB,CACD,CAEA,GAAI0F,EAAqB3K,OAAS,EAAG,CACpCoG,QAA2BpC,KAAK8G,iBAC/BhF,EACA6E,EACAtE,EACAtI,EACAiI,EACAC,GAED,GAAIjC,KAAKN,wBAAwBoC,GAAkB,CAIlD9B,KAAK+G,mBAAmBjF,EAAiB/H,EAC1C,CACD,KAAO,CACNqI,QAA2BpC,KAAKyD,sBAAsB3B,EAAiBO,GACvE,IAAKA,EAAWI,SAAU,OACnBzC,KAAKgH,wBAAwB5E,EAAoBC,EAAW4E,+BAAiC,KACpG,CACD,CACA,OAAO7E,CACR,CAAE,MAAOa,GACR,MAAMiE,EAAOjE,EAAgBkE,SAAWlE,EACxCgB,EAAIhB,MAAM,wCAAyCiE,GACnD,MAAMA,CACP,CACD,EAACtN,EAEDwN,gBAAA,SAAAA,EAAgBC,GACf,MAAMC,EAAuBD,EAAU,GACvC,MAAME,EAAoBvH,KAAK1F,oBAAoBgN,GACnD,OAAOC,IAAsBpO,EAAiB8B,KAC/C,EAEArB,EAaM4N,eAANlM,eAAMkM,EACL1I,EACAtF,EACAO,EACAiI,EACAC,GAGAjC,KAAKlG,SAASC,GAEd,MAAM0N,EAAmBC,MAAMC,QAAQ7I,GAAY,IAAIA,GAAY,CAACA,GACpE,MAAM8I,GAAgBpO,EAAYqO,kBAAoBJ,GAAkB,GAExE,IACC,MAAMK,EAAe9H,KAAKoH,gBAAgB5N,EAAYqO,kBAAoBJ,GAC1E,MAAMM,EAAmB,GACzB,IAAIjI,EAA0B,GAC9B,IAAIkI,EAEJ,GAAIxO,EAAa,CAChBA,EAAcD,EAAcC,GAC5BA,EAAYyO,cAAgBjI,KAAKkI,6BAA6BN,GAC9D,IAAKpO,EAAY2O,yBAA0B,CAE1C,GAAIL,EAAc,CAEjB,MAAMM,EAAgBX,EAAiBY,KAAMxK,IAC5C,MAAMyK,EAAczK,EAAQyB,YAC5B,OACCgJ,EAAYC,iBAAmB,MAC/BD,EAAYE,iBAAmB,MAC/BF,EAAYG,yBACZH,EAAYG,wBAAwBC,kBACnCJ,EAAYG,wBAAwBE,qBAGvC,GAAIP,EAAe,OAEZpI,KAAK4I,2BAA2BR,EAAepG,GACrD,OAAO,KACR,KAAO,CACNgG,EAAiBP,EAAiBY,KAAMxK,IACvC,MAAM0K,eAAEA,EAAcC,eAAEA,EAAcC,wBAAEA,GAA4B5K,EAAQyB,aAAe,CAAC,EAC5F,OAAOiJ,IAAmB,MAAQC,IAAmB,QAAUC,GAAyBC,iBAE1F,CACD,CACA,IAAIG,EAAc,GAClB,GAAIb,EAAgB,CACnB,MAAMc,EAAqBd,EAAe1I,YAAYmJ,wBAAwBC,gBAC9EG,EAAc7G,EAAc+G,QAC3B,2DACA,CAACD,GACDtP,EAAYyO,cAEd,MAAO,GAAIzO,EAAYwP,MAAO,CAC7B,GAAIxP,EAAYyP,YAAa,CAC5BJ,EAAc7G,EAAc+G,QAC3B,sDACA,CAACvP,EAAYwP,MAAOxP,EAAYyP,aAChCzP,EAAYyO,cAEd,KAAO,CACNY,EAAc7G,EAAc+G,QAC3B,4DACA,CAACvP,EAAYwP,OACbxP,EAAYyO,cAEd,CACD,KAAO,CACNY,EAAc7G,EAAc+G,QAC3B,gEACAvL,UACAhE,EAAYyO,cAEd,CACAnI,EAAQ+F,KAAK,CACZqD,KAAM9P,EAAkB+P,kBACxBrK,SAAU2I,EACV2B,KAAMP,EACNQ,SAAU,KACVvG,QAASxJ,EAA2BgQ,MAEtC,KAAO,CAEN,IAAIC,EAAiB9B,EAAiBzL,OAEtC,GAAI8L,EAAc,CACjByB,IACE/P,EAAYgQ,8BAA8BxN,QAAU,IACpDxC,EAAYiQ,2BAA2BzN,QAAU,IACjDxC,EAAYkQ,iBAAiB1N,QAAU,GACzC3C,EAAasQ,oCACZnQ,EACAiO,EACA8B,EACAvH,EACA+F,EACAjI,EAEF,KAAO,CACN,MAAM8J,EAAmBvQ,EAAawQ,oBAAoBrQ,EAAa+P,EAAgBvH,GACvF,GAAI4H,EAAkB,CACrB7B,EAAMlC,KAAK+D,EACZ,CACD,CAEA,MAAME,EAAwBzQ,EAAa0Q,4BAA4BvQ,EAAaiO,EAAkBzF,GACtGlC,EAAU,IAAIA,KAAYgK,EAC3B,CACD,CAEA,MAAME,EAAgBpC,EAAaqC,aACnC,IAAIC,EACJ,GAAIF,EAAcvP,IAAsB,0CAA2C,CAClF,GAAIuF,KAAKT,0BAA0ByK,GAAgB,CAClDE,EAAc,MACf,MAAO,GAAIlK,KAAKN,wBAAwBsK,GAAgB,CACvDE,EAAc,YACf,CACD,CAGA7Q,EAAa8Q,6BAA6BrK,EAASiI,GACnD,GAAIvO,EAAY4Q,WAAa,MAAQ5Q,EAAY6Q,aAAe,KAAM,CACrE,MAAMC,QAAkBtK,KAAKuK,6BAA6BxC,EAAOvO,EAAawI,GAC9E,IAAKsI,EAAW,CACf,OAAO,KACR,CACD,CAGAE,EAAgBC,sCACVpR,EAAaqR,qBAClB5K,EACAtG,EACAyI,EACAD,EACAjI,EACA+N,EACAoC,GAGD,OAAO,IACR,CAAC,QAEAlK,KAAK5F,WAAWL,EACjB,CACD,EAEAH,EAMcgP,2BAAdtN,eAAcsN,EAA2BR,EAA+BpG,GACvE,MAAM2I,EAAkBvC,EAAc9I,YAAYmJ,wBAAwBC,gBAC1E,MAAMkC,EAAgB,IAAIC,EAC1BC,EAAWC,KAAK/I,EAAc+G,QAAQ,gEAAiE,CAAC4B,IAAmB,CAC1H3B,MAAOhH,EAAc+G,QAAQ,mBAC7BiC,QAASA,KACRJ,EAActO,aAIhB,OAAOsO,EAAcK,OACtB,EAEArR,EAOc2Q,6BAAdjP,eAAciP,EACbxC,EACA1F,EACAL,GAEA,MAAM4I,EAAgB,IAAIC,EAC1B,MAAMK,EAASlL,KAAKmL,mBAAmBpD,EAAO1F,EAAYL,EAAe4I,GACzEM,EAAOE,cAAc,uBACrBF,EAAOG,OACP,OAAOT,EAAcK,OACtB,EAEArR,EAUAuR,mBAAA,SAAAA,EACCpD,EACA1F,EACAL,EACA4I,GAEA,IAAIU,EAAkB,MACtB,MAAMC,EAAO,IAAIC,EAAK,CAAEzD,MAAOA,IAC/B,MAAM0D,EAAqBC,EAAQC,qBAAqB,eACxD,IAAI3C,EACJ,GAAI3G,EAAWU,eAAetI,IAAI,oBAAqB,CACtDuO,EAAQhH,EAAc+G,QAAQ,wBAAyBvL,UAAW6E,EAAW4F,cAC9E,KAAO,CACNe,EAAQyC,EAAmB1C,QAAQ,kBACpC,CACA,MAAMmC,EAAS,IAAIU,EAAO,CACzB5C,MAAOA,EACP6C,MAAO,UACPC,QAAS,CAACP,GACVQ,eAAgBhE,EAChBiE,YAAa,IAAIC,EAAO,CACvB7C,KAAMJ,EACNE,KAAM,aACNgD,MAAO,WACNZ,EAAkB,KAClBJ,EAAOiB,OACR,IAEDC,UAAW,IAAIH,EAAO,CACrB7C,KAAMpH,EAAc+G,QAAQ,0BAC5BmD,MAAO,WACNhB,EAAOiB,OACR,IAEDE,WAAY,WACXnB,EAAOoB,UAEP1B,EAActO,QAAQgP,EACvB,IAED,OAAOJ,CACR,EAEAtR,EAWM2S,aAANjR,eAAMiR,EACLhR,EACAC,EACAzB,EACAkI,EACAjD,EACAwN,GAEA,MAAMjF,EAAoBvH,KAAK1F,oBAAoBiB,GACnD,IAAKA,EAAU,CACd,MAAM,IAAI0F,MAAM,iDACjB,CACA,GAAIsG,IAAsBpO,EAAiB8B,OAASsM,IAAsBpO,EAAiBgC,OAAQ,CAClG,MAAM,IAAI8F,MAAM,sEACjB,CACAjB,KAAKlG,SAASC,GAEdkI,EAAewK,2BACf,MAAM/J,EAAqBT,EAAeU,yBAE1C,IACC,MAAM+J,EACLnF,IAAsBpO,EAAiB8B,YAC9B0R,EAAMC,8BACZrR,EACAxB,EACA,CACC8S,iBAAkB,KAClBrR,MAAOA,GAERwD,EACAiD,EACAuK,SAEMM,EAAOC,4BAA4BxR,EAAUxB,EAAckI,SAE/DA,EAAeY,kBAAkB,CAAEG,UAAWN,IACpD,OAAOgK,CACR,CAAE,MAAOM,SACF/K,EAAegL,aAAa,CAAEC,mBAAoB,KAAMlK,UAAWN,IACzE,MAAMsK,CACP,CAAC,QACAhN,KAAK5F,WAAWL,EACjB,CACD,EAACH,EAEDuT,sBAAA,SAAAA,EAAsBtP,GACrB,MAAMpB,EAAQoB,EAAQ1D,WACtB,MAAMU,EAAY4B,EAAM3B,eACxB,MAAMkJ,EAAcnG,EAAQnD,UAC5B,MAAM0S,EAAeC,EAAkBC,gBAAgBzS,EAAWA,EAAU8B,eAAeqH,GAAa1E,UAAU,gBAClH,GAAI8N,GAAgBA,EAAapR,OAAQ,CACxC,MAAMuR,EAAmBH,EAAaxJ,IAAKE,GAAQA,EAAI0J,eACvD,OAAO/Q,EAAM2B,YAAY,GAAG4F,kBAA6BxG,UAAW,CAAEiQ,QAASF,IAAoBlP,iBACpG,CACA,MAAMqP,EAAa7S,EAAU4G,YAAYuC,GACzC,MAAM2J,EAAgB9S,EAAUyE,UAAU,GAAGoO,oBAA6B,QAC1E,OAAOjR,EAAM2B,YAAY,GAAG4F,kBAA6BxG,UAAW,CAAEiQ,QAASE,IAAiBtP,iBACjG,EACAzE,EAcMgU,eAANtS,eAAMsS,EACLrS,EACAsS,EACA9T,EACAiI,EACAC,EACA6L,EACAC,GAMA,IAAKxS,EAAU,CACd,MAAM,IAAI0F,MAAM,+CACjB,CACA,MAAMzH,EAAcD,EAAcsU,GAClC,MAAMG,EAASzS,EAASpB,WACxB,MAAMoN,EAAoBvH,KAAK1F,oBAAoBiB,GAEnD,GAAIgM,IAAsBpO,EAAiB8B,OAASsM,IAAsBpO,EAAiBgC,OAAQ,CAClG,MAAM,IAAI8F,MAAM,8EACjB,CACAjB,KAAKlG,SAASC,GACd,IACC,IAAIkU,EACJ,IAAIC,EACHC,EACAC,EACAC,EAED,GAAI9G,IAAsBpO,EAAiB8B,QAAU8S,EAAkB,CACtEG,EAAiBlO,KAAKmN,sBAAsB5R,GAC5C,MAAM+S,EAAmBN,EACvB5P,YAAY7C,EAASb,UAAW8C,UAAW,CAC3CiQ,QAAS,CAAC,2CAA4C,gDAEtDpP,mBACD8P,EAA6BC,EAAgBC,SAAqBhS,QAAQkS,IAAI,CAC9ET,EAActQ,UAAY0Q,GAAgBM,uBAC1CF,EAAiBG,gBACjBX,EAActQ,UAAY0Q,GAAgBO,kBAE3C,GAAIL,EAAgB,CACnBL,EACCK,EAAe3F,yBAAyBiG,mBACxCN,EAAe3F,yBAAyBkG,kBAC1C,CACD,CACA,IAAKnV,EAAYoV,mBAAoB,OAC9B5O,KAAK6O,gBAAgBrV,EAAYsV,aAAcf,EAAkB/L,EACxE,CACA,GAAIzG,EAASwT,cAAe,CAG3BxT,EAASyT,aAAa,KAAMxR,UAC7B,CACA,GAAIhE,EAAYyV,qBAAsB,OAC/BzV,EAAYyV,qBAAqB,CAAEpR,QAAStC,GACnD,CACA,GAAIgM,IAAsBpO,EAAiB8B,MAAO,CACjD,GAAI6S,EAAa,CAChB,GAAIvS,EAAS2T,oBAAqB,CACjC3T,EAAS0O,aAAakF,cACvB,OACMxC,EAAMyC,YAAY7T,EAAU0G,EAAgBlI,EACnD,KAAO,CACN,IACC,GAAIwB,EAAS2T,oBAAqB,CACjC3T,EAAS0O,aAAakF,cACvB,CACAjB,EAAiBA,GAAkBlO,KAAKmN,sBAAsB5R,IAC7D4S,EAA6BE,SAAqBhS,QAAQkS,IAAI,CAC9DL,GAAgBM,uBAChBN,GAAgBO,kBAEjBR,EAAgBE,EACbH,EAAO5P,YAAY+P,GAA6B9P,kBAChDb,SACJ,CAAC,cACMmP,EAAMyC,YAAY7T,EAAU0G,EAAgBlI,EACnD,CACD,CACD,KAAO,CACN,MAAMsV,QAAyBvC,EAAOwC,gBAAgB/T,GACtD,GAAI8T,EAAkB,CACrB,GAAIA,EAAiBH,oBAAqB,CACzCG,EAAiBpF,aAAakF,cAC/B,CACA,IAAKrB,EAAa,CACjBuB,EAAiBE,UACjBtB,EAAgBoB,CACjB,CACD,CACD,CAGApN,EAAewK,iCAETxK,EAAegL,eAErB,MAAO,CACNuC,cAAevB,EACfwB,kBAAmBpB,EAErB,CAAE,MAAOrB,SACF/K,EAAegL,eACrB,MAAMD,CACP,CAAC,QACAhN,KAAK5F,WAAWL,EACjB,CACD,EAEAH,EAaM8V,aAANpU,eAAMoU,EACL7R,EACA9D,EACAiI,EACA2N,EACAC,EACA3N,EACA6L,GAG0B,IAF1B+B,EAAmBC,UAAA9T,OAAA,GAAA8T,UAAA,KAAAtS,UAAAsS,UAAA,GAAG,MAAK,IAC3BC,EAAwBD,UAAA9T,OAAA,EAAA8T,UAAA,GAAAtS,UAExB,MAAM+J,EAAoBvH,KAAK1F,oBAAoBuD,GACnD,GAAI0J,IAAsBpO,EAAiBgC,QAAUoM,IAAsBpO,EAAiB8B,MAAO,CAClG,MAAM,IAAIgG,MAAM,sEACjB,CAEA,IACCjB,KAAKlG,SAASC,GACd,MAAMkO,EAAgBjI,KAAKkI,6BAA6BrK,GACxD,MAAMmS,EACLzI,IAAsBpO,EAAiB8B,YAC9B0R,EAAMsD,iBAAiBpS,EAAS9D,EAAckI,EAAgB,CAAED,cAAeA,GAAiB+N,SAChGjD,EAAOmD,iBACbpS,EACA9D,EACAkI,EACA,CAAED,cAAeA,GACjB+N,GAGJ,MAAMG,EAAmB1F,EAAgB2F,cAAcC,OAAO5F,EAAgB2F,YAAY,KAAM,OAChG,IAAKN,KAAyBK,EAAiBlU,SAAW,GAAKkU,EAAiB,GAAGG,YAAcC,EAAYC,SAAU,CAEtHC,EAAazF,KACZ+C,EACG9L,EAAc+G,QAAQ,sCAAuCvL,UAAWyK,GACxEjG,EAAc+G,QAAQ,oCAAqCvL,UAAWyK,GAE3E,CAEA,OAAO+H,CACR,CAAE,MAAOhD,GACR,GAAI2C,GAA6BC,GAAwB5T,OAAS,EAAG,CAEpE4T,EAAuB/I,QAASrK,IAC/B,IAAK8H,EAAYmM,oBAAoBjU,GAAc,CAClDzC,EAAa2W,wBAAwBC,wCAAwCnU,EAAY9B,UAAWmD,EACrG,GAEF,OACMoE,EAAegL,eACrB,MAAMD,CACP,CAAC,QACAhN,KAAK5F,WAAWL,EACjB,CACD,EAEAH,EA0BMmM,WAANzK,eAAMyK,EACL6K,EACApX,EAmBAO,EACAkI,GAEAzI,EAAcD,EAAcC,GAC5B,IAAIqX,EACJ,IAAI7C,EACJ,IAAK4C,EAAa,CACjB,MAAM,IAAI3P,MAAM,wCACjB,CAIA,MAAM6P,EAAQF,EAAY1S,MAAM,KAAK,GAErC2S,EAAmBC,EAAQtT,UAAYhE,EAAYsF,SAEnD,GAAI+R,IAAsBnJ,MAAMC,QAAQkJ,IAAqBA,EAAiB7U,SAAY0L,MAAMC,QAAQkJ,IAAoB,CAC3HA,EAAmBnJ,MAAMC,QAAQkJ,GAAoBA,EAAiB,GAAKA,EAC3E7C,EAAS6C,EAAiB1W,UAC3B,CACA,GAAIX,EAAYiD,MAAO,CACtBuR,EAASxU,EAAYiD,KACtB,CACA,IAAKuR,EAAQ,CACZ,MAAM,IAAI/M,MAAM,4EACjB,CACA,IACC,MAAM6B,EAAWtJ,EAAYuX,UAAYvX,EAAY2M,KAAK6K,KAAKxX,EAAYuX,WAAavX,EAAY2M,KAGpG,IAAI8K,EACJ,GAAIJ,GAAoBrX,EAAYsF,SAAU,CAC7C,MAAMA,EAAW4I,MAAMC,QAAQnO,EAAYsF,UAAYtF,EAAYsF,SAAW,CAACtF,EAAYsF,UAC3F,MAAMoS,EAAkB1S,EAAUC,qBAAqBmS,EAAa5C,EAAQlP,EAAS,IACrF,IAAKH,EAASuS,GAAkB,CAC/B,MAAM,IAAIjQ,MAAM,uBACjB,CACAgQ,QAAgB,IAAIzS,EAAUzE,EAAciU,EAAQkD,EAAiB,CACpEC,gBAAiB3X,EAAY2X,gBAC7BrS,WACAsS,mBAAoB5X,EAAY4X,mBAChCnL,MAAOzM,EAAYyM,MACnBI,oBAAqB7M,EAAY6M,oBACjCX,kBAAmBlM,EAAYkM,kBAC/BuC,cAAezO,EAAYyO,cAC3BoJ,gBAAiB,CAChBC,8BAA+B,KAC/BvS,eAAgB,KAChBC,QAASxF,EAAYwF,QACrBuS,WAAY/X,EAAY+X,YAEzBC,YAAa,CACZC,cAAeA,KACdxP,GAAgBwK,2BAChBzM,KAAKlG,SAASC,IAEf2X,gBAAiBA,KAChB1R,KAAK5F,WAAWL,IAEjB4X,qBAAsBA,KACrB3R,KAAK4R,kCAAkC,CACtCC,qBAAsBrY,EAAYqY,qBAClCC,sBAAuBtY,EAAYsY,sBACnChP,QAASA,EACThE,WACAoS,sBAIH/K,KAAM3M,EAAY2M,KAClBC,eAAgB5M,EAAY4M,eAC5BnE,eAAgBA,EAChB8P,+BAAgCvY,EAAYuY,iCAC1C9S,SACJ,KAAO,CACN,MAAM+S,EAAwBxT,EAAUC,qBAAqBmS,EAAa5C,GAC1E,IAAKgE,GAAyBrT,EAASqT,GAAwB,CAC9D,MAAM,IAAI/Q,MAAM,wBACjB,CACAgQ,QAAgB,IAAIzS,EAAUzE,EAAciU,EAAQgE,EAAsBC,OAAQ,CACjFd,gBAAiB3X,EAAY2X,gBAC7BlL,MAAOzM,EAAYyM,MACnBI,oBAAqB7M,EAAY6M,oBACjCX,kBAAmBlM,EAAYkM,kBAC/BuC,cAAezO,EAAYyO,cAC3BuJ,YAAa,CACZC,cAAeA,KACdzR,KAAKlG,SAASC,IAEf2X,gBAAiBA,KAChB1R,KAAK5F,WAAWL,KAGlBsX,gBAAiB,CAChBE,WAAY/X,EAAY+X,YAEzBtP,eAAgBA,EAChBkE,KAAM3M,EAAY2M,OAChBlH,SACJ,CAEA,GAAIgD,EAAgB,CACnBjC,KAAKkS,sBAAsB1Y,EAAaoX,EACzC,CACA,OAAOK,CACR,CAAE,MAAOjE,GACR,GAAI/K,EAAgB,CACnBjC,KAAKkS,sBAAsB1Y,EAAaoX,EACzC,CACA,MAAM5D,CACP,CACD,EAEApT,EAKAsO,6BAAA,SAAAA,EAA6BrK,GAC5B,MAAMnB,EAAcmB,EAAQ1D,WAAWW,eAAe6B,eAAekB,EAAQnD,WAC7E,OAAQmC,EAAmBC,4BAA4BJ,GAAaM,cACjEmV,IACJ,EAACvY,EAEDgY,kCAAA,SAAAA,EAAkCvP,GAOjC,GAAIA,EAAWwP,sBAAwBxP,EAAWyP,sBAAuB,CACxE,IAAIjK,EAAqC,GAEzC,IAAKuK,EAAaC,eAAehQ,EAAW6O,iBAAkB,CAC7DrJ,EAAmBxF,EAAWwP,qBAAqBS,YAAY,qBAAuB,GACtFC,EAAcC,oBACbnQ,EAAWwP,qBACXY,KAAKC,MAAMrQ,EAAWyP,uBACtBjK,EACA,QAEF,MAAO,GAAIxF,EAAWS,QAAS,CAC9B,GAAIT,EAAWS,QAAQrI,IAAW,oBAAqB,CACtDoN,EAAmBxF,EAAWS,QAAQ6P,sBACtCJ,EAAcC,oBACbnQ,EAAWwP,qBACXY,KAAKC,MAAMrQ,EAAWyP,uBACtBjK,EACA,QAEF,CACD,CAEAxO,EAAauZ,oCAAoCvQ,EAAWwP,qBAAsBhK,EACnF,CACD,EAACjO,EAEDsY,sBAAA,SAAAA,EACC1Y,EAIAoX,GAEA,MAAMiC,EAAqBrI,EAAgB2F,YAAY,KAAM,MAC7D,GAAI0C,EAAmB7W,OAAS,GAAKxC,GAAeA,EAAYqY,qBAAsB,CACrFrY,EAAYqY,qBAAqBiB,YAAY,cAAetZ,EAAYyM,MAAQzM,EAAYyM,MAAQ2K,EACrG,CACD,EAEAhX,EAIAmZ,sBAAA,SAAAA,IACC,MAAMC,EAAgBC,EAAUC,kBAC9BC,UACAjU,OAAQ+D,GAAmBA,EAAMmQ,YACnCH,EAAUI,eAAeL,EAC1B,EAEApZ,EAKA0Z,eAAA,SAAAA,EAAeC,GACd,OAAO,IAAIC,EAAQD,EACpB,EAEA3Z,EAQMiV,gBAANvT,eAAMuT,EAAgBC,EAAsB2E,EAAqBzR,GAEhE,IAAKyR,EAAY,CAChBzT,KAAK+S,wBACL,OAAO1W,QAAQC,SAChB,CAEAwS,EAAa4E,WAAW,OACxB,OAAO,IAAIrX,QAAc,CAACC,EAASqX,KAClC,MAAMC,EAAsB5T,KAAKsT,eAAe,CAC/CO,WAAY,MACZC,UAAW,QAEZF,EAAoBxI,cAAc,uBAGlC,MAAMpC,EAAQ,IAAI+K,EAAK,CACtBC,GAAI,sBACJ5K,KAAMpH,EAAc+G,QAAQ,gDAE7B,MAAMkL,EAAgB,IAAIhI,EAAO,CAChC7C,KAAMpH,EAAc+G,QAAQ,6CAC5BmL,MAAO,OACPhI,MAAOA,KACNlM,KAAK+S,wBACLa,EAAoB1X,KAAK,kBAAmB,MAC5C0X,EAAoBzH,WAGtB8H,EAAcE,kBAAkBnL,GAChC4K,EAAoBQ,WAAW,IAAI5I,EAAK,CAAEzD,MAAO,CAACiB,EAAOiL,MAGzDL,EAAoBS,iBAAiB,KACpCT,EAAoBU,gBAAgBL,KAErCL,EAAoBW,iBAAiB,KACpCX,EAAoBY,iBACpB1F,EAAa4E,WAAW,MACxB,GAAIE,EAAoB1X,KAAK,mBAAoB,CAChDI,GACD,KAAO,CACNqX,EAAOza,EAAUgK,UAAUuR,mBAC5B,IAGDb,EAAoBc,OAAO5F,EAAc,QAE3C,EAEAlV,EAMMmN,mBAANzL,eAAMyL,EAAmBvK,EAA+BzC,GACvD,IACC,GAAIyC,EAAYmY,SAAU,CACzB,GAAI3U,KAAKT,0BAA0B/C,GAAc,OAE1CzC,EACJ2W,wBACAkE,mBAAmB,CAAC,CAAEC,wBAAyB,KAAOrY,EAAY8B,mBACrE,KAAO,OACA9B,EAAYsY,gBACnB,CACD,KAAO,OACA/a,EACJ2W,wBACAkE,mBAAmB,CAAC,CAAEC,wBAAyBrY,EAAY9B,YAAc8B,EAAYsB,aACxF,CACD,CAAE,MAAOmF,GACRgB,EAAIhB,MAAM,uCAAuCzG,EAAY9B,YAAauI,EAC3E,CACD,EAACrJ,EAEKkN,iBAANxL,eAAMwL,EACLtK,EACAuY,EACA1S,EAaAtI,EACAiI,EACAC,GAEA,MAAMxF,EAAQD,EAAYrC,WAC1B,MAAMU,EAAY4B,EAAM3B,eACxB,MAAMka,EAAena,EAAU4G,YAAYjF,EAAY5B,mBAGvD,MAAMqa,EAAuBxY,EAAM8D,SAAS/D,EAAY9B,UAAW8B,EAAYsB,aAAcN,UAAWA,UAAW,CAClHkD,gBAAiB,gBAElBuU,EAAqBC,gBAAkB,WACtC,EAED,MAAMC,EAAmBF,EAAqB9T,OAAOkB,EAAWnG,KAAM,MACtE,MAAMkZ,EAAoBL,EAAWnR,IAAKuO,GAClCtX,EAAUwa,qBAAqB,GAAGL,KAAgB7C,MAG1D,MAAMmD,EAAeC,IAAmBC,gBACvCL,EACAJ,EACAhb,EACAsI,EAAWmE,eAAiBvN,EAAa2N,eAAiB,aAAe,iBACzEvE,EAAWU,eAGZ,UACOuB,EAAYmR,gBACjB1b,EACAqb,EACAD,EACA,MACA9S,EAAWqT,aACXrT,EAAWnG,MAEZoZ,EAAaK,YACd,CAAE,MAAOC,SACF3T,EAAegL,eACrB,MAAM2I,CACP,CAEA,MAAMC,EAAsB,IAAIhL,EAEhC,MAAMiL,EAAexa,UACpB,IAAKya,EAAMC,aAAa,UAAW,CAElCf,EAAqB3I,UACrBgJ,EAAaW,cACbJ,EAAoBlC,OAAOza,EAAUgK,UAAUE,oBAC/C,MACD,CAEAkS,EAAaY,QAAQ,MACrB7T,EAAW8T,gBAAkB,KAC7B,IACC,MAAMC,EAAgBjB,EAAiB7V,YACvC,IAAIiC,EAAsC,CAAC,EAC3ClB,OAAOgW,KAAKD,GAAevP,QAASyP,IACnC,MAAMC,EAAY1b,EAAUyE,UAAU,GAAG0V,KAAgBsB,KAGzD,GAAIC,GAAaA,EAAUC,QAAU,uBAAyBF,GAAcvY,WAAW,SAAU,CAChGwD,EAAW+U,GAAgBF,EAAcE,EAC1C,IAGD,GAAIjU,EAAWG,qBAAsB,CAEpC,MAAMiU,EAAoBpW,OAAOsD,QAAQpC,GAAYqC,IAAI8S,IAAA,IAAE5S,EAAK1E,GAAMsX,EAAA,MAAM,CAAE5S,CAACA,GAAM1E,KACrF,UACO2E,EACL1B,EAAWG,qBAAqB,CAC/BwB,YAAaxH,EAAY9B,UACzBgJ,iBAAkB+S,IAGrB,CAAE,MAAOxT,GACRgB,EAAIhB,MAAM,wCAAyCA,GACnD,MAAM/J,EAAUgK,UAAUgB,oBAC3B,CACA3C,EAAakV,EAAkBtS,OAAO,CAACvF,EAAQwF,KACvC,IAAKxF,KAAWwF,IACrB,CAAC,EACL,CACA,GAAI/D,OAAOgW,KAAK9U,GAAYvF,OAAS,EAAG,CACvCjC,EAAaI,SAAS,MAAM2Y,YAAY6D,EAAiBC,iBAAkB,KAC5E,CACA,MAAMC,QAAmB7W,KAAKJ,cAAcpD,EAAa+E,EAAY,CACpEH,YAAaiB,EAAWjB,YACxBC,eAAgBgB,EAAWI,SAC3BvC,cAAemC,EAAWnC,gBAG3B,MAAM4W,QAAwB9W,KAAKgH,wBAAwB6P,EAAYxU,EAAW4E,+BAAiC,MACnH,GAAI6P,EAAiB,CACpB,UACOzU,EAAW0U,sBAAsBF,GACxC,CAAE,MAAO5T,GACRqS,EAAa0B,qBAAqB/D,EAAUC,kBAAkBC,iBACxDlR,EAAeY,kBAAkB,CAAEoU,uBAAwB,aAG3DjX,KAAKwH,eAAeqP,EAAY,CAAExM,WAAY,MAAQtQ,EAAciI,EAAeC,SACnFjC,KAAK+G,mBAAmBvK,EAAazC,GAE3CkK,EAAIhB,MAAM,+CAAgDA,GAC1D,MAAM/J,EAAUgK,UAAUgU,cAC3B,CAEAjC,EAAqB3I,UACrBgJ,EAAaW,cACbJ,EAAoBvZ,QAAQua,EAC7B,CACD,CAAE,MAAO5T,GAER,IAAK,CAAC/J,EAAUgK,UAAUgB,qBAAsBhL,EAAUgK,UAAUgU,gBAAgBlZ,SAASiF,GAAQ,CAEpGgS,EAAqB3I,UACrBgJ,EAAaW,cACbJ,EAAoBlC,OAAO1Q,EAC5B,CACD,CAAC,QACAqS,EAAaY,QAAQ,OACrBjU,EAAegL,aAAa,CAAEkK,sBAAuB7B,EAAa8B,UACnE,GAGD9B,EAAa+B,iBAAiB,CAAC,EAAGvB,GAElC,OAAOD,EAAoB5K,OAC5B,EAEArR,EAMMoN,wBAAN1L,eAAM0L,EAAwB6P,EAA4B5P,GACzD,MAAM2D,EAAgB,IAAIC,EAC1B,MAAMyM,EAAoBT,EAAW5M,aAErC,MAAMsN,EAAqBxB,IAC1B,MAAMyB,EAAiBzB,EAAMC,aAAa,WAC1C,MAAMyB,EAAU1B,EAAMC,aAAa,WACnC,GAAIwB,IAAmBX,EAAY,CAClCS,EAAkBI,sBAAsBH,GACxC3M,EAActO,QAAQmb,IAAY,KACnC,GAGDH,EAAkBK,sBAAsBJ,GAExC,MAAMK,QAA2BhN,EAAcK,QAC/C,IAAK2M,EAAoB,CACxB,IAAK3Q,EAA8B,EAEjC4P,EAAWgB,WAAaxb,QAAQC,WAAWwb,MAAM,SAAUC,GAC3D9T,EAAI+T,MAAM,4CAA6CD,EACxD,GACAT,EAAkBnI,eAClBmI,EAAkBnd,WAAWgV,aAAamI,EAAkB3W,oBAC5D,MAAMzH,EAAUgK,UAAUgU,cAC3B,CACA,OAAO,KACR,KAAO,OACAL,EAAWgB,UACjB,OAAO,IACR,CACD,EAEAje,EAUAoL,cAAA,SAAAA,EACCiT,EAGAC,EACAC,EACAC,GAEA,IAAIC,EAEJ,GAAIJ,GAAsBA,EAAmBK,eAAiBJ,EAAYK,cAAcva,SAAS,uBAAwB,CACxH,MAAMwa,EAAiBP,EAAmBK,cAAc,GACxDD,EAAaG,EAAeD,cAAcva,SAAS,eAChDwa,EAAe5c,UAAU4c,EAAe3c,YAAY,KAAO,GAC3D2B,SACJ,MAAO,GACNya,GACAA,EAAmBK,eACnBJ,EAAYK,cAAcva,SAAS,2BAClC,CACD,MAAMwa,EAAiBP,EAAmBK,cAAc,GACxDD,EAAaG,EAAeD,cAAcva,SAAS,mBAChDwa,EAAe5c,UAAU4c,EAAe3c,YAAY,KAAO,GAC3D2B,SACJ,KAAO,CACN6a,EACCF,GAAcA,EAAW7Y,YAAc9B,UACpC2a,EAAW7Y,UAAU,GAAG8Y,uEACxBD,EAAW7Y,UAAU,GAAG8Y,wDACxB5a,SACL,CACA,OAAO6a,CACR,EAEAze,EAcAsM,oCAAA,SAAAA,EACCiS,EACAC,EACAC,EACArW,GAEA,MAAMyW,EAAYN,GAAY7Y,UAAU,GAAG8Y,0CAE3C,MAAMnS,EAAQwS,GAAWpQ,KAAMqQ,GAAaC,EAAqBD,IAAaA,EAASE,OAAO1a,MAAM,IAAK,GAAG,KAAOma,IAChHQ,MAEH,OACC5S,GACAkS,GAAY7Y,UAAU,GAAG8Y,KAAaC,2CACtCrW,GAAe+G,QAAQ,2CAEzB,EAAC,OAAApP,CAAA,CAloDqB,GAqoDvB,MAAMmf,EAAY,IAAInf,EAAoB,OAC3Bmf,CAAS","ignoreList":[]}