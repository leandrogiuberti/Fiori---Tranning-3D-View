{"version":3,"file":"BusyLocker.js","names":["_iTimeoutInSeconds","_mLockCounters","_oReferenceDummy","getId","setBusy","bBusy","Log","info","getLockCountId","oReference","sPath","isLocked","getLockCountEntry","warning","sId","id","path","reference","count","deleteLockCountEntry","mLockCountEntry","applyLockState","isA","setProperty","undefined","clearTimeout","timeout","setTimeout","error","changeLockCount","iDelta","BusyLocker","lock","oModelOrControl","this","_updateLock","unlock"],"sources":["./BusyLocker.ts"],"sourcesContent":["import Log from \"sap/base/Log\";\nimport type BaseObject from \"sap/ui/base/Object\";\nimport type Control from \"sap/ui/core/Control\";\nimport type Model from \"sap/ui/model/Model\";\nimport type JSONModel from \"sap/ui/model/json/JSONModel\";\nexport type BaseObjectWithId = BaseObject & { getId(): string; setBusy?(busy: boolean): void };\nconst _iTimeoutInSeconds = 30,\n\t_mLockCounters: Record<string, LockCountEntry> = {},\n\t_oReferenceDummy = {\n\t\tgetId: function (): string {\n\t\t\treturn \"BusyLocker.ReferenceDummy\";\n\t\t},\n\t\tsetBusy: function (bBusy: boolean): void {\n\t\t\tLog.info(`setBusy(${bBusy}) triggered on dummy reference`);\n\t\t}\n\t};\nfunction getLockCountId(oReference: BaseObjectWithId | Model, sPath?: string): string {\n\treturn oReference.getId() + (sPath || \"/busy\");\n}\nfunction isLocked(oReference: BaseObjectWithId | Model, sPath?: string): boolean {\n\treturn getLockCountId(oReference, sPath) in _mLockCounters;\n}\nfunction getLockCountEntry(oReference: BaseObjectWithId | Model, sPath?: string): LockCountEntry {\n\tif (!oReference || !oReference.getId) {\n\t\tLog.warning(\"No reference for BusyLocker, using dummy reference\");\n\t\toReference = _oReferenceDummy as unknown as BaseObjectWithId;\n\t}\n\n\tsPath = sPath || \"/busy\";\n\tconst sId = getLockCountId(oReference, sPath);\n\n\tif (!(sId in _mLockCounters)) {\n\t\t_mLockCounters[sId] = {\n\t\t\tid: sId,\n\t\t\tpath: sPath,\n\t\t\treference: oReference,\n\t\t\tcount: 0\n\t\t};\n\t}\n\treturn _mLockCounters[sId];\n}\n/**\n * @param mLockCountEntry\n */\nfunction deleteLockCountEntry(mLockCountEntry: LockCountEntry): void {\n\tdelete _mLockCounters[mLockCountEntry.id];\n}\n\ntype LockCountEntry = {\n\tid: string;\n\tcount: number;\n\tpath: string;\n\ttimeout?: number;\n\treference: BaseObjectWithId | Model;\n};\nfunction applyLockState(mLockCountEntry: LockCountEntry): boolean {\n\tconst reference = mLockCountEntry.reference;\n\tconst bBusy = mLockCountEntry.count !== 0;\n\n\tif (reference.isA && reference.isA<JSONModel>(\"sap.ui.model.Model\")) {\n\t\treference.setProperty(mLockCountEntry.path, bBusy, undefined, true);\n\t} else if ((reference as Control).setBusy) {\n\t\t(reference as Control).setBusy(bBusy);\n\t}\n\n\tclearTimeout(mLockCountEntry.timeout);\n\tif (bBusy) {\n\t\tmLockCountEntry.timeout = setTimeout(function () {\n\t\t\tLog.error(\n\t\t\t\t`busy lock for ${mLockCountEntry.id} with value ${mLockCountEntry.count} timed out after ${_iTimeoutInSeconds} seconds!`\n\t\t\t);\n\t\t}, _iTimeoutInSeconds * 1000) as unknown as number;\n\t} else {\n\t\tdeleteLockCountEntry(mLockCountEntry);\n\t}\n\n\treturn bBusy;\n}\n\nfunction changeLockCount(mLockCountEntry: LockCountEntry, iDelta: number): void {\n\tif (iDelta === 0) {\n\t\tmLockCountEntry.count = 0;\n\t\tLog.info(`busy lock count '${mLockCountEntry.id}' was reset to 0`);\n\t} else {\n\t\tmLockCountEntry.count += iDelta;\n\t\tLog.info(`busy lock count '${mLockCountEntry.id}' is ${mLockCountEntry.count}`);\n\t}\n}\n\nconst BusyLocker = {\n\tlock: function (oModelOrControl: BaseObjectWithId | Model, sPath?: string): boolean {\n\t\treturn this._updateLock(oModelOrControl, sPath, 1);\n\t},\n\n\tunlock: function (oModelOrControl: BaseObjectWithId | Model, sPath?: string): boolean {\n\t\treturn this._updateLock(oModelOrControl, sPath, -1);\n\t},\n\n\tisLocked: function (oModelOrControl: BaseObjectWithId | Model, sPath?: string): boolean {\n\t\treturn isLocked(oModelOrControl, sPath);\n\t},\n\n\t_updateLock: function (oReference: BaseObjectWithId | Model, sPath: string | undefined, iDelta: number): boolean {\n\t\tconst mLockCountEntry = getLockCountEntry(oReference, sPath);\n\t\tchangeLockCount(mLockCountEntry, iDelta);\n\t\treturn applyLockState(mLockCountEntry);\n\t}\n};\n\nexport default BusyLocker;\n"],"mappings":";;;;wDAMA,MAAMA,EAAqB,GAC1BC,EAAiD,CAAC,EAClDC,EAAmB,CAClBC,MAAO,WACN,MAAO,2BACR,EACAC,QAAS,SAAUC,GAClBC,EAAIC,KAAK,WAAWF,kCACrB,GAEF,SAASG,EAAeC,EAAsCC,GAC7D,OAAOD,EAAWN,SAAWO,GAAS,QACvC,CACA,SAASC,EAASF,EAAsCC,GACvD,OAAOF,EAAeC,EAAYC,KAAUT,CAC7C,CACA,SAASW,EAAkBH,EAAsCC,GAChE,IAAKD,IAAeA,EAAWN,MAAO,CACrCG,EAAIO,QAAQ,sDACZJ,EAAaP,CACd,CAEAQ,EAAQA,GAAS,QACjB,MAAMI,EAAMN,EAAeC,EAAYC,GAEvC,KAAMI,KAAOb,GAAiB,CAC7BA,EAAea,GAAO,CACrBC,GAAID,EACJE,KAAMN,EACNO,UAAWR,EACXS,MAAO,EAET,CACA,OAAOjB,EAAea,EACvB,CAIA,SAASK,EAAqBC,UACtBnB,EAAemB,EAAgBL,GACvC,CASA,SAASM,EAAeD,GACvB,MAAMH,EAAYG,EAAgBH,UAClC,MAAMZ,EAAQe,EAAgBF,QAAU,EAExC,GAAID,EAAUK,KAAOL,EAAUK,IAAe,sBAAuB,CACpEL,EAAUM,YAAYH,EAAgBJ,KAAMX,EAAOmB,UAAW,KAC/D,MAAO,GAAKP,EAAsBb,QAAS,CACzCa,EAAsBb,QAAQC,EAChC,CAEAoB,aAAaL,EAAgBM,SAC7B,GAAIrB,EAAO,CACVe,EAAgBM,QAAUC,WAAW,WACpCrB,EAAIsB,MACH,iBAAiBR,EAAgBL,iBAAiBK,EAAgBF,yBAAyBlB,aAE7F,EAAGA,EAAqB,IACzB,KAAO,CACNmB,EAAqBC,EACtB,CAEA,OAAOf,CACR,CAEA,SAASwB,EAAgBT,EAAiCU,GACzD,GAAIA,IAAW,EAAG,CACjBV,EAAgBF,MAAQ,EACxBZ,EAAIC,KAAK,oBAAoBa,EAAgBL,qBAC9C,KAAO,CACNK,EAAgBF,OAASY,EACzBxB,EAAIC,KAAK,oBAAoBa,EAAgBL,UAAUK,EAAgBF,QACxE,CACD,CAEA,MAAMa,EAAa,CAClBC,KAAM,SAAUC,EAA2CvB,GAC1D,OAAOwB,KAAKC,YAAYF,EAAiBvB,EAAO,EACjD,EAEA0B,OAAQ,SAAUH,EAA2CvB,GAC5D,OAAOwB,KAAKC,YAAYF,EAAiBvB,GAAQ,EAClD,EAEAC,SAAU,SAAUsB,EAA2CvB,GAC9D,OAAOC,EAASsB,EAAiBvB,EAClC,EAEAyB,YAAa,SAAU1B,EAAsCC,EAA2BoB,GACvF,MAAMV,EAAkBR,EAAkBH,EAAYC,GACtDmB,EAAgBT,EAAiBU,GACjC,OAAOT,EAAeD,EACvB,GACC,OAEaW,CAAU","ignoreList":[]}