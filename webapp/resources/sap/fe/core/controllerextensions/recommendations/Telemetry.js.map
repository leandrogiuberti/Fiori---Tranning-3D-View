{"version":3,"file":"Telemetry.js","names":["Telemetry","this","resetData","_proto","prototype","updateData","key","value","telemetryData","increaseCount","updateResponseTimeInfo","timeTaken","totalRecommendationCalls","maxTimeTakenToReceiveRecommendations","minTimeTakenToReceiveRecommendations","totalTimeTaken","avgTimeTaken","numberOfTimesRecommendationsFetched","averageTimeTakenToReceiveRecommendations","numberOfTimesNoPlaceholderIsShownOnUI","numberOfRecommendedFields","numberOfTimesTopRecommendationsSelected","numberOfTimesNonTopRecommendationsSelected","numberOfTimesNonRecommendedValueWasSelected","numberOfFieldsAcceptedThroughAcceptButton","numberOfFieldsIgnoredThroughIgnoreButton","numberOfTimesEmptyRecommendations","numberofTimesFormatterCalled","totalNumberOfRecommendationsReceived","numberOfTimesFormatterNotCalled","storeData","view","Object","keys","length","getController","telemetry","storeAction","type","parameters","getData","updateDataFromRecommendationResponse","recommendations","i","recommendation","target","AIRecommendedFieldPath","AIRecommendedFieldValue","AIRecommendedFieldDescription","_AIAltvRecmddFldVals","updateTelemetryDataBasedOnUserSelection","fieldPath","selectedValue","recommendationsData","getModel","getProperty","fieldRecommData","valueIndexInRecommendations","additionalValues","findIndex","additionalValue"],"sources":["./Telemetry.ts"],"sourcesContent":["import type { FEView } from \"sap/fe/core/BaseController\";\nimport type View from \"sap/ui/core/mvc/View\";\nimport type JSONModel from \"sap/ui/model/json/JSONModel\";\nimport type { RecommendationInfo, StandardRecommendationResponse } from \"../../helpers/StandardRecommendationHelper\";\nimport type { RecommendationTelemetry } from \"../../services/TelemetryServiceFactory\";\n\nclass Telemetry {\n\tprivate telemetryData!: RecommendationTelemetry;\n\n\tpublic constructor() {\n\t\tthis.resetData();\n\t}\n\n\tpublic updateData(key: keyof RecommendationTelemetry, value: number): void {\n\t\tthis.telemetryData[key] = value;\n\t}\n\n\tpublic increaseCount(key: keyof RecommendationTelemetry): number {\n\t\treturn ++this.telemetryData[key];\n\t}\n\n\t/**\n\t * This function will update details about the recommendation calls like min, max or avarage time taken for a particular recommendation call.\n\t * @param timeTaken\n\t */\n\tpublic updateResponseTimeInfo(timeTaken: number): void {\n\t\tconst totalRecommendationCalls = this.increaseCount(\"numberOfTimesRecommendationsFetched\");\n\n\t\t// update max time taken\n\t\tif (timeTaken > this.telemetryData.maxTimeTakenToReceiveRecommendations) {\n\t\t\tthis.updateData(\"maxTimeTakenToReceiveRecommendations\", timeTaken);\n\t\t}\n\t\t// update min time taken\n\t\tif (\n\t\t\tthis.telemetryData.minTimeTakenToReceiveRecommendations === 0 ||\n\t\t\ttimeTaken < this.telemetryData.minTimeTakenToReceiveRecommendations\n\t\t) {\n\t\t\tthis.updateData(\"minTimeTakenToReceiveRecommendations\", timeTaken);\n\t\t}\n\n\t\tconst totalTimeTaken = this.telemetryData.totalTimeTaken + timeTaken;\n\t\tconst avgTimeTaken = totalTimeTaken / totalRecommendationCalls;\n\t\tthis.updateData(\"averageTimeTakenToReceiveRecommendations\", avgTimeTaken);\n\t\tthis.updateData(\"totalTimeTaken\", totalTimeTaken);\n\t}\n\n\tpublic resetData(): void {\n\t\tthis.telemetryData = {\n\t\t\tnumberOfTimesRecommendationsFetched: 0,\n\t\t\tmaxTimeTakenToReceiveRecommendations: 0,\n\t\t\tminTimeTakenToReceiveRecommendations: 0,\n\t\t\taverageTimeTakenToReceiveRecommendations: 0,\n\t\t\tnumberOfTimesNoPlaceholderIsShownOnUI: 0,\n\t\t\tnumberOfRecommendedFields: 0,\n\t\t\tnumberOfTimesTopRecommendationsSelected: 0,\n\t\t\tnumberOfTimesNonTopRecommendationsSelected: 0,\n\t\t\tnumberOfTimesNonRecommendedValueWasSelected: 0,\n\t\t\tnumberOfFieldsAcceptedThroughAcceptButton: 0,\n\t\t\tnumberOfFieldsIgnoredThroughIgnoreButton: 0,\n\t\t\tnumberOfTimesEmptyRecommendations: 0,\n\t\t\tnumberofTimesFormatterCalled: 0,\n\t\t\ttotalNumberOfRecommendationsReceived: 0,\n\t\t\tnumberOfTimesFormatterNotCalled: 0,\n\t\t\ttotalTimeTaken: 0\n\t\t};\n\t}\n\n\tpublic storeData(view: FEView): void {\n\t\tif (Object.keys(this.telemetryData).length) {\n\t\t\t// update telemetry information, as per data collected earlier, before sending to backend\n\t\t\tthis.telemetryData[\"numberOfTimesFormatterNotCalled\"] =\n\t\t\t\tthis.telemetryData[\"totalNumberOfRecommendationsReceived\"] - this.telemetryData[\"numberofTimesFormatterCalled\"];\n\t\t}\n\t\tview.getController().telemetry.storeAction({\n\t\t\ttype: \"FE.Recommendations\",\n\t\t\tparameters: this.telemetryData\n\t\t});\n\t}\n\n\tpublic getData(): RecommendationTelemetry {\n\t\treturn this.telemetryData;\n\t}\n\n\t/**\n\t * This function will update telemetry data based on response we got.\n\t * @param recommendations Recommendations obtained from response.\n\t */\n\tpublic updateDataFromRecommendationResponse(recommendations: StandardRecommendationResponse[]): void {\n\t\tfor (let i = 0; i < recommendations.length; i++) {\n\t\t\tconst recommendation = recommendations[i];\n\t\t\tconst target = recommendation.AIRecommendedFieldPath;\n\t\t\tif (!(recommendation.AIRecommendedFieldValue && recommendation.AIRecommendedFieldDescription)) {\n\t\t\t\tthis.increaseCount(\"numberOfTimesNoPlaceholderIsShownOnUI\");\n\t\t\t}\n\t\t\tif (target) {\n\t\t\t\tif (recommendation._AIAltvRecmddFldVals?.length) {\n\t\t\t\t\tthis.increaseCount(\"totalNumberOfRecommendationsReceived\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * This function will update data in telemetry as per top/non-top recommendation value was chosen or if non recommended value was chosen.\n\t * @param view\n\t * @param fieldPath\n\t * @param selectedValue\n\t */\n\tpublic updateTelemetryDataBasedOnUserSelection(view: View, fieldPath: string, selectedValue: string): void {\n\t\tconst recommendationsData = (view?.getModel(\"internal\") as JSONModel).getProperty(\"/recommendationsData\") as\n\t\t\t| RecommendationInfo\n\t\t\t| undefined;\n\t\tif (recommendationsData?.[fieldPath]) {\n\t\t\tconst fieldRecommData = recommendationsData[fieldPath];\n\t\t\tconst valueIndexInRecommendations = fieldRecommData.additionalValues?.findIndex(\n\t\t\t\t(additionalValue) => additionalValue.value === selectedValue\n\t\t\t);\n\n\t\t\tif (selectedValue == fieldRecommData.value) {\n\t\t\t\t// top recommendation was selected then store the data in telemetry\n\t\t\t\tthis.increaseCount(\"numberOfTimesTopRecommendationsSelected\");\n\t\t\t} else if (valueIndexInRecommendations !== -1) {\n\t\t\t\t// some other recommendation was selected\n\t\t\t\tthis.increaseCount(\"numberOfTimesNonTopRecommendationsSelected\");\n\t\t\t} else {\n\t\t\t\t// selected value is not from recommendations\n\t\t\t\tthis.increaseCount(\"numberOfTimesNonRecommendedValueWasSelected\");\n\t\t\t}\n\t\t}\n\t}\n}\nexport default Telemetry;\n"],"mappings":";;;;6CAMMA,EAAS,WAGd,SAAAA,IACCC,KAAKC,WACN,CAAC,IAAAC,EAAAH,EAAAI,UAAAD,EAEME,WAAP,SAAOA,EAAWC,EAAoCC,GACrDN,KAAKO,cAAcF,GAAOC,CAC3B,EAACJ,EAEMM,cAAP,SAAOA,EAAcH,GACpB,QAASL,KAAKO,cAAcF,EAC7B,EAEAH,EAIOO,uBAAP,SAAOA,EAAuBC,GAC7B,MAAMC,EAA2BX,KAAKQ,cAAc,uCAGpD,GAAIE,EAAYV,KAAKO,cAAcK,qCAAsC,CACxEZ,KAAKI,WAAW,uCAAwCM,EACzD,CAEA,GACCV,KAAKO,cAAcM,uCAAyC,GAC5DH,EAAYV,KAAKO,cAAcM,qCAC9B,CACDb,KAAKI,WAAW,uCAAwCM,EACzD,CAEA,MAAMI,EAAiBd,KAAKO,cAAcO,eAAiBJ,EAC3D,MAAMK,EAAeD,EAAiBH,EACtCX,KAAKI,WAAW,2CAA4CW,GAC5Df,KAAKI,WAAW,iBAAkBU,EACnC,EAACZ,EAEMD,UAAP,SAAOA,IACND,KAAKO,cAAgB,CACpBS,oCAAqC,EACrCJ,qCAAsC,EACtCC,qCAAsC,EACtCI,yCAA0C,EAC1CC,sCAAuC,EACvCC,0BAA2B,EAC3BC,wCAAyC,EACzCC,2CAA4C,EAC5CC,4CAA6C,EAC7CC,0CAA2C,EAC3CC,yCAA0C,EAC1CC,kCAAmC,EACnCC,6BAA8B,EAC9BC,qCAAsC,EACtCC,gCAAiC,EACjCd,eAAgB,EAElB,EAACZ,EAEM2B,UAAP,SAAOA,EAAUC,GAChB,GAAIC,OAAOC,KAAKhC,KAAKO,eAAe0B,OAAQ,CAE3CjC,KAAKO,cAAc,mCAClBP,KAAKO,cAAc,wCAA0CP,KAAKO,cAAc,+BAClF,CACAuB,EAAKI,gBAAgBC,UAAUC,YAAY,CAC1CC,KAAM,qBACNC,WAAYtC,KAAKO,eAEnB,EAACL,EAEMqC,QAAP,SAAOA,IACN,OAAOvC,KAAKO,aACb,EAEAL,EAIOsC,qCAAP,SAAOA,EAAqCC,GAC3C,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAgBR,OAAQS,IAAK,CAChD,MAAMC,EAAiBF,EAAgBC,GACvC,MAAME,EAASD,EAAeE,uBAC9B,KAAMF,EAAeG,yBAA2BH,EAAeI,+BAAgC,CAC9F/C,KAAKQ,cAAc,wCACpB,CACA,GAAIoC,EAAQ,CACX,GAAID,EAAeK,sBAAsBf,OAAQ,CAChDjC,KAAKQ,cAAc,uCACpB,CACD,CACD,CACD,EAEAN,EAMO+C,wCAAP,SAAOA,EAAwCnB,EAAYoB,EAAmBC,GAC7E,MAAMC,GAAuBtB,GAAMuB,SAAS,aAA0BC,YAAY,wBAGlF,GAAIF,IAAsBF,GAAY,CACrC,MAAMK,EAAkBH,EAAoBF,GAC5C,MAAMM,EAA8BD,EAAgBE,kBAAkBC,UACpEC,GAAoBA,EAAgBrD,QAAU6C,GAGhD,GAAIA,GAAiBI,EAAgBjD,MAAO,CAE3CN,KAAKQ,cAAc,0CACpB,MAAO,GAAIgD,KAAiC,EAAG,CAE9CxD,KAAKQ,cAAc,6CACpB,KAAO,CAENR,KAAKQ,cAAc,8CACpB,CACD,CACD,EAAC,OAAAT,CAAA,CA3Ha,GA2Hb,OAEaA,CAAS","ignoreList":[]}