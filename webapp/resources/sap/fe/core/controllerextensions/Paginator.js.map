{"version":3,"file":"Paginator.js","names":["Paginator","_dec","defineUI5Class","_dec2","publicExtension","_dec3","hookable","_dec4","_dec5","extensible","OverrideExecution","After","_dec6","_dec7","_dec8","_dec9","Instead","_class","_class2","_ControllerExtension","apply","this","arguments","_inheritsLoose","_proto","prototype","initialize","oBinding","oContext","onBeforeContextUpdate","oListBinding","iCurrentIndex","iIndexUpdate","onContextUpdate","determineContextNavigationType","async","context","Promise","resolve","ContextNavigationType","Internal","ControllerExtension","_applyDecoratedDescriptor","Object","getOwnPropertyDescriptor"],"sources":["./Paginator.ts"],"sourcesContent":["import { defineUI5Class, extensible, publicExtension } from \"sap/fe/base/ClassSupport\";\nimport { hookable } from \"sap/fe/base/HookSupport\";\nimport type PageController from \"sap/fe/core/PageController\";\nimport ControllerExtension from \"sap/ui/core/mvc/ControllerExtension\";\nimport OverrideExecution from \"sap/ui/core/mvc/OverrideExecution\";\nimport type { default as Context } from \"sap/ui/model/odata/v4/Context\";\nimport type ODataListBinding from \"sap/ui/model/odata/v4/ODataListBinding\";\nimport { ContextNavigationType } from \"../library\";\n\n/**\n * Controller extension providing hooks for the navigation using paginators\n * @hideconstructor\n * @public\n * @since 1.94.0\n */\n@defineUI5Class(\"sap.fe.core.controllerextensions.Paginator\")\nclass Paginator extends ControllerExtension {\n\tprotected base!: PageController;\n\n\t/**\n\t * Initiates the paginator control.\n\t * @param oBinding ODataListBinding object\n\t * @param oContext Current context where the navigation is initiated\n\t * @public\n\t * @since 1.94.0\n\t */\n\t@publicExtension()\n\t@hookable(\"Before\")\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tinitialize(oBinding?: ODataListBinding, oContext?: Context): void {}\n\n\t/**\n\t * Called before context update.\n\t * @param oListBinding ODataListBinding object\n\t * @param iCurrentIndex Current index of context in listBinding from where the navigation is initiated\n\t * @param iIndexUpdate The delta index for update\n\t * @returns `true` to prevent the update of current context.\n\t */\n\t@publicExtension()\n\t@extensible(OverrideExecution.After)\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tonBeforeContextUpdate(oListBinding: ODataListBinding, iCurrentIndex: number, iIndexUpdate: number): boolean {\n\t\treturn false;\n\t}\n\n\t/**\n\t * Returns the updated context after the paginator operation.\n\t * @param oContext Final context returned after the paginator action\n\t * @public\n\t * @since 1.94.0\n\t */\n\t@publicExtension()\n\t@extensible(OverrideExecution.After)\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tonContextUpdate(oContext: Context): void {\n\t\t//To be overridden by the application\n\t}\n\n\t/**\n\t * This method is invoked whenever a context is loaded using the paginator buttons. It determines whether the context supports navigation. The method must return one of the following:\n\t * ContextNavigationType.None: If the context is not navigable.\n\t * ContextNavigationType.Internal: If the context supports internal navigation within the same application to a detail view, such as an object page or a subobject page.\n\t * ContextNavigationType.External: If the context navigates to an external application.\n\t * The paginator buttons only allow navigation to contexts with internal navigation. Contexts with None or External navigation are skipped.\n\t * @param context Object containing the context to be navigated.\n\t * @returns A Promise which should resolve to ContextNavigationType enum.\n\t * @public\n\t * @since 1.138.0\n\t */\n\t@publicExtension()\n\t@extensible(OverrideExecution.Instead)\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tasync determineContextNavigationType(context: Context): Promise<ContextNavigationType> {\n\t\treturn Promise.resolve(ContextNavigationType.Internal);\n\t}\n}\n\nexport default Paginator;\n"],"mappings":";;;;47BASA,IAOMA,GAASC,EADdC,EAAe,8CAA6CC,EAW3DC,IAAiBC,EACjBC,EAAS,UAASC,EAWlBH,IAAiBI,EACjBC,EAAWC,EAAkBC,OAAMC,EAYnCR,IAAiBS,EACjBJ,EAAWC,EAAkBC,OAAMG,EAiBnCV,IAAiBW,EACjBN,EAAWC,EAAkBM,SAAQf,EAAAgB,GAAAC,EAAA,SAAAC,GAAA,SAAAnB,IAAA,OAAAmB,EAAAC,MAAAC,KAAAC,YAAAD,IAAA,CAAAE,EAAAvB,EAAAmB,GAAA,IAAAK,EAAAxB,EAAAyB,UAnDtCD,EAUAE,WAHA,SAGAA,EAAWC,EAA6BC,GAA2B,EAEnEJ,EAUAK,sBAHA,SAGAA,EAAsBC,EAAgCC,EAAuBC,GAC5E,OAAO,KACR,EAEAR,EASAS,gBAHA,SAGAA,EAAgBL,GACf,EAGDJ,EAcMU,+BAHNC,eAGMD,EAA+BE,GACpC,OAAOC,QAAQC,QAAQC,EAAsBC,SAC9C,EAAC,OAAAxC,CAAA,CAJqC,CAtDfyC,GAAmBC,EAAAxB,EAAAO,UAAA,cAAAtB,EAAAE,GAAAsC,OAAAC,yBAAA1B,EAAAO,UAAA,cAAAP,EAAAO,WAAAiB,EAAAxB,EAAAO,UAAA,yBAAAlB,EAAAC,GAAAmC,OAAAC,yBAAA1B,EAAAO,UAAA,yBAAAP,EAAAO,WAAAiB,EAAAxB,EAAAO,UAAA,mBAAAb,EAAAC,GAAA8B,OAAAC,yBAAA1B,EAAAO,UAAA,mBAAAP,EAAAO,WAAAiB,EAAAxB,EAAAO,UAAA,kCAAAX,EAAAC,GAAA4B,OAAAC,yBAAA1B,EAAAO,UAAA,kCAAAP,EAAAO,WAAAP,KAAAD,GAAA,OA6D5BjB,CAAS","ignoreList":[]}