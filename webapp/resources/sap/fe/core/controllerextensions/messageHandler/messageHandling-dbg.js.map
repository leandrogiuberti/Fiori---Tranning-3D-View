{"version":3,"names":["ButtonType","MLib","aResolveFunctions","dialogControl","oBackButton","messageView","fnFormatTechnicalDetails","sPreviousGroupName","insertDetail","oProperty","property","substring","Math","max","lastIndexOf","insertGroupName","sHTML","groupName","getPaths","sTD","forEach","fnFormatDescription","fnGetHighestMessagePriority","aMessages","sMessagePriority","MessageType","None","iLength","length","oMessageCount","Error","Warning","Success","Information","i","getType","fnModifyETagMessagesOnly","oResourceBundle","concurrentEditFlag","Messaging","getMessageModel","getObject","bMessagesModified","sEtagMessage","oMessage","oTechnicalDetails","getTechnicalDetails","httpStatus","isConcurrentModification","getText","removeMessages","setMessage","setTargets","addMessages","dialogCloseHandler","close","setVisible","msgView","getContent","oMessageDialogModel","getModel","setData","removeUnboundTransitionMessages","getRetryAfterMessage","bMessageDialog","dNow","Date","Library","getResourceBundleFor","sRetryAfterMessage","retryAfter","dRetryAfter","oDateFormat","getFullYear","DateFormat","getDateTimeInstance","pattern","format","getMonth","getDate","hasTransitionErrorsOrWarnings","getMessages","undefined","some","message","prepareMessageViewForDialog","bStrictHandlingFlow","multi412","oMessageTemplate","descriptionBinding","technicalDetailsBinding","MessageItem","counter","path","title","subtitle","longtextUrl","type","description","markupDescription","MessageView","showDetailsPageHeader","itemSelect","items","template","setGroupItems","Button","icon","IconPool","getIconURI","visible","press","navigateBack","setModel","isNonTechnicalMessage","technicalDetails","originalMessage","getCode","getTransitionMessagesForUIDecision","showBoundTransition","_context","transitionMessages","concat","executeOnBeforeShowMessages","onBeforeShowMessage","messagesToShow","uiElementToUse","fnGetMsgSubtitle","showBoundMessages","showMessageParameters","showMessageDialog","showMessageBox","showChangeSetErrorDialog","filteredMessages","fnGetMessageSubtitle","containsBoundTransistion","containsBoundTransition","getUIDecisions","customMessages","context","arguments","control","actionName","viewType","showStateMessages","messageDialogParameter","resourceModel","messageHandlder","addCustomMessages","call","uiDecisionIntermittent","filters","getFiltersForMessages","getMessagesToShow","filterContextBoundMessages","processMessagesFromChangesetFailure","hasEtagMessage","modifyETagMessagesOnly","checkIfAllAreSameSuccessMessages","genericSuccessMessage","addGenericSuccessMessage","messageToShow","getDescription","getDescriptionUrl","messageHandling","updateMessageObjectGroupName","contextNeedsEtagRefresh","showMessageDialogParameter","selectionContexts","aSelectedContexts","Array","isArray","boundActionName","entitySetName","entitySet","includes","split","suffixResourceKey","Message","target","persistent","code","referenceMsg","checkFailed","msg","idx","getMessage","getAdditionalText","showMessagesInUI","uiDecisions","Promise","resolve","showMessageToast","showMessageDialogControl","showMessageBoxControl","Filter","operator","FilterOperator","NE","value1","isNonTechnicalMessageFilter","test","fnCheckControlIdInDialog","aControlIds","isMessageOutOfParameterDialog","push","caseSensitive","EQ","getTargets","and","_ref","retMessages","genericMsgs","nonGenericMsgs","fe","feTechnicalDetails","changeSetPreTextForSingleError","preText","techDetailsForNonGenericMessage","singleErrorPreText","singleGenericMessageId","getId","existingTechDetails","setTechnicalDetails","messageCode","text","getSorterForMessages","Sorter","obj1","obj2","rankA","getMessageRank","rankB","transistionMessages","listBinding","bindList","currentContexts","getCurrentContexts","messages","map","currentContext","oUniqueObj","filter","obj","MessageToast","show","uiDecision","runToTest","highestPriority","highestPriorityText","resourceBundle","strictHandlingFlow","messageDialogModel","JSONModel","messageObject","sorter","getBinding","sort","isOpen","Dialog","resizable","endButton","escapeHandler","completionPromise","customHeader","Bar","contentMiddle","Text","contentLeft","contentWidth","contentHeight","verticalScrolling","closeOnNavigation","afterClose","item","removeAllContent","addContent","setBeginButton","hasPendingChanges","resetChanges","refresh","Emphasized","destroyBeginButton","getItems","getTranslatedTextForMessageDialog","setState","getCustomHeader","getContentMiddle","setText","open","messageTechnicalDetails","retryAfterMessage","startTag","closeTag","formattedTextString","messageHeader","messageFormatted","replaceAll","formattedText","FormattedText","htmlText","ManagedObject","escapeSettingsValue","showMessageBoxPerType","onClose","closeMessageBox","bind","messageShown","callBack","messagesToRemove","allMsgs","getData","genericMessage","find","MessageBox","error","warning","success","information","aModelDataArray","sActionName","aModelData","generalGroupText","isA","setGroupNameLRTable","setGroupNameOPDisplayMode","getLastActionTextAndActionName","oElem","oRowBinding","getRowBinding","sElemeBindingPath","getPath","indexOf","allRowContexts","rowContext","contextPath","identifierColumn","getParent","getIdentifierColumn","rowIdentifier","columnPropertyName","getTableColProperty","sTableTargetColName","getTableColInfo","getHeader","updateAddtionalTextForMessageInOPTable","mdcTable","targetTableInfo","getContexts","columnNameSuffix","setAdditionalText","updateHeaderNameForMessageInOPTable","subsection","headerName","getHeaderVisible","tableHeader","getTitle","setGroupNameOPTableDisplayMode","viewContext","groupNameIsGeneral","setSectionNameInGroup","childTableElement","findElements","oElement","getTableColumnDataAndSetSubtile","fnCallbackSetGroupName","oTargetTableInfo","oViewContext","getBindingContext","opLayout","bIsGeneralGroupName","getVisibleSectionsFromObjectPageLayout","oSection","subSections","getSubSections","oSubSection","sLastActionText","toString","aMessage","oTable","fnSetGroupName","getTableAndTargetInfo","sControlId","bIsCreationRow","oTableRowContext","getControlIds","sId","isControlInTable","oControl","UI5Element","getElementById","isControlPartOfCreationRow","getPersistent","subTitle","getMessageSubtitle","oTableRowBindingContexts","tableRowBindingContexts","tableRowContext","tableTargetColName","table","isCreationRow","targetedControl","messageSubtitle","rowSubtitleValue","getResourceModel","tableColProperty","getTableColumnVisibilityInfo","colFromTableSettings","fetchColumnInfo","isInactive","label","tableColBindingContextTextAnnotation","getTableColBindingContextForTextAnnotation","tableColTextAnnotationPath","tableColTextArrangement","getValue","getTableColValue","oColumnInfo","determineColumnInfo","sColumnIndicator","sColumnValue","bindingContext","key","oModel","oMetaModel","getMetaModel","sMetaPath","getMetaPath","createBindingContext","sColNameFromMessageObj","pop","getKeyColumnInfo","oColFromTableSettings","availability","oParentControl","sHighestPriority","removeTransitionMessages","removeBoundTransitionMessages","sPathToBeRemoved","getMessagesFromMessageModel","oMessageModel","startsWith","oContext","bBoundMessages","bTransitionOnly","aTransitionMessages","backendMessages","aMessagesToBeDeleted","setMessageSubtitle","aContexts","additionalText","subtitleColumn","errorContext","oObjectPageLayout","getSections","getVisible","getControlFromMessageRelatingToSubSection","subSection","oMessageObject","fnFilterUponIds","a","b","oContextPath","fnRegExpescape","s","replace","contextPathToEscape","RegExp","sTableTargetColProperty","oTableTargetCol","getColumns","column","getPropertyKey","oCustomColumn","getControlDelegate","getColumnsFor","oColumn","propertyInfos","name","aColumns","columnDefinition","propertyInfo","bIsTableTargetColVisible","oTableColInfo","oItem","createSectionGroupName","section","bMultipleSubSections","includeTableGroupName","bIsOrphanElement","aElements","oParentElement","getMessagesForContext","controlIds","errorFieldControl","index","Infinity","errorControlId","controlId","fieldRankinDialog","focus","removeTransistionMessageForContext","messagesInModel","isMessageStripMessage","isSingleTarget","isTargetMatching","isTransitionMessage","removeContextMessagesfromModel","contexts","boundContextMessages","removeMessagesForActionParameterDialog","messagesToBeRemoved","removeAllTransitionMessagesForContext","messageTargets"],"sourceRoot":".","sources":["messageHandling.ts"],"sourcesContent":["import type ResourceBundle from \"sap/base/i18n/ResourceBundle\";\nimport type ResourceModel from \"sap/fe/core/ResourceModel\";\nimport type MessageHandler from \"sap/fe/core/controllerextensions/MessageHandler\";\nimport type { CustomMessage, ShowMessageDialogParameter } from \"sap/fe/core/controllerextensions/MessageHandler\";\nimport { getResourceModel } from \"sap/fe/core/helpers/ResourceModelHelper\";\nimport type Field from \"sap/fe/macros/Field\";\nimport type TableAPI from \"sap/fe/macros/table/TableAPI\";\nimport type { TableColumnProperties } from \"sap/fe/macros/table/TableAPI\";\nimport type TableDelegate from \"sap/fe/macros/table/delegates/TableDelegate\";\nimport Bar from \"sap/m/Bar\";\nimport Button from \"sap/m/Button\";\nimport Dialog from \"sap/m/Dialog\";\nimport FormattedText from \"sap/m/FormattedText\";\nimport MessageBox from \"sap/m/MessageBox\";\nimport MessageItem from \"sap/m/MessageItem\";\nimport MessageToast from \"sap/m/MessageToast\";\nimport MessageView from \"sap/m/MessageView\";\nimport type Table from \"sap/m/Table\";\nimport Text from \"sap/m/Text\";\nimport MLib from \"sap/m/library\";\nimport ManagedObject from \"sap/ui/base/ManagedObject\";\nimport type Control from \"sap/ui/core/Control\";\nimport UI5Element from \"sap/ui/core/Element\";\nimport IconPool from \"sap/ui/core/IconPool\";\nimport Library from \"sap/ui/core/Lib\";\nimport Messaging from \"sap/ui/core/Messaging\";\nimport DateFormat from \"sap/ui/core/format/DateFormat\";\nimport Message from \"sap/ui/core/message/Message\";\nimport MessageType from \"sap/ui/core/message/MessageType\";\nimport type View from \"sap/ui/core/mvc/View\";\nimport type MDCTable from \"sap/ui/mdc/Table\";\nimport type Column from \"sap/ui/mdc/table/Column\";\nimport type Binding from \"sap/ui/model/Binding\";\nimport type Context from \"sap/ui/model/Context\";\nimport Filter from \"sap/ui/model/Filter\";\nimport FilterOperator from \"sap/ui/model/FilterOperator\";\nimport Sorter from \"sap/ui/model/Sorter\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\nimport type MessageModel from \"sap/ui/model/message/MessageModel\";\nimport type ODataV4Context from \"sap/ui/model/odata/v4/Context\";\nimport type ODataListBinding from \"sap/ui/model/odata/v4/ODataListBinding\";\nimport type ODataMetaModel from \"sap/ui/model/odata/v4/ODataMetaModel\";\nimport type UITable from \"sap/ui/table/Table\";\nimport type ObjectPageLayout from \"sap/uxap/ObjectPageLayout\";\nimport type ObjectPageSection from \"sap/uxap/ObjectPageSection\";\nimport type ObjectPageSubSection from \"sap/uxap/ObjectPageSubSection\";\nimport type { AnnotationTableColumn, CustomBasedTableColumn, TableColumn } from \"../../converters/controls/Common/table/Columns\";\n\nconst ButtonType = MLib.ButtonType;\nlet aResolveFunctions: ((param1: void | Dialog) => void)[] = [];\nlet dialogControl: Dialog;\nlet oBackButton: Button;\nlet messageView: MessageView;\n\nexport type MessageWithHeader = Message & {\n\theaderName?: string;\n\ttarget?: string;\n\tadditionalText?: string;\n};\n\nexport type TargetTableInfoType = {\n\toTableRowBindingContexts: ODataV4Context[];\n\toTableRowContext: ODataV4Context | undefined;\n\tsTableTargetColName: string | undefined;\n\tsTableTargetColProperty: string | undefined;\n\ttableHeader?: string;\n};\n\ntype ColInfoAndSubtitleType = {\n\toTargetTableInfo: TargetTableInfoType;\n\tsubTitle?: string | null;\n};\n\ntype ColumnInfoType = {\n\tsColumnValue: string | undefined;\n\tsColumnIndicator: string;\n};\n\nexport type SupportedUIElement = \"Dialog\" | \"Box\" | \"Toast\" | \"None\";\n\n// FE related technical information to be stored with the message.\n// Like, this would be used to store pre-text with the message when it is the only message to be shown in UI.\ntype FEMessageTechnicalDetails = object & {\n\tfe?: {\n\t\tchangeSetPreTextForSingleError?: string;\n\t\tsingleErrorPreText?: string;\n\t\tsingleGenericMessageId?: string;\n\t};\n};\n\nexport type MessageUIDecisions = {\n\tuiElementToUse: SupportedUIElement;\n\tmessagesToShow: Message[];\n\tcontainsBoundTransition: boolean;\n\tcontextNeedsEtagRefresh?: ODataV4Context;\n};\n\nexport type messageHandlingType = {\n\tisNonTechnicalMessage: (message: Message) => boolean;\n\tgetMessages: (bBoundMessages?: boolean, bTransitionOnly?: boolean, sPathToBeRemoved?: string) => Message[];\n\thasTransitionErrorsOrWarnings(): boolean;\n\tgetUIDecisions: (\n\t\tcustomMessages: CustomMessage[] | undefined,\n\t\tcontext: ODataV4Context,\n\t\tshowBoundTransition?: boolean,\n\t\tconcurrentEditFlag?: boolean,\n\t\tcontrol?: Control,\n\t\tactionName?: string | undefined,\n\t\tonBeforeShowMessage?: (messages: Message[], showMessageParameters: ShowMessageParameters) => ShowMessageParameters,\n\t\tviewType?: string,\n\t\tshowStateMessages?: boolean,\n\t\tmessageDialogParameter?: ShowMessageDialogParameter,\n\t\tresourceModel?: ResourceModel,\n\t\tmessageHandler?: MessageHandler\n\t) => MessageUIDecisions;\n\tshowMessagesInUI: (uiDecision: MessageUIDecisions) => Promise<void>;\n\tremoveUnboundTransitionMessages: () => void;\n\tmodifyETagMessagesOnly: (oResourceBundle: ResourceBundle, concurrentEditFlag: boolean | undefined) => boolean;\n\tremoveBoundTransitionMessages: (sPathToBeRemoved?: string) => void;\n\tgetRetryAfterMessage: (oMessage: Message, bMessageDialog?: true) => string | undefined;\n\tprepareMessageViewForDialog: (\n\t\toMessageDialogModel: JSONModel,\n\t\tbStrictHandlingFlow: boolean,\n\t\tisMulti412?: boolean\n\t) => {\n\t\tmessageView: MessageView;\n\t\toBackButton: Button;\n\t};\n\tsetMessageSubtitle: (oTable: MDCTable, aContexts: Context[], message: MessageWithHeader) => void;\n\tgetVisibleSectionsFromObjectPageLayout: (oObjectPageLayout: Control) => ObjectPageSection[];\n\tgetControlFromMessageRelatingToSubSection: (subSection: ObjectPageSubSection, oMessageObject: MessageWithHeader) => UI5Element[];\n\tfnFilterUponIds: (aControlIds: string[], oItem: UI5Element) => boolean;\n\tgetTableAndTargetInfo: (\n\t\toTable: MDCTable,\n\t\toMessageObject: MessageWithHeader,\n\t\toElement: UI5Element | undefined,\n\t\toRowBinding: Binding\n\t) => TargetTableInfoType;\n\tcreateSectionGroupName: (\n\t\tsection: ObjectPageSection,\n\t\tsubSection: ObjectPageSubSection,\n\t\tbMultipleSubSections: boolean,\n\t\toTargetTableInfo: TargetTableInfoType,\n\t\tresourceModel: ResourceModel,\n\t\tincludeTableGroupName?: boolean\n\t) => string;\n\tbIsOrphanElement: (oElement: UI5Element, aElements: UI5Element[]) => boolean;\n\tgetLastActionTextAndActionName: (sActionName: string | undefined) => string;\n\tgetTableColumnDataAndSetSubtile: (\n\t\taMessage: MessageWithHeader,\n\t\toTable: MDCTable,\n\t\toElement: UI5Element | undefined,\n\t\toRowBinding: Binding,\n\t\tsActionName: string | undefined,\n\t\tsetSectionNameInGroup: boolean,\n\t\tfnCallbackSetGroupName: Function\n\t) => ColInfoAndSubtitleType;\n\tgetTableColInfo: (\n\t\toTable: MDCTable,\n\t\tsTableTargetColProperty: string\n\t) => { sTableTargetColName: string | undefined; sTableTargetColProperty: string | undefined };\n\tgetTableColProperty: (oTable: Control, oMessageObject: MessageWithHeader, oContextPath?: string | RegExp) => string;\n\tgetMessageSubtitle: (\n\t\tmessage: MessageWithHeader,\n\t\toTableRowBindingContexts: ODataV4Context[],\n\t\toTableRowContext: ODataV4Context | undefined,\n\t\tsTableTargetColName: string | undefined,\n\t\toTable: MDCTable,\n\t\tbIsCreationRow: boolean | undefined,\n\t\toTargetedControl?: Control\n\t) => string | null | undefined;\n\tdetermineColumnInfo: (oColFromTableSettings: TableColumn | undefined, resourceModel: ResourceModel) => ColumnInfoType;\n\tfetchColumnInfo: (oMessage: MessageWithHeader, oTable: MDCTable) => TableColumn | undefined;\n\tgetTableColBindingContextForTextAnnotation: (\n\t\ttable: MDCTable,\n\t\ttableRowContext: ODataV4Context | undefined,\n\t\ttableColProperty: TableColumnProperties\n\t) => Context | null | undefined;\n\tgetMessageRank: (obj: MessageWithHeader) => number;\n\tfnCallbackSetGroupName: (aMessage: MessageWithHeader, sActionName: string | undefined, bIsGeneralGroupName?: boolean) => void;\n\tsetGroupNameOPDisplayMode: (aModelData: MessageWithHeader, sActionName: string | undefined, control: View) => void;\n\tupdateMessageObjectGroupName: (\n\t\tmessagesToShow: MessageWithHeader[],\n\t\tcontrol: Control | undefined,\n\t\tsActionName: string | undefined,\n\t\tviewType: string | undefined\n\t) => void;\n\tsetGroupNameLRTable: (control: Control | undefined, aModelData: MessageWithHeader, sActionName: string | undefined) => void;\n\tisControlInTable: (oTable: MDCTable, sControlId: string) => UI5Element[] | boolean;\n\tisControlPartOfCreationRow: (oControl: UI5Element | undefined) => boolean;\n\tgetFiltersForMessages: (showBoundTransition: boolean, showStateMessages?: boolean) => Filter[];\n\tshowMessageToast: (message: Message) => Promise<void>;\n\tshowMessageDialogControl: (uiDecisions: MessageUIDecisions, runToTest?: boolean) => Promise<void | Dialog>;\n\tshowMessageBoxControl: (uiDecisions: MessageUIDecisions) => Promise<void>;\n\tgetMessagesForContext: (context: ODataV4Context) => Message[];\n\tisMessageOutOfParameterDialog: (aControlIds: string[]) => boolean;\n\tremoveContextMessagesfromModel: (messages?: Message[], context?: Context[]) => void;\n\tremoveMessagesForActionParameterDialog: (Messages: Message[]) => Message[];\n\tsetGroupNameOPTableDisplayMode(\n\t\tsubsection: ObjectPageSubSection,\n\t\tmdcTable: MDCTable,\n\t\tmessage: MessageWithHeader,\n\t\tviewContext: Context | null | undefined,\n\t\tgroupNameIsGeneral: boolean,\n\t\tactionName?: string\n\t): boolean;\n\tupdateAddtionalTextForMessageInOPTable(mdcTable: MDCTable, message: MessageWithHeader, targetTableInfo: TargetTableInfoType): void;\n\tupdateHeaderNameForMessageInOPTable(\n\t\tsubsection: ObjectPageSubSection,\n\t\tmdcTable: MDCTable,\n\t\tmessage: MessageWithHeader,\n\t\ttargetTableInfo: TargetTableInfoType\n\t): void;\n\tcloseMessageBox(messageShown: MessageWithHeader, callBack: (value: void) => void, singleGenericMessageId: string): void;\n\tremoveTransistionMessageForContext: (oContext: Context) => void;\n\tcheckIfAllAreSameSuccessMessages: (messagesToShow: MessageWithHeader[]) => boolean;\n\taddGenericSuccessMessage: (\n\t\tresourceModel: ResourceModel,\n\t\tshowMessageDialogParameter?: ShowMessageDialogParameter\n\t) => MessageWithHeader | undefined;\n\tremoveAllTransitionMessagesForContext: (context: Context) => void;\n};\n\nfunction fnFormatTechnicalDetails(): string {\n\tlet sPreviousGroupName: string;\n\n\t// Insert technical detail if it exists\n\tfunction insertDetail(oProperty: { groupName: string; property: string }): string {\n\t\treturn oProperty.property\n\t\t\t? \"( ${\" +\n\t\t\t\t\toProperty.property +\n\t\t\t\t\t'} ? (\"<p>' +\n\t\t\t\t\toProperty.property.substring(Math.max(oProperty.property.lastIndexOf(\"/\"), oProperty.property.lastIndexOf(\".\")) + 1) +\n\t\t\t\t\t' : \" + ' +\n\t\t\t\t\t\"${\" +\n\t\t\t\t\toProperty.property +\n\t\t\t\t\t'} + \"</p>\") : \"\" )'\n\t\t\t: \"\";\n\t}\n\t// Insert groupname if it exists\n\tfunction insertGroupName(oProperty: { groupName: string; property: string }): string {\n\t\tlet sHTML = \"\";\n\t\tif (oProperty.groupName && oProperty.property && oProperty.groupName !== sPreviousGroupName) {\n\t\t\tsHTML += \"( ${\" + oProperty.property + '} ? \"<br><h3>' + oProperty.groupName + '</h3>\" : \"\" ) + ';\n\t\t\tsPreviousGroupName = oProperty.groupName;\n\t\t}\n\t\treturn sHTML;\n\t}\n\n\t// List of technical details to be shown\n\tfunction getPaths(): { groupName: string; property: string }[] {\n\t\tconst sTD = \"technicalDetails\"; // name of property in message model data for technical details\n\t\treturn [\n\t\t\t{ groupName: \"\", property: `${sTD}/status` },\n\t\t\t{ groupName: \"\", property: `${sTD}/statusText` },\n\t\t\t{ groupName: \"Application\", property: `${sTD}/error/@SAP__common.Application/ComponentId` },\n\t\t\t{ groupName: \"Application\", property: `${sTD}/error/@SAP__common.Application/ServiceId` },\n\t\t\t{ groupName: \"Application\", property: `${sTD}/error/@SAP__common.Application/ServiceRepository` },\n\t\t\t{ groupName: \"Application\", property: `${sTD}/error/@SAP__common.Application/ServiceVersion` },\n\t\t\t{ groupName: \"ErrorResolution\", property: `${sTD}/error/@SAP__common.ErrorResolution/Analysis` },\n\t\t\t{ groupName: \"ErrorResolution\", property: `${sTD}/error/@SAP__common.ErrorResolution/Note` },\n\t\t\t{ groupName: \"ErrorResolution\", property: `${sTD}/error/@SAP__common.ErrorResolution/DetailedNote` },\n\t\t\t{ groupName: \"ErrorResolution\", property: `${sTD}/error/@SAP__common.ExceptionCategory` },\n\t\t\t{ groupName: \"ErrorResolution\", property: `${sTD}/error/@SAP__common.TimeStamp` },\n\t\t\t{ groupName: \"ErrorResolution\", property: `${sTD}/error/@SAP__common.TransactionId` },\n\t\t\t{ groupName: \"Messages\", property: `${sTD}/error/code` },\n\t\t\t{ groupName: \"Messages\", property: `${sTD}/error/message` }\n\t\t];\n\t}\n\n\tlet sHTML = \"Object.keys(\" + \"${technicalDetails}\" + ').length > 0 ? \"<h2>Technical Details</h2>\" : \"\" ';\n\tgetPaths().forEach(function (oProperty: { groupName: string; property: string }) {\n\t\tsHTML = `${sHTML + insertGroupName(oProperty)}${insertDetail(oProperty)} + `;\n\t});\n\treturn sHTML;\n}\nfunction fnFormatDescription(): string {\n\treturn \"(${\" + \"description} ? (${\" + 'description}) : \"\")';\n}\n/**\n * Calculates the highest priority message type(Error/Warning/Success/Information) from the available messages.\n * @param [aMessages] Messages list\n * @returns Highest priority message from the available messages\n */\nfunction fnGetHighestMessagePriority(aMessages: MessageItem[]): MessageType {\n\tlet sMessagePriority = MessageType.None;\n\tconst iLength = aMessages.length;\n\tconst oMessageCount = { Error: 0, Warning: 0, Success: 0, Information: 0 };\n\n\tfor (let i = 0; i < iLength; i++) {\n\t\t++oMessageCount[aMessages[i].getType() as keyof typeof oMessageCount];\n\t}\n\tif (oMessageCount[MessageType.Error] > 0) {\n\t\tsMessagePriority = MessageType.Error;\n\t} else if (oMessageCount[MessageType.Warning] > 0) {\n\t\tsMessagePriority = MessageType.Warning;\n\t} else if (oMessageCount[MessageType.Success] > 0) {\n\t\tsMessagePriority = MessageType.Success;\n\t} else if (oMessageCount[MessageType.Information] > 0) {\n\t\tsMessagePriority = MessageType.Information;\n\t}\n\treturn sMessagePriority;\n}\n// function which modify e-Tag messages only.\n// returns : true, if any e-Tag message is modified, otherwise false.\nfunction fnModifyETagMessagesOnly(oResourceBundle: ResourceBundle, concurrentEditFlag: boolean | undefined): boolean {\n\tconst aMessages = Messaging.getMessageModel().getObject(\"/\");\n\tlet bMessagesModified = false;\n\tlet sEtagMessage = \"\";\n\taMessages.forEach(function (oMessage: Message, i: number) {\n\t\tconst oTechnicalDetails = oMessage.getTechnicalDetails && (oMessage.getTechnicalDetails() as MessageTechnicalDetails);\n\t\tif (oTechnicalDetails && oTechnicalDetails.httpStatus === 412 && oTechnicalDetails.isConcurrentModification) {\n\t\t\tif (concurrentEditFlag) {\n\t\t\t\tsEtagMessage =\n\t\t\t\t\tsEtagMessage || oResourceBundle.getText(\"C_APP_COMPONENT_SAPFE_ETAG_TECHNICAL_ISSUES_CONCURRENT_MODIFICATION\");\n\t\t\t} else {\n\t\t\t\tsEtagMessage = sEtagMessage || oResourceBundle.getText(\"C_APP_COMPONENT_SAPFE_ETAG_TECHNICAL_ISSUES\");\n\t\t\t}\n\t\t\tMessaging.removeMessages(aMessages[i]);\n\t\t\toMessage.setMessage(sEtagMessage);\n\t\t\toMessage.setTargets([\"\"]);\n\t\t\tMessaging.addMessages(oMessage);\n\t\t\tbMessagesModified = true;\n\t\t}\n\t});\n\treturn bMessagesModified;\n}\n// Dialog close Handling\nfunction dialogCloseHandler(): void {\n\tdialogControl.close();\n\toBackButton.setVisible(false);\n\tconst msgView = dialogControl.getContent()[0] as MessageView;\n\tconst oMessageDialogModel = msgView.getModel() as JSONModel | undefined;\n\tif (oMessageDialogModel) {\n\t\toMessageDialogModel.setData({});\n\t}\n\tremoveUnboundTransitionMessages();\n}\nfunction getRetryAfterMessage(oMessage: Message, bMessageDialog?: boolean): string | undefined {\n\tconst dNow = new Date();\n\tconst oTechnicalDetails = oMessage.getTechnicalDetails() as MessageTechnicalDetails | undefined;\n\tconst oResourceBundle = Library.getResourceBundleFor(\"sap.fe.core\")!;\n\tlet sRetryAfterMessage;\n\tif (oTechnicalDetails && oTechnicalDetails.httpStatus === 503 && oTechnicalDetails.retryAfter) {\n\t\tconst dRetryAfter = oTechnicalDetails.retryAfter;\n\t\tlet oDateFormat;\n\t\tif (dNow.getFullYear() !== dRetryAfter.getFullYear()) {\n\t\t\t//different years\n\t\t\toDateFormat = DateFormat.getDateTimeInstance({\n\t\t\t\tpattern: \"MMMM dd, yyyy 'at' hh:mm a\"\n\t\t\t});\n\t\t\tsRetryAfterMessage = oResourceBundle.getText(\"C_MESSAGE_HANDLING_SAPFE_503_ERROR\", [oDateFormat.format(dRetryAfter)]);\n\t\t} else if (dNow.getFullYear() == dRetryAfter.getFullYear()) {\n\t\t\t//same year\n\t\t\tif (bMessageDialog) {\n\t\t\t\t//less than 2 min\n\t\t\t\tsRetryAfterMessage = `${oResourceBundle.getText(\"C_MESSAGE_HANDLING_SAPFE_503_TITLE\")} ${oResourceBundle.getText(\n\t\t\t\t\t\"C_MESSAGE_HANDLING_SAPFE_503_DESC\"\n\t\t\t\t)}`;\n\t\t\t} else if (dNow.getMonth() !== dRetryAfter.getMonth() || dNow.getDate() !== dRetryAfter.getDate()) {\n\t\t\t\toDateFormat = DateFormat.getDateTimeInstance({\n\t\t\t\t\tpattern: \"MMMM dd 'at' hh:mm a\"\n\t\t\t\t}); //different months or different days of same month\n\t\t\t\tsRetryAfterMessage = oResourceBundle.getText(\"C_MESSAGE_HANDLING_SAPFE_503_ERROR\", [oDateFormat.format(dRetryAfter)]);\n\t\t\t} else {\n\t\t\t\t//same day\n\t\t\t\toDateFormat = DateFormat.getDateTimeInstance({\n\t\t\t\t\tpattern: \"hh:mm a\"\n\t\t\t\t});\n\t\t\t\tsRetryAfterMessage = oResourceBundle.getText(\"C_MESSAGE_HANDLING_SAPFE_503_ERROR_DAY\", [oDateFormat.format(dRetryAfter)]);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (oTechnicalDetails && oTechnicalDetails.httpStatus === 503 && !oTechnicalDetails.retryAfter) {\n\t\tsRetryAfterMessage = oResourceBundle.getText(\"C_MESSAGE_HANDLING_SAPFE_503_ERROR_NO_RETRY_AFTER\");\n\t}\n\treturn sRetryAfterMessage;\n}\n\n/**\n * Checks if there are any warning or error messages(bound and unbound)..\n * @returns Boolean indicating existence of messages\n */\nfunction hasTransitionErrorsOrWarnings(): boolean {\n\treturn [...getMessages(undefined, true), ...getMessages(true, true)].some(function (message: Message) {\n\t\treturn message.getType() === \"Error\" || message.getType() === \"Warning\";\n\t});\n}\n\nfunction prepareMessageViewForDialog(\n\toMessageDialogModel: JSONModel,\n\tbStrictHandlingFlow: boolean,\n\tmulti412?: boolean\n): {\n\tmessageView: MessageView;\n\toBackButton: Button;\n} {\n\tlet oMessageTemplate: MessageItem;\n\tif (!bStrictHandlingFlow) {\n\t\tconst descriptionBinding = '{= ${description} ? \"<html><body>\" + ' + fnFormatDescription() + ' + \"</html></body>\" : \"\" }';\n\t\tconst technicalDetailsBinding =\n\t\t\t'{= ${technicalDetails} ? \"<html><body>\" + ' + fnFormatTechnicalDetails() + ' + \"</html></body>\" : \"\" }';\n\t\toMessageTemplate = new MessageItem(undefined, {\n\t\t\tcounter: { path: \"counter\" },\n\t\t\ttitle: \"{message}\",\n\t\t\tsubtitle: \"{additionalText}\",\n\t\t\tlongtextUrl: \"{descriptionUrl}\",\n\t\t\ttype: { path: \"type\" },\n\t\t\tgroupName: \"{headerName}\",\n\t\t\tdescription: descriptionBinding + technicalDetailsBinding,\n\t\t\tmarkupDescription: true\n\t\t});\n\t} else if (multi412) {\n\t\toMessageTemplate = new MessageItem(undefined, {\n\t\t\tcounter: { path: \"counter\" },\n\t\t\ttitle: \"{message}\",\n\t\t\tsubtitle: \"{additionalText}\",\n\t\t\tlongtextUrl: \"{descriptionUrl}\",\n\t\t\ttype: { path: \"type\" },\n\t\t\tdescription: \"{description}\",\n\t\t\tmarkupDescription: true\n\t\t});\n\t} else {\n\t\toMessageTemplate = new MessageItem({\n\t\t\ttitle: \"{message}\",\n\t\t\ttype: { path: \"type\" },\n\t\t\tlongtextUrl: \"{descriptionUrl}\"\n\t\t});\n\t}\n\tmessageView = new MessageView({\n\t\tshowDetailsPageHeader: false,\n\t\titemSelect: function (): void {\n\t\t\toBackButton.setVisible(true);\n\t\t},\n\t\titems: {\n\t\t\tpath: \"/\",\n\t\t\ttemplate: oMessageTemplate,\n\t\t\tlength: 9999\n\t\t}\n\t});\n\tmessageView.setGroupItems(true);\n\toBackButton =\n\t\toBackButton ||\n\t\tnew Button({\n\t\t\ticon: IconPool.getIconURI(\"nav-back\"),\n\t\t\tvisible: false,\n\t\t\tpress: function (this: Button): void {\n\t\t\t\tmessageView.navigateBack();\n\t\t\t\tthis.setVisible(false);\n\t\t\t}\n\t\t});\n\t// Update proper ETag Mismatch error\n\tmessageView.setModel(oMessageDialogModel);\n\treturn {\n\t\tmessageView,\n\t\toBackButton\n\t};\n}\n\nexport type ShowMessageParameters = {\n\tshowMessageBox?: boolean;\n\tshowMessageDialog?: boolean;\n\tshowChangeSetErrorDialog?: boolean;\n\tfilteredMessages?: Message[];\n\tfnGetMessageSubtitle?: Function;\n\tcontainsBoundTransistion?: boolean;\n};\n\nfunction isNonTechnicalMessage(message: Message): boolean {\n\tconst technicalDetails = message.getTechnicalDetails() as MessageTechnicalDetails | undefined;\n\tif (\n\t\t(technicalDetails &&\n\t\t\t((technicalDetails.originalMessage !== undefined && technicalDetails.originalMessage !== null) ||\n\t\t\t\t(technicalDetails.httpStatus !== undefined && technicalDetails.httpStatus !== null))) ||\n\t\tmessage.getCode()\n\t) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n/**\n * Get transition messages for creating the UI decision to show messages.\n * @param showBoundTransition Should bound transition messages be shown.\n * @param _context Binding context of the page.\n * @returns Transition messages relevant to show in UI.\n */\nfunction getTransitionMessagesForUIDecision(this: messageHandlingType, showBoundTransition: boolean, _context: ODataV4Context): Message[] {\n\tlet transitionMessages = this.getMessages();\n\tif (showBoundTransition) {\n\t\t//bound Transistion Messages\n\t\ttransitionMessages = transitionMessages.concat(this.getMessages(true, true));\n\t}\n\treturn transitionMessages;\n}\n\n/**\n * Execute 'onBeforeShowMessages' callback to let the caller influence the UI decision to show messages.\n * @param transitionMessages Transition messages.\n * @param onBeforeShowMessage Callback.\n * @returns ShowMessageParameters Infromation to change UI decision based on onBeforeShowMessages callback implementation.\n */\nfunction executeOnBeforeShowMessages(\n\ttransitionMessages: MessageWithHeader[],\n\tonBeforeShowMessage?: (messages: Message[], showMessageParameters: ShowMessageParameters) => ShowMessageParameters\n): {\n\tuiElementToUse: SupportedUIElement;\n\tmessagesToShow: MessageWithHeader[];\n\tfnGetMessageSubtitle?: Function;\n\tshowChangeSetErrorDialog?: boolean;\n\tcontainsBoundTransition?: boolean;\n} {\n\tlet messagesToShow = [...transitionMessages];\n\tlet uiElementToUse: SupportedUIElement =\n\t\ttransitionMessages.length === 1 && transitionMessages[0].getCode() === \"503\" ? \"Box\" : \"Dialog\";\n\tlet fnGetMsgSubtitle: Function | undefined;\n\tlet showBoundMessages: boolean | undefined;\n\n\tif (onBeforeShowMessage) {\n\t\t// The callback onBeforeShowMessage alters the UIElement to use in a different format(showMessageDialog and showMessageBox).\n\t\tconst showMessageParameters: ShowMessageParameters = {\n\t\t\tshowMessageDialog: uiElementToUse === \"Dialog\",\n\t\t\tshowMessageBox: uiElementToUse === \"Box\"\n\t\t};\n\t\tconst {\n\t\t\tshowMessageBox,\n\t\t\tshowMessageDialog,\n\t\t\tshowChangeSetErrorDialog,\n\t\t\tfilteredMessages,\n\t\t\tfnGetMessageSubtitle,\n\t\t\tcontainsBoundTransistion\n\t\t} = onBeforeShowMessage(transitionMessages, showMessageParameters);\n\t\tif (showMessageBox === true) {\n\t\t\tuiElementToUse = \"Box\";\n\t\t} else if (showMessageDialog === true) {\n\t\t\tuiElementToUse = \"Dialog\";\n\t\t} else {\n\t\t\tuiElementToUse = \"None\";\n\t\t}\n\t\tshowBoundMessages = containsBoundTransistion;\n\t\tfnGetMsgSubtitle = fnGetMessageSubtitle;\n\t\tif (showChangeSetErrorDialog || containsBoundTransistion === false) {\n\t\t\tmessagesToShow = filteredMessages ?? [];\n\t\t}\n\t}\n\n\treturn {\n\t\tuiElementToUse,\n\t\tmessagesToShow,\n\t\tfnGetMessageSubtitle: fnGetMsgSubtitle,\n\t\tcontainsBoundTransition: showBoundMessages\n\t};\n}\n\n/**\n * Create UI decisions for showing messages.\n *\n * These shall contain the messages to show and the UI element to use.\n * It would also hold information for after process like..\n * 1. refresh context due to etag mismatch.\n * 2. do we show bound messages and hence clear them after we show the UI element.\n * @param customMessages Custom messages to add to message model and show.\n * @param context Binding context of the page.\n * @param showBoundTransition Should bound transition messages be shown.\n * @param concurrentEditFlag Is this a concurrent edit scenario.\n * @param control Source control.\n * @param actionName Name of the action whose process requested for messages to be shown.\n * @param onBeforeShowMessage Callback to influence UI decision before creating final UI decision.\n * @param viewType View type, list report or object page.\n * @param showStateMessages Should state messages be shown.\n * @param messageDialogParameter\n * @returns UI decisions used to show messages.\n */\nfunction getUIDecisions(\n\tthis: messageHandlingType,\n\tcustomMessages: CustomMessage[] | undefined,\n\tcontext: ODataV4Context,\n\tshowBoundTransition = false,\n\tconcurrentEditFlag?: boolean,\n\tcontrol?: Control,\n\tactionName?: string | undefined,\n\tonBeforeShowMessage?: (messages: Message[], showMessageParameters: ShowMessageParameters) => ShowMessageParameters,\n\tviewType?: string,\n\tshowStateMessages = false,\n\tmessageDialogParameter?: ShowMessageDialogParameter,\n\tresourceModel?: ResourceModel,\n\tmessageHandlder?: MessageHandler\n): MessageUIDecisions {\n\t// Add Custom messages\n\t// TODO: Will these messages be part of transitionMessages?\n\tif (customMessages && customMessages.length) {\n\t\taddCustomMessages(customMessages);\n\t}\n\n\t// Get transition Messages\n\tconst transitionMessages = getTransitionMessagesForUIDecision.call(this, showBoundTransition, context);\n\n\t// UI representation of the Dialog\n\tconst uiDecisionIntermittent = executeOnBeforeShowMessages.call(this, transitionMessages, onBeforeShowMessage);\n\tlet { messagesToShow, uiElementToUse = \"Dialog\" } = uiDecisionIntermittent;\n\t// Get Filters for Unbound Messages\n\tshowBoundTransition = uiDecisionIntermittent.containsBoundTransition ?? showBoundTransition;\n\tconst filters = getFiltersForMessages(showBoundTransition, showStateMessages);\n\tmessagesToShow = getMessagesToShow(filters, messagesToShow ?? []);\n\t// handle context bound messages, If there is a single message of which is bounded to the context then remove that from the dialog\n\tmessagesToShow = messageHandlder?.filterContextBoundMessages(messagesToShow, context) || messagesToShow;\n\t({ messagesToShow, uiElementToUse } = processMessagesFromChangesetFailure({ messagesToShow, uiElementToUse }));\n\t// Modify ETag Messages\n\tconst hasEtagMessage = this.modifyETagMessagesOnly(Library.getResourceBundleFor(\"sap.fe.core\")!, concurrentEditFlag);\n\n\tif (messagesToShow.length > 0 && uiElementToUse !== \"None\") {\n\t\tif (messagesToShow.length > 1 && resourceModel && checkIfAllAreSameSuccessMessages(messagesToShow)) {\n\t\t\tconst genericSuccessMessage = addGenericSuccessMessage(resourceModel, messageDialogParameter);\n\t\t\tmessagesToShow = genericSuccessMessage ? [genericSuccessMessage] : [messagesToShow[0]];\n\t\t}\n\t\tif (messagesToShow.length === 1) {\n\t\t\tconst messageToShow = messagesToShow[0];\n\t\t\tif (messageToShow.getType() === MessageType.Success) {\n\t\t\t\tuiElementToUse = \"Toast\";\n\t\t\t} else if (hasEtagMessage || messageToShow.getDescription()?.length || messageToShow.getDescriptionUrl()?.length) {\n\t\t\t\tuiElementToUse = \"Dialog\";\n\t\t\t} else {\n\t\t\t\t// We would show single message in message box only when:\n\t\t\t\t// 1. It is not an Etag message.\n\t\t\t\t// 2. There is no message description or description url available for long text.\n\t\t\t\tuiElementToUse = \"Box\";\n\t\t\t}\n\t\t}\n\t\tif (uiElementToUse === \"Dialog\") {\n\t\t\tmessageHandling.updateMessageObjectGroupName(messagesToShow, control, actionName, viewType);\n\t\t}\n\t\tconst fnGetMessageSubtitle = uiDecisionIntermittent.fnGetMessageSubtitle;\n\t\tif (fnGetMessageSubtitle) {\n\t\t\tmessagesToShow.forEach(function (oMessage: Message) {\n\t\t\t\tfnGetMessageSubtitle(oMessage);\n\t\t\t});\n\t\t}\n\t}\n\n\treturn {\n\t\tmessagesToShow,\n\t\tuiElementToUse,\n\t\tcontextNeedsEtagRefresh: hasEtagMessage ? context : undefined,\n\t\tcontainsBoundTransition: showBoundTransition\n\t};\n}\n\n/**\n * Adding a generic success message to message model for readability.\n * @param resourceModel Resource model for message text\n * @param showMessageDialogParameter Selected contexts for which the message is shown.\n * @returns Message with generic success message.\n */\nfunction addGenericSuccessMessage(\n\tresourceModel: ResourceModel,\n\tshowMessageDialogParameter?: ShowMessageDialogParameter\n): MessageWithHeader | undefined {\n\tconst selectionContexts = showMessageDialogParameter?.aSelectedContexts;\n\tif (selectionContexts && Array.isArray(selectionContexts) && selectionContexts?.length > 1 && resourceModel) {\n\t\tlet actionName = showMessageDialogParameter?.boundActionName;\n\t\tconst entitySetName = showMessageDialogParameter?.entitySet;\n\t\tactionName = actionName?.includes(\".\") ? actionName?.split(\".\")[actionName?.split(\".\").length - 1] : actionName;\n\t\tconst suffixResourceKey = actionName && entitySetName ? `${entitySetName}|${actionName}` : \"\";\n\t\treturn new Message({\n\t\t\tmessage: resourceModel.getText(\"C_COMMON_SUCCESS_MESSAGE\", [selectionContexts?.length], suffixResourceKey),\n\t\t\ttype: MessageType.Success,\n\t\t\ttarget: \"\",\n\t\t\tpersistent: true,\n\t\t\tcode: \"C_COMMON_SUCCESS_MESSAGE\"\n\t\t});\n\t}\n}\n/**\n * Check is all are same success messages.\n * @param messagesToShow Initial messages to show.\n * @returns If all are same success messages.\n */\nfunction checkIfAllAreSameSuccessMessages(messagesToShow: MessageWithHeader[]): boolean {\n\tlet referenceMsg: MessageWithHeader;\n\tconst checkFailed = messagesToShow.some((msg, idx) => {\n\t\tif (msg.getType() !== MessageType.Success) {\n\t\t\t// Non success message\n\t\t\treturn true;\n\t\t}\n\t\tif (idx === 0) {\n\t\t\t// 1st Message\n\t\t\treferenceMsg = msg;\n\t\t\treturn false;\n\t\t} else if (\n\t\t\treferenceMsg.getCode() === msg.getCode() &&\n\t\t\treferenceMsg.getMessage() === msg.getMessage() &&\n\t\t\treferenceMsg.getDescription() === msg.getDescription() &&\n\t\t\treferenceMsg.getDescriptionUrl() === msg.getDescriptionUrl() &&\n\t\t\treferenceMsg.getAdditionalText() === msg.getAdditionalText()\n\t\t) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t});\n\n\treturn !checkFailed;\n}\n\n/**\n * Show messages in the decided UI Element.\n * @param uiDecisions UI Decision to be used to show the messages.\n * @returns Promise that resolves or rejects based on user interaction with the UI element.\n */\nasync function showMessagesInUI(uiDecisions: MessageUIDecisions): Promise<void> {\n\tconst { messagesToShow, uiElementToUse } = uiDecisions;\n\n\t// Show Dialog / MessageBox / MessageToast\n\tif (messagesToShow.length === 0) {\n\t\t// Don't show the popup if there are no messages\n\t\treturn Promise.resolve(undefined);\n\t} else if (uiElementToUse === \"Toast\") {\n\t\treturn messageHandling.showMessageToast(messagesToShow[0]);\n\t} else if (uiElementToUse === \"Dialog\") {\n\t\tawait messageHandling.showMessageDialogControl(uiDecisions);\n\t\treturn Promise.resolve(undefined);\n\t} else if (uiElementToUse === \"Box\") {\n\t\treturn messageHandling.showMessageBoxControl(uiDecisions);\n\t} else {\n\t\treturn Promise.resolve(undefined);\n\t}\n}\n\n/**\n * Get model filters for getting the relevant messages.\n * @param showBoundTransition Should bound transition messages be shown.\n * @param showStateMessages Should state messages be shown.\n * @returns Model filters\n */\nfunction getFiltersForMessages(showBoundTransition: boolean, showStateMessages = false): Filter[] {\n\tconst filters = showStateMessages ? [] : [new Filter({ path: \"persistent\", operator: FilterOperator.NE, value1: false })];\n\tconst isNonTechnicalMessageFilter = new Filter({ path: \"\", test: isNonTechnicalMessage });\n\n\tif (showStateMessages || showBoundTransition) {\n\t\t// Add the filter for both state messages or bound transition messages\n\t\tconst fnCheckControlIdInDialog = function (aControlIds: string[]): boolean {\n\t\t\treturn messageHandling.isMessageOutOfParameterDialog(aControlIds);\n\t\t};\n\t\tfilters.push(\n\t\t\tnew Filter({\n\t\t\t\tpath: \"controlIds\",\n\t\t\t\ttest: fnCheckControlIdInDialog,\n\t\t\t\tcaseSensitive: true\n\t\t\t})\n\t\t);\n\n\t\tif (showBoundTransition && !showStateMessages) {\n\t\t\t// Add extra filter if only bound transition messages are shown\n\t\t\tfilters.push(new Filter({ path: \"persistent\", operator: FilterOperator.EQ, value1: true }));\n\t\t\tfilters.push(isNonTechnicalMessageFilter);\n\t\t}\n\t} else {\n\t\t// Only unbound messages should be shown\n\t\tfilters.push(\n\t\t\tnew Filter({\n\t\t\t\tfilters: [\n\t\t\t\t\tnew Filter({\n\t\t\t\t\t\tpath: \"\",\n\t\t\t\t\t\ttest: (message: Message) => message.getTargets().length === 0 || message.getTargets()[0] === \"\"\n\t\t\t\t\t}),\n\t\t\t\t\tisNonTechnicalMessageFilter\n\t\t\t\t],\n\t\t\t\tand: true\n\t\t\t})\n\t\t);\n\t}\n\n\treturn filters;\n}\n\nfunction processMessagesFromChangesetFailure({\n\tmessagesToShow,\n\tuiElementToUse\n}: Pick<MessageUIDecisions, \"uiElementToUse\" | \"messagesToShow\">): Pick<MessageUIDecisions, \"uiElementToUse\" | \"messagesToShow\"> {\n\tlet retMessages = [...messagesToShow];\n\tif (messagesToShow.length === 2) {\n\t\t// There are 2 message:\n\t\t// 1. Generic error changeset message added by FE.\n\t\t// 2. Main error message from the interaction.\n\t\t// We remove the generic message, show only an enhanced 'Main error message' with a generic messsage pre-text in the message box.\n\t\tconst genericMsgs: Message[] = [];\n\t\tconst nonGenericMsgs: Message[] = [];\n\t\tmessagesToShow.forEach((message) => {\n\t\t\tif (message.getCode() === \"FE_CUSTOM_MESSAGE_CHANGESET_ALL_FAILED\") {\n\t\t\t\tgenericMsgs.push(message);\n\t\t\t} else {\n\t\t\t\tnonGenericMsgs.push(message);\n\t\t\t}\n\t\t});\n\t\tif (genericMsgs.length === 1) {\n\t\t\tconst { fe: feTechnicalDetails } = (genericMsgs[0].getTechnicalDetails() || {}) as FEMessageTechnicalDetails;\n\t\t\tif (feTechnicalDetails?.changeSetPreTextForSingleError) {\n\t\t\t\tconst preText = feTechnicalDetails?.changeSetPreTextForSingleError;\n\t\t\t\tif (preText) {\n\t\t\t\t\tconst techDetailsForNonGenericMessage: FEMessageTechnicalDetails = {\n\t\t\t\t\t\tfe: {\n\t\t\t\t\t\t\tsingleErrorPreText: preText,\n\t\t\t\t\t\t\tsingleGenericMessageId: genericMsgs[0].getId()\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\tconst existingTechDetails = nonGenericMsgs[0].getTechnicalDetails() ?? {};\n\t\t\t\t\t// combine existing technical details if any, with the change set information we want to add.\n\t\t\t\t\tnonGenericMsgs[0].setTechnicalDetails({ ...existingTechDetails, ...techDetailsForNonGenericMessage });\n\t\t\t\t\tretMessages = nonGenericMsgs;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn {\n\t\tmessagesToShow: retMessages,\n\t\tuiElementToUse: retMessages.length === 1 && uiElementToUse !== \"None\" ? \"Box\" : uiElementToUse\n\t};\n}\n\n/**\n * Add the custom messages to message model.\n * @param customMessages Custom messages to add.\n */\nfunction addCustomMessages(customMessages: CustomMessage[]): void {\n\tcustomMessages.forEach(function (oMessage: CustomMessage) {\n\t\tconst messageCode = oMessage.code ? oMessage.code : \"\";\n\t\tMessaging.addMessages(\n\t\t\tnew Message({\n\t\t\t\tmessage: oMessage.text,\n\t\t\t\ttype: oMessage.type,\n\t\t\t\ttarget: \"\",\n\t\t\t\tpersistent: true,\n\t\t\t\tcode: messageCode\n\t\t\t})\n\t\t);\n\t\t//The target and persistent properties of the message are hardcoded as \"\" and true because the function deals with only unbound messages.\n\t});\n}\n\nfunction getSorterForMessages(): Sorter {\n\treturn new Sorter(\"\", undefined, undefined, (obj1: MessageWithHeader, obj2: MessageWithHeader) => {\n\t\tconst rankA = getMessageRank(obj1);\n\t\tconst rankB = getMessageRank(obj2);\n\n\t\tif (rankA < rankB) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (rankA > rankB) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t});\n}\n\nfunction getMessagesToShow(filters: Filter[], transistionMessages: Message[]): MessageWithHeader[] {\n\tlet messagesToShow: MessageWithHeader[] = [...transistionMessages];\n\tconst listBinding = Messaging.getMessageModel().bindList(\"/\", undefined, undefined, filters),\n\t\tcurrentContexts = listBinding.getCurrentContexts();\n\tif (currentContexts.length > 0) {\n\t\t// if false, show messages in dialog\n\t\t// As fitering has already happened here hence\n\t\t// using the message model again for the message dialog view and then filtering on that binding again is unnecessary.\n\t\t// So we create new json model to use for the message dialog view.\n\t\tconst messages = currentContexts.map((currentContext) => currentContext.getObject());\n\t\tconst oUniqueObj: Record<string, boolean> = {};\n\n\t\tmessagesToShow = messages.concat(messagesToShow).filter(function (obj: Message) {\n\t\t\t// remove entries having duplicate message ids\n\t\t\treturn !oUniqueObj[obj.getId()] && (oUniqueObj[obj.getId()] = true);\n\t\t});\n\t}\n\treturn messagesToShow;\n}\n\nasync function showMessageToast(this: messageHandlingType, message: Message): Promise<void> {\n\treturn new Promise<void>((resolve) => {\n\t\tMessageToast.show(message.getMessage());\n\t\tthis.removeUnboundTransitionMessages();\n\t\tresolve(undefined);\n\t});\n}\n\nasync function showMessageDialogControl(uiDecision: MessageUIDecisions, runToTest = false): Promise<void | Dialog> {\n\tlet highestPriority;\n\tlet highestPriorityText;\n\treturn new Promise(function (resolve: (param1: void | Dialog) => void) {\n\t\taResolveFunctions.push(resolve);\n\t\tconst resourceBundle = Library.getResourceBundleFor(\"sap.fe.core\")!;\n\t\tconst strictHandlingFlow = false;\n\t\tconst { messagesToShow, contextNeedsEtagRefresh } = uiDecision;\n\t\tconst messageDialogModel = new JSONModel(messagesToShow);\n\t\tconst messageObject = prepareMessageViewForDialog(messageDialogModel, strictHandlingFlow);\n\t\tconst sorter = getSorterForMessages();\n\t\t(messageObject.messageView.getBinding(\"items\") as ODataListBinding).sort(sorter);\n\n\t\tif (!dialogControl || !dialogControl.isOpen()) {\n\t\t\tdialogControl = new Dialog({\n\t\t\t\tresizable: true,\n\t\t\t\tendButton: new Button({\n\t\t\t\t\tpress: function (): void {\n\t\t\t\t\t\tdialogCloseHandler();\n\t\t\t\t\t\t// also remove bound transition messages if we were showing them\n\t\t\t\t\t\tMessaging.removeMessages(messagesToShow);\n\t\t\t\t\t},\n\t\t\t\t\ttext: resourceBundle.getText(\"C_COMMON_SAPFE_CLOSE\")\n\t\t\t\t}),\n\t\t\t\tescapeHandler: function (completionPromise: { resolve: Function; reject: Function }): void {\n\t\t\t\t\tdialogCloseHandler();\n\t\t\t\t\t// also remove bound transition messages if we were showing them\n\t\t\t\t\tMessaging.removeMessages(messagesToShow);\n\t\t\t\t\tcompletionPromise.resolve();\n\t\t\t\t},\n\t\t\t\tcustomHeader: new Bar({\n\t\t\t\t\tcontentMiddle: [\n\t\t\t\t\t\tnew Text({\n\t\t\t\t\t\t\ttext: resourceBundle.getText(\"C_MESSAGE_HANDLING_SAPFE_ERROR_MESSAGES_PAGE_TITLE\")\n\t\t\t\t\t\t})\n\t\t\t\t\t],\n\t\t\t\t\tcontentLeft: [oBackButton]\n\t\t\t\t}),\n\t\t\t\tcontentWidth: \"37.5em\",\n\t\t\t\tcontentHeight: \"21.5em\",\n\t\t\t\tverticalScrolling: false,\n\t\t\t\tcloseOnNavigation: false,\n\t\t\t\tafterClose: function (): void {\n\t\t\t\t\tfor (const item of aResolveFunctions) {\n\t\t\t\t\t\titem();\n\t\t\t\t\t}\n\t\t\t\t\taResolveFunctions = [];\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tdialogControl.removeAllContent();\n\t\tdialogControl.addContent(messageView);\n\n\t\tif (contextNeedsEtagRefresh) {\n\t\t\tdialogControl.setBeginButton(\n\t\t\t\tnew Button({\n\t\t\t\t\tpress: function (): void {\n\t\t\t\t\t\tdialogCloseHandler();\n\t\t\t\t\t\tif (contextNeedsEtagRefresh.hasPendingChanges()) {\n\t\t\t\t\t\t\tcontextNeedsEtagRefresh.getBinding().resetChanges();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcontextNeedsEtagRefresh.refresh();\n\t\t\t\t\t},\n\t\t\t\t\ttext: resourceBundle.getText(\"C_COMMON_SAPFE_REFRESH\"),\n\t\t\t\t\ttype: ButtonType.Emphasized\n\t\t\t\t})\n\t\t\t);\n\t\t} else {\n\t\t\tdialogControl.destroyBeginButton();\n\t\t}\n\t\thighestPriority = fnGetHighestMessagePriority(messageView.getItems());\n\t\thighestPriorityText = getTranslatedTextForMessageDialog(highestPriority);\n\t\tdialogControl.setState(highestPriority);\n\t\t((dialogControl.getCustomHeader() as Bar).getContentMiddle()[0] as Text).setText(highestPriorityText);\n\t\tmessageView.navigateBack();\n\t\tdialogControl.open();\n\t\tif (runToTest) {\n\t\t\tresolve(dialogControl);\n\t\t}\n\t});\n}\n\nasync function showMessageBoxControl(uiDecision: MessageUIDecisions): Promise<void> {\n\treturn new Promise(function (resolve) {\n\t\tconst { messagesToShow } = uiDecision;\n\t\tconst messageToShow = messagesToShow[0];\n\t\tconst messageTechnicalDetails = messageToShow.getTechnicalDetails() as MessageTechnicalDetails | undefined;\n\t\tconst { singleGenericMessageId, singleErrorPreText } = (messageTechnicalDetails as FEMessageTechnicalDetails)?.fe ?? {};\n\t\tconst retryAfterMessage = messageHandling.getRetryAfterMessage(messageToShow, true);\n\t\t// If it is a retry message, then it needs to have technical details to show it.\n\t\tconst showMessageBox = retryAfterMessage ? messageTechnicalDetails : true;\n\t\tif (showMessageBox) {\n\t\t\tconst startTag = \"<html><body><span style='white-space:pre-wrap'>\",\n\t\t\t\tcloseTag = \"</span></body></html>\";\n\t\t\tlet formattedTextString = startTag;\n\n\t\t\t// Adding pre-text for the messages\n\t\t\tif (retryAfterMessage) {\n\t\t\t\tformattedTextString = `${formattedTextString}<h6>${retryAfterMessage}</h6><br></br>`;\n\t\t\t} else {\n\t\t\t\tif (singleErrorPreText) {\n\t\t\t\t\tconst messageHeader = (messageToShow as MessageWithHeader)?.[\"headerName\"]\n\t\t\t\t\t\t? `${(messageToShow as MessageWithHeader)?.[\"headerName\"]}:`\n\t\t\t\t\t\t: \"\";\n\t\t\t\t\tformattedTextString = `${formattedTextString}${singleErrorPreText}<br/><br/>${messageHeader} `;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst messageFormatted = messageToShow.getMessage().replaceAll(\"<\", \"&lt;\").replaceAll(\">\", \"&gt;\");\n\t\t\t// Adding the main error message.\n\t\t\tif (messageToShow.getCode() !== \"503\" && messageToShow.getAdditionalText() !== undefined) {\n\t\t\t\tformattedTextString = `${formattedTextString + messageToShow.getAdditionalText()}: ${messageFormatted}${closeTag}`;\n\t\t\t} else {\n\t\t\t\tformattedTextString = `${formattedTextString + messageFormatted}${closeTag}`;\n\t\t\t}\n\t\t\tconst formattedText = new FormattedText({\n\t\t\t\thtmlText: ManagedObject.escapeSettingsValue(formattedTextString)\n\t\t\t});\n\n\t\t\tshowMessageBoxPerType(\n\t\t\t\tformattedText as unknown as string,\n\t\t\t\t{\n\t\t\t\t\tonClose: closeMessageBox.bind(null, messageToShow, resolve, singleGenericMessageId)\n\t\t\t\t},\n\t\t\t\tmessageToShow\n\t\t\t);\n\t\t}\n\t});\n}\n\nfunction closeMessageBox(messageShown: MessageWithHeader, callBack: (value: void) => void, singleGenericMessageId?: string): void {\n\tconst messagesToRemove = [messageShown];\n\tif (singleGenericMessageId) {\n\t\tconst allMsgs = Messaging.getMessageModel().getData();\n\t\tconst genericMessage = allMsgs.find((msg: MessageWithHeader) => msg.getId() === singleGenericMessageId);\n\t\tif (genericMessage) {\n\t\t\tmessagesToRemove.push(genericMessage);\n\t\t}\n\t}\n\tMessaging.removeMessages(messagesToRemove);\n\tcallBack(undefined);\n}\n\nfunction showMessageBoxPerType(formattedText: string, close: { onClose: Function }, message: Message): void {\n\tswitch (message.getType()) {\n\t\tcase MessageType.Error:\n\t\t\tMessageBox.error(formattedText, close);\n\t\t\tbreak;\n\t\tcase MessageType.Warning:\n\t\t\tMessageBox.warning(formattedText, close);\n\t\t\tbreak;\n\t\tcase MessageType.Success:\n\t\t\tMessageBox.success(formattedText, close);\n\t\t\tbreak;\n\t\tcase MessageType.Information:\n\t\t\tMessageBox.information(formattedText, close);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tMessageBox.show(formattedText, close);\n\t}\n}\n\n/**\n * This function sets the group name for all messages in a dialog.\n * @param aModelDataArray Messages array\n * @param control\n * @param sActionName\n * @param viewType\n */\nfunction updateMessageObjectGroupName(\n\taModelDataArray: MessageWithHeader[],\n\tcontrol: Control | undefined,\n\tsActionName: string | undefined,\n\tviewType: string | undefined\n): void {\n\taModelDataArray.forEach((aModelData: MessageWithHeader) => {\n\t\taModelData[\"headerName\"] = \"\";\n\t\tif (!aModelData.target?.length && aModelData.getCode?.() !== \"FE_CUSTOM_MESSAGE_CHANGESET_ALL_FAILED\") {\n\t\t\t// unbound transiiton messages\n\t\t\tconst generalGroupText = Library.getResourceBundleFor(\"sap.fe.core\")!.getText(\"T_MESSAGE_BUTTON_SAPFE_MESSAGE_GROUP_GENERAL\");\n\t\t\taModelData[\"headerName\"] = generalGroupText;\n\t\t} else if (aModelData.target?.length) {\n\t\t\t// LR flow\n\t\t\tif (viewType === \"ListReport\" && control?.isA<MDCTable>(\"sap.ui.mdc.Table\")) {\n\t\t\t\tmessageHandling.setGroupNameLRTable(control, aModelData, sActionName);\n\t\t\t} else if (viewType === \"ObjectPage\") {\n\t\t\t\t// OP Display mode\n\t\t\t\tmessageHandling.setGroupNameOPDisplayMode(aModelData, sActionName, control as View);\n\t\t\t} else {\n\t\t\t\taModelData[\"headerName\"] = messageHandling.getLastActionTextAndActionName(sActionName);\n\t\t\t}\n\t\t}\n\t});\n}\n\n/**\n * This function will set the group name of Message Object for LR table.\n * @param oElem\n * @param aModelData\n * @param sActionName\n */\nfunction setGroupNameLRTable(oElem: Control | undefined, aModelData: MessageWithHeader, sActionName: string | undefined): void {\n\tconst oRowBinding = oElem && (oElem as MDCTable).getRowBinding();\n\tif (oRowBinding) {\n\t\tconst sElemeBindingPath = `${(oElem as MDCTable).getRowBinding().getPath()}`;\n\t\tif (aModelData.target?.indexOf(sElemeBindingPath) === 0) {\n\t\t\tconst allRowContexts = oRowBinding.getCurrentContexts();\n\t\t\tallRowContexts.forEach((rowContext: Context) => {\n\t\t\t\tif (aModelData.target?.includes(rowContext.getPath())) {\n\t\t\t\t\tconst contextPath = `${rowContext.getPath()}/`;\n\t\t\t\t\tconst identifierColumn = (oElem.getParent() as TableAPI).getIdentifierColumn() as string;\n\t\t\t\t\tconst rowIdentifier = identifierColumn && rowContext.getObject()[identifierColumn];\n\t\t\t\t\tconst columnPropertyName = messageHandling.getTableColProperty(oElem, aModelData, contextPath);\n\t\t\t\t\tconst { sTableTargetColName } = messageHandling.getTableColInfo(oElem as MDCTable, columnPropertyName);\n\n\t\t\t\t\t// if target has some column name and column is visible in UI\n\t\t\t\t\tif (columnPropertyName && sTableTargetColName) {\n\t\t\t\t\t\t// header will be row Identifier, if found from above code otherwise it should be table name\n\t\t\t\t\t\taModelData[\"headerName\"] = rowIdentifier ? ` ${rowIdentifier}` : (oElem as MDCTable).getHeader();\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// if column data not found (may be the column is hidden), add grouping as Last Action\n\t\t\t\t\t\taModelData[\"headerName\"] = messageHandling.getLastActionTextAndActionName(sActionName);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n}\n\nfunction updateAddtionalTextForMessageInOPTable(\n\tmdcTable: MDCTable,\n\tmessage: MessageWithHeader,\n\ttargetTableInfo: TargetTableInfoType\n): void {\n\tconst identifierColumn = (mdcTable.getParent() as TableAPI).getIdentifierColumn() as string;\n\tif (identifierColumn) {\n\t\tconst allRowContexts = mdcTable.getRowBinding().getContexts();\n\t\tallRowContexts.forEach((rowContext: Context) => {\n\t\t\tif (message.getTargets()?.[0]?.includes(rowContext.getPath())) {\n\t\t\t\tconst rowIdentifier = identifierColumn ? rowContext.getObject()[identifierColumn] : \"\";\n\t\t\t\tconst columnNameSuffix = targetTableInfo.sTableTargetColName ? `, ${targetTableInfo.sTableTargetColName}` : \"\";\n\t\t\t\tmessage.setAdditionalText(`${rowIdentifier}${columnNameSuffix}`);\n\t\t\t}\n\t\t});\n\t} else if (targetTableInfo.sTableTargetColName) {\n\t\tmessage.setAdditionalText(`${targetTableInfo.sTableTargetColName}`);\n\t}\n}\n\nfunction updateHeaderNameForMessageInOPTable(\n\tsubsection: ObjectPageSubSection,\n\tmdcTable: MDCTable,\n\tmessage: MessageWithHeader,\n\ttargetTableInfo: TargetTableInfoType\n): void {\n\tlet headerName = mdcTable.getHeaderVisible() && targetTableInfo.tableHeader;\n\tif (!headerName) {\n\t\theaderName = subsection.getTitle();\n\t} else {\n\t\tconst oResourceBundle = Library.getResourceBundleFor(\"sap.fe.core\")!;\n\t\theaderName = `${oResourceBundle.getText(\"T_MESSAGE_GROUP_TITLE_TABLE_DENOMINATOR\")}: ${headerName}`;\n\t}\n\tmessage[\"headerName\"] = headerName;\n}\n\n/**\n * This function will set the group name of Message Object in OP Display mode.\n * @param subsection Subsection\n * @param mdcTable  MDC table\n * @param message Message\n * @param viewContext View's binding context\n * @param groupNameIsGeneral Is present group name 'General'\n * @param actionName Action name\n * @returns If group name is 'General'\n */\nfunction setGroupNameOPTableDisplayMode(\n\tsubsection: ObjectPageSubSection,\n\tmdcTable: MDCTable,\n\tmessage: MessageWithHeader,\n\tviewContext: Context | null | undefined,\n\tgroupNameIsGeneral: boolean,\n\tactionName?: string\n): boolean {\n\tconst oRowBinding = mdcTable.getRowBinding(),\n\t\tsetSectionNameInGroup = true;\n\tlet childTableElement: UI5Element | undefined;\n\n\tmdcTable.findElements(true).forEach((oElement) => {\n\t\tif (oElement.isA<Table>(\"sap.m.Table\") || oElement.isA<UITable>(\"sap.ui.table.Table\")) {\n\t\t\tchildTableElement = oElement;\n\t\t}\n\t});\n\tif (oRowBinding) {\n\t\tconst sElemeBindingPath = `${viewContext?.getPath()}/${mdcTable.getRowBinding()?.getPath()}`;\n\t\tif (message.target?.indexOf(sElemeBindingPath) === 0) {\n\t\t\tconst obj = messageHandling.getTableColumnDataAndSetSubtile(\n\t\t\t\tmessage,\n\t\t\t\tmdcTable,\n\t\t\t\tchildTableElement,\n\t\t\t\toRowBinding,\n\t\t\t\tactionName,\n\t\t\t\tsetSectionNameInGroup,\n\t\t\t\tfnCallbackSetGroupName\n\t\t\t);\n\t\t\tconst { oTargetTableInfo } = obj;\n\n\t\t\tmessageHandling.updateAddtionalTextForMessageInOPTable(mdcTable, message, oTargetTableInfo);\n\t\t\tmessageHandling.updateHeaderNameForMessageInOPTable(subsection, mdcTable, message, oTargetTableInfo);\n\t\t\tgroupNameIsGeneral = false;\n\t\t}\n\t}\n\treturn groupNameIsGeneral;\n}\n\n/**\n * This function will set the group name of Message Object in OP Display mode.\n * @param aModelData Message Object\n * @param sActionName  Action name\n * @param control\n */\nfunction setGroupNameOPDisplayMode(aModelData: MessageWithHeader, sActionName: string | undefined, control: View): void {\n\tconst oViewContext = control?.getBindingContext();\n\tconst opLayout: Control = control?.getContent && control?.getContent()[0];\n\tlet bIsGeneralGroupName = true;\n\tif (opLayout) {\n\t\tmessageHandling.getVisibleSectionsFromObjectPageLayout(opLayout).forEach(function (oSection: ObjectPageSection) {\n\t\t\tconst subSections = oSection.getSubSections();\n\t\t\tsubSections.forEach(function (oSubSection: ObjectPageSubSection) {\n\t\t\t\toSubSection.findElements(true).forEach(function (oElem) {\n\t\t\t\t\tif (oElem.isA<MDCTable>(\"sap.ui.mdc.Table\")) {\n\t\t\t\t\t\tbIsGeneralGroupName = setGroupNameOPTableDisplayMode(\n\t\t\t\t\t\t\toSubSection,\n\t\t\t\t\t\t\toElem,\n\t\t\t\t\t\t\taModelData,\n\t\t\t\t\t\t\toViewContext,\n\t\t\t\t\t\t\tbIsGeneralGroupName,\n\t\t\t\t\t\t\tsActionName\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\tif (bIsGeneralGroupName) {\n\t\tconst sElemeBindingPath = `${oViewContext?.getPath()}`;\n\t\tif (aModelData.target?.indexOf(sElemeBindingPath) === 0) {\n\t\t\t// check if OP context path is part of target, set Last Action as group name\n\t\t\taModelData[\"headerName\"] = messageHandling.getLastActionTextAndActionName(sActionName);\n\t\t} else {\n\t\t\taModelData[\"headerName\"] = Library.getResourceBundleFor(\"sap.fe.core\")!.getText(\"T_MESSAGE_BUTTON_SAPFE_MESSAGE_GROUP_GENERAL\");\n\t\t}\n\t}\n}\n\nfunction getLastActionTextAndActionName(sActionName: string | undefined): string {\n\tconst sLastActionText = Library.getResourceBundleFor(\"sap.fe.core\")!.getText(\"T_MESSAGE_BUTTON_SAPFE_MESSAGE_GROUP_LAST_ACTION\");\n\treturn sActionName ? `${sLastActionText}: ${sActionName}` : \"\";\n}\n\n/**\n * This function will give rank based on Message Group/Header name, which will be used for Sorting messages in Message dialog\n * Last Action should be shown at top, next Row Id and last General.\n * @param obj\n * @returns Rank of message\n */\nfunction getMessageRank(obj: MessageWithHeader): number {\n\tif (obj.getCode() === \"FE_CUSTOM_MESSAGE_CHANGESET_ALL_FAILED\") {\n\t\treturn 1;\n\t} else if (obj.headerName?.toString().includes(\"Last Action\")) {\n\t\treturn 2;\n\t} else if (obj.headerName?.toString().includes(\"General\")) {\n\t\treturn 4;\n\t} else {\n\t\treturn 3;\n\t}\n}\n\n/**\n * This function will set the group name which can either General or Last Action.\n * @param aMessage\n * @param sActionName\n * @param bIsGeneralGroupName\n */\nconst fnCallbackSetGroupName = (aMessage: MessageWithHeader, sActionName: string | undefined, bIsGeneralGroupName?: boolean): void => {\n\tif (bIsGeneralGroupName) {\n\t\taMessage[\"headerName\"] = Library.getResourceBundleFor(\"sap.fe.core\")!.getText(\"T_MESSAGE_BUTTON_SAPFE_MESSAGE_GROUP_GENERAL\");\n\t} else {\n\t\taMessage[\"headerName\"] = messageHandling.getLastActionTextAndActionName(sActionName);\n\t}\n};\n\n/**\n * This function will get the table row/column info and set subtitle.\n * @param aMessage\n * @param oTable\n * @param oElement\n * @param oRowBinding\n * @param sActionName\n * @param setSectionNameInGroup\n * @param fnSetGroupName\n * @returns Table info and Subtitle.\n */\nfunction getTableColumnDataAndSetSubtile(\n\taMessage: MessageWithHeader,\n\toTable: MDCTable,\n\toElement: UI5Element | undefined,\n\toRowBinding: Binding,\n\tsActionName: string | undefined,\n\tsetSectionNameInGroup: boolean,\n\tfnSetGroupName: Function\n): { oTargetTableInfo: TargetTableInfoType; subTitle: string | null | undefined } {\n\tconst oTargetTableInfo = messageHandling.getTableAndTargetInfo(oTable, aMessage, oElement, oRowBinding);\n\toTargetTableInfo.tableHeader = oTable.getHeader();\n\n\tlet sControlId, bIsCreationRow;\n\tif (!oTargetTableInfo.oTableRowContext) {\n\t\tsControlId = aMessage.getControlIds().find(function (sId: string) {\n\t\t\treturn messageHandling.isControlInTable(oTable, sId);\n\t\t});\n\t}\n\n\tif (sControlId) {\n\t\tconst oControl = UI5Element.getElementById(sControlId);\n\t\tbIsCreationRow = messageHandling.isControlPartOfCreationRow(oControl);\n\t}\n\n\tif (!oTargetTableInfo.sTableTargetColName) {\n\t\t// if the column is not present on UI or the target does not have a table field in it, use Last Action for grouping\n\t\tif (aMessage.getPersistent() && sActionName) {\n\t\t\tfnSetGroupName(aMessage, sActionName);\n\t\t\tsetSectionNameInGroup = false;\n\t\t}\n\t}\n\n\tconst subTitle = messageHandling.getMessageSubtitle(\n\t\taMessage,\n\t\toTargetTableInfo.oTableRowBindingContexts,\n\t\toTargetTableInfo.oTableRowContext,\n\t\toTargetTableInfo.sTableTargetColName,\n\t\toTable,\n\t\tbIsCreationRow\n\t);\n\n\treturn { oTargetTableInfo, subTitle };\n}\n\n/**\n * This function will create the subtitle based on Table Row/Column data.\n * @param message\n * @param tableRowBindingContexts\n * @param tableRowContext\n * @param tableTargetColName\n * @param table\n * @param isCreationRow\n * @param targetedControl\n * @returns Message subtitle.\n */\nfunction getMessageSubtitle(\n\tmessage: MessageWithHeader,\n\ttableRowBindingContexts: Context[],\n\ttableRowContext: ODataV4Context | undefined,\n\ttableTargetColName: string | undefined,\n\ttable: MDCTable,\n\tisCreationRow: boolean | undefined,\n\ttargetedControl?: Control\n): string | null | undefined {\n\tlet messageSubtitle;\n\tlet rowSubtitleValue;\n\tconst resourceModel = getResourceModel(table);\n\tconst tableColProperty = (table.getParent() as TableAPI)?.getTableColumnVisibilityInfo(tableRowContext);\n\tconst colFromTableSettings = messageHandling.fetchColumnInfo(message, table);\n\tif (isCreationRow || tableRowContext?.isInactive()) {\n\t\tmessageSubtitle = resourceModel.getText(\"T_MESSAGE_ITEM_SUBTITLE\", [\n\t\t\tresourceModel.getText(\"T_MESSAGE_ITEM_SUBTITLE_CREATION_ROW_INDICATOR\"),\n\t\t\ttableTargetColName ? tableTargetColName : (colFromTableSettings as AnnotationTableColumn).label\n\t\t]);\n\t} else {\n\t\tconst tableColBindingContextTextAnnotation = messageHandling.getTableColBindingContextForTextAnnotation(\n\t\t\ttable,\n\t\t\ttableRowContext,\n\t\t\ttableColProperty\n\t\t);\n\t\tconst tableColTextAnnotationPath = tableColBindingContextTextAnnotation\n\t\t\t? tableColBindingContextTextAnnotation.getObject(\"$Path\")\n\t\t\t: undefined;\n\t\tconst tableColTextArrangement =\n\t\t\ttableColTextAnnotationPath && tableColBindingContextTextAnnotation\n\t\t\t\t? tableColBindingContextTextAnnotation.getObject(\"@com.sap.vocabularies.UI.v1.TextArrangement/$EnumMember\")\n\t\t\t\t: undefined;\n\t\tif (tableRowBindingContexts.length > 0) {\n\t\t\t// set Row subtitle text\n\t\t\tif (targetedControl) {\n\t\t\t\t// The UI error is on the first column, we then get the control input as the row indicator:\n\t\t\t\trowSubtitleValue = (targetedControl as Field).getValue();\n\t\t\t} else if (tableRowContext && tableColProperty && tableColProperty.length === 1) {\n\t\t\t\t// Getting the column label and its value of a single row\n\t\t\t\trowSubtitleValue = (table.getParent() as TableAPI)?.getTableColValue(\n\t\t\t\t\ttableRowContext,\n\t\t\t\t\ttableColTextAnnotationPath,\n\t\t\t\t\ttableColTextArrangement,\n\t\t\t\t\ttableColProperty\n\t\t\t\t);\n\t\t\t} else if (tableRowContext && tableColProperty && tableColProperty.length > 1) {\n\t\t\t\t// If there are multiple rows, the subtitle is displayed as ‘See message details’\n\t\t\t\trowSubtitleValue = resourceModel.getText(\"T_MESSAGE_ITEM_SUBTITLE_DETAILED_ROW_INFO\");\n\t\t\t} else {\n\t\t\t\trowSubtitleValue = undefined;\n\t\t\t}\n\t\t\t// set the message subtitle\n\t\t\tconst oColumnInfo: ColumnInfoType = messageHandling.determineColumnInfo(colFromTableSettings, resourceModel);\n\t\t\tif (rowSubtitleValue && tableTargetColName) {\n\t\t\t\tmessageSubtitle = resourceModel.getText(\"T_MESSAGE_ITEM_SUBTITLE\", [rowSubtitleValue, tableTargetColName]);\n\t\t\t} else if (rowSubtitleValue && oColumnInfo.sColumnIndicator === \"Hidden\") {\n\t\t\t\tmessageSubtitle = `${resourceModel.getText(\"T_MESSAGE_GROUP_DESCRIPTION_TABLE_ROW_WITH_IDENTIFIER\", [rowSubtitleValue])}, ${\n\t\t\t\t\toColumnInfo.sColumnValue\n\t\t\t\t}`;\n\t\t\t} else if (rowSubtitleValue && oColumnInfo.sColumnIndicator === \"Unknown\") {\n\t\t\t\tmessageSubtitle = resourceModel.getText(\"T_MESSAGE_GROUP_DESCRIPTION_TABLE_ROW_WITH_IDENTIFIER\", [rowSubtitleValue]);\n\t\t\t} else if (rowSubtitleValue && oColumnInfo.sColumnIndicator === \"undefined\") {\n\t\t\t\tmessageSubtitle = resourceModel.getText(\"T_MESSAGE_GROUP_DESCRIPTION_TABLE_ROW_WITH_IDENTIFIER\", [rowSubtitleValue]);\n\t\t\t} else if (!rowSubtitleValue && tableTargetColName) {\n\t\t\t\tmessageSubtitle = resourceModel.getText(\"T_MESSAGE_GROUP_DESCRIPTION_TABLE_COLUMN\") + \": \" + tableTargetColName;\n\t\t\t} else if (!rowSubtitleValue && oColumnInfo.sColumnIndicator === \"Hidden\") {\n\t\t\t\tmessageSubtitle = oColumnInfo.sColumnValue;\n\t\t\t} else {\n\t\t\t\tmessageSubtitle = null;\n\t\t\t}\n\t\t} else {\n\t\t\tmessageSubtitle = null;\n\t\t}\n\t}\n\treturn messageSubtitle;\n}\n\n/**\n * This function gets the first column for text Annotation, this is needed to set subtitle of Message.\n * @param table\n * @param tableRowContext\n * @param tableColProperty\n * @returns Binding context.\n */\nfunction getTableColBindingContextForTextAnnotation(\n\ttable: MDCTable,\n\ttableRowContext: ODataV4Context | undefined,\n\ttableColProperty: TableColumnProperties\n): Context | null | undefined {\n\tlet bindingContext;\n\tif (tableRowContext && tableColProperty && tableColProperty.length === 1) {\n\t\tconst { key } = tableColProperty[0];\n\t\tconst oModel = table?.getModel();\n\t\tconst oMetaModel = oModel?.getMetaModel() as ODataMetaModel | undefined; // must be an ODataMetaModel to match the type of the table row context\n\t\tconst sMetaPath = oMetaModel?.getMetaPath(tableRowContext.getPath());\n\t\tif (oMetaModel?.getObject(`${sMetaPath}/${key}@com.sap.vocabularies.Common.v1.Text/$Path`)) {\n\t\t\tbindingContext = oMetaModel.createBindingContext(`${sMetaPath}/${key}@com.sap.vocabularies.Common.v1.Text`);\n\t\t}\n\t}\n\treturn bindingContext;\n}\n\n/**\n * The method that is called to retrieve the column info from the associated message of the message popover.\n * @param oMessage Message object\n * @param oTable MdcTable\n * @returns Returns the column info.\n */\n\nfunction fetchColumnInfo(oMessage: MessageWithHeader, oTable: MDCTable): TableColumn | undefined {\n\tconst sColNameFromMessageObj = oMessage?.getTargets()[0].split(\"/\").pop();\n\treturn (oTable.getParent() as TableAPI)?.getKeyColumnInfo(sColNameFromMessageObj);\n}\n\n/**\n * This function gets the Column data depending on its availability in Table, this is needed for setting subtitle of Message.\n * @param oColFromTableSettings\n * @param resourceModel\n * @returns Column data.\n */\nfunction determineColumnInfo(oColFromTableSettings: TableColumn | undefined, resourceModel: ResourceModel): ColumnInfoType {\n\tconst oColumnInfo: ColumnInfoType = { sColumnIndicator: \"\", sColumnValue: \"\" };\n\tif (oColFromTableSettings) {\n\t\t// if column is neither in table definition nor personalization, show only row subtitle text\n\t\tif (oColFromTableSettings.availability === \"Hidden\") {\n\t\t\toColumnInfo.sColumnValue = undefined;\n\t\t\toColumnInfo.sColumnIndicator = \"undefined\";\n\t\t} else {\n\t\t\t//if column is in table personalization but not in table definition, show Column (Hidden) : <colName>\n\t\t\toColumnInfo.sColumnValue = `${resourceModel.getText(\"T_MESSAGE_GROUP_DESCRIPTION_TABLE_COLUMN\")} (${resourceModel.getText(\n\t\t\t\t\"T_COLUMN_INDICATOR_IN_TABLE_DEFINITION\"\n\t\t\t)}): ${oColFromTableSettings.label}`;\n\t\t\toColumnInfo.sColumnIndicator = \"Hidden\";\n\t\t}\n\t} else {\n\t\toColumnInfo.sColumnIndicator = \"Unknown\";\n\t}\n\treturn oColumnInfo;\n}\n\n/**\n * This function check if a given control id is a part of Table.\n * @param oTable\n * @param sControlId\n * @returns True if control is part of table.\n */\nfunction isControlInTable(oTable: MDCTable, sControlId: string): UI5Element[] | boolean {\n\tconst oControl = UI5Element.getElementById(sControlId);\n\tif (oControl && !oControl.isA<UITable>(\"sap.ui.table.Table\") && !oControl.isA<Table>(\"sap.m.Table\")) {\n\t\treturn oTable.findElements(true, function (oElem: Control): boolean {\n\t\t\treturn oElem.getId() === oControl.getId();\n\t\t});\n\t}\n\treturn false;\n}\n\nfunction isControlPartOfCreationRow(oControl: UI5Element | undefined): boolean {\n\tlet oParentControl = oControl?.getParent();\n\twhile (\n\t\toParentControl &&\n\t\t!oParentControl?.isA(\"sap.ui.table.Row\") &&\n\t\t!oParentControl?.isA(\"sap.ui.table.CreationRow\") &&\n\t\t!oParentControl?.isA(\"sap.m.ColumnListItem\")\n\t) {\n\t\toParentControl = oParentControl.getParent();\n\t}\n\n\treturn !!oParentControl && oParentControl.isA(\"sap.ui.table.CreationRow\");\n}\n\nfunction getTranslatedTextForMessageDialog(sHighestPriority: string): string {\n\tconst resourceBundle = Library.getResourceBundleFor(\"sap.fe.core\")!;\n\tswitch (sHighestPriority) {\n\t\tcase \"Error\":\n\t\t\treturn resourceBundle.getText(\"C_COMMON_SAPFE_ERROR_MESSAGES_PAGE_TITLE_ERROR\");\n\t\tcase \"Information\":\n\t\t\treturn resourceBundle.getText(\"C_MESSAGE_HANDLING_SAPFE_ERROR_MESSAGES_PAGE_TITLE_INFO\");\n\t\tcase \"Success\":\n\t\t\treturn resourceBundle.getText(\"C_MESSAGE_HANDLING_SAPFE_ERROR_MESSAGES_PAGE_TITLE_SUCCESS\");\n\t\tcase \"Warning\":\n\t\t\treturn resourceBundle.getText(\"C_MESSAGE_HANDLING_SAPFE_ERROR_MESSAGES_PAGE_TITLE_WARNING\");\n\t\tdefault:\n\t\t\treturn resourceBundle.getText(\"C_MESSAGE_HANDLING_SAPFE_ERROR_MESSAGES_PAGE_TITLE\");\n\t}\n}\nfunction removeUnboundTransitionMessages(): void {\n\tremoveTransitionMessages(false);\n}\nfunction removeBoundTransitionMessages(sPathToBeRemoved?: string): void {\n\tremoveTransitionMessages(true, sPathToBeRemoved);\n}\n\nfunction getMessagesFromMessageModel(oMessageModel: MessageModel, sPathToBeRemoved?: string): Message[] {\n\tif (sPathToBeRemoved === undefined) {\n\t\treturn oMessageModel.getObject(\"/\");\n\t}\n\tconst listBinding = oMessageModel.bindList(\"/\");\n\n\tlistBinding.filter(\n\t\tnew Filter({\n\t\t\tpath: \"\",\n\t\t\ttest: (message: Message) => message.getTargets().some((target) => target.startsWith(sPathToBeRemoved))\n\t\t})\n\t);\n\n\treturn listBinding.getCurrentContexts().map(function (oContext) {\n\t\treturn oContext.getObject();\n\t});\n}\n\n/**\n * Get relevant messages.\n * @param bBoundMessages To get only bound messages\n * @param bTransitionOnly To get only transition messages\n * @param sPathToBeRemoved Filter out bound messages with path\n * @returns Messages\n */\nfunction getMessages(bBoundMessages = false, bTransitionOnly = false, sPathToBeRemoved?: string): Message[] {\n\tlet i;\n\tconst oMessageModel = Messaging.getMessageModel(),\n\t\toResourceBundle = Library.getResourceBundleFor(\"sap.fe.core\")!,\n\t\taTransitionMessages = [];\n\tlet aMessages: Message[] = [];\n\tif (bBoundMessages && bTransitionOnly && sPathToBeRemoved) {\n\t\taMessages = getMessagesFromMessageModel(oMessageModel, sPathToBeRemoved);\n\t} else {\n\t\taMessages = oMessageModel.getObject(\"/\");\n\t}\n\tfor (i = 0; i < aMessages.length; i++) {\n\t\tif (\n\t\t\t(!bTransitionOnly || aMessages[i].getPersistent()) &&\n\t\t\t((bBoundMessages && aMessages[i].getTargets()[0] !== \"\") ||\n\t\t\t\t(!bBoundMessages && (!aMessages[i].getTargets()[0] || aMessages[i].getTargets()[0] === \"\")))\n\t\t) {\n\t\t\taTransitionMessages.push(aMessages[i]);\n\t\t}\n\t}\n\n\tfor (i = 0; i < aTransitionMessages.length; i++) {\n\t\tif (\n\t\t\taTransitionMessages[i].getCode() === \"503\" &&\n\t\t\taTransitionMessages[i].getMessage() !== \"\" &&\n\t\t\t!aTransitionMessages[i].getMessage().includes(oResourceBundle.getText(\"C_MESSAGE_HANDLING_SAPFE_503_BACKEND_PREFIX\"))\n\t\t) {\n\t\t\taTransitionMessages[i].setMessage(\n\t\t\t\t`\\n${oResourceBundle.getText(\"C_MESSAGE_HANDLING_SAPFE_503_BACKEND_PREFIX\")}${aTransitionMessages[i].getMessage()}`\n\t\t\t);\n\t\t}\n\t}\n\t//Filtering messages again here to avoid showing pure technical messages raised by the model\n\tconst backendMessages: Message[] = aTransitionMessages.filter(isNonTechnicalMessage);\n\n\treturn backendMessages;\n}\nexport type MessageTechnicalDetails = {\n\toriginalMessage?: {\n\t\tmessage?: string;\n\t} | null;\n\thttpStatus?: number | null;\n\tretryAfter?: Date;\n\tisConcurrentModification?: boolean;\n};\nfunction removeTransitionMessages(bBoundMessages: boolean, sPathToBeRemoved?: string): void {\n\tconst aMessagesToBeDeleted = getMessages(bBoundMessages, true, sPathToBeRemoved);\n\n\tif (aMessagesToBeDeleted.length > 0) {\n\t\tMessaging.removeMessages(aMessagesToBeDeleted);\n\t}\n}\n//TODO: This must be moved out of message handling\nfunction setMessageSubtitle(oTable: MDCTable, aContexts: Context[], message: MessageWithHeader): void {\n\tif (message.additionalText === undefined) {\n\t\tconst subtitleColumn = (oTable.getParent() as TableAPI).getIdentifierColumn() as string;\n\t\tconst errorContext = aContexts.find(function (oContext) {\n\t\t\treturn message.getTargets()[0].includes(oContext.getPath());\n\t\t});\n\t\tmessage.additionalText = errorContext ? errorContext.getObject()[subtitleColumn] : undefined;\n\t}\n}\n\n/**\n * The method retrieves the visible sections from an object page.\n * @param oObjectPageLayout The objectPageLayout object for which we want to retrieve the visible sections.\n * @returns Array of visible sections.\n */\nfunction getVisibleSectionsFromObjectPageLayout(oObjectPageLayout: Control | ObjectPageLayout): ObjectPageSection[] {\n\treturn (oObjectPageLayout as ObjectPageLayout).getSections().filter(function (oSection: ObjectPageSection) {\n\t\treturn oSection.getVisible();\n\t});\n}\n\n/**\n * This function checks if control ids from message are a part of a given subsection.\n * @param subSection\n * @param oMessageObject\n * @returns SubSection matching control ids.\n */\nfunction getControlFromMessageRelatingToSubSection(subSection: ObjectPageSubSection, oMessageObject: MessageWithHeader): UI5Element[] {\n\treturn subSection\n\t\t.findElements(true, (oElem) => {\n\t\t\treturn fnFilterUponIds(oMessageObject.getControlIds(), oElem);\n\t\t})\n\t\t.sort(function (a, b) {\n\t\t\t// controls are sorted in order to have the table on top of the array\n\t\t\t// it will help to compute the subtitle of the message based on the type of related controls\n\t\t\tif (a.isA(\"sap.ui.mdc.Table\") && !b.isA(\"sap.ui.mdc.Table\")) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\treturn 1;\n\t\t});\n}\n\nfunction getTableColProperty(oTable: Control, oMessageObject: MessageWithHeader, oContextPath?: string | RegExp): string {\n\t//this function escapes a string to use it as a regex\n\tconst fnRegExpescape = function (s: string): string {\n\t\treturn s.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, \"\\\\$&\");\n\t};\n\t// based on the target path of the message we retrieve the property name.\n\t// to achieve it we remove the bindingContext path and the row binding path from the target\n\tif (!oContextPath) {\n\t\tconst contextPathToEscape = `${oTable.getBindingContext()?.getPath()}/${(oTable as MDCTable).getRowBinding().getPath()}`;\n\t\toContextPath = new RegExp(`${fnRegExpescape(contextPathToEscape)}\\\\(.*\\\\)/`);\n\t}\n\treturn oMessageObject.getTargets()[0].replace(oContextPath, \"\");\n}\n\n/**\n * This function gives the column information if it matches with the property name from target of message.\n * @param oTable\n * @param sTableTargetColProperty\n * @returns Column name and property.\n */\nfunction getTableColInfo(\n\toTable: MDCTable,\n\tsTableTargetColProperty: string | undefined\n): { sTableTargetColName: string | undefined; sTableTargetColProperty: string | undefined } {\n\tlet sTableTargetColName: string | undefined;\n\tconst oTableTargetCol: Column | undefined = oTable.getColumns().find(function (column) {\n\t\treturn column.getPropertyKey() == sTableTargetColProperty;\n\t});\n\tif (!oTableTargetCol) {\n\t\t/* If the target column is not found, we check for a custom column */\n\t\tconst oCustomColumn = (oTable.getControlDelegate() as typeof TableDelegate).getColumnsFor(oTable).find(function (\n\t\t\toColumn: TableColumn\n\t\t): boolean {\n\t\t\tif (!!(oColumn as CustomBasedTableColumn).template && oColumn.propertyInfos) {\n\t\t\t\treturn (\n\t\t\t\t\toColumn.propertyInfos[0] === sTableTargetColProperty ||\n\t\t\t\t\toColumn.propertyInfos[0].replace(\"Property::\", \"\") === sTableTargetColProperty\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}) as CustomBasedTableColumn | undefined;\n\t\tif (oCustomColumn) {\n\t\t\tsTableTargetColProperty = oCustomColumn?.name;\n\n\t\t\tsTableTargetColName = oTable\n\t\t\t\t.getColumns()\n\t\t\t\t.find(function (oColumn): boolean {\n\t\t\t\t\treturn sTableTargetColProperty === oColumn.getPropertyKey();\n\t\t\t\t})\n\t\t\t\t?.getHeader();\n\t\t} else {\n\t\t\t/* If the target column is not found, we check for a field group */\n\t\t\tconst aColumns = (oTable.getControlDelegate() as typeof TableDelegate).getColumnsFor(oTable);\n\t\t\tconst columnDefinition = aColumns.find(function (oColumn: TableColumn) {\n\t\t\t\tif (oColumn.key.includes(\"::FieldGroup::\")) {\n\t\t\t\t\treturn oColumn.propertyInfos?.find(function (propertyInfo: string) {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\tpropertyInfo === sTableTargetColProperty || propertyInfo.replace(\"Property::\", \"\") === sTableTargetColProperty\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}) as AnnotationTableColumn | undefined;\n\t\t\t/* check if the column with the field group is visible in the table: */\n\t\t\tlet bIsTableTargetColVisible = false;\n\t\t\tif (columnDefinition && columnDefinition.label) {\n\t\t\t\tbIsTableTargetColVisible = oTable.getColumns().some(function (column) {\n\t\t\t\t\treturn column.getHeader() === columnDefinition.label;\n\t\t\t\t});\n\t\t\t}\n\t\t\tsTableTargetColName = bIsTableTargetColVisible ? columnDefinition?.label : undefined;\n\t\t\tsTableTargetColProperty = bIsTableTargetColVisible ? columnDefinition?.key : undefined;\n\t\t}\n\t} else {\n\t\tsTableTargetColName = oTableTargetCol.getHeader();\n\t}\n\treturn { sTableTargetColName: sTableTargetColName, sTableTargetColProperty: sTableTargetColProperty };\n}\n\n/**\n * This function gives Table and column info if any of it matches the target from Message.\n * @param oTable\n * @param oMessageObject\n * @param oElement\n * @param oRowBinding\n * @returns Table info matching the message target.\n */\nfunction getTableAndTargetInfo(\n\toTable: MDCTable,\n\toMessageObject: MessageWithHeader,\n\toElement: UI5Element | undefined,\n\toRowBinding: Binding\n): TargetTableInfoType {\n\tconst sTableTargetColProperty = getTableColProperty(oTable, oMessageObject);\n\tconst oTableColInfo = getTableColInfo(oTable, sTableTargetColProperty);\n\tconst oTableRowBindingContexts = oElement?.isA(\"sap.ui.table.Table\")\n\t\t? (oRowBinding as ODataListBinding).getContexts()\n\t\t: (oRowBinding as ODataListBinding).getCurrentContexts();\n\tconst oTargetTableInfo: TargetTableInfoType = {\n\t\toTableRowBindingContexts,\n\t\tsTableTargetColName: oTableColInfo.sTableTargetColName,\n\t\tsTableTargetColProperty: oTableColInfo.sTableTargetColProperty,\n\t\toTableRowContext: oTableRowBindingContexts.find(function (rowContext) {\n\t\t\treturn rowContext && oMessageObject.getTargets()[0].indexOf(rowContext.getPath()) === 0;\n\t\t})\n\t};\n\treturn oTargetTableInfo;\n}\n\n/**\n *\n * @param aControlIds\n * @param oItem\n * @returns True if the item matches one of the controls\n */\nfunction fnFilterUponIds(aControlIds: string[], oItem: UI5Element): boolean {\n\treturn aControlIds.some(function (sControlId) {\n\t\tif (sControlId === oItem.getId()) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t});\n}\n\n/**\n * This function gives the group name having section and subsection data.\n * @param section\n * @param subSection\n * @param bMultipleSubSections\n * @param oTargetTableInfo\n * @param resourceModel\n * @param includeTableGroupName\n * @returns Group name.\n */\nfunction createSectionGroupName(\n\tsection: ObjectPageSection,\n\tsubSection: ObjectPageSubSection,\n\tbMultipleSubSections: boolean,\n\toTargetTableInfo: TargetTableInfoType,\n\tresourceModel: ResourceModel,\n\tincludeTableGroupName = true\n): string {\n\treturn (\n\t\tsection.getTitle() +\n\t\t(subSection.getTitle() && bMultipleSubSections ? `, ${subSection.getTitle()}` : \"\") +\n\t\t(oTargetTableInfo && oTargetTableInfo.tableHeader && includeTableGroupName\n\t\t\t? `, ${resourceModel.getText(\"T_MESSAGE_GROUP_TITLE_TABLE_DENOMINATOR\")}: ${oTargetTableInfo.tableHeader}`\n\t\t\t: \"\")\n\t);\n}\n\nfunction bIsOrphanElement(oElement: UI5Element, aElements: UI5Element[]): boolean {\n\treturn !aElements.some(function (oElem) {\n\t\tlet oParentElement = oElement.getParent();\n\t\twhile (oParentElement && oParentElement !== oElem) {\n\t\t\toParentElement = oParentElement.getParent();\n\t\t}\n\t\treturn oParentElement ? true : false;\n\t});\n}\n\n/**\n * This function filters and gives back the messages based on the context passed.\n * @param context\n * @returns Messages.\n */\nfunction getMessagesForContext(context: Context): Message[] {\n\tconst oMessageModel = Messaging.getMessageModel();\n\tconst listBinding = oMessageModel.bindList(\"/\");\n\tlistBinding.filter(\n\t\tnew Filter({\n\t\t\tpath: \"\",\n\t\t\ttest: (message: Message) => message.getTargets().length > 0 && message.getTargets()[0].startsWith(context.getPath())\n\t\t})\n\t);\n\tconst currentContexts = listBinding.getCurrentContexts();\n\treturn currentContexts.map((currentContext) => currentContext.getObject());\n}\n\n/**\n * This function returns the boolean to check if the target is present in the dialog based on the control Ids.\n * @param controlIds Array of control Ids\n * @returns Boolean value based on the target present in the dialog.\n */\nfunction isMessageOutOfParameterDialog(controlIds: string[]): boolean {\n\tlet oControl: ManagedObject | null | undefined, errorFieldControl;\n\tconst index = Infinity;\n\tif (controlIds.length === 1) {\n\t\toControl = UI5Element.getElementById(controlIds[0]);\n\t\terrorFieldControl = UI5Element.getElementById(controlIds[0]) as UI5Element;\n\t} else {\n\t\tlet errorControlId;\n\t\tcontrolIds.forEach((controlId) => {\n\t\t\tconst control = UI5Element.getElementById(controlId);\n\t\t\tif (control?.isA(\"sap.ui.mdc.Field\")) {\n\t\t\t\terrorControlId = controlId;\n\t\t\t\toControl = UI5Element.getElementById(errorControlId);\n\t\t\t}\n\t\t});\n\t}\n\twhile (oControl) {\n\t\tconst fieldRankinDialog = Infinity;\n\t\tif (oControl instanceof Dialog) {\n\t\t\tif (index > fieldRankinDialog) {\n\t\t\t\t// Set the focus to the dialog's control\n\t\t\t\terrorFieldControl?.focus();\n\t\t\t}\n\t\t\t// messages with target inside sap.m.Dialog should not bring up the message dialog\n\t\t\treturn false;\n\t\t}\n\t\toControl = oControl.getParent();\n\t}\n\treturn true;\n}\n\n/**\n * Removes Transition messages related to the specified context path when the object page is closed.\n * @param oContext The binding context for which the messages are checked.\n */\nfunction removeTransistionMessageForContext(oContext: Context): void {\n\tconst messagesInModel = Messaging.getMessageModel().getData();\n\tconst isMessageStripMessage: Message[] = [];\n\n\tmessagesInModel?.forEach((message: Message) => {\n\t\tconst isSingleTarget = message.getTargets().length === 1;\n\t\tconst isTargetMatching = message.getTargets()[0] === oContext?.getPath();\n\t\tconst isTransitionMessage = message.getPersistent() === true;\n\n\t\tif (isSingleTarget && isTargetMatching && isTransitionMessage) {\n\t\t\tisMessageStripMessage.push(message);\n\t\t}\n\t});\n\n\tif (isMessageStripMessage.length === 1) {\n\t\tMessaging.removeMessages(isMessageStripMessage);\n\t}\n}\n\n/**\n * This method is responsible for removing messages related to the context from the message model when there is error on the dialog and when the dialog is open.\n * @param messages Array of messages\n * @param contexts Contexts array\n */\nfunction removeContextMessagesfromModel(messages?: Message[], contexts?: Context[]): void {\n\tconst boundContextMessages: Message[] = [];\n\tif (contexts?.length === 1) {\n\t\tmessages?.forEach((message: Message) => {\n\t\t\tif (\n\t\t\t\tmessage.getTargets().length === 1 &&\n\t\t\t\tmessage.getTargets()[0] === contexts?.[0]?.getPath() &&\n\t\t\t\tmessage.getPersistent() === true\n\t\t\t) {\n\t\t\t\tboundContextMessages.push(message);\n\t\t\t}\n\t\t});\n\t}\n\tif (boundContextMessages.length > 0) {\n\t\tMessaging.removeMessages(boundContextMessages);\n\t}\n}\n\n/**\n * This method is responsible for removing messages related to the action parameter dialog from showing the messages.\n * @param messages Array of messages\n * @returns Array of messages after removing the messages related to the action parameter dialog.\n */\nfunction removeMessagesForActionParameterDialog(messages: Message[]): Message[] {\n\tconst messagesToBeRemoved = messages?.filter((message: Message) => message.getPersistent() === true && message.getTargets()[0] !== \"\");\n\tmessages = messages?.filter((message: Message) => !messagesToBeRemoved?.includes(message));\n\treturn messages;\n}\n\nfunction removeAllTransitionMessagesForContext(context: Context): void {\n\tMessaging.getMessageModel()\n\t\t.getData()\n\t\t?.forEach((message: Message) => {\n\t\t\tconst messageTargets = message.getTargets();\n\t\t\tif (messageTargets.length === 1 && messageTargets[0].includes(context.getPath()) && message.getPersistent()) {\n\t\t\t\tMessaging.removeMessages(message);\n\t\t\t}\n\t\t});\n}\n\n/**\n * Static functions for Fiori Message Handling\n * @namespace\n * @since 1.56.0\n */\nconst messageHandling: messageHandlingType = {\n\tgetMessages: getMessages,\n\tgetUIDecisions: getUIDecisions,\n\tremoveUnboundTransitionMessages: removeUnboundTransitionMessages,\n\tremoveBoundTransitionMessages: removeBoundTransitionMessages,\n\tmodifyETagMessagesOnly: fnModifyETagMessagesOnly,\n\tgetRetryAfterMessage: getRetryAfterMessage,\n\tprepareMessageViewForDialog: prepareMessageViewForDialog,\n\tsetMessageSubtitle: setMessageSubtitle,\n\tgetVisibleSectionsFromObjectPageLayout: getVisibleSectionsFromObjectPageLayout,\n\tgetControlFromMessageRelatingToSubSection: getControlFromMessageRelatingToSubSection,\n\tfnFilterUponIds: fnFilterUponIds,\n\tgetTableAndTargetInfo: getTableAndTargetInfo,\n\tcreateSectionGroupName: createSectionGroupName,\n\tbIsOrphanElement: bIsOrphanElement,\n\tgetLastActionTextAndActionName: getLastActionTextAndActionName,\n\tgetTableColumnDataAndSetSubtile: getTableColumnDataAndSetSubtile,\n\tgetTableColInfo: getTableColInfo,\n\tgetTableColProperty: getTableColProperty,\n\tgetMessageSubtitle: getMessageSubtitle,\n\tdetermineColumnInfo: determineColumnInfo,\n\tfetchColumnInfo: fetchColumnInfo,\n\tgetTableColBindingContextForTextAnnotation: getTableColBindingContextForTextAnnotation,\n\tgetMessageRank: getMessageRank,\n\thasTransitionErrorsOrWarnings: hasTransitionErrorsOrWarnings,\n\tfnCallbackSetGroupName: fnCallbackSetGroupName,\n\tsetGroupNameOPDisplayMode: setGroupNameOPDisplayMode,\n\tupdateMessageObjectGroupName: updateMessageObjectGroupName,\n\tsetGroupNameLRTable: setGroupNameLRTable,\n\tisControlInTable: isControlInTable,\n\tisControlPartOfCreationRow: isControlPartOfCreationRow,\n\tgetFiltersForMessages: getFiltersForMessages,\n\tshowMessagesInUI: showMessagesInUI,\n\tshowMessageDialogControl: showMessageDialogControl,\n\tshowMessageToast: showMessageToast,\n\tshowMessageBoxControl: showMessageBoxControl,\n\tgetMessagesForContext: getMessagesForContext,\n\tisMessageOutOfParameterDialog: isMessageOutOfParameterDialog,\n\tremoveContextMessagesfromModel: removeContextMessagesfromModel,\n\tremoveMessagesForActionParameterDialog: removeMessagesForActionParameterDialog,\n\tsetGroupNameOPTableDisplayMode: setGroupNameOPTableDisplayMode,\n\tupdateAddtionalTextForMessageInOPTable: updateAddtionalTextForMessageInOPTable,\n\tupdateHeaderNameForMessageInOPTable: updateHeaderNameForMessageInOPTable,\n\tcloseMessageBox: closeMessageBox,\n\tremoveTransistionMessageForContext: removeTransistionMessageForContext,\n\tcheckIfAllAreSameSuccessMessages: checkIfAllAreSameSuccessMessages,\n\taddGenericSuccessMessage: addGenericSuccessMessage,\n\tisNonTechnicalMessage: isNonTechnicalMessage,\n\tremoveAllTransitionMessagesForContext: removeAllTransitionMessagesForContext\n};\n\nexport default messageHandling;\n"],"mappings":"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","ignoreList":[],"file":"messageHandling-dbg.js"}