{"version":3,"names":["InternalRouting","_dec","defineUI5Class","_dec2","methodOverride","_dec3","_dec4","publicExtension","_dec5","extensible","OverrideExecution","After","_dec6","_dec7","_dec8","_dec9","_dec10","_dec11","_dec12","_dec13","_dec14","_dec15","finalExtension","_dec16","_dec17","_dec18","_dec19","_dec20","_dec21","_dec22","Before","_class","_class2","_ControllerExtension","apply","arguments","_inheritsLoose","_proto","prototype","onExit","_oRoutingService","_fnRouteMatchedBound","detachRouteMatched","onInit","_oView","base","getView","_oAppComponent","CommonUtils","getAppComponent","_oPageComponent","Component","getOwnerComponentFor","_oRouter","getRouter","_oRouterProxy","getRouterProxy","Error","getService","then","oRoutingService","isA","_onRouteMatched","bind","attachRouteMatched","_oTargetInformation","getTargetInformationFor","catch","onRouteMatched","onRouteMatchedFinished","onBeforeBinding","_bindingContext","_mParameters","beforeSetBindingContext","bindingContext","oRouting","getController","routing","onAfterBinding","getRootViewController","onContextBoundToView","afterSetBindingContext","deferredCreation","navigateToTarget","oContext","sNavigationTargetName","bPreserveHistory","delayedUsage","oNavigationConfiguration","getNavigationConfiguration","oDetailRoute","detail","sRouteName","route","mParameterMapping","parameters","navigateTo","getHashForNavigation","context","navigationTargetName","navigationConfiguration","detailRoute","routeName","parameterMapping","getHashFromRoute","navigateToRoute","sTargetRouteName","oParameters","navigateToContext","length","undefined","createOnNavigateParameters","mode","activateRouteMatchSynchronization","createContextPromise","createdContext","checkNoHashChange","editable","persistOPScroll","updateFCLLevel","forceFocus","oError","Log","error","callExtension","internalModel","getModel","setProperty","contextToNavigate","hiddenBinding","backPath","getPathToNavigateBack","getPath","bindContext","getBoundContext","overrideNav","onBeforeNavigation","destroy","Promise","resolve","FCLLevel","getFCLLevel","reason","NavigationReason","RowPress","model","metaModel","getMetaModel","isPathOnDraftRoot","contextForNavigation","getContextForNavigationWithCollaboration","getContextForNavigationFromTreeOrAnalyticalTable","removeTransitionMessagesForPreviousContext","getViewData","originalContext","ModelHelper","isCollaborationDraftSupported","getProperty","draftOrActiveContext","getDraftOrActiveContext","objectPath","getInvolvedDataModelObjects","getMetaContext","redirectedToNonDraft","targetEntityType","annotations","UI","HeaderInfo","TypeName","name","isFclEnabled","contextToReplaceWith","getKeepAliveContext","replaceWith","EditState","setEditStateDirty","parentBinding","getBinding","aggregation","getAggregation","hierarchyQualifier","group","aggregate","navigateBackFromContext","navigateForwardToContext","getBindingContext","navigateBackFromTransientState","sHash","getHash","includes","navBack","navigateToMessagePage","sErrorMessage","mParameters","navToHash","getDefaultCreateHash","displayErrorPage","isCurrentStateImpactedBy","_isViewPartOfRoute","routeInformation","aTargets","targets","targetName","viewLevel","routeLevel","getRoutingService","addBindingCleanupPromise","setTimeout","collaborativeDraft","disconnect","_setBindingContext","oEvent","getParameter","bindingPattern","getBindingContextPattern","contextPattern","mArguments","getParameters","oNavigationParameters","path","deferred","RoutingHelpser","buildBindingPath","bindPromise","oModel","_bindDeferred","EditFlowAction","isOpenInEditMode","_bindPageForEdit","_bindPage","finally","toString","updateUIStateForView","targetPath","navigationParameters","bTargetEditable","createDeferredContext","listBinding","parentContext","data","bActionCreate","_bindPageToContext","technicalPath","resolvePath","isStickyEditMode","isSticky","isStickySessionSupported","activeContext","useContext","_createContext","editFlow","editDocument","_bindPageToPath","resourceBundle","Library","getResourceBundleFor","getText","title","description","message","e","messageHandler","showMessages","sTargetPath","oCurrentContext","_getBindingContext","sCurrentPath","oUseContext","oRootViewController","shouldRefreshContext","hasPendingChanges","isDraftSupported","isConnected","resetChanges","getSideEffectsService","requestSideEffects","$NavigationPropertyPath","getGroupId","err","bPersistOPScroll","showPlaceholder","bShowPlaceholder","AppStateChanged","RestoreHistory","isEditStateDirty","_refreshBindingContext","oParentListBinding","_setKeepAlive","isExiting","isContextUsedInPages","executeShareAction","sPath","oPageComponent","sEntitySet","getEntitySet","sContextPath","getContextPath","oMetaModel","$$groupId","$$updateGroupId","$$patchWithoutSideEffects","inlineEditFlow","isInlineEditPossible","INLINEEDIT_UPDATEGROUPID","oDraftRoot","getObject","oDraftNode","dataModelObject","getContext","alternateAndSecondaryKeys","getAlternateAndSecondaryKeys","targetEntitySet","semanticKeys","Common","SemanticKey","map","key","value","_getKeepAliveContext","propertiesToRequest","concat","requestProperty","requestObject","propertiesToSelect","sMessagesPath","getMessagesPath","push","$select","join","oPreviousBinding","getUpdateGroupId","oHiddenBinding","attachEventOnce","BusyLocker","lock","holdMessagesForControl","onDataReceived","isLocked","unlock","mParams","errorStatus","status","cause","oResourceBundle","isInitialLoad503Error","shellBack","isDataReceivedError","control","releaseHoldByControl","oBindingContext","oSideEffectsService","sRootContextPath","aNavigationPropertyPaths","aPropertyPaths","oSideEffects","targetProperties","targetEntities","getBindingPaths","oBinding","aDependentBindings","sRelativePath","replace","slice","getDependentBindings","item","i","reduce","targetProperty","index","indexOf","oPreviousContext","oTargetControl","setBindingContext","isKeepAlive","bKeepAlive","fnBeforeDestroy","bRequestMessages","endsWith","sMetaPath","getMetaPath","setKeepAlive","keptAliveSegments","split","additionnalSegments","pop","keptAlivePath","oKeepAliveContext","reverse","additionnalPath","switchFullScreen","oSource","oFCLHelperModel","bIsFullScreen","sNextLayout","getRightmostContext","_routing","layout","warning","closeColumn","oViewData","noPreservationCache","isDocumentModified","UiModelConstants","DocumentModified","isHiddenDraftEnabled","getEnvironmentCapabilities","getCapabilities","HiddenDraft","enabled","skipDiscardPopover","skipBackNavigation","cancelDocument","draft","processDataLossOrDraftDiscardConfirmation","Function","NavigationType","BackNavigation","messageHandling","removeTransistionMessageForContext","previousContext","removeAllTransitionMessagesForContext","ControllerExtension","_applyDecoratedDescriptor","Object","getOwnPropertyDescriptor"],"sourceRoot":".","sources":["InternalRouting.ts"],"sourcesContent":["import type { EntitySet, EntityType } from \"@sap-ux/vocabularies-types\";\nimport Log from \"sap/base/Log\";\nimport type { EnhanceWithUI5 } from \"sap/fe/base/ClassSupport\";\nimport { defineUI5Class, extensible, finalExtension, methodOverride, publicExtension } from \"sap/fe/base/ClassSupport\";\nimport type AppComponent from \"sap/fe/core/AppComponent\";\nimport type { FEView } from \"sap/fe/core/BaseController\";\nimport CommonUtils from \"sap/fe/core/CommonUtils\";\nimport type PageController from \"sap/fe/core/PageController\";\nimport type TemplateComponent from \"sap/fe/core/TemplateComponent\";\nimport BusyLocker from \"sap/fe/core/controllerextensions/BusyLocker\";\nimport { type NavigationToErrorPageResult, type ShowMessagesParameters } from \"sap/fe/core/controllerextensions/MessageHandler\";\nimport type { BindContextParameters } from \"sap/fe/core/controllerextensions/editFlow/draft\";\nimport draft from \"sap/fe/core/controllerextensions/editFlow/draft\";\nimport { getDraftOrActiveContext, isPathOnDraftRoot, resolvePath } from \"sap/fe/core/controllerextensions/routing/ContextPathHelper\";\nimport NavigationReason from \"sap/fe/core/controllerextensions/routing/NavigationReason\";\nimport type RouterProxy from \"sap/fe/core/controllerextensions/routing/RouterProxy\";\nimport EditState from \"sap/fe/core/helpers/EditState\";\nimport ModelHelper from \"sap/fe/core/helpers/ModelHelper\";\nimport type FclController from \"sap/fe/core/rootView/Fcl.controller\";\nimport type { RoutingNavigationInfo, RoutingNavigationParameters, RoutingService } from \"sap/fe/core/services/RoutingServiceFactory\";\nimport type Event from \"sap/ui/base/Event\";\nimport Component from \"sap/ui/core/Component\";\nimport Library from \"sap/ui/core/Lib\";\nimport type { RoutingTarget } from \"sap/ui/core/Manifest\";\nimport ControllerExtension from \"sap/ui/core/mvc/ControllerExtension\";\nimport OverrideExecution from \"sap/ui/core/mvc/OverrideExecution\";\nimport type Router from \"sap/ui/core/routing/Router\";\nimport type Binding from \"sap/ui/model/Binding\";\nimport type Context from \"sap/ui/model/odata/v4/Context\";\nimport type ODataContextBinding from \"sap/ui/model/odata/v4/ODataContextBinding\";\nimport type ODataListBinding from \"sap/ui/model/odata/v4/ODataListBinding\";\nimport type ODataModel from \"sap/ui/model/odata/v4/ODataModel\";\nimport type ODataPropertyBinding from \"sap/ui/model/odata/v4/ODataPropertyBinding\";\nimport type { HiddenDraft } from \"../converters/ManifestSettings\";\nimport { getInvolvedDataModelObjects } from \"../converters/MetaModelConverter\";\nimport RoutingHelpser from \"../helpers/RoutingHelper\";\nimport type { SideEffectsTargetType } from \"../services/SideEffectsServiceFactory\";\nimport UiModelConstants from \"./editFlow/editFlowConstants\";\nimport messageHandling from \"./messageHandler/messageHandling\";\n\ntype RouteInformation = {\n\ttargets?: unknown[];\n\trouteLevel: number;\n};\n/**\n * {@link sap.ui.core.mvc.ControllerExtension Controller extension}\n * @since 1.74.0\n */\n@defineUI5Class(\"sap.fe.core.controllerextensions.InternalRouting\")\nclass InternalRouting extends ControllerExtension {\n\tprivate base!: PageController;\n\n\tprivate _oView!: FEView;\n\n\tprivate _oAppComponent!: AppComponent;\n\n\tprivate _oPageComponent!: EnhanceWithUI5<TemplateComponent> | null;\n\n\tprivate _oRouter!: Router;\n\n\tprivate _oRoutingService!: RoutingService;\n\n\tprivate _oRouterProxy!: RouterProxy;\n\n\tprivate _fnRouteMatchedBound?: Function;\n\n\tprotected _oTargetInformation!: RoutingTarget;\n\n\t@methodOverride()\n\tonExit(): void {\n\t\tif (this._oRoutingService && this._fnRouteMatchedBound) {\n\t\t\tthis._oRoutingService.detachRouteMatched(this._fnRouteMatchedBound);\n\t\t}\n\t}\n\n\t@methodOverride()\n\tonInit(): void {\n\t\tthis._oView = this.base.getView();\n\t\tthis._oAppComponent = CommonUtils.getAppComponent(this._oView);\n\t\tthis._oPageComponent = Component.getOwnerComponentFor(this._oView) as EnhanceWithUI5<TemplateComponent>;\n\t\tthis._oRouter = this._oAppComponent.getRouter();\n\t\tthis._oRouterProxy = this._oAppComponent.getRouterProxy();\n\n\t\tif (!this._oAppComponent || !this._oPageComponent) {\n\t\t\tthrow new Error(\"Failed to initialize controler extension 'sap.fe.core.controllerextesions.InternalRouting\");\n\t\t}\n\n\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t// @ts-ignore\n\t\tif (this._oAppComponent === this._oPageComponent) {\n\t\t\t// The view isn't hosted in a dedicated UIComponent, but directly in the app\n\t\t\t// --> just keep the view\n\t\t\tthis._oPageComponent = null;\n\t\t}\n\n\t\tthis._oAppComponent\n\t\t\t.getService(\"routingService\")\n\t\t\t.then((oRoutingService: RoutingService) => {\n\t\t\t\tthis._oRoutingService = oRoutingService;\n\t\t\t\tif (this._oPageComponent?.isA(\"sap.fe.core.ReuseComponent\") !== true) {\n\t\t\t\t\t// Reuse components can potentially embed a view with a page controller, we want to avoid attaching the route matched event in this case\n\t\t\t\t\tthis._fnRouteMatchedBound = this._onRouteMatched.bind(this);\n\t\t\t\t\tthis._oRoutingService.attachRouteMatched({}, this._fnRouteMatchedBound);\n\t\t\t\t}\n\t\t\t\tthis._oTargetInformation = oRoutingService.getTargetInformationFor(this._oPageComponent || this._oView)! ?? {};\n\t\t\t\treturn;\n\t\t\t})\n\t\t\t.catch(function () {\n\t\t\t\tthrow new Error(\"This controller extension cannot work without a 'routingService' on the main AppComponent\");\n\t\t\t});\n\t}\n\n\t/**\n\t * Triggered every time this controller is a navigation target.\n\t */\n\t@publicExtension()\n\t@extensible(OverrideExecution.After)\n\tonRouteMatched(): void {\n\t\t/**/\n\t}\n\n\t@publicExtension()\n\t@extensible(OverrideExecution.After)\n\tonRouteMatchedFinished(): void {\n\t\t/**/\n\t}\n\n\t@publicExtension()\n\t@extensible(OverrideExecution.After)\n\tonBeforeBinding(_bindingContext: Context | null, _mParameters?: unknown): void {}\n\n\tbeforeSetBindingContext(bindingContext: Context | null, _mParameters?: unknown): void {\n\t\tthis.onBeforeBinding(bindingContext, _mParameters);\n\t\tconst oRouting = this.base.getView().getController().routing;\n\t\tif (oRouting && oRouting.onBeforeBinding) {\n\t\t\toRouting.onBeforeBinding(bindingContext);\n\t\t}\n\t}\n\n\t@publicExtension()\n\t@extensible(OverrideExecution.After)\n\tonAfterBinding(bindingContext: Context | null, _mParameters?: unknown): void {\n\t\tthis._oAppComponent.getRootViewController().onContextBoundToView(bindingContext);\n\t}\n\n\tafterSetBindingContext(bindingContext: Context | null, _mParameters?: object): void {\n\t\tthis.onAfterBinding(bindingContext, { ..._mParameters, deferredCreation: true });\n\t\tconst oRouting = this.base.getView().getController().routing;\n\t\tif (oRouting && oRouting.onAfterBinding) {\n\t\t\toRouting.onAfterBinding(bindingContext);\n\t\t}\n\t}\n\n\t///////////////////////////////////////////////////////////\n\t// Methods triggering a navigation after a user action\n\t// (e.g. click on a table row, button, etc...)\n\t///////////////////////////////////////////////////////////\n\n\t/**\n\t * Navigates to the specified navigation target.\n\t * @param oContext Context instance\n\t * @param sNavigationTargetName Name of the navigation target\n\t * @param bPreserveHistory True to force the new URL to be added at the end of the browser history (no replace)\n\t * @param delayedUsage True to return a function for executing the navigation, False to execute the navigation immediately\n\t */\n\tasync navigateToTarget(\n\t\toContext: Context,\n\t\tsNavigationTargetName: string,\n\t\tbPreserveHistory?: boolean,\n\t\tdelayedUsage?: true\n\t): Promise<() => void>;\n\n\t@publicExtension()\n\tasync navigateToTarget(\n\t\toContext: Context,\n\t\tsNavigationTargetName: string,\n\t\tbPreserveHistory?: boolean,\n\t\tdelayedUsage?: boolean\n\t): Promise<(() => void) | void> {\n\t\tconst oNavigationConfiguration =\n\t\t\tthis._oPageComponent &&\n\t\t\tthis._oPageComponent.getNavigationConfiguration &&\n\t\t\tthis._oPageComponent.getNavigationConfiguration(sNavigationTargetName);\n\t\tif (oNavigationConfiguration) {\n\t\t\tconst oDetailRoute = oNavigationConfiguration.detail;\n\t\t\tconst sRouteName = oDetailRoute.route;\n\t\t\tconst mParameterMapping = oDetailRoute.parameters;\n\t\t\treturn this._oRoutingService.navigateTo(oContext, sRouteName, mParameterMapping, bPreserveHistory, delayedUsage);\n\t\t} else {\n\t\t\treturn this._oRoutingService.navigateTo(oContext, null, null, bPreserveHistory, delayedUsage);\n\t\t}\n\t}\n\n\t/**\n\t * Get the Hash we're navigating to.\n\t * @param context Context instance\n\t * @param navigationTargetName Name of the navigation target\n\t * @returns The Hash we're navigating to\n\t */\n\tasync getHashForNavigation(context: Context, navigationTargetName: string): Promise<string> {\n\t\tconst navigationConfiguration = this?._oPageComponent?.getNavigationConfiguration(navigationTargetName);\n\t\tif (navigationConfiguration) {\n\t\t\tconst detailRoute = navigationConfiguration.detail;\n\t\t\tconst routeName = detailRoute.route;\n\t\t\tconst parameterMapping = detailRoute.parameters;\n\t\t\treturn this._oRoutingService.getHashFromRoute(context, routeName, parameterMapping);\n\t\t} else {\n\t\t\treturn this._oRoutingService.getHashFromRoute(context, null);\n\t\t}\n\t}\n\n\t/**\n\t * Navigates to the specified navigation target route.\n\t * @param sTargetRouteName Name of the target route\n\t * @param [oParameters] Parameters to be used with route to create the target hash\n\t * @returns Promise that is resolved when the navigation is finalized\n\t */\n\t@publicExtension()\n\tasync navigateToRoute(sTargetRouteName: string, oParameters?: object): Promise<boolean> {\n\t\treturn this._oRoutingService.navigateToRoute(sTargetRouteName, oParameters);\n\t}\n\n\t/**\n\t * Navigates to a specific context.\n\t * @param context The context to be navigated to\n\t * @param parameters Optional navigation parameters\n\t * @returns Promise resolved to 'true' when the navigation has been triggered, 'false' if the navigation did not happen\n\t */\n\tasync navigateToContext(context: Context | ODataListBinding, parameters: RoutingNavigationParameters = {}): Promise<boolean> {\n\t\tif (context.isA<ODataListBinding>(\"sap.ui.model.odata.v4.ODataListBinding\")) {\n\t\t\tif (parameters.createOnNavigateParameters?.mode === \"Async\") {\n\t\t\t\t// the context is either created async (Promise)\n\t\t\t\t// We need to activate the routeMatchSynchro on the RouterProxy to avoid that\n\t\t\t\t// the subsequent call to navigateToContext conflicts with the current one\n\t\t\t\tthis._oRouterProxy.activateRouteMatchSynchronization();\n\n\t\t\t\tparameters.createOnNavigateParameters.createContextPromise\n\t\t\t\t\t.then(async (createdContext) => {\n\t\t\t\t\t\t// once the context is returned we navigate into it\n\t\t\t\t\t\treturn this.navigateToContext(createdContext, {\n\t\t\t\t\t\t\tcheckNoHashChange: parameters.checkNoHashChange,\n\t\t\t\t\t\t\teditable: parameters.editable,\n\t\t\t\t\t\t\tpersistOPScroll: parameters.persistOPScroll,\n\t\t\t\t\t\t\tupdateFCLLevel: parameters.updateFCLLevel,\n\t\t\t\t\t\t\tforceFocus: parameters.forceFocus\n\t\t\t\t\t\t});\n\t\t\t\t\t})\n\t\t\t\t\t.catch(function (oError: unknown) {\n\t\t\t\t\t\tLog.error(\"Error with the async context\", oError as string);\n\t\t\t\t\t});\n\t\t\t} else if (parameters.createOnNavigateParameters?.mode !== \"Deferred\") {\n\t\t\t\t// Navigate to a list binding not yet supported\n\t\t\t\tthrow \"navigation to a list binding is not yet supported\";\n\t\t\t}\n\t\t} else if (parameters.callExtension) {\n\t\t\tconst internalModel = this._oView.getModel(\"internal\");\n\t\t\tinternalModel.setProperty(\"/paginatorCurrentContext\", null);\n\n\t\t\t// Storing the selected context to use it in internal route navigation if necessary.\n\t\t\tlet contextToNavigate: Context | null = context;\n\t\t\tlet hiddenBinding: ODataContextBinding | undefined;\n\t\t\tif (parameters.updateFCLLevel === -1) {\n\t\t\t\t// If we're navigating back, we need to find the \"parent\" context\n\t\t\t\tconst backPath = this._oRoutingService.getPathToNavigateBack(context.getPath());\n\t\t\t\t// As we don't call the extension when navigating back to the LR, backPath is never empty so we can safely create a context\n\t\t\t\thiddenBinding = context.getModel().bindContext(backPath);\n\t\t\t\tcontextToNavigate = hiddenBinding.getBoundContext();\n\t\t\t}\n\t\t\tconst overrideNav = await this.base.getView().getController().routing.onBeforeNavigation({ bindingContext: contextToNavigate });\n\t\t\thiddenBinding?.destroy();\n\t\t\tif (overrideNav) {\n\t\t\t\tinternalModel.setProperty(\"/paginatorCurrentContext\", context);\n\t\t\t\treturn Promise.resolve(true);\n\t\t\t}\n\t\t}\n\n\t\tparameters.FCLLevel = this.getFCLLevel();\n\n\t\t// In case we're navigating from a table in a ListReport with draft, there's special handling for collaboration and tree table.\n\t\t// We may not navigate to the context the user clicked on.\n\t\tif (parameters.reason === NavigationReason.RowPress && context.isA<Context>(\"sap.ui.model.odata.v4.Context\")) {\n\t\t\tconst model = context.getModel();\n\t\t\tconst metaModel = model.getMetaModel();\n\n\t\t\tif (isPathOnDraftRoot(context.getPath(), metaModel)) {\n\t\t\t\tconst contextForNavigation =\n\t\t\t\t\t(await this.getContextForNavigationWithCollaboration(context, parameters)) ??\n\t\t\t\t\t(await this.getContextForNavigationFromTreeOrAnalyticalTable(context));\n\n\t\t\t\t// Use another instance for navigation\n\t\t\t\tif (contextForNavigation) {\n\t\t\t\t\tcontext = contextForNavigation;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.removeTransitionMessagesForPreviousContext();\n\t\treturn this._oRoutingService.navigateToContext(context, parameters, this._oView.getViewData(), this._oTargetInformation);\n\t}\n\n\t/**\n\t * Retrieves the context to use for navigation in case we're navigating to a draft instance from the LR and we're in a collaboration application.\n\t * @param originalContext\n\t * @param parameters\n\t * @returns The context to use for navigation if it's different from the original context, null otherwise\n\t */\n\tprivate async getContextForNavigationWithCollaboration(\n\t\toriginalContext: Context,\n\t\tparameters: RoutingNavigationParameters\n\t): Promise<Context | null> {\n\t\tconst model = originalContext.getModel();\n\t\tconst metaModel = model.getMetaModel();\n\t\tif (ModelHelper.isCollaborationDraftSupported(metaModel) && originalContext.getProperty(\"IsActiveEntity\") === false) {\n\t\t\t// If we're in a collaboration application, and we're navigating to a draft instance from the LR,\n\t\t\t// We want to check if the draft instance exists first. Otherwise we navigate to the original (draft) version.\n\t\t\tlet draftOrActiveContext = await getDraftOrActiveContext(originalContext);\n\n\t\t\tif (draftOrActiveContext !== null && originalContext.getPath() !== draftOrActiveContext.getPath()) {\n\t\t\t\t// Notify the user that we have navigated to the saved instance\n\t\t\t\tconst objectPath = getInvolvedDataModelObjects(metaModel.getMetaContext(originalContext.getPath()));\n\t\t\t\tparameters.redirectedToNonDraft =\n\t\t\t\t\t(objectPath.targetEntityType.annotations.UI?.HeaderInfo?.TypeName as unknown as string) ??\n\t\t\t\t\tobjectPath.targetEntityType.name;\n\n\t\t\t\tif (this._oAppComponent.getRootViewController().isFclEnabled()) {\n\t\t\t\t\t// FCL: replace the context in the list binding\n\t\t\t\t\tconst contextToReplaceWith = model.getKeepAliveContext(draftOrActiveContext.getPath());\n\t\t\t\t\toriginalContext.replaceWith(contextToReplaceWith);\n\t\t\t\t\tdraftOrActiveContext = contextToReplaceWith; // Use the keep-alive context for navigation\n\t\t\t\t} else {\n\t\t\t\t\t// Fullscreen: trigger a refresh of the list binding\n\t\t\t\t\tEditState.setEditStateDirty();\n\t\t\t\t}\n\n\t\t\t\t// Use the saved instance for navigation\n\t\t\t\treturn draftOrActiveContext;\n\t\t\t}\n\t\t}\n\n\t\t// Use the original context\n\t\treturn null;\n\t}\n\n\t/**\n\t * Retrieves the context to use for navigation in case we're navigating to an active instance from the LR and we're in a Tree or Analytical table.\n\t * @param originalContext\n\t * @returns The context to use for navigation if it's different from the original context, null otherwise\n\t */\n\tprivate async getContextForNavigationFromTreeOrAnalyticalTable(originalContext: Context): Promise<Context | null> {\n\t\tconst parentBinding = originalContext.getBinding();\n\t\tif (!parentBinding.isA<ODataListBinding>(\"sap.ui.model.odata.v4.ODataListBinding\")) {\n\t\t\t// The context doesn't belong to a list binding\n\t\t\treturn null;\n\t\t}\n\t\tconst aggregation = parentBinding.getAggregation() as\n\t\t\t| { hierarchyQualifier?: string; group?: object; aggregate?: object }\n\t\t\t| undefined;\n\t\tif (!aggregation?.hierarchyQualifier && !aggregation?.group && !aggregation?.aggregate) {\n\t\t\t// The context doesn't belong to a hierarchical/analytical list binding\n\t\t\treturn null;\n\t\t}\n\n\t\tif (originalContext.getProperty(\"IsActiveEntity\") === true && originalContext.getProperty(\"HasDraftEntity\") === true) {\n\t\t\t// If we're in a Tree/Analytical table, and we're navigating to an active instance instance that has a draft,\n\t\t\t// --> We try to navigate to the draft instance (if it still exists)\n\t\t\tconst draftOrActiveContext = await getDraftOrActiveContext(originalContext);\n\n\t\t\tif (draftOrActiveContext !== null && originalContext.getPath() !== draftOrActiveContext.getPath()) {\n\t\t\t\t// Use the draft instance for navigation\n\t\t\t\treturn draftOrActiveContext;\n\t\t\t}\n\t\t}\n\n\t\t// Use the original context\n\t\treturn null;\n\t}\n\n\t/**\n\t * Navigates backwards from a context.\n\t * @param context Context to be navigated from\n\t * @param [parameters] Optional navigation parameters\n\t * @returns Promise resolved when the navigation has been triggered\n\t */\n\tasync navigateBackFromContext(context: Context, parameters: RoutingNavigationParameters = {}): Promise<boolean> {\n\t\tparameters.updateFCLLevel = -1;\n\n\t\treturn this.navigateToContext(context, parameters);\n\t}\n\n\t/**\n\t * Navigates forwards to a context.\n\t * @param context Context to be navigated to\n\t * @param parameters Optional navigation parameters\n\t * @returns Promise resolved when the navigation has been triggered\n\t */\n\tasync navigateForwardToContext(context: Context | ODataListBinding, parameters: RoutingNavigationParameters = {}): Promise<boolean> {\n\t\tif (this._oView.getBindingContext(\"internal\")?.getProperty(\"messageFooterContainsErrors\") === true) {\n\t\t\treturn Promise.resolve(true);\n\t\t}\n\n\t\tparameters.updateFCLLevel = 1;\n\n\t\treturn this.navigateToContext(context, parameters);\n\t}\n\n\t/**\n\t * Navigates back in history if the current hash corresponds to a transient state.\n\t */\n\t@publicExtension()\n\t@finalExtension()\n\tnavigateBackFromTransientState(): void {\n\t\tconst sHash = this._oRouterProxy.getHash();\n\n\t\t// if triggered while navigating to (...), we need to navigate back\n\t\tif (sHash.includes(\"(...)\")) {\n\t\t\tthis._oRouterProxy.navBack();\n\t\t}\n\t}\n\n\t/**\n\t * Displays an error (illustrated message) in the page.\n\t * @param sErrorMessage\n\t * @param mParameters\n\t * @returns A promise\n\t */\n\tasync navigateToMessagePage(sErrorMessage: string, mParameters: NavigationToErrorPageResult): Promise<boolean> {\n\t\tmParameters = mParameters || {};\n\t\tif (this._oRouterProxy.getHash().includes(\"i-action=create\") || this._oRouterProxy.getHash().includes(\"i-action=autoCreate\")) {\n\t\t\treturn this._oRouterProxy.navToHash(this._oRoutingService.getDefaultCreateHash());\n\t\t} else {\n\t\t\treturn this._oAppComponent.getRootViewController().displayErrorPage(sErrorMessage, mParameters, this.getFCLLevel());\n\t\t}\n\t}\n\n\t/**\n\t * Checks if one of the current views on the screen is bound to a given context.\n\t * @param oContext\n\t * @returns `true` if the state is impacted by the context\n\t */\n\t@publicExtension()\n\t@finalExtension()\n\tisCurrentStateImpactedBy(oContext: Context): boolean {\n\t\treturn this._oRoutingService.isCurrentStateImpactedBy(oContext);\n\t}\n\n\t_isViewPartOfRoute(routeInformation?: RouteInformation): boolean {\n\t\tconst aTargets = routeInformation?.targets;\n\t\tif (!aTargets || !aTargets.includes(this._oTargetInformation.targetName)) {\n\t\t\t// If the target for this view has a view level greater than the route level, it means this view comes \"after\" the route\n\t\t\t// in terms of navigation.\n\t\t\t// In such case, we remove its binding context, to avoid this view to have data if we navigate to it later on\n\t\t\t// This is done in a timeout to allow for focusout events to be processed before properly in collaborative draft\n\t\t\tif ((this._oTargetInformation.viewLevel ?? 0) >= (routeInformation?.routeLevel ?? 0)) {\n\t\t\t\tthis._oAppComponent.getRoutingService().addBindingCleanupPromise(\n\t\t\t\t\tnew Promise<void>((resolve) => {\n\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\tif (routeInformation?.routeLevel === 0) {\n\t\t\t\t\t\t\t\t// The route has level 0 --> we need to leave the collaboration session as no OP is displayed\n\t\t\t\t\t\t\t\tthis.base.collaborativeDraft.disconnect();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.removeTransitionMessagesForPreviousContext();\n\t\t\t\t\t\t\tthis._setBindingContext(null); // This also call setKeepAlive(false) on the current context\n\t\t\t\t\t\t\tresolve();\n\t\t\t\t\t\t}, 0);\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t///////////////////////////////////////////////////////////\n\t// Methods to bind the page when a route is matched\n\t///////////////////////////////////////////////////////////\n\n\t/**\n\t * Called when a route is matched.\n\t * Builds the binding context from the navigation parameters, and bind the page accordingly.\n\t * @param oEvent\n\t */\n\t_onRouteMatched(\n\t\toEvent: Event<{\n\t\t\trouteInformation?: RouteInformation;\n\t\t\troutePattern: string;\n\t\t\tnavigationInfo: RoutingNavigationInfo;\n\t\t\targuments: Record<string, string | object>;\n\t\t}>\n\t): void {\n\t\t// Check if the target for this view is part of the event targets (i.e. is a target for the current route).\n\t\t// If not, we don't need to bind it --> return\n\t\tif (!this._isViewPartOfRoute(oEvent.getParameter(\"routeInformation\"))) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Retrieve the binding context pattern\n\t\tlet bindingPattern;\n\t\tif (this._oPageComponent && this._oPageComponent.getBindingContextPattern) {\n\t\t\tbindingPattern = this._oPageComponent.getBindingContextPattern();\n\t\t}\n\t\tbindingPattern = bindingPattern ?? this._oTargetInformation.contextPattern;\n\n\t\tif (bindingPattern === null || bindingPattern === undefined) {\n\t\t\t// Don't do this if we already got sTarget == '', which is a valid target pattern\n\t\t\tbindingPattern = oEvent.getParameter(\"routePattern\");\n\t\t}\n\n\t\t// Replace the parameters by their values in the binding context pattern\n\t\tconst mArguments = oEvent.getParameters().arguments;\n\t\tconst oNavigationParameters = oEvent.getParameter(\"navigationInfo\");\n\t\tconst { path, deferred } = RoutingHelpser.buildBindingPath(mArguments, bindingPattern, oNavigationParameters);\n\n\t\tthis.onRouteMatched();\n\n\t\tlet bindPromise;\n\t\tconst oModel = this._oView.getModel();\n\t\tif (deferred) {\n\t\t\tbindPromise = this._bindDeferred(path, oNavigationParameters);\n\t\t} else if (\n\t\t\toNavigationParameters.reason !== NavigationReason.EditFlowAction &&\n\t\t\t(this._oRouterProxy.getHash().includes(\"i-action=edit\") || (this._oPageComponent?.isOpenInEditMode?.() ?? false))\n\t\t) {\n\t\t\tbindPromise = this._bindPageForEdit(path, oModel, oNavigationParameters);\n\t\t} else {\n\t\t\tbindPromise = this._bindPage(path, oModel, oNavigationParameters);\n\t\t}\n\n\t\tbindPromise\n\t\t\t.finally(() => {\n\t\t\t\tthis.onRouteMatchedFinished();\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tLog.error(\"Error during page binding \" + error.toString());\n\t\t\t});\n\n\t\tthis._oAppComponent.getRootViewController().updateUIStateForView(this._oView, this.getFCLLevel());\n\t}\n\n\t/**\n\t * Deferred binding (during object creation).\n\t * @param targetPath The path to the deffered context\n\t * @param navigationParameters Navigation parameters\n\t * @returns A promise\n\t */\n\tasync _bindDeferred(targetPath: string, navigationParameters: RoutingNavigationInfo): Promise<void> {\n\t\tthis.beforeSetBindingContext(null, { editable: navigationParameters.bTargetEditable });\n\n\t\tif (!navigationParameters.createOnNavigateParameters || navigationParameters.createOnNavigateParameters.mode === \"Deferred\") {\n\t\t\t// either the context shall be created in the target page (deferred Context) or it shall\n\t\t\t// be created async but the user refreshed the page / bookmarked this URL\n\t\t\t// TODO: currently the target component creates this document but we shall move this to\n\t\t\t// a central place\n\t\t\tif (this._oPageComponent && this._oPageComponent.createDeferredContext) {\n\t\t\t\tthis._oPageComponent.createDeferredContext(\n\t\t\t\t\ttargetPath,\n\t\t\t\t\tnavigationParameters.createOnNavigateParameters?.listBinding,\n\t\t\t\t\tnavigationParameters.createOnNavigateParameters?.parentContext,\n\t\t\t\t\tnavigationParameters.createOnNavigateParameters?.data,\n\t\t\t\t\t!!navigationParameters.bActionCreate\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\t// remove the context to avoid showing old data\n\t\tthis._setBindingContext(null);\n\n\t\tthis.afterSetBindingContext(null);\n\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * Sets the binding context for the page from a path, if the app is started with the preferred mode edit.\n\t *\n\t * If the context points to an active entity, it is directly converted to draft using the EditFlow controller extension.\n\t * @param targetPath\n\t * @param model\n\t * @param navigationParameters\n\t * @returns A Promise resolved once the binding has been set on the page\n\t */\n\tasync _bindPageForEdit(targetPath: string, model: ODataModel, navigationParameters: RoutingNavigationInfo): Promise<void | Context> {\n\t\tif (targetPath === \"\") {\n\t\t\treturn Promise.resolve(this._bindPageToContext(null, model, navigationParameters));\n\t\t}\n\n\t\ttry {\n\t\t\tconst technicalPath: string = await resolvePath(targetPath, model, this._oRoutingService, this._oRouter);\n\t\t\tconst metaModel = model.getMetaModel();\n\t\t\t// check for sticky & sticky edit session\n\t\t\tconst isStickyEditMode = CommonUtils.isStickyEditMode(this.base.getView());\n\t\t\tconst isSticky = ModelHelper.isStickySessionSupported(metaModel);\n\t\t\tif (technicalPath.includes(\"IsActiveEntity=true\") || (isSticky && !isStickyEditMode)) {\n\t\t\t\t// create context or use the one the user clicked on\n\t\t\t\tconst activeContext =\n\t\t\t\t\tnavigationParameters.useContext?.getPath() === technicalPath\n\t\t\t\t\t\t? navigationParameters.useContext\n\t\t\t\t\t\t: this._createContext(technicalPath, model);\n\n\t\t\t\t// edit document\n\t\t\t\treturn await this.base.editFlow.editDocument(activeContext);\n\t\t\t} else {\n\t\t\t\treturn this._bindPageToPath(technicalPath, model, navigationParameters);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconst resourceBundle = Library.getResourceBundleFor(\"sap.fe.core\")!;\n\n\t\t\tthis.navigateToMessagePage(resourceBundle.getText(\"C_COMMON_SAPFE_DATA_RECEIVED_ERROR\"), {\n\t\t\t\ttitle: resourceBundle.getText(\"C_COMMON_SAPFE_ERROR\"),\n\t\t\t\tdescription: (error as Error).message\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Sets the binding context of the page from a path.\n\t * @param targetPath The path to the context\n\t * @param model The OData model\n\t * @param navigationParameters Navigation parameters\n\t * @returns A Promise resolved once the binding on the page is set\n\t */\n\tasync _bindPage(targetPath: string, model: ODataModel, navigationParameters: RoutingNavigationInfo): Promise<void> {\n\t\tif (targetPath === \"\") {\n\t\t\t// The page binding is done asynchronously, to make sure _onRouteMatched is called for all targets before, and the binding cleanup promises are properly stored in the routing service.\n\t\t\treturn Promise.resolve().then(() => {\n\t\t\t\tthis._bindPageToContext(null, model, navigationParameters);\n\t\t\t\treturn;\n\t\t\t});\n\t\t}\n\n\t\ttry {\n\t\t\tconst technicalPath = await resolvePath(targetPath, model, this._oRoutingService, this._oRouter);\n\t\t\tthis._bindPageToPath(technicalPath, model, navigationParameters);\n\t\t} catch (e) {\n\t\t\tawait this.base.messageHandler.showMessages({});\n\t\t}\n\t}\n\n\t/**\n\t * Sets the binding context for the page from a path.\n\t * @param sTargetPath The path to build the context (this is a path in the model, so only technical keys are allowed).\n\t * @param oModel The OData model\n\t * @param oNavigationParameters Navigation parameters\n\t */\n\t_bindPageToPath(sTargetPath: string, oModel: ODataModel, oNavigationParameters: RoutingNavigationInfo): void {\n\t\tconst oCurrentContext = this._getBindingContext(),\n\t\t\tsCurrentPath = oCurrentContext && oCurrentContext.getPath(),\n\t\t\toUseContext = oNavigationParameters.useContext as Context | undefined | null;\n\n\t\tconst oRootViewController = this._oAppComponent.getRootViewController();\n\n\t\t// We set the binding context only if it's different from the current one\n\t\t// or if we have a context already selected\n\t\tif (oUseContext && oUseContext.getPath() === sTargetPath) {\n\t\t\tif (oUseContext !== oCurrentContext) {\n\t\t\t\tlet shouldRefreshContext = false;\n\t\t\t\t// We already have the context to be used, and it's not the current one\n\n\t\t\t\t// In case of FCL, if we're reusing a context from a table (through navigation), we refresh it to avoid outdated data\n\t\t\t\t// We don't wait for the refresh to be completed (requestRefresh), so that the corresponding query goes into the same\n\t\t\t\t// batch as the ones from controls in the page.\n\t\t\t\tif (oRootViewController.isFclEnabled() && oNavigationParameters.reason === NavigationReason.RowPress) {\n\t\t\t\t\tconst metaModel = oUseContext.getModel().getMetaModel();\n\t\t\t\t\tif (!oUseContext.getBinding().hasPendingChanges() && ModelHelper.isDraftSupported(metaModel, oUseContext.getPath())) {\n\t\t\t\t\t\tshouldRefreshContext = true;\n\t\t\t\t\t} else if (\n\t\t\t\t\t\tthis.base.collaborativeDraft.isConnected() ||\n\t\t\t\t\t\t(ModelHelper.isDraftSupported(metaModel, oUseContext.getPath()) &&\n\t\t\t\t\t\t\tModelHelper.isCollaborationDraftSupported(metaModel))\n\t\t\t\t\t) {\n\t\t\t\t\t\t// If there are pending changes but we're in collaboration draft, we force the refresh (discarding pending changes) as we need to have the latest version.\n\t\t\t\t\t\t// When navigating from LR to OP, the view is not connected yet --> check if we're in draft with collaboration from the metamodel\n\t\t\t\t\t\toUseContext.getBinding().resetChanges();\n\t\t\t\t\t\tshouldRefreshContext = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis._bindPageToContext(oUseContext, oModel, oNavigationParameters);\n\t\t\t\tif (shouldRefreshContext) {\n\t\t\t\t\tthis._oAppComponent\n\t\t\t\t\t\t.getSideEffectsService()\n\t\t\t\t\t\t.requestSideEffects([{ $NavigationPropertyPath: \"\" }], oUseContext, oUseContext.getBinding().getGroupId())\n\t\t\t\t\t\t.catch((err) => {\n\t\t\t\t\t\t\tLog.error(`Cannot refresh context: ${err}`);\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else if (oNavigationParameters.reason === NavigationReason.EditFlowAction) {\n\t\t\t\t// We have the same context but an editflow action happened (e.g. CancelDocument in sticky mode)\n\t\t\t\t// --> We need to call onBefore/AfterBinding to refresh the object page properly\n\t\t\t\tthis.beforeSetBindingContext(oUseContext, {\n\t\t\t\t\teditable: oNavigationParameters.bTargetEditable,\n\t\t\t\t\tlistBinding: oUseContext.getBinding(),\n\t\t\t\t\tbPersistOPScroll: oNavigationParameters.bPersistOPScroll,\n\t\t\t\t\treason: oNavigationParameters.reason,\n\t\t\t\t\tshowPlaceholder: oNavigationParameters.bShowPlaceholder\n\t\t\t\t});\n\t\t\t\tthis.afterSetBindingContext(oUseContext, { redirectedToNonDraft: oNavigationParameters?.redirectedToNonDraft });\n\t\t\t}\n\t\t} else if (sCurrentPath !== sTargetPath || oNavigationParameters.reason === NavigationReason.EditFlowAction) {\n\t\t\t// We need to create a new context for its path\n\t\t\tthis._bindPageToContext(this._createContext(sTargetPath, oModel), oModel, oNavigationParameters);\n\t\t} else if (\n\t\t\toNavigationParameters.reason !== NavigationReason.AppStateChanged &&\n\t\t\toNavigationParameters.reason !== NavigationReason.RestoreHistory &&\n\t\t\tEditState.isEditStateDirty() &&\n\t\t\t!oRootViewController.isFclEnabled() &&\n\t\t\toCurrentContext\n\t\t) {\n\t\t\tthis._refreshBindingContext(oCurrentContext);\n\t\t}\n\t}\n\n\t/**\n\t * Binds the page to a context.\n\t * @param oContext Context to be bound\n\t * @param oModel The OData model\n\t * @param oNavigationParameters Navigation parameters\n\t */\n\t_bindPageToContext(oContext: Context | null, oModel: ODataModel, oNavigationParameters: RoutingNavigationInfo): void {\n\t\tif (!oContext) {\n\t\t\tthis.beforeSetBindingContext(null);\n\t\t\tthis.afterSetBindingContext(null);\n\t\t\treturn;\n\t\t}\n\n\t\tconst oParentListBinding = oContext.getBinding();\n\t\tconst oRootViewController = this._oAppComponent.getRootViewController();\n\t\tif (oRootViewController.isFclEnabled()) {\n\t\t\tif (!oParentListBinding || !oParentListBinding.isA(\"sap.ui.model.odata.v4.ODataListBinding\")) {\n\t\t\t\t// if the parentBinding is not a listBinding, we create a new context\n\t\t\t\toContext = this._createContext(oContext.getPath(), oModel);\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tthis._setKeepAlive(\n\t\t\t\t\toContext,\n\t\t\t\t\ttrue,\n\t\t\t\t\t() => {\n\t\t\t\t\t\tif (oContext && !this._oAppComponent.isExiting && oRootViewController.isContextUsedInPages(oContext)) {\n\t\t\t\t\t\t\tthis.navigateBackFromContext(oContext);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\ttrue // Load messages, otherwise they don't get refreshed later, e.g. for side effects\n\t\t\t\t);\n\t\t\t} catch (oError) {\n\t\t\t\t// setKeepAlive throws an exception if the parent listbinding doesn't have $$ownRequest=true\n\t\t\t\t// This case for custom fragments is supported, but an error is logged to make the lack of synchronization apparent\n\t\t\t\tLog.error(\n\t\t\t\t\t`View for ${oContext.getPath()} won't be synchronized. Parent listBinding must have binding parameter $$ownRequest=true`\n\t\t\t\t);\n\t\t\t}\n\t\t} else if (!oParentListBinding || oParentListBinding.isA(\"sap.ui.model.odata.v4.ODataListBinding\")) {\n\t\t\t// We need to recreate the context otherwise we get errors\n\t\t\toContext = this._createContext(oContext.getPath(), oModel);\n\t\t}\n\n\t\t// If the binding context is part of a collaborative draft, we call addSelf before binding the page so that the Share action\n\t\t// is part of the same batch as the page load, and we can get the list of participating users later\n\t\tif (ModelHelper.isCollaborationDraftSupported(oModel.getMetaModel()) && oContext.getPath().includes(\"IsActiveEntity=false\")) {\n\t\t\tthis.base.collaborativeDraft.executeShareAction(oContext);\n\t\t}\n\n\t\t// Set the binding context with the proper before/after callbacks\n\t\tthis.beforeSetBindingContext(oContext, {\n\t\t\teditable: oNavigationParameters.bTargetEditable,\n\t\t\tlistBinding: oParentListBinding,\n\t\t\tbPersistOPScroll: oNavigationParameters.bPersistOPScroll,\n\t\t\treason: oNavigationParameters.reason,\n\t\t\tshowPlaceholder: oNavigationParameters.bShowPlaceholder\n\t\t});\n\n\t\tthis._setBindingContext(oContext);\n\t\tthis.afterSetBindingContext(oContext, { redirectedToNonDraft: oNavigationParameters?.redirectedToNonDraft });\n\t}\n\n\t/**\n\t * Creates a context from a path.\n\t * @param sPath The path\n\t * @param oModel The OData model\n\t * @returns The created context\n\t */\n\t_createContext(sPath: string, oModel: ODataModel): Context {\n\t\tconst oPageComponent = this._oPageComponent,\n\t\t\tsEntitySet = oPageComponent && oPageComponent.getEntitySet && oPageComponent.getEntitySet(),\n\t\t\tsContextPath =\n\t\t\t\t(oPageComponent && oPageComponent.getContextPath && oPageComponent.getContextPath()) || (sEntitySet && `/${sEntitySet}`),\n\t\t\toMetaModel = oModel.getMetaModel(),\n\t\t\tisCollaborationDraftSupported = ModelHelper.isCollaborationDraftSupported(oMetaModel),\n\t\t\tmParameters: BindContextParameters = {\n\t\t\t\t$$groupId: \"$auto.Heroes\",\n\t\t\t\t$$updateGroupId: \"$auto\",\n\t\t\t\t$$patchWithoutSideEffects: true\n\t\t\t};\n\t\tif (this.base.inlineEditFlow.isInlineEditPossible()) {\n\t\t\t// if inline edit is enabled on the page and this is the active entity, we need to update the group id to inline\n\t\t\tmParameters.$$updateGroupId = sPath.includes(\"IsActiveEntity=true\") ? CommonUtils.INLINEEDIT_UPDATEGROUPID : \"$auto\";\n\t\t}\n\t\t// In case of draft: $select the state flags (HasActiveEntity, HasDraftEntity, and IsActiveEntity) and semantic keys (for creating the semantic URL)\n\t\tconst oDraftRoot = oMetaModel.getObject(`${sContextPath}@com.sap.vocabularies.Common.v1.DraftRoot`);\n\t\tconst oDraftNode = oMetaModel.getObject(`${sContextPath}@com.sap.vocabularies.Common.v1.DraftNode`);\n\t\tconst dataModelObject = sContextPath\n\t\t\t? oMetaModel.getContext(sContextPath) && getInvolvedDataModelObjects(oMetaModel.getContext(sContextPath))\n\t\t\t: null;\n\t\tconst alternateAndSecondaryKeys = ModelHelper.getAlternateAndSecondaryKeys(\n\t\t\tdataModelObject?.targetEntityType as EntityType,\n\t\t\tdataModelObject?.targetEntitySet as EntitySet\n\t\t);\n\t\tconst semanticKeys = oDraftRoot\n\t\t\t? dataModelObject?.targetEntityType.annotations.Common?.SemanticKey?.map((key) => key.value) ?? []\n\t\t\t: [];\n\t\tconst oRootViewController = this._oAppComponent.getRootViewController();\n\t\tif (oRootViewController.isFclEnabled()) {\n\t\t\tmParameters.$$groupId = \"$auto.Workers\"; // We need to use the same group ID as for the parent list binding\n\t\t\tconst oContext = this._getKeepAliveContext(oModel, sPath, false, mParameters);\n\t\t\tif (!oContext) {\n\t\t\t\tthrow new Error(`Cannot create keepAlive context ${sPath}`);\n\t\t\t} else if (oDraftRoot || oDraftNode) {\n\t\t\t\tconst propertiesToRequest = [\"HasActiveEntity\", \"HasDraftEntity\", \"IsActiveEntity\"].concat(semanticKeys);\n\t\t\t\tif (oContext.getProperty(\"IsActiveEntity\") === undefined) {\n\t\t\t\t\toContext.requestProperty(propertiesToRequest);\n\t\t\t\t\tif (oDraftRoot) {\n\t\t\t\t\t\toContext.requestObject(\"DraftAdministrativeData\");\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// when switching between draft and edit we need to ensure those properties are requested again even if they are in the binding's cache\n\t\t\t\t\t// otherwise when you edit and go to the saved version you have no way of switching back to the edit version\n\t\t\t\t\toContext.requestSideEffects(oDraftRoot ? propertiesToRequest.concat([\"DraftAdministrativeData\"]) : propertiesToRequest);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn oContext;\n\t\t} else {\n\t\t\tconst propertiesToSelect: string[] = [];\n\t\t\tif (sContextPath) {\n\t\t\t\tconst sMessagesPath = ModelHelper.getMessagesPath(oMetaModel, sContextPath);\n\t\t\t\tif (sMessagesPath) {\n\t\t\t\t\tpropertiesToSelect.push(sMessagesPath);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// In case of draft: $select the state flags (HasActiveEntity, HasDraftEntity, and IsActiveEntity)\n\t\t\tif (oDraftRoot || oDraftNode) {\n\t\t\t\tpropertiesToSelect.push(\"HasActiveEntity\", \"HasDraftEntity\", \"IsActiveEntity\");\n\t\t\t\tpropertiesToSelect.push(...semanticKeys);\n\t\t\t}\n\t\t\tpropertiesToSelect.push(...alternateAndSecondaryKeys);\n\n\t\t\tif (isCollaborationDraftSupported && oDraftRoot) {\n\t\t\t\tpropertiesToSelect.push(\"DraftAdministrativeData/DraftAdministrativeUser\");\n\t\t\t}\n\n\t\t\tif (propertiesToSelect.length) {\n\t\t\t\tmParameters.$select = propertiesToSelect.join(\",\");\n\t\t\t}\n\n\t\t\tif (this._oView.getBindingContext()) {\n\t\t\t\tconst oPreviousBinding = this._oView.getBindingContext()?.getBinding();\n\t\t\t\tif (oPreviousBinding) {\n\t\t\t\t\toModel.resetChanges(oPreviousBinding.getUpdateGroupId());\n\t\t\t\t\toPreviousBinding.destroy();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst oHiddenBinding = oModel.bindContext(sPath, undefined, mParameters);\n\n\t\t\toHiddenBinding.attachEventOnce(\"dataRequested\", () => {\n\t\t\t\tBusyLocker.lock(this._oView);\n\t\t\t\tthis.base.messageHandler.holdMessagesForControl(this._oView);\n\t\t\t});\n\t\t\toHiddenBinding.attachEventOnce(\"dataReceived\", this.onDataReceived.bind(this));\n\t\t\treturn oHiddenBinding.getBoundContext();\n\t\t}\n\t}\n\n\t@publicExtension()\n\tasync onDataReceived(oEvent: Event<{ error: { status?: number; cause?: { status?: number }; message?: string } }>): Promise<void> {\n\t\tconst error = oEvent?.getParameter(\"error\");\n\t\tif (BusyLocker.isLocked(this._oView)) {\n\t\t\tBusyLocker.unlock(this._oView);\n\t\t}\n\n\t\tif (error) {\n\t\t\t// TODO: in case of 404 the text shall be different\n\t\t\tconst messageHandler = this.base.messageHandler;\n\t\t\tlet mParams: ShowMessagesParameters = {};\n\t\t\tconst errorStatus = error.status ?? error.cause?.status;\n\t\t\ttry {\n\t\t\t\tconst oResourceBundle = Library.getResourceBundleFor(\"sap.fe.core\")!;\n\t\t\t\tif (errorStatus === 503) {\n\t\t\t\t\tmParams = {\n\t\t\t\t\t\tisInitialLoad503Error: true,\n\t\t\t\t\t\tshellBack: true\n\t\t\t\t\t};\n\t\t\t\t} else if (errorStatus === 400) {\n\t\t\t\t\tmParams = {\n\t\t\t\t\t\ttitle: oResourceBundle.getText(\"C_COMMON_SAPFE_ERROR\"),\n\t\t\t\t\t\tdescription: oResourceBundle.getText(\"C_COMMON_SAPFE_DATA_RECEIVED_ERROR_DESCRIPTION\"),\n\t\t\t\t\t\tisDataReceivedError: true,\n\t\t\t\t\t\tshellBack: true\n\t\t\t\t\t};\n\t\t\t\t} else {\n\t\t\t\t\tmParams = {\n\t\t\t\t\t\ttitle: oResourceBundle.getText(\"C_COMMON_SAPFE_ERROR\"),\n\t\t\t\t\t\tdescription: error?.message,\n\t\t\t\t\t\tisDataReceivedError: true,\n\t\t\t\t\t\tshellBack: true\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t} catch (oError: unknown) {\n\t\t\t\tLog.error(\"Error while getting the core resource bundle\", oError as string);\n\t\t\t} finally {\n\t\t\t\tmParams.control = this._oView;\n\t\t\t\tawait messageHandler.showMessages(mParams);\n\t\t\t}\n\t\t} else {\n\t\t\tawait this.base.messageHandler.releaseHoldByControl(this._oView);\n\t\t}\n\t}\n\n\t/**\n\t * Requests side effects on a binding context to \"refresh\" it.\n\t * TODO: get rid of this once provided by the model\n\t * a refresh on the binding context does not work in case a creation row with a transient context is\n\t * used. also a requestSideEffects with an empty path would fail due to the transient context\n\t * therefore we get all dependent bindings (via private model method) to determine all paths and then\n\t * request them.\n\t * @param oBindingContext Context to be refreshed\n\t */\n\t_refreshBindingContext(oBindingContext: Context): void {\n\t\tconst oPageComponent = this._oPageComponent;\n\t\tconst oSideEffectsService = this._oAppComponent.getSideEffectsService();\n\t\tconst sRootContextPath = oBindingContext.getPath();\n\t\tconst sEntitySet = oPageComponent && oPageComponent.getEntitySet && oPageComponent.getEntitySet();\n\t\tconst sContextPath =\n\t\t\t(oPageComponent && oPageComponent.getContextPath && oPageComponent.getContextPath()) || (sEntitySet && `/${sEntitySet}`);\n\t\tconst oMetaModel = this._oView.getModel().getMetaModel();\n\t\tlet sMessagesPath;\n\t\tconst aNavigationPropertyPaths: string[] = [];\n\t\tconst aPropertyPaths: string[] = [];\n\t\tconst oSideEffects: SideEffectsTargetType = {\n\t\t\ttargetProperties: [],\n\t\t\ttargetEntities: []\n\t\t};\n\n\t\tfunction getBindingPaths(oBinding: Binding): void {\n\t\t\tlet aDependentBindings;\n\t\t\tconst sRelativePath = (oBinding.getContext()?.getPath() ?? \"\").replace(sRootContextPath, \"\"); // If no context, this is an absolute binding so no relative path\n\t\t\tconst sPath = (sRelativePath ? `${sRelativePath.slice(1)}/` : sRelativePath) + oBinding.getPath();\n\n\t\t\tif (oBinding.isA<ODataContextBinding>(\"sap.ui.model.odata.v4.ODataContextBinding\")) {\n\t\t\t\t// if (sPath === \"\") {\n\t\t\t\t// now get the dependent bindings\n\t\t\t\taDependentBindings = oBinding.getDependentBindings();\n\t\t\t\tif (aDependentBindings) {\n\t\t\t\t\t// ask the dependent bindings (and only those with the specified groupId\n\t\t\t\t\t//if (aDependentBindings.length > 0) {\n\t\t\t\t\tfor (const item of aDependentBindings) {\n\t\t\t\t\t\tgetBindingPaths(item);\n\t\t\t\t\t}\n\t\t\t\t} else if (!aNavigationPropertyPaths.includes(sPath)) {\n\t\t\t\t\taNavigationPropertyPaths.push(sPath);\n\t\t\t\t}\n\t\t\t} else if (oBinding.isA<ODataListBinding>(\"sap.ui.model.odata.v4.ODataListBinding\")) {\n\t\t\t\tif (!aNavigationPropertyPaths.includes(sPath)) {\n\t\t\t\t\taNavigationPropertyPaths.push(sPath);\n\t\t\t\t}\n\t\t\t} else if (oBinding.isA<ODataPropertyBinding>(\"sap.ui.model.odata.v4.ODataPropertyBinding\")) {\n\t\t\t\tif (!aPropertyPaths.includes(sPath)) {\n\t\t\t\t\taPropertyPaths.push(sPath);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (sContextPath) {\n\t\t\tsMessagesPath = ModelHelper.getMessagesPath(oMetaModel, sContextPath);\n\t\t}\n\n\t\t// binding of the context must have $$PatchWithoutSideEffects true, this bound context may be needed to be fetched from the dependent binding\n\t\tgetBindingPaths(oBindingContext.getBinding());\n\n\t\tlet i;\n\t\tfor (i = 0; i < aNavigationPropertyPaths.length; i++) {\n\t\t\toSideEffects.targetEntities.push({\n\t\t\t\t$NavigationPropertyPath: aNavigationPropertyPaths[i]\n\t\t\t});\n\t\t}\n\t\toSideEffects.targetProperties = aPropertyPaths;\n\t\tif (sMessagesPath) {\n\t\t\toSideEffects.targetProperties.push(sMessagesPath);\n\t\t}\n\t\t//all this logic to be replaced with a SideEffects request for an empty path (refresh everything), after testing transient contexts\n\t\toSideEffects.targetProperties = oSideEffects.targetProperties.reduce((targets: string[], targetProperty) => {\n\t\t\tif (targetProperty) {\n\t\t\t\tconst index = targetProperty.indexOf(\"/\");\n\t\t\t\ttargets.push(index > 0 ? targetProperty.slice(0, index) : targetProperty);\n\t\t\t}\n\t\t\treturn targets;\n\t\t}, []);\n\t\t// OData model will take care of duplicates\n\t\toSideEffectsService.requestSideEffects([...oSideEffects.targetEntities, ...oSideEffects.targetProperties], oBindingContext);\n\t}\n\n\t/**\n\t * Gets the binding context of the page or the component.\n\t * @returns The binding context\n\t */\n\t_getBindingContext(): Context | null | undefined {\n\t\tif (this._oPageComponent) {\n\t\t\treturn this._oPageComponent.getBindingContext() as Context;\n\t\t} else {\n\t\t\treturn this._oView.getBindingContext();\n\t\t}\n\t}\n\n\t/**\n\t * Sets the binding context of the page or the component.\n\t * @param oContext The binding context\n\t */\n\t_setBindingContext(oContext: Context | null): void {\n\t\tlet oPreviousContext, oTargetControl;\n\t\tif (this._oPageComponent) {\n\t\t\toPreviousContext = this._oPageComponent.getBindingContext() as Context;\n\t\t\toTargetControl = this._oPageComponent;\n\t\t} else {\n\t\t\toPreviousContext = this._oView.getBindingContext();\n\t\t\toTargetControl = this._oView;\n\t\t}\n\n\t\toTargetControl.setBindingContext(oContext);\n\n\t\tif (oPreviousContext?.isKeepAlive() && oPreviousContext !== oContext) {\n\t\t\tthis._setKeepAlive(oPreviousContext, false);\n\t\t}\n\t}\n\n\t/**\n\t * Gets the flexible column layout (FCL) level corresponding to the view (-1 if the app is not FCL).\n\t * @returns The level\n\t */\n\tgetFCLLevel(): number {\n\t\treturn this._oTargetInformation.FCLLevel;\n\t}\n\n\t_setKeepAlive(\n\t\toContext: Context,\n\t\tbKeepAlive: boolean,\n\t\tfnBeforeDestroy?: Parameters<Context[\"setKeepAlive\"]>[1],\n\t\tbRequestMessages?: boolean\n\t): void {\n\t\tif (oContext.getPath().endsWith(\")\")) {\n\t\t\t// We keep the context alive only if they're part of a collection, i.e. if the path ends with a ')'\n\t\t\tconst oMetaModel = oContext.getModel().getMetaModel();\n\t\t\tconst sMetaPath = oMetaModel.getMetaPath(oContext.getPath());\n\t\t\tconst sMessagesPath = ModelHelper.getMessagesPath(oMetaModel, sMetaPath);\n\t\t\toContext.setKeepAlive(bKeepAlive, fnBeforeDestroy, !!sMessagesPath && bRequestMessages);\n\t\t}\n\t}\n\n\t_getKeepAliveContext(\n\t\toModel: ODataModel,\n\t\tpath: string,\n\t\tbRequestMessages?: boolean,\n\t\tparameters?: BindContextParameters\n\t): Context | undefined {\n\t\t// Get the path for the context that is really kept alive (part of a collection)\n\t\t// i.e. remove all segments not ending with a ')'\n\t\tconst keptAliveSegments = path.split(\"/\");\n\t\tconst additionnalSegments: string[] = [];\n\t\twhile (keptAliveSegments.length && !keptAliveSegments[keptAliveSegments.length - 1].endsWith(\")\")) {\n\t\t\tadditionnalSegments.push(keptAliveSegments.pop()!);\n\t\t}\n\n\t\tif (keptAliveSegments.length === 0) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst keptAlivePath = keptAliveSegments.join(\"/\");\n\t\tconst oKeepAliveContext = oModel.getKeepAliveContext(keptAlivePath, bRequestMessages, parameters);\n\n\t\tif (additionnalSegments.length === 0) {\n\t\t\treturn oKeepAliveContext;\n\t\t} else {\n\t\t\tadditionnalSegments.reverse();\n\t\t\tconst additionnalPath = additionnalSegments.join(\"/\");\n\t\t\treturn oModel.bindContext(additionnalPath, oKeepAliveContext).getBoundContext();\n\t\t}\n\t}\n\n\t/**\n\t * Switches between column and full-screen mode when FCL is used.\n\t *\n\t */\n\n\t@publicExtension()\n\t@finalExtension()\n\tswitchFullScreen(): void {\n\t\tconst oSource = this.base.getView();\n\t\tconst oFCLHelperModel = oSource.getModel(\"fclhelper\"),\n\t\t\tbIsFullScreen = oFCLHelperModel.getProperty(\"/actionButtonsInfo/isFullScreen\"),\n\t\t\tsNextLayout = oFCLHelperModel.getProperty(\n\t\t\t\tbIsFullScreen ? \"/actionButtonsInfo/exitFullScreen\" : \"/actionButtonsInfo/fullScreen\"\n\t\t\t),\n\t\t\toRootViewController = this._oAppComponent.getRootViewController();\n\n\t\tconst oContext = (oRootViewController as FclController).getRightmostContext\n\t\t\t? (oRootViewController as FclController).getRightmostContext()!\n\t\t\t: oSource.getBindingContext();\n\n\t\tthis.base._routing.navigateToContext(oContext, { layout: sNextLayout }).catch(function () {\n\t\t\tLog.warning(\"cannot switch between column and fullscreen\");\n\t\t});\n\t}\n\n\t/**\n\t * Closes the column for the current view in a FCL.\n\t *\n\t */\n\t@publicExtension()\n\t@extensible(OverrideExecution.Before)\n\tasync closeColumn(): Promise<void> {\n\t\tconst oViewData = this._oView.getViewData();\n\t\tconst oContext = this._oView.getBindingContext();\n\t\tconst oMetaModel = oContext.getModel().getMetaModel();\n\t\tconst navigationParameters: RoutingNavigationParameters = {\n\t\t\tnoPreservationCache: true,\n\t\t\tlayout: this._oView.getModel(\"fclhelper\").getProperty(\"/actionButtonsInfo/closeColumn\"),\n\t\t\tcallExtension: true\n\t\t};\n\n\t\tconst isDocumentModified =\n\t\t\t!!this.getView()?.getModel(\"ui\")?.getProperty(UiModelConstants.DocumentModified) || !oContext.getProperty(\"HasActiveEntity\");\n\t\tconst isHiddenDraftEnabled = (this._oAppComponent.getEnvironmentCapabilities()?.getCapabilities()?.HiddenDraft as HiddenDraft)\n\t\t\t.enabled;\n\n\t\tif (!isDocumentModified && isHiddenDraftEnabled) {\n\t\t\tconst mParameters = {\n\t\t\t\tskipDiscardPopover: true,\n\t\t\t\tskipBackNavigation: true\n\t\t\t};\n\t\t\tawait this.base.editFlow.cancelDocument(oContext, mParameters);\n\t\t\tthis.navigateBackFromContext(oContext, navigationParameters);\n\t\t} else if (oViewData?.viewLevel === 1 && ModelHelper.isDraftSupported(oMetaModel, oContext.getPath())) {\n\t\t\tdraft.processDataLossOrDraftDiscardConfirmation(\n\t\t\t\t() => {\n\t\t\t\t\tthis.navigateBackFromContext(oContext, navigationParameters);\n\t\t\t\t},\n\t\t\t\tFunction.prototype,\n\t\t\t\toContext,\n\t\t\t\tthis._oView.getController(),\n\t\t\t\ttrue,\n\t\t\t\tdraft.NavigationType.BackNavigation\n\t\t\t);\n\t\t} else {\n\t\t\tthis.navigateBackFromContext(oContext, navigationParameters);\n\t\t}\n\t\t// Removes transition message for the specified context\n\t\tmessageHandling.removeTransistionMessageForContext(oContext);\n\t}\n\n\t/**\n\t * Removes all the transition messages of the context from where the navigation has been triggered.\n\t */\n\tprivate removeTransitionMessagesForPreviousContext(): void {\n\t\tconst previousContext = this.getView().getBindingContext();\n\t\tif (previousContext) {\n\t\t\tmessageHandling.removeAllTransitionMessagesForContext(previousContext);\n\t\t}\n\t}\n}\n\nexport default InternalRouting;\n"],"mappings":"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","ignoreList":[],"file":"InternalRouting-dbg.js"}