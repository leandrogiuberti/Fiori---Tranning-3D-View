{"version":3,"file":"BaseControllerExtension.js","names":["BaseControllerExtension","_dec","defineUI5Class","_class","_ControllerExtension","_this","call","this","init","_exports","_inheritsLoose","_proto","prototype","getInterface","_this2","interfaceObj","metadata","getMetadata","allMethods","getAllMethods","methodHolder","methodName","method","overrideExecution","Object","defineProperty","configurable","set","v","push","get","async","methodArrays","reverse","result","_len","arguments","length","args","Array","_key","arg","apply","ControllerExtension"],"sources":["./BaseControllerExtension.ts"],"sourcesContent":["import { defineUI5Class } from \"sap/fe/base/ClassSupport\";\nimport type BaseObject from \"sap/ui/base/Object\";\nimport ControllerExtension from \"sap/ui/core/mvc/ControllerExtension\";\nimport type ControllerMetadata from \"sap/ui/core/mvc/ControllerMetadata\";\n/**\n * A base implementation for controller extension used internally in sap.fe for central functionalities.\n * @public\n * @since 1.118.0\n */\n@defineUI5Class(\"sap.fe.core.controllerextensions.BaseControllerExtension\")\nexport default class BaseControllerExtension extends ControllerExtension {\n\tconstructor() {\n\t\tsuper();\n\t\t(this as unknown as { init: Function }).init();\n\t}\n\n\t/**\n\t * This method is called when the controller extension is instantiated.\n\t * We need to override it for the specific handling for BeforeAsync and AfterAsync methods, otherwise the last level of extension just replace our implementation.\n\t * @returns The interface for this controller extension\n\t */\n\tgetInterface(): BaseObject {\n\t\tconst interfaceObj = super.getInterface();\n\t\tconst metadata = this.getMetadata() as ControllerMetadata;\n\t\tconst allMethods = metadata.getAllMethods();\n\t\tconst methodHolder: Record<string, Function[]> = {};\n\n\t\tfor (const methodName in allMethods) {\n\t\t\tconst method = allMethods[methodName];\n\t\t\tif (method.overrideExecution && (method.overrideExecution === \"AfterAsync\" || method.overrideExecution === \"BeforeAsync\")) {\n\t\t\t\tmethodHolder[methodName] = [(interfaceObj as unknown as Record<string, Function>)[methodName]];\n\t\t\t\tObject.defineProperty(interfaceObj, methodName, {\n\t\t\t\t\tconfigurable: true,\n\t\t\t\t\tset: (v: Function) => {\n\t\t\t\t\t\treturn methodHolder[methodName].push(v);\n\t\t\t\t\t},\n\t\t\t\t\tget: () => {\n\t\t\t\t\t\treturn async (...args: unknown[]) => {\n\t\t\t\t\t\t\tconst methodArrays = methodHolder[methodName];\n\t\t\t\t\t\t\tif (method.overrideExecution === \"BeforeAsync\") {\n\t\t\t\t\t\t\t\tmethodArrays.reverse();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlet result;\n\t\t\t\t\t\t\tfor (const arg of methodArrays) {\n\t\t\t\t\t\t\t\tresult = await arg.apply(this, args);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn result;\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn interfaceObj;\n\t}\n}\n"],"mappings":";;;;qWAIA,IAMqBA,GAAuBC,EAD3CC,EAAe,4DAA2DD,EAAAE,EAAA,SAAAC,GAE1E,SAAAJ,IAAc,IAAAK,EACbA,EAAAD,EAAAE,KAAAC,OAAOA,KACPF,EAAwCG,OAAO,OAAAH,CAChD,CAEAI,EAAAT,EAAAU,EAAAV,EAAAI,GAAA,IAAAO,EAAAX,EAAAY,UAAAD,EAKAE,aAAA,SAAAA,IAA2B,IAAAC,EAAAP,KAC1B,MAAMQ,EAAYX,EAAAQ,UAASC,aAAYP,KAAAC,MACvC,MAAMS,EAAWT,KAAKU,cACtB,MAAMC,EAAaF,EAASG,gBAC5B,MAAMC,EAA2C,CAAC,EAElD,IAAK,MAAMC,KAAcH,EAAY,CACpC,MAAMI,EAASJ,EAAWG,GAC1B,GAAIC,EAAOC,oBAAsBD,EAAOC,oBAAsB,cAAgBD,EAAOC,oBAAsB,eAAgB,CAC1HH,EAAaC,GAAc,CAAEN,EAAqDM,IAClFG,OAAOC,eAAeV,EAAcM,EAAY,CAC/CK,aAAc,KACdC,IAAMC,GACER,EAAaC,GAAYQ,KAAKD,GAEtCE,IAAKA,IACGC,iBACN,MAAMC,EAAeZ,EAAaC,GAClC,GAAIC,EAAOC,oBAAsB,cAAe,CAC/CS,EAAaC,SACd,CACA,IAAIC,EAAO,QAAAC,EAAAC,UAAAC,OALKC,EAAI,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAA,CAAJF,EAAIE,GAAAJ,UAAAI,EAAA,CAMpB,IAAK,MAAMC,KAAOT,EAAc,CAC/BE,QAAeO,EAAIC,MAAM5B,EAAMwB,EAChC,CACA,OAAOJ,CACR,GAGH,CACD,CAEA,OAAOnB,CACR,EAAC,OAAAf,CAAA,CA7CyE,CACtB2C,KAAmBxC,GAAAM,EAAAT,EAAA,OAAAS,CAAA","ignoreList":[]}