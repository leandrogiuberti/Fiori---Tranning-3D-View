{"version":3,"names":["ViewSettingsType","ViewDefinitionType","isViewSettingsOfType","potentialViewSettings","type","isViewDefinitionOfType","potentialViewDefinition","viewType","getTableVisualizations","views","tables","forEach","view","Custom","visualizations","Combined","secondaryVisualization","presentation","visualization","VisualizationType","Table","push","getChartVisualizations","charts","primaryVisualization","Chart","getDefaultSemanticDates","filterFields","defaultSemanticDates","filterField","settings","defaultValues","length","getCompliantVisualizationAnnotation","entityType","converterContext","isALP","annotationPath","getManifestWrapper","getDefaultTemplateAnnotationPath","selectionPresentationVariant","getSelectionPresentationVariant","errorMessageForALP","presentationVariant","PresentationVariant","Error","isPresentationCompliant","undefined","isSelectionPresentationCompliant","annotations","UI","getDefaultLineItem","createAlpView","presentations","defaultPath","viewSettings","createAlpVisualization","tableControlId","annotation","id","chartControlId","visible","Multi","createSingleVisualizationView","tableId","getViewControl","baseSettings","title","getViewTitle","selectionVariantPath","getViewSelectionVariant","SingleTable","SingleChart","isPrimary","presentationCreated","Object","assign","defaultVisualization","find","messageInfo","getAlpPresentation","item","resolvedTarget","getEntityTypeAnnotation","targetAnnotation","getTemplateType","TemplateType","AnalyticalListPage","getDataVisualizationConfiguration","getRelativeAnnotationPath","fullyQualifiedName","getEntityType","isCondensedTableLayoutCompliant","shouldCreateTemplateChartVisualization","configureMultiViews","filters","control","hiddenFilters","paths","keepPreviousPersonalization","getTableID","key","apiId","generate","getChartID","multiViews","getCustomView","label","fragment","template","customTabId","getCustomTabID","visualizationType","viewAnnotation","compileExpression","getExpressionFromAnnotation","Text","isAnnotationOfType","SelectionVariant","split","getViewVisualizationPath","getView","multiViewSettings","associatedSelectionVariant","selectionVariant","isMacroOrMultipleView","primary","secondary","inMultiView","getViews","multipleViewConfig","viewConverterConfigs","manifestWrapper","path","isCombinedViewConfiguration","isCustomViewConfiguration","viewConverterContext","getConverterContextFor","contextPath","entitySet","getContextPath","term","createAlpViewSettings","Default","map","viewConverterConfig","getMultiViewsControl","viewsDefinition","getViewConfiguration","hasMultiVisualizations","showTabCounts","showCounts","hasMultipleEntitySets","getIconTabBarID","viewConfigs","chart","table","getDefaultChart","hasMultipleVisualizations","getHeaderActions","headerActions","insertCustomElements","getActionsFromManifest","actions","ActionUtilities","ensurePrimaryActionNeverOverflows","_exports","checkChartFilterBarId","filterBarId","visualizationDefinition","filterId","convertPage","capabilities","sContextPath","lrTableVisualizations","lrChartVisualizations","showPinnableToggle","some","singleTableId","singleChartId","dynamicListReportId","getDynamicListReportID","getFilterBarID","filterVariantManagementID","getFilterVariantManagementID","fbConfig","getFilterConfiguration","filterInitialLayout","initialLayout","toLowerCase","filterLayout","layout","useSemanticDateRange","showClearButton","config","getContentAreaId","chartId","useHiddenFilterBar","hideFilterBar","isFilterBarHidden","lrFilterProperties","getSelectionFields","selectionFields","propertyInfoFields","sPropertyInfo","hideBasicSearch","getFilterBarHideBasicSearch","multiViewControl","getSelectionVariant","getManifestFilterFields","visualizationIds","concat","targetControlIds","getVariantManagement","VariantManagementType","Control","stickySubheaderProvider","getStickyMultiTabHeaderConfiguration","disableDraftEditStateFilter","HiddenDraft","enabled","every","tableVisualization","enableAnalytics","collection","mainEntitySet","mainEntityType","multiViewsControl","easyFilterEnabled","MagicFiltering","filterBar","propertyInfo","showDraftEditStatus","filterConditions","variantManagement","join","templateType","kpiDefinitions","getKPIDefinitions","collapsedHeaderFragment","getCollapsedHeaderFragment","expandedHeaderFragment","getExpandedHeaderFragment"],"sourceRoot":".","sources":["ListReportConverter.ts"],"sourcesContent":["import type { EntityType } from \"@sap-ux/vocabularies-types\";\nimport type {\n\tChart,\n\tLineItem,\n\tPresentationVariant,\n\tSelectionPresentationVariant,\n\tSelectionVariant,\n\tSelectionVariantType\n} from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport { UIAnnotationTerms, UIAnnotationTypes } from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport type { CompiledBindingToolkitExpression } from \"sap/fe/base/BindingToolkit\";\nimport { compileExpression, getExpressionFromAnnotation } from \"sap/fe/base/BindingToolkit\";\nimport type ConverterContext from \"sap/fe/core/converters/ConverterContext\";\nimport type { PageContextPathTarget } from \"sap/fe/core/converters/TemplateConverter\";\nimport type { BaseAction } from \"sap/fe/core/converters/controls/Common/Action\";\nimport { getActionsFromManifest } from \"sap/fe/core/converters/controls/Common/Action\";\nimport type { ChartVisualization } from \"sap/fe/core/converters/controls/Common/Chart\";\nimport type { TableVisualization } from \"sap/fe/core/converters/controls/Common/Table\";\nimport type { CustomElementFilterField, FilterField } from \"sap/fe/core/converters/controls/ListReport/FilterBar\";\nimport {\n\tgetFilterBarHideBasicSearch,\n\tgetManifestFilterFields,\n\tgetSelectionFields,\n\tshowDraftEditStatus\n} from \"sap/fe/core/converters/controls/ListReport/FilterBar\";\nimport type { ConfigurableObject } from \"sap/fe/core/converters/helpers/ConfigurableObject\";\nimport { insertCustomElements } from \"sap/fe/core/converters/helpers/ConfigurableObject\";\nimport ActionUtilities from \"sap/fe/core/helpers/ActionUtilities\";\nimport { generate } from \"sap/fe/core/helpers/StableIdHelper\";\nimport type { EnvironmentCapabilities } from \"sap/fe/core/services/EnvironmentServiceFactory\";\nimport { isAnnotationOfType } from \"../../helpers/TypeGuards\";\nimport type {\n\tCombinedViewDefaultPath,\n\tDefaultOperator,\n\tHiddenDraft,\n\tMultipleViewsConfiguration,\n\tSingleViewPathConfiguration\n} from \"../ManifestSettings\";\nimport { TemplateType, VariantManagementType, VisualizationType } from \"../ManifestSettings\";\nimport type { DataVisualizationDefinition } from \"../controls/Common/DataVisualization\";\nimport {\n\tgetDataVisualizationConfiguration,\n\tgetDefaultChart,\n\tgetDefaultLineItem,\n\tgetSelectionPresentationVariant,\n\tgetSelectionVariant,\n\tisPresentationCompliant,\n\tisSelectionPresentationCompliant\n} from \"../controls/Common/DataVisualization\";\nimport type { KPIDefinition } from \"../controls/Common/KPI\";\nimport { getKPIDefinitions } from \"../controls/Common/KPI\";\nimport {\n\tgetChartID,\n\tgetCustomTabID,\n\tgetDynamicListReportID,\n\tgetFilterBarID,\n\tgetFilterVariantManagementID,\n\tgetIconTabBarID,\n\tgetTableID\n} from \"../helpers/ID\";\n\ntype VariantManagementDefinition = {\n\tid: string;\n\ttargetControlIds: string;\n};\n\nenum ViewSettingsType {\n\tMulti = \"Multi\",\n\tCombined = \"Combined\",\n\tCustom = \"Custom\",\n\tDefault = \"Default\"\n}\n\ntype CombinedViewSettings = {\n\tconverterContext: ConverterContext<PageContextPathTarget>;\n\tprimary: SingleViewPathConfiguration[];\n\tsecondary: SingleViewPathConfiguration[];\n\tdefaultPath?: CombinedViewDefaultPath;\n\ttype: ViewSettingsType.Combined;\n};\ntype CustomViewSettings = {\n\tkey?: string;\n\tlabel?: string;\n\ttemplate: string;\n\ttype: ViewSettingsType.Custom;\n\tvisible?: string;\n};\n\ntype MultiDefaultViewSettings = {\n\tconverterContext: ConverterContext<PageContextPathTarget>;\n\tselectionVariant?: SelectionVariantType;\n\tannotation?: LineItem | PresentationVariant | SelectionPresentationVariant | Chart;\n\tannotationPath: string;\n\tkeepPreviousPersonalization?: boolean;\n\tkey?: string;\n\tvisible?: string;\n\ttype: ViewSettingsType.Multi;\n};\ntype DefaultViewSettings = {\n\tconverterContext: ConverterContext<PageContextPathTarget>;\n\tannotation?: LineItem | PresentationVariant | SelectionPresentationVariant;\n\ttype: ViewSettingsType.Default;\n};\n\ntype ViewConverterSettings = DefaultViewSettings | CombinedViewSettings | MultiDefaultViewSettings | CustomViewSettings;\n\ntype DefaultSemanticDate = ConfigurableObject & {\n\toperator: string;\n};\ntype MultiViewsControlConfiguration = {\n\tid: string;\n\tshowTabCounts?: boolean;\n};\ntype LrVisualizationType<T> = T extends VisualizationType.Table ? TableVisualization | undefined : ChartVisualization | undefined;\n\nexport type ListReportDefinition = {\n\tmainEntitySet: string;\n\tmainEntityType: string; // entityType> at the start of LR templating\n\tsingleTableId?: string; // only with single Table mode\n\tsingleChartId?: string; // only with single Table mode\n\tdynamicListReportId: string;\n\tstickySubheaderProvider?: string;\n\tmultiViewsControl?: MultiViewsControlConfiguration; // only with multi Table mode\n\theaderActions: BaseAction[];\n\teasyFilterEnabled?: boolean;\n\tshowPinnableToggle?: boolean;\n\tfilterBar: {\n\t\tpropertyInfo: string;\n\t\tselectionFields: FilterField[];\n\t\thideBasicSearch: boolean;\n\t\tshowClearButton?: boolean;\n\t\tdisableDraftEditStateFilter: boolean;\n\t\tshowDraftEditStatus: boolean;\n\t};\n\tviews: ListReportViewDefinition[];\n\tfilterConditions: {\n\t\tselectionVariant: SelectionVariantType | undefined;\n\t\tdefaultSemanticDates: Record<string, DefaultSemanticDate> | {};\n\t};\n\tfilterBarId: string;\n\tvariantManagement: VariantManagementDefinition;\n\thasMultiVisualizations: boolean;\n\ttemplateType: TemplateType;\n\tuseSemanticDateRange?: boolean;\n\tfilterInitialLayout?: string;\n\tfilterLayout?: string;\n\tkpiDefinitions: KPIDefinition[];\n\thideFilterBar: boolean;\n\tuseHiddenFilterBar: boolean;\n\texpandedHeaderFragment?: string;\n\tcollapsedHeaderFragment?: string;\n};\ntype ListReportViewDefinition = SingleViewDefinition | CustomViewDefinition | CombinedViewDefinition;\n\nenum ViewDefinitionType {\n\tSingleTable = \"SingleTable\",\n\tSingleChart = \"SingleChart\",\n\tCombined = \"Combined\",\n\tCustom = \"Custom\"\n}\n\nexport type CombinedViewDefinition = {\n\tselectionVariantPath?: string; // only with on multi Table mode\n\ttitle?: string; // only with multi Table mode\n\tprimaryVisualization: DataVisualizationDefinition;\n\tsecondaryVisualization: DataVisualizationDefinition;\n\ttableControlId: string;\n\tchartControlId: string;\n\tdefaultPath?: string;\n\tvisible?: string;\n\tviewType: ViewDefinitionType.Combined;\n};\nexport type CustomViewDefinition = {\n\ttitle?: string; // only with multi Table mode\n\tfragment: string;\n\ttype: string;\n\tcustomTabId: string;\n\tvisible?: string;\n\tviewType: ViewDefinitionType.Custom;\n};\nexport type SingleViewDefinition = SingleTableViewDefinition | SingleChartViewDefinition;\nexport type BaseSingleViewDefinition = {\n\tselectionVariantPath?: string; // only with on multi Table mode\n\ttitle?: string; // only with multi Table mode\n\tpresentation: DataVisualizationDefinition;\n\tvisible?: string;\n};\nexport type SingleTableViewDefinition = BaseSingleViewDefinition & {\n\ttableControlId?: string;\n\tviewType: ViewDefinitionType.SingleTable;\n};\nexport type SingleChartViewDefinition = BaseSingleViewDefinition & {\n\tchartControlId?: string;\n\tviewType: ViewDefinitionType.SingleChart;\n};\n\ntype ContentAreaID = {\n\tchartId: string;\n\ttableId: string;\n};\n\n/**\n * Returns true if the view settings matches the provided type.\n * @param potentialViewSettings The view settings\n * @param type The type to match\n * @returns `true` if the view settings matches the provided type\n */\nconst isViewSettingsOfType = function <T extends ViewConverterSettings>(\n\tpotentialViewSettings: ViewConverterSettings,\n\ttype: T[\"type\"]\n): potentialViewSettings is T {\n\treturn potentialViewSettings.type === type;\n};\n\n/**\n * Returns true if the view definition matches the provided type.\n * @param potentialViewDefinition The view definition\n * @param type The type to match\n * @returns `true` if the view definition matches the provided type\n */\nconst isViewDefinitionOfType = function <T extends ListReportViewDefinition>(\n\tpotentialViewDefinition: ListReportViewDefinition,\n\ttype: T[\"viewType\"]\n): potentialViewDefinition is T {\n\treturn potentialViewDefinition.viewType === type;\n};\n\n/**\n * Retrieves all list report tables.\n * @param views The list report views configured in the manifest\n * @returns The list report tables\n */\nfunction getTableVisualizations(views: ListReportViewDefinition[]): TableVisualization[] {\n\tconst tables: TableVisualization[] = [];\n\tviews.forEach(function (view) {\n\t\tif (!isViewDefinitionOfType<CustomViewDefinition>(view, ViewDefinitionType.Custom)) {\n\t\t\tconst visualizations = isViewDefinitionOfType<CombinedViewDefinition>(view, ViewDefinitionType.Combined)\n\t\t\t\t? view.secondaryVisualization.visualizations\n\t\t\t\t: view.presentation.visualizations;\n\t\t\tvisualizations.forEach(function (visualization) {\n\t\t\t\tif (visualization.type === VisualizationType.Table) {\n\t\t\t\t\ttables.push(visualization);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t});\n\treturn tables;\n}\n\n/**\n * Retrieves all list report charts.\n * @param views The list report views configured in the manifest\n * @returns The list report charts\n */\nfunction getChartVisualizations(views: ListReportViewDefinition[]): ChartVisualization[] {\n\tconst charts: ChartVisualization[] = [];\n\tviews.forEach(function (view) {\n\t\tif (!isViewDefinitionOfType<CustomViewDefinition>(view, ViewDefinitionType.Custom)) {\n\t\t\tconst visualizations = isViewDefinitionOfType<CombinedViewDefinition>(view, ViewDefinitionType.Combined)\n\t\t\t\t? view.primaryVisualization.visualizations\n\t\t\t\t: view.presentation.visualizations;\n\t\t\tvisualizations.forEach(function (visualization) {\n\t\t\t\tif (visualization.type === VisualizationType.Chart) {\n\t\t\t\t\tcharts.push(visualization);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t});\n\treturn charts;\n}\nconst getDefaultSemanticDates = function (\n\tfilterFields: Record<string, CustomElementFilterField>\n): Record<string, DefaultOperator[] | undefined> {\n\tconst defaultSemanticDates: Record<string, DefaultOperator[] | undefined> = {};\n\tfor (const filterField in filterFields) {\n\t\tif (filterFields[filterField]?.settings?.defaultValues?.length) {\n\t\t\tdefaultSemanticDates[filterField] = filterFields[filterField]?.settings?.defaultValues;\n\t\t}\n\t}\n\treturn defaultSemanticDates;\n};\n/**\n * Find a visualization annotation that can be used for rendering the list report.\n * @param entityType The current EntityType\n * @param converterContext\n * @param isALP\n * @returns A compliant annotation for rendering the list report\n */\nfunction getCompliantVisualizationAnnotation(\n\tentityType: EntityType,\n\tconverterContext: ConverterContext<PageContextPathTarget>,\n\tisALP: boolean\n): LineItem | PresentationVariant | SelectionPresentationVariant | undefined {\n\tconst annotationPath = converterContext.getManifestWrapper().getDefaultTemplateAnnotationPath();\n\tconst selectionPresentationVariant = getSelectionPresentationVariant(entityType, annotationPath, converterContext);\n\tconst errorMessageForALP = \"ALP flavor needs both chart and table to load the application\";\n\tif (selectionPresentationVariant) {\n\t\tif (annotationPath) {\n\t\t\tconst presentationVariant = selectionPresentationVariant.PresentationVariant;\n\t\t\tif (!presentationVariant) {\n\t\t\t\tthrow new Error(\"Presentation Variant is not configured in the SPV mentioned in the manifest\");\n\t\t\t}\n\t\t\tif (!isPresentationCompliant(presentationVariant, isALP)) {\n\t\t\t\tif (isALP) {\n\t\t\t\t\tthrow new Error(errorMessageForALP);\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t}\n\t\tif (isSelectionPresentationCompliant(selectionPresentationVariant, isALP) === true) {\n\t\t\treturn selectionPresentationVariant;\n\t\t} else if (isALP) {\n\t\t\tthrow new Error(errorMessageForALP);\n\t\t}\n\t}\n\tconst presentationVariant = entityType.annotations?.UI?.PresentationVariant;\n\tif (presentationVariant) {\n\t\tif (isPresentationCompliant(presentationVariant, isALP)) {\n\t\t\treturn presentationVariant;\n\t\t} else if (isALP) {\n\t\t\tthrow new Error(errorMessageForALP);\n\t\t}\n\t}\n\tif (!isALP) {\n\t\treturn getDefaultLineItem(entityType);\n\t}\n\treturn undefined;\n}\n\n/**\n * Creates the view for the analytical list page.\n * @param presentations The data visualizations to configure\n * @param defaultPath The default path of the page\n * @param viewSettings The settings of the view\n * @returns The ALP view definition\n */\nconst createAlpView = function (\n\tpresentations: DataVisualizationDefinition[],\n\tdefaultPath: CombinedViewDefaultPath | undefined,\n\tviewSettings: ViewConverterSettings\n): CombinedViewDefinition | undefined {\n\tconst primaryVisualization = createAlpVisualization(presentations[0], true);\n\tconst secondaryVisualization = createAlpVisualization(presentations[1] ? presentations[1] : presentations[0], false);\n\tif (primaryVisualization && secondaryVisualization) {\n\t\tconst view: CombinedViewDefinition = {\n\t\t\tprimaryVisualization,\n\t\t\tsecondaryVisualization,\n\t\t\ttableControlId:\n\t\t\t\tsecondaryVisualization.visualizations[0]?.type === VisualizationType.Table\n\t\t\t\t\t? secondaryVisualization.visualizations[0].annotation?.id\n\t\t\t\t\t: \"\",\n\t\t\tchartControlId:\n\t\t\t\tprimaryVisualization.visualizations[0]?.type === VisualizationType.Chart ? primaryVisualization.visualizations[0].id : \"\",\n\t\t\tdefaultPath,\n\t\t\tviewType: ViewDefinitionType.Combined,\n\t\t\tvisible: isViewSettingsOfType<MultiDefaultViewSettings>(viewSettings, ViewSettingsType.Multi) ? viewSettings.visible : undefined\n\t\t};\n\t\treturn view;\n\t}\n};\n\n/**\n * Creates the visualizations for a single visualization view.\n * @param converterContext The converted context\n * @param presentation The presentation to configure\n * @param viewSettings The settings of the view\n * @returns The ALP visualization definition\n */\nconst createSingleVisualizationView = function (\n\tconverterContext: ConverterContext<PageContextPathTarget>,\n\tpresentation: DataVisualizationDefinition,\n\tviewSettings: ViewConverterSettings\n): SingleViewDefinition {\n\tconst tableId = getViewControl(presentation, VisualizationType.Table)?.annotation.id;\n\tconst baseSettings = {\n\t\tpresentation,\n\t\ttitle: getViewTitle(converterContext, viewSettings),\n\t\tselectionVariantPath: getViewSelectionVariant(viewSettings),\n\t\tvisible: isViewSettingsOfType<MultiDefaultViewSettings>(viewSettings, ViewSettingsType.Multi) ? viewSettings.visible : undefined\n\t};\n\tif (tableId) {\n\t\treturn {\n\t\t\t...baseSettings,\n\t\t\t...{\n\t\t\t\ttableControlId: tableId,\n\t\t\t\tviewType: ViewDefinitionType.SingleTable\n\t\t\t}\n\t\t};\n\t}\n\treturn {\n\t\t...baseSettings,\n\t\t...{\n\t\t\tchartControlId: getViewControl(presentation, VisualizationType.Chart)?.id,\n\t\t\tviewType: ViewDefinitionType.SingleChart\n\t\t}\n\t};\n};\n\n/**\n * Creates the visualizations for the analytical list page.\n * @param presentation The presentation to configure\n * @param isPrimary Is a primary presentation\n * @returns The ALP visualization definition\n */\nconst createAlpVisualization = function (presentation: DataVisualizationDefinition, isPrimary?: boolean): DataVisualizationDefinition {\n\tconst presentationCreated = Object.assign({}, presentation);\n\tconst defaultVisualization = presentation.visualizations.find(\n\t\t(visualization): visualization is TableVisualization | ChartVisualization =>\n\t\t\t(!!isPrimary && visualization.type === VisualizationType.Chart) ||\n\t\t\t(!isPrimary && visualization.type === VisualizationType.Table)\n\t);\n\n\tif (defaultVisualization) {\n\t\tpresentationCreated.visualizations = [defaultVisualization];\n\t} else {\n\t\tconst messageInfo = isPrimary ? { visualization: \"Primary\", type: \"chart\" } : { visualization: \"Secondary\", type: \"table\" };\n\t\tthrow new Error(`${messageInfo.visualization} visualization needs valid ${messageInfo.type}`);\n\t}\n\treturn presentationCreated;\n};\n\n/**\n * Gets the presentation of the analytical list page.\n * @param converterContext The converted context\n * @param item The item configuration\n * @param isPrimary Is a primary presentation\n * @returns The ALP presentation definition\n */\nconst getAlpPresentation = function (\n\tconverterContext: ConverterContext<PageContextPathTarget>,\n\titem: SingleViewPathConfiguration,\n\tisPrimary: boolean\n): DataVisualizationDefinition {\n\tconst resolvedTarget = converterContext.getEntityTypeAnnotation(item.annotationPath);\n\tconst targetAnnotation = resolvedTarget.annotation;\n\tconverterContext = resolvedTarget.converterContext;\n\tconst annotation = targetAnnotation;\n\tif (annotation || converterContext.getTemplateType() === TemplateType.AnalyticalListPage) {\n\t\treturn getDataVisualizationConfiguration(\n\t\t\tannotation ? converterContext.getRelativeAnnotationPath(annotation.fullyQualifiedName, converterContext.getEntityType()) : \"\",\n\t\t\tconverterContext,\n\t\t\t{\n\t\t\t\tisCondensedTableLayoutCompliant: true,\n\t\t\t\tshouldCreateTemplateChartVisualization: true\n\t\t\t}\n\t\t);\n\t} else {\n\t\tthrow new Error(\n\t\t\t`Annotation Path for the ${isPrimary ? \"primary\" : \"secondary\"} visualization mentioned in the manifest is not found`\n\t\t);\n\t}\n};\n\n/**\n * Configures the multi view configuration with additional keys.\n * @param presentation The presentation to configure\n * @param viewSettings The settings of the view\n */\nconst configureMultiViews = function (presentation: DataVisualizationDefinition, viewSettings: MultiDefaultViewSettings): void {\n\t// Need to loop on table into views since multi table mode get specific configuration (hidden filters or Table Id)\n\tfor (const visualization of presentation.visualizations) {\n\t\tswitch (visualization.type) {\n\t\t\tcase VisualizationType.Table:\n\t\t\t\tconst filters = visualization.control.filters || {};\n\t\t\t\tfilters.hiddenFilters = filters.hiddenFilters || { paths: [] };\n\t\t\t\tif (!viewSettings.keepPreviousPersonalization) {\n\t\t\t\t\t// Need to override Table Id to match with Tab Key (currently only table is managed in multiple view mode)\n\t\t\t\t\tvisualization.annotation.id = getTableID(viewSettings.key ?? \"\", \"LineItem\");\n\t\t\t\t\tvisualization.annotation.apiId = generate([visualization.annotation.id, \"Table\"]);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase VisualizationType.Chart:\n\t\t\t\tvisualization.id = getChartID(viewSettings.key || \"\", \"Chart\");\n\t\t\t\tvisualization.multiViews = true;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n};\n\n/**\n * Gets the custom view configuration.\n * @param viewSettings The settings of the view\n * @returns The custom view definition\n */\nconst getCustomView = function (viewSettings: CustomViewSettings): CustomViewDefinition {\n\treturn {\n\t\ttitle: viewSettings.label,\n\t\tfragment: viewSettings.template,\n\t\ttype: viewSettings.type,\n\t\tcustomTabId: getCustomTabID(viewSettings.key ?? \"\"),\n\t\tvisible: viewSettings.visible,\n\t\tviewType: ViewDefinitionType.Custom\n\t};\n};\n\n/**\n * Gets the configured control of the view.\n * @param presentation The presentation of the view\n * @param visualizationType The type of the visualization to find\n * @returns The visualization if the type matches, undefined otherwise\n */\nconst getViewControl = function <T extends VisualizationType.Table | VisualizationType.Chart>(\n\tpresentation: DataVisualizationDefinition,\n\tvisualizationType: T\n): LrVisualizationType<T> {\n\treturn presentation.visualizations.find((visualization) => visualization.type === visualizationType) as LrVisualizationType<T>;\n};\n\n/**\n * Gets the title of the view.\n * @param converterContext The converted context\n * @param viewSettings The settings of the view\n * @returns The title\n */\nconst getViewTitle = function (\n\tconverterContext: ConverterContext<PageContextPathTarget>,\n\tviewSettings: ViewConverterSettings\n): CompiledBindingToolkitExpression {\n\tif (isViewSettingsOfType<MultiDefaultViewSettings>(viewSettings, ViewSettingsType.Multi)) {\n\t\tconst viewAnnotation = converterContext.getEntityTypeAnnotation(viewSettings.annotationPath).annotation as\n\t\t\t| SelectionVariant\n\t\t\t| SelectionPresentationVariant;\n\t\treturn compileExpression(getExpressionFromAnnotation(viewAnnotation.Text));\n\t}\n\treturn \"\";\n};\n\n/**\n * Gets the configured SelectionVariant  of the view.\n * @param viewSettings The settings of the view\n * @returns The SelectionVariant if there is one, undefined otherwise\n */\nconst getViewSelectionVariant = function (viewSettings: ViewConverterSettings): string | undefined {\n\tif (isViewSettingsOfType<MultiDefaultViewSettings>(viewSettings, ViewSettingsType.Multi)) {\n\t\treturn viewSettings.annotation &&\n\t\t\tisAnnotationOfType<SelectionPresentationVariant>(viewSettings.annotation, UIAnnotationTypes.SelectionPresentationVariantType)\n\t\t\t? `@${viewSettings.annotation.SelectionVariant?.fullyQualifiedName.split(\"@\")[1]}`\n\t\t\t: viewSettings.annotationPath;\n\t}\n\treturn undefined;\n};\n\n/**\n * Gets the visualization path of the view.\n * @param viewSettings The settings of the view\n * @returns The SelectionVariant if there is one, undefined otherwise\n */\nconst getViewVisualizationPath = function (viewSettings: ViewConverterSettings): string {\n\tif (!isViewSettingsOfType<CustomViewSettings>(viewSettings, ViewSettingsType.Custom)) {\n\t\treturn !isViewSettingsOfType<CombinedViewSettings>(viewSettings, ViewSettingsType.Combined) && viewSettings.annotation\n\t\t\t? viewSettings.converterContext.getRelativeAnnotationPath(\n\t\t\t\t\tviewSettings.annotation.fullyQualifiedName,\n\t\t\t\t\tviewSettings.converterContext.getEntityType()\n\t\t\t  )\n\t\t\t: \"\";\n\t}\n\treturn \"\";\n};\n\n/**\n * Gets the list report view definition.\n * @param viewSettings The settings of the view\n * @returns The  definition\n */\nconst getView = function (viewSettings: ViewConverterSettings): ListReportViewDefinition {\n\tif (!isViewSettingsOfType<CustomViewSettings>(viewSettings, ViewSettingsType.Custom)) {\n\t\tconst converterContext = viewSettings.converterContext;\n\t\tconst multiViewSettings = isViewSettingsOfType<MultiDefaultViewSettings>(viewSettings, ViewSettingsType.Multi)\n\t\t\t? {\n\t\t\t\t\tassociatedSelectionVariant: viewSettings.selectionVariant,\n\t\t\t\t\tisMacroOrMultipleView: true\n\t\t\t  }\n\t\t\t: {};\n\n\t\tconst presentation = getDataVisualizationConfiguration(getViewVisualizationPath(viewSettings), converterContext, {\n\t\t\t...{ isCondensedTableLayoutCompliant: true },\n\t\t\t...multiViewSettings\n\t\t});\n\n\t\tif (\n\t\t\t!isViewSettingsOfType<CombinedViewSettings>(viewSettings, ViewSettingsType.Combined) &&\n\t\t\tpresentation.visualizations.length === 2 &&\n\t\t\tconverterContext.getTemplateType() === TemplateType.AnalyticalListPage\n\t\t) {\n\t\t\tconst view = createAlpView([presentation], \"both\", viewSettings);\n\t\t\tif (view) {\n\t\t\t\treturn view;\n\t\t\t}\n\t\t} else if (isViewSettingsOfType<CombinedViewSettings>(viewSettings, ViewSettingsType.Combined)) {\n\t\t\tconst { primary, secondary } = viewSettings;\n\t\t\tif (primary?.length && secondary?.length) {\n\t\t\t\tconst view = createAlpView(\n\t\t\t\t\t[getAlpPresentation(converterContext, primary[0], true), getAlpPresentation(converterContext, secondary[0], false)],\n\t\t\t\t\tviewSettings.defaultPath,\n\t\t\t\t\tviewSettings\n\t\t\t\t);\n\t\t\t\tif (view) {\n\t\t\t\t\treturn view;\n\t\t\t\t}\n\t\t\t} else if (converterContext.getTemplateType() === TemplateType.AnalyticalListPage) {\n\t\t\t\tthrow new Error(\"SecondaryItems in the Views is not present\");\n\t\t\t}\n\t\t} else if (isViewSettingsOfType<MultiDefaultViewSettings>(viewSettings, ViewSettingsType.Multi)) {\n\t\t\tconfigureMultiViews(presentation, viewSettings);\n\t\t}\n\t\tconst view = createSingleVisualizationView(converterContext, presentation, viewSettings);\n\t\tview.presentation.inMultiView = !!multiViewSettings.isMacroOrMultipleView;\n\n\t\treturn view;\n\t} else {\n\t\treturn getCustomView(viewSettings);\n\t}\n};\n\n/**\n * Gets the list report view definitions.\n * @param converterContext The converted context\n * @param multipleViewConfig The manifest configuration related of the multi views\n * @returns The  definitions\n */\nconst getViews = function (\n\tconverterContext: ConverterContext<PageContextPathTarget>,\n\tmultipleViewConfig: MultipleViewsConfiguration | undefined\n): ListReportViewDefinition[] {\n\tlet viewConverterConfigs: ViewConverterSettings[] = [];\n\tconst manifestWrapper = converterContext.getManifestWrapper();\n\tif (multipleViewConfig) {\n\t\tmultipleViewConfig.paths.forEach((path) => {\n\t\t\tif (manifestWrapper.isCombinedViewConfiguration(path)) {\n\t\t\t\tif (multipleViewConfig.paths.length > 1) {\n\t\t\t\t\tthrow new Error(\"ALP flavor cannot have multiple views\");\n\t\t\t\t} else {\n\t\t\t\t\tviewConverterConfigs.push({\n\t\t\t\t\t\tconverterContext: converterContext,\n\t\t\t\t\t\tprimary: path.primary,\n\t\t\t\t\t\tsecondary: path.secondary,\n\t\t\t\t\t\tdefaultPath: path.defaultPath,\n\t\t\t\t\t\ttype: ViewSettingsType.Combined\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else if (manifestWrapper.isCustomViewConfiguration(path)) {\n\t\t\t\tviewConverterConfigs.push({\n\t\t\t\t\tkey: path.key,\n\t\t\t\t\tlabel: path.label,\n\t\t\t\t\ttemplate: path.template,\n\t\t\t\t\ttype: ViewSettingsType.Custom,\n\t\t\t\t\tvisible: path.visible\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tconst viewConverterContext = converterContext.getConverterContextFor<PageContextPathTarget>(\n\t\t\t\t\t\tpath.contextPath || (path.entitySet && `/${path.entitySet}`) || converterContext.getContextPath()\n\t\t\t\t\t),\n\t\t\t\t\tentityType = viewConverterContext.getEntityType();\n\t\t\t\tif (entityType && viewConverterContext) {\n\t\t\t\t\tlet annotation;\n\t\t\t\t\tconst resolvedTarget = viewConverterContext.getEntityTypeAnnotation(path.annotationPath);\n\t\t\t\t\tconst targetAnnotation = resolvedTarget.annotation as SelectionVariant | SelectionPresentationVariant;\n\t\t\t\t\tif (targetAnnotation) {\n\t\t\t\t\t\tannotation =\n\t\t\t\t\t\t\ttargetAnnotation.term === UIAnnotationTerms.SelectionVariant\n\t\t\t\t\t\t\t\t? getCompliantVisualizationAnnotation(entityType, viewConverterContext, false)\n\t\t\t\t\t\t\t\t: targetAnnotation;\n\t\t\t\t\t\tviewConverterConfigs.push({\n\t\t\t\t\t\t\tselectionVariant: targetAnnotation.term === UIAnnotationTerms.SelectionVariant ? targetAnnotation : undefined,\n\t\t\t\t\t\t\tconverterContext: viewConverterContext,\n\t\t\t\t\t\t\tannotation,\n\t\t\t\t\t\t\tannotationPath: path.annotationPath,\n\t\t\t\t\t\t\tkeepPreviousPersonalization: path.keepPreviousPersonalization,\n\t\t\t\t\t\t\tkey: path.key,\n\t\t\t\t\t\t\tvisible: path.visible,\n\t\t\t\t\t\t\ttype: ViewSettingsType.Multi\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// TODO Diagnostics message\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t} else {\n\t\tconst entityType = converterContext.getEntityType();\n\t\tif (converterContext.getTemplateType() === TemplateType.AnalyticalListPage) {\n\t\t\tviewConverterConfigs = createAlpViewSettings(converterContext, viewConverterConfigs);\n\t\t} else {\n\t\t\tviewConverterConfigs.push({\n\t\t\t\tannotation: getCompliantVisualizationAnnotation(entityType, converterContext, false),\n\t\t\t\tconverterContext: converterContext,\n\t\t\t\ttype: ViewSettingsType.Default\n\t\t\t});\n\t\t}\n\t}\n\treturn viewConverterConfigs.map((viewConverterConfig) => {\n\t\treturn getView(viewConverterConfig);\n\t});\n};\nconst getMultiViewsControl = function (\n\tconverterContext: ConverterContext<PageContextPathTarget>,\n\tviews: ListReportViewDefinition[]\n): MultiViewsControlConfiguration | undefined {\n\tconst manifestWrapper = converterContext.getManifestWrapper();\n\tconst viewsDefinition: MultipleViewsConfiguration | undefined = manifestWrapper.getViewConfiguration();\n\tif (views.length > 1 && !hasMultiVisualizations(converterContext)) {\n\t\treturn {\n\t\t\tshowTabCounts: viewsDefinition ? viewsDefinition.showCounts ?? manifestWrapper.hasMultipleEntitySets() : undefined, // with multi EntitySets, tab counts are displayed by default\n\t\t\tid: getIconTabBarID()\n\t\t};\n\t}\n\treturn undefined;\n};\n\n/**\n * Creates the settings related to an ALP view.\n * @param converterContext The converted context\n * @param viewConfigs The configs of the other list report views\n * @returns The configs of the list report views\n */\nfunction createAlpViewSettings(\n\tconverterContext: ConverterContext<PageContextPathTarget>,\n\tviewConfigs: ViewConverterSettings[]\n): ViewConverterSettings[] {\n\tconst entityType = converterContext.getEntityType();\n\tconst annotation = getCompliantVisualizationAnnotation(entityType, converterContext, true);\n\tlet chart, table;\n\tif (annotation) {\n\t\tviewConfigs.push({\n\t\t\tannotation: annotation,\n\t\t\tconverterContext,\n\t\t\ttype: ViewSettingsType.Default\n\t\t});\n\t} else {\n\t\tchart = getDefaultChart(entityType);\n\t\ttable = getDefaultLineItem(entityType);\n\t\tif (chart && table) {\n\t\t\tconst primary = [{ annotationPath: \"@\" + chart.term }];\n\t\t\tconst secondary = [{ annotationPath: \"@\" + table.term }];\n\t\t\tviewConfigs.push({\n\t\t\t\tconverterContext: converterContext,\n\t\t\t\tprimary: primary,\n\t\t\t\tsecondary: secondary,\n\t\t\t\tdefaultPath: \"both\",\n\t\t\t\ttype: ViewSettingsType.Combined\n\t\t\t});\n\t\t} else {\n\t\t\tthrow new Error(\"ALP flavor needs both chart and table to load the application\");\n\t\t}\n\t}\n\treturn viewConfigs;\n}\nfunction hasMultiVisualizations(converterContext: ConverterContext<PageContextPathTarget>): boolean {\n\treturn (\n\t\tconverterContext.getManifestWrapper().hasMultipleVisualizations() ||\n\t\tconverterContext.getTemplateType() === TemplateType.AnalyticalListPage\n\t);\n}\nexport const getHeaderActions = function (converterContext: ConverterContext<PageContextPathTarget>): BaseAction[] {\n\tconst manifestWrapper = converterContext.getManifestWrapper();\n\tconst headerActions = insertCustomElements<BaseAction>(\n\t\t[],\n\t\tgetActionsFromManifest(manifestWrapper.getHeaderActions(), converterContext).actions\n\t);\n\t// Apply primary action overflow protection\n\treturn ActionUtilities.ensurePrimaryActionNeverOverflows(headerActions);\n};\n\n/**\n * Sets the filterBarId on the scenario with multi-entity sets.\n * @param views The definition of the list report views\n * @param filterBarId\n */\nconst checkChartFilterBarId = function (views: ListReportViewDefinition[], filterBarId: string): void {\n\tviews.forEach((view) => {\n\t\tif (\n\t\t\t!isViewDefinitionOfType<CustomViewDefinition>(view, ViewDefinitionType.Custom) &&\n\t\t\t!isViewDefinitionOfType<CombinedViewDefinition>(view, ViewDefinitionType.Combined)\n\t\t) {\n\t\t\tview.presentation.visualizations.forEach((visualizationDefinition) => {\n\t\t\t\tif (visualizationDefinition.type === VisualizationType.Chart && visualizationDefinition.filterId !== filterBarId) {\n\t\t\t\t\tvisualizationDefinition.filterId = filterBarId;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t});\n};\n\n/**\n * Creates the ListReportDefinition for multiple entity sets (multiple table mode).\n * @param converterContext The converter context\n * @param capabilities The predefined environment capabilities\n * @returns The list report definition based on annotation + manifest\n */\nexport const convertPage = function (\n\tconverterContext: ConverterContext<PageContextPathTarget>,\n\tcapabilities?: EnvironmentCapabilities\n): ListReportDefinition {\n\tconst entityType = converterContext.getEntityType();\n\tconst sContextPath = converterContext.getContextPath();\n\tif (!sContextPath) {\n\t\t// If we don't have an entitySet at this point we have an issue I'd say\n\t\tthrow new Error(\n\t\t\t\"An EntitySet is required to be able to display a ListReport, please adjust your `entitySet` property to point to one.\"\n\t\t);\n\t}\n\tconst manifestWrapper = converterContext.getManifestWrapper();\n\tconst viewsDefinition = manifestWrapper.getViewConfiguration();\n\tconst hasMultipleEntitySets = manifestWrapper.hasMultipleEntitySets();\n\tconst views = getViews(converterContext, viewsDefinition);\n\tconst lrTableVisualizations = getTableVisualizations(views);\n\tconst lrChartVisualizations = getChartVisualizations(views);\n\tconst showPinnableToggle = lrTableVisualizations.some((table) => table.control.type === \"ResponsiveTable\");\n\tlet singleTableId = \"\";\n\tlet singleChartId = \"\";\n\tconst dynamicListReportId = getDynamicListReportID();\n\tconst filterBarId = getFilterBarID(sContextPath);\n\tconst filterVariantManagementID = getFilterVariantManagementID(filterBarId);\n\tconst fbConfig = manifestWrapper.getFilterConfiguration();\n\tconst filterInitialLayout = fbConfig?.initialLayout !== undefined ? fbConfig?.initialLayout.toLowerCase() : \"compact\";\n\tconst filterLayout = fbConfig?.layout !== undefined ? fbConfig?.layout.toLowerCase() : \"compact\";\n\tconst useSemanticDateRange = fbConfig.useSemanticDateRange !== undefined ? fbConfig.useSemanticDateRange : true;\n\tconst showClearButton = fbConfig.showClearButton !== undefined ? fbConfig.showClearButton : false;\n\tconst config = getContentAreaId(views);\n\tif (config) {\n\t\tsingleChartId = config.chartId;\n\t\tsingleTableId = config.tableId;\n\t}\n\tconst useHiddenFilterBar = manifestWrapper.useHiddenFilterBar();\n\t// Chart has a dependency to filter bar (issue with loading data). Once resolved, the check for chart should be removed here.\n\t// Until then, hiding filter bar is now allowed if a chart is being used on LR.\n\tconst hideFilterBar = (manifestWrapper.isFilterBarHidden() || useHiddenFilterBar) && singleChartId === \"\";\n\tconst lrFilterProperties = getSelectionFields(converterContext, lrTableVisualizations);\n\tconst selectionFields = lrFilterProperties.selectionFields;\n\tconst propertyInfoFields = lrFilterProperties.sPropertyInfo;\n\tconst hideBasicSearch = getFilterBarHideBasicSearch(lrTableVisualizations, lrChartVisualizations, converterContext);\n\tconst multiViewControl = getMultiViewsControl(converterContext, views);\n\tconst selectionVariant = multiViewControl ? undefined : getSelectionVariant(entityType, converterContext);\n\tconst defaultSemanticDates = useSemanticDateRange ? getDefaultSemanticDates(getManifestFilterFields(entityType, converterContext)) : {};\n\t// Sort header actions according to position attributes in manifest\n\tconst headerActions = getHeaderActions(converterContext);\n\tif (hasMultipleEntitySets) {\n\t\tcheckChartFilterBarId(views, filterBarId);\n\t}\n\tconst visualizationIds = lrTableVisualizations\n\t\t.map((visualization) => {\n\t\t\t//pick up the table API id for the table, since that is the external control.\n\t\t\t// variant management still works because it can handle a control where the child has flex changes.\n\t\t\treturn visualization.annotation.apiId;\n\t\t})\n\t\t.concat(\n\t\t\tlrChartVisualizations.map((visualization) => {\n\t\t\t\treturn visualization.apiId;\n\t\t\t})\n\t\t);\n\tconst targetControlIds = [\n\t\t...(hideFilterBar && !useHiddenFilterBar ? [] : [filterBarId]),\n\t\t...(manifestWrapper.getVariantManagement() !== VariantManagementType.Control ? visualizationIds : []),\n\t\t...(multiViewControl ? [multiViewControl.id] : [])\n\t];\n\tconst stickySubheaderProvider =\n\t\tmultiViewControl && manifestWrapper.getStickyMultiTabHeaderConfiguration() ? multiViewControl.id : undefined;\n\n\t// Check if all tables on the main entity set are Tree or analytical tables. If that's the case, the draft editState filter shall not be shown\n\tconst disableDraftEditStateFilter =\n\t\t(capabilities?.HiddenDraft as HiddenDraft)?.enabled ||\n\t\tlrTableVisualizations.every((tableVisualization) => {\n\t\t\treturn (\n\t\t\t\ttableVisualization.control.type === \"TreeTable\" ||\n\t\t\t\ttableVisualization.enableAnalytics ||\n\t\t\t\ttableVisualization.annotation.collection !== sContextPath\n\t\t\t);\n\t\t});\n\n\treturn {\n\t\tmainEntitySet: sContextPath,\n\t\tmainEntityType: `${sContextPath}/`,\n\t\tmultiViewsControl: multiViewControl,\n\t\tstickySubheaderProvider,\n\t\tsingleTableId,\n\t\tsingleChartId,\n\t\tdynamicListReportId,\n\t\theaderActions,\n\t\teasyFilterEnabled: !hideFilterBar && capabilities?.MagicFiltering,\n\t\tshowPinnableToggle: showPinnableToggle,\n\t\tfilterBar: {\n\t\t\tpropertyInfo: propertyInfoFields,\n\t\t\tselectionFields,\n\t\t\thideBasicSearch,\n\t\t\tshowClearButton,\n\t\t\tdisableDraftEditStateFilter,\n\t\t\tshowDraftEditStatus: showDraftEditStatus(converterContext)\n\t\t},\n\t\tviews: views,\n\t\tfilterBarId: hideFilterBar && !useHiddenFilterBar ? \"\" : filterBarId,\n\t\tfilterConditions: {\n\t\t\tselectionVariant: selectionVariant,\n\t\t\tdefaultSemanticDates: defaultSemanticDates\n\t\t},\n\t\tvariantManagement: {\n\t\t\tid: filterVariantManagementID,\n\t\t\ttargetControlIds: targetControlIds.join(\",\")\n\t\t},\n\t\thasMultiVisualizations: hasMultiVisualizations(converterContext),\n\t\ttemplateType: manifestWrapper.getTemplateType(),\n\t\tuseSemanticDateRange,\n\t\tfilterInitialLayout,\n\t\tfilterLayout,\n\t\tkpiDefinitions: getKPIDefinitions(converterContext),\n\t\thideFilterBar,\n\t\tuseHiddenFilterBar,\n\t\tcollapsedHeaderFragment: manifestWrapper.getCollapsedHeaderFragment(),\n\t\texpandedHeaderFragment: manifestWrapper.getExpandedHeaderFragment()\n\t};\n};\n\n/**\n * Gets the content area ids of the list report.\n * @param views The definitions of the list report views\n * @returns The content area ids\n */\nfunction getContentAreaId(views: ListReportViewDefinition[]): ContentAreaID | undefined {\n\tconst singleTableId =\n\t\t\tviews.find(\n\t\t\t\t(view): view is CombinedViewDefinition | SingleTableViewDefinition =>\n\t\t\t\t\t(isViewDefinitionOfType<CombinedViewDefinition>(view, ViewDefinitionType.Combined) ||\n\t\t\t\t\t\tisViewDefinitionOfType<SingleTableViewDefinition>(view, ViewDefinitionType.SingleTable)) &&\n\t\t\t\t\t!!view.tableControlId\n\t\t\t)?.tableControlId ?? \"\",\n\t\tsingleChartId =\n\t\t\tviews.find(\n\t\t\t\t(view): view is CombinedViewDefinition | SingleChartViewDefinition =>\n\t\t\t\t\t(isViewDefinitionOfType<CombinedViewDefinition>(view, ViewDefinitionType.Combined) ||\n\t\t\t\t\t\tisViewDefinitionOfType<SingleChartViewDefinition>(view, ViewDefinitionType.SingleChart)) &&\n\t\t\t\t\t!!view.chartControlId\n\t\t\t)?.chartControlId ?? \"\";\n\tif (singleTableId || singleChartId) {\n\t\treturn {\n\t\t\tchartId: singleChartId,\n\t\t\ttableId: singleTableId\n\t\t};\n\t}\n\treturn undefined;\n}\n"],"mappings":"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","ignoreList":[],"file":"ListReportConverter-dbg.js"}