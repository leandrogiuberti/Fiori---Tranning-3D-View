{"version":3,"names":["getSectionKey","facetDefinition","fallback","ID","toString","Label","createEditableHeaderSection","converterContext","allHeaderFacets","editableHeaderSectionID","getEditableHeaderSectionID","headerFacets","getEntityType","annotations","UI","HeaderFacets","headerfacetSubSections","createSubSections","customHeaderFacetSubSections","createCustomHeaderFacetSubSections","allHeaderFacetsSubSections","length","i","forEach","item","visible","push","key","slice","lastIndexOf","customItem","headerSection","id","title","compileExpression","IsEditable","subSections","_exports","getSectionsFromAnnotation","entityType","objectPageSections","Facets","map","getSectionFromAnnotation","getUseSingleTextAreaFieldAsNotes","manifestWrapper","sectionKey","sectionsInManifest","getSections","sectionSettings","useSingleTextAreaFieldAsNotes","facet","sectionID","getSectionID","hiddenExpression","getExpressionFromAnnotation","Hidden","path","singletonPathVisitor","getConvertedTypes","getManifestWrapper","section","undefined","showTitle","not","equal","getSectionsFromManifest","manifestSections","sections","Object","keys","manifestSectionKey","getSectionFromManifest","customSectionDefinition","customSectionID","getCustomSectionID","position","placement","Placement","After","manifestSubSections","applyState","retrieveState","createCustomSubSections","customSection","onSectionLoaded","getHeaderActions","capabilities","annotationHeaderActions","getHeaderDefaultActions","actionOverwriteConfig","isNavigable","OverrideType","overwrite","enabled","defaultValuesExtensionFunction","command","menu","priority","group","manifestActions","getActionsFromManifest","getHiddenHeaderActions","annotationMenuActionItems","getAnnotationMenuActionItems","matchingManifestActions","getMatchingManifestAction","actions","overwrittenMenuActionItems","insertCustomElements","headerActions","prepareMenuActions","removeDuplicateActions","getVisibilityEnablementMenuActions","ActionUtilities","ensurePrimaryActionNeverOverflows","commandActions","getFooterActions","aAnnotationFooterActions","getFooterDefaultActions","getViewLevel","footerActions","protectedFooterActions","_getSubSectionVisualization","subSection","presentation","visualizations","_isFacetHasNonResponsiveTableVisible","dataVisualizationSubSection","subSectionVisualization","type","control","_setNonResponsiveTableVisualizationInformation","sectionLayout","tableControlConfiguration","dataVisualizationOptions","rowCountMode","useCondensedTableLayout","_setNonResponsiveTableWithMixFacetsInformation","firstSection","content","SubSectionType","DataVisualization","tableControl","_setNonResponsiveTableSubSectionControlConfiguration","_removeCondensedFromSubSections","singleVisualization","VisualizationType","Table","singleContent","merge","sideContent","objectPageLazyLoaderEnabled","getSectionLayout","firstForm","find","element","Form","hasHeaderContent","getHeaderFacets","getShowHeaderContentExpression","ifElse","constant","isHeaderEditable","getShowHeaderContent","getEasyFillVisible","entitySet","getEntitySet","isUpdateHidden","ModelHelper","rootEntitySetPath","getRootEntitySetPath","getContextPath","rootConverterContext","getConverterContextFor","isRootUpdateHidden","isDraftEnabled","isObjectPathDraftSupported","getDataModelObjectPath","isSticky","startingEntitySet","viewLevel","updatablePropertyPath","Capabilities","UpdateRestrictions","Updatable","isEditEnabled","getEditButtonEnabledExpression","and","getExpandedImageVisible","convertPage","getHeaderFacetsFromAnnotations","getHeaderFacetsFromManifest","HeaderInfo","template","TemplateType","ObjectPage","header","getShowObjectPageHeader","facets","easyFillVisible","showContent","hasContent","avatar","getAvatar","expandedImageVisible","headerCommandActions","footerCommandActions","showAnchorBar","getShowAnchorBar","useIconTabBar","transportSelection","getTransportSelection"],"sourceRoot":".","sources":["ObjectPageConverter.ts"],"sourcesContent":["import type { EntityType } from \"@sap-ux/vocabularies-types\";\nimport type { FacetTypes } from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport type { BindingToolkitExpression, CompiledBindingToolkitExpression } from \"sap/fe/base/BindingToolkit\";\nimport { and, compileExpression, constant, equal, getExpressionFromAnnotation, ifElse, not } from \"sap/fe/base/BindingToolkit\";\nimport type { BaseAction, CombinedAction, CustomAction, OverrideTypeAction } from \"sap/fe/core/converters/controls/Common/Action\";\nimport {\n\tgetActionsFromManifest,\n\tgetAnnotationMenuActionItems,\n\tgetMatchingManifestAction,\n\tgetVisibilityEnablementMenuActions,\n\tprepareMenuActions,\n\tremoveDuplicateActions\n} from \"sap/fe/core/converters/controls/Common/Action\";\nimport type { TableVisualization } from \"sap/fe/core/converters/controls/Common/Table\";\nimport {\n\tgetEditButtonEnabledExpression,\n\tgetFooterDefaultActions,\n\tgetHeaderDefaultActions,\n\tgetHiddenHeaderActions\n} from \"sap/fe/core/converters/objectPage/HeaderAndFooterAction\";\nimport ActionUtilities from \"sap/fe/core/helpers/ActionUtilities\";\nimport ModelHelper from \"sap/fe/core/helpers/ModelHelper\";\nimport { UI, singletonPathVisitor } from \"../../helpers/BindingHelper\";\nimport type { EnvironmentCapabilities } from \"../../services/EnvironmentServiceFactory\";\nimport type ConverterContext from \"../ConverterContext\";\nimport type { ManifestSection, ManifestSubSection, TransportSelectionDefinition } from \"../ManifestSettings\";\nimport { TemplateType, VisualizationType } from \"../ManifestSettings\";\nimport type ManifestWrapper from \"../ManifestWrapper\";\nimport type { PageContextPathTarget, PageDefinition } from \"../TemplateConverter\";\nimport type { Avatar } from \"../controls/ObjectPage/Avatar\";\nimport { getAvatar } from \"../controls/ObjectPage/Avatar\";\nimport type { ObjectPageHeaderFacet } from \"../controls/ObjectPage/HeaderFacet\";\nimport { getHeaderFacetsFromAnnotations, getHeaderFacetsFromManifest } from \"../controls/ObjectPage/HeaderFacet\";\nimport type {\n\tCustomObjectPageSection,\n\tDataVisualizationSubSection,\n\tFormSubSection,\n\tMixedSubSection,\n\tObjectPageSection,\n\tObjectPageSubSection\n} from \"../controls/ObjectPage/SubSection\";\nimport {\n\tSubSectionType,\n\tcreateCustomHeaderFacetSubSections,\n\tcreateCustomSubSections,\n\tcreateSubSections\n} from \"../controls/ObjectPage/SubSection\";\nimport type { ConfigurableRecord, Position } from \"../helpers/ConfigurableObject\";\nimport { OverrideType, Placement, insertCustomElements } from \"../helpers/ConfigurableObject\";\nimport { getCustomSectionID, getEditableHeaderSectionID, getSectionID } from \"../helpers/ID\";\n\nexport type ObjectPageDefinition = PageDefinition & {\n\theader: {\n\t\tvisible: boolean;\n\t\tsection?: ObjectPageSection;\n\t\tfacets: ObjectPageHeaderFacet[];\n\t\tactions: BaseAction[];\n\t\teasyFillVisible: CompiledBindingToolkitExpression;\n\t\tshowContent: CompiledBindingToolkitExpression;\n\t\thasContent: boolean;\n\t\tavatar?: Avatar;\n\t\ttitle: {\n\t\t\texpandedImageVisible: CompiledBindingToolkitExpression;\n\t\t};\n\t};\n\tsections: ObjectPageSection[];\n\tfooterActions: BaseAction[];\n\theaderCommandActions: Record<string, CustomAction>;\n\tfooterCommandActions: Record<string, CustomAction>;\n\tshowAnchorBar: boolean;\n\tuseIconTabBar: boolean;\n\ttransportSelection?: TransportSelectionDefinition;\n};\n\nconst getSectionKey = (facetDefinition: FacetTypes, fallback: string): string => {\n\treturn facetDefinition.ID?.toString() || facetDefinition.Label?.toString() || fallback;\n};\n\n/**\n * Creates a section that represents the editable header part; it is only visible in edit mode.\n * @param converterContext The converter context\n * @param allHeaderFacets The converter context\n * @returns The section representing the editable header parts\n */\nexport function createEditableHeaderSection(\n\tconverterContext: ConverterContext<PageContextPathTarget>,\n\tallHeaderFacets: ObjectPageHeaderFacet[]\n): ObjectPageSection {\n\tconst editableHeaderSectionID = getEditableHeaderSectionID();\n\tconst headerFacets = converterContext.getEntityType().annotations?.UI?.HeaderFacets;\n\tconst headerfacetSubSections = headerFacets ? createSubSections(headerFacets, converterContext, true) : [];\n\tconst customHeaderFacetSubSections = createCustomHeaderFacetSubSections(converterContext);\n\tlet allHeaderFacetsSubSections: ObjectPageSubSection[] = [];\n\tif (customHeaderFacetSubSections.length > 0) {\n\t\t// merge annotation based header facets and custom header facets in the right order\n\t\tlet i = 0;\n\t\tallHeaderFacets.forEach(function (item) {\n\t\t\t// hidden header facets are not included in allHeaderFacets array => add them anyway\n\t\t\twhile (headerfacetSubSections.length > i && headerfacetSubSections[i].visible === \"false\") {\n\t\t\t\tallHeaderFacetsSubSections.push(headerfacetSubSections[i]);\n\t\t\t\ti++;\n\t\t\t}\n\t\t\tif (\n\t\t\t\theaderfacetSubSections.length > i &&\n\t\t\t\t(item.key === headerfacetSubSections[i].key ||\n\t\t\t\t\t// for header facets with no id the keys of header facet and subsection are different => check only the last part\n\t\t\t\t\titem.key.slice(item.key.lastIndexOf(\"::\") + 2) ===\n\t\t\t\t\t\theaderfacetSubSections[i].key.slice(headerfacetSubSections[i].key.lastIndexOf(\"::\") + 2))\n\t\t\t) {\n\t\t\t\tallHeaderFacetsSubSections.push(headerfacetSubSections[i]);\n\t\t\t\ti++;\n\t\t\t} else {\n\t\t\t\tcustomHeaderFacetSubSections.forEach(function (customItem) {\n\t\t\t\t\tif (item.key === customItem.key) {\n\t\t\t\t\t\tallHeaderFacetsSubSections.push(customItem);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t} else {\n\t\tallHeaderFacetsSubSections = headerfacetSubSections;\n\t}\n\tconst headerSection: ObjectPageSection = {\n\t\tid: editableHeaderSectionID,\n\t\tkey: \"EditableHeaderContent\",\n\t\ttitle: \"{sap.fe.i18n>T_COMMON_OBJECT_PAGE_HEADER_SECTION}\",\n\t\tvisible: compileExpression(UI.IsEditable),\n\t\tsubSections: allHeaderFacetsSubSections\n\t};\n\treturn headerSection;\n}\n\n/**\n * Creates a definition for a section based on the Facet annotation.\n * @param converterContext The converter context\n * @returns All sections\n */\nfunction getSectionsFromAnnotation(converterContext: ConverterContext<PageContextPathTarget>): ObjectPageSection[] {\n\tconst entityType = converterContext.getEntityType();\n\tconst objectPageSections: ObjectPageSection[] =\n\t\tentityType.annotations?.UI?.Facets?.map((facetDefinition: FacetTypes) =>\n\t\t\tgetSectionFromAnnotation(facetDefinition, converterContext)\n\t\t) || [];\n\treturn objectPageSections;\n}\n\n/**\n * Check manifest for setting 'useSingleTextAreaFieldAsNotes'.\n * If this setting is true, then the label of the single text-area field in a form container will be hidden.\n * @param manifestWrapper\n * @param sectionKey\n * @returns If the form element's label needs to be hidden.\n */\nfunction getUseSingleTextAreaFieldAsNotes(manifestWrapper: ManifestWrapper, sectionKey: string): boolean {\n\tconst sectionsInManifest = manifestWrapper.getSections();\n\tconst sectionSettings = sectionsInManifest?.[sectionKey];\n\treturn sectionSettings?.useSingleTextAreaFieldAsNotes ?? false;\n}\n\n/**\n * Create an annotation based section.\n * @param facet\n * @param converterContext\n * @returns The current section\n */\nfunction getSectionFromAnnotation(facet: FacetTypes, converterContext: ConverterContext<PageContextPathTarget>): ObjectPageSection {\n\tconst sectionID = getSectionID(facet);\n\tconst sectionKey = getSectionKey(facet, sectionID);\n\t// Set absolute binding path for Singleton references, otherwise the configured annotation path itself.\n\tconst hiddenExpression = getExpressionFromAnnotation(facet.annotations?.UI?.Hidden, [], false, (path: string) =>\n\t\tsingletonPathVisitor(path, converterContext.getConvertedTypes(), [])\n\t);\n\tconst useSingleTextAreaFieldAsNotes = getUseSingleTextAreaFieldAsNotes(converterContext.getManifestWrapper(), sectionKey);\n\tconst section: ObjectPageSection = {\n\t\tid: sectionID,\n\t\tkey: sectionKey,\n\t\ttitle: facet.Label ? compileExpression(getExpressionFromAnnotation(facet.Label)) : undefined,\n\t\tshowTitle: !!facet.Label,\n\t\tvisible: compileExpression(not(equal(hiddenExpression, true))),\n\t\tsubSections: createSubSections([facet], converterContext, undefined, useSingleTextAreaFieldAsNotes),\n\t\tuseSingleTextAreaFieldAsNotes: useSingleTextAreaFieldAsNotes\n\t};\n\treturn section;\n}\n\n/**\n * Creates section definitions based on the manifest definitions.\n * @param manifestSections The sections defined in the manifest\n * @param converterContext\n * @returns The sections defined in the manifest\n */\nfunction getSectionsFromManifest(\n\tmanifestSections: ConfigurableRecord<ManifestSection>,\n\tconverterContext: ConverterContext<PageContextPathTarget>\n): Record<string, CustomObjectPageSection> {\n\tconst sections: Record<string, CustomObjectPageSection> = {};\n\tObject.keys(manifestSections).forEach((manifestSectionKey) => {\n\t\tsections[manifestSectionKey] = getSectionFromManifest(manifestSections[manifestSectionKey], manifestSectionKey, converterContext);\n\t});\n\treturn sections;\n}\n\n/**\n * Create a manifest-based custom section.\n * @param customSectionDefinition\n * @param sectionKey\n * @param converterContext\n * @returns The current custom section\n */\nfunction getSectionFromManifest(\n\tcustomSectionDefinition: ManifestSection,\n\tsectionKey: string,\n\tconverterContext: ConverterContext<PageContextPathTarget>\n): CustomObjectPageSection {\n\tconst customSectionID = customSectionDefinition.id || getCustomSectionID(sectionKey);\n\tlet position: Position | undefined = customSectionDefinition.position;\n\tif (!position) {\n\t\tposition = {\n\t\t\tplacement: Placement.After\n\t\t};\n\t}\n\tlet manifestSubSections: Record<string, ManifestSubSection>;\n\tif (!customSectionDefinition.subSections) {\n\t\t// If there is no subSection defined, we add the content of the custom section as subsections\n\t\t// and make sure to set the visibility to 'true', as the actual visibility is handled by the section itself\n\t\tmanifestSubSections = {\n\t\t\t[sectionKey]: {\n\t\t\t\t...customSectionDefinition,\n\t\t\t\tposition: undefined,\n\t\t\t\tvisible: \"true\",\n\t\t\t\tapplyState: undefined,\n\t\t\t\tretrieveState: undefined\n\t\t\t}\n\t\t};\n\t} else {\n\t\tmanifestSubSections = customSectionDefinition.subSections;\n\t}\n\tconst subSections = createCustomSubSections(manifestSubSections, converterContext);\n\n\tconst customSection: CustomObjectPageSection = {\n\t\tid: customSectionID,\n\t\tkey: sectionKey,\n\t\ttitle: customSectionDefinition.title,\n\t\tshowTitle: !!customSectionDefinition.title,\n\t\tvisible: customSectionDefinition.visible !== undefined ? customSectionDefinition.visible : \"true\",\n\t\tposition: position,\n\t\tsubSections: subSections,\n\t\tonSectionLoaded: customSectionDefinition.onSectionLoaded,\n\t\tapplyState: customSectionDefinition.applyState,\n\t\tretrieveState: customSectionDefinition.retrieveState\n\t};\n\treturn customSection;\n}\n\n/**\n * Retrieves the ObjectPage header actions (both the default ones and the custom ones defined in the manifest).\n * @param converterContext The converter context\n * @param capabilities\n * @returns An array containing all the actions for this ObjectPage header\n */\nexport const getHeaderActions = function (\n\tconverterContext: ConverterContext<PageContextPathTarget>,\n\tcapabilities?: EnvironmentCapabilities\n): CombinedAction {\n\t// 1. Get actions from annotations\n\tconst annotationHeaderActions: BaseAction[] = getHeaderDefaultActions(converterContext, capabilities);\n\tconst manifestWrapper = converterContext.getManifestWrapper();\n\tconst actionOverwriteConfig: OverrideTypeAction = {\n\t\tisNavigable: OverrideType.overwrite,\n\t\tenabled: OverrideType.overwrite,\n\t\tvisible: OverrideType.overwrite,\n\t\tdefaultValuesExtensionFunction: OverrideType.overwrite,\n\t\tcommand: OverrideType.overwrite,\n\t\tposition: OverrideType.overwrite,\n\t\tmenu: OverrideType.overwrite,\n\t\tpriority: OverrideType.overwrite,\n\t\tgroup: OverrideType.overwrite\n\t};\n\t// 2. Get actions from manifest\n\tconst manifestActions = getActionsFromManifest(\n\t\tmanifestWrapper.getHeaderActions(),\n\t\tconverterContext,\n\t\tannotationHeaderActions,\n\t\tundefined,\n\t\tundefined,\n\t\tgetHiddenHeaderActions(converterContext)\n\t);\n\t// 3. Get all annotation menu items\n\tconst annotationMenuActionItems = getAnnotationMenuActionItems(annotationHeaderActions);\n\t// 4. Find manifest actions which override any annotation menu items\n\tconst matchingManifestActions = getMatchingManifestAction(annotationMenuActionItems, manifestActions.actions);\n\t// 5. Get overridden annotation menu items\n\tconst overwrittenMenuActionItems = insertCustomElements(annotationMenuActionItems, matchingManifestActions, actionOverwriteConfig);\n\t// 6. Override all actions\n\tlet headerActions = insertCustomElements(annotationHeaderActions, manifestActions.actions, actionOverwriteConfig) as CustomAction[];\n\t// 7. Replace original menu items with their corresponding overridden menu items\n\tprepareMenuActions(headerActions, overwrittenMenuActionItems);\n\t// 8. Remove duplicate actions which are menu items\n\theaderActions = removeDuplicateActions(headerActions);\n\t// 9. Hide menus where all menu items are hidden\n\theaderActions = getVisibilityEnablementMenuActions(headerActions);\n\t// 10. Apply primary action overflow protection\n\theaderActions = ActionUtilities.ensurePrimaryActionNeverOverflows(headerActions) as CustomAction[];\n\treturn {\n\t\tactions: headerActions,\n\t\tcommandActions: manifestActions.commandActions\n\t};\n};\n\n/**\n * Retrieves the ObjectPage footer actions (both the default ones and the custom ones defined in the manifest).\n * @param converterContext The converter context\n * @param capabilities The predefined environment capabilities\n * @returns An array containing all the actions for this ObjectPage footer\n */\nexport const getFooterActions = function (\n\tconverterContext: ConverterContext<PageContextPathTarget>,\n\tcapabilities?: EnvironmentCapabilities\n): CombinedAction {\n\tconst manifestWrapper = converterContext.getManifestWrapper();\n\tconst aAnnotationFooterActions: BaseAction[] = getFooterDefaultActions(manifestWrapper.getViewLevel(), converterContext, capabilities);\n\tconst manifestActions = getActionsFromManifest(manifestWrapper.getFooterActions(), converterContext, aAnnotationFooterActions);\n\n\tconst actionOverwriteConfig: OverrideTypeAction = {\n\t\tisNavigable: OverrideType.overwrite,\n\t\tenabled: OverrideType.overwrite,\n\t\tvisible: OverrideType.overwrite,\n\t\tdefaultValuesExtensionFunction: OverrideType.overwrite,\n\t\tcommand: OverrideType.overwrite,\n\t\tposition: OverrideType.overwrite,\n\t\tpriority: OverrideType.overwrite,\n\t\tgroup: OverrideType.overwrite\n\t};\n\tconst footerActions = insertCustomElements(aAnnotationFooterActions, manifestActions.actions, actionOverwriteConfig);\n\t// Apply primary action overflow protection\n\tconst protectedFooterActions = ActionUtilities.ensurePrimaryActionNeverOverflows(footerActions);\n\treturn {\n\t\tactions: protectedFooterActions,\n\t\tcommandActions: manifestActions.commandActions\n\t};\n};\n\nfunction _getSubSectionVisualization(subSection: DataVisualizationSubSection): TableVisualization {\n\treturn (subSection?.presentation?.visualizations[0] ? subSection.presentation.visualizations[0] : undefined) as TableVisualization;\n}\n\nfunction _isFacetHasNonResponsiveTableVisible(\n\tdataVisualizationSubSection: DataVisualizationSubSection,\n\tsubSectionVisualization: TableVisualization\n): boolean {\n\treturn (\n\t\tdataVisualizationSubSection.visible === \"true\" &&\n\t\tdataVisualizationSubSection?.presentation?.visualizations &&\n\t\tsubSectionVisualization?.type === \"Table\" &&\n\t\tsubSectionVisualization?.control?.type !== \"ResponsiveTable\"\n\t);\n}\n\nfunction _setNonResponsiveTableVisualizationInformation(\n\tsections: ObjectPageSection[],\n\tdataVisualizationSubSection: DataVisualizationSubSection,\n\tsubSectionVisualization: TableVisualization,\n\tsectionLayout: string\n): void {\n\tif (_isFacetHasNonResponsiveTableVisible(dataVisualizationSubSection, subSectionVisualization)) {\n\t\tconst tableControlConfiguration = subSectionVisualization.control;\n\t\tdataVisualizationSubSection.dataVisualizationOptions ??= {};\n\t\tif (!(sectionLayout === \"Page\" && sections.length > 1)) {\n\t\t\tdataVisualizationSubSection.dataVisualizationOptions[\"rowCountMode\"] = \"Auto\";\n\t\t\ttableControlConfiguration.rowCountMode = \"Auto\";\n\t\t}\n\t\tif (sectionLayout !== \"Tabs\") {\n\t\t\tdataVisualizationSubSection.dataVisualizationOptions[\"useCondensedTableLayout\"] = false;\n\t\t\ttableControlConfiguration.useCondensedTableLayout = false;\n\t\t}\n\t}\n}\n\nfunction _setNonResponsiveTableWithMixFacetsInformation(subSection: MixedSubSection, sectionLayout: string): void {\n\tconst firstSection = subSection?.content?.length === 1 ? subSection.content[0] : undefined;\n\tif (firstSection?.type === SubSectionType.DataVisualization) {\n\t\tconst tableControl = (firstSection.presentation?.visualizations[0] as TableVisualization).control;\n\t\tif (tableControl.type !== \"ResponsiveTable\") {\n\t\t\tfirstSection.dataVisualizationOptions ??= {};\n\t\t\tfirstSection.dataVisualizationOptions[\"rowCountMode\"] = \"Auto\";\n\t\t\ttableControl.rowCountMode = \"Auto\";\n\t\t\tif (sectionLayout !== \"Tabs\") {\n\t\t\t\tfirstSection.dataVisualizationOptions[\"useCondensedTableLayout\"] = false;\n\t\t\t\ttableControl.useCondensedTableLayout = false;\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Set the NonResponsive Table (grid, tree, analytical) display information.\n * @param sections The ObjectPage sections\n * @param section The current ObjectPage section processed\n * @param sectionLayout\n */\nfunction _setNonResponsiveTableSubSectionControlConfiguration(\n\tsections: ObjectPageSection[],\n\tsection: ObjectPageSection,\n\tsectionLayout: string\n): void {\n\tlet subSectionVisualization: TableVisualization;\n\tconst subSections = section.subSections;\n\tif (subSections.length === 1) {\n\t\tconst subSection = subSections[0];\n\t\tswitch (subSection.type) {\n\t\t\tcase \"DataVisualization\":\n\t\t\t\tsubSectionVisualization = _getSubSectionVisualization(subSection);\n\t\t\t\t_setNonResponsiveTableVisualizationInformation(sections, subSection, subSectionVisualization, sectionLayout);\n\t\t\t\tbreak;\n\t\t\tcase \"Mixed\":\n\t\t\t\t_setNonResponsiveTableWithMixFacetsInformation(subSection, sectionLayout);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t\treturn;\n\t}\n\t_removeCondensedFromSubSections(subSections);\n}\n\n/**\n * Remove the condense layout mode from the subsections.\n * @param subSections The subSections where we need to remove the condensed layout\n */\nfunction _removeCondensedFromSubSections(subSections: ObjectPageSubSection[]): void {\n\tlet dataVisualizationSubSection: DataVisualizationSubSection;\n\t// We check in each subsection if there is visualizations\n\tsubSections.forEach((subSection) => {\n\t\tdataVisualizationSubSection = subSection as DataVisualizationSubSection;\n\t\tif (dataVisualizationSubSection?.presentation?.visualizations) {\n\t\t\tdataVisualizationSubSection?.presentation?.visualizations.forEach((singleVisualization) => {\n\t\t\t\tif (singleVisualization.type === VisualizationType.Table) {\n\t\t\t\t\tsingleVisualization.control.useCondensedTableLayout = false;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\t// Then we check the content of the subsection, and in each content we check if there is a table to set its condensed layout to false\n\t\tif (dataVisualizationSubSection?.content) {\n\t\t\tdataVisualizationSubSection.content.forEach((singleContent) => {\n\t\t\t\t(singleContent as DataVisualizationSubSection).presentation?.visualizations.forEach((singleVisualization) => {\n\t\t\t\t\tif (singleVisualization.type === VisualizationType.Table) {\n\t\t\t\t\t\tsingleVisualization.control.useCondensedTableLayout = false;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t});\n}\n/**\n * Retrieves and merges the ObjectPage sections defined in the annotation and in the manifest.\n * @param converterContext The converter context\n * @returns An array of sections.\n */\n\nexport const getSections = function (converterContext: ConverterContext<PageContextPathTarget>): ObjectPageSection[] {\n\tconst manifestWrapper = converterContext.getManifestWrapper();\n\tconst sections = insertCustomElements(\n\t\tgetSectionsFromAnnotation(converterContext),\n\t\tgetSectionsFromManifest(manifestWrapper.getSections(), converterContext),\n\t\t{\n\t\t\ttitle: OverrideType.overwrite,\n\t\t\tvisible: OverrideType.overwrite,\n\t\t\tsubSections: {\n\t\t\t\tactions: OverrideType.merge,\n\t\t\t\ttitle: OverrideType.overwrite,\n\t\t\t\tsideContent: OverrideType.overwrite,\n\t\t\t\tobjectPageLazyLoaderEnabled: OverrideType.overwrite\n\t\t\t}\n\t\t}\n\t);\n\t// Level Adjustment for \"Mixed\" Collection Facets:\n\t// ==============================================\n\t// The manifest definition of custom side contents and actions still needs to be aligned for \"Mixed\" collection facets:\n\t// Collection facets containing tables gain an extra reference facet as a table wrapper to ensure, that the table is always\n\t// placed in an own individual Object Page Block; this additional hierarchy level is unknown to app developers, which are\n\t// defining the side content and actions in the manifest at collection facet level; now, since the sideContent always needs\n\t// to be assigned to a block, and actions always need to be assigned to a form,\n\t// we need to move the sideContent and actions from a mixed collection facet to its content.\n\t// ==============================================\n\tsections.forEach(function (section) {\n\t\t_setNonResponsiveTableSubSectionControlConfiguration(sections, section, manifestWrapper.getSectionLayout());\n\t\tsection.subSections?.forEach(function (subSection) {\n\t\t\tsubSection.title = subSection.title === \"undefined\" ? undefined : subSection.title;\n\t\t\tif (subSection.type === \"Mixed\") {\n\t\t\t\tsubSection.content?.forEach((content) => {\n\t\t\t\t\tcontent.objectPageLazyLoaderEnabled = subSection.objectPageLazyLoaderEnabled;\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (subSection.type === \"Mixed\" && subSection.content?.length) {\n\t\t\t\tconst firstForm = subSection.content.find(\n\t\t\t\t\t(element) => (element as FormSubSection).type === SubSectionType.Form\n\t\t\t\t) as FormSubSection;\n\n\t\t\t\t// 1. Copy sideContent to the SubSection's first form; or -- if unavailable -- to its first content\n\t\t\t\t// 2. Copy actions to the first form of the SubSection's content\n\t\t\t\t// 3. Delete sideContent / actions at the (invalid) manifest level\n\n\t\t\t\tif (subSection.sideContent) {\n\t\t\t\t\tif (firstForm) {\n\t\t\t\t\t\t// If there is a form, it always needs to be attached to the form, as the form inherits the ID of the SubSection\n\t\t\t\t\t\tfirstForm.sideContent = subSection.sideContent;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsubSection.content[0].sideContent = subSection.sideContent;\n\t\t\t\t\t}\n\t\t\t\t\tsubSection.sideContent = undefined;\n\t\t\t\t}\n\n\t\t\t\tif (firstForm && (subSection as unknown as FormSubSection).actions?.length) {\n\t\t\t\t\tfirstForm.actions = (subSection as unknown as FormSubSection).actions;\n\t\t\t\t\t(subSection as unknown as FormSubSection).actions = [];\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t});\n\treturn sections;\n};\n\n/**\n * Determines if the ObjectPage has header content.\n * @param converterContext The instance of the converter context\n * @returns `true` if there is at least on header facet\n */\nfunction hasHeaderContent(converterContext: ConverterContext<PageContextPathTarget>): boolean {\n\tconst manifestWrapper = converterContext.getManifestWrapper();\n\treturn (\n\t\t(converterContext.getEntityType().annotations?.UI?.HeaderFacets || []).length > 0 ||\n\t\tObject.keys(manifestWrapper.getHeaderFacets()).length > 0\n\t);\n}\n\n/**\n * Gets the expression to evaluate the visibility of the header content.\n * @param converterContext The instance of the converter context\n * @returns The binding expression for the Delete button\n */\nfunction getShowHeaderContentExpression(converterContext: ConverterContext<PageContextPathTarget>): BindingToolkitExpression<boolean> {\n\tconst manifestWrapper = converterContext.getManifestWrapper();\n\treturn ifElse(\n\t\t!hasHeaderContent(converterContext),\n\t\tconstant(false),\n\t\tifElse(equal(manifestWrapper.isHeaderEditable(), false), constant(true), not(UI.IsEditable))\n\t);\n}\n\n/**\n * Gets the binding expression to evaluate the visibility of the header content.\n * @param converterContext The instance of the converter context\n * @returns The binding expression for the Delete button\n */\nexport const getShowHeaderContent = function (converterContext: ConverterContext<PageContextPathTarget>): CompiledBindingToolkitExpression {\n\treturn compileExpression(getShowHeaderContentExpression(converterContext));\n};\n\n/**\n * Gets the binding expression to evaluate the visibility of the EasyFill button.\n * @param converterContext\n * @returns The binding expression for the EasyFill button\n */\nexport const getEasyFillVisible = function (converterContext: ConverterContext<PageContextPathTarget>): CompiledBindingToolkitExpression {\n\tconst entitySet = converterContext?.getEntitySet(),\n\t\tentityType = converterContext.getEntityType(),\n\t\tisUpdateHidden = getExpressionFromAnnotation(ModelHelper.isUpdateHidden(entitySet, entityType));\n\tconst rootEntitySetPath = ModelHelper.getRootEntitySetPath(converterContext.getContextPath());\n\tconst rootConverterContext = converterContext.getConverterContextFor<PageContextPathTarget>(\"/\" + rootEntitySetPath);\n\tconst isRootUpdateHidden = getExpressionFromAnnotation(\n\t\tModelHelper.isUpdateHidden(rootConverterContext.getEntitySet(), rootConverterContext.getEntityType())\n\t);\n\tconst isDraftEnabled = ModelHelper.isObjectPathDraftSupported(converterContext.getDataModelObjectPath());\n\tconst isSticky = ModelHelper.isSticky(converterContext.getDataModelObjectPath().startingEntitySet);\n\t// EasyFill is only available if the object path is draft enabled and sticky\n\tif (!isDraftEnabled && !isSticky) {\n\t\treturn compileExpression(false);\n\t}\n\tconst viewLevel = converterContext.getManifestWrapper().getViewLevel();\n\tconst updatablePropertyPath = viewLevel > 1 ? entitySet?.annotations.Capabilities?.UpdateRestrictions?.Updatable : undefined;\n\tconst isEditEnabled = getEditButtonEnabledExpression(converterContext, updatablePropertyPath, viewLevel);\n\treturn compileExpression(\n\t\tifElse(\n\t\t\tviewLevel > 1,\n\t\t\tand(not(isUpdateHidden), UI.IsEditable, isEditEnabled),\n\t\t\tand(not(isUpdateHidden), not(isRootUpdateHidden), isEditEnabled)\n\t\t)\n\t);\n};\n\n/**\n * Gets the binding expression to evaluate the visibility of the avatar when the header is in expanded state.\n * @param converterContext The instance of the converter context\n * @returns The binding expression for the Delete button\n */\nexport const getExpandedImageVisible = function (\n\tconverterContext: ConverterContext<PageContextPathTarget>\n): CompiledBindingToolkitExpression {\n\treturn compileExpression(not(getShowHeaderContentExpression(converterContext)));\n};\n\nexport const convertPage = function (\n\tconverterContext: ConverterContext<PageContextPathTarget>,\n\tcapabilities?: EnvironmentCapabilities\n): ObjectPageDefinition {\n\tconst manifestWrapper = converterContext.getManifestWrapper();\n\tlet headerSection: ObjectPageSection | undefined;\n\tconst entityType: EntityType = converterContext.getEntityType();\n\n\t// Retrieve all header facets (from annotations & custom)\n\tconst headerFacets = insertCustomElements(\n\t\tgetHeaderFacetsFromAnnotations(converterContext),\n\t\tgetHeaderFacetsFromManifest(manifestWrapper.getHeaderFacets())\n\t);\n\n\t// Retrieve the page header actions\n\tconst headerActions = getHeaderActions(converterContext, capabilities);\n\n\t// Retrieve the page footer actions\n\tconst footerActions = getFooterActions(converterContext, capabilities);\n\n\tif (manifestWrapper.isHeaderEditable() && (entityType.annotations.UI?.HeaderFacets || entityType.annotations.UI?.HeaderInfo)) {\n\t\theaderSection = createEditableHeaderSection(converterContext, headerFacets);\n\t}\n\n\tconst sections = getSections(converterContext);\n\n\treturn {\n\t\ttemplate: TemplateType.ObjectPage,\n\t\theader: {\n\t\t\tvisible: manifestWrapper.getShowObjectPageHeader(),\n\t\t\tsection: headerSection,\n\t\t\tfacets: headerFacets,\n\t\t\tactions: headerActions.actions,\n\t\t\teasyFillVisible: getEasyFillVisible(converterContext),\n\t\t\tshowContent: getShowHeaderContent(converterContext),\n\t\t\thasContent: hasHeaderContent(converterContext),\n\t\t\tavatar: getAvatar(converterContext),\n\t\t\ttitle: {\n\t\t\t\texpandedImageVisible: getExpandedImageVisible(converterContext)\n\t\t\t}\n\t\t},\n\t\tsections: sections,\n\t\tfooterActions: footerActions.actions,\n\t\theaderCommandActions: headerActions.commandActions,\n\t\tfooterCommandActions: footerActions.commandActions,\n\t\tshowAnchorBar: manifestWrapper.getShowAnchorBar(),\n\t\tuseIconTabBar: manifestWrapper.useIconTabBar(),\n\t\ttransportSelection: manifestWrapper.getTransportSelection()\n\t};\n};\n"],"mappings":"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","ignoreList":[],"file":"ObjectPageConverter-dbg.js"}