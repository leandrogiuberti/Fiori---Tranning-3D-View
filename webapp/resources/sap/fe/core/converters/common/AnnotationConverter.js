/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2024 SAP SE. All rights reserved
 */
sap.ui.define([],function(){var a;(function(){"use strict";var e={603:function(a,e,t){Object.defineProperty(e,"__esModule",{value:true});e.convert=void 0;const o=t(42);const r=t(854);const i=Symbol("Annotation Target");function n(a,e){if(a[a.length-1]!==e){a.push(e)}return a}function s(a,e,t,o){var c,l,u,p,m;if(t===undefined){return{target:undefined,objectPath:[],messages:[]}}if(t.startsWith("/")){t=t.substring(1);e=undefined}const v=t.split("/").reduce((a,e)=>{if(e.includes("@")){const[t,o]=(0,r.splitAtFirst)(e,"@");a.push(t);a.push(`@${o}`)}else{a.push(e)}return a},[]);if(e===undefined){if(v[0].startsWith(`${a.rawSchema.namespace}.`)&&v[0]!==((c=a.getConvertedEntityContainer())===null||c===void 0?void 0:c.fullyQualifiedName)){e=(p=(u=(l=a.getConvertedEntityType(v[0]))!==null&&l!==void 0?l:a.getConvertedComplexType(v[0]))!==null&&u!==void 0?u:a.getConvertedAction(v[0]))!==null&&p!==void 0?p:a.getConvertedAction(`${v[0]}()`);v.shift()}else{e=a.getConvertedEntityContainer()}}else if(e[i]!==undefined){e=e[i]}else if(e._type==="Property"){const t=(0,r.substringBeforeFirst)(e.fullyQualifiedName,"/");e=(m=a.getConvertedEntityType(t))!==null&&m!==void 0?m:a.getConvertedComplexType(t)}const y=v.reduce((e,t)=>{var o,c,l,u,p;const m=a=>{e.messages.push({message:a});e.target=undefined;return e};if(e.target===undefined){return e}e.objectPath=n(e.objectPath,e.target);if(t.startsWith("@")&&t!=="@$ui5.overload"){const[r,i]=a.splitTerm(t);const n=(o=e.target.annotations[r.substring(1)])===null||o===void 0?void 0:o[i];if(n!==undefined){e.target=n;return e}return m(`Annotation '${t.substring(1)}' not found on ${e.target._type} '${e.target.fullyQualifiedName}'`)}if(e.target.$target){let o;if(t==="$AnnotationPath"){o=e.target.value}else if(t==="$Path"){o=e.target.path}if(o!==undefined){const t=s(a,e.target[i],o);t.objectPath.forEach(a=>{if(!e.objectPath.includes(a)){e.objectPath=n(e.objectPath,a)}});e.target=t.target;e.objectPath=n(e.objectPath,e.target);return e}}switch((c=e.target)===null||c===void 0?void 0:c._type){case"Schema":break;case"EntityContainer":{const o=e.target;if(t===""||a.unalias(t)===o.fullyQualifiedName){return e}const r=(u=(l=o.entitySets.by_name(t))!==null&&l!==void 0?l:o.singletons.by_name(t))!==null&&u!==void 0?u:o.actionImports.by_name(t);if(r){e.target=r;return e}}break;case"EntitySet":case"Singleton":{const o=e.target;if(t===""||t==="$Type"){e.target=o.entityType;return e}if(t==="$"){return e}if(t==="$NavigationPropertyBinding"){const a=o.navigationPropertyBinding;e.target=a;return e}const r=s(a,o.entityType,t);e.target=r.target;e.objectPath=r.objectPath.reduce(n,e.objectPath);return e}case"EntityType":{const o=e.target;if(t===""||t==="$Type"){return e}const i=o.entityProperties.by_name(t);if(i){e.target=i;return e}const n=o.navigationProperties.by_name(t);if(n){e.target=n;return e}const s=(0,r.substringBeforeFirst)(a.unalias(t),"(");const c=o.actions[s];if(c){e.target=c;return e}}break;case"ActionImport":{const o=s(a,e.target.action,t);e.target=o.target;e.objectPath=o.objectPath.reduce(n,e.objectPath);return e}case"Action":{const a=e.target;if(t===""){return e}if(t==="@$ui5.overload"||t==="0"){return e}if(t==="$Parameter"&&a.isBound){e.target=a.parameters;return e}const o=(p=a.parameters[t])!==null&&p!==void 0?p:a.parameters.find(a=>a.name===t);if(o){e.target=o;return e}break}case"Property":{const a=e.target;const o=a.targetType;if(o!==undefined){const a=o.properties.by_name(t);if(a){e.target=a;return e}const r=o.navigationProperties.by_name(t);if(r){e.target=r;return e}}}break;case"ActionParameter":const o=e.target.typeReference;if(o!==undefined){const r=s(a,o,t);e.target=r.target;e.objectPath=r.objectPath.reduce(n,e.objectPath);return e}break;case"NavigationProperty":const i=s(a,e.target.targetType,t);e.target=i.target;e.objectPath=i.objectPath.reduce(n,e.objectPath);return e;default:if(t===""){return e}if(e.target[t]){e.target=e.target[t];e.objectPath=n(e.objectPath,e.target);return e}}return m(`Element '${t}' not found at ${e.target._type} '${e.target.fullyQualifiedName}'`)},{target:e,objectPath:[],messages:[]});y.messages.forEach(e=>a.logError(e.message));if(!y.target){if(o){const r=g(a,o,e.fullyQualifiedName);a.logError("Unable to resolve the path expression: "+"\n"+t+"\n"+"\n"+"Hint: Check and correct the path values under the following structure in the metadata (annotation.xml file or CDS annotations for the application): \n\n"+"<Annotation Term = "+o+">"+"\n"+"<Record Type = "+r+">"+"\n"+"<AnnotationPath = "+t+">")}else{a.logError("Unable to resolve the path expression: "+t+"\n"+"\n"+"Hint: Check and correct the path values under the following structure in the metadata (annotation.xml file or CDS annotations for the application): \n\n"+"<Annotation Term = "+v[0]+">"+"\n"+"<PropertyValue  Path= "+v[1]+">")}}return y}function c(a){return a.includes("@")}function l(a,e,t,o,n){const c={type:"PropertyPath",value:e.PropertyPath,fullyQualifiedName:t,[i]:o};(0,r.lazy)(c,"$target",()=>s(a,o,e.PropertyPath,n).target);return c}function u(a,e,t,o,n){const c={type:"AnnotationPath",value:a.unalias(e.AnnotationPath),fullyQualifiedName:t,[i]:o};(0,r.lazy)(c,"$target",()=>s(a,o,c.value,n).target);return c}function p(a,e,t,o,n){var c;const l={type:"NavigationPropertyPath",value:(c=e.NavigationPropertyPath)!==null&&c!==void 0?c:"",fullyQualifiedName:t,[i]:o};(0,r.lazy)(l,"$target",()=>s(a,o,e.NavigationPropertyPath,n).target);return l}function m(a,e,t,o,n){const c={type:"Path",path:e.Path,fullyQualifiedName:t,getValue(){return undefined},[i]:o};(0,r.lazy)(c,"$target",()=>s(a,o,e.Path,n).target);return c}function v(a,e,t,i,n,v,g){if(v===undefined){return undefined}switch(v.type){case"String":return v.String;case"Int":return v.Int;case"Bool":return v.Bool;case"Decimal":return(0,r.Decimal)(v.Decimal);case"Date":return v.Date;case"EnumMember":const y=v.EnumMember.split(" ").map(e=>{var t;const i=(t=a.unalias(e))!==null&&t!==void 0?t:"";return(0,r.alias)(o.VocabularyReferences,i)});if(y[0]!==undefined&&r.EnumIsFlag[(0,r.substringBeforeFirst)(y[0],"/")]){return y}return y[0];case"PropertyPath":return l(a,v,g,e,t);case"NavigationPropertyPath":return p(a,v,g,e,t);case"AnnotationPath":return u(a,v,g,e,t);case"Path":{if(c(v.Path)){return s(a,e,v.Path,t).target}else{return m(a,v,g,e,t)}}case"Record":return d(a,t,e,i,n,v.Record,g);case"Collection":return C(a,e,t,i,n,v.Collection,g);case"Apply":case"Null":case"Not":case"Eq":case"Ne":case"Gt":case"Ge":case"Lt":case"Le":case"If":case"And":case"Or":default:return v}}function g(a,e,t,o){let i=r.TermToTypes[e];if(o){e=`${(0,r.substringBeforeLast)(e,".")}.${o}`;i=r.TermToTypes[e]}a.logError(`The type of the record used within the term ${e} was not defined and was inferred as ${i}.\nHint: If possible, try to maintain the Type property for each Record.\n<Annotations Target="${t}">\n\t<Annotation Term="${e}">\n\t\t<Record>...</Record>\n\t</Annotation>\n</Annotations>`);return i}function y(a){return a.hasOwnProperty("Action")&&(a.$Type==="com.sap.vocabularies.UI.v1.DataFieldForAction"||a.$Type==="com.sap.vocabularies.UI.v1.DataFieldWithAction")}function O(a,e,t,o,r){let i;if(!r.type&&e){i=g(a,e,t.fullyQualifiedName,o)}else{i=a.unalias(r.type)}return i}function d(a,e,t,o,n,s,c){const l={$Type:O(a,e,t,o,s),fullyQualifiedName:c,[i]:t,__source:n};for(const o of s.propertyValues){(0,r.lazy)(l,o.name,()=>v(a,t,e,o.name,n,o.value,`${c}/${o.name}`))}(0,r.lazy)(l,"annotations",I(a,s,l));if(y(l)){(0,r.lazy)(l,"ActionTarget",()=>{var e,o;const r=a.unalias((e=l.Action)===null||e===void 0?void 0:e.toString());let i=t.actions[r];if(!i){i=(o=a.getConvertedActionImport(r))===null||o===void 0?void 0:o.action}if(!i){i=a.getConvertedAction(r);if(!(i===null||i===void 0?void 0:i.isBound)){i=undefined}}if(!i){a.logError(`${l.fullyQualifiedName}: Unable to resolve '${l.Action}' ('${r}')`)}return i})}return l}function f(a){let e=a.type;if(e===undefined&&a.length>0){const t=a[0];if(t.hasOwnProperty("PropertyPath")){e="PropertyPath"}else if(t.hasOwnProperty("Path")){e="Path"}else if(t.hasOwnProperty("AnnotationPath")){e="AnnotationPath"}else if(t.hasOwnProperty("NavigationPropertyPath")){e="NavigationPropertyPath"}else if(typeof t==="object"&&(t.hasOwnProperty("type")||t.hasOwnProperty("propertyValues"))){e="Record"}else if(typeof t==="string"){e="String"}}else if(e===undefined){e="EmptyCollection"}return e}function C(a,e,t,o,r,i,n){const c=f(i);switch(c){case"PropertyPath":return i.map((o,r)=>l(a,o,`${n}/${r}`,e,t));case"Path":return i.map(o=>s(a,e,o.Path,t).target);case"AnnotationPath":return i.map((o,r)=>u(a,o,`${n}/${r}`,e,t));case"NavigationPropertyPath":return i.map((o,r)=>p(a,o,`${n}/${r}`,e,t));case"Record":return i.map((i,s)=>d(a,t,e,o,r,i,`${n}/${s}`));case"Apply":case"Null":case"If":case"Eq":case"Ne":case"Lt":case"Gt":case"Le":case"Ge":case"Not":case"And":case"Or":return i.map(a=>a);case"String":return i.map(a=>{if(typeof a==="string"||a===undefined){return a}else{return a.String}});default:if(i.length===0){return[]}throw new Error("Unsupported case")}}function b(a){return!!a.targetTypeName}function D(a,e,t){var n;let s;if(t.record){s=d(a,t.term,e,"",t.__source,t.record,t.fullyQualifiedName)}else if(t.collection===undefined){s=v(a,e,t.term,"",t.__source,(n=t.value)!==null&&n!==void 0?n:{type:"Bool",Bool:true},t.fullyQualifiedName)}else if(t.collection){s=C(a,e,t.term,"",t.__source,t.collection,t.fullyQualifiedName)}else{throw new Error("Unsupported case")}switch(typeof s){case"string":s=new String(s);break;case"boolean":s=new Boolean(s);break;case"number":s=new Number(s);break;default:break}s.fullyQualifiedName=t.fullyQualifiedName;s[i]=e;const[c,l]=a.splitTerm(t.term);s.term=a.unalias(`${c}.${l}`,o.VocabularyReferences);s.qualifier=t.qualifier;s.__source=t.__source;try{(0,r.lazy)(s,"annotations",I(a,t,s))}catch(a){}return s}class T{getAnnotations(a){var e;if(this.annotationsByTarget===undefined){const a=Object.keys(this.rawSchema.annotations).map(a=>({name:a,annotationList:this.rawSchema.annotations[a]}));this.annotationsByTarget=(0,r.mergeAnnotations)(this.rawMetadata.references,...a)}return(e=this.annotationsByTarget[a])!==null&&e!==void 0?e:[]}getConvertedEntityContainer(){return this.getConvertedElement(this.rawMetadata.schema.entityContainer.fullyQualifiedName,this.rawMetadata.schema.entityContainer,S)}getConvertedEntitySet(a){return this.convertedOutput.entitySets.by_fullyQualifiedName(a)}getConvertedSingleton(a){return this.convertedOutput.singletons.by_fullyQualifiedName(a)}getConvertedEntityType(a){return this.convertedOutput.entityTypes.by_fullyQualifiedName(a)}getConvertedComplexType(a){return this.convertedOutput.complexTypes.by_fullyQualifiedName(a)}getConvertedTypeDefinition(a){return this.convertedOutput.typeDefinitions.by_fullyQualifiedName(a)}getConvertedActionImport(a){let e=this.convertedOutput.actionImports.by_fullyQualifiedName(a);if(!e){e=this.convertedOutput.actionImports.by_name(a)}return e}getConvertedAction(a){return this.convertedOutput.actions.by_fullyQualifiedName(a)}convert(a,e){if(Array.isArray(a)){return()=>{const t=a.reduce((a,t)=>{const o=this.getConvertedElement(t.fullyQualifiedName,t,e);if(o){a.push(o)}return a},[]);(0,r.addGetByValue)(t,"name");(0,r.addGetByValue)(t,"fullyQualifiedName");return t}}else{return()=>this.getConvertedElement(a.fullyQualifiedName,a,e)}}constructor(a,e){this.convertedElements=new Map;this.rawMetadata=a;this.rawSchema=a.schema;this.convertedOutput=e}getConvertedElement(a,e,t){let o=this.convertedElements.get(a);if(o===undefined){const r=typeof e==="function"?e.apply(undefined,[a]):e;if(r!==undefined){o=t.apply(undefined,[this,r]);this.convertedElements.set(a,o)}}return o}logError(a){this.convertedOutput.diagnostics.push({message:a})}splitTerm(a){const e=(0,r.alias)(o.VocabularyReferences,a);return(0,r.splitAtLast)(e,".")}unalias(a,e=this.rawMetadata.references){var t;return(t=(0,r.unalias)(e,a,this.rawSchema.namespace))!==null&&t!==void 0?t:""}}function h(a,e){return()=>{let t=a.getConvertedEntityType(e);if(!t){a.logError(`EntityType '${e}' not found`);t={}}return t}}function V(a,e){return()=>Object.keys(e).reduce((t,o)=>{const i=e[o];(0,r.lazy)(t,o,()=>{var e;return(e=a.getConvertedEntitySet(i))!==null&&e!==void 0?e:a.getConvertedSingleton(i)});return t},{})}function P(a,e){const t=e.annotations;return()=>A(a,e,t!==null&&t!==void 0?t:a.getAnnotations(e.fullyQualifiedName))}function I(a,e,t){return()=>{const o=t.fullyQualifiedName;let r;if(e.annotations&&e.annotations.length>0){r=e.annotations}else{r=a.getAnnotations(o)}r===null||r===void 0?void 0:r.forEach(a=>{a.target=o;a.__source=t.__source;a[i]=t[i];a.fullyQualifiedName=`${o}@${a.term}`});return A(a,t,r!==null&&r!==void 0?r:[])}}function A(a,e,t){return t.reduce((t,o)=>{const[i,n]=a.splitTerm(o.term);const s=`${n}${o.qualifier?"#"+o.qualifier:""}`;if(t[i]===undefined){t[i]={}}if(!t[i].hasOwnProperty(s)){(0,r.lazy)(t[i],s,()=>a.getConvertedElement(o.fullyQualifiedName,o,(a,t)=>D(a,e,t)))}return t},{})}function S(a,e){const t=e;(0,r.lazy)(t,"annotations",P(a,e));(0,r.lazy)(t,"entitySets",a.convert(a.rawSchema.entitySets,U));(0,r.lazy)(t,"singletons",a.convert(a.rawSchema.singletons,E));(0,r.lazy)(t,"actionImports",a.convert(a.rawSchema.actionImports,M));return t}function E(a,e){const t=e;(0,r.lazy)(t,"entityType",h(a,e.entityTypeName));(0,r.lazy)(t,"annotations",P(a,t));const o=e.navigationPropertyBinding;(0,r.lazy)(t,"navigationPropertyBinding",V(a,o));return t}function U(a,e){const t=e;(0,r.lazy)(t,"entityType",h(a,e.entityTypeName));(0,r.lazy)(t,"annotations",P(a,t));const o=e.navigationPropertyBinding;(0,r.lazy)(t,"navigationPropertyBinding",V(a,o));return t}function N(a,e){const t=e;e.keys.forEach(a=>{a.isKey=true});(0,r.lazy)(t,"annotations",P(a,e));(0,r.lazy)(t,"keys",a.convert(e.keys,R));(0,r.lazy)(t,"entityProperties",a.convert(e.entityProperties,R));(0,r.lazy)(t,"navigationProperties",a.convert(e.navigationProperties,x));(0,r.lazy)(t,"actions",()=>a.rawSchema.actions.filter(a=>a.isBound&&(a.sourceType===e.fullyQualifiedName||a.sourceType===`Collection(${e.fullyQualifiedName})`)).reduce((e,t)=>{const o=`${a.rawSchema.namespace}.${t.name}`;e[o]=a.getConvertedAction(t.fullyQualifiedName);return e},{}));t.resolvePath=(t,o)=>{const r=s(a,e,t);if(o){return{target:r.target,visitedObjects:r.objectPath,messages:r.messages}}else{return r.target}};return t}function R(a,e){const t=e;(0,r.lazy)(t,"annotations",P(a,e));(0,r.lazy)(t,"targetType",()=>{var t;const o=e.type;const r=o.startsWith("Collection")?o.substring(11,o.length-1):o;return(t=a.getConvertedComplexType(r))!==null&&t!==void 0?t:a.getConvertedTypeDefinition(r)});return t}function x(a,e){var t,o,i;const n=e;n.referentialConstraint=(t=n.referentialConstraint)!==null&&t!==void 0?t:[];if(!b(e)){const t=(o=a.rawSchema.associations.find(a=>a.fullyQualifiedName===e.relationship))===null||o===void 0?void 0:o.associationEnd.find(a=>a.role===e.toRole);n.isCollection=(t===null||t===void 0?void 0:t.multiplicity)==="*";n.targetTypeName=(i=t===null||t===void 0?void 0:t.type)!==null&&i!==void 0?i:""}(0,r.lazy)(n,"targetType",h(a,e.targetTypeName));(0,r.lazy)(n,"annotations",P(a,e));return n}function M(a,e){const t=e;(0,r.lazy)(t,"annotations",P(a,e));(0,r.lazy)(t,"action",()=>{const t=a.rawSchema.actions.filter(a=>!a.isBound&&a.fullyQualifiedName.startsWith(e.actionName));if(t.length>1){a.logError(`Ambiguous reference in action import: ${e.fullyQualifiedName}`)}return a.getConvertedAction(t[0].fullyQualifiedName)});return t}function $(a,e){const t=e;if(t.sourceType){(0,r.lazy)(t,"sourceEntityType",h(a,e.sourceType))}if(t.returnType){(0,r.lazy)(t,"returnEntityType",h(a,e.returnType))}(0,r.lazy)(t,"parameters",a.convert(e.parameters,F));(0,r.lazy)(t,"annotations",()=>{const t=(0,r.substringBeforeFirst)(e.fullyQualifiedName,"(");const o=e.fullyQualifiedName;const i=a.getAnnotations(o);const n=a.getAnnotations(t);for(const a of n){if(!i.some(e=>e.term===a.term&&e.qualifier===a.qualifier)){i.push(a)}}return A(a,e,i)});return t}function F(a,e){const t=e;(0,r.lazy)(t,"typeReference",()=>{var t,o;return(o=(t=a.getConvertedEntityType(e.type))!==null&&t!==void 0?t:a.getConvertedComplexType(e.type))!==null&&o!==void 0?o:a.getConvertedTypeDefinition(e.type)});(0,r.lazy)(t,"annotations",()=>{const t=e.fullyQualifiedName.substring(0,e.fullyQualifiedName.indexOf("("))+e.fullyQualifiedName.substring(e.fullyQualifiedName.indexOf(")")+1);const o=e.fullyQualifiedName;const r=a.getAnnotations(o);const i=a.getAnnotations(t);for(const a of i){if(!r.some(e=>e.term===a.term&&e.qualifier===a.qualifier)){r.push(a)}}return A(a,e,r)});return t}function w(a,e){const t=e;(0,r.lazy)(t,"properties",a.convert(e.properties,R));(0,r.lazy)(t,"navigationProperties",a.convert(e.navigationProperties,x));(0,r.lazy)(t,"annotations",P(a,e));return t}function Q(a,e){const t=e;(0,r.lazy)(t,"annotations",P(a,e));return t}function L(a){const e={version:a.version,namespace:a.schema.namespace,annotations:a.schema.annotations,references:o.VocabularyReferences,diagnostics:[]};const t=new T(a,e);(0,r.lazy)(e,"entityContainer",t.convert(t.rawSchema.entityContainer,S));(0,r.lazy)(e,"entitySets",t.convert(t.rawSchema.entitySets,U));(0,r.lazy)(e,"singletons",t.convert(t.rawSchema.singletons,E));(0,r.lazy)(e,"entityTypes",t.convert(t.rawSchema.entityTypes,N));(0,r.lazy)(e,"actions",t.convert(t.rawSchema.actions,$));(0,r.lazy)(e,"complexTypes",t.convert(t.rawSchema.complexTypes,w));(0,r.lazy)(e,"actionImports",t.convert(t.rawSchema.actionImports,M));(0,r.lazy)(e,"typeDefinitions",t.convert(t.rawSchema.typeDefinitions,Q));e.resolvePath=function a(e){const o=s(t,undefined,e);if(o.target){n(o.objectPath,o.target)}return o};return e}e.convert=L},131:function(a,e,t){var o=this&&this.__createBinding||(Object.create?function(a,e,t,o){if(o===undefined)o=t;var r=Object.getOwnPropertyDescriptor(e,t);if(!r||("get"in r?!e.__esModule:r.writable||r.configurable)){r={enumerable:true,get:function(){return e[t]}}}Object.defineProperty(a,o,r)}:function(a,e,t,o){if(o===undefined)o=t;a[o]=e[t]});var r=this&&this.__exportStar||function(a,e){for(var t in a)if(t!=="default"&&!Object.prototype.hasOwnProperty.call(e,t))o(e,a,t)};Object.defineProperty(e,"__esModule",{value:true});r(t(603),e);r(t(854),e);r(t(815),e)},854:function(a,e,t){Object.defineProperty(e,"__esModule",{value:true});e.mergeAnnotations=e.addGetByValue=e.createIndexedFind=e.lazy=e.Decimal=e.isComplexTypeDefinition=e.unalias=e.alias=e.substringBeforeLast=e.substringBeforeFirst=e.splitAtLast=e.splitAtFirst=e.defaultReferences=e.TermToTypes=e.EnumIsFlag=void 0;var o=t(255);Object.defineProperty(e,"EnumIsFlag",{enumerable:true,get:function(){return o.EnumIsFlag}});var r=t(66);Object.defineProperty(e,"TermToTypes",{enumerable:true,get:function(){return r.TermToTypes}});var i=t(42);Object.defineProperty(e,"defaultReferences",{enumerable:true,get:function(){return i.VocabularyReferences}});function n(a,e){return e<0?[a,""]:[a.substring(0,e),a.substring(e+1)]}function s(a,e){return e<0?a:a.substring(0,e)}function c(a,e){return n(a,a.indexOf(e))}e.splitAtFirst=c;function l(a,e){return n(a,a.lastIndexOf(e))}e.splitAtLast=l;function u(a,e){return s(a,a.indexOf(e))}e.substringBeforeFirst=u;function p(a,e){return s(a,a.lastIndexOf(e))}e.substringBeforeLast=p;function m(a,e){if(!a.reverseReferenceMap){a.reverseReferenceMap=a.reduce((a,e)=>{a[e.namespace]=e;return a},{})}if(!e){return e}const[t,o]=l(e,".");const r=a.reverseReferenceMap[t];if(r){return`${r.alias}.${o}`}else if(e.includes("@")){const[t,o]=c(e,"@");return`${t}@${m(a,o)}`}else{return e}}e.alias=m;function v(a,e,t){var o;const r=e=>{if(!a.referenceMap){a.referenceMap=Object.fromEntries(a.map(a=>[a.alias,a]))}const[o,r]=c(e,".");if(!r||r.includes(".")){return e}const i=o.startsWith("@");const n=i?o.substring(1):o;const s=a.referenceMap[n];if(s){return i?`@${s.namespace}.${r}`:`${s.namespace}.${r}`}return t&&!i?`${t}.${r}`:e};return(o=e===null||e===void 0?void 0:e.split("/").reduce((a,e)=>{const[t,o]=c(e,"(");const i=[r(t)];if(o){const a=o.slice(0,-1);i.push(`(${r(a)})`)}a.push(i.join(""));return a},[]))===null||o===void 0?void 0:o.join("/")}e.unalias=v;function g(a){return!!a&&a._type==="ComplexType"&&!!a.properties}e.isComplexTypeDefinition=g;function y(a){return{isDecimal(){return true},valueOf(){return a},toString(){return a.toString()}}}e.Decimal=y;function O(a,e,t){const o=Symbol("initial");let r=o;Object.defineProperty(a,e,{enumerable:true,get(){if(r===o){r=t()}return r},set(a){r=a}})}e.lazy=O;function d(a,e){const t=new Map;return function o(r){const i=t.get(r);if((i===null||i===void 0?void 0:i[e])===r){return i}return a.find(a=>{if(!(a===null||a===void 0?void 0:a.hasOwnProperty(e))){return false}const o=a[e];t.set(o,a);return o===r})}}e.createIndexedFind=d;function f(a,e){const t=`by_${e}`;if(!a.hasOwnProperty(t)){Object.defineProperty(a,t,{writable:false,value:d(a,e)})}else{throw new Error(`Property '${t}' already exists`)}return a}e.addGetByValue=f;function C(a,...e){return e.reduceRight((e,{name:t,annotationList:o})=>{var r;for(const{target:i,annotations:n}of o){const o=(r=v(a,i))!==null&&r!==void 0?r:i;if(!e[o]){e[o]=[]}const s=n.map(e=>{var r;e.term=(r=v(a,e.term))!==null&&r!==void 0?r:e.term;e.fullyQualifiedName=e.qualifier?`${o}@${e.term}#${e.qualifier}`:`${o}@${e.term}`;e.__source=t;return e}).filter(a=>!e[o].some(e=>e.term===a.term&&e.qualifier===a.qualifier));e[o].push(...s)}return e},{})}e.mergeAnnotations=C},815:function(a,e,t){Object.defineProperty(e,"__esModule",{value:true});e.revertTermToGenericType=void 0;const o=t(854);function r(a,e){var t,o,r,i,n,s;let l;if(Array.isArray(e)){l={type:"Collection",Collection:e.map(e=>c(a,e))}}else if((t=e.isDecimal)===null||t===void 0?void 0:t.call(e)){l={type:"Decimal",Decimal:e.valueOf()}}else if((o=e.isString)===null||o===void 0?void 0:o.call(e)){const t=e.valueOf().split(".");if(t.length>1&&a.find(a=>a.alias===t[0])){l={type:"EnumMember",EnumMember:e.valueOf()}}else{l={type:"String",String:e.valueOf()}}}else if((r=e.isInt)===null||r===void 0?void 0:r.call(e)){l={type:"Int",Int:e.valueOf()}}else if((i=e.isFloat)===null||i===void 0?void 0:i.call(e)){l={type:"Float",Float:e.valueOf()}}else if((n=e.isDate)===null||n===void 0?void 0:n.call(e)){l={type:"Date",Date:e.valueOf()}}else if((s=e.isBoolean)===null||s===void 0?void 0:s.call(e)){l={type:"Bool",Bool:e.valueOf()}}else if(e.type==="Path"){l={type:"Path",Path:e.path}}else if(e.type==="AnnotationPath"){l={type:"AnnotationPath",AnnotationPath:e.value}}else if(e.type==="Apply"){l={type:"Apply",$Apply:e.$Apply,$Function:e.$Function}}else if(e.type==="Null"){l={type:"Null"}}else if(e.type==="PropertyPath"){l={type:"PropertyPath",PropertyPath:e.value}}else if(e.type==="NavigationPropertyPath"){l={type:"NavigationPropertyPath",NavigationPropertyPath:e.value}}else if(Object.prototype.hasOwnProperty.call(e,"$Type")){l={type:"Record",Record:c(a,e)}}return l}function i(a,e){let t;const o=e===null||e===void 0?void 0:e.constructor.name;switch(o){case"String":case"string":const o=e.toString().split(".");if(o.length>1&&a.find(a=>a.alias===o[0])){t={type:"EnumMember",EnumMember:e.toString()}}else{t={type:"String",String:e.toString()}}break;case"Boolean":case"boolean":t={type:"Bool",Bool:e.valueOf()};break;case"Number":case"number":if(e.toString()===e.toFixed()){t={type:"Int",Int:e.valueOf()}}else{t={type:"Decimal",Decimal:e.valueOf()}}break;case"object":default:t=r(a,e);break}return t}const n=["$Type","term","__source","qualifier","ActionTarget","fullyQualifiedName","annotations"];function s(a,e,t){Object.keys(e).filter(a=>a!=="_annotations").forEach(r=>{Object.keys(e[r]).forEach(i=>{const n=l(a,e[r][i]);if(!n.term){const e=(0,o.unalias)(a,`${r}.${i}`);if(e){const a=e.split("#");n.term=a[0];if(a.length>1){n.qualifier=a[1]}}}t.push(n)})})}function c(a,e){if(typeof e==="string"){return e}else if(typeof e==="object"){if(e.hasOwnProperty("$Type")){const t={type:e.$Type,propertyValues:[]};Object.keys(e).forEach(o=>{if(n.indexOf(o)===-1){const r=e[o];t.propertyValues.push({name:o,value:i(a,r)})}else if(o==="annotations"&&Object.keys(e[o]).length>0){t.annotations=[];s(a,e[o],t.annotations)}});return t}else if(e.type==="PropertyPath"){return{type:"PropertyPath",PropertyPath:e.value}}else if(e.type==="AnnotationPath"){return{type:"AnnotationPath",AnnotationPath:e.value}}else if(e.type==="NavigationPropertyPath"){return{type:"NavigationPropertyPath",NavigationPropertyPath:e.value}}}return undefined}function l(a,e){const t={term:e.term,qualifier:e.qualifier};if(Array.isArray(e)){if(e.hasOwnProperty("annotations")&&Object.keys(e.annotations).length>0){t.annotations=[];s(a,e.annotations,t.annotations)}return{...t,collection:e.map(e=>c(a,e))}}else if(e.hasOwnProperty("$Type")){return{...t,record:c(a,e)}}else{return{...t,value:i(a,e)}}}e.revertTermToGenericType=l},255:function(a,e){Object.defineProperty(e,"__esModule",{value:true});e.EnumIsFlag=void 0;e.EnumIsFlag={"Authorization.KeyLocation":false,"Core.RevisionKind":false,"Core.DataModificationOperationKind":false,"Core.Permission":true,"Capabilities.ConformanceLevelType":false,"Capabilities.IsolationLevel":true,"Capabilities.NavigationType":false,"Capabilities.SearchExpressions":true,"Capabilities.HttpMethod":true,"Aggregation.RollupType":false,"Common.TextFormatType":false,"Common.FilterExpressionType":false,"Common.FieldControlType":false,"Common.EffectType":true,"Communication.KindType":false,"Communication.ContactInformationType":true,"Communication.PhoneType":true,"Communication.GenderType":false,"UI.VisualizationType":false,"UI.CriticalityType":false,"UI.ImprovementDirectionType":false,"UI.TrendType":false,"UI.ChartType":false,"UI.ChartAxisScaleBehaviorType":false,"UI.ChartAxisAutoScaleDataScopeType":false,"UI.ChartDimensionRoleType":false,"UI.ChartMeasureRoleType":false,"UI.SelectionRangeSignType":false,"UI.SelectionRangeOptionType":false,"UI.TextArrangementType":false,"UI.ImportanceType":false,"UI.CriticalityRepresentationType":false,"UI.OperationGroupingType":false}},66:function(a,e){Object.defineProperty(e,"__esModule",{value:true});e.TermToTypes=void 0;var t;(function(a){a["Org.OData.Authorization.V1.SecuritySchemes"]="Org.OData.Authorization.V1.SecurityScheme";a["Org.OData.Authorization.V1.Authorizations"]="Org.OData.Authorization.V1.Authorization";a["Org.OData.Core.V1.Revisions"]="Org.OData.Core.V1.RevisionType";a["Org.OData.Core.V1.Links"]="Org.OData.Core.V1.Link";a["Org.OData.Core.V1.Example"]="Org.OData.Core.V1.ExampleValue";a["Org.OData.Core.V1.Messages"]="Org.OData.Core.V1.MessageType";a["Org.OData.Core.V1.ValueException"]="Org.OData.Core.V1.ValueExceptionType";a["Org.OData.Core.V1.ResourceException"]="Org.OData.Core.V1.ResourceExceptionType";a["Org.OData.Core.V1.DataModificationException"]="Org.OData.Core.V1.DataModificationExceptionType";a["Org.OData.Core.V1.IsLanguageDependent"]="Org.OData.Core.V1.Tag";a["Org.OData.Core.V1.AppliesViaContainer"]="Org.OData.Core.V1.Tag";a["Org.OData.Core.V1.DereferenceableIDs"]="Org.OData.Core.V1.Tag";a["Org.OData.Core.V1.ConventionalIDs"]="Org.OData.Core.V1.Tag";a["Org.OData.Core.V1.Permissions"]="Org.OData.Core.V1.Permission";a["Org.OData.Core.V1.DefaultNamespace"]="Org.OData.Core.V1.Tag";a["Org.OData.Core.V1.Immutable"]="Org.OData.Core.V1.Tag";a["Org.OData.Core.V1.Computed"]="Org.OData.Core.V1.Tag";a["Org.OData.Core.V1.ComputedDefaultValue"]="Org.OData.Core.V1.Tag";a["Org.OData.Core.V1.IsURL"]="Org.OData.Core.V1.Tag";a["Org.OData.Core.V1.IsMediaType"]="Org.OData.Core.V1.Tag";a["Org.OData.Core.V1.ContentDisposition"]="Org.OData.Core.V1.ContentDispositionType";a["Org.OData.Core.V1.OptimisticConcurrency"]="Edm.PropertyPath";a["Org.OData.Core.V1.AdditionalProperties"]="Org.OData.Core.V1.Tag";a["Org.OData.Core.V1.AutoExpand"]="Org.OData.Core.V1.Tag";a["Org.OData.Core.V1.AutoExpandReferences"]="Org.OData.Core.V1.Tag";a["Org.OData.Core.V1.MayImplement"]="Org.OData.Core.V1.QualifiedTypeName";a["Org.OData.Core.V1.Ordered"]="Org.OData.Core.V1.Tag";a["Org.OData.Core.V1.PositionalInsert"]="Org.OData.Core.V1.Tag";a["Org.OData.Core.V1.AlternateKeys"]="Org.OData.Core.V1.AlternateKey";a["Org.OData.Core.V1.OptionalParameter"]="Org.OData.Core.V1.OptionalParameterType";a["Org.OData.Core.V1.OperationAvailable"]="Edm.Boolean";a["Org.OData.Core.V1.RequiresExplicitBinding"]="Org.OData.Core.V1.Tag";a["Org.OData.Core.V1.ExplicitOperationBindings"]="Org.OData.Core.V1.QualifiedBoundOperationName";a["Org.OData.Core.V1.SymbolicName"]="Org.OData.Core.V1.SimpleIdentifier";a["Org.OData.Core.V1.GeometryFeature"]="Org.OData.Core.V1.GeometryFeatureType";a["Org.OData.Core.V1.AnyStructure"]="Org.OData.Core.V1.Tag";a["Org.OData.Core.V1.IsDelta"]="Org.OData.Core.V1.Tag";a["Org.OData.Capabilities.V1.ConformanceLevel"]="Org.OData.Capabilities.V1.ConformanceLevelType";a["Org.OData.Capabilities.V1.AsynchronousRequestsSupported"]="Org.OData.Core.V1.Tag";a["Org.OData.Capabilities.V1.BatchContinueOnErrorSupported"]="Org.OData.Core.V1.Tag";a["Org.OData.Capabilities.V1.IsolationSupported"]="Org.OData.Capabilities.V1.IsolationLevel";a["Org.OData.Capabilities.V1.CrossJoinSupported"]="Org.OData.Core.V1.Tag";a["Org.OData.Capabilities.V1.CallbackSupported"]="Org.OData.Capabilities.V1.CallbackType";a["Org.OData.Capabilities.V1.ChangeTracking"]="Org.OData.Capabilities.V1.ChangeTrackingType";a["Org.OData.Capabilities.V1.CountRestrictions"]="Org.OData.Capabilities.V1.CountRestrictionsType";a["Org.OData.Capabilities.V1.NavigationRestrictions"]="Org.OData.Capabilities.V1.NavigationRestrictionsType";a["Org.OData.Capabilities.V1.IndexableByKey"]="Org.OData.Core.V1.Tag";a["Org.OData.Capabilities.V1.TopSupported"]="Org.OData.Core.V1.Tag";a["Org.OData.Capabilities.V1.SkipSupported"]="Org.OData.Core.V1.Tag";a["Org.OData.Capabilities.V1.ComputeSupported"]="Org.OData.Core.V1.Tag";a["Org.OData.Capabilities.V1.SelectSupport"]="Org.OData.Capabilities.V1.SelectSupportType";a["Org.OData.Capabilities.V1.BatchSupported"]="Org.OData.Core.V1.Tag";a["Org.OData.Capabilities.V1.BatchSupport"]="Org.OData.Capabilities.V1.BatchSupportType";a["Org.OData.Capabilities.V1.FilterRestrictions"]="Org.OData.Capabilities.V1.FilterRestrictionsType";a["Org.OData.Capabilities.V1.SortRestrictions"]="Org.OData.Capabilities.V1.SortRestrictionsType";a["Org.OData.Capabilities.V1.ExpandRestrictions"]="Org.OData.Capabilities.V1.ExpandRestrictionsType";a["Org.OData.Capabilities.V1.SearchRestrictions"]="Org.OData.Capabilities.V1.SearchRestrictionsType";a["Org.OData.Capabilities.V1.KeyAsSegmentSupported"]="Org.OData.Core.V1.Tag";a["Org.OData.Capabilities.V1.QuerySegmentSupported"]="Org.OData.Core.V1.Tag";a["Org.OData.Capabilities.V1.InsertRestrictions"]="Org.OData.Capabilities.V1.InsertRestrictionsType";a["Org.OData.Capabilities.V1.DeepInsertSupport"]="Org.OData.Capabilities.V1.DeepInsertSupportType";a["Org.OData.Capabilities.V1.UpdateRestrictions"]="Org.OData.Capabilities.V1.UpdateRestrictionsType";a["Org.OData.Capabilities.V1.DeepUpdateSupport"]="Org.OData.Capabilities.V1.DeepUpdateSupportType";a["Org.OData.Capabilities.V1.DeleteRestrictions"]="Org.OData.Capabilities.V1.DeleteRestrictionsType";a["Org.OData.Capabilities.V1.CollectionPropertyRestrictions"]="Org.OData.Capabilities.V1.CollectionPropertyRestrictionsType";a["Org.OData.Capabilities.V1.OperationRestrictions"]="Org.OData.Capabilities.V1.OperationRestrictionsType";a["Org.OData.Capabilities.V1.AnnotationValuesInQuerySupported"]="Org.OData.Core.V1.Tag";a["Org.OData.Capabilities.V1.ModificationQueryOptions"]="Org.OData.Capabilities.V1.ModificationQueryOptionsType";a["Org.OData.Capabilities.V1.ReadRestrictions"]="Org.OData.Capabilities.V1.ReadRestrictionsType";a["Org.OData.Capabilities.V1.CustomHeaders"]="Org.OData.Capabilities.V1.CustomParameter";a["Org.OData.Capabilities.V1.CustomQueryOptions"]="Org.OData.Capabilities.V1.CustomParameter";a["Org.OData.Capabilities.V1.MediaLocationUpdateSupported"]="Org.OData.Core.V1.Tag";a["Org.OData.Capabilities.V1.DefaultCapabilities"]="Org.OData.Capabilities.V1.DefaultCapabilitiesType";a["Org.OData.Aggregation.V1.ApplySupported"]="Org.OData.Aggregation.V1.ApplySupportedType";a["Org.OData.Aggregation.V1.ApplySupportedDefaults"]="Org.OData.Aggregation.V1.ApplySupportedBase";a["Org.OData.Aggregation.V1.Groupable"]="Org.OData.Core.V1.Tag";a["Org.OData.Aggregation.V1.Aggregatable"]="Org.OData.Core.V1.Tag";a["Org.OData.Aggregation.V1.ContextDefiningProperties"]="Edm.PropertyPath";a["Org.OData.Aggregation.V1.LeveledHierarchy"]="Edm.PropertyPath";a["Org.OData.Aggregation.V1.RecursiveHierarchy"]="Org.OData.Aggregation.V1.RecursiveHierarchyType";a["Org.OData.Aggregation.V1.AvailableOnAggregates"]="Org.OData.Aggregation.V1.AvailableOnAggregatesType";a["Org.OData.Validation.V1.Minimum"]="Edm.PrimitiveType";a["Org.OData.Validation.V1.Maximum"]="Edm.PrimitiveType";a["Org.OData.Validation.V1.Exclusive"]="Org.OData.Core.V1.Tag";a["Org.OData.Validation.V1.AllowedValues"]="Org.OData.Validation.V1.AllowedValue";a["Org.OData.Validation.V1.MultipleOf"]="Edm.Decimal";a["Org.OData.Validation.V1.Constraint"]="Org.OData.Validation.V1.ConstraintType";a["Org.OData.Validation.V1.ItemsOf"]="Org.OData.Validation.V1.ItemsOfType";a["Org.OData.Validation.V1.OpenPropertyTypeConstraint"]="Org.OData.Validation.V1.SingleOrCollectionType";a["Org.OData.Validation.V1.DerivedTypeConstraint"]="Org.OData.Validation.V1.SingleOrCollectionType";a["Org.OData.Validation.V1.AllowedTerms"]="Org.OData.Core.V1.QualifiedTermName";a["Org.OData.Validation.V1.ApplicableTerms"]="Org.OData.Core.V1.QualifiedTermName";a["Org.OData.Validation.V1.MaxItems"]="Edm.Int64";a["Org.OData.Validation.V1.MinItems"]="Edm.Int64";a["Org.OData.Measures.V1.Scale"]="Edm.Byte";a["Org.OData.Measures.V1.DurationGranularity"]="Org.OData.Measures.V1.DurationGranularityType";a["com.sap.vocabularies.Analytics.v1.Dimension"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.Analytics.v1.Measure"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.Analytics.v1.AccumulativeMeasure"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.Analytics.v1.RolledUpPropertyCount"]="Edm.Int16";a["com.sap.vocabularies.Analytics.v1.PlanningAction"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.Analytics.v1.AggregatedProperties"]="com.sap.vocabularies.Analytics.v1.AggregatedPropertyType";a["com.sap.vocabularies.Analytics.v1.AggregatedProperty"]="com.sap.vocabularies.Analytics.v1.AggregatedPropertyType";a["com.sap.vocabularies.Analytics.v1.AnalyticalContext"]="com.sap.vocabularies.Analytics.v1.AnalyticalContextType";a["com.sap.vocabularies.Common.v1.ServiceVersion"]="Edm.Int32";a["com.sap.vocabularies.Common.v1.ServiceSchemaVersion"]="Edm.Int32";a["com.sap.vocabularies.Common.v1.TextFor"]="Edm.PropertyPath";a["com.sap.vocabularies.Common.v1.IsLanguageIdentifier"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.Common.v1.TextFormat"]="com.sap.vocabularies.Common.v1.TextFormatType";a["com.sap.vocabularies.Common.v1.IsTimezone"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.Common.v1.IsDigitSequence"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.Common.v1.IsUpperCase"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.Common.v1.IsCurrency"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.Common.v1.IsUnit"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.Common.v1.UnitSpecificScale"]="Edm.PrimitiveType";a["com.sap.vocabularies.Common.v1.UnitSpecificPrecision"]="Edm.PrimitiveType";a["com.sap.vocabularies.Common.v1.SecondaryKey"]="Edm.PropertyPath";a["com.sap.vocabularies.Common.v1.MinOccurs"]="Edm.Int64";a["com.sap.vocabularies.Common.v1.MaxOccurs"]="Edm.Int64";a["com.sap.vocabularies.Common.v1.AssociationEntity"]="Edm.NavigationPropertyPath";a["com.sap.vocabularies.Common.v1.DerivedNavigation"]="Edm.NavigationPropertyPath";a["com.sap.vocabularies.Common.v1.Masked"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.Common.v1.RevealOnDemand"]="Edm.Boolean";a["com.sap.vocabularies.Common.v1.SemanticObjectMapping"]="com.sap.vocabularies.Common.v1.SemanticObjectMappingAbstract";a["com.sap.vocabularies.Common.v1.IsInstanceAnnotation"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.Common.v1.FilterExpressionRestrictions"]="com.sap.vocabularies.Common.v1.FilterExpressionRestrictionType";a["com.sap.vocabularies.Common.v1.FieldControl"]="com.sap.vocabularies.Common.v1.FieldControlType";a["com.sap.vocabularies.Common.v1.Application"]="com.sap.vocabularies.Common.v1.ApplicationType";a["com.sap.vocabularies.Common.v1.Timestamp"]="Edm.DateTimeOffset";a["com.sap.vocabularies.Common.v1.ErrorResolution"]="com.sap.vocabularies.Common.v1.ErrorResolutionType";a["com.sap.vocabularies.Common.v1.Messages"]="Edm.ComplexType";a["com.sap.vocabularies.Common.v1.numericSeverity"]="com.sap.vocabularies.Common.v1.NumericMessageSeverityType";a["com.sap.vocabularies.Common.v1.MaximumNumericMessageSeverity"]="com.sap.vocabularies.Common.v1.NumericMessageSeverityType";a["com.sap.vocabularies.Common.v1.IsActionCritical"]="Edm.Boolean";a["com.sap.vocabularies.Common.v1.Attributes"]="Edm.PropertyPath";a["com.sap.vocabularies.Common.v1.RelatedRecursiveHierarchy"]="Edm.AnnotationPath";a["com.sap.vocabularies.Common.v1.Interval"]="com.sap.vocabularies.Common.v1.IntervalType";a["com.sap.vocabularies.Common.v1.ResultContext"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.Common.v1.SAPObjectNodeType"]="com.sap.vocabularies.Common.v1.SAPObjectNodeTypeType";a["com.sap.vocabularies.Common.v1.Composition"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.Common.v1.IsNaturalPerson"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.Common.v1.ValueList"]="com.sap.vocabularies.Common.v1.ValueListType";a["com.sap.vocabularies.Common.v1.ValueListRelevantQualifiers"]="Org.OData.Core.V1.SimpleIdentifier";a["com.sap.vocabularies.Common.v1.ValueListWithFixedValues"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.Common.v1.ValueListShowValuesImmediately"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.Common.v1.ValueListMapping"]="com.sap.vocabularies.Common.v1.ValueListMappingType";a["com.sap.vocabularies.Common.v1.IsCalendarYear"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.Common.v1.IsCalendarHalfyear"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.Common.v1.IsCalendarQuarter"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.Common.v1.IsCalendarMonth"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.Common.v1.IsCalendarWeek"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.Common.v1.IsDayOfCalendarMonth"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.Common.v1.IsDayOfCalendarYear"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.Common.v1.IsCalendarYearHalfyear"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.Common.v1.IsCalendarYearQuarter"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.Common.v1.IsCalendarYearMonth"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.Common.v1.IsCalendarYearWeek"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.Common.v1.IsCalendarDate"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.Common.v1.IsFiscalYear"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.Common.v1.IsFiscalPeriod"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.Common.v1.IsFiscalYearPeriod"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.Common.v1.IsFiscalQuarter"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.Common.v1.IsFiscalYearQuarter"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.Common.v1.IsFiscalWeek"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.Common.v1.IsFiscalYearWeek"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.Common.v1.IsDayOfFiscalYear"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.Common.v1.IsFiscalYearVariant"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.Common.v1.MutuallyExclusiveTerm"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.Common.v1.DraftRoot"]="com.sap.vocabularies.Common.v1.DraftRootType";a["com.sap.vocabularies.Common.v1.DraftNode"]="com.sap.vocabularies.Common.v1.DraftNodeType";a["com.sap.vocabularies.Common.v1.DraftActivationVia"]="Org.OData.Core.V1.SimpleIdentifier";a["com.sap.vocabularies.Common.v1.EditableFieldFor"]="Edm.PropertyPath";a["com.sap.vocabularies.Common.v1.SemanticKey"]="Edm.PropertyPath";a["com.sap.vocabularies.Common.v1.SideEffects"]="com.sap.vocabularies.Common.v1.SideEffectsType";a["com.sap.vocabularies.Common.v1.DefaultValuesFunction"]="com.sap.vocabularies.Common.v1.QualifiedName";a["com.sap.vocabularies.Common.v1.FilterDefaultValue"]="Edm.PrimitiveType";a["com.sap.vocabularies.Common.v1.FilterDefaultValueHigh"]="Edm.PrimitiveType";a["com.sap.vocabularies.Common.v1.SortOrder"]="com.sap.vocabularies.Common.v1.SortOrderType";a["com.sap.vocabularies.Common.v1.RecursiveHierarchy"]="com.sap.vocabularies.Common.v1.RecursiveHierarchyType";a["com.sap.vocabularies.Common.v1.CreatedAt"]="Edm.DateTimeOffset";a["com.sap.vocabularies.Common.v1.CreatedBy"]="com.sap.vocabularies.Common.v1.UserID";a["com.sap.vocabularies.Common.v1.ChangedAt"]="Edm.DateTimeOffset";a["com.sap.vocabularies.Common.v1.ChangedBy"]="com.sap.vocabularies.Common.v1.UserID";a["com.sap.vocabularies.Common.v1.ApplyMultiUnitBehaviorForSortingAndFiltering"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.Common.v1.PrimitivePropertyPath"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.CodeList.v1.CurrencyCodes"]="com.sap.vocabularies.CodeList.v1.CodeListSource";a["com.sap.vocabularies.CodeList.v1.UnitsOfMeasure"]="com.sap.vocabularies.CodeList.v1.CodeListSource";a["com.sap.vocabularies.CodeList.v1.StandardCode"]="Edm.PropertyPath";a["com.sap.vocabularies.CodeList.v1.ExternalCode"]="Edm.PropertyPath";a["com.sap.vocabularies.CodeList.v1.IsConfigurationDeprecationCode"]="Edm.Boolean";a["com.sap.vocabularies.Communication.v1.Contact"]="com.sap.vocabularies.Communication.v1.ContactType";a["com.sap.vocabularies.Communication.v1.Address"]="com.sap.vocabularies.Communication.v1.AddressType";a["com.sap.vocabularies.Communication.v1.IsEmailAddress"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.Communication.v1.IsPhoneNumber"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.Communication.v1.Event"]="com.sap.vocabularies.Communication.v1.EventData";a["com.sap.vocabularies.Communication.v1.Task"]="com.sap.vocabularies.Communication.v1.TaskData";a["com.sap.vocabularies.Communication.v1.Message"]="com.sap.vocabularies.Communication.v1.MessageData";a["com.sap.vocabularies.Hierarchy.v1.RecursiveHierarchy"]="com.sap.vocabularies.Hierarchy.v1.RecursiveHierarchyType";a["com.sap.vocabularies.Hierarchy.v1.RecursiveHierarchyActions"]="com.sap.vocabularies.Hierarchy.v1.RecursiveHierarchyActionsType";a["com.sap.vocabularies.Hierarchy.v1.MatchCount"]="Edm.Int64";a["com.sap.vocabularies.Hierarchy.v1.RecursiveHierarchySupported"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.PersonalData.v1.EntitySemantics"]="com.sap.vocabularies.PersonalData.v1.EntitySemanticsType";a["com.sap.vocabularies.PersonalData.v1.FieldSemantics"]="com.sap.vocabularies.PersonalData.v1.FieldSemanticsType";a["com.sap.vocabularies.PersonalData.v1.IsPotentiallyPersonal"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.PersonalData.v1.IsPotentiallySensitive"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.Session.v1.StickySessionSupported"]="com.sap.vocabularies.Session.v1.StickySessionSupportedType";a["com.sap.vocabularies.UI.v1.HeaderInfo"]="com.sap.vocabularies.UI.v1.HeaderInfoType";a["com.sap.vocabularies.UI.v1.Identification"]="com.sap.vocabularies.UI.v1.DataFieldAbstract";a["com.sap.vocabularies.UI.v1.Badge"]="com.sap.vocabularies.UI.v1.BadgeType";a["com.sap.vocabularies.UI.v1.LineItem"]="com.sap.vocabularies.UI.v1.DataFieldAbstract";a["com.sap.vocabularies.UI.v1.StatusInfo"]="com.sap.vocabularies.UI.v1.DataFieldAbstract";a["com.sap.vocabularies.UI.v1.FieldGroup"]="com.sap.vocabularies.UI.v1.FieldGroupType";a["com.sap.vocabularies.UI.v1.ConnectedFields"]="com.sap.vocabularies.UI.v1.ConnectedFieldsType";a["com.sap.vocabularies.UI.v1.GeoLocations"]="com.sap.vocabularies.UI.v1.GeoLocationType";a["com.sap.vocabularies.UI.v1.GeoLocation"]="com.sap.vocabularies.UI.v1.GeoLocationType";a["com.sap.vocabularies.UI.v1.Contacts"]="Edm.AnnotationPath";a["com.sap.vocabularies.UI.v1.MediaResource"]="com.sap.vocabularies.UI.v1.MediaResourceType";a["com.sap.vocabularies.UI.v1.DataPoint"]="com.sap.vocabularies.UI.v1.DataPointType";a["com.sap.vocabularies.UI.v1.KPI"]="com.sap.vocabularies.UI.v1.KPIType";a["com.sap.vocabularies.UI.v1.Chart"]="com.sap.vocabularies.UI.v1.ChartDefinitionType";a["com.sap.vocabularies.UI.v1.ValueCriticality"]="com.sap.vocabularies.UI.v1.ValueCriticalityType";a["com.sap.vocabularies.UI.v1.CriticalityLabels"]="com.sap.vocabularies.UI.v1.CriticalityLabelType";a["com.sap.vocabularies.UI.v1.SelectionFields"]="Edm.PropertyPath";a["com.sap.vocabularies.UI.v1.Facets"]="com.sap.vocabularies.UI.v1.Facet";a["com.sap.vocabularies.UI.v1.HeaderFacets"]="com.sap.vocabularies.UI.v1.Facet";a["com.sap.vocabularies.UI.v1.QuickViewFacets"]="com.sap.vocabularies.UI.v1.Facet";a["com.sap.vocabularies.UI.v1.QuickCreateFacets"]="com.sap.vocabularies.UI.v1.Facet";a["com.sap.vocabularies.UI.v1.FilterFacets"]="com.sap.vocabularies.UI.v1.ReferenceFacet";a["com.sap.vocabularies.UI.v1.SelectionPresentationVariant"]="com.sap.vocabularies.UI.v1.SelectionPresentationVariantType";a["com.sap.vocabularies.UI.v1.PresentationVariant"]="com.sap.vocabularies.UI.v1.PresentationVariantType";a["com.sap.vocabularies.UI.v1.SelectionVariant"]="com.sap.vocabularies.UI.v1.SelectionVariantType";a["com.sap.vocabularies.UI.v1.ThingPerspective"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.UI.v1.IsSummary"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.UI.v1.PartOfPreview"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.UI.v1.Map"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.UI.v1.Gallery"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.UI.v1.IsImageURL"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.UI.v1.IsImage"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.UI.v1.MultiLineText"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.UI.v1.InputMask"]="com.sap.vocabularies.UI.v1.InputMaskType";a["com.sap.vocabularies.UI.v1.TextArrangement"]="com.sap.vocabularies.UI.v1.TextArrangementType";a["com.sap.vocabularies.UI.v1.Note"]="com.sap.vocabularies.UI.v1.NoteType";a["com.sap.vocabularies.UI.v1.Importance"]="com.sap.vocabularies.UI.v1.ImportanceType";a["com.sap.vocabularies.UI.v1.Hidden"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.UI.v1.IsCopyAction"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.UI.v1.IsAIOperation"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.UI.v1.CreateHidden"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.UI.v1.UpdateHidden"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.UI.v1.DeleteHidden"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.UI.v1.HiddenFilter"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.UI.v1.AdaptationHidden"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.UI.v1.DataFieldDefault"]="com.sap.vocabularies.UI.v1.DataFieldAbstract";a["com.sap.vocabularies.UI.v1.Criticality"]="com.sap.vocabularies.UI.v1.CriticalityType";a["com.sap.vocabularies.UI.v1.CriticalityCalculation"]="com.sap.vocabularies.UI.v1.CriticalityCalculationType";a["com.sap.vocabularies.UI.v1.Emphasized"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.UI.v1.OrderBy"]="Edm.PropertyPath";a["com.sap.vocabularies.UI.v1.ParameterDefaultValue"]="Edm.PrimitiveType";a["com.sap.vocabularies.UI.v1.RecommendationState"]="com.sap.vocabularies.UI.v1.RecommendationStateType";a["com.sap.vocabularies.UI.v1.RecommendationList"]="com.sap.vocabularies.UI.v1.RecommendationListType";a["com.sap.vocabularies.UI.v1.Recommendations"]="Edm.ComplexType";a["com.sap.vocabularies.UI.v1.ExcludeFromNavigationContext"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.UI.v1.DoNotCheckScaleOfMeasuredQuantity"]="Edm.Boolean";a["com.sap.vocabularies.HTML5.v1.CssDefaults"]="com.sap.vocabularies.HTML5.v1.CssDefaultsType";a["com.sap.vocabularies.HTML5.v1.LinkTarget"]="com.sap.vocabularies.HTML5.v1.LinkTargetType";a["com.sap.vocabularies.HTML5.v1.RowSpanForDuplicateValues"]="Org.OData.Core.V1.Tag"})(t=e.TermToTypes||(e.TermToTypes={}))},42:function(a,e){Object.defineProperty(e,"__esModule",{value:true});e.VocabularyReferences=void 0;e.VocabularyReferences=[{alias:"Authorization",namespace:"Org.OData.Authorization.V1",uri:"https://oasis-tcs.github.io/odata-vocabularies/vocabularies/Org.OData.Authorization.V1.xml"},{alias:"Core",namespace:"Org.OData.Core.V1",uri:"https://oasis-tcs.github.io/odata-vocabularies/vocabularies/Org.OData.Core.V1.xml"},{alias:"Capabilities",namespace:"Org.OData.Capabilities.V1",uri:"https://oasis-tcs.github.io/odata-vocabularies/vocabularies/Org.OData.Capabilities.V1.xml"},{alias:"Aggregation",namespace:"Org.OData.Aggregation.V1",uri:"https://oasis-tcs.github.io/odata-vocabularies/vocabularies/Org.OData.Aggregation.V1.xml"},{alias:"Validation",namespace:"Org.OData.Validation.V1",uri:"https://oasis-tcs.github.io/odata-vocabularies/vocabularies/Org.OData.Validation.V1.xml"},{alias:"Measures",namespace:"Org.OData.Measures.V1",uri:"https://oasis-tcs.github.io/odata-vocabularies/vocabularies/Org.OData.Measures.V1.xml"},{alias:"Analytics",namespace:"com.sap.vocabularies.Analytics.v1",uri:"https://sap.github.io/odata-vocabularies/vocabularies/Analytics.xml"},{alias:"Common",namespace:"com.sap.vocabularies.Common.v1",uri:"https://sap.github.io/odata-vocabularies/vocabularies/Common.xml"},{alias:"CodeList",namespace:"com.sap.vocabularies.CodeList.v1",uri:"https://sap.github.io/odata-vocabularies/vocabularies/CodeList.xml"},{alias:"Communication",namespace:"com.sap.vocabularies.Communication.v1",uri:"https://sap.github.io/odata-vocabularies/vocabularies/Communication.xml"},{alias:"Hierarchy",namespace:"com.sap.vocabularies.Hierarchy.v1",uri:"https://sap.github.io/odata-vocabularies/vocabularies/Hierarchy.xml"},{alias:"PersonalData",namespace:"com.sap.vocabularies.PersonalData.v1",uri:"https://sap.github.io/odata-vocabularies/vocabularies/PersonalData.xml"},{alias:"Session",namespace:"com.sap.vocabularies.Session.v1",uri:"https://sap.github.io/odata-vocabularies/vocabularies/Session.xml"},{alias:"UI",namespace:"com.sap.vocabularies.UI.v1",uri:"https://sap.github.io/odata-vocabularies/vocabularies/UI.xml"},{alias:"HTML5",namespace:"com.sap.vocabularies.HTML5.v1",uri:"https://sap.github.io/odata-vocabularies/vocabularies/HTML5.xml"}]}};var t={};function o(a){var r=t[a];if(r!==undefined){return r.exports}var i=t[a]={exports:{}};e[a].call(i.exports,i,i.exports,o);return i.exports}var r=o(131);a=r})();return a},true);
//# sourceMappingURL=AnnotationConverter.js.map