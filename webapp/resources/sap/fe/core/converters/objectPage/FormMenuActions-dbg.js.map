{"version":3,"names":["ActionType","mergeFormActions","source","target","key","hasOwnProperty","_exports","getFormHiddenActions","facetDefinition","converterContext","formActions","getFormActions","annotations","getEntityType","UI","hiddenFormActions","property","annotationProperty","isAnnotationOfType","Data","forEach","dataField","$Type","Action","Hidden","valueOf","push","type","Default","KeyHelper","generateKeyFromDataField","isAnnotationOfTerm","manifestWrapper","getManifestWrapper","targetValue","manifestFormContainer","actions","Facets","facet","Target","value","getFormContainer","actionKey","facetName","fullyQualifiedName"],"sourceRoot":".","sources":["FormMenuActions.ts"],"sourcesContent":["import type {\n\tDataFieldAbstractTypes,\n\tFacetTypes,\n\tFieldGroup,\n\tIdentification,\n\tReferenceFacet,\n\tStatusInfo\n} from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport { UIAnnotationTerms, UIAnnotationTypes } from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport type { FormManifestConfiguration, ManifestAction } from \"sap/fe/core/converters/ManifestSettings\";\nimport type { PageContextPathTarget } from \"sap/fe/core/converters/TemplateConverter\";\nimport type { BaseAction } from \"sap/fe/core/converters/controls/Common/Action\";\nimport type { ConfigurableRecord } from \"sap/fe/core/converters/helpers/ConfigurableObject\";\nimport { KeyHelper } from \"sap/fe/core/converters/helpers/Key\";\nimport { isAnnotationOfTerm, isAnnotationOfType } from \"sap/fe/core/helpers/TypeGuards\";\nimport type ConverterContext from \"../ConverterContext\";\n\nenum ActionType {\n\tDefault = \"Default\"\n}\n\nexport const mergeFormActions = (\n\tsource: ConfigurableRecord<ManifestAction>,\n\ttarget: ConfigurableRecord<ManifestAction>\n): ConfigurableRecord<ManifestAction> => {\n\tfor (const key in source) {\n\t\tif (source.hasOwnProperty(key)) {\n\t\t\ttarget[key] = source[key];\n\t\t}\n\t}\n\treturn source;\n};\n\nexport const getFormHiddenActions = (\n\tfacetDefinition: FacetTypes,\n\tconverterContext: ConverterContext<PageContextPathTarget>\n): BaseAction[] => {\n\tconst formActions: ConfigurableRecord<ManifestAction> = getFormActions(facetDefinition, converterContext) || [],\n\t\tannotations = converterContext?.getEntityType()?.annotations?.UI as unknown as Record<string, unknown>;\n\tconst hiddenFormActions: BaseAction[] = [];\n\tfor (const property in annotations) {\n\t\tconst annotationProperty = annotations[property];\n\t\tif (isAnnotationOfType<FieldGroup>(annotationProperty, UIAnnotationTypes.FieldGroupType)) {\n\t\t\tannotationProperty?.Data.forEach((dataField: DataFieldAbstractTypes) => {\n\t\t\t\tif (\n\t\t\t\t\t(dataField.$Type === \"com.sap.vocabularies.UI.v1.DataFieldForAction\" &&\n\t\t\t\t\t\tformActions.hasOwnProperty(`DataFieldForAction::${dataField.Action}`)) ||\n\t\t\t\t\t(dataField.$Type === \"com.sap.vocabularies.UI.v1.DataFieldForIntentBasedNavigation\" &&\n\t\t\t\t\t\tformActions.hasOwnProperty(`DataFieldForIntentBasedNavigation::${dataField.Action}`))\n\t\t\t\t) {\n\t\t\t\t\tif (dataField?.annotations?.UI?.Hidden?.valueOf() === true) {\n\t\t\t\t\t\thiddenFormActions.push({\n\t\t\t\t\t\t\ttype: ActionType.Default,\n\t\t\t\t\t\t\tkey: KeyHelper.generateKeyFromDataField(dataField)\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t} else if (\n\t\t\tisAnnotationOfTerm<Identification>(annotationProperty, UIAnnotationTerms.Identification) ||\n\t\t\tisAnnotationOfTerm<StatusInfo>(annotationProperty, UIAnnotationTerms.StatusInfo)\n\t\t) {\n\t\t\tannotationProperty?.forEach((dataField: DataFieldAbstractTypes) => {\n\t\t\t\tif (\n\t\t\t\t\t(dataField.$Type === \"com.sap.vocabularies.UI.v1.DataFieldForAction\" &&\n\t\t\t\t\t\tformActions.hasOwnProperty(`DataFieldForAction::${dataField.Action}`)) ||\n\t\t\t\t\t(dataField.$Type === \"com.sap.vocabularies.UI.v1.DataFieldForIntentBasedNavigation\" &&\n\t\t\t\t\t\tformActions.hasOwnProperty(`DataFieldForIntentBasedNavigation::${dataField.Action}`))\n\t\t\t\t) {\n\t\t\t\t\tif (dataField?.annotations?.UI?.Hidden?.valueOf() === true) {\n\t\t\t\t\t\thiddenFormActions.push({\n\t\t\t\t\t\t\ttype: ActionType.Default,\n\t\t\t\t\t\t\tkey: KeyHelper.generateKeyFromDataField(dataField)\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\treturn hiddenFormActions;\n};\n\nexport const getFormActions = (\n\tfacetDefinition: FacetTypes,\n\tconverterContext: ConverterContext<PageContextPathTarget>\n): ConfigurableRecord<ManifestAction> => {\n\tconst manifestWrapper = converterContext.getManifestWrapper();\n\tlet targetValue: string, manifestFormContainer: FormManifestConfiguration;\n\tlet actions: ConfigurableRecord<ManifestAction> = {};\n\tif (facetDefinition?.$Type === \"com.sap.vocabularies.UI.v1.CollectionFacet\") {\n\t\tif (facetDefinition?.Facets) {\n\t\t\tfacetDefinition?.Facets.forEach((facet: FacetTypes) => {\n\t\t\t\tif (isAnnotationOfType<ReferenceFacet>(facet, UIAnnotationTypes.ReferenceFacet)) {\n\t\t\t\t\ttargetValue = facet?.Target?.value;\n\t\t\t\t\tmanifestFormContainer = manifestWrapper.getFormContainer(targetValue);\n\t\t\t\t\tif (manifestFormContainer?.actions) {\n\t\t\t\t\t\tfor (const actionKey in manifestFormContainer.actions) {\n\t\t\t\t\t\t\t// store the correct facet an action is belonging to for the case it's an inline form action\n\t\t\t\t\t\t\tmanifestFormContainer.actions[actionKey].facetName = facet.fullyQualifiedName;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tactions = mergeFormActions(manifestFormContainer?.actions, actions);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t} else if (facetDefinition?.$Type === \"com.sap.vocabularies.UI.v1.ReferenceFacet\") {\n\t\ttargetValue = facetDefinition?.Target?.value;\n\t\tmanifestFormContainer = manifestWrapper.getFormContainer(targetValue);\n\t\tif (manifestFormContainer?.actions) {\n\t\t\tfor (const actionKey in manifestFormContainer.actions) {\n\t\t\t\t// store the correct facet an action is belonging to for the case it's an inline form action\n\t\t\t\tmanifestFormContainer.actions[actionKey].facetName = facetDefinition.fullyQualifiedName;\n\t\t\t}\n\t\t\tactions = manifestFormContainer.actions;\n\t\t}\n\t}\n\treturn actions;\n};\n"],"mappings":"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","ignoreList":[],"file":"FormMenuActions-dbg.js"}