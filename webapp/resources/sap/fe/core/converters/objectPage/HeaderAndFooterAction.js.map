{"version":3,"file":"HeaderAndFooterAction.js","names":["getIdentificationDataFieldForActions","entityType","isDeterminingAction","annotations","UI","Identification","filter","identificationDataField","$Type","Boolean","Determining","valueOf","ActionTarget","isBound","Core","OperationAvailable","_exports","getIdentificationDataFieldForActionsOrGroups","getIdentificationDataFieldForIBNActions","IMPORTANT_CRITICALITIES","getDeleteButtonVisibility","converterContext","deleteHidden","dataModelObjectPath","getDataModelObjectPath","visitedNavigationPaths","navigationProperties","map","navProp","name","deleteHiddenExpression","getExpressionFromAnnotation","path","singletonPathVisitor","getConvertedTypes","manifestWrapper","getManifestWrapper","viewLevel","getViewLevel","editableExpression","IsEditable","not","ifElse","undefined","and","equal","getDeleteButtonEnabled","isDeletable","isParentDeletable","entitySet","getEntitySet","isDraftRoot","ModelHelper","ret","constant","pathInModel","getEditButtonVisibility","rootUpdateHidden","rootConverterContext","updateHidden","capabilities","rootEntitySet","isFCLEnabled","isFclEnabled","isDraftEnabled","rootUpdateHiddenExpression","getHiddenExpression","hiddenDraft","HiddenDraft","enabled","isDraftNode","updateHiddenExpression","notEditableExpression","resultantExpression","Draft","HasNoDraftForCurrentUser","getEditButtonEnabledExpression","updateRestrictions","isSticky","editActionName","isEntitySet","Common","DraftRoot","EditAction","Session","StickySessionSupported","editActionAnnotationPath","getAbsoluteAnnotationPath","editAction","resolveAbsolutePath","target","getEnabledForAnnotationActionExpression","getEditButtonEnabled","compileExpression","getHeaderDefaultActions","sContextPath","getContextPath","rootEntitySetPath","getRootEntitySetPath","getConverterContextFor","getEntityType","rootEntityType","stickySessionSupported","getStickySession","draftRoot","getDraftRoot","collaborationOnRoot","isCollaborationDraftSupportedFromConverterContext","draftNode","getDraftNode","entityDeleteRestrictions","Capabilities","DeleteRestrictions","isUpdateHidden","isPathDeletable","pathVisitor","navigationPaths","parentEntitySetDeletable","identificationDataFieldForActions","copyDataField","getCopyAction","dataField","dataFieldIsCopyAction","headerDataFieldForActions","headerActions","push","type","ActionType","DraftActions","key","updatablePropertyPath","UpdateRestrictions","Updatable","CollaborationAvatars","computeActionsAndActionGroups","visible","hasCollaborationAuthorization","Primary","Deletable","getDeleteHidden","Secondary","parentEntityDeleteEnabled","getDataFieldAnnotationAction","Copy","text","Label","toString","Library","getResourceBundleFor","getText","headerDataFieldForIBNActions","criticality","Criticality","includes","forEach","RequiresContext","Error","Inline","oNavigationParams","semanticObjectMapping","getSemanticObjectMapping","Mapping","DataFieldForIntentBasedNavigation","annotationPath","getEntitySetBasedAnnotationPath","fullyQualifiedName","buttonType","ButtonType","Ghost","Hidden","NavigationAvailable","KeyHelper","generateKeyFromDataField","isNavigable","press","fn","SemanticObject","Action","customData","semanticObject","action","getHiddenHeaderActions","hiddenActions","Default","getFooterDefaultActions","entitySetDraftRoot","term","conditionSave","SaveAction","conditionApply","conditionCancel","DiscardAction","conditionCreateNext","hideCreateNext","footerDataFieldForActions","footerActions","CreateNext","entityTypeName","DefaultApply","position","placement","Placement","End","isVisibleExp","isVisible","DataFieldForAction","getEnabledForAnnotationAction","isAIOperation","isActionAIOperation","prioritizeCriticality","headerDataFieldForActionsOrGroups","Menu","id","menu","Actions","isMenuAIOperation"],"sources":["./HeaderAndFooterAction.ts"],"sourcesContent":["import type { Action, EntityType, PropertyAnnotationValue } from \"@sap-ux/vocabularies-types\";\nimport { CommonAnnotationTerms } from \"@sap-ux/vocabularies-types/vocabularies/Common\";\nimport type {\n\tDataFieldForAction,\n\tDataFieldForActionGroupTypes,\n\tDataFieldForActionTypes,\n\tDataFieldForIntentBasedNavigationTypes,\n\tDeleteHidden,\n\tUpdateHidden\n} from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport { UIAnnotationTypes } from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport type { BindingToolkitExpression, CompiledBindingToolkitExpression } from \"sap/fe/base/BindingToolkit\";\nimport {\n\tand,\n\tcompileExpression,\n\tconstant,\n\tequal,\n\tfn,\n\tgetExpressionFromAnnotation,\n\tifElse,\n\tnot,\n\tpathInModel\n} from \"sap/fe/base/BindingToolkit\";\nimport type { HiddenDraft } from \"sap/fe/core/converters/ManifestSettings\";\nimport type { PageContextPathTarget } from \"sap/fe/core/converters/TemplateConverter\";\nimport type { AnnotationAction, BaseAction, DataFieldForActionOrActionGroup } from \"sap/fe/core/converters/controls/Common/Action\";\nimport {\n\tButtonType,\n\tdataFieldIsCopyAction,\n\tgetCopyAction,\n\tgetEnabledForAnnotationAction,\n\tgetEnabledForAnnotationActionExpression,\n\tgetSemanticObjectMapping,\n\tisActionAIOperation,\n\tisMenuAIOperation\n} from \"sap/fe/core/converters/controls/Common/Action\";\nimport { Placement } from \"sap/fe/core/converters/helpers/ConfigurableObject\";\nimport { KeyHelper } from \"sap/fe/core/converters/helpers/Key\";\nimport ModelHelper from \"sap/fe/core/helpers/ModelHelper\";\nimport { isEntitySet } from \"sap/fe/core/helpers/TypeGuards\";\nimport { isPathDeletable } from \"sap/fe/core/templating/DataModelPathHelper\";\nimport { isVisible } from \"sap/fe/core/templating/UIFormatters\";\nimport Library from \"sap/ui/core/Lib\";\nimport { Draft, UI, singletonPathVisitor } from \"../../helpers/BindingHelper\";\nimport type { EnvironmentCapabilities } from \"../../services/EnvironmentServiceFactory\";\nimport type ConverterContext from \"../ConverterContext\";\nimport { ActionType } from \"../ManifestSettings\";\n\n/**\n * Retrieves all the DataFieldForActions from the Identification annotation\n * They must be\n * - Either linked to an unbound action or to an action which has an OperationAvailable that is not set to false statically.\n * @param entityType The current entity type\n * @param isDeterminingAction The flag which denotes whether or not the action is a determining action\n * @returns An array of DataFieldForAction respecting the input parameter 'isDeterminingAction'\n */\nexport function getIdentificationDataFieldForActions(entityType: EntityType, isDeterminingAction: boolean): DataFieldForActionTypes[] {\n\treturn (entityType.annotations?.UI?.Identification?.filter((identificationDataField) => {\n\t\treturn identificationDataField.$Type === UIAnnotationTypes.DataFieldForAction &&\n\t\t\tBoolean(identificationDataField.Determining?.valueOf()) === isDeterminingAction &&\n\t\t\t(identificationDataField.ActionTarget?.isBound?.valueOf() !== true ||\n\t\t\t\tidentificationDataField?.ActionTarget?.annotations?.Core?.OperationAvailable?.valueOf() !== false)\n\t\t\t? true\n\t\t\t: false;\n\t}) || []) as DataFieldForActionTypes[];\n}\n\n/**\n * Retrieves all the data field for actions for the identification annotation\n * They must be\n * - Either linked to an Unbound action or to an action which has an OperationAvailable that is not set to false statically.\n * @param entityType The current entity type\n * @param isDeterminingAction The flag which denotes whether or not the action is a determining action\n * @returns An array of DataField for action respecting the input parameter 'isDeterminingAction'\n */\nexport function getIdentificationDataFieldForActionsOrGroups(\n\tentityType: EntityType,\n\tisDeterminingAction: boolean\n): DataFieldForActionOrActionGroup[] {\n\treturn (entityType.annotations?.UI?.Identification?.filter((identificationDataField) => {\n\t\treturn (identificationDataField.$Type === UIAnnotationTypes.DataFieldForAction &&\n\t\t\tBoolean(identificationDataField.Determining?.valueOf()) === isDeterminingAction &&\n\t\t\t(identificationDataField.ActionTarget?.isBound?.valueOf() !== true ||\n\t\t\t\tidentificationDataField?.ActionTarget?.annotations?.Core?.OperationAvailable?.valueOf() !== false)) ||\n\t\t\tidentificationDataField.$Type === UIAnnotationTypes.DataFieldForActionGroup\n\t\t\t? true\n\t\t\t: false;\n\t}) || []) as DataFieldForActionOrActionGroup[];\n}\n\n/**\n * Retrieve all the IBN actions for the identification annotation.\n * @param entityType The current entitytype\n * @param isDeterminingAction Whether or not the action should be determining\n * @returns An array of data field for action respecting the isDeterminingAction property.\n */\nfunction getIdentificationDataFieldForIBNActions(\n\tentityType: EntityType,\n\tisDeterminingAction: boolean\n): DataFieldForIntentBasedNavigationTypes[] {\n\treturn (entityType.annotations?.UI?.Identification?.filter((identificationDataField) => {\n\t\treturn identificationDataField.$Type === UIAnnotationTypes.DataFieldForIntentBasedNavigation &&\n\t\t\tBoolean(identificationDataField.Determining?.valueOf()) === isDeterminingAction\n\t\t\t? true\n\t\t\t: false;\n\t}) || []) as DataFieldForIntentBasedNavigationTypes[];\n}\n\nexport const IMPORTANT_CRITICALITIES = [\n\t\"UI.CriticalityType/VeryPositive\",\n\t\"UI.CriticalityType/Positive\",\n\t\"UI.CriticalityType/Negative\",\n\t\"UI.CriticalityType/VeryNegative\"\n];\n\n/**\n * Method to determine the 'visible' property binding for the Delete button on an object page.\n * @param converterContext Instance of the converter context.\n * @param deleteHidden The value of the UI.DeleteHidden annotation on the entity set / type.\n * @returns The binding expression for the 'visible' property of the Delete button.\n */\nexport function getDeleteButtonVisibility(\n\tconverterContext: ConverterContext<PageContextPathTarget>,\n\tdeleteHidden: DeleteHidden | undefined\n): BindingToolkitExpression<boolean> {\n\tconst dataModelObjectPath = converterContext.getDataModelObjectPath(),\n\t\tvisitedNavigationPaths = dataModelObjectPath.navigationProperties.map((navProp) => navProp.name),\n\t\t// Set absolute binding path for Singleton references, otherwise the configured annotation path itself.\n\t\t// For e.g. /com.sap.namespace.EntityContainer/Singleton/Property to /Singleton/Property\n\t\tdeleteHiddenExpression = getExpressionFromAnnotation(deleteHidden, visitedNavigationPaths, false, (path: string) =>\n\t\t\tsingletonPathVisitor(path, converterContext.getConvertedTypes(), [])\n\t\t), // default to false\n\t\tmanifestWrapper = converterContext.getManifestWrapper(),\n\t\tviewLevel = manifestWrapper.getViewLevel(),\n\t\t// Delete button is visible\n\t\t// In OP \t\t-->  when not in edit mode\n\t\t// In sub-OP \t-->  when in edit mode\n\t\teditableExpression: BindingToolkitExpression<boolean> = viewLevel > 1 ? UI.IsEditable : not(UI.IsEditable);\n\n\t// If UI.DeleteHidden annotation on entity set or type is either not defined or explicitly set to false,\n\t// Delete button is visible based on editableExpression.\n\t// else,\n\t// Delete button is visible based on both annotation path and editableExpression.\n\treturn ifElse(\n\t\tdeleteHidden === undefined || deleteHidden.valueOf() === false,\n\t\teditableExpression,\n\t\tand(editableExpression, equal(deleteHiddenExpression, false))\n\t);\n}\n\n/**\n * Method to determine the 'enabled' property binding for the Delete button on an object page.\n * @param isDeletable The delete restriction configured\n * @param isParentDeletable The delete restriction configured on the parent entity\n * @param converterContext\n * @returns The binding expression for the 'enabled' property of the Delete button\n */\nexport function getDeleteButtonEnabled(\n\tisDeletable: PropertyAnnotationValue<Boolean> | undefined,\n\tisParentDeletable: BindingToolkitExpression<boolean>,\n\tconverterContext: ConverterContext<PageContextPathTarget>\n): BindingToolkitExpression<boolean> {\n\tconst entitySet = converterContext.getEntitySet(),\n\t\tisDraftRoot = ModelHelper.isDraftRoot(entitySet);\n\n\tlet ret = ifElse(\n\t\tisParentDeletable !== undefined,\n\t\tisParentDeletable,\n\t\tifElse(isDeletable !== undefined, equal(getExpressionFromAnnotation(isDeletable), true), constant(true))\n\t);\n\n\t// delete should be disabled for Locked objects\n\tret = isDraftRoot ? and(ret, not(pathInModel(\"DraftAdministrativeData/InProcessByUser\"))) : ret;\n\n\treturn ret;\n}\n\n/**\n * Method to determine the 'visible' property binding for the Edit button on an object page.\n * @param converterContext Instance of the converter context.\n * @param rootUpdateHidden The value of the UI.UpdateHidden annotation on the entity set / type.\n * @param rootConverterContext\n * @param updateHidden\n * @param viewLevel\n * @param capabilities\n * @returns The binding expression for the 'visible' property of the Edit button.\n */\nexport function getEditButtonVisibility(\n\tconverterContext: ConverterContext<PageContextPathTarget>,\n\trootUpdateHidden: UpdateHidden | undefined,\n\trootConverterContext: ConverterContext<PageContextPathTarget>,\n\tupdateHidden?: UpdateHidden | undefined,\n\tviewLevel?: number | undefined,\n\tcapabilities?: EnvironmentCapabilities\n): BindingToolkitExpression<boolean> {\n\tconst rootEntitySet = rootConverterContext?.getEntitySet(),\n\t\tentitySet = converterContext.getEntitySet(),\n\t\tisFCLEnabled = converterContext.getManifestWrapper().isFclEnabled();\n\tlet isDraftEnabled;\n\tconst rootUpdateHiddenExpression = getHiddenExpression(rootConverterContext, rootUpdateHidden);\n\tconst hiddenDraft = (capabilities?.HiddenDraft as HiddenDraft)?.enabled;\n\tif (viewLevel && viewLevel > 1) {\n\t\t// if viewlevel > 1 check if node is draft enabled\n\t\tisDraftEnabled = ModelHelper.isDraftNode(entitySet);\n\t} else {\n\t\tisDraftEnabled = ModelHelper.isDraftRoot(rootEntitySet);\n\t}\n\tconst updateHiddenExpression = getHiddenExpression(rootConverterContext, updateHidden);\n\n\tconst notEditableExpression: BindingToolkitExpression<boolean> = not(UI.IsEditable);\n\n\t// If UI.UpdateHidden annotation on entity set or type is either not defined or explicitly set to false,\n\t// Edit button is visible in display mode.\n\t// else,\n\t// Edit button is visible based on both annotation path and in display mode.\n\tconst resultantExpression: BindingToolkitExpression<boolean> = ifElse(\n\t\t(viewLevel as number) > 1 || hiddenDraft,\n\t\tifElse(\n\t\t\tupdateHidden === undefined || updateHidden.valueOf() === false,\n\t\t\tand(\n\t\t\t\tnotEditableExpression,\n\t\t\t\tequal(pathInModel(\"rootEditVisible\", \"internal\"), true),\n\t\t\t\tifElse(isFCLEnabled, equal(pathInModel(\"/showEditButton\", \"fclhelper\"), true), true)\n\t\t\t),\n\t\t\tand(\n\t\t\t\tnotEditableExpression,\n\t\t\t\tequal(updateHiddenExpression, false),\n\t\t\t\tequal(pathInModel(\"rootEditVisible\", \"internal\"), true),\n\t\t\t\tifElse(isFCLEnabled, equal(pathInModel(\"/showEditButton\", \"fclhelper\"), true), true)\n\t\t\t)\n\t\t),\n\t\tifElse(\n\t\t\trootUpdateHidden === undefined || rootUpdateHidden.valueOf() === false,\n\t\t\tnotEditableExpression,\n\t\t\tand(notEditableExpression, equal(rootUpdateHiddenExpression, false))\n\t\t)\n\t);\n\treturn ifElse(isDraftEnabled, and(resultantExpression, Draft.HasNoDraftForCurrentUser), resultantExpression);\n}\n\nexport function getHiddenExpression(\n\tconverterContext: ConverterContext<PageContextPathTarget>,\n\tupdateHidden: UpdateHidden | undefined\n): BindingToolkitExpression<boolean> {\n\tconst dataModelObjectPath = converterContext.getDataModelObjectPath(),\n\t\tvisitedNavigationPaths = dataModelObjectPath.navigationProperties.map((navProp) => navProp.name),\n\t\t// Set absolute binding path for Singleton references, otherwise the configured annotation path itself.\n\t\t// For e.g. /com.sap.namespace.EntityContainer/Singleton/Property to /Singleton/Property\n\t\tupdateHiddenExpression = getExpressionFromAnnotation(updateHidden, visitedNavigationPaths, false, (path: string) =>\n\t\t\tsingletonPathVisitor(path, converterContext.getConvertedTypes(), visitedNavigationPaths)\n\t\t);\n\treturn updateHiddenExpression;\n}\n/**\n * Method to determine the 'enabled' property binding for the Edit button on an object page.\n * @param converterContext Instance of the converter context.\n * @param updateRestrictions\n * @param viewLevel\n * @returns The binding expression for the 'enabled' property of the Edit button.\n */\nexport function getEditButtonEnabledExpression(\n\tconverterContext: ConverterContext<PageContextPathTarget>,\n\tupdateRestrictions?: PropertyAnnotationValue<Boolean>,\n\tviewLevel?: number | undefined\n): BindingToolkitExpression<boolean> {\n\tconst entitySet = converterContext.getEntitySet(),\n\t\tisDraftRoot = ModelHelper.isDraftRoot(entitySet),\n\t\tisSticky = ModelHelper.isSticky(entitySet);\n\tlet editActionName: string | undefined;\n\tif (isDraftRoot && isEntitySet(entitySet)) {\n\t\teditActionName = entitySet.annotations.Common?.DraftRoot?.EditAction as string;\n\t} else if (isSticky && isEntitySet(entitySet)) {\n\t\teditActionName = entitySet.annotations.Session?.StickySessionSupported?.EditAction as string;\n\t}\n\tif (editActionName) {\n\t\tconst editActionAnnotationPath = converterContext.getAbsoluteAnnotationPath(editActionName);\n\t\tconst editAction = converterContext.resolveAbsolutePath(editActionAnnotationPath).target as Action | null;\n\t\tif (editAction?.annotations?.Core?.OperationAvailable === null) {\n\t\t\t// We disabled action advertisement but kept it in the code for the time being\n\t\t\t//return \"{= ${#\" + editActionName + \"} ? true : false }\";\n\t\t} else if ((viewLevel as number) > 1) {\n\t\t\t// Edit button is enabled based on the update restrictions of the sub-OP\n\t\t\tif (updateRestrictions !== undefined) {\n\t\t\t\treturn and(\n\t\t\t\t\tequal(getExpressionFromAnnotation(updateRestrictions), true),\n\t\t\t\t\tequal(pathInModel(\"rootEditEnabled\", \"internal\"), true)\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\treturn equal(pathInModel(\"rootEditEnabled\", \"internal\"), true);\n\t\t\t}\n\t\t} else {\n\t\t\treturn getEnabledForAnnotationActionExpression(converterContext, editAction ?? undefined);\n\t\t}\n\t}\n\treturn constant(true);\n}\n\nexport function getEditButtonEnabled(\n\tconverterContext: ConverterContext<PageContextPathTarget>,\n\tupdateRestrictions?: PropertyAnnotationValue<Boolean>,\n\tviewLevel?: number | undefined\n): CompiledBindingToolkitExpression {\n\treturn compileExpression(getEditButtonEnabledExpression(converterContext, updateRestrictions, viewLevel));\n}\n\nexport function getHeaderDefaultActions(\n\tconverterContext: ConverterContext<PageContextPathTarget>,\n\tcapabilities?: EnvironmentCapabilities\n): BaseAction[] {\n\tconst sContextPath = converterContext.getContextPath();\n\tconst rootEntitySetPath = ModelHelper.getRootEntitySetPath(sContextPath);\n\tconst rootConverterContext = converterContext.getConverterContextFor<PageContextPathTarget>(\"/\" + rootEntitySetPath);\n\tconst entitySet = converterContext.getEntitySet(),\n\t\tentityType = converterContext.getEntityType(),\n\t\trootEntitySet = rootConverterContext.getEntitySet(),\n\t\trootEntityType = rootConverterContext.getEntityType(),\n\t\tstickySessionSupported = ModelHelper.getStickySession(rootEntitySet), //for sticky app\n\t\tdraftRoot = ModelHelper.getDraftRoot(rootEntitySet), //entitySet && entitySet.annotations.Common?.DraftRoot,\n\t\tcollaborationOnRoot = ModelHelper.isCollaborationDraftSupportedFromConverterContext(converterContext) && draftRoot,\n\t\tdraftNode = ModelHelper.getDraftNode(rootEntitySet),\n\t\tentityDeleteRestrictions = entitySet && entitySet.annotations?.Capabilities?.DeleteRestrictions,\n\t\trootUpdateHidden = ModelHelper.isUpdateHidden(rootEntitySet, rootEntityType),\n\t\tupdateHidden = rootEntitySet && isEntitySet(rootEntitySet) && rootUpdateHidden?.valueOf(),\n\t\tdataModelObjectPath = converterContext.getDataModelObjectPath(),\n\t\tisParentDeletable = isPathDeletable(dataModelObjectPath, {\n\t\t\tpathVisitor: (path: string, navigationPaths: string[]) =>\n\t\t\t\tsingletonPathVisitor(path, converterContext.getConvertedTypes(), navigationPaths)\n\t\t}),\n\t\tparentEntitySetDeletable = isParentDeletable ? compileExpression(isParentDeletable) : isParentDeletable,\n\t\tidentificationDataFieldForActions = getIdentificationDataFieldForActionsOrGroups(converterContext.getEntityType(), false);\n\n\tconst copyDataField =\n\t\tconverterContext.getManifestWrapper().getViewLevel() === 1\n\t\t\t? getCopyAction(\n\t\t\t\t\tidentificationDataFieldForActions.filter((dataField) => {\n\t\t\t\t\t\tif (dataField.$Type === UIAnnotationTypes.DataFieldForAction) {\n\t\t\t\t\t\t\treturn dataFieldIsCopyAction(dataField);\n\t\t\t\t\t\t}\n\t\t\t\t\t}) as DataFieldForAction[]\n\t\t\t  )\n\t\t\t: undefined;\n\n\tconst headerDataFieldForActions = identificationDataFieldForActions.filter((dataField) => {\n\t\treturn !dataFieldIsCopyAction(dataField as DataFieldForActionTypes);\n\t});\n\n\t// Initialize actions and start with draft actions if available since they should appear in the first\n\t// leftmost position in the actions area of the OP header\n\t// This is more like a placeholder than a single action, since this controls not only the templating of\n\t// the button for switching between draft and active document versions but also the controls for\n\t// the collaborative draft fragment.\n\tconst headerActions: BaseAction[] = [];\n\tif (isEntitySet(entitySet) && draftRoot?.EditAction && updateHidden !== true) {\n\t\theaderActions.push({ type: ActionType.DraftActions, key: \"DraftActions\" });\n\t}\n\n\tconst viewLevel = converterContext.getManifestWrapper().getViewLevel();\n\tconst updatablePropertyPath = viewLevel > 1 ? entitySet?.annotations.Capabilities?.UpdateRestrictions?.Updatable : undefined;\n\tif (draftRoot || draftNode) {\n\t\theaderActions.push({ type: ActionType.CollaborationAvatars, key: \"CollaborationAvatars\" });\n\t}\n\t// Then add the \"Critical\" DataFieldForActions and DataFieldForActionGroups\n\t// Prioritizes actions and action groups that have the Criticality annotation, placing them before those without the annotation\n\tcomputeActionsAndActionGroups(headerActions, true, headerDataFieldForActions, converterContext);\n\n\t// Then the edit action if it exists\n\tif ((draftRoot?.EditAction || stickySessionSupported?.EditAction) && updateHidden !== true) {\n\t\tlet visible = getEditButtonVisibility(\n\t\t\tconverterContext,\n\t\t\trootUpdateHidden,\n\t\t\trootConverterContext,\n\t\t\tModelHelper.isUpdateHidden(entitySet, entityType),\n\t\t\tviewLevel,\n\t\t\tcapabilities\n\t\t);\n\t\tif (collaborationOnRoot) {\n\t\t\tvisible = and(visible, not(equal(UI.hasCollaborationAuthorization, false)));\n\t\t}\n\t\theaderActions.push({\n\t\t\ttype: ActionType.Primary,\n\t\t\tkey: \"EditAction\",\n\t\t\tvisible: compileExpression(visible),\n\t\t\tenabled: getEditButtonEnabled(rootConverterContext, updatablePropertyPath, viewLevel)\n\t\t});\n\t}\n\t// Then the delete action if we're not statically not deletable\n\tif (\n\t\t(parentEntitySetDeletable && parentEntitySetDeletable !== \"false\") ||\n\t\t(entityDeleteRestrictions?.Deletable?.valueOf() !== false && parentEntitySetDeletable !== \"false\")\n\t) {\n\t\tconst deleteHidden = ModelHelper.getDeleteHidden(entitySet, entityType);\n\t\tlet visible = getDeleteButtonVisibility(converterContext, deleteHidden);\n\t\tif (collaborationOnRoot) {\n\t\t\tvisible = and(visible, not(equal(UI.hasCollaborationAuthorization, false)));\n\t\t}\n\n\t\theaderActions.push({\n\t\t\ttype: ActionType.Secondary,\n\t\t\tkey: \"DeleteAction\",\n\t\t\tvisible: compileExpression(visible),\n\t\t\tenabled: compileExpression(getDeleteButtonEnabled(entityDeleteRestrictions?.Deletable, isParentDeletable, converterContext)),\n\t\t\tparentEntityDeleteEnabled: parentEntitySetDeletable\n\t\t});\n\t}\n\n\tif (copyDataField) {\n\t\theaderActions.push({\n\t\t\t...getDataFieldAnnotationAction(copyDataField, converterContext),\n\t\t\ttype: ActionType.Copy,\n\t\t\ttext: copyDataField.Label?.toString() ?? Library.getResourceBundleFor(\"sap.fe.core\")!.getText(\"C_COMMON_COPY\")\n\t\t});\n\t}\n\n\tconst headerDataFieldForIBNActions = getIdentificationDataFieldForIBNActions(converterContext.getEntityType(), false);\n\n\theaderDataFieldForIBNActions\n\t\t.filter((dataField) => {\n\t\t\tconst criticality = compileExpression(getExpressionFromAnnotation(dataField?.Criticality));\n\t\t\treturn !IMPORTANT_CRITICALITIES.includes(criticality!);\n\t\t})\n\t\t.forEach((dataField) => {\n\t\t\tif (dataField.RequiresContext?.valueOf() === true) {\n\t\t\t\tthrow new Error(`RequiresContext property should not be true for header IBN action : ${dataField.Label}`);\n\t\t\t}\n\t\t\tif (dataField.Inline?.valueOf() === true) {\n\t\t\t\tthrow new Error(`Inline property should not be true for header IBN action : ${dataField.Label}`);\n\t\t\t}\n\t\t\tconst oNavigationParams = {\n\t\t\t\tsemanticObjectMapping: getSemanticObjectMapping(dataField.Mapping)\n\t\t\t};\n\n\t\t\theaderActions.push({\n\t\t\t\ttype: ActionType.DataFieldForIntentBasedNavigation,\n\t\t\t\ttext: dataField.Label?.toString(),\n\t\t\t\tannotationPath: converterContext.getEntitySetBasedAnnotationPath(dataField.fullyQualifiedName),\n\t\t\t\tbuttonType: ButtonType.Ghost,\n\t\t\t\tvisible: compileExpression(\n\t\t\t\t\tand(\n\t\t\t\t\t\tnot(equal(getExpressionFromAnnotation(dataField.annotations?.UI?.Hidden), true)),\n\t\t\t\t\t\tnot(equal(pathInModel(\"shellNavigationNotAvailable\", \"internal\"), true))\n\t\t\t\t\t)\n\t\t\t\t),\n\t\t\t\tenabled:\n\t\t\t\t\tdataField.NavigationAvailable !== undefined\n\t\t\t\t\t\t? compileExpression(equal(getExpressionFromAnnotation(dataField.NavigationAvailable), true))\n\t\t\t\t\t\t: true,\n\t\t\t\tkey: KeyHelper.generateKeyFromDataField(dataField),\n\t\t\t\tisNavigable: true,\n\t\t\t\tpress: compileExpression(\n\t\t\t\t\tfn(\"._intentBasedNavigation.navigate\", [\n\t\t\t\t\t\tgetExpressionFromAnnotation(dataField.SemanticObject),\n\t\t\t\t\t\tgetExpressionFromAnnotation(dataField.Action),\n\t\t\t\t\t\toNavigationParams\n\t\t\t\t\t])\n\t\t\t\t),\n\t\t\t\tcustomData: compileExpression({\n\t\t\t\t\tsemanticObject: getExpressionFromAnnotation(dataField.SemanticObject),\n\t\t\t\t\taction: getExpressionFromAnnotation(dataField.Action)\n\t\t\t\t})\n\t\t\t} as AnnotationAction);\n\t\t});\n\t// Finally the non critical DataFieldForActions and DataFieldForActionGroups\n\tcomputeActionsAndActionGroups(headerActions, false, headerDataFieldForActions, converterContext);\n\n\treturn headerActions;\n}\n\nexport function getHiddenHeaderActions(converterContext: ConverterContext<PageContextPathTarget>): BaseAction[] {\n\tconst entityType = converterContext.getEntityType();\n\tconst hiddenActions = (entityType.annotations?.UI?.Identification?.filter((identificationDataField) => {\n\t\treturn identificationDataField?.annotations?.UI?.Hidden?.valueOf() === true;\n\t}) || []) as DataFieldForActionTypes[];\n\treturn hiddenActions.map((dataField) => {\n\t\treturn {\n\t\t\ttype: ActionType.Default,\n\t\t\tkey: KeyHelper.generateKeyFromDataField(dataField)\n\t\t};\n\t});\n}\n\nexport function getFooterDefaultActions(\n\tviewLevel: number,\n\tconverterContext: ConverterContext<PageContextPathTarget>,\n\tcapabilities?: EnvironmentCapabilities\n): BaseAction[] {\n\tconst entitySet = converterContext.getEntitySet();\n\tconst entityType = converterContext.getEntityType();\n\tconst stickySessionSupported = ModelHelper.getStickySession(entitySet), //for sticky app\n\t\tentitySetDraftRoot =\n\t\t\tisEntitySet(entitySet) &&\n\t\t\t(entitySet.annotations.Common?.DraftRoot?.term ?? entitySet.annotations.Session?.StickySessionSupported?.term),\n\t\tconditionSave = Boolean(\n\t\t\tentitySetDraftRoot === CommonAnnotationTerms.DraftRoot ||\n\t\t\t\t(capabilities?.HiddenDraft as HiddenDraft)?.enabled ||\n\t\t\t\t(stickySessionSupported && stickySessionSupported?.SaveAction)\n\t\t),\n\t\tconditionApply = viewLevel > 1 && !(capabilities?.HiddenDraft as HiddenDraft)?.enabled,\n\t\tconditionCancel = Boolean(\n\t\t\tentitySetDraftRoot === CommonAnnotationTerms.DraftRoot ||\n\t\t\t\t(capabilities?.HiddenDraft as HiddenDraft)?.enabled ||\n\t\t\t\t(stickySessionSupported && stickySessionSupported?.DiscardAction)\n\t\t),\n\t\tconditionCreateNext =\n\t\t\tviewLevel > 1 &&\n\t\t\t(capabilities?.HiddenDraft as HiddenDraft)?.enabled &&\n\t\t\t!(capabilities?.HiddenDraft as HiddenDraft)?.hideCreateNext;\n\n\t// Retrieve all determining actions\n\tconst footerDataFieldForActions = getIdentificationDataFieldForActions(converterContext.getEntityType(), true);\n\n\t// First add the \"Critical\" DataFieldForActions\n\tconst footerActions: BaseAction[] = footerDataFieldForActions\n\t\t.filter((dataField) => {\n\t\t\tconst criticality = compileExpression(getExpressionFromAnnotation(dataField?.Criticality));\n\t\t\treturn criticality && IMPORTANT_CRITICALITIES.includes(criticality);\n\t\t})\n\t\t.map((dataField) => {\n\t\t\treturn getDataFieldAnnotationAction(dataField, converterContext);\n\t\t});\n\tif (conditionCreateNext) {\n\t\tfooterActions.push({ type: ActionType.CreateNext, key: \"CreateNextAction\" });\n\t}\n\t// Then the save action if it exists\n\tif (entitySet?.entityTypeName === entityType?.fullyQualifiedName && conditionSave) {\n\t\tfooterActions.push({ type: ActionType.Primary, key: \"SaveAction\" });\n\t}\n\n\t// Then the apply action if it exists\n\tif (conditionApply) {\n\t\tfooterActions.push({ type: ActionType.DefaultApply, key: \"ApplyAction\" });\n\t}\n\t// Then the non critical DataFieldForActions\n\tfooterDataFieldForActions\n\t\t.filter((dataField) => {\n\t\t\tconst criticality = compileExpression(getExpressionFromAnnotation(dataField?.Criticality));\n\t\t\treturn criticality && !IMPORTANT_CRITICALITIES.includes(criticality);\n\t\t})\n\t\t.forEach((dataField) => {\n\t\t\tfooterActions.push(getDataFieldAnnotationAction(dataField, converterContext));\n\t\t});\n\n\t// Then the cancel action if it exists\n\tif (conditionCancel) {\n\t\tfooterActions.push({\n\t\t\ttype: ActionType.Secondary,\n\t\t\tkey: \"CancelAction\",\n\t\t\tposition: { placement: Placement.End }\n\t\t});\n\t}\n\treturn footerActions;\n}\n\nfunction getDataFieldAnnotationAction(\n\tdataField: DataFieldForActionTypes,\n\tconverterContext: ConverterContext<PageContextPathTarget>\n): AnnotationAction {\n\tlet isVisibleExp = isVisible(dataField);\n\tconst collaborationOnRoot =\n\t\tModelHelper.isCollaborationDraftSupportedFromConverterContext(converterContext) &&\n\t\tModelHelper.getDraftRoot(converterContext.getEntitySet());\n\tif (collaborationOnRoot) {\n\t\tisVisibleExp = and(isVisibleExp, not(equal(UI.hasCollaborationAuthorization, false)));\n\t}\n\treturn {\n\t\ttype: ActionType.DataFieldForAction,\n\t\tannotationPath: converterContext.getEntitySetBasedAnnotationPath(dataField.fullyQualifiedName),\n\t\tkey: KeyHelper.generateKeyFromDataField(dataField),\n\t\tvisible: compileExpression(isVisibleExp),\n\t\tenabled: getEnabledForAnnotationAction(converterContext, dataField.ActionTarget),\n\t\tisNavigable: true,\n\t\tisAIOperation: isActionAIOperation(dataField) === true || undefined\n\t};\n}\n\n/**\n * Adds actions and action groups to the headerActions array, prioritizing them according to their criticality.\n * @param headerActions Array with all the current header actions in it\n * @param prioritizeCriticality Flag to determine the priority of the criticality action or actionGroups inside headerActions\n * @param headerDataFieldForActionsOrGroups All actions and action groups from the identification annotation with CopyAction filtered out\n * @param converterContext Instance of the converter context\n */\nfunction computeActionsAndActionGroups(\n\theaderActions: BaseAction[],\n\tprioritizeCriticality: boolean,\n\theaderDataFieldForActionsOrGroups: (DataFieldForActionTypes | DataFieldForActionGroupTypes)[],\n\tconverterContext: ConverterContext<PageContextPathTarget>\n): void {\n\theaderDataFieldForActionsOrGroups\n\t\t.filter((dataField) => {\n\t\t\tconst criticality = compileExpression(getExpressionFromAnnotation(dataField?.Criticality));\n\t\t\treturn prioritizeCriticality ? IMPORTANT_CRITICALITIES.includes(criticality!) : !IMPORTANT_CRITICALITIES.includes(criticality!);\n\t\t})\n\t\t.forEach((dataField) => {\n\t\t\tif (dataField.$Type === UIAnnotationTypes.DataFieldForAction) {\n\t\t\t\theaderActions.push(getDataFieldAnnotationAction(dataField, converterContext));\n\t\t\t} else if (dataField.$Type === UIAnnotationTypes.DataFieldForActionGroup) {\n\t\t\t\tlet isVisibleExp = not(equal(getExpressionFromAnnotation(dataField.annotations?.UI?.Hidden), true));\n\t\t\t\tconst collaborationOnRoot =\n\t\t\t\t\tModelHelper.isCollaborationDraftSupportedFromConverterContext(converterContext) &&\n\t\t\t\t\tModelHelper.getDraftRoot(converterContext.getEntitySet());\n\t\t\t\tif (collaborationOnRoot) {\n\t\t\t\t\tisVisibleExp = and(isVisibleExp, not(equal(UI.hasCollaborationAuthorization, false)));\n\t\t\t\t}\n\t\t\t\theaderActions.push({\n\t\t\t\t\ttype: ActionType.Menu,\n\t\t\t\t\ttext: dataField.Label as string,\n\t\t\t\t\tkey: KeyHelper.generateKeyFromDataField(dataField),\n\t\t\t\t\tid: KeyHelper.generateKeyFromDataField(dataField),\n\t\t\t\t\tvisible: compileExpression(isVisibleExp),\n\t\t\t\t\tmenu: dataField.Actions.map((action) =>\n\t\t\t\t\t\tgetDataFieldAnnotationAction(action as DataFieldForActionTypes, converterContext)\n\t\t\t\t\t),\n\t\t\t\t\tisAIOperation: isMenuAIOperation(dataField.Actions) === true || undefined\n\t\t\t\t});\n\t\t\t}\n\t\t});\n}\n"],"mappings":"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","ignoreList":[]}