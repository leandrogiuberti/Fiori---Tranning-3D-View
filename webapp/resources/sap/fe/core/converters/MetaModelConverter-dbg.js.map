{"version":3,"names":["parsePropertyValue","annotationObject","propertyKey","currentTarget","annotationsLists","oCapabilities","value","type","String","Bool","Int","Array","isArray","collectionValue","Collection","map","subAnnotationObject","subAnnotationObjectIndex","parseAnnotationObject","length","hasOwnProperty","$Path","undefined","Path","$Decimal","Decimal","parseFloat","$PropertyPath","PropertyPath","$NavigationPropertyPath","NavigationPropertyPath","$If","$And","$Or","$Not","$Eq","$Ne","$Gt","$Ge","$Lt","$Le","$Apply","$Function","$AnnotationPath","AnnotationPath","$EnumMember","EnumMember","Record","name","currentObjectTarget","parsedAnnotationObject","parsedAnnotationCollection","collection","subAnnotationIndex","parsedAnnotationObjectRecord","propertyValues","$Type","Object","keys","forEach","startsWith","push","createAnnotationLists","getOrCreateAnnotationList","target","annotations","createReferenceFacetId","referenceFacet","id","ID","Target","prepareId","removeChartAnnotations","filter","oRecord","recordAsRefFacet","includes","removeIBNAnnotations","handlePresentationVariant","annotationObjects","annotationTarget","annotationLists","outAnnotationObject","MicroChart","loadLibrary","annotationKey","IntentBasedNavigation","fieldGroupAnnotation","Data","presentationVariant","Chart","Visualizations","filterRestrictions","FilterExpressionRestrictions","some","FilterExpressionRestriction","Property","AllowedExpressions","fullyQualifiedName","currentOutAnnotationObject","finalKey","annotationOfAnnotationSplit","split","annotationQualifierSplit","qualifier","term","currentAnnotationTarget","annotationObjectToParse","record","typeValue","prepareProperty","propertyDefinition","entityTypeObject","propertyName","_type","maxLength","$MaxLength","precision","$Precision","scale","$Scale","nullable","$Nullable","prepareNavigationProperty","navPropertyDefinition","navPropertyName","referentialConstraint","$ReferentialConstraint","sourcePropertyName","sourceTypeName","sourceProperty","targetTypeName","targetProperty","navigationProperty","partner","$Partner","isCollection","$isCollection","containsTarget","$ContainsTarget","prepareNavigationPropertyBinding","navigationPropertyBinding","entityContainerName","fromEntries","entries","_ref","path","prepareEntitySet","entitySetDefinition","entitySetName","$NavigationPropertyBinding","entityTypeName","prepareSingleton","singletonDefinition","singletonName","prepareActionImport","actionImport","actionImportName","actionName","$kind","$Action","prepareTypeDefinition","typeDefinition","typeName","namespacePrefix","typeObject","substring","underlyingType","$UnderlyingType","prepareComplexType","complexTypeDefinition","complexTypeName","complexTypeObject","properties","navigationProperties","complexTypeProperties","propertyNameOrNot","sort","a","b","complexTypeNavigationProperties","prepareEntityKeys","entityTypeDefinition","oMetaModelData","$Key","$BaseType","prepareEntityType","metaModelData","ignoreDatafieldDefault","entityType","entityProperties","actions","key","property","entityKey","find","entityTypeAnnotations","$Annotations","filterFacets","filterFacetAnnotation","headerInfoAnnotation","TypeName","TypeNamePlural","Title","Value","entityProperty","prepareAction","actionRawData","overloadParameters","$Parameter","$IsBound","overload","parameter","join","parameters","isBound","isFunction","sourceType","returnType","$ReturnType","returnCollection","param","$Name","parseEntityContainer","entityContainerMetadata","schema","entityContainer","elementName","elementValue","entitySets","singletons","actionImports","parseAnnotations","capabilities","values","parseSchema","metamodelObject","namespace","slice","entityTypes","complexTypes","typeDefinitions","associations","associationSets","parseMetaModelElement","subElementValue","parseMetaModel","metaModel","arguments","DefaultEnvironmentCapabilities","result","identification","version","references","AnnotationConverter","lazy","getObject","_exports","convertedMetaModelMap","metaModelIDMap","metaModelMap","WeakMap","virtualPropertiesMap","convertTypes","oMetaModel","metaModelID","parsedOutput","convert","criticality","fn","getVirtualCriticalityExpression","metaModelSymbol","set","oError","Error","registerVirtualProperty","convertedTypes","fnVirtualProperty","viewId","getMetaModelById","symbol","get","getConvertedTypes","oContext","getModel","isA","deleteModelCacheData","convertMetaModelContext","oMetaModelContext","bIncludeVisitedObjects","oConvertedMetadata","sPath","getPath","aPathSplit","firstPart","beginIndex","targetEntitySet","entitySet","singleton","relativePath","localObjects","relativeSplit","idx","currentEntitySet","sNavPropToCheck","replace","aNavProps","targetEntityType","sNavProp","targetNavProp","navProp","targetType","shift","oTarget","resolvePath","visitedObjects","concat","action","parameterName","endsWith","getInvolvedDataModelObjects","oEntitySetMetaModelContext","metaModelContext","targetEntitySetLocation","getInvolvedDataModelObjectFromPath","onlyServiceObjects","dataModelObjects","visitedObject","isServiceObject","isEntityType","isEntityContainer","rootEntitySet","currentEntityType","currentObject","navigatedPath","i","isNavigationProperty","boundEntitySet","isEntitySet","isSingleton","startingEntitySet","startingIndex","indexOf","requiredDataModelObjects","outDataModelPath","targetObject","contextLocation","getInvolvedDataModelObjectEntityKeys","context","getMetaModel","metaPath","getMetaPath","dataModel","getMetaContext","rootSemanticKeys","Common","SemanticKey","semanticKeys","rootTechnicalKeys","technicalKeys","extractModelAndPath","modelId","targetPath","getInvolvedDataModelObjectsForTargetPath","metaContext","getContext","getVirtualBindingExpression","virtualKey","pathInfos","method","virtualProperty","virtualPropertyFn","expression","constant","criticalityProperty","Criticality","criticalityExpression","getExpressionFromAnnotation","bindingPath","formatResult"],"sourceRoot":".","sources":["MetaModelConverter.ts"],"sourcesContent":["// This file is retrieved from @sap-ux/annotation-converter, shared code with tool suite\nimport type {\n\tActionParameter,\n\tAnnotationList,\n\tAnnotationRecord,\n\tAnnotationTerm,\n\tConvertedMetadata,\n\tEntitySet,\n\tEntityType,\n\tExpression,\n\tNavigationProperty,\n\tRawAction,\n\tRawActionImport,\n\tRawAnnotation,\n\tRawComplexType,\n\tRawEntitySet,\n\tRawEntityType,\n\tRawMetadata,\n\tRawNavigationPropertyBinding,\n\tRawProperty,\n\tRawSchema,\n\tRawSingleton,\n\tRawTypeDefinition,\n\tRawV4NavigationProperty,\n\tReferentialConstraint,\n\tServiceObject,\n\tServiceObjectAndAnnotation,\n\tSingleton\n} from \"@sap-ux/vocabularies-types\";\nimport type { ApplyExpression, Collection, CollectionExpression, PropertyValue } from \"@sap-ux/vocabularies-types/BaseEdm\";\nimport type { AnnotationPath, PrimitiveType, PropertyAnnotationValue, RecordComplexType } from \"@sap-ux/vocabularies-types/Edm\";\nimport type { PropertyAnnotations_Analytics } from \"@sap-ux/vocabularies-types/vocabularies/Analytics_Edm\";\nimport type { FilterRestrictions } from \"@sap-ux/vocabularies-types/vocabularies/Capabilities\";\nimport type {\n\tEntitySetAnnotations_Capabilities,\n\tEntityTypeAnnotations_Capabilities,\n\tPropertyAnnotations_Capabilities\n} from \"@sap-ux/vocabularies-types/vocabularies/Capabilities_Edm\";\nimport type { PropertyAnnotations_Common } from \"@sap-ux/vocabularies-types/vocabularies/Common_Edm\";\nimport type { PropertyAnnotations_Communication } from \"@sap-ux/vocabularies-types/vocabularies/Communication_Edm\";\nimport type { PropertyAnnotations_Core } from \"@sap-ux/vocabularies-types/vocabularies/Core_Edm\";\nimport type { PropertyAnnotations_Measures } from \"@sap-ux/vocabularies-types/vocabularies/Measures_Edm\";\nimport type { PropertyAnnotations_PersonalData } from \"@sap-ux/vocabularies-types/vocabularies/PersonalData_Edm\";\nimport type { PropertyAnnotations_Session } from \"@sap-ux/vocabularies-types/vocabularies/Session_Edm\";\nimport type {\n\tChart,\n\tDataField,\n\tDataFieldAbstractTypes,\n\tDataPoint,\n\tDataPointType,\n\tFacetTypes,\n\tFieldGroup,\n\tFilterFacets,\n\tHeaderFacets,\n\tHeaderInfo,\n\tLineItem,\n\tPresentationVariant,\n\tReferenceFacet,\n\tTextArrangement\n} from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport { UIAnnotationTerms, UIAnnotationTypes } from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport type {\n\tEntitySetAnnotations_UI,\n\tEntityTypeAnnotations_UI,\n\tPropertyAnnotations_UI\n} from \"@sap-ux/vocabularies-types/vocabularies/UI_Edm\";\nimport type { BindingToolkitExpression } from \"sap/fe/base/BindingToolkit\";\nimport { constant, formatResult, getExpressionFromAnnotation } from \"sap/fe/base/BindingToolkit\";\nimport { AnnotationConverter } from \"sap/fe/core/converters/common\";\nimport {\n\tisEntityContainer,\n\tisEntitySet,\n\tisEntityType,\n\tisNavigationProperty,\n\tisServiceObject,\n\tisSingleton\n} from \"sap/fe/core/helpers/TypeGuards\";\nimport type { EnvironmentCapabilities } from \"sap/fe/core/services/EnvironmentServiceFactory\";\nimport { DefaultEnvironmentCapabilities } from \"sap/fe/core/services/EnvironmentServiceFactory\";\nimport type { DataModelObjectContext, DataModelObjectPath } from \"sap/fe/core/templating/DataModelPathHelper\";\nimport type Context from \"sap/ui/model/Context\";\nimport type { default as ODataV4Context } from \"sap/ui/model/odata/v4/Context\";\nimport type ODataMetaModel from \"sap/ui/model/odata/v4/ODataMetaModel\";\nimport type { ExpandPathType, MetaModelEnum, MetaModelType, Rename } from \"types/metamodel_types\";\nimport { prepareId } from \"../helpers/StableIdHelper\";\n\nexport type MetaModelActionParameter = {\n\t$Type: string;\n\t$Name: string;\n\t$Nullable?: boolean;\n\t$MaxLength?: number;\n\t$Precision?: number;\n\t$Scale?: number;\n\t$isCollection?: boolean;\n};\nexport type MetaModelAction = {\n\t$kind: \"Action\" | \"Function\";\n\t$IsBound: boolean;\n\t$EntitySetPath: string;\n\t$Parameter: MetaModelActionParameter[];\n\t$ReturnType: {\n\t\t$Type: string;\n\t\t$isCollection?: boolean;\n\t};\n};\n\ntype MetaModelAnnotation = null | string | boolean | number | MetaModelAnnotationRecord;\ntype MetaModelAnnotationRecord = {\n\t$Type: string;\n\t$PropertyPath?: string;\n\t$Path?: string;\n\t$Decimal?: string;\n\t$If?: unknown;\n\t$And?: unknown;\n\t$Or?: unknown;\n\t$Not?: unknown;\n\t$Eq?: unknown;\n\t$Ne?: unknown;\n\t$Gt?: unknown;\n\t$Ge?: unknown;\n\t$Lt?: unknown;\n\t$Le?: unknown;\n\t$Apply?: unknown;\n\t$Function?: unknown;\n\t$AnnotationPath?: string;\n\t$EnumMember?: string;\n\t$NavigationPropertyPath?: string;\n} & {\n\t[propertyKey: string]: MetaModelAnnotation;\n};\nfunction parsePropertyValue(\n\tannotationObject: MetaModelAnnotation,\n\tpropertyKey: string,\n\tcurrentTarget: string,\n\tannotationsLists: Record<string, AnnotationList>,\n\toCapabilities: EnvironmentCapabilities\n): { name: string; value: Expression } {\n\tlet value!: Expression;\n\tif (annotationObject === null) {\n\t\tvalue = { type: \"Null\" };\n\t} else if (typeof annotationObject === \"string\") {\n\t\tvalue = { type: \"String\", String: annotationObject };\n\t} else if (typeof annotationObject === \"boolean\") {\n\t\tvalue = { type: \"Bool\", Bool: annotationObject };\n\t} else if (typeof annotationObject === \"number\") {\n\t\tvalue = { type: \"Int\", Int: annotationObject };\n\t} else if (Array.isArray(annotationObject)) {\n\t\tconst collectionValue: CollectionExpression = {\n\t\t\ttype: \"Collection\",\n\t\t\tCollection: annotationObject.map((subAnnotationObject, subAnnotationObjectIndex) =>\n\t\t\t\tparseAnnotationObject(\n\t\t\t\t\tsubAnnotationObject,\n\t\t\t\t\t`${currentTarget}/${propertyKey}/${subAnnotationObjectIndex}`,\n\t\t\t\t\tannotationsLists,\n\t\t\t\t\toCapabilities\n\t\t\t\t)\n\t\t\t) as Collection\n\t\t};\n\t\tif (annotationObject.length > 0) {\n\t\t\tif (annotationObject[0].hasOwnProperty(\"$PropertyPath\")) {\n\t\t\t\tcollectionValue.Collection.type = \"PropertyPath\";\n\t\t\t} else if (annotationObject[0].hasOwnProperty(\"$Path\")) {\n\t\t\t\tcollectionValue.Collection.type = \"Path\";\n\t\t\t} else if (annotationObject[0].hasOwnProperty(\"$NavigationPropertyPath\")) {\n\t\t\t\tcollectionValue.Collection.type = \"NavigationPropertyPath\";\n\t\t\t} else if (annotationObject[0].hasOwnProperty(\"$AnnotationPath\")) {\n\t\t\t\tcollectionValue.Collection.type = \"AnnotationPath\";\n\t\t\t} else if (annotationObject[0].hasOwnProperty(\"$Type\")) {\n\t\t\t\tcollectionValue.Collection.type = \"Record\";\n\t\t\t} else if (annotationObject[0].hasOwnProperty(\"$If\")) {\n\t\t\t\tcollectionValue.Collection.type = \"If\";\n\t\t\t} else if (annotationObject[0].hasOwnProperty(\"$Or\")) {\n\t\t\t\tcollectionValue.Collection.type = \"Or\";\n\t\t\t} else if (annotationObject[0].hasOwnProperty(\"$And\")) {\n\t\t\t\tcollectionValue.Collection.type = \"And\";\n\t\t\t} else if (annotationObject[0].hasOwnProperty(\"$Eq\")) {\n\t\t\t\tcollectionValue.Collection.type = \"Eq\";\n\t\t\t} else if (annotationObject[0].hasOwnProperty(\"$Ne\")) {\n\t\t\t\tcollectionValue.Collection.type = \"Ne\";\n\t\t\t} else if (annotationObject[0].hasOwnProperty(\"$Not\")) {\n\t\t\t\tcollectionValue.Collection.type = \"Not\";\n\t\t\t} else if (annotationObject[0].hasOwnProperty(\"$Gt\")) {\n\t\t\t\tcollectionValue.Collection.type = \"Gt\";\n\t\t\t} else if (annotationObject[0].hasOwnProperty(\"$Ge\")) {\n\t\t\t\tcollectionValue.Collection.type = \"Ge\";\n\t\t\t} else if (annotationObject[0].hasOwnProperty(\"$Lt\")) {\n\t\t\t\tcollectionValue.Collection.type = \"Lt\";\n\t\t\t} else if (annotationObject[0].hasOwnProperty(\"$Le\")) {\n\t\t\t\tcollectionValue.Collection.type = \"Le\";\n\t\t\t} else if (annotationObject[0].hasOwnProperty(\"$Apply\")) {\n\t\t\t\tcollectionValue.Collection.type = \"Apply\";\n\t\t\t} else if (typeof annotationObject[0] === \"object\") {\n\t\t\t\t// $Type is optional...\n\t\t\t\tcollectionValue.Collection.type = \"Record\";\n\t\t\t} else {\n\t\t\t\tcollectionValue.Collection.type = \"String\";\n\t\t\t}\n\t\t}\n\t\tvalue = collectionValue;\n\t} else if (typeof annotationObject === \"object\") {\n\t\tif (annotationObject.$Path !== undefined) {\n\t\t\tvalue = { type: \"Path\", Path: annotationObject.$Path };\n\t\t} else if (annotationObject.$Decimal !== undefined) {\n\t\t\tvalue = { type: \"Decimal\", Decimal: parseFloat(annotationObject.$Decimal) };\n\t\t} else if (annotationObject.$PropertyPath !== undefined) {\n\t\t\tvalue = { type: \"PropertyPath\", PropertyPath: annotationObject.$PropertyPath };\n\t\t} else if (annotationObject.$NavigationPropertyPath !== undefined) {\n\t\t\tvalue = { type: \"NavigationPropertyPath\", NavigationPropertyPath: annotationObject.$NavigationPropertyPath };\n\t\t} else if (annotationObject.$If !== undefined) {\n\t\t\tvalue = { type: \"If\", $If: annotationObject.$If as [Expression, Expression, Expression] };\n\t\t} else if (annotationObject.$And !== undefined) {\n\t\t\tvalue = { type: \"And\", $And: annotationObject.$And as [Expression, Expression] };\n\t\t} else if (annotationObject.$Or !== undefined) {\n\t\t\tvalue = { type: \"Or\", $Or: annotationObject.$Or as [Expression, Expression] };\n\t\t} else if (annotationObject.$Not !== undefined) {\n\t\t\tvalue = { type: \"Not\", $Not: annotationObject.$Not as Expression };\n\t\t} else if (annotationObject.$Eq !== undefined) {\n\t\t\tvalue = { type: \"Eq\", $Eq: annotationObject.$Eq as [Expression, Expression] };\n\t\t} else if (annotationObject.$Ne !== undefined) {\n\t\t\tvalue = { type: \"Ne\", $Ne: annotationObject.$Ne as [Expression, Expression] };\n\t\t} else if (annotationObject.$Gt !== undefined) {\n\t\t\tvalue = { type: \"Gt\", $Gt: annotationObject.$Gt as [Expression, Expression] };\n\t\t} else if (annotationObject.$Ge !== undefined) {\n\t\t\tvalue = { type: \"Ge\", $Ge: annotationObject.$Ge as [Expression, Expression] };\n\t\t} else if (annotationObject.$Lt !== undefined) {\n\t\t\tvalue = { type: \"Lt\", $Lt: annotationObject.$Lt as [Expression, Expression] };\n\t\t} else if (annotationObject.$Le !== undefined) {\n\t\t\tvalue = { type: \"Le\", $Le: annotationObject.$Le as [Expression, Expression] };\n\t\t} else if (annotationObject.$Apply !== undefined) {\n\t\t\tvalue = { type: \"Apply\", $Apply: annotationObject.$Apply, $Function: annotationObject.$Function } as ApplyExpression;\n\t\t} else if (annotationObject.$AnnotationPath !== undefined) {\n\t\t\tvalue = { type: \"AnnotationPath\", AnnotationPath: annotationObject.$AnnotationPath };\n\t\t} else if (annotationObject.$EnumMember !== undefined) {\n\t\t\tvalue = { type: \"EnumMember\", EnumMember: annotationObject.$EnumMember };\n\t\t} else {\n\t\t\tvalue = {\n\t\t\t\ttype: \"Record\",\n\t\t\t\tRecord: parseAnnotationObject(annotationObject, currentTarget, annotationsLists, oCapabilities) as AnnotationRecord\n\t\t\t};\n\t\t}\n\t}\n\treturn {\n\t\tname: propertyKey,\n\t\tvalue\n\t};\n}\n\nfunction parseAnnotationObject(\n\tannotationObject: MetaModelAnnotation,\n\tcurrentObjectTarget: string,\n\tannotationsLists: Record<string, AnnotationList>,\n\toCapabilities: EnvironmentCapabilities\n): Expression | AnnotationRecord {\n\tlet parsedAnnotationObject: Expression | AnnotationRecord;\n\tif (annotationObject === null) {\n\t\tparsedAnnotationObject = { type: \"Null\" };\n\t} else if (typeof annotationObject === \"string\") {\n\t\tparsedAnnotationObject = { type: \"String\", String: annotationObject };\n\t} else if (typeof annotationObject === \"boolean\") {\n\t\tparsedAnnotationObject = { type: \"Bool\", Bool: annotationObject };\n\t} else if (typeof annotationObject === \"number\") {\n\t\tparsedAnnotationObject = { type: \"Int\", Int: annotationObject };\n\t} else if (Array.isArray(annotationObject)) {\n\t\tconst parsedAnnotationCollection = {\n\t\t\tcollection: annotationObject.map((subAnnotationObject, subAnnotationIndex) =>\n\t\t\t\tparseAnnotationObject(subAnnotationObject, `${currentObjectTarget}/${subAnnotationIndex}`, annotationsLists, oCapabilities)\n\t\t\t) as Collection\n\t\t};\n\t\tif (annotationObject.length > 0) {\n\t\t\tif (annotationObject[0].hasOwnProperty(\"$PropertyPath\")) {\n\t\t\t\tparsedAnnotationCollection.collection.type = \"PropertyPath\";\n\t\t\t} else if (annotationObject[0].hasOwnProperty(\"$Path\")) {\n\t\t\t\tparsedAnnotationCollection.collection.type = \"Path\";\n\t\t\t} else if (annotationObject[0].hasOwnProperty(\"$NavigationPropertyPath\")) {\n\t\t\t\tparsedAnnotationCollection.collection.type = \"NavigationPropertyPath\";\n\t\t\t} else if (annotationObject[0].hasOwnProperty(\"$AnnotationPath\")) {\n\t\t\t\tparsedAnnotationCollection.collection.type = \"AnnotationPath\";\n\t\t\t} else if (annotationObject[0].hasOwnProperty(\"$Type\")) {\n\t\t\t\tparsedAnnotationCollection.collection.type = \"Record\";\n\t\t\t} else if (annotationObject[0].hasOwnProperty(\"$If\")) {\n\t\t\t\tparsedAnnotationCollection.collection.type = \"If\";\n\t\t\t} else if (annotationObject[0].hasOwnProperty(\"$And\")) {\n\t\t\t\tparsedAnnotationCollection.collection.type = \"And\";\n\t\t\t} else if (annotationObject[0].hasOwnProperty(\"$Or\")) {\n\t\t\t\tparsedAnnotationCollection.collection.type = \"Or\";\n\t\t\t} else if (annotationObject[0].hasOwnProperty(\"$Eq\")) {\n\t\t\t\tparsedAnnotationCollection.collection.type = \"Eq\";\n\t\t\t} else if (annotationObject[0].hasOwnProperty(\"$Ne\")) {\n\t\t\t\tparsedAnnotationCollection.collection.type = \"Ne\";\n\t\t\t} else if (annotationObject[0].hasOwnProperty(\"$Not\")) {\n\t\t\t\tparsedAnnotationCollection.collection.type = \"Not\";\n\t\t\t} else if (annotationObject[0].hasOwnProperty(\"$Gt\")) {\n\t\t\t\tparsedAnnotationCollection.collection.type = \"Gt\";\n\t\t\t} else if (annotationObject[0].hasOwnProperty(\"$Ge\")) {\n\t\t\t\tparsedAnnotationCollection.collection.type = \"Ge\";\n\t\t\t} else if (annotationObject[0].hasOwnProperty(\"$Lt\")) {\n\t\t\t\tparsedAnnotationCollection.collection.type = \"Lt\";\n\t\t\t} else if (annotationObject[0].hasOwnProperty(\"$Le\")) {\n\t\t\t\tparsedAnnotationCollection.collection.type = \"Le\";\n\t\t\t} else if (annotationObject[0].hasOwnProperty(\"$Apply\")) {\n\t\t\t\tparsedAnnotationCollection.collection.type = \"Apply\";\n\t\t\t} else if (typeof annotationObject[0] === \"object\") {\n\t\t\t\tparsedAnnotationCollection.collection.type = \"Record\";\n\t\t\t} else {\n\t\t\t\tparsedAnnotationCollection.collection.type = \"String\";\n\t\t\t}\n\t\t}\n\t} else if (typeof annotationObject === \"object\") {\n\t\tif (annotationObject.$AnnotationPath !== undefined) {\n\t\t\tparsedAnnotationObject = { type: \"AnnotationPath\", AnnotationPath: annotationObject.$AnnotationPath };\n\t\t} else if (annotationObject.$Path !== undefined) {\n\t\t\tparsedAnnotationObject = { type: \"Path\", Path: annotationObject.$Path };\n\t\t} else if (annotationObject.$Decimal !== undefined) {\n\t\t\tparsedAnnotationObject = { type: \"Decimal\", Decimal: parseFloat(annotationObject.$Decimal) };\n\t\t} else if (annotationObject.$PropertyPath !== undefined) {\n\t\t\tparsedAnnotationObject = { type: \"PropertyPath\", PropertyPath: annotationObject.$PropertyPath };\n\t\t} else if (annotationObject.$If !== undefined) {\n\t\t\tparsedAnnotationObject = { type: \"If\", $If: annotationObject.$If as [Expression, Expression, Expression] };\n\t\t} else if (annotationObject.$And !== undefined) {\n\t\t\tparsedAnnotationObject = { type: \"And\", $And: annotationObject.$And as [Expression, Expression] };\n\t\t} else if (annotationObject.$Or !== undefined) {\n\t\t\tparsedAnnotationObject = { type: \"Or\", $Or: annotationObject.$Or as [Expression, Expression] };\n\t\t} else if (annotationObject.$Not !== undefined) {\n\t\t\tparsedAnnotationObject = { type: \"Not\", $Not: annotationObject.$Not as Expression };\n\t\t} else if (annotationObject.$Eq !== undefined) {\n\t\t\tparsedAnnotationObject = { type: \"Eq\", $Eq: annotationObject.$Eq as [Expression, Expression] };\n\t\t} else if (annotationObject.$Ne !== undefined) {\n\t\t\tparsedAnnotationObject = { type: \"Ne\", $Ne: annotationObject.$Ne as [Expression, Expression] };\n\t\t} else if (annotationObject.$Gt !== undefined) {\n\t\t\tparsedAnnotationObject = { type: \"Gt\", $Gt: annotationObject.$Gt as [Expression, Expression] };\n\t\t} else if (annotationObject.$Ge !== undefined) {\n\t\t\tparsedAnnotationObject = { type: \"Ge\", $Ge: annotationObject.$Ge as [Expression, Expression] };\n\t\t} else if (annotationObject.$Lt !== undefined) {\n\t\t\tparsedAnnotationObject = { type: \"Lt\", $Lt: annotationObject.$Lt as [Expression, Expression] };\n\t\t} else if (annotationObject.$Le !== undefined) {\n\t\t\tparsedAnnotationObject = { type: \"Le\", $Le: annotationObject.$Le as [Expression, Expression] };\n\t\t} else if (annotationObject.$Apply !== undefined) {\n\t\t\tparsedAnnotationObject = {\n\t\t\t\ttype: \"Apply\",\n\t\t\t\t$Apply: annotationObject.$Apply,\n\t\t\t\t$Function: annotationObject.$Function\n\t\t\t} as ApplyExpression;\n\t\t} else if (annotationObject.$NavigationPropertyPath !== undefined) {\n\t\t\tparsedAnnotationObject = {\n\t\t\t\ttype: \"NavigationPropertyPath\",\n\t\t\t\tNavigationPropertyPath: annotationObject.$NavigationPropertyPath\n\t\t\t};\n\t\t} else if (annotationObject.$EnumMember !== undefined) {\n\t\t\tparsedAnnotationObject = {\n\t\t\t\ttype: \"EnumMember\",\n\t\t\t\tEnumMember: annotationObject.$EnumMember\n\t\t\t};\n\t\t} else {\n\t\t\tconst parsedAnnotationObjectRecord: AnnotationRecord = {\n\t\t\t\ttype: \"Record\",\n\t\t\t\tpropertyValues: []\n\t\t\t};\n\t\t\tif (annotationObject.$Type) {\n\t\t\t\tparsedAnnotationObjectRecord.type = annotationObject.$Type;\n\t\t\t}\n\t\t\tconst propertyValues: PropertyValue[] = [];\n\t\t\tObject.keys(annotationObject).forEach((propertyKey) => {\n\t\t\t\tif (\n\t\t\t\t\tpropertyKey !== \"$Type\" &&\n\t\t\t\t\tpropertyKey !== \"$If\" &&\n\t\t\t\t\tpropertyKey !== \"$Apply\" &&\n\t\t\t\t\tpropertyKey !== \"$And\" &&\n\t\t\t\t\tpropertyKey !== \"$Or\" &&\n\t\t\t\t\tpropertyKey !== \"$Ne\" &&\n\t\t\t\t\tpropertyKey !== \"$Gt\" &&\n\t\t\t\t\tpropertyKey !== \"$Ge\" &&\n\t\t\t\t\tpropertyKey !== \"$Lt\" &&\n\t\t\t\t\tpropertyKey !== \"$Le\" &&\n\t\t\t\t\tpropertyKey !== \"$Not\" &&\n\t\t\t\t\tpropertyKey !== \"$Eq\" &&\n\t\t\t\t\t!propertyKey.startsWith(\"@\")\n\t\t\t\t) {\n\t\t\t\t\tpropertyValues.push(\n\t\t\t\t\t\tparsePropertyValue(annotationObject[propertyKey], propertyKey, currentObjectTarget, annotationsLists, oCapabilities)\n\t\t\t\t\t);\n\t\t\t\t} else if (propertyKey.startsWith(\"@\")) {\n\t\t\t\t\t// Annotation of annotation\n\t\t\t\t\tcreateAnnotationLists(\n\t\t\t\t\t\t{ [propertyKey]: annotationObject[propertyKey] },\n\t\t\t\t\t\tcurrentObjectTarget,\n\t\t\t\t\t\tannotationsLists,\n\t\t\t\t\t\toCapabilities\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\t\t\tparsedAnnotationObjectRecord.propertyValues = propertyValues;\n\t\t\tparsedAnnotationObject = parsedAnnotationObjectRecord;\n\t\t}\n\t}\n\treturn parsedAnnotationObject!;\n}\nfunction getOrCreateAnnotationList(target: string, annotationsLists: Record<string, AnnotationList>): AnnotationList {\n\tif (!annotationsLists.hasOwnProperty(target)) {\n\t\tannotationsLists[target] = {\n\t\t\ttarget: target,\n\t\t\tannotations: []\n\t\t};\n\t}\n\treturn annotationsLists[target];\n}\n\nfunction createReferenceFacetId(referenceFacet: MetaModelType<ReferenceFacet>): string | undefined {\n\tconst id = referenceFacet.ID ?? referenceFacet.Target?.$AnnotationPath;\n\treturn id ? prepareId(id) : id;\n}\n\nfunction removeChartAnnotations(annotationObject: MetaModelType<HeaderFacets> | MetaModelType<DataFieldAbstractTypes>[]): unknown[] {\n\treturn annotationObject.filter((oRecord: MetaModelType<FacetTypes> | MetaModelType<DataFieldAbstractTypes>): boolean => {\n\t\tconst recordAsRefFacet = oRecord as MetaModelType<ReferenceFacet>;\n\t\tif (recordAsRefFacet.Target && recordAsRefFacet.Target.$AnnotationPath) {\n\t\t\treturn !recordAsRefFacet.Target.$AnnotationPath.includes(`@${UIAnnotationTerms.Chart}`);\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t});\n}\n\nfunction removeIBNAnnotations(annotationObject: MetaModelType<DataFieldAbstractTypes>[]): MetaModelType<DataFieldAbstractTypes>[] {\n\treturn annotationObject.filter((oRecord: MetaModelType<DataFieldAbstractTypes>): boolean => {\n\t\treturn oRecord.$Type !== UIAnnotationTypes.DataFieldForIntentBasedNavigation;\n\t});\n}\n\nfunction handlePresentationVariant(\n\tannotationObject: ExpandPathType<AnnotationPath<Chart | DataPoint | LineItem>>[]\n): ExpandPathType<AnnotationPath<Chart | DataPoint | LineItem>>[] {\n\treturn annotationObject.filter((oRecord): boolean => {\n\t\treturn oRecord.$AnnotationPath !== `@${UIAnnotationTerms.Chart}`;\n\t});\n}\n\nfunction createAnnotationLists(\n\tannotationObjects: Record<string, unknown>,\n\tannotationTarget: string,\n\tannotationLists: Record<string, AnnotationList>,\n\toCapabilities: EnvironmentCapabilities\n): void {\n\tif (Object.keys(annotationObjects).length === 0) {\n\t\treturn;\n\t}\n\tconst outAnnotationObject = getOrCreateAnnotationList(annotationTarget, annotationLists);\n\tif (!oCapabilities.MicroChart) {\n\t\tdelete annotationObjects[`@${UIAnnotationTerms.Chart}`];\n\t} else {\n\t\toCapabilities.loadLibrary?.(\"sap.suite.ui.microchart\");\n\t}\n\n\tfor (const annotationKey in annotationObjects) {\n\t\tlet annotationObject = annotationObjects[annotationKey];\n\t\tswitch (annotationKey) {\n\t\t\tcase `@${UIAnnotationTerms.HeaderFacets}`:\n\t\t\t\tif (!oCapabilities.MicroChart) {\n\t\t\t\t\tannotationObject = removeChartAnnotations(annotationObject as MetaModelType<HeaderFacets>);\n\t\t\t\t\tannotationObjects[annotationKey] = annotationObject;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase `@${UIAnnotationTerms.Identification}`:\n\t\t\t\tif (!oCapabilities.IntentBasedNavigation) {\n\t\t\t\t\tannotationObject = removeIBNAnnotations(annotationObject as MetaModelType<DataFieldAbstractTypes>[]);\n\t\t\t\t\tannotationObjects[annotationKey] = annotationObject;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase `@${UIAnnotationTerms.LineItem}`:\n\t\t\t\tif (!oCapabilities.IntentBasedNavigation) {\n\t\t\t\t\tannotationObject = removeIBNAnnotations(annotationObject as MetaModelType<DataFieldAbstractTypes>[]);\n\t\t\t\t\tannotationObjects[annotationKey] = annotationObject;\n\t\t\t\t}\n\t\t\t\tif (!oCapabilities.MicroChart) {\n\t\t\t\t\tannotationObject = removeChartAnnotations(annotationObject as MetaModelType<DataFieldAbstractTypes>[]);\n\t\t\t\t\tannotationObjects[annotationKey] = annotationObject;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase `@${UIAnnotationTerms.FieldGroup}`:\n\t\t\t\tconst fieldGroupAnnotation = annotationObject as MetaModelType<FieldGroup>;\n\t\t\t\tif (!oCapabilities.IntentBasedNavigation && fieldGroupAnnotation.Data) {\n\t\t\t\t\tfieldGroupAnnotation.Data = removeIBNAnnotations(fieldGroupAnnotation.Data);\n\t\t\t\t\tannotationObjects[annotationKey] = annotationObject;\n\t\t\t\t}\n\t\t\t\tif (!oCapabilities.MicroChart && fieldGroupAnnotation.Data) {\n\t\t\t\t\tfieldGroupAnnotation.Data = removeChartAnnotations(\n\t\t\t\t\t\tfieldGroupAnnotation.Data\n\t\t\t\t\t) as MetaModelType<DataFieldAbstractTypes>[];\n\t\t\t\t\tannotationObjects[annotationKey] = annotationObject;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase `@${UIAnnotationTerms.PresentationVariant}`:\n\t\t\t\tconst presentationVariant = annotationObject as MetaModelType<PresentationVariant>;\n\t\t\t\tif (!oCapabilities.Chart && presentationVariant.Visualizations) {\n\t\t\t\t\tpresentationVariant.Visualizations = handlePresentationVariant(presentationVariant.Visualizations);\n\t\t\t\t\tannotationObjects[annotationKey] = annotationObject;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase `@com.sap.vocabularies.Common.v1.DraftRoot`:\n\t\t\t\t// This scenario is needed for enabling semantic filtering on DraftAdministrativeData-filters. As of now the SingleRange annotation is read by the\n\t\t\t\t// FieldHelper, which should not include any propertyspecific logic. We will remove this once the FieldHelper receives the SingleRange data from\n\t\t\t\t// the converter or having it set is no longer a prerequisite for the semantic filtering.\n\t\t\t\tconst filterRestrictions = annotationObjects[`@Org.OData.Capabilities.V1.FilterRestrictions`] as\n\t\t\t\t\t| MetaModelType<FilterRestrictions>\n\t\t\t\t\t| undefined;\n\t\t\t\tif (filterRestrictions?.FilterExpressionRestrictions?.length) {\n\t\t\t\t\tif (\n\t\t\t\t\t\t!filterRestrictions.FilterExpressionRestrictions.some((FilterExpressionRestriction) => {\n\t\t\t\t\t\t\treturn FilterExpressionRestriction?.Property?.$PropertyPath.includes(\"DraftAdministrativeData\");\n\t\t\t\t\t\t})\n\t\t\t\t\t) {\n\t\t\t\t\t\tfilterRestrictions.FilterExpressionRestrictions.push(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$Type: \"Org.OData.Capabilities.V1.FilterExpressionRestrictionType\",\n\t\t\t\t\t\t\t\tAllowedExpressions: \"SingleRange\",\n\t\t\t\t\t\t\t\tProperty: {\n\t\t\t\t\t\t\t\t\t$PropertyPath: \"DraftAdministrativeData/CreationDateTime\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tfullyQualifiedName: undefined\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t$Type: \"Org.OData.Capabilities.V1.FilterExpressionRestrictionType\",\n\t\t\t\t\t\t\t\tAllowedExpressions: \"SingleRange\",\n\t\t\t\t\t\t\t\tProperty: {\n\t\t\t\t\t\t\t\t\t$PropertyPath: \"DraftAdministrativeData/LastChangeDateTime\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tfullyQualifiedName: undefined\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t\tlet currentOutAnnotationObject = outAnnotationObject;\n\n\t\t// Check for annotation of annotation\n\t\tlet finalKey = annotationKey;\n\t\tconst annotationOfAnnotationSplit = annotationKey.split(\"@\");\n\t\tif (annotationOfAnnotationSplit.length > 2) {\n\t\t\tcurrentOutAnnotationObject = getOrCreateAnnotationList(\n\t\t\t\t`${annotationTarget}@${annotationOfAnnotationSplit[1]}`,\n\t\t\t\tannotationLists\n\t\t\t);\n\t\t\tfinalKey = annotationOfAnnotationSplit[2];\n\t\t} else {\n\t\t\tfinalKey = annotationOfAnnotationSplit[1];\n\t\t}\n\n\t\tconst annotationQualifierSplit = finalKey.split(\"#\");\n\t\tconst qualifier = annotationQualifierSplit[1];\n\t\tfinalKey = annotationQualifierSplit[0];\n\n\t\tconst parsedAnnotationObject: RawAnnotation = {\n\t\t\tterm: finalKey,\n\t\t\tqualifier: qualifier\n\t\t};\n\t\tlet currentAnnotationTarget = `${annotationTarget}@${parsedAnnotationObject.term}`;\n\t\tif (qualifier) {\n\t\t\tcurrentAnnotationTarget += `#${qualifier}`;\n\t\t}\n\t\tconst annotationObjectToParse = annotationObject as MetaModelAnnotation;\n\t\tif (annotationObjectToParse === null) {\n\t\t\tparsedAnnotationObject.value = { type: \"Null\" };\n\t\t} else if (typeof annotationObjectToParse === \"string\") {\n\t\t\tparsedAnnotationObject.value = { type: \"String\", String: annotationObjectToParse };\n\t\t} else if (typeof annotationObjectToParse === \"boolean\") {\n\t\t\tparsedAnnotationObject.value = { type: \"Bool\", Bool: annotationObjectToParse };\n\t\t} else if (typeof annotationObjectToParse === \"number\") {\n\t\t\tparsedAnnotationObject.value = { type: \"Int\", Int: annotationObjectToParse };\n\t\t} else if (Array.isArray(annotationObjectToParse)) {\n\t\t\tparsedAnnotationObject.collection = annotationObjectToParse.map((subAnnotationObject, subAnnotationIndex) =>\n\t\t\t\tparseAnnotationObject(\n\t\t\t\t\tsubAnnotationObject,\n\t\t\t\t\t`${currentAnnotationTarget}/${subAnnotationIndex}`,\n\t\t\t\t\tannotationLists,\n\t\t\t\t\toCapabilities\n\t\t\t\t)\n\t\t\t) as Collection;\n\t\t\tif (annotationObjectToParse.length > 0) {\n\t\t\t\tif (annotationObjectToParse[0].hasOwnProperty(\"$PropertyPath\")) {\n\t\t\t\t\tparsedAnnotationObject.collection.type = \"PropertyPath\";\n\t\t\t\t} else if (annotationObjectToParse[0].hasOwnProperty(\"$Path\")) {\n\t\t\t\t\tparsedAnnotationObject.collection.type = \"Path\";\n\t\t\t\t} else if (annotationObjectToParse[0].hasOwnProperty(\"$NavigationPropertyPath\")) {\n\t\t\t\t\tparsedAnnotationObject.collection.type = \"NavigationPropertyPath\";\n\t\t\t\t} else if (annotationObjectToParse[0].hasOwnProperty(\"$AnnotationPath\")) {\n\t\t\t\t\tparsedAnnotationObject.collection.type = \"AnnotationPath\";\n\t\t\t\t} else if (annotationObjectToParse[0].hasOwnProperty(\"$Type\")) {\n\t\t\t\t\tparsedAnnotationObject.collection.type = \"Record\";\n\t\t\t\t} else if (annotationObjectToParse[0].hasOwnProperty(\"$If\")) {\n\t\t\t\t\tparsedAnnotationObject.collection.type = \"If\";\n\t\t\t\t} else if (annotationObjectToParse[0].hasOwnProperty(\"$Or\")) {\n\t\t\t\t\tparsedAnnotationObject.collection.type = \"Or\";\n\t\t\t\t} else if (annotationObjectToParse[0].hasOwnProperty(\"$Eq\")) {\n\t\t\t\t\tparsedAnnotationObject.collection.type = \"Eq\";\n\t\t\t\t} else if (annotationObjectToParse[0].hasOwnProperty(\"$Ne\")) {\n\t\t\t\t\tparsedAnnotationObject.collection.type = \"Ne\";\n\t\t\t\t} else if (annotationObjectToParse[0].hasOwnProperty(\"$Not\")) {\n\t\t\t\t\tparsedAnnotationObject.collection.type = \"Not\";\n\t\t\t\t} else if (annotationObjectToParse[0].hasOwnProperty(\"$Gt\")) {\n\t\t\t\t\tparsedAnnotationObject.collection.type = \"Gt\";\n\t\t\t\t} else if (annotationObjectToParse[0].hasOwnProperty(\"$Ge\")) {\n\t\t\t\t\tparsedAnnotationObject.collection.type = \"Ge\";\n\t\t\t\t} else if (annotationObjectToParse[0].hasOwnProperty(\"$Lt\")) {\n\t\t\t\t\tparsedAnnotationObject.collection.type = \"Lt\";\n\t\t\t\t} else if (annotationObjectToParse[0].hasOwnProperty(\"$Le\")) {\n\t\t\t\t\tparsedAnnotationObject.collection.type = \"Le\";\n\t\t\t\t} else if (annotationObjectToParse[0].hasOwnProperty(\"$And\")) {\n\t\t\t\t\tparsedAnnotationObject.collection.type = \"And\";\n\t\t\t\t} else if (annotationObjectToParse[0].hasOwnProperty(\"$Apply\")) {\n\t\t\t\t\tparsedAnnotationObject.collection.type = \"Apply\";\n\t\t\t\t} else if (typeof annotationObjectToParse[0] === \"object\") {\n\t\t\t\t\tparsedAnnotationObject.collection.type = \"Record\";\n\t\t\t\t} else {\n\t\t\t\t\tparsedAnnotationObject.collection.type = \"String\";\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (typeof annotationObjectToParse === \"object\") {\n\t\t\tif (annotationObjectToParse.$If !== undefined) {\n\t\t\t\tparsedAnnotationObject.value = { type: \"If\", $If: annotationObjectToParse.$If as [Expression, Expression, Expression] };\n\t\t\t} else if (annotationObjectToParse.$And !== undefined) {\n\t\t\t\tparsedAnnotationObject.value = { type: \"And\", $And: annotationObjectToParse.$And as [Expression, Expression] };\n\t\t\t} else if (annotationObjectToParse.$Or !== undefined) {\n\t\t\t\tparsedAnnotationObject.value = { type: \"Or\", $Or: annotationObjectToParse.$Or as [Expression, Expression] };\n\t\t\t} else if (annotationObjectToParse.$Not !== undefined) {\n\t\t\t\tparsedAnnotationObject.value = { type: \"Not\", $Not: annotationObjectToParse.$Not as Expression };\n\t\t\t} else if (annotationObjectToParse.$Eq !== undefined) {\n\t\t\t\tparsedAnnotationObject.value = { type: \"Eq\", $Eq: annotationObjectToParse.$Eq as [Expression, Expression] };\n\t\t\t} else if (annotationObjectToParse.$Ne !== undefined) {\n\t\t\t\tparsedAnnotationObject.value = { type: \"Ne\", $Ne: annotationObjectToParse.$Ne as [Expression, Expression] };\n\t\t\t} else if (annotationObjectToParse.$Gt !== undefined) {\n\t\t\t\tparsedAnnotationObject.value = { type: \"Gt\", $Gt: annotationObjectToParse.$Gt as [Expression, Expression] };\n\t\t\t} else if (annotationObjectToParse.$Ge !== undefined) {\n\t\t\t\tparsedAnnotationObject.value = { type: \"Ge\", $Ge: annotationObjectToParse.$Ge as [Expression, Expression] };\n\t\t\t} else if (annotationObjectToParse.$Lt !== undefined) {\n\t\t\t\tparsedAnnotationObject.value = { type: \"Lt\", $Lt: annotationObjectToParse.$Lt as [Expression, Expression] };\n\t\t\t} else if (annotationObjectToParse.$Le !== undefined) {\n\t\t\t\tparsedAnnotationObject.value = { type: \"Le\", $Le: annotationObjectToParse.$Le as [Expression, Expression] };\n\t\t\t} else if (annotationObjectToParse.$Apply !== undefined) {\n\t\t\t\tparsedAnnotationObject.value = {\n\t\t\t\t\ttype: \"Apply\",\n\t\t\t\t\t$Apply: annotationObjectToParse.$Apply,\n\t\t\t\t\t$Function: annotationObjectToParse.$Function\n\t\t\t\t} as ApplyExpression;\n\t\t\t} else if (annotationObjectToParse.$Path !== undefined) {\n\t\t\t\tparsedAnnotationObject.value = { type: \"Path\", Path: annotationObjectToParse.$Path };\n\t\t\t} else if (annotationObjectToParse.$AnnotationPath !== undefined) {\n\t\t\t\tparsedAnnotationObject.value = {\n\t\t\t\t\ttype: \"AnnotationPath\",\n\t\t\t\t\tAnnotationPath: annotationObjectToParse.$AnnotationPath\n\t\t\t\t};\n\t\t\t} else if (annotationObjectToParse.$Decimal !== undefined) {\n\t\t\t\tparsedAnnotationObject.value = { type: \"Decimal\", Decimal: parseFloat(annotationObjectToParse.$Decimal) };\n\t\t\t} else if (annotationObjectToParse.$EnumMember !== undefined) {\n\t\t\t\tparsedAnnotationObject.value = {\n\t\t\t\t\ttype: \"EnumMember\",\n\t\t\t\t\tEnumMember: annotationObjectToParse.$EnumMember\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tconst record: AnnotationRecord = {\n\t\t\t\t\tpropertyValues: []\n\t\t\t\t};\n\t\t\t\tif (annotationObjectToParse.$Type) {\n\t\t\t\t\tconst typeValue = annotationObjectToParse.$Type;\n\t\t\t\t\trecord.type = `${typeValue}`;\n\t\t\t\t}\n\t\t\t\tconst propertyValues: { name: string; value: Expression }[] = [];\n\t\t\t\tfor (const propertyKey in annotationObjectToParse) {\n\t\t\t\t\tif (propertyKey !== \"$Type\" && !propertyKey.startsWith(\"@\")) {\n\t\t\t\t\t\tpropertyValues.push(\n\t\t\t\t\t\t\tparsePropertyValue(\n\t\t\t\t\t\t\t\tannotationObjectToParse[propertyKey],\n\t\t\t\t\t\t\t\tpropertyKey,\n\t\t\t\t\t\t\t\tcurrentAnnotationTarget,\n\t\t\t\t\t\t\t\tannotationLists,\n\t\t\t\t\t\t\t\toCapabilities\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t} else if (propertyKey.startsWith(\"@\")) {\n\t\t\t\t\t\t// Annotation of record\n\t\t\t\t\t\tcreateAnnotationLists(\n\t\t\t\t\t\t\t{ [propertyKey]: annotationObjectToParse[propertyKey] },\n\t\t\t\t\t\t\tcurrentAnnotationTarget,\n\t\t\t\t\t\t\tannotationLists,\n\t\t\t\t\t\t\toCapabilities\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\trecord.propertyValues = propertyValues;\n\t\t\t\tparsedAnnotationObject.record = record;\n\t\t\t}\n\t\t}\n\t\tcurrentOutAnnotationObject.annotations.push(parsedAnnotationObject);\n\t}\n}\n\nfunction prepareProperty(\n\tpropertyDefinition: MetaModelProperty,\n\tentityTypeObject: RawEntityType | RawComplexType,\n\tpropertyName: string\n): RawProperty {\n\treturn {\n\t\t_type: \"Property\",\n\t\tname: propertyName,\n\t\tfullyQualifiedName: `${entityTypeObject.fullyQualifiedName}/${propertyName}`,\n\t\ttype: propertyDefinition.$Type,\n\t\tmaxLength: propertyDefinition.$MaxLength,\n\t\tprecision: propertyDefinition.$Precision,\n\t\tscale: propertyDefinition.$Scale,\n\t\tnullable: propertyDefinition.$Nullable ?? true\n\t};\n}\n\nfunction prepareNavigationProperty(\n\tnavPropertyDefinition: MetaModelNavigationProperty,\n\tentityTypeObject: RawEntityType | RawComplexType,\n\tnavPropertyName: string\n): RawV4NavigationProperty {\n\tlet referentialConstraint: ReferentialConstraint[] = [];\n\tif (navPropertyDefinition.$ReferentialConstraint) {\n\t\treferentialConstraint = Object.keys(navPropertyDefinition.$ReferentialConstraint).map((sourcePropertyName) => {\n\t\t\treturn {\n\t\t\t\tsourceTypeName: entityTypeObject.name,\n\t\t\t\tsourceProperty: sourcePropertyName,\n\t\t\t\ttargetTypeName: navPropertyDefinition.$Type,\n\t\t\t\ttargetProperty: navPropertyDefinition.$ReferentialConstraint[sourcePropertyName]\n\t\t\t};\n\t\t});\n\t}\n\tconst navigationProperty: RawV4NavigationProperty = {\n\t\t_type: \"NavigationProperty\",\n\t\tname: navPropertyName,\n\t\tfullyQualifiedName: `${entityTypeObject.fullyQualifiedName}/${navPropertyName}`,\n\t\tpartner: navPropertyDefinition.$Partner,\n\t\tisCollection: navPropertyDefinition.$isCollection ? navPropertyDefinition.$isCollection : false,\n\t\tcontainsTarget: !!navPropertyDefinition.$ContainsTarget,\n\t\ttargetTypeName: navPropertyDefinition.$Type,\n\t\treferentialConstraint\n\t};\n\n\treturn navigationProperty;\n}\n\nfunction prepareNavigationPropertyBinding(\n\tnavigationPropertyBinding: Record<string, string> | undefined,\n\tentityContainerName: string\n): RawNavigationPropertyBinding {\n\tif (navigationPropertyBinding) {\n\t\treturn Object.fromEntries(\n\t\t\tObject.entries(navigationPropertyBinding).map(([path, target]) => [path, `${entityContainerName}/${target}`])\n\t\t);\n\t}\n\n\treturn {};\n}\n\nfunction prepareEntitySet(entitySetDefinition: MetaModelEntitySet, entitySetName: string, entityContainerName: string): RawEntitySet {\n\treturn {\n\t\t_type: \"EntitySet\",\n\t\tname: entitySetName,\n\t\tnavigationPropertyBinding: prepareNavigationPropertyBinding(entitySetDefinition.$NavigationPropertyBinding, entityContainerName),\n\t\tentityTypeName: entitySetDefinition.$Type,\n\t\tfullyQualifiedName: `${entityContainerName}/${entitySetName}`\n\t};\n}\n\nfunction prepareSingleton(singletonDefinition: MetaModelSingleton, singletonName: string, entityContainerName: string): RawSingleton {\n\treturn {\n\t\t_type: \"Singleton\",\n\t\tname: singletonName,\n\t\tnavigationPropertyBinding: prepareNavigationPropertyBinding(singletonDefinition.$NavigationPropertyBinding, entityContainerName),\n\t\tentityTypeName: singletonDefinition.$Type,\n\t\tfullyQualifiedName: `${entityContainerName}/${singletonName}`,\n\t\tnullable: true\n\t};\n}\n\nfunction prepareActionImport(\n\tactionImport: MetaModelActionImport | MetaModelFunctionImport,\n\tactionImportName: string,\n\tentityContainerName: string\n): RawActionImport {\n\treturn {\n\t\t_type: \"ActionImport\",\n\t\tname: actionImportName,\n\t\tfullyQualifiedName: `${entityContainerName}/${actionImportName}`,\n\t\tactionName: actionImport.$kind === \"ActionImport\" ? actionImport.$Action : actionImport.$Function\n\t};\n}\n\nfunction prepareTypeDefinition(typeDefinition: MetaModelTypeDefinition, typeName: string, namespacePrefix: string): RawTypeDefinition {\n\tconst typeObject: RawTypeDefinition = {\n\t\t_type: \"TypeDefinition\",\n\t\tname: typeName.substring(namespacePrefix.length),\n\t\tfullyQualifiedName: typeName,\n\t\tunderlyingType: typeDefinition.$UnderlyingType\n\t};\n\treturn typeObject;\n}\n\nfunction prepareComplexType(complexTypeDefinition: MetaModelComplexType, complexTypeName: string, namespacePrefix: string): RawComplexType {\n\tconst complexTypeObject: RawComplexType = {\n\t\t_type: \"ComplexType\",\n\t\tname: complexTypeName.substring(namespacePrefix.length),\n\t\tfullyQualifiedName: complexTypeName,\n\t\tproperties: [],\n\t\tnavigationProperties: []\n\t};\n\n\tconst complexTypeProperties = Object.keys(complexTypeDefinition)\n\t\t.filter((propertyNameOrNot) => {\n\t\t\tif (propertyNameOrNot != \"$Key\" && propertyNameOrNot != \"$kind\") {\n\t\t\t\treturn complexTypeDefinition[propertyNameOrNot].$kind === \"Property\";\n\t\t\t}\n\t\t})\n\t\t.sort((a, b) => (a > b ? 1 : -1))\n\t\t.map((propertyName) => {\n\t\t\treturn prepareProperty(complexTypeDefinition[propertyName] as MetaModelProperty, complexTypeObject, propertyName);\n\t\t});\n\n\tcomplexTypeObject.properties = complexTypeProperties;\n\tconst complexTypeNavigationProperties = Object.keys(complexTypeDefinition)\n\t\t.filter((propertyNameOrNot) => {\n\t\t\tif (propertyNameOrNot != \"$Key\" && propertyNameOrNot != \"$kind\") {\n\t\t\t\treturn complexTypeDefinition[propertyNameOrNot].$kind === \"NavigationProperty\";\n\t\t\t}\n\t\t})\n\t\t.sort((a, b) => (a > b ? 1 : -1))\n\t\t.map((navPropertyName) => {\n\t\t\treturn prepareNavigationProperty(\n\t\t\t\tcomplexTypeDefinition[navPropertyName] as MetaModelNavigationProperty,\n\t\t\t\tcomplexTypeObject,\n\t\t\t\tnavPropertyName\n\t\t\t);\n\t\t});\n\tcomplexTypeObject.navigationProperties = complexTypeNavigationProperties;\n\treturn complexTypeObject;\n}\n\nfunction prepareEntityKeys(entityTypeDefinition: MetaModelEntityType, oMetaModelData: MetaModelContent): string[] {\n\tif (!entityTypeDefinition.$Key && entityTypeDefinition.$BaseType) {\n\t\treturn prepareEntityKeys(oMetaModelData[entityTypeDefinition.$BaseType] as MetaModelEntityType, oMetaModelData);\n\t}\n\treturn entityTypeDefinition.$Key ?? []; //handling of entity types without key as well as basetype\n}\n\nfunction prepareEntityType(\n\tentityTypeDefinition: MetaModelEntityType,\n\tentityTypeName: string,\n\tnamespacePrefix: string,\n\tmetaModelData: MetaModelContent,\n\tignoreDatafieldDefault: boolean\n): RawEntityType {\n\tconst entityType: RawEntityType = {\n\t\t_type: \"EntityType\",\n\t\tname: entityTypeName.substring(namespacePrefix.length),\n\t\tfullyQualifiedName: entityTypeName,\n\t\tkeys: [],\n\t\tentityProperties: [],\n\t\tnavigationProperties: [],\n\t\tactions: {}\n\t};\n\n\tfor (const key in entityTypeDefinition) {\n\t\tconst value = entityTypeDefinition[key];\n\n\t\tswitch (value.$kind) {\n\t\t\tcase \"Property\":\n\t\t\t\tconst property = prepareProperty(value, entityType, key);\n\t\t\t\tentityType.entityProperties.push(property);\n\t\t\t\tbreak;\n\t\t\tcase \"NavigationProperty\":\n\t\t\t\tconst navigationProperty = prepareNavigationProperty(value, entityType, key);\n\t\t\t\tentityType.navigationProperties.push(navigationProperty);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tentityType.keys = prepareEntityKeys(entityTypeDefinition, metaModelData)\n\t\t.map((entityKey) => entityType.entityProperties.find((property) => property.name === entityKey))\n\t\t.filter((property) => property !== undefined) as RawEntityType[\"keys\"];\n\n\tconst entityTypeAnnotations = metaModelData.$Annotations[entityType.fullyQualifiedName] as MetaModelEntityTypeAnnotations | undefined;\n\t// Check if there are filter facets defined for the entityType and if yes, check if all of them have an ID\n\t// The ID is optional, but it is internally taken for grouping filter fields and if it's not present\n\t// a fallback ID needs to be generated here.\n\tconst filterFacets = entityTypeAnnotations?.[`@${UIAnnotationTerms.FilterFacets}`] as MetaModelType<FilterFacets>;\n\tfilterFacets?.forEach((filterFacetAnnotation: MetaModelType<ReferenceFacet>) => {\n\t\tfilterFacetAnnotation.ID = createReferenceFacetId(filterFacetAnnotation);\n\t});\n\n\t// Check if entityType has not mandatory HeaderInfo\n\tif (\n\t\t!!entityType?.keys.length &&\n\t\tmetaModelData.$Annotations[entityType.fullyQualifiedName] &&\n\t\t!entityTypeAnnotations?.[`@${UIAnnotationTerms.HeaderInfo}`]\n\t) {\n\t\tconst headerInfoAnnotation: MetaModelType<HeaderInfo> = {\n\t\t\t$Type: `${UIAnnotationTypes.HeaderInfoType}`,\n\t\t\tTypeName: `${entityType.name}`,\n\t\t\tTypeNamePlural: \"\",\n\t\t\tTitle: {\n\t\t\t\t$Type: `${UIAnnotationTypes.DataField}`,\n\t\t\t\tValue: {\n\t\t\t\t\t$Path: `${entityType.keys[0].name}`\n\t\t\t\t}\n\t\t\t} as MetaModelType<DataField>,\n\t\t\tterm: UIAnnotationTerms.HeaderInfo\n\t\t};\n\t\t// Add the missing HeaderInfo\n\t\t(metaModelData.$Annotations[entityType.fullyQualifiedName] as MetaModelEntityTypeAnnotations)[`@${UIAnnotationTerms.HeaderInfo}`] =\n\t\t\theaderInfoAnnotation;\n\t}\n\n\tfor (const entityProperty of entityType.entityProperties) {\n\t\tif (!metaModelData.$Annotations[entityProperty.fullyQualifiedName]) {\n\t\t\tmetaModelData.$Annotations[entityProperty.fullyQualifiedName] = {};\n\t\t}\n\t\tif (\n\t\t\t!ignoreDatafieldDefault &&\n\t\t\t!(metaModelData.$Annotations[entityProperty.fullyQualifiedName] as MetaModelPropertyAnnotations)[\n\t\t\t\t`@${UIAnnotationTerms.DataFieldDefault}`\n\t\t\t]\n\t\t) {\n\t\t\t(metaModelData.$Annotations[entityProperty.fullyQualifiedName] as MetaModelPropertyAnnotations)[\n\t\t\t\t`@${UIAnnotationTerms.DataFieldDefault}`\n\t\t\t] = {\n\t\t\t\t$Type: UIAnnotationTypes.DataField,\n\t\t\t\tValue: { $Path: entityProperty.name }\n\t\t\t};\n\t\t}\n\t}\n\n\treturn entityType;\n}\nfunction prepareAction(actionRawData: MetaModelAction, actionName: string, namespacePrefix: string): RawAction {\n\tlet overloadParameters: MetaModelAction[\"$Parameter\"];\n\tif (actionRawData.$kind === \"Function\") {\n\t\t// function - overload includes all parameters (bound entity type _and_ other parameters)\n\t\toverloadParameters = actionRawData.$Parameter ?? [];\n\t} else {\n\t\t// action - overload is the first parameter or the empty unbound overload in case of an unbound action\n\t\toverloadParameters = actionRawData.$IsBound ? [actionRawData.$Parameter[0]] : [];\n\t}\n\n\tconst overload = overloadParameters\n\t\t.map((parameter) => (parameter.$isCollection ? `Collection(${parameter.$Type})` : parameter.$Type))\n\t\t.join(\",\");\n\n\tconst fullyQualifiedName = `${actionName}(${overload})`;\n\n\tconst parameters = actionRawData.$Parameter ?? [];\n\treturn {\n\t\t_type: \"Action\",\n\t\tname: actionName.substring(namespacePrefix.length),\n\t\tfullyQualifiedName,\n\t\tisBound: actionRawData.$IsBound ?? false,\n\t\tisFunction: actionRawData.$kind === \"Function\",\n\t\tsourceType: overloadParameters[0]?.$Type ?? \"\",\n\t\treturnType: actionRawData.$ReturnType?.$Type ?? \"\",\n\t\treturnCollection: actionRawData.$ReturnType?.$isCollection ?? false,\n\t\tparameters: parameters.map((param) => ({\n\t\t\t_type: \"ActionParameter\",\n\t\t\tfullyQualifiedName: `${fullyQualifiedName}/${param.$Name}`,\n\t\t\tisCollection: param.$isCollection ?? false,\n\t\t\tname: param.$Name,\n\t\t\ttype: param.$Type,\n\t\t\tnullable: param.$Nullable ?? false,\n\t\t\tmaxLength: param.$MaxLength,\n\t\t\tprecision: param.$Precision,\n\t\t\tscale: param.$Scale\n\t\t}))\n\t};\n}\n\nfunction parseEntityContainer(\n\tnamespacePrefix: string,\n\tentityContainerName: string,\n\tentityContainerMetadata: MetaModelEntityContainer,\n\tschema: RawSchema\n): void {\n\tschema.entityContainer = {\n\t\t_type: \"EntityContainer\",\n\t\tname: entityContainerName.substring(namespacePrefix.length),\n\t\tfullyQualifiedName: entityContainerName\n\t};\n\n\tfor (const elementName in entityContainerMetadata) {\n\t\tconst elementValue = entityContainerMetadata[elementName];\n\t\tswitch (elementValue.$kind) {\n\t\t\tcase \"EntitySet\":\n\t\t\t\tschema.entitySets.push(prepareEntitySet(elementValue, elementName, entityContainerName));\n\t\t\t\tbreak;\n\n\t\t\tcase \"Singleton\":\n\t\t\t\tschema.singletons.push(prepareSingleton(elementValue, elementName, entityContainerName));\n\t\t\t\tbreak;\n\t\t\tcase \"FunctionImport\":\n\t\t\tcase \"ActionImport\":\n\t\t\t\tschema.actionImports.push(prepareActionImport(elementValue, elementName, entityContainerName));\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n\nfunction parseAnnotations(annotations: Record<string, MetaModelAnnotations>, capabilities: EnvironmentCapabilities): AnnotationList[] {\n\tconst annotationLists: Record<string, AnnotationList> = {};\n\tfor (const target in annotations) {\n\t\tcreateAnnotationLists(annotations[target], target, annotationLists, capabilities);\n\t}\n\treturn Object.values(annotationLists);\n}\n\ntype MetaModelSchema = {\n\t$kind: \"Schema\";\n};\ntype MetaModelEntitySet = {\n\t$kind: \"EntitySet\";\n\t$Type: string;\n\t$NavigationPropertyBinding?: Record<string, string>;\n};\n\ntype MetaModelTypes<T extends Record<string, unknown>> = {\n\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t// @ts-ignore\n\t[key in keyof T]: MetaModelType<T[key]>;\n};\nexport type MetaModelEntityTypeAnnotations = Rename<\"@Org.OData.Capabilities.V1.\", MetaModelTypes<EntityTypeAnnotations_Capabilities>> &\n\tRename<\"@com.sap.vocabularies.UI.v1.\", MetaModelTypes<EntityTypeAnnotations_UI>>;\n\nexport type MetaModelEntitySetAnnotations = Rename<\"@Org.OData.Capabilities.V1.\", MetaModelTypes<EntitySetAnnotations_Capabilities>> &\n\tRename<\"@com.sap.vocabularies.UI.v1.\", MetaModelTypes<EntitySetAnnotations_UI>>;\n\nexport type MetaModelPropertyAnnotations = Rename<\"@com.sap.vocabularies.Common.v1.\", MetaModelTypes<PropertyAnnotations_Common>> &\n\tRename<\"@com.sap.vocabularies.UI.v1.\", MetaModelTypes<PropertyAnnotations_UI>> &\n\tRename<\"@Org.OData.Core.V1.\", MetaModelTypes<PropertyAnnotations_Core>> &\n\tRename<\"@Org.OData.Capabilities.V1.\", MetaModelTypes<PropertyAnnotations_Capabilities>> &\n\tRename<\"@Org.OData.Measures.V1.\", MetaModelTypes<PropertyAnnotations_Measures>> &\n\tRename<\"@com.sap.vocabularies.Analytics.v1.\", MetaModelTypes<PropertyAnnotations_Analytics>> &\n\tRename<\"@com.sap.vocabularies.Communication.v1.\", MetaModelTypes<PropertyAnnotations_Communication>> &\n\tRename<\"@com.sap.vocabularies.PersonalData.v1.\", MetaModelTypes<PropertyAnnotations_PersonalData>> &\n\tRename<\"@com.sap.vocabularies.Session.v1.\", MetaModelTypes<PropertyAnnotations_Session>> & {\n\t\t\"@com.sap.vocabularies.Common.v1.Text@com.sap.vocabularies.UI.v1.TextArrangement\": MetaModelEnum<TextArrangement>;\n\t};\ntype MetaModelActionImport = {\n\t$kind: \"ActionImport\";\n\t$Action: string;\n};\ntype MetaModelFunctionImport = {\n\t$kind: \"FunctionImport\";\n\t$Function: string;\n};\ntype MetaModelSingleton = {\n\t$kind: \"Singleton\";\n\t$Type: string;\n\t$NavigationPropertyBinding?: Record<string, string>;\n};\ntype MetaModelEntityContainer = {\n\t$kind: \"EntityContainer\";\n} & {\n\t[name: string]: MetaModelEntitySet | MetaModelSingleton | MetaModelActionImport | MetaModelFunctionImport;\n};\ntype MetaModelProperty = {\n\t$kind: \"Property\";\n\t$Type: string;\n\t$MaxLength?: number;\n\t$Precision?: number;\n\t$Scale?: number;\n\t$Nullable?: boolean;\n};\ntype MetaModelNavigationProperty = {\n\t$kind: \"NavigationProperty\";\n\t$Type: string;\n\t$Partner?: string;\n\t$isCollection?: boolean;\n\t$ContainsTarget?: boolean;\n\t$ReferentialConstraint: Record<string, string>;\n};\ntype MetaModelEntityType = {\n\t$kind: \"EntityType\";\n\t$BaseType?: string;\n\t$Key: string[];\n} & {\n\t[name: string]: MetaModelProperty | MetaModelNavigationProperty;\n};\ntype MetaModelComplexType = {\n\t$kind: \"ComplexType\";\n} & {\n\t[name: string]: MetaModelProperty | MetaModelNavigationProperty;\n};\ntype MetaModelTypeDefinition = {\n\t$kind: \"TypeDefinition\";\n\t$UnderlyingType: string;\n};\ntype MetaModelObject =\n\t| MetaModelEntitySet\n\t| MetaModelSchema\n\t| MetaModelEntityContainer\n\t| MetaModelAction\n\t| MetaModelEntityType\n\t| MetaModelComplexType\n\t| MetaModelTypeDefinition;\ntype MetaModelAnnotations = MetaModelEntityTypeAnnotations | MetaModelPropertyAnnotations | MetaModelEntitySetAnnotations;\n\ntype MetaModelContent = {\n\t$Annotations: Record<string, MetaModelAnnotations>;\n} & Record<string, MetaModelObject | MetaModelObject[]>;\nfunction parseSchema(metaModelData: MetaModelContent, ignoreDatafieldDefault: boolean): RawSchema {\n\t// assuming there is only one schema/namespace\n\tconst namespacePrefix =\n\t\tObject.keys(metaModelData).find((key) => {\n\t\t\tconst metamodelObject = metaModelData[key];\n\t\t\treturn !Array.isArray(metamodelObject) && metamodelObject.$kind === \"Schema\";\n\t\t}) ?? \"\";\n\n\tconst schema: RawSchema = {\n\t\tnamespace: namespacePrefix.slice(0, -1),\n\t\tentityContainer: { _type: \"EntityContainer\", name: \"\", fullyQualifiedName: \"\" },\n\t\tentitySets: [],\n\t\tentityTypes: [],\n\t\tcomplexTypes: [],\n\t\ttypeDefinitions: [],\n\t\tsingletons: [],\n\t\tassociations: [],\n\t\tassociationSets: [],\n\t\tactions: [],\n\t\tactionImports: [],\n\t\tannotations: {}\n\t};\n\n\tconst parseMetaModelElement = (name: string, value: MetaModelObject): void => {\n\t\tswitch (value.$kind) {\n\t\t\tcase \"EntityContainer\":\n\t\t\t\tparseEntityContainer(namespacePrefix, name, value, schema);\n\t\t\t\tbreak;\n\n\t\t\tcase \"Action\":\n\t\t\tcase \"Function\":\n\t\t\t\tschema.actions.push(prepareAction(value, name, namespacePrefix));\n\t\t\t\tbreak;\n\n\t\t\tcase \"EntityType\":\n\t\t\t\tschema.entityTypes.push(prepareEntityType(value, name, namespacePrefix, metaModelData, ignoreDatafieldDefault));\n\t\t\t\tbreak;\n\n\t\t\tcase \"ComplexType\":\n\t\t\t\tschema.complexTypes.push(prepareComplexType(value, name, namespacePrefix));\n\t\t\t\tbreak;\n\n\t\t\tcase \"TypeDefinition\":\n\t\t\t\tschema.typeDefinitions.push(prepareTypeDefinition(value, name, namespacePrefix));\n\t\t\t\tbreak;\n\t\t\tcase \"EntitySet\":\n\t\t\tcase \"Schema\":\n\t\t\t\tbreak;\n\t\t}\n\t};\n\n\tfor (const elementName in metaModelData) {\n\t\tconst elementValue = metaModelData[elementName];\n\n\t\tif (Array.isArray(elementValue)) {\n\t\t\t// value can be an array in case of actions or functions\n\t\t\tfor (const subElementValue of elementValue) {\n\t\t\t\tparseMetaModelElement(elementName, subElementValue);\n\t\t\t}\n\t\t} else {\n\t\t\tparseMetaModelElement(elementName, elementValue);\n\t\t}\n\t}\n\n\treturn schema;\n}\n\nexport function parseMetaModel(\n\tmetaModel: ODataMetaModel,\n\tcapabilities: EnvironmentCapabilities = DefaultEnvironmentCapabilities,\n\tignoreDatafieldDefault = false\n): RawMetadata {\n\tconst result: Omit<RawMetadata, \"schema\"> = {\n\t\tidentification: \"metamodelResult\",\n\t\tversion: \"4.0\",\n\t\treferences: []\n\t};\n\n\t// parse the schema when it is accessed for the first time\n\tAnnotationConverter.lazy(result as RawMetadata, \"schema\", () => {\n\t\tconst metaModelData = metaModel.getObject(\"/$\");\n\t\tconst schema = parseSchema(metaModelData, ignoreDatafieldDefault);\n\n\t\tAnnotationConverter.lazy(schema.annotations, \"metamodelResult\", () => parseAnnotations(metaModelData.$Annotations, capabilities));\n\n\t\treturn schema;\n\t});\n\n\treturn result as RawMetadata;\n}\n\nconst convertedMetaModelMap: Record<string, ConvertedMetadata> = {};\nconst metaModelIDMap: Record<string, String> = {};\nconst metaModelMap: WeakMap<String, ODataMetaModel> = new WeakMap();\nconst virtualPropertiesMap: Record<\n\tstring,\n\tRecord<\n\t\tstring,\n\t\t{\n\t\t\tfn?: (path: string, convertedTypes: ConvertedMetadata, relativePath?: string) => BindingToolkitExpression<unknown>;\n\t\t\tviewId?: string;\n\t\t}\n\t>\n> = {};\n\n/**\n * Convert the ODataMetaModel into another format that allows for easy manipulation of the annotations.\n * @param oMetaModel The ODataMetaModel\n * @param oCapabilities The current capabilities\n * @returns An object containing object-like annotations\n */\nexport function convertTypes(oMetaModel: ODataMetaModel, oCapabilities?: EnvironmentCapabilities): ConvertedMetadata {\n\tconst metaModelID = (oMetaModel as { id?: string }).id!;\n\tif (!convertedMetaModelMap.hasOwnProperty(metaModelID)) {\n\t\tconst parsedOutput = parseMetaModel(oMetaModel, oCapabilities);\n\t\ttry {\n\t\t\tconvertedMetaModelMap[metaModelID] = AnnotationConverter.convert(parsedOutput);\n\t\t\tvirtualPropertiesMap[metaModelID] = {\n\t\t\t\tcriticality: { fn: getVirtualCriticalityExpression }\n\t\t\t};\n\t\t\tconst metaModelSymbol = new String(metaModelID);\n\t\t\tmetaModelIDMap[metaModelID] = metaModelSymbol;\n\t\t\tmetaModelMap.set(metaModelSymbol, oMetaModel);\n\t\t} catch (oError) {\n\t\t\tthrow new Error(oError as string);\n\t\t}\n\t}\n\treturn convertedMetaModelMap[metaModelID];\n}\n\n/**\n * Registers a virtual property for a given metadata object.\n * This allows for adding custom properties that are not part of the original model but can be computed or derived based on existing metadata.\n * @param convertedTypes The metadata object for which the virtual property is being registered.\n * @param propertyName The name of the virtual property to register.\n * @param fnVirtualProperty A callback function that generates the value of the virtual property. The function takes the path, metadata, and an optional relative path as arguments.\n * @param viewId The identifier for the view associated with the virtual property.\n */\nexport function registerVirtualProperty(\n\tconvertedTypes: ConvertedMetadata,\n\tpropertyName: string,\n\tfnVirtualProperty: (path: string, convertedTypes: ConvertedMetadata, relativePath?: string) => BindingToolkitExpression<unknown>,\n\tviewId: string\n): void {\n\tconst id = Object.keys(convertedMetaModelMap).find((id: string) => convertedMetaModelMap[id] === convertedTypes) ?? \"\";\n\tif (!virtualPropertiesMap[id]) {\n\t\tvirtualPropertiesMap[id] = {};\n\t}\n\tvirtualPropertiesMap[id][propertyName] = { fn: fnVirtualProperty, viewId };\n}\nexport function getMetaModelById(id: string): ODataMetaModel | undefined {\n\tconst symbol = metaModelIDMap[id];\n\treturn metaModelMap.get(symbol);\n}\nexport function getConvertedTypes(oContext: Context): ConvertedMetadata {\n\tconst oMetaModel = oContext.getModel() as unknown as ODataMetaModel;\n\tif (!oMetaModel.isA(\"sap.ui.model.odata.v4.ODataMetaModel\")) {\n\t\tthrow new Error(\"This should only be called on a ODataMetaModel\");\n\t}\n\treturn convertTypes(oMetaModel);\n}\n\nexport function deleteModelCacheData(oMetaModel: ODataMetaModel): void {\n\tif (oMetaModel) {\n\t\tdelete convertedMetaModelMap[(oMetaModel as unknown as { id: string }).id];\n\t}\n}\n\nexport function convertMetaModelContext(oMetaModelContext: Context, bIncludeVisitedObjects: true): undefined | ResolvedTarget;\nexport function convertMetaModelContext(oMetaModelContext: Context): undefined | ServiceObject | ActionParameter | RecordComplexType;\nexport function convertMetaModelContext(\n\toMetaModelContext: Context,\n\tbIncludeVisitedObjects = false\n): undefined | ServiceObject | ActionParameter | RecordComplexType | ResolvedTarget {\n\tconst oConvertedMetadata = convertTypes(oMetaModelContext.getModel() as ODataMetaModel);\n\tconst sPath = oMetaModelContext.getPath();\n\n\tconst aPathSplit = sPath.split(\"/\");\n\tlet firstPart = aPathSplit[1];\n\tlet beginIndex = 2;\n\tif (oConvertedMetadata.entityContainer.fullyQualifiedName === firstPart) {\n\t\tfirstPart = aPathSplit[2];\n\t\tbeginIndex++;\n\t}\n\tlet targetEntitySet: EntitySet | Singleton = oConvertedMetadata.entitySets.find(\n\t\t(entitySet) => entitySet.name === firstPart\n\t) as EntitySet;\n\tif (!targetEntitySet) {\n\t\ttargetEntitySet = oConvertedMetadata.singletons.find((singleton) => singleton.name === firstPart) as Singleton;\n\t}\n\tlet relativePath = aPathSplit.slice(beginIndex).join(\"/\");\n\n\tconst localObjects: ServiceObject[] = [targetEntitySet];\n\twhile (relativePath && relativePath.length > 0 && relativePath.startsWith(\"$NavigationPropertyBinding\")) {\n\t\tlet relativeSplit = relativePath.split(\"/\");\n\t\tlet idx = 0;\n\t\tlet currentEntitySet, sNavPropToCheck;\n\n\t\trelativeSplit = relativeSplit.slice(1); // Removing \"$NavigationPropertyBinding\"\n\t\twhile (!currentEntitySet && relativeSplit.length > idx) {\n\t\t\tif (relativeSplit[idx] !== \"$NavigationPropertyBinding\") {\n\t\t\t\t// Finding the correct entitySet for the navigaiton property binding example: \"Set/_SalesOrder\"\n\t\t\t\tsNavPropToCheck = relativeSplit\n\t\t\t\t\t.slice(0, idx + 1)\n\t\t\t\t\t.join(\"/\")\n\t\t\t\t\t.replace(\"/$NavigationPropertyBinding\", \"\");\n\t\t\t\tcurrentEntitySet = targetEntitySet && targetEntitySet.navigationPropertyBinding[sNavPropToCheck];\n\t\t\t}\n\t\t\tidx++;\n\t\t}\n\t\tif (!currentEntitySet) {\n\t\t\t// Fall back to Single nav prop if entitySet is not found.\n\t\t\tsNavPropToCheck = relativeSplit[0];\n\t\t}\n\t\tconst aNavProps = sNavPropToCheck?.split(\"/\") || [];\n\t\tlet targetEntityType = targetEntitySet && targetEntitySet.entityType;\n\t\tfor (const sNavProp of aNavProps) {\n\t\t\t// Pushing all nav props to the visited objects. example: \"Set\", \"_SalesOrder\" for \"Set/_SalesOrder\"(in NavigationPropertyBinding)\n\t\t\tconst targetNavProp = targetEntityType && targetEntityType.navigationProperties.find((navProp) => navProp.name === sNavProp);\n\t\t\tif (targetNavProp) {\n\t\t\t\tlocalObjects.push(targetNavProp);\n\t\t\t\ttargetEntityType = targetNavProp.targetType;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\ttargetEntitySet =\n\t\t\t(targetEntitySet && currentEntitySet) || (targetEntitySet && targetEntitySet.navigationPropertyBinding[relativeSplit[0]]);\n\t\tif (targetEntitySet) {\n\t\t\t// Pushing the target entitySet to visited objects\n\t\t\tlocalObjects.push(targetEntitySet);\n\t\t}\n\t\t// Re-calculating the relative path\n\t\t// As each navigation name is enclosed between '$NavigationPropertyBinding' and '$' (to be able to access the entityset easily in the metamodel)\n\t\t// we need to remove the closing '$' to be able to switch to the next navigation\n\t\trelativeSplit = relativeSplit.slice(aNavProps.length || 1);\n\t\tif (relativeSplit.length && relativeSplit[0] === \"$\") {\n\t\t\trelativeSplit.shift();\n\t\t}\n\t\trelativePath = relativeSplit.join(\"/\");\n\t}\n\tif (relativePath.startsWith(\"$Type\")) {\n\t\t// As $Type@ is allowed as well\n\t\tif (relativePath.startsWith(\"$Type@\")) {\n\t\t\trelativePath = relativePath.replace(\"$Type\", \"\");\n\t\t} else {\n\t\t\t// We're anyway going to look on the entityType...\n\t\t\trelativePath = aPathSplit.slice(3).join(\"/\");\n\t\t}\n\t}\n\tif (targetEntitySet && relativePath.length) {\n\t\tconst oTarget = targetEntitySet.entityType.resolvePath(relativePath, bIncludeVisitedObjects);\n\t\tif (oTarget) {\n\t\t\tif (bIncludeVisitedObjects) {\n\t\t\t\toTarget.visitedObjects = localObjects.concat(oTarget.visitedObjects);\n\t\t\t}\n\t\t} else if (targetEntitySet.entityType && targetEntitySet.entityType.actions) {\n\t\t\t// if target is an action or an action parameter\n\t\t\tconst actions = targetEntitySet.entityType && targetEntitySet.entityType.actions;\n\t\t\tconst relativeSplit = relativePath.split(\"/\");\n\t\t\tif (actions[relativeSplit[0]]) {\n\t\t\t\tconst action = actions[relativeSplit[0]];\n\t\t\t\tif (relativeSplit[1] && action.parameters) {\n\t\t\t\t\tconst parameterName = relativeSplit[1];\n\t\t\t\t\treturn action.parameters.find((parameter) => {\n\t\t\t\t\t\treturn parameter.fullyQualifiedName.endsWith(`/${parameterName}`);\n\t\t\t\t\t});\n\t\t\t\t} else if (relativePath.length === 1) {\n\t\t\t\t\treturn action;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn oTarget;\n\t} else {\n\t\tif (bIncludeVisitedObjects) {\n\t\t\treturn {\n\t\t\t\ttarget: targetEntitySet,\n\t\t\t\tvisitedObjects: localObjects\n\t\t\t};\n\t\t}\n\t\treturn targetEntitySet;\n\t}\n}\n\nexport type ResolvedTarget<T extends ServiceObjectAndAnnotation = ServiceObject> = {\n\ttarget?: T extends ServiceObject ? T : AnnotationTerm<T>;\n\tvisitedObjects: ServiceObjectAndAnnotation[];\n};\n\nexport function getInvolvedDataModelObjects<T>(oMetaModelContext: Context, oEntitySetMetaModelContext?: Context): DataModelObjectPath<T> {\n\tconst oConvertedMetadata = convertTypes(oMetaModelContext.getModel() as ODataMetaModel);\n\tconst metaModelContext = convertMetaModelContext(oMetaModelContext, true) as ResolvedTarget;\n\tlet targetEntitySetLocation;\n\tif (oEntitySetMetaModelContext && oEntitySetMetaModelContext.getPath() !== \"/\") {\n\t\ttargetEntitySetLocation = getInvolvedDataModelObjects(oEntitySetMetaModelContext);\n\t}\n\treturn getInvolvedDataModelObjectFromPath<T>(metaModelContext, oConvertedMetadata, targetEntitySetLocation);\n}\n\nexport function getInvolvedDataModelObjectFromPath<T>(\n\tmetaModelContext: ResolvedTarget,\n\tconvertedTypes: ConvertedMetadata,\n\ttargetEntitySetLocation?: DataModelObjectContext,\n\tonlyServiceObjects = false\n): DataModelObjectPath<T> {\n\tconst dataModelObjects = metaModelContext.visitedObjects.filter(\n\t\t(visitedObject) => isServiceObject(visitedObject) && !isEntityType(visitedObject) && !isEntityContainer(visitedObject)\n\t);\n\tif (\n\t\tisServiceObject(metaModelContext.target) &&\n\t\t!isEntityType(metaModelContext.target) &&\n\t\tdataModelObjects[dataModelObjects.length - 1] !== metaModelContext.target &&\n\t\t!onlyServiceObjects\n\t) {\n\t\tdataModelObjects.push(metaModelContext.target);\n\t}\n\n\tconst navigationProperties: NavigationProperty[] = [];\n\tconst rootEntitySet: EntitySet = dataModelObjects[0] as EntitySet;\n\n\tlet currentEntitySet: EntitySet | Singleton | undefined = rootEntitySet;\n\tlet currentEntityType: EntityType = rootEntitySet.entityType;\n\tlet currentObject: ServiceObjectAndAnnotation | undefined;\n\tlet navigatedPath = [];\n\n\tfor (let i = 1; i < dataModelObjects.length; i++) {\n\t\tcurrentObject = dataModelObjects[i];\n\n\t\tif (isNavigationProperty(currentObject)) {\n\t\t\tnavigatedPath.push(currentObject.name);\n\t\t\tnavigationProperties.push(currentObject);\n\t\t\tcurrentEntityType = currentObject.targetType;\n\t\t\tconst boundEntitySet: EntitySet | Singleton | undefined = currentEntitySet?.navigationPropertyBinding[navigatedPath.join(\"/\")];\n\t\t\tif (boundEntitySet !== undefined) {\n\t\t\t\tcurrentEntitySet = boundEntitySet;\n\t\t\t\tnavigatedPath = [];\n\t\t\t}\n\t\t}\n\t\tif (isEntitySet(currentObject) || isSingleton(currentObject)) {\n\t\t\tcurrentEntitySet = currentObject;\n\t\t\tcurrentEntityType = currentEntitySet.entityType;\n\t\t}\n\t}\n\n\tif (navigatedPath.length > 0) {\n\t\t// Path without NavigationPropertyBinding --> no target entity set\n\t\tcurrentEntitySet = undefined;\n\t}\n\n\tif (targetEntitySetLocation && targetEntitySetLocation.startingEntitySet !== rootEntitySet) {\n\t\t// In case the entityset is not starting from the same location it may mean that we are doing too much work earlier for some reason\n\t\t// As such we need to redefine the context source for the targetEntitySetLocation\n\t\tconst startingIndex = dataModelObjects.indexOf(targetEntitySetLocation.startingEntitySet);\n\t\tif (startingIndex !== -1) {\n\t\t\t// If it's not found I don't know what we can do (probably nothing)\n\t\t\tconst requiredDataModelObjects = dataModelObjects.slice(0, startingIndex);\n\t\t\ttargetEntitySetLocation.startingEntitySet = rootEntitySet;\n\t\t\ttargetEntitySetLocation.navigationProperties = requiredDataModelObjects\n\t\t\t\t.filter(isNavigationProperty)\n\t\t\t\t.concat(targetEntitySetLocation.navigationProperties as NavigationProperty[]);\n\t\t}\n\t}\n\tconst outDataModelPath = {\n\t\tstartingEntitySet: rootEntitySet,\n\t\ttargetEntitySet: currentEntitySet,\n\t\ttargetEntityType: currentEntityType,\n\t\ttargetObject: metaModelContext.target,\n\t\tnavigationProperties,\n\t\tcontextLocation: targetEntitySetLocation,\n\t\tconvertedTypes: convertedTypes\n\t};\n\tif (!isServiceObject(outDataModelPath.targetObject) && onlyServiceObjects) {\n\t\toutDataModelPath.targetObject = isServiceObject(currentObject) ? currentObject : undefined;\n\t}\n\tif (!outDataModelPath.contextLocation) {\n\t\toutDataModelPath.contextLocation = outDataModelPath;\n\t}\n\treturn outDataModelPath as DataModelObjectPath<T>;\n}\n\n/**\n * This function fetches the technical and semantic keys of entity sets.\n * @param context\n * @returns The object containing technical and semantic keys of the entity.\n */\nexport function getInvolvedDataModelObjectEntityKeys(context: ODataV4Context): {\n\ttechnicalKeys: string[];\n\tsemanticKeys: string[];\n} {\n\tconst metaModel = context?.getModel()?.getMetaModel();\n\tif (metaModel) {\n\t\tconst metaPath = metaModel.getMetaPath(context?.getPath());\n\t\tconst dataModel = getInvolvedDataModelObjects(metaModel.getMetaContext(metaPath));\n\t\tconst rootSemanticKeys = dataModel.targetEntityType.annotations.Common?.SemanticKey;\n\t\tlet semanticKeys: string[] = [];\n\t\tif (rootSemanticKeys) {\n\t\t\tsemanticKeys = rootSemanticKeys.map((key) => {\n\t\t\t\treturn key.value;\n\t\t\t});\n\t\t}\n\t\tconst rootTechnicalKeys = dataModel.targetEntityType.keys;\n\t\tlet technicalKeys: string[] = [];\n\t\tif (rootTechnicalKeys) {\n\t\t\ttechnicalKeys = rootTechnicalKeys.map((key) => {\n\t\t\t\treturn key.name;\n\t\t\t});\n\t\t}\n\t\treturn {\n\t\t\tsemanticKeys: semanticKeys,\n\t\t\ttechnicalKeys: technicalKeys\n\t\t};\n\t}\n\treturn { technicalKeys: [], semanticKeys: [] };\n}\n\nexport function extractModelAndPath<T extends string | undefined>(metaPath: T): { id: string | undefined; path: T } {\n\tif (metaPath?.includes(\">\")) {\n\t\tconst [modelId, ...path] = metaPath.split(\">\");\n\t\tconst targetPath = path.join(\">\");\n\t\treturn { id: modelId, path: targetPath as T };\n\t} else {\n\t\treturn { id: undefined, path: metaPath };\n\t}\n}\n\n/**\n * Fetches the DataModel Object Path for a given target path.\n * @param targetPath\n * @param metaModel\n * @returns DataModel Object Path for target path\n */\nexport function getInvolvedDataModelObjectsForTargetPath<T>(\n\ttargetPath: string,\n\tmetaModel?: ODataMetaModel\n): DataModelObjectPath<T> | undefined {\n\tconst metaPath = metaModel?.getMetaPath(targetPath);\n\tconst metaContext = metaPath ? metaModel?.getContext(metaPath) : undefined;\n\treturn metaContext && getInvolvedDataModelObjects(metaContext);\n}\n\n/**\n * Gets the binding expression of a virtual path.\n * @param path The virtual path\n * @param convertedTypes The converted metadata\n * @returns DataModel Object Path for target path\n */\nexport function getVirtualBindingExpression(\n\tpath: string,\n\tconvertedTypes: ConvertedMetadata\n): { expression: BindingToolkitExpression<unknown>; viewId?: string } {\n\tconst virtualKey = \"@$ui5.fe.virtual.\";\n\tif (path.includes(virtualKey)) {\n\t\tconst id = Object.keys(convertedMetaModelMap).find((id) => convertedMetaModelMap[id] === convertedTypes);\n\t\tif (id && virtualPropertiesMap[id]) {\n\t\t\tconst relativePath = path.substring(0, path.indexOf(convertedTypes.namespace));\n\t\t\tconst pathInfos = path.split(virtualKey);\n\t\t\tif (pathInfos.length === 2) {\n\t\t\t\tconst method = pathInfos[1];\n\t\t\t\tconst virtualProperty = pathInfos[0].replace(relativePath, \"\");\n\t\t\t\tconst virtualPropertyFn = virtualPropertiesMap[id][method];\n\t\t\t\tif (virtualPropertyFn?.fn) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\texpression: virtualPropertyFn.fn(virtualProperty, convertedTypes, relativePath),\n\t\t\t\t\t\tviewId: virtualPropertyFn.viewId\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn { expression: constant(undefined) };\n\t}\n\treturn { expression: constant(undefined) };\n}\n\n/**\n * Gets the binding expression of a criticality.\n * @param path The path pointing to a DataField or DataPoint\n * @param convertedTypes The converted metadata\n * @param relativePath The relative path of the binding expression\n * @returns The binding expression of the criticality\n */\nfunction getVirtualCriticalityExpression(\n\tpath: string,\n\tconvertedTypes: ConvertedMetadata,\n\trelativePath?: string\n): BindingToolkitExpression<unknown> {\n\tconst criticalityProperty = convertedTypes.resolvePath<DataPointType | DataFieldAbstractTypes>(path)?.target?.Criticality;\n\tconst criticalityExpression = criticalityProperty\n\t\t? getExpressionFromAnnotation(\n\t\t\t\tcriticalityProperty as unknown as PropertyAnnotationValue<PrimitiveType>,\n\t\t\t\t[],\n\t\t\t\tundefined,\n\t\t\t\t(bindingPath: string) => {\n\t\t\t\t\treturn relativePath ? `${relativePath}${bindingPath}` : bindingPath;\n\t\t\t\t}\n\t\t  )\n\t\t: undefined;\n\tif (!criticalityExpression) {\n\t\treturn constant(undefined);\n\t}\n\treturn formatResult([criticalityExpression], \"._formatters.CriticalityFormatter#getCriticality\");\n}\n"],"mappings":"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","ignoreList":[],"file":"MetaModelConverter-dbg.js"}