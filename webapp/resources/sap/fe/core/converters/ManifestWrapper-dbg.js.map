{"version":3,"names":["ensureAnnotationPath","obj","property","propertyValue","Array","isArray","forEach","entry","includes","ManifestWrapper","oManifestSettings","appComponent","views","paths","path","controlConfiguration","Object","values","quickVariantSelection","tableSettings","_proto","prototype","getSapFeManifestConfiguration","sapFeManifestConfiguration","getTemplateType","converterType","isFilterBarHidden","hideFilterBar","useHiddenFilterBar","getCollapsedHeaderFragment","content","header","customHeader","collapsedHeaderFragment","getExpandedHeaderFragment","expandedHeaderFragment","isDesktop","isPhone","getFormContainer","facetTarget","getHeaderFacets","merge","facets","getHeaderActions","actions","getFooterActions","footer","getVariantManagement","variantManagement","VariantManagementType","None","getDefaultTemplateAnnotationPath","defaultTemplateAnnotationPath","getControlConfiguration","sAnnotationPath","getNavigationConfiguration","navigationOrCollectionName","navigation","getViewLevel","viewLevel","getContentDensities","contentDensities","cozy","compact","isFclEnabled","fclEnabled","isCondensedLayoutCompliant","manifestContentDensity","shellContentDensity","isSmallDevice","Device","system","desktop","resize","width","isCompactType","getOutboundNavigationEntries","getManifestEntry","crossNavigation","outbounds","getSectionLayout","sectionLayout","getSections","sections","body","getHorizontalLayoutForFieldGroup","fieldTarget","subSections","horizontalLayout","isHeaderEditable","getShowObjectPageHeader","editableHeaderContent","getUseTextForNoDataMessages","useTextForNoDataMessages","getShowAnchorBar","anchorBarVisible","undefined","useIconTabBar","visible","getEnableLazyLoading","enableLazyLoading","getTransportSelection","transportSelection","getViewConfiguration","getStickyMultiTabHeaderConfiguration","bStickyMultiTabHeader","stickyMultiTabHeader","getKPIConfiguration","keyPerformanceIndicators","getFilterConfiguration","configPath","arguments","length","hasMultipleEntitySets","viewConfig","manifestEntitySet","entitySet","find","template","hasMultipleVisualizations","primary","secondary","some","primaryPath","secondaryPath","getContextPath","contextPath","isViewPathConfiguration","isCombinedViewConfiguration","isCustomViewConfiguration","multipleViewsConfiguration","getEntitySet","hasInlineEdit","inlineEdit","disabledFields","enabledFields","getInlineEditEnabledFields","getInlineEditDisabledFields","getInlineConnectedFields","connectedFields"],"sourceRoot":".","sources":["ManifestWrapper.ts"],"sourcesContent":["import merge from \"sap/base/util/merge\";\nimport type AppComponent from \"sap/fe/core/AppComponent\";\nimport type {\n\tBaseManifestSettings,\n\tCombinedViewPathConfiguration,\n\tContentDensitiesType,\n\tControlManifestConfiguration,\n\tCustomViewTemplateConfiguration,\n\tFilterManifestConfiguration,\n\tFormManifestConfiguration,\n\tKPIConfiguration,\n\tListReportManifestSettings,\n\tManifestAction,\n\tManifestHeaderFacet,\n\tManifestSection,\n\tMultipleViewsConfiguration,\n\tNavigationSettingsConfiguration,\n\tObjectPageManifestSettings,\n\tSingleViewPathConfiguration,\n\tTableManifestConfiguration,\n\tTemplateType,\n\tTransportSelectionDefinition,\n\tViewConfiguration\n} from \"sap/fe/core/converters/ManifestSettings\";\nimport { VariantManagementType } from \"sap/fe/core/converters/ManifestSettings\";\nimport type { ConfigurableRecord } from \"sap/fe/core/converters/helpers/ConfigurableObject\";\nimport Device from \"sap/ui/Device\";\nimport type { ManifestContent, ManifestOutboundEntry } from \"sap/ui/core/Manifest\";\n\nfunction ensureAnnotationPath<T extends object>(obj: T | undefined, property: keyof T): void {\n\tconst propertyValue = obj?.[property];\n\tif (Array.isArray(propertyValue)) {\n\t\tpropertyValue.forEach((entry) => ensureAnnotationPath(entry, \"annotationPath\"));\n\t} else if (propertyValue && typeof propertyValue === \"string\" && !propertyValue.includes(\"@\")) {\n\t\tobj[property] = (\"@\" + propertyValue) as T[keyof T];\n\t}\n}\n\n/**\n *\n */\nclass ManifestWrapper {\n\t/**\n\t * Creates a wrapper object to ensure the data returned from the manifest is consistent and everything is merged correctly.\n\t * @param oManifestSettings The manifest settings for the current page\n\t * @param appComponent The app component\n\t * @returns The manifest wrapper object\n\t */\n\tconstructor(\n\t\tprivate oManifestSettings: BaseManifestSettings,\n\t\tprivate appComponent?: AppComponent\n\t) {\n\t\t// Ensure that properties which are meant to contain an *annotation* path contain a '@'\n\t\tensureAnnotationPath(this.oManifestSettings, \"defaultTemplateAnnotationPath\");\n\n\t\t(this.oManifestSettings as ListReportManifestSettings).views?.paths.forEach((path) => {\n\t\t\tensureAnnotationPath(path as SingleViewPathConfiguration, \"annotationPath\");\n\t\t\tensureAnnotationPath(path as CombinedViewPathConfiguration, \"primary\");\n\t\t\tensureAnnotationPath(path as CombinedViewPathConfiguration, \"secondary\");\n\t\t});\n\n\t\tif (this.oManifestSettings.controlConfiguration) {\n\t\t\tfor (const controlConfiguration of Object.values(this.oManifestSettings.controlConfiguration)) {\n\t\t\t\tconst quickVariantSelection = (controlConfiguration as TableManifestConfiguration).tableSettings?.quickVariantSelection;\n\t\t\t\tensureAnnotationPath(quickVariantSelection, \"paths\");\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Returns the global manifest content sap.fe.\n\t * @returns The Object manifest sap.fe\n\t */\n\tgetSapFeManifestConfiguration(): ManifestContent[\"sap.fe\"] | undefined {\n\t\treturn this.oManifestSettings.sapFeManifestConfiguration;\n\t}\n\n\t/**\n\t * Returns the current template type.\n\t * @returns The type of the current template\n\t */\n\tgetTemplateType(): TemplateType {\n\t\treturn this.oManifestSettings.converterType;\n\t}\n\n\t/**\n\t * Checks whether the current template should display the filter bar.\n\t * @returns `true` if the filter bar should be hidden\n\t */\n\tisFilterBarHidden(): boolean {\n\t\treturn !!(this.oManifestSettings as ListReportManifestSettings)?.hideFilterBar;\n\t}\n\n\tuseHiddenFilterBar(): boolean {\n\t\treturn !!(this.oManifestSettings as ListReportManifestSettings)?.useHiddenFilterBar;\n\t}\n\n\tgetCollapsedHeaderFragment(): string | undefined {\n\t\treturn (this.oManifestSettings as ListReportManifestSettings)?.content?.header?.customHeader?.collapsedHeaderFragment;\n\t}\n\n\tgetExpandedHeaderFragment(): string | undefined {\n\t\treturn (this.oManifestSettings as ListReportManifestSettings)?.content?.header?.customHeader?.expandedHeaderFragment;\n\t}\n\n\t/**\n\t * Checks whether the current environment is a desktop or not.\n\t * @returns `true` if we are on a desktop\n\t */\n\tisDesktop(): boolean {\n\t\treturn !!this.oManifestSettings.isDesktop;\n\t}\n\n\t/**\n\t * Checks whether the current environment is a mobile phone or not.\n\t * @returns `true` if we are on a mobile phone\n\t */\n\tisPhone(): boolean {\n\t\treturn !!this.oManifestSettings.isPhone;\n\t}\n\n\t/**\n\t * Retrieves the form containers (field groups or identification) defined in the manifest.\n\t * @param facetTarget The target annotation path for this form\n\t * @returns A set of form containers defined in the manifest indexed by an iterable key\n\t */\n\tgetFormContainer(facetTarget: string): FormManifestConfiguration {\n\t\treturn this.oManifestSettings.controlConfiguration?.[facetTarget] as FormManifestConfiguration;\n\t}\n\n\t/**\n\t * Retrieves the header facets defined in the manifest.\n\t * @returns A set of header facets defined in the manifest indexed by an iterable key\n\t */\n\tgetHeaderFacets(): ConfigurableRecord<ManifestHeaderFacet> {\n\t\treturn merge(\n\t\t\t{},\n\t\t\tthis.oManifestSettings.controlConfiguration?.[\"@com.sap.vocabularies.UI.v1.HeaderFacets\"]?.facets ?? {},\n\t\t\t(this.oManifestSettings as ObjectPageManifestSettings).content?.header?.facets ?? {}\n\t\t) as unknown as ConfigurableRecord<ManifestHeaderFacet>;\n\t}\n\n\t/**\n\t * Retrieves the header actions defined in the manifest.\n\t * @returns A set of actions defined in the manifest indexed by an iterable key\n\t */\n\tgetHeaderActions(): ConfigurableRecord<ManifestAction> {\n\t\treturn this.oManifestSettings.content?.header?.actions || {};\n\t}\n\n\t/**\n\t * Retrieves the footer actions defined in the manifest.\n\t * @returns A set of actions defined in the manifest indexed by an iterable key\n\t */\n\tgetFooterActions(): ConfigurableRecord<ManifestAction> {\n\t\treturn this.oManifestSettings.content?.footer?.actions || {};\n\t}\n\n\t/**\n\t * Retrieves the variant management as defined in the manifest.\n\t * @returns A type of variant management\n\t */\n\tgetVariantManagement(): VariantManagementType {\n\t\treturn this.oManifestSettings.variantManagement || VariantManagementType.None;\n\t}\n\n\t/**\n\t * Retrieves the annotation Path for the SPV in the manifest.\n\t * @returns The annotation path for the default SPV or undefined.\n\t */\n\tgetDefaultTemplateAnnotationPath(): string | undefined {\n\t\treturn this.oManifestSettings.defaultTemplateAnnotationPath;\n\t}\n\n\t/**\n\t * Retrieves the control configuration as defined in the manifest for a specific annotation path.\n\t * @param sAnnotationPath The relative annotation path\n\t * @returns The control configuration\n\t */\n\tgetControlConfiguration<T = ControlManifestConfiguration>(sAnnotationPath: string): T {\n\t\treturn (this.oManifestSettings?.controlConfiguration?.[sAnnotationPath] || {}) as T;\n\t}\n\n\t/**\n\t * Retrieves the configured settings for a given navigation target.\n\t * @param navigationOrCollectionName The name of the navigation to check\n\t * @returns The navigation settings configuration\n\t */\n\tgetNavigationConfiguration(navigationOrCollectionName: string): NavigationSettingsConfiguration {\n\t\treturn this.oManifestSettings?.navigation?.[navigationOrCollectionName] || {};\n\t}\n\n\t/**\n\t * Retrieves the view level.\n\t * @returns The current view level\n\t */\n\tgetViewLevel(): number {\n\t\treturn this.oManifestSettings?.viewLevel || -1;\n\t}\n\n\t/**\n\t * Retrieves the contentDensities setting of the application.\n\t * @returns The current content density\n\t */\n\tgetContentDensities(): ContentDensitiesType {\n\t\treturn (\n\t\t\tthis.oManifestSettings?.contentDensities || {\n\t\t\t\tcozy: false,\n\t\t\t\tcompact: false\n\t\t\t}\n\t\t);\n\t}\n\n\t/**\n\t * Checks whether we are in FCL mode or not.\n\t * @returns `true` if we are in FCL\n\t */\n\tisFclEnabled(): boolean {\n\t\treturn !!this.oManifestSettings?.fclEnabled;\n\t}\n\n\t/**\n\t * Checks whether the current settings (application / shell) allows us to use condensed layout.\n\t * @returns `true` if we can use the condensed layout, false otherwise\n\t */\n\tisCondensedLayoutCompliant(): boolean {\n\t\tconst manifestContentDensity = this.oManifestSettings?.contentDensities || {\n\t\t\tcozy: false,\n\t\t\tcompact: false\n\t\t};\n\t\tconst shellContentDensity = this.oManifestSettings?.shellContentDensity || \"compact\";\n\t\tlet isCondensedLayoutCompliant = true;\n\t\tconst isSmallDevice = !Device.system.desktop || Device.resize.width <= 320;\n\t\tif (\n\t\t\t(manifestContentDensity?.cozy === true && manifestContentDensity?.compact !== true) ||\n\t\t\tshellContentDensity === \"cozy\" ||\n\t\t\tisSmallDevice\n\t\t) {\n\t\t\tisCondensedLayoutCompliant = false;\n\t\t}\n\t\treturn isCondensedLayoutCompliant;\n\t}\n\n\t/**\n\t * Checks whether the current settings (application / shell) uses compact mode as content density.\n\t * @returns `true` if compact mode is set as content density, false otherwise\n\t */\n\tisCompactType(): boolean {\n\t\tconst manifestContentDensity = this.getContentDensities();\n\t\tconst shellContentDensity = this.oManifestSettings?.shellContentDensity || \"compact\";\n\t\treturn manifestContentDensity.compact !== false || shellContentDensity === \"compact\" ? true : false;\n\t}\n\n\t/**\n\t * Retrieves the outbound navigation entries defined in the cross-navigation section of the application manifest.\n\t * @returns The entries if they exist, otherwise undefined\n\t */\n\tgetOutboundNavigationEntries(): Record<string, ManifestOutboundEntry> | undefined {\n\t\treturn this.appComponent?.getManifestEntry(\"sap.app\")?.crossNavigation?.outbounds;\n\t}\n\n\t//region OP Specific\n\n\t/**\n\t * Retrieves the section layout defined in the manifest.\n\t * @returns The type of section layout of the object page\n\t */\n\tgetSectionLayout(): string {\n\t\treturn (this.oManifestSettings as ObjectPageManifestSettings).sectionLayout ?? \"Tabs\";\n\t}\n\n\t/**\n\t * Retrieves the sections defined in the manifest.\n\t * @returns A set of manifest sections indexed by an iterable key\n\t */\n\tgetSections(): ConfigurableRecord<ManifestSection> {\n\t\treturn merge(\n\t\t\t{},\n\t\t\tthis.oManifestSettings.controlConfiguration?.[\"@com.sap.vocabularies.UI.v1.Facets\"]?.sections ?? {},\n\t\t\t(this.oManifestSettings as ObjectPageManifestSettings).content?.body?.sections ?? {}\n\t\t) as unknown as ConfigurableRecord<ManifestSection>;\n\t}\n\n\t/**\n\t * Returns the horizontal layout setting for a field group, if there is one.\n\t * @param facetTarget The target annotation path for the outer field group in the facet\n\t * @param fieldTarget The target annotation path for the field inside the field group, which is a field group itself in case of the horizontalLayout setting\n\t * @returns The horizontal layout setting for the field group, if it exists, otherwise undefined\n\t */\n\tgetHorizontalLayoutForFieldGroup(facetTarget: string, fieldTarget: string): boolean | undefined {\n\t\treturn (this.oManifestSettings as ObjectPageManifestSettings).content?.body?.sections?.[facetTarget]?.subSections?.[fieldTarget]\n\t\t\t?.horizontalLayout;\n\t}\n\n\t/**\n\t * Returns true of the header of the application is editable and should appear in the facets.\n\t * @returns `true` if the header if editable\n\t */\n\tisHeaderEditable(): boolean {\n\t\treturn this.getShowObjectPageHeader() && !!(this.oManifestSettings as ObjectPageManifestSettings).editableHeaderContent;\n\t}\n\n\t/**\n\t * Returns true if we should use text instead of IllustratedMessage for the noData aggregation in the whole page.\n\t * @returns `true` if we should use text for noData aggregation\n\t */\n\tgetUseTextForNoDataMessages(): boolean {\n\t\treturn (this.oManifestSettings as ObjectPageManifestSettings).useTextForNoDataMessages ?? false;\n\t}\n\n\t/**\n\t * Returns true if we should show the object page header.\n\t * @returns `true` if the header should be displayed\n\t */\n\tgetShowAnchorBar(): boolean {\n\t\treturn (this.oManifestSettings as ObjectPageManifestSettings).content?.header?.anchorBarVisible !== undefined\n\t\t\t? !!(this.oManifestSettings as ObjectPageManifestSettings).content?.header?.anchorBarVisible\n\t\t\t: true;\n\t}\n\n\t/**\n\t * Defines whether or not the section will be displayed in different tabs.\n\t * @returns `true` if the icon tab bar should be used instead of scrolling\n\t */\n\tuseIconTabBar(): boolean {\n\t\treturn this.getShowAnchorBar() && (this.oManifestSettings as ObjectPageManifestSettings).sectionLayout === \"Tabs\";\n\t}\n\n\t/**\n\t * Returns true if the object page header is to be shown.\n\t * @returns `true` if the object page header is to be displayed\n\t */\n\tgetShowObjectPageHeader(): boolean {\n\t\treturn (this.oManifestSettings as ObjectPageManifestSettings).content?.header?.visible !== undefined\n\t\t\t? !!(this.oManifestSettings as ObjectPageManifestSettings).content?.header?.visible\n\t\t\t: true;\n\t}\n\n\t/**\n\t * Returns whether the lazy loader should be enabled for this page or not.\n\t * @returns `true` if the lazy loader should be enabled\n\t */\n\tgetEnableLazyLoading(): boolean {\n\t\treturn this.oManifestSettings.enableLazyLoading ?? false;\n\t}\n\n\t/**\n\t * Returns the transport selection definition.\n\t * @returns Definition with transport property and select action\n\t */\n\tgetTransportSelection(): TransportSelectionDefinition | undefined {\n\t\treturn (this.oManifestSettings as ObjectPageManifestSettings).content?.transportSelection;\n\t}\n\n\t//endregion OP Specific\n\n\t//region LR Specific\n\n\t/**\n\t * Retrieves the multiple view configuration from the manifest.\n\t * @returns The views that represent the manifest object\n\t */\n\tgetViewConfiguration(): MultipleViewsConfiguration | undefined {\n\t\treturn (this.oManifestSettings as ListReportManifestSettings).views;\n\t}\n\n\t/**\n\t * Retrieves the stickyMultiTabHeader configuration from the manifest.\n\t * @returns Returns True if stickyMultiTabHeader is enabled or undefined\n\t */\n\tgetStickyMultiTabHeaderConfiguration(): boolean {\n\t\tconst bStickyMultiTabHeader = (this.oManifestSettings as ListReportManifestSettings).stickyMultiTabHeader;\n\t\treturn bStickyMultiTabHeader !== undefined ? bStickyMultiTabHeader : true;\n\t}\n\n\t/**\n\t * Retrieves the KPI configuration from the manifest.\n\t * @returns Returns a map between KPI names and their respective configuration\n\t */\n\tgetKPIConfiguration(): { [kpiName: string]: KPIConfiguration } {\n\t\treturn (this.oManifestSettings as ListReportManifestSettings).keyPerformanceIndicators || {};\n\t}\n\n\t/**\n\t * Retrieves the filter configuration from the manifest.\n\t * @param configPath\n\t * @returns The filter configuration from the manifest\n\t */\n\tgetFilterConfiguration(configPath = \"@com.sap.vocabularies.UI.v1.SelectionFields\"): FilterManifestConfiguration {\n\t\treturn this.getControlConfiguration<FilterManifestConfiguration>(configPath);\n\t}\n\n\t/**\n\t * Returns true if there are multiple entity sets to be displayed.\n\t * @returns `true` if there are multiple entity sets\n\t */\n\thasMultipleEntitySets(): boolean {\n\t\tconst viewConfig = this.getViewConfiguration() || { paths: [] };\n\t\tconst manifestEntitySet = this.oManifestSettings.entitySet;\n\t\treturn (\n\t\t\tviewConfig.paths.find((path: ViewConfiguration) => {\n\t\t\t\tif ((path as CustomViewTemplateConfiguration)?.template) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t} else if (this.hasMultipleVisualizations(path as CombinedViewPathConfiguration)) {\n\t\t\t\t\tconst { primary, secondary } = path as CombinedViewPathConfiguration;\n\t\t\t\t\treturn (\n\t\t\t\t\t\tprimary.some((primaryPath) => primaryPath.entitySet && primaryPath.entitySet !== manifestEntitySet) ||\n\t\t\t\t\t\tsecondary.some((secondaryPath) => secondaryPath.entitySet && secondaryPath.entitySet !== manifestEntitySet)\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tpath = path as SingleViewPathConfiguration;\n\t\t\t\t\treturn path.entitySet && path.entitySet !== manifestEntitySet;\n\t\t\t\t}\n\t\t\t}) !== undefined\n\t\t);\n\t}\n\n\t/**\n\t * Returns the context path for the template if it is specified in the manifest.\n\t * @returns The context path for the template\n\t */\n\tgetContextPath(): string | undefined {\n\t\treturn this.oManifestSettings?.contextPath;\n\t}\n\n\t/**\n\t * Returns true if the configuration is a single path configuration.\n\t * @param viewConfig The view configuration\n\t * @returns `true` if this is a single path configuration\n\t */\n\tisViewPathConfiguration(viewConfig: ViewConfiguration): viewConfig is SingleViewPathConfiguration {\n\t\treturn \"annotationPath\" in viewConfig && !(\"primary\" in viewConfig) && !(\"secondary\" in viewConfig);\n\t}\n\n\t/**\n\t * Returns true if the configuration is a combined configuration.\n\t * @param viewConfig The view configuration\n\t * @returns `true` if this is a combined configuration\n\t */\n\tisCombinedViewConfiguration(viewConfig: ViewConfiguration): viewConfig is CombinedViewPathConfiguration {\n\t\treturn !this.isCustomViewConfiguration(viewConfig) && !this.isViewPathConfiguration(viewConfig)\n\t\t\t? viewConfig.primary?.length > 0 && viewConfig.secondary?.length > 0\n\t\t\t: false;\n\t}\n\n\t/**\n\t * Returns true if the configuration is a custom configuration.\n\t * @param viewConfig The view configuration\n\t * @returns `true` if this is a custom configuration\n\t */\n\tisCustomViewConfiguration(viewConfig: ViewConfiguration): viewConfig is CustomViewTemplateConfiguration {\n\t\treturn \"template\" in viewConfig;\n\t}\n\n\t/**\n\t * Returns true if there are multiple visualizations.\n\t * @param viewConfig The path from the view\n\t * @returns `true` if there are multiple visualizations\n\t */\n\thasMultipleVisualizations(viewConfig?: ViewConfiguration): boolean {\n\t\tif (!viewConfig) {\n\t\t\tconst multipleViewsConfiguration = this.getViewConfiguration() || { paths: [] };\n\t\t\treturn multipleViewsConfiguration.paths.some((path) => this.isCombinedViewConfiguration(path));\n\t\t}\n\t\treturn this.isCombinedViewConfiguration(viewConfig);\n\t}\n\n\t/**\n\t * Retrieves the entity set defined in the manifest.\n\t * @returns The entity set defined in the manifest\n\t */\n\tgetEntitySet(): string | undefined {\n\t\treturn this.oManifestSettings.entitySet;\n\t}\n\n\thasInlineEdit(): boolean {\n\t\treturn !!this.oManifestSettings.inlineEdit?.disabledFields || (this.oManifestSettings?.inlineEdit?.enabledFields?.length ?? 0) > 0;\n\t}\n\n\tgetInlineEditEnabledFields(): string[] {\n\t\treturn this.oManifestSettings?.inlineEdit?.enabledFields ?? [];\n\t}\n\n\tgetInlineEditDisabledFields(): string[] {\n\t\treturn this.oManifestSettings?.inlineEdit?.disabledFields ?? [];\n\t}\n\n\tgetInlineConnectedFields(): (string | string[])[] {\n\t\treturn this.oManifestSettings?.inlineEdit?.connectedFields ?? [];\n\t}\n\t//end region LR Specific\n}\n\nexport default ManifestWrapper;\n"],"mappings":"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","ignoreList":[],"file":"ManifestWrapper-dbg.js"}