{"version":3,"names":["isReferencePropertyStaticallyHidden","source","isPropertyHidden","property","dataFieldDefault","annotations","UI","DataFieldDefault","isPropertyStaticallyHidden","isStaticallyHiddenDataField","isDataFieldAbstractTypesHidden","dataField","$Type","isAnnotationFieldStaticallyHidden","getPropertyPathFromPropertyWithHiddenFilter","name","getPropertyPathFromDataFieldWithHiddenFilter","isDataFieldTypes","Value","$target","path","isHidden","isProperty","propertyPathWithHiddenFilter","setLogMessageForHiddenFilter","_exports","annotationProperty","Target","term","measuresHidden","Measures","every","chartMeasure","Log","warning","Data","propertyValueAnnotation","isHeaderStaticallyHidden","propertyDataModel","targetObject","headerInfoAnnotation","Hidden","valueOf","hasOwnProperty","AnnotationTerm","isPotentiallySensitive","dataFieldTarget","fn","PersonalData","IsPotentiallySensitive"],"sourceRoot":".","sources":["DataFieldHelper.ts"],"sourcesContent":["import type { PrimitiveType, Property } from \"@sap-ux/vocabularies-types\";\nimport { CommunicationAnnotationTerms } from \"@sap-ux/vocabularies-types/vocabularies/Communication\";\nimport type {\n\tDataFieldAbstractTypes,\n\tDataFieldForAnnotationTypes,\n\tDataFieldTypes,\n\tDataPointType,\n\tFieldGroup,\n\tReferenceFacetTypes\n} from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport { UIAnnotationTerms, UIAnnotationTypes } from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport Log from \"sap/base/Log\";\nimport { isProperty } from \"../../helpers/TypeGuards\";\nimport type { DataModelObjectPath } from \"../../templating/DataModelPathHelper\";\n\n/**\n * Checks for statically hidden reference properties.\n * @param source The dataField or property to be analized\n * @returns Whether the argument has been set as hidden\n */\nexport function isReferencePropertyStaticallyHidden(source?: DataFieldAbstractTypes | Property): boolean {\n\tif (!source) {\n\t\treturn false;\n\t}\n\tfunction isPropertyHidden(property: Property): boolean {\n\t\tconst dataFieldDefault = property.annotations.UI?.DataFieldDefault || false;\n\t\treturn isPropertyStaticallyHidden(\"Hidden\", property) || (dataFieldDefault && isStaticallyHiddenDataField(dataFieldDefault));\n\t}\n\tfunction isDataFieldAbstractTypesHidden(dataField: DataFieldAbstractTypes): boolean {\n\t\treturn (\n\t\t\tisStaticallyHiddenDataField(dataField) ||\n\t\t\t(dataField.$Type === UIAnnotationTypes.DataFieldForAnnotation && isAnnotationFieldStaticallyHidden(dataField))\n\t\t);\n\t}\n\n\tfunction getPropertyPathFromPropertyWithHiddenFilter(property: Property): string | false {\n\t\treturn isPropertyStaticallyHidden(\"HiddenFilter\", property) && property.name;\n\t}\n\tfunction getPropertyPathFromDataFieldWithHiddenFilter(dataField: DataFieldAbstractTypes): string | false {\n\t\treturn isDataFieldTypes(dataField) && isPropertyStaticallyHidden(\"HiddenFilter\", dataField.Value.$target) && dataField.Value.path;\n\t}\n\n\tconst isHidden = isProperty(source) ? isPropertyHidden(source) : isDataFieldAbstractTypesHidden(source);\n\tconst propertyPathWithHiddenFilter = isProperty(source)\n\t\t? getPropertyPathFromPropertyWithHiddenFilter(source)\n\t\t: getPropertyPathFromDataFieldWithHiddenFilter(source);\n\tif (isHidden && propertyPathWithHiddenFilter) {\n\t\tsetLogMessageForHiddenFilter(propertyPathWithHiddenFilter);\n\t}\n\treturn isHidden;\n}\n\n/**\n * Checks for data fields for annotation with statically hidden referenced properties.\n * @param annotationProperty The dataField or reference Facet type to be analyzed\n * @returns Whether the argument has been set as hidden\n */\nexport function isAnnotationFieldStaticallyHidden(annotationProperty: DataFieldForAnnotationTypes | ReferenceFacetTypes): boolean {\n\tif (isStaticallyHiddenDataField(annotationProperty)) {\n\t\treturn true;\n\t}\n\tswitch (annotationProperty.Target.$target?.term) {\n\t\tcase UIAnnotationTerms.Chart:\n\t\t\tconst measuresHidden = annotationProperty.Target.$target.Measures.every((chartMeasure) => {\n\t\t\t\tif (chartMeasure.$target && isPropertyStaticallyHidden(\"Hidden\", chartMeasure.$target)) {\n\t\t\t\t\tif (isPropertyStaticallyHidden(\"HiddenFilter\", chartMeasure.$target)) {\n\t\t\t\t\t\tsetLogMessageForHiddenFilter(chartMeasure.$target.name);\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (measuresHidden) {\n\t\t\t\tLog.warning(\"Warning: All measures attribute for Chart are statically hidden hence chart can't be rendered\");\n\t\t\t}\n\t\t\treturn measuresHidden;\n\t\tcase UIAnnotationTerms.FieldGroup:\n\t\t\treturn (annotationProperty.Target.$target as FieldGroup).Data.every(isReferencePropertyStaticallyHidden);\n\t\tcase UIAnnotationTerms.DataPoint:\n\t\t\tconst propertyValueAnnotation = (annotationProperty.Target.$target as DataPointType).Value.$target as Property;\n\t\t\treturn isReferencePropertyStaticallyHidden(propertyValueAnnotation);\n\t\tdefault:\n\t\t\treturn false;\n\t}\n}\n\n/**\n * Checks if header is statically hidden.\n * @param propertyDataModel The property Data Model to be analized\n * @returns Whether the argument has been set as hidden\n */\n\nexport function isHeaderStaticallyHidden(propertyDataModel?: DataModelObjectPath<DataFieldAbstractTypes>): boolean {\n\tif (propertyDataModel?.targetObject) {\n\t\tconst headerInfoAnnotation = propertyDataModel.targetObject;\n\t\treturn isReferencePropertyStaticallyHidden(headerInfoAnnotation);\n\t}\n\treturn false;\n}\n\n/**\n * Checks if data field or Reference Facet is statically hidden.\n * @param dataField The dataField or Reference Facet to be analyzed\n * @returns Whether the argument has been set statically as hidden\n */\nfunction isStaticallyHiddenDataField(dataField: DataFieldAbstractTypes | ReferenceFacetTypes): boolean {\n\treturn (\n\t\tdataField.annotations?.UI?.Hidden?.valueOf() === true ||\n\t\t(isDataFieldTypes(dataField) && isPropertyStaticallyHidden(\"Hidden\", dataField?.Value?.$target))\n\t);\n}\n\n/**\n * Adds console warning when setting hidden and hidden filter together.\n * @param path The property path to be added to the warning error message\n */\nfunction setLogMessageForHiddenFilter(path: string): void {\n\tLog.warning(\n\t\t\"Warning: Property \" +\n\t\t\tpath +\n\t\t\t\" is set with both UI.Hidden and UI.HiddenFilter - please set only one of these! UI.HiddenFilter is ignored currently!\"\n\t);\n}\n\n/**\n * Identifies if the given dataFieldAbstract that is passed is a \"DataFieldTypes\".\n * DataField has a value defined.\n * @param dataField DataField to be evaluated\n * @returns Validate that dataField is a DataFieldTypes\n */\nfunction isDataFieldTypes(dataField: DataFieldAbstractTypes | unknown): dataField is DataFieldTypes {\n\treturn (dataField as DataFieldTypes).hasOwnProperty(\"Value\");\n}\n\n/**\n * Identifies if the given property is statically hidden or hidden Filter\".\n * @param AnnotationTerm AnnotationTerm to be evaluated, only options are \"Hidden\" or \"HiddenFilter\n * @param property The property to be checked\n * @returns `true` if it is a statically hidden or hidden filter property\n */\nfunction isPropertyStaticallyHidden(AnnotationTerm: \"Hidden\" | \"HiddenFilter\", property?: Property): boolean {\n\treturn property?.annotations?.UI?.[AnnotationTerm]?.valueOf() === true;\n}\n\n/**\n * Check if dataField or dataPoint main property is potentially sensitive.\n * @param dataField DataFieldAbstractTypes or DataPOint.\n * @returns Boolean\n */\nexport function isPotentiallySensitive(dataField: DataFieldAbstractTypes | DataPointType): boolean {\n\tlet property;\n\tswitch (dataField?.$Type) {\n\t\tcase UIAnnotationTypes.DataField:\n\t\tcase UIAnnotationTypes.DataFieldWithUrl:\n\t\tcase UIAnnotationTypes.DataFieldWithNavigationPath:\n\t\t\tproperty = dataField?.Value?.$target;\n\t\t\tbreak;\n\t\tcase UIAnnotationTypes.DataFieldForAnnotation:\n\t\t\tconst dataFieldTarget = dataField.Target.$target;\n\t\t\tif (dataFieldTarget?.term === UIAnnotationTerms.DataPoint) {\n\t\t\t\tproperty = dataFieldTarget?.Value?.$target;\n\t\t\t}\n\t\t\tif (dataFieldTarget?.term === CommunicationAnnotationTerms.Contact) {\n\t\t\t\tproperty = (dataFieldTarget as PrimitiveType)?.fn?.$target;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase UIAnnotationTypes.DataPointType:\n\t\t\tproperty = dataField?.Value?.$target;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t}\n\treturn property?.annotations?.PersonalData?.IsPotentiallySensitive?.valueOf() === true;\n}\n"],"mappings":"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","ignoreList":[],"file":"DataFieldHelper-dbg.js"}