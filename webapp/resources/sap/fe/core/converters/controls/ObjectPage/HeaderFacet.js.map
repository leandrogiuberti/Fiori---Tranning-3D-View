{"version":3,"file":"HeaderFacet.js","names":["HeaderFacetType","_exports","FacetType","FlexDesignTimeType","HeaderDataPointType","TargetAnnotationType","getHeaderFacetsFromAnnotations","converterContext","headerFacets","getEntityType","annotations","UI","HeaderFacets","forEach","facet","headerFacet","createHeaderFacet","push","getHeaderFacetsFromManifest","manifestCustomHeaderFacets","customHeaderFacets","Object","keys","manifestHeaderFacetKey","customHeaderFacet","createCustomHeaderFacet","getStashedSettingsForHeaderFacet","facetDefinition","collectionFacetDefinition","$Type","headerFacetID","createIdForAnnotation","headerFacetsControlConfig","getManifestWrapper","getHeaderFacets","stashedSetting","stashed","getDesignTimeMetadataSettingsForHeaderFacet","designTimeMetadata","Default","NotAdaptableTree","designTime","flexSettings","designtime","NotAdaptable","NotAdaptableVisibility","createReferenceHeaderFacet","Hidden","valueOf","getHeaderFacetID","getHeaderFacetKey","facetDefinitionToCheck","fallback","ID","toString","Label","targetAnnotationValue","Target","value","targetAnnotationType","getTargetAnnotationType","headerFormData","headerDataPointData","FieldGroup","getFieldGroupFormData","DataPoint","getDataPointData","$target","term","isAnnotationFieldStaticallyHidden","undefined","type","Annotation","facetType","Reference","id","containerId","getHeaderFacetContainerID","key","visible","compileExpression","isVisible","annotationPath","getEntitySetBasedAnnotationPath","fullyQualifiedName","createCollectionHeaderFacet","facets","Facets","Collection","annotationType","None","annotationTypeMap","Chart","Identification","Contact","Address","PresentationVariant","Error","formElements","insertCustomElements","getFormElementsFromAnnotations","getFormElementsFromManifest","getHeaderFacetFormID","label","annotationBasedFormElements","resolvedTarget","getEntityTypeAnnotation","Data","dataField","semanticObjectAnnotationPath","getSemanticObjectPath","isReferencePropertyStaticallyHidden","isValueMultilineText","isMultiLineText","Value","FormElementType","KeyHelper","generateKeyFromDataField","Common","idPrefix","semanticObjectPath","Content","Visualization","ProgressIndicator","RatingIndicator","dataPoint","property","SemanticObject","generateBinding","requestGroupId","groupId","includes","customHeaderFacetDefinition","headerFacetKey","customHeaderFacetID","getCustomHeaderFacetID","position","placement","Placement","After","fragmentName","template","name","title","subTitle","binding","templateEdit"],"sources":["./HeaderFacet.ts"],"sourcesContent":["import type {\n\tDataFieldAbstractTypes,\n\tDataPoint,\n\tFacetTypes,\n\tFieldGroup,\n\tReferenceFacetTypes\n} from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport { UIAnnotationTerms, UIAnnotationTypes } from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport { compileExpression, type CompiledBindingToolkitExpression } from \"sap/fe/base/BindingToolkit\";\nimport type { ManifestHeaderFacet } from \"sap/fe/core/converters/ManifestSettings\";\nimport type { PageContextPathTarget } from \"sap/fe/core/converters/TemplateConverter\";\nimport { getSemanticObjectPath } from \"sap/fe/core/converters/annotations/DataField\";\nimport type { ConfigurableObject, ConfigurableRecord, CustomElement, Position } from \"sap/fe/core/converters/helpers/ConfigurableObject\";\nimport { Placement, insertCustomElements } from \"sap/fe/core/converters/helpers/ConfigurableObject\";\nimport {\n\tgetCustomHeaderFacetID,\n\tgetHeaderFacetContainerID,\n\tgetHeaderFacetFormID,\n\tgetHeaderFacetID\n} from \"sap/fe/core/converters/helpers/ID\";\nimport { KeyHelper } from \"sap/fe/core/converters/helpers/Key\";\nimport { isMultiLineText } from \"sap/fe/core/templating/PropertyHelper\";\nimport { isVisible } from \"sap/fe/core/templating/UIFormatters\";\nimport { createIdForAnnotation } from \"../../../helpers/StableIdHelper\";\nimport type ConverterContext from \"../../ConverterContext\";\nimport { isAnnotationFieldStaticallyHidden, isReferencePropertyStaticallyHidden } from \"../../helpers/DataFieldHelper\";\nimport type { AnnotationFormElement, FormElement } from \"../Common/Form\";\nimport { FormElementType, getFormElementsFromManifest } from \"../Common/Form\";\n\n// region definitions\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// Definitions: Header Facet Types, Generic OP Header Facet, Manifest Properties for Custom Header Facet\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport enum HeaderFacetType {\n\tAnnotation = \"Annotation\",\n\tXMLFragment = \"XMLFragment\"\n}\n\nexport enum FacetType {\n\tReference = \"Reference\",\n\tCollection = \"Collection\"\n}\n\nexport enum FlexDesignTimeType {\n\tDefault = \"Default\",\n\tNotAdaptable = \"not-adaptable\", // disable all actions on that instance\n\tNotAdaptableTree = \"not-adaptable-tree\", // disable all actions on that instance and on all children of that instance\n\tNotAdaptableVisibility = \"not-adaptable-visibility\" // disable all actions that influence the visibility, namely reveal and remove\n}\n\nexport type FlexSettings = {\n\tdesigntime?: FlexDesignTimeType;\n};\n\nexport type HeaderFormData = {\n\tid: string;\n\tlabel?: string;\n\tformElements: FormElement[];\n};\n\nenum HeaderDataPointType {\n\tProgressIndicator = \"ProgressIndicator\",\n\tRatingIndicator = \"RatingIndicator\",\n\tContent = \"Content\"\n}\n\ntype HeaderDataPointData = {\n\ttype: HeaderDataPointType;\n\tsemanticObjectPath?: string;\n};\n\nenum TargetAnnotationType {\n\tNone = \"None\",\n\tDataPoint = \"DataPoint\",\n\tChart = \"Chart\",\n\tIdentification = \"Identification\",\n\tContact = \"Contact\",\n\tAddress = \"Address\",\n\tFieldGroup = \"FieldGroup\",\n\tPresentationVariant = \"PresentationVariant\"\n}\n\ntype BaseHeaderFacet = ConfigurableObject & {\n\ttype?: HeaderFacetType; // Manifest or Metadata\n\tid: string;\n\tcontainerId: string;\n\tannotationPath?: string;\n\tflexSettings: FlexSettings;\n\tstashed: boolean;\n\tvisible: CompiledBindingToolkitExpression;\n\ttargetAnnotationValue?: string;\n\ttargetAnnotationType?: TargetAnnotationType;\n};\n\ntype BaseReferenceFacet = BaseHeaderFacet & {\n\tfacetType: FacetType.Reference;\n};\n\nexport type FieldGroupFacet = BaseReferenceFacet & {\n\theaderFormData: HeaderFormData;\n};\n\nexport type DataPointFacet = BaseReferenceFacet & {\n\theaderDataPointData?: HeaderDataPointData;\n};\n\ntype ReferenceFacet = FieldGroupFacet | DataPointFacet;\n\nexport type CollectionFacet = BaseHeaderFacet & {\n\tfacetType: FacetType.Collection;\n\tfacets: ReferenceFacet[];\n};\n\nexport type ObjectPageHeaderFacet = ReferenceFacet | CollectionFacet;\n\nexport type CustomObjectPageHeaderFacet = CustomElement<ObjectPageHeaderFacet> & {\n\tfragmentName?: string;\n\ttitle?: string;\n\tsubTitle?: string;\n\tstashed?: boolean;\n\tbinding?: string;\n\ttemplateEdit?: string;\n};\n\n// endregion definitions\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// Collect All Header Facets: Custom (via Manifest) and Annotation Based (via Metamodel)\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Retrieve header facets from annotations.\n * @param converterContext\n * @returns Header facets from annotations\n */\nexport function getHeaderFacetsFromAnnotations(converterContext: ConverterContext<PageContextPathTarget>): ObjectPageHeaderFacet[] {\n\tconst headerFacets: ObjectPageHeaderFacet[] = [];\n\tconverterContext.getEntityType().annotations?.UI?.HeaderFacets?.forEach((facet) => {\n\t\tconst headerFacet: ObjectPageHeaderFacet | undefined = createHeaderFacet(facet, converterContext);\n\t\tif (headerFacet) {\n\t\t\theaderFacets.push(headerFacet);\n\t\t}\n\t});\n\n\treturn headerFacets;\n}\n\n/**\n * Retrieve custom header facets from manifest.\n * @param manifestCustomHeaderFacets\n * @returns HeaderFacets from manifest\n */\nexport function getHeaderFacetsFromManifest(\n\tmanifestCustomHeaderFacets: ConfigurableRecord<ManifestHeaderFacet>\n): Record<string, CustomObjectPageHeaderFacet> {\n\tconst customHeaderFacets: Record<string, CustomObjectPageHeaderFacet> = {};\n\n\tObject.keys(manifestCustomHeaderFacets).forEach((manifestHeaderFacetKey) => {\n\t\tconst customHeaderFacet: ManifestHeaderFacet = manifestCustomHeaderFacets[manifestHeaderFacetKey];\n\t\tcustomHeaderFacets[manifestHeaderFacetKey] = createCustomHeaderFacet(customHeaderFacet, manifestHeaderFacetKey);\n\t});\n\n\treturn customHeaderFacets;\n}\n\n/**\n * Retrieve stashed settings for header facets from manifest.\n * @param facetDefinition\n * @param collectionFacetDefinition\n * @param converterContext\n * @returns Stashed setting for header facet or false\n */\nexport function getStashedSettingsForHeaderFacet(\n\tfacetDefinition: FacetTypes,\n\tcollectionFacetDefinition: FacetTypes,\n\tconverterContext: ConverterContext<PageContextPathTarget>\n): boolean {\n\t// When a HeaderFacet is nested inside a CollectionFacet, stashing is not supported\n\tif (\n\t\tfacetDefinition.$Type === UIAnnotationTypes.ReferenceFacet &&\n\t\tcollectionFacetDefinition.$Type === UIAnnotationTypes.CollectionFacet\n\t) {\n\t\treturn false;\n\t}\n\tconst headerFacetID = createIdForAnnotation(facetDefinition) ?? \"\";\n\tconst headerFacetsControlConfig = converterContext.getManifestWrapper().getHeaderFacets();\n\tconst stashedSetting = headerFacetsControlConfig[headerFacetID]?.stashed;\n\treturn stashedSetting === true;\n}\n\n/**\n * Retrieve flexibility designtime settings from manifest.\n * @param facetDefinition\n * @param collectionFacetDefinition\n * @param converterContext\n * @returns Designtime setting or default\n */\nexport function getDesignTimeMetadataSettingsForHeaderFacet(\n\tfacetDefinition: FacetTypes,\n\tcollectionFacetDefinition: FacetTypes,\n\tconverterContext: ConverterContext<PageContextPathTarget>\n): FlexDesignTimeType {\n\tlet designTimeMetadata: FlexDesignTimeType = FlexDesignTimeType.Default;\n\tconst headerFacetID = createIdForAnnotation(facetDefinition);\n\n\t// For HeaderFacets nested inside CollectionFacet RTA should be disabled, therefore set to \"not-adaptable-tree\"\n\tif (\n\t\tfacetDefinition.$Type === UIAnnotationTypes.ReferenceFacet &&\n\t\tcollectionFacetDefinition.$Type === UIAnnotationTypes.CollectionFacet\n\t) {\n\t\tdesignTimeMetadata = FlexDesignTimeType.NotAdaptableTree;\n\t} else {\n\t\tconst headerFacetsControlConfig = converterContext.getManifestWrapper().getHeaderFacets();\n\t\tif (headerFacetID) {\n\t\t\tconst designTime = headerFacetsControlConfig[headerFacetID]?.flexSettings?.designtime;\n\t\t\tswitch (designTime) {\n\t\t\t\tcase FlexDesignTimeType.NotAdaptable:\n\t\t\t\tcase FlexDesignTimeType.NotAdaptableTree:\n\t\t\t\tcase FlexDesignTimeType.NotAdaptableVisibility:\n\t\t\t\t\tdesignTimeMetadata = designTime;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn designTimeMetadata;\n}\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// Convert & Build Annotation Based Header Facets\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\nfunction createReferenceHeaderFacet(\n\tfacetDefinition: FacetTypes,\n\tcollectionFacetDefinition: FacetTypes,\n\tconverterContext: ConverterContext<PageContextPathTarget>\n): ReferenceFacet | undefined {\n\tif (facetDefinition.$Type === UIAnnotationTypes.ReferenceFacet && facetDefinition.annotations?.UI?.Hidden?.valueOf() !== true) {\n\t\tconst headerFacetID = getHeaderFacetID(facetDefinition),\n\t\t\tgetHeaderFacetKey = (facetDefinitionToCheck: FacetTypes, fallback: string): string => {\n\t\t\t\treturn facetDefinitionToCheck.ID?.toString() || facetDefinitionToCheck.Label?.toString() || fallback;\n\t\t\t},\n\t\t\ttargetAnnotationValue = facetDefinition.Target.value,\n\t\t\ttargetAnnotationType = getTargetAnnotationType(facetDefinition);\n\n\t\tlet headerFormData: HeaderFormData | undefined;\n\t\tlet headerDataPointData: HeaderDataPointData | undefined;\n\n\t\tswitch (targetAnnotationType) {\n\t\t\tcase TargetAnnotationType.FieldGroup:\n\t\t\t\theaderFormData = getFieldGroupFormData(facetDefinition, converterContext);\n\t\t\t\tbreak;\n\n\t\t\tcase TargetAnnotationType.DataPoint:\n\t\t\t\theaderDataPointData = getDataPointData(facetDefinition, converterContext);\n\t\t\t\tbreak;\n\t\t\t// ToDo: Handle other cases\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (facetDefinition.Target?.$target?.term === UIAnnotationTerms.Chart && isAnnotationFieldStaticallyHidden(facetDefinition)) {\n\t\t\treturn undefined;\n\t\t} else {\n\t\t\treturn {\n\t\t\t\ttype: HeaderFacetType.Annotation,\n\t\t\t\tfacetType: FacetType.Reference,\n\t\t\t\tid: headerFacetID,\n\t\t\t\tcontainerId: getHeaderFacetContainerID(facetDefinition),\n\t\t\t\tkey: getHeaderFacetKey(facetDefinition, headerFacetID),\n\t\t\t\tflexSettings: {\n\t\t\t\t\tdesigntime: getDesignTimeMetadataSettingsForHeaderFacet(facetDefinition, collectionFacetDefinition, converterContext)\n\t\t\t\t},\n\t\t\t\tstashed: getStashedSettingsForHeaderFacet(facetDefinition, collectionFacetDefinition, converterContext),\n\t\t\t\tvisible: compileExpression(isVisible(facetDefinition)),\n\t\t\t\tannotationPath: `${converterContext.getEntitySetBasedAnnotationPath(facetDefinition.fullyQualifiedName)}/`,\n\t\t\t\ttargetAnnotationValue,\n\t\t\t\ttargetAnnotationType,\n\t\t\t\theaderFormData,\n\t\t\t\theaderDataPointData\n\t\t\t};\n\t\t}\n\t}\n\n\treturn undefined;\n}\n\nfunction createCollectionHeaderFacet(\n\tcollectionFacetDefinition: FacetTypes,\n\tconverterContext: ConverterContext<PageContextPathTarget>\n): CollectionFacet | undefined {\n\tif (collectionFacetDefinition.$Type === UIAnnotationTypes.CollectionFacet) {\n\t\tconst facets: ReferenceFacet[] = [],\n\t\t\theaderFacetID = getHeaderFacetID(collectionFacetDefinition),\n\t\t\tgetHeaderFacetKey = (facetDefinition: FacetTypes, fallback: string): string => {\n\t\t\t\treturn facetDefinition.ID?.toString() || facetDefinition.Label?.toString() || fallback;\n\t\t\t};\n\n\t\tcollectionFacetDefinition.Facets.forEach((facetDefinition) => {\n\t\t\tconst facet: ReferenceFacet | undefined = createReferenceHeaderFacet(\n\t\t\t\tfacetDefinition,\n\t\t\t\tcollectionFacetDefinition,\n\t\t\t\tconverterContext\n\t\t\t);\n\t\t\tif (facet) {\n\t\t\t\tfacets.push(facet);\n\t\t\t}\n\t\t});\n\n\t\treturn {\n\t\t\ttype: HeaderFacetType.Annotation,\n\t\t\tfacetType: FacetType.Collection,\n\t\t\tid: headerFacetID,\n\t\t\tcontainerId: getHeaderFacetContainerID(collectionFacetDefinition),\n\t\t\tkey: getHeaderFacetKey(collectionFacetDefinition, headerFacetID),\n\t\t\tflexSettings: {\n\t\t\t\tdesigntime: getDesignTimeMetadataSettingsForHeaderFacet(\n\t\t\t\t\tcollectionFacetDefinition,\n\t\t\t\t\tcollectionFacetDefinition,\n\t\t\t\t\tconverterContext\n\t\t\t\t)\n\t\t\t},\n\t\t\tstashed: getStashedSettingsForHeaderFacet(collectionFacetDefinition, collectionFacetDefinition, converterContext),\n\t\t\tvisible: compileExpression(isVisible(collectionFacetDefinition)),\n\t\t\tannotationPath: `${converterContext.getEntitySetBasedAnnotationPath(collectionFacetDefinition.fullyQualifiedName)}/`,\n\t\t\tfacets\n\t\t};\n\t}\n\n\treturn undefined;\n}\n\nfunction getTargetAnnotationType(facetDefinition: FacetTypes): TargetAnnotationType {\n\tlet annotationType = TargetAnnotationType.None;\n\tconst annotationTypeMap: Record<string, TargetAnnotationType> = {\n\t\t\"com.sap.vocabularies.UI.v1.DataPoint\": TargetAnnotationType.DataPoint,\n\t\t\"com.sap.vocabularies.UI.v1.Chart\": TargetAnnotationType.Chart,\n\t\t\"com.sap.vocabularies.UI.v1.Identification\": TargetAnnotationType.Identification,\n\t\t\"com.sap.vocabularies.Communication.v1.Contact\": TargetAnnotationType.Contact,\n\t\t\"com.sap.vocabularies.Communication.v1.Address\": TargetAnnotationType.Address,\n\t\t\"com.sap.vocabularies.UI.v1.FieldGroup\": TargetAnnotationType.FieldGroup,\n\t\t\"com.sap.vocabularies.UI.v1.PresentationVariant\": TargetAnnotationType.PresentationVariant\n\t};\n\t// ReferenceURLFacet and CollectionFacet do not have Target property.\n\tif (\n\t\tfacetDefinition.$Type !== UIAnnotationTypes.ReferenceURLFacet &&\n\t\tfacetDefinition.$Type !== UIAnnotationTypes.CollectionFacet &&\n\t\tfacetDefinition.Target.$target\n\t) {\n\t\tannotationType = annotationTypeMap[facetDefinition.Target.$target.term] ?? TargetAnnotationType.None;\n\t}\n\n\treturn annotationType;\n}\n\nfunction getFieldGroupFormData(\n\tfacetDefinition: ReferenceFacetTypes,\n\tconverterContext: ConverterContext<PageContextPathTarget>\n): HeaderFormData {\n\t// split in this from annotation + getFieldGroupFromDefault\n\tif (!facetDefinition) {\n\t\tthrow new Error(\"Cannot get FieldGroup form data without facet definition\");\n\t}\n\n\tconst formElements = insertCustomElements(\n\t\tgetFormElementsFromAnnotations(facetDefinition, converterContext),\n\t\tgetFormElementsFromManifest(facetDefinition, converterContext)\n\t);\n\n\treturn {\n\t\tid: getHeaderFacetFormID(facetDefinition),\n\t\tlabel: facetDefinition.Label?.toString(),\n\t\tformElements\n\t};\n}\n\n/**\n * Creates an array of manifest-based FormElements.\n * @param facetDefinition The definition of the facet\n * @param converterContext The converter context for the facet\n * @returns Annotation-based FormElements\n */\nfunction getFormElementsFromAnnotations(\n\tfacetDefinition: FacetTypes,\n\tconverterContext: ConverterContext<PageContextPathTarget>\n): AnnotationFormElement[] {\n\tconst annotationBasedFormElements: AnnotationFormElement[] = [];\n\n\t// ReferenceURLFacet and CollectionFacet do not have Target property.\n\tif (facetDefinition.$Type !== UIAnnotationTypes.ReferenceURLFacet && facetDefinition.$Type !== UIAnnotationTypes.CollectionFacet) {\n\t\tconst resolvedTarget = converterContext.getEntityTypeAnnotation(facetDefinition.Target.value);\n\t\tconverterContext = resolvedTarget.converterContext;\n\t\t(facetDefinition.Target?.$target as FieldGroup)?.Data.forEach((dataField: DataFieldAbstractTypes) => {\n\t\t\tif (dataField.annotations?.UI?.Hidden?.valueOf() !== true) {\n\t\t\t\tconst semanticObjectAnnotationPath = getSemanticObjectPath(converterContext, dataField);\n\t\t\t\tif (\n\t\t\t\t\t(dataField.$Type === UIAnnotationTypes.DataField ||\n\t\t\t\t\t\tdataField.$Type === UIAnnotationTypes.DataFieldWithUrl ||\n\t\t\t\t\t\tdataField.$Type === UIAnnotationTypes.DataFieldWithNavigationPath ||\n\t\t\t\t\t\tdataField.$Type === UIAnnotationTypes.DataFieldWithIntentBasedNavigation ||\n\t\t\t\t\t\tdataField.$Type === UIAnnotationTypes.DataFieldWithAction) &&\n\t\t\t\t\t!isReferencePropertyStaticallyHidden(dataField)\n\t\t\t\t) {\n\t\t\t\t\tannotationBasedFormElements.push({\n\t\t\t\t\t\tisValueMultilineText: isMultiLineText(dataField.Value?.$target),\n\t\t\t\t\t\ttype: FormElementType.Annotation,\n\t\t\t\t\t\tkey: KeyHelper.generateKeyFromDataField(dataField),\n\t\t\t\t\t\tvisible: compileExpression(isVisible(dataField)),\n\t\t\t\t\t\tlabel: dataField.Value?.$target?.annotations?.Common?.Label || dataField.Label,\n\t\t\t\t\t\tidPrefix: getHeaderFacetFormID(facetDefinition, dataField),\n\t\t\t\t\t\tannotationPath: `${converterContext.getEntitySetBasedAnnotationPath(dataField.fullyQualifiedName)}/`,\n\t\t\t\t\t\tsemanticObjectPath: semanticObjectAnnotationPath\n\t\t\t\t\t});\n\t\t\t\t} else if (\n\t\t\t\t\tdataField.$Type === UIAnnotationTypes.DataFieldForAnnotation &&\n\t\t\t\t\t!isReferencePropertyStaticallyHidden(dataField)\n\t\t\t\t) {\n\t\t\t\t\tannotationBasedFormElements.push({\n\t\t\t\t\t\tisValueMultilineText: false, // was dataField.Target?.$target?.annotations?.UI?.MultiLineText?.valueOf() === true but that doesn't make sense as the target cannot have that annotation\n\t\t\t\t\t\ttype: FormElementType.Annotation,\n\t\t\t\t\t\tkey: KeyHelper.generateKeyFromDataField(dataField),\n\t\t\t\t\t\tvisible: compileExpression(isVisible(dataField)),\n\t\t\t\t\t\tlabel: dataField.Target?.$target?.annotations?.Common?.Label?.toString() || dataField.Label?.toString(),\n\t\t\t\t\t\tidPrefix: getHeaderFacetFormID(facetDefinition, dataField),\n\t\t\t\t\t\tannotationPath: `${converterContext.getEntitySetBasedAnnotationPath(dataField.fullyQualifiedName)}/`,\n\t\t\t\t\t\tsemanticObjectPath: semanticObjectAnnotationPath\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\treturn annotationBasedFormElements;\n}\n\nfunction getDataPointData(facetDefinition: FacetTypes, converterContext: ConverterContext<PageContextPathTarget>): HeaderDataPointData {\n\tlet type = HeaderDataPointType.Content;\n\tlet semanticObjectPath;\n\tif (facetDefinition.$Type === UIAnnotationTypes.ReferenceFacet && !isAnnotationFieldStaticallyHidden(facetDefinition)) {\n\t\tif ((facetDefinition.Target?.$target as DataPoint)?.Visualization === \"UI.VisualizationType/Progress\") {\n\t\t\ttype = HeaderDataPointType.ProgressIndicator;\n\t\t} else if ((facetDefinition.Target?.$target as DataPoint)?.Visualization === \"UI.VisualizationType/Rating\") {\n\t\t\ttype = HeaderDataPointType.RatingIndicator;\n\t\t}\n\t\tconst dataPoint = facetDefinition.Target?.$target as DataPoint;\n\n\t\tif (typeof dataPoint === \"object\") {\n\t\t\tif (dataPoint?.Value?.$target) {\n\t\t\t\tconst property = dataPoint.Value.$target;\n\t\t\t\tif (property?.annotations?.Common?.SemanticObject !== undefined) {\n\t\t\t\t\tsemanticObjectPath = converterContext.getEntitySetBasedAnnotationPath(property?.fullyQualifiedName);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn { type, semanticObjectPath };\n}\n\n/**\n * Creates an annotation-based header facet.\n * @param facetDefinition The definition of the facet\n * @param converterContext The converter context\n * @returns The created annotation-based header facet\n */\nfunction createHeaderFacet(\n\tfacetDefinition: FacetTypes,\n\tconverterContext: ConverterContext<PageContextPathTarget>\n): ObjectPageHeaderFacet | undefined {\n\tlet headerFacet: ObjectPageHeaderFacet | undefined;\n\tswitch (facetDefinition.$Type) {\n\t\tcase UIAnnotationTypes.ReferenceFacet:\n\t\t\theaderFacet = createReferenceHeaderFacet(facetDefinition, facetDefinition, converterContext);\n\t\t\tbreak;\n\n\t\tcase UIAnnotationTypes.CollectionFacet:\n\t\t\theaderFacet = createCollectionHeaderFacet(facetDefinition, converterContext);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t}\n\n\treturn headerFacet;\n}\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// Convert & Build Manifest Based Header Facets\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nfunction generateBinding(requestGroupId?: string): string | undefined {\n\tif (!requestGroupId) {\n\t\treturn undefined;\n\t}\n\tconst groupId = [\"Heroes\", \"Decoration\", \"Workers\", \"LongRunners\"].includes(requestGroupId)\n\t\t? `$auto.${requestGroupId}`\n\t\t: requestGroupId;\n\n\treturn `{ path : '', parameters : { $$groupId : '${groupId}' } }`;\n}\n\n/**\n * Create a manifest based custom header facet.\n * @param customHeaderFacetDefinition\n * @param headerFacetKey\n * @returns The manifest based custom header facet created\n */\nfunction createCustomHeaderFacet(customHeaderFacetDefinition: ManifestHeaderFacet, headerFacetKey: string): CustomObjectPageHeaderFacet {\n\tconst customHeaderFacetID = getCustomHeaderFacetID(headerFacetKey);\n\n\tlet position: Position | undefined = customHeaderFacetDefinition.position;\n\tif (!position) {\n\t\tposition = {\n\t\t\tplacement: Placement.After\n\t\t};\n\t}\n\t// TODO for an non annotation fragment the name is mandatory -> Not checked\n\treturn {\n\t\tfacetType: FacetType.Reference,\n\t\ttype: customHeaderFacetDefinition.type,\n\t\tid: customHeaderFacetID,\n\t\tcontainerId: customHeaderFacetID,\n\t\tkey: headerFacetKey,\n\t\tposition: position,\n\t\tvisible: customHeaderFacetDefinition.visible,\n\t\tfragmentName: customHeaderFacetDefinition.template || customHeaderFacetDefinition.name,\n\t\ttitle: customHeaderFacetDefinition.title,\n\t\tsubTitle: customHeaderFacetDefinition.subTitle,\n\t\tstashed: customHeaderFacetDefinition.stashed || false,\n\t\tflexSettings: { ...{ designtime: FlexDesignTimeType.Default }, ...customHeaderFacetDefinition.flexSettings },\n\t\tbinding: generateBinding(customHeaderFacetDefinition.requestGroupId),\n\t\ttemplateEdit: customHeaderFacetDefinition.templateEdit\n\t};\n}\n"],"mappings":";;;;w3BAgCA,IAEYA,EAAe,SAAfA,KAAe,2BAAfA,EAAe,oCAAfA,CAAe,MAAAC,EAAAD,kBAAA,IAKfE,EAAS,SAATA,KAAS,yBAATA,EAAS,kCAATA,CAAS,MAAAD,EAAAC,YAAA,IAKTC,EAAkB,SAAlBA,KAAkB,qBAAlBA,EAAkB,gCAAlBA,EAAkB,yCAAlBA,EAAkB,qDAIuB,OAJzCA,CAAkB,MAAAF,EAAAE,qBAAA,IAiBzBC,EAAmB,SAAnBA,KAAmB,yCAAnBA,EAAmB,qCAAnBA,EAAmB,4BAAnBA,CAAmB,EAAnBA,GAAmB,QAWnBC,EAAoB,SAApBA,KAAoB,eAApBA,EAAoB,yBAApBA,EAAoB,iBAApBA,EAAoB,mCAApBA,EAAoB,qBAApBA,EAAoB,qBAApBA,EAAoB,2BAApBA,EAAoB,oDAApBA,CAAoB,EAApBA,GAAoB,IAgElB,SAASC,EAA+BC,GAC9C,MAAMC,EAAwC,GAC9CD,EAAiBE,gBAAgBC,aAAaC,IAAIC,cAAcC,QAASC,IACxE,MAAMC,EAAiDC,EAAkBF,EAAOP,GAChF,GAAIQ,EAAa,CAChBP,EAAaS,KAAKF,EACnB,IAGD,OAAOP,CACR,CAEAP,EAAAK,iCAKO,SAASY,EACfC,GAEA,MAAMC,EAAkE,CAAC,EAEzEC,OAAOC,KAAKH,GAA4BN,QAASU,IAChD,MAAMC,EAAyCL,EAA2BI,GAC1EH,EAAmBG,GAA0BE,EAAwBD,EAAmBD,KAGzF,OAAOH,CACR,CAEAnB,EAAAiB,8BAOO,SAASQ,EACfC,EACAC,EACArB,GAGA,GACCoB,EAAgBE,QAAK,6CACrBD,EAA0BC,QAAK,6CAC9B,CACD,OAAO,KACR,CACA,MAAMC,EAAgBC,EAAsBJ,IAAoB,GAChE,MAAMK,EAA4BzB,EAAiB0B,qBAAqBC,kBACxE,MAAMC,EAAiBH,EAA0BF,IAAgBM,QACjE,OAAOD,IAAmB,IAC3B,CAEAlC,EAAAyB,mCAOO,SAASW,EACfV,EACAC,EACArB,GAEA,IAAI+B,EAAyCnC,EAAmBoC,QAChE,MAAMT,EAAgBC,EAAsBJ,GAG5C,GACCA,EAAgBE,QAAK,6CACrBD,EAA0BC,QAAK,6CAC9B,CACDS,EAAqBnC,EAAmBqC,gBACzC,KAAO,CACN,MAAMR,EAA4BzB,EAAiB0B,qBAAqBC,kBACxE,GAAIJ,EAAe,CAClB,MAAMW,EAAaT,EAA0BF,IAAgBY,cAAcC,WAC3E,OAAQF,GACP,KAAKtC,EAAmByC,aACxB,KAAKzC,EAAmBqC,iBACxB,KAAKrC,EAAmB0C,uBACvBP,EAAqBG,EACrB,MACD,QACC,MAEH,CACD,CACA,OAAOH,CACR,CAIArC,EAAAoC,8CACA,SAASS,EACRnB,EACAC,EACArB,GAEA,GAAIoB,EAAgBE,QAAK,6CAAyCF,EAAgBjB,aAAaC,IAAIoC,QAAQC,YAAc,KAAM,CAC9H,MAAMlB,EAAgBmB,EAAiBtB,GACtCuB,EAAoBA,CAACC,EAAoCC,IACjDD,EAAuBE,IAAIC,YAAcH,EAAuBI,OAAOD,YAAcF,EAE7FI,EAAwB7B,EAAgB8B,OAAOC,MAC/CC,EAAuBC,EAAwBjC,GAEhD,IAAIkC,EACJ,IAAIC,EAEJ,OAAQH,GACP,KAAKtD,EAAqB0D,WACzBF,EAAiBG,EAAsBrC,EAAiBpB,GACxD,MAED,KAAKF,EAAqB4D,UACzBH,EAAsBI,EAAiBvC,EAAiBpB,GACxD,MAED,QACC,MAGF,GAAIoB,EAAgB8B,QAAQU,SAASC,OAAI,oCAAgCC,EAAkC1C,GAAkB,CAC5H,OAAO2C,SACR,KAAO,CACN,MAAO,CACNC,KAAMvE,EAAgBwE,WACtBC,UAAWvE,EAAUwE,UACrBC,GAAI7C,EACJ8C,YAAaC,EAA0BlD,GACvCmD,IAAK5B,EAAkBvB,EAAiBG,GACxCY,aAAc,CACbC,WAAYN,EAA4CV,EAAiBC,EAA2BrB,IAErG6B,QAASV,EAAiCC,EAAiBC,EAA2BrB,GACtFwE,QAASC,EAAkBC,EAAUtD,IACrCuD,eAAgB,GAAG3E,EAAiB4E,gCAAgCxD,EAAgByD,uBACpF5B,wBACAG,uBACAE,iBACAC,sBAEF,CACD,CAEA,OAAOQ,SACR,CAEA,SAASe,EACRzD,EACArB,GAEA,GAAIqB,EAA0BC,QAAK,6CAAwC,CAC1E,MAAMyD,EAA2B,GAChCxD,EAAgBmB,EAAiBrB,GACjCsB,EAAoBA,CAACvB,EAA6ByB,IAC1CzB,EAAgB0B,IAAIC,YAAc3B,EAAgB4B,OAAOD,YAAcF,EAGhFxB,EAA0B2D,OAAO1E,QAASc,IACzC,MAAMb,EAAoCgC,EACzCnB,EACAC,EACArB,GAED,GAAIO,EAAO,CACVwE,EAAOrE,KAAKH,EACb,IAGD,MAAO,CACNyD,KAAMvE,EAAgBwE,WACtBC,UAAWvE,EAAUsF,WACrBb,GAAI7C,EACJ8C,YAAaC,EAA0BjD,GACvCkD,IAAK5B,EAAkBtB,EAA2BE,GAClDY,aAAc,CACbC,WAAYN,EACXT,EACAA,EACArB,IAGF6B,QAASV,EAAiCE,EAA2BA,EAA2BrB,GAChGwE,QAASC,EAAkBC,EAAUrD,IACrCsD,eAAgB,GAAG3E,EAAiB4E,gCAAgCvD,EAA0BwD,uBAC9FE,SAEF,CAEA,OAAOhB,SACR,CAEA,SAASV,EAAwBjC,GAChC,IAAI8D,EAAiBpF,EAAqBqF,KAC1C,MAAMC,EAA0D,CAC/D,uCAAwCtF,EAAqB4D,UAC7D,mCAAoC5D,EAAqBuF,MACzD,4CAA6CvF,EAAqBwF,eAClE,gDAAiDxF,EAAqByF,QACtE,gDAAiDzF,EAAqB0F,QACtE,wCAAyC1F,EAAqB0D,WAC9D,iDAAkD1D,EAAqB2F,qBAGxE,GACCrE,EAAgBE,QAAK,gDACrBF,EAAgBE,QAAK,8CACrBF,EAAgB8B,OAAOU,QACtB,CACDsB,EAAiBE,EAAkBhE,EAAgB8B,OAAOU,QAAQC,OAAS/D,EAAqBqF,IACjG,CAEA,OAAOD,CACR,CAEA,SAASzB,EACRrC,EACApB,GAGA,IAAKoB,EAAiB,CACrB,MAAM,IAAIsE,MAAM,2DACjB,CAEA,MAAMC,EAAeC,EACpBC,EAA+BzE,EAAiBpB,GAChD8F,EAA4B1E,EAAiBpB,IAG9C,MAAO,CACNoE,GAAI2B,EAAqB3E,GACzB4E,MAAO5E,EAAgB4B,OAAOD,WAC9B4C,eAEF,CAQA,SAASE,EACRzE,EACApB,GAEA,MAAMiG,EAAuD,GAG7D,GAAI7E,EAAgBE,QAAK,gDAA4CF,EAAgBE,QAAK,6CAAwC,CACjI,MAAM4E,EAAiBlG,EAAiBmG,wBAAwB/E,EAAgB8B,OAAOC,OACvFnD,EAAmBkG,EAAelG,iBACjCoB,EAAgB8B,QAAQU,SAAwBwC,KAAK9F,QAAS+F,IAC9D,GAAIA,EAAUlG,aAAaC,IAAIoC,QAAQC,YAAc,KAAM,CAC1D,MAAM6D,EAA+BC,EAAsBvG,EAAkBqG,GAC7E,IACEA,EAAU/E,QAAK,wCACf+E,EAAU/E,QAAK,+CACf+E,EAAU/E,QAAK,0DACf+E,EAAU/E,QAAK,iEACf+E,EAAU/E,QAAK,oDACfkF,EAAoCH,GACpC,CACDJ,EAA4BvF,KAAK,CAChC+F,qBAAsBC,EAAgBL,EAAUM,OAAO/C,SACvDI,KAAM4C,EAAgB3C,WACtBM,IAAKsC,EAAUC,yBAAyBT,GACxC7B,QAASC,EAAkBC,EAAU2B,IACrCL,MAAOK,EAAUM,OAAO/C,SAASzD,aAAa4G,QAAQ/D,OAASqD,EAAUrD,MACzEgE,SAAUjB,EAAqB3E,EAAiBiF,GAChD1B,eAAgB,GAAG3E,EAAiB4E,gCAAgCyB,EAAUxB,uBAC9EoC,mBAAoBX,GAEtB,MAAO,GACND,EAAU/E,QAAK,sDACdkF,EAAoCH,GACpC,CACDJ,EAA4BvF,KAAK,CAChC+F,qBAAsB,MACtBzC,KAAM4C,EAAgB3C,WACtBM,IAAKsC,EAAUC,yBAAyBT,GACxC7B,QAASC,EAAkBC,EAAU2B,IACrCL,MAAOK,EAAUnD,QAAQU,SAASzD,aAAa4G,QAAQ/D,OAAOD,YAAcsD,EAAUrD,OAAOD,WAC7FiE,SAAUjB,EAAqB3E,EAAiBiF,GAChD1B,eAAgB,GAAG3E,EAAiB4E,gCAAgCyB,EAAUxB,uBAC9EoC,mBAAoBX,GAEtB,CACD,GAEF,CAEA,OAAOL,CACR,CAEA,SAAStC,EAAiBvC,EAA6BpB,GACtD,IAAIgE,EAAOnE,EAAoBqH,QAC/B,IAAID,EACJ,GAAI7F,EAAgBE,QAAK,8CAA0CwC,EAAkC1C,GAAkB,CACtH,GAAKA,EAAgB8B,QAAQU,SAAuBuD,gBAAkB,gCAAiC,CACtGnD,EAAOnE,EAAoBuH,iBAC5B,MAAO,GAAKhG,EAAgB8B,QAAQU,SAAuBuD,gBAAkB,8BAA+B,CAC3GnD,EAAOnE,EAAoBwH,eAC5B,CACA,MAAMC,EAAYlG,EAAgB8B,QAAQU,QAE1C,UAAW0D,IAAc,SAAU,CAClC,GAAIA,GAAWX,OAAO/C,QAAS,CAC9B,MAAM2D,EAAWD,EAAUX,MAAM/C,QACjC,GAAI2D,GAAUpH,aAAa4G,QAAQS,iBAAmBzD,UAAW,CAChEkD,EAAqBjH,EAAiB4E,gCAAgC2C,GAAU1C,mBACjF,CACD,CACD,CACD,CAEA,MAAO,CAAEb,OAAMiD,qBAChB,CAQA,SAASxG,EACRW,EACApB,GAEA,IAAIQ,EACJ,OAAQY,EAAgBE,OACvB,gDACCd,EAAc+B,EAA2BnB,EAAiBA,EAAiBpB,GAC3E,MAED,iDACCQ,EAAcsE,EAA4B1D,EAAiBpB,GAC3D,MACD,QACC,MAGF,OAAOQ,CACR,CAMA,SAASiH,EAAgBC,GACxB,IAAKA,EAAgB,CACpB,OAAO3D,SACR,CACA,MAAM4D,EAAU,CAAC,SAAU,aAAc,UAAW,eAAeC,SAASF,GACzE,SAASA,IACTA,EAEH,MAAO,4CAA4CC,QACpD,CAQA,SAASzG,EAAwB2G,EAAkDC,GAClF,MAAMC,EAAsBC,EAAuBF,GAEnD,IAAIG,EAAiCJ,EAA4BI,SACjE,IAAKA,EAAU,CACdA,EAAW,CACVC,UAAWC,EAAUC,MAEvB,CAEA,MAAO,CACNlE,UAAWvE,EAAUwE,UACrBH,KAAM6D,EAA4B7D,KAClCI,GAAI2D,EACJ1D,YAAa0D,EACbxD,IAAKuD,EACLG,SAAUA,EACVzD,QAASqD,EAA4BrD,QACrC6D,aAAcR,EAA4BS,UAAYT,EAA4BU,KAClFC,MAAOX,EAA4BW,MACnCC,SAAUZ,EAA4BY,SACtC5G,QAASgG,EAA4BhG,SAAW,MAChDM,aAAc,IAAK,CAAEC,WAAYxC,EAAmBoC,YAAc6F,EAA4B1F,cAC9FuG,QAASjB,EAAgBI,EAA4BH,gBACrDiB,aAAcd,EAA4Bc,aAE5C,CAAC,OAAAjJ,CAAA","ignoreList":[]}