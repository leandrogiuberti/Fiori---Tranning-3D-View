{"version":3,"names":["getVisualizationsFromAnnotation","annotation","visualizationPath","converterContext","isMacroOrMultipleView","presentation","selectionVariant","isAnnotationOfType","undefined","PresentationVariant","SelectionVariant","visualizationAnnotations","isALP","isAlpAnnotation","finalSelectionVariant","getTemplateType","TemplateType","ListReport","baseVisualizationPath","split","isPresentationCompliant","annotationExistsInPresentationVariant","defaultLineItemAnnotation","prepareDefaultVisualization","push","defaultChartAnnotation","visualizations","Visualizations","pushFirstVizOfType","allowedTerms","firstViz","find","viz","$target","includes","term","visualization","annotationPath","value","_exports","getSelectionPresentationVariant","entityType","resolvedTarget","getEntityTypeAnnotation","selectionPresentationVariant","Error","annotations","UI","SelectionPresentationVariant","isSelectionPresentationCompliant","presentationVariant","arguments","length","hasTable","hasChart","forEach","getDefaultLineItem","LineItem","getDefaultChart","Chart","getDefaultSelectionVariant","getSelectionVariant","getManifestWrapper","getDefaultTemplateAnnotationPath","getVisualizationsAndPaths","concat","getDataVisualizationPresentation","inConverterContext","getDataVisualizationConfiguration","params","isCondensedTableLayoutCompliant","doNotCheckApplySupported","associatedSelectionVariant","shouldCreateTemplateChartVisualization","resolvedVisualization","chartVisualization","tableVisualization","visualizationAndPath","createChartVisualizationForTemplating","createChartVisualization","Table","createTableVisualization","presentationVariantAnnotation","selectionVariantAnnotation","createDefaultTableVisualization","getDiagnostics","addIssue","IssueCategory","Annotation","IssueSeverity","Medium","IssueType","MISSING_LINEITEM","createBlankChartVisualization","MISSING_CHART","filter","isVisualization","getEntitySetBasedAnnotationPath","fullyQualifiedName","associatedSelectionVariantPath","VisualizationType","type","validatePresentationMetaPath","metaPath","objectTerm","slice","lastIndexOf","some","search","RegExp","getUiControl","presentationContext","controlPath","getPath","MetaModelConverter","convertMetaModelContext","model","getModel","Array","isArray","getMetaContext","getObject","annotationTerm","visualizationType","getEntityType","defaultAnnotation","getRelativeAnnotationPath","hasMultipleVisualizations","AnalyticalListPage"],"sourceRoot":".","sources":["DataVisualization.ts"],"sourcesContent":["import type { EntityType } from \"@sap-ux/vocabularies-types\";\nimport type {\n\tChart,\n\tLineItem,\n\tPresentationVariant,\n\tPresentationVariantType,\n\tSelectionPresentationVariant,\n\tSelectionVariant,\n\tSelectionVariantType\n} from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport { UIAnnotationTerms, UIAnnotationTypes } from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport * as MetaModelConverter from \"sap/fe/core/converters/MetaModelConverter\";\nimport type { PageContextPathTarget } from \"sap/fe/core/converters/TemplateConverter\";\nimport { IssueCategory, IssueSeverity, IssueType } from \"sap/fe/core/converters/helpers/IssueManager\";\nimport { isAnnotationOfType } from \"sap/fe/core/helpers/TypeGuards\";\nimport type Context from \"sap/ui/model/Context\";\nimport type ODataMetaModel from \"sap/ui/model/odata/v4/ODataMetaModel\";\nimport type ConverterContext from \"../../ConverterContext\";\nimport type { ResolvedAnnotationContext } from \"../../ConverterContext\";\nimport { TemplateType, VisualizationType } from \"../../ManifestSettings\";\nimport type { ChartVisualization } from \"./Chart\";\nimport { createBlankChartVisualization, createChartVisualization, createChartVisualizationForTemplating } from \"./Chart\";\nimport type { TableVisualization } from \"./Table\";\nimport Table from \"./Table\";\n\nexport type DataVisualizationAnnotations = LineItem | Chart | PresentationVariant | SelectionVariant | SelectionPresentationVariant;\nexport type ActualVisualizationAnnotations = LineItem | Chart;\nexport type PresentationVisualizationAnnotations = UIAnnotationTerms.LineItem | UIAnnotationTerms.Chart;\nexport type VisualizationAndPath = {\n\tvisualization: ActualVisualizationAnnotations;\n\tannotationPath: string;\n\tselectionVariant?: SelectionVariantType;\n\tconverterContext: ConverterContext<PageContextPathTarget>;\n};\nexport type DataVisualizationDefinition = {\n\tvisualizations: (TableVisualization | ChartVisualization)[];\n\tannotationPath?: string;\n\tassociatedSelectionVariantPath?: string;\n\tinMultiView?: boolean;\n};\n\nexport const getVisualizationsFromAnnotation = function (\n\tannotation: PresentationVariantType | SelectionPresentationVariant,\n\tvisualizationPath: string,\n\tconverterContext: ConverterContext<PageContextPathTarget>,\n\tisMacroOrMultipleView?: boolean\n): VisualizationAndPath[] {\n\tconst { presentation, selectionVariant } = isAnnotationOfType<PresentationVariantType>(\n\t\tannotation,\n\t\tUIAnnotationTypes.PresentationVariantType\n\t)\n\t\t? { presentation: annotation, selectionVariant: undefined }\n\t\t: { presentation: annotation.PresentationVariant, selectionVariant: annotation.SelectionVariant };\n\tconst visualizationAnnotations: VisualizationAndPath[] = [];\n\tconst isALP = isAlpAnnotation(converterContext);\n\tconst finalSelectionVariant =\n\t\t!isALP && // Don't add the SelectionVariant on ALP -> will be managed by FIORITECHP1-26237\n\t\t!(converterContext.getTemplateType() === TemplateType.ListReport && !isMacroOrMultipleView) //On ListReport with single view the SelectionVariant is managed by FilterBar\n\t\t\t? selectionVariant\n\t\t\t: undefined;\n\tconst baseVisualizationPath = visualizationPath.split(\"@\")[0];\n\tif ((isMacroOrMultipleView === true || isALP) && !isPresentationCompliant(presentation, isALP)) {\n\t\tif (!annotationExistsInPresentationVariant(presentation, UIAnnotationTerms.LineItem)) {\n\t\t\tconst defaultLineItemAnnotation = prepareDefaultVisualization(\n\t\t\t\tUIAnnotationTerms.LineItem,\n\t\t\t\tbaseVisualizationPath,\n\t\t\t\tconverterContext\n\t\t\t);\n\t\t\tif (defaultLineItemAnnotation) {\n\t\t\t\tvisualizationAnnotations.push({ ...defaultLineItemAnnotation, ...{ selectionVariant: finalSelectionVariant } });\n\t\t\t}\n\t\t}\n\t\tif (!annotationExistsInPresentationVariant(presentation, UIAnnotationTerms.Chart)) {\n\t\t\tconst defaultChartAnnotation = prepareDefaultVisualization(UIAnnotationTerms.Chart, baseVisualizationPath, converterContext);\n\t\t\tif (defaultChartAnnotation) {\n\t\t\t\tvisualizationAnnotations.push(defaultChartAnnotation);\n\t\t\t}\n\t\t}\n\t}\n\tconst visualizations = presentation.Visualizations;\n\tconst pushFirstVizOfType = function (allowedTerms: string[]): void {\n\t\tconst firstViz = visualizations?.find((viz) => viz.$target !== undefined && allowedTerms.includes(viz.$target.term));\n\t\tif (firstViz) {\n\t\t\tvisualizationAnnotations.push({\n\t\t\t\tvisualization: firstViz.$target as ActualVisualizationAnnotations,\n\t\t\t\tannotationPath: `${baseVisualizationPath}${firstViz.value}`,\n\t\t\t\tconverterContext: converterContext,\n\t\t\t\tselectionVariant: finalSelectionVariant\n\t\t\t});\n\t\t}\n\t};\n\tif (isALP) {\n\t\t// In case of ALP, we use the first LineItem and the first Chart\n\t\tpushFirstVizOfType([UIAnnotationTerms.LineItem]);\n\t\tpushFirstVizOfType([UIAnnotationTerms.Chart]);\n\t} else {\n\t\t// Otherwise, we use the first viz only (Chart or LineItem)\n\t\tpushFirstVizOfType([UIAnnotationTerms.LineItem, UIAnnotationTerms.Chart]);\n\t}\n\treturn visualizationAnnotations;\n};\nexport function getSelectionPresentationVariant(\n\tentityType: EntityType,\n\tannotationPath: string | undefined,\n\tconverterContext: ConverterContext<PageContextPathTarget>\n): SelectionPresentationVariant | undefined {\n\tif (annotationPath) {\n\t\tconst resolvedTarget = converterContext.getEntityTypeAnnotation(annotationPath);\n\t\tconst selectionPresentationVariant = resolvedTarget.annotation as SelectionPresentationVariant;\n\t\tif (selectionPresentationVariant) {\n\t\t\tif (selectionPresentationVariant.term === UIAnnotationTerms.SelectionPresentationVariant) {\n\t\t\t\treturn selectionPresentationVariant;\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new Error(\"Annotation Path for the SPV mentioned in the manifest is not found, Please add the SPV in the annotation\");\n\t\t}\n\t} else {\n\t\treturn entityType.annotations?.UI?.SelectionPresentationVariant;\n\t}\n}\nexport function isSelectionPresentationCompliant(\n\tselectionPresentationVariant: SelectionPresentationVariant,\n\tisALP: boolean\n): boolean | undefined {\n\tconst presentationVariant = selectionPresentationVariant && selectionPresentationVariant.PresentationVariant;\n\tif (presentationVariant) {\n\t\treturn isPresentationCompliant(presentationVariant, isALP);\n\t} else {\n\t\tthrow new Error(\"Presentation Variant is not present in the SPV annotation\");\n\t}\n}\nexport function isPresentationCompliant(presentationVariant: PresentationVariantType, isALP = false): boolean {\n\tlet hasTable = false,\n\t\thasChart = false;\n\tif (isALP) {\n\t\tif (presentationVariant?.Visualizations) {\n\t\t\tconst visualizations = presentationVariant.Visualizations;\n\t\t\tvisualizations.forEach((visualization) => {\n\t\t\t\tif (visualization.$target?.term === UIAnnotationTerms.LineItem) {\n\t\t\t\t\thasTable = true;\n\t\t\t\t}\n\t\t\t\tif (visualization.$target?.term === UIAnnotationTerms.Chart) {\n\t\t\t\t\thasChart = true;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn hasChart && hasTable;\n\t} else {\n\t\treturn (\n\t\t\tpresentationVariant?.Visualizations &&\n\t\t\t!!presentationVariant.Visualizations.find((visualization) => {\n\t\t\t\treturn (\n\t\t\t\t\tvisualization.$target?.term === UIAnnotationTerms.LineItem || visualization.$target?.term === UIAnnotationTerms.Chart\n\t\t\t\t);\n\t\t\t})\n\t\t);\n\t}\n}\nexport function getDefaultLineItem(entityType: EntityType): LineItem | undefined {\n\treturn entityType.annotations.UI?.LineItem;\n}\nexport function getDefaultChart(entityType: EntityType): Chart | undefined {\n\treturn entityType.annotations.UI?.Chart;\n}\nexport function getDefaultSelectionVariant(entityType: EntityType): SelectionVariant | undefined {\n\treturn entityType.annotations?.UI?.SelectionVariant;\n}\nexport function getSelectionVariant(\n\tentityType: EntityType,\n\tconverterContext: ConverterContext<PageContextPathTarget>\n): SelectionVariantType | undefined {\n\tconst annotationPath = converterContext.getManifestWrapper().getDefaultTemplateAnnotationPath();\n\tconst selectionPresentationVariant = getSelectionPresentationVariant(entityType, annotationPath, converterContext);\n\tlet selectionVariant;\n\tif (selectionPresentationVariant) {\n\t\tselectionVariant = selectionPresentationVariant.SelectionVariant as SelectionVariant;\n\t\tif (selectionVariant) {\n\t\t\treturn selectionVariant;\n\t\t}\n\t} else {\n\t\tselectionVariant = getDefaultSelectionVariant(entityType);\n\t\treturn selectionVariant;\n\t}\n}\n\n/**\n * Gets the configuration of the visualizations related to an annotation.\n * @param resolvedTarget The annotation\n * @param visualizationPath The path to the visualization annotation\n * @param isMacroOrMultipleView True if it's for a building block or a multiple views configuration\n * @returns The visualizations with their configuration\n */\nfunction getVisualizationsAndPaths(\n\tresolvedTarget: ResolvedAnnotationContext<DataVisualizationAnnotations>,\n\tvisualizationPath: string,\n\tisMacroOrMultipleView?: boolean\n): VisualizationAndPath[] {\n\tconst { annotation, converterContext } = resolvedTarget;\n\tconst term = annotation?.term;\n\tlet visualizationAnnotations: VisualizationAndPath[] = [];\n\tif (term) {\n\t\tswitch (term) {\n\t\t\tcase UIAnnotationTerms.LineItem:\n\t\t\tcase UIAnnotationTerms.Chart:\n\t\t\t\tvisualizationAnnotations.push({\n\t\t\t\t\tvisualization: annotation as ActualVisualizationAnnotations,\n\t\t\t\t\tannotationPath: visualizationPath,\n\t\t\t\t\tconverterContext: converterContext\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase UIAnnotationTerms.PresentationVariant:\n\t\t\tcase UIAnnotationTerms.SelectionPresentationVariant:\n\t\t\t\tvisualizationAnnotations = visualizationAnnotations.concat(\n\t\t\t\t\tgetVisualizationsFromAnnotation(annotation, visualizationPath, converterContext, isMacroOrMultipleView)\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\treturn visualizationAnnotations;\n}\n\n/**\n * Gets the presentation of the visualizations related to a visualizationPath.\n * @param visualizationPath The path to the visualization annotation\n * @param inConverterContext The converted context\n * @returns The presentation variant\n */\nfunction getDataVisualizationPresentation(\n\tvisualizationPath: string,\n\tinConverterContext: ConverterContext<PageContextPathTarget>\n): PresentationVariantType | undefined {\n\tif (visualizationPath === \"\") {\n\t\treturn undefined;\n\t}\n\n\tconst annotation = inConverterContext.getEntityTypeAnnotation(visualizationPath).annotation as DataVisualizationAnnotations;\n\tif (isAnnotationOfType<SelectionPresentationVariant>(annotation, UIAnnotationTypes.SelectionPresentationVariantType)) {\n\t\treturn annotation.PresentationVariant;\n\t} else if (annotation.term === UIAnnotationTerms.PresentationVariant) {\n\t\treturn annotation;\n\t}\n\treturn undefined;\n}\n\n/**\n * Gets the presentation of the visualizations related to a visualizationPath.\n * @param visualizationPath The path to the visualization annotation\n * @param inConverterContext The converted context\n * @param params\n * @param params.isCondensedTableLayoutCompliant True if it's for a condensed layout\n * @param params.viewConfiguration The view configuration\n * @param params.doNotCheckApplySupported True if the check to \"ApplySupported\" is skipped\n * @param params.associatedPresentationVariantPath The path of the presentation to apply\n * @param params.isMacroOrMultipleView True if it's for a building block or a multiple views configuration\n * @param params.shouldCreateTemplateChartVisualization True if we need to create chart visualization for templating\n * @returns The definition of the data visualizations\n */\nexport function getDataVisualizationConfiguration(\n\tvisualizationPath: string,\n\tinConverterContext: ConverterContext<PageContextPathTarget>,\n\tparams: Partial<{\n\t\tisCondensedTableLayoutCompliant: boolean;\n\t\tdoNotCheckApplySupported: boolean;\n\t\tassociatedSelectionVariant: SelectionVariantType;\n\t\tisMacroOrMultipleView: boolean;\n\t\tshouldCreateTemplateChartVisualization: boolean;\n\t}>\n): DataVisualizationDefinition {\n\tconst {\n\t\tisCondensedTableLayoutCompliant,\n\t\tdoNotCheckApplySupported,\n\t\tassociatedSelectionVariant,\n\t\tisMacroOrMultipleView,\n\t\tshouldCreateTemplateChartVisualization\n\t} = params;\n\tconst resolvedTarget =\n\t\tvisualizationPath !== \"\"\n\t\t\t? inConverterContext.getEntityTypeAnnotation<DataVisualizationAnnotations>(visualizationPath)\n\t\t\t: { annotation: undefined, converterContext: inConverterContext };\n\tconst resolvedVisualization = resolvedTarget.annotation as DataVisualizationAnnotations;\n\n\tlet chartVisualization, tableVisualization;\n\tconst term = resolvedVisualization?.term;\n\tfor (const visualizationAndPath of getVisualizationsAndPaths(resolvedTarget, visualizationPath, isMacroOrMultipleView)) {\n\t\tconst { visualization, annotationPath, converterContext, selectionVariant } = visualizationAndPath;\n\t\tswitch (visualization.term) {\n\t\t\tcase UIAnnotationTerms.Chart:\n\t\t\t\tchartVisualization = shouldCreateTemplateChartVisualization\n\t\t\t\t\t? createChartVisualizationForTemplating(converterContext, annotationPath, visualization)\n\t\t\t\t\t: createChartVisualization(\n\t\t\t\t\t\t\tvisualization,\n\t\t\t\t\t\t\tannotationPath,\n\t\t\t\t\t\t\tconverterContext,\n\t\t\t\t\t\t\tdoNotCheckApplySupported,\n\t\t\t\t\t\t\tisAnnotationOfType<SelectionPresentationVariant>(\n\t\t\t\t\t\t\t\tresolvedVisualization,\n\t\t\t\t\t\t\t\tUIAnnotationTypes.SelectionPresentationVariantType\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t? visualizationPath\n\t\t\t\t\t\t\t\t: undefined\n\t\t\t\t\t  );\n\t\t\t\tbreak;\n\t\t\tcase UIAnnotationTerms.LineItem:\n\t\t\tdefault:\n\t\t\t\ttableVisualization = Table.createTableVisualization(visualization, annotationPath, converterContext, {\n\t\t\t\t\tpresentationVariantAnnotation: getDataVisualizationPresentation(visualizationPath, inConverterContext),\n\t\t\t\t\tselectionVariantAnnotation: associatedSelectionVariant ?? selectionVariant,\n\t\t\t\t\tisCondensedTableLayoutCompliant\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tinConverterContext = resolvedTarget.converterContext;\n\tconst isALP = isAlpAnnotation(inConverterContext);\n\tif (!term || (isALP && tableVisualization === undefined)) {\n\t\ttableVisualization = Table.createDefaultTableVisualization(inConverterContext, isMacroOrMultipleView !== true);\n\t\tinConverterContext.getDiagnostics().addIssue(IssueCategory.Annotation, IssueSeverity.Medium, IssueType.MISSING_LINEITEM);\n\t}\n\tif (isALP && chartVisualization === undefined) {\n\t\tchartVisualization = createBlankChartVisualization(inConverterContext);\n\t\tinConverterContext.getDiagnostics().addIssue(IssueCategory.Annotation, IssueSeverity.Medium, IssueType.MISSING_CHART);\n\t}\n\n\treturn {\n\t\tvisualizations: [chartVisualization, tableVisualization].filter(isVisualization),\n\t\tannotationPath: inConverterContext.getEntitySetBasedAnnotationPath(resolvedVisualization?.fullyQualifiedName ?? \"/\"),\n\t\tassociatedSelectionVariantPath: params.associatedSelectionVariant\n\t\t\t? inConverterContext.getEntitySetBasedAnnotationPath(params.associatedSelectionVariant.fullyQualifiedName)\n\t\t\t: undefined\n\t};\n}\n\nfunction isVisualization(visualization: unknown): visualization is ChartVisualization | TableVisualization {\n\treturn [VisualizationType.Table, VisualizationType.Chart].includes((visualization as ChartVisualization | TableVisualization)?.type);\n}\n\nexport function validatePresentationMetaPath(metaPath: string, objectTerm: string): void {\n\t// perform validation only if annotation set (to avoid backwards compatibility issues for test without annotations)\n\tif (metaPath.includes(objectTerm.slice(0, objectTerm.lastIndexOf(\".\")))) {\n\t\tconst allowedTerms = [UIAnnotationTerms.PresentationVariant, UIAnnotationTerms.SelectionPresentationVariant, objectTerm];\n\t\tif (\n\t\t\t!allowedTerms.some((term) => {\n\t\t\t\treturn metaPath.search(new RegExp(`${term}(#|/|$)`)) > -1;\n\t\t\t})\n\t\t) {\n\t\t\tthrow new Error(`Annotation Path ${metaPath} mentioned in the manifest is not valid for ${objectTerm}`);\n\t\t}\n\t}\n}\n/**\n * Returns the context of the UI controls (either a UI.LineItem, or a UI.Chart).\n * @param presentationContext Object of the presentation context (either a presentation variant, or a UI.LineItem, or a UI.Chart)\n * @param controlPath Control path\n * @returns The context of the control (either a UI.LineItem, or a UI.Chart)\n */\nexport function getUiControl(presentationContext: Context, controlPath: string): Context {\n\tvalidatePresentationMetaPath(presentationContext.getPath(), controlPath);\n\tconst presentation = MetaModelConverter.convertMetaModelContext(presentationContext),\n\t\tmodel = presentationContext.getModel() as ODataMetaModel;\n\tif (presentation) {\n\t\tif (\n\t\t\tisAnnotationOfType<SelectionPresentationVariant>(presentation, UIAnnotationTypes.SelectionPresentationVariantType) ||\n\t\t\tisAnnotationOfType<PresentationVariant>(presentation, UIAnnotationTypes.PresentationVariantType)\n\t\t) {\n\t\t\tlet visualizations;\n\t\t\tif (\n\t\t\t\tisAnnotationOfType<SelectionPresentationVariant>(presentation, UIAnnotationTypes.SelectionPresentationVariantType) &&\n\t\t\t\tpresentation.PresentationVariant\n\t\t\t) {\n\t\t\t\tvisualizations = presentation.PresentationVariant.Visualizations;\n\t\t\t} else if (isAnnotationOfType<PresentationVariant>(presentation, UIAnnotationTypes.PresentationVariantType)) {\n\t\t\t\tvisualizations = presentation.Visualizations;\n\t\t\t}\n\t\t\tif (Array.isArray(visualizations)) {\n\t\t\t\tfor (const visualization of visualizations) {\n\t\t\t\t\tif (\n\t\t\t\t\t\tvisualization.type == \"AnnotationPath\" &&\n\t\t\t\t\t\tvisualization.value.includes(controlPath) &&\n\t\t\t\t\t\t// check if object exists for PresentationVariant visualization\n\t\t\t\t\t\t!!model.getMetaContext(presentationContext.getPath().split(\"@\")[0] + visualization.value).getObject()\n\t\t\t\t\t) {\n\t\t\t\t\t\tcontrolPath = visualization.value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\treturn presentationContext;\n\t\t}\n\t}\n\treturn model.getMetaContext(presentationContext.getPath().split(\"@\")[0] + controlPath);\n}\nexport const annotationExistsInPresentationVariant = function (\n\tpresentationVariantAnnotation: PresentationVariantType,\n\tannotationTerm: PresentationVisualizationAnnotations\n): boolean {\n\treturn presentationVariantAnnotation.Visualizations?.some((visualization) => visualization.value.includes(annotationTerm)) ?? false;\n};\nconst prepareDefaultVisualization = function (\n\tvisualizationType: PresentationVisualizationAnnotations,\n\tbaseVisualizationPath: string,\n\tconverterContext: ConverterContext<PageContextPathTarget>\n): VisualizationAndPath | undefined {\n\tconst entityType = converterContext.getEntityType();\n\tconst defaultAnnotation =\n\t\tvisualizationType === UIAnnotationTerms.LineItem ? getDefaultLineItem(entityType) : getDefaultChart(entityType);\n\tif (defaultAnnotation) {\n\t\treturn {\n\t\t\tvisualization: defaultAnnotation,\n\t\t\tannotationPath: `${baseVisualizationPath}${converterContext.getRelativeAnnotationPath(\n\t\t\t\tdefaultAnnotation.fullyQualifiedName,\n\t\t\t\tentityType\n\t\t\t)}`,\n\t\t\tconverterContext: converterContext\n\t\t};\n\t}\n\treturn undefined;\n};\nexport const isAlpAnnotation = function (converterContext: ConverterContext<PageContextPathTarget>): boolean {\n\treturn (\n\t\tconverterContext.getManifestWrapper().hasMultipleVisualizations() ||\n\t\tconverterContext.getTemplateType() === TemplateType.AnalyticalListPage\n\t);\n};\n"],"mappings":"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","ignoreList":[],"file":"DataVisualization-dbg.js"}