{"version":3,"file":"Form.js","names":["FormElementType","_exports","getFormatOptionsForFormElement","facetDefinition","converterContext","field","manifestWrapper","horizontalLayout","formatOptions","textLinesEdit","$Type","getManifestWrapper","getHorizontalLayoutForFieldGroup","Target","value","fieldGroupHorizontalLayout","isFieldPartOfPreview","formPartOfPreview","valueOf","annotations","UI","PartOfPreview","undefined","getFormElementsFromAnnotations","formElements","resolvedTarget","getEntityTypeAnnotation","formAnnotation","annotation","getDataFieldsFromAnnotations","dataFieldKey","KeyHelper","generateKeyFromDataField","semanticObjectAnnotationPath","getSemanticObjectPath","manifestFields","getFormContainer","fields","semanticObjectManifestSettings","semanticObject","isReferencePropertyStaticallyHidden","formElement","key","type","Annotation","annotationPath","getEntitySetBasedAnnotationPath","fullyQualifiedName","semanticObjectPath","isPartOfPreview","label","Label","Value","$target","Common","toString","connectedFields","Object","values","Data","filter","connectedField","hasOwnProperty","map","connnectedFieldElement","returnObject","defineProperty","get","target","Template","fieldGroupElements","fieldGroupElement","element","push","term","forEach","qualifier","getFormElementsFromManifest","manifestFormContainer","keys","fieldId","id","Default","template","propertyPath","property","fetchTextFromMetaModel","position","placement","Placement","After","readOnly","actions","additionalSettings","sFormContainerId","createIdForAnnotation","sAnnotationPath","isVisible","compileExpression","not","equal","getExpressionFromAnnotation","Hidden","sEntitySetPath","entitySet","getEntitySet","dataModelObjectPathTarget","getDataModelObjectPath","targetObject","getTargetEntitySetPath","isNavigationProperty","containsTarget","getTargetObjectPath","isSingleton","aFormElements","insertCustomElements","OverrideType","overwrite","action","facetName","length","oActionShowDetails","getFormStandardActionButtonID","text","ifElse","pathInModel","ActionType","ShowFormDetails","press","some","oFormElement","useSingleTextAreaFieldAsNotes","annotationHidden","getFormContainersForCollection","formContainers","formContainerSettings","Facets","facet","error","Log","isReferenceFacet","createFormDefinition","getFormID","useFormContainerLabels","hasFacetsNotPartOfPreview","childFacet","Error"],"sources":["./Form.ts"],"sourcesContent":["import type { Masked } from \"@sap-ux/vocabularies-types/vocabularies/Common\";\nimport { CommonAnnotationTerms } from \"@sap-ux/vocabularies-types/vocabularies/Common\";\nimport type { Contact } from \"@sap-ux/vocabularies-types/vocabularies/Communication\";\nimport { CommunicationAnnotationTerms } from \"@sap-ux/vocabularies-types/vocabularies/Communication\";\nimport type {\n\tCollectionFacet,\n\tCollectionFacetTypes,\n\tDataField,\n\tDataFieldAbstractTypes,\n\tDataPoint,\n\tFacetTypes,\n\tFieldGroup,\n\tFieldGroupType,\n\tIdentification,\n\tInputMask,\n\tPartOfPreview,\n\tReferenceFacet,\n\tReferenceFacetTypes\n} from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport { UIAnnotationTerms, UIAnnotationTypes } from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport Log from \"sap/base/Log\";\nimport type { CompiledBindingToolkitExpression } from \"sap/fe/base/BindingToolkit\";\nimport { compileExpression, equal, getExpressionFromAnnotation, ifElse, not, pathInModel } from \"sap/fe/base/BindingToolkit\";\nimport type { PageContextPathTarget } from \"sap/fe/core/converters/TemplateConverter\";\nimport { getSemanticObjectPath } from \"sap/fe/core/converters/annotations/DataField\";\nimport type { BaseAction } from \"sap/fe/core/converters/controls/Common/Action\";\nimport { isNavigationProperty, isSingleton } from \"sap/fe/core/helpers/TypeGuards\";\nimport { getTargetEntitySetPath, getTargetObjectPath } from \"sap/fe/core/templating/DataModelPathHelper\";\nimport { createIdForAnnotation } from \"../../../helpers/StableIdHelper\";\nimport type ConverterContext from \"../../ConverterContext\";\nimport type { FormManifestConfiguration, FormatOptionsType } from \"../../ManifestSettings\";\nimport { ActionType } from \"../../ManifestSettings\";\nimport type { ConfigurableObject, CustomElement } from \"../../helpers/ConfigurableObject\";\nimport { OverrideType, Placement, insertCustomElements } from \"../../helpers/ConfigurableObject\";\nimport { isReferencePropertyStaticallyHidden } from \"../../helpers/DataFieldHelper\";\nimport { getFormID, getFormStandardActionButtonID } from \"../../helpers/ID\";\nimport { KeyHelper } from \"../../helpers/Key\";\n\nexport type FormDefinition = {\n\tid: string;\n\tuseFormContainerLabels: boolean;\n\thasFacetsNotPartOfPreview: boolean;\n\tformContainers: FormContainer[];\n\tisVisible: CompiledBindingToolkitExpression;\n};\n\nexport enum FormElementType {\n\tDefault = \"Default\",\n\tSlot = \"Slot\",\n\tAnnotation = \"Annotation\"\n}\n\nexport type BaseFormElement = ConfigurableObject & {\n\tid?: string;\n\ttype: FormElementType;\n\tlabel?: string;\n\tvisible?: CompiledBindingToolkitExpression;\n\tformatOptions?: FormatOptionsType;\n\treadOnly?: boolean;\n\tsemanticObject?: string;\n\tannotationPath?: string;\n};\n\nexport type AnnotationFormElement = BaseFormElement & {\n\tidPrefix?: string;\n\tannotationPath?: string;\n\tisValueMultilineText?: boolean;\n\tsemanticObjectPath?: string;\n\tconnectedFields?: {\n\t\tsemanticObjectPath?: string;\n\t\toriginalObject?: DataFieldAbstractTypes;\n\t\toriginalTemplate?: string;\n\t}[];\n\tfieldGroupElements?: DataFieldAbstractTypes[];\n\tisPartOfPreview?: boolean;\n\tconnectedFieldsTarget?: { [key: string]: unknown };\n};\n\nexport type CustomFormElement = CustomElement<\n\tBaseFormElement & {\n\t\ttype: FormElementType;\n\t\ttemplate: string;\n\t\tpropertyPath?: string;\n\t}\n>;\n\nexport type FormElement = CustomFormElement | AnnotationFormElement;\n\nexport type AdditionalFormSettings = {\n\tuseSingleTextAreaFieldAsNotes?: boolean;\n};\n\nexport type FormContainer = {\n\tid?: string;\n\tformElements: FormElement[];\n\tannotationPath: string;\n\tisVisible: CompiledBindingToolkitExpression;\n\tannotationHidden: boolean;\n\tentitySet?: string;\n\tactions?: BaseAction[];\n\tuseSingleTextAreaFieldAsNotes?: boolean;\n};\n\n/**\n * Returns default format options for text fields in a form.\n * It also adds the horizontal layout as a format option for field groups.\n * @param facetDefinition The facet definition to get the format options for\n * @param converterContext The converter context to fetch additional information\n * @param field The field for which the format options are to be returned\n * @returns The collection of format options for the FormElement\n */\nfunction getFormatOptionsForFormElement(\n\tfacetDefinition: ReferenceFacetTypes,\n\tconverterContext: ConverterContext<PageContextPathTarget>,\n\tfield?: DataFieldAbstractTypes\n): FormatOptionsType {\n\tlet manifestWrapper, horizontalLayout;\n\tconst formatOptions: FormatOptionsType = {\n\t\ttextLinesEdit: 4 // default\n\t};\n\tif (field && field.$Type === UIAnnotationTypes.DataFieldForAnnotation) {\n\t\tmanifestWrapper = converterContext.getManifestWrapper();\n\t\thorizontalLayout = manifestWrapper.getHorizontalLayoutForFieldGroup(facetDefinition.Target.value, field.Target?.value);\n\t\tif (horizontalLayout === true) {\n\t\t\tformatOptions.fieldGroupHorizontalLayout = horizontalLayout;\n\t\t}\n\t}\n\treturn formatOptions;\n}\n\nfunction isFieldPartOfPreview(field: DataFieldAbstractTypes, formPartOfPreview?: PartOfPreview): boolean {\n\t// Both each form and field can have the PartOfPreview annotation. Only if the form is not hidden (not partOfPreview) we allow toggling on field level\n\treturn (\n\t\tformPartOfPreview?.valueOf() === false ||\n\t\tfield.annotations?.UI?.PartOfPreview === undefined ||\n\t\tfield.annotations?.UI?.PartOfPreview.valueOf() === true\n\t);\n}\n\nexport function getFormElementsFromAnnotations(\n\tfacetDefinition: ReferenceFacetTypes,\n\tconverterContext: ConverterContext<PageContextPathTarget>\n): AnnotationFormElement[] {\n\tconst formElements: AnnotationFormElement[] = [];\n\tconst resolvedTarget = converterContext.getEntityTypeAnnotation(facetDefinition.Target.value);\n\tconst formAnnotation: Identification | FieldGroup | Contact | DataPoint | InputMask | Masked = resolvedTarget.annotation as\n\t\t| Identification\n\t\t| FieldGroup\n\t\t| Contact\n\t\t| DataPoint\n\t\t| InputMask\n\t\t| Masked;\n\tconverterContext = resolvedTarget.converterContext;\n\n\tfunction getDataFieldsFromAnnotations(field: DataFieldAbstractTypes, formPartOfPreview: PartOfPreview | undefined): void {\n\t\tconst dataFieldKey = KeyHelper.generateKeyFromDataField(field);\n\t\tconst semanticObjectAnnotationPath = getSemanticObjectPath(converterContext, field);\n\t\tconst manifestWrapper = converterContext.getManifestWrapper();\n\t\tconst manifestFields = manifestWrapper.getFormContainer(facetDefinition.Target.value)?.fields;\n\t\tconst semanticObjectManifestSettings = manifestFields?.[dataFieldKey]?.semanticObject;\n\t\tif (\n\t\t\tfield.$Type !== UIAnnotationTypes.DataFieldForAction &&\n\t\t\tfield.$Type !== UIAnnotationTypes.DataFieldForIntentBasedNavigation &&\n\t\t\tfield.$Type !== UIAnnotationTypes.DataFieldForActionGroup &&\n\t\t\t!isReferencePropertyStaticallyHidden(field)\n\t\t) {\n\t\t\tconst formElement = {\n\t\t\t\tkey: dataFieldKey,\n\t\t\t\ttype: FormElementType.Annotation,\n\t\t\t\tannotationPath: `${converterContext.getEntitySetBasedAnnotationPath(field.fullyQualifiedName)}/`,\n\t\t\t\tsemanticObjectPath: semanticObjectAnnotationPath,\n\t\t\t\tformatOptions: getFormatOptionsForFormElement(facetDefinition, converterContext, field),\n\t\t\t\tisPartOfPreview: isFieldPartOfPreview(field, formPartOfPreview),\n\t\t\t\tlabel: field.Label ?? (field as DataField).Value?.$target?.annotations?.Common?.Label?.toString(),\n\t\t\t\tsemanticObject: semanticObjectManifestSettings\n\t\t\t};\n\n\t\t\tif (\n\t\t\t\tfield.$Type === \"com.sap.vocabularies.UI.v1.DataFieldForAnnotation\" &&\n\t\t\t\tfield.Target.$target?.$Type === \"com.sap.vocabularies.UI.v1.ConnectedFieldsType\"\n\t\t\t) {\n\t\t\t\tconst connectedFields = Object.values(field.Target.$target.Data).filter(\n\t\t\t\t\t(connectedField: unknown) => (connectedField as DataFieldAbstractTypes)?.hasOwnProperty(\"Value\")\n\t\t\t\t) as DataFieldAbstractTypes[];\n\t\t\t\t(formElement as AnnotationFormElement).connectedFields = connectedFields.map((connnectedFieldElement) => {\n\t\t\t\t\tconst returnObject = {\n\t\t\t\t\t\tsemanticObjectPath: getSemanticObjectPath(converterContext, connnectedFieldElement)\n\t\t\t\t\t};\n\n\t\t\t\t\tObject.defineProperty(returnObject, \"originalObject\", {\n\t\t\t\t\t\tget: () => connnectedFieldElement\n\t\t\t\t\t});\n\n\t\t\t\t\tObject.defineProperty(returnObject, \"originalTemplate\", {\n\t\t\t\t\t\tget: () => {\n\t\t\t\t\t\t\tconst target = field.Target?.$target;\n\t\t\t\t\t\t\treturn target && \"Template\" in target ? target.Template : undefined;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\treturn returnObject;\n\t\t\t\t});\n\t\t\t} else if (\n\t\t\t\tfield.$Type === \"com.sap.vocabularies.UI.v1.DataFieldForAnnotation\" &&\n\t\t\t\tfield.Target.$target?.$Type === \"com.sap.vocabularies.UI.v1.FieldGroupType\"\n\t\t\t) {\n\t\t\t\tconst fieldGroupElements = Object.values(field.Target.$target.Data).filter(\n\t\t\t\t\t(fieldGroupElement) => fieldGroupElement?.hasOwnProperty(\"Value\")\n\t\t\t\t);\n\t\t\t\t(formElement as AnnotationFormElement).fieldGroupElements = fieldGroupElements.map((element) => ({\n\t\t\t\t\t$Type: element.$Type,\n\t\t\t\t\tfullyQualifiedName: element.fullyQualifiedName,\n\t\t\t\t\tLabel: element.Label\n\t\t\t\t})) as unknown as DataFieldAbstractTypes[];\n\t\t\t}\n\t\t\tformElements.push(formElement);\n\t\t}\n\t}\n\n\tswitch (formAnnotation?.term) {\n\t\tcase UIAnnotationTerms.FieldGroup:\n\t\t\tformAnnotation.Data.forEach((field) => getDataFieldsFromAnnotations(field, facetDefinition.annotations?.UI?.PartOfPreview));\n\t\t\tbreak;\n\t\tcase UIAnnotationTerms.Identification:\n\t\t\tformAnnotation.forEach((field) => getDataFieldsFromAnnotations(field, facetDefinition.annotations?.UI?.PartOfPreview));\n\t\t\tbreak;\n\t\tcase UIAnnotationTerms.DataPoint:\n\t\t\tformElements.push({\n\t\t\t\t// key: KeyHelper.generateKeyFromDataField(formAnnotation),\n\t\t\t\tkey: `DataPoint::${formAnnotation.qualifier ? formAnnotation.qualifier : \"\"}`,\n\t\t\t\ttype: FormElementType.Annotation,\n\t\t\t\tannotationPath: `${converterContext.getEntitySetBasedAnnotationPath(formAnnotation.fullyQualifiedName)}/`\n\t\t\t});\n\t\t\tbreak;\n\t\tcase UIAnnotationTerms.InputMask:\n\t\t\tformElements.push({\n\t\t\t\tkey: `MaskedInput::${formAnnotation.qualifier ? formAnnotation.qualifier : \"\"}`,\n\t\t\t\ttype: FormElementType.Annotation,\n\t\t\t\tannotationPath: `${converterContext.getEntitySetBasedAnnotationPath(formAnnotation.fullyQualifiedName)}/`\n\t\t\t});\n\t\t\tbreak;\n\t\tcase CommonAnnotationTerms.Masked:\n\t\t\tformElements.push({\n\t\t\t\tkey: `Masked::${formAnnotation.qualifier ? formAnnotation.qualifier : \"\"}`,\n\t\t\t\ttype: FormElementType.Annotation,\n\t\t\t\tannotationPath: `${converterContext.getEntitySetBasedAnnotationPath(formAnnotation.fullyQualifiedName)}/`\n\t\t\t});\n\t\t\tbreak;\n\t\tcase CommunicationAnnotationTerms.Contact:\n\t\t\tformElements.push({\n\t\t\t\t// key: KeyHelper.generateKeyFromDataField(formAnnotation),\n\t\t\t\tkey: `Contact::${formAnnotation.qualifier ? formAnnotation.qualifier : \"\"}`,\n\t\t\t\ttype: FormElementType.Annotation,\n\t\t\t\tannotationPath: `${converterContext.getEntitySetBasedAnnotationPath(formAnnotation.fullyQualifiedName)}/`\n\t\t\t});\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t}\n\treturn formElements;\n}\n\nexport function getFormElementsFromManifest(\n\tfacetDefinition: ReferenceFacetTypes,\n\tconverterContext: ConverterContext<PageContextPathTarget>\n): Record<string, CustomFormElement> {\n\tconst manifestWrapper = converterContext.getManifestWrapper();\n\tconst manifestFormContainer: FormManifestConfiguration = manifestWrapper.getFormContainer(facetDefinition.Target.value);\n\tconst formElements: Record<string, CustomFormElement> = {};\n\tif (manifestFormContainer?.fields) {\n\t\tObject.keys(manifestFormContainer?.fields).forEach((fieldId) => {\n\t\t\tformElements[fieldId] = {\n\t\t\t\tkey: fieldId,\n\t\t\t\tid: `CustomFormElement::${fieldId}`,\n\t\t\t\ttype: manifestFormContainer.fields[fieldId].type || FormElementType.Default,\n\t\t\t\ttemplate: manifestFormContainer.fields[fieldId].template,\n\t\t\t\tpropertyPath: manifestFormContainer.fields[fieldId]?.property,\n\t\t\t\tlabel: converterContext.fetchTextFromMetaModel(manifestFormContainer.fields[fieldId].label),\n\t\t\t\tposition: manifestFormContainer.fields[fieldId].position || {\n\t\t\t\t\tplacement: Placement.After\n\t\t\t\t},\n\t\t\t\tformatOptions: {\n\t\t\t\t\t...getFormatOptionsForFormElement(facetDefinition, converterContext),\n\t\t\t\t\t...manifestFormContainer.fields[fieldId].formatOptions\n\t\t\t\t},\n\t\t\t\t...(manifestFormContainer.fields[fieldId].readOnly !== undefined && {\n\t\t\t\t\treadOnly: manifestFormContainer.fields[fieldId].readOnly\n\t\t\t\t}),\n\t\t\t\t...(manifestFormContainer.fields[fieldId].semanticObject !== undefined && {\n\t\t\t\t\tsemanticObject: manifestFormContainer.fields[fieldId].semanticObject\n\t\t\t\t})\n\t\t\t};\n\t\t});\n\t}\n\treturn formElements;\n}\n\nexport function getFormContainer(\n\tfacetDefinition: ReferenceFacetTypes,\n\tconverterContext: ConverterContext<PageContextPathTarget>,\n\tactions?: BaseAction[],\n\tadditionalSettings?: AdditionalFormSettings\n): FormContainer {\n\tconst sFormContainerId = createIdForAnnotation(facetDefinition) as string;\n\tconst sAnnotationPath = converterContext.getEntitySetBasedAnnotationPath(facetDefinition.fullyQualifiedName);\n\tconst resolvedTarget = converterContext.getEntityTypeAnnotation(facetDefinition.Target.value);\n\tconst isVisible = compileExpression(not(equal(true, getExpressionFromAnnotation(facetDefinition.annotations?.UI?.Hidden))));\n\tlet sEntitySetPath!: string;\n\t// resolvedTarget doesn't have a entitySet in case Containments and Paramterized services.\n\tconst entitySet = resolvedTarget.converterContext.getEntitySet();\n\tconst dataModelObjectPathTarget = resolvedTarget.converterContext.getDataModelObjectPath().targetObject;\n\tif (entitySet && entitySet !== converterContext.getEntitySet()) {\n\t\tsEntitySetPath = getTargetEntitySetPath(resolvedTarget.converterContext.getDataModelObjectPath());\n\t} else if (isNavigationProperty(dataModelObjectPathTarget) && dataModelObjectPathTarget?.containsTarget === true) {\n\t\tsEntitySetPath = getTargetObjectPath(resolvedTarget.converterContext.getDataModelObjectPath(), false);\n\t} else if (entitySet && !sEntitySetPath && isSingleton(entitySet)) {\n\t\tsEntitySetPath = entitySet.fullyQualifiedName;\n\t} else if (!entitySet && isNavigationProperty(dataModelObjectPathTarget) && dataModelObjectPathTarget?.containsTarget === false) {\n\t\tsEntitySetPath = getTargetObjectPath(resolvedTarget.converterContext.getDataModelObjectPath(), false);\n\t}\n\tconst aFormElements = insertCustomElements(\n\t\tgetFormElementsFromAnnotations(facetDefinition, converterContext),\n\t\tgetFormElementsFromManifest(facetDefinition, converterContext),\n\t\t{ formatOptions: OverrideType.overwrite, readOnly: OverrideType.overwrite, semanticObject: OverrideType.overwrite }\n\t);\n\n\tactions = actions !== undefined ? actions.filter((action) => action.facetName == facetDefinition.fullyQualifiedName) : [];\n\tif (actions.length === 0) {\n\t\tactions = undefined;\n\t}\n\n\tconst oActionShowDetails: BaseAction = {\n\t\tid: getFormStandardActionButtonID(sFormContainerId, \"ShowHideDetails\"),\n\t\tkey: \"StandardAction::ShowHideDetails\",\n\t\ttext: compileExpression(\n\t\t\tifElse(\n\t\t\t\tequal(pathInModel(\"showDetails\", \"internal\"), true),\n\t\t\t\tpathInModel(\"T_COMMON_OBJECT_PAGE_HIDE_FORM_CONTAINER_DETAILS\", \"sap.fe.i18n\"),\n\t\t\t\tpathInModel(\"T_COMMON_OBJECT_PAGE_SHOW_FORM_CONTAINER_DETAILS\", \"sap.fe.i18n\")\n\t\t\t)\n\t\t),\n\t\ttype: ActionType.ShowFormDetails,\n\t\tpress: \"FormContainerRuntime.toggleDetails\"\n\t};\n\n\tif (\n\t\tfacetDefinition.annotations?.UI?.PartOfPreview?.valueOf() !== false &&\n\t\taFormElements.some((oFormElement) => oFormElement.isPartOfPreview === false)\n\t) {\n\t\tif (actions !== undefined) {\n\t\t\tactions.push(oActionShowDetails);\n\t\t} else {\n\t\t\tactions = [oActionShowDetails];\n\t\t}\n\t}\n\n\treturn {\n\t\tid: sFormContainerId,\n\t\tformElements: aFormElements,\n\t\tannotationPath: sAnnotationPath,\n\t\tisVisible: isVisible,\n\t\tentitySet: sEntitySetPath,\n\t\tactions: actions,\n\t\tuseSingleTextAreaFieldAsNotes: additionalSettings?.useSingleTextAreaFieldAsNotes,\n\t\tannotationHidden: facetDefinition.annotations?.UI?.Hidden ? true : false\n\t};\n}\n\nfunction getFormContainersForCollection(\n\tfacetDefinition: CollectionFacetTypes,\n\tconverterContext: ConverterContext<PageContextPathTarget>,\n\tactions?: BaseAction[],\n\tadditionalSettings?: AdditionalFormSettings\n): FormContainer[] {\n\tconst formContainers: FormContainer[] = [];\n\tconst formContainerSettings = {\n\t\tuseSingleTextAreaFieldAsNotes: additionalSettings?.useSingleTextAreaFieldAsNotes\n\t};\n\tfacetDefinition.Facets?.forEach((facet) => {\n\t\t// Ignore level 3 collection facet\n\t\tif (facet.$Type === UIAnnotationTypes.CollectionFacet) {\n\t\t\treturn;\n\t\t}\n\t\ttry {\n\t\t\tformContainers.push(getFormContainer(facet as ReferenceFacetTypes, converterContext, actions, formContainerSettings));\n\t\t} catch (error: unknown) {\n\t\t\tLog.error(`Skipping facet ${facet.fullyQualifiedName} due to error:`, error as string);\n\t\t}\n\t});\n\treturn formContainers;\n}\n\nexport function isReferenceFacet(facetDefinition: FacetTypes): facetDefinition is ReferenceFacetTypes {\n\treturn facetDefinition.$Type === UIAnnotationTypes.ReferenceFacet;\n}\n\nexport function createFormDefinition(\n\tfacetDefinition: FieldGroupType | CollectionFacet | ReferenceFacet | undefined,\n\tisVisible: CompiledBindingToolkitExpression,\n\tconverterContext: ConverterContext<PageContextPathTarget>,\n\tactions?: BaseAction[],\n\tadditionalSettings?: AdditionalFormSettings\n): FormDefinition {\n\tswitch (facetDefinition?.$Type) {\n\t\tcase UIAnnotationTypes.CollectionFacet:\n\t\t\t// Keep only valid children\n\t\t\treturn {\n\t\t\t\tid: getFormID(facetDefinition),\n\t\t\t\tuseFormContainerLabels: true,\n\t\t\t\thasFacetsNotPartOfPreview: facetDefinition.Facets.some(\n\t\t\t\t\t(childFacet) => childFacet.annotations?.UI?.PartOfPreview?.valueOf() === false\n\t\t\t\t),\n\t\t\t\tformContainers: getFormContainersForCollection(facetDefinition, converterContext, actions, additionalSettings),\n\t\t\t\tisVisible: isVisible\n\t\t\t};\n\t\tcase UIAnnotationTypes.ReferenceFacet:\n\t\t\treturn {\n\t\t\t\tid: getFormID(facetDefinition),\n\t\t\t\tuseFormContainerLabels: false,\n\t\t\t\thasFacetsNotPartOfPreview: facetDefinition.annotations?.UI?.PartOfPreview?.valueOf() === false,\n\t\t\t\tformContainers: [getFormContainer(facetDefinition, converterContext, actions, additionalSettings)],\n\t\t\t\tisVisible: isVisible\n\t\t\t};\n\t\tdefault:\n\t\t\tthrow new Error(\"Cannot create form based on ReferenceURLFacet\");\n\t}\n}\n"],"mappings":"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","ignoreList":[]}