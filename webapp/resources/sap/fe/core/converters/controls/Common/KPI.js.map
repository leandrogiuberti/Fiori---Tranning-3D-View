{"version":3,"file":"KPI.js","names":["DeviationIndicatorFromTrendType","KPIChartTypeFromUI","convertKPIChart","chartAnnotation","presentationVariantAnnotation","converterContext","Measures","undefined","charDimensions","Dimensions","map","propertyPath","dimAttribute","DimensionAttributes","find","attribute","Dimension","value","dimensionDefinition","name","label","$target","annotations","Common","Label","toString","role","Role","replace","dimensionProperty","enhanceDataModelPath","getDataModelObjectPath","targetObject","Text","text","getAssociatedTextPropertyPath","textArrangement","UI","TextArrangement","chartMeasures","measureAttribute","MeasureAttributes","Measure","chartDefinition","chartType","ChartType","dimensions","measures","sortOrder","SortOrder","Property","descending","Descending","maxItems","MaxItems","valueOf","chartTitle","Title","title","updateCurrency","datapointAnnotation","kpiDef","targetValueProperty","Value","ISOCurrency","currency","isPathAnnotationExpression","datapoint","unit","isCurrency","isPath","Unit","updateCriticality","aggregationHelper","Criticality","criticalityProperty","isPropertyAggregatable","criticalityPath","path","criticalityValue","MessageType","None","getMessageTypeFromCriticalityType","CriticalityCalculation","criticalityCalculationMode","ImprovementDirection","criticalityCalculationThresholds","push","DeviationRangeLowValue","ToleranceRangeLowValue","AcceptanceRangeLowValue","AcceptanceRangeHighValue","ToleranceRangeHighValue","DeviationRangeHighValue","updateTrend","Trend","trendProperty","trendPath","trendValue","TrendCalculation","trendCalculationIsRelative","IsRelativeDifference","ReferenceValue","referenceProperty","trendCalculationReferencePath","trendCalculationReferenceValue","trendCalculationTresholds","StrongDownDifference","DownDifference","UpDifference","StrongUpDifference","updateTarget","TargetValue","targetProperty","targetPath","targetValue","getNavigationInfoFromProperty","property","semanticObjectAnnotation","Object","keys","forEach","annotationKey","annotation","isAnnotationOfTerm","qualifier","result","semanticObject","unavailableActions","key","isCustomKPIConfiguration","kpiConfig","template","createAnalyticalKPIDefinition","kpiName","contextPath","entitySet","kpiConverterContext","getConverterContextFor","AggregationHelper","getEntityType","isAnalyticsSupported","getDiagnostics","addIssue","IssueCategory","Annotation","IssueSeverity","Medium","IssueType","KPI_ISSUES","NO_ANALYTICS","selectionVariantAnnotation","navigationInfo","aKPIAnnotations","getAnnotationsByTerm","targetKPI","kpi","DataPoint","SelectionVariant","Detail","DefaultPresentationVariant","Visualizations","viz","isAnnotationOfType","SemanticObject","action","Action","aSPVAnnotations","targetSPV","spv","PresentationVariant","KPI_NOT_FOUND","KPI_DETAIL_NOT_FOUND","datapointProperty","MAIN_PROPERTY_NOT_AGGREGATABLE","chartDef","type","id","getKPIID","annotationPath","getEntitySetBasedAnnotationPath","fullyQualifiedName","description","Description","selectionVariantFilterDefinitions","getFilterDefinitionsFromSelectionVariant","chart","ValueFormat","NumberOfFractionalDigits","numberOfFractionalDigits","detailNavigation","outboundNavigation","navigation","createKPIDefinition","getKPIDefinitions","kpiConfigs","getManifestWrapper","getKPIConfiguration","kpiDefs","oDef","_exports"],"sources":["./KPI.ts"],"sourcesContent":["import type { Property } from \"@sap-ux/vocabularies-types\";\nimport type { SemanticObject } from \"@sap-ux/vocabularies-types/vocabularies/Common\";\nimport { CommonAnnotationTerms } from \"@sap-ux/vocabularies-types/vocabularies/Common\";\nimport type {\n\tChart,\n\tCriticalityType,\n\tDataPoint,\n\tDataPointType,\n\tImprovementDirectionType,\n\tKPI,\n\tPresentationVariantType,\n\tSelectionPresentationVariant,\n\tSelectionVariantType\n} from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport { UIAnnotationTerms, UIAnnotationTypes } from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport type ConverterContext from \"sap/fe/core/converters/ConverterContext\";\nimport type { PageContextPathTarget } from \"sap/fe/core/converters/TemplateConverter\";\nimport { IssueCategory, IssueSeverity, IssueType } from \"sap/fe/core/converters/helpers/IssueManager\";\nimport type { FilterDefinition } from \"sap/fe/core/converters/helpers/SelectionVariantHelper\";\nimport { getFilterDefinitionsFromSelectionVariant } from \"sap/fe/core/converters/helpers/SelectionVariantHelper\";\nimport { isAnnotationOfTerm, isAnnotationOfType, isPathAnnotationExpression } from \"sap/fe/core/helpers/TypeGuards\";\nimport { enhanceDataModelPath } from \"sap/fe/core/templating/DataModelPathHelper\";\nimport { getAssociatedTextPropertyPath } from \"sap/fe/core/templating/PropertyHelper\";\nimport MessageType from \"sap/ui/core/message/MessageType\";\nimport type { AnalyticalKPIConfiguration, CustomKPIConfiguration, KPIConfiguration } from \"../../ManifestSettings\";\nimport { AggregationHelper } from \"../../helpers/Aggregation\";\nimport { getKPIID } from \"../../helpers/ID\";\nimport { getMessageTypeFromCriticalityType } from \"./Criticality\";\n\nexport type NavigationInfo = {\n\tsemanticObject?: string;\n\taction?: string;\n\tunavailableActions?: string[];\n\toutboundNavigation?: string;\n};\n\ntype DimensionDefinition = {\n\tname: string;\n\ttext?: string;\n\ttextArrangement?: \"TextFirst\" | \"TextLast\" | \"TextOnly\" | \"TextSeparate\";\n\tlabel: string;\n\trole?: string;\n};\n\nexport type KPIChartDefinition = {\n\tchartType: string;\n\ttitle?: string;\n\tdimensions: DimensionDefinition[];\n\tmeasures: { name: string; label: string; role?: string }[];\n\tsortOrder?: { name: string; descending: boolean }[];\n\tmaxItems?: number;\n};\n\nexport type AnalyticalKPIDefinition = {\n\ttype: \"Analytical\";\n\tid: string;\n\tcontextPath: string;\n\tdatapoint: {\n\t\tannotationPath: string;\n\t\tpropertyPath: string;\n\t\tnumberOfFractionalDigits?: number;\n\t\tunit?: {\n\t\t\tvalue: string;\n\t\t\tisPath: boolean;\n\t\t\tisCurrency: boolean;\n\t\t};\n\t\tcriticalityPath?: string;\n\t\tcriticalityValue?: MessageType;\n\t\tcriticalityCalculationMode?: ImprovementDirectionType;\n\t\tcriticalityCalculationThresholds?: (number | undefined | null)[];\n\t\ttitle?: string;\n\t\tdescription?: string;\n\t\ttrendPath?: string;\n\t\ttrendValue?: string;\n\t\ttrendCalculationReferenceValue?: number;\n\t\ttrendCalculationReferencePath?: string;\n\t\ttrendCalculationTresholds?: (number | undefined | null)[];\n\t\ttrendCalculationIsRelative?: boolean;\n\t\ttargetValue?: number;\n\t\ttargetPath?: string;\n\t};\n\tchart: KPIChartDefinition;\n\tselectionVariantFilterDefinitions?: FilterDefinition[];\n\tnavigation?: NavigationInfo;\n};\n\nexport type CustomKPIDefinition = {\n\ttype: \"Custom\";\n\tkey: string;\n\ttemplate: string;\n};\nexport type KPIDefinition = AnalyticalKPIDefinition | CustomKPIDefinition;\n\nconst DeviationIndicatorFromTrendType: Record<string, string> = {\n\t\"UI.TrendType/StrongUp\": \"Up\",\n\t\"UI.TrendType/Up\": \"Up\",\n\t\"UI.TrendType/StrongDown\": \"Down\",\n\t\"UI.TrendType/Down\": \"Down\",\n\t\"UI.TrendType/Sideways\": \"None\"\n};\n\nconst KPIChartTypeFromUI: Record<string, string> = {\n\t\"UI.ChartType/ColumnStacked\": \"StackedColumn\",\n\t\"UI.ChartType/BarStacked\": \"StackedBar\",\n\t\"UI.ChartType/Donut\": \"Donut\",\n\t\"UI.ChartType/Line\": \"Line\",\n\t\"UI.ChartType/Bubble\": \"bubble\",\n\t\"UI.ChartType/Column\": \"column\",\n\t\"UI.ChartType/Bar\": \"bar\",\n\t\"UI.ChartType/VerticalBullet\": \"vertical_bullet\",\n\t\"UI.ChartType/Combination\": \"combination\",\n\t\"UI.ChartType/Scatter\": \"scatter\"\n};\n\nfunction convertKPIChart(\n\tchartAnnotation: Chart,\n\tpresentationVariantAnnotation: PresentationVariantType,\n\tconverterContext: ConverterContext<PageContextPathTarget>\n): KPIChartDefinition | undefined {\n\tif (chartAnnotation.Measures === undefined) {\n\t\t// We need at least 1 measure (but no dimension is allowed, e.g. for bubble chart)\n\t\treturn undefined;\n\t}\n\n\tconst charDimensions = chartAnnotation.Dimensions\n\t\t? chartAnnotation.Dimensions.map((propertyPath) => {\n\t\t\t\tconst dimAttribute = chartAnnotation.DimensionAttributes?.find((attribute) => {\n\t\t\t\t\treturn attribute.Dimension?.value === propertyPath.value;\n\t\t\t\t});\n\n\t\t\t\tconst dimensionDefinition: DimensionDefinition = {\n\t\t\t\t\tname: propertyPath.value,\n\t\t\t\t\tlabel: propertyPath.$target?.annotations.Common?.Label?.toString() || propertyPath.value,\n\t\t\t\t\trole: dimAttribute?.Role?.replace(\"UI.ChartDimensionRoleType/\", \"\")\n\t\t\t\t};\n\n\t\t\t\tconst dimensionProperty = enhanceDataModelPath<Property>(\n\t\t\t\t\tconverterContext.getDataModelObjectPath(),\n\t\t\t\t\tpropertyPath.value\n\t\t\t\t).targetObject;\n\t\t\t\tif (dimensionProperty?.annotations.Common?.Text) {\n\t\t\t\t\tdimensionDefinition.text = getAssociatedTextPropertyPath(dimensionProperty);\n\t\t\t\t\tdimensionDefinition.textArrangement =\n\t\t\t\t\t\t(dimensionProperty.annotations.Common.Text.annotations?.UI?.TextArrangement?.toString().replace(\n\t\t\t\t\t\t\t\"UI.TextArrangementType/\",\n\t\t\t\t\t\t\t\"\"\n\t\t\t\t\t\t) ?? \"TextFirst\") as \"TextFirst\" | \"TextLast\" | \"TextOnly\" | \"TextSeparate\";\n\t\t\t\t}\n\n\t\t\t\treturn dimensionDefinition;\n\t\t  })\n\t\t: [];\n\n\tconst chartMeasures = chartAnnotation.Measures.map((propertyPath) => {\n\t\tconst measureAttribute = chartAnnotation.MeasureAttributes?.find((attribute) => {\n\t\t\treturn attribute.Measure?.value === propertyPath.value;\n\t\t});\n\t\treturn {\n\t\t\tname: propertyPath.value,\n\t\t\tlabel: propertyPath.$target?.annotations.Common?.Label?.toString() || propertyPath.value,\n\t\t\trole: measureAttribute?.Role?.replace(\"UI.ChartMeasureRoleType/\", \"\")\n\t\t};\n\t});\n\n\tconst chartDefinition: KPIChartDefinition = {\n\t\tchartType: KPIChartTypeFromUI[chartAnnotation.ChartType] || \"Line\",\n\t\tdimensions: charDimensions,\n\t\tmeasures: chartMeasures,\n\t\tsortOrder: presentationVariantAnnotation?.SortOrder?.map((sortOrder) => {\n\t\t\treturn { name: sortOrder.Property?.value || \"\", descending: !!sortOrder.Descending };\n\t\t}),\n\t\tmaxItems: presentationVariantAnnotation?.MaxItems?.valueOf() as number\n\t};\n\n\tconst chartTitle = chartAnnotation.Title?.valueOf();\n\tif (chartTitle !== undefined) {\n\t\tchartDefinition.title = chartTitle;\n\t}\n\n\treturn chartDefinition;\n}\n\nfunction updateCurrency(datapointAnnotation: DataPointType, kpiDef: AnalyticalKPIDefinition): void {\n\tconst targetValueProperty = datapointAnnotation.Value.$target as Property;\n\tif (targetValueProperty.annotations.Measures?.ISOCurrency) {\n\t\tconst currency = targetValueProperty.annotations.Measures?.ISOCurrency;\n\t\tif (isPathAnnotationExpression(currency)) {\n\t\t\tkpiDef.datapoint.unit = {\n\t\t\t\tvalue: (currency.$target as unknown as Property).name,\n\t\t\t\tisCurrency: true,\n\t\t\t\tisPath: true\n\t\t\t};\n\t\t} else {\n\t\t\tkpiDef.datapoint.unit = {\n\t\t\t\tvalue: currency.toString(),\n\t\t\t\tisCurrency: true,\n\t\t\t\tisPath: false\n\t\t\t};\n\t\t}\n\t} else if (targetValueProperty.annotations.Measures?.Unit) {\n\t\tconst unit = targetValueProperty.annotations.Measures?.Unit;\n\t\tif (isPathAnnotationExpression(unit)) {\n\t\t\tkpiDef.datapoint.unit = {\n\t\t\t\tvalue: (unit.$target as unknown as Property).name,\n\t\t\t\tisCurrency: false,\n\t\t\t\tisPath: true\n\t\t\t};\n\t\t} else {\n\t\t\tkpiDef.datapoint.unit = {\n\t\t\t\tvalue: unit.toString(),\n\t\t\t\tisCurrency: false,\n\t\t\t\tisPath: false\n\t\t\t};\n\t\t}\n\t}\n}\n\nfunction updateCriticality(\n\tdatapointAnnotation: DataPointType,\n\taggregationHelper: AggregationHelper,\n\tkpiDef: AnalyticalKPIDefinition\n): void {\n\tif (datapointAnnotation.Criticality) {\n\t\tif (isPathAnnotationExpression(datapointAnnotation.Criticality)) {\n\t\t\t// Criticality is a path --> check if the corresponding property is aggregatable\n\t\t\tconst criticalityProperty = datapointAnnotation.Criticality.$target;\n\t\t\tif (criticalityProperty && aggregationHelper.isPropertyAggregatable(criticalityProperty)) {\n\t\t\t\tkpiDef.datapoint.criticalityPath = datapointAnnotation.Criticality.path;\n\t\t\t} else {\n\t\t\t\t// The property isn't aggregatable --> we ignore it\n\t\t\t\tkpiDef.datapoint.criticalityValue = MessageType.None;\n\t\t\t}\n\t\t} else {\n\t\t\t// Criticality is an enum Value --> get the corresponding static value\n\t\t\t// We ignore all the other type of dynamic expressions for now\n\t\t\tkpiDef.datapoint.criticalityValue = getMessageTypeFromCriticalityType(\n\t\t\t\tdatapointAnnotation.Criticality as unknown as CriticalityType\n\t\t\t);\n\t\t}\n\t} else if (datapointAnnotation.CriticalityCalculation) {\n\t\tkpiDef.datapoint.criticalityCalculationMode = datapointAnnotation.CriticalityCalculation.ImprovementDirection;\n\t\tkpiDef.datapoint.criticalityCalculationThresholds = [];\n\t\tswitch (kpiDef.datapoint.criticalityCalculationMode) {\n\t\t\tcase \"UI.ImprovementDirectionType/Target\":\n\t\t\t\tkpiDef.datapoint.criticalityCalculationThresholds.push(datapointAnnotation.CriticalityCalculation.DeviationRangeLowValue);\n\t\t\t\tkpiDef.datapoint.criticalityCalculationThresholds.push(datapointAnnotation.CriticalityCalculation.ToleranceRangeLowValue);\n\t\t\t\tkpiDef.datapoint.criticalityCalculationThresholds.push(datapointAnnotation.CriticalityCalculation.AcceptanceRangeLowValue);\n\t\t\t\tkpiDef.datapoint.criticalityCalculationThresholds.push(datapointAnnotation.CriticalityCalculation.AcceptanceRangeHighValue);\n\t\t\t\tkpiDef.datapoint.criticalityCalculationThresholds.push(datapointAnnotation.CriticalityCalculation.ToleranceRangeHighValue);\n\t\t\t\tkpiDef.datapoint.criticalityCalculationThresholds.push(datapointAnnotation.CriticalityCalculation.DeviationRangeHighValue);\n\t\t\t\tbreak;\n\n\t\t\tcase \"UI.ImprovementDirectionType/Minimize\":\n\t\t\t\tkpiDef.datapoint.criticalityCalculationThresholds.push(datapointAnnotation.CriticalityCalculation.AcceptanceRangeHighValue);\n\t\t\t\tkpiDef.datapoint.criticalityCalculationThresholds.push(datapointAnnotation.CriticalityCalculation.ToleranceRangeHighValue);\n\t\t\t\tkpiDef.datapoint.criticalityCalculationThresholds.push(datapointAnnotation.CriticalityCalculation.DeviationRangeHighValue);\n\t\t\t\tbreak;\n\n\t\t\tcase \"UI.ImprovementDirectionType/Maximize\":\n\t\t\tdefault:\n\t\t\t\tkpiDef.datapoint.criticalityCalculationThresholds.push(datapointAnnotation.CriticalityCalculation.DeviationRangeLowValue);\n\t\t\t\tkpiDef.datapoint.criticalityCalculationThresholds.push(datapointAnnotation.CriticalityCalculation.ToleranceRangeLowValue);\n\t\t\t\tkpiDef.datapoint.criticalityCalculationThresholds.push(datapointAnnotation.CriticalityCalculation.AcceptanceRangeLowValue);\n\t\t}\n\t} else {\n\t\tkpiDef.datapoint.criticalityValue = MessageType.None;\n\t}\n}\n\nfunction updateTrend(datapointAnnotation: DataPointType, aggregationHelper: AggregationHelper, kpiDef: AnalyticalKPIDefinition): void {\n\tif (datapointAnnotation.Trend) {\n\t\tif (isPathAnnotationExpression(datapointAnnotation.Trend)) {\n\t\t\t// Trend is a path --> check if the corresponding property is aggregatable\n\t\t\tconst trendProperty = datapointAnnotation.Trend.$target;\n\t\t\tif (trendProperty && aggregationHelper.isPropertyAggregatable(trendProperty)) {\n\t\t\t\tkpiDef.datapoint.trendPath = datapointAnnotation.Trend.path;\n\t\t\t} else {\n\t\t\t\t// The property isn't aggregatable --> we ignore it\n\t\t\t\tkpiDef.datapoint.trendValue = \"None\";\n\t\t\t}\n\t\t} else {\n\t\t\t// Trend is an enum Value --> get the corresponding static value\n\t\t\tkpiDef.datapoint.trendValue = DeviationIndicatorFromTrendType[datapointAnnotation.Trend] || \"None\";\n\t\t}\n\t} else if (datapointAnnotation.TrendCalculation) {\n\t\tkpiDef.datapoint.trendCalculationIsRelative = datapointAnnotation.TrendCalculation.IsRelativeDifference ? true : false;\n\t\tif (datapointAnnotation.TrendCalculation.ReferenceValue.$target) {\n\t\t\t// Reference value is a path --> check if the corresponding property is aggregatable\n\t\t\tconst referenceProperty = datapointAnnotation.TrendCalculation.ReferenceValue.$target as Property;\n\t\t\tif (aggregationHelper.isPropertyAggregatable(referenceProperty)) {\n\t\t\t\tkpiDef.datapoint.trendCalculationReferencePath = datapointAnnotation.TrendCalculation.ReferenceValue.path;\n\t\t\t} else {\n\t\t\t\t// The property isn't aggregatable --> we ignore it and switch back to trend 'None'\n\t\t\t\tkpiDef.datapoint.trendValue = \"None\";\n\t\t\t}\n\t\t} else {\n\t\t\t// Reference value is a static value\n\t\t\tkpiDef.datapoint.trendCalculationReferenceValue = datapointAnnotation.TrendCalculation.ReferenceValue;\n\t\t}\n\t\tif (kpiDef.datapoint.trendCalculationReferencePath !== undefined || kpiDef.datapoint.trendCalculationReferenceValue !== undefined) {\n\t\t\tkpiDef.datapoint.trendCalculationTresholds = [\n\t\t\t\tdatapointAnnotation.TrendCalculation.StrongDownDifference.valueOf(),\n\t\t\t\tdatapointAnnotation.TrendCalculation.DownDifference.valueOf(),\n\t\t\t\tdatapointAnnotation.TrendCalculation.UpDifference.valueOf(),\n\t\t\t\tdatapointAnnotation.TrendCalculation.StrongUpDifference.valueOf()\n\t\t\t];\n\t\t}\n\t} else {\n\t\tkpiDef.datapoint.trendValue = \"None\";\n\t}\n}\n\nfunction updateTarget(datapointAnnotation: DataPointType, aggregationHelper: AggregationHelper, kpiDef: AnalyticalKPIDefinition): void {\n\tif (datapointAnnotation.TargetValue) {\n\t\tif (datapointAnnotation.TargetValue.$target) {\n\t\t\t// Target value is a path --> check if the corresponding property is aggregatable (otherwise ignore)\n\t\t\tconst targetProperty = datapointAnnotation.TargetValue.$target as Property;\n\t\t\tif (aggregationHelper.isPropertyAggregatable(targetProperty)) {\n\t\t\t\tkpiDef.datapoint.targetPath = datapointAnnotation.TargetValue.path;\n\t\t\t}\n\t\t} else {\n\t\t\t// Target value is a static value\n\t\t\tkpiDef.datapoint.targetValue = datapointAnnotation.TargetValue;\n\t\t}\n\t}\n}\n\nfunction getNavigationInfoFromProperty(property: Property): NavigationInfo | undefined {\n\tconst annotations = property.annotations[\"Common\"] || {};\n\t// Look for the semanticObject annotation (if any)\n\tlet semanticObjectAnnotation: SemanticObject | undefined;\n\tObject.keys(annotations).forEach((annotationKey) => {\n\t\tconst annotation = annotations[annotationKey as keyof typeof annotations];\n\t\tif (isAnnotationOfTerm(annotation, CommonAnnotationTerms.SemanticObject)) {\n\t\t\tif (!annotation.qualifier || !semanticObjectAnnotation) {\n\t\t\t\t// We always take the annotation without qualifier if there's one, otherwise we take the first one\n\t\t\t\tsemanticObjectAnnotation = annotation as SemanticObject;\n\t\t\t}\n\t\t}\n\t});\n\n\tif (semanticObjectAnnotation) {\n\t\tconst result: NavigationInfo = {\n\t\t\tsemanticObject: semanticObjectAnnotation.toString(),\n\t\t\tunavailableActions: []\n\t\t};\n\n\t\t// Look for the unavailable actions (if any)\n\t\tconst annotationKey = Object.keys(annotations).find((key) => {\n\t\t\tconst annotation = annotations[key as keyof typeof annotations];\n\t\t\treturn (\n\t\t\t\tisAnnotationOfTerm(annotation, CommonAnnotationTerms.SemanticObjectUnavailableActions) &&\n\t\t\t\tannotation.qualifier === semanticObjectAnnotation?.qualifier\n\t\t\t);\n\t\t});\n\t\tif (annotationKey) {\n\t\t\tresult.unavailableActions = annotations[annotationKey as keyof typeof annotations] as string[];\n\t\t}\n\n\t\treturn result;\n\t} else {\n\t\treturn undefined;\n\t}\n}\n\nfunction isCustomKPIConfiguration(kpiConfig: KPIConfiguration): kpiConfig is CustomKPIConfiguration {\n\treturn !!(kpiConfig as CustomKPIConfiguration).template;\n}\n\nfunction createAnalyticalKPIDefinition(\n\tconverterContext: ConverterContext<PageContextPathTarget>,\n\tkpiConfig: AnalyticalKPIConfiguration,\n\tkpiName: string\n): AnalyticalKPIDefinition | undefined {\n\tlet contextPath = \"\";\n\tif (kpiConfig.contextPath) {\n\t\tcontextPath = kpiConfig.contextPath;\n\t} else if (kpiConfig.entitySet) {\n\t\tcontextPath = `/${kpiConfig.entitySet}`;\n\t}\n\tconst kpiConverterContext = converterContext.getConverterContextFor<PageContextPathTarget>(contextPath);\n\tconst aggregationHelper = new AggregationHelper(kpiConverterContext.getEntityType(), kpiConverterContext);\n\n\tif (!aggregationHelper.isAnalyticsSupported()) {\n\t\t// The entity doesn't support analytical queries\n\t\tconverterContext\n\t\t\t.getDiagnostics()\n\t\t\t.addIssue(IssueCategory.Annotation, IssueSeverity.Medium, IssueType.KPI_ISSUES.NO_ANALYTICS + contextPath);\n\n\t\treturn undefined;\n\t}\n\n\tlet selectionVariantAnnotation: SelectionVariantType | undefined;\n\tlet datapointAnnotation: DataPointType | undefined;\n\tlet presentationVariantAnnotation: PresentationVariantType | undefined;\n\tlet chartAnnotation: Chart | undefined;\n\tlet navigationInfo: NavigationInfo | undefined;\n\n\t// Search for a KPI with the qualifier frmo the manifest\n\tconst aKPIAnnotations = kpiConverterContext.getAnnotationsByTerm(\"UI\", UIAnnotationTerms.KPI) as KPI[];\n\tconst targetKPI = aKPIAnnotations.find((kpi) => {\n\t\treturn kpi.qualifier === kpiConfig.qualifier;\n\t});\n\tif (targetKPI) {\n\t\tdatapointAnnotation = targetKPI.DataPoint;\n\t\tselectionVariantAnnotation = targetKPI.SelectionVariant;\n\t\tpresentationVariantAnnotation = targetKPI.Detail?.DefaultPresentationVariant;\n\t\tchartAnnotation = presentationVariantAnnotation?.Visualizations?.find((viz) => {\n\t\t\treturn isAnnotationOfType<Chart>(viz.$target, UIAnnotationTypes.ChartDefinitionType);\n\t\t})?.$target as Chart;\n\n\t\tif (targetKPI.Detail?.SemanticObject) {\n\t\t\tnavigationInfo = {\n\t\t\t\tsemanticObject: targetKPI.Detail.SemanticObject.toString(),\n\t\t\t\taction: targetKPI.Detail.Action?.toString(),\n\t\t\t\tunavailableActions: []\n\t\t\t};\n\t\t}\n\t} else {\n\t\t// Fallback: try to find a SPV with the same qualifier\n\t\tconst aSPVAnnotations = kpiConverterContext.getAnnotationsByTerm(\n\t\t\t\"UI\",\n\t\t\tUIAnnotationTerms.SelectionPresentationVariant\n\t\t) as SelectionPresentationVariant[];\n\t\tconst targetSPV = aSPVAnnotations.find((spv) => {\n\t\t\treturn spv.qualifier === kpiConfig.qualifier;\n\t\t});\n\t\tif (targetSPV) {\n\t\t\tselectionVariantAnnotation = targetSPV.SelectionVariant;\n\t\t\tpresentationVariantAnnotation = targetSPV.PresentationVariant;\n\t\t\tdatapointAnnotation = presentationVariantAnnotation?.Visualizations?.find((viz) => {\n\t\t\t\treturn isAnnotationOfType<DataPoint>(viz.$target, UIAnnotationTypes.DataPointType);\n\t\t\t})?.$target as DataPoint;\n\t\t\tchartAnnotation = presentationVariantAnnotation?.Visualizations?.find((viz) => {\n\t\t\t\treturn isAnnotationOfType<Chart>(viz.$target, UIAnnotationTypes.ChartDefinitionType);\n\t\t\t})?.$target as Chart;\n\t\t} else {\n\t\t\t// Couldn't find a KPI or a SPV annotation with the qualifier from the manifest\n\t\t\tconverterContext\n\t\t\t\t.getDiagnostics()\n\t\t\t\t.addIssue(IssueCategory.Annotation, IssueSeverity.Medium, IssueType.KPI_ISSUES.KPI_NOT_FOUND + kpiConfig.qualifier);\n\n\t\t\treturn undefined;\n\t\t}\n\t}\n\n\tif (!presentationVariantAnnotation || !datapointAnnotation || !chartAnnotation) {\n\t\t// Couldn't find a chart or datapoint definition\n\t\tconverterContext\n\t\t\t.getDiagnostics()\n\t\t\t.addIssue(IssueCategory.Annotation, IssueSeverity.Medium, IssueType.KPI_ISSUES.KPI_DETAIL_NOT_FOUND + kpiConfig.qualifier);\n\n\t\treturn undefined;\n\t}\n\n\tconst datapointProperty = datapointAnnotation.Value.$target as Property;\n\tif (!aggregationHelper.isPropertyAggregatable(datapointProperty)) {\n\t\t// The main property of the KPI is not aggregatable --> We can't calculate its value so we ignore the KPI\n\t\tconverterContext\n\t\t\t.getDiagnostics()\n\t\t\t.addIssue(\n\t\t\t\tIssueCategory.Annotation,\n\t\t\t\tIssueSeverity.Medium,\n\t\t\t\tIssueType.KPI_ISSUES.MAIN_PROPERTY_NOT_AGGREGATABLE + kpiConfig.qualifier\n\t\t\t);\n\t\treturn undefined;\n\t}\n\n\t// Chart definition\n\tconst chartDef = convertKPIChart(chartAnnotation, presentationVariantAnnotation, converterContext);\n\tif (!chartDef) {\n\t\treturn undefined;\n\t}\n\n\tconst kpiDef: AnalyticalKPIDefinition = {\n\t\ttype: \"Analytical\",\n\t\tid: \"kpiTag-\" + getKPIID(kpiName),\n\t\tcontextPath,\n\t\tdatapoint: {\n\t\t\tpropertyPath: datapointAnnotation.Value.path,\n\t\t\tannotationPath: kpiConverterContext.getEntitySetBasedAnnotationPath(datapointAnnotation.fullyQualifiedName),\n\t\t\ttitle: datapointAnnotation.Title?.toString(),\n\t\t\tdescription: datapointAnnotation.Description?.toString()\n\t\t},\n\t\tselectionVariantFilterDefinitions: selectionVariantAnnotation\n\t\t\t? getFilterDefinitionsFromSelectionVariant(selectionVariantAnnotation)\n\t\t\t: undefined,\n\t\tchart: chartDef\n\t};\n\n\tif (datapointAnnotation.ValueFormat?.NumberOfFractionalDigits !== undefined) {\n\t\tkpiDef.datapoint.numberOfFractionalDigits = datapointAnnotation.ValueFormat.NumberOfFractionalDigits.valueOf();\n\t}\n\n\t// Navigation\n\tif (!navigationInfo) {\n\t\t// No navigationInfo was found in the KPI annotation --> try the outbound navigation from the manifest\n\t\tif (kpiConfig.detailNavigation) {\n\t\t\tnavigationInfo = {\n\t\t\t\toutboundNavigation: kpiConfig.detailNavigation\n\t\t\t};\n\t\t} else {\n\t\t\t// No outbound navigation in the manifest --> try the semantic object on the Datapoint value\n\t\t\tnavigationInfo = getNavigationInfoFromProperty(datapointProperty);\n\t\t}\n\t}\n\tif (navigationInfo) {\n\t\tkpiDef.navigation = navigationInfo;\n\t}\n\n\tupdateCurrency(datapointAnnotation, kpiDef);\n\tupdateCriticality(datapointAnnotation, aggregationHelper, kpiDef);\n\tupdateTrend(datapointAnnotation, aggregationHelper, kpiDef);\n\tupdateTarget(datapointAnnotation, aggregationHelper, kpiDef);\n\n\treturn kpiDef;\n}\n\nfunction createKPIDefinition(\n\tkpiName: string,\n\tkpiConfig: KPIConfiguration,\n\tconverterContext: ConverterContext<PageContextPathTarget>\n): KPIDefinition | undefined {\n\tif (isCustomKPIConfiguration(kpiConfig)) {\n\t\treturn {\n\t\t\ttype: \"Custom\",\n\t\t\tkey: kpiName,\n\t\t\ttemplate: kpiConfig.template\n\t\t};\n\t} else {\n\t\treturn createAnalyticalKPIDefinition(converterContext, kpiConfig, kpiName);\n\t}\n}\n\n/**\n * Creates the KPI definitions from the manifest and the annotations.\n * @param converterContext The converter context for the page\n * @returns Returns an array of KPI definitions\n */\nexport function getKPIDefinitions(converterContext: ConverterContext<PageContextPathTarget>): KPIDefinition[] {\n\tconst kpiConfigs = converterContext.getManifestWrapper().getKPIConfiguration(),\n\t\tkpiDefs: KPIDefinition[] = [];\n\n\tObject.keys(kpiConfigs).forEach((kpiName) => {\n\t\tconst oDef = createKPIDefinition(kpiName, kpiConfigs[kpiName], converterContext);\n\t\tif (oDef) {\n\t\t\tkpiDefs.push(oDef);\n\t\t}\n\t});\n\n\treturn kpiDefs;\n}\n"],"mappings":"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","ignoreList":[]}