{"version":3,"names":["getTableActions","lineItemAnnotation","visualizationPath","converterContext","standardActions","navigationSettings","isCollaborationEnabled","ModelHelper","isCollaborationDraftSupportedFromConverterContext","tableActions","getTableAnnotationActions","manifestActions","getActionsFromManifest","getManifestControlConfiguration","actions","copyActions","filter","a","type","ActionType","Copy","annotationActions","annotationAndStandardActions","create","delete","massEdit","insights","creationRow","cut","copy","paste","moveUp","moveDown","action","undefined","manifestAction","Object","values","Default","Menu","position","anchor","StandardActionKeys","Create","placement","Placement","Before","manifestActionEntries","entries","standardManifestActions","fromEntries","_ref","key","startsWith","nonStandardManifestActions","_ref2","actionOverwriteConfig","isNavigable","OverrideType","overwrite","enableOnSelect","enableAutoScroll","enabled","visible","defaultValuesExtensionFunction","command","menu","priority","group","annotationMenuActionItems","getAnnotationMenuActionItems","matchingManifestActions","getMatchingManifestAction","overwrittenMenuActionItems","insertCustomElements","prepareMenuActions","removeDuplicateActions","getVisibilityEnablementMenuActions","addCollaborationCondition","commandActions","_exports","getContextDefiningPropertiesFromAggregationAnnotation","aggregationHelper","customAggregateAnnotations","getCustomAggregateDefinitions","customAggregatedefinitions","forEach","annotation","aggregatedProperty","_entityType","entityProperties","find","property","name","qualifier","contextDefiningProperties","annotations","Aggregation","ContextDefiningProperties","map","ctxDefProperty","value","getExtensionInfoFromEntityType","entityType","tableColumns","AggregationHelper","isAnalyticsSupported","currencyOrUnitProperties","Set","column","tableColumn","unit","targetUnitProperty","prop","add","relativePath","contextDefiningPropertiesFromAggregation","result","propertyInfos","rawContextDefiningProperties","fromGroupableProperty","isPropertyGroupable","has","contextDefiningPropertyName","foundColumn","findColumnByPath","push","length","additionalProperties","updateTableVisualizationForType","tableVisualization","presentationVariantAnnotation","control","aggregationData","columns","enableAnalytics","enable$select","enable$$getKeepAliveContext","analyticsExtensions","_updatePropertyInfosWithAggregatesDefinitions","allowedTransformations","getAllowedTransformations","enableBasicSearch","includes","groupConditions","getGroupConditions","aggregateConditions","getAggregateConditions","Log","error","changeSiblingForRootsSupported","Hierarchy","hierarchyQualifier","ChangeSiblingForRootsSupported","allowDropBetweenNodes","ChangeNextSiblingAction","isObjectPathDraftSupported","getDataModelObjectPath","requestAtLeast","analyticalConfiguration","aggregationOnLeafLevel","isDraftRoot","getEntitySet","getManifestWrapper","isFclEnabled","enableUploadPlugin","streamProperty","getAnnotationEntityType","UI","MediaResource","Stream","$target","uploadAction","uploadTable","stream","fileName","Core","ContentDisposition","Filename","path","fileNameMaxLength","maxLength","acceptableMediaTypes","AcceptableMediaTypes","visibleActions","getTemplateType","TemplateType","ListReport","isSticky","every","disableOwnRequestOnMVF","createRequestedProperties","lineItem","operationAvailable","selectedFields","pushField","fieldName","origin","indexOf","pushFieldList","fields","field","operationAvailableProperties","split","validProperties","propName","resolvePath","semanticKeys","Common","SemanticKey","semanticKey","capabilitiesAnnotation","Capabilities","alternateAndSecondaryKeys","getAlternateAndSecondaryKeys","RequestAtLeast","propertyPath","getNavigationAvailableFieldsFromLineItem","DeleteRestrictions","Deletable","UpdateRestrictions","Updatable","record","$Type","Inline","Determining","isPathAnnotationExpression","NavigationAvailable","getNavigationTargetPath","navigationPropertyPath","manifestWrapper","getNavigationConfiguration","navConfig","keys","dataModelPath","contextPath","getContextPath","navConfigForContextPath","targetEntitySet","startingEntitySet","getSemanticKeysAndTitleInfo","headerInfoTitlePath","HeaderInfo","Title","Value","semanticKeyAnnotations","headerInfoTypeName","TypeName","semanticKeyColumns","oColumn","createTableVisualization","params","isCondensedTableLayoutCompliant","selectionVariantAnnotation","tableManifestConfig","getTableManifestConfiguration","splitPath","navigationTargetPath","getTableColumns","operationAvailableMap","getOperationAvailableMap","semanticKeysAndHeaderInfoTitle","standardActionsConfiguration","getStandardActionsConfiguration","tableAnnotation","getTableAnnotationConfiguration","getOperationAvailableProperties","header","title","oVisualization","VisualizationType","Table","JSON","stringify","headerInfoTitle","headerVisible","handlePatchSent","updateLinkedProperties","createDefaultTableVisualization","isBlankTable","getColumnsFromEntityType","getEntityType","creationMode","ActionHelper","getCurrentEntitySetUpdatablePath","restrictions","getRestrictions","entitySet","updatable","isUpdatable","isOnlyDynamicOnCurrentEntity","isConstant","expression","navigationExpression","_type","updatableExpression","updatablePropertyPath","properties","actionName","propertyName","size","titleProperty","Array","from","join","getUIHiddenExpForActionsRequiringContext","currentEntityType","contextDataModelObjectPath","aUiHiddenPathExpressions","dataField","ActionTarget","isBound","sourceEntityType","RequiresContext","valueOf","Hidden","equal","getHiddenExpressionAtTableLevel","getPathFromActionAnnotation","source","constant","substring","splitPathForNavigationProperty","navigationPath","isNavigationProperty","targetObject","partner","pathInModel","slice","updateManifestActionAndTagIt","dataFieldId","some","actionKey","requiresSelection","hasBoundActionsAlwaysVisibleInToolBar","manifestActionId","generate","Action","SemanticObject","Actions","hasCustomActionsAlwaysVisibleInToolBar","customActions","reduce","menuAction","toString","getVisibleExpForCustomActionsRequiringContext","aVisiblePathExpressions","resolveBindingString","getCapabilityRestriction","isDeletable","isPathDeletable","isPathUpdatable","getSelectionMode","isEntitySet","targetCapabilities","deleteButtonVisibilityExpression","massEditVisibilityExpression","arguments","cutButtonVisibilityExpression","tableManifestSettings","tableType","tableSettings","selectionMode","SelectionMode","Multi","None","compileExpression","ifElse","ForceMulti","ForceSingle","Single","aHiddenBindingExpressions","aVisibleBindingExpressions","isParentDeletable","parentEntitySetDeletable","ObjectPage","bMassEditEnabled","Auto","buttonVisibilityExpression","or","and","IsEditable","editModebuttonVisibilityExpression","concat","copyDataField","getCopyAction","dataFieldIsCopyAction","annotationPath","getEntitySetBasedAnnotationPath","fullyQualifiedName","KeyHelper","generateKeyFromDataField","visibleExpression","text","Label","Library","getResourceBundleFor","getText","isDataFieldForActionAbstract","tableAction","getDataFieldAnnotationAction","isDataFieldForActionGroup","dataFieldGroup","DataFieldForAction","isAIOperation","isActionAIOperation","_useEnabledExpression","getEnabledForAnnotationAction","DataFieldForIntentBasedNavigation","id","isMenuAIOperation","getHighlightRowBinding","criticalityAnnotation","isDraftRootOrNode","targetEntityType","defaultHighlightRowDefinition","MessageType","getExpressionFromAnnotation","getMessageTypeFromCriticalityType","formatResult","Entity","HasActive","IsActive","IsInactive","tableFormatters","rowHighlighting","getExternalCreationBehavior","tableManifestConfiguration","creationDetails","outboundKey","outboundCreation","outbound","outboundDetail","getOutboundNavigationEntries","mode","CreationMode","External","warning","NewPage","_getCreationBehaviour","externalBehavior","originalTableSettings","navigationDetails","detail","CreationDialog","newAction","targetAnnotations","targetAnnotationsCommon","targetAnnotationsSession","Session","DraftRoot","NewAction","StickySessionSupported","CreationRow","Error","route","append","createAtEnd","navigateToTarget","info","_getRowConfigurationProperty","targetPath","aggregationOnLeafLevelenabled","navigationInfo","criticalityProperty","Criticality","rowNavigableExpression","navigationTarget","display","target","getDraftRoot","getDraftNode","checkEditable","routePath","recreateContext","availability","rowNavigatedExpression","navigatedRow","actionType","rowNavigated","rowCriticalityForInsights","criticalityExpressionForIntegrationCards","not","isNodeLevelNavigable","createTechnicalProperty","relatedAdditionalPropertyNameMap","columnExists","additionalProperty","technicalColumn","ColumnType","Annotation","label","dataType","sortable","isGroupable","isKey","exportSettings","caseSensitive","aggregatable","filterable","extension","technicallyGroupable","technicallyAggregatable","getP13nMode","variantManagement","getVariantManagement","modes","isAnalyticalTable","isResponsiveTable","personalization","sort","aggregate","VariantManagementType","Control","_isFilterBarHidden","isFilterBarHidden","hasMultipleVisualizations","AnalyticalListPage","getSortConditions","nonSortableProperties","getRestrictionsOnProperties","sortConditions","sorters","SortOrder","condition","conditionProperty","Property","infoName","convertPropertyPathsToInfoNames","descending","Descending","getInitialExpansionLevel","level","InitialExpansionLevel","paths","infoNames","propertyInfo","annotationColumn","currentPath","groupLevels","GroupBy","aGroupBy","propertyNameFromAnalyticsInfo","_getPropertyNameFromAnalyticsInfo","aggregatablePropertyDefinition","additionalPropertyInfos","additionalPropertyInfo","_updateForTextOnlyPropertiesWithCDP","textArrangement","textProperty","analyticsInfoPropertyNameForDesc","columnWithTextOnly","textOnlyColumn","extensionInfoMap","Total","aTotals","creationBehaviour","standardActionsContext","generateStandardActionsContext","getCutVisibility","getDeleteVisibility","massEditButtonVisibilityExpression","getMassEditVisibility","isInsertUpdateActionsTemplated","getInsertUpdateActionsTemplating","isDraftOrStickySupported","getStandardActionCut","getStandardActionCopy","getStandardActionCreate","getStandardActionDelete","getStandardActionPaste","getStandardActionMassEdit","getStandardActionInsights","getCreationRow","configuration","getStandardActionMoveUpDown","typeNamePlural","TypeNamePlural","pageManifestSettings","hasAbsolutePath","p13nMode","getTableID","threshold","getThreshold","isSearchable","isPathSearchable","apiId","entityName","entityTypeName","collection","getTargetObjectPath","row","displayMode","isInDisplayMode","searchable","initialExpansionLevel","requiredProperties","getRequiredProperties","MaxItems","targetNavigationPropertyPath","lastIndexOf","getSelectionVariantConfiguration","selectionVariantPath","resolvedTarget","getEntityTypeAnnotation","selection","propertyNames","SelectOptions","selectOption","PropertyName","Text","_getFullScreenBasedOnDevice","isIphone","enableFullScreen","getDiagnostics","addIssue","IssueCategory","Manifest","IssueSeverity","Low","IssueType","FULLSCREENMODE_NOT_ON_LISTREPORT","_getMultiSelectMode","multiSelectMode","selectAll","useIconTabBar","_getTableMode","isTemplateListReport","rowCountMode","rowCount","initialRowCount","_getCondensedTableLayout","_tableType","_tableSettings","condensedTableLayout","_getTableSelectionLimit","selectionLimit","_getTableInlineCreationRowCount","inlineCreationRowCount","_getEnableExport","enablePaste","enableExport","_getFrozenColumnCount","frozenColumnCount","getEnableColumnFreeze","disableColumnFreeze","_getWidthIncludingColumnHeader","widthIncludingColumnHeader","getFilterConfiguration","hideTableTitle","filters","quickVariantSelection","quickFilterPaths","filterPaths","quickFilters","showCounts","hiddenFilters","sEntityType","useEnabledExpression","OperationAvailable","overloadAction","sourceType","staticAction","parameters","isCollection","updateTreeTableManifestConfiguration","tableConfiguration","dataModelObjectPath","hierarchyParentNavigationPropertyPath","getHierarchyParentNavigationPropertyPath","nonUpdatableNavigationProperties","getNonUpdatableNavigationProperties","isHierarchyParentNodeUpdatable","isNodeMovable","getCustomFunctionInfo","isNodeCopyable","isMoveToPositionAllowed","isCopyToPositionAllowed","createEnablement","isCreateEnabled","nodeType","nodeTypeInfo","creationDialogFields","getFieldList","creationFields","createInPlace","lastDotIndex","moduleName","replace","methodName","additionalRequiredModules","getOptimisticBatchSettingsFromManifest","disableRequestCache","getMassEditSettings","defaultFieldConfiguration","visibleFields","ignoredFields","operationGroupingMode","OperationGroupingMode","Isolated","ChangeSet","enableMassEdit","customFragment","fromInline","fieldGroup","isAnnotationOfType","Data","isDataField","trim","checkCondensedLayout","_manifestWrapper","globalFEManifestSettings","getSapFeManifestConfiguration","defaultCreationMode","macros","table","InlineCreationRows","enableAutoColumnWidth","isPhone","disableCopyToClipboard","templateType","isCondensedLayoutCompliant","oFilterConfiguration","customValidationFunction","exportRequestSize","getTableType","tableRowMode","defaultScrollThreshold","defaultPopinLayout","popinLayout","inlineCreationRowsHiddenInEditMode","useTextForNoDataMessages","getUseTextForNoDataMessages","oConfiguration","hasDataStateIndicatorFilter","disableAddRowButtonForEmptyData","enablePastingOfComputedProperties","readOnly","exportFileName","exportSheetName","enableColumnFreeze","enableAddCardToInsights","showRowCount","getViewConfiguration","useCondensedTableLayout","isCompactType","modeForNoDataMessage","scrollThreshold","beforeRebindTable","selectionChange","rowPress"],"sourceRoot":".","sources":["Table.ts"],"sourcesContent":["import type { EntitySet, EntityType, PathAnnotationExpression, PropertyAnnotationValue, PropertyPath } from \"@sap-ux/vocabularies-types\";\nimport type { EntitySetAnnotations_Common } from \"@sap-ux/vocabularies-types/vocabularies/Common_Edm\";\nimport type { EntitySetAnnotations_Session } from \"@sap-ux/vocabularies-types/vocabularies/Session_Edm\";\nimport type {\n\tCriticality,\n\tDataFieldAbstractTypes,\n\tDataFieldForAction,\n\tDataFieldForActionAbstractTypes,\n\tDataFieldForActionTypes,\n\tDataFieldForIntentBasedNavigation,\n\tDataFieldTypes,\n\tFieldGroup,\n\tLineItem,\n\tPresentationVariantType,\n\tSelectOptionType,\n\tSelectionVariant,\n\tSelectionVariantType\n} from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport { UIAnnotationTerms, UIAnnotationTypes } from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport Log from \"sap/base/Log\";\nimport type { BindingToolkitExpression, CompiledBindingToolkitExpression } from \"sap/fe/base/BindingToolkit\";\nimport {\n\tand,\n\tcompileExpression,\n\tconstant,\n\tequal,\n\tformatResult,\n\tgetExpressionFromAnnotation,\n\tifElse,\n\tisConstant,\n\tnot,\n\tor,\n\tpathInModel,\n\tresolveBindingString\n} from \"sap/fe/base/BindingToolkit\";\nimport type { PageContextPathTarget } from \"sap/fe/core/converters/TemplateConverter\";\nimport {\n\tisDataField,\n\tisDataFieldForActionAbstract,\n\tisDataFieldForActionGroup,\n\tvisibleExpression\n} from \"sap/fe/core/converters/annotations/DataField\";\nimport type {\n\tAnnotationAction,\n\tAnnotationActionGroup,\n\tBaseAction,\n\tCombinedAction,\n\tCustomAction,\n\tOverrideTypeAction\n} from \"sap/fe/core/converters/controls/Common/Action\";\nimport {\n\taddCollaborationCondition,\n\tdataFieldIsCopyAction,\n\tgetActionsFromManifest,\n\tgetAnnotationMenuActionItems,\n\tgetCopyAction,\n\tgetEnabledForAnnotationAction,\n\tgetMatchingManifestAction,\n\tgetVisibilityEnablementMenuActions,\n\tisActionAIOperation,\n\tisMenuAIOperation,\n\tprepareMenuActions,\n\tremoveDuplicateActions\n} from \"sap/fe/core/converters/controls/Common/Action\";\nimport { OverrideType, Placement, insertCustomElements } from \"sap/fe/core/converters/helpers/ConfigurableObject\";\nimport { IssueCategory, IssueSeverity, IssueType } from \"sap/fe/core/converters/helpers/IssueManager\";\nimport { KeyHelper } from \"sap/fe/core/converters/helpers/Key\";\nimport { Entity, UI } from \"sap/fe/core/helpers/BindingHelper\";\nimport ModelHelper from \"sap/fe/core/helpers/ModelHelper\";\nimport { generate } from \"sap/fe/core/helpers/StableIdHelper\";\nimport { isAnnotationOfType, isNavigationProperty, isPathAnnotationExpression } from \"sap/fe/core/helpers/TypeGuards\";\nimport { criticalityExpressionForIntegrationCards } from \"sap/fe/core/templating/CriticalityFormatters\";\nimport {\n\tgetHierarchyParentNavigationPropertyPath,\n\tgetNonUpdatableNavigationProperties,\n\tgetTargetObjectPath,\n\tisPathDeletable,\n\tisPathSearchable,\n\tisPathUpdatable,\n\ttype DataModelObjectPath\n} from \"sap/fe/core/templating/DataModelPathHelper\";\nimport { getRestrictionsOnProperties } from \"sap/fe/core/templating/EntitySetHelper\";\n// eslint-disable-next-line @typescript-eslint/no-restricted-imports\nimport tableFormatters from \"sap/fe/macros/formatters/TableFormatter\";\n// eslint-disable-next-line @typescript-eslint/no-restricted-imports\nimport ActionHelper from \"sap/fe/macros/internal/helpers/ActionHelper\";\nimport Library from \"sap/ui/core/Lib\";\nimport MessageType from \"sap/ui/core/message/MessageType\";\nimport type FormContainer from \"sap/ui/layout/form/FormContainer\";\nimport type ConverterContext from \"../../ConverterContext\";\nimport type {\n\tManifestAction,\n\tNavigationSettingsConfiguration,\n\tNavigationTargetConfiguration,\n\tTableManifestConfiguration,\n\tTableManifestSettingsConfiguration\n} from \"../../ManifestSettings\";\nimport {\n\tActionType,\n\tCreationMode,\n\tOperationGroupingMode,\n\tSelectionMode,\n\tTemplateType,\n\tVariantManagementType,\n\tVisualizationType\n} from \"../../ManifestSettings\";\nimport type ManifestWrapper from \"../../ManifestWrapper\";\nimport { AggregationHelper } from \"../../helpers/Aggregation\";\nimport { getTableID } from \"../../helpers/ID\";\nimport { getMessageTypeFromCriticalityType } from \"./Criticality\";\nimport {\n\tColumnType,\n\tfindColumnByPath,\n\tgetColumnsFromEntityType,\n\tgetRequiredProperties,\n\tgetTableColumns,\n\tupdateLinkedProperties,\n\ttype AnnotationTableColumn,\n\ttype ExtensionForAnalytics,\n\ttype TableColumn\n} from \"./table/Columns\";\nimport type { StandardAction } from \"./table/StandardActions\";\nimport {\n\tStandardActionKeys,\n\tgenerateStandardActionsContext,\n\tgetCreationRow,\n\tgetCutVisibility,\n\tgetDeleteVisibility,\n\tgetInsertUpdateActionsTemplating,\n\tgetMassEditVisibility,\n\tgetRestrictions,\n\tgetStandardActionCopy,\n\tgetStandardActionCreate,\n\tgetStandardActionCut,\n\tgetStandardActionDelete,\n\tgetStandardActionInsights,\n\tgetStandardActionMassEdit,\n\tgetStandardActionMoveUpDown,\n\tgetStandardActionPaste,\n\tisDraftOrStickySupported,\n\tisInDisplayMode\n} from \"./table/StandardActions\";\n\ntype UploadTableSettings = {\n\tstream: string;\n\tfileName?: string;\n\tfileNameMaxLength?: int;\n\tacceptableMediaTypes?: string[];\n\tmaxLength?: int;\n\tuploadAction?: StandardAction;\n};\n\ntype RowNavigationInfo =\n\t| {\n\t\t\ttype: \"Outbound\";\n\t\t\tnavigationTarget: string;\n\t\t\tnavigationInEditMode?: boolean;\n\t  }\n\t| {\n\t\t\ttype: \"Navigation\";\n\t\t\ttargetPath: string;\n\t\t\tcheckEditable: boolean;\n\t\t\trecreateContext: boolean;\n\t\t\troutePath: string;\n\t\t\tnavigationInEditMode?: boolean;\n\t  };\n\ntype RowConfiguration = {\n\tactionType?: string;\n\tnavigationInfo?: RowNavigationInfo;\n\trowHighlighting: CompiledBindingToolkitExpression;\n\trowNavigated: CompiledBindingToolkitExpression;\n\trowCriticalityForInsights?: CompiledBindingToolkitExpression;\n\tvisible?: CompiledBindingToolkitExpression;\n};\n\nexport type MassEditTableConfiguration = {\n\tenabled: boolean;\n\tvisibleFields: string[];\n\tignoredFields: string[];\n\toperationGroupingMode: OperationGroupingMode;\n\tcustomFragment?: string | FormContainer;\n\tfromInline?: boolean;\n};\n\ntype TableSortConditions = {\n\tsorters: {\n\t\tname: string;\n\t\tdescending: boolean;\n\t}[];\n};\n\ntype TableGroupConditions = {\n\tgroupLevels: { name: string }[];\n};\n\ntype TableAggregateConditions = Record<string, object>;\n\ntype TableP13nMode = \"Aggregate\" | \"Column\" | \"Filter\" | \"Group\" | \"Sort\";\n\nexport type AnalyticalConfiguration = {\n\taggregationOnLeafLevel?: boolean;\n};\n\nexport type TableAnnotationConfiguration = {\n\tcollection: string;\n\tvariantManagement: VariantManagementType;\n\tfilterId?: string;\n\tid: string;\n\tapiId: string;\n\tnavigationPath: string;\n\tp13nMode?: TableP13nMode[];\n\trow?: RowConfiguration;\n\tselectionMode: string | undefined;\n\tisInsertUpdateActionsTemplated: boolean;\n\tupdatablePropertyPath: string;\n\tdisplayMode?: boolean;\n\tthreshold: number;\n\tentityName: string;\n\tentityTypeName: string;\n\tsortConditions?: TableSortConditions;\n\tgroupConditions?: TableGroupConditions;\n\taggregateConditions?: TableAggregateConditions;\n\tinitialExpansionLevel?: number;\n\tallowDropBetweenNodes?: boolean;\n\tchangeSiblingForRootsSupported?: boolean;\n\t/** Create new entries */\n\tcreate: CreateBehavior | CreateBehaviorExternal;\n\ttitle: string | undefined;\n\tsearchable: boolean;\n\trequiredProperties?: string[];\n\tuploadTable?: UploadTableSettings;\n};\n/**\n * New entries are created within the app (default case)\n */\nexport type CreateBehavior = {\n\tmode: CreationMode;\n\tappend: boolean;\n\tnewAction?: string;\n\tnavigateToTarget?: string;\n};\n\nexport type ExternalMethodConfig = {\n\tmoduleName: string;\n\tmethodName: string;\n};\n/**\n * New entries are created by navigating to some target\n */\nexport type CreateBehaviorExternal = {\n\tmode: \"External\";\n\toutbound: string;\n\toutboundDetail: NavigationTargetConfiguration[\"outboundDetail\"];\n};\nexport type TableCapabilityRestriction = {\n\tisDeletable: boolean;\n\tisUpdatable: boolean;\n};\nexport type TableFiltersConfiguration = {\n\tpaths: {\n\t\tannotationPath: string;\n\t}[];\n\tshowCounts?: boolean;\n};\nexport type SelectionVariantConfiguration = {\n\tpropertyNames: string[];\n\ttext?: string;\n};\n\nexport type TableControlConfiguration = {\n\tdisableRequestCache?: boolean;\n\tcreateAtEnd: boolean;\n\tcreateInPlace?: boolean;\n\tcreationMode: CreationMode;\n\toutboundCreation?: string;\n\tdisableAddRowButtonForEmptyData: boolean;\n\tcustomValidationFunction: string | undefined;\n\tuseCondensedTableLayout: boolean;\n\tenableExport: boolean;\n\texportFileName?: string;\n\texportSheetName?: string;\n\tenablePastingOfComputedProperties?: boolean;\n\tfrozenColumnCount?: number;\n\tenableColumnFreeze?: boolean;\n\twidthIncludingColumnHeader?: boolean;\n\theader?: string;\n\theaderVisible?: boolean;\n\tfilters?: Partial<Record<\"quickFilters\" | \"hiddenFilters\", TableFiltersConfiguration>>;\n\ttype: TableType;\n\trowCountMode?: TableRowCountMode;\n\trowCount?: number;\n\tscrollThreshold?: number;\n\tthreshold?: number;\n\tpopinLayout?: PopinLayoutMode;\n\tselectAll?: boolean;\n\tselectionLimit: number;\n\tmultiSelectMode: string | undefined;\n\tenablePaste: boolean;\n\tignoredFields?: string;\n\treadOnly?: boolean;\n\tdisableCopyToClipboard?: boolean;\n\tenableFullScreen: boolean;\n\tshowRowCount: boolean;\n\tinlineCreationRowCount?: number;\n\tinlineCreationRowsHiddenInEditMode?: boolean;\n\tmassEdit: MassEditTableConfiguration;\n\tenableAutoColumnWidth: boolean;\n\thasDataStateIndicatorFilter: boolean;\n\tisCompactType?: boolean;\n\thierarchyQualifier?: string;\n\tisHierarchyParentNodeUpdatable?: boolean;\n\tenableAddCardToInsights?: boolean | undefined;\n\tcreationDialogFields?: string[];\n\tnodeType?: {\n\t\tpropertyName: string;\n\t\tvalues: { value: string; text: string; creationDialogFields?: string[] }[];\n\t};\n\tcreateEnablement?: ExternalMethodConfig;\n\tisNodeMovable?: ExternalMethodConfig;\n\tisNodeCopyable?: ExternalMethodConfig;\n\tisMoveToPositionAllowed?: ExternalMethodConfig;\n\tisCopyToPositionAllowed?: ExternalMethodConfig;\n\tselectionChange?: string;\n\tadditionalRequiredModules?: string[];\n\trowPress?: string;\n\tbeforeRebindTable?: string;\n\texportRequestSize?: number;\n\tenableUploadPlugin?: boolean;\n\tmodeForNoDataMessage?: string;\n\tanalyticalConfiguration?: AnalyticalConfiguration;\n};\nexport type TableType = \"GridTable\" | \"ResponsiveTable\" | \"AnalyticalTable\" | \"TreeTable\";\nexport type TableRowCountMode = \"Auto\" | \"Fixed\" | \"Interactive\";\nexport type PopinLayoutMode = \"Block\" | \"GridLarge\" | \"GridSmall\";\n\nexport type InternalExtensionForAnalytics = ExtensionForAnalytics & {\n\tfromGroupableProperty: boolean;\n\trelativePath: string;\n};\nexport type TableVisualization = {\n\ttype: VisualizationType.Table;\n\tannotation: TableAnnotationConfiguration;\n\tcontrol: TableControlConfiguration;\n\tcolumns: TableColumn[];\n\tactions: BaseAction[];\n\tcommandActions?: Record<string, CustomAction>;\n\tanalyticsExtensions?: Record<string, InternalExtensionForAnalytics>;\n\trequestAtLeast: RequestAtLeast;\n\tenableAnalytics?: boolean;\n\tenableBasicSearch?: boolean;\n\toperationAvailableMap: string;\n\toperationAvailableProperties: string;\n\theaderInfoTitle: string;\n\tsemanticKeys: string[];\n\theaderInfoTypeName: PropertyAnnotationValue<String> | undefined;\n\tenable$select: boolean;\n\tenable$$getKeepAliveContext: boolean;\n\tisInsightsEnabled?: boolean;\n\theader?: string;\n\theaderVisible?: boolean;\n\thandlePatchSent: boolean;\n\tdisableOwnRequestOnMVF?: boolean; // To disable the $$ownRequest on MultiValueFields list binding\n};\n\n/**\n * Returns an array of all standard, annotation-based, and manifest-based table actions.\n * @param lineItemAnnotation\n * @param visualizationPath\n * @param converterContext\n * @param standardActions\n * @param navigationSettings\n * @returns The complete table actions\n */\nexport function getTableActions(\n\tlineItemAnnotation: LineItem,\n\tvisualizationPath: string,\n\tconverterContext: ConverterContext<PageContextPathTarget>,\n\tstandardActions: StandardActionsConfiguration[\"standardActions\"],\n\tnavigationSettings?: NavigationSettingsConfiguration\n): CombinedAction {\n\t// 1. Get actions from annotations\n\tconst isCollaborationEnabled = ModelHelper.isCollaborationDraftSupportedFromConverterContext(converterContext);\n\n\tconst tableActions = getTableAnnotationActions(lineItemAnnotation, visualizationPath, converterContext);\n\t// 2. Get actions from manifest\n\tconst manifestActions = getActionsFromManifest(\n\t\tconverterContext.getManifestControlConfiguration<TableManifestConfiguration>(visualizationPath).actions as Record<\n\t\t\tstring,\n\t\t\tManifestAction\n\t\t>,\n\t\tconverterContext,\n\t\ttableActions.tableActions,\n\t\tnavigationSettings,\n\t\ttrue\n\t);\n\t// The \"Copy\" action always needs to be placed after the \"Create\" action, so we need to separate it\n\tconst copyActions = tableActions.tableActions.filter((a) => a.type === ActionType.Copy);\n\tconst annotationActions = tableActions.tableActions.filter((a) => a.type !== ActionType.Copy);\n\t// Combine standard, annotation, and custom actions together, respecting the fixed order of standard actions\n\tconst annotationAndStandardActions = (\n\t\t[\n\t\t\t...annotationActions,\n\t\t\tstandardActions.create,\n\t\t\t...copyActions,\n\t\t\tstandardActions.delete,\n\t\t\tstandardActions.massEdit,\n\t\t\tstandardActions.insights,\n\t\t\tstandardActions.creationRow, // Not templated as a button\n\t\t\tstandardActions.cut,\n\t\t\tstandardActions.copy,\n\t\t\tstandardActions.paste,\n\t\t\tstandardActions.moveUp,\n\t\t\tstandardActions.moveDown\n\t\t] as BaseAction[]\n\t).filter((action) => action !== undefined);\n\t// Anchor all non-anchored manifest custom actions/menus before the standard actions\n\tfor (const manifestAction of Object.values(manifestActions.actions)) {\n\t\tif ((manifestAction.type === ActionType.Default || manifestAction.type === ActionType.Menu) && !manifestAction.position?.anchor) {\n\t\t\tmanifestAction.position = {\n\t\t\t\tanchor: StandardActionKeys.Create,\n\t\t\t\tplacement: Placement.Before\n\t\t\t};\n\t\t}\n\t}\n\t// Insert twice to allow regular override for non-standard actions and positional override for standard actions\n\tconst manifestActionEntries = Object.entries(manifestActions.actions);\n\tconst standardManifestActions = Object.fromEntries(manifestActionEntries.filter(([key]) => key.startsWith(\"StandardAction::\")));\n\tconst nonStandardManifestActions = Object.fromEntries(manifestActionEntries.filter(([key]) => !standardManifestActions[key]));\n\tconst actionOverwriteConfig: OverrideTypeAction = {\n\t\tisNavigable: OverrideType.overwrite,\n\t\tenableOnSelect: OverrideType.overwrite,\n\t\tenableAutoScroll: OverrideType.overwrite,\n\t\tenabled: OverrideType.overwrite,\n\t\tvisible: OverrideType.overwrite,\n\t\tdefaultValuesExtensionFunction: OverrideType.overwrite,\n\t\tcommand: OverrideType.overwrite,\n\t\tposition: OverrideType.overwrite,\n\t\tmenu: OverrideType.overwrite,\n\t\tpriority: OverrideType.overwrite,\n\t\tgroup: OverrideType.overwrite\n\t};\n\t// 3. Get all annotation menu items\n\tconst annotationMenuActionItems = getAnnotationMenuActionItems(annotationActions);\n\t// 4. Find manifest actions which override any annotation menu items\n\tconst matchingManifestActions = getMatchingManifestAction(annotationMenuActionItems, manifestActions.actions);\n\t// 5. Get overridden annotation menu items\n\tconst overwrittenMenuActionItems = insertCustomElements(annotationMenuActionItems, matchingManifestActions, actionOverwriteConfig);\n\t// 6. Override all actions\n\tlet actions = insertCustomElements(annotationAndStandardActions, nonStandardManifestActions, actionOverwriteConfig) as CustomAction[];\n\tactions = insertCustomElements(actions, standardManifestActions, {\n\t\tposition: OverrideType.overwrite,\n\t\tpriority: OverrideType.overwrite,\n\t\tgroup: OverrideType.overwrite\n\t});\n\t// 7. Replace original menu items with their corresponding overridden menu items\n\tprepareMenuActions(actions, overwrittenMenuActionItems);\n\t// 8. Remove duplicate actions which are menu items\n\tactions = removeDuplicateActions(actions);\n\t// 9. Hide menus where all menu items are hidden\n\tactions = getVisibilityEnablementMenuActions(actions);\n\t// 10. Add the collaboration condition for actions other than navigation\n\tif (isCollaborationEnabled) {\n\t\taddCollaborationCondition(actions);\n\t}\n\n\treturn {\n\t\tactions: actions,\n\t\tcommandActions: manifestActions.commandActions\n\t};\n}\n\n//Returns the ContextDefiningProperties from the custom aggregate annotation or from the aggregation annotation on the property itself.\nfunction getContextDefiningPropertiesFromAggregationAnnotation(aggregationHelper: AggregationHelper): Record<string, string[]> {\n\tconst customAggregateAnnotations = aggregationHelper.getCustomAggregateDefinitions();\n\tconst customAggregatedefinitions: Record<string, string[]> = {};\n\tcustomAggregateAnnotations.forEach((annotation) => {\n\t\tconst aggregatedProperty = aggregationHelper._entityType.entityProperties.find((property) => {\n\t\t\treturn property.name === annotation.qualifier;\n\t\t});\n\t\tif (aggregatedProperty) {\n\t\t\tconst contextDefiningProperties =\n\t\t\t\tannotation.annotations?.Aggregation?.ContextDefiningProperties ??\n\t\t\t\taggregatedProperty.annotations.Aggregation?.ContextDefiningProperties;\n\t\t\tcustomAggregatedefinitions[aggregatedProperty.name] =\n\t\t\t\tcontextDefiningProperties?.map((ctxDefProperty) => ctxDefProperty.value) ?? [];\n\t\t}\n\t});\n\treturn customAggregatedefinitions;\n}\n\n/**\n * Retrieve the extension information for all aggregable properties .\n * @param entityType The target entity type.\n * @param tableColumns The array of columns for the entity type.\n * @param converterContext The converter context.\n * @returns The aggregate definitions from the entityType, or undefined if the entity doesn't support analytical queries.\n */\nexport const getExtensionInfoFromEntityType = function (\n\tentityType: EntityType,\n\ttableColumns: TableColumn[],\n\tconverterContext: ConverterContext<PageContextPathTarget>\n): Record<string, InternalExtensionForAnalytics> | undefined {\n\tconst aggregationHelper = new AggregationHelper(entityType, converterContext);\n\tif (!aggregationHelper.isAnalyticsSupported()) {\n\t\treturn undefined;\n\t}\n\t// Keep a set of all currency/unit properties, as we don't want to consider them as aggregates\n\t// They are aggregates for technical reasons (to manage multi-units situations) but it doesn't make sense from a user standpoint\n\tconst currencyOrUnitProperties = new Set();\n\ttableColumns.forEach((column) => {\n\t\tconst tableColumn = column as AnnotationTableColumn;\n\t\tif (tableColumn.unit) {\n\t\t\tconst targetUnitProperty = tableColumns.find((prop) => prop.name === tableColumn.unit) as AnnotationTableColumn;\n\t\t\tcurrencyOrUnitProperties.add(targetUnitProperty.relativePath);\n\t\t}\n\t});\n\tconst contextDefiningPropertiesFromAggregation = getContextDefiningPropertiesFromAggregationAnnotation(aggregationHelper);\n\tconst result: Record<string, InternalExtensionForAnalytics> = {};\n\ttableColumns.forEach((column) => {\n\t\tconst tableColumn = column as AnnotationTableColumn;\n\t\tconst property = entityType.entityProperties.find((prop) => prop.name === tableColumn.relativePath);\n\n\t\tif (tableColumn.propertyInfos !== undefined || !tableColumn.relativePath) {\n\t\t\t// Ignore complex columns\n\t\t\treturn;\n\t\t}\n\n\t\tlet rawContextDefiningProperties = contextDefiningPropertiesFromAggregation[tableColumn.relativePath] as string[] | undefined;\n\n\t\t// if there is no custom aggregate definition, and the property is groupable, then we can use the default context defining properties\n\t\tlet fromGroupableProperty = false;\n\t\tif (!rawContextDefiningProperties && property && !!aggregationHelper.isPropertyGroupable(property)) {\n\t\t\tfromGroupableProperty = true;\n\t\t\trawContextDefiningProperties = property.annotations.Aggregation?.ContextDefiningProperties?.map(\n\t\t\t\t(ctxDefProperty) => ctxDefProperty.value\n\t\t\t);\n\t\t}\n\n\t\tif (!rawContextDefiningProperties || currencyOrUnitProperties.has(tableColumn.relativePath)) {\n\t\t\t// Ignore aggregates corresponding to currencies or units of measure\n\t\t\treturn;\n\t\t}\n\n\t\tresult[tableColumn.name] = {\n\t\t\tfromGroupableProperty: fromGroupableProperty,\n\t\t\trelativePath: tableColumn.relativePath\n\t\t};\n\t\tconst contextDefiningProperties: string[] = [];\n\t\trawContextDefiningProperties.forEach((contextDefiningPropertyName) => {\n\t\t\t// Ignore context-defining properties corresponding to currencies or units of measure of aggregatable properties\n\t\t\t// (but this is allowed for groupable properties)\n\t\t\tif (!fromGroupableProperty && currencyOrUnitProperties.has(contextDefiningPropertyName)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst foundColumn = findColumnByPath(contextDefiningPropertyName, tableColumns);\n\t\t\tif (foundColumn) {\n\t\t\t\tcontextDefiningProperties.push(foundColumn.name);\n\t\t\t}\n\t\t});\n\t\tif (contextDefiningProperties.length) {\n\t\t\tresult[tableColumn.name].additionalProperties = contextDefiningProperties;\n\t\t}\n\t});\n\treturn result;\n};\n/**\n * Updates a table visualization for analytical use cases.\n * @param tableVisualization The visualization to be updated\n * @param entityType The entity type displayed in the table\n * @param converterContext The converter context\n * @param presentationVariantAnnotation The presentationVariant annotation (if any)\n */\nexport function updateTableVisualizationForType(\n\ttableVisualization: TableVisualization,\n\tentityType: EntityType,\n\tconverterContext: ConverterContext<PageContextPathTarget>,\n\tpresentationVariantAnnotation?: PresentationVariantType\n): void {\n\tif (tableVisualization.control.type === \"AnalyticalTable\") {\n\t\tconst aggregationData = getExtensionInfoFromEntityType(entityType, tableVisualization.columns, converterContext),\n\t\t\taggregationHelper = new AggregationHelper(entityType, converterContext);\n\t\tif (aggregationData) {\n\t\t\ttableVisualization.enableAnalytics = true;\n\t\t\ttableVisualization.enable$select = false;\n\t\t\ttableVisualization.enable$$getKeepAliveContext = false;\n\t\t\ttableVisualization.analyticsExtensions = aggregationData;\n\t\t\t_updatePropertyInfosWithAggregatesDefinitions(tableVisualization);\n\t\t\tconst allowedTransformations = aggregationHelper.getAllowedTransformations();\n\t\t\ttableVisualization.enableBasicSearch = allowedTransformations ? allowedTransformations.includes(\"search\") : true;\n\t\t\t// Add group and sort conditions from the presentation variant\n\t\t\ttableVisualization.annotation.groupConditions = getGroupConditions(\n\t\t\t\tpresentationVariantAnnotation,\n\t\t\t\ttableVisualization.columns,\n\t\t\t\ttableVisualization.control.type\n\t\t\t);\n\t\t\ttableVisualization.annotation.aggregateConditions = getAggregateConditions(\n\t\t\t\tpresentationVariantAnnotation,\n\t\t\t\ttableVisualization.columns,\n\t\t\t\taggregationData\n\t\t\t);\n\t\t} else {\n\t\t\tLog.error(`Aggregation not supported for this entity type: ${entityType.name}`);\n\t\t}\n\t\ttableVisualization.control.type = \"GridTable\"; // AnalyticalTable isn't a real type for the MDC:Table, so we always switch back to Grid\n\t} else if (tableVisualization.control.type === \"ResponsiveTable\") {\n\t\ttableVisualization.annotation.groupConditions = getGroupConditions(\n\t\t\tpresentationVariantAnnotation,\n\t\t\ttableVisualization.columns,\n\t\t\ttableVisualization.control.type\n\t\t);\n\t} else if (tableVisualization.control.type === \"TreeTable\") {\n\t\tconst aggregationHelper = new AggregationHelper(entityType, converterContext);\n\t\tconst allowedTransformations = aggregationHelper.getAllowedTransformations();\n\t\ttableVisualization.enableBasicSearch = allowedTransformations ? allowedTransformations.includes(\"search\") : true;\n\t\ttableVisualization.enable$$getKeepAliveContext = true;\n\t\ttableVisualization.annotation.changeSiblingForRootsSupported = (entityType?.annotations.Hierarchy?.[\n\t\t\t`RecursiveHierarchyActions#${tableVisualization.control.hierarchyQualifier ?? \"\"}`\n\t\t]?.ChangeSiblingForRootsSupported ?? true) as boolean;\n\n\t\ttableVisualization.annotation.allowDropBetweenNodes =\n\t\t\t!!entityType.annotations.Hierarchy?.[`RecursiveHierarchyActions#${tableVisualization.control.hierarchyQualifier ?? \"\"}`]\n\t\t\t\t?.ChangeNextSiblingAction;\n\t}\n\n\t// Some properties are always loaded because they are needed by our internal logic\n\t// - HasActiveEntity is needed for the row criticality expression\n\t// - HasDraftEntity is needed in LR with TreeTable and Analytical Table to navigate to the draft instance if there's one when clicking on the active instance\n\t// - HasDraftEntity and DraftAdministrativeData.InProcessByUser are needed in the LR for the delete logic\n\tif (ModelHelper.isObjectPathDraftSupported(converterContext.getDataModelObjectPath())) {\n\t\ttableVisualization.requestAtLeast[\"HasActiveEntity\"] = [\"draftKeys\"];\n\t\tif (tableVisualization.control.analyticalConfiguration?.aggregationOnLeafLevel) {\n\t\t\t// IsActiveEntity key is needed for navigation to the draft instance\n\t\t\ttableVisualization.requestAtLeast[\"IsActiveEntity\"] = [\"draftKeys\"];\n\t\t}\n\n\t\tif (ModelHelper.isDraftRoot(converterContext.getEntitySet())) {\n\t\t\ttableVisualization.requestAtLeast[\"HasDraftEntity\"] = [\"draftKeys\"];\n\t\t\tif (tableVisualization.enableAnalytics !== true && tableVisualization.control.type !== \"TreeTable\") {\n\t\t\t\t// We don't load DraftAdministrativeData for Analytical and Tree tables in LR because they display active instances only\n\t\t\t\t// (therefore no DraftAdministrativeData is available)\n\t\t\t\ttableVisualization.requestAtLeast[\"DraftAdministrativeData/InProcessByUser\"] = [\"draftKeys\"];\n\t\t\t\tif (\n\t\t\t\t\tModelHelper.isCollaborationDraftSupportedFromConverterContext(converterContext) &&\n\t\t\t\t\tconverterContext.getManifestWrapper().isFclEnabled()\n\t\t\t\t) {\n\t\t\t\t\ttableVisualization.requestAtLeast[\"DraftAdministrativeData/DraftAdministrativeUser\"] = [\"draftKeys\"];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tif (tableVisualization.control.enableUploadPlugin) {\n\t\tconst streamProperty = converterContext.getAnnotationEntityType().annotations?.UI?.MediaResource?.Stream?.$target;\n\t\tif (!streamProperty) {\n\t\t\tthrow \"UI.MediaResource annotation with Stream property missing\";\n\t\t}\n\n\t\t// the upload action is treated as the create action\n\t\tconst uploadAction = tableVisualization.actions.find((a) => a.key === StandardActionKeys.Create) as StandardAction;\n\n\t\ttableVisualization.annotation.uploadTable = {\n\t\t\tstream: streamProperty.name,\n\t\t\tfileName: (streamProperty.annotations.Core?.ContentDisposition?.Filename as PathAnnotationExpression<string> | undefined)?.path,\n\t\t\tfileNameMaxLength: streamProperty.annotations.Core?.ContentDisposition?.Filename?.$target?.maxLength,\n\t\t\tacceptableMediaTypes: streamProperty.annotations.Core?.AcceptableMediaTypes,\n\t\t\tmaxLength: streamProperty.maxLength,\n\t\t\tuploadAction: uploadAction\n\t\t};\n\t}\n\n\t// Performance optimization: in a ListReport, for a non-analytical table that is completely read-only (no edit draft/sticky, no actions),\n\t// the multi-value fields don't have their own request\n\tconst visibleActions = tableVisualization.actions.filter((action) => action.visible !== \"false\");\n\tif (\n\t\tconverterContext.getTemplateType() === TemplateType.ListReport &&\n\t\t!ModelHelper.isObjectPathDraftSupported(converterContext.getDataModelObjectPath()) &&\n\t\t!ModelHelper.isSticky(converterContext.getEntitySet()) &&\n\t\ttableVisualization.enableAnalytics !== true &&\n\t\tvisibleActions.every((action) => {\n\t\t\treturn action.key.startsWith(\"StandardAction::\");\n\t\t})\n\t) {\n\t\ttableVisualization.disableOwnRequestOnMVF = true;\n\t}\n}\n\ntype fieldOrigin =\n\t| \"semanticKey\"\n\t| \"restriction\"\n\t| \"secondaryKey\"\n\t| \"presentationVariant\"\n\t| \"navigation\"\n\t| \"operation\"\n\t| \"alternateAndSecondaryKeys\"\n\t| \"draftKeys\";\nexport type RequestAtLeast = Record<string, fieldOrigin[]>;\n\n/**\n * Creates and returns a select query with the selected fields from the parameters that were passed.\n * @param lineItem The LineItem we want the requested properties from.\n * @param converterContext The converter context.\n * @param operationAvailable A string containing the available operation, which we'll take the properties to add to the select query.\n * @param presentationVariantAnnotation The presentation variant annotation which we'll take the RequestAtLeast properties from.\n * @returns The 'select' query that has the selected fields from the parameters that were passed.\n */\nexport function createRequestedProperties(\n\tlineItem: LineItem,\n\tconverterContext: ConverterContext,\n\toperationAvailable?: string,\n\tpresentationVariantAnnotation?: PresentationVariantType\n): RequestAtLeast {\n\tconst entityType = converterContext.getAnnotationEntityType(lineItem);\n\tconst selectedFields: RequestAtLeast = {};\n\tfunction pushField(fieldName: string, origin: fieldOrigin): void {\n\t\tif (fieldName && fieldName.indexOf(\"/\") !== 0) {\n\t\t\t// Do not add singleton property (with absolute path) to $select\n\t\t\tif (!selectedFields[fieldName]) {\n\t\t\t\tselectedFields[fieldName] = [origin];\n\t\t\t} else {\n\t\t\t\tselectedFields[fieldName].push(origin);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction pushFieldList(fields: string[], origin: fieldOrigin): void {\n\t\tif (fields?.length) {\n\t\t\tfields.forEach((field) => pushField(field, origin));\n\t\t}\n\t}\n\n\tconst operationAvailableProperties = (operationAvailable || \"\").split(\",\");\n\tconst validProperties = operationAvailableProperties.filter(function (propName: string) {\n\t\treturn entityType.resolvePath(propName);\n\t});\n\tconst semanticKeys: string[] = (entityType.annotations.Common?.SemanticKey || []).map((semanticKey) => semanticKey.value);\n\tconst capabilitiesAnnotation = converterContext.getEntitySet()?.annotations?.Capabilities;\n\tconst alternateAndSecondaryKeys = ModelHelper.getAlternateAndSecondaryKeys(entityType, converterContext.getEntitySet() as EntitySet);\n\tif (presentationVariantAnnotation) {\n\t\tpushFieldList(presentationVariantAnnotation.RequestAtLeast?.map((propertyPath) => propertyPath.value), \"presentationVariant\");\n\t}\n\tpushFieldList(getNavigationAvailableFieldsFromLineItem(lineItem, entityType), \"navigation\");\n\tpushFieldList(validProperties, \"operation\");\n\tpushFieldList(semanticKeys, \"semanticKey\");\n\tpushFieldList(alternateAndSecondaryKeys, \"alternateAndSecondaryKeys\");\n\tif (capabilitiesAnnotation) {\n\t\tpushField((capabilitiesAnnotation.DeleteRestrictions?.Deletable as PathAnnotationExpression<boolean>)?.path, \"restriction\");\n\t\tpushField((capabilitiesAnnotation.UpdateRestrictions?.Updatable as PathAnnotationExpression<boolean>)?.path, \"restriction\");\n\t}\n\n\treturn selectedFields;\n}\n\n/**\n * This return the property that are available from the NavigationAvailable annotation on IBN Fields.\n * @param lineItem The line item annotation.\n * @param entityType The Entity Type.\n * @returns An array containing the properties name.\n */\nfunction getNavigationAvailableFieldsFromLineItem(lineItem: LineItem, entityType: EntityType): string[] {\n\tconst selectedFields: string[] = [];\n\tlineItem.forEach(function (record) {\n\t\tif (\n\t\t\trecord.$Type === UIAnnotationTypes.DataFieldForIntentBasedNavigation &&\n\t\t\t!record.Inline &&\n\t\t\t!record.Determining &&\n\t\t\tisPathAnnotationExpression(record.NavigationAvailable)\n\t\t) {\n\t\t\tconst path = (record.NavigationAvailable as unknown as { path: string }).path;\n\t\t\tif (entityType.resolvePath(path)) {\n\t\t\t\tselectedFields.push(path);\n\t\t\t}\n\t\t}\n\t});\n\treturn selectedFields;\n}\n\n/**\n * Get the navigation target path from manifest settings.\n * @param converterContext The converter context\n * @param navigationPropertyPath The navigation path to check in the manifest settings\n * @returns Navigation path from manifest settings\n */\nexport function getNavigationTargetPath(converterContext: ConverterContext<PageContextPathTarget>, navigationPropertyPath: string): string {\n\tconst manifestWrapper = converterContext.getManifestWrapper();\n\tif (navigationPropertyPath && manifestWrapper.getNavigationConfiguration(navigationPropertyPath)) {\n\t\tconst navConfig = manifestWrapper.getNavigationConfiguration(navigationPropertyPath);\n\t\tif (Object.keys(navConfig).length > 0) {\n\t\t\treturn navigationPropertyPath;\n\t\t}\n\t}\n\tconst dataModelPath = converterContext.getDataModelObjectPath();\n\tconst contextPath = converterContext.getContextPath();\n\tconst navConfigForContextPath = manifestWrapper.getNavigationConfiguration(contextPath);\n\tif (navConfigForContextPath && Object.keys(navConfigForContextPath).length > 0) {\n\t\treturn contextPath;\n\t}\n\treturn dataModelPath.targetEntitySet ? dataModelPath.targetEntitySet.name : dataModelPath.startingEntitySet.name;\n}\n\nfunction getSemanticKeysAndTitleInfo(converterContext: ConverterContext<PageContextPathTarget>): {\n\theaderInfoTitlePath: string;\n\tsemanticKeyColumns: string[];\n\theaderInfoTypeName: PropertyAnnotationValue<String> | undefined;\n} {\n\tconst headerInfoTitlePath = (converterContext.getAnnotationEntityType()?.annotations?.UI?.HeaderInfo?.Title as DataFieldTypes)?.Value\n\t\t?.path;\n\tconst semanticKeyAnnotations = converterContext.getAnnotationEntityType()?.annotations?.Common?.SemanticKey;\n\tconst headerInfoTypeName = converterContext?.getAnnotationEntityType()?.annotations?.UI?.HeaderInfo?.TypeName;\n\tconst semanticKeyColumns: string[] = [];\n\tif (semanticKeyAnnotations) {\n\t\tsemanticKeyAnnotations.forEach(function (oColumn) {\n\t\t\tsemanticKeyColumns.push(oColumn.value);\n\t\t});\n\t}\n\treturn { headerInfoTitlePath, semanticKeyColumns, headerInfoTypeName };\n}\nexport function createTableVisualization(\n\tlineItemAnnotation: LineItem,\n\tvisualizationPath: string,\n\tconverterContext: ConverterContext<PageContextPathTarget>,\n\tparams?: Partial<{\n\t\tpresentationVariantAnnotation: PresentationVariantType;\n\t\tselectionVariantAnnotation: SelectionVariantType;\n\t\tisCondensedTableLayoutCompliant: boolean;\n\t}>\n): TableVisualization {\n\tconst { presentationVariantAnnotation, isCondensedTableLayoutCompliant, selectionVariantAnnotation } = params ?? {};\n\tconst tableManifestConfig = getTableManifestConfiguration(\n\t\tlineItemAnnotation,\n\t\tvisualizationPath,\n\t\tconverterContext,\n\t\tisCondensedTableLayoutCompliant,\n\t\tselectionVariantAnnotation\n\t);\n\tconst { navigationPropertyPath } = splitPath(visualizationPath);\n\tconst navigationTargetPath = getNavigationTargetPath(converterContext, navigationPropertyPath);\n\tconst navigationSettings = converterContext.getManifestWrapper().getNavigationConfiguration(navigationTargetPath);\n\tconst columns = getTableColumns(lineItemAnnotation, tableManifestConfig.type, visualizationPath, converterContext);\n\tconst operationAvailableMap = getOperationAvailableMap(lineItemAnnotation, converterContext);\n\tconst semanticKeysAndHeaderInfoTitle = getSemanticKeysAndTitleInfo(converterContext);\n\tconst standardActionsConfiguration = getStandardActionsConfiguration(\n\t\tlineItemAnnotation,\n\t\tvisualizationPath,\n\t\tconverterContext,\n\t\ttableManifestConfig,\n\t\tnavigationSettings\n\t);\n\tconst tableAnnotation = getTableAnnotationConfiguration(\n\t\tlineItemAnnotation,\n\t\tvisualizationPath,\n\t\tconverterContext,\n\t\ttableManifestConfig,\n\t\tcolumns,\n\t\tnavigationSettings,\n\t\tstandardActionsConfiguration,\n\t\tpresentationVariantAnnotation\n\t);\n\tconst tableActions = getTableActions(\n\t\tlineItemAnnotation,\n\t\tvisualizationPath,\n\t\tconverterContext,\n\t\tstandardActionsConfiguration.standardActions,\n\t\tnavigationSettings\n\t);\n\tconst operationAvailable = getOperationAvailableProperties(operationAvailableMap, converterContext);\n\tlet header = tableManifestConfig.header;\n\theader ??= tableAnnotation.title === \"\" ? undefined : tableAnnotation.title;\n\tconst oVisualization: TableVisualization = {\n\t\ttype: VisualizationType.Table,\n\t\tannotation: tableAnnotation,\n\t\tcontrol: tableManifestConfig,\n\t\tactions: tableActions.actions,\n\t\tcommandActions: tableActions.commandActions,\n\t\tcolumns: columns,\n\t\toperationAvailableMap: JSON.stringify(operationAvailableMap),\n\t\toperationAvailableProperties: operationAvailable,\n\t\theaderInfoTitle: semanticKeysAndHeaderInfoTitle.headerInfoTitlePath,\n\t\tsemanticKeys: semanticKeysAndHeaderInfoTitle.semanticKeyColumns,\n\t\theaderInfoTypeName: semanticKeysAndHeaderInfoTitle.headerInfoTypeName,\n\t\tenable$select: true,\n\t\tenable$$getKeepAliveContext: true,\n\t\theader: header,\n\t\theaderVisible: tableManifestConfig.headerVisible,\n\t\trequestAtLeast: createRequestedProperties(lineItemAnnotation, converterContext, operationAvailable, presentationVariantAnnotation),\n\t\thandlePatchSent: converterContext.getManifestWrapper().getTemplateType() !== TemplateType.ListReport\n\t};\n\tupdateLinkedProperties(converterContext, columns);\n\tupdateTableVisualizationForType(\n\t\toVisualization,\n\t\tconverterContext.getAnnotationEntityType(lineItemAnnotation),\n\t\tconverterContext,\n\t\tpresentationVariantAnnotation\n\t);\n\treturn oVisualization;\n}\nexport function createDefaultTableVisualization(\n\tconverterContext: ConverterContext<PageContextPathTarget>,\n\tisBlankTable?: boolean\n): TableVisualization {\n\tconst tableManifestConfig = getTableManifestConfiguration(undefined, \"\", converterContext, false);\n\tconst columns = getColumnsFromEntityType(\n\t\t{},\n\t\tconverterContext.getEntityType(),\n\t\t[],\n\t\tconverterContext,\n\t\ttableManifestConfig.type,\n\t\ttableManifestConfig.creationMode,\n\t\t{}\n\t);\n\tconst operationAvailableMap = getOperationAvailableMap(undefined, converterContext);\n\tconst semanticKeysAndHeaderInfoTitle = getSemanticKeysAndTitleInfo(converterContext);\n\tconst navigationTargetPath = getNavigationTargetPath(converterContext, \"\");\n\tconst navigationSettings = converterContext.getManifestWrapper().getNavigationConfiguration(navigationTargetPath);\n\tconst standardActionsConfiguration = getStandardActionsConfiguration(\n\t\tundefined,\n\t\t\"\",\n\t\tconverterContext,\n\t\ttableManifestConfig,\n\t\tnavigationSettings\n\t);\n\tconst oVisualization: TableVisualization = {\n\t\ttype: VisualizationType.Table,\n\t\tannotation: getTableAnnotationConfiguration(\n\t\t\tundefined,\n\t\t\t\"\",\n\t\t\tconverterContext,\n\t\t\ttableManifestConfig,\n\t\t\tisBlankTable ? [] : columns,\n\t\t\tnavigationSettings,\n\t\t\tstandardActionsConfiguration\n\t\t),\n\t\tcontrol: tableManifestConfig,\n\t\tactions: [],\n\t\tcolumns: columns,\n\t\toperationAvailableMap: JSON.stringify(operationAvailableMap),\n\t\toperationAvailableProperties: getOperationAvailableProperties(operationAvailableMap, converterContext),\n\t\theaderInfoTitle: semanticKeysAndHeaderInfoTitle.headerInfoTitlePath,\n\t\tsemanticKeys: semanticKeysAndHeaderInfoTitle.semanticKeyColumns,\n\t\theaderInfoTypeName: semanticKeysAndHeaderInfoTitle.headerInfoTypeName,\n\t\tenable$select: true,\n\t\tenable$$getKeepAliveContext: true,\n\t\theader: tableManifestConfig.header,\n\t\theaderVisible: tableManifestConfig.headerVisible,\n\t\thandlePatchSent: converterContext.getManifestWrapper().getTemplateType() !== TemplateType.ListReport,\n\t\trequestAtLeast: {}\n\t};\n\tupdateLinkedProperties(converterContext, columns);\n\tupdateTableVisualizationForType(oVisualization, converterContext.getEntityType(), converterContext);\n\treturn oVisualization;\n}\n/**\n * Gets the map of Core.OperationAvailable property paths for all DataFieldForActions.\n * @param lineItemAnnotation The instance of the line item\n * @param converterContext The instance of the converter context\n * @returns The record containing all action names and their corresponding Core.OperationAvailable property paths\n */\nfunction getOperationAvailableMap(\n\tlineItemAnnotation: LineItem | undefined,\n\tconverterContext: ConverterContext<PageContextPathTarget>\n): Record<string, unknown> {\n\treturn ActionHelper.getOperationAvailableMap(lineItemAnnotation, \"table\", converterContext);\n}\n/**\n * Gets updatable propertyPath for the current entityset if valid.\n * @param converterContext The instance of the converter context\n * @returns The updatable property for the rows\n */\nfunction getCurrentEntitySetUpdatablePath(converterContext: ConverterContext<PageContextPathTarget>): string {\n\tconst restrictions = getRestrictions(converterContext);\n\tconst entitySet = converterContext.getEntitySet();\n\tconst updatable = restrictions.isUpdatable;\n\tconst isOnlyDynamicOnCurrentEntity = !isConstant(updatable.expression) && updatable.navigationExpression._type === \"Unresolvable\";\n\tconst updatableExpression = entitySet?.annotations.Capabilities?.UpdateRestrictions?.Updatable;\n\tconst updatablePropertyPath = isPathAnnotationExpression(updatableExpression) && updatableExpression.path;\n\treturn isOnlyDynamicOnCurrentEntity ? (updatablePropertyPath as string) : \"\";\n}\n/**\n * Method to retrieve all property paths assigned to the Core.OperationAvailable annotation.\n * @param operationAvailableMap The record consisting of actions and their Core.OperationAvailable property paths\n * @param converterContext The instance of the converter context\n * @returns The CSV string of all property paths associated with the Core.OperationAvailable annotation\n */\nfunction getOperationAvailableProperties(\n\toperationAvailableMap: Record<string, unknown>,\n\tconverterContext: ConverterContext<PageContextPathTarget>\n): string {\n\tconst properties = new Set();\n\tfor (const actionName in operationAvailableMap) {\n\t\tconst propertyName = operationAvailableMap[actionName];\n\t\tif (propertyName === null) {\n\t\t\t// Annotation configured with explicit 'null' (action advertisement relevant)\n\t\t\tproperties.add(actionName);\n\t\t} else if (typeof propertyName === \"string\") {\n\t\t\t// Add property paths and not Constant values.\n\t\t\tproperties.add(propertyName);\n\t\t}\n\t}\n\tif (properties.size) {\n\t\t// Some actions have an operation available based on property --> we need to load the HeaderInfo.Title property\n\t\t// so that the dialog on partial actions is displayed properly (BCP 2180271425)\n\t\tconst entityType = converterContext.getEntityType();\n\t\tconst titleProperty = (entityType.annotations?.UI?.HeaderInfo?.Title as DataFieldTypes)?.Value?.path;\n\t\tif (titleProperty) {\n\t\t\tproperties.add(titleProperty);\n\t\t}\n\t}\n\treturn Array.from(properties).join(\",\");\n}\n/**\n * Iterates over the DataFieldForAction and DataFieldForIntentBasedNavigation of a line item and\n * returns all the UI.Hidden annotation expressions.\n * @param lineItemAnnotation Collection of data fields used for representation in a table or list\n * @param currentEntityType Current entity type\n * @param contextDataModelObjectPath Object path of the data model\n * @returns All the `UI.Hidden` path expressions found in the relevant actions\n */\nfunction getUIHiddenExpForActionsRequiringContext(\n\tlineItemAnnotation: LineItem,\n\tcurrentEntityType: EntityType,\n\tcontextDataModelObjectPath: DataModelObjectPath<PageContextPathTarget>\n): BindingToolkitExpression<boolean>[] {\n\tconst aUiHiddenPathExpressions: BindingToolkitExpression<boolean>[] = [];\n\tlineItemAnnotation.forEach((dataField) => {\n\t\t// Check if the lineItem context is the same as that of the action:\n\t\tif (\n\t\t\t(dataField.$Type === UIAnnotationTypes.DataFieldForAction &&\n\t\t\t\tdataField?.ActionTarget?.isBound &&\n\t\t\t\tcurrentEntityType === dataField?.ActionTarget.sourceEntityType) ||\n\t\t\t(dataField.$Type === UIAnnotationTypes.DataFieldForIntentBasedNavigation &&\n\t\t\t\tdataField.RequiresContext &&\n\t\t\t\tdataField?.Inline?.valueOf() !== true)\n\t\t) {\n\t\t\tif (typeof dataField.annotations?.UI?.Hidden?.valueOf() === \"object\") {\n\t\t\t\taUiHiddenPathExpressions.push(equal(getHiddenExpressionAtTableLevel(dataField, contextDataModelObjectPath), false));\n\t\t\t}\n\t\t}\n\t});\n\treturn aUiHiddenPathExpressions;\n}\n/**\n * This method is used to get the binding expression of the path of a DataField.\n * @param expression CompiledBindingToolkitExpression\n * @returns The binding expression\n */\nfunction getPathFromActionAnnotation(expression: CompiledBindingToolkitExpression): CompiledBindingToolkitExpression {\n\tlet path: CompiledBindingToolkitExpression;\n\tif (isPathAnnotationExpression(expression)) {\n\t\tpath = expression.path;\n\t} else {\n\t\tpath = expression;\n\t}\n\treturn path;\n}\n/**\n * This method is used to change the context currently referenced by this binding by removing the last navigation property.\n *\n * It is used (specifically in this case), to transform a binding made for a NavProp context /MainObject/NavProp1/NavProp2,\n * into a binding on the previous context /MainObject/NavProp1.\n * @param source DataFieldForAction | DataFieldForIntentBasedNavigation | CustomAction\n * @param contextDataModelObjectPath DataModelObjectPath\n * @returns The binding expression\n */\nfunction getHiddenExpressionAtTableLevel(\n\tsource: DataFieldAbstractTypes,\n\tcontextDataModelObjectPath: DataModelObjectPath<PageContextPathTarget>\n): BindingToolkitExpression<unknown> {\n\tconst expression = source.annotations?.UI?.Hidden as CompiledBindingToolkitExpression;\n\tlet path = getPathFromActionAnnotation(expression);\n\tif (typeof path === \"object\") {\n\t\treturn constant(false);\n\t} else if (typeof path === \"string\") {\n\t\tif (\"visible\" in source) {\n\t\t\tpath = path.substring(1, path.length - 1);\n\t\t}\n\t\tif (path.indexOf(\"/\") > 0) {\n\t\t\t//check if the navigation property is correct:\n\t\t\tconst splitPathForNavigationProperty = path.split(\"/\");\n\t\t\tconst navigationPath = splitPathForNavigationProperty[0];\n\t\t\tif (\n\t\t\t\tisNavigationProperty(contextDataModelObjectPath?.targetObject) &&\n\t\t\t\tcontextDataModelObjectPath.targetObject.partner === navigationPath\n\t\t\t) {\n\t\t\t\treturn pathInModel(splitPathForNavigationProperty.slice(1).join(\"/\"));\n\t\t\t} else {\n\t\t\t\treturn constant(true);\n\t\t\t}\n\t\t} else {\n\t\t\treturn constant(false);\n\t\t}\n\t}\n\treturn constant(true);\n}\n/**\n * Loop through the manifest actions and check the following:\n *\n * If the data field is also referenced as a custom action.\n * If the underlying manifest action is either a bound action or has the 'RequiresContext' property set to true.\n *\n * If so, the 'requiresSelection' property is forced to 'true' in the manifest.\n * @param dataFieldId Id of the DataField evaluated\n * @param dataField DataField evaluated\n * @param manifestActions The actions defined in the manifest\n * @returns `true` if the DataField is found among the manifest actions\n */\nfunction updateManifestActionAndTagIt(\n\tdataFieldId: string,\n\tdataField: DataFieldForAction | DataFieldForIntentBasedNavigation,\n\tmanifestActions: Record<string, CustomAction>\n): boolean {\n\treturn Object.keys(manifestActions).some((actionKey) => {\n\t\tif (actionKey === dataFieldId) {\n\t\t\tif (\n\t\t\t\t(dataField as DataFieldForAction)?.ActionTarget?.isBound ||\n\t\t\t\t(dataField as DataFieldForIntentBasedNavigation)?.RequiresContext\n\t\t\t) {\n\t\t\t\tmanifestActions[dataFieldId].requiresSelection = true;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t});\n}\n/**\n * Loop through the DataFieldForAction and DataFieldForIntentBasedNavigation of a line item and\n * check the following:\n * If at least one of them is always visible in the table toolbar and requires a context\n * If an action is also defined in the manifest, it is set aside and will be considered\n * when going through the manifest.\n * @param lineItemAnnotation Collection of data fields for representation in a table or list\n * @param manifestActions The actions defined in the manifest\n * @param currentEntityType Current Entity Type\n * @returns `true` if there is at least 1 action that meets the criteria\n */\nfunction hasBoundActionsAlwaysVisibleInToolBar(\n\tlineItemAnnotation: LineItem | DataFieldForActionAbstractTypes[],\n\tmanifestActions: Record<string, CustomAction>,\n\tcurrentEntityType: EntityType\n): boolean {\n\treturn lineItemAnnotation.some((dataField) => {\n\t\tif (\n\t\t\t(dataField.$Type === UIAnnotationTypes.DataFieldForAction ||\n\t\t\t\tdataField.$Type === UIAnnotationTypes.DataFieldForIntentBasedNavigation) &&\n\t\t\tdataField?.Inline?.valueOf() !== true &&\n\t\t\t(dataField.annotations?.UI?.Hidden?.valueOf() === false || dataField.annotations?.UI?.Hidden?.valueOf() === undefined)\n\t\t) {\n\t\t\tif (dataField.$Type === UIAnnotationTypes.DataFieldForAction) {\n\t\t\t\tconst manifestActionId = generate([\"DataFieldForAction\", dataField.Action as string]);\n\t\t\t\t// if the DataFieldForActon from annotation also exists in the manifest, its visibility will be evaluated later on\n\t\t\t\tif (updateManifestActionAndTagIt(manifestActionId, dataField, manifestActions)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\t// Check if the lineItem context is the same as that of the action:\n\t\t\t\treturn dataField?.ActionTarget?.isBound && currentEntityType === dataField?.ActionTarget.sourceEntityType;\n\t\t\t} else if (dataField.$Type === UIAnnotationTypes.DataFieldForIntentBasedNavigation) {\n\t\t\t\t// if the DataFieldForIntentBasedNavigation from annotation also exists in the manifest, its visibility will be evaluated later on\n\t\t\t\tif (\n\t\t\t\t\tupdateManifestActionAndTagIt(\n\t\t\t\t\t\t`DataFieldForIntentBasedNavigation::${dataField.SemanticObject}::${dataField.Action}`,\n\t\t\t\t\t\tdataField,\n\t\t\t\t\t\tmanifestActions\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\treturn dataField.RequiresContext;\n\t\t\t}\n\t\t} else if (\n\t\t\tdataField.$Type === UIAnnotationTypes.DataFieldForActionGroup &&\n\t\t\t(dataField.annotations?.UI?.Hidden?.valueOf() === false || dataField.annotations?.UI?.Hidden?.valueOf() === undefined)\n\t\t) {\n\t\t\treturn hasBoundActionsAlwaysVisibleInToolBar(dataField.Actions, manifestActions, currentEntityType);\n\t\t}\n\t\treturn false;\n\t});\n}\n/**\n * Checks if a custom action that requires a context is always visible in the toolbar.\n * @param manifestActions The actions defined in the manifest\n * @returns `true` if there is at least 1 action that meets the criteria\n */\nfunction hasCustomActionsAlwaysVisibleInToolBar(manifestActions: Record<string, CustomAction>): boolean {\n\tconst customActions = Object.keys(manifestActions).reduce((actions: CustomAction[], actionKey) => {\n\t\tconst action = manifestActions[actionKey];\n\t\tif (!action.menu) {\n\t\t\t//simple custom action\n\t\t\tactions.push(action);\n\t\t} else {\n\t\t\t// grouped actions\n\t\t\tactions = [...actions, ...(action.menu.filter((menuAction) => typeof menuAction !== \"string\") as CustomAction[])];\n\t\t}\n\t\treturn actions;\n\t}, []);\n\treturn !!customActions.find(\n\t\t(action) => action.requiresSelection && (action.visible === undefined || action.visible?.toString() === \"true\")\n\t);\n}\n/**\n * Iterates over the custom actions (with key requiresSelection) declared in the manifest for the current line item and returns all the\n * visible key values as an expression.\n * @param manifestActions The actions defined in the manifest\n * @returns Array<Expression<boolean>> All the visible path expressions of the actions that meet the criteria\n */\nfunction getVisibleExpForCustomActionsRequiringContext(manifestActions: Record<string, CustomAction>): BindingToolkitExpression<boolean>[] {\n\tconst aVisiblePathExpressions: BindingToolkitExpression<boolean>[] = [];\n\tif (manifestActions) {\n\t\tObject.keys(manifestActions).forEach((actionKey) => {\n\t\t\tconst action = manifestActions[actionKey];\n\t\t\tif (action.requiresSelection === true && action.visible !== undefined) {\n\t\t\t\tif (typeof action.visible === \"string\") {\n\t\t\t\t\t/*The final aim would be to check if the path expression depends on the parent context\n\t\t\t\t\tand considers only those expressions for the expression evaluation,\n\t\t\t\t\tbut currently not possible from the manifest as the visible key is bound on the parent entity.\n\t\t\t\t\tTricky to differentiate the path as it's done for the Hidden annotation.\n\t\t\t\t\tFor the time being we consider all the paths of the manifest*/\n\t\t\t\t\taVisiblePathExpressions.push(resolveBindingString(action?.visible?.valueOf(), \"boolean\"));\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\treturn aVisiblePathExpressions;\n}\n/**\n * Evaluate if the path is statically deletable or updatable.\n * @param converterContext\n * @returns The table capabilities\n */\nexport function getCapabilityRestriction(converterContext: ConverterContext<PageContextPathTarget>): TableCapabilityRestriction {\n\tconst isDeletable = isPathDeletable(converterContext.getDataModelObjectPath());\n\tconst isUpdatable = isPathUpdatable(converterContext.getDataModelObjectPath());\n\treturn {\n\t\tisDeletable: !(isConstant(isDeletable) && isDeletable.value === false),\n\t\tisUpdatable: !(isConstant(isUpdatable) && isUpdatable.value === false)\n\t};\n}\nexport function getSelectionMode(\n\tlineItemAnnotation: LineItem | undefined,\n\tvisualizationPath: string,\n\tconverterContext: ConverterContext<PageContextPathTarget>,\n\tisEntitySet: boolean,\n\ttargetCapabilities: TableCapabilityRestriction,\n\tdeleteButtonVisibilityExpression?: BindingToolkitExpression<boolean>,\n\tmassEditVisibilityExpression: BindingToolkitExpression<boolean> = constant(false),\n\tcutButtonVisibilityExpression: BindingToolkitExpression<boolean> = constant(false)\n): string | undefined {\n\tconst tableManifestSettings = converterContext.getManifestControlConfiguration<TableManifestConfiguration>(visualizationPath);\n\tconst tableType = tableManifestSettings.tableSettings?.type;\n\tlet selectionMode = tableManifestSettings.tableSettings?.selectionMode;\n\n\t// The collapse/Expand action of a tree table is a bound action, as a result, a tree table should always have a selection mode to \"Multi\" when no selectionMode has been set in the manifest\n\tif (tableType === \"TreeTable\" && !selectionMode) {\n\t\treturn SelectionMode.Multi;\n\t}\n\n\t// If the selection mode is forced to 'None' in the manifest/macro table parameters, we keep it unless here is a delete button\n\tif (!lineItemAnnotation || selectionMode === SelectionMode.None) {\n\t\tif (targetCapabilities.isDeletable && deleteButtonVisibilityExpression) {\n\t\t\treturn compileExpression(ifElse(deleteButtonVisibilityExpression, constant(SelectionMode.Multi), constant(SelectionMode.None)));\n\t\t}\n\t\treturn SelectionMode.None;\n\t}\n\tif (selectionMode === SelectionMode.ForceMulti) {\n\t\treturn SelectionMode.Multi;\n\t} else if (selectionMode === SelectionMode.ForceSingle) {\n\t\treturn SelectionMode.Single;\n\t}\n\tlet aHiddenBindingExpressions: BindingToolkitExpression<boolean>[] = [],\n\t\taVisibleBindingExpressions: BindingToolkitExpression<boolean>[] = [];\n\tconst manifestActions = getActionsFromManifest(\n\t\tconverterContext.getManifestControlConfiguration<TableManifestConfiguration>(visualizationPath).actions,\n\t\tconverterContext,\n\t\t[],\n\t\tundefined,\n\t\tfalse\n\t);\n\tlet isParentDeletable, parentEntitySetDeletable;\n\tif (converterContext.getTemplateType() === TemplateType.ObjectPage) {\n\t\tisParentDeletable = isPathDeletable(converterContext.getDataModelObjectPath());\n\t\tparentEntitySetDeletable = isParentDeletable ? compileExpression(isParentDeletable, true) : isParentDeletable;\n\t}\n\tconst bMassEditEnabled: boolean = !isConstant(massEditVisibilityExpression) || massEditVisibilityExpression.value !== false;\n\tif (!selectionMode || selectionMode === SelectionMode.Auto) {\n\t\tselectionMode = SelectionMode.Multi;\n\t}\n\tif (bMassEditEnabled) {\n\t\t// Override default selection mode when mass edit is visible\n\t\tselectionMode = selectionMode === SelectionMode.Single ? SelectionMode.Single : SelectionMode.Multi;\n\t}\n\tif (\n\t\thasBoundActionsAlwaysVisibleInToolBar(lineItemAnnotation, manifestActions.actions, converterContext.getEntityType()) ||\n\t\thasCustomActionsAlwaysVisibleInToolBar(manifestActions.actions)\n\t) {\n\t\treturn selectionMode;\n\t}\n\taHiddenBindingExpressions = getUIHiddenExpForActionsRequiringContext(\n\t\tlineItemAnnotation,\n\t\tconverterContext.getEntityType(),\n\t\tconverterContext.getDataModelObjectPath()\n\t);\n\taVisibleBindingExpressions = getVisibleExpForCustomActionsRequiringContext(manifestActions.actions);\n\t// No action requiring a context:\n\tif (\n\t\taHiddenBindingExpressions.length === 0 &&\n\t\taVisibleBindingExpressions.length === 0 &&\n\t\t(cutButtonVisibilityExpression || deleteButtonVisibilityExpression || bMassEditEnabled)\n\t) {\n\t\tif (!isEntitySet) {\n\t\t\t// Example: OP case\n\t\t\tif (targetCapabilities.isDeletable || parentEntitySetDeletable !== \"false\" || bMassEditEnabled) {\n\t\t\t\t// Building expression for delete and mass edit\n\t\t\t\tconst buttonVisibilityExpression = or(\n\t\t\t\t\tcutButtonVisibilityExpression || true,\n\t\t\t\t\tdeleteButtonVisibilityExpression || true, // default delete visibility as true\n\t\t\t\t\tmassEditVisibilityExpression\n\t\t\t\t);\n\t\t\t\treturn compileExpression(\n\t\t\t\t\tifElse(and(UI.IsEditable, buttonVisibilityExpression), constant(selectionMode), constant(SelectionMode.None))\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\treturn compileExpression(\n\t\t\t\t\tifElse(cutButtonVisibilityExpression, constant(SelectionMode.Single), constant(SelectionMode.None))\n\t\t\t\t);\n\t\t\t}\n\t\t\t// EntitySet deletable:\n\t\t} else if (bMassEditEnabled) {\n\t\t\t// example: LR scenario\n\t\t\treturn selectionMode;\n\t\t} else if (targetCapabilities.isDeletable && deleteButtonVisibilityExpression) {\n\t\t\treturn compileExpression(ifElse(deleteButtonVisibilityExpression, constant(selectionMode), constant(SelectionMode.None)));\n\t\t\t// EntitySet not deletable:\n\t\t} else {\n\t\t\treturn SelectionMode.None;\n\t\t}\n\t\t// There are actions requiring a context:\n\t} else if (!isEntitySet) {\n\t\t// Example: OP case\n\t\tif (targetCapabilities.isDeletable || parentEntitySetDeletable !== \"false\" || bMassEditEnabled) {\n\t\t\t// Use selectionMode in edit mode if delete is enabled or mass edit is visible\n\t\t\tconst editModebuttonVisibilityExpression = ifElse(\n\t\t\t\tbMassEditEnabled && !targetCapabilities.isDeletable,\n\t\t\t\tmassEditVisibilityExpression,\n\t\t\t\tconstant(true)\n\t\t\t);\n\t\t\treturn compileExpression(\n\t\t\t\tifElse(\n\t\t\t\t\tand(UI.IsEditable, editModebuttonVisibilityExpression),\n\t\t\t\t\tconstant(selectionMode),\n\t\t\t\t\tifElse(\n\t\t\t\t\t\tor(...aHiddenBindingExpressions.concat(aVisibleBindingExpressions)),\n\t\t\t\t\t\tconstant(selectionMode),\n\t\t\t\t\t\tconstant(SelectionMode.None)\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t);\n\t\t} else {\n\t\t\treturn compileExpression(\n\t\t\t\tifElse(\n\t\t\t\t\tor(...aHiddenBindingExpressions.concat(aVisibleBindingExpressions)),\n\t\t\t\t\tconstant(selectionMode),\n\t\t\t\t\tconstant(SelectionMode.None)\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t\t//EntitySet deletable:\n\t} else if (targetCapabilities.isDeletable || bMassEditEnabled) {\n\t\t// Example: LR scenario\n\t\treturn selectionMode;\n\t\t//EntitySet not deletable:\n\t} else {\n\t\treturn compileExpression(\n\t\t\tifElse(\n\t\t\t\tor(...aHiddenBindingExpressions.concat(aVisibleBindingExpressions), massEditVisibilityExpression),\n\t\t\t\tconstant(selectionMode),\n\t\t\t\tconstant(SelectionMode.None)\n\t\t\t)\n\t\t);\n\t}\n}\n\n/**\n * Method to retrieve all table actions from annotations.\n * @param lineItemAnnotation\n * @param visualizationPath\n * @param converterContext\n * @returns The table annotation actions\n */\nfunction getTableAnnotationActions(\n\tlineItemAnnotation: LineItem,\n\tvisualizationPath: string,\n\tconverterContext: ConverterContext<PageContextPathTarget>\n): { tableActions: Array<AnnotationAction | AnnotationActionGroup> } {\n\tconst tableActions: Array<AnnotationAction | AnnotationActionGroup> = [];\n\tconst copyDataField = getCopyAction(\n\t\tlineItemAnnotation.filter((dataField) => {\n\t\t\treturn dataFieldIsCopyAction(dataField as DataFieldForActionTypes);\n\t\t}) as DataFieldForActionTypes[]\n\t);\n\tif (copyDataField) {\n\t\ttableActions.push({\n\t\t\ttype: ActionType.Copy,\n\t\t\tannotationPath: converterContext.getEntitySetBasedAnnotationPath(copyDataField.fullyQualifiedName),\n\t\t\tkey: KeyHelper.generateKeyFromDataField(copyDataField),\n\t\t\tvisible: compileExpression(visibleExpression(copyDataField, converterContext)),\n\t\t\ttext: copyDataField.Label?.toString() ?? Library.getResourceBundleFor(\"sap.fe.core\")!.getText(\"C_COMMON_COPY\"),\n\t\t\tisNavigable: true\n\t\t});\n\t}\n\tlineItemAnnotation\n\t\t.filter((dataField) => {\n\t\t\treturn !dataFieldIsCopyAction(dataField as DataFieldForAction);\n\t\t})\n\t\t.forEach((dataField: DataFieldAbstractTypes) => {\n\t\t\tif (\n\t\t\t\tisDataFieldForActionAbstract(dataField) &&\n\t\t\t\tdataField.Inline?.valueOf() !== true &&\n\t\t\t\tdataField.Determining?.valueOf() !== true\n\t\t\t) {\n\t\t\t\tconst tableAction = getDataFieldAnnotationAction(dataField, converterContext);\n\t\t\t\tif (tableAction) {\n\t\t\t\t\ttableActions.push(tableAction);\n\t\t\t\t}\n\t\t\t} else if (isDataFieldForActionGroup(dataField)) {\n\t\t\t\tconst dataFieldGroup = getDataFieldAnnotationAction(dataField, converterContext);\n\t\t\t\tif (dataFieldGroup) {\n\t\t\t\t\ttableActions.push(dataFieldGroup);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\treturn {\n\t\ttableActions\n\t};\n}\n\nfunction getDataFieldAnnotationAction(\n\tdataField: DataFieldAbstractTypes,\n\tconverterContext: ConverterContext<PageContextPathTarget>\n): AnnotationAction | AnnotationActionGroup | void {\n\tlet tableAction: AnnotationAction;\n\tlet entityType;\n\tswitch (dataField.$Type) {\n\t\tcase UIAnnotationTypes.DataFieldForAction:\n\t\t\ttableAction = {\n\t\t\t\ttype: ActionType.DataFieldForAction,\n\t\t\t\tannotationPath: converterContext.getEntitySetBasedAnnotationPath(dataField.fullyQualifiedName),\n\t\t\t\tkey: KeyHelper.generateKeyFromDataField(dataField),\n\t\t\t\tvisible: compileExpression(visibleExpression(dataField, converterContext)),\n\t\t\t\tisNavigable: true,\n\t\t\t\tisAIOperation: isActionAIOperation(dataField) === true || undefined\n\t\t\t};\n\t\t\tentityType = converterContext.getEntityType().fullyQualifiedName;\n\t\t\tif (_useEnabledExpression(dataField, entityType)) {\n\t\t\t\ttableAction.enabled = getEnabledForAnnotationAction(converterContext, dataField.ActionTarget, true);\n\t\t\t}\n\t\t\treturn tableAction;\n\t\tcase UIAnnotationTypes.DataFieldForIntentBasedNavigation:\n\t\t\treturn {\n\t\t\t\ttype: ActionType.DataFieldForIntentBasedNavigation,\n\t\t\t\tannotationPath: converterContext.getEntitySetBasedAnnotationPath(dataField.fullyQualifiedName),\n\t\t\t\tkey: KeyHelper.generateKeyFromDataField(dataField),\n\t\t\t\tvisible: compileExpression(visibleExpression(dataField, converterContext))\n\t\t\t};\n\t\tcase UIAnnotationTypes.DataFieldForActionGroup:\n\t\t\treturn {\n\t\t\t\ttype: ActionType.Menu,\n\t\t\t\tkey: KeyHelper.generateKeyFromDataField(dataField),\n\t\t\t\tid: KeyHelper.generateKeyFromDataField(dataField),\n\t\t\t\ttext: dataField.Label?.toString(),\n\t\t\t\tvisible: compileExpression(visibleExpression(dataField, converterContext)),\n\t\t\t\tisAIOperation: isMenuAIOperation(dataField.Actions) === true || undefined,\n\t\t\t\tmenu: dataField.Actions.map((action) => getDataFieldAnnotationAction(action, converterContext))\n\t\t\t} as AnnotationActionGroup;\n\t\tdefault:\n\t\t\treturn;\n\t}\n}\n\n/**\n * Generate the bindingExpression for the highlight rowSetting parameter.\n * @param criticalityAnnotation Path or value of the criticality\n * @param isDraftRootOrNode  Is the current entitySet an Draft root or a node\n * @param targetEntityType The targeted entityType\n * @returns An expressionBinding\n */\nfunction getHighlightRowBinding(\n\tcriticalityAnnotation: Criticality | undefined,\n\tisDraftRootOrNode: boolean,\n\ttargetEntityType?: EntityType\n): BindingToolkitExpression<MessageType> {\n\tlet defaultHighlightRowDefinition: MessageType | BindingToolkitExpression<MessageType> = MessageType.None;\n\tif (criticalityAnnotation) {\n\t\tif (typeof criticalityAnnotation === \"object\") {\n\t\t\tdefaultHighlightRowDefinition = getExpressionFromAnnotation(criticalityAnnotation) as BindingToolkitExpression<MessageType>;\n\t\t} else {\n\t\t\t// Enum Value so we get the corresponding static part\n\t\t\tdefaultHighlightRowDefinition = getMessageTypeFromCriticalityType(criticalityAnnotation);\n\t\t}\n\t}\n\treturn formatResult(\n\t\t[\n\t\t\tdefaultHighlightRowDefinition,\n\t\t\tpathInModel(`filteredMessages`, \"internal\"),\n\t\t\tisDraftRootOrNode && Entity.HasActive,\n\t\t\tisDraftRootOrNode && Entity.IsActive,\n\t\t\t`${isDraftRootOrNode}`,\n\t\t\tpathInModel(\"@$ui5.fe.contextPath\"),\n\t\t\tUI.IsInactive\n\t\t],\n\t\ttableFormatters.rowHighlighting,\n\t\ttargetEntityType\n\t);\n}\n\n/**\n * Gets the external creation behavior if there's one.\n * @param tableManifestConfiguration\n * @param converterContext\n * @param navigationSettings\n * @returns The external creation behavior, or undefined if there's none.\n */\nfunction getExternalCreationBehavior(\n\ttableManifestConfiguration: TableControlConfiguration,\n\tconverterContext: ConverterContext<PageContextPathTarget>,\n\tnavigationSettings: NavigationSettingsConfiguration\n): CreateBehaviorExternal | undefined {\n\t// Legacy settings: the outbound is specified in navigation/create\n\t// New settings: the outbound is specified in tableSettings/creationMode\n\tconst creationDetails = navigationSettings?.create;\n\tconst outboundKey = tableManifestConfiguration.outboundCreation ?? creationDetails?.outbound;\n\tconst outboundDetail = outboundKey ? converterContext.getManifestWrapper().getOutboundNavigationEntries()?.[outboundKey] : undefined;\n\tif (outboundKey && outboundDetail) {\n\t\treturn {\n\t\t\tmode: \"External\",\n\t\t\toutbound: outboundKey,\n\t\t\toutboundDetail\n\t\t};\n\t} else {\n\t\tif (tableManifestConfiguration.creationMode === CreationMode.External) {\n\t\t\t// Outbound configuration incorrect --> fallback to NewPage\n\t\t\tLog.warning(`Cannot find outbound parameters for \"External\" creation mode. Instead, the default mode \"NewPage\" is used.`);\n\t\t\ttableManifestConfiguration.creationMode = CreationMode.NewPage;\n\t\t\tdelete tableManifestConfiguration.outboundCreation;\n\t\t}\n\n\t\treturn undefined;\n\t}\n}\n\nfunction _getCreationBehaviour(\n\tlineItemAnnotation: LineItem | undefined,\n\ttableManifestConfiguration: TableControlConfiguration,\n\tconverterContext: ConverterContext<PageContextPathTarget>,\n\tnavigationSettings: NavigationSettingsConfiguration,\n\tvisualizationPath: string\n): CreateBehavior | CreateBehaviorExternal {\n\tconst externalBehavior = getExternalCreationBehavior(tableManifestConfiguration, converterContext, navigationSettings);\n\tif (externalBehavior) {\n\t\ttableManifestConfiguration.creationMode = CreationMode.External;\n\t\ttableManifestConfiguration.outboundCreation = externalBehavior.outbound;\n\t\treturn externalBehavior;\n\t}\n\n\tconst tableManifestSettings: TableManifestConfiguration = converterContext.getManifestControlConfiguration(visualizationPath);\n\tconst originalTableSettings = tableManifestSettings?.tableSettings ?? {};\n\tconst navigationDetails = navigationSettings?.detail;\n\tif (\n\t\tconverterContext.getTemplateType() === TemplateType.ListReport &&\n\t\t![CreationMode.NewPage, CreationMode.External, CreationMode.CreationDialog].includes(tableManifestConfiguration.creationMode)\n\t) {\n\t\t// Fallback to \"NewPage\"\n\t\tLog.warning(\n\t\t\t`Creation mode '${tableManifestConfiguration.creationMode}' can not be used within the List Report. Instead, the default mode \"NewPage\" is used.`\n\t\t);\n\t\ttableManifestConfiguration.creationMode = CreationMode.NewPage;\n\t} else if (\n\t\tconverterContext.getTemplateType() !== TemplateType.ListReport &&\n\t\ttableManifestConfiguration.type === \"TreeTable\" &&\n\t\t![CreationMode.NewPage, CreationMode.Inline, CreationMode.CreationDialog].includes(tableManifestConfiguration.creationMode)\n\t) {\n\t\t// Fallback to \"NewPage\" in case of a non-supported mode for a TreeTable\n\t\tLog.warning(\n\t\t\t`Creation mode '${tableManifestConfiguration.creationMode}' can not be used with a Tree Table. Instead, the default mode \"NewPage\" is used.`\n\t\t);\n\t\ttableManifestConfiguration.creationMode = CreationMode.NewPage;\n\t}\n\n\tlet newAction;\n\tif (lineItemAnnotation) {\n\t\t// in-app\n\t\tconst targetAnnotations = converterContext.getEntitySet()?.annotations;\n\t\tconst targetAnnotationsCommon = targetAnnotations?.Common as EntitySetAnnotations_Common,\n\t\t\ttargetAnnotationsSession = targetAnnotations?.Session as EntitySetAnnotations_Session;\n\t\tnewAction = targetAnnotationsCommon?.DraftRoot?.NewAction || targetAnnotationsSession?.StickySessionSupported?.NewAction;\n\t\tif (tableManifestConfiguration.creationMode === CreationMode.CreationRow && newAction) {\n\t\t\t// A combination of 'CreationRow' and 'NewAction' does not make sense\n\t\t\tthrow Error(`Creation mode '${CreationMode.CreationRow}' can not be used with a custom 'new' action (${newAction})`);\n\t\t}\n\t\tif (navigationDetails?.route) {\n\t\t\t// route specified\n\t\t\treturn {\n\t\t\t\tmode: tableManifestConfiguration.creationMode,\n\t\t\t\tappend: tableManifestConfiguration.createAtEnd,\n\t\t\t\tnewAction: newAction?.toString(),\n\t\t\t\tnavigateToTarget: tableManifestConfiguration.creationMode === CreationMode.NewPage ? navigationDetails.route : undefined // navigate only in NewPage mode\n\t\t\t};\n\t\t}\n\t}\n\t// no navigation or no route specified - fallback to inline create if original creation mode was 'NewPage'\n\tif (tableManifestConfiguration.creationMode === CreationMode.NewPage) {\n\t\tif (converterContext.getTemplateType() === TemplateType.ListReport) {\n\t\t\tLog.error(\"The creation mode 'NewPage' is used but the navigation configuration to the sub page is missing.\");\n\t\t} else {\n\t\t\ttableManifestConfiguration.creationMode = CreationMode.Inline;\n\t\t\t// In case there was no specific configuration for the createAtEnd we force it to false\n\t\t\tif (originalTableSettings.creationMode?.createAtEnd === undefined) {\n\t\t\t\ttableManifestConfiguration.createAtEnd = false;\n\t\t\t}\n\t\t\tLog.info(\"The creation mode was changed from 'NewPage' to 'Inline' due to missing navigation configuration to the sub page.\");\n\t\t}\n\t}\n\treturn {\n\t\tmode: tableManifestConfiguration.creationMode,\n\t\tappend: tableManifestConfiguration.createAtEnd,\n\t\tnewAction: newAction?.toString()\n\t};\n}\nconst _getRowConfigurationProperty = function (\n\tlineItemAnnotation: LineItem | undefined,\n\tconverterContext: ConverterContext<PageContextPathTarget>,\n\tnavigationSettings: NavigationSettingsConfiguration,\n\ttargetPath: string,\n\ttableType: TableType,\n\taggregationOnLeafLevelenabled?: boolean\n): RowConfiguration {\n\tlet navigationInfo: RowNavigationInfo | undefined;\n\tlet criticalityProperty: BindingToolkitExpression<MessageType> = constant(MessageType.None);\n\tconst targetEntityType = converterContext.getEntityType();\n\tconst criticalityAnnotation = lineItemAnnotation?.annotations?.UI?.Criticality;\n\tlet rowNavigableExpression: BindingToolkitExpression<boolean> = constant(true);\n\tif (navigationSettings && lineItemAnnotation) {\n\t\tconst navigationTarget = navigationSettings.display?.target || navigationSettings.detail?.outbound;\n\t\tconst targetEntitySet = converterContext.getEntitySet();\n\t\tcriticalityProperty = getHighlightRowBinding(\n\t\t\tcriticalityAnnotation,\n\t\t\t!!ModelHelper.getDraftRoot(targetEntitySet) || !!ModelHelper.getDraftNode(targetEntitySet),\n\t\t\ttargetEntityType\n\t\t);\n\t\tif (navigationTarget) {\n\t\t\tnavigationInfo = { type: \"Outbound\", navigationTarget };\n\t\t}\n\t\tif (!navigationTarget && navigationSettings.detail?.route) {\n\t\t\tconst checkEditable =\n\t\t\t\tModelHelper.getDraftRoot(targetEntitySet) !== undefined || ModelHelper.getDraftNode(targetEntitySet) !== undefined;\n\t\t\tnavigationInfo = {\n\t\t\t\ttype: \"Navigation\",\n\t\t\t\troutePath: navigationSettings.detail.route,\n\t\t\t\ttargetPath,\n\t\t\t\tcheckEditable,\n\t\t\t\trecreateContext: tableType === \"AnalyticalTable\"\n\t\t\t};\n\t\t}\n\t\tif (navigationSettings.detail?.availability) {\n\t\t\trowNavigableExpression = pathInModel(\"@$ui5.fe.virtual.routeNavigable-\" + navigationSettings.detail.route);\n\t\t}\n\t}\n\n\tconst rowNavigatedExpression: BindingToolkitExpression<boolean> = formatResult(\n\t\t[pathInModel(\"/deepestPath\", \"internal\")],\n\t\ttableFormatters.navigatedRow,\n\t\ttargetEntityType\n\t);\n\n\treturn {\n\t\tnavigationInfo,\n\t\tactionType: navigationInfo ? \"Navigation\" : undefined,\n\t\trowHighlighting: compileExpression(criticalityProperty),\n\t\trowNavigated: compileExpression(rowNavigatedExpression),\n\t\trowCriticalityForInsights: criticalityAnnotation ? criticalityExpressionForIntegrationCards(criticalityAnnotation) : undefined,\n\t\tvisible: compileExpression(\n\t\t\tand(rowNavigableExpression, not(UI.IsInactive), aggregationOnLeafLevelenabled ? UI.isNodeLevelNavigable : true)\n\t\t)\n\t};\n};\n\n/**\n * Creates a PropertyInfo for the identified additional property for the ALP table use case.\n *\n * For example, if UI.Hidden points to a property, include this technical property in the additionalProperties of the ComplexPropertyInfo object.\n * @param name The name of the property to be created.\n * @param columns The list of columns created for LineItems and Properties of entityType from the table visualization.\n * @param relatedAdditionalPropertyNameMap\n */\nconst createTechnicalProperty = function (\n\tname: string,\n\tcolumns: TableColumn[],\n\trelatedAdditionalPropertyNameMap: Record<string, string>\n): void {\n\tconst key = `Property_Technical::${name}`;\n\t// Validate if the technical property hasn't yet been created on previous iterations.\n\tconst columnExists = columns.find((column) => column.key === key);\n\t// Retrieve the simple property used by the hidden annotation, it will be used as a base for the mandatory attributes of newly created technical property. For e.g. relativePath\n\tconst additionalProperty =\n\t\t!columnExists && (columns.find((column) => column.name === name && !column.propertyInfos) as AnnotationTableColumn)!;\n\tif (additionalProperty) {\n\t\tconst technicalColumn: AnnotationTableColumn = {\n\t\t\tkey: key,\n\t\t\ttype: ColumnType.Annotation,\n\t\t\tlabel: additionalProperty.label,\n\t\t\tannotationPath: additionalProperty.annotationPath,\n\t\t\tdataType: \"Edm.String\",\n\t\t\tavailability: \"Hidden\",\n\t\t\tname: key,\n\t\t\trelativePath: additionalProperty.relativePath,\n\t\t\tsortable: false,\n\t\t\tisGroupable: false,\n\t\t\tisKey: false,\n\t\t\texportSettings: null,\n\t\t\tcaseSensitive: false,\n\t\t\taggregatable: false,\n\t\t\tfilterable: false,\n\t\t\textension: {\n\t\t\t\ttechnicallyGroupable: true,\n\t\t\t\ttechnicallyAggregatable: true\n\t\t\t}\n\t\t};\n\t\tcolumns.push(technicalColumn);\n\t\trelatedAdditionalPropertyNameMap[name] = technicalColumn.name;\n\t}\n};\n\nexport function getP13nMode(\n\tvisualizationPath: string,\n\tconverterContext: ConverterContext<PageContextPathTarget>,\n\ttableManifestConfiguration: TableControlConfiguration\n): TableP13nMode[] | undefined {\n\tconst manifestWrapper: ManifestWrapper = converterContext.getManifestWrapper();\n\tconst tableManifestSettings: TableManifestConfiguration = converterContext.getManifestControlConfiguration(visualizationPath);\n\tconst variantManagement: VariantManagementType = manifestWrapper.getVariantManagement();\n\tconst modes: TableP13nMode[] = [];\n\tconst isAnalyticalTable = tableManifestConfiguration.type === \"AnalyticalTable\";\n\tconst isResponsiveTable = tableManifestConfiguration.type === \"ResponsiveTable\";\n\tif (tableManifestSettings?.tableSettings?.personalization !== undefined) {\n\t\t// Personalization configured in manifest.\n\t\tconst personalization = tableManifestSettings.tableSettings.personalization;\n\t\tif (personalization === true) {\n\t\t\t// Table personalization fully enabled.\n\t\t\tswitch (tableManifestConfiguration.type) {\n\t\t\t\tcase \"AnalyticalTable\":\n\t\t\t\t\treturn [\"Sort\", \"Column\", \"Filter\", \"Group\", \"Aggregate\"];\n\t\t\t\tcase \"ResponsiveTable\":\n\t\t\t\t\treturn [\"Sort\", \"Column\", \"Filter\", \"Group\"];\n\t\t\t\tdefault:\n\t\t\t\t\treturn [\"Sort\", \"Column\", \"Filter\"];\n\t\t\t}\n\t\t} else if (typeof personalization === \"object\") {\n\t\t\t// Specific personalization options enabled in manifest. Use them as is.\n\t\t\tif (personalization.sort) {\n\t\t\t\tmodes.push(\"Sort\");\n\t\t\t}\n\t\t\tif (personalization.column) {\n\t\t\t\tmodes.push(\"Column\");\n\t\t\t}\n\t\t\tif (personalization.filter) {\n\t\t\t\tmodes.push(\"Filter\");\n\t\t\t}\n\t\t\tif (personalization.group && (isAnalyticalTable || isResponsiveTable)) {\n\t\t\t\tmodes.push(\"Group\");\n\t\t\t}\n\t\t\tif (personalization.aggregate && isAnalyticalTable) {\n\t\t\t\tmodes.push(\"Aggregate\");\n\t\t\t}\n\t\t\treturn modes.length > 0 ? modes : undefined;\n\t\t}\n\t} else {\n\t\t// No personalization configured in manifest.\n\t\tmodes.push(\"Sort\");\n\t\tmodes.push(\"Column\");\n\t\tif (converterContext.getTemplateType() === TemplateType.ListReport) {\n\t\t\tif (variantManagement === VariantManagementType.Control || _isFilterBarHidden(manifestWrapper, converterContext)) {\n\t\t\t\t// Feature parity with V2.\n\t\t\t\t// Enable table filtering by default only in case of Control level variant management.\n\t\t\t\t// Or when the LR filter bar is hidden via manifest setting\n\t\t\t\tmodes.push(\"Filter\");\n\t\t\t}\n\t\t} else {\n\t\t\tmodes.push(\"Filter\");\n\t\t}\n\t\tif (isAnalyticalTable) {\n\t\t\tmodes.push(\"Group\");\n\t\t\tmodes.push(\"Aggregate\");\n\t\t}\n\t\tif (isResponsiveTable) {\n\t\t\tmodes.push(\"Group\");\n\t\t}\n\t\treturn modes;\n\t}\n}\n/**\n * Returns a Boolean value suggesting if a filter bar is being used on the page.\n *\n * Chart has a dependency to filter bar (issue with loading data). Once resolved, the check for chart should be removed here.\n * Until then, hiding filter bar is now allowed if a chart is being used on LR.\n * @param manifestWrapper Manifest settings getter for the page\n * @param converterContext The instance of the converter context\n * @returns Boolean suggesting if a filter bar is being used on the page.\n */\nfunction _isFilterBarHidden(manifestWrapper: ManifestWrapper, converterContext: ConverterContext<PageContextPathTarget>): boolean {\n\treturn (\n\t\tmanifestWrapper.isFilterBarHidden() &&\n\t\t!converterContext.getManifestWrapper().hasMultipleVisualizations() &&\n\t\tconverterContext.getTemplateType() !== TemplateType.AnalyticalListPage\n\t);\n}\n/**\n * Returns a JSON string containing the sort conditions for the presentation variant.\n * @param converterContext The instance of the converter context\n * @param presentationVariantAnnotation Presentation variant annotation\n * @param columns Table columns processed by the converter\n * @returns Sort conditions for a presentation variant.\n */\nfunction getSortConditions(\n\tconverterContext: ConverterContext<PageContextPathTarget>,\n\tpresentationVariantAnnotation: PresentationVariantType | undefined,\n\tcolumns: TableColumn[]\n): TableSortConditions | undefined {\n\t// Currently navigation property is not supported as sorter\n\tconst nonSortableProperties = getRestrictionsOnProperties(converterContext).nonSortableProperties;\n\tconst sortConditions: TableSortConditions = {\n\t\tsorters: []\n\t};\n\tif (presentationVariantAnnotation?.SortOrder) {\n\t\tpresentationVariantAnnotation.SortOrder.forEach((condition) => {\n\t\t\tconst conditionProperty = condition.Property;\n\t\t\tif (conditionProperty?.$target !== undefined && !nonSortableProperties.includes(conditionProperty.$target.name)) {\n\t\t\t\tconst infoName = convertPropertyPathsToInfoNames([conditionProperty], columns)[0];\n\t\t\t\tif (infoName) {\n\t\t\t\t\tsortConditions.sorters.push({\n\t\t\t\t\t\tname: infoName,\n\t\t\t\t\t\tdescending: !!condition.Descending\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\treturn sortConditions.sorters.length ? sortConditions : undefined;\n}\nfunction getInitialExpansionLevel(presentationVariantAnnotation: PresentationVariantType | undefined): number | undefined {\n\tif (!presentationVariantAnnotation) {\n\t\treturn undefined;\n\t}\n\tconst level = presentationVariantAnnotation.InitialExpansionLevel?.valueOf();\n\treturn typeof level === \"number\" ? level + 1 : undefined;\n}\n/**\n * Converts an array of propertyPath to an array of propertyInfo names.\n * @param paths The array to be converted\n * @param columns The array of propertyInfos\n * @returns An array of propertyInfo names\n */\nfunction convertPropertyPathsToInfoNames(paths: PropertyPath[], columns: TableColumn[]): string[] {\n\tconst infoNames: string[] = [];\n\tlet propertyInfo: TableColumn | undefined, annotationColumn: AnnotationTableColumn;\n\tpaths.forEach((currentPath) => {\n\t\tif (currentPath?.value) {\n\t\t\tpropertyInfo = columns.find((column) => {\n\t\t\t\tannotationColumn = column as AnnotationTableColumn;\n\t\t\t\treturn !annotationColumn.propertyInfos && annotationColumn.relativePath === currentPath?.value;\n\t\t\t});\n\t\t\tif (propertyInfo) {\n\t\t\t\tinfoNames.push(propertyInfo.name);\n\t\t\t}\n\t\t}\n\t});\n\treturn infoNames;\n}\n/**\n * Returns a JSON string containing Presentation Variant group conditions.\n * @param presentationVariantAnnotation Presentation variant annotation\n * @param columns Converter processed table columns\n * @param tableType The table type.\n * @returns Group conditions for a Presentation variant.\n */\nfunction getGroupConditions(\n\tpresentationVariantAnnotation: PresentationVariantType | undefined,\n\tcolumns: TableColumn[],\n\ttableType: string\n): TableGroupConditions | undefined {\n\tconst groupConditions: TableGroupConditions = {\n\t\tgroupLevels: []\n\t};\n\tif (presentationVariantAnnotation?.GroupBy) {\n\t\tlet aGroupBy = presentationVariantAnnotation.GroupBy;\n\t\tif (tableType === \"ResponsiveTable\") {\n\t\t\taGroupBy = aGroupBy.slice(0, 1);\n\t\t}\n\t\tgroupConditions.groupLevels = convertPropertyPathsToInfoNames(aGroupBy, columns).map((infoName) => {\n\t\t\treturn { name: infoName };\n\t\t});\n\t}\n\treturn groupConditions.groupLevels.length ? groupConditions : undefined;\n}\n/**\n * Updates the column's propertyInfos of an analytical table integrating all extensions and binding-relevant property info part.\n * @param tableVisualization The visualization to be updated\n */\nfunction _updatePropertyInfosWithAggregatesDefinitions(tableVisualization: TableVisualization): void {\n\tconst relatedAdditionalPropertyNameMap: Record<string, string> = {};\n\ttableVisualization.columns.forEach((column) => {\n\t\tcolumn = column as AnnotationTableColumn;\n\t\tconst propertyNameFromAnalyticsInfo = _getPropertyNameFromAnalyticsInfo(tableVisualization, column.name);\n\t\tif (propertyNameFromAnalyticsInfo) {\n\t\t\tconst aggregatablePropertyDefinition = tableVisualization.analyticsExtensions![propertyNameFromAnalyticsInfo];\n\t\t\tcolumn.aggregatable = !aggregatablePropertyDefinition.fromGroupableProperty;\n\t\t\tcolumn.extension = aggregatablePropertyDefinition ?? {};\n\t\t\tif (!column.isGroupable && !column.aggregatable) {\n\t\t\t\t// The column is neither aggregatable nor groupable --> it's a hidden column to allow filtering in P13N\n\t\t\t\t// We need to remove additionalProperties, as it's not needed and causes an error in the MDC table code\n\t\t\t\tdelete column.extension.additionalProperties;\n\t\t\t}\n\t\t\tif (column.isGroupable && column.extension.additionalProperties && column.extension.additionalProperties.length) {\n\t\t\t\t// For the time being, properties with context-defining properties shall not be allowed for visual grouping\n\t\t\t\t// We need a UX concept to support this (as the end user would need to group on the context-defining properties before grouping\n\t\t\t\t// on the property itself).\n\t\t\t\tcolumn.isGroupable = false;\n\t\t\t\tcolumn.extension.technicallyGroupable = true;\n\t\t\t}\n\t\t}\n\t\tif (column.additionalPropertyInfos?.length) {\n\t\t\tcolumn.additionalPropertyInfos.forEach((additionalPropertyInfo) => {\n\t\t\t\t// Create propertyInfo for each additional property.\n\t\t\t\t// The new property 'name' has been prefixed with 'Property_Technical::' for uniqueness and it has been named technical property as it requires dedicated MDC attributes (technicallyGroupable and technicallyAggregatable).\n\t\t\t\tcreateTechnicalProperty(additionalPropertyInfo, tableVisualization.columns, relatedAdditionalPropertyNameMap);\n\t\t\t});\n\t\t}\n\t\t_updateForTextOnlyPropertiesWithCDP(tableVisualization, column);\n\t});\n\ttableVisualization.columns.forEach((column) => {\n\t\tcolumn = column as AnnotationTableColumn;\n\t\tif (column.additionalPropertyInfos) {\n\t\t\tcolumn.additionalPropertyInfos = column.additionalPropertyInfos.map(\n\t\t\t\t(propertyInfo) => relatedAdditionalPropertyNameMap[propertyInfo] ?? propertyInfo\n\t\t\t);\n\t\t\t// Add additional properties to the complex property using the hidden annotation.\n\t\t\tcolumn.propertyInfos = column.propertyInfos?.concat(column.additionalPropertyInfos);\n\t\t}\n\t});\n}\n\n/**\n * Provides the referenced property name from the analytics data\n * @param tableVisualization The visualization to be analyzed\n * @param name The property name\n * @returns The property name from the analytics data\n */\n\nfunction _getPropertyNameFromAnalyticsInfo(tableVisualization: TableVisualization, name: string): string | undefined {\n\treturn Object.keys(tableVisualization.analyticsExtensions!).find((aggregate) => aggregate === name);\n}\n\n/**\n * Updates the column's propertyInfos of a column annotated with text only on an analytical table.\n * The referenced text property could define context-defining properties to be included into the column's propertyInfos.\n * @param tableVisualization The visualization to be analyzed\n * @param column The column containing the \"textArrangement\" object when present\n */\nfunction _updateForTextOnlyPropertiesWithCDP(tableVisualization: TableVisualization, column: AnnotationTableColumn): void {\n\t// Currently a column referencing a text only property only contains the text property into its propertyInfos.\n\t// Properties referencing context-defining properties (CDP) aren't allowed for grouping. This need to change for text only columns, as in common cases, text properties reference their value properties into their CDPs.\n\t// So, we now include the value property into the propertyInfos of the column to allow the grouping on the property value.\n\tif (column.textArrangement?.mode === \"Description\" && column.textArrangement.textProperty) {\n\t\tconst analyticsInfoPropertyNameForDesc = _getPropertyNameFromAnalyticsInfo(tableVisualization, column.textArrangement.textProperty);\n\t\tif (analyticsInfoPropertyNameForDesc) {\n\t\t\tconst aggregatablePropertyDefinition = tableVisualization.analyticsExtensions![analyticsInfoPropertyNameForDesc];\n\t\t\t// We need to make sure the text property has CDP properties defined and the value property is part of these properties.\n\t\t\tif (\n\t\t\t\taggregatablePropertyDefinition.additionalProperties?.length &&\n\t\t\t\taggregatablePropertyDefinition.additionalProperties.includes(column.name)\n\t\t\t) {\n\t\t\t\t// The property value (single property) exists already on the list of columns from the table but it was only created for filtering purposes in P13n and not linked to the column with the text arrangement #TextOnly,\n\t\t\t\t// therefore not proposed as a default value for grouping the column menu. Now it'll be included into the propertyInfos of the column to allow the default grouping on this value property.\n\t\t\t\tconst columnWithTextOnly = (tableVisualization.columns as AnnotationTableColumn[]).find(\n\t\t\t\t\t(textOnlyColumn) => textOnlyColumn.relativePath === column.relativePath && textOnlyColumn.propertyInfos\n\t\t\t\t);\n\t\t\t\tcolumnWithTextOnly?.propertyInfos?.push(column.name);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Returns a JSON string containing Presentation Variant aggregate conditions.\n * @param presentationVariantAnnotation Presentation variant annotation\n * @param columns Converter processed table columns\n * @param extensionInfoMap\n * @returns Group conditions for a Presentation variant.\n */\nfunction getAggregateConditions(\n\tpresentationVariantAnnotation: PresentationVariantType | undefined,\n\tcolumns: TableColumn[],\n\textensionInfoMap: Record<string, InternalExtensionForAnalytics>\n): TableAggregateConditions | undefined {\n\tconst aggregateConditions: TableAggregateConditions = {};\n\tif (presentationVariantAnnotation?.Total) {\n\t\tconst aTotals = presentationVariantAnnotation.Total;\n\t\tconvertPropertyPathsToInfoNames(aTotals, columns).forEach((infoName) => {\n\t\t\taggregateConditions[infoName] = {};\n\t\t});\n\t} else {\n\t\tfor (const key in extensionInfoMap) {\n\t\t\tif (!extensionInfoMap[key].fromGroupableProperty) {\n\t\t\t\taggregateConditions[key] = {};\n\t\t\t}\n\t\t}\n\t}\n\treturn Object.keys(aggregateConditions).length ? aggregateConditions : undefined;\n}\nexport type StandardActionsConfiguration = {\n\tcreationBehaviour: TableAnnotationConfiguration[\"create\"];\n\tcutButtonVisibilityExpression: BindingToolkitExpression<boolean>;\n\tdeleteButtonVisibilityExpression: BindingToolkitExpression<boolean>;\n\tmassEditButtonVisibilityExpression: BindingToolkitExpression<boolean>;\n\tisInsertUpdateActionsTemplated: boolean;\n\tstandardActions: {\n\t\tcreate: StandardAction;\n\t\tdelete: StandardAction;\n\t\tpaste: StandardAction;\n\t\tmassEdit: StandardAction;\n\t\tinsights: StandardAction;\n\t\tcreationRow: StandardAction;\n\t\tcut: StandardAction;\n\t\tcopy: StandardAction;\n\t\tmoveUp?: StandardAction;\n\t\tmoveDown?: StandardAction;\n\t};\n};\n/**\n * Calculates the standard actions and adjacent properties that are needed in the further conversion process.\n * @param lineItemAnnotation Collection of data fields used for representation in a table or list\n * @param visualizationPath The visualization path\n * @param converterContext The instance of the converter context\n * @param tableManifestConfiguration The table manifest configuration\n * @param navigationSettings The navigation target manifest configuration\n * @returns Standard actions and connected properties\n */\nexport function getStandardActionsConfiguration(\n\tlineItemAnnotation: LineItem | undefined,\n\tvisualizationPath: string,\n\tconverterContext: ConverterContext<PageContextPathTarget>,\n\ttableManifestConfiguration: TableControlConfiguration,\n\tnavigationSettings: NavigationSettingsConfiguration\n): StandardActionsConfiguration {\n\tconst creationBehaviour = _getCreationBehaviour(\n\t\tlineItemAnnotation,\n\t\ttableManifestConfiguration,\n\t\tconverterContext,\n\t\tnavigationSettings,\n\t\tvisualizationPath\n\t);\n\tconst standardActionsContext = generateStandardActionsContext(\n\t\tconverterContext,\n\t\tcreationBehaviour.mode as CreationMode,\n\t\ttableManifestConfiguration\n\t);\n\tconst cutButtonVisibilityExpression = getCutVisibility(converterContext, standardActionsContext);\n\tconst deleteButtonVisibilityExpression = getDeleteVisibility(converterContext, standardActionsContext);\n\tconst massEditButtonVisibilityExpression = getMassEditVisibility(converterContext, standardActionsContext);\n\tconst isInsertUpdateActionsTemplated = getInsertUpdateActionsTemplating(\n\t\tstandardActionsContext,\n\t\tisDraftOrStickySupported(converterContext)\n\t);\n\tconst standardActions = {\n\t\tcut: getStandardActionCut(converterContext, standardActionsContext),\n\t\tcopy: getStandardActionCopy(converterContext, standardActionsContext),\n\t\tcreate: getStandardActionCreate(converterContext, standardActionsContext),\n\t\tdelete: getStandardActionDelete(converterContext, standardActionsContext),\n\t\tpaste: getStandardActionPaste(converterContext, standardActionsContext, isInsertUpdateActionsTemplated),\n\t\tmassEdit: getStandardActionMassEdit(converterContext, standardActionsContext),\n\t\tinsights: getStandardActionInsights(converterContext, standardActionsContext, visualizationPath),\n\t\tcreationRow: getCreationRow(converterContext, standardActionsContext)\n\t};\n\tconst configuration: StandardActionsConfiguration = {\n\t\tcreationBehaviour,\n\t\tcutButtonVisibilityExpression,\n\t\tdeleteButtonVisibilityExpression,\n\t\tmassEditButtonVisibilityExpression,\n\t\tisInsertUpdateActionsTemplated,\n\t\tstandardActions\n\t};\n\n\tif (standardActionsContext.tableManifestConfiguration.type === \"TreeTable\") {\n\t\tconfiguration.standardActions.moveUp = getStandardActionMoveUpDown(converterContext, standardActionsContext, true);\n\t\tconfiguration.standardActions.moveDown = getStandardActionMoveUpDown(converterContext, standardActionsContext, false);\n\t}\n\n\treturn configuration;\n}\nexport function getTableAnnotationConfiguration(\n\tlineItemAnnotation: LineItem | undefined,\n\tvisualizationPath: string,\n\tconverterContext: ConverterContext<PageContextPathTarget>,\n\ttableManifestConfiguration: TableControlConfiguration,\n\tcolumns: TableColumn[],\n\tnavigationSettings: NavigationSettingsConfiguration,\n\tstandardActionsConfiguration: StandardActionsConfiguration,\n\tpresentationVariantAnnotation?: PresentationVariantType\n): TableAnnotationConfiguration {\n\t// Need to get the target\n\tconst tableManifestSettings: TableManifestConfiguration = converterContext.getManifestControlConfiguration(visualizationPath);\n\tconst { navigationPropertyPath } = splitPath(visualizationPath);\n\tconst typeNamePlural = converterContext.getDataModelObjectPath().targetEntityType.annotations?.UI?.HeaderInfo?.TypeNamePlural;\n\tconst title = typeNamePlural && compileExpression(getExpressionFromAnnotation(typeNamePlural));\n\tconst entitySet = converterContext.getDataModelObjectPath().targetEntitySet;\n\tconst pageManifestSettings: ManifestWrapper = converterContext.getManifestWrapper();\n\tconst hasAbsolutePath = navigationPropertyPath.length === 0;\n\tconst p13nMode = getP13nMode(visualizationPath, converterContext, tableManifestConfiguration);\n\tconst id = navigationPropertyPath ? getTableID(visualizationPath) : getTableID(converterContext.getContextPath(), \"LineItem\");\n\tconst targetCapabilities = getCapabilityRestriction(converterContext);\n\tconst navigationTargetPath = getNavigationTargetPath(converterContext, navigationPropertyPath);\n\tconst selectionMode = getSelectionMode(\n\t\tlineItemAnnotation,\n\t\tvisualizationPath,\n\t\tconverterContext,\n\t\thasAbsolutePath,\n\t\ttargetCapabilities,\n\t\tstandardActionsConfiguration.deleteButtonVisibilityExpression,\n\t\tstandardActionsConfiguration.massEditButtonVisibilityExpression,\n\t\tstandardActionsConfiguration.cutButtonVisibilityExpression\n\t);\n\tconst threshold = getThreshold(tableManifestConfiguration, navigationPropertyPath, presentationVariantAnnotation);\n\tconst variantManagement: VariantManagementType = pageManifestSettings.getVariantManagement();\n\tconst isSearchable = isPathSearchable(converterContext.getDataModelObjectPath());\n\treturn {\n\t\tid: id,\n\t\tapiId: generate([id, \"Table\"]),\n\t\tentityName: entitySet ? entitySet.name : \"\",\n\t\tentityTypeName: entitySet && entitySet.entityType ? entitySet.entityType.name : \"\",\n\t\tcollection: getTargetObjectPath(converterContext.getDataModelObjectPath()),\n\t\tnavigationPath: navigationPropertyPath,\n\t\trow: _getRowConfigurationProperty(\n\t\t\tlineItemAnnotation,\n\t\t\tconverterContext,\n\t\t\tnavigationSettings,\n\t\t\tnavigationTargetPath,\n\t\t\ttableManifestConfiguration.type,\n\t\t\ttableManifestConfiguration.analyticalConfiguration?.aggregationOnLeafLevel\n\t\t),\n\t\tp13nMode,\n\t\tisInsertUpdateActionsTemplated: standardActionsConfiguration.isInsertUpdateActionsTemplated,\n\t\tupdatablePropertyPath: getCurrentEntitySetUpdatablePath(converterContext),\n\t\tdisplayMode: isInDisplayMode(converterContext, true),\n\t\tcreate: standardActionsConfiguration.creationBehaviour,\n\t\tselectionMode: selectionMode,\n\t\tvariantManagement: variantManagement === \"Control\" && !p13nMode ? VariantManagementType.None : variantManagement,\n\t\tthreshold: threshold,\n\t\tsortConditions: getSortConditions(converterContext, presentationVariantAnnotation, columns),\n\t\ttitle: title,\n\t\tsearchable:\n\t\t\ttableManifestSettings.tableSettings?.isSearchable === false\n\t\t\t\t? false\n\t\t\t\t: tableManifestConfiguration.type !== \"AnalyticalTable\" && !(isConstant(isSearchable) && isSearchable.value === false),\n\t\tinitialExpansionLevel: getInitialExpansionLevel(presentationVariantAnnotation),\n\t\trequiredProperties: getRequiredProperties(converterContext)\n\t\t\t.filter((property) => property?.$target?.type !== \"Edm.Boolean\")\n\t\t\t.map((property) => property.value)\n\t};\n}\n\n/**\n * Determines the threshold value for the table.\n * @param tableManifestConfiguration The table manifest configuration\n * @param navigationPropertyPath The navigation property path\n * @param presentationVariantAnnotation The presentation variant annotation\n * @returns The threshold value\n */\nfunction getThreshold(\n\ttableManifestConfiguration: TableControlConfiguration,\n\tnavigationPropertyPath: string,\n\tpresentationVariantAnnotation?: PresentationVariantType\n): number {\n\tlet threshold = navigationPropertyPath ? 10 : 30;\n\tif (presentationVariantAnnotation?.MaxItems) {\n\t\tthreshold = presentationVariantAnnotation.MaxItems.valueOf();\n\t} else if (tableManifestConfiguration.type === \"TreeTable\") {\n\t\t// To make scrolling smooth, we set the threshold value higher for tree tables\n\t\tthreshold = 200;\n\t} else if (tableManifestConfiguration.type === \"GridTable\" || tableManifestConfiguration.type === \"AnalyticalTable\") {\n\t\tthreshold = 100;\n\t}\n\treturn threshold;\n}\n/**\n * Splits the visualization path into navigation property path and annotation.\n * @param visualizationPath\n * @returns The split path\n */\nexport function splitPath(visualizationPath: string): { navigationPropertyPath: string; annotationPath: string } {\n\tconst [targetNavigationPropertyPath, annotationPath] = visualizationPath.split(\"@\");\n\tlet navigationPropertyPath = targetNavigationPropertyPath;\n\tif (navigationPropertyPath.lastIndexOf(\"/\") === navigationPropertyPath.length - 1) {\n\t\t// Drop trailing slash\n\t\tnavigationPropertyPath = navigationPropertyPath.substring(0, navigationPropertyPath.length - 1);\n\t}\n\treturn { navigationPropertyPath, annotationPath };\n}\nexport function getSelectionVariantConfiguration(\n\tselectionVariantPath: string,\n\tconverterContext: ConverterContext<PageContextPathTarget>\n): SelectionVariantConfiguration | undefined {\n\tconst resolvedTarget = converterContext.getEntityTypeAnnotation(selectionVariantPath);\n\tconst selection: SelectionVariant = resolvedTarget.annotation as SelectionVariant;\n\tif (selection) {\n\t\tconst propertyNames: string[] = [];\n\t\tselection.SelectOptions?.forEach((selectOption: SelectOptionType) => {\n\t\t\tconst propertyName = selectOption.PropertyName;\n\t\t\tconst propertyPath: string = propertyName?.value ?? \"\";\n\t\t\tif (!propertyNames.includes(propertyPath)) {\n\t\t\t\tpropertyNames.push(propertyPath);\n\t\t\t}\n\t\t});\n\t\treturn {\n\t\t\ttext: selection?.Text?.toString(),\n\t\t\tpropertyNames: propertyNames\n\t\t};\n\t}\n\treturn undefined;\n}\nfunction _getFullScreenBasedOnDevice(\n\ttableSettings: TableManifestSettingsConfiguration,\n\tconverterContext: ConverterContext<PageContextPathTarget>,\n\tisIphone: boolean\n): boolean {\n\t// If enableFullScreen is not set, use as default true on phone and false otherwise\n\tlet enableFullScreen = tableSettings.enableFullScreen ?? isIphone;\n\t// Make sure that enableFullScreen is not set on ListReport for desktop or tablet\n\tif (!isIphone && enableFullScreen && converterContext.getTemplateType() === TemplateType.ListReport) {\n\t\tenableFullScreen = false;\n\t\tconverterContext.getDiagnostics().addIssue(IssueCategory.Manifest, IssueSeverity.Low, IssueType.FULLSCREENMODE_NOT_ON_LISTREPORT);\n\t}\n\treturn enableFullScreen;\n}\nfunction _getMultiSelectMode(\n\ttableSettings: TableManifestSettingsConfiguration,\n\ttableType: TableType,\n\tconverterContext: ConverterContext<PageContextPathTarget>\n): string | undefined {\n\tlet multiSelectMode: string | undefined;\n\tif (tableType !== \"ResponsiveTable\") {\n\t\treturn undefined;\n\t}\n\tswitch (converterContext.getTemplateType()) {\n\t\tcase TemplateType.ListReport:\n\t\tcase TemplateType.ObjectPage:\n\t\t\tmultiSelectMode = tableSettings.selectAll === false ? \"ClearAll\" : \"Default\";\n\t\t\tif (converterContext.getTemplateType() === TemplateType.ObjectPage && converterContext.getManifestWrapper().useIconTabBar()) {\n\t\t\t\tmultiSelectMode = !tableSettings.selectAll ? \"ClearAll\" : \"Default\";\n\t\t\t}\n\t\t\tbreak;\n\t\tcase TemplateType.AnalyticalListPage:\n\t\t\tmultiSelectMode = !tableSettings.selectAll ? \"ClearAll\" : \"Default\";\n\t\t\tbreak;\n\t\tdefault:\n\t}\n\treturn multiSelectMode;\n}\nfunction _getTableMode(\n\ttableType: TableType,\n\ttableSettings: TableManifestSettingsConfiguration,\n\tisTemplateListReport: boolean\n): { rowCountMode?: TableRowCountMode; rowCount?: number } {\n\tif (tableType !== \"ResponsiveTable\") {\n\t\tif (isTemplateListReport) {\n\t\t\treturn {\n\t\t\t\trowCountMode: \"Auto\",\n\t\t\t\trowCount: 3\n\t\t\t};\n\t\t} else {\n\t\t\tlet initialRowCount: number;\n\t\t\tswitch (tableType) {\n\t\t\t\tcase \"GridTable\":\n\t\t\t\t\tinitialRowCount = tableSettings.rowCountMode === \"Auto\" ? 3 : 5;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"TreeTable\":\n\t\t\t\tcase \"AnalyticalTable\":\n\t\t\t\t\tinitialRowCount = tableSettings.rowCountMode === \"Auto\" ? 3 : 10;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tinitialRowCount = 5;\n\t\t\t}\n\t\t\treturn {\n\t\t\t\trowCountMode: tableSettings.rowCountMode ?? \"Fixed\",\n\t\t\t\trowCount: tableSettings.rowCount ?? initialRowCount\n\t\t\t};\n\t\t}\n\t} else {\n\t\treturn {};\n\t}\n}\nfunction _getCondensedTableLayout(_tableType: TableType, _tableSettings: TableManifestSettingsConfiguration): boolean {\n\treturn _tableSettings.condensedTableLayout !== undefined && _tableType !== \"ResponsiveTable\"\n\t\t? _tableSettings.condensedTableLayout\n\t\t: false;\n}\nfunction _getTableSelectionLimit(_tableSettings: TableManifestSettingsConfiguration): number {\n\treturn _tableSettings.selectAll === true || _tableSettings.selectionLimit === 0 ? 0 : _tableSettings.selectionLimit || 200;\n}\nfunction _getTableInlineCreationRowCount(_tableSettings: TableManifestSettingsConfiguration): number {\n\treturn _tableSettings.creationMode?.inlineCreationRowCount ? _tableSettings.creationMode?.inlineCreationRowCount : 1;\n}\n\nfunction _getEnableExport(\n\ttableSettings: TableManifestSettingsConfiguration,\n\tconverterContext: ConverterContext<PageContextPathTarget>,\n\tenablePaste: boolean\n): boolean {\n\treturn tableSettings.enableExport !== undefined\n\t\t? tableSettings.enableExport\n\t\t: converterContext.getTemplateType() !== \"ObjectPage\" || enablePaste;\n}\nfunction _getFrozenColumnCount(tableSettings: TableManifestSettingsConfiguration): number | undefined {\n\treturn tableSettings.frozenColumnCount;\n}\n/**\n * Returns whether the column freeze is enabled or not.\n * @param tableSettings TableSettings\n * @returns Returns true if column freeze should be enabled, false otherwise\n */\nfunction getEnableColumnFreeze(tableSettings: TableManifestSettingsConfiguration): boolean | undefined {\n\treturn tableSettings.disableColumnFreeze !== true;\n}\n\n/**\n * Get the widthIncludingColumnHeader value from the tableSettings if it exists.\n * @param tableSettings TableSettings Object\n * @returns Returns the value of widthIncludingColumnHeader or false\n */\nfunction _getWidthIncludingColumnHeader(tableSettings: TableManifestSettingsConfiguration): boolean {\n\treturn tableSettings.widthIncludingColumnHeader ?? false;\n}\n\nfunction getFilterConfiguration(\n\ttableSettings: TableManifestSettingsConfiguration,\n\tlineItemAnnotation: LineItem,\n\tconverterContext: ConverterContext<PageContextPathTarget>,\n\tselectionVariantAnnotation: SelectionVariantType | undefined\n): {\n\tfilters: Partial<Record<\"quickFilters\" | \"hiddenFilters\", TableFiltersConfiguration>>;\n\theaderVisible: boolean;\n} {\n\tlet hideTableTitle = false;\n\tconst filters: Partial<Record<\"quickFilters\" | \"hiddenFilters\", TableFiltersConfiguration>> = {};\n\tconst targetEntityType = converterContext.getAnnotationEntityType(lineItemAnnotation);\n\tif (tableSettings.quickVariantSelection) {\n\t\tconst quickFilterPaths = (tableSettings.quickVariantSelection.paths ?? []).reduce(\n\t\t\t(filterPaths: { annotationPath: string }[], path) => {\n\t\t\t\tif (targetEntityType.resolvePath(path.annotationPath)) {\n\t\t\t\t\tfilterPaths.push({ annotationPath: path.annotationPath });\n\t\t\t\t}\n\t\t\t\treturn filterPaths;\n\t\t\t},\n\t\t\t[]\n\t\t);\n\t\tif (quickFilterPaths.length) {\n\t\t\tfilters.quickFilters = {\n\t\t\t\tshowCounts: tableSettings.quickVariantSelection.showCounts,\n\t\t\t\tpaths: quickFilterPaths\n\t\t\t};\n\t\t}\n\t}\n\tif (selectionVariantAnnotation) {\n\t\t/**\n\t\t * Provide Selection Variant to hiddenFilters in order to set the SV filters to the table.\n\t\t * MDC Table overrides binding Filter and from SAP FE the only method where we are able to add\n\t\t * additional filter is 'rebindTable' into Table delegate.\n\t\t * To avoid implementing specific LR feature to SAP FE Macro Table, the filter(s)  not managed by the FilterBar\n\t\t * can be passed to macro table via parameter/context named filters and key hiddenFilters.\n\t\t */\n\t\tfilters.hiddenFilters = { paths: [{ annotationPath: `@${selectionVariantAnnotation.fullyQualifiedName.split(\"@\")[1]}` }] };\n\t}\n\n\thideTableTitle = !!tableSettings.quickVariantSelection?.hideTableTitle;\n\treturn {\n\t\tfilters: filters,\n\t\theaderVisible: !(filters?.quickFilters && hideTableTitle)\n\t};\n}\n\n/**\n * Determines if the action will have an expression for enablement generated.\n * @param dataField The dataField containing an action\n * @param sEntityType The current entity for templating\n * @returns Whether an expression for enablement is to be generated\n */\nfunction _useEnabledExpression(dataField: DataFieldForActionTypes, sEntityType: string): boolean {\n\t// There are three cases when a table action has an OperationAvailable that leads to an enablement expression\n\t// and is not dependent upon the table entries.\n\t// 1. An action with an overload, that is executed against a parent entity.\n\t// 2. An unbound action\n\t// 3. A static action (that is, bound to a collection)\n\tlet useEnabledExpression = false;\n\tif (dataField.ActionTarget?.annotations?.Core?.OperationAvailable !== undefined) {\n\t\t// Unbound action. Is recognised, but getExpressionFromAnnotation checks for isBound = true, so not generated.\n\t\tconst isBound = dataField.ActionTarget?.isBound;\n\t\t//overload action\n\t\tconst overloadAction = isBound && dataField.ActionTarget?.sourceType !== sEntityType;\n\t\t//static action\n\t\tconst staticAction = dataField.ActionTarget?.parameters[0]?.isCollection;\n\t\t//copy action\n\t\tif (!isBound || overloadAction || staticAction) {\n\t\t\tuseEnabledExpression = true;\n\t\t}\n\t}\n\treturn useEnabledExpression;\n}\n\n/**\n * Updates the table control configuration with Tree-Table specific information.\n * @param tableConfiguration The table configuration\n * @param tableSettings Settings from the manifest\n * @param converterContext The instance of the converter context\n */\nfunction updateTreeTableManifestConfiguration(\n\ttableConfiguration: TableControlConfiguration,\n\ttableSettings: TableManifestSettingsConfiguration,\n\tconverterContext: ConverterContext\n): void {\n\tconst dataModelObjectPath = converterContext.getDataModelObjectPath();\n\ttableConfiguration.hierarchyQualifier = tableSettings.hierarchyQualifier;\n\tconst hierarchyParentNavigationPropertyPath = getHierarchyParentNavigationPropertyPath(\n\t\tdataModelObjectPath,\n\t\ttableConfiguration.hierarchyQualifier!\n\t);\n\tconst nonUpdatableNavigationProperties = getNonUpdatableNavigationProperties(dataModelObjectPath);\n\ttableConfiguration.isHierarchyParentNodeUpdatable = !nonUpdatableNavigationProperties?.includes(hierarchyParentNavigationPropertyPath);\n\ttableConfiguration.isNodeMovable = getCustomFunctionInfo(tableSettings.isNodeMovable, tableConfiguration);\n\ttableConfiguration.isNodeCopyable = getCustomFunctionInfo(tableSettings.isNodeCopyable, tableConfiguration);\n\ttableConfiguration.isMoveToPositionAllowed = getCustomFunctionInfo(tableSettings.isMoveToPositionAllowed, tableConfiguration);\n\ttableConfiguration.isCopyToPositionAllowed = getCustomFunctionInfo(tableSettings.isCopyToPositionAllowed, tableConfiguration);\n\ttableConfiguration.createEnablement = getCustomFunctionInfo(tableSettings.creationMode?.isCreateEnabled, tableConfiguration);\n\n\tif (tableSettings.creationMode?.nodeType?.propertyName && tableSettings.creationMode?.nodeType?.values) {\n\t\tconst values = tableSettings.creationMode.nodeType.values;\n\t\ttableConfiguration.nodeType = {\n\t\t\tpropertyName: tableSettings.creationMode.nodeType.propertyName,\n\t\t\tvalues: Object.keys(values).map((value) => {\n\t\t\t\tconst nodeTypeInfo = values[value];\n\n\t\t\t\tif (typeof nodeTypeInfo === \"string\") {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tvalue,\n\t\t\t\t\t\ttext: nodeTypeInfo\n\t\t\t\t\t};\n\t\t\t\t} else {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tvalue,\n\t\t\t\t\t\ttext: nodeTypeInfo.label,\n\t\t\t\t\t\tcreationDialogFields:\n\t\t\t\t\t\t\ttableConfiguration.creationMode === CreationMode.CreationDialog\n\t\t\t\t\t\t\t\t? getFieldList(nodeTypeInfo.creationFields, converterContext)\n\t\t\t\t\t\t\t\t: undefined\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t})\n\t\t};\n\t}\n\n\t// Create in place\n\tif (tableSettings.creationMode?.createInPlace) {\n\t\ttableConfiguration.createInPlace = true;\n\t}\n}\n\nexport function getCustomFunctionInfo(\n\tvalue: string | undefined,\n\ttableConfiguration: TableControlConfiguration\n): ExternalMethodConfig | undefined {\n\tif (!value) {\n\t\treturn undefined;\n\t}\n\tconst lastDotIndex = value.lastIndexOf(\".\") || -1;\n\tconst moduleName = value.substring(0, lastDotIndex).replace(/\\./gi, \"/\");\n\tconst methodName = value.substring(lastDotIndex + 1);\n\n\t// Add the custom module in the list of required modules if necessary\n\tif (!moduleName.startsWith(\"/extension/\")) {\n\t\tif (!tableConfiguration.additionalRequiredModules) {\n\t\t\ttableConfiguration.additionalRequiredModules = [moduleName];\n\t\t} else if (!tableConfiguration.additionalRequiredModules.includes(moduleName)) {\n\t\t\ttableConfiguration.additionalRequiredModules.push(moduleName);\n\t\t}\n\t}\n\n\treturn { moduleName, methodName };\n}\n\n/**\n * Retrieve the table control configuration optimistic batch information.\n * @param tableManifestSettings The table configuration\n @returns True if Optimistic batch mode is disabled\n */\nfunction getOptimisticBatchSettingsFromManifest(tableManifestSettings: TableManifestConfiguration): boolean | undefined {\n\t// Optimistic batch is set by default\n\treturn tableManifestSettings?.tableSettings?.disableRequestCache;\n}\n\n/**\n * Gets the settings coming from the manifest related to the mass edit dialog.\n * @param tableSettings The table configuration\n * @param converterContext The instance of the converter context\n * @returns The mass edit configuration.\n */\nexport function getMassEditSettings(\n\ttableSettings: TableManifestSettingsConfiguration,\n\tconverterContext: ConverterContext<PageContextPathTarget>\n): MassEditTableConfiguration {\n\tconst defaultFieldConfiguration = {\n\t\tvisibleFields: [],\n\t\tignoredFields: [],\n\t\toperationGroupingMode:\n\t\t\tconverterContext.getTemplateType() === TemplateType.ListReport\n\t\t\t\t? OperationGroupingMode.Isolated\n\t\t\t\t: OperationGroupingMode.ChangeSet\n\t};\n\tif (!tableSettings.enableMassEdit) {\n\t\treturn { enabled: false, ...defaultFieldConfiguration };\n\t}\n\tif (tableSettings.enableMassEdit === true) {\n\t\treturn { enabled: tableSettings.enableMassEdit, ...defaultFieldConfiguration };\n\t} else if (typeof tableSettings.enableMassEdit === \"object\") {\n\t\treturn {\n\t\t\tenabled: true,\n\t\t\tvisibleFields: getFieldList(tableSettings.enableMassEdit.visibleFields, converterContext),\n\t\t\tignoredFields: getFieldList(tableSettings.enableMassEdit.ignoredFields, converterContext),\n\t\t\toperationGroupingMode:\n\t\t\t\ttableSettings.enableMassEdit.operationGroupingMode &&\n\t\t\t\tObject.values(OperationGroupingMode).includes(tableSettings.enableMassEdit.operationGroupingMode)\n\t\t\t\t\t? tableSettings.enableMassEdit.operationGroupingMode\n\t\t\t\t\t: defaultFieldConfiguration.operationGroupingMode,\n\t\t\tcustomFragment: tableSettings.enableMassEdit.customFragment,\n\t\t\tfromInline: tableSettings.enableMassEdit.fromInline\n\t\t};\n\t}\n\treturn { enabled: false, ...defaultFieldConfiguration };\n}\n\n/**\n * Gets a list of the fields coming from the manifest.\n * @param fields The fields, could be a FieldGroup or fields separated by a comma\n * @param converterContext The instance of the converter context\n * @returns The list of fields.\n */\nfunction getFieldList(fields: string | undefined, converterContext: ConverterContext<PageContextPathTarget>): string[] {\n\tif (!fields) {\n\t\treturn [];\n\t}\n\tif (fields.includes(UIAnnotationTerms.FieldGroup)) {\n\t\tfields = fields.startsWith(\"@\") ? fields : `@${fields}`;\n\t\tconst fieldGroup = converterContext.getEntityTypeAnnotation<FieldGroup>(fields);\n\t\tif (isAnnotationOfType<FieldGroup>(fieldGroup.annotation, UIAnnotationTypes.FieldGroupType)) {\n\t\t\treturn fieldGroup.annotation.Data.reduce((properties: string[], field) => {\n\t\t\t\tif (isDataField(field) && isPathAnnotationExpression(field.Value)) {\n\t\t\t\t\tproperties.push(field.Value.path);\n\t\t\t\t}\n\t\t\t\treturn properties;\n\t\t\t}, []);\n\t\t}\n\t\treturn [];\n\t}\n\treturn fields\n\t\t.replace(/\\s/g, \"\")\n\t\t.split(\",\")\n\t\t.map((name) => name.trim());\n}\n\nexport function getTableManifestConfiguration(\n\tlineItemAnnotation: LineItem | undefined,\n\tvisualizationPath: string,\n\tconverterContext: ConverterContext<PageContextPathTarget>,\n\tcheckCondensedLayout = true,\n\tselectionVariantAnnotation?: SelectionVariantType\n): TableControlConfiguration {\n\tconst _manifestWrapper = converterContext.getManifestWrapper();\n\tconst tableManifestSettings: TableManifestConfiguration = converterContext.getManifestControlConfiguration(visualizationPath);\n\tconst tableSettings = tableManifestSettings?.tableSettings ?? {};\n\tconst globalFEManifestSettings = _manifestWrapper.getSapFeManifestConfiguration();\n\tconst defaultCreationMode =\n\t\tglobalFEManifestSettings?.macros?.table?.defaultCreationMode === \"InlineCreationRows\" ? CreationMode.InlineCreationRows : undefined;\n\tconst creationMode: CreationMode = tableSettings.creationMode?.name ?? defaultCreationMode ?? CreationMode.NewPage;\n\tconst enableAutoColumnWidth = !_manifestWrapper.isPhone();\n\tconst disableCopyToClipboard = tableSettings.disableCopyToClipboard;\n\tconst templateType = converterContext.getTemplateType();\n\tconst isCondensedTableLayoutCompliant = checkCondensedLayout && _manifestWrapper.isCondensedLayoutCompliant();\n\tconst oFilterConfiguration = lineItemAnnotation\n\t\t? getFilterConfiguration(tableSettings, lineItemAnnotation, converterContext, selectionVariantAnnotation)\n\t\t: {};\n\tconst customValidationFunction = tableSettings.creationMode?.customValidationFunction;\n\tconst exportRequestSize = tableSettings.exportRequestSize;\n\tconst tableType = getTableType(converterContext, tableManifestSettings);\n\tconst analyticalConfiguration = tableSettings.analyticalConfiguration;\n\t// By default, paste is enabled on an ObjectPage and on a ListReport with a draft TreeTable\n\tconst enablePaste =\n\t\ttableSettings.enablePaste ??\n\t\t(converterContext.getTemplateType() === \"ObjectPage\" ||\n\t\t\t(tableType === \"TreeTable\" && (converterContext.getEntitySet() as EntitySet)?.annotations.Common?.DraftRoot !== undefined));\n\tconst tableRowMode = _getTableMode(tableType, tableSettings, templateType === TemplateType.ListReport);\n\tconst defaultScrollThreshold = tableType !== \"ResponsiveTable\" ? 300 : undefined;\n\tconst defaultPopinLayout =\n\t\ttableType === \"ResponsiveTable\"\n\t\t\t? tableSettings?.popinLayout ?? globalFEManifestSettings?.macros?.table?.defaultPopinLayout ?? \"Block\"\n\t\t\t: undefined;\n\tconst condensedTableLayout = _getCondensedTableLayout(tableType, tableSettings);\n\tlet inlineCreationRowsHiddenInEditMode = false;\n\tif (tableSettings.creationMode?.inlineCreationRowsHiddenInEditMode) {\n\t\tinlineCreationRowsHiddenInEditMode =\n\t\t\ttypeof tableSettings.creationMode?.inlineCreationRowsHiddenInEditMode === \"string\"\n\t\t\t\t? tableSettings.creationMode?.inlineCreationRowsHiddenInEditMode === \"true\"\n\t\t\t\t: tableSettings.creationMode?.inlineCreationRowsHiddenInEditMode;\n\t}\n\tlet useTextForNoDataMessages: string;\n\tif (converterContext.getTemplateType() === \"ListReport\") {\n\t\tuseTextForNoDataMessages = \"illustratedMessage-Auto\";\n\t} else {\n\t\tuseTextForNoDataMessages = _manifestWrapper.getUseTextForNoDataMessages() ? \"text\" : \"illustratedMessage-ExtraSmall\";\n\t}\n\n\tconst oConfiguration = {\n\t\t// If no createAtEnd is specified it will be false for Inline/CreationDialog create and true otherwise\n\t\tcreateAtEnd:\n\t\t\ttableSettings.creationMode?.createAtEnd !== undefined\n\t\t\t\t? tableSettings.creationMode?.createAtEnd\n\t\t\t\t: ![CreationMode.Inline, CreationMode.CreationDialog].includes(creationMode),\n\t\tcreationMode: creationMode,\n\t\tcreationDialogFields:\n\t\t\tcreationMode === CreationMode.CreationDialog\n\t\t\t\t? getFieldList(tableSettings.creationMode?.creationFields, converterContext)\n\t\t\t\t: undefined,\n\t\tcustomValidationFunction: customValidationFunction,\n\t\thasDataStateIndicatorFilter: templateType === TemplateType.ListReport,\n\t\t// if a custom validation function is provided, disableAddRowButtonForEmptyData should not be considered, i.e. set to false\n\t\tdisableAddRowButtonForEmptyData: !customValidationFunction ? !!tableSettings.creationMode?.disableAddRowButtonForEmptyData : false,\n\t\tenableAutoColumnWidth: enableAutoColumnWidth,\n\t\tenablePastingOfComputedProperties: tableSettings.enablePastingOfComputedProperties,\n\t\tignoredFields: tableSettings.ignoredFields,\n\t\treadOnly: tableSettings.readOnly || (tableType === \"AnalyticalTable\" ? true : undefined), // Analytical tables are always read-only for the time being\n\t\tenableExport: _getEnableExport(tableSettings, converterContext, enablePaste),\n\t\texportFileName: tableSettings.exportFileName,\n\t\texportSheetName: tableSettings.exportSheetName,\n\t\tanalyticalConfiguration,\n\t\tfrozenColumnCount: _getFrozenColumnCount(tableSettings),\n\t\tenableColumnFreeze: getEnableColumnFreeze(tableSettings),\n\t\twidthIncludingColumnHeader: _getWidthIncludingColumnHeader(tableSettings),\n\t\tenableFullScreen: _getFullScreenBasedOnDevice(tableSettings, converterContext, _manifestWrapper.isPhone()),\n\t\tmassEdit: getMassEditSettings(tableSettings, converterContext),\n\t\tenableAddCardToInsights: tableSettings?.enableAddCardToInsights,\n\t\tenablePaste: enablePaste,\n\t\tdisableCopyToClipboard: disableCopyToClipboard,\n\t\theaderVisible: true,\n\t\theader: tableSettings.header,\n\t\tmultiSelectMode: _getMultiSelectMode(tableSettings, tableType, converterContext),\n\t\tselectionLimit: _getTableSelectionLimit(tableSettings),\n\t\tinlineCreationRowCount: _getTableInlineCreationRowCount(tableSettings),\n\t\tinlineCreationRowsHiddenInEditMode: inlineCreationRowsHiddenInEditMode,\n\t\tshowRowCount: tableSettings?.quickVariantSelection?.paths ? false : !_manifestWrapper.getViewConfiguration()?.showCounts,\n\t\ttype: tableType,\n\t\tdisableRequestCache: getOptimisticBatchSettingsFromManifest(tableManifestSettings),\n\t\tuseCondensedTableLayout: condensedTableLayout && isCondensedTableLayoutCompliant,\n\t\tisCompactType: _manifestWrapper.isCompactType(),\n\t\texportRequestSize: exportRequestSize,\n\t\tenableUploadPlugin: !!converterContext.getAnnotationEntityType().annotations?.UI?.MediaResource?.Stream,\n\t\tmodeForNoDataMessage: useTextForNoDataMessages,\n\t\tscrollThreshold: tableSettings.scrollThreshold ?? defaultScrollThreshold,\n\t\tthreshold: tableSettings.threshold,\n\t\tpopinLayout: tableType === \"ResponsiveTable\" ? tableSettings.popinLayout ?? defaultPopinLayout : undefined\n\t};\n\n\tconst tableConfiguration: TableControlConfiguration = { ...oConfiguration, ...tableRowMode, ...oFilterConfiguration };\n\ttableConfiguration.beforeRebindTable = tableSettings.beforeRebindTable;\n\ttableConfiguration.selectionChange = tableSettings.selectionChange;\n\ttableConfiguration.rowPress = tableSettings.rowPress;\n\tif (tableType === \"TreeTable\") {\n\t\tupdateTreeTableManifestConfiguration(tableConfiguration, tableSettings, converterContext);\n\t}\n\n\tif (tableSettings.headerVisible !== undefined) {\n\t\ttableConfiguration.headerVisible = tableSettings.headerVisible;\n\t}\n\n\tif (tableConfiguration.creationMode === CreationMode.External) {\n\t\ttableConfiguration.outboundCreation = tableSettings.creationMode?.outbound;\n\t}\n\n\treturn tableConfiguration;\n}\n\nfunction getTableType(\n\tconverterContext: ConverterContext<PageContextPathTarget>,\n\ttableManifestSettings?: TableManifestConfiguration\n): TableType {\n\tif (tableManifestSettings?.tableSettings?.type) {\n\t\t// in case the application specified a table type we will use this one\n\t\treturn tableManifestSettings.tableSettings.type;\n\t}\n\n\t// default is the ResponsiveTable\n\treturn \"ResponsiveTable\";\n}\n\nexport default {\n\tgetTableActions,\n\tcreateTableVisualization,\n\tcreateDefaultTableVisualization,\n\tgetCapabilityRestriction,\n\tgetSelectionMode,\n\tgetP13nMode,\n\tgetStandardActionsConfiguration,\n\tgetTableAnnotationConfiguration,\n\tsplitPath,\n\tgetSelectionVariantConfiguration,\n\tgetTableManifestConfiguration,\n\tupdateTableVisualizationForType,\n\tcreateRequestedProperties,\n\tgetNavigationTargetPath,\n\tgetCustomFunctionInfo\n};\n"],"mappings":"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","ignoreList":[],"file":"Table-dbg.js"}