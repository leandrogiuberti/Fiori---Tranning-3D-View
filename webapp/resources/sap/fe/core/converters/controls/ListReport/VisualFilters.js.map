{"version":3,"file":"VisualFilters.js","names":["_checkVFAggregation","converterContext","chartAnnotation","aggregationHelper","sMeasurePath","bGroupable","bAggregatable","sMeasure","customAggregates","getCustomAggregateDefinitions","aTransAggregations","getTransAggregations","aCustAggMeasure","$target","Measures","filter","custAgg","qualifier","value","length","DynamicMeasures","getConverterContextFor","getAbsoluteAnnotationPath","getDataModelObjectPath","targetObject","Name","toString","getAggregatedProperty","getAggregatedProperties","sDimension","Dimensions","some","oAggregate","AggregatableProperty","aAggregatablePropsFromContainer","getAggregatableProperties","aggregatableProp","Property","aGroupablePropsFromContainer","getGroupableProperties","groupableProp","getVisualFilters","entityType","sPropertyPath","FilterFields","visualFilter","oVisualFilter","valueList","oVFPath","annotationQualifierSplit","split","qualifierVL","property","resolvePath","annotations","Common","isValueListWithFixedValues","ValueListWithFixedValues","valueOf","collectionPath","CollectionPath","collectionPathConverterContext","getEntitySet","name","valueListParams","Parameters","outParameter","inParameters","aParameters","parameterEntityType","getParameterEntityType","keys","map","key","getContextPath","_addInParameters","valueListParam","localDataProperty","LocalDataProperty","valueListProperty","ValueListProperty","$Type","bNotFilterable","isPropertyFilterable","push","forEach","oInParameter","mainEntitySetInMappingAllowedExpression","compileExpression","checkFilterExpressionRestrictions","valueListEntitySetInMappingAllowedExpression","Error","pvQualifier","PresentationVariantQualifier","svQualifier","SelectionVariantQualifier","pvAnnotation","getEntityType","UI","AggregationHelper","isAnalyticsSupported","undefined","aVisualizations","Visualizations","contextPath","visualization","term","_bgetVFAggregation","bDimensionHidden","Hidden","bDimensionHiddenFilter","HiddenFilter","fullyQualifiedName","entitySetName","presentationAnnotation","relativeAnnotationPath","getRelativeAnnotationPath","valuelistProperty","bIsRange","getDiagnostics","addIssue","IssueCategory","Annotation","IssueSeverity","High","IssueType","MALFORMED_VISUALFILTERS","VALUELIST","bIsMainEntitySetSingleSelection","multipleSelectionAllowed","not","required","getIsRequired","svAnnotation","getEntityTypeAnnotation","annotation","selectionVariantAnnotation","relativeSelectionVariantPath","requiredProperties","sEntitySet","sNavigationProperty","oEntitySetConverterContext","aRestrictedProperties","startingEntitySet","Capabilities","NavigationRestrictions","RestrictedProperties","oRestrictedProperty","find","restrictedNavProp","NavigationProperty","type","FilterRestrictions","RequiredProperties","entitySetOrSingleton","isEntitySet","requiredPropertyPaths","oRequireProperty","concat","showOverlayInitially","selectOptions","SelectOptions","reduce","results","oSelectOption","PropertyName","parameterOptions","oParameterOption","sort","a","b","localeCompare","sPath","includes","sDimensionType","renderLineChart","ChartType","CHART","PRESENTATIONVARIANT","Manifest","_exports","inParams","properties","isParam","element"],"sources":["./VisualFilters.ts"],"sourcesContent":["import type { AnnotationPath, EntitySet, EntityType, Property, PropertyPath } from \"@sap-ux/vocabularies-types\";\nimport type { AggregatablePropertyType, CustomAggregate } from \"@sap-ux/vocabularies-types/vocabularies/Aggregation\";\nimport type { AggregatedProperty } from \"@sap-ux/vocabularies-types/vocabularies/Analytics\";\nimport type { NavigationPropertyRestrictionTypes } from \"@sap-ux/vocabularies-types/vocabularies/Capabilities\";\nimport type {\n\tValueList,\n\tValueListParameterIn,\n\tValueListParameterInOut,\n\tValueListParameterOut\n} from \"@sap-ux/vocabularies-types/vocabularies/Common\";\nimport type { PropertyAnnotations_Common } from \"@sap-ux/vocabularies-types/vocabularies/Common_Edm\";\nimport type { Chart, ParameterTypes, SelectionVariant } from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport type { CompiledBindingToolkitExpression } from \"sap/fe/base/BindingToolkit\";\nimport { compileExpression, not } from \"sap/fe/base/BindingToolkit\";\nimport type ConverterContext from \"sap/fe/core/converters/ConverterContext\";\nimport type { FilterFieldManifestConfiguration } from \"sap/fe/core/converters/ManifestSettings\";\nimport type { PageContextPathTarget } from \"sap/fe/core/converters/TemplateConverter\";\nimport { AggregationHelper } from \"sap/fe/core/converters/helpers/Aggregation\";\nimport { IssueCategory, IssueSeverity, IssueType } from \"sap/fe/core/converters/helpers/IssueManager\";\nimport { isEntitySet } from \"sap/fe/core/helpers/TypeGuards\";\nimport { checkFilterExpressionRestrictions } from \"sap/fe/core/templating/DataModelPathHelper\";\nimport { getIsRequired, isPropertyFilterable } from \"sap/fe/core/templating/FilterTemplating\";\n\nexport type VisualFilters = {\n\tdimensionPath?: string;\n\tmeasurePath?: string;\n\tlabel?: string;\n\tchartAnnotation?: string;\n\tpresentationAnnotation?: string;\n\tvisible?: boolean;\n\toutParameter?: string;\n\tinParameters?: object[];\n\tvaluelistProperty?: string;\n\tcontextPath?: string;\n\tselectionVariantAnnotation?: string;\n\tmultipleSelectionAllowed?: CompiledBindingToolkitExpression;\n\trequired?: boolean;\n\tshowOverlayInitially?: boolean;\n\trenderLineChart?: boolean;\n\trequiredProperties?: string[];\n\tisValueListWithFixedValues?: boolean;\n\tinitialChartBindingEnabled?: boolean;\n};\n\n/**\n * Checks that measures and dimensions of the visual filter chart can be aggregated and grouped.\n * @param converterContext The converter context\n * @param chartAnnotation The chart annotation\n * @param aggregationHelper The aggregation helper\n * @returns `true` if the measure can be grouped and aggregated\n */\nconst _checkVFAggregation = function (\n\tconverterContext: ConverterContext<PageContextPathTarget>,\n\tchartAnnotation: AnnotationPath<Chart>,\n\taggregationHelper: AggregationHelper\n): boolean | undefined {\n\tlet sMeasurePath, bGroupable, bAggregatable;\n\tlet sMeasure: string | undefined;\n\tconst customAggregates = aggregationHelper.getCustomAggregateDefinitions();\n\tlet aTransAggregations = aggregationHelper.getTransAggregations();\n\tlet aCustAggMeasure = [] as Array<CustomAggregate>;\n\t// if the chart definition has custom aggregates, then consider them, else fall back to the measures with transformation aggregates\n\tif (chartAnnotation?.$target?.Measures) {\n\t\taCustAggMeasure = customAggregates.filter(function (custAgg: CustomAggregate) {\n\t\t\treturn custAgg.qualifier === chartAnnotation?.$target?.Measures?.[0]?.value;\n\t\t});\n\t\tsMeasure = aCustAggMeasure.length > 0 ? aCustAggMeasure[0].qualifier : chartAnnotation?.$target?.Measures?.[0]?.value;\n\t}\n\t// consider dynamic measures only if there are no measures with custom aggregates\n\tif (!aCustAggMeasure[0] && chartAnnotation?.$target?.DynamicMeasures) {\n\t\tsMeasure = converterContext\n\t\t\t.getConverterContextFor<AggregatedProperty>(\n\t\t\t\tconverterContext.getAbsoluteAnnotationPath(chartAnnotation.$target.DynamicMeasures?.[0]?.value)\n\t\t\t)\n\t\t\t.getDataModelObjectPath()\n\t\t\t.targetObject?.Name.toString();\n\t\taTransAggregations = aggregationHelper.getAggregatedProperty();\n\t} else {\n\t\taTransAggregations = aggregationHelper.getAggregatedProperties()[0] as unknown as AggregatedProperty[];\n\t}\n\n\tconst sDimension = chartAnnotation?.$target?.Dimensions[0]?.value;\n\n\tif (\n\t\tcustomAggregates.some(function (custAgg: CustomAggregate) {\n\t\t\treturn custAgg.qualifier === sMeasure;\n\t\t})\n\t) {\n\t\t// Custom aggregate match found\n\t\tsMeasurePath = sMeasure;\n\t\tbAggregatable = true;\n\t} else if (aTransAggregations && aTransAggregations[0]) {\n\t\taTransAggregations.some(function (oAggregate) {\n\t\t\tif (oAggregate.Name === sMeasure) {\n\t\t\t\tsMeasurePath = oAggregate?.AggregatableProperty.value;\n\t\t\t}\n\t\t});\n\t}\n\tif (!bAggregatable) {\n\t\tconst aAggregatablePropsFromContainer = aggregationHelper.getAggregatableProperties();\n\t\tif (aAggregatablePropsFromContainer && aAggregatablePropsFromContainer.length) {\n\t\t\tfor (const aggregatableProp of aAggregatablePropsFromContainer) {\n\t\t\t\tif ((aggregatableProp as AggregatablePropertyType)?.Property?.value === sMeasurePath) {\n\t\t\t\t\tbAggregatable = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tconst aGroupablePropsFromContainer = aggregationHelper.getGroupableProperties();\n\tif (aGroupablePropsFromContainer && aGroupablePropsFromContainer.length) {\n\t\tfor (const groupableProp of aGroupablePropsFromContainer) {\n\t\t\tif (groupableProp?.value === sDimension) {\n\t\t\t\tbGroupable = true;\n\t\t\t}\n\t\t}\n\t}\n\treturn bAggregatable && bGroupable;\n};\n\nexport type ParameterType = {\n\tlocalDataProperty: string;\n\tvalueListProperty: string;\n};\n\n/**\n * Method to get the visual filters object for a property.\n * @param entityType The converter context\n * @param converterContext The chart annotation\n * @param sPropertyPath The aggregation helper\n * @param FilterFields The aggregation helper\n * @returns The visual filters\n */\nexport function getVisualFilters(\n\tentityType: EntityType,\n\tconverterContext: ConverterContext<PageContextPathTarget>,\n\tsPropertyPath: string,\n\tFilterFields: Record<string, FilterFieldManifestConfiguration>\n): VisualFilters | undefined {\n\tlet visualFilter: VisualFilters | undefined;\n\tconst oVisualFilter: FilterFieldManifestConfiguration = FilterFields[sPropertyPath];\n\tif (oVisualFilter?.visualFilter?.valueList) {\n\t\tconst oVFPath = oVisualFilter?.visualFilter?.valueList;\n\t\tconst annotationQualifierSplit = oVFPath.split(\"#\");\n\t\tconst qualifierVL = annotationQualifierSplit.length > 1 ? `ValueList#${annotationQualifierSplit[1]}` : annotationQualifierSplit[0];\n\t\tconst property = entityType.resolvePath(sPropertyPath) as Property;\n\t\tconst valueList = property?.annotations?.Common?.[qualifierVL as keyof PropertyAnnotations_Common] as ValueList | undefined;\n\t\tconst isValueListWithFixedValues = (property?.annotations?.Common?.ValueListWithFixedValues?.valueOf() as boolean) || false;\n\t\tif (valueList) {\n\t\t\tconst collectionPath = valueList?.CollectionPath.toString();\n\t\t\tconst collectionPathConverterContext = converterContext.getConverterContextFor<EntitySet>(\n\t\t\t\t`/${collectionPath || converterContext.getEntitySet()?.name}`\n\t\t\t);\n\t\t\tconst valueListParams = valueList?.Parameters;\n\t\t\tlet outParameter: ValueListParameterOut | ValueListParameterInOut | undefined;\n\t\t\tconst inParameters: ParameterType[] = [];\n\t\t\tlet aParameters: string[] = [];\n\t\t\tconst parameterEntityType = collectionPathConverterContext.getParameterEntityType();\n\t\t\taParameters = parameterEntityType\n\t\t\t\t? parameterEntityType.keys.map(function (key) {\n\t\t\t\t\t\treturn key.name;\n\t\t\t\t  })\n\t\t\t\t: [];\n\t\t\tif (converterContext.getContextPath() === collectionPathConverterContext.getContextPath()) {\n\t\t\t\t_addInParameters(inParameters, aParameters, true);\n\t\t\t}\n\t\t\tif (valueListParams) {\n\t\t\t\tfor (const valueListParam of valueListParams) {\n\t\t\t\t\tconst localDataProperty = (valueListParam as ValueListParameterIn).LocalDataProperty?.value;\n\t\t\t\t\tconst valueListProperty = valueListParam.ValueListProperty as string;\n\t\t\t\t\tif (\n\t\t\t\t\t\t(valueListParam?.$Type === \"com.sap.vocabularies.Common.v1.ValueListParameterInOut\" ||\n\t\t\t\t\t\t\tvalueListParam?.$Type === \"com.sap.vocabularies.Common.v1.ValueListParameterOut\") &&\n\t\t\t\t\t\tsPropertyPath === localDataProperty\n\t\t\t\t\t) {\n\t\t\t\t\t\toutParameter = valueListParam;\n\t\t\t\t\t}\n\t\t\t\t\tif (\n\t\t\t\t\t\t(valueListParam?.$Type === \"com.sap.vocabularies.Common.v1.ValueListParameterInOut\" ||\n\t\t\t\t\t\t\tvalueListParam?.$Type === \"com.sap.vocabularies.Common.v1.ValueListParameterIn\") &&\n\t\t\t\t\t\tsPropertyPath !== localDataProperty\n\t\t\t\t\t) {\n\t\t\t\t\t\tconst bNotFilterable = isPropertyFilterable(collectionPathConverterContext, valueListProperty);\n\t\t\t\t\t\tif (!bNotFilterable) {\n\t\t\t\t\t\t\tinParameters.push({\n\t\t\t\t\t\t\t\tlocalDataProperty: localDataProperty,\n\t\t\t\t\t\t\t\tvalueListProperty: valueListProperty\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (inParameters && inParameters.length) {\n\t\t\t\tinParameters.forEach(function (oInParameter) {\n\t\t\t\t\tconst mainEntitySetInMappingAllowedExpression = compileExpression(\n\t\t\t\t\t\tcheckFilterExpressionRestrictions(\n\t\t\t\t\t\t\tconverterContext\n\t\t\t\t\t\t\t\t.getConverterContextFor(converterContext.getAbsoluteAnnotationPath(oInParameter?.localDataProperty))\n\t\t\t\t\t\t\t\t.getDataModelObjectPath(),\n\t\t\t\t\t\t\t[\"SingleValue\"]\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t\tconst valueListEntitySetInMappingAllowedExpression = compileExpression(\n\t\t\t\t\t\tcheckFilterExpressionRestrictions(\n\t\t\t\t\t\t\tcollectionPathConverterContext\n\t\t\t\t\t\t\t\t.getConverterContextFor(\n\t\t\t\t\t\t\t\t\tcollectionPathConverterContext.getAbsoluteAnnotationPath(oInParameter?.valueListProperty)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t.getDataModelObjectPath(),\n\t\t\t\t\t\t\t[\"SingleValue\"]\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t\tif (valueListEntitySetInMappingAllowedExpression === \"true\" && mainEntitySetInMappingAllowedExpression === \"false\") {\n\t\t\t\t\t\tthrow new Error(`FilterRestrictions of ${sPropertyPath} in MainEntitySet and ValueListEntitySet are different`);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\tconst pvQualifier = valueList?.PresentationVariantQualifier;\n\t\t\tconst svQualifier = valueList?.SelectionVariantQualifier;\n\t\t\tconst pvAnnotation = collectionPathConverterContext?.getEntityType().annotations.UI?.[`PresentationVariant#${pvQualifier}`];\n\t\t\tconst aggregationHelper = new AggregationHelper(collectionPathConverterContext.getEntityType(), collectionPathConverterContext);\n\t\t\tif (!aggregationHelper.isAnalyticsSupported()) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tif (pvAnnotation) {\n\t\t\t\tconst aVisualizations = pvAnnotation?.Visualizations;\n\t\t\t\tconst contextPath = `/${valueList?.CollectionPath}` || `/${collectionPathConverterContext?.getEntitySet()?.name}`;\n\t\t\t\tvisualFilter = {};\n\t\t\t\tvisualFilter.contextPath = contextPath;\n\t\t\t\tvisualFilter.isValueListWithFixedValues = isValueListWithFixedValues;\n\t\t\t\tlet chartAnnotation: AnnotationPath<Chart> | undefined;\n\t\t\t\tfor (const visualization of aVisualizations) {\n\t\t\t\t\tif (visualization.$target?.term === \"com.sap.vocabularies.UI.v1.Chart\") {\n\t\t\t\t\t\tchartAnnotation = visualization as AnnotationPath<Chart>;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (chartAnnotation) {\n\t\t\t\t\tconst _bgetVFAggregation: boolean | undefined = _checkVFAggregation(\n\t\t\t\t\t\tcollectionPathConverterContext,\n\t\t\t\t\t\tchartAnnotation,\n\t\t\t\t\t\taggregationHelper\n\t\t\t\t\t);\n\t\t\t\t\tif (!_bgetVFAggregation) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tconst bDimensionHidden = chartAnnotation?.$target?.Dimensions[0]?.$target?.annotations?.UI?.Hidden?.valueOf();\n\t\t\t\t\tconst bDimensionHiddenFilter =\n\t\t\t\t\t\tchartAnnotation?.$target?.Dimensions[0]?.$target?.annotations?.UI?.HiddenFilter?.valueOf();\n\t\t\t\t\tif (bDimensionHidden === true || bDimensionHiddenFilter === true) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t} else if (aVisualizations && aVisualizations.length) {\n\t\t\t\t\t\tvisualFilter.chartAnnotation = chartAnnotation.$target\n\t\t\t\t\t\t\t? collectionPathConverterContext?.getAbsoluteAnnotationPath(\n\t\t\t\t\t\t\t\t\t`${chartAnnotation.$target.fullyQualifiedName}/$AnnotationPath/`\n\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t: undefined;\n\t\t\t\t\t\t// This needs to be done to avoid repetitive entity type in case of non-parameterized entity set e.g /SalesOrderManage/com.c_salesordermanage_sd_aggregate.SalesOrderManage\n\t\t\t\t\t\tconst entitySetName = collectionPathConverterContext.getEntitySet()?.name;\n\t\t\t\t\t\tlet presentationAnnotation;\n\t\t\t\t\t\tconst relativeAnnotationPath = collectionPathConverterContext?.getRelativeAnnotationPath(\n\t\t\t\t\t\t\t`${pvAnnotation.fullyQualifiedName}/`,\n\t\t\t\t\t\t\tcollectionPathConverterContext.getEntityType()\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (parameterEntityType) {\n\t\t\t\t\t\t\tpresentationAnnotation = collectionPathConverterContext.getContextPath() + \"/\" + relativeAnnotationPath;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpresentationAnnotation = \"/\" + entitySetName + \"/\" + relativeAnnotationPath;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvisualFilter.presentationAnnotation = pvAnnotation ? presentationAnnotation : undefined;\n\t\t\t\t\t\tvisualFilter.outParameter = outParameter?.LocalDataProperty?.value;\n\t\t\t\t\t\tvisualFilter.inParameters = inParameters;\n\t\t\t\t\t\tvisualFilter.valuelistProperty = outParameter?.ValueListProperty as string;\n\t\t\t\t\t\tconst bIsRange = checkFilterExpressionRestrictions(\n\t\t\t\t\t\t\tconverterContext\n\t\t\t\t\t\t\t\t.getConverterContextFor(converterContext.getAbsoluteAnnotationPath(sPropertyPath))\n\t\t\t\t\t\t\t\t.getDataModelObjectPath(),\n\t\t\t\t\t\t\t[\"SingleRange\", \"MultiRange\"]\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tif (compileExpression(bIsRange) === \"true\") {\n\t\t\t\t\t\t\tconverterContext\n\t\t\t\t\t\t\t\t.getDiagnostics()\n\t\t\t\t\t\t\t\t.addIssue(IssueCategory.Annotation, IssueSeverity.High, IssueType.MALFORMED_VISUALFILTERS.VALUELIST);\n\t\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst bIsMainEntitySetSingleSelection = checkFilterExpressionRestrictions(\n\t\t\t\t\t\t\tconverterContext\n\t\t\t\t\t\t\t\t.getConverterContextFor(converterContext.getAbsoluteAnnotationPath(sPropertyPath))\n\t\t\t\t\t\t\t\t.getDataModelObjectPath(),\n\t\t\t\t\t\t\t[\"SingleValue\"]\n\t\t\t\t\t\t);\n\t\t\t\t\t\tvisualFilter.multipleSelectionAllowed = compileExpression(not(bIsMainEntitySetSingleSelection));\n\t\t\t\t\t\tvisualFilter.required = getIsRequired(converterContext, sPropertyPath);\n\t\t\t\t\t\tlet svAnnotation: SelectionVariant | undefined;\n\t\t\t\t\t\tif (svQualifier) {\n\t\t\t\t\t\t\tsvAnnotation = collectionPathConverterContext?.getEntityTypeAnnotation<SelectionVariant>(\n\t\t\t\t\t\t\t\t`@UI.SelectionVariant#${svQualifier}`\n\t\t\t\t\t\t\t)?.annotation;\n\t\t\t\t\t\t\tlet selectionVariantAnnotation;\n\t\t\t\t\t\t\tconst relativeSelectionVariantPath = collectionPathConverterContext?.getRelativeAnnotationPath(\n\t\t\t\t\t\t\t\t`${svAnnotation?.fullyQualifiedName}/`,\n\t\t\t\t\t\t\t\tcollectionPathConverterContext.getEntityType()\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (parameterEntityType) {\n\t\t\t\t\t\t\t\tselectionVariantAnnotation =\n\t\t\t\t\t\t\t\t\tcollectionPathConverterContext.getContextPath() + \"/\" + relativeSelectionVariantPath;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tselectionVariantAnnotation = \"/\" + entitySetName + \"/\" + relativeSelectionVariantPath;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvisualFilter.selectionVariantAnnotation = svAnnotation ? selectionVariantAnnotation : undefined;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet requiredProperties: PropertyPath[] = [];\n\t\t\t\t\t\tif (parameterEntityType) {\n\t\t\t\t\t\t\tconst sEntitySet = collectionPath.split(\"/\")[0];\n\t\t\t\t\t\t\tconst sNavigationProperty = collectionPath.split(\"/\")[1];\n\t\t\t\t\t\t\tconst oEntitySetConverterContext = converterContext.getConverterContextFor(`/${sEntitySet}`);\n\t\t\t\t\t\t\tconst aRestrictedProperties =\n\t\t\t\t\t\t\t\toEntitySetConverterContext?.getDataModelObjectPath().startingEntitySet?.annotations?.Capabilities\n\t\t\t\t\t\t\t\t\t?.NavigationRestrictions?.RestrictedProperties;\n\t\t\t\t\t\t\tconst oRestrictedProperty = aRestrictedProperties?.find(\n\t\t\t\t\t\t\t\t(restrictedNavProp: NavigationPropertyRestrictionTypes) => {\n\t\t\t\t\t\t\t\t\tif (restrictedNavProp.NavigationProperty?.type === \"NavigationPropertyPath\") {\n\t\t\t\t\t\t\t\t\t\treturn restrictedNavProp.NavigationProperty.value === sNavigationProperty;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\trequiredProperties = oRestrictedProperty?.FilterRestrictions?.RequiredProperties ?? [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst entitySetOrSingleton = collectionPathConverterContext?.getEntitySet();\n\t\t\t\t\t\t\tif (isEntitySet(entitySetOrSingleton)) {\n\t\t\t\t\t\t\t\trequiredProperties =\n\t\t\t\t\t\t\t\t\tentitySetOrSingleton.annotations.Capabilities?.FilterRestrictions?.RequiredProperties ?? [];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet requiredPropertyPaths: string[] = [];\n\t\t\t\t\t\tif (requiredProperties?.length) {\n\t\t\t\t\t\t\trequiredProperties.forEach(function (oRequireProperty) {\n\t\t\t\t\t\t\t\trequiredPropertyPaths.push(oRequireProperty.value);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\trequiredPropertyPaths = requiredPropertyPaths.concat(aParameters);\n\t\t\t\t\t\tvisualFilter.requiredProperties = requiredPropertyPaths;\n\t\t\t\t\t\tif (converterContext.getContextPath() === collectionPathConverterContext.getContextPath()) {\n\t\t\t\t\t\t\t// if context Path for both visual filter and filter bar are same, consider required Properties as well along with in Parameters\n\t\t\t\t\t\t\t_addInParameters(inParameters, requiredProperties, false);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (visualFilter.requiredProperties?.length) {\n\t\t\t\t\t\t\tif (!visualFilter.inParameters || !visualFilter.inParameters.length) {\n\t\t\t\t\t\t\t\tif (!visualFilter.selectionVariantAnnotation) {\n\t\t\t\t\t\t\t\t\tvisualFilter.showOverlayInitially = true;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tlet selectOptions =\n\t\t\t\t\t\t\t\t\t\tsvAnnotation?.SelectOptions?.reduce((results, oSelectOption) => {\n\t\t\t\t\t\t\t\t\t\t\tif (oSelectOption.PropertyName?.value) {\n\t\t\t\t\t\t\t\t\t\t\t\tresults.push(oSelectOption.PropertyName.value);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t\t\t\t\t}, [] as string[]) ?? [];\n\t\t\t\t\t\t\t\t\tconst parameterOptions =\n\t\t\t\t\t\t\t\t\t\tsvAnnotation?.Parameters?.map(\n\t\t\t\t\t\t\t\t\t\t\t(oParameterOption) => (oParameterOption as ParameterTypes).PropertyName?.value\n\t\t\t\t\t\t\t\t\t\t) || [];\n\t\t\t\t\t\t\t\t\tselectOptions = selectOptions.concat(parameterOptions);\n\t\t\t\t\t\t\t\t\trequiredPropertyPaths = requiredPropertyPaths.sort((a, b) => a.localeCompare(b));\n\t\t\t\t\t\t\t\t\tselectOptions = selectOptions.sort((a, b) => a.localeCompare(b));\n\t\t\t\t\t\t\t\t\tvisualFilter.showOverlayInitially = requiredPropertyPaths.some(function (sPath) {\n\t\t\t\t\t\t\t\t\t\treturn !selectOptions.includes(sPath);\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tvisualFilter.showOverlayInitially = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvisualFilter.showOverlayInitially = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst sDimensionType = chartAnnotation?.$target?.Dimensions[0]?.$target?.type;\n\t\t\t\t\t\tvisualFilter.renderLineChart =\n\t\t\t\t\t\t\tsDimensionType === \"Edm.DateTimeOffset\" ||\n\t\t\t\t\t\t\tsDimensionType === \"Edm.Date\" ||\n\t\t\t\t\t\t\tsDimensionType === \"Edm.TimeOfDay\" ||\n\t\t\t\t\t\t\tchartAnnotation.$target?.ChartType !== \"UI.ChartType/Line\";\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconverterContext\n\t\t\t\t\t\t.getDiagnostics()\n\t\t\t\t\t\t.addIssue(IssueCategory.Annotation, IssueSeverity.High, IssueType.MALFORMED_VISUALFILTERS.CHART);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconverterContext\n\t\t\t\t\t.getDiagnostics()\n\t\t\t\t\t.addIssue(IssueCategory.Annotation, IssueSeverity.High, IssueType.MALFORMED_VISUALFILTERS.PRESENTATIONVARIANT);\n\t\t\t}\n\t\t} else {\n\t\t\tconverterContext\n\t\t\t\t.getDiagnostics()\n\t\t\t\t.addIssue(IssueCategory.Annotation, IssueSeverity.High, IssueType.MALFORMED_VISUALFILTERS.VALUELIST);\n\t\t}\n\t} else {\n\t\tconverterContext.getDiagnostics().addIssue(IssueCategory.Manifest, IssueSeverity.High, IssueType.MALFORMED_VISUALFILTERS.VALUELIST);\n\t}\n\treturn visualFilter;\n}\n\n/**\n * Method to add inparameters from required properties and parameters.\n * @param inParams An array containing existing inparams\n * @param properties An array containing either requiredproperties or parameters\n * @param isParam A boolean flag indicating whether passed properties are parameters\n */\nexport function _addInParameters(inParams: ParameterType[], properties: PropertyPath[] | string[], isParam: boolean): void {\n\tproperties.forEach(function (element) {\n\t\tconst property = isParam ? element : (element as PropertyPath).value;\n\t\tinParams.push({\n\t\t\tlocalDataProperty: property as string,\n\t\t\tvalueListProperty: property as string\n\t\t});\n\t});\n}\n"],"mappings":"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","ignoreList":[]}