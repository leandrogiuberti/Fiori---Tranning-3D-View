{"version":3,"names":["_checkVFAggregation","converterContext","chartAnnotation","aggregationHelper","sMeasurePath","bGroupable","bAggregatable","sMeasure","customAggregates","getCustomAggregateDefinitions","aTransAggregations","getTransAggregations","aCustAggMeasure","$target","Measures","filter","custAgg","qualifier","value","length","DynamicMeasures","getConverterContextFor","getAbsoluteAnnotationPath","getDataModelObjectPath","targetObject","Name","toString","getAggregatedProperty","getAggregatedProperties","sDimension","Dimensions","some","oAggregate","AggregatableProperty","aAggregatablePropsFromContainer","getAggregatableProperties","aggregatableProp","Property","aGroupablePropsFromContainer","getGroupableProperties","groupableProp","getVisualFilters","entityType","sPropertyPath","FilterFields","visualFilter","oVisualFilter","valueList","oVFPath","annotationQualifierSplit","split","qualifierVL","property","resolvePath","annotations","Common","isValueListWithFixedValues","ValueListWithFixedValues","valueOf","collectionPath","CollectionPath","collectionPathConverterContext","getEntitySet","name","valueListParams","Parameters","outParameter","inParameters","aParameters","parameterEntityType","getParameterEntityType","keys","map","key","getContextPath","_addInParameters","valueListParam","localDataProperty","LocalDataProperty","valueListProperty","ValueListProperty","$Type","bNotFilterable","isPropertyFilterable","push","forEach","oInParameter","mainEntitySetInMappingAllowedExpression","compileExpression","checkFilterExpressionRestrictions","valueListEntitySetInMappingAllowedExpression","Error","pvQualifier","PresentationVariantQualifier","svQualifier","SelectionVariantQualifier","pvAnnotation","getEntityType","UI","AggregationHelper","isAnalyticsSupported","undefined","aVisualizations","Visualizations","contextPath","visualization","term","_bgetVFAggregation","bDimensionHidden","Hidden","bDimensionHiddenFilter","HiddenFilter","fullyQualifiedName","entitySetName","presentationAnnotation","relativeAnnotationPath","getRelativeAnnotationPath","valuelistProperty","bIsRange","getDiagnostics","addIssue","IssueCategory","Annotation","IssueSeverity","High","IssueType","MALFORMED_VISUALFILTERS","VALUELIST","bIsMainEntitySetSingleSelection","multipleSelectionAllowed","not","required","getIsRequired","svAnnotation","getEntityTypeAnnotation","annotation","selectionVariantAnnotation","relativeSelectionVariantPath","requiredProperties","sEntitySet","sNavigationProperty","oEntitySetConverterContext","aRestrictedProperties","startingEntitySet","Capabilities","NavigationRestrictions","RestrictedProperties","oRestrictedProperty","find","restrictedNavProp","NavigationProperty","type","FilterRestrictions","RequiredProperties","entitySetOrSingleton","isEntitySet","requiredPropertyPaths","oRequireProperty","concat","showOverlayInitially","selectOptions","SelectOptions","reduce","results","oSelectOption","PropertyName","parameterOptions","oParameterOption","sort","a","b","localeCompare","sPath","includes","sDimensionType","renderLineChart","ChartType","CHART","PRESENTATIONVARIANT","Manifest","_exports","inParams","properties","isParam","element"],"sourceRoot":".","sources":["VisualFilters.ts"],"sourcesContent":["import type { AnnotationPath, EntitySet, EntityType, Property, PropertyPath } from \"@sap-ux/vocabularies-types\";\nimport type { AggregatablePropertyType, CustomAggregate } from \"@sap-ux/vocabularies-types/vocabularies/Aggregation\";\nimport type { AggregatedProperty } from \"@sap-ux/vocabularies-types/vocabularies/Analytics\";\nimport type { NavigationPropertyRestrictionTypes } from \"@sap-ux/vocabularies-types/vocabularies/Capabilities\";\nimport type {\n\tValueList,\n\tValueListParameterIn,\n\tValueListParameterInOut,\n\tValueListParameterOut\n} from \"@sap-ux/vocabularies-types/vocabularies/Common\";\nimport type { PropertyAnnotations_Common } from \"@sap-ux/vocabularies-types/vocabularies/Common_Edm\";\nimport type { Chart, ParameterTypes, SelectionVariant } from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport type { CompiledBindingToolkitExpression } from \"sap/fe/base/BindingToolkit\";\nimport { compileExpression, not } from \"sap/fe/base/BindingToolkit\";\nimport type ConverterContext from \"sap/fe/core/converters/ConverterContext\";\nimport type { FilterFieldManifestConfiguration } from \"sap/fe/core/converters/ManifestSettings\";\nimport type { PageContextPathTarget } from \"sap/fe/core/converters/TemplateConverter\";\nimport { AggregationHelper } from \"sap/fe/core/converters/helpers/Aggregation\";\nimport { IssueCategory, IssueSeverity, IssueType } from \"sap/fe/core/converters/helpers/IssueManager\";\nimport { isEntitySet } from \"sap/fe/core/helpers/TypeGuards\";\nimport { checkFilterExpressionRestrictions } from \"sap/fe/core/templating/DataModelPathHelper\";\nimport { getIsRequired, isPropertyFilterable } from \"sap/fe/core/templating/FilterTemplating\";\n\nexport type VisualFilters = {\n\tdimensionPath?: string;\n\tmeasurePath?: string;\n\tlabel?: string;\n\tchartAnnotation?: string;\n\tpresentationAnnotation?: string;\n\tvisible?: boolean;\n\toutParameter?: string;\n\tinParameters?: object[];\n\tvaluelistProperty?: string;\n\tcontextPath?: string;\n\tselectionVariantAnnotation?: string;\n\tmultipleSelectionAllowed?: CompiledBindingToolkitExpression;\n\trequired?: boolean;\n\tshowOverlayInitially?: boolean;\n\trenderLineChart?: boolean;\n\trequiredProperties?: string[];\n\tisValueListWithFixedValues?: boolean;\n\tinitialChartBindingEnabled?: boolean;\n};\n\n/**\n * Checks that measures and dimensions of the visual filter chart can be aggregated and grouped.\n * @param converterContext The converter context\n * @param chartAnnotation The chart annotation\n * @param aggregationHelper The aggregation helper\n * @returns `true` if the measure can be grouped and aggregated\n */\nconst _checkVFAggregation = function (\n\tconverterContext: ConverterContext<PageContextPathTarget>,\n\tchartAnnotation: AnnotationPath<Chart>,\n\taggregationHelper: AggregationHelper\n): boolean | undefined {\n\tlet sMeasurePath, bGroupable, bAggregatable;\n\tlet sMeasure: string | undefined;\n\tconst customAggregates = aggregationHelper.getCustomAggregateDefinitions();\n\tlet aTransAggregations = aggregationHelper.getTransAggregations();\n\tlet aCustAggMeasure = [] as Array<CustomAggregate>;\n\t// if the chart definition has custom aggregates, then consider them, else fall back to the measures with transformation aggregates\n\tif (chartAnnotation?.$target?.Measures) {\n\t\taCustAggMeasure = customAggregates.filter(function (custAgg: CustomAggregate) {\n\t\t\treturn custAgg.qualifier === chartAnnotation?.$target?.Measures?.[0]?.value;\n\t\t});\n\t\tsMeasure = aCustAggMeasure.length > 0 ? aCustAggMeasure[0].qualifier : chartAnnotation?.$target?.Measures?.[0]?.value;\n\t}\n\t// consider dynamic measures only if there are no measures with custom aggregates\n\tif (!aCustAggMeasure[0] && chartAnnotation?.$target?.DynamicMeasures) {\n\t\tsMeasure = converterContext\n\t\t\t.getConverterContextFor<AggregatedProperty>(\n\t\t\t\tconverterContext.getAbsoluteAnnotationPath(chartAnnotation.$target.DynamicMeasures?.[0]?.value)\n\t\t\t)\n\t\t\t.getDataModelObjectPath()\n\t\t\t.targetObject?.Name.toString();\n\t\taTransAggregations = aggregationHelper.getAggregatedProperty();\n\t} else {\n\t\taTransAggregations = aggregationHelper.getAggregatedProperties()[0] as unknown as AggregatedProperty[];\n\t}\n\n\tconst sDimension = chartAnnotation?.$target?.Dimensions[0]?.value;\n\n\tif (\n\t\tcustomAggregates.some(function (custAgg: CustomAggregate) {\n\t\t\treturn custAgg.qualifier === sMeasure;\n\t\t})\n\t) {\n\t\t// Custom aggregate match found\n\t\tsMeasurePath = sMeasure;\n\t\tbAggregatable = true;\n\t} else if (aTransAggregations && aTransAggregations[0]) {\n\t\taTransAggregations.some(function (oAggregate) {\n\t\t\tif (oAggregate.Name === sMeasure) {\n\t\t\t\tsMeasurePath = oAggregate?.AggregatableProperty.value;\n\t\t\t}\n\t\t});\n\t}\n\tif (!bAggregatable) {\n\t\tconst aAggregatablePropsFromContainer = aggregationHelper.getAggregatableProperties();\n\t\tif (aAggregatablePropsFromContainer && aAggregatablePropsFromContainer.length) {\n\t\t\tfor (const aggregatableProp of aAggregatablePropsFromContainer) {\n\t\t\t\tif ((aggregatableProp as AggregatablePropertyType)?.Property?.value === sMeasurePath) {\n\t\t\t\t\tbAggregatable = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tconst aGroupablePropsFromContainer = aggregationHelper.getGroupableProperties();\n\tif (aGroupablePropsFromContainer && aGroupablePropsFromContainer.length) {\n\t\tfor (const groupableProp of aGroupablePropsFromContainer) {\n\t\t\tif (groupableProp?.value === sDimension) {\n\t\t\t\tbGroupable = true;\n\t\t\t}\n\t\t}\n\t}\n\treturn bAggregatable && bGroupable;\n};\n\nexport type ParameterType = {\n\tlocalDataProperty: string;\n\tvalueListProperty: string;\n};\n\n/**\n * Method to get the visual filters object for a property.\n * @param entityType The converter context\n * @param converterContext The chart annotation\n * @param sPropertyPath The aggregation helper\n * @param FilterFields The aggregation helper\n * @returns The visual filters\n */\nexport function getVisualFilters(\n\tentityType: EntityType,\n\tconverterContext: ConverterContext<PageContextPathTarget>,\n\tsPropertyPath: string,\n\tFilterFields: Record<string, FilterFieldManifestConfiguration>\n): VisualFilters | undefined {\n\tlet visualFilter: VisualFilters | undefined;\n\tconst oVisualFilter: FilterFieldManifestConfiguration = FilterFields[sPropertyPath];\n\tif (oVisualFilter?.visualFilter?.valueList) {\n\t\tconst oVFPath = oVisualFilter?.visualFilter?.valueList;\n\t\tconst annotationQualifierSplit = oVFPath.split(\"#\");\n\t\tconst qualifierVL = annotationQualifierSplit.length > 1 ? `ValueList#${annotationQualifierSplit[1]}` : annotationQualifierSplit[0];\n\t\tconst property = entityType.resolvePath(sPropertyPath) as Property;\n\t\tconst valueList = property?.annotations?.Common?.[qualifierVL as keyof PropertyAnnotations_Common] as ValueList | undefined;\n\t\tconst isValueListWithFixedValues = (property?.annotations?.Common?.ValueListWithFixedValues?.valueOf() as boolean) || false;\n\t\tif (valueList) {\n\t\t\tconst collectionPath = valueList?.CollectionPath.toString();\n\t\t\tconst collectionPathConverterContext = converterContext.getConverterContextFor<EntitySet>(\n\t\t\t\t`/${collectionPath || converterContext.getEntitySet()?.name}`\n\t\t\t);\n\t\t\tconst valueListParams = valueList?.Parameters;\n\t\t\tlet outParameter: ValueListParameterOut | ValueListParameterInOut | undefined;\n\t\t\tconst inParameters: ParameterType[] = [];\n\t\t\tlet aParameters: string[] = [];\n\t\t\tconst parameterEntityType = collectionPathConverterContext.getParameterEntityType();\n\t\t\taParameters = parameterEntityType\n\t\t\t\t? parameterEntityType.keys.map(function (key) {\n\t\t\t\t\t\treturn key.name;\n\t\t\t\t  })\n\t\t\t\t: [];\n\t\t\tif (converterContext.getContextPath() === collectionPathConverterContext.getContextPath()) {\n\t\t\t\t_addInParameters(inParameters, aParameters, true);\n\t\t\t}\n\t\t\tif (valueListParams) {\n\t\t\t\tfor (const valueListParam of valueListParams) {\n\t\t\t\t\tconst localDataProperty = (valueListParam as ValueListParameterIn).LocalDataProperty?.value;\n\t\t\t\t\tconst valueListProperty = valueListParam.ValueListProperty as string;\n\t\t\t\t\tif (\n\t\t\t\t\t\t(valueListParam?.$Type === \"com.sap.vocabularies.Common.v1.ValueListParameterInOut\" ||\n\t\t\t\t\t\t\tvalueListParam?.$Type === \"com.sap.vocabularies.Common.v1.ValueListParameterOut\") &&\n\t\t\t\t\t\tsPropertyPath === localDataProperty\n\t\t\t\t\t) {\n\t\t\t\t\t\toutParameter = valueListParam;\n\t\t\t\t\t}\n\t\t\t\t\tif (\n\t\t\t\t\t\t(valueListParam?.$Type === \"com.sap.vocabularies.Common.v1.ValueListParameterInOut\" ||\n\t\t\t\t\t\t\tvalueListParam?.$Type === \"com.sap.vocabularies.Common.v1.ValueListParameterIn\") &&\n\t\t\t\t\t\tsPropertyPath !== localDataProperty\n\t\t\t\t\t) {\n\t\t\t\t\t\tconst bNotFilterable = isPropertyFilterable(collectionPathConverterContext, valueListProperty);\n\t\t\t\t\t\tif (!bNotFilterable) {\n\t\t\t\t\t\t\tinParameters.push({\n\t\t\t\t\t\t\t\tlocalDataProperty: localDataProperty,\n\t\t\t\t\t\t\t\tvalueListProperty: valueListProperty\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (inParameters && inParameters.length) {\n\t\t\t\tinParameters.forEach(function (oInParameter) {\n\t\t\t\t\tconst mainEntitySetInMappingAllowedExpression = compileExpression(\n\t\t\t\t\t\tcheckFilterExpressionRestrictions(\n\t\t\t\t\t\t\tconverterContext\n\t\t\t\t\t\t\t\t.getConverterContextFor(converterContext.getAbsoluteAnnotationPath(oInParameter?.localDataProperty))\n\t\t\t\t\t\t\t\t.getDataModelObjectPath(),\n\t\t\t\t\t\t\t[\"SingleValue\"]\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t\tconst valueListEntitySetInMappingAllowedExpression = compileExpression(\n\t\t\t\t\t\tcheckFilterExpressionRestrictions(\n\t\t\t\t\t\t\tcollectionPathConverterContext\n\t\t\t\t\t\t\t\t.getConverterContextFor(\n\t\t\t\t\t\t\t\t\tcollectionPathConverterContext.getAbsoluteAnnotationPath(oInParameter?.valueListProperty)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t.getDataModelObjectPath(),\n\t\t\t\t\t\t\t[\"SingleValue\"]\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t\tif (valueListEntitySetInMappingAllowedExpression === \"true\" && mainEntitySetInMappingAllowedExpression === \"false\") {\n\t\t\t\t\t\tthrow new Error(`FilterRestrictions of ${sPropertyPath} in MainEntitySet and ValueListEntitySet are different`);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\tconst pvQualifier = valueList?.PresentationVariantQualifier;\n\t\t\tconst svQualifier = valueList?.SelectionVariantQualifier;\n\t\t\tconst pvAnnotation = collectionPathConverterContext?.getEntityType().annotations.UI?.[`PresentationVariant#${pvQualifier}`];\n\t\t\tconst aggregationHelper = new AggregationHelper(collectionPathConverterContext.getEntityType(), collectionPathConverterContext);\n\t\t\tif (!aggregationHelper.isAnalyticsSupported()) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tif (pvAnnotation) {\n\t\t\t\tconst aVisualizations = pvAnnotation?.Visualizations;\n\t\t\t\tconst contextPath = `/${valueList?.CollectionPath}` || `/${collectionPathConverterContext?.getEntitySet()?.name}`;\n\t\t\t\tvisualFilter = {};\n\t\t\t\tvisualFilter.contextPath = contextPath;\n\t\t\t\tvisualFilter.isValueListWithFixedValues = isValueListWithFixedValues;\n\t\t\t\tlet chartAnnotation: AnnotationPath<Chart> | undefined;\n\t\t\t\tfor (const visualization of aVisualizations) {\n\t\t\t\t\tif (visualization.$target?.term === \"com.sap.vocabularies.UI.v1.Chart\") {\n\t\t\t\t\t\tchartAnnotation = visualization as AnnotationPath<Chart>;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (chartAnnotation) {\n\t\t\t\t\tconst _bgetVFAggregation: boolean | undefined = _checkVFAggregation(\n\t\t\t\t\t\tcollectionPathConverterContext,\n\t\t\t\t\t\tchartAnnotation,\n\t\t\t\t\t\taggregationHelper\n\t\t\t\t\t);\n\t\t\t\t\tif (!_bgetVFAggregation) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tconst bDimensionHidden = chartAnnotation?.$target?.Dimensions[0]?.$target?.annotations?.UI?.Hidden?.valueOf();\n\t\t\t\t\tconst bDimensionHiddenFilter =\n\t\t\t\t\t\tchartAnnotation?.$target?.Dimensions[0]?.$target?.annotations?.UI?.HiddenFilter?.valueOf();\n\t\t\t\t\tif (bDimensionHidden === true || bDimensionHiddenFilter === true) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t} else if (aVisualizations && aVisualizations.length) {\n\t\t\t\t\t\tvisualFilter.chartAnnotation = chartAnnotation.$target\n\t\t\t\t\t\t\t? collectionPathConverterContext?.getAbsoluteAnnotationPath(\n\t\t\t\t\t\t\t\t\t`${chartAnnotation.$target.fullyQualifiedName}/$AnnotationPath/`\n\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t: undefined;\n\t\t\t\t\t\t// This needs to be done to avoid repetitive entity type in case of non-parameterized entity set e.g /SalesOrderManage/com.c_salesordermanage_sd_aggregate.SalesOrderManage\n\t\t\t\t\t\tconst entitySetName = collectionPathConverterContext.getEntitySet()?.name;\n\t\t\t\t\t\tlet presentationAnnotation;\n\t\t\t\t\t\tconst relativeAnnotationPath = collectionPathConverterContext?.getRelativeAnnotationPath(\n\t\t\t\t\t\t\t`${pvAnnotation.fullyQualifiedName}/`,\n\t\t\t\t\t\t\tcollectionPathConverterContext.getEntityType()\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (parameterEntityType) {\n\t\t\t\t\t\t\tpresentationAnnotation = collectionPathConverterContext.getContextPath() + \"/\" + relativeAnnotationPath;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpresentationAnnotation = \"/\" + entitySetName + \"/\" + relativeAnnotationPath;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvisualFilter.presentationAnnotation = pvAnnotation ? presentationAnnotation : undefined;\n\t\t\t\t\t\tvisualFilter.outParameter = outParameter?.LocalDataProperty?.value;\n\t\t\t\t\t\tvisualFilter.inParameters = inParameters;\n\t\t\t\t\t\tvisualFilter.valuelistProperty = outParameter?.ValueListProperty as string;\n\t\t\t\t\t\tconst bIsRange = checkFilterExpressionRestrictions(\n\t\t\t\t\t\t\tconverterContext\n\t\t\t\t\t\t\t\t.getConverterContextFor(converterContext.getAbsoluteAnnotationPath(sPropertyPath))\n\t\t\t\t\t\t\t\t.getDataModelObjectPath(),\n\t\t\t\t\t\t\t[\"SingleRange\", \"MultiRange\"]\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tif (compileExpression(bIsRange) === \"true\") {\n\t\t\t\t\t\t\tconverterContext\n\t\t\t\t\t\t\t\t.getDiagnostics()\n\t\t\t\t\t\t\t\t.addIssue(IssueCategory.Annotation, IssueSeverity.High, IssueType.MALFORMED_VISUALFILTERS.VALUELIST);\n\t\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst bIsMainEntitySetSingleSelection = checkFilterExpressionRestrictions(\n\t\t\t\t\t\t\tconverterContext\n\t\t\t\t\t\t\t\t.getConverterContextFor(converterContext.getAbsoluteAnnotationPath(sPropertyPath))\n\t\t\t\t\t\t\t\t.getDataModelObjectPath(),\n\t\t\t\t\t\t\t[\"SingleValue\"]\n\t\t\t\t\t\t);\n\t\t\t\t\t\tvisualFilter.multipleSelectionAllowed = compileExpression(not(bIsMainEntitySetSingleSelection));\n\t\t\t\t\t\tvisualFilter.required = getIsRequired(converterContext, sPropertyPath);\n\t\t\t\t\t\tlet svAnnotation: SelectionVariant | undefined;\n\t\t\t\t\t\tif (svQualifier) {\n\t\t\t\t\t\t\tsvAnnotation = collectionPathConverterContext?.getEntityTypeAnnotation<SelectionVariant>(\n\t\t\t\t\t\t\t\t`@UI.SelectionVariant#${svQualifier}`\n\t\t\t\t\t\t\t)?.annotation;\n\t\t\t\t\t\t\tlet selectionVariantAnnotation;\n\t\t\t\t\t\t\tconst relativeSelectionVariantPath = collectionPathConverterContext?.getRelativeAnnotationPath(\n\t\t\t\t\t\t\t\t`${svAnnotation?.fullyQualifiedName}/`,\n\t\t\t\t\t\t\t\tcollectionPathConverterContext.getEntityType()\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (parameterEntityType) {\n\t\t\t\t\t\t\t\tselectionVariantAnnotation =\n\t\t\t\t\t\t\t\t\tcollectionPathConverterContext.getContextPath() + \"/\" + relativeSelectionVariantPath;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tselectionVariantAnnotation = \"/\" + entitySetName + \"/\" + relativeSelectionVariantPath;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvisualFilter.selectionVariantAnnotation = svAnnotation ? selectionVariantAnnotation : undefined;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet requiredProperties: PropertyPath[] = [];\n\t\t\t\t\t\tif (parameterEntityType) {\n\t\t\t\t\t\t\tconst sEntitySet = collectionPath.split(\"/\")[0];\n\t\t\t\t\t\t\tconst sNavigationProperty = collectionPath.split(\"/\")[1];\n\t\t\t\t\t\t\tconst oEntitySetConverterContext = converterContext.getConverterContextFor(`/${sEntitySet}`);\n\t\t\t\t\t\t\tconst aRestrictedProperties =\n\t\t\t\t\t\t\t\toEntitySetConverterContext?.getDataModelObjectPath().startingEntitySet?.annotations?.Capabilities\n\t\t\t\t\t\t\t\t\t?.NavigationRestrictions?.RestrictedProperties;\n\t\t\t\t\t\t\tconst oRestrictedProperty = aRestrictedProperties?.find(\n\t\t\t\t\t\t\t\t(restrictedNavProp: NavigationPropertyRestrictionTypes) => {\n\t\t\t\t\t\t\t\t\tif (restrictedNavProp.NavigationProperty?.type === \"NavigationPropertyPath\") {\n\t\t\t\t\t\t\t\t\t\treturn restrictedNavProp.NavigationProperty.value === sNavigationProperty;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\trequiredProperties = oRestrictedProperty?.FilterRestrictions?.RequiredProperties ?? [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst entitySetOrSingleton = collectionPathConverterContext?.getEntitySet();\n\t\t\t\t\t\t\tif (isEntitySet(entitySetOrSingleton)) {\n\t\t\t\t\t\t\t\trequiredProperties =\n\t\t\t\t\t\t\t\t\tentitySetOrSingleton.annotations.Capabilities?.FilterRestrictions?.RequiredProperties ?? [];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet requiredPropertyPaths: string[] = [];\n\t\t\t\t\t\tif (requiredProperties?.length) {\n\t\t\t\t\t\t\trequiredProperties.forEach(function (oRequireProperty) {\n\t\t\t\t\t\t\t\trequiredPropertyPaths.push(oRequireProperty.value);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\trequiredPropertyPaths = requiredPropertyPaths.concat(aParameters);\n\t\t\t\t\t\tvisualFilter.requiredProperties = requiredPropertyPaths;\n\t\t\t\t\t\tif (converterContext.getContextPath() === collectionPathConverterContext.getContextPath()) {\n\t\t\t\t\t\t\t// if context Path for both visual filter and filter bar are same, consider required Properties as well along with in Parameters\n\t\t\t\t\t\t\t_addInParameters(inParameters, requiredProperties, false);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (visualFilter.requiredProperties?.length) {\n\t\t\t\t\t\t\tif (!visualFilter.inParameters || !visualFilter.inParameters.length) {\n\t\t\t\t\t\t\t\tif (!visualFilter.selectionVariantAnnotation) {\n\t\t\t\t\t\t\t\t\tvisualFilter.showOverlayInitially = true;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tlet selectOptions =\n\t\t\t\t\t\t\t\t\t\tsvAnnotation?.SelectOptions?.reduce((results, oSelectOption) => {\n\t\t\t\t\t\t\t\t\t\t\tif (oSelectOption.PropertyName?.value) {\n\t\t\t\t\t\t\t\t\t\t\t\tresults.push(oSelectOption.PropertyName.value);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t\t\t\t\t}, [] as string[]) ?? [];\n\t\t\t\t\t\t\t\t\tconst parameterOptions =\n\t\t\t\t\t\t\t\t\t\tsvAnnotation?.Parameters?.map(\n\t\t\t\t\t\t\t\t\t\t\t(oParameterOption) => (oParameterOption as ParameterTypes).PropertyName?.value\n\t\t\t\t\t\t\t\t\t\t) || [];\n\t\t\t\t\t\t\t\t\tselectOptions = selectOptions.concat(parameterOptions);\n\t\t\t\t\t\t\t\t\trequiredPropertyPaths = requiredPropertyPaths.sort((a, b) => a.localeCompare(b));\n\t\t\t\t\t\t\t\t\tselectOptions = selectOptions.sort((a, b) => a.localeCompare(b));\n\t\t\t\t\t\t\t\t\tvisualFilter.showOverlayInitially = requiredPropertyPaths.some(function (sPath) {\n\t\t\t\t\t\t\t\t\t\treturn !selectOptions.includes(sPath);\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tvisualFilter.showOverlayInitially = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvisualFilter.showOverlayInitially = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst sDimensionType = chartAnnotation?.$target?.Dimensions[0]?.$target?.type;\n\t\t\t\t\t\tvisualFilter.renderLineChart =\n\t\t\t\t\t\t\tsDimensionType === \"Edm.DateTimeOffset\" ||\n\t\t\t\t\t\t\tsDimensionType === \"Edm.Date\" ||\n\t\t\t\t\t\t\tsDimensionType === \"Edm.TimeOfDay\" ||\n\t\t\t\t\t\t\tchartAnnotation.$target?.ChartType !== \"UI.ChartType/Line\";\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconverterContext\n\t\t\t\t\t\t.getDiagnostics()\n\t\t\t\t\t\t.addIssue(IssueCategory.Annotation, IssueSeverity.High, IssueType.MALFORMED_VISUALFILTERS.CHART);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconverterContext\n\t\t\t\t\t.getDiagnostics()\n\t\t\t\t\t.addIssue(IssueCategory.Annotation, IssueSeverity.High, IssueType.MALFORMED_VISUALFILTERS.PRESENTATIONVARIANT);\n\t\t\t}\n\t\t} else {\n\t\t\tconverterContext\n\t\t\t\t.getDiagnostics()\n\t\t\t\t.addIssue(IssueCategory.Annotation, IssueSeverity.High, IssueType.MALFORMED_VISUALFILTERS.VALUELIST);\n\t\t}\n\t} else {\n\t\tconverterContext.getDiagnostics().addIssue(IssueCategory.Manifest, IssueSeverity.High, IssueType.MALFORMED_VISUALFILTERS.VALUELIST);\n\t}\n\treturn visualFilter;\n}\n\n/**\n * Method to add inparameters from required properties and parameters.\n * @param inParams An array containing existing inparams\n * @param properties An array containing either requiredproperties or parameters\n * @param isParam A boolean flag indicating whether passed properties are parameters\n */\nexport function _addInParameters(inParams: ParameterType[], properties: PropertyPath[] | string[], isParam: boolean): void {\n\tproperties.forEach(function (element) {\n\t\tconst property = isParam ? element : (element as PropertyPath).value;\n\t\tinParams.push({\n\t\t\tlocalDataProperty: property as string,\n\t\t\tvalueListProperty: property as string\n\t\t});\n\t});\n}\n"],"mappings":"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","ignoreList":[],"file":"VisualFilters-dbg.js"}