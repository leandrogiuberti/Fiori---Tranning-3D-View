{"version":3,"names":["isDataFieldForActionAbstract","dataField","hasOwnProperty","_exports","isDataFieldForActionGroup","$Type","isDataFieldForAnnotation","isDataFieldForAction","isDataFieldForIntentBasedNavigation","isDataFieldTypes","isDataField","hasFieldGroupTarget","dataFieldForAnnotation","dataFieldTarget","Target","$target","isAnnotationOfType","hasIdentificationTarget","isAnnotationOfTerm","hasDataPointTarget","visibleExpression","converterContext","not","equal","getExpressionFromAnnotation","annotations","UI","Hidden","undefined","getRelativeModelPathFunction","isDataModelObjectPathForActionWithDialog","dataModelObjectPath","target","targetObject","isActionWithDialog","action","ActionTarget","bCritical","Common","IsActionCritical","parameters","length","getTargetValueOnDataPoint","source","targetValue","isProperty","dataPoint","DataFieldDefault","TargetValue","MaximumValue","toString","isPathAnnotationExpression","isDataPointFromDataFieldDefault","property","isRatingVisualizationFromDataFieldDefault","Visualization","isAProgressTypeFromDataPoint","getSemanticObjectPath","object","Value","SemanticObject","getEntitySetBasedAnnotationPath","fullyQualifiedName","_getNavigationPathPrefix","path","includes","substring","lastIndexOf","_collectAdditionalPropertiesForAnalyticalTable","navigationPathPrefix","tableType","relatedProperties","hiddenAnnotation","hiddenAnnotationPropertyPath","additionalProperties","criticality","Criticality","criticalityPropertyPath","_setRelatedPropertiesAndGetIndex","key","value","displayModeOfPropertyUsedAsDescription","properties","annotationProperty","Object","keys","indexOf","_appendTemplate","exportSettings","template","collectRelatedProperties","ignoreSelf","arguments","addUnitInTemplate","isAnnotatedAsHidden","valueIndex","externalIdPath","getAssociatedExternalIdPropertyPath","externalIdProperty","getAssociatedExternalIdProperty","entityType","getEntityType","aggregationHelper","AggregationHelper","textProperty","getAssociatedTextProperty","textPropertyPath","getAssociatedTextPropertyPath","getConverterContextFor","getContextPath","getDataModelObjectPath","propertyDataModelObjectPath","enhanceDataModelPath","relativePath","getContextRelativeTargetObjectPath","textPropertyDataModelObjectPath","textRelativePath","wrap","textArrangementToBeConsidered","isPropertyGroupable","pathForText","propertyForText","displayMode","getDisplayMode","descriptionIndex","currencyProperty","getAssociatedCurrencyProperty","unitProperty","getAssociatedUnitProperty","currencyOrUoMProperty","currencyOrUnitAnnotation","Measures","ISOCurrency","Unit","timezoneProperty","getAssociatedTimezoneProperty","timezoneAnnotation","Timezone","collectCurrencyOrUnitProperties","collectTimezoneProperties","ValueFormat","collectDataPointProperties","contactProperty","fn","contactPropertyPath","unit","isCurrency","timezone","getDataPointVisualization","dataPointProperty","datapointTarget","dataPointDefaultProperty","dataPointIndex","name","dataPointTargetValue","hasStaticPercentUnit","timezoneOrUoMIndex","currencyOrUnitPropertyPath","getAssociatedCurrencyPropertyPath","getAssociatedUnitPropertyPath","unitOrCurrencyPropertyDataModelObjectPath","unitOrCurrencyRelativePath","currencyOrUoMIndex","scale","collectRelatedPropertiesRecursively","isEmbedded","isStaticallyHidden","isReferencePropertyStaticallyHidden","Data","forEach","innerDataField","dataFieldContact","getDataFieldDataType","oDataField","type","sDataType","$Path"],"sourceRoot":".","sources":["DataField.ts"],"sourcesContent":["import type { AnnotationTerm, Decimal, PathAnnotationExpression, PrimitiveType, Property } from \"@sap-ux/vocabularies-types\";\nimport type { Contact } from \"@sap-ux/vocabularies-types/vocabularies/Communication\";\nimport { CommunicationAnnotationTypes } from \"@sap-ux/vocabularies-types/vocabularies/Communication\";\nimport type {\n\tDataField,\n\tDataFieldAbstractTypes,\n\tDataFieldForAction,\n\tDataFieldForActionAbstractTypes,\n\tDataFieldForActionGroup,\n\tDataFieldForAnnotation,\n\tDataFieldForIntentBasedNavigation,\n\tDataFieldTypes,\n\tDataPoint,\n\tDataPointType,\n\tDataPointTypeTypes,\n\tFieldGroup,\n\tIdentification,\n\tReferenceFacet\n} from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport { UIAnnotationTerms, UIAnnotationTypes, VisualizationType } from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport type { BindingToolkitExpression } from \"sap/fe/base/BindingToolkit\";\nimport { equal, getExpressionFromAnnotation, not } from \"sap/fe/base/BindingToolkit\";\nimport type { PageContextPathTarget } from \"sap/fe/core/converters/TemplateConverter\";\nimport type { TableType } from \"sap/fe/core/converters/controls/Common/Table\";\nimport type { ColumnExportSettings } from \"sap/fe/core/converters/controls/Common/table/Columns\";\nimport { AggregationHelper } from \"sap/fe/core/converters/helpers/Aggregation\";\nimport { isAnnotationOfTerm, isAnnotationOfType, isPathAnnotationExpression, isProperty } from \"sap/fe/core/helpers/TypeGuards\";\nimport { getDisplayMode } from \"sap/fe/core/templating/DisplayModeFormatter\";\nimport {\n\tgetAssociatedCurrencyProperty,\n\tgetAssociatedCurrencyPropertyPath,\n\tgetAssociatedExternalIdProperty,\n\tgetAssociatedExternalIdPropertyPath,\n\tgetAssociatedTextProperty,\n\tgetAssociatedTextPropertyPath,\n\tgetAssociatedTimezoneProperty,\n\tgetAssociatedUnitProperty,\n\tgetAssociatedUnitPropertyPath,\n\thasStaticPercentUnit\n} from \"sap/fe/core/templating/PropertyHelper\";\nimport { enhanceDataModelPath, getContextRelativeTargetObjectPath, type DataModelObjectPath } from \"../../templating/DataModelPathHelper\";\nimport type { DisplayMode } from \"../../templating/UIFormatters\";\nimport type ConverterContext from \"../ConverterContext\";\nimport { isReferencePropertyStaticallyHidden } from \"../helpers/DataFieldHelper\";\n\nexport type ComplexPropertyInfo = {\n\tproperties: Record<string, { annotationProperty: Property; displayModeOfPropertyUsedAsDescription?: DisplayMode }>;\n\tadditionalProperties: Record<string, Property>;\n\texportSettings: ColumnExportSettings;\n};\n\n/**\n * Identifies if the given dataFieldAbstract that is passed is a \"DataFieldForActionAbstract\".\n * DataFieldForActionAbstract has an inline action defined.\n * @param dataField DataField to be evaluated\n * @returns Validates that dataField is a DataFieldForActionAbstractType\n */\nexport function isDataFieldForActionAbstract(dataField: DataFieldAbstractTypes): dataField is DataFieldForActionAbstractTypes {\n\treturn (dataField as DataFieldForActionAbstractTypes).hasOwnProperty(\"Action\");\n}\n\n/**\n * Identifies if the given dataFieldAbstract that is passed is a \"DataFieldForActionGroup\".\n * @param dataField DataField to be evaluated\n * @returns Validates that dataField is a DataFieldForActionGroup\n */\nexport function isDataFieldForActionGroup(dataField: DataFieldAbstractTypes): dataField is DataFieldForActionGroup {\n\treturn dataField.$Type === UIAnnotationTypes.DataFieldForActionGroup;\n}\n\n/**\n * Identifies if the given dataFieldAbstract that is passed is a \"isDataFieldForAnnotation\".\n * isDataFieldForAnnotation has an inline $Type property that can be used.\n * @param dataField DataField to be evaluated\n * @returns Validates that dataField is a DataFieldForAnnotation\n */\nexport function isDataFieldForAnnotation(\n\tdataField: DataFieldAbstractTypes | DataPointTypeTypes | undefined\n): dataField is DataFieldForAnnotation {\n\treturn dataField?.$Type === UIAnnotationTypes.DataFieldForAnnotation;\n}\n\nexport function isDataFieldForAction(dataField: DataFieldAbstractTypes | undefined): dataField is DataFieldForAction {\n\treturn dataField?.$Type === UIAnnotationTypes.DataFieldForAction;\n}\n\n/**\n * Identifies if the given dataFieldAbstract that is passed is a \"DataFieldForIntentBasedNavigation\".\n * DataFieldForIntentBasedNavigation has an inline $Type property that can be used.\n * @param dataField DataField to be evaluated\n * @returns Validates that dataField is a DataFieldForIntentBasedNavigation\n */\nexport function isDataFieldForIntentBasedNavigation(dataField: DataFieldAbstractTypes): dataField is DataFieldForIntentBasedNavigation {\n\treturn dataField.$Type === UIAnnotationTypes.DataFieldForIntentBasedNavigation;\n}\n\n/**\n * Identifies if the given dataFieldAbstract that is passed is a \"DataFieldTypes\".\n * DataField has a value defined.\n * @param dataField DataField to be evaluated\n * @returns Validate that dataField is a DataFieldTypes\n */\nexport function isDataFieldTypes(dataField: DataFieldAbstractTypes | unknown): dataField is DataFieldTypes {\n\treturn (dataField as DataFieldTypes).hasOwnProperty(\"Value\");\n}\n\n/**\n * Identifies if the given dataFieldAbstract that is passed is a \"DataField\".\n * DataField has a value defined.\n * @param dataField DataField to be evaluated\n * @returns Validate that dataField is a DataField\n */\nexport function isDataField(dataField: DataField | unknown): dataField is DataField {\n\treturn (dataField as DataField)?.hasOwnProperty(\"Value\");\n}\n\n/**\n * Determines if the dataFieldForAnnotation is a field group.\n * @param dataFieldForAnnotation The dataFieldForAnnotation being processed\n * @returns True if the dataFieldForAnnotation is a field group.\n */\nexport function hasFieldGroupTarget(dataFieldForAnnotation: DataFieldForAnnotation | ReferenceFacet): boolean {\n\tconst dataFieldTarget = dataFieldForAnnotation.Target.$target;\n\treturn isAnnotationOfType<FieldGroup>(dataFieldTarget, UIAnnotationTypes.FieldGroupType);\n}\n\n/**\n * Determines if the dataFieldForAnnotation is a field group.\n * @param dataFieldForAnnotation The dataFieldForAnnotation being processed\n * @returns True if the dataFieldForAnnotation is a field group.\n */\nexport function hasIdentificationTarget(dataFieldForAnnotation: DataFieldForAnnotation | ReferenceFacet): boolean {\n\tconst dataFieldTarget = dataFieldForAnnotation.Target.$target;\n\treturn isAnnotationOfTerm<Identification>(dataFieldTarget, UIAnnotationTerms.Identification);\n}\n\n/**\n * Determines if the dataFieldForAnnotation is a data point.\n * @param dataFieldForAnnotation The dataFieldForAnnotation being processed\n * @returns True if the dataFieldForAnnotation is a data point.\n */\nexport function hasDataPointTarget(dataFieldForAnnotation: DataFieldForAnnotation): boolean {\n\tconst dataFieldTarget = dataFieldForAnnotation.Target.$target;\n\treturn isAnnotationOfType<DataPoint>(dataFieldTarget, UIAnnotationTypes.DataPointType);\n}\n\n/**\n * Gets the binding expression for 'visible' setting for the action.\n * @param dataField The data field record which could be DataFieldForAction, DataFieldForIntentBasedNavigation or DataFieldForActionGroup\n * @param converterContext The converter context\n * @returns The binding expression to be used for setting 'visible' based on UI.Hidden configuration\n */\nexport function visibleExpression(\n\tdataField: DataFieldForAction | DataFieldForIntentBasedNavigation | DataFieldForActionGroup | undefined,\n\tconverterContext: ConverterContext<PageContextPathTarget>\n): BindingToolkitExpression<boolean> {\n\treturn not(\n\t\tequal(\n\t\t\tgetExpressionFromAnnotation(dataField?.annotations?.UI?.Hidden, [], undefined, converterContext.getRelativeModelPathFunction()),\n\t\t\ttrue\n\t\t)\n\t);\n}\n\n/**\n * Determine if the data model object path targeting a dataField for action opens up a dialog.\n * @param dataModelObjectPath DataModelObjectPath\n * @returns `Dialog` | `None` if a dialog is needed\n */\nexport function isDataModelObjectPathForActionWithDialog(\n\tdataModelObjectPath: DataModelObjectPath<DataFieldAbstractTypes>\n): \"Dialog\" | \"None\" {\n\tconst target = dataModelObjectPath.targetObject;\n\treturn isActionWithDialog(isDataFieldForAction(target) ? target : undefined);\n}\n\n/**\n * Determine if the dataField for action opens up a dialog.\n * @param dataField DataField for action\n * @returns `Dialog` | `None` if a dialog is needed\n */\nexport function isActionWithDialog(dataField?: DataFieldForAction): \"Dialog\" | \"None\" {\n\tconst action = dataField?.ActionTarget;\n\tif (action) {\n\t\tconst bCritical = action.annotations?.Common?.IsActionCritical;\n\t\tif (action.parameters.length > 1 || bCritical) {\n\t\t\treturn \"Dialog\";\n\t\t} else {\n\t\t\treturn \"None\";\n\t\t}\n\t} else {\n\t\treturn \"None\";\n\t}\n}\n\n/**\n * Retrieves the TargetValue from a DataPoint.\n * @param source The target property or DataPoint\n * @returns The TargetValue as a decimal or a property path\n */\n\nexport function getTargetValueOnDataPoint(source: Property | DataPointType): PathAnnotationExpression<unknown> | string {\n\tlet targetValue: Decimal | undefined | PathAnnotationExpression<unknown> | string;\n\tif (isProperty(source)) {\n\t\tconst dataPoint = (source.annotations?.UI?.DataFieldDefault as DataFieldForAnnotation)?.Target?.$target as DataPointType;\n\t\ttargetValue = dataPoint?.TargetValue ?? dataPoint?.MaximumValue;\n\t} else {\n\t\ttargetValue = source.TargetValue ?? source.MaximumValue;\n\t}\n\tif (typeof targetValue === \"number\") {\n\t\treturn targetValue.toString();\n\t}\n\treturn isPathAnnotationExpression(targetValue) ? targetValue : \"100\";\n}\n\n/**\n * Check if a property uses a DataPoint within a DataFieldDefault.\n * @param property The property to be checked\n * @returns `true` if the referenced property has a DataPoint within the DataFieldDefault, false else\n */\n\nexport const isDataPointFromDataFieldDefault = function (property: Property): boolean {\n\treturn (\n\t\t(property.annotations?.UI?.DataFieldDefault as DataFieldForAnnotation)?.Target?.$target?.$Type === UIAnnotationTypes.DataPointType\n\t);\n};\n\n/**\n * Check if a property uses a default visualization Rating through a DataFieldDefault.\n * @param property The property to be checked\n * @returns `true` if the visualization through a DataFieldDefault is a Rating\n */\n\nexport const isRatingVisualizationFromDataFieldDefault = function (property: Property): boolean {\n\treturn (\n\t\tisDataPointFromDataFieldDefault(property) &&\n\t\t((property.annotations?.UI?.DataFieldDefault as DataFieldForAnnotation)?.Target?.$target as AnnotationTerm<DataPoint>)\n\t\t\t?.Visualization === \"UI.VisualizationType/Rating\"\n\t);\n};\n\n/**\n * Check if a property uses a Progress visualization Rating through a DataFieldDefault or a direct DataPoint.\n * @param property The property to be checked\n * @returns `true` if the visualization is a Progress\n */\n\nexport const isAProgressTypeFromDataPoint = function (property: Property | DataFieldForAnnotation): boolean {\n\tif (isProperty(property) && isDataPointFromDataFieldDefault(property)) {\n\t\tproperty = property.annotations.UI?.DataFieldDefault as DataFieldForAnnotation;\n\t}\n\treturn ((property as DataFieldForAnnotation).Target?.$target as DataPointType)?.Visualization === \"UI.VisualizationType/Progress\";\n};\n\nexport function getSemanticObjectPath(\n\tconverterContext: ConverterContext<PageContextPathTarget>,\n\tobject: DataFieldAbstractTypes | Property\n): string | undefined {\n\tif (typeof object === \"object\") {\n\t\tif (isDataFieldTypes(object) && object.Value?.$target) {\n\t\t\tconst property = object.Value?.$target;\n\t\t\tif (property?.annotations?.Common?.SemanticObject !== undefined) {\n\t\t\t\treturn converterContext.getEntitySetBasedAnnotationPath(property?.fullyQualifiedName);\n\t\t\t}\n\t\t} else if (isProperty(object)) {\n\t\t\tif (object?.annotations?.Common?.SemanticObject !== undefined) {\n\t\t\t\treturn converterContext.getEntitySetBasedAnnotationPath(object?.fullyQualifiedName);\n\t\t\t}\n\t\t}\n\t}\n\treturn undefined;\n}\n\n/**\n * Returns the navigation path prefix for a property path.\n * @param path The property path For e.g. /EntityType/Navigation/Property\n * @returns The navigation path prefix For e.g. /EntityType/Navigation/\n */\nfunction _getNavigationPathPrefix(path: string | undefined): string {\n\tif (path) {\n\t\treturn path.includes(\"/\") ? path.substring(0, path.lastIndexOf(\"/\") + 1) : \"\";\n\t}\n\treturn \"\";\n}\n\n/**\n * Collect additional properties for the ALP table use-case.\n *\n * For e.g. If UI.Hidden points to a property, include this property in the additionalProperties of ComplexPropertyInfo object.\n * @param target Property or DataField being processed\n * @param navigationPathPrefix Navigation path prefix, applicable in case of navigation properties.\n * @param tableType Table type.\n * @param relatedProperties The related properties identified so far.\n * @returns The related properties identified.\n */\nfunction _collectAdditionalPropertiesForAnalyticalTable(\n\ttarget: PrimitiveType,\n\tnavigationPathPrefix: string,\n\ttableType: TableType,\n\trelatedProperties: ComplexPropertyInfo\n): ComplexPropertyInfo {\n\tif (tableType === \"AnalyticalTable\") {\n\t\tconst hiddenAnnotation = target.annotations?.UI?.Hidden;\n\t\tif (hiddenAnnotation?.path && isProperty(hiddenAnnotation.$target)) {\n\t\t\tconst hiddenAnnotationPropertyPath = navigationPathPrefix + hiddenAnnotation.path;\n\t\t\t// This property should be added to additionalProperties map for the ALP table use-case.\n\t\t\trelatedProperties.additionalProperties[hiddenAnnotationPropertyPath] = hiddenAnnotation.$target;\n\t\t}\n\n\t\tconst criticality = target.Criticality;\n\t\tif (criticality?.path && isProperty(criticality?.$target)) {\n\t\t\tconst criticalityPropertyPath = navigationPathPrefix + criticality.path;\n\t\t\trelatedProperties.additionalProperties[criticalityPropertyPath] = criticality?.$target;\n\t\t}\n\t}\n\treturn relatedProperties;\n}\n\n/**\n * Helper for collectRelatedProperties to push unique related properties.\n * @param relatedProperties\n * @param key The property path\n * @param value The properties object containing value property, description property...\n * @param displayModeOfPropertyUsedAsDescription The display mode if the property is referenced as description on text arrangement\n * @returns Index at which the property is available\n */\nfunction _setRelatedPropertiesAndGetIndex(\n\trelatedProperties: ComplexPropertyInfo,\n\tkey: string,\n\tvalue: Property,\n\tdisplayModeOfPropertyUsedAsDescription?: DisplayMode\n): number {\n\tif (!relatedProperties.properties.hasOwnProperty(key)) {\n\t\trelatedProperties.properties[key] = { annotationProperty: value };\n\t\tif (displayModeOfPropertyUsedAsDescription) {\n\t\t\trelatedProperties.properties[key].displayModeOfPropertyUsedAsDescription = displayModeOfPropertyUsedAsDescription;\n\t\t}\n\t}\n\treturn Object.keys(relatedProperties.properties).indexOf(key);\n}\n\n/**\n * Helper for collectRelatedProperties to append the export settings template with a formatted text.\n * @param relatedProperties\n * @param value Formatted text\n */\nfunction _appendTemplate(relatedProperties: ComplexPropertyInfo, value: string): void {\n\trelatedProperties.exportSettings.template = relatedProperties.exportSettings?.template\n\t\t? `${relatedProperties.exportSettings.template}${value}`\n\t\t: `${value}`;\n}\n\n/**\n * Collect related properties from a property's annotations.\n * @param path The property path\n * @param property The property to be considered\n * @param converterContext The converter context\n * @param ignoreSelf Whether to exclude the same property from the related properties.\n * @param tableType The table type.\n * @param relatedProperties The related properties identified so far.\n * @param addUnitInTemplate True if the unit/currency property needs to be added in the export template\n * @param isAnnotatedAsHidden True if the DataField or the property are statically hidden\n * @returns The related properties identified.\n */\nexport function collectRelatedProperties(\n\tpath: string,\n\tproperty: PrimitiveType,\n\tconverterContext: ConverterContext,\n\tignoreSelf: boolean,\n\ttableType: TableType,\n\trelatedProperties: ComplexPropertyInfo = {\n\t\tproperties: {},\n\t\tadditionalProperties: {},\n\t\texportSettings: {}\n\t},\n\taddUnitInTemplate = false,\n\tisAnnotatedAsHidden = false\n): ComplexPropertyInfo {\n\tif (path && property) {\n\t\tlet valueIndex: number;\n\t\t/* EXTERNALID */\n\t\tconst externalIdPath = getAssociatedExternalIdPropertyPath(property);\n\t\tconst externalIdProperty = getAssociatedExternalIdProperty(property);\n\n\t\tif (isAnnotatedAsHidden) {\n\t\t\t// Collect underlying property\n\t\t\tvalueIndex = _setRelatedPropertiesAndGetIndex(relatedProperties, path, property);\n\t\t\t_appendTemplate(relatedProperties, `{${valueIndex}}`);\n\t\t\treturn relatedProperties;\n\t\t}\n\t\tconst navigationPathPrefix = _getNavigationPathPrefix(path);\n\n\t\tconst entityType = converterContext.getEntityType();\n\t\tconst aggregationHelper = new AggregationHelper(entityType, converterContext);\n\n\t\t// Check for Text annotation.\n\t\tconst textProperty = getAssociatedTextProperty(externalIdProperty || property);\n\t\tconst textPropertyPath = getAssociatedTextPropertyPath(externalIdProperty || property);\n\n\t\t// get the DataModelObjectPath for the column\n\t\tconst dataModelObjectPath = converterContext.getConverterContextFor(converterContext.getContextPath()).getDataModelObjectPath();\n\t\tconst propertyDataModelObjectPath = enhanceDataModelPath<Property>(dataModelObjectPath, externalIdPath || path);\n\t\tconst relativePath = getContextRelativeTargetObjectPath(propertyDataModelObjectPath);\n\t\tconst textPropertyDataModelObjectPath = enhanceDataModelPath<Property>(propertyDataModelObjectPath, textPropertyPath);\n\t\tconst textRelativePath = getContextRelativeTargetObjectPath(textPropertyDataModelObjectPath);\n\n\t\tif (relatedProperties.exportSettings?.template) {\n\t\t\t// FieldGroup use-case. Need to add each Field in new line.\n\t\t\t_appendTemplate(relatedProperties, \"\\n\");\n\t\t\trelatedProperties.exportSettings.wrap = true;\n\t\t}\n\n\t\t// The text arrangement will be considered only if the text property is groupable\n\t\tconst textArrangementToBeConsidered =\n\t\t\ttableType === \"AnalyticalTable\" && !!aggregationHelper.isPropertyGroupable(property)\n\t\t\t\t? !!textProperty && !!aggregationHelper.isPropertyGroupable(textProperty)\n\t\t\t\t: true;\n\t\tif (textProperty && textRelativePath) {\n\t\t\tif (textArrangementToBeConsidered) {\n\t\t\t\tconst pathForText = externalIdPath ? externalIdPath : path;\n\t\t\t\tconst propertyForText = externalIdProperty ? externalIdProperty : property;\n\t\t\t\t// Check for Text Arrangement.\n\t\t\t\tconst displayMode = getDisplayMode(propertyForText, propertyDataModelObjectPath);\n\t\t\t\tlet descriptionIndex: number;\n\t\t\t\tswitch (displayMode) {\n\t\t\t\t\tcase \"Description\":\n\t\t\t\t\t\tdescriptionIndex = _setRelatedPropertiesAndGetIndex(\n\t\t\t\t\t\t\trelatedProperties,\n\t\t\t\t\t\t\ttextRelativePath,\n\t\t\t\t\t\t\ttextProperty,\n\t\t\t\t\t\t\t\"Description\"\n\t\t\t\t\t\t);\n\t\t\t\t\t\t_appendTemplate(relatedProperties, `{${descriptionIndex}}`);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase \"ValueDescription\":\n\t\t\t\t\t\tvalueIndex = _setRelatedPropertiesAndGetIndex(relatedProperties, pathForText, propertyForText);\n\t\t\t\t\t\tdescriptionIndex = _setRelatedPropertiesAndGetIndex(\n\t\t\t\t\t\t\trelatedProperties,\n\t\t\t\t\t\t\ttextRelativePath,\n\t\t\t\t\t\t\ttextProperty,\n\t\t\t\t\t\t\t\"ValueDescription\"\n\t\t\t\t\t\t);\n\t\t\t\t\t\t_appendTemplate(relatedProperties, `{${valueIndex}} ({${descriptionIndex}})`);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase \"DescriptionValue\":\n\t\t\t\t\t\tvalueIndex = _setRelatedPropertiesAndGetIndex(relatedProperties, pathForText, propertyForText);\n\t\t\t\t\t\tdescriptionIndex = _setRelatedPropertiesAndGetIndex(\n\t\t\t\t\t\t\trelatedProperties,\n\t\t\t\t\t\t\ttextRelativePath,\n\t\t\t\t\t\t\ttextProperty,\n\t\t\t\t\t\t\t\"DescriptionValue\"\n\t\t\t\t\t\t);\n\t\t\t\t\t\t_appendTemplate(relatedProperties, `{${descriptionIndex}} ({${valueIndex}})`);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tvalueIndex = _setRelatedPropertiesAndGetIndex(relatedProperties, pathForText, propertyForText);\n\t\t\t\t\t\t_appendTemplate(relatedProperties, `{${valueIndex}}`);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Collect underlying property\n\t\t\t\tvalueIndex = _setRelatedPropertiesAndGetIndex(relatedProperties, path, property);\n\t\t\t\t_appendTemplate(relatedProperties, `{${valueIndex}}`);\n\t\t\t}\n\t\t} else {\n\t\t\t// Check for field containing Currency Or Unit Properties or Timezone\n\t\t\tconst currencyProperty = getAssociatedCurrencyProperty(property);\n\t\t\tconst unitProperty = getAssociatedUnitProperty(property);\n\t\t\tconst currencyOrUoMProperty = currencyProperty ?? unitProperty;\n\t\t\tconst currencyOrUnitAnnotation: PathAnnotationExpression<string> =\n\t\t\t\tproperty?.annotations?.Measures?.ISOCurrency || property?.annotations?.Measures?.Unit;\n\t\t\tconst timezoneProperty = getAssociatedTimezoneProperty(property);\n\t\t\tconst timezoneAnnotation = property?.annotations?.Common?.Timezone;\n\n\t\t\tif (currencyOrUoMProperty) {\n\t\t\t\tcollectCurrencyOrUnitProperties(\n\t\t\t\t\trelatedProperties,\n\t\t\t\t\trelativePath ?? path,\n\t\t\t\t\taddUnitInTemplate,\n\t\t\t\t\tpropertyDataModelObjectPath,\n\t\t\t\t\tcurrencyOrUoMProperty,\n\t\t\t\t\tcurrencyProperty\n\t\t\t\t);\n\t\t\t} else if (timezoneProperty && timezoneAnnotation?.$target) {\n\t\t\t\tcollectTimezoneProperties(property, relatedProperties, path, addUnitInTemplate);\n\t\t\t} else if (\n\t\t\t\t(property.Target?.$target?.$Type === UIAnnotationTypes.DataPointType && !property.Target?.$target?.ValueFormat) ||\n\t\t\t\tproperty.annotations?.UI?.DataFieldDefault?.Target?.$target?.$Type === UIAnnotationTypes.DataPointType\n\t\t\t) {\n\t\t\t\tcollectDataPointProperties(property, relatedProperties, relativePath);\n\t\t\t} else if (property.$Type === CommunicationAnnotationTypes.ContactType) {\n\t\t\t\tconst contactProperty = property.fn?.$target;\n\t\t\t\tconst contactPropertyPath = property.fn?.path;\n\t\t\t\tvalueIndex = _setRelatedPropertiesAndGetIndex(\n\t\t\t\t\trelatedProperties,\n\t\t\t\t\tnavigationPathPrefix ? navigationPathPrefix + contactPropertyPath : contactPropertyPath,\n\t\t\t\t\tcontactProperty\n\t\t\t\t);\n\t\t\t\t_appendTemplate(relatedProperties, `{${valueIndex}}`);\n\t\t\t} else if (!ignoreSelf) {\n\t\t\t\t// Collect underlying property\n\t\t\t\tvalueIndex = _setRelatedPropertiesAndGetIndex(relatedProperties, path, property);\n\t\t\t\t_appendTemplate(relatedProperties, `{${valueIndex}}`);\n\t\t\t\tif (currencyOrUnitAnnotation) {\n\t\t\t\t\trelatedProperties.exportSettings.unit = `${currencyOrUnitAnnotation}`; // Hard-coded currency/unit\n\t\t\t\t\tif (property?.annotations?.Measures?.ISOCurrency) {\n\t\t\t\t\t\trelatedProperties.exportSettings.isCurrency = true;\n\t\t\t\t\t}\n\t\t\t\t} else if (timezoneAnnotation) {\n\t\t\t\t\trelatedProperties.exportSettings.timezone = `${timezoneAnnotation}`; // Hard-coded timezone\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\trelatedProperties = _collectAdditionalPropertiesForAnalyticalTable(property, navigationPathPrefix, tableType, relatedProperties);\n\t\tif (Object.keys(relatedProperties.additionalProperties).length > 0 && relativePath) {\n\t\t\t// We don't need to consider additionalProperties for the export\n\t\t\trelatedProperties.exportSettings.property = [relativePath];\n\t\t}\n\t\tif (Object.keys(relatedProperties.additionalProperties).length > 0 && Object.keys(relatedProperties.properties).length === 0) {\n\t\t\t// Collect underlying property if not collected already.\n\t\t\t// This is to ensure that additionalProperties are made available only to complex property infos.\n\t\t\tvalueIndex = _setRelatedPropertiesAndGetIndex(relatedProperties, path, property);\n\t\t\t_appendTemplate(relatedProperties, `{${valueIndex}}`);\n\t\t}\n\t}\n\treturn relatedProperties;\n}\n\n/**\n * Gets the type of Visualization of the DataPoint.\n * @param source Source of the DataPoint.\n * @returns The type of Visualization or undefined if there's none.\n */\nfunction getDataPointVisualization(source: Property | DataPointType): VisualizationType {\n\tlet dataPoint: DataPointType;\n\tif (isProperty(source)) {\n\t\tdataPoint = (source.annotations?.UI?.DataFieldDefault as DataFieldForAnnotation)?.Target?.$target as DataPointType;\n\t} else {\n\t\tdataPoint = source;\n\t}\n\treturn dataPoint.Visualization ?? VisualizationType.Number;\n}\n\n/**\n *\tCollect the related properties from a DataPoint.\n * @param property The property to be considered.\n * @param relatedProperties The related properties identified so far.\n * @param path The property path.\n */\nfunction collectDataPointProperties(property: PrimitiveType, relatedProperties: ComplexPropertyInfo, path: string | undefined): void {\n\t// path must not be undefined, getContextRelativeTargetObjectPath may return undefined\n\tif (path === undefined) {\n\t\treturn;\n\t}\n\tconst dataPointProperty = property.Target?.$target?.Value.$target as Property;\n\tconst datapointTarget = property.Target?.$target;\n\tconst navigationPathPrefix = _getNavigationPathPrefix(path);\n\t// DataPoint use-case using DataFieldDefault.\n\tconst dataPointDefaultProperty = property.annotations?.UI?.DataFieldDefault;\n\tconst valueIndex = _setRelatedPropertiesAndGetIndex(relatedProperties, path, dataPointDefaultProperty ? property : dataPointProperty);\n\t// If we have a DataPoint without visualization, or a Number, we don't have a TargetValue/MaximumValue\n\tif (getDataPointVisualization(dataPointDefaultProperty ? property : datapointTarget) === VisualizationType.Number) {\n\t\treturn;\n\t}\n\tconst targetValue = getTargetValueOnDataPoint(dataPointDefaultProperty ? property : datapointTarget);\n\tif (isPathAnnotationExpression(targetValue)) {\n\t\tif (targetValue.$target) {\n\t\t\t//in case it's a dynamic targetValue\n\t\t\tconst dataPointIndex = _setRelatedPropertiesAndGetIndex(\n\t\t\t\trelatedProperties,\n\t\t\t\tnavigationPathPrefix ? navigationPathPrefix + targetValue.$target.name : targetValue.$target.name,\n\t\t\t\ttargetValue.$target\n\t\t\t);\n\t\t\trelatedProperties.exportSettings.dataPointTargetValue = targetValue.path;\n\t\t\t_appendTemplate(relatedProperties, `{${valueIndex}}/{${dataPointIndex}}`);\n\t\t}\n\t} else if (hasStaticPercentUnit(dataPointDefaultProperty ? property : dataPointProperty) && isAProgressTypeFromDataPoint(property)) {\n\t\trelatedProperties.exportSettings.unit = \"%\";\n\t} else {\n\t\trelatedProperties.exportSettings.dataPointTargetValue = targetValue;\n\t\t_appendTemplate(relatedProperties, `{${valueIndex}}/${targetValue}`);\n\t}\n}\n\n/**\n *\tCollect the related properties from a property with Timezone.\n * @param property The property to be considered.\n * @param relatedProperties The related properties identified so far.\n * @param path The property path.\n * @param addUnitInTemplate Should we add the unit in the template.\n */\nfunction collectTimezoneProperties(\n\tproperty: PrimitiveType,\n\trelatedProperties: ComplexPropertyInfo,\n\tpath: string,\n\taddUnitInTemplate: boolean\n): void {\n\tconst timezoneAnnotation = property.annotations.Common.Timezone;\n\tconst navigationPathPrefix = _getNavigationPathPrefix(path);\n\tconst valueIndex = _setRelatedPropertiesAndGetIndex(relatedProperties, path, property);\n\n\tconst timezoneOrUoMIndex = _setRelatedPropertiesAndGetIndex(\n\t\trelatedProperties,\n\t\tnavigationPathPrefix + timezoneAnnotation.path,\n\t\ttimezoneAnnotation.$target\n\t);\n\tif (addUnitInTemplate) {\n\t\t_appendTemplate(relatedProperties, `{${valueIndex}}  {${timezoneOrUoMIndex}}`);\n\t} else {\n\t\trelatedProperties.exportSettings.timezoneProperty = navigationPathPrefix + timezoneAnnotation.path;\n\t}\n}\n\n/**\n * Collect the related properties from a property with currencies or units.\n * @param relatedProperties The related properties identified so far for the column.\n * @param relativePath The property relative path.\n * @param addUnitInTemplate Specify if the unit should be added in the template.\n * @param propertyDataModelObjectPath The data model object path of the property to be considered.\n * @param currencyOrUoMProperty The currency or unit of measure property linked to the column.\n * @param currencyProperty The currency property linked to the column.\n */\nfunction collectCurrencyOrUnitProperties(\n\trelatedProperties: ComplexPropertyInfo,\n\trelativePath: string,\n\taddUnitInTemplate: boolean,\n\tpropertyDataModelObjectPath: DataModelObjectPath<Property>,\n\tcurrencyOrUoMProperty: Property,\n\tcurrencyProperty?: Property\n): void {\n\tconst property = propertyDataModelObjectPath.targetObject;\n\tif (property) {\n\t\tconst currencyOrUnitPropertyPath = getAssociatedCurrencyPropertyPath(property) || getAssociatedUnitPropertyPath(property);\n\t\tconst unitOrCurrencyPropertyDataModelObjectPath = enhanceDataModelPath<Property>(\n\t\t\tpropertyDataModelObjectPath,\n\t\t\tcurrencyOrUnitPropertyPath\n\t\t);\n\t\tconst unitOrCurrencyRelativePath = getContextRelativeTargetObjectPath(unitOrCurrencyPropertyDataModelObjectPath);\n\t\tconst valueIndex = _setRelatedPropertiesAndGetIndex(relatedProperties, relativePath, property);\n\t\tconst currencyOrUoMIndex = _setRelatedPropertiesAndGetIndex(relatedProperties, unitOrCurrencyRelativePath!, currencyOrUoMProperty);\n\t\tif (addUnitInTemplate) {\n\t\t\t_appendTemplate(relatedProperties, `{${valueIndex}}  {${currencyOrUoMIndex}}`);\n\t\t} else {\n\t\t\trelatedProperties.exportSettings.unitProperty = unitOrCurrencyRelativePath;\n\t\t}\n\t\tif (currencyProperty) {\n\t\t\trelatedProperties.exportSettings.isCurrency = true;\n\t\t}\n\t\trelatedProperties.exportSettings.scale = property.scale;\n\t}\n}\n\n/**\n * Collect properties consumed by a DataField.\n * This is for populating the ComplexPropertyInfos of the table delegate.\n * @param dataField The DataField for which the properties need to be identified.\n * @param converterContext The converter context.\n * @param tableType The table type.\n * @param relatedProperties The properties identified so far.\n * @param isEmbedded True if the DataField is embedded in another annotation (such as FieldGroup).\n * @returns The properties related to the DataField.\n */\nexport function collectRelatedPropertiesRecursively(\n\tdataField: DataFieldAbstractTypes,\n\tconverterContext: ConverterContext,\n\ttableType: TableType,\n\trelatedProperties: ComplexPropertyInfo = {\n\t\tproperties: {},\n\t\tadditionalProperties: {},\n\t\texportSettings: {}\n\t},\n\tisEmbedded = false\n): ComplexPropertyInfo {\n\tlet isStaticallyHidden = false;\n\tswitch (dataField?.$Type) {\n\t\tcase UIAnnotationTypes.DataField:\n\t\tcase UIAnnotationTypes.DataFieldWithUrl:\n\t\tcase UIAnnotationTypes.DataFieldWithNavigationPath:\n\t\tcase UIAnnotationTypes.DataFieldWithIntentBasedNavigation:\n\t\tcase UIAnnotationTypes.DataFieldWithAction:\n\t\t\tif (dataField.Value) {\n\t\t\t\tconst property = dataField.Value;\n\t\t\t\tisStaticallyHidden = isReferencePropertyStaticallyHidden(dataField);\n\t\t\t\trelatedProperties = collectRelatedProperties(\n\t\t\t\t\tproperty.path,\n\t\t\t\t\tproperty.$target,\n\t\t\t\t\tconverterContext,\n\t\t\t\t\tfalse,\n\t\t\t\t\ttableType,\n\t\t\t\t\trelatedProperties,\n\t\t\t\t\tisEmbedded,\n\t\t\t\t\tisStaticallyHidden\n\t\t\t\t);\n\t\t\t\tconst navigationPathPrefix = _getNavigationPathPrefix(property.path);\n\t\t\t\trelatedProperties = _collectAdditionalPropertiesForAnalyticalTable(\n\t\t\t\t\tdataField,\n\t\t\t\t\tnavigationPathPrefix,\n\t\t\t\t\ttableType,\n\t\t\t\t\trelatedProperties\n\t\t\t\t);\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase UIAnnotationTypes.DataFieldForAction:\n\t\tcase UIAnnotationTypes.DataFieldForIntentBasedNavigation:\n\t\t\tbreak;\n\n\t\tcase UIAnnotationTypes.DataFieldForAnnotation:\n\t\t\tswitch (dataField.Target?.$target?.$Type) {\n\t\t\t\tcase UIAnnotationTypes.FieldGroupType:\n\t\t\t\t\tdataField.Target.$target.Data?.forEach((innerDataField: DataFieldAbstractTypes) => {\n\t\t\t\t\t\trelatedProperties = collectRelatedPropertiesRecursively(\n\t\t\t\t\t\t\tinnerDataField,\n\t\t\t\t\t\t\tconverterContext,\n\t\t\t\t\t\t\ttableType,\n\t\t\t\t\t\t\trelatedProperties,\n\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase UIAnnotationTypes.DataPointType:\n\t\t\t\t\tisStaticallyHidden = isReferencePropertyStaticallyHidden(dataField);\n\t\t\t\t\trelatedProperties = collectRelatedProperties(\n\t\t\t\t\t\tdataField.Target.$target.Value.path,\n\t\t\t\t\t\tdataField,\n\t\t\t\t\t\tconverterContext,\n\t\t\t\t\t\tfalse,\n\t\t\t\t\t\ttableType,\n\t\t\t\t\t\trelatedProperties,\n\t\t\t\t\t\tisEmbedded,\n\t\t\t\t\t\tisStaticallyHidden\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase CommunicationAnnotationTypes.ContactType:\n\t\t\t\t\tconst dataFieldContact = dataField.Target.$target as Contact;\n\t\t\t\t\tisStaticallyHidden = isReferencePropertyStaticallyHidden(dataField);\n\t\t\t\t\trelatedProperties = collectRelatedProperties(\n\t\t\t\t\t\tdataField.Target.value,\n\t\t\t\t\t\tdataFieldContact,\n\t\t\t\t\t\tconverterContext,\n\t\t\t\t\t\tisStaticallyHidden,\n\t\t\t\t\t\ttableType,\n\t\t\t\t\t\trelatedProperties,\n\t\t\t\t\t\tisEmbedded,\n\t\t\t\t\t\tisStaticallyHidden\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tbreak;\n\t}\n\n\treturn relatedProperties;\n}\n\nexport const getDataFieldDataType = function (oDataField: DataFieldAbstractTypes | Property): string | undefined {\n\tif (isProperty(oDataField)) {\n\t\treturn oDataField.type;\n\t}\n\tlet sDataType: string | undefined;\n\tswitch (oDataField.$Type) {\n\t\tcase UIAnnotationTypes.DataFieldForActionGroup:\n\t\tcase UIAnnotationTypes.DataFieldWithActionGroup:\n\t\tcase UIAnnotationTypes.DataFieldForAction:\n\t\tcase UIAnnotationTypes.DataFieldForIntentBasedNavigation:\n\t\t\tsDataType = undefined;\n\t\t\tbreak;\n\n\t\tcase UIAnnotationTypes.DataField:\n\t\tcase UIAnnotationTypes.DataFieldWithNavigationPath:\n\t\tcase UIAnnotationTypes.DataFieldWithUrl:\n\t\tcase UIAnnotationTypes.DataFieldWithIntentBasedNavigation:\n\t\tcase UIAnnotationTypes.DataFieldWithAction:\n\t\t\tsDataType = (oDataField as DataField)?.Value?.$target?.type;\n\t\t\tbreak;\n\n\t\tcase UIAnnotationTypes.DataFieldForAnnotation:\n\t\tdefault:\n\t\t\tif (oDataField.Target?.$target?.$Type) {\n\t\t\t\tconst dataFieldTarget = oDataField.Target.$target;\n\t\t\t\tif (dataFieldTarget.$Type === CommunicationAnnotationTypes.ContactType && isPathAnnotationExpression(dataFieldTarget.fn)) {\n\t\t\t\t\tsDataType = dataFieldTarget.fn.$target?.type;\n\t\t\t\t} else if (dataFieldTarget.$Type === UIAnnotationTypes.DataPointType) {\n\t\t\t\t\tsDataType = dataFieldTarget.Value?.$Path?.$Type || dataFieldTarget.Value?.$target?.type;\n\t\t\t\t} else {\n\t\t\t\t\t// e.g. FieldGroup or Chart\n\t\t\t\t\t// FieldGroup Properties have no type, so we define it as a boolean type to prevent exceptions during the calculation of the width\n\t\t\t\t\tsDataType =\n\t\t\t\t\t\toDataField.Target.$target.$Type === \"com.sap.vocabularies.UI.v1.ChartDefinitionType\" ? undefined : \"Edm.Boolean\";\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsDataType = undefined;\n\t\t\t}\n\t\t\tbreak;\n\t}\n\n\treturn sDataType;\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAmDA;AACA;AACA;AACA;AACA;AACA;EACO,SAASA,4BAA4BA,CAACC,SAAiC,EAAgD;IAC7H,OAAQA,SAAS,CAAqCC,cAAc,CAAC,QAAQ,CAAC;EAC/E;;EAEA;AACA;AACA;AACA;AACA;EAJAC,QAAA,CAAAH,4BAAA,GAAAA,4BAAA;EAKO,SAASI,yBAAyBA,CAACH,SAAiC,EAAwC;IAClH,OAAOA,SAAS,CAACI,KAAK,yDAA8C;EACrE;;EAEA;AACA;AACA;AACA;AACA;AACA;EALAF,QAAA,CAAAC,yBAAA,GAAAA,yBAAA;EAMO,SAASE,wBAAwBA,CACvCL,SAAkE,EAC5B;IACtC,OAAOA,SAAS,EAAEI,KAAK,wDAA6C;EACrE;EAACF,QAAA,CAAAG,wBAAA,GAAAA,wBAAA;EAEM,SAASC,oBAAoBA,CAACN,SAA6C,EAAmC;IACpH,OAAOA,SAAS,EAAEI,KAAK,oDAAyC;EACjE;;EAEA;AACA;AACA;AACA;AACA;AACA;EALAF,QAAA,CAAAI,oBAAA,GAAAA,oBAAA;EAMO,SAASC,mCAAmCA,CAACP,SAAiC,EAAkD;IACtI,OAAOA,SAAS,CAACI,KAAK,mEAAwD;EAC/E;;EAEA;AACA;AACA;AACA;AACA;AACA;EALAF,QAAA,CAAAK,mCAAA,GAAAA,mCAAA;EAMO,SAASC,gBAAgBA,CAACR,SAA2C,EAA+B;IAC1G,OAAQA,SAAS,CAAoBC,cAAc,CAAC,OAAO,CAAC;EAC7D;;EAEA;AACA;AACA;AACA;AACA;AACA;EALAC,QAAA,CAAAM,gBAAA,GAAAA,gBAAA;EAMO,SAASC,WAAWA,CAACT,SAA8B,EAA0B;IACnF,OAAQA,SAAS,EAAgBC,cAAc,CAAC,OAAO,CAAC;EACzD;;EAEA;AACA;AACA;AACA;AACA;EAJAC,QAAA,CAAAO,WAAA,GAAAA,WAAA;EAKO,SAASC,mBAAmBA,CAACC,sBAA+D,EAAW;IAC7G,MAAMC,eAAe,GAAGD,sBAAsB,CAACE,MAAM,CAACC,OAAO;IAC7D,OAAOC,kBAAkB,CAAaH,eAAe,6CAAkC,CAAC;EACzF;;EAEA;AACA;AACA;AACA;AACA;EAJAV,QAAA,CAAAQ,mBAAA,GAAAA,mBAAA;EAKO,SAASM,uBAAuBA,CAACL,sBAA+D,EAAW;IACjH,MAAMC,eAAe,GAAGD,sBAAsB,CAACE,MAAM,CAACC,OAAO;IAC7D,OAAOG,kBAAkB,CAAiBL,eAAe,6CAAkC,CAAC;EAC7F;;EAEA;AACA;AACA;AACA;AACA;EAJAV,QAAA,CAAAc,uBAAA,GAAAA,uBAAA;EAKO,SAASE,kBAAkBA,CAACP,sBAA8C,EAAW;IAC3F,MAAMC,eAAe,GAAGD,sBAAsB,CAACE,MAAM,CAACC,OAAO;IAC7D,OAAOC,kBAAkB,CAAYH,eAAe,4CAAiC,CAAC;EACvF;;EAEA;AACA;AACA;AACA;AACA;AACA;EALAV,QAAA,CAAAgB,kBAAA,GAAAA,kBAAA;EAMO,SAASC,iBAAiBA,CAChCnB,SAAuG,EACvGoB,gBAAyD,EACrB;IACpC,OAAOC,GAAG,CACTC,KAAK,CACJC,2BAA2B,CAACvB,SAAS,EAAEwB,WAAW,EAAEC,EAAE,EAAEC,MAAM,EAAE,EAAE,EAAEC,SAAS,EAAEP,gBAAgB,CAACQ,4BAA4B,CAAC,CAAC,CAAC,EAC/H,IACD,CACD,CAAC;EACF;;EAEA;AACA;AACA;AACA;AACA;EAJA1B,QAAA,CAAAiB,iBAAA,GAAAA,iBAAA;EAKO,SAASU,wCAAwCA,CACvDC,mBAAgE,EAC5C;IACpB,MAAMC,MAAM,GAAGD,mBAAmB,CAACE,YAAY;IAC/C,OAAOC,kBAAkB,CAAC3B,oBAAoB,CAACyB,MAAM,CAAC,GAAGA,MAAM,GAAGJ,SAAS,CAAC;EAC7E;;EAEA;AACA;AACA;AACA;AACA;EAJAzB,QAAA,CAAA2B,wCAAA,GAAAA,wCAAA;EAKO,SAASI,kBAAkBA,CAACjC,SAA8B,EAAqB;IACrF,MAAMkC,MAAM,GAAGlC,SAAS,EAAEmC,YAAY;IACtC,IAAID,MAAM,EAAE;MACX,MAAME,SAAS,GAAGF,MAAM,CAACV,WAAW,EAAEa,MAAM,EAAEC,gBAAgB;MAC9D,IAAIJ,MAAM,CAACK,UAAU,CAACC,MAAM,GAAG,CAAC,IAAIJ,SAAS,EAAE;QAC9C,OAAO,QAAQ;MAChB,CAAC,MAAM;QACN,OAAO,MAAM;MACd;IACD,CAAC,MAAM;MACN,OAAO,MAAM;IACd;EACD;;EAEA;AACA;AACA;AACA;AACA;EAJAlC,QAAA,CAAA+B,kBAAA,GAAAA,kBAAA;EAMO,SAASQ,yBAAyBA,CAACC,MAAgC,EAA8C;IACvH,IAAIC,WAA6E;IACjF,IAAIC,UAAU,CAACF,MAAM,CAAC,EAAE;MACvB,MAAMG,SAAS,GAAIH,MAAM,CAAClB,WAAW,EAAEC,EAAE,EAAEqB,gBAAgB,EAA6BjC,MAAM,EAAEC,OAAwB;MACxH6B,WAAW,GAAGE,SAAS,EAAEE,WAAW,IAAIF,SAAS,EAAEG,YAAY;IAChE,CAAC,MAAM;MACNL,WAAW,GAAGD,MAAM,CAACK,WAAW,IAAIL,MAAM,CAACM,YAAY;IACxD;IACA,IAAI,OAAOL,WAAW,KAAK,QAAQ,EAAE;MACpC,OAAOA,WAAW,CAACM,QAAQ,CAAC,CAAC;IAC9B;IACA,OAAOC,0BAA0B,CAACP,WAAW,CAAC,GAAGA,WAAW,GAAG,KAAK;EACrE;;EAEA;AACA;AACA;AACA;AACA;EAJAzC,QAAA,CAAAuC,yBAAA,GAAAA,yBAAA;EAMO,MAAMU,+BAA+B,GAAG,SAAAA,CAAUC,QAAkB,EAAW;IACrF,OACEA,QAAQ,CAAC5B,WAAW,EAAEC,EAAE,EAAEqB,gBAAgB,EAA6BjC,MAAM,EAAEC,OAAO,EAAEV,KAAK,+CAAoC;EAEpI,CAAC;;EAED;AACA;AACA;AACA;AACA;EAJAF,QAAA,CAAAiD,+BAAA,GAAAA,+BAAA;EAMO,MAAME,yCAAyC,GAAG,SAAAA,CAAUD,QAAkB,EAAW;IAC/F,OACCD,+BAA+B,CAACC,QAAQ,CAAC,IACvCA,QAAQ,CAAC5B,WAAW,EAAEC,EAAE,EAAEqB,gBAAgB,EAA6BjC,MAAM,EAAEC,OAAO,EACrFwC,aAAa,KAAK,6BAA6B;EAEpD,CAAC;;EAED;AACA;AACA;AACA;AACA;EAJApD,QAAA,CAAAmD,yCAAA,GAAAA,yCAAA;EAMO,MAAME,4BAA4B,GAAG,SAAAA,CAAUH,QAA2C,EAAW;IAC3G,IAAIR,UAAU,CAACQ,QAAQ,CAAC,IAAID,+BAA+B,CAACC,QAAQ,CAAC,EAAE;MACtEA,QAAQ,GAAGA,QAAQ,CAAC5B,WAAW,CAACC,EAAE,EAAEqB,gBAA0C;IAC/E;IACA,OAASM,QAAQ,CAA4BvC,MAAM,EAAEC,OAAO,EAAoBwC,aAAa,KAAK,+BAA+B;EAClI,CAAC;EAACpD,QAAA,CAAAqD,4BAAA,GAAAA,4BAAA;EAEK,SAASC,qBAAqBA,CACpCpC,gBAAyD,EACzDqC,MAAyC,EACpB;IACrB,IAAI,OAAOA,MAAM,KAAK,QAAQ,EAAE;MAC/B,IAAIjD,gBAAgB,CAACiD,MAAM,CAAC,IAAIA,MAAM,CAACC,KAAK,EAAE5C,OAAO,EAAE;QACtD,MAAMsC,QAAQ,GAAGK,MAAM,CAACC,KAAK,EAAE5C,OAAO;QACtC,IAAIsC,QAAQ,EAAE5B,WAAW,EAAEa,MAAM,EAAEsB,cAAc,KAAKhC,SAAS,EAAE;UAChE,OAAOP,gBAAgB,CAACwC,+BAA+B,CAACR,QAAQ,EAAES,kBAAkB,CAAC;QACtF;MACD,CAAC,MAAM,IAAIjB,UAAU,CAACa,MAAM,CAAC,EAAE;QAC9B,IAAIA,MAAM,EAAEjC,WAAW,EAAEa,MAAM,EAAEsB,cAAc,KAAKhC,SAAS,EAAE;UAC9D,OAAOP,gBAAgB,CAACwC,+BAA+B,CAACH,MAAM,EAAEI,kBAAkB,CAAC;QACpF;MACD;IACD;IACA,OAAOlC,SAAS;EACjB;;EAEA;AACA;AACA;AACA;AACA;EAJAzB,QAAA,CAAAsD,qBAAA,GAAAA,qBAAA;EAKA,SAASM,wBAAwBA,CAACC,IAAwB,EAAU;IACnE,IAAIA,IAAI,EAAE;MACT,OAAOA,IAAI,CAACC,QAAQ,CAAC,GAAG,CAAC,GAAGD,IAAI,CAACE,SAAS,CAAC,CAAC,EAAEF,IAAI,CAACG,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE;IAC9E;IACA,OAAO,EAAE;EACV;;EAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACA,SAASC,8CAA8CA,CACtDpC,MAAqB,EACrBqC,oBAA4B,EAC5BC,SAAoB,EACpBC,iBAAsC,EAChB;IACtB,IAAID,SAAS,KAAK,iBAAiB,EAAE;MACpC,MAAME,gBAAgB,GAAGxC,MAAM,CAACP,WAAW,EAAEC,EAAE,EAAEC,MAAM;MACvD,IAAI6C,gBAAgB,EAAER,IAAI,IAAInB,UAAU,CAAC2B,gBAAgB,CAACzD,OAAO,CAAC,EAAE;QACnE,MAAM0D,4BAA4B,GAAGJ,oBAAoB,GAAGG,gBAAgB,CAACR,IAAI;QACjF;QACAO,iBAAiB,CAACG,oBAAoB,CAACD,4BAA4B,CAAC,GAAGD,gBAAgB,CAACzD,OAAO;MAChG;MAEA,MAAM4D,WAAW,GAAG3C,MAAM,CAAC4C,WAAW;MACtC,IAAID,WAAW,EAAEX,IAAI,IAAInB,UAAU,CAAC8B,WAAW,EAAE5D,OAAO,CAAC,EAAE;QAC1D,MAAM8D,uBAAuB,GAAGR,oBAAoB,GAAGM,WAAW,CAACX,IAAI;QACvEO,iBAAiB,CAACG,oBAAoB,CAACG,uBAAuB,CAAC,GAAGF,WAAW,EAAE5D,OAAO;MACvF;IACD;IACA,OAAOwD,iBAAiB;EACzB;;EAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACA,SAASO,gCAAgCA,CACxCP,iBAAsC,EACtCQ,GAAW,EACXC,KAAe,EACfC,sCAAoD,EAC3C;IACT,IAAI,CAACV,iBAAiB,CAACW,UAAU,CAAChF,cAAc,CAAC6E,GAAG,CAAC,EAAE;MACtDR,iBAAiB,CAACW,UAAU,CAACH,GAAG,CAAC,GAAG;QAAEI,kBAAkB,EAAEH;MAAM,CAAC;MACjE,IAAIC,sCAAsC,EAAE;QAC3CV,iBAAiB,CAACW,UAAU,CAACH,GAAG,CAAC,CAACE,sCAAsC,GAAGA,sCAAsC;MAClH;IACD;IACA,OAAOG,MAAM,CAACC,IAAI,CAACd,iBAAiB,CAACW,UAAU,CAAC,CAACI,OAAO,CAACP,GAAG,CAAC;EAC9D;;EAEA;AACA;AACA;AACA;AACA;EACA,SAASQ,eAAeA,CAAChB,iBAAsC,EAAES,KAAa,EAAQ;IACrFT,iBAAiB,CAACiB,cAAc,CAACC,QAAQ,GAAGlB,iBAAiB,CAACiB,cAAc,EAAEC,QAAQ,GACnF,GAAGlB,iBAAiB,CAACiB,cAAc,CAACC,QAAQ,GAAGT,KAAK,EAAE,GACtD,GAAGA,KAAK,EAAE;EACd;;EAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACO,SAASU,wBAAwBA,CACvC1B,IAAY,EACZX,QAAuB,EACvBhC,gBAAkC,EAClCsE,UAAmB,EACnBrB,SAAoB,EAQE;IAAA,IAPtBC,iBAAsC,GAAAqB,SAAA,CAAAnD,MAAA,QAAAmD,SAAA,QAAAhE,SAAA,GAAAgE,SAAA,MAAG;MACxCV,UAAU,EAAE,CAAC,CAAC;MACdR,oBAAoB,EAAE,CAAC,CAAC;MACxBc,cAAc,EAAE,CAAC;IAClB,CAAC;IAAA,IACDK,iBAAiB,GAAAD,SAAA,CAAAnD,MAAA,QAAAmD,SAAA,QAAAhE,SAAA,GAAAgE,SAAA,MAAG,KAAK;IAAA,IACzBE,mBAAmB,GAAAF,SAAA,CAAAnD,MAAA,QAAAmD,SAAA,QAAAhE,SAAA,GAAAgE,SAAA,MAAG,KAAK;IAE3B,IAAI5B,IAAI,IAAIX,QAAQ,EAAE;MACrB,IAAI0C,UAAkB;MACtB;MACA,MAAMC,cAAc,GAAGC,mCAAmC,CAAC5C,QAAQ,CAAC;MACpE,MAAM6C,kBAAkB,GAAGC,+BAA+B,CAAC9C,QAAQ,CAAC;MAEpE,IAAIyC,mBAAmB,EAAE;QACxB;QACAC,UAAU,GAAGjB,gCAAgC,CAACP,iBAAiB,EAAEP,IAAI,EAAEX,QAAQ,CAAC;QAChFkC,eAAe,CAAChB,iBAAiB,EAAE,IAAIwB,UAAU,GAAG,CAAC;QACrD,OAAOxB,iBAAiB;MACzB;MACA,MAAMF,oBAAoB,GAAGN,wBAAwB,CAACC,IAAI,CAAC;MAE3D,MAAMoC,UAAU,GAAG/E,gBAAgB,CAACgF,aAAa,CAAC,CAAC;MACnD,MAAMC,iBAAiB,GAAG,IAAIC,iBAAiB,CAACH,UAAU,EAAE/E,gBAAgB,CAAC;;MAE7E;MACA,MAAMmF,YAAY,GAAGC,yBAAyB,CAACP,kBAAkB,IAAI7C,QAAQ,CAAC;MAC9E,MAAMqD,gBAAgB,GAAGC,6BAA6B,CAACT,kBAAkB,IAAI7C,QAAQ,CAAC;;MAEtF;MACA,MAAMtB,mBAAmB,GAAGV,gBAAgB,CAACuF,sBAAsB,CAACvF,gBAAgB,CAACwF,cAAc,CAAC,CAAC,CAAC,CAACC,sBAAsB,CAAC,CAAC;MAC/H,MAAMC,2BAA2B,GAAGC,oBAAoB,CAAWjF,mBAAmB,EAAEiE,cAAc,IAAIhC,IAAI,CAAC;MAC/G,MAAMiD,YAAY,GAAGC,kCAAkC,CAACH,2BAA2B,CAAC;MACpF,MAAMI,+BAA+B,GAAGH,oBAAoB,CAAWD,2BAA2B,EAAEL,gBAAgB,CAAC;MACrH,MAAMU,gBAAgB,GAAGF,kCAAkC,CAACC,+BAA+B,CAAC;MAE5F,IAAI5C,iBAAiB,CAACiB,cAAc,EAAEC,QAAQ,EAAE;QAC/C;QACAF,eAAe,CAAChB,iBAAiB,EAAE,IAAI,CAAC;QACxCA,iBAAiB,CAACiB,cAAc,CAAC6B,IAAI,GAAG,IAAI;MAC7C;;MAEA;MACA,MAAMC,6BAA6B,GAClChD,SAAS,KAAK,iBAAiB,IAAI,CAAC,CAACgC,iBAAiB,CAACiB,mBAAmB,CAAClE,QAAQ,CAAC,GACjF,CAAC,CAACmD,YAAY,IAAI,CAAC,CAACF,iBAAiB,CAACiB,mBAAmB,CAACf,YAAY,CAAC,GACvE,IAAI;MACR,IAAIA,YAAY,IAAIY,gBAAgB,EAAE;QACrC,IAAIE,6BAA6B,EAAE;UAClC,MAAME,WAAW,GAAGxB,cAAc,GAAGA,cAAc,GAAGhC,IAAI;UAC1D,MAAMyD,eAAe,GAAGvB,kBAAkB,GAAGA,kBAAkB,GAAG7C,QAAQ;UAC1E;UACA,MAAMqE,WAAW,GAAGC,cAAc,CAACF,eAAe,EAAEV,2BAA2B,CAAC;UAChF,IAAIa,gBAAwB;UAC5B,QAAQF,WAAW;YAClB,KAAK,aAAa;cACjBE,gBAAgB,GAAG9C,gCAAgC,CAClDP,iBAAiB,EACjB6C,gBAAgB,EAChBZ,YAAY,EACZ,aACD,CAAC;cACDjB,eAAe,CAAChB,iBAAiB,EAAE,IAAIqD,gBAAgB,GAAG,CAAC;cAC3D;YAED,KAAK,kBAAkB;cACtB7B,UAAU,GAAGjB,gCAAgC,CAACP,iBAAiB,EAAEiD,WAAW,EAAEC,eAAe,CAAC;cAC9FG,gBAAgB,GAAG9C,gCAAgC,CAClDP,iBAAiB,EACjB6C,gBAAgB,EAChBZ,YAAY,EACZ,kBACD,CAAC;cACDjB,eAAe,CAAChB,iBAAiB,EAAE,IAAIwB,UAAU,OAAO6B,gBAAgB,IAAI,CAAC;cAC7E;YAED,KAAK,kBAAkB;cACtB7B,UAAU,GAAGjB,gCAAgC,CAACP,iBAAiB,EAAEiD,WAAW,EAAEC,eAAe,CAAC;cAC9FG,gBAAgB,GAAG9C,gCAAgC,CAClDP,iBAAiB,EACjB6C,gBAAgB,EAChBZ,YAAY,EACZ,kBACD,CAAC;cACDjB,eAAe,CAAChB,iBAAiB,EAAE,IAAIqD,gBAAgB,OAAO7B,UAAU,IAAI,CAAC;cAC7E;YACD;cACCA,UAAU,GAAGjB,gCAAgC,CAACP,iBAAiB,EAAEiD,WAAW,EAAEC,eAAe,CAAC;cAC9FlC,eAAe,CAAChB,iBAAiB,EAAE,IAAIwB,UAAU,GAAG,CAAC;cACrD;UACF;QACD,CAAC,MAAM;UACN;UACAA,UAAU,GAAGjB,gCAAgC,CAACP,iBAAiB,EAAEP,IAAI,EAAEX,QAAQ,CAAC;UAChFkC,eAAe,CAAChB,iBAAiB,EAAE,IAAIwB,UAAU,GAAG,CAAC;QACtD;MACD,CAAC,MAAM;QACN;QACA,MAAM8B,gBAAgB,GAAGC,6BAA6B,CAACzE,QAAQ,CAAC;QAChE,MAAM0E,YAAY,GAAGC,yBAAyB,CAAC3E,QAAQ,CAAC;QACxD,MAAM4E,qBAAqB,GAAGJ,gBAAgB,IAAIE,YAAY;QAC9D,MAAMG,wBAA0D,GAC/D7E,QAAQ,EAAE5B,WAAW,EAAE0G,QAAQ,EAAEC,WAAW,IAAI/E,QAAQ,EAAE5B,WAAW,EAAE0G,QAAQ,EAAEE,IAAI;QACtF,MAAMC,gBAAgB,GAAGC,6BAA6B,CAAClF,QAAQ,CAAC;QAChE,MAAMmF,kBAAkB,GAAGnF,QAAQ,EAAE5B,WAAW,EAAEa,MAAM,EAAEmG,QAAQ;QAElE,IAAIR,qBAAqB,EAAE;UAC1BS,+BAA+B,CAC9BnE,iBAAiB,EACjB0C,YAAY,IAAIjD,IAAI,EACpB6B,iBAAiB,EACjBkB,2BAA2B,EAC3BkB,qBAAqB,EACrBJ,gBACD,CAAC;QACF,CAAC,MAAM,IAAIS,gBAAgB,IAAIE,kBAAkB,EAAEzH,OAAO,EAAE;UAC3D4H,yBAAyB,CAACtF,QAAQ,EAAEkB,iBAAiB,EAAEP,IAAI,EAAE6B,iBAAiB,CAAC;QAChF,CAAC,MAAM,IACLxC,QAAQ,CAACvC,MAAM,EAAEC,OAAO,EAAEV,KAAK,+CAAoC,IAAI,CAACgD,QAAQ,CAACvC,MAAM,EAAEC,OAAO,EAAE6H,WAAW,IAC9GvF,QAAQ,CAAC5B,WAAW,EAAEC,EAAE,EAAEqB,gBAAgB,EAAEjC,MAAM,EAAEC,OAAO,EAAEV,KAAK,+CAAoC,EACrG;UACDwI,0BAA0B,CAACxF,QAAQ,EAAEkB,iBAAiB,EAAE0C,YAAY,CAAC;QACtE,CAAC,MAAM,IAAI5D,QAAQ,CAAChD,KAAK,wDAA6C,EAAE;UACvE,MAAMyI,eAAe,GAAGzF,QAAQ,CAAC0F,EAAE,EAAEhI,OAAO;UAC5C,MAAMiI,mBAAmB,GAAG3F,QAAQ,CAAC0F,EAAE,EAAE/E,IAAI;UAC7C+B,UAAU,GAAGjB,gCAAgC,CAC5CP,iBAAiB,EACjBF,oBAAoB,GAAGA,oBAAoB,GAAG2E,mBAAmB,GAAGA,mBAAmB,EACvFF,eACD,CAAC;UACDvD,eAAe,CAAChB,iBAAiB,EAAE,IAAIwB,UAAU,GAAG,CAAC;QACtD,CAAC,MAAM,IAAI,CAACJ,UAAU,EAAE;UACvB;UACAI,UAAU,GAAGjB,gCAAgC,CAACP,iBAAiB,EAAEP,IAAI,EAAEX,QAAQ,CAAC;UAChFkC,eAAe,CAAChB,iBAAiB,EAAE,IAAIwB,UAAU,GAAG,CAAC;UACrD,IAAImC,wBAAwB,EAAE;YAC7B3D,iBAAiB,CAACiB,cAAc,CAACyD,IAAI,GAAG,GAAGf,wBAAwB,EAAE,CAAC,CAAC;YACvE,IAAI7E,QAAQ,EAAE5B,WAAW,EAAE0G,QAAQ,EAAEC,WAAW,EAAE;cACjD7D,iBAAiB,CAACiB,cAAc,CAAC0D,UAAU,GAAG,IAAI;YACnD;UACD,CAAC,MAAM,IAAIV,kBAAkB,EAAE;YAC9BjE,iBAAiB,CAACiB,cAAc,CAAC2D,QAAQ,GAAG,GAAGX,kBAAkB,EAAE,CAAC,CAAC;UACtE;QACD;MACD;MAEAjE,iBAAiB,GAAGH,8CAA8C,CAACf,QAAQ,EAAEgB,oBAAoB,EAAEC,SAAS,EAAEC,iBAAiB,CAAC;MAChI,IAAIa,MAAM,CAACC,IAAI,CAACd,iBAAiB,CAACG,oBAAoB,CAAC,CAACjC,MAAM,GAAG,CAAC,IAAIwE,YAAY,EAAE;QACnF;QACA1C,iBAAiB,CAACiB,cAAc,CAACnC,QAAQ,GAAG,CAAC4D,YAAY,CAAC;MAC3D;MACA,IAAI7B,MAAM,CAACC,IAAI,CAACd,iBAAiB,CAACG,oBAAoB,CAAC,CAACjC,MAAM,GAAG,CAAC,IAAI2C,MAAM,CAACC,IAAI,CAACd,iBAAiB,CAACW,UAAU,CAAC,CAACzC,MAAM,KAAK,CAAC,EAAE;QAC7H;QACA;QACAsD,UAAU,GAAGjB,gCAAgC,CAACP,iBAAiB,EAAEP,IAAI,EAAEX,QAAQ,CAAC;QAChFkC,eAAe,CAAChB,iBAAiB,EAAE,IAAIwB,UAAU,GAAG,CAAC;MACtD;IACD;IACA,OAAOxB,iBAAiB;EACzB;;EAEA;AACA;AACA;AACA;AACA;EAJApE,QAAA,CAAAuF,wBAAA,GAAAA,wBAAA;EAKA,SAAS0D,yBAAyBA,CAACzG,MAAgC,EAAqB;IACvF,IAAIG,SAAwB;IAC5B,IAAID,UAAU,CAACF,MAAM,CAAC,EAAE;MACvBG,SAAS,GAAIH,MAAM,CAAClB,WAAW,EAAEC,EAAE,EAAEqB,gBAAgB,EAA6BjC,MAAM,EAAEC,OAAwB;IACnH,CAAC,MAAM;MACN+B,SAAS,GAAGH,MAAM;IACnB;IACA,OAAOG,SAAS,CAACS,aAAa,iCAA4B;EAC3D;;EAEA;AACA;AACA;AACA;AACA;AACA;EACA,SAASsF,0BAA0BA,CAACxF,QAAuB,EAAEkB,iBAAsC,EAAEP,IAAwB,EAAQ;IACpI;IACA,IAAIA,IAAI,KAAKpC,SAAS,EAAE;MACvB;IACD;IACA,MAAMyH,iBAAiB,GAAGhG,QAAQ,CAACvC,MAAM,EAAEC,OAAO,EAAE4C,KAAK,CAAC5C,OAAmB;IAC7E,MAAMuI,eAAe,GAAGjG,QAAQ,CAACvC,MAAM,EAAEC,OAAO;IAChD,MAAMsD,oBAAoB,GAAGN,wBAAwB,CAACC,IAAI,CAAC;IAC3D;IACA,MAAMuF,wBAAwB,GAAGlG,QAAQ,CAAC5B,WAAW,EAAEC,EAAE,EAAEqB,gBAAgB;IAC3E,MAAMgD,UAAU,GAAGjB,gCAAgC,CAACP,iBAAiB,EAAEP,IAAI,EAAEuF,wBAAwB,GAAGlG,QAAQ,GAAGgG,iBAAiB,CAAC;IACrI;IACA,IAAID,yBAAyB,CAACG,wBAAwB,GAAGlG,QAAQ,GAAGiG,eAAe,CAAC,kCAA6B,EAAE;MAClH;IACD;IACA,MAAM1G,WAAW,GAAGF,yBAAyB,CAAC6G,wBAAwB,GAAGlG,QAAQ,GAAGiG,eAAe,CAAC;IACpG,IAAInG,0BAA0B,CAACP,WAAW,CAAC,EAAE;MAC5C,IAAIA,WAAW,CAAC7B,OAAO,EAAE;QACxB;QACA,MAAMyI,cAAc,GAAG1E,gCAAgC,CACtDP,iBAAiB,EACjBF,oBAAoB,GAAGA,oBAAoB,GAAGzB,WAAW,CAAC7B,OAAO,CAAC0I,IAAI,GAAG7G,WAAW,CAAC7B,OAAO,CAAC0I,IAAI,EACjG7G,WAAW,CAAC7B,OACb,CAAC;QACDwD,iBAAiB,CAACiB,cAAc,CAACkE,oBAAoB,GAAG9G,WAAW,CAACoB,IAAI;QACxEuB,eAAe,CAAChB,iBAAiB,EAAE,IAAIwB,UAAU,MAAMyD,cAAc,GAAG,CAAC;MAC1E;IACD,CAAC,MAAM,IAAIG,oBAAoB,CAACJ,wBAAwB,GAAGlG,QAAQ,GAAGgG,iBAAiB,CAAC,IAAI7F,4BAA4B,CAACH,QAAQ,CAAC,EAAE;MACnIkB,iBAAiB,CAACiB,cAAc,CAACyD,IAAI,GAAG,GAAG;IAC5C,CAAC,MAAM;MACN1E,iBAAiB,CAACiB,cAAc,CAACkE,oBAAoB,GAAG9G,WAAW;MACnE2C,eAAe,CAAChB,iBAAiB,EAAE,IAAIwB,UAAU,KAAKnD,WAAW,EAAE,CAAC;IACrE;EACD;;EAEA;AACA;AACA;AACA;AACA;AACA;AACA;EACA,SAAS+F,yBAAyBA,CACjCtF,QAAuB,EACvBkB,iBAAsC,EACtCP,IAAY,EACZ6B,iBAA0B,EACnB;IACP,MAAM2C,kBAAkB,GAAGnF,QAAQ,CAAC5B,WAAW,CAACa,MAAM,CAACmG,QAAQ;IAC/D,MAAMpE,oBAAoB,GAAGN,wBAAwB,CAACC,IAAI,CAAC;IAC3D,MAAM+B,UAAU,GAAGjB,gCAAgC,CAACP,iBAAiB,EAAEP,IAAI,EAAEX,QAAQ,CAAC;IAEtF,MAAMuG,kBAAkB,GAAG9E,gCAAgC,CAC1DP,iBAAiB,EACjBF,oBAAoB,GAAGmE,kBAAkB,CAACxE,IAAI,EAC9CwE,kBAAkB,CAACzH,OACpB,CAAC;IACD,IAAI8E,iBAAiB,EAAE;MACtBN,eAAe,CAAChB,iBAAiB,EAAE,IAAIwB,UAAU,OAAO6D,kBAAkB,GAAG,CAAC;IAC/E,CAAC,MAAM;MACNrF,iBAAiB,CAACiB,cAAc,CAAC8C,gBAAgB,GAAGjE,oBAAoB,GAAGmE,kBAAkB,CAACxE,IAAI;IACnG;EACD;;EAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACA,SAAS0E,+BAA+BA,CACvCnE,iBAAsC,EACtC0C,YAAoB,EACpBpB,iBAA0B,EAC1BkB,2BAA0D,EAC1DkB,qBAA+B,EAC/BJ,gBAA2B,EACpB;IACP,MAAMxE,QAAQ,GAAG0D,2BAA2B,CAAC9E,YAAY;IACzD,IAAIoB,QAAQ,EAAE;MACb,MAAMwG,0BAA0B,GAAGC,iCAAiC,CAACzG,QAAQ,CAAC,IAAI0G,6BAA6B,CAAC1G,QAAQ,CAAC;MACzH,MAAM2G,yCAAyC,GAAGhD,oBAAoB,CACrED,2BAA2B,EAC3B8C,0BACD,CAAC;MACD,MAAMI,0BAA0B,GAAG/C,kCAAkC,CAAC8C,yCAAyC,CAAC;MAChH,MAAMjE,UAAU,GAAGjB,gCAAgC,CAACP,iBAAiB,EAAE0C,YAAY,EAAE5D,QAAQ,CAAC;MAC9F,MAAM6G,kBAAkB,GAAGpF,gCAAgC,CAACP,iBAAiB,EAAE0F,0BAA0B,EAAGhC,qBAAqB,CAAC;MAClI,IAAIpC,iBAAiB,EAAE;QACtBN,eAAe,CAAChB,iBAAiB,EAAE,IAAIwB,UAAU,OAAOmE,kBAAkB,GAAG,CAAC;MAC/E,CAAC,MAAM;QACN3F,iBAAiB,CAACiB,cAAc,CAACuC,YAAY,GAAGkC,0BAA0B;MAC3E;MACA,IAAIpC,gBAAgB,EAAE;QACrBtD,iBAAiB,CAACiB,cAAc,CAAC0D,UAAU,GAAG,IAAI;MACnD;MACA3E,iBAAiB,CAACiB,cAAc,CAAC2E,KAAK,GAAG9G,QAAQ,CAAC8G,KAAK;IACxD;EACD;;EAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACO,SAASC,mCAAmCA,CAClDnK,SAAiC,EACjCoB,gBAAkC,EAClCiD,SAAoB,EAOE;IAAA,IANtBC,iBAAsC,GAAAqB,SAAA,CAAAnD,MAAA,QAAAmD,SAAA,QAAAhE,SAAA,GAAAgE,SAAA,MAAG;MACxCV,UAAU,EAAE,CAAC,CAAC;MACdR,oBAAoB,EAAE,CAAC,CAAC;MACxBc,cAAc,EAAE,CAAC;IAClB,CAAC;IAAA,IACD6E,UAAU,GAAAzE,SAAA,CAAAnD,MAAA,QAAAmD,SAAA,QAAAhE,SAAA,GAAAgE,SAAA,MAAG,KAAK;IAElB,IAAI0E,kBAAkB,GAAG,KAAK;IAC9B,QAAQrK,SAAS,EAAEI,KAAK;MACvB;MACA;MACA;MACA;MACA;QACC,IAAIJ,SAAS,CAAC0D,KAAK,EAAE;UACpB,MAAMN,QAAQ,GAAGpD,SAAS,CAAC0D,KAAK;UAChC2G,kBAAkB,GAAGC,mCAAmC,CAACtK,SAAS,CAAC;UACnEsE,iBAAiB,GAAGmB,wBAAwB,CAC3CrC,QAAQ,CAACW,IAAI,EACbX,QAAQ,CAACtC,OAAO,EAChBM,gBAAgB,EAChB,KAAK,EACLiD,SAAS,EACTC,iBAAiB,EACjB8F,UAAU,EACVC,kBACD,CAAC;UACD,MAAMjG,oBAAoB,GAAGN,wBAAwB,CAACV,QAAQ,CAACW,IAAI,CAAC;UACpEO,iBAAiB,GAAGH,8CAA8C,CACjEnE,SAAS,EACToE,oBAAoB,EACpBC,SAAS,EACTC,iBACD,CAAC;QACF;QACA;MAED;MACA;QACC;MAED;QACC,QAAQtE,SAAS,CAACa,MAAM,EAAEC,OAAO,EAAEV,KAAK;UACvC;YACCJ,SAAS,CAACa,MAAM,CAACC,OAAO,CAACyJ,IAAI,EAAEC,OAAO,CAAEC,cAAsC,IAAK;cAClFnG,iBAAiB,GAAG6F,mCAAmC,CACtDM,cAAc,EACdrJ,gBAAgB,EAChBiD,SAAS,EACTC,iBAAiB,EACjB,IACD,CAAC;YACF,CAAC,CAAC;YACF;UAED;YACC+F,kBAAkB,GAAGC,mCAAmC,CAACtK,SAAS,CAAC;YACnEsE,iBAAiB,GAAGmB,wBAAwB,CAC3CzF,SAAS,CAACa,MAAM,CAACC,OAAO,CAAC4C,KAAK,CAACK,IAAI,EACnC/D,SAAS,EACToB,gBAAgB,EAChB,KAAK,EACLiD,SAAS,EACTC,iBAAiB,EACjB8F,UAAU,EACVC,kBACD,CAAC;YACD;UAED;YACC,MAAMK,gBAAgB,GAAG1K,SAAS,CAACa,MAAM,CAACC,OAAkB;YAC5DuJ,kBAAkB,GAAGC,mCAAmC,CAACtK,SAAS,CAAC;YACnEsE,iBAAiB,GAAGmB,wBAAwB,CAC3CzF,SAAS,CAACa,MAAM,CAACkE,KAAK,EACtB2F,gBAAgB,EAChBtJ,gBAAgB,EAChBiJ,kBAAkB,EAClBhG,SAAS,EACTC,iBAAiB,EACjB8F,UAAU,EACVC,kBACD,CAAC;YACD;UACD;YACC;QACF;QACA;MAED;QACC;IACF;IAEA,OAAO/F,iBAAiB;EACzB;EAACpE,QAAA,CAAAiK,mCAAA,GAAAA,mCAAA;EAEM,MAAMQ,oBAAoB,GAAG,SAAAA,CAAUC,UAA6C,EAAsB;IAChH,IAAIhI,UAAU,CAACgI,UAAU,CAAC,EAAE;MAC3B,OAAOA,UAAU,CAACC,IAAI;IACvB;IACA,IAAIC,SAA6B;IACjC,QAAQF,UAAU,CAACxK,KAAK;MACvB;MACA;MACA;MACA;QACC0K,SAAS,GAAGnJ,SAAS;QACrB;MAED;MACA;MACA;MACA;MACA;QACCmJ,SAAS,GAAIF,UAAU,EAAgBlH,KAAK,EAAE5C,OAAO,EAAE+J,IAAI;QAC3D;MAED;MACA;QACC,IAAID,UAAU,CAAC/J,MAAM,EAAEC,OAAO,EAAEV,KAAK,EAAE;UACtC,MAAMQ,eAAe,GAAGgK,UAAU,CAAC/J,MAAM,CAACC,OAAO;UACjD,IAAIF,eAAe,CAACR,KAAK,wDAA6C,IAAI8C,0BAA0B,CAACtC,eAAe,CAACkI,EAAE,CAAC,EAAE;YACzHgC,SAAS,GAAGlK,eAAe,CAACkI,EAAE,CAAChI,OAAO,EAAE+J,IAAI;UAC7C,CAAC,MAAM,IAAIjK,eAAe,CAACR,KAAK,+CAAoC,EAAE;YACrE0K,SAAS,GAAGlK,eAAe,CAAC8C,KAAK,EAAEqH,KAAK,EAAE3K,KAAK,IAAIQ,eAAe,CAAC8C,KAAK,EAAE5C,OAAO,EAAE+J,IAAI;UACxF,CAAC,MAAM;YACN;YACA;YACAC,SAAS,GACRF,UAAU,CAAC/J,MAAM,CAACC,OAAO,CAACV,KAAK,KAAK,gDAAgD,GAAGuB,SAAS,GAAG,aAAa;UAClH;QACD,CAAC,MAAM;UACNmJ,SAAS,GAAGnJ,SAAS;QACtB;QACA;IACF;IAEA,OAAOmJ,SAAS;EACjB,CAAC;EAAC5K,QAAA,CAAAyK,oBAAA,GAAAA,oBAAA;EAAA,OAAAzK,QAAA;AAAA","ignoreList":[],"file":"DataField-dbg.js"}