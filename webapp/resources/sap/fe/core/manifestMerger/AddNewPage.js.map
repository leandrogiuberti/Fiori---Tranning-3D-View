{"version":3,"file":"AddNewPage.js","names":["applyChange","manifest","change","changeContent","getContent","sourcePage","targetPage","id","Log","error","changeConfiguration","_exports","validateChange","targets","routing","type","name","options","settings","routes","push","pattern","routePattern","target","sourcePageTarget","sourcePageNavigation","navigation","navigationSource","detail","route","ObjectPath","set","startsWith","sourcePageExists","some"],"sources":["./AddNewPage.ts"],"sourcesContent":["import Log from \"sap/base/Log\";\nimport ObjectPath from \"sap/base/util/ObjectPath\";\n\nexport type Change = {\n\tgetContent(): ChangeContent;\n};\n\ntype ChangeContent = {\n\tsourcePage: {\n\t\tid: string;\n\t\tnavigationSource: string;\n\t};\n\ttargetPage: {\n\t\tid: string;\n\t\ttype: string;\n\t\tname: string;\n\t\troutePattern: string;\n\t\tsettings: object;\n\t};\n};\n\ntype navigation = {\n\tnavigation: Record<string, { detail: { route: string } }>;\n};\n\ntype RoutingConfiguration = {\n\troutes?: Array<{\n\t\tpattern: string;\n\t\tname: string;\n\t\ttarget: string;\n\t}>;\n\ttargets?: Record<\n\t\tstring,\n\t\t{\n\t\t\ttype: string;\n\t\t\tname: string;\n\t\t\toptions: {\n\t\t\t\tsettings: navigation;\n\t\t\t};\n\t\t\tid: string;\n\t\t}\n\t>;\n};\n\ntype ManifestContent = {\n\t\"sap.ui5\": {\n\t\trouting?: RoutingConfiguration;\n\t};\n};\n\n/**\n * Apply change method.\n *\n * This method is called by the FLEX framework in case a manifest change with the change type\n * to add a new page was created for the current application. This method is not meant to be\n * called by anyone other than by the FLEX framework.\n * @param manifest The original manifest settings.\n * @param change The change content from FLEX.\n * @returns The changed or unchanged manifest.\n */\nexport function applyChange(manifest: ManifestContent, change: Change): ManifestContent {\n\tconst changeContent = change.getContent();\n\tconst sourcePage = changeContent?.sourcePage;\n\tconst targetPage = changeContent?.targetPage;\n\n\t// return unmodified manifest in case change not valid\n\tif (!sourcePage?.id || !targetPage?.id) {\n\t\tLog.error(\"Change content is not valid, missing source or target page ID.\");\n\t\treturn manifest;\n\t}\n\treturn changeConfiguration(manifest, sourcePage, targetPage);\n}\n\n/**\n * Adds a new object page to the manifest.\n *\n * This method enables you to add a new object page to the SAP Fiori elements application.\n * @param manifest The original manifest settings.\n * @param sourcePage The source page details for the change.\n * @param targetPage The target page details from the change.\n * @returns The changed or unchanged manifest.\n */\nfunction changeConfiguration(\n\tmanifest: ManifestContent,\n\tsourcePage: ChangeContent[\"sourcePage\"],\n\ttargetPage: ChangeContent[\"targetPage\"]\n): ManifestContent {\n\t// Validate the change content\n\tif (!validateChange(manifest, sourcePage, targetPage)) {\n\t\treturn manifest;\n\t}\n\t// Find the targets section in the manifest\n\tconst targets = manifest[\"sap.ui5\"]?.routing?.targets ?? {};\n\t// Add the new target page to the targets\n\ttargets[targetPage.id] = {\n\t\ttype: targetPage.type,\n\t\tname: targetPage.name,\n\t\toptions: {\n\t\t\tsettings: targetPage.settings as navigation\n\t\t},\n\t\tid: targetPage.id\n\t};\n\t// Find the routes section in the manifest\n\tconst routes = manifest[\"sap.ui5\"]?.routing?.routes ?? [];\n\t// Add the new route associated with the target page\n\troutes.push({\n\t\tpattern: targetPage.routePattern,\n\t\tname: targetPage.id,\n\t\ttarget: targetPage.id\n\t});\n\t//Add the navigation in the source page to the target page\n\tconst sourcePageTarget = targets[sourcePage.id];\n\tconst sourcePageNavigation = sourcePageTarget.options?.settings?.navigation ?? {};\n\tsourcePageTarget.options.settings.navigation = {\n\t\t...sourcePageNavigation,\n\t\t[sourcePage.navigationSource]: {\n\t\t\tdetail: {\n\t\t\t\troute: targetPage.id\n\t\t\t}\n\t\t}\n\t};\n\n\t// Update the manifest with the new routes and targets\n\tObjectPath.set([\"sap.ui5\", \"routing\", \"targets\"], targets, manifest);\n\tObjectPath.set([\"sap.ui5\", \"routing\", \"routes\"], routes, manifest);\n\n\treturn manifest;\n}\n\n/**\n * Validate the change content.\n *\n * This method ensures that the change content is valid by performing various checks.\n * @param manifest The original manifest settings.\n * @param sourcePage The source page details from the FLEX change.\n * @param targetPage The target page details from the FLEX change.\n * @returns True if the change is valid, otherwise false.\n */\nfunction validateChange(\n\tmanifest: ManifestContent,\n\tsourcePage: ChangeContent[\"sourcePage\"],\n\ttargetPage: ChangeContent[\"targetPage\"]\n): boolean {\n\tconst targets = manifest[\"sap.ui5\"]?.routing?.targets ?? {};\n\t// Check if target or route ID already exists in the manifest targets object\n\tif (targets[targetPage.id]) {\n\t\tLog.error(\"Target page or route Id already exists in the manifest please check the target page Id in the manifest.\");\n\t\treturn false;\n\t}\n\t// Check if the source page is defined in the routes but does not exist in the targets object\n\tif (!targets[sourcePage.id]) {\n\t\tLog.error(\"Source page does not exist in the manifest targets please check the source page Id in the manifest.\");\n\t\treturn false;\n\t}\n\t// check if the source page is a fe application\n\tif (!targets[sourcePage.id].name.startsWith(\"sap.fe\")) {\n\t\tLog.error(\"Source page is not a Fiori elements application please check the source page name in the manifest.\");\n\t\treturn false;\n\t}\n\t// Check if the source page does not already have target navigation\n\tif (\n\t\ttargets[sourcePage.id].options.settings.navigation &&\n\t\ttargets[sourcePage.id].options.settings.navigation[sourcePage.navigationSource]\n\t) {\n\t\tLog.error(\"Source page already has target navigation please check the source page navigation in the manifest.\");\n\t\treturn false;\n\t}\n\t// Check if the source page exists in the manifest routes\n\tconst routes = manifest[\"sap.ui5\"]?.routing?.routes ?? [];\n\tconst sourcePageExists = routes.some((route: { name: string }) => route.name === sourcePage.id);\n\tif (!sourcePageExists) {\n\t\tLog.error(\"Source page does not exist in the manifest routes please check the source page name in the manifest.\");\n\t\treturn false;\n\t}\n\treturn true;\n}\n"],"mappings":";;;;8FA4DO,SAASA,EAAYC,EAA2BC,GACtD,MAAMC,EAAgBD,EAAOE,aAC7B,MAAMC,EAAaF,GAAeE,WAClC,MAAMC,EAAaH,GAAeG,WAGlC,IAAKD,GAAYE,KAAOD,GAAYC,GAAI,CACvCC,EAAIC,MAAM,kEACV,OAAOR,CACR,CACA,OAAOS,EAAoBT,EAAUI,EAAYC,EAClD,CAEAK,EAAAX,cASA,SAASU,EACRT,EACAI,EACAC,GAGA,IAAKM,EAAeX,EAAUI,EAAYC,GAAa,CACtD,OAAOL,CACR,CAEA,MAAMY,EAAUZ,EAAS,YAAYa,SAASD,SAAW,CAAC,EAE1DA,EAAQP,EAAWC,IAAM,CACxBQ,KAAMT,EAAWS,KACjBC,KAAMV,EAAWU,KACjBC,QAAS,CACRC,SAAUZ,EAAWY,UAEtBX,GAAID,EAAWC,IAGhB,MAAMY,EAASlB,EAAS,YAAYa,SAASK,QAAU,GAEvDA,EAAOC,KAAK,CACXC,QAASf,EAAWgB,aACpBN,KAAMV,EAAWC,GACjBgB,OAAQjB,EAAWC,KAGpB,MAAMiB,EAAmBX,EAAQR,EAAWE,IAC5C,MAAMkB,EAAuBD,EAAiBP,SAASC,UAAUQ,YAAc,CAAC,EAChFF,EAAiBP,QAAQC,SAASQ,WAAa,IAC3CD,EACH,CAACpB,EAAWsB,kBAAmB,CAC9BC,OAAQ,CACPC,MAAOvB,EAAWC,MAMrBuB,EAAWC,IAAI,CAAC,UAAW,UAAW,WAAYlB,EAASZ,GAC3D6B,EAAWC,IAAI,CAAC,UAAW,UAAW,UAAWZ,EAAQlB,GAEzD,OAAOA,CACR,CAWA,SAASW,EACRX,EACAI,EACAC,GAEA,MAAMO,EAAUZ,EAAS,YAAYa,SAASD,SAAW,CAAC,EAE1D,GAAIA,EAAQP,EAAWC,IAAK,CAC3BC,EAAIC,MAAM,2GACV,OAAO,KACR,CAEA,IAAKI,EAAQR,EAAWE,IAAK,CAC5BC,EAAIC,MAAM,uGACV,OAAO,KACR,CAEA,IAAKI,EAAQR,EAAWE,IAAIS,KAAKgB,WAAW,UAAW,CACtDxB,EAAIC,MAAM,sGACV,OAAO,KACR,CAEA,GACCI,EAAQR,EAAWE,IAAIU,QAAQC,SAASQ,YACxCb,EAAQR,EAAWE,IAAIU,QAAQC,SAASQ,WAAWrB,EAAWsB,kBAC7D,CACDnB,EAAIC,MAAM,sGACV,OAAO,KACR,CAEA,MAAMU,EAASlB,EAAS,YAAYa,SAASK,QAAU,GACvD,MAAMc,EAAmBd,EAAOe,KAAML,GAA4BA,EAAMb,OAASX,EAAWE,IAC5F,IAAK0B,EAAkB,CACtBzB,EAAIC,MAAM,wGACV,OAAO,KACR,CACA,OAAO,IACR,CAAC,OAAAE,CAAA","ignoreList":[]}