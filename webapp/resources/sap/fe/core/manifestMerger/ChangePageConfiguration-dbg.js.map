{"version":3,"names":["applyChange","manifest","change","changeContent","getContent","pageId","page","propertyChange","entityPropertyChange","operation","propertyPath","propertyValue","undefined","startsWith","Log","error","changeConfiguration","_exports","path","value","lateChange","appComponent","pageSAPfe","retrievePropertyPath","pageSettings","getPageSettings","manageSpecificFormat","ObjectPath","set","pageConfigurationChanges","push","length","i","get","slice","split","annotationPath","includes","concat","targets","routing","p","id","name","options","settings","applyPageConfigurationChanges","viewData","pageChanges","manifestValue"],"sourceRoot":".","sources":["ChangePageConfiguration.ts"],"sourcesContent":["import Log from \"sap/base/Log\";\nimport ObjectPath from \"sap/base/util/ObjectPath\";\nimport type AppComponent from \"sap/fe/core/AppComponent\";\nimport type { ViewData } from \"sap/fe/core/services/TemplatedViewServiceFactory\";\nimport type { ManifestContent } from \"sap/ui/core/Manifest\";\n\nexport type Change = {\n\tgetContent(): ChangeContent;\n};\n\ntype ChangeContent = {\n\tpage: string; // ID of the page to be changed\n\tentityPropertyChange: EntityPropertyChange;\n};\n\ntype EntityPropertyChange = {\n\tpropertyPath: string; // path to the property to be changed\n\toperation: string; // only UPSERT supported\n\tpropertyValue: string | Object; //what to be changed\n};\n\n/**\n * Apply change method.\n *\n * This method is being called by the FLEX framework in case a manifest change with the change type\n * 'appdescr_fe_changePageConfiguration' was created for the current application. This method is not meant to be\n * called by anyone else but the FLEX framework.\n * @param manifest The original manifest.\n * @param change The change content.\n * @returns The changed or unchanged manifest.\n */\nexport function applyChange(manifest: ManifestContent, change: Change): object {\n\tconst changeContent = change.getContent();\n\tconst pageId = changeContent?.page;\n\tconst propertyChange = changeContent?.entityPropertyChange;\n\n\t// return unmodified manifest in case change not valid\n\tif (\n\t\tpropertyChange?.operation !== \"UPSERT\" ||\n\t\t!propertyChange?.propertyPath ||\n\t\tpropertyChange?.propertyValue === undefined ||\n\t\tpropertyChange?.propertyPath.startsWith(\"/\")\n\t) {\n\t\tLog.error(\"Change content is not a valid\");\n\t\treturn manifest;\n\t}\n\n\treturn changeConfiguration(manifest, pageId, propertyChange.propertyPath, propertyChange.propertyValue);\n}\n\n/**\n * Changes the page configuration of SAP Fiori elements.\n *\n * This method enables you to change the page configuration of SAP Fiori elements.\n * @param manifest The original manifest.\n * @param pageId The ID of the page for which the configuration is to be changed.\n * @param path The path in the page settings for which the configuration is to be changed.\n * @param value The new value of the configuration. This could be a plain value like a string, or a Boolean, or a structured object.\n * @param lateChange Indicates that the change was done after application startup (for example when using the feature toggle).\n * @param appComponent The appComponent, in case the change is done after application startup.\n * @returns The changed or unchanged manifest.\n */\nexport function changeConfiguration(\n\tmanifest: ManifestContent,\n\tpageId: string,\n\tpath: string,\n\tvalue: unknown,\n\tlateChange?: boolean,\n\tappComponent?: AppComponent\n): object {\n\tconst pageSAPfe = \"sap.fe\";\n\tlet propertyPath: string[] = retrievePropertyPath(path);\n\tlet pageSettings;\n\tif (pageId === pageSAPfe) {\n\t\tpropertyPath = [pageSAPfe, ...propertyPath];\n\t\tpageSettings = manifest;\n\t} else {\n\t\tpageSettings = getPageSettings(manifest, pageId);\n\t}\n\n\tif (pageSettings) {\n\t\tmanageSpecificFormat(propertyPath, pageSettings);\n\t\tObjectPath.set(propertyPath, value, pageSettings);\n\t\tif (lateChange && appComponent) {\n\t\t\tappComponent.pageConfigurationChanges[pageId] = appComponent.pageConfigurationChanges[pageId] || [];\n\t\t\tappComponent.pageConfigurationChanges[pageId].push(path);\n\t\t}\n\t} else {\n\t\tLog.error(`No Fiori elements page with ID ${pageId} found in routing targets.`);\n\t}\n\n\treturn manifest;\n}\n/**\n * Manages specific formats in the property path.\n * On some specific cases, the ancestor of the property is not an object (boolean, etc.)\n * This ancestor is changed to an object to accept children.\n * @param propertyPath The path to the property related to a change\n * @param pageSettings The page settings in the manifest\n */\nfunction manageSpecificFormat(propertyPath: string[], pageSettings: object): void {\n\tif (propertyPath.length > 1) {\n\t\tfor (let i = 0; i < propertyPath.length - 1; i++) {\n\t\t\tif (typeof ObjectPath.get(propertyPath.slice(0, i + 1), pageSettings) !== \"object\") {\n\t\t\t\tObjectPath.set(propertyPath.slice(0, i + 1), {}, pageSettings);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Retrieves an array with the property path parts and consider the controlConfiguration specially.\n * @param path The given property path\n * @returns An array with the property path parts.\n */\nfunction retrievePropertyPath(path: string): string[] {\n\tlet propertyPath = path.split(\"/\");\n\tif (propertyPath[0] === \"controlConfiguration\") {\n\t\tlet annotationPath = \"\";\n\t\t// the annotation path in the control configuration has to stay together. For now rely on the fact the @ is in the last part\n\t\tfor (let i = 1; i < propertyPath.length; i++) {\n\t\t\tannotationPath += (i > 1 ? \"/\" : \"\") + propertyPath[i];\n\t\t\tif (annotationPath.includes(\"@\")) {\n\t\t\t\tpropertyPath = [\"controlConfiguration\", annotationPath].concat(propertyPath.slice(i + 1));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn propertyPath;\n}\n\n/**\n * Search the page settings in the manifest for a given page ID.\n * @param manifest The manifest where the search is carried out to find the page settings.\n * @param pageId The ID of the page.\n * @returns The page settings for the page ID or undefined if not found.\n */\nfunction getPageSettings(manifest: ManifestContent, pageId: string): object | undefined {\n\tlet pageSettings;\n\tconst targets = manifest[\"sap.ui5\"]?.routing?.targets ?? {};\n\tfor (const p in targets) {\n\t\tif (targets[p].id === pageId && targets[p].name.startsWith(\"sap.fe.\")) {\n\t\t\tpageSettings = targets[p].options?.settings ?? {};\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn pageSettings;\n}\n\n/**\n * Applies page configuration changes to view data object.\n *\n * UI5 routing clones the manifest settings during the app init, even before the router was initialized.\n * As we allow changing the manifest in the async initializeFeatureToggle hook, the view data might not fit the current\n * manifest settings, therefore (re)applying the registered page configuration changes to the view data object.\n * @param manifest The current page manifest settings.\n * @param viewData The current viewData settings.\n * @param appComponent The app component instance.\n * @param pageId The ID of the page.\n * @returns The updated viewData settings.\n */\nexport function applyPageConfigurationChanges(manifest: object, viewData: ViewData, appComponent: AppComponent, pageId: string): ViewData {\n\tviewData = viewData ?? {};\n\tconst pageChanges: string[] = appComponent.pageConfigurationChanges[pageId] || [];\n\tfor (const path of pageChanges) {\n\t\tconst propertyPath = retrievePropertyPath(path);\n\t\tconst manifestValue = ObjectPath.get(propertyPath, manifest);\n\t\tObjectPath.set(propertyPath, manifestValue, viewData);\n\t}\n\treturn viewData;\n}\n"],"mappings":"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","ignoreList":[],"file":"ChangePageConfiguration-dbg.js"}