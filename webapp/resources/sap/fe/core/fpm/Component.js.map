{"version":3,"file":"Component.js","names":["FPMComponent","_dec","defineUI5Class","manifest","_dec2","property","type","_dec3","_dec4","_dec5","_class","_class2","_TemplateComponent","mSettings","_this","viewType","_jsxViewName","viewName","cache","call","this","_initializerDefineProperty","_descriptor","_descriptor2","_descriptor3","_descriptor4","_inheritsLoose","_proto","prototype","getAppComponent","oAppComponent","TemplateComponent","_applyDecoratedDescriptor","configurable","enumerable","writable","initializer"],"sources":["./Component.ts"],"sourcesContent":["import type { PropertiesOf } from \"sap/fe/base/ClassSupport\";\nimport { defineUI5Class, property } from \"sap/fe/base/ClassSupport\";\nimport type AppComponent from \"sap/fe/core/AppComponent\";\nimport TemplateComponent from \"sap/fe/core/TemplateComponent\";\nimport type Control from \"sap/ui/core/Control\";\nimport type { $UIComponentSettings } from \"sap/ui/core/UIComponent\";\n\n/**\n * Component that can be used as a wrapper component for custom pages.\n *\n * The component can be used in case you want to use SAP Fiori elements Building Blocks or XML template\n * constructions. You can either extend the component and set the viewName and contextPath within your code\n * or you can use it to wrap your custom XML view directly the manifest when you define your custom page\n * under sapui5/routing/targets:\n *\n * <pre>\n * \"myCustomPage\": {\n *\t \"type\": \"Component\",\n *\t \"id\": \"myCustomPage\",\n *\t \"name\": \"sap.fe.core.fpm\",\n *\t \"title\": \"My Custom Page\",\n *\t \"options\": {\n *\t\t\"settings\": {\n *\t\t\t\"viewName\": \"myNamespace.myView\",\n *\t\t\t\"contextPath\": \"/MyEntitySet\"\n *\t\t}\n *\t }\n *  }\n * </pre>\n * @public\n * @since 1.92.0\n */\n@defineUI5Class(\"sap.fe.core.fpm.Component\", { manifest: \"json\" })\nclass FPMComponent extends TemplateComponent {\n\t/**\n\t * Name of the XML view which is used for this page. The XML view can contain SAP Fiori elements Building Blocks and XML template constructions.\n\t * @public\n\t */\n\t@property({ type: \"string\" })\n\tviewName!: string;\n\n\t@property({ type: \"string\" })\n\tcontrollerName?: string;\n\n\t@property({ type: \"string\" })\n\t_jsxViewName = \"\";\n\n\t@property({ type: \"any\" })\n\tviewContent?: Control | Function;\n\n\tconstructor(mSettings: PropertiesOf<FPMComponent> & Record<string, unknown>) {\n\t\tif (mSettings.viewType === \"JSX\") {\n\t\t\tmSettings._jsxViewName = mSettings.viewName;\n\t\t\tmSettings.viewName = \"module:sap/fe/base/jsx-runtime/ViewLoader\";\n\t\t\t// Remove the cache property from the settings as it is not supported by the ViewLoader\n\t\t\tdelete mSettings.cache;\n\t\t}\n\t\tsuper(mSettings as $UIComponentSettings);\n\t}\n\n\t/**\n\t * Returns the current AppComponent.\n\t * @returns The current AppComponent\n\t * @public\n\t */\n\tgetAppComponent(): AppComponent {\n\t\treturn this.oAppComponent;\n\t}\n}\n\nexport default FPMComponent;\n"],"mappings":";;;;4mCAOA,IA0BMA,GAAYC,EADjBC,EAAe,4BAA6B,CAAEC,SAAU,SAASC,EAMhEC,EAAS,CAAEC,KAAM,WAAWC,EAG5BF,EAAS,CAAEC,KAAM,WAAWE,EAG5BH,EAAS,CAAEC,KAAM,WAAWG,EAG5BJ,EAAS,CAAEC,KAAM,QAAQL,EAAAS,GAAAC,EAAA,SAAAC,GAG1B,SAAAZ,EAAYa,GAAiE,IAAAC,EAC5E,GAAID,EAAUE,WAAa,MAAO,CACjCF,EAAUG,aAAeH,EAAUI,SACnCJ,EAAUI,SAAW,mDAEdJ,EAAUK,KAClB,CACAJ,EAAAF,EAAAO,KAAAC,KAAMP,IAAkCO,KAvBzCC,EAAAP,EAAA,WAAAQ,EAAAR,GAAAO,EAAAP,EAAA,iBAAAS,EAAAT,GAAAO,EAAAP,EAAA,eAAAU,EAAAV,GAAAO,EAAAP,EAAA,cAAAW,EAAAX,GAAA,OAAAA,CAwBA,CAEAY,EAAA1B,EAAAY,GAAA,IAAAe,EAAA3B,EAAA4B,UAAAD,EAKAE,gBAAA,SAAAA,IACC,OAAOT,KAAKU,aACb,EAAC,OAAA9B,CAAA,CApByB,CAdA+B,GAAiBT,EAAAU,EAAArB,EAAAiB,UAAA,YAAAxB,GAAA,CAAA6B,aAAA,KAAAC,WAAA,KAAAC,SAAA,KAAAC,YAAA,OAAAb,EAAAS,EAAArB,EAAAiB,UAAA,kBAAArB,GAAA,CAAA0B,aAAA,KAAAC,WAAA,KAAAC,SAAA,KAAAC,YAAA,OAAAZ,EAAAQ,EAAArB,EAAAiB,UAAA,gBAAApB,GAAA,CAAAyB,aAAA,KAAAC,WAAA,KAAAC,SAAA,KAAAC,YAAA,iBAY5B,EAAE,IAAAX,EAAAO,EAAArB,EAAAiB,UAAA,eAAAnB,GAAA,CAAAwB,aAAA,KAAAC,WAAA,KAAAC,SAAA,KAAAC,YAAA,OAAAzB,KAAAD,GAAA,OAyBHV,CAAY","ignoreList":[]}