{"version":3,"names":["getMetadataETag","sUrl","sETag","mUpdatedMetaModelETags","Promise","resolve","jQuery","ajax","method","done","oResponse","sTextStatus","jqXHR","getResponseHeader","fail","CacheHandlerService","_Service","apply","arguments","_exports","_inheritsLoose","_proto","prototype","init","oContext","getContext","oFactory","factory","mSettings","settings","metaModel","Error","oMetaModel","oAppComponent","appComponent","oComponent","component","initPromise","fetchEntityContainer","then","mCacheNeedsInvalidate","exit","removeGlobalInstance","validateCacheKey","sCacheIdentifier","environmentService","bCacheNeedUpdate","sCacheKey","mCacheOutput","CacheManager","get","mMetaModelETags","getETags","JSON","stringify","mCachedETags","parse","cachedETags","aValidETags","all","Object","keys","map","includes","some","viewCacheKey","e","invalidateIfNeeded","sCacheKeys","sDataSourceETags","mCacheKeys","set","forEach","sMetaModelKey","metaModelETag","Date","toISOString","oManifestContent","getManifest","sManifestHash","hash","sapApp","viewData","getViewData","capabilities","getCapabilities","getInterface","Service","CacheHandlerServiceFactory","_ServiceFactory","_this","_len","length","args","Array","_key","call","_oInstanceRegistry","_proto2","createInstance","oServiceContext","sMetaModelId","getId","cacheHandlerInstance","assign","scopeObject","scopeType","catch","getInstance","ServiceFactory"],"sourceRoot":".","sources":["CacheHandlerServiceFactory.ts"],"sourcesContent":["import hash from \"sap/base/strings/hash\";\nimport type AppComponent from \"sap/fe/core/AppComponent\";\nimport type TemplateComponent from \"sap/fe/core/TemplateComponent\";\nimport type { EnvironmentCapabilitiesService } from \"sap/fe/core/services/EnvironmentServiceFactory\";\nimport type UIComponent from \"sap/ui/core/UIComponent\";\nimport CacheManager from \"sap/ui/core/cache/CacheManager\";\nimport Service from \"sap/ui/core/service/Service\";\nimport ServiceFactory from \"sap/ui/core/service/ServiceFactory\";\nimport type ODataMetaModel from \"sap/ui/model/odata/v4/ODataMetaModel\";\nimport jQuery from \"sap/ui/thirdparty/jquery\";\nimport type { ServiceContext } from \"types/metamodel_types\";\n\nasync function getMetadataETag(sUrl: string, sETag: string, mUpdatedMetaModelETags: Record<string, string | null>): Promise<boolean> {\n\treturn new Promise<boolean>(function (resolve): void {\n\t\t// There is an Url in the FE cache, that's not in the MetaModel yet -> we need to check the ETag\n\t\tjQuery\n\t\t\t.ajax(sUrl, { method: \"GET\" })\n\t\t\t.done(function (oResponse: unknown, sTextStatus: string, jqXHR: jQuery.XHR) {\n\t\t\t\t// ETag is not the same -> invalid\n\t\t\t\t// ETag is the same -> valid\n\t\t\t\t// If ETag is available use it, otherwise use Last-Modified\n\t\t\t\tmUpdatedMetaModelETags[sUrl] = jqXHR.getResponseHeader(\"ETag\") || jqXHR.getResponseHeader(\"Last-Modified\");\n\t\t\t\tresolve(sETag === mUpdatedMetaModelETags[sUrl]);\n\t\t\t})\n\t\t\t.fail(function () {\n\t\t\t\t// Case 2z - Make sure we update the map so that we invalidate the cache\n\t\t\t\tmUpdatedMetaModelETags[sUrl] = \"\";\n\t\t\t\tresolve(false);\n\t\t\t});\n\t});\n}\ntype CacheHandlerServiceSettings = {\n\tmetaModel: ODataMetaModel;\n};\n\nexport class CacheHandlerService extends Service<CacheHandlerServiceSettings> {\n\tinitPromise!: Promise<this>;\n\n\toFactory!: CacheHandlerServiceFactory;\n\n\toMetaModel!: ODataMetaModel;\n\n\toAppComponent!: AppComponent;\n\n\toComponent!: UIComponent;\n\n\tmCacheNeedsInvalidate!: Record<string, unknown>;\n\n\tinit(): void {\n\t\tconst oContext = this.getContext();\n\t\tthis.oFactory = oContext.factory;\n\t\tconst mSettings = oContext.settings;\n\t\tif (!mSettings.metaModel) {\n\t\t\tthrow new Error(\"a `metaModel` property is expected when instantiating the CacheHandlerService\");\n\t\t}\n\t\tthis.oMetaModel = mSettings.metaModel;\n\t\tthis.oAppComponent = mSettings.appComponent;\n\t\tthis.oComponent = mSettings.component;\n\t\tthis.initPromise = this.oMetaModel.fetchEntityContainer().then(() => {\n\t\t\treturn this;\n\t\t});\n\t\tthis.mCacheNeedsInvalidate = {};\n\t}\n\n\texit(): void {\n\t\t// Deregister global instance\n\t\tthis.oFactory.removeGlobalInstance(this.oMetaModel);\n\t}\n\n\tasync validateCacheKey(\n\t\tsCacheIdentifier: string,\n\t\toComponent: TemplateComponent,\n\t\tenvironmentService: EnvironmentCapabilitiesService\n\t): Promise<string | null> {\n\t\t// Keep track if the cache will anyway need to be updated\n\t\tlet bCacheNeedUpdate = true;\n\t\tlet sCacheKey: string | null;\n\n\t\ttry {\n\t\t\tconst mCacheOutput = await CacheManager.get(sCacheIdentifier);\n\t\t\t// We provide a default key so that an xml view cache is written\n\t\t\tconst mMetaModelETags = this.getETags(oComponent, environmentService);\n\t\t\tsCacheKey = JSON.stringify(mMetaModelETags);\n\t\t\t// Case #1a - No cache, so mCacheOuput is empty, cacheKey = current metamodel ETags\n\t\t\tif (mCacheOutput) {\n\t\t\t\t// Case #2 - Cache entry found, check if it's still valid\n\t\t\t\tconst mUpdatedMetaModelETags: Record<string, string | null> = {};\n\t\t\t\tconst mCachedETags = JSON.parse(mCacheOutput.cachedETags);\n\t\t\t\tconst aValidETags = await Promise.all(\n\t\t\t\t\tObject.keys(mCachedETags).map(async function (sUrl: string) {\n\t\t\t\t\t\t// Check validity of every single Url that's in the FE Cache object\n\t\t\t\t\t\tif (mCachedETags[sUrl]) {\n\t\t\t\t\t\t\tif (mMetaModelETags[sUrl]) {\n\t\t\t\t\t\t\t\t// Case #2a - Same number of ETags in the cache and in the metadata\n\t\t\t\t\t\t\t\tmUpdatedMetaModelETags[sUrl] = mMetaModelETags[sUrl];\n\t\t\t\t\t\t\t\treturn mCachedETags[sUrl] === mMetaModelETags[sUrl];\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// Case #2b - No ETag in the cache for that URL, cachedETags was enhanced\n\t\t\t\t\t\t\t\treturn getMetadataETag(sUrl, mCachedETags[sUrl], mUpdatedMetaModelETags);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Case #2z - Last Templating added an URL without ETag\n\t\t\t\t\t\t\tmUpdatedMetaModelETags[sUrl] = mMetaModelETags[sUrl];\n\t\t\t\t\t\t\treturn mCachedETags[sUrl] === mMetaModelETags[sUrl];\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t);\n\n\t\t\t\tbCacheNeedUpdate = aValidETags.includes(false);\n\t\t\t\t// Case #2a - Same number of ETags and all valid -> we return the viewCacheKey\n\t\t\t\t// Case #2b - Different number of ETags and still all valid -> we return the viewCacheKey\n\t\t\t\t// Case #2c - Same number of ETags but different values, main service Etag has changed, use that as cache key\n\t\t\t\t// Case #2d - Different number of ETags but different value, main service Etag or linked service Etag has changed, new ETags should be used as cacheKey\n\t\t\t\t// Case #2z - Cache has an invalid Etag - if there is an Etag provided from MetaModel use it as cacheKey\n\t\t\t\tif (\n\t\t\t\t\tObject.keys(mUpdatedMetaModelETags).some(function (sUrl: string) {\n\t\t\t\t\t\treturn !mUpdatedMetaModelETags[sUrl];\n\t\t\t\t\t})\n\t\t\t\t) {\n\t\t\t\t\t// At least one of the MetaModel URLs doesn't provide an ETag, so no caching\n\t\t\t\t\tsCacheKey = null;\n\t\t\t\t} else {\n\t\t\t\t\tsCacheKey = bCacheNeedUpdate ? JSON.stringify(mUpdatedMetaModelETags) : mCacheOutput.viewCacheKey;\n\t\t\t\t\tsCacheKey ??= JSON.stringify(mUpdatedMetaModelETags); // Special case where the cache key was not set\n\t\t\t\t}\n\t\t\t} else if (\n\t\t\t\tObject.keys(mMetaModelETags).some(function (sUrl: string) {\n\t\t\t\t\treturn !mMetaModelETags[sUrl];\n\t\t\t\t})\n\t\t\t) {\n\t\t\t\t// Check if cache can be used (all the metadata and annotations have to provide at least a ETag or a Last-Modified header)\n\t\t\t\t// Case #1-b - No Cache, mCacheOuput is empty, but metamodel etags cannot be used, so no caching\n\t\t\t\tsCacheKey = null;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t// Don't use view cache in case of issues with the LRU cache\n\t\t\tbCacheNeedUpdate = true;\n\t\t\tsCacheKey = null;\n\t\t}\n\n\t\tthis.mCacheNeedsInvalidate[sCacheIdentifier] = bCacheNeedUpdate;\n\t\treturn sCacheKey;\n\t}\n\n\tasync invalidateIfNeeded(\n\t\tsCacheKeys: string,\n\t\tsCacheIdentifier: string,\n\t\toComponent: TemplateComponent,\n\t\tenvironmentService: EnvironmentCapabilitiesService\n\t): Promise<void> {\n\t\t// Check FE cache after XML view is processed completely\n\t\tconst sDataSourceETags = JSON.stringify(this.getETags(oComponent, environmentService));\n\t\tif (this.mCacheNeedsInvalidate[sCacheIdentifier] || (sCacheKeys && sCacheKeys !== sDataSourceETags)) {\n\t\t\t// Something in the sources and/or its ETags changed -> update the FE cache\n\t\t\tconst mCacheKeys: Record<string, string> = {};\n\t\t\t// New ETags that need to be verified, may differ from the one used to generate the view\n\t\t\tmCacheKeys.cachedETags = sDataSourceETags;\n\t\t\t// Old ETags that are used for the xml view cache as key\n\t\t\tmCacheKeys.viewCacheKey = sCacheKeys;\n\t\t\treturn CacheManager.set(sCacheIdentifier, mCacheKeys);\n\t\t} else {\n\t\t\treturn Promise.resolve();\n\t\t}\n\t}\n\n\tgetETags(oComponent: TemplateComponent, environmentService: EnvironmentCapabilitiesService): Record<string, string | null> {\n\t\tconst mMetaModelETags = this.oMetaModel.getETags();\n\t\t// ETags from UI5 are either a Date or a string, let's rationalize that\n\t\tObject.keys(mMetaModelETags).forEach(function (sMetaModelKey: string) {\n\t\t\tconst metaModelETag: string | null | Object = mMetaModelETags[sMetaModelKey];\n\t\t\tif (metaModelETag !== null && metaModelETag instanceof Date) {\n\t\t\t\t// MetaModel contains a Last-Modified timestamp for the URL\n\t\t\t\tmMetaModelETags[sMetaModelKey] = (mMetaModelETags[sMetaModelKey] as unknown as Date).toISOString();\n\t\t\t}\n\t\t});\n\n\t\t// add also the manifest hash as UI5 only considers the root component hash\n\t\tconst oManifestContent = this.oAppComponent.getManifest();\n\t\tconst sManifestHash = hash(\n\t\t\tJSON.stringify({\n\t\t\t\tsapApp: oManifestContent[\"sap.app\"],\n\t\t\t\tviewData: oComponent.getViewData()\n\t\t\t})\n\t\t);\n\t\tmMetaModelETags[\"manifest\"] = sManifestHash;\n\t\tconst capabilities = environmentService.getCapabilities();\n\t\tif (capabilities) {\n\t\t\tmMetaModelETags[\"toggles\"] = hash(JSON.stringify(capabilities));\n\t\t}\n\n\t\treturn mMetaModelETags;\n\t}\n\n\tgetInterface(): this {\n\t\treturn this;\n\t}\n}\n\nclass CacheHandlerServiceFactory extends ServiceFactory<CacheHandlerServiceSettings> {\n\t_oInstanceRegistry: Record<string, CacheHandlerService | null> = {};\n\n\tasync createInstance(oServiceContext: ServiceContext<CacheHandlerServiceSettings>): Promise<CacheHandlerService> {\n\t\tconst sMetaModelId = oServiceContext.settings.metaModel.getId();\n\t\tlet cacheHandlerInstance = this._oInstanceRegistry[sMetaModelId];\n\t\tif (!cacheHandlerInstance) {\n\t\t\tthis._oInstanceRegistry[sMetaModelId] = cacheHandlerInstance = new CacheHandlerService(\n\t\t\t\tObject.assign(\n\t\t\t\t\t{\n\t\t\t\t\t\tfactory: this,\n\t\t\t\t\t\tscopeObject: null,\n\t\t\t\t\t\tscopeType: \"service\"\n\t\t\t\t\t},\n\t\t\t\t\toServiceContext\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\t\treturn cacheHandlerInstance.initPromise\n\t\t\t.then(() => {\n\t\t\t\treturn this._oInstanceRegistry[sMetaModelId] as CacheHandlerService;\n\t\t\t})\n\t\t\t.catch((e: unknown) => {\n\t\t\t\t// In case of error delete the global instance;\n\t\t\t\tthis._oInstanceRegistry[sMetaModelId] = null;\n\t\t\t\tthrow e;\n\t\t\t});\n\t}\n\n\tgetInstance(oMetaModel: ODataMetaModel): CacheHandlerService | null {\n\t\treturn this._oInstanceRegistry[oMetaModel.getId()];\n\t}\n\n\tremoveGlobalInstance(oMetaModel: ODataMetaModel): void {\n\t\tthis._oInstanceRegistry[oMetaModel.getId()] = null;\n\t}\n}\n\nexport default CacheHandlerServiceFactory;\n"],"mappings":"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","ignoreList":[],"file":"CacheHandlerServiceFactory-dbg.js"}