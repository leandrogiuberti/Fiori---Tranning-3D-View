{"version":3,"file":"ViewPreloaderServiceFactory.js","names":["ViewPreloaderService","_Service","_this","_len","arguments","length","args","Array","_key","call","this","newViews","_exports","_inheritsLoose","_proto","prototype","init","initPromise","Promise","resolve","appComponent","getContext","scopeObject","setCache","routeConfig","routeArguments","bindingPattern","pattern","path","RoutingHelpler","buildBindingPath","isCacheReady","targetConfig","target","isArray","forEach","targetName","model","getModel","setCurrentCacheEntryByTargetName","currentCacheentry","viewPreloaderCache","getCurrentCacheEntry","visitedContextPath","startsWith","push","async","manifestContent","getManifest","shouldRefreshView","pageLevelRequestPromises","preloadConfigurationProperties","map","record","value","requestPropertyOrSingleton","sPath","values","aResults","all","reduce","acc","curr","key","Object","keys","viewShouldbeRefreshed","setCacheReady","propOrSingletonPath","pageBindingPath","isSingleton","__","entity","property","exec","contextPath","bindingProperty","getAllBindings","find","binding","getPath","getValue","bindProperty","requestValue","isReady","cacheReady","getCacheEntryByTargetName","cacheEntry","addEntryToCache","Service","ViewPreloaderServiceFactory","_ServiceFactory","apply","_proto2","createInstance","oServiceContext","instance","getInstance","ServiceFactory"],"sources":["./ViewPreloaderServiceFactory.ts"],"sourcesContent":["import type { Route } from \"@ui5/manifest/types/manifest\";\nimport type { PageLevelCache } from \"sap/fe/base/ViewPreloaderCache\";\nimport { viewPreloaderCache } from \"sap/fe/base/ViewPreloaderCache\";\nimport Service from \"sap/ui/core/service/Service\";\nimport ServiceFactory from \"sap/ui/core/service/ServiceFactory\";\nimport type ODataPropertyBinding from \"sap/ui/model/odata/ODataPropertyBinding\";\nimport type ODataModel from \"sap/ui/model/odata/v4/ODataModel\";\nimport type { ServiceContext } from \"types/metamodel_types\";\nimport type AppComponent from \"../AppComponent\";\nimport RoutingHelpler from \"../helpers/RoutingHelper\";\n\nexport class ViewPreloaderService extends Service<{}> {\n\tinitPromise!: Promise<ViewPreloaderService>;\n\n\tprivate appComponent!: AppComponent;\n\n\tprivate cacheReady: Promise<void[]> | undefined;\n\n\tinit(): void {\n\t\tthis.initPromise = new Promise((resolve) => {\n\t\t\tthis.appComponent = this.getContext().scopeObject as AppComponent;\n\t\t\tresolve(this);\n\t\t});\n\t}\n\n\t/**\n\t * Sets the cache for the current route.\n\t * @param routeConfig The route configuration.\n\t * @param routeArguments The route arguments.\n\t * @param appComponent\n\t */\n\tsetCache(routeConfig: Route, routeArguments: Record<string, string | object>, appComponent: AppComponent): void {\n\t\tconst bindingPattern = routeConfig.pattern as string;\n\t\tconst { path } = RoutingHelpler.buildBindingPath(routeArguments, bindingPattern, {});\n\t\tconst isCacheReady: Promise<void>[] = [];\n\t\tlet targetConfig = routeConfig.target as string | string[];\n\t\ttargetConfig = Array.isArray(targetConfig) ? targetConfig : [targetConfig];\n\n\t\ttargetConfig.forEach((targetName: string) => {\n\t\t\tconst model = appComponent.getModel();\n\n\t\t\tthis.setCurrentCacheEntryByTargetName(targetName);\n\t\t\tconst currentCacheentry = viewPreloaderCache.getCurrentCacheEntry();\n\n\t\t\tif (currentCacheentry.visitedContextPath?.startsWith(path)) {\n\t\t\t\tisCacheReady.push(Promise.resolve());\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tisCacheReady.push(\n\t\t\t\tnew Promise<void>(async (resolve) => {\n\t\t\t\t\tconst manifestContent = appComponent.getManifest();\n\t\t\t\t\tlet shouldRefreshView = false;\n\t\t\t\t\tconst pageLevelRequestPromises =\n\t\t\t\t\t\tmanifestContent[\"sap.ui5\"][\"routing\"]?.[\"targets\"]?.[targetName]?.[\"options\"]?.[\n\t\t\t\t\t\t\t\"settings\"\n\t\t\t\t\t\t]?.preloadConfigurationProperties?.map(async (sPath: string) => {\n\t\t\t\t\t\t\tconst record = {} as Record<string, unknown>;\n\t\t\t\t\t\t\tconst value = await this.requestPropertyOrSingleton(sPath, model, path);\n\t\t\t\t\t\t\tshouldRefreshView = currentCacheentry.values?.[sPath] !== value ? true : shouldRefreshView;\n\t\t\t\t\t\t\trecord[sPath] = value;\n\t\t\t\t\t\t\treturn record;\n\t\t\t\t\t\t}) ?? [];\n\n\t\t\t\t\t// all promises are resolved and the results are merged into a single object\n\t\t\t\t\tconst aResults = (await Promise.all(pageLevelRequestPromises)).reduce(\n\t\t\t\t\t\t(acc, curr) => {\n\t\t\t\t\t\t\tconst key = Object.keys(curr)[0];\n\t\t\t\t\t\t\tacc[key] = curr[key];\n\t\t\t\t\t\t\treturn acc;\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{} as Record<string, unknown>\n\t\t\t\t\t);\n\n\t\t\t\t\tshouldRefreshView = !currentCacheentry.visitedContextPath ? false : shouldRefreshView; //if first page loading, the refreshing of the view is not needed\n\t\t\t\t\tcurrentCacheentry.visitedContextPath = path;\n\t\t\t\t\tcurrentCacheentry.values = aResults;\n\t\t\t\t\tcurrentCacheentry.viewShouldbeRefreshed = shouldRefreshView;\n\t\t\t\t\tresolve();\n\t\t\t\t})\n\t\t\t);\n\t\t});\n\t\tthis.setCacheReady(Promise.all(isCacheReady));\n\t}\n\n\t/**\n\t * Requests a property or singleton value from the model.\n\t * If the property is not bound, it binds it and requests its value.\n\t * @param propOrSingletonPath The path to the property or singleton.\n\t * @param model The OData model.\n\t * @param pageBindingPath The binding path of the page.\n\t * @returns The value of the property or singleton.\n\t */\n\tasync requestPropertyOrSingleton(propOrSingletonPath: string, model: ODataModel, pageBindingPath: string): Promise<unknown> {\n\t\tconst isSingleton = propOrSingletonPath.startsWith(\"/\"); // if starts with /, it is a singletonasync\n\t\tconst [__, entity, property] = [...(/(?:(.*)\\/){0,1}([^/]*)/.exec(propOrSingletonPath) as string[])];\n\t\t// eg: /Products/ID -> entity: Products, property: ID\n\t\t// eg: status -> entity: undefined, property: status\n\n\t\tconst contextPath = isSingleton ? entity : pageBindingPath;\n\t\tlet value: unknown;\n\n\t\t// we check first if the property is already bound in order to use its cached value\n\t\t// otherwise we bind the property and request its value\n\t\tconst bindingProperty = model\n\t\t\t.getAllBindings()\n\t\t\t.find((binding) => binding.getContext()?.getPath() === contextPath && binding.getPath() === property) as\n\t\t\t| ODataPropertyBinding\n\t\t\t| undefined;\n\t\tvalue = bindingProperty?.getValue();\n\t\tif (!value) {\n\t\t\tvalue = await model.bindProperty(`${contextPath}/${property}`).requestValue();\n\t\t}\n\n\t\treturn value;\n\t}\n\n\tprivate newViews: Promise<void>[] = [];\n\n\t/**\n\t *  Sets the cache ready state.\n\t * @param isReady\n\t */\n\tsetCacheReady(isReady: Promise<void[]>): void {\n\t\tthis.cacheReady = isReady;\n\t}\n\n\t/**\n\t * Returns the cache ready state.\n\t * @returns The cache ready state.\n\t */\n\tasync isCacheReady(): Promise<boolean> {\n\t\tawait this.cacheReady;\n\t\treturn true;\n\t}\n\n\t/**\n\t * Returns the current cache entry for the app component.\n\t * @returns  The current cache entry for the app component.\n\t */\n\tgetCurrentCacheEntry(): PageLevelCache {\n\t\treturn viewPreloaderCache.getCurrentCacheEntry();\n\t}\n\n\t/**\n\t *Returns the full cache object, which contains all application level caches.\n\t * @param targetName\n\t * @returns The full cache object for the app component.\n\t */\n\tgetCacheEntryByTargetName(targetName: string): PageLevelCache | undefined {\n\t\treturn viewPreloaderCache.getCacheEntryByTargetName(targetName, this.appComponent);\n\t}\n\n\t/**\n\t * Sets the current cache entry by the target name.\n\t * If the target name does not exist, it creates a new cache entry and adds it to the full cache.\n\t * @param targetName\n\t */\n\tsetCurrentCacheEntryByTargetName(targetName: string): void {\n\t\tconst cacheEntry = this.getCacheEntryByTargetName(targetName) ?? { values: {} };\n\t\tviewPreloaderCache.addEntryToCache(cacheEntry, targetName, this.appComponent);\n\t}\n}\n\nexport class ViewPreloaderServiceFactory extends ServiceFactory<{}> {\n\tprivate instance!: ViewPreloaderService;\n\n\tasync createInstance(oServiceContext: ServiceContext<{}>): Promise<ViewPreloaderService> {\n\t\tthis.instance = new ViewPreloaderService(oServiceContext);\n\t\treturn this.instance.initPromise;\n\t}\n\n\tgetInstance(): ViewPreloaderService {\n\t\treturn this.instance;\n\t}\n}\n"],"mappings":"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","ignoreList":[]}