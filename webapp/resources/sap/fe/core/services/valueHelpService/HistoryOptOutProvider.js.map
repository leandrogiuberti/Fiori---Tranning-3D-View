{"version":3,"file":"HistoryOptOutProvider.js","names":["HistoryOptOutProvider","valueHelpHistoryService","this","resourceBundle","Library","getResourceBundleFor","_userAction","_exports","_proto","prototype","getDialog","dialog","createOptOutUserProfileEntry","async","shellExtensionService","getShellExtensionService","userAction","createUserAction","text","getText","icon","IconPool","getIconURI","press","historyEnabledSwitch","Switch","createDialog","enabled","getHistoryEnabled","setState","open","controlType","destroy","showForCurrentApp","err","Log","error","Error","message","String","createDialogLayout","historyEnabledLabel","Label","labelFor","addStyleClass","historyEnabledLayout","HBox","alignItems","items","deleteHistoryButton","Button","busyIndicatorDelay","onDeleteHistoryPress","bind","deleteHistoryLabel","deleteHistoryLayout","FlexBox","VBox","dialogLayout","saveButton","onSavePress","cancelButton","closeDialog","Dialog","title","content","buttons","afterClose","undefined","event","button","getSource","setBusy","MessageBox","confirm","onClose","result","deleteHistoryForAllApps","then","window","location","reload","getState","setHistoryEnabled","close"],"sources":["./HistoryOptOutProvider.ts"],"sourcesContent":["import Log from \"sap/base/Log\";\nimport type { IValueHelpHistoryService } from \"sap/fe/core/services/ValueHelpHistoryServiceFactory\";\nimport Button from \"sap/m/Button\";\nimport Dialog from \"sap/m/Dialog\";\nimport type { $FlexBoxSettings } from \"sap/m/FlexBox\";\nimport FlexBox from \"sap/m/FlexBox\";\nimport HBox, { type $HBoxSettings } from \"sap/m/HBox\";\nimport Label from \"sap/m/Label\";\nimport MessageBox from \"sap/m/MessageBox\";\nimport Switch from \"sap/m/Switch\";\nimport VBox from \"sap/m/VBox\";\nimport type Event from \"sap/ui/base/Event\";\nimport IconPool from \"sap/ui/core/IconPool\";\nimport Library from \"sap/ui/core/Lib\";\nimport type Item from \"sap/ushell/services/Extension/Item\";\n\nexport default class HistoryOptOutProvider {\n\tprivate valueHelpHistoryService: IValueHelpHistoryService;\n\n\tprivate dialog?: Dialog;\n\n\tprivate historyEnabledSwitch?: Switch;\n\n\tprivate resourceBundle = Library.getResourceBundleFor(\"sap.fe.core\")!;\n\n\tprivate _userAction: Item | null = null;\n\tconstructor(valueHelpHistoryService: IValueHelpHistoryService) {\n\t\tthis.valueHelpHistoryService = valueHelpHistoryService;\n\t}\n\n\tpublic getDialog(): Dialog | undefined {\n\t\treturn this.dialog;\n\t}\n\n\t/**\n\t * For history settings we need to create a user profile entry and a handler for opening the dialog.\n\t * @returns Promise that is resolved when user menu entry control is created\n\t */\n\tasync createOptOutUserProfileEntry(): Promise<Item | undefined> {\n\t\tconst shellExtensionService = this.valueHelpHistoryService.getShellExtensionService();\n\t\tlet userAction: Item | undefined;\n\n\t\ttry {\n\t\t\tuserAction = await shellExtensionService.createUserAction(\n\t\t\t\t{\n\t\t\t\t\ttext: this.resourceBundle.getText(\"C_HISTORY_SETTING_TITLE\"),\n\t\t\t\t\ticon: IconPool.getIconURI(\"history\"),\n\t\t\t\t\tpress: async (): Promise<void> => {\n\t\t\t\t\t\tthis.historyEnabledSwitch = new Switch();\n\n\t\t\t\t\t\tthis.dialog = this.createDialog();\n\n\t\t\t\t\t\tconst enabled = await this.valueHelpHistoryService.getHistoryEnabled();\n\t\t\t\t\t\tthis.historyEnabledSwitch.setState(enabled);\n\n\t\t\t\t\t\tthis.dialog.open();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcontrolType: \"sap.m.Button\"\n\t\t\t\t}\n\t\t\t);\n\t\t\tif (this._userAction) {\n\t\t\t\tthis._userAction.destroy();\n\t\t\t}\n\t\t\tthis._userAction = userAction;\n\n\t\t\tuserAction.showForCurrentApp();\n\t\t} catch (err) {\n\t\t\tLog.error(\"Cannot add user action\", err instanceof Error ? err.message : String(err));\n\t\t}\n\n\t\treturn userAction;\n\t}\n\n\t/*\n\t\tCreate Controls\n\t */\n\n\t/**\n\t * For the history setting dialog we need to create all the necessary UI elements for the\n\t * enable history tracking switch and the clear history button.\n\t * @returns The dialog layout\n\t */\n\tprivate createDialogLayout(): VBox {\n\t\tconst historyEnabledLabel = new Label({\n\t\t\ttext: this.resourceBundle.getText(\"C_HISTORY_SETTING_ENABLE_TRACKING_DESCRIPTION\"),\n\t\t\tlabelFor: this.historyEnabledSwitch\n\t\t}).addStyleClass(\"sapUiSmallMarginEnd\");\n\t\tconst historyEnabledLayout = new HBox({\n\t\t\talignItems: \"Center\",\n\t\t\titems: [historyEnabledLabel, this.historyEnabledSwitch]\n\t\t} as $HBoxSettings);\n\n\t\tconst deleteHistoryButton = new Button({\n\t\t\tbusyIndicatorDelay: 0,\n\t\t\ttext: this.resourceBundle.getText(\"C_HISTORY_SETTING_DELETE_BUTTON\"),\n\t\t\tpress: this.onDeleteHistoryPress.bind(this)\n\t\t});\n\t\tconst deleteHistoryLabel = new Label({\n\t\t\ttext: this.resourceBundle.getText(\"C_HISTORY_SETTING_DELETE_DESCRIPTION\"),\n\t\t\tlabelFor: deleteHistoryButton\n\t\t}).addStyleClass(\"sapUiSmallMarginEnd\");\n\t\tconst deleteHistoryLayout = new FlexBox({\n\t\t\talignItems: \"Center\",\n\t\t\titems: [deleteHistoryLabel, deleteHistoryButton]\n\t\t} as $FlexBoxSettings);\n\n\t\treturn new VBox({\n\t\t\titems: [historyEnabledLayout, deleteHistoryLayout]\n\t\t}).addStyleClass(\"sapUiSmallMargin\");\n\t}\n\n\t/**\n\t * Create history setting dialog with save and cancel buttons.\n\t * @returns The dialog for the history settings\n\t */\n\tprivate createDialog(): Dialog {\n\t\tconst dialogLayout = this.createDialogLayout();\n\n\t\tconst saveButton = new Button({\n\t\t\ttext: this.resourceBundle.getText(\"C_HISTORY_SETTING_SAVE\"),\n\t\t\tpress: this.onSavePress.bind(this)\n\t\t});\n\t\tconst cancelButton = new Button({\n\t\t\ttext: this.resourceBundle.getText(\"C_HISTORY_SETTING_CANCEL\"),\n\t\t\tpress: () => this.closeDialog()\n\t\t});\n\n\t\treturn new Dialog(\"sapui5.history.optOutDialog\", {\n\t\t\ttitle: this.resourceBundle.getText(\"C_HISTORY_SETTING_TITLE\"),\n\t\t\tcontent: [dialogLayout],\n\t\t\tbuttons: [saveButton, cancelButton],\n\t\t\tafterClose: (): void => {\n\t\t\t\t// When the dialog is closed we need to free the resources\n\t\t\t\tthis.dialog?.destroy();\n\t\t\t\tthis.dialog = undefined;\n\t\t\t\tthis.historyEnabledSwitch = undefined;\n\t\t\t}\n\t\t});\n\t}\n\n\t/*\n\t\tHandlers\n\t */\n\n\t/**\n\t * Handler which is called on clear history button press.\n\t * @param event Button press event\n\t */\n\tprivate onDeleteHistoryPress(event: Event<{}, Button>): void {\n\t\tconst button = event.getSource();\n\t\tbutton.setBusy(true);\n\n\t\tMessageBox.confirm(this.resourceBundle.getText(\"C_HISTORY_SETTING_DELETE_CONFIRM_MESSAGE\"), {\n\t\t\tonClose: async (result: string) => {\n\t\t\t\tif (result === \"CANCEL\") {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tawait this.valueHelpHistoryService.deleteHistoryForAllApps().then(function () {\n\t\t\t\t\treturn window.location.reload();\n\t\t\t\t});\n\n\t\t\t\tthis.closeDialog();\n\t\t\t}\n\t\t});\n\n\t\tbutton.setBusy(false);\n\t}\n\n\t/**\n\t * Handler which is called on save button press.\n\t */\n\tprivate onSavePress(): void {\n\t\tMessageBox.confirm(this.resourceBundle.getText(\"C_HISTORY_SETTING_SAVE_CONFIRM_MESSAGE\"), {\n\t\t\tonClose: async (result: string) => {\n\t\t\t\tif (result === \"CANCEL\") {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst enabled = this.historyEnabledSwitch?.getState() ?? false;\n\t\t\t\tawait this.valueHelpHistoryService.setHistoryEnabled(enabled);\n\n\t\t\t\tthis.closeDialog();\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Close the dialog.\n\t */\n\tprivate closeDialog(): void {\n\t\tthis.dialog?.close();\n\t}\n}\n"],"mappings":"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","ignoreList":[]}