{"version":3,"names":["ContextSharingService","_Service","apply","arguments","_exports","_inheritsLoose","_proto","prototype","init","initPromise","Promise","resolve","appComponent","getContext","bind","scopeObject","registerProvider","onExit","contextChannel","unregisterProvider","isContextChannelSupported","environmentCapabilities","getService","getCapabilities","ContextSharingSupported","isContextSharingEnabled","default","ContextChannel","__ui5_require_async","getInstance","err","Log","error","getId","buildContext","shell","getShellServices","view","CommonUtils","getCurrentPageView","app","getManifestEntry","context","app_title","title","id","getViewName","flp","hash","getHash","getRouterProxy","entity","servicePath","getModel","getServiceUrl","entityPath","getBindingContext","getPath","getViewData","fullContextPath","getController","contextSharing","Service","ContextSharingServiceFactory","_ServiceFactory","_proto2","createInstance","oServiceContext","contextSharingService","ServiceFactory"],"sourceRoot":".","sources":["ContextSharingServiceFactory.ts"],"sourcesContent":["import Log from \"sap/base/Log\";\nimport type ContextChannel from \"sap/insights/channels/ContextChannel\";\nimport type { IContextProvider } from \"sap/insights/channels/ContextChannel\";\nimport Service from \"sap/ui/core/service/Service\";\nimport ServiceFactory from \"sap/ui/core/service/ServiceFactory\";\nimport type { ServiceContext } from \"types/metamodel_types\";\nimport type AppComponent from \"../AppComponent\";\nimport CommonUtils from \"../CommonUtils\";\nimport type { IShellServices } from \"../services/ShellServicesFactory\";\nimport type { EnvironmentCapabilitiesService } from \"./EnvironmentServiceFactory\";\n\nexport class ContextSharingService extends Service<ContextSharingServiceFactory> implements IContextProvider {\n\tinitPromise!: Promise<ContextSharingService>;\n\n\tprivate appComponent!: AppComponent;\n\n\tprivate contextChannel!: ContextChannel;\n\n\tinit(): void {\n\t\tthis.initPromise = new Promise(async (resolve) => {\n\t\t\tthis.appComponent = super.getContext.bind(this)().scopeObject as AppComponent;\n\t\t\tawait this.registerProvider();\n\t\t\tresolve(this);\n\t\t});\n\t}\n\n\tonExit(): void {\n\t\tthis.contextChannel?.unregisterProvider(this);\n\t}\n\n\tpublic async isContextChannelSupported(): Promise<boolean> {\n\t\tconst environmentCapabilities = (await this.appComponent.getService(\"environmentCapabilities\")) as EnvironmentCapabilitiesService;\n\t\treturn (\n\t\t\tenvironmentCapabilities.getCapabilities().ContextSharingSupported && (await environmentCapabilities.isContextSharingEnabled())\n\t\t);\n\t}\n\n\t/**\n\t * This function is responsible to register the current service as a provider for the Joule context.\n\t */\n\tprivate async registerProvider(): Promise<void> {\n\t\tif (!(await this.isContextChannelSupported())) {\n\t\t\treturn;\n\t\t}\n\t\tconst { default: ContextChannel } = await import(\"sap/insights/channels/ContextChannel\");\n\t\t// joule integration\n\t\ttry {\n\t\t\tthis.contextChannel = await ContextChannel.getInstance();\n\t\t\tthis.contextChannel.registerProvider(this);\n\t\t} catch (err: unknown) {\n\t\t\tLog.error(err as string);\n\t\t}\n\t}\n\n\tgetId(): string {\n\t\treturn this.appComponent.getId();\n\t}\n\n\t/**\n\t * Build a context related to the active view to be shared with the Joule Web Client.\n\t *\n\t * The custom property of this context can be enriched by overriding the #ContextSharing.getContext function.\n\t * @returns A context object\n\t */\n\tbuildContext(): object {\n\t\tconst shell = this.appComponent.getShellServices() as IShellServices & {\n\t\t\tgetContext(): { scopeObject: AppComponent };\n\t\t};\n\t\tconst view = CommonUtils.getCurrentPageView(this.appComponent);\n\t\tconst app = this.appComponent.getManifestEntry(\"sap.app\");\n\t\t/*\n\t\t * Sample of context:\n\t\t * {\n\t\t * \t\"app_title\": \"Manage Sales Orders (V2)\",\n\t\t * \t\"cus.sd.salesorderv2.manage\": {\n\t\t * \t\t\"app\": {\n\t\t * \t\t\t\"view\": \"sap.fe.templates.ObjectPage.ObjectPage\"\n\t\t * \t\t},\n\t\t * \t\tflp: {\n\t\t * \t\t\t\"hash\": \"#SalesOrder-manageV2&/SalesOrderManage('91375')\"\n\t\t * \t\t},\n\t\t * \t\"entity\": {\n\t\t * \t\t\"servicePath\": \"/sap/opu/odata4/sap/c_salesordermanage_srv/srvd/sap/c_salesordermanage_sd/0001\",\n\t\t * \t\t\"entityPath\": \"/SalesOrderManage(ID='91375')\"\n\t\t * \t\t}\n\t\t *  \"custom\" : {\n\t\t * \t\t\"customProp\": \"customValue\"\n\t\t * \t}\n\t\t * }\n\t\t */\n\t\tconst context = {\n\t\t\tapp_title: app.title,\n\t\t\t[app.id]: {\n\t\t\t\tapp: {\n\t\t\t\t\tview: view.getViewName()\n\t\t\t\t},\n\t\t\t\tflp: {\n\t\t\t\t\thash: `${shell.getHash()}&/${shell.getContext().scopeObject.getRouterProxy().getHash()}`\n\t\t\t\t},\n\t\t\t\tentity: {\n\t\t\t\t\tservicePath: view.getModel().getServiceUrl(),\n\t\t\t\t\tentityPath: view.getBindingContext()?.getPath() ?? view.getViewData()?.fullContextPath\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn view.getController().contextSharing.getContext(context);\n\t}\n\n\tasync getContext(): Promise<object> {\n\t\treturn Promise.resolve(this.buildContext());\n\t}\n}\n\nexport default class ContextSharingServiceFactory extends ServiceFactory<ContextSharingServiceFactory> {\n\tpublic async createInstance(oServiceContext: ServiceContext<ContextSharingServiceFactory>): Promise<ContextSharingService> {\n\t\tconst contextSharingService = new ContextSharingService(oServiceContext);\n\t\treturn contextSharingService.initPromise;\n\t}\n}\n"],"mappings":"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","ignoreList":[],"file":"ContextSharingServiceFactory-dbg.js"}