{"version":3,"names":["NavigationService","_Service","apply","arguments","_exports","_inheritsLoose","_proto","prototype","init","oContext","getContext","oComponent","scopeObject","oNavHandler","NavigationHandler","setModel","getModel","initPromise","Promise","resolve","exit","destroy","navigate","sSemanticObject","sActionName","vNavigationParameters","oInnerAppData","fnOnError","oExternalAppData","sNavMode","parseNavigation","getAppSpecificHash","appHash","_getAppSpecificHash","getAppStateKeyAndUrlParameters","sSelectionVariant","_getAppStateKeyAndUrlParameters","getTechnicalParameters","setTechnicalParameters","aTechnicalParameters","oModel","storeInnerAppStateAsync","mInnerAppData","bImmediateHashReplace","bSkipHashReplace","appComponent","getRouterProxy","setAppStateUpdating","reject","then","result","replaceHash","sAppStateKey","replaceInnerAppStateKey","sAppHash","_replaceInnerAppStateKey","getUrlParametersFromSelectionVariant","vSelectionVariant","_getURLParametersFromSelectionVariant","saveAppStateWithImmediateReturn","oInSelectionVariant","toJSONString","oSelectionVariant","JSON","parse","oXAppStateObject","selectionVariant","oReturn","_saveAppStateWithImmediateReturn","appStateKey","undefined","mixAttributesAndSelectionVariant","vSemanticAttributes","iSuppressionBehavior","constructContextUrl","sEntitySetName","getInterface","getIAppStateKey","checkIsPotentiallySensitive","oData","_checkIsPotentiallySensitive","Service","fnGetEmptyObject","fnGetPromise","fnGetJQueryPromise","oMyDeffered","jQuery","Deferred","promise","fnGetEmptyString","NavigationServicesMock","_ServiceFactory","_this","call","createEmptyAppState","getAppState","getStartupAppState","_proto2","ServiceFactory","NavigationServiceFactory","_ServiceFactory2","_proto3","createInstance","oServiceContext","oNavigationService","sap","ui","require","oService"],"sourceRoot":".","sources":["NavigationServiceFactory.ts"],"sourcesContent":["import type { InnerAppData } from \"sap/fe/navigation/NavigationHandler\";\nimport NavigationHandler from \"sap/fe/navigation/NavigationHandler\";\nimport type SelectionVariant from \"sap/fe/navigation/SelectionVariant\";\nimport type { SerializedSelectionVariant } from \"sap/fe/navigation/SelectionVariant\";\nimport Service from \"sap/ui/core/service/Service\";\nimport ServiceFactory from \"sap/ui/core/service/ServiceFactory\";\nimport type ODataModel from \"sap/ui/model/odata/v4/ODataModel\";\nimport jQuery from \"sap/ui/thirdparty/jquery\";\nimport type { ServiceContext } from \"types/metamodel_types\";\n\ntype NavigationServiceSettings = {};\nexport class NavigationService extends Service<NavigationServiceSettings> {\n\tinitPromise!: Promise<this>;\n\n\toNavHandler!: NavigationHandler;\n\n\tinit(): void {\n\t\tconst oContext = this.getContext(),\n\t\t\toComponent = oContext && oContext.scopeObject;\n\n\t\tthis.oNavHandler = new NavigationHandler(oComponent);\n\t\tthis.oNavHandler.setModel(oComponent.getModel());\n\t\tthis.initPromise = Promise.resolve(this);\n\t}\n\n\texit(): void {\n\t\tthis.oNavHandler.destroy();\n\t}\n\n\t/**\n\t * Triggers a cross-app navigation after saving the inner and the cross-app states.\n\t * @param sSemanticObject Semantic object of the target app\n\t * @param sActionName Action of the target app\n\t * @param [vNavigationParameters] Navigation parameters as an object with key/value pairs or as a string representation of\n\t *        such an object. If passed as an object, the properties are not checked against the <code>IsPotentialSensitive</code> or\n\t *        <code>Measure</code> type.\n\t * @param [oInnerAppData] Object for storing current state of the app\n\t * @param [fnOnError] Callback that is called if an error occurs during navigation <br>\n\t * @param [oExternalAppData] Object for storing the state which will be forwarded to the target component.\n\t * @param oExternalAppData.valueTexts\n\t * @param oExternalAppData.presentationVariant\n\t * @param oExternalAppData.selectionVariant\n\t * @param [sNavMode] Argument is used to overwrite the FLP-configured target for opening a URL. If used, only the\n\t *        <code>explace</code> or <code>inplace</code> values are allowed. Any other value will lead to an exception\n\t *        <code>NavigationHandler.INVALID_NAV_MODE</code>.\n\t */\n\tnavigate(\n\t\tsSemanticObject: string,\n\t\tsActionName: string,\n\t\tvNavigationParameters: string | object,\n\t\toInnerAppData?: InnerAppData,\n\t\tfnOnError?: Function,\n\t\toExternalAppData?: {\n\t\t\tvalueTexts?: object | undefined;\n\t\t\tpresentationVariant?: object | undefined;\n\t\t\tselectionVariant?: object | undefined;\n\t\t},\n\t\tsNavMode?: string\n\t): void {\n\t\t// TODO: Navigation Handler does not handle navigation without a context\n\t\t// but in v4 DataFieldForIBN with requiresContext false can trigger a navigation without any context\n\t\t// This should be handled\n\t\tthis.oNavHandler.navigate(\n\t\t\tsSemanticObject,\n\t\t\tsActionName,\n\t\t\tvNavigationParameters,\n\t\t\toInnerAppData,\n\t\t\tfnOnError,\n\t\t\toExternalAppData,\n\t\t\tsNavMode\n\t\t);\n\t}\n\n\t/**\n\t * Parses the incoming URL and returns a Promise.\n\t * @returns A Promise object which returns the\n\t * extracted app state, the startup parameters, and the type of navigation when execution is successful,\n\t */\n\tparseNavigation(): jQuery.Promise<unknown[]> {\n\t\treturn this.oNavHandler.parseNavigation() as jQuery.Promise<unknown[]>;\n\t}\n\n\t/**\n\t * Get App specific hash.\n\t * @param appHash The path string\n\t * @returns A string representing base path\n\t */\n\tasync getAppSpecificHash(appHash: string): Promise<string | undefined> {\n\t\treturn this.oNavHandler._getAppSpecificHash(appHash);\n\t}\n\n\t/**\n\t * Processes selectionVariant string and returns a Promise object (semanticAttributes and AppStateKey).\n\t * @param sSelectionVariant Stringified JSON object\n\t * @returns A Promise object to monitor when all actions in the function have been executed; if the execution is successful, the\n\t *          semanticAttributes as well as the appStateKey are returned; if an error occurs, an error object of type\n\t *          {@link sap.fe.navigation.NavError} is returned\n\t * <br>\n\t * @example <code>\n\t *\n\t * \t\tvar oSelectionVariant = new sap.fe.navigation.SelectionVariant();\n\t * \t\toSelectionVariant.addSelectOption(\"CompanyCode\", \"I\", \"EQ\", \"0001\");\n\t * \t\toSelectionVariant.addSelectOption(\"Customer\", \"I\", \"EQ\", \"C0001\");\n\t * \t\tvar sSelectionVariant= oSelectionVariant.toJSONString();\n\t *\n\t * \t\tvar oNavigationHandler = new sap.fe.navigation.NavigationHandler(oController);\n\t * \t\tvar oPromiseObject = oNavigationHandler._getAppStateKeyAndUrlParameters(sSelectionVariant);\n\t *\n\t * \t\toPromiseObject.done(function(oSemanticAttributes, sAppStateKey){\n\t * \t\t\t// here you can add coding that should run after all app state and the semantic attributes have been returned.\n\t * \t\t});\n\t *\n\t * \t\toPromiseObject.fail(function(oError){\n\t * \t\t\t//some error handling\n\t * \t\t});\n\t *\n\t * </code>\n\t */\n\t// eslint-disable-next-line @typescript-eslint/promise-function-async\n\tgetAppStateKeyAndUrlParameters(sSelectionVariant: string): JQuery.Promise<string[], unknown, unknown> {\n\t\treturn this.oNavHandler._getAppStateKeyAndUrlParameters(sSelectionVariant);\n\t}\n\n\t/**\n\t * Gets the application specific technical parameters.\n\t * @returns Containing the technical parameters.\n\t */\n\tgetTechnicalParameters(): string[] {\n\t\treturn this.oNavHandler.getTechnicalParameters();\n\t}\n\n\t/**\n\t * Sets the application specific technical parameters. Technical parameters will not be added to the selection variant passed to the\n\t * application.\n\t * As a default sap-system, sap-ushell-defaultedParameterNames and hcpApplicationId are considered as technical parameters.\n\t * @param aTechnicalParameters List of parameter names to be considered as technical parameters. <code>null</code> or\n\t *        <code>undefined</code> may be used to reset the complete list.\n\t */\n\tsetTechnicalParameters(aTechnicalParameters: unknown[]): void {\n\t\tthis.oNavHandler.setTechnicalParameters(aTechnicalParameters);\n\t}\n\n\t/**\n\t * Sets the model that is used for verification of sensitive information. If the model is not set, the unnamed component model is used for the\n\t * verification of sensitive information.\n\t * @param oModel Model For checking sensitive information\n\t */\n\tsetModel(oModel: ODataModel): void {\n\t\tthis.oNavHandler.setModel(oModel);\n\t}\n\n\t/**\n\t * Changes the URL according to the current app state and stores the app state for later retrieval.\n\t * @param mInnerAppData Object containing the current state of the app\n\t * @param [bImmediateHashReplace] If set to false, the inner app hash will not be replaced until storing is successful; do not\n\t *        set to false if you cannot react to the resolution of the Promise, for example, when calling the beforeLinkPressed event\n\t * @param [bSkipHashReplace] If set to true, the inner app hash will not be replaced in the storeInnerAppState. Also the bImmediateHashReplace\n\t * \t\t  will be ignored.\n\t * @returns A Promise object to monitor when all the actions of the function have been executed; if the execution is successful, the\n\t *          app state key is returned; if an error occurs, an object of type {@link sap.fe.navigation.NavError} is\n\t *          returned\n\t */\n\tasync storeInnerAppStateAsync(\n\t\tmInnerAppData: InnerAppData,\n\t\tbImmediateHashReplace?: boolean,\n\t\tbSkipHashReplace?: boolean\n\t): Promise<string> {\n\t\t// safely converting JQuerry deferred to ES6 promise\n\t\tconst appComponent = this.getContext() && this.getContext().scopeObject;\n\t\tappComponent?.getRouterProxy().setAppStateUpdating(true);\n\t\treturn new Promise<string>((resolve, reject) =>\n\t\t\tthis.oNavHandler.storeInnerAppStateAsync(mInnerAppData, bImmediateHashReplace, bSkipHashReplace).then(resolve, reject)\n\t\t).then((result) => {\n\t\t\tappComponent?.getRouterProxy().setAppStateUpdating(false);\n\t\t\treturn result;\n\t\t});\n\t}\n\n\t/**\n\t * Changes the URL according to the current sAppStateKey. As an reaction route change event will be triggered.\n\t * @param sAppStateKey The new app state key.\n\t */\n\treplaceHash(sAppStateKey: string): void {\n\t\tthis.oNavHandler.replaceHash(sAppStateKey);\n\t}\n\n\treplaceInnerAppStateKey(sAppHash: string, sAppStateKey: string): string | undefined {\n\t\treturn this.oNavHandler._replaceInnerAppStateKey(sAppHash, sAppStateKey);\n\t}\n\n\t/**\n\t * Get single values from SelectionVariant for url parameters.\n\t * @param [vSelectionVariant]\n\t * @param [vSelectionVariant.oUrlParamaters]\n\t * @returns The url parameters\n\t */\n\tgetUrlParametersFromSelectionVariant(vSelectionVariant: string | SelectionVariant | undefined): Record<string, string> {\n\t\treturn this.oNavHandler._getURLParametersFromSelectionVariant(vSelectionVariant);\n\t}\n\n\t/**\n\t * Save app state and return immediately without waiting for response.\n\t * @param oInSelectionVariant Instance of sap.fe.navigation.SelectionVariant\n\t * @returns AppState key\n\t */\n\tsaveAppStateWithImmediateReturn(oInSelectionVariant: SelectionVariant): string | undefined {\n\t\tif (oInSelectionVariant) {\n\t\t\tconst sSelectionVariant = oInSelectionVariant.toJSONString(), // create an SV for app state in string format\n\t\t\t\toSelectionVariant = JSON.parse(sSelectionVariant), // convert string into JSON to store in AppState\n\t\t\t\toXAppStateObject = {\n\t\t\t\t\tselectionVariant: oSelectionVariant\n\t\t\t\t},\n\t\t\t\toReturn = this.oNavHandler._saveAppStateWithImmediateReturn(oXAppStateObject);\n\t\t\treturn oReturn?.appStateKey ? oReturn.appStateKey : \"\";\n\t\t} else {\n\t\t\treturn undefined;\n\t\t}\n\t}\n\n\t/**\n\t * Mix Attributes and selectionVariant.\n\t * @param vSemanticAttributes Object/(Array of Objects) containing key/value pairs\n\t * @param sSelectionVariant The selection variant in string format as provided by the SmartFilterBar control\n\t * @param iSuppressionBehavior Indicates whether semantic\n\t *        attributes with special values (see {@link sap.fe.navigation.SuppressionBehavior suppression behavior}) must be\n\t *        suppressed before they are combined with the selection variant; several\n\t *        {@link sap.fe.navigation.SuppressionBehavior suppression behaviors} can be combined with the bitwise OR operator\n\t *        (|)\n\t * @returns Instance of {@link sap.fe.navigation.SelectionVariant}\n\t */\n\tmixAttributesAndSelectionVariant(\n\t\tvSemanticAttributes: object | unknown[],\n\t\tsSelectionVariant: string | SerializedSelectionVariant,\n\t\tiSuppressionBehavior?: number\n\t): SelectionVariant {\n\t\treturn this.oNavHandler.mixAttributesAndSelectionVariant(vSemanticAttributes, sSelectionVariant, iSuppressionBehavior);\n\t}\n\n\t/**\n\t * The method creates a context url based on provided data. This context url can either be used as.\n\t * @param sEntitySetName Used for url determination\n\t * @param oModel The ODataModel used for url determination. If omitted, the NavigationHandler model is used.\n\t * @returns The context url for the given entities\n\t */\n\tconstructContextUrl(sEntitySetName: string, oModel: ODataModel): string {\n\t\treturn this.oNavHandler.constructContextUrl(sEntitySetName, oModel);\n\t}\n\n\tgetInterface(): this {\n\t\treturn this;\n\t}\n\n\t/**\n\t * The method returns iAppState key for the current navgation handler instance.\n\t * @returns IAppState key\n\t */\n\tgetIAppStateKey(): string | undefined {\n\t\treturn this.oNavHandler.getIAppStateKey();\n\t}\n\n\tcheckIsPotentiallySensitive(oData: Object): unknown {\n\t\treturn this.oNavHandler._checkIsPotentiallySensitive(oData);\n\t}\n}\nfunction fnGetEmptyObject(): {} {\n\treturn {};\n}\n\nasync function fnGetPromise(): Promise<{}> {\n\treturn Promise.resolve({});\n}\n// eslint-disable-next-line @typescript-eslint/promise-function-async\nfunction fnGetJQueryPromise(): JQuery.Promise<unknown> {\n\tconst oMyDeffered = jQuery.Deferred();\n\toMyDeffered.resolve({}, {}, \"initial\");\n\treturn oMyDeffered.promise();\n}\n\nfunction fnGetEmptyString(): string {\n\treturn \"\";\n}\nexport class NavigationServicesMock extends ServiceFactory<NavigationServiceSettings> {\n\tinitPromise: Promise<this>;\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.initPromise = Promise.resolve(this);\n\t}\n\n\tgetInterface(): this {\n\t\treturn this;\n\t}\n\n\t// return empty object\n\tcreateEmptyAppState = fnGetEmptyObject;\n\n\tmixAttributesAndSelectionVariant = fnGetEmptyObject;\n\n\t// return promise\n\tgetAppState = fnGetPromise;\n\n\tgetStartupAppState = fnGetPromise;\n\n\tparseNavigation = fnGetJQueryPromise;\n\n\t// return empty string\n\tconstructContextUrl = fnGetEmptyString;\n\n\treplaceInnerAppStateKey(sAppHash: string): string {\n\t\treturn sAppHash ? sAppHash : \"\";\n\t}\n\n\tgetIAppStateKey = fnGetEmptyString;\n\n\tnavigate(): void {\n\t\t// Don't do anything\n\t}\n}\n\nclass NavigationServiceFactory extends ServiceFactory<NavigationServiceSettings> {\n\tasync createInstance(oServiceContext: ServiceContext<NavigationServiceSettings>): Promise<NavigationService> {\n\t\tconst oNavigationService = sap.ui.require(\"sap/ushell/Container\")\n\t\t\t? new NavigationService(oServiceContext)\n\t\t\t: new NavigationServicesMock();\n\t\t// Wait For init\n\t\treturn oNavigationService.initPromise.then(function (oService) {\n\t\t\treturn oService as NavigationService;\n\t\t});\n\t}\n}\n\nexport default NavigationServiceFactory;\n"],"mappings":"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","ignoreList":[],"file":"NavigationServiceFactory-dbg.js"}