/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2025 SAP SE. All rights reserved
 */
sap.ui.define(["sap/base/Log","sap/ui/core/service/Service","sap/ui/core/service/ServiceFactory","../CommonUtils"],function(t,e,n,i){"use strict";function o(t){return new Promise((e,n)=>{sap.ui.require([t],n=>{if(!(n&&n.__esModule)){n=n===null||!(typeof n==="object"&&t.endsWith("/library"))?{default:n}:n;Object.defineProperty(n,"__esModule",{value:true})}e(n)},t=>{n(t)})})}var r={};function s(t,e){t.prototype=Object.create(e.prototype),t.prototype.constructor=t,a(t,e)}function a(t,e){return a=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},a(t,e)}let c=function(e){function n(){return e.apply(this,arguments)||this}r.ContextSharingService=n;s(n,e);var a=n.prototype;a.init=function t(){this.initPromise=new Promise(async t=>{this.appComponent=e.prototype.getContext.bind(this)().scopeObject;await this.registerProvider();t(this)})};a.onExit=function t(){this.contextChannel?.unregisterProvider(this)};a.isContextChannelSupported=async function t(){const e=await this.appComponent.getService("environmentCapabilities");return e.getCapabilities().ContextSharingSupported&&await e.isContextSharingEnabled()};a.registerProvider=async function e(){if(!await this.isContextChannelSupported()){return}const{default:n}=await o("sap/insights/channels/ContextChannel");try{this.contextChannel=await n.getInstance();this.contextChannel.registerProvider(this)}catch(e){t.error(e)}};a.getId=function t(){return this.appComponent.getId()};a.buildContext=function t(){const e=this.appComponent.getShellServices();const n=i.getCurrentPageView(this.appComponent);const o=this.appComponent.getManifestEntry("sap.app");const r={app_title:o.title,[o.id]:{app:{view:n.getViewName()},flp:{hash:`${e.getHash()}&/${e.getContext().scopeObject.getRouterProxy().getHash()}`},entity:{servicePath:n.getModel().getServiceUrl(),entityPath:n.getBindingContext()?.getPath()??n.getViewData()?.fullContextPath}}};return n.getController().contextSharing.getContext(r)};a.getContext=async function t(){return Promise.resolve(this.buildContext())};return n}(e);r.ContextSharingService=c;let p=function(t){function e(){return t.apply(this,arguments)||this}r=e;s(e,t);var n=e.prototype;n.createInstance=async function t(e){const n=new c(e);return n.initPromise};return e}(n);r=p;return r},false);
//# sourceMappingURL=ContextSharingServiceFactory.js.map