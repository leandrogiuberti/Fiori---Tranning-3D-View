{"version":3,"file":"EnvironmentServiceFactory.js","names":["OptionalFeatures","SmartSummarize","intent","library","imports","MagicFiltering","ErrorExplanation","EasyEdit","DefaultEnvironmentCapabilities","Chart","MicroChart","Collaboration","UShell","IntentBasedNavigation","AppState","InsightsSupported","ContextSharingSupported","DisableInputAssistance","HiddenDraft","loadLibrary","async","EnvironmentCapabilitiesService","resolveLibrary","libraryName","_exports","_Service","_this","_len","arguments","length","args","Array","_key","call","this","optionalFeatureLibraries","_inheritsLoose","_proto","prototype","prepareFeature","feature","Error","Library","load","initialize","oContext","getContext","environmentCapabilities","Object","assign","shellContainer","sap","ui","require","versionInfo","VersionInfo","libraries","some","lib","name","hideDraft","scopeObject","getManifestEntry","app","enabled","stayOnCurrentPageAfterSave","stayOnCurrentPageAfterCancel","hideCreateNext","navigationService","getServiceAsync","featureName","entries","url","resolveIntent","__ui5_require_async","e","Log","info","message","settings","Promise","resolve","then","catch","setCapabilities","oCapabilities","setCapability","capability","value","getCapabilities","isInsightsEnabled","isLibAvailable","CardHelper","getMSTeamsActive","isContextSharingEnabled","getInterface","Service","EnvironmentServiceFactory","_ServiceFactory","apply","_proto2","createInstance","oServiceContext","environmentCapabilitiesService","ServiceFactory","isTeamsModeActive","default","CollaborationHelper"],"sources":["./EnvironmentServiceFactory.ts"],"sourcesContent":["import Log from \"sap/base/Log\";\nimport type { HiddenDraft } from \"sap/fe/core/converters/ManifestSettings\";\nimport VersionInfo from \"sap/ui/VersionInfo\";\nimport Library from \"sap/ui/core/Lib\";\nimport Service from \"sap/ui/core/service/Service\";\nimport ServiceFactory from \"sap/ui/core/service/ServiceFactory\";\nimport type Navigation from \"sap/ushell/services/Navigation\";\nimport type { ServiceContext } from \"types/metamodel_types\";\n\ntype OptionalFeatureDefinition = {\n\tintent: string;\n\tlibrary: string;\n\timports?: string;\n};\n/**\n * Configuration for the optional features.\n */\nconst OptionalFeatures: Record<string, OptionalFeatureDefinition> = {\n\tSmartSummarize: {\n\t\tintent: \"IntelligentPrompt-summarize\",\n\t\tlibrary: \"ux.eng.fioriai.reuse\",\n\t\timports: \"ux/eng/fioriai/reuse/summary/SmartSummary\"\n\t},\n\tMagicFiltering: {\n\t\tintent: \"IntelligentPrompt-filter\",\n\t\tlibrary: \"ux.eng.fioriai.reuse\",\n\t\timports: \"ux/eng/fioriai/reuse/easyfilter/EasyFilter\"\n\t},\n\tErrorExplanation: {\n\t\tintent: \"IntelligentPrompt-explain\",\n\t\tlibrary: \"ux.eng.fioriai.reuse\",\n\t\timports: \"ux/eng/fioriai/reuse/errorexplanation/ErrorExplanation\"\n\t},\n\tEasyEdit: {\n\t\tintent: \"IntelligentPrompt-fill\",\n\t\tlibrary: \"ux.eng.fioriai.reuse\",\n\t\timports: \"ux/eng/fioriai/reuse/easyfill/EasyFill\"\n\t}\n};\ntype FeatureName = keyof typeof OptionalFeatures;\n\nexport type EnvironmentCapabilities = {\n\tChart: boolean;\n\tMicroChart: boolean;\n\tCollaboration: boolean;\n\tUShell: boolean;\n\tIntentBasedNavigation: boolean;\n\tAppState: boolean;\n\tDisableInputAssistance: boolean;\n\tInsightsSupported: boolean;\n\tContextSharingSupported: boolean;\n\tHiddenDraft: HiddenDraft | boolean;\n} & {\n\tloadLibrary?(library: string): Promise<boolean>;\n} & {\n\t[featureName: string]: boolean;\n};\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nexport const DefaultEnvironmentCapabilities: Readonly<EnvironmentCapabilities> = {\n\tChart: true,\n\tMicroChart: true,\n\tCollaboration: false,\n\tUShell: true,\n\tIntentBasedNavigation: true,\n\tAppState: true,\n\tInsightsSupported: false,\n\tContextSharingSupported: false,\n\tSmartSummarize: false,\n\tMagicFiltering: false,\n\tEasyEdit: false,\n\tErrorExplanation: false,\n\tDisableInputAssistance: false,\n\tHiddenDraft: false,\n\tloadLibrary: async (libraryName): Promise<boolean> => {\n\t\treturn EnvironmentCapabilitiesService.resolveLibrary(libraryName);\n\t}\n};\nexport class EnvironmentCapabilitiesService extends Service<EnvironmentCapabilities> {\n\trejectFn!: () => void;\n\n\tinitPromise!: Promise<this>;\n\n\tenvironmentCapabilities!: EnvironmentCapabilities;\n\n\t// !: means that we know it will be assigned before usage\n\tprivate optionalFeatureLibraries: Partial<Record<FeatureName, { url: string; name: string; imports?: string }>> = {};\n\n\t/**\n\t * Prepares the feature for usage.\n\t *\n\t * This function loads the library registered for the feature.\n\t * @param feature The feature to prepare.\n\t * @throws Error if the feature is unavailable.\n\t */\n\tasync prepareFeature(feature: FeatureName): Promise<void> {\n\t\tconst library = this.optionalFeatureLibraries[feature];\n\t\tif (!library) {\n\t\t\tthrow new Error(`Feature '${feature}' is unavailable`);\n\t\t}\n\n\t\tawait Library.load(library);\n\t}\n\n\tasync initialize(): Promise<void> {\n\t\tconst oContext = this.getContext();\n\t\tthis.environmentCapabilities = Object.assign({}, DefaultEnvironmentCapabilities) as EnvironmentCapabilities;\n\n\t\tconst shellContainer = sap.ui.require(\"sap/ushell/Container\");\n\t\tconst versionInfo = await VersionInfo.load();\n\t\tthis.environmentCapabilities.Chart = versionInfo.libraries.some((lib) => lib.name === \"sap.viz\");\n\t\tthis.environmentCapabilities.MicroChart = versionInfo.libraries.some((lib) => lib.name === \"sap.suite.ui.microchart\");\n\t\tthis.environmentCapabilities.Collaboration = versionInfo.libraries.some((lib) => lib.name === \"sap.suite.ui.commons\");\n\t\tif (this.environmentCapabilities.Collaboration) {\n\t\t\tawait EnvironmentCapabilitiesService.resolveLibrary(\"sap.suite.ui.commons\");\n\t\t}\n\t\tthis.environmentCapabilities.UShell = !!shellContainer;\n\t\tthis.environmentCapabilities.IntentBasedNavigation = !!shellContainer;\n\t\tthis.environmentCapabilities.InsightsSupported = versionInfo.libraries.some((lib) => lib.name === \"sap.insights\");\n\t\tthis.environmentCapabilities.ContextSharingSupported = versionInfo.libraries.some((lib) => lib.name === \"sap.insights\");\n\t\tconst hideDraft = oContext.scopeObject.getManifestEntry(\"sap.fe\")?.app?.hideDraft;\n\t\tif (hideDraft?.enabled) {\n\t\t\tthis.environmentCapabilities.HiddenDraft = {\n\t\t\t\tenabled: true,\n\t\t\t\tstayOnCurrentPageAfterSave: hideDraft.stayOnCurrentPageAfterSave,\n\t\t\t\tstayOnCurrentPageAfterCancel: hideDraft.stayOnCurrentPageAfterCancel,\n\t\t\t\thideCreateNext: hideDraft.hideCreateNext\n\t\t\t};\n\t\t}\n\t\t// Initialize optional features\n\t\tconst navigationService: Navigation | undefined = await shellContainer?.getServiceAsync(\"Navigation\");\n\n\t\tfor (const [featureName, feature] of Object.entries(OptionalFeatures)) {\n\t\t\t// The feature is off by default. Only if there is a shell and the intent resolves, the feature is available\n\t\t\tthis.environmentCapabilities[featureName] = false;\n\n\t\t\tif (navigationService) {\n\t\t\t\ttry {\n\t\t\t\t\t// Resolve by intent:\n\t\t\t\t\t//  - intent resolves \t\t  ==> feature available, provided by the library located at the returned URL\n\t\t\t\t\t//  - intent does not resolve ==> resolveIntent() throws an error ==> feature unavailable\n\t\t\t\t\tconst { url } = await navigationService.resolveIntent(`#${feature.intent}`);\n\t\t\t\t\tthis.optionalFeatureLibraries[featureName] = { name: feature.library, url: url, imports: feature.imports };\n\n\t\t\t\t\tif (feature.imports) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tawait Library.load(this.optionalFeatureLibraries[featureName]!);\n\t\t\t\t\t\t\tawait import(feature.imports);\n\t\t\t\t\t\t\tthis.environmentCapabilities[featureName] = true;\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\tthis.environmentCapabilities[featureName] = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.environmentCapabilities[featureName] = true;\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\t// Feature unavailable\n\t\t\t\t\tLog.info(`Feature unavailable ${featureName}: ${(e as { message: string; stack: string })?.message}`);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.environmentCapabilities = Object.assign(this.environmentCapabilities, oContext.settings);\n\t}\n\n\tstatic async resolveLibrary(libraryName: string): Promise<boolean> {\n\t\treturn new Promise(function (resolve) {\n\t\t\tLibrary.load({ name: `${libraryName}` })\n\t\t\t\t.then(function () {\n\t\t\t\t\tresolve(true);\n\t\t\t\t\treturn;\n\t\t\t\t})\n\t\t\t\t.catch(function () {\n\t\t\t\t\tresolve(false);\n\t\t\t\t});\n\t\t});\n\t}\n\n\tpublic setCapabilities(oCapabilities: EnvironmentCapabilities): void {\n\t\tthis.environmentCapabilities = oCapabilities;\n\t}\n\n\tpublic setCapability(capability: keyof EnvironmentCapabilities, value: boolean): void {\n\t\tthis.environmentCapabilities[capability] = value;\n\t}\n\n\tpublic getCapabilities(): EnvironmentCapabilities {\n\t\treturn this.environmentCapabilities;\n\t}\n\n\t/**\n\t * Checks if insights are enabled on the home page.\n\t * @returns True if insights are enabled on the home page.\n\t */\n\tasync isInsightsEnabled(): Promise<boolean> {\n\t\t// insights is enabled\n\t\treturn new Promise<boolean>(async (resolve) => {\n\t\t\ttry {\n\t\t\t\t// getServiceAsync from suite/insights checks to see if myHome is configured with insights and returns a cardHelperInstance if so.\n\t\t\t\tconst isLibAvailable = await EnvironmentCapabilitiesService.resolveLibrary(\"sap.insights\");\n\t\t\t\tif (isLibAvailable) {\n\t\t\t\t\t// we also need to preload comp as insights is using it without declaring it e_e\n\t\t\t\t\tawait EnvironmentCapabilitiesService.resolveLibrary(\"sap.ui.comp\");\n\t\t\t\t\tsap.ui.require([\"sap/insights/CardHelper\"], async (CardHelper: { getServiceAsync: Function }) => {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tawait CardHelper.getServiceAsync(\"UIService\");\n\t\t\t\t\t\t\tresolve(!(await getMSTeamsActive()));\n\t\t\t\t\t\t} catch {\n\t\t\t\t\t\t\tresolve(false);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tresolve(false);\n\t\t\t\t}\n\t\t\t} catch {\n\t\t\t\tresolve(false);\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Checks if insights context channel is enabled .\n\t * @returns True if enabled.\n\t */\n\tasync isContextSharingEnabled(): Promise<boolean> {\n\t\t// getServiceAsync from suite/insights checks to see if myHome is configured with insights and returns a cardHelperInstance if so.\n\t\tconst isLibAvailable = await EnvironmentCapabilitiesService.resolveLibrary(\"sap.insights\");\n\t\tif (isLibAvailable) {\n\t\t\t// we also need to preload comp as insights is using it without declaring it e_e\n\t\t\tawait EnvironmentCapabilitiesService.resolveLibrary(\"sap.ui.comp\");\n\t\t\ttry {\n\t\t\t\tawait import(\"sap/insights/channels/ContextChannel\");\n\t\t\t} catch (e) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tgetInterface(): this {\n\t\treturn this;\n\t}\n}\n\nexport class EnvironmentServiceFactory extends ServiceFactory<EnvironmentCapabilities> {\n\tasync createInstance(oServiceContext: ServiceContext<Partial<EnvironmentCapabilities>>): Promise<EnvironmentCapabilitiesService> {\n\t\tconst environmentCapabilitiesService = new EnvironmentCapabilitiesService(oServiceContext);\n\t\tawait environmentCapabilitiesService.initialize();\n\t\treturn environmentCapabilitiesService;\n\t}\n}\n\n/**\n * Checks if the application is opened on Microsoft Teams.\n * @returns True if the application is opened on Microsoft Teams.\n */\nexport async function getMSTeamsActive(): Promise<boolean> {\n\tlet isTeamsModeActive = false;\n\ttry {\n\t\tawait EnvironmentCapabilitiesService.resolveLibrary(\"sap.suite.ui.commons\");\n\t\tconst { default: CollaborationHelper } = await import(\"sap/suite/ui/commons/collaboration/CollaborationHelper\");\n\t\tisTeamsModeActive = await CollaborationHelper.isTeamsModeActive();\n\t} catch {\n\t\treturn false;\n\t}\n\treturn isTeamsModeActive;\n}\n"],"mappings":"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","ignoreList":[]}