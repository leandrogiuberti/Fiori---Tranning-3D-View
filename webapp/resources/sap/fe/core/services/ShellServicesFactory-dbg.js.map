{"version":3,"names":["ShellServiceMock","_Service","apply","arguments","_inheritsLoose","_proto","prototype","init","initPromise","Promise","resolve","instanceType","getLinks","__fetchSemanticObject","getLinksWithCache","toExternal","getStartupAppState","undefined","isJamActive","backToPreviousApp","hrefForExternal","getHref","getHash","window","location","href","getAppState","createEmptyAppState","createEmptyAppStateAsync","navigate","isNavigationSupported","isInitialNavigation","expandCompactHash","parseShellHash","splitHash","sHash","regex","exec","shellPart","appSpecificRoute","length","constructShellHash","setDirtyFlag","registerDirtyStateProvider","deregisterDirtyStateProvider","getUser","getUserInitials","hasUShell","registerNavigationFilter","unregisterNavigationFilter","setBackNavigation","setHierarchy","setTitle","getContentDensity","document","body","classList","contains","getPrimaryIntent","waitForPluginsLoad","getTitle","getPersonalizer","_persId","_scope","_component","getPersData","historyEnabled","suggestionsEnabled","apps","setPersData","getApplicationPersonalizer","_itemName","getApplicationPersonalizationData","setApplicationPersonalizationData","_object","deletePersonalizationContainer","_key","getShellConfig","getRegisteredPlugins","AppWarmup","RendererExtensions","UserDefaults","UserImage","isFlpOptimisticBatchPluginLoaded","parseParameters","getExtensionService","getInframeUrl","Service","ShellServices","_Service2","_this","_len","args","Array","_key2","call","applicationPersonnalizers","_exports","_proto2","oContext","getContext","appComponent","scopeObject","oShellContainer","settings","shellContainer","linksCache","fnFindSemanticObjectsInCache","oArgs","aCachedSemanticObjects","aNonCachedSemanticObjects","linkFilter","semanticObject","push","links","Object","defineProperty","value","oldArgs","newArgs","cachedLinks","reject","resolveFn","rejectFn","navigationServiceP","getServiceAsync","userInfoServiceP","oUrlParsingServicePromise","oShellNavigationServicePromise","oShellPluginManagerPromise","oShellPersonalizationServicePromise","oShellExtensionServicePromise","all","then","_ref","navigationService","userInfoService","oUrlParsingService","oShellNavigation","oShellPersonalizationService","oShellPluginManager","oShellExtensionService","applicationNavigation","urlParsingService","shellNavigation","shellPersonalizationService","shellPluginManager","extensionService","catch","getSemanticObjects","oCacheResults","aLinks","oSemanticObjectsLinks","i","assign","aMergedLinks","j","item","getShellUIService","getService","getShellContainer","ushellContainer","appUrl","inAppRuntime","getFLPUrlAsync","error","Log","oNavArgumentsArr","oComponent","oTarget","sAppStateKey","aTargets","sHashFragment","getShellHash","flpPluginsRendererExtensions","hasOwnProperty","MANAGE_FE_CACHES","enabled","oNewShellHash","bDirty","fnDirtyStateProvider","getInitials","fnNavFilter","fnCallBack","aHierarchyLevels","sTitle","additionalInformation","sSemanticObject","mParameters","primaryIntent","isArray","getPluginLoadingPromise","fail","oError","persId","scope","component","keyCategory","constants","FIXED_KEY","writeFrequency","LOW","clientStorageAllowed","validity","Infinity","key","deleteContainer","itemName","container","getManifest","id","data","url","ShellServicesFactory","_ServiceFactory","_proto3","createInstance","serviceContext","sap","ui","require","shellService","getShellServices","internalModel","getModel","semanticObjects","setProperty","ServiceFactory"],"sourceRoot":".","sources":["ShellServicesFactory.ts"],"sourcesContent":["import Log from \"sap/base/Log\";\nimport type Component from \"sap/ui/core/Component\";\nimport Service from \"sap/ui/core/service/Service\";\nimport ServiceFactory from \"sap/ui/core/service/ServiceFactory\";\nimport type JSONModel from \"sap/ui/model/json/JSONModel\";\nimport type Container from \"sap/ushell/Container\";\nimport type Extension from \"sap/ushell/services/Extension\";\nimport type Navigation from \"sap/ushell/services/Navigation\";\nimport type { Link, LinkFilter, Target } from \"sap/ushell/services/Navigation\";\nimport type PersonalizationV2 from \"sap/ushell/services/PersonalizationV2\";\nimport { type PersId, type Scope } from \"sap/ushell/services/PersonalizationV2\";\nimport type ShellNavigation from \"sap/ushell/services/ShellNavigation\";\nimport type URLParsing from \"sap/ushell/services/URLParsing\";\nimport type { ParsedHash } from \"sap/ushell/services/URLParsing\";\nimport type UserInfo from \"sap/ushell/services/UserInfo\";\nimport type ShellUIService from \"sap/ushell/ui5service/ShellUIService\";\nimport type { TitleAdditionalInfo } from \"sap/ushell/ui5service/ShellUIService\";\nimport type { ServiceContext } from \"types/metamodel_types\";\nimport type AppComponent from \"../AppComponent\";\n\nexport type StartupAppState = {\n\tgetData(): {\n\t\tselectionVariant?: {\n\t\t\tSelectOptions?: {\n\t\t\t\tPropertyName: string;\n\t\t\t\tRanges: {\n\t\t\t\t\tOption: string;\n\t\t\t\t\tSign: string;\n\t\t\t\t\tLow: string;\n\t\t\t\t}[];\n\t\t\t}[];\n\t\t};\n\t};\n};\n\n// see: sap\\ushell\\services\\_Personalization\\constants.js\nexport type PersonalizationWithConstants = PersonalizationV2 & {\n\tconstants: {\n\t\tkeyCategory: {\n\t\t\tFIXED_KEY: string;\n\t\t\tGENERATED_KEY: string;\n\t\t};\n\t\twriteFrequency: {\n\t\t\tHIGH: string;\n\t\t\tLOW: string;\n\t\t};\n\t};\n};\n\nexport type PersonalizerType = {\n\tgetPersData: () => Promise<object>;\n\tsetPersData: (persData: object) => void;\n};\n\nexport type ShellConfigType = {\n\tapps: {\n\t\tinputFieldHistory: {\n\t\t\tenabled: boolean;\n\t\t};\n\t};\n};\n\nexport type FLPPlugin = {\n\tcomponent: string;\n\tenabled: boolean;\n\turl: string;\n\tconfig: Record<string, string>;\n};\n\nexport type RegisteredPluginsMapType = {\n\tAppWarmup: Record<string, FLPPlugin> | {};\n\tRendererExtensions: Record<string, FLPPlugin> | {};\n\tUserDefaults: Record<string, FLPPlugin> | {};\n\tUserImage: Record<string, FLPPlugin> | {};\n};\n\n/**\n * @interface IShellServices\n */\nexport interface IShellServices {\n\tinitPromise: Promise<IShellServices>;\n\tinstanceType: string;\n\tsemanticObjects: string[];\n\n\tgetLinks(oArgs?: Omit<LinkFilter, \"ui5Component\">[]): Promise<Link[][]>;\n\n\tgetLinksWithCache(oArgs?: Omit<LinkFilter, \"ui5Component\">[]): Promise<Link[][]>;\n\n\ttoExternal(oNavArgumentsArr: object, oComponent?: object): void;\n\n\tgetStartupAppState(oArgs: object): Promise<undefined | StartupAppState>;\n\n\tbackToPreviousApp(): void;\n\n\threfForExternal(oArgs?: object, oComponent?: object): Promise<string>;\n\n\tgetHref(oTarget: object, oComponent: Component): Promise<string>;\n\n\tgetAppState(oComponent: Component, sAppStateKey: string): Promise<unknown>;\n\n\tcreateEmptyAppState(oComponent: Component): object;\n\n\tcreateEmptyAppState(oComponent: Component): Promise<unknown>;\n\n\tnavigate(oTarget: Target, oComponent?: Component): Promise<undefined>;\n\n\tisNavigationSupported(oNavArgumentsArr: Array<object>, oComponent?: object): Promise<{ supported: boolean }[]>;\n\n\tisInitialNavigation(): Promise<boolean>;\n\n\texpandCompactHash(sHashFragment: string): Promise<string>;\n\n\tgetHash(): string;\n\n\tparseShellHash(sHash: string): ParsedHash;\n\n\tsplitHash(sHash: string): ReturnType<URLParsing[\"splitHash\"]>;\n\n\tconstructShellHash(oNewShellHash: object): string;\n\n\tsetDirtyFlag(bDirty: boolean): void;\n\n\tregisterDirtyStateProvider(fnDirtyStateProvider: Function): void;\n\n\tderegisterDirtyStateProvider(fnDirtyStateProvider: Function): void;\n\n\tgetUser(): UserInfo;\n\tgetUserInitials(): string;\n\n\thasUShell(): boolean;\n\n\tregisterNavigationFilter(fnNavFilter: Function): void;\n\n\tunregisterNavigationFilter(fnNavFilter: Function): void;\n\n\tsetBackNavigation(fnCallBack?: Function): Promise<void>;\n\n\tsetHierarchy(aHierarchyLevels: Array<object>): Promise<void>;\n\n\tsetTitle(sTitle: string, additionalInformation?: TitleAdditionalInfo): Promise<void>;\n\n\tisJamActive(): boolean;\n\n\tgetContentDensity(): string;\n\n\tgetPrimaryIntent(sSemanticObject: string, mParameters?: object): Promise<Link>;\n\n\twaitForPluginsLoad(): Promise<boolean>;\n\n\tgetRegisteredPlugins(): RegisteredPluginsMapType;\n\n\tisFlpOptimisticBatchPluginLoaded(): boolean;\n\n\tgetTitle(): Promise<string>;\n\n\tgetPersonalizer(persId: PersId, scope: Scope, component?: Component): Promise<PersonalizerType>;\n\n\tdeletePersonalizationContainer(key: string, scope?: object): Promise<void>;\n\n\tgetShellConfig(): ShellConfigType;\n\n\tparseParameters(url: string): ReturnType<URLParsing[\"parseParameters\"]>;\n\n\tgetExtensionService(): Extension;\n\n\tgetInframeUrl(): Promise<string | undefined>;\n\n\tgetApplicationPersonalizer(itemName: string): Promise<PersonalizerType>;\n\n\tgetApplicationPersonalizationData(itemName: string): Promise<Object | undefined>;\n\n\tsetApplicationPersonalizationData(itemName: string, object: Object): Promise<void>;\n}\ntype NavigationExtension = Navigation & {\n\tgetStartupAppState(oAppComponent: Component): Promise<StartupAppState | undefined>;\n\tgetAppState(oAppComponent: Component, sAppStateKey: string): Promise<object>;\n\tcreateEmptyAppState(\n\t\toAppComponent: Component,\n\t\tbTransientEnforced?: boolean,\n\t\tsPersistencyMethod?: string,\n\t\toPersistencySettings?: object\n\t): Promise<object>;\n};\n\n/**\n * Mock implementation of the ShellService for OpenFE\n *\n */\nclass ShellServiceMock extends Service<ShellServicesSettings> implements IShellServices {\n\tinitPromise!: Promise<IShellServices>;\n\n\tinstanceType!: string;\n\n\tsemanticObjects!: string[];\n\n\tinit(): void {\n\t\tthis.initPromise = Promise.resolve(this as IShellServices);\n\t\tthis.instanceType = \"mock\";\n\t}\n\n\tasync getLinks(/*oArgs: object*/): Promise<Link[][]> {\n\t\treturn Promise.resolve([]);\n\t}\n\n\tasync __fetchSemanticObject(): Promise<string[]> {\n\t\treturn Promise.resolve([]);\n\t}\n\n\tasync getLinksWithCache(/*oArgs: object*/): Promise<Link[][]> {\n\t\treturn Promise.resolve([]);\n\t}\n\n\ttoExternal(/*oNavArgumentsArr: Array<object>, oComponent: object*/): void {\n\t\t/* Do Nothing */\n\t}\n\n\tasync getStartupAppState(/*oArgs: object*/): Promise<StartupAppState | undefined> {\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\tisJamActive(): boolean {\n\t\treturn false;\n\t}\n\n\tbackToPreviousApp(): void {\n\t\t/* Do Nothing */\n\t}\n\n\tasync hrefForExternal(/*oArgs?: object, oComponent?: object, bAsync?: boolean*/): Promise<string> {\n\t\treturn Promise.resolve(\"\");\n\t}\n\n\tasync getHref(/*oArgs?: object, oComponent?: object, bAsync?: boolean*/): Promise<string> {\n\t\treturn Promise.resolve(\"\");\n\t}\n\n\tgetHash(): string {\n\t\treturn window.location.href;\n\t}\n\n\tasync getAppState(/*oComponent: object, sAppStateKey: string*/): Promise<unknown> {\n\t\treturn Promise.resolve({});\n\t}\n\n\tasync createEmptyAppState(/*oComponent: object*/): Promise<unknown> {\n\t\treturn Promise.resolve({});\n\t}\n\n\tasync createEmptyAppStateAsync(/*oComponent: object*/): Promise<unknown> {\n\t\treturn Promise.resolve({});\n\t}\n\n\tasync navigate(/*oTarget: Target,oComponent?: Component*/): Promise<undefined> {\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\tasync isNavigationSupported(/*oNavArgumentsArr: Array<object>, oComponent: object*/): Promise<{ supported: boolean }[]> {\n\t\treturn Promise.resolve([]);\n\t}\n\n\tasync isInitialNavigation(): Promise<boolean> {\n\t\treturn Promise.resolve(false);\n\t}\n\n\tasync expandCompactHash(/*sHashFragment: string*/): Promise<string> {\n\t\treturn Promise.resolve(\"\");\n\t}\n\n\tparseShellHash(/*sHash: string*/): ParsedHash {\n\t\treturn {} as unknown as ParsedHash;\n\t}\n\n\tsplitHash(sHash: string): ReturnType<URLParsing[\"splitHash\"]> {\n\t\t/**\n\t\t * For an Application without Shell, the hash is similar to : #/SalesOrderManage(11111111-aaaa-bbbb-cccc-ddddeeeeffff)\n\t\t * this function returns :\n\t\t * {\n\t\t\tshellPart: \"\",\n\t\t\tappSpecificRoute: \"SalesOrderManage(11111111-aaaa-bbbb-cccc-ddddeeeeffff)\"\n\t\t}\n\t\t */\n\t\tconst regex = /#[^/]*\\/(.*)/.exec(sHash);\n\t\treturn {\n\t\t\tshellPart: \"\",\n\t\t\tappSpecificRoute: regex?.length === 2 ? regex[1] : \"\"\n\t\t};\n\t}\n\n\tconstructShellHash(/*oNewShellHash: object*/): string {\n\t\treturn \"\";\n\t}\n\n\tsetDirtyFlag(/*bDirty: boolean*/): void {\n\t\t/* Do Nothing */\n\t}\n\n\tregisterDirtyStateProvider(/*fnDirtyStateProvider: Function*/): void {\n\t\t/* Do Nothing */\n\t}\n\n\tderegisterDirtyStateProvider(/*fnDirtyStateProvider: Function*/): void {\n\t\t/* Do Nothing */\n\t}\n\n\tgetUser(): UserInfo {\n\t\treturn {} as UserInfo;\n\t}\n\n\tgetUserInitials(): string {\n\t\treturn \"\";\n\t}\n\n\thasUShell(): boolean {\n\t\treturn false;\n\t}\n\n\tregisterNavigationFilter(/*fnNavFilter: Function*/): void {\n\t\t/* Do Nothing */\n\t}\n\n\tunregisterNavigationFilter(/*fnNavFilter: Function*/): void {\n\t\t/* Do Nothing */\n\t}\n\n\tasync setBackNavigation(/*fnCallBack?: Function*/): Promise<void> {\n\t\t/* Do Nothing */\n\t\treturn Promise.resolve();\n\t}\n\n\tasync setHierarchy(/*aHierarchyLevels: Array<object>*/): Promise<void> {\n\t\t/* Do Nothing */\n\t\treturn Promise.resolve();\n\t}\n\n\tasync setTitle(/*sTitle: string*/): Promise<void> {\n\t\t/* Do Nothing */\n\t\treturn Promise.resolve();\n\t}\n\n\tgetContentDensity(): string {\n\t\t// in case there is no shell we probably need to look at the classes being defined on the body\n\t\tif (document.body.classList.contains(\"sapUiSizeCozy\")) {\n\t\t\treturn \"cozy\";\n\t\t} else if (document.body.classList.contains(\"sapUiSizeCompact\")) {\n\t\t\treturn \"compact\";\n\t\t} else {\n\t\t\treturn \"\";\n\t\t}\n\t}\n\n\tasync getPrimaryIntent(/*sSemanticObject: string, mParameters?: object*/): Promise<Link> {\n\t\treturn Promise.resolve(undefined as unknown as Link);\n\t}\n\n\tasync waitForPluginsLoad(): Promise<boolean> {\n\t\treturn Promise.resolve(true);\n\t}\n\n\tasync getTitle(): Promise<string> {\n\t\treturn Promise.resolve(\"\");\n\t}\n\n\tasync getPersonalizer(_persId: PersId, _scope: Scope, _component?: Component): Promise<PersonalizerType> {\n\t\treturn Promise.resolve({\n\t\t\tgetPersData: async () =>\n\t\t\t\tPromise.resolve({\n\t\t\t\t\thistoryEnabled: false,\n\t\t\t\t\tsuggestionsEnabled: false,\n\t\t\t\t\tapps: {}\n\t\t\t\t}),\n\t\t\tsetPersData: () => {}\n\t\t});\n\t}\n\n\tasync getApplicationPersonalizer(_itemName: string): Promise<PersonalizerType> {\n\t\treturn Promise.resolve({\n\t\t\tgetPersData: async () => Promise.resolve({}),\n\t\t\tsetPersData: () => {}\n\t\t});\n\t}\n\n\tasync getApplicationPersonalizationData(_itemName: string): Promise<object> {\n\t\treturn Promise.resolve({});\n\t}\n\n\tasync setApplicationPersonalizationData(_itemName: string, _object: Object): Promise<void> {\n\t\treturn Promise.resolve();\n\t}\n\n\tasync deletePersonalizationContainer(_key: string, _scope?: object): Promise<void> {\n\t\treturn Promise.resolve();\n\t}\n\n\tgetShellConfig(): ShellConfigType {\n\t\treturn {} as ShellConfigType;\n\t}\n\n\tgetRegisteredPlugins(): RegisteredPluginsMapType {\n\t\treturn {\n\t\t\tAppWarmup: {},\n\t\t\tRendererExtensions: {},\n\t\t\tUserDefaults: {},\n\t\t\tUserImage: {}\n\t\t};\n\t}\n\n\tisFlpOptimisticBatchPluginLoaded(): boolean {\n\t\treturn false;\n\t}\n\n\tparseParameters(): Record<string, string[]> {\n\t\treturn {};\n\t}\n\n\tgetExtensionService(): Extension {\n\t\treturn {} as Extension;\n\t}\n\n\tasync getInframeUrl(): Promise<string | undefined> {\n\t\treturn Promise.resolve(\"\");\n\t}\n}\n\n/**\n * @typedef ShellServicesSettings\n */\nexport type ShellServicesSettings = {\n\tshellContainer?: Container;\n};\n\ntype ShellPluginManager = {\n\tgetPluginLoadingPromise(category: string): jQuery.Promise;\n\tgetRegisteredPlugins(): RegisteredPluginsMapType;\n};\n\ntype PrivateShellUser = {\n\tgetInitials(): string;\n\tisJamActive(): boolean;\n\tgetContentDensity(): string;\n};\n\n/**\n * Base implementation of the ShellServices\n *\n */\nexport class ShellServices extends Service<Required<ShellServicesSettings>> implements IShellServices {\n\tresolveFn!: Function;\n\n\trejectFn!: () => void;\n\n\tinitPromise!: Promise<IShellServices>;\n\n\tapplicationNavigation!: NavigationExtension;\n\n\tuserInfoService!: UserInfo;\n\n\turlParsingService!: URLParsing;\n\n\tshellNavigation!: ShellNavigation;\n\n\tshellPluginManager!: ShellPluginManager;\n\n\toShellContainer!: Container & { getUser: () => PrivateShellUser };\n\n\tshellPersonalizationService!: PersonalizationWithConstants;\n\n\tinstanceType!: string;\n\n\tlinksCache!: Record<string, { links: Link[] }>;\n\n\tsemanticObjects!: string[];\n\n\tfnFindSemanticObjectsInCache!: Function;\n\n\textensionService!: Extension;\n\n\tappComponent!: Component;\n\n\tprivate applicationPersonnalizers: Record<string, Promise<PersonalizerType>> = {};\n\n\tinit(): void {\n\t\tconst oContext = this.getContext();\n\t\tthis.appComponent = oContext.scopeObject as Component;\n\t\tthis.oShellContainer = oContext.settings.shellContainer;\n\t\tthis.instanceType = \"real\";\n\t\tthis.linksCache = {};\n\t\tthis.fnFindSemanticObjectsInCache = function (oArgs: LinkFilter[]): object {\n\t\t\tconst aCachedSemanticObjects: Link[][] = [];\n\t\t\tconst aNonCachedSemanticObjects: LinkFilter[] = [];\n\t\t\tfor (const linkFilter of oArgs) {\n\t\t\t\tif (!!linkFilter && !!linkFilter.semanticObject) {\n\t\t\t\t\tif (this.linksCache[linkFilter.semanticObject]) {\n\t\t\t\t\t\taCachedSemanticObjects.push(this.linksCache[linkFilter.semanticObject].links);\n\t\t\t\t\t\tObject.defineProperty(linkFilter, \"links\", {\n\t\t\t\t\t\t\tvalue: this.linksCache[linkFilter.semanticObject].links\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\taNonCachedSemanticObjects.push(linkFilter);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn { oldArgs: oArgs, newArgs: aNonCachedSemanticObjects, cachedLinks: aCachedSemanticObjects };\n\t\t};\n\t\tthis.initPromise = new Promise((resolve, reject) => {\n\t\t\tthis.resolveFn = resolve;\n\t\t\tthis.rejectFn = reject;\n\t\t});\n\t\tconst navigationServiceP = this.oShellContainer.getServiceAsync(\"Navigation\");\n\t\tconst userInfoServiceP = this.oShellContainer.getServiceAsync(\"UserInfo\");\n\t\tconst oUrlParsingServicePromise = this.oShellContainer.getServiceAsync(\"URLParsing\");\n\t\tconst oShellNavigationServicePromise = this.oShellContainer.getServiceAsync(\"ShellNavigationInternal\");\n\t\tconst oShellPluginManagerPromise = this.oShellContainer.getServiceAsync(\"PluginManager\");\n\t\tconst oShellPersonalizationServicePromise = this.oShellContainer.getServiceAsync(\"PersonalizationV2\");\n\t\tconst oShellExtensionServicePromise = this.oShellContainer.getServiceAsync(\"Extension\");\n\n\t\tPromise.all([\n\t\t\tnavigationServiceP,\n\t\t\tuserInfoServiceP,\n\t\t\toUrlParsingServicePromise,\n\t\t\toShellNavigationServicePromise,\n\t\t\toShellPersonalizationServicePromise,\n\t\t\toShellPluginManagerPromise,\n\t\t\toShellExtensionServicePromise\n\t\t])\n\t\t\t.then(\n\t\t\t\t([\n\t\t\t\t\tnavigationService,\n\t\t\t\t\tuserInfoService,\n\t\t\t\t\toUrlParsingService,\n\t\t\t\t\toShellNavigation,\n\t\t\t\t\toShellPersonalizationService,\n\t\t\t\t\toShellPluginManager,\n\t\t\t\t\toShellExtensionService\n\t\t\t\t]) => {\n\t\t\t\t\tthis.applicationNavigation = navigationService as NavigationExtension;\n\t\t\t\t\tthis.userInfoService = userInfoService as UserInfo;\n\t\t\t\t\tthis.urlParsingService = oUrlParsingService as URLParsing;\n\t\t\t\t\tthis.shellNavigation = oShellNavigation as ShellNavigation;\n\t\t\t\t\tthis.shellPersonalizationService = oShellPersonalizationService as PersonalizationWithConstants;\n\t\t\t\t\tthis.shellPluginManager = oShellPluginManager as ShellPluginManager;\n\t\t\t\t\tthis.extensionService = oShellExtensionService as Extension;\n\t\t\t\t\tthis.resolveFn();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t)\n\t\t\t.catch(this.rejectFn);\n\t}\n\n\t/**\n\t * Retrieves the target links configured for a given semantic object & action\n\t * Will retrieve the CrossApplicationNavigation\n\t * service reference call the getLinks method. In case service is not available or any exception\n\t * method throws exception error in console.\n\t * @param oArgs Check the definition of\n\t * sap.ushell.services.CrossApplicationNavigation=>getLinks arguments\n\t * @returns Promise which will be resolved to target links array\n\t */\n\tasync getLinks(oArgs?: LinkFilter[]): Promise<Link[][]> {\n\t\treturn this.applicationNavigation.getLinks(oArgs);\n\t}\n\n\t/**\n\t * Returns a list of semantic objects of the intents the current user can navigate to.\n\t * @returns Promise that resolve with an array of strings representing the semantic objects of the intents the current user can navigate to, or rejects with an error message\n\t */\n\tasync __fetchSemanticObject(): Promise<string[]> {\n\t\treturn this.applicationNavigation.getSemanticObjects();\n\t}\n\n\t/**\n\t * Retrieves the target links configured for a given semantic object & action in cache\n\t * Will retrieve the CrossApplicationNavigation\n\t * service reference call the getLinks method. In case service is not available or any exception\n\t * method throws exception error in console.\n\t * @param oArgs Check the definition of\n\t * sap.ushell.services.CrossApplicationNavigation=>getLinks arguments\n\t * @returns Promise which will be resolved to target links array\n\t */\n\tasync getLinksWithCache(oArgs?: LinkFilter[]): Promise<Link[][]> {\n\t\tif ((oArgs as Object[]).length === 0) {\n\t\t\treturn [];\n\t\t} else {\n\t\t\tconst oCacheResults = this.fnFindSemanticObjectsInCache(oArgs);\n\n\t\t\tif (oCacheResults.newArgs.length === 0) {\n\t\t\t\treturn oCacheResults.cachedLinks;\n\t\t\t} else {\n\t\t\t\tconst aLinks = await this.applicationNavigation.getLinks(oCacheResults.newArgs);\n\t\t\t\tif (aLinks.length !== 0) {\n\t\t\t\t\tconst oSemanticObjectsLinks: Record<string, { links: Link[] }> = {};\n\n\t\t\t\t\tfor (let i = 0; i < aLinks.length; i++) {\n\t\t\t\t\t\tif (aLinks[i].length > 0 && oCacheResults.newArgs[i][0].links === undefined) {\n\t\t\t\t\t\t\toSemanticObjectsLinks[oCacheResults.newArgs[i][0].semanticObject] = {\n\t\t\t\t\t\t\t\tlinks: aLinks[i]\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tthis.linksCache = Object.assign(this.linksCache, oSemanticObjectsLinks);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (oCacheResults.cachedLinks.length === 0) {\n\t\t\t\t\treturn aLinks;\n\t\t\t\t} else {\n\t\t\t\t\tconst aMergedLinks = [];\n\t\t\t\t\tlet j = 0;\n\n\t\t\t\t\tfor (const item of oCacheResults.oldArgs) {\n\t\t\t\t\t\tif (j < aLinks.length) {\n\t\t\t\t\t\t\tif (aLinks[j].length > 0 && item[0].semanticObject === oCacheResults.newArgs[j][0].semanticObject) {\n\t\t\t\t\t\t\t\taMergedLinks.push(aLinks[j]);\n\t\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\taMergedLinks.push(item[0].links);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\taMergedLinks.push(item[0].links);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn aMergedLinks;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tasync getShellUIService(): Promise<ShellUIService> {\n\t\treturn this.appComponent.getService(\"ShellUIService\");\n\t}\n\n\t/**\n\t * Will retrieve the ShellContainer.\n\t * @returns Object with predefined shellContainer methods\n\t */\n\tgetShellContainer(): Container {\n\t\treturn this.oShellContainer;\n\t}\n\n\tasync getInframeUrl(): Promise<string | undefined> {\n\t\tconst ushellContainer = this.getShellContainer();\n\t\tlet appUrl: string | undefined;\n\t\tif (ushellContainer?.inAppRuntime()) {\n\t\t\ttry {\n\t\t\t\tappUrl = await ushellContainer.getFLPUrlAsync(true);\n\t\t\t} catch (error) {\n\t\t\t\tLog.error(\"Error while getting the FLP URL\", error as string);\n\t\t\t}\n\t\t}\n\t\treturn appUrl;\n\t}\n\n\t/**\n\t * Will call toExternal method of CrossApplicationNavigation service with Navigation Arguments and oComponent.\n\t * @param oNavArgumentsArr And\n\t * @param oComponent Check the definition of\n\t * sap.ushell.services.CrossApplicationNavigation=>toExternal arguments\n\t */\n\ttoExternal(oNavArgumentsArr: Target, oComponent?: Component): void {\n\t\tthis.navigate(oNavArgumentsArr, oComponent);\n\t}\n\n\t/**\n\t * Retrieves the target startupAppState\n\t * Will check the existance of the ShellContainer and retrieve the CrossApplicationNavigation\n\t * service reference call the getStartupAppState method. In case service is not available or any exception\n\t * method throws exception error in console.\n\t * @param oArgs Check the definition of\n\t * sap.ushell.services.CrossApplicationNavigation=>getStartupAppState arguments\n\t * @returns Promise which will be resolved to Object\n\t */\n\tasync getStartupAppState(oArgs: Component): Promise<undefined | StartupAppState> {\n\t\treturn this.applicationNavigation.getStartupAppState(oArgs);\n\t}\n\n\t/**\n\t * Will call backToPreviousApp method of CrossApplicationNavigation service.\n\t * @returns Something that indicate we've navigated\n\t */\n\tasync backToPreviousApp(): Promise<void> {\n\t\treturn this.applicationNavigation.backToPreviousApp();\n\t}\n\n\t/**\n\t * Will call hrefForExternal method of CrossApplicationNavigation service.\n\t * @param oArgs Check the definition of\n\t * @param oComponent The appComponent\n\t * sap.ushell.services.CrossApplicationNavigation=>hrefForExternal arguments\n\t * @returns Promise which will be resolved to string\n\t */\n\tasync hrefForExternal(oArgs: Target, oComponent?: Component): Promise<string> {\n\t\treturn this.applicationNavigation.getHref(oArgs, oComponent);\n\t}\n\n\t/**\n\t * Returns a promise resolving to a URL that launches an app with certain parameters.\n\t * This API can be used to convert the internal shell hash format into the URL format for use in link tags.\n\t * The resulting href is fully encoded and cannot be used in other APIs that expect the internal decoded hash.\n\t * @param [oTarget] The navigation target to transform. When, omitted the current hash is used as the basis for the calculation.\n\t * @param [oComponent] A UI5 component, used to logically attach any related app state.\n\t * @returns A promise resolving the encoded href.\n\t */\n\tasync getHref(oTarget: Target, oComponent?: Component): Promise<string> {\n\t\treturn this.applicationNavigation.getHref(oTarget, oComponent);\n\t}\n\n\t/**\n\t * Will call getAppState method of CrossApplicationNavigation service with oComponent and oAppStateKey.\n\t * @param oComponent\n\t * @param sAppStateKey Check the definition of\n\t * sap.ushell.services.CrossApplicationNavigation=>getAppState arguments\n\t * @returns Promise which will be resolved to object\n\t */\n\tasync getAppState(oComponent: Component, sAppStateKey: string): Promise<unknown> {\n\t\treturn this.applicationNavigation.getAppState(oComponent, sAppStateKey);\n\t}\n\n\t/**\n\t * Will call createEmptyAppState method of CrossApplicationNavigation service with oComponent.\n\t * @param oComponent Check the definition of\n\t * sap.ushell.services.CrossApplicationNavigation=>createEmptyAppState arguments\n\t * @returns Promise which will be resolved to object\n\t */\n\tasync createEmptyAppState(oComponent: Component): Promise<unknown> {\n\t\treturn this.applicationNavigation.createEmptyAppState(oComponent);\n\t}\n\n\t/**\n\t * Will call isNavigationSupported method of CrossApplicationNavigation service with Navigation Arguments and oComponent.\n\t * @param aTargets\n\t * @param oComponent Check the definition of\n\t * sap.ushell.services.CrossApplicationNavigation=>isNavigationSupported arguments\n\t * @returns Promise which will be resolved to object\n\t */\n\tasync isNavigationSupported(aTargets: Target[], oComponent: Component): Promise<{ supported: boolean }[]> {\n\t\treturn this.applicationNavigation.isNavigationSupported(aTargets, oComponent) as unknown as Promise<{ supported: boolean }[]>;\n\t}\n\n\t/**\n\t * Triggers a navigation to a specified target outside of the currently running application.\n\t * @param oTarget The navigation target.\n\t * @param [oComponent] A UI5 component, used to logically attach any related app state.\n\t * @returns A Promise resolving once the navigation was triggered. The Promise might never reject or resolve\n\t *                    when an error occurs during the navigation.\n\t */\n\tasync navigate(oTarget: Target, oComponent?: Component): Promise<undefined> {\n\t\treturn (await this.applicationNavigation.navigate(oTarget, oComponent)) as unknown as Promise<undefined>;\n\t}\n\n\t/**\n\t * Will call isInitialNavigationAsync method of CrossApplicationNavigation service.\n\t * @returns Promise which will be resolved to boolean\n\t */\n\tasync isInitialNavigation(): Promise<boolean> {\n\t\treturn this.applicationNavigation.isInitialNavigation();\n\t}\n\n\t/**\n\t * Will call expandCompactHash method of CrossApplicationNavigation service.\n\t * @param sHashFragment An (internal format) shell hash\n\t * @returns A promise the success handler of the resolve promise get an expanded shell hash as first argument\n\t */\n\tasync expandCompactHash(sHashFragment: string): Promise<string> {\n\t\treturn Promise.resolve(sHashFragment); //this.navTargetResolution.expandCompactHash(sHashFragment);\n\t}\n\n\tgetHash(): string {\n\t\treturn `#${this.urlParsingService.getShellHash(window.location.href)}`;\n\t}\n\n\t/**\n\t * Returns a map of all the plugins which are registered with the PluginManager, sorted by supported plugin categories.\n\t * @returns Map of registered plugins\n\t */\n\tgetRegisteredPlugins(): RegisteredPluginsMapType {\n\t\treturn this.shellPluginManager.getRegisteredPlugins();\n\t}\n\n\t/**\n\t * Check for the optimistic batch plugin setup in the FLP.\n\t * @returns True if the optimistic batch plugin is set up and enabled.\n\t */\n\tisFlpOptimisticBatchPluginLoaded(): boolean {\n\t\tconst flpPluginsRendererExtensions = this.getRegisteredPlugins().RendererExtensions;\n\t\tif (\n\t\t\tflpPluginsRendererExtensions?.hasOwnProperty(\"MANAGE_FE_CACHES\") &&\n\t\t\t!!(flpPluginsRendererExtensions as Record<string, Record<string, object>>).MANAGE_FE_CACHES.enabled\n\t\t) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Will call parseShellHash method of URLParsing service with given sHash.\n\t * @param sHash Check the definition of\n\t * sap.ushell.services.URLParsing=>parseShellHash arguments\n\t * @returns The parsed url\n\t */\n\tparseShellHash(sHash: string): ParsedHash {\n\t\treturn this.urlParsingService.parseShellHash(sHash);\n\t}\n\n\t/**\n\t * Will call splitHash method of URLParsing service with given sHash.\n\t * @param sHash Check the definition of\n\t * sap.ushell.services.URLParsing=>splitHash arguments\n\t * @returns Promise which will be resolved to object\n\t */\n\tsplitHash(sHash: string): { shellPart?: string; appSpecificRoute?: string } {\n\t\treturn this.urlParsingService.splitHash(sHash);\n\t}\n\n\t/**\n\t * Will call constructShellHash method of URLParsing service with given sHash.\n\t * @param oNewShellHash Check the definition of\n\t * sap.ushell.services.URLParsing=>constructShellHash arguments\n\t * @returns Shell Hash string\n\t */\n\tconstructShellHash(oNewShellHash: object): string {\n\t\treturn this.urlParsingService.constructShellHash(oNewShellHash);\n\t}\n\n\t/**\n\t * Will call setDirtyFlag method with given dirty state.\n\t * @param bDirty Check the definition of sap.ushell.Container.setDirtyFlag arguments\n\t */\n\tsetDirtyFlag(bDirty: boolean): void {\n\t\tthis.oShellContainer.setDirtyFlag(bDirty);\n\t}\n\n\t/**\n\t * Will call registerDirtyStateProvider method with given dirty state provider callback method.\n\t * @param fnDirtyStateProvider Check the definition of sap.ushell.Container.registerDirtyStateProvider arguments\n\t */\n\tregisterDirtyStateProvider(fnDirtyStateProvider: () => boolean): void {\n\t\tthis.oShellContainer.registerDirtyStateProvider(fnDirtyStateProvider);\n\t}\n\n\t/**\n\t * Will call deregisterDirtyStateProvider method with given dirty state provider callback method.\n\t * @param fnDirtyStateProvider Check the definition of sap.ushell.Container.deregisterDirtyStateProvider arguments\n\t */\n\tderegisterDirtyStateProvider(fnDirtyStateProvider: () => boolean): void {\n\t\tthis.oShellContainer.deregisterDirtyStateProvider(fnDirtyStateProvider);\n\t}\n\n\t/**\n\t * Will call getUser method of ushell container.\n\t * @returns Returns User object\n\t */\n\tgetUser(): UserInfo {\n\t\treturn this.userInfoService;\n\t}\n\n\tisJamActive(): boolean {\n\t\treturn this.oShellContainer.getUser().isJamActive();\n\t}\n\n\tgetUserInitials(): string {\n\t\treturn this.oShellContainer.getUser().getInitials();\n\t}\n\n\t/**\n\t * Will check if ushell container is available or not.\n\t * @returns Returns true\n\t */\n\thasUShell(): boolean {\n\t\treturn true;\n\t}\n\n\t/**\n\t * Will call registerNavigationFilter method of shellNavigation.\n\t * @param fnNavFilter The filter function to register\n\t */\n\tregisterNavigationFilter(fnNavFilter: Function): void {\n\t\tthis.shellNavigation.registerNavigationFilter(fnNavFilter);\n\t}\n\n\t/**\n\t * Will call unregisterNavigationFilter method of shellNavigation.\n\t * @param fnNavFilter The filter function to unregister\n\t */\n\tunregisterNavigationFilter(fnNavFilter: Function): void {\n\t\tthis.shellNavigation.unregisterNavigationFilter(fnNavFilter);\n\t}\n\n\t/**\n\t * Will call setBackNavigation method of ShellUIService\n\t * that displays the back button in the shell header.\n\t * @param fnCallBack A callback function called when the button is clicked in the UI.\n\t */\n\tasync setBackNavigation(fnCallBack: Function): Promise<void> {\n\t\t(await this.getShellUIService()).setBackNavigation(fnCallBack);\n\t}\n\n\t/**\n\t * Will call setHierarchy method of ShellUIService\n\t * that displays the given hierarchy in the shell header.\n\t * @param [aHierarchyLevels] An array representing hierarchies of the currently displayed app.\n\t */\n\tasync setHierarchy(aHierarchyLevels: object[]): Promise<void> {\n\t\t(await this.getShellUIService()).setHierarchy(aHierarchyLevels);\n\t}\n\n\t/**\n\t * Will call setTitle method of ShellUIService\n\t * that displays the given title in the shell header.\n\t * @param [sTitle] The new title. The default title is set if this argument is not given.\n\t * @param [additionalInformation] An object of additional information to be displayed in the browser window title.\n\t */\n\tasync setTitle(sTitle: string, additionalInformation?: TitleAdditionalInfo): Promise<void> {\n\t\t(await this.getShellUIService()).setTitle(sTitle, additionalInformation);\n\t}\n\n\t/**\n\t * Will call getTitle method of ShellUIService\n\t * that displays the given title in the shell header.\n\t * @returns The title of the application.\n\t */\n\tasync getTitle(): Promise<string> {\n\t\treturn (await this.getShellUIService()).getTitle();\n\t}\n\n\t/**\n\t * Retrieves the currently defined content density.\n\t * @returns The content density value\n\t */\n\tgetContentDensity(): string {\n\t\treturn this.oShellContainer.getUser().getContentDensity();\n\t}\n\n\t/**\n\t * For a given semantic object, this method considers all actions associated with the semantic object and\n\t * returns the one tagged as a \"primaryAction\". If no inbound tagged as \"primaryAction\" exists, then it returns\n\t * the intent of the first inbound (after sorting has been applied) matching the action \"displayFactSheet\".\n\t * @param sSemanticObject Semantic object.\n\t * @param mParameters See #CrossApplicationNavigation#getLinks for description.\n\t * @returns Promise which will be resolved with an object containing the intent if it exists.\n\t */\n\tasync getPrimaryIntent(sSemanticObject: string, mParameters?: LinkFilter): Promise<Link> {\n\t\tconst primaryIntent = await this.applicationNavigation.getPrimaryIntent(sSemanticObject, mParameters);\n\t\tif (Array.isArray(primaryIntent)) {\n\t\t\treturn primaryIntent[0];\n\t\t} else {\n\t\t\treturn primaryIntent;\n\t\t}\n\t}\n\n\t/**\n\t * Wait for the render extensions plugin to be loaded.\n\t * @returns True if we are able to wait for it, otherwise we couldn't and cannot rely on it.\n\t */\n\tasync waitForPluginsLoad(): Promise<boolean> {\n\t\treturn new Promise((resolve) => {\n\t\t\tif (!this.shellPluginManager?.getPluginLoadingPromise) {\n\t\t\t\tresolve(false);\n\t\t\t} else {\n\t\t\t\t// eslint-disable-next-line promise/catch-or-return\n\t\t\t\tthis.shellPluginManager\n\t\t\t\t\t.getPluginLoadingPromise(\"RendererExtensions\")\n\t\t\t\t\t.fail((oError: unknown) => {\n\t\t\t\t\t\tLog.error(oError as string, \"sap.fe.core.services.ShellServicesFactory.waitForPluginsLoad\");\n\t\t\t\t\t\tresolve(false);\n\t\t\t\t\t})\n\t\t\t\t\t.then(() => resolve(true));\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Get the personalizer from the shell service.\n\t * We set some defaults for the scope object.\n\t * @param persId Personalization object\n\t * @param scope Scope object\n\t * @param component\n\t * @returns Personalizer object which handles personalization\n\t */\n\tasync getPersonalizer(persId: PersId, scope: Scope, component?: Component): Promise<PersonalizerType> {\n\t\tscope = {\n\t\t\t// merge some defaults\n\t\t\tkeyCategory: this.shellPersonalizationService.constants.keyCategory.FIXED_KEY,\n\t\t\twriteFrequency: this.shellPersonalizationService.constants.writeFrequency.LOW,\n\t\t\tclientStorageAllowed: false,\n\t\t\tvalidity: Infinity,\n\t\t\t...scope\n\t\t};\n\t\treturn (await this.shellPersonalizationService.getPersonalizer(persId, scope, component)) as PersonalizerType;\n\t}\n\n\t/**\n\t * Deletes a container identified by sContainerKey.\n\t * @param key Container key\n\t * @param scope Scope object\n\t * @returns Promise which is resolved when the container is deleted\n\t */\n\tasync deletePersonalizationContainer(key: string, scope?: object): Promise<void> {\n\t\treturn this.shellPersonalizationService.deleteContainer(key, scope as unknown as object) as Promise<void>;\n\t}\n\n\t/**\n\t * This method initializes the personalizer to access the Application data stored in the shell Personalization.\n\t * @param itemName The name of the item for which the personalizer is created.\n\t * @returns A personalizer\n\t */\n\tpublic async getApplicationPersonalizer(itemName: string): Promise<PersonalizerType> {\n\t\tif (!this.applicationPersonnalizers[itemName]) {\n\t\t\tthis.applicationPersonnalizers[itemName] = this.getPersonalizer(\n\t\t\t\t{\n\t\t\t\t\tcontainer: `Application#${(this.appComponent as AppComponent).getManifest()[\"sap.app\"].id}`,\n\t\t\t\t\titem: itemName\n\t\t\t\t},\n\t\t\t\t{},\n\t\t\t\tthis.appComponent\n\t\t\t);\n\t\t}\n\t\treturn this.applicationPersonnalizers[itemName];\n\t}\n\n\t/**\n\t * This method returns data from the personalization service.\n\t * @param itemName\n\t * @returns Data\n\t */\n\tpublic async getApplicationPersonalizationData(itemName: string): Promise<object | undefined> {\n\t\treturn (await (await this.getApplicationPersonalizer(itemName))?.getPersData()) as object | undefined;\n\t}\n\n\t/**\n\t * This method stores an object in the personalization service.\n\t * @param itemName\n\t * @param data\n\t * @returns A promise\n\t */\n\tpublic async setApplicationPersonalizationData(itemName: string, data: object): Promise<void> {\n\t\t(await this.getApplicationPersonalizer(itemName)).setPersData(data);\n\t}\n\n\t/**\n\t * Get the shell config from the windows object.\n\t * @returns Shell config object\n\t */\n\tgetShellConfig(): ShellConfigType {\n\t\treturn (window as unknown as Record<string, object>)[\"sap-ushell-config\"] as ShellConfigType;\n\t}\n\n\t/**\n\t * Parse parameters from a URI query string (starting with ?) into a parameter object.\n\t * @param url Check the definition of\n\t * Parameter string\n\t * @returns An object containg string arrays\n\t */\n\tparseParameters(url: string): Record<string, string[]> {\n\t\treturn this.urlParsingService.parseParameters(url);\n\t}\n\n\t/**\n\t * Get the shell extension service.\n\t * @returns Shell extension service\n\t */\n\tgetExtensionService(): Extension {\n\t\treturn this.extensionService;\n\t}\n}\n\n/**\n * Service Factory for the ShellServices\n *\n */\nclass ShellServicesFactory extends ServiceFactory<ShellServicesSettings> {\n\t/**\n\t * Creates either a standard or a mock Shell service depending on the configuration.\n\t * @param serviceContext The shellservice context\n\t * @returns A promise for a shell service implementation\n\t * @see ServiceFactory#createInstance\n\t */\n\tasync createInstance(serviceContext: ServiceContext<ShellServicesSettings>): Promise<IShellServices> {\n\t\tserviceContext.settings.shellContainer = sap.ui.require(\"sap/ushell/Container\");\n\t\tconst shellService = serviceContext.settings.shellContainer\n\t\t\t? new ShellServices(serviceContext as ServiceContext<Required<ShellServicesSettings>>)\n\t\t\t: new ShellServiceMock(serviceContext);\n\t\tawait shellService.initPromise;\n\t\t// Enrich the appComponent with this method\n\t\tconst appComponent = serviceContext.scopeObject;\n\t\tappComponent.getShellServices = (): IShellServices => shellService;\n\t\tconst internalModel = appComponent.getModel(\"internal\");\n\t\tif (internalModel) {\n\t\t\tlet semanticObjects: string[] = [];\n\t\t\ttry {\n\t\t\t\tsemanticObjects = await shellService.__fetchSemanticObject();\n\t\t\t} catch (error: unknown) {\n\t\t\t\tLog.error(\"Error while calling getSemanticObjects\", error as string);\n\t\t\t} finally {\n\t\t\t\t(internalModel as JSONModel).setProperty(\"/semanticObjects\", semanticObjects);\n\t\t\t}\n\t\t}\n\t\treturn shellService;\n\t}\n}\n\nexport default ShellServicesFactory;\n"],"mappings":"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","ignoreList":[],"file":"ShellServicesFactory-dbg.js"}