{"version":3,"file":"CollaborationManagerServiceFactory.js","names":["CollaborationManagerService","_Service","_this","_len","arguments","length","args","Array","_key","call","this","__implements__sap_insights_ICardProvider","registered","sharedCardsPerView","_exports","_inheritsLoose","_proto","prototype","init","initPromise","Promise","resolve","appComponent","getContext","scopeObject","getCardsChannel","async","default","cardHelper","__ui5_require_async","service","getServiceAsync","connect","providerId","onRetrieveAvailableCards","channel","isEnabled","id","consumers","sharedCards","registerProvider","updateConsumers","error","Log","debug","onConsumerConnected","shareAvailableCards","Object","keys","onConsumerDisconnected","onCardRequested","consumerId","cardId","card","values","flat","find","callback","onViewUpdate","active","unregisterProvider","unregister","undefined","cards","rootViewController","getRootViewController","isFclEnabled","viewId","getRightmostView","getId","publishAvailableCards","addCardsToCollaborationManager","parentAppId","entries","push","title","getDesignTimeCard","cardType","_this2","reject","Library","load","name","then","sap","ui","require","_len2","params","_key2","retrieveCard","generatedManifest","getObjectPageCardManifestForPreview","catch","publishCard","descriptorContent","Service","CollaborationManagerServiceFactory","_ServiceFactory","apply","_proto2","createInstance","oServiceContext","instance","getInstance","ServiceFactory","serviceClass"],"sources":["./CollaborationManagerServiceFactory.ts"],"sourcesContent":["import Log from \"sap/base/Log\";\nimport type RetrieveCard from \"sap/cards/ap/common/services/RetrieveCard\";\nimport type { RetrieveCardType } from \"sap/cards/ap/common/services/RetrieveCard\";\nimport type { CardManifest } from \"sap/insights/CardHelper\";\nimport type CardsChannel from \"sap/insights/CardsChannel\";\nimport type { ICardProvider, SharedCard } from \"sap/insights/CardsChannel\";\nimport Library from \"sap/ui/core/Lib\";\nimport Service from \"sap/ui/core/service/Service\";\nimport ServiceFactory from \"sap/ui/core/service/ServiceFactory\";\nimport type { ServiceContext } from \"types/metamodel_types\";\nimport type AppComponent from \"../AppComponent\";\n\ntype CollaborationManagerSettings = {};\n\nexport type WrappedCard = Pick<NonNullable<SharedCard>, \"card\" | \"title\" | \"callback\">;\n\nexport class CollaborationManagerService extends Service<CollaborationManagerSettings> implements ICardProvider {\n\tinitPromise!: Promise<CollaborationManagerService>;\n\n\t// eslint-disable-next-line camelcase\n\t__implements__sap_insights_ICardProvider = true;\n\n\tprivate channel!: CardsChannel;\n\n\tprivate id!: string;\n\n\tprivate consumers!: Record<string, boolean>;\n\n\tprivate onRetrieveAvailableCards?: () => Promise<void>;\n\n\tprivate sharedCards!: SharedCard[];\n\n\tprivate registered = false;\n\n\tprivate appComponent!: AppComponent;\n\n\t// used for FCL scenarios\n\tprivate sharedCardsPerView: Record<string, SharedCard[]> = {};\n\n\tinit(): void {\n\t\tthis.initPromise = new Promise((resolve) => {\n\t\t\tthis.appComponent = this.getContext().scopeObject as AppComponent;\n\t\t\tresolve(this);\n\t\t});\n\t}\n\n\tprivate async getCardsChannel(): Promise<CardsChannel> {\n\t\tconst { default: cardHelper } = await import(\"sap/insights/CardHelper\");\n\t\tconst service = await cardHelper.getServiceAsync(\"UIService\");\n\t\treturn service.getCardsChannel();\n\t}\n\n\tpublic async connect(providerId: string, onRetrieveAvailableCards: () => Promise<void>): Promise<CollaborationManagerService> {\n\t\ttry {\n\t\t\tconst channel = await this.getCardsChannel();\n\t\t\tif (channel.isEnabled()) {\n\t\t\t\tthis.onRetrieveAvailableCards = onRetrieveAvailableCards;\n\t\t\t\tthis.channel = channel;\n\t\t\t\tthis.id = providerId;\n\t\t\t\tthis.consumers = {};\n\t\t\t\tthis.sharedCards = [];\n\t\t\t\tif (this.registered !== true) {\n\t\t\t\t\tawait this.registerProvider();\n\t\t\t\t}\n\t\t\t\tthis.updateConsumers();\n\t\t\t}\n\t\t} catch (error: unknown) {\n\t\t\tLog.debug(\"Collaboration Manager connection failed\", error as Error | string);\n\t\t}\n\t\treturn this;\n\t}\n\n\tpublic async onConsumerConnected(id: string): Promise<number> {\n\t\tif (!this.consumers[id]) {\n\t\t\tthis.consumers[id] = true;\n\t\t\tawait this.onRetrieveAvailableCards?.();\n\t\t\tthis.shareAvailableCards(id);\n\t\t}\n\t\treturn Promise.resolve(Object.keys(this.consumers).length);\n\t}\n\n\tpublic async onConsumerDisconnected(id: string): Promise<number> {\n\t\tif (this.consumers[id]) {\n\t\t\tdelete this.consumers[id];\n\t\t}\n\t\treturn Promise.resolve(Object.keys(this.consumers).length);\n\t}\n\n\tpublic onCardRequested(consumerId: string, cardId: string): SharedCard {\n\t\t// Search through all cards stored across all views\n\t\tconst card = Object.values(this.sharedCardsPerView)\n\t\t\t.flat()\n\t\t\t.find((card) => card?.id === cardId);\n\t\tcard?.callback?.(card.card);\n\t\treturn card;\n\t}\n\n\tpublic async onViewUpdate(active: boolean): Promise<void> {\n\t\t// register / unregister if the status of the home page changed\n\t\tif (this.registered !== active) {\n\t\t\tif (active) {\n\t\t\t\tawait this.registerProvider();\n\t\t\t\tthis.updateConsumers();\n\t\t\t} else {\n\t\t\t\tawait this.unregisterProvider();\n\t\t\t}\n\t\t} else if (this.registered) {\n\t\t\tthis.updateConsumers();\n\t\t}\n\t}\n\n\tprivate async registerProvider(): Promise<void> {\n\t\tif (this.channel) {\n\t\t\tawait this.channel.registerProvider(this.id, this);\n\t\t\tthis.registered = true;\n\t\t}\n\t}\n\n\tpublic async unregisterProvider(): Promise<void> {\n\t\tif (this.channel) {\n\t\t\tawait this.channel.unregister(this.id);\n\t\t\tthis.registered = false;\n\t\t\tthis.consumers = {};\n\t\t\tthis.sharedCards = [];\n\t\t\tthis.onRetrieveAvailableCards = undefined;\n\t\t}\n\t}\n\n\tprivate updateConsumers(): void {\n\t\tthis.shareAvailableCards();\n\t}\n\n\tpublic shareAvailableCards(consumerId = \"*\"): void {\n\t\tlet cards = this.sharedCards;\n\t\tconst rootViewController = this.appComponent.getRootViewController();\n\t\tif (rootViewController.isFclEnabled()) {\n\t\t\tconst viewId = rootViewController.getRightmostView().getId();\n\t\t\tcards = this.sharedCardsPerView[viewId];\n\t\t}\n\t\tthis?.channel?.publishAvailableCards(this.id, cards, consumerId);\n\t}\n\n\tpublic addCardsToCollaborationManager(cards: Record<string, WrappedCard>, parentAppId: string, viewId: string): void {\n\t\tthis.sharedCards = [];\n\t\tfor (const [id, card] of Object.entries(cards)) {\n\t\t\tthis.sharedCards.push({\n\t\t\t\tid: id,\n\t\t\t\ttitle: card.title,\n\t\t\t\tparentAppId: parentAppId,\n\t\t\t\tcallback: card.callback,\n\t\t\t\tcard: card.card\n\t\t\t});\n\t\t}\n\t\tthis.sharedCardsPerView[viewId] = this.sharedCards;\n\t}\n\n\tpublic async getDesignTimeCard(cardType: RetrieveCardType): Promise<Record<string, unknown> | undefined> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tLibrary.load({ name: \"sap/cards/ap/common\" })\n\t\t\t\t.then((): void => {\n\t\t\t\t\tsap.ui.require([\"sap/cards/ap/common/services/RetrieveCard\"], async (...params: unknown[]) => {\n\t\t\t\t\t\tconst retrieveCard = params[0] as typeof RetrieveCard;\n\t\t\t\t\t\tlet generatedManifest;\n\t\t\t\t\t\tconst appComponent = this.appComponent;\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tgeneratedManifest = await retrieveCard.getObjectPageCardManifestForPreview(appComponent, {\n\t\t\t\t\t\t\t\tcardType: cardType\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\tLog.error(error as string);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresolve(generatedManifest);\n\t\t\t\t\t});\n\t\t\t\t\treturn;\n\t\t\t\t})\n\t\t\t\t.catch(function (error) {\n\t\t\t\t\tLog.error(error as string);\n\t\t\t\t\treject();\n\t\t\t\t});\n\t\t});\n\t}\n\n\tpublic publishCard(card: CardManifest): void {\n\t\tthis.channel.publishCard(this.id, { id: card[\"sap.app\"].id, descriptorContent: card }, \"*\");\n\t}\n}\n\nexport default class CollaborationManagerServiceFactory extends ServiceFactory<CollaborationManagerSettings> {\n\tstatic serviceClass = CollaborationManagerService;\n\n\tprivate instance!: CollaborationManagerService;\n\n\tasync createInstance(oServiceContext: ServiceContext<CollaborationManagerSettings>): Promise<CollaborationManagerService> {\n\t\tthis.instance = new CollaborationManagerService(oServiceContext);\n\t\treturn this.instance.initPromise;\n\t}\n\n\tgetInstance(): CollaborationManagerService {\n\t\treturn this.instance;\n\t}\n\n\tshareAvailableCards(): void {\n\t\tthis.instance.shareAvailableCards();\n\t}\n}\n"],"mappings":"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","ignoreList":[]}