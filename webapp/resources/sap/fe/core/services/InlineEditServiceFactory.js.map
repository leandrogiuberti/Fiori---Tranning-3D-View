{"version":3,"file":"InlineEditServiceFactory.js","names":["InlineEditService","_Service","_this","_len","arguments","length","args","Array","_key","call","this","pageConfigurations","Map","_exports","_inheritsLoose","_proto","prototype","init","initPromise","Promise","async","appComponent","getContext","bind","scopeObject","computePageConfigurations","resolve","model","getModel","isA","getMetaModel","requestObject","targets","getManifestEntry","routing","pageKey","pageConfiguration","getPageConfiguration","options","settings","undefined","set","getInlineConnectedProperties","targetProperty","connectedProperties","get","properties","includes","sort","propertyA","propertyB","getAssociatedDataModelObject","metaModel","annotationPath","pageContextPath","pageMetaContext","createBindingContext","replace","targetContext","MetaModelConverter","getInvolvedDataModelObjects","manifestEntry","manifestWrapper","ManifestWrapper","hasInlineEdit","active","enabledProperties","disabledProperties","contextPath","entitySet","getTargetPropertiesForInlineEdit","getInlineEditEnabledFields","getInlineEditDisabledFields","getConnectedPropertiesForPage","getInlineConnectedFields","targetPaths","connectedPropertiesForPage","targetPath","connectedTargets","isArray","push","targetProperties","dataModelObject","targetObject","concat","getPropertiesForInlineEdit","isProperty","fullyQualifiedName","$Type","Value","$target","Target","term","Data","reduce","acc","dataField","doesPageHaveInlineEdit","isPropertyConsideredForInlineEdit","propertyFullyQualifiedName","Service","InlineEditServiceFactory","_ServiceFactory","apply","_proto2","createInstance","oServiceContext","inlineEditService","ServiceFactory"],"sources":["./InlineEditServiceFactory.ts"],"sourcesContent":["import type { Property } from \"@sap-ux/vocabularies-types\";\nimport {\n\tUIAnnotationTerms,\n\tUIAnnotationTypes,\n\ttype DataField,\n\ttype DataFieldAbstractTypes,\n\ttype DataFieldForAnnotation,\n\ttype FieldGroup,\n\ttype Identification,\n\ttype LineItem\n} from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport { type BaseManifestSettings } from \"sap/fe/core/converters/ManifestSettings\";\nimport ManifestWrapper from \"sap/fe/core/converters/ManifestWrapper\";\nimport * as MetaModelConverter from \"sap/fe/core/converters/MetaModelConverter\";\nimport { isProperty } from \"sap/fe/core/helpers/TypeGuards\";\nimport type { DataModelObjectPath } from \"sap/fe/core/templating/DataModelPathHelper\";\nimport Service from \"sap/ui/core/service/Service\";\nimport ServiceFactory from \"sap/ui/core/service/ServiceFactory\";\nimport type Context from \"sap/ui/model/Context\";\nimport type ODataMetaModel from \"sap/ui/model/odata/v4/ODataMetaModel\";\nimport type ODataModel from \"sap/ui/model/odata/v4/ODataModel\";\nimport type { ServiceContext } from \"types/metamodel_types\";\nimport type AppComponent from \"../AppComponent\";\n\ntype PageConfiguration = {\n\tactive: boolean;\n\tenabledProperties: string[];\n\tdisabledProperties: string[];\n\tconnectedProperties: string[][];\n};\n\nexport class InlineEditService extends Service<InlineEditServiceFactory> {\n\tinitPromise!: Promise<InlineEditService>;\n\n\tprivate appComponent!: AppComponent;\n\n\tpageConfigurations: Map<string, PageConfiguration> = new Map();\n\n\tinit(): void {\n\t\tthis.initPromise = new Promise(async (resolve) => {\n\t\t\tthis.appComponent = super.getContext.bind(this)().scopeObject as AppComponent;\n\t\t\tawait this.computePageConfigurations();\n\t\t\tresolve(this);\n\t\t});\n\t}\n\n\t/**\n\t * Compute the page configurations for inline edit for all the pages in the app.\n\t * @returns A promise that resolves when the page configurations are computed\n\t */\n\tprivate async computePageConfigurations(): Promise<void> {\n\t\tconst model = this.appComponent.getModel();\n\t\tif (model?.isA?.<ODataModel>(\"sap.ui.model.odata.v4.ODataModel\")) {\n\t\t\t// We need to wait for the MetaModel to be requested\n\t\t\tawait model.getMetaModel().requestObject(\"/$EntityContainer/\");\n\t\t\tconst targets = (this.appComponent.getManifestEntry(\"sap.ui5\")?.routing?.targets ?? {}) as unknown as Record<\n\t\t\t\tstring,\n\t\t\t\tPartial<{ options: Partial<{ settings: BaseManifestSettings }> }>\n\t\t\t>;\n\t\t\tfor (const pageKey in targets) {\n\t\t\t\tconst pageConfiguration = this.getPageConfiguration(\n\t\t\t\t\t(targets[pageKey].options?.settings as BaseManifestSettings) || undefined,\n\t\t\t\t\tmodel.getMetaModel()\n\t\t\t\t);\n\t\t\t\tif (pageConfiguration) {\n\t\t\t\t\tthis.pageConfigurations.set(pageKey, pageConfiguration);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Get the connected properties to the given target property.\n\t * @param pageKey\n\t * @param targetProperty\n\t * @returns The connected properties to the given target property\n\t */\n\tpublic getInlineConnectedProperties(pageKey: string, targetProperty: string): string[] | undefined {\n\t\tconst connectedProperties = this.pageConfigurations.get(pageKey)?.connectedProperties;\n\t\tif (!connectedProperties) {\n\t\t\treturn [];\n\t\t}\n\t\tfor (const properties of connectedProperties) {\n\t\t\tif (properties.includes(targetProperty)) {\n\t\t\t\t// sort the properties for the targetProperty to be always in first position. That ensures the focus to be set on this property\n\t\t\t\tproperties.sort((propertyA: string, propertyB: string) => {\n\t\t\t\t\tif (propertyA === targetProperty) return -1;\n\t\t\t\t\tif (propertyB === targetProperty) return 1;\n\t\t\t\t\treturn 0;\n\t\t\t\t});\n\t\t\t\treturn properties;\n\t\t\t}\n\t\t}\n\t\treturn [];\n\t}\n\n\t/**\n\t * Get the data model object associated with the given annotation path.\n\t * @param metaModel\n\t * @param annotationPath\n\t * @param pageContextPath\n\t * @returns The data model object associated with the given annotation path\n\t */\n\tprivate getAssociatedDataModelObject(\n\t\tmetaModel: ODataMetaModel,\n\t\tannotationPath: string,\n\t\tpageContextPath: string\n\t): DataModelObjectPath<unknown> | undefined {\n\t\tconst pageMetaContext = metaModel.createBindingContext(pageContextPath);\n\t\tif (annotationPath.includes(UIAnnotationTerms.FieldGroup)) {\n\t\t\tannotationPath = annotationPath.replace(`@${UIAnnotationTerms.FieldGroup}`, `$Type/@${UIAnnotationTerms.FieldGroup}`);\n\t\t} else if (annotationPath.includes(UIAnnotationTerms.Identification)) {\n\t\t\tannotationPath = annotationPath.replace(`@${UIAnnotationTerms.Identification}`, `$Type/@${UIAnnotationTerms.Identification}`);\n\t\t} else if (annotationPath.includes(UIAnnotationTerms.LineItem)) {\n\t\t\tannotationPath = annotationPath.replace(`@${UIAnnotationTerms.LineItem}`, `$Type/@${UIAnnotationTerms.LineItem}`);\n\t\t}\n\t\tconst targetContext = pageMetaContext ? metaModel.createBindingContext(annotationPath, pageMetaContext) : null;\n\t\treturn targetContext\n\t\t\t? MetaModelConverter.getInvolvedDataModelObjects<unknown>(targetContext, pageMetaContext as Context)\n\t\t\t: undefined;\n\t}\n\n\t/**\n\t * Get the page configuration for the given manifest entry.\n\t * @param manifestEntry\n\t * @param metaModel\n\t * @returns The page configuration\n\t */\n\tprivate getPageConfiguration(manifestEntry: BaseManifestSettings | undefined, metaModel: ODataMetaModel): PageConfiguration | null {\n\t\tif (!manifestEntry) {\n\t\t\treturn null;\n\t\t}\n\t\tconst manifestWrapper = new ManifestWrapper(manifestEntry);\n\t\tif (!manifestWrapper.hasInlineEdit()) {\n\t\t\treturn {\n\t\t\t\tactive: false,\n\t\t\t\tenabledProperties: [],\n\t\t\t\tdisabledProperties: [],\n\t\t\t\tconnectedProperties: []\n\t\t\t};\n\t\t}\n\t\tlet pageContextPath = manifestEntry.contextPath;\n\t\tif (!pageContextPath) {\n\t\t\tpageContextPath = manifestEntry.entitySet ? `/${manifestEntry.entitySet}` : undefined;\n\t\t}\n\t\treturn {\n\t\t\tactive: true,\n\t\t\tenabledProperties: this.getTargetPropertiesForInlineEdit(\n\t\t\t\tmanifestWrapper.getInlineEditEnabledFields(),\n\t\t\t\tpageContextPath,\n\t\t\t\tmetaModel\n\t\t\t),\n\t\t\tdisabledProperties: this.getTargetPropertiesForInlineEdit(\n\t\t\t\tmanifestWrapper.getInlineEditDisabledFields(),\n\t\t\t\tpageContextPath,\n\t\t\t\tmetaModel\n\t\t\t),\n\t\t\tconnectedProperties: this.getConnectedPropertiesForPage(manifestWrapper.getInlineConnectedFields(), pageContextPath, metaModel)\n\t\t};\n\t}\n\n\t/**\n\t * Get the connected properties for a given page .\n\t * @param targetPaths\n\t * @param pageContextPath\n\t * @param metaModel\n\t * @returns The connected properties for the given page\n\t */\n\tprivate getConnectedPropertiesForPage(\n\t\ttargetPaths: (string | string[])[],\n\t\tpageContextPath: string | undefined,\n\t\tmetaModel: ODataMetaModel\n\t): string[][] {\n\t\tconst connectedPropertiesForPage = [];\n\t\tfor (const targetPath of targetPaths) {\n\t\t\tconst connectedTargets = Array.isArray(targetPath) ? targetPath : [targetPath];\n\n\t\t\tconnectedPropertiesForPage.push(this.getTargetPropertiesForInlineEdit(connectedTargets, pageContextPath, metaModel));\n\t\t}\n\t\treturn connectedPropertiesForPage;\n\t}\n\n\t/**\n\t * Get the properties that are considered in edition for the given target paths.\n\t * @param targetPaths\n\t * @param pageContextPath\n\t * @param metaModel\n\t * @returns The properties that are considered in edition for the given target paths\n\t */\n\tprivate getTargetPropertiesForInlineEdit(\n\t\ttargetPaths: string[],\n\t\tpageContextPath: string | undefined,\n\t\tmetaModel: ODataMetaModel\n\t): string[] {\n\t\tif (!pageContextPath) {\n\t\t\treturn [];\n\t\t}\n\t\tlet targetProperties: string[] = [];\n\t\tfor (const targetPath of targetPaths) {\n\t\t\tconst dataModelObject = this.getAssociatedDataModelObject(metaModel, targetPath, pageContextPath);\n\t\t\tif (dataModelObject && dataModelObject.targetObject) {\n\t\t\t\ttargetProperties = targetProperties.concat(InlineEditService.getPropertiesForInlineEdit(dataModelObject.targetObject));\n\t\t\t}\n\t\t}\n\t\treturn targetProperties;\n\t}\n\n\t/**\n\t * Gets the properties that can be edited for the given target object.\n\t * @param targetObject\n\t * @returns The properties that are considered in edition for the given target object\n\t */\n\tprivate static getPropertiesForInlineEdit(targetObject: undefined | Property | Partial<{ $Type: string; term: string }>): string[] {\n\t\tif (!targetObject) {\n\t\t\treturn [];\n\t\t}\n\t\tif (isProperty(targetObject)) {\n\t\t\treturn [targetObject.fullyQualifiedName];\n\t\t}\n\t\tif (targetObject.$Type) {\n\t\t\tswitch (targetObject.$Type) {\n\t\t\t\tcase UIAnnotationTypes.DataField:\n\t\t\t\tcase UIAnnotationTypes.DataFieldWithUrl:\n\t\t\t\tcase UIAnnotationTypes.DataPointType:\n\t\t\t\t\treturn InlineEditService.getPropertiesForInlineEdit((targetObject as DataField).Value?.$target);\n\t\t\t\tcase UIAnnotationTypes.DataFieldForAnnotation:\n\t\t\t\t\treturn InlineEditService.getPropertiesForInlineEdit((targetObject as DataFieldForAnnotation).Target?.$target);\n\t\t\t}\n\t\t}\n\t\tif (targetObject.term) {\n\t\t\tswitch (targetObject.term) {\n\t\t\t\tcase UIAnnotationTerms.FieldGroup:\n\t\t\t\t\treturn (targetObject as FieldGroup).Data.reduce(\n\t\t\t\t\t\t(acc: string[], dataField: DataFieldAbstractTypes) =>\n\t\t\t\t\t\t\tacc.concat(InlineEditService.getPropertiesForInlineEdit(dataField)),\n\t\t\t\t\t\t[]\n\t\t\t\t\t);\n\t\t\t\tcase UIAnnotationTerms.Identification:\n\t\t\t\tcase UIAnnotationTerms.LineItem:\n\t\t\t\t\treturn (targetObject as Identification | LineItem).reduce(\n\t\t\t\t\t\t(acc: string[], dataField: DataFieldAbstractTypes) =>\n\t\t\t\t\t\t\tacc.concat(InlineEditService.getPropertiesForInlineEdit(dataField)),\n\t\t\t\t\t\t[]\n\t\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn [];\n\t}\n\n\t/**\n\t * Check if the given page has inline edit enabled.\n\t * @param pageKey\n\t * @returns Whether the given page has inline edit enabled\n\t */\n\tpublic doesPageHaveInlineEdit(pageKey: string): boolean {\n\t\treturn this.pageConfigurations.get(pageKey)?.active ?? false;\n\t}\n\n\t/**\n\t * Check if the given property is considered for inline edit on the given page.\n\t * @param pageKey\n\t * @param propertyFullyQualifiedName\n\t * @returns Whether the given property is considered for inline edit on the given page\n\t */\n\tpublic isPropertyConsideredForInlineEdit(pageKey: string, propertyFullyQualifiedName: string): boolean {\n\t\tif (propertyFullyQualifiedName === \"\") {\n\t\t\treturn false;\n\t\t}\n\t\tconst pageConfiguration = this.pageConfigurations.get(pageKey);\n\t\tif (pageConfiguration) {\n\t\t\treturn (\n\t\t\t\t(pageConfiguration.enabledProperties.includes(propertyFullyQualifiedName) ||\n\t\t\t\t\tpageConfiguration.enabledProperties.length === 0) &&\n\t\t\t\t!pageConfiguration.disabledProperties.includes(propertyFullyQualifiedName)\n\t\t\t);\n\t\t}\n\t\treturn false;\n\t}\n}\n\nexport default class InlineEditServiceFactory extends ServiceFactory<InlineEditServiceFactory> {\n\tpublic async createInstance(oServiceContext: ServiceContext<InlineEditServiceFactory>): Promise<InlineEditService> {\n\t\tconst inlineEditService = new InlineEditService(oServiceContext);\n\t\treturn inlineEditService.initPromise;\n\t}\n}\n"],"mappings":"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","ignoreList":[]}