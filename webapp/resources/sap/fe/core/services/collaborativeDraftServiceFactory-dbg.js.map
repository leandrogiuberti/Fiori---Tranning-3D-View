{"version":3,"names":["MYACTIVITIES","ACTIVEUSERS","ACTIVITIES","ASYNCMESSAGESQUEUE","RETAINEDASYNCMESSAGES","ASYNCMESSAGESTIMERID","SYNCGROUPID","DELAYONFOCUS","CollaborativeDraftService","_Service","apply","arguments","_exports","_inheritsLoose","_proto","prototype","checkPathForLock","activityModel","activityPath","myActivities","getProperty","includes","setLock","push","setProperty","removeLock","activityPaths","undefined","pathsToRemove","Array","isArray","myNewActivities","filter","activity","length","getLockedProperties","join","updateLocksForContextPath","element","oldContextPath","newContextPath","isConnected","internalModel","getModel","currentQueue","forEach","queueItem","path","startsWith","replace","changedActivities","unchangedActivities","lockedPath","newlockedPath","send","action","Activity","Lock","content","resetAsyncMessagesTimer","timerId","clearTimeout","setTimeout","queue","newQueue","pathsToRetain","item","doSend","retainAsyncMessages","additionalPathsToRetain","retainedPaths","releaseAsyncMessages","pathsToRelease","retainedPath","isCollaborationConnected","message","Unlock","doSendAsync","triggeredActionName","refreshListBinding","actionRequestedProperties","clientContent","requestedProperties","pathForLock","removed","broadcastCollaborationMessage","pathsToAdd","isCollaborationEnabled","view","bindingContext","getBindingContext","ModelHelper","isCollaborationDraftSupported","getMetaModel","connect","draftRootContext","me","CollaborationUtils","getMe","CommonUtils","getAppComponent","sDraftUUID","requestProperty","initialized","initializeCollaboration","messageReceive","disconnect","endCollaboration","userJoinDraft","activeUsers","sender","findIndex","user","id","unshift","userAction","Join","JoinEcho","LockEcho","userLeaveDraft","allActivities","removeUserActivities","bag","p","activities","activityKey","metaPath","calculateMetaPath","clientAction","userID","name","userDescription","initials","formatInitials","color","getUserColor","mactivity","Leave","Change","updateOnChange","Create","updateOnCreate","Delete","updateOnDelete","Activate","draftClosedByOtherUser","getText","Discard","Action","updateOnAction","key","getActivityKeyFromPath","initJSONModel","parts","split","i","slice","a","messageText","MessageBox","information","onClose","getBinding","resetChanges","InstanceManager","hasOpenDialog","closeAllDialogs","navigate","error","Log","updatedObjectsPaths","currentPage","getCurrentPage","currentContext","requestPromises","map","applyUpdatesForChange","getController","editFlow","updateDocument","Promise","all","propertyPathForUpdate","metaModel","metaContext","getMetaContext","dataModelObject","MetaModelConverter","getInvolvedDataModelObjects","targetContextPath","substring","lastIndexOf","targetContext","findContextForUpdate","parentCollectionPath","parentContextPath","parentContext","sideEffectsPromises","sideEffectsService","getSideEffectsService","targetMetaPath","getMetaPath","getPath","relativeMetaPathForUpdate","requestSideEffects","fieldGroupIds","computeFieldGroupIds","targetEntityType","fullyQualifiedName","targetObject","pageController","sideEffectsMapForFieldGroup","_sideEffects","getSideEffectsMapForFieldGroups","Object","keys","sideEffectName","sideEffect","sideEffects","context","err","currentPath","deletedObjectPaths","deletedPathInUse","find","deletedPath","getKeepAliveContext","setKeepAlive","requestPromise","applyUpdatesForCollection","_routing","navigateBackFromContext","createdObjectPaths","pathInCollection","appComponent","parentPath","metaPathForUpdate","parentMetaPath","relativePath","requestSideEffectsForNavigationProperty","pathsForAction","actionName","clientTriggeredActionName","clientRequestedProperties","clientRefreshListBinding","requestUpdateForAction","pathForAction","sideEffectService","sideEffectsFromAction","getODataActionSideEffects","sideEffectPromises","pathExpressions","metaPathForAction","dataModelPath","getContext","propertiesToRequest","entityProperties","property","prop","targetPaths","endsWith","model","parentListBinding","getAllBindings","binding","bindingPath","isRelative","getResolvedPath","isA","getAllCurrentContexts","bindContext","getBoundContext","getCreationMode","navigateToContext","recreateContext","getCurrentPageView","dataPath","init","initPromise","resolve","Service","CollaborativeDraftServiceFactory","_ServiceFactory","_proto2","createInstance","oServiceContext","collaborativeDraftService","ServiceFactory"],"sourceRoot":".","sources":["collaborativeDraftServiceFactory.ts"],"sourcesContent":["import type { Property } from \"@sap-ux/vocabularies-types\";\nimport Log from \"sap/base/Log\";\nimport type { FEView } from \"sap/fe/core/BaseController\";\nimport CommonUtils from \"sap/fe/core/CommonUtils\";\nimport type { FieldSideEffectDictionary } from \"sap/fe/core/controllerextensions/SideEffects\";\nimport {\n\tbroadcastCollaborationMessage,\n\tendCollaboration,\n\tinitializeCollaboration,\n\tisCollaborationConnected\n} from \"sap/fe/core/controllerextensions/collaboration/ActivityBase\";\nimport type { Message, User, UserActivity } from \"sap/fe/core/controllerextensions/collaboration/CollaborationCommon\";\nimport { Activity, CollaborationUtils, getActivityKeyFromPath } from \"sap/fe/core/controllerextensions/collaboration/CollaborationCommon\";\nimport * as MetaModelConverter from \"sap/fe/core/converters/MetaModelConverter\";\nimport ModelHelper from \"sap/fe/core/helpers/ModelHelper\";\nimport InstanceManager from \"sap/m/InstanceManager\";\nimport MessageBox from \"sap/m/MessageBox\";\nimport type UI5Element from \"sap/ui/core/Element\";\nimport type View from \"sap/ui/core/mvc/View\";\nimport Service from \"sap/ui/core/service/Service\";\nimport ServiceFactory from \"sap/ui/core/service/ServiceFactory\";\nimport type JSONModel from \"sap/ui/model/json/JSONModel\";\nimport type Context from \"sap/ui/model/odata/v4/Context\";\nimport type ODataListBinding from \"sap/ui/model/odata/v4/ODataListBinding\";\nimport type { ServiceContext } from \"types/metamodel_types\";\n\nconst MYACTIVITIES = \"/collaboration/myActivities\";\nconst ACTIVEUSERS = \"/collaboration/activeUsers\";\nconst ACTIVITIES = \"/collaboration/activities\";\nconst ASYNCMESSAGESQUEUE = \"/collaboration/asyncMsgQueue\";\nconst RETAINEDASYNCMESSAGES = \"/collaboration/retainedMessages\";\nconst ASYNCMESSAGESTIMERID = \"/collaboration/asyncMsgTimerId\";\nconst SYNCGROUPID = \"$auto.sync\";\n\nconst DELAYONFOCUS = 500; // 500ms delay for async LOCK/UNLOCK messages\n\ntype AsyncMessage = {\n\tpath: string;\n\taction: Activity.Unlock | Activity.Lock;\n};\n\nexport class CollaborativeDraftService extends Service<CollaborativeDraftServiceFactory> {\n\tinitPromise!: Promise<CollaborativeDraftService>;\n\n\t/**\n\t * Checks if a given path is locked by the current user.\n\t * @param activityModel\n\t * @param activityPath\n\t * @returns True if the path is locked\n\t */\n\tcheckPathForLock(activityModel: JSONModel, activityPath: string): boolean {\n\t\tconst myActivities: string[] | undefined | null = activityModel.getProperty(MYACTIVITIES);\n\t\tif (!myActivities) {\n\t\t\treturn false;\n\t\t} else {\n\t\t\treturn myActivities.includes(activityPath);\n\t\t}\n\t}\n\n\t/**\n\t * Sets a path as locked for the current user.\n\t * @param activityModel\n\t * @param activityPath\n\t */\n\tsetLock(activityModel: JSONModel, activityPath: string): void {\n\t\tconst myActivities: string[] = activityModel.getProperty(MYACTIVITIES) ?? [];\n\t\tif (!myActivities.includes(activityPath)) {\n\t\t\tmyActivities.push(activityPath);\n\t\t}\n\n\t\tactivityModel.setProperty(MYACTIVITIES, myActivities);\n\t}\n\n\t/**\n\t * Removes the lock for a given path.\n\t * @param activityModel\n\t * @param activityPaths\n\t * @returns True if the path was previously locked\n\t */\n\tremoveLock(activityModel: JSONModel, activityPaths: string | string[] | undefined): boolean {\n\t\tconst myActivities: string[] | undefined | null = activityModel.getProperty(MYACTIVITIES);\n\t\tif (!myActivities || activityPaths === undefined) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst pathsToRemove = Array.isArray(activityPaths) ? activityPaths : [activityPaths];\n\t\tconst myNewActivities = myActivities.filter((activity) => {\n\t\t\treturn !pathsToRemove.includes(activity);\n\t\t});\n\t\tactivityModel.setProperty(MYACTIVITIES, myNewActivities);\n\n\t\treturn myNewActivities.length !== myActivities.length;\n\t}\n\n\t/**\n\t * Returns all locked paths for the current user.\n\t * @param activityModel\n\t * @returns Concatenated paths for all locked properties\n\t */\n\tgetLockedProperties(activityModel: JSONModel): string | undefined {\n\t\tconst myActivities: string[] | undefined | null = activityModel.getProperty(MYACTIVITIES);\n\t\tif (!myActivities) {\n\t\t\treturn undefined;\n\t\t} else {\n\t\t\treturn myActivities.join(\"|\");\n\t\t}\n\t}\n\n\t/**\n\t * Updates all current locks by changing a context path.\n\t * This is called when activating a context, where the initial locks were using the transient path\n\t * and need to be updated with the actual path.\n\t * @param element\n\t * @param oldContextPath\n\t * @param newContextPath\n\t */\n\tupdateLocksForContextPath(element: UI5Element, oldContextPath: string, newContextPath: string): void {\n\t\tif (!this.isConnected(element)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst internalModel = element.getModel(\"internal\") as JSONModel;\n\n\t\t// Replace paths in pending async messages\n\t\tconst currentQueue: AsyncMessage[] = internalModel.getProperty(ASYNCMESSAGESQUEUE);\n\t\tcurrentQueue.forEach((queueItem) => {\n\t\t\tif (queueItem.path.startsWith(oldContextPath)) {\n\t\t\t\tqueueItem.path = queueItem.path.replace(oldContextPath, newContextPath);\n\t\t\t}\n\t\t});\n\n\t\t// Replace paths in existing locks (and broadcast the corresponding message if necessary)\n\t\tconst myActivities: string[] | undefined | null = internalModel.getProperty(MYACTIVITIES);\n\t\tif (myActivities) {\n\t\t\tconst changedActivities: string[] = [];\n\t\t\tconst unchangedActivities: string[] = [];\n\t\t\tmyActivities.forEach((lockedPath) => {\n\t\t\t\tif (lockedPath.startsWith(oldContextPath)) {\n\t\t\t\t\t// Replace the path in the list of locks, and store this path for sending a new LOCK message\n\t\t\t\t\tconst newlockedPath = lockedPath.replace(oldContextPath, newContextPath);\n\t\t\t\t\tchangedActivities.push(newlockedPath);\n\t\t\t\t} else {\n\t\t\t\t\tunchangedActivities.push(lockedPath);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tinternalModel.setProperty(MYACTIVITIES, unchangedActivities);\n\t\t\tif (changedActivities.length !== 0) {\n\t\t\t\tthis.send(element, { action: Activity.Lock, content: changedActivities });\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Resets the timer for sending asynchronous collaboration messages.\n\t * @param internalModel\n\t */\n\tresetAsyncMessagesTimer(internalModel: JSONModel): void {\n\t\tlet timerId = internalModel.getProperty(ASYNCMESSAGESTIMERID);\n\t\tif (timerId !== undefined) {\n\t\t\tclearTimeout(timerId);\n\t\t}\n\n\t\ttimerId = setTimeout(() => {\n\t\t\tconst queue: AsyncMessage[] | undefined = internalModel.getProperty(ASYNCMESSAGESQUEUE);\n\t\t\tconst newQueue: AsyncMessage[] = [];\n\t\t\tconst pathsToRetain: string[] = internalModel.getProperty(RETAINEDASYNCMESSAGES) ?? [];\n\n\t\t\tif (!queue) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tqueue.forEach((item) => {\n\t\t\t\tif (pathsToRetain.includes(item.path)) {\n\t\t\t\t\tnewQueue.push(item);\n\t\t\t\t} else {\n\t\t\t\t\tthis.doSend(internalModel, item.action, item.path);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tinternalModel.setProperty(ASYNCMESSAGESQUEUE, newQueue);\n\t\t\tinternalModel.setProperty(ASYNCMESSAGESTIMERID, undefined);\n\n\t\t\tif (newQueue.length) {\n\t\t\t\t// If some messages are still pending, reschedule a new timer\n\t\t\t\tthis.resetAsyncMessagesTimer(internalModel);\n\t\t\t}\n\t\t}, DELAYONFOCUS);\n\n\t\tinternalModel.setProperty(ASYNCMESSAGESTIMERID, timerId);\n\t}\n\n\t/**\n\t * Mark some paths as being retained, i.e. async messages for these paths won't be sent but kept until they're released.\n\t * This applies to existing async messages in the queue, but also to future messages.\n\t * @param element\n\t * @param activityPaths The paths to be retained\n\t */\n\tretainAsyncMessages(element: UI5Element, activityPaths: string | string[]): void {\n\t\tconst internalModel = element.getModel(\"internal\") as JSONModel;\n\t\tconst additionalPathsToRetain = Array.isArray(activityPaths) ? activityPaths : [activityPaths];\n\n\t\tconst retainedPaths: string[] = internalModel.getProperty(RETAINEDASYNCMESSAGES);\n\t\tadditionalPathsToRetain.forEach((path) => {\n\t\t\tif (!retainedPaths.includes(path)) {\n\t\t\t\tretainedPaths.push(path);\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Release async messages for some paths that were previously retained.\n\t * The corresponding messages are not sent immediately, but the next time the async timer wakes up.\n\t * @param element\n\t * @param activityPaths The paths to be released\n\t */\n\treleaseAsyncMessages(element: UI5Element, activityPaths: string | string[]): void {\n\t\tconst internalModel = element.getModel(\"internal\") as JSONModel;\n\t\tconst pathsToRetain: string[] = internalModel.getProperty(RETAINEDASYNCMESSAGES);\n\t\tconst pathsToRelease = Array.isArray(activityPaths) ? activityPaths : [activityPaths];\n\n\t\tinternalModel.setProperty(\n\t\t\tRETAINEDASYNCMESSAGES,\n\t\t\tpathsToRetain.filter((retainedPath) => {\n\t\t\t\treturn !pathsToRelease.includes(retainedPath);\n\t\t\t})\n\t\t);\n\t}\n\n\t/**\n\t * Checks if a collaboration session is currently open.\n\t * @param element\n\t * @returns True if a collaboration session is currently open.\n\t */\n\tisConnected(element: UI5Element): boolean {\n\t\tconst internalModel = element.getModel(\"internal\") as JSONModel;\n\t\treturn isCollaborationConnected(internalModel);\n\t}\n\n\t/**\n\t * Sends a collaboration message to other connected users.\n\t * @param element\n\t * @param message\n\t * @param message.action\n\t * @param message.content\n\t * @param message.triggeredActionName\n\t * @param message.refreshListBinding\n\t * @param message.actionRequestedProperties\n\t */\n\tpublic send(\n\t\telement: UI5Element,\n\t\tmessage: {\n\t\t\taction: Activity;\n\t\t\tcontent: string | string[] | undefined;\n\t\t\ttriggeredActionName?: string;\n\t\t\trefreshListBinding?: boolean;\n\t\t\tactionRequestedProperties?: string[];\n\t\t}\n\t): void {\n\t\tif (this.isConnected(element)) {\n\t\t\tconst internalModel = element.getModel(\"internal\") as JSONModel;\n\t\t\tif (message.action === Activity.Lock || message.action === Activity.Unlock) {\n\t\t\t\t// Lock-related events are always sent with some delay\n\t\t\t\tthis.doSendAsync(internalModel, message.action, message.content);\n\t\t\t} else {\n\t\t\t\tthis.doSend(\n\t\t\t\t\tinternalModel,\n\t\t\t\t\tmessage.action,\n\t\t\t\t\tmessage.content,\n\t\t\t\t\tmessage.triggeredActionName,\n\t\t\t\t\tmessage.refreshListBinding,\n\t\t\t\t\tmessage.actionRequestedProperties\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Internal function to send a collaboration message immediately.\n\t * @param internalModel\n\t * @param action\n\t * @param content\n\t * @param triggeredActionName\n\t * @param refreshListBinding\n\t * @param actionRequestedProperties\n\t */\n\tdoSend(\n\t\tinternalModel: JSONModel,\n\t\taction: Activity,\n\t\tcontent: string | string[] | undefined,\n\t\ttriggeredActionName?: string,\n\t\trefreshListBinding?: boolean,\n\t\tactionRequestedProperties?: string[]\n\t): void {\n\t\tconst clientContent = (Array.isArray(content) ? content.join(\"|\") : content) ?? \"\";\n\t\tconst requestedProperties = actionRequestedProperties?.join(\"|\");\n\t\tif (action === Activity.Lock) {\n\t\t\tconst pathForLock = (Array.isArray(content) ? content[0] : content) ?? \"\";\n\t\t\t// To avoid unnecessary traffic we keep track of lock changes and send it only once\n\t\t\tif (this.checkPathForLock(internalModel, pathForLock)) {\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\tthis.setLock(internalModel, pathForLock);\n\t\t\t}\n\t\t} else if (action === Activity.Unlock) {\n\t\t\tconst removed = this.removeLock(internalModel, content);\n\t\t\t// No need to send an Unlock message if it was not already locked\n\t\t\tif (!removed) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tbroadcastCollaborationMessage(action, clientContent, internalModel, triggeredActionName, refreshListBinding, requestedProperties);\n\t}\n\n\t/**\n\t * Internal function to send a collaboration message asynchronously.\n\t * @param internalModel\n\t * @param action\n\t * @param content\n\t */\n\tdoSendAsync(internalModel: JSONModel, action: Activity.Lock | Activity.Unlock, content: string | string[] | undefined): void {\n\t\tif (content === undefined) {\n\t\t\treturn;\n\t\t}\n\t\tconst currentQueue: AsyncMessage[] = internalModel.getProperty(ASYNCMESSAGESQUEUE);\n\t\tconst pathsToAdd = Array.isArray(content) ? content : [content];\n\t\t// Remove existing items in the queue for the paths that will be added\n\t\tconst newQueue = currentQueue.filter((item) => {\n\t\t\treturn !pathsToAdd.includes(item.path);\n\t\t});\n\t\tpathsToAdd.forEach((path) => {\n\t\t\tnewQueue.push({ path, action });\n\t\t});\n\t\tinternalModel.setProperty(ASYNCMESSAGESQUEUE, newQueue);\n\t\tthis.resetAsyncMessagesTimer(internalModel);\n\t}\n\n\tisCollaborationEnabled(view: View): boolean {\n\t\tconst bindingContext = view?.getBindingContext && (view.getBindingContext() as Context);\n\t\treturn !!(bindingContext && ModelHelper.isCollaborationDraftSupported(bindingContext.getModel().getMetaModel()));\n\t}\n\n\t/**\n\t * Function to establish a connection with a collaborative draft service.\n\t * @param draftRootContext The draft root context\n\t * @param view  The view that is used to connect the websocket\n\t * @returns Promise\n\t */\n\tasync connect(draftRootContext: Context, view: FEView): Promise<void> {\n\t\tconst internalModel = view.getModel(\"internal\");\n\t\tconst me = CollaborationUtils.getMe(CommonUtils.getAppComponent(view));\n\n\t\t// Retrieving ME from shell service\n\t\tif (!me) {\n\t\t\t// no me = no shell = not sure what to do\n\t\t\treturn;\n\t\t}\n\n\t\tconst sDraftUUID = await draftRootContext.requestProperty(\"DraftAdministrativeData/DraftUUID\");\n\t\tif (!sDraftUUID) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst initialized = initializeCollaboration(\n\t\t\tme,\n\t\t\tsDraftUUID,\n\t\t\tinternalModel,\n\t\t\t(message: Message) => {\n\t\t\t\tthis.messageReceive(message, view);\n\t\t\t},\n\t\t\tview\n\t\t);\n\n\t\tif (initialized) {\n\t\t\tinternalModel.setProperty(MYACTIVITIES, []);\n\t\t\tinternalModel.setProperty(ASYNCMESSAGESQUEUE, []);\n\t\t\tinternalModel.setProperty(RETAINEDASYNCMESSAGES, []);\n\t\t}\n\t}\n\n\t/**\n\t * Function to close a connection with a collaborative draft service.\n\t * @param view Current View\n\t */\n\tdisconnect(view: FEView): void {\n\t\tconst internalModel = view.getModel(\"internal\");\n\t\tendCollaboration(internalModel);\n\t}\n\n\t/**\n\t * Function to update internal model when a user joins the draft.\n\t * @param activeUsers List of connected users\n\t * @param internalModel Internal model\n\t * @param sender User sending the JOIN or JOINECHO message\n\t * @param message The message\n\t * @param view Current View\n\t */\n\tuserJoinDraft(activeUsers: User[], internalModel: JSONModel, sender: User, message: Message, view: FEView): void {\n\t\tif (activeUsers.findIndex((user) => user.id === sender.id) === -1) {\n\t\t\tactiveUsers.unshift(sender);\n\t\t\tinternalModel.setProperty(ACTIVEUSERS, activeUsers);\n\t\t}\n\n\t\tif (message.userAction === Activity.Join) {\n\t\t\t// we echo our existence to the newly entered user and also send the current activity if there is any\n\t\t\tbroadcastCollaborationMessage(Activity.JoinEcho, this.getLockedProperties(internalModel), internalModel);\n\t\t}\n\n\t\tif (message.userAction === Activity.JoinEcho) {\n\t\t\tif (message.clientContent) {\n\t\t\t\t// another user was already typing therefore I want to see his activity immediately. Calling me again as a live change\n\t\t\t\tmessage.userAction = Activity.LockEcho;\n\t\t\t\tthis.messageReceive(message, view);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Function to update internal model when a user leaves the draft.\n\t * @param activeUsers List of connected users\n\t * @param internalModel Internal model\n\t * @param sender User sending the JOIN or JOINECHO message\n\t */\n\tuserLeaveDraft(activeUsers: User[], internalModel: JSONModel, sender: User): void {\n\t\t// Removing the active user. Not removing \"me\" if I had the screen open in another session\n\t\tactiveUsers = activeUsers.filter((user) => user.id !== sender.id || user.me);\n\t\tinternalModel.setProperty(ACTIVEUSERS, activeUsers);\n\t\tconst allActivities = internalModel.getProperty(ACTIVITIES) || {};\n\t\tconst removeUserActivities = function (bag: Record<string, unknown> | UserActivity[]): Record<string, unknown> | UserActivity[] {\n\t\t\tif (Array.isArray(bag)) {\n\t\t\t\treturn bag.filter((activity) => activity.id !== sender.id);\n\t\t\t} else {\n\t\t\t\tfor (const p in bag) {\n\t\t\t\t\tbag[p] = removeUserActivities(bag[p] as Record<string, unknown> | UserActivity[]);\n\t\t\t\t}\n\t\t\t\treturn bag;\n\t\t\t}\n\t\t};\n\t\tremoveUserActivities(allActivities);\n\t\tinternalModel.setProperty(ACTIVITIES, allActivities);\n\t}\n\n\t/**\n\t * Callback when a message is received from the websocket.\n\t * @param message The message received\n\t * @param view The view that was used initially when connecting the websocket\n\t */\n\tmessageReceive(message: Message, view: FEView): void {\n\t\tconst internalModel = view.getModel(\"internal\");\n\t\tconst activeUsers: User[] = internalModel.getProperty(ACTIVEUSERS);\n\t\tlet activities: UserActivity[];\n\t\tlet activityKey: string;\n\t\tconst metaPath = this.calculateMetaPath(view, message.clientContent);\n\t\tmessage.userAction = message.userAction || message.clientAction;\n\n\t\tconst sender: User = {\n\t\t\tid: message.userID,\n\t\t\tname: message.userDescription,\n\t\t\tinitials: CollaborationUtils.formatInitials(message.userDescription),\n\t\t\tcolor: CollaborationUtils.getUserColor(message.userID, activeUsers, [])\n\t\t};\n\n\t\tlet mactivity: UserActivity = sender;\n\n\t\t// eslint-disable-next-line default-case\n\t\tswitch (message.userAction) {\n\t\t\tcase Activity.Join:\n\t\t\tcase Activity.JoinEcho:\n\t\t\t\tthis.userJoinDraft(activeUsers, internalModel, sender, message, view);\n\t\t\t\tbreak;\n\n\t\t\tcase Activity.Leave:\n\t\t\t\tthis.userLeaveDraft(activeUsers, internalModel, sender);\n\t\t\t\tbreak;\n\n\t\t\tcase Activity.Change:\n\t\t\t\tthis.updateOnChange(view, message);\n\t\t\t\tbreak;\n\n\t\t\tcase Activity.Create:\n\t\t\t\t// For create we actually just need to refresh the table\n\t\t\t\tthis.updateOnCreate(view, message);\n\t\t\t\tbreak;\n\n\t\t\tcase Activity.Delete:\n\t\t\t\t// For now also refresh the page but in case of deletion we need to inform the user\n\t\t\t\tthis.updateOnDelete(view, message);\n\t\t\t\tbreak;\n\n\t\t\tcase Activity.Activate:\n\t\t\t\tthis.draftClosedByOtherUser(\n\t\t\t\t\tview,\n\t\t\t\t\tmessage.clientContent,\n\t\t\t\t\tCollaborationUtils.getText(\"C_COLLABORATIONDRAFT_ACTIVATE\", sender.name)\n\t\t\t\t);\n\t\t\t\tbreak;\n\n\t\t\tcase Activity.Discard:\n\t\t\t\tthis.draftClosedByOtherUser(\n\t\t\t\t\tview,\n\t\t\t\t\tmessage.clientContent,\n\t\t\t\t\tCollaborationUtils.getText(\"C_COLLABORATIONDRAFT_DISCARD\", sender.name)\n\t\t\t\t);\n\t\t\t\tbreak;\n\n\t\t\tcase Activity.Action:\n\t\t\t\tthis.updateOnAction(view, message);\n\t\t\t\tbreak;\n\n\t\t\tcase Activity.Lock:\n\t\t\tcase Activity.LockEcho:\n\t\t\t\tmactivity = sender;\n\t\t\t\tmactivity.key = getActivityKeyFromPath(message.clientContent);\n\n\t\t\t\t// stupid JSON model...\n\t\t\t\tlet initJSONModel = \"\";\n\t\t\t\tconst parts = metaPath.split(\"/\");\n\t\t\t\tfor (let i = 1; i < parts.length - 1; i++) {\n\t\t\t\t\tinitJSONModel += `/${parts[i]}`;\n\t\t\t\t\tif (!internalModel.getProperty(ACTIVITIES + initJSONModel)) {\n\t\t\t\t\t\tinternalModel.setProperty(ACTIVITIES + initJSONModel, {});\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tactivities = internalModel.getProperty(ACTIVITIES + metaPath);\n\t\t\t\tactivities = activities?.slice ? activities.slice() : [];\n\t\t\t\tactivities.push(mactivity);\n\t\t\t\tinternalModel.setProperty(ACTIVITIES + metaPath, activities);\n\t\t\t\tif (message.userAction === Activity.LockEcho && this.checkPathForLock(internalModel, message.clientContent)) {\n\t\t\t\t\t// The current user has locked this path right after connection, before knowing it was already locked by someone else\n\t\t\t\t\t// --> remove the current lock\n\t\t\t\t\tthis.doSend(internalModel, Activity.Unlock, message.clientContent);\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase Activity.Unlock:\n\t\t\t\t// The user did a change but reverted it, therefore unblock the control\n\t\t\t\tactivities = internalModel.getProperty(ACTIVITIES + metaPath);\n\t\t\t\tactivityKey = getActivityKeyFromPath(message.clientContent);\n\t\t\t\tinternalModel.setProperty(ACTIVITIES + metaPath, activities?.filter((a) => a.key !== activityKey));\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t * Displays a message that the current draft was closed be another user, and navigates back to a proper view.\n\t * @param view The view that was used initially when connecting the websocket\n\t * @param path The path of the context to navigate to\n\t * @param messageText The message to display\n\t */\n\tdraftClosedByOtherUser(view: FEView, path: string, messageText: string): void {\n\t\tthis.disconnect(view);\n\t\tMessageBox.information(messageText, {\n\t\t\tonClose: async () => {\n\t\t\t\ttry {\n\t\t\t\t\tawait view.getBindingContext().getBinding().resetChanges();\n\t\t\t\t\tif (InstanceManager.hasOpenDialog()) {\n\t\t\t\t\t\t// Close all open dialogs before navigating\n\t\t\t\t\t\tInstanceManager.closeAllDialogs(() => {});\n\t\t\t\t\t}\n\t\t\t\t\tthis.navigate(path, view);\n\t\t\t\t\treturn;\n\t\t\t\t} catch (error) {\n\t\t\t\t\tLog.error(\"Pending Changes could not be reset - still navigating to active instance\");\n\t\t\t\t\tthis.navigate(path, view);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Updates data when a CHANGE message has been received.\n\t * @param view The view that was used initially when connecting the websocket\n\t * @param message The message received from the websocket\n\t */\n\tupdateOnChange(view: FEView, message: Message): void {\n\t\tconst updatedObjectsPaths = message.clientContent.split(\"|\");\n\n\t\tconst currentPage = this.getCurrentPage(view);\n\t\tconst currentContext = currentPage.getBindingContext();\n\t\tconst requestPromises = updatedObjectsPaths.map(async (path) => this.applyUpdatesForChange(view, path));\n\n\t\t// Simulate any change so the edit flow shows the draft indicator and sets the page to dirty\n\t\tcurrentPage.getController().editFlow.updateDocument(currentContext, Promise.all(requestPromises));\n\t}\n\n\t/**\n\t * Updates data corresponding to a path.\n\t * @param view The view that was used initially when connecting the websocket\n\t * @param propertyPathForUpdate Absolute path to the updated property\n\t * @returns A promise resolved when the data and its related side effects have been received\n\t */\n\tasync applyUpdatesForChange(view: FEView, propertyPathForUpdate: string): Promise<void> {\n\t\tconst metaModel = view.getModel().getMetaModel();\n\t\tconst metaContext = metaModel.getMetaContext(propertyPathForUpdate);\n\t\tconst dataModelObject = MetaModelConverter.getInvolvedDataModelObjects<Property>(metaContext);\n\t\tconst targetContextPath = propertyPathForUpdate.substring(0, propertyPathForUpdate.lastIndexOf(\"/\")); // Remove property name\n\t\tconst targetContext = this.findContextForUpdate(view, targetContextPath);\n\t\tconst parentCollectionPath = targetContextPath.substring(0, targetContextPath.lastIndexOf(\"(\"));\n\t\tconst parentContextPath = parentCollectionPath.substring(0, parentCollectionPath.lastIndexOf(\"/\"));\n\t\tconst parentContext = parentContextPath ? this.findContextForUpdate(view, parentContextPath) : undefined;\n\n\t\tif (!targetContext && !parentContext) {\n\t\t\treturn; // No context for update\n\t\t}\n\n\t\ttry {\n\t\t\tconst sideEffectsPromises: Promise<unknown>[] = [];\n\t\t\tconst sideEffectsService = CollaborationUtils.getAppComponent(view).getSideEffectsService();\n\n\t\t\tif (targetContext) {\n\t\t\t\t// We have a target context, so we can retrieve the updated property\n\t\t\t\tconst targetMetaPath = metaModel.getMetaPath(targetContext.getPath());\n\t\t\t\tconst relativeMetaPathForUpdate = metaModel.getMetaPath(propertyPathForUpdate).replace(targetMetaPath, \"\").slice(1);\n\t\t\t\tsideEffectsPromises.push(sideEffectsService.requestSideEffects([relativeMetaPathForUpdate], targetContext, SYNCGROUPID));\n\t\t\t}\n\n\t\t\t// Get the fieldGroupIds corresponding to pathForUpdate\n\t\t\tconst fieldGroupIds = sideEffectsService.computeFieldGroupIds(\n\t\t\t\tdataModelObject.targetEntityType.fullyQualifiedName,\n\t\t\t\tdataModelObject.targetObject!.fullyQualifiedName\n\t\t\t);\n\n\t\t\t// Execute the side effects for the fieldGroupIds\n\t\t\tif (fieldGroupIds.length) {\n\t\t\t\tconst pageController = view.getController();\n\t\t\t\tconst sideEffectsMapForFieldGroup = pageController._sideEffects.getSideEffectsMapForFieldGroups(\n\t\t\t\t\tfieldGroupIds,\n\t\t\t\t\ttargetContext || parentContext\n\t\t\t\t) as FieldSideEffectDictionary;\n\t\t\t\tObject.keys(sideEffectsMapForFieldGroup).forEach((sideEffectName) => {\n\t\t\t\t\tconst sideEffect = sideEffectsMapForFieldGroup[sideEffectName];\n\t\t\t\t\tsideEffectsPromises.push(\n\t\t\t\t\t\tpageController._sideEffects.requestSideEffects(\n\t\t\t\t\t\t\tsideEffect.sideEffects,\n\t\t\t\t\t\t\tsideEffect.context,\n\t\t\t\t\t\t\tSYNCGROUPID,\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tawait Promise.all(sideEffectsPromises);\n\t\t} catch (err) {\n\t\t\tLog.error(\"Failed to update data after change:\" + err);\n\t\t\tthrow err;\n\t\t}\n\t}\n\n\t/**\n\t * Updates data when a DELETE message has been received.\n\t * @param view The view that was used initially when connecting the websocket\n\t * @param message The message received from the websocket\n\t */\n\tupdateOnDelete(view: View, message: Message): void {\n\t\tconst currentPage = this.getCurrentPage(view);\n\t\tconst currentContext = currentPage.getBindingContext();\n\t\tconst currentPath = currentContext.getPath();\n\n\t\tconst deletedObjectPaths = message.clientContent.split(\"|\");\n\n\t\t// check if user currently displays a deleted object or one of its descendants\n\t\tconst deletedPathInUse = deletedObjectPaths.find((deletedPath) => currentPath.startsWith(deletedPath));\n\t\tif (deletedPathInUse) {\n\t\t\t// any other user deleted the object I'm currently looking at. Inform the user we will navigate to root now\n\t\t\tMessageBox.information(CollaborationUtils.getText(\"C_COLLABORATIONDRAFT_DELETE\", message.userDescription), {\n\t\t\t\tonClose: () => {\n\t\t\t\t\t// We retrieve the deleted context as a keep-alive, and disable its keepalive status,\n\t\t\t\t\t// so that it is properly destroyed when refreshing data\n\t\t\t\t\tconst targetContext = currentContext.getModel().getKeepAliveContext(deletedPathInUse);\n\t\t\t\t\ttargetContext.setKeepAlive(false);\n\t\t\t\t\tconst requestPromise = this.applyUpdatesForCollection(view, deletedObjectPaths[0]);\n\t\t\t\t\tcurrentPage.getController().editFlow.updateDocument(currentPage.getBindingContext(), requestPromise);\n\t\t\t\t\tcurrentPage.getController()._routing.navigateBackFromContext(targetContext);\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tconst requestPromise = this.applyUpdatesForCollection(view, deletedObjectPaths[0]);\n\t\t\tcurrentPage.getController().editFlow.updateDocument(currentPage.getBindingContext(), requestPromise);\n\t\t}\n\t}\n\n\t/**\n\t * Updates data when a CREATE message has been received.\n\t * @param view The view that was used initially when connecting the websocket\n\t * @param message The message received from the websocket\n\t */\n\tupdateOnCreate(view: View, message: Message): void {\n\t\tconst currentPage = this.getCurrentPage(view);\n\t\tconst createdObjectPaths = message.clientContent.split(\"|\");\n\n\t\tconst requestPromise = this.applyUpdatesForCollection(view, createdObjectPaths[0]);\n\t\t// Simulate a change so the edit flow shows the draft indicator and sets the page to dirty\n\t\tcurrentPage.getController().editFlow.updateDocument(currentPage.getBindingContext(), requestPromise);\n\t}\n\n\t/**\n\t * Updates data in a collection.\n\t * @param view The view that was used initially when connecting the websocket\n\t * @param pathInCollection A path to an entity in the collection\n\t */\n\tasync applyUpdatesForCollection(view: View, pathInCollection: string): Promise<void> {\n\t\tconst appComponent = CollaborationUtils.getAppComponent(view);\n\t\tconst parentPath = pathInCollection.substring(0, pathInCollection.lastIndexOf(\"/\"));\n\t\tconst parentContext = this.findContextForUpdate(view, parentPath);\n\n\t\tif (parentContext) {\n\t\t\ttry {\n\t\t\t\tconst sideEffectsPromises: Promise<unknown>[] = [];\n\n\t\t\t\tconst metaModel = parentContext.getModel().getMetaModel();\n\t\t\t\tconst metaPathForUpdate = metaModel.getMetaPath(pathInCollection);\n\t\t\t\tconst parentMetaPath = metaModel.getMetaPath(parentContext.getPath());\n\t\t\t\tconst relativePath = metaPathForUpdate.replace(`${parentMetaPath}/`, \"\");\n\n\t\t\t\t// Reload the collection\n\t\t\t\tconst sideEffectsService = appComponent.getSideEffectsService();\n\t\t\t\tsideEffectsPromises.push(sideEffectsService.requestSideEffects([relativePath], parentContext, SYNCGROUPID));\n\n\t\t\t\t// Request the side effects for the collection\n\t\t\t\tsideEffectsPromises.push(\n\t\t\t\t\tsideEffectsService.requestSideEffectsForNavigationProperty(relativePath, parentContext, SYNCGROUPID, true)\n\t\t\t\t);\n\n\t\t\t\tawait Promise.all(sideEffectsPromises);\n\t\t\t} catch (err) {\n\t\t\t\tLog.error(\"Failed to update data after collection update:\" + err);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Updates data when a ACTION message has been received.\n\t * @param view The view that was used initially when connecting the websocket\n\t * @param message The message received from the websocket\n\t */\n\tupdateOnAction(view: FEView, message: Message): void {\n\t\tconst currentPage = this.getCurrentPage(view);\n\t\tconst pathsForAction = message.clientContent.split(\"|\");\n\t\tconst actionName = message.clientTriggeredActionName || \"\";\n\t\tconst requestedProperties = message.clientRequestedProperties?.split(\"|\");\n\t\tconst refreshListBinding = message.clientRefreshListBinding === \"true\";\n\n\t\tlet requestPromises: Promise<void>[] = [];\n\n\t\tif (refreshListBinding) {\n\t\t\trequestPromises.push(this.applyUpdatesForCollection(view, pathsForAction[0]));\n\t\t} else {\n\t\t\trequestPromises = pathsForAction.map(async (path) => this.requestUpdateForAction(view, path, actionName, requestedProperties));\n\t\t}\n\n\t\t// Simulate any change so the edit flow shows the draft indicator and sets the page to dirty\n\t\tcurrentPage.getController().editFlow.updateDocument(currentPage.getBindingContext(), Promise.all(requestPromises));\n\t}\n\n\t/**\n\t * Updates side-effects data when an action has been triggered on a context.\n\t * @param view The view that was used initially when connecting the websocket\n\t * @param pathForAction Path of the context to apply the action to\n\t * @param actionName Name of the action\n\t * @param requestedProperties\n\t * @returns Promise resolved when the side-effects data has been loaded\n\t */\n\tasync requestUpdateForAction(view: FEView, pathForAction: string, actionName: string, requestedProperties?: string[]): Promise<void> {\n\t\tconst targetContext = this.findContextForUpdate(view, pathForAction);\n\t\tif (!targetContext) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst appComponent = CollaborationUtils.getAppComponent(view);\n\t\tconst sideEffectService = appComponent.getSideEffectsService();\n\t\tconst sideEffectsFromAction = sideEffectService.getODataActionSideEffects(actionName, targetContext);\n\t\tconst sideEffectPromises: Promise<unknown>[] = [];\n\t\tif (sideEffectsFromAction) {\n\t\t\tif (sideEffectsFromAction.pathExpressions?.length) {\n\t\t\t\tsideEffectPromises.push(\n\t\t\t\t\tsideEffectService.requestSideEffects(sideEffectsFromAction.pathExpressions, targetContext, SYNCGROUPID)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\tif (requestedProperties && requestedProperties.length > 0) {\n\t\t\t//clean-up of the properties to request list:\n\t\t\tconst metaModel = view.getModel().getMetaModel();\n\t\t\tconst metaPathForAction = this.calculateMetaPath(view, pathForAction);\n\t\t\tconst dataModelPath = MetaModelConverter.getInvolvedDataModelObjects(metaModel.getContext(metaPathForAction));\n\t\t\tconst propertiesToRequest = dataModelPath.targetEntityType.entityProperties\n\t\t\t\t.map((property: Property) => {\n\t\t\t\t\treturn property.name;\n\t\t\t\t})\n\t\t\t\t.filter((prop) => requestedProperties.includes(prop));\n\t\t\tif (propertiesToRequest.length > 0) {\n\t\t\t\tsideEffectPromises.push(sideEffectService.requestSideEffects(propertiesToRequest, targetContext, SYNCGROUPID));\n\t\t\t}\n\t\t}\n\n\t\tawait Promise.all(sideEffectPromises);\n\t}\n\n\t/**\n\t * Finds a context to apply an update message (CHANGE, CREATE, DELETE or ACTION).\n\t * @param view  The view that was used initially when connecting the websocket\n\t * @param path The path of the context to be found (shall point to an entity, not a property)\n\t * @returns A context if it could be found\n\t */\n\tfindContextForUpdate(view: View, path: string): Context | undefined {\n\t\tif (!path) {\n\t\t\treturn undefined;\n\t\t}\n\t\t// Find all potential paths\n\t\tconst targetPaths: string[] = [];\n\t\twhile (!path.endsWith(\")\")) {\n\t\t\ttargetPaths.unshift(path);\n\t\t\tpath = path.substring(0, path.lastIndexOf(\"/\"));\n\t\t}\n\t\ttargetPaths.unshift(path);\n\n\t\tconst parentCollectionPath = path.substring(0, path.lastIndexOf(\"(\")); // Remove the last key\n\n\t\tlet targetContext: Context | undefined;\n\t\tlet currentContext = this.getCurrentPage(view).getBindingContext() as Context | undefined;\n\t\twhile (currentContext && !targetContext) {\n\t\t\tif (targetPaths.includes(currentContext.getPath())) {\n\t\t\t\ttargetContext = currentContext;\n\t\t\t}\n\n\t\t\tcurrentContext = currentContext.getBinding()?.getContext() as Context | undefined;\n\t\t}\n\n\t\tif (targetContext) {\n\t\t\t// Found !\n\t\t\treturn targetContext;\n\t\t}\n\n\t\t// Try to find the target context in a listBinding\n\t\tconst model = this.getCurrentPage(view).getBindingContext().getModel();\n\t\tconst parentListBinding = model.getAllBindings().find((binding) => {\n\t\t\tconst bindingPath = binding.isRelative() ? binding.getResolvedPath() : binding.getPath();\n\t\t\treturn binding.isA(\"sap.ui.model.odata.v4.ODataListBinding\") && bindingPath === parentCollectionPath;\n\t\t}) as ODataListBinding | undefined;\n\t\t// We've found a list binding that could contain the target context --> look for it\n\t\ttargetContext = parentListBinding?.getAllCurrentContexts().find((context) => {\n\t\t\treturn targetPaths.includes(context.getPath());\n\t\t});\n\n\t\treturn targetContext;\n\t}\n\n\tnavigate(path: string, view: FEView): void {\n\t\t// TODO: routing.navigate doesn't consider semantic bookmarking\n\t\tconst currentPage = this.getCurrentPage(view);\n\t\tconst targetContext = view.getModel().bindContext(path).getBoundContext();\n\n\t\tif (currentPage.getController().editFlow.getCreationMode()) {\n\t\t\t// If the object was a newly created one, we navigate back\n\t\t\tcurrentPage.getController()._routing.navigateBackFromContext(targetContext);\n\t\t} else {\n\t\t\t// Otherwise we navigate to the context, but we force its recreation so that all $selects are properly computed by internalRouting\n\t\t\tcurrentPage.getController()._routing.navigateToContext(targetContext, { recreateContext: true });\n\t\t}\n\t}\n\n\tgetCurrentPage(view: View): FEView {\n\t\tconst appComponent = CollaborationUtils.getAppComponent(view);\n\t\treturn CommonUtils.getCurrentPageView(appComponent);\n\t}\n\n\t/**\n\t * Calculates the metapath from one or more data path(s).\n\t * @param view The current view\n\t * @param path One ore more data path(s), in case of multiple paths separated by '|'\n\t * @returns The calculated metaPath\n\t */\n\tcalculateMetaPath(view: FEView, path?: string): string {\n\t\tlet metaPath = \"\";\n\t\tif (path) {\n\t\t\t// in case more than one path is sent all of them have to use the same metapath therefore we just consider the first one\n\t\t\tconst dataPath = path.split(\"|\")[0];\n\t\t\tmetaPath = view.getModel().getMetaModel().getMetaPath(dataPath);\n\t\t}\n\t\treturn metaPath;\n\t}\n\n\tinit(): void {\n\t\tthis.initPromise = Promise.resolve(this);\n\t}\n}\n\nexport default class CollaborativeDraftServiceFactory extends ServiceFactory<CollaborativeDraftServiceFactory> {\n\tpublic async createInstance(oServiceContext: ServiceContext<CollaborativeDraftServiceFactory>): Promise<CollaborativeDraftService> {\n\t\tconst collaborativeDraftService = new CollaborativeDraftService(oServiceContext);\n\t\treturn collaborativeDraftService.initPromise;\n\t}\n}\n"],"mappings":"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","ignoreList":[],"file":"collaborativeDraftServiceFactory-dbg.js"}