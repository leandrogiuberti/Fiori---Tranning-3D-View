{"version":3,"names":["LayoutType","fLibrary","FclController","_dec","defineUI5Class","_dec2","usingExtension","ViewState","override","applyInitialStateOnly","adaptBindingRefreshControls","aControls","getView","getController","_getAllViews","forEach","oChildView","pChildView","Promise","resolve","push","adaptStateControls","aStateControls","onRestore","fclController","appContentContainer","getAppContentContainer","internalModel","getModel","pages","getProperty","componentId","setProperty","onContainerReady","onSuspend","fclControl","getFclControl","beginColumnPages","getBeginColumnPages","midColumnPages","getMidColumnPages","endColumnPages","getEndColumnPages","concat","getViewsFromPages","view","controller","viewState","_class","_class2","_BaseController","_this","_len","arguments","length","args","Array","_key","call","_initializerDefineProperty","_descriptor","_oTargetsAggregation","_oTargetsFromRoutePattern","messagePages","undefined","_inheritsLoose","_proto","prototype","onInit","_internalInit","setColumnDistributionModel","manageDataReceived","event","getParameter","path","targetedView","_getAllVisibleViews","find","getBindingContext","getPath","isKeepAlive","_routing","onDataReceived","attachRouteMatchers","getRouter","attachBeforeRouteMatched","_updateViewForNavigatedRowsComputation","onBeforeRouteMatched","attachRouteMatched","onRouteMatched","attachStateChange","_saveLayout","_oRouterProxy","sCurrentRouteName","sCurrentArguments","oAppComponent","getAppComponent","oDataModel","attachEvent","bind","getRouterProxy","_oFCLConfig","maxColumnsCount","oRoutingConfig","getManifest","routing","config","flexibleColumnLayout","oFCLManifestConfig","defaultTwoColumnLayoutType","defaultThreeColumnLayoutType","limitFCLToTwoColumns","controlAggregation","defaultControlAggregation","_initializeTargetAggregation","_initializeRoutesInformation","onStateChanged","attachAfterEndColumnNavigate","getFclConfig","oEvent","sPreviousLayout","getParameters","layout","allVisibleViewsBeforeRouteMatched","rightMostViewBeforeRouteMatched","attachEventOnce","views","rightMostViewCurrent","getViewFromContainer","viewLevelBefore","getViewData","viewLevel","viewLevelAfter","oAdditionalViewForNavRowsComputation","getViewForNavigatedRowsComputation","onExit","detachRouteMatched","detachBeforeRouteMatched","detachStateChange","detachAfterEndColumnNavigate","BaseController","isFclEnabled","displayErrorPage","errorMessage","parameters","fclLevel","reject","legacyParameters","FCLLevel","messagePage","Page","showHeader","addBeginColumnPage","addMidColumnPage","addEndColumnPage","fromPage","header","FlexBox","alignItems","justifyContent","items","Button","type","icon","tooltip","press","handleShellBack","to","getId","window","history","back","addStyleClass","illustratedMessage","IllustratedMessage","title","description","illustrationType","errorType","removeAllContent","addContent","afterNavigateEventName","getCurrentBeginColumnPage","getCurrentMidColumnPage","getCurrentEndColumnPage","CommonUtils","getShellServices","setBackNavigation","fromView","_event","isA","pageReady","forcePageReady","e","Log","info","oManifest","oTargets","targets","Object","keys","sTargetName","oTarget","aggregation","pattern","contextPattern","aRoutes","routes","route","target","getCurrentArgument","getCurrentRouteName","getTargetAggregation","sRouteName","_scrollTablesToLastNavigatedItems","aViews","oAdditionalView","includes","index","oView","oPreviousView","bindingContext","previousViewController","_scrollTablesToRow","bIsNavigationArrow","_forceModelContextChangeOnBreadCrumbs","navTo","getRightmostView","computeTitleHierarchy","oFcl","getSource","oPages","oPage","oBreadCrumbs","byId","fireModelContextChange","_updateShareButtonVisibility","viewColumn","sLayout","bShowShareIcon","_updateEditButtonVisiblity","hiddenDraft","getEnvironmentCapabilities","getCapabilities","HiddenDraft","enabled","bEditButtonVisible","_updateSaveAndCancelButtonVisiblity","bSaveAndCancelButtonVisible","updateUIStateForView","oUIState","getHelper","getCurrentUIState","oFclColName","getLayout","setModel","_createHelperModel","actionButtonsInfo","midColumn","endColumn","fullScreen","exitFullScreen","closeColumn","beginColumn","oActionButtonInfos","assign","switchVisible","switchIcon","isFullScreen","closeVisible","oQueryParams","oNextUIState","getNextUIState","aTargets","_correctLayoutForTargets","getStoredLayout","setLayout","FlexibleColumnLayoutSemanticHelper","getInstanceFor","calculateLayout","iNextFCLLevel","sHash","sProposedLayout","keepCurrentLayout","oRoute","getRouteByHash","getPattern","allAllowedLayouts","isArray","aLayouts","toString","defaultLayout","_getDefaultLayout","sTargetAggregation","getRouteTargetName","OneColumn","MidColumnFullScreen","EndColumnFullScreen","numberOfTargetsFromRoute","getInstancedViews","componentContainers","getVisibleViews","forLayout","visibleViews","addView","page","ThreeColumnsEndExpanded","ThreeColumnsMidExpanded","TwoColumnsBeginExpanded","TwoColumnsMidExpanded","ThreeColumnsMidExpandedEndHidden","ThreeColumnsBeginExpandedEndHidden","error","allViews","layoutWhenExitFullScreen","startsWith","aRestorePromises","reduce","aPromises","oTargetView","KeepAliveHelper","restoreView","all","getRightmostContext","pop","isContextUsedInPages","oContext","aAllVisibleViews","_setShellMenuTitle","sTitle","sAppTitle","browerTitle","setTitle","getFCLPersonalizationData","shellServices","fclState","getApplicationPersonalizationData","defaultLayouts","columnsDistribution","desktop","tablet","setFCLPersonalizationData","setApplicationPersonalizationData","fclStateCache","model","onColumnsDistributionChange","media","columnsSizes","nbColumnsDisplayed","getNumberOfColumnsFromLayout","exec","proposedLayout","_applyDecoratedDescriptor","configurable","enumerable","writable","initializer"],"sourceRoot":".","sources":["Fcl.controller.ts"],"sourcesContent":["import Log from \"sap/base/Log\";\nimport type FlexibleColumnLayout from \"sap/f/FlexibleColumnLayout\";\nimport type { FlexibleColumnLayout$AfterEndColumnNavigateEvent, FlexibleColumnLayout$StateChangeEvent } from \"sap/f/FlexibleColumnLayout\";\nimport type { ColumnsNavigationActions, NavigationActionsTargets } from \"sap/f/FlexibleColumnLayoutSemanticHelper\";\nimport FlexibleColumnLayoutSemanticHelper from \"sap/f/FlexibleColumnLayoutSemanticHelper\";\nimport fLibrary from \"sap/f/library\";\nimport { defineUI5Class, usingExtension } from \"sap/fe/base/ClassSupport\";\nimport type AppComponent from \"sap/fe/core/AppComponent\";\nimport type { FEView } from \"sap/fe/core/BaseController\";\nimport type PageController from \"sap/fe/core/PageController\";\nimport type { NavigationToErrorPageResult } from \"sap/fe/core/controllerextensions/MessageHandler\";\nimport ViewState from \"sap/fe/core/controllerextensions/ViewState\";\nimport type RouterProxy from \"sap/fe/core/controllerextensions/routing/RouterProxy\";\nimport KeepAliveHelper from \"sap/fe/core/helpers/KeepAliveHelper\";\nimport { getRouteTargetName } from \"sap/fe/core/helpers/ManifestHelper\";\nimport Button from \"sap/m/Button\";\nimport FlexBox from \"sap/m/FlexBox\";\nimport IllustratedMessage from \"sap/m/IllustratedMessage\";\nimport Page from \"sap/m/Page\";\nimport type Event from \"sap/ui/base/Event\";\n\nimport type { ManagedObject$ModelContextChangeEventParameters } from \"sap/ui/base/ManagedObject\";\nimport type Control from \"sap/ui/core/Control\";\nimport type View from \"sap/ui/core/mvc/View\";\nimport type Route from \"sap/ui/core/routing/Route\";\nimport type { Router$BeforeRouteMatchedEvent, Router$RouteMatchedEvent } from \"sap/ui/core/routing/Router\";\nimport type JSONModel from \"sap/ui/model/json/JSONModel\";\nimport type Context from \"sap/ui/model/odata/v4/Context\";\nimport type { TitleAdditionalInfo } from \"sap/ushell/ui5service/ShellUIService\";\nimport CommonUtils from \"../CommonUtils\";\nimport type { HiddenDraft } from \"../converters/ManifestSettings\";\nimport BaseController from \"./RootViewBaseController\";\n\nconst LayoutType = fLibrary.LayoutType;\ntype LayoutTypeType = keyof typeof LayoutType;\n\ntype DefaultLayouts = {\n\t1?: LayoutTypeType;\n\t2?: LayoutTypeType;\n\t3?: LayoutTypeType;\n};\n\ntype FCLColumnDistributionState = {\n\ttablet: { [key in LayoutTypeType]?: string };\n\tdesktop: { [key in LayoutTypeType]?: string };\n};\n\ntype FCLConfig = {\n\tmaxColumnsCount: number;\n\tdefaultTwoColumnLayoutType?: LayoutTypeType;\n\tdefaultThreeColumnLayoutType?: LayoutTypeType;\n\tdefaultControlAggregation?: string;\n};\n\nexport type FCLState = {\n\tcolumnsDistribution: FCLColumnDistributionState;\n\tdefaultLayouts: DefaultLayouts;\n};\n\n/**\n * Base controller class for your own root view with an sap.f.FlexibleColumnLayout control.\n *\n * By using or extending this controller, you can use your own root view with the sap.fe.core.AppComponent and\n * you can make use of SAP Fiori elements pages and SAP Fiori elements building blocks.\n * @hideconstructor\n * @public\n * @since 1.110.0\n */\n@defineUI5Class(\"sap.fe.core.rootView.Fcl\")\nclass FclController extends BaseController {\n\t@usingExtension(\n\t\tViewState.override({\n\t\t\tapplyInitialStateOnly: function () {\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tadaptBindingRefreshControls: function (this: ViewState, aControls: Promise<View>[]): void {\n\t\t\t\t(this.getView().getController() as FclController)._getAllViews().forEach(function (oChildView: View) {\n\t\t\t\t\tconst pChildView = Promise.resolve(oChildView);\n\t\t\t\t\taControls.push(pChildView);\n\t\t\t\t});\n\t\t\t},\n\t\t\tadaptStateControls: function (this: ViewState, aStateControls: Promise<View>[]): void {\n\t\t\t\t(this.getView().getController() as FclController)._getAllViews().forEach(function (oChildView: View) {\n\t\t\t\t\tconst pChildView = Promise.resolve(oChildView);\n\t\t\t\t\taStateControls.push(pChildView);\n\t\t\t\t});\n\t\t\t},\n\t\t\tonRestore: function (this: ViewState) {\n\t\t\t\tconst fclController = this.getView().getController() as FclController;\n\t\t\t\tconst appContentContainer = fclController.getAppContentContainer();\n\t\t\t\tconst internalModel = appContentContainer.getModel(\"internal\") as JSONModel;\n\t\t\t\tconst pages = internalModel.getProperty(\"/pages\");\n\n\t\t\t\tfor (const componentId in pages) {\n\t\t\t\t\tinternalModel.setProperty(`/pages/${componentId}/restoreStatus`, \"pending\");\n\t\t\t\t}\n\t\t\t\tfclController.onContainerReady();\n\t\t\t},\n\t\t\tonSuspend: function (this: ViewState) {\n\t\t\t\tconst fclController = this.getView().getController() as FclController;\n\t\t\t\tconst fclControl = fclController.getFclControl();\n\t\t\t\tconst beginColumnPages = fclControl.getBeginColumnPages();\n\t\t\t\tconst midColumnPages = fclControl.getMidColumnPages();\n\t\t\t\tconst endColumnPages = fclControl.getEndColumnPages();\n\t\t\t\tconst pages = ([] as Control[]).concat(beginColumnPages, midColumnPages, endColumnPages);\n\n\t\t\t\tfclController.getViewsFromPages(pages).forEach((view) => {\n\t\t\t\t\tconst controller = view.getController() as PageController | undefined;\n\t\t\t\t\tif (controller?.viewState?.onSuspend) {\n\t\t\t\t\t\tcontroller.viewState.onSuspend();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t})\n\t)\n\tviewState!: ViewState;\n\n\tprotected _oRouterProxy!: RouterProxy;\n\n\tprivate sCurrentRouteName?: string;\n\n\tprivate sCurrentArguments?: { noPreservationCache?: boolean; bIsStickyMode?: boolean; [\"?query\"]?: { layout?: string } };\n\n\tprivate sPreviousLayout?: keyof typeof LayoutType;\n\n\tprotected _oFCLConfig!: FCLConfig;\n\n\tprivate oAdditionalViewForNavRowsComputation?: View;\n\n\tprivate _oTargetsAggregation: Record<\n\t\tstring,\n\t\t{\n\t\t\taggregation: string;\n\t\t\tpattern?: string | null;\n\t\t}\n\t> = {};\n\n\tprivate _oTargetsFromRoutePattern: Record<string, string[] | undefined> = {};\n\n\tprivate messagePages: (Page | undefined)[] = [undefined, undefined, undefined];\n\n\tprivate fclStateCache!: Promise<FCLState>;\n\n\tonInit(): void {\n\t\tsuper.onInit();\n\t\tthis._internalInit();\n\t\tthis.setColumnDistributionModel();\n\t}\n\n\tmanageDataReceived(event: Event<{ error: { status: number }; path: string }>): void {\n\t\tif (event.getParameter(\"error\")) {\n\t\t\tconst path = event.getParameter(\"path\");\n\t\t\tconst targetedView = this._getAllVisibleViews().find((view) => view.getBindingContext()?.getPath() === path);\n\t\t\t// We need to manage error when the request is related to a form  into an ObjectPage\n\t\t\tif (path && (targetedView?.getBindingContext() as Context)?.isKeepAlive()) {\n\t\t\t\t(targetedView!.getController() as PageController)._routing.onDataReceived(event);\n\t\t\t}\n\t\t}\n\t}\n\n\tattachRouteMatchers(): void {\n\t\tthis.getRouter().attachBeforeRouteMatched(this._updateViewForNavigatedRowsComputation, this);\n\t\tsuper.attachRouteMatchers();\n\t\tthis._internalInit();\n\n\t\tthis.getRouter().attachBeforeRouteMatched(this.onBeforeRouteMatched, this);\n\t\tthis.getRouter().attachRouteMatched(this.onRouteMatched, this);\n\t\tthis.getFclControl().attachStateChange(this._saveLayout, this);\n\t}\n\n\t_internalInit(): void {\n\t\tif (this._oRouterProxy) {\n\t\t\treturn; // Already initialized\n\t\t}\n\n\t\tthis.sCurrentRouteName = \"\";\n\t\tthis.sCurrentArguments = {};\n\n\t\tconst oAppComponent = this.getAppComponent();\n\n\t\tconst oDataModel = this.getAppComponent().getModel();\n\t\toDataModel?.attachEvent(\"dataReceived\", this.manageDataReceived.bind(this));\n\n\t\tthis._oRouterProxy = oAppComponent.getRouterProxy();\n\n\t\t// Get FCL configuration in the manifest\n\t\tthis._oFCLConfig = { maxColumnsCount: 3 };\n\t\tconst oRoutingConfig = oAppComponent.getManifest()[\"sap.ui5\"].routing;\n\n\t\tif (oRoutingConfig?.config?.flexibleColumnLayout) {\n\t\t\tconst oFCLManifestConfig = oRoutingConfig.config.flexibleColumnLayout;\n\n\t\t\t// Default layout for 2 columns\n\t\t\tif (oFCLManifestConfig.defaultTwoColumnLayoutType) {\n\t\t\t\tthis._oFCLConfig.defaultTwoColumnLayoutType = oFCLManifestConfig.defaultTwoColumnLayoutType;\n\t\t\t}\n\n\t\t\t// Default layout for 3 columns\n\t\t\tif (oFCLManifestConfig.defaultThreeColumnLayoutType) {\n\t\t\t\tthis._oFCLConfig.defaultThreeColumnLayoutType = oFCLManifestConfig.defaultThreeColumnLayoutType;\n\t\t\t}\n\n\t\t\t// Limit FCL to 2 columns ?\n\t\t\tif (oFCLManifestConfig.limitFCLToTwoColumns === true) {\n\t\t\t\tthis._oFCLConfig.maxColumnsCount = 2;\n\t\t\t}\n\t\t}\n\t\tif (oRoutingConfig?.config?.controlAggregation) {\n\t\t\tthis._oFCLConfig.defaultControlAggregation = oRoutingConfig.config.controlAggregation;\n\t\t}\n\n\t\tthis._initializeTargetAggregation(oAppComponent);\n\t\tthis._initializeRoutesInformation(oAppComponent);\n\n\t\tthis.getFclControl().attachStateChange(this.onStateChanged, this);\n\t\tthis.getFclControl().attachAfterEndColumnNavigate(this.onStateChanged, this);\n\t}\n\n\tgetFclControl(): FlexibleColumnLayout {\n\t\treturn this.getAppContentContainer() as FlexibleColumnLayout;\n\t}\n\n\tgetFclConfig(): FCLConfig {\n\t\treturn this._oFCLConfig;\n\t}\n\n\t_saveLayout(oEvent: FlexibleColumnLayout$StateChangeEvent): void {\n\t\tthis.sPreviousLayout = oEvent.getParameters().layout;\n\t}\n\n\t/**\n\t * Get the additional view (on top of the visible views), to be able to compute the latest table navigated rows of\n\t * the most right visible view after a nav back or column fullscreen.\n\t *\n\t */\n\n\t_updateViewForNavigatedRowsComputation(): void {\n\t\tconst allVisibleViewsBeforeRouteMatched = this._getAllVisibleViews(this.sPreviousLayout);\n\t\tconst rightMostViewBeforeRouteMatched = allVisibleViewsBeforeRouteMatched.length\n\t\t\t? allVisibleViewsBeforeRouteMatched[allVisibleViewsBeforeRouteMatched.length - 1]\n\t\t\t: undefined;\n\n\t\tthis.getRouter().attachEventOnce(\"routeMatched\", (event: Event<{ views: Control[] }>) => {\n\t\t\tconst views = event.getParameter(\"views\");\n\t\t\tconst rightMostViewCurrent = this.getViewFromContainer(views[views.length - 1]);\n\n\t\t\tif (rightMostViewBeforeRouteMatched && rightMostViewCurrent) {\n\t\t\t\tconst viewLevelBefore = (rightMostViewBeforeRouteMatched.getViewData() as { viewLevel?: number })?.viewLevel;\n\t\t\t\tconst viewLevelAfter = (rightMostViewCurrent.getViewData() as { viewLevel?: number })?.viewLevel;\n\n\t\t\t\t// Navigation forward from L2 to view level L3 (FullScreenLayout):\n\t\t\t\tif (viewLevelAfter === this._oFCLConfig.maxColumnsCount) {\n\t\t\t\t\tthis.oAdditionalViewForNavRowsComputation = rightMostViewCurrent;\n\t\t\t\t}\n\t\t\t\t// Navigations backward from L3 down to L2, L1, L0 (ThreeColumn layout):\n\t\t\t\tif (\n\t\t\t\t\tviewLevelBefore !== undefined &&\n\t\t\t\t\tviewLevelAfter !== undefined &&\n\t\t\t\t\tviewLevelBefore < this._oFCLConfig.maxColumnsCount &&\n\t\t\t\t\tviewLevelBefore > viewLevelAfter &&\n\t\t\t\t\trightMostViewCurrent !== rightMostViewBeforeRouteMatched\n\t\t\t\t) {\n\t\t\t\t\tthis.oAdditionalViewForNavRowsComputation = rightMostViewBeforeRouteMatched;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tgetViewForNavigatedRowsComputation(): View | undefined {\n\t\treturn this.oAdditionalViewForNavRowsComputation;\n\t}\n\n\tonExit(): void {\n\t\tthis.getRouter().detachRouteMatched(this.onRouteMatched, this);\n\t\tthis.getRouter().detachBeforeRouteMatched(this.onBeforeRouteMatched, this);\n\t\tthis.getFclControl().detachStateChange(this.onStateChanged, this);\n\t\tthis.getFclControl().detachAfterEndColumnNavigate(this.onStateChanged, this);\n\n\t\tBaseController.prototype.onExit.bind(this)();\n\t}\n\n\t/**\n\t * Check if the FCL component is enabled.\n\t * @returns `true` since we are in FCL scenario\n\t * @final\n\t */\n\tisFclEnabled(): this is FclController {\n\t\treturn true;\n\t}\n\n\t/**\n\t * Method that creates a new Page to display the IllustratedMessage containing the current error.\n\t * @param errorMessage\n\t * @param parameters\n\t * @param fclLevel\n\t * @returns A promise that creates a Page to display the error\n\t */\n\tasync displayErrorPage(errorMessage: string, parameters: NavigationToErrorPageResult, fclLevel = 0): Promise<boolean> {\n\t\treturn new Promise<boolean>(async (resolve, reject) => {\n\t\t\ttry {\n\t\t\t\tconst fclControl = this.getFclControl();\n\n\t\t\t\t// Manage the old API where the FCL level was passed in the parameters\n\t\t\t\tconst legacyParameters = parameters as { FCLLevel?: number };\n\t\t\t\tif (legacyParameters.FCLLevel !== undefined && fclLevel === 0) {\n\t\t\t\t\tfclLevel = legacyParameters.FCLLevel;\n\t\t\t\t}\n\n\t\t\t\tif (this._oFCLConfig && fclLevel >= this._oFCLConfig.maxColumnsCount) {\n\t\t\t\t\tfclLevel = this._oFCLConfig.maxColumnsCount - 1;\n\t\t\t\t}\n\t\t\t\tif (fclLevel < 0 || fclLevel > 2) {\n\t\t\t\t\tfclLevel = 0;\n\t\t\t\t}\n\n\t\t\t\tlet messagePage = this.messagePages[fclLevel];\n\n\t\t\t\tif (!messagePage) {\n\t\t\t\t\tmessagePage = new Page({\n\t\t\t\t\t\tshowHeader: false\n\t\t\t\t\t});\n\n\t\t\t\t\tthis.messagePages[fclLevel] = messagePage;\n\n\t\t\t\t\tswitch (fclLevel) {\n\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\t\tfclControl.addBeginColumnPage(messagePage);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\tfclControl.addMidColumnPage(messagePage);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tfclControl.addEndColumnPage(messagePage);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet fromPage: Control;\n\t\t\t\tconst header = new FlexBox({\n\t\t\t\t\talignItems: \"Start\",\n\t\t\t\t\tjustifyContent: \"End\",\n\t\t\t\t\titems: [\n\t\t\t\t\t\tnew Button({\n\t\t\t\t\t\t\ttype: \"Transparent\",\n\t\t\t\t\t\t\ticon: \"sap-icon://decline\",\n\t\t\t\t\t\t\ttooltip: \"{sap.fe.i18n>C_COMMON_SAPFE_CLOSE}\",\n\t\t\t\t\t\t\tpress: (): void => {\n\t\t\t\t\t\t\t\tif (parameters.handleShellBack === true) {\n\t\t\t\t\t\t\t\t\tfclControl.to(fromPage.getId(), {}, {});\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\twindow.history.back();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}).addStyleClass(\"sapUiLargeMarginEnd\")\n\t\t\t\t\t]\n\t\t\t\t});\n\t\t\t\tconst illustratedMessage = new IllustratedMessage({\n\t\t\t\t\ttitle: errorMessage,\n\t\t\t\t\tdescription: parameters.description ?? \"\",\n\t\t\t\t\tillustrationType: parameters.errorType ? `sapIllus-${parameters.errorType}` : \"sapIllus-UnableToLoad\"\n\t\t\t\t});\n\t\t\t\tmessagePage.removeAllContent();\n\t\t\t\tmessagePage.addContent(header);\n\t\t\t\tmessagePage.addContent(illustratedMessage);\n\n\t\t\t\tlet afterNavigateEventName: string;\n\t\t\t\tswitch (fclLevel) {\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\tfromPage = fclControl.getCurrentBeginColumnPage();\n\t\t\t\t\t\tafterNavigateEventName = \"afterBeginColumnNavigate\";\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tfromPage = fclControl.getCurrentMidColumnPage();\n\t\t\t\t\t\tafterNavigateEventName = \"afterMidColumnNavigate\";\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tfromPage = fclControl.getCurrentEndColumnPage();\n\t\t\t\t\t\tafterNavigateEventName = \"afterEndColumnNavigate\";\n\t\t\t\t}\n\n\t\t\t\tif (parameters.handleShellBack === true) {\n\t\t\t\t\tconst oAppComponent = CommonUtils.getAppComponent(fromPage);\n\t\t\t\t\tawait oAppComponent.getShellServices().setBackNavigation(async function () {\n\t\t\t\t\t\tfclControl.to(fromPage.getId(), {}, {});\n\t\t\t\t\t\tawait oAppComponent.getShellServices().setBackNavigation();\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tconst fromView = this.getViewFromContainer(fromPage);\n\t\t\t\tfclControl.attachEventOnce(afterNavigateEventName, (_event: Event<{ from: Control }>) => {\n\t\t\t\t\tif (fromView && fromView.isA<View>(\"sap.ui.core.mvc.View\")) {\n\t\t\t\t\t\t(fromView.getController() as PageController).pageReady?.forcePageReady();\n\t\t\t\t\t}\n\t\t\t\t\tresolve(true);\n\t\t\t\t});\n\n\t\t\t\tfclControl.to(messagePage.getId(), {}, {});\n\t\t\t} catch (e) {\n\t\t\t\treject(false);\n\t\t\t\tLog.info(`${e}`);\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Initialize the object _oTargetsAggregation that defines for each route the relevant aggregation and pattern.\n\t * @param oAppComponent Reference to the AppComponent\n\t */\n\t_initializeTargetAggregation(oAppComponent: AppComponent): void {\n\t\tconst oManifest = oAppComponent.getManifest(),\n\t\t\toTargets = oManifest[\"sap.ui5\"].routing ? oManifest[\"sap.ui5\"].routing.targets : null;\n\n\t\tthis._oTargetsAggregation = {};\n\n\t\tif (oTargets) {\n\t\t\tObject.keys(oTargets).forEach((sTargetName: string) => {\n\t\t\t\tconst oTarget = oTargets[sTargetName];\n\t\t\t\tif (oTarget.controlAggregation) {\n\t\t\t\t\tthis._oTargetsAggregation[sTargetName] = {\n\t\t\t\t\t\taggregation: oTarget.controlAggregation,\n\t\t\t\t\t\tpattern: oTarget.contextPattern\n\t\t\t\t\t};\n\t\t\t\t} else {\n\t\t\t\t\tthis._oTargetsAggregation[sTargetName] = {\n\t\t\t\t\t\taggregation: \"page\",\n\t\t\t\t\t\tpattern: null\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Initializes the mapping between a route (identifed as its pattern) and the corresponding targets\n\t * @param oAppComponent ref to the AppComponent\n\t */\n\n\t_initializeRoutesInformation(oAppComponent: AppComponent): void {\n\t\tconst oManifest = oAppComponent.getManifest(),\n\t\t\taRoutes = oManifest[\"sap.ui5\"].routing ? oManifest[\"sap.ui5\"].routing.routes : null;\n\n\t\tthis._oTargetsFromRoutePattern = {};\n\n\t\tif (aRoutes) {\n\t\t\taRoutes.forEach((route) => {\n\t\t\t\tif (route.pattern) {\n\t\t\t\t\tthis._oTargetsFromRoutePattern[route.pattern] = route.target as string[];\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tgetCurrentArgument(): unknown {\n\t\treturn this.sCurrentArguments;\n\t}\n\n\tgetCurrentRouteName(): string | undefined {\n\t\treturn this.sCurrentRouteName;\n\t}\n\n\t/**\n\t * Getter for oTargetsAggregation array.\n\t * @returns The _oTargetsAggregation array\n\t */\n\tgetTargetAggregation(): Record<\n\t\tstring,\n\t\t{\n\t\t\taggregation: string;\n\t\t\tpattern?: string | null;\n\t\t}\n\t> {\n\t\treturn this._oTargetsAggregation;\n\t}\n\n\t/**\n\t * Function triggered by the router RouteMatched event.\n\t * @param oEvent\n\t */\n\tonRouteMatched(oEvent: Router$RouteMatchedEvent): void {\n\t\tconst sRouteName = oEvent.getParameter(\"name\");\n\n\t\t// Save the current/previous routes and arguments\n\t\tthis.sCurrentRouteName = sRouteName;\n\t\tthis.sCurrentArguments = oEvent.getParameter(\"arguments\");\n\t}\n\n\t/**\n\t * This function is triggering the table scroll to the navigated row after each layout change.\n\t *\n\t */\n\n\t_scrollTablesToLastNavigatedItems(): void {\n\t\tconst aViews = this._getAllVisibleViews();\n\t\t//The scrolls are triggered only if the layout is with several columns or when switching the mostRight column in full screen\n\t\tif (\n\t\t\taViews.length > 1 ||\n\t\t\t(aViews.length && (aViews[0].getViewData() as { viewLevel: number }).viewLevel < this._oFCLConfig.maxColumnsCount)\n\t\t) {\n\t\t\tconst oAdditionalView = this.getViewForNavigatedRowsComputation();\n\t\t\tif (oAdditionalView && !aViews.includes(oAdditionalView)) {\n\t\t\t\taViews.push(oAdditionalView);\n\t\t\t}\n\t\t\tfor (let index = aViews.length - 1; index > 0; index--) {\n\t\t\t\tconst oView = aViews[index],\n\t\t\t\t\toPreviousView = aViews[index - 1];\n\t\t\t\tconst bindingContext = oView.getBindingContext();\n\t\t\t\tconst previousViewController = oPreviousView.getController() as { _scrollTablesToRow?: Function };\n\t\t\t\tif (bindingContext && previousViewController._scrollTablesToRow) {\n\t\t\t\t\tpreviousViewController._scrollTablesToRow(bindingContext.getPath());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Function triggered by the FCL StateChanged event.\n\t * @param oEvent\n\t */\n\tonStateChanged(oEvent: FlexibleColumnLayout$StateChangeEvent | FlexibleColumnLayout$AfterEndColumnNavigateEvent): void {\n\t\tconst bIsNavigationArrow = (oEvent as FlexibleColumnLayout$StateChangeEvent).getParameter(\"isNavigationArrow\");\n\t\tif (this.sCurrentArguments !== undefined) {\n\t\t\tif (!this.sCurrentArguments[\"?query\"]) {\n\t\t\t\tthis.sCurrentArguments[\"?query\"] = {};\n\t\t\t}\n\t\t\tthis.sCurrentArguments[\"?query\"].layout = (oEvent as FlexibleColumnLayout$StateChangeEvent).getParameter(\"layout\");\n\t\t}\n\t\tthis._forceModelContextChangeOnBreadCrumbs(oEvent);\n\n\t\t// Replace the URL with the new layout if a navigation arrow was used\n\t\tif (bIsNavigationArrow && this.sCurrentRouteName) {\n\t\t\tthis._oRouterProxy.navTo(this.sCurrentRouteName, this.sCurrentArguments);\n\t\t}\n\n\t\tconst oView = this.getRightmostView();\n\t\tif (oView) {\n\t\t\tthis.computeTitleHierarchy(oView);\n\t\t}\n\t}\n\n\t/**\n\t * Function to fire ModelContextChange event on all breadcrumbs ( on each ObjectPages).\n\t * @param oEvent\n\t */\n\t_forceModelContextChangeOnBreadCrumbs(oEvent: Event<ManagedObject$ModelContextChangeEventParameters, FlexibleColumnLayout>): void {\n\t\t//force modelcontextchange on ObjectPages to refresh the breadcrumbs link hrefs\n\t\tconst oFcl = oEvent.getSource();\n\t\tlet oPages: Control[] = [];\n\t\toPages = oPages.concat(oFcl.getBeginColumnPages()).concat(oFcl.getMidColumnPages()).concat(oFcl.getEndColumnPages());\n\t\toPages.forEach((oPage) => {\n\t\t\tconst oView = this.getViewFromContainer(oPage);\n\t\t\tconst oBreadCrumbs = oView?.byId && oView.byId(\"breadcrumbs\");\n\t\t\tif (oBreadCrumbs) {\n\t\t\t\toBreadCrumbs.fireModelContextChange();\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Function triggered to update the Share button Visibility.\n\t * @param viewColumn Name of the current column (\"beginColumn\", \"midColumn\", \"endColumn\")\n\t * @param sLayout The current layout used by the FCL\n\t * @returns The share button visibility\n\t */\n\t_updateShareButtonVisibility(viewColumn: string, sLayout: string): boolean {\n\t\tlet bShowShareIcon;\n\t\tswitch (sLayout) {\n\t\t\tcase \"OneColumn\":\n\t\t\t\tbShowShareIcon = viewColumn === \"beginColumn\";\n\t\t\t\tbreak;\n\t\t\tcase \"MidColumnFullScreen\":\n\t\t\tcase \"ThreeColumnsBeginExpandedEndHidden\":\n\t\t\tcase \"ThreeColumnsMidExpandedEndHidden\":\n\t\t\tcase \"TwoColumnsBeginExpanded\":\n\t\t\tcase \"TwoColumnsMidExpanded\":\n\t\t\t\tbShowShareIcon = viewColumn === \"midColumn\";\n\t\t\t\tbreak;\n\t\t\tcase \"EndColumnFullScreen\":\n\t\t\tcase \"ThreeColumnsEndExpanded\":\n\t\t\tcase \"ThreeColumnsMidExpanded\":\n\t\t\t\tbShowShareIcon = viewColumn === \"endColumn\";\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbShowShareIcon = false;\n\t\t}\n\t\treturn bShowShareIcon;\n\t}\n\n\t_updateEditButtonVisiblity(viewColumn: string, sLayout: string): boolean {\n\t\tconst hiddenDraft = (this.getAppComponent()?.getEnvironmentCapabilities()?.getCapabilities()?.HiddenDraft as HiddenDraft)?.enabled;\n\t\tlet bEditButtonVisible = true;\n\t\tswitch (viewColumn) {\n\t\t\tcase \"midColumn\":\n\t\t\t\tswitch (sLayout) {\n\t\t\t\t\tcase \"TwoColumnsMidExpanded\":\n\t\t\t\t\tcase \"ThreeColumnsMidExpandedEndHidden\":\n\t\t\t\t\tcase \"ThreeColumnsBeginExpandedEndHidden\":\n\t\t\t\t\tcase \"TwoColumnsBeginExpanded\":\n\t\t\t\t\t\tif (!hiddenDraft) {\n\t\t\t\t\t\t\tbEditButtonVisible = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"ThreeColumnsMidExpanded\":\n\t\t\t\t\tcase \"ThreeColumnsEndExpanded\":\n\t\t\t\t\t\tbEditButtonVisible = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"endColumn\":\n\t\t\t\tswitch (sLayout) {\n\t\t\t\t\tcase \"ThreeColumnsMidExpanded\":\n\t\t\t\t\tcase \"ThreeColumnsEndExpanded\":\n\t\t\t\t\t\tif (!hiddenDraft) {\n\t\t\t\t\t\t\tbEditButtonVisible = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\t\treturn bEditButtonVisible;\n\t}\n\n\t_updateSaveAndCancelButtonVisiblity(viewColumn: string, sLayout: string): boolean {\n\t\tconst hiddenDraft = (this.getAppComponent()?.getEnvironmentCapabilities()?.getCapabilities()?.HiddenDraft as HiddenDraft)?.enabled;\n\t\tlet bSaveAndCancelButtonVisible = true;\n\t\tswitch (viewColumn) {\n\t\t\tcase \"midColumn\":\n\t\t\t\tswitch (sLayout) {\n\t\t\t\t\tcase \"ThreeColumnsEndExpanded\":\n\t\t\t\t\tcase \"ThreeColumnsMidExpanded\":\n\t\t\t\t\t\tif (hiddenDraft) {\n\t\t\t\t\t\t\tbSaveAndCancelButtonVisible = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\t\treturn bSaveAndCancelButtonVisible;\n\t}\n\n\tupdateUIStateForView(oView: FEView, FCLLevel: number): void {\n\t\tconst oUIState = this.getHelper().getCurrentUIState(),\n\t\t\toFclColName = [\"beginColumn\", \"midColumn\", \"endColumn\"],\n\t\t\tsLayout = this.getFclControl().getLayout();\n\t\tlet viewColumn;\n\n\t\tif (!oView.getModel(\"fclhelper\")) {\n\t\t\toView.setModel(this._createHelperModel(), \"fclhelper\");\n\t\t}\n\t\tif (!oUIState.actionButtonsInfo) {\n\t\t\toUIState.actionButtonsInfo = {};\n\t\t}\n\t\tif (!oUIState.actionButtonsInfo.midColumn) {\n\t\t\toUIState.actionButtonsInfo.midColumn = {};\n\t\t}\n\t\tif (!oUIState.actionButtonsInfo.endColumn) {\n\t\t\toUIState.actionButtonsInfo.endColumn = {};\n\t\t}\n\t\tif (FCLLevel >= this._oFCLConfig.maxColumnsCount) {\n\t\t\t// The view is on a level > max number of columns. It's always fullscreen without close/exit buttons\n\t\t\tviewColumn = oFclColName[this._oFCLConfig.maxColumnsCount - 1];\n\n\t\t\toUIState.actionButtonsInfo.midColumn.fullScreen = null;\n\t\t\toUIState.actionButtonsInfo.midColumn.exitFullScreen = null;\n\t\t\toUIState.actionButtonsInfo.midColumn.closeColumn = null;\n\t\t\toUIState.actionButtonsInfo.endColumn.exitFullScreen = null;\n\t\t\toUIState.actionButtonsInfo.endColumn.fullScreen = null;\n\t\t\toUIState.actionButtonsInfo.endColumn.closeColumn = null;\n\t\t} else {\n\t\t\tviewColumn = oFclColName[FCLLevel];\n\t\t}\n\n\t\tif (\n\t\t\tFCLLevel >= this._oFCLConfig.maxColumnsCount ||\n\t\t\tsLayout === \"EndColumnFullScreen\" ||\n\t\t\tsLayout === \"MidColumnFullScreen\" ||\n\t\t\tsLayout === \"OneColumn\"\n\t\t) {\n\t\t\toView.getModel(\"fclhelper\").setProperty(\"/breadCrumbIsVisible\", true);\n\t\t} else {\n\t\t\toView.getModel(\"fclhelper\").setProperty(\"/breadCrumbIsVisible\", false);\n\t\t}\n\t\t// Unfortunately, the FCLHelper doesn't provide actionButton values for the first column\n\t\t// so we have to add this info manually\n\t\t(oUIState.actionButtonsInfo as { beginColumn?: object }).beginColumn = {\n\t\t\tfullScreen: null,\n\t\t\texitFullScreen: null,\n\t\t\tcloseColumn: null\n\t\t};\n\n\t\tconst oActionButtonInfos: NavigationActionsTargets & {\n\t\t\tswitchVisible?: boolean;\n\t\t\tswitchIcon?: string;\n\t\t\tisFullScreen?: boolean;\n\t\t\tcloseVisible?: boolean;\n\t\t} = Object.assign({}, oUIState.actionButtonsInfo[viewColumn as keyof ColumnsNavigationActions]);\n\t\toActionButtonInfos.switchVisible = oActionButtonInfos.fullScreen !== null || oActionButtonInfos.exitFullScreen !== null;\n\t\toActionButtonInfos.switchIcon = oActionButtonInfos.fullScreen !== null ? \"sap-icon://full-screen\" : \"sap-icon://exit-full-screen\";\n\t\toActionButtonInfos.isFullScreen = oActionButtonInfos.fullScreen === null;\n\t\toActionButtonInfos.closeVisible = oActionButtonInfos.closeColumn !== null;\n\n\t\toView.getModel(\"fclhelper\").setProperty(\"/actionButtonsInfo\", oActionButtonInfos);\n\n\t\toView.getModel(\"fclhelper\").setProperty(\"/showEditButton\", this._updateEditButtonVisiblity(viewColumn, sLayout));\n\n\t\toView.getModel(\"fclhelper\").setProperty(\"/showSaveAndCancelButton\", this._updateSaveAndCancelButtonVisiblity(viewColumn, sLayout));\n\n\t\toView.getModel(\"fclhelper\").setProperty(\"/showShareIcon\", this._updateShareButtonVisibility(viewColumn, sLayout));\n\t}\n\n\t/**\n\t * Function triggered by the router BeforeRouteMatched event.\n\t * @param oEvent\n\t */\n\tasync onBeforeRouteMatched(oEvent: Router$BeforeRouteMatchedEvent): Promise<void> {\n\t\tif (oEvent) {\n\t\t\tconst oQueryParams = (oEvent.getParameters().arguments! as Record<string, { layout: LayoutTypeType }>)[\"?query\"];\n\t\t\tlet sLayout = oQueryParams ? oQueryParams.layout : undefined;\n\n\t\t\t// If there is no layout parameter, query for the default level 0 layout (normally OneColumn)\n\t\t\tif (!sLayout) {\n\t\t\t\tconst oNextUIState = this.getHelper().getNextUIState(0);\n\t\t\t\tsLayout = oNextUIState.layout as LayoutTypeType | undefined;\n\t\t\t}\n\n\t\t\t// Check if the layout if compatible with the number of targets\n\t\t\t// This should always be the case for normal navigation, just needed in case\n\t\t\t// the URL has been manually modified\n\t\t\tconst aTargets = (oEvent.getParameter(\"config\") as { target?: string[] })?.target;\n\t\t\tsLayout = this._correctLayoutForTargets(sLayout!, aTargets);\n\t\t\tsLayout = await this.getStoredLayout(sLayout);\n\n\t\t\t// Update the layout of the FlexibleColumnLayout.\n\t\t\tif (sLayout) {\n\t\t\t\tthis.getFclControl().setLayout(sLayout);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Helper for the FCL Component.\n\t * @returns Instance of a semantic helper\n\t */\n\tgetHelper(): FlexibleColumnLayoutSemanticHelper {\n\t\treturn FlexibleColumnLayoutSemanticHelper.getInstanceFor(this.getFclControl(), this._oFCLConfig);\n\t}\n\n\t/**\n\t * Calculates the FCL layout for a given FCL level and a target hash.\n\t * @param iNextFCLLevel FCL level to be navigated to\n\t * @param sHash The hash to be navigated to\n\t * @param sProposedLayout The proposed layout\n\t * @param keepCurrentLayout True if we want to keep the current layout if possible\n\t * @returns The calculated layout\n\t */\n\tcalculateLayout(iNextFCLLevel: number, sHash: string, sProposedLayout: LayoutTypeType | undefined, keepCurrentLayout = false): string {\n\t\t// First, ask the FCL helper to calculate the layout if nothing is proposed\n\t\tif (!sProposedLayout) {\n\t\t\tsProposedLayout = (\n\t\t\t\tkeepCurrentLayout ? this.getFclControl().getLayout() : this.getHelper().getNextUIState(iNextFCLLevel).layout\n\t\t\t) as LayoutTypeType | undefined;\n\t\t}\n\n\t\t// Then change this value if necessary, based on the number of targets\n\t\tconst oRoute = (this.getRouter() as { getRouteByHash?: (hash: string) => Route }).getRouteByHash?.(\n\t\t\t`${sHash}?layout=${sProposedLayout}`\n\t\t);\n\t\tconst aTargets = this._oTargetsFromRoutePattern[oRoute!.getPattern()];\n\n\t\treturn this._correctLayoutForTargets(sProposedLayout!, aTargets);\n\t}\n\n\t/**\n\t * Checks whether a given FCL layout is compatible with an array of targets.\n\t * @param sProposedLayout Proposed value for the FCL layout\n\t * @param aTargets Array of target names used for checking\n\t * @returns The corrected layout\n\t */\n\t_correctLayoutForTargets(sProposedLayout: LayoutTypeType, aTargets: string[] | undefined): LayoutTypeType {\n\t\tconst allAllowedLayouts = {\n\t\t\t\"2\": [\"TwoColumnsMidExpanded\", \"TwoColumnsBeginExpanded\", \"MidColumnFullScreen\"],\n\t\t\t\"3\": [\n\t\t\t\t\"ThreeColumnsMidExpanded\",\n\t\t\t\t\"ThreeColumnsEndExpanded\",\n\t\t\t\t\"ThreeColumnsMidExpandedEndHidden\",\n\t\t\t\t\"ThreeColumnsBeginExpandedEndHidden\",\n\t\t\t\t\"MidColumnFullScreen\",\n\t\t\t\t\"EndColumnFullScreen\"\n\t\t\t]\n\t\t};\n\n\t\tif (aTargets && !Array.isArray(aTargets)) {\n\t\t\t// To support single target as a string in the manifest\n\t\t\taTargets = [aTargets];\n\t\t}\n\n\t\tif (!aTargets) {\n\t\t\t// Defensive, just in case...\n\t\t\treturn sProposedLayout;\n\t\t} else if (aTargets.length > 1) {\n\t\t\t// More than 1 target: just simply check from the allowed values\n\t\t\tconst aLayouts = allAllowedLayouts[aTargets.length.toString() as \"2\" | \"3\"] as LayoutTypeType[];\n\t\t\tif (!aLayouts.includes(sProposedLayout)) {\n\t\t\t\t// The proposed layout isn't compatible with the number of columns\n\t\t\t\t// --> Ask the helper for the default layout for the number of columns\n\t\t\t\tconst defaultLayout = this._getDefaultLayout(aTargets.length);\n\t\t\t\tsProposedLayout = defaultLayout && aLayouts.includes(defaultLayout) ? defaultLayout : aLayouts[0];\n\t\t\t}\n\t\t} else {\n\t\t\t// Only one target\n\t\t\tconst sTargetAggregation =\n\t\t\t\tthis.getTargetAggregation()[getRouteTargetName(aTargets[0])].aggregation || this._oFCLConfig.defaultControlAggregation;\n\t\t\tswitch (sTargetAggregation) {\n\t\t\t\tcase \"beginColumnPages\":\n\t\t\t\t\tsProposedLayout = LayoutType.OneColumn;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"midColumnPages\":\n\t\t\t\t\tsProposedLayout = LayoutType.MidColumnFullScreen;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"endColumnPages\":\n\t\t\t\t\tsProposedLayout = LayoutType.EndColumnFullScreen;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t\t// no default\n\t\t\t}\n\t\t}\n\n\t\treturn sProposedLayout;\n\t}\n\n\t/**\n\t * Gets default Layout for number of columns.\n\t * @param numberOfTargetsFromRoute\n\t * @returns An FCL Layout based on the manifest configuration if it is defined.\n\t */\n\t_getDefaultLayout(numberOfTargetsFromRoute: number): LayoutTypeType | undefined {\n\t\tswitch (numberOfTargetsFromRoute) {\n\t\t\tcase 3:\n\t\t\t\treturn this._oFCLConfig.defaultTwoColumnLayoutType;\n\t\t\tcase 2:\n\t\t\t\treturn this._oFCLConfig.defaultTwoColumnLayoutType;\n\t\t\tdefault:\n\t\t\t\treturn undefined;\n\t\t}\n\t}\n\n\t/**\n\t * Gets the instanced views in the FCL component.\n\t * @returns Return the instanced views.\n\t */\n\tgetInstancedViews(): View[] {\n\t\tconst fclControl = this.getFclControl();\n\t\tconst componentContainers: Control[] = [\n\t\t\t...fclControl.getBeginColumnPages(),\n\t\t\t...fclControl.getMidColumnPages(),\n\t\t\t...fclControl.getEndColumnPages()\n\t\t];\n\t\treturn this.getViewsFromPages(componentContainers);\n\t}\n\n\t/**\n\t * Gets the current visible pages.\n\t * @returns Return the visible views.\n\t */\n\tgetVisibleViews(): View[] {\n\t\treturn this._getAllVisibleViews();\n\t}\n\n\t/**\n\t * Get all visible views in the FCL component.\n\t * @param forLayout  Optional parameter is very specific as part of the calculation of the latest navigated row\n\t * @returns Array of all visible views\n\t */\n\t_getAllVisibleViews(forLayout?: string): View[] {\n\t\tconst visibleViews: View[] = [];\n\t\tconst layout = forLayout ? forLayout : this.getFclControl().getLayout();\n\t\tconst addView = (page: Control | undefined): void => {\n\t\t\tif (page) {\n\t\t\t\tconst view = this.getViewFromContainer(page);\n\t\t\t\tif (view) {\n\t\t\t\t\tvisibleViews.push(view);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tswitch (layout) {\n\t\t\tcase LayoutType.EndColumnFullScreen:\n\t\t\t\taddView(this.getFclControl().getCurrentEndColumnPage());\n\t\t\t\tbreak;\n\n\t\t\tcase LayoutType.MidColumnFullScreen:\n\t\t\t\taddView(this.getFclControl().getCurrentMidColumnPage());\n\t\t\t\tbreak;\n\n\t\t\tcase LayoutType.OneColumn:\n\t\t\t\taddView(this.getFclControl().getCurrentBeginColumnPage());\n\t\t\t\tbreak;\n\n\t\t\tcase LayoutType.ThreeColumnsEndExpanded:\n\t\t\tcase LayoutType.ThreeColumnsMidExpanded:\n\t\t\t\taddView(this.getFclControl().getCurrentBeginColumnPage());\n\t\t\t\taddView(this.getFclControl().getCurrentMidColumnPage());\n\t\t\t\taddView(this.getFclControl().getCurrentEndColumnPage());\n\t\t\t\tbreak;\n\n\t\t\tcase LayoutType.TwoColumnsBeginExpanded:\n\t\t\tcase LayoutType.TwoColumnsMidExpanded:\n\t\t\tcase LayoutType.ThreeColumnsMidExpandedEndHidden:\n\t\t\tcase LayoutType.ThreeColumnsBeginExpandedEndHidden:\n\t\t\t\taddView(this.getFclControl().getCurrentBeginColumnPage());\n\t\t\t\taddView(this.getFclControl().getCurrentMidColumnPage());\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tLog.error(`Unhandled switch case for ${this.getFclControl().getLayout()}`);\n\t\t}\n\n\t\treturn visibleViews;\n\t}\n\n\t_getAllViews(forLayout?: string): View[] {\n\t\tconst allViews: View[] = [];\n\t\tconst layout = forLayout ? forLayout : this.getFclControl().getLayout();\n\n\t\tconst addView = (page: Control | undefined): void => {\n\t\t\tif (page) {\n\t\t\t\tconst view = this.getViewFromContainer(page);\n\t\t\t\tif (view) {\n\t\t\t\t\tallViews.push(view);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tswitch (layout) {\n\t\t\tcase LayoutType.OneColumn:\n\t\t\t\taddView(this.getFclControl().getCurrentBeginColumnPage());\n\t\t\t\tbreak;\n\t\t\tcase LayoutType.ThreeColumnsEndExpanded:\n\t\t\tcase LayoutType.ThreeColumnsMidExpanded:\n\t\t\tcase LayoutType.ThreeColumnsMidExpandedEndHidden:\n\t\t\tcase LayoutType.ThreeColumnsBeginExpandedEndHidden:\n\t\t\tcase LayoutType.EndColumnFullScreen:\n\t\t\t\taddView(this.getFclControl().getCurrentBeginColumnPage());\n\t\t\t\taddView(this.getFclControl().getCurrentMidColumnPage());\n\t\t\t\taddView(this.getFclControl().getCurrentEndColumnPage());\n\t\t\t\tbreak;\n\n\t\t\tcase LayoutType.TwoColumnsBeginExpanded:\n\t\t\tcase LayoutType.TwoColumnsMidExpanded:\n\t\t\t\taddView(this.getFclControl().getCurrentBeginColumnPage());\n\t\t\t\taddView(this.getFclControl().getCurrentMidColumnPage());\n\t\t\t\tbreak;\n\n\t\t\tcase LayoutType.MidColumnFullScreen:\n\t\t\t\t// In this case we need to determine if this mid column fullscreen comes from a 2 or a 3 column layout\n\t\t\t\t{\n\t\t\t\t\tconst layoutWhenExitFullScreen =\n\t\t\t\t\t\tthis.getHelper().getCurrentUIState().actionButtonsInfo?.midColumn?.exitFullScreen ?? \"\";\n\t\t\t\t\taddView(this.getFclControl().getCurrentBeginColumnPage());\n\t\t\t\t\taddView(this.getFclControl().getCurrentMidColumnPage());\n\t\t\t\t\tif (layoutWhenExitFullScreen.startsWith(\"ThreeColumn\")) {\n\t\t\t\t\t\t// We come from a 3 column layout\n\t\t\t\t\t\taddView(this.getFclControl().getCurrentEndColumnPage());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tLog.error(`Unhandled switch case for ${this.getFclControl().getLayout()}`);\n\t\t}\n\t\treturn allViews;\n\t}\n\n\tasync onContainerReady(): Promise<void[]> {\n\t\t// Restore views if neccessary.\n\t\tconst aViews = this._getAllVisibleViews();\n\t\tconst aRestorePromises: Promise<void>[] = aViews.reduce(function (aPromises: Promise<void>[], oTargetView: View) {\n\t\t\tif (oTargetView.isA && oTargetView.isA(\"sap.ui.core.mvc.View\")) {\n\t\t\t\taPromises.push(KeepAliveHelper.restoreView(oTargetView as FEView));\n\t\t\t}\n\n\t\t\treturn aPromises;\n\t\t}, []);\n\t\treturn Promise.all(aRestorePromises);\n\t}\n\n\tgetRightmostContext(): Context | undefined {\n\t\treturn this.getRightmostView()?.getBindingContext() ?? undefined;\n\t}\n\n\tgetRightmostView(): FEView {\n\t\treturn this._getAllViews().pop() as FEView;\n\t}\n\n\tisContextUsedInPages(oContext: Context): boolean {\n\t\tif (!this.getFclControl()) {\n\t\t\treturn false;\n\t\t}\n\t\tconst aAllVisibleViews = this._getAllViews();\n\t\tfor (const view of aAllVisibleViews) {\n\t\t\tif (view) {\n\t\t\t\tif (view.getBindingContext() === oContext) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// A view has been destroyed --> app is currently being destroyed\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tasync _setShellMenuTitle(\n\t\toAppComponent: AppComponent,\n\t\tsTitle: string,\n\t\tsAppTitle: string,\n\t\tbrowerTitle?: TitleAdditionalInfo\n\t): Promise<void> {\n\t\tif (this.getHelper().getCurrentUIState().isFullScreen !== true) {\n\t\t\tawait oAppComponent.getShellServices().setTitle(sAppTitle, browerTitle);\n\t\t} else {\n\t\t\tawait oAppComponent.getShellServices().setTitle(sTitle, browerTitle);\n\t\t}\n\t}\n\n\t/**\n\t * This method is called to retieve the FCL state from the personalization service.\n\t * @returns The FCL state\n\t */\n\tasync getFCLPersonalizationData(): Promise<FCLState> {\n\t\tconst shellServices = this.getAppComponent()?.getShellServices();\n\t\tlet fclState;\n\t\ttry {\n\t\t\tfclState = (await shellServices.getApplicationPersonalizationData?.(\"FCL-Personalization\")) as FCLState | undefined;\n\t\t} catch (error: unknown) {\n\t\t\tLog.error(\"Error while getting the FCL-Personalization data from the personalization service\", error as Error);\n\t\t}\n\t\treturn (\n\t\t\tfclState ?? {\n\t\t\t\tdefaultLayouts: {},\n\t\t\t\tcolumnsDistribution: {\n\t\t\t\t\tdesktop: {},\n\t\t\t\t\ttablet: {}\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\n\t/**\n\t * This method is called to set the FCL state in the personalization service.\n\t * @param fclState The FCL state\n\t */\n\tsetFCLPersonalizationData(fclState: FCLState): void {\n\t\tconst shellServices = this.getAppComponent()?.getShellServices();\n\t\tshellServices.setApplicationPersonalizationData(\"FCL-Personalization\", fclState);\n\t}\n\n\t/**\n\t * This method requests the FCL state from the personalization service and sets the model accordingly.\n\t */\n\tprivate async setColumnDistributionModel(): Promise<void> {\n\t\tthis.fclStateCache = this.getFCLPersonalizationData();\n\t\tconst columnsDistribution = (await this.fclStateCache).columnsDistribution;\n\t\tif (columnsDistribution) {\n\t\t\tconst model = this.getView().getModel(\"internal\");\n\t\t\tmodel.setProperty(\"/FCLColumnsDistribution\", columnsDistribution);\n\t\t}\n\t}\n\n\t/**\n\t * This method is called when the user changes the columns distribution in the FCL settings dialog.\n\t * It updates the FCL state in the personalization service.\n\t * @param event\n\t */\n\tprivate async onColumnsDistributionChange(\n\t\tevent: Event<{ media: \"tablet\" | \"desktop\"; layout: LayoutTypeType; columnsSizes: string }>\n\t): Promise<void> {\n\t\tconst { media, layout, columnsSizes } = event.getParameters();\n\t\tconst model = this.getView().getModel(\"internal\");\n\t\tmodel.setProperty(`/FCLColumnsDistribution/${media}/${layout}`, columnsSizes);\n\t\tconst fclState = await this.fclStateCache;\n\t\tconst nbColumnsDisplayed = this.getNumberOfColumnsFromLayout(layout);\n\t\tif (nbColumnsDisplayed) {\n\t\t\tfclState.defaultLayouts[nbColumnsDisplayed] = layout;\n\t\t\tfclState.columnsDistribution[media][layout] = columnsSizes;\n\t\t\tthis.setFCLPersonalizationData(fclState);\n\t\t\tthis.fclStateCache = Promise.resolve(fclState);\n\t\t}\n\t}\n\n\t/**\n\t * This method returns the number of columns displayed in the FCL based on the layout.\n\t * @param layout  The layout\n\t * @returns The number of columns displayed\n\t */\n\tprivate getNumberOfColumnsFromLayout(layout: LayoutTypeType): 1 | 2 | 3 | null {\n\t\tconst nbColumnsDisplayed = /^(One|Two|Three)Column/.exec(layout)?.[1] as \"One\" | \"Two\" | \"Three\";\n\t\tswitch (nbColumnsDisplayed) {\n\t\t\tcase \"One\":\n\t\t\t\treturn 1;\n\t\t\tcase \"Two\":\n\t\t\t\treturn 2;\n\t\t\tcase \"Three\":\n\t\t\t\treturn 3;\n\t\t\tdefault:\n\t\t\t\treturn null;\n\t\t}\n\t}\n\n\t/**\n\t * This method returns the layout stored in the personalization service based on the proposed layout.\n\t * @param proposedLayout\n\t * @returns The FCL layout stored in the personalization service\n\t */\n\tasync getStoredLayout(proposedLayout?: LayoutTypeType): Promise<LayoutTypeType | undefined> {\n\t\tconst layout = proposedLayout ?? (this.getFclControl().getLayout() as LayoutTypeType);\n\t\tconst nbColumnsDisplayed = this.getNumberOfColumnsFromLayout(layout);\n\t\tif (nbColumnsDisplayed) {\n\t\t\tconst defaultLayouts = (await this.fclStateCache).defaultLayouts;\n\t\t\treturn defaultLayouts?.[nbColumnsDisplayed] ?? layout;\n\t\t}\n\t\treturn layout;\n\t}\n}\n\nexport default FclController;\n"],"mappings":"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","ignoreList":[],"file":"Fcl-dbg.controller.js"}