{"version":3,"file":"ValueFormatter.js","names":["calendarPatternMap","yyyy","Q","MM","ww","yyyyMMdd","yyyyMM","valueFormatters","sName","hasOwnProperty","_len","arguments","length","oArgs","Array","_key","apply","this","formatWithBrackets","firstPart","secondPart","resourceBundle","Library","getResourceBundleFor","getText","__functionName","formatStringDimension","value","pattern","propertyPath","matchedValue","toString","match","date","value1","DateFormat","getDateInstance","parse","Date","getTime","Log","warning","formatTitle","whitespaceReplacer","formatCreationTitle","defaultText","actualText","usableText","startsWith","computePercentage","target","sUnit","sPercentString","undefined","iValue","parseFloat","iTarget","formatCriticalityValueState","val","sValueState","_exports","formatCriticalityButtonType","sType","formatCriticalityColorMicroChart","sColor","formatProgressIndicatorText","unit","isCurrency","customUnits","unitSplit","split","searchUnit","dateFormat","localeData","oLocaleData","mData","oResourceModel","unitDisplayed","dateFields","displayName","units","short","formatter","NumberFormat","getCurrencyInstance","customCurrencies","showMeasure","getUnitInstance","displayValue","format","displayTarget","formatPasswordText","repeat","formatToKeepWhitespace","provideDateInstance","isDateValid","isNaN","UI5Date","getInstance","hasSemanticObjects","_len2","semanticObjects","_key2","currentUserSemanticObjectsList","dynamicSemanticObjectsResolved","i","push","getReachableSemanticObjectsSettings","semanticObjectsList","semanticObjectsExpressionList","qualifierMap","hasReachableStaticSemanticObject","replaceWhitespace","getIconForMimeType","mimeType","IconPool"],"sources":["./ValueFormatter.ts"],"sourcesContent":["import Log from \"sap/base/Log\";\nimport whitespaceReplacer from \"sap/base/strings/whitespaceReplacer\";\nimport { getReachableSemanticObjectsSettings } from \"sap/fe/core/templating/SemanticObjectHelper\";\nimport IconPool from \"sap/ui/core/IconPool\";\nimport Library from \"sap/ui/core/Lib\";\nimport UI5Date from \"sap/ui/core/date/UI5Date\";\nimport DateFormat from \"sap/ui/core/format/DateFormat\";\nimport NumberFormat from \"sap/ui/core/format/NumberFormat\";\n\nconst calendarPatternMap: { [key: string]: RegExp } = {\n\tyyyy: /[1-9]\\d{3,}|0\\d{3}/,\n\tQ: /[1-4]/,\n\tMM: /0[1-9]|1[0-2]/,\n\tww: /0[1-9]|[1-4]\\d|5[0-3]/,\n\tyyyyMMdd: /(?:[1-9]\\d{3}|0\\d{3})(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])/,\n\tyyyyMM: /(?:[1-9]\\d{3}|0\\d{3})(0[1-9]|1[0-2])/,\n\t\"yyyy-MM-dd\": /(?:[1-9]\\d{3}|0\\d{3})-(0[1-9]|1[0-2])-(0[1-9]|[12]\\d|3[01])/\n};\n\n/**\n * Collection of table formatters.\n * @param this The context\n * @param sName The inner function name\n * @param oArgs The inner function parameters\n * @returns The value from the inner function\n */\nconst valueFormatters = function (this: object, sName: string, ...oArgs: unknown[]): unknown {\n\tif (valueFormatters.hasOwnProperty(sName)) {\n\t\treturn (valueFormatters as unknown as Record<string, Function>)[sName].apply(this, oArgs);\n\t} else {\n\t\treturn \"\";\n\t}\n};\n\nconst formatWithBrackets = (firstPart?: string, secondPart?: string): string => {\n\tif (firstPart && secondPart) {\n\t\tconst resourceBundle = Library.getResourceBundleFor(\"sap.fe.core\")!;\n\t\treturn resourceBundle.getText(\"C_FORMAT_FOR_TEXT_ARRANGEMENT\", [firstPart, secondPart]);\n\t} else {\n\t\treturn firstPart || secondPart || \"\";\n\t}\n};\nformatWithBrackets.__functionName = \"._formatters.ValueFormatter#formatWithBrackets\";\n\nconst formatStringDimension = (value: unknown, pattern: string, propertyPath: string): number => {\n\tif (pattern in calendarPatternMap) {\n\t\tconst matchedValue = value?.toString().match(calendarPatternMap[pattern]);\n\t\tif (matchedValue && matchedValue?.length) {\n\t\t\tconst date = matchedValue[0];\n\t\t\tconst value1 = DateFormat.getDateInstance({ pattern }).parse(date, false, true);\n\t\t\tif (value1 instanceof Date) {\n\t\t\t\treturn value1.getTime();\n\t\t\t} else {\n\t\t\t\tLog.warning(\"Date value could not be determined for \" + propertyPath);\n\t\t\t}\n\t\t\treturn 0;\n\t\t}\n\t}\n\tLog.warning(\"Pattern not supported for \" + propertyPath);\n\treturn 0;\n};\nformatStringDimension.__functionName = \"._formatters.ValueFormatter#formatStringDimension\";\n\n/**\n * Formats the title of the object page header and the item titles.\n * @param firstPart The first part of the title\n * @param secondPart The second part of the title\n * @returns The formatted title\n */\nconst formatTitle = (firstPart?: string, secondPart?: string): string => {\n\treturn secondPart ? formatWithBrackets(whitespaceReplacer(firstPart), whitespaceReplacer(secondPart)) : whitespaceReplacer(firstPart);\n};\nformatTitle.__functionName = \"._formatters.ValueFormatter#formatTitle\";\n\n/**\n * Formats the title of the object page header and the item titles when there's a property navigation or not.\n * @param defaultText The first part of the title\n * @param actualText The full title\n * @returns The formatted title\n */\nconst formatCreationTitle = (defaultText?: string, actualText?: string): string => {\n\tconst usableText = !!actualText && !actualText.startsWith(\"T_NEW_OBJECT|\") ? actualText : defaultText;\n\treturn formatTitle(usableText);\n};\nformatCreationTitle.__functionName = \"._formatters.ValueFormatter#formatCreationTitle\";\n\nconst computePercentage = (value: string | number, target: string | number, sUnit?: string): string | undefined => {\n\tlet sPercentString: string;\n\t//BCP: 2370008548 If the base value is undefined return \"0\" by default\n\tif (value === undefined) {\n\t\treturn \"0\";\n\t}\n\n\tconst iValue: number = typeof value === \"string\" ? parseFloat(value) : value;\n\tconst iTarget: number = typeof target === \"string\" ? parseFloat(target) : target;\n\n\tif (sUnit === \"%\") {\n\t\tif (iValue > 100) {\n\t\t\tsPercentString = \"100\";\n\t\t} else if (iValue <= 0) {\n\t\t\tsPercentString = \"0\";\n\t\t} else {\n\t\t\tsPercentString = typeof value === \"string\" ? value : value?.toString();\n\t\t}\n\t} else if (iValue > iTarget) {\n\t\tsPercentString = \"100\";\n\t} else if (iValue <= 0) {\n\t\tsPercentString = \"0\";\n\t} else {\n\t\tsPercentString = iValue && iTarget ? ((iValue / iTarget) * 100).toString() : \"0\";\n\t}\n\treturn sPercentString;\n};\ncomputePercentage.__functionName = \"._formatters.ValueFormatter#computePercentage\";\n\nexport const formatCriticalityValueState = (val?: string | number): string | undefined => {\n\tlet sValueState: string;\n\tif (val === \"UI.CriticalityType/Negative\" || val === \"1\" || val === 1) {\n\t\tsValueState = \"Error\";\n\t} else if (val === \"UI.CriticalityType/Critical\" || val === \"2\" || val === 2) {\n\t\tsValueState = \"Warning\";\n\t} else if (val === \"UI.CriticalityType/Positive\" || val === \"3\" || val === 3) {\n\t\tsValueState = \"Success\";\n\t} else if (val === \"UI.CriticalityType/Information\" || val === \"5\" || val === 5) {\n\t\tsValueState = \"Information\";\n\t} else {\n\t\tsValueState = \"None\";\n\t}\n\treturn sValueState;\n};\nformatCriticalityValueState.__functionName = \"._formatters.ValueFormatter#formatCriticalityValueState\";\n\nexport const formatCriticalityButtonType = (val?: string | number): string | undefined => {\n\tlet sType: string;\n\tif (val === \"UI.CriticalityType/Negative\" || val === \"1\" || val === 1) {\n\t\tsType = \"Reject\";\n\t} else if (val === \"UI.CriticalityType/Positive\" || val === \"3\" || val === 3) {\n\t\tsType = \"Accept\";\n\t} else {\n\t\tsType = \"Default\";\n\t}\n\treturn sType;\n};\nformatCriticalityButtonType.__functionName = \"._formatters.ValueFormatter#formatCriticalityButtonType\";\n\nexport const formatCriticalityColorMicroChart = (val?: string | number): string | undefined => {\n\tlet sColor: string;\n\tif (val === \"UI.CriticalityType/Negative\" || val === \"1\" || val === 1) {\n\t\tsColor = \"Error\";\n\t} else if (val === \"UI.CriticalityType/Critical\" || val === \"2\" || val === 2) {\n\t\tsColor = \"Critical\";\n\t} else if (val === \"UI.CriticalityType/Positive\" || val === \"3\" || val === 3) {\n\t\tsColor = \"Good\";\n\t} else {\n\t\tsColor = \"Neutral\";\n\t}\n\treturn sColor;\n};\nformatCriticalityColorMicroChart.__functionName = \"._formatters.ValueFormatter#formatCriticalityColorMicroChart\";\n\n/**\n * Formats the text to be displayed in the progress indicator. Takes into account the decimals and precision of the unit.\n * @param value The current value of the progress indicator\n * @param target The target value fo the progress indicator\n * @param unit The unit of the progress indicator\n * @param isCurrency Whether we have a currency or a uom\n * @param customUnits An object containing the custom units of the application\n * @param customUnits.customCurrencies\n * @param customUnits.showMeasure\n * @returns The translated and formatted text of the progress indicator\n */\nexport const formatProgressIndicatorText = (\n\tvalue: string | number,\n\ttarget: string | number,\n\tunit: string,\n\tisCurrency: boolean,\n\tcustomUnits?: Record<string, object>\n): string | undefined => {\n\tif (value && target && unit) {\n\t\tconst unitSplit = unit.split(\"-\");\n\t\tconst searchUnit = `${unitSplit[1] === undefined ? unit : unitSplit[1]}-narrow`;\n\t\tconst dateFormat = DateFormat.getDateInstance();\n\t\tconst localeData = (\n\t\t\tdateFormat as DateFormat & {\n\t\t\t\toLocaleData: {\n\t\t\t\t\tmData: {\n\t\t\t\t\t\tunits?: { short: Record<string, { displayName?: string }> };\n\t\t\t\t\t\tdateFields: Record<string, { displayName?: string }>;\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t}\n\t\t).oLocaleData.mData;\n\t\tconst oResourceModel = Library.getResourceBundleFor(\"sap.fe.macros\")!;\n\t\tlet unitDisplayed = unit;\n\t\tif (localeData?.dateFields[searchUnit]?.displayName) {\n\t\t\tunitDisplayed = localeData.dateFields[searchUnit].displayName!;\n\t\t} else if (localeData?.units?.short[unit]?.displayName) {\n\t\t\tunitDisplayed = localeData.units.short[unit].displayName!;\n\t\t}\n\n\t\tlet formatter;\n\t\tif (isCurrency) {\n\t\t\tformatter = NumberFormat.getCurrencyInstance({\n\t\t\t\tcustomCurrencies: customUnits,\n\t\t\t\tshowMeasure: false\n\t\t\t});\n\t\t} else {\n\t\t\tformatter = NumberFormat.getUnitInstance({\n\t\t\t\tcustomUnits: customUnits,\n\t\t\t\tshowMeasure: false\n\t\t\t});\n\t\t}\n\t\tconst displayValue = formatter.format(+value, unitDisplayed);\n\t\tconst displayTarget = formatter.format(+target, unitDisplayed);\n\n\t\treturn oResourceModel.getText(\"T_COMMON_PROGRESS_INDICATOR_DISPLAY_VALUE_WITH_UOM\", [displayValue, displayTarget, unitDisplayed]);\n\t}\n};\nformatProgressIndicatorText.__functionName = \"._formatters.ValueFormatter#formatProgressIndicatorText\";\n\n/**\n * Formats the text by replacing each character with a *.\n * @param value The current text entered in the field.\n * @returns A string of * characters equal to the length of the entered value.\n */\nexport const formatPasswordText = (value: string | undefined): string | undefined => {\n\tif (value?.length) {\n\t\treturn \"*\".repeat(value.length);\n\t}\n\treturn undefined;\n};\nformatPasswordText.__functionName = \"._formatters.ValueFormatter#formatPasswordText\";\n\nexport const formatToKeepWhitespace = (value: string | boolean | number): string => {\n\treturn value === null || value === undefined ? \"\" : whitespaceReplacer(value + \"\");\n};\nformatToKeepWhitespace.__functionName = \"._formatters.ValueFormatter#formatToKeepWhitespace\";\n\nfunction provideDateInstance(value: string | number | Date): Date | null {\n\tif (value) {\n\t\tconst isDateValid = new Date(value);\n\t\tif (!isNaN(Date.parse(isDateValid as unknown as string))) {\n\t\t\treturn UI5Date.getInstance(value);\n\t\t} else {\n\t\t\tLog.warning(\"Warning: Valid date format has to be sent to retrieve UI5 date instance\");\n\t\t}\n\t}\n\treturn null;\n}\nprovideDateInstance.__functionName = \"._formatters.ValueFormatter#provideDateInstance\";\n\n/**\n * Format the semantic objects available to user.\n * @param semanticObjects The semantic objects from shell services and the dynamic semantic objects resolved\n * @returns True if the user has semantic objects to navigate\n */\nexport const hasSemanticObjects = function (...semanticObjects: unknown[]): boolean | undefined {\n\tconst currentUserSemanticObjectsList = semanticObjects[0];\n\tconst dynamicSemanticObjectsResolved: string[] = [];\n\tfor (let i = 1; i < semanticObjects.length; i++) {\n\t\tif (semanticObjects[i]) {\n\t\t\tdynamicSemanticObjectsResolved.push(semanticObjects[i] as string);\n\t\t}\n\t}\n\tif (dynamicSemanticObjectsResolved.length > 0) {\n\t\treturn getReachableSemanticObjectsSettings(currentUserSemanticObjectsList as string[], {\n\t\t\tsemanticObjectsList: dynamicSemanticObjectsResolved,\n\t\t\tsemanticObjectsExpressionList: [],\n\t\t\tqualifierMap: {}\n\t\t}).hasReachableStaticSemanticObject;\n\t}\n\treturn undefined;\n};\nhasSemanticObjects.__functionName = \"._formatters.ValueFormatter#hasSemanticObjects\";\nexport const replaceWhitespace = function (value: string): string {\n\treturn whitespaceReplacer(value);\n};\nreplaceWhitespace.__functionName = \"._formatters.ValueFormatter#replaceWhitespace\";\n\nconst getIconForMimeType = function (mimeType: string): string {\n\treturn IconPool.getIconForMimeType(mimeType);\n};\ngetIconForMimeType.__functionName = \"._formatters.ValueFormatter#getIconForMimeType\";\n\nvalueFormatters.hasSemanticObjects = hasSemanticObjects;\nvalueFormatters.formatWithBrackets = formatWithBrackets;\nvalueFormatters.formatTitle = formatTitle;\nvalueFormatters.formatCreationTitle = formatCreationTitle;\nvalueFormatters.provideDateInstance = provideDateInstance;\nvalueFormatters.computePercentage = computePercentage;\nvalueFormatters.formatCriticalityValueState = formatCriticalityValueState;\nvalueFormatters.formatCriticalityButtonType = formatCriticalityButtonType;\nvalueFormatters.formatCriticalityColorMicroChart = formatCriticalityColorMicroChart;\nvalueFormatters.formatProgressIndicatorText = formatProgressIndicatorText;\nvalueFormatters.formatPasswordText = formatPasswordText;\nvalueFormatters.formatToKeepWhitespace = formatToKeepWhitespace;\nvalueFormatters.formatStringDimension = formatStringDimension;\nvalueFormatters.getIconForMimeType = getIconForMimeType;\nvalueFormatters.replaceWhitespace = replaceWhitespace;\n\nexport default valueFormatters;\n"],"mappings":"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","ignoreList":[]}