{"version":3,"names":["labelFormat","kpiTitle","titleParts","split","kpiLabel","length","substring","toUpperCase","__functionName","tooltipFormat","kpiValue","kpiUnit","kpiStatus","hasUnit","resBundle","Library","getResourceBundleFor","msgKey","amountWithUnit","getText","kpiFormatters","sName","hasOwnProperty","_len","arguments","oArgs","Array","_key","apply"],"sourceRoot":".","sources":["KPIFormatter.ts"],"sourcesContent":["import Library from \"sap/ui/core/Lib\";\n\n/**\n * KPI label formatting.\n * The KPI label is an abbreviation of the complete global KPI title. It is formed using the first three letters of the first three words of the KPI title.\n * If there is only one word in the global KPI title, the first three letters of the word are displayed.\n * If the KPI title has only two words, only the first letters of these two words are displayed.\n * @param kpiTitle KPI title value\n * @returns The formatted criticality\n */\nconst labelFormat = function (kpiTitle: string): string {\n\tif (kpiTitle) {\n\t\t// Split the title in words\n\t\tconst titleParts = kpiTitle.split(\" \");\n\n\t\tlet kpiLabel: string;\n\t\tif (titleParts.length === 1) {\n\t\t\t// Only 1 word --> first 3 capitalized letters of the word\n\t\t\tkpiLabel = titleParts[0].substring(0, 3).toUpperCase();\n\t\t} else if (titleParts.length === 2) {\n\t\t\t// 2 words --> first capitalized letters of these two words\n\t\t\tkpiLabel = (titleParts[0].substring(0, 1) + titleParts[1].substring(0, 1)).toUpperCase();\n\t\t} else {\n\t\t\t// 3 words or more --> first capitalized letters of the first 3 words\n\t\t\tkpiLabel = (titleParts[0].substring(0, 1) + titleParts[1].substring(0, 1) + titleParts[2].substring(0, 1)).toUpperCase();\n\t\t}\n\n\t\treturn kpiLabel;\n\t} else {\n\t\t// No KPI title --> no label\n\t\treturn \"\";\n\t}\n};\nlabelFormat.__functionName = \"._formatters.KPIFormatter#labelFormat\";\n\n/**\n * KPI tooltip formatting.\n * @param kpiTitle KPI title\n * @param kpiValue KPI value\n * @param kpiUnit KPI unit or currency (can be undefined)\n * @param kpiStatus KPI status\n * @param hasUnit Is \"true\" if the KPI value has a unit or a currency\n * @returns Returns the text for the KPI tooltip.\n */\nconst tooltipFormat = function (kpiTitle: string, kpiValue: string, kpiUnit: string, kpiStatus: string, hasUnit: string): string {\n\tconst resBundle = Library.getResourceBundleFor(\"sap.fe.core\")!;\n\tconst msgKey = kpiStatus ? `C_KPI_TOOLTIP_${kpiStatus.toUpperCase()}` : \"C_KPI_TOOLTIP_NONE\";\n\tlet amountWithUnit: string;\n\tif (hasUnit === \"true\") {\n\t\tif (!kpiUnit) {\n\t\t\t// No unit means multi-unit situation\n\t\t\tamountWithUnit = resBundle.getText(\"C_KPI_TOOLTIP_AMOUNT_MULTIUNIT\");\n\t\t} else {\n\t\t\tamountWithUnit = `${kpiValue} ${kpiUnit}`;\n\t\t}\n\t} else {\n\t\tamountWithUnit = kpiValue;\n\t}\n\n\treturn resBundle.getText(msgKey, [kpiTitle, amountWithUnit]);\n};\ntooltipFormat.__functionName = \"._formatters.KPIFormatter#tooltipFormat\";\n\n// See https://www.typescriptlang.org/docs/handbook/functions.html#this-parameters for more detail on this weird syntax\n/**\n * Collection of table formatters.\n * @param this The context\n * @param sName The inner function name\n * @param oArgs The inner function parameters\n * @returns The value from the inner function\n */\nconst kpiFormatters = function (this: object, sName: string, ...oArgs: unknown[]): unknown {\n\tif (kpiFormatters.hasOwnProperty(sName)) {\n\t\treturn (kpiFormatters as unknown as Record<string, Function>)[sName].apply(this, oArgs);\n\t} else {\n\t\treturn \"\";\n\t}\n};\n\nkpiFormatters.labelFormat = labelFormat;\nkpiFormatters.tooltipFormat = tooltipFormat;\n\nexport default kpiFormatters;\n"],"mappings":"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","ignoreList":[],"file":"KPIFormatter-dbg.js"}