{"version":3,"names":["evaluateComplexExpression","expressionAsString","_len","arguments","length","partsToConcat","Array","_key","myExpression","JSON","parse","transformRecursively","pathInModelDef","modelName","constant","parseInt","path","substring","complexTypeDef","compiledExpression","compileExpression","getValue","myCompiledExpression","target","myAny","Any","anyText","jsx","getFormatterContext","setModel","getModel","setBindingContext","getBindingContext","getAnyText","__functionName","concat","_len2","_key2","join","ifElse","condition","onTrue","onFalse","asArray","value","undefined","standardFormatter","sName","hasOwnProperty","_len3","oArgs","_key3","apply","loadProperties","formatPluralMessageConditionally","textSingular","textPlural","values","ui5FormatMessage"],"sourceRoot":".","sources":["StandardFormatter.ts"],"sourcesContent":["import ui5FormatMessage from \"sap/base/strings/formatMessage\";\nimport type {\n\tBindingToolkitExpression,\n\tCompiledBindingToolkitExpression,\n\tExpressionOrPrimitive,\n\tPathInModelExpression\n} from \"sap/fe/base/BindingToolkit\";\nimport { compileExpression, constant, transformRecursively } from \"sap/fe/base/BindingToolkit\";\nimport jsx from \"sap/fe/base/jsx-runtime/jsx\";\nimport Any from \"sap/fe/core/controls/Any\";\nimport type Control from \"sap/ui/core/Control\";\n\nconst evaluateComplexExpression = function (this: Control, expressionAsString: string, ...partsToConcat: string[]): string {\n\tconst myExpression = JSON.parse(expressionAsString) as BindingToolkitExpression<string>;\n\ttransformRecursively(\n\t\tmyExpression,\n\t\t\"PathInModel\",\n\t\t(pathInModelDef: PathInModelExpression<unknown>) => {\n\t\t\tif (pathInModelDef.modelName === \"$\") {\n\t\t\t\treturn constant(partsToConcat[parseInt(pathInModelDef.path.substring(1), 10)]);\n\t\t\t}\n\t\t\treturn pathInModelDef;\n\t\t},\n\t\ttrue\n\t);\n\ttransformRecursively(myExpression, \"ComplexType\", (complexTypeDef: unknown) => {\n\t\tconst compiledExpression = compileExpression(complexTypeDef as ExpressionOrPrimitive<string>);\n\t\tif (compiledExpression) {\n\t\t\treturn constant(getValue(compiledExpression, this));\n\t\t}\n\t\treturn constant(compiledExpression) as BindingToolkitExpression<string>;\n\t});\n\n\tconst myCompiledExpression = compileExpression(myExpression);\n\n\treturn getValue(myCompiledExpression, this);\n};\n\nconst getValue = function (myExpression: CompiledBindingToolkitExpression, target: Control): string {\n\tconst myAny = new Any({ anyText: myExpression }, jsx.getFormatterContext());\n\tmyAny.setModel(target.getModel());\n\tmyAny.setBindingContext(target.getBindingContext());\n\treturn myAny.getAnyText();\n};\nevaluateComplexExpression.__functionName = \"._formatters.StandardFormatter#evaluateComplexExpression\";\nconst concat = function (...partsToConcat: string[]): string {\n\treturn partsToConcat.join(\"\");\n};\nconcat.__functionName = \"._formatters.StandardFormatter#concat\";\n\nconst ifElse = function (condition: boolean, onTrue: string, onFalse: string): string {\n\treturn condition ? onTrue : onFalse;\n};\nifElse.__functionName = \"._formatters.StandardFormatter#ifElse\";\n\nconst asArray = function (value: string): string[] | undefined {\n\tif (value === undefined || value === null || value === \"undefined\" || value === \"null\") {\n\t\treturn [];\n\t}\n\treturn [value];\n};\nasArray.__functionName = \"._formatters.StandardFormatter#asArray\";\n\n/**\n * Collection of table formatters.\n * @param this The context\n * @param sName The inner function name\n * @param oArgs The inner function parameters\n * @returns The value from the inner function\n */\nconst standardFormatter = function (this: object, sName: string, ...oArgs: unknown[]): unknown {\n\tif (standardFormatter.hasOwnProperty(sName)) {\n\t\treturn (standardFormatter as unknown as Record<string, Function>)[sName].apply(this, oArgs);\n\t} else {\n\t\treturn \"\";\n\t}\n};\n\n/**\n * Dummy formatter to ensure complex binding paths are loaded.\n * @param args The arguments\n * @returns Returns null\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst loadProperties = function (...args: unknown[]): null {\n\treturn null;\n};\nloadProperties.__functionName = \"._formatters.StandardFormatter#loadProperties\";\n\nconst formatPluralMessageConditionally = function (textSingular: string, textPlural: string, values: number): string {\n\treturn values === 1 ? textSingular : ui5FormatMessage(textPlural, [values]);\n};\nformatPluralMessageConditionally.__functionName = \"._formatters.StandardFormatter#formatPluralMessageConditionally\";\n\nstandardFormatter.evaluateComplexExpression = evaluateComplexExpression;\nstandardFormatter.concat = concat;\nstandardFormatter.ifElse = ifElse;\nstandardFormatter.asArray = asArray;\nstandardFormatter.loadProperties = loadProperties;\nstandardFormatter.formatPluralMessageConditionally = formatPluralMessageConditionally;\n\nexport default standardFormatter;\n"],"mappings":";;;;;;;;;;EAYA,MAAMA,yBAAyB,GAAG,SAAAA,CAAyBC,kBAA0B,EAAsC;IAAA,SAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAAjCC,aAAa,OAAAC,KAAA,CAAAJ,IAAA,OAAAA,IAAA,WAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;MAAbF,aAAa,CAAAE,IAAA,QAAAJ,SAAA,CAAAI,IAAA;IAAA;IACtG,MAAMC,YAAY,GAAGC,IAAI,CAACC,KAAK,CAACT,kBAAkB,CAAqC;IACvFU,oBAAoB,CACnBH,YAAY,EACZ,aAAa,EACZI,cAA8C,IAAK;MACnD,IAAIA,cAAc,CAACC,SAAS,KAAK,GAAG,EAAE;QACrC,OAAOC,QAAQ,CAACT,aAAa,CAACU,QAAQ,CAACH,cAAc,CAACI,IAAI,CAACC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;MAC/E;MACA,OAAOL,cAAc;IACtB,CAAC,EACD,IACD,CAAC;IACDD,oBAAoB,CAACH,YAAY,EAAE,aAAa,EAAGU,cAAuB,IAAK;MAC9E,MAAMC,kBAAkB,GAAGC,iBAAiB,CAACF,cAA+C,CAAC;MAC7F,IAAIC,kBAAkB,EAAE;QACvB,OAAOL,QAAQ,CAACO,QAAQ,CAACF,kBAAkB,EAAE,IAAI,CAAC,CAAC;MACpD;MACA,OAAOL,QAAQ,CAACK,kBAAkB,CAAC;IACpC,CAAC,CAAC;IAEF,MAAMG,oBAAoB,GAAGF,iBAAiB,CAACZ,YAAY,CAAC;IAE5D,OAAOa,QAAQ,CAACC,oBAAoB,EAAE,IAAI,CAAC;EAC5C,CAAC;EAED,MAAMD,QAAQ,GAAG,SAAAA,CAAUb,YAA8C,EAAEe,MAAe,EAAU;IACnG,MAAMC,KAAK,GAAG,IAAIC,GAAG,CAAC;MAAEC,OAAO,EAAElB;IAAa,CAAC,EAAEmB,GAAG,CAACC,mBAAmB,CAAC,CAAC,CAAC;IAC3EJ,KAAK,CAACK,QAAQ,CAACN,MAAM,CAACO,QAAQ,CAAC,CAAC,CAAC;IACjCN,KAAK,CAACO,iBAAiB,CAACR,MAAM,CAACS,iBAAiB,CAAC,CAAC,CAAC;IACnD,OAAOR,KAAK,CAACS,UAAU,CAAC,CAAC;EAC1B,CAAC;EACDjC,yBAAyB,CAACkC,cAAc,GAAG,0DAA0D;EACrG,MAAMC,MAAM,GAAG,SAAAA,CAAA,EAA8C;IAAA,SAAAC,KAAA,GAAAjC,SAAA,CAAAC,MAAA,EAAjCC,aAAa,OAAAC,KAAA,CAAA8B,KAAA,GAAAC,KAAA,MAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA;MAAbhC,aAAa,CAAAgC,KAAA,IAAAlC,SAAA,CAAAkC,KAAA;IAAA;IACxC,OAAOhC,aAAa,CAACiC,IAAI,CAAC,EAAE,CAAC;EAC9B,CAAC;EACDH,MAAM,CAACD,cAAc,GAAG,uCAAuC;EAE/D,MAAMK,MAAM,GAAG,SAAAA,CAAUC,SAAkB,EAAEC,MAAc,EAAEC,OAAe,EAAU;IACrF,OAAOF,SAAS,GAAGC,MAAM,GAAGC,OAAO;EACpC,CAAC;EACDH,MAAM,CAACL,cAAc,GAAG,uCAAuC;EAE/D,MAAMS,OAAO,GAAG,SAAAA,CAAUC,KAAa,EAAwB;IAC9D,IAAIA,KAAK,KAAKC,SAAS,IAAID,KAAK,KAAK,IAAI,IAAIA,KAAK,KAAK,WAAW,IAAIA,KAAK,KAAK,MAAM,EAAE;MACvF,OAAO,EAAE;IACV;IACA,OAAO,CAACA,KAAK,CAAC;EACf,CAAC;EACDD,OAAO,CAACT,cAAc,GAAG,wCAAwC;;EAEjE;AACA;AACA;AACA;AACA;AACA;AACA;EACA,MAAMY,iBAAiB,GAAG,SAAAA,CAAwBC,KAAa,EAAgC;IAC9F,IAAID,iBAAiB,CAACE,cAAc,CAACD,KAAK,CAAC,EAAE;MAAA,SAAAE,KAAA,GAAA9C,SAAA,CAAAC,MAAA,EADsB8C,KAAK,OAAA5C,KAAA,CAAA2C,KAAA,OAAAA,KAAA,WAAAE,KAAA,MAAAA,KAAA,GAAAF,KAAA,EAAAE,KAAA;QAALD,KAAK,CAAAC,KAAA,QAAAhD,SAAA,CAAAgD,KAAA;MAAA;MAEvE,OAAQL,iBAAiB,CAAyCC,KAAK,CAAC,CAACK,KAAK,CAAC,IAAI,EAAEF,KAAK,CAAC;IAC5F,CAAC,MAAM;MACN,OAAO,EAAE;IACV;EACD,CAAC;;EAED;AACA;AACA;AACA;AACA;EACA;EACA,MAAMG,cAAc,GAAG,SAAAA,CAAA,EAAoC;IAC1D,OAAO,IAAI;EACZ,CAAC;EACDA,cAAc,CAACnB,cAAc,GAAG,+CAA+C;EAE/E,MAAMoB,gCAAgC,GAAG,SAAAA,CAAUC,YAAoB,EAAEC,UAAkB,EAAEC,MAAc,EAAU;IACpH,OAAOA,MAAM,KAAK,CAAC,GAAGF,YAAY,GAAGG,gBAAgB,CAACF,UAAU,EAAE,CAACC,MAAM,CAAC,CAAC;EAC5E,CAAC;EACDH,gCAAgC,CAACpB,cAAc,GAAG,iEAAiE;EAEnHY,iBAAiB,CAAC9C,yBAAyB,GAAGA,yBAAyB;EACvE8C,iBAAiB,CAACX,MAAM,GAAGA,MAAM;EACjCW,iBAAiB,CAACP,MAAM,GAAGA,MAAM;EACjCO,iBAAiB,CAACH,OAAO,GAAGA,OAAO;EACnCG,iBAAiB,CAACO,cAAc,GAAGA,cAAc;EACjDP,iBAAiB,CAACQ,gCAAgC,GAAGA,gCAAgC;EAAC,OAEvER,iBAAiB;AAAA","ignoreList":[],"file":"StandardFormatter-dbg.js"}