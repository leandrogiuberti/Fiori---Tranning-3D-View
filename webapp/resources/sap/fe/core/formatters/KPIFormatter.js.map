{"version":3,"file":"KPIFormatter.js","names":["labelFormat","kpiTitle","titleParts","split","kpiLabel","length","substring","toUpperCase","__functionName","tooltipFormat","kpiValue","kpiUnit","kpiStatus","hasUnit","resBundle","Library","getResourceBundleFor","msgKey","amountWithUnit","getText","kpiFormatters","sName","hasOwnProperty","_len","arguments","oArgs","Array","_key","apply","this"],"sources":["./KPIFormatter.ts"],"sourcesContent":["import Library from \"sap/ui/core/Lib\";\n\n/**\n * KPI label formatting.\n * The KPI label is an abbreviation of the complete global KPI title. It is formed using the first three letters of the first three words of the KPI title.\n * If there is only one word in the global KPI title, the first three letters of the word are displayed.\n * If the KPI title has only two words, only the first letters of these two words are displayed.\n * @param kpiTitle KPI title value\n * @returns The formatted criticality\n */\nconst labelFormat = function (kpiTitle: string): string {\n\tif (kpiTitle) {\n\t\t// Split the title in words\n\t\tconst titleParts = kpiTitle.split(\" \");\n\n\t\tlet kpiLabel: string;\n\t\tif (titleParts.length === 1) {\n\t\t\t// Only 1 word --> first 3 capitalized letters of the word\n\t\t\tkpiLabel = titleParts[0].substring(0, 3).toUpperCase();\n\t\t} else if (titleParts.length === 2) {\n\t\t\t// 2 words --> first capitalized letters of these two words\n\t\t\tkpiLabel = (titleParts[0].substring(0, 1) + titleParts[1].substring(0, 1)).toUpperCase();\n\t\t} else {\n\t\t\t// 3 words or more --> first capitalized letters of the first 3 words\n\t\t\tkpiLabel = (titleParts[0].substring(0, 1) + titleParts[1].substring(0, 1) + titleParts[2].substring(0, 1)).toUpperCase();\n\t\t}\n\n\t\treturn kpiLabel;\n\t} else {\n\t\t// No KPI title --> no label\n\t\treturn \"\";\n\t}\n};\nlabelFormat.__functionName = \"._formatters.KPIFormatter#labelFormat\";\n\n/**\n * KPI tooltip formatting.\n * @param kpiTitle KPI title\n * @param kpiValue KPI value\n * @param kpiUnit KPI unit or currency (can be undefined)\n * @param kpiStatus KPI status\n * @param hasUnit Is \"true\" if the KPI value has a unit or a currency\n * @returns Returns the text for the KPI tooltip.\n */\nconst tooltipFormat = function (kpiTitle: string, kpiValue: string, kpiUnit: string, kpiStatus: string, hasUnit: string): string {\n\tconst resBundle = Library.getResourceBundleFor(\"sap.fe.core\")!;\n\tconst msgKey = kpiStatus ? `C_KPI_TOOLTIP_${kpiStatus.toUpperCase()}` : \"C_KPI_TOOLTIP_NONE\";\n\tlet amountWithUnit: string;\n\tif (hasUnit === \"true\") {\n\t\tif (!kpiUnit) {\n\t\t\t// No unit means multi-unit situation\n\t\t\tamountWithUnit = resBundle.getText(\"C_KPI_TOOLTIP_AMOUNT_MULTIUNIT\");\n\t\t} else {\n\t\t\tamountWithUnit = `${kpiValue} ${kpiUnit}`;\n\t\t}\n\t} else {\n\t\tamountWithUnit = kpiValue;\n\t}\n\n\treturn resBundle.getText(msgKey, [kpiTitle, amountWithUnit]);\n};\ntooltipFormat.__functionName = \"._formatters.KPIFormatter#tooltipFormat\";\n\n// See https://www.typescriptlang.org/docs/handbook/functions.html#this-parameters for more detail on this weird syntax\n/**\n * Collection of table formatters.\n * @param this The context\n * @param sName The inner function name\n * @param oArgs The inner function parameters\n * @returns The value from the inner function\n */\nconst kpiFormatters = function (this: object, sName: string, ...oArgs: unknown[]): unknown {\n\tif (kpiFormatters.hasOwnProperty(sName)) {\n\t\treturn (kpiFormatters as unknown as Record<string, Function>)[sName].apply(this, oArgs);\n\t} else {\n\t\treturn \"\";\n\t}\n};\n\nkpiFormatters.labelFormat = labelFormat;\nkpiFormatters.tooltipFormat = tooltipFormat;\n\nexport default kpiFormatters;\n"],"mappings":";;;;2DAUA,MAAMA,EAAc,SAAUC,GAC7B,GAAIA,EAAU,CAEb,MAAMC,EAAaD,EAASE,MAAM,KAElC,IAAIC,EACJ,GAAIF,EAAWG,SAAW,EAAG,CAE5BD,EAAWF,EAAW,GAAGI,UAAU,EAAG,GAAGC,aAC1C,MAAO,GAAIL,EAAWG,SAAW,EAAG,CAEnCD,GAAYF,EAAW,GAAGI,UAAU,EAAG,GAAKJ,EAAW,GAAGI,UAAU,EAAG,IAAIC,aAC5E,KAAO,CAENH,GAAYF,EAAW,GAAGI,UAAU,EAAG,GAAKJ,EAAW,GAAGI,UAAU,EAAG,GAAKJ,EAAW,GAAGI,UAAU,EAAG,IAAIC,aAC5G,CAEA,OAAOH,CACR,KAAO,CAEN,MAAO,EACR,CACD,EACAJ,EAAYQ,eAAiB,wCAW7B,MAAMC,EAAgB,SAAUR,EAAkBS,EAAkBC,EAAiBC,EAAmBC,GACvG,MAAMC,EAAYC,EAAQC,qBAAqB,eAC/C,MAAMC,EAASL,EAAY,iBAAiBA,EAAUL,gBAAkB,qBACxE,IAAIW,EACJ,GAAIL,IAAY,OAAQ,CACvB,IAAKF,EAAS,CAEbO,EAAiBJ,EAAUK,QAAQ,iCACpC,KAAO,CACND,EAAiB,GAAGR,KAAYC,GACjC,CACD,KAAO,CACNO,EAAiBR,CAClB,CAEA,OAAOI,EAAUK,QAAQF,EAAQ,CAAChB,EAAUiB,GAC7C,EACAT,EAAcD,eAAiB,0CAU/B,MAAMY,EAAgB,SAAwBC,GAC7C,GAAID,EAAcE,eAAeD,GAAQ,SAAAE,EAAAC,UAAAnB,OADsBoB,EAAK,IAAAC,MAAAH,EAAA,EAAAA,EAAA,KAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAA,CAALF,EAAKE,EAAA,GAAAH,UAAAG,EAAA,CAEnE,OAAQP,EAAsDC,GAAOO,MAAMC,KAAMJ,EAClF,KAAO,CACN,MAAO,EACR,CACD,EAEAL,EAAcpB,YAAcA,EAC5BoB,EAAcX,cAAgBA,EAAc,OAE7BW,CAAa","ignoreList":[]}