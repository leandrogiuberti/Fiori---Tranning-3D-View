{"version":3,"file":"library-preload.designtime.js","sections":[{"offset":{"line":1,"column":0},"map":{"version":3,"names":["resourceBundleDesigntime","Lib","getResourceBundleFor","getText","key","_exports","TEXT_ARRANGEMENT_LABELS","filterPropertyWithTextAnnotation","prop","annotations","Common","Text","undefined","hasCurrency","hasUnit","isCurrency","isUnit","_collectProperties","entityType","properties","filterFn","visitedEntity","fullyQualifiedName","push","entityProperties","filter","UI","Hidden","valueOf","targetType","map","property","collectProperties","templateComponent","control","metaModel","getMetaModel","contextPathToUse","getFullContextPath","buildingBlock","isA","getParent","metaPath","getProperty","targetEntity","MetaPath","convertTypes","e","Log","warning","getClosestEntityType","getTargetPropertyFromFormElement","oControl","targetProperty","fields","getFields","length","targetObject","getMainPropertyRelativePath","getRenameAction","isAtElementLevel","arguments","changeType","title","icon","singleRename","controlBasedRenameChangeType","type","AnnotationTypes","StringType","delegate","getAnnotationsChangeInfo","_annotation","Component","getOwnerComponentFor","view","CommonUtils","getTargetView","getController","getOwnerComponent","targetPropertyPath","find","name","serviceUrl","getModel","getServiceUrl","propertyName","annotationPath","currentValue","Label","toString","possibleValues","preSelectedProperty","getTextArrangementChangeAction","ValueListType","defaultType","TextArrangement","Object","keys","sKey","text"],"sources":["./AnnotationBasedChanges.ts"],"sourcesContent":["import type { EntityType, Property } from \"@sap-ux/vocabularies-types\";\nimport { TextArrangementType } from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport Log from \"sap/base/Log\";\nimport type TemplateComponent from \"sap/fe/core/TemplateComponent\";\nimport type BuildingBlock from \"sap/fe/core/buildingBlocks/BuildingBlock\";\nimport { convertTypes } from \"sap/fe/core/converters/MetaModelConverter\";\nimport MetaPath from \"sap/fe/core/helpers/MetaPath\";\nimport type ManagedObject from \"sap/ui/base/ManagedObject\";\nimport Component from \"sap/ui/core/Component\";\nimport Lib from \"sap/ui/core/Lib\";\nimport type ODataModel from \"sap/ui/model/odata/v4/ODataModel\";\n// OK since we are in designtime we can ignore that dependency\nimport { hasCurrency, hasUnit, isCurrency, isUnit } from \"sap/fe/core/templating/PropertyHelper\";\nimport type Field from \"sap/fe/macros/Field\";\nimport type FormElement from \"sap/ui/layout/form/FormElement\";\n// eslint-disable-next-line @typescript-eslint/no-restricted-imports\nimport CommonUtils from \"sap/fe/core/CommonUtils\";\nimport AnnotationTypes from \"sap/ui/rta/plugin/annotations/AnnotationTypes\";\n\nconst resourceBundleDesigntime = Lib.getResourceBundleFor(\"sap.fe.core.designtime\")!;\n\nexport const getText = function (key: string): string {\n\treturn resourceBundleDesigntime.getText(key);\n};\n\ntype AnnotationChangeReturnType = {\n\tserviceUrl: string | undefined;\n\tproperties: {\n\t\tpropertyName: string;\n\t\tannotationPath: string;\n\t\tcurrentValue: string;\n\t}[];\n\tpossibleValues: { key: string; text: string }[];\n\tpreSelectedProperty: string; // if the action is triggered from a control that corresponds to a property, only this one will be shown in the Dialog initially (search field populated with this string)\n};\n\nconst TEXT_ARRANGEMENT_LABELS = {\n\t[TextArrangementType.TextOnly]: \"Text Only\",\n\t[TextArrangementType.TextFirst]: \"Text First\",\n\t[TextArrangementType.TextLast]: \"Text Last\",\n\t[TextArrangementType.TextSeparate]: \"ID Only\"\n};\n\nfunction filterPropertyWithTextAnnotation(prop: Property): boolean {\n\treturn prop.annotations.Common?.Text !== undefined && !hasCurrency(prop) && !hasUnit(prop) && !isCurrency(prop) && !isUnit(prop);\n}\n\n/**\n * Collects all properties with a Text annotation from the given entity type and its navigation properties.\n * @param entityType The entity type to start with\n * @param properties The array to collect the properties in\n * @param filterFn A filter function to determine which properties to collect\n * @param visitedEntity A map to keep track of visited entities\n */\nfunction _collectProperties(\n\tentityType: EntityType,\n\tproperties: { property: Property; entityType: EntityType }[],\n\tfilterFn: (prop: Property) => boolean,\n\tvisitedEntity: Record<string, boolean>\n): void {\n\tif (visitedEntity[entityType.fullyQualifiedName]) {\n\t\treturn;\n\t}\n\tvisitedEntity[entityType.fullyQualifiedName] = true;\n\tproperties.push(\n\t\t...entityType.entityProperties\n\t\t\t.filter(filterFn)\n\t\t\t.filter((prop) => {\n\t\t\t\t// Always filter out UI.Hidden = true\n\t\t\t\t// Always filter out complex type\n\t\t\t\tif (prop.annotations.UI?.Hidden?.valueOf() === true || !!prop.targetType) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t})\n\t\t\t.map((prop: Property) => {\n\t\t\t\treturn {\n\t\t\t\t\tproperty: prop,\n\t\t\t\t\tentityType: entityType\n\t\t\t\t};\n\t\t\t})\n\t);\n}\n\nfunction collectProperties(\n\ttemplateComponent: TemplateComponent,\n\tcontrol: ManagedObject,\n\tfilterFn: (prop: Property) => boolean\n): { property: Property; entityType: EntityType }[] | null {\n\tconst metaModel = templateComponent.getMetaModel();\n\tconst contextPathToUse = templateComponent.getFullContextPath();\n\t// Find closest building block\n\tlet buildingBlock: ManagedObject | null = control;\n\twhile (buildingBlock && !buildingBlock.isA<BuildingBlock>(\"sap.fe.core.buildingBlocks.BuildingBlock\")) {\n\t\tbuildingBlock = buildingBlock.getParent();\n\t}\n\tlet metaPath = contextPathToUse!;\n\tif (buildingBlock) {\n\t\tmetaPath = buildingBlock.getProperty(\"metaPath\") ?? contextPathToUse;\n\t}\n\tconst properties: { property: Property; entityType: EntityType }[] = [];\n\tif (metaModel && contextPathToUse) {\n\t\tlet targetEntity: MetaPath<EntityType>;\n\t\ttry {\n\t\t\ttargetEntity = new MetaPath(convertTypes(metaModel), metaPath, contextPathToUse);\n\t\t} catch (e) {\n\t\t\tLog.warning(`No metamodel or metaPath is not reachable with ${metaPath} and ${contextPathToUse}`);\n\t\t\treturn null;\n\t\t}\n\n\t\tconst visitedEntity: Record<string, boolean> = {};\n\t\t// Collect all properties, don't apply filters\n\t\t_collectProperties(targetEntity.getClosestEntityType(), properties, filterFn, visitedEntity);\n\t}\n\treturn properties;\n}\n\nexport function getTargetPropertyFromFormElement(oControl: ManagedObject): string | undefined {\n\tlet targetProperty;\n\tif (oControl.isA<FormElement>(\"sap.ui.layout.form.FormElement\")) {\n\t\tconst fields = oControl.getFields();\n\t\tif (fields?.length > 0 && fields[0].isA<Field>(\"sap.fe.macros.Field\")) {\n\t\t\tconst targetObject = fields[0];\n\t\t\ttargetProperty = targetObject.getMainPropertyRelativePath();\n\t\t}\n\t}\n\treturn targetProperty;\n}\n\nexport function getRenameAction(isAtElementLevel = false): {\n\tchangeType: string;\n\tsingleRename: boolean;\n\tcontrolBasedRenameChangeType: string;\n\ttitle: () => string;\n\ticon: string;\n\ttype: string;\n\tdelegate: { getAnnotationsChangeInfo: (oControl: ManagedObject, _annotation: string) => AnnotationChangeReturnType | null };\n} {\n\treturn {\n\t\tchangeType: \"renameLabel\",\n\t\ttitle: (): string => (isAtElementLevel ? getText(\"RTA_CONTEXT_ACTIONMENU_RENAME\") : getText(\"RTA_CONTEXT_ACTIONMENU_CHANGELABELS\")),\n\t\ticon: \"sap-icon://edit\",\n\t\tsingleRename: isAtElementLevel,\n\t\tcontrolBasedRenameChangeType: \"renameField\",\n\t\ttype: AnnotationTypes.StringType,\n\t\tdelegate: {\n\t\t\tgetAnnotationsChangeInfo: (oControl: ManagedObject, _annotation: string): AnnotationChangeReturnType | null => {\n\t\t\t\tlet templateComponent = Component.getOwnerComponentFor(oControl) as TemplateComponent | undefined;\n\t\t\t\tif (!templateComponent) {\n\t\t\t\t\tconst view = CommonUtils.getTargetView(oControl);\n\t\t\t\t\ttemplateComponent = view?.getController().getOwnerComponent() as TemplateComponent | undefined;\n\t\t\t\t}\n\t\t\t\tif (templateComponent) {\n\t\t\t\t\tlet targetProperty: Property | undefined;\n\t\t\t\t\tconst properties = collectProperties(templateComponent, oControl, () => true);\n\t\t\t\t\tconst targetPropertyPath = getTargetPropertyFromFormElement(oControl);\n\t\t\t\t\tif (targetPropertyPath) {\n\t\t\t\t\t\ttargetProperty = properties?.find((prop) => {\n\t\t\t\t\t\t\treturn prop.property.name === targetPropertyPath;\n\t\t\t\t\t\t})?.property;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (properties && properties.length > 0) {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tserviceUrl: (oControl.getModel() as ODataModel | undefined)?.getServiceUrl(),\n\t\t\t\t\t\t\tproperties: properties.map((prop: { property: Property; entityType: EntityType }) => {\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\tpropertyName: `${prop.property.name}`,\n\t\t\t\t\t\t\t\t\tannotationPath:\n\t\t\t\t\t\t\t\t\t\t\"/\" +\n\t\t\t\t\t\t\t\t\t\tprop.entityType.fullyQualifiedName +\n\t\t\t\t\t\t\t\t\t\t\"/\" +\n\t\t\t\t\t\t\t\t\t\tprop.property.name +\n\t\t\t\t\t\t\t\t\t\t\"@com.sap.vocabularies.Common.v1.Label\",\n\t\t\t\t\t\t\t\t\tcurrentValue: prop.property.annotations.Common?.Label?.toString() ?? prop.property.name\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tpossibleValues: [],\n\t\t\t\t\t\t\tpreSelectedProperty: targetProperty\n\t\t\t\t\t\t\t\t? \"/\" + targetProperty.fullyQualifiedName + \"@com.sap.vocabularies.Common.v1.Label\"\n\t\t\t\t\t\t\t\t: \"\" // if the action is triggered from a control that corresponds to a property, only this one will be shown in the Dialog initially (search field populated with this string)\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t};\n}\n\nexport function getTextArrangementChangeAction(key = \"RTA_CONTEXT_ACTIONMENU_TEXTARRANGE\"): {\n\tchangeType: string;\n\ttitle: () => string;\n\ttype: string;\n\tdelegate: { getAnnotationsChangeInfo: (oControl: ManagedObject, _annotation: string) => AnnotationChangeReturnType | null };\n} {\n\treturn {\n\t\tchangeType: \"textArrangement_Test\",\n\t\ttitle: (): string => getText(key),\n\t\ttype: AnnotationTypes.ValueListType,\n\t\tdelegate: {\n\t\t\tgetAnnotationsChangeInfo: (oControl: ManagedObject, _annotation: string): AnnotationChangeReturnType | null => {\n\t\t\t\tlet templateComponent = Component.getOwnerComponentFor(oControl) as TemplateComponent | undefined;\n\t\t\t\tif (!templateComponent) {\n\t\t\t\t\tconst view = CommonUtils.getTargetView(oControl);\n\t\t\t\t\ttemplateComponent = view?.getController().getOwnerComponent() as TemplateComponent | undefined;\n\t\t\t\t}\n\t\t\t\tif (templateComponent) {\n\t\t\t\t\tconst properties = collectProperties(templateComponent, oControl, filterPropertyWithTextAnnotation);\n\t\t\t\t\tif (properties && properties.length > 0) {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tserviceUrl: (oControl.getModel() as ODataModel | undefined)?.getServiceUrl(),\n\t\t\t\t\t\t\tproperties: properties.map((prop: { property: Property; entityType: EntityType }) => {\n\t\t\t\t\t\t\t\tconst defaultType =\n\t\t\t\t\t\t\t\t\tprop.entityType.annotations.UI?.TextArrangement?.toString() ?? TextArrangementType.TextFirst.toString();\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\tpropertyName: prop.property.annotations.Common?.Label?.toString() ?? prop.property.name,\n\t\t\t\t\t\t\t\t\tannotationPath:\n\t\t\t\t\t\t\t\t\t\t\"/\" +\n\t\t\t\t\t\t\t\t\t\tprop.entityType.fullyQualifiedName +\n\t\t\t\t\t\t\t\t\t\t\"/\" +\n\t\t\t\t\t\t\t\t\t\tprop.property.name +\n\t\t\t\t\t\t\t\t\t\t\"@com.sap.vocabularies.Common.v1.Text@com.sap.vocabularies.UI.v1.TextArrangement\",\n\t\t\t\t\t\t\t\t\tcurrentValue:\n\t\t\t\t\t\t\t\t\t\tprop.property.annotations.Common?.Text?.annotations?.UI?.TextArrangement?.toString() ?? defaultType\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tpossibleValues: Object.keys(TEXT_ARRANGEMENT_LABELS).map((sKey) => ({\n\t\t\t\t\t\t\t\tkey: sKey,\n\t\t\t\t\t\t\t\ttext: TEXT_ARRANGEMENT_LABELS[sKey as unknown as keyof typeof TEXT_ARRANGEMENT_LABELS]\n\t\t\t\t\t\t\t})),\n\t\t\t\t\t\t\tpreSelectedProperty: \"\" // if the action is triggered from a control that corresponds to a property, only this one will be shown in the Dialog initially (search field populated with this string)\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t};\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":""}},{"offset":{"line":6,"column":0},"map":{"version":3,"names":["urlParams","URLSearchParams","window","location","search","fioriToolsRtaMode","get","toLowerCase","getAllowList","element","allowList","elementName","getMetadata","getName","getParent","getId","includes","getExtensionAPI","appComponent","rootViewController","getRootViewController","appContentContainer","getAppContentContainer","isA","currentPage","getCurrentPage","currentView","getViewFromContainer","undefined","controller","getController","getCurrentBeginColumnPage","_exports","AppComponentDesignTime","actions","aggregations","rootControl","propagateMetadata","tool","start","setAdaptationMode","getEnvironmentCapabilities","setCapability","stop","versionWasActivated","AppStateHandler","setRTAVersionWasActivated","extensionAPI","updateAppState"],"sources":["./AppComponent.designtime.ts"],"sourcesContent":["import type FlexibleColumnLayout from \"sap/f/FlexibleColumnLayout\";\nimport type NavContainer from \"sap/m/NavContainer\";\nimport type ManagedObject from \"sap/ui/base/ManagedObject\";\nimport type AppComponent from \"../AppComponent\";\nimport type { VersionActivated } from \"../AppStateHandler\";\nimport AppStateHandler from \"../AppStateHandler\";\nimport type ExtensionAPI from \"../ExtensionAPI\";\nimport type PageController from \"../PageController\";\n\nconst urlParams = new URLSearchParams(window.location.search);\nconst fioriToolsRtaMode: boolean = urlParams.get(\"fiori-tools-rta-mode\")?.toLowerCase() === \"true\";\n\nconst getAllowList = function (element: ManagedObject): Record<string, boolean> {\n\tlet allowList: Record<string, boolean> = {};\n\tconst elementName = element.getMetadata().getName();\n\tif (fioriToolsRtaMode) {\n\t\t// build the allow list for Fiori tools (developers)\n\t\tallowList = {\n\t\t\t\"sap.fe.macros.controls.FilterBar\": true,\n\t\t\t\"sap.ui.fl.variants.VariantManagement\": true,\n\t\t\t\"sap.ui.mdc.Table\": true\n\t\t};\n\t} else {\n\t\t// build the allow list for UI Adaptation (key users)\n\t\tallowList = {\n\t\t\t\"sap.fe.macros.controls.FilterBar\": true,\n\t\t\t\"sap.fe.templates.ObjectPage.controls.StashableHBox\": true,\n\t\t\t\"sap.fe.templates.ObjectPage.controls.StashableVBox\": true,\n\t\t\t\"sap.m.IconTabBar\": true,\n\t\t\t\"sap.ui.fl.util.IFrame\": true,\n\t\t\t\"sap.ui.fl.variants.VariantManagement\": true,\n\t\t\t\"sap.ui.layout.form.Form\": true,\n\t\t\t\"sap.ui.layout.form.FormContainer\": true,\n\t\t\t\"sap.ui.layout.form.FormElement\": true,\n\t\t\t\"sap.ui.mdc.Table\": true,\n\t\t\t\"sap.uxap.AnchorBar\": true,\n\t\t\t\"sap.m.IconTabHeader\": true,\n\t\t\t\"sap.uxap.ObjectPageLayout\": true,\n\t\t\t\"sap.fe.macros.controls.Section\": true,\n\t\t\t\"sap.fe.macros.controls.section.SubSection\": true,\n\t\t\t\"sap.uxap.ObjectPageSection\": true,\n\t\t\t\"sap.uxap.ObjectPageSubSection\": true,\n\t\t\t\"sap.f.DynamicPage\": true,\n\t\t\t\"sap.uxap.ObjectPageDynamicHeaderTitle\": true,\n\t\t\t\"sap.m.OverflowToolbar\": true,\n\t\t\t\"sap.m.ToggleButton\": true,\n\t\t\t\"sap.m.Button\": true,\n\t\t\t\"sap.m.MenuButton\": true,\n\t\t\t\"sap.ui.mdc.actiontoolbar.ActionToolbarAction\": true,\n\t\t\t\"sap.ui.mdc.ActionToolbar\": true,\n\t\t\t\"sap.f.DynamicPageTitle\": true\n\t\t};\n\t\t// currently we support the adaptation of IconTabfilter only for the IconTabHeader on Object Page (adaptation of sections and subsections)\n\t\tif (elementName === \"sap.m.IconTabFilter\" && element.getParent()?.getMetadata().getName() === \"sap.m.IconTabHeader\") {\n\t\t\tallowList[\"sap.m.IconTabFilter\"] = true;\n\t\t}\n\t\tif (elementName === \"sap.m.FlexBox\" && element.getId().includes(\"--fe::HeaderContentContainer\")) {\n\t\t\tallowList[\"sap.m.FlexBox\"] = true;\n\t\t}\n\t}\n\treturn allowList;\n};\n\n/**\n * Retrieves the Extension API for the current page from the provided app component.\n * If the current view or controller does not provide an Extension API, the function will either return `undefined` or throw an error.\n * @param appComponent An instance of the app component or page controller from which to retrieve the Extension API.\n * @returns The Extension API for the current page, or `undefined` if it cannot be retrieved.\n * @throws {Error} If the controller does not expose the `getExtensionAPI` method.\n */\nexport function getExtensionAPI(appComponent: PageController | AppComponent): ExtensionAPI | undefined {\n\tif (appComponent) {\n\t\tconst rootViewController = (appComponent as AppComponent).getRootViewController();\n\n\t\tconst appContentContainer = rootViewController.getAppContentContainer();\n\t\tif (appContentContainer?.isA<NavContainer>(\"sap.m.NavContainer\")) {\n\t\t\tconst currentPage = appContentContainer.getCurrentPage();\n\n\t\t\tconst currentView = rootViewController.getViewFromContainer(currentPage);\n\t\t\tif (!currentView) return undefined;\n\n\t\t\tconst controller = currentView.getController() as PageController;\n\t\t\tif (controller.getExtensionAPI) {\n\t\t\t\treturn controller.getExtensionAPI();\n\t\t\t}\n\t\t} else if (appContentContainer?.isA<FlexibleColumnLayout>(\"sap.f.FlexibleColumnLayout\")) {\n\t\t\tconst currentPage = appContentContainer.getCurrentBeginColumnPage();\n\n\t\t\tconst currentView = rootViewController.getViewFromContainer(currentPage);\n\t\t\tif (!currentView) return undefined;\n\n\t\t\tconst controller = currentView.getController() as PageController;\n\t\t\tif (controller.getExtensionAPI) {\n\t\t\t\treturn controller.getExtensionAPI();\n\t\t\t}\n\t\t}\n\t}\n\n\t// To handle cases where `appComponent` is undefined, you may explicitly return undefined.\n\treturn undefined;\n}\n\n// To enable all actions, remove the propagateMetadata function. Or, remove this file and its entry in AppComponent.js referring 'designTime'.\nconst AppComponentDesignTime = {\n\tactions: \"not-adaptable\",\n\taggregations: {\n\t\trootControl: {\n\t\t\tactions: \"not-adaptable\",\n\t\t\tpropagateMetadata: function (element: ManagedObject): { actions?: string } {\n\t\t\t\tconst allowList = getAllowList(element);\n\t\t\t\tif (allowList[element.getMetadata().getName()]) {\n\t\t\t\t\t// by returning the empty object, the same will be merged with element's native designtime definition, i.e. all actions will be enabled for this element\n\t\t\t\t\treturn {};\n\t\t\t\t} else {\n\t\t\t\t\t// not-adaptable will be interpreted by flex to disable all actions for this element\n\t\t\t\t\treturn {\n\t\t\t\t\t\tactions: \"not-adaptable\"\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\ttool: {\n\t\tstart: function (appComponent: AppComponent): void {\n\t\t\tappComponent.setAdaptationMode(true);\n\t\t\tappComponent.getEnvironmentCapabilities().setCapability(\"AppState\", false);\n\t\t},\n\t\tstop: function (appComponent: AppComponent, versionWasActivated: VersionActivated): void {\n\t\t\tappComponent.setAdaptationMode(false);\n\t\t\tappComponent.getEnvironmentCapabilities().setCapability(\"AppState\", true);\n\n\t\t\tAppStateHandler.setRTAVersionWasActivated(appComponent.getId(), versionWasActivated?.versionWasActivated ?? false);\n\t\t\t// Access the extension API and call updateAppState()\n\t\t\tconst extensionAPI = getExtensionAPI(appComponent);\n\t\t\textensionAPI?.updateAppState();\n\t\t}\n\t}\n};\n\nexport default AppComponentDesignTime;\n"],"mappings":"AAAA;;;;4HASA,MAAMA,EAAY,IAAIC,gBAAgBC,OAAOC,SAASC,QACtD,MAAMC,EAA6BL,EAAUM,IAAI,yBAAyBC,gBAAkB,OAE5F,MAAMC,EAAe,SAAUC,GAC9B,IAAIC,EAAqC,CAAC,EAC1C,MAAMC,EAAcF,EAAQG,cAAcC,UAC1C,GAAIR,EAAmB,CAEtBK,EAAY,CACX,mCAAoC,KACpC,uCAAwC,KACxC,mBAAoB,KAEtB,KAAO,CAENA,EAAY,CACX,mCAAoC,KACpC,qDAAsD,KACtD,qDAAsD,KACtD,mBAAoB,KACpB,wBAAyB,KACzB,uCAAwC,KACxC,0BAA2B,KAC3B,mCAAoC,KACpC,iCAAkC,KAClC,mBAAoB,KACpB,qBAAsB,KACtB,sBAAuB,KACvB,4BAA6B,KAC7B,iCAAkC,KAClC,4CAA6C,KAC7C,6BAA8B,KAC9B,gCAAiC,KACjC,oBAAqB,KACrB,wCAAyC,KACzC,wBAAyB,KACzB,qBAAsB,KACtB,eAAgB,KAChB,mBAAoB,KACpB,+CAAgD,KAChD,2BAA4B,KAC5B,yBAA0B,MAG3B,GAAIC,IAAgB,uBAAyBF,EAAQK,aAAaF,cAAcC,YAAc,sBAAuB,CACpHH,EAAU,uBAAyB,IACpC,CACA,GAAIC,IAAgB,iBAAmBF,EAAQM,QAAQC,SAAS,gCAAiC,CAChGN,EAAU,iBAAmB,IAC9B,CACD,CACA,OAAOA,CACR,EASO,SAASO,EAAgBC,GAC/B,GAAIA,EAAc,CACjB,MAAMC,EAAsBD,EAA8BE,wBAE1D,MAAMC,EAAsBF,EAAmBG,yBAC/C,GAAID,GAAqBE,IAAkB,sBAAuB,CACjE,MAAMC,EAAcH,EAAoBI,iBAExC,MAAMC,EAAcP,EAAmBQ,qBAAqBH,GAC5D,IAAKE,EAAa,OAAOE,UAEzB,MAAMC,EAAaH,EAAYI,gBAC/B,GAAID,EAAWZ,gBAAiB,CAC/B,OAAOY,EAAWZ,iBACnB,CACD,MAAO,GAAII,GAAqBE,IAA0B,8BAA+B,CACxF,MAAMC,EAAcH,EAAoBU,4BAExC,MAAML,EAAcP,EAAmBQ,qBAAqBH,GAC5D,IAAKE,EAAa,OAAOE,UAEzB,MAAMC,EAAaH,EAAYI,gBAC/B,GAAID,EAAWZ,gBAAiB,CAC/B,OAAOY,EAAWZ,iBACnB,CACD,CACD,CAGA,OAAOW,SACR,CAEAI,EAAAf,kBACA,MAAMgB,EAAyB,CAC9BC,QAAS,gBACTC,aAAc,CACbC,YAAa,CACZF,QAAS,gBACTG,kBAAmB,SAAU5B,GAC5B,MAAMC,EAAYF,EAAaC,GAC/B,GAAIC,EAAUD,EAAQG,cAAcC,WAAY,CAE/C,MAAO,CAAC,CACT,KAAO,CAEN,MAAO,CACNqB,QAAS,gBAEX,CACD,IAGFI,KAAM,CACLC,MAAO,SAAUrB,GAChBA,EAAasB,kBAAkB,MAC/BtB,EAAauB,6BAA6BC,cAAc,WAAY,MACrE,EACAC,KAAM,SAAUzB,EAA4B0B,GAC3C1B,EAAasB,kBAAkB,OAC/BtB,EAAauB,6BAA6BC,cAAc,WAAY,MAEpEG,EAAgBC,0BAA0B5B,EAAaH,QAAS6B,GAAqBA,qBAAuB,OAE5G,MAAMG,EAAe9B,EAAgBC,GACrC6B,GAAcC,gBACf,IAEA,OAEaf,CAAsB","ignoreList":[],"sourceRoot":""}}]}