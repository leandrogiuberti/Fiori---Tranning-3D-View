{"version":3,"file":"Date.js","names":["DateType","_dec","defineUI5Class","_class","_CompositeType","oFormatOptions","oConstraints","_this","call","this","bParseWithValues","date","ODataDateType","bUseRawValues","_inheritsLoose","_proto","prototype","validateValue","aValues","coreResourceBundle","Library","getResourceBundleFor","Date","parse","ValidateException","getText","formatValue","value","sInternalType","parseValue","CompositeType"],"sources":["./Date.ts"],"sourcesContent":["import { defineUI5Class } from \"sap/fe/base/ClassSupport\";\nimport Library from \"sap/ui/core/Lib\";\nimport type UI5Date from \"sap/ui/core/date/UI5Date\";\nimport CompositeType from \"sap/ui/model/CompositeType\";\nimport ValidateException from \"sap/ui/model/ValidateException\";\nimport ODataDateType from \"sap/ui/model/odata/type/Date\";\n\n/**\n * Define the UI5 class for a type of date picker validation.\n *\n */\n@defineUI5Class(\"sap.fe.core.type.Date\")\nclass DateType extends CompositeType {\n\tbParseWithValues: boolean;\n\n\tbUseRawValues: boolean;\n\n\tdate: ODataDateType;\n\n\tconstructor(oFormatOptions: object, oConstraints: object) {\n\t\tsuper(oFormatOptions, oConstraints);\n\t\tthis.bParseWithValues = true;\n\t\tthis.date = new ODataDateType();\n\t\tthis.bUseRawValues = true;\n\t}\n\n\t/**\n\t * Validate the input value whether it fall in the min and max range or not.\n\t * @param aValues String array with input value and minimum and maximum value.\n\t */\n\tpublic validateValue(aValues: string[]): void {\n\t\tconst coreResourceBundle = Library.getResourceBundleFor(\"sap.fe.core\")!;\n\n\t\tif (aValues[0]) {\n\t\t\tif (aValues[1]) {\n\t\t\t\tif (Date.parse(aValues[0]) < Date.parse(aValues[1])) {\n\t\t\t\t\tthrow new ValidateException(coreResourceBundle.getText(\"C_ERROR_MINMAX_VALIDATION_DISPLAYED\"));\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (aValues[2]) {\n\t\t\t\tif (Date.parse(aValues[0]) > Date.parse(aValues[2])) {\n\t\t\t\t\tthrow new ValidateException(coreResourceBundle.getText(\"C_ERROR_MINMAX_VALIDATION_DISPLAYED\"));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis.date.validateValue(aValues[0]);\n\t}\n\n\t/**\n\t * Formats the input value.\n\t * @param value String array with input value and date range values.\n\t * @param sInternalType Represents type of the value.\n\t * @returns String | Date | UI5Date Returns the value from the extended Date function.\n\t */\n\tpublic formatValue(value: string[], sInternalType: string): string | Date | UI5Date {\n\t\treturn this.date.formatValue(value[0], sInternalType);\n\t}\n\n\t/**\n\t * Parses the input value.\n\t * @param value String with input value.\n\t * @param sInternalType Represents type of the value.\n\t * @returns String[] | Date | UI5Date Returns the value from the extended Date function.\n\t */\n\tpublic parseValue(value: string | Date, sInternalType: string): string[] | Date | UI5Date {\n\t\treturn [this.date.parseValue(value, sInternalType)];\n\t}\n}\n\nexport default DateType;\n"],"mappings":";;;;2aAOA,IAKMA,GAAQC,EADbC,EAAe,yBAAwBD,EAAAE,EAAA,SAAAC,GAQvC,SAAAJ,EAAYK,EAAwBC,GAAsB,IAAAC,EACzDA,EAAAH,EAAAI,KAAAC,KAAMJ,EAAgBC,IAAaG,KACnCF,EAAKG,iBAAmB,KACxBH,EAAKI,KAAO,IAAIC,EAChBL,EAAKM,cAAgB,KAAK,OAAAN,CAC3B,CAEAO,EAAAd,EAAAI,GAAA,IAAAW,EAAAf,EAAAgB,UAAAD,EAIOE,cAAP,SAAOA,EAAcC,GACpB,MAAMC,EAAqBC,EAAQC,qBAAqB,eAExD,GAAIH,EAAQ,GAAI,CACf,GAAIA,EAAQ,GAAI,CACf,GAAII,KAAKC,MAAML,EAAQ,IAAMI,KAAKC,MAAML,EAAQ,IAAK,CACpD,MAAM,IAAIM,EAAkBL,EAAmBM,QAAQ,uCACxD,CACD,CACA,GAAIP,EAAQ,GAAI,CACf,GAAII,KAAKC,MAAML,EAAQ,IAAMI,KAAKC,MAAML,EAAQ,IAAK,CACpD,MAAM,IAAIM,EAAkBL,EAAmBM,QAAQ,uCACxD,CACD,CACD,CACAhB,KAAKE,KAAKM,cAAcC,EAAQ,GACjC,EAEAH,EAMOW,YAAP,SAAOA,EAAYC,EAAiBC,GACnC,OAAOnB,KAAKE,KAAKe,YAAYC,EAAM,GAAIC,EACxC,EAEAb,EAMOc,WAAP,SAAOA,EAAWF,EAAsBC,GACvC,MAAO,CAACnB,KAAKE,KAAKkB,WAAWF,EAAOC,GACrC,EAAC,OAAA5B,CAAA,CAvDsC,CACjB8B,KAAa3B,GAAA,OAyDrBH,CAAQ","ignoreList":[]}