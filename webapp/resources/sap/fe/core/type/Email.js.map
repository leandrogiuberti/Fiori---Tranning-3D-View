{"version":3,"file":"Email.js","names":["emailW3CRegexpLocalPart","emailW3CRegexpSubDomainPart","EmailType","_dec","defineUI5Class","_class","_ODataStringType","apply","this","arguments","_inheritsLoose","_proto","prototype","validateValue","value","emailParts","split","emailLocalPart","emailDomainPart","test","every","subDomain","length","ValidateException","Library","getResourceBundleFor","getText","call","ODataStringType"],"sources":["./Email.ts"],"sourcesContent":["import { defineUI5Class } from \"sap/fe/base/ClassSupport\";\nimport Library from \"sap/ui/core/Lib\";\nimport ODataStringType from \"sap/ui/model/odata/type/String\";\nimport ValidateException from \"sap/ui/model/ValidateException\";\n\n// To prevent Catastrophic Backtracking, the email validation is done using the W3C standard\n// we split the email into local part and domain part to validate them separately and reduce the complexity of the regex\n// Below is the RFC 3696 – Section 3:\n// In addition to restrictions on syntax, there is a length limit on email addresses.\n// That limit is a maximum of 64 characters(octets) in the « local part » (before the « @ ») and a maximum of 255 characters(octets) in the domain part(after the « @ ») for a total length of 320 characters.\n// Systems that handle email should be prepared to process addresses which are that long, even though they are rarely encountered\n\nconst emailW3CRegexpLocalPart = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]{1,64}/; // local part before the @\nconst emailW3CRegexpSubDomainPart = /[a-zA-Z0-9-]{1,255}/; // domain part after the @ but without the dot\n\n@defineUI5Class(\"sap.fe.core.type.Email\")\nclass EmailType extends ODataStringType {\n\tvalidateValue(value: string): void {\n\t\tconst emailParts = value.split(\"@\");\n\t\tconst emailLocalPart = emailParts?.[0];\n\t\tconst emailDomainPart = emailParts?.[1];\n\t\tif (\n\t\t\tvalue &&\n\t\t\t(!emailLocalPart ||\n\t\t\t\t!emailDomainPart ||\n\t\t\t\t!emailW3CRegexpLocalPart.test(emailLocalPart) ||\n\t\t\t\t!emailDomainPart.split(\".\").every((subDomain) => emailW3CRegexpSubDomainPart.test(subDomain)) ||\n\t\t\t\temailParts.length !== 2)\n\t\t) {\n\t\t\tthrow new ValidateException(Library.getResourceBundleFor(\"sap.fe.core\")!.getText(\"T_EMAILTYPE_INVALID_VALUE\"));\n\t\t}\n\t\tsuper.validateValue(value);\n\t}\n}\nexport default EmailType;\n"],"mappings":";;;;8YAYA,MAAMA,EAA0B,yCAChC,MAAMC,EAA8B,sBAAuB,IAGrDC,GAASC,EADdC,EAAe,0BAAyBD,EAAAE,EAAA,SAAAC,GAAA,SAAAJ,IAAA,OAAAI,EAAAC,MAAAC,KAAAC,YAAAD,IAAA,CAAAE,EAAAR,EAAAI,GAAA,IAAAK,EAAAT,EAAAU,UAAAD,EAExCE,cAAA,SAAAA,EAAcC,GACb,MAAMC,EAAaD,EAAME,MAAM,KAC/B,MAAMC,EAAiBF,IAAa,GACpC,MAAMG,EAAkBH,IAAa,GACrC,GACCD,KACEG,IACAC,IACAlB,EAAwBmB,KAAKF,KAC7BC,EAAgBF,MAAM,KAAKI,MAAOC,GAAcpB,EAA4BkB,KAAKE,KAClFN,EAAWO,SAAW,GACtB,CACD,MAAM,IAAIC,EAAkBC,EAAQC,qBAAqB,eAAgBC,QAAQ,6BAClF,CACApB,EAAAM,UAAMC,cAAac,KAAAnB,KAACM,EACrB,EAAC,OAAAZ,CAAA,CAjBuC,CACjB0B,KAAevB,GAAA,OAkBxBH,CAAS","ignoreList":[]}