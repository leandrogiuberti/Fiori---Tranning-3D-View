{"version":3,"names":["TemplateContentView","CoreLibrary","InitialLoadMode","AnalyticalPageController","_dec","defineUI5Class","_dec2","usingExtension","InternalIntentBasedNavigation","override","getEntitySet","base","getCurrentEntitySet","_dec3","SideEffects","SideEffectsOverride","_dec4","KPIManagement","_dec5","Placeholder","_dec6","publicExtension","_dec7","finalExtension","_dec8","privateExtension","_dec9","extensible","_dec10","_dec11","OverrideExecution","After","_dec12","_dec13","_dec14","_dec15","_class","_class2","_PageController","_this","_len","arguments","length","args","Array","_key","call","_initializerDefineProperty","_descriptor","_descriptor2","_descriptor3","_descriptor4","formatters","setALPControlMessageStrip","aIgnoredFields","bIsChart","oApplySupported","sText","oFilterBar","_getFilterBarControl","isArray","aIgnoredLabels","MessageStrip","getLabels","data","getResourceModel","bIsSearchIgnored","enableSearch","getALPText","getText","handlers","onFilterSearch","filterBarAPI","getParent","triggerSearch","onFiltersChanged","oEvent","oInternalModelContext","getView","getBindingContext","onPendingFilters","appliedFiltersText","getAssignedFiltersText","filtersText","appliedFilterBinding","BindingInfo","parse","filterBarHiddenUsed","filterBarHidden","_isFilterBarHidden","byId","bindText","setText","getParameter","setProperty","_storeFilterBarSelectionVariant","onVariantSelected","variantManagement","getSource","currentVariantKey","multiModeControl","_getMultiModeControl","isA","invalidateContent","setFreezeContent","setTimeout","filterBar","dynamicPage","_getDynamicListReportControl","firstEmptyMandatoryField","getFilterItems","find","filterItem","getRequired","getConditions","setHeaderExpanded","_shouldAutoTriggerSearch","_getApplyAutomaticallyOnVariant","getExtensionAPI","updateAppState","onVariantSaved","onSearch","oMdcChart","getChartControl","bHideDraft","FilterUtils","getEditStateIsHideDraft","_updateALPNotApplicableFields","oPageInternalModelContext","sTemplateContentView","getProperty","getPath","Chart","hasPendingChartChanges","Table","hasPendingTableChanges","Device","system","desktop","getHeaderExpanded","StateUtil","retrieveExternalState","then","oExternalState","filterBarConditions","filter","catch","oError","Log","error","getViewData","liveMode","phone","oDynamicPage","_isInitLoadEnabled","setFilterToggleVisibility","onChevronPressNavigateOutBound","oController","sOutboundTarget","oContext","sCreatePath","_intentBasedNavigation","onChartSelectionChanged","getContent","oTable","_getTable","aData","ChartUtils","setChartFilters","rebind","onDynamicPageTitleStateChanged","event","InvisibleMessage","getInstance","announce","InvisibleMessageMode","Assertive","_inheritsLoose","_proto","prototype","extensionAPI","ExtensionAPI","onInit","PageController","apply","_hasMultiVisualizations","alpContentView","_getDefaultPath","Hybrid","getAppComponent","getRouterProxy","waitForRouteMatchBeforeNavigation","_setInitLoad","onExit","destroy","_onAfterBinding","aTables","_getControls","EditState","isEditStateDirty","table","oTableBinding","getRowBinding","tableAPI","refreshTable","getTableDefinition","control","type","getModel","resetChanges","refresh","CommonUtils","_isFclEnabled","sUpdateTimer","fnUpdateTableActions","_updateTableActions","detachDataReceived","attachDataReceived","setEditStateProcessed","internalModelContext","viewId","getId","pageReady","waitFor","_applyAppState","environmentCapabilities","getEnvironmentCapabilities","isInsightsEnabled","onPageReady","getShellServices","setBackNavigation","undefined","_initMultiDimModelChangeHandler","oMultiDimModel","oMultiDimModelChangeHandler","registerMultiDimModel","onViewNeedsRefresh","mParameters","slice","onAfterClear","aIBNActions","forEach","getIBNActions","oActionOperationAvailableMap","JSON","tableDefinition","operationAvailableMap","aSelectedContexts","getSelectedContexts","DeleteHelper","updateDeleteInfoForSelectedContexts","ActionRuntime","setActionEnablement","updateDataFieldForIBNButtonsVisibility","_scrollTablesToRow","sRowPath","TableScroller","scrollTableToRow","_focusSilent","filterField","focusInfo","getFocusInfo","targetInfo","silent","focus","_setInitialFocus","isHeaderExpanded","getShowMessages","setShowMessages","oFilterItem","fieldToFocus","_getFilterBarControlId","focusRow","_getPageTitleInformation","oManifestEntry","getManifestEntry","Promise","resolve","title","subtitle","subTitle","intent","icon","_getDynamicListReportControlId","_getAdaptationFilterBarControl","adaptationFilterBar","getInbuiltFilter","getAppStateHandler","applyAppState","_getSegmentedButton","sControl","sSegmentedButtonId","_getControlFromPageModelProperty","sPath","controlId","_getPageModel","_getVisualFilterBarControl","sVisualFilterBarId","StableIdHelper","generate","_getFilterBarVariantControl","_getIconTabBar","_isMultiMode","oControl","getSelectedInnerControl","content","sKey","aControls","oTabMultiMode","getItems","oItem","getKey","includes","push","oChart","defaultPath","AnalyticalPageTemplating","getDefaultPath","initLoadMode","initialLoad","Enabled","_applyAutomaticallyOnStandardVariant","variantManagementId","getVariantBackReference","getData","registerApplyAutomaticallyOnStandardVariant","bind","_setShareModel","fnGetUser","ObjectPath","get","oShareInfo","bookmarkTitle","document","bookmarkCustomUrl","sHash","hasher","getHash","window","location","href","isShareInJamActive","isJamActive","oTemplatePrivateModel","getOwnerComponent","mCache","ignoredFields","aCharts","sChartEntityPath","sChartEntitySet","sCacheKey","getNotApplicableFilters","hideFilterBar","key","variants","getVariants","currentVariant","variant","executeOnSelect","oVM","Auto","getStandardVariantKey","getCurrentVariantKey","oConditions","startsWith","standardVariant","_updateTable","isTableBound","_updateChart","oInnerChart","getControlDelegate","_getChart","isBound","getBindingInfo","buttonVisible","getSegmentedButton","setVisible","onAfterRendering","sEntitySet","entitySet","setNoData","sv","getSelectionVariant","err","message","Error","String","getFilterBarSelectionVariant","SelectionVariant","_applyDecoratedDescriptor","configurable","enumerable","writable","initializer","Object","getOwnPropertyDescriptor"],"sourceRoot":".","sources":["AnalyticalPageController.controller.ts"],"sourcesContent":["import Log from \"sap/base/Log\";\nimport ObjectPath from \"sap/base/util/ObjectPath\";\nimport type DynamicPage from \"sap/f/DynamicPage\";\nimport type { DynamicPageTitle$StateChangeEvent } from \"sap/f/DynamicPageTitle\";\nimport { defineUI5Class, extensible, finalExtension, privateExtension, publicExtension, usingExtension } from \"sap/fe/base/ClassSupport\";\nimport ActionRuntime from \"sap/fe/core/ActionRuntime\";\nimport CommonUtils from \"sap/fe/core/CommonUtils\";\nimport PageController from \"sap/fe/core/PageController\";\nimport InternalIntentBasedNavigation from \"sap/fe/core/controllerextensions/InternalIntentBasedNavigation\";\nimport type InternalRouting from \"sap/fe/core/controllerextensions/InternalRouting\";\nimport KPIManagement from \"sap/fe/core/controllerextensions/KPIManagement\";\nimport Placeholder from \"sap/fe/core/controllerextensions/Placeholder\";\nimport SideEffects from \"sap/fe/core/controllerextensions/SideEffects\";\nimport type { ListReportDefinition } from \"sap/fe/core/converters/templates/ListReportConverter\";\nimport DeleteHelper from \"sap/fe/core/helpers/DeleteHelper\";\nimport EditState from \"sap/fe/core/helpers/EditState\";\nimport MessageStrip from \"sap/fe/core/helpers/MessageStrip\";\nimport type { InternalModelContext } from \"sap/fe/core/helpers/ModelHelper\";\nimport { getResourceModel } from \"sap/fe/core/helpers/ResourceModelHelper\";\nimport * as StableIdHelper from \"sap/fe/core/helpers/StableIdHelper\";\nimport CoreLibrary from \"sap/fe/core/library\";\nimport type ChartBuildingBlock from \"sap/fe/macros/Chart\";\nimport type ChartDelegate from \"sap/fe/macros/chart/ChartDelegate\";\nimport ChartUtils from \"sap/fe/macros/chart/ChartUtils\";\nimport type FilterBar from \"sap/fe/macros/controls/FilterBar\";\nimport FilterUtils from \"sap/fe/macros/filter/FilterUtils\";\nimport type FilterBarAPI from \"sap/fe/macros/filterBar/FilterBarAPI\";\nimport type TableAPI from \"sap/fe/macros/table/TableAPI\";\nimport SelectionVariant from \"sap/fe/navigation/SelectionVariant\";\nimport ExtensionAPI from \"sap/fe/templates/ListReport/ExtensionAPI\";\nimport type MultipleModeControl from \"sap/fe/templates/ListReport/controls/MultipleModeControl\";\nimport SideEffectsOverride from \"sap/fe/templates/ListReport/overrides/SideEffects\";\nimport TableScroller from \"sap/fe/templates/TableScroller\";\nimport type IconTabBar from \"sap/m/IconTabBar\";\nimport type TabContainerItem from \"sap/m/TabContainerItem\";\nimport type Text from \"sap/m/Text\";\nimport type MultiDimModelChangeHandler from \"sap/sac/df/changeHandler/MultiDimModelChangeHandler\";\nimport type MultiDimModel from \"sap/sac/df/model/MultiDimModel\";\nimport Device from \"sap/ui/Device\";\nimport BindingInfo from \"sap/ui/base/BindingInfo\";\nimport type UI5Event from \"sap/ui/base/Event\";\nimport type Control from \"sap/ui/core/Control\";\nimport type UI5Element from \"sap/ui/core/Element\";\nimport InvisibleMessage from \"sap/ui/core/InvisibleMessage\";\nimport { InvisibleMessageMode } from \"sap/ui/core/library\";\nimport OverrideExecution from \"sap/ui/core/mvc/OverrideExecution\";\nimport type VariantManagement from \"sap/ui/fl/variants/VariantManagement\";\nimport type { VariantManagement$SelectEvent } from \"sap/ui/fl/variants/VariantManagement\";\nimport type Chart from \"sap/ui/mdc/Chart\";\nimport type FilterField from \"sap/ui/mdc/FilterField\";\nimport type Table from \"sap/ui/mdc/Table\";\nimport type { FilterBarBase$FiltersChangedEvent } from \"sap/ui/mdc/filterbar/FilterBarBase\";\nimport StateUtil from \"sap/ui/mdc/p13n/StateUtil\";\nimport type JSONModel from \"sap/ui/model/json/JSONModel\";\nimport type Context from \"sap/ui/model/odata/v4/Context\";\nimport hasher from \"sap/ui/thirdparty/hasher\";\nimport * as AnalyticalPageTemplating from \"./AnalyticalPageTemplating\";\n\nconst TemplateContentView = CoreLibrary.TemplateContentView,\n\tInitialLoadMode = CoreLibrary.InitialLoadMode;\n\n/**\n * Controller class for the list report page, used inside an SAP Fiori elements application.\n * @hideconstructor\n * @ui5-experimental-since\n */\n@defineUI5Class(\"sap.fe.ina.templates.AnalyticalPage.AnalyticalPageController\")\nclass AnalyticalPageController extends PageController {\n\t_routing!: InternalRouting;\n\n\t@usingExtension(\n\t\tInternalIntentBasedNavigation.override({\n\t\t\tgetEntitySet: function (this: InternalIntentBasedNavigation) {\n\t\t\t\treturn (this.base as AnalyticalPageController).getCurrentEntitySet();\n\t\t\t}\n\t\t})\n\t)\n\t_intentBasedNavigation!: InternalIntentBasedNavigation;\n\n\t@usingExtension(SideEffects.override(SideEffectsOverride))\n\t_sideEffects!: SideEffects;\n\n\t@usingExtension(KPIManagement)\n\tkpiManagement!: KPIManagement;\n\n\t@usingExtension(Placeholder)\n\tplaceholder!: Placeholder;\n\n\tprotected extensionAPI?: ExtensionAPI;\n\n\tprivate filterBarConditions?: unknown;\n\n\tprivate sUpdateTimer?: unknown;\n\n\tprivate hasPendingChartChanges?: boolean;\n\n\tprivate hasPendingTableChanges?: boolean;\n\n\t/**\n\t * Get the extension API for the current page.\n\t * @public\n\t * @returns The extension API.\n\t */\n\t@publicExtension()\n\t@finalExtension()\n\tgetExtensionAPI(): ExtensionAPI {\n\t\tif (!this.extensionAPI) {\n\t\t\tthis.extensionAPI = new ExtensionAPI(this);\n\t\t}\n\t\treturn this.extensionAPI;\n\t}\n\n\tonInit(): void {\n\t\tPageController.prototype.onInit.apply(this);\n\t\tconst oInternalModelContext = this.getView().getBindingContext(\"internal\") as InternalModelContext;\n\t\tconst filterBar = this._getFilterBarControl();\n\t\tif (filterBar) {\n\t\t\tthis._storeFilterBarSelectionVariant(filterBar, oInternalModelContext);\n\t\t}\n\n\t\toInternalModelContext.setProperty(\"hasPendingFilters\", true);\n\t\toInternalModelContext.setProperty(\"hideDraftInfo\", false);\n\t\toInternalModelContext.setProperty(\"uom\", {});\n\t\toInternalModelContext.setProperty(\"scalefactor\", {});\n\t\toInternalModelContext.setProperty(\"scalefactorNumber\", {});\n\t\toInternalModelContext.setProperty(\"currency\", {});\n\t\toInternalModelContext.setProperty(\"isInsightsSupported\", false);\n\n\t\tif (this._hasMultiVisualizations()) {\n\t\t\tlet alpContentView = this._getDefaultPath();\n\t\t\tif (!Device.system.desktop && alpContentView === TemplateContentView.Hybrid) {\n\t\t\t\talpContentView = TemplateContentView.Chart;\n\t\t\t}\n\t\t\toInternalModelContext.setProperty(\"alpContentView\", alpContentView);\n\t\t}\n\n\t\t// Store conditions from filter bar\n\t\t// this is later used before navigation to get conditions applied on the filter bar\n\t\tthis.filterBarConditions = {};\n\n\t\t// As AppStateHandler.applyAppState triggers a navigation we want to make sure it will\n\t\t// happen after the routeMatch event has been processed (otherwise the router gets broken)\n\t\tthis.getAppComponent().getRouterProxy().waitForRouteMatchBeforeNavigation();\n\n\t\t// Configure the initial load settings\n\t\tthis._setInitLoad();\n\t}\n\n\tonExit(): void {\n\t\tdelete this.filterBarConditions;\n\t\tif (this.extensionAPI) {\n\t\t\tthis.extensionAPI.destroy();\n\t\t}\n\t\tdelete this.extensionAPI;\n\t}\n\n\t_onAfterBinding(): void {\n\t\tconst aTables = this._getControls(\"table\") as Table[];\n\t\tif (EditState.isEditStateDirty()) {\n\t\t\tthis._getMultiModeControl()?.invalidateContent();\n\t\t\tconst table = this._getTable();\n\t\t\tconst oTableBinding = table?.getRowBinding();\n\t\t\tif (oTableBinding) {\n\t\t\t\tconst tableAPI = table?.getParent() as TableAPI;\n\n\t\t\t\tconst refreshTable = (): void => {\n\t\t\t\t\tif (tableAPI.getTableDefinition().control.type === \"TreeTable\") {\n\t\t\t\t\t\t// As the refresh on a TreeTable uses side-effects, we need to make sure there are no pending changes\n\t\t\t\t\t\t// before the side-effects are queried (e.g. failed PATCH queries that would be resent together with side effects GET)\n\t\t\t\t\t\tthis.getModel().resetChanges();\n\t\t\t\t\t}\n\t\t\t\t\ttableAPI.refresh();\n\t\t\t\t};\n\n\t\t\t\t// Update the table content using side effects (listBinding.refresh doesn't keep expansion states in a TreeTable)\n\t\t\t\tif (CommonUtils.getAppComponent(this.getView())._isFclEnabled()) {\n\t\t\t\t\t// there is an issue if we use a timeout with a kept alive context used on another page\n\t\t\t\t\trefreshTable();\n\t\t\t\t} else {\n\t\t\t\t\tif (!this.sUpdateTimer) {\n\t\t\t\t\t\tthis.sUpdateTimer = setTimeout(() => {\n\t\t\t\t\t\t\trefreshTable();\n\t\t\t\t\t\t\tdelete this.sUpdateTimer;\n\t\t\t\t\t\t}, 0);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Update action enablement and visibility upon table data update.\n\t\t\t\t\tconst fnUpdateTableActions = (): void => {\n\t\t\t\t\t\tthis._updateTableActions(aTables);\n\t\t\t\t\t\toTableBinding.detachDataReceived(fnUpdateTableActions);\n\t\t\t\t\t};\n\t\t\t\t\toTableBinding.attachDataReceived(fnUpdateTableActions);\n\t\t\t\t}\n\t\t\t}\n\t\t\tEditState.setEditStateProcessed();\n\t\t}\n\n\t\tif (!this.sUpdateTimer) {\n\t\t\tthis._updateTableActions(aTables);\n\t\t}\n\n\t\tconst internalModelContext = this.getView().getBindingContext(\"internal\") as InternalModelContext;\n\t\tif (!internalModelContext.getProperty(\"initialVariantApplied\")) {\n\t\t\tconst viewId = this.getView().getId();\n\t\t\tthis.pageReady.waitFor(this._applyAppState(viewId));\n\t\t\tinternalModelContext.setProperty(\"initialVariantApplied\", true);\n\t\t}\n\t\tconst environmentCapabilities = CommonUtils.getAppComponent(this.getView()).getEnvironmentCapabilities();\n\t\tenvironmentCapabilities\n\t\t\t.isInsightsEnabled()\n\t\t\t.then((isInsightsEnabled: boolean) => {\n\t\t\t\tinternalModelContext.setProperty(\"isInsightsSupported\", isInsightsEnabled);\n\t\t\t\treturn;\n\t\t\t})\n\t\t\t.catch((error: unknown) => {\n\t\t\t\tLog.error(\"Error while checking if insights are enabled\", error as string);\n\t\t\t});\n\t}\n\n\tformatters = {\n\t\tsetALPControlMessageStrip(\n\t\t\tthis: AnalyticalPageController,\n\t\t\taIgnoredFields: string[],\n\t\t\tbIsChart: boolean | string,\n\t\t\toApplySupported?: { enableSearch: boolean }\n\t\t): string | undefined {\n\t\t\tlet sText = \"\";\n\t\t\tbIsChart = bIsChart === \"true\" || bIsChart === true;\n\t\t\tconst oFilterBar = this._getFilterBarControl();\n\t\t\tif (oFilterBar && Array.isArray(aIgnoredFields) && aIgnoredFields.length > 0 && bIsChart) {\n\t\t\t\tconst aIgnoredLabels = MessageStrip.getLabels(\n\t\t\t\t\taIgnoredFields,\n\t\t\t\t\toFilterBar.data(\"entityType\"),\n\t\t\t\t\toFilterBar,\n\t\t\t\t\tgetResourceModel(oFilterBar)\n\t\t\t\t);\n\t\t\t\tconst bIsSearchIgnored = !oApplySupported?.enableSearch;\n\t\t\t\tsText = bIsChart\n\t\t\t\t\t? MessageStrip.getALPText(aIgnoredLabels, oFilterBar, bIsSearchIgnored)\n\t\t\t\t\t: MessageStrip.getText(aIgnoredLabels, oFilterBar, \"\");\n\t\t\t\treturn sText;\n\t\t\t}\n\t\t}\n\t};\n\n\t@privateExtension()\n\t@extensible(\"After\")\n\tasync onPageReady(): Promise<void> {\n\t\t// Remove the handler on back navigation that displays Draft confirmation\n\t\tawait this.getAppComponent().getShellServices().setBackNavigation(undefined);\n\t\tthis._initMultiDimModelChangeHandler();\n\t}\n\n\t_initMultiDimModelChangeHandler(): void {\n\t\tconst oMultiDimModel = this.getView().getModel(\"mdm\") as MultiDimModel;\n\t\tconst oMultiDimModelChangeHandler = this.getView().byId(\"MultiDimModelChangeHandler\") as MultiDimModelChangeHandler;\n\t\toMultiDimModelChangeHandler?.registerMultiDimModel(oMultiDimModel);\n\t}\n\n\t/**\n\t * Method called when the content of a custom view used in a list report needs to be refreshed.\n\t * This happens either when there is a change on the FilterBar and the search is triggered,\n\t * or when a tab with custom content is selected,\n\t * or when the view is forced to be refreshed through the Extension API for the list report's public method setTabContentToBeRefreshedOnNextOpening.\n\t * This method can be overwritten by the controller extension in case of customization.\n\t * @param mParameters Map containing the filter conditions of the FilterBar, the currentTabID\n\t * and the view refresh cause (tabChanged, search or forcedRefresh).\n\t * The map looks like this:\n\t * <code><pre>\n\t * \t{\n\t * \t\tfilterConditions: {\n\t * \t\t\tCountry: [\n\t * \t\t\t\t{\n\t * \t\t\t\t\toperator: \"EQ\"\n\t *\t\t\t\t\tvalidated: \"NotValidated\"\n\t *\t\t\t\t\tvalues: [\"Germany\", ...]\n\t * \t\t\t\t},\n\t * \t\t\t\t...\n\t * \t\t\t]\n\t * \t\t\t...\n\t * \t\t},\n\t *\t\tcurrentTabId: \"fe::CustomTab::tab1\",\n\t *\t\trefreshCause: \"tabChanged\" | \"search\" | \"forcedRefresh\"\n\t *\t}\n\t * </pre></code>\n\t * @public\n\t */\n\t@publicExtension()\n\t@extensible(OverrideExecution.After)\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tonViewNeedsRefresh(mParameters: unknown): void {\n\t\t/* To be overriden */\n\t}\n\n\t/**\n\t * Method called when a filter or search value has been changed in the FilterBar,\n\t * but has not been validated yet by the end user (with the 'Go' or 'Search' button).\n\t * Typically, the content of the current tab is greyed out until the filters are validated.\n\t * This method can be overwritten by the controller extension in case of customization.\n\t * @public\n\t */\n\t@publicExtension()\n\t@extensible(OverrideExecution.After)\n\tonPendingFilters(): void {\n\t\t/* To be overriden */\n\t}\n\n\tgetCurrentEntitySet(): string {\n\t\treturn this._getTable()?.data(\"targetCollectionPath\").slice(1);\n\t}\n\n\t/**\n\t * Method called when the 'Clear' button on the FilterBar is pressed.\n\t * @public\n\t */\n\t@publicExtension()\n\t@extensible(OverrideExecution.After)\n\tonAfterClear(): void {\n\t\t/* To be overriden */\n\t}\n\n\t/**\n\t * This method initiates the update of the enabled state of the DataFieldForAction and the visible state of the DataFieldForIBN buttons.\n\t * @param aTables Array of tables in the list report\n\t */\n\t_updateTableActions(aTables: Table[]): void {\n\t\tlet aIBNActions: UI5Element[] = [];\n\t\taTables.forEach(function (oTable) {\n\t\t\taIBNActions = CommonUtils.getIBNActions(oTable, aIBNActions);\n\t\t\t// Update 'enabled' property of DataFieldForAction buttons on table toolbar\n\t\t\t// The same is also performed on Table selectionChange event\n\t\t\tconst oInternalModelContext = oTable.getBindingContext(\"internal\") as InternalModelContext;\n\t\t\tconst tableAPI = oTable.getParent() as TableAPI;\n\t\t\tconst oActionOperationAvailableMap = JSON.parse(tableAPI.tableDefinition.operationAvailableMap);\n\t\t\tconst aSelectedContexts = oTable.getSelectedContexts() as Context[];\n\n\t\t\toInternalModelContext.setProperty(\"selectedContexts\", aSelectedContexts);\n\t\t\toInternalModelContext.setProperty(\"numberOfSelectedContexts\", aSelectedContexts.length);\n\t\t\t// Refresh enablement of delete button\n\t\t\tDeleteHelper.updateDeleteInfoForSelectedContexts(oInternalModelContext, aSelectedContexts);\n\n\t\t\tActionRuntime.setActionEnablement(oInternalModelContext, oActionOperationAvailableMap, aSelectedContexts, \"table\");\n\t\t});\n\t\tCommonUtils.updateDataFieldForIBNButtonsVisibility(aIBNActions, this.getView());\n\t}\n\n\t/**\n\t * This method scrolls to a specific row on all the available tables.\n\t * @param sRowPath The path of the table row context to be scrolled to\n\t */\n\t_scrollTablesToRow(sRowPath: string): void {\n\t\tthis._getControls(\"table\").forEach(function (oTable: Control) {\n\t\t\tTableScroller.scrollTableToRow(oTable as Table, sRowPath);\n\t\t});\n\t}\n\n\t/**\n\t * Sets a silent focus on the filter field. Suppresses the opening of the type-ahead popup.\n\t * @param filterField The field where the focus should be set after the initial load\n\t */\n\t_focusSilent(filterField: FilterField): void {\n\t\tconst focusInfo = filterField.getFocusInfo() as { targetInfo: object };\n\t\tfocusInfo.targetInfo = { silent: true };\n\t\tfilterField.focus(focusInfo);\n\t}\n\n\t/**\n\t * This method sets the initial focus in a list report based on the User Experience guidelines.\n\t *\n\t */\n\t_setInitialFocus(): void {\n\t\tconst dynamicPage = this._getDynamicListReportControl(),\n\t\t\tisHeaderExpanded = dynamicPage.getHeaderExpanded(),\n\t\t\tfilterBar = this._getFilterBarControl() as FilterBar;\n\t\tif (filterBar) {\n\t\t\t//Enabling mandatory filter fields message dialog\n\t\t\tif (!filterBar.getShowMessages()) {\n\t\t\t\tfilterBar.setShowMessages(true);\n\t\t\t}\n\t\t\tif (isHeaderExpanded) {\n\t\t\t\tconst firstEmptyMandatoryField = filterBar.getFilterItems().find(function (oFilterItem: FilterField) {\n\t\t\t\t\treturn oFilterItem.getRequired() && oFilterItem.getConditions().length === 0;\n\t\t\t\t});\n\t\t\t\t//Focusing on the first empty mandatory filter field, or on the first filter field if the table data is loaded\n\t\t\t\t// Do a \"silent\" focus for FilterField, by adding the silent attribute. The silent attribute suppresses typeahead opening.\n\t\t\t\tif (firstEmptyMandatoryField) {\n\t\t\t\t\tif (firstEmptyMandatoryField.isA<FilterField>(\"sap.ui.mdc.FilterField\")) {\n\t\t\t\t\t\tthis._focusSilent(firstEmptyMandatoryField);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t(firstEmptyMandatoryField as Control).focus();\n\t\t\t\t\t}\n\t\t\t\t} else if (this._isInitLoadEnabled() && filterBar.getFilterItems().length > 0) {\n\t\t\t\t\t// Add check for available filterItems\n\t\t\t\t\tconst fieldToFocus = filterBar.getFilterItems()[0];\n\t\t\t\t\tif (fieldToFocus.isA<FilterField>(\"sap.ui.mdc.FilterField\")) {\n\t\t\t\t\t\tthis._focusSilent(fieldToFocus);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t(fieldToFocus as Control).focus();\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t//Focusing on the Go button\n\t\t\t\t\tthis.getView().byId(`${this._getFilterBarControlId()}-btnSearch`)?.focus();\n\t\t\t\t}\n\t\t\t} else if (this._isInitLoadEnabled()) {\n\t\t\t\tthis._getTable()\n\t\t\t\t\t?.focusRow(0)\n\t\t\t\t\t.catch(function (error: unknown) {\n\t\t\t\t\t\tLog.error(\"Error while setting initial focus on the table \", error as string);\n\t\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tthis._getTable()\n\t\t\t\t?.focusRow(0)\n\t\t\t\t.catch(function (error: unknown) {\n\t\t\t\t\tLog.error(\"Error while setting initial focus on the table \", error as string);\n\t\t\t\t});\n\t\t}\n\t}\n\n\tasync _getPageTitleInformation(): Promise<{ title?: string; subtitle: string; intent: string; icon: string }> {\n\t\tconst oManifestEntry = this.getAppComponent().getManifestEntry(\"sap.app\");\n\t\treturn Promise.resolve({\n\t\t\ttitle: oManifestEntry.title,\n\t\t\tsubtitle: oManifestEntry.subTitle || \"\",\n\t\t\tintent: \"\",\n\t\t\ticon: \"\"\n\t\t});\n\t}\n\n\t_getFilterBarControl(): FilterBar | undefined {\n\t\treturn this.getView().byId(this._getFilterBarControlId()) as FilterBar | undefined;\n\t}\n\n\t_getDynamicListReportControl(): DynamicPage {\n\t\treturn this.getView().byId(this._getDynamicListReportControlId()) as DynamicPage;\n\t}\n\n\t_getAdaptationFilterBarControl(): Control {\n\t\t// If the adaptation filter bar is part of the DOM tree, the \"Adapt Filter\" dialog is open,\n\t\t// and we return the adaptation filter bar as an active control (visible for the user)\n\t\tconst adaptationFilterBar = (this._getFilterBarControl() as { getInbuiltFilter?: Function }).getInbuiltFilter?.();\n\t\treturn adaptationFilterBar?.getParent() ? adaptationFilterBar : undefined;\n\t}\n\n\tasync _applyAppState(viewId: string): Promise<void> {\n\t\tawait this.getAppComponent().getAppStateHandler().applyAppState(viewId, this.getView());\n\t\t/*\t\tconst oFilterBar = this._getFilterBarControl();\n\t\t\t\tif (oFilterBar) {\n\t\t\t\t\toFilterBar.setSuspendSelection(false);\n\t\t\t\t} else if (this._isFilterBarHidden()) {\n\t\t\t\t\tconst oInternalModelContext = this.getView().getBindingContext(\"internal\") as InternalModelContext;\n\t\t\t\t\toInternalModelContext.setProperty(\"hasPendingFilters\", false);\n\t\t\t\t\tif (this._isMultiMode()) {\n\t\t\t\t\t\tthis._getMultiModeControl().setCountsOutDated(true);\n\t\t\t\t\t}\n\t\t\t\t}*/\n\t}\n\n\t_getSegmentedButton(sControl: string): UI5Element | undefined {\n\t\tconst sSegmentedButtonId = (sControl === \"Chart\" ? this.getChartControl() : this._getTable())?.data(\"segmentedButtonId\");\n\t\treturn this.getView().byId(sSegmentedButtonId);\n\t}\n\n\t_getControlFromPageModelProperty(sPath: string): Control | undefined {\n\t\tconst controlId = this._getPageModel()?.getProperty(sPath);\n\t\treturn controlId ? (this.getView().byId(controlId) as Control) : undefined;\n\t}\n\n\t_getDynamicListReportControlId(): string {\n\t\treturn this._getPageModel()?.getProperty(\"/dynamicListReportId\") || \"\";\n\t}\n\n\t_getFilterBarControlId(): string {\n\t\treturn this._getPageModel()?.getProperty(\"/filterBarId\") || \"\";\n\t}\n\n\tgetChartControl(): Control | undefined {\n\t\treturn this._getControlFromPageModelProperty(\"/singleChartId\");\n\t}\n\n\t_getVisualFilterBarControl(): UI5Element | undefined {\n\t\tconst sVisualFilterBarId = StableIdHelper.generate([\"visualFilter\", this._getFilterBarControlId()]);\n\t\treturn sVisualFilterBarId ? this.getView().byId(sVisualFilterBarId) : undefined;\n\t}\n\n\t_getFilterBarVariantControl(): VariantManagement {\n\t\treturn this._getControlFromPageModelProperty(\"/variantManagement/id\") as VariantManagement;\n\t}\n\n\t_getMultiModeControl(): MultipleModeControl {\n\t\treturn this.getView().byId(\"fe::TabMultipleMode::Control\") as MultipleModeControl;\n\t}\n\n\t_getIconTabBar(): IconTabBar {\n\t\treturn this.getView().byId(\"fe::TabMultipleMode\") as IconTabBar;\n\t}\n\n\t_getTable(): Table | undefined {\n\t\tif (this._isMultiMode()) {\n\t\t\tconst oControl = this._getMultiModeControl()?.getSelectedInnerControl()?.content;\n\t\t\treturn oControl?.isA(\"sap.ui.mdc.Table\") ? (oControl as Table) : undefined;\n\t\t} else {\n\t\t\treturn this._getControlFromPageModelProperty(\"/singleTableId\") as Table | undefined;\n\t\t}\n\t}\n\n\t_getControls(sKey?: string): Control[] {\n\t\tif (this._isMultiMode()) {\n\t\t\tconst aControls: Control[] = [];\n\t\t\tconst oTabMultiMode = this._getMultiModeControl().content;\n\t\t\toTabMultiMode.getItems().forEach((oItem: unknown) => {\n\t\t\t\tconst oControl = this.getView().byId((oItem as TabContainerItem).getKey()) as Control;\n\t\t\t\tif (oControl && sKey) {\n\t\t\t\t\tif ((oItem as TabContainerItem).getKey().includes(`fe::${sKey}`)) {\n\t\t\t\t\t\taControls.push(oControl);\n\t\t\t\t\t}\n\t\t\t\t} else if (oControl !== undefined && oControl !== null) {\n\t\t\t\t\taControls.push(oControl);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn aControls;\n\t\t} else if (sKey === \"Chart\") {\n\t\t\tconst oChart = this.getChartControl();\n\t\t\treturn oChart ? [oChart] : [];\n\t\t} else {\n\t\t\tconst oTable = this._getTable();\n\t\t\treturn oTable ? [oTable] : [];\n\t\t}\n\t}\n\n\t_getDefaultPath(): string {\n\t\tconst defaultPath = AnalyticalPageTemplating.getDefaultPath(this._getPageModel()?.getProperty(\"/views\") || []);\n\t\tswitch (defaultPath) {\n\t\t\tcase \"primary\":\n\t\t\t\treturn TemplateContentView.Chart;\n\t\t\tcase \"secondary\":\n\t\t\t\treturn TemplateContentView.Table;\n\t\t\tcase \"both\":\n\t\t\tdefault:\n\t\t\t\treturn TemplateContentView.Hybrid;\n\t\t}\n\t}\n\n\t/**\n\t * Method to know if ListReport is configured with Multiple Table mode.\n\t * @returns Is Multiple Table mode set?\n\t */\n\t_isMultiMode(): boolean {\n\t\treturn !!this._getPageModel()?.getProperty(\"/multiViewsControl\");\n\t}\n\n\t/**\n\t * Method to know if ListReport is configured to load data at start up.\n\t * @returns Is InitLoad enabled?\n\t */\n\t_isInitLoadEnabled(): boolean {\n\t\tconst initLoadMode = this.getView().getViewData().initialLoad;\n\t\treturn initLoadMode === InitialLoadMode.Enabled;\n\t}\n\n\t_hasMultiVisualizations(): boolean {\n\t\treturn this._getPageModel()?.getProperty(\"/hasMultiVisualizations\");\n\t}\n\n\t/**\n\t * Method called by flex to determine if the applyAutomatically setting on the variant is valid.\n\t * Called only for Standard Variant and only when there is display text set for applyAutomatically (FE only sets it for Auto).\n\t * @returns Boolean true if data should be loaded automatically, false otherwise\n\t */\n\t_applyAutomaticallyOnStandardVariant(): boolean {\n\t\t// We always return false and take care of it when view state is set\n\t\treturn false;\n\t}\n\n\t/**\n\t * Configure the settings for initial load based on\n\t * - manifest setting initLoad - Enabled/Disabled/Auto\n\t * - user's setting of applyAutomatically on variant\n\t * - if there are default filters\n\t * We disable the filter bar search at the beginning and enable it when view state is set.\n\t */\n\t_setInitLoad(): void {\n\t\t// if initLoad is Disabled or Auto, switch off filter bar search temporarily at start\n\t\t// set hook for flex for when standard variant is set (at start or by user at runtime)\n\t\t// required to override the user setting 'apply automatically' behaviour if there are no filters\n\t\tconst variantManagementId = AnalyticalPageTemplating.getVariantBackReference(\n\t\t\tthis.getView().getViewData(),\n\t\t\tthis._getPageModel()?.getData() as ListReportDefinition\n\t\t);\n\t\tconst variantManagement = variantManagementId && (this.getView().byId(variantManagementId) as VariantManagement);\n\t\tif (variantManagement) {\n\t\t\t(\n\t\t\t\tvariantManagement as { registerApplyAutomaticallyOnStandardVariant?: Function }\n\t\t\t)?.registerApplyAutomaticallyOnStandardVariant?.(this._applyAutomaticallyOnStandardVariant.bind(this));\n\t\t}\n\t}\n\n\t_setShareModel(): void {\n\t\tconst fnGetUser = ObjectPath.get(\"sap.ushell.Container.getUser\");\n\n\t\t//shareModel: Holds all the sharing relevant information and info used in XML view\n\t\tconst oShareInfo = {\n\t\t\tbookmarkTitle: document.title, //To name the bookmark according to the app title.\n\t\t\tbookmarkCustomUrl: function (): string {\n\t\t\t\tconst sHash = hasher.getHash();\n\t\t\t\treturn sHash ? `#${sHash}` : window.location.href;\n\t\t\t},\n\t\t\tisShareInJamActive: !!fnGetUser && fnGetUser().isJamActive()\n\t\t};\n\n\t\tconst oTemplatePrivateModel = this.getOwnerComponent().getModel(\"_templPriv\") as JSONModel;\n\t\toTemplatePrivateModel.setProperty(\"/listReport/share\", oShareInfo);\n\t}\n\n\t/**\n\t * Method to update the local UI model of the page with the fields that are not applicable to the filter bar (this is specific to the ALP scenario).\n\t * @param oInternalModelContext The internal model context\n\t * @param oFilterBar MDC filter bar\n\t */\n\t_updateALPNotApplicableFields(oInternalModelContext: InternalModelContext, oFilterBar: FilterBar): void {\n\t\tconst mCache: Record<string, string[]> = {};\n\t\tconst ignoredFields: Record<string, string[]> = {},\n\t\t\taTables = this._getControls(\"table\"),\n\t\t\taCharts = this._getControls(\"Chart\");\n\n\t\tif (!aTables.length || !aCharts.length) {\n\t\t\t// If there's not a table and a chart, we're not in the ALP case\n\t\t\treturn;\n\t\t}\n\n\t\t// For the moment, there's nothing for tables...\n\t\taCharts.forEach(function (oChart) {\n\t\t\tconst sChartEntityPath = oChart.data(\"targetCollectionPath\"),\n\t\t\t\tsChartEntitySet = sChartEntityPath.slice(1),\n\t\t\t\tsCacheKey = `${sChartEntitySet}Chart`;\n\t\t\tif (!mCache[sCacheKey]) {\n\t\t\t\tmCache[sCacheKey] = FilterUtils.getNotApplicableFilters(oFilterBar, oChart);\n\t\t\t}\n\t\t\tignoredFields[sCacheKey] = mCache[sCacheKey];\n\t\t});\n\t\toInternalModelContext.setProperty(\"controls/ignoredFields\", ignoredFields);\n\t}\n\n\t/**\n\t * Provides the setting whether FilterBar is hidden based on the manifest setting 'hideFilterBar'.\n\t * Should be used in combination with _isFilterBarHiddenUsed as it may have overridden this setting.\n\t * @returns True if the FilterBar is hidden, false if unknown\n\t */\n\t_isFilterBarHidden(): boolean {\n\t\treturn this.getView().getViewData().hideFilterBar || false;\n\t}\n\n\t_getApplyAutomaticallyOnVariant(variantManagement: VariantManagement, key: string | undefined | null): boolean {\n\t\tif (!variantManagement || !key) {\n\t\t\treturn false;\n\t\t}\n\t\tconst variants = variantManagement.getVariants();\n\t\tconst currentVariant = variants.find(function (variant) {\n\t\t\treturn variant && variant.key === key;\n\t\t});\n\t\treturn (currentVariant && currentVariant.executeOnSelect) || false;\n\t}\n\n\t_shouldAutoTriggerSearch(oVM: VariantManagement | null): boolean {\n\t\tif (\n\t\t\tthis.getView().getViewData().initialLoad === InitialLoadMode.Auto &&\n\t\t\t(!oVM || oVM.getStandardVariantKey() === oVM.getCurrentVariantKey())\n\t\t) {\n\t\t\tconst oFilterBar = this._getFilterBarControl();\n\t\t\tif (oFilterBar) {\n\t\t\t\tconst oConditions = oFilterBar.getConditions();\n\t\t\t\tfor (const sKey in oConditions) {\n\t\t\t\t\t// ignore filters starting with $ (e.g. $search, $editState)\n\t\t\t\t\tif (oVM && !sKey.startsWith(\"$\") && Array.isArray(oConditions[sKey]) && oConditions[sKey].length) {\n\t\t\t\t\t\t// load data as per user's setting of applyAutomatically on the variant\n\t\t\t\t\t\tconst standardVariant = oVM.getVariants().find((variant) => {\n\t\t\t\t\t\t\treturn variant.key === oVM.getCurrentVariantKey();\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn standardVariant && standardVariant.executeOnSelect;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t_updateTable(oTable: Table): void {\n\t\tif (!oTable.isTableBound() || this.hasPendingChartChanges) {\n\t\t\toTable.rebind();\n\t\t\tthis.hasPendingChartChanges = false;\n\t\t}\n\t}\n\n\t_updateChart(oChart: Chart): void {\n\t\tconst oInnerChart = (oChart.getControlDelegate() as typeof ChartDelegate)._getChart(oChart);\n\t\tif (!(oInnerChart && oInnerChart.isBound(\"data\")) || this.hasPendingTableChanges) {\n\t\t\t(oChart.getControlDelegate() as typeof ChartDelegate).rebind(oChart, oInnerChart.getBindingInfo(\"data\"));\n\t\t\tthis.hasPendingTableChanges = false;\n\t\t}\n\t}\n\n\t/**\n\t * Set the visibility of the filter toggle button.\n\t * @param buttonVisible Filter toggle button visibility\n\t */\n\tsetFilterToggleVisibility(buttonVisible: boolean): void {\n\t\tconst filterBar = this._getFilterBarControl();\n\t\tfilterBar?.getSegmentedButton()?.setVisible(buttonVisible);\n\t}\n\n\thandlers = {\n\t\tonFilterSearch(this: AnalyticalPageController): void {\n\t\t\tconst filterBarAPI = this._getFilterBarControl()!.getParent() as FilterBarAPI;\n\t\t\tfilterBarAPI.triggerSearch();\n\t\t},\n\t\tonFiltersChanged(this: AnalyticalPageController, oEvent: FilterBarBase$FiltersChangedEvent): void {\n\t\t\tconst oFilterBar = this._getFilterBarControl();\n\t\t\tif (oFilterBar) {\n\t\t\t\tconst oInternalModelContext = this.getView().getBindingContext(\"internal\") as InternalModelContext | undefined;\n\t\t\t\t// Pending filters into FilterBar to be used for custom views\n\t\t\t\tthis.onPendingFilters();\n\t\t\t\tconst appliedFiltersText = oFilterBar.getAssignedFiltersText().filtersText;\n\t\t\t\tconst appliedFilterBinding = BindingInfo.parse(appliedFiltersText);\n\t\t\t\tconst filterBarHiddenUsed = false;\n\t\t\t\tconst filterBarHidden = this._isFilterBarHidden() || filterBarHiddenUsed;\n\t\t\t\tif (appliedFilterBinding && !filterBarHidden) {\n\t\t\t\t\t(this.getView().byId(\"fe::appliedFiltersText\") as Text | undefined)?.bindText(appliedFilterBinding);\n\t\t\t\t} else if (!filterBarHidden) {\n\t\t\t\t\t(this.getView().byId(\"fe::appliedFiltersText\") as Text | undefined)?.setText(appliedFiltersText);\n\t\t\t\t}\n\n\t\t\t\tif (oInternalModelContext && oEvent.getParameter(\"conditionsBased\")) {\n\t\t\t\t\toInternalModelContext.setProperty(\"hasPendingFilters\", true);\n\t\t\t\t}\n\t\t\t\tif (oInternalModelContext) {\n\t\t\t\t\tthis._storeFilterBarSelectionVariant(oFilterBar, oInternalModelContext);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tonVariantSelected(this: AnalyticalPageController, oEvent: VariantManagement$SelectEvent): void {\n\t\t\tconst variantManagement = oEvent.getSource();\n\t\t\tconst currentVariantKey = oEvent.getParameter(\"key\");\n\t\t\tconst multiModeControl = this._getMultiModeControl();\n\n\t\t\tif (multiModeControl && !variantManagement?.getParent()?.isA(\"sap.ui.mdc.ActionToolbar\")) {\n\t\t\t\t//Not a Control Variant\n\t\t\t\tmultiModeControl?.invalidateContent();\n\t\t\t\tmultiModeControl?.setFreezeContent(true);\n\t\t\t}\n\n\t\t\t// setTimeout cause the variant needs to be applied before judging the auto search or updating the app state\n\t\t\tsetTimeout((): void => {\n\t\t\t\tconst filterBar = this._getFilterBarControl();\n\t\t\t\tconst dynamicPage = this._getDynamicListReportControl();\n\t\t\t\tconst firstEmptyMandatoryField = filterBar?.getFilterItems().find(function (filterItem) {\n\t\t\t\t\treturn filterItem.getRequired() && filterItem.getConditions().length === 0;\n\t\t\t\t});\n\t\t\t\tif (firstEmptyMandatoryField) {\n\t\t\t\t\tdynamicPage.setHeaderExpanded(true);\n\t\t\t\t}\n\t\t\t\tif (this._shouldAutoTriggerSearch(variantManagement)) {\n\t\t\t\t\t// the app state will be updated via onSearch handler\n\t\t\t\t\tconst filterBarAPI = this._getFilterBarControl()!.getParent() as FilterBarAPI;\n\t\t\t\t\tfilterBarAPI.triggerSearch();\n\t\t\t\t} else if (!this._getApplyAutomaticallyOnVariant(variantManagement, currentVariantKey)) {\n\t\t\t\t\tmultiModeControl?.setFreezeContent(false);\n\t\t\t\t\tthis.getExtensionAPI().updateAppState();\n\t\t\t\t\tdynamicPage.setHeaderExpanded(true);\n\t\t\t\t}\n\t\t\t}, 0);\n\t\t},\n\t\tonVariantSaved(this: AnalyticalPageController): void {\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.getExtensionAPI().updateAppState();\n\t\t\t}, 1000);\n\t\t},\n\t\tonSearch(this: AnalyticalPageController): void {\n\t\t\tconst oFilterBar = this._getFilterBarControl() as FilterBar; // onsearch is called only if the filterbar exists\n\t\t\tconst oInternalModelContext = this.getView().getBindingContext(\"internal\") as InternalModelContext;\n\t\t\tconst oMdcChart = this.getChartControl();\n\t\t\tconst bHideDraft = FilterUtils.getEditStateIsHideDraft(oFilterBar.getConditions());\n\t\t\toInternalModelContext.setProperty(\"hasPendingFilters\", false);\n\t\t\toInternalModelContext.setProperty(\"hideDraftInfo\", bHideDraft);\n\t\t\tconst dynamicPage = this._getDynamicListReportControl();\n\t\t\tif (!this._getMultiModeControl()) {\n\t\t\t\tthis._updateALPNotApplicableFields(oInternalModelContext, oFilterBar);\n\t\t\t}\n\t\t\tif (oMdcChart) {\n\t\t\t\t(oMdcChart.getBindingContext(\"internal\") as InternalModelContext).setProperty(\"\", {});\n\n\t\t\t\tconst oPageInternalModelContext = oMdcChart.getBindingContext(\"pageInternal\") as InternalModelContext;\n\t\t\t\tconst sTemplateContentView = oPageInternalModelContext.getProperty(`${oPageInternalModelContext.getPath()}/alpContentView`);\n\t\t\t\tif (sTemplateContentView === TemplateContentView.Chart) {\n\t\t\t\t\tthis.hasPendingChartChanges = true;\n\t\t\t\t}\n\t\t\t\tif (sTemplateContentView === TemplateContentView.Table) {\n\t\t\t\t\tthis.hasPendingTableChanges = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//logic for expansion or collapse of filter bar starts\n\t\t\tif (!Device.system.desktop && oInternalModelContext.getProperty(\"searchTriggeredByInitialLoad\") === true) {\n\t\t\t\tif (dynamicPage.getHeaderExpanded() !== false) {\n\t\t\t\t\tdynamicPage.setHeaderExpanded(false);\n\t\t\t\t}\n\t\t\t\t//setting it to false so that further search or 'Go' triggers won't collapse the filter bar\n\t\t\t\toInternalModelContext.setProperty(\"searchTriggeredByInitialLoad\", false);\n\t\t\t}\n\n\t\t\t// store filter bar conditions to use later while navigation\n\t\t\tStateUtil.retrieveExternalState(oFilterBar)\n\t\t\t\t.then((oExternalState) => {\n\t\t\t\t\tthis.filterBarConditions = oExternalState.filter;\n\t\t\t\t\treturn;\n\t\t\t\t})\n\t\t\t\t.catch(function (oError: unknown) {\n\t\t\t\t\tLog.error(\"Error while retrieving the external state\", oError as string);\n\t\t\t\t});\n\t\t\tif (!this.getView().getViewData().liveMode) {\n\t\t\t\tthis.getExtensionAPI().updateAppState();\n\t\t\t}\n\n\t\t\tif (Device.system.phone) {\n\t\t\t\tconst oDynamicPage = this._getDynamicListReportControl();\n\t\t\t\tif (!this._isInitLoadEnabled()) {\n\t\t\t\t\toDynamicPage.setHeaderExpanded(true);\n\t\t\t\t} else {\n\t\t\t\t\toDynamicPage.setHeaderExpanded(false);\n\t\t\t\t\tthis.setFilterToggleVisibility(false);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Triggers an outbound navigation when a user chooses the chevron.\n\t\t * @param oController\n\t\t * @param sOutboundTarget Name of the outbound target (needs to be defined in the manifest)\n\t\t * @param oContext The context that contains the data for the target app\n\t\t * @param sCreatePath Create path when the chevron is created.\n\t\t * @returns Promise which is resolved once the navigation is triggered\n\t\t * @final\n\t\t */\n\t\tasync onChevronPressNavigateOutBound(\n\t\t\toController: AnalyticalPageController,\n\t\t\tsOutboundTarget: string,\n\t\t\toContext: Context,\n\t\t\tsCreatePath: string\n\t\t): Promise<void> {\n\t\t\treturn oController._intentBasedNavigation.onChevronPressNavigateOutBound(oController, sOutboundTarget, oContext, sCreatePath);\n\t\t},\n\t\tonChartSelectionChanged(this: AnalyticalPageController, oEvent: UI5Event<{ data: unknown }, ChartBuildingBlock>): void {\n\t\t\tconst oMdcChart = oEvent.getSource().getContent() as Chart,\n\t\t\t\toTable = this._getTable(),\n\t\t\t\taData = oEvent.getParameter(\"data\"),\n\t\t\t\toInternalModelContext = this.getView().getBindingContext(\"internal\") as InternalModelContext;\n\t\t\tif (aData) {\n\t\t\t\tChartUtils.setChartFilters(oMdcChart);\n\t\t\t}\n\t\t\tconst sTemplateContentView = oInternalModelContext.getProperty(`${oInternalModelContext.getPath()}/alpContentView`);\n\t\t\tif (sTemplateContentView === TemplateContentView.Chart) {\n\t\t\t\tthis.hasPendingChartChanges = true;\n\t\t\t} else if (oTable) {\n\t\t\t\toTable.rebind();\n\t\t\t\tthis.hasPendingChartChanges = false;\n\t\t\t}\n\t\t},\n\t\tonDynamicPageTitleStateChanged(this: AnalyticalPageController, event: DynamicPageTitle$StateChangeEvent): void {\n\t\t\tconst filterBar = this._getFilterBarControl();\n\t\t\tif (filterBar) {\n\t\t\t\tthis.setFilterToggleVisibility(!!event.getParameter(\"isExpanded\"));\n\t\t\t\tif (event.getParameter(\"isExpanded\") === false) {\n\t\t\t\t\tInvisibleMessage.getInstance().announce(\n\t\t\t\t\t\tfilterBar.getAssignedFiltersText().filtersText as string,\n\t\t\t\t\t\tInvisibleMessageMode.Assertive\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tonAfterRendering(): void {\n\t\tconst aTables = this._getControls() as Table[];\n\t\tconst sEntitySet = this.getView().getViewData().entitySet;\n\t\tconst sText = getResourceModel(this.getView()).getText(\"T_TABLE_AND_CHART_NO_DATA_TEXT\", undefined, sEntitySet);\n\t\taTables.forEach(function (oTable: Control) {\n\t\t\tif (oTable.isA<Table>(\"sap.ui.mdc.Table\")) {\n\t\t\t\toTable.setNoData(sText);\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Method to update the local UI model of the page with the Selection Variant.\n\t * @param filterBar MDC filter bar\n\t * @param internalModelContext The internal model context\n\t */\n\tasync _storeFilterBarSelectionVariant(filterBar: FilterBar, internalModelContext: InternalModelContext): Promise<void> {\n\t\ttry {\n\t\t\tconst filterBarAPI = filterBar.getParent() as FilterBarAPI;\n\t\t\tconst sv = await filterBarAPI.getSelectionVariant();\n\t\t\tinternalModelContext.setProperty(\"filterBarSelectionVariant\", sv);\n\t\t} catch (err: unknown) {\n\t\t\tconst message = err instanceof Error ? err.message : String(err);\n\t\t\tLog.error(`FE : Error fetching selection variant on filter change: ${message}`);\n\t\t}\n\t}\n\n\t/**\n\t * Method to get the Selection Variant from internal model.\n\t * @returns SelectionVariant\n\t */\n\tgetFilterBarSelectionVariant(): SelectionVariant {\n\t\tconst internalModelContext = this.getView().getBindingContext(\"internal\") as InternalModelContext | undefined;\n\t\treturn (internalModelContext?.getProperty(\"filterBarSelectionVariant\") as SelectionVariant) || new SelectionVariant();\n\t}\n}\n\nexport default AnalyticalPageController;\n"],"mappings":"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","ignoreList":[],"file":"AnalyticalPageController-dbg.controller.js"}