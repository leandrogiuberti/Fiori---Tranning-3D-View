{"version":3,"file":"ShortcutTool.js","names":["getDocsDetail","docsPath","data","spltiPath","split","result","forEach","path","collapseDuplicate","elements","filterQuery","map","element","label","nodes","filter","node","toLowerCase","includes","some","existingNode","push","Object","entries","_ref","mapKeyToSymbol","key","translatedKey","trim","ShortcutTool","_dec","defineUI5Class","_dec2","defineReference","_dec3","_class","_class2","_BuildingBlockBase","_this","call","this","resourceBundle","Lib","getResourceBundleFor","_initializerDefineProperty","_descriptor","_descriptor2","state","shortcutsTree","originalTree","content","createContent","initialFocus","$searchField","current","addEventDelegate","onAfterRendering","focus","window","messagePort","setupPort","_exports","_inheritsLoose","_proto","prototype","onmessage","onMessageReceived","bind","postMessage","service","e","payload","reverse","interactions","shortcut","$ref","documentationInteraction","description","replaceAll","shortcutKeys","kbd","name","concat","onStateChange","$tree","expandToLevel","onSearch","_e","query","getParameter","isTitleMatch","isNodeMatch","_jsx","Panel","headerText","getText","width","children","SearchField","ref","placeholder","search","Tree","items","model","parameters","arrayNames","noDataText","CustomTreeItem","_jsxs","FlexBox","alignItems","renderType","justifyContent","FormattedText","htmlText","class","direction","id","context","shortcutKey","getObject","shortCutText","raw","translatedShortCutText","translated","translatedShortCutKeys","rawKey","idx","Label","text","length","BuildingBlockBase","_applyDecoratedDescriptor","configurable","enumerable","writable","initializer"],"sources":["./ShortcutTool.tsx"],"sourcesContent":["import type ResourceBundle from \"sap/base/i18n/ResourceBundle\";\nimport BuildingBlockBase from \"sap/fe/base/BuildingBlockBase\";\nimport { defineReference, defineUI5Class } from \"sap/fe/base/ClassSupport\";\nimport type { Ref } from \"sap/fe/base/jsx-runtime/jsx\";\nimport CustomTreeItem from \"sap/m/CustomTreeItem\";\nimport FlexBox from \"sap/m/FlexBox\";\nimport FormattedText from \"sap/m/FormattedText\";\nimport Label from \"sap/m/Label\";\nimport Panel from \"sap/m/Panel\";\nimport type { SearchField$SearchEvent } from \"sap/m/SearchField\";\nimport SearchField from \"sap/m/SearchField\";\nimport Tree from \"sap/m/Tree\";\nimport type Control from \"sap/ui/core/Control\";\nimport Lib from \"sap/ui/core/Lib\";\nimport type Context from \"sap/ui/model/Context\";\n\ntype NamedKeyboardInteraction = {\n\tname: string;\n\tdescription?: string;\n\tkbd: (string | { raw: string; translated: string })[];\n};\ntype DocKeyboardInteraction = {\n\tdescription: string;\n\tkbd: (string | { raw: string; translated: string })[];\n};\n\ntype RefKeyboardInteraction = {\n\t$ref: string;\n};\ntype KeyboardElements = {\n\tclass: string;\n\tid: string;\n\tlabel: string;\n\tinteractions: (NamedKeyboardInteraction | RefKeyboardInteraction)[];\n};\ntype ShortcutElement = { label: string; shortcutKeys: (string | { raw: string; translated: string })[] };\n\nfunction getDocsDetail(docsPath: string, data: object): DocKeyboardInteraction[] | undefined {\n\tconst spltiPath = docsPath.split(\"/\");\n\tlet result = data;\n\tspltiPath.forEach((path) => {\n\t\tresult = result[path as keyof typeof result];\n\t});\n\treturn result as DocKeyboardInteraction[] | undefined;\n}\n\nfunction collapseDuplicate(\n\telements: { label: string; nodes: ShortcutElement[] }[],\n\tfilterQuery: string\n): { label: string; nodes: ShortcutElement[] }[] {\n\tconst map: Record<string, ShortcutElement[]> = {};\n\telements.forEach((element) => {\n\t\tif (!map[element.label]) {\n\t\t\tmap[element.label] = [];\n\t\t}\n\t\telement.nodes\n\t\t\t.filter((node) => {\n\t\t\t\treturn node.label.toLowerCase().includes(filterQuery.toLowerCase());\n\t\t\t})\n\t\t\t.forEach((node) => {\n\t\t\t\tif (!map[element.label].some((existingNode) => existingNode.label === node.label)) {\n\t\t\t\t\tmap[element.label].push(node);\n\t\t\t\t}\n\t\t\t});\n\t});\n\treturn Object.entries(map).map(([label, nodes]) => ({ label, nodes }));\n}\n\n/**\n * Maps a keyboard key to a symbol for display purposes.\n * We need to perform the mapping based on the raw key name but return the translated key for display.\n * @param key The raw key name (e.g., \"ArrowUp\", \"Ctrl\", etc.)\n * @param translatedKey The translated key name in the proper language\n * @returns The symbol to be displayed for the key\n */\nfunction mapKeyToSymbol(key: string, translatedKey: string): string {\n\tswitch (key.trim()) {\n\t\tcase \"ArrowDown\":\n\t\t\treturn \"↓\";\n\t\tcase \"ArrowUp\":\n\t\t\treturn \"↑\";\n\t\tcase \"ArrowLeft\":\n\t\t\treturn \"←\";\n\t\tcase \"ArrowRight\":\n\t\t\treturn \"→\";\n\t\tdefault:\n\t\t\treturn translatedKey;\n\t}\n}\n\ntype ShortcutToolState = {\n\tshortcutsTree: { label: string; nodes: ShortcutElement[] }[];\n\toriginalTree: { label: string; nodes: ShortcutElement[] }[];\n\tinitialFocus: boolean;\n};\n@defineUI5Class(\"sap.fe.controls.shortcuts.popup.ShortcutTool\")\nexport default class ShortcutTool extends BuildingBlockBase<Panel, ShortcutToolState> {\n\tprivate resourceBundle: ResourceBundle = Lib.getResourceBundleFor(\"sap.fe.controls\")!;\n\n\t@defineReference()\n\t$searchField!: Ref<SearchField>;\n\n\t@defineReference()\n\t$tree!: Ref<Tree>;\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state.shortcutsTree = [];\n\t\tthis.state.originalTree = [];\n\n\t\tthis.content = this.createContent();\n\t\tthis.state.initialFocus = true;\n\t\tthis.$searchField.current?.addEventDelegate({\n\t\t\tonAfterRendering: (): void => {\n\t\t\t\tif (this.state.initialFocus) {\n\t\t\t\t\tthis.$searchField.current?.focus();\n\t\t\t\t\tthis.state.initialFocus = false;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tif ((window as { messagePort?: MessagePort }).messagePort) {\n\t\t\tthis.setupPort((window as { messagePort?: MessagePort }).messagePort!);\n\t\t}\n\t}\n\n\tsetupPort(messagePort: MessagePort): void {\n\t\tmessagePort.onmessage = this.onMessageReceived.bind(this);\n\t\t// We send a message to stop the display if it is already running\n\t\t// and then start it again to ensure we have the latest data.\n\t\t// This is to ensure that the popup is always up-to-date with the latest shortcuts\n\t\t// and to avoid any potential issues with the display being already running.\n\t\tmessagePort.postMessage({ service: \"sap.ui.interaction.StopDisplay\" });\n\t\tmessagePort.postMessage({ service: \"sap.ui.interaction.StartDisplay\" });\n\t}\n\n\tonMessageReceived(e: MessageEvent): void {\n\t\tif (e?.data?.service === \"sap.ui.interaction.UpdateDisplay\") {\n\t\t\tconst elements = e.data.payload.elements as KeyboardElements[];\n\t\t\telements.reverse();\n\t\t\tthis.state.originalTree = elements.map((element) => {\n\t\t\t\tconst nodes: ShortcutElement[] = [];\n\t\t\t\telement.interactions.forEach((shortcut) => {\n\t\t\t\t\tif ((shortcut as RefKeyboardInteraction).$ref) {\n\t\t\t\t\t\tconst interactions = getDocsDetail((shortcut as RefKeyboardInteraction).$ref, e.data.payload);\n\t\t\t\t\t\tinteractions?.forEach((documentationInteraction) => {\n\t\t\t\t\t\t\tnodes.push({\n\t\t\t\t\t\t\t\tlabel: documentationInteraction.description.replaceAll(\"<kbd\", \"<strong\").replaceAll(\"</kbd>\", \"</strong>\"),\n\t\t\t\t\t\t\t\tshortcutKeys: documentationInteraction.kbd\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnodes.push({\n\t\t\t\t\t\t\tlabel: ((shortcut as NamedKeyboardInteraction).description ?? (shortcut as NamedKeyboardInteraction).name)\n\t\t\t\t\t\t\t\t.replaceAll(\"<kbd\", \"<strong\")\n\t\t\t\t\t\t\t\t.replaceAll(\"</kbd>\", \"</strong>\"),\n\t\t\t\t\t\t\tshortcutKeys: (shortcut as NamedKeyboardInteraction).kbd\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\treturn {\n\t\t\t\t\tlabel: element.label.replaceAll(\"<kbd\", \"<strong\").replaceAll(\"</kbd>\", \"</strong>\"),\n\t\t\t\t\tnodes: nodes\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\t\tthis.state.shortcutsTree = collapseDuplicate(this.state.originalTree.concat(), \"\");\n\t}\n\n\tonStateChange(): void {\n\t\tthis.$tree.current?.expandToLevel(1);\n\t}\n\n\tonSearch(_e: SearchField$SearchEvent): void {\n\t\tconst query = _e.getParameter(\"query\") ?? \"\";\n\t\tthis.state.shortcutsTree = collapseDuplicate(\n\t\t\tthis.state.originalTree\n\t\t\t\t.filter((element) => {\n\t\t\t\t\tconst isTitleMatch = element.label.toLowerCase().includes(query.toLowerCase());\n\t\t\t\t\tconst isNodeMatch = element.nodes.some((node) => node.label.toLowerCase().includes(query.toLowerCase()));\n\t\t\t\t\treturn isTitleMatch || isNodeMatch;\n\t\t\t\t})\n\t\t\t\t.concat(),\n\t\t\tquery\n\t\t);\n\t}\n\n\tcreateContent(): Panel {\n\t\treturn (\n\t\t\t<Panel headerText={this.resourceBundle.getText(\"C_SHORTCUT_TITLE\")} width=\"100%\">\n\t\t\t\t{{\n\t\t\t\t\tcontent: [\n\t\t\t\t\t\t<SearchField\n\t\t\t\t\t\t\tref={this.$searchField}\n\t\t\t\t\t\t\tplaceholder={this.resourceBundle.getText(\"C_SHORTCUT_PLACEHOLDER\")}\n\t\t\t\t\t\t\tsearch={(e): void => this.onSearch(e)}\n\t\t\t\t\t\t/>,\n\t\t\t\t\t\t<Tree\n\t\t\t\t\t\t\tref={this.$tree}\n\t\t\t\t\t\t\titems={{ model: \"$componentState\", path: \"/shortcutsTree\", parameters: { arrayNames: [\"nodes\"] } }}\n\t\t\t\t\t\t\tnoDataText={this.resourceBundle.getText(\"C_SHORTCUT_NODATA\")}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<CustomTreeItem>\n\t\t\t\t\t\t\t\t<FlexBox alignItems={\"Start\"} width={\"100%\"} renderType={\"Bare\"} justifyContent={\"SpaceBetween\"}>\n\t\t\t\t\t\t\t\t\t<FormattedText htmlText={this.state.shortcutsTree.label} class={\"sapFeControlsShorcutMFT\"} />\n\t\t\t\t\t\t\t\t\t<FlexBox\n\t\t\t\t\t\t\t\t\t\trenderType={\"Bare\"}\n\t\t\t\t\t\t\t\t\t\tjustifyContent={\"SpaceBetween\"}\n\t\t\t\t\t\t\t\t\t\titems={\"{$componentState>shortcutKeys}\"}\n\t\t\t\t\t\t\t\t\t\tdirection={\"Column\"}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{{\n\t\t\t\t\t\t\t\t\t\t\titems: function (id: string, context: Context): Label {\n\t\t\t\t\t\t\t\t\t\t\t\tconst shortcutKey = context.getObject() as string | { raw: string; translated: string };\n\t\t\t\t\t\t\t\t\t\t\t\tconst shortCutText = typeof shortcutKey === \"string\" ? shortcutKey : shortcutKey.raw;\n\t\t\t\t\t\t\t\t\t\t\t\tconst translatedShortCutText =\n\t\t\t\t\t\t\t\t\t\t\t\t\ttypeof shortcutKey === \"string\" ? shortcutKey : shortcutKey.translated;\n\t\t\t\t\t\t\t\t\t\t\t\tconst shortcutKeys = shortCutText.split(\"+\");\n\t\t\t\t\t\t\t\t\t\t\t\tconst translatedShortCutKeys = translatedShortCutText.split(\"+\");\n\t\t\t\t\t\t\t\t\t\t\t\tconst elements: Control[] = [];\n\t\t\t\t\t\t\t\t\t\t\t\tshortcutKeys.forEach((rawKey: string, idx: number) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst translatedKey = translatedShortCutKeys[idx] ?? rawKey;\n\t\t\t\t\t\t\t\t\t\t\t\t\telements.push(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Label\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttext={mapKeyToSymbol(rawKey, translatedKey)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclass={\"sapUiTinyMarginEnd sapFeControlsShortcutKey\"}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (idx !== shortcutKeys.length - 1) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\telements.push(<Label text={\"+\"} class={\"sapUiTinyMarginEnd\"} />);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FlexBox id={id} renderType={\"Bare\"} alignItems={\"Center\"}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{ items: elements }}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</FlexBox>\n\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t</FlexBox>\n\t\t\t\t\t\t\t\t</FlexBox>\n\t\t\t\t\t\t\t</CustomTreeItem>\n\t\t\t\t\t\t</Tree>\n\t\t\t\t\t]\n\t\t\t\t}}\n\t\t\t</Panel>\n\t\t);\n\t}\n}\n"],"mappings":"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","ignoreList":[]}