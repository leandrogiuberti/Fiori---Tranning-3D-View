{"version":3,"file":"ShortcutExplanationProvider.js","names":["ShortcutExplanationProvider","_dec","defineUI5Class","_class","_ShortcutExplanationProvider","_ManagedObject","_this","_len","arguments","length","args","Array","_key","call","this","_popupIdx","_exports","_inheritsLoose","_proto","prototype","getShellDialogContent","windowWidth","left","window","screenLeft","outerWidth","screen","availWidth","theme","Theming","getTheme","_sanitizeTheme","url","sap","ui","require","toUrl","localOrigin","location","protocol","host","params","encodeURL","myWin","open","screenTop","handleMessageReceived","messageEvent","origin","messageData","data","service","messagePort","ports","postMessage","startsWith","removeEventListener","opener","e","Log","debug","Error","message","String","setTimeout","addEventListener","id","onunload","close","computedStyles","getComputedStyle","document","documentElement","getPropertyValue","themeMetadata","themeMatch","JSON","parse","Extends","info","getInstance","async","shellContainer","resolveCreation","instance","instancePromise","Promise","resolve","extensionService","getServiceAsync","shellHistoryProvider","registerUserAction","error","undefined","shellExtensionService","resourceBundle","Lib","getResourceBundleFor","shellHistoryDialog","isDialogAdded","userAction","createUserAction","text","getText","icon","IconPool","getIconURI","press","controlType","showForAllApps","err","ManagedObject"],"sources":["./ShortcutExplanationProvider.tsx"],"sourcesContent":["import Log from \"sap/base/Log\";\nimport encodeURL from \"sap/base/security/encodeURL\";\nimport { defineUI5Class } from \"sap/fe/base/ClassSupport\";\nimport ManagedObject from \"sap/ui/base/ManagedObject\";\nimport IconPool from \"sap/ui/core/IconPool\";\nimport Lib from \"sap/ui/core/Lib\";\nimport Theming from \"sap/ui/core/Theming\";\nimport type Container from \"sap/ushell/Container\";\nimport type Extension from \"sap/ushell/services/Extension\";\n\n/**\n * Provides a dialog to explain the shortcuts to the user.\n * This dialog will be registered in the shell user menu and will open as an independent window.\n */\n@defineUI5Class(\"sap.fe.controls.shortcuts.ShortcutExplanationProvider\")\nexport default class ShortcutExplanationProvider extends ManagedObject {\n\tprivate _popupIdx = 0;\n\n\tgetShellDialogContent(): void {\n\t\t// Position to top right of the main window if possible\n\t\tconst windowWidth = 620;\n\t\tlet left = window.screenLeft + window.outerWidth;\n\t\tif (left + windowWidth > window.screen.availWidth) {\n\t\t\tleft = window.screen.availWidth - windowWidth;\n\t\t}\n\t\tlet theme = Theming.getTheme();\n\t\ttheme = this._sanitizeTheme(theme);\n\t\tconst url = sap.ui.require.toUrl(\"sap/fe/controls/shortcuts/popup/index.html\");\n\t\tconst localOrigin = window.location.protocol + \"//\" + window.location.host;\n\t\t// We pass the theme and the origin to the popup so that it can communicate safely with the parent\n\t\tconst params = \"?sap-ui-xx-shortcut-origin=\" + encodeURL(localOrigin) + \"&sap-ui-theme=\" + theme;\n\t\tconst myWin = window.open(\n\t\t\turl + params,\n\t\t\t\"_blank\",\n\t\t\t`popup,toolbar=no,menubar=no,scrollbars=no,location=no,width=${windowWidth},height=550,top=${window.screenTop},left=${left}`\n\t\t);\n\t\tif (myWin) {\n\t\t\tconst handleMessageReceived = (messageEvent: MessageEvent): void => {\n\t\t\t\tif (localOrigin === messageEvent.origin) {\n\t\t\t\t\tconst messageData = messageEvent?.data;\n\t\t\t\t\tif (messageData.service === \"sap.ui.interaction.MessagePortReady\") {\n\t\t\t\t\t\tconst messagePort = messageEvent.ports[0]; // Remember the port\n\t\t\t\t\t\tmyWin.postMessage({ service: \"sap.ui.interaction.MessagePortReady\" }, url.startsWith(\"/\") ? localOrigin : url, [\n\t\t\t\t\t\t\tmessagePort\n\t\t\t\t\t\t]);\n\t\t\t\t\t\twindow.removeEventListener(\"message\", handleMessageReceived);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\ttry {\n\t\t\t\tmyWin.opener = null;\n\t\t\t} catch (e) {\n\t\t\t\t// This might fail when there is CORS involved anyway and we can't access the opener anyway\n\t\t\t\tLog.debug(\"Cannot set opener to null\", e instanceof Error ? e.message : String(e));\n\t\t\t}\n\n\t\t\tsetTimeout((): void => {\n\t\t\t\twindow.addEventListener(\"message\", handleMessageReceived);\n\t\t\t\twindow.postMessage(\n\t\t\t\t\t{ id: \"sap.fe.interaction.Popup\" + this._popupIdx++, service: \"sap.ui.interaction.RequestMessagePort\" },\n\t\t\t\t\tlocalOrigin\n\t\t\t\t);\n\t\t\t}, 1500); // give a bit of time for the popup to be ready\n\t\t\t// We can't rely on the onload of the popup because it is not always availble in CORS scenarios\n\t\t\twindow.onunload = function (): void {\n\t\t\t\tmyWin.close();\n\t\t\t};\n\t\t}\n\t}\n\n\t/**\n\t * Sanitizes the theme name to ensure it starts with \"sap-\".\n\t * If the theme does not start with \"sap-\", it tries to get the theme from the computed styles.\n\t * If it still does not find a valid theme, it defaults to \"sap_horizon\".\n\t * This is to ensure that the popup always uses a valid theme.\n\t * @param theme The theme name to sanitize\n\t * @returns The sanitized theme name\n\t * @private\n\t */\n\tprivate _sanitizeTheme(theme: string): string {\n\t\tif (!theme.startsWith(\"sap_\")) {\n\t\t\ttry {\n\t\t\t\tconst computedStyles = getComputedStyle(document.documentElement);\n\t\t\t\ttheme = computedStyles.getPropertyValue(\"--sapSapThemeId\");\n\t\t\t\tif (!theme) {\n\t\t\t\t\tconst themeMetadata = computedStyles.getPropertyValue(\"--sapThemeMetaData-UI5-sap-ui-core\");\n\t\t\t\t\tif (themeMetadata) {\n\t\t\t\t\t\tconst themeMatch = JSON.parse(themeMetadata);\n\t\t\t\t\t\tif (themeMatch && themeMatch.Extends && themeMatch.Extends.length > 0) {\n\t\t\t\t\t\t\ttheme = themeMatch.Extends[0];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tLog.info(\"Cannot get theme from computed styles\", e instanceof Error ? e.message : String(e));\n\t\t\t\ttheme = \"sap_horizon\";\n\t\t\t}\n\t\t\tif (!theme || !theme.startsWith(\"sap_\")) {\n\t\t\t\t// Final fallback to sap_horizon\n\t\t\t\ttheme = \"sap_horizon\";\n\t\t\t}\n\t\t}\n\t\treturn theme;\n\t}\n\n\tstatic instancePromise: Promise<ShortcutExplanationProvider | undefined>;\n\n\tstatic instance: ShortcutExplanationProvider | undefined;\n\n\tstatic isDialogAdded = false;\n\n\t/**\n\t * Creates or returns the instance of the ShortcutExplanationProvider.\n\t * This is a singleton to ensure we only have one instance of the dialog.\n\t * @returns The instance of the ShortcutExplanationProvider\n\t */\n\tstatic async getInstance(): Promise<ShortcutExplanationProvider | undefined> {\n\t\t// Test the shell existence and register the extension\n\t\tconst shellContainer = sap.ui.require(\"sap/ushell/Container\") as Container | undefined;\n\t\tlet resolveCreation: Function | undefined;\n\t\ttry {\n\t\t\tif (shellContainer && !this.instance) {\n\t\t\t\tthis.instancePromise = new Promise<ShortcutExplanationProvider | undefined>((resolve) => {\n\t\t\t\t\tresolveCreation = resolve;\n\t\t\t\t});\n\t\t\t\tconst extensionService = (await shellContainer.getServiceAsync(\"Extension\")) as Extension | undefined;\n\t\t\t\tif (extensionService) {\n\t\t\t\t\tconst shellHistoryProvider = await ShortcutExplanationProvider.registerUserAction(extensionService);\n\t\t\t\t\tthis.instance = shellHistoryProvider;\n\t\t\t\t\tresolveCreation!(shellHistoryProvider);\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tLog.error(\"Cannot register extension\", e instanceof Error ? e.message : String(e));\n\t\t\tresolveCreation?.(undefined);\n\t\t}\n\t\treturn this.instancePromise;\n\t}\n\n\t/**\n\t * Adds the user action to the shell, the action will open the dialog with the shortcuts.\n\t * @param shellExtensionService The extension service to add the user action to the shell\n\t * @returns The dialog with the shortcuts\n\t */\n\tstatic async registerUserAction(shellExtensionService: Extension): Promise<ShortcutExplanationProvider | undefined> {\n\t\ttry {\n\t\t\tconst resourceBundle = Lib.getResourceBundleFor(\"sap.fe.controls\")!;\n\n\t\t\tconst shellHistoryDialog = new ShortcutExplanationProvider();\n\t\t\tif (!this.isDialogAdded) {\n\t\t\t\tthis.isDialogAdded = true;\n\t\t\t\tconst userAction = await shellExtensionService.createUserAction(\n\t\t\t\t\t{\n\t\t\t\t\t\ttext: resourceBundle.getText(\"C_SHORTCUT_TITLE\"),\n\t\t\t\t\t\ticon: IconPool.getIconURI(\"keyboard-and-mouse\"),\n\t\t\t\t\t\tpress: (): void => {\n\t\t\t\t\t\t\tshellHistoryDialog.getShellDialogContent();\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tcontrolType: \"sap.m.Button\"\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tuserAction.showForAllApps();\n\t\t\t}\n\t\t\treturn shellHistoryDialog;\n\t\t} catch (err) {\n\t\t\tLog.error(\"Cannot add user action\", err instanceof Error ? err.message : String(err));\n\t\t}\n\t}\n}\n"],"mappings":"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","ignoreList":[]}