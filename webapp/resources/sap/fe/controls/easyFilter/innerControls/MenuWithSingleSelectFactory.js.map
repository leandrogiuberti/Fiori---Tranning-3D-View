{"version":3,"file":"MenuWithSingleSelectFactory.js","names":["MenuWithSingleSelectFactory","_BaseFactory","EFB","token","_this","ListSeparators","library","ListMode","call","this","selectedItemIndex","setControl","List","mode","SingleSelectMaster","showSeparators","None","selectionChange","onItemSelected","bind","_inheritsLoose","_proto","prototype","setItems","async","newItems","allSelectedValues","Utils","areCodeListsSame","getItems","list","getControl","items","getCodeListArray","destroyAggregation","forEach","item","idx","selectState","length","selectedValues","firstValue","value","addItem","StandardListItem","title","description","selected","customData","CustomData","key","event","selectedItem","getParameter","easyFilterBarContainer","getEasyFilter","getCustomData","find","getKey","getValue","undefined","selectedValue","operator","FilterOperator","EQ","closeInnerControlPopover","getToken","getCustomDataValue","updateTokenArray","indexOfItem","getSelectedIndex","getSelectedItems","BaseFactory"],"sources":["./MenuWithSingleSelectFactory.ts"],"sourcesContent":["import type { PrimitiveType } from \"@sap-ux/vocabularies-types/Edm\";\nimport type { EnhanceWithUI5 } from \"sap/fe/base/ClassSupport\";\nimport type { finalCodeListType } from \"sap/fe/controls/easyFilter/innerControls/BaseFactory\";\nimport { BaseFactory } from \"sap/fe/controls/easyFilter/innerControls/BaseFactory\";\nimport Utils from \"sap/fe/controls/easyFilter/utils\";\nimport List from \"sap/m/List\";\nimport type { ListBase$SelectionChangeEvent } from \"sap/m/ListBase\";\nimport StandardListItem from \"sap/m/StandardListItem\";\nimport library from \"sap/m/library\";\nimport CustomData from \"sap/ui/core/CustomData\";\nimport FilterOperator from \"sap/ui/model/FilterOperator\";\nimport type { PropertyMetadata } from \"ux/eng/fioriai/reuse/easyfilter/EasyFilter\";\nimport type EasyFilterBarContainer from \"../EasyFilterBarContainer\";\nimport type { TokenDefinition, TokenSelectedValuesDefinition } from \"../EasyFilterBarContainer\";\nimport type EasyFilterToken from \"../Token\";\n\ntype codeListType = PropertyMetadata[\"codeList\"];\n\nclass MenuWithSingleSelectFactory extends BaseFactory<List> {\n\tprivate selectedItemIndex = -1;\n\n\tconstructor(EFB: EnhanceWithUI5<EasyFilterBarContainer>, token: EnhanceWithUI5<EasyFilterToken>) {\n\t\tconst ListSeparators = library.ListSeparators;\n\t\tconst ListMode = library.ListMode;\n\n\t\tsuper(EFB, token);\n\n\t\t// Initialize the list with single-select mode.\n\t\tthis.setControl(\n\t\t\tnew List({\n\t\t\t\tmode: ListMode.SingleSelectMaster,\n\t\t\t\tshowSeparators: ListSeparators.None,\n\t\t\t\tselectionChange: this.onItemSelected.bind(this) // Attach the selection event handler.\n\t\t\t})\n\t\t);\n\t}\n\n\t/**\n\t * Sets the items for the list and initializes the selection.\n\t * @param newItems\n\t * @param allSelectedValues\n\t */\n\tasync setItems(newItems: codeListType, allSelectedValues: TokenDefinition[\"keySpecificSelectedValues\"]): Promise<void> {\n\t\tif (await Utils.areCodeListsSame(newItems, this.getItems() as codeListType)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst list: List | undefined = this.getControl();\n\t\tthis.items = (await Utils.getCodeListArray(newItems)) as finalCodeListType[];\n\t\tlist?.destroyAggregation(\"items\");\n\t\tthis.selectedItemIndex = -1;\n\n\t\tthis.items.forEach((item, idx) => {\n\t\t\tlet selectState = false;\n\n\t\t\t// Check if the item matches any preselected value.\n\t\t\tif (allSelectedValues.length > 0 && allSelectedValues[0].selectedValues.length > 0) {\n\t\t\t\tconst firstValue = allSelectedValues[0].selectedValues[0];\n\t\t\t\tif (typeof firstValue === typeof item.value && firstValue === item.value) {\n\t\t\t\t\tselectState = true;\n\t\t\t\t\tthis.selectedItemIndex = idx;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Add item to the list with the appropriate selection state.\n\t\t\tlist?.addItem(\n\t\t\t\tnew StandardListItem({\n\t\t\t\t\ttitle: item.description,\n\t\t\t\t\tselected: selectState,\n\t\t\t\t\tcustomData: [\n\t\t\t\t\t\tnew CustomData({\n\t\t\t\t\t\t\tkey: \"value\",\n\t\t\t\t\t\t\tvalue: item.value\n\t\t\t\t\t\t})\n\t\t\t\t\t]\n\t\t\t\t})\n\t\t\t);\n\t\t});\n\t}\n\n\t/**\n\t * Event handler for item selection.\n\t * Directly triggers the token update when an item is selected.\n\t * @param event\n\t */\n\tprivate onItemSelected(event: ListBase$SelectionChangeEvent): void {\n\t\tconst selectedItem = event.getParameter(\"listItem\");\n\t\tconst list: List | undefined = this.getControl();\n\t\tconst easyFilterBarContainer = this.getEasyFilter() as EasyFilterBarContainer;\n\n\t\tif (!selectedItem || !list) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Get the value of the selected item.\n\t\tconst value: PrimitiveType = selectedItem\n\t\t\t.getCustomData()\n\t\t\t.find((customData: CustomData) => customData.getKey() === \"value\")\n\t\t\t?.getValue() as string | number | boolean;\n\n\t\tif (value !== undefined) {\n\t\t\t// Prepare the selected values definition.\n\t\t\tconst selectedValue: TokenSelectedValuesDefinition[] = [\n\t\t\t\t{\n\t\t\t\t\toperator: FilterOperator.EQ,\n\t\t\t\t\tselectedValues: [value]\n\t\t\t\t}\n\t\t\t];\n\n\t\t\teasyFilterBarContainer?.closeInnerControlPopover();\n\n\t\t\t// Get the key of the token and update the token array.\n\t\t\tconst { key } = this.getToken()?.getCustomDataValue(\"TokenInfo\") as TokenDefinition;\n\t\t\teasyFilterBarContainer.updateTokenArray(\"setSelectedValues\", selectedValue, key);\n\n\t\t\t// Update the selected item index for internal tracking.\n\t\t\tthis.selectedItemIndex = list.indexOfItem(selectedItem);\n\t\t}\n\t}\n\n\t//Retrieves the index of the currently selected item.\n\tgetSelectedIndex(): number {\n\t\tconst selectedItem: StandardListItem | undefined = this.getControl()?.getSelectedItems()?.[0] as StandardListItem;\n\n\t\treturn selectedItem ? this.getControl()?.indexOfItem(selectedItem) ?? -1 : -1;\n\t}\n}\n\nexport default MenuWithSingleSelectFactory;\n"],"mappings":";;;;qeAkBMA,EAA2B,SAAAC,GAGhC,SAAAD,EAAYE,EAA6CC,GAAwC,IAAAC,EAChG,MAAMC,EAAiBC,EAAQD,eAC/B,MAAME,EAAWD,EAAQC,SAEzBH,EAAAH,EAAAO,KAAAC,KAAMP,EAAKC,IAAMM,KAEjBL,EAROM,mBAAqB,EAS5BN,EAAKO,WACJ,IAAIC,EAAK,CACRC,KAAMN,EAASO,mBACfC,eAAgBV,EAAeW,KAC/BC,gBAAiBb,EAAKc,eAAeC,KAAIf,MAEzC,OAAAA,CACH,CAEAgB,EAAApB,EAAAC,GAAA,IAAAoB,EAAArB,EAAAsB,UAAAD,EAKME,SAANC,eAAMD,EAASE,EAAwBC,GACtC,SAAUC,EAAMC,iBAAiBH,EAAUhB,KAAKoB,YAA6B,CAC5E,MACD,CAEA,MAAMC,EAAyBrB,KAAKsB,aACpCtB,KAAKuB,YAAeL,EAAMM,iBAAiBR,GAC3CK,GAAMI,mBAAmB,SACzBzB,KAAKC,mBAAqB,EAE1BD,KAAKuB,MAAMG,QAAQ,CAACC,EAAMC,KACzB,IAAIC,EAAc,MAGlB,GAAIZ,EAAkBa,OAAS,GAAKb,EAAkB,GAAGc,eAAeD,OAAS,EAAG,CACnF,MAAME,EAAaf,EAAkB,GAAGc,eAAe,GACvD,UAAWC,WAAsBL,EAAKM,OAASD,IAAeL,EAAKM,MAAO,CACzEJ,EAAc,KACd7B,KAAKC,kBAAoB2B,CAC1B,CACD,CAGAP,GAAMa,QACL,IAAIC,EAAiB,CACpBC,MAAOT,EAAKU,YACZC,SAAUT,EACVU,WAAY,CACX,IAAIC,EAAW,CACdC,IAAK,QACLR,MAAON,EAAKM,aAMlB,EAEArB,EAKQH,eAAR,SAAQA,EAAeiC,GACtB,MAAMC,EAAeD,EAAME,aAAa,YACxC,MAAMvB,EAAyBrB,KAAKsB,aACpC,MAAMuB,EAAyB7C,KAAK8C,gBAEpC,IAAKH,IAAiBtB,EAAM,CAC3B,MACD,CAGA,MAAMY,EAAuBU,EAC3BI,gBACAC,KAAMT,GAA2BA,EAAWU,WAAa,UACxDC,WAEH,GAAIjB,IAAUkB,UAAW,CAExB,MAAMC,EAAiD,CACtD,CACCC,SAAUC,EAAeC,GACzBxB,eAAgB,CAACE,KAInBY,GAAwBW,2BAGxB,MAAMf,IAAEA,GAAQzC,KAAKyD,YAAYC,mBAAmB,aACpDb,EAAuBc,iBAAiB,oBAAqBP,EAAeX,GAG5EzC,KAAKC,kBAAoBoB,EAAKuC,YAAYjB,EAC3C,CACD,EAEA/B,EACAiD,iBAAA,SAAAA,IACC,MAAMlB,EAA6C3C,KAAKsB,cAAcwC,qBAAqB,GAE3F,OAAOnB,EAAe3C,KAAKsB,cAAcsC,YAAYjB,KAAkB,GAAK,CAC7E,EAAC,OAAApD,CAAA,CA3G+B,CAASwE,GAAW,OA8GtCxE,CAA2B","ignoreList":[]}