{"version":3,"names":["MenuWithCheckBoxFactory","_BaseFactory","EFB","token","_this","ListSeparators","library","ListMode","call","selectionList","okButtonClicked","setControl","List","mode","MultiSelect","showSeparators","None","_inheritsLoose","_proto","prototype","setItems","newItems","allSelectedValues","Utils","areCodeListsSame","getItems","list","getControl","items","getCodeListArray","destroyAggregation","forEach","item","idx","selectState","length","selectedValues","firstValue","value","includes","push","addItem","StandardListItem","title","description","selected","customData","CustomData","key","invokeOkButtonHandler","areSelectListSame","getSelectedIndices","listItems","getSelectedItems","easyFilterBarContainer","getEasyFilter","operator","FilterOperator","EQ","getToken","getCustomDataValue","getCustomData","find","getKey","getValue","undefined","Array","isArray","every","val","updateTokenArray","tempSelectList","invokePopupCloseHandler","removeSelections","setSelected","setSelectList","indexOfItem","BaseFactory"],"sourceRoot":".","sources":["MenuWithCheckBoxFactory.ts"],"sourcesContent":["import type { EnhanceWithUI5 } from \"sap/fe/base/ClassSupport\";\nimport type { finalCodeListType } from \"sap/fe/controls/easyFilter/innerControls/BaseFactory\";\nimport { BaseFactory } from \"sap/fe/controls/easyFilter/innerControls/BaseFactory\";\nimport Utils from \"sap/fe/controls/easyFilter/utils\";\nimport List from \"sap/m/List\";\nimport StandardListItem from \"sap/m/StandardListItem\";\nimport library from \"sap/m/library\";\nimport CustomData from \"sap/ui/core/CustomData\";\nimport FilterOperator from \"sap/ui/model/FilterOperator\";\nimport type { PropertyMetadata } from \"ux/eng/fioriai/reuse/easyfilter/EasyFilter\";\nimport type EasyFilterBarContainer from \"../EasyFilterBarContainer\";\nimport type { TokenDefinition, TokenSelectedValuesDefinition } from \"../EasyFilterBarContainer\";\nimport type EasyFilterToken from \"../Token\";\ntype codeListType = PropertyMetadata[\"codeList\"];\nclass MenuWithCheckBoxFactory extends BaseFactory<List> {\n\tprivate selectionList: number[] = [];\n\n\tprivate okButtonClicked = false;\n\n\tconstructor(EFB: EnhanceWithUI5<EasyFilterBarContainer>, token: EnhanceWithUI5<EasyFilterToken>) {\n\t\tconst ListSeparators = library.ListSeparators;\n\t\tconst ListMode = library.ListMode;\n\t\tsuper(EFB, token);\n\t\tthis.setControl(\n\t\t\tnew List({\n\t\t\t\tmode: ListMode.MultiSelect,\n\t\t\t\tshowSeparators: ListSeparators.None\n\t\t\t})\n\t\t);\n\t}\n\n\tasync setItems(newItems: codeListType, allSelectedValues: TokenDefinition[\"keySpecificSelectedValues\"]): Promise<void> {\n\t\tif (await Utils.areCodeListsSame(newItems, this.getItems() as codeListType)) {\n\t\t\treturn;\n\t\t}\n\t\tconst list: List | undefined = this.getControl();\n\n\t\tthis.items = (await Utils.getCodeListArray(newItems)) as finalCodeListType[];\n\t\tlist?.destroyAggregation(\"items\");\n\t\tthis.selectionList = [];\n\t\tthis.items.forEach((item, idx) => {\n\t\t\tlet selectState = false;\n\t\t\t//Value should either be string, number or boolean.\n\t\t\tif (allSelectedValues.length > 0 && allSelectedValues[0].selectedValues.length > 0) {\n\t\t\t\tconst firstValue = allSelectedValues[0].selectedValues[0];\n\t\t\t\tif (typeof firstValue === \"string\" && typeof item.value === \"string\") {\n\t\t\t\t\t// Assert selectedValues as string[]\n\t\t\t\t\tif ((allSelectedValues[0].selectedValues as string[]).includes(item.value)) {\n\t\t\t\t\t\tselectState = true;\n\t\t\t\t\t\tthis.selectionList?.push(idx);\n\t\t\t\t\t}\n\t\t\t\t} else if (typeof firstValue === \"boolean\" && typeof item.value === \"boolean\") {\n\t\t\t\t\t// Assert selectedValues as boolean[]\n\t\t\t\t\tif ((allSelectedValues[0].selectedValues as boolean[]).includes(item.value)) {\n\t\t\t\t\t\tselectState = true;\n\t\t\t\t\t\tthis.selectionList?.push(idx);\n\t\t\t\t\t}\n\t\t\t\t} else if (typeof firstValue === \"number\" && typeof item.value === \"number\") {\n\t\t\t\t\t// Assert selectedValues as number[]\n\t\t\t\t\tif ((allSelectedValues[0].selectedValues as number[]).includes(item.value)) {\n\t\t\t\t\t\tselectState = true;\n\t\t\t\t\t\tthis.selectionList?.push(idx);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlist?.addItem(\n\t\t\t\tnew StandardListItem({\n\t\t\t\t\ttitle: item.description,\n\t\t\t\t\tselected: selectState,\n\t\t\t\t\tcustomData: [\n\t\t\t\t\t\t//Saving the value inside the CustomData, because at the end we would be exposing the values to the consumer not the description\n\t\t\t\t\t\tnew CustomData({\n\t\t\t\t\t\t\tkey: \"value\",\n\t\t\t\t\t\t\tvalue: item.value\n\t\t\t\t\t\t})\n\t\t\t\t\t]\n\t\t\t\t})\n\t\t\t);\n\t\t});\n\t}\n\n\tinvokeOkButtonHandler(): void {\n\t\tif (this.areSelectListSame()) {\n\t\t\treturn;\n\t\t}\n\t\tthis.selectionList = this.getSelectedIndices();\n\t\tthis.okButtonClicked = true;\n\t\tconst listItems: StandardListItem[] | undefined = this.getControl()?.getSelectedItems() as StandardListItem[];\n\t\tconst easyFilterBarContainer = this.getEasyFilter() as EasyFilterBarContainer;\n\t\tlet allSelectedValues: TokenSelectedValuesDefinition[] = [\n\t\t\t{\n\t\t\t\toperator: FilterOperator.EQ,\n\t\t\t\tselectedValues: []\n\t\t\t}\n\t\t];\n\t\tconst { key } = this.getToken()?.getCustomDataValue(\"TokenInfo\") as TokenDefinition;\n\t\tlistItems.forEach((item) => {\n\t\t\tconst value: string | number | boolean | undefined = item\n\t\t\t\t.getCustomData()\n\t\t\t\t.find((customData: CustomData) => customData.getKey() === \"value\")\n\t\t\t\t?.getValue() as string | number | boolean;\n\n\t\t\tif (value !== undefined) {\n\t\t\t\t// Check the type of value and the contents of selectedValues\n\t\t\t\tif (Array.isArray(allSelectedValues[0].selectedValues)) {\n\t\t\t\t\tconst selectedValues = allSelectedValues[0].selectedValues;\n\t\t\t\t\tif (\n\t\t\t\t\t\t(typeof value === \"string\" && selectedValues.every((val): val is string => typeof val === \"string\")) ||\n\t\t\t\t\t\t(typeof value === \"boolean\" && selectedValues.every((val): val is boolean => typeof val === \"boolean\")) ||\n\t\t\t\t\t\t(typeof value === \"number\" && selectedValues.every((val): val is number => typeof val === \"number\"))\n\t\t\t\t\t) {\n\t\t\t\t\t\t// Push the value only if all selectedValues are of the same type\n\t\t\t\t\t\t(selectedValues as Array<typeof value>).push(value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tallSelectedValues = allSelectedValues[0].selectedValues.length === 0 ? [] : allSelectedValues;\n\t\teasyFilterBarContainer.updateTokenArray(\"setSelectedValues\", allSelectedValues, key);\n\t}\n\n\tareSelectListSame(): boolean {\n\t\t//The below case would get applicable in mandatory tokens case where no value has been set\n\t\tconst tempSelectList = this.getSelectedIndices();\n\t\tif (this.selectionList.length === 0 || tempSelectList.length !== this.selectionList.length) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.selectionList.every((item, idx) => tempSelectList[idx] === item);\n\t}\n\n\tinvokePopupCloseHandler(): void {\n\t\tif (this.okButtonClicked) {\n\t\t\tthis.okButtonClicked = false;\n\t\t\treturn;\n\t\t}\n\t\tthis.okButtonClicked = false;\n\t\tthis.getControl()?.removeSelections();\n\t\tthis.selectionList?.forEach((idx) => this.getControl()?.getItems()[idx].setSelected(true));\n\t}\n\n\tsetSelectList(): void {\n\t\tthis.selectionList = [];\n\t\tconst listItems: StandardListItem[] = this.getControl()?.getSelectedItems() as StandardListItem[];\n\t\tlistItems?.forEach((item) => this.selectionList?.push(this.getControl()?.indexOfItem(item) as number));\n\t}\n\n\tgetSelectedIndices(): number[] {\n\t\tconst selectionList: number[] = [];\n\t\tconst listItems: StandardListItem[] = this.getControl()?.getSelectedItems() as StandardListItem[];\n\t\tlistItems?.forEach((item) => selectionList?.push(this.getControl()?.indexOfItem(item) as number));\n\t\treturn selectionList;\n\t}\n}\n\nexport default MenuWithCheckBoxFactory;\n"],"mappings":"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","ignoreList":[],"file":"MenuWithCheckBoxFactory-dbg.js"}