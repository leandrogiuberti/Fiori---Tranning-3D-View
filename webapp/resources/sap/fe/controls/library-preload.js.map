{"version":3,"file":"library-preload.js","sections":[{"offset":{"line":1,"column":0},"map":{"version":3,"names":["EasyFillPlaceholder","_dec","defineUI5Class","_class","_Control","apply","this","arguments","_exports","_inheritsLoose","render","rm","control","jsx","renderUsingRenderManager","_jsx","ref","class","Control"],"sources":["./EasyFillPlaceholder.tsx"],"sourcesContent":["import { defineUI5Class } from \"sap/fe/base/ClassSupport\";\nimport jsx from \"sap/fe/base/jsx-runtime/jsx\";\nimport Control from \"sap/ui/core/Control\";\nimport type RenderManager from \"sap/ui/core/RenderManager\";\n\n@defineUI5Class(\"sap.fe.controls.easyFill.EasyFillPlaceholder\")\nexport default class EasyFillPlaceholder extends Control {\n\tstatic render(rm: RenderManager, control: EasyFillPlaceholder): void {\n\t\tjsx.renderUsingRenderManager(rm, control, () => {\n\t\t\treturn <div ref={control} class={\"sapFeEasyFillPlaceholder\"}></div>;\n\t\t});\n\t}\n}\n"],"mappings":"AAAA;;;;4cAMqBA,GAAmBC,EADvCC,EAAe,gDAA+CD,EAAAE,EAAA,SAAAC,GAAA,SAAAJ,IAAA,OAAAI,EAAAC,MAAAC,KAAAC,YAAAD,IAAA,CAAAE,EAAAR,EAAAS,EAAAT,EAAAI,GAAAJ,EAEvDU,OAAP,SAAOA,EAAOC,EAAmBC,GAChCC,EAAIC,yBAAyBH,EAAIC,EAAS,IAClCG,EAAA,OAAKC,IAAKJ,EAASK,MAAO,6BAEnC,EAAC,OAAAjB,CAAA,CAN6D,CACdkB,KAAOf,GAAAK,EAAAR,EAAA,OAAAQ,CAAA","ignoreList":[],"sourceRoot":"easyFill"}},{"offset":{"line":6,"column":0},"map":{"version":3,"names":["resourceBundle","Lib","getResourceBundleFor","AIPopoverContent","$aiNoticePopover","_jsx","Popover","contentWidth","showArrow","showHeader","placement","PlacementType","Auto","title","getText","children","content","_jsxs","VBox","Text","class","text","footer","OverflowToolbar","_Fragment","ToolbarSpacer","Button","press","close","_exports","AINotice","props","icon","type","ButtonType","Transparent","e","$disclaimerPopover","openBy","getSource","AILinkNotice","Link"],"sources":["./AINotice.tsx"],"sourcesContent":["import type ResourceBundle from \"sap/base/i18n/ResourceBundle\";\nimport type { Button$PressEvent } from \"sap/m/Button\";\nimport Button from \"sap/m/Button\";\nimport type { Link$PressEvent } from \"sap/m/Link\";\nimport Link from \"sap/m/Link\";\nimport OverflowToolbar from \"sap/m/OverflowToolbar\";\nimport Popover from \"sap/m/Popover\";\nimport Text from \"sap/m/Text\";\nimport ToolbarSpacer from \"sap/m/ToolbarSpacer\";\nimport VBox from \"sap/m/VBox\";\nimport { ButtonType, PlacementType } from \"sap/m/library\";\nimport Lib from \"sap/ui/core/Lib\";\n\nconst resourceBundle = Lib.getResourceBundleFor(\"sap.fe.controls\")!;\n\n/**\n * @param titleText The title of the AI notice popover\n * @returns A Popover component containing the AI notice text and a close button\n */\n\nfunction AIPopoverContent(): Popover {\n\tconst $aiNoticePopover: Popover = (\n\t\t<Popover\n\t\t\tcontentWidth={\"22.8125rem\"}\n\t\t\tshowArrow={true}\n\t\t\tshowHeader={true}\n\t\t\tplacement={PlacementType.Auto}\n\t\t\ttitle={resourceBundle.getText(\"M_EASY_FILTER_POPOVER_AI_TITLE\")}\n\t\t>\n\t\t\t{{\n\t\t\t\tcontent: (\n\t\t\t\t\t<VBox>\n\t\t\t\t\t\t<Text class=\"sapFeControlsAiPopoverText1\" text={resourceBundle.getText(\"M_EASY_FILTER_POPOVER_AI_TEXT_1\")} />\n\t\t\t\t\t\t<Text class=\"sapFeControlsAiPopoverText2\" text={resourceBundle.getText(\"M_EASY_FILTER_POPOVER_AI_TEXT_2\")} />\n\t\t\t\t\t</VBox>\n\t\t\t\t),\n\t\t\t\tfooter: (\n\t\t\t\t\t<OverflowToolbar>\n\t\t\t\t\t\t{{\n\t\t\t\t\t\t\tcontent: (\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<ToolbarSpacer />\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\ttext={resourceBundle.getText(\"M_EASY_FILTER_POPOVER_CLOSE\")}\n\t\t\t\t\t\t\t\t\t\tpress={(): void => {\n\t\t\t\t\t\t\t\t\t\t\t$aiNoticePopover?.close();\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}}\n\t\t\t\t\t</OverflowToolbar>\n\t\t\t\t)\n\t\t\t}}\n\t\t</Popover>\n\t);\n\n\treturn $aiNoticePopover;\n}\n\n/**\n * Tiny component to display a link that opens a popover with the AI notice.\n * @param props\n * @param props.resourceBundle\n * @returns The AI Notice component\n */\n\nfunction AINotice(props: { resourceBundle: ResourceBundle }): Link {\n\treturn (\n\t\t<Button\n\t\t\ttext={props.resourceBundle.getText(\"M_EASY_FILTER_FILTER_SET_AI\")}\n\t\t\ticon=\"sap-icon://ai\"\n\t\t\ttype={ButtonType.Transparent}\n\t\t\tpress={(e: Button$PressEvent): void => {\n\t\t\t\tconst $disclaimerPopover: Popover = AIPopoverContent();\n\t\t\t\t$disclaimerPopover.openBy(e.getSource());\n\t\t\t}}\n\t\t/>\n\t);\n}\n\n/**\n * @param title The title of the AI notice popover\n * @param description The description text of the AI notice popover\n * @param text The text of the button in the AI notice popover\n * @returns The AI Notice link component that opens a popover with the AI notice\n */\n\nfunction AILinkNotice(): Link {\n\treturn (\n\t\t<Link\n\t\t\ttext={`${resourceBundle.getText(\"M_EASY_FILTER_POPOVER_AI_TITLE\")}.`}\n\t\t\tpress={(e: Link$PressEvent): void => {\n\t\t\t\tconst $aiNoticePopover = AIPopoverContent();\n\t\t\t\t$aiNoticePopover.openBy(e.getSource());\n\t\t\t}}\n\t\t/>\n\t);\n}\n\nexport { AILinkNotice, AINotice, AIPopoverContent };\n"],"mappings":"AAAA;;;;iZAaA,MAAMA,EAAiBC,EAAIC,qBAAqB,mBAOhD,SAASC,IACR,MAAMC,EACLC,EAACC,EAAO,CACPC,aAAc,aACdC,UAAW,KACXC,WAAY,KACZC,UAAWC,EAAcC,KACzBC,MAAOb,EAAec,QAAQ,kCAAkCC,SAE/D,CACAC,QACCC,EAACC,EAAI,CAAAH,SAAA,CACJV,EAACc,EAAI,CAACC,MAAM,8BAA8BC,KAAMrB,EAAec,QAAQ,qCACvET,EAACc,EAAI,CAACC,MAAM,8BAA8BC,KAAMrB,EAAec,QAAQ,wCAGzEQ,OACCjB,EAACkB,EAAe,CAAAR,SACd,CACAC,QACCC,EAAAO,EAAA,CAAAT,SAAA,CACCV,EAACoB,EAAa,IACdpB,EAACqB,EAAM,CACNL,KAAMrB,EAAec,QAAQ,+BAC7Ba,MAAOA,KACNvB,GAAkBwB,oBAY5B,OAAOxB,CACR,CAEAyB,EAAA1B,mBAOA,SAAS2B,EAASC,GACjB,OACC1B,EAACqB,EAAM,CACNL,KAAMU,EAAM/B,eAAec,QAAQ,+BACnCkB,KAAK,gBACLC,KAAMC,EAAWC,YACjBR,MAAQS,IACP,MAAMC,EAA8BlC,IACpCkC,EAAmBC,OAAOF,EAAEG,eAIhC,CAEAV,EAAAC,WAOA,SAASU,IACR,OACCnC,EAACoC,EAAI,CACJpB,KAAM,GAAGrB,EAAec,QAAQ,qCAChCa,MAAQS,IACP,MAAMhC,EAAmBD,IACzBC,EAAiBkC,OAAOF,EAAEG,eAI9B,CAACV,EAAAW,eAAA,OAAAX,CAAA","ignoreList":[],"sourceRoot":"easyFilter"}},{"offset":{"line":11,"column":0},"map":{"version":3,"names":["EasyFilterBarContainer","_dec","defineUI5Class","_dec2","property","type","_dec3","_dec4","_dec5","_dec6","_dec7","_dec8","defineReference","_dec9","_dec10","aggregation","_dec11","event","_dec12","_dec13","_dec14","_dec15","_dec16","_dec17","defineState","_class","_class2","_Control","properties","others","_this","call","this","_initializerDefineProperty","_descriptor","_descriptor2","_descriptor3","_descriptor4","_descriptor5","_descriptor6","_descriptor7","_descriptor8","_descriptor9","_descriptor10","_descriptor11","_descriptor12","_descriptor13","_descriptor14","_descriptor15","_descriptor16","shouldTokenChangeEventFired","inputFieldReady","Promise","resolve","resolveContentReady","initialize","_exports","_inheritsLoose","_proto","prototype","setEasyFilterLib","easyFilterLib","setProperty","easyfilter","__ui5_require_async","setAppId","async","appId","easyFilterInput","current","initShellHistoryProvider","setFilterBarMetadata","filterBarMetadata","tokens","getDefaultTokens","innerControlPopover","createPopoverForInnerControls","addDependent","state","showResult","length","isMandatoryCheckRequired","init","resourceBundle","Lib","getResourceBundleFor","content","createContent","mandatoryKeyMap","forEach","data","isRequired","required","name","push","key","label","keySpecificSelectedValues","defaultValue","busy","onEnterPressed","e","onGoPress","getParameter","checkIfAllMandatoryTokensFilled","tokensInState","getUnSetMandatoryTokensInCurrentState","getActualTokensFromState","token","ValueState","Error","getText","openValueStateMessage","closeAllMandatoryValueStateMessages","easyTokens","tokenizer","getTokens","closeValueStateMessage","magicQuery","resetState","tokenizerEditable","fireEvent","easyFilterMetadata","version","entitySet","contextPath","fields","easyFilterResult","easyFilter","success","isHistoryEnabled","addRecentQuery","handleV1Success","removeNonMandatoryTokens","setMessageStrip","message","messageStripType","MessageType","Warning","Log","error","filter","debug","JSON","stringify","clearMessageStrip","EasyFilterUtils","formatData","bind","allValueHelpTokens","result","requiredValueHelpTokens","valueHelpToken","find","llmResult","dataFetcher","updatedTokens","keySpecificValue","idx","operator","FilterOperator","BT","NB","selectedValues","value","description","subIndx","verifySingleSelectTokenValues","thumbButtonEnabled","thumbDownButtonPressed","thumbUpButtonPressed","singleSelectTokenLabels","splice","singleValueMessageStripText","join","showSingleValueMessageStrip","showMessageStrip","messageStripText","text","_jsx","Popover","id","getId","showArrow","showHeader","placement","PlacementType","Bottom","class","children","footer","getToolbar","toolbar","okButton","getOkButton","showAllButton","getShowAllButton","OverflowToolbar","_jsxs","_Fragment","ToolbarSpacer","Button","ButtonType","Emphasized","formatTokens","map","val","deepClone","onStateChange","changedProps","arguments","undefined","includes","onsapfocusleave","onThumbUpPressed","triggerPXIntegration","onThumbPressed","onThumbDownPressed","MessageToast","show","$topGoBtn","createReference","thumbUpButtonTokenizer","ToggleButton","icon","tooltip","press","enabled","bindState","pressed","FESRHelper","setSemanticStepname","thumbDownButtonTokenizer","thumbUpButtonMessageStripe","thumbDownButtonMessageStripe","outVBox","VBox","FlexBox","renderType","EasyFilterInput","recommendedValues","ref","enterPressed","queryChanged","query","liveChange","onGoButtonPress","visible","alignItems","FlexAlignItems","Center","wrap","FlexWrap","Wrap","justifyContent","FlexJustifyContent","SpaceBetween","AINotice","Tokenizer","editable","and","renderMode","TokenizerRenderMode","Loose","ctx","object","getObject","Token","items","mandatory","isKeyMandatory","delete","tokenIndex","findIndex","newTokens","concat","updateFilterInput","customData","CustomData","codeList","HBox","Transparent","$searchInput","focus","MessageStrip","showIcon","enableFormattedText","showCloseButton","close","currentInputValue","getValue","currentInputPlaceholder","getPlaceholder","setValue","clearAllFilters","None","updateTokenArray","changeType","newTokenSpecificValues","tokenKey","t","setSelectedValues","closeInnerControlPopover","newToken","currValue","setPlaceholder","getTokensInInitialState","mandatoryTokens","requiredKeys","getKey","render","rm","control","jsx","renderUsingRenderManager","getAggregation","Control","_applyDecoratedDescriptor","configurable","enumerable","writable","initializer"],"sources":["./EasyFilterBarContainer.tsx"],"sourcesContent":["import Log from \"sap/base/Log\";\nimport type { EnhanceWithUI5, StateOf } from \"sap/fe/base/ClassSupport\";\nimport {\n\taggregation,\n\tcreateReference,\n\tdefineReference,\n\tdefineState,\n\tdefineUI5Class,\n\tevent,\n\tproperty,\n\ttype PropertiesOf\n} from \"sap/fe/base/ClassSupport\";\nimport type { Ref } from \"sap/fe/base/jsx-runtime/jsx\";\nimport jsx from \"sap/fe/base/jsx-runtime/jsx\";\nimport Token from \"sap/fe/controls/easyFilter/Token\";\nimport Button from \"sap/m/Button\";\nimport FlexBox from \"sap/m/FlexBox\";\nimport Popover from \"sap/m/Popover\";\nimport Tokenizer from \"sap/m/Tokenizer\";\nimport VBox from \"sap/m/VBox\";\nimport { ButtonType, FlexAlignItems, FlexJustifyContent, FlexWrap, PlacementType, TokenizerRenderMode } from \"sap/m/library\";\nimport type UI5Event from \"sap/ui/base/Event\";\nimport type { $ControlSettings } from \"sap/ui/core/Control\";\nimport Control from \"sap/ui/core/Control\";\nimport CustomData from \"sap/ui/core/CustomData\";\nimport Lib from \"sap/ui/core/Lib\";\nimport type RenderManager from \"sap/ui/core/RenderManager\";\nimport { ValueState } from \"sap/ui/core/library\";\nimport type Context from \"sap/ui/model/Context\";\n\nimport type { PrimitiveType } from \"@sap-ux/vocabularies-types\";\nimport type ResourceBundle from \"sap/base/i18n/ResourceBundle\";\nimport deepClone from \"sap/base/util/deepClone\";\nimport { and, bindState } from \"sap/fe/base/BindingToolkit\";\nimport EasyFilterInput from \"sap/fe/controls/easyFilter/EasyFilterInput\";\nimport type EasyFilterToken from \"sap/fe/controls/easyFilter/Token\";\nimport HBox from \"sap/m/HBox\";\nimport MessageStrip from \"sap/m/MessageStrip\";\nimport MessageToast from \"sap/m/MessageToast\";\nimport OverflowToolbar from \"sap/m/OverflowToolbar\";\nimport ToggleButton from \"sap/m/ToggleButton\";\nimport ToolbarSpacer from \"sap/m/ToolbarSpacer\";\nimport MessageType from \"sap/ui/core/message/MessageType\";\nimport FilterOperator from \"sap/ui/model/FilterOperator\";\nimport FESRHelper from \"sap/ui/performance/trace/FESRHelper\";\nimport type EasyFilter from \"ux/eng/fioriai/reuse/easyfilter/EasyFilter\";\nimport type { EasyFilterMetadata, EasyFilterResult, PropertyMetadata } from \"ux/eng/fioriai/reuse/easyfilter/EasyFilter\";\nimport type { Success } from \"ux/eng/fioriai/reuse/shared\";\nimport type { EventHandler } from \"../../../../../../../types/extension_types\";\nimport { AINotice } from \"./AINotice\";\nimport { triggerPXIntegration } from \"./PXFeedback\";\nimport EasyFilterUtils from \"./utils\";\n\n//For current release we are ignoring \"All\" and \"Any\"\n//We can incorporate these values in future\nexport type BetweenSelectedValues = [boolean, boolean] | [string, string] | [number, number] | [Date, Date];\n\ntype llmResultForSelectedValuesType = string | Date | boolean | number;\n\nexport type CodeListType = {\n\tvalue: PrimitiveType;\n\tdescription: llmResultForSelectedValuesType;\n};\n\nexport type ValueHelpBetweenSelectedValues = [CodeListType, CodeListType];\n\nexport type ValueHelpSelectedValuesDefinition =\n\t| {\n\t\t\toperator: Exclude<FilterOperator, FilterOperator.BT | FilterOperator.NB>;\n\t\t\tselectedValues: CodeListType[];\n\t\t\tnoMatch?: boolean;\n\t  }\n\t| {\n\t\t\toperator: FilterOperator.BT | FilterOperator.NB;\n\t\t\tselectedValues: ValueHelpBetweenSelectedValues;\n\t\t\tnoMatch?: boolean;\n\t  };\n\n//We will be handling \"ALL\" and \"ANY\" at later point of time\nexport type TokenSelectedValuesDefinition =\n\t| {\n\t\t\toperator: Exclude<FilterOperator, FilterOperator.BT | FilterOperator.NB>;\n\t\t\tselectedValues: string[] | boolean[] | number[] | Date[];\n\t  }\n\t| {\n\t\t\toperator: FilterOperator.BT | FilterOperator.NB;\n\t\t\tselectedValues: BetweenSelectedValues;\n\t  };\n\nexport type TokenType = \"MenuWithCheckBox\" | \"Calendar\" | \"Time\" | \"ValueHelp\" | \"MenuWithSingleSelect\";\n\nexport type ValueHelpTokenDefinition = {\n\tkey: string;\n\tlabel: string;\n\tkeySpecificSelectedValues: ValueHelpSelectedValuesDefinition[];\n\ttype: \"ValueHelp\";\n\tbusy: boolean;\n\tisRequired?: boolean;\n};\n\nexport type NonValueHelpTokenDefinition = {\n\tkey: string;\n\tlabel: string;\n\tkeySpecificSelectedValues: TokenSelectedValuesDefinition[];\n\ttype: Exclude<TokenType, \"ValueHelp\">;\n\tisRequired?: boolean;\n\tbusy: boolean;\n};\n\nexport type TokenDefinition = ValueHelpTokenDefinition | NonValueHelpTokenDefinition;\n\nexport type TokenSetters = \"setSelectedValues\";\n\nexport type EasyFilterPropertyMetadata = PropertyMetadata &\n\t(\n\t\t| {\n\t\t\t\ttype: \"ValueHelp\";\n\t\t\t\tdefaultValue?: ValueHelpSelectedValuesDefinition[];\n\t\t  }\n\t\t| {\n\t\t\t\ttype: Exclude<TokenType, \"ValueHelp\">;\n\t\t\t\tdefaultValue?: TokenSelectedValuesDefinition[];\n\t\t  }\n\t);\n\n// We need the third arguement because there might be a chance of composite keys scenario\ntype DataFetcher = (\n\tpropertyName: string,\n\tvalueOfCurrentProperty: TokenSelectedValuesDefinition[],\n\tllmResult: Success<EasyFilterResult>\n) => Promise<ValueHelpSelectedValuesDefinition[]>;\n\ninterface FocusHandlingControl {\n\tonsapfocusleave?: () => void;\n}\n\nexport type EasyFilterBarContainer$ShowValueHelpEvent = UI5Event<\n\t{\n\t\tkey: string;\n\t\tvalues: unknown[];\n\t\tresolve: (value: ValueHelpSelectedValuesDefinition[]) => void;\n\t\treject: (reason?: Error) => void;\n\t},\n\tEasyFilterBarContainer\n>;\n\n/*\n * Delivery for beta release for the easy filter feature.\n */\n@defineUI5Class(\"sap.fe.controls.easyFilter.EasyFilterBarContainer\")\nexport default class EasyFilterBarContainer extends Control {\n\t@property({ type: \"string\" })\n\tcontextPath?: string;\n\n\t@property({ type: \"string\" })\n\tappId?: string;\n\n\t@property({ type: \"string\" })\n\teasyFilterLib?: string;\n\n\t@property({ type: \"array\" })\n\tfilterBarMetadata?: EasyFilterPropertyMetadata[];\n\n\t@property({ type: \"array\" })\n\trecommendedValues?: string[];\n\n\t@property({ type: \"function\" })\n\tdataFetcher?: DataFetcher;\n\n\t@defineReference()\n\teasyFilterInput!: Ref<EnhanceWithUI5<EasyFilterInput>>;\n\n\t@defineReference()\n\ttokenizer!: Ref<Tokenizer>;\n\n\t@aggregation({ type: \"sap.ui.core.Control\" })\n\tcontent?: Control;\n\n\t@event()\n\ttokensChanged?: EventHandler<UI5Event<{ tokens: TokenDefinition[] }, EasyFilterBarContainer>>;\n\n\t@event()\n\tqueryChanged?: EventHandler<UI5Event<{ query: string }, EasyFilterBarContainer>>;\n\n\t@event()\n\tshowValueHelp?: EventHandler<EasyFilterBarContainer$ShowValueHelpEvent>;\n\n\t@event()\n\tclearFilters?: EventHandler;\n\n\t@event()\n\tbeforeQueryProcessing?: EventHandler;\n\n\t@event()\n\tafterQueryProcessing?: EventHandler;\n\n\tprivate resourceBundle!: ResourceBundle;\n\n\t@defineState()\n\tprotected state: StateOf<{\n\t\tshowResult: boolean;\n\t\ttokens: TokenDefinition[];\n\t\ttokenizerEditable: boolean;\n\t\tshowSingleValueMessageStrip?: boolean;\n\t\tsingleValueMessageStripText?: string;\n\t\tmessageStripText?: string;\n\t\tshowMessageStrip?: boolean;\n\t\tmessageStripType: MessageType;\n\t\tthumbButtonEnabled: boolean;\n\t\tthumbUpButtonPressed: boolean;\n\t\tthumbDownButtonPressed: boolean;\n\t}> = {\n\t\tshowResult: false,\n\t\ttokens: [] as TokenDefinition[],\n\t\ttokenizerEditable: true,\n\t\tshowSingleValueMessageStrip: false,\n\t\tsingleValueMessageStripText: \"\",\n\t\tmessageStripText: \"\",\n\t\tshowMessageStrip: false,\n\t\tmessageStripType: MessageType.Error,\n\t\tthumbButtonEnabled: true,\n\t\tthumbUpButtonPressed: false,\n\t\tthumbDownButtonPressed: false\n\t};\n\n\tprivate innerControlPopover?: Popover;\n\n\tprivate okButton?: Button;\n\n\tprivate showAllButton?: Button;\n\n\tprivate toolbar?: OverflowToolbar;\n\n\tprivate mandatoryKeyMap?: Record<string, boolean>;\n\n\t//If set to true the error state can be seen on the tokens\n\tprivate isMandatoryCheckRequired?: boolean;\n\n\tprivate shouldTokenChangeEventFired = true;\n\n\teasyfilter?: Promise<typeof EasyFilter | undefined>;\n\n\tprivate resolveContentReady!: () => void;\n\n\tprivate inputFieldReady: Promise<void> = new Promise((resolve) => {\n\t\tthis.resolveContentReady = resolve;\n\t});\n\n\tconstructor(properties: string | ($ControlSettings & PropertiesOf<EasyFilterBarContainer>), others?: $ControlSettings) {\n\t\tsuper(properties as string, others);\n\t\tthis.initialize();\n\t}\n\n\tsetEasyFilterLib(easyFilterLib: string): void {\n\t\tthis.setProperty(\"easyFilterLib\", easyFilterLib);\n\t\tif (this.easyFilterLib) {\n\t\t\tthis.easyfilter = import(this.easyFilterLib);\n\t\t}\n\t}\n\n\tasync setAppId(appId: string): Promise<void> {\n\t\tif (!this.appId) {\n\t\t\tthis.setProperty(\"appId\", appId, true);\n\t\t\tawait this.inputFieldReady;\n\t\t\tthis.easyFilterInput.current?.setProperty(\"appId\", appId, true);\n\t\t\tawait this.easyFilterInput.current?.initShellHistoryProvider();\n\t\t}\n\t}\n\n\tsetFilterBarMetadata(filterBarMetadata: EasyFilterPropertyMetadata[]): void {\n\t\tif (!this.filterBarMetadata) {\n\t\t\tthis.setProperty(\"filterBarMetadata\", filterBarMetadata, true);\n\t\t\t// populate the tokens with default value\n\t\t\tconst tokens = this.getDefaultTokens();\n\t\t\tif (!this.innerControlPopover) {\n\t\t\t\tthis.innerControlPopover = this.createPopoverForInnerControls();\n\t\t\t\tthis.addDependent(this.innerControlPopover);\n\t\t\t}\n\t\t\tthis.state.tokens = tokens;\n\t\t\tthis.state.showResult = tokens.length > 0;\n\t\t\t///We don't want to display error valueStateMessage as soon the control renders\n\t\t\tthis.isMandatoryCheckRequired = true;\n\t\t\t//onTokenChange event should not be fired when initial set of tokens are set\n\t\t\tthis.shouldTokenChangeEventFired = false;\n\t\t}\n\t}\n\n\tinit(): void {\n\t\tthis.resourceBundle = Lib.getResourceBundleFor(\"sap.fe.controls\")!;\n\t}\n\n\tinitialize(): void {\n\t\tthis.content = this.createContent();\n\t\tthis.resolveContentReady();\n\t\tif (!this.innerControlPopover) {\n\t\t\tthis.innerControlPopover = this.createPopoverForInnerControls();\n\t\t\tthis.addDependent(this.innerControlPopover);\n\t\t}\n\t\t//We don't want to display error valueStateMessage as soon the control renders\n\t\tthis.isMandatoryCheckRequired = true;\n\t\t//onTokenChange event should not be fired when initial set of tokens are set\n\t\tthis.shouldTokenChangeEventFired = false;\n\t}\n\n\t// This method should be used before updating the state, once the state is updated the previous overridden default values would be gone forever\n\tgetDefaultTokens(): TokenDefinition[] {\n\t\tconst tokens: TokenDefinition[] = [];\n\t\tif (!this.mandatoryKeyMap) {\n\t\t\tthis.mandatoryKeyMap = {};\n\t\t}\n\t\tthis.filterBarMetadata?.forEach((data) => {\n\t\t\tconst isRequired = data.required;\n\t\t\tif (isRequired) {\n\t\t\t\t(this.mandatoryKeyMap as Record<string, boolean>)[data.name] = true;\n\t\t\t\t//Check whether the keys exist in the current state else push it across\n\t\t\t\tif (data.type === \"ValueHelp\") {\n\t\t\t\t\ttokens.push({\n\t\t\t\t\t\tkey: data.name,\n\t\t\t\t\t\tlabel: data.label as string,\n\t\t\t\t\t\tkeySpecificSelectedValues: (data.defaultValue as ValueHelpSelectedValuesDefinition[]) ?? [],\n\t\t\t\t\t\ttype: data.type,\n\t\t\t\t\t\tbusy: false,\n\t\t\t\t\t\tisRequired\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\ttokens.push({\n\t\t\t\t\t\tkey: data.name,\n\t\t\t\t\t\tlabel: data.label as string,\n\t\t\t\t\t\tkeySpecificSelectedValues: (data.defaultValue as TokenSelectedValuesDefinition[]) ?? [],\n\t\t\t\t\t\ttype: data.type,\n\t\t\t\t\t\tbusy: false,\n\t\t\t\t\t\tisRequired\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn tokens;\n\t}\n\n\tonEnterPressed(e: UI5Event<{ query: string }, EasyFilterInput>): void {\n\t\tthis.onGoPress(e.getParameter(\"query\"));\n\t}\n\n\t//Making it public because in live mode the app developer can decide whether to display the error ValueStateMessage\n\t//In non-live mode , we are already internally handling it on every time time a user clicks on GO/Enter buttons\n\tpublic checkIfAllMandatoryTokensFilled(): boolean {\n\t\tconst tokensInState = this.getUnSetMandatoryTokensInCurrentState();\n\t\tif (tokensInState.length !== 0) {\n\t\t\tconst tokens = this.getActualTokensFromState(tokensInState);\n\t\t\ttokens?.forEach((token) => {\n\t\t\t\ttoken.setProperty(\"valueState\", ValueState.Error);\n\t\t\t\ttoken.setProperty(\"valueStateText\", this.resourceBundle.getText(\"M_EASY_FILTER_MANDATORY_TOKEN_ERROR\"));\n\t\t\t\ttoken.openValueStateMessage();\n\t\t\t});\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic closeAllMandatoryValueStateMessages(): void {\n\t\tconst easyTokens = this.tokenizer.current?.getTokens() as EasyFilterToken[];\n\t\teasyTokens.forEach((token) => token.closeValueStateMessage());\n\t}\n\n\tasync onGoPress(magicQuery: string | undefined): Promise<void> {\n\t\tif (!magicQuery) {\n\t\t\tthis.resetState();\n\t\t\treturn;\n\t\t}\n\t\tthis.state.tokenizerEditable = true;\n\n\t\t// Call AI service to get the filter criteria\n\t\tconst easyfilter = await this.easyfilter;\n\t\tif (!easyfilter) {\n\t\t\treturn;\n\t\t}\n\t\tthis.fireEvent(\"beforeQueryProcessing\");\n\n\t\tconst easyFilterMetadata: EasyFilterMetadata = {\n\t\t\tversion: 1,\n\t\t\tentitySet: this.contextPath,\n\t\t\tfields: this.filterBarMetadata as EasyFilterPropertyMetadata[]\n\t\t};\n\n\t\tconst easyFilterResult = await easyfilter.easyFilter(magicQuery, easyFilterMetadata);\n\n\t\tif (easyFilterResult.success) {\n\t\t\t//Only add the recent query when the call is success\n\t\t\t//Do not track the recent queries when the isHistoryEnabled is set to false\n\t\t\t//It would be a violation to users privacy\n\t\t\tif (this.easyFilterInput.current?.isHistoryEnabled() ?? false) {\n\t\t\t\tthis.easyFilterInput.current?.addRecentQuery(magicQuery);\n\t\t\t}\n\t\t\tif (easyFilterResult.data.version === 1) {\n\t\t\t\tthis.handleV1Success(easyFilterResult);\n\t\t\t} else if (easyFilterResult.data.version === 2) {\n\t\t\t\t// Create the sap.ui.model.Filter from the filter and apply it directly to the list binding\n\t\t\t}\n\t\t} else {\n\t\t\t// error\n\t\t\tthis.removeNonMandatoryTokens();\n\t\t\tthis.setMessageStrip(easyFilterResult.message);\n\t\t\tthis.state.messageStripType = MessageType.Warning;\n\t\t\tLog.error(\"Error while generating filter criteria: \", easyFilterResult.message);\n\t\t}\n\n\t\tthis.fireEvent(\"afterQueryProcessing\");\n\t}\n\n\t/**\n\t * Handles the success response from the AI service for version 1 of the easy filter.\n\t * @param easyFilterResult The result from the AI service\n\t * @private\n\t */\n\tprivate handleV1Success(easyFilterResult: Success<EasyFilter.EasyFilterResult>): void {\n\t\tif (easyFilterResult.data.filter) {\n\t\t\t// We need to show a message to the user that the filter criteria has been generated\n\t\t\tLog.debug(\"Filter criteria generated: \", JSON.stringify(easyFilterResult.data.filter, null, 2));\n\n\t\t\tconst tokens = [...this.state.tokens].filter((token) => token.isRequired);\n\n\t\t\t// Clear the previous message strip for validated filters\n\t\t\tthis.clearMessageStrip();\n\n\t\t\t// Validate and apply the filter criteria\n\t\t\tEasyFilterUtils.formatData(\n\t\t\t\ttokens,\n\t\t\t\teasyFilterResult.data.filter,\n\t\t\t\tthis.filterBarMetadata as EasyFilterPropertyMetadata[],\n\t\t\t\tthis.setMessageStrip.bind(this)\n\t\t\t);\n\n\t\t\t//We only have to call the dataFetcher on the VH tokens which have been asked by the user\n\t\t\t//In Madnatory tokens case the defaultValues are already given, so no need to call dataFetcher on it\n\n\t\t\tconst allValueHelpTokens = tokens.filter((result) => result.type === \"ValueHelp\");\n\t\t\tconst requiredValueHelpTokens = allValueHelpTokens.filter((valueHelpToken) => {\n\t\t\t\treturn easyFilterResult.data.filter?.find((llmResult) => llmResult.name === valueHelpToken.key);\n\t\t\t});\n\n\t\t\tif (this.dataFetcher) {\n\t\t\t\t(requiredValueHelpTokens as unknown as ValueHelpTokenDefinition[]).forEach(async (valueHelpToken) => {\n\t\t\t\t\tconst result = await this.dataFetcher?.(\n\t\t\t\t\t\tvalueHelpToken.key,\n\t\t\t\t\t\tvalueHelpToken.keySpecificSelectedValues as unknown as TokenSelectedValuesDefinition[],\n\t\t\t\t\t\teasyFilterResult\n\t\t\t\t\t);\n\t\t\t\t\tvalueHelpToken.busy = false;\n\t\t\t\t\tif (result) {\n\t\t\t\t\t\tvalueHelpToken.keySpecificSelectedValues = result;\n\t\t\t\t\t\tthis.state.showResult = true;\n\t\t\t\t\t\tthis.state.tokens = updatedTokens;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t//If dataFetcher is not there, then mock the value and description with the same result coming from the LLM\n\t\t\t\trequiredValueHelpTokens.forEach((valueHelpToken) => {\n\t\t\t\t\tvalueHelpToken.busy = false;\n\t\t\t\t\tvalueHelpToken.keySpecificSelectedValues.forEach((keySpecificValue, idx) => {\n\t\t\t\t\t\tif (keySpecificValue.operator === FilterOperator.BT || keySpecificValue.operator === FilterOperator.NB) {\n\t\t\t\t\t\t\tvalueHelpToken.keySpecificSelectedValues[idx].selectedValues = [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tvalue: keySpecificValue.selectedValues[0],\n\t\t\t\t\t\t\t\t\tdescription: keySpecificValue.selectedValues[0] as unknown as llmResultForSelectedValuesType\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tvalue: keySpecificValue.selectedValues[1],\n\t\t\t\t\t\t\t\t\tdescription: keySpecificValue.selectedValues[1] as unknown as llmResultForSelectedValuesType\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvalueHelpToken.keySpecificSelectedValues[idx].selectedValues.forEach((value, subIndx) => {\n\t\t\t\t\t\t\t\tvalueHelpToken.keySpecificSelectedValues[idx].selectedValues[subIndx] = {\n\t\t\t\t\t\t\t\t\tvalue,\n\t\t\t\t\t\t\t\t\tdescription: value as unknown as llmResultForSelectedValuesType\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconst updatedTokens = this.verifySingleSelectTokenValues(tokens);\n\t\t\tthis.state.showResult = true;\n\t\t\tthis.state.thumbButtonEnabled = true;\n\t\t\tthis.state.thumbDownButtonPressed = false;\n\t\t\tthis.state.thumbUpButtonPressed = false;\n\t\t\tthis.state.tokens = updatedTokens;\n\t\t}\n\t}\n\n\t//every single select menu type should have only one value, else splice to one value and update the  message strip\n\tverifySingleSelectTokenValues(tokens: TokenDefinition[]): TokenDefinition[] {\n\t\tconst singleSelectTokenLabels: string[] = [];\n\t\ttokens.forEach((token) => {\n\t\t\tif (token.type === \"MenuWithSingleSelect\") {\n\t\t\t\tif (token.keySpecificSelectedValues[0].selectedValues.length > 1) {\n\t\t\t\t\tsingleSelectTokenLabels.push(token.label);\n\t\t\t\t\ttoken.keySpecificSelectedValues[0].selectedValues.splice(1);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tif (singleSelectTokenLabels.length) {\n\t\t\tthis.state.singleValueMessageStripText = this.resourceBundle.getText(\"M_EASY_FILTER_SINGLE_VALUE_MESSAGE\", [\n\t\t\t\t`<strong>${singleSelectTokenLabels.join(\", \")}</strong>`\n\t\t\t]);\n\t\t\tthis.state.showSingleValueMessageStrip = true;\n\t\t}\n\t\treturn tokens;\n\t}\n\n\tclearMessageStrip(): void {\n\t\tthis.state.thumbDownButtonPressed = false;\n\t\tthis.state.thumbUpButtonPressed = false;\n\t\tthis.state.showMessageStrip = false;\n\t\tthis.state.messageStripText = \"\";\n\t\tthis.state.messageStripType = MessageType.Error;\n\t}\n\n\tsetMessageStrip(text: string): void {\n\t\tthis.state.thumbDownButtonPressed = false;\n\t\tthis.state.thumbUpButtonPressed = false;\n\t\tthis.state.thumbButtonEnabled = true;\n\t\tthis.state.messageStripText = text;\n\t\tthis.state.showMessageStrip = true;\n\t}\n\n\tcreatePopoverForInnerControls(): Popover {\n\t\tif (!this.innerControlPopover) {\n\t\t\tthis.innerControlPopover = (\n\t\t\t\t<Popover\n\t\t\t\t\tid={this.getId() + \"-innerPopover\"}\n\t\t\t\t\tshowArrow={false}\n\t\t\t\t\tshowHeader={true}\n\t\t\t\t\tplacement={PlacementType.Bottom}\n\t\t\t\t\tclass=\"sapUiMediumMarginBottom\"\n\t\t\t\t>\n\t\t\t\t\t{{\n\t\t\t\t\t\tfooter: this.getToolbar()\n\t\t\t\t\t}}\n\t\t\t\t</Popover>\n\t\t\t);\n\t\t}\n\t\treturn this.innerControlPopover as Popover;\n\t}\n\n\tgetToolbar(): OverflowToolbar | undefined {\n\t\tif (!this.toolbar) {\n\t\t\tconst okButton = this.getOkButton();\n\t\t\tconst showAllButton = this.getShowAllButton();\n\t\t\tthis.toolbar = (\n\t\t\t\t<OverflowToolbar>\n\t\t\t\t\t{{\n\t\t\t\t\t\tcontent: (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<ToolbarSpacer />\n\t\t\t\t\t\t\t\t{okButton}\n\t\t\t\t\t\t\t\t{showAllButton}\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)\n\t\t\t\t\t}}\n\t\t\t\t</OverflowToolbar>\n\t\t\t);\n\t\t}\n\t\treturn this.toolbar;\n\t}\n\n\tgetOkButton(): Button | undefined {\n\t\tif (!this.okButton) {\n\t\t\tthis.okButton = <Button text={this.resourceBundle.getText(\"M_EASY_FILTER_POPOVER_OK\")} type={ButtonType.Emphasized} />;\n\t\t}\n\t\treturn this.okButton;\n\t}\n\n\tgetShowAllButton(): Button | undefined {\n\t\tif (!this.showAllButton) {\n\t\t\tthis.showAllButton = <Button text={this.resourceBundle.getText(\"M_EASY_FILTER_POPOVER_SHOW_ALL_ITEMS\")} />;\n\t\t}\n\t\treturn this.showAllButton;\n\t}\n\n\tformatTokens(tokens: TokenDefinition[]): TokenDefinition[] {\n\t\treturn tokens.map((token) => {\n\t\t\tif (token.type === \"ValueHelp\") {\n\t\t\t\treturn {\n\t\t\t\t\t...token,\n\t\t\t\t\tkeySpecificSelectedValues: token.keySpecificSelectedValues.map((value) => {\n\t\t\t\t\t\t//Making sure that only the id part is passed\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\toperator: value.operator,\n\t\t\t\t\t\t\tselectedValues: value.selectedValues.map((val) => val.value)\n\t\t\t\t\t\t};\n\t\t\t\t\t})\n\t\t\t\t} as TokenDefinition;\n\t\t\t} else {\n\t\t\t\treturn deepClone(token);\n\t\t\t}\n\t\t});\n\t}\n\n\tonStateChange(changedProps: string[] = []): void {\n\t\tif (changedProps.includes(\"tokens\")) {\n\t\t\tif (this.shouldTokenChangeEventFired) {\n\t\t\t\tthis.fireEvent(\"tokensChanged\", {\n\t\t\t\t\ttokens: this.formatTokens(this.state.tokens as unknown as TokenDefinition[])\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis.state.showResult = this.state.tokens.length > 0;\n\t\t\tif (!(this.isMandatoryCheckRequired ?? false)) {\n\t\t\t\tthis.checkIfAllMandatoryTokensFilled();\n\t\t\t}\n\t\t}\n\t\t//Resetting to default values\n\t\tthis.isMandatoryCheckRequired = false;\n\t\tthis.shouldTokenChangeEventFired = true;\n\n\t\t//  onsapfocusleave method in sap.m.Tokenizer is automatically converting the rendermode of tokenizer to \"Narrow\" from \"loose\"\n\t\t//  In this process there are multiple popover issues happening\n\t\t//  So as a temporary fix overriding the function\n\t\t(this.tokenizer?.current as FocusHandlingControl).onsapfocusleave = (): void => {};\n\t}\n\n\tprivate onThumbUpPressed(): void {\n\t\tthis.state.thumbUpButtonPressed = true;\n\t\tthis.state.thumbDownButtonPressed = false;\n\t\ttriggerPXIntegration(\"thumbUp\");\n\t\tthis.onThumbPressed();\n\t}\n\n\tprivate onThumbDownPressed(): void {\n\t\tthis.state.thumbDownButtonPressed = true;\n\t\tthis.state.thumbUpButtonPressed = false;\n\t\ttriggerPXIntegration(\"thumbDown\");\n\t\tthis.onThumbPressed();\n\t}\n\n\tprivate onThumbPressed(): void {\n\t\tthis.state.thumbButtonEnabled = false;\n\t\tMessageToast.show(this.resourceBundle.getText(\"C_EASY_FILTER_FEEDBACK_SENT\"));\n\t}\n\n\tcreateContent(): VBox {\n\t\tconst $topGoBtn = createReference<Button>();\n\t\tconst thumbUpButtonTokenizer = (\n\t\t\t<ToggleButton\n\t\t\t\ticon={\"sap-icon://thumb-up\"}\n\t\t\t\ttooltip={this.resourceBundle.getText(\"C_EASY_FILTER_THUMBS_UP\")}\n\t\t\t\ttype={\"Transparent\"}\n\t\t\t\tpress={(): void => {\n\t\t\t\t\treturn this.onThumbUpPressed();\n\t\t\t\t}}\n\t\t\t\tenabled={bindState(this.state, \"thumbButtonEnabled\")}\n\t\t\t\tpressed={bindState(this.state, \"thumbUpButtonPressed\")}\n\t\t\t/>\n\t\t);\n\t\tFESRHelper.setSemanticStepname(thumbUpButtonTokenizer, \"press\", \"fe4:eft:t:thumbUp\");\n\t\tconst thumbDownButtonTokenizer = (\n\t\t\t<ToggleButton\n\t\t\t\ticon={\"sap-icon://thumb-down\"}\n\t\t\t\ttooltip={this.resourceBundle.getText(\"C_EASY_FILTER_THUMBS_DOWN\")}\n\t\t\t\ttype={\"Transparent\"}\n\t\t\t\tpress={(): void => {\n\t\t\t\t\treturn this.onThumbDownPressed();\n\t\t\t\t}}\n\t\t\t\tenabled={bindState(this.state, \"thumbButtonEnabled\")}\n\t\t\t\tpressed={bindState(this.state, \"thumbDownButtonPressed\")}\n\t\t\t/>\n\t\t);\n\t\tFESRHelper.setSemanticStepname(thumbDownButtonTokenizer, \"press\", \"fe4:eft:t:thumbDown\");\n\t\tconst thumbUpButtonMessageStripe = (\n\t\t\t<ToggleButton\n\t\t\t\ticon={\"sap-icon://thumb-up\"}\n\t\t\t\ttooltip={this.resourceBundle.getText(\"C_EASY_FILTER_THUMBS_UP\")}\n\t\t\t\ttype={\"Transparent\"}\n\t\t\t\tpress={(): void => {\n\t\t\t\t\treturn this.onThumbUpPressed();\n\t\t\t\t}}\n\t\t\t\tenabled={bindState(this.state, \"thumbButtonEnabled\")}\n\t\t\t\tpressed={bindState(this.state, \"thumbUpButtonPressed\")}\n\t\t\t/>\n\t\t);\n\t\tFESRHelper.setSemanticStepname(thumbUpButtonMessageStripe, \"press\", \"fe4:eft:ms:thumbUp\");\n\t\tconst thumbDownButtonMessageStripe = (\n\t\t\t<ToggleButton\n\t\t\t\ticon={\"sap-icon://thumb-down\"}\n\t\t\t\ttooltip={this.resourceBundle.getText(\"C_EASY_FILTER_THUMBS_DOWN\")}\n\t\t\t\ttype={\"Transparent\"}\n\t\t\t\tpress={(): void => {\n\t\t\t\t\treturn this.onThumbDownPressed();\n\t\t\t\t}}\n\t\t\t\tenabled={bindState(this.state, \"thumbButtonEnabled\")}\n\t\t\t\tpressed={bindState(this.state, \"thumbDownButtonPressed\")}\n\t\t\t/>\n\t\t);\n\t\tFESRHelper.setSemanticStepname(thumbDownButtonMessageStripe, \"press\", \"fe4:eft:ms:thumbDown\");\n\t\tconst outVBox = (\n\t\t\t<VBox>\n\t\t\t\t<FlexBox renderType=\"Bare\">\n\t\t\t\t\t<EasyFilterInput\n\t\t\t\t\t\trecommendedValues={this.recommendedValues}\n\t\t\t\t\t\tref={this.easyFilterInput}\n\t\t\t\t\t\tenterPressed={this.onEnterPressed.bind(this)}\n\t\t\t\t\t\tqueryChanged={(e): void => {\n\t\t\t\t\t\t\tthis.fireEvent(\"queryChanged\", { query: e.getParameter(\"query\") });\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tliveChange={(): void => {\n\t\t\t\t\t\t\tthis.state.tokenizerEditable = false;\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<Button\n\t\t\t\t\t\ticon={\"sap-icon://ai\"}\n\t\t\t\t\t\tclass={\"sapUiSmallMarginBegin\"}\n\t\t\t\t\t\tref={$topGoBtn}\n\t\t\t\t\t\ttext={this.resourceBundle.getText(\"M_EASY_FILTER_GO\")}\n\t\t\t\t\t\ttype={ButtonType.Emphasized}\n\t\t\t\t\t\tpress={this.onGoButtonPress.bind(this)}\n\t\t\t\t\t/>\n\t\t\t\t</FlexBox>\n\t\t\t\t<FlexBox\n\t\t\t\t\trenderType=\"Bare\"\n\t\t\t\t\tvisible={bindState(this.state, \"showResult\")}\n\t\t\t\t\talignItems={FlexAlignItems.Center}\n\t\t\t\t\twrap={FlexWrap.Wrap}\n\t\t\t\t\tjustifyContent={FlexJustifyContent.SpaceBetween}\n\t\t\t\t\tclass={\"sapUiTinyMarginTop\"}\n\t\t\t\t>\n\t\t\t\t\t<FlexBox class={\"sapFeControlsGap8px\"} renderType=\"Bare\" alignItems={FlexAlignItems.Center} wrap={FlexWrap.Wrap}>\n\t\t\t\t\t\t<AINotice resourceBundle={this.resourceBundle} />\n\t\t\t\t\t\t<Tokenizer\n\t\t\t\t\t\t\teditable={and(bindState(this.state, \"tokenizerEditable\"), true)}\n\t\t\t\t\t\t\tclass={\"sapFeControlsTokenizer\"}\n\t\t\t\t\t\t\ttokens={bindState(this.state, \"tokens\")}\n\t\t\t\t\t\t\trenderMode={TokenizerRenderMode.Loose}\n\t\t\t\t\t\t\tref={this.tokenizer}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{{\n\t\t\t\t\t\t\t\ttokens: (idx: number, ctx: Context): Token => {\n\t\t\t\t\t\t\t\t\tconst object = ctx.getObject() as TokenDefinition;\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<Token\n\t\t\t\t\t\t\t\t\t\t\tkey={this.state.tokens.key}\n\t\t\t\t\t\t\t\t\t\t\tlabel={this.state.tokens.label}\n\t\t\t\t\t\t\t\t\t\t\titems={this.state.tokens.keySpecificSelectedValues}\n\t\t\t\t\t\t\t\t\t\t\tmandatory={this.isKeyMandatory(object.key)}\n\t\t\t\t\t\t\t\t\t\t\tbusy={this.state.tokens.busy}\n\t\t\t\t\t\t\t\t\t\t\tdelete={(): void => {\n\t\t\t\t\t\t\t\t\t\t\t\tconst tokenIndex = this.state.tokens.findIndex((token) => token.key === object.key);\n\t\t\t\t\t\t\t\t\t\t\t\tconst newTokens = this.state.tokens.concat();\n\t\t\t\t\t\t\t\t\t\t\t\tnewTokens.splice(tokenIndex, 1);\n\t\t\t\t\t\t\t\t\t\t\t\tthis.state.tokens = newTokens;\n\t\t\t\t\t\t\t\t\t\t\t\tthis.updateFilterInput(\"tokenUpdated\");\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{{\n\t\t\t\t\t\t\t\t\t\t\t\tcustomData: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t<CustomData key=\"TokenInfo\" value={object} />,\n\t\t\t\t\t\t\t\t\t\t\t\t\t<CustomData key=\"popover\" value={this.innerControlPopover} />,\n\t\t\t\t\t\t\t\t\t\t\t\t\t<CustomData key=\"easyFilterBarContainer\" value={this} />,\n\t\t\t\t\t\t\t\t\t\t\t\t\t<CustomData\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey=\"codeList\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={this.filterBarMetadata?.find((data) => data.name === object.key)?.codeList}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t</Token>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t</Tokenizer>\n\t\t\t\t\t\t<HBox>\n\t\t\t\t\t\t\t{thumbUpButtonTokenizer}, {thumbDownButtonTokenizer}\n\t\t\t\t\t\t</HBox>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\ttext={this.resourceBundle.getText(\"M_EASY_FILTER_RESET\")}\n\t\t\t\t\t\t\ttype={ButtonType.Transparent}\n\t\t\t\t\t\t\tpress={(): void => {\n\t\t\t\t\t\t\t\tthis.resetState();\n\t\t\t\t\t\t\t\t//Retaining the focus on popover doesn't make the popover close on every interaction\n\t\t\t\t\t\t\t\tthis.easyFilterInput.current?.$searchInput.focus();\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</FlexBox>\n\t\t\t\t</FlexBox>\n\t\t\t\t<FlexBox renderType=\"Bare\">\n\t\t\t\t\t<MessageStrip\n\t\t\t\t\t\ttext={bindState(this.state, \"singleValueMessageStripText\")}\n\t\t\t\t\t\tshowIcon={true}\n\t\t\t\t\t\tenableFormattedText={true}\n\t\t\t\t\t\tvisible={bindState(this.state, \"showSingleValueMessageStrip\")}\n\t\t\t\t\t\tshowCloseButton={true}\n\t\t\t\t\t\tclose={(): void => {\n\t\t\t\t\t\t\tthis.state.showSingleValueMessageStrip = false;\n\t\t\t\t\t\t\tthis.state.singleValueMessageStripText = \"\";\n\t\t\t\t\t\t}}\n\t\t\t\t\t></MessageStrip>\n\t\t\t\t</FlexBox>\n\t\t\t\t<FlexBox renderType=\"Bare\" class={\"sapFeControlsGap8px\"}>\n\t\t\t\t\t<MessageStrip\n\t\t\t\t\t\ttype={bindState(this.state, \"messageStripType\")}\n\t\t\t\t\t\ttext={bindState(this.state, \"messageStripText\")}\n\t\t\t\t\t\tshowIcon={true}\n\t\t\t\t\t\tenableFormattedText={true}\n\t\t\t\t\t\tshowCloseButton={true}\n\t\t\t\t\t\tclose={(): void => {\n\t\t\t\t\t\t\tthis.clearMessageStrip();\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tvisible={bindState(this.state, \"showMessageStrip\")}\n\t\t\t\t\t></MessageStrip>\n\t\t\t\t\t<HBox visible={bindState(this.state, \"showMessageStrip\")}>\n\t\t\t\t\t\t{thumbUpButtonMessageStripe}, {thumbDownButtonMessageStripe}\n\t\t\t\t\t</HBox>\n\t\t\t\t</FlexBox>\n\t\t\t</VBox>\n\t\t) as VBox;\n\t\tFESRHelper.setSemanticStepname($topGoBtn.current!, \"press\", \"fe:ai:search\");\n\t\treturn outVBox;\n\t}\n\n\tasync onGoButtonPress(): Promise<void> {\n\t\tthis.state.tokenizerEditable = true;\n\t\tlet currentInputValue = this.easyFilterInput.current?.getValue();\n\t\tconst currentInputPlaceholder = this.easyFilterInput.current?.getPlaceholder();\n\n\t\tif (currentInputValue === \"\" && currentInputPlaceholder !== this.resourceBundle.getText(\"M_EASY_FILTER_PLACEHOLDER\")) {\n\t\t\tthis.easyFilterInput.current?.setValue(currentInputPlaceholder || \"\");\n\t\t\tcurrentInputValue = currentInputPlaceholder;\n\t\t}\n\t\tawait this.onGoPress(currentInputValue);\n\t}\n\n\tresetState(clearAllFilters = true): void {\n\t\tif (clearAllFilters) {\n\t\t\tthis.fireEvent(\"clearFilters\");\n\t\t} else {\n\t\t\tthis.shouldTokenChangeEventFired = false;\n\t\t}\n\t\tthis.state.tokens = this.getDefaultTokens();\n\t\tthis.updateFilterInput(\"tokenReset\");\n\t\tthis.state.tokenizerEditable = true;\n\t\tthis.isMandatoryCheckRequired = true;\n\t\t//Set the Value States of all the Tokens back to None\n\t\tthis.tokenizer.current?.getTokens().forEach((token) => token.setProperty(\"valueState\", ValueState.None));\n\t\tthis.tokenizer.current?.getTokens().forEach((token) => token.setProperty(\"valueStateText\", null));\n\t\tthis.clearMessageStrip(); //clear the message strip for validated filters\n\t}\n\n\t//The below code updates the existing state by fetching the key and selectedValues\n\tupdateTokenArray(\n\t\tchangeType: TokenSetters,\n\t\tnewTokenSpecificValues: TokenSelectedValuesDefinition[] | ValueHelpSelectedValuesDefinition[],\n\t\ttokenKey: string\n\t): void {\n\t\tconst newTokens = this.state.tokens.map((token) => ({ ...token, keySpecificSelectedValues: [...token.keySpecificSelectedValues] }));\n\t\tconst tokenIndex = newTokens.findIndex((t) => t.key === tokenKey);\n\t\tconst token = newTokens[tokenIndex];\n\t\tif (tokenIndex != -1) {\n\t\t\tswitch (changeType) {\n\t\t\t\tcase \"setSelectedValues\":\n\t\t\t\t\tthis.setSelectedValues(token as TokenDefinition, newTokenSpecificValues, tokenIndex, newTokens as TokenDefinition[]);\n\t\t\t\t\ttoken.keySpecificSelectedValues = newTokenSpecificValues;\n\t\t\t\t\t//Remove the token entirely\n\t\t\t\t\tif (!this.isKeyMandatory(token.key) && token.keySpecificSelectedValues.length === 0) {\n\t\t\t\t\t\tnewTokens.splice(tokenIndex, 1);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tLog.error(\"Specifying a setter that is out of the boundary\");\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\t// Update the state by assigning the new tokens array\n\t\t\tthis.state.tokens = newTokens as TokenDefinition[];\n\t\t\tthis.state.showResult = newTokens.length > 0;\n\t\t\tthis.updateFilterInput(\"tokenUpdated\");\n\t\t}\n\t}\n\n\tpublic closeInnerControlPopover(): void {\n\t\tthis.innerControlPopover?.close();\n\t}\n\n\tprivate setSelectedValues(\n\t\ttoken: TokenDefinition,\n\t\tnewTokenSpecificValues: TokenSelectedValuesDefinition[] | ValueHelpSelectedValuesDefinition[],\n\t\ttokenIndex: number,\n\t\tnewTokens: TokenDefinition[]\n\t): void {\n\t\ttoken.keySpecificSelectedValues = newTokenSpecificValues;\n\t\tif (!this.isKeyMandatory(token.key) && token.keySpecificSelectedValues.length === 0) {\n\t\t\tnewTokens.splice(tokenIndex, 1);\n\t\t}\n\t}\n\n\tisKeyMandatory(key: string): boolean {\n\t\tif (!this.mandatoryKeyMap) {\n\t\t\tthis.mandatoryKeyMap = {};\n\t\t}\n\t\treturn this.mandatoryKeyMap[key] ? true : false;\n\t}\n\n\tremoveNonMandatoryTokens(): this {\n\t\tconst newToken: TokenDefinition[] = this.state.tokens.filter((token) => {\n\t\t\treturn this.isKeyMandatory(token.key);\n\t\t});\n\t\tthis.state.tokens = newToken;\n\t\treturn this;\n\t}\n\n\tupdateFilterInput(value: string): void {\n\t\tconst currValue: string = this.easyFilterInput.current?.getValue() || \"\";\n\t\tif (value === \"tokenUpdated\" && currValue !== \"\") {\n\t\t\tthis.easyFilterInput.current?.setValue(\"\");\n\t\t\tthis.easyFilterInput.current?.setPlaceholder(currValue);\n\t\t} else if (value === \"tokenReset\") {\n\t\t\tthis.easyFilterInput.current?.setValue(\"\");\n\t\t\tthis.easyFilterInput.current?.setPlaceholder(this.resourceBundle.getText(\"M_EASY_FILTER_PLACEHOLDER\"));\n\t\t}\n\t}\n\n\tgetTokensInInitialState(): TokenDefinition[] {\n\t\tconst newTokens = this.state.tokens.map((token) => ({ ...token, keySpecificSelectedValues: [...token.keySpecificSelectedValues] }));\n\t\tconst mandatoryTokens = newTokens.filter((token) => {\n\t\t\tif (this.isKeyMandatory(token.key)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\t\treturn mandatoryTokens.map((token) => ({ ...token, keySpecificSelectedValues: [] }));\n\t}\n\n\tgetUnSetMandatoryTokensInCurrentState(): TokenDefinition[] {\n\t\treturn this.state.tokens.filter((token) => {\n\t\t\tconst isKeyMandatory = this.isKeyMandatory(token.key);\n\t\t\tif (isKeyMandatory) {\n\t\t\t\treturn token.keySpecificSelectedValues.length === 0;\n\t\t\t}\n\t\t});\n\t}\n\n\tgetActualTokensFromState(tokens: TokenDefinition[]): EasyFilterToken[] | undefined {\n\t\tconst requiredKeys = tokens.map((token) => token.key);\n\t\treturn this.tokenizer.current?.getTokens().filter((token) => requiredKeys.includes(token.getKey())) as\n\t\t\t| EasyFilterToken[]\n\t\t\t| undefined;\n\t}\n\n\tstatic render(rm: RenderManager, control: EasyFilterBarContainer): void {\n\t\treturn jsx.renderUsingRenderManager(rm, control, () => {\n\t\t\treturn <span ref={control}>{control.getAggregation(\"content\")}</span>;\n\t\t});\n\t}\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":"easyFilter"}},{"offset":{"line":16,"column":0},"map":{"version":3,"names":["EasyFilterInput","_dec","defineUI5Class","_dec2","aggregation","type","multiple","isDefault","_dec3","property","_dec4","_dec5","event","_dec6","_dec7","_dec8","defineState","_class","_class2","_Control","properties","others","_this","call","this","_initializerDefineProperty","_descriptor","_descriptor2","_descriptor3","_descriptor4","_descriptor5","_descriptor6","_descriptor7","initialize","_exports","_inheritsLoose","_proto","prototype","getValue","$searchInput","isHistoryEnabled","state","valueOf","setValue","value","setPlaceholder","getPlaceholder","recommendedQueries","recommendedValues","resourceBundle","Lib","getResourceBundleFor","popoverInvisibleMessage","InvisibleMessage","getInstance","createInput","setAsInvalid","message","setValueState","ValueState","Warning","setValueStateText","openValueStateMessage","setAsValid","None","closeValueStateMessage","_jsx","Input","width","showClearIcon","change","e","fireEvent","query","getParameter","liveChange","queryChanged","getSource","$favoritePopover","isOpen","openSuggestionPopover","getText","getValueState","placeholder","favoritePopover","createFavoritePopover","addDependent","addEventDelegate","onkeyup","key","onEnterPressed","close","onkeydown","length","preventDefault","popoverConainer","getContent","containerItems","getItems","find","item","isFocusable","focus","ontap","onfocusin","targetText","target","outerText","targetId","id","includes","favoriteQueries","filter","data","toLowerCase","recentQueries","onAfterRendering","announce","InvisibleMessageMode","Assertive","shellHistoryProvider","getFavoriteQueries","getRecentQueries","map","openBy","requestFavorite","magicQuery","addRecentQuery","queryString","replace","recentQueryIndex","findIndex","concat","slice","unshift","onStateChange","changedProps","arguments","undefined","setFavoriteQueries","setRecentQueries","recentQueriesWitFavorites","recentQuery","text","isFavorite","favoriteQuery","initShellHistoryProvider","async","ShellHistoryProvider","appId","error","Log","Popover","getId","showHeader","horizontalScrolling","placement","PlacementType","Bottom","showArrow","initialFocus","class","visible","equal","bindState","children","content","FlexBox","direction","FlexDirection","Column","renderType","items","Title","titleStyle","TitleLevel","H6","HBox","wrap","FlexWrap","Wrap","ctx","Button","getObject","press","bind","List","noData","IllustratedMessage","title","illustrationSize","IllustratedMessageSize","ExtraSmall","illustrationType","IllustratedMessageType","NoEntries","description","CustomListItem","ariaLabelledBy","customData","CustomData","_jsxs","Row","alignItems","FlexAlignItems","Center","justifyContent","FlexJustifyContent","SpaceBetween","Text","tooltip","wrapping","icon","ButtonType","Transparent","index","indexOf","dependents","EventDelegateHook","tap","triggerPXIntegration","mode","ListMode","Delete","delete","enabled","lessThan","removeFromFavorites","addToFavorites","newFavorite","pop","render","rm","control","jsx","renderUsingRenderManager","ref","Control","_applyDecoratedDescriptor","configurable","enumerable","writable","initializer"],"sources":["./EasyFilterInput.tsx"],"sourcesContent":["import Log from \"sap/base/Log\";\nimport type ResourceBundle from \"sap/base/i18n/ResourceBundle\";\nimport type { PathInModelExpression } from \"sap/fe/base/BindingToolkit\";\nimport { bindState, equal, length, lessThan } from \"sap/fe/base/BindingToolkit\";\nimport { aggregation, defineState, defineUI5Class, event, property, type PropertiesOf, type StateOf } from \"sap/fe/base/ClassSupport\";\nimport EventDelegateHook from \"sap/fe/base/EventDelegateHook\";\nimport jsx from \"sap/fe/base/jsx-runtime/jsx\";\nimport ShellHistoryProvider from \"sap/fe/controls/easyFilter/ShellHistoryProvider\";\nimport type { Button$PressEvent } from \"sap/m/Button\";\nimport Button from \"sap/m/Button\";\nimport CustomListItem from \"sap/m/CustomListItem\";\nimport FlexBox from \"sap/m/FlexBox\";\nimport HBox from \"sap/m/HBox\";\nimport IllustratedMessage from \"sap/m/IllustratedMessage\";\nimport IllustratedMessageSize from \"sap/m/IllustratedMessageSize\";\nimport IllustratedMessageType from \"sap/m/IllustratedMessageType\";\nimport type { Input$LiveChangeEvent } from \"sap/m/Input\";\nimport Input from \"sap/m/Input\";\nimport List from \"sap/m/List\";\nimport type { ListBase$DeleteEvent } from \"sap/m/ListBase\";\nimport Popover from \"sap/m/Popover\";\nimport type StandardListItem from \"sap/m/StandardListItem\";\nimport Text from \"sap/m/Text\";\nimport Title from \"sap/m/Title\";\nimport { ButtonType, FlexAlignItems, FlexDirection, FlexJustifyContent, FlexWrap, ListMode, PlacementType } from \"sap/m/library\";\nimport type UI5Event from \"sap/ui/base/Event\";\nimport type { $ControlSettings } from \"sap/ui/core/Control\";\nimport Control from \"sap/ui/core/Control\";\nimport CustomData from \"sap/ui/core/CustomData\";\nimport InvisibleMessage from \"sap/ui/core/InvisibleMessage\";\nimport Lib from \"sap/ui/core/Lib\";\nimport type RenderManager from \"sap/ui/core/RenderManager\";\nimport { InvisibleMessageMode, TitleLevel, ValueState } from \"sap/ui/core/library\";\nimport type Context from \"sap/ui/model/Context\";\nimport type { EventHandler } from \"../../../../../../../types/extension_types\";\nimport { triggerPXIntegration } from \"./PXFeedback\";\n\ntype RecentType = {\n\ttext: string;\n\tisFavorite: boolean;\n};\n@defineUI5Class(\"sap.fe.controls.easyFilter.EasyFilterInput\")\nexport default class EasyFilterInput extends Control {\n\t@aggregation({ type: \"sap.m.Input\", multiple: false, isDefault: true })\n\t$searchInput!: Input;\n\n\t@property({ type: \"string\" })\n\tappId?: string;\n\n\t@property({ type: \"array\" })\n\trecommendedValues?: string[];\n\n\t@event()\n\tqueryChanged?: EventHandler<UI5Event<{ query: string }, EasyFilterInput>>;\n\n\t@event()\n\tenterPressed?: EventHandler<UI5Event<{ query: string }, EasyFilterInput>>;\n\n\t@event()\n\tliveChange?: EventHandler;\n\n\tprivate resourceBundle!: ResourceBundle;\n\n\tshellHistoryProvider: ShellHistoryProvider | undefined;\n\n\tpopoverInvisibleMessage: InvisibleMessage | undefined;\n\n\t$favoritePopover: Popover | undefined;\n\n\t@defineState()\n\tprotected state: StateOf<{\n\t\tqueryChanged: boolean;\n\t\trecentQueries: readonly string[];\n\t\trecentQueriesWitFavorites: readonly RecentType[];\n\t\tisHistoryEnabled: boolean;\n\t\tfavoriteQueries: string[];\n\t\trecommendedQueries: string[];\n\t}> = {\n\t\tqueryChanged: false,\n\t\tisHistoryEnabled: false,\n\t\trecentQueries: [],\n\t\trecentQueriesWitFavorites: [],\n\t\tfavoriteQueries: [] as string[],\n\t\trecommendedQueries: [] as string[]\n\t};\n\n\tconstructor(properties: string | ($ControlSettings & PropertiesOf<EasyFilterInput>), others?: $ControlSettings) {\n\t\tsuper(properties as string, others);\n\t\tthis.initialize();\n\t}\n\n\tpublic getValue(): string {\n\t\treturn this.$searchInput.getValue();\n\t}\n\n\tpublic isHistoryEnabled(): boolean {\n\t\treturn this.state.isHistoryEnabled.valueOf();\n\t}\n\n\tsetValue(value: string): this {\n\t\tthis.$searchInput.setValue(value);\n\t\treturn this;\n\t}\n\n\tsetPlaceholder(value: string): this {\n\t\tthis.$searchInput.setPlaceholder(value);\n\t\treturn this;\n\t}\n\n\tpublic getPlaceholder(): string {\n\t\treturn this.$searchInput.getPlaceholder();\n\t}\n\n\tinitialize(): void {\n\t\tthis.state.recommendedQueries = this.recommendedValues ?? [];\n\t\tthis.resourceBundle = Lib.getResourceBundleFor(\"sap.fe.controls\")!;\n\t\tthis.popoverInvisibleMessage = InvisibleMessage.getInstance();\n\t\tthis.createInput();\n\t}\n\n\tsetAsInvalid(message: string): void {\n\t\tthis.$searchInput.setValueState(ValueState.Warning);\n\t\tthis.$searchInput.setValueStateText(message);\n\t\tthis.$searchInput.openValueStateMessage();\n\t}\n\n\tsetAsValid(): void {\n\t\tthis.$searchInput.setValueState(ValueState.None);\n\t\tthis.$searchInput.closeValueStateMessage();\n\t}\n\n\tcreateInput(): void {\n\t\tthis.$searchInput = (\n\t\t\t<Input\n\t\t\t\twidth=\"100%\"\n\t\t\t\tshowClearIcon={true}\n\t\t\t\tchange={(e): void => {\n\t\t\t\t\tthis.fireEvent(\"queryChanged\", { query: e.getParameter(\"value\") });\n\t\t\t\t}}\n\t\t\t\tliveChange={(e: Input$LiveChangeEvent): void => {\n\t\t\t\t\tthis.state.queryChanged = true;\n\t\t\t\t\tthis.fireEvent(\"liveChange\");\n\t\t\t\t\tif (!e.getSource().getValue() && !(this.$favoritePopover?.isOpen() ?? false)) {\n\t\t\t\t\t\tthis.openSuggestionPopover();\n\t\t\t\t\t}\n\t\t\t\t\tif (e.getParameter(\"value\") === \"\") {\n\t\t\t\t\t\tthis.setPlaceholder(this.resourceBundle.getText(\"M_EASY_FILTER_PLACEHOLDER\"));\n\t\t\t\t\t}\n\t\t\t\t\tif (this.$searchInput.getValueState() === ValueState.Warning) {\n\t\t\t\t\t\tthis.setAsValid();\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t\tplaceholder={this.resourceBundle.getText(\"M_EASY_FILTER_PLACEHOLDER\")}\n\t\t\t></Input>\n\t\t);\n\n\t\tconst favoritePopover = this.createFavoritePopover();\n\t\tthis.$favoritePopover = favoritePopover;\n\n\t\tthis.$searchInput.addDependent(favoritePopover);\n\t\tthis.$searchInput.addEventDelegate({\n\t\t\tonkeyup: (e: KeyboardEvent) => {\n\t\t\t\tif (e.key === \"Enter\") {\n\t\t\t\t\tthis.onEnterPressed();\n\t\t\t\t}\n\t\t\t\tif (this.$favoritePopover && this.$searchInput.getValue()) {\n\t\t\t\t\tthis.$favoritePopover.close();\n\t\t\t\t}\n\t\t\t},\n\t\t\tonkeydown: (e: KeyboardEvent) => {\n\t\t\t\tif (\n\t\t\t\t\te.key === \"Tab\" &&\n\t\t\t\t\tthis.$searchInput?.getValue().length === 0 &&\n\t\t\t\t\tthis.$searchInput?.getValue() !== this.$searchInput?.getPlaceholder() &&\n\t\t\t\t\tthis.$searchInput?.getPlaceholder() !== this.resourceBundle.getText(\"M_EASY_FILTER_PLACEHOLDER\")\n\t\t\t\t) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tthis.$searchInput?.setValue(this.$searchInput?.getPlaceholder());\n\t\t\t\t\tthis.fireEvent(\"liveChange\");\n\t\t\t\t} else if (e.key === \"ArrowDown\") {\n\t\t\t\t\tconst popoverConainer = this.$favoritePopover?.getContent()[0];\n\t\t\t\t\tconst containerItems = (popoverConainer as FlexBox).getItems();\n\t\t\t\t\tcontainerItems?.find((item) => item.isFocusable() && (item.focus(), true));\n\t\t\t\t}\n\t\t\t},\n\t\t\tontap: () => {\n\t\t\t\tthis.openSuggestionPopover();\n\t\t\t},\n\t\t\tonfocusin: () => {\n\t\t\t\tthis.openSuggestionPopover();\n\t\t\t}\n\t\t});\n\t\tthis.$favoritePopover.addEventDelegate({\n\t\t\tonkeydown: (e: KeyboardEvent) => {\n\t\t\t\tconst targetText = (e.target as HTMLElement)?.outerText;\n\t\t\t\tconst targetId = (e.target as HTMLElement)?.id;\n\t\t\t\tswitch (e.key) {\n\t\t\t\t\tcase \"Enter\":\n\t\t\t\t\t\tthis.$searchInput?.setValue(targetText);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"Delete\":\n\t\t\t\t\t\tif (targetId?.includes(\"easyFilterFavoriteItem\")) {\n\t\t\t\t\t\t\tthis.state.favoriteQueries = this.state.favoriteQueries.filter(\n\t\t\t\t\t\t\t\t(data) => data.toLowerCase() !== targetText.toLowerCase()\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.state.recentQueries = this.state.recentQueries.filter((query) => query !== targetText);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"Escape\":\n\t\t\t\t\t\tif (this.$favoritePopover?.isOpen()) {\n\t\t\t\t\t\t\tthis.$favoritePopover.close();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t},\n\t\t\tonAfterRendering: () => {\n\t\t\t\tthis.popoverInvisibleMessage?.announce(\n\t\t\t\t\tthis.resourceBundle.getText(\"T_EASY_FILTER_INPUT_TEXT_LINK_POPOVER_ARIA\"),\n\t\t\t\t\tInvisibleMessageMode.Assertive\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate openSuggestionPopover(): void {\n\t\tif (!this.$searchInput?.getValue() && (!this.$favoritePopover || !this.$favoritePopover?.isOpen())) {\n\t\t\t// Open the easy filter popover\n\t\t\tthis.state.isHistoryEnabled = this.shellHistoryProvider?.isHistoryEnabled() ?? false;\n\t\t\tthis.state.favoriteQueries = this.shellHistoryProvider?.getFavoriteQueries() ?? [];\n\t\t\tthis.state.recentQueries = (this.shellHistoryProvider?.getRecentQueries() ?? []).map((query) => query);\n\t\t\tthis.$favoritePopover?.openBy(this.$searchInput);\n\t\t}\n\t}\n\n\trequestFavorite(e: Button$PressEvent): void {\n\t\tthis.$favoritePopover?.close();\n\t\tthis.$searchInput?.setValue(e.getSource().getText());\n\t\tthis.onEnterPressed();\n\t}\n\n\tonEnterPressed(): void {\n\t\tthis.$favoritePopover?.close();\n\t\tthis.state.queryChanged = false;\n\t\tlet magicQuery = this.$searchInput?.getValue();\n\t\tif (magicQuery === \"\" && this.$searchInput.getPlaceholder() !== this.resourceBundle.getText(\"M_EASY_FILTER_PLACEHOLDER\")) {\n\t\t\tmagicQuery = this.$searchInput.getPlaceholder();\n\t\t\tthis.$searchInput?.setValue(magicQuery);\n\t\t}\n\t\tthis.$searchInput?.setValueStateText(\"\");\n\t\tthis.$searchInput?.setValueState(\"None\");\n\t\tthis.fireEvent(\"enterPressed\", { query: magicQuery });\n\t}\n\n\taddRecentQuery(queryString: string | undefined): void {\n\t\t// Normalize backslashes before storing\n\t\tqueryString = queryString?.replace(/\\\\/g, \"\\\\\\\\\");\n\n\t\tconst recentQueryIndex = this.state.recentQueries.findIndex((query) => query.toLowerCase() === queryString?.toLowerCase());\n\t\tif (queryString && recentQueryIndex === -1) {\n\t\t\tthis.state.recentQueries = [queryString].concat(this.state.recentQueries);\n\t\t\tif (this.state.recentQueries.length > 5) {\n\t\t\t\tthis.state.recentQueries = this.state.recentQueries.slice(0, 5);\n\t\t\t}\n\t\t} else if (queryString) {\n\t\t\tconst recentQueries = this.state.recentQueries.filter((query) => query.toLowerCase() !== queryString?.toLowerCase());\n\t\t\trecentQueries.unshift(queryString);\n\t\t\tthis.state.recentQueries = recentQueries;\n\t\t}\n\t}\n\n\tonStateChange(changedProps: string[] = []): void {\n\t\tif (changedProps.includes(\"favoriteQueries\") || changedProps.includes(\"recentQueries\")) {\n\t\t\tthis.shellHistoryProvider?.setFavoriteQueries(this.state.favoriteQueries);\n\t\t\tthis.shellHistoryProvider?.setRecentQueries(this.state.recentQueries.map((query) => query));\n\t\t\tthis.state.recentQueriesWitFavorites = this.state.recentQueries.map((recentQuery) => {\n\t\t\t\treturn {\n\t\t\t\t\ttext: recentQuery,\n\t\t\t\t\tisFavorite: !!this.state.favoriteQueries.find((favoriteQuery) => favoriteQuery === recentQuery)\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\t}\n\n\tasync initShellHistoryProvider(): Promise<void> {\n\t\ttry {\n\t\t\tthis.shellHistoryProvider = await ShellHistoryProvider.getInstance(this.appId ?? \"<unknownApp>\");\n\t\t} catch (error) {\n\t\t\tLog.error(\"Error while creating ShellHistoryProvider for easy filter\", error as string);\n\t\t}\n\t}\n\n\tcreateFavoritePopover(): Popover {\n\t\treturn (\n\t\t\t<Popover\n\t\t\t\tid={this.getId() + \"-favoritePopover\"}\n\t\t\t\tshowHeader={false}\n\t\t\t\thorizontalScrolling={false}\n\t\t\t\tplacement={PlacementType.Bottom}\n\t\t\t\tshowArrow={false}\n\t\t\t\tinitialFocus={this.$searchInput}\n\t\t\t\tclass={\"sapFEControlsPopover\"}\n\t\t\t\tvisible={this.state.recommendedQueries.length > 0 || equal(bindState(this.state, \"isHistoryEnabled\"), true)}\n\t\t\t>\n\t\t\t\t{{\n\t\t\t\t\tcontent: (\n\t\t\t\t\t\t<FlexBox direction={FlexDirection.Column} class={\"sapUiContentPadding\"} renderType={\"Bare\"}>\n\t\t\t\t\t\t\t{{\n\t\t\t\t\t\t\t\titems: [\n\t\t\t\t\t\t\t\t\t<Title\n\t\t\t\t\t\t\t\t\t\ttitleStyle={TitleLevel.H6}\n\t\t\t\t\t\t\t\t\t\ttext={this.resourceBundle.getText(\"M_EASY_FILTER_POPOVER_SUGGESTIONS_TITLE\")}\n\t\t\t\t\t\t\t\t\t\tclass={\"sapFeControlsTitleBorder\"}\n\t\t\t\t\t\t\t\t\t\tvisible={this.state.recommendedQueries.length > 0}\n\t\t\t\t\t\t\t\t\t/>,\n\t\t\t\t\t\t\t\t\t<HBox\n\t\t\t\t\t\t\t\t\t\tclass={\"sapUiContentPadding\"}\n\t\t\t\t\t\t\t\t\t\titems={bindState(this.state, \"recommendedQueries\")}\n\t\t\t\t\t\t\t\t\t\twrap={FlexWrap.Wrap}\n\t\t\t\t\t\t\t\t\t\tvisible={this.state.recommendedQueries.length > 0}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{{\n\t\t\t\t\t\t\t\t\t\t\titems: (id: string, ctx: Context): StandardListItem => {\n\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclass={\"sapUiTinyMarginEnd\"}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttext={ctx.getObject()}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tpress={this.requestFavorite.bind(this)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t</HBox>,\n\t\t\t\t\t\t\t\t\t<Title\n\t\t\t\t\t\t\t\t\t\tid={this.getId() + \"-easyFilterFavoriteTitle\"}\n\t\t\t\t\t\t\t\t\t\ttitleStyle={TitleLevel.H6}\n\t\t\t\t\t\t\t\t\t\ttext={this.resourceBundle.getText(\"M_EASY_FILTER_POPOVER_FAVORITE_TITLE\")}\n\t\t\t\t\t\t\t\t\t\tclass={\"sapFeControlsTitleBorder\"}\n\t\t\t\t\t\t\t\t\t\tvisible={equal(bindState(this.state, \"isHistoryEnabled\"), true)}\n\t\t\t\t\t\t\t\t\t/>,\n\t\t\t\t\t\t\t\t\t<List\n\t\t\t\t\t\t\t\t\t\titems={bindState(this.state, \"favoriteQueries\")}\n\t\t\t\t\t\t\t\t\t\tvisible={equal(bindState(this.state, \"isHistoryEnabled\"), true)}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{{\n\t\t\t\t\t\t\t\t\t\t\tnoData: (\n\t\t\t\t\t\t\t\t\t\t\t\t<IllustratedMessage\n\t\t\t\t\t\t\t\t\t\t\t\t\ttitle={this.resourceBundle.getText(\"M_EASY_FILTER_POPOVER_EMPTY_FAVORITE_TITLE\")}\n\t\t\t\t\t\t\t\t\t\t\t\t\tillustrationSize={IllustratedMessageSize.ExtraSmall}\n\t\t\t\t\t\t\t\t\t\t\t\t\tillustrationType={IllustratedMessageType.NoEntries}\n\t\t\t\t\t\t\t\t\t\t\t\t\tdescription={this.resourceBundle.getText(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"M_EASY_FILTER_POPOVER_EMPTY_FAVORITE_DESCRIPTION\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\titems: (id: string, ctx: Context): StandardListItem => {\n\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<CustomListItem\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tid={id + \"-easyFilterFavoriteItem\"}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclass={\"sapUiSmallMarginBegin\"}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tariaLabelledBy={[id + \"-easyFilterFavoriteTitle\"]}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcustomData={[<CustomData key={\"text\"} value={ctx.getObject()} />]}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tpress={(): void => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.$searchInput.setValue(ctx.getObject());\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.onEnterPressed();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FlexBox\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twidth={\"100%\"}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdirection={FlexDirection.Row}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\talignItems={FlexAlignItems.Center}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent={FlexJustifyContent.SpaceBetween}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trenderType={\"Bare\"}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid={id}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Text\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttext={ctx.getObject()}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttooltip={ctx.getObject()}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twrapping={false}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclass=\"sapFEControlsPointer\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t></Text>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ticon={\"sap-icon://favorite\"}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttooltip={this.resourceBundle.getText(\"M_EASY_FILTER_FILLED_STAR\")}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tariaLabelledBy={[this.getId() + \"-easyFilterFavoriteItem\"]}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype={ButtonType.Transparent}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpress={(): void => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//Retaining the focus on popover doesn't make the popover close on every interaction\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.$favoritePopover?.focus();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst queryString = ctx.getObject();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst index = this.state.favoriteQueries.indexOf(queryString);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (index !== -1) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.state.favoriteQueries = this.state.favoriteQueries.filter(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(query) => query !== queryString\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdependents: (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<EventDelegateHook\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttap={(): void => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.$searchInput?.setValue(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tctx.getObject().replace(/\\\\\\\\/g, \"\\\\\")\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttriggerPXIntegration(\"favorite\");\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.onEnterPressed();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</FlexBox>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</CustomListItem>\n\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t</List>,\n\t\t\t\t\t\t\t\t\t<Title\n\t\t\t\t\t\t\t\t\t\tid={this.getId() + \"-easyFilterLastUsedTitle\"}\n\t\t\t\t\t\t\t\t\t\ttitleStyle={TitleLevel.H6}\n\t\t\t\t\t\t\t\t\t\ttext={this.resourceBundle.getText(\"M_EASY_FILTER_POPOVER_LAST_USED\")}\n\t\t\t\t\t\t\t\t\t\tclass={\"sapFeControlsTitleBorder\"}\n\t\t\t\t\t\t\t\t\t\tvisible={equal(bindState(this.state, \"isHistoryEnabled\"), true)}\n\t\t\t\t\t\t\t\t\t/>,\n\t\t\t\t\t\t\t\t\t<List\n\t\t\t\t\t\t\t\t\t\titems={bindState(this.state, \"recentQueriesWitFavorites\")}\n\t\t\t\t\t\t\t\t\t\tvisible={equal(bindState(this.state, \"isHistoryEnabled\"), true)}\n\t\t\t\t\t\t\t\t\t\tmode={ListMode.Delete}\n\t\t\t\t\t\t\t\t\t\tdelete={(e: ListBase$DeleteEvent): void => {\n\t\t\t\t\t\t\t\t\t\t\tconst item = e.getParameter(\"listItem\") as CustomListItem;\n\t\t\t\t\t\t\t\t\t\t\titem.focus();\n\n\t\t\t\t\t\t\t\t\t\t\tlet queryString = e.getParameter(\"listItem\")?.data(\"text\");\n\n\t\t\t\t\t\t\t\t\t\t\tif (!queryString) return;\n\t\t\t\t\t\t\t\t\t\t\t// Normalize backslashes before comparing\n\t\t\t\t\t\t\t\t\t\t\tqueryString = queryString?.replace(/\\\\/g, \"\\\\\\\\\");\n\n\t\t\t\t\t\t\t\t\t\t\tthis.state.recentQueries = this.state.recentQueries.filter((query) => query !== queryString);\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{{\n\t\t\t\t\t\t\t\t\t\t\tnoData: (\n\t\t\t\t\t\t\t\t\t\t\t\t<IllustratedMessage\n\t\t\t\t\t\t\t\t\t\t\t\t\ttitle={this.resourceBundle.getText(\"M_EASY_FILTER_POPOVER_EMPTY_LAST_USED_TITLE\")}\n\t\t\t\t\t\t\t\t\t\t\t\t\tillustrationSize={IllustratedMessageSize.ExtraSmall}\n\t\t\t\t\t\t\t\t\t\t\t\t\tillustrationType={IllustratedMessageType.NoEntries}\n\t\t\t\t\t\t\t\t\t\t\t\t\tdescription={this.resourceBundle.getText(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"M_EASY_FILTER_POPOVER_EMPTY_RECENT_DESCRIPTION\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\titems: (id: string, ctx: Context): FlexBox => {\n\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<CustomListItem\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tid={id + \"-easyFilterLastUsedItem\"}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tpress={(): void => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.$searchInput?.setValue(ctx.getObject().text);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.onEnterPressed();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclass={\"sapUiSmallMarginBegin\"}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcustomData={[<CustomData key={\"text\"} value={ctx.getObject().text} />]}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tariaLabelledBy={[id + \"-easyFilterLastUsedTitle\"]}\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FlexBox\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twidth={\"100%\"}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdirection={FlexDirection.Row}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\talignItems={FlexAlignItems.Center}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent={FlexJustifyContent.SpaceBetween}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trenderType={\"Bare\"}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid={id}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Text\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttext={ctx.getObject().text}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttooltip={ctx.getObject().text}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twrapping={false}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclass=\"sapFEControlsPointer\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t></Text>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ticon={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tctx.getObject().isFavorite\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? \"sap-icon://favorite\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: \"sap-icon://add-favorite\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttooltip={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tctx.getObject().isFavorite\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? this.resourceBundle.getText(\"M_EASY_FILTER_FILLED_STAR\")\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: this.resourceBundle.getText(\"M_EASY_FILTER_EMPTY_START\")\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tenabled={lessThan(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlength(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbindState(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.state,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"favoriteQueries\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) as PathInModelExpression<unknown>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t5\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype={ButtonType.Transparent}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tariaLabelledBy={[id + \"-easyFilterLastUsedItem\"]}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpress={(): void => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//Retaining the focus on popover doesn't make the popover close on every interaction\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.$favoritePopover?.focus();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst queryString = ctx.getObject().text;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst isFavorite = ctx.getObject().isFavorite;\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (isFavorite) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.removeFromFavorites(queryString);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.addToFavorites(queryString);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdependents: (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<EventDelegateHook\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttap={(): void => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.$searchInput?.setValue(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tctx.getObject().text.replace(/\\\\\\\\/g, \"\\\\\")\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttriggerPXIntegration(\"recent\");\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.onEnterPressed();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</FlexBox>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</CustomListItem>\n\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t</List>\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t</FlexBox>\n\t\t\t\t\t)\n\t\t\t\t}}\n\t\t\t</Popover>\n\t\t) as Popover;\n\t}\n\n\tprivate removeFromFavorites(query: string): void {\n\t\tthis.state.favoriteQueries = this.state.favoriteQueries.filter((data) => data.toLowerCase() !== query.toLowerCase());\n\t}\n\n\tprivate addToFavorites(query: string): void {\n\t\tconst newFavorite = [query].concat(this.state.favoriteQueries.concat());\n\t\tif (newFavorite.length > 5) {\n\t\t\tnewFavorite.pop();\n\t\t}\n\t\tthis.state.favoriteQueries = newFavorite;\n\t}\n\n\tstatic render(rm: RenderManager, control: EasyFilterInput): void {\n\t\treturn jsx.renderUsingRenderManager(rm, control, () => {\n\t\t\treturn (\n\t\t\t\t<span ref={control} class={\"sapFEEasyFilterInput\"}>\n\t\t\t\t\t{control.$searchInput}\n\t\t\t\t</span>\n\t\t\t);\n\t\t});\n\t}\n}\n"],"mappings":"AAAA;;;;opEA0CqBA,IAAeC,EADnCC,GAAe,8CAA6CC,EAE3DC,GAAY,CAAEC,KAAM,cAAeC,SAAU,MAAOC,UAAW,OAAOC,EAGtEC,GAAS,CAAEJ,KAAM,WAAWK,EAG5BD,GAAS,CAAEJ,KAAM,UAAUM,EAG3BC,KAAOC,EAGPD,KAAOE,EAGPF,KAAOG,EAWPC,KAAaf,EAAAgB,GAAAC,EAAA,SAAAC,GAiBd,SAAAnB,EAAYoB,EAAyEC,GAA2B,IAAAC,EAC/GA,EAAAH,EAAAI,KAAAC,KAAMJ,EAAsBC,IAAOG,KAACC,GAAAH,EAAA,eAAAI,EAAAJ,GAAAG,GAAAH,EAAA,QAAAK,EAAAL,GAAAG,GAAAH,EAAA,oBAAAM,EAAAN,GAAAG,GAAAH,EAAA,eAAAO,EAAAP,GAAAG,GAAAH,EAAA,eAAAQ,EAAAR,GAAAG,GAAAH,EAAA,aAAAS,EAAAT,GAAAG,GAAAH,EAAA,QAAAU,EAAAV,GACpCA,EAAKW,aAAa,OAAAX,CACnB,CAACY,EAAAlC,EAAAmC,GAAAnC,EAAAmB,GAAA,IAAAiB,EAAApC,EAAAqC,UAAAD,EAEME,SAAP,SAAOA,IACN,OAAOd,KAAKe,aAAaD,UAC1B,EAACF,EAEMI,iBAAP,SAAOA,IACN,OAAOhB,KAAKiB,MAAMD,iBAAiBE,SACpC,EAACN,EAEDO,SAAA,SAAAA,EAASC,GACRpB,KAAKe,aAAaI,SAASC,GAC3B,OAAOpB,IACR,EAACY,EAEDS,eAAA,SAAAA,EAAeD,GACdpB,KAAKe,aAAaM,eAAeD,GACjC,OAAOpB,IACR,EAACY,EAEMU,eAAP,SAAOA,IACN,OAAOtB,KAAKe,aAAaO,gBAC1B,EAACV,EAEDH,WAAA,SAAAA,IACCT,KAAKiB,MAAMM,mBAAqBvB,KAAKwB,mBAAqB,GAC1DxB,KAAKyB,eAAiBC,EAAIC,qBAAqB,mBAC/C3B,KAAK4B,wBAA0BC,EAAiBC,cAChD9B,KAAK+B,aACN,EAACnB,EAEDoB,aAAA,SAAAA,EAAaC,GACZjC,KAAKe,aAAamB,cAAcC,EAAWC,SAC3CpC,KAAKe,aAAasB,kBAAkBJ,GACpCjC,KAAKe,aAAauB,uBACnB,EAAC1B,EAED2B,WAAA,SAAAA,IACCvC,KAAKe,aAAamB,cAAcC,EAAWK,MAC3CxC,KAAKe,aAAa0B,wBACnB,EAAC7B,EAEDmB,YAAA,SAAAA,IACC/B,KAAKe,aACJ2B,EAACC,EAAK,CACLC,MAAM,OACNC,cAAe,KACfC,OAASC,IACR/C,KAAKgD,UAAU,eAAgB,CAAEC,MAAOF,EAAEG,aAAa,YAExDC,WAAaJ,IACZ/C,KAAKiB,MAAMmC,aAAe,KAC1BpD,KAAKgD,UAAU,cACf,IAAKD,EAAEM,YAAYvC,cAAgBd,KAAKsD,kBAAkBC,UAAY,OAAQ,CAC7EvD,KAAKwD,uBACN,CACA,GAAIT,EAAEG,aAAa,WAAa,GAAI,CACnClD,KAAKqB,eAAerB,KAAKyB,eAAegC,QAAQ,6BACjD,CACA,GAAIzD,KAAKe,aAAa2C,kBAAoBvB,EAAWC,QAAS,CAC7DpC,KAAKuC,YACN,GAEDoB,YAAa3D,KAAKyB,eAAegC,QAAQ,+BAI3C,MAAMG,EAAkB5D,KAAK6D,wBAC7B7D,KAAKsD,iBAAmBM,EAExB5D,KAAKe,aAAa+C,aAAaF,GAC/B5D,KAAKe,aAAagD,iBAAiB,CAClCC,QAAUjB,IACT,GAAIA,EAAEkB,MAAQ,QAAS,CACtBjE,KAAKkE,gBACN,CACA,GAAIlE,KAAKsD,kBAAoBtD,KAAKe,aAAaD,WAAY,CAC1Dd,KAAKsD,iBAAiBa,OACvB,GAEDC,UAAYrB,IACX,GACCA,EAAEkB,MAAQ,OACVjE,KAAKe,cAAcD,WAAWuD,SAAW,GACzCrE,KAAKe,cAAcD,aAAed,KAAKe,cAAcO,kBACrDtB,KAAKe,cAAcO,mBAAqBtB,KAAKyB,eAAegC,QAAQ,6BACnE,CACDV,EAAEuB,iBACFtE,KAAKe,cAAcI,SAASnB,KAAKe,cAAcO,kBAC/CtB,KAAKgD,UAAU,aAChB,MAAO,GAAID,EAAEkB,MAAQ,YAAa,CACjC,MAAMM,EAAkBvE,KAAKsD,kBAAkBkB,aAAa,GAC5D,MAAMC,EAAkBF,EAA4BG,WACpDD,GAAgBE,KAAMC,GAASA,EAAKC,gBAAkBD,EAAKE,QAAS,MACrE,GAEDC,MAAOA,KACN/E,KAAKwD,yBAENwB,UAAWA,KACVhF,KAAKwD,2BAGPxD,KAAKsD,iBAAiBS,iBAAiB,CACtCK,UAAYrB,IACX,MAAMkC,EAAclC,EAAEmC,QAAwBC,UAC9C,MAAMC,EAAYrC,EAAEmC,QAAwBG,GAC5C,OAAQtC,EAAEkB,KACT,IAAK,QACJjE,KAAKe,cAAcI,SAAS8D,GAC5B,MACD,IAAK,SACJ,GAAIG,GAAUE,SAAS,0BAA2B,CACjDtF,KAAKiB,MAAMsE,gBAAkBvF,KAAKiB,MAAMsE,gBAAgBC,OACtDC,GAASA,EAAKC,gBAAkBT,EAAWS,cAE9C,KAAO,CACN1F,KAAKiB,MAAM0E,cAAgB3F,KAAKiB,MAAM0E,cAAcH,OAAQvC,GAAUA,IAAUgC,EACjF,CACA,MACD,IAAK,SACJ,GAAIjF,KAAKsD,kBAAkBC,SAAU,CACpCvD,KAAKsD,iBAAiBa,OACvB,CACA,QAGHyB,iBAAkBA,KACjB5F,KAAK4B,yBAAyBiE,SAC7B7F,KAAKyB,eAAegC,QAAQ,8CAC5BqC,EAAqBC,aAIzB,EAACnF,EAEO4C,sBAAR,SAAQA,IACP,IAAKxD,KAAKe,cAAcD,cAAgBd,KAAKsD,mBAAqBtD,KAAKsD,kBAAkBC,UAAW,CAEnGvD,KAAKiB,MAAMD,iBAAmBhB,KAAKgG,sBAAsBhF,oBAAsB,MAC/EhB,KAAKiB,MAAMsE,gBAAkBvF,KAAKgG,sBAAsBC,sBAAwB,GAChFjG,KAAKiB,MAAM0E,eAAiB3F,KAAKgG,sBAAsBE,oBAAsB,IAAIC,IAAKlD,GAAUA,GAChGjD,KAAKsD,kBAAkB8C,OAAOpG,KAAKe,aACpC,CACD,EAACH,EAEDyF,gBAAA,SAAAA,EAAgBtD,GACf/C,KAAKsD,kBAAkBa,QACvBnE,KAAKe,cAAcI,SAAS4B,EAAEM,YAAYI,WAC1CzD,KAAKkE,gBACN,EAACtD,EAEDsD,eAAA,SAAAA,IACClE,KAAKsD,kBAAkBa,QACvBnE,KAAKiB,MAAMmC,aAAe,MAC1B,IAAIkD,EAAatG,KAAKe,cAAcD,WACpC,GAAIwF,IAAe,IAAMtG,KAAKe,aAAaO,mBAAqBtB,KAAKyB,eAAegC,QAAQ,6BAA8B,CACzH6C,EAAatG,KAAKe,aAAaO,iBAC/BtB,KAAKe,cAAcI,SAASmF,EAC7B,CACAtG,KAAKe,cAAcsB,kBAAkB,IACrCrC,KAAKe,cAAcmB,cAAc,QACjClC,KAAKgD,UAAU,eAAgB,CAAEC,MAAOqD,GACzC,EAAC1F,EAED2F,eAAA,SAAAA,EAAeC,GAEdA,EAAcA,GAAaC,QAAQ,MAAO,QAE1C,MAAMC,EAAmB1G,KAAKiB,MAAM0E,cAAcgB,UAAW1D,GAAUA,EAAMyC,gBAAkBc,GAAad,eAC5G,GAAIc,GAAeE,KAAsB,EAAG,CAC3C1G,KAAKiB,MAAM0E,cAAgB,CAACa,GAAaI,OAAO5G,KAAKiB,MAAM0E,eAC3D,GAAI3F,KAAKiB,MAAM0E,cAActB,OAAS,EAAG,CACxCrE,KAAKiB,MAAM0E,cAAgB3F,KAAKiB,MAAM0E,cAAckB,MAAM,EAAG,EAC9D,CACD,MAAO,GAAIL,EAAa,CACvB,MAAMb,EAAgB3F,KAAKiB,MAAM0E,cAAcH,OAAQvC,GAAUA,EAAMyC,gBAAkBc,GAAad,eACtGC,EAAcmB,QAAQN,GACtBxG,KAAKiB,MAAM0E,cAAgBA,CAC5B,CACD,EAAC/E,EAEDmG,cAAA,SAAAA,IAAiD,IAAnCC,EAAsBC,UAAA5C,OAAA,GAAA4C,UAAA,KAAAC,UAAAD,UAAA,GAAG,GACtC,GAAID,EAAa1B,SAAS,oBAAsB0B,EAAa1B,SAAS,iBAAkB,CACvFtF,KAAKgG,sBAAsBmB,mBAAmBnH,KAAKiB,MAAMsE,iBACzDvF,KAAKgG,sBAAsBoB,iBAAiBpH,KAAKiB,MAAM0E,cAAcQ,IAAKlD,GAAUA,IACpFjD,KAAKiB,MAAMoG,0BAA4BrH,KAAKiB,MAAM0E,cAAcQ,IAAKmB,IAC7D,CACNC,KAAMD,EACNE,aAAcxH,KAAKiB,MAAMsE,gBAAgBZ,KAAM8C,GAAkBA,IAAkBH,KAGtF,CACD,EAAC1G,EAEK8G,yBAANC,eAAMD,IACL,IACC1H,KAAKgG,2BAA6B4B,EAAqB9F,YAAY9B,KAAK6H,OAAS,eAClF,CAAE,MAAOC,GACRC,EAAID,MAAM,4DAA6DA,EACxE,CACD,EAAClH,EAEDiD,sBAAA,SAAAA,IACC,OACCnB,EAACsF,EAAO,CACP3C,GAAIrF,KAAKiI,QAAU,mBACnBC,WAAY,MACZC,oBAAqB,MACrBC,UAAWC,EAAcC,OACzBC,UAAW,MACXC,aAAcxI,KAAKe,aACnB0H,MAAO,uBACPC,QAAS1I,KAAKiB,MAAMM,mBAAmB8C,OAAS,GAAKsE,GAAMC,GAAU5I,KAAKiB,MAAO,oBAAqB,MAAM4H,SAE3G,CACAC,QACCpG,EAACqG,EAAO,CAACC,UAAWC,EAAcC,OAAQT,MAAO,sBAAuBU,WAAY,OAAON,SACzF,CACAO,MAAO,CACN1G,EAAC2G,EAAK,CACLC,WAAYC,EAAWC,GACvBjC,KAAMvH,KAAKyB,eAAegC,QAAQ,2CAClCgF,MAAO,2BACPC,QAAS1I,KAAKiB,MAAMM,mBAAmB8C,OAAS,IAEjD3B,EAAC+G,EAAI,CACJhB,MAAO,sBACPW,MAAOR,GAAU5I,KAAKiB,MAAO,sBAC7ByI,KAAMC,EAASC,KACflB,QAAS1I,KAAKiB,MAAMM,mBAAmB8C,OAAS,EAAEwE,SAEjD,CACAO,MAAOA,CAAC/D,EAAYwE,IAElBnH,EAACoH,EAAM,CACNrB,MAAO,qBACPlB,KAAMsC,EAAIE,YACVC,MAAOhK,KAAKqG,gBAAgB4D,KAAKjK,WAMtC0C,EAAC2G,EAAK,CACLhE,GAAIrF,KAAKiI,QAAU,2BACnBqB,WAAYC,EAAWC,GACvBjC,KAAMvH,KAAKyB,eAAegC,QAAQ,wCAClCgF,MAAO,2BACPC,QAASC,GAAMC,GAAU5I,KAAKiB,MAAO,oBAAqB,QAE3DyB,EAACwH,EAAI,CACJd,MAAOR,GAAU5I,KAAKiB,MAAO,mBAC7ByH,QAASC,GAAMC,GAAU5I,KAAKiB,MAAO,oBAAqB,MAAM4H,SAE/D,CACAsB,OACCzH,EAAC0H,EAAkB,CAClBC,MAAOrK,KAAKyB,eAAegC,QAAQ,8CACnC6G,iBAAkBC,EAAuBC,WACzCC,iBAAkBC,EAAuBC,UACzCC,YAAa5K,KAAKyB,eAAegC,QAChC,sDAIH2F,MAAOA,CAAC/D,EAAYwE,IAElBnH,EAACmI,EAAc,CACdxF,GAAIA,EAAK,0BACToD,MAAO,wBACPqC,eAAgB,CAACzF,EAAK,4BACtB0F,WAAY,CAACrI,EAACsI,EAAU,CAAc5J,MAAOyI,EAAIE,aAAnB,SAC9BC,MAAOA,KACNhK,KAAKe,aAAaI,SAAS0I,EAAIE,aAC/B/J,KAAKkE,kBACJ2E,SAEFoC,EAAClC,EAAO,CACPnG,MAAO,OACPoG,UAAWC,EAAciC,IACzBC,WAAYC,GAAeC,OAC3BC,eAAgBC,EAAmBC,aACnCrC,WAAY,OACZ9D,GAAIA,EAAGwD,SAAA,CAEPnG,EAAC+I,EAAI,CACJlE,KAAMsC,EAAIE,YACV2B,QAAS7B,EAAIE,YACb4B,SAAU,MACVlD,MAAM,yBAEP/F,EAACoH,EAAM,CACN8B,KAAM,sBACNF,QAAS1L,KAAKyB,eAAegC,QAAQ,6BACrCqH,eAAgB,CAAC9K,KAAKiI,QAAU,2BAChCpJ,KAAMgN,GAAWC,YACjB9B,MAAOA,KAENhK,KAAKsD,kBAAkBwB,QACvB,MAAM0B,EAAcqD,EAAIE,YACxB,MAAMgC,EAAQ/L,KAAKiB,MAAMsE,gBAAgByG,QAAQxF,GACjD,GAAIuF,KAAW,EAAG,CACjB/L,KAAKiB,MAAMsE,gBAAkBvF,KAAKiB,MAAMsE,gBAAgBC,OACtDvC,GAAUA,IAAUuD,EAEvB,KAGD,CACAyF,WACCvJ,EAACwJ,EAAiB,CACjBC,IAAKA,KACJnM,KAAKe,cAAcI,SAClB0I,EAAIE,YAAYtD,QAAQ,QAAS,OAElC2F,EAAqB,YACrBpM,KAAKkE,6BAWfxB,EAAC2G,EAAK,CACLhE,GAAIrF,KAAKiI,QAAU,2BACnBqB,WAAYC,EAAWC,GACvBjC,KAAMvH,KAAKyB,eAAegC,QAAQ,mCAClCgF,MAAO,2BACPC,QAASC,GAAMC,GAAU5I,KAAKiB,MAAO,oBAAqB,QAE3DyB,EAACwH,EAAI,CACJd,MAAOR,GAAU5I,KAAKiB,MAAO,6BAC7ByH,QAASC,GAAMC,GAAU5I,KAAKiB,MAAO,oBAAqB,MAC1DoL,KAAMC,EAASC,OACfC,OAASzJ,IACR,MAAM6B,EAAO7B,EAAEG,aAAa,YAC5B0B,EAAKE,QAEL,IAAI0B,EAAczD,EAAEG,aAAa,aAAauC,KAAK,QAEnD,IAAKe,EAAa,OAElBA,EAAcA,GAAaC,QAAQ,MAAO,QAE1CzG,KAAKiB,MAAM0E,cAAgB3F,KAAKiB,MAAM0E,cAAcH,OAAQvC,GAAUA,IAAUuD,IAC/EqC,SAED,CACAsB,OACCzH,EAAC0H,EAAkB,CAClBC,MAAOrK,KAAKyB,eAAegC,QAAQ,+CACnC6G,iBAAkBC,EAAuBC,WACzCC,iBAAkBC,EAAuBC,UACzCC,YAAa5K,KAAKyB,eAAegC,QAChC,oDAIH2F,MAAOA,CAAC/D,EAAYwE,IAElBnH,EAACmI,EAAc,CACdxF,GAAIA,EAAK,0BACT2E,MAAOA,KACNhK,KAAKe,cAAcI,SAAS0I,EAAIE,YAAYxC,MAC5CvH,KAAKkE,kBAENuE,MAAO,wBACPsC,WAAY,CAACrI,EAACsI,EAAU,CAAc5J,MAAOyI,EAAIE,YAAYxC,MAA/B,SAC9BuD,eAAgB,CAACzF,EAAK,4BAA4BwD,SAElDoC,EAAClC,EAAO,CACPnG,MAAO,OACPoG,UAAWC,EAAciC,IACzBC,WAAYC,GAAeC,OAC3BC,eAAgBC,EAAmBC,aACnCrC,WAAY,OACZ9D,GAAIA,EAAGwD,SAAA,CAEPnG,EAAC+I,EAAI,CACJlE,KAAMsC,EAAIE,YAAYxC,KACtBmE,QAAS7B,EAAIE,YAAYxC,KACzBoE,SAAU,MACVlD,MAAM,yBAEP/F,EAACoH,EAAM,CACN8B,KACC/B,EAAIE,YAAYvC,WACb,sBACA,0BAEJkE,QACC7B,EAAIE,YAAYvC,WACbxH,KAAKyB,eAAegC,QAAQ,6BAC5BzD,KAAKyB,eAAegC,QAAQ,6BAEhCgJ,QAASC,GACRrI,GACCuE,GACC5I,KAAKiB,MACL,oBAGF,GAEDpC,KAAMgN,GAAWC,YACjBhB,eAAgB,CAACzF,EAAK,2BACtB2E,MAAOA,KAENhK,KAAKsD,kBAAkBwB,QACvB,MAAM0B,EAAcqD,EAAIE,YAAYxC,KACpC,MAAMC,EAAaqC,EAAIE,YAAYvC,WAEnC,GAAIA,EAAY,CACfxH,KAAK2M,oBAAoBnG,EAC1B,KAAO,CACNxG,KAAK4M,eAAepG,EACrB,KAGD,CACAyF,WACCvJ,EAACwJ,EAAiB,CACjBC,IAAKA,KACJnM,KAAKe,cAAcI,SAClB0I,EAAIE,YAAYxC,KAAKd,QAAQ,QAAS,OAEvC2F,EAAqB,UACrBpM,KAAKkE,mCAkBvB,EAACtD,EAEO+L,oBAAR,SAAQA,EAAoB1J,GAC3BjD,KAAKiB,MAAMsE,gBAAkBvF,KAAKiB,MAAMsE,gBAAgBC,OAAQC,GAASA,EAAKC,gBAAkBzC,EAAMyC,cACvG,EAAC9E,EAEOgM,eAAR,SAAQA,EAAe3J,GACtB,MAAM4J,EAAc,CAAC5J,GAAO2D,OAAO5G,KAAKiB,MAAMsE,gBAAgBqB,UAC9D,GAAIiG,EAAYxI,OAAS,EAAG,CAC3BwI,EAAYC,KACb,CACA9M,KAAKiB,MAAMsE,gBAAkBsH,CAC9B,EAACrO,EAEMuO,OAAP,SAAOA,EAAOC,EAAmBC,GAChC,OAAOC,EAAIC,yBAAyBH,EAAIC,EAAS,IAE/CvK,EAAA,QAAM0K,IAAKH,EAASxE,MAAO,uBAAuBI,SAChDoE,EAAQlM,eAIb,EAAC,OAAAvC,CAAA,CA5ea,CA3B8B6O,GAAOnN,EAAAoN,GAAA5N,EAAAmB,UAAA,gBAAAlC,GAAA,CAAA4O,aAAA,KAAAC,WAAA,KAAAC,SAAA,KAAAC,YAAA,OAAAvN,EAAAmN,GAAA5N,EAAAmB,UAAA,SAAA7B,GAAA,CAAAuO,aAAA,KAAAC,WAAA,KAAAC,SAAA,KAAAC,YAAA,OAAAtN,EAAAkN,GAAA5N,EAAAmB,UAAA,qBAAA3B,GAAA,CAAAqO,aAAA,KAAAC,WAAA,KAAAC,SAAA,KAAAC,YAAA,OAAArN,EAAAiN,GAAA5N,EAAAmB,UAAA,gBAAA1B,GAAA,CAAAoO,aAAA,KAAAC,WAAA,KAAAC,SAAA,KAAAC,YAAA,OAAApN,EAAAgN,GAAA5N,EAAAmB,UAAA,gBAAAxB,GAAA,CAAAkO,aAAA,KAAAC,WAAA,KAAAC,SAAA,KAAAC,YAAA,OAAAnN,EAAA+M,GAAA5N,EAAAmB,UAAA,cAAAvB,GAAA,CAAAiO,aAAA,KAAAC,WAAA,KAAAC,SAAA,KAAAC,YAAA,OAAAlN,EAAA8M,GAAA5N,EAAAmB,UAAA,SAAAtB,GAAA,CAAAgO,aAAA,KAAAC,WAAA,KAAAC,SAAA,KAAAC,YAAA,iBAmC9C,CACJtK,aAAc,MACdpC,iBAAkB,MAClB2E,cAAe,GACf0B,0BAA2B,GAC3B9B,gBAAiB,GACjBhE,mBAAoB,GACpB,IAAA7B,KAAAD,GAAAiB,EAAAlC,GAAA,OAAAkC,CAAA","ignoreList":[],"sourceRoot":"easyFilter"}},{"offset":{"line":21,"column":0},"map":{"version":3,"names":["triggerPXIntegration","triggerEvent","eventBus","EventBus","getInstance","publish","areaId","triggerName","payload","event","_exports"],"sources":["./PXFeedback.ts"],"sourcesContent":["import EventBus from \"sap/ui/core/EventBus\";\n\nexport function triggerPXIntegration(triggerEvent: string): void {\n\ttry {\n\t\tconst eventBus = EventBus.getInstance();\n\t\teventBus.publish(\"sap.feedback\", \"inapp.feature\", {\n\t\t\tareaId: \"EmbeddedAI\",\n\t\t\ttriggerName: \"J91\",\n\t\t\tpayload: { event: triggerEvent }\n\t\t});\n\t} finally {\n\t\t// ignore\n\t}\n}\n"],"mappings":"AAAA;;;;qHAEO,SAASA,EAAqBC,GACpC,IACC,MAAMC,EAAWC,EAASC,cAC1BF,EAASG,QAAQ,eAAgB,gBAAiB,CACjDC,OAAQ,aACRC,YAAa,MACbC,QAAS,CAAEC,MAAOR,IAEpB,CAAC,QACA,CAEF,CAACS,EAAAV,uBAAA,OAAAU,CAAA","ignoreList":[],"sourceRoot":"easyFilter"}},{"offset":{"line":26,"column":0},"map":{"version":3,"names":["ShellHistoryProvider","_dec","defineUI5Class","_dec2","defineState","_dec3","defineReference","_dec4","_class","_class2","_ShellHistoryProvider","_ManagedObject","personalizationService","globalPersonalizer","appPersonalizer","data","appData","_this","call","this","_initializerDefineProperty","_descriptor","instances","add","state","isHistoryEnabled","apps","recentQueries","favoriteQueries","_exports","_inheritsLoose","getShellDialogContent","selectedValue","$form","_jsxs","VBox","children","_jsx","Title","text","resourceBundle","getText","CheckBox","ref","$historyEnabled","selected","saveShellDialog","currentSelectedState","current","getSelected","forEach","instance","_proto","prototype","onStateChange","async","setPersData","valueOf","getRecentQueries","concat","getFavoriteQueries","setRecentQueries","setFavoriteQueries","getInstance","appId","shellContainer","sap","ui","require","resolveCreation","Promise","resolve","extensionService","getServiceAsync","frameBoundExtension","shellHistoryProvider","registerUserAction","e","Log","error","Error","message","String","shellExtensionService","Lib","getResourceBundleFor","scope","clientStorageAllowed","keyCategory","constants","FIXED_KEY","validity","Infinity","writeFrequency","LOW","getPersonalizer","container","item","globalData","getPersData","uid","shellHistoryDialog","isDialogAdded","addGroupedUserSettingsEntry","title","icon","entryHelpId","groupingId","groupingTabTitle","groupingTabHelpId","value","content","onSave","onCancel","err","ManagedObject","Set","_applyDecoratedDescriptor","configurable","enumerable","writable","initializer","_init","Object","getOwnPropertyDescriptor","undefined","_init2"],"sources":["./ShellHistoryProvider.tsx"],"sourcesContent":["import Log from \"sap/base/Log\";\nimport uid from \"sap/base/util/uid\";\nimport { defineReference, defineState, defineUI5Class } from \"sap/fe/base/ClassSupport\";\nimport type { Ref } from \"sap/fe/base/jsx-runtime/jsx\";\nimport CheckBox from \"sap/m/CheckBox\";\nimport Title from \"sap/m/Title\";\nimport VBox from \"sap/m/VBox\";\nimport ManagedObject from \"sap/ui/base/ManagedObject\";\nimport Lib from \"sap/ui/core/Lib\";\nimport type Container from \"sap/ushell/Container\";\nimport type Extension from \"sap/ushell/services/Extension\";\nimport type PersonalizationV2 from \"sap/ushell/services/PersonalizationV2\";\n\nexport type PersonalizationWithConstants = PersonalizationV2 & {\n\tconstants: {\n\t\tkeyCategory: {\n\t\t\tFIXED_KEY: string;\n\t\t\tGENERATED_KEY: string;\n\t\t};\n\t\twriteFrequency: {\n\t\t\tHIGH: string;\n\t\t\tLOW: string;\n\t\t};\n\t};\n};\n\ntype FrameBoundExtension = {\n\taddGroupedUserSettingsEntry: (settings: unknown) => Promise<void>;\n};\ntype PersonalizerType = {\n\tgetPersData: () => Promise<object>;\n\tsetPersData: (persData: object) => Promise<void>;\n};\n\ntype ShellHistorySettings = {\n\tisHistoryEnabled: boolean;\n\tapps: Record<string, string>;\n};\n\ntype ShellAppHistorySettings = {\n\trecentQueries: string[];\n\tfavoriteQueries: string[];\n};\n\n@defineUI5Class(\"sap.fe.controls.easyFilter.ShellHistoryProvider\")\nexport default class ShellHistoryProvider extends ManagedObject {\n\t@defineState()\n\tprivate state = {\n\t\tisHistoryEnabled: true,\n\t\tapps: {} as Record<string, string>,\n\t\trecentQueries: [] as readonly string[],\n\t\tfavoriteQueries: [] as readonly string[]\n\t};\n\n\tprivate static instances: Set<ShellHistoryProvider> = new Set();\n\n\tconstructor(\n\t\tprivate readonly personalizationService: PersonalizationWithConstants,\n\t\tprivate readonly globalPersonalizer: PersonalizerType,\n\t\tprivate readonly appPersonalizer: PersonalizerType,\n\t\tprivate readonly data: ShellHistorySettings,\n\t\tprivate readonly appData: ShellAppHistorySettings\n\t) {\n\t\tsuper();\n\t\tShellHistoryProvider.instances.add(this);\n\t\tthis.state.isHistoryEnabled = data.isHistoryEnabled;\n\t\tthis.state.apps = data.apps;\n\t\tthis.state.recentQueries = appData.recentQueries;\n\t\tthis.state.favoriteQueries = appData.favoriteQueries;\n\t}\n\n\tprivate static resourceBundle = Lib.getResourceBundleFor(\"sap.fe.controls\")!;\n\n\tprivate static $form: VBox;\n\n\t@defineReference()\n\tprivate static $defaultOption: Ref<CheckBox>;\n\n\t@defineReference()\n\tprivate static $historyEnabled: Ref<CheckBox>;\n\n\tstatic getShellDialogContent(selectedValue: boolean): VBox {\n\t\tthis.$form = (\n\t\t\t<VBox>\n\t\t\t\t<Title text={this.resourceBundle.getText(\"M_BUSINESS_AI_SHELL_SETTINGS_EASY_FILTER\")}></Title>\n\t\t\t\t<CheckBox\n\t\t\t\t\tref={this.$historyEnabled}\n\t\t\t\t\tselected={selectedValue}\n\t\t\t\t\ttext={this.resourceBundle.getText(\"M_BUSINESS_AI_SHELL_SETTINGS_EASY_FILTER_KEEP_QUERIES\")}\n\t\t\t\t/>\n\t\t\t</VBox>\n\t\t) as VBox;\n\t\treturn this.$form;\n\t}\n\n\tstatic saveShellDialog(): void {\n\t\tconst currentSelectedState = ShellHistoryProvider.$historyEnabled.current!.getSelected();\n\t\t//updating the value in all the objects\n\t\tthis.instances.forEach((instance) => {\n\t\t\tinstance.state.isHistoryEnabled = currentSelectedState;\n\t\t});\n\t}\n\n\tasync onStateChange(): Promise<void> {\n\t\t// We confirm the value of the switch\n\t\tawait this.globalPersonalizer.setPersData({\n\t\t\tisHistoryEnabled: this.state.isHistoryEnabled,\n\t\t\tapps: this.state.apps\n\t\t});\n\t\tawait this.appPersonalizer.setPersData({ recentQueries: this.state.recentQueries, favoriteQueries: this.state.favoriteQueries });\n\t}\n\n\tisHistoryEnabled(): boolean {\n\t\treturn this.state.isHistoryEnabled.valueOf();\n\t}\n\n\tgetRecentQueries(): string[] {\n\t\treturn this.state.recentQueries.concat();\n\t}\n\n\tgetFavoriteQueries(): string[] {\n\t\treturn this.state.favoriteQueries.concat();\n\t}\n\n\tsetRecentQueries(recentQueries: readonly string[]): void {\n\t\tthis.state.recentQueries = recentQueries;\n\t}\n\n\tsetFavoriteQueries(favoriteQueries: readonly string[]): void {\n\t\tthis.state.favoriteQueries = favoriteQueries;\n\t}\n\n\tstatic instance: Promise<ShellHistoryProvider | undefined>;\n\n\tstatic isDialogAdded = false;\n\n\tstatic async getInstance(appId: string): Promise<ShellHistoryProvider | undefined> {\n\t\t// Register the extension\n\t\tconst shellContainer = sap.ui.require(\"sap/ushell/Container\") as Container | undefined;\n\t\ttry {\n\t\t\tif (shellContainer) {\n\t\t\t\tlet resolveCreation!: Function;\n\t\t\t\tthis.instance = new Promise<ShellHistoryProvider | undefined>((resolve) => {\n\t\t\t\t\tresolveCreation = resolve;\n\t\t\t\t});\n\t\t\t\tconst extensionService = (await shellContainer.getServiceAsync(\"Extension\")) as Extension | undefined;\n\t\t\t\tconst frameBoundExtension = (await shellContainer.getServiceAsync(\"FrameBoundExtension\")) as\n\t\t\t\t\t| FrameBoundExtension\n\t\t\t\t\t| undefined;\n\t\t\t\tconst personalizationService = (await shellContainer.getServiceAsync(\"PersonalizationV2\")) as\n\t\t\t\t\t| PersonalizationWithConstants\n\t\t\t\t\t| undefined;\n\t\t\t\tif (extensionService && personalizationService && frameBoundExtension) {\n\t\t\t\t\tconst shellHistoryProvider = await ShellHistoryProvider.registerUserAction(\n\t\t\t\t\t\textensionService,\n\t\t\t\t\t\tpersonalizationService,\n\t\t\t\t\t\tframeBoundExtension,\n\t\t\t\t\t\tappId\n\t\t\t\t\t);\n\t\t\t\t\tresolveCreation(shellHistoryProvider);\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tLog.error(\"Cannot register extension\", e instanceof Error ? e.message : String(e));\n\t\t}\n\t\treturn this.instance;\n\t}\n\n\tstatic async registerUserAction(\n\t\tshellExtensionService: Extension,\n\t\tpersonalizationService: PersonalizationWithConstants,\n\t\tframeBoundExtension: FrameBoundExtension,\n\t\tappId: string\n\t): Promise<ShellHistoryProvider | undefined> {\n\t\ttry {\n\t\t\tconst resourceBundle = Lib.getResourceBundleFor(\"sap.fe.controls\")!;\n\t\t\tconst scope = {\n\t\t\t\tclientStorageAllowed: false,\n\t\t\t\tkeyCategory: personalizationService.constants.keyCategory.FIXED_KEY,\n\t\t\t\tvalidity: Infinity,\n\t\t\t\twriteFrequency: personalizationService.constants.writeFrequency.LOW\n\t\t\t};\n\t\t\tconst globalPersonalizer = (await personalizationService.getPersonalizer(\n\t\t\t\t{\n\t\t\t\t\tcontainer: \"sap.fe.easyFilter\",\n\t\t\t\t\titem: \"settings\"\n\t\t\t\t},\n\t\t\t\tscope\n\t\t\t)) as PersonalizerType;\n\t\t\tlet globalData = (await globalPersonalizer.getPersData()) as ShellHistorySettings | undefined;\n\t\t\tif (!globalData) {\n\t\t\t\t// In case defaut value don't exist we create it\n\t\t\t\tglobalData = {\n\t\t\t\t\tisHistoryEnabled: true,\n\t\t\t\t\tapps: {\n\t\t\t\t\t\t[appId]: uid()\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tglobalPersonalizer.setPersData(globalData);\n\t\t\t} else if (!globalData.apps?.[appId]) {\n\t\t\t\tglobalData.apps ??= {};\n\t\t\t\tglobalData.apps[appId] = uid();\n\t\t\t\tawait globalPersonalizer.setPersData(globalData);\n\t\t\t}\n\t\t\tconst appPersonalizer = (await personalizationService.getPersonalizer(\n\t\t\t\t{\n\t\t\t\t\tcontainer: \"sap.fe.easyFilter\" + globalData.apps[appId],\n\t\t\t\t\titem: \"recentQueries\"\n\t\t\t\t},\n\t\t\t\tscope\n\t\t\t)) as PersonalizerType;\n\t\t\tlet appData = (await appPersonalizer.getPersData()) as ShellAppHistorySettings | undefined;\n\t\t\tif (!appData) {\n\t\t\t\tappData = {\n\t\t\t\t\trecentQueries: [],\n\t\t\t\t\tfavoriteQueries: []\n\t\t\t\t};\n\t\t\t\tawait appPersonalizer.setPersData(appData);\n\t\t\t}\n\t\t\tconst shellHistoryDialog = new ShellHistoryProvider(\n\t\t\t\tpersonalizationService,\n\t\t\t\tglobalPersonalizer,\n\t\t\t\tappPersonalizer,\n\t\t\t\tglobalData,\n\t\t\t\tappData\n\t\t\t);\n\t\t\tif (!this.isDialogAdded) {\n\t\t\t\tthis.isDialogAdded = true;\n\t\t\t\tawait frameBoundExtension.addGroupedUserSettingsEntry({\n\t\t\t\t\ttitle: resourceBundle.getText(\"M_BUSINESS_AI_SHELL_SETTINGS_TITLE\"),\n\t\t\t\t\ticon: \"sap-icon://laptop\",\n\t\t\t\t\tentryHelpId: \"userActivitiesEntry\",\n\t\t\t\t\tgroupingId: \"userActivities\",\n\t\t\t\t\tgroupingTabTitle: resourceBundle.getText(\"M_BUSINESS_AI_SHELL_SETTINGS_TITLE\"),\n\t\t\t\t\tgroupingTabHelpId: \"sapBusinessAI-helpId\",\n\t\t\t\t\tvalue: async () => {\n\t\t\t\t\t\treturn Promise.resolve();\n\t\t\t\t\t},\n\t\t\t\t\tcontent: async () => {\n\t\t\t\t\t\treturn Promise.resolve(this.getShellDialogContent(globalData?.isHistoryEnabled as boolean));\n\t\t\t\t\t},\n\t\t\t\t\tonSave: () => {\n\t\t\t\t\t\tthis.saveShellDialog();\n\t\t\t\t\t},\n\t\t\t\t\tonCancel: () => {\n\t\t\t\t\t\t//return (this.viewInstance.getController() as RequestSettingsController).onCancel();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn shellHistoryDialog;\n\t\t} catch (err) {\n\t\t\tLog.error(\"Cannot add user action\", err instanceof Error ? err.message : String(err));\n\t\t}\n\t}\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":"easyFilter"}},{"offset":{"line":31,"column":0},"map":{"version":3,"names":["EasyFilterToken","_dec","defineUI5Class","_dec2","property","type","_dec3","_dec4","_dec5","defaultValue","_dec6","_dec7","_dec8","group","ValueState","None","_dec9","visibility","_dec10","_class","_class2","_Token","idOrSettings","settings","_this","call","this","_initializerDefineProperty","_descriptor","_descriptor2","_descriptor3","_descriptor4","_descriptor5","_descriptor6","_descriptor7","_descriptor8","_descriptor9","resourceBundle","Lib","getResourceBundleFor","eventAttached","isDescriptionFetched","valueStateMessage","ValueStateMessage","attachCloseHandlersForValueStateMessagePopup","_exports","_inheritsLoose","_proto","prototype","firePress","_parameters","tokenizer","getParent","getEditable","fireEvent","close","easyFilterBarContainer","getCustomDataValue","popover","key","keySpecificSelectedValues","isOpen","prevTokenKey","setShowHeader","getFooter","setVisible","shouldOpenDefaultFragment","invokeCalendar","invokeTime","invokeMenuWithCheckBox","invokeMenuWithSingleSelect","invokeValueHelpPreview","okButton","getOkButton","showAllButton","getShowAllButton","attachPress","handleOkClick","bind","handleShowAllClick","attachAfterClose","handleAttachAfterClose","getCustomData","find","customData","getKey","getValue","onBeforeRendering","e","Token","apply","setValueForToken","document","addEventListener","tokenSelectedValues","items","length","setProperty","getText","firstSelectedValue","totalSelectedValues","calculateTotalSelectedValues","handleSingleSelectedValue","handleMultipleSelectedValues","reduce","counter","token","EasyFilterUtils","isBetweenSelectedValues","operator","selectedValues","tokenInfo","firstOperator","initSelectedValue","requiredMetadata","filterBarMetadata","data","name","dataType","setValueForMenu","mapOperatorForBetweenOperator","mapOperatorForValueHelp","mapOperator","setBusy","description","getDescriptionByKey","error","Log","getDomRefForValueStateMessage","getDomRef","async","codeList","getCodeListArray","list","value","menuWithCheckBox","MenuWithCheckBoxFactory","innerControl","getControl","addDependent","setItems","removeAllContent","addContent","openPopover","menuWithSingleSelect","MenuWithSingleSelectFactory","calender","CalenderFactory","time","TimeFactory","valueHelpPreview","ValueHelpPreviewFactory","oPopover","setTitle","label","openBy","okButtonHandler","invokeOkButtonHandler","valueHelpHandler","invokeShowAllButtonHandler","invokePopupCloseHandler","getInnerControl","openValueStateMessage","open","closeValueStateMessage","isBetweenOperator","FilterOperator","BT","NB","focusout","render","rm","control","jsx","renderUsingRenderManager","classes","classesForLabel","classesForValue","isMandatory","getMandatory","push","getSelected","getValueState","Error","_jsxs","ref","class","join","tabindex","getProperty","children","getLabel","_jsx","getAggregation","_applyDecoratedDescriptor","configurable","enumerable","writable","initializer"],"sources":["./Token.tsx"],"sourcesContent":["import Log from \"sap/base/Log\";\nimport type { EnhanceWithUI5, PropertiesOf } from \"sap/fe/base/ClassSupport\";\nimport { defineUI5Class, property } from \"sap/fe/base/ClassSupport\";\nimport jsx from \"sap/fe/base/jsx-runtime/jsx\";\nimport type List from \"sap/m/List\";\nimport type Popover from \"sap/m/Popover\";\nimport type TimePickerClocks from \"sap/m/TimePickerClocks\";\nimport type { $TokenSettings } from \"sap/m/Token\";\nimport Token from \"sap/m/Token\";\nimport type Tokenizer from \"sap/m/Tokenizer\";\nimport ValueStateMessage from \"sap/m/delegate/ValueStateMessage\";\nimport type Control from \"sap/ui/core/Control\";\nimport type CustomData from \"sap/ui/core/CustomData\";\nimport type UI5Element from \"sap/ui/core/Element\";\nimport Lib from \"sap/ui/core/Lib\";\nimport type RenderManager from \"sap/ui/core/RenderManager\";\nimport { ValueState } from \"sap/ui/core/library\";\nimport FilterOperator from \"sap/ui/model/FilterOperator\";\nimport type Calendar from \"sap/ui/unified/Calendar\";\nimport type { PropertyMetadata } from \"ux/eng/fioriai/reuse/easyfilter/EasyFilter\";\nimport type EasyFilterBarContainer from \"./EasyFilterBarContainer\";\nimport type {\n\tBetweenSelectedValues,\n\tCodeListType,\n\tEasyFilterPropertyMetadata,\n\tTokenDefinition,\n\tTokenSelectedValuesDefinition,\n\tValueHelpSelectedValuesDefinition\n} from \"./EasyFilterBarContainer\";\nimport CalenderFactory from \"./innerControls/CalendarFactory\";\nimport MenuWithCheckBoxFactory from \"./innerControls/MenuWithCheckBoxFactory\";\nimport MenuWithSingleSelectFactory from \"./innerControls/MenuWithSingleSelectFactory\";\nimport TimeFactory from \"./innerControls/TimeFactory\";\nimport ValueHelpPreviewFactory from \"./innerControls/ValueHelpPreviewFactory\";\nimport EasyFilterUtils from \"./utils\";\n\ntype codeListType = PropertyMetadata[\"codeList\"];\ntype CustomKeys = \"TokenInfo\" | \"popover\" | \"easyFilterBarContainer\" | \"codeList\";\n\n@defineUI5Class(\"sap.fe.controls.easyFilter.Token\")\nexport default class EasyFilterToken extends Token {\n\t@property({ type: \"string\" })\n\tlabel?: string;\n\n\t@property({ type: \"string\" })\n\ttitlePopover?: string;\n\n\t@property({ type: \"string\" })\n\tvalue?: string;\n\n\t@property({ type: \"string\", defaultValue: null })\n\tvalueStateText?: string;\n\n\t@property({ type: \"boolean\" })\n\tmandatory?: boolean;\n\n\t@property({ type: \"array\" })\n\titems?: TokenSelectedValuesDefinition[] | ValueHelpSelectedValuesDefinition[];\n\n\t@property({ type: \"sap.ui.core.ValueState\", group: \"Appearance\", defaultValue: ValueState.None })\n\tvalueState?: ValueState;\n\n\t@property({ type: \"int\", visibility: \"hidden\" })\n\tposinset?: number;\n\n\t@property({ type: \"int\", visibility: \"hidden\" })\n\tsetsize?: number;\n\n\tprivate resourceBundle = Lib.getResourceBundleFor(\"sap.fe.controls\")!;\n\n\tprivate innerControl?: Calendar | TimePickerClocks | List;\n\n\tprivate time?: TimeFactory;\n\n\tprivate calender?: CalenderFactory;\n\n\tprivate valueHelpPreview?: ValueHelpPreviewFactory;\n\n\tprivate menuWithCheckBox?: MenuWithCheckBoxFactory;\n\n\tprivate menuWithSingleSelect?: MenuWithSingleSelectFactory;\n\n\tprivate eventAttached = false;\n\n\tprivate isDescriptionFetched = false;\n\n\tprivate valueStateMessage?: ValueStateMessage;\n\n\tprivate static prevTokenKey?: string;\n\n\tconstructor(\n\t\tidOrSettings: string | (PropertiesOf<EasyFilterToken> & $TokenSettings),\n\t\tsettings?: PropertiesOf<EasyFilterToken> & $TokenSettings\n\t) {\n\t\tsuper(idOrSettings as string, settings);\n\t\tthis.valueStateMessage = new ValueStateMessage(this);\n\t\t//Closing the ValueState popovers whenever we are clicking/tapping else where on the screen\n\t\tthis.attachCloseHandlersForValueStateMessagePopup();\n\t}\n\n\tfirePress(_parameters: unknown): this {\n\t\tconst tokenizer = this.getParent() as Tokenizer;\n\t\tif (!tokenizer.getEditable()) {\n\t\t\treturn this;\n\t\t}\n\t\t// We hijack the press event to open the detail popover\n\t\tthis.fireEvent(\"press\");\n\t\tthis.valueStateMessage?.close();\n\n\t\tconst easyFilterBarContainer = this.getCustomDataValue(\"easyFilterBarContainer\") as EasyFilterBarContainer;\n\t\tconst popover = this.getCustomDataValue(\"popover\") as Popover;\n\n\t\tconst { key, type, keySpecificSelectedValues } = this.getCustomDataValue(\"TokenInfo\") as TokenDefinition;\n\n\t\t// Check if the popover is already open\n\t\tif (popover.isOpen()) {\n\t\t\t// If the popover is open and the new key is the same as the previous one, do nothing\n\t\t\tif (EasyFilterToken.prevTokenKey === key) {\n\t\t\t\treturn this; // Return early to prevent any further action\n\t\t\t} else {\n\t\t\t\t// If the key is different, update prevTokenKey and close the popover\n\t\t\t\tEasyFilterToken.prevTokenKey = key; // Update the previous token key to the new one\n\t\t\t\tpopover.close(); // Close the popover\n\t\t\t}\n\t\t} else {\n\t\t\t// If the popover is not open, update prevTokenKey for the first time\n\t\t\tEasyFilterToken.prevTokenKey = key;\n\t\t}\n\n\t\t//resetting the header and footer, if hidden by singleselect\n\t\tpopover?.setShowHeader(true);\n\t\tpopover?.getFooter()?.setVisible(true);\n\n\t\tif (type === \"Calendar\" && this.shouldOpenDefaultFragment(keySpecificSelectedValues)) {\n\t\t\tthis.invokeCalendar();\n\t\t} else if (type === \"Time\" && this.shouldOpenDefaultFragment(keySpecificSelectedValues)) {\n\t\t\tthis.invokeTime();\n\t\t} else if (type === \"MenuWithCheckBox\") {\n\t\t\tthis.invokeMenuWithCheckBox();\n\t\t} else if (type === \"MenuWithSingleSelect\") {\n\t\t\tthis.invokeMenuWithSingleSelect();\n\t\t} else {\n\t\t\tthis.invokeValueHelpPreview();\n\t\t}\n\t\tconst okButton = easyFilterBarContainer?.getOkButton();\n\t\tconst showAllButton = easyFilterBarContainer?.getShowAllButton();\n\t\tif (!(this.eventAttached ?? false)) {\n\t\t\tokButton?.attachPress(this.handleOkClick.bind(this));\n\t\t\tshowAllButton?.attachPress(this.handleShowAllClick.bind(this));\n\t\t\tpopover.attachAfterClose(this.handleAttachAfterClose.bind(this));\n\t\t\tthis.eventAttached = true;\n\t\t}\n\t\treturn this;\n\t}\n\n\tgetCustomDataValue(key: CustomKeys): TokenDefinition | Popover | EasyFilterBarContainer | codeListType | undefined {\n\t\treturn this.getCustomData()\n\t\t\t.find((customData: CustomData) => customData.getKey() === key)\n\t\t\t?.getValue();\n\t}\n\n\tonBeforeRendering(e: jQuery.Event): void | undefined {\n\t\tToken.prototype.onBeforeRendering.apply(this, [e]);\n\t\tif (!this.isDescriptionFetched) {\n\t\t\tthis.setValueForToken();\n\t\t}\n\t\tthis.isDescriptionFetched = false;\n\t}\n\n\tattachCloseHandlersForValueStateMessagePopup(): void {\n\t\tdocument.addEventListener(\"click\", () => {\n\t\t\tif (this?.valueStateMessage) {\n\t\t\t\tthis.valueStateMessage.close();\n\t\t\t}\n\t\t});\n\n\t\tdocument.addEventListener(\"touchstart\", () => {\n\t\t\tif (this?.valueStateMessage) {\n\t\t\t\tthis.valueStateMessage.close();\n\t\t\t}\n\t\t});\n\t}\n\n\tsetValueForToken(): void {\n\t\tconst tokenSelectedValues = this.items as (TokenSelectedValuesDefinition | ValueHelpSelectedValuesDefinition)[];\n\t\tif (tokenSelectedValues.length === 0) {\n\t\t\tthis.setProperty(\"value\", this.resourceBundle.getText(\"M_EASY_FILTER_MANDATORY_TOKEN_SELECT_VALUE\"), true);\n\t\t\treturn;\n\t\t}\n\n\t\tconst firstSelectedValue = tokenSelectedValues[0];\n\t\tconst totalSelectedValues = this.calculateTotalSelectedValues(tokenSelectedValues);\n\n\t\tif (totalSelectedValues === 1) {\n\t\t\tthis.handleSingleSelectedValue(firstSelectedValue);\n\t\t} else {\n\t\t\tthis.handleMultipleSelectedValues(totalSelectedValues);\n\t\t}\n\t}\n\n\tprivate calculateTotalSelectedValues(\n\t\ttokenSelectedValues: (TokenSelectedValuesDefinition | ValueHelpSelectedValuesDefinition)[]\n\t): number {\n\t\treturn tokenSelectedValues.reduce((counter, token) => {\n\t\t\treturn EasyFilterUtils.isBetweenSelectedValues(token.operator) ? counter + 1 : counter + token.selectedValues.length;\n\t\t}, 0);\n\t}\n\n\tprivate handleSingleSelectedValue(firstSelectedValue: TokenSelectedValuesDefinition | ValueHelpSelectedValuesDefinition): void {\n\t\tconst tokenInfo = this.getCustomDataValue(\"TokenInfo\");\n\t\tconst firstOperator = firstSelectedValue?.operator;\n\t\tconst initSelectedValue = firstSelectedValue.selectedValues[0];\n\t\tconst selectedValues = firstSelectedValue.selectedValues;\n\t\tconst easyFilterBarContainer = this.getCustomDataValue(\"easyFilterBarContainer\") as EasyFilterBarContainer | undefined;\n\t\tconst requiredMetadata = easyFilterBarContainer?.filterBarMetadata?.find((data) => data.name === this.getKey());\n\n\t\tif (!requiredMetadata) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { type, dataType } = requiredMetadata;\n\t\tif (tokenInfo) {\n\t\t\tconst { key } = tokenInfo as TokenDefinition;\n\t\t\tif (type === \"MenuWithCheckBox\" || type === \"MenuWithSingleSelect\") {\n\t\t\t\tthis.setValueForMenu(key);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (type === \"ValueHelp\") {\n\t\t\t\tif (EasyFilterUtils.isBetweenSelectedValues(firstOperator)) {\n\t\t\t\t\tthis.setProperty(\n\t\t\t\t\t\t\"value\",\n\t\t\t\t\t\tEasyFilterUtils.mapOperatorForBetweenOperator(\n\t\t\t\t\t\t\tfirstOperator,\n\t\t\t\t\t\t\tselectedValues as BetweenSelectedValues,\n\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\tdataType === \"Edm.DateTimeOffset\"\n\t\t\t\t\t\t),\n\t\t\t\t\t\ttrue\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tthis.setProperty(\n\t\t\t\t\t\t\"value\",\n\t\t\t\t\t\tEasyFilterUtils.mapOperatorForValueHelp(\n\t\t\t\t\t\t\tfirstOperator,\n\t\t\t\t\t\t\tinitSelectedValue as CodeListType,\n\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\tdataType === \"Edm.DateTimeOffset\"\n\t\t\t\t\t\t),\n\t\t\t\t\t\ttrue\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} else if (EasyFilterUtils.isBetweenSelectedValues(firstOperator)) {\n\t\t\t\tthis.setProperty(\n\t\t\t\t\t\"value\",\n\t\t\t\t\tEasyFilterUtils.mapOperatorForBetweenOperator(\n\t\t\t\t\t\tfirstOperator,\n\t\t\t\t\t\tselectedValues as BetweenSelectedValues,\n\t\t\t\t\t\ttype,\n\t\t\t\t\t\tdataType === \"Edm.DateTimeOffset\"\n\t\t\t\t\t),\n\t\t\t\t\ttrue\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tthis.setProperty(\n\t\t\t\t\t\"value\",\n\t\t\t\t\tEasyFilterUtils.mapOperator(\n\t\t\t\t\t\tfirstOperator,\n\t\t\t\t\t\tinitSelectedValue as string | number | boolean | Date,\n\t\t\t\t\t\ttype,\n\t\t\t\t\t\tdataType === \"Edm.DateTimeOffset\"\n\t\t\t\t\t),\n\t\t\t\t\ttrue\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate handleMultipleSelectedValues(totalSelectedValues: number): void {\n\t\tthis.setProperty(\"value\", this.resourceBundle.getText(\"M_EASY_FILTER_MANDATORY_TOKEN_ITEMS\", [totalSelectedValues]), true);\n\t}\n\n\tsetValueForMenu(key: string): void {\n\t\tconst easyFilterBarContainer = this.getCustomDataValue(\"easyFilterBarContainer\") as EasyFilterBarContainer;\n\t\t//The retrieval of codeList might take more time so marking the control as busy until then\n\t\tthis.setBusy(true);\n\t\t(async (): Promise<void> => {\n\t\t\ttry {\n\t\t\t\tconst description = await this.getDescriptionByKey(\n\t\t\t\t\teasyFilterBarContainer.filterBarMetadata?.find((data) => data.name === key) as EasyFilterPropertyMetadata,\n\t\t\t\t\tthis.items as TokenSelectedValuesDefinition[]\n\t\t\t\t);\n\t\t\t\t//Rerender the token once the description is fetched\n\t\t\t\tthis.setProperty(\"value\", description);\n\t\t\t\tthis.isDescriptionFetched = true;\n\t\t\t\tthis.setBusy(false);\n\t\t\t} catch (error) {\n\t\t\t\tLog.error(\"Error while fetching codeList\", error as Error);\n\t\t\t}\n\t\t})();\n\t}\n\n\tgetDomRefForValueStateMessage(): Element | null {\n\t\treturn this.getDomRef();\n\t}\n\n\tasync getDescriptionByKey(\n\t\tdata: EasyFilterPropertyMetadata,\n\t\tselectedValues: TokenDefinition[\"keySpecificSelectedValues\"]\n\t): Promise<string> {\n\t\tconst codeList = await EasyFilterUtils.getCodeListArray(data.codeList);\n\t\treturn codeList?.find((list) => list.value === selectedValues[0].selectedValues[0])?.description as string;\n\t}\n\n\tasync invokeMenuWithCheckBox(): Promise<void> {\n\t\tconst easyFilterBarContainer = this.getCustomDataValue(\"easyFilterBarContainer\") as EasyFilterBarContainer;\n\t\tconst popover = this.getCustomDataValue(\"popover\") as Popover;\n\t\tconst codeList = this.getCustomDataValue(\"codeList\") as codeListType;\n\t\tconst { keySpecificSelectedValues } = this.getCustomDataValue(\"TokenInfo\") as TokenDefinition;\n\t\tif (!this.menuWithCheckBox) {\n\t\t\tthis.menuWithCheckBox = new MenuWithCheckBoxFactory(\n\t\t\t\teasyFilterBarContainer as EnhanceWithUI5<EasyFilterBarContainer>,\n\t\t\t\tthis as EasyFilterToken as EnhanceWithUI5<EasyFilterToken>\n\t\t\t);\n\t\t}\n\t\tthis.innerControl = this.menuWithCheckBox.getControl();\n\t\tthis.addDependent(this.innerControl as UI5Element);\n\t\tawait this.menuWithCheckBox.setItems(codeList, keySpecificSelectedValues);\n\t\tpopover?.removeAllContent();\n\t\tpopover?.addContent(this.innerControl as Control);\n\t\teasyFilterBarContainer?.getShowAllButton()?.setVisible(false);\n\t\tthis.openPopover();\n\t}\n\n\tasync invokeMenuWithSingleSelect(): Promise<void> {\n\t\tconst easyFilterBarContainer = this.getCustomDataValue(\"easyFilterBarContainer\") as EasyFilterBarContainer;\n\t\tconst popover = this.getCustomDataValue(\"popover\") as Popover;\n\t\tconst codeList = this.getCustomDataValue(\"codeList\") as codeListType;\n\t\tconst { keySpecificSelectedValues } = this.getCustomDataValue(\"TokenInfo\") as TokenDefinition;\n\t\tif (!this.menuWithSingleSelect) {\n\t\t\tthis.menuWithSingleSelect = new MenuWithSingleSelectFactory(\n\t\t\t\teasyFilterBarContainer as EnhanceWithUI5<EasyFilterBarContainer>,\n\t\t\t\tthis as EasyFilterToken as EnhanceWithUI5<EasyFilterToken>\n\t\t\t);\n\t\t}\n\t\tthis.innerControl = this.menuWithSingleSelect.getControl();\n\t\tthis.addDependent(this.innerControl as UI5Element);\n\t\tawait this.menuWithSingleSelect.setItems(codeList, keySpecificSelectedValues);\n\n\t\tpopover.setShowHeader(false);\n\t\tpopover.getFooter()?.setVisible(false);\n\n\t\tpopover?.removeAllContent();\n\t\tpopover?.addContent(this.innerControl as Control);\n\t\tthis.openPopover();\n\t}\n\n\tinvokeCalendar(): void {\n\t\tconst easyFilterBarContainer = this.getCustomDataValue(\"easyFilterBarContainer\") as EasyFilterBarContainer;\n\t\tconst popover = this.getCustomDataValue(\"popover\") as Popover;\n\t\tif (!this.calender) {\n\t\t\tthis.calender = new CalenderFactory(\n\t\t\t\teasyFilterBarContainer as EnhanceWithUI5<EasyFilterBarContainer>,\n\t\t\t\tthis as EasyFilterToken as EnhanceWithUI5<EasyFilterToken>\n\t\t\t);\n\t\t}\n\t\tthis.innerControl = this.calender.getControl();\n\t\tthis.addDependent(this.innerControl as UI5Element);\n\t\tpopover?.removeAllContent();\n\t\tpopover?.addContent(this.innerControl as Control);\n\t\teasyFilterBarContainer?.getShowAllButton()?.setVisible(true);\n\t\tthis.openPopover();\n\t}\n\n\tinvokeTime(): void {\n\t\tconst easyFilterBarContainer = this.getCustomDataValue(\"easyFilterBarContainer\") as EasyFilterBarContainer;\n\t\tconst popover = this.getCustomDataValue(\"popover\") as Popover;\n\t\tif (!this.time) {\n\t\t\tthis.time = new TimeFactory(\n\t\t\t\teasyFilterBarContainer as EnhanceWithUI5<EasyFilterBarContainer>,\n\t\t\t\tthis as EasyFilterToken as EnhanceWithUI5<EasyFilterToken>\n\t\t\t);\n\t\t}\n\t\tthis.innerControl = this.time.getControl();\n\t\tthis.addDependent(this.innerControl as UI5Element);\n\t\tpopover?.removeAllContent();\n\t\tpopover?.addContent(this.innerControl as Control);\n\t\teasyFilterBarContainer?.getShowAllButton()?.setVisible(true);\n\t\tthis.openPopover();\n\t}\n\n\tinvokeValueHelpPreview(): void {\n\t\tconst easyFilterBarContainer = this.getCustomDataValue(\"easyFilterBarContainer\") as EasyFilterBarContainer;\n\t\tconst popover = this.getCustomDataValue(\"popover\") as Popover;\n\t\tif (!this.valueHelpPreview) {\n\t\t\tthis.valueHelpPreview = new ValueHelpPreviewFactory(\n\t\t\t\teasyFilterBarContainer as EnhanceWithUI5<EasyFilterBarContainer>,\n\t\t\t\tthis as EasyFilterToken as EnhanceWithUI5<EasyFilterToken>\n\t\t\t);\n\t\t}\n\t\tconst { type, dataType } = easyFilterBarContainer.filterBarMetadata?.find(\n\t\t\t(data) => data.name === this.getKey()\n\t\t) as EasyFilterPropertyMetadata;\n\n\t\tif (type === \"ValueHelp\") {\n\t\t\tthis.valueHelpPreview.setItems(this.items as ValueHelpSelectedValuesDefinition[], type, dataType === \"Edm.DateTimeOffset\");\n\t\t} else {\n\t\t\tthis.valueHelpPreview.setItems(this.items as TokenSelectedValuesDefinition[], type, dataType === \"Edm.DateTimeOffset\");\n\t\t}\n\t\tthis.innerControl = this.valueHelpPreview.getControl();\n\t\tthis.addDependent(this.innerControl as UI5Element);\n\t\tpopover?.removeAllContent();\n\t\tpopover?.addContent(this.innerControl as Control);\n\t\teasyFilterBarContainer?.getShowAllButton()?.setVisible(true);\n\t\tthis.openPopover();\n\t}\n\n\topenPopover(): void {\n\t\tconst oPopover = this.getCustomDataValue(\"popover\") as Popover;\n\t\toPopover?.setTitle(this.label);\n\t\toPopover?.openBy(this);\n\t}\n\n\thandleOkClick(): void {\n\t\t// The below event handler would be invoked on all the tokens when OK button is clicked on the popover\n\t\t//Writing the below check so that we know that the current token instance is handling the press events appropriately\n\t\tif (!this.innerControl?.getDomRef()) {\n\t\t\treturn;\n\t\t}\n\t\tconst { type, keySpecificSelectedValues } = this.getCustomDataValue(\"TokenInfo\") as TokenDefinition;\n\t\tconst popover = this.getCustomDataValue(\"popover\") as Popover;\n\n\t\tlet okButtonHandler: (() => void) | undefined;\n\t\tif (type === \"Calendar\" && this.shouldOpenDefaultFragment(keySpecificSelectedValues)) {\n\t\t\tokButtonHandler = this.calender?.invokeOkButtonHandler.bind(this.calender);\n\t\t} else if (type === \"Time\" && this.shouldOpenDefaultFragment(keySpecificSelectedValues)) {\n\t\t\tokButtonHandler = this.time?.invokeOkButtonHandler.bind(this.time);\n\t\t} else if (type === \"MenuWithCheckBox\") {\n\t\t\tokButtonHandler = this.menuWithCheckBox?.invokeOkButtonHandler.bind(this.menuWithCheckBox);\n\t\t} else {\n\t\t\tokButtonHandler = this.valueHelpPreview?.invokeOkButtonHandler.bind(this.valueHelpPreview);\n\t\t}\n\n\t\tif (okButtonHandler) {\n\t\t\tokButtonHandler();\n\t\t}\n\t\tpopover?.close();\n\t}\n\n\thandleShowAllClick(): void {\n\t\t// The below event handler would be invoked on all the tokens when OK button is clicked on the popover\n\t\t//Writing the below check so that we know that the current token instance is handling the press events appropriately\n\t\tif (!this.innerControl?.getDomRef()) {\n\t\t\treturn;\n\t\t}\n\t\tconst popover = this.getCustomDataValue(\"popover\") as Popover;\n\t\tconst { type, keySpecificSelectedValues } = this.getCustomDataValue(\"TokenInfo\") as TokenDefinition;\n\t\tpopover.close();\n\t\tlet valueHelpHandler: (() => Promise<void>) | undefined;\n\t\tif (type === \"Calendar\" && this.shouldOpenDefaultFragment(keySpecificSelectedValues)) {\n\t\t\tvalueHelpHandler = this.calender?.invokeShowAllButtonHandler.bind(this.calender);\n\t\t} else if (type === \"Time\" && this.shouldOpenDefaultFragment(keySpecificSelectedValues)) {\n\t\t\tvalueHelpHandler = this.time?.invokeShowAllButtonHandler.bind(this.time);\n\t\t} else {\n\t\t\tvalueHelpHandler = this.valueHelpPreview?.invokeShowAllButtonHandler.bind(this.valueHelpPreview);\n\t\t}\n\t\tif (valueHelpHandler) {\n\t\t\t((): void => {\n\t\t\t\tvalueHelpHandler();\n\t\t\t})();\n\t\t}\n\t}\n\n\thandleAttachAfterClose(): void {\n\t\tif (!this.innerControl?.getDomRef()) {\n\t\t\treturn;\n\t\t}\n\t\tconst tokenInfo = this.getCustomDataValue(\"TokenInfo\") as TokenDefinition | undefined;\n\t\tif (tokenInfo) {\n\t\t\tconst { type, keySpecificSelectedValues } = this.getCustomDataValue(\"TokenInfo\") as TokenDefinition;\n\t\t\tif (\n\t\t\t\ttype === \"ValueHelp\" ||\n\t\t\t\t((type === \"Calendar\" || type === \"Time\") && !this.shouldOpenDefaultFragment(keySpecificSelectedValues))\n\t\t\t) {\n\t\t\t\tthis.valueHelpPreview?.invokePopupCloseHandler();\n\t\t\t} else if (type === \"MenuWithCheckBox\") {\n\t\t\t\tthis.menuWithCheckBox?.invokePopupCloseHandler();\n\t\t\t}\n\t\t}\n\t}\n\n\tgetInnerControl(): Calendar | TimePickerClocks | List | undefined {\n\t\treturn this.innerControl;\n\t}\n\n\topenValueStateMessage(): void {\n\t\tthis.valueStateMessage?.open();\n\t}\n\n\tcloseValueStateMessage(): void {\n\t\tthis.valueStateMessage?.close();\n\t}\n\n\tshouldOpenDefaultFragment(keySpecificSelectedValues: TokenSelectedValuesDefinition[]): boolean {\n\t\t//Between and NotBetween cant be handled by default fragments\n\t\tconst isBetweenOperator = keySpecificSelectedValues.find(\n\t\t\t(selectedValues) => selectedValues.operator === FilterOperator.BT || selectedValues.operator === FilterOperator.NB\n\t\t);\n\t\t//This first condition would be useful in mandatory token scenario and no value has been set to it\n\t\treturn (\n\t\t\tkeySpecificSelectedValues.length === 0 ||\n\t\t\t(keySpecificSelectedValues.length === 1 && keySpecificSelectedValues[0].selectedValues.length === 1 && !isBetweenOperator)\n\t\t);\n\t}\n\n\tfocusout(): void {\n\t\tthis.valueStateMessage?.close();\n\t}\n\n\tstatic render(rm: RenderManager, control: EnhanceWithUI5<EasyFilterToken>): void {\n\t\treturn jsx.renderUsingRenderManager(rm, control, () => {\n\t\t\tconst tokenizer = control.getParent() as EnhanceWithUI5<Tokenizer>;\n\t\t\tconst classes = [\"sapMToken\", \"sapFeControlsToken\"];\n\t\t\tconst classesForLabel = [\"sapMTokenText\", \"sapFeControlsTokenPropertyName\"];\n\t\t\tconst classesForValue = [\"sapMTokenText\", \"sapFeControlsTokenPropertyValues\"];\n\t\t\tconst isMandatory = control.getMandatory();\n\t\t\tif (typeof tokenizer?.getEditable === \"function\" && tokenizer?.getEditable()) {\n\t\t\t\tclasses.push(\"sapFEControlsPointer\");\n\t\t\t}\n\t\t\tif (control.getSelected()) {\n\t\t\t\tclasses.push(\"sapMTokenSelected\");\n\t\t\t}\n\t\t\tif (isMandatory ?? false) {\n\t\t\t\tclasses.push(\"sapFeControlsTokenMandatory\");\n\t\t\t\tif (control.getValue() === control.resourceBundle.getText(\"M_EASY_FILTER_MANDATORY_TOKEN_SELECT_VALUE\")) {\n\t\t\t\t\tclassesForValue.push(\"sapFeControlsTokenMandatory\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (control.getValueState() === ValueState.Error) {\n\t\t\t\tclasses.push(\"sapFeTokenError\");\n\t\t\t}\n\t\t\treturn (\n\t\t\t\t<div\n\t\t\t\t\tref={control}\n\t\t\t\t\tclass={classes.join(\" \")}\n\t\t\t\t\taria-selected={control.getSelected()}\n\t\t\t\t\ttabindex={-1}\n\t\t\t\t\taria-posinset={control.getProperty(\"posinset\")}\n\t\t\t\t\taria-setsize={control.getProperty(\"setsize\")}\n\t\t\t\t>\n\t\t\t\t\t<span class={classesForLabel.join(\" \")}>{control.getLabel()}:</span>\n\t\t\t\t\t<span class={classesForValue.join(\" \")}>{control.getValue()}</span>\n\t\t\t\t\t{isMandatory === true ? null : control.getAggregation(\"deleteIcon\")}\n\t\t\t\t</div>\n\t\t\t);\n\t\t});\n\t}\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":"easyFilter"}},{"offset":{"line":36,"column":0},"map":{"version":3,"names":["BaseFactory","easyFilter","easyFilterToken","this","items","_exports","_proto","prototype","getItems","getControl","control","setControl","getEasyFilter","getToken"],"sources":["./BaseFactory.ts"],"sourcesContent":["import type { PrimitiveType } from \"@sap-ux/vocabularies-types/Edm\";\nimport type { EnhanceWithUI5 } from \"sap/fe/base/ClassSupport\";\nimport type { PropertyMetadata } from \"ux/eng/fioriai/reuse/easyfilter/EasyFilter\";\nimport type EasyFilterBarContainer from \"../EasyFilterBarContainer\";\nimport type { TokenSelectedValuesDefinition, ValueHelpSelectedValuesDefinition } from \"../EasyFilterBarContainer\";\nimport type EasyFilterToken from \"../Token\";\n\ntype codeListType = PropertyMetadata[\"codeList\"];\n\nexport type finalCodeListType = { value: PrimitiveType; description: string };\n\nexport class BaseFactory<T> {\n\t// Private property to hold array of items\n\tprotected items: TokenSelectedValuesDefinition[] | ValueHelpSelectedValuesDefinition[] | codeListType = [];\n\n\tprivate control?: T;\n\n\tprivate easyFilter?: EnhanceWithUI5<EasyFilterBarContainer>;\n\n\tprivate easyFilterToken?: EnhanceWithUI5<EasyFilterToken>;\n\n\tconstructor(easyFilter: EnhanceWithUI5<EasyFilterBarContainer>, easyFilterToken: EnhanceWithUI5<EasyFilterToken>) {\n\t\tthis.easyFilter = easyFilter;\n\t\tthis.easyFilterToken = easyFilterToken;\n\t}\n\n\tpublic getItems(): TokenSelectedValuesDefinition[] | codeListType | ValueHelpSelectedValuesDefinition[] {\n\t\treturn this.items;\n\t}\n\n\tpublic getControl(): T | undefined {\n\t\treturn this.control;\n\t}\n\n\tprotected setControl(control: T): void {\n\t\tthis.control = control;\n\t}\n\n\tpublic getEasyFilter(): EnhanceWithUI5<EasyFilterBarContainer> | undefined {\n\t\treturn this.easyFilter;\n\t}\n\n\tpublic getToken(): EnhanceWithUI5<EasyFilterToken> | undefined {\n\t\treturn this.easyFilterToken;\n\t}\n}\n"],"mappings":"AAAA;;;;iHAWaA,EAAW,WAUvB,SAAAA,EAAYC,EAAoDC,GAThEC,KACUC,MAA8F,GASvGD,KAAKF,WAAaA,EAClBE,KAAKD,gBAAkBA,CACxB,CAACG,EAAAL,cAAA,IAAAM,EAAAN,EAAAO,UAAAD,EAEME,SAAP,SAAOA,IACN,OAAOL,KAAKC,KACb,EAACE,EAEMG,WAAP,SAAOA,IACN,OAAON,KAAKO,OACb,EAACJ,EAESK,WAAV,SAAUA,EAAWD,GACpBP,KAAKO,QAAUA,CAChB,EAACJ,EAEMM,cAAP,SAAOA,IACN,OAAOT,KAAKF,UACb,EAACK,EAEMO,SAAP,SAAOA,IACN,OAAOV,KAAKD,eACb,EAAC,OAAAF,CAAA,CAjCsB,GAiCtBK,EAAAL,cAAA,OAAAK,CAAA","ignoreList":[],"sourceRoot":"easyFilter/innerControls"}},{"offset":{"line":41,"column":0},"map":{"version":3,"names":["CalenderFactory","_BaseFactory","EFB","token","_this","call","this","setControl","Calendar","_inheritsLoose","_proto","prototype","invokeOkButtonHandler","calendar","getControl","popover","getToken","getCustomDataValue","key","keySpecificSelectedValues","formattedDate","DateFormat","getDateInstance","format","getSelectedDates","getStartDate","operator","length","FilterOperator","EQ","newSpecificValue","selectedValues","EasyFilterUtils","areItemsSame","getEasyFilter","updateTokenArray","close","invokeShowAllButtonHandler","async","getKey","valueHelpPromise","Promise","resolve","reject","fireEvent","getItems","newSelectedValues","error","Error","Log","message","String","BaseFactory"],"sources":["./CalendarFactory.ts"],"sourcesContent":["import Log from \"sap/base/Log\";\nimport type { EnhanceWithUI5 } from \"sap/fe/base/ClassSupport\";\nimport { BaseFactory } from \"sap/fe/controls/easyFilter/innerControls/BaseFactory\";\nimport type Popover from \"sap/m/Popover\";\nimport type UI5Date from \"sap/ui/core/date/UI5Date\";\nimport DateFormat from \"sap/ui/core/format/DateFormat\";\nimport FilterOperator from \"sap/ui/model/FilterOperator\";\nimport Calendar from \"sap/ui/unified/Calendar\";\nimport type EasyFilterBarContainer from \"../EasyFilterBarContainer\";\nimport type { TokenDefinition, TokenSelectedValuesDefinition } from \"../EasyFilterBarContainer\";\nimport type EasyFilterToken from \"../Token\";\nimport EasyFilterUtils from \"../utils\";\n\nclass CalenderFactory extends BaseFactory<Calendar> {\n\tconstructor(EFB: EnhanceWithUI5<EasyFilterBarContainer>, token: EnhanceWithUI5<EasyFilterToken>) {\n\t\tsuper(EFB, token);\n\t\tthis.setControl(new Calendar({}));\n\t}\n\n\tinvokeOkButtonHandler(): void {\n\t\tconst calendar = this.getControl();\n\t\tconst popover = this.getToken()?.getCustomDataValue(\"popover\") as Popover;\n\t\tconst { key, keySpecificSelectedValues } = this.getToken()?.getCustomDataValue(\"TokenInfo\") as TokenDefinition;\n\t\tconst formattedDate = DateFormat.getDateInstance().format(calendar?.getSelectedDates()[0].getStartDate() as UI5Date | Date);\n\t\tconst operator = keySpecificSelectedValues.length === 0 ? FilterOperator.EQ : keySpecificSelectedValues[0].operator;\n\t\tconst newSpecificValue: TokenDefinition[\"keySpecificSelectedValues\"] = [\n\t\t\t{\n\t\t\t\toperator: operator as Exclude<\n\t\t\t\t\tFilterOperator,\n\t\t\t\t\tFilterOperator.BT | FilterOperator.NB | FilterOperator.All | FilterOperator.Any\n\t\t\t\t>,\n\t\t\t\tselectedValues: [formattedDate] as string[] | number[] | boolean[]\n\t\t\t}\n\t\t];\n\t\tif (EasyFilterUtils.areItemsSame(keySpecificSelectedValues, newSpecificValue)) {\n\t\t\treturn;\n\t\t}\n\t\tthis.getEasyFilter()?.updateTokenArray(\"setSelectedValues\", newSpecificValue, key);\n\t\tpopover?.close();\n\t}\n\n\tasync invokeShowAllButtonHandler(): Promise<void> {\n\t\tconst token = this.getToken();\n\t\tconst key = token?.getKey() as string;\n\t\tconst valueHelpPromise = new Promise<TokenSelectedValuesDefinition[]>((resolve, reject) => {\n\t\t\tthis.getEasyFilter()?.fireEvent(\"showValueHelp\", {\n\t\t\t\tkey,\n\t\t\t\tselectedValues: token?.getItems(),\n\t\t\t\tresolve,\n\t\t\t\treject\n\t\t\t});\n\t\t});\n\n\t\ttry {\n\t\t\tconst newSelectedValues = await valueHelpPromise;\n\t\t\tthis.getEasyFilter()?.updateTokenArray(\"setSelectedValues\", newSelectedValues, key);\n\t\t} catch (error) {\n\t\t\tif (error instanceof Error) {\n\t\t\t\tLog.error(\"Error while fetching new tokens\", error.message);\n\t\t\t} else {\n\t\t\t\tLog.error(\"Error while fetching new tokens\", String(error));\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport default CalenderFactory;\n"],"mappings":"AAAA;;;;ogBAaMA,EAAe,SAAAC,GACpB,SAAAD,EAAYE,EAA6CC,GAAwC,IAAAC,EAChGA,EAAAH,EAAAI,KAAAC,KAAMJ,EAAKC,IAAMG,KACjBF,EAAKG,WAAW,IAAIC,EAAS,CAAC,IAAI,OAAAJ,CACnC,CAACK,EAAAT,EAAAC,GAAA,IAAAS,EAAAV,EAAAW,UAAAD,EAEDE,sBAAA,SAAAA,IACC,MAAMC,EAAWP,KAAKQ,aACtB,MAAMC,EAAUT,KAAKU,YAAYC,mBAAmB,WACpD,MAAMC,IAAEA,EAAGC,0BAAEA,GAA8Bb,KAAKU,YAAYC,mBAAmB,aAC/E,MAAMG,EAAgBC,EAAWC,kBAAkBC,OAAOV,GAAUW,mBAAmB,GAAGC,gBAC1F,MAAMC,EAAWP,EAA0BQ,SAAW,EAAIC,EAAeC,GAAKV,EAA0B,GAAGO,SAC3G,MAAMI,EAAiE,CACtE,CACCJ,SAAUA,EAIVK,eAAgB,CAACX,KAGnB,GAAIY,EAAgBC,aAAad,EAA2BW,GAAmB,CAC9E,MACD,CACAxB,KAAK4B,iBAAiBC,iBAAiB,oBAAqBL,EAAkBZ,GAC9EH,GAASqB,OACV,EAAC1B,EAEK2B,2BAANC,eAAMD,IACL,MAAMlC,EAAQG,KAAKU,WACnB,MAAME,EAAMf,GAAOoC,SACnB,MAAMC,EAAmB,IAAIC,QAAyC,CAACC,EAASC,KAC/ErC,KAAK4B,iBAAiBU,UAAU,gBAAiB,CAChD1B,MACAa,eAAgB5B,GAAO0C,WACvBH,UACAC,aAIF,IACC,MAAMG,QAA0BN,EAChClC,KAAK4B,iBAAiBC,iBAAiB,oBAAqBW,EAAmB5B,EAChF,CAAE,MAAO6B,GACR,GAAIA,aAAiBC,MAAO,CAC3BC,EAAIF,MAAM,kCAAmCA,EAAMG,QACpD,KAAO,CACND,EAAIF,MAAM,kCAAmCI,OAAOJ,GACrD,CACD,CACD,EAAC,OAAA/C,CAAA,CAlDmB,CAASoD,GAAW,OAqD1BpD,CAAe","ignoreList":[],"sourceRoot":"easyFilter/innerControls"}},{"offset":{"line":46,"column":0},"map":{"version":3,"names":["MenuWithCheckBoxFactory","_BaseFactory","EFB","token","_this","ListSeparators","library","ListMode","call","this","selectionList","okButtonClicked","setControl","List","mode","MultiSelect","showSeparators","None","_inheritsLoose","_proto","prototype","setItems","async","newItems","allSelectedValues","Utils","areCodeListsSame","getItems","list","getControl","items","getCodeListArray","destroyAggregation","forEach","item","idx","selectState","length","selectedValues","firstValue","value","includes","push","addItem","StandardListItem","title","description","selected","customData","CustomData","key","invokeOkButtonHandler","areSelectListSame","getSelectedIndices","listItems","getSelectedItems","easyFilterBarContainer","getEasyFilter","operator","FilterOperator","EQ","getToken","getCustomDataValue","getCustomData","find","getKey","getValue","undefined","Array","isArray","every","val","updateTokenArray","tempSelectList","invokePopupCloseHandler","removeSelections","setSelected","setSelectList","indexOfItem","BaseFactory"],"sources":["./MenuWithCheckBoxFactory.ts"],"sourcesContent":["import type { EnhanceWithUI5 } from \"sap/fe/base/ClassSupport\";\nimport type { finalCodeListType } from \"sap/fe/controls/easyFilter/innerControls/BaseFactory\";\nimport { BaseFactory } from \"sap/fe/controls/easyFilter/innerControls/BaseFactory\";\nimport Utils from \"sap/fe/controls/easyFilter/utils\";\nimport List from \"sap/m/List\";\nimport StandardListItem from \"sap/m/StandardListItem\";\nimport library from \"sap/m/library\";\nimport CustomData from \"sap/ui/core/CustomData\";\nimport FilterOperator from \"sap/ui/model/FilterOperator\";\nimport type { PropertyMetadata } from \"ux/eng/fioriai/reuse/easyfilter/EasyFilter\";\nimport type EasyFilterBarContainer from \"../EasyFilterBarContainer\";\nimport type { TokenDefinition, TokenSelectedValuesDefinition } from \"../EasyFilterBarContainer\";\nimport type EasyFilterToken from \"../Token\";\ntype codeListType = PropertyMetadata[\"codeList\"];\nclass MenuWithCheckBoxFactory extends BaseFactory<List> {\n\tprivate selectionList: number[] = [];\n\n\tprivate okButtonClicked = false;\n\n\tconstructor(EFB: EnhanceWithUI5<EasyFilterBarContainer>, token: EnhanceWithUI5<EasyFilterToken>) {\n\t\tconst ListSeparators = library.ListSeparators;\n\t\tconst ListMode = library.ListMode;\n\t\tsuper(EFB, token);\n\t\tthis.setControl(\n\t\t\tnew List({\n\t\t\t\tmode: ListMode.MultiSelect,\n\t\t\t\tshowSeparators: ListSeparators.None\n\t\t\t})\n\t\t);\n\t}\n\n\tasync setItems(newItems: codeListType, allSelectedValues: TokenDefinition[\"keySpecificSelectedValues\"]): Promise<void> {\n\t\tif (await Utils.areCodeListsSame(newItems, this.getItems() as codeListType)) {\n\t\t\treturn;\n\t\t}\n\t\tconst list: List | undefined = this.getControl();\n\n\t\tthis.items = (await Utils.getCodeListArray(newItems)) as finalCodeListType[];\n\t\tlist?.destroyAggregation(\"items\");\n\t\tthis.selectionList = [];\n\t\tthis.items.forEach((item, idx) => {\n\t\t\tlet selectState = false;\n\t\t\t//Value should either be string, number or boolean.\n\t\t\tif (allSelectedValues.length > 0 && allSelectedValues[0].selectedValues.length > 0) {\n\t\t\t\tconst firstValue = allSelectedValues[0].selectedValues[0];\n\t\t\t\tif (typeof firstValue === \"string\" && typeof item.value === \"string\") {\n\t\t\t\t\t// Assert selectedValues as string[]\n\t\t\t\t\tif ((allSelectedValues[0].selectedValues as string[]).includes(item.value)) {\n\t\t\t\t\t\tselectState = true;\n\t\t\t\t\t\tthis.selectionList?.push(idx);\n\t\t\t\t\t}\n\t\t\t\t} else if (typeof firstValue === \"boolean\" && typeof item.value === \"boolean\") {\n\t\t\t\t\t// Assert selectedValues as boolean[]\n\t\t\t\t\tif ((allSelectedValues[0].selectedValues as boolean[]).includes(item.value)) {\n\t\t\t\t\t\tselectState = true;\n\t\t\t\t\t\tthis.selectionList?.push(idx);\n\t\t\t\t\t}\n\t\t\t\t} else if (typeof firstValue === \"number\" && typeof item.value === \"number\") {\n\t\t\t\t\t// Assert selectedValues as number[]\n\t\t\t\t\tif ((allSelectedValues[0].selectedValues as number[]).includes(item.value)) {\n\t\t\t\t\t\tselectState = true;\n\t\t\t\t\t\tthis.selectionList?.push(idx);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlist?.addItem(\n\t\t\t\tnew StandardListItem({\n\t\t\t\t\ttitle: item.description,\n\t\t\t\t\tselected: selectState,\n\t\t\t\t\tcustomData: [\n\t\t\t\t\t\t//Saving the value inside the CustomData, because at the end we would be exposing the values to the consumer not the description\n\t\t\t\t\t\tnew CustomData({\n\t\t\t\t\t\t\tkey: \"value\",\n\t\t\t\t\t\t\tvalue: item.value\n\t\t\t\t\t\t})\n\t\t\t\t\t]\n\t\t\t\t})\n\t\t\t);\n\t\t});\n\t}\n\n\tinvokeOkButtonHandler(): void {\n\t\tif (this.areSelectListSame()) {\n\t\t\treturn;\n\t\t}\n\t\tthis.selectionList = this.getSelectedIndices();\n\t\tthis.okButtonClicked = true;\n\t\tconst listItems: StandardListItem[] | undefined = this.getControl()?.getSelectedItems() as StandardListItem[];\n\t\tconst easyFilterBarContainer = this.getEasyFilter() as EasyFilterBarContainer;\n\t\tlet allSelectedValues: TokenSelectedValuesDefinition[] = [\n\t\t\t{\n\t\t\t\toperator: FilterOperator.EQ,\n\t\t\t\tselectedValues: []\n\t\t\t}\n\t\t];\n\t\tconst { key } = this.getToken()?.getCustomDataValue(\"TokenInfo\") as TokenDefinition;\n\t\tlistItems.forEach((item) => {\n\t\t\tconst value: string | number | boolean | undefined = item\n\t\t\t\t.getCustomData()\n\t\t\t\t.find((customData: CustomData) => customData.getKey() === \"value\")\n\t\t\t\t?.getValue() as string | number | boolean;\n\n\t\t\tif (value !== undefined) {\n\t\t\t\t// Check the type of value and the contents of selectedValues\n\t\t\t\tif (Array.isArray(allSelectedValues[0].selectedValues)) {\n\t\t\t\t\tconst selectedValues = allSelectedValues[0].selectedValues;\n\t\t\t\t\tif (\n\t\t\t\t\t\t(typeof value === \"string\" && selectedValues.every((val): val is string => typeof val === \"string\")) ||\n\t\t\t\t\t\t(typeof value === \"boolean\" && selectedValues.every((val): val is boolean => typeof val === \"boolean\")) ||\n\t\t\t\t\t\t(typeof value === \"number\" && selectedValues.every((val): val is number => typeof val === \"number\"))\n\t\t\t\t\t) {\n\t\t\t\t\t\t// Push the value only if all selectedValues are of the same type\n\t\t\t\t\t\t(selectedValues as Array<typeof value>).push(value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tallSelectedValues = allSelectedValues[0].selectedValues.length === 0 ? [] : allSelectedValues;\n\t\teasyFilterBarContainer.updateTokenArray(\"setSelectedValues\", allSelectedValues, key);\n\t}\n\n\tareSelectListSame(): boolean {\n\t\t//The below case would get applicable in mandatory tokens case where no value has been set\n\t\tconst tempSelectList = this.getSelectedIndices();\n\t\tif (this.selectionList.length === 0 || tempSelectList.length !== this.selectionList.length) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.selectionList.every((item, idx) => tempSelectList[idx] === item);\n\t}\n\n\tinvokePopupCloseHandler(): void {\n\t\tif (this.okButtonClicked) {\n\t\t\tthis.okButtonClicked = false;\n\t\t\treturn;\n\t\t}\n\t\tthis.okButtonClicked = false;\n\t\tthis.getControl()?.removeSelections();\n\t\tthis.selectionList?.forEach((idx) => this.getControl()?.getItems()[idx].setSelected(true));\n\t}\n\n\tsetSelectList(): void {\n\t\tthis.selectionList = [];\n\t\tconst listItems: StandardListItem[] = this.getControl()?.getSelectedItems() as StandardListItem[];\n\t\tlistItems?.forEach((item) => this.selectionList?.push(this.getControl()?.indexOfItem(item) as number));\n\t}\n\n\tgetSelectedIndices(): number[] {\n\t\tconst selectionList: number[] = [];\n\t\tconst listItems: StandardListItem[] = this.getControl()?.getSelectedItems() as StandardListItem[];\n\t\tlistItems?.forEach((item) => selectionList?.push(this.getControl()?.indexOfItem(item) as number));\n\t\treturn selectionList;\n\t}\n}\n\nexport default MenuWithCheckBoxFactory;\n"],"mappings":"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","ignoreList":[],"sourceRoot":"easyFilter/innerControls"}},{"offset":{"line":51,"column":0},"map":{"version":3,"names":["MenuWithSingleSelectFactory","_BaseFactory","EFB","token","_this","ListSeparators","library","ListMode","call","this","selectedItemIndex","setControl","List","mode","SingleSelectMaster","showSeparators","None","selectionChange","onItemSelected","bind","_inheritsLoose","_proto","prototype","setItems","async","newItems","allSelectedValues","Utils","areCodeListsSame","getItems","list","getControl","items","getCodeListArray","destroyAggregation","forEach","item","idx","selectState","length","selectedValues","firstValue","value","addItem","StandardListItem","title","description","selected","customData","CustomData","key","event","selectedItem","getParameter","easyFilterBarContainer","getEasyFilter","getCustomData","find","getKey","getValue","undefined","selectedValue","operator","FilterOperator","EQ","closeInnerControlPopover","getToken","getCustomDataValue","updateTokenArray","indexOfItem","getSelectedIndex","getSelectedItems","BaseFactory"],"sources":["./MenuWithSingleSelectFactory.ts"],"sourcesContent":["import type { PrimitiveType } from \"@sap-ux/vocabularies-types/Edm\";\nimport type { EnhanceWithUI5 } from \"sap/fe/base/ClassSupport\";\nimport type { finalCodeListType } from \"sap/fe/controls/easyFilter/innerControls/BaseFactory\";\nimport { BaseFactory } from \"sap/fe/controls/easyFilter/innerControls/BaseFactory\";\nimport Utils from \"sap/fe/controls/easyFilter/utils\";\nimport List from \"sap/m/List\";\nimport type { ListBase$SelectionChangeEvent } from \"sap/m/ListBase\";\nimport StandardListItem from \"sap/m/StandardListItem\";\nimport library from \"sap/m/library\";\nimport CustomData from \"sap/ui/core/CustomData\";\nimport FilterOperator from \"sap/ui/model/FilterOperator\";\nimport type { PropertyMetadata } from \"ux/eng/fioriai/reuse/easyfilter/EasyFilter\";\nimport type EasyFilterBarContainer from \"../EasyFilterBarContainer\";\nimport type { TokenDefinition, TokenSelectedValuesDefinition } from \"../EasyFilterBarContainer\";\nimport type EasyFilterToken from \"../Token\";\n\ntype codeListType = PropertyMetadata[\"codeList\"];\n\nclass MenuWithSingleSelectFactory extends BaseFactory<List> {\n\tprivate selectedItemIndex = -1;\n\n\tconstructor(EFB: EnhanceWithUI5<EasyFilterBarContainer>, token: EnhanceWithUI5<EasyFilterToken>) {\n\t\tconst ListSeparators = library.ListSeparators;\n\t\tconst ListMode = library.ListMode;\n\n\t\tsuper(EFB, token);\n\n\t\t// Initialize the list with single-select mode.\n\t\tthis.setControl(\n\t\t\tnew List({\n\t\t\t\tmode: ListMode.SingleSelectMaster,\n\t\t\t\tshowSeparators: ListSeparators.None,\n\t\t\t\tselectionChange: this.onItemSelected.bind(this) // Attach the selection event handler.\n\t\t\t})\n\t\t);\n\t}\n\n\t/**\n\t * Sets the items for the list and initializes the selection.\n\t * @param newItems\n\t * @param allSelectedValues\n\t */\n\tasync setItems(newItems: codeListType, allSelectedValues: TokenDefinition[\"keySpecificSelectedValues\"]): Promise<void> {\n\t\tif (await Utils.areCodeListsSame(newItems, this.getItems() as codeListType)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst list: List | undefined = this.getControl();\n\t\tthis.items = (await Utils.getCodeListArray(newItems)) as finalCodeListType[];\n\t\tlist?.destroyAggregation(\"items\");\n\t\tthis.selectedItemIndex = -1;\n\n\t\tthis.items.forEach((item, idx) => {\n\t\t\tlet selectState = false;\n\n\t\t\t// Check if the item matches any preselected value.\n\t\t\tif (allSelectedValues.length > 0 && allSelectedValues[0].selectedValues.length > 0) {\n\t\t\t\tconst firstValue = allSelectedValues[0].selectedValues[0];\n\t\t\t\tif (typeof firstValue === typeof item.value && firstValue === item.value) {\n\t\t\t\t\tselectState = true;\n\t\t\t\t\tthis.selectedItemIndex = idx;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Add item to the list with the appropriate selection state.\n\t\t\tlist?.addItem(\n\t\t\t\tnew StandardListItem({\n\t\t\t\t\ttitle: item.description,\n\t\t\t\t\tselected: selectState,\n\t\t\t\t\tcustomData: [\n\t\t\t\t\t\tnew CustomData({\n\t\t\t\t\t\t\tkey: \"value\",\n\t\t\t\t\t\t\tvalue: item.value\n\t\t\t\t\t\t})\n\t\t\t\t\t]\n\t\t\t\t})\n\t\t\t);\n\t\t});\n\t}\n\n\t/**\n\t * Event handler for item selection.\n\t * Directly triggers the token update when an item is selected.\n\t * @param event\n\t */\n\tprivate onItemSelected(event: ListBase$SelectionChangeEvent): void {\n\t\tconst selectedItem = event.getParameter(\"listItem\");\n\t\tconst list: List | undefined = this.getControl();\n\t\tconst easyFilterBarContainer = this.getEasyFilter() as EasyFilterBarContainer;\n\n\t\tif (!selectedItem || !list) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Get the value of the selected item.\n\t\tconst value: PrimitiveType = selectedItem\n\t\t\t.getCustomData()\n\t\t\t.find((customData: CustomData) => customData.getKey() === \"value\")\n\t\t\t?.getValue() as string | number | boolean;\n\n\t\tif (value !== undefined) {\n\t\t\t// Prepare the selected values definition.\n\t\t\tconst selectedValue: TokenSelectedValuesDefinition[] = [\n\t\t\t\t{\n\t\t\t\t\toperator: FilterOperator.EQ,\n\t\t\t\t\tselectedValues: [value]\n\t\t\t\t}\n\t\t\t];\n\n\t\t\teasyFilterBarContainer?.closeInnerControlPopover();\n\n\t\t\t// Get the key of the token and update the token array.\n\t\t\tconst { key } = this.getToken()?.getCustomDataValue(\"TokenInfo\") as TokenDefinition;\n\t\t\teasyFilterBarContainer.updateTokenArray(\"setSelectedValues\", selectedValue, key);\n\n\t\t\t// Update the selected item index for internal tracking.\n\t\t\tthis.selectedItemIndex = list.indexOfItem(selectedItem);\n\t\t}\n\t}\n\n\t//Retrieves the index of the currently selected item.\n\tgetSelectedIndex(): number {\n\t\tconst selectedItem: StandardListItem | undefined = this.getControl()?.getSelectedItems()?.[0] as StandardListItem;\n\n\t\treturn selectedItem ? this.getControl()?.indexOfItem(selectedItem) ?? -1 : -1;\n\t}\n}\n\nexport default MenuWithSingleSelectFactory;\n"],"mappings":"AAAA;;;;gjBAkBMA,EAA2B,SAAAC,GAGhC,SAAAD,EAAYE,EAA6CC,GAAwC,IAAAC,EAChG,MAAMC,EAAiBC,EAAQD,eAC/B,MAAME,EAAWD,EAAQC,SAEzBH,EAAAH,EAAAO,KAAAC,KAAMP,EAAKC,IAAMM,KAEjBL,EAROM,mBAAqB,EAS5BN,EAAKO,WACJ,IAAIC,EAAK,CACRC,KAAMN,EAASO,mBACfC,eAAgBV,EAAeW,KAC/BC,gBAAiBb,EAAKc,eAAeC,KAAIf,MAEzC,OAAAA,CACH,CAEAgB,EAAApB,EAAAC,GAAA,IAAAoB,EAAArB,EAAAsB,UAAAD,EAKME,SAANC,eAAMD,EAASE,EAAwBC,GACtC,SAAUC,EAAMC,iBAAiBH,EAAUhB,KAAKoB,YAA6B,CAC5E,MACD,CAEA,MAAMC,EAAyBrB,KAAKsB,aACpCtB,KAAKuB,YAAeL,EAAMM,iBAAiBR,GAC3CK,GAAMI,mBAAmB,SACzBzB,KAAKC,mBAAqB,EAE1BD,KAAKuB,MAAMG,QAAQ,CAACC,EAAMC,KACzB,IAAIC,EAAc,MAGlB,GAAIZ,EAAkBa,OAAS,GAAKb,EAAkB,GAAGc,eAAeD,OAAS,EAAG,CACnF,MAAME,EAAaf,EAAkB,GAAGc,eAAe,GACvD,UAAWC,WAAsBL,EAAKM,OAASD,IAAeL,EAAKM,MAAO,CACzEJ,EAAc,KACd7B,KAAKC,kBAAoB2B,CAC1B,CACD,CAGAP,GAAMa,QACL,IAAIC,EAAiB,CACpBC,MAAOT,EAAKU,YACZC,SAAUT,EACVU,WAAY,CACX,IAAIC,EAAW,CACdC,IAAK,QACLR,MAAON,EAAKM,aAMlB,EAEArB,EAKQH,eAAR,SAAQA,EAAeiC,GACtB,MAAMC,EAAeD,EAAME,aAAa,YACxC,MAAMvB,EAAyBrB,KAAKsB,aACpC,MAAMuB,EAAyB7C,KAAK8C,gBAEpC,IAAKH,IAAiBtB,EAAM,CAC3B,MACD,CAGA,MAAMY,EAAuBU,EAC3BI,gBACAC,KAAMT,GAA2BA,EAAWU,WAAa,UACxDC,WAEH,GAAIjB,IAAUkB,UAAW,CAExB,MAAMC,EAAiD,CACtD,CACCC,SAAUC,EAAeC,GACzBxB,eAAgB,CAACE,KAInBY,GAAwBW,2BAGxB,MAAMf,IAAEA,GAAQzC,KAAKyD,YAAYC,mBAAmB,aACpDb,EAAuBc,iBAAiB,oBAAqBP,EAAeX,GAG5EzC,KAAKC,kBAAoBoB,EAAKuC,YAAYjB,EAC3C,CACD,EAEA/B,EACAiD,iBAAA,SAAAA,IACC,MAAMlB,EAA6C3C,KAAKsB,cAAcwC,qBAAqB,GAE3F,OAAOnB,EAAe3C,KAAKsB,cAAcsC,YAAYjB,KAAkB,GAAK,CAC7E,EAAC,OAAApD,CAAA,CA3G+B,CAASwE,GAAW,OA8GtCxE,CAA2B","ignoreList":[],"sourceRoot":"easyFilter/innerControls"}},{"offset":{"line":56,"column":0},"map":{"version":3,"names":["TimeFactory","_BaseFactory","EFB","token","_this","call","this","setControl","TimePickerClocks","_inheritsLoose","_proto","prototype","invokeOkButtonHandler","timePickerControl","getControl","popover","getToken","getCustomDataValue","key","keySpecificSelectedValues","formattedTime","DateFormat","getTimeInstance","format","getTimeValues","operator","length","FilterOperator","EQ","newSpecificValue","selectedValues","EasyFilterUtils","areItemsSame","getEasyFilter","updateTokenArray","close","invokeShowAllButtonHandler","async","getKey","valueHelpPromise","Promise","resolve","reject","fireEvent","getItems","newSelectedValues","error","Error","Log","message","String","BaseFactory"],"sources":["./TimeFactory.ts"],"sourcesContent":["import Log from \"sap/base/Log\";\nimport type { EnhanceWithUI5 } from \"sap/fe/base/ClassSupport\";\nimport { BaseFactory } from \"sap/fe/controls/easyFilter/innerControls/BaseFactory\";\nimport type Popover from \"sap/m/Popover\";\nimport TimePickerClocks from \"sap/m/TimePickerClocks\";\nimport type UI5Date from \"sap/ui/core/date/UI5Date\";\nimport DateFormat from \"sap/ui/core/format/DateFormat\";\nimport FilterOperator from \"sap/ui/model/FilterOperator\";\nimport type EasyFilterBarContainer from \"../EasyFilterBarContainer\";\nimport type { TokenDefinition, TokenSelectedValuesDefinition } from \"../EasyFilterBarContainer\";\nimport type EasyFilterToken from \"../Token\";\nimport EasyFilterUtils from \"../utils\";\n\nclass TimeFactory extends BaseFactory<TimePickerClocks> {\n\tconstructor(EFB: EnhanceWithUI5<EasyFilterBarContainer>, token: EnhanceWithUI5<EasyFilterToken>) {\n\t\tsuper(EFB, token);\n\t\tthis.setControl(new TimePickerClocks());\n\t}\n\n\tinvokeOkButtonHandler(): void {\n\t\tconst timePickerControl = this.getControl();\n\t\tconst popover = this.getToken()?.getCustomDataValue(\"popover\") as Popover;\n\t\tconst { key, keySpecificSelectedValues } = this.getToken()?.getCustomDataValue(\"TokenInfo\") as TokenDefinition;\n\t\tconst formattedTime: string = DateFormat.getTimeInstance().format(timePickerControl?.getTimeValues() as UI5Date | Date);\n\t\tconst operator = keySpecificSelectedValues.length === 0 ? FilterOperator.EQ : keySpecificSelectedValues[0].operator;\n\t\tconst newSpecificValue: TokenDefinition[\"keySpecificSelectedValues\"] = [\n\t\t\t{\n\t\t\t\toperator: operator as Exclude<\n\t\t\t\t\tFilterOperator,\n\t\t\t\t\tFilterOperator.BT | FilterOperator.NB | FilterOperator.All | FilterOperator.Any\n\t\t\t\t>,\n\t\t\t\tselectedValues: [formattedTime] as string[] | number[] | boolean[]\n\t\t\t}\n\t\t];\n\t\tif (EasyFilterUtils.areItemsSame(keySpecificSelectedValues, newSpecificValue)) {\n\t\t\treturn;\n\t\t}\n\t\tthis.getEasyFilter()?.updateTokenArray(\"setSelectedValues\", newSpecificValue, key);\n\t\tpopover?.close();\n\t}\n\n\tasync invokeShowAllButtonHandler(): Promise<void> {\n\t\tconst token = this.getToken();\n\t\tconst key = token?.getKey() as string;\n\t\tconst valueHelpPromise = new Promise<TokenSelectedValuesDefinition[]>((resolve, reject) => {\n\t\t\tthis.getEasyFilter()?.fireEvent(\"showValueHelp\", {\n\t\t\t\tkey,\n\t\t\t\tselectedValues: token?.getItems(),\n\t\t\t\tresolve,\n\t\t\t\treject\n\t\t\t});\n\t\t});\n\n\t\ttry {\n\t\t\tconst newSelectedValues = await valueHelpPromise;\n\t\t\tthis.getEasyFilter()?.updateTokenArray(\"setSelectedValues\", newSelectedValues, key);\n\t\t} catch (error) {\n\t\t\tif (error instanceof Error) {\n\t\t\t\tLog.error(\"Error while fetching new tokens\", error.message);\n\t\t\t} else {\n\t\t\t\tLog.error(\"Error while fetching new tokens\", String(error));\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport default TimeFactory;\n"],"mappings":"AAAA;;;;+fAaMA,EAAW,SAAAC,GAChB,SAAAD,EAAYE,EAA6CC,GAAwC,IAAAC,EAChGA,EAAAH,EAAAI,KAAAC,KAAMJ,EAAKC,IAAMG,KACjBF,EAAKG,WAAW,IAAIC,GAAoB,OAAAJ,CACzC,CAACK,EAAAT,EAAAC,GAAA,IAAAS,EAAAV,EAAAW,UAAAD,EAEDE,sBAAA,SAAAA,IACC,MAAMC,EAAoBP,KAAKQ,aAC/B,MAAMC,EAAUT,KAAKU,YAAYC,mBAAmB,WACpD,MAAMC,IAAEA,EAAGC,0BAAEA,GAA8Bb,KAAKU,YAAYC,mBAAmB,aAC/E,MAAMG,EAAwBC,EAAWC,kBAAkBC,OAAOV,GAAmBW,iBACrF,MAAMC,EAAWN,EAA0BO,SAAW,EAAIC,EAAeC,GAAKT,EAA0B,GAAGM,SAC3G,MAAMI,EAAiE,CACtE,CACCJ,SAAUA,EAIVK,eAAgB,CAACV,KAGnB,GAAIW,EAAgBC,aAAab,EAA2BU,GAAmB,CAC9E,MACD,CACAvB,KAAK2B,iBAAiBC,iBAAiB,oBAAqBL,EAAkBX,GAC9EH,GAASoB,OACV,EAACzB,EAEK0B,2BAANC,eAAMD,IACL,MAAMjC,EAAQG,KAAKU,WACnB,MAAME,EAAMf,GAAOmC,SACnB,MAAMC,EAAmB,IAAIC,QAAyC,CAACC,EAASC,KAC/EpC,KAAK2B,iBAAiBU,UAAU,gBAAiB,CAChDzB,MACAY,eAAgB3B,GAAOyC,WACvBH,UACAC,aAIF,IACC,MAAMG,QAA0BN,EAChCjC,KAAK2B,iBAAiBC,iBAAiB,oBAAqBW,EAAmB3B,EAChF,CAAE,MAAO4B,GACR,GAAIA,aAAiBC,MAAO,CAC3BC,EAAIF,MAAM,kCAAmCA,EAAMG,QACpD,KAAO,CACND,EAAIF,MAAM,kCAAmCI,OAAOJ,GACrD,CACD,CACD,EAAC,OAAA9C,CAAA,CAlDe,CAASmD,GAAW,OAqDtBnD,CAAW","ignoreList":[],"sourceRoot":"easyFilter/innerControls"}},{"offset":{"line":61,"column":0},"map":{"version":3,"names":["ValueHelpPreviewFactory","_BaseFactory","EFB","token","_this","call","this","setControl","List","delete","onDelete","bind","mode","ListMode","Delete","showSeparators","ListSeparators","None","_inheritsLoose","_proto","prototype","setItems","items","tokenType","isDateTimeOffset","Utils","areItemsSame","list","getControl","destroyAggregation","forEach","item","index1","operator","selectedValues","title","isBetweenSelectedValues","mapOperatorForBetweenOperator","insertItem","selectedValue","index2","mapOperatorForValueHelp","mapOperator","indexPositions","addItem","StandardListItem","customData","CustomData","key","value","event","popover","getToken","getCustomDataValue","getParameter","setVisible","focus","normalizeString","str","regex","replace","invokeOkButtonHandler","easyFilterBarContainer","getEasyFilter","getItems","map","JSON","parse","stringify","deepClone","indicesToBeRemoved","listItem","getVisible","Infinity","getCustomData","find","data","getKey","getValue","push","sort","a","b","_ref","objIndex","valueIndex","splice","length","updateTokenArray","close","invokeShowAllButtonHandler","async","type","oldSelectedValues","valueHelpPromise","Promise","resolve","reject","fireEvent","values","newSelectedValues","areTokenArraysEqual","error","Error","Log","message","String","normalizeTokenArray","tokenArray","flatMap","tokenItem","selected","oldTokenArray","newTokenArray","normalizedFirst","localeCompare","normalizedSecond","every","index","secondItem","invokePopupCloseHandler","BaseFactory"],"sources":["./ValueHelpPreviewFactory.ts"],"sourcesContent":["import Log from \"sap/base/Log\";\nimport deepClone from \"sap/base/util/deepClone\";\nimport type { EnhanceWithUI5 } from \"sap/fe/base/ClassSupport\";\nimport { BaseFactory } from \"sap/fe/controls/easyFilter/innerControls/BaseFactory\";\nimport Utils from \"sap/fe/controls/easyFilter/utils\";\nimport List from \"sap/m/List\";\nimport type { ListBase$DeleteEvent } from \"sap/m/ListBase\";\nimport type Popover from \"sap/m/Popover\";\nimport StandardListItem from \"sap/m/StandardListItem\";\nimport { ListMode, ListSeparators } from \"sap/m/library\";\nimport CustomData from \"sap/ui/core/CustomData\";\nimport type EasyFilterBarContainer from \"../EasyFilterBarContainer\";\nimport type {\n\tBetweenSelectedValues,\n\tCodeListType,\n\tTokenDefinition,\n\tTokenSelectedValuesDefinition,\n\tTokenType,\n\tValueHelpBetweenSelectedValues,\n\tValueHelpSelectedValuesDefinition\n} from \"../EasyFilterBarContainer\";\nimport type EasyFilterToken from \"../Token\";\ntype NormalizedPair = {\n\toperator: string;\n\tvalue: string;\n};\n\nclass ValueHelpPreviewFactory extends BaseFactory<List> {\n\tconstructor(EFB: EnhanceWithUI5<EasyFilterBarContainer>, token: EnhanceWithUI5<EasyFilterToken>) {\n\t\tsuper(EFB, token);\n\t\tthis.setControl(\n\t\t\tnew List({\n\t\t\t\tdelete: this.onDelete.bind(this),\n\t\t\t\tmode: ListMode.Delete,\n\t\t\t\tshowSeparators: ListSeparators.None\n\t\t\t})\n\t\t);\n\t}\n\n\tsetItems(\n\t\titems: ValueHelpSelectedValuesDefinition[] | TokenSelectedValuesDefinition[],\n\t\ttokenType: TokenType,\n\t\tisDateTimeOffset: boolean\n\t): void {\n\t\tif (Utils.areItemsSame(items, this.items as ValueHelpSelectedValuesDefinition[])) {\n\t\t\treturn;\n\t\t}\n\t\tthis.items = items;\n\t\tconst list = this.getControl();\n\t\tlist?.destroyAggregation(\"items\");\n\t\titems.forEach((item, index1) => {\n\t\t\tconst { operator, selectedValues } = item;\n\t\t\tlet title = \"\";\n\t\t\tif (tokenType === \"ValueHelp\") {\n\t\t\t\tif (Utils.isBetweenSelectedValues(operator)) {\n\t\t\t\t\ttitle = Utils.mapOperatorForBetweenOperator(\n\t\t\t\t\t\toperator,\n\t\t\t\t\t\tselectedValues as ValueHelpBetweenSelectedValues,\n\t\t\t\t\t\ttokenType,\n\t\t\t\t\t\tisDateTimeOffset\n\t\t\t\t\t);\n\t\t\t\t\tthis.insertItem(list as List, title, [index1]);\n\t\t\t\t} else {\n\t\t\t\t\tselectedValues.forEach((selectedValue, index2) => {\n\t\t\t\t\t\ttitle = Utils.mapOperatorForValueHelp(operator, selectedValue as CodeListType, tokenType, isDateTimeOffset);\n\t\t\t\t\t\tthis.insertItem(list as List, title, [index1, index2]);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (Utils.isBetweenSelectedValues(operator)) {\n\t\t\t\t\ttitle = Utils.mapOperatorForBetweenOperator(\n\t\t\t\t\t\toperator,\n\t\t\t\t\t\tselectedValues as BetweenSelectedValues,\n\t\t\t\t\t\ttokenType,\n\t\t\t\t\t\tisDateTimeOffset\n\t\t\t\t\t);\n\t\t\t\t\t//In this case, we don't need t to store index2, because we know that LLM or VHD always gives you only 2 values in return\n\t\t\t\t\tthis.insertItem(list as List, title, [index1]);\n\t\t\t\t} else {\n\t\t\t\t\tselectedValues.forEach((selectedValue, index2) => {\n\t\t\t\t\t\ttitle = Utils.mapOperator(operator, selectedValue as string | boolean | number | Date, tokenType, isDateTimeOffset);\n\t\t\t\t\t\t//We need to store index2 to find out which item has been removed inside the array\n\t\t\t\t\t\tthis.insertItem(list as List, title, [index1, index2]);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tinsertItem(list: List, title: string, indexPositions: number[]): void {\n\t\tlist?.addItem(\n\t\t\tnew StandardListItem({\n\t\t\t\ttitle,\n\t\t\t\tcustomData: new CustomData({\n\t\t\t\t\tkey: \"arrayIndex\",\n\t\t\t\t\tvalue: indexPositions\n\t\t\t\t})\n\t\t\t})\n\t\t);\n\t}\n\n\tonDelete(event: ListBase$DeleteEvent): void {\n\t\tconst popover = this.getToken()?.getCustomDataValue(\"popover\") as Popover;\n\t\tevent.getParameter(\"listItem\")?.setVisible(false);\n\t\tpopover.focus();\n\t}\n\n\tnormalizeString(str: string): string {\n\t\tconst regex = /^(>=|<=|!=|>|<)+/;\n\t\treturn str.replace(regex, \"\");\n\t}\n\n\tinvokeOkButtonHandler(): void {\n\t\tconst popover = this.getToken()?.getCustomDataValue(\"popover\") as Popover;\n\t\tconst token = this.getToken();\n\t\tconst easyFilterBarContainer = this.getEasyFilter() as EasyFilterBarContainer;\n\t\tconst items = token?.getItems()?.map((item) => ({\n\t\t\toperator: JSON.parse(JSON.stringify(item.operator)), // Deep copy of operator\n\t\t\tselectedValues: deepClone(item.selectedValues) // Deep copy of selectedValues, if its a complex object\n\t\t}));\n\t\tconst indicesToBeRemoved: number[][] = [];\n\t\tthis.getControl()\n\t\t\t?.getItems()\n\t\t\t.forEach((listItem) => {\n\t\t\t\t//If the item is hidden that means it should be removed completely\n\t\t\t\tif (!listItem.getVisible()) {\n\t\t\t\t\tconst [index1 = Infinity, index2 = Infinity] =\n\t\t\t\t\t\t(listItem\n\t\t\t\t\t\t\t?.getCustomData()\n\t\t\t\t\t\t\t?.find((data) => data?.getKey() === \"arrayIndex\")\n\t\t\t\t\t\t\t?.getValue() as number[]) ?? [];\n\t\t\t\t\tif (index1 === Infinity || !items) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tindicesToBeRemoved.push([index1, index2]);\n\t\t\t\t}\n\t\t\t});\n\n\t\t/*\n\t\tWithout sorting in descending order:\n\n\t\tRemoving an object would shift all subsequent indices, potentially causing incorrect removals or skips.\n\t\tRemoving values from selectedValues could shift other values, resulting in missed or unintended removals.\n\t\tThis approach ensures that each removal operates on stable, correct indices.\n\n\t\tThis is the reason why we have added valueIndex to infinity\n\t\tInfinity is greater than any valid index, so sorting in descending order will naturally place entries with valueIndex = Infinity at the top for each objIndex.\n\t\tThis way, we can process the complete removal of an object before handling any individual selectedValues removals within that object, preventing unwanted shifts.\n\t\t */\n\t\tindicesToBeRemoved.sort((a, b) => b[0] - a[0] || b[1] - a[1]);\n\n\t\tindicesToBeRemoved.forEach(([objIndex, valueIndex]) => {\n\t\t\tif (items) {\n\t\t\t\t//If valueIndex is infinity, then it means it should be a between operator scenario, so remove the total object only\n\t\t\t\tif (valueIndex === Infinity) {\n\t\t\t\t\titems.splice(objIndex, 1);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\titems[objIndex].selectedValues.splice(valueIndex, 1);\n\t\t\t\t// If the values array becomes empty, remove the whole object\n\t\t\t\tif (items[objIndex].selectedValues.length === 0) {\n\t\t\t\t\titems.splice(objIndex, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\teasyFilterBarContainer.updateTokenArray(\n\t\t\t\"setSelectedValues\",\n\t\t\titems as TokenSelectedValuesDefinition[] | ValueHelpSelectedValuesDefinition[],\n\t\t\ttoken?.getKey() as string\n\t\t);\n\t\tpopover.close();\n\t}\n\n\tasync invokeShowAllButtonHandler(): Promise<void> {\n\t\tconst token = this.getToken();\n\t\tconst { type } = token?.getCustomDataValue(\"TokenInfo\") as TokenDefinition;\n\t\tconst key = token?.getKey() as string;\n\t\tconst oldSelectedValues = token?.getItems() as (TokenSelectedValuesDefinition | ValueHelpSelectedValuesDefinition)[];\n\t\tconst valueHelpPromise = new Promise<TokenSelectedValuesDefinition[]>((resolve, reject) => {\n\t\t\tthis.getEasyFilter()?.fireEvent(\"showValueHelp\", {\n\t\t\t\tkey,\n\t\t\t\tvalues: token?.getItems()?.map((item: TokenSelectedValuesDefinition | ValueHelpSelectedValuesDefinition) => {\n\t\t\t\t\tif (type === \"ValueHelp\") {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\toperator: item.operator,\n\t\t\t\t\t\t\t//Making sure that only the id part is passed\n\t\t\t\t\t\t\tselectedValues: (item as ValueHelpSelectedValuesDefinition).selectedValues.map(\n\t\t\t\t\t\t\t\t(selectedValue) => selectedValue.value\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t};\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn item;\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t\tresolve,\n\t\t\t\treject\n\t\t\t});\n\t\t});\n\n\t\ttry {\n\t\t\tconst newSelectedValues = await valueHelpPromise;\n\t\t\tif (!this.areTokenArraysEqual(oldSelectedValues, newSelectedValues)) {\n\t\t\t\tthis.getEasyFilter()?.updateTokenArray(\"setSelectedValues\", newSelectedValues, key);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tif (error instanceof Error) {\n\t\t\t\tLog.error(\"Error while fetching new tokens\", error.message);\n\t\t\t} else {\n\t\t\t\tLog.error(\"Error while fetching new tokens\", String(error));\n\t\t\t}\n\t\t}\n\t}\n\n\tnormalizeTokenArray(tokenArray: (TokenSelectedValuesDefinition | ValueHelpSelectedValuesDefinition)[]): NormalizedPair[] {\n\t\treturn tokenArray.flatMap((tokenItem) =>\n\t\t\t(tokenItem as ValueHelpSelectedValuesDefinition).selectedValues.map((selected) => ({\n\t\t\t\toperator: tokenItem.operator,\n\t\t\t\tvalue: selected.value\n\t\t\t}))\n\t\t);\n\t}\n\n\tareTokenArraysEqual(\n\t\toldTokenArray: (TokenSelectedValuesDefinition | ValueHelpSelectedValuesDefinition)[],\n\t\tnewTokenArray: (TokenSelectedValuesDefinition | ValueHelpSelectedValuesDefinition)[]\n\t): boolean {\n\t\tconst normalizedFirst = this.normalizeTokenArray(oldTokenArray).sort((a, b) => a.value.localeCompare(b.value));\n\t\tconst normalizedSecond = this.normalizeTokenArray(newTokenArray).sort((a, b) => a.value.localeCompare(b.value));\n\n\t\tif (normalizedFirst.length === normalizedSecond.length) {\n\t\t\treturn normalizedFirst.every((item, index) => {\n\t\t\t\tconst secondItem = normalizedSecond[index];\n\t\t\t\treturn item.operator === secondItem.operator && item.value === secondItem.value;\n\t\t\t});\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tinvokePopupCloseHandler(): void {\n\t\t//Whatever has been deleted, make them appear again so that they can be visible as soon as you click the token again\n\t\tthis.getControl()\n\t\t\t?.getItems()\n\t\t\t.forEach((item) => item.setVisible(true));\n\t}\n}\n\nexport default ValueHelpPreviewFactory;\n"],"mappings":"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","ignoreList":[],"sourceRoot":"easyFilter/innerControls"}},{"offset":{"line":66,"column":0},"map":{"version":3,"names":["resourceBundle","Lib","getResourceBundleFor","dateTimeOffset","DateTimeOffset","areItemsSame","arr1","arr2","length","i","operator","selectedValues","every","value","index","deepEqual","description","areArraySame","async","areCodeListsSame","arrNew1","getCodeListArray","arrNew2","descriptionNew1","map","data","descriptionNew2","value1","value2","arr","convertDateToString","tokenType","isDateTimeOffset","formattedDateTime","formatValue","DateFormat","getDateInstance","format","getTimeInstance","mapOperator","newValue","convertBoolToString","Date","FilterOperator","GT","LT","GE","LE","EQ","Contains","EndsWith","StartsWith","NE","NotContains","NotEndsWith","NotStartsWith","toString","mapOperatorForValueHelp","mapOperatorForBetweenOperator","values","newValue1","newValue2","BT","isBetweenSelectedValues","NB","getText","isInvalidSingleRange","filterValue","allowed","includes","formatData","tokens","filterValues","filterBarMetadata","setMessageStripForValidatedFilters","visitedMapForMandatoryTokens","nonFilterableTokenLabels","singleRangeTokenLabels","hiddenFilterTokenLabels","filterCriteria","find","field","name","Object","prototype","hasOwnProperty","call","filterable","push","label","hiddenFilter","filterRestriction","type","tokenIndex","findIndex","token","key","keySpecificSelectedValues","EasyFilterUtils","newToken","busy","currentToken","isRequired","messages","nonFilterableTokenLabel","join"],"sources":["./utils.ts"],"sourcesContent":["import type { PrimitiveType } from \"@sap-ux/vocabularies-types/Edm\";\nimport deepEqual from \"sap/base/util/deepEqual\";\nimport Lib from \"sap/ui/core/Lib\";\nimport DateFormat from \"sap/ui/core/format/DateFormat\";\nimport FilterOperator from \"sap/ui/model/FilterOperator\";\nimport DateTimeOffset from \"sap/ui/model/odata/type/DateTimeOffset\";\nimport type { EasyFilterResult, PropertyMetadata } from \"ux/eng/fioriai/reuse/easyfilter/EasyFilter\";\nimport type {\n\tBetweenSelectedValues,\n\tCodeListType,\n\tEasyFilterPropertyMetadata,\n\tTokenDefinition,\n\tTokenSelectedValuesDefinition,\n\tTokenType,\n\tValueHelpBetweenSelectedValues,\n\tValueHelpSelectedValuesDefinition\n} from \"./EasyFilterBarContainer\";\n\ntype codeListType = PropertyMetadata[\"codeList\"];\ntype finalCodeListType = { value: PrimitiveType; description?: string }[];\nconst resourceBundle = Lib.getResourceBundleFor(\"sap.fe.controls\")!;\nconst dateTimeOffset = new DateTimeOffset();\n\nfunction areItemsSame(\n\tarr1: readonly TokenSelectedValuesDefinition[] | ValueHelpSelectedValuesDefinition[],\n\tarr2: readonly TokenSelectedValuesDefinition[] | ValueHelpSelectedValuesDefinition[]\n): boolean {\n\tif (arr1.length !== arr2.length) {\n\t\treturn false;\n\t}\n\t// Compare elements of both arrays\n\tfor (let i = 0; i < arr1.length; i++) {\n\t\tif (\n\t\t\tarr1[i].operator !== arr2[i].operator ||\n\t\t\t!arr1[i].selectedValues.every(\n\t\t\t\t(value, index) =>\n\t\t\t\t\tvalue === arr2[i].selectedValues[index] ||\n\t\t\t\t\t(typeof value === \"object\" &&\n\t\t\t\t\t\tdeepEqual((value as CodeListType).value, (arr2[i].selectedValues[index] as CodeListType).value) &&\n\t\t\t\t\t\t(value as CodeListType).description === (arr2[i].selectedValues[index] as CodeListType).description)\n\t\t\t)\n\t\t) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true; // Arrays are the same\n}\n\nfunction areArraySame(arr1: readonly unknown[], arr2: readonly unknown[]): boolean {\n\tif (arr1.length !== arr2.length) {\n\t\treturn false;\n\t}\n\t// Compare elements of both arrays\n\tfor (let i = 0; i < arr1.length; i++) {\n\t\tif (arr1[i] !== arr2[i]) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true; // Arrays are the same\n}\n\nasync function areCodeListsSame(arr1: codeListType, arr2: codeListType): Promise<boolean> {\n\tconst arrNew1: finalCodeListType | undefined = await getCodeListArray(arr1);\n\tconst arrNew2: finalCodeListType | undefined = await getCodeListArray(arr2);\n\tconst descriptionNew1 = arrNew1?.map((data) => data.description);\n\tconst descriptionNew2 = arrNew2?.map((data) => data.description);\n\n\tconst value1 = arrNew1?.map((data) => data.value);\n\tconst value2 = arrNew2?.map((data) => data.value);\n\tif (!descriptionNew1 || !descriptionNew2) {\n\t\treturn false;\n\t}\n\treturn areArraySame(descriptionNew1, descriptionNew2) && areArraySame(value1 as PrimitiveType, value2 as PrimitiveType);\n}\n\nasync function getCodeListArray(arr: codeListType): Promise<finalCodeListType | undefined> {\n\tif (typeof arr === \"function\") {\n\t\treturn arr();\n\t}\n\treturn arr;\n}\n\nfunction convertDateToString(value: Date, tokenType: TokenType, isDateTimeOffset: boolean): string {\n\tlet formattedDateTime = \"\";\n\tif (isDateTimeOffset) {\n\t\treturn dateTimeOffset.formatValue(value, \"string\") as string;\n\t}\n\tswitch (tokenType) {\n\t\tcase \"Calendar\":\n\t\t\tformattedDateTime = DateFormat.getDateInstance().format(value);\n\t\t\tbreak;\n\t\tcase \"Time\":\n\t\t\tformattedDateTime = DateFormat.getTimeInstance().format(value);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t}\n\treturn formattedDateTime;\n}\n\n/**\n * Create a string representation of the operator and value.\n * @param operator The operator to represent\n * @param value The value to represent\n * @param tokenType The token's type\n * @param isDateTimeOffset Checks if the data type is of DateTimeOffset\n * @returns The string representation of the operator and value\n */\nfunction mapOperator(\n\toperator: FilterOperator,\n\tvalue: string | number | boolean | Date,\n\ttokenType: TokenType,\n\tisDateTimeOffset: boolean\n): string {\n\tlet newValue: number | string = \"\";\n\tif (typeof value === \"boolean\") {\n\t\tnewValue = convertBoolToString(value);\n\t} else if (value instanceof Date) {\n\t\tnewValue = convertDateToString(value, tokenType, isDateTimeOffset);\n\t} else {\n\t\tnewValue = value;\n\t}\n\n\tswitch (operator) {\n\t\tcase FilterOperator.GT:\n\t\t\treturn `> ${newValue}`;\n\t\tcase FilterOperator.LT:\n\t\t\treturn `< ${newValue}`;\n\t\tcase FilterOperator.GE:\n\t\t\treturn `>= ${newValue}`;\n\t\tcase FilterOperator.LE:\n\t\t\treturn `<= ${newValue}`;\n\t\tcase FilterOperator.EQ:\n\t\t\treturn `${newValue}`;\n\t\tcase FilterOperator.Contains:\n\t\t\treturn `*${newValue}*`;\n\t\tcase FilterOperator.EndsWith:\n\t\t\treturn `*${newValue}`;\n\t\tcase FilterOperator.StartsWith:\n\t\t\treturn `${newValue}*`;\n\t\tcase FilterOperator.NE:\n\t\t\treturn `!=(${newValue})`;\n\t\tcase FilterOperator.NotContains:\n\t\t\treturn `!(*${newValue}*)`;\n\t\tcase FilterOperator.NotEndsWith:\n\t\t\treturn `!(*${newValue})`;\n\t\tcase FilterOperator.NotStartsWith:\n\t\t\treturn `!(${newValue}*)`;\n\t\tdefault:\n\t\t\treturn newValue?.toString();\n\t}\n}\n\nfunction mapOperatorForValueHelp(operator: FilterOperator, value: CodeListType, tokenType: TokenType, isDateTimeOffset: boolean): string {\n\treturn mapOperator(operator, value.description, tokenType, isDateTimeOffset);\n}\n\nfunction mapOperatorForBetweenOperator(\n\toperator: FilterOperator,\n\tvalues: BetweenSelectedValues | ValueHelpBetweenSelectedValues,\n\ttokenType: TokenType,\n\tisDateTimeOffset: boolean\n): string {\n\tlet newValue1: string | number | Date = \"\";\n\tlet newValue2: string | number | Date = \"\";\n\tif (typeof values[0] === \"boolean\") {\n\t\tnewValue1 = convertBoolToString(values[0]);\n\t} else if (values[0] instanceof Date) {\n\t\tnewValue1 = convertDateToString(values[0], tokenType, isDateTimeOffset);\n\t} else if (typeof values[0] === \"object\") {\n\t\tnewValue1 = values[0].description as string;\n\t} else {\n\t\tnewValue1 = values[0];\n\t}\n\n\tif (typeof values[1] === \"boolean\") {\n\t\tnewValue2 = convertBoolToString(values[1]);\n\t} else if (values[1] instanceof Date) {\n\t\tnewValue2 = convertDateToString(values[1], tokenType, isDateTimeOffset);\n\t} else if (typeof values[0] === \"object\") {\n\t\tnewValue2 = values[1].description as string;\n\t} else {\n\t\tnewValue2 = values[1];\n\t}\n\tif (operator === FilterOperator.BT) {\n\t\treturn `${newValue1}...${newValue2}`;\n\t} else {\n\t\treturn `!(${newValue1}...${newValue2})`;\n\t}\n}\n\nfunction isBetweenSelectedValues(operator: FilterOperator): boolean {\n\treturn operator === FilterOperator.BT || operator === FilterOperator.NB;\n}\n\nfunction convertBoolToString(value: boolean): string {\n\treturn value\n\t\t? resourceBundle.getText(\"M_EASY_FILTER_SELECTED_VALUES_TRUE\")\n\t\t: resourceBundle.getText(\"M_EASY_FILTER_SELECTED_VALUES_FALSE\");\n}\n\n//This function returns true if the filter is not a valid \"SingleRange\" (e.g., wrong operator or too many values), and false if it is valid.\nfunction isInvalidSingleRange(filterValue: { operator: FilterOperator; values: (string | number | Date | boolean)[] }): boolean {\n\tconst allowed = [FilterOperator.EQ, FilterOperator.LE, FilterOperator.LT, FilterOperator.GE, FilterOperator.GT, FilterOperator.BT];\n\n\t// \tfilterValue.operator !== FilterOperator.BT ensures BT is always valid.\n\t// !allowed.includes() blocks unsupported operators.\n\t// filterValue.values.length >= 2 blocks multiple values for single-range filters.\n\t// Together, this returns true when the filter is not a valid single-range.\n\treturn filterValue.operator !== FilterOperator.BT && (!allowed.includes(filterValue.operator) || filterValue.values.length >= 2);\n}\n\nfunction formatData(\n\ttokens: TokenDefinition[],\n\tfilterValues: EasyFilterResult[\"filter\"],\n\tfilterBarMetadata: EasyFilterPropertyMetadata[],\n\tsetMessageStripForValidatedFilters: (msg: string) => void\n): void {\n\tif (filterValues) {\n\t\tconst visitedMapForMandatoryTokens: Record<string, boolean> = {};\n\t\tconst nonFilterableTokenLabels: string[] = [];\n\t\tconst singleRangeTokenLabels: string[] = [];\n\t\tconst hiddenFilterTokenLabels: string[] = [];\n\n\t\tfor (const filterValue of filterValues) {\n\t\t\tconst filterCriteria = filterBarMetadata.find((field) => field.name === filterValue.name);\n\t\t\tif (filterCriteria) {\n\t\t\t\t// Only block if filterable is false\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(filterCriteria, \"filterable\") && !filterCriteria?.filterable) {\n\t\t\t\t\tnonFilterableTokenLabels.push(filterCriteria.label || filterCriteria.name);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t// Only block if hiddenFilter is true\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(filterCriteria, \"hiddenFilter\") && filterCriteria?.hiddenFilter) {\n\t\t\t\t\thiddenFilterTokenLabels.push(filterCriteria.label || filterCriteria.name);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t// Only apply SingleRange logic if filterRestriction is set to SingleRange\n\t\t\t\tif (filterCriteria?.filterRestriction === \"SingleRange\" && isInvalidSingleRange(filterValue)) {\n\t\t\t\t\tsingleRangeTokenLabels.push(filterCriteria.label || filterCriteria.name);\n\t\t\t\t\tfilterValue.values = []; // Reset values to avoid adding invalid token values\n\t\t\t\t}\n\n\t\t\t\tconst { type } = filterCriteria;\n\t\t\t\tconst tokenIndex = tokens.findIndex((token) => token.key === filterValue.name);\n\t\t\t\tconst { operator, values } = filterValue;\n\t\t\t\tlet keySpecificSelectedValues: TokenSelectedValuesDefinition;\n\t\t\t\tif (EasyFilterUtils.isBetweenSelectedValues(operator)) {\n\t\t\t\t\tkeySpecificSelectedValues = {\n\t\t\t\t\t\toperator,\n\t\t\t\t\t\tselectedValues: values as BetweenSelectedValues\n\t\t\t\t\t};\n\t\t\t\t} else {\n\t\t\t\t\tkeySpecificSelectedValues = {\n\t\t\t\t\t\toperator: operator as Exclude<FilterOperator, FilterOperator.BT | FilterOperator.NB>,\n\t\t\t\t\t\tselectedValues: values as string[] | Date[] | number[] | boolean[]\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tif (tokenIndex === -1) {\n\t\t\t\t\t// Add new token if it doesn't exist\n\t\t\t\t\tconst newToken: TokenDefinition = {\n\t\t\t\t\t\tkey: filterValue.name,\n\t\t\t\t\t\tlabel: filterCriteria.label as string,\n\t\t\t\t\t\tkeySpecificSelectedValues: [keySpecificSelectedValues],\n\t\t\t\t\t\ttype: type as Exclude<TokenType, \"ValueHelp\">,\n\t\t\t\t\t\tbusy: type === \"ValueHelp\" ? true : false\n\t\t\t\t\t};\n\t\t\t\t\ttokens.push(newToken);\n\t\t\t\t} else {\n\t\t\t\t\t// Update existing token\n\t\t\t\t\tconst currentToken = tokens[tokenIndex];\n\t\t\t\t\t//If its default value , override it\n\t\t\t\t\tif ((currentToken.isRequired ?? false) && !visitedMapForMandatoryTokens[currentToken.key]) {\n\t\t\t\t\t\tcurrentToken.keySpecificSelectedValues = [keySpecificSelectedValues];\n\t\t\t\t\t\tvisitedMapForMandatoryTokens[currentToken.key] = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t(currentToken.keySpecificSelectedValues as TokenSelectedValuesDefinition[]).push(keySpecificSelectedValues);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (nonFilterableTokenLabels.length > 0 || singleRangeTokenLabels.length > 0 || hiddenFilterTokenLabels.length > 0) {\n\t\t\tconst messages: string[] = [];\n\t\t\tif (nonFilterableTokenLabels.length > 0) {\n\t\t\t\tconst nonFilterableTokenLabel = `<strong>${nonFilterableTokenLabels.join(\", \")}</strong>`;\n\t\t\t\tmessages.push(resourceBundle.getText(\"M_EASY_FILTER_NON_FILTERABLE\", [nonFilterableTokenLabel]));\n\t\t\t}\n\t\t\tif (hiddenFilterTokenLabels.length > 0) {\n\t\t\t\tconst label = `<strong>${hiddenFilterTokenLabels.join(\", \")}</strong>`;\n\t\t\t\tmessages.push(resourceBundle.getText(\"M_EASY_FILTER_HIDDEN_FILTER\", [label]));\n\t\t\t}\n\t\t\tif (singleRangeTokenLabels.length > 0) {\n\t\t\t\tconst label = `<strong>${singleRangeTokenLabels.join(\", \")}</strong>`;\n\t\t\t\tmessages.push(resourceBundle.getText(\"M_EASY_FILTER_SINGLE_RANGE\", [label]));\n\t\t\t}\n\t\t\tsetMessageStripForValidatedFilters(messages.join(\"<br>\"));\n\t\t}\n\t}\n}\n\nconst EasyFilterUtils = {\n\tareItemsSame,\n\tareCodeListsSame,\n\tgetCodeListArray,\n\tareArraySame,\n\tmapOperator,\n\tmapOperatorForBetweenOperator,\n\tisBetweenSelectedValues,\n\tformatData,\n\tmapOperatorForValueHelp\n};\n\nexport default EasyFilterUtils;\n"],"mappings":"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","ignoreList":[],"sourceRoot":"easyFilter"}},{"offset":{"line":71,"column":0},"map":{"version":3,"names":["InlineEditIndicator","_dec","defineUI5Class","_dec2","aggregation","type","_dec3","_dec4","_dec5","property","_dec6","event","_dec7","_class","_class2","_Control","idOrSettings","settings","_this","call","this","_initializerDefineProperty","_descriptor","_descriptor2","_descriptor3","_descriptor4","_descriptor5","_descriptor6","resourceBundle","Lib","getResourceBundleFor","editButton","_jsx","Button","icon","ButtonType","Transparent","press","_ev","fireEvent","tooltip","getText","saveButton","fieldGroupIds","discardButton","_exports","_inheritsLoose","_proto","prototype","addEditButtonAriaDescribedBy","ariaDescribedByElement","undefined","addAriaDescribedBy","removeAllEditButtonAriaDescribedBy","removeAllAriaDescribedBy","onmouseout","mouseEvent","currentTarget","contains","relatedTarget","onkeydown","e","key","shiftKey","preventDefault","setWidth","width","$","css","getDiscardButton","getSaveButton","getEditButton","render","rm","control","jsx","renderUsingRenderManager","classes","editMode","push","class","join","ref","children","_jsxs","Control","_applyDecoratedDescriptor","configurable","enumerable","writable","initializer"],"sources":["./InlineEditIndicator.tsx"],"sourcesContent":["import type ResourceBundle from \"sap/base/i18n/ResourceBundle\";\nimport type { PropertiesOf } from \"sap/fe/base/ClassSupport\";\nimport { aggregation, defineUI5Class, event, property } from \"sap/fe/base/ClassSupport\";\nimport jsx from \"sap/fe/base/jsx-runtime/jsx\";\nimport Button from \"sap/m/Button\";\nimport { ButtonType } from \"sap/m/library\";\nimport Control from \"sap/ui/core/Control\";\nimport Lib from \"sap/ui/core/Lib\";\nimport type RenderManager from \"sap/ui/core/RenderManager\";\nimport type { EventHandler } from \"types/extension_types\";\n\n/**\n * Control to indicate the possibility to edit an element inline, and to save or discard the changes after editing.\n */\n@defineUI5Class(\"sap.fe.controls.inlineEdit.InlineEditIndicator\")\nexport default class InlineEditIndicator extends Control {\n\t@aggregation({ type: \"sap.m.Button\" })\n\tprivate editButton: Button;\n\n\t@aggregation({ type: \"sap.m.Button\" })\n\tprivate saveButton: Button;\n\n\t@aggregation({ type: \"sap.m.Button\" })\n\tprivate discardButton: Button;\n\n\t@property({ type: \"boolean\" })\n\teditMode = false;\n\n\t@event()\n\tpressEdit?: EventHandler;\n\n\t@event()\n\tmouseout?: EventHandler;\n\n\tprivate width?: number;\n\n\tprivate resourceBundle?: ResourceBundle;\n\n\tconstructor(idOrSettings?: PropertiesOf<InlineEditIndicator> | string, settings?: PropertiesOf<InlineEditIndicator>) {\n\t\tsuper(idOrSettings as string | undefined, settings);\n\t\tthis.resourceBundle = Lib.getResourceBundleFor(\"sap.fe.controls\")!;\n\t\tthis.editButton = (\n\t\t\t<Button\n\t\t\t\ticon=\"sap-icon://edit\"\n\t\t\t\ttype={ButtonType.Transparent}\n\t\t\t\tpress={(_ev): void => {\n\t\t\t\t\tthis.fireEvent(\"pressEdit\");\n\t\t\t\t}}\n\t\t\t\ttooltip={this.resourceBundle.getText(\"M_INLINE_EDIT_TOOLTIP_EDIT\")}\n\t\t\t/>\n\t\t);\n\n\t\tthis.saveButton = (\n\t\t\t<Button\n\t\t\t\ticon=\"sap-icon://accept\"\n\t\t\t\ttype={ButtonType.Transparent}\n\t\t\t\tjsx:command=\"cmd:Save|press\"\n\t\t\t\tfieldGroupIds=\"InlineEdit\"\n\t\t\t\ttooltip={this.resourceBundle.getText(\"M_INLINE_EDIT_TOOLTIP_SAVE\")}\n\t\t\t/>\n\t\t);\n\n\t\tthis.discardButton = (\n\t\t\t<Button\n\t\t\t\ticon=\"sap-icon://decline\"\n\t\t\t\ttype={ButtonType.Transparent}\n\t\t\t\tjsx:command=\"cmd:Cancel|press\"\n\t\t\t\ttooltip={this.resourceBundle.getText(\"M_INLINE_EDIT_TOOLTIP_CANCEL\")}\n\t\t\t\tfieldGroupIds=\"InlineEdit\"\n\t\t\t/>\n\t\t);\n\t\t//IntervalTrigger.addListener(this.onAfterRendering, this)\n\t}\n\n\t/*\n\t * Add aria-describedBy element to the edit button\n\t * @param ariaDescribedByElement - Element to be added as ariaDescribedBy\n\t * */\n\taddEditButtonAriaDescribedBy(ariaDescribedByElement: string | Control): void {\n\t\tif (ariaDescribedByElement !== undefined && ariaDescribedByElement !== null && ariaDescribedByElement !== \"\") {\n\t\t\tthis.editButton.addAriaDescribedBy(ariaDescribedByElement);\n\t\t}\n\t}\n\n\t/*\n\t * Remove all aria-describedBy elements from the edit button\n\t * */\n\tremoveAllEditButtonAriaDescribedBy(): void {\n\t\tthis.editButton.removeAllAriaDescribedBy();\n\t}\n\n\tonmouseout(mouseEvent: MouseEvent): void {\n\t\tif (!(mouseEvent.currentTarget as Element)?.contains(mouseEvent.relatedTarget as Element)) {\n\t\t\tthis.fireEvent(\"mouseout\", { relatedTarget: mouseEvent.relatedTarget });\n\t\t}\n\t}\n\n\tonkeydown(e: KeyboardEvent): void {\n\t\tif (e.key === \"Tab\" && !e.shiftKey) {\n\t\t\te.preventDefault();\n\t\t\tthis.fireEvent(\"pressTab\");\n\t\t} else if (e.key === \"Tab\" && e.shiftKey) {\n\t\t\te.preventDefault();\n\t\t\tthis.fireEvent(\"pressShiftTab\");\n\t\t}\n\t}\n\n\tsetWidth(width: number): void {\n\t\tthis.width = width;\n\t\tthis.$().css(\"width\", `${width}px`);\n\t}\n\n\tgetDiscardButton(): Button {\n\t\treturn this.discardButton;\n\t}\n\n\tgetSaveButton(): Button {\n\t\treturn this.saveButton;\n\t}\n\n\tgetEditButton(): Button {\n\t\treturn this.editButton;\n\t}\n\n\tstatic render(rm: RenderManager, control: InlineEditIndicator): void {\n\t\tjsx.renderUsingRenderManager(rm, control, function () {\n\t\t\tconst classes = [\"sapFeInlineEditIndicator\"];\n\t\t\tif (control.editMode) {\n\t\t\t\tclasses.push(\"sapFeInlineEditIndicatorEditMode\");\n\t\t\t}\n\t\t\treturn (\n\t\t\t\t<span class={classes.join(\" \")} ref={control}>\n\t\t\t\t\t{!control.editMode ? (\n\t\t\t\t\t\t<span class={\"sapFeInlineEditIndicatorIcon\"}>{control.editButton}</span>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<span class={\"sapFeInlineEditIndicatorAcceptDeclineIcon sapFeInlineEditIndicatorIcon\"}>\n\t\t\t\t\t\t\t{control.saveButton}\n\t\t\t\t\t\t\t{control.discardButton}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t)}\n\t\t\t\t</span>\n\t\t\t);\n\t\t});\n\t}\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":"inlineEdit"}},{"offset":{"line":76,"column":0},"map":{"version":3,"names":["sap","ui","define","_library","ShortcutExplanationProvider","_library2","Library","_library3","_exports","feControlsNamespace","thisLib","init","name","apiVersion","dependencies","types","interfaces","controls","elements","version","noLibraryCSS","getInstance"],"sources":["library-dbg.js"],"mappings":"AAAA;;;;AAIAA,IAAIC,GAAGC,qCAAO,CAAC,sBAAuB,wDAAyD,gBAAiB,kBAAmB,0BAA2B,SAAUC,EAAUC,EAA6BC,EAAWC,EAASC,GACjO,aAEA,IAAIC,EAAW,CAAC,EAMhB,MAAMC,EAAsB,kBAC5BD,EAASC,oBAAsBA,EAC/B,MAAMC,EAAUJ,EAAQK,KAAK,CAC3BC,KAAM,kBACNC,WAAY,EACZC,aAAc,CAAC,cAAe,cAAe,QAAS,kBACtDC,MAAO,GACPC,WAAY,GACZC,SAAU,GACVC,SAAU,GAEVC,QAAS,UACTC,aAAc,QAGhBhB,EAA4BiB,cAC5B,OAAOX,CACT,EAAG","ignoreList":[],"sourceRoot":""}},{"offset":{"line":81,"column":0},"map":{"version":3,"names":["ShortcutExplanationProvider","_dec","defineUI5Class","_class","_ShortcutExplanationProvider","_ManagedObject","_this","_len","arguments","length","args","Array","_key","call","this","_popupIdx","_exports","_inheritsLoose","_proto","prototype","getShellDialogContent","windowWidth","left","window","screenLeft","outerWidth","screen","availWidth","theme","Theming","getTheme","_sanitizeTheme","url","sap","ui","require","toUrl","localOrigin","location","protocol","host","params","encodeURL","myWin","open","screenTop","handleMessageReceived","messageEvent","origin","messageData","data","service","messagePort","ports","postMessage","startsWith","removeEventListener","opener","e","Log","debug","Error","message","String","setTimeout","addEventListener","id","onunload","close","computedStyles","getComputedStyle","document","documentElement","getPropertyValue","themeMetadata","themeMatch","JSON","parse","Extends","info","getInstance","async","shellContainer","resolveCreation","instance","instancePromise","Promise","resolve","extensionService","getServiceAsync","shellHistoryProvider","registerUserAction","error","undefined","shellExtensionService","resourceBundle","Lib","getResourceBundleFor","shellHistoryDialog","isDialogAdded","userAction","createUserAction","text","getText","icon","IconPool","getIconURI","press","controlType","showForAllApps","err","ManagedObject"],"sources":["./ShortcutExplanationProvider.tsx"],"sourcesContent":["import Log from \"sap/base/Log\";\nimport encodeURL from \"sap/base/security/encodeURL\";\nimport { defineUI5Class } from \"sap/fe/base/ClassSupport\";\nimport ManagedObject from \"sap/ui/base/ManagedObject\";\nimport IconPool from \"sap/ui/core/IconPool\";\nimport Lib from \"sap/ui/core/Lib\";\nimport Theming from \"sap/ui/core/Theming\";\nimport type Container from \"sap/ushell/Container\";\nimport type Extension from \"sap/ushell/services/Extension\";\n\n/**\n * Provides a dialog to explain the shortcuts to the user.\n * This dialog will be registered in the shell user menu and will open as an independent window.\n */\n@defineUI5Class(\"sap.fe.controls.shortcuts.ShortcutExplanationProvider\")\nexport default class ShortcutExplanationProvider extends ManagedObject {\n\tprivate _popupIdx = 0;\n\n\tgetShellDialogContent(): void {\n\t\t// Position to top right of the main window if possible\n\t\tconst windowWidth = 620;\n\t\tlet left = window.screenLeft + window.outerWidth;\n\t\tif (left + windowWidth > window.screen.availWidth) {\n\t\t\tleft = window.screen.availWidth - windowWidth;\n\t\t}\n\t\tlet theme = Theming.getTheme();\n\t\ttheme = this._sanitizeTheme(theme);\n\t\tconst url = sap.ui.require.toUrl(\"sap/fe/controls/shortcuts/popup/index.html\");\n\t\tconst localOrigin = window.location.protocol + \"//\" + window.location.host;\n\t\t// We pass the theme and the origin to the popup so that it can communicate safely with the parent\n\t\tconst params = \"?sap-ui-xx-shortcut-origin=\" + encodeURL(localOrigin) + \"&sap-ui-theme=\" + theme;\n\t\tconst myWin = window.open(\n\t\t\turl + params,\n\t\t\t\"_blank\",\n\t\t\t`popup,toolbar=no,menubar=no,scrollbars=no,location=no,width=${windowWidth},height=550,top=${window.screenTop},left=${left}`\n\t\t);\n\t\tif (myWin) {\n\t\t\tconst handleMessageReceived = (messageEvent: MessageEvent): void => {\n\t\t\t\tif (localOrigin === messageEvent.origin) {\n\t\t\t\t\tconst messageData = messageEvent?.data;\n\t\t\t\t\tif (messageData.service === \"sap.ui.interaction.MessagePortReady\") {\n\t\t\t\t\t\tconst messagePort = messageEvent.ports[0]; // Remember the port\n\t\t\t\t\t\tmyWin.postMessage({ service: \"sap.ui.interaction.MessagePortReady\" }, url.startsWith(\"/\") ? localOrigin : url, [\n\t\t\t\t\t\t\tmessagePort\n\t\t\t\t\t\t]);\n\t\t\t\t\t\twindow.removeEventListener(\"message\", handleMessageReceived);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\ttry {\n\t\t\t\tmyWin.opener = null;\n\t\t\t} catch (e) {\n\t\t\t\t// This might fail when there is CORS involved anyway and we can't access the opener anyway\n\t\t\t\tLog.debug(\"Cannot set opener to null\", e instanceof Error ? e.message : String(e));\n\t\t\t}\n\n\t\t\tsetTimeout((): void => {\n\t\t\t\twindow.addEventListener(\"message\", handleMessageReceived);\n\t\t\t\twindow.postMessage(\n\t\t\t\t\t{ id: \"sap.fe.interaction.Popup\" + this._popupIdx++, service: \"sap.ui.interaction.RequestMessagePort\" },\n\t\t\t\t\tlocalOrigin\n\t\t\t\t);\n\t\t\t}, 1500); // give a bit of time for the popup to be ready\n\t\t\t// We can't rely on the onload of the popup because it is not always availble in CORS scenarios\n\t\t\twindow.onunload = function (): void {\n\t\t\t\tmyWin.close();\n\t\t\t};\n\t\t}\n\t}\n\n\t/**\n\t * Sanitizes the theme name to ensure it starts with \"sap-\".\n\t * If the theme does not start with \"sap-\", it tries to get the theme from the computed styles.\n\t * If it still does not find a valid theme, it defaults to \"sap_horizon\".\n\t * This is to ensure that the popup always uses a valid theme.\n\t * @param theme The theme name to sanitize\n\t * @returns The sanitized theme name\n\t * @private\n\t */\n\tprivate _sanitizeTheme(theme: string): string {\n\t\tif (!theme.startsWith(\"sap_\")) {\n\t\t\ttry {\n\t\t\t\tconst computedStyles = getComputedStyle(document.documentElement);\n\t\t\t\ttheme = computedStyles.getPropertyValue(\"--sapSapThemeId\");\n\t\t\t\tif (!theme) {\n\t\t\t\t\tconst themeMetadata = computedStyles.getPropertyValue(\"--sapThemeMetaData-UI5-sap-ui-core\");\n\t\t\t\t\tif (themeMetadata) {\n\t\t\t\t\t\tconst themeMatch = JSON.parse(themeMetadata);\n\t\t\t\t\t\tif (themeMatch && themeMatch.Extends && themeMatch.Extends.length > 0) {\n\t\t\t\t\t\t\ttheme = themeMatch.Extends[0];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tLog.info(\"Cannot get theme from computed styles\", e instanceof Error ? e.message : String(e));\n\t\t\t\ttheme = \"sap_horizon\";\n\t\t\t}\n\t\t\tif (!theme || !theme.startsWith(\"sap_\")) {\n\t\t\t\t// Final fallback to sap_horizon\n\t\t\t\ttheme = \"sap_horizon\";\n\t\t\t}\n\t\t}\n\t\treturn theme;\n\t}\n\n\tstatic instancePromise: Promise<ShortcutExplanationProvider | undefined>;\n\n\tstatic instance: ShortcutExplanationProvider | undefined;\n\n\tstatic isDialogAdded = false;\n\n\t/**\n\t * Creates or returns the instance of the ShortcutExplanationProvider.\n\t * This is a singleton to ensure we only have one instance of the dialog.\n\t * @returns The instance of the ShortcutExplanationProvider\n\t */\n\tstatic async getInstance(): Promise<ShortcutExplanationProvider | undefined> {\n\t\t// Test the shell existence and register the extension\n\t\tconst shellContainer = sap.ui.require(\"sap/ushell/Container\") as Container | undefined;\n\t\tlet resolveCreation: Function | undefined;\n\t\ttry {\n\t\t\tif (shellContainer && !this.instance) {\n\t\t\t\tthis.instancePromise = new Promise<ShortcutExplanationProvider | undefined>((resolve) => {\n\t\t\t\t\tresolveCreation = resolve;\n\t\t\t\t});\n\t\t\t\tconst extensionService = (await shellContainer.getServiceAsync(\"Extension\")) as Extension | undefined;\n\t\t\t\tif (extensionService) {\n\t\t\t\t\tconst shellHistoryProvider = await ShortcutExplanationProvider.registerUserAction(extensionService);\n\t\t\t\t\tthis.instance = shellHistoryProvider;\n\t\t\t\t\tresolveCreation!(shellHistoryProvider);\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tLog.error(\"Cannot register extension\", e instanceof Error ? e.message : String(e));\n\t\t\tresolveCreation?.(undefined);\n\t\t}\n\t\treturn this.instancePromise;\n\t}\n\n\t/**\n\t * Adds the user action to the shell, the action will open the dialog with the shortcuts.\n\t * @param shellExtensionService The extension service to add the user action to the shell\n\t * @returns The dialog with the shortcuts\n\t */\n\tstatic async registerUserAction(shellExtensionService: Extension): Promise<ShortcutExplanationProvider | undefined> {\n\t\ttry {\n\t\t\tconst resourceBundle = Lib.getResourceBundleFor(\"sap.fe.controls\")!;\n\n\t\t\tconst shellHistoryDialog = new ShortcutExplanationProvider();\n\t\t\tif (!this.isDialogAdded) {\n\t\t\t\tthis.isDialogAdded = true;\n\t\t\t\tconst userAction = await shellExtensionService.createUserAction(\n\t\t\t\t\t{\n\t\t\t\t\t\ttext: resourceBundle.getText(\"C_SHORTCUT_TITLE\"),\n\t\t\t\t\t\ticon: IconPool.getIconURI(\"keyboard-and-mouse\"),\n\t\t\t\t\t\tpress: (): void => {\n\t\t\t\t\t\t\tshellHistoryDialog.getShellDialogContent();\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tcontrolType: \"sap.m.Button\"\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tuserAction.showForAllApps();\n\t\t\t}\n\t\t\treturn shellHistoryDialog;\n\t\t} catch (err) {\n\t\t\tLog.error(\"Cannot add user action\", err instanceof Error ? err.message : String(err));\n\t\t}\n\t}\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":"shortcuts"}},{"offset":{"line":86,"column":0},"map":{"version":3,"names":["getDocsDetail","docsPath","data","spltiPath","split","result","forEach","path","collapseDuplicate","elements","filterQuery","map","element","label","nodes","filter","node","toLowerCase","includes","some","existingNode","push","Object","entries","_ref","mapKeyToSymbol","key","translatedKey","trim","ShortcutTool","_dec","defineUI5Class","_dec2","defineReference","_dec3","_class","_class2","_BuildingBlockBase","_this","call","this","resourceBundle","Lib","getResourceBundleFor","_initializerDefineProperty","_descriptor","_descriptor2","state","shortcutsTree","originalTree","content","createContent","initialFocus","$searchField","current","addEventDelegate","onAfterRendering","focus","window","messagePort","setupPort","_exports","_inheritsLoose","_proto","prototype","onmessage","onMessageReceived","bind","postMessage","service","e","payload","reverse","interactions","shortcut","$ref","documentationInteraction","description","replaceAll","shortcutKeys","kbd","name","concat","onStateChange","$tree","expandToLevel","onSearch","_e","query","getParameter","isTitleMatch","isNodeMatch","_jsx","Panel","headerText","getText","width","children","SearchField","ref","placeholder","search","Tree","items","model","parameters","arrayNames","noDataText","CustomTreeItem","_jsxs","FlexBox","alignItems","renderType","justifyContent","FormattedText","htmlText","class","direction","id","context","shortcutKey","getObject","shortCutText","raw","translatedShortCutText","translated","translatedShortCutKeys","rawKey","idx","Label","text","length","BuildingBlockBase","_applyDecoratedDescriptor","configurable","enumerable","writable","initializer"],"sources":["./ShortcutTool.tsx"],"sourcesContent":["import type ResourceBundle from \"sap/base/i18n/ResourceBundle\";\nimport BuildingBlockBase from \"sap/fe/base/BuildingBlockBase\";\nimport { defineReference, defineUI5Class } from \"sap/fe/base/ClassSupport\";\nimport type { Ref } from \"sap/fe/base/jsx-runtime/jsx\";\nimport CustomTreeItem from \"sap/m/CustomTreeItem\";\nimport FlexBox from \"sap/m/FlexBox\";\nimport FormattedText from \"sap/m/FormattedText\";\nimport Label from \"sap/m/Label\";\nimport Panel from \"sap/m/Panel\";\nimport type { SearchField$SearchEvent } from \"sap/m/SearchField\";\nimport SearchField from \"sap/m/SearchField\";\nimport Tree from \"sap/m/Tree\";\nimport type Control from \"sap/ui/core/Control\";\nimport Lib from \"sap/ui/core/Lib\";\nimport type Context from \"sap/ui/model/Context\";\n\ntype NamedKeyboardInteraction = {\n\tname: string;\n\tdescription?: string;\n\tkbd: (string | { raw: string; translated: string })[];\n};\ntype DocKeyboardInteraction = {\n\tdescription: string;\n\tkbd: (string | { raw: string; translated: string })[];\n};\n\ntype RefKeyboardInteraction = {\n\t$ref: string;\n};\ntype KeyboardElements = {\n\tclass: string;\n\tid: string;\n\tlabel: string;\n\tinteractions: (NamedKeyboardInteraction | RefKeyboardInteraction)[];\n};\ntype ShortcutElement = { label: string; shortcutKeys: (string | { raw: string; translated: string })[] };\n\nfunction getDocsDetail(docsPath: string, data: object): DocKeyboardInteraction[] | undefined {\n\tconst spltiPath = docsPath.split(\"/\");\n\tlet result = data;\n\tspltiPath.forEach((path) => {\n\t\tresult = result[path as keyof typeof result];\n\t});\n\treturn result as DocKeyboardInteraction[] | undefined;\n}\n\nfunction collapseDuplicate(\n\telements: { label: string; nodes: ShortcutElement[] }[],\n\tfilterQuery: string\n): { label: string; nodes: ShortcutElement[] }[] {\n\tconst map: Record<string, ShortcutElement[]> = {};\n\telements.forEach((element) => {\n\t\tif (!map[element.label]) {\n\t\t\tmap[element.label] = [];\n\t\t}\n\t\telement.nodes\n\t\t\t.filter((node) => {\n\t\t\t\treturn node.label.toLowerCase().includes(filterQuery.toLowerCase());\n\t\t\t})\n\t\t\t.forEach((node) => {\n\t\t\t\tif (!map[element.label].some((existingNode) => existingNode.label === node.label)) {\n\t\t\t\t\tmap[element.label].push(node);\n\t\t\t\t}\n\t\t\t});\n\t});\n\treturn Object.entries(map).map(([label, nodes]) => ({ label, nodes }));\n}\n\n/**\n * Maps a keyboard key to a symbol for display purposes.\n * We need to perform the mapping based on the raw key name but return the translated key for display.\n * @param key The raw key name (e.g., \"ArrowUp\", \"Ctrl\", etc.)\n * @param translatedKey The translated key name in the proper language\n * @returns The symbol to be displayed for the key\n */\nfunction mapKeyToSymbol(key: string, translatedKey: string): string {\n\tswitch (key.trim()) {\n\t\tcase \"ArrowDown\":\n\t\t\treturn \"↓\";\n\t\tcase \"ArrowUp\":\n\t\t\treturn \"↑\";\n\t\tcase \"ArrowLeft\":\n\t\t\treturn \"←\";\n\t\tcase \"ArrowRight\":\n\t\t\treturn \"→\";\n\t\tdefault:\n\t\t\treturn translatedKey;\n\t}\n}\n\ntype ShortcutToolState = {\n\tshortcutsTree: { label: string; nodes: ShortcutElement[] }[];\n\toriginalTree: { label: string; nodes: ShortcutElement[] }[];\n\tinitialFocus: boolean;\n};\n@defineUI5Class(\"sap.fe.controls.shortcuts.popup.ShortcutTool\")\nexport default class ShortcutTool extends BuildingBlockBase<Panel, ShortcutToolState> {\n\tprivate resourceBundle: ResourceBundle = Lib.getResourceBundleFor(\"sap.fe.controls\")!;\n\n\t@defineReference()\n\t$searchField!: Ref<SearchField>;\n\n\t@defineReference()\n\t$tree!: Ref<Tree>;\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state.shortcutsTree = [];\n\t\tthis.state.originalTree = [];\n\n\t\tthis.content = this.createContent();\n\t\tthis.state.initialFocus = true;\n\t\tthis.$searchField.current?.addEventDelegate({\n\t\t\tonAfterRendering: (): void => {\n\t\t\t\tif (this.state.initialFocus) {\n\t\t\t\t\tthis.$searchField.current?.focus();\n\t\t\t\t\tthis.state.initialFocus = false;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tif ((window as { messagePort?: MessagePort }).messagePort) {\n\t\t\tthis.setupPort((window as { messagePort?: MessagePort }).messagePort!);\n\t\t}\n\t}\n\n\tsetupPort(messagePort: MessagePort): void {\n\t\tmessagePort.onmessage = this.onMessageReceived.bind(this);\n\t\t// We send a message to stop the display if it is already running\n\t\t// and then start it again to ensure we have the latest data.\n\t\t// This is to ensure that the popup is always up-to-date with the latest shortcuts\n\t\t// and to avoid any potential issues with the display being already running.\n\t\tmessagePort.postMessage({ service: \"sap.ui.interaction.StopDisplay\" });\n\t\tmessagePort.postMessage({ service: \"sap.ui.interaction.StartDisplay\" });\n\t}\n\n\tonMessageReceived(e: MessageEvent): void {\n\t\tif (e?.data?.service === \"sap.ui.interaction.UpdateDisplay\") {\n\t\t\tconst elements = e.data.payload.elements as KeyboardElements[];\n\t\t\telements.reverse();\n\t\t\tthis.state.originalTree = elements.map((element) => {\n\t\t\t\tconst nodes: ShortcutElement[] = [];\n\t\t\t\telement.interactions.forEach((shortcut) => {\n\t\t\t\t\tif ((shortcut as RefKeyboardInteraction).$ref) {\n\t\t\t\t\t\tconst interactions = getDocsDetail((shortcut as RefKeyboardInteraction).$ref, e.data.payload);\n\t\t\t\t\t\tinteractions?.forEach((documentationInteraction) => {\n\t\t\t\t\t\t\tnodes.push({\n\t\t\t\t\t\t\t\tlabel: documentationInteraction.description.replaceAll(\"<kbd\", \"<strong\").replaceAll(\"</kbd>\", \"</strong>\"),\n\t\t\t\t\t\t\t\tshortcutKeys: documentationInteraction.kbd\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnodes.push({\n\t\t\t\t\t\t\tlabel: ((shortcut as NamedKeyboardInteraction).description ?? (shortcut as NamedKeyboardInteraction).name)\n\t\t\t\t\t\t\t\t.replaceAll(\"<kbd\", \"<strong\")\n\t\t\t\t\t\t\t\t.replaceAll(\"</kbd>\", \"</strong>\"),\n\t\t\t\t\t\t\tshortcutKeys: (shortcut as NamedKeyboardInteraction).kbd\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\treturn {\n\t\t\t\t\tlabel: element.label.replaceAll(\"<kbd\", \"<strong\").replaceAll(\"</kbd>\", \"</strong>\"),\n\t\t\t\t\tnodes: nodes\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\t\tthis.state.shortcutsTree = collapseDuplicate(this.state.originalTree.concat(), \"\");\n\t}\n\n\tonStateChange(): void {\n\t\tthis.$tree.current?.expandToLevel(1);\n\t}\n\n\tonSearch(_e: SearchField$SearchEvent): void {\n\t\tconst query = _e.getParameter(\"query\") ?? \"\";\n\t\tthis.state.shortcutsTree = collapseDuplicate(\n\t\t\tthis.state.originalTree\n\t\t\t\t.filter((element) => {\n\t\t\t\t\tconst isTitleMatch = element.label.toLowerCase().includes(query.toLowerCase());\n\t\t\t\t\tconst isNodeMatch = element.nodes.some((node) => node.label.toLowerCase().includes(query.toLowerCase()));\n\t\t\t\t\treturn isTitleMatch || isNodeMatch;\n\t\t\t\t})\n\t\t\t\t.concat(),\n\t\t\tquery\n\t\t);\n\t}\n\n\tcreateContent(): Panel {\n\t\treturn (\n\t\t\t<Panel headerText={this.resourceBundle.getText(\"C_SHORTCUT_TITLE\")} width=\"100%\">\n\t\t\t\t{{\n\t\t\t\t\tcontent: [\n\t\t\t\t\t\t<SearchField\n\t\t\t\t\t\t\tref={this.$searchField}\n\t\t\t\t\t\t\tplaceholder={this.resourceBundle.getText(\"C_SHORTCUT_PLACEHOLDER\")}\n\t\t\t\t\t\t\tsearch={(e): void => this.onSearch(e)}\n\t\t\t\t\t\t/>,\n\t\t\t\t\t\t<Tree\n\t\t\t\t\t\t\tref={this.$tree}\n\t\t\t\t\t\t\titems={{ model: \"$componentState\", path: \"/shortcutsTree\", parameters: { arrayNames: [\"nodes\"] } }}\n\t\t\t\t\t\t\tnoDataText={this.resourceBundle.getText(\"C_SHORTCUT_NODATA\")}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<CustomTreeItem>\n\t\t\t\t\t\t\t\t<FlexBox alignItems={\"Start\"} width={\"100%\"} renderType={\"Bare\"} justifyContent={\"SpaceBetween\"}>\n\t\t\t\t\t\t\t\t\t<FormattedText htmlText={this.state.shortcutsTree.label} class={\"sapFeControlsShorcutMFT\"} />\n\t\t\t\t\t\t\t\t\t<FlexBox\n\t\t\t\t\t\t\t\t\t\trenderType={\"Bare\"}\n\t\t\t\t\t\t\t\t\t\tjustifyContent={\"SpaceBetween\"}\n\t\t\t\t\t\t\t\t\t\titems={\"{$componentState>shortcutKeys}\"}\n\t\t\t\t\t\t\t\t\t\tdirection={\"Column\"}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{{\n\t\t\t\t\t\t\t\t\t\t\titems: function (id: string, context: Context): Label {\n\t\t\t\t\t\t\t\t\t\t\t\tconst shortcutKey = context.getObject() as string | { raw: string; translated: string };\n\t\t\t\t\t\t\t\t\t\t\t\tconst shortCutText = typeof shortcutKey === \"string\" ? shortcutKey : shortcutKey.raw;\n\t\t\t\t\t\t\t\t\t\t\t\tconst translatedShortCutText =\n\t\t\t\t\t\t\t\t\t\t\t\t\ttypeof shortcutKey === \"string\" ? shortcutKey : shortcutKey.translated;\n\t\t\t\t\t\t\t\t\t\t\t\tconst shortcutKeys = shortCutText.split(\"+\");\n\t\t\t\t\t\t\t\t\t\t\t\tconst translatedShortCutKeys = translatedShortCutText.split(\"+\");\n\t\t\t\t\t\t\t\t\t\t\t\tconst elements: Control[] = [];\n\t\t\t\t\t\t\t\t\t\t\t\tshortcutKeys.forEach((rawKey: string, idx: number) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst translatedKey = translatedShortCutKeys[idx] ?? rawKey;\n\t\t\t\t\t\t\t\t\t\t\t\t\telements.push(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Label\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttext={mapKeyToSymbol(rawKey, translatedKey)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclass={\"sapUiTinyMarginEnd sapFeControlsShortcutKey\"}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (idx !== shortcutKeys.length - 1) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\telements.push(<Label text={\"+\"} class={\"sapUiTinyMarginEnd\"} />);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FlexBox id={id} renderType={\"Bare\"} alignItems={\"Center\"}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{ items: elements }}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</FlexBox>\n\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t</FlexBox>\n\t\t\t\t\t\t\t\t</FlexBox>\n\t\t\t\t\t\t\t</CustomTreeItem>\n\t\t\t\t\t\t</Tree>\n\t\t\t\t\t]\n\t\t\t\t}}\n\t\t\t</Panel>\n\t\t);\n\t}\n}\n"],"mappings":"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","ignoreList":[],"sourceRoot":"shortcuts/popup"}},{"offset":{"line":91,"column":0},"map":{"version":3,"names":[],"sources":["library-preload.js?bundle-code-0"],"mappings":"AAAA;AACA","sourcesContent":["sap.ui.require.preload({\n"],"sourceRoot":""}}]}