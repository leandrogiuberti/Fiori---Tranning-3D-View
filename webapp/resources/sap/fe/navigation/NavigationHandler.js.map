{"version":3,"file":"NavigationHandler.js","names":["NavType","NavLibrary","ParamHandlingMode","SuppressionBehavior","Mode","IAPP_STATE","DEFAULTED_PARAMETER_PROPERTY","HYBRID_IAPP_STATE_KEY","NavigationHandler","_BaseObject","oController","_this","sMode","arguments","length","undefined","ODataV4","sParamHandlingMode","SelVarWins","call","this","_aTechnicalParamaters","_oLastSavedInnerAppData","sAppStateKey","oAppData","iCacheHit","iCacheMiss","_rIAppStateOld","RegExp","_rIAppStateOldAtStart","_rIAppStateNew","NavError","UIComponent","oRouter","getRouter","oComponent","getOwnerComponent","_getRouter","getAppComponent","getComponentData","URLParamWins","InsertInSelOpt","ODataV2","_sMode","_exports","_inheritsLoose","_proto","prototype","_getAppNavigationService","ushellContainer","sap","ui","require","getService","_getAppNavigationServiceAsync","async","getServiceAsync","then","oCrossAppNavService","catch","Log","error","getRouterFor","registerNavigateCallback","fnCallback","_navigateCallback","navigate","sSemanticObject","sActionName","vNavigationParameters","oInnerAppData","fnOnError","oExternalAppData","sNavMode","sSelectionVariant","mParameters","oXAppDataObj","oStartupParameters","bExPlace","oTmpData","oNavHandler","oComponentData","startupParameters","oEnrichedSelVar","_splitInboundNavigationParameters","SelectionVariant","oNavigationSelVar","toJSONString","selectionVariant","_removeTechnicalParameters","toJSONObject","_removeMeasureBasedInformation","_checkIsPotentiallySensitive","_getURLParametersFromSelectionVariant","oNavArguments","target","semanticObject","action","params","fnNavigate","fnNavExplace","sNewHrefPromise","getHref","sNewHref","openWindow","oError","_fnSaveAppStateAsync","oSaveAppStateReturn","appStateKey","ptoExt","fnStoreAndNavigate","storeInnerAppStateAsync","replaceHash","oTargets","isNavigationSupported","supported","technicalError","_createTechnicalError","parseNavigation","sAppHash","HashChanger","getInstance","getHash","sIAppState","_getInnerAppStateKey","warning","hybridIAppStateKeyParams","hybridDeferred","jQuery","Deferred","iAppStateHybridDeferred","_loadAppState","hybrid","aDefaultedParameters","JSON","parse","oMyDeferred","parseUrlParams","oSubStartupParameters","aSubDefaultedParameters","oSubMyDeferred","sNavType","oSelVars","isEmpty","oDefaultedSelVar","xAppState","reject","resolve","initial","oAppStateData","oSelectionVariant","oDefaultedSelectionVariant","bNavSelVarHasDefaultsOnly","successHandlerHybridState","iAppStateData","_ref","navType","iAppState","failureHandlerHybridState","done","fail","bIsXappStateNavigation","that","getStartupAppState","oAppState","getData","stringify","x","promise","oSelVar","URLParams","setTechnicalParameters","aTechnicalParameters","Array","isArray","getTechnicalParameters","concat","_isTechnicalParameter","sParameterName","toLowerCase","indexOf","includes","_isFEParameter","sPropName","i","aSelVarPropNames","getSelectOptionsPropertyNames","removeSelectOption","oStartupParametersAdjusted","hasOwnProperty","getParameterNames","massAddSelectOption","getValue","_addParameterValues","aPropNames","oSelVariant","sSign","sOption","oValues","addSelectOption","oHashChanger","sAppHashOld","sAppHashNew","_replaceInnerAppStateKey","mInnerAppData","bImmediateHashReplace","bSkipHashReplace","fnReplaceHash","isEmptyObject","sAppStateKeyCached","bInnerAppDataEqual","fnOnAfterSave","_saveAppStateAsync","storeInnerAppState","_saveAppState","storeInnerAppStateWithImmediateReturn","oAppStatePromise","processBeforeSmartLinkPopoverOpens","oTableEventParameters","mSemanticAttributes","semanticAttributes","fnStoreXappAndCallOpen","mSubSemanticAttributes","sSubSelectionVariant","iSuppressionBehavior","raiseErrorOnNull","raiseErrorOnUndefined","oMixedSelVar","mixAttributesAndSelectionVariant","fnOnContainerSave","setSemanticAttributes","setAppStateKey","open","oStoreInnerAppStatePromise","_getAppStateKeyAndUrlParameters","_getAppSpecificHash","appHash","crossAppService","appSpecificRoute","message","Error","String","_mixAttributesToSelVariant","sPropertyName","vSemanticAttributeValue","Date","toJSON","toString","ignoreEmptyString","info","vSemanticAttributes","standard","oNewSelVariant","filterUrl","getFilterContextUrl","setFilterContextUrl","contextUrl","getParameterContextUrl","setParameterContextUrl","forEach","aParameters","getSelectOption","getParameter","aSelOptionNames","aSelectOption","j","Sign","Option","Low","High","_ensureSelectionVariantFormatString","vSelectionVariant","vConvertedSelectionVariant","_fnHandleAppStatePromise","oReturn","_saveAppStateWithImmediateReturn","_fnSaveAppStateWithImmediateReturn","getKey","oAppDataForSave","_fetchAppDataForSave","setData","oSavePromise","save","extend","tableVariantId","customData","presentationVariant","valueTexts","semanticDates","oAppDataClone","Object","assign","merge","createEmptyAppState","oDeferred","getAppState","oAppDataLoaded","data","aMatches","exec","sNewIAppState","fnAppendToQueryParameter","sSubAppHash","test","replace","sNeedle","fnReplaceOldApproach","rOldApproach","assert","mURLParameters","aSelectProperties","aSelectOptions","aParameterNames","sParameterValue","sErrorCode","setModel","oModel","_oModel","_getModel","getModel","_removeAllProperties","oData","_removeProperties","aFilterName","aParameterName","sName","SelectOptions","some","oValue","nIdx","PropertyName","splice","Texts","oTexts","PropertyTexts","Dates","oDates","Parameters","_isTermTrue","oProperty","sTerm","fIsTermDefaultTrue","oTerm","Bool","_isExcludedFromNavigationContext","_isPotentiallySensitive","_isMeasureProperty","_isToBeExcluded","constructContextUrl","sEntitySetName","_constructContextUrl","sServerUrl","isA","_getServerUrl","oServiceURI","URI","getServiceUrl","absoluteTo","document","baseURI","lastIndexOf","substring","sServiceUrl","oAdaptedData","FilterContextUrl","ParameterContextUrl","aSensitiveFilterName","aSensitiveParameterName","oEntitySet","oEntityDef","oSubEntityDef","oEndRole","aFilterContextPart","aParamContextPart","oMetaModel","getMetaModel","getServiceMetadata","split","getODataEntitySet","getODataEntityType","entityType","property","push","name","navigationProperty","getODataAssociationEnd","type","multiplicity","_removeSensitiveDataForODataV4","_removeMeasureBasedProperties","aMeasureFilterName","aMeasureParameterName","bMeasure","oSV","getObject","sEntitySet","aPropertyNames","getPropertyNames","fnIsSensitiveData","sProp","esName","aPropertyAnnotations","_checkPropertyAnnotationsForSensitiveData","oFieldControl","k","sProperty","getIAppStateKey","BaseObject","NavigationHandlerUI5Class"],"sources":["./NavigationHandler.ts"],"sourcesContent":["import Log from \"sap/base/Log\";\nimport assert from \"sap/base/assert\";\nimport extend from \"sap/base/util/extend\";\nimport isEmptyObject from \"sap/base/util/isEmptyObject\";\nimport merge from \"sap/base/util/merge\";\nimport BaseObject from \"sap/ui/base/Object\";\nimport type Component from \"sap/ui/core/Component\";\nimport UIComponent from \"sap/ui/core/UIComponent\";\nimport type Controller from \"sap/ui/core/mvc/Controller\";\nimport HashChanger from \"sap/ui/core/routing/HashChanger\";\nimport type Router from \"sap/ui/core/routing/Router\";\nimport type V2ODataModel from \"sap/ui/model/odata/v2/ODataModel\";\nimport type V4ODataModel from \"sap/ui/model/odata/v4/ODataModel\";\nimport URI from \"sap/ui/thirdparty/URI\";\nimport jQuery from \"sap/ui/thirdparty/jquery\";\nimport openWindow from \"sap/ui/util/openWindow\";\nimport type Container from \"sap/ushell/Container\";\nimport type CrossApplicationNavigation from \"sap/ushell/services/CrossApplicationNavigation\";\nimport type Navigation from \"sap/ushell/services/Navigation\";\nimport NavError from \"./NavError\";\nimport type { SerializedSelectionVariant } from \"./SelectionVariant\";\nimport SelectionVariant from \"./SelectionVariant\";\nimport NavLibrary from \"./library\";\n\ntype ShellAppStateReturn = {\n\tpromise: JQuery.Promise<string>;\n\tappStateKey: string;\n};\n\ntype ShellAppState = {\n\tgetKey(): string;\n\tsetData(obj: object): void;\n\tgetData(): InnerAppData;\n\tsave(): JQuery.Promise<string>;\n};\n/**\n * Structure of stored app state.\n */\nexport interface InnerAppData {\n\t[key: string]: unknown;\n\t/**\n\t * Sringified JSON object as returned, for example, from getDataSuiteFormat() of the SmartFilterBar control\n\t */\n\tselectionVariant?: string | SerializedSelectionVariant;\n\n\t/**\n\t * ID of the SmartTable variant.\n\t */\n\ttableVariantId?: string;\n\n\t/**\n\t * Object that can be used to store arbitrary data.\n\t */\n\tcustomData?: object;\n\n\t/**\n\t * Object containing the current ui state of the app.\n\t */\n\tpresentationVariant?: object;\n\n\t/**\n\t * Object containing value descriptions.\n\t */\n\tvalueTexts?: object | null;\n\n\t/**\n\t * Object containing semanticDates filter information.\n\t */\n\tsemanticDates?: object | null;\n}\n\n// shortcuts for sap.ui.generic.app enums\nconst NavType = NavLibrary.NavType;\nconst ParamHandlingMode = NavLibrary.ParamHandlingMode;\nconst SuppressionBehavior = NavLibrary.SuppressionBehavior;\nconst Mode = NavLibrary.Mode;\n\nconst IAPP_STATE = \"sap-iapp-state\";\nconst DEFAULTED_PARAMETER_PROPERTY = \"sap-ushell-defaultedParameterNames\";\nconst HYBRID_IAPP_STATE_KEY = \"nhHybridIAppStateKey\";\n\n/**\n * This is the successor of {@link sap.ui.generic.app.navigation.service.NavigationHandler}.<br> Creates a new NavigationHandler class by providing the required environment. <br>\n * The <code>NavigationHandler</code> supports the verification of sensitive information. All properties that are part of\n * <code>selectionVariant</code> and <code>valueTexts</code> will be verified if they are annotated as\n * <code>com.sap.vocabularies.PersonalData.v1.IsPotentiallySensitive</code> or\n * <code>com.sap.vocabularies.UI.v1.ExcludeFromNavigationContext</code> and will be removed before the data is persisted as the app\n * state.<br>\n * Also, all properties annotated as <code>com.sap.vocabularies.Analytics.v1.Measure</code> will be removed from the data stored as the\n * xapp state.<br>\n * To verify the information to be removed, the <code>NavigationHandler</code> requires an unnamed model of type\n * {@link sap.ui.model.odata.v2.ODataModel} on component level. It is possible to set such a model using the <code>setModel</code>\n * method.<br>\n * <b>Note:</b> The check for excluded data requires that the OData metadata has already been loaded completely.<br>\n * If the OData metadata model has not been loaded completely, all properties are removed from the application context.<br>\n * <b>Note:</b> This class requires that the UShell {@link sap.ushell.services.CrossApplicationNavigation} is available and initialized.\n * @public\n * @since 1.83.0\n */\nexport class NavigationHandler extends BaseObject {\n\tprivate oRouter: any;\n\n\tprivate oComponent: Component;\n\n\tprivate _oModel: any;\n\n\tprivate sParamHandlingMode: string;\n\n\tprivate _sMode: string | undefined;\n\n\t// list of technical parameters\n\tprivate _aTechnicalParamaters = [\"hcpApplicationId\"];\n\n\tprivate _oLastSavedInnerAppData: any = {\n\t\tsAppStateKey: \"\",\n\t\toAppData: {},\n\t\tiCacheHit: 0,\n\t\tiCacheMiss: 0\n\t};\n\n\t/*\n\t * There exists a generation of \"old\" sap-iapp-states which are based on the following URL schema:\n\t * #SemObj-action&/route/sap-iapp-state=ABC12345678 The new URL schema is: #SemObj-action&/route?sap-iapp-state=ABC12345678 (mind the\n\t * difference between / and ? above), i.e. the sap-iapp-state has become a parameter of the query parameter section in the AppHash string.\n\t * Yet, this tool shall be able to deal even with old sap-iapp-states. Therefore, we use two Regular Expressions (rIAppStateOld and\n\t * rIAppStateOldAtStart) as defined below to scan for these old variants. The new variant is being scanned using rIAppStateNew as Regular\n\t * Expression search string. Compatibility is centrally ensured by the two methods _getInnerAppStateKey and _replaceInnerAppStateKey (see\n\t * below). Never use these RegExp in a method on your own, as it typically indicates that you will fall into the compatibility trap!\n\t */\n\t// Warning! Do not use GLOBAL flags here; RegExp in GLOBAL mode store the lastIndex value\n\t// Therefore, repeated calls to the RegExp will then only start beginning with that stored\n\t// lastIndex. Thus, multiple calls therefore could yield strange results.\n\t// Moreover, there shall only be exactly one IAPP_STATE per RegExp in an AppHash.\n\t// Therefore, GLOBAL search should be superfluous.\n\tprivate _rIAppStateOld = new RegExp(\"/\" + IAPP_STATE + \"=([^/?]+)\");\n\n\tprivate _rIAppStateOldAtStart = new RegExp(\"^\" + IAPP_STATE + \"=([^/?]+)\");\n\n\t/*\n\t * Regular Expression in words: Search for something that either starts with ? or &, followed by the term \"sap-iapp-state\". That one is\n\t * followed by an equal sign (=). The stuff that is after the equal sign forms the first regexp group. This group consists of at least one\n\t * (or arbitrary many) characters, as long as it is not an ampersand sign (&). Characters after such an ampersand would be ignored and do\n\t * not belong to the group. Alternatively, the string also may end.\n\t */\n\tprivate _rIAppStateNew = new RegExp(\"[?&]\" + IAPP_STATE + \"=([^&]+)\");\n\n\tprivate _navigateCallback: Function | undefined;\n\n\t/**\n\t * Temporarily added again because an application was (illegially) relying on it. Should be removed again, once the app is corrected\n\t */\n\tprivate IAPP_STATE = IAPP_STATE;\n\n\t/**\n\t * Constructor requiring a controller/component owning the navigation handler.\n\t * @param oController UI5 controller that contains a router and a component; typically the main controller of your application, for\n\t *        example, a subclass of the sap.ca.scfld.md.controller.BaseFullscreenController if scaffolding is used\n\t * @param sMode Mode to be used to indicates the Odata version used for runnning the Navigation Handler,\n\t *        see {@link sap.fe.navigation.Mode}.<br>\n\t * \t\t  Note: Mode has to be sap.fe.navigation.Mode.ODataV2 whenever this constructor is used to initialize a OData V2 based service.\n\t * @param sParamHandlingMode Mode to be used to handle conflicts when merging URL parameters and the SelectionVariant class,\n\t *        see {@link sap.fe.navigation.ParamHandlingMode}\n\t * @throws An instance of {@link sap.fe.navigation.NavError} in case of input errors. Valid error codes are: <table>\n\t *         <tr>\n\t *         <th align=\"left\">NavError code</th>\n\t *         <th align=\"left\">Description</th>\n\t *         </tr>\n\t *         <tr>\n\t *         <td>NavigationHandler.INVALID_INPUT</td>\n\t *         <td>Indicates that the input parameter is invalid</td>\n\t *         </tr>\n\t *         </table>\n\t */\n\tconstructor(\n\t\toController: Controller | UIComponent,\n\t\tsMode: string = Mode.ODataV4,\n\t\tsParamHandlingMode: string = ParamHandlingMode.SelVarWins\n\t) {\n\t\tsuper();\n\t\tif (!oController) {\n\t\t\tthrow new NavError(\"NavigationHandler.INVALID_INPUT\");\n\t\t}\n\n\t\tif (oController instanceof UIComponent) {\n\t\t\tthis.oRouter = oController.getRouter();\n\t\t\tthis.oComponent = oController;\n\t\t} else {\n\t\t\tif (typeof oController.getOwnerComponent !== \"function\") {\n\t\t\t\tthrow new NavError(\"NavigationHandler.INVALID_INPUT\");\n\t\t\t}\n\n\t\t\tthis.oRouter = this._getRouter(oController);\n\t\t\tthis.oComponent = oController.getOwnerComponent() as Component;\n\t\t}\n\n\t\t// special handling for SmartTemplates\n\t\tif (this.oComponent && (this.oComponent as { getAppComponent?: Function }).getAppComponent) {\n\t\t\tthis.oComponent = (this.oComponent as { getAppComponent?: Function }).getAppComponent?.();\n\t\t}\n\n\t\tif (\n\t\t\ttypeof this.oRouter === \"undefined\" ||\n\t\t\ttypeof this.oComponent === \"undefined\" ||\n\t\t\ttypeof this.oComponent.getComponentData !== \"function\"\n\t\t) {\n\t\t\tthrow new NavError(\"NavigationHandler.INVALID_INPUT\");\n\t\t}\n\n\t\tif (sParamHandlingMode === ParamHandlingMode.URLParamWins || sParamHandlingMode === ParamHandlingMode.InsertInSelOpt) {\n\t\t\tthis.sParamHandlingMode = sParamHandlingMode;\n\t\t} else {\n\t\t\tthis.sParamHandlingMode = ParamHandlingMode.SelVarWins; // default\n\t\t}\n\t\tif (sMode === Mode.ODataV2) {\n\t\t\tthis._sMode = sMode;\n\t\t}\n\t}\n\n\t/**\n\t * Retrieves the shell navigation service.\n\t * @returns The Navigation service\n\t * @private\n\t */\n\t// eslint-disable-next-line deprecation/deprecation\n\t_getAppNavigationService(): CrossApplicationNavigation {\n\t\tconst ushellContainer: Container = sap.ui.require(\"sap/ushell/Container\");\n\t\t// eslint-disable-next-line deprecation/deprecation\n\t\treturn ushellContainer.getService(\"CrossApplicationNavigation\") as CrossApplicationNavigation;\n\t}\n\n\t/**\n\t * Retrieves the shell navigation service.\n\t * @returns The Navigation service\n\t * @private\n\t */\n\tasync _getAppNavigationServiceAsync(): Promise<Navigation> {\n\t\tconst ushellContainer: Container = sap.ui.require(\"sap/ushell/Container\");\n\t\treturn ushellContainer\n\t\t\t?.getServiceAsync(\"Navigation\")\n\t\t\t.then(function (oCrossAppNavService: object) {\n\t\t\t\treturn oCrossAppNavService as Navigation;\n\t\t\t})\n\t\t\t.catch(function () {\n\t\t\t\tLog.error(\"NavigationHandler: Navigation is not available.\");\n\t\t\t\tthrow new NavError(\"NavigationHandler.NO.XAPPSERVICE\");\n\t\t\t});\n\t}\n\n\t/**\n\t * Retrieves the reference to the router object for navigation for this given Controller.\n\t * @param oController The reference to the Controller for which the Router instance shall be determined.\n\t * @returns The Router for the given Controller\n\t * @private\n\t */\n\t_getRouter(oController: Controller): Router {\n\t\treturn UIComponent.getRouterFor(oController);\n\t}\n\n\t/**\n\t * This method is to be used only by FE V2 to get access to toExternal promise.\n\t * @param fnCallback Callback to be called by 'navigate' method in case of toExternal is used to navigate.\n\t * @private\n\t */\n\tregisterNavigateCallback(fnCallback: Function): void {\n\t\tthis._navigateCallback = fnCallback;\n\t}\n\n\t/**\n\t * Triggers a cross-app navigation after saving the inner and the cross-app states. The navigation mode based on\n\t * <code>sap-ushell-next-navmode</code> is taken into account. If set to <code>explace</code> the inner app state will not be changed.\n\t * <b>Note:</b> The <code>sNavMode</code> argument can be used to overwrite the SAP Fiori launchpad default navigation for opening a URL\n\t * in-place or ex-place.\n\t * <br>\n\t * <b>Node:</b> If the <code>oExternalAppData</code> parameter is not supplied, the external app data will be calculated based on\n\t * the <code>oInnerAppData</code> data.<br>\n\t * SmartFilterBar control <b>Parameters:</b> <table>\n\t * <tr>\n\t * <td align=\"center\">{object}</td>\n\t * <td><b>oError</b></td>\n\t * <td>NavError object (instance of {@link sap.fe.navigation.NavError}) that describes which kind of error occurred</td>\n\t * <tr>\n\t * <td align=\"center\">{string}</td>\n\t * <td><b>oError.errorCode</b></td>\n\t * <td>Code to identify the error</td>\n\t * <tr>\n\t * <td align=\"center\">{string}</td>\n\t * <td><b>oError.type</b></td>\n\t * <td>Severity of the error (info/warning/error)</td>\n\t * <tr>\n\t * <td align=\"center\">{array}</td>\n\t * <td><b>oError.params</b></td>\n\t * <td>An array of objects (typically strings) that describe additional value parameters required for generating the message</td>\n\t * </table>.\n\t * @public\n\t * @param sSemanticObject Name of the semantic object of the target app\n\t * @param sActionName Name of the action of the target app\n\t * @param vNavigationParameters Navigation parameters as an object with key/value pairs or as a string representation of such an object. If passed as an object, the properties are not checked against the <code>IsPotentialSensitive</code> or <code>Measure</code> type.\n\t * @param oInnerAppData Object for storing current state of the app\n\t * @param fnOnError Callback that is called if an error occurs during navigation <br>\n\t * @param oExternalAppData Object for storing the state which will be forwarded to the target component.\n\t * @param oExternalAppData.presentationVariant Object containing the current ui state of the app which will be forwarded to the\n\t *        target component.\n\t * @param oExternalAppData.valueTexts Object containing value descriptions which will be forwarded to the target component.\n\t * @param oExternalAppData.selectionVariant Stringified JSON object, which will be forwarded to the target component. If not\n\t *        provided the selectionVariant will be constructed based on the vNavigationParameters.\n\t * @param sNavMode Argument is used to overwrite the FLP-configured target for opening a URL. If used, only the\n\t *        <code>explace</code> or <code>inplace</code> values are allowed. Any other value will lead to an exception\n\t *        <code>NavigationHandler.INVALID_NAV_MODE</code>.\n\t * @example <code>\n\t * sap.ui.define([\"sap/fe/navigation/NavigationHandler\", \"sap/fe/navigation/SelectionVariant\"], function (NavigationHandler, SelectionVariant) {\n\t * \tvar oNavigationHandler = new NavigationHandler(oController);\n\t * \tvar sSemanticObject = \"SalesOrder\";\n\t * \tvar sActionName = \"create\";\n\t *\n\t * \t//simple parameters as Object\n\t * \tvar vNavigationParameters = {\n\t * \t\tCompanyCode : \"0001\",\n\t * \t\tCustomer : \"C0001\"\n\t * \t};\n\t *\n\t * \t//or as selection variant\n\t * \tvar oSelectionVariant = new SelectionVariant();\n\t *\t oSelectionVariant.addSelectOption(\"CompanyCode\", \"I\", \"EQ\", \"0001\");\n\t * \toSelectionVariant.addSelectOption(\"Customer\", \"I\", \"EQ\", \"C0001\");\n\t * \tvNavigationParameters = oSelectionVariant.toJSONString();\n\t *\n\t * \t//or directly from SmartFilterBar\n\t * \tvNavigationParameters = oSmartFilterBar.getDataSuiteFormat();\n\t *\n\t * \t//app state for back navigation\n\t *\t var oInnerAppData = {\n\t * \t\tselectionVariant : oSmartFilterBar.getDataSuiteFormat(),\n\t * \t\ttableVariantId : oSmartTable.getCurrentVariantId(),\n\t * \t\tcustomData : oMyCustomData\n\t * \t};\n\t *\n\t * \t// callback function in case of errors\n\t * \tvar fnOnError = function(oError){\n\t * \t\tvar oi18n = oController.getView().getModel(\"i18n\").getResourceBundle();\n\t * \t\toError.setUIText({oi18n : oi18n, sTextKey : \"OUTBOUND_NAV_ERROR\"});\n\t * \t\toError.showMessageBox();\n\t * \t};\n\t *\n\t * \toNavigationHandler.navigate(sSemanticObject, sActionName, vNavigationParameters, oInnerAppData, fnOnError);\n\t * });\n\t * </code>\n\t */\n\tnavigate(\n\t\tsSemanticObject: string,\n\t\tsActionName: string,\n\t\tvNavigationParameters: object | string,\n\t\toInnerAppData?: InnerAppData,\n\t\tfnOnError?: Function,\n\t\toExternalAppData?: {\n\t\t\tvalueTexts?: object | undefined;\n\t\t\tpresentationVariant?: object | undefined;\n\t\t\tselectionVariant?: object | undefined;\n\t\t},\n\t\tsNavMode?: string\n\t): void {\n\t\tlet sSelectionVariant: any,\n\t\t\tmParameters,\n\t\t\toXAppDataObj: any,\n\t\t\toStartupParameters,\n\t\t\tbExPlace = false,\n\t\t\toTmpData: any = {};\n\t\tconst oNavHandler: NavigationHandler = this;\n\n\t\tconst oComponentData = this.oComponent.getComponentData() as Record<string, any>;\n\t\t/*\n\t\t * There are some race conditions where the oComponentData may not be set, for example in case the UShell was not initialized properly. To\n\t\t * make sure that we do not dump here with an exception, we take this special error handling behavior:\n\t\t */\n\t\tif (oComponentData) {\n\t\t\toStartupParameters = oComponentData.startupParameters;\n\n\t\t\tif (\n\t\t\t\toStartupParameters &&\n\t\t\t\toStartupParameters[\"sap-ushell-next-navmode\"] &&\n\t\t\t\toStartupParameters[\"sap-ushell-next-navmode\"].length > 0\n\t\t\t) {\n\t\t\t\t// bExPlace = (JSON.parse(oStartupParameters[\"sap-ushell-next-navmode\"][0]) === \"explace\");\n\t\t\t\tbExPlace = oStartupParameters[\"sap-ushell-next-navmode\"][0] === \"explace\";\n\t\t\t}\n\t\t}\n\n\t\t// only nav-mode 'inplace' or 'explace' are supported. Any other value will lead to an exception.\n\t\tif (sNavMode && (sNavMode === \"inplace\" || sNavMode === \"explace\")) {\n\t\t\tbExPlace = sNavMode === \"explace\";\n\t\t} else if (sNavMode) {\n\t\t\tthrow new NavError(\"NavigationHandler.INVALID_NAV_MODE\");\n\t\t}\n\n\t\tif (oExternalAppData === undefined || oExternalAppData === null) {\n\t\t\toXAppDataObj = {};\n\t\t} else {\n\t\t\toXAppDataObj = oExternalAppData;\n\t\t}\n\n\t\t// for navigation we need URL parameters (legacy navigation) and sap-xapp-state, therefore we need to create the missing one from the\n\t\t// passed one\n\t\tif (typeof vNavigationParameters === \"string\") {\n\t\t\tsSelectionVariant = vNavigationParameters;\n\t\t} else if (typeof vNavigationParameters === \"object\") {\n\t\t\tconst oEnrichedSelVar = this._splitInboundNavigationParameters(\n\t\t\t\tnew SelectionVariant(),\n\t\t\t\tvNavigationParameters,\n\t\t\t\t[]\n\t\t\t).oNavigationSelVar;\n\t\t\tsSelectionVariant = oEnrichedSelVar.toJSONString();\n\t\t} else {\n\t\t\tthrow new NavError(\"NavigationHandler.INVALID_INPUT\");\n\t\t}\n\n\t\toTmpData.selectionVariant = new SelectionVariant(sSelectionVariant);\n\t\tif (typeof vNavigationParameters === \"string\") {\n\t\t\toTmpData.selectionVariant = this._removeTechnicalParameters(oTmpData.selectionVariant);\n\t\t}\n\t\toTmpData.selectionVariant = oTmpData.selectionVariant && oTmpData.selectionVariant.toJSONObject();\n\t\toTmpData = this._removeMeasureBasedInformation(oTmpData); // remove eventual measures\n\t\toTmpData = this._checkIsPotentiallySensitive(oTmpData); // remove eventual sensitive data\n\n\t\tif (oTmpData.selectionVariant) {\n\t\t\tmParameters = this._getURLParametersFromSelectionVariant(new SelectionVariant(oTmpData.selectionVariant));\n\t\t\tsSelectionVariant = new SelectionVariant(oTmpData.selectionVariant).toJSONString();\n\t\t} else {\n\t\t\tmParameters = {};\n\t\t\tsSelectionVariant = null;\n\t\t}\n\n\t\tconst oNavArguments: any = {\n\t\t\ttarget: {\n\t\t\t\tsemanticObject: sSemanticObject,\n\t\t\t\taction: sActionName\n\t\t\t},\n\t\t\tparams: mParameters || {}\n\t\t};\n\n\t\tconst fnNavigate = async function (oCrossAppNavService: any): Promise<void> {\n\t\t\tif (!oXAppDataObj.selectionVariant) {\n\t\t\t\toXAppDataObj.selectionVariant = sSelectionVariant;\n\t\t\t}\n\n\t\t\tconst fnNavExplace = function (): void {\n\t\t\t\tconst sNewHrefPromise = oCrossAppNavService.getHref(oNavArguments, oNavHandler.oComponent);\n\t\t\t\tsNewHrefPromise\n\t\t\t\t\t.then(function (sNewHref: string): void {\n\t\t\t\t\t\topenWindow(sNewHref);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t})\n\t\t\t\t\t.catch(function (oError: unknown): void {\n\t\t\t\t\t\tLog.error(\"Error while retireving hrefForExternal : \" + oError);\n\t\t\t\t\t});\n\t\t\t};\n\n\t\t\toXAppDataObj = oNavHandler._removeMeasureBasedInformation(oXAppDataObj);\n\t\t\treturn oNavHandler._fnSaveAppStateAsync(oXAppDataObj, fnOnError).then(function (oSaveAppStateReturn: any): void {\n\t\t\t\tif (oSaveAppStateReturn) {\n\t\t\t\t\toNavArguments.appStateKey = oSaveAppStateReturn.appStateKey;\n\n\t\t\t\t\t// Remark:\n\t\t\t\t\t// The Cross App Service takes care of encoding parameter keys and values. Example:\n\t\t\t\t\t// mParams = { \"$@%\" : \"&/=\" } results in the URL parameter %2524%2540%2525=%2526%252F%253D\n\t\t\t\t\t// Note the double encoding, this is correct.\n\n\t\t\t\t\t// toExternal sets sap-xapp-state in the URL if appStateKey is provided in oNavArguments\n\t\t\t\t\t// toExternal has issues on sticky apps FIORITECHP1-14400, temp fix using hrefForExternal\n\t\t\t\t\tif (sNavMode == \"explace\") {\n\t\t\t\t\t\tfnNavExplace();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst ptoExt = oCrossAppNavService.navigate(oNavArguments, oNavHandler.oComponent);\n\t\t\t\t\t\t// TODO: This is just a temporary solution to allow FE V2 to use toExternal promise.\n\t\t\t\t\t\tif (oNavHandler._navigateCallback) {\n\t\t\t\t\t\t\toNavHandler._navigateCallback(ptoExt);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} // else : error was already reported\n\t\t\t\treturn;\n\t\t\t});\n\t\t};\n\t\tconst fnStoreAndNavigate = function (oCrossAppNavService: any): void {\n\t\t\toNavHandler\n\t\t\t\t.storeInnerAppStateAsync(oInnerAppData as any, true)\n\t\t\t\t.then(async function (sAppStateKey: string): Promise<void> {\n\t\t\t\t\tif (sAppStateKey) {\n\t\t\t\t\t\toNavHandler.replaceHash(sAppStateKey);\n\t\t\t\t\t}\n\t\t\t\t\treturn fnNavigate(oCrossAppNavService);\n\t\t\t\t})\n\t\t\t\t.catch(function (oError: any) {\n\t\t\t\t\tif (fnOnError) {\n\t\t\t\t\t\tfnOnError(oError);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t};\n\t\tif (sNavMode) {\n\t\t\toNavArguments.params[\"sap-ushell-navmode\"] = bExPlace ? \"explace\" : \"inplace\";\n\t\t}\n\t\toNavHandler\n\t\t\t._getAppNavigationServiceAsync()\n\t\t\t.then(async function (oCrossAppNavService: Navigation) {\n\t\t\t\ttry {\n\t\t\t\t\tconst oTargets = await (oCrossAppNavService.isNavigationSupported(\n\t\t\t\t\t\t[oNavArguments],\n\t\t\t\t\t\toNavHandler.oComponent\n\t\t\t\t\t) as unknown as Promise<{ supported: boolean }[]>);\n\t\t\t\t\tif (oTargets[0].supported) {\n\t\t\t\t\t\tif (!bExPlace) {\n\t\t\t\t\t\t\tfnStoreAndNavigate(oCrossAppNavService);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfnNavigate(oCrossAppNavService);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (fnOnError) {\n\t\t\t\t\t\t// intent is not supported\n\t\t\t\t\t\tconst oError = new NavError(\"NavigationHandler.isIntentSupported.notSupported\");\n\t\t\t\t\t\tfnOnError(oError);\n\t\t\t\t\t}\n\t\t\t\t} catch (oError) {\n\t\t\t\t\tif (fnOnError) {\n\t\t\t\t\t\t// technical error: could not determine if intent is supported\n\t\t\t\t\t\tconst technicalError = oNavHandler._createTechnicalError(\"NavigationHandler.isIntentSupported.failed\");\n\t\t\t\t\t\tfnOnError(technicalError);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t})\n\t\t\t.catch(function (oError: any) {\n\t\t\t\tif (fnOnError) {\n\t\t\t\t\tfnOnError(oError);\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\t/**\n\t * Parses the incoming URL and returns a Promise. If this method detects a back navigation, the inner app state is returned in the resolved\n\t * Promise. Otherwise startup parameters will be merged into the app state provided by cross app navigation, and a combined app state will be\n\t * returned. The conflict resolution can be influenced with sParamHandlingMode defined in the constructor.\n\t * @returns A Promise object to monitor when all the actions of the function have been executed. If the execution is successful, the\n\t *          extracted app state, the startup parameters, and the type of navigation are returned, see also the example above. The app state is\n\t *          an object that contains the following information:\n\t *          <ul>\n\t *          <li><code>oAppData.oSelectionVariant</code>: An instance of {@link sap.fe.navigation.SelectionVariant}\n\t *          containing only parameters/select options that are related to navigation</li>\n\t *          <li><code>oAppData.selectionVariant</code>: The navigation-related selection variant as a JSON-formatted string</li>\n\t *          <li><code>oAppData.oDefaultedSelectionVariant</code>: An instance of\n\t *          {@link sap.fe.navigation.SelectionVariant} containing only the parameters/select options that are set by user\n\t *          default data</li>\n\t *          <li><code>oAppData.bNavSelVarHasDefaultsOnly</code>: A Boolean flag that indicates whether only defaulted parameters and no\n\t *          navigation parameters are present.<br>\n\t *          <b>Note:</b> If no navigation parameters are available, <code>bNavSelVarHasDefaultsOnly</code> is set to <code>true</code>,\n\t *          even though parameters without default might be available as well.</li>\n\t *          </ul>\n\t *          If the navigation-related selection variant is empty, it is replaced by a copy of the defaulted selection variant.<br>\n\t *          The navigation type is an enumeration type of type {@link sap.fe.navigation.NavType} (possible values are\n\t *          initial, URLParams, xAppState, and iAppState).<br>\n\t *          <b>Note:</b> If the navigation type is {@link sap.fe.navigation.NavType.iAppState} oAppData has two\n\t *          additional properties\n\t *          <ul>\n\t *          <li><code>oAppData.tableVariantId</code></li>\n\t *          <li><code>oAppData.customData</code></li>\n\t *          </ul>\n\t *          which return the inner app data as stored in {@link #.navigate navigate} or {@link #.storeInnerAppStateAsync storeInnerAppStateAsync}.\n\t *          <code>oAppData.oDefaultedSelectionVariant</code> is an empty selection variant and\n\t *          <code>oAppData.bNavSelVarHasDefaultsOnly</code> is <code>false</code> in this case.<br>\n\t *          <b>Note:</b> If the navigation type is {@link sap.fe.navigation.NavType.initial} oAppData is an empty object!<br>\n\t *          If an error occurs, an error object of type {@link sap.fe.navigation.NavError}, URL parameters (if available)\n\t *          and the type of navigation are returned.\n\t * @public\n\t * @example <code>\n\t * sap.ui.define([\"sap/fe/navigation/NavigationHandler\"], function (NavigationHandler) {\n\t * \tvar oNavigationHandler = new NavigationHandler(oController);\n\t * \tvar oParseNavigationPromise = oNavigationHandler.parseNavigation();\n\t *\n\t * \toParseNavigationPromise.done(function(oAppData, oStartupParameters, sNavType){\n\t * \t\t\toSmartFilterBar.setDataSuiteFormat(oAppData.selectionVariant);\n\t * \t\t\t// oAppData.oSelectionVariant can be used to manipulate the selection variant\n\t * \t\t\t// oAppData.oDefaultedSelectionVariant contains the parameters which are set by user defaults\n\t * \t\t\t// oAppData.bNavSelVarHasDefaultsOnly indicates whether only defaulted parameters and no navigation parameters are present\n\t * \t});\n\t * \toParseNavigationPromise.fail(function(oError, oURLParameters, sNavType){\n\t * \t\t// if e.g. the xapp state could not be loaded, nevertheless there may be URL parameters available\n\t * \t\t//some error handling\n\t * \t});\n\t * });\n\t * </code>\n\t */\n\t// eslint-disable-next-line @typescript-eslint/promise-function-async\n\tparseNavigation(): JQuery.Promise<unknown> {\n\t\tconst sAppHash = HashChanger.getInstance().getHash();\n\t\t/*\n\t\t * use .getHash() here instead of .getAppHash() to also be able dealing with environments where only SAPUI5 is loaded and the UShell is\n\t\t * not initialized properly.\n\t\t */\n\t\tconst sIAppState = this._getInnerAppStateKey(sAppHash);\n\n\t\tlet oComponentData = this.oComponent.getComponentData() as Record<string, unknown>;\n\t\t/*\n\t\t * There are some race conditions where the oComponentData may not be set, for example in case the UShell was not initialized properly. To\n\t\t * make sure that we do not dump here with an exception, we take this special error handling behavior:\n\t\t */\n\t\tif (oComponentData === undefined) {\n\t\t\tLog.warning(\"The navigation Component's data was not set properly; assuming instead that no parameters are provided.\");\n\t\t\toComponentData = {};\n\t\t}\n\n\t\t// Remark:\n\t\t// The startup parameters are already decoded. Example:\n\t\t// The original URL parameter %2524%2540%2525=%2526%252F%253D results in oStartupParameters = { \"$@%\" : \"&/=\" }\n\t\t// Note the double encoding in the URL, this is correct. An URL parameter like xyz=%25 causes an \"URI malformed\" error.\n\t\t// If the decoded value should be e.g. \"%25\", the parameter in the URL needs to be: xyz=%252525\n\t\tconst oStartupParameters = oComponentData.startupParameters as Record<string, any>;\n\t\tconst hybridIAppStateKeyParams: string | undefined = oStartupParameters?.[HYBRID_IAPP_STATE_KEY]?.[0];\n\t\tconst hybridDeferred = jQuery.Deferred() as JQuery.Deferred<unknown>;\n\t\tlet iAppStateHybridDeferred: JQuery.Deferred<unknown> | undefined;\n\t\tif (hybridIAppStateKeyParams !== undefined) {\n\t\t\tiAppStateHybridDeferred = this._loadAppState(hybridIAppStateKeyParams, hybridDeferred, NavType.hybrid);\n\t\t}\n\n\t\tlet aDefaultedParameters: any = [];\n\t\tif (\n\t\t\toStartupParameters &&\n\t\t\toStartupParameters[DEFAULTED_PARAMETER_PROPERTY] &&\n\t\t\toStartupParameters[DEFAULTED_PARAMETER_PROPERTY].length > 0\n\t\t) {\n\t\t\taDefaultedParameters = JSON.parse(oStartupParameters[DEFAULTED_PARAMETER_PROPERTY][0]);\n\t\t}\n\n\t\tconst oMyDeferred = jQuery.Deferred() as JQuery.Deferred<unknown>;\n\n\t\tconst oNavHandler = this;\n\t\tconst parseUrlParams = function (\n\t\t\toSubStartupParameters: any,\n\t\t\taSubDefaultedParameters: any,\n\t\t\toSubMyDeferred: JQuery.Deferred<unknown>,\n\t\t\tsNavType: string\n\t\t): void {\n\t\t\t// standard URL navigation\n\t\t\tconst oSelVars = oNavHandler._splitInboundNavigationParameters(\n\t\t\t\tnew SelectionVariant(),\n\t\t\t\toSubStartupParameters,\n\t\t\t\taSubDefaultedParameters\n\t\t\t);\n\t\t\t// For scenario, where only hybridIAppStateKey is part of urlParams, we ignore this condition\n\t\t\tif (oSelVars.oNavigationSelVar.isEmpty() && oSelVars.oDefaultedSelVar.isEmpty() && sNavType !== NavType.hybrid) {\n\t\t\t\t// Startup parameters contain only technical parameters (SAP system) which were filtered out.\n\t\t\t\t// oNavigationSelVar and oDefaultedSelVar are empty.\n\t\t\t\t// Thus, consider this type of navigation as an initial navigation.\n\t\t\t\tif (sNavType === NavType.xAppState) {\n\t\t\t\t\tconst oError = oNavHandler._createTechnicalError(\"NavigationHandler.getDataFromAppState.failed\");\n\t\t\t\t\toSubMyDeferred.reject(oError, oSubStartupParameters || {}, NavType.xAppState);\n\t\t\t\t} else {\n\t\t\t\t\toSubMyDeferred.resolve({}, oSubStartupParameters, NavType.initial);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst oAppStateData: any = {};\n\t\t\t\toAppStateData.selectionVariant = oSelVars.oNavigationSelVar.toJSONString();\n\t\t\t\toAppStateData.oSelectionVariant = oSelVars.oNavigationSelVar;\n\t\t\t\toAppStateData.oDefaultedSelectionVariant = oSelVars.oDefaultedSelVar;\n\t\t\t\toAppStateData.bNavSelVarHasDefaultsOnly = oSelVars.bNavSelVarHasDefaultsOnly;\n\n\t\t\t\t// no sap-xapp-state but navType is hybrid, extract the IAppStateData\n\t\t\t\tif (sNavType === NavType.hybrid) {\n\t\t\t\t\tconst successHandlerHybridState = function (iAppStateData: unknown, _ref: unknown, navType: unknown): void {\n\t\t\t\t\t\toAppStateData.iAppState = iAppStateData;\n\t\t\t\t\t\toSubMyDeferred.resolve(oAppStateData, oStartupParameters, navType);\n\t\t\t\t\t};\n\t\t\t\t\tconst failureHandlerHybridState = function (oError: object, _ref: object, navType: string): void {\n\t\t\t\t\t\toSubMyDeferred.reject(oError, _ref, navType);\n\t\t\t\t\t};\n\n\t\t\t\t\tif (iAppStateHybridDeferred !== undefined) {\n\t\t\t\t\t\tiAppStateHybridDeferred.done(successHandlerHybridState);\n\t\t\t\t\t\tiAppStateHybridDeferred.fail(failureHandlerHybridState);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\toSubMyDeferred.resolve(oAppStateData, oSubStartupParameters, sNavType);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tif (sIAppState) {\n\t\t\t// inner app state is available in the AppHash (back navigation); extract the parameter value\n\t\t\tthis._loadAppState(sIAppState, oMyDeferred, NavType.iAppState);\n\t\t} else {\n\t\t\t// no back navigation\n\t\t\tconst bIsXappStateNavigation = oComponentData[\"sap-xapp-state\"] !== undefined;\n\t\t\tif (bIsXappStateNavigation) {\n\t\t\t\tconst that = this;\n\t\t\t\t// inner app state was not found in the AppHash, but xapp state => try to read the xapp state\n\t\t\t\tthis._getAppNavigationServiceAsync()\n\t\t\t\t\t.then(function (oCrossAppNavService: any) {\n\t\t\t\t\t\treturn oCrossAppNavService.getStartupAppState(that.oComponent);\n\t\t\t\t\t})\n\t\t\t\t\t.catch(function () {\n\t\t\t\t\t\tconst oError = oNavHandler._createTechnicalError(\"NavigationHandler.getStartupState.failed\");\n\t\t\t\t\t\toMyDeferred.reject(oError, {}, NavType.xAppState);\n\t\t\t\t\t})\n\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/promise-function-async\n\t\t\t\t\t.then(function (oAppState: ShellAppState): JQuery.Promise<unknown> | undefined {\n\t\t\t\t\t\t// get app state from sap-xapp-state,\n\t\t\t\t\t\t// create a copy, not only a reference, because we want to modify the object\n\t\t\t\t\t\tlet oAppStateData = oAppState.getData();\n\t\t\t\t\t\tlet oError;\n\t\t\t\t\t\tif (oAppStateData) {\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\toAppStateData = JSON.parse(JSON.stringify(oAppStateData));\n\t\t\t\t\t\t\t} catch (x) {\n\t\t\t\t\t\t\t\toError = oNavHandler._createTechnicalError(\"NavigationHandler.AppStateData.parseError\");\n\t\t\t\t\t\t\t\toMyDeferred.reject(oError, oStartupParameters, NavType.xAppState);\n\t\t\t\t\t\t\t\treturn oMyDeferred.promise();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (oAppStateData) {\n\t\t\t\t\t\t\tconst oSelVar = new SelectionVariant(oAppStateData.selectionVariant);\n\n\t\t\t\t\t\t\tconst oSelVars = oNavHandler._splitInboundNavigationParameters(\n\t\t\t\t\t\t\t\toSelVar,\n\t\t\t\t\t\t\t\toStartupParameters,\n\t\t\t\t\t\t\t\taDefaultedParameters\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\toAppStateData.selectionVariant = oSelVars.oNavigationSelVar.toJSONString();\n\t\t\t\t\t\t\toAppStateData.oSelectionVariant = oSelVars.oNavigationSelVar;\n\t\t\t\t\t\t\toAppStateData.oDefaultedSelectionVariant = oSelVars.oDefaultedSelVar;\n\t\t\t\t\t\t\toAppStateData.bNavSelVarHasDefaultsOnly = oSelVars.bNavSelVarHasDefaultsOnly;\n\t\t\t\t\t\t\tconst successHandlerHybridState = function (iAppStateData: unknown, _ref: unknown, navType: unknown): void {\n\t\t\t\t\t\t\t\toAppStateData.iAppState = iAppStateData;\n\t\t\t\t\t\t\t\toMyDeferred.resolve(oAppStateData, oStartupParameters, navType);\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tconst failureHandlerHybridState = function (error: object, _ref: object, navType: string): void {\n\t\t\t\t\t\t\t\terror = oNavHandler._createTechnicalError(\"NavigationHandler.getAppState.failed\");\n\t\t\t\t\t\t\t\toMyDeferred.reject(error, _ref, navType);\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tif (hybridIAppStateKeyParams !== undefined && iAppStateHybridDeferred !== undefined) {\n\t\t\t\t\t\t\t\tiAppStateHybridDeferred.done(successHandlerHybridState);\n\t\t\t\t\t\t\t\tiAppStateHybridDeferred.fail(failureHandlerHybridState);\n\t\t\t\t\t\t\t} else if (oAppStateData[HYBRID_IAPP_STATE_KEY]) {\n\t\t\t\t\t\t\t\tthat._loadAppState(oAppStateData[HYBRID_IAPP_STATE_KEY] as string, hybridDeferred, NavType.hybrid).done(\n\t\t\t\t\t\t\t\t\tsuccessHandlerHybridState\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\toMyDeferred.resolve(oAppStateData, oStartupParameters, NavType.xAppState);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (oStartupParameters) {\n\t\t\t\t\t\t\tparseUrlParams(oStartupParameters, aDefaultedParameters, oMyDeferred, NavType.xAppState);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// sap-xapp-state navigation, but ID has already expired, but URL parameters available\n\t\t\t\t\t\t\toError = oNavHandler._createTechnicalError(\"NavigationHandler.getDataFromAppState.failed\");\n\t\t\t\t\t\t\toMyDeferred.reject(oError, oStartupParameters || {}, NavType.xAppState);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn;\n\t\t\t\t\t})\n\t\t\t\t\t.catch(function () {\n\t\t\t\t\t\tconst oError = oNavHandler._createTechnicalError(\"NavigationHandler._getAppNavigationServiceAsync.failed\");\n\t\t\t\t\t\toMyDeferred.reject(oError, {}, NavType.xAppState);\n\t\t\t\t\t});\n\t\t\t} else if (oStartupParameters) {\n\t\t\t\t// no sap-xapp-state\n\t\t\t\tparseUrlParams(\n\t\t\t\t\toStartupParameters,\n\t\t\t\t\taDefaultedParameters,\n\t\t\t\t\toMyDeferred,\n\t\t\t\t\thybridIAppStateKeyParams !== undefined ? NavType.hybrid : NavType.URLParams\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\t// initial navigation\n\t\t\t\toMyDeferred.resolve({}, {}, NavType.initial);\n\t\t\t}\n\t\t}\n\n\t\treturn oMyDeferred.promise();\n\t}\n\n\t/**\n\t * Sets the application specific technical parameters. Technical parameters will not be added to the selection variant passed to the\n\t * application. As a default the following values are considered as technical parameters:\n\t * <ul>\n\t * <li><code>sap-system</code></li>\n\t * <li><code>sap-ushell-defaultedParameterNames</code></li>\n\t * <li><code>\"hcpApplicationId\"</code></li>\n\t * </ul>.\n\t * @public\n\t * @param aTechnicalParameters List of parameter names to be considered as technical parameters. <code>null</code> or\n\t *        <code>undefined</code> may be used to reset the complete list.\n\t */\n\tsetTechnicalParameters(aTechnicalParameters?: any[]): void {\n\t\tif (!aTechnicalParameters) {\n\t\t\taTechnicalParameters = [];\n\t\t}\n\n\t\tif (!Array.isArray(aTechnicalParameters)) {\n\t\t\tLog.error(\"NavigationHandler: parameter incorrect, array of strings expected\");\n\t\t\tthrow new NavError(\"NavigationHandler.INVALID_INPUT\");\n\t\t}\n\n\t\tthis._aTechnicalParamaters = aTechnicalParameters;\n\t}\n\n\t/**\n\t * Gets the application specific technical parameters. Technical parameters will not be added to the selection variant passed to the\n\t * application. As a default the following values are considered as technical parameters:\n\t * <ul>\n\t * <li><code>sap-system</code></li>\n\t * <li><code>sap-ushell-defaultedParameterNames</code></li>\n\t * <li><code>\"hcpApplicationId\"</code></li>\n\t * </ul>.\n\t * @public\n\t * @returns An Array containing the technical parameters.\n\t */\n\tgetTechnicalParameters(): string[] {\n\t\treturn this._aTechnicalParamaters.concat([]);\n\t}\n\n\t/**\n\t * Checks if the passed parameter is considered as technical parameter.\n\t * @param sParameterName Name of a request parameter, considered as technical parameter.\n\t * @returns Indicates if the parameter is considered as technical parameter or not.\n\t * @private\n\t */\n\t_isTechnicalParameter(sParameterName: string): boolean {\n\t\tif (sParameterName) {\n\t\t\tif (\n\t\t\t\t!(\n\t\t\t\t\tsParameterName === \"sap-ui-fe-variant-id\" ||\n\t\t\t\t\tsParameterName === \"sap-ui-fe-table-variant-id\" ||\n\t\t\t\t\tsParameterName === \"sap-ui-fe-chart-variant-id\" ||\n\t\t\t\t\tsParameterName === \"sap-ui-fe-filterbar-variant-id\"\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tif (sParameterName.toLowerCase().indexOf(\"sap-\") === 0) {\n\t\t\t\t\treturn true;\n\t\t\t\t} else if (this._aTechnicalParamaters.includes(sParameterName)) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t_isFEParameter(sParameterName: string): boolean {\n\t\treturn sParameterName.toLowerCase().indexOf(\"sap-ui-fe\") === 0;\n\t}\n\n\t/**\n\t * Rmoves if the passed parameter is considered as technical parameter.\n\t * @param oSelectionVariant Selection Variant which consists of technical Parameters.\n\t * @returns Selection Variant without technical Parameters.\n\t * @private\n\t */\n\t_removeTechnicalParameters(oSelectionVariant: SelectionVariant): SelectionVariant {\n\t\tlet sPropName, i;\n\t\tconst aSelVarPropNames = oSelectionVariant.getSelectOptionsPropertyNames();\n\t\tfor (i = 0; i < aSelVarPropNames.length; i++) {\n\t\t\tsPropName = aSelVarPropNames[i];\n\t\t\tif (this._isTechnicalParameter(sPropName)) {\n\t\t\t\toSelectionVariant.removeSelectOption(sPropName);\n\t\t\t}\n\t\t}\n\t\treturn oSelectionVariant;\n\t}\n\n\t/**\n\t * Splits the parameters provided during inbound navigation and separates the contextual information between defaulted parameter values and\n\t * navigation parameters.\n\t * @param oSelectionVariant Instance of {@link sap.fe.navigation.SelectionVariant} containing navigation data of\n\t *        the app\n\t * @param oStartupParameters Object containing startup parameters of the app (derived from the component)\n\t * @param aDefaultedParameters Array containing defaulted parameter names\n\t * @returns Object containing two SelectionVariants, one for navigation (oNavigationSelVar) and one for defaulted startup parameters\n\t *          (oDefaultedSelVar), and a flag (bNavSelVarHasDefaultsOnly) indicating whether all parameters were defaulted. The function is\n\t *          handed two objects containing parameters (names and their corresponding values), oSelectionVariant and oStartupParameters. A\n\t *          parameter could be stored in just one of these two objects or in both of them simultaneously. Because of the latter case a\n\t *          parameter could be associated with conflicting values and it is the job of this function to resolve any such conflict. Parameters\n\t *          are assigned to the two returned SelectionVariants, oNavigationSelVar and oDefaultedSelVar, as follows: | parameter NOT in |\n\t *          parameter in | oSelectionVariant | oSelectionVariant ---------------------------------------|------------------ parameter NOT in |\n\t *          nothing to do | Add parameter oStartupParameters | here | (see below) ----------------------------------------------------------\n\t *          parameter in | Add parameter | Conflict resolution oStartupParameters | (see below) | (see below) Add parameter: if parameter in\n\t *          aDefaultedParameters: add parameter to oDefaultedSelVar else: add parameter to oNavigationSelVar Conflict resolution: if parameter\n\t *          in aDefaultedParameters: add parameter value from oSelectionVariant to oNavigationSelVar add parameter value from\n\t *          oStartupParameters to oDefaultedSelVar Note: This case only occurs in UI5 1.32. In later versions UShell stores any defaulted\n\t *          parameter either in oSelectionVariant or oStartupParameters but never simultaneously in both. else: Choose 1 of the following\n\t *          options based on given handling mode (this.sParamHandlingMode). -> add parameter value from oStartupParameters to\n\t *          oNavigationSelVar | -> add parameter value from oAppState.selectionVariant to oNavigationSelVar -> add both parameter values to\n\t *          navigationSelVar If navigationSelVar is still empty at the end of execution, navigationSelVar is replaced by a copy of\n\t *          oDefaultedSelVar and the flag bNavSelVarHasDefaultsOnly is set to true. The selection variant oDefaultedSelVar itself is always\n\t *          returned as is.\n\t * @private\n\t */\n\t_splitInboundNavigationParameters(\n\t\toSelectionVariant: SelectionVariant,\n\t\toStartupParameters: Record<string, any>,\n\t\taDefaultedParameters: any[]\n\t): {\n\t\toNavigationSelVar: SelectionVariant;\n\t\toDefaultedSelVar: SelectionVariant;\n\t\tbNavSelVarHasDefaultsOnly: boolean;\n\t} {\n\t\tif (!Array.isArray(aDefaultedParameters)) {\n\t\t\tthrow new NavError(\"NavigationHandler.INVALID_INPUT\");\n\t\t}\n\n\t\tlet sPropName, i;\n\t\t// First we do some parsing of the StartUp Parameters.\n\t\tconst oStartupParametersAdjusted: { [key: string]: any } = {};\n\t\tfor (sPropName in oStartupParameters) {\n\t\t\tif (!oStartupParameters.hasOwnProperty(sPropName)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// if (sPropName === SAP_SYSTEM_PROPERTY || sPropName === DEFAULTED_PARAMETER_PROPERTY) {\n\t\t\tif (this._isTechnicalParameter(sPropName) || this._isFEParameter(sPropName) || sPropName === HYBRID_IAPP_STATE_KEY) {\n\t\t\t\t// Do not add the SAP system parameter to the selection variant as it is a technical parameter\n\t\t\t\t// not relevant for the selection variant.\n\t\t\t\t// Do not add the startup parameter for default values to the selection variant. The information, which parameters\n\t\t\t\t// are defaulted, is available in the defaulted selection variant.\n\t\t\t\t// In case, FE Parameters we shall skip it.(the application needs to fetch it from URL params)\n\t\t\t\t// Skip the hybridIAppStateKey present as part of 'Hybrid' navigation type not relevant for the selection variant\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// We support parameters as a map with strings and as a map with value arrays\n\t\t\tif (typeof oStartupParameters[sPropName] === \"string\") {\n\t\t\t\toStartupParametersAdjusted[sPropName] = oStartupParameters[sPropName];\n\t\t\t} else if (Array.isArray(oStartupParameters[sPropName]) && oStartupParameters[sPropName].length === 1) {\n\t\t\t\toStartupParametersAdjusted[sPropName] = oStartupParameters[sPropName][0]; // single-valued parameters\n\t\t\t} else if (Array.isArray(oStartupParameters[sPropName]) && oStartupParameters[sPropName].length > 1) {\n\t\t\t\toStartupParametersAdjusted[sPropName] = oStartupParameters[sPropName]; // multi-valued parameters\n\t\t\t} else {\n\t\t\t\tthrow new NavError(\"NavigationHandler.INVALID_INPUT\");\n\t\t\t}\n\t\t}\n\n\t\t// Construct two selection variants for defaults and navigation to be returned by the function.\n\t\tconst oDefaultedSelVar = new SelectionVariant();\n\t\tconst oNavigationSelVar = new SelectionVariant();\n\n\t\tconst aSelVarPropNames = oSelectionVariant.getParameterNames().concat(oSelectionVariant.getSelectOptionsPropertyNames());\n\t\tfor (i = 0; i < aSelVarPropNames.length; i++) {\n\t\t\tsPropName = aSelVarPropNames[i];\n\t\t\tif (sPropName in oStartupParametersAdjusted) {\n\t\t\t\t// Resolve conflict.\n\t\t\t\tif (aDefaultedParameters.includes(sPropName)) {\n\t\t\t\t\toNavigationSelVar.massAddSelectOption(sPropName, oSelectionVariant.getValue(sPropName)!);\n\t\t\t\t\tthis._addParameterValues(oDefaultedSelVar, sPropName, \"I\", \"EQ\", oStartupParametersAdjusted[sPropName]);\n\t\t\t\t} else {\n\t\t\t\t\tswitch (this.sParamHandlingMode) {\n\t\t\t\t\t\tcase ParamHandlingMode.SelVarWins:\n\t\t\t\t\t\t\toNavigationSelVar.massAddSelectOption(sPropName, oSelectionVariant.getValue(sPropName)!);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase ParamHandlingMode.URLParamWins:\n\t\t\t\t\t\t\tthis._addParameterValues(oNavigationSelVar, sPropName, \"I\", \"EQ\", oStartupParametersAdjusted[sPropName]);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase ParamHandlingMode.InsertInSelOpt:\n\t\t\t\t\t\t\toNavigationSelVar.massAddSelectOption(sPropName, oSelectionVariant.getValue(sPropName)!);\n\t\t\t\t\t\t\tthis._addParameterValues(oNavigationSelVar, sPropName, \"I\", \"EQ\", oStartupParametersAdjusted[sPropName]);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tthrow new NavError(\"NavigationHandler.INVALID_INPUT\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (aDefaultedParameters.includes(sPropName)) {\n\t\t\t\t// parameter only in SelVar\n\t\t\t\toDefaultedSelVar.massAddSelectOption(sPropName, oSelectionVariant.getValue(sPropName)!);\n\t\t\t} else {\n\t\t\t\toNavigationSelVar.massAddSelectOption(sPropName, oSelectionVariant.getValue(sPropName)!);\n\t\t\t}\n\t\t}\n\n\t\tfor (sPropName in oStartupParametersAdjusted) {\n\t\t\t// The case where the parameter appears twice has already been taken care of above so we skip it here.\n\t\t\tif (aSelVarPropNames.includes(sPropName)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (aDefaultedParameters.includes(sPropName)) {\n\t\t\t\tthis._addParameterValues(oDefaultedSelVar, sPropName, \"I\", \"EQ\", oStartupParametersAdjusted[sPropName]);\n\t\t\t} else {\n\t\t\t\tthis._addParameterValues(oNavigationSelVar, sPropName, \"I\", \"EQ\", oStartupParametersAdjusted[sPropName]);\n\t\t\t}\n\t\t}\n\n\t\t// the selection variant used for navigation should be filled with defaults in case that only defaults exist\n\t\tlet bNavSelVarHasDefaultsOnly = false;\n\t\tif (oNavigationSelVar.isEmpty()) {\n\t\t\tbNavSelVarHasDefaultsOnly = true;\n\t\t\tconst aPropNames = oDefaultedSelVar.getSelectOptionsPropertyNames();\n\t\t\tfor (i = 0; i < aPropNames.length; i++) {\n\t\t\t\toNavigationSelVar.massAddSelectOption(aPropNames[i], oDefaultedSelVar.getValue(aPropNames[i])!);\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\toNavigationSelVar: oNavigationSelVar,\n\t\t\toDefaultedSelVar: oDefaultedSelVar,\n\t\t\tbNavSelVarHasDefaultsOnly: bNavSelVarHasDefaultsOnly\n\t\t};\n\t}\n\n\t_addParameterValues(\n\t\toSelVariant: SelectionVariant,\n\t\tsPropName: string,\n\t\tsSign: string,\n\t\tsOption: string,\n\t\toValues: string | string[]\n\t): void {\n\t\tif (Array.isArray(oValues)) {\n\t\t\tfor (let i = 0; i < oValues.length; i++) {\n\t\t\t\toSelVariant.addSelectOption(sPropName, sSign, sOption, oValues[i]);\n\t\t\t}\n\t\t} else {\n\t\t\toSelVariant.addSelectOption(sPropName, sSign, sOption, oValues);\n\t\t}\n\t}\n\n\t/**\n\t * Changes the URL according to the current sAppStateKey. As an reaction route change event will be triggered.\n\t * @param sAppStateKey The new app state key.\n\t * @public\n\t */\n\treplaceHash(sAppStateKey: string): void {\n\t\tconst oHashChanger = this.oRouter.oHashChanger ? this.oRouter.oHashChanger : HashChanger.getInstance();\n\t\tconst sAppHashOld = oHashChanger.getHash();\n\t\t/*\n\t\t * use .getHash() here instead of .getAppHash() to also be able dealing with environments where only SAPUI5 is loaded and the UShell is\n\t\t * not initialized properly.\n\t\t */\n\t\tconst sAppHashNew = this._replaceInnerAppStateKey(sAppHashOld, sAppStateKey);\n\t\toHashChanger.replaceHash(sAppHashNew);\n\t}\n\n\t/**\n\t * Changes the URL according to the current app state and stores the app state for later retrieval.\n\t * @param mInnerAppData Object containing the current state of the app\n\t * @param bImmediateHashReplace If set to false, the inner app hash will not be replaced until storing is successful; do not\n\t *        set to false if you cannot react to the resolution of the Promise, for example, when calling the beforeLinkPressed event\n\t * @param bSkipHashReplace If set to true, the inner app hash will not be replaced in the storeInnerAppStateAsync. Also the bImmediateHashReplace\n\t * \t\t  will be ignored.\n\t * @returns A Promise object to monitor when all the actions of the function have been executed; if the execution is successful, the\n\t *          app state key is returned; if an error occurs, an object of type {@link sap.fe.navigation.NavError} is\n\t *          returned\n\t * @public\n\t * @example <code>\n\t * sap.ui.define([\"sap/fe/navigation/NavigationHandler\"], function (NavigationHandler) {\n\t * \tvar oNavigationHandler = new NavigationHandler(oController);\n\t * \tvar mInnerAppData = {\n\t * \t\tselectionVariant : oSmartFilterBar.getDataSuiteFormat(),\n\t * \t\ttableVariantId : oSmartTable.getCurrentVariantId(),\n\t * \t\tcustomData : oMyCustomData\n\t * \t};\n\t *\n\t * \tvar oStoreInnerAppStatePromise = oNavigationHandler.storeInnerAppStateAsync(mInnerAppData);\n\t *\n\t * \toStoreInnerAppStatePromise.done(function(sAppStateKey){\n\t * \t\t//your inner app state is saved now, sAppStateKey was added to URL\n\t * \t\t//perform actions that must run after save\n\t * \t});\n\t *\n\t * \toStoreInnerAppStatePromise.fail(function(oError){\n\t * \t\t//some error handling\n\t * \t});\n\t * });\n\t * </code>\n\t */\n\tstoreInnerAppStateAsync(\n\t\tmInnerAppData: InnerAppData,\n\t\tbImmediateHashReplace?: boolean,\n\t\tbSkipHashReplace?: boolean\n\t): jQuery.Promise<string> {\n\t\tif (typeof bImmediateHashReplace !== \"boolean\") {\n\t\t\tbImmediateHashReplace = true; // default\n\t\t}\n\t\tconst oNavHandler = this;\n\t\tconst oMyDeferred = jQuery.Deferred();\n\n\t\tconst fnReplaceHash = function (sAppStateKey: string): void {\n\t\t\tconst oHashChanger = oNavHandler.oRouter.oHashChanger ? oNavHandler.oRouter.oHashChanger : HashChanger.getInstance();\n\t\t\tconst sAppHashOld = oHashChanger.getHash();\n\t\t\t/*\n\t\t\t * use .getHash() here instead of .getAppHash() to also be able dealing with environments where only SAPUI5 is loaded and the UShell\n\t\t\t * is not initialized properly.\n\t\t\t */\n\t\t\tconst sAppHashNew = oNavHandler._replaceInnerAppStateKey(sAppHashOld, sAppStateKey);\n\t\t\toHashChanger.replaceHash(sAppHashNew);\n\t\t};\n\n\t\t// in case mInnerAppState is empty, do not overwrite the last saved state\n\t\tif (isEmptyObject(mInnerAppData as object)) {\n\t\t\toMyDeferred.resolve(\"\");\n\t\t\treturn oMyDeferred.promise();\n\t\t}\n\n\t\t// check if we already saved the same data\n\t\tconst sAppStateKeyCached = this._oLastSavedInnerAppData.sAppStateKey;\n\n\t\tconst bInnerAppDataEqual = JSON.stringify(mInnerAppData) === JSON.stringify(this._oLastSavedInnerAppData.oAppData);\n\t\tif (bInnerAppDataEqual && sAppStateKeyCached) {\n\t\t\t// passed inner app state found in cache\n\t\t\tthis._oLastSavedInnerAppData.iCacheHit++;\n\n\t\t\t// replace inner app hash with cached appStateKey in url (just in case the app has changed the hash in meantime)\n\t\t\tfnReplaceHash(sAppStateKeyCached);\n\t\t\toMyDeferred.resolve(sAppStateKeyCached);\n\t\t\treturn oMyDeferred.promise();\n\t\t}\n\n\t\t// passed inner app state not found in cache\n\t\tthis._oLastSavedInnerAppData.iCacheMiss++;\n\n\t\tconst fnOnAfterSave = function (sAppStateKey: string): void {\n\t\t\t// replace inner app hash with new appStateKey in url\n\t\t\tif (!bSkipHashReplace && !bImmediateHashReplace) {\n\t\t\t\tfnReplaceHash(sAppStateKey);\n\t\t\t}\n\n\t\t\t// remember last saved state\n\t\t\toNavHandler._oLastSavedInnerAppData.oAppData = mInnerAppData;\n\t\t\toNavHandler._oLastSavedInnerAppData.sAppStateKey = sAppStateKey;\n\t\t\toMyDeferred.resolve(sAppStateKey);\n\t\t};\n\n\t\tconst fnOnError = function (oError: unknown): void {\n\t\t\toMyDeferred.reject(oError);\n\t\t};\n\n\t\tthis._saveAppStateAsync(mInnerAppData, fnOnAfterSave, fnOnError)\n\t\t\t.then(function (sAppStateKey: any) {\n\t\t\t\t/* Note that _sapAppState may return 'undefined' in case that the parsing has failed. In this case, we should not trigger the replacement\n\t\t\t\t * of the App Hash with the generated key, as the container was not written before. Note as well that the error handling has already\n\t\t\t\t * happened before by making the oMyDeferred promise fail (see fnOnError above).\n\t\t\t\t */\n\t\t\t\tif (sAppStateKey !== undefined) {\n\t\t\t\t\t// replace inner app hash with new appStateKey in url\n\t\t\t\t\t// note: we do not wait for the save to be completed: this asynchronously behaviour is necessary if\n\t\t\t\t\t// this method is called e.g. in a onLinkPressed event with no possibility to wait for the promise resolution\n\t\t\t\t\tif (!bSkipHashReplace && bImmediateHashReplace) {\n\t\t\t\t\t\tfnReplaceHash(sAppStateKey);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t})\n\t\t\t.catch(function () {\n\t\t\t\tLog.error(\"NavigationHandler._saveAppStateAsync failed\");\n\t\t\t});\n\n\t\treturn oMyDeferred.promise();\n\t}\n\n\t/**\n\t * Changes the URL according to the current app state and stores the app state for later retrieval.\n\t * @param mInnerAppData Object containing the current state of the app\n\t * @param bImmediateHashReplace If set to false, the inner app hash will not be replaced until storing is successful; do not\n\t *        set to false if you cannot react to the resolution of the Promise, for example, when calling the beforeLinkPressed event\n\t * @returns A Promise object to monitor when all the actions of the function have been executed; if the execution is successful, the\n\t *          app state key is returned; if an error occurs, an object of type {@link sap.fe.navigation.NavError} is\n\t *          returned\n\t * @public\n\t * @example <code>\n\t * sap.ui.define([\"sap/fe/navigation/NavigationHandler\"], function (NavigationHandler) {\n\t * \tvar oNavigationHandler = new NavigationHandler(oController);\n\t * \tvar mInnerAppData = {\n\t * \t\tselectionVariant : oSmartFilterBar.getDataSuiteFormat(),\n\t * \t\ttableVariantId : oSmartTable.getCurrentVariantId(),\n\t * \t\tcustomData : oMyCustomData\n\t * \t};\n\t *\n\t * \tvar oStoreInnerAppStatePromise = oNavigationHandler.storeInnerAppState(mInnerAppData);\n\t *\n\t * \toStoreInnerAppStatePromise.done(function(sAppStateKey){\n\t * \t\t//your inner app state is saved now, sAppStateKey was added to URL\n\t * \t\t//perform actions that must run after save\n\t * \t});\n\t *\n\t * \toStoreInnerAppStatePromise.fail(function(oError){\n\t * \t\t//some error handling\n\t * \t});\n\t * });\n\t * </code>\n\t * @deprecatedsince 1.104\n\t * @deprecated Use the {@link sap.fe.navigation.NavigationHandler.storeInnerAppStateAsync} instead.\n\t */\n\tstoreInnerAppState(mInnerAppData: InnerAppData, bImmediateHashReplace?: boolean): jQuery.Promise<string> {\n\t\tLog.error(\n\t\t\t\"Deprecated API call of 'sap.fe.navigation.NavigationHandler.storeInnerAppState'. Please use 'storeInnerAppStateAsync' instead\",\n\t\t\tundefined,\n\t\t\t\"sap.fe.navigation.NavigationHandler\"\n\t\t);\n\t\tif (typeof bImmediateHashReplace !== \"boolean\") {\n\t\t\tbImmediateHashReplace = true; // default\n\t\t}\n\t\tconst oNavHandler = this;\n\t\tconst oMyDeferred = jQuery.Deferred();\n\n\t\tconst fnReplaceHash = function (sAppStateKey: string): void {\n\t\t\tconst oHashChanger = oNavHandler.oRouter.oHashChanger ? oNavHandler.oRouter.oHashChanger : HashChanger.getInstance();\n\t\t\tconst sAppHashOld = oHashChanger.getHash();\n\t\t\t/*\n\t\t\t * use .getHash() here instead of .getAppHash() to also be able dealing with environments where only SAPUI5 is loaded and the UShell\n\t\t\t * is not initialized properly.\n\t\t\t */\n\t\t\tconst sAppHashNew = oNavHandler._replaceInnerAppStateKey(sAppHashOld, sAppStateKey);\n\t\t\toHashChanger.replaceHash(sAppHashNew);\n\t\t};\n\n\t\t// in case mInnerAppState is empty, do not overwrite the last saved state\n\t\tif (isEmptyObject(mInnerAppData as object)) {\n\t\t\toMyDeferred.resolve(\"\");\n\t\t\treturn oMyDeferred.promise();\n\t\t}\n\n\t\t// check if we already saved the same data\n\t\tconst sAppStateKeyCached = this._oLastSavedInnerAppData.sAppStateKey;\n\n\t\tconst bInnerAppDataEqual = JSON.stringify(mInnerAppData) === JSON.stringify(this._oLastSavedInnerAppData.oAppData);\n\t\tif (bInnerAppDataEqual && sAppStateKeyCached) {\n\t\t\t// passed inner app state found in cache\n\t\t\tthis._oLastSavedInnerAppData.iCacheHit++;\n\n\t\t\t// replace inner app hash with cached appStateKey in url (just in case the app has changed the hash in meantime)\n\t\t\tfnReplaceHash(sAppStateKeyCached);\n\t\t\toMyDeferred.resolve(sAppStateKeyCached);\n\t\t\treturn oMyDeferred.promise();\n\t\t}\n\n\t\t// passed inner app state not found in cache\n\t\tthis._oLastSavedInnerAppData.iCacheMiss++;\n\n\t\tconst fnOnAfterSave = function (sAppStateKey: any): void {\n\t\t\t// replace inner app hash with new appStateKey in url\n\t\t\tif (!bImmediateHashReplace) {\n\t\t\t\tfnReplaceHash(sAppStateKey);\n\t\t\t}\n\n\t\t\t// remember last saved state\n\t\t\toNavHandler._oLastSavedInnerAppData.oAppData = mInnerAppData;\n\t\t\toNavHandler._oLastSavedInnerAppData.sAppStateKey = sAppStateKey;\n\t\t\toMyDeferred.resolve(sAppStateKey);\n\t\t};\n\n\t\tconst fnOnError = function (oError: any): void {\n\t\t\toMyDeferred.reject(oError);\n\t\t};\n\n\t\tconst sAppStateKey = this._saveAppState(mInnerAppData, fnOnAfterSave, fnOnError);\n\t\t/*\n\t\t * Note that _sapAppState may return 'undefined' in case that the parsing has failed. In this case, we should not trigger the replacement\n\t\t * of the App Hash with the generated key, as the container was not written before. Note as well that the error handling has already\n\t\t * happened before by making the oMyDeferred promise fail (see fnOnError above).\n\t\t */\n\t\tif (sAppStateKey !== undefined) {\n\t\t\t// replace inner app hash with new appStateKey in url\n\t\t\t// note: we do not wait for the save to be completed: this asynchronously behaviour is necessary if\n\t\t\t// this method is called e.g. in a onLinkPressed event with no possibility to wait for the promise resolution\n\t\t\tif (bImmediateHashReplace) {\n\t\t\t\tfnReplaceHash(sAppStateKey);\n\t\t\t}\n\t\t}\n\n\t\treturn oMyDeferred.promise();\n\t}\n\n\t/**\n\t * Changes the URL according to the current app state and stores the app state for later retrieval.\n\t * @param mInnerAppData Object containing the current state of the app\n\t * @param bImmediateHashReplace If set to false, the inner app hash will not be replaced until storing is successful; do not\n\t *        set to false if you cannot react to the resolution of the Promise, for example, when calling the beforeLinkPressed event. <b>Note:</b>If\n\t *        not provided it will be treated as set to false. <b>Note:</b>If set to true, the calling instance has to ensure that a follow-on\n\t *        call to <code>replaceHash</code> will take place!\n\t * @returns An object containing the appStateId and a promise object to monitor when all the actions of the function have been\n\t *          executed; Please note that the appStateKey may be undefined or empty.\n\t * @example <code>\n\t * sap.ui.define([\"sap/fe/navigation/NavigationHandler\"], function (NavigationHandler) {\n\t * \tvar oNavigationHandler = new NavigationHandler(oController);\n\t * \tvar mInnerAppData = {\n\t * \t\tselectionVariant : oSmartFilterBar.getDataSuiteFormat(),\n\t * \t\ttableVariantId : oSmartTable.getCurrentVariantId(),\n\t * \t\tcustomData : oMyCustomData\n\t * \t};\n\t *\n\t * \tvar oStoreInnerAppState = storeInnerAppStateWithNonDelayedReturn(mInnerAppData);\n\t * \tvar sAppStateKey = oStoreInnerAppState.appStateKey;\n\t * \tif (!sAppStateKey) {\n\t *    // no appStateKey obtained...\n\t * \t};\n\t * \tvar oStoreInnerAppStatePromise = oStoreInnerAppState.promise;\n\t *\n\t * \toStoreInnerAppStatePromise.done(function(sAppStateKey){\n\t * \t\t//your inner app state is saved now, sAppStateKey was added to URL\n\t * \t\t//perform actions that must run after save\n\t * \t});\n\t *\n\t * \toStoreInnerAppStatePromise.fail(function(oError){\n\t * \t\t//some error handling\n\t * \t});\n\t * });\n\t * </code>\n\t * @public\n\t * @deprecatedsince 1.104\n\t * @deprecated Use the {@link sap.fe.navigation.NavigationHandler.storeInnerAppStateAsync} instead.\n\t */\n\tstoreInnerAppStateWithImmediateReturn(mInnerAppData: InnerAppData, bImmediateHashReplace?: boolean): object {\n\t\tLog.error(\n\t\t\t\"Deprecated API call of 'sap.fe.navigation.NavigationHandler.storeInnerAppStateWithImmediateReturn'. Please use 'storeInnerAppStateAsync' instead\",\n\t\t\tundefined,\n\t\t\t\"sap.fe.navigation.NavigationHandler\"\n\t\t);\n\t\tif (typeof bImmediateHashReplace !== \"boolean\") {\n\t\t\tbImmediateHashReplace = false; // default\n\t\t}\n\n\t\tconst oNavHandler = this;\n\t\tconst oAppStatePromise = jQuery.Deferred();\n\n\t\t// in case mInnerAppState is empty, do not overwrite the last saved state\n\t\tif (isEmptyObject(mInnerAppData)) {\n\t\t\treturn {\n\t\t\t\tappStateKey: \"\",\n\t\t\t\tpromise: oAppStatePromise.resolve(\"\")\n\t\t\t};\n\t\t}\n\n\t\t// check if we already saved the same data\n\t\tconst sAppStateKeyCached = this._oLastSavedInnerAppData.sAppStateKey;\n\n\t\tconst bInnerAppDataEqual = JSON.stringify(mInnerAppData) === JSON.stringify(this._oLastSavedInnerAppData.oAppData);\n\t\tif (bInnerAppDataEqual && sAppStateKeyCached) {\n\t\t\t// passed inner app state found in cache\n\t\t\tthis._oLastSavedInnerAppData.iCacheHit++;\n\t\t\treturn {\n\t\t\t\tappStateKey: sAppStateKeyCached,\n\t\t\t\tpromise: oAppStatePromise.resolve(sAppStateKeyCached)\n\t\t\t};\n\t\t}\n\n\t\t// passed inner app state not found in cache\n\t\tthis._oLastSavedInnerAppData.iCacheMiss++;\n\n\t\tconst fnOnAfterSave = function (sAppStateKey: any): void {\n\t\t\t// replace inner app hash with new appStateKey in url\n\t\t\tif (!bImmediateHashReplace) {\n\t\t\t\toNavHandler.replaceHash(sAppStateKey);\n\t\t\t}\n\n\t\t\t// remember last saved state\n\t\t\toNavHandler._oLastSavedInnerAppData.oAppData = mInnerAppData;\n\t\t\toNavHandler._oLastSavedInnerAppData.sAppStateKey = sAppStateKey;\n\t\t\toAppStatePromise.resolve(sAppStateKey);\n\t\t};\n\n\t\tconst fnOnError = function (oError: any): void {\n\t\t\toAppStatePromise.reject(oError);\n\t\t};\n\n\t\tconst sAppStateKey = this._saveAppState(mInnerAppData, fnOnAfterSave, fnOnError);\n\t\t/*\n\t\t * Note that _sapAppState may return 'undefined' in case that the parsing has failed. In this case, we should not trigger the replacement\n\t\t * of the App Hash with the generated key, as the container was not written before. Note as well that the error handling has already\n\t\t * happened before by making the oMyDeferred promise fail (see fnOnError above).\n\t\t */\n\t\t// if (sAppStateKey !== undefined) {\n\t\t// //replace inner app hash with new appStateKey in url\n\t\t// //note: we do not wait for the save to be completed: this asynchronously behaviour is necessary if\n\t\t// //this method is called e.g. in a onLinkPressed event with no possibility to wait for the promise resolution\n\t\t// if (bImmediateHashReplace) {\n\t\t// fnReplaceHash(sAppStateKey);\n\t\t// }\n\t\t// }\n\t\treturn {\n\t\t\tappStateKey: sAppStateKey,\n\t\t\tpromise: oAppStatePromise.promise()\n\t\t};\n\t}\n\n\t/**\n\t * Processes navigation-related tasks related to beforePopoverOpens event handling for the SmartLink control and returns a Promise object. In\n\t * particular, the following tasks are performed before the SmartLink popover can be opened:\n\t * <ul>\n\t * <li>If <code>mInnerAppData</code> is provided, this inner app state is saved for back navigation at a later time.</li>\n\t * <li>The table event parameters (semantic attributes) and the selection variant data are combined by calling the method\n\t * {@link #.mixAttributesAndSelectionVariant mixAttributesAndSelectionVariant}.</li>\n\t * <li>The combined data is saved as the cross app state to be handed over to the target app, and the corresponding sap-xapp-state key is set\n\t * in the URL.</li>\n\t * <li>All single selections (\"including equal\") of the combined selection data are passed to the SmartLink popover as semantic attributes.</li>\n\t * <li>The method <code>oTableEventParameters.open()</code> is called. Note that this does not really open the popover, but the SmartLink\n\t * control proceeds with firing the event <code>navigationTargetsObtained</code>.</li>\n\t * </ul>.\n\t * <br>\n\t * <b>Node:</b> If the <code>oExternalAppData</code> parameter is not supplied, the external app data will be calculated based on\n\t * the <code>mInnerAppData</code> data.<br>.\n\t * @param oTableEventParameters The parameters made available by the SmartTable control when the SmartLink control has been clicked,\n\t *        an instance of a PopOver object\n\t * @param sSelectionVariant Stringified JSON object as returned, for example, from getDataSuiteFormat() of the SmartFilterBar control\n\t * @param mInnerAppData Object containing the current state of the app. If provided, opening the Popover is deferred until the\n\t *        inner app data is saved in a consistent way.\n\t * @param oExternalAppData Object containing the state which will be passed to the target screen.\n\t * @param oExternalAppData.selectionVariant Object containing selectionVariant, which will be passed to the target screen. If not\n\t *        set the sSelectionVariant will be used.\n\t * @param oExternalAppData.presentationVariant Object containing the current ui presentationVariant of the app, which will be\n\t *        passed to the target screen\n\t * @param oExternalAppData.valueTexts Object containing value descriptions, which will be passed to the target screen\n\t * @returns A Promise object to monitor when all actions of the function have been executed; if the execution is successful, the\n\t *          modified oTableEventParameters is returned; if an error occurs, an error object of type\n\t *          {@link sap.fe.navigation.NavError} is returned\n\t * @public\n\t * @example <code>\n\t * sap.ui.define([\"sap/fe/navigation/NavigationHandler\", \"sap/fe/navigation/SelectionVariant\"], function (NavigationHandler, SelectionVariant) {\n\t * \t//event handler for the smart link event \"beforePopoverOpens\"\n\t * \t\tonBeforePopoverOpens: function(oEvent) {\n\t * \t\t\tvar oTableEventParameters = oEvent.getParameters();\n\t *\n\t * \t\t\tvar mInnerAppData = {\n\t * \t\t\t\tselectionVariant : oSmartFilterBar.getDataSuiteFormat(),\n\t * \t\t\t\ttableVariantId : oSmartTable.getCurrentVariantId(),\n\t * \t\t\t\tcustomData : oMyCustomData\n\t * \t\t\t};\n\t *\n\t * \t\t\tvar oSelectionVariant = new SelectionVariant();\n\t * \t\t\toSelectionVariant.addSelectOption(\"CompanyCode\", \"I\", \"EQ\", \"0001\");\n\t * \t\t\toSelectionVariant.addSelectOption(\"Customer\", \"I\", \"EQ\", \"C0001\");\n\t * \t\t\tvar sSelectionVariant= oSelectionVariant.toJSONString();\n\t *\n\t * \t\t\tvar oNavigationHandler = new NavigationHandler(oController);\n\t * \t\t\tvar oSmartLinkPromise = oNavigationHandler.processBeforeSmartLinkPopoverOpens(oTableEventParameters, sSelectionVariant, mInnerAppData);\n\t *\n\t * \t\t\toSmartLinkPromise.done(function(oTableEventParameters){\n\t * \t\t\t\t// here you can add coding that should run after all app states are saved and the semantic attributes are set\n\t * \t\t\t});\n\t *\n\t * \t\t\toSmartLinkPromise.fail(function(oError){\n\t * \t\t\t//some error handling\n\t * \t\t\t});\n\t * \t\t};\n\t * \t});\n\t * </code>\n\t */\n\t// eslint-disable-next-line @typescript-eslint/promise-function-async\n\tprocessBeforeSmartLinkPopoverOpens(\n\t\toTableEventParameters: any,\n\t\tsSelectionVariant: string,\n\t\tmInnerAppData?: InnerAppData,\n\t\toExternalAppData?: {\n\t\t\tselectionVariant?: object;\n\t\t\tpresentationVariant?: object;\n\t\t\tvalueTexts?: object;\n\t\t}\n\t): JQuery.Promise<string[], unknown, unknown> {\n\t\tconst oMyDeferred = jQuery.Deferred() as JQuery.Deferred<string[], unknown, unknown>;\n\t\tlet mSemanticAttributes: any;\n\t\tif (oTableEventParameters != undefined) {\n\t\t\tmSemanticAttributes = oTableEventParameters.semanticAttributes;\n\t\t}\n\n\t\tlet oXAppDataObj: any;\n\t\tconst oNavHandler: NavigationHandler = this;\n\n\t\tif (oExternalAppData === undefined) {\n\t\t\toXAppDataObj = {};\n\t\t} else {\n\t\t\toXAppDataObj = oExternalAppData;\n\t\t}\n\n\t\tconst fnStoreXappAndCallOpen = function (mSubSemanticAttributes: any, sSubSelectionVariant: any): void {\n\t\t\t// mix the semantic attributes (e.g. from the row line) with the selection variant (e.g. from the filter bar)\n\t\t\tsSubSelectionVariant = oXAppDataObj.selectionVariant || sSubSelectionVariant || \"{}\";\n\n\t\t\tconst iSuppressionBehavior = SuppressionBehavior.raiseErrorOnNull | SuppressionBehavior.raiseErrorOnUndefined;\n\t\t\t/*\n\t\t\t * compatiblity: Until SAPUI5 1.28.5 (or even later) the Smart Link in a Smart Table is filtering all null- and undefined values.\n\t\t\t * Therefore, mSemanticAttributes are already reduced appropriately -- this does not need to be done by\n\t\t\t * mixAttributesAndSelectionVariant again. To ensure that we still have the old behaviour (i.e. an NavError is raised in case that\n\t\t\t * behaviour of the Smart Link control has changed), the \"old\" Suppression Behaviour is retained.\n\t\t\t */\n\n\t\t\tconst oMixedSelVar = oNavHandler.mixAttributesAndSelectionVariant(\n\t\t\t\tmSubSemanticAttributes,\n\t\t\t\tsSubSelectionVariant,\n\t\t\t\tiSuppressionBehavior\n\t\t\t);\n\t\t\tsSubSelectionVariant = oMixedSelVar.toJSONString();\n\n\t\t\t// enrich the semantic attributes with single selections from the selection variant\n\t\t\tlet oTmpData: any = {};\n\t\t\toTmpData.selectionVariant = oMixedSelVar.toJSONObject();\n\n\t\t\toTmpData = oNavHandler._removeMeasureBasedInformation(oTmpData);\n\n\t\t\toTmpData = oNavHandler._checkIsPotentiallySensitive(oTmpData);\n\n\t\t\tmSubSemanticAttributes = oTmpData.selectionVariant\n\t\t\t\t? oNavHandler._getURLParametersFromSelectionVariant(new SelectionVariant(oTmpData.selectionVariant))\n\t\t\t\t: {};\n\n\t\t\tconst fnOnContainerSave = function (sAppStateKey: any): void {\n\t\t\t\tif (oTableEventParameters === undefined) {\n\t\t\t\t\t// If oTableEventParameters is undefined, return both semanticAttributes and appStatekey\n\t\t\t\t\toMyDeferred.resolve(mSubSemanticAttributes, sAppStateKey);\n\t\t\t\t} else {\n\t\t\t\t\t// set the stored data in popover and call open()\n\t\t\t\t\toTableEventParameters.setSemanticAttributes(mSubSemanticAttributes);\n\t\t\t\t\toTableEventParameters.setAppStateKey(sAppStateKey);\n\t\t\t\t\toTableEventParameters.open(); // >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Note that \"open\" does not open the popover, but proceeds\n\t\t\t\t\t// with firing the onNavTargetsObtained event.\n\t\t\t\t\toMyDeferred.resolve(oTableEventParameters);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tconst fnOnError = function (oError: any): void {\n\t\t\t\toMyDeferred.reject(oError);\n\t\t\t};\n\n\t\t\toXAppDataObj.selectionVariant = sSubSelectionVariant;\n\n\t\t\toXAppDataObj = oNavHandler._removeMeasureBasedInformation(oXAppDataObj);\n\n\t\t\toNavHandler._saveAppStateAsync(oXAppDataObj, fnOnContainerSave, fnOnError);\n\t\t};\n\n\t\tif (mInnerAppData) {\n\t\t\tconst oStoreInnerAppStatePromise = this.storeInnerAppStateAsync(mInnerAppData, true);\n\n\t\t\t// if the inner app state was successfully stored, store also the xapp-state\n\t\t\toStoreInnerAppStatePromise.done(function () {\n\t\t\t\tfnStoreXappAndCallOpen(mSemanticAttributes, sSelectionVariant);\n\t\t\t});\n\n\t\t\toStoreInnerAppStatePromise.fail(function (oError: any) {\n\t\t\t\toMyDeferred.reject(oError);\n\t\t\t});\n\t\t} else {\n\t\t\t// there is no inner app state to save, just put the parameters into xapp-state\n\t\t\tfnStoreXappAndCallOpen(mSemanticAttributes, sSelectionVariant);\n\t\t}\n\n\t\treturn oMyDeferred.promise();\n\t}\n\n\t/**\n\t * Processes selectionVariant string and returns a Promise object (semanticAttributes and AppStateKey).\n\t * @param sSelectionVariant Stringified JSON object\n\t * @returns A Promise object to monitor when all actions of the function have been executed; if the execution is successful, the\n\t *          semanticAttributes as well as the appStateKey are returned; if an error occurs, an error object of type\n\t *          {@link sap.fe.navigation.NavError} is returned\n\t * <br>\n\t * @example <code>\n\t * sap.ui.define([\"sap/fe/navigation/NavigationHandler\", \"sap/fe/navigation/SelectionVariant\"], function (NavigationHandler, SelectionVariant) {\n\t * \t\tvar oSelectionVariant = new SelectionVariant();\n\t * \t\toSelectionVariant.addSelectOption(\"CompanyCode\", \"I\", \"EQ\", \"0001\");\n\t * \t\toSelectionVariant.addSelectOption(\"Customer\", \"I\", \"EQ\", \"C0001\");\n\t * \t\tvar sSelectionVariant= oSelectionVariant.toJSONString();\n\t *\n\t * \t\tvar oNavigationHandler = new NavigationHandler(oController);\n\t * \t\tvar oPromiseObject = oNavigationHandler._getAppStateKeyAndUrlParameters(sSelectionVariant);\n\t *\n\t * \t\toPromiseObject.done(function(oSemanticAttributes, sAppStateKey){\n\t * \t\t\t// here you can add coding that should run after all app state and the semantic attributes have been returned.\n\t * \t\t});\n\t *\n\t * \t\toPromiseObject.fail(function(oError){\n\t * \t\t\t//some error handling\n\t * \t\t});\n\t *\t});\n\t * </code>\n\t * @private\n\t */\n\t// eslint-disable-next-line @typescript-eslint/promise-function-async\n\t_getAppStateKeyAndUrlParameters(sSelectionVariant: string): JQuery.Promise<string[], unknown, unknown> {\n\t\treturn this.processBeforeSmartLinkPopoverOpens(undefined, sSelectionVariant, undefined, undefined);\n\t}\n\n\t/**\n\t * Get App specific hash.\n\t * @param appHash The path string\n\t * @returns A string representing base path\n\t */\n\tasync _getAppSpecificHash(appHash: string): Promise<string | undefined> {\n\t\ttry {\n\t\t\tconst crossAppService = await this._getAppNavigationServiceAsync();\n\t\t\treturn await crossAppService.getHref({ appSpecificRoute: appHash });\n\t\t} catch (error: unknown) {\n\t\t\tconst message = error instanceof Error ? error.message : String(error);\n\t\t\tLog.error(`FE : Can not fetch App sepcific URL : ${message}`);\n\t\t\tthrow Error(message);\n\t\t}\n\t}\n\n\t_mixAttributesToSelVariant(\n\t\tmSemanticAttributes: Record<string, unknown>,\n\t\toSelVariant: SelectionVariant,\n\t\tiSuppressionBehavior: any\n\t): SelectionVariant {\n\t\t// add all semantic attributes to the mixed selection variant\n\t\tfor (const sPropertyName in mSemanticAttributes) {\n\t\t\tif (mSemanticAttributes.hasOwnProperty(sPropertyName)) {\n\t\t\t\t// A value of a semantic attribute may not be a string, but can be e.g. a date.\n\t\t\t\t// Since the selection variant accepts only a string, we have to convert it in dependence of the type.\n\t\t\t\tlet vSemanticAttributeValue = mSemanticAttributes[sPropertyName];\n\t\t\t\tif (vSemanticAttributeValue instanceof Date) {\n\t\t\t\t\t// use the same conversion method for dates as the SmartFilterBar: toJSON()\n\t\t\t\t\tvSemanticAttributeValue = vSemanticAttributeValue.toJSON();\n\t\t\t\t} else if (\n\t\t\t\t\tArray.isArray(vSemanticAttributeValue) ||\n\t\t\t\t\t(vSemanticAttributeValue && typeof vSemanticAttributeValue === \"object\")\n\t\t\t\t) {\n\t\t\t\t\tvSemanticAttributeValue = JSON.stringify(vSemanticAttributeValue);\n\t\t\t\t} else if (typeof vSemanticAttributeValue === \"number\" || typeof vSemanticAttributeValue === \"boolean\") {\n\t\t\t\t\tvSemanticAttributeValue = vSemanticAttributeValue.toString();\n\t\t\t\t}\n\n\t\t\t\tif (vSemanticAttributeValue === \"\") {\n\t\t\t\t\tif (iSuppressionBehavior & SuppressionBehavior.ignoreEmptyString) {\n\t\t\t\t\t\tLog.info(\n\t\t\t\t\t\t\t\"Semantic attribute \" +\n\t\t\t\t\t\t\t\tsPropertyName +\n\t\t\t\t\t\t\t\t\" is an empty string and due to the chosen Suppression Behiavour is being ignored.\"\n\t\t\t\t\t\t);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (vSemanticAttributeValue === null) {\n\t\t\t\t\tif (iSuppressionBehavior & SuppressionBehavior.raiseErrorOnNull) {\n\t\t\t\t\t\tthrow new NavError(\"NavigationHandler.INVALID_INPUT\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\tLog.warning(\"Semantic attribute \" + sPropertyName + \" is null and ignored for mix in to selection variant\");\n\t\t\t\t\t\tcontinue; // ignore!\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (vSemanticAttributeValue === undefined) {\n\t\t\t\t\tif (iSuppressionBehavior & SuppressionBehavior.raiseErrorOnUndefined) {\n\t\t\t\t\t\tthrow new NavError(\"NavigationHandler.INVALID_INPUT\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\tLog.warning(\"Semantic attribute \" + sPropertyName + \" is undefined and ignored for mix in to selection variant\");\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (typeof vSemanticAttributeValue === \"string\" || vSemanticAttributeValue instanceof String) {\n\t\t\t\t\toSelVariant.addSelectOption(sPropertyName, \"I\", \"EQ\", vSemanticAttributeValue.toString());\n\t\t\t\t} else {\n\t\t\t\t\tthrow new NavError(\"NavigationHandler.INVALID_INPUT\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn oSelVariant;\n\t}\n\n\t/**\n\t * Combines the given parameters and selection variant into a new selection variant containing properties from both, with the parameters\n\t * overriding existing properties in the selection variant. The new selection variant does not contain any parameters. All parameters are\n\t * merged into select options. The output of this function, converted to a JSON string, can be used for the\n\t * {@link #.navigate NavigationHandler.navigate} method.\n\t * @param vSemanticAttributes Object/(Array of Objects) containing key/value pairs\n\t * @param sSelectionVariant The selection variant in string format as provided by the SmartFilterBar control\n\t * @param iSuppressionBehavior Indicates whether semantic\n\t *        attributes with special values (see {@link sap.fe.navigation.SuppressionBehavior suppression behavior}) must be\n\t *        suppressed before they are combined with the selection variant; several\n\t *        {@link sap.fe.navigation.SuppressionBehavior suppression behaviors} can be combined with the bitwise OR operator\n\t *        (|)\n\t * @returns Instance of {@link sap.fe.navigation.SelectionVariant}\n\t * @public\n\t * @example <code>\n\t * sap.ui.define([\"sap/fe/navigation/NavigationHandler\", \"sap/fe/navigation/SelectionVariant\"], function (NavigationHandler, SelectionVariant) {\n\t * \tvar vSemanticAttributes = { \"Customer\" : \"C0001\" };\n\t * \tor\n\t * \tvar vSemanticAttributes = [{ \"Customer\" : \"C0001\" },{ \"Customer\" : \"C0002\" }];\n\t * \tvar sSelectionVariant = oSmartFilterBar.getDataSuiteFormat();\n\t * \tvar oNavigationHandler = new NavigationHandler(oController);\n\t * \tvar sNavigationSelectionVariant = oNavigationHandler.mixAttributesAndSelectionVariant(vSemanticAttributes, sSelectionVariant).toJSONString();\n\t * \t// In case of an vSemanticAttributes being an array, the semanticAttributes are merged to a single SV and compared against the sSelectionVariant(second agrument).\n\t * \t// Optionally, you can specify one or several suppression behaviors. Several suppression behaviors are combined with the bitwise OR operator, e.g.\n\t * \t// var iSuppressionBehavior = sap.fe.navigation.SuppressionBehavior.raiseErrorOnNull | sap.fe.navigation.SuppressionBehavior.raiseErrorOnUndefined;\n\t * \t// var sNavigationSelectionVariant = oNavigationHandler.mixAttributesAndSelectionVariant(mSemanticAttributes, sSelectionVariant, iSuppressionBehavior).toJSONString();\n\t *\n\t * \toNavigationHandler.navigate(\"SalesOrder\", \"create\", sNavigationSelectionVariant);\n\t * });\n\t * </code>\n\t */\n\tmixAttributesAndSelectionVariant(\n\t\tvSemanticAttributes: object | any[],\n\t\tsSelectionVariant: string | SerializedSelectionVariant,\n\t\tiSuppressionBehavior: number = SuppressionBehavior.standard\n\t): SelectionVariant {\n\t\tconst oSelectionVariant = new SelectionVariant(sSelectionVariant);\n\t\tconst oNewSelVariant = new SelectionVariant();\n\t\tconst oNavHandler = this;\n\n\t\tconst filterUrl = oSelectionVariant.getFilterContextUrl();\n\t\tif (filterUrl) {\n\t\t\toNewSelVariant.setFilterContextUrl(filterUrl);\n\t\t}\n\n\t\tconst contextUrl = oSelectionVariant.getParameterContextUrl();\n\t\tif (contextUrl) {\n\t\t\toNewSelVariant.setParameterContextUrl(contextUrl);\n\t\t}\n\t\tif (Array.isArray(vSemanticAttributes)) {\n\t\t\tvSemanticAttributes.forEach(function (mSemanticAttributes: any) {\n\t\t\t\toNavHandler._mixAttributesToSelVariant(mSemanticAttributes, oNewSelVariant, iSuppressionBehavior);\n\t\t\t});\n\t\t} else {\n\t\t\tthis._mixAttributesToSelVariant(vSemanticAttributes as Record<string, unknown>, oNewSelVariant, iSuppressionBehavior);\n\t\t}\n\n\t\t// add parameters that are not part of the oNewSelVariant yet\n\t\tconst aParameters = oSelectionVariant.getParameterNames();\n\t\tlet i;\n\t\tfor (i = 0; i < aParameters.length; i++) {\n\t\t\tif (!oNewSelVariant.getSelectOption(aParameters[i])) {\n\t\t\t\toNewSelVariant.addSelectOption(aParameters[i], \"I\", \"EQ\", oSelectionVariant.getParameter(aParameters[i]));\n\t\t\t}\n\t\t}\n\n\t\t// add selOptions that are not part of the oNewSelVariant yet\n\t\tconst aSelOptionNames = oSelectionVariant.getSelectOptionsPropertyNames();\n\t\tfor (i = 0; i < aSelOptionNames.length; i++) {\n\t\t\t// add selOptions that are not part of the oNewSelVariant yet\n\t\t\tconst aSelectOption: any[] = oSelectionVariant.getSelectOption(aSelOptionNames[i])!;\n\t\t\tif (!oNewSelVariant.getSelectOption(aSelOptionNames[i])) {\n\t\t\t\tfor (let j = 0; j < aSelectOption.length; j++) {\n\t\t\t\t\toNewSelVariant.addSelectOption(\n\t\t\t\t\t\taSelOptionNames[i],\n\t\t\t\t\t\taSelectOption[j].Sign,\n\t\t\t\t\t\taSelectOption[j].Option,\n\t\t\t\t\t\taSelectOption[j].Low,\n\t\t\t\t\t\taSelectOption[j].High\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn oNewSelVariant;\n\t}\n\n\t_ensureSelectionVariantFormatString(vSelectionVariant: unknown): unknown {\n\t\t/*\n\t\t * There are legacy AppStates where the SelectionVariant is being stored as a string. However, that is not compliant to the specification,\n\t\t * which states that a standard JS object shall be provided. Internally, however, the selectionVariant is always of type string. Situation\n\t\t * Persistency internal API ---------------- ------------------ --------------------- legacy string string new approach (JSON) object\n\t\t * string\n\t\t */\n\n\t\tif (vSelectionVariant === undefined) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tlet vConvertedSelectionVariant = vSelectionVariant;\n\n\t\tif (typeof vSelectionVariant === \"object\") {\n\t\t\tvConvertedSelectionVariant = JSON.stringify(vSelectionVariant);\n\t\t}\n\n\t\treturn vConvertedSelectionVariant;\n\t}\n\n\t_fnHandleAppStatePromise(oReturn: ShellAppStateReturn, fnOnAfterSave?: Function, fnOnError?: Function): void {\n\t\toReturn.promise.done(function () {\n\t\t\tif (fnOnAfterSave) {\n\t\t\t\tfnOnAfterSave(oReturn.appStateKey);\n\t\t\t}\n\t\t});\n\n\t\tif (fnOnError) {\n\t\t\tconst oNavHandler = this;\n\t\t\toReturn.promise.fail(function () {\n\t\t\t\tconst oError = oNavHandler._createTechnicalError(\"NavigationHandler.AppStateSave.failed\");\n\t\t\t\tfnOnError(oError);\n\t\t\t});\n\t\t}\n\t}\n\n\tasync _saveAppStateAsync(oAppData: InnerAppData, fnOnAfterSave: Function, fnOnError: Function): Promise<string | undefined> {\n\t\tconst oNavHandler = this;\n\t\treturn this._fnSaveAppStateAsync(oAppData, fnOnError).then(function (\n\t\t\toReturn: ShellAppStateReturn | undefined | void\n\t\t): string | undefined {\n\t\t\tif (oReturn) {\n\t\t\t\toNavHandler._fnHandleAppStatePromise(oReturn, fnOnAfterSave, fnOnError);\n\t\t\t\treturn oReturn.appStateKey;\n\t\t\t}\n\n\t\t\treturn undefined;\n\t\t});\n\t}\n\n\t_saveAppState(oAppData: InnerAppData, fnOnAfterSave: Function, fnOnError: Function): string | undefined {\n\t\tconst oReturn = this._saveAppStateWithImmediateReturn(oAppData, fnOnError);\n\t\tif (oReturn) {\n\t\t\tthis._fnHandleAppStatePromise(oReturn, fnOnAfterSave, fnOnError);\n\t\t\treturn oReturn.appStateKey;\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\t_fnSaveAppStateWithImmediateReturn(\n\t\toAppData: InnerAppData,\n\t\toAppState: ShellAppState,\n\t\tfnOnError?: Function\n\t): { appStateKey: string; promise: JQuery.Promise<string> } | undefined {\n\t\tconst sAppStateKey = oAppState.getKey();\n\t\tconst oAppDataForSave = this._fetchAppDataForSave(oAppData, fnOnError);\n\t\tif (!oAppDataForSave) {\n\t\t\treturn undefined;\n\t\t}\n\t\toAppState.setData(oAppDataForSave);\n\t\tconst oSavePromise = oAppState.save();\n\n\t\treturn {\n\t\t\tappStateKey: sAppStateKey,\n\t\t\tpromise: oSavePromise.promise()\n\t\t};\n\t}\n\n\t_fetchAppDataForSave(oAppData: InnerAppData, fnOnError: any): InnerAppData | undefined {\n\t\tlet oAppDataForSave: Partial<InnerAppData> = {};\n\n\t\tif (oAppData.hasOwnProperty(\"selectionVariant\")) {\n\t\t\toAppDataForSave.selectionVariant = oAppData.selectionVariant;\n\n\t\t\tif (oAppData.selectionVariant) {\n\t\t\t\t/*\n\t\t\t\t * The specification states that Selection Variants need to be JSON objects. However, internally, we work with strings for\n\t\t\t\t * \"selectionVariant\". Therefore, in case that this is a string, we need to JSON-parse the data.\n\t\t\t\t */\n\t\t\t\tif (typeof oAppData.selectionVariant === \"string\") {\n\t\t\t\t\ttry {\n\t\t\t\t\t\toAppDataForSave.selectionVariant = JSON.parse(oAppData.selectionVariant);\n\t\t\t\t\t} catch (x) {\n\t\t\t\t\t\tconst oError = this._createTechnicalError(\"NavigationHandler.AppStateSave.parseError\");\n\t\t\t\t\t\tif (fnOnError) {\n\t\t\t\t\t\t\tfnOnError(oError);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this._sMode === Mode.ODataV2) {\n\t\t\toAppDataForSave = extend(\n\t\t\t\t{\n\t\t\t\t\tselectionVariant: {},\n\t\t\t\t\ttableVariantId: \"\",\n\t\t\t\t\tcustomData: {}\n\t\t\t\t},\n\t\t\t\toAppDataForSave\n\t\t\t) as InnerAppData;\n\n\t\t\tif (oAppData.tableVariantId) {\n\t\t\t\toAppDataForSave.tableVariantId = oAppData.tableVariantId;\n\t\t\t}\n\t\t\tif (oAppData.customData) {\n\t\t\t\toAppDataForSave.customData = oAppData.customData;\n\t\t\t}\n\t\t\tif (oAppData.presentationVariant) {\n\t\t\t\toAppDataForSave.presentationVariant = oAppData.presentationVariant;\n\t\t\t}\n\t\t\tif (oAppData.valueTexts) {\n\t\t\t\toAppDataForSave.valueTexts = oAppData.valueTexts;\n\t\t\t}\n\t\t\tif (oAppData.semanticDates) {\n\t\t\t\toAppDataForSave.semanticDates = oAppData.semanticDates;\n\t\t\t}\n\t\t} else {\n\t\t\tconst oAppDataClone = Object.assign({}, oAppData);\n\t\t\toAppDataForSave = merge(oAppDataClone, oAppDataForSave);\n\t\t}\n\t\toAppDataForSave = this._checkIsPotentiallySensitive(oAppDataForSave) as InnerAppData;\n\t\treturn oAppDataForSave as InnerAppData;\n\t}\n\n\tasync _fnSaveAppStateAsync(oAppData: any, fnOnError?: any): Promise<ShellAppStateReturn | undefined | void> {\n\t\tconst oNavHandler = this;\n\t\treturn this._getAppNavigationServiceAsync()\n\t\t\t.then(async function (oCrossAppNavService: Navigation): Promise<ShellAppState> {\n\t\t\t\treturn oCrossAppNavService.createEmptyAppState(oNavHandler.oComponent);\n\t\t\t})\n\t\t\t.then(function (oAppState: ShellAppState) {\n\t\t\t\treturn oNavHandler._fnSaveAppStateWithImmediateReturn(oAppData, oAppState, fnOnError);\n\t\t\t})\n\t\t\t.catch(function (oError) {\n\t\t\t\tif (fnOnError) {\n\t\t\t\t\tfnOnError(oError);\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\t_saveAppStateWithImmediateReturn(oAppData: InnerAppData, fnOnError?: Function): ShellAppStateReturn | undefined {\n\t\tconst oAppState = this._getAppNavigationService().createEmptyAppState(this.oComponent);\n\t\treturn this._fnSaveAppStateWithImmediateReturn(oAppData, oAppState, fnOnError);\n\t}\n\n\t/**\n\t * Retrieves the loaded IApp State and navigation type once resolved.\n\t * @param sAppStateKey The IAppStateKey to retrieve the AppState data.\n\t * @param oDeferred Jquery deferred object to resolve the AppState data.\n\t * @param navType Navigation type for which AppState is retrieved.\n\t * @returns The deferred object which is resolved with loaded app state data\n\t and navigation type.\n\t * @private\n\t */\n\t_loadAppState(sAppStateKey: string, oDeferred: JQuery.Deferred<unknown>, navType: string): JQuery.Deferred<unknown> {\n\t\tconst oNavHandler = this;\n\t\tthis._getAppNavigationServiceAsync()\n\t\t\t.then(function (oCrossAppNavService: any) {\n\t\t\t\treturn oCrossAppNavService.getAppState(oNavHandler.oComponent, sAppStateKey);\n\t\t\t})\n\t\t\t.catch(function () {\n\t\t\t\tconst oError = oNavHandler._createTechnicalError(\"NavigationHandler._getAppNavigationServiceAsync.failed\");\n\t\t\t\toDeferred.reject(oError, {}, navType);\n\t\t\t})\n\t\t\t.then(function (oAppState: any) {\n\t\t\t\tlet oAppData: any = {};\n\t\t\t\tconst oAppDataLoaded = oAppState.getData();\n\n\t\t\t\tif (typeof oAppDataLoaded === \"undefined\") {\n\t\t\t\t\tconst oError = oNavHandler._createTechnicalError(\"NavigationHandler.getDataFromAppState.failed\");\n\t\t\t\t\toDeferred.reject(oError, {}, navType);\n\t\t\t\t} else if (oNavHandler._sMode === Mode.ODataV2) {\n\t\t\t\t\toAppData = {\n\t\t\t\t\t\tselectionVariant: \"{}\",\n\t\t\t\t\t\toSelectionVariant: new SelectionVariant(),\n\t\t\t\t\t\toDefaultedSelectionVariant: new SelectionVariant(),\n\t\t\t\t\t\tbNavSelVarHasDefaultsOnly: false,\n\t\t\t\t\t\ttableVariantId: \"\",\n\t\t\t\t\t\tcustomData: {},\n\t\t\t\t\t\tappStateKey: sAppStateKey,\n\t\t\t\t\t\tpresentationVariant: {},\n\t\t\t\t\t\tvalueTexts: {},\n\t\t\t\t\t\tsemanticDates: {},\n\t\t\t\t\t\tdata: {}\n\t\t\t\t\t};\n\t\t\t\t\tif (oAppDataLoaded.selectionVariant) {\n\t\t\t\t\t\t/*\n\t\t\t\t\t\t * In case that we get an object from the stored AppData (=persistency), we need to stringify the JSON object.\n\t\t\t\t\t\t */\n\t\t\t\t\t\toAppData.selectionVariant = oNavHandler._ensureSelectionVariantFormatString(oAppDataLoaded.selectionVariant);\n\t\t\t\t\t\toAppData.oSelectionVariant = new SelectionVariant(oAppData.selectionVariant);\n\t\t\t\t\t}\n\t\t\t\t\tif (oAppDataLoaded.tableVariantId) {\n\t\t\t\t\t\toAppData.tableVariantId = oAppDataLoaded.tableVariantId;\n\t\t\t\t\t}\n\t\t\t\t\tif (oAppDataLoaded.customData) {\n\t\t\t\t\t\toAppData.customData = oAppDataLoaded.customData;\n\t\t\t\t\t}\n\t\t\t\t\tif (oAppDataLoaded.presentationVariant) {\n\t\t\t\t\t\toAppData.presentationVariant = oAppDataLoaded.presentationVariant;\n\t\t\t\t\t}\n\t\t\t\t\tif (oAppDataLoaded.valueTexts) {\n\t\t\t\t\t\toAppData.valueTexts = oAppDataLoaded.valueTexts;\n\t\t\t\t\t}\n\t\t\t\t\tif (oAppDataLoaded.semanticDates) {\n\t\t\t\t\t\toAppData.semanticDates = oAppDataLoaded.semanticDates;\n\t\t\t\t\t}\n\t\t\t\t\t/* In V2 case, we need the data in the below format for hybrid case */\n\t\t\t\t\tif (navType === NavType.hybrid) {\n\t\t\t\t\t\toAppData.data = oAppDataLoaded;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\toAppData = merge(oAppData, oAppDataLoaded);\n\t\t\t\t\tif (oAppDataLoaded.selectionVariant) {\n\t\t\t\t\t\t/*\n\t\t\t\t\t\t * In case that we get an object from the stored AppData (=persistency), we need to stringify the JSON object.\n\t\t\t\t\t\t */\n\t\t\t\t\t\toAppData.selectionVariant = oNavHandler._ensureSelectionVariantFormatString(oAppDataLoaded.selectionVariant);\n\t\t\t\t\t\toAppData.oSelectionVariant = new SelectionVariant(oAppData.selectionVariant);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// resolve is called on passed Deferred object to trigger a call of the done method, if implemented\n\t\t\t\t// the done method will receive the loaded appState and the navigation type as parameters\n\t\t\t\toDeferred.resolve(oAppData, {}, navType);\n\t\t\t\treturn;\n\t\t\t})\n\t\t\t.catch(function () {\n\t\t\t\tconst oError = oNavHandler._createTechnicalError(\"NavigationHandler.getAppState.failed\");\n\t\t\t\toDeferred.reject(oError, {}, navType);\n\t\t\t});\n\n\t\treturn oDeferred;\n\t}\n\n\t/**\n\t * Retrieves the parameter value of the sap-iapp-state (the internal apps) from the AppHash string. It automatically takes care about\n\t * compatibility between the old and the new approach of the sap-iapp-state. Precedence is that the new approach is favoured against the old\n\t * approach.\n\t * @param sAppHash The AppHash, which may contain a sap-iapp-state parameter (both old and/or new approach)\n\t * @returns The value of sap-iapp-state (i.e. the name of the container to retrieve the parameters), or <code>undefined</code> in\n\t *         case that no sap-iapp-state was found in <code>sAppHash</code>.\n\t * @private\n\t */\n\t_getInnerAppStateKey(sAppHash: string): string | undefined {\n\t\t// trivial case: no app hash available at all.\n\t\tif (!sAppHash) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\t/* new approach: separated via question mark / part of the query parameter of the AppHash */\n\t\tlet aMatches = this._rIAppStateNew.exec(sAppHash);\n\n\t\t/* old approach: spearated via slashes / i.e. part of the route itself */\n\t\tif (aMatches === null) {\n\t\t\taMatches = this._rIAppStateOld.exec(sAppHash);\n\t\t}\n\n\t\t/*\n\t\t * old approach: special case: if there is no deep route/key defined, the sap-iapp-state may be at the beginning of the string, without\n\t\t * any separation with the slashes\n\t\t */\n\t\tif (aMatches === null) {\n\t\t\taMatches = this._rIAppStateOldAtStart.exec(sAppHash);\n\t\t}\n\n\t\tif (aMatches === null) {\n\t\t\t// there is no (valid) sap-iapp-state in the App Hash\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn aMatches[1];\n\t}\n\n\t/**\n\t * Replaces (or inserts) a parameter value (an AppStateKey) for the sap-iapp-state into an existing AppHash string. Other routes/parameters\n\t * are ignored and returned without modification (\"environmental agnostic\" property). Only the new approach (sap-iapp-state as query parameter\n\t * in the AppHash) is being issued.\n\t * @param sAppHash The AppHash into which the sap-iapp-state parameter shall be made available\n\t * @param sAppStateKey The key value of the AppState which shall be stored as parameter value of the sap-iapp-state property.\n\t * @returns The modified sAppHash string, such that the sap-iapp-state has been set based on the new (query option-based)\n\t *         sap-iapp-state. If a sap-iapp-state has been specified before, the key is replaced. If <code>sAppHash</code> was of the old\n\t *         format (sap-iapp-state as part of the keys/route), the format is converted to the new format before the result is returned.\n\t * @private\n\t */\n\t_replaceInnerAppStateKey(sAppHash: string, sAppStateKey: string): string | undefined {\n\t\tconst sNewIAppState = IAPP_STATE + \"=\" + sAppStateKey;\n\n\t\t/*\n\t\t * generate sap-iapp-states with the new way\n\t\t */\n\t\tif (!sAppHash) {\n\t\t\t// there's no sAppHash key yet\n\t\t\treturn \"?\" + sNewIAppState;\n\t\t}\n\n\t\tconst fnAppendToQueryParameter = function (sSubAppHash: any): string {\n\t\t\t// there is an AppHash available, but it does not contain a sap-iapp-state parameter yet - we need to append one\n\n\t\t\t// new approach: we need to check, if a set of query parameters is already available\n\t\t\tif (sSubAppHash.indexOf(\"?\") !== -1) {\n\t\t\t\t// there are already query parameters available - append it as another parameter\n\t\t\t\treturn sSubAppHash + \"&\" + sNewIAppState;\n\t\t\t}\n\t\t\t// there are no a query parameters available yet; create a set with a single parameter\n\t\t\treturn sSubAppHash + \"?\" + sNewIAppState;\n\t\t};\n\n\t\tif (!this._getInnerAppStateKey(sAppHash)) {\n\t\t\treturn fnAppendToQueryParameter(sAppHash);\n\t\t}\n\t\t// There is an AppHash available and there is already an sap-iapp-state in the AppHash\n\n\t\tif (this._rIAppStateNew.test(sAppHash)) {\n\t\t\t// the new approach is being used\n\t\t\treturn sAppHash.replace(this._rIAppStateNew, function (sNeedle: string) {\n\t\t\t\treturn sNeedle.replace(/[=].*/gi, \"=\" + sAppStateKey);\n\t\t\t});\n\t\t}\n\n\t\t// we need to remove the old AppHash entirely and replace it with a new one.\n\n\t\tconst fnReplaceOldApproach = function (rOldApproach: any, sSubAppHash: any): string {\n\t\t\tsSubAppHash = sSubAppHash.replace(rOldApproach, \"\");\n\t\t\treturn fnAppendToQueryParameter(sSubAppHash);\n\t\t};\n\n\t\tif (this._rIAppStateOld.test(sAppHash)) {\n\t\t\treturn fnReplaceOldApproach(this._rIAppStateOld, sAppHash);\n\t\t}\n\n\t\tif (this._rIAppStateOldAtStart.test(sAppHash)) {\n\t\t\treturn fnReplaceOldApproach(this._rIAppStateOldAtStart, sAppHash);\n\t\t}\n\n\t\tassert(false, \"internal inconsistency: Approach of sap-iapp-state not known, but _getInnerAppStateKey returned it\");\n\t\treturn undefined;\n\t}\n\n\t_getURLParametersFromSelectionVariant(vSelectionVariant?: SelectionVariant | string): Record<string, string> {\n\t\tconst mURLParameters: Record<string, string> = {};\n\t\tlet i = 0;\n\t\tlet oSelectionVariant;\n\n\t\tif (typeof vSelectionVariant === \"string\") {\n\t\t\toSelectionVariant = new SelectionVariant(vSelectionVariant);\n\t\t} else if (typeof vSelectionVariant === \"object\") {\n\t\t\toSelectionVariant = vSelectionVariant;\n\t\t} else {\n\t\t\tthrow new NavError(\"NavigationHandler.INVALID_INPUT\");\n\t\t}\n\n\t\t// add URLs parameters from SelectionVariant.SelectOptions (if single value)\n\t\tconst aSelectProperties = oSelectionVariant.getSelectOptionsPropertyNames();\n\t\tfor (i = 0; i < aSelectProperties.length; i++) {\n\t\t\tconst aSelectOptions = oSelectionVariant.getSelectOption(aSelectProperties[i]);\n\t\t\tif (aSelectOptions && aSelectOptions.length === 1 && aSelectOptions[0].Sign === \"I\" && aSelectOptions[0].Option === \"EQ\") {\n\t\t\t\tmURLParameters[aSelectProperties[i]] = aSelectOptions[0].Low;\n\t\t\t}\n\t\t}\n\n\t\t// add parameters from SelectionVariant.Parameters\n\t\tconst aParameterNames = oSelectionVariant.getParameterNames();\n\t\tfor (i = 0; i < aParameterNames.length; i++) {\n\t\t\tconst sParameterValue = oSelectionVariant.getParameter(aParameterNames[i]);\n\n\t\t\tmURLParameters[aParameterNames[i]] = sParameterValue;\n\t\t}\n\t\treturn mURLParameters;\n\t}\n\n\t_createTechnicalError(sErrorCode: any): NavError {\n\t\treturn new NavError(sErrorCode);\n\t}\n\n\t/**\n\t * Sets the model that is used for verification of sensitive information. If the model is not set, the unnamed component model is used for the\n\t * verification of sensitive information.\n\t * @public\n\t * @param oModel For checking sensitive information\n\t */\n\tsetModel(oModel: V2ODataModel | V4ODataModel): void {\n\t\tthis._oModel = oModel;\n\t}\n\n\t_getModel(): V2ODataModel | V4ODataModel {\n\t\treturn this._oModel || this.oComponent.getModel();\n\t}\n\n\t_removeAllProperties(oData: InnerAppData): void {\n\t\tif (oData) {\n\t\t\tif (oData.selectionVariant) {\n\t\t\t\toData.selectionVariant = null as unknown as undefined;\n\t\t\t}\n\n\t\t\tif (oData.valueTexts) {\n\t\t\t\toData.valueTexts = null;\n\t\t\t}\n\n\t\t\tif (oData.semanticDates) {\n\t\t\t\toData.semanticDates = null;\n\t\t\t}\n\t\t}\n\t}\n\n\t_removeProperties(aFilterName: any, aParameterName: any, oData: any): void {\n\t\tif (aFilterName.length && oData && (oData.selectionVariant || oData.valueTexts || oData.semanticDates)) {\n\t\t\taFilterName.forEach(function (sName: any) {\n\t\t\t\tif (oData.selectionVariant.SelectOptions) {\n\t\t\t\t\toData.selectionVariant.SelectOptions.some(function (oValue: any, nIdx: any) {\n\t\t\t\t\t\tif (sName === oValue.PropertyName) {\n\t\t\t\t\t\t\toData.selectionVariant.SelectOptions.splice(nIdx, 1);\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif (oData.valueTexts && oData.valueTexts.Texts) {\n\t\t\t\t\toData.valueTexts.Texts.forEach(function (oTexts: any) {\n\t\t\t\t\t\tif (oTexts.PropertyTexts) {\n\t\t\t\t\t\t\toTexts.PropertyTexts.some(function (oValue: any, nIdx: any) {\n\t\t\t\t\t\t\t\tif (sName === oValue.PropertyName) {\n\t\t\t\t\t\t\t\t\toTexts.PropertyTexts.splice(nIdx, 1);\n\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif (oData.semanticDates && oData.semanticDates.Dates) {\n\t\t\t\t\toData.semanticDates.Dates.forEach(function (oDates: any, nIdx: any) {\n\t\t\t\t\t\tif (sName === oDates.PropertyName) {\n\t\t\t\t\t\t\toData.semanticDates.Dates.splice(nIdx, 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif (aParameterName.length && oData && oData.selectionVariant && oData.selectionVariant.Parameters) {\n\t\t\taParameterName.forEach(function (sName: any) {\n\t\t\t\toData.selectionVariant.Parameters.some(function (oValue: any, nIdx: any) {\n\t\t\t\t\tif (sName === oValue.PropertyName || \"$Parameter.\" + sName === oValue.PropertyName) {\n\t\t\t\t\t\toData.selectionVariant.Parameters.splice(nIdx, 1);\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn false;\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}\n\n\t_isTermTrue(oProperty: any, sTerm: string): boolean {\n\t\tconst fIsTermDefaultTrue = function (oTerm: any): boolean {\n\t\t\tif (oTerm) {\n\t\t\t\treturn oTerm.Bool ? oTerm.Bool !== \"false\" : true;\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\n\t\treturn !!oProperty[sTerm] && fIsTermDefaultTrue(oProperty[sTerm]);\n\t}\n\n\t_isExcludedFromNavigationContext(oProperty: any): boolean {\n\t\treturn this._isTermTrue(oProperty, \"com.sap.vocabularies.UI.v1.ExcludeFromNavigationContext\");\n\t}\n\n\t_isPotentiallySensitive(oProperty: any): boolean {\n\t\treturn this._isTermTrue(oProperty, \"com.sap.vocabularies.PersonalData.v1.IsPotentiallySensitive\");\n\t}\n\n\t_isMeasureProperty(oProperty: any): boolean {\n\t\treturn this._isTermTrue(oProperty, \"com.sap.vocabularies.Analytics.v1.Measure\");\n\t}\n\n\t_isToBeExcluded(oProperty: any): boolean {\n\t\treturn this._isPotentiallySensitive(oProperty) || this._isExcludedFromNavigationContext(oProperty);\n\t}\n\n\t/**\n\t * The method creates a context url based on provided data. This context url can either be used as\n\t * {@link sap.fe.navigation.NavigationHandler#setParameterContextUrl ParameterContextUrl} or\n\t * {@link sap.fe.navigation.NavigationHandler#setFilterContextUrl FilterContextUrl}.\n\t * @param sEntitySetName Used for url determination\n\t * @param [oModel] Used for url determination. If omitted, the NavigationHandler model is used.\n\t * @throws An instance of {@link sap.fe.navigation.NavError} in case of missing or wrong passed parameters\n\t * @returns The context url for the given entities\n\t * @protected\n\t */\n\tconstructContextUrl(sEntitySetName: string, oModel?: V2ODataModel | V4ODataModel): string {\n\t\tif (!sEntitySetName) {\n\t\t\tthrow new NavError(\"NavigationHandler.NO_ENTITY_SET_PROVIDED\");\n\t\t}\n\n\t\tif (oModel === undefined) {\n\t\t\toModel = this._getModel();\n\t\t}\n\n\t\treturn this._constructContextUrl(oModel) + \"#\" + sEntitySetName;\n\t}\n\n\t_constructContextUrl(oModel: V2ODataModel | V4ODataModel): string {\n\t\tlet sServerUrl;\n\n\t\tif (oModel.isA<V2ODataModel>(\"sap.ui.model.odata.v2.ODataModel\")) {\n\t\t\tsServerUrl = oModel._getServerUrl();\n\t\t} else if (oModel.isA<V4ODataModel>(\"sap.ui.model.odata.v4.ODataModel\")) {\n\t\t\tconst oServiceURI = new URI(oModel.getServiceUrl()).absoluteTo(document.baseURI);\n\t\t\tsServerUrl = new URI(\"/\").absoluteTo(oServiceURI).toString();\n\t\t}\n\n\t\tif (sServerUrl && sServerUrl.lastIndexOf(\"/\") === sServerUrl.length - 1) {\n\t\t\tsServerUrl = sServerUrl.substring(0, sServerUrl.length - 1);\n\t\t}\n\n\t\treturn sServerUrl + oModel.sServiceUrl + \"/$metadata\";\n\t}\n\n\t/**\n\t * The method verifies, if any of the passed parameters/filters are marked as sensitive, and if this is the case remove those from the app\n\t * data. <b>Note:</b> To use this method, the metadata must be loaded first.\n\t * @param oData With potential sensitive information (for OData, external representation using\n\t * <code>oSelectionVariant.toJSONObject()</code> must be used), with the <code>FilterContextUrl</code> or\n\t * <code>ParameterContextUrl</code> property.\n\t * @returns Data without properties marked as sensitive or an empty object if the OData metadata is not fully loaded yet\n\t * @private\n\t */\n\t_checkIsPotentiallySensitive(oData: any): unknown {\n\t\tlet oAdaptedData = oData;\n\t\tif (\n\t\t\toData &&\n\t\t\toData.selectionVariant &&\n\t\t\t((oData.selectionVariant.FilterContextUrl && oData.selectionVariant.SelectOptions) ||\n\t\t\t\t(oData.selectionVariant.ParameterContextUrl && oData.selectionVariant.Parameters))\n\t\t) {\n\t\t\tconst oModel = this._getModel();\n\t\t\tif (this.oComponent && oModel && oModel.isA<V2ODataModel>(\"sap.ui.model.odata.v2.ODataModel\")) {\n\t\t\t\tconst aSensitiveFilterName = [];\n\t\t\t\tconst aSensitiveParameterName = [];\n\t\t\t\tlet i,\n\t\t\t\t\toEntitySet: any,\n\t\t\t\t\toEntityDef: any,\n\t\t\t\t\toSubEntityDef: any,\n\t\t\t\t\toEndRole: any,\n\t\t\t\t\taFilterContextPart = [],\n\t\t\t\t\taParamContextPart = [];\n\n\t\t\t\tconst oMetaModel = oModel.getMetaModel();\n\t\t\t\tif (oModel.getServiceMetadata() && oMetaModel?.oModel) {\n\t\t\t\t\tif (oData.selectionVariant.FilterContextUrl) {\n\t\t\t\t\t\taFilterContextPart = oData.selectionVariant.FilterContextUrl.split(\"#\");\n\t\t\t\t\t}\n\n\t\t\t\t\tif (\n\t\t\t\t\t\taFilterContextPart.length === 2 &&\n\t\t\t\t\t\toData.selectionVariant.SelectOptions &&\n\t\t\t\t\t\tthis._constructContextUrl(oModel).indexOf(aFilterContextPart[0]) === 0\n\t\t\t\t\t) {\n\t\t\t\t\t\toEntitySet = oMetaModel.getODataEntitySet(aFilterContextPart[1]);\n\t\t\t\t\t\tif (oEntitySet) {\n\t\t\t\t\t\t\toEntityDef = oMetaModel.getODataEntityType(oEntitySet.entityType);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\toEntityDef = oMetaModel.getODataEntityType(aFilterContextPart[1]);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (oEntityDef) {\n\t\t\t\t\t\t\tif (oEntityDef && oEntityDef.property) {\n\t\t\t\t\t\t\t\tfor (i = 0; i < oEntityDef.property.length; i++) {\n\t\t\t\t\t\t\t\t\tif (this._isToBeExcluded(oEntityDef.property[i])) {\n\t\t\t\t\t\t\t\t\t\taSensitiveFilterName.push(oEntityDef.property[i].name);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (oEntityDef.navigationProperty) {\n\t\t\t\t\t\t\t\tfor (i = 0; i < oEntityDef.navigationProperty.length; i++) {\n\t\t\t\t\t\t\t\t\toEndRole = oMetaModel.getODataAssociationEnd(oEntityDef, oEntityDef.navigationProperty[i].name);\n\t\t\t\t\t\t\t\t\tif (!oEndRole || oEndRole.type === oData.selectionVariant.FilterContextUrl) {\n\t\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t// check if the end role has cardinality 0..1 or 1\n\t\t\t\t\t\t\t\t\tif (oEndRole.multiplicity === \"1\" || oEndRole.multiplicity === \"0..1\") {\n\t\t\t\t\t\t\t\t\t\toSubEntityDef = oMetaModel.getODataEntityType(oEndRole.type);\n\t\t\t\t\t\t\t\t\t\tif (oSubEntityDef && oSubEntityDef.property) {\n\t\t\t\t\t\t\t\t\t\t\tfor (let j = 0; j < oSubEntityDef.property.length; j++) {\n\t\t\t\t\t\t\t\t\t\t\t\tif (this._isToBeExcluded(oSubEntityDef.property[j])) {\n\t\t\t\t\t\t\t\t\t\t\t\t\taSensitiveFilterName.push(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\toEntityDef.navigationProperty[i].name + \".\" + oSubEntityDef.property[j].name\n\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (oData.selectionVariant.ParameterContextUrl) {\n\t\t\t\t\t\taParamContextPart = oData.selectionVariant.ParameterContextUrl.split(\"#\");\n\t\t\t\t\t}\n\n\t\t\t\t\tif (\n\t\t\t\t\t\taParamContextPart.length === 2 &&\n\t\t\t\t\t\toData.selectionVariant.Parameters &&\n\t\t\t\t\t\tthis._constructContextUrl(oModel).indexOf(aParamContextPart[0]) === 0\n\t\t\t\t\t) {\n\t\t\t\t\t\toEntitySet = oMetaModel.getODataEntitySet(aParamContextPart[1]);\n\t\t\t\t\t\tif (oEntitySet) {\n\t\t\t\t\t\t\toEntityDef = oMetaModel.getODataEntityType(oEntitySet.entityType);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\toEntityDef = oMetaModel.getODataEntityType(aFilterContextPart[1]);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (oEntityDef) {\n\t\t\t\t\t\t\tif (oEntityDef.property) {\n\t\t\t\t\t\t\t\tfor (i = 0; i < oEntityDef.property.length; i++) {\n\t\t\t\t\t\t\t\t\tif (this._isToBeExcluded(oEntityDef.property[i])) {\n\t\t\t\t\t\t\t\t\t\taSensitiveParameterName.push(oEntityDef.property[i].name);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (aSensitiveFilterName.length || aSensitiveParameterName.length) {\n\t\t\t\t\t\toAdaptedData = extend(true as any, {}, oAdaptedData);\n\n\t\t\t\t\t\tthis._removeProperties(aSensitiveFilterName, aSensitiveParameterName, oAdaptedData);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// annotations are not loaded\n\n\t\t\t\t\tthis._removeAllProperties(oAdaptedData);\n\t\t\t\t\tLog.error(\"NavigationHandler: oMetadata are not fully loaded!\");\n\t\t\t\t}\n\t\t\t} else if (this.oComponent && oModel && oModel.isA(\"sap.ui.model.odata.v4.ODataModel\")) {\n\t\t\t\treturn this._removeSensitiveDataForODataV4(oAdaptedData);\n\t\t\t}\n\t\t}\n\n\t\treturn oAdaptedData;\n\t}\n\n\t_removeMeasureBasedInformation(oAppData: InnerAppData): InnerAppData {\n\t\tlet oAppDataForSave = oAppData;\n\n\t\tif (oAppData.selectionVariant) {\n\t\t\t/*\n\t\t\t * The specification states that Selection Variants need to be JSON objects. However, internally, we work with strings for\n\t\t\t * \"selectionVariant\". Therefore, in case that this is a string, we need to JSON-parse the data.\n\t\t\t */\n\t\t\tif (typeof oAppData.selectionVariant === \"string\") {\n\t\t\t\ttry {\n\t\t\t\t\toAppDataForSave.selectionVariant = JSON.parse(oAppData.selectionVariant);\n\t\t\t\t} catch (x) {\n\t\t\t\t\tLog.error(\"NavigationHandler: _removeMeasureBasedInformation parse error\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\toAppDataForSave = this._removeMeasureBasedProperties(oAppDataForSave);\n\t\t}\n\n\t\treturn oAppDataForSave;\n\t}\n\n\t/**\n\t * The method verifies if any of the passed parameters/filters are marked as a measure. If this is the case, they are removed from the xapp\n\t * app data. <b>Note:</b> To use this method, the metadata must be loaded first.\n\t * @param oData With potential sensitive information (for OData, external representation using\n\t * <code>oSelectionVariant.toJSONObject()</code> must be used), with the <code>FilterContextUrl</code> or\n\t * <code>ParameterContextUrl</code> property.\n\t * @returns Data without properties marked as measures or an empty object if the OData metadata is not fully loaded yet\n\t * @private\n\t */\n\t_removeMeasureBasedProperties(oData: InnerAppData): InnerAppData {\n\t\tlet oAdaptedData = oData;\n\t\tconst aMeasureFilterName = [];\n\t\tconst aMeasureParameterName = [];\n\t\tlet i,\n\t\t\toModel,\n\t\t\toMetaModel,\n\t\t\toEntitySet: any,\n\t\t\toEntityDef: any,\n\t\t\toSubEntityDef: any,\n\t\t\toEndRole: any,\n\t\t\taFilterContextPart: string[] = [],\n\t\t\taParamContextPart: string[] = [];\n\n\t\tif (\n\t\t\toData &&\n\t\t\toData.selectionVariant &&\n\t\t\t(((oData.selectionVariant as SerializedSelectionVariant).FilterContextUrl &&\n\t\t\t\t(oData.selectionVariant as SerializedSelectionVariant).SelectOptions) ||\n\t\t\t\t((oData.selectionVariant as SerializedSelectionVariant).ParameterContextUrl &&\n\t\t\t\t\t(oData.selectionVariant as SerializedSelectionVariant).Parameters))\n\t\t) {\n\t\t\toModel = this._getModel();\n\t\t\tif (this.oComponent && oModel && oModel.isA<V2ODataModel>(\"sap.ui.model.odata.v2.ODataModel\")) {\n\t\t\t\toMetaModel = oModel.getMetaModel();\n\t\t\t\tif (oModel.getServiceMetadata() && oMetaModel && oMetaModel.oModel) {\n\t\t\t\t\tif ((oData.selectionVariant as SerializedSelectionVariant).FilterContextUrl) {\n\t\t\t\t\t\taFilterContextPart = (oData.selectionVariant as SerializedSelectionVariant).FilterContextUrl!.split(\"#\");\n\t\t\t\t\t}\n\n\t\t\t\t\tif (\n\t\t\t\t\t\taFilterContextPart.length === 2 &&\n\t\t\t\t\t\t(oData.selectionVariant as SerializedSelectionVariant).SelectOptions &&\n\t\t\t\t\t\tthis._constructContextUrl(oModel).indexOf(aFilterContextPart[0]) === 0\n\t\t\t\t\t) {\n\t\t\t\t\t\toEntitySet = oMetaModel.getODataEntitySet(aFilterContextPart[1]);\n\t\t\t\t\t\tif (oEntitySet) {\n\t\t\t\t\t\t\toEntityDef = oMetaModel.getODataEntityType(oEntitySet.entityType);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\toEntityDef = oMetaModel.getODataEntityType(aFilterContextPart[1]);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (oEntityDef) {\n\t\t\t\t\t\t\tif (oEntityDef && oEntityDef.property) {\n\t\t\t\t\t\t\t\tfor (i = 0; i < oEntityDef.property.length; i++) {\n\t\t\t\t\t\t\t\t\tif (this._isMeasureProperty(oEntityDef.property[i])) {\n\t\t\t\t\t\t\t\t\t\taMeasureFilterName.push(oEntityDef.property[i].name);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (oEntityDef.navigationProperty) {\n\t\t\t\t\t\t\t\tfor (i = 0; i < oEntityDef.navigationProperty.length; i++) {\n\t\t\t\t\t\t\t\t\toEndRole = oMetaModel.getODataAssociationEnd(oEntityDef, oEntityDef.navigationProperty[i].name);\n\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\t!oEndRole ||\n\t\t\t\t\t\t\t\t\t\toEndRole.type === (oData.selectionVariant as SerializedSelectionVariant).FilterContextUrl\n\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t// check if the end role has cardinality 0..1 or 1\n\t\t\t\t\t\t\t\t\tif (oEndRole.multiplicity === \"1\" || oEndRole.multiplicity === \"0..1\") {\n\t\t\t\t\t\t\t\t\t\toSubEntityDef = oMetaModel.getODataEntityType(oEndRole.type);\n\t\t\t\t\t\t\t\t\t\tif (oSubEntityDef && oSubEntityDef.property) {\n\t\t\t\t\t\t\t\t\t\t\tfor (let j = 0; j < oSubEntityDef.property.length; j++) {\n\t\t\t\t\t\t\t\t\t\t\t\tif (this._isMeasureProperty(oSubEntityDef.property[j])) {\n\t\t\t\t\t\t\t\t\t\t\t\t\taMeasureFilterName.push(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\toEntityDef.navigationProperty[i].name + \".\" + oSubEntityDef.property[j].name\n\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif ((oData.selectionVariant as SerializedSelectionVariant).ParameterContextUrl) {\n\t\t\t\t\t\taParamContextPart = (oData.selectionVariant as SerializedSelectionVariant).ParameterContextUrl!.split(\"#\");\n\t\t\t\t\t}\n\n\t\t\t\t\tif (\n\t\t\t\t\t\taParamContextPart.length === 2 &&\n\t\t\t\t\t\t(oData.selectionVariant as SerializedSelectionVariant).Parameters &&\n\t\t\t\t\t\tthis._constructContextUrl(oModel).indexOf(aParamContextPart[0]) === 0\n\t\t\t\t\t) {\n\t\t\t\t\t\toEntitySet = oMetaModel.getODataEntitySet(aParamContextPart[1]);\n\t\t\t\t\t\tif (oEntitySet) {\n\t\t\t\t\t\t\toEntityDef = oMetaModel.getODataEntityType(oEntitySet.entityType);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\toEntityDef = oMetaModel.getODataEntityType(aFilterContextPart[1]);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (oEntityDef) {\n\t\t\t\t\t\t\tif (oEntityDef.property) {\n\t\t\t\t\t\t\t\tfor (i = 0; i < oEntityDef.property.length; i++) {\n\t\t\t\t\t\t\t\t\tif (this._isMeasureProperty(oEntityDef.property[i])) {\n\t\t\t\t\t\t\t\t\t\taMeasureParameterName.push(oEntityDef.property[i].name);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (aMeasureFilterName.length || aMeasureParameterName.length) {\n\t\t\t\t\t\t// TQ: needs attention\n\t\t\t\t\t\toAdaptedData = extend(true as any, {}, oAdaptedData) as InnerAppData;\n\n\t\t\t\t\t\tthis._removeProperties(aMeasureFilterName, aMeasureParameterName, oAdaptedData);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// annotations are not loaded\n\n\t\t\t\t\tthis._removeAllProperties(oAdaptedData);\n\t\t\t\t\tLog.error(\"NavigationHandler: oMetadata are not fully loaded!\");\n\t\t\t\t}\n\t\t\t} else if (this.oComponent && oModel && oModel.isA(\"sap.ui.model.odata.v4.ODataModel\")) {\n\t\t\t\treturn this._removeSensitiveDataForODataV4(oAdaptedData, true);\n\t\t\t}\n\t\t}\n\t\treturn oAdaptedData;\n\t}\n\n\t/**\n\t * Removes sensitive data from the navigation context.\n\t * @param oData Selection variant\n\t * @param bMeasure Should measures be removed\n\t * @returns The selection variant after sensitive data has been removed\n\t */\n\t_removeSensitiveDataForODataV4(oData: InnerAppData, bMeasure?: boolean): InnerAppData {\n\t\tconst oNavHandler = this,\n\t\t\toSV = new SelectionVariant(oData.selectionVariant),\n\t\t\toModel = this._getModel();\n\t\tlet aFilterContextPart: string[] | undefined;\n\n\t\tif (!oModel.getMetaModel().getObject(\"/\")) {\n\t\t\t// annotations are not loaded\n\t\t\tthis._removeAllProperties(oData);\n\t\t\tLog.error(\"NavigationHandler: oMetadata are not fully loaded!\");\n\t\t\treturn oData;\n\t\t}\n\n\t\tif ((oData.selectionVariant as SerializedSelectionVariant).FilterContextUrl) {\n\t\t\taFilterContextPart = (oData.selectionVariant as SerializedSelectionVariant).FilterContextUrl!.split(\"#\");\n\t\t}\n\n\t\tif (\n\t\t\taFilterContextPart?.length === 2 &&\n\t\t\t(oData.selectionVariant as SerializedSelectionVariant).SelectOptions &&\n\t\t\tthis._constructContextUrl(oModel).indexOf(aFilterContextPart[0]) === 0\n\t\t) {\n\t\t\toSV.removeSelectOption(\"@odata.context\");\n\t\t\toSV.removeSelectOption(\"@odata.metadataEtag\");\n\t\t\toSV.removeSelectOption(\"SAP__Messages\");\n\n\t\t\tconst sEntitySet = aFilterContextPart[1],\n\t\t\t\toMetaModel = oModel.getMetaModel(),\n\t\t\t\taPropertyNames = oSV.getPropertyNames() || [],\n\t\t\t\tfnIsSensitiveData = function (sProp: string, esName: string): boolean {\n\t\t\t\t\tesName = esName || sEntitySet;\n\t\t\t\t\tconst aPropertyAnnotations = oMetaModel.getObject(\"/\" + esName + \"/\" + sProp + \"@\");\n\t\t\t\t\tif (aPropertyAnnotations) {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t(bMeasure && aPropertyAnnotations[\"@com.sap.vocabularies.Analytics.v1.Measure\"]) ||\n\t\t\t\t\t\t\toNavHandler._checkPropertyAnnotationsForSensitiveData(aPropertyAnnotations)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t} else if (aPropertyAnnotations[\"@com.sap.vocabularies.Common.v1.FieldControl\"]) {\n\t\t\t\t\t\t\tconst oFieldControl = aPropertyAnnotations[\"@com.sap.vocabularies.Common.v1.FieldControl\"];\n\t\t\t\t\t\t\tif (oFieldControl[\"$EnumMember\"] && oFieldControl[\"$EnumMember\"].split(\"/\")[1] === \"Inapplicable\") {\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t};\n\n\t\t\tfor (let k = 0; k < aPropertyNames.length; k++) {\n\t\t\t\tconst sProperty = aPropertyNames[k];\n\t\t\t\t// properties of the entity set\n\t\t\t\tif (fnIsSensitiveData(sProperty, sEntitySet)) {\n\t\t\t\t\toSV.removeSelectOption(sProperty);\n\t\t\t\t}\n\t\t\t}\n\t\t\toData.selectionVariant = oSV.toJSONObject();\n\t\t}\n\t\treturn oData;\n\t}\n\n\t_checkPropertyAnnotationsForSensitiveData(aPropertyAnnotations: Record<string, unknown>): boolean {\n\t\treturn !!(\n\t\t\taPropertyAnnotations[\"@com.sap.vocabularies.PersonalData.v1.IsPotentiallySensitive\"] ||\n\t\t\taPropertyAnnotations[\"@com.sap.vocabularies.UI.v1.ExcludeFromNavigationContext\"]\n\t\t);\n\t}\n\n\t/**\n\t * Retrieves the parameter value of the sap-iapp-state (the internal apps) from the AppHash string. It automatically takes care about\n\t * compatibility between the old and the new approach of the sap-iapp-state. Precedence is that the new approach is favoured against the old\n\t * approach.\n\t * @returns The value of sap-iapp-state (i.e. the name of the container to retrieve the parameters), or <code>undefined</code> in\n\t *         case that no sap-iapp-state was found in <code>sAppHash</code>.\n\t * @private\n\t */\n\tgetIAppStateKey(): string | undefined {\n\t\tconst sAppHash = HashChanger.getInstance().getHash();\n\t\treturn this._getInnerAppStateKey(sAppHash);\n\t}\n}\n\n// Exporting the class as properly typed UI5Class\n\nconst NavigationHandlerUI5Class = BaseObject.extend(\n\t\"sap.fe.navigation.NavigationHandler\",\n\tNavigationHandler.prototype as any\n) as typeof NavigationHandler;\ntype NavigationHandlerUI5Class = InstanceType<typeof NavigationHandler>;\nexport default NavigationHandlerUI5Class;\n"],"mappings":"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","ignoreList":[]}