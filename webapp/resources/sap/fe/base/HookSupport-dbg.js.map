{"version":3,"names":["registeredInstances","registeredHandlers","hookable","execution","target","propertyKey","descriptor","indexableTarget","toString","fn","cExTInstanceHookMap","hookedHandlers","push","handlers","Array","isArray","index","indexOf","splice","oldValue","value","returnValue","bind","arguments","handler","_exports","isAlreadyRegistered","existingRegistrations","newRegistration","find","r","name","method","targetMethod","hooks","Symbol","controllerExtensionHandler","String","constructor","Object","defineProperty","initControllerExtensionHookHandlers","controller","registeredHooks","deepClone","indexableController","registeredHook","handlerFunction","getView","attachBeforeExit","removeControllerExtensionHookHandlers","propagateHookFromMixin","source","getOwnPropertyDescriptor","create"],"sourceRoot":".","sources":["HookSupport.ts"],"sourcesContent":["import deepClone from \"sap/base/util/deepClone\";\nimport type { ExtensionOverrideExecution } from \"sap/fe/base/ClassSupport\";\nimport type Controller from \"sap/ui/core/mvc/Controller\";\n/**\n * This type is to be extended with all controller extensions and methods that are hookable.\n */\ntype HookableControllerExtensions = {\n\teditFlow: {\n\t\tonAfterSave: true;\n\t\tonBeforeSave: true;\n\t};\n\tinlineEditFlow: {\n\t\tinlineEditEnd: true;\n\t\tinlineEditStart: true;\n\t};\n\tcollaborationManager: {\n\t\tcollectAvailableCards: true;\n\t};\n\tpaginator: {\n\t\tinitialize: true;\n\t};\n\trouting: {\n\t\tonAfterBinding: true;\n\t};\n\tviewState: {\n\t\tretrieveAdditionalStates: true;\n\t\tapplyAdditionalStates: true;\n\t};\n};\n\ntype HandlerConfiguration<CExtName extends keyof HookableControllerExtensions> = {\n\tname: CExtName;\n\tmethod: keyof HookableControllerExtensions[CExtName];\n};\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype HandlerRegistration = HandlerConfiguration<any> & { targetMethod: string; handlerFunction?: Function };\n\ntype FunctionMap = {\n\t[key: string]: Function;\n};\ntype DeepFunctionMap = {\n\t[key: string]: FunctionMap;\n};\ntype HookMap = {\n\thookedHandlers: {\n\t\t[key: string]: Function[];\n\t};\n};\n\n// Use two arrays as we cannot index a map through an arbitrary object instance\nconst registeredInstances: Function[] = [];\nconst registeredHandlers: HandlerRegistration[][] = [];\n\n/**\n * Marks a controller extension method to be hookable by generating additional methods that can be used to attach and detach handlers at runtime.\n * @param execution\n * @returns A method decorator\n */\nexport function hookable(execution: ExtensionOverrideExecution): MethodDecorator {\n\treturn function (target: unknown, propertyKey: string | symbol, descriptor: PropertyDescriptor) {\n\t\tconst indexableTarget = target as FunctionMap;\n\n\t\tindexableTarget[`attach${propertyKey.toString()}`] = function (fn: Function): void {\n\t\t\tconst cExTInstanceHookMap = this as unknown as HookMap;\n\t\t\tif (!cExTInstanceHookMap.hookedHandlers) {\n\t\t\t\tcExTInstanceHookMap.hookedHandlers = {};\n\t\t\t}\n\t\t\tif (!cExTInstanceHookMap.hookedHandlers[propertyKey.toString()]) {\n\t\t\t\tcExTInstanceHookMap.hookedHandlers[propertyKey.toString()] = [];\n\t\t\t}\n\t\t\tcExTInstanceHookMap.hookedHandlers[propertyKey.toString()].push(fn);\n\t\t};\n\t\tindexableTarget[`detach${propertyKey.toString()}`] = function (fn: Function): void {\n\t\t\tconst cExTInstanceHookMap = this as unknown as HookMap;\n\t\t\tconst handlers = cExTInstanceHookMap.hookedHandlers?.[propertyKey.toString()];\n\t\t\tif (Array.isArray(handlers)) {\n\t\t\t\tconst index = handlers.indexOf(fn);\n\t\t\t\tif (index !== -1) {\n\t\t\t\t\thandlers.splice(index, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tconst oldValue = descriptor.value;\n\t\tif (execution === \"BeforeAsync\" || execution === \"AfterAsync\") {\n\t\t\tdescriptor.value = async function (...args: unknown[]): Promise<unknown> {\n\t\t\t\tconst cExTInstanceHookMap = this as unknown as HookMap;\n\t\t\t\tconst handlers = (cExTInstanceHookMap?.hookedHandlers && cExTInstanceHookMap?.hookedHandlers[propertyKey.toString()]) || [];\n\t\t\t\tlet returnValue: unknown;\n\t\t\t\tif (execution === \"AfterAsync\") {\n\t\t\t\t\treturnValue = await oldValue.bind(this)(...args);\n\t\t\t\t}\n\t\t\t\tfor (const handler of handlers) {\n\t\t\t\t\tawait handler.bind(this)(...args);\n\t\t\t\t}\n\t\t\t\tif (execution === \"BeforeAsync\") {\n\t\t\t\t\treturnValue = await oldValue.bind(this)(...args);\n\t\t\t\t}\n\t\t\t\treturn returnValue;\n\t\t\t};\n\t\t} else {\n\t\t\tdescriptor.value = function (...args: unknown[]): unknown {\n\t\t\t\tconst cExTInstanceHookMap = this as unknown as HookMap;\n\t\t\t\tconst handlers = (cExTInstanceHookMap?.hookedHandlers && cExTInstanceHookMap?.hookedHandlers[propertyKey.toString()]) || [];\n\t\t\t\tlet returnValue: unknown;\n\t\t\t\tif (execution === \"After\") {\n\t\t\t\t\treturnValue = oldValue.bind(this)(...args);\n\t\t\t\t}\n\t\t\t\tfor (const handler of handlers) {\n\t\t\t\t\thandler.bind(this)(...args);\n\t\t\t\t}\n\t\t\t\tif (execution === \"Before\") {\n\t\t\t\t\treturnValue = oldValue.bind(this)(...args);\n\t\t\t\t}\n\t\t\t\treturn returnValue;\n\t\t\t};\n\t\t}\n\t};\n}\n\n/**\n * Checks whether a newRegistration is already included in some existingRegistrations by comparing all relevant attributes.\n * @param existingRegistrations\n * @param newRegistration\n * @returns Result of the check\n */\nfunction isAlreadyRegistered(existingRegistrations: HandlerRegistration[], newRegistration: HandlerRegistration): boolean {\n\treturn !!existingRegistrations.find(\n\t\t(r) => r.name === newRegistration.name && r.method === newRegistration.method && r.targetMethod === newRegistration.targetMethod\n\t);\n}\n\nexport const hooks = Symbol(\"hooks\");\n\n/**\n * Registers a method as controller extension hook handler.\n *\n * Currently, only methods of runtime building blocks are supported.\n * @param name Controller extension to hook into\n * @param method Method to hook into\n * @returns A method decorator\n */\nexport function controllerExtensionHandler<CExtName extends keyof HookableControllerExtensions>(\n\tname: CExtName,\n\tmethod: keyof HookableControllerExtensions[CExtName]\n): MethodDecorator {\n\treturn function (target: { constructor: Function & { [hooks]?: HandlerRegistration[] } }, propertyKey: string) {\n\t\tconst newRegistration = { name, method: String(method), targetMethod: propertyKey };\n\t\tconst index = registeredInstances.indexOf(target.constructor);\n\t\tif (!target.constructor[hooks]) {\n\t\t\tObject.defineProperty(target.constructor, hooks, {\n\t\t\t\tvalue: []\n\t\t\t});\n\t\t}\n\t\ttarget.constructor[hooks]?.push(newRegistration);\n\t\t// We need to check if this exact handler is already registered as handlers are registered statically (on the constructor)\n\t\tif (index !== -1 && !isAlreadyRegistered(registeredHandlers[index], newRegistration)) {\n\t\t\tregisteredHandlers[index].push(newRegistration);\n\t\t} else {\n\t\t\tregisteredInstances.push(target.constructor);\n\t\t\tregisteredHandlers.push([newRegistration]);\n\t\t}\n\t} as MethodDecorator;\n}\n\n/**\n * Initializes all controller extension handlers registered for a given target.\n * @param target Target class to initialize the handlers for\n * @param target.constructor\n * @param controller PageController instance to get the controller extensions instances from\n */\nexport function initControllerExtensionHookHandlers(\n\ttarget: { constructor: Function & { [hooks]?: HandlerRegistration[] } } & { [hooks]?: HandlerRegistration[] },\n\tcontroller: Controller\n): void {\n\tif (target.constructor[hooks]) {\n\t\tlet registeredHooks = target.constructor[hooks];\n\t\ttarget[hooks] = deepClone(registeredHooks);\n\t\tregisteredHooks = target[hooks]!;\n\t\tconst indexableTarget = target as unknown as FunctionMap;\n\t\tconst indexableController = controller as unknown as DeepFunctionMap;\n\t\tfor (const registeredHook of registeredHooks) {\n\t\t\tregisteredHook.handlerFunction = indexableTarget[registeredHook.targetMethod].bind(target);\n\t\t\tindexableController[registeredHook.name][`attach${String(registeredHook.method)}`](registeredHook.handlerFunction);\n\t\t\tcontroller.getView()?.attachBeforeExit(() => {\n\t\t\t\tindexableController[registeredHook.name][`detach${String(registeredHook.method)}`](registeredHook.handlerFunction);\n\t\t\t});\n\t\t}\n\t}\n}\n\nexport function removeControllerExtensionHookHandlers(\n\ttarget: { constructor: Function & { [hooks]?: HandlerRegistration[] } } & { [hooks]?: HandlerRegistration[] },\n\tcontroller: Controller\n): void {\n\tif (target[hooks]) {\n\t\tconst registeredHooks = target[hooks];\n\t\tconst indexableController = controller as unknown as DeepFunctionMap;\n\t\tfor (const registeredHook of registeredHooks) {\n\t\t\tindexableController[registeredHook.name]?.[`detach${String(registeredHook.method)}`]?.(registeredHook.handlerFunction);\n\t\t}\n\t}\n}\n\nexport function propagateHookFromMixin(\n\ttarget: Function & { [hooks]?: HandlerRegistration[] },\n\tsource: Function & { [hooks]?: HandlerRegistration[] }\n): void {\n\tif (source[hooks]) {\n\t\tif (target[hooks]) {\n\t\t\ttarget[hooks]!.splice(0, 0, ...source[hooks]);\n\t\t} else {\n\t\t\tObject.defineProperty(target, hooks, Object.getOwnPropertyDescriptor(source, hooks) || Object.create([]));\n\t\t}\n\t}\n}\n"],"mappings":"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","ignoreList":[],"file":"HookSupport-dbg.js"}