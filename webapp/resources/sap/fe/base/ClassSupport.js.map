{"version":3,"file":"ClassSupport.js","names":["ensureMetadata","target","metadata","merge","controllerExtensions","properties","aggregations","references","associations","methods","events","interfaces","prepareGetAPIFunction","oEvent","apiFQN","arguments","length","undefined","getMetadata","getName","oSource","getSource","_getAPIExtension","isA","getParent","this","isDependentBound","oDependents","getDependents","hasCorrectDependent","find","oDependent","oSourceMap","instanceMap","get","targetControl","ensureGetAPI","__apiRegistered","WeakMap","registerInstance","_instance","constructor","set","push","getAPI","defineState","propertyKey","propertyDescriptor","stateProperty","Error","writable","statePropertyDefaultValue","initializer","_exports","methodOverride","extensionName","override","overrides","currentTarget","extension","toString","extensible","overrideExecution","descriptor","hookable","publicExtension","enumerable","public","privateExtension","finalExtension","final","usingExtension","extensionClass","event","eventKey","property","attributeDefinition","bindable","isBindingInfo","group","hasOwnProperty","defaultValue","aggregation","aggregationDefinition","multiple","isDefault","defaultAggregation","association","ui5AssociationMetadata","implementInterface","interfaceName","xmlEventHandler","propertykey","currentConstructor","_len","args","Array","_key","defineUI5Class","sTarget","metadataDefinition","prototype","key","isArray","concat","registerUI5Metadata","mixin","interfaceClass","baseCtor","extend","interfaceProtoTypeToMix","_addInterfaceProtoTypesToBaseClass","Object","getPrototypeOf","propagateHookFromMixin","setupMixin","createReference","current","setCurrent","oControlInstance","defineReference","BaseObject","isObjectA","baseClassMetadata","interfaceClassPrototype","getInterfaceName","getOwnPropertyNames","forEach","name","defineProperty","getOwnPropertyDescriptor","create","_getHandlerForStateProperty","jsonModel","prop","pathInModel","oObj","deepClone","getObject","oTarget","model","Proxy","p","receiver","ref","Reflect","bind","isNaN","Number","__bindingInfo","path","boundProperties","Symbol","createStateProxy","statePropertyName","boundToStateProps","initialData","setModel","JSONModel","stateModel","getModel","attachPropertyChange","evt","getParameter","substring","includes","setProperty","__stateCreated","proxy","setStateModel","value","knownBoundProperties","_ignoreStatePropertyUpdate","setResult","_updateStateDebounced","configurable","_createStateProperty","obj","updatingState","propertyName","propertyDef","bindToState","_updateState","async","_updateStateTimer","onStateChange","_changedProps","changedProp","setTimeout","__stateName","fnApplySettings","applySettings","mSettings","scope","models","$componentState","call","fnSetProperty","sPropertyName","oValue","bSuppressInvalidate","clazz","inObj","objName","baseType","getStereotype","rendererDefinition","renderer","render","apiVersion","keys","e","cExtName","output","fnInit","init","fnAfterInit","afterInit","_this","_len2","_key2","apply","aPropertyKeys","propertyDefault","_bindingProperties","v","mProperties","propertyValue","getProperty","bindingPropertyValue","propValue","_applyingSettings","aAggregationKeys","aggregationKey","aggregationDef","setAggregation","aggregationContent","getAggregation","aAssociationKeys","associationKey","setAssociation","getAssociation","referenceProperties","methodName","methodDefinition","methodHolder","methodArrays","reverse","result","_len3","methodArgs","_key3","arg","oExtension","pol","_len4","_key4","oClass","Metadata","createClass","uid","ControllerMetadata","_staticOverride","_override","ObjectPath"],"sources":["./ClassSupport.ts"],"sourcesContent":["import ObjectPath from \"sap/base/util/ObjectPath\";\nimport deepClone from \"sap/base/util/deepClone\";\nimport merge from \"sap/base/util/merge\";\nimport uid from \"sap/base/util/uid\";\nimport { hookable, propagateHookFromMixin } from \"sap/fe/base/HookSupport\";\nimport type { Ref } from \"sap/fe/base/jsx-runtime/jsx\";\nimport type UI5Event from \"sap/ui/base/Event\";\nimport type ManagedObject from \"sap/ui/base/ManagedObject\";\nimport Metadata from \"sap/ui/base/Metadata\";\nimport BaseObject from \"sap/ui/base/Object\";\nimport type Control from \"sap/ui/core/Control\";\nimport type { $ControlSettings } from \"sap/ui/core/Control\";\nimport type UI5Element from \"sap/ui/core/Element\";\nimport type ControllerExtension from \"sap/ui/core/mvc/ControllerExtension\";\nimport ControllerMetadata from \"sap/ui/core/mvc/ControllerMetadata\";\nimport type OverrideExecution from \"sap/ui/core/mvc/OverrideExecution\";\nimport type Context from \"sap/ui/model/Context\";\nimport type { Model$PropertyChangeEvent } from \"sap/ui/model/Model\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\n\ntype OverrideDefinition = Record<string, Function>;\ntype UI5ControllerMethodDefinition = {\n\toverrideExecution?: OverrideExecution;\n\tpublic?: boolean;\n\tfinal?: boolean;\n};\nexport type NonAbstractClass<T> = Pick<T, keyof T> & (new (...args: unknown[]) => T);\n\ntype UI5PropertyMetadata = {\n\ttype: string;\n\tbindable?: boolean;\n\trequired?: boolean;\n\tgroup?: string;\n\tdefaultValue?: unknown;\n\tbyValue?: boolean;\n\tisBindingInfo?: boolean;\n\tbindToState?: boolean;\n\texpectedAnnotations?: string[];\n\texpectedTypes?: string[];\n\tallowedValues?: string[];\n\tvisibility?: string;\n};\nexport type UI5AggregationMetadata = {\n\ttype: string;\n\taltTypes?: string[];\n\tmultiple?: boolean;\n\tisDefault?: boolean;\n\tdefaultValue?: unknown;\n\tdefaultClass?: unknown;\n\tsingularName?: string;\n\tvisibility?: string;\n\tforwarding?: object;\n};\nexport type UI5AssociationMetadata = {\n\ttype: string;\n\tmultiple?: boolean;\n\tsingularName?: string;\n};\nexport type UI5ControlMetadataDefinition = {\n\tdefaultAggregation?: string;\n\tcontrollerExtensions: Record<string, typeof ControllerExtension | Function>;\n\tproperties: Record<string, UI5PropertyMetadata>;\n\taggregations: Record<string, UI5AggregationMetadata>;\n\treferences: Record<string, boolean>;\n\tassociations: Record<string, UI5AssociationMetadata>;\n\tmethods: Record<string, UI5ControllerMethodDefinition>;\n\tevents: Record<string, {}>;\n\tinterfaces: string[];\n\tlibrary?: string;\n\tdesigntime?: string;\n\tconfig?: {\n\t\tfullWidth?: boolean;\n\t};\n\tstateProperty?: string;\n\tstatePropertyDefaultValue?: unknown;\n\tmanifest?: string | unknown;\n\treturnTypes?: string[];\n\tbuildingBlockMetadata?: unknown;\n};\nexport type AccessorDescriptor<T> = TypedPropertyDescriptor<T> & { initializer?: () => T };\ntype UI5ControllerDefinition = {\n\toverride?: { extension?: Record<string, OverrideDefinition> } & {\n\t\t[k: string]: Function;\n\t};\n\toverrides?: { extension?: Record<string, OverrideDefinition> } & {\n\t\t[k: string]: Function;\n\t};\n\tmetadata?: UI5ControlMetadataDefinition;\n\trenderer?: Function;\n};\n\ntype UI5ControlDefinition = {\n\tmetadata?: UI5ControlMetadataDefinition;\n\toverride?: unknown;\n\trenderer?: Function;\n};\n\ntype UI5APIControl = Control & {\n\tgetAPI(event: UI5Event, fqdn?: string): UI5APIControl | undefined;\n\tinstanceMap: WeakMap<object, object[]>;\n\t__apiRegistered: boolean;\n} & {\n\t[k: string]: Function;\n};\n\nexport type XMLEventHolder = {\n\tgetAPI(event: UI5Event, fqdn?: string): UI5APIControl | undefined;\n\tinstanceMap: WeakMap<object, object[]>;\n};\n\ntype ControlPropertyNames<T> = {\n\t// needed because of the TS compiler\n\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\t[K in keyof T]: T[K] extends Function ? never : K;\n}[keyof T];\nexport type PropertiesOf<T, K extends keyof T | undefined = undefined> = Partial<Pick<T, ControlPropertyNames<T>>> &\n\t(K extends keyof T ? Partial<Pick<T, K>> : {}) &\n\t$ControlSettings;\nexport type ConvertContextToString<T> = {\n\t[K in keyof T]: K extends \"metaPath\" | \"contextPath\" ? string : T[K];\n};\ntype ContextToString<T> = {\n\t[K in keyof T]: T[K] extends Context | undefined ? string | undefined : T[K];\n};\n\nexport type PropertiesOfBuildingBlock<T> = ContextToString<PropertiesOf<T>>;\nexport type StrictPropertiesOf<T> = Pick<T, ControlPropertyNames<T>>;\nexport type UI5Accessors<T> = {\n\t// Add all the getXXX method, might add too much as I'm not filtering on actual properties...\n\t[P in keyof Required<T> as `get${Capitalize<string & P>}`]: () => T[P];\n};\nexport type UI5Setters<T> = {\n\t// Add all the setXXX method, might add too much as I'm not filtering on actual properties...\n\t[P in keyof Required<T> as `set${Capitalize<string & P>}`]: (value: T[P]) => T;\n};\nexport type EnhanceWithUI5<T> = {\n\tnew (props: PropertiesOf<T>): EnhanceWithUI5<T>;\n\tnew (sId: string, props: PropertiesOf<T>): EnhanceWithUI5<T>;\n} & T &\n\tUI5Accessors<T> &\n\tUI5Setters<T>;\n\nexport type ExtensionOverrideExecution = \"Instead\" | \"Before\" | \"After\" | \"AfterAsync\" | \"BeforeAsync\";\n\nconst ensureMetadata = function (target: UI5ControllerDefinition | UI5ControlDefinition): UI5ControlMetadataDefinition {\n\ttarget.metadata = merge(\n\t\t{\n\t\t\tcontrollerExtensions: {},\n\t\t\tproperties: {},\n\t\t\taggregations: {},\n\t\t\treferences: {},\n\t\t\tassociations: {},\n\t\t\tmethods: {},\n\t\t\tevents: {},\n\t\t\tinterfaces: []\n\t\t},\n\t\ttarget.metadata ?? {}\n\t) as UI5ControlMetadataDefinition;\n\treturn target.metadata;\n};\n\n/**\n * Method that will find the correct API object based on the current control hierarchy.\n * @param target\n * @returns The proper getAPI function for this constructor\n */\nfunction prepareGetAPIFunction(target: UI5APIControl) {\n\treturn function <T extends UI5APIControl>(\n\t\tthis: UI5APIControl,\n\t\toEvent: UI5Event,\n\t\tapiFQN: string = target.getMetadata().getName()\n\t): T | undefined {\n\t\tlet oSource = oEvent.getSource() as ManagedObject | null;\n\t\tif (target._getAPIExtension) {\n\t\t\toSource = target._getAPIExtension(oSource) ?? oSource;\n\t\t}\n\t\twhile (oSource && !oSource.isA<T>(apiFQN) && oSource.getParent) {\n\t\t\tif (this.isDependentBound) {\n\t\t\t\tconst oDependents = (oSource as Control).getDependents();\n\t\t\t\tconst hasCorrectDependent = oDependents.find((oDependent: UI5Element) => oDependent.isA(apiFQN));\n\t\t\t\tif (hasCorrectDependent) {\n\t\t\t\t\toSource = hasCorrectDependent as unknown as T;\n\t\t\t\t} else {\n\t\t\t\t\toSource = oSource.getParent() as unknown as T;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toSource = oSource.getParent();\n\t\t\t}\n\t\t}\n\n\t\tif (!oSource || !oSource.isA<T>(apiFQN)) {\n\t\t\tconst oSourceMap = this.instanceMap.get(this) as T[];\n\t\t\toSource = oSourceMap?.[oSourceMap.length - 1];\n\t\t}\n\t\tlet targetControl;\n\t\tif (oSource && oSource.isA<T>(apiFQN)) {\n\t\t\ttargetControl = oSource;\n\t\t}\n\t\treturn targetControl;\n\t};\n}\n\n/**\n * Ensures that when an xmlEventHandler is defined, the `getAPI` function is properly assigned.\n * @param target The class constructor that should hold the static functions\n */\nconst ensureGetAPI = function (target: UI5APIControl): void {\n\tif (!target.__apiRegistered) {\n\t\ttarget.__apiRegistered = true;\n\t\ttarget.instanceMap = new WeakMap<object, object[]>();\n\t\ttarget.registerInstance = function (_instance: Function): void {\n\t\t\tif (!this.instanceMap.get(_instance.constructor)) {\n\t\t\t\tthis.instanceMap.set(_instance.constructor, []);\n\t\t\t}\n\t\t\t(this.instanceMap.get(_instance.constructor) as object[]).push(_instance);\n\t\t};\n\t\ttarget.getAPI = prepareGetAPIFunction(target);\n\t}\n};\n\ntype ExtendWithObject<T, K> = T extends object ? K & { [TKey in keyof T]?: BindingInfoHolder<T[TKey]> } : K;\n\nexport type StateOf<T> = {\n\t[K in keyof T]: T[K] extends Array<infer U> | ReadonlyArray<infer U> ? ExtendWithObject<U, ReadonlyArray<U>> : T[K];\n};\nexport type BindingInfoHolder<T> = T & {\n\t__bindingInfo: {\n\t\tpath: string;\n\t\tmodel: string;\n\t\ttype: T;\n\t};\n};\n\n/**\n * Allows to define a property that will hold the control state.\n *\n * Properties defined with this decorator will be automatically bound to the control state when used in JSX.\n * Arrays need to be bound using the `bindState` function.\n * @returns A property decorator\n */\nexport function defineState(): PropertyDecorator {\n\treturn function (target: UI5ControlDefinition, propertyKey: string, propertyDescriptor: TypedPropertyDescriptor<unknown>) {\n\t\tconst metadata = ensureMetadata(target);\n\t\tif (metadata.stateProperty !== undefined) {\n\t\t\tthrow new Error(\"Only one state property per control is allowed\");\n\t\t}\n\t\tmetadata.stateProperty = propertyKey;\n\t\tdelete propertyDescriptor.writable;\n\t\tmetadata.statePropertyDefaultValue ??= (propertyDescriptor as { initializer?: Function }).initializer?.();\n\t\tdelete (propertyDescriptor as { initializer?: Function }).initializer;\n\n\t\treturn propertyDescriptor;\n\t} as unknown as PropertyDecorator; // This is technically an accessor decorator, but somehow the compiler doesn't like it if i declare it as such.;\n}\n\n/* #region CONTROLLER EXTENSIONS */\n\n/**\n * Defines that the following method is an override for the method name with the same name in the specific controller extension or base implementation.\n * @param extensionName The name of the extension that will be overridden\n * @returns The decorated method\n */\nexport function methodOverride(extensionName?: string): MethodDecorator {\n\treturn function (target: UI5ControllerDefinition, propertyKey) {\n\t\tif (!target.override) {\n\t\t\ttarget.override = {};\n\t\t}\n\t\tif (!target.overrides) {\n\t\t\ttarget.overrides = {};\n\t\t}\n\t\tlet currentTarget = target.overrides;\n\t\tif (extensionName) {\n\t\t\tif (!currentTarget.extension) {\n\t\t\t\tcurrentTarget.extension = {};\n\t\t\t}\n\t\t\tif (!currentTarget.extension[extensionName]) {\n\t\t\t\tcurrentTarget.extension[extensionName] = {};\n\t\t\t}\n\t\t\tcurrentTarget = currentTarget.extension[extensionName];\n\t\t}\n\t\tcurrentTarget[propertyKey.toString()] = (target as Record<string, Function>)[propertyKey.toString()];\n\t};\n}\n\n/**\n * Defines that the method can be extended by other controller extension based on the defined overrideExecutionType.\n * @param overrideExecution The OverrideExecution defining when the override should run (Before / After / Instead)\n * @returns The decorated method\n */\nexport function extensible(overrideExecution: ExtensionOverrideExecution): MethodDecorator {\n\treturn function (target: UI5ControllerDefinition, propertyKey, descriptor: PropertyDescriptor) {\n\t\tconst metadata = ensureMetadata(target);\n\t\tif (!metadata.methods[propertyKey.toString()]) {\n\t\t\tmetadata.methods[propertyKey.toString()] = {};\n\t\t}\n\t\tmetadata.methods[propertyKey.toString()].overrideExecution = overrideExecution as unknown as OverrideExecution;\n\n\t\t// by default, every extensible method is also hookable (except those defined as Instead)\n\t\tif (overrideExecution !== \"Instead\") {\n\t\t\thookable(overrideExecution)(target, propertyKey, descriptor);\n\t\t}\n\t};\n}\n\n/**\n * Defines that the method will be publicly available for controller extension usage.\n * @returns The decorated method\n */\nexport function publicExtension(): MethodDecorator {\n\treturn function (target: UI5ControllerDefinition, propertyKey, descriptor): void {\n\t\tconst metadata = ensureMetadata(target);\n\t\tdescriptor.enumerable = true;\n\t\tif (!metadata.methods[propertyKey.toString()]) {\n\t\t\tmetadata.methods[propertyKey.toString()] = {};\n\t\t}\n\t\tmetadata.methods[propertyKey.toString()].public = true;\n\t};\n}\n/**\n * Defines that the method will be only available for internal usage of the controller extension.\n * @returns The decorated method\n */\nexport function privateExtension(): MethodDecorator {\n\treturn function (target: UI5ControllerDefinition, propertyKey, descriptor) {\n\t\tconst metadata = ensureMetadata(target);\n\t\tdescriptor.enumerable = true;\n\t\tif (!metadata.methods[propertyKey.toString()]) {\n\t\t\tmetadata.methods[propertyKey.toString()] = {};\n\t\t}\n\t\tmetadata.methods[propertyKey.toString()].public = false;\n\t};\n}\n/**\n * Defines that the method cannot be further extended by other controller extension.\n * @returns The decorated method\n */\nexport function finalExtension(): MethodDecorator {\n\treturn function (target: UI5ControllerDefinition, propertyKey, descriptor) {\n\t\tconst metadata = ensureMetadata(target);\n\t\tdescriptor.enumerable = true;\n\t\tif (!metadata.methods[propertyKey.toString()]) {\n\t\t\tmetadata.methods[propertyKey.toString()] = {};\n\t\t}\n\t\tmetadata.methods[propertyKey.toString()].final = true;\n\t};\n}\n\n/**\n * Defines that we are going to use instantiate a controller extension under the following variable name.\n * @param extensionClass The controller extension that will be instantiated\n * @returns The decorated property\n */\nexport function usingExtension(extensionClass: typeof ControllerExtension | Function): PropertyDecorator {\n\treturn function (target: UI5ControllerDefinition, propertyKey: string, propertyDescriptor: TypedPropertyDescriptor<unknown>) {\n\t\tconst metadata = ensureMetadata(target);\n\t\tdelete (propertyDescriptor as { initializer?: unknown }).initializer;\n\t\tmetadata.controllerExtensions[propertyKey.toString()] = extensionClass;\n\t\treturn propertyDescriptor;\n\t} as unknown as PropertyDecorator; // This is technically an accessor decorator, but somehow the compiler doesn't like it if I declare it as such.\n}\n\n/* #endregion */\n\n/* #region CONTROL */\n/**\n * Indicates that the property shall be declared as an event on the control metadata.\n * @returns The decorated property\n */\nexport function event(): PropertyDecorator {\n\treturn function (target: UI5ControlDefinition, eventKey: string | Symbol) {\n\t\tconst metadata = ensureMetadata(target);\n\t\tif (!metadata.events[eventKey.toString()]) {\n\t\t\tmetadata.events[eventKey.toString()] = {};\n\t\t}\n\t};\n}\n\n/**\n * Defines the following property in the control metadata.\n * @param attributeDefinition The property definition\n * @returns The decorated property.\n */\nexport function property(attributeDefinition: UI5PropertyMetadata): PropertyDecorator {\n\treturn function (target: UI5ControlDefinition, propertyKey: string, propertyDescriptor: TypedPropertyDescriptor<unknown>) {\n\t\tconst metadata = ensureMetadata(target);\n\t\tif (attributeDefinition.bindable === undefined) {\n\t\t\tattributeDefinition.bindable = true;\n\t\t}\n\t\tif (attributeDefinition.isBindingInfo === true) {\n\t\t\tattributeDefinition.bindable = false;\n\t\t\tattributeDefinition.group = \"Data\";\n\t\t}\n\t\tif (!metadata.properties[propertyKey]) {\n\t\t\tmetadata.properties[propertyKey] = attributeDefinition;\n\t\t}\n\t\tdelete propertyDescriptor.writable;\n\t\tif (!attributeDefinition.hasOwnProperty(\"defaultValue\")) {\n\t\t\t// Not explicitely defined\n\t\t\tattributeDefinition.defaultValue ??= (propertyDescriptor as { initializer?: Function }).initializer?.();\n\t\t}\n\n\t\tdelete (propertyDescriptor as { initializer?: unknown }).initializer;\n\n\t\treturn propertyDescriptor;\n\t} as unknown as PropertyDecorator; // This is technically an accessor decorator, but somehow the compiler doesn't like it if i declare it as such.\n}\n\n/**\n * Defines and configures the following aggregation in the control metadata.\n * @param aggregationDefinition The aggregation definition\n * @returns The decorated property.\n */\nexport function aggregation(aggregationDefinition: UI5AggregationMetadata): PropertyDecorator {\n\treturn function (target: UI5ControlDefinition, propertyKey: string, propertyDescriptor: TypedPropertyDescriptor<unknown>) {\n\t\tconst metadata = ensureMetadata(target);\n\t\tif (aggregationDefinition.multiple === undefined) {\n\t\t\t// UI5 defaults this to true but this is just weird...\n\t\t\taggregationDefinition.multiple = false;\n\t\t}\n\t\tif (!metadata.aggregations[propertyKey]) {\n\t\t\tmetadata.aggregations[propertyKey] = aggregationDefinition;\n\t\t}\n\t\tif (aggregationDefinition.isDefault) {\n\t\t\tmetadata.defaultAggregation = propertyKey;\n\t\t}\n\t\tdelete propertyDescriptor.writable;\n\t\taggregationDefinition.defaultValue ??= (propertyDescriptor as { initializer?: Function }).initializer?.();\n\t\tdelete (propertyDescriptor as { initializer?: unknown }).initializer;\n\n\t\treturn propertyDescriptor;\n\t} as unknown as PropertyDecorator; // This is technically an accessor decorator, but somehow the compiler doesn't like it if I declare it as such.\n}\n\n/**\n * Defines and configures the following association in the control metadata.\n * @param ui5AssociationMetadata The definition of the association.\n * @returns The decorated property\n */\nexport function association(ui5AssociationMetadata: UI5AssociationMetadata): PropertyDecorator {\n\treturn function (target: UI5ControlDefinition, propertyKey: string, propertyDescriptor: TypedPropertyDescriptor<unknown>) {\n\t\tconst metadata = ensureMetadata(target);\n\t\tif (!metadata.associations[propertyKey]) {\n\t\t\tmetadata.associations[propertyKey] = ui5AssociationMetadata;\n\t\t}\n\t\tdelete propertyDescriptor.writable;\n\t\tdelete (propertyDescriptor as { initializer?: unknown }).initializer;\n\n\t\treturn propertyDescriptor;\n\t} as unknown as PropertyDecorator; // This is technically an accessor decorator, but somehow the compiler doesn't like it if i declare it as such.\n}\n\n/**\n * Defines in the metadata that this control implements a specific interface.\n * @param interfaceName The name of the implemented interface\n * @returns The decorated method\n */\nexport function implementInterface(interfaceName: string): PropertyDecorator {\n\treturn function (target: UI5ControlDefinition) {\n\t\tconst metadata = ensureMetadata(target);\n\n\t\tmetadata.interfaces.push(interfaceName);\n\t};\n}\n\n/**\n * Indicates that the following method should also be exposed statically so we can call it from XML.\n * @returns The decorated method\n */\nexport function xmlEventHandler(): MethodDecorator {\n\treturn function (target: UI5ControlDefinition, propertykey) {\n\t\tconst currentConstructor: UI5APIControl = target.constructor as unknown as UI5APIControl;\n\t\tensureGetAPI(currentConstructor);\n\t\tcurrentConstructor[propertykey.toString()] = function (...args: unknown[]): void {\n\t\t\tif (args?.length) {\n\t\t\t\tconst currentTarget = currentConstructor.getAPI(args[0] as UI5Event);\n\t\t\t\tcurrentTarget?.[propertykey.toString()](...args);\n\t\t\t}\n\t\t};\n\t};\n}\n\ntype UI5ControlAndMore = typeof Control &\n\tFunction & {\n\t\tregisterInstance?: Function;\n\t\toverride?: Function;\n\t\trenderer?: unknown;\n\t\trender: Function;\n\t\tmetadata?: UI5ControlMetadataDefinition;\n\t};\n\n/**\n * Indicates that the following class should define a UI5 control of the specified name.\n * @param sTarget The fully qualified name of the UI5 class\n * @param metadataDefinition Inline metadata definition\n * @returns A class decorator that will create a ui5 class\n */\nexport function defineUI5Class(sTarget: string, metadataDefinition?: Partial<UI5ControlMetadataDefinition>): ClassDecorator {\n\treturn function (constructor: UI5ControlAndMore) {\n\t\tif (!constructor.prototype.metadata) {\n\t\t\tconstructor.prototype.metadata = {};\n\t\t}\n\t\tif (metadataDefinition) {\n\t\t\tfor (const key in metadataDefinition) {\n\t\t\t\tif (constructor.prototype.metadata[key] !== undefined) {\n\t\t\t\t\tif (Array.isArray(constructor.prototype.metadata[key])) {\n\t\t\t\t\t\tconstructor.prototype.metadata[key] = constructor.prototype.metadata[key].concat(\n\t\t\t\t\t\t\tmetadataDefinition[key as keyof UI5ControlMetadataDefinition]\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconstructor.prototype.metadata[key] = {\n\t\t\t\t\t\t\t...constructor.prototype.metadata[key],\n\t\t\t\t\t\t\t...(metadataDefinition[key as keyof UI5ControlMetadataDefinition] as object)\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconstructor.prototype.metadata[key] = metadataDefinition[key as keyof UI5ControlMetadataDefinition];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn registerUI5Metadata(constructor, sTarget, constructor.prototype);\n\t} as ClassDecorator;\n}\ntype Constructor<T = {}> = new (...a: unknown[]) => T;\n/**\n * Mixin a specific interface including all its methods and properties into the control.\n * @param interfaceClass Implementation class of the control\n * @returns The decorated class\n */\nexport function mixin<T extends IInterfaceWithMixin>(interfaceClass: Constructor<T>): ClassDecorator {\n\treturn function (baseCtor: UI5ControlAndMore) {\n\t\tif (baseCtor.prototype.extend) {\n\t\t\tthrow new Error(\"The mixinInterface decorator must be placed after `defineUi5Class`\");\n\t\t}\n\t\tconst metadata = ensureMetadata(baseCtor.prototype);\n\n\t\tlet interfaceProtoTypeToMix = interfaceClass.prototype;\n\t\twhile (interfaceProtoTypeToMix) {\n\t\t\tbaseCtor = _addInterfaceProtoTypesToBaseClass(baseCtor, metadata, interfaceProtoTypeToMix);\n\t\t\tinterfaceProtoTypeToMix = Object.getPrototypeOf(interfaceProtoTypeToMix);\n\t\t}\n\t\tpropagateHookFromMixin(baseCtor, interfaceClass);\n\n\t\t// Hook to add potentially more logic to the mixin\n\t\tinterfaceClass.prototype.setupMixin?.(baseCtor);\n\t\treturn baseCtor;\n\t} as ClassDecorator;\n}\n\nexport interface IInterfaceWithMixin {\n\t/**\n\t * Returns the name of the interface that should be added to the receiving control.\n\t * If not defined, the interface will not be added.\n\t * @returns The name of the interface\n\t */\n\tgetInterfaceName?(): string;\n\n\t/**\n\t * Hook to add more logic to the mixin.\n\t * This is called before the controls are created and can be used to add some additional logic to the base class.\n\t * @param baseClass The base class that will be extended\n\t */\n\tsetupMixin?(baseClass: Function): void;\n}\n\nexport function createReference<T extends UI5Element>(): Ref<T> {\n\treturn {\n\t\tcurrent: undefined as unknown as T,\n\t\tsetCurrent: function (oControlInstance: T): void {\n\t\t\tthis.current = oControlInstance;\n\t\t}\n\t};\n}\n/**\n * Defines that the following object will hold a reference to a control through jsx templating.\n * @returns The decorated property.\n */\nexport function defineReference(): PropertyDecorator {\n\treturn function (target: UI5ControlDefinition, propertyKey: string, propertyDescriptor: TypedPropertyDescriptor<unknown>) {\n\t\tconst metadata = ensureMetadata(target);\n\t\tdelete propertyDescriptor.writable;\n\t\tdelete (propertyDescriptor as { initializer?: unknown }).initializer;\n\t\tif (BaseObject.isObjectA(target, \"sap.ui.core.Control\")) {\n\t\t\tif (!metadata.references[propertyKey]) {\n\t\t\t\tmetadata.references[propertyKey] = true;\n\t\t\t}\n\t\t} else {\n\t\t\t(propertyDescriptor as { initializer?: unknown }).initializer = createReference;\n\t\t}\n\n\t\treturn propertyDescriptor;\n\t} as unknown as PropertyDecorator; // This is technically an accessor decorator, but somehow the compiler doesn't like it if i declare it as such.;\n}\n\nfunction _addInterfaceProtoTypesToBaseClass(\n\tbaseCtor: UI5ControlAndMore,\n\tbaseClassMetadata: UI5ControlMetadataDefinition,\n\tinterfaceClassPrototype: Function[\"prototype\"]\n): UI5ControlAndMore {\n\tconst interfaceName = interfaceClassPrototype?.getInterfaceName?.();\n\tif (interfaceName) {\n\t\tbaseClassMetadata.interfaces.push(interfaceName);\n\t}\n\n\tObject.getOwnPropertyNames(interfaceClassPrototype).forEach((name) => {\n\t\tif (name !== \"constructor\" && name !== \"setupMixin\" && name !== \"metadata\") {\n\t\t\tif (!baseCtor.prototype[name]) {\n\t\t\t\t// The base class \"wins\" over the mixin\n\t\t\t\tObject.defineProperty(\n\t\t\t\t\tbaseCtor.prototype,\n\t\t\t\t\tname,\n\t\t\t\t\tObject.getOwnPropertyDescriptor(interfaceClassPrototype, name) || Object.create(null)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\tif (name === \"metadata\") {\n\t\t\tbaseCtor.prototype.metadata = merge(baseCtor.prototype.metadata, interfaceClassPrototype.metadata);\n\t\t}\n\t});\n\treturn baseCtor;\n}\n\nfunction _getHandlerForStateProperty(jsonModel: JSONModel, prop: string): unknown {\n\tconst pathInModel = `/${prop.toString()}`;\n\tconst oObj = deepClone(jsonModel.getObject(pathInModel));\n\tlet oTarget;\n\tif (prop === \"__bindingInfo\") {\n\t\treturn { model: \"$componentState\" };\n\t}\n\tif (typeof oObj === \"string\") {\n\t\toTarget = oObj;\n\t} else if (typeof oObj === \"number\") {\n\t\toTarget = oObj;\n\t} else if (typeof oObj === \"boolean\") {\n\t\toTarget = oObj;\n\t} else if (Array.isArray(oObj)) {\n\t\toTarget = new Proxy(oObj, {\n\t\t\tget(target: unknown[], p: string | symbol, receiver: unknown[]): unknown {\n\t\t\t\tconst ref = Reflect.get(target, p, receiver);\n\t\t\t\tif (typeof ref === \"function\") {\n\t\t\t\t\treturn ref.bind(target);\n\t\t\t\t} else if (ref === undefined && isNaN(Number(p.toString()))) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t__bindingInfo: {\n\t\t\t\t\t\t\tmodel: \"$componentState\",\n\t\t\t\t\t\t\tpath: p\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\treturn ref;\n\t\t\t}\n\t\t});\n\t} else {\n\t\toTarget = { ...oObj };\n\t}\n\tif (typeof oTarget === \"object\") {\n\t\toTarget.__bindingInfo = {\n\t\t\tmodel: \"$componentState\",\n\t\t\tpath: pathInModel\n\t\t};\n\t}\n\treturn oTarget;\n}\nconst boundProperties = Symbol(\"boundProperties\");\n\nfunction createStateProxy(\n\ttargetControl: Control & {\n\t\t[boundProperties]: string[];\n\t\t__stateCreated: boolean;\n\t\t_updateState: Function;\n\t\t_updateStateDebounced: Function;\n\t\t_ignoreStatePropertyUpdate: boolean;\n\t\t_updateStateTimer: unknown;\n\t\t_changedProps?: string[];\n\t},\n\tstatePropertyName: string,\n\tboundToStateProps: string[],\n\tinitialData?: object\n): JSONModel {\n\t// Lazy initialization of the state property\n\ttargetControl.setModel(new JSONModel(initialData), \"$componentState\");\n\tconst stateModel = targetControl.getModel(\"$componentState\") as JSONModel;\n\tstateModel.attachPropertyChange((evt: Model$PropertyChangeEvent) => {\n\t\tconst path = evt.getParameter(\"path\")?.substring(1); // to remove the first /\n\t\tif (path && boundToStateProps.includes(path)) {\n\t\t\ttargetControl.setProperty(path, evt.getParameter(\"value\"));\n\t\t}\n\t});\n\ttargetControl.__stateCreated = true;\n\tconst proxy = new Proxy(stateModel, {\n\t\tget: (target: JSONModel, prop: string): unknown => {\n\t\t\treturn _getHandlerForStateProperty(target, prop);\n\t\t},\n\t\tset: (setStateModel: JSONModel, prop, value): boolean => {\n\t\t\t// we need to check whether the property is a known bound property in any of the related classes\n\t\t\tconst knownBoundProperties = targetControl[boundProperties];\n\t\t\tif (knownBoundProperties.includes(prop.toString())) {\n\t\t\t\ttargetControl._ignoreStatePropertyUpdate = true;\n\t\t\t\ttargetControl.setProperty(prop.toString(), value);\n\t\t\t\ttargetControl._ignoreStatePropertyUpdate = false;\n\t\t\t}\n\t\t\tconst setResult = setStateModel.setProperty(`/${prop.toString()}`, value);\n\t\t\ttargetControl._updateStateDebounced(prop.toString());\n\t\t\treturn setResult;\n\t\t}\n\t});\n\tObject.defineProperty(targetControl, statePropertyName, {\n\t\tconfigurable: true,\n\t\tget: () => {\n\t\t\treturn proxy;\n\t\t},\n\t\tset(value) {\n\t\t\t// Replacing the complete state\n\t\t\tstateModel.setProperty(`/`, value);\n\t\t}\n\t});\n\treturn proxy;\n}\n\nfunction _createStateProperty(\n\tobj: UI5ControlDefinition,\n\ttargetControl: Control & {\n\t\t[boundProperties]: string[];\n\t\t__stateCreated: boolean;\n\t\t__stateName: string;\n\t\t_updateState: Function;\n\t\t_updateStateDebounced: Function;\n\t\t_ignoreStatePropertyUpdate: boolean;\n\t\t_updateStateTimer: unknown;\n\t\t_changedProps?: string[];\n\t}\n): void {\n\tif (obj.metadata?.stateProperty || targetControl[boundProperties]) {\n\t\tlet updatingState = false;\n\t\tconst boundToStateProps: string[] = [];\n\t\tfor (const propertyName in obj.metadata?.properties) {\n\t\t\tconst propertyDef = obj.metadata.properties[propertyName];\n\t\t\tif (propertyDef.bindToState) {\n\t\t\t\tboundToStateProps.push(propertyName);\n\t\t\t}\n\t\t}\n\t\t// as we may have bound properties in parent classes and subclasses, we keep track of those in the model itself\n\t\ttargetControl[boundProperties] ??= [];\n\t\ttargetControl[boundProperties] = [...targetControl[boundProperties], ...boundToStateProps];\n\n\t\tif (obj.metadata?.stateProperty) {\n\t\t\t// This method can be used to force the state to be applied and wait for it to be applied in tests\n\t\t\ttargetControl._updateState = async function (): Promise<void> {\n\t\t\t\tdelete this._updateStateTimer;\n\t\t\t\tif (!updatingState) {\n\t\t\t\t\tupdatingState = true;\n\t\t\t\t\tawait (this as { onStateChange?: Function }).onStateChange?.(this._changedProps);\n\t\t\t\t\tthis._changedProps = [];\n\t\t\t\t\tupdatingState = false;\n\t\t\t\t}\n\t\t\t};\n\t\t\ttargetControl._updateStateDebounced = function (changedProp: string): void {\n\t\t\t\tthis._changedProps ??= [];\n\t\t\t\tif (!this._changedProps.includes(changedProp)) {\n\t\t\t\t\tthis._changedProps.push(changedProp);\n\t\t\t\t}\n\t\t\t\tif (!this._updateStateTimer && !updatingState) {\n\t\t\t\t\tthis._updateStateTimer = setTimeout(() => {\n\t\t\t\t\t\tthis._updateState();\n\t\t\t\t\t}, 200);\n\t\t\t\t}\n\t\t\t};\n\t\t\tconst statePropertyName = obj.metadata.stateProperty;\n\t\t\ttargetControl.__stateCreated = false;\n\t\t\ttargetControl.__stateName = statePropertyName;\n\t\t\tObject.defineProperty(targetControl, statePropertyName, {\n\t\t\t\tconfigurable: true,\n\t\t\t\tget: () => {\n\t\t\t\t\treturn createStateProxy(targetControl, statePropertyName, targetControl[boundProperties]);\n\t\t\t\t},\n\t\t\t\tset: (value) => {\n\t\t\t\t\tcreateStateProxy(targetControl, statePropertyName, targetControl[boundProperties], value);\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (obj.metadata.statePropertyDefaultValue) {\n\t\t\t\ttargetControl[obj.metadata.stateProperty as keyof Control] = { ...obj.metadata.statePropertyDefaultValue } as never;\n\t\t\t}\n\t\t\tconst fnApplySettings = targetControl.applySettings;\n\t\t\ttargetControl.applySettings = function (\n\t\t\t\tmSettings: { models?: Record<string, never> },\n\t\t\t\tscope?: object | undefined\n\t\t\t): typeof targetControl {\n\t\t\t\tdelete mSettings?.models?.$componentState;\n\t\t\t\treturn fnApplySettings.call(this, mSettings, scope);\n\t\t\t};\n\t\t}\n\t\tconst fnSetProperty = targetControl.setProperty;\n\t\tif (targetControl[boundProperties].length > 0) {\n\t\t\ttargetControl.setProperty = function (sPropertyName: string, oValue: unknown, bSuppressInvalidate): typeof targetControl {\n\t\t\t\tif (targetControl[boundProperties].includes(sPropertyName) && !this._ignoreStatePropertyUpdate) {\n\t\t\t\t\tif (!this.__stateCreated) {\n\t\t\t\t\t\tcreateStateProxy(targetControl, targetControl.__stateName, targetControl[boundProperties]);\n\t\t\t\t\t}\n\t\t\t\t\t(this.getModel(\"$componentState\") as JSONModel).setProperty(`/${sPropertyName}`, oValue);\n\t\t\t\t\ttargetControl._updateStateDebounced(sPropertyName);\n\t\t\t\t}\n\t\t\t\treturn fnSetProperty.call(this, sPropertyName, oValue, bSuppressInvalidate);\n\t\t\t};\n\t\t}\n\t}\n}\n\n/**\n * Internal heavy lifting that will take care of creating the class property for ui5 to use.\n * @param clazz The class prototype\n * @param name The name of the class to create\n * @param inObj The metadata object\n * @returns The metadata class\n */\nfunction registerUI5Metadata(clazz: UI5ControlAndMore, name: string, inObj: UI5ControllerDefinition | UI5ControlDefinition): Function {\n\tif (clazz.getMetadata?.().isA(\"sap.ui.core.mvc.ControllerExtension\")) {\n\t\tObject.getOwnPropertyNames(inObj).forEach((objName) => {\n\t\t\tconst descriptor = Object.getOwnPropertyDescriptor(inObj, objName);\n\t\t\tif (descriptor && !descriptor.enumerable) {\n\t\t\t\tdescriptor.enumerable = true;\n\t\t\t}\n\t\t});\n\t}\n\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\tconst obj: any = {};\n\tobj.metadata = inObj.metadata || {};\n\tobj.override = inObj.override;\n\tobj.constructor = clazz;\n\tobj.metadata.baseType = Object.getPrototypeOf(clazz.prototype).getMetadata().getName();\n\n\tif ((clazz?.getMetadata() as unknown as { getStereotype: Function })?.getStereotype() === \"control\") {\n\t\tconst rendererDefinition = inObj.renderer || clazz.renderer || clazz.render;\n\t\tobj.renderer = { apiVersion: 2 };\n\t\tif (typeof rendererDefinition === \"function\") {\n\t\t\tobj.renderer.render = rendererDefinition;\n\t\t} else if (rendererDefinition != undefined) {\n\t\t\tobj.renderer = rendererDefinition;\n\t\t}\n\t}\n\tobj.metadata.interfaces = inObj.metadata?.interfaces || clazz.metadata?.interfaces;\n\tObject.keys(clazz.prototype).forEach((key) => {\n\t\tif (key !== \"metadata\") {\n\t\t\ttry {\n\t\t\t\tobj[key] = clazz.prototype[key];\n\t\t\t} catch (e) {\n\t\t\t\t// Do nothing\n\t\t\t}\n\t\t}\n\t});\n\n\tif (obj.metadata?.controllerExtensions && Object.keys(obj.metadata.controllerExtensions).length > 0) {\n\t\tfor (const cExtName in obj.metadata.controllerExtensions) {\n\t\t\tobj[cExtName] = obj.metadata.controllerExtensions[cExtName];\n\t\t}\n\t}\n\tconst output = clazz.extend(name, obj) as typeof Control & Function;\n\tconst fnInit = output.prototype.init;\n\tconst fnAfterInit = output.prototype.afterInit;\n\toutput.prototype.init = function (...args: unknown[]): void {\n\t\tif (fnInit) {\n\t\t\tfnInit.apply(this, args);\n\t\t}\n\t\tif (clazz.registerInstance) {\n\t\t\tclazz.registerInstance(this);\n\t\t}\n\t\tthis.metadata = obj.metadata;\n\n\t\tif (obj.metadata.properties) {\n\t\t\tconst aPropertyKeys = Object.keys(obj.metadata.properties);\n\t\t\taPropertyKeys.forEach((propertyKey) => {\n\t\t\t\tconst propertyDef = obj.metadata.properties[propertyKey];\n\t\t\t\t// If a value was set in `init` we need to make sure it is set in the value in the end\n\t\t\t\tconst propertyDefault = this[propertyKey] ?? propertyDef.defaultValue;\n\t\t\t\tif (propertyDef.isBindingInfo === true) {\n\t\t\t\t\tthis._bindingProperties ??= {};\n\n\t\t\t\t\tObject.defineProperty(this, propertyKey, {\n\t\t\t\t\t\tconfigurable: true,\n\t\t\t\t\t\tset: (v: unknown) => {\n\t\t\t\t\t\t\tthis._bindingProperties[propertyKey] = v;\n\t\t\t\t\t\t\tthis.mProperties[propertyKey] = v;\n\t\t\t\t\t\t\treturn this;\n\t\t\t\t\t\t},\n\t\t\t\t\t\tget(): unknown {\n\t\t\t\t\t\t\t// Special case we need to consider the property first and not just the _bindingProperties\n\t\t\t\t\t\t\t// During the initialization, if the property is set with a non binding value, setProperty is called and not bindProperty\n\t\t\t\t\t\t\tconst propertyValue = this.getProperty(propertyKey);\n\t\t\t\t\t\t\tconst bindingPropertyValue = this._bindingProperties[propertyKey];\n\t\t\t\t\t\t\t// If the property is set to a different value we update the _bindingProperties\n\t\t\t\t\t\t\tif (propertyValue !== undefined && propertyValue !== bindingPropertyValue) {\n\t\t\t\t\t\t\t\tthis._bindingProperties[propertyKey] = propertyValue;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tconst propValue = this._bindingProperties[propertyKey];\n\t\t\t\t\t\t\tif (typeof propValue === \"object\") {\n\t\t\t\t\t\t\t\treturn { ...propValue }; // Create shallow copy\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn propValue;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tObject.defineProperty(this, propertyKey, {\n\t\t\t\t\t\tconfigurable: true,\n\t\t\t\t\t\tset: (v: unknown) => {\n\t\t\t\t\t\t\treturn this.setProperty(propertyKey, v);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tget: () => {\n\t\t\t\t\t\t\treturn this.getProperty(propertyKey);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tif (propertyDefault !== undefined && this[propertyKey] !== propertyDefault) {\n\t\t\t\t\t// don't overwrite the default value if it's already there\n\t\t\t\t\tthis._applyingSettings = true;\n\t\t\t\t\tthis[propertyKey] = propertyDefault;\n\t\t\t\t\tthis._applyingSettings = false;\n\t\t\t\t\tdelete this._applyingSettings;\n\t\t\t\t}\n\t\t\t});\n\t\t\tconst aAggregationKeys = Object.keys(obj.metadata.aggregations);\n\t\t\taAggregationKeys.forEach((aggregationKey) => {\n\t\t\t\tconst aggregationDef = obj.metadata.aggregations[aggregationKey];\n\t\t\t\tconst defaultValue = this[aggregationKey] ?? aggregationDef.defaultValue;\n\t\t\t\tObject.defineProperty(this, aggregationKey, {\n\t\t\t\t\tconfigurable: true,\n\t\t\t\t\tset: (v: unknown) => {\n\t\t\t\t\t\treturn this.setAggregation(aggregationKey, v);\n\t\t\t\t\t},\n\t\t\t\t\tget: () => {\n\t\t\t\t\t\tconst aggregationContent = this.getAggregation(aggregationKey);\n\t\t\t\t\t\tif (obj.metadata.aggregations[aggregationKey].multiple) {\n\t\t\t\t\t\t\treturn aggregationContent || [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn aggregationContent;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tif (defaultValue && (defaultValue as UI5Element)?.isA) {\n\t\t\t\t\tthis._applyingSettings = true;\n\t\t\t\t\tthis[aggregationKey] = defaultValue;\n\t\t\t\t\tthis._applyingSettings = false;\n\t\t\t\t\tdelete this._applyingSettings;\n\t\t\t\t}\n\t\t\t});\n\t\t\tconst aAssociationKeys = Object.keys(obj.metadata.associations);\n\t\t\taAssociationKeys.forEach((associationKey) => {\n\t\t\t\tObject.defineProperty(this, associationKey, {\n\t\t\t\t\tconfigurable: true,\n\t\t\t\t\tset: (v: unknown) => {\n\t\t\t\t\t\treturn this.setAssociation(associationKey, v);\n\t\t\t\t\t},\n\t\t\t\t\tget: () => {\n\t\t\t\t\t\tconst aggregationContent = this.getAssociation(associationKey);\n\t\t\t\t\t\tif (obj.metadata.associations[associationKey].multiple) {\n\t\t\t\t\t\t\treturn aggregationContent || [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn aggregationContent;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t\tif (obj.metadata.references) {\n\t\t\tconst referenceProperties = Object.keys(obj.metadata.references);\n\t\t\treferenceProperties.forEach((propertyKey) => {\n\t\t\t\tObject.defineProperty(this, propertyKey, {\n\t\t\t\t\tconfigurable: true,\n\t\t\t\t\tvalue: createReference()\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t\tif (obj.metadata.methods) {\n\t\t\tfor (const methodName in obj.metadata.methods) {\n\t\t\t\tconst methodDefinition = obj.metadata.methods[methodName];\n\t\t\t\tif (methodDefinition.overrideExecution === \"AfterAsync\" || methodDefinition.overrideExecution === \"BeforeAsync\") {\n\t\t\t\t\tif (!this.methodHolder) {\n\t\t\t\t\t\tthis.methodHolder = [];\n\t\t\t\t\t}\n\t\t\t\t\tthis.methodHolder[methodName] = [this[methodName]];\n\t\t\t\t\tObject.defineProperty(this, methodName, {\n\t\t\t\t\t\tconfigurable: true,\n\t\t\t\t\t\tset: (v: Function) => {\n\t\t\t\t\t\t\treturn this.methodHolder[methodName].push(v);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tget: () => {\n\t\t\t\t\t\t\treturn async (...methodArgs: unknown[]) => {\n\t\t\t\t\t\t\t\tconst methodArrays = this.methodHolder[methodName];\n\t\t\t\t\t\t\t\tif (methodDefinition.overrideExecution === \"BeforeAsync\") {\n\t\t\t\t\t\t\t\t\tmethodArrays.reverse();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tlet result;\n\t\t\t\t\t\t\t\tfor (const arg of methodArrays) {\n\t\t\t\t\t\t\t\t\tresult = await arg.apply(this, methodArgs);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn result;\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t_createStateProperty(obj, this);\n\t\tif (fnAfterInit) {\n\t\t\tfnAfterInit.apply(this, args);\n\t\t}\n\t};\n\n\tclazz.override = function (oExtension: unknown): Function {\n\t\tconst pol = {};\n\t\t(pol as Function).constructor = function (...args: unknown[]): Function {\n\t\t\treturn clazz.apply(this, args);\n\t\t};\n\t\tconst oClass = (Metadata as unknown as { createClass: Function }).createClass(\n\t\t\tclazz,\n\t\t\t`anonymousExtension~${uid()}`,\n\t\t\tpol,\n\t\t\tControllerMetadata\n\t\t);\n\t\toClass.getMetadata()._staticOverride = oExtension;\n\t\toClass.getMetadata()._override = (clazz.getMetadata() as { _override?: unknown })._override;\n\t\treturn oClass;\n\t};\n\n\tObjectPath.set(name, output);\n\n\treturn output;\n}\n"],"mappings":";;;;0VAgJA,MAAMA,EAAiB,SAAUC,GAChCA,EAAOC,SAAWC,EACjB,CACCC,qBAAsB,CAAC,EACvBC,WAAY,CAAC,EACbC,aAAc,CAAC,EACfC,WAAY,CAAC,EACbC,aAAc,CAAC,EACfC,QAAS,CAAC,EACVC,OAAQ,CAAC,EACTC,WAAY,IAEbV,EAAOC,UAAY,CAAC,GAErB,OAAOD,EAAOC,QACf,EAOA,SAASU,EAAsBX,GAC9B,OAAO,SAENY,GAEgB,IADhBC,EAAcC,UAAAC,OAAA,GAAAD,UAAA,KAAAE,UAAAF,UAAA,GAAGd,EAAOiB,cAAcC,UAEtC,IAAIC,EAAUP,EAAOQ,YACrB,GAAIpB,EAAOqB,iBAAkB,CAC5BF,EAAUnB,EAAOqB,iBAAiBF,IAAYA,CAC/C,CACA,MAAOA,IAAYA,EAAQG,IAAOT,IAAWM,EAAQI,UAAW,CAC/D,GAAIC,KAAKC,iBAAkB,CAC1B,MAAMC,EAAeP,EAAoBQ,gBACzC,MAAMC,EAAsBF,EAAYG,KAAMC,GAA2BA,EAAWR,IAAIT,IACxF,GAAIe,EAAqB,CACxBT,EAAUS,CACX,KAAO,CACNT,EAAUA,EAAQI,WACnB,CACD,KAAO,CACNJ,EAAUA,EAAQI,WACnB,CACD,CAEA,IAAKJ,IAAYA,EAAQG,IAAOT,GAAS,CACxC,MAAMkB,EAAaP,KAAKQ,YAAYC,IAAIT,MACxCL,EAAUY,IAAaA,EAAWhB,OAAS,EAC5C,CACA,IAAImB,EACJ,GAAIf,GAAWA,EAAQG,IAAOT,GAAS,CACtCqB,EAAgBf,CACjB,CACA,OAAOe,CACR,CACD,CAMA,MAAMC,EAAe,SAAUnC,GAC9B,IAAKA,EAAOoC,gBAAiB,CAC5BpC,EAAOoC,gBAAkB,KACzBpC,EAAOgC,YAAc,IAAIK,QACzBrC,EAAOsC,iBAAmB,SAAUC,GACnC,IAAKf,KAAKQ,YAAYC,IAAIM,EAAUC,aAAc,CACjDhB,KAAKQ,YAAYS,IAAIF,EAAUC,YAAa,GAC7C,CACChB,KAAKQ,YAAYC,IAAIM,EAAUC,aAA0BE,KAAKH,EAChE,EACAvC,EAAO2C,OAAShC,EAAsBX,EACvC,CACD,EAsBO,SAAS4C,IACf,OAAO,SAAU5C,EAA8B6C,EAAqBC,GACnE,MAAM7C,EAAWF,EAAeC,GAChC,GAAIC,EAAS8C,gBAAkB/B,UAAW,CACzC,MAAM,IAAIgC,MAAM,iDACjB,CACA/C,EAAS8C,cAAgBF,SAClBC,EAAmBG,SAC1BhD,EAASiD,4BAA+BJ,EAAkDK,uBAClFL,EAAkDK,YAE1D,OAAOL,CACR,CACD,CAIAM,EAAAR,cAKO,SAASS,EAAeC,GAC9B,OAAO,SAAUtD,EAAiC6C,GACjD,IAAK7C,EAAOuD,SAAU,CACrBvD,EAAOuD,SAAW,CAAC,CACpB,CACA,IAAKvD,EAAOwD,UAAW,CACtBxD,EAAOwD,UAAY,CAAC,CACrB,CACA,IAAIC,EAAgBzD,EAAOwD,UAC3B,GAAIF,EAAe,CAClB,IAAKG,EAAcC,UAAW,CAC7BD,EAAcC,UAAY,CAAC,CAC5B,CACA,IAAKD,EAAcC,UAAUJ,GAAgB,CAC5CG,EAAcC,UAAUJ,GAAiB,CAAC,CAC3C,CACAG,EAAgBA,EAAcC,UAAUJ,EACzC,CACAG,EAAcZ,EAAYc,YAAe3D,EAAoC6C,EAAYc,WAC1F,CACD,CAEAP,EAAAC,iBAKO,SAASO,EAAWC,GAC1B,OAAO,SAAU7D,EAAiC6C,EAAaiB,GAC9D,MAAM7D,EAAWF,EAAeC,GAChC,IAAKC,EAASO,QAAQqC,EAAYc,YAAa,CAC9C1D,EAASO,QAAQqC,EAAYc,YAAc,CAAC,CAC7C,CACA1D,EAASO,QAAQqC,EAAYc,YAAYE,kBAAoBA,EAG7D,GAAIA,IAAsB,UAAW,CACpCE,EAASF,EAATE,CAA4B/D,EAAQ6C,EAAaiB,EAClD,CACD,CACD,CAEAV,EAAAQ,aAIO,SAASI,IACf,OAAO,SAAUhE,EAAiC6C,EAAaiB,GAC9D,MAAM7D,EAAWF,EAAeC,GAChC8D,EAAWG,WAAa,KACxB,IAAKhE,EAASO,QAAQqC,EAAYc,YAAa,CAC9C1D,EAASO,QAAQqC,EAAYc,YAAc,CAAC,CAC7C,CACA1D,EAASO,QAAQqC,EAAYc,YAAYO,OAAS,IACnD,CACD,CACAd,EAAAY,kBAIO,SAASG,IACf,OAAO,SAAUnE,EAAiC6C,EAAaiB,GAC9D,MAAM7D,EAAWF,EAAeC,GAChC8D,EAAWG,WAAa,KACxB,IAAKhE,EAASO,QAAQqC,EAAYc,YAAa,CAC9C1D,EAASO,QAAQqC,EAAYc,YAAc,CAAC,CAC7C,CACA1D,EAASO,QAAQqC,EAAYc,YAAYO,OAAS,KACnD,CACD,CACAd,EAAAe,mBAIO,SAASC,IACf,OAAO,SAAUpE,EAAiC6C,EAAaiB,GAC9D,MAAM7D,EAAWF,EAAeC,GAChC8D,EAAWG,WAAa,KACxB,IAAKhE,EAASO,QAAQqC,EAAYc,YAAa,CAC9C1D,EAASO,QAAQqC,EAAYc,YAAc,CAAC,CAC7C,CACA1D,EAASO,QAAQqC,EAAYc,YAAYU,MAAQ,IAClD,CACD,CAEAjB,EAAAgB,iBAKO,SAASE,EAAeC,GAC9B,OAAO,SAAUvE,EAAiC6C,EAAqBC,GACtE,MAAM7C,EAAWF,EAAeC,UACxB8C,EAAiDK,YACzDlD,EAASE,qBAAqB0C,EAAYc,YAAcY,EACxD,OAAOzB,CACR,CACD,CAKAM,EAAAkB,iBAIO,SAASE,IACf,OAAO,SAAUxE,EAA8ByE,GAC9C,MAAMxE,EAAWF,EAAeC,GAChC,IAAKC,EAASQ,OAAOgE,EAASd,YAAa,CAC1C1D,EAASQ,OAAOgE,EAASd,YAAc,CAAC,CACzC,CACD,CACD,CAEAP,EAAAoB,QAKO,SAASE,EAASC,GACxB,OAAO,SAAU3E,EAA8B6C,EAAqBC,GACnE,MAAM7C,EAAWF,EAAeC,GAChC,GAAI2E,EAAoBC,WAAa5D,UAAW,CAC/C2D,EAAoBC,SAAW,IAChC,CACA,GAAID,EAAoBE,gBAAkB,KAAM,CAC/CF,EAAoBC,SAAW,MAC/BD,EAAoBG,MAAQ,MAC7B,CACA,IAAK7E,EAASG,WAAWyC,GAAc,CACtC5C,EAASG,WAAWyC,GAAe8B,CACpC,QACO7B,EAAmBG,SAC1B,IAAK0B,EAAoBI,eAAe,gBAAiB,CAExDJ,EAAoBK,eAAkBlC,EAAkDK,eACzF,QAEQL,EAAiDK,YAEzD,OAAOL,CACR,CACD,CAEAM,EAAAsB,WAKO,SAASO,EAAYC,GAC3B,OAAO,SAAUlF,EAA8B6C,EAAqBC,GACnE,MAAM7C,EAAWF,EAAeC,GAChC,GAAIkF,EAAsBC,WAAanE,UAAW,CAEjDkE,EAAsBC,SAAW,KAClC,CACA,IAAKlF,EAASI,aAAawC,GAAc,CACxC5C,EAASI,aAAawC,GAAeqC,CACtC,CACA,GAAIA,EAAsBE,UAAW,CACpCnF,EAASoF,mBAAqBxC,CAC/B,QACOC,EAAmBG,SAC1BiC,EAAsBF,eAAkBlC,EAAkDK,uBAClFL,EAAiDK,YAEzD,OAAOL,CACR,CACD,CAEAM,EAAA6B,cAKO,SAASK,EAAYC,GAC3B,OAAO,SAAUvF,EAA8B6C,EAAqBC,GACnE,MAAM7C,EAAWF,EAAeC,GAChC,IAAKC,EAASM,aAAasC,GAAc,CACxC5C,EAASM,aAAasC,GAAe0C,CACtC,QACOzC,EAAmBG,gBAClBH,EAAiDK,YAEzD,OAAOL,CACR,CACD,CAEAM,EAAAkC,cAKO,SAASE,EAAmBC,GAClC,OAAO,SAAUzF,GAChB,MAAMC,EAAWF,EAAeC,GAEhCC,EAASS,WAAWgC,KAAK+C,EAC1B,CACD,CAEArC,EAAAoC,qBAIO,SAASE,IACf,OAAO,SAAU1F,EAA8B2F,GAC9C,MAAMC,EAAoC5F,EAAOwC,YACjDL,EAAayD,GACbA,EAAmBD,EAAYhC,YAAc,WAAoC,QAAAkC,EAAA/E,UAAAC,OAAvB+E,EAAI,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAA,CAAJF,EAAIE,GAAAlF,UAAAkF,EAAA,CAC7D,GAAIF,GAAM/E,OAAQ,CACjB,MAAM0C,EAAgBmC,EAAmBjD,OAAOmD,EAAK,IACrDrC,IAAgBkC,EAAYhC,eAAemC,EAC5C,CACD,CACD,CACD,CAAC1C,EAAAsC,kBAiBM,SAASO,EAAeC,EAAiBC,GAC/C,OAAO,SAAU3D,GAChB,IAAKA,EAAY4D,UAAUnG,SAAU,CACpCuC,EAAY4D,UAAUnG,SAAW,CAAC,CACnC,CACA,GAAIkG,EAAoB,CACvB,IAAK,MAAME,KAAOF,EAAoB,CACrC,GAAI3D,EAAY4D,UAAUnG,SAASoG,KAASrF,UAAW,CACtD,GAAI+E,MAAMO,QAAQ9D,EAAY4D,UAAUnG,SAASoG,IAAO,CACvD7D,EAAY4D,UAAUnG,SAASoG,GAAO7D,EAAY4D,UAAUnG,SAASoG,GAAKE,OACzEJ,EAAmBE,GAErB,KAAO,CACN7D,EAAY4D,UAAUnG,SAASoG,GAAO,IAClC7D,EAAY4D,UAAUnG,SAASoG,MAC9BF,EAAmBE,GAEzB,CACD,KAAO,CACN7D,EAAY4D,UAAUnG,SAASoG,GAAOF,EAAmBE,EAC1D,CACD,CACD,CACA,OAAOG,EAAoBhE,EAAa0D,EAAS1D,EAAY4D,UAC9D,CACD,CAAChD,EAAA6C,iBAOM,SAASQ,EAAqCC,GACpD,OAAO,SAAUC,GAChB,GAAIA,EAASP,UAAUQ,OAAQ,CAC9B,MAAM,IAAI5D,MAAM,qEACjB,CACA,MAAM/C,EAAWF,EAAe4G,EAASP,WAEzC,IAAIS,EAA0BH,EAAeN,UAC7C,MAAOS,EAAyB,CAC/BF,EAAWG,EAAmCH,EAAU1G,EAAU4G,GAClEA,EAA0BE,OAAOC,eAAeH,EACjD,CACAI,EAAuBN,EAAUD,GAGjCA,EAAeN,UAAUc,aAAaP,GACtC,OAAOA,CACR,CACD,CAACvD,EAAAqD,QAkBM,SAASU,IACf,MAAO,CACNC,QAASpG,UACTqG,WAAY,SAAUC,GACrB9F,KAAK4F,QAAUE,CAChB,EAEF,CACAlE,EAAA+D,kBAIO,SAASI,IACf,OAAO,SAAUvH,EAA8B6C,EAAqBC,GACnE,MAAM7C,EAAWF,EAAeC,UACzB8C,EAAmBG,gBAClBH,EAAiDK,YACzD,GAAIqE,EAAWC,UAAUzH,EAAQ,uBAAwB,CACxD,IAAKC,EAASK,WAAWuC,GAAc,CACtC5C,EAASK,WAAWuC,GAAe,IACpC,CACD,KAAO,CACLC,EAAiDK,YAAcgE,CACjE,CAEA,OAAOrE,CACR,CACD,CAACM,EAAAmE,kBAED,SAAST,EACRH,EACAe,EACAC,GAEA,MAAMlC,EAAgBkC,GAAyBC,qBAC/C,GAAInC,EAAe,CAClBiC,EAAkBhH,WAAWgC,KAAK+C,EACnC,CAEAsB,OAAOc,oBAAoBF,GAAyBG,QAASC,IAC5D,GAAIA,IAAS,eAAiBA,IAAS,cAAgBA,IAAS,WAAY,CAC3E,IAAKpB,EAASP,UAAU2B,GAAO,CAE9BhB,OAAOiB,eACNrB,EAASP,UACT2B,EACAhB,OAAOkB,yBAAyBN,EAAyBI,IAAShB,OAAOmB,OAAO,MAElF,CACD,CACA,GAAIH,IAAS,WAAY,CACxBpB,EAASP,UAAUnG,SAAWC,EAAMyG,EAASP,UAAUnG,SAAU0H,EAAwB1H,SAC1F,IAED,OAAO0G,CACR,CAEA,SAASwB,EAA4BC,EAAsBC,GAC1D,MAAMC,EAAc,IAAID,EAAK1E,aAC7B,MAAM4E,EAAOC,EAAUJ,EAAUK,UAAUH,IAC3C,IAAII,EACJ,GAAIL,IAAS,gBAAiB,CAC7B,MAAO,CAAEM,MAAO,kBACjB,CACA,UAAWJ,IAAS,SAAU,CAC7BG,EAAUH,CACX,MAAO,UAAWA,IAAS,SAAU,CACpCG,EAAUH,CACX,MAAO,UAAWA,IAAS,UAAW,CACrCG,EAAUH,CACX,MAAO,GAAIxC,MAAMO,QAAQiC,GAAO,CAC/BG,EAAU,IAAIE,MAAML,EAAM,CACzBtG,IAAIjC,EAAmB6I,EAAoBC,GAC1C,MAAMC,EAAMC,QAAQ/G,IAAIjC,EAAQ6I,EAAGC,GACnC,UAAWC,IAAQ,WAAY,CAC9B,OAAOA,EAAIE,KAAKjJ,EACjB,MAAO,GAAI+I,IAAQ/H,WAAakI,MAAMC,OAAON,EAAElF,aAAc,CAC5D,MAAO,CACNyF,cAAe,CACdT,MAAO,kBACPU,KAAMR,GAGT,CACA,OAAOE,CACR,GAEF,KAAO,CACNL,EAAU,IAAKH,EAChB,CACA,UAAWG,IAAY,SAAU,CAChCA,EAAQU,cAAgB,CACvBT,MAAO,kBACPU,KAAMf,EAER,CACA,OAAOI,CACR,CACA,MAAMY,EAAkBC,OAAO,mBAE/B,SAASC,EACRtH,EASAuH,EACAC,EACAC,GAGAzH,EAAc0H,SAAS,IAAIC,EAAUF,GAAc,mBACnD,MAAMG,EAAa5H,EAAc6H,SAAS,mBAC1CD,EAAWE,qBAAsBC,IAChC,MAAMZ,EAAOY,EAAIC,aAAa,SAASC,UAAU,GACjD,GAAId,GAAQK,EAAkBU,SAASf,GAAO,CAC7CnH,EAAcmI,YAAYhB,EAAMY,EAAIC,aAAa,SAClD,IAEDhI,EAAcoI,eAAiB,KAC/B,MAAMC,EAAQ,IAAI3B,MAAMkB,EAAY,CACnC7H,IAAKA,CAACjC,EAAmBqI,IACjBF,EAA4BnI,EAAQqI,GAE5C5F,IAAKA,CAAC+H,EAA0BnC,EAAMoC,KAErC,MAAMC,EAAuBxI,EAAcoH,GAC3C,GAAIoB,EAAqBN,SAAS/B,EAAK1E,YAAa,CACnDzB,EAAcyI,2BAA6B,KAC3CzI,EAAcmI,YAAYhC,EAAK1E,WAAY8G,GAC3CvI,EAAcyI,2BAA6B,KAC5C,CACA,MAAMC,EAAYJ,EAAcH,YAAY,IAAIhC,EAAK1E,aAAc8G,GACnEvI,EAAc2I,sBAAsBxC,EAAK1E,YACzC,OAAOiH,KAGT7D,OAAOiB,eAAe9F,EAAeuH,EAAmB,CACvDqB,aAAc,KACd7I,IAAKA,IACGsI,EAER9H,IAAIgI,GAEHX,EAAWO,YAAY,IAAKI,EAC7B,IAED,OAAOF,CACR,CAEA,SAASQ,EACRC,EACA9I,GAWA,GAAI8I,EAAI/K,UAAU8C,eAAiBb,EAAcoH,GAAkB,CAClE,IAAI2B,EAAgB,MACpB,MAAMvB,EAA8B,GACpC,IAAK,MAAMwB,KAAgBF,EAAI/K,UAAUG,WAAY,CACpD,MAAM+K,EAAcH,EAAI/K,SAASG,WAAW8K,GAC5C,GAAIC,EAAYC,YAAa,CAC5B1B,EAAkBhH,KAAKwI,EACxB,CACD,CAEAhJ,EAAcoH,KAAqB,GACnCpH,EAAcoH,GAAmB,IAAIpH,EAAcoH,MAAqBI,GAExE,GAAIsB,EAAI/K,UAAU8C,cAAe,CAEhCb,EAAcmJ,aAAeC,wBACrB9J,KAAK+J,kBACZ,IAAKN,EAAe,CACnBA,EAAgB,WACTzJ,KAAsCgK,gBAAgBhK,KAAKiK,gBAClEjK,KAAKiK,cAAgB,GACrBR,EAAgB,KACjB,CACD,EACA/I,EAAc2I,sBAAwB,SAAUa,GAC/ClK,KAAKiK,gBAAkB,GACvB,IAAKjK,KAAKiK,cAAcrB,SAASsB,GAAc,CAC9ClK,KAAKiK,cAAc/I,KAAKgJ,EACzB,CACA,IAAKlK,KAAK+J,oBAAsBN,EAAe,CAC9CzJ,KAAK+J,kBAAoBI,WAAW,KACnCnK,KAAK6J,gBACH,IACJ,CACD,EACA,MAAM5B,EAAoBuB,EAAI/K,SAAS8C,cACvCb,EAAcoI,eAAiB,MAC/BpI,EAAc0J,YAAcnC,EAC5B1C,OAAOiB,eAAe9F,EAAeuH,EAAmB,CACvDqB,aAAc,KACd7I,IAAKA,IACGuH,EAAiBtH,EAAeuH,EAAmBvH,EAAcoH,IAEzE7G,IAAMgI,IACLjB,EAAiBtH,EAAeuH,EAAmBvH,EAAcoH,GAAkBmB,MAGrF,GAAIO,EAAI/K,SAASiD,0BAA2B,CAC3ChB,EAAc8I,EAAI/K,SAAS8C,eAAkC,IAAKiI,EAAI/K,SAASiD,0BAChF,CACA,MAAM2I,EAAkB3J,EAAc4J,cACtC5J,EAAc4J,cAAgB,SAC7BC,EACAC,UAEOD,GAAWE,QAAQC,gBAC1B,OAAOL,EAAgBM,KAAK3K,KAAMuK,EAAWC,EAC9C,CACD,CACA,MAAMI,EAAgBlK,EAAcmI,YACpC,GAAInI,EAAcoH,GAAiBvI,OAAS,EAAG,CAC9CmB,EAAcmI,YAAc,SAAUgC,EAAuBC,EAAiBC,GAC7E,GAAIrK,EAAcoH,GAAiBc,SAASiC,KAAmB7K,KAAKmJ,2BAA4B,CAC/F,IAAKnJ,KAAK8I,eAAgB,CACzBd,EAAiBtH,EAAeA,EAAc0J,YAAa1J,EAAcoH,GAC1E,CACC9H,KAAKuI,SAAS,mBAAiCM,YAAY,IAAIgC,IAAiBC,GACjFpK,EAAc2I,sBAAsBwB,EACrC,CACA,OAAOD,EAAcD,KAAK3K,KAAM6K,EAAeC,EAAQC,EACxD,CACD,CACD,CACD,CASA,SAAS/F,EAAoBgG,EAA0BzE,EAAc0E,GACpE,GAAID,EAAMvL,gBAAgBK,IAAI,uCAAwC,CACrEyF,OAAOc,oBAAoB4E,GAAO3E,QAAS4E,IAC1C,MAAM5I,EAAaiD,OAAOkB,yBAAyBwE,EAAOC,GAC1D,GAAI5I,IAAeA,EAAWG,WAAY,CACzCH,EAAWG,WAAa,IACzB,GAEF,CAEA,MAAM+G,EAAW,CAAC,EAClBA,EAAI/K,SAAWwM,EAAMxM,UAAY,CAAC,EAClC+K,EAAIzH,SAAWkJ,EAAMlJ,SACrByH,EAAIxI,YAAcgK,EAClBxB,EAAI/K,SAAS0M,SAAW5F,OAAOC,eAAewF,EAAMpG,WAAWnF,cAAcC,UAE7E,GAAKsL,GAAOvL,eAA0D2L,kBAAoB,UAAW,CACpG,MAAMC,EAAqBJ,EAAMK,UAAYN,EAAMM,UAAYN,EAAMO,OACrE/B,EAAI8B,SAAW,CAAEE,WAAY,GAC7B,UAAWH,IAAuB,WAAY,CAC7C7B,EAAI8B,SAASC,OAASF,CACvB,MAAO,GAAIA,GAAsB7L,UAAW,CAC3CgK,EAAI8B,SAAWD,CAChB,CACD,CACA7B,EAAI/K,SAASS,WAAa+L,EAAMxM,UAAUS,YAAc8L,EAAMvM,UAAUS,WACxEqG,OAAOkG,KAAKT,EAAMpG,WAAW0B,QAASzB,IACrC,GAAIA,IAAQ,WAAY,CACvB,IACC2E,EAAI3E,GAAOmG,EAAMpG,UAAUC,EAC5B,CAAE,MAAO6G,GACR,CAEF,IAGD,GAAIlC,EAAI/K,UAAUE,sBAAwB4G,OAAOkG,KAAKjC,EAAI/K,SAASE,sBAAsBY,OAAS,EAAG,CACpG,IAAK,MAAMoM,KAAYnC,EAAI/K,SAASE,qBAAsB,CACzD6K,EAAImC,GAAYnC,EAAI/K,SAASE,qBAAqBgN,EACnD,CACD,CACA,MAAMC,EAASZ,EAAM5F,OAAOmB,EAAMiD,GAClC,MAAMqC,EAASD,EAAOhH,UAAUkH,KAChC,MAAMC,EAAcH,EAAOhH,UAAUoH,UACrCJ,EAAOhH,UAAUkH,KAAO,WAAoC,IAAAG,EAAAjM,KAAA,QAAAkM,EAAA5M,UAAAC,OAAvB+E,EAAI,IAAAC,MAAA2H,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAA,CAAJ7H,EAAI6H,GAAA7M,UAAA6M,EAAA,CACxC,GAAIN,EAAQ,CACXA,EAAOO,MAAMpM,KAAMsE,EACpB,CACA,GAAI0G,EAAMlK,iBAAkB,CAC3BkK,EAAMlK,iBAAiBd,KACxB,CACAA,KAAKvB,SAAW+K,EAAI/K,SAEpB,GAAI+K,EAAI/K,SAASG,WAAY,CAC5B,MAAMyN,EAAgB9G,OAAOkG,KAAKjC,EAAI/K,SAASG,YAC/CyN,EAAc/F,QAASjF,IACtB,MAAMsI,EAAcH,EAAI/K,SAASG,WAAWyC,GAE5C,MAAMiL,EAAkBtM,KAAKqB,IAAgBsI,EAAYnG,aACzD,GAAImG,EAAYtG,gBAAkB,KAAM,CACvCrD,KAAKuM,qBAAuB,CAAC,EAE7BhH,OAAOiB,eAAexG,KAAMqB,EAAa,CACxCiI,aAAc,KACdrI,IAAMuL,IACLxM,KAAKuM,mBAAmBlL,GAAemL,EACvCxM,KAAKyM,YAAYpL,GAAemL,EAChC,OAAOxM,MAERS,MAGC,MAAMiM,EAAgB1M,KAAK2M,YAAYtL,GACvC,MAAMuL,EAAuB5M,KAAKuM,mBAAmBlL,GAErD,GAAIqL,IAAkBlN,WAAakN,IAAkBE,EAAsB,CAC1E5M,KAAKuM,mBAAmBlL,GAAeqL,CACxC,CACA,MAAMG,EAAY7M,KAAKuM,mBAAmBlL,GAC1C,UAAWwL,IAAc,SAAU,CAClC,MAAO,IAAKA,EACb,KAAO,CACN,OAAOA,CACR,CACD,GAEF,KAAO,CACNtH,OAAOiB,eAAexG,KAAMqB,EAAa,CACxCiI,aAAc,KACdrI,IAAMuL,GACExM,KAAK6I,YAAYxH,EAAamL,GAEtC/L,IAAKA,IACGT,KAAK2M,YAAYtL,IAG3B,CACA,GAAIiL,IAAoB9M,WAAaQ,KAAKqB,KAAiBiL,EAAiB,CAE3EtM,KAAK8M,kBAAoB,KACzB9M,KAAKqB,GAAeiL,EACpBtM,KAAK8M,kBAAoB,aAClB9M,KAAK8M,iBACb,IAED,MAAMC,EAAmBxH,OAAOkG,KAAKjC,EAAI/K,SAASI,cAClDkO,EAAiBzG,QAAS0G,IACzB,MAAMC,EAAiBzD,EAAI/K,SAASI,aAAamO,GACjD,MAAMxJ,EAAexD,KAAKgN,IAAmBC,EAAezJ,aAC5D+B,OAAOiB,eAAexG,KAAMgN,EAAgB,CAC3C1D,aAAc,KACdrI,IAAMuL,GACExM,KAAKkN,eAAeF,EAAgBR,GAE5C/L,IAAKA,KACJ,MAAM0M,EAAqBnN,KAAKoN,eAAeJ,GAC/C,GAAIxD,EAAI/K,SAASI,aAAamO,GAAgBrJ,SAAU,CACvD,OAAOwJ,GAAsB,EAC9B,KAAO,CACN,OAAOA,CACR,KAGF,GAAI3J,GAAiBA,GAA6B1D,IAAK,CACtDE,KAAK8M,kBAAoB,KACzB9M,KAAKgN,GAAkBxJ,EACvBxD,KAAK8M,kBAAoB,aAClB9M,KAAK8M,iBACb,IAED,MAAMO,EAAmB9H,OAAOkG,KAAKjC,EAAI/K,SAASM,cAClDsO,EAAiB/G,QAASgH,IACzB/H,OAAOiB,eAAexG,KAAMsN,EAAgB,CAC3ChE,aAAc,KACdrI,IAAMuL,GACExM,KAAKuN,eAAeD,EAAgBd,GAE5C/L,IAAKA,KACJ,MAAM0M,EAAqBnN,KAAKwN,eAAeF,GAC/C,GAAI9D,EAAI/K,SAASM,aAAauO,GAAgB3J,SAAU,CACvD,OAAOwJ,GAAsB,EAC9B,KAAO,CACN,OAAOA,CACR,MAIJ,CACA,GAAI3D,EAAI/K,SAASK,WAAY,CAC5B,MAAM2O,EAAsBlI,OAAOkG,KAAKjC,EAAI/K,SAASK,YACrD2O,EAAoBnH,QAASjF,IAC5BkE,OAAOiB,eAAexG,KAAMqB,EAAa,CACxCiI,aAAc,KACdL,MAAOtD,OAGV,CACA,GAAI6D,EAAI/K,SAASO,QAAS,CACzB,IAAK,MAAM0O,KAAclE,EAAI/K,SAASO,QAAS,CAC9C,MAAM2O,EAAmBnE,EAAI/K,SAASO,QAAQ0O,GAC9C,GAAIC,EAAiBtL,oBAAsB,cAAgBsL,EAAiBtL,oBAAsB,cAAe,CAChH,IAAKrC,KAAK4N,aAAc,CACvB5N,KAAK4N,aAAe,EACrB,CACA5N,KAAK4N,aAAaF,GAAc,CAAC1N,KAAK0N,IACtCnI,OAAOiB,eAAexG,KAAM0N,EAAY,CACvCpE,aAAc,KACdrI,IAAMuL,GACExM,KAAK4N,aAAaF,GAAYxM,KAAKsL,GAE3C/L,IAAKA,IACGqJ,iBACN,MAAM+D,EAAe5B,EAAK2B,aAAaF,GACvC,GAAIC,EAAiBtL,oBAAsB,cAAe,CACzDwL,EAAaC,SACd,CACA,IAAIC,EAAO,QAAAC,EAAA1O,UAAAC,OALK0O,EAAU,IAAA1J,MAAAyJ,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAA,CAAVD,EAAUC,GAAA5O,UAAA4O,EAAA,CAM1B,IAAK,MAAMC,KAAON,EAAc,CAC/BE,QAAeI,EAAI/B,MAAMH,EAAMgC,EAChC,CACA,OAAOF,CACR,GAGH,CACD,CACD,CACAxE,EAAqBC,EAAKxJ,MAC1B,GAAI+L,EAAa,CAChBA,EAAYK,MAAMpM,KAAMsE,EACzB,CACD,EAEA0G,EAAMjJ,SAAW,SAAUqM,GAC1B,MAAMC,EAAM,CAAC,EACZA,EAAiBrN,YAAc,WAAwC,QAAAsN,EAAAhP,UAAAC,OAA3B+E,EAAI,IAAAC,MAAA+J,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAA,CAAJjK,EAAIiK,GAAAjP,UAAAiP,EAAA,CAChD,OAAOvD,EAAMoB,MAAMpM,KAAMsE,EAC1B,EACA,MAAMkK,EAAUC,EAAkDC,YACjE1D,EACA,sBAAsB2D,MACtBN,EACAO,GAEDJ,EAAO/O,cAAcoP,gBAAkBT,EACvCI,EAAO/O,cAAcqP,UAAa9D,EAAMvL,cAA0CqP,UAClF,OAAON,CACR,EAEAO,EAAW9N,IAAIsF,EAAMqF,GAErB,OAAOA,CACR,CAAC,OAAAhK,CAAA","ignoreList":[]}