{"version":3,"names":["FL_DELEGATE","CORE_REQUIRE","DT_DESIGNTIME","addChildAggregation","aggregationChildren","aggregationName","child","undefined","isChildAnElement","push","Array","isArray","forEach","subChild","Object","keys","childKey","children","isA","isAControl","getMetadata","processAggregations","metadata","mSettings","metadataAggregations","getAllAggregations","defaultAggregationName","getDefaultAggregationName","hasOwnProperty","resultingParse","BindingInfo","parse","path","model","factory","template","processBindingToolkitExpression","settings","settingsKey","bindingToolkitExpression","allProperties","isConstant","compileConstant","call","isPathInModelExpression","modelName","compileExpression","processStringProperty","value","allEvents","startsWith","Log","error","getName","propertyType","getType","DataType","includes","parseValue","processObjectProperty","lateProperties","then","__bindingInfo","processProperties","getAllEvents","getAllProperties","isBindingToolkitExpression","processCommand","commandProperty","command","eventName","split","event","name","EventHandlerResolver","resolveEventHandler","jsxControl","ControlType","key","_jsxContext","_jsxFormatterContext","targetControl","isFragment","classDef","class","refDef","ref","bindingDef","binding","flDelegate","dtDesigntime","targetControlInstance","addStyleClass","setCurrent","customSettings","data","delegate","designtime","length","bindingInfo","bindElement","parameters","bindingDefKey","latePropertiesKey","setProperty","catch","controlTypeFn","Text","text"],"sourceRoot":".","sources":["jsx-control.ts"],"sourcesContent":["import Log from \"sap/base/Log\";\nimport type { BindingToolkitExpression } from \"sap/fe/base/BindingToolkit\";\nimport {\n\tcompileConstant,\n\tcompileExpression,\n\tisBindingToolkitExpression,\n\tisConstant,\n\tisPathInModelExpression\n} from \"sap/fe/base/BindingToolkit\";\nimport type { BindingInfoHolder, NonAbstractClass } from \"sap/fe/base/ClassSupport\";\nimport type { ControlProperties, JSXContext, NonControlProperties, Ref } from \"sap/fe/base/jsx-runtime/jsx\";\nimport Text from \"sap/m/Text\";\nimport BindingInfo from \"sap/ui/base/BindingInfo\";\nimport DataType from \"sap/ui/base/DataType\";\nimport type ManagedObjectMetadata from \"sap/ui/base/ManagedObjectMetadata\";\nimport type Control from \"sap/ui/core/Control\";\nimport type { $ControlSettings } from \"sap/ui/core/Control\";\nimport type { default as Element, default as UI5Element } from \"sap/ui/core/Element\";\nimport EventHandlerResolver from \"sap/ui/core/mvc/EventHandlerResolver\";\n\nconst FL_DELEGATE = \"fl:delegate\";\nconst CORE_REQUIRE = \"core:require\";\nconst DT_DESIGNTIME = \"dt:designtime\";\nconst addChildAggregation = function (\n\taggregationChildren: Record<string, (string | UI5Element)[]>,\n\taggregationName: string,\n\tchild?: string | UI5Element | UI5Element[]\n): void {\n\tif (child === null || child === undefined || typeof child === \"string\") {\n\t\treturn;\n\t}\n\tif (!aggregationChildren[aggregationName]) {\n\t\taggregationChildren[aggregationName] = [];\n\t}\n\tif (isChildAnElement(child)) {\n\t\taggregationChildren[aggregationName].push(child);\n\t} else if (Array.isArray(child)) {\n\t\tchild.forEach((subChild) => {\n\t\t\taddChildAggregation(aggregationChildren, aggregationName, subChild);\n\t\t});\n\t} else if (typeof child === \"function\") {\n\t\taggregationChildren[aggregationName] = child;\n\t} else {\n\t\tObject.keys(child).forEach((childKey) => {\n\t\t\taddChildAggregation(aggregationChildren, childKey, child[childKey]);\n\t\t});\n\t}\n};\nconst isChildAnElement = function (children?: unknown): children is Element {\n\treturn (children as Element)?.isA?.(\"sap.ui.core.Element\");\n};\nconst isAControl = function (children?: typeof Control | Function): children is NonAbstractClass<Control> {\n\treturn !!(children as typeof Control)?.getMetadata;\n};\n\nfunction processAggregations(metadata: ManagedObjectMetadata, mSettings: Record<string, unknown>): void {\n\tconst metadataAggregations = metadata.getAllAggregations();\n\tconst defaultAggregationName = metadata.getDefaultAggregationName();\n\tconst aggregationChildren: Record<string, (string | UI5Element)[]> = {};\n\taddChildAggregation(aggregationChildren, defaultAggregationName, mSettings.children as string | UI5Element | UI5Element[]);\n\tdelete mSettings.children;\n\t// find out which aggregation are bound (both in children and directly under it)\n\tObject.keys(metadataAggregations).forEach((aggregationName) => {\n\t\tif (aggregationChildren[aggregationName] !== undefined) {\n\t\t\tif (mSettings.hasOwnProperty(aggregationName)) {\n\t\t\t\tif (typeof mSettings[aggregationName] === \"string\") {\n\t\t\t\t\tconst resultingParse = BindingInfo.parse(mSettings[aggregationName]);\n\t\t\t\t\tif (resultingParse) {\n\t\t\t\t\t\tmSettings[aggregationName] = {\n\t\t\t\t\t\t\tpath: resultingParse.path,\n\t\t\t\t\t\t\tmodel: resultingParse.model\n\t\t\t\t\t\t};\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmSettings[aggregationName] = {\n\t\t\t\t\t\t\tpath: mSettings[aggregationName]\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (typeof aggregationChildren[aggregationName] === \"function\") {\n\t\t\t\t\t(mSettings[aggregationName] as { factory: Function }).factory = aggregationChildren[\n\t\t\t\t\t\taggregationName\n\t\t\t\t\t] as unknown as Function;\n\t\t\t\t} else {\n\t\t\t\t\t(mSettings[aggregationName] as { template: string | UI5Element }).template = aggregationChildren[aggregationName][0];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tmSettings[aggregationName] = aggregationChildren[aggregationName];\n\t\t\t}\n\t\t}\n\t});\n}\n\n/**\n * Processes a binding toolkit expression property for function processProperties\n *\n * If the property is a constant, it compiles it as a constant. If the property is an aggregation,\n * it compiles the expression as an object. Otherwise, it compiles the expression normally.\n * @param settings The settings of the control\n * @param settingsKey The key of the setting being processed\n * @param bindingToolkitExpression The binding toolkit expression to process\n * @param allProperties All properties of the control\n */\nfunction processBindingToolkitExpression(\n\tsettings: Record<string, unknown>,\n\tsettingsKey: keyof typeof settings,\n\tbindingToolkitExpression: BindingToolkitExpression<unknown>,\n\tallProperties: Record<string, unknown>\n): void {\n\tif (isConstant(bindingToolkitExpression)) {\n\t\tsettings[settingsKey] = compileConstant(bindingToolkitExpression, false, true, true);\n\t} else if (!Object.hasOwnProperty.call(allProperties, settingsKey)) {\n\t\t// Aggregation case - we need to compile the expression but as an object\n\t\tif (isPathInModelExpression(bindingToolkitExpression)) {\n\t\t\tsettings[settingsKey] = { path: bindingToolkitExpression.path, model: bindingToolkitExpression.modelName };\n\t\t}\n\t} else {\n\t\tsettings[settingsKey] = compileExpression(bindingToolkitExpression);\n\t}\n}\n\n/**\n * Processes a string property for function processProperties\n *\n * If the property is not a binding expression and does not match the expected format,\n * it parses the value to provide the expected format. If the property is an event handler,\n * it logs an error.\n * @param settings The settings of the control\n * @param settingsKey The key of the setting being processed\n * @param value The string value to process\n * @param allEvents All events of the control\n * @param allProperties All properties of the control\n * @param metadata Metadata of the control\n */\nfunction processStringProperty(\n\tsettings: Record<string, unknown>,\n\tsettingsKey: keyof typeof settings,\n\tvalue: string,\n\tallEvents: Record<string, unknown>,\n\tallProperties: Record<string, unknown>,\n\tmetadata: ManagedObjectMetadata\n): void {\n\tif (!value.startsWith(\"{\")) {\n\t\tif (Object.hasOwnProperty.call(allEvents, settingsKey)) {\n\t\t\tLog.error(`Event handlers cannot be set as string in JSX, ${settingsKey} in ${metadata.getName()}`);\n\t\t}\n\t\tconst propertyType = (allProperties[settingsKey] as { getType?: Function })?.getType?.();\n\t\tif (propertyType && propertyType instanceof DataType && [\"boolean\", \"int\", \"float\"].includes(propertyType.getName())) {\n\t\t\tsettings[settingsKey] = propertyType.parseValue(value);\n\t\t}\n\t} else {\n\t\tsettings[settingsKey] = value;\n\t}\n}\n\n/**\n * Processes an object property for function processProperties.\n *\n * If the property is a promise, it adds it to the late properties map. If the property is a binding info holder,\n * it sets the binding info to the settings.\n * @param settings The settings of the control\n * @param settingsKey The key of the setting being processed\n * @param value The object value to process\n * @param lateProperties A map of the control's late properties\n */\nfunction processObjectProperty(\n\tsettings: Record<string, unknown>,\n\tsettingsKey: keyof typeof settings,\n\tvalue: unknown,\n\tlateProperties: Record<string, Promise<unknown>>\n): void {\n\tif ((value as Promise<unknown>).then) {\n\t\tlateProperties[settingsKey] = value as Promise<unknown>;\n\t\tdelete settings[settingsKey];\n\t} else if ((value as BindingInfoHolder<unknown>).__bindingInfo) {\n\t\tsettings[settingsKey] = (value as BindingInfoHolder<unknown>).__bindingInfo;\n\t}\n}\n\n/**\n * Processes the properties.\n *\n * If the property is a bindingToolkit expression we need to compile it.\n * Else if the property is set as string (compiled binding expression returns string by default even if it's a boolean, int, etc.) and it doesn't match with expected\n * format the value is parsed to provide expected format.\n * @param metadata Metadata of the control\n * @param settings Settings of the control\n * @returns A map of late properties that need to be awaited after the control is created\n */\nfunction processProperties(metadata: ManagedObjectMetadata, settings: Record<string, unknown>): Record<string, Promise<unknown>> {\n\tlet settingsKey: keyof typeof settings;\n\tconst lateProperties: Record<string, Promise<unknown>> = {};\n\tconst allEvents = metadata.getAllEvents();\n\tconst allProperties = metadata.getAllProperties();\n\n\tfor (settingsKey in settings) {\n\t\tconst value = settings[settingsKey];\n\t\tif (isBindingToolkitExpression(value)) {\n\t\t\tprocessBindingToolkitExpression(settings, settingsKey, value, allProperties);\n\t\t} else if (value !== null && typeof value === \"object\") {\n\t\t\tprocessObjectProperty(settings, settingsKey, value, lateProperties);\n\t\t} else if (typeof value === \"string\") {\n\t\t\tprocessStringProperty(settings, settingsKey, value, allEvents, allProperties, metadata);\n\t\t} else if (value === undefined) {\n\t\t\tdelete settings[settingsKey];\n\t\t}\n\t}\n\treturn lateProperties;\n}\n\n/**\n * Processes the command.\n *\n * Resolves the command set on the control via the intrinsic class attribute \"jsx:command\".\n * If no command has been set or the targeted event doesn't exist, no configuration is set.\n * @param metadata Metadata of the control\n * @param settings Settings of the control\n */\nfunction processCommand(metadata: ManagedObjectMetadata, settings: Record<string, unknown>): void {\n\tconst commandProperty = settings[\"jsx:command\"];\n\tif (commandProperty) {\n\t\tconst [command, eventName] = (commandProperty as string).split(\"|\");\n\t\tconst event = metadata.getAllEvents()[eventName];\n\t\tif (event && command.startsWith(\"cmd:\")) {\n\t\t\tsettings[event.name] = EventHandlerResolver.resolveEventHandler(command);\n\t\t}\n\t}\n\tdelete settings[\"jsx:command\"];\n}\n\nconst jsxControl = function <T extends Element>(\n\tControlType: NonAbstractClass<Control> | Function,\n\tsettings: NonControlProperties<T> & {\n\t\tkey: string;\n\t\tchildren?: Element | ControlProperties<T>;\n\t\tref?: Ref<T>;\n\t\tbinding?: string;\n\t\tclass?: string;\n\t\t[FL_DELEGATE]?: string;\n\t\t[DT_DESIGNTIME]?: string;\n\t\t[CORE_REQUIRE]?: string;\n\t},\n\tkey: string,\n\t_jsxContext: JSXContext,\n\t_jsxFormatterContext: object\n): Control | Control[] | undefined {\n\tlet targetControl: Control | Control[] | undefined;\n\n\tif ((ControlType as { isFragment?: boolean })?.isFragment) {\n\t\ttargetControl = settings.children as Control | Control[];\n\t} else if (isAControl(ControlType)) {\n\t\tconst metadata = ControlType.getMetadata();\n\t\tif (key !== undefined) {\n\t\t\tsettings[\"key\"] = key;\n\t\t}\n\t\tconst lateProperties = processProperties(metadata, settings);\n\t\tprocessCommand(metadata, settings);\n\t\tprocessAggregations(metadata, settings);\n\t\tconst classDef = settings.class;\n\t\tconst refDef = settings.ref;\n\t\tconst bindingDef = settings.binding;\n\t\tconst flDelegate = settings[FL_DELEGATE];\n\t\tconst dtDesigntime = settings[DT_DESIGNTIME];\n\t\tdelete settings.ref;\n\t\tdelete settings.class;\n\t\tdelete settings.binding;\n\t\tdelete settings[FL_DELEGATE];\n\t\tdelete settings[DT_DESIGNTIME];\n\t\tdelete settings[CORE_REQUIRE]; // Core require is not useful in control mode\n\t\tconst targetControlInstance = new ControlType(settings as $ControlSettings, { ..._jsxFormatterContext });\n\t\tif (classDef) {\n\t\t\ttargetControlInstance.addStyleClass(classDef);\n\t\t}\n\t\tif (refDef) {\n\t\t\trefDef.setCurrent(targetControlInstance as unknown as T);\n\t\t}\n\t\tconst customSettings = targetControlInstance.data(\"sap-ui-custom-settings\") ?? {};\n\t\tif (flDelegate) {\n\t\t\tcustomSettings[\"sap.ui.fl\"] ??= {};\n\t\t\tcustomSettings[\"sap.ui.fl\"].delegate = flDelegate;\n\t\t}\n\t\tif (dtDesigntime) {\n\t\t\tcustomSettings[\"sap.ui.dt\"] ??= {};\n\t\t\tcustomSettings[\"sap.ui.dt\"].designtime = dtDesigntime;\n\t\t}\n\t\tif (Object.keys(customSettings).length > 0) {\n\t\t\ttargetControlInstance.data(\"sap-ui-custom-settings\", customSettings);\n\t\t}\n\n\t\tif (bindingDef) {\n\t\t\tif (typeof bindingDef === \"string\") {\n\t\t\t\tconst bindingInfo = BindingInfo.parse(bindingDef);\n\t\t\t\tif (bindingInfo) {\n\t\t\t\t\ttargetControlInstance.bindElement({\n\t\t\t\t\t\tmodel: bindingInfo.model ?? undefined,\n\t\t\t\t\t\tpath: bindingInfo.path,\n\t\t\t\t\t\tparameters: bindingInfo.parameters ?? undefined\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\ttargetControlInstance.bindElement(bindingDef);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// We consider it's an object\n\t\t\t\tObject.keys(bindingDef).forEach((bindingDefKey) => {\n\t\t\t\t\ttargetControlInstance.bindElement({ model: bindingDefKey, path: bindingDef[bindingDefKey] });\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tfor (const latePropertiesKey in lateProperties) {\n\t\t\tlateProperties[latePropertiesKey]\n\t\t\t\t.then((value) => {\n\t\t\t\t\treturn targetControlInstance.setProperty(latePropertiesKey, value);\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tLog.error(`Couldn't set property ${latePropertiesKey} on ${ControlType.getMetadata().getName()}`, error, \"jsxControl\");\n\t\t\t\t});\n\t\t}\n\t\ttargetControl = targetControlInstance;\n\t} else if (typeof ControlType === \"function\") {\n\t\tconst controlTypeFn = ControlType;\n\t\ttargetControl = controlTypeFn(settings as $ControlSettings);\n\t} else {\n\t\ttargetControl = new Text({ text: \"Missing component \" + (ControlType as string) });\n\t}\n\n\treturn targetControl;\n};\n\nexport default jsxControl;\n"],"mappings":"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","ignoreList":[],"file":"jsx-control-dbg.js"}