{"version":3,"file":"TableScroller.js","names":["TableScroller","scrollTableToRow","table","rowPath","tableRowBinding","getRowBinding","findAndScroll","tableRow","getAllCurrentContexts","find","item","getPath","getIndex","undefined","scrollToIndex","getGroupConditions","groupLevels","length","tableRowBindingContexts","getLength","some","context","attachEventOnce"],"sources":["./TableScroller.ts"],"sourcesContent":["import type MdcTable from \"sap/ui/mdc/Table\";\nconst TableScroller = {\n\t/**\n\t * Scrolls an MDCTable to a given row, identified by its context path.\n\t * If the row with the path can't be found, the table stays unchanged.\n\t * @param table The table that is being scrolled through\n\t * @param rowPath The path identifying the row to scroll to\n\t */\n\tscrollTableToRow: function (table: MdcTable, rowPath: string): void {\n\t\tconst tableRowBinding = table.getRowBinding();\n\t\tconst findAndScroll = function (): void {\n\t\t\tconst tableRow = tableRowBinding.getAllCurrentContexts().find((item) => item.getPath() === rowPath);\n\t\t\tif (tableRow && tableRow.getIndex() !== undefined) {\n\t\t\t\ttable.scrollToIndex(tableRow.getIndex() as number);\n\t\t\t}\n\t\t};\n\t\tif (\n\t\t\t(table.getGroupConditions() === undefined ||\n\t\t\t\t(table.getGroupConditions() as { groupLevels?: object[] })?.groupLevels?.length === 0) &&\n\t\t\ttableRowBinding\n\t\t) {\n\t\t\t// we only scroll if there are no grouping otherwise scrollToIndex doesn't behave as expected\n\t\t\tconst tableRowBindingContexts = tableRowBinding.getAllCurrentContexts();\n\t\t\tif (\n\t\t\t\t(tableRowBindingContexts.length === 0 && tableRowBinding.getLength() > 0) ||\n\t\t\t\ttableRowBindingContexts.some(function (context) {\n\t\t\t\t\treturn context === undefined;\n\t\t\t\t})\n\t\t\t) {\n\t\t\t\t// The contexts are not loaded yet --> wait for a change event before scrolling\n\t\t\t\ttableRowBinding.attachEventOnce(\"dataReceived\", findAndScroll);\n\t\t\t} else {\n\t\t\t\t// Contexts are already loaded --> we can try to scroll immediately\n\t\t\t\tfindAndScroll();\n\t\t\t}\n\t\t}\n\t}\n};\n\nexport default TableScroller;\n"],"mappings":";;;;yCACA,MAAMA,EAAgB,CAOrBC,iBAAkB,SAAUC,EAAiBC,GAC5C,MAAMC,EAAkBF,EAAMG,gBAC9B,MAAMC,EAAgB,WACrB,MAAMC,EAAWH,EAAgBI,wBAAwBC,KAAMC,GAASA,EAAKC,YAAcR,GAC3F,GAAII,GAAYA,EAASK,aAAeC,UAAW,CAClDX,EAAMY,cAAcP,EAASK,WAC9B,CACD,EACA,IACEV,EAAMa,uBAAyBF,WAC9BX,EAAMa,sBAAqDC,aAAaC,SAAW,IACrFb,EACC,CAED,MAAMc,EAA0Bd,EAAgBI,wBAChD,GACEU,EAAwBD,SAAW,GAAKb,EAAgBe,YAAc,GACvED,EAAwBE,KAAK,SAAUC,GACtC,OAAOA,IAAYR,SACpB,GACC,CAEDT,EAAgBkB,gBAAgB,eAAgBhB,EACjD,KAAO,CAENA,GACD,CACD,CACD,GACC,OAEaN,CAAa","ignoreList":[]}