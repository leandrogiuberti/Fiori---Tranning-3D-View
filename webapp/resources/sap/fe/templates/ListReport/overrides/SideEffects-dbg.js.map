{"version":3,"names":["isSideEffectsRequestingTable","controller","headerContext","eventName","sideEffectsService","CommonUtils","getAppComponent","getView","getSideEffectsService","convertedMetaModel","getConvertedMetaModel","metaPath","getModel","getMetaModel","getMetaContext","getPath","tableEntityType","getInvolvedDataModelObjects","targetEntityType","getODataSideEffectsFromContextEvent","some","sideEffects","targetEntities","targetEntity","$NavigationPropertyPath","startsWith","resolvePath","target","entityType","SideEffectsOverride","getDataRefreshText","resourceModel","getResourceModel","getText","requestSideEffectsForEvent","path","getController","table","_getTable","dataListBinding","getRowBinding","tableHeaderContext","getHeaderContext","contexts","getCurrentContexts","context","find","isDataPathRelevant","findIndex"],"sourceRoot":".","sources":["SideEffects.ts"],"sourcesContent":["import type { EntitySet } from \"@sap-ux/vocabularies-types\";\nimport CommonUtils from \"sap/fe/core/CommonUtils\";\nimport type SideEffectsControllerExtension from \"sap/fe/core/controllerextensions/SideEffects\";\nimport { getInvolvedDataModelObjects } from \"sap/fe/core/converters/MetaModelConverter\";\nimport { getResourceModel } from \"sap/fe/core/helpers/ResourceModelHelper\";\nimport type ListReportController from \"sap/fe/templates/ListReport/ListReportController.controller\";\nimport type ODataV4Context from \"sap/ui/model/odata/v4/Context\";\n\n/**\n * Checks if the SideEffects triggers a refresh of the table.\n * The target entity must be an absolute path and point to the same entity type as the table.\n * @param controller The ListReportController\n * @param headerContext The header context of the table\n * @param eventName The event name\n * @returns True if the SideEffects event target the table; otherwise, returns false\n */\nfunction isSideEffectsRequestingTable(controller: ListReportController, headerContext: ODataV4Context, eventName: string): boolean {\n\tconst sideEffectsService = CommonUtils.getAppComponent(controller.getView()).getSideEffectsService();\n\tconst convertedMetaModel = sideEffectsService.getConvertedMetaModel();\n\tconst metaPath = headerContext.getModel().getMetaModel().getMetaContext(headerContext.getPath());\n\tconst tableEntityType = getInvolvedDataModelObjects(metaPath).targetEntityType;\n\treturn sideEffectsService.getODataSideEffectsFromContextEvent(headerContext, eventName).some((sideEffects) => {\n\t\treturn sideEffects.targetEntities.some(\n\t\t\t(targetEntity) =>\n\t\t\t\ttargetEntity.$NavigationPropertyPath.startsWith(\"/\") &&\n\t\t\t\tconvertedMetaModel.resolvePath<EntitySet | undefined>(targetEntity.$NavigationPropertyPath)?.target?.entityType ===\n\t\t\t\t\ttableEntityType\n\t\t);\n\t});\n}\nconst SideEffectsOverride = {\n\t/**\n\t * Get text to be shown for user to indicate data refresh.\n\t *\n\t * According to UX there should be another text in the LR without referencing one item.\n\t * @returns Text to be shown to the user in case of a data refresh\n\t */\n\tgetDataRefreshText: function (this: SideEffectsControllerExtension): string {\n\t\tconst resourceModel = getResourceModel(this.getView());\n\t\treturn resourceModel.getText(\"C_SERVER_EVENTS_NEW_DATA\");\n\t},\n\n\t/**\n\t * Requests the SideEffects for a sideEffect event.\n\t *\n\t * Search the context in the LR table and trigger the side effect for this context if found.\n\t * @param eventName SideEffects event which was triggered\n\t * @param path The path for which this event was triggered\n\t * @returns Promise on SideEffects request\n\t */\n\tasync requestSideEffectsForEvent(this: SideEffectsControllerExtension, eventName: string, path: string): Promise<undefined> {\n\t\tconst controller = this.getView().getController() as ListReportController;\n\t\tconst table = (this.getView().getController() as ListReportController)._getTable();\n\t\tconst dataListBinding = table?.getRowBinding();\n\t\tif (!dataListBinding) {\n\t\t\treturn;\n\t\t}\n\t\tconst tableHeaderContext = dataListBinding.getHeaderContext();\n\t\tif (tableHeaderContext && isSideEffectsRequestingTable(controller, tableHeaderContext, eventName)) {\n\t\t\treturn CommonUtils.getAppComponent(this.getView())\n\t\t\t\t.getSideEffectsService()\n\t\t\t\t.requestSideEffectsForEvent(eventName, tableHeaderContext);\n\t\t}\n\t\tconst contexts = dataListBinding.getCurrentContexts() ?? [];\n\t\tconst context = contexts.find((context: ODataV4Context) => context.getPath() === path);\n\t\tif (context) {\n\t\t\t// use the default implementation from the SideEffects Service\n\t\t\treturn CommonUtils.getAppComponent(this.getView()).getSideEffectsService().requestSideEffectsForEvent(eventName, context);\n\t\t}\n\t},\n\t/**\n\t * Overrides the isDataPathRelevant with LR specific logic to check the current table's contexts.\n\t * @param path The path to be checked\n\t * @param eventName The SideEffects event that is triggered\n\t * @returns True if the data path is shown in table\n\t */\n\tisDataPathRelevant(this: SideEffectsControllerExtension, path: string, eventName: string): boolean {\n\t\tconst controller = this.getView().getController() as ListReportController;\n\t\tconst dataListBinding = controller._getTable()?.getRowBinding();\n\t\tif (!dataListBinding) {\n\t\t\treturn false;\n\t\t}\n\t\tconst tableHeaderContext = dataListBinding.getHeaderContext();\n\t\t// Absolute path to refresh the table\n\t\tif (tableHeaderContext && isSideEffectsRequestingTable(controller, tableHeaderContext, eventName)) {\n\t\t\treturn true;\n\t\t}\n\t\tconst contexts = dataListBinding.getCurrentContexts() ?? [];\n\t\treturn contexts.findIndex((context: ODataV4Context) => context.getPath() === path) > -1;\n\t}\n};\n\nexport default SideEffectsOverride;\n"],"mappings":"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","ignoreList":[],"file":"SideEffects-dbg.js"}