{"version":3,"names":["ButtonType","mLibrary","getExpressionForTitle","fullContextPath","viewData","headerInfo","getTitleBindingExpression","getTextBindingExpression","undefined","_exports","getExpressionForDescription","oHeaderInfo","descriptionBinding","getExpressionFromAnnotation","Description","Value","$target","annotations","Common","Text","UI","TextArrangement","addTextArrangementToBindingExpression","description","compileExpression","formatValueRecursively","getExpressionForSaveButton","oViewData","saveButtonText","resourceModel","getText","createButtonText","saveExpression","startingEntitySet","Session","StickySessionSupported","ifElse","IsCreateMode","Draft","IsNewObject","getExpressionForLabelOnHeaderForm","label","isManifestAction","action","nonManifestActions","includes","type","buildEmphasizedButtonExpression","dataContextPath","identification","targetEntityType","Identification","dataFieldsWithCriticality","filter","dataField","$Type","Criticality","dataFieldsBindingExpressions","length","map","criticalityVisibleBindingExpression","and","not","equal","Hidden","or","constant","Ghost","Emphasized","getElementBinding","sPath","sNavigationPath","ODataModelAnnotationHelper","getNavigationPath","checkDraftState","entitySet","DraftRoot","EditAction","checkCollaborationDraftRoot","ShareAction","getSwitchToActiveVisibility","pathInModel","IsEditable","getSwitchToDraftVisibility","getSwitchDraftAndActiveVisibility","_findAction","aConverterContextHeaderActions","sActionType","oAction","find","oHeaderAction","getDeleteCommandExecutionEnabled","oDeleteAction","enabled","getDeleteCommandExecutionVisible","visible","getEditCommandExecutionVisible","oEditAction","getEditCommandExecutionEnabled","getEditAction","oEntitySet","getPath","aPaths","split","rootEntitySetPath","rootEntitySetAnnnotations","getObject","bDraftRoot","hasOwnProperty","bDraftNode","bStickySession","sActionName","isReadOnlyFromStaticAnnotations","oAnnotations","oFieldControl","bComputed","bImmutable","bReadOnly","Bool","readOnlyExpressionFromDynamicAnnotations","sIsFieldControlPathReadOnly","BindingInfo","parse","getExpressionForMicroChartTitlePress","oConfiguration","targetAnnotationPath","targetAnnotationPathDatModelObject","oManifestOutbound","sCollectionName","getMicroChartControlConfigurationPath","navigationConfiguration","JSON","stringify","getMicroChartTitleAsLink","oControlConfiguration","collectionName","targetControlConfiguration","targetObject","Visualizations","value","getGroupIdFromConfig","oConfigurations","sAnnotationPath","sDefaultGroupId","aAutoPatterns","sGroupId","requestGroupId","some","autoPattern","getGroupIdFromConfigForMicroChart","targetAnnotationPathDataModelObject","getBindingWithGroupIdFromConfig","sKey","sBinding","createBindingForAlternateAndSecondaryKeys","dataModelObjectPath","binding","alternateAndSecondaryKeys","ModelHelper","getAlternateAndSecondaryKeys","targetEntitySet","path","parameters","$select","join","doesFieldGroupContainOnlyOneMultiLineDataField","aFormElements","isValueMultilineText","getShareButtonVisibility","isShareButtonVisibleForMyInbox","shareButtonVisibilityExp","fclEnabled","getVisiblityOfHeaderInfo","oTitleAnnotations","oDescriptionAnnotations","oFieldTitleFieldControl","oFieldDescriptionFieldControl","bIsTitleReadOnly","titleExpression","bIsDescriptionReadOnly","descriptionExpression","combineTitleAndDescriptionExpression","oTitleFieldControl","oDescriptionFieldControl","getPressExpressionForDelete","deletableContexts","title","params","CommonHelper","generateFunction","objectToString","getPressExpressionForEdit","oDataField","sEntitySetName","sEditableContexts","addSingleQuotes","Action","sDataFieldEnumMember","InvocationGrouping","sInvocationGroup","oParams","contexts","entitySetName","invocationGrouping","model","Label","isNavigable","defaultValuesExtensionFunction","getPressExpressionForFooterAnnotationAction","dataFieldModelPath","headerAction","actionContexts","getPressExpressionForPrimaryAction","positiveActionVisible","positiveActionEnabled","editActionVisible","editActionEnabled","sActionContexts","toString","oConditions","getStashableHBoxBinding","oHeaderFacet","Facet","targetAnnotationType","targetAnnotationValue","getHeaderFormHboxRenderType","getDefaultActionHandler","oCtx","oDataFieldForDefaultAction","defaultActionContextOrEntitySet","defaultAction","command","press","noWrap","buildActionWrapper","id","ioEx","isVisualizationIsPartOfPreview","subSection","isPartOfPreview","presentation","visualizations","getFooterVisibilityExpression","context","footerActions","metaModel","getInterface","getModel","_generateBindingsForActions","actions","resolveBindingString","getActionModelPath","annotationPath","actionContext","getContext","getInvolvedDataModelObjects","determiningActions","ActionType","DataFieldForAction","manifestActionBindings","determiningActionBindings","isNotHiddenDeterminingAction","actionContextModelPath","getHeaderLevel","isMoreContent","showSubSectionTitle","level","dataVisualizationTitleVisible","getHeaderFormAriaLabelledBy","headerFormData","formElementIdPrefix","titleId","StableIdHelper","generate","labelId","getFormAriaText","subSectionTitle","resourceBundle","Library","getResourceBundleFor","requiresIContext"],"sourceRoot":".","sources":["ObjectPageTemplating.ts"],"sourcesContent":["// Formatters for the Object Page\nimport type { EntitySet, NavigationProperty, Property, Singleton } from \"@sap-ux/vocabularies-types\";\nimport type {\n\tChart,\n\tDataFieldAbstractTypes,\n\tDataFieldDefault,\n\tDataFieldForAction,\n\tDataFieldTypes,\n\tFacet,\n\tHeaderInfoType,\n\tPresentationVariant\n} from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport { UIAnnotationTypes } from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport type { BindingToolkitExpression, CompiledBindingToolkitExpression, PathInModelExpression } from \"sap/fe/base/BindingToolkit\";\nimport {\n\tand,\n\tcompileExpression,\n\tconstant,\n\tequal,\n\tgetExpressionFromAnnotation,\n\tifElse,\n\tnot,\n\tor,\n\tpathInModel,\n\tresolveBindingString\n} from \"sap/fe/base/BindingToolkit\";\nimport type { MicroChartManifestConfiguration } from \"sap/fe/core/converters/ManifestSettings\";\nimport { ActionType, type ControlConfiguration } from \"sap/fe/core/converters/ManifestSettings\";\nimport type { MetaModelPropertyAnnotations } from \"sap/fe/core/converters/MetaModelConverter\";\nimport { getInvolvedDataModelObjects } from \"sap/fe/core/converters/MetaModelConverter\";\nimport type { PageContextPathTarget } from \"sap/fe/core/converters/TemplateConverter\";\nimport type { BaseAction, CustomAction } from \"sap/fe/core/converters/controls/Common/Action\";\nimport type { AnnotationFormElement } from \"sap/fe/core/converters/controls/Common/Form\";\nimport type { FieldGroupFacet, HeaderFormData } from \"sap/fe/core/converters/controls/ObjectPage/HeaderFacet\";\nimport type { DataVisualizationSubSection } from \"sap/fe/core/converters/controls/ObjectPage/SubSection\";\nimport { Draft, UI } from \"sap/fe/core/helpers/BindingHelper\";\nimport ModelHelper from \"sap/fe/core/helpers/ModelHelper\";\nimport * as StableIdHelper from \"sap/fe/core/helpers/StableIdHelper\";\nimport { getTitleBindingExpression } from \"sap/fe/core/helpers/TitleHelper\";\nimport type { ViewData } from \"sap/fe/core/services/TemplatedViewServiceFactory\";\nimport type { DataModelObjectPath } from \"sap/fe/core/templating/DataModelPathHelper\";\nimport CommonHelper from \"sap/fe/macros/CommonHelper\";\nimport {\n\taddTextArrangementToBindingExpression,\n\tformatValueRecursively,\n\tgetTextBindingExpression\n} from \"sap/fe/macros/field/FieldTemplating\";\nimport mLibrary from \"sap/m/library\";\nimport BindingInfo from \"sap/ui/base/BindingInfo\";\nimport Library from \"sap/ui/core/Lib\";\nimport type { ManifestOutboundEntry } from \"sap/ui/core/Manifest\";\nimport type { IContext } from \"sap/ui/core/util/XMLPreprocessor\";\nimport ODataModelAnnotationHelper from \"sap/ui/model/odata/v4/AnnotationHelper\";\nimport type Context from \"sap/ui/model/odata/v4/Context\";\nimport type ODataMetaModel from \"sap/ui/model/odata/v4/ODataMetaModel\";\nimport type { MetaModelType } from \"../../../../../../../types/metamodel_types\";\n\nconst ButtonType = mLibrary.ButtonType;\n\nexport const getExpressionForTitle = function (\n\tfullContextPath: DataModelObjectPath<PageContextPathTarget>,\n\tviewData: ViewData,\n\theaderInfo?: HeaderInfoType\n): CompiledBindingToolkitExpression {\n\treturn getTitleBindingExpression(\n\t\tfullContextPath as DataModelObjectPath<Property>,\n\t\tgetTextBindingExpression,\n\t\tundefined,\n\t\theaderInfo,\n\t\tviewData\n\t);\n};\n\n/**\n * Retrieves the expression for the description of an object page.\n * @param fullContextPath The full context path used to reach that object page\n * @param oHeaderInfo The @UI.HeaderInfo annotation content\n * @param oHeaderInfo.Description\n * @returns The binding expression for the object page description\n */\nexport const getExpressionForDescription = function (\n\tfullContextPath: DataModelObjectPath<EntitySet>,\n\toHeaderInfo?: HeaderInfoType\n): CompiledBindingToolkitExpression {\n\tlet descriptionBinding = getExpressionFromAnnotation((oHeaderInfo?.Description as DataFieldTypes)?.Value);\n\tif ((oHeaderInfo?.Description as DataFieldTypes)?.Value?.$target?.annotations?.Common?.Text?.annotations?.UI?.TextArrangement) {\n\t\t// In case an explicit text arrangement was set we make use of it in the description as well\n\t\tdescriptionBinding = addTextArrangementToBindingExpression(descriptionBinding, fullContextPath);\n\t}\n\tconst description = compileExpression(formatValueRecursively(descriptionBinding, fullContextPath));\n\treturn description === \"undefined\" ? \"\" : description;\n};\n\n/**\n * Return the expression for the save button.\n * @param oViewData The current view data\n * @param fullContextPath The path used up until here\n * @returns The binding expression that shows the right save button text\n */\nexport const getExpressionForSaveButton = function (\n\toViewData: ViewData,\n\tfullContextPath: DataModelObjectPath<EntitySet>\n): CompiledBindingToolkitExpression {\n\tconst saveButtonText = oViewData.resourceModel.getText(\"T_OP_OBJECT_PAGE_SAVE\");\n\tconst createButtonText = oViewData.resourceModel.getText(\"T_OP_OBJECT_PAGE_CREATE\");\n\tlet saveExpression;\n\n\tif ((fullContextPath.startingEntitySet as EntitySet).annotations.Session?.StickySessionSupported) {\n\t\t// If we're in sticky mode AND the ui is in create mode, show Create, else show Save\n\t\tsaveExpression = ifElse(UI.IsCreateMode, createButtonText, saveButtonText);\n\t} else {\n\t\t// If we're in draft AND the draft is a new object (!IsActiveEntity && !HasActiveEntity), show create, else show save\n\t\tsaveExpression = ifElse(Draft.IsNewObject, createButtonText, saveButtonText);\n\t}\n\treturn compileExpression(saveExpression);\n};\n\n/**\n * Return the expression of the label for a field into a header form.\n * @param label The label of the header form in an object page.\n * @param viewData The current view data.\n * @returns The binding expression for the translated label of the of the header form in an object page.\n */\nexport const getExpressionForLabelOnHeaderForm = function (label: String, viewData: ViewData): CompiledBindingToolkitExpression {\n\treturn viewData.resourceModel.getText(\"HEADER_FORM_LABEL\", [label]);\n};\n\n/**\n * Method returns Whether the action type is manifest or not.\n * @param action The action object\n * @returns `true` if action is coming from manifest, `false` otherwise\n */\nexport const isManifestAction = function (action: BaseAction | CustomAction): action is CustomAction {\n\tconst nonManifestActions = [\n\t\t\"Primary\",\n\t\t\"DefaultApply\",\n\t\t\"Secondary\",\n\t\t\"ForAction\",\n\t\t\"ForNavigation\",\n\t\t\"SwitchToActiveObject\",\n\t\t\"SwitchToDraftObject\",\n\t\t\"DraftActions\",\n\t\t\"Copy\",\n\t\t\"Standard\"\n\t];\n\treturn !nonManifestActions.includes(action.type ?? \"\");\n};\n\n/**\n * Returns a compiled expression to determine Emphasized  button type based on Criticality across all actions\n * If critical action is rendered, its considered to be the primary action. Hence template's default primary action is set back to Default.\n * @param dataContextPath The dataModelObjectPath related to the context\n * @returns An expression to deduce if button type is Default or Emphasized\n */\nexport const buildEmphasizedButtonExpression = function (\n\tdataContextPath: DataModelObjectPath<EntitySet | NavigationProperty | Singleton>\n): CompiledBindingToolkitExpression {\n\tconst identification = dataContextPath.targetEntityType?.annotations?.UI?.Identification;\n\tconst dataFieldsWithCriticality =\n\t\tidentification?.filter((dataField) => dataField.$Type === UIAnnotationTypes.DataFieldForAction && dataField.Criticality) || [];\n\n\tconst dataFieldsBindingExpressions = dataFieldsWithCriticality.length\n\t\t? dataFieldsWithCriticality.map((dataField) => {\n\t\t\t\tconst criticalityVisibleBindingExpression = getExpressionFromAnnotation(dataField.Criticality);\n\t\t\t\treturn and(\n\t\t\t\t\tnot(equal(getExpressionFromAnnotation(dataField.annotations?.UI?.Hidden), true)),\n\t\t\t\t\tor(\n\t\t\t\t\t\tequal(criticalityVisibleBindingExpression, \"UI.CriticalityType/Negative\"),\n\t\t\t\t\t\tequal(criticalityVisibleBindingExpression, \"1\"),\n\t\t\t\t\t\tequal(criticalityVisibleBindingExpression as BindingToolkitExpression<number>, 1),\n\t\t\t\t\t\tequal(criticalityVisibleBindingExpression, \"UI.CriticalityType/Positive\"),\n\t\t\t\t\t\tequal(criticalityVisibleBindingExpression, \"3\"),\n\t\t\t\t\t\tequal(criticalityVisibleBindingExpression as BindingToolkitExpression<number>, 3)\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t  })\n\t\t: ([constant(false)] as BindingToolkitExpression<boolean>[]);\n\n\t// If there is at least one visible dataField with criticality negative or positive, the type is set as Ghost\n\t// else it is emphasized\n\treturn compileExpression(ifElse(or(...dataFieldsBindingExpressions), ButtonType.Ghost, ButtonType.Emphasized));\n};\n\nexport const getElementBinding = function (sPath: string): string {\n\tconst sNavigationPath = ODataModelAnnotationHelper.getNavigationPath(sPath);\n\tif (sNavigationPath) {\n\t\treturn \"{path:'\" + sNavigationPath + \"'}\";\n\t} else {\n\t\t//no navigation property needs empty object\n\t\treturn \"{path: ''}\";\n\t}\n};\n\n/**\n * Function to check if draft pattern is supported.\n * @param entitySet The current entity set.\n * @returns Returns the Boolean value based on draft state\n */\nexport const checkDraftState = function (entitySet: EntitySet): boolean {\n\tif (entitySet.annotations?.Common?.DraftRoot?.EditAction) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n};\n\n/**\n * Function to check if the entitySet is a draft root that supports collaboration.\n * @param entitySet The current entity set.\n * @returns Returns the Boolean value based on draft state\n */\nexport const checkCollaborationDraftRoot = function (entitySet: EntitySet): boolean {\n\tif (entitySet.annotations?.Common?.DraftRoot?.ShareAction) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n};\n\n/**\n * Function to get the visibility for the SwitchToActive button in the object page or subobject page.\n * @param entitySet The current entity set.\n * @returns Returns expression binding or Boolean value based on the draft state\n */\nexport const getSwitchToActiveVisibility = function (entitySet: EntitySet): CompiledBindingToolkitExpression | boolean {\n\tif (checkDraftState(entitySet)) {\n\t\tif (checkCollaborationDraftRoot(entitySet)) {\n\t\t\treturn compileExpression(and(pathInModel(\"HasActiveEntity\"), UI.IsEditable));\n\t\t} else {\n\t\t\treturn compileExpression(\n\t\t\t\tand(equal(pathInModel(\"DraftAdministrativeData/DraftIsCreatedByMe\"), true), UI.IsEditable, not(UI.IsCreateMode))\n\t\t\t);\n\t\t}\n\t} else {\n\t\treturn false;\n\t}\n};\n\n/**\n * Function to get the visibility for the SwitchToDraft button in the object page or subobject page.\n * @param entitySet The current entity set.\n * @returns Returns expression binding or Boolean value based on the draft state\n */\nexport const getSwitchToDraftVisibility = function (entitySet: EntitySet): CompiledBindingToolkitExpression | boolean {\n\tif (checkDraftState(entitySet)) {\n\t\tif (checkCollaborationDraftRoot(entitySet)) {\n\t\t\treturn compileExpression(and(pathInModel(\"HasDraftEntity\"), not(UI.IsEditable)));\n\t\t} else {\n\t\t\treturn compileExpression(\n\t\t\t\tand(\n\t\t\t\t\tequal(pathInModel(\"DraftAdministrativeData/DraftIsCreatedByMe\"), true),\n\t\t\t\t\tnot(UI.IsEditable),\n\t\t\t\t\tnot(UI.IsCreateMode),\n\t\t\t\t\tpathInModel(\"HasDraftEntity\")\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t} else {\n\t\treturn false;\n\t}\n};\n\n/**\n * Function to get the visibility for the SwitchDraftAndActive button in the object page or subobject page.\n * @param entitySet The current entity set.\n * @returns Returns expression binding or Boolean value based on the draft state\n */\nexport const getSwitchDraftAndActiveVisibility = function (entitySet: EntitySet): CompiledBindingToolkitExpression | boolean {\n\tif (checkDraftState(entitySet)) {\n\t\tif (checkCollaborationDraftRoot(entitySet)) {\n\t\t\t// somehow checking hasDraftEntity and hasActiveEntity does not work, so we check IsActiveEntity first\n\t\t\treturn compileExpression(ifElse(pathInModel(\"IsActiveEntity\"), pathInModel(\"HasDraftEntity\"), pathInModel(\"HasActiveEntity\")));\n\t\t} else {\n\t\t\treturn compileExpression(and(equal(pathInModel(\"DraftAdministrativeData/DraftIsCreatedByMe\"), true), not(UI.IsCreateMode)));\n\t\t}\n\t} else {\n\t\treturn false;\n\t}\n};\n\n/**\n * Function to find an action from the array of header actions in the converter context.\n * @param aConverterContextHeaderActions Array of 'header' actions on the object page.\n * @param sActionType The action type\n * @returns The action with the matching action type\n */\nexport const _findAction = function (aConverterContextHeaderActions: BaseAction[], sActionType: string): BaseAction | undefined {\n\tlet oAction: BaseAction | undefined;\n\tif (aConverterContextHeaderActions && aConverterContextHeaderActions.length) {\n\t\toAction = aConverterContextHeaderActions.find(function (oHeaderAction: BaseAction) {\n\t\t\treturn oHeaderAction.type === sActionType;\n\t\t});\n\t}\n\treturn oAction;\n};\n\n/**\n * Function to format the 'enabled' property for the Delete button on the object page or subobject page in case of a Command Execution.\n * @param aConverterContextHeaderActions Array of header actions on the object page\n * @returns Returns expression binding or Boolean value from the converter output\n */\nexport const getDeleteCommandExecutionEnabled = function (aConverterContextHeaderActions: BaseAction[]): string | undefined {\n\tconst oDeleteAction = _findAction(aConverterContextHeaderActions, \"Secondary\");\n\treturn oDeleteAction ? oDeleteAction.enabled : \"false\";\n};\n\n/**\n * Function to format the 'visible' property for the Delete button on the object page or subobject page in case of a Command Execution.\n * @param aConverterContextHeaderActions Array of header actions on the object page\n * @returns Returns expression binding or Boolean value from the converter output\n */\nexport const getDeleteCommandExecutionVisible = function (aConverterContextHeaderActions: BaseAction[]): string | undefined {\n\tconst oDeleteAction = _findAction(aConverterContextHeaderActions, \"Secondary\");\n\treturn oDeleteAction ? oDeleteAction.visible : \"false\";\n};\n\n/**\n * Function to format the 'visible' property for the Edit button on the object page or subobject page in case of a Command Execution.\n * @param aConverterContextHeaderActions Array of header actions on the object page\n * @returns Returns expression binding or Boolean value from the converter output\n */\nexport const getEditCommandExecutionVisible = function (aConverterContextHeaderActions: BaseAction[]): string | undefined {\n\tconst oEditAction = _findAction(aConverterContextHeaderActions, \"Primary\");\n\treturn oEditAction ? oEditAction.visible : \"false\";\n};\n\n/**\n * Function to format the 'enabled' property for the Edit button on the object page or subobject page in case of a Command Execution.\n * @param aConverterContextHeaderActions Array of header actions on the object page\n * @returns Returns expression binding or Boolean value from the converter output\n */\nexport const getEditCommandExecutionEnabled = function (aConverterContextHeaderActions: BaseAction[]): string | undefined {\n\tconst oEditAction = _findAction(aConverterContextHeaderActions, \"Primary\");\n\treturn oEditAction ? oEditAction.enabled : \"false\";\n};\n\n/**\n * Function to get the EditAction from the based on a draft-enabled application or a sticky application.\n * @param [oEntitySet] The value from the expression.\n * @returns Returns expression binding or Boolean value based on vRawValue & oDraftNode\n */\nexport const getEditAction = function (oEntitySet: Context): string {\n\tconst sPath = oEntitySet.getPath();\n\tconst aPaths = sPath.split(\"/\");\n\tconst rootEntitySetPath = \"/\" + aPaths[1];\n\t// get the edit action from root entity sets\n\tconst rootEntitySetAnnnotations = oEntitySet.getObject(rootEntitySetPath + \"@\");\n\tconst bDraftRoot = rootEntitySetAnnnotations.hasOwnProperty(\"@com.sap.vocabularies.Common.v1.DraftRoot\");\n\tconst bDraftNode = rootEntitySetAnnnotations.hasOwnProperty(\"@com.sap.vocabularies.Common.v1.DraftNode\");\n\tconst bStickySession = rootEntitySetAnnnotations.hasOwnProperty(\"@com.sap.vocabularies.Session.v1.StickySessionSupported\");\n\tlet sActionName;\n\tif (bDraftRoot) {\n\t\tsActionName = oEntitySet.getObject(`${rootEntitySetPath}@com.sap.vocabularies.Common.v1.DraftRoot/EditAction`);\n\t} else if (bDraftNode) {\n\t\tsActionName = oEntitySet.getObject(`${rootEntitySetPath}@com.sap.vocabularies.Common.v1.DraftNode/EditAction`);\n\t} else if (bStickySession) {\n\t\tsActionName = oEntitySet.getObject(`${rootEntitySetPath}@com.sap.vocabularies.Session.v1.StickySessionSupported/EditAction`);\n\t}\n\treturn !sActionName ? sActionName : `${rootEntitySetPath}/${sActionName}`;\n};\n\nexport const isReadOnlyFromStaticAnnotations = function (oAnnotations?: MetaModelPropertyAnnotations, oFieldControl?: string): boolean {\n\tlet bComputed, bImmutable, bReadOnly;\n\n\tif (oAnnotations && oAnnotations[\"@Org.OData.Core.V1.Computed\"]) {\n\t\tbComputed = (oAnnotations[\"@Org.OData.Core.V1.Computed\"] as { Bool?: string }).Bool\n\t\t\t? (oAnnotations[\"@Org.OData.Core.V1.Computed\"] as { Bool?: string }).Bool == \"true\"\n\t\t\t: true;\n\t}\n\tif (oAnnotations && oAnnotations[\"@Org.OData.Core.V1.Immutable\"]) {\n\t\tbImmutable = (oAnnotations[\"@Org.OData.Core.V1.Immutable\"] as { Bool?: string }).Bool\n\t\t\t? (oAnnotations[\"@Org.OData.Core.V1.Immutable\"] as { Bool?: string }).Bool == \"true\"\n\t\t\t: true;\n\t}\n\tbReadOnly = bComputed || bImmutable;\n\n\tif (oFieldControl) {\n\t\tbReadOnly = bReadOnly || oFieldControl == \"com.sap.vocabularies.Common.v1.FieldControlType/ReadOnly\";\n\t}\n\tif (bReadOnly) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n};\n\nexport const readOnlyExpressionFromDynamicAnnotations = function (oFieldControl?: string): string | undefined {\n\tlet sIsFieldControlPathReadOnly;\n\tif (oFieldControl) {\n\t\tif (BindingInfo.parse(oFieldControl)) {\n\t\t\tsIsFieldControlPathReadOnly = \"%\" + oFieldControl + \" === 1 \";\n\t\t}\n\t}\n\tif (sIsFieldControlPathReadOnly) {\n\t\treturn \"{= \" + sIsFieldControlPathReadOnly + \"? false : true }\";\n\t} else {\n\t\treturn undefined;\n\t}\n};\n\n/*\n * Function to get the expression for chart Title Press\n *\n * @functionw\n * @param {oConfiguration} [oConfigurations] control configuration from manifest\n *  @param {oManifest} [oManifest] Outbounds from manifest\n * returns {String} [sCollectionName] Collection Name of the Micro Chart\n *\n * returns {String} [Expression] Handler Expression for the title press\n *\n */\nexport const getExpressionForMicroChartTitlePress = function (\n\toConfiguration: ControlConfiguration,\n\ttargetAnnotationPath: string,\n\ttargetAnnotationPathDatModelObject: DataModelObjectPath<Chart | PresentationVariant>,\n\toManifestOutbound: Record<string, ManifestOutboundEntry>,\n\tsCollectionName: string\n): string | undefined {\n\ttargetAnnotationPath = getMicroChartControlConfigurationPath(targetAnnotationPath, targetAnnotationPathDatModelObject, sCollectionName);\n\tconst navigationConfiguration = (oConfiguration?.[targetAnnotationPath] as MicroChartManifestConfiguration)?.[\"navigation\"];\n\tif (navigationConfiguration) {\n\t\tif (\n\t\t\t(navigationConfiguration[\"targetOutbound\"] && navigationConfiguration[\"targetOutbound\"][\"outbound\"]) ||\n\t\t\t(navigationConfiguration[\"targetOutbound\"] &&\n\t\t\t\tnavigationConfiguration[\"targetOutbound\"][\"outbound\"] &&\n\t\t\t\tnavigationConfiguration[\"targetSections\"])\n\t\t) {\n\t\t\treturn (\n\t\t\t\t\".handlers.onDataPointTitlePressed($controller, ${$source>/},'\" +\n\t\t\t\tJSON.stringify(oManifestOutbound) +\n\t\t\t\t\"','\" +\n\t\t\t\tnavigationConfiguration[\"targetOutbound\"][\"outbound\"] +\n\t\t\t\t\"','\" +\n\t\t\t\tsCollectionName +\n\t\t\t\t\"' )\"\n\t\t\t);\n\t\t} else if (navigationConfiguration[\"targetSections\"]) {\n\t\t\treturn \".handlers.navigateToSubSection($controller, '\" + JSON.stringify(navigationConfiguration[\"targetSections\"]) + \"')\";\n\t\t} else {\n\t\t\treturn undefined;\n\t\t}\n\t}\n};\n\n/*\n * Function to render Chart Title as Link\n *\n * @function\n * @param {oControlConfiguration} [oConfigurations] control configuration from manifest\n * returns {String} [sKey] For the TargetOutbound and TargetSection\n *\n */\nexport const getMicroChartTitleAsLink = function (\n\toControlConfiguration: ControlConfiguration,\n\ttargetAnnotationPath: string,\n\ttargetAnnotationPathDatModelObject: DataModelObjectPath<Chart | PresentationVariant>,\n\tcollectionName: string\n): string {\n\ttargetAnnotationPath = getMicroChartControlConfigurationPath(targetAnnotationPath, targetAnnotationPathDatModelObject, collectionName);\n\tconst targetControlConfiguration = (oControlConfiguration?.[targetAnnotationPath] as MicroChartManifestConfiguration)?.[\"navigation\"];\n\tif (\n\t\ttargetControlConfiguration &&\n\t\t(targetControlConfiguration[\"targetOutbound\"] ||\n\t\t\t(targetControlConfiguration[\"targetOutbound\"] && targetControlConfiguration[\"targetSections\"]))\n\t) {\n\t\treturn \"External\";\n\t} else if (targetControlConfiguration && targetControlConfiguration[\"targetSections\"]) {\n\t\treturn \"InPage\";\n\t} else {\n\t\treturn \"None\";\n\t}\n};\n\nexport const getMicroChartControlConfigurationPath = function (\n\ttargetAnnotationPath: string,\n\ttargetAnnotationPathDatModelObject: DataModelObjectPath<Chart | PresentationVariant>,\n\tcollectionName: string\n): string {\n\tif (targetAnnotationPathDatModelObject?.targetObject?.$Type === \"com.sap.vocabularies.UI.v1.PresentationVariantType\") {\n\t\ttargetAnnotationPath = targetAnnotationPathDatModelObject.targetObject?.Visualizations[0]?.value;\n\t\ttargetAnnotationPath = collectionName ? `${collectionName}/${targetAnnotationPath}` : targetAnnotationPath;\n\t}\n\treturn targetAnnotationPath;\n};\n\n/* Get groupId from control configuration\n *\n * @function\n * @param {Object} [oConfigurations] control configuration from manifest\n * @param {String} [sAnnotationPath] Annotation Path for the configuration\n * @description Used to get the groupId for DataPoints and MicroCharts in the Header.\n *\n */\nexport const getGroupIdFromConfig = function (\n\toConfigurations: ControlConfiguration,\n\tsAnnotationPath: string,\n\tsDefaultGroupId?: string\n): string | undefined {\n\tconst oConfiguration = oConfigurations[sAnnotationPath] as MicroChartManifestConfiguration,\n\t\taAutoPatterns = [\"Heroes\", \"Decoration\", \"Workers\", \"LongRunners\"];\n\tlet sGroupId = sDefaultGroupId;\n\tif (\n\t\toConfiguration &&\n\t\toConfiguration.requestGroupId &&\n\t\taAutoPatterns.some(function (autoPattern: string) {\n\t\t\treturn autoPattern === oConfiguration.requestGroupId;\n\t\t})\n\t) {\n\t\tsGroupId = \"$auto.\" + oConfiguration.requestGroupId;\n\t}\n\treturn sGroupId;\n};\n\n/**\n * Gets groupId from control configuration for micro chart.\n * @param oControlConfiguration Control configuration from manifest\n * @param targetAnnotationPath Annotation path for the configuration\n * @param targetAnnotationPathDataModelObject DataModelObject of Chart or PresentationVariant\n * @param collectionName Collection Name\n * @param sDefaultGroupId Default GroupId\n * @returns GroupId for micro chart\n */\nexport const getGroupIdFromConfigForMicroChart = function (\n\toControlConfiguration: ControlConfiguration,\n\ttargetAnnotationPath: string,\n\ttargetAnnotationPathDataModelObject: DataModelObjectPath<Chart | PresentationVariant>,\n\tcollectionName: string,\n\tsDefaultGroupId?: string\n): string | undefined {\n\ttargetAnnotationPath = getMicroChartControlConfigurationPath(targetAnnotationPath, targetAnnotationPathDataModelObject, collectionName);\n\treturn getGroupIdFromConfig(oControlConfiguration, targetAnnotationPath, sDefaultGroupId);\n};\n\n/*\n * Get Context Binding with groupId from control configuration\n *\n * @function\n * @param {Object} [oConfigurations] control configuration from manifest\n * @param {String} [sKey] Annotation Path for of the configuration\n * @description Used to get the binding for DataPoints in the Header.\n *\n */\nexport const getBindingWithGroupIdFromConfig = function (oConfigurations: ControlConfiguration, sKey: string): string | undefined {\n\tconst sGroupId = getGroupIdFromConfig(oConfigurations, sKey);\n\tlet sBinding;\n\tif (sGroupId) {\n\t\tsBinding = \"{ path : '', parameters : { $$groupId : '\" + sGroupId + \"' } }\";\n\t}\n\treturn sBinding;\n};\n\n/**\n * Generates the binding expression.\n * @param dataModelObjectPath DataModelObjectPath of the navigationPath\n * @returns The Binding expression including path and $select query as parameter depending on the function parameters\n */\nexport const createBindingForAlternateAndSecondaryKeys = function (dataModelObjectPath: DataModelObjectPath<Facet>): string | undefined {\n\tlet binding: Partial<PathInModelExpression<undefined>> | undefined;\n\tconst alternateAndSecondaryKeys = ModelHelper.getAlternateAndSecondaryKeys(\n\t\tdataModelObjectPath?.targetEntityType,\n\t\tdataModelObjectPath?.targetEntitySet as EntitySet\n\t);\n\n\tif (alternateAndSecondaryKeys?.length) {\n\t\tbinding = {\n\t\t\tpath: \"\"\n\t\t};\n\t\tbinding.parameters = { $select: alternateAndSecondaryKeys.join(\",\") || \"\" };\n\t}\n\treturn JSON.stringify(binding);\n};\n\n/**\n * Method to check whether a FieldGroup consists of only 1 DataField with MultiLine text annotation.\n * @param aFormElements A collection of form elements used in the current field group\n * @returns Returns true if only 1 data field with Multiline text annotation exists.\n */\nexport const doesFieldGroupContainOnlyOneMultiLineDataField = function (aFormElements: AnnotationFormElement[]): boolean {\n\treturn aFormElements && aFormElements.length === 1 && !!aFormElements[0].isValueMultilineText;\n};\n\n/**\n *\n * @param viewData Specifies the ViewData model\n * @returns Expression or Boolean value\n */\nexport const getShareButtonVisibility = function (viewData: ViewData): CompiledBindingToolkitExpression {\n\tif (viewData.isShareButtonVisibleForMyInbox === false) {\n\t\treturn \"false\";\n\t}\n\tconst shareButtonVisibilityExp = viewData.fclEnabled\n\t\t? and(pathInModel(\"/showShareIcon\", \"fclhelper\"), not(UI.IsCreateMode))\n\t\t: not(UI.IsCreateMode);\n\treturn compileExpression(shareButtonVisibilityExp);\n};\n\n/*\n * Gets the visibility of the header info in edit mode\n *\n * If either the title or description field from the header annotations are editable, then the\n * editable header info is visible.\n *\n * @function\n * @param {object} [oAnnotations] Annotations object for given entity set\n * @param {object} [oFieldControl] field control\n * returns {*}  binding expression or boolean value resolved form funcitons isReadOnlyFromStaticAnnotations and isReadOnlyFromDynamicAnnotations\n */\nexport const getVisiblityOfHeaderInfo = function (\n\toTitleAnnotations: MetaModelPropertyAnnotations,\n\toDescriptionAnnotations: MetaModelPropertyAnnotations,\n\toFieldTitleFieldControl?: string,\n\toFieldDescriptionFieldControl?: string\n): boolean | string {\n\t// Check Annotations for Title Field\n\t// Set to true and don't take into account, if there are no annotations, i.e. no title exists\n\tconst bIsTitleReadOnly = oTitleAnnotations ? isReadOnlyFromStaticAnnotations(oTitleAnnotations, oFieldTitleFieldControl) : true;\n\tconst titleExpression = readOnlyExpressionFromDynamicAnnotations(oFieldTitleFieldControl);\n\t// There is no expression and the title is not ready only, this is sufficient for an editable header\n\tif (!bIsTitleReadOnly && !titleExpression) {\n\t\treturn true;\n\t}\n\n\t// Check Annotations for Description Field\n\t// Set to true and don't take into account, if there are no annotations, i.e. no description exists\n\tconst bIsDescriptionReadOnly = oDescriptionAnnotations\n\t\t? isReadOnlyFromStaticAnnotations(oDescriptionAnnotations, oFieldDescriptionFieldControl)\n\t\t: true;\n\tconst descriptionExpression = readOnlyExpressionFromDynamicAnnotations(oFieldDescriptionFieldControl);\n\t// There is no expression and the description is not ready only, this is sufficient for an editable header\n\tif (!bIsDescriptionReadOnly && !descriptionExpression) {\n\t\treturn true;\n\t}\n\n\t// Both title and description are not editable and there are no dynamic annotations\n\tif (bIsTitleReadOnly && bIsDescriptionReadOnly && !titleExpression && !descriptionExpression) {\n\t\treturn false;\n\t}\n\n\t// Now combine expressions\n\tif (titleExpression && !descriptionExpression) {\n\t\treturn titleExpression;\n\t} else if (!titleExpression && descriptionExpression) {\n\t\treturn descriptionExpression;\n\t} else {\n\t\treturn combineTitleAndDescriptionExpression(oFieldTitleFieldControl, oFieldDescriptionFieldControl);\n\t}\n};\n\nexport const combineTitleAndDescriptionExpression = function (oTitleFieldControl?: string, oDescriptionFieldControl?: string): string {\n\t// If both header and title field are based on dynmaic field control, the editable header\n\t// is visible if at least one of these is not ready only\n\treturn \"{= %\" + oTitleFieldControl + \" === 1 ? ( %\" + oDescriptionFieldControl + \" === 1 ? false : true ) : true }\";\n};\n\n/*\n * Get Expression of press event for the delete button.\n *\n * @function\n * @param entitySet The current entity set\n * @param computedAnnotationInterface The current templating context\n * returns The function string generated from the CommonHelper's method generateFunction\n */\nexport const getPressExpressionForDelete = function (): string {\n\tconst deletableContexts = \"${$view>/}.getBindingContext()\",\n\t\ttitle = \"${$view>/}.byId('fe::ObjectPage').data('ObjectPageSubtitle')\",\n\t\tdescription = \"${$view>/}.byId('fe::ObjectPage').data('ObjectPageDescription')\";\n\n\tconst params = {\n\t\ttitle: title,\n\t\tdescription: description\n\t};\n\treturn CommonHelper.generateFunction(\".editFlow.deleteDocument\", deletableContexts, CommonHelper.objectToString(params));\n};\n\n/*\n * Get Expression of press event of Edit button.\n *\n * @function\n * @param {object} [oDataField] Data field object\n * @param {string} [sEntitySetName] Entity set name\n * @param {object} [oHeaderAction] Header action object\n * returns {string}  binding expression / function string generated from commanhelper's function generateFunction\n */\nexport const getPressExpressionForEdit = function (\n\toDataField: MetaModelType<DataFieldForAction>,\n\tsEntitySetName: string,\n\toHeaderAction?: BaseAction\n): string {\n\tconst sEditableContexts = CommonHelper.addSingleQuotes(oDataField && oDataField.Action!),\n\t\tsDataFieldEnumMember =\n\t\t\toDataField &&\n\t\t\toDataField.InvocationGrouping &&\n\t\t\t(oDataField.InvocationGrouping as unknown as Record<string, string>)[\"$EnumMember\"],\n\t\tsInvocationGroup = sDataFieldEnumMember === \"com.sap.vocabularies.UI.v1.OperationGroupingType/ChangeSet\" ? \"ChangeSet\" : \"Isolated\";\n\tconst oParams = {\n\t\tcontexts: \"${$view>/}.getBindingContext()\",\n\t\tentitySetName: CommonHelper.addSingleQuotes(sEntitySetName),\n\t\tinvocationGrouping: CommonHelper.addSingleQuotes(sInvocationGroup),\n\t\tmodel: \"${$source>/}.getModel()\",\n\t\tlabel: CommonHelper.addSingleQuotes(oDataField && oDataField.Label!, true),\n\t\tisNavigable: oHeaderAction && oHeaderAction.isNavigable,\n\t\tdefaultValuesExtensionFunction:\n\t\t\toHeaderAction && oHeaderAction.defaultValuesExtensionFunction ? `'${oHeaderAction.defaultValuesExtensionFunction}'` : undefined\n\t};\n\treturn CommonHelper.generateFunction(\".handlers.onCallAction\", \"${$view>/}\", sEditableContexts, CommonHelper.objectToString(oParams));\n};\n\n/**\n * Gets the expression for the 'press' event in the footer annotation actions.\n * @param dataFieldModelPath The data model path of the data field\n * @param entitySetName The entity set name\n * @param headerAction The header action object\n * @returns  The binding expression or function string\n */\nexport const getPressExpressionForFooterAnnotationAction = function (\n\tdataFieldModelPath: DataModelObjectPath<DataFieldForAction>,\n\tentitySetName: string,\n\theaderAction: CustomAction\n): string {\n\tconst dataField = dataFieldModelPath.targetObject as DataFieldForAction;\n\tconst actionContexts = CommonHelper.addSingleQuotes(dataField.Action as string);\n\tconst oParams = {\n\t\tcontexts: \"${$view>/}.getBindingContext()\",\n\t\tentitySetName: CommonHelper.addSingleQuotes(entitySetName),\n\t\tinvocationGrouping: CommonHelper.addSingleQuotes(\n\t\t\tdataField.InvocationGrouping === \"UI.OperationGroupingType/ChangeSet\" ? \"ChangeSet\" : \"Isolated\"\n\t\t),\n\t\tmodel: \"${$source>/}.getModel()\",\n\t\tlabel: CommonHelper.addSingleQuotes(dataField.Label as string, true),\n\t\tisNavigable: headerAction.isNavigable,\n\t\tdefaultValuesExtensionFunction: headerAction.defaultValuesExtensionFunction\n\t\t\t? `'${headerAction.defaultValuesExtensionFunction}'`\n\t\t\t: undefined\n\t};\n\treturn CommonHelper.generateFunction(\".handlers.onCallAction\", \"${$view>/}\", actionContexts, CommonHelper.objectToString(oParams));\n};\n\n/*\n * Get Expression for executing the event expression of the primary action.\n *\n * @function\n * @param {object} [oDataField] Data field object\n * @param {string} [sEntitySetName] Entity set name\n * @param {object} [oHeaderAction] Header action object\n * @param {CompiledBindingToolkitExpression | string} The visibility of sematic positive action\n * @param {CompiledBindingToolkitExpression | string} The enablement of semantic positive action\n * @param {CompiledBindingToolkitExpression | string} The Edit button visibility\n * @param {CompiledBindingToolkitExpression | string} The enablement of Edit button\n * returns {string}  binding expression / function string generated from commanhelper's function generateFunction\n */\nexport const getPressExpressionForPrimaryAction = function (\n\toDataField: DataFieldForAction | undefined,\n\tsEntitySetName: string | undefined,\n\toHeaderAction: BaseAction | null,\n\tpositiveActionVisible: CompiledBindingToolkitExpression | string,\n\tpositiveActionEnabled: CompiledBindingToolkitExpression | string,\n\teditActionVisible: CompiledBindingToolkitExpression | string,\n\teditActionEnabled: CompiledBindingToolkitExpression | string\n): string {\n\tconst sActionContexts = CommonHelper.addSingleQuotes(oDataField?.Action.toString() ?? \"\"),\n\t\tsDataFieldEnumMember =\n\t\t\toDataField &&\n\t\t\toDataField.InvocationGrouping &&\n\t\t\t(oDataField.InvocationGrouping as unknown as Record<string, string>)[\"$EnumMember\"],\n\t\tsInvocationGroup = sDataFieldEnumMember === \"com.sap.vocabularies.UI.v1.OperationGroupingType/ChangeSet\" ? \"ChangeSet\" : \"Isolated\";\n\tconst oParams = {\n\t\tcontexts: \"${$view>/}.getBindingContext()\",\n\t\tentitySetName: sEntitySetName ? CommonHelper.addSingleQuotes(sEntitySetName) : \"\",\n\t\tinvocationGrouping: CommonHelper.addSingleQuotes(sInvocationGroup),\n\t\tmodel: \"${$source>/}.getModel()\",\n\t\tlabel: CommonHelper.addSingleQuotes(oDataField?.Label?.toString() ?? \"\", true),\n\t\tisNavigable: oHeaderAction?.isNavigable,\n\t\tdefaultValuesExtensionFunction: oHeaderAction?.defaultValuesExtensionFunction\n\t\t\t? `'${oHeaderAction.defaultValuesExtensionFunction}'`\n\t\t\t: undefined\n\t};\n\tconst oConditions = {\n\t\tpositiveActionVisible,\n\t\tpositiveActionEnabled,\n\t\teditActionVisible,\n\t\teditActionEnabled\n\t};\n\treturn CommonHelper.generateFunction(\n\t\t\".handlers.onPrimaryAction\",\n\t\t\"$controller\",\n\t\t\"${$view>/}\",\n\t\t\"${$view>/}.getBindingContext()\",\n\t\tsActionContexts,\n\t\tCommonHelper.objectToString(oParams),\n\t\tCommonHelper.objectToString(oConditions)\n\t);\n};\n\n/*\n * Gets the binding of the container HBox for the header facet.\n *\n * @function\n * @param {object} [oControlConfiguration] The control configuration form of the viewData model\n * @param {object} [oHeaderFacet] The object of the header facet\n * returns {*}  The binding expression from function getBindingWithGroupIdFromConfig or undefined.\n */\nexport const getStashableHBoxBinding = function (\n\toControlConfiguration: ControlConfiguration,\n\toHeaderFacet: { Facet: FieldGroupFacet }\n): string | undefined {\n\tif (oHeaderFacet && oHeaderFacet.Facet && oHeaderFacet.Facet.targetAnnotationType === \"DataPoint\") {\n\t\treturn getBindingWithGroupIdFromConfig(oControlConfiguration, oHeaderFacet.Facet.targetAnnotationValue!);\n\t}\n};\n\nexport const getHeaderFormHboxRenderType = function (dataField: DataModelObjectPath<DataFieldAbstractTypes>): string | undefined {\n\tif (dataField?.targetObject?.$Type === UIAnnotationTypes.DataFieldForAnnotation) {\n\t\treturn undefined;\n\t}\n\treturn \"Bare\";\n};\n\n/**\n * The default action group handler that is invoked when adding the menu button handling appropriately.\n * @param oCtx The current context in which the handler is called\n * @param oAction The current action context\n * @param oDataFieldForDefaultAction The current dataField for the default action\n * @param defaultActionContextOrEntitySet The current context for the default action\n * @returns The appropriate expression string\n */\nexport function getDefaultActionHandler(\n\toCtx: Context,\n\toAction: CustomAction,\n\toDataFieldForDefaultAction: MetaModelType<DataFieldDefault>,\n\tdefaultActionContextOrEntitySet: string\n): CompiledBindingToolkitExpression {\n\tif (oAction.defaultAction) {\n\t\tconst defaultAction = oAction.defaultAction as CustomAction;\n\t\ttry {\n\t\t\tswitch (defaultAction.type) {\n\t\t\t\tcase \"ForAction\": {\n\t\t\t\t\treturn getPressExpressionForEdit(\n\t\t\t\t\t\toDataFieldForDefaultAction as MetaModelType<DataFieldForAction>,\n\t\t\t\t\t\tdefaultActionContextOrEntitySet,\n\t\t\t\t\t\toAction.defaultAction as BaseAction\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tcase \"ForNavigation\": {\n\t\t\t\t\tif (defaultAction.command) {\n\t\t\t\t\t\treturn \"cmd:\" + defaultAction.command;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn defaultAction.press;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tdefault: {\n\t\t\t\t\tif (defaultAction.command) {\n\t\t\t\t\t\treturn \"cmd:\" + defaultAction.command;\n\t\t\t\t\t}\n\t\t\t\t\tif (defaultAction.noWrap) {\n\t\t\t\t\t\treturn defaultAction.press;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn CommonHelper.buildActionWrapper(defaultAction, { id: \"forTheObjectPage\" });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (ioEx) {\n\t\t\treturn \"binding for the default action is not working as expected\";\n\t\t}\n\t}\n\treturn undefined;\n}\n\n/**\n * Check if the sub section visualization is part of preview.\n * @param subSection The sub section visualization\n * @returns A Boolean value\n */\nexport function isVisualizationIsPartOfPreview(subSection: DataVisualizationSubSection): boolean {\n\treturn subSection.isPartOfPreview === true || subSection.presentation.visualizations[0].type !== \"Table\";\n}\n\n/**\n * Returns the expression that determines whether the footer of the object page is to be visible or not.\n * @param context The context for the formatter.\n * @param footerActions The list of footer actions.\n * @returns A binding expression\n */\nexport const getFooterVisibilityExpression = function (context: IContext, footerActions: BaseAction[]): CompiledBindingToolkitExpression {\n\tconst metaModel = context.getInterface(1).getModel() as ODataMetaModel;\n\n\tconst _generateBindingsForActions = (actions: BaseAction[]): BindingToolkitExpression<boolean>[] => {\n\t\tif (actions.length) {\n\t\t\treturn actions.map((action) => resolveBindingString(action.visible ?? true, \"boolean\")) as BindingToolkitExpression<boolean>[];\n\t\t}\n\t\treturn [constant(false)];\n\t};\n\n\tconst getActionModelPath = (action: BaseAction): DataModelObjectPath<DataFieldForAction> | undefined => {\n\t\tconst annotationPath = action.annotationPath;\n\t\tif (annotationPath) {\n\t\t\tconst actionContext = metaModel.getContext(annotationPath);\n\t\t\treturn getInvolvedDataModelObjects<DataFieldForAction>(actionContext);\n\t\t}\n\t\treturn undefined;\n\t};\n\n\t// Actions are coming from the converter so only determining actions and not statically hidden are listed\n\tconst determiningActions = footerActions.filter((action) => action.type === ActionType.DataFieldForAction);\n\tconst manifestActionBindings = _generateBindingsForActions(footerActions.filter((action) => isManifestAction(action)));\n\tconst determiningActionBindings = _generateBindingsForActions(determiningActions);\n\n\tconst isNotHiddenDeterminingAction = !!determiningActions.find((action) => {\n\t\tconst actionContextModelPath = getActionModelPath(action);\n\t\treturn !actionContextModelPath?.targetObject?.annotations?.UI?.Hidden;\n\t});\n\n\treturn compileExpression(\n\t\tor(\n\t\t\tisNotHiddenDeterminingAction,\n\t\t\tor(...manifestActionBindings),\n\t\t\tand(or(UI.IsEditable, or(...determiningActionBindings)), not(pathInModel(\"isCreateDialogOpen\", \"internal\")))\n\t\t)\n\t);\n};\n\n/**\n * Get the subsection header level.\n * @param subSection The subsection visualization\n * @param isMoreContent\n * @returns A String value\n */\nexport function getHeaderLevel(subSection: DataVisualizationSubSection, isMoreContent: boolean): string {\n\tif (isMoreContent) {\n\t\tif (!subSection.showSubSectionTitle) {\n\t\t\t// whenever title is merged for sub-section, level should be H4\n\t\t\treturn \"H4\";\n\t\t} else if (subSection.level === 2 && subSection.dataVisualizationTitleVisible === \"true\") {\n\t\t\t// retain old logic\n\t\t\treturn \"H6\";\n\t\t} else {\n\t\t\treturn \"H5\"; // retain old logic\n\t\t}\n\t} else if (!subSection.showSubSectionTitle) {\n\t\t// whenever title is merged for section, level should be H3\n\t\treturn \"H3\";\n\t} else if (subSection.level === 2 && subSection.dataVisualizationTitleVisible === \"true\") {\n\t\t// retain old logic\n\t\treturn \"H5\";\n\t} else {\n\t\treturn \"H4\"; // retain old logic\n\t}\n}\n\n/**\n * Gets the aria-labelledby attribute for the header formelement.\n * @param headerFormData\n * @param formElementIdPrefix\n * @returns The string for the aria-labelledby attribute\n */\nexport const getHeaderFormAriaLabelledBy = function (headerFormData: HeaderFormData, formElementIdPrefix: string): string {\n\tlet titleId = \"\";\n\tif (headerFormData.label) {\n\t\ttitleId = StableIdHelper.generate([headerFormData.id, \"Title\"]);\n\t}\n\tconst labelId = StableIdHelper.generate([formElementIdPrefix, \"Label\"]);\n\treturn titleId ? `${titleId},${labelId}` : labelId;\n};\n\n/**\n * Gets the aria text for form regions on Object Page.\n * @param subSectionTitle The title of the subsection\n * @returns The aria text for the form region\n */\nexport const getFormAriaText = function (subSectionTitle: string | undefined): string | undefined {\n\tconst resourceBundle = Library.getResourceBundleFor(\"sap.fe.core\")!;\n\treturn subSectionTitle !== undefined ? resourceBundle.getText(\"C_FORM_ARIA_TEXT\", [subSectionTitle]) : undefined;\n};\n\ngetFooterVisibilityExpression.requiresIContext = true;\n"],"mappings":"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","ignoreList":[],"file":"ObjectPageTemplating-dbg.js"}