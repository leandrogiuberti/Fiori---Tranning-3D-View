{"version":3,"file":"CollaborationDiscardDialog.js","names":["CollaborationDiscard","view","isSave","this","formatUserStatus","userStatus","UserStatus","CurrentlyEditing","discardResourceModel","getText","ChangesMade","NoChangesMade","NotYetInvited","saveManageDialog","promiseResolve","manageDialog","close","destroy","discardManageDialog","cancelManageDialog","keepDraftManageDialog","actionIsSave","containingView","ResourceModelHelper","getResourceModel","actionButton","getSaveButton","topText","bottomText","getDiscardButton","_exports","load","async","GridTableControl","undefined","Lib","name","default","__ui5_require_async","GridTableColumnControl","_proto","prototype","getManageDialog","_jsx","Dialog","title","state","ValueState","Warning","contentWidth","children","buttons","_jsxs","_Fragment","getKeepDraftButton","getCancelButton","content","VBox","class","ObjectIdentifier","text","getManageDialogUserTable","Text","addDependent","bindElement","model","path","getManageDialogUserTableColumns","width","template","HBox","alignItems","justifyContent","Avatar","displaySize","backgroundColor","initials","label","ObjectStatus","formatter","formatUserStatusColor","viewInternalModelContext","getBindingContext","editingUsers","getProperty","tableRowCount","CommonHelper","isDesktop","length","rows","visibleRowCount","visibleRowCountMode","selectionMode","columns","Success","Information","readInvitedUsers","getModel","parameters","$select","invitedUserList","bindList","me","CollaborationUtils","getMe","CommonUtils","getAppComponent","internalModelContext","filter","Filter","operator","value1","id","contexts","requestContexts","activeUsers","setProperty","forEach","singleContext","userData","getObject","user","createUser","color","getUserColor","UserID","push","sortedUsers","sortUser","readCurrentUsers","currentUsers","currentUsersWithoutMe","map","status","sort","userA","userB","isActive","find","u","userDescription","UserDescription","formatInitials","UserEditingState","InProgress","Button","press","type","getUserAction","open","Promise","resolve"],"sources":["./CollaborationDiscardDialog.tsx"],"sourcesContent":["import type { FEView } from \"sap/fe/core/BaseController\";\nimport CommonUtils from \"sap/fe/core/CommonUtils\";\nimport type ResourceModel from \"sap/fe/core/ResourceModel\";\nimport type { BackendUser, User } from \"sap/fe/core/controllerextensions/collaboration/CollaborationCommon\";\nimport { CollaborationUtils, UserEditingState, UserStatus } from \"sap/fe/core/controllerextensions/collaboration/CollaborationCommon\";\nimport type { InternalModelContext } from \"sap/fe/core/helpers/ModelHelper\";\nimport ResourceModelHelper from \"sap/fe/core/helpers/ResourceModelHelper\";\nimport CommonHelper from \"sap/fe/macros/CommonHelper\";\nimport Avatar from \"sap/m/Avatar\";\nimport Button from \"sap/m/Button\";\nimport Dialog from \"sap/m/Dialog\";\nimport HBox from \"sap/m/HBox\";\nimport ObjectIdentifier from \"sap/m/ObjectIdentifier\";\nimport ObjectStatus from \"sap/m/ObjectStatus\";\nimport Text from \"sap/m/Text\";\nimport VBox from \"sap/m/VBox\";\nimport Lib from \"sap/ui/core/Lib\";\nimport { ValueState } from \"sap/ui/core/library\";\nimport type Context from \"sap/ui/model/Context\";\nimport Filter from \"sap/ui/model/Filter\";\nimport type GridTableColumn from \"sap/ui/table/Column\";\nimport type GridTable from \"sap/ui/table/Table\";\n\nexport default class CollaborationDiscard {\n\tpublic id?: string;\n\n\tprivate promiseResolve!: Function;\n\n\tpublic discardResourceModel!: ResourceModel;\n\n\tpublic containingView!: FEView;\n\n\tpublic manageDialog!: Dialog;\n\n\tprivate actionButton!: Button;\n\n\tprivate topText!: string;\n\n\tprivate bottomText!: string;\n\n\tprivate actionIsSave!: boolean;\n\n\tprivate static GridTableControl: typeof GridTable;\n\n\tprivate static GridTableColumnControl: typeof GridTableColumn;\n\n\tconstructor(view: FEView, isSave: boolean) {\n\t\tthis.actionIsSave = isSave;\n\t\tthis.containingView = view;\n\t\tthis.discardResourceModel = ResourceModelHelper.getResourceModel(view);\n\t\tif (isSave) {\n\t\t\tthis.actionButton = this.getSaveButton();\n\t\t\tthis.topText = this.discardResourceModel.getText(\"C_COLLABORATIONDRAFT_DISCARD_EDITING_DRAFT\");\n\t\t\tthis.bottomText = this.discardResourceModel.getText(\"C_COLLABORATIONDRAFT_DISCARD_SAVE_WARNING\");\n\t\t} else {\n\t\t\tthis.actionButton = this.getDiscardButton();\n\t\t\tthis.topText = this.discardResourceModel.getText(\"C_COLLABORATIONDRAFT_DISCARD_CHANGES_DRAFT\");\n\t\t\tthis.bottomText = this.discardResourceModel.getText(\"C_COLLABORATIONDRAFT_DISCARD_DISCARD_WARNING\");\n\t\t}\n\t}\n\n\tstatic async load(): Promise<typeof CollaborationDiscard> {\n\t\tif (CollaborationDiscard.GridTableControl === undefined) {\n\t\t\tawait Lib.load({ name: \"sap.ui.table\" });\n\t\t\tconst { default: GridTableControl } = await import(\"sap/ui/table/Table\");\n\t\t\tCollaborationDiscard.GridTableControl = GridTableControl;\n\t\t\tconst { default: GridTableColumnControl } = await import(\"sap/ui/table/Column\");\n\t\t\tCollaborationDiscard.GridTableColumnControl = GridTableColumnControl;\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns the manage dialog used to invite further users.\n\t * @returns The control tree\n\t */\n\tgetManageDialog(): Dialog {\n\t\tthis.manageDialog = (\n\t\t\t<Dialog\n\t\t\t\ttitle={this.discardResourceModel.getText(\"C_COLLABORATIONDRAFT_DISCARD_TITLE\")}\n\t\t\t\tstate={ValueState.Warning}\n\t\t\t\tcontentWidth=\"35em\"\n\t\t\t>\n\t\t\t\t{{\n\t\t\t\t\tbuttons: (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\tkeepDraftButton = {this.getKeepDraftButton()}\n\t\t\t\t\t\t\tconfirmActionButton = {this.actionButton}\n\t\t\t\t\t\t\tcancelButton = {this.getCancelButton()}\n\t\t\t\t\t\t</>\n\t\t\t\t\t),\n\t\t\t\t\tcontent: (\n\t\t\t\t\t\t<VBox class=\"sapUiSmallMargin\">\n\t\t\t\t\t\t\t<ObjectIdentifier class=\"sapUiSmallMarginBottom\" text={this.topText}></ObjectIdentifier>\n\n\t\t\t\t\t\t\t{this.getManageDialogUserTable()}\n\n\t\t\t\t\t\t\t<Text class=\"sapUiSmallMarginTop\" text={this.bottomText}></Text>\n\t\t\t\t\t\t\t<Text\n\t\t\t\t\t\t\t\tclass=\"sapUiSmallMarginTop\"\n\t\t\t\t\t\t\t\ttext={this.discardResourceModel.getText(\"C_COLLABORATIONDRAFT_DISCARD_QUESTION\")}\n\t\t\t\t\t\t\t></Text>\n\t\t\t\t\t\t</VBox>\n\t\t\t\t\t)\n\t\t\t\t}}\n\t\t\t</Dialog>\n\t\t);\n\t\tthis.containingView.addDependent(this.manageDialog);\n\t\tthis.manageDialog.bindElement({\n\t\t\tmodel: \"internal\",\n\t\t\tpath: \"collaboration\"\n\t\t});\n\t\treturn this.manageDialog;\n\t}\n\n\t/**\n\t * Returns the table columns of invited users.\n\t * @returns The control tree\n\t */\n\tgetManageDialogUserTableColumns(): GridTableColumn[] {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<CollaborationDiscard.GridTableColumnControl width=\"3em\">\n\t\t\t\t\t{{\n\t\t\t\t\t\ttemplate: (\n\t\t\t\t\t\t\t<HBox alignItems=\"Center\" justifyContent=\"SpaceBetween\" width=\"100%\">\n\t\t\t\t\t\t\t\t<Avatar displaySize=\"XS\" backgroundColor=\"{internal>color}\" initials=\"{internal>initials}\" />\n\t\t\t\t\t\t\t</HBox>\n\t\t\t\t\t\t)\n\t\t\t\t\t}}\n\t\t\t\t</CollaborationDiscard.GridTableColumnControl>\n\t\t\t\t<CollaborationDiscard.GridTableColumnControl width=\"10rem\">\n\t\t\t\t\t{{\n\t\t\t\t\t\tlabel: <Text text={this.discardResourceModel.getText(\"C_COLLABORATIONDRAFT_INVITATION_TABLE_USER_COLUMN\")} />,\n\t\t\t\t\t\ttemplate: <Text text=\"{internal>name}\" />\n\t\t\t\t\t}}\n\t\t\t\t</CollaborationDiscard.GridTableColumnControl>\n\t\t\t\t<CollaborationDiscard.GridTableColumnControl width=\"14em\">\n\t\t\t\t\t{{\n\t\t\t\t\t\tlabel: (\n\t\t\t\t\t\t\t<Text text={this.discardResourceModel.getText(\"C_COLLABORATIONDRAFT_INVITATION_TABLE_USER_STATUS_COLUMN\")} />\n\t\t\t\t\t\t),\n\t\t\t\t\t\ttemplate: (\n\t\t\t\t\t\t\t<ObjectStatus\n\t\t\t\t\t\t\t\tstate={{ path: \"internal>status\", formatter: this.formatUserStatusColor }}\n\t\t\t\t\t\t\t\ttext={{ path: \"internal>status\", formatter: this.formatUserStatus }}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)\n\t\t\t\t\t}}\n\t\t\t\t</CollaborationDiscard.GridTableColumnControl>\n\t\t\t</>\n\t\t);\n\t}\n\n\t/**\n\t * Returns the table with the list of invited users.\n\t * @returns The control tree\n\t */\n\tgetManageDialogUserTable(): GridTable {\n\t\tconst viewInternalModelContext = this.containingView.getBindingContext(\"internal\") as InternalModelContext;\n\t\tconst editingUsers = viewInternalModelContext.getProperty(\"collaboration/currentlyEditingUsers\");\n\t\tlet tableRowCount: number;\n\t\tif (CommonHelper.isDesktop()) {\n\t\t\ttableRowCount = editingUsers.length < 5 ? editingUsers.length : 5;\n\t\t} else {\n\t\t\ttableRowCount = editingUsers.length < 3 ? editingUsers.length : 3;\n\t\t}\n\n\t\treturn (\n\t\t\t<CollaborationDiscard.GridTableControl\n\t\t\t\twidth=\"100%\"\n\t\t\t\trows={{ path: \"internal>currentlyEditingUsers\" }}\n\t\t\t\tvisibleRowCount={tableRowCount}\n\t\t\t\tvisibleRowCountMode=\"Fixed\"\n\t\t\t\tselectionMode=\"None\"\n\t\t\t>\n\t\t\t\t{{\n\t\t\t\t\tcolumns: this.getManageDialogUserTableColumns()\n\t\t\t\t}}\n\t\t\t</CollaborationDiscard.GridTableControl>\n\t\t);\n\t}\n\n\t/**\n\t * Formatter to set the user color depending on the editing status.\n\t * @param userStatus The editing status of the user\n\t * @returns The user status color\n\t */\n\tformatUserStatusColor(userStatus: UserStatus): ValueState {\n\t\tswitch (userStatus) {\n\t\t\tcase UserStatus.CurrentlyEditing:\n\t\t\t\treturn ValueState.Success;\n\t\t\tcase UserStatus.ChangesMade:\n\t\t\t\treturn ValueState.Warning;\n\t\t\tcase UserStatus.NoChangesMade:\n\t\t\tcase UserStatus.NotYetInvited:\n\t\t\tdefault:\n\t\t\t\treturn ValueState.Information;\n\t\t}\n\t}\n\n\t/**\n\t * Formatter to set the user status depending on the editing status.\n\t * @param userStatus The editing status of the user\n\t * @returns The user status\n\t */\n\tformatUserStatus = (userStatus: UserStatus): string => {\n\t\tswitch (userStatus) {\n\t\t\tcase UserStatus.CurrentlyEditing:\n\t\t\t\treturn this.discardResourceModel.getText(\"C_COLLABORATIONDRAFT_USER_CURRENTLY_EDITING\");\n\t\t\tcase UserStatus.ChangesMade:\n\t\t\t\treturn this.discardResourceModel.getText(\"C_COLLABORATIONDRAFT_USER_CHANGES_MADE\");\n\t\t\tcase UserStatus.NoChangesMade:\n\t\t\t\treturn this.discardResourceModel.getText(\"C_COLLABORATIONDRAFT_USER_NO_CHANGES_MADE\");\n\t\t\tcase UserStatus.NotYetInvited:\n\t\t\tdefault:\n\t\t\t\treturn this.discardResourceModel.getText(\"C_COLLABORATIONDRAFT_USER_NOT_YET_INVITED\");\n\t\t}\n\t};\n\n\t/**\n\t * Reads the currently invited user and store it in the internal model.\n\t * @returns Promise that is resolved once the users are read.\n\t */\n\tasync readInvitedUsers(): Promise<void> {\n\t\tconst view = this.containingView;\n\t\tconst model = view.getModel();\n\t\tconst parameters = {\n\t\t\t$select: \"UserID,UserDescription,UserEditingState\"\n\t\t};\n\t\tconst invitedUserList = model.bindList(\n\t\t\t\"DraftAdministrativeData/DraftAdministrativeUser\",\n\t\t\tview.getBindingContext() as Context,\n\t\t\t[],\n\t\t\t[],\n\t\t\tparameters\n\t\t);\n\t\tconst me = CollaborationUtils.getMe(CommonUtils.getAppComponent(view));\n\t\tconst internalModelContext = view.getBindingContext(\"internal\") as InternalModelContext;\n\t\tif (me) {\n\t\t\tinvitedUserList.filter(\n\t\t\t\tnew Filter({\n\t\t\t\t\tpath: \"UserID\",\n\t\t\t\t\toperator: \"NE\",\n\t\t\t\t\tvalue1: me.id\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\n\t\t// for now we set a limit to 100. there shouldn't be more than a few\n\t\tconst contexts = await invitedUserList.requestContexts(0, 100);\n\n\t\tconst editingUsers: User[] = [];\n\t\tconst activeUsers = view.getModel(\"internal\").getProperty(\"/collaboration/activeUsers\") || [];\n\t\tif (!contexts.length || contexts.length === 0) {\n\t\t\tinternalModelContext.setProperty(\"collaboration/currentlyEditingUsers\", []);\n\t\t\treturn;\n\t\t}\n\t\tcontexts.forEach((singleContext: Context) => {\n\t\t\tconst userData = singleContext.getObject() as BackendUser;\n\t\t\tconst user = this.createUser(userData, activeUsers);\n\t\t\tif (user) {\n\t\t\t\tuser.color = CollaborationUtils.getUserColor(userData.UserID, activeUsers, editingUsers);\n\t\t\t\teditingUsers.push(user);\n\t\t\t}\n\t\t});\n\n\t\tconst sortedUsers = this.sortUser(editingUsers);\n\n\t\tinternalModelContext.setProperty(\"collaboration/currentlyEditingUsers\", sortedUsers);\n\t}\n\n\t/**\n\t * Reads the list of users currently editing the draft (except me) and stores it in the internal model.\n\t */\n\treadCurrentUsers(): void {\n\t\tconst view = this.containingView;\n\t\tconst currentUsers: User[] = view.getModel(\"internal\").getProperty(\"/collaboration/activeUsers\") || [];\n\t\tconst currentUsersWithoutMe = currentUsers\n\t\t\t.filter((user: User) => user.me !== true)\n\t\t\t.map((user: User) => {\n\t\t\t\treturn { ...user, status: UserStatus.CurrentlyEditing };\n\t\t\t});\n\t\tconst internalModelContext = view.getBindingContext(\"internal\") as InternalModelContext;\n\t\tinternalModelContext.setProperty(\"collaboration/currentlyEditingUsers\", currentUsersWithoutMe);\n\t}\n\n\t/**\n\t * This sorts the user according the Editing Status.\n\t * CurrentlyEditing -> ChangesMade (Status 3 -> Status 2).\n\t * @param editingUsers The array of Users to sort\n\t * @returns The sorted array of Users\n\t */\n\tsortUser(editingUsers: User[]): User[] {\n\t\tlet sortedUsers = editingUsers;\n\t\tif (editingUsers.length > 1) {\n\t\t\t// We define our Users just above, Status is always defined\n\t\t\tsortedUsers = editingUsers.sort((userA: User, userB: User): number => {\n\t\t\t\tif (userA.status! < userB.status!) {\n\t\t\t\t\treturn 1;\n\t\t\t\t} else if (userA.status! > userB.status!) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t});\n\t\t}\n\t\treturn sortedUsers;\n\t}\n\n\tcreateUser(userData: BackendUser, activeUsers: User[]): User | undefined {\n\t\tlet userStatus: UserStatus;\n\t\tconst isActive = activeUsers.find((u: User) => u.id === userData.UserID);\n\t\tconst userDescription = userData.UserDescription ?? userData.UserID;\n\t\tconst initials = CollaborationUtils.formatInitials(userDescription);\n\t\tif (isActive) {\n\t\t\tuserStatus = UserStatus.CurrentlyEditing;\n\t\t} else if (userData.UserEditingState === UserEditingState.InProgress) {\n\t\t\tuserStatus = UserStatus.ChangesMade;\n\t\t} else {\n\t\t\t// This case is for user that are just invited, but didn't make any changes\n\t\t\treturn undefined;\n\t\t}\n\t\tconst user: User = {\n\t\t\tid: userData.UserID,\n\t\t\tname: userDescription,\n\t\t\tstatus: userStatus,\n\t\t\tinitials: initials\n\t\t};\n\t\treturn user;\n\t}\n\n\t/**\n\t * Returns the Save button.\n\t * @returns A button\n\t */\n\tprivate getSaveButton(): Button {\n\t\treturn <Button text={this.discardResourceModel.getText(\"C_COLLABORATIONDRAFT_DISCARD_SAVE\")} press={this.saveManageDialog} />;\n\t}\n\n\t/**\n\t * Event handler for the Save action of the manage dialog.\n\t *\n\t */\n\tsaveManageDialog = (): void => {\n\t\tthis.promiseResolve(\"save\");\n\t\tthis.manageDialog.close();\n\t\tthis.manageDialog.destroy();\n\t};\n\n\t/**\n\t * Returns the Discard button.\n\t * @returns A button\n\t */\n\tprivate getDiscardButton(): Button {\n\t\treturn <Button text={this.discardResourceModel.getText(\"C_COLLABORATIONDRAFT_DISCARD_DISCARD\")} press={this.discardManageDialog} />;\n\t}\n\n\t/**\n\t * Event handler for the Discard action of the manage dialog.\n\t *\n\t */\n\tprivate discardManageDialog = (): void => {\n\t\tthis.promiseResolve(\"discardConfirmed\");\n\t\tthis.manageDialog.close();\n\t\tthis.manageDialog.destroy();\n\t};\n\n\t/**\n\t * Returns the Cancel button.\n\t * @returns A button\n\t */\n\tprivate getCancelButton(): Button {\n\t\treturn <Button text={this.discardResourceModel.getText(\"C_COLLABORATIONDRAFT_DISCARD_CANCEL\")} press={this.cancelManageDialog} />;\n\t}\n\n\t/**\n\t * Event handler for the Cancel action of the manage dialog.\n\t *\n\t */\n\tprivate cancelManageDialog = (): void => {\n\t\tthis.promiseResolve(\"cancel\");\n\t\tthis.manageDialog.close();\n\t\tthis.manageDialog.destroy();\n\t};\n\n\t/**\n\t * Returns the Save button.\n\t * @returns A button\n\t */\n\tprivate getKeepDraftButton(): Button {\n\t\treturn (\n\t\t\t<Button\n\t\t\t\ttext={this.discardResourceModel.getText(\"C_COLLABORATIONDRAFT_DISCARD_KEEP_DRAFT\")}\n\t\t\t\tpress={this.keepDraftManageDialog}\n\t\t\t\ttype=\"Emphasized\"\n\t\t\t/>\n\t\t);\n\t}\n\n\t/**\n\t * Event handler for the Keep Draft action of the manage dialog.\n\t *\n\t */\n\tprivate keepDraftManageDialog = (): void => {\n\t\tthis.promiseResolve(\"keepDraft\");\n\t\tthis.manageDialog.close();\n\t\tthis.manageDialog.destroy();\n\t};\n\n\t/**\n\t * Reads the users, and opens the dialog to get the user input.\n\t * @returns A string of the action selected by the user\n\t */\n\tasync getUserAction(): Promise<string> {\n\t\tif (this.actionIsSave) {\n\t\t\t// In case of a Save, we only show the list of users which are currenly editing the draft\n\t\t\tthis.readCurrentUsers();\n\t\t} else {\n\t\t\tawait this.readInvitedUsers();\n\t\t}\n\n\t\treturn this.open();\n\t}\n\n\t/**\n\t * Opens the discard draft from Discard/Cancel action.\n\t * @returns A string of the action selected by the user\n\t */\n\tpublic async open(): Promise<string> {\n\t\tawait CollaborationDiscard.load();\n\t\tconst internalModelContext = this.containingView.getBindingContext(\"internal\") as InternalModelContext;\n\t\tconst editingUsers = internalModelContext.getProperty(\"collaboration/currentlyEditingUsers\");\n\t\tif (editingUsers.length === 0) {\n\t\t\treturn this.actionIsSave ? \"save\" : \"discard\";\n\t\t}\n\t\t// We create the dialog after reading the users\n\t\tthis.manageDialog = this.getManageDialog();\n\t\t// We set up the binding context of the Dialog\n\t\t(this.manageDialog.getBindingContext(\"internal\") as InternalModelContext).setProperty(\"currentlyEditingUsers\", editingUsers);\n\t\tthis.manageDialog.open();\n\n\t\treturn new Promise((resolve) => {\n\t\t\tthis.promiseResolve = resolve;\n\t\t});\n\t}\n}\n"],"mappings":"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","ignoreList":[]}