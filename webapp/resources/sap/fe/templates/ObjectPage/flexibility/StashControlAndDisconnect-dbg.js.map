{"version":3,"names":["StashControlAndDisconnect","_exports","applyChange","change","control","propertyBag","StashControl","LayerUtils","isDeveloperLayer","getLayer","modifier","setProperty","revertChange","completeChangeContent","getCondenserInfo","getChangeVisualizationInfo","appComponent"],"sourceRoot":".","sources":["StashControlAndDisconnect.ts"],"sourcesContent":["import type AppComponent from \"sap/fe/core/AppComponent\";\nimport type Control from \"sap/ui/core/Control\";\nimport type BaseTreeModifier from \"sap/ui/core/util/reflection/BaseTreeModifier\";\nimport LayerUtils from \"sap/ui/fl/LayerUtils\";\nimport StashControl from \"sap/ui/fl/changeHandler/StashControl\";\n\ntype FlexChange = {\n\tgetLayer: () => string;\n};\nexport default class StashControlAndDisconnect {\n\tstatic async applyChange(change: FlexChange, control: Control, propertyBag: { modifier: typeof BaseTreeModifier }): Promise<void> {\n\t\tawait StashControl.applyChange(change, control, propertyBag);\n\t\tif (!LayerUtils.isDeveloperLayer(change.getLayer())) {\n\t\t\t// If we're at the key user layer we should force the disconnect as the stash is just a hide\n\t\t\tpropertyBag.modifier.setProperty(control, \"_disconnected\", true);\n\t\t}\n\t}\n\n\tstatic async revertChange(change: FlexChange, control: Control, propertyBag: { modifier: typeof BaseTreeModifier }): Promise<void> {\n\t\tawait StashControl.revertChange(change, control, propertyBag);\n\t\tif (!LayerUtils.isDeveloperLayer(change.getLayer())) {\n\t\t\t// If we're at the key user layer we should force the disconnect as the stash is just a hide\n\t\t\tpropertyBag.modifier.setProperty(control, \"_disconnected\", false);\n\t\t}\n\t}\n\n\tstatic completeChangeContent(): void {}\n\n\tstatic getCondenserInfo(change: FlexChange): object {\n\t\treturn StashControl.getCondenserInfo(change);\n\t}\n\n\tstatic getChangeVisualizationInfo(change: FlexChange, appComponent: AppComponent): object {\n\t\treturn StashControl.getChangeVisualizationInfo(change, appComponent);\n\t}\n}\n"],"mappings":";;;;;;;;MASqBA,yBAAyB;IAAA,SAAAA,0BAAA;IAAAC,QAAA,GAAAD,yBAAA;IAAAA,yBAAA,CAChCE,WAAW,GAAxB,eAAaA,WAAWA,CAACC,MAAkB,EAAEC,OAAgB,EAAEC,WAAkD,EAAiB;MACjI,MAAMC,YAAY,CAACJ,WAAW,CAACC,MAAM,EAAEC,OAAO,EAAEC,WAAW,CAAC;MAC5D,IAAI,CAACE,UAAU,CAACC,gBAAgB,CAACL,MAAM,CAACM,QAAQ,CAAC,CAAC,CAAC,EAAE;QACpD;QACAJ,WAAW,CAACK,QAAQ,CAACC,WAAW,CAACP,OAAO,EAAE,eAAe,EAAE,IAAI,CAAC;MACjE;IACD,CAAC;IAAAJ,yBAAA,CAEYY,YAAY,GAAzB,eAAaA,YAAYA,CAACT,MAAkB,EAAEC,OAAgB,EAAEC,WAAkD,EAAiB;MAClI,MAAMC,YAAY,CAACM,YAAY,CAACT,MAAM,EAAEC,OAAO,EAAEC,WAAW,CAAC;MAC7D,IAAI,CAACE,UAAU,CAACC,gBAAgB,CAACL,MAAM,CAACM,QAAQ,CAAC,CAAC,CAAC,EAAE;QACpD;QACAJ,WAAW,CAACK,QAAQ,CAACC,WAAW,CAACP,OAAO,EAAE,eAAe,EAAE,KAAK,CAAC;MAClE;IACD,CAAC;IAAAJ,yBAAA,CAEMa,qBAAqB,GAA5B,SAAOA,qBAAqBA,CAAA,EAAS,CAAC,CAAC;IAAAb,yBAAA,CAEhCc,gBAAgB,GAAvB,SAAOA,gBAAgBA,CAACX,MAAkB,EAAU;MACnD,OAAOG,YAAY,CAACQ,gBAAgB,CAACX,MAAM,CAAC;IAC7C,CAAC;IAAAH,yBAAA,CAEMe,0BAA0B,GAAjC,SAAOA,0BAA0BA,CAACZ,MAAkB,EAAEa,YAA0B,EAAU;MACzF,OAAOV,YAAY,CAACS,0BAA0B,CAACZ,MAAM,EAAEa,YAAY,CAAC;IACrE,CAAC;IAAA,OAAAhB,yBAAA;EAAA;EAAAC,QAAA,GAAAD,yBAAA;EAAA,OAAAC,QAAA;AAAA","ignoreList":[],"file":"StashControlAndDisconnect-dbg.js"}