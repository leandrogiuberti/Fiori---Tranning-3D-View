{"version":3,"file":"ObjectPageController.controller.js","names":["ProgrammingModel","FELibrary","ObjectPageController","_dec","defineUI5Class","_dec2","usingExtension","Placeholder","_dec3","Share","override","ShareOverrides","_dec4","InternalRouting","InternalRoutingOverride","_dec5","Paginator","PaginatorOverride","_dec6","MessageHandler","MessageHandlerOverride","_dec7","IntentBasedNavigation","IntentBasedNavigationOverride","_dec8","CollaborationManager","CollaborationManagerOverride","_dec9","InternalIntentBasedNavigation","getNavigationMode","bIsStickyEditMode","this","getView","getController","getStickyEditMode","undefined","_dec10","ViewState","ViewStateOverrides","_dec11","PageReady","isContextExpected","_dec12","publicExtension","_dec13","finalExtension","_dec14","_dec15","extensible","OverrideExecution","After","_class","_class2","_PageController","_this","_len","arguments","length","args","Array","_key","call","_initializerDefineProperty","_descriptor","_descriptor2","_descriptor3","_descriptor4","_descriptor5","_descriptor6","_descriptor7","_descriptor8","_descriptor9","_descriptor10","clearTitleHierarchyCacheSetUp","mergePatchDraft","handlers","onPrimaryAction","oController","oView","oContext","sActionName","mParameters","mConditions","iViewLevel","getViewData","viewLevel","positiveActionVisible","positiveActionEnabled","onCallAction","editActionVisible","editActionEnabled","_editDocument","CommonUtils","getIsEditable","_saveDocument","_applyDocument","onTableContextChange","event","tableAPI","getSource","table","content","currentActionPromise","editFlow","getCurrentActionPromise","tableContexts","_getTableBinding","getCurrentContexts","actionResponse","controlId","getId","actionData","oData","keys","newItem","findIndex","tableContext","tableData","getObject","every","key","dialog","InstanceManager","getOpenDialogs","find","data","attachEventOnce","focusRow","deleteCurrentActionPromise","e","Log","error","messageButton","fireModelContextChange","syncTask","invokeAction","then","_showMessagePopover","bind","catch","onDataPointTitlePressed","oSource","oManifestOutbound","sControlConfig","sCollectionPath","JSON","parse","oTargetInfo","oDataPointOrChartBindingContext","getBindingContext","sMetaPath","getModel","getMetaModel","getMetaPath","getPath","aSemanticObjectMapping","getSemanticObjectMapping","aNavigationData","_getChartContextData","additionalNavigationParameters","map","oNavigationData","metaPath","parameters","oParams","_intentBasedNavigation","getOutboundParams","Object","customData","getCustomData","getKey","_getImplicitSemanticObjectMappingForDataPoints","getValue","semanticObject","action","navigate","navigationContexts","semanticObjectMapping","onChevronPressNavigateOutBound","sOutboundTarget","sCreatePath","onNavigateChange","oEvent","getExtensionAPI","updateAppState","bSectionNavigated","oInternalModelContext","sectionLayout","getProperty","oSubSection","getParameter","_updateFocusInEditMode","onVariantSelected","onVariantSaved","setTimeout","navigateToSubSection","vDetailConfig","oDetailConfig","oObjectPage","byId","oSection","sectionId","subSectionId","getSubSections","getParent","getVisible","sTitle","getResourceModel","getText","entitySet","MessageBox","setSelectedSection","fireNavigate","section","subSection","closeCollaborationStrip","setProperty","closeOPMessageStrip","view","bIsInEditMode","internalModel","messagestripInternalModelContext","bindContext","_getMessageStripBindingContextPath","getBoundContext","contextBoundMessages","Messaging","getMessageModel","getData","filter","message","getTargets","getPersistent","removeMessages","hideMessage","_inheritsLoose","_proto","prototype","sId","mCustomSectionExtensionAPIs","ExtensionAPI","extensionAPI","onInit","_getObjectPageLayoutControl","page","visibility","items","_getBatchGroupsForView","getEnableLazyLoading","attachEvent","_handleSubSectionEnteredViewPort","messageBinding","bindList","attachChange","_fnShowOPMessage","onExit","destroy","oMessagePopover","isOpen","close","isKeepAlive","setKeepAlive","collaborativeDraft","disconnect","detachChange","getAppComponent","isSuspended","messages","_showMessages","oTable","getRowBinding","checkSectionsForNonResponsiveTable","subSections","changeClassForTables","lastVisibleSubSection","blocks","getBlocks","getMoreBlocks","searchTableInBlock","tableType","isA","getType","getTableDefinition","control","rowCountMode","addStyleClass","detachEvent","subSectionIndex","block","onBeforeRendering","PageController","apply","retrieveTextFromValueList","CommonHelper","setMetaModel","onAfterRendering","getUseIconTabBar","sections","getSections","_getAllSubSections","_onBeforeBinding","aTables","_findTables","oInternalModel","aBatchGroups","oFastCreationRow","push","reason","NavigationReason","EditFlowAction","_closeSideContent","opContext","hasPendingChanges","some","getBinding","resetChanges","item","getCreationRow","setBindingContext","fnScrollToPresentSection","isFirstRendering","bPersistOPScroll","fnOPRenderingLayout","editableHeaderContent","removeEventDelegate","addEventDelegate","_initializePagination","listBinding","_disableBlocksBindings","placeholder","isPlaceholderEnabled","showPlaceholder","oNavContainer","oContainer","enableAnimation","getFirstEditableInput","domEditableElement","_getFirstEditableInput","UI5Element","closestTo","getFirstClickableElement","objectPage","firstClickableElement","actions","getHeaderTitle","getActions","getContent","getEnabled","aSections","bUseIconTabBar","iSkip","bEditableHeader","iSection","aSubSections","iSubSection","isVisibilityDynamic","forEach","subBlock","_getFirstEmptyMandatoryFieldFromSubSection","aBlocks","blockControl","aFormContainers","getFormContainers","formContainer","aFormElements","getFormElements","formElement","aFields","getFields","emptyField","getFirstEmptyRequiredField","fields","getRequired","isEmpty","getMultiValueField","getItems","value","debug","oMandatoryField","oFieldToFocus","getContentEdit","focusInfo","getFocusInfo","targetInfo","silent","focus","_onBackNavigationInDraft","messageHandler","removeTransitionMessages","navBack","currentURL","document","URL","history","back","_routing","navigateBackFromContext","getRouterProxy","checkIfBackHasSameContext","getShellServices","setBackNavigation","warning","hiddenDraftEnabled","getEnvironmentCapabilities","getCapabilities","HiddenDraft","enabled","draft","processDataLossOrDraftDiscardConfirmation","Function","NavigationType","BackNavigation","_onAfterBinding","inputBindingContext","_sideEffects","clearFieldGroupsValidity","bindingContext","aIBNActions","getIBNActions","oTableRowBinding","ModelHelper","isStickySessionSupported","removeCachesAndMessages","oActionOperationAvailableMap","tableDefinition","operationAvailableMap","ActionRuntime","setActionEnablement","clearSelection","oObjectPageTitle","aIBNHeaderActions","concat","updateDataFieldForIBNButtonsVisibility","oModel","oFinalUIState","Promise","resolve","handleTableModifications","oBinding","fnHandleTablePatchEvents","TableHelper","enableFastCreationRow","getContext","fnHandleChange","computeModelsForEditMode","_updateRelatedApps","currentBinding","handlePatchSent","TableUtils","whenBound","oError","_triggerVisibleSubSectionsEvents","updateEditButtonVisibilityAndEnablement","recommendations","clearRecommendations","_updateAvailableCards","displayCollaborationMessage","redirectedToNonDraft","_setOPMessageStripInternalContext","applyAppState","getAppStateHandler","pageReady","waitFor","async","cards","collaborationManager","collectAvailableCards","cardObject","updateCards","parentAppId","getCollaborationManagerService","addCardsToCollaborationManager","shareAvailableCards","internalModelContext","findElements","elem","messageStrip","entityName","resourceBundle","Library","getResourceBundleFor","collaborationMessage","Message","type","MessageType","Information","target","addMessages","onPageReady","setFocus","isInDisplayMode","oFirstClickableElement","oSelectedSection","getElementById","getSelectedSection","ctxt","oBindingContext","bIsStickyMode","oAppComponent","isEditable","fetchAndApplyRecommendations","context","forceFocus","_checkDataPointTitleForExternalNavigation","Device","support","touch","saveButton","autoQueueUnlock","autoQueueLock","isLocked","unlock","detachBrowserEvent","attachBrowserEvent","lock","_getPageTitleInformation","oObjectPageSubtitle","oCustomData","oObjectPageDescription","extractPaths","bindingInfo","from","Set","parts","part","model","path","Boolean","subtitlePaths","getBindingInfo","descriptionPaths","pathsToResolve","appComponent","rootViewController","getRootViewController","fnClearCacheTitle","clearTitleHierarchyCache","oObjectPageContext","build","title","subtitle","intent","icon","description","all","requestObject","p","_executeTabShortCut","oExecution","iSectionIndexMax","sCommand","getCommand","newSection","iSelectedSectionIndex","indexOfSection","_getFooterVisibility","sViewId","isHiddenDraftEnabled","oMessage","isErrorMessage","validation","messageValidation","includes","err","oRet","isEditMode","currentPageView","isFclEnabled","getRightmostView","getRootContainer","getCurrentPage","oMessageButton","oItemBinding","getLength","setVisible","openBy","BusyLocker","editDocument","finally","propertyPath","LocalProperty","$PropertyPath","SemanticObjectProperty","_validateDocument","getActiveElement","byPassSideEffects","isTransient","created","holdMessagesForControl","ret","executeGlobalValidation","showMessages","sideEffectsService","getSideEffectsService","entityType","getEntityTypeFromContext","globalSideEffects","getGlobalODataEntitySideEffects","requestSideEffects","sideEffects","draftRootContext","createRootContext","Draft","executeDraftValidation","isConnected","skipBindingToView","awaitCreateDocuments","executeSideEffectsOnError","isCollaborationEnabled","dialogAction","CollaborationDiscard","getUserAction","creationRow","tableBinding","contextKeys","startsWith","createDocument","creationMode","createAtEnd","skipSideEffects","isSkipBindingToView","isStandardSave","bindings","saveDocument","bExecuteSideEffectsOnError","RecommendationDialogDecision","Continue","_cancelDocument","cancelButton","lastFocusedControlId","shouldSkipDiscardPopover","isDocumentModified","UiModelConstants","DocumentModified","afterCancel","promiseResult","cancelDocument","skipDiscardPopover","applyDocument","showRelatedApps","updateRelatedAppsDetails","_findControlInSubSection","aParentElement","aSubsection","aControls","bIsChart","item1","oElement","getAggregation","chartControl","getChartControl","oSubElement","getMainContent","_getAllBlocks","_findCharts","aCharts","oBlock","oContent","setShowSideContent","oChartContext","sChartPath","oContextData","oChartContextData","_scrollTablesToRow","sRowPath","TableScroller","scrollTableToRow","_mergeMultipleContexts","oPageContext","aLineContext","aAttributes","aPageAttributes","sMetaPathLine","sPathLine","sPagePath","oMetaModel","sMetaPathPage","replace","oSingleContext","oSubChartContextData","contextData","removeSensitiveData","oPageLevelSV","addPageContextToSelectionVariant","SelectionVariant","selectionVariant","attributes","oViewData","oConfigurations","controlConfiguration","aConfigurations","sKey","oConfiguration","requestGroupId","paginatorCurrentContext","bindingToUse","paginator","initialize","oDataPoints","getHeaderFacetItemConfigForExternalNavigation","getRoutingService","getOutbounds","oShellServices","fnGetLinks","fnOnError","fnSetLinkEnablement","id","aSupportedLinks","sLinkId","supported","oSubDataPoints","oPageData","oDataPoint","oLink","oLinkContext","oLinkData","oMixedContext","merge","oMapping","sMainProperty","sMappedProperty","hasOwnProperty","oNewMapping","isNavigationSupported","params","aLinks","_applyDecoratedDescriptor","configurable","enumerable","writable","initializer","getOwnPropertyDescriptor"],"sources":["./ObjectPageController.controller.ts"],"sourcesContent":["import type { SemanticObjectMappingType } from \"@sap-ux/vocabularies-types/vocabularies/Common\";\nimport Log from \"sap/base/Log\";\nimport merge from \"sap/base/util/merge\";\nimport type { EnhanceWithUI5 } from \"sap/fe/base/ClassSupport\";\nimport { defineUI5Class, extensible, finalExtension, publicExtension, usingExtension } from \"sap/fe/base/ClassSupport\";\nimport ActionRuntime from \"sap/fe/core/ActionRuntime\";\nimport type { FEView } from \"sap/fe/core/BaseController\";\nimport CommonUtils from \"sap/fe/core/CommonUtils\";\nimport PageController from \"sap/fe/core/PageController\";\nimport BusyLocker from \"sap/fe/core/controllerextensions/BusyLocker\";\nimport IntentBasedNavigation from \"sap/fe/core/controllerextensions/IntentBasedNavigation\";\nimport InternalIntentBasedNavigation from \"sap/fe/core/controllerextensions/InternalIntentBasedNavigation\";\nimport InternalRouting from \"sap/fe/core/controllerextensions/InternalRouting\";\nimport MessageHandler from \"sap/fe/core/controllerextensions/MessageHandler\";\nimport PageReady from \"sap/fe/core/controllerextensions/PageReady\";\nimport Paginator from \"sap/fe/core/controllerextensions/Paginator\";\nimport Placeholder from \"sap/fe/core/controllerextensions/Placeholder\";\nimport Share from \"sap/fe/core/controllerextensions/Share\";\nimport ViewState from \"sap/fe/core/controllerextensions/ViewState\";\nimport CollaborationManager from \"sap/fe/core/controllerextensions/cards/CollaborationManager\";\nimport draft from \"sap/fe/core/controllerextensions/editFlow/draft\";\nimport UiModelConstants from \"sap/fe/core/controllerextensions/editFlow/editFlowConstants\";\nimport NavigationReason from \"sap/fe/core/controllerextensions/routing/NavigationReason\";\nimport type CommandExecution from \"sap/fe/core/controls/CommandExecution\";\nimport { RecommendationDialogDecision } from \"sap/fe/core/controls/Recommendations/ConfirmRecommendationDialog\";\nimport type { HiddenDraft, MicroChartManifestConfiguration } from \"sap/fe/core/converters/ManifestSettings\";\nimport type { InternalModelContext } from \"sap/fe/core/helpers/ModelHelper\";\nimport ModelHelper from \"sap/fe/core/helpers/ModelHelper\";\nimport { getResourceModel } from \"sap/fe/core/helpers/ResourceModelHelper\";\nimport FELibrary from \"sap/fe/core/library\";\nimport { type WrappedCard } from \"sap/fe/core/services/CollaborationManagerServiceFactory\";\nimport type ChartBlock from \"sap/fe/macros/Chart\";\nimport CommonHelper from \"sap/fe/macros/CommonHelper\";\nimport type MacroAPI from \"sap/fe/macros/MacroAPI\";\nimport type MultiValueFieldBlock from \"sap/fe/macros/MultiValueField\";\nimport type EasyFillButton from \"sap/fe/macros/ai/EasyFillButton\";\nimport type SummarizationButton from \"sap/fe/macros/ai/SummarizationButton\";\nimport type FormAPI from \"sap/fe/macros/form/FormAPI\";\nimport type MessageButton from \"sap/fe/macros/messages/MessageButton\";\nimport type ShareAPI from \"sap/fe/macros/share/ShareAPI\";\nimport type TableAPI from \"sap/fe/macros/table/TableAPI\";\nimport TableHelper from \"sap/fe/macros/table/TableHelper\";\nimport TableUtils from \"sap/fe/macros/table/Utils\";\nimport SelectionVariant from \"sap/fe/navigation/SelectionVariant\";\nimport type { default as ObjectPageExtensionAPI } from \"sap/fe/templates/ObjectPage/ExtensionAPI\";\nimport { default as ExtensionAPI } from \"sap/fe/templates/ObjectPage/ExtensionAPI\";\nimport CollaborationDiscard from \"sap/fe/templates/ObjectPage/components/CollaborationDiscardDialog\";\nimport type SubSectionBlock from \"sap/fe/templates/ObjectPage/controls/SubSectionBlock\";\nimport TableScroller from \"sap/fe/templates/TableScroller\";\nimport type Button from \"sap/m/Button\";\nimport type InputBase from \"sap/m/InputBase\";\nimport InstanceManager from \"sap/m/InstanceManager\";\nimport MessageBox from \"sap/m/MessageBox\";\nimport type NavContainer from \"sap/m/NavContainer\";\nimport type Popover from \"sap/m/Popover\";\nimport type ToolbarSpacer from \"sap/m/ToolbarSpacer\";\nimport Device from \"sap/ui/Device\";\nimport type UI5Event from \"sap/ui/base/Event\";\nimport type { CommandExecution$ExecuteEvent } from \"sap/ui/core/CommandExecution\";\nimport type Control from \"sap/ui/core/Control\";\nimport UI5Element from \"sap/ui/core/Element\";\nimport type InvisibleText from \"sap/ui/core/InvisibleText\";\nimport Library from \"sap/ui/core/Lib\";\nimport type { ManifestOutboundEntry } from \"sap/ui/core/Manifest\";\nimport Messaging from \"sap/ui/core/Messaging\";\nimport Message from \"sap/ui/core/message/Message\";\nimport MessageType from \"sap/ui/core/message/MessageType\";\nimport OverrideExecution from \"sap/ui/core/mvc/OverrideExecution\";\nimport type DynamicSideContent from \"sap/ui/layout/DynamicSideContent\";\nimport type Form from \"sap/ui/layout/form/Form\";\nimport type Chart from \"sap/ui/mdc/Chart\";\nimport type Table from \"sap/ui/mdc/Table\";\nimport type TableTypeBase from \"sap/ui/mdc/table/TableTypeBase\";\nimport type Binding from \"sap/ui/model/Binding\";\nimport type Context from \"sap/ui/model/Context\";\nimport type ListBinding from \"sap/ui/model/ListBinding\";\nimport type JSONModel from \"sap/ui/model/json/JSONModel\";\nimport type ODataV4Context from \"sap/ui/model/odata/v4/Context\";\nimport type ODataContextBinding from \"sap/ui/model/odata/v4/ODataContextBinding\";\nimport type ODataListBinding from \"sap/ui/model/odata/v4/ODataListBinding\";\nimport type ODataModel from \"sap/ui/model/odata/v4/ODataModel\";\nimport type ObjectPageDynamicHeaderTitle from \"sap/uxap/ObjectPageDynamicHeaderTitle\";\nimport type ObjectPageLayout from \"sap/uxap/ObjectPageLayout\";\nimport type ObjectPageSection from \"sap/uxap/ObjectPageSection\";\nimport type ObjectPageSubSection from \"sap/uxap/ObjectPageSubSection\";\nimport type { MetaModelType } from \"../../../../../../../types/metamodel_types\";\nimport type CollaborationDraft from \"./components/CollaborationDraft\";\nimport CollaborationManagerOverride from \"./overrides/CollaborationManager\";\nimport IntentBasedNavigationOverride from \"./overrides/IntentBasedNavigation\";\nimport InternalRoutingOverride from \"./overrides/InternalRouting\";\nimport MessageHandlerOverride from \"./overrides/MessageHandler\";\nimport PaginatorOverride from \"./overrides/Paginator\";\nimport ShareOverrides from \"./overrides/Share\";\nimport ViewStateOverrides from \"./overrides/ViewState\";\n\nexport type BindingParams = {\n\tredirectedToNonDraft?: string | undefined;\n\treason?: NavigationReason;\n\tbPersistOPScroll?: boolean;\n\tlistBinding?: ODataListBinding;\n\tshowPlaceholder?: boolean;\n};\n\nconst ProgrammingModel = FELibrary.ProgrammingModel;\n\n@defineUI5Class(\"sap.fe.templates.ObjectPage.ObjectPageController\")\nclass ObjectPageController extends PageController {\n\toView!: FEView;\n\n\t@usingExtension(Placeholder)\n\tplaceholder!: Placeholder;\n\n\t@usingExtension(Share.override(ShareOverrides))\n\tshare!: Share;\n\n\t@usingExtension(InternalRouting.override(InternalRoutingOverride))\n\t_routing!: InternalRouting;\n\n\t@usingExtension(Paginator.override(PaginatorOverride))\n\tpaginator!: Paginator;\n\n\t@usingExtension(MessageHandler.override(MessageHandlerOverride))\n\tmessageHandler!: MessageHandler;\n\n\t@usingExtension(IntentBasedNavigation.override(IntentBasedNavigationOverride))\n\tintentBasedNavigation!: IntentBasedNavigation;\n\n\t@usingExtension(CollaborationManager.override(CollaborationManagerOverride))\n\tcollaborationManager!: CollaborationManager;\n\n\t@usingExtension(\n\t\tInternalIntentBasedNavigation.override({\n\t\t\tgetNavigationMode: function (this: InternalIntentBasedNavigation) {\n\t\t\t\tconst bIsStickyEditMode =\n\t\t\t\t\t(this.getView().getController() as ObjectPageController).getStickyEditMode &&\n\t\t\t\t\t(this.getView().getController() as ObjectPageController).getStickyEditMode();\n\t\t\t\treturn bIsStickyEditMode ? \"explace\" : undefined;\n\t\t\t}\n\t\t})\n\t)\n\t_intentBasedNavigation!: InternalIntentBasedNavigation;\n\n\t@usingExtension(ViewState.override(ViewStateOverrides))\n\tviewState!: ViewState;\n\n\t@usingExtension(\n\t\tPageReady.override({\n\t\t\tisContextExpected: function () {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t})\n\t)\n\tpageReady!: PageReady;\n\n\tprivate mCustomSectionExtensionAPIs?: Record<string, ObjectPageExtensionAPI>;\n\n\tprotected extensionAPI?: ObjectPageExtensionAPI;\n\n\tprivate bSectionNavigated?: boolean;\n\n\tprivate clearTitleHierarchyCacheSetUp = false;\n\n\tprivate switchDraftAndActivePopOver?: Popover;\n\n\tprivate currentBinding?: Binding;\n\n\tprivate messageButton!: MessageButton;\n\n\tprivate collaborationMessage?: Message;\n\n\tprivate mergePatchDraft = false;\n\n\tprivate autoQueueLock: ReturnType<ODataModel[\"lock\"]> | undefined;\n\n\tprivate messageBinding?: Binding;\n\n\t@publicExtension()\n\t@finalExtension()\n\tgetExtensionAPI(sId?: string): ExtensionAPI {\n\t\tif (sId) {\n\t\t\t// to allow local ID usage for custom pages we'll create/return own instances for custom sections\n\t\t\tthis.mCustomSectionExtensionAPIs = this.mCustomSectionExtensionAPIs || {};\n\n\t\t\tif (!this.mCustomSectionExtensionAPIs[sId]) {\n\t\t\t\tthis.mCustomSectionExtensionAPIs[sId] = new ExtensionAPI(this, sId);\n\t\t\t}\n\t\t\treturn this.mCustomSectionExtensionAPIs[sId];\n\t\t} else {\n\t\t\tif (!this.extensionAPI) {\n\t\t\t\tthis.extensionAPI = new ExtensionAPI(this);\n\t\t\t}\n\t\t\treturn this.extensionAPI;\n\t\t}\n\t}\n\n\tonInit(): void {\n\t\tsuper.onInit();\n\t\tconst oObjectPage = this._getObjectPageLayoutControl();\n\n\t\t// Setting defaults of internal model context\n\t\tconst oInternalModelContext = this.getView().getBindingContext(\"internal\") as InternalModelContext;\n\t\toInternalModelContext?.setProperty(\"externalNavigationContext\", { page: true });\n\t\toInternalModelContext?.setProperty(\"relatedApps\", {\n\t\t\tvisibility: false,\n\t\t\titems: null\n\t\t});\n\t\toInternalModelContext?.setProperty(\"batchGroups\", this._getBatchGroupsForView());\n\t\toInternalModelContext?.setProperty(\"errorNavigationSectionFlag\", false);\n\t\tif (oObjectPage.getEnableLazyLoading()) {\n\t\t\t//Attaching the event to make the subsection context binding active when it is visible.\n\t\t\toObjectPage.attachEvent(\"subSectionEnteredViewPort\", this._handleSubSectionEnteredViewPort.bind(this));\n\t\t}\n\t\tthis.messageButton = this.getView().byId(\"fe::FooterBar::MessageButton\") as MessageButton;\n\t\tthis.messageBinding = Messaging.getMessageModel().bindList(\"/\");\n\t\tthis.messageBinding?.attachChange(this._fnShowOPMessage, this);\n\t\toInternalModelContext?.setProperty(\"rootEditEnabled\", true);\n\t\toInternalModelContext?.setProperty(\"rootEditVisible\", true);\n\t}\n\n\tonExit(): void {\n\t\tif (this.mCustomSectionExtensionAPIs) {\n\t\t\tfor (const sId of Object.keys(this.mCustomSectionExtensionAPIs)) {\n\t\t\t\tif (this.mCustomSectionExtensionAPIs[sId]) {\n\t\t\t\t\tthis.mCustomSectionExtensionAPIs[sId].destroy();\n\t\t\t\t}\n\t\t\t}\n\t\t\tdelete this.mCustomSectionExtensionAPIs;\n\t\t}\n\t\tif (this.extensionAPI) {\n\t\t\tthis.extensionAPI.destroy();\n\t\t}\n\t\tdelete this.extensionAPI;\n\n\t\tconst oMessagePopover = this.messageButton ? this.messageButton.oMessagePopover : null;\n\t\tif (oMessagePopover && oMessagePopover.isOpen()) {\n\t\t\toMessagePopover.close();\n\t\t}\n\t\t//when exiting we set keepAlive context to false\n\t\tconst oContext = this.getView().getBindingContext();\n\t\tif (oContext && oContext.isKeepAlive()) {\n\t\t\toContext.setKeepAlive(false);\n\t\t}\n\n\t\tthis.collaborativeDraft.disconnect(); // Cleanup collaboration connection when leaving the app\n\n\t\tthis.messageBinding?.detachChange(this._fnShowOPMessage, this);\n\t}\n\n\t/**\n\t * Method to show the message strip on the object page.\n\t *\n\t */\n\t_fnShowOPMessage(): void {\n\t\tif (this.getAppComponent().isSuspended()) {\n\t\t\t// If the app is suspended, we do not show the messages (the MessageModel contains messages from the active app).\n\t\t\treturn;\n\t\t}\n\n\t\tconst extensionAPI = this.getExtensionAPI();\n\t\tconst view = this.getView();\n\t\tconst messages = Messaging?.getMessageModel()\n\t\t\t.getData()\n\t\t\t.filter((message: Message) => {\n\t\t\t\treturn message.getTargets()[0] === view.getBindingContext()?.getPath();\n\t\t\t});\n\n\t\tif (extensionAPI) {\n\t\t\textensionAPI._showMessages(messages, \"Backend\");\n\t\t}\n\t}\n\n\t_getTableBinding(oTable: Table): ODataListBinding {\n\t\treturn oTable && oTable.getRowBinding();\n\t}\n\n\t/**\n\t * Find the last visible subsection and add the sapUxAPObjectPageSubSectionFitContainer CSS class if it contains only a GridTable or a TreeTable.\n\t * @param subSections The sub sections to look for\n\t */\n\tprivate checkSectionsForNonResponsiveTable(subSections: ObjectPageSubSection[]): void {\n\t\tconst changeClassForTables = (event: Event, lastVisibleSubSection: ObjectPageSubSection): void => {\n\t\t\tconst blocks = [...lastVisibleSubSection.getBlocks(), ...lastVisibleSubSection.getMoreBlocks()];\n\t\t\tif (blocks.length === 1) {\n\t\t\t\tconst table = this.searchTableInBlock(blocks[0] as SubSectionBlock);\n\t\t\t\tif (!table) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst tableType = table.isA<Table>(\"sap.ui.mdc.Table\") && (table.getType() as TableTypeBase);\n\t\t\t\tconst tableAPI = table.getParent()?.isA<TableAPI>(\"sap.fe.macros.table.TableAPI\")\n\t\t\t\t\t? (table.getParent() as TableAPI)\n\t\t\t\t\t: undefined;\n\t\t\t\tif (\n\t\t\t\t\ttableType &&\n\t\t\t\t\t(tableType?.isA(\"sap.ui.mdc.table.GridTableType\") || tableType?.isA(\"sap.ui.mdc.table.TreeTableType\")) &&\n\t\t\t\t\ttableAPI?.getTableDefinition().control.rowCountMode === \"Auto\"\n\t\t\t\t) {\n\t\t\t\t\t//In case there is only a single table in a subSection we fit that to the whole page so that the scrollbar comes only on table and not on page\n\t\t\t\t\tlastVisibleSubSection.addStyleClass(\"sapUxAPObjectPageSubSectionFitContainer\");\n\t\t\t\t\tlastVisibleSubSection.detachEvent(\"modelContextChange\", changeClassForTables, this);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tfor (let subSectionIndex = subSections.length - 1; subSectionIndex >= 0; subSectionIndex--) {\n\t\t\tif (subSections[subSectionIndex].getVisible()) {\n\t\t\t\tconst lastVisibleSubSection = subSections[subSectionIndex];\n\t\t\t\t// We need to attach this event in order to manage the Object Page Lazy Loading mechanism\n\t\t\t\tlastVisibleSubSection.attachEvent(\"modelContextChange\", lastVisibleSubSection, changeClassForTables, this);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Find a table in blocks of section.\n\t * @param block One sub section block\n\t * @returns Table if exists\n\t */\n\tprivate searchTableInBlock(block: SubSectionBlock): Table | undefined {\n\t\tconst control = block.content;\n\t\tlet tableAPI: TableAPI | undefined;\n\t\tif (block.isA(\"sap.fe.templates.ObjectPage.controls.SubSectionBlock\")) {\n\t\t\t// The table may currently be shown in a full screen dialog, we can then get the reference to the TableAPI\n\t\t\t// control from the custom data of the place holder panel\n\t\t\tif (control.isA(\"sap.m.Panel\") && control.data(\"FullScreenTablePlaceHolder\")) {\n\t\t\t\ttableAPI = control.data(\"tableAPIreference\");\n\t\t\t} else if (control.isA(\"sap.fe.macros.table.TableAPI\")) {\n\t\t\t\ttableAPI = control as TableAPI;\n\t\t\t}\n\t\t\tif (tableAPI) {\n\t\t\t\treturn tableAPI.content;\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tonBeforeRendering(): void {\n\t\tPageController.prototype.onBeforeRendering.apply(this);\n\t\t// In the retrieveTextFromValueList scenario we need to ensure in case of reload/refresh that the meta model in the methode retrieveTextFromValueList of the FieldRuntime is available\n\t\tif (this.oView.getViewData()?.retrieveTextFromValueList && CommonHelper.getMetaModel() === undefined) {\n\t\t\tCommonHelper.setMetaModel(this.getAppComponent().getMetaModel());\n\t\t}\n\t}\n\n\tonAfterRendering(): void {\n\t\tlet subSections: ObjectPageSubSection[];\n\t\tif (this._getObjectPageLayoutControl().getUseIconTabBar()) {\n\t\t\tconst sections = this._getObjectPageLayoutControl().getSections();\n\t\t\tfor (const section of sections) {\n\t\t\t\tsubSections = section.getSubSections();\n\t\t\t\tthis.checkSectionsForNonResponsiveTable(subSections);\n\t\t\t}\n\t\t} else {\n\t\t\tsubSections = this._getAllSubSections();\n\t\t\tthis.checkSectionsForNonResponsiveTable(subSections);\n\t\t}\n\t}\n\n\t_onBeforeBinding(oContext: ODataV4Context, mParameters: BindingParams = {}): void {\n\t\t// TODO: we should check how this comes together with the transaction helper, same to the change in the afterBinding\n\t\tconst aTables = this._findTables(),\n\t\t\toObjectPage = this._getObjectPageLayoutControl(),\n\t\t\toInternalModelContext = this.getView().getBindingContext(\"internal\") as InternalModelContext,\n\t\t\toInternalModel = this.getView().getModel(\"internal\"),\n\t\t\taBatchGroups = oInternalModelContext.getProperty(\"batchGroups\");\n\t\tlet oFastCreationRow;\n\t\taBatchGroups.push(\"$auto\");\n\t\tif (mParameters.reason !== NavigationReason.EditFlowAction) {\n\t\t\tthis._closeSideContent();\n\t\t}\n\t\tconst opContext = oObjectPage.getBindingContext() as ODataV4Context;\n\t\tif (\n\t\t\topContext &&\n\t\t\topContext.hasPendingChanges() &&\n\t\t\t!aBatchGroups.some(opContext.getModel().hasPendingChanges.bind(opContext.getModel()))\n\t\t) {\n\t\t\t/* \tIn case there are pending changes for the creation row and no others we need to reset the changes\n\t\t\t\t\t\t\t\tTODO: this is just a quick solution, this needs to be reworked\n\t\t\t\t\t\t\t\t*/\n\n\t\t\topContext.getBinding().resetChanges();\n\t\t}\n\n\t\t// For now we have to set the binding context to null for every fast creation row\n\t\t// TODO: Get rid of this coding or move it to another layer - to be discussed with MDC and model\n\t\tfor (const item of aTables) {\n\t\t\toFastCreationRow = item.getCreationRow();\n\t\t\tif (oFastCreationRow) {\n\t\t\t\toFastCreationRow.setBindingContext(null);\n\t\t\t}\n\t\t}\n\n\t\t// Scroll to present Section so that bindings are enabled during navigation through paginator buttons, as there is no view rerendering/rebind\n\t\tconst fnScrollToPresentSection = function (): void {\n\t\t\tif (!(oObjectPage as { isFirstRendering?: () => boolean }).isFirstRendering?.() && !mParameters.bPersistOPScroll) {\n\t\t\t\toObjectPage.setSelectedSection(null as unknown as string);\n\t\t\t}\n\t\t};\n\t\toObjectPage.attachEventOnce(\"modelContextChange\", fnScrollToPresentSection);\n\n\t\tconst fnOPRenderingLayout = {\n\t\t\tonAfterRendering: (): void => {\n\t\t\t\tif (this.getView().getViewData()?.editableHeaderContent) {\n\t\t\t\t\tfnScrollToPresentSection();\n\t\t\t\t}\n\t\t\t\toObjectPage.removeEventDelegate(fnOPRenderingLayout);\n\t\t\t}\n\t\t};\n\t\toObjectPage.addEventDelegate(fnOPRenderingLayout);\n\n\t\t//Set the Binding for Paginators using ListBinding ID\n\t\tthis._initializePagination(oContext, oInternalModel, mParameters?.listBinding);\n\n\t\tif (oObjectPage.getEnableLazyLoading()) {\n\t\t\tthis._disableBlocksBindings(oObjectPage);\n\t\t}\n\n\t\tif (this.placeholder.isPlaceholderEnabled() && mParameters.showPlaceholder) {\n\t\t\tconst oView = this.getView();\n\t\t\tconst oNavContainer = (oView.getParent() as unknown as { oContainer: Control }).oContainer.getParent();\n\t\t\tif (oNavContainer) {\n\t\t\t\tthis.placeholder.enableAnimation();\n\t\t\t\t(oNavContainer as unknown as { showPlaceholder: Function }).showPlaceholder({});\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate getFirstEditableInput(): UI5Element | undefined {\n\t\tconst domEditableElement = this._getObjectPageLayoutControl()._getFirstEditableInput();\n\t\treturn domEditableElement ? UI5Element.closestTo(domEditableElement) : undefined;\n\t}\n\n\t/**\n\t * Get the first clickable element in the header of the object page.\n\t * @private\n\t * @param objectPage Object Page Layout control\n\t * @returns The first clickable element found in the header\n\t */\n\tprivate getFirstClickableElement(objectPage: ObjectPageLayout): UI5Element | undefined {\n\t\tlet firstClickableElement;\n\t\tconst actions = objectPage.getHeaderTitle() && (objectPage.getHeaderTitle() as ObjectPageDynamicHeaderTitle).getActions();\n\t\tif (actions?.length) {\n\t\t\tfirstClickableElement = actions.find(function (action: Control) {\n\t\t\t\t// Due to the left alignment of the Draft switch and the collaborative draft avatar controls\n\t\t\t\t// there is a ToolbarSpacer in the actions aggregation which we need to exclude here!\n\t\t\t\t// Due to the ACC report, we also need not to check for the InvisibleText elements\n\t\t\t\tif (action.isA<SummarizationButton>(\"sap.fe.macros.ai.SummarizationButton\")) {\n\t\t\t\t\treturn action.getContent()?.getVisible() ?? false;\n\t\t\t\t} else if (\n\t\t\t\t\taction.isA<ShareAPI>(\"sap.fe.macros.Share\") ||\n\t\t\t\t\taction.isA<EasyFillButton>(\"sap.fe.macros.ai.EasyFillButton\") ||\n\t\t\t\t\taction.isA<CollaborationDraft>(\"sap.fe.templates.ObjectPage.components.CollaborationDraft\")\n\t\t\t\t) {\n\t\t\t\t\t// since Share and CollaborationDraft does not have a disable property\n\t\t\t\t\t// hence there is no need to check if it is disabled or not\n\t\t\t\t\treturn action.getVisible();\n\t\t\t\t} else if (!action.isA<InvisibleText>(\"sap.ui.core.InvisibleText\") && !action.isA<ToolbarSpacer>(\"sap.m.ToolbarSpacer\")) {\n\t\t\t\t\treturn action.getVisible() && (action as Button).getEnabled();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn firstClickableElement;\n\t}\n\n\t/**\n\t * Disable the bindings of blocks in Object Page Layout based on the its overall content.\n\t * @param objectPage Object Page Layout control\n\t */\n\t_disableBlocksBindings(this: ObjectPageController, objectPage: ObjectPageLayout): void {\n\t\tconst aSections = objectPage.getSections();\n\t\tconst bUseIconTabBar = objectPage.getUseIconTabBar();\n\t\tlet iSkip = 3; // 3 sections/subsections are loaded initially, the others are loaded lazily\n\t\tconst bIsInEditMode = CommonUtils.getIsEditable(this.getView());\n\t\tconst bEditableHeader = this.getView().getViewData().editableHeaderContent;\n\t\tfor (let iSection = 0; iSection < aSections.length; iSection++) {\n\t\t\tconst oSection = aSections[iSection];\n\t\t\tconst aSubSections = oSection.getSubSections();\n\t\t\tfor (let iSubSection = 0; iSubSection < aSubSections.length; iSubSection++, iSkip--) {\n\t\t\t\t// In IconTabBar mode keep the second section bound if there is an editable header and we are switching to display mode\n\t\t\t\tif (iSkip < 1 || (bUseIconTabBar && (iSection > 1 || (iSection === 1 && !bEditableHeader && !bIsInEditMode)))) {\n\t\t\t\t\tconst oSubSection = aSubSections[iSubSection];\n\t\t\t\t\tif (oSubSection.data().isVisibilityDynamic !== \"true\") {\n\t\t\t\t\t\t// SubSection's binding is enabled.\n\t\t\t\t\t\toSubSection.setBindingContext(undefined);\n\t\t\t\t\t\tconst blocks = oSubSection.getBlocks() as SubSectionBlock[];\n\t\t\t\t\t\t// SubSection's contents binding is disabled.\n\t\t\t\t\t\tblocks.forEach((block) => block.setBindingContext(null));\n\t\t\t\t\t\toSubSection.getMoreBlocks().forEach((subBlock) => subBlock.setBindingContext(null));\n\t\t\t\t\t\toSubSection.getActions().forEach((actions) => actions.setBindingContext(null));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t_getFirstEmptyMandatoryFieldFromSubSection(aSubSections: ObjectPageSubSection[]): InputBase | undefined {\n\t\tif (aSubSections.length === 0) return undefined;\n\t\tfor (const subSection of aSubSections) {\n\t\t\tconst aBlocks = subSection.getBlocks() as (Form | FormAPI)[];\n\n\t\t\tif (aBlocks) {\n\t\t\t\tfor (const blockControl of aBlocks) {\n\t\t\t\t\tif (blockControl.getBindingContext?.()) {\n\t\t\t\t\t\tlet aFormContainers;\n\n\t\t\t\t\t\tif (blockControl.isA<Form>(\"sap.ui.layout.form.Form\")) {\n\t\t\t\t\t\t\taFormContainers = blockControl.getFormContainers();\n\t\t\t\t\t\t} else if (blockControl.getContent && blockControl.getContent()?.isA<Form>(\"sap.ui.layout.form.Form\")) {\n\t\t\t\t\t\t\taFormContainers = (blockControl.getContent() as Form).getFormContainers();\n\t\t\t\t\t\t} else if (blockControl?.getContent?.()?.isA<FormAPI>(\"sap.fe.macros.form.FormAPI\")) {\n\t\t\t\t\t\t\taFormContainers = ((blockControl.getContent() as FormAPI).getContent() as Form).getFormContainers();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (aFormContainers) {\n\t\t\t\t\t\t\tfor (const formContainer of aFormContainers) {\n\t\t\t\t\t\t\t\tconst aFormElements = formContainer.getFormElements();\n\t\t\t\t\t\t\t\tif (aFormElements) {\n\t\t\t\t\t\t\t\t\tfor (const formElement of aFormElements) {\n\t\t\t\t\t\t\t\t\t\tconst aFields = formElement.getFields() as InputBase[];\n\t\t\t\t\t\t\t\t\t\tconst emptyField = this.getFirstEmptyRequiredField(aFields);\n\t\t\t\t\t\t\t\t\t\tif (emptyField) return emptyField;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\t/**\n\t * Verify if the first field is empty and required.\n\t * @param fields The fields to check\n\t * @returns The first empty required field or undefined if no such field exists\n\t */\n\tgetFirstEmptyRequiredField(fields: InputBase[]): InputBase | undefined {\n\t\tif (!fields || fields.length === 0) return;\n\n\t\tif (!fields[0].getRequired?.()) return;\n\n\t\tlet isEmpty = false;\n\n\t\ttry {\n\t\t\tif (fields[0].isA(\"sap.fe.macros.MultiValueField\")) {\n\t\t\t\tconst items = (fields[0] as unknown as MultiValueFieldBlock).getMultiValueField().getItems();\n\t\t\t\tisEmpty = items.length === 0;\n\t\t\t} else {\n\t\t\t\tconst value = (fields[0] as InputBase).getValue();\n\t\t\t\tisEmpty = !value;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tLog.debug(`Error when checking field properties: ${error}`);\n\t\t}\n\n\t\treturn isEmpty ? fields[0] : undefined;\n\t}\n\n\t/**\n\t * Set the initial focus in edit mode.\n\t * @param aSubSections Object page sub sections\n\t */\n\t_updateFocusInEditMode(aSubSections: ObjectPageSubSection[]): void {\n\t\tsetTimeout(\n\t\t\tfunction (this: ObjectPageController): void {\n\t\t\t\t// We set the focus in a timeeout, otherwise the focus sometimes goes to the TabBar\n\t\t\t\tconst oObjectPage = this._getObjectPageLayoutControl();\n\t\t\t\tconst oMandatoryField = this._getFirstEmptyMandatoryFieldFromSubSection(aSubSections);\n\t\t\t\tlet oFieldToFocus;\n\t\t\t\tif (oMandatoryField) {\n\t\t\t\t\tif (oMandatoryField.isA(\"sap.fe.macros.MultiValueField\")) {\n\t\t\t\t\t\toFieldToFocus = (oMandatoryField as unknown as MultiValueFieldBlock).getMultiValueField();\n\t\t\t\t\t} else {\n\t\t\t\t\t\toFieldToFocus = (\n\t\t\t\t\t\t\toMandatoryField as unknown as { content: { getContentEdit: Function } }\n\t\t\t\t\t\t).content.getContentEdit()[0];\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\toFieldToFocus = this.getFirstEditableInput() ?? this.getFirstClickableElement(oObjectPage);\n\t\t\t\t}\n\t\t\t\tif (oFieldToFocus) {\n\t\t\t\t\tconst focusInfo = oFieldToFocus.getFocusInfo() as { targetInfo: object };\n\t\t\t\t\tfocusInfo.targetInfo = { silent: true };\n\t\t\t\t\tif (oFieldToFocus.isA(\"sap.ui.mdc.field.FieldInput\")) {\n\t\t\t\t\t\toFieldToFocus = oFieldToFocus.getParent();\n\t\t\t\t\t}\n\t\t\t\t\toFieldToFocus.focus(focusInfo);\n\t\t\t\t}\n\t\t\t}.bind(this),\n\t\t\t0\n\t\t);\n\t}\n\n\t_handleSubSectionEnteredViewPort(oEvent: UI5Event<{ subSection: ObjectPageSubSection }>): void {\n\t\tconst oSubSection = oEvent.getParameter(\"subSection\");\n\t\tconst blocks = oSubSection.getBlocks() as SubSectionBlock[];\n\t\tblocks.forEach((block) => block.setBindingContext(undefined));\n\t\toSubSection.getMoreBlocks().forEach((subBlock) => subBlock.setBindingContext(undefined));\n\t\toSubSection.getActions().forEach((actions) => actions.setBindingContext(undefined));\n\t}\n\n\t_onBackNavigationInDraft(oContext: ODataV4Context): void {\n\t\tthis.messageHandler.removeTransitionMessages();\n\n\t\t// Function to navigate back, or display the launchpad if we're on the first page of the history\n\t\tconst navBack = (): void => {\n\t\t\tconst currentURL = document.URL;\n\t\t\thistory.back();\n\t\t\t// In case there is no previous page in the history, history.back does nothing.\n\t\t\t// In this case, we need to use navigateBackFromContext, that will display the home page\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (document.URL === currentURL) {\n\t\t\t\t\tthis._routing.navigateBackFromContext(oContext);\n\t\t\t\t}\n\t\t\t}, 500);\n\t\t};\n\n\t\tif (this.getAppComponent().getRouterProxy().checkIfBackHasSameContext()) {\n\t\t\t// Back nav will keep the same context --> no need to display the dialog\n\t\t\thistory.back();\n\t\t} else if (!this.getView().getBindingContext()) {\n\t\t\t// This object page doesn't have a binding context, but still handles the shell back navigation --> pform the nav back and remove the navback handler as it makes no sense any longer\n\t\t\tthis.getAppComponent()\n\t\t\t\t.getShellServices()\n\t\t\t\t.setBackNavigation(undefined)\n\t\t\t\t.then(navBack)\n\t\t\t\t.catch((e) => {\n\t\t\t\t\tLog.warning(\"Error while setting back navigation\", e);\n\t\t\t\t});\n\t\t} else {\n\t\t\tconst hiddenDraftEnabled = (this.getAppComponent()?.getEnvironmentCapabilities()?.getCapabilities()?.HiddenDraft as HiddenDraft)\n\t\t\t\t?.enabled;\n\t\t\tdraft.processDataLossOrDraftDiscardConfirmation(\n\t\t\t\tnavBack,\n\t\t\t\tFunction.prototype,\n\t\t\t\toContext,\n\t\t\t\tthis,\n\t\t\t\ttrue,\n\t\t\t\tdraft.NavigationType.BackNavigation,\n\t\t\t\tundefined,\n\t\t\t\thiddenDraftEnabled ? true : undefined\n\t\t\t);\n\t\t}\n\t}\n\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\t_onAfterBinding(inputBindingContext: Context | undefined, mParameters: BindingParams | undefined): void {\n\t\tconst view = this.getView();\n\t\tconst viewLevel = view?.getViewData()?.viewLevel;\n\t\tconst oObjectPage = this._getObjectPageLayoutControl();\n\t\tconst aTables = this._findTables();\n\n\t\tthis._sideEffects.clearFieldGroupsValidity();\n\n\t\t// TODO: this is only a temp solution as long as the model fix the cache issue and we use this additional\n\t\t// binding with ownRequest\n\t\tconst bindingContext = oObjectPage.getBindingContext() as ODataV4Context;\n\n\t\tlet aIBNActions: UI5Element[] = [];\n\t\toObjectPage.getSections().forEach(function (oSection: ObjectPageSection) {\n\t\t\toSection.getSubSections().forEach(function (oSubSection: ObjectPageSubSection) {\n\t\t\t\taIBNActions = CommonUtils.getIBNActions(oSubSection, aIBNActions);\n\t\t\t});\n\t\t});\n\n\t\t// Assign internal binding contexts to oFormContainer:\n\t\t// 1. It is not possible to assign the internal binding context to the XML fragment\n\t\t// (FormContainer.fragment.xml) yet - it is used already for the data-structure.\n\t\t// 2. Another problem is, that FormContainers assigned to a 'MoreBlock' does not have an\n\t\t// internal model context at all.\n\n\t\taTables.forEach(function (oTable: Table) {\n\t\t\tconst oInternalModelContext = oTable.getBindingContext(\"internal\");\n\t\t\tif (oInternalModelContext) {\n\t\t\t\toInternalModelContext.setProperty(\"creationRowFieldValidity\", {});\n\t\t\t\toInternalModelContext.setProperty(\"creationRowCustomValidity\", {});\n\n\t\t\t\taIBNActions = CommonUtils.getIBNActions(oTable, aIBNActions);\n\n\t\t\t\t// temporary workaround for BCP: 2080218004\n\t\t\t\t// Need to fix with BLI: FIORITECHP1-15274\n\t\t\t\t// only for edit mode, we clear the table cache\n\t\t\t\t// Workaround starts here!!\n\t\t\t\tconst oTableRowBinding = oTable.getRowBinding();\n\t\t\t\tif (oTableRowBinding) {\n\t\t\t\t\tif (ModelHelper.isStickySessionSupported(oTableRowBinding.getModel().getMetaModel())) {\n\t\t\t\t\t\t// apply for both edit and display mode in sticky\n\t\t\t\t\t\t(oTableRowBinding as unknown as { removeCachesAndMessages: Function }).removeCachesAndMessages(\"\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Workaround ends here!!\n\n\t\t\t\t// Clear the selection in the table and update action enablement accordingly\n\t\t\t\t// Will to be fixed with BLI: FIORITECHP1-24318\n\t\t\t\tconst tableAPI = oTable.getParent() as TableAPI;\n\t\t\t\tconst oActionOperationAvailableMap = tableAPI ? JSON.parse(tableAPI.tableDefinition.operationAvailableMap) : {};\n\n\t\t\t\tActionRuntime.setActionEnablement(oInternalModelContext, oActionOperationAvailableMap, [], \"table\");\n\n\t\t\t\toTable.clearSelection();\n\t\t\t}\n\t\t});\n\t\t//Retrieve Object Page header actions from Object Page title control\n\t\tconst oObjectPageTitle = oObjectPage.getHeaderTitle() as ObjectPageDynamicHeaderTitle;\n\t\tlet aIBNHeaderActions: UI5Element[] = [];\n\t\taIBNHeaderActions = CommonUtils.getIBNActions(oObjectPageTitle, aIBNHeaderActions);\n\t\taIBNActions = aIBNActions.concat(aIBNHeaderActions);\n\t\tCommonUtils.updateDataFieldForIBNButtonsVisibility(aIBNActions, this.getView());\n\n\t\tlet oModel: ODataModel,\n\t\t\toFinalUIState: Promise<unknown> = Promise.resolve();\n\n\t\t// this should not be needed at the all\n\t\t/**\n\t\t * @param oTable\n\t\t */\n\t\tconst handleTableModifications = (oTable: Table): void => {\n\t\t\tconst oBinding = this._getTableBinding(oTable),\n\t\t\t\tfnHandleTablePatchEvents = function (): void {\n\t\t\t\t\tTableHelper.enableFastCreationRow(\n\t\t\t\t\t\toTable.getCreationRow(),\n\t\t\t\t\t\toBinding.getPath(),\n\t\t\t\t\t\toBinding.getContext(),\n\t\t\t\t\t\toModel,\n\t\t\t\t\t\toFinalUIState\n\t\t\t\t\t);\n\t\t\t\t};\n\n\t\t\tif (!oBinding) {\n\t\t\t\tLog.error(`Expected binding missing for table: ${oTable.getId()}`);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (oBinding.getContext()) {\n\t\t\t\tfnHandleTablePatchEvents();\n\t\t\t} else {\n\t\t\t\tconst fnHandleChange = function (): void {\n\t\t\t\t\tif (oBinding.getContext()) {\n\t\t\t\t\t\tfnHandleTablePatchEvents();\n\t\t\t\t\t\toBinding.detachChange(fnHandleChange);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\toBinding.attachChange(fnHandleChange);\n\t\t\t}\n\t\t};\n\n\t\tif (bindingContext) {\n\t\t\toModel = bindingContext.getModel();\n\n\t\t\t// Compute Edit Mode\n\t\t\toFinalUIState = this.editFlow.computeModelsForEditMode(bindingContext);\n\n\t\t\t// update related apps\n\t\t\tthis._updateRelatedApps();\n\n\t\t\t//Attach the patch sent and patch completed event to the object page binding so that we can react\n\t\t\tconst oBinding = (bindingContext.getBinding && bindingContext.getBinding()) || bindingContext;\n\n\t\t\t// Attach the event handler only once to the same binding\n\t\t\tif (this.currentBinding !== oBinding) {\n\t\t\t\toBinding.attachEvent(\"patchSent\", {}, this.editFlow.handlePatchSent, this);\n\t\t\t\tthis.currentBinding = oBinding;\n\t\t\t}\n\n\t\t\taTables.forEach(function (oTable: Table): void {\n\t\t\t\t// access binding only after table is bound\n\t\t\t\tTableUtils.whenBound(oTable)\n\t\t\t\t\t.then(handleTableModifications)\n\t\t\t\t\t.catch(function (oError: unknown) {\n\t\t\t\t\t\tLog.error(\"Error while waiting for the table to be bound\", oError as string);\n\t\t\t\t\t});\n\t\t\t});\n\n\t\t\t// should be called only after binding is ready hence calling it in onAfterBinding\n\t\t\t(oObjectPage as unknown as { _triggerVisibleSubSectionsEvents: Function })._triggerVisibleSubSectionsEvents();\n\n\t\t\t//To Compute the Edit Binding of the subObject page using root object page, create a context for draft root and update the edit button in sub OP using the context\n\t\t\tActionRuntime.updateEditButtonVisibilityAndEnablement(this.getView());\n\t\t}\n\t\t// we are clearing any previous data from recommendations every time we come to new OP\n\t\t// so that cached recommendations are not shown to user\n\t\tif (viewLevel && viewLevel === 1) {\n\t\t\toFinalUIState?.then(() => {\n\t\t\t\tthis.recommendations.clearRecommendations();\n\n\t\t\t\treturn;\n\t\t\t});\n\t\t}\n\t\tthis._updateAvailableCards([]);\n\t\tthis.displayCollaborationMessage(mParameters?.redirectedToNonDraft);\n\t\tthis._setOPMessageStripInternalContext();\n\n\t\tconst applyAppState = this.getAppComponent().getAppStateHandler().applyAppState(view.getId(), view);\n\t\tthis.pageReady.waitFor(applyAppState);\n\t}\n\n\t/**\n\t * Update the cards when the binding is refreshed.\n\t * @param cards Array of cards to be updated\n\t */\n\tasync _updateAvailableCards(cards: WrappedCard[]): Promise<void> {\n\t\tawait this.collaborationManager.collectAvailableCards(cards);\n\t\tif (cards.length > 0) {\n\t\t\tconst cardObject = this.collaborationManager.updateCards(cards);\n\t\t\tconst parentAppId = this.getAppComponent().getId();\n\t\t\tthis.getAppComponent()\n\t\t\t\t.getCollaborationManagerService()\n\t\t\t\t.addCardsToCollaborationManager(cardObject, parentAppId, this.getView().getId());\n\t\t\tthis.getAppComponent().getCollaborationManagerService().shareAvailableCards();\n\t\t}\n\t}\n\n\t/**\n\t * Set the internal binding context of the Messagestrip OP.\n\t */\n\t_setOPMessageStripInternalContext(): void {\n\t\tconst view = this.getView();\n\t\tconst oObjectPage = this._getObjectPageLayoutControl();\n\t\tconst internalModelContext = view.getBindingContext(\"internal\");\n\t\tinternalModelContext?.setProperty(\"MessageStrip\", { ...internalModelContext?.getProperty(\"MessageStrip\") });\n\t\tif (internalModelContext) {\n\t\t\t(oObjectPage.getHeaderTitle() as unknown as Control)\n\t\t\t\t?.findElements(true, (elem: Control) => elem.isA(\"sap.m.MessageStrip\"))\n\t\t\t\t.forEach((messageStrip: UI5Element) => {\n\t\t\t\t\tmessageStrip.setBindingContext(\n\t\t\t\t\t\tinternalModelContext\n\t\t\t\t\t\t\t.getModel()\n\t\t\t\t\t\t\t.bindContext(this.getExtensionAPI()._getMessageStripBindingContextPath())\n\t\t\t\t\t\t\t.getBoundContext()!,\n\t\t\t\t\t\t\"internal\"\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t// If the view's binding context already had messages that were not cleared, we would need to re-evaluate to show the message strip.\n\t\t\tthis._fnShowOPMessage();\n\t\t}\n\t}\n\n\t/**\n\t * Show a message strip if a redirection to a non-draft element has been done.\n\t * Remove the message strip in case we navigate to another object page.\n\t * @param entityName Name of the Entity to be displayed in the message\n\t */\n\tdisplayCollaborationMessage(entityName: string | undefined): void {\n\t\tconst resourceBundle = Library.getResourceBundleFor(\"sap.fe.core\")!;\n\n\t\tif (this.collaborationMessage) {\n\t\t\tMessaging.removeMessages([this.collaborationMessage]);\n\t\t\tdelete this.collaborationMessage;\n\t\t}\n\n\t\tif (entityName) {\n\t\t\tthis.collaborationMessage = new Message({\n\t\t\t\tmessage: resourceBundle.getText(\"REROUTED_NAVIGATION_TO_SAVED_VERSION\", [entityName]),\n\t\t\t\ttype: MessageType.Information,\n\t\t\t\ttarget: this.getView()?.getBindingContext()?.getPath()\n\t\t\t});\n\t\t\tMessaging.addMessages([this.collaborationMessage]);\n\t\t}\n\t}\n\n\t@publicExtension()\n\t@extensible(OverrideExecution.After)\n\tasync onPageReady(mParameters: { forceFocus: boolean } | undefined): Promise<void> {\n\t\tconst setFocus = (): void => {\n\t\t\t// Set the focus to the first action button, or to the first editable input if in editable mode\n\t\t\tconst oObjectPage = this._getObjectPageLayoutControl();\n\t\t\tconst isInDisplayMode = !CommonUtils.getIsEditable(this.getView());\n\n\t\t\tif (isInDisplayMode) {\n\t\t\t\tconst oFirstClickableElement = this.getFirstClickableElement(oObjectPage);\n\t\t\t\tif (oFirstClickableElement) {\n\t\t\t\t\toFirstClickableElement.focus();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst oSelectedSection = UI5Element.getElementById(oObjectPage.getSelectedSection()) as ObjectPageSection | undefined;\n\t\t\t\tif (oSelectedSection) {\n\t\t\t\t\tthis._updateFocusInEditMode(oSelectedSection.getSubSections());\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tconst ctxt = this.getView().getBindingContext();\n\t\t// setting this model data to be used for recommendations binding\n\t\tthis.getView().getModel(\"internal\").setProperty(\"/currentCtxt\", ctxt);\n\n\t\t// Apply app state only after the page is ready with the first section selected\n\t\tconst oView = this.getView();\n\t\tconst oInternalModelContext = oView.getBindingContext(\"internal\") as InternalModelContext;\n\t\tconst oBindingContext = oView.getBindingContext();\n\t\t//Show popup while navigating back from object page in case of draft\n\t\tif (oBindingContext) {\n\t\t\tconst bIsStickyMode = ModelHelper.isStickySessionSupported(oBindingContext.getModel().getMetaModel());\n\t\t\tif (!bIsStickyMode) {\n\t\t\t\tconst oAppComponent = CommonUtils.getAppComponent(oView);\n\t\t\t\tawait oAppComponent.getShellServices().setBackNavigation(() => this._onBackNavigationInDraft(oBindingContext));\n\t\t\t}\n\t\t}\n\t\t// do not request recommendations action if we are in Display mode\n\t\tconst isEditable = CommonUtils.getIsEditable(this.getView());\n\t\tif (isEditable && oBindingContext) {\n\t\t\tawait this.recommendations.fetchAndApplyRecommendations([{ context: oBindingContext }]);\n\t\t}\n\n\t\tif (mParameters?.forceFocus) {\n\t\t\tsetFocus();\n\t\t}\n\t\toInternalModelContext.setProperty(\"errorNavigationSectionFlag\", false);\n\t\tthis._checkDataPointTitleForExternalNavigation();\n\n\t\t//The following coding is done to merge an open PATCH and the draftprepare/draftactivate\n\t\t//request into one $batch request\n\t\t//To achieve this the $auto queue is locked at the mousedown event (before focusout) in\n\t\t//order to wait for the draft request issued in the save buttons press event handler.\n\t\t//The queue is released again during mouseup (before press).\n\t\t//This is only possible on non touch devices because on touch devices the focusout and press\n\t\t//events are both initiated at touchend by sap.m.Button.\n\t\t//mouseHandlerSet is used to ensures that the event handlers are attached only one time.\n\t\t//There can be multiple onPageReady e.g. when switching between edit/display mode\n\t\tif (!this.mergePatchDraft && !Device.support.touch) {\n\t\t\tconst saveButton = oView.byId(\"fe::FooterBar::StandardAction::Save\") as Button;\n\t\t\tconst autoQueueUnlock = (): void => {\n\t\t\t\tif (this.autoQueueLock?.isLocked()) {\n\t\t\t\t\tthis.autoQueueLock.unlock();\n\t\t\t\t}\n\t\t\t\tsaveButton.detachBrowserEvent(\"mouseup\", autoQueueUnlock);\n\t\t\t\tsaveButton.detachBrowserEvent(\"blur\", autoQueueUnlock);\n\t\t\t};\n\n\t\t\tsaveButton?.attachBrowserEvent(\"mousedown\", (): void => {\n\t\t\t\tif (!this.autoQueueLock?.isLocked()) {\n\t\t\t\t\tthis.autoQueueLock = this.getView().getModel().lock(\"$auto\");\n\t\t\t\t\t//when the mouse is dragged away from the save button while pressed then there will be no\n\t\t\t\t\t//mouseup event on the save button. Therefore, the unlocking is done on \"mouseup\" and \"blur\"\n\t\t\t\t\tsaveButton.attachBrowserEvent(\"mouseup\", autoQueueUnlock);\n\t\t\t\t\tsaveButton.attachBrowserEvent(\"blur\", autoQueueUnlock);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis.mergePatchDraft = true;\n\t\t}\n\t}\n\n\t/**\n\t * Get the status of edit mode for sticky session.\n\t * @returns The status of edit mode for sticky session\n\t */\n\tgetStickyEditMode(): boolean {\n\t\tconst oBindingContext = this.getView().getBindingContext && this.getView().getBindingContext();\n\t\tlet bIsStickyEditMode = false;\n\t\tif (oBindingContext) {\n\t\t\tconst bIsStickyMode = ModelHelper.isStickySessionSupported(oBindingContext.getModel().getMetaModel());\n\t\t\tif (bIsStickyMode) {\n\t\t\t\tbIsStickyEditMode = CommonUtils.getIsEditable(this.getView());\n\t\t\t}\n\t\t}\n\t\treturn bIsStickyEditMode;\n\t}\n\n\t_getObjectPageLayoutControl(): ObjectPageLayout {\n\t\treturn this.byId(\"fe::ObjectPage\") as ObjectPageLayout;\n\t}\n\n\tasync _getPageTitleInformation(): Promise<{ title: string; subtitle: string; intent: string; icon: string; description: string }> {\n\t\tconst oObjectPage = this._getObjectPageLayoutControl();\n\t\tconst oObjectPageSubtitle = oObjectPage.getCustomData().find(function (oCustomData) {\n\t\t\treturn oCustomData.getKey() === \"ObjectPageSubtitle\";\n\t\t});\n\t\tconst oObjectPageDescription = oObjectPage.getCustomData().find(function (oCustomData) {\n\t\t\treturn oCustomData.getKey() === \"ObjectPageDescription\";\n\t\t});\n\t\tconst extractPaths = (bindingInfo?: { parts?: { path?: string; model?: string }[] }): string[] =>\n\t\t\tArray.from(\n\t\t\t\tnew Set(\n\t\t\t\t\t(bindingInfo?.parts || [])\n\t\t\t\t\t\t.filter((part) => !part.model)\n\t\t\t\t\t\t.map((part) => part.path || \"\")\n\t\t\t\t\t\t.filter(Boolean)\n\t\t\t\t)\n\t\t\t);\n\t\tconst subtitlePaths = extractPaths(oObjectPageSubtitle?.getBindingInfo(\"value\"));\n\t\tconst descriptionPaths = extractPaths(oObjectPageDescription?.getBindingInfo(\"value\"));\n\t\tconst pathsToResolve = [...subtitlePaths, ...descriptionPaths];\n\t\tconst appComponent = this.getAppComponent();\n\t\tconst rootViewController = appComponent.getRootViewController();\n\t\tconst fnClearCacheTitle = (): void => {\n\t\t\trootViewController.clearTitleHierarchyCache(oObjectPage.getBindingContext()?.getPath() as string);\n\t\t};\n\t\tif (oObjectPageSubtitle && !this.clearTitleHierarchyCacheSetUp) {\n\t\t\toObjectPageSubtitle.getBinding(\"value\")?.attachChange(fnClearCacheTitle, this);\n\t\t\tthis.clearTitleHierarchyCacheSetUp = true;\n\t\t}\n\t\tconst oObjectPageContext = oObjectPage.getBindingContext();\n\t\tconst build = (): { title: string; subtitle: string; intent: string; icon: string; description: string } => ({\n\t\t\ttitle: oObjectPage.data(\"ObjectPageTitle\") ?? \"\",\n\t\t\tsubtitle: oObjectPageSubtitle?.getValue() ?? \"\",\n\t\t\tintent: \"\",\n\t\t\ticon: \"\",\n\t\t\tdescription: oObjectPageDescription?.getValue() ?? \"\"\n\t\t});\n\t\t//if no context or nothing to resolve, direct return\n\t\tif (!oObjectPageContext || pathsToResolve.length === 0) {\n\t\t\treturn Promise.resolve(build());\n\t\t}\n\t\tawait Promise.all(pathsToResolve.map(async (p) => (oObjectPageContext as ODataV4Context).requestObject(p).catch(() => undefined)));\n\t\treturn build();\n\t}\n\n\t_executeTabShortCut(oExecution: UI5Event): void {\n\t\tconst oObjectPage = this._getObjectPageLayoutControl(),\n\t\t\taSections = oObjectPage.getSections(),\n\t\t\tiSectionIndexMax = aSections.length - 1,\n\t\t\tsCommand = (oExecution.getSource() as unknown as CommandExecution).getCommand();\n\t\tlet newSection,\n\t\t\tiSelectedSectionIndex = oObjectPage.indexOfSection(this.byId(oObjectPage.getSelectedSection()!) as ObjectPageSection);\n\t\tif (iSelectedSectionIndex !== -1 && iSectionIndexMax > 0) {\n\t\t\tif (sCommand === \"NextTab\") {\n\t\t\t\tif (iSelectedSectionIndex <= iSectionIndexMax - 1) {\n\t\t\t\t\tnewSection = aSections[++iSelectedSectionIndex];\n\t\t\t\t}\n\t\t\t} else if (iSelectedSectionIndex !== 0) {\n\t\t\t\t// PreviousTab\n\t\t\t\tnewSection = aSections[--iSelectedSectionIndex];\n\t\t\t}\n\n\t\t\tif (newSection) {\n\t\t\t\toObjectPage.setSelectedSection(newSection);\n\t\t\t\tnewSection.focus();\n\t\t\t}\n\t\t}\n\t}\n\n\t_getFooterVisibility(): void {\n\t\tconst oInternalModelContext = this.getView().getBindingContext(\"internal\") as InternalModelContext;\n\t\tconst sViewId = this.getView().getId();\n\t\toInternalModelContext.setProperty(\"messageFooterContainsErrors\", false);\n\t\tconst isHiddenDraftEnabled = (this.getAppComponent().getEnvironmentCapabilities().getCapabilities().HiddenDraft as HiddenDraft)\n\t\t\t?.enabled;\n\t\tMessaging.getMessageModel()\n\t\t\t.getData()\n\t\t\t.forEach(function (oMessage: Message): void {\n\t\t\t\tconst isErrorMessage = oMessage.validation && oMessage.getType() === \"Error\";\n\t\t\t\tconst messageValidation = isHiddenDraftEnabled\n\t\t\t\t\t? isErrorMessage\n\t\t\t\t\t: isErrorMessage && oMessage.getTargets().some((target) => target.includes(sViewId));\n\t\t\t\tif (messageValidation) {\n\t\t\t\t\toInternalModelContext.setProperty(\"messageFooterContainsErrors\", true);\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\t_showMessagePopover(err?: string, oRet?: unknown): unknown {\n\t\tif (err) {\n\t\t\tLog.error(err);\n\t\t}\n\t\tconst isEditMode = CommonUtils.getIsEditable(this.getView());\n\t\tconst rootViewController = this.getAppComponent().getRootViewController();\n\t\tconst currentPageView = rootViewController.isFclEnabled()\n\t\t\t? rootViewController.getRightmostView()\n\t\t\t: (this.getAppComponent().getRootContainer() as NavContainer).getCurrentPage();\n\t\tif (isEditMode && !currentPageView.isA(\"sap.m.MessagePage\")) {\n\t\t\tconst oMessageButton = this.messageButton,\n\t\t\t\toMessagePopover = oMessageButton.oMessagePopover,\n\t\t\t\toItemBinding = oMessagePopover.getBinding(\"items\") as ListBinding;\n\n\t\t\tif (oItemBinding.getLength() > 0 && !oMessagePopover.isOpen()) {\n\t\t\t\toMessageButton.setVisible(true);\n\t\t\t\t// workaround to ensure that oMessageButton is rendered when openBy is called\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\toMessagePopover.openBy(oMessageButton);\n\t\t\t\t}, 0);\n\t\t\t}\n\t\t}\n\t\treturn oRet;\n\t}\n\n\tasync _editDocument(): Promise<void | Context> {\n\t\tconst oContext = this.getView().getBindingContext();\n\t\tconst oModel = this.getView().getModel(\"ui\");\n\t\tBusyLocker.lock(oModel);\n\t\treturn this.editFlow.editDocument.apply(this.editFlow, [oContext]).finally(function () {\n\t\t\tBusyLocker.unlock(oModel);\n\t\t});\n\t}\n\n\t/**\n\t * Returns the default semantic object mapping object.\n\t * @private\n\t * @param propertyPath The value of the data point property path\n\t * @param semanticObject The semantic object\n\t * @returns The array of the default semantic object mapping object\n\t */\n\t_getImplicitSemanticObjectMappingForDataPoints(\n\t\tpropertyPath: string,\n\t\tsemanticObject: string\n\t): MetaModelType<SemanticObjectMappingType>[] {\n\t\treturn [\n\t\t\t{\n\t\t\t\tLocalProperty: {\n\t\t\t\t\t$PropertyPath: propertyPath\n\t\t\t\t},\n\t\t\t\tSemanticObjectProperty: semanticObject\n\t\t\t}\n\t\t];\n\t}\n\n\t/**\n\t * Executes the validation of the document\n\t * One of the following actions is triggered on the draft version of the document:\n\t * - on a transient context:\n\t * - if the context gets data, wait for the creation of the context and execute the global validation\n\t * - if no data is found on this context, only the prepareAction is requested\n\t * - on a regular context, the global validation is requested.\n\t * @returns Promise of the global validation or undefined if not executed\n\t */\n\tasync _validateDocument(): Promise<void | unknown[] | ODataContextBinding> {\n\t\tconst control = UI5Element.getActiveElement() as Control;\n\t\tconst context = control?.getBindingContext() as ODataV4Context | undefined;\n\n\t\tif (!control || !context) {\n\t\t\treturn undefined;\n\t\t}\n\t\tlet byPassSideEffects = false;\n\t\tif (context.isTransient()) {\n\t\t\tif (context.hasPendingChanges()) {\n\t\t\t\tawait context.created();\n\t\t\t} else {\n\t\t\t\tbyPassSideEffects = true;\n\t\t\t}\n\t\t}\n\t\tthis.messageHandler.holdMessagesForControl(control);\n\t\tconst ret = await this.executeGlobalValidation(context, byPassSideEffects);\n\t\tthis.messageHandler.showMessages({ control });\n\t\treturn ret;\n\t}\n\n\t/**\n\t * Executes the global validation of the draft\n\t * One of the following actions is triggered on the draft version of the document:\n\t * - the global side effects are executed if these side effects are defined in the context\n\t * - the draft Validation on the DraftRoot context.\n\t * @param context The Context\n\t * @param byPassSideEffects Only the draft Validation step is executed\n\t * @returns Promise of the global validation\n\t */\n\tasync executeGlobalValidation(context: ODataV4Context, byPassSideEffects = false): Promise<void | unknown[] | ODataContextBinding> {\n\t\tconst appComponent = this.getAppComponent();\n\t\t// the draft validation is treated as a user interaction, and the service must return transition messages again if still valid\n\t\tthis.messageHandler.removeTransitionMessages();\n\t\tif (!byPassSideEffects) {\n\t\t\tconst sideEffectsService = appComponent.getSideEffectsService();\n\t\t\tconst entityType = sideEffectsService.getEntityTypeFromContext(context);\n\t\t\tconst globalSideEffects = entityType ? sideEffectsService.getGlobalODataEntitySideEffects(entityType) : [];\n\t\t\t// If there is at least one global SideEffects for the related entity, execute it/them\n\t\t\tif (globalSideEffects.length) {\n\t\t\t\tawait this.editFlow.syncTask();\n\t\t\t\treturn Promise.all(\n\t\t\t\t\tglobalSideEffects.map(async (sideEffects) => this._sideEffects.requestSideEffects(sideEffects, context))\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tconst draftRootContext = (await CommonUtils.createRootContext(\n\t\t\tProgrammingModel.Draft,\n\t\t\tthis.getView(),\n\t\t\tappComponent\n\t\t)) as ODataV4Context;\n\t\t//Execute the draftValidation if there is no globalSideEffects (ignore ETags in collaboration draft)\n\t\tif (draftRootContext) {\n\t\t\tawait this.editFlow.syncTask();\n\t\t\treturn draft.executeDraftValidation(draftRootContext, appComponent, this.collaborativeDraft.isConnected());\n\t\t}\n\t}\n\n\t/**\n\t * Saves the draft version of the document\n\t * If data has been provided on the creation rows, the related documents are created\n\t * before saving the draft version.\n\t * @param skipBindingToView Indicates if the binding to the view should be skipped\n\t * @returns Promise\n\t */\n\tasync _saveDocument(skipBindingToView?: boolean): Promise<void> {\n\t\tconst context = this.getView().getBindingContext();\n\t\tconst model = this.getView().getModel(\"ui\"),\n\t\t\tawaitCreateDocuments: Promise<void | ODataListBinding>[] = [];\n\t\t// indicates if we are creating a new row in the OP\n\t\tlet executeSideEffectsOnError = false;\n\t\tBusyLocker.lock(model);\n\t\ttry {\n\t\t\tif (this.collaborativeDraft.isCollaborationEnabled()) {\n\t\t\t\ttry {\n\t\t\t\t\tconst dialogAction = await new CollaborationDiscard(this.getView(), true).getUserAction();\n\t\t\t\t\t// We cancel the action\n\t\t\t\t\tif (dialogAction === \"cancel\") {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\t// We keep the draft and leave for LR\n\t\t\t\t\tif (dialogAction === \"keepDraft\") {\n\t\t\t\t\t\tthis.collaborativeDraft.disconnect();\n\t\t\t\t\t\tawait this._routing.navigateBackFromContext(context);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t} catch (err) {\n\t\t\t\t\tLog.error(`Something went wrong with collaboration discard: ${err}`);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tawait this.editFlow.syncTask();\n\t\t\tthis._findTables().forEach((table: Table) => {\n\t\t\t\tconst creationRow = table.getCreationRow();\n\t\t\t\tconst tableBinding = this._getTableBinding(table);\n\t\t\t\tconst contextKeys = Object.keys((creationRow?.getBindingContext() as ODataV4Context | undefined)?.getObject() || {});\n\t\t\t\tif (contextKeys.filter((key) => !key.startsWith(\"@$ui5.\")).length) {\n\t\t\t\t\texecuteSideEffectsOnError = true;\n\t\t\t\t\tawaitCreateDocuments.push(\n\t\t\t\t\t\tthis.editFlow\n\t\t\t\t\t\t\t.createDocument(tableBinding, {\n\t\t\t\t\t\t\t\tcreationMode: table.data(\"creationMode\"),\n\t\t\t\t\t\t\t\tcreationRow: creationRow,\n\t\t\t\t\t\t\t\tcreateAtEnd: table.data(\"createAtEnd\") === \"true\",\n\t\t\t\t\t\t\t\tskipSideEffects: true // the skipSideEffects is a parameter created when we click the save key. If we press this key, we don't execute the handleSideEffects funciton to avoid batch redundancy\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.then(() => tableBinding)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\t\t\tconst isSkipBindingToView = skipBindingToView as unknown as CommandExecution$ExecuteEvent;\n\t\t\tconst isStandardSave =\n\t\t\t\tisSkipBindingToView && typeof isSkipBindingToView == \"object\" && isSkipBindingToView.getSource().getCommand() === \"Save\";\n\n\t\t\tconst bindings = await Promise.all(awaitCreateDocuments);\n\t\t\t// We need to either reject or resolve a promise here and return it since this save\n\t\t\t// function is not only called when pressing the save button in the footer, but also\n\t\t\t// when the user selects create or save in a dataloss popup.\n\t\t\t// The logic of the dataloss popup needs to detect if the save had errors or not in order\n\t\t\t// to decide if the subsequent action - like a back navigation - has to be executed or not.\n\t\t\ttry {\n\t\t\t\tawait this.editFlow.saveDocument(context, {\n\t\t\t\t\tbExecuteSideEffectsOnError: executeSideEffectsOnError,\n\t\t\t\t\tbindings: bindings as unknown as ODataListBinding[],\n\t\t\t\t\tmergePatchDraft: this.mergePatchDraft,\n\t\t\t\t\tskipBindingToView,\n\t\t\t\t\tisStandardSave\n\t\t\t\t});\n\t\t\t} catch (error: unknown) {\n\t\t\t\t// If the saveDocument in editFlow returns errors we need\n\t\t\t\t// to show the message popover here and ensure that the\n\t\t\t\t// dataloss logic does not perform the follow up function\n\t\t\t\t// like e.g. a back navigation hence we return a promise and reject it\n\t\t\t\tif (error !== RecommendationDialogDecision.Continue) {\n\t\t\t\t\tthis._showMessagePopover(error as string);\n\t\t\t\t}\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t} finally {\n\t\t\tif (BusyLocker.isLocked(model)) {\n\t\t\t\tBusyLocker.unlock(model);\n\t\t\t}\n\t\t}\n\t}\n\n\tasync _cancelDocument(mParameters: { cancelButton: string }): Promise<Context | void> {\n\t\tconst context = this.getView()?.getBindingContext();\n\t\tconst cancelButton = this.getView().byId(mParameters.cancelButton) as Button | undefined; //to get the reference of the cancel button from command execution\n\t\tconst lastFocusedControlId = UI5Element.getActiveElement()?.getId();\n\t\tlet shouldSkipDiscardPopover = false;\n\t\tif (this.collaborativeDraft.isCollaborationEnabled()) {\n\t\t\ttry {\n\t\t\t\tconst dialogAction = await new CollaborationDiscard(this.getView(), false).getUserAction();\n\t\t\t\t// We cancel the action\n\t\t\t\tif (dialogAction === \"cancel\") {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t// We keep the draft and leave for LR\n\t\t\t\tif (dialogAction === \"keepDraft\") {\n\t\t\t\t\tthis.collaborativeDraft.disconnect();\n\t\t\t\t\tawait this._routing.navigateBackFromContext(context);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t// We have displayed the dialog and the user confirmed the discard -> We skip the discard confirmation\n\t\t\t\tif (dialogAction === \"discardConfirmed\") {\n\t\t\t\t\tshouldSkipDiscardPopover = true;\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\tLog.error(\"Cannot get collaborative users\");\n\t\t\t}\n\t\t}\n\t\tconst isDocumentModified =\n\t\t\t!!this.getView().getModel(\"ui\").getProperty(UiModelConstants.DocumentModified) ||\n\t\t\t(!this.getStickyEditMode() && context.getProperty(\"HasActiveEntity\") === false);\n\t\tconst afterCancel: Function = (promiseResult: ODataV4Context) => {\n\t\t\t// focus is retained on the last focused element\n\t\t\tif (lastFocusedControlId !== undefined) {\n\t\t\t\tUI5Element.getElementById(lastFocusedControlId)?.focus();\n\t\t\t}\n\t\t\treturn promiseResult;\n\t\t};\n\t\tif (\n\t\t\t(this.getAppComponent()?.getEnvironmentCapabilities()?.getCapabilities()?.HiddenDraft as HiddenDraft)?.enabled &&\n\t\t\tisDocumentModified\n\t\t) {\n\t\t\treturn draft.processDataLossOrDraftDiscardConfirmation(\n\t\t\t\tafterCancel,\n\t\t\t\tFunction.prototype,\n\t\t\t\tcontext,\n\t\t\t\tthis,\n\t\t\t\tfalse,\n\t\t\t\tdraft.NavigationType.BackNavigation,\n\t\t\t\ttrue\n\t\t\t);\n\t\t}\n\t\treturn this.editFlow\n\t\t\t.cancelDocument(context, { control: cancelButton, skipDiscardPopover: shouldSkipDiscardPopover })\n\t\t\t.then((promiseResult) => {\n\t\t\t\treturn afterCancel(promiseResult);\n\t\t\t});\n\t}\n\n\tasync _applyDocument(oContext: ODataV4Context): Promise<void> {\n\t\treturn this.editFlow.applyDocument(oContext).catch(() => {\n\t\t\tthis._showMessagePopover();\n\t\t\treturn;\n\t\t});\n\t}\n\n\t_updateRelatedApps(): void {\n\t\tconst oObjectPage = this._getObjectPageLayoutControl();\n\t\tconst showRelatedApps = oObjectPage.data(\"showRelatedApps\");\n\t\tif (showRelatedApps === \"true\" || showRelatedApps === true) {\n\t\t\tconst appComponent = CommonUtils.getAppComponent(this.getView());\n\t\t\tCommonUtils.updateRelatedAppsDetails(oObjectPage, appComponent);\n\t\t}\n\t}\n\n\t_findControlInSubSection(aParentElement: Control[], aSubsection: ObjectPageSubSection, aControls: Control[], bIsChart?: boolean): void {\n\t\tfor (const item1 of aParentElement) {\n\t\t\tlet oElement = (item1 as MacroAPI).getContent instanceof Function ? (item1 as MacroAPI).getContent() : undefined;\n\t\t\tif (bIsChart) {\n\t\t\t\tif (oElement?.getAggregation(\"items\")) {\n\t\t\t\t\tconst items = oElement.getAggregation(\"items\") as Control[];\n\t\t\t\t\titems.forEach(function (item: Control) {\n\t\t\t\t\t\tif (item.isA<ChartBlock>(\"sap.fe.macros.Chart\")) {\n\t\t\t\t\t\t\tconst chartControl = item.getChartControl();\n\t\t\t\t\t\t\taControls.push(chartControl);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (oElement && oElement.isA && oElement.isA<DynamicSideContent>(\"sap.ui.layout.DynamicSideContent\")) {\n\t\t\t\t\tconst oSubElement = oElement.getMainContent instanceof Function ? oElement.getMainContent() : undefined;\n\t\t\t\t\tif (oSubElement && oSubElement.length > 0) {\n\t\t\t\t\t\toElement = oSubElement[0];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// The table may currently be shown in a full screen dialog, we can then get the reference to the TableAPI\n\t\t\t\t// control from the custom data of the place holder panel\n\t\t\t\tif (oElement && oElement.isA && oElement.isA(\"sap.m.Panel\") && oElement.data(\"FullScreenTablePlaceHolder\")) {\n\t\t\t\t\toElement = oElement.data(\"tableAPIreference\");\n\t\t\t\t}\n\t\t\t\tif (oElement && oElement.isA && oElement.isA<TableAPI>(\"sap.fe.macros.table.TableAPI\")) {\n\t\t\t\t\tconst oSubElement = oElement.getContent instanceof Function ? oElement.getContent() : undefined;\n\t\t\t\t\tif (oSubElement && oSubElement.isA && oSubElement.isA<Table>(\"sap.ui.mdc.Table\")) {\n\t\t\t\t\t\taControls.push(oSubElement);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t_getAllSubSections(): ObjectPageSubSection[] {\n\t\tconst oObjectPage = this._getObjectPageLayoutControl();\n\t\tlet aSubSections: ObjectPageSubSection[] = [];\n\t\toObjectPage.getSections().forEach(function (oSection: ObjectPageSection) {\n\t\t\taSubSections = aSubSections.concat(oSection.getSubSections());\n\t\t});\n\t\treturn aSubSections;\n\t}\n\n\t_getAllBlocks(): EnhanceWithUI5<SubSectionBlock>[] {\n\t\tlet aBlocks: EnhanceWithUI5<SubSectionBlock>[] = [];\n\t\tthis._getAllSubSections().forEach(function (oSubSection: ObjectPageSubSection) {\n\t\t\taBlocks = aBlocks.concat(oSubSection.getBlocks() as EnhanceWithUI5<SubSectionBlock>[]);\n\t\t});\n\t\treturn aBlocks;\n\t}\n\n\t_findTables(): Table[] {\n\t\tconst aSubSections = this._getAllSubSections();\n\t\tconst aTables: Table[] = [];\n\t\tfor (let subSection = 0; subSection < aSubSections.length; subSection++) {\n\t\t\tthis._findControlInSubSection(aSubSections[subSection].getBlocks(), aSubSections[subSection], aTables);\n\t\t\tthis._findControlInSubSection(aSubSections[subSection].getMoreBlocks(), aSubSections[subSection], aTables);\n\t\t}\n\t\treturn aTables;\n\t}\n\n\t_findCharts(): Chart[] {\n\t\tconst aSubSections = this._getAllSubSections();\n\t\tconst aCharts: Chart[] = [];\n\t\tfor (let subSection = 0; subSection < aSubSections.length; subSection++) {\n\t\t\tthis._findControlInSubSection(aSubSections[subSection].getBlocks(), aSubSections[subSection], aCharts, true);\n\t\t\tthis._findControlInSubSection(aSubSections[subSection].getMoreBlocks(), aSubSections[subSection], aCharts, true);\n\t\t}\n\t\treturn aCharts;\n\t}\n\n\t_closeSideContent(): void {\n\t\tthis._getAllBlocks().forEach(function (oBlock: EnhanceWithUI5<SubSectionBlock>): void {\n\t\t\tconst oContent = oBlock.getContent instanceof Function && oBlock.getContent();\n\t\t\tif (oContent && oContent.isA && oContent.isA<DynamicSideContent>(\"sap.ui.layout.DynamicSideContent\")) {\n\t\t\t\tif (oContent.setShowSideContent instanceof Function) {\n\t\t\t\t\toContent.setShowSideContent(false, false);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Chart Context is resolved for 1:n microcharts.\n\t * @param oChartContext The Context of the MicroChart\n\t * @param sChartPath The collectionPath of the the chart\n\t * @returns Array of Attributes of the chart Context\n\t */\n\t_getChartContextData(oChartContext: Context, sChartPath: string): unknown[] {\n\t\tconst oContextData = oChartContext.getObject();\n\t\tlet oChartContextData = [oContextData];\n\t\tif (oChartContext && sChartPath) {\n\t\t\tif (oContextData[sChartPath]) {\n\t\t\t\toChartContextData = oContextData[sChartPath];\n\t\t\t\tdelete oContextData[sChartPath];\n\t\t\t\toChartContextData.push(oContextData);\n\t\t\t}\n\t\t}\n\t\treturn oChartContextData;\n\t}\n\n\t/**\n\t * Scroll the tables to the row with the sPath\n\t * @param {string} sRowPath 'sPath of the table row'\n\t */\n\n\t_scrollTablesToRow(sRowPath: string): void {\n\t\tif (this._findTables && this._findTables().length > 0) {\n\t\t\tconst aTables = this._findTables();\n\t\t\tfor (const item of aTables) {\n\t\t\t\tTableScroller.scrollTableToRow(item, sRowPath);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Method to merge selected contexts and filters.\n\t * @param oPageContext Page context\n\t * @param aLineContext Selected Contexts\n\t * @param sChartPath Collection name of the chart\n\t * @returns Selection Variant Object\n\t */\n\t_mergeMultipleContexts(\n\t\toPageContext: Context,\n\t\taLineContext: ODataV4Context[],\n\t\tsChartPath: string\n\t): { selectionVariant: SelectionVariant; attributes: unknown[] } {\n\t\tlet aAttributes: unknown[] = [],\n\t\t\taPageAttributes = [],\n\t\t\toContext,\n\t\t\tsMetaPathLine: string,\n\t\t\tsPathLine;\n\n\t\tconst sPagePath = oPageContext.getPath();\n\t\tconst oMetaModel = oPageContext && oPageContext.getModel() && oPageContext.getModel().getMetaModel();\n\t\tconst sMetaPathPage = oMetaModel && oMetaModel.getMetaPath(sPagePath).replace(/^\\/*/, \"\");\n\n\t\t// Get single line context if necessary\n\t\tif (aLineContext && aLineContext.length) {\n\t\t\toContext = aLineContext[0];\n\t\t\tsPathLine = oContext.getPath();\n\t\t\tsMetaPathLine = oMetaModel && oMetaModel.getMetaPath(sPathLine).replace(/^\\/*/, \"\");\n\n\t\t\taLineContext.forEach((oSingleContext: ODataV4Context): void => {\n\t\t\t\tif (sChartPath) {\n\t\t\t\t\tconst oChartContextData = this._getChartContextData(oSingleContext, sChartPath);\n\t\t\t\t\tif (oChartContextData) {\n\t\t\t\t\t\taAttributes = oChartContextData.map(function (oSubChartContextData: unknown) {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tcontextData: oSubChartContextData,\n\t\t\t\t\t\t\t\tentitySet: `${sMetaPathPage}/${sChartPath}`\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\taAttributes.push({\n\t\t\t\t\t\tcontextData: oSingleContext.getObject(),\n\t\t\t\t\t\tentitySet: sMetaPathLine\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\taPageAttributes.push({\n\t\t\tcontextData: oPageContext.getObject(),\n\t\t\tentitySet: sMetaPathPage\n\t\t});\n\t\t// Adding Page Context to selection variant\n\t\taPageAttributes = this._intentBasedNavigation.removeSensitiveData(aPageAttributes, sMetaPathPage);\n\t\tconst oPageLevelSV = CommonUtils.addPageContextToSelectionVariant(new SelectionVariant(), aPageAttributes, this.getView());\n\t\taAttributes = this._intentBasedNavigation.removeSensitiveData(aAttributes, sMetaPathPage);\n\t\treturn {\n\t\t\tselectionVariant: oPageLevelSV,\n\t\t\tattributes: aAttributes\n\t\t};\n\t}\n\n\t_getBatchGroupsForView(): string[] {\n\t\tconst oViewData = this.getView().getViewData(),\n\t\t\toConfigurations = oViewData.controlConfiguration,\n\t\t\taConfigurations = oConfigurations && Object.keys(oConfigurations),\n\t\t\taBatchGroups = [\"$auto.Heroes\", \"$auto.Decoration\", \"$auto.Workers\"];\n\n\t\tif (aConfigurations && aConfigurations.length > 0) {\n\t\t\taConfigurations.forEach(function (sKey) {\n\t\t\t\tconst oConfiguration = oConfigurations[sKey] as MicroChartManifestConfiguration;\n\t\t\t\tif (oConfiguration.requestGroupId === \"LongRunners\") {\n\t\t\t\t\taBatchGroups.push(\"$auto.LongRunners\");\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn aBatchGroups;\n\t}\n\n\t/**\n\t * Method to initialize pagination.\n\t * @param context Context of object page\n\t * @param internalModel Internal model\n\t * @param listBinding Parent list binding to use\n\t */\n\t_initializePagination(context: ODataV4Context, internalModel: JSONModel, listBinding?: ODataListBinding): void {\n\t\tconst viewLevel = this.getView().getViewData().viewLevel;\n\t\tif (viewLevel > 1) {\n\t\t\tconst paginatorCurrentContext = internalModel.getProperty(\"/paginatorCurrentContext\");\n\t\t\tif (paginatorCurrentContext) {\n\t\t\t\tconst bindingToUse = paginatorCurrentContext.getBinding();\n\t\t\t\tthis.paginator.initialize(bindingToUse, paginatorCurrentContext);\n\t\t\t\tinternalModel.setProperty(\"/paginatorCurrentContext\", null);\n\t\t\t} else if (listBinding) {\n\t\t\t\tthis.paginator.initialize(listBinding, context);\n\t\t\t}\n\t\t}\n\t}\n\n\t_checkDataPointTitleForExternalNavigation(): void {\n\t\tconst oView = this.getView();\n\t\tconst oInternalModelContext = oView.getBindingContext(\"internal\") as InternalModelContext;\n\t\tconst oDataPoints = CommonUtils.getHeaderFacetItemConfigForExternalNavigation(\n\t\t\toView.getViewData() as Record<string, unknown>,\n\t\t\tthis.getAppComponent().getRoutingService().getOutbounds()\n\t\t);\n\t\tconst oShellServices = this.getAppComponent().getShellServices();\n\t\tconst oPageContext = oView && oView.getBindingContext();\n\t\toInternalModelContext.setProperty(\"isHeaderDPLinkVisible\", {});\n\t\tif (oPageContext) {\n\t\t\toPageContext\n\t\t\t\t.requestObject()\n\t\t\t\t.then(function (oData: object) {\n\t\t\t\t\treturn fnGetLinks(oDataPoints, oData);\n\t\t\t\t})\n\t\t\t\t.catch(function (oError: unknown) {\n\t\t\t\t\tLog.error(\"Cannot retrieve the links from the shell service\", oError as string);\n\t\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t * @param oError\n\t\t */\n\t\tfunction fnOnError(oError: string): void {\n\t\t\tLog.error(oError);\n\t\t}\n\n\t\tfunction fnSetLinkEnablement(id: string, aSupportedLinks: { supported?: boolean }[]): void {\n\t\t\tconst sLinkId = id;\n\t\t\t// process viable links from getLinks for all datapoints having outbound\n\t\t\tif (aSupportedLinks && aSupportedLinks.length === 1 && aSupportedLinks[0].supported) {\n\t\t\t\toInternalModelContext.setProperty(`isHeaderDPLinkVisible/${sLinkId}`, true);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * @param oSubDataPoints\n\t\t * @param oPageData\n\t\t */\n\t\tfunction fnGetLinks(\n\t\t\toSubDataPoints: Record<\n\t\t\t\tstring,\n\t\t\t\t{\n\t\t\t\t\tsemanticObject: string;\n\t\t\t\t\taction: string;\n\t\t\t\t\tsemanticObjectMapping: MetaModelType<SemanticObjectMappingType>[];\n\t\t\t\t}\n\t\t\t>,\n\t\t\toPageData: object\n\t\t): void {\n\t\t\tfor (const sId in oSubDataPoints) {\n\t\t\t\tconst oDataPoint = oSubDataPoints[sId];\n\t\t\t\tconst oParams: Record<string, unknown> = {};\n\t\t\t\tconst oLink = oView.byId(sId);\n\t\t\t\tif (!oLink) {\n\t\t\t\t\t// for data points configured in app descriptor but not annotated in the header\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tconst oLinkContext = oLink.getBindingContext();\n\t\t\t\tconst oLinkData: object = oLinkContext && oLinkContext.getObject();\n\t\t\t\tlet oMixedContext: Record<string, unknown> = merge({}, oPageData, oLinkData) as Record<string, unknown>;\n\t\t\t\t// process semantic object mappings\n\t\t\t\tif (oDataPoint.semanticObjectMapping) {\n\t\t\t\t\tconst aSemanticObjectMapping = oDataPoint.semanticObjectMapping;\n\t\t\t\t\tfor (const item in aSemanticObjectMapping) {\n\t\t\t\t\t\tconst oMapping = aSemanticObjectMapping[item];\n\t\t\t\t\t\tconst sMainProperty = oMapping[\"LocalProperty\"]![\"$PropertyPath\"];\n\t\t\t\t\t\tconst sMappedProperty = oMapping[\"SemanticObjectProperty\"]!;\n\t\t\t\t\t\tif (sMainProperty !== sMappedProperty) {\n\t\t\t\t\t\t\tif (oMixedContext.hasOwnProperty(sMainProperty)) {\n\t\t\t\t\t\t\t\tconst oNewMapping: Record<string, unknown> = {};\n\t\t\t\t\t\t\t\toNewMapping[sMappedProperty] = oMixedContext[sMainProperty];\n\t\t\t\t\t\t\t\toMixedContext = merge({}, oMixedContext, oNewMapping) as Record<string, unknown>;\n\t\t\t\t\t\t\t\tdelete oMixedContext[sMainProperty];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (oMixedContext) {\n\t\t\t\t\tfor (const sKey in oMixedContext) {\n\t\t\t\t\t\tif (!sKey.startsWith(\"_\") && !sKey.includes(\"odata.context\")) {\n\t\t\t\t\t\t\toParams[sKey] = oMixedContext[sKey];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// validate if a link must be rendered\n\t\t\t\toShellServices\n\t\t\t\t\t.isNavigationSupported([\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttarget: {\n\t\t\t\t\t\t\t\tsemanticObject: oDataPoint.semanticObject,\n\t\t\t\t\t\t\t\taction: oDataPoint.action\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tparams: oParams\n\t\t\t\t\t\t}\n\t\t\t\t\t])\n\t\t\t\t\t.then((aLinks) => {\n\t\t\t\t\t\treturn fnSetLinkEnablement(sId, aLinks);\n\t\t\t\t\t})\n\t\t\t\t\t.catch(fnOnError);\n\t\t\t}\n\t\t}\n\t}\n\n\thandlers = {\n\t\tonPrimaryAction(\n\t\t\toController: ObjectPageController,\n\t\t\toView: FEView,\n\t\t\toContext: ODataV4Context,\n\t\t\tsActionName: string,\n\t\t\tmParameters: {\n\t\t\t\tparameterValues?: { name: string; value: unknown }[];\n\t\t\t\tskipParameterDialog?: boolean;\n\t\t\t\tcontexts?: ODataV4Context | ODataV4Context[];\n\t\t\t\tmodel?: ODataModel;\n\t\t\t\trequiresNavigation?: boolean;\n\t\t\t\tlabel?: string;\n\t\t\t\tisNavigable?: boolean;\n\t\t\t\tentitySetName?: string;\n\t\t\t\tinvocationGrouping?: string;\n\t\t\t\toperationAvailableMap?: string;\n\t\t\t\tcontrolId?: string;\n\t\t\t\tbStaticAction?: boolean;\n\t\t\t\tapplicableContexts?: ODataV4Context[];\n\t\t\t\tnotApplicableContexts?: ODataV4Context[];\n\t\t\t\tenableAutoScroll?: boolean;\n\t\t\t\tdefaultValuesExtensionFunction?: string;\n\t\t\t},\n\t\t\tmConditions: {\n\t\t\t\tpositiveActionVisible: boolean;\n\t\t\t\tpositiveActionEnabled: boolean;\n\t\t\t\teditActionVisible: boolean;\n\t\t\t\teditActionEnabled: boolean;\n\t\t\t}\n\t\t): void {\n\t\t\t/**\n\t\t\t * Invokes the page primary action on press of Ctrl+Enter.\n\t\t\t */\n\t\t\tconst iViewLevel = oController.getView().getViewData().viewLevel;\n\t\t\tif (mConditions.positiveActionVisible) {\n\t\t\t\tif (mConditions.positiveActionEnabled) {\n\t\t\t\t\toController.handlers.onCallAction(oView, sActionName, mParameters);\n\t\t\t\t}\n\t\t\t} else if (mConditions.editActionVisible) {\n\t\t\t\tif (mConditions.editActionEnabled) {\n\t\t\t\t\toController._editDocument();\n\t\t\t\t}\n\t\t\t} else if (iViewLevel === 1 && CommonUtils.getIsEditable(oView)) {\n\t\t\t\toController._saveDocument();\n\t\t\t} else if (CommonUtils.getIsEditable(oView)) {\n\t\t\t\toController._applyDocument(oContext);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Manages the context change event on the tables.\n\t\t * The focus is set if this change is related to an editFlow action and\n\t\t * an event is fired on the objectPage messageButton.\n\t\t * @param this The objectPage controller\n\t\t * @param event The UI5 event\n\t\t */\n\t\tasync onTableContextChange(this: ObjectPageController, event: UI5Event<{}, TableAPI>): Promise<void> {\n\t\t\tconst tableAPI = event.getSource();\n\t\t\tconst table = tableAPI.content;\n\t\t\tconst currentActionPromise = this.editFlow.getCurrentActionPromise();\n\t\t\tconst tableContexts = this._getTableBinding(table)?.getCurrentContexts();\n\n\t\t\tif (currentActionPromise && tableContexts?.length) {\n\t\t\t\ttry {\n\t\t\t\t\tconst actionResponse = await currentActionPromise;\n\t\t\t\t\tif (actionResponse?.controlId === table.getId()) {\n\t\t\t\t\t\tconst actionData = actionResponse.oData;\n\t\t\t\t\t\tconst keys = actionResponse.keys;\n\t\t\t\t\t\tconst newItem = tableContexts.findIndex((tableContext: Context) => {\n\t\t\t\t\t\t\tconst tableData = tableContext.getObject();\n\t\t\t\t\t\t\treturn keys.every((key: string) => tableData[key] === actionData[key]);\n\t\t\t\t\t\t});\n\t\t\t\t\t\tif (newItem !== -1) {\n\t\t\t\t\t\t\tconst dialog = InstanceManager.getOpenDialogs().find((dialog) => dialog.data(\"FullScreenDialog\") !== true);\n\t\t\t\t\t\t\tif (dialog) {\n\t\t\t\t\t\t\t\t// by design, a sap.m.dialog set the focus to the previous focused element when closing.\n\t\t\t\t\t\t\t\t// we should wait for the dialog to be closed before set the focus to another element\n\t\t\t\t\t\t\t\tdialog.attachEventOnce(\"afterClose\", () => {\n\t\t\t\t\t\t\t\t\ttable.focusRow(newItem, true);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\ttable.focusRow(newItem, true);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.editFlow.deleteCurrentActionPromise();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\tLog.error(`An error occurs while scrolling to the newly created Item: ${e}`);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// fire ModelContextChange on the message button whenever the table context changes\n\t\t\tthis.messageButton.fireModelContextChange();\n\t\t},\n\n\t\tasync onCallAction(\n\t\t\toView: FEView,\n\t\t\tsActionName: string,\n\t\t\tmParameters: {\n\t\t\t\tparameterValues?: { name: string; value: unknown }[];\n\t\t\t\tskipParameterDialog?: boolean;\n\t\t\t\tcontexts?: ODataV4Context | ODataV4Context[];\n\t\t\t\tmodel?: ODataModel;\n\t\t\t\trequiresNavigation?: boolean;\n\t\t\t\tlabel?: string;\n\t\t\t\tisNavigable?: boolean;\n\t\t\t\tentitySetName?: string;\n\t\t\t\tinvocationGrouping?: string;\n\t\t\t\toperationAvailableMap?: string;\n\t\t\t\tcontrolId?: string;\n\t\t\t\tbStaticAction?: boolean;\n\t\t\t\tapplicableContexts?: ODataV4Context[];\n\t\t\t\tnotApplicableContexts?: ODataV4Context[];\n\t\t\t\tenableAutoScroll?: boolean;\n\t\t\t\tdefaultValuesExtensionFunction?: string;\n\t\t\t}\n\t\t): Promise<unknown> {\n\t\t\tconst oController = oView.getController() as ObjectPageController;\n\n\t\t\t// Wait for VH values to be resolved before calling the action\n\t\t\tawait oController.editFlow.syncTask();\n\n\t\t\treturn oController.editFlow\n\t\t\t\t.invokeAction(sActionName, mParameters)\n\t\t\t\t.then(oController._showMessagePopover.bind(oController, undefined))\n\t\t\t\t.catch(oController._showMessagePopover.bind(oController));\n\t\t},\n\t\tonDataPointTitlePressed(\n\t\t\toController: ObjectPageController,\n\t\t\toSource: Control,\n\t\t\toManifestOutbound: Record<string, ManifestOutboundEntry>,\n\t\t\tsControlConfig: string,\n\t\t\tsCollectionPath: string\n\t\t): void {\n\t\t\toManifestOutbound = typeof oManifestOutbound === \"string\" ? JSON.parse(oManifestOutbound) : oManifestOutbound;\n\t\t\tconst oTargetInfo = oManifestOutbound[sControlConfig],\n\t\t\t\toDataPointOrChartBindingContext = oSource.getBindingContext()!,\n\t\t\t\tsMetaPath = oDataPointOrChartBindingContext\n\t\t\t\t\t.getModel()\n\t\t\t\t\t.getMetaModel()\n\t\t\t\t\t.getMetaPath(oDataPointOrChartBindingContext.getPath());\n\t\t\tlet aSemanticObjectMapping = CommonUtils.getSemanticObjectMapping(oTargetInfo),\n\t\t\t\taNavigationData = oController._getChartContextData(oDataPointOrChartBindingContext, sCollectionPath),\n\t\t\t\tadditionalNavigationParameters;\n\n\t\t\taNavigationData = aNavigationData.map(function (oNavigationData: unknown) {\n\t\t\t\treturn {\n\t\t\t\t\tdata: oNavigationData,\n\t\t\t\t\tmetaPath: sMetaPath + (sCollectionPath ? `/${sCollectionPath}` : \"\")\n\t\t\t\t};\n\t\t\t});\n\t\t\tif (oTargetInfo && oTargetInfo.parameters) {\n\t\t\t\tconst oParams = oTargetInfo.parameters && oController._intentBasedNavigation.getOutboundParams(oTargetInfo.parameters);\n\t\t\t\tif (Object.keys(oParams).length > 0) {\n\t\t\t\t\tadditionalNavigationParameters = oParams;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Check if implicit semantic object mapping is needed\n\t\t\tif (aSemanticObjectMapping.length === 0) {\n\t\t\t\tconst customData = oSource.getCustomData().find((data) => data.getKey() === \"ValuePropertyPath\");\n\t\t\t\tif (customData) {\n\t\t\t\t\taSemanticObjectMapping = oController._getImplicitSemanticObjectMappingForDataPoints(\n\t\t\t\t\t\tcustomData.getValue(),\n\t\t\t\t\t\toTargetInfo.semanticObject\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (oTargetInfo && oTargetInfo.semanticObject && oTargetInfo.action) {\n\t\t\t\toController._intentBasedNavigation.navigate(oTargetInfo.semanticObject, oTargetInfo.action, {\n\t\t\t\t\tnavigationContexts: aNavigationData,\n\t\t\t\t\tsemanticObjectMapping: aSemanticObjectMapping,\n\t\t\t\t\tadditionalNavigationParameters: additionalNavigationParameters\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Triggers an outbound navigation when a user chooses the chevron.\n\t\t * @param oController\n\t\t * @param sOutboundTarget Name of the outbound target (needs to be defined in the manifest)\n\t\t * @param oContext The context that contains the data for the target app\n\t\t * @param sCreatePath Create path when the chevron is created.\n\t\t * @returns Promise which is resolved once the navigation is triggered (??? maybe only once finished?)\n\t\t * @final\n\t\t */\n\t\tasync onChevronPressNavigateOutBound(\n\t\t\toController: ObjectPageController,\n\t\t\tsOutboundTarget: string,\n\t\t\toContext: ODataV4Context,\n\t\t\tsCreatePath: string\n\t\t): Promise<void> {\n\t\t\treturn oController._intentBasedNavigation.onChevronPressNavigateOutBound(oController, sOutboundTarget, oContext, sCreatePath);\n\t\t},\n\n\t\tonNavigateChange(this: ObjectPageController, oEvent: UI5Event<{ subSection: ObjectPageSubSection }>): void {\n\t\t\t//will be called always when we click on a section tab\n\t\t\tthis.getExtensionAPI().updateAppState();\n\t\t\tthis.bSectionNavigated = true;\n\n\t\t\tconst oInternalModelContext = this.getView().getBindingContext(\"internal\") as InternalModelContext;\n\t\t\tif (\n\t\t\t\tCommonUtils.getIsEditable(this.getView()) &&\n\t\t\t\tthis.getView().getViewData().sectionLayout === \"Tabs\" &&\n\t\t\t\toInternalModelContext.getProperty(\"errorNavigationSectionFlag\") === false\n\t\t\t) {\n\t\t\t\tconst oSubSection = oEvent.getParameter(\"subSection\");\n\t\t\t\tthis._updateFocusInEditMode([oSubSection]);\n\t\t\t}\n\t\t},\n\t\tonVariantSelected: function (this: ObjectPageController): void {\n\t\t\tthis.getExtensionAPI().updateAppState();\n\t\t},\n\t\tonVariantSaved: function (this: ObjectPageController): void {\n\t\t\t//TODO: Should remove this setTimeOut once Variant Management provides an api to fetch the current variant key on save\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.getExtensionAPI().updateAppState();\n\t\t\t}, 2000);\n\t\t},\n\t\tnavigateToSubSection: function (oController: ObjectPageController, vDetailConfig: string | object): void {\n\t\t\tconst oDetailConfig = typeof vDetailConfig === \"string\" ? JSON.parse(vDetailConfig) : vDetailConfig;\n\t\t\tconst oObjectPage = oController.getView().byId(\"fe::ObjectPage\") as ObjectPageLayout;\n\t\t\tlet oSection;\n\t\t\tlet oSubSection;\n\t\t\tif (oDetailConfig.sectionId) {\n\t\t\t\toSection = oController.getView().byId(oDetailConfig.sectionId) as ObjectPageSection;\n\t\t\t\toSubSection = (\n\t\t\t\t\toDetailConfig.subSectionId\n\t\t\t\t\t\t? oController.getView().byId(oDetailConfig.subSectionId)\n\t\t\t\t\t\t: oSection && oSection.getSubSections() && oSection.getSubSections()[0]\n\t\t\t\t) as ObjectPageSubSection;\n\t\t\t} else if (oDetailConfig.subSectionId) {\n\t\t\t\toSubSection = oController.getView().byId(oDetailConfig.subSectionId) as ObjectPageSubSection;\n\t\t\t\toSection = oSubSection && (oSubSection.getParent() as ObjectPageSection);\n\t\t\t}\n\t\t\tif (!oSection || !oSubSection || !oSection.getVisible() || !oSubSection.getVisible()) {\n\t\t\t\tconst sTitle = getResourceModel(oController).getText(\n\t\t\t\t\t\"C_ROUTING_NAVIGATION_DISABLED_TITLE\",\n\t\t\t\t\tundefined,\n\t\t\t\t\toController.getView().getViewData().entitySet\n\t\t\t\t);\n\t\t\t\tLog.error(sTitle);\n\t\t\t\tMessageBox.error(sTitle);\n\t\t\t} else {\n\t\t\t\toObjectPage.setSelectedSection(oSubSection.getId());\n\t\t\t\t// trigger iapp state change\n\t\t\t\toObjectPage.fireNavigate({\n\t\t\t\t\tsection: oSection,\n\t\t\t\t\tsubSection: oSubSection\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\n\t\tcloseCollaborationStrip: function (this: ObjectPageController): void {\n\t\t\tthis.getView().getModel(\"ui\").setProperty(\"/showCollaborationStrip\", false);\n\t\t},\n\n\t\tcloseOPMessageStrip: function (this: ObjectPageController): void {\n\t\t\tconst view = this.getView();\n\t\t\tconst bIsInEditMode = CommonUtils.getIsEditable(view);\n\t\t\tconst internalModel = view.getModel(\"internal\");\n\t\t\tconst messagestripInternalModelContext = internalModel\n\t\t\t\t.bindContext(this.getExtensionAPI()._getMessageStripBindingContextPath())\n\t\t\t\t.getBoundContext()!;\n\t\t\t// Remove context bound messages and set the property to false for the backend transition messages in edit mode.\n\t\t\tif (!bIsInEditMode && messagestripInternalModelContext.getProperty(\"OPBackendMessageVisible\") === true) {\n\t\t\t\tconst contextBoundMessages = Messaging.getMessageModel()\n\t\t\t\t\t.getData()\n\t\t\t\t\t.filter(\n\t\t\t\t\t\t(message: Message) =>\n\t\t\t\t\t\t\tmessage.getTargets()[0] === this.getView().getBindingContext()?.getPath() && message.getPersistent() === true\n\t\t\t\t\t);\n\t\t\t\tif (contextBoundMessages.length === 1) {\n\t\t\t\t\tMessaging.removeMessages(contextBoundMessages);\n\t\t\t\t}\n\t\t\t}\n\t\t\tmessagestripInternalModelContext.setProperty(\"OPBackendMessageVisible\", false);\n\t\t\tthis.getExtensionAPI().hideMessage();\n\t\t}\n\t};\n}\n\nexport default ObjectPageController;\n"],"mappings":"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","ignoreList":[]}