{"version":3,"file":"IntentBasedNavigation.js","names":["IntentBasedNavigationOverride","adaptNavigationContext","oSelectionVariant","oTargetInfo","oView","this","getView","oController","getController","oInternalModelContext","getBindingContext","oExternalNavigationContext","getProperty","oAppComponent","CommonUtils","getAppComponent","oMetaModel","getModel","getMetaModel","oPageContext","mergeLinkContext","linkContextPath","getPath","page","sMetaPath","getMetaPath","pageAttributes","getObject","_intentBasedNavigation","processSemanticAttributes","oPageContextData","removeSensitiveData","oPageData","prepareContextForExternalNavigation","oPagePropertiesWithoutConflict","propertiesWithoutConflict","oPageSV","addPageContextToSelectionVariant","SelectionVariant","semanticAttributes","oPropertiesWithoutConflict","aSelectOptionPropertyNames","getSelectOptionsPropertyNames","forEach","sPropertyName","getSelectOption","massAddSelectOption","linkContext","setProperty"],"sources":["./IntentBasedNavigation.ts"],"sourcesContent":["import CommonUtils from \"sap/fe/core/CommonUtils\";\nimport type IntentBasedNavigation from \"sap/fe/core/controllerextensions/IntentBasedNavigation\";\nimport type { InternalModelContext } from \"sap/fe/core/helpers/ModelHelper\";\nimport type PageController from \"sap/fe/core/PageController\";\nimport SelectionVariant from \"sap/fe/navigation/SelectionVariant\";\nimport type Context from \"sap/ui/model/Context\";\n\nconst IntentBasedNavigationOverride = {\n\tadaptNavigationContext: function (\n\t\tthis: IntentBasedNavigation,\n\t\toSelectionVariant: SelectionVariant,\n\t\toTargetInfo?: { linkContextPath: string; linkContext?: unknown; propertiesWithoutConflict?: Record<string, string> }\n\t): void {\n\t\tconst oView = this.getView(),\n\t\t\toController = oView.getController() as PageController,\n\t\t\toInternalModelContext = this.getView().getBindingContext(\"internal\") as InternalModelContext,\n\t\t\toExternalNavigationContext = oInternalModelContext.getProperty(\"externalNavigationContext\");\n\t\tconst oAppComponent = CommonUtils.getAppComponent(oView);\n\t\tconst oMetaModel = oAppComponent.getModel().getMetaModel();\n\t\tconst oPageContext = oView.getBindingContext() as Context;\n\t\t//If the link context is same as page context merging of context should not happen\n\t\tconst mergeLinkContext = oTargetInfo?.linkContextPath ? oPageContext.getPath() !== oTargetInfo?.linkContextPath : true;\n\t\tif (oExternalNavigationContext?.page && mergeLinkContext) {\n\t\t\tconst sMetaPath = oMetaModel.getMetaPath(oPageContext.getPath());\n\t\t\tlet pageAttributes = oPageContext.getObject();\n\t\t\tpageAttributes = oController._intentBasedNavigation.processSemanticAttributes(oPageContext, oPageContext.getObject());\n\t\t\tconst oPageContextData = oController._intentBasedNavigation.removeSensitiveData(pageAttributes, sMetaPath),\n\t\t\t\toPageData = oController._intentBasedNavigation.prepareContextForExternalNavigation(oPageContextData, oPageContext),\n\t\t\t\toPagePropertiesWithoutConflict = oPageData.propertiesWithoutConflict,\n\t\t\t\t// TODO: move this also into the intent based navigation controller extension\n\t\t\t\toPageSV = CommonUtils.addPageContextToSelectionVariant(\n\t\t\t\t\tnew SelectionVariant(),\n\t\t\t\t\toPageData.semanticAttributes as unknown[],\n\t\t\t\t\toView\n\t\t\t\t),\n\t\t\t\toPropertiesWithoutConflict = oTargetInfo?.propertiesWithoutConflict;\n\t\t\tconst aSelectOptionPropertyNames = oPageSV.getSelectOptionsPropertyNames();\n\t\t\taSelectOptionPropertyNames.forEach(function (sPropertyName: string) {\n\t\t\t\tif (!oSelectionVariant.getSelectOption(sPropertyName)) {\n\t\t\t\t\toSelectionVariant.massAddSelectOption(sPropertyName, oPageSV.getSelectOption(sPropertyName)!);\n\t\t\t\t} else {\n\t\t\t\t\t// Only when there is no conflict do we need to add something\n\t\t\t\t\t// in all other case the conflicted paths are already added in prepareContextForExternalNavigation\n\t\t\t\t\t// if property was without conflict in incoming context then add path from incoming context to SV\n\t\t\t\t\t// TO-DO. Remove the check for oPropertiesWithoutConflict once semantic links functionality is covered\n\t\t\t\t\tif (oPropertiesWithoutConflict && sPropertyName in oPropertiesWithoutConflict) {\n\t\t\t\t\t\toSelectionVariant.massAddSelectOption(\n\t\t\t\t\t\t\toPropertiesWithoutConflict[sPropertyName],\n\t\t\t\t\t\t\toSelectionVariant.getSelectOption(sPropertyName)!\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\t// if property was without conflict in page context then add path from page context to SV\n\t\t\t\t\tif (sPropertyName in oPagePropertiesWithoutConflict) {\n\t\t\t\t\t\toSelectionVariant.massAddSelectOption(\n\t\t\t\t\t\t\toPagePropertiesWithoutConflict[sPropertyName],\n\t\t\t\t\t\t\toPageSV.getSelectOption(sPropertyName)!\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\t// remove non public properties from targetInfo\n\t\tdelete oTargetInfo?.propertiesWithoutConflict;\n\t\tdelete oTargetInfo?.linkContext;\n\t\toInternalModelContext.setProperty(\"externalNavigationContext\", { page: true });\n\t}\n};\n\nexport default IntentBasedNavigationOverride;\n"],"mappings":";;;;0GAOA,MAAMA,EAAgC,CACrCC,uBAAwB,SAEvBC,EACAC,GAEA,MAAMC,EAAQC,KAAKC,UAClBC,EAAcH,EAAMI,gBACpBC,EAAwBJ,KAAKC,UAAUI,kBAAkB,YACzDC,EAA6BF,EAAsBG,YAAY,6BAChE,MAAMC,EAAgBC,EAAYC,gBAAgBX,GAClD,MAAMY,EAAaH,EAAcI,WAAWC,eAC5C,MAAMC,EAAef,EAAMM,oBAE3B,MAAMU,EAAmBjB,GAAakB,gBAAkBF,EAAaG,YAAcnB,GAAakB,gBAAkB,KAClH,GAAIV,GAA4BY,MAAQH,EAAkB,CACzD,MAAMI,EAAYR,EAAWS,YAAYN,EAAaG,WACtD,IAAII,EAAiBP,EAAaQ,YAClCD,EAAiBnB,EAAYqB,uBAAuBC,0BAA0BV,EAAcA,EAAaQ,aACzG,MAAMG,EAAmBvB,EAAYqB,uBAAuBG,oBAAoBL,EAAgBF,GAC/FQ,EAAYzB,EAAYqB,uBAAuBK,oCAAoCH,EAAkBX,GACrGe,EAAiCF,EAAUG,0BAE3CC,EAAUtB,EAAYuB,iCACrB,IAAIC,EACJN,EAAUO,mBACVnC,GAEDoC,EAA6BrC,GAAagC,0BAC3C,MAAMM,EAA6BL,EAAQM,gCAC3CD,EAA2BE,QAAQ,SAAUC,GAC5C,IAAK1C,EAAkB2C,gBAAgBD,GAAgB,CACtD1C,EAAkB4C,oBAAoBF,EAAeR,EAAQS,gBAAgBD,GAC9E,KAAO,CAKN,GAAIJ,GAA8BI,KAAiBJ,EAA4B,CAC9EtC,EAAkB4C,oBACjBN,EAA2BI,GAC3B1C,EAAkB2C,gBAAgBD,GAEpC,CAEA,GAAIA,KAAiBV,EAAgC,CACpDhC,EAAkB4C,oBACjBZ,EAA+BU,GAC/BR,EAAQS,gBAAgBD,GAE1B,CACD,CACD,EACD,QAEOzC,GAAagC,iCACbhC,GAAa4C,YACpBtC,EAAsBuC,YAAY,4BAA6B,CAAEzB,KAAM,MACxE,GACC,OAEavB,CAA6B","ignoreList":[]}