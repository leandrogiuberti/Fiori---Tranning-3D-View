{"version":3,"names":["IntentBasedNavigationOverride","adaptNavigationContext","oSelectionVariant","oTargetInfo","oView","getView","oController","getController","oInternalModelContext","getBindingContext","oExternalNavigationContext","getProperty","oAppComponent","CommonUtils","getAppComponent","oMetaModel","getModel","getMetaModel","oPageContext","mergeLinkContext","linkContextPath","getPath","page","sMetaPath","getMetaPath","pageAttributes","getObject","_intentBasedNavigation","processSemanticAttributes","oPageContextData","removeSensitiveData","oPageData","prepareContextForExternalNavigation","oPagePropertiesWithoutConflict","propertiesWithoutConflict","oPageSV","addPageContextToSelectionVariant","SelectionVariant","semanticAttributes","oPropertiesWithoutConflict","aSelectOptionPropertyNames","getSelectOptionsPropertyNames","forEach","sPropertyName","getSelectOption","massAddSelectOption","linkContext","setProperty"],"sourceRoot":".","sources":["IntentBasedNavigation.ts"],"sourcesContent":["import CommonUtils from \"sap/fe/core/CommonUtils\";\nimport type IntentBasedNavigation from \"sap/fe/core/controllerextensions/IntentBasedNavigation\";\nimport type { InternalModelContext } from \"sap/fe/core/helpers/ModelHelper\";\nimport type PageController from \"sap/fe/core/PageController\";\nimport SelectionVariant from \"sap/fe/navigation/SelectionVariant\";\nimport type Context from \"sap/ui/model/Context\";\n\nconst IntentBasedNavigationOverride = {\n\tadaptNavigationContext: function (\n\t\tthis: IntentBasedNavigation,\n\t\toSelectionVariant: SelectionVariant,\n\t\toTargetInfo?: { linkContextPath: string; linkContext?: unknown; propertiesWithoutConflict?: Record<string, string> }\n\t): void {\n\t\tconst oView = this.getView(),\n\t\t\toController = oView.getController() as PageController,\n\t\t\toInternalModelContext = this.getView().getBindingContext(\"internal\") as InternalModelContext,\n\t\t\toExternalNavigationContext = oInternalModelContext.getProperty(\"externalNavigationContext\");\n\t\tconst oAppComponent = CommonUtils.getAppComponent(oView);\n\t\tconst oMetaModel = oAppComponent.getModel().getMetaModel();\n\t\tconst oPageContext = oView.getBindingContext() as Context;\n\t\t//If the link context is same as page context merging of context should not happen\n\t\tconst mergeLinkContext = oTargetInfo?.linkContextPath ? oPageContext.getPath() !== oTargetInfo?.linkContextPath : true;\n\t\tif (oExternalNavigationContext?.page && mergeLinkContext) {\n\t\t\tconst sMetaPath = oMetaModel.getMetaPath(oPageContext.getPath());\n\t\t\tlet pageAttributes = oPageContext.getObject();\n\t\t\tpageAttributes = oController._intentBasedNavigation.processSemanticAttributes(oPageContext, oPageContext.getObject());\n\t\t\tconst oPageContextData = oController._intentBasedNavigation.removeSensitiveData(pageAttributes, sMetaPath),\n\t\t\t\toPageData = oController._intentBasedNavigation.prepareContextForExternalNavigation(oPageContextData, oPageContext),\n\t\t\t\toPagePropertiesWithoutConflict = oPageData.propertiesWithoutConflict,\n\t\t\t\t// TODO: move this also into the intent based navigation controller extension\n\t\t\t\toPageSV = CommonUtils.addPageContextToSelectionVariant(\n\t\t\t\t\tnew SelectionVariant(),\n\t\t\t\t\toPageData.semanticAttributes as unknown[],\n\t\t\t\t\toView\n\t\t\t\t),\n\t\t\t\toPropertiesWithoutConflict = oTargetInfo?.propertiesWithoutConflict;\n\t\t\tconst aSelectOptionPropertyNames = oPageSV.getSelectOptionsPropertyNames();\n\t\t\taSelectOptionPropertyNames.forEach(function (sPropertyName: string) {\n\t\t\t\tif (!oSelectionVariant.getSelectOption(sPropertyName)) {\n\t\t\t\t\toSelectionVariant.massAddSelectOption(sPropertyName, oPageSV.getSelectOption(sPropertyName)!);\n\t\t\t\t} else {\n\t\t\t\t\t// Only when there is no conflict do we need to add something\n\t\t\t\t\t// in all other case the conflicted paths are already added in prepareContextForExternalNavigation\n\t\t\t\t\t// if property was without conflict in incoming context then add path from incoming context to SV\n\t\t\t\t\t// TO-DO. Remove the check for oPropertiesWithoutConflict once semantic links functionality is covered\n\t\t\t\t\tif (oPropertiesWithoutConflict && sPropertyName in oPropertiesWithoutConflict) {\n\t\t\t\t\t\toSelectionVariant.massAddSelectOption(\n\t\t\t\t\t\t\toPropertiesWithoutConflict[sPropertyName],\n\t\t\t\t\t\t\toSelectionVariant.getSelectOption(sPropertyName)!\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\t// if property was without conflict in page context then add path from page context to SV\n\t\t\t\t\tif (sPropertyName in oPagePropertiesWithoutConflict) {\n\t\t\t\t\t\toSelectionVariant.massAddSelectOption(\n\t\t\t\t\t\t\toPagePropertiesWithoutConflict[sPropertyName],\n\t\t\t\t\t\t\toPageSV.getSelectOption(sPropertyName)!\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\t// remove non public properties from targetInfo\n\t\tdelete oTargetInfo?.propertiesWithoutConflict;\n\t\tdelete oTargetInfo?.linkContext;\n\t\toInternalModelContext.setProperty(\"externalNavigationContext\", { page: true });\n\t}\n};\n\nexport default IntentBasedNavigationOverride;\n"],"mappings":"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","ignoreList":[],"file":"IntentBasedNavigation-dbg.js"}