{"version":3,"file":"Paginator.js","names":["PaginatorExtensionOverride","onBeforeContextUpdate","oListBinding","iCurrentContextIndex","oCurrentView","this","getView","oControlContext","getBindingContext","aCurrentContexts","getCurrentContexts","oPaginatorCurrentContext","getPath","onContextUpdate","oContext","base","_routing","navigateToContext","callExtension"],"sources":["./Paginator.ts"],"sourcesContent":["import type Paginator from \"sap/fe/core/controllerextensions/Paginator\";\nimport type Context from \"sap/ui/model/odata/v4/Context\";\nimport type ODataListBinding from \"sap/ui/model/odata/v4/ODataListBinding\";\n\nconst PaginatorExtensionOverride = {\n\tonBeforeContextUpdate: function (this: Paginator, oListBinding: ODataListBinding, iCurrentContextIndex: number): boolean {\n\t\tconst oCurrentView = this.getView(),\n\t\t\toControlContext = oCurrentView && oCurrentView.getBindingContext(),\n\t\t\taCurrentContexts = oListBinding && oListBinding.getCurrentContexts(),\n\t\t\toPaginatorCurrentContext = aCurrentContexts[iCurrentContextIndex];\n\n\t\tif (oPaginatorCurrentContext && oControlContext && oPaginatorCurrentContext.getPath() !== oControlContext.getPath()) {\n\t\t\t// Prevent default update of context index in Object Page Paginator when view context is different from the paginator context.\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\n\tonContextUpdate: function (this: Paginator, oContext: Context): void {\n\t\tthis.base._routing.navigateToContext(oContext, { callExtension: true });\n\t}\n};\n\nexport default PaginatorExtensionOverride;\n"],"mappings":";;;;yCAIA,MAAMA,EAA6B,CAClCC,sBAAuB,SAA2BC,EAAgCC,GACjF,MAAMC,EAAeC,KAAKC,UACzBC,EAAkBH,GAAgBA,EAAaI,oBAC/CC,EAAmBP,GAAgBA,EAAaQ,qBAChDC,EAA2BF,EAAiBN,GAE7C,GAAIQ,GAA4BJ,GAAmBI,EAAyBC,YAAcL,EAAgBK,UAAW,CAEpH,OAAO,IACR,CACA,OAAO,KACR,EAEAC,gBAAiB,SAA2BC,GAC3CT,KAAKU,KAAKC,SAASC,kBAAkBH,EAAU,CAAEI,cAAe,MACjE,GACC,OAEalB,CAA0B","ignoreList":[]}