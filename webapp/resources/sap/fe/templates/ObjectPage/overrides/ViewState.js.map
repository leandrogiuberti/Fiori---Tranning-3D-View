{"version":3,"file":"ViewState.js","names":["VariantManagement","CoreLibrary","opControlHandlers","retrieve","oOPLayout","selectedSection","getSelectedSection","apply","opLayout","controlState","opSectionToSelect","getSections","find","section","getId","getVisible","controller","this","getView","getController","pageReady","waitPageReady","then","setSelectedSection","undefined","catch","err","message","Error","String","Log","error","refreshBinding","oBindingContext","getBindingContext","oBinding","getBinding","sMetaPath","ModelHelper","getMetaPathForContext","sStrategy","KeepAliveHelper","getControlRefreshStrategyForContextPath","oModel","getModel","oMetaModel","getMetaModel","oNavigationProperties","CommonUtils","getContextPathProperties","$kind","aNavPropertiesToRequest","Object","keys","reduce","aPrev","sNavProp","$isCollection","push","$NavigationPropertyPath","aProperties","$PropertyPath","sGroupId","getGroupId","requestSideEffects","concat","refresh","info","ViewStateExtensionOverride","_getObjectPageLayout","view","_getObjectPageLayoutControl","_getOPStateHandler","control","viewOP","call","_getOPRefreshHandler","adaptControlStateHandler","controlStateHandlers","opStateHandler","adaptBindingRefreshHandler","controlRefreshHandlers","applyInitialStateOnly","adaptStateControls","aStateControls","oView","base","oViewData","getViewData","variantManagement","Control","Page","None","byId","adaptBindingRefreshControls","aControls","sRefreshStrategy","getViewRefreshInfo","oController","aControlsToRefresh","oObjectPageControl","aViewControls","_findTables","getControlsForRefresh","aPrevControls","oControl","includes"],"sources":["./ViewState.ts"],"sourcesContent":["import Log from \"sap/base/Log\";\nimport CommonUtils from \"sap/fe/core/CommonUtils\";\nimport type ViewState from \"sap/fe/core/controllerextensions/ViewState\";\nimport { type ControlStateHandler } from \"sap/fe/core/controllerextensions/ViewState\";\nimport KeepAliveHelper from \"sap/fe/core/helpers/KeepAliveHelper\";\nimport ModelHelper from \"sap/fe/core/helpers/ModelHelper\";\nimport CoreLibrary from \"sap/fe/core/library\";\nimport type ObjectPageController from \"sap/fe/templates/ObjectPage/ObjectPageController.controller\";\nimport type ManagedObject from \"sap/ui/base/ManagedObject\";\nimport type Control from \"sap/ui/core/Control\";\nimport type ODataV4Context from \"sap/ui/model/odata/v4/Context\";\nimport type ObjectPageLayout from \"sap/uxap/ObjectPageLayout\";\nimport type ObjectPageSection from \"sap/uxap/ObjectPageSection\";\nimport type { MetaModelNavProperty } from \"types/metamodel_types\";\n\nconst VariantManagement = CoreLibrary.VariantManagement;\nexport type ObjectPageState = { selectedSection: string | null };\n\nconst opControlHandlers = {\n\tretrieve: function (oOPLayout: ObjectPageLayout): ObjectPageState {\n\t\treturn {\n\t\t\tselectedSection: oOPLayout.getSelectedSection()\n\t\t};\n\t},\n\tapply: function (this: ViewState, opLayout: ObjectPageLayout, controlState?: { selectedSection: string | null }): void {\n\t\tconst selectedSection = controlState?.selectedSection;\n\t\tif (selectedSection) {\n\t\t\tconst opSectionToSelect = opLayout.getSections().find((section: ObjectPageSection) => section.getId() === selectedSection);\n\t\t\tif (opSectionToSelect?.getVisible() === false) {\n\t\t\t\tconst controller = this.getView().getController() as ObjectPageController;\n\t\t\t\tcontroller.pageReady\n\t\t\t\t\t.waitPageReady()\n\t\t\t\t\t.then(function (): void {\n\t\t\t\t\t\topLayout.setSelectedSection(selectedSection);\n\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t})\n\t\t\t\t\t.catch((err: unknown): void => {\n\t\t\t\t\t\tconst message = err instanceof Error ? err.message : String(err);\n\t\t\t\t\t\tLog.error(`FE V4 : OP : ViewState : ObjectPageLayout state couldn't be applied : ${message}`);\n\t\t\t\t\t});\n\t\t\t} else {\n\t\t\t\topLayout.setSelectedSection(selectedSection);\n\t\t\t}\n\t\t}\n\t},\n\trefreshBinding: function (oOPLayout: ObjectPageLayout): void {\n\t\tconst oBindingContext = oOPLayout.getBindingContext() as ODataV4Context | undefined;\n\t\tconst oBinding = oBindingContext && oBindingContext.getBinding();\n\t\tif (oBinding) {\n\t\t\tconst sMetaPath = ModelHelper.getMetaPathForContext(oBindingContext);\n\t\t\tconst sStrategy = KeepAliveHelper.getControlRefreshStrategyForContextPath(oOPLayout, sMetaPath);\n\t\t\tif (sStrategy === \"self\") {\n\t\t\t\t// Refresh main context and 1-1 navigation properties or OP\n\t\t\t\tconst oModel = oBindingContext.getModel(),\n\t\t\t\t\toMetaModel = oModel.getMetaModel(),\n\t\t\t\t\toNavigationProperties: Record<string, MetaModelNavProperty> =\n\t\t\t\t\t\t(CommonUtils.getContextPathProperties(oMetaModel, sMetaPath, {\n\t\t\t\t\t\t\t$kind: \"NavigationProperty\"\n\t\t\t\t\t\t}) as Record<string, MetaModelNavProperty>) || {},\n\t\t\t\t\taNavPropertiesToRequest = Object.keys(oNavigationProperties).reduce(function (\n\t\t\t\t\t\taPrev: { $NavigationPropertyPath: string }[],\n\t\t\t\t\t\tsNavProp: string\n\t\t\t\t\t) {\n\t\t\t\t\t\tif (oNavigationProperties[sNavProp].$isCollection !== true) {\n\t\t\t\t\t\t\taPrev.push({ $NavigationPropertyPath: sNavProp });\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn aPrev;\n\t\t\t\t\t}, []),\n\t\t\t\t\taProperties: ({ $NavigationPropertyPath: string } | { $PropertyPath: string })[] = [{ $PropertyPath: \"*\" }],\n\t\t\t\t\tsGroupId = oBinding.getGroupId();\n\n\t\t\t\toBindingContext.requestSideEffects(aProperties.concat(aNavPropertiesToRequest), sGroupId);\n\t\t\t} else if (sStrategy === \"includingDependents\") {\n\t\t\t\t// Complete refresh\n\t\t\t\toBinding.refresh();\n\t\t\t}\n\t\t} else {\n\t\t\tLog.info(`ObjectPage: ${oOPLayout.getId()} was not refreshed. No binding found!`);\n\t\t}\n\t}\n};\n\nconst ViewStateExtensionOverride = {\n\t_getObjectPageLayout: function (this: ViewState): ObjectPageLayout {\n\t\tconst view = this.getView();\n\t\tconst controller = view.getController() as ObjectPageController;\n\t\treturn controller._getObjectPageLayoutControl();\n\t},\n\n\t/**\n\t * Get the state handler for ObjectPageLayout in view.\n\t * @param control The control for state interaction\n\t * @returns State handler\n\t */\n\t_getOPStateHandler: function (\n\t\tthis: ViewState,\n\t\tcontrol: ManagedObject\n\t): ControlStateHandler<ObjectPageLayout, ObjectPageState> | undefined {\n\t\tconst viewOP = ViewStateExtensionOverride._getObjectPageLayout.call(this);\n\t\tif (viewOP === control) {\n\t\t\treturn {\n\t\t\t\tretrieve: opControlHandlers.retrieve,\n\t\t\t\tapply: opControlHandlers.apply\n\t\t\t};\n\t\t}\n\t},\n\n\t/**\n\t * Get the refresh handler for ObjectPageLayout in view.\n\t * @param control The control being refreshed\n\t * @returns Refresh handler\n\t */\n\t_getOPRefreshHandler: function (\n\t\tthis: ViewState,\n\t\tcontrol: ManagedObject\n\t): ControlStateHandler<ObjectPageLayout, ObjectPageState> | undefined {\n\t\tconst viewOP = ViewStateExtensionOverride._getObjectPageLayout.call(this);\n\t\tif (viewOP === control) {\n\t\t\treturn {\n\t\t\t\trefreshBinding: opControlHandlers.refreshBinding\n\t\t\t};\n\t\t}\n\t},\n\n\t/**\n\t * Pass the state handlers of object page view according to the control in concern.\n\t * @param control The control for state interaction\n\t * @param controlStateHandlers State handlers\n\t */\n\tadaptControlStateHandler: function (\n\t\tthis: ViewState,\n\t\tcontrol: ManagedObject,\n\t\tcontrolStateHandlers: ControlStateHandler<ObjectPageLayout, ObjectPageState>[]\n\t): void {\n\t\tconst opStateHandler = ViewStateExtensionOverride._getOPStateHandler.call(this, control);\n\t\tif (opStateHandler) {\n\t\t\tcontrolStateHandlers.push(opStateHandler);\n\t\t}\n\t},\n\n\t/**\n\t * Pass the refresh handlers of object page view according to the control being refreshed.\n\t * @param control The control being refreshed\n\t * @param controlRefreshHandlers Refresh handlers\n\t */\n\tadaptBindingRefreshHandler: function (\n\t\tthis: ViewState,\n\t\tcontrol: ManagedObject,\n\t\tcontrolRefreshHandlers: ControlStateHandler<ObjectPageLayout, ObjectPageState>\n\t): void {\n\t\tconst opStateHandler = ViewStateExtensionOverride._getOPRefreshHandler.call(this, control);\n\t\tif (opStateHandler) {\n\t\t    controlRefreshHandlers.refreshBinding = opStateHandler.refreshBinding;\n\t\t}\n\t},\n\n\tapplyInitialStateOnly: function (): boolean {\n\t\treturn false;\n\t},\n\tadaptStateControls: function (this: ViewState, aStateControls: Control[]): void {\n\t\tconst oView = this.base.getView(),\n\t\t\toViewData = oView.getViewData();\n\t\tswitch (oViewData.variantManagement) {\n\t\t\tcase VariantManagement.Control:\n\t\t\t\tbreak;\n\t\t\tcase VariantManagement.Page:\n\t\t\tcase VariantManagement.None:\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`unhandled variant setting: ${oViewData.variantManagement}`);\n\t\t}\n\n\t\taStateControls.push(oView.byId(\"fe::ObjectPage\") as Control);\n\t},\n\tadaptBindingRefreshControls: function (this: ViewState, aControls: Control[]): Control[] {\n\t\tconst oView = this.base.getView(),\n\t\t\tsRefreshStrategy = KeepAliveHelper.getViewRefreshInfo(oView),\n\t\t\toController = oView.getController();\n\t\tlet aControlsToRefresh: Control[] = [];\n\n\t\tif (sRefreshStrategy) {\n\t\t\tconst oObjectPageControl = (oController as ObjectPageController)._getObjectPageLayoutControl();\n\t\t\taControlsToRefresh.push(oObjectPageControl);\n\t\t}\n\t\tif (sRefreshStrategy !== \"includingDependents\") {\n\t\t\tconst aViewControls = (oController as ObjectPageController)._findTables();\n\t\t\taControlsToRefresh = aControlsToRefresh.concat(KeepAliveHelper.getControlsForRefresh(oView, aViewControls) || []);\n\t\t}\n\t\treturn aControlsToRefresh.reduce(function (aPrevControls, oControl) {\n\t\t\tif (!aPrevControls.includes(oControl)) {\n\t\t\t\taPrevControls.push(oControl);\n\t\t\t}\n\t\t\treturn aPrevControls;\n\t\t}, aControls);\n\t}\n};\n\nexport default ViewStateExtensionOverride;\n"],"mappings":"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","ignoreList":[]}