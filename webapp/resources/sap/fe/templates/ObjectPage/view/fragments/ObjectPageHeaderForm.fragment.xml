<core:FragmentDefinition
	xmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"
	xmlns="sap.m"
	xmlns:internalMacro="sap.fe.macros.internal"
	xmlns:core="sap.ui.core"
	xmlns:macro="sap.fe.macros"
	xmlns:customData="http://schemas.sap.com/sapui5/extension/sap.ui.core.CustomData/1"
	xmlns:fpm="sap.fe.macros.fpm"
	xmlns:l="sap.ui.layout"
	template:require="{
		MODEL: 'sap/ui/model/odata/v4/AnnotationHelper',
		ID: 'sap/fe/core/helpers/StableIdHelper',
		OP: 'sap/fe/templates/ObjectPage/ObjectPageTemplating',
		FIELD: 'sap/fe/macros/field/FieldHelper',
		UI: 'sap/fe/core/templating/UIFormatters',
		COMMON: 'sap/fe/macros/CommonHelper'
	}"
>
	<VBox
		id="{= ${converterHeaderFacet>headerFormData/id} }"
		displayInline="true"
		binding="{= OP.createBindingForAlternateAndSecondaryKeys(${headerFacet>Target/$AnnotationPath@@UI.getDataModelObjectPath})}"
	>
		<template:if test="{converterHeaderFacet>headerFormData/label}">
			<Title
				level="H3"
				text="{converterHeaderFacet>headerFormData/label}"
				id="{= ID.generate([ ${converterHeaderFacet>headerFormData/id}, 'Title'])}"
				class="sapUiSmallMarginBottom"
			/>
		</template:if>
		<template:if test="{= OP.doesFieldGroupContainOnlyOneMultiLineDataField(${converterHeaderFacet>headerFormData/formElements})}">
			<template:then>
				<template:with path="converterHeaderFacet>headerFormData/formElements/0/" var="dataField">
					<!-- There should only be 1 DataField -->
					<template:if test="{dataField>visible}">
						<layoutData>
							<FlexItemData maxWidth="300px" />
						</layoutData>
						<template:with path="dataField>annotationPath" var="annotationDataField">
							<Text text="{annotationDataField>Value@@MODEL.format}" emptyIndicatorMode="On" />
						</template:with>
					</template:if>
				</template:with>
			</template:then>
			<template:else>
				<template:repeat list="{converterHeaderFacet>headerFormData/formElements}" var="formElement">
					<template:if test="{= ${formElement>type} === 'Annotation' }">
						<template:then>
							<template:with path="formElement>annotationPath" var="dataField">
								<HBox
									class="sapUiTinyMarginBottom"
									visible="{formElement>visible}"
									renderType="{= OP.getHeaderFormHboxRenderType(${dataField>@@UI.getDataModelObjectPath})}"
								>
									<Label
										id="{= ID.generate([ ${formElement>idPrefix}, 'Label'])}"
										text="{= OP.getExpressionForLabelOnHeaderForm(${dataField>@@FIELD.computeLabelText}, ${viewData>/})}"
										visible="{= !!${dataField>@@FIELD.computeLabelText} }"
										class="sapUiTinyMarginEnd"
										vAlign="{= ${formElement>isValueMultilineText} === true ? 'Middle' : 'Inherit' }"
										wrapping="true"
										customData:labelIdentifier="{= ID.generate([ ${formElement>key} ]) }"
										labelFor="{= ID.generate([ ${formElement>idPrefix}, 'Field-content'])}"
									/>
									<macro:Field
										idPrefix="{formElement>idPrefix}"
										vhIdPrefix="FieldValueHelp"
										editMode="Display"
										contextPath="{entitySet>@@COMMON.getMetaPath}"
										metaPath="{dataField>@@COMMON.getMetaPath}"
										ariaLabelledBy="{= OP.getHeaderFormAriaLabelledBy(${converterHeaderFacet>headerFormData}, ${formElement>idPrefix})}"
									>
										<formatOptions textAlignMode="Form" showEmptyIndicator="true" fieldMode="nowrapper" />
									</macro:Field>
								</HBox>
							</template:with>
						</template:then>
						<template:elseif test="{= ${formElement>type} === 'Default'}">
							<l:HorizontalLayout class="sapUiTinyMarginBottom">
								<template:if test="{formElement>label}">
									<Label text="{formElement>label}:" class="sapUiTinyMarginEnd" />
								</template:if>
								<fpm:CustomFragment
									id="{formElement>key}"
									fragmentName="{formElement>template}"
									contextPath="{entitySet>}"
								/>
							</l:HorizontalLayout>
						</template:elseif>
						<template:else>
							<!-- ERROR HANDLING: Unsupported Header Facet Type -->
							<VBox width="150px" class="sapUiSmallMargin">
								<Text text="Unsupported Facet Type: {formElement>type}" visible="true" wrapping="true" />
							</VBox>
						</template:else>
					</template:if>
				</template:repeat>
			</template:else>
		</template:if>
	</VBox>
</core:FragmentDefinition>
