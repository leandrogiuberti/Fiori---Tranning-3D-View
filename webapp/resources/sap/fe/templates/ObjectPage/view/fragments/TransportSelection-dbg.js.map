{"version":3,"names":["TransportSelection","_dec","defineUI5Class","_dec2","property","type","_dec3","controllerExtensionHandler","_class","_class2","_BuildingBlock","props","others","_this","call","_initializerDefineProperty","_descriptor","_exports","_inheritsLoose","_proto","prototype","onMetadataAvailable","_ownerComponent","content","createContent","selectTransport","selectTransportAction","Promise","resolve","context","getBindingContext","label","messageStrip","getLink","getText","getPageController","editFlow","invokeAction","contexts","getTypeExpression","relativePath","getRelativePaths","transportPropertyObjectPath","requiredExpression","isRequiredExpression","targetObject","ifElse","and","not","pathInModel","definition","transportRequestProperty","MessageType","Warning","Information","getLinkTextExpression","getTranslatedText","getStripText","textExpression","getTextBindingExpression","noTransportSelected","transportSelected","concat","getStripVisible","actionEnabledExpression","UI","IsEditable","dataModelObjects","getDataModelObjectPath","getManifestWrapper","getTransportSelection","targetEntityType","actions","convertedTypes","namespace","fullyQualifiedName","getActionEnabledExpression","enhanceDataModelPath","_jsx","MessageStrip","text","showIcon","customIcon","class","visible","children","link","Link","press","bind","validateTransportRequestBeforeSave","getVisible","getType","leadingControl","BuildingBlock","_applyDecoratedDescriptor","configurable","enumerable","writable","initializer","Object","getOwnPropertyDescriptor"],"sourceRoot":".","sources":["TransportSelection.tsx"],"sourcesContent":["import type { Property } from \"@sap-ux/vocabularies-types\";\nimport type { BindingToolkitExpression } from \"sap/fe/base/BindingToolkit\";\nimport { and, concat, ifElse, not, pathInModel } from \"sap/fe/base/BindingToolkit\";\nimport type { PropertiesOf } from \"sap/fe/base/ClassSupport\";\nimport { defineUI5Class, property } from \"sap/fe/base/ClassSupport\";\nimport { controllerExtensionHandler } from \"sap/fe/base/HookSupport\";\nimport type TemplateComponent from \"sap/fe/core/TemplateComponent\";\nimport BuildingBlock from \"sap/fe/core/buildingBlocks/BuildingBlock\";\nimport type { TransportSelectionDefinition } from \"sap/fe/core/converters/ManifestSettings\";\nimport type { PageContextPathTarget } from \"sap/fe/core/converters/TemplateConverter\";\nimport { UI } from \"sap/fe/core/helpers/BindingHelper\";\nimport type { DataModelObjectPath } from \"sap/fe/core/templating/DataModelPathHelper\";\nimport { enhanceDataModelPath, getRelativePaths } from \"sap/fe/core/templating/DataModelPathHelper\";\nimport { isRequiredExpression } from \"sap/fe/core/templating/FieldControlHelper\";\nimport { getActionEnabledExpression } from \"sap/fe/core/templating/UIFormatters\";\nimport { getTextBindingExpression } from \"sap/fe/macros/field/FieldTemplating\";\nimport Link from \"sap/m/Link\";\nimport MessageStrip from \"sap/m/MessageStrip\";\nimport MessageType from \"sap/ui/core/message/MessageType\";\nimport type ODataV4Context from \"sap/ui/model/odata/v4/Context\";\n\n@defineUI5Class(\"sap.fe.templates.ObjectPage.view.fragments.TransportSelection\")\nexport default class TransportSelection extends BuildingBlock<MessageStrip> {\n\t// The transport selection definition\n\tprivate definition?: TransportSelectionDefinition;\n\n\t// a flag to indicate the leading control, also taking care on validating on safe\n\t@property({ type: \"boolean\" })\n\tpublic leadingControl!: boolean;\n\n\t// Reference to the message strip\n\tmessageStrip!: MessageStrip;\n\n\t// the selectTransport action enablement\n\tactionEnabledExpression!: BindingToolkitExpression<boolean>;\n\n\t// data model object path to the transport property\n\ttransportPropertyObjectPath!: DataModelObjectPath<Property>;\n\n\t// The transport selection action\n\tselectTransportAction?: string;\n\n\tconstructor(props?: PropertiesOf<TransportSelection>, others?: PropertiesOf<TransportSelection>) {\n\t\tsuper(props, others);\n\t}\n\n\tonMetadataAvailable(_ownerComponent: TemplateComponent): void {\n\t\tsuper.onMetadataAvailable(_ownerComponent);\n\t\tthis.content = this.createContent();\n\t}\n\n\t/**\n\t * Call the selectTransportAction once the user clicks on the link in the message strip.\n\t * @returns Promise that is resolved once a transport request was selected\n\t */\n\tasync selectTransport(): Promise<unknown> {\n\t\tif (!this.selectTransportAction) {\n\t\t\treturn Promise.resolve();\n\t\t}\n\t\tconst context = this.getBindingContext() as ODataV4Context;\n\t\tconst label = this.messageStrip.getLink().getText();\n\n\t\treturn this.getPageController()?.editFlow.invokeAction(this.selectTransportAction, { contexts: context, label: label });\n\t}\n\n\t/**\n\t * Get expression for the message strip type.\n\t *\n\t * If mandatory and no transport request is given the type is Warning,\n\t * otherwise it's Information.\n\t * @returns Expression to determine the message strip type.\n\t */\n\tgetTypeExpression(): BindingToolkitExpression<MessageType> {\n\t\tconst relativePath = getRelativePaths(this.transportPropertyObjectPath);\n\t\tconst requiredExpression = isRequiredExpression(this.transportPropertyObjectPath.targetObject, relativePath);\n\t\treturn ifElse(\n\t\t\tand(requiredExpression, not(pathInModel(this.definition?.transportRequestProperty))),\n\t\t\tMessageType.Warning,\n\t\t\tMessageType.Information\n\t\t);\n\t}\n\n\t/**\n\t * Get expression for the link text.\n\t *\n\t * If transport request is given the text shall be change transport, if not\n\t * it shall be select transport.\n\t * @returns Expression to determine the link text.\n\t */\n\tgetLinkTextExpression(): BindingToolkitExpression<string> {\n\t\treturn ifElse(\n\t\t\tpathInModel(this.definition?.transportRequestProperty),\n\t\t\tthis.getTranslatedText(\"T_TRANSPORT_SELECTION_CHANGE_TRANSPORT\"),\n\t\t\tthis.getTranslatedText(\"T_TRANSPORT_SELECTION_SELECT_TRANSPORT\")\n\t\t);\n\t}\n\n\t/**\n\t * Get expression for the message strip text.\n\t *\n\t * If no transport given we show a warning text, if one is given we show the\n\t * selected transport request, and also consider the text annotation on the\n\t * transport request property.\n\t * @returns Expression to determine the message strip text\n\t */\n\tgetStripText(): BindingToolkitExpression<string | undefined> {\n\t\tconst textExpression = getTextBindingExpression(this.transportPropertyObjectPath, {});\n\t\tconst noTransportSelected = this.getTranslatedText(\"T_TRANSPORT_SELECTION_NO_TRANSPORT_SELECTED\");\n\t\tconst transportSelected = concat(`${this.getTranslatedText(\"T_TRANSPORT_SELECTION_SELECTED_TRANSPORT\")} `, textExpression);\n\t\treturn ifElse(pathInModel(this.definition?.transportRequestProperty), transportSelected, noTransportSelected);\n\t}\n\n\t/**\n\t * Get expression for the message strip visibility.\n\t *\n\t * If not in edit mode we don't show the message strip at all. If in edit\n\t * mode we check the OperationAvailable annotation on the selectTransportAction.\n\t * @returns Expression to determine the  message strip visibility\n\t */\n\tgetStripVisible(): BindingToolkitExpression<boolean> {\n\t\t// The visibility of the strip relies on the Core.OperationAvailable set on the transport select action\n\t\treturn ifElse(this.actionEnabledExpression, UI.IsEditable, false);\n\t}\n\n\t/**\n\t * Get the message strip to be shown in the object page header.\n\t * @returns Message strip or nothing in case the feature is not enabled\n\t */\n\tcreateContent(): MessageStrip | undefined {\n\t\tconst dataModelObjects = this.getDataModelObjectPath<PageContextPathTarget>();\n\n\t\tthis.definition = this.getManifestWrapper()?.getTransportSelection();\n\t\tif (this.definition) {\n\t\t\tlet selectTransportAction = dataModelObjects?.targetEntityType.actions[this.definition.selectTransportAction];\n\t\t\tif (!selectTransportAction) {\n\t\t\t\t// if the action wasn't found give it a try by adding the namespace\n\t\t\t\tselectTransportAction =\n\t\t\t\t\tdataModelObjects?.targetEntityType.actions[\n\t\t\t\t\t\t`${dataModelObjects?.convertedTypes.namespace}.${this.definition.selectTransportAction}`\n\t\t\t\t\t];\n\t\t\t}\n\n\t\t\tif (dataModelObjects && selectTransportAction) {\n\t\t\t\tthis.selectTransportAction = selectTransportAction.fullyQualifiedName;\n\t\t\t\tthis.actionEnabledExpression = getActionEnabledExpression(\n\t\t\t\t\tselectTransportAction,\n\t\t\t\t\tdataModelObjects?.convertedTypes,\n\t\t\t\t\tdataModelObjects\n\t\t\t\t);\n\t\t\t\tthis.transportPropertyObjectPath = enhanceDataModelPath<Property>(\n\t\t\t\t\tdataModelObjects,\n\t\t\t\t\tthis.definition.transportRequestProperty\n\t\t\t\t);\n\n\t\t\t\tthis.messageStrip = (\n\t\t\t\t\t<MessageStrip\n\t\t\t\t\t\ttext={this.getStripText()}\n\t\t\t\t\t\ttype={this.getTypeExpression()}\n\t\t\t\t\t\tshowIcon=\"true\"\n\t\t\t\t\t\tcustomIcon=\"sap-icon://shipping-status\"\n\t\t\t\t\t\tclass=\"sapUiSmallMarginTop\"\n\t\t\t\t\t\tvisible={this.getStripVisible()}\n\t\t\t\t\t>\n\t\t\t\t\t\t{{\n\t\t\t\t\t\t\tlink: <Link press={this.selectTransport.bind(this)} text={this.getLinkTextExpression()} />\n\t\t\t\t\t\t}}\n\t\t\t\t\t</MessageStrip>\n\t\t\t\t);\n\t\t\t\treturn this.messageStrip;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Show selectTransport dialog if no transport chosen.\n\t *\n\t * We check if the TransportSelection feature is enabled and if the message strip\n\t * type is warning (= mandatory but no transport request chosen). If so we show the selectTransport dialog.\n\t * @returns Promise that is resolved once a transport request was selected\n\t */\n\t@controllerExtensionHandler(\"editFlow\", \"onBeforeSave\")\n\tasync validateTransportRequestBeforeSave(): Promise<unknown> {\n\t\tif (\n\t\t\tthis.messageStrip.getVisible() &&\n\t\t\tthis.messageStrip.getType() === MessageType.Warning &&\n\t\t\tthis.leadingControl &&\n\t\t\tthis.definition\n\t\t) {\n\t\t\treturn this.selectTransport();\n\t\t}\n\t\treturn Promise.resolve();\n\t}\n}\n"],"mappings":"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","ignoreList":[],"file":"TransportSelection-dbg.js"}