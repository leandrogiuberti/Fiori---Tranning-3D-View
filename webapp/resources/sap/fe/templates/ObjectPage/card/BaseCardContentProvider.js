/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2025 SAP SE. All rights reserved
 */
sap.ui.define(["sap/fe/base/BindingToolkit","sap/fe/core/helpers/AdaptiveCardExpressionCompiler","sap/fe/core/helpers/TypeGuards"],function(t,e,r){"use strict";var a={};var n=r.isProperty;var i=e.getAdaptiveCompilerResult;var o=t.pathInModel;var s=t.or;var g=t.notEqual;var h=t.constant;var p=t.and;let u=function(){function t(t,e){this.pathsToQuery=[];this.convertedTypes=t;this.config=e}a=t;var e=t.prototype;e.getPathsToQuery=function t(){return Array.from(new Set(this.pathsToQuery))};e.addPathsToQuery=function t(e){this.pathsToQuery=[...this.pathsToQuery,...e]};e.getCardConfigurationByKey=function t(e){return this.config[e]};e.getEntityType=function t(){const{contextPath:e}=this.getCardConfigurationByKey("contextInfo");const r=this.convertedTypes.resolvePath(e);return r.target};e.getBindingForProperty=function t(e){return"${"+this.getPropertyPathForCard(e)+"}"};e.getPropertyPathForCard=function t(e){if(e&&e?.includes("/")){e=e.replace("/",".")}this.addPathsToQuery([e]);return e};e.formatTextproperty=function t(e,r){let a;const n=this.getPropertyPathForCard(e.getRelativePath());if(r&&r.getTarget()){const t=e?.getTarget()?.annotations?.Common?.Text?.annotations?.UI?.TextArrangement?.toString();const i=this.getPropertyPathForCard(r.getRelativePath());switch(t){case"UI.TextArrangementType/TextLast":a=`\${string(${n})} (\${string(${i})})`;break;case"UI.TextArrangementType/TextOnly":a=`\${string(${i})}`;break;case"UI.TextArrangementType/TextSeparate":a=`\${string(${n})}`;break;case"UI.TextArrangementType/TextFirst":default:a=`\${string(${i})} (\${string(${n})})`;break}}else{a=`\${string(${this.getPropertyPathForCard(e.getRelativePath())})}`}return a};e.getTextBlockVisiblityForDateField=function t(e,r){let a=h(true);if(this.targetIsProperty(e)){const t=e.getTarget().type;const n=this.getPropertyPathForCard(e.getRelativePath());const i=p(g(o(n),undefined),g(o(n),null));switch(t){case"Edm.Date":case"Edm.DateTimeOffset":case"Edm.DateTime":case"Edm.Decimal":{a=i;break}default:{let t=h(false);if(r&&this.targetIsProperty(r)){const e=this.getPropertyPathForCard(r.getRelativePath());t=p(g(o(e),undefined),g(o(e),null))}a=s(i,t)}}}return a};e.getFormattedTextValue=function t(e,r){let a;switch(e?.getTarget()?.type){case"Edm.Date":a=`{{DATE(\${formatDateTime(${this.getPropertyPathForCard(e.getRelativePath())}, 'yyyy-MM-ddTHH:mm:ssZ')}, SHORT)}}`;break;case"Edm.DateTimeOffset":case"Edm.DateTime":a=`\${formatDateTime(${this.getPropertyPathForCard(e.getRelativePath())})}`;break;case"Edm.Decimal":a=`\${formatNumber(${this.getPropertyPathForCard(e.getRelativePath())},2)}`;break;default:a=this.formatTextproperty(e,r);break}return a};e.getValueBinding=function t(e,r){let a="";if(typeof e==="string"){a=e}else if(this.targetIsProperty(e)&&(!r||this.targetIsProperty(r))){a=this.getFormattedTextValue(e,r)}return a};e.updatePathsAndGetCompiledExpression=function t(e,r){const{pathsToQuery:a,compiledExpression:n}=i(e,r);this.addPathsToQuery(a);return n};e.targetIsProperty=function t(e){const r=e?.getTarget();return n(r)};return t}();a=u;return a},false);
//# sourceMappingURL=BaseCardContentProvider.js.map