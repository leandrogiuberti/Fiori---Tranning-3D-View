{"version":3,"file":"HeaderTitle.js","names":["HeaderTitle","_BaseCardContentProvi","convertedTypes","config","_this","call","this","contextPath","getCardConfigurationByKey","headerInfo","headerInfoMetaPath","MetaPath","headerDetails","getHeaderTitleandDescription","headerTitle","description","appTitle","appUrl","cardColumnSet","createHeaderTitle","error","message","Error","String","Log","_assertThisInitialized","_exports","_inheritsLoose","_proto","prototype","getTitle","headerInfoTarget","getTarget","headerInfoTitle","Title","headerInfoDescription","Description","title","textProperty","textpropertyAnnotation","descriptiontextpropertyAnnotation","descriptiontextProperty","headerDescription","$Type","getMetaPathForObject","Value","annotations","Common","Text","TypeName","toString","titleValueBinding","getValueBinding","descriptionValueBinding","subTitle","items","columns","getTextBlock","size","weight","text","maxLines","wrap","push","spacing","getColumn","getColumnSet","undefined","BaseCardContentProvider"],"sources":["./HeaderTitle.ts"],"sourcesContent":["import type { ConvertedMetadata } from \"@sap-ux/vocabularies-types\";\nimport { type PropertyAnnotationsBase_Common } from \"@sap-ux/vocabularies-types/vocabularies/Common_Edm\";\nimport type { HeaderInfoType } from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport {\n\tUIAnnotationTerms,\n\tUIAnnotationTypes,\n\ttype DataField,\n\ttype DataFieldAbstractTypes,\n\ttype DataFieldForAnnotation\n} from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport Log from \"sap/base/Log\";\nimport MetaPath from \"sap/fe/core/helpers/MetaPath\";\nimport { getColumn, getColumnSet, getTextBlock } from \"sap/fe/templates/ObjectPage/card/AdaptiveCardContent\";\nimport BaseCardContentProvider, { type CardConfig } from \"sap/fe/templates/ObjectPage/card/BaseCardContentProvider\";\nimport type { CardColumnSet, CardTextBlock } from \"types/adaptiveCard_types\";\n\ntype HeaderInfo = {\n\theaderTitle?: string;\n\tappUrl?: string;\n\tappTitle: string;\n\tdescription?: string;\n};\n\n/**\n * Get image and title for card.\n * @param convertedTypes Converted Metadata.\n * @param config Card Configuration.\n */\nexport default class HeaderTitle extends BaseCardContentProvider<CardConfig> {\n\tprivate cardColumnSet?: CardColumnSet;\n\n\t/**\n\t * Get image and title in column set.\n\t * @returns Column set.\n\t */\n\tpublic getTitle(): CardColumnSet | undefined {\n\t\treturn this.cardColumnSet;\n\t}\n\n\tconstructor(convertedTypes: ConvertedMetadata, config: CardConfig) {\n\t\tsuper(convertedTypes, config);\n\t\tconst { contextPath } = this.getCardConfigurationByKey(\"contextInfo\");\n\t\tlet headerInfo: HeaderInfo;\n\t\ttry {\n\t\t\tconst headerInfoMetaPath = new MetaPath<HeaderInfoType>(\n\t\t\t\tconvertedTypes,\n\t\t\t\t`${contextPath}@${UIAnnotationTerms.HeaderInfo}`,\n\t\t\t\tcontextPath\n\t\t\t);\n\t\t\tconst headerDetails = this.getHeaderTitleandDescription(headerInfoMetaPath);\n\t\t\theaderInfo = {\n\t\t\t\theaderTitle: headerDetails?.headerTitle,\n\t\t\t\tdescription: headerDetails?.description,\n\t\t\t\tappTitle: this.getCardConfigurationByKey(\"objectTitle\"),\n\t\t\t\tappUrl: this.getCardConfigurationByKey(\"appUrl\")\n\t\t\t};\n\t\t\tthis.cardColumnSet = this.createHeaderTitle(headerInfo);\n\t\t} catch (error: unknown) {\n\t\t\tconst message = error instanceof Error ? error.message : String(error);\n\t\t\tLog.error(\"Error while creating the card defintion\", message);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Generates Header title for adaptive card.\n\t * @param headerInfoMetaPath HeaderInfo MetaPath\n\t * @returns Returns Header Title of the object page\n\t */\n\tprivate getHeaderTitleandDescription(headerInfoMetaPath?: MetaPath<HeaderInfoType>): Partial<HeaderInfo> {\n\t\tconst headerInfoTarget = headerInfoMetaPath?.getTarget();\n\t\tconst headerInfoTitle = headerInfoTarget?.Title as DataField | DataFieldForAnnotation;\n\t\tconst headerInfoDescription = headerInfoTarget?.Description as DataField | DataFieldForAnnotation;\n\t\tlet title,\n\t\t\theaderTitle,\n\t\t\ttextProperty,\n\t\t\ttextpropertyAnnotation,\n\t\t\tdescription,\n\t\t\tdescriptiontextpropertyAnnotation,\n\t\t\tdescriptiontextProperty,\n\t\t\theaderDescription;\n\t\tif (headerInfoTitle) {\n\t\t\tswitch (headerInfoTitle.$Type) {\n\t\t\t\tcase UIAnnotationTypes.DataField:\n\t\t\t\t\ttitle = headerInfoMetaPath?.getMetaPathForObject(headerInfoTitle?.Value);\n\t\t\t\t\ttextpropertyAnnotation = (\n\t\t\t\t\t\t(title?.getTarget() as DataFieldAbstractTypes)?.annotations?.Common as PropertyAnnotationsBase_Common\n\t\t\t\t\t)?.Text;\n\t\t\t\t\ttextProperty = textpropertyAnnotation && headerInfoMetaPath?.getMetaPathForObject(textpropertyAnnotation);\n\t\t\t\t\tbreak;\n\t\t\t\tcase UIAnnotationTypes.DataFieldForAnnotation:\n\t\t\t\t\ttitle = headerInfoTarget?.TypeName.toString();\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (title) {\n\t\t\tconst titleValueBinding = this.getValueBinding(title, textProperty);\n\t\t\theaderTitle = titleValueBinding;\n\t\t}\n\t\tif (headerInfoDescription) {\n\t\t\tswitch (headerInfoDescription.$Type) {\n\t\t\t\tcase UIAnnotationTypes.DataField:\n\t\t\t\t\tdescription = headerInfoMetaPath?.getMetaPathForObject(headerInfoDescription?.Value);\n\t\t\t\t\tdescriptiontextpropertyAnnotation = (\n\t\t\t\t\t\t(description?.getTarget() as DataFieldAbstractTypes)?.annotations?.Common as PropertyAnnotationsBase_Common\n\t\t\t\t\t)?.Text;\n\t\t\t\t\tdescriptiontextProperty =\n\t\t\t\t\t\tdescriptiontextpropertyAnnotation && headerInfoMetaPath?.getMetaPathForObject(descriptiontextpropertyAnnotation);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (description) {\n\t\t\tconst descriptionValueBinding = this.getValueBinding(description, descriptiontextProperty);\n\t\t\theaderDescription = descriptionValueBinding;\n\t\t}\n\t\treturn { headerTitle: headerTitle, description: headerDescription };\n\t}\n\n\t/**\n\t * Generates Header Image and Title column sets.\n\t * @param headerInfo HeaderInfo with title and header description information.\n\t * @returns An Array of ColumnSets for Image and Title.\n\t */\n\tpublic createHeaderTitle(headerInfo: HeaderInfo | undefined): CardColumnSet | undefined {\n\t\tlet appTitle, headerTitle, subTitle: CardTextBlock;\n\t\tconst items = [];\n\t\tconst columns = [];\n\t\tif (headerInfo?.appTitle) {\n\t\t\tappTitle = getTextBlock({\n\t\t\t\tsize: \"Medium\",\n\t\t\t\tweight: \"Bolder\",\n\t\t\t\ttext: headerInfo?.appTitle,\n\t\t\t\tmaxLines: 3,\n\t\t\t\twrap: true\n\t\t\t});\n\t\t\titems.push(appTitle);\n\t\t}\n\t\tif (headerInfo?.headerTitle) {\n\t\t\theaderTitle = getTextBlock({\n\t\t\t\tsize: \"Default\",\n\t\t\t\tweight: \"Bolder\",\n\t\t\t\ttext: `[ ${headerInfo?.headerTitle} ](${headerInfo?.appUrl})`,\n\t\t\t\tmaxLines: 1,\n\t\t\t\tspacing: \"None\"\n\t\t\t});\n\t\t\titems.push(headerTitle);\n\t\t}\n\t\tif (headerInfo?.description) {\n\t\t\tsubTitle = getTextBlock({\n\t\t\t\tsize: \"Default\",\n\t\t\t\ttext: headerInfo?.description,\n\t\t\t\tmaxLines: 1,\n\t\t\t\tspacing: \"None\"\n\t\t\t});\n\t\t\titems.push(subTitle);\n\t\t}\n\t\tcolumns.push(getColumn({ items: [...items] }));\n\t\treturn getColumnSet(columns) ?? undefined;\n\t}\n}\n"],"mappings":";;;;gmBAuBA,IAKqBA,EAAW,SAAAC,GAW/B,SAAAD,EAAYE,EAAmCC,GAAoB,IAAAC,EAClEA,EAAAH,EAAAI,KAAAC,KAAMJ,EAAgBC,IAAOG,KAC7B,MAAMC,YAAEA,GAAgBH,EAAKI,0BAA0B,eACvD,IAAIC,EACJ,IACC,MAAMC,EAAqB,IAAIC,EAC9BT,EACA,GAAGK,KAAW,0CACdA,GAED,MAAMK,EAAgBR,EAAKS,6BAA6BH,GACxDD,EAAa,CACZK,YAAaF,GAAeE,YAC5BC,YAAaH,GAAeG,YAC5BC,SAAUZ,EAAKI,0BAA0B,eACzCS,OAAQb,EAAKI,0BAA0B,WAExCJ,EAAKc,cAAgBd,EAAKe,kBAAkBV,EAC7C,CAAE,MAAOW,GACR,MAAMC,EAAUD,aAAiBE,MAAQF,EAAMC,QAAUE,OAAOH,GAChEI,EAAIJ,MAAM,0CAA2CC,EACtD,CACA,OAAAjB,GAAAqB,EAAArB,EACD,CAEAsB,EAAA1B,EAAA2B,EAAA3B,EAAAC,GAAA,IAAA2B,EAAA5B,EAAA6B,UAjCAD,EAIOE,SAAP,SAAOA,IACN,OAAOxB,KAAKY,aACb,EAACU,EAgCOf,6BAAR,SAAQA,EAA6BH,GACpC,MAAMqB,EAAmBrB,GAAoBsB,YAC7C,MAAMC,EAAkBF,GAAkBG,MAC1C,MAAMC,EAAwBJ,GAAkBK,YAChD,IAAIC,EACHvB,EACAwB,EACAC,EACAxB,EACAyB,EACAC,EACAC,EACD,GAAIT,EAAiB,CACpB,OAAQA,EAAgBU,OACvB,2CACCN,EAAQ3B,GAAoBkC,qBAAqBX,GAAiBY,OAClEN,EACEF,GAAOL,aAAwCc,aAAaC,QAC3DC,KACHV,EAAeC,GAA0B7B,GAAoBkC,qBAAqBL,GAClF,MACD,wDACCF,EAAQN,GAAkBkB,SAASC,WACnC,MAEH,CACA,GAAIb,EAAO,CACV,MAAMc,EAAoB7C,KAAK8C,gBAAgBf,EAAOC,GACtDxB,EAAcqC,CACf,CACA,GAAIhB,EAAuB,CAC1B,OAAQA,EAAsBQ,OAC7B,2CACC5B,EAAcL,GAAoBkC,qBAAqBT,GAAuBU,OAC9EL,EACEzB,GAAaiB,aAAwCc,aAAaC,QACjEC,KACHP,EACCD,GAAqC9B,GAAoBkC,qBAAqBJ,GAC/E,MACD,QACC,MAEH,CACA,GAAIzB,EAAa,CAChB,MAAMsC,EAA0B/C,KAAK8C,gBAAgBrC,EAAa0B,GAClEC,EAAoBW,CACrB,CACA,MAAO,CAAEvC,YAAaA,EAAaC,YAAa2B,EACjD,EAEAd,EAKOT,kBAAP,SAAOA,EAAkBV,GACxB,IAAIO,EAAUF,EAAawC,EAC3B,MAAMC,EAAQ,GACd,MAAMC,EAAU,GAChB,GAAI/C,GAAYO,SAAU,CACzBA,EAAWyC,EAAa,CACvBC,KAAM,SACNC,OAAQ,SACRC,KAAMnD,GAAYO,SAClB6C,SAAU,EACVC,KAAM,OAEPP,EAAMQ,KAAK/C,EACZ,CACA,GAAIP,GAAYK,YAAa,CAC5BA,EAAc2C,EAAa,CAC1BC,KAAM,UACNC,OAAQ,SACRC,KAAM,KAAKnD,GAAYK,iBAAiBL,GAAYQ,UACpD4C,SAAU,EACVG,QAAS,SAEVT,EAAMQ,KAAKjD,EACZ,CACA,GAAIL,GAAYM,YAAa,CAC5BuC,EAAWG,EAAa,CACvBC,KAAM,UACNE,KAAMnD,GAAYM,YAClB8C,SAAU,EACVG,QAAS,SAEVT,EAAMQ,KAAKT,EACZ,CACAE,EAAQO,KAAKE,EAAU,CAAEV,MAAO,IAAIA,MACpC,OAAOW,EAAaV,IAAYW,SACjC,EAAC,OAAAnE,CAAA,CApI8B,CAASoE,GAAuB1C,EAAA1B,EAAA,OAAA0B,CAAA","ignoreList":[]}