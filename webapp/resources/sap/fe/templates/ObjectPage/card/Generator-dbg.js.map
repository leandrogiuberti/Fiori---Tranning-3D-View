{"version":3,"names":["MSTEAMS_ADAPTIVE_CARD_SCHEMA","MSTEAMS_ADAPTIVE_CARD_VERSION","AdaptiveCardGenerator","_BaseCardContentProvi","convertedTypes","config","_this","call","webUrl","headerTitleandImage","getHeaderTitle","headerForms","getHeaderFacetsForAdaptiveCard","cardActions","getCardActions","length","cardDefinition","undefined","_assertThisInitialized","content","body","type","msTeams","width","metadata","$schema","version","err","message","Error","String","Log","error","_exports","_inheritsLoose","_proto","prototype","getCardDefinition","queryUrl","extendDefinition","headerActionsProvider","HeaderActions","pathsToQueryFromActions","getPathsToQuery","addPathsToQuery","cardActionSet","push","actions","headerContentProvider","HeaderContent","getHeaderContent","pathsToQueryFromHeaderForms","headerTitleProvider","HeaderTitle","headerTitle","getTitle","pathsToQueryFromTitle","BaseCardContentProvider"],"sourceRoot":".","sources":["Generator.ts"],"sourcesContent":["import type { ConvertedMetadata } from \"@sap-ux/vocabularies-types\";\nimport Log from \"sap/base/Log\";\nimport BaseCardContentProvider, { type CardConfig } from \"sap/fe/templates/ObjectPage/card/BaseCardContentProvider\";\nimport type { HeaderActionsConfig } from \"sap/fe/templates/ObjectPage/card/actions/HeaderActions\";\nimport HeaderActions from \"sap/fe/templates/ObjectPage/card/actions/HeaderActions\";\nimport type { CardHeaderFacetsConfig } from \"sap/fe/templates/ObjectPage/card/facets/HeaderContent\";\nimport HeaderContent from \"sap/fe/templates/ObjectPage/card/facets/HeaderContent\";\nimport HeaderTitle from \"sap/fe/templates/ObjectPage/card/facets/HeaderTitle\";\nimport type { CardColumnSet, CardElement, IACActionSet, IAdaptiveCard } from \"types/adaptiveCard_types\";\n\nconst MSTEAMS_ADAPTIVE_CARD_SCHEMA = \"https://adaptivecards.io/schemas/adaptive-card.json\";\nconst MSTEAMS_ADAPTIVE_CARD_VERSION = \"1.4\";\n\nexport type GeneratorConfig = CardConfig & CardHeaderFacetsConfig & HeaderActionsConfig;\n\n/**\n * Adaptive card json generator.\n * @param convertedTypes Converted Metadata.\n * @param config Card Configuration.\n */\nexport default class AdaptiveCardGenerator extends BaseCardContentProvider<GeneratorConfig> {\n\tprivate cardDefinition?: IAdaptiveCard;\n\n\t/**\n\t * Get the generated card definition.\n\t * @param queryUrl Query url to use for card definition.\n\t * @returns Card definition to share via MS teams 'share as card'.\n\t */\n\tpublic getCardDefinition(queryUrl?: string): IAdaptiveCard | undefined {\n\t\tlet cardDefinition = this.cardDefinition;\n\t\tif (queryUrl && cardDefinition) {\n\t\t\tconst extendDefinition = {\n\t\t\t\tmetadata: {\n\t\t\t\t\twebUrl: `${queryUrl}`\n\t\t\t\t}\n\t\t\t};\n\t\t\tcardDefinition = { ...cardDefinition, ...extendDefinition };\n\t\t}\n\t\treturn cardDefinition;\n\t}\n\n\tconstructor(convertedTypes: ConvertedMetadata, config: GeneratorConfig) {\n\t\tsuper(convertedTypes, config);\n\t\ttry {\n\t\t\tconst { webUrl } = config;\n\n\t\t\t// header content\n\t\t\tconst headerTitleandImage = this.getHeaderTitle(config);\n\t\t\tconst headerForms = this.getHeaderFacetsForAdaptiveCard(config);\n\n\t\t\t// actions\n\t\t\tconst cardActions = this.getCardActions(config);\n\n\t\t\t// body\n\t\t\tif (headerForms.length === 0 && cardActions.length === 0) {\n\t\t\t\tthis.cardDefinition = undefined;\n\t\t\t\treturn this;\n\t\t\t}\n\t\t\tconst content = [...headerForms, ...cardActions];\n\t\t\tconst body = headerTitleandImage ? [headerTitleandImage, ...content] : content;\n\n\t\t\tthis.cardDefinition = {\n\t\t\t\ttype: \"AdaptiveCard\",\n\t\t\t\tmsTeams: {\n\t\t\t\t\twidth: \"full\"\n\t\t\t\t},\n\t\t\t\tmetadata: {\n\t\t\t\t\twebUrl\n\t\t\t\t},\n\t\t\t\tbody: body,\n\t\t\t\t$schema: MSTEAMS_ADAPTIVE_CARD_SCHEMA,\n\t\t\t\tversion: MSTEAMS_ADAPTIVE_CARD_VERSION\n\t\t\t};\n\t\t} catch (err: unknown) {\n\t\t\tconst message = err instanceof Error ? err.message : String(err);\n\t\t\tLog.error(\"Error while creating the card defintion\", message);\n\t\t}\n\t}\n\n\tprivate getCardActions(config: CardConfig): IACActionSet[] {\n\t\tconst headerActionsProvider = new HeaderActions(this.convertedTypes, config);\n\t\tconst cardActions = headerActionsProvider.getCardActions();\n\t\tconst pathsToQueryFromActions = headerActionsProvider.getPathsToQuery();\n\t\tthis.addPathsToQuery(pathsToQueryFromActions);\n\t\tconst cardActionSet: IACActionSet[] = [];\n\t\tif (cardActions.length > 0) {\n\t\t\tcardActionSet.push({\n\t\t\t\ttype: \"ActionSet\",\n\t\t\t\tactions: [...cardActions]\n\t\t\t});\n\t\t}\n\t\treturn cardActionSet;\n\t}\n\n\tprivate getHeaderFacetsForAdaptiveCard(config: CardConfig): CardElement[] {\n\t\tconst headerContentProvider = new HeaderContent(this.convertedTypes, config);\n\t\tconst headerForms = headerContentProvider.getHeaderContent();\n\t\tconst pathsToQueryFromHeaderForms = headerContentProvider.getPathsToQuery();\n\t\tthis.addPathsToQuery(pathsToQueryFromHeaderForms);\n\n\t\treturn headerForms;\n\t}\n\n\tprivate getHeaderTitle(config: CardConfig): CardColumnSet | undefined {\n\t\tconst headerTitleProvider = new HeaderTitle(this.convertedTypes, config);\n\t\tconst headerTitle = headerTitleProvider.getTitle();\n\t\tconst pathsToQueryFromTitle = headerTitleProvider.getPathsToQuery();\n\t\tthis.addPathsToQuery(pathsToQueryFromTitle);\n\n\t\treturn headerTitle;\n\t}\n}\n"],"mappings":"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","ignoreList":[],"file":"Generator-dbg.js"}