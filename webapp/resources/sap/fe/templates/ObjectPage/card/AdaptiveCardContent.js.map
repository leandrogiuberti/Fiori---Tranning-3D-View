{"version":3,"file":"AdaptiveCardContent.js","names":["getColumnSet","columns","visible","items","type","isVisible","undefined","_exports","getColumn","parameters","verticalContentAlignment","width","getImage","url","size","getTextBlock","weight","text","maxLines","wrap","spacing","color","isSubtle","$when"],"sources":["./AdaptiveCardContent.ts"],"sourcesContent":["import type { CompiledAdaptiveCardExpression } from \"sap/fe/core/helpers/AdaptiveCardExpressionCompiler\";\nimport type { CardColumn, CardColumnSet, CardElement, CardTextBlock, Image } from \"types/adaptiveCard_types\";\n\nexport type ColumnParams = {\n\titems: CardElement[];\n\tvisible?: CompiledAdaptiveCardExpression | boolean;\n\twidth?: number | string;\n};\n\nexport type TextBlockParams = {\n\tsize: string;\n\tweight?: string;\n\ttext: string;\n\tmaxLines?: number;\n\twrap?: true;\n\tspacing?: string;\n\tvisible?: CompiledAdaptiveCardExpression | boolean;\n\tcolor?: CompiledAdaptiveCardExpression;\n\tisSubtle?: boolean;\n\t$when?: string | null;\n};\n\n/**\n * Function to return columnSet object for the adaptive cards.\n * @param columns Columns for creating the column set\n * @param visible Visible expression for the column\n * @returns ColumnSet Object\n */\nexport function getColumnSet(columns?: CardColumn[], visible?: string | boolean): CardColumnSet {\n\tconst items = columns ?? [];\n\treturn {\n\t\ttype: \"ColumnSet\",\n\t\tcolumns: [...items],\n\t\tisVisible: visible ?? undefined\n\t};\n}\n\n/**\n * Function to return column object for the adaptive cards.\n * @param parameters Parameters for creating the column\n * @returns Column Object\n */\nexport function getColumn(parameters?: ColumnParams): CardColumn {\n\tconst items = parameters?.items ?? [];\n\treturn {\n\t\ttype: \"Column\",\n\t\titems: [...items],\n\t\tverticalContentAlignment: \"Top\",\n\t\twidth: parameters?.width ?? 1,\n\t\tisVisible: parameters?.visible ?? undefined\n\t};\n}\n\n/**\n * Function to return image object for the adaptive cards.\n * @param url Image url\n * @returns Image Object\n */\nexport function getImage(url: string): Image {\n\treturn {\n\t\ttype: \"Image\",\n\t\turl: url,\n\t\tsize: \"Small\"\n\t};\n}\n\n/**\n * Function to return TextBlock object for the adaptive cards.\n * @param parameters Parameters for creating the column\n * @returns TextBlock Object\n */\nexport function getTextBlock(parameters: TextBlockParams): CardTextBlock {\n\treturn {\n\t\ttype: \"TextBlock\",\n\t\tsize: parameters?.size ?? \"Small\",\n\t\tweight: parameters?.weight ?? \"Default\",\n\t\ttext: parameters?.text,\n\t\tmaxLines: parameters?.maxLines ?? 0,\n\t\twrap: parameters?.wrap ?? false,\n\t\tspacing: parameters?.spacing ?? \"Default\",\n\t\tisVisible: parameters?.visible ?? undefined,\n\t\tcolor: parameters?.color ?? \"Default\",\n\t\tisSubtle: parameters.isSubtle ?? undefined,\n\t\t$when: parameters?.$when ?? undefined\n\t};\n}\n"],"mappings":";;;;kDA4BO,SAASA,EAAaC,EAAwBC,GACpD,MAAMC,EAAQF,GAAW,GACzB,MAAO,CACNG,KAAM,YACNH,QAAS,IAAIE,GACbE,UAAWH,GAAWI,UAExB,CAEAC,EAAAP,eAKO,SAASQ,EAAUC,GACzB,MAAMN,EAAQM,GAAYN,OAAS,GACnC,MAAO,CACNC,KAAM,SACND,MAAO,IAAIA,GACXO,yBAA0B,MAC1BC,MAAOF,GAAYE,OAAS,EAC5BN,UAAWI,GAAYP,SAAWI,UAEpC,CAEAC,EAAAC,YAKO,SAASI,EAASC,GACxB,MAAO,CACNT,KAAM,QACNS,IAAKA,EACLC,KAAM,QAER,CAEAP,EAAAK,WAKO,SAASG,EAAaN,GAC5B,MAAO,CACNL,KAAM,YACNU,KAAML,GAAYK,MAAQ,QAC1BE,OAAQP,GAAYO,QAAU,UAC9BC,KAAMR,GAAYQ,KAClBC,SAAUT,GAAYS,UAAY,EAClCC,KAAMV,GAAYU,MAAQ,MAC1BC,QAASX,GAAYW,SAAW,UAChCf,UAAWI,GAAYP,SAAWI,UAClCe,MAAOZ,GAAYY,OAAS,UAC5BC,SAAUb,EAAWa,UAAYhB,UACjCiB,MAAOd,GAAYc,OAASjB,UAE9B,CAACC,EAAAQ,eAAA,OAAAR,CAAA","ignoreList":[]}