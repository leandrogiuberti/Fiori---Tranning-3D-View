{"version":3,"file":"Generator.js","names":["MSTEAMS_ADAPTIVE_CARD_SCHEMA","MSTEAMS_ADAPTIVE_CARD_VERSION","AdaptiveCardGenerator","_BaseCardContentProvi","convertedTypes","config","_this","call","this","webUrl","headerTitleandImage","getHeaderTitle","headerForms","getHeaderFacetsForAdaptiveCard","cardActions","getCardActions","length","cardDefinition","undefined","_assertThisInitialized","content","body","type","msTeams","width","metadata","$schema","version","err","message","Error","String","Log","error","_exports","_inheritsLoose","_proto","prototype","getCardDefinition","queryUrl","extendDefinition","headerActionsProvider","HeaderActions","pathsToQueryFromActions","getPathsToQuery","addPathsToQuery","cardActionSet","push","actions","headerContentProvider","HeaderContent","getHeaderContent","pathsToQueryFromHeaderForms","headerTitleProvider","HeaderTitle","headerTitle","getTitle","pathsToQueryFromTitle","BaseCardContentProvider"],"sources":["./Generator.ts"],"sourcesContent":["import type { ConvertedMetadata } from \"@sap-ux/vocabularies-types\";\nimport Log from \"sap/base/Log\";\nimport BaseCardContentProvider, { type CardConfig } from \"sap/fe/templates/ObjectPage/card/BaseCardContentProvider\";\nimport type { HeaderActionsConfig } from \"sap/fe/templates/ObjectPage/card/actions/HeaderActions\";\nimport HeaderActions from \"sap/fe/templates/ObjectPage/card/actions/HeaderActions\";\nimport type { CardHeaderFacetsConfig } from \"sap/fe/templates/ObjectPage/card/facets/HeaderContent\";\nimport HeaderContent from \"sap/fe/templates/ObjectPage/card/facets/HeaderContent\";\nimport HeaderTitle from \"sap/fe/templates/ObjectPage/card/facets/HeaderTitle\";\nimport type { CardColumnSet, CardElement, IACActionSet, IAdaptiveCard } from \"types/adaptiveCard_types\";\n\nconst MSTEAMS_ADAPTIVE_CARD_SCHEMA = \"https://adaptivecards.io/schemas/adaptive-card.json\";\nconst MSTEAMS_ADAPTIVE_CARD_VERSION = \"1.4\";\n\nexport type GeneratorConfig = CardConfig & CardHeaderFacetsConfig & HeaderActionsConfig;\n\n/**\n * Adaptive card json generator.\n * @param convertedTypes Converted Metadata.\n * @param config Card Configuration.\n */\nexport default class AdaptiveCardGenerator extends BaseCardContentProvider<GeneratorConfig> {\n\tprivate cardDefinition?: IAdaptiveCard;\n\n\t/**\n\t * Get the generated card definition.\n\t * @param queryUrl Query url to use for card definition.\n\t * @returns Card definition to share via MS teams 'share as card'.\n\t */\n\tpublic getCardDefinition(queryUrl?: string): IAdaptiveCard | undefined {\n\t\tlet cardDefinition = this.cardDefinition;\n\t\tif (queryUrl && cardDefinition) {\n\t\t\tconst extendDefinition = {\n\t\t\t\tmetadata: {\n\t\t\t\t\twebUrl: `${queryUrl}`\n\t\t\t\t}\n\t\t\t};\n\t\t\tcardDefinition = { ...cardDefinition, ...extendDefinition };\n\t\t}\n\t\treturn cardDefinition;\n\t}\n\n\tconstructor(convertedTypes: ConvertedMetadata, config: GeneratorConfig) {\n\t\tsuper(convertedTypes, config);\n\t\ttry {\n\t\t\tconst { webUrl } = config;\n\n\t\t\t// header content\n\t\t\tconst headerTitleandImage = this.getHeaderTitle(config);\n\t\t\tconst headerForms = this.getHeaderFacetsForAdaptiveCard(config);\n\n\t\t\t// actions\n\t\t\tconst cardActions = this.getCardActions(config);\n\n\t\t\t// body\n\t\t\tif (headerForms.length === 0 && cardActions.length === 0) {\n\t\t\t\tthis.cardDefinition = undefined;\n\t\t\t\treturn this;\n\t\t\t}\n\t\t\tconst content = [...headerForms, ...cardActions];\n\t\t\tconst body = headerTitleandImage ? [headerTitleandImage, ...content] : content;\n\n\t\t\tthis.cardDefinition = {\n\t\t\t\ttype: \"AdaptiveCard\",\n\t\t\t\tmsTeams: {\n\t\t\t\t\twidth: \"full\"\n\t\t\t\t},\n\t\t\t\tmetadata: {\n\t\t\t\t\twebUrl\n\t\t\t\t},\n\t\t\t\tbody: body,\n\t\t\t\t$schema: MSTEAMS_ADAPTIVE_CARD_SCHEMA,\n\t\t\t\tversion: MSTEAMS_ADAPTIVE_CARD_VERSION\n\t\t\t};\n\t\t} catch (err: unknown) {\n\t\t\tconst message = err instanceof Error ? err.message : String(err);\n\t\t\tLog.error(\"Error while creating the card defintion\", message);\n\t\t}\n\t}\n\n\tprivate getCardActions(config: CardConfig): IACActionSet[] {\n\t\tconst headerActionsProvider = new HeaderActions(this.convertedTypes, config);\n\t\tconst cardActions = headerActionsProvider.getCardActions();\n\t\tconst pathsToQueryFromActions = headerActionsProvider.getPathsToQuery();\n\t\tthis.addPathsToQuery(pathsToQueryFromActions);\n\t\tconst cardActionSet: IACActionSet[] = [];\n\t\tif (cardActions.length > 0) {\n\t\t\tcardActionSet.push({\n\t\t\t\ttype: \"ActionSet\",\n\t\t\t\tactions: [...cardActions]\n\t\t\t});\n\t\t}\n\t\treturn cardActionSet;\n\t}\n\n\tprivate getHeaderFacetsForAdaptiveCard(config: CardConfig): CardElement[] {\n\t\tconst headerContentProvider = new HeaderContent(this.convertedTypes, config);\n\t\tconst headerForms = headerContentProvider.getHeaderContent();\n\t\tconst pathsToQueryFromHeaderForms = headerContentProvider.getPathsToQuery();\n\t\tthis.addPathsToQuery(pathsToQueryFromHeaderForms);\n\n\t\treturn headerForms;\n\t}\n\n\tprivate getHeaderTitle(config: CardConfig): CardColumnSet | undefined {\n\t\tconst headerTitleProvider = new HeaderTitle(this.convertedTypes, config);\n\t\tconst headerTitle = headerTitleProvider.getTitle();\n\t\tconst pathsToQueryFromTitle = headerTitleProvider.getPathsToQuery();\n\t\tthis.addPathsToQuery(pathsToQueryFromTitle);\n\n\t\treturn headerTitle;\n\t}\n}\n"],"mappings":";;;;unBAUA,MAAMA,EAA+B,sDACrC,MAAMC,EAAgC,MAItC,IAKqBC,EAAqB,SAAAC,GAqBzC,SAAAD,EAAYE,EAAmCC,GAAyB,IAAAC,EACvEA,EAAAH,EAAAI,KAAAC,KAAMJ,EAAgBC,IAAOG,KAC7B,IACC,MAAMC,OAAEA,GAAWJ,EAGnB,MAAMK,EAAsBJ,EAAKK,eAAeN,GAChD,MAAMO,EAAcN,EAAKO,+BAA+BR,GAGxD,MAAMS,EAAcR,EAAKS,eAAeV,GAGxC,GAAIO,EAAYI,SAAW,GAAKF,EAAYE,SAAW,EAAG,CACzDV,EAAKW,eAAiBC,UACtB,OAAAZ,GAAAa,EAAAb,EACD,CACA,MAAMc,EAAU,IAAIR,KAAgBE,GACpC,MAAMO,EAAOX,EAAsB,CAACA,KAAwBU,GAAWA,EAEvEd,EAAKW,eAAiB,CACrBK,KAAM,eACNC,QAAS,CACRC,MAAO,QAERC,SAAU,CACThB,UAEDY,KAAMA,EACNK,QAAS1B,EACT2B,QAAS1B,EAEX,CAAE,MAAO2B,GACR,MAAMC,EAAUD,aAAeE,MAAQF,EAAIC,QAAUE,OAAOH,GAC5DI,EAAIC,MAAM,0CAA2CJ,EACtD,CAAC,OAAAvB,CACF,CAAC4B,EAAAhC,EAAAiC,EAAAjC,EAAAC,GAAA,IAAAiC,EAAAlC,EAAAmC,UAtDDD,EAKOE,kBAAP,SAAOA,EAAkBC,GACxB,IAAItB,EAAiBT,KAAKS,eAC1B,GAAIsB,GAAYtB,EAAgB,CAC/B,MAAMuB,EAAmB,CACxBf,SAAU,CACThB,OAAQ,GAAG8B,MAGbtB,EAAiB,IAAKA,KAAmBuB,EAC1C,CACA,OAAOvB,CACR,EAACmB,EAwCOrB,eAAR,SAAQA,EAAeV,GACtB,MAAMoC,EAAwB,IAAIC,EAAclC,KAAKJ,eAAgBC,GACrE,MAAMS,EAAc2B,EAAsB1B,iBAC1C,MAAM4B,EAA0BF,EAAsBG,kBACtDpC,KAAKqC,gBAAgBF,GACrB,MAAMG,EAAgC,GACtC,GAAIhC,EAAYE,OAAS,EAAG,CAC3B8B,EAAcC,KAAK,CAClBzB,KAAM,YACN0B,QAAS,IAAIlC,IAEf,CACA,OAAOgC,CACR,EAACV,EAEOvB,+BAAR,SAAQA,EAA+BR,GACtC,MAAM4C,EAAwB,IAAIC,EAAc1C,KAAKJ,eAAgBC,GACrE,MAAMO,EAAcqC,EAAsBE,mBAC1C,MAAMC,EAA8BH,EAAsBL,kBAC1DpC,KAAKqC,gBAAgBO,GAErB,OAAOxC,CACR,EAACwB,EAEOzB,eAAR,SAAQA,EAAeN,GACtB,MAAMgD,EAAsB,IAAIC,EAAY9C,KAAKJ,eAAgBC,GACjE,MAAMkD,EAAcF,EAAoBG,WACxC,MAAMC,EAAwBJ,EAAoBT,kBAClDpC,KAAKqC,gBAAgBY,GAErB,OAAOF,CACR,EAAC,OAAArD,CAAA,CA1FwC,CAASwD,GAAuBxB,EAAAhC,EAAA,OAAAgC,CAAA","ignoreList":[]}