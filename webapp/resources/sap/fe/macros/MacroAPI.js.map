{"version":3,"file":"MacroAPI.js","names":["MacroAPI","_dec","defineUI5Class","_dec2","implementInterface","_dec3","aggregation","type","multiple","isDefault","_dec4","property","_dec5","_class","_class2","_MacroAPI","_BuildingBlock","mSettings","others","_this","call","this","_initializerDefineProperty","_descriptor","_descriptor2","_descriptor3","_descriptor4","parentContextToBind","_inheritsLoose","_proto","prototype","applySettings","oScope","eventsKeys","Object","keys","getMetadata","getEvents","eventsKey","undefined","init","getModel","oPageModel","Component","getOwnerComponentFor","setModel","setOrBindProperty","propertyName","value","parsedExpression","BindingInfo","parse","_e","startsWith","bindProperty","getProperty","setProperty","setParentBindingContext","modelName","path","setParent","_len","arguments","length","args","Array","_key","forEach","getParent","bindObject","model","events","change","oBoundContext","getBoundContext","getObject","BuildingBlock","namespace","macroName","fragment","hasValidation","getConverterContext","dataModelObjectPath","contextPath","settings","extraParams","appComponent","originalViewData","models","viewData","getData","assign","resourceModel","deepClone","controlConfiguration","relativePath","getTargetObjectPath","contextLocation","entitySetName","targetEntitySet","name","entitySet","merge","ConverterContext","createConverterContextForMacro","startingEntitySet","metaModel","getDiagnostics","ManifestWrapper","createBindingContext","oData","sContextPath","uid","converterContext","_applyDecoratedDescriptor","configurable","enumerable","writable","initializer"],"sources":["./MacroAPI.ts"],"sourcesContent":["import deepClone from \"sap/base/util/deepClone\";\nimport merge from \"sap/base/util/merge\";\nimport uid from \"sap/base/util/uid\";\nimport type { PropertiesOf } from \"sap/fe/base/ClassSupport\";\nimport { aggregation, defineUI5Class, implementInterface, property } from \"sap/fe/base/ClassSupport\";\nimport BuildingBlock from \"sap/fe/core/buildingBlocks/BuildingBlock\";\nimport type { TemplateProcessorSettings } from \"sap/fe/core/buildingBlocks/templating/BuildingBlockTemplateProcessor\";\nimport ConverterContext from \"sap/fe/core/converters/ConverterContext\";\nimport type { BaseManifestSettings } from \"sap/fe/core/converters/ManifestSettings\";\nimport ManifestWrapper from \"sap/fe/core/converters/ManifestWrapper\";\nimport type { InternalModelContext } from \"sap/fe/core/helpers/ModelHelper\";\nimport { getTargetObjectPath, type DataModelObjectPath } from \"sap/fe/core/templating/DataModelPathHelper\";\nimport BindingInfo from \"sap/ui/base/BindingInfo\";\nimport type { $ManagedObjectSettings } from \"sap/ui/base/ManagedObject\";\nimport Component from \"sap/ui/core/Component\";\nimport type Control from \"sap/ui/core/Control\";\nimport type { $ControlSettings } from \"sap/ui/core/Control\";\nimport type { IFormContent } from \"sap/ui/core/library\";\nimport type ClientContextBinding from \"sap/ui/model/ClientContextBinding\";\nimport type Context from \"sap/ui/model/Context\";\n\n/**\n * Base API control for building blocks.\n * @hideconstructor\n * @public\n */\n@defineUI5Class(\"sap.fe.macros.MacroAPI\")\nclass MacroAPI<T extends object = {}> extends BuildingBlock<Control, T> implements IFormContent {\n\t@implementInterface(\"sap.ui.core.IFormContent\")\n\t__implements__sap_ui_core_IFormContent = true;\n\n\tstatic namespace = \"sap.fe.macros\";\n\n\tstatic macroName = \"Macro\";\n\n\tstatic fragment = \"sap.fe.macros.Macro\";\n\n\tstatic hasValidation = true;\n\n\t@aggregation({ type: \"sap.ui.core.Control\", multiple: false, isDefault: true })\n\tcontent!: Control;\n\n\tconstructor(mSettings?: $ControlSettings & PropertiesOf<MacroAPI>, others?: $ControlSettings) {\n\t\tsuper(mSettings, others);\n\t}\n\n\tapplySettings(mSettings: $ManagedObjectSettings, oScope?: object): this {\n\t\t// Cleanup events\n\t\tif (mSettings) {\n\t\t\tconst eventsKeys = Object.keys(this.getMetadata().getEvents());\n\t\t\tfor (const eventsKey of eventsKeys) {\n\t\t\t\tif (mSettings[eventsKey as keyof $ManagedObjectSettings] === undefined) {\n\t\t\t\t\tdelete mSettings[eventsKey as keyof $ManagedObjectSettings];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn super.applySettings(mSettings, oScope);\n\t}\n\n\tinit(): void {\n\t\tsuper.init();\n\t\tif (!this.getModel(\"_pageModel\")) {\n\t\t\tconst oPageModel = Component.getOwnerComponentFor(this)?.getModel(\"_pageModel\");\n\t\t\tif (oPageModel) {\n\t\t\t\tthis.setModel(oPageModel, \"_pageModel\");\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Defines the path of the context used in the current page or block.\n\t * This setting is defined by the framework.\n\t * @public\n\t */\n\t@property({ type: \"string\" })\n\tcontextPath!: string;\n\n\t/**\n\t * Defines the relative path of the property in the metamodel, based on the current contextPath.\n\t * @public\n\t */\n\t@property({ type: \"string\" })\n\tmetaPath!: string;\n\n\t/**\n\t * Set or bind a property.\n\t * @param propertyName The name of the property\n\t * @param value The value of the property\n\t */\n\tsetOrBindProperty(propertyName: string, value: unknown): void {\n\t\tif (value !== undefined) {\n\t\t\tlet parsedExpression;\n\t\t\ttry {\n\t\t\t\tparsedExpression = BindingInfo.parse(value);\n\t\t\t} catch (_e) {\n\t\t\t\t// Just ignore the error\n\t\t\t}\n\t\t\tif (parsedExpression || (typeof value === \"string\" && value.startsWith(\"{\"))) {\n\t\t\t\tthis.bindProperty(propertyName, parsedExpression ?? value);\n\t\t\t} else {\n\t\t\t\tif (this.getMetadata().getProperty(propertyName)?.type === \"boolean\" && typeof value === \"string\") {\n\t\t\t\t\tvalue = value === \"true\";\n\t\t\t\t}\n\t\t\t\tthis.setProperty(propertyName, value);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Retrieve a Converter Context.\n\t * @param dataModelObjectPath\n\t * @param contextPath\n\t * @param settings\n\t * @param extraParams\n\t * @returns A Converter Context\n\t */\n\tstatic getConverterContext = function (\n\t\tdataModelObjectPath: DataModelObjectPath<unknown>,\n\t\tcontextPath: string,\n\t\tsettings: TemplateProcessorSettings,\n\t\textraParams?: Record<string, unknown>\n\t): ConverterContext {\n\t\tconst appComponent = settings.appComponent;\n\t\tconst originalViewData = settings.models.viewData?.getData();\n\t\tlet viewData = Object.assign({}, originalViewData);\n\t\tdelete viewData.resourceModel;\n\t\tdelete viewData.appComponent;\n\t\tviewData = deepClone(viewData);\n\t\tlet controlConfiguration = {};\n\n\t\t// Only merge in page control configuration if the building block is on the same context\n\t\tconst relativePath = getTargetObjectPath(dataModelObjectPath.contextLocation ?? dataModelObjectPath);\n\t\tconst entitySetName = dataModelObjectPath.contextLocation?.targetEntitySet?.name ?? dataModelObjectPath.targetEntitySet?.name;\n\t\tif (\n\t\t\trelativePath === originalViewData?.contextPath ||\n\t\t\trelativePath === `/${originalViewData?.entitySet}` ||\n\t\t\tentitySetName === originalViewData?.entitySet\n\t\t) {\n\t\t\tcontrolConfiguration = viewData.controlConfiguration;\n\t\t}\n\t\tviewData.controlConfiguration = merge(controlConfiguration, extraParams || {});\n\n\t\treturn ConverterContext.createConverterContextForMacro(\n\t\t\tdataModelObjectPath.startingEntitySet.name,\n\t\t\tsettings.models.metaModel,\n\t\t\tappComponent?.getDiagnostics(),\n\t\t\tmerge,\n\t\t\tdataModelObjectPath.contextLocation,\n\t\t\tnew ManifestWrapper(viewData as BaseManifestSettings, appComponent)\n\t\t);\n\t};\n\n\t/**\n\t * Create a Binding Context.\n\t * @param oData\n\t * @param mSettings\n\t * @returns The binding context\n\t */\n\tstatic createBindingContext = function (oData: object, mSettings: TemplateProcessorSettings): Context {\n\t\tconst sContextPath = `/uid--${uid()}`;\n\t\tmSettings.models.converterContext.setProperty(sContextPath, oData);\n\t\treturn mSettings.models.converterContext.createBindingContext(sContextPath)!;\n\t};\n\n\tparentContextToBind: Record<string, string> = {};\n\n\t/**\n\t * Keep track of a binding context that should be assigned to the parent of that control.\n\t * @param modelName The model name that the context will relate to\n\t * @param path The path of the binding context\n\t */\n\tsetParentBindingContext(modelName: string, path: string): void {\n\t\tthis.parentContextToBind[modelName] = path;\n\t}\n\n\tsetParent(...args: unknown[]): void {\n\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t// @ts-ignore\n\t\tsuper.setParent(...args);\n\t\tObject.keys(this.parentContextToBind).forEach((modelName) => {\n\t\t\tthis.getParent()!.bindObject({\n\t\t\t\tpath: this.parentContextToBind[modelName],\n\t\t\t\tmodel: modelName,\n\t\t\t\tevents: {\n\t\t\t\t\tchange: function (this: ClientContextBinding) {\n\t\t\t\t\t\tconst oBoundContext = this.getBoundContext() as InternalModelContext;\n\t\t\t\t\t\tif (oBoundContext && !oBoundContext.getObject()) {\n\t\t\t\t\t\t\toBoundContext.setProperty(\"\", {});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n}\n\nexport default MacroAPI;\n"],"mappings":"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","ignoreList":[]}