{"version":3,"file":"ContactDelegate.js","names":["Object","assign","LinkDelegate","_fnTemplateFragment","async","payload","metaModel","mdcLinkControl","fragmentName","containingView","CommonUtils","getTargetView","appComponent","getAppComponent","preProcessorSettings","bindingContexts","models","contactContext","createBindingContext","contact","payloadModel","JSONModel","fragment","XMLTemplateProcessor","loadTemplate","templateComponent","getController","getOwnerComponent","templatedFragment","XMLPreprocessor","process","name","runAsOwner","Fragment","load","definition","controller","fetchAdditionalContent","getPayload","navigateRegexpMatch","navigationPath","match","binding","getBindingContext","getBinding","aggregation","isA","getAggregation","undefined","isListBindingAnalytical","hierarchyQualifier","bindingContext","length","getModel","bindContext","$$ownRequest","getMetaModel","popoverContent","this","setBindingContext","getBoundContext","Promise","resolve","fetchLinkType","initialType","type","LinkType","Popover","directLink","runtimeType"],"sources":["./ContactDelegate.ts"],"sourcesContent":["import CommonUtils from \"sap/fe/core/CommonUtils\";\nimport Fragment from \"sap/ui/core/Fragment\";\nimport XMLPreprocessor from \"sap/ui/core/util/XMLPreprocessor\";\nimport XMLTemplateProcessor from \"sap/ui/core/XMLTemplateProcessor\";\n\nimport type { EnhanceWithUI5 } from \"sap/fe/base/ClassSupport\";\nimport type AppComponent from \"sap/fe/core/AppComponent\";\nimport type TemplateComponent from \"sap/fe/core/TemplateComponent\";\nimport type Control from \"sap/ui/core/Control\";\nimport LinkType from \"sap/ui/mdc/enums/LinkType\";\nimport type Link from \"sap/ui/mdc/Link\";\nimport LinkDelegate from \"sap/ui/mdc/LinkDelegate\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\nimport type { default as Context, default as ODataV4Context } from \"sap/ui/model/odata/v4/Context\";\nimport type ODataListBinding from \"sap/ui/model/odata/v4/ODataListBinding\";\nimport type ODataMetaModel from \"sap/ui/model/odata/v4/ODataMetaModel\";\nimport type ODataModel from \"sap/ui/model/odata/v4/ODataModel\";\n\ntype ContactPayload = { navigationPath: string; contact: string };\n\nexport default Object.assign({}, LinkDelegate, {\n\t/**\n\t * Method called to do the templating of the popover content.\n\t * @param payload\n\t * @param metaModel\n\t * @param mdcLinkControl\n\t * @returns  A promise containing the popover content\n\t */\n\t_fnTemplateFragment: async function (payload: ContactPayload, metaModel: ODataMetaModel, mdcLinkControl: Link) {\n\t\tconst fragmentName = \"sap.fe.macros.contact.ContactQuickView\";\n\t\tconst containingView = CommonUtils.getTargetView(mdcLinkControl);\n\t\tconst appComponent = CommonUtils.getAppComponent(containingView);\n\n\t\tconst preProcessorSettings: { bindingContexts: object; models: object; appComponent: AppComponent } = {\n\t\t\tbindingContexts: {},\n\t\t\tmodels: {},\n\t\t\tappComponent\n\t\t};\n\t\tconst contactContext = metaModel.createBindingContext(payload.contact);\n\t\tconst payloadModel = new JSONModel(payload);\n\n\t\tif (payload.contact && contactContext) {\n\t\t\tpreProcessorSettings.bindingContexts = {\n\t\t\t\tcontact: contactContext,\n\t\t\t\tpayload: payloadModel.createBindingContext(\"/\")\n\t\t\t};\n\t\t\tpreProcessorSettings.models = {\n\t\t\t\tcontact: metaModel,\n\t\t\t\tpayload: payloadModel\n\t\t\t};\n\t\t}\n\n\t\tconst fragment = XMLTemplateProcessor.loadTemplate(fragmentName, \"fragment\");\n\t\tconst templateComponent = containingView.getController().getOwnerComponent() as EnhanceWithUI5<TemplateComponent>;\n\n\t\tconst templatedFragment = await XMLPreprocessor.process(fragment, { name: fragmentName }, preProcessorSettings);\n\t\treturn templateComponent.runAsOwner(async (): Promise<Control> => {\n\t\t\treturn Fragment.load({\n\t\t\t\tdefinition: templatedFragment,\n\t\t\t\tcontroller: containingView.getController()\n\t\t\t}) as Promise<Control>;\n\t\t});\n\t},\n\n\t/**\n\t * Method calls by the mdc.field to determine what should be the content of the popup when mdcLink#open is called.\n\t * @param mdcLinkControl\n\t * @returns A promise containing the popover content\n\t */\n\tfetchAdditionalContent: async function (mdcLinkControl: Link) {\n\t\tconst payload: ContactPayload = mdcLinkControl.getPayload() as ContactPayload;\n\t\tconst navigateRegexpMatch = payload.navigationPath?.match(/{(.*?)}/);\n\n\t\tconst binding = (mdcLinkControl.getBindingContext() as ODataV4Context)?.getBinding();\n\t\tconst aggregation = binding?.isA<ODataListBinding>(\"sap.ui.model.odata.v4.ODataListBinding\")\n\t\t\t? (binding.getAggregation() as { hierarchyQualifier?: string } | undefined)\n\t\t\t: undefined;\n\t\tconst isListBindingAnalytical = aggregation !== undefined && !aggregation.hierarchyQualifier;\n\n\t\tlet bindingContext =\n\t\t\tnavigateRegexpMatch && navigateRegexpMatch.length > 1 && navigateRegexpMatch[1]\n\t\t\t\t? (mdcLinkControl.getModel() as ODataModel).bindContext(\n\t\t\t\t\t\tnavigateRegexpMatch[1],\n\t\t\t\t\t\tmdcLinkControl.getBindingContext() as Context,\n\t\t\t\t\t\t{ $$ownRequest: true }\n\t\t\t\t  )\n\t\t\t\t: null;\n\t\tif (isListBindingAnalytical && !bindingContext) {\n\t\t\t// in case of analytical binding, we need to have a binding with its own cache to ensure data is properly requested\n\t\t\tbindingContext = (mdcLinkControl.getModel() as ODataModel).bindContext(\"\", mdcLinkControl.getBindingContext() as Context, {\n\t\t\t\t$$ownRequest: true\n\t\t\t});\n\t\t}\n\t\tif (mdcLinkControl.isA(\"sap.ui.mdc.Link\")) {\n\t\t\tconst metaModel = (mdcLinkControl.getModel() as ODataModel).getMetaModel();\n\t\t\tconst popoverContent = (await this._fnTemplateFragment(payload, metaModel, mdcLinkControl)) as Control;\n\t\t\tif (bindingContext) {\n\t\t\t\tpopoverContent.setBindingContext(bindingContext.getBoundContext());\n\t\t\t}\n\t\t\treturn [popoverContent];\n\t\t}\n\t\treturn Promise.resolve([]);\n\t},\n\n\tfetchLinkType: async function (): Promise<object> {\n\t\treturn Promise.resolve({\n\t\t\tinitialType: {\n\t\t\t\ttype: LinkType.Popover, // this means mdcLink.open will open a popup which shows content retrieved by fetchAdditionalContent\n\t\t\t\tdirectLink: undefined\n\t\t\t},\n\t\t\truntimeType: undefined\n\t\t});\n\t}\n});\n"],"mappings":";;;;uQAoBeA,OAAOC,OAAO,CAAC,EAAGC,EAAc,CAQ9CC,oBAAqBC,eAAgBC,EAAyBC,EAA2BC,GACxF,MAAMC,EAAe,yCACrB,MAAMC,EAAiBC,EAAYC,cAAcJ,GACjD,MAAMK,EAAeF,EAAYG,gBAAgBJ,GAEjD,MAAMK,EAAgG,CACrGC,gBAAiB,CAAC,EAClBC,OAAQ,CAAC,EACTJ,gBAED,MAAMK,EAAiBX,EAAUY,qBAAqBb,EAAQc,SAC9D,MAAMC,EAAe,IAAIC,EAAUhB,GAEnC,GAAIA,EAAQc,SAAWF,EAAgB,CACtCH,EAAqBC,gBAAkB,CACtCI,QAASF,EACTZ,QAASe,EAAaF,qBAAqB,MAE5CJ,EAAqBE,OAAS,CAC7BG,QAASb,EACTD,QAASe,EAEX,CAEA,MAAME,EAAWC,EAAqBC,aAAahB,EAAc,YACjE,MAAMiB,EAAoBhB,EAAeiB,gBAAgBC,oBAEzD,MAAMC,QAA0BC,EAAgBC,QAAQR,EAAU,CAAES,KAAMvB,GAAgBM,GAC1F,OAAOW,EAAkBO,WAAW5B,SAC5B6B,EAASC,KAAK,CACpBC,WAAYP,EACZQ,WAAY3B,EAAeiB,kBAG9B,EAOAW,uBAAwBjC,eAAgBG,GACvC,MAAMF,EAA0BE,EAAe+B,aAC/C,MAAMC,EAAsBlC,EAAQmC,gBAAgBC,MAAM,WAE1D,MAAMC,EAAWnC,EAAeoC,qBAAwCC,aACxE,MAAMC,EAAcH,GAASI,IAAsB,0CAC/CJ,EAAQK,iBACTC,UACH,MAAMC,EAA0BJ,IAAgBG,YAAcH,EAAYK,mBAE1E,IAAIC,EACHZ,GAAuBA,EAAoBa,OAAS,GAAKb,EAAoB,GACzEhC,EAAe8C,WAA0BC,YAC1Cf,EAAoB,GACpBhC,EAAeoC,oBACf,CAAEY,aAAc,OAEhB,KACJ,GAAIN,IAA4BE,EAAgB,CAE/CA,EAAkB5C,EAAe8C,WAA0BC,YAAY,GAAI/C,EAAeoC,oBAAgC,CACzHY,aAAc,MAEhB,CACA,GAAIhD,EAAeuC,IAAI,mBAAoB,CAC1C,MAAMxC,EAAaC,EAAe8C,WAA0BG,eAC5D,MAAMC,QAAwBC,KAAKvD,oBAAoBE,EAASC,EAAWC,GAC3E,GAAI4C,EAAgB,CACnBM,EAAeE,kBAAkBR,EAAeS,kBACjD,CACA,MAAO,CAACH,EACT,CACA,OAAOI,QAAQC,QAAQ,GACxB,EAEAC,cAAe3D,iBACd,OAAOyD,QAAQC,QAAQ,CACtBE,YAAa,CACZC,KAAMC,EAASC,QACfC,WAAYpB,WAEbqB,YAAarB,WAEf,GACC","ignoreList":[]}