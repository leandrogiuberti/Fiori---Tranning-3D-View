{"version":3,"names":["getMeasures","innerChart","map","measure","name","getLabel","value","getName","_exports","getDimensions","chartAPI","filter","dimension","getVisibleDimensions","includes","dataModel","getPropertyDataModel","displayValue","getTextBinding","undefined","getFeeds","vizFeeds","getAggregation","feeds","feed","getProperty","feedValue","label","feedType","type","uid","values","flat","getChartProperties","chartProperties","dimensionName","rules","plotArea","dataPointStyle","forEach","rule","dataContext","displayName","dimensions","measures","createChartCardParams","controlAPI","chart","content","getControlDelegate","getInnerChart","Error","params","createInsightsParams","getFilter","entitySetPath","data","requestParameters","queryUrl","getBinding","getDownloadUrl","cardTitle","getHeader","legendVisible","chartType","getChartType","allowedChartTypes","getAvailableChartTypes","available","getVizProperties"],"sourceRoot":".","sources":["AnalyticalInsightsHelper.ts"],"sourcesContent":["import type SapChartType from \"sap/chart/Chart\";\nimport { getTextBinding } from \"sap/fe/macros/field/FieldTemplating\";\nimport { createInsightsParams } from \"sap/fe/macros/insights/CommonInsightsHelper\";\nimport type Control from \"sap/ui/core/Control\";\nimport type { Dimension, Feed, Measure, Rule } from \"sap/ui/integration/widgets/Card\";\nimport type ChartType from \"../Chart\";\n\nimport type ChartDelegate from \"sap/ui/mdc/ChartDelegate\";\nimport type ODataV4ListBinding from \"sap/ui/model/odata/v4/ODataListBinding\";\nimport type VizFrame from \"sap/viz/ui5/controls/VizFrame\";\nimport type { ChartContent, InsightsParams } from \"./InsightsService\";\n\n/**\n * Get measures of the chart.\n * @param innerChart\n * @returns Measures of the chart.\n */\nexport function getMeasures(innerChart: SapChartType): Measure[] {\n\treturn innerChart.getMeasures().map((measure) => {\n\t\treturn {\n\t\t\tname: measure.getLabel(),\n\t\t\tvalue: \"{\" + measure.getName() + \"}\"\n\t\t};\n\t});\n}\n\n/**\n * Get dimensions of the chart.\n * @param innerChart Inner chart\n * @param chartAPI Chart API\n * @returns Dimensions of the chart.\n */\nexport function getDimensions(innerChart: SapChartType, chartAPI: ChartType): Dimension[] {\n\treturn innerChart\n\t\t.getDimensions()\n\t\t.filter(function (dimension) {\n\t\t\treturn innerChart.getVisibleDimensions().includes(dimension.getName());\n\t\t})\n\t\t.map((dimension) => {\n\t\t\tconst dataModel = chartAPI.getPropertyDataModel(dimension.getName());\n\t\t\tconst displayValue = dataModel\n\t\t\t\t? getTextBinding(dataModel, {}, false, \"extension.formatters.sapfe.formatWithBrackets\")\n\t\t\t\t: undefined;\n\t\t\treturn {\n\t\t\t\tname: dimension.getLabel(),\n\t\t\t\tvalue: `{${dimension.getName()}}`,\n\t\t\t\tdisplayValue: displayValue\n\t\t\t};\n\t\t});\n}\n\n/**\n * Get feeds of the chart.\n * @param innerChart\n * @returns Feeds of the chart.\n */\nexport function getFeeds(innerChart: SapChartType): Feed[] {\n\tconst vizFeeds = (innerChart.getAggregation(\"_vizFrame\") as VizFrame).getFeeds();\n\tconst feeds: Feed[][] = vizFeeds.map((feed) => {\n\t\treturn (feed.getProperty(\"values\") as Control[]).map((feedValue) => {\n\t\t\tconst label = getLabel(innerChart, feedValue.getProperty(\"name\") as string, feedValue.getProperty(\"type\") as string);\n\t\t\tconst feedType: Feed = {\n\t\t\t\ttype: feed.getProperty(\"type\") as string,\n\t\t\t\tuid: feed.getProperty(\"uid\") as string,\n\t\t\t\tvalues: [label]\n\t\t\t};\n\t\t\treturn feedType;\n\t\t});\n\t});\n\treturn feeds.flat();\n}\n\n/**\n * Get the chart properties.\n * @param chartProperties\n * @param dimensionName\n * @returns Updated properties of chart.\n */\nfunction getChartProperties(\n\tchartProperties: Partial<{ plotArea?: { dataPointStyle?: { rules?: Rule[] } } }>,\n\tdimensionName: string | undefined\n): Partial<{ plotArea?: { dataPointStyle?: { rules?: Rule[] } } }> {\n\tconst rules = chartProperties.plotArea?.dataPointStyle?.rules ?? [];\n\trules.forEach((rule: Rule) => {\n\t\trule.dataContext = {};\n\t\tif (dimensionName) {\n\t\t\trule.dataContext[dimensionName] = rule.displayName || \"\";\n\t\t}\n\t\treturn rule;\n\t});\n\treturn chartProperties;\n}\n\n/**\n * Get measure label or dimension label of the chart.\n * @param innerChart\n * @param name\n * @param type\n * @returns Measure label or Dimension label of the chart.\n */\n\nfunction getLabel(innerChart: SapChartType, name: string, type: string): string {\n\tif (type === \"Dimension\") {\n\t\tconst dimensions = innerChart.getDimensions();\n\t\treturn (\n\t\t\tdimensions\n\t\t\t\t.filter((dimension) => {\n\t\t\t\t\treturn dimension.getName() === name;\n\t\t\t\t})[0]\n\t\t\t\t.getLabel() || name\n\t\t);\n\t} else {\n\t\tconst measures = innerChart.getMeasures();\n\t\treturn (\n\t\t\tmeasures\n\t\t\t\t.filter((measure) => {\n\t\t\t\t\treturn measure.getName() === name;\n\t\t\t\t})[0]\n\t\t\t\t.getLabel() || name\n\t\t);\n\t}\n}\n\n/**\n * Constructs the insights parameters from the table that is required to create the insights card.\n * @param controlAPI\n * @returns The insights parameters from the table.\n */\nexport async function createChartCardParams(controlAPI: ChartType): Promise<InsightsParams<ChartContent> | undefined> {\n\tconst chart = controlAPI.content;\n\tconst innerChart = (chart.getControlDelegate() as unknown as ChartDelegate | undefined)?.getInnerChart(chart) as\n\t\t| SapChartType\n\t\t| undefined;\n\n\tif (!innerChart) {\n\t\tthrow new Error(\"Cannot access chart.\");\n\t}\n\n\tconst params = await createInsightsParams(\"Analytical\", controlAPI, chart.getFilter());\n\tif (!params) {\n\t\treturn;\n\t}\n\tparams.entitySetPath = chart.data(\"targetCollectionPath\") as string;\n\tparams.requestParameters.queryUrl = (innerChart.getBinding(\"data\") as ODataV4ListBinding).getDownloadUrl() ?? \"\";\n\tconst dimensions = getDimensions(innerChart, controlAPI);\n\tconst content: ChartContent = {\n\t\tcardTitle: chart.getHeader(),\n\t\tlegendVisible: false,\n\t\tchartType: chart.getChartType(),\n\t\tmeasures: getMeasures(innerChart),\n\t\tdimensions,\n\t\tfeeds: getFeeds(innerChart),\n\t\tallowedChartTypes: (innerChart.getAvailableChartTypes() as { available: { chart: string }[] }).available,\n\t\tchartProperties: getChartProperties((innerChart.getAggregation(\"_vizFrame\") as VizFrame).getVizProperties(), dimensions[0]?.name)\n\t};\n\treturn { ...params, content };\n}\n"],"mappings":";;;;;;;;;;EAYA;AACA;AACA;AACA;AACA;EACO,SAASA,WAAWA,CAACC,UAAwB,EAAa;IAChE,OAAOA,UAAU,CAACD,WAAW,CAAC,CAAC,CAACE,GAAG,CAAEC,OAAO,IAAK;MAChD,OAAO;QACNC,IAAI,EAAED,OAAO,CAACE,QAAQ,CAAC,CAAC;QACxBC,KAAK,EAAE,GAAG,GAAGH,OAAO,CAACI,OAAO,CAAC,CAAC,GAAG;MAClC,CAAC;IACF,CAAC,CAAC;EACH;;EAEA;AACA;AACA;AACA;AACA;AACA;EALAC,QAAA,CAAAR,WAAA,GAAAA,WAAA;EAMO,SAASS,aAAaA,CAACR,UAAwB,EAAES,QAAmB,EAAe;IACzF,OAAOT,UAAU,CACfQ,aAAa,CAAC,CAAC,CACfE,MAAM,CAAC,UAAUC,SAAS,EAAE;MAC5B,OAAOX,UAAU,CAACY,oBAAoB,CAAC,CAAC,CAACC,QAAQ,CAACF,SAAS,CAACL,OAAO,CAAC,CAAC,CAAC;IACvE,CAAC,CAAC,CACDL,GAAG,CAAEU,SAAS,IAAK;MACnB,MAAMG,SAAS,GAAGL,QAAQ,CAACM,oBAAoB,CAACJ,SAAS,CAACL,OAAO,CAAC,CAAC,CAAC;MACpE,MAAMU,YAAY,GAAGF,SAAS,GAC3BG,cAAc,CAACH,SAAS,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,+CAA+C,CAAC,GACrFI,SAAS;MACZ,OAAO;QACNf,IAAI,EAAEQ,SAAS,CAACP,QAAQ,CAAC,CAAC;QAC1BC,KAAK,EAAE,IAAIM,SAAS,CAACL,OAAO,CAAC,CAAC,GAAG;QACjCU,YAAY,EAAEA;MACf,CAAC;IACF,CAAC,CAAC;EACJ;;EAEA;AACA;AACA;AACA;AACA;EAJAT,QAAA,CAAAC,aAAA,GAAAA,aAAA;EAKO,SAASW,QAAQA,CAACnB,UAAwB,EAAU;IAC1D,MAAMoB,QAAQ,GAAIpB,UAAU,CAACqB,cAAc,CAAC,WAAW,CAAC,CAAcF,QAAQ,CAAC,CAAC;IAChF,MAAMG,KAAe,GAAGF,QAAQ,CAACnB,GAAG,CAAEsB,IAAI,IAAK;MAC9C,OAAQA,IAAI,CAACC,WAAW,CAAC,QAAQ,CAAC,CAAevB,GAAG,CAAEwB,SAAS,IAAK;QACnE,MAAMC,KAAK,GAAGtB,QAAQ,CAACJ,UAAU,EAAEyB,SAAS,CAACD,WAAW,CAAC,MAAM,CAAC,EAAYC,SAAS,CAACD,WAAW,CAAC,MAAM,CAAW,CAAC;QACpH,MAAMG,QAAc,GAAG;UACtBC,IAAI,EAAEL,IAAI,CAACC,WAAW,CAAC,MAAM,CAAW;UACxCK,GAAG,EAAEN,IAAI,CAACC,WAAW,CAAC,KAAK,CAAW;UACtCM,MAAM,EAAE,CAACJ,KAAK;QACf,CAAC;QACD,OAAOC,QAAQ;MAChB,CAAC,CAAC;IACH,CAAC,CAAC;IACF,OAAOL,KAAK,CAACS,IAAI,CAAC,CAAC;EACpB;;EAEA;AACA;AACA;AACA;AACA;AACA;EALAxB,QAAA,CAAAY,QAAA,GAAAA,QAAA;EAMA,SAASa,kBAAkBA,CAC1BC,eAAgF,EAChFC,aAAiC,EACiC;IAClE,MAAMC,KAAK,GAAGF,eAAe,CAACG,QAAQ,EAAEC,cAAc,EAAEF,KAAK,IAAI,EAAE;IACnEA,KAAK,CAACG,OAAO,CAAEC,IAAU,IAAK;MAC7BA,IAAI,CAACC,WAAW,GAAG,CAAC,CAAC;MACrB,IAAIN,aAAa,EAAE;QAClBK,IAAI,CAACC,WAAW,CAACN,aAAa,CAAC,GAAGK,IAAI,CAACE,WAAW,IAAI,EAAE;MACzD;MACA,OAAOF,IAAI;IACZ,CAAC,CAAC;IACF,OAAON,eAAe;EACvB;;EAEA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEA,SAAS7B,QAAQA,CAACJ,UAAwB,EAAEG,IAAY,EAAEyB,IAAY,EAAU;IAC/E,IAAIA,IAAI,KAAK,WAAW,EAAE;MACzB,MAAMc,UAAU,GAAG1C,UAAU,CAACQ,aAAa,CAAC,CAAC;MAC7C,OACCkC,UAAU,CACRhC,MAAM,CAAEC,SAAS,IAAK;QACtB,OAAOA,SAAS,CAACL,OAAO,CAAC,CAAC,KAAKH,IAAI;MACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CACJC,QAAQ,CAAC,CAAC,IAAID,IAAI;IAEtB,CAAC,MAAM;MACN,MAAMwC,QAAQ,GAAG3C,UAAU,CAACD,WAAW,CAAC,CAAC;MACzC,OACC4C,QAAQ,CACNjC,MAAM,CAAER,OAAO,IAAK;QACpB,OAAOA,OAAO,CAACI,OAAO,CAAC,CAAC,KAAKH,IAAI;MAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CACJC,QAAQ,CAAC,CAAC,IAAID,IAAI;IAEtB;EACD;;EAEA;AACA;AACA;AACA;AACA;EACO,eAAeyC,qBAAqBA,CAACC,UAAqB,EAAqD;IACrH,MAAMC,KAAK,GAAGD,UAAU,CAACE,OAAO;IAChC,MAAM/C,UAAU,GAAI8C,KAAK,CAACE,kBAAkB,CAAC,CAAC,EAA2CC,aAAa,CAACH,KAAK,CAEhG;IAEZ,IAAI,CAAC9C,UAAU,EAAE;MAChB,MAAM,IAAIkD,KAAK,CAAC,sBAAsB,CAAC;IACxC;IAEA,MAAMC,MAAM,GAAG,MAAMC,oBAAoB,CAAC,YAAY,EAAEP,UAAU,EAAEC,KAAK,CAACO,SAAS,CAAC,CAAC,CAAC;IACtF,IAAI,CAACF,MAAM,EAAE;MACZ;IACD;IACAA,MAAM,CAACG,aAAa,GAAGR,KAAK,CAACS,IAAI,CAAC,sBAAsB,CAAW;IACnEJ,MAAM,CAACK,iBAAiB,CAACC,QAAQ,GAAIzD,UAAU,CAAC0D,UAAU,CAAC,MAAM,CAAC,CAAwBC,cAAc,CAAC,CAAC,IAAI,EAAE;IAChH,MAAMjB,UAAU,GAAGlC,aAAa,CAACR,UAAU,EAAE6C,UAAU,CAAC;IACxD,MAAME,OAAqB,GAAG;MAC7Ba,SAAS,EAAEd,KAAK,CAACe,SAAS,CAAC,CAAC;MAC5BC,aAAa,EAAE,KAAK;MACpBC,SAAS,EAAEjB,KAAK,CAACkB,YAAY,CAAC,CAAC;MAC/BrB,QAAQ,EAAE5C,WAAW,CAACC,UAAU,CAAC;MACjC0C,UAAU;MACVpB,KAAK,EAAEH,QAAQ,CAACnB,UAAU,CAAC;MAC3BiE,iBAAiB,EAAGjE,UAAU,CAACkE,sBAAsB,CAAC,CAAC,CAAwCC,SAAS;MACxGlC,eAAe,EAAED,kBAAkB,CAAEhC,UAAU,CAACqB,cAAc,CAAC,WAAW,CAAC,CAAc+C,gBAAgB,CAAC,CAAC,EAAE1B,UAAU,CAAC,CAAC,CAAC,EAAEvC,IAAI;IACjI,CAAC;IACD,OAAO;MAAE,GAAGgD,MAAM;MAAEJ;IAAQ,CAAC;EAC9B;EAACxC,QAAA,CAAAqC,qBAAA,GAAAA,qBAAA;EAAA,OAAArC,QAAA;AAAA","ignoreList":[],"file":"AnalyticalInsightsHelper-dbg.js"}