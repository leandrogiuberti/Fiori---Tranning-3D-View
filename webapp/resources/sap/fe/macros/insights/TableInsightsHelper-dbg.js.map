{"version":3,"names":["getUomBinding","propertyTargetObject","property","uom","annotations","Measures","ISOCurrency","Unit","propertyBinding","pathInModel","compileExpression","concat","getExpressionFromAnnotation","isAnnotationTableColumn","column","getSupportedColumns","columns","table","metaData","reduce","supportedColumns","name","dataField","resolvePath","annotationPath","target","isDataFieldTypes","Value","$target","isImageURL","isMultiValue","push","formatOptions","typeConfig","getAdditionalText","displayMode","dataModel","propertyBindingExpression","getContextRelativeTargetObjectPath","targetObject","commonText","Common","Text","undefined","formatWithTypeInformation","relativeLocation","getRelativePaths","formatResult","valueFormatters","formatToKeepWhitespace","_exports","getRowCriticality","tableAPI","getTableDefinition","annotation","row","rowCriticalityForInsights","getInsightsRelevantColumns","getContent","metaModel","getModel","getMetaModel","metaPath","data","getColumns","forEach","getPropertyKey","context","getContext","objectPath","getInvolvedDataModelObjects","title","getProperty","convertTypes","map","supportedColumn","uomBinding","columnText","getTextBinding","visible","value","isSemanticKey","getDisplayMode","getTitleBindingExpression","FieldTemplating","getTextBindingExpression","splitTitleOnTwoLines","CommonUtils","getTargetView","getViewData","additionalText","identifier","criticalityBinding","getCriticalityBinding","state","showStateIcon","customStateIcon","Criticality","showCriticalityIcon","CriticalityRepresentation","criticalityExpressionForIntegrationCards","criticalityIconExpressionForIntegrationCards","createTableCardParams","controlAPI","insightsRelevantColumns","sortConditionsQuery","params","createInsightsParams","getFilter","controlState","StateUtil","retrieveExternalState","groupProperty","groupLevels","split","pop","requestParameters","groupBy","Error","parameters","isNavigationEnabled","entitySetPath","sortQuery","queryUrl","getRowBinding","getDownloadUrl","content","cardTitle","getHeader","rowCriticality","viewData","entitySet","navigationSetting","navigation","replace","detail","outbound","display"],"sourceRoot":".","sources":["TableInsightsHelper.ts"],"sourcesContent":["import type { ConvertedMetadata, Property, PropertyPath } from \"@sap-ux/vocabularies-types\";\nimport type { ISOCurrency, Unit } from \"@sap-ux/vocabularies-types/vocabularies/Measures\";\nimport type { DataField, DataPointType } from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport { CriticalityRepresentationType } from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport type { BindingToolkitExpression, CompiledBindingToolkitExpression } from \"sap/fe/base/BindingToolkit\";\nimport {\n\tcompileExpression,\n\tconcat,\n\tformatResult,\n\tformatWithTypeInformation,\n\tgetExpressionFromAnnotation,\n\tpathInModel\n} from \"sap/fe/base/BindingToolkit\";\nimport CommonUtils from \"sap/fe/core/CommonUtils\";\nimport type { BaseManifestSettings } from \"sap/fe/core/converters/ManifestSettings\";\nimport { convertTypes, getInvolvedDataModelObjects } from \"sap/fe/core/converters/MetaModelConverter\";\nimport { isDataFieldTypes } from \"sap/fe/core/converters/annotations/DataField\";\nimport type { TableVisualization } from \"sap/fe/core/converters/controls/Common/Table\";\nimport type { AnnotationTableColumn, PropertyTypeFormatOptions, TableColumn } from \"sap/fe/core/converters/controls/Common/table/Columns\";\nimport valueFormatters from \"sap/fe/core/formatters/ValueFormatter\";\nimport { getTitleBindingExpression } from \"sap/fe/core/helpers/TitleHelper\";\nimport {\n\tcriticalityExpressionForIntegrationCards,\n\tcriticalityIconExpressionForIntegrationCards\n} from \"sap/fe/core/templating/CriticalityFormatters\";\nimport { getContextRelativeTargetObjectPath, getRelativePaths, type DataModelObjectPath } from \"sap/fe/core/templating/DataModelPathHelper\";\nimport type { DisplayMode } from \"sap/fe/core/templating/DisplayModeFormatter\";\nimport { isImageURL, isSemanticKey } from \"sap/fe/core/templating/PropertyHelper\";\nimport { getDisplayMode } from \"sap/fe/core/templating/UIFormatters\";\nimport * as FieldTemplating from \"sap/fe/macros/field/FieldTemplating\";\nimport { getTextBinding } from \"sap/fe/macros/field/FieldTemplating\";\nimport type { TableCardColumn } from \"sap/ui/integration/widgets/Card\";\nimport StateUtil from \"sap/ui/mdc/p13n/StateUtil\";\nimport type Context from \"sap/ui/model/Context\";\nimport type ODataMetaModel from \"sap/ui/model/odata/v4/ODataMetaModel\";\nimport { type ITableBlock } from \"../table/TableAPI\";\nimport type { ControlState } from \"./CommonInsightsHelper\";\nimport { createInsightsParams } from \"./CommonInsightsHelper\";\nimport type { InsightsParams, TableContent } from \"./InsightsService\";\n\nfunction getUomBinding(propertyTargetObject: Property | undefined, property: string): CompiledBindingToolkitExpression {\n\tconst uom: ISOCurrency | Unit | undefined =\n\t\tpropertyTargetObject?.annotations.Measures?.ISOCurrency || propertyTargetObject?.annotations.Measures?.Unit;\n\tif (!uom) {\n\t\treturn;\n\t} else {\n\t\tconst propertyBinding = pathInModel(property);\n\t\treturn compileExpression(concat(propertyBinding, \" \", getExpressionFromAnnotation(uom)));\n\t}\n}\n\ntype ColumnInfo = {\n\tproperty: string;\n\ttitle: string;\n\tcontext: Context;\n\tobjectPath: DataModelObjectPath<Property>;\n\tannotationPath?: string;\n\tformatOptions?: PropertyTypeFormatOptions;\n};\n\n/**\n * Check if the given TableColumn is an AnnotationTableColumn.\n * @param column Column that is to be checked\n * @returns True of it is an AnnotationTableColumn\n */\nfunction isAnnotationTableColumn(column: TableColumn): column is AnnotationTableColumn {\n\treturn \"annotationPath\" in column;\n}\n\n/**\n * Get all columns that are supported with SAP Insights.\n * The current implementation does not support columns with image urls and columns with multiple values, therefore, they are removed here.\n * @param columns\n * @param table\n * @param metaData\n * @returns An array containing all supported columns.\n */\nfunction getSupportedColumns(columns: Record<string, ColumnInfo>, table: TableVisualization, metaData: ConvertedMetadata): ColumnInfo[] {\n\treturn table.columns.reduce(function (supportedColumns: ColumnInfo[], column) {\n\t\tif (column.name in columns && isAnnotationTableColumn(column)) {\n\t\t\tlet property;\n\t\t\tconst dataField = metaData.resolvePath<DataField>(column.annotationPath).target;\n\t\t\t// image urls and multi value columns are not supported\n\t\t\tif (isDataFieldTypes(dataField)) {\n\t\t\t\t// Check if it is from lineItem annotation else consider the property level annotation\n\t\t\t\tproperty = (dataField.Value as PropertyPath).$target;\n\t\t\t} else {\n\t\t\t\tproperty = metaData.resolvePath<Property>(column.annotationPath).target;\n\t\t\t}\n\t\t\tif (!(property && isImageURL(property)) && !column.isMultiValue) {\n\t\t\t\tsupportedColumns.push({\n\t\t\t\t\t...columns[column.name],\n\t\t\t\t\tannotationPath: column.annotationPath,\n\t\t\t\t\tformatOptions: column.typeConfig?.formatOptions\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\treturn supportedColumns;\n\t}, []);\n}\n\nexport function getAdditionalText(displayMode: DisplayMode, dataModel: DataModelObjectPath<Property>): CompiledBindingToolkitExpression {\n\tlet propertyBindingExpression: BindingToolkitExpression<string> = pathInModel(getContextRelativeTargetObjectPath(dataModel));\n\tconst targetObject = dataModel.targetObject;\n\tconst commonText = targetObject?.annotations.Common?.Text;\n\tif (commonText === undefined || targetObject === undefined) {\n\t\treturn undefined;\n\t}\n\tpropertyBindingExpression = formatWithTypeInformation(targetObject, propertyBindingExpression);\n\n\tswitch (displayMode) {\n\t\tcase \"ValueDescription\":\n\t\t\tconst relativeLocation = getRelativePaths(dataModel);\n\t\t\treturn compileExpression(getExpressionFromAnnotation(commonText, relativeLocation));\n\t\tcase \"DescriptionValue\":\n\t\t\treturn compileExpression(formatResult([propertyBindingExpression], valueFormatters.formatToKeepWhitespace));\n\t\tdefault:\n\t\t\treturn undefined;\n\t}\n}\n\nexport function getRowCriticality(tableAPI: ITableBlock): string | undefined {\n\treturn tableAPI.getTableDefinition().annotation.row?.rowCriticalityForInsights;\n}\n\n/**\n * Filters the columns that can be shown on the insights card from the visible columns on the table.\n * @param tableAPI Table API\n * @returns A list of columns that can be shown on the insightsCard.\n */\nexport function getInsightsRelevantColumns(tableAPI: ITableBlock): TableCardColumn[] {\n\tconst table = tableAPI.getContent();\n\tconst metaModel = table.getModel()?.getMetaModel() as ODataMetaModel;\n\tconst metaPath = table.data(\"metaPath\") as string;\n\tconst columns: Record<string, ColumnInfo> = {};\n\ttable.getColumns().forEach((column) => {\n\t\tconst property = column.getPropertyKey();\n\t\tconst context = metaModel.getContext(metaPath + \"/\" + property);\n\t\tconst objectPath = getInvolvedDataModelObjects<Property>(context);\n\t\tconst title = column.getProperty(\"header\") as string;\n\t\tcolumns[property] = { property, context, objectPath, title };\n\t});\n\n\tconst supportedColumns = getSupportedColumns(columns, tableAPI.getTableDefinition(), convertTypes(metaModel));\n\n\treturn supportedColumns.map(function (supportedColumn) {\n\t\tconst dataModel = getInvolvedDataModelObjects<Property>(supportedColumn.context);\n\t\tconst propertyTargetObject = dataModel.targetObject;\n\t\tconst uomBinding = getUomBinding(propertyTargetObject, supportedColumn.property);\n\t\tconst columnText = uomBinding ?? getTextBinding(dataModel, {}, false, \"extension.formatters.sapfe.formatWithBrackets\");\n\t\tconst column: TableCardColumn = {\n\t\t\tvisible: false,\n\t\t\tvalue: columnText,\n\t\t\ttitle: supportedColumn.title\n\t\t};\n\t\tif (isSemanticKey(propertyTargetObject, dataModel)) {\n\t\t\tconst displayMode = getDisplayMode(dataModel);\n\t\t\tcolumn.value = getTitleBindingExpression(\n\t\t\t\tdataModel,\n\t\t\t\tFieldTemplating.getTextBindingExpression,\n\t\t\t\t{ displayMode, splitTitleOnTwoLines: true },\n\t\t\t\tundefined,\n\t\t\t\tCommonUtils.getTargetView(tableAPI).getViewData(),\n\t\t\t\t\"extension.formatters.sapfe.formatTitle\"\n\t\t\t);\n\t\t\tcolumn.additionalText = getAdditionalText(displayMode, dataModel);\n\t\t\tcolumn.identifier = true;\n\t\t}\n\t\tif (supportedColumn.annotationPath) {\n\t\t\tconst criticalityBinding = getCriticalityBinding(supportedColumn.annotationPath, metaPath, metaModel);\n\t\t\tif (criticalityBinding) {\n\t\t\t\tcolumn.state = criticalityBinding.state as CompiledBindingToolkitExpression;\n\t\t\t\tcolumn.showStateIcon = criticalityBinding.showStateIcon;\n\t\t\t\tcolumn.customStateIcon = criticalityBinding.customStateIcon;\n\t\t\t}\n\t\t}\n\t\treturn column;\n\t});\n}\n\n/**\n * Get criticality state binding expression and icon information.\n * @param annotationPath Annotation path\n * @param metaPath Meta path\n * @param metaModel Meta model\n * @returns The criticality state binding expression and icon information.\n */\nfunction getCriticalityBinding(annotationPath: string, metaPath: string, metaModel: ODataMetaModel): Partial<TableCardColumn> | undefined {\n\tconst dataModel = getInvolvedDataModelObjects(metaModel.getContext(annotationPath), metaModel.getContext(metaPath)),\n\t\tpropertyTargetObject = dataModel.targetObject as DataPointType;\n\tif (propertyTargetObject.Criticality) {\n\t\tconst showCriticalityIcon = propertyTargetObject.CriticalityRepresentation !== CriticalityRepresentationType.WithoutIcon;\n\t\treturn {\n\t\t\tstate: criticalityExpressionForIntegrationCards(propertyTargetObject.Criticality),\n\t\t\tshowStateIcon: showCriticalityIcon,\n\t\t\tcustomStateIcon: showCriticalityIcon ? criticalityIconExpressionForIntegrationCards(propertyTargetObject) : \"\"\n\t\t};\n\t}\n\treturn undefined;\n}\n\n/**\n * Constructs the insights parameters from the table that is required to create the insights card.\n * @param controlAPI\n * @param insightsRelevantColumns\n * @param sortConditionsQuery\n * @returns The insights parameters from the table.\n */\nexport async function createTableCardParams(\n\tcontrolAPI: ITableBlock,\n\tinsightsRelevantColumns: TableCardColumn[],\n\tsortConditionsQuery: string\n): Promise<InsightsParams<TableContent> | undefined> {\n\tconst table = controlAPI.getContent();\n\tconst params = await createInsightsParams(\"Table\", controlAPI, table.getFilter(), insightsRelevantColumns);\n\tif (!params) {\n\t\treturn;\n\t}\n\n\ttry {\n\t\tconst controlState = (await StateUtil.retrieveExternalState(table)) as ControlState;\n\t\tconst groupProperty = controlState.groupLevels?.[0]?.name.split(\"::\").pop();\n\t\tif (groupProperty) {\n\t\t\tparams.requestParameters.groupBy = {\n\t\t\t\tproperty: groupProperty\n\t\t\t};\n\t\t}\n\t} catch {\n\t\tthrow Error(\"Error retrieving control states\");\n\t}\n\tparams.parameters.isNavigationEnabled = isNavigationEnabled(controlAPI);\n\tparams.entitySetPath = table.data(\"metaPath\") as string;\n\tparams.requestParameters.sortQuery = sortConditionsQuery;\n\tparams.requestParameters.queryUrl = table.getRowBinding().getDownloadUrl() ?? \"\";\n\n\tconst content: TableContent = {\n\t\tcardTitle: table.getHeader(),\n\t\tinsightsRelevantColumns,\n\t\trowCriticality: getRowCriticality(controlAPI) ?? undefined\n\t};\n\n\treturn { ...params, content };\n}\n\n/**\n * Checks if row level navigation is enabled for table card.\n * @param controlAPI Table API\n * @returns True if row level navigation is enabled.\n */\nfunction isNavigationEnabled(controlAPI: ITableBlock): boolean {\n\tconst table = controlAPI.getContent(),\n\t\tviewData = CommonUtils.getTargetView(controlAPI).getViewData() as BaseManifestSettings,\n\t\tentitySet = table.data(\"metaPath\") as string,\n\t\tnavigationSetting = viewData.navigation?.[entitySet]\n\t\t\t? viewData.navigation[entitySet]\n\t\t\t: viewData.navigation?.[entitySet.replace(\"/\", \"\")];\n\t// Disable row level navigation if external navigation is configured for LR table using manifest\n\treturn !(navigationSetting?.detail?.outbound || navigationSetting?.display?.target);\n}\n"],"mappings":"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","ignoreList":[],"file":"TableInsightsHelper-dbg.js"}