{"version":3,"names":["TableAPI","_dec","defineUI5Class","returnTypes","_dec2","mixin","TableAPIStateHandler","_dec3","TableExport","_dec4","TableOptimisticBatch","_dec5","TableHierarchy","_dec6","EmptyRowsHandler","_dec7","ContextMenuHandler","_dec8","TableSharing","_dec9","ColumnManagement","_dec10","implementInterface","_dec11","_dec12","property","type","expectedTypes","expectedAnnotations","required","_dec13","_dec14","_dec15","_dec16","_dec17","_dec18","_dec19","_dec20","_dec21","_dec22","_dec23","allowedValues","_dec24","_dec25","_dec26","_dec27","_dec28","_dec29","_dec30","_dec31","_dec32","_dec33","_dec34","_dec35","aggregation","altTypes","multiple","_dec36","_dec37","_dec38","_dec39","defaultValue","_dec40","_dec41","_dec42","_dec43","_dec44","_dec45","_dec46","_dec47","_dec48","_dec49","_dec50","TitleLevel","Auto","_dec51","_dec52","_dec53","_dec54","_dec55","_dec56","_dec57","_dec58","isBindingInfo","_dec59","_dec60","_dec61","_dec62","_dec63","_dec64","_dec65","_dec66","defaultClass","TableCreationOptions","_dec67","forwarding","getter","_dec68","_dec69","_dec70","_dec71","event","_dec72","_dec73","_dec74","_dec75","_dec76","_dec77","_dec78","_dec79","xmlEventHandler","_dec80","_dec81","_dec82","_dec83","_dec84","_dec85","_dec86","_dec87","_dec88","_dec89","_dec90","_dec91","_dec92","_dec93","_dec94","_dec95","_dec96","_dec97","_dec98","_dec99","_dec100","_dec101","_dec102","_dec103","_dec104","_dec105","_dec106","_class","_class2","_MacroAPI","mSettings","_this","_len","arguments","length","others","Array","_key","call","propertyEditModeCache","initialControlState","_initializerDefineProperty","_descriptor","_descriptor2","_descriptor3","_descriptor4","_descriptor5","_descriptor6","_descriptor7","_descriptor8","_descriptor9","_descriptor10","_descriptor11","_descriptor12","_descriptor13","_descriptor14","_descriptor15","_descriptor16","_descriptor17","_descriptor18","_descriptor19","_descriptor20","_descriptor21","_descriptor22","_descriptor23","_descriptor24","_descriptor25","_descriptor26","_descriptor27","_descriptor28","_descriptor29","_descriptor30","_descriptor31","_descriptor32","_descriptor33","_descriptor34","_descriptor35","_descriptor36","_descriptor37","_descriptor38","_descriptor39","_descriptor40","_descriptor41","_descriptor42","_descriptor43","_descriptor44","_descriptor45","_descriptor46","_descriptor47","_descriptor48","_descriptor49","_descriptor50","_descriptor51","_descriptor52","_descriptor53","_descriptor54","_descriptor55","_descriptor56","_descriptor57","_descriptor58","_descriptor59","_descriptor60","_descriptor61","_descriptor62","_descriptor63","_descriptor64","_descriptor65","_descriptor66","_descriptor67","_descriptor68","ignoreContextChangeEvent","lock","storedEvents","overrideRowPress","_descriptor69","enhancedPropertyInfos","propertyInfos","originalTableDefinition","tableDefinition","attachStateChangeHandler","attachManifestEvents","hasListeners","_inheritsLoose","_proto","prototype","getRowBinding","parameters","mdcTable","content","dataModel","getModel","bindList","getRowCollectionPath","undefined","StateUtil","detachStateChange","stateChangeHandler","attachStateChange","oEvent","control","getParameter","isA","tableAPI","getParent","handleStateChange","attachIfNoListeners","eventName","methodConfig","attachEvent","ui5Event","FPMHelper","loadModuleAndCallMethod","moduleName","methodName","catch","error","Log","getCustomFunctionInfo","beforeRebindTable","rowPress","selectionChange","setUpNoDataInformation","table","getNoData","owner","_getOwner","description","title","resourceModel","getResourceModel","suffix","metaPath","startsWith","substring","getText","resourceBundle","Library","getResourceBundleFor","getNoDataMessageMode","setAggregation","Text","text","illustratedMessage","IllustratedMessage","illustrationType","IllustratedMessageType","BeforeSearch","illustrationSize","enableDefaultTitleAndDescription","getSectionContentRole","sendDataToConsumer","consumerData","setHeader","setHeaderStyle","headerStyle","setHeaderLevel","titleLevel","getIgnoreContextChangeEvent","setIgnoreContextChangeEvent","value","setBusy","setAttachEvents","eventHandlers","_getAPIExtension","source","instanceMap","get","find","api","getBinding","getSelectedContexts","isContextMenuActive","getBindingContext","getProperty","addMessage","getContent","Promise","resolve","checkContextChange","detachEvent","rowBinding","resolvedPath","getResolvedPath","createMessage","path","message","Message","target","processor","persistent","_getMessageManager","addMessages","getId","checkIfRecommendationRelevant","_oEvent","isTableReadOnly","isEditable","CommonUtils","getIsEditable","view","getTargetView","viewData","getViewData","converterType","removeMessage","id","msgManager","messages","getMessageModel","getData","result","e","removeMessages","refresh","tableRowBinding","isRelative","getTableDefinition","appComponent","getAppComponent","headerContext","getHeaderContext","getSideEffectsService","requestSideEffects","$NavigationPropertyPath","getGroupId","getQuickFilter","getPresentationVariant","tableState","retrieveExternalState","sortOrder","sorters","map","sorter","Property","name","replace","Descending","descending","groupLevels","group","tableViz","Content","items","item","Value","Type","aggregations","hasAggregations","key","newKey","initialExpansionLevel","getPayload","tablePV","PresentationVariantClass","setTableVisualization","properties","GroupBy","SortOrder","Aggregations","setProperties","Error","String","setPresentationVariant","currentStatePV","getEnhancedFetchedPropertyInfos","propertyInfoNames","propInfo","newTableState","convertPVToState","tableProperties","getProperties","tablePayload","applyExternalState","getCurrentVariantKey","getVariant","setCurrentVariantKey","variantManagement","Messaging","_getRowBinding","oTable","getCounts","TableUtils","getListBindingForCount","batchGroupId","data","additionalFilters","getHiddenFilters","then","iValue","getCountFormatted","onListBindingChange","fireEvent","getParameters","setFastCreationRowEnablement","refreshSelectedCount","TableRuntime","setContextsAsync","onFieldLiveChange","_onFieldLiveChange","onQuickFilterSelectionChange","filterBarID","getFilter","filterBar","UI5Element","getElementById","getSuspendSelection","rebind","getController","getExtensionAPI","updateAppState","onTableNavigate","oController","oContext","mParameters","isTableRowNavigationPossible","fullScreenDialog","close","navigationParameters","Object","assign","reason","NavigationReason","RowPress","_routing","navigateForwardToContext","onTableRowPress","pressEvent","rowNavigationInfo","annotation","row","navigationInfo","controller","getPageController","bindingContext","avoidParallelCalls","_intentBasedNavigation","onChevronPressNavigateOutBound","navigationTarget","editable","checkEditable","callExtension","targetPath","recreateContext","onSegmentedButtonPressed","onVariantSelected","originalSource","getSource","onVariantSaved","onRowPressed","context","emptyRow","isInactive","isTransient","analyticalGroupHeaderExpanded","enableAnalytics","onShareToCollaborationManagerPress","contexts","maxNumberofSelectedItems","_onShareToCollaborationManagerPress","onOpenInNewTabPress","allContexts","navigableContexts","promiseToWait","PromiseKeeper","textKey","MessageBox","confirm","getTranslatedText","onClose","shouldProceed","promise","forEach","warning","onInternalPatchCompleted","evt","internalModelContext","selectedContexts","DeleteHelper","updateDeleteInfoForSelectedContexts","messageHandler","showMessageDialog","releaseHoldByControl","onInternalPatchSent","editFlowExtension","editFlow","holdMessagesForControl","handlePatchSent","inlineEditFlow","isInlineEditPossible","handleInlineEditPatchSent","onInternalDataReceived","isRecommendationRelevant","contextIdentifier","getIdentifierColumn","responseContextsArray","getAllCurrentContexts","newContexts","push","recommendations","fetchAndApplyRecommendations","setDownloadUrl","onInternalDataRequested","setProperty","filters","quickFilters","showCounts","setCountsAsLoading","refreshUnSelectedCounts","onPaste","forContextMenu","setContextMenuActive","rawPastedData","menu","internalContext","enablePaste","action","srcContexts","srcContext","newParentContext","getPath","all","move","parent","copy","requestSideEffectsForCopyAction","requestSideEffectsForChangeNextSiblingAction","MessageToast","show","getEnablePaste","cellSelection","getCellSelector","getSelection","columns","PasteHelper","pasteRangeData","pasteData","onCut","_onCopyCut","onCopy","onBeforeExport","exportEvent","_onBeforeExport","dataStateIndicatorFilter","sTableContextBindingPath","sTableRowBinding","getTargets","onDataStateChange","dataStateIndicator","filteredMessages","hiddenMandatoryProperties","msg","technicalDetails","getTechnicalDetails","emptyRowMessage","missingColumn","filter","hiddenProperty","messageStripError","join","showMessage","internalModel","resumeBinding","bRequestIfNotInitialized","getDataInitialized","refreshNotApplicableFields","oFilterControl","FilterUtils","getNotApplicableFilters","suspendBinding","invalidateContent","fastCreationRow","getCreationRow","tableBinding","getContext","TableHelper","enableFastCreationRow","onAddCardToInsightsPressed","_onAddCardToInsightsPressed","onMassEditButtonPressed","massEditHelper","MassEditDialogHelper","onContextMenu","setMassEditDialogHelper","open","onSelectionChanged","ui5event","setContexts","selectedContext","onActionPress","pageController","actionName","model","labelExpression","resolveBindingString","label","isPathInModelExpression","modelName","executeAction","notApplicableContexts","convertedMetadata","convertTypes","getMetaModel","entityType","resolvePath","entityTypeFullyQualifiedName","myUnapplicableContextDialog","NotApplicableContextDialog","entitySet","entitySetName","applicableContexts","invokeAction","info","onContextMenuPress","_onContextMenuPress","massEditDialogHelper","getMassEditDialogHelper","updateFilterBar","filterBarRefId","getFilterBar","_setFilterBar","detachFilterBar","setFilter","getFilterBarControl","tableAPIId","tableAPILocalId","potentialfilterBarId","RegExp","byId","handleCreateActivate","activateEvent","_handleCreateActivate","onDragEnterDocument","_onDragEnterDocument","onDragStartDocument","_onDragStartDocument","onDropDocument","_onDropDocument","onCollapseExpandNode","expand","getMetadata","_onCollapseExpandNode","onMoveUpDown","moveUp","_onMoveUpDown","getSelectionVariant","StateHelper","setSelectionVariant","selectionVariant","prefillDescriptions","setSelectionVariantToMdcControl","_createContentV2Mode","preprocessorContext","metaModel","createBindingContext","contextPath","deepClone","updateColumnsVisibility","ignoredFields","collectionEntity","collection","contextObjectPath","getInvolvedDataModelObjects","handlerProvider","TableEventHandlerProvider","fragment","XMLPreprocessor","process","parseXMLString","xml","jsx","renderAsXML","MdcTableTemplate","getMDCTableTemplate","getConvertedMetadata","models","firstElementChild","destroy","Fragment","load","definition","getRootController","containingView","getRootControl","propertyKey","propertyValue","bSuppressInvalidate","_applyingSettings","includes","getDataModelAndConvertedTargetObject","propertyName","entityPath","targetMetaPath","propertyInfo","annotationPath","targetObject","convertedtargetObject","MetaModelConverter","convertMetaModelContext","dataModelPath","FieldTemplating","getDataModelObjectPathForValue","createAnyControl","ModeAsExpression","rowContext","anyObject","Any","any","setModel","getPropertyEditMode","propertyForFieldControl","editModeAsExpression","compileExpression","UIFormatters","getEditMode","setBindingContext","addDependent","editMode","getAny","showColumns","columnKeys","columnKey","modifyDynamicVisibilityForColumn","hideColumns","setIgnoredFields","getIgnoredFields","getControlState","controlState","fullState","initialState","getStateKey","oControl","getLocalId","dynamicVisibilityForColumns","updateColumnsVisibilityStatic","getMDCTable","asyncCall","lockName","suppressInvalidate","setFullScreenDialog","dialog","setEnhancedFetchedPropertyInfos","getPropertyInfos","enhancedPropertyInfo","visible","exportSettings","clipboardSettings","visualSettings","tooltip","isKey","extension","technicallyGroupable","technicallyAggregatable","customAggregate","additionalProperties","fromEntries","entries","_ref","_","maxConditions","formatOptions","constraints","groupLabel","caseSensitive","filterable","sortable","groupable","dataType","aggregatable","unit","_ref2","setCachedPropertyInfos","getCachedPropertyInfos","collectionContext","getContextRelativeTargetObjectPath","getTargetObjectPath","getTableTemplateBindingInfo","rowBindingInfo","suspended","$count","enable$select","select","keys","requestAtLeast","$select","enable$$getKeepAliveContext","$$getKeepAliveContext","$$clearSelectionOnFilter","$$groupId","$$updateGroupId","$$ownRequest","$$patchWithoutSideEffects","patchCompleted","bind","dataReceived","dataRequested","change","createActivate","createSent","handleCreateSent","patchSent","events","addSetting","getSettingsForManifest","tableSettings","enableExport","exportRequestSize","exportFileName","exportSheetName","frozenColumnCount","disableColumnFreeze","widthIncludingColumnHeader","rowCountMode","rowCount","enableFullScreen","disableCopyToClipboard","scrollThreshold","threshold","popinLayout","selectionMode","enablePastingOfComputedProperties","enableSelectAll","selectionLimit","condensedTableLayout","creationMode","creationFields","createAtEnd","inlineCreationRowsHiddenInEditMode","outbound","massEdit","enableMassEdit","customContent","visibleFields","operationGroupingMode","analyticalConfiguration","aggregationOnLeafLevel","quickVariantSelection","paths","findSlotActionFromKey","actions","a","onMetadataAvailable","createContent","getFullMetaPath","endsWith","forceCreation","getOwnerContextPath","fullMetaPath","metaPathContext","createTableDefinition","updatePropertiesFromTableDefinition","convertedTypes","targetType","fullyQualifiedName","createMDCTable","setupOptimisticBatch","setMetaPath","ManagedObjectMetadata","isGeneratedId","contentId","useBasicSearch","generate","readOnly","displayMode","emptyRowsEnabled","enabled","CreationMode","InlineCreationRows","StandardActionKeys","Create","mode","modeForNoDataMessage","split","getCount","MacroAPI","_applyDecoratedDescriptor","configurable","enumerable","writable","initializer","getOwnPropertyDescriptor"],"sourceRoot":".","sources":["TableAPI.ts"],"sourcesContent":["import type { EntitySet, EntityType, NavigationProperty, Property } from \"@sap-ux/vocabularies-types\";\nimport type {\n\tDataFieldAbstractTypes,\n\tDataFieldTypes,\n\tDataPointTypeTypes,\n\tLineItem,\n\tPresentationVariant,\n\tSelectionPresentationVariant\n} from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport Log from \"sap/base/Log\";\nimport deepClone from \"sap/base/util/deepClone\";\nimport {\n\tcompileExpression,\n\tisPathInModelExpression,\n\tresolveBindingString,\n\ttype CompiledBindingToolkitExpression\n} from \"sap/fe/base/BindingToolkit\";\nimport type { PropertiesOf, XMLEventHolder } from \"sap/fe/base/ClassSupport\";\nimport { aggregation, defineUI5Class, event, implementInterface, mixin, property, xmlEventHandler } from \"sap/fe/base/ClassSupport\";\nimport jsx from \"sap/fe/base/jsx-runtime/jsx\";\nimport CommonUtils from \"sap/fe/core/CommonUtils\";\nimport type IRowBindingInterface from \"sap/fe/core/IRowBindingInterface\";\nimport type PageController from \"sap/fe/core/PageController\";\nimport type ResourceModel from \"sap/fe/core/ResourceModel\";\nimport type BuildingBlock from \"sap/fe/core/buildingBlocks/BuildingBlock\";\nimport { parseXMLString, xml } from \"sap/fe/core/buildingBlocks/templating/BuildingBlockTemplateProcessor\";\nimport NotApplicableContextDialog from \"sap/fe/core/controllerextensions/editFlow/NotApplicableContextDialog\";\nimport NavigationReason from \"sap/fe/core/controllerextensions/routing/NavigationReason\";\nimport Any from \"sap/fe/core/controls/Any\";\nimport { CreationMode } from \"sap/fe/core/converters/ManifestSettings\";\nimport * as MetaModelConverter from \"sap/fe/core/converters/MetaModelConverter\";\nimport { convertTypes, getInvolvedDataModelObjects } from \"sap/fe/core/converters/MetaModelConverter\";\nimport {\n\tgetCustomFunctionInfo,\n\ttype ExternalMethodConfig,\n\ttype TableType,\n\ttype TableVisualization\n} from \"sap/fe/core/converters/controls/Common/Table\";\nimport { StandardActionKeys } from \"sap/fe/core/converters/controls/Common/table/StandardActions\";\nimport DeleteHelper from \"sap/fe/core/helpers/DeleteHelper\";\nimport FPMHelper from \"sap/fe/core/helpers/FPMHelper\";\nimport type { InternalModelContext } from \"sap/fe/core/helpers/ModelHelper\";\nimport PasteHelper from \"sap/fe/core/helpers/PasteHelper\";\nimport PromiseKeeper from \"sap/fe/core/helpers/PromiseKeeper\";\nimport { getResourceModel } from \"sap/fe/core/helpers/ResourceModelHelper\";\nimport { generate } from \"sap/fe/core/helpers/StableIdHelper\";\nimport type { RecommendationContextsInfo } from \"sap/fe/core/helpers/StandardRecommendationHelper\";\nimport type { RoutingNavigationParameters } from \"sap/fe/core/services/RoutingServiceFactory\";\nimport {\n\tgetContextRelativeTargetObjectPath,\n\tgetTargetObjectPath,\n\ttype DataModelObjectPath\n} from \"sap/fe/core/templating/DataModelPathHelper\";\nimport { type DisplayMode } from \"sap/fe/core/templating/DisplayModeFormatter\";\nimport * as UIFormatters from \"sap/fe/core/templating/UIFormatters\";\nimport type { CollectionBindingInfo, EventHandler } from \"sap/fe/macros/CollectionBindingInfo\";\nimport MacroAPI from \"sap/fe/macros/MacroAPI\";\nimport type ISingleSectionContributor from \"sap/fe/macros/controls/section/ISingleSectionContributor\";\nimport type { ConsumerData } from \"sap/fe/macros/controls/section/ISingleSectionContributor\";\nimport * as FieldTemplating from \"sap/fe/macros/field/FieldTemplating\";\nimport FilterUtils from \"sap/fe/macros/filter/FilterUtils\";\nimport type FilterBarBBV4 from \"sap/fe/macros/filterBar/FilterBar\";\nimport type FilterBarAPI from \"sap/fe/macros/filterBar/FilterBarAPI\";\nimport type { ControlState } from \"sap/fe/macros/insights/CommonInsightsHelper\";\nimport type Action from \"sap/fe/macros/table/Action\";\nimport type ActionGroup from \"sap/fe/macros/table/ActionGroup\";\nimport type BasicSearch from \"sap/fe/macros/table/BasicSearch\";\nimport type Column from \"sap/fe/macros/table/Column\";\nimport * as MdcTableTemplate from \"sap/fe/macros/table/MdcTableTemplate\";\nimport type QuickFilterSelector from \"sap/fe/macros/table/QuickFilterSelector\";\nimport TableCreationOptions from \"sap/fe/macros/table/TableCreationOptions\";\nimport TableHelper from \"sap/fe/macros/table/TableHelper\";\nimport TableRuntime from \"sap/fe/macros/table/TableRuntime\";\nimport TableUtils from \"sap/fe/macros/table/Utils\";\nimport { convertPVToState } from \"sap/fe/macros/table/adapter/TablePVToState\";\nimport MassEditDialogHelper from \"sap/fe/macros/table/massEdit/MassEditDialogHelper\";\nimport type { PvProperties } from \"sap/fe/navigation/PresentationVariant\";\nimport PresentationVariantClass from \"sap/fe/navigation/PresentationVariant\";\nimport type SelectionVariant from \"sap/fe/navigation/SelectionVariant\";\nimport type Dialog from \"sap/m/Dialog\";\nimport IllustratedMessage from \"sap/m/IllustratedMessage\";\nimport IllustratedMessageType from \"sap/m/IllustratedMessageType\";\nimport type Menu from \"sap/m/Menu\";\nimport MessageBox from \"sap/m/MessageBox\";\nimport MessageToast from \"sap/m/MessageToast\";\nimport Text from \"sap/m/Text\";\nimport type { DataStateIndicator$DataStateChangeEvent } from \"sap/m/plugins/DataStateIndicator\";\nimport type { PasteProvider$PasteEvent } from \"sap/m/plugins/PasteProvider\";\nimport type { default as Event, default as UI5Event } from \"sap/ui/base/Event\";\nimport type ManagedObject from \"sap/ui/base/ManagedObject\";\nimport ManagedObjectMetadata from \"sap/ui/base/ManagedObjectMetadata\";\nimport type Control from \"sap/ui/core/Control\";\nimport type { $ControlSettings } from \"sap/ui/core/Control\";\nimport UI5Element from \"sap/ui/core/Element\";\nimport Fragment from \"sap/ui/core/Fragment\";\nimport Library from \"sap/ui/core/Lib\";\nimport Messaging from \"sap/ui/core/Messaging\";\nimport type DragDropInfo from \"sap/ui/core/dnd/DragDropInfo\";\nimport { TitleLevel } from \"sap/ui/core/library\";\nimport Message from \"sap/ui/core/message/Message\";\nimport type MessageType from \"sap/ui/core/message/MessageType\";\nimport XMLPreprocessor from \"sap/ui/core/util/XMLPreprocessor\";\nimport type FilterBar from \"sap/ui/mdc/FilterBar\";\nimport type {\n\tdefault as MDCTable,\n\tMDCTablePropertyInfo as PropertyInfo,\n\tdefault as Table,\n\tTable$BeforeExportEvent,\n\tTable$BeforeOpenContextMenuEvent,\n\tTable$SelectionChangeEvent\n} from \"sap/ui/mdc/Table\";\nimport type TypeConfig from \"sap/ui/mdc/TypeConfig\";\nimport type { GroupLevels, Items, Sorters } from \"sap/ui/mdc/p13n/StateUtil\";\nimport StateUtil from \"sap/ui/mdc/p13n/StateUtil\";\nimport { type RowActionItem$PressEvent } from \"sap/ui/mdc/table/RowActionItem\";\nimport type JSONModel from \"sap/ui/model/json/JSONModel\";\nimport type Context from \"sap/ui/model/odata/v4/Context\";\nimport type { ODataContextBinding$PatchSentEvent } from \"sap/ui/model/odata/v4/ODataContextBinding\";\nimport type ODataListBinding from \"sap/ui/model/odata/v4/ODataListBinding\";\nimport type ODataModel from \"sap/ui/model/odata/v4/ODataModel\";\nimport StateHelper from \"../mdc/adapter/StateHelper\";\nimport type ActionGroupOverride from \"./ActionGroupOverride\";\nimport type ActionOverride from \"./ActionOverride\";\nimport type AnalyticalConfiguration from \"./AnalyticalConfiguration\";\nimport type ColumnOverride from \"./ColumnOverride\";\nimport type MassEdit from \"./MassEdit\";\nimport type QuickVariantSelection from \"./QuickVariantSelection\";\nimport { createTableDefinition } from \"./TableDefinition\";\nimport TableEventHandlerProvider from \"./TableEventHandlerProvider\";\nimport ColumnManagement from \"./mixin/ColumnManagement\";\nimport ContextMenuHandler from \"./mixin/ContextMenuHandler\";\nimport EmptyRowsHandler from \"./mixin/EmptyRowsHandler\";\nimport TableAPIStateHandler from \"./mixin/TableAPIStateHandler\";\nimport TableExport from \"./mixin/TableExport\";\nimport TableHierarchy from \"./mixin/TableHierarchy\";\nimport TableOptimisticBatch from \"./mixin/TableOptimisticBatch\";\nimport TableSharing from \"./mixin/TableSharing\";\n\nexport type EnhancedFEPropertyInfo = PropertyInfo & {\n\tname: string;\n\tannotationPath: string;\n\trelativePath: string;\n\tdescriptionProperty?: string;\n\tmode?: DisplayMode;\n\tvalueProperty?: string;\n\ttypeConfig?: TypeConfig;\n\texportDataPointTargetValue?: string;\n\tadditionalLabels?: string[];\n\ttype?: string;\n\ttextArrangement?: {\n\t\ttextProperty: string;\n\t\tmode: DisplayMode;\n\t};\n};\n\ntype DataModelConversion = {\n\tdataModelPath: DataModelObjectPath<DataFieldAbstractTypes | DataPointTypeTypes | Property>;\n\tconvertedtargetObject: DataFieldAbstractTypes | DataPointTypeTypes;\n};\n\nexport type TableColumnProperties = {\n\tkey: string;\n\tvisibility: boolean;\n}[];\n\nexport type DynamicVisibilityForColumn = { columnKey: string; visible: boolean };\n\nexport type TableState = {\n\tinnerTable?: {\n\t\tinitialState?: {\n\t\t\titems?: { name: string }[];\n\t\t\tsupplementaryConfig?: object;\n\t\t};\n\t\tfullState?: {\n\t\t\titems?: { name: string }[];\n\t\t\tfilter?: object;\n\t\t};\n\t};\n\tquickFilter?: {\n\t\tselectedKey?: string;\n\t};\n\tvariantManagement?: {\n\t\tvariantId?: string | null;\n\t};\n\tsupplementaryConfig?: object;\n};\n\nexport interface ITableBlock extends BuildingBlock {\n\tenableOptimisticBatchMode(): void;\n\tmetaPath: string;\n\tcontextPath?: string;\n\temptyRowsEnabled: boolean;\n\tgetContent(): Table;\n\tgetTableDefinition(): TableVisualization;\n\tgetSelectedContexts(): Context[];\n\tisTableRowNavigationPossible(context: Context): boolean;\n\tcreateAnyControl(ModeAsExpression: CompiledBindingToolkitExpression, rowContext: Context | undefined): typeof Any;\n\tgetDataModelAndConvertedTargetObject(propertyName: string | undefined): DataModelConversion | undefined;\n}\n\ninterface TableAPI\n\textends TableAPIStateHandler,\n\t\tTableExport,\n\t\tTableOptimisticBatch,\n\t\tTableHierarchy,\n\t\tEmptyRowsHandler,\n\t\tContextMenuHandler,\n\t\tTableSharing,\n\t\tColumnManagement {\n\t// aggregation\n\tgetContent(): MDCTable;\n\t// association\n\tgetFilterBar(): string;\n\t// property\n\tgetDataInitialized(): boolean;\n}\n\n/**\n * Building block used to create a table based on the metadata provided by OData V4.\n * <br>\n * Usually, a LineItem, PresentationVariant or SelectionPresentationVariant annotation is expected, but the Table building block can also be used to display an EntitySet.\n * <br>\n * If a PresentationVariant is specified, then it must have UI.LineItem as the first property of the Visualizations.\n * <br>\n * If a SelectionPresentationVariant is specified, then it must contain a valid PresentationVariant that also has a UI.LineItem as the first property of the Visualizations.\n *\n * Usage example:\n * <pre>\n * &lt;macros:Table id=\"MyTable\" metaPath=\"@com.sap.vocabularies.UI.v1.LineItem\" /&gt;\n * </pre>\n * @private\n */\n\n@defineUI5Class(\"sap.fe.macros.table.TableAPI\", { returnTypes: [\"sap.fe.macros.MacroAPI\"] })\n@mixin(TableAPIStateHandler)\n@mixin(TableExport)\n@mixin(TableOptimisticBatch)\n@mixin(TableHierarchy)\n@mixin(EmptyRowsHandler)\n@mixin(ContextMenuHandler)\n@mixin(TableSharing)\n@mixin(ColumnManagement)\nclass TableAPI extends MacroAPI implements ISingleSectionContributor, IRowBindingInterface, ITableBlock {\n\tcontent!: Table;\n\n\tmassEditDialogHelper: MassEditDialogHelper | undefined;\n\n\toriginalTableDefinition!: TableVisualization;\n\n\tpropertyEditModeCache: Record<string, typeof Any> = {};\n\n\tinitialControlState: Record<string, unknown> = {};\n\n\tconstructor(mSettings?: PropertiesOf<TableAPI> & { id?: string }, ...others: $ControlSettings[]) {\n\t\tsuper(mSettings, ...others);\n\t\tthis.originalTableDefinition = this.tableDefinition;\n\n\t\tthis.attachStateChangeHandler();\n\t\tthis.attachManifestEvents();\n\t\tthis.overrideRowPress = this.hasListeners(\"rowPress\");\n\t}\n\n\t@implementInterface(\"sap.fe.core.IRowBindingInterface\")\n\t__implements__sap_fe_core_IRowBindingInterface = true;\n\n\tgetRowBinding(parameters?: object): ODataListBinding {\n\t\tconst mdcTable = this.content;\n\t\tconst dataModel = mdcTable.getModel();\n\t\treturn (\n\t\t\tmdcTable.getRowBinding() ??\n\t\t\t(dataModel?.bindList(this.getRowCollectionPath(), undefined, undefined, undefined, parameters) as ODataListBinding)\n\t\t);\n\t}\n\n\tprivate attachStateChangeHandler(): void {\n\t\tStateUtil.detachStateChange(this.stateChangeHandler);\n\t\tStateUtil.attachStateChange(this.stateChangeHandler);\n\t}\n\n\tstateChangeHandler(oEvent: Event<{ control: Control }>): void {\n\t\tconst control = oEvent.getParameter(\"control\");\n\t\tif (control.isA<Table>(\"sap.ui.mdc.Table\")) {\n\t\t\tconst tableAPI = control.getParent() as unknown as { handleStateChange?: Function };\n\t\t\tif (tableAPI?.handleStateChange) {\n\t\t\t\ttableAPI.handleStateChange();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Attach the event handlers coming from the manifest for 'rowPress', 'selectionChange' and 'beforeRebindTable'.\n\t * We ignore the manifest handlers if the table already has event handlers (override).\n\t */\n\tprivate attachManifestEvents(): void {\n\t\tconst attachIfNoListeners = (eventName: string, methodConfig: ExternalMethodConfig | undefined): void => {\n\t\t\tif (!this.hasListeners(eventName) && methodConfig !== undefined) {\n\t\t\t\tthis.attachEvent(eventName, (ui5Event: UI5Event) => {\n\t\t\t\t\tFPMHelper.loadModuleAndCallMethod(methodConfig.moduleName, methodConfig.methodName, ui5Event, ui5Event).catch(\n\t\t\t\t\t\t(error) => {\n\t\t\t\t\t\t\tLog.error(\n\t\t\t\t\t\t\t\t`Failed to call ${eventName} event handler ${methodConfig.moduleName} ${methodConfig.methodName}`,\n\t\t\t\t\t\t\t\terror\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tattachIfNoListeners(\n\t\t\t\"beforeRebindTable\",\n\t\t\tgetCustomFunctionInfo(this.tableDefinition?.control?.beforeRebindTable, this.tableDefinition?.control)\n\t\t);\n\t\tattachIfNoListeners(\"rowPress\", getCustomFunctionInfo(this.tableDefinition?.control?.rowPress, this.tableDefinition?.control));\n\t\tattachIfNoListeners(\n\t\t\t\"selectionChange\",\n\t\t\tgetCustomFunctionInfo(this.tableDefinition?.control?.selectionChange, this.tableDefinition?.control)\n\t\t);\n\t}\n\n\t/**\n\t * Sets an illustrated message during the initialisation of the table API.\n\t * Useful if we have a building block in a list report without initial load.\n\t * @private\n\t */\n\tprivate setUpNoDataInformation(): void {\n\t\tconst table = this.content;\n\t\tif (!table || table.getNoData()) {\n\t\t\treturn;\n\t\t}\n\t\tconst owner = this._getOwner();\n\t\tlet description;\n\t\tlet title;\n\t\tif (owner) {\n\t\t\tconst resourceModel = getResourceModel(owner);\n\t\t\tif (resourceModel) {\n\t\t\t\tlet suffix;\n\t\t\t\tconst metaPath = this.metaPath;\n\t\t\t\tif (metaPath) {\n\t\t\t\t\tsuffix = metaPath.startsWith(\"/\") ? metaPath.substring(1) : metaPath;\n\t\t\t\t}\n\t\t\t\ttitle = resourceModel.getText(\"T_ILLUSTRATED_MESSAGE_TITLE_BEFORESEARCH\");\n\t\t\t\tdescription = resourceModel.getText(\"T_TABLE_AND_CHART_NO_DATA_TEXT\", undefined, suffix);\n\t\t\t}\n\t\t} else {\n\t\t\tconst resourceBundle = Library.getResourceBundleFor(\"sap.fe.templates\")!;\n\t\t\ttitle = resourceBundle.getText(\"T_ILLUSTRATED_MESSAGE_TITLE_BEFORESEARCH\");\n\t\t\tdescription = resourceBundle.getText(\"T_TABLE_AND_CHART_NO_DATA_TEXT\");\n\t\t}\n\n\t\tif (this.getNoDataMessageMode() === \"text\") {\n\t\t\tthis.setAggregation(\"noData\", new Text({ text: description }));\n\t\t} else {\n\t\t\tconst illustratedMessage = new IllustratedMessage({\n\t\t\t\ttitle: title,\n\t\t\t\tdescription: description,\n\t\t\t\tillustrationType: IllustratedMessageType.BeforeSearch,\n\t\t\t\tillustrationSize: this.getNoDataMessageMode(),\n\t\t\t\tenableDefaultTitleAndDescription: false\n\t\t\t});\n\n\t\t\tthis.setAggregation(\"noData\", illustratedMessage);\n\t\t}\n\t}\n\n\t@implementInterface(\"sap.fe.macros.controls.section.ISingleSectionContributor\")\n\t__implements__sap_fe_macros_controls_section_ISingleSectionContributor = true;\n\n\tgetSectionContentRole(): \"provider\" | \"consumer\" {\n\t\treturn \"consumer\";\n\t}\n\n\t/**\n\t * Implementation of the sendDataToConsumer method which is a part of the ISingleSectionContributor\n\t *\n\t * Will be called from the sap.fe.macros.controls.Section control when there is a Table building block rendered within a section\n\t * along with the consumerData i.e. section's data such as title and title level which is then applied to the table using the implementation below accordingly.\n\t *\n\t */\n\n\tsendDataToConsumer(consumerData: ConsumerData): void {\n\t\tif (this.content?.isA<Table>(\"sap.ui.mdc.Table\")) {\n\t\t\tthis.content?.setHeader(consumerData.title);\n\t\t\tthis.content?.setHeaderStyle(consumerData.headerStyle as TitleLevel);\n\t\t\tthis.content?.setHeaderLevel(consumerData.titleLevel as TitleLevel);\n\t\t}\n\t}\n\n\t@property({\n\t\ttype: \"string\",\n\t\texpectedTypes: [\"EntitySet\", \"EntityType\", \"Singleton\", \"NavigationProperty\"],\n\t\texpectedAnnotations: [\n\t\t\t\"com.sap.vocabularies.UI.v1.LineItem\",\n\t\t\t\"com.sap.vocabularies.UI.v1.PresentationVariant\",\n\t\t\t\"com.sap.vocabularies.UI.v1.SelectionPresentationVariant\"\n\t\t],\n\t\trequired: true\n\t})\n\tmetaPath!: string;\n\n\t@property({\n\t\ttype: \"string\",\n\t\texpectedTypes: [\"EntitySet\", \"EntityType\", \"Singleton\", \"NavigationProperty\"]\n\t})\n\tcontextPath!: string;\n\n\t@property({ type: \"object\" })\n\ttableDefinition!: TableVisualization;\n\n\t@property({ type: \"string\" })\n\tcontentId!: string;\n\n\t@property({ type: \"string\" })\n\tentityTypeFullyQualifiedName!: string;\n\n\t@property({ type: \"boolean\" })\n\tenableFullScreen?: boolean;\n\n\t@property({ type: \"boolean\" })\n\tenableExport?: boolean;\n\n\t@property({ type: \"string\" })\n\texportFileName?: string;\n\n\t@property({ type: \"string\" })\n\texportSheetName?: string;\n\n\t@property({ type: \"int\" })\n\tfrozenColumnCount?: number;\n\n\t@property({ type: \"boolean\" })\n\tdisableColumnFreeze?: boolean;\n\n\t@property({ type: \"string\", allowedValues: [\"Auto\", \"Fixed\"] })\n\trowCountMode?: string;\n\n\t@property({ type: \"int\" })\n\trowCount?: number;\n\n\t@property({ type: \"boolean\" })\n\tenablePaste?: boolean | CompiledBindingToolkitExpression;\n\n\t@property({ type: \"boolean\" })\n\tdisableCopyToClipboard?: boolean;\n\n\t@property({ type: \"int\" })\n\tscrollThreshold?: number;\n\n\t@property({ type: \"int\" })\n\tthreshold?: number;\n\n\t@property({ type: \"string\", allowedValues: [\"Block\", \"GridLarge\", \"GridSmall\"] })\n\tpopinLayout?: string;\n\n\t@property({ type: \"boolean\" })\n\tisSearchable?: boolean;\n\n\t@property({ type: \"string\", allowedValues: [\"GridTable\", \"ResponsiveTable\", \"AnalyticalTable\"] })\n\ttype?: TableType;\n\n\t@property({ type: \"boolean\" })\n\tuseCondensedLayout?: boolean;\n\n\t@property({ type: \"string\", allowedValues: [\"None\", \"Single\", \"Multi\", \"Auto\", \"ForceMulti\", \"ForceSingle\"] })\n\tselectionMode?: string;\n\n\t@property({ type: \"boolean\" })\n\tcondensedTableLayout?: boolean;\n\n\t@aggregation({\n\t\ttype: \"sap.fe.macros.table.Action\",\n\t\taltTypes: [\"sap.fe.macros.table.ActionGroup\", \"sap.fe.macros.table.ActionOverride\", \"sap.fe.macros.table.ActionGroupOverride\"],\n\t\tmultiple: true\n\t})\n\tactions?: (Action | ActionGroup | ActionOverride | ActionGroupOverride)[];\n\n\t@aggregation({\n\t\ttype: \"sap.fe.macros.table.Column\",\n\t\taltTypes: [\"sap.fe.macros.table.ColumnOverride\"],\n\t\tmultiple: true\n\t})\n\tcolumns?: (Column | ColumnOverride)[];\n\n\t/**\n\t * An expression that allows you to control the 'read-only' state of the table.\n\t *\n\t * If you do not set any expression, SAP Fiori elements hooks into the standard lifecycle to determine the current state.\n\t */\n\t@property({ type: \"boolean\" })\n\treadOnly!: boolean;\n\n\t/**\n\t * ID of the FilterBar building block associated with the table.\n\t */\n\t//@association({ type: \"sap.fe.macros.filterBar.FilterBarAPI\" })\n\t@property({ type: \"string\" })\n\tfilterBar?: string;\n\n\t/**\n\t * Specifies if the column width is automatically calculated.\n\t */\n\t@property({ type: \"boolean\", defaultValue: true })\n\tenableAutoColumnWidth!: boolean;\n\n\t/**\n\t * Indicates if the column header should be a part of the width calculation.\n\t */\n\t@property({ type: \"boolean\", defaultValue: false })\n\twidthIncludingColumnHeader?: boolean;\n\n\t/**\n\t * Changes the size of the IllustratedMessage in the table, or removes it completely.\n\t * Allowed values are `illustratedMessage-Auto`, `illustratedMessage-Base`, `illustratedMessage-Dialog`, `illustratedMessage-Dot`, `illustratedMessage-Scene`, `illustratedMessage-Spot` or `text`.\n\t */\n\t@property({\n\t\ttype: \"string\",\n\t\tallowedValues: [\n\t\t\t\"illustratedMessage-Auto\",\n\t\t\t\"illustratedMessage-Base\",\n\t\t\t\"illustratedMessage-Dialog\",\n\t\t\t\"illustratedMessage-Medium\",\n\t\t\t\"illustratedMessage-Dot\",\n\t\t\t\"illustratedMessage-ExtraSmall\",\n\t\t\t\"illustratedMessage-Scene\",\n\t\t\t\"illustratedMessage-Large\",\n\t\t\t\"illustratedMessage-Spot\",\n\t\t\t\"illustratedMessage-Small\",\n\t\t\t\"text\"\n\t\t]\n\t})\n\tmodeForNoDataMessage?: string;\n\n\t@property({ type: \"boolean\", defaultValue: false })\n\tdataInitialized!: boolean;\n\n\t@property({ type: \"boolean\", defaultValue: false })\n\tbindingSuspended!: boolean;\n\n\t@property({ type: \"boolean\", defaultValue: false })\n\toutDatedBinding!: boolean;\n\n\t@property({ type: \"boolean\", defaultValue: false })\n\tisAlp!: boolean;\n\n\t@property({ type: \"string\" })\n\tvariantManagement?: string;\n\n\t@property({ type: \"string\" })\n\tignoredFields?: string;\n\n\t@property({ type: \"string\" })\n\tid!: string;\n\n\t@property({ type: \"string\" })\n\tfieldMode?: string;\n\n\t@property({ type: \"sap.ui.core.TitleLevel\", defaultValue: TitleLevel.Auto })\n\theaderLevel!: TitleLevel;\n\n\t@property({ type: \"sap.ui.core.TitleLevel\" })\n\theaderStyle?: TitleLevel;\n\n\t@property({ type: \"int\" })\n\texportRequestSize?: number;\n\n\t@property({ type: \"boolean\" })\n\tinitialLoad?: boolean;\n\n\t/**\n\t * Controls which options should be enabled for the table personalization dialog.\n\t *\n\t * If it is set to `true`, all possible options for this kind of table are enabled.<br/>\n\t * If it is set to `false`, personalization is disabled.<br/>\n\t *<br/>\n\t * You can also provide a more granular control for the personalization by providing a comma-separated list with the options you want to be available.<br/>\n\t * Available options are:<br/>\n\t *  - Sort<br/>\n\t *  - Column<br/>\n\t *  - Filter<br/>\n\t *  - Group<br/>\n\t *<br/>\n\t * The Group option is only applicable to analytical tables and responsive tables.<br/>\n\t */\n\t@property({ type: \"string\" })\n\tpersonalization?: string;\n\n\t/**\n\t * Specifies the header text that is shown in the table.\n\t *\n\t */\n\t@property({ type: \"string\" })\n\theader?: string;\n\n\t@property({ type: \"boolean\" })\n\tuseBasicSearch?: boolean;\n\n\t/**\n\t * Specifies if the empty rows are enabled. This allows to have dynamic enablement of the empty rows using the setter function.\n\t */\n\t@property({ type: \"boolean\", defaultValue: false })\n\temptyRowsEnabled!: boolean;\n\n\t/**\n\t * Controls if the header text should be shown or not.\n\t *\n\t */\n\t@property({ type: \"boolean\", isBindingInfo: true })\n\theaderVisible?: boolean;\n\n\t@property({ type: \"string\" })\n\ttabTitle?: string;\n\n\t@property({ type: \"string\" })\n\tassociatedSelectionVariantPath?: string;\n\n\t@property({ type: \"boolean\" })\n\tinMultiView?: boolean;\n\n\t@property({ type: \"boolean\" })\n\tdisplaySegmentedButton?: boolean;\n\n\t@property({ type: \"boolean\" })\n\tenablePastingOfComputedProperties?: boolean;\n\n\t@property({ type: \"boolean\" })\n\tenableSelectAll?: boolean;\n\n\t@property({ type: \"int\" })\n\tselectionLimit?: number;\n\n\t@aggregation({ type: \"sap.fe.macros.table.TableCreationOptions\", defaultClass: TableCreationOptions })\n\tcreationMode?: TableCreationOptions;\n\n\t/**\n\t * Aggregation to forward the IllustratedMessage control to the mdc control.\n\t * @public\n\t */\n\t@aggregation({\n\t\ttype: \"sap.m.IllustratedMessage\",\n\t\taltTypes: [\"sap.m.Text\"],\n\t\tforwarding: {\n\t\t\tgetter: \"getMDCTable\",\n\t\t\taggregation: \"noData\"\n\t\t}\n\t})\n\tnoData?: IllustratedMessage;\n\n\t/**\n\t * A set of options that can be configured to control the aggregation behavior\n\t * @public\n\t */\n\t@aggregation({\n\t\ttype: \"sap.fe.macros.table.AnalyticalConfiguration\"\n\t})\n\tanalyticalConfiguration?: AnalyticalConfiguration;\n\n\t/**\n\t * Aggregate quickVariantSelection of the table.\n\t */\n\t@aggregation({\n\t\ttype: \"sap.fe.macros.table.QuickVariantSelection\"\n\t})\n\tquickVariantSelection?: QuickVariantSelection;\n\n\t/**\n\t * Aggregate mass edit of the table.\n\t */\n\t@aggregation({\n\t\ttype: \"sap.fe.macros.table.MassEdit\"\n\t})\n\tmassEdit?: MassEdit;\n\n\t/**\n\t * An event is triggered when the table is about to be rebound. This event contains information about the binding info.\n\t *\n\t * The event contains a parameter, `collectionBindingInfo`, which is an instance of `CollectionBindingInfoAPI`.\n\t * This allows you to manipulate the table's list binding.\n\t *\n\t * You can use this event to attach event handlers to the table's list binding.\n\t *\n\t * You can use this event to add or read: Filters, Sorters.\n\t * You can use this event to read the binding info.\n\t * You can use this event to add: Selects.\n\t */\n\t@event()\n\tbeforeRebindTable?: Function;\n\n\t/**\n\t * An event is triggered when the user chooses a row; the event contains information about which row is chosen.\n\t *\n\t * You can set this in order to handle the navigation manually.\n\t */\n\t@event()\n\trowPress?: Function;\n\n\t/**\n\t * An event is triggered when the user switched between view in an ALP.\n\t */\n\t@event()\n\tsegmentedButtonPress?: Function;\n\n\t/**\n\t * An event is triggered when the user saved the variant.\n\t */\n\t@event()\n\tvariantSaved?: Function;\n\n\t/**\n\t * An event is triggered when the user selected a variant.\n\t */\n\t@event()\n\tvariantSelected?: Function;\n\n\t/**\n\t * An event triggered when the Table list binding changes.\n\t */\n\t@event()\n\tlistBindingChange?: Function;\n\n\t@event()\n\tinternalDataRequested!: Function;\n\n\tcontextObjectPath!: DataModelObjectPath<LineItem | PresentationVariant | SelectionPresentationVariant>;\n\n\tprivate ignoreContextChangeEvent = false;\n\n\tprivate lock: Record<string, boolean> = {};\n\n\tstoredEvents: EventHandler[] = [];\n\n\toverrideRowPress = false;\n\n\tgetIgnoreContextChangeEvent(): boolean {\n\t\treturn this.ignoreContextChangeEvent;\n\t}\n\n\tsetIgnoreContextChangeEvent(value: boolean): void {\n\t\tthis.ignoreContextChangeEvent = value;\n\t}\n\n\tsetBusy(value: boolean): this {\n\t\tsuper.setBusy(value);\n\t\tthis.content?.setBusy(value);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the event handlers to the TableAPI.\n\t * @param eventHandlers\n\t */\n\tsetAttachEvents(eventHandlers: EventHandler[]): void {\n\t\tthis.storedEvents = eventHandlers;\n\t}\n\n\t/**\n\t * Gets the relevant tableAPI for a UI5 event.\n\t * An event can be triggered either by the inner control (the table) or the OData listBinding\n\t * The first initiator is the usual one so it's managed by the MacroAPI whereas\n\t * the second one is specific to this API and has to managed by the TableAPI.\n\t * @param source The UI5 event source\n\t * @returns The TableAPI or false if not found\n\t * @private\n\t */\n\tstatic _getAPIExtension(source: ManagedObject): TableAPI | undefined {\n\t\tlet tableAPI: TableAPI | undefined;\n\t\tif (source.isA<ODataListBinding>(\"sap.ui.model.odata.v4.ODataListBinding\")) {\n\t\t\ttableAPI = ((this as unknown as XMLEventHolder).instanceMap?.get(this) as TableAPI[])?.find(\n\t\t\t\t(api) => api.content?.getRowBinding?.() === source || api.content?.getBinding(\"items\") === source\n\t\t\t);\n\t\t}\n\t\treturn tableAPI;\n\t}\n\n\t/**\n\t * Gets contexts from the table that have been selected by the user.\n\t * @returns Contexts of the rows selected by the user\n\t * @public\n\t */\n\tgetSelectedContexts(): Context[] {\n\t\t// When a context menu item has been pressed, the selectedContexts correspond to the items on which\n\t\t// the corresponding action shall be applied.\n\t\treturn this.isContextMenuActive()\n\t\t\t? this.getBindingContext(\"internal\")?.getProperty(\"contextmenu/selectedContexts\") ?? []\n\t\t\t: this.content.getSelectedContexts();\n\t}\n\n\t/**\n\t * Adds a message to the table.\n\t *\n\t * The message applies to the whole table and not to an individual table row.\n\t * @param [parameters] The parameters to create the message\n\t * @param parameters.type Message type\n\t * @param parameters.message Message text\n\t * @param parameters.description Message description\n\t * @param parameters.persistent True if the message is persistent\n\t * @returns Promise<string> The ID of the message\n\t * @public\n\t */\n\tasync addMessage(parameters: { type?: MessageType; message?: string; description?: string; persistent?: boolean }): Promise<string> {\n\t\tconst table = this.getContent();\n\t\tif (!table.getBindingContext() && !table.getRowBinding()) {\n\t\t\tawait new Promise<void>((resolve) => {\n\t\t\t\tconst checkContextChange = function (): void {\n\t\t\t\t\tif (table.getBindingContext()) {\n\t\t\t\t\t\ttable.detachEvent(\"modelContextChange\", checkContextChange);\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\ttable.attachEvent(\"modelContextChange\", checkContextChange);\n\t\t\t});\n\t\t}\n\t\tconst rowBinding = table.getRowBinding();\n\t\tconst resolvedPath = rowBinding.getResolvedPath() as string;\n\t\treturn this.createMessage(table, resolvedPath, parameters);\n\t}\n\n\tprivate createMessage(\n\t\ttable: MDCTable,\n\t\tpath: string,\n\t\tparameters: { type?: MessageType; message?: string; description?: string; persistent?: boolean }\n\t): string {\n\t\tconst message = new Message({\n\t\t\ttarget: path,\n\t\t\ttype: parameters.type,\n\t\t\tmessage: parameters.message,\n\t\t\tprocessor: table.getModel(),\n\t\t\tdescription: parameters.description,\n\t\t\tpersistent: parameters.persistent\n\t\t});\n\t\tthis._getMessageManager().addMessages(message);\n\t\treturn message.getId();\n\t}\n\n\t/**\n\t * This function will check if the table should request recommendations function.\n\t * The table in view should only request recommendations if\n\t * 1. The Page is in Edit mode\n\t * 2. Table is not read only\n\t * 3. It has annotation for Common.RecommendedValuesFunction\n\t * 4. View is not ListReport, for OP/SubOP and forward views recommendations should be requested.\n\t * @param _oEvent\n\t * @returns True if recommendations needs to be requested\n\t */\n\tcheckIfRecommendationRelevant(_oEvent: UI5Event): boolean {\n\t\tconst isTableReadOnly = this.getProperty(\"readOnly\");\n\t\tconst isEditable = CommonUtils.getIsEditable(this);\n\t\tconst view = CommonUtils.getTargetView(this);\n\t\tconst viewData = view.getViewData();\n\t\t// request for action only if we are in OP/SubOP and in Edit mode, also table is not readOnly\n\t\tif (!isTableReadOnly && isEditable && viewData.converterType !== \"ListReport\") {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Removes a message from the table.\n\t * @param id The id of the message\n\t * @public\n\t */\n\tremoveMessage(id: string): void {\n\t\tconst msgManager = this._getMessageManager();\n\t\tconst messages = msgManager.getMessageModel().getData();\n\t\tconst result = messages.find((e: Message) => e.getId() === id);\n\t\tif (result) {\n\t\t\tmsgManager.removeMessages(result);\n\t\t}\n\t}\n\n\t/**\n\t * Requests a refresh of the table.\n\t * @public\n\t */\n\trefresh(): void {\n\t\tconst tableRowBinding = this.content.getRowBinding();\n\t\tif (tableRowBinding && (tableRowBinding.isRelative() || this.getTableDefinition().control.type === \"TreeTable\")) {\n\t\t\t// For tree tables, the refresh is always done using side effects to preserve expansion states\n\t\t\tconst appComponent = CommonUtils.getAppComponent(this.content);\n\t\t\tconst headerContext = tableRowBinding.getHeaderContext();\n\n\t\t\tif (headerContext) {\n\t\t\t\tappComponent\n\t\t\t\t\t.getSideEffectsService()\n\t\t\t\t\t.requestSideEffects([{ $NavigationPropertyPath: \"\" }], headerContext, tableRowBinding.getGroupId());\n\t\t\t}\n\t\t} else {\n\t\t\ttableRowBinding?.refresh();\n\t\t}\n\t}\n\n\tgetQuickFilter(): QuickFilterSelector | undefined {\n\t\treturn this.content?.getQuickFilter() as QuickFilterSelector | undefined;\n\t}\n\n\t/**\n\t * Get the presentation variant that is currently applied on the table.\n\t * @returns The presentation variant applied to the table\n\t * @public\n\t */\n\tasync getPresentationVariant(): Promise<PresentationVariantClass> {\n\t\ttry {\n\t\t\tconst table = this.content;\n\t\t\tconst tableState = await StateUtil.retrieveExternalState(table);\n\n\t\t\t//We remove \"Property::\" as it is prefixed to those columns that have associated propertyInfos.\n\t\t\t//The Presentation Variant format does not support this (it is only required by the Table and AppState).\n\t\t\tconst sortOrder = tableState.sorters?.map((sorter: Sorters) => {\n\t\t\t\treturn {\n\t\t\t\t\tProperty: sorter.name.replace(\"Property::\", \"\"),\n\t\t\t\t\tDescending: sorter.descending ?? false\n\t\t\t\t};\n\t\t\t});\n\t\t\tconst groupLevels = tableState.groupLevels?.map((group: GroupLevels) => {\n\t\t\t\treturn group.name.replace(\"Property::\", \"\");\n\t\t\t});\n\t\t\tconst tableViz = {\n\t\t\t\tContent: tableState.items?.map((item: Items) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tValue: item.name\n\t\t\t\t\t};\n\t\t\t\t}),\n\t\t\t\tType: \"LineItem\"\n\t\t\t};\n\t\t\tconst aggregations: Record<string, { aggregated?: boolean }> = {};\n\t\t\tlet hasAggregations = false;\n\t\t\tfor (const key in tableState.aggregations) {\n\t\t\t\tconst newKey = key.replace(\"Property::\", \"\");\n\t\t\t\taggregations[newKey] = tableState.aggregations[key];\n\t\t\t\thasAggregations = true;\n\t\t\t}\n\t\t\tconst initialExpansionLevel = (table.getPayload() as { initialExpansionLevel?: number; hierarchyQualifier?: string })\n\t\t\t\t?.initialExpansionLevel;\n\t\t\tconst tablePV = new PresentationVariantClass();\n\t\t\ttablePV.setTableVisualization(tableViz);\n\t\t\tconst properties: PvProperties = {\n\t\t\t\tGroupBy: groupLevels || [],\n\t\t\t\tSortOrder: sortOrder || []\n\t\t\t};\n\t\t\tif (hasAggregations) {\n\t\t\t\tproperties.Aggregations = aggregations;\n\t\t\t}\n\t\t\tif (initialExpansionLevel) {\n\t\t\t\tproperties.initialExpansionLevel = initialExpansionLevel;\n\t\t\t}\n\t\t\ttablePV.setProperties(properties);\n\t\t\treturn tablePV;\n\t\t} catch (error) {\n\t\t\tconst id = this.getId();\n\t\t\tconst message = error instanceof Error ? error.message : String(error);\n\t\t\tLog.error(`Table Building Block (${id}) - get presentation variant failed : ${message}`);\n\t\t\tthrow Error(error as string);\n\t\t}\n\t}\n\n\t/**\n\t * Set a new presentation variant to the table.\n\t * @param tablePV The new presentation variant that is to be set on the table.\n\t * @public\n\t */\n\tasync setPresentationVariant(tablePV: PresentationVariantClass): Promise<void> {\n\t\ttry {\n\t\t\tconst table = this.content;\n\n\t\t\tconst currentStatePV = await this.getPresentationVariant();\n\t\t\tconst propertyInfos = this.getEnhancedFetchedPropertyInfos();\n\t\t\tconst propertyInfoNames = propertyInfos.map((propInfo) => propInfo.key);\n\t\t\tconst newTableState = convertPVToState(tablePV, currentStatePV, propertyInfoNames);\n\t\t\tconst tableProperties = tablePV.getProperties();\n\t\t\tif (tableProperties?.initialExpansionLevel !== undefined) {\n\t\t\t\tconst tablePayload = table.getPayload() as { initialExpansionLevel?: number; hierarchyQualifier?: string };\n\t\t\t\ttablePayload.initialExpansionLevel = tableProperties.initialExpansionLevel;\n\t\t\t}\n\t\t\tawait StateUtil.applyExternalState(table, newTableState);\n\t\t} catch (error) {\n\t\t\tconst id = this.getId();\n\t\t\tconst message = error instanceof Error ? error.message : String(error);\n\t\t\tLog.error(`Table Building Block (${id}) - set presentation variant failed : ${message}`);\n\t\t\tthrow Error(message);\n\t\t}\n\t}\n\n\t/**\n\t * Get the variant management applied to the table.\n\t * @returns Key of the currently selected variant. In case the model is not yet set, `null` will be returned.\n\t * @public\n\t */\n\tgetCurrentVariantKey(): string | null {\n\t\treturn this.content.getVariant()?.getCurrentVariantKey();\n\t}\n\n\t/**\n\t * Set a variant management to the table.\n\t * @param key Key of the variant that should be selected. If the passed key doesn't identify a variant, it will be ignored.\n\t * @public\n\t */\n\tsetCurrentVariantKey(key: string): void {\n\t\tconst variantManagement = this.content.getVariant();\n\t\tvariantManagement.setCurrentVariantKey(key);\n\t}\n\n\t_getMessageManager(): Messaging {\n\t\treturn Messaging;\n\t}\n\n\t/**\n\t * An event triggered when the selection in the table changes.\n\t */\n\t@event()\n\tselectionChange?: Function;\n\n\t_getRowBinding(): ODataListBinding {\n\t\tconst oTable = this.getContent();\n\t\treturn oTable.getRowBinding();\n\t}\n\n\tasync getCounts(): Promise<string> {\n\t\tconst oTable = this.getContent();\n\t\treturn TableUtils.getListBindingForCount(oTable, oTable.getBindingContext(), {\n\t\t\tbatchGroupId: !this.getProperty(\"bindingSuspended\") ? oTable.data(\"batchGroupId\") : \"$auto\",\n\t\t\tadditionalFilters: TableUtils.getHiddenFilters(oTable)\n\t\t})\n\t\t\t.then((iValue: number) => {\n\t\t\t\treturn TableUtils.getCountFormatted(iValue);\n\t\t\t})\n\t\t\t.catch(() => {\n\t\t\t\treturn \"0\";\n\t\t\t});\n\t}\n\n\t/**\n\t * Handles the context change on the table.\n\t * An event is fired to propagate the OdataListBinding event and the enablement\n\t * of the creation row is calculated.\n\t * @param ui5Event The UI5 event\n\t */\n\tonListBindingChange(ui5Event: UI5Event): void {\n\t\tthis.fireEvent(\"listBindingChange\", ui5Event.getParameters());\n\t\tthis.setFastCreationRowEnablement();\n\t\tthis.getQuickFilter()?.refreshSelectedCount();\n\t\tTableRuntime.setContextsAsync(this.content);\n\t}\n\n\t/**\n\t * Handler for the onFieldLiveChange event.\n\t * @param ui5Event The event object passed by the onFieldLiveChange event\n\t */\n\t@xmlEventHandler()\n\tonFieldLiveChange(ui5Event: UI5Event<{}, Control>): void {\n\t\t// We can't fully move an xmlEventHandler to a mixin...\n\t\tthis._onFieldLiveChange(ui5Event);\n\t}\n\n\t/**\n\t * Handles the change on a quickFilter\n\t * The table is rebound if the FilterBar is not suspended and update the AppState.\n\t *\n\t */\n\tonQuickFilterSelectionChange(): void {\n\t\tconst table = this.content;\n\t\t// Rebind the table to reflect the change in quick filter key.\n\t\t// We don't rebind the table if the filterBar for the table is suspended\n\t\t// as rebind will be done when the filterBar is resumed\n\t\tconst filterBarID = table.getFilter();\n\t\tconst filterBar = (filterBarID && UI5Element.getElementById(filterBarID)) as FilterBar | undefined;\n\t\tif (!filterBar?.getSuspendSelection?.()) {\n\t\t\ttable.rebind();\n\t\t}\n\t\t(CommonUtils.getTargetView(this)?.getController() as PageController | undefined)?.getExtensionAPI().updateAppState();\n\t}\n\n\tonTableNavigate(oController: PageController, oContext: Context, mParameters: object): boolean | undefined {\n\t\tif (this.isTableRowNavigationPossible(oContext)) {\n\t\t\tif (this.fullScreenDialog) {\n\t\t\t\t// Exit fullscreen mode before navigation\n\t\t\t\tthis.fullScreenDialog.close(); // The fullscreendialog will set this.fullScreenDialog to undefined when closing\n\t\t\t}\n\t\t\tconst navigationParameters = Object.assign({}, mParameters, { reason: NavigationReason.RowPress });\n\t\t\toController._routing.navigateForwardToContext(oContext, navigationParameters);\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Event handler for the row press event of the table.\n\t * @param pressEvent\n\t * @returns Promise<boolean>\n\t */\n\t@xmlEventHandler()\n\tasync onTableRowPress(pressEvent: RowActionItem$PressEvent): Promise<boolean | void> {\n\t\tconst rowNavigationInfo = this.tableDefinition?.annotation.row?.navigationInfo;\n\t\tif (this.overrideRowPress === true) {\n\t\t\t// There's an event handler for the rowPress event --> we just fire the event and do not navigate\n\t\t\tthis.fireEvent(\"rowPress\", pressEvent.getParameters());\n\t\t} else if (rowNavigationInfo !== undefined) {\n\t\t\tconst controller = this.getPageController();\n\t\t\tconst bindingContext = pressEvent.getParameter(\"bindingContext\") as Context;\n\t\t\tif (rowNavigationInfo.type === \"Outbound\") {\n\t\t\t\t// Outbound navigation\n\t\t\t\treturn this.avoidParallelCalls(\n\t\t\t\t\tasync () =>\n\t\t\t\t\t\tcontroller._intentBasedNavigation.onChevronPressNavigateOutBound(\n\t\t\t\t\t\t\tcontroller,\n\t\t\t\t\t\t\trowNavigationInfo.navigationTarget,\n\t\t\t\t\t\t\tbindingContext,\n\t\t\t\t\t\t\t\"\"\n\t\t\t\t\t\t),\n\t\t\t\t\t\"onChevronPressNavigateOutBound\"\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\t// Internal navigation\n\t\t\t\tconst editable = rowNavigationInfo.checkEditable ? !bindingContext.getProperty(\"IsActiveEntity\") : undefined;\n\t\t\t\tconst parameters = {\n\t\t\t\t\tcallExtension: true,\n\t\t\t\t\ttargetPath: rowNavigationInfo.targetPath,\n\t\t\t\t\teditable,\n\t\t\t\t\trecreateContext: rowNavigationInfo.recreateContext\n\t\t\t\t};\n\n\t\t\t\treturn this.onTableNavigate(controller, bindingContext, parameters);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Fires the corresponding event when the segmented button is pressed (in ALP).\n\t * @param oEvent\n\t */\n\t@xmlEventHandler()\n\tonSegmentedButtonPressed(oEvent: UI5Event): void {\n\t\tthis.fireEvent(\"segmentedButtonPress\", oEvent.getParameters());\n\t}\n\n\t/**\n\t * Fires the corresponding event when a new variant is selected.\n\t * @param oEvent\n\t */\n\t@xmlEventHandler()\n\tonVariantSelected(oEvent: UI5Event): void {\n\t\tconst parameters = {\n\t\t\t...oEvent.getParameters(),\n\t\t\toriginalSource: oEvent.getSource()\n\t\t};\n\t\tthis.fireEvent(\"variantSelected\", parameters);\n\t}\n\n\t/**\n\t * Fires the corresponding event when a variant is saved.\n\t * @param oEvent\n\t */\n\t@xmlEventHandler()\n\tonVariantSaved(oEvent: UI5Event): void {\n\t\tthis.fireEvent(\"variantSaved\", oEvent.getParameters());\n\t}\n\n\t/**\n\t * Fires the corresponding event when a row is pressed.\n\t * @param oEvent\n\t */\n\t@xmlEventHandler()\n\tonRowPressed(oEvent: UI5Event): void {\n\t\tthis.fireEvent(\"rowPress\", oEvent.getParameters());\n\t}\n\n\tisTableRowNavigationPossible(context: Context): boolean {\n\t\t// prevent navigation to an empty row\n\t\tconst emptyRow = context.isInactive() == true && context.isTransient() === true;\n\t\t// Or in the case of an analytical table, if we're trying to navigate to a context corresponding to a visual group or grand total\n\t\t// --> Cancel navigation\n\t\tconst analyticalGroupHeaderExpanded =\n\t\t\tthis.getTableDefinition().enableAnalytics === true &&\n\t\t\tcontext.isA(\"sap.ui.model.odata.v4.Context\") &&\n\t\t\ttypeof context.getProperty(\"@$ui5.node.isExpanded\") === \"boolean\";\n\t\treturn !(emptyRow || analyticalGroupHeaderExpanded);\n\t}\n\n\t@xmlEventHandler()\n\tonShareToCollaborationManagerPress(\n\t\toEvent: UI5Event,\n\t\tcontroller: PageController,\n\t\tcontexts: Context[],\n\t\tmaxNumberofSelectedItems: number\n\t): void | boolean {\n\t\t// We can't fully move an xmlEventHandler to a mixin...\n\t\treturn this._onShareToCollaborationManagerPress(controller, contexts, maxNumberofSelectedItems);\n\t}\n\n\t@xmlEventHandler()\n\tasync onOpenInNewTabPress(\n\t\toEvent: UI5Event,\n\t\tcontroller: PageController,\n\t\tallContexts: Context[],\n\t\tnavigableContexts: Context[],\n\t\tparameters: RoutingNavigationParameters,\n\t\tmaxNumberofSelectedItems: number\n\t): Promise<void | boolean> {\n\t\tif (navigableContexts.length <= maxNumberofSelectedItems) {\n\t\t\tconst promiseToWait = new PromiseKeeper<boolean>();\n\t\t\tif (navigableContexts.length < allContexts.length) {\n\t\t\t\tconst textKey =\n\t\t\t\t\tnavigableContexts.length === 1\n\t\t\t\t\t\t? \"T_TABLE_NAVIGATION_NOT_ALL_ITEMS_NAVIGABLE_SINGULAR\"\n\t\t\t\t\t\t: \"T_TABLE_NAVIGATION_NOT_ALL_ITEMS_NAVIGABLE_PLURAL\";\n\t\t\t\tMessageBox.confirm(\n\t\t\t\t\tthis.getTranslatedText(textKey, [allContexts.length, navigableContexts.length, maxNumberofSelectedItems]),\n\t\t\t\t\t{\n\t\t\t\t\t\tonClose: (result: string): void => {\n\t\t\t\t\t\t\tif (result === \"CANCEL\") {\n\t\t\t\t\t\t\t\tpromiseToWait.resolve(false);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tpromiseToWait.resolve(true);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tpromiseToWait.resolve(true);\n\t\t\t}\n\t\t\tconst shouldProceed = await promiseToWait.promise;\n\t\t\tif (shouldProceed) {\n\t\t\t\tnavigableContexts.forEach(async (context: Context) => {\n\t\t\t\t\tif (this.isTableRowNavigationPossible(context)) {\n\t\t\t\t\t\tparameters.editable = !context.getProperty(\"IsActiveEntity\");\n\t\t\t\t\t\tawait controller._routing.navigateForwardToContext(context, parameters);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tMessageBox.warning(\n\t\t\t\tLibrary.getResourceBundleFor(\"sap.fe.macros\")!.getText(\"T_TABLE_NAVIGATION_TOO_MANY_ITEMS_SELECTED\", [\n\t\t\t\t\tmaxNumberofSelectedItems\n\t\t\t\t])\n\t\t\t);\n\t\t}\n\t}\n\n\t@xmlEventHandler()\n\tonInternalPatchCompleted(evt: Event<{ error: { status?: number; cause?: { status?: number }; message?: string } }>): void {\n\t\t// BCP: 2380023090\n\t\t// We handle enablement of Delete for the table here.\n\t\t// EditFlow.ts#handlePatchSent is handling the action enablement.\n\t\tconst internalModelContext = this.getBindingContext(\"internal\") as InternalModelContext;\n\t\tconst selectedContexts = this.getSelectedContexts();\n\t\tDeleteHelper.updateDeleteInfoForSelectedContexts(internalModelContext, selectedContexts);\n\t\tif (evt.getParameter(\"error\")) {\n\t\t\tthis.getPageController().messageHandler.showMessageDialog({ control: this });\n\t\t} else {\n\t\t\tthis.getPageController().messageHandler.releaseHoldByControl(this);\n\t\t}\n\t}\n\n\t@xmlEventHandler()\n\tonInternalPatchSent(evt: ODataContextBinding$PatchSentEvent): void {\n\t\tconst controller = this.getPageController();\n\t\tconst editFlowExtension = controller.editFlow;\n\t\tcontroller.messageHandler.holdMessagesForControl(this);\n\t\tif (this.tableDefinition.handlePatchSent) {\n\t\t\teditFlowExtension.handlePatchSent.call(this, evt);\n\t\t} else if (controller.inlineEditFlow.isInlineEditPossible()) {\n\t\t\tcontroller.inlineEditFlow.handleInlineEditPatchSent.call(this, evt);\n\t\t}\n\t}\n\n\t@xmlEventHandler()\n\tonInternalDataReceived(oEvent: UI5Event<{ error: string }, ODataListBinding>): void {\n\t\tconst isRecommendationRelevant = this.checkIfRecommendationRelevant(oEvent);\n\t\tif (isRecommendationRelevant) {\n\t\t\tconst contextIdentifier = this.getIdentifierColumn(isRecommendationRelevant) as string[];\n\t\t\tconst responseContextsArray = oEvent.getSource().getAllCurrentContexts();\n\t\t\tconst newContexts: RecommendationContextsInfo[] = [];\n\t\t\tresponseContextsArray.forEach((context) => {\n\t\t\t\tnewContexts.push({\n\t\t\t\t\tcontext,\n\t\t\t\t\tcontextIdentifier\n\t\t\t\t});\n\t\t\t});\n\t\t\tthis.getPageController().recommendations.fetchAndApplyRecommendations(newContexts, true);\n\t\t}\n\t\tthis.getPageController().messageHandler.holdMessagesForControl(this);\n\t\tif (oEvent.getParameter(\"error\")) {\n\t\t\tthis.getPageController().messageHandler.showMessageDialog({ control: this });\n\t\t} else {\n\t\t\tthis.getPageController().messageHandler.releaseHoldByControl(this);\n\t\t\tthis.setDownloadUrl();\n\t\t}\n\t}\n\n\t@xmlEventHandler()\n\tonInternalDataRequested(oEvent: UI5Event): void {\n\t\tthis.setProperty(\"dataInitialized\", true);\n\t\tthis.fireEvent(\"internalDataRequested\", oEvent.getParameters());\n\t\tif (this.getQuickFilter() !== undefined && this.getTableDefinition().control.filters?.quickFilters?.showCounts === true) {\n\t\t\tthis.getQuickFilter()?.setCountsAsLoading();\n\t\t\tthis.getQuickFilter()?.refreshUnSelectedCounts();\n\t\t}\n\t\tthis.getPageController().messageHandler.holdMessagesForControl(this);\n\t}\n\n\t/**\n\t * Handles the Paste operation.\n\t * @param evt The event\n\t * @param controller The page controller\n\t * @param forContextMenu\n\t */\n\t@xmlEventHandler()\n\tasync onPaste(evt: PasteProvider$PasteEvent, controller: PageController, forContextMenu = false): Promise<void> {\n\t\tif (forContextMenu) {\n\t\t\tthis.setContextMenuActive(true);\n\t\t}\n\t\tconst rawPastedData = evt.getParameter(\"data\"),\n\t\t\tsource = evt.getSource();\n\t\tlet table: Table;\n\t\tif (!forContextMenu) {\n\t\t\t// table toolbar\n\t\t\ttable = (source.isA(\"sap.ui.mdc.Table\") ? source : (source as Control).getParent()) as Table;\n\t\t} else {\n\t\t\t// context menu\n\t\t\tconst menu = (source.isA(\"sap.m.Menu\") ? source : (source as Control).getParent()) as Menu;\n\t\t\ttable = menu.getParent()?.getParent() as Table;\n\t\t}\n\t\tconst internalContext = table.getBindingContext(\"internal\") as InternalModelContext;\n\n\t\t// If paste is disabled or if we're not in edit mode in an ObjectPage, we can't paste anything\n\t\tif (!this.tableDefinition.control.enablePaste || (table.getRowBinding().isRelative() && !CommonUtils.getIsEditable(this))) {\n\t\t\treturn;\n\t\t}\n\n\t\t//This code is executed only in case of TreeTable\n\t\tconst action = internalContext.getProperty(\"nodeUpdatesInfo/lastAction\");\n\t\tconst srcContexts = internalContext.getProperty(\"nodeUpdatesInfo/pastableContexts\");\n\n\t\tif (this.tableDefinition.control.type === \"TreeTable\") {\n\t\t\tlet srcContext = srcContexts[0];\n\t\t\tconst newParentContext = !forContextMenu\n\t\t\t\t? (table.getSelectedContexts()[0] as Context)\n\t\t\t\t: (internalContext?.getProperty(\"contextmenu/selectedContexts\")[0] as Context);\n\t\t\t// If the targetContext has been disassociated from the table due to expand and collapse actions, we attempt to retrieve it using its path.\n\t\t\tsrcContext = table\n\t\t\t\t.getRowBinding()\n\t\t\t\t.getAllCurrentContexts()\n\t\t\t\t.find((context) => context.getPath() === srcContext?.getPath());\n\n\t\t\tif (!srcContext) {\n\t\t\t\tLog.error(`The ${action} operation is unsuccessful because the relevant context is no longer available`);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\ttry {\n\t\t\t\ttable.setBusy(true);\n\t\t\t\tawait Promise.all([\n\t\t\t\t\tsrcContext.move({ parent: newParentContext ?? null, copy: action === \"Copy\" }),\n\t\t\t\t\taction === \"Copy\"\n\t\t\t\t\t\t? this.requestSideEffectsForCopyAction(srcContext)\n\t\t\t\t\t\t: this.requestSideEffectsForChangeNextSiblingAction(srcContext)\n\t\t\t\t]);\n\t\t\t} catch (error: unknown) {\n\t\t\t\tMessageToast.show(this.getTranslatedText(\"M_TABLEDROP_FAILED\", [\"\"]));\n\t\t\t\tLog.error(`The ${action} operation is unsuccessful. ` + (error as Error).message ?? \"\");\n\t\t\t}\n\t\t\ttable.setBusy(false);\n\t\t\tinternalContext.setProperty(`nodeUpdatesInfo/pastableContexts`, []);\n\t\t\tinternalContext.setProperty(`nodeUpdatesInfo/pasteEnablement`, false);\n\t\t\tinternalContext.setProperty(`contextmenu/nodeUpdatesInfo/pasteEnablement`, false);\n\t\t\tinternalContext.setProperty(`nodeUpdatesInfo/lastAction`, undefined);\n\n\t\t\treturn;\n\t\t}\n\n\t\t//This code is executed for tables excepted TreeTable\n\t\tif (table.getEnablePaste() === true && !forContextMenu) {\n\t\t\tconst cellSelection = table.getCellSelector()?.getSelection();\n\t\t\tif (cellSelection?.columns.length > 0) {\n\t\t\t\tPasteHelper.pasteRangeData(rawPastedData ?? [], cellSelection, table);\n\t\t\t} else {\n\t\t\t\tPasteHelper.pasteData(rawPastedData ?? [], table, controller);\n\t\t\t}\n\t\t} else {\n\t\t\tconst resourceBundle = Library.getResourceBundleFor(\"sap.fe.core\")!;\n\t\t\tMessageBox.error(resourceBundle.getText(\"T_OP_CONTROLLER_SAPFE_PASTE_DISABLED_MESSAGE\"), {\n\t\t\t\ttitle: resourceBundle.getText(\"C_COMMON_SAPFE_ERROR\")\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Handles the Cut operation.\n\t * @param evt The UI5 event.\n\t * @param forContextMenu\n\t */\n\t@xmlEventHandler()\n\tonCut(evt: UI5Event<{}, UI5Element>, forContextMenu = false): void {\n\t\t// We can't fully move an xmlEventHandler to a mixin...\n\t\tif (forContextMenu) {\n\t\t\tthis.setContextMenuActive(true);\n\t\t}\n\t\tthis._onCopyCut(evt, forContextMenu, \"Cut\");\n\t}\n\n\t/**\n\t * Handles the Copy operation.\n\t * @param evt The UI5 event.\n\t * @param forContextMenu\n\t */\n\t@xmlEventHandler()\n\tonCopy(evt: UI5Event<{}, UI5Element>, forContextMenu = false): void {\n\t\t// We can't fully move an xmlEventHandler to a mixin...\n\t\tif (forContextMenu) {\n\t\t\tthis.setContextMenuActive(true);\n\t\t}\n\t\tthis._onCopyCut(evt, forContextMenu, \"Copy\");\n\t}\n\n\t// This event will allow us to intercept the export before is triggered to cover specific cases\n\t// that couldn't be addressed on the propertyInfos for each column.\n\t// e.g. Fixed Target Value for the datapoints\n\t@xmlEventHandler()\n\tonBeforeExport(exportEvent: Table$BeforeExportEvent): void {\n\t\t// We can't fully move an xmlEventHandler to a mixin...\n\t\tthis._onBeforeExport(exportEvent);\n\t}\n\n\t/**\n\t * Handles the MDC DataStateIndicator plugin to display messageStrip on a table.\n\t * @param message\n\t * @param control\n\t * @returns Whether to render the messageStrip visible\n\t */\n\tdataStateIndicatorFilter(message: Message, control: Control): boolean {\n\t\tconst mdcTable = control as MDCTable;\n\t\tconst sTableContextBindingPath = mdcTable.getBindingContext()?.getPath();\n\t\tconst sTableRowBinding = (sTableContextBindingPath ? `${sTableContextBindingPath}/` : \"\") + mdcTable.getRowBinding().getPath();\n\t\treturn sTableRowBinding === message.getTargets()[0] ? true : false;\n\t}\n\n\t/**\n\t * This event handles the DataState of the DataStateIndicator plugin from MDC on a table.\n\t * It's fired when new error messages are sent from the backend to update row highlighting.\n\t * @param evt Event object\n\t */\n\t@xmlEventHandler()\n\tonDataStateChange(evt: DataStateIndicator$DataStateChangeEvent): void {\n\t\tconst dataStateIndicator = evt.getSource();\n\t\tconst filteredMessages = evt.getParameter(\"filteredMessages\") as Message[];\n\t\tif (filteredMessages) {\n\t\t\tconst hiddenMandatoryProperties = filteredMessages\n\t\t\t\t.map((msg) => {\n\t\t\t\t\tconst technicalDetails = (msg.getTechnicalDetails() || {}) as {\n\t\t\t\t\t\ttableId?: string;\n\t\t\t\t\t\temptyRowMessage?: boolean;\n\t\t\t\t\t\tmissingColumn?: string;\n\t\t\t\t\t};\n\t\t\t\t\treturn technicalDetails.emptyRowMessage === true && technicalDetails.missingColumn;\n\t\t\t\t})\n\t\t\t\t.filter((hiddenProperty) => !!hiddenProperty);\n\t\t\tif (hiddenMandatoryProperties.length) {\n\t\t\t\tconst messageStripError = Library.getResourceBundleFor(\"sap.fe.macros\")!.getText(\n\t\t\t\t\thiddenMandatoryProperties.length === 1\n\t\t\t\t\t\t? \"M_MESSAGESTRIP_EMPTYROW_MANDATORY_HIDDEN\"\n\t\t\t\t\t\t: \"M_MESSAGESTRIP_EMPTYROW_MANDATORY_HIDDEN_PLURAL\",\n\t\t\t\t\t[hiddenMandatoryProperties.join(\", \")]\n\t\t\t\t);\n\t\t\t\tdataStateIndicator.showMessage(messageStripError, \"Error\");\n\t\t\t}\n\t\t\tconst internalModel = dataStateIndicator.getModel(\"internal\") as JSONModel;\n\t\t\tinternalModel.setProperty(\"filteredMessages\", filteredMessages, dataStateIndicator.getBindingContext(\"internal\") as Context);\n\t\t}\n\t}\n\n\tresumeBinding(bRequestIfNotInitialized: boolean): void {\n\t\tthis.setProperty(\"bindingSuspended\", false);\n\t\tif ((bRequestIfNotInitialized && !this.getDataInitialized()) || this.getProperty(\"outDatedBinding\")) {\n\t\t\tthis.setProperty(\"outDatedBinding\", false);\n\t\t\tthis.getContent()?.rebind();\n\t\t}\n\t}\n\n\trefreshNotApplicableFields(oFilterControl: Control): string[] {\n\t\tconst oTable = this.getContent();\n\t\treturn FilterUtils.getNotApplicableFilters(oFilterControl as FilterBar, oTable);\n\t}\n\n\tsuspendBinding(): void {\n\t\tthis.setProperty(\"bindingSuspended\", true);\n\t}\n\n\tinvalidateContent(): void {\n\t\tthis.setProperty(\"dataInitialized\", false);\n\t\tthis.setProperty(\"outDatedBinding\", false);\n\t}\n\n\t/**\n\t * Sets the enablement of the creation row.\n\t * @private\n\t */\n\tsetFastCreationRowEnablement(): void {\n\t\tconst table = this.content;\n\t\tconst fastCreationRow = table.getCreationRow();\n\n\t\tif (fastCreationRow && !fastCreationRow.getBindingContext()) {\n\t\t\tconst tableBinding = table.getRowBinding();\n\t\t\tconst bindingContext = tableBinding.getContext();\n\n\t\t\tif (bindingContext) {\n\t\t\t\tTableHelper.enableFastCreationRow(\n\t\t\t\t\tfastCreationRow,\n\t\t\t\t\ttableBinding.getPath(),\n\t\t\t\t\tbindingContext,\n\t\t\t\t\tbindingContext.getModel(),\n\t\t\t\t\tPromise.resolve()\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Event handler to create insightsParams and call the API to show insights card preview for table.\n\t * @returns Undefined if the card preview is rendered.\n\t */\n\t@xmlEventHandler()\n\tasync onAddCardToInsightsPressed(): Promise<void> {\n\t\t// We can't fully move an xmlEventHandler to a mixin...\n\t\treturn this._onAddCardToInsightsPressed();\n\t}\n\n\t@xmlEventHandler()\n\tonMassEditButtonPressed(ui5Event: UI5Event, forContextMenu: boolean): void {\n\t\tif (forContextMenu) {\n\t\t\tthis.setContextMenuActive(true);\n\t\t}\n\t\tconst massEditHelper = new MassEditDialogHelper({\n\t\t\ttable: this.content,\n\t\t\tonContextMenu: forContextMenu,\n\t\t\tonClose: (): void => {\n\t\t\t\tthis.setMassEditDialogHelper();\n\t\t\t}\n\t\t});\n\t\tthis.setMassEditDialogHelper(massEditHelper);\n\t\tmassEditHelper.open();\n\t}\n\n\t@xmlEventHandler()\n\tasync onSelectionChanged(ui5event: Table$SelectionChangeEvent): Promise<void> {\n\t\tawait TableRuntime.setContexts(ui5event);\n\t\tthis.fireEvent(\"selectionChange\", { ...ui5event.getParameters(), selectedContext: this.getSelectedContexts() });\n\t}\n\n\t@xmlEventHandler()\n\tasync onActionPress(\n\t\toEvent: UI5Event<{}, Control>,\n\t\tpageController: PageController,\n\t\tactionName: string,\n\t\tparameters: {\n\t\t\tmodel: ODataModel;\n\t\t\tnotApplicableContexts: Context[];\n\t\t\tlabel: string;\n\t\t\tcontexts: Context[];\n\t\t\tapplicableContexts: Context[];\n\t\t\tentitySetName: string;\n\t\t}\n\t): Promise<unknown> {\n\t\tparameters.model = oEvent.getSource().getModel() as ODataModel;\n\t\tconst labelExpression = resolveBindingString(parameters.label, \"string\");\n\t\tif (isPathInModelExpression(labelExpression) && (labelExpression.modelName === \"i18n\" || labelExpression.modelName === \"@i18n\")) {\n\t\t\t//resolveBindingString(parameters.label, \"string\")\n\t\t\tparameters.label =\n\t\t\t\t(oEvent.getSource().getModel(labelExpression.modelName) as ResourceModel).getProperty(labelExpression.path) ??\n\t\t\t\tparameters.label;\n\t\t}\n\t\tlet executeAction = true;\n\t\tif (parameters.notApplicableContexts && parameters.notApplicableContexts.length > 0) {\n\t\t\t// If we have non applicable contexts, we need to open a dialog to ask the user if he wants to continue\n\t\t\tconst convertedMetadata = convertTypes(parameters.model.getMetaModel());\n\t\t\tconst entityType = convertedMetadata.resolvePath<EntityType>(this.entityTypeFullyQualifiedName).target!;\n\t\t\tconst myUnapplicableContextDialog = new NotApplicableContextDialog({\n\t\t\t\tentityType: entityType,\n\t\t\t\tnotApplicableContexts: parameters.notApplicableContexts,\n\t\t\t\ttitle: parameters.label,\n\t\t\t\tresourceModel: getResourceModel(this),\n\t\t\t\tentitySet: parameters.entitySetName,\n\t\t\t\tactionName: actionName,\n\t\t\t\tapplicableContexts: parameters.applicableContexts\n\t\t\t});\n\t\t\tparameters.contexts = parameters.applicableContexts;\n\t\t\texecuteAction = await myUnapplicableContextDialog.open(this);\n\t\t}\n\t\tif (executeAction) {\n\t\t\t// Direct execution of the action\n\t\t\ttry {\n\t\t\t\treturn await pageController.editFlow.invokeAction(actionName, parameters);\n\t\t\t} catch (e) {\n\t\t\t\tLog.info(e as string);\n\t\t\t}\n\t\t}\n\t}\n\n\t@xmlEventHandler()\n\tonContextMenuPress(oEvent: Table$BeforeOpenContextMenuEvent): void {\n\t\t// We can't fully move an xmlEventHandler to a mixin...\n\t\tthis._onContextMenuPress(oEvent);\n\t}\n\n\t/**\n\t * Expose the internal table definition for external usage in the delegate.\n\t * @returns The tableDefinition\n\t */\n\tgetTableDefinition(): TableVisualization {\n\t\treturn this.tableDefinition;\n\t}\n\n\t/**\n\t * Sets the mass edit related to the table.\n\t * @param massEditDialogHelper\n\t */\n\tsetMassEditDialogHelper(massEditDialogHelper?: MassEditDialogHelper): void {\n\t\tthis.massEditDialogHelper = massEditDialogHelper;\n\t}\n\n\t/**\n\t * Expose the mass edit related to the table.\n\t * @returns The mass edit related to the table, if any\n\t */\n\tgetMassEditDialogHelper(): MassEditDialogHelper | undefined {\n\t\treturn this.massEditDialogHelper;\n\t}\n\n\t/**\n\t * connect the filter to the tableAPI if required\n\t * @private\n\t * @alias sap.fe.macros.TableAPI\n\t */\n\n\tupdateFilterBar(): void {\n\t\tconst table = this.getContent();\n\t\tconst filterBarRefId = this.getFilterBar();\n\t\tif (table && filterBarRefId && table.getFilter?.() !== filterBarRefId) {\n\t\t\tthis._setFilterBar(filterBarRefId);\n\t\t}\n\t}\n\n\t/**\n\t * Removes the table from the listeners of the filterBar.\n\t */\n\tdetachFilterBar(): void {\n\t\tconst table = this.content;\n\t\ttable?.setFilter(\"\");\n\t}\n\n\t/**\n\t * Gets the filter control.\n\t * @param filterBarRefId Id of the filter bar\n\t * @returns The filter control\n\t * @private\n\t * @alias sap.fe.macros.TableAPI\n\t */\n\tgetFilterBarControl(filterBarRefId: string): UI5Element | undefined {\n\t\t// 'filterBar' property of macros:Table(passed as customData) might be\n\t\t// 1. A localId wrt View(FPM explorer example).\n\t\t// 2. Absolute Id(this was not supported in older versions).\n\t\t// 3. A localId wrt FragmentId(when an XMLComposite or Fragment is independently processed) instead of ViewId.\n\t\t//    'filterBar' was supported earlier as an 'association' to the 'mdc:Table' control inside 'macros:Table' in prior versions.\n\t\t//    In newer versions 'filterBar' is used like an association to 'macros:TableAPI'.\n\t\t//    This means that the Id is relative to 'macros:TableAPI'.\n\t\t//    This scenario happens in case of FilterBar and Table in a custom sections in OP of FEV4.\n\n\t\tconst tableAPIId = this?.getId();\n\t\tconst tableAPILocalId = this.data(\"tableAPILocalId\");\n\t\tconst potentialfilterBarId =\n\t\t\ttableAPILocalId && filterBarRefId && tableAPIId && tableAPIId.replace(new RegExp(tableAPILocalId + \"$\"), filterBarRefId); // 3\n\t\treturn (\n\t\t\tthis.getPageController()?.byId(filterBarRefId) ||\n\t\t\tUI5Element.getElementById(filterBarRefId) ||\n\t\t\tUI5Element.getElementById(potentialfilterBarId)\n\t\t);\n\t}\n\n\t/**\n\t * Sets the filter depending on the type of filterBar.\n\t * @param filterBarRefId Id of the filter bar\n\t * @private\n\t * @alias sap.fe.macros.TableAPI\n\t */\n\t_setFilterBar(filterBarRefId: string): void {\n\t\tconst table = this.getContent();\n\t\tconst filterBar = this.getFilterBarControl(filterBarRefId);\n\n\t\tif (filterBar) {\n\t\t\tif (filterBar.isA<FilterBarAPI>(\"sap.fe.macros.filterBar.FilterBarAPI\")) {\n\t\t\t\ttable.setFilter(`${filterBar.getId()}-content`);\n\t\t\t} else if (\n\t\t\t\tfilterBar.isA<FilterBarBBV4>(\"sap.fe.macros.filterBar.FilterBar\") &&\n\t\t\t\tfilterBar?.content?.isA(\"sap.fe.macros.filterBar.FilterBarAPI\")\n\t\t\t) {\n\t\t\t\ttable.setFilter(`${filterBar.content.getId()}-content`);\n\t\t\t} else if (\n\t\t\t\tfilterBar.isA<FilterBar>(\"sap.ui.mdc.FilterBar\") ||\n\t\t\t\tfilterBar.isA<typeof BasicSearch>(\"sap.fe.macros.table.BasicSearch\")\n\t\t\t) {\n\t\t\t\ttable.setFilter(filterBar.getId());\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Handles the CreateActivate event from the ODataListBinding.\n\t * @param activateEvent The event sent by the binding\n\t */\n\t@xmlEventHandler()\n\tasync handleCreateActivate(activateEvent: UI5Event<{ context: Context }, ODataListBinding>): Promise<void> {\n\t\t// We can't fully move an xmlEventHandler to a mixin...\n\t\tawait this._handleCreateActivate(activateEvent);\n\t}\n\n\t/**\n\t * The dragged element enters a table row.\n\t * @param ui5Event UI5 event coming from the MDC drag and drop config\n\t */\n\t@xmlEventHandler()\n\tonDragEnterDocument(\n\t\tui5Event: UI5Event<{ bindingContext: Context; dragSource: Context; dropPosition: \"Before\" | \"After\" | \"On\" }, DragDropInfo>\n\t): void {\n\t\t// We can't fully move an xmlEventHandler to a mixin...\n\t\tthis._onDragEnterDocument(ui5Event);\n\t}\n\n\t/**\n\t * Starts the drag of the document.\n\t * @param ui5Event UI5 event coming from the MDC drag and drop config\n\t */\n\t@xmlEventHandler()\n\tonDragStartDocument(ui5Event: UI5Event<{ bindingContext: Context }, Control>): void {\n\t\t// We can't fully move an xmlEventHandler to a mixin...\n\t\tthis._onDragStartDocument(ui5Event);\n\t}\n\n\t/**\n\t * Drops the document.\n\t * @param ui5Event UI5 event coming from the MDC drag and drop config\n\t * @returns The Promise\n\t */\n\t@xmlEventHandler()\n\tasync onDropDocument(\n\t\tui5Event: UI5Event<{\n\t\t\tbindingContext: Context;\n\t\t\tdragSource: Context;\n\t\t\tdropPosition: string;\n\t\t}>\n\t): Promise<void> {\n\t\t// We can't fully move an xmlEventHandler to a mixin...\n\t\tawait this._onDropDocument(ui5Event);\n\t}\n\n\t@xmlEventHandler()\n\tasync onCollapseExpandNode(ui5Event: UI5Event, expand: boolean): Promise<void> {\n\t\t// We can't fully move an xmlEventHandler to a mixin...\n\t\tif (ui5Event.getSource().getMetadata().isA(\"sap.m.MenuItem\")) {\n\t\t\tthis.setContextMenuActive(true);\n\t\t}\n\t\tawait this._onCollapseExpandNode(ui5Event, expand);\n\t}\n\n\t/**\n\t * Internal method to move a row up or down in a Tree table.\n\t * @param ui5Event\n\t * @param moveUp True for move up, false for move down\n\t * @param forContextMenu\n\t */\n\t@xmlEventHandler()\n\tasync onMoveUpDown(ui5Event: UI5Event, moveUp: boolean, forContextMenu = false): Promise<void> {\n\t\t// We can't fully move an xmlEventHandler to a mixin...\n\t\tif (forContextMenu) {\n\t\t\tthis.setContextMenuActive(true);\n\t\t}\n\t\tawait this._onMoveUpDown(ui5Event, moveUp, forContextMenu);\n\t}\n\n\t/**\n\t * Get the selection variant from the table. This function considers only the selection variant applied at the control level.\n\t * @returns A promise which resolves with {@link sap.fe.navigation.SelectionVariant}\n\t * @public\n\t */\n\tasync getSelectionVariant(): Promise<SelectionVariant> {\n\t\treturn StateHelper.getSelectionVariant(this.getContent());\n\t}\n\n\t/**\n\t * Sets {@link sap.fe.navigation.SelectionVariant} to the table. Note: setSelectionVariant will clear existing filters and then apply the SelectionVariant values.\n\t * @param selectionVariant The {@link sap.fe.navigation.SelectionVariant} to apply to the table\n\t * @param prefillDescriptions Optional. If true, we will use the associated text property values (if they're available in the SelectionVariant) to display the filter value descriptions, instead of loading them from the backend\n\t * @returns A promise for asynchronous handling\n\t * @public\n\t */\n\tasync setSelectionVariant(selectionVariant: SelectionVariant, prefillDescriptions = false): Promise<unknown> {\n\t\treturn StateHelper.setSelectionVariantToMdcControl(this.getContent(), selectionVariant, prefillDescriptions);\n\t}\n\n\tprivate async _createContentV2Mode(): Promise<void> {\n\t\tconst owner = this._getOwner();\n\t\tconst preprocessorContext = owner?.preprocessorContext;\n\t\tif (owner && preprocessorContext) {\n\t\t\tconst metaModel = owner.getAppComponent().getMetaModel();\n\t\t\tconst metaPath = metaModel.createBindingContext(this.metaPath)!;\n\t\t\tconst contextPath = metaModel.createBindingContext(this.contextPath)!;\n\n\t\t\tthis.tableDefinition = deepClone(this.originalTableDefinition);\n\t\t\tthis.updateColumnsVisibility(this.ignoredFields, this.tableDefinition);\n\t\t\tthis.propertyInfos = []; // As we have a new table definition, we clean the cached propertyInfos to recreate them\n\n\t\t\tconst convertedMetadata = convertTypes(metaModel);\n\t\t\tconst collectionEntity = convertedMetadata.resolvePath(this.tableDefinition.annotation.collection).target as\n\t\t\t\t| EntitySet\n\t\t\t\t| NavigationProperty;\n\t\t\tthis.contextObjectPath = getInvolvedDataModelObjects<LineItem | PresentationVariant | SelectionPresentationVariant>(\n\t\t\t\tmetaPath,\n\t\t\t\tcontextPath\n\t\t\t);\n\t\t\tconst handlerProvider = new TableEventHandlerProvider(this, { collectionEntity, metaModel });\n\n\t\t\tconst fragment = await XMLPreprocessor.process(\n\t\t\t\tparseXMLString(\n\t\t\t\t\txml`<root\n\t\t\txmlns=\"sap.m\"\n\t\t\txmlns:mdc=\"sap.ui.mdc\"\n\t\t\txmlns:plugins=\"sap.m.plugins\"\n\t\t\txmlns:mdcTable=\"sap.ui.mdc.table\"\n\t\t\txmlns:macroTable=\"sap.fe.macros.table\"\n\t\t\txmlns:mdcat=\"sap.ui.mdc.actiontoolbar\"\n\t\t\txmlns:core=\"sap.ui.core\"\n\t\t\txmlns:control=\"sap.fe.core.controls\"\n\t\t\txmlns:dt=\"sap.ui.dt\"\n\t\t\txmlns:fl=\"sap.ui.fl\"\n\t\t\txmlns:variant=\"sap.ui.fl.variants\"\n\t\t\txmlns:p13n=\"sap.ui.mdc.p13n\"\n\t\t\txmlns:internalMacro=\"sap.fe.macros.internal\">${jsx.renderAsXML(() => {\n\t\t\t\treturn MdcTableTemplate.getMDCTableTemplate(this, {\n\t\t\t\t\tconvertedMetadata: preprocessorContext.getConvertedMetadata(),\n\t\t\t\t\tmetaModel,\n\t\t\t\t\thandlerProvider,\n\t\t\t\t\tappComponent: owner.getAppComponent(),\n\t\t\t\t\tmetaPath\n\t\t\t\t});\n\t\t\t})}</root>`,\n\t\t\t\t\ttrue\n\t\t\t\t)[0],\n\t\t\t\t{ models: {} },\n\t\t\t\tpreprocessorContext\n\t\t\t);\n\t\t\tif (fragment.firstElementChild) {\n\t\t\t\t// Remove the old MDC table from the list of FilterBar listeners\n\t\t\t\tthis.detachFilterBar();\n\n\t\t\t\tthis.content?.destroy();\n\t\t\t\tconst content = (await Fragment.load({\n\t\t\t\t\tdefinition: fragment.firstElementChild,\n\t\t\t\t\tcontroller: owner.getRootController(),\n\t\t\t\t\tcontainingView: owner.getRootControl()\n\t\t\t\t})) as Table;\n\t\t\t\tthis.content = content;\n\n\t\t\t\tthis.updateFilterBar();\n\t\t\t}\n\t\t}\n\t}\n\n\tsetProperty(propertyKey: string, propertyValue: unknown, bSuppressInvalidate?: boolean): this {\n\t\tif (!this._applyingSettings && propertyValue !== undefined && [\"ignoredFields\", \"metaPath\"].includes(propertyKey)) {\n\t\t\tsuper.setProperty(propertyKey, propertyValue, true);\n\t\t\tthis._createContentV2Mode();\n\t\t} else {\n\t\t\tsuper.setProperty(propertyKey, propertyValue, bSuppressInvalidate);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Retrieves the data model and converted target object based on the provided property name.\n\t * @param propertyName The name of the property.\n\t * @returns Returns data model path and converted target object.\n\t */\n\n\tgetDataModelAndConvertedTargetObject(propertyName: string | undefined): DataModelConversion | undefined {\n\t\tconst table = this.getContent();\n\t\tconst metaModel = table.getModel()?.getMetaModel();\n\t\tif (!metaModel) {\n\t\t\treturn;\n\t\t}\n\t\tconst entityPath = table.data(\"metaPath\");\n\t\tconst targetMetaPath = this.getEnhancedFetchedPropertyInfos().find((propertyInfo) => propertyInfo.name === propertyName)\n\t\t\t?.annotationPath;\n\t\tconst targetObject = metaModel.getContext(targetMetaPath!);\n\t\tconst entitySet = metaModel.getContext(entityPath);\n\t\tconst convertedtargetObject = MetaModelConverter.convertMetaModelContext(targetObject) as\n\t\t\t| DataFieldAbstractTypes\n\t\t\t| DataPointTypeTypes;\n\t\tlet dataModelPath = MetaModelConverter.getInvolvedDataModelObjects<DataFieldAbstractTypes | DataPointTypeTypes | Property>(\n\t\t\ttargetObject,\n\t\t\tentitySet\n\t\t);\n\t\tdataModelPath =\n\t\t\tFieldTemplating.getDataModelObjectPathForValue(\n\t\t\t\tdataModelPath as DataModelObjectPath<DataFieldAbstractTypes | DataPointTypeTypes>\n\t\t\t) || dataModelPath;\n\t\treturn { dataModelPath: dataModelPath, convertedtargetObject: convertedtargetObject };\n\t}\n\n\t/**\n\t * Get the binding context for the given ModeAsExpression.\n\t * @param ModeAsExpression\n\t * @param rowContext\n\t * @returns\n\t */\n\n\tcreateAnyControl(ModeAsExpression: CompiledBindingToolkitExpression, rowContext: Context | undefined): typeof Any {\n\t\tconst table = this.getContent();\n\t\tconst anyObject = new Any({ any: ModeAsExpression });\n\t\tanyObject.setModel(rowContext?.getModel());\n\t\tanyObject.setModel(table.getModel(\"ui\"), \"ui\");\n\t\treturn anyObject;\n\t}\n\n\t/**\n\t * Get the edit mode of a Property.\n\t * @param propertyName The name of the property\n\t * @param rowContext The context of the row containing the property\n\t * @returns The edit mode of the field\n\t */\n\n\tgetPropertyEditMode(propertyName: string, rowContext: Context): string | undefined {\n\t\tlet anyObject: typeof Any | undefined;\n\t\tif (!this.propertyEditModeCache[propertyName]) {\n\t\t\tconst dataModelPath = this.getDataModelAndConvertedTargetObject(propertyName)?.dataModelPath;\n\t\t\tconst convertedtargetObject = this.getDataModelAndConvertedTargetObject(propertyName)?.convertedtargetObject;\n\t\t\tif (dataModelPath && convertedtargetObject) {\n\t\t\t\tconst propertyForFieldControl = (dataModelPath?.targetObject as unknown as DataFieldTypes)?.Value\n\t\t\t\t\t? (dataModelPath?.targetObject as unknown as DataFieldTypes).Value\n\t\t\t\t\t: dataModelPath?.targetObject;\n\t\t\t\tconst editModeAsExpression = compileExpression(\n\t\t\t\t\tUIFormatters.getEditMode(propertyForFieldControl, dataModelPath, false, true, convertedtargetObject)\n\t\t\t\t);\n\t\t\t\tanyObject = this.createAnyControl(editModeAsExpression, rowContext);\n\t\t\t\tthis.propertyEditModeCache[propertyName] = anyObject;\n\t\t\t\tanyObject.setBindingContext(null); // we need to set the binding context to null otherwise the following addDependent will set it to the context of the table\n\t\t\t\tthis.addDependent(anyObject); // to destroy it when the tableAPI is destroyed\n\t\t\t}\n\t\t} else {\n\t\t\tanyObject = this.propertyEditModeCache[propertyName];\n\t\t}\n\t\tanyObject?.setBindingContext(rowContext);\n\t\tconst editMode = anyObject?.getAny() as string | undefined;\n\t\tanyObject?.setBindingContext(null);\n\t\treturn editMode;\n\t}\n\n\t/**\n\t * Show the columns with the given column keys by setting their availability to Default.\n\t * @param columnKeys The keys for the columns to show\n\t * @returns Promise<void>\n\t * @public\n\t * @ui5-experimental-since 1.124.0\n\t * @since 1.124.0\n\t */\n\tasync showColumns(columnKeys: string[]): Promise<void> {\n\t\tfor (const columnKey of columnKeys) {\n\t\t\tthis.modifyDynamicVisibilityForColumn(columnKey, true);\n\t\t}\n\t\treturn this._createContentV2Mode();\n\t}\n\n\t/**\n\t * Hide the columns with the given column keys by setting their availability to Default.\n\t * @param columnKeys The keys for the columns to hide\n\t * @returns Promise<void>\n\t * @public\n\t * @ui5-experimental-since 1.124.0\n\t * @since 1.124.0\n\t */\n\tasync hideColumns(columnKeys: string[]): Promise<void> {\n\t\tfor (const columnKey of columnKeys) {\n\t\t\tthis.modifyDynamicVisibilityForColumn(columnKey, false);\n\t\t}\n\t\treturn this._createContentV2Mode();\n\t}\n\n\t/**\n\t * Sets the fields that should be ignored when generating the table.\n\t * @param ignoredFields The fields to ignore\n\t * @returns Reference to this in order to allow method chaining\n\t * @ui5-experimental-since 1.124.0\n\t * @since 1.124.0\n\t * @public\n\t */\n\tsetIgnoredFields(ignoredFields: string): this {\n\t\treturn this.setProperty(\"ignoredFields\", ignoredFields);\n\t}\n\n\t/**\n\t * Get the fields that should be ignored when generating the table.\n\t * @returns The value of the ignoredFields property\n\t * @ui5-experimental-since 1.124.0\n\t * @since 1.124.0\n\t * @public\n\t */\n\tgetIgnoredFields(): string {\n\t\treturn this.getProperty(\"ignoredFields\") ?? this.tableDefinition.control.ignoredFields;\n\t}\n\n\t/**\n\t * Retrieves the control state based on the given control state key.\n\t * @param controlState The current state of the control.\n\t * @returns - The full state of the control along with the initial state if available.\n\t */\n\tgetControlState(controlState: ControlState): ControlState {\n\t\tconst initialControlState: Record<string, unknown> = this.initialControlState;\n\t\tif (controlState) {\n\t\t\treturn {\n\t\t\t\tfullState: controlState as object,\n\t\t\t\tinitialState: initialControlState as object\n\t\t\t};\n\t\t}\n\t\treturn controlState;\n\t}\n\n\t/**\n\t * Returns the key to be used for given control.\n\t * @param oControl The control to get state key for\n\t * @returns The key to be used for storing the controls state\n\t */\n\tgetStateKey(oControl: ManagedObject): string {\n\t\treturn CommonUtils.getTargetView(this.content)?.getLocalId(oControl.getId()) || oControl.getId();\n\t}\n\n\t/**\n\t * Updates the table definition with ignoredFields and dynamicVisibilityForColumns.\n\t * @param ignoredFields\n\t * @param dynamicVisibilityForColumns\n\t * @param tableDefinition\n\t */\n\tpublic static updateColumnsVisibility(\n\t\tignoredFields: string | undefined,\n\t\tdynamicVisibilityForColumns: DynamicVisibilityForColumn[],\n\t\ttableDefinition: TableVisualization\n\t): void {\n\t\tColumnManagement.updateColumnsVisibilityStatic(ignoredFields, dynamicVisibilityForColumns, tableDefinition);\n\t}\n\n\t/**\n\t * Returns the MDC table.\n\t * This method is called by the forwarding aggregation to get the target of the aggregation.\n\t * @private\n\t * @returns The mdc table\n\t */\n\tgetMDCTable(): MDCTable {\n\t\treturn this.content;\n\t}\n\n\t/**\n\t * Called by the MDC state util when the state for this control's child has changed.\n\t */\n\thandleStateChange(): void {\n\t\tthis.getPageController()?.getExtensionAPI().updateAppState();\n\t}\n\n\t/**\n\t * Calls the asyncCall function only if the lockName is not already locked.\n\t * @param asyncCall\n\t * @param lockName\n\t * @returns Promise<void>\n\t */\n\tasync avoidParallelCalls(asyncCall: Function, lockName: string): Promise<void> {\n\t\tif (this.lock[lockName]) {\n\t\t\treturn;\n\t\t}\n\t\tthis.lock[lockName] = true;\n\t\ttry {\n\t\t\tawait asyncCall();\n\t\t} catch {\n\t\t\tthis.lock[lockName] = false;\n\t\t}\n\t\tthis.lock[lockName] = false;\n\t}\n\n\tdestroy(suppressInvalidate?: boolean): void {\n\t\t// We release hold on messageHandler by the control if there is one.\n\t\tthis.getPageController(false)?.messageHandler?.releaseHoldByControl(this);\n\t\tsuper.destroy(suppressInvalidate);\n\t}\n\n\tprivate fullScreenDialog?: Dialog; // The dialog used to display the table in full screen mode\n\n\tsetFullScreenDialog(dialog: Dialog | undefined): void {\n\t\tthis.fullScreenDialog = dialog;\n\t}\n\n\tprivate enhancedPropertyInfos: EnhancedFEPropertyInfo[] = [];\n\n\tprivate propertyInfos: PropertyInfo[] = [];\n\n\t/**\n\t * Sets the fetched propertyInfos from the table delegate containing internal properties.\n\t * @param enhancedPropertyInfos\n\t * @private\n\t */\n\tsetEnhancedFetchedPropertyInfos(enhancedPropertyInfos: EnhancedFEPropertyInfo[]): void {\n\t\tthis.enhancedPropertyInfos = enhancedPropertyInfos;\n\t}\n\n\t/**\n\t * Gets the fetched propertyInfos from the table delegate containing internal properties.\n\t * @returns The PropertyInfo enhanced with the PropertyInfos from the table delegate\n\t * @private\n\t */\n\tgetEnhancedFetchedPropertyInfos(): EnhancedFEPropertyInfo[] {\n\t\treturn this.enhancedPropertyInfos;\n\t}\n\n\t/**\n\t * Gets the MDC expected propertyInfos from the table delegate containing internal additional properties.\n\t * @returns The PropertyInfo\n\t * @private\n\t */\n\tgetPropertyInfos(): PropertyInfo[] {\n\t\tconst propertyInfos: PropertyInfo[] = [];\n\t\tfor (const enhancedPropertyInfo of this.enhancedPropertyInfos as PropertyInfo[]) {\n\t\t\tlet propertyInfo: PropertyInfo = {\n\t\t\t\tkey: enhancedPropertyInfo.key,\n\t\t\t\tlabel: enhancedPropertyInfo.label,\n\t\t\t\tvisible: enhancedPropertyInfo.visible,\n\t\t\t\texportSettings: enhancedPropertyInfo.exportSettings,\n\t\t\t\tclipboardSettings: enhancedPropertyInfo.clipboardSettings,\n\t\t\t\tvisualSettings: enhancedPropertyInfo.visualSettings,\n\t\t\t\ttooltip: enhancedPropertyInfo.tooltip,\n\t\t\t\tisKey: enhancedPropertyInfo.isKey\n\t\t\t};\n\n\t\t\tif (enhancedPropertyInfo.propertyInfos) {\n\t\t\t\tpropertyInfo = {\n\t\t\t\t\t...propertyInfo,\n\t\t\t\t\tpropertyInfos: enhancedPropertyInfo.propertyInfos\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tlet extension: PropertyInfo[\"extension\"];\n\t\t\t\tif (enhancedPropertyInfo.extension) {\n\t\t\t\t\textension = {\n\t\t\t\t\t\ttechnicallyGroupable: enhancedPropertyInfo.extension.technicallyGroupable,\n\t\t\t\t\t\ttechnicallyAggregatable: enhancedPropertyInfo.extension.technicallyAggregatable,\n\t\t\t\t\t\tcustomAggregate: enhancedPropertyInfo.extension.customAggregate,\n\t\t\t\t\t\tadditionalProperties: enhancedPropertyInfo.extension.additionalProperties\n\t\t\t\t\t};\n\t\t\t\t\textension = Object.fromEntries(Object.entries(extension).filter(([_, value]) => value !== undefined));\n\t\t\t\t}\n\t\t\t\tpropertyInfo = {\n\t\t\t\t\t...propertyInfo,\n\t\t\t\t\tpath: enhancedPropertyInfo.path,\n\t\t\t\t\tmaxConditions: enhancedPropertyInfo.maxConditions,\n\t\t\t\t\tformatOptions: enhancedPropertyInfo.formatOptions,\n\t\t\t\t\tconstraints: enhancedPropertyInfo.constraints,\n\t\t\t\t\tgroup: enhancedPropertyInfo.group,\n\t\t\t\t\tgroupLabel: enhancedPropertyInfo.groupLabel,\n\t\t\t\t\tcaseSensitive: enhancedPropertyInfo.caseSensitive,\n\t\t\t\t\tfilterable: enhancedPropertyInfo.filterable,\n\t\t\t\t\tsortable: enhancedPropertyInfo.sortable,\n\t\t\t\t\tgroupable: enhancedPropertyInfo.groupable,\n\t\t\t\t\tdataType: enhancedPropertyInfo.dataType,\n\t\t\t\t\taggregatable: enhancedPropertyInfo.aggregatable,\n\t\t\t\t\tunit: enhancedPropertyInfo.unit,\n\t\t\t\t\ttext: enhancedPropertyInfo.text,\n\t\t\t\t\textension\n\t\t\t\t};\n\t\t\t}\n\t\t\tpropertyInfos.push(\n\t\t\t\tObject.fromEntries(Object.entries(propertyInfo).filter(([_, value]) => value !== undefined)) as PropertyInfo\n\t\t\t);\n\t\t}\n\t\treturn propertyInfos;\n\t}\n\n\tsetCachedPropertyInfos(propertyInfos: PropertyInfo[]): void {\n\t\tthis.propertyInfos = propertyInfos;\n\t}\n\n\tgetCachedPropertyInfos(): PropertyInfo[] {\n\t\treturn this.propertyInfos;\n\t}\n\n\t/**\n\t * Gets the path for the table collection.\n\t * @returns The path\n\t */\n\tgetRowCollectionPath(): string {\n\t\tconst controller = this.getPageController()!;\n\t\tconst metaModel = controller.getModel().getMetaModel();\n\t\tconst collectionContext = metaModel.createBindingContext(this.tableDefinition.annotation.collection);\n\t\tconst contextPath = metaModel.createBindingContext(this.contextPath)!;\n\t\tconst dataModelPath = getInvolvedDataModelObjects(collectionContext!, contextPath);\n\t\treturn getContextRelativeTargetObjectPath(dataModelPath) || getTargetObjectPath(dataModelPath);\n\t}\n\n\t/**\n\t * Gets the binding info used when creating the list binding for the MDC table.\n\t * @returns The table binding info\n\t */\n\tgetTableTemplateBindingInfo(): CollectionBindingInfo {\n\t\tconst controller = this.getPageController()!;\n\t\tconst path = this.getRowCollectionPath();\n\t\tconst rowBindingInfo: CollectionBindingInfo = {\n\t\t\tsuspended: false,\n\t\t\tpath,\n\t\t\tparameters: {\n\t\t\t\t$count: true\n\t\t\t}\n\t\t};\n\n\t\tif (this.tableDefinition.enable$select) {\n\t\t\t// Don't add $select parameter in case of an analytical query, this isn't supported by the model\n\t\t\tconst select = Object.keys(this.tableDefinition.requestAtLeast).join(\",\");\n\t\t\tif (select) {\n\t\t\t\trowBindingInfo.parameters!.$select = select;\n\t\t\t}\n\t\t}\n\n\t\tif (this.tableDefinition.enable$$getKeepAliveContext) {\n\t\t\t// we later ensure in the delegate only one list binding for a given targetCollectionPath has the flag $$getKeepAliveContext\n\t\t\trowBindingInfo.parameters!.$$getKeepAliveContext = true;\n\t\t}\n\n\t\t// Clears the selection after a search/filter\n\t\trowBindingInfo.parameters!.$$clearSelectionOnFilter = true;\n\n\t\trowBindingInfo.parameters!.$$groupId = \"$auto.Workers\";\n\t\trowBindingInfo.parameters!.$$updateGroupId = \"$auto\";\n\t\trowBindingInfo.parameters!.$$ownRequest = true;\n\t\trowBindingInfo.parameters!.$$patchWithoutSideEffects = true;\n\n\t\t// Event handlers\n\t\tconst editFlowExtension = controller.editFlow;\n\t\tconst eventHandlers: Record<string, Function> = {};\n\t\teventHandlers.patchCompleted = this.onInternalPatchCompleted.bind(this);\n\t\teventHandlers.dataReceived = this.onInternalDataReceived.bind(this);\n\t\teventHandlers.dataRequested = this.onInternalDataRequested.bind(this);\n\t\teventHandlers.change = this.onListBindingChange.bind(this);\n\t\teventHandlers.createActivate = this.handleCreateActivate.bind(this);\n\t\teventHandlers.createSent = editFlowExtension.handleCreateSent.bind(editFlowExtension);\n\t\teventHandlers.patchSent = this.onInternalPatchSent.bind(this);\n\n\t\trowBindingInfo.events = eventHandlers;\n\n\t\treturn rowBindingInfo;\n\t}\n\n\tprotected static addSetting(target: Record<string, unknown>, key: string, value: unknown): void {\n\t\tif (value !== undefined) {\n\t\t\ttarget[key] = value;\n\t\t}\n\t}\n\n\t/**\n\t * Create manifest-friendly settings from tableAPI properties.\n\t * @returns Settings\n\t */\n\tgetSettingsForManifest(): Record<string, unknown> {\n\t\tconst tableSettings: Record<string, unknown> = {};\n\t\tTableAPI.addSetting(tableSettings, \"enableExport\", this.enableExport);\n\t\tTableAPI.addSetting(tableSettings, \"exportRequestSize\", this.exportRequestSize);\n\t\tTableAPI.addSetting(tableSettings, \"exportFileName\", this.exportFileName);\n\t\tTableAPI.addSetting(tableSettings, \"exportSheetName\", this.exportSheetName);\n\t\tTableAPI.addSetting(tableSettings, \"frozenColumnCount\", this.frozenColumnCount);\n\t\tTableAPI.addSetting(tableSettings, \"disableColumnFreeze\", this.disableColumnFreeze);\n\t\tTableAPI.addSetting(tableSettings, \"widthIncludingColumnHeader\", this.widthIncludingColumnHeader);\n\t\tTableAPI.addSetting(tableSettings, \"rowCountMode\", this.rowCountMode);\n\t\tTableAPI.addSetting(tableSettings, \"rowCount\", this.rowCount);\n\t\tTableAPI.addSetting(tableSettings, \"enableFullScreen\", this.enableFullScreen);\n\t\tTableAPI.addSetting(tableSettings, \"enablePaste\", this.enablePaste);\n\t\tTableAPI.addSetting(tableSettings, \"disableCopyToClipboard\", this.disableCopyToClipboard);\n\t\tTableAPI.addSetting(tableSettings, \"scrollThreshold\", this.scrollThreshold);\n\t\tTableAPI.addSetting(tableSettings, \"threshold\", this.threshold);\n\t\tTableAPI.addSetting(tableSettings, \"popinLayout\", this.popinLayout);\n\t\tTableAPI.addSetting(tableSettings, \"selectionMode\", this.selectionMode);\n\t\tTableAPI.addSetting(tableSettings, \"type\", this.type);\n\t\tTableAPI.addSetting(tableSettings, \"enablePastingOfComputedProperties\", this.enablePastingOfComputedProperties);\n\t\tTableAPI.addSetting(tableSettings, \"selectAll\", this.enableSelectAll);\n\t\tTableAPI.addSetting(tableSettings, \"ignoredFields\", this.ignoredFields);\n\t\tTableAPI.addSetting(tableSettings, \"selectionLimit\", this.selectionLimit);\n\t\tTableAPI.addSetting(tableSettings, \"condensedTableLayout\", this.condensedTableLayout);\n\n\t\tif (this.creationMode) {\n\t\t\tconst creationMode: Record<string, unknown> = {};\n\t\t\tTableAPI.addSetting(creationMode, \"name\", this.creationMode.name);\n\t\t\tTableAPI.addSetting(creationMode, \"creationFields\", this.creationMode.creationFields);\n\t\t\tTableAPI.addSetting(creationMode, \"createAtEnd\", this.creationMode.createAtEnd);\n\t\t\tTableAPI.addSetting(creationMode, \"inlineCreationRowsHiddenInEditMode\", this.creationMode.inlineCreationRowsHiddenInEditMode);\n\t\t\tTableAPI.addSetting(creationMode, \"outbound\", this.creationMode.outbound);\n\t\t\tif (Object.entries(creationMode).length > 0) {\n\t\t\t\ttableSettings[\"creationMode\"] = creationMode;\n\t\t\t}\n\t\t}\n\n\t\tif (this.massEdit) {\n\t\t\tconst enableMassEdit: Record<string, unknown> = {};\n\t\t\tTableAPI.addSetting(enableMassEdit, \"customFragment\", this.massEdit.customContent);\n\t\t\tTableAPI.addSetting(enableMassEdit, \"fromInline\", true);\n\t\t\tTableAPI.addSetting(enableMassEdit, \"visibleFields\", this.massEdit.visibleFields?.join(\",\"));\n\t\t\tTableAPI.addSetting(enableMassEdit, \"ignoredFields\", this.massEdit.ignoredFields?.join(\",\"));\n\t\t\tTableAPI.addSetting(enableMassEdit, \"operationGroupingMode\", this.massEdit.operationGroupingMode);\n\t\t\ttableSettings[\"enableMassEdit\"] = enableMassEdit;\n\t\t}\n\n\t\tif (this.analyticalConfiguration?.aggregationOnLeafLevel === true) {\n\t\t\tconst analyticalConfiguration: Record<string, unknown> = {};\n\t\t\tTableAPI.addSetting(analyticalConfiguration, \"aggregationOnLeafLevel\", this.analyticalConfiguration.aggregationOnLeafLevel);\n\t\t\tif (Object.entries(analyticalConfiguration).length > 0) {\n\t\t\t\ttableSettings[\"analyticalConfiguration\"] = analyticalConfiguration;\n\t\t\t}\n\t\t}\n\n\t\tif (this.quickVariantSelection?.paths?.length) {\n\t\t\tTableAPI.addSetting(tableSettings, \"quickVariantSelection\", {\n\t\t\t\tpaths: this.quickVariantSelection.paths.map((path) => {\n\t\t\t\t\treturn { annotationPath: path };\n\t\t\t\t}),\n\t\t\t\tshowCounts: this.quickVariantSelection.showCounts\n\t\t\t});\n\t\t}\n\n\t\treturn tableSettings;\n\t}\n\n\t/**\n\t * Find an action from its key.\n\t * @param key\n\t * @returns The action if it can be found (or undefined)\n\t */\n\tfindSlotActionFromKey(key: string): Action | undefined {\n\t\tlet result: Action | undefined;\n\n\t\tfor (const action of this.actions ?? []) {\n\t\t\tif (\n\t\t\t\taction.isA<ActionGroup>(\"sap.fe.macros.table.ActionGroup\") ||\n\t\t\t\taction.isA<ActionGroupOverride>(\"sap.fe.macros.table.ActionGroupOverride\")\n\t\t\t) {\n\t\t\t\tresult ??= action.actions.find((a) => {\n\t\t\t\t\treturn a.isA<Action>(\"sap.fe.macros.table.Action\") && a.key === key;\n\t\t\t\t}) as Action | undefined;\n\t\t\t} else if (action.isA<Action>(\"sap.fe.macros.table.Action\") && action.key === key) {\n\t\t\t\tresult = action;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tonMetadataAvailable(): void {\n\t\tthis.createContent();\n\t}\n\n\tgetFullMetaPath(): string {\n\t\tif (this.metaPath.startsWith(\"/\")) {\n\t\t\treturn this.metaPath;\n\t\t} else if (this.contextPath.endsWith(\"/\")) {\n\t\t\treturn `${this.contextPath}${this.metaPath}`;\n\t\t} else {\n\t\t\treturn `${this.contextPath}/${this.metaPath}`;\n\t\t}\n\t}\n\n\tprivate createContent(forceCreation = false): void {\n\t\tconst owner = this._getOwner();\n\t\tif (!owner) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.contextPath ??= this.getOwnerContextPath() as string;\n\t\tconst fullMetaPath = this.getFullMetaPath();\n\t\tif (!this.content || forceCreation) {\n\t\t\tthis.detachFilterBar();\n\t\t\tthis.content?.destroy();\n\n\t\t\tconst metaModel = owner.getAppComponent().getMetaModel();\n\t\t\tconst metaPathContext = metaModel.createBindingContext(fullMetaPath)!;\n\n\t\t\tthis.tableDefinition = createTableDefinition(this);\n\t\t\tthis.updatePropertiesFromTableDefinition();\n\n\t\t\tthis.updateColumnsVisibility(this.tableDefinition.control.ignoredFields, this.tableDefinition);\n\n\t\t\tconst collectionEntity = this.contextObjectPath.convertedTypes.resolvePath(this.tableDefinition.annotation.collection)\n\t\t\t\t.target as EntitySet | NavigationProperty;\n\t\t\tconst entityType = (collectionEntity as EntitySet)?.entityType ?? (collectionEntity as NavigationProperty)?.targetType;\n\t\t\tthis.entityTypeFullyQualifiedName = entityType?.fullyQualifiedName;\n\n\t\t\tconst handlerProvider = new TableEventHandlerProvider(this, { metaModel, collectionEntity }, this);\n\t\t\tthis.content = this.createMDCTable({\n\t\t\t\tappComponent: owner.getAppComponent(),\n\t\t\t\tmetaPath: metaPathContext,\n\t\t\t\tconvertedMetadata: MetaModelConverter.convertTypes(metaModel),\n\t\t\t\thandlerProvider,\n\t\t\t\tmetaModel\n\t\t\t});\n\t\t}\n\t\tthis.updateFilterBar();\n\t\tthis.setupOptimisticBatch();\n\t\tthis.setUpNoDataInformation();\n\t\tthis.getQuickFilter()?.setMetaPath(fullMetaPath);\n\t}\n\n\tprivate createMDCTable(parameters: MdcTableTemplate.TableTemplatingParameters): MDCTable {\n\t\treturn MdcTableTemplate.getMDCTableTemplate(this, parameters);\n\t}\n\n\tprivate updatePropertiesFromTableDefinition(): void {\n\t\t// ID for the internal MDC table\n\t\tif (ManagedObjectMetadata.isGeneratedId(this.getId())) {\n\t\t\tthis.contentId ??= this.tableDefinition.annotation.id;\n\t\t} else {\n\t\t\tthis.contentId ??= `${this.getId()}-content`;\n\t\t}\n\n\t\t// Basic search field if no filter bar is provided\n\t\tif (this.useBasicSearch === undefined) {\n\t\t\t// If no filterbar is provided, use the basic search field\n\t\t\tif (!this.filterBar) {\n\t\t\t\tthis.filterBar = generate([this.contentId, \"StandardAction\", \"BasicSearch\"]);\n\t\t\t\tthis.useBasicSearch = true;\n\t\t\t} else {\n\t\t\t\tthis.useBasicSearch = false;\n\t\t\t}\n\t\t}\n\n\t\t// Read-only mode\n\t\tif (\n\t\t\tthis.readOnly === undefined &&\n\t\t\t(this.tableDefinition.annotation.displayMode === true || this.tableDefinition.control.readOnly === true)\n\t\t) {\n\t\t\tthis.readOnly = true;\n\t\t}\n\n\t\t// Enable empty rows\n\t\tif (this.emptyRowsEnabled === undefined) {\n\t\t\tconst enabled =\n\t\t\t\tthis.creationMode?.name === CreationMode.InlineCreationRows\n\t\t\t\t\t? this.tableDefinition.actions.find((a) => a.key === StandardActionKeys.Create)?.enabled\n\t\t\t\t\t: undefined;\n\t\t\tif (enabled !== undefined && enabled !== \"false\") {\n\t\t\t\tthis.setProperty(\"emptyRowsEnabled\", enabled);\n\t\t\t}\n\t\t}\n\t}\n\n\tgetNoDataMessageMode(): string {\n\t\tconst mode = this.modeForNoDataMessage ?? this.tableDefinition.control.modeForNoDataMessage ?? \"illustratedMessage-Auto\";\n\t\treturn mode === \"text\" ? \"text\" : mode.split(\"-\")[1];\n\t}\n\n\t/**\n\t * Get the count of the row binding of the table.\n\t * @returns The count of the row binding\n\t * @public\n\t */\n\tgetCount(): number | undefined {\n\t\treturn this.getRowBinding()?.getCount();\n\t}\n}\n\nexport default TableAPI;\n"],"mappings":"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","ignoreList":[],"file":"TableAPI-dbg.js"}