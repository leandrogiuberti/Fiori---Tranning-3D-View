{"version":3,"names":["itemsToRemove","getAdaptationProperties","designtimeSettings","control","propertyValues","forEach","setting","id","getAdaptationPropertyValue","_exports","table","getParent","tableDefinition","getProperty","returnValue","headerVisible","header","enableFullScreen","enableExport","data","creationMode","createAtEnd","frozenColumnCount","filters","quickFilters","showCounts","getP13nMode","length","includes","rowCount","rowCountMode","useCondensedTableLayout","widthIncludingColumnHeader","annotation","selectionMode","selectionLimit","threshold","scrollThreshold","hierarchyQualifier","massEdit","enabled","visibleFields","ignoreFields","enableAddCardToInsights","beforeRebindTable","selectionChange","getSettings","tableAPI","items","getDesigntimeSettings","manifestSetting","settingsData","label","name","tooltip","description","keyUser","controlData","type","enum","enums","value","push","configPath","designTime","actions","textArrangement","getTextArrangementChangeAction","rename","getRenameAction","settings","fe","getText","icon","isEnabled","isManifestChangesEnabled","handler","unchangedData","configContext","getBindingContext","isConfigModelPrepared","getSettingsIfKeyUser","CommonUtils","getAppComponent","prepareConfigModel","personalization","getPersonalizationSetting","resourceModel","getModel","openAdaptionDialog","width","height","then","propertyValuesEntered","propertyPath","getPropertyPath","extractChanges","noChanges","properties","busyIndicatorDelay","ignore","enableColumnResize","headerLevel","multiSelectMode","showPasteButton","showRowCount","aggregations","manifestSettings","filter","item","getPropertyNamesAndDescriptions","manifestSettingsValues","returnValues","propertyIndex","path","manifestPropertyPath","manifestPropertyChange","propertyChanges","separateChanges"],"sourceRoot":".","sources":["Table.designtime.ts"],"sourcesContent":["/*!\n * Find the current values of the table configuration that is provided in the table adapt dialog\n */\n\nimport CommonUtils from \"sap/fe/core/CommonUtils\";\nimport type ResourceModel from \"sap/fe/core/ResourceModel\";\n\nimport { getRenameAction, getText, getTextArrangementChangeAction } from \"sap/fe/core/designtime/AnnotationBasedChanges\";\nimport type {\n\tDesigntimeSetting,\n\tDesigntimeSettingEnums,\n\tPropertyValue,\n\tSettingsData,\n\tadaptionChange\n} from \"sap/fe/macros/designtime/Designtime.helper\";\nimport {\n\textractChanges,\n\tgetPersonalizationSetting,\n\tgetPropertyNamesAndDescriptions,\n\tgetSettingsIfKeyUser,\n\tisConfigModelPrepared,\n\tisManifestChangesEnabled,\n\tnoChanges,\n\topenAdaptionDialog,\n\tprepareConfigModel,\n\tseparateChanges\n} from \"sap/fe/macros/designtime/Designtime.helper\";\nimport type TableAPI from \"sap/fe/macros/table/TableAPI\";\nimport { getDesigntimeSettings, getPropertyPath } from \"sap/fe/macros/table/designtime/Table.designtime.helper\";\nimport type MDCTable from \"sap/ui/mdc/Table\";\nimport type Context from \"sap/ui/model/Context\";\n\ntype ControlData = {\n\ttype: string | undefined;\n\tenum: DesigntimeSettingEnums[] | undefined;\n\tvalue: unknown;\n\tid: string;\n};\n// Don't pass these properties to fiori tools processing for the control panel for table. Currently the combination\n// of boolean property plus further option of fixed list is not supported\nconst itemsToRemove = [\n\t\"personalization\",\n\t\"personalizationSort\",\n\t\"personalizationColumn\",\n\t\"personalizationFilter\",\n\t\"personalizationGroup\",\n\t\"personalizationAggregate\"\n];\n\nexport function getAdaptationProperties(designtimeSettings: DesigntimeSetting[], control: MDCTable): PropertyValue {\n\tconst propertyValues: PropertyValue = {};\n\tdesigntimeSettings.forEach(function (setting) {\n\t\tpropertyValues[setting.id] = getAdaptationPropertyValue(control, setting);\n\t});\n\treturn propertyValues;\n}\n/**\n * Returns the value of one of the settings that have been defined for table adaptation.\n * @param control Reference to selected table\n * @param setting The definition of the setting required for adaptation\n * @returns Setting definition with a value for selected control\n */\nfunction getAdaptationPropertyValue(control: MDCTable, setting: DesigntimeSetting): boolean | string | number {\n\tconst table = control.getParent() as TableAPI;\n\tconst tableDefinition = table.getProperty(\"tableDefinition\");\n\tlet returnValue: boolean | string | number = \"\";\n\n\tswitch (setting.id) {\n\t\tcase \"headerVisible\":\n\t\t\treturnValue = tableDefinition.headerVisible;\n\t\t\tbreak;\n\t\tcase \"header\":\n\t\t\treturnValue = tableDefinition.header;\n\t\t\tbreak;\n\t\tcase \"enableFullScreen\":\n\t\t\treturnValue = tableDefinition.control.enableFullScreen;\n\t\t\tbreak;\n\t\tcase \"enableExport\":\n\t\t\treturnValue = tableDefinition.control.enableExport;\n\t\t\tbreak;\n\t\tcase \"type\":\n\t\t\treturnValue = control.data(\"tableType\");\n\t\t\tbreak;\n\t\tcase \"creationModeName\":\n\t\t\treturnValue = tableDefinition.control.creationMode;\n\t\t\tbreak;\n\t\tcase \"creationModeCreateAtEnd\":\n\t\t\treturnValue = tableDefinition.control.createAtEnd;\n\t\t\tbreak;\n\t\tcase \"frozenColumnCount\":\n\t\t\treturnValue = tableDefinition.control.frozenColumnCount;\n\t\t\tbreak;\n\t\tcase \"showCounts\":\n\t\t\treturnValue = tableDefinition.control.filters?.quickFilters?.showCounts;\n\t\t\tbreak;\n\t\t/* case \"hideTableTitle\":\n\t\t\tpropertyValues.hideTableTitle = tableDefinition.control.filters?.quickFilters && !tableDefinition.control.headerVisible;\n\t\t\tbreak; */\n\t\tcase \"personalization\":\n\t\t\treturnValue = control.getP13nMode().length === 0 ? \"False\" : \"True\";\n\t\t\tbreak;\n\t\tcase \"personalizationSort\":\n\t\t\treturnValue = control.getP13nMode().includes(\"Sort\");\n\t\t\tbreak;\n\t\tcase \"personalizationColumn\":\n\t\t\treturnValue = control.getP13nMode().includes(\"Column\");\n\t\t\tbreak;\n\t\tcase \"personalizationFilter\":\n\t\t\treturnValue = control.getP13nMode().includes(\"Filter\");\n\t\t\tbreak;\n\t\tcase \"personalizationGroup\":\n\t\t\treturnValue = control.getP13nMode().includes(\"Group\");\n\t\t\tbreak;\n\t\tcase \"personalizationAggregate\":\n\t\t\treturnValue = control.getP13nMode().includes(\"Aggregate\");\n\t\t\tbreak;\n\t\tcase \"rowCount\":\n\t\t\treturnValue = tableDefinition.control.rowCount;\n\t\t\tbreak;\n\t\tcase \"rowCountMode\":\n\t\t\treturnValue = tableDefinition.control.rowCountMode;\n\t\t\tbreak;\n\t\tcase \"condensedTableLayout\":\n\t\t\treturnValue = tableDefinition.control.useCondensedTableLayout;\n\t\t\tbreak;\n\t\tcase \"widthIncludingColumnHeader\":\n\t\t\treturnValue = tableDefinition.control.widthIncludingColumnHeader;\n\t\t\tbreak;\n\t\tcase \"selectionMode\":\n\t\t\treturnValue = tableDefinition.annotation.selectionMode;\n\t\t\tbreak;\n\t\tcase \"selectAll\":\n\t\t\treturnValue = tableDefinition.control.selectionLimit === 0;\n\t\t\tbreak;\n\t\tcase \"threshold\":\n\t\t\treturnValue = tableDefinition.control.threshold ?? tableDefinition.annotation.threshold;\n\t\t\tbreak;\n\t\tcase \"scrollThreshold\":\n\t\t\treturnValue = tableDefinition.control.scrollThreshold;\n\t\t\tbreak;\n\t\tcase \"selectionLimit\":\n\t\t\treturnValue = tableDefinition.control.selectionLimit;\n\t\t\tbreak;\n\t\tcase \"hierarchyQualifier\":\n\t\t\treturnValue = tableDefinition.control.hierarchyQualifier;\n\t\t\tbreak;\n\t\tcase \"enableMassEdit\":\n\t\t\treturnValue = tableDefinition.control.massEdit.enabled;\n\t\t\tbreak;\n\t\tcase \"enableMassEditVisibleFields\":\n\t\t\treturnValue = tableDefinition.control.massEdit.visibleFields;\n\t\t\tbreak;\n\t\tcase \"enableMassEditIgnoredFields\":\n\t\t\treturnValue = tableDefinition.control.massEdit.ignoreFields;\n\t\t\tbreak;\n\t\tcase \"enableAddCardToInsights\":\n\t\t\treturnValue = tableDefinition.control.enableAddCardToInsights;\n\t\t\tbreak;\n\t\tcase \"beforeRebindTable\":\n\t\t\treturnValue = tableDefinition.control.beforeRebindTable;\n\t\t\tbreak;\n\t\tcase \"selectionChange\":\n\t\t\treturnValue = tableDefinition.control.selectionChange;\n\t\t\tbreak;\n\t}\n\treturn returnValue;\n}\n/**\n * Returns the settings and values for a table formatted for the adaptation dialog content.\n * @param tableAPI Reference to selected table\n * @param propertyValues The list of properties and values for the selected table\n * @returns Formatted list for the adaptation dialog\n */\nfunction getSettings(tableAPI: TableAPI, propertyValues: PropertyValue): SettingsData[] {\n\tconst items: SettingsData[] = [];\n\n\tgetDesigntimeSettings(tableAPI).forEach(function (manifestSetting) {\n\t\t//Fill model for adaptation settings data\n\t\tconst settingsData: SettingsData = {\n\t\t\tlabel: manifestSetting.name,\n\t\t\ttooltip: manifestSetting.description,\n\t\t\tcontrol: [],\n\t\t\tkeyUser: manifestSetting.keyUser\n\t\t};\n\n\t\tconst controlData: ControlData = {\n\t\t\ttype: manifestSetting.type,\n\t\t\tenum: manifestSetting.enums,\n\t\t\tvalue: propertyValues[manifestSetting.id],\n\t\t\tid: manifestSetting.id\n\t\t};\n\n\t\tsettingsData.control.push(controlData);\n\t\titems.push(settingsData);\n\t});\n\treturn items;\n}\n\nconst configPath = \"rta/configSettings\";\n\nconst designTime = {\n\tactions: {\n\t\tannotation: {\n\t\t\ttextArrangement: getTextArrangementChangeAction(),\n\t\t\trename: getRenameAction()\n\t\t},\n\t\tsettings: {\n\t\t\tfe: {\n\t\t\t\tname: getText(\"RTA_CONTEXT_ACTIONMENU_CONFIG\"),\n\t\t\t\ticon: \"sap-icon://developer-settings\",\n\t\t\t\tisEnabled: isManifestChangesEnabled,\n\t\t\t\thandler: async function (control: MDCTable): Promise<adaptionChange[]> {\n\t\t\t\t\tconst tableAPI = control.getParent() as TableAPI;\n\t\t\t\t\tconst designtimeSettings = getDesigntimeSettings(tableAPI);\n\t\t\t\t\tconst propertyValues = getAdaptationProperties(designtimeSettings, control);\n\t\t\t\t\tconst unchangedData = { ...propertyValues };\n\t\t\t\t\tconst configContext = control.getBindingContext(\"internal\") as Context;\n\t\t\t\t\tif (!isConfigModelPrepared(configContext, configPath)) {\n\t\t\t\t\t\t// first time this session\n\t\t\t\t\t\tlet items = getSettings(tableAPI, propertyValues);\n\t\t\t\t\t\titems = getSettingsIfKeyUser(CommonUtils.getAppComponent(control), items);\n\t\t\t\t\t\t// use internal model to persist adaptation configuration values\n\t\t\t\t\t\tprepareConfigModel(items, configContext, configPath);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// set personalization to 'Own Settings' if that was chosen previously\n\t\t\t\t\t\t// as this setting cannot be retrived from the control, and will be always true if personalization is enabled\n\t\t\t\t\t\tpropertyValues.personalization = getPersonalizationSetting(configContext);\n\t\t\t\t\t}\n\t\t\t\t\tconst resourceModel = control.getModel(\"sap.fe.i18n\") as ResourceModel;\n\t\t\t\t\treturn openAdaptionDialog(\n\t\t\t\t\t\tconfigContext,\n\t\t\t\t\t\tpropertyValues,\n\t\t\t\t\t\t\"{sap.fe.i18n>RTA_CONFIGURATION_TITLE_TABLE}\",\n\t\t\t\t\t\tresourceModel,\n\t\t\t\t\t\tconfigPath,\n\t\t\t\t\t\t\"{sap.fe.i18n>RTA_CONFIGURATION_INFO_MESSAGE_TABLE}\",\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\twidth: \"650px\",\n\t\t\t\t\t\t\theight: \"800px\"\n\t\t\t\t\t\t}\n\t\t\t\t\t).then(function (propertyValuesEntered: PropertyValue): adaptionChange[] | [] {\n\t\t\t\t\t\tconst propertyPath = getPropertyPath(control.getParent() as TableAPI);\n\t\t\t\t\t\treturn extractChanges(designtimeSettings, unchangedData, propertyValuesEntered, propertyPath, control);\n\t\t\t\t\t}, noChanges);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\t// We disable mdc table properties in the property panel of Fiori Tools\n\tproperties: {\n\t\tbusyIndicatorDelay: { ignore: true },\n\t\tenableColumnResize: { ignore: true },\n\t\tenableExport: { ignore: true },\n\t\theader: { ignore: true },\n\t\theaderLevel: { ignore: true },\n\t\theaderVisible: { ignore: true },\n\t\tmultiSelectMode: { ignore: true },\n\t\tshowPasteButton: { ignore: true },\n\t\tshowRowCount: { ignore: true },\n\t\tthreshold: { ignore: true },\n\t\twidth: { ignore: true }\n\t},\n\taggregations: {},\n\n\t// These functions provide the properties used in table adaption to Fiori tools.\n\tmanifestSettings: function (control: MDCTable): DesigntimeSetting[] {\n\t\tconst table = control.getParent() as TableAPI;\n\t\tconst designtimeSettings = getDesigntimeSettings(table).filter((item) => !itemsToRemove.includes(item.id));\n\t\treturn getPropertyNamesAndDescriptions(designtimeSettings, control.getModel(\"sap.fe.i18n\") as ResourceModel);\n\t},\n\t// getAdaptionPropertyValue\n\tmanifestSettingsValues: function (designtimeSettings: DesigntimeSetting[], control: MDCTable): PropertyValue {\n\t\tconst returnValues: PropertyValue = {};\n\t\tdesigntimeSettings.forEach(function (setting) {\n\t\t\tlet propertyIndex;\n\t\t\tif (setting.path) {\n\t\t\t\tpropertyIndex = setting.path;\n\t\t\t} else {\n\t\t\t\tpropertyIndex = setting.id;\n\t\t\t}\n\t\t\treturnValues[propertyIndex] = getAdaptationPropertyValue(control, setting);\n\t\t});\n\t\treturn returnValues;\n\t},\n\t// get path for control configuration. Pass reference to the control\n\tmanifestPropertyPath: function (control: MDCTable): string {\n\t\tconst table = control.getParent() as TableAPI;\n\t\treturn getPropertyPath(table);\n\t},\n\t// create change structue. Pass array of manifest setting and new value, the property path and the control\n\tmanifestPropertyChange: function (propertyChanges: PropertyValue, propertyPath: string, control: MDCTable): adaptionChange[] {\n\t\treturn separateChanges(propertyChanges, propertyPath, control);\n\t}\n};\n\nexport default designTime;\n"],"mappings":"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","ignoreList":[],"file":"Table-dbg.designtime.js"}