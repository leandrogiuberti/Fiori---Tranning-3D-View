{"version":3,"names":["TableFullScreenButton","_dec","defineUI5Class","_dec2","property","type","_class","_class2","_BuildingBlock","properties","others","_this","call","_initializerDefineProperty","_descriptor","tablePlaceHolderPanel","Panel","data","_exports","_inheritsLoose","_proto","prototype","getTableAPI","tableAPI","currentControl","content","getParent","isA","onMetadataAvailable","initializeContent","afterDialogOpen","focus","beforeDialogClose","setFullScreenDialog","undefined","restoreNormalState","afterDialogClose","fullScreenDialog","destroy","component","Component","getOwnerComponentFor","appComponent","getRootViewController","_scrollTablesToLastNavigatedItems","createDialog","endButton","_jsx","Button","text","resourceModel","getText","ButtonType","Transparent","press","close","newDialog","Dialog","showHeader","stretch","afterOpen","bind","beforeClose","afterClose","Page","setIgnoreContextChangeEvent","setIcon","setTooltip","getTableDefinition","control","rowCountMode","getContent","getType","setRowCountMode","aggregation","originalTableParent","getAggregation","originalAggregationName","Array","isArray","removeAggregation","addAggregation","setAggregation","setFullScreenState","JsControlTreeModifier","getParentAggregationName","addDependent","addContent","open","onFullScreenToggle","getResourceModel","id","createId","tooltip","icon","visible","enabled","BuildingBlock","_applyDecoratedDescriptor","configurable","enumerable","writable","initializer"],"sourceRoot":".","sources":["TableFullScreenButton.tsx"],"sourcesContent":["import { defineUI5Class, property, type PropertiesOf } from \"sap/fe/base/ClassSupport\";\nimport type AppComponent from \"sap/fe/core/AppComponent\";\nimport type ResourceModel from \"sap/fe/core/ResourceModel\";\nimport BuildingBlock from \"sap/fe/core/buildingBlocks/BuildingBlock\";\nimport { ButtonType } from \"sap/fe/core/converters/controls/Common/Action\";\nimport { getResourceModel } from \"sap/fe/core/helpers/ResourceModelHelper\";\nimport type TableAPI from \"sap/fe/macros/table/TableAPI\";\nimport Button from \"sap/m/Button\";\nimport Dialog from \"sap/m/Dialog\";\nimport Page from \"sap/m/Page\";\nimport Panel from \"sap/m/Panel\";\nimport Component from \"sap/ui/core/Component\";\nimport type Control from \"sap/ui/core/Control\";\nimport { JsControlTreeModifier } from \"sap/ui/core/util/reflection\";\nimport { type $ControlSettings } from \"sap/ui/mdc/Control\";\nimport type GridTableType from \"sap/ui/mdc/table/GridTableType\";\nimport type TreeTableType from \"sap/ui/mdc/table/TreeTableType\";\n\n@defineUI5Class(\"sap.fe.macros.table.TableFullScreenButton\")\nexport default class TableFullScreenButton extends BuildingBlock<Button> {\n\t@property({ type: \"string\" })\n\tid!: string;\n\n\tprotected tableAPI?: TableAPI;\n\n\tprotected fullScreenDialog?: Dialog;\n\n\tprotected originalTableParent?: Control;\n\n\tprotected originalAggregationName?: string;\n\n\tprotected tablePlaceHolderPanel: Panel;\n\n\tprotected resourceModel!: ResourceModel;\n\n\tconstructor(properties: $ControlSettings & PropertiesOf<TableFullScreenButton>, others?: $ControlSettings) {\n\t\tsuper(properties, others);\n\n\t\tthis.tablePlaceHolderPanel = new Panel();\n\t\tthis.tablePlaceHolderPanel.data(\"FullScreenTablePlaceHolder\", true);\n\t}\n\n\tprotected getTableAPI(): TableAPI {\n\t\tif (!this.tableAPI) {\n\t\t\tlet currentControl = this.content as Control;\n\t\t\tdo {\n\t\t\t\tcurrentControl = currentControl.getParent() as Control;\n\t\t\t} while (!currentControl.isA(\"sap.fe.macros.table.TableAPI\"));\n\t\t\tthis.tableAPI = currentControl as TableAPI;\n\t\t\treturn this.tableAPI;\n\t\t} else {\n\t\t\treturn this.tableAPI;\n\t\t}\n\t}\n\n\t/**\n\t * Handler for the onMetadataAvailable event.\n\t */\n\tonMetadataAvailable(): void {\n\t\tif (!this.content) {\n\t\t\tthis.initializeContent();\n\t\t}\n\t}\n\n\t/**\n\t * Set the focus back to the full screen button after opening the dialog.\n\t */\n\tprivate afterDialogOpen(): void {\n\t\tthis.content?.focus();\n\t}\n\n\t/**\n\t * Handle dialog close via Esc, navigation etc.\n\t */\n\tprivate beforeDialogClose(): void {\n\t\tthis.getTableAPI().setFullScreenDialog(undefined);\n\t\tthis.restoreNormalState();\n\t}\n\n\t/**\n\t * Some follow up after closing the dialog.\n\t */\n\tprivate afterDialogClose(): void {\n\t\tthis.fullScreenDialog?.destroy();\n\t\tthis.fullScreenDialog = undefined;\n\n\t\tconst component = Component.getOwnerComponentFor(this.getTableAPI())!;\n\t\tconst appComponent = Component.getOwnerComponentFor(component) as AppComponent;\n\t\tthis.content?.focus();\n\t\t// trigger the automatic scroll to the latest navigated row :\n\t\tappComponent?.getRootViewController()._scrollTablesToLastNavigatedItems();\n\t}\n\n\t/**\n\t * Create the full screen dialog.\n\t * @returns The new dialog\n\t */\n\tprivate createDialog(): Dialog {\n\t\tconst endButton = (\n\t\t\t<Button\n\t\t\t\ttext={this.resourceModel.getText(\"M_COMMON_TABLE_FULLSCREEN_CLOSE\")}\n\t\t\t\ttype={ButtonType.Transparent}\n\t\t\t\tpress={(): void => {\n\t\t\t\t\t// Just close the dialog here, all the needed processing is triggered\n\t\t\t\t\t// in beforeClose.\n\t\t\t\t\t// This ensures, that we only do it once event if the user presses the\n\t\t\t\t\t// ESC key and the Close button simultaneously\n\t\t\t\t\tthis.fullScreenDialog?.close();\n\t\t\t\t}}\n\t\t\t/>\n\t\t);\n\n\t\tconst newDialog = (\n\t\t\t<Dialog\n\t\t\t\tshowHeader={false}\n\t\t\t\tstretch={true}\n\t\t\t\tafterOpen={this.afterDialogOpen.bind(this)}\n\t\t\t\tbeforeClose={this.beforeDialogClose.bind(this)}\n\t\t\t\tafterClose={this.afterDialogClose.bind(this)}\n\t\t\t\tendButton={endButton}\n\t\t\t\tcontent={<Page />}\n\t\t\t/>\n\t\t);\n\n\t\t// The below is needed for correctly setting the focus after adding a new row in\n\t\t// the table in fullscreen mode\n\t\tnewDialog.data(\"FullScreenDialog\", true);\n\n\t\treturn newDialog;\n\t}\n\n\t/**\n\t * Restores the table to its \"normal\" state (non fullscreen).\n\t * Changes the button icon and text and moves the table back to its original place.\n\t */\n\tprivate restoreNormalState(): void {\n\t\tconst tableAPI = this.getTableAPI();\n\n\t\ttry {\n\t\t\t// The MDC table shall ignore the contextChange event during the switch to fullscreen,\n\t\t\t// as it can cause a rebind of the table and thus a loss of the current expansion state\n\t\t\ttableAPI.setIgnoreContextChangeEvent(true);\n\n\t\t\t// change the button icon and text\n\t\t\tthis.content?.setIcon(\"sap-icon://full-screen\");\n\t\t\tthis.content?.setTooltip(this.resourceModel.getText(\"M_COMMON_TABLE_FULLSCREEN_MAXIMIZE\"));\n\n\t\t\t//set the rowCountMode to the initial value (if it was set in the manifest)\n\t\t\tif (\n\t\t\t\ttableAPI.getTableDefinition().control.type === \"GridTable\" ||\n\t\t\t\t(tableAPI.getTableDefinition().control.type === \"TreeTable\" && tableAPI.getTableDefinition().control.rowCountMode)\n\t\t\t) {\n\t\t\t\t(tableAPI.getContent().getType() as GridTableType).setRowCountMode(tableAPI.getTableDefinition().control.rowCountMode);\n\t\t\t}\n\n\t\t\t// Move the table back to the old place and close the dialog\n\t\t\tconst aggregation = this.originalTableParent!.getAggregation(this.originalAggregationName!);\n\t\t\tif (Array.isArray(aggregation)) {\n\t\t\t\tthis.originalTableParent!.removeAggregation(this.originalAggregationName!, this.tablePlaceHolderPanel);\n\t\t\t\tthis.originalTableParent!.addAggregation(this.originalAggregationName!, tableAPI);\n\t\t\t} else {\n\t\t\t\tthis.originalTableParent!.setAggregation(this.originalAggregationName!, tableAPI);\n\t\t\t}\n\t\t} finally {\n\t\t\ttableAPI.setIgnoreContextChangeEvent(false);\n\t\t}\n\t}\n\n\t/**\n\t * Displays the table in \"fullscreen\" mode.\n\t * Changes the button icon and text, creates a dialog and moves the table into it.\n\t */\n\tprivate async setFullScreenState(): Promise<void> {\n\t\tconst tableAPI = this.getTableAPI();\n\n\t\ttry {\n\t\t\t// The MDC table shall ignore the contextChange event during the switch to fullscreen,\n\t\t\t// as it can cause a rebind of the table and thus a loss of the current expansion state\n\t\t\ttableAPI.setIgnoreContextChangeEvent(true);\n\n\t\t\t// change the button icon and text\n\t\t\tthis.content?.setIcon(\"sap-icon://exit-full-screen\");\n\t\t\tthis.content?.setTooltip(this.resourceModel.getText(\"M_COMMON_TABLE_FULLSCREEN_MINIMIZE\"));\n\t\t\tthis.tablePlaceHolderPanel.data(\"tableAPIreference\", tableAPI);\n\n\t\t\t// Store the current location of the table to be able to move it back later\n\t\t\tthis.originalTableParent = tableAPI.getParent()! as Control;\n\t\t\tthis.originalAggregationName = await JsControlTreeModifier.getParentAggregationName(tableAPI);\n\n\t\t\t// Replace the current position of the table with an empty Panel as a placeholder\n\t\t\tconst aggregation = this.originalTableParent.getAggregation(this.originalAggregationName);\n\t\t\tif (Array.isArray(aggregation)) {\n\t\t\t\tthis.originalTableParent.removeAggregation(this.originalAggregationName, tableAPI);\n\t\t\t\tthis.originalTableParent.addAggregation(this.originalAggregationName, this.tablePlaceHolderPanel);\n\t\t\t} else {\n\t\t\t\tthis.originalTableParent.setAggregation(this.originalAggregationName, this.tablePlaceHolderPanel);\n\t\t\t}\n\n\t\t\t// Create the full screen dialog\n\t\t\tthis.fullScreenDialog = this.createDialog();\n\t\t\t// Add the dialog as a dependent to the original parent of the table in order to not lose the context\n\t\t\tthis.originalTableParent?.addDependent(this.fullScreenDialog);\n\n\t\t\t//Ensure that the rowCountMode of the mdc table is set to \"Auto\" to avoid the table from being cut off in fullscreen mode\n\t\t\tif (tableAPI.getTableDefinition().control.type === \"GridTable\" || tableAPI.getTableDefinition().control.type === \"TreeTable\") {\n\t\t\t\t(tableAPI.getContent().getType() as GridTableType | TreeTableType).setRowCountMode(\"Auto\");\n\t\t\t}\n\n\t\t\t// Move the table over into the content page in the dialog and open the dialog\n\t\t\t(this.fullScreenDialog.getContent()[0] as Page).addContent(this.getTableAPI());\n\t\t\tthis.fullScreenDialog.open();\n\t\t\ttableAPI.setFullScreenDialog(this.fullScreenDialog);\n\t\t} finally {\n\t\t\ttableAPI.setIgnoreContextChangeEvent(false);\n\t\t}\n\t}\n\n\t/**\n\t * Switches the table between normal display and fullscreen.\n\t */\n\tasync onFullScreenToggle(): Promise<void> {\n\t\tif (this.fullScreenDialog) {\n\t\t\t// The dialog is open --> close it\n\t\t\tthis.fullScreenDialog.close();\n\t\t} else {\n\t\t\t// Create a new fullscreen dialog\n\t\t\tawait this.setFullScreenState();\n\t\t}\n\t}\n\n\t/**\n\t * Created the content (i.e. the button).\n\t */\n\tprivate initializeContent(): void {\n\t\tthis.resourceModel = getResourceModel(this);\n\t\tthis.content = (\n\t\t\t<Button\n\t\t\t\tid={this.createId(\"_btn\")}\n\t\t\t\ttooltip={this.resourceModel.getText(\"M_COMMON_TABLE_FULLSCREEN_MAXIMIZE\")}\n\t\t\t\ticon={\"sap-icon://full-screen\"}\n\t\t\t\tpress={this.onFullScreenToggle.bind(this)}\n\t\t\t\ttype={\"Transparent\"}\n\t\t\t\tvisible={true}\n\t\t\t\tenabled={true}\n\t\t\t/>\n\t\t);\n\t}\n}\n"],"mappings":"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","ignoreList":[],"file":"TableFullScreenButton-dbg.js"}