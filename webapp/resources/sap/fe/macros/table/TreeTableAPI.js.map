{"version":3,"file":"TreeTableAPI.js","names":["TreeTableAPI","_dec","defineUI5Class","returnTypes","_dec2","property","type","required","_dec3","_dec4","_dec5","_dec6","_dec7","aggregation","defaultClass","TreeTableCreationOptions","_dec8","allowedValues","_class","_class2","_TableAPI","mSettings","_this","_len","arguments","length","others","Array","_key","call","this","_initializerDefineProperty","_descriptor","_descriptor2","_descriptor3","_descriptor4","_descriptor5","_descriptor6","_descriptor7","_inheritsLoose","_proto","prototype","getSettingsForManifest","tableSettings","TableAPI","addSetting","hierarchyQualifier","isMoveToPositionAllowed","isCopyToPositionAllowed","isNodeMovable","isNodeCopyable","creationMode","createInPlace","nodeType","propertyName","values","Object","assign","map","value","key","label","creationFields","isCreateEnabled","entries","_applyDecoratedDescriptor","configurable","enumerable","writable","initializer"],"sources":["./TreeTableAPI.ts"],"sourcesContent":["import { aggregation, defineUI5Class, property, type PropertiesOf } from \"sap/fe/base/ClassSupport\";\nimport { type TableType } from \"sap/fe/core/converters/controls/Common/Table\";\nimport { type $ControlSettings } from \"sap/ui/core/Control\";\nimport TableAPI from \"./TableAPI\";\nimport TreeTableCreationOptions from \"./TreeTableCreationOptions\";\n\n@defineUI5Class(\"sap.fe.macros.table.TreeTableAPI\", { returnTypes: [\"sap.fe.macros.MacroAPI\"] })\nclass TreeTableAPI extends TableAPI {\n\t/**\n\t * The hierarchy qualifier used in the RecursiveHierarchy annotation.\n\t */\n\t@property({ type: \"string\", required: true })\n\thierarchyQualifier!: string;\n\n\t/**\n\t * Defines the extension point to control whether a source node can be dropped on a specific parent node.<br/>\n\t */\n\t@property({ type: \"string\" })\n\tisMoveToPositionAllowed?: string;\n\n\t/**\n\t * Defines the extension point to control whether a source node can be copied to a specific parent node.<br/>\n\t */\n\t@property({ type: \"string\" })\n\tisCopyToPositionAllowed?: string;\n\n\t/**\n\t * Defines the extension point to control if a node can be dragged.<br/>\n\t */\n\t@property({ type: \"string\" })\n\tisNodeMovable?: string;\n\n\t/**\n\t * Defines the extension point to control whether a node can be copied.<br/>\n\t */\n\t@property({ type: \"string\" })\n\tisNodeCopyable?: string;\n\t/**\n\t * A set of options that can be configured.\n\t */\n\t@aggregation({ type: \"sap.fe.macros.table.TreeTableCreationOptions\", defaultClass: TreeTableCreationOptions })\n\tcreationMode?: TreeTableCreationOptions;\n\n\t@property({ type: \"string\", allowedValues: [\"TreeTable\"] })\n\ttype: TableType = \"TreeTable\";\n\n\tconstructor(mSettings?: PropertiesOf<TreeTableAPI> & { id?: string }, ...others: $ControlSettings[]) {\n\t\tsuper(mSettings, ...others);\n\t}\n\n\t/**\n\t * Add tree-specific settings in the manifest.\n\t * @returns Settings\n\t */\n\tgetSettingsForManifest(): Record<string, unknown> {\n\t\tconst tableSettings = super.getSettingsForManifest();\n\t\tTableAPI.addSetting(tableSettings, \"type\", \"TreeTable\");\n\t\tTableAPI.addSetting(tableSettings, \"hierarchyQualifier\", this.hierarchyQualifier);\n\t\tTableAPI.addSetting(tableSettings, \"isMoveToPositionAllowed\", this.isMoveToPositionAllowed);\n\t\tTableAPI.addSetting(tableSettings, \"isCopyToPositionAllowed\", this.isCopyToPositionAllowed);\n\t\tTableAPI.addSetting(tableSettings, \"isNodeMovable\", this.isNodeMovable);\n\t\tTableAPI.addSetting(tableSettings, \"isNodeCopyable\", this.isNodeCopyable);\n\t\tconst creationMode = (tableSettings[\"creationMode\"] ?? {}) as Record<string, unknown>;\n\t\tTableAPI.addSetting(creationMode, \"createInPlace\", this.creationMode?.createInPlace);\n\n\t\tif (this.creationMode?.nodeType) {\n\t\t\t//Values is passed as Array into the XML but in the manifest it is a dictionary\n\t\t\t// so we need to transform the array into a dictionary\n\t\t\tTableAPI.addSetting(creationMode, \"nodeType\", {\n\t\t\t\tpropertyName: this.creationMode.nodeType.propertyName,\n\t\t\t\tvalues: Object.assign(\n\t\t\t\t\t{},\n\t\t\t\t\t...(this.creationMode.nodeType.values ?? []).map((value) => ({\n\t\t\t\t\t\t[value.key]: { label: value.label, creationFields: value.creationFields }\n\t\t\t\t\t}))\n\t\t\t\t)\n\t\t\t});\n\t\t}\n\n\t\tTableAPI.addSetting(creationMode, \"isCreateEnabled\", this.creationMode?.isCreateEnabled);\n\t\tif (Object.entries(creationMode).length > 0) {\n\t\t\ttableSettings[\"creationMode\"] = creationMode;\n\t\t}\n\n\t\treturn tableSettings;\n\t}\n}\n\nexport default TreeTableAPI;\n"],"mappings":"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","ignoreList":[]}