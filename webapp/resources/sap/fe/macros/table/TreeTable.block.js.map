{"version":3,"file":"TreeTable.block.js","names":["TreeTableBlock","_dec","defineBuildingBlock","name","namespace","publicNamespace","returnTypes","_dec2","blockAttribute","type","required","isPublic","_dec3","_dec4","_dec5","_dec6","_dec7","underlyingType","validate","creationOptionsInput","includes","Error","_dec8","allowedValues","_class","_class2","_TableBlock","props","controlConfiguration","settings","_this","call","this","_initializerDefineProperty","_descriptor","_descriptor2","_descriptor3","_descriptor4","_descriptor5","_descriptor6","_descriptor7","_exports","_inheritsLoose","_proto","prototype","getTableSettings","tableSettings","TableBlock","addSetting","hierarchyQualifier","isMoveToPositionAllowed","isCopyToPositionAllowed","isNodeMovable","isNodeCopyable","creationMode","createInPlace","nodeType","propertyName","values","Object","assign","map","value","key","label","creationFields","isCreateEnabled","entries","length","_applyDecoratedDescriptor","configurable","enumerable","writable","initializer"],"sources":["./TreeTable.block.tsx"],"sourcesContent":["import type { PropertiesOf } from \"sap/fe/base/ClassSupport\";\nimport { blockAttribute, defineBuildingBlock } from \"sap/fe/core/buildingBlocks/templating/BuildingBlockSupport\";\nimport type { TemplateProcessorSettings } from \"sap/fe/core/buildingBlocks/templating/BuildingBlockTemplateProcessor\";\nimport TableBlock from \"./Table.block\";\nimport type TreeTableCreationOptions from \"./TreeTableCreationOptions\";\n\n/**\n * Building block used to create a tree table based on the metadata provided by OData V4.\n * {@link demo:sap/fe/core/fpmExplorer/index.html#/buildingBlocks/table/treeTable Overview of Tree Table Building Block}\n * @mixes sap.fe.macros.Table\n * @augments sap.fe.macros.MacroAPI\n * @public\n */\n@defineBuildingBlock({\n\tname: \"TreeTable\",\n\tnamespace: \"sap.fe.macros.internal\",\n\tpublicNamespace: \"sap.fe.macros\",\n\treturnTypes: [\"sap.fe.macros.table.TableAPI\"]\n})\nexport default class TreeTableBlock extends TableBlock {\n\t/**\n\t * A set of options that can be configured.\n\t * @public\n\t */\n\t@blockAttribute({ type: \"string\", required: true, isPublic: true })\n\thierarchyQualifier!: string;\n\n\t/**\n\t * Defines the extension point to control whether a source node can be dropped on a specific parent node.<br/>\n\t * @public\n\t */\n\t@blockAttribute({ type: \"string\", isPublic: true })\n\tisMoveToPositionAllowed?: string;\n\n\t/**\n\t * Defines the extension point to control whether a source node can be copied to a specific parent node.<br/>\n\t * @public\n\t */\n\t@blockAttribute({ type: \"string\", isPublic: true })\n\tisCopyToPositionAllowed?: string;\n\n\t/**\n\t * Defines the extension point to control if a node can be dragged.<br/>\n\t * @public\n\t */\n\t@blockAttribute({ type: \"string\", isPublic: true })\n\tisNodeMovable?: string;\n\n\t/**\n\t * efines the extension point to control whether a node can be copied.<br/>\n\t * @public\n\t */\n\t@blockAttribute({ type: \"string\", isPublic: true })\n\tisNodeCopyable?: string;\n\t/**\n\t * A set of options that can be configured.\n\t * @public\n\t */\n\t@blockAttribute({\n\t\ttype: \"object\",\n\t\tunderlyingType: \"sap.fe.macros.table.TreeTableCreationOptions\",\n\t\tisPublic: true,\n\t\tvalidate: function (creationOptionsInput: TreeTableCreationOptions) {\n\t\t\tif (creationOptionsInput.name && ![\"NewPage\", \"Inline\", \"External\", \"CreationDialog\"].includes(creationOptionsInput.name)) {\n\t\t\t\tthrow new Error(`Allowed value ${creationOptionsInput.name} for creationMode does not match`);\n\t\t\t}\n\n\t\t\treturn creationOptionsInput;\n\t\t}\n\t})\n\tcreationMode: PropertiesOf<TreeTableCreationOptions> = {};\n\n\t/**\n\t * Defines the type of table that will be used by the building block to render the data. This setting is defined by the framework.\n\t *\n\t * Allowed value is `TreeTable`.\n\t * @public\n\t */\n\t@blockAttribute({ type: \"string\", isPublic: true, allowedValues: [\"TreeTable\"] })\n\treadonly type?: \"TreeTable\";\n\n\tconstructor(props: PropertiesOf<TreeTableBlock>, controlConfiguration: unknown, settings: TemplateProcessorSettings) {\n\t\tsuper(props, controlConfiguration, settings);\n\t}\n\n\tgetTableSettings(): Record<string, unknown> {\n\t\tconst tableSettings = super.getTableSettings();\n\t\tTableBlock.addSetting(tableSettings, \"type\", \"TreeTable\");\n\t\tTableBlock.addSetting(tableSettings, \"hierarchyQualifier\", this.hierarchyQualifier);\n\t\tTableBlock.addSetting(tableSettings, \"isMoveToPositionAllowed\", this.isMoveToPositionAllowed);\n\t\tTableBlock.addSetting(tableSettings, \"isCopyToPositionAllowed\", this.isCopyToPositionAllowed);\n\t\tTableBlock.addSetting(tableSettings, \"isNodeMovable\", this.isNodeMovable);\n\t\tTableBlock.addSetting(tableSettings, \"isNodeCopyable\", this.isNodeCopyable);\n\t\tconst creationMode = (tableSettings[\"creationMode\"] ?? {}) as Record<string, unknown>;\n\t\tTableBlock.addSetting(creationMode, \"createInPlace\", this.creationMode.createInPlace);\n\n\t\tif (this.creationMode.nodeType) {\n\t\t\t//Values is passed as Array into the XML but in the manifest it is a dictionary\n\t\t\t// so we need to transform the array into a dictionary\n\t\t\tTableBlock.addSetting(creationMode, \"nodeType\", {\n\t\t\t\tpropertyName: this.creationMode.nodeType.propertyName,\n\t\t\t\tvalues: Object.assign(\n\t\t\t\t\t{},\n\t\t\t\t\t...(this.creationMode.nodeType.values ?? []).map((value) => ({\n\t\t\t\t\t\t[value.key]: { label: value.label, creationFields: value.creationFields }\n\t\t\t\t\t}))\n\t\t\t\t)\n\t\t\t});\n\t\t}\n\n\t\tTableBlock.addSetting(creationMode, \"isCreateEnabled\", this.creationMode.isCreateEnabled);\n\t\tif (Object.entries(creationMode).length > 0) {\n\t\t\ttableSettings[\"creationMode\"] = creationMode;\n\t\t}\n\t\treturn tableSettings;\n\t}\n}\n"],"mappings":";;;;8pCAMA,IAaqBA,GAAcC,EANlCC,EAAoB,CACpBC,KAAM,YACNC,UAAW,yBACXC,gBAAiB,gBACjBC,YAAa,CAAC,kCACbC,EAMAC,EAAe,CAAEC,KAAM,SAAUC,SAAU,KAAMC,SAAU,OAAOC,EAOlEJ,EAAe,CAAEC,KAAM,SAAUE,SAAU,OAAOE,EAOlDL,EAAe,CAAEC,KAAM,SAAUE,SAAU,OAAOG,EAOlDN,EAAe,CAAEC,KAAM,SAAUE,SAAU,OAAOI,EAOlDP,EAAe,CAAEC,KAAM,SAAUE,SAAU,OAAOK,EAMlDR,EAAe,CACfC,KAAM,SACNQ,eAAgB,+CAChBN,SAAU,KACVO,SAAU,SAAUC,GACnB,GAAIA,EAAqBhB,OAAS,CAAC,UAAW,SAAU,WAAY,kBAAkBiB,SAASD,EAAqBhB,MAAO,CAC1H,MAAM,IAAIkB,MAAM,iBAAiBF,EAAqBhB,uCACvD,CAEA,OAAOgB,CACR,IACCG,EASDd,EAAe,CAAEC,KAAM,SAAUE,SAAU,KAAMY,cAAe,CAAC,eAAetB,EAAAuB,GAAAC,EAAA,SAAAC,GAGjF,SAAA1B,EAAY2B,EAAqCC,EAA+BC,GAAqC,IAAAC,EACpHA,EAAAJ,EAAAK,KAAAC,KAAML,EAAOC,EAAsBC,IAASG,KA9D7CC,EAAAH,EAAA,qBAAAI,EAAAJ,GAOAG,EAAAH,EAAA,0BAAAK,EAAAL,GAOAG,EAAAH,EAAA,0BAAAM,EAAAN,GAOAG,EAAAH,EAAA,gBAAAO,EAAAP,GAOAG,EAAAH,EAAA,iBAAAQ,EAAAR,GAMAG,EAAAH,EAAA,eAAAS,EAAAT,GAkBAG,EAAAH,EAAA,OAAAU,EAAAV,GAAA,OAAAA,CAWA,CAACW,EAAAzC,EAAA0C,EAAA1C,EAAA0B,GAAA,IAAAiB,EAAA3C,EAAA4C,UAAAD,EAEDE,iBAAA,SAAAA,IACC,MAAMC,EAAapB,EAAAkB,UAASC,iBAAgBd,KAAAC,MAC5Ce,EAAWC,WAAWF,EAAe,OAAQ,aAC7CC,EAAWC,WAAWF,EAAe,qBAAsBd,KAAKiB,oBAChEF,EAAWC,WAAWF,EAAe,0BAA2Bd,KAAKkB,yBACrEH,EAAWC,WAAWF,EAAe,0BAA2Bd,KAAKmB,yBACrEJ,EAAWC,WAAWF,EAAe,gBAAiBd,KAAKoB,eAC3DL,EAAWC,WAAWF,EAAe,iBAAkBd,KAAKqB,gBAC5D,MAAMC,EAAgBR,EAAc,iBAAmB,CAAC,EACxDC,EAAWC,WAAWM,EAAc,gBAAiBtB,KAAKsB,aAAaC,eAEvE,GAAIvB,KAAKsB,aAAaE,SAAU,CAG/BT,EAAWC,WAAWM,EAAc,WAAY,CAC/CG,aAAczB,KAAKsB,aAAaE,SAASC,aACzCC,OAAQC,OAAOC,OACd,CAAC,MACG5B,KAAKsB,aAAaE,SAASE,QAAU,IAAIG,IAAKC,IAAK,CACtD,CAACA,EAAMC,KAAM,CAAEC,MAAOF,EAAME,MAAOC,eAAgBH,EAAMG,qBAI7D,CAEAlB,EAAWC,WAAWM,EAAc,kBAAmBtB,KAAKsB,aAAaY,iBACzE,GAAIP,OAAOQ,QAAQb,GAAcc,OAAS,EAAG,CAC5CtB,EAAc,gBAAkBQ,CACjC,CACA,OAAOR,CACR,EAAC,OAAA9C,CAAA,CArCgF,CA3DtC+C,GAAUb,EAAAmC,EAAA5C,EAAAmB,UAAA,sBAAArC,GAAA,CAAA+D,aAAA,KAAAC,WAAA,KAAAC,SAAA,KAAAC,YAAA,OAAAtC,EAAAkC,EAAA5C,EAAAmB,UAAA,2BAAAhC,GAAA,CAAA0D,aAAA,KAAAC,WAAA,KAAAC,SAAA,KAAAC,YAAA,OAAArC,EAAAiC,EAAA5C,EAAAmB,UAAA,2BAAA/B,GAAA,CAAAyD,aAAA,KAAAC,WAAA,KAAAC,SAAA,KAAAC,YAAA,OAAApC,EAAAgC,EAAA5C,EAAAmB,UAAA,iBAAA9B,GAAA,CAAAwD,aAAA,KAAAC,WAAA,KAAAC,SAAA,KAAAC,YAAA,OAAAnC,EAAA+B,EAAA5C,EAAAmB,UAAA,kBAAA7B,GAAA,CAAAuD,aAAA,KAAAC,WAAA,KAAAC,SAAA,KAAAC,YAAA,OAAAlC,EAAA8B,EAAA5C,EAAAmB,UAAA,gBAAA5B,GAAA,CAAAsD,aAAA,KAAAC,WAAA,KAAAC,SAAA,KAAAC,YAAA,iBAmDE,CAAC,CAAC,IAAAjC,EAAA6B,EAAA5C,EAAAmB,UAAA,QAAAtB,GAAA,CAAAgD,aAAA,KAAAC,WAAA,KAAAC,SAAA,KAAAC,YAAA,OAAAhD,KAAAD,GAAAiB,EAAAzC,EAAA,OAAAyC,CAAA","ignoreList":[]}