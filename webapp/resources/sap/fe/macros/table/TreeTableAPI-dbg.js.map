{"version":3,"names":["TreeTableAPI","_dec","defineUI5Class","returnTypes","_dec2","property","type","required","_dec3","_dec4","_dec5","_dec6","_dec7","aggregation","defaultClass","TreeTableCreationOptions","_dec8","allowedValues","_class","_class2","_TableAPI","mSettings","_this","_len","arguments","length","others","Array","_key","call","_initializerDefineProperty","_descriptor","_descriptor2","_descriptor3","_descriptor4","_descriptor5","_descriptor6","_descriptor7","_inheritsLoose","_proto","prototype","getSettingsForManifest","tableSettings","TableAPI","addSetting","hierarchyQualifier","isMoveToPositionAllowed","isCopyToPositionAllowed","isNodeMovable","isNodeCopyable","creationMode","createInPlace","nodeType","propertyName","values","Object","assign","map","value","key","label","creationFields","isCreateEnabled","entries","_applyDecoratedDescriptor","configurable","enumerable","writable","initializer"],"sourceRoot":".","sources":["TreeTableAPI.ts"],"sourcesContent":["import { aggregation, defineUI5Class, property, type PropertiesOf } from \"sap/fe/base/ClassSupport\";\nimport { type TableType } from \"sap/fe/core/converters/controls/Common/Table\";\nimport { type $ControlSettings } from \"sap/ui/core/Control\";\nimport TableAPI from \"./TableAPI\";\nimport TreeTableCreationOptions from \"./TreeTableCreationOptions\";\n\n@defineUI5Class(\"sap.fe.macros.table.TreeTableAPI\", { returnTypes: [\"sap.fe.macros.MacroAPI\"] })\nclass TreeTableAPI extends TableAPI {\n\t/**\n\t * The hierarchy qualifier used in the RecursiveHierarchy annotation.\n\t */\n\t@property({ type: \"string\", required: true })\n\thierarchyQualifier!: string;\n\n\t/**\n\t * Defines the extension point to control whether a source node can be dropped on a specific parent node.<br/>\n\t */\n\t@property({ type: \"string\" })\n\tisMoveToPositionAllowed?: string;\n\n\t/**\n\t * Defines the extension point to control whether a source node can be copied to a specific parent node.<br/>\n\t */\n\t@property({ type: \"string\" })\n\tisCopyToPositionAllowed?: string;\n\n\t/**\n\t * Defines the extension point to control if a node can be dragged.<br/>\n\t */\n\t@property({ type: \"string\" })\n\tisNodeMovable?: string;\n\n\t/**\n\t * Defines the extension point to control whether a node can be copied.<br/>\n\t */\n\t@property({ type: \"string\" })\n\tisNodeCopyable?: string;\n\t/**\n\t * A set of options that can be configured.\n\t */\n\t@aggregation({ type: \"sap.fe.macros.table.TreeTableCreationOptions\", defaultClass: TreeTableCreationOptions })\n\tcreationMode?: TreeTableCreationOptions;\n\n\t@property({ type: \"string\", allowedValues: [\"TreeTable\"] })\n\ttype: TableType = \"TreeTable\";\n\n\tconstructor(mSettings?: PropertiesOf<TreeTableAPI> & { id?: string }, ...others: $ControlSettings[]) {\n\t\tsuper(mSettings, ...others);\n\t}\n\n\t/**\n\t * Add tree-specific settings in the manifest.\n\t * @returns Settings\n\t */\n\tgetSettingsForManifest(): Record<string, unknown> {\n\t\tconst tableSettings = super.getSettingsForManifest();\n\t\tTableAPI.addSetting(tableSettings, \"type\", \"TreeTable\");\n\t\tTableAPI.addSetting(tableSettings, \"hierarchyQualifier\", this.hierarchyQualifier);\n\t\tTableAPI.addSetting(tableSettings, \"isMoveToPositionAllowed\", this.isMoveToPositionAllowed);\n\t\tTableAPI.addSetting(tableSettings, \"isCopyToPositionAllowed\", this.isCopyToPositionAllowed);\n\t\tTableAPI.addSetting(tableSettings, \"isNodeMovable\", this.isNodeMovable);\n\t\tTableAPI.addSetting(tableSettings, \"isNodeCopyable\", this.isNodeCopyable);\n\t\tconst creationMode = (tableSettings[\"creationMode\"] ?? {}) as Record<string, unknown>;\n\t\tTableAPI.addSetting(creationMode, \"createInPlace\", this.creationMode?.createInPlace);\n\n\t\tif (this.creationMode?.nodeType) {\n\t\t\t//Values is passed as Array into the XML but in the manifest it is a dictionary\n\t\t\t// so we need to transform the array into a dictionary\n\t\t\tTableAPI.addSetting(creationMode, \"nodeType\", {\n\t\t\t\tpropertyName: this.creationMode.nodeType.propertyName,\n\t\t\t\tvalues: Object.assign(\n\t\t\t\t\t{},\n\t\t\t\t\t...(this.creationMode.nodeType.values ?? []).map((value) => ({\n\t\t\t\t\t\t[value.key]: { label: value.label, creationFields: value.creationFields }\n\t\t\t\t\t}))\n\t\t\t\t)\n\t\t\t});\n\t\t}\n\n\t\tTableAPI.addSetting(creationMode, \"isCreateEnabled\", this.creationMode?.isCreateEnabled);\n\t\tif (Object.entries(creationMode).length > 0) {\n\t\t\ttableSettings[\"creationMode\"] = creationMode;\n\t\t}\n\n\t\treturn tableSettings;\n\t}\n}\n\nexport default TreeTableAPI;\n"],"mappings":"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","ignoreList":[],"file":"TreeTableAPI-dbg.js"}