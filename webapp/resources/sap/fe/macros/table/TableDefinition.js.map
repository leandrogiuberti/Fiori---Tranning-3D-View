{"version":3,"file":"TableDefinition.js","names":["createTableDefinition","tableAPI","owner","_getOwner","metaModel","getMetaModel","Log","error","Error","metaPathContext","createBindingContext","getFullMetaPath","contextPathContext","contextPath","metaPath","contextObjectPath","getInvolvedDataModelObjects","initialConverterContext","MacroAPI","getConverterContext","appComponent","getAppComponent","models","preprocessorContext","visualizationPath","getVisualizationPath","tableSettings","getSettingsForManifest","extraManifestSettings","actions","columns","addSlotColumnsToExtraManifest","addSlotActionsToExtraManifest","extraParams","converterContext","associatedSelectionVariant","associatedSelectionVariantPath","svObjectPath","targetObject","visualizationDefinition","getDataVisualizationConfiguration","inMultiView","getRelativeAnnotationPath","fullyQualifiedName","getEntityType","getContextRelativeTargetObjectPath","isCondensedTableLayoutCompliant","useCondensedLayout","isMacroOrMultipleView","visualizations","find","viz","type","VisualizationType","Table","_exports","isAnnotationOfTerm","resolvedTarget","getEntityTypeAnnotation","getVisualizationsFromAnnotation","term","lineItemViz","visualization","annotationPath","removeUndefinedProperties","obj","Object","keys","forEach","key","undefined","customColumnDefinition","column","isColumn","isA","header","width","importance","horizontalAlign","widthIncludingColumnHeader","exportSettings","properties","tooltip","template","availability","required","anchor","placement","position","addActionToExtraManifest","action","command","enableOnSelect","visible","enabled","isAIOperation","priority","group","text","__noWrap","press","requiresSelection","afterExecution","enableAutoScroll","navigateToInstance","entries","length","defaultValuesFunction","actionsSettings","menu","map","subAction","defaultAction"],"sources":["./TableDefinition.ts"],"sourcesContent":["import {\n\tUIAnnotationTerms,\n\ttype LineItem,\n\ttype PresentationVariant,\n\ttype SelectionPresentationVariant,\n\ttype SelectionVariant,\n\ttype SelectionVariantType\n} from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport Log from \"sap/base/Log\";\nimport { type TemplateProcessorSettings } from \"sap/fe/core/buildingBlocks/templating/BuildingBlockTemplateProcessor\";\nimport type ConverterContext from \"sap/fe/core/converters/ConverterContext\";\nimport {\n\tVisualizationType,\n\ttype AvailabilityType,\n\ttype CustomDefinedTableColumn,\n\ttype CustomDefinedTableColumnForOverride,\n\ttype Importance,\n\ttype TableManifestConfiguration\n} from \"sap/fe/core/converters/ManifestSettings\";\nimport { getInvolvedDataModelObjects } from \"sap/fe/core/converters/MetaModelConverter\";\nimport { type PageContextPathTarget } from \"sap/fe/core/converters/TemplateConverter\";\nimport { type ChartVisualization } from \"sap/fe/core/converters/controls/Common/Chart\";\nimport {\n\tgetDataVisualizationConfiguration,\n\tgetVisualizationsFromAnnotation,\n\ttype VisualizationAndPath\n} from \"sap/fe/core/converters/controls/Common/DataVisualization\";\nimport { type TableVisualization } from \"sap/fe/core/converters/controls/Common/Table\";\nimport { type Placement } from \"sap/fe/core/converters/helpers/ConfigurableObject\";\nimport { isAnnotationOfTerm } from \"sap/fe/core/helpers/TypeGuards\";\nimport { getContextRelativeTargetObjectPath, type DataModelObjectPath } from \"sap/fe/core/templating/DataModelPathHelper\";\nimport MacroAPI from \"../MacroAPI\";\nimport type Action from \"./Action\";\nimport type ActionGroup from \"./ActionGroup\";\nimport type ActionOverride from \"./ActionOverride\";\nimport type Column from \"./Column\";\nimport type TableAPI from \"./TableAPI\";\n\nexport function createTableDefinition(tableAPI: TableAPI): TableVisualization {\n\tconst owner = tableAPI._getOwner();\n\tconst metaModel = owner?.getMetaModel();\n\tif (!owner || !metaModel) {\n\t\tLog.error(\"Cannot create a table definition for a TableAPI without an owner or a metamodel\");\n\t\tthrow new Error(\"Cannot create a table definition for a TableAPI without an owner or a metamodel\");\n\t}\n\tconst metaPathContext = metaModel.createBindingContext(tableAPI.getFullMetaPath());\n\tconst contextPathContext = metaModel.createBindingContext(tableAPI.contextPath);\n\tif (!metaPathContext || !contextPathContext) {\n\t\tLog.error(`Incorrect metaPath (${tableAPI.metaPath}) or contextPath (${tableAPI.contextPath}) for tableAPI`);\n\t\tthrow new Error(\"Incorrect metaPath or contextPath for tableAPI\");\n\t}\n\n\ttableAPI.contextObjectPath = getInvolvedDataModelObjects<LineItem | PresentationVariant | SelectionPresentationVariant>(\n\t\tmetaPathContext,\n\t\tcontextPathContext\n\t);\n\n\tconst initialConverterContext = MacroAPI.getConverterContext(tableAPI.contextObjectPath, tableAPI.contextPath, {\n\t\tappComponent: owner.getAppComponent(),\n\t\tmodels: owner.preprocessorContext?.models\n\t} as TemplateProcessorSettings);\n\tconst visualizationPath = getVisualizationPath(tableAPI.contextObjectPath, initialConverterContext);\n\n\tconst tableSettings = tableAPI.getSettingsForManifest();\n\n\tconst extraManifestSettings: TableManifestConfiguration = {\n\t\tactions: {},\n\t\tcolumns: {},\n\t\ttableSettings\n\t};\n\n\t// Process custom actions and columns\n\taddSlotColumnsToExtraManifest(tableAPI, extraManifestSettings);\n\taddSlotActionsToExtraManifest(tableAPI, extraManifestSettings);\n\n\tconst extraParams: Record<string, unknown> = {};\n\textraParams[visualizationPath] = extraManifestSettings;\n\tconst converterContext = MacroAPI.getConverterContext(\n\t\ttableAPI.contextObjectPath,\n\t\ttableAPI.contextPath,\n\t\t{\n\t\t\tappComponent: owner?.getAppComponent(),\n\t\t\tmodels: owner?.preprocessorContext?.models\n\t\t} as TemplateProcessorSettings,\n\t\textraParams\n\t);\n\n\tlet associatedSelectionVariant: SelectionVariantType | undefined;\n\tif (tableAPI.associatedSelectionVariantPath) {\n\t\tconst svObjectPath = getInvolvedDataModelObjects<SelectionVariant>(\n\t\t\tmetaModel.createBindingContext(tableAPI.associatedSelectionVariantPath)!,\n\t\t\tcontextPathContext\n\t\t);\n\t\tassociatedSelectionVariant = svObjectPath.targetObject;\n\t}\n\n\tconst visualizationDefinition = getDataVisualizationConfiguration(\n\t\t(tableAPI.inMultiView && tableAPI.contextObjectPath.targetObject\n\t\t\t? converterContext.getRelativeAnnotationPath(\n\t\t\t\t\ttableAPI.contextObjectPath.targetObject.fullyQualifiedName,\n\t\t\t\t\tconverterContext.getEntityType()\n\t\t\t  )\n\t\t\t: getContextRelativeTargetObjectPath(tableAPI.contextObjectPath)) as string,\n\t\tconverterContext,\n\t\t{\n\t\t\tisCondensedTableLayoutCompliant: tableAPI.useCondensedLayout,\n\t\t\tassociatedSelectionVariant,\n\t\t\tisMacroOrMultipleView: tableAPI.inMultiView ?? true\n\t\t}\n\t);\n\n\t// take the (first) Table visualization\n\treturn visualizationDefinition.visualizations.find(\n\t\t(viz: TableVisualization | ChartVisualization) => viz.type === VisualizationType.Table\n\t) as TableVisualization;\n}\n\n/**\n * Returns the annotation path pointing to the visualization annotation (LineItem).\n * @param contextObjectPath The datamodel object path for the table\n * @param converterContext The converter context\n * @returns The annotation path\n */\nfunction getVisualizationPath(\n\tcontextObjectPath: DataModelObjectPath<LineItem | PresentationVariant | SelectionPresentationVariant>,\n\tconverterContext: ConverterContext<PageContextPathTarget>\n): string {\n\tconst metaPath = getContextRelativeTargetObjectPath(contextObjectPath) as string;\n\n\t// fallback to default LineItem if metapath is not set\n\tif (!metaPath) {\n\t\tLog.error(`Missing meta path parameter for LineItem`);\n\t\treturn `@${UIAnnotationTerms.LineItem}`;\n\t}\n\n\tif (isAnnotationOfTerm<LineItem>(contextObjectPath.targetObject, UIAnnotationTerms.LineItem)) {\n\t\treturn metaPath; // MetaPath is already pointing to a LineItem\n\t}\n\t//Need to switch to the context related the PV or SPV\n\tconst resolvedTarget = converterContext.getEntityTypeAnnotation(metaPath);\n\n\tlet visualizations: VisualizationAndPath[] = [];\n\tif (\n\t\tisAnnotationOfTerm<SelectionPresentationVariant>(contextObjectPath.targetObject, UIAnnotationTerms.SelectionPresentationVariant) ||\n\t\tisAnnotationOfTerm<PresentationVariant>(contextObjectPath.targetObject, UIAnnotationTerms.PresentationVariant)\n\t) {\n\t\tvisualizations = getVisualizationsFromAnnotation(contextObjectPath.targetObject, metaPath, resolvedTarget.converterContext, true);\n\t} else {\n\t\tLog.error(`Bad metapath parameter for table : ${contextObjectPath.targetObject!.term}`);\n\t}\n\n\tconst lineItemViz = visualizations.find((viz) => {\n\t\treturn viz.visualization.term === UIAnnotationTerms.LineItem;\n\t});\n\n\tif (lineItemViz) {\n\t\treturn lineItemViz.annotationPath;\n\t} else {\n\t\t// fallback to default LineItem if annotation missing in PV\n\t\tLog.error(`Bad meta path parameter for LineItem: ${contextObjectPath.targetObject!.term}`);\n\t\treturn `@${UIAnnotationTerms.LineItem}`; // Fallback\n\t}\n}\n\n/**\n * Removes all properties with the value of undefined from the object.\n * @param obj The object to remove the undefined properties from\n */\nfunction removeUndefinedProperties(obj: Record<string, unknown>): void {\n\tObject.keys(obj).forEach((key) => {\n\t\tif (obj[key] === undefined) {\n\t\t\tdelete obj[key];\n\t\t}\n\t});\n}\n\n/**\n * Adds the slot columns to the extra manifest settings.\n * @param tableAPI\n * @param extraManifestSettings\n */\nfunction addSlotColumnsToExtraManifest(tableAPI: TableAPI, extraManifestSettings: TableManifestConfiguration): void {\n\tlet customColumnDefinition: CustomDefinedTableColumn | (CustomDefinedTableColumnForOverride & { key: string });\n\n\ttableAPI.columns?.forEach((column) => {\n\t\tconst isColumn = column.isA<Column>(\"sap.fe.macros.table.Column\");\n\t\tif (isColumn) {\n\t\t\tcustomColumnDefinition = {\n\t\t\t\theader: column.header,\n\t\t\t\twidth: column.width,\n\t\t\t\timportance: column.importance as Importance,\n\t\t\t\thorizontalAlign: column.horizontalAlign,\n\t\t\t\twidthIncludingColumnHeader: column.widthIncludingColumnHeader,\n\t\t\t\texportSettings: column.exportSettings,\n\t\t\t\tproperties: column.properties,\n\t\t\t\ttooltip: column.tooltip,\n\t\t\t\ttemplate: column.template!,\n\t\t\t\tavailability: column.availability as AvailabilityType,\n\t\t\t\trequired: column.required,\n\t\t\t\ttype: \"Slot\"\n\t\t\t};\n\t\t} else {\n\t\t\tcustomColumnDefinition = {\n\t\t\t\tkey: column.key,\n\t\t\t\twidth: column.width,\n\t\t\t\timportance: column.importance as Importance,\n\t\t\t\thorizontalAlign: column.horizontalAlign,\n\t\t\t\twidthIncludingColumnHeader: column.widthIncludingColumnHeader,\n\t\t\t\texportSettings: column.exportSettings,\n\t\t\t\tavailability: column.availability as AvailabilityType\n\t\t\t};\n\t\t}\n\n\t\t// Remove all undefined properties, so that they don't erase what is set in the manifest\n\t\t// (necessary because manifest-based columns are transformed into slot columns and we don't copy\n\t\t// all their properties in the XML)\n\t\tremoveUndefinedProperties(customColumnDefinition);\n\n\t\tif (isColumn && (column.anchor || column.placement)) {\n\t\t\tcustomColumnDefinition.position = {\n\t\t\t\tanchor: column.anchor,\n\t\t\t\tplacement: (column.placement ?? \"After\") as Placement\n\t\t\t};\n\t\t}\n\n\t\textraManifestSettings.columns![column.key] = customColumnDefinition;\n\t});\n}\n\n/**\n * Adds the slot actions to the extra manifest settings.\n * @param tableAPI\n * @param extraManifestSettings\n */\nfunction addSlotActionsToExtraManifest(tableAPI: TableAPI, extraManifestSettings: TableManifestConfiguration): void {\n\tfunction addActionToExtraManifest(action: Action | ActionOverride): void {\n\t\tconst actions = extraManifestSettings.actions!;\n\t\tconst key = action.key;\n\t\tactions[key] = {\n\t\t\tposition: {\n\t\t\t\tplacement: (action.placement ?? \"After\") as Placement,\n\t\t\t\tanchor: action.anchor\n\t\t\t},\n\t\t\tcommand: action.command,\n\t\t\tenableOnSelect: action.enableOnSelect,\n\t\t\tvisible: action.visible,\n\t\t\tenabled: action.enabled,\n\t\t\tisAIOperation: action.isAIOperation,\n\t\t\tpriority: action.priority,\n\t\t\tgroup: action.group ?? 0 // Default group to 0 if not defined\n\t\t};\n\t\tif (action.isA<Action>(\"sap.fe.macros.table.Action\")) {\n\t\t\tactions[key] = {\n\t\t\t\t...actions[key],\n\t\t\t\ttext: action.text,\n\t\t\t\t__noWrap: true,\n\t\t\t\tpress: \"some handler\", // The real handler will be triggered by firing the event on the Action object\n\t\t\t\trequiresSelection: action.requiresSelection\n\t\t\t};\n\t\t\treturn;\n\t\t}\n\t\tconst afterExecution = {\n\t\t\tenableAutoScroll: action[\"enableAutoScroll\"],\n\t\t\tnavigateToInstance: action[\"navigateToInstance\"]\n\t\t};\n\t\tremoveUndefinedProperties(afterExecution);\n\t\tactions[key] = {\n\t\t\t...actions[key],\n\t\t\tafterExecution: Object.entries(afterExecution).length ? afterExecution : undefined,\n\t\t\tdefaultValuesFunction: action.defaultValuesFunction\n\t\t};\n\t}\n\n\ttableAPI.actions?.forEach((action) => {\n\t\tif (action.isA<Action>(\"sap.fe.macros.table.Action\") || action.isA<ActionOverride>(\"sap.fe.macros.table.ActionOverride\")) {\n\t\t\t// Action or ActionOverride\n\t\t\taddActionToExtraManifest(action);\n\t\t} else {\n\t\t\tconst actionsSettings = extraManifestSettings.actions!;\n\t\t\tconst key = action.key;\n\t\t\tactionsSettings[key] = {\n\t\t\t\tposition: {\n\t\t\t\t\tplacement: (action.placement ?? \"After\") as Placement,\n\t\t\t\t\tanchor: action.anchor\n\t\t\t\t},\n\t\t\t\tmenu: action.actions.map((subAction) => subAction.key)\n\t\t\t};\n\t\t\tif (action.isA<ActionGroup>(\"sap.fe.macros.table.ActionGroup\")) {\n\t\t\t\tactionsSettings[key] = {\n\t\t\t\t\t...actionsSettings[key],\n\t\t\t\t\ttext: action.text,\n\t\t\t\t\tdefaultAction: action.defaultAction,\n\t\t\t\t\t__noWrap: true\n\t\t\t\t};\n\t\t\t}\n\t\t\taction.actions.forEach((subAction) => {\n\t\t\t\taddActionToExtraManifest(subAction);\n\t\t\t});\n\t\t}\n\t});\n}\n"],"mappings":"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","ignoreList":[]}