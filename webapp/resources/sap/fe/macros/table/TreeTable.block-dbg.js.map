{"version":3,"names":["TreeTableBlock","_dec","defineBuildingBlock","name","namespace","publicNamespace","returnTypes","_dec2","blockAttribute","type","required","isPublic","_dec3","_dec4","_dec5","_dec6","_dec7","underlyingType","validate","creationOptionsInput","includes","Error","_dec8","allowedValues","_class","_class2","_TableBlock","props","controlConfiguration","settings","_this","call","_initializerDefineProperty","_descriptor","_descriptor2","_descriptor3","_descriptor4","_descriptor5","_descriptor6","_descriptor7","_exports","_inheritsLoose","_proto","prototype","getTableSettings","tableSettings","TableBlock","addSetting","hierarchyQualifier","isMoveToPositionAllowed","isCopyToPositionAllowed","isNodeMovable","isNodeCopyable","creationMode","createInPlace","nodeType","propertyName","values","Object","assign","map","value","key","label","creationFields","isCreateEnabled","entries","length","_applyDecoratedDescriptor","configurable","enumerable","writable","initializer"],"sourceRoot":".","sources":["TreeTable.block.tsx"],"sourcesContent":["import type { PropertiesOf } from \"sap/fe/base/ClassSupport\";\nimport { blockAttribute, defineBuildingBlock } from \"sap/fe/core/buildingBlocks/templating/BuildingBlockSupport\";\nimport type { TemplateProcessorSettings } from \"sap/fe/core/buildingBlocks/templating/BuildingBlockTemplateProcessor\";\nimport TableBlock from \"./Table.block\";\nimport type TreeTableCreationOptions from \"./TreeTableCreationOptions\";\n\n/**\n * Building block used to create a tree table based on the metadata provided by OData V4.\n * {@link demo:sap/fe/core/fpmExplorer/index.html#/buildingBlocks/table/treeTable Overview of Tree Table Building Block}\n * @mixes sap.fe.macros.Table\n * @augments sap.fe.macros.MacroAPI\n * @public\n */\n@defineBuildingBlock({\n\tname: \"TreeTable\",\n\tnamespace: \"sap.fe.macros.internal\",\n\tpublicNamespace: \"sap.fe.macros\",\n\treturnTypes: [\"sap.fe.macros.table.TableAPI\"]\n})\nexport default class TreeTableBlock extends TableBlock {\n\t/**\n\t * A set of options that can be configured.\n\t * @public\n\t */\n\t@blockAttribute({ type: \"string\", required: true, isPublic: true })\n\thierarchyQualifier!: string;\n\n\t/**\n\t * Defines the extension point to control whether a source node can be dropped on a specific parent node.<br/>\n\t * @public\n\t */\n\t@blockAttribute({ type: \"string\", isPublic: true })\n\tisMoveToPositionAllowed?: string;\n\n\t/**\n\t * Defines the extension point to control whether a source node can be copied to a specific parent node.<br/>\n\t * @public\n\t */\n\t@blockAttribute({ type: \"string\", isPublic: true })\n\tisCopyToPositionAllowed?: string;\n\n\t/**\n\t * Defines the extension point to control if a node can be dragged.<br/>\n\t * @public\n\t */\n\t@blockAttribute({ type: \"string\", isPublic: true })\n\tisNodeMovable?: string;\n\n\t/**\n\t * efines the extension point to control whether a node can be copied.<br/>\n\t * @public\n\t */\n\t@blockAttribute({ type: \"string\", isPublic: true })\n\tisNodeCopyable?: string;\n\t/**\n\t * A set of options that can be configured.\n\t * @public\n\t */\n\t@blockAttribute({\n\t\ttype: \"object\",\n\t\tunderlyingType: \"sap.fe.macros.table.TreeTableCreationOptions\",\n\t\tisPublic: true,\n\t\tvalidate: function (creationOptionsInput: TreeTableCreationOptions) {\n\t\t\tif (creationOptionsInput.name && ![\"NewPage\", \"Inline\", \"External\", \"CreationDialog\"].includes(creationOptionsInput.name)) {\n\t\t\t\tthrow new Error(`Allowed value ${creationOptionsInput.name} for creationMode does not match`);\n\t\t\t}\n\n\t\t\treturn creationOptionsInput;\n\t\t}\n\t})\n\tcreationMode: PropertiesOf<TreeTableCreationOptions> = {};\n\n\t/**\n\t * Defines the type of table that will be used by the building block to render the data. This setting is defined by the framework.\n\t *\n\t * Allowed value is `TreeTable`.\n\t * @public\n\t */\n\t@blockAttribute({ type: \"string\", isPublic: true, allowedValues: [\"TreeTable\"] })\n\treadonly type?: \"TreeTable\";\n\n\tconstructor(props: PropertiesOf<TreeTableBlock>, controlConfiguration: unknown, settings: TemplateProcessorSettings) {\n\t\tsuper(props, controlConfiguration, settings);\n\t}\n\n\tgetTableSettings(): Record<string, unknown> {\n\t\tconst tableSettings = super.getTableSettings();\n\t\tTableBlock.addSetting(tableSettings, \"type\", \"TreeTable\");\n\t\tTableBlock.addSetting(tableSettings, \"hierarchyQualifier\", this.hierarchyQualifier);\n\t\tTableBlock.addSetting(tableSettings, \"isMoveToPositionAllowed\", this.isMoveToPositionAllowed);\n\t\tTableBlock.addSetting(tableSettings, \"isCopyToPositionAllowed\", this.isCopyToPositionAllowed);\n\t\tTableBlock.addSetting(tableSettings, \"isNodeMovable\", this.isNodeMovable);\n\t\tTableBlock.addSetting(tableSettings, \"isNodeCopyable\", this.isNodeCopyable);\n\t\tconst creationMode = (tableSettings[\"creationMode\"] ?? {}) as Record<string, unknown>;\n\t\tTableBlock.addSetting(creationMode, \"createInPlace\", this.creationMode.createInPlace);\n\n\t\tif (this.creationMode.nodeType) {\n\t\t\t//Values is passed as Array into the XML but in the manifest it is a dictionary\n\t\t\t// so we need to transform the array into a dictionary\n\t\t\tTableBlock.addSetting(creationMode, \"nodeType\", {\n\t\t\t\tpropertyName: this.creationMode.nodeType.propertyName,\n\t\t\t\tvalues: Object.assign(\n\t\t\t\t\t{},\n\t\t\t\t\t...(this.creationMode.nodeType.values ?? []).map((value) => ({\n\t\t\t\t\t\t[value.key]: { label: value.label, creationFields: value.creationFields }\n\t\t\t\t\t}))\n\t\t\t\t)\n\t\t\t});\n\t\t}\n\n\t\tTableBlock.addSetting(creationMode, \"isCreateEnabled\", this.creationMode.isCreateEnabled);\n\t\tif (Object.entries(creationMode).length > 0) {\n\t\t\ttableSettings[\"creationMode\"] = creationMode;\n\t\t}\n\t\treturn tableSettings;\n\t}\n}\n"],"mappings":"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","ignoreList":[],"file":"TreeTable.block-dbg.js"}