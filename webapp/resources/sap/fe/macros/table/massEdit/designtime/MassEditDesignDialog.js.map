{"version":3,"file":"MassEditDesignDialog.js","names":["MassEditDesignDialog","tableAPI","this","massEditDialogHelper","getMassEditDialogHelper","popup","createDialog","selectionPanel","getPanels","dialogPromise","Promise","resolve","reject","_fnResolve","_fnReject","_exports","_proto","prototype","_jsx","Popup","title","Library","getResourceBundleFor","getText","mode","panels","SelectionPanel","enableCount","showHeader","close","onClose","bind","getPopup","openDialog","async","owner","selectedFields","setData","open","getDependents","find","control","isA","addStyleClass","displayedFields","Object","assign","split","map","fieldName","entityFields","generateEntityFieldsProperties","p13nData","field","visible","propertyInfo","relativePath","name","label","setP13nData","event","getParameter","getP13nData","item","join","undefined","destroy"],"sources":["./MassEditDesignDialog.tsx"],"sourcesContent":["import type ResourceBundle from \"sap/base/i18n/ResourceBundle\";\nimport type TableAPI from \"sap/fe/macros/table/TableAPI\";\nimport type Dialog from \"sap/m/Dialog\";\nimport type { Popup$CloseEvent } from \"sap/m/p13n/Popup\";\nimport Popup from \"sap/m/p13n/Popup\";\nimport SelectionPanel from \"sap/m/p13n/SelectionPanel\";\nimport type Control from \"sap/ui/core/Control\";\nimport Library from \"sap/ui/core/Lib\";\nimport type MassEditDialogHelper from \"../MassEditDialogHelper\";\n\nexport default class MassEditDesignDialog {\n\tprivate massEditDialogHelper: MassEditDialogHelper;\n\n\tprivate popup: Popup;\n\n\tprivate readonly selectionPanel: SelectionPanel;\n\n\tprivate _fnResolve!: (value: string) => void;\n\n\tprivate _fnReject!: (error: unknown) => void;\n\n\tprivate readonly dialogPromise: Promise<string>;\n\n\tconstructor(private tableAPI: TableAPI) {\n\t\tthis.massEditDialogHelper = this.tableAPI.getMassEditDialogHelper() as MassEditDialogHelper;\n\t\tthis.popup = this.createDialog();\n\n\t\tthis.selectionPanel = this.popup.getPanels()[0] as SelectionPanel;\n\t\tthis.dialogPromise = new Promise((resolve, reject) => {\n\t\t\tthis._fnResolve = resolve;\n\t\t\tthis._fnReject = reject;\n\t\t});\n\t}\n\n\t/**\n\t * Creates the dialog for the mass edit adaptation.\n\t * @returns The popup\n\t */\n\tprivate createDialog(): Popup {\n\t\treturn (\n\t\t\t<Popup\n\t\t\t\ttitle={(Library.getResourceBundleFor(\"sap.fe.macros\") as ResourceBundle).getText(\"C_MASS_EDIT_DESIGN_DIALOG_TITLE\")}\n\t\t\t\tmode=\"Dialog\"\n\t\t\t\tpanels={[<SelectionPanel title=\"Columns\" enableCount=\"true\" showHeader=\"true\" />]}\n\t\t\t\tclose={this.onClose.bind(this)}\n\t\t\t/>\n\t\t);\n\t}\n\n\t/**\n\t * Gets the dialog for the mass edit adaptation.\n\t * @returns The popup\n\t */\n\tgetPopup(): Popup {\n\t\treturn this.popup;\n\t}\n\n\t/**\n\t * Opens the dialog for the mass edit adaptation.\n\t * @param owner The owner of the dialog\n\t * @param selectedFields The selected fields\n\t * @returns The new selected fields\n\t */\n\tasync openDialog(owner: Control, selectedFields: string): Promise<string> {\n\t\tawait this.setData(selectedFields);\n\t\tthis.popup.open(owner);\n\t\t(this.popup.getDependents().find((control) => control.isA<Dialog>(\"sap.m.Dialog\")) as Dialog | undefined)?.addStyleClass(\n\t\t\t\"sapUiRTABorder\"\n\t\t);\n\t\treturn this.dialogPromise;\n\t}\n\n\t/**\n\t * Sets the p13n data for the dialog.\n\t * @param selectedFields The selected fields\n\t */\n\tprivate async setData(selectedFields: string): Promise<void> {\n\t\tconst displayedFields = Object.assign({}, ...selectedFields.split(\",\").map((fieldName) => ({ [fieldName]: true })));\n\t\tconst entityFields = await this.massEditDialogHelper.generateEntityFieldsProperties();\n\t\tconst p13nData = entityFields.map((field) => {\n\t\t\treturn {\n\t\t\t\tvisible: !!displayedFields[field.propertyInfo.relativePath],\n\t\t\t\tname: field.propertyInfo.relativePath,\n\t\t\t\tlabel: field.label\n\t\t\t};\n\t\t});\n\t\tthis.selectionPanel.setP13nData(p13nData);\n\t}\n\n\t/**\n\t * Closes and destroys the dialog.\n\t * @param event The close event\n\t */\n\tprivate onClose(event: Popup$CloseEvent): void {\n\t\tif (event.getParameter(\"reason\") === \"Ok\") {\n\t\t\tthis._fnResolve(\n\t\t\t\tthis.selectionPanel\n\t\t\t\t\t.getP13nData(true)\n\t\t\t\t\t.map((item) => item.name)\n\t\t\t\t\t.join(\",\")\n\t\t\t);\n\t\t} else {\n\t\t\tthis._fnReject(undefined);\n\t\t}\n\t\tif (this.popup) {\n\t\t\tthis.popup.destroy();\n\t\t}\n\t}\n}\n"],"mappings":";;;;2JAUqBA,EAAoB,WAaxC,SAAAA,EAAoBC,GAAoBC,KAApBD,WACnBC,KAAKC,qBAAuBD,KAAKD,SAASG,0BAC1CF,KAAKG,MAAQH,KAAKI,eAElBJ,KAAKK,eAAiBL,KAAKG,MAAMG,YAAY,GAC7CN,KAAKO,cAAgB,IAAIC,QAAQ,CAACC,EAASC,KAC1CV,KAAKW,WAAaF,EAClBT,KAAKY,UAAYF,GAEnB,CAEAG,EAAAf,EAAA,IAAAgB,EAAAhB,EAAAiB,UAAAD,EAIQV,aAAR,SAAQA,IACP,OACCY,EAACC,EAAK,CACLC,MAAQC,EAAQC,qBAAqB,iBAAoCC,QAAQ,mCACjFC,KAAK,SACLC,OAAQ,CAACP,EAACQ,EAAc,CAACN,MAAM,UAAUO,YAAY,OAAOC,WAAW,UACvEC,MAAO3B,KAAK4B,QAAQC,KAAK7B,OAG5B,EAEAc,EAIAgB,SAAA,SAAAA,IACC,OAAO9B,KAAKG,KACb,EAEAW,EAMMiB,WAANC,eAAMD,EAAWE,EAAgBC,SAC1BlC,KAAKmC,QAAQD,GACnBlC,KAAKG,MAAMiC,KAAKH,GACfjC,KAAKG,MAAMkC,gBAAgBC,KAAMC,GAAYA,EAAQC,IAAY,kBAAyCC,cAC1G,kBAED,OAAOzC,KAAKO,aACb,EAEAO,EAIcqB,QAAdH,eAAcG,EAAQD,GACrB,MAAMQ,EAAkBC,OAAOC,OAAO,CAAC,KAAMV,EAAeW,MAAM,KAAKC,IAAKC,IAAS,CAAQA,CAACA,GAAY,SAC1G,MAAMC,QAAqBhD,KAAKC,qBAAqBgD,iCACrD,MAAMC,EAAWF,EAAaF,IAAKK,IAC3B,CACNC,UAAWV,EAAgBS,EAAME,aAAaC,cAC9CC,KAAMJ,EAAME,aAAaC,aACzBE,MAAOL,EAAMK,SAGfxD,KAAKK,eAAeoD,YAAYP,EACjC,EAEApC,EAIQc,QAAR,SAAQA,EAAQ8B,GACf,GAAIA,EAAMC,aAAa,YAAc,KAAM,CAC1C3D,KAAKW,WACJX,KAAKK,eACHuD,YAAY,MACZd,IAAKe,GAASA,EAAKN,MACnBO,KAAK,KAET,KAAO,CACN9D,KAAKY,UAAUmD,UAChB,CACA,GAAI/D,KAAKG,MAAO,CACfH,KAAKG,MAAM6D,SACZ,CACD,EAAC,OAAAlE,CAAA,CAjGuC,GAiGvCe,EAAAf,EAAA,OAAAe,CAAA","ignoreList":[]}