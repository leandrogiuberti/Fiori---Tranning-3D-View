{"version":3,"names":["MassEditSideEffects","massEditDialog","immediateActionExecution","Set","referenceRowContext","contexts","table","view","CommonUtils","getTargetView","sideEffectsDefinition","generateSideEffectsDefinition","_exports","_proto","prototype","refreshDescription","fieldControl","context","groupId","propertyPath","properties","descriptionPath","getAppComponent","getSideEffectsService","requestSideEffects","includes","$NavigationPropertyPath","substring","lastIndexOf","sideEffectsMap","getSideEffectsMap","tableDefinition","getParent","getTableDefinition","key","keySideEffects","sideEffectsName","sideEffectsProperties","sideEffectsEntityType","split","sideEffectsContext","getController","_sideEffects","getContextForSideEffects","massSideEffectsProperties","getSpecificTargetsAndActions","sideEffects","getModel","getMetaModel","getContext","annotation","collection","massSideEffectsExecutionProperties","onRowContext","push","tableRefresh","isRequested","getSideEffectsInformation","oDataSideEffect","entitySetContext","sideEffectsService","metaModel","targetProperties","targetEntities","actionName","isControlSideEffects","triggerAction","undefined","immediateTargets","entitySetDataModelPath","getInvolvedDataModelObjects","sideEffectsDataModelPath","getMetaPath","getPath","parentEntitySet","getTargetEntitySetInfo","isRequestingTableEntityRefresh","tableTargetEntity","reduce","entities","targetEntity","target","targetEntityType","resolvePath","isNavigationProperty","targetType","entityType","targetProperty","propertyDataModelPath","enhanceDataModelPath","isProperty","targetObject","isImmediateTriggerAction","TableHelper","_isStaticAction","getObject","sideEffectsInformation","deferredTargets","filter","immediate","targets","deferred","model","metaPath","bindingContext","baseSideEffectsMapArray","appComponent","fieldProperties","field","visible","map","property","propertyInfo","relativePath","unitOrCurrencyPropertyPath","flat","propertyDataModel","fieldGroupIds","computeFieldGroupIds","fullyQualifiedName","getSideEffectsMapForFieldGroups","executeImmediateSideEffects","rowContext","sideEffectsPromises","controller","length","action","contextPath","isActionAlreadyTriggered","has","add","unregisterFailedSideEffects","allFailedSideEffects","getRegisteredFailedRequests","getBindingContext","failedSideEffects","unregisterFailedSideEffectsForAContext","failedSideEffect","Promise","allSettled","executeDeferredSideEffects","updatedFields","genericSideEffects","genericTargetEntity","sideEffectsExecuted","sourceProperty","Object","keys","propertyName"],"sourceRoot":".","sources":["MassEditSideEffects.ts"],"sourcesContent":["import type { Property } from \"@sap-ux/vocabularies-types\";\nimport type { FEView } from \"sap/fe/core/BaseController\";\nimport CommonUtils from \"sap/fe/core/CommonUtils\";\nimport type { MassEditFieldSideEffectDictionary } from \"sap/fe/core/controllerextensions/SideEffects\";\nimport { getInvolvedDataModelObjects } from \"sap/fe/core/converters/MetaModelConverter\";\nimport { isNavigationProperty, isProperty } from \"sap/fe/core/helpers/TypeGuards\";\nimport type {\n\tSideEffectsEntityType,\n\tSideEffectsService,\n\tSideEffectsTarget,\n\tSideEffectsType\n} from \"sap/fe/core/services/SideEffectsServiceFactory\";\nimport { enhanceDataModelPath, getTargetEntitySetInfo } from \"sap/fe/core/templating/DataModelPathHelper\";\nimport type TableAPI from \"sap/fe/macros/table/TableAPI\";\nimport TableHelper from \"sap/fe/macros/table/TableHelper\";\nimport type Table from \"sap/ui/mdc/Table\";\nimport type Context from \"sap/ui/model/Context\";\nimport type ODataV4Context from \"sap/ui/model/odata/v4/Context\";\nimport type ODataModel from \"sap/ui/model/odata/v4/ODataModel\";\nimport type MassEditDialog from \"./MassEditDialog\";\nimport type MassEditField from \"./MassEditField\";\n\ntype MassEditSideEffectsProperties = {\n\tsideEffects: SideEffectsType;\n\ttableRefresh: {\n\t\tisRequested: boolean;\n\t\ttargetEntity?: SideEffectsEntityType;\n\t};\n\timmediate: { targets: SideEffectsTarget[]; triggerAction: string | undefined };\n\tdeferred: { targets: SideEffectsTarget[]; triggerAction: string | undefined };\n};\n\nexport type MassEditSideEffectsExecutionProperties = MassEditSideEffectsProperties & { onRowContext: boolean };\n\nexport default class MassEditSideEffects {\n\tpublic readonly sideEffectsDefinition: Record<string, MassEditSideEffectsExecutionProperties[]>;\n\n\tprivate readonly view: FEView;\n\n\tprivate readonly table: Table;\n\n\tprivate readonly referenceRowContext: ODataV4Context;\n\n\tprivate readonly immediateActionExecution: Set<string> = new Set();\n\n\tconstructor(private massEditDialog: MassEditDialog) {\n\t\tthis.massEditDialog = massEditDialog;\n\t\tthis.referenceRowContext = massEditDialog.contexts[0];\n\t\tthis.table = massEditDialog.table;\n\t\tthis.view = CommonUtils.getTargetView(this.table);\n\t\tthis.sideEffectsDefinition = this.generateSideEffectsDefinition();\n\t}\n\n\t/**\n\t * Manages the refresh of the description\n\t * When a field is changed and this field has a text arrangement annotation, then description must be updated by the SideEffect\n\t * if no SideEffect is configured to refresh the entire table (named genericField).\n\t * @param fieldControl The field\n\t * @param context The row context\n\t * @param groupId The batch group id\n\t * @returns Promise related to the SideEffects.\n\t */\n\tasync refreshDescription(fieldControl: MassEditField, context: ODataV4Context, groupId: string): Promise<void> {\n\t\tconst propertyPath = fieldControl.properties.descriptionPath;\n\t\tif (propertyPath && !this.sideEffectsDefinition[\"genericField\"]) {\n\t\t\treturn CommonUtils.getAppComponent(this.table)\n\t\t\t\t.getSideEffectsService()\n\t\t\t\t.requestSideEffects(\n\t\t\t\t\tpropertyPath.includes(\"/\")\n\t\t\t\t\t\t? [{ $NavigationPropertyPath: propertyPath.substring(0, propertyPath.lastIndexOf(\"/\")) }]\n\t\t\t\t\t\t: [propertyPath],\n\t\t\t\t\tcontext,\n\t\t\t\t\tgroupId\n\t\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * Generates the SideEffects execution definition\n\t * This dictionary is used by the dialog to execute immediate and deferred SideEffects on the relevant contexts.\n\t * @returns The SideEffects execution properties.\n\t */\n\tgenerateSideEffectsDefinition(): Record<string, MassEditSideEffectsExecutionProperties[]> {\n\t\tconst sideEffectsMap = this.getSideEffectsMap();\n\t\tconst sideEffectsDefinition: Record<string, MassEditSideEffectsExecutionProperties[]> = {};\n\t\tconst tableDefinition = (this.table.getParent() as TableAPI).getTableDefinition();\n\t\tconst view = CommonUtils.getTargetView(this.table);\n\n\t\tfor (const key in sideEffectsMap) {\n\t\t\tconst keySideEffects = sideEffectsMap[key];\n\t\t\tfor (const sideEffectsName in keySideEffects) {\n\t\t\t\tconst sideEffectsProperties = keySideEffects[sideEffectsName];\n\t\t\t\tconst sideEffectsEntityType = sideEffectsName.split(\"#\")[0];\n\t\t\t\tconst sideEffectsContext = view\n\t\t\t\t\t.getController()\n\t\t\t\t\t._sideEffects.getContextForSideEffects(this.referenceRowContext, sideEffectsEntityType);\n\t\t\t\tif (sideEffectsContext) {\n\t\t\t\t\tconst massSideEffectsProperties = this.getSpecificTargetsAndActions(\n\t\t\t\t\t\tsideEffectsProperties.sideEffects,\n\t\t\t\t\t\tsideEffectsContext,\n\t\t\t\t\t\t(this.table.getModel() as ODataModel).getMetaModel().getContext(tableDefinition.annotation.collection),\n\t\t\t\t\t\tCommonUtils.getAppComponent(this.table).getSideEffectsService()\n\t\t\t\t\t);\n\t\t\t\t\tconst massSideEffectsExecutionProperties = {\n\t\t\t\t\t\t...massSideEffectsProperties,\n\t\t\t\t\t\t...{ onRowContext: this.referenceRowContext === sideEffectsContext }\n\t\t\t\t\t};\n\t\t\t\t\tsideEffectsDefinition[key] = sideEffectsDefinition[key] || [];\n\t\t\t\t\tsideEffectsDefinition[key].push(massSideEffectsExecutionProperties);\n\t\t\t\t\tif (!sideEffectsDefinition[\"genericField\"] && massSideEffectsProperties.tableRefresh.isRequested) {\n\t\t\t\t\t\tsideEffectsDefinition[\"genericField\"] = [massSideEffectsExecutionProperties];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn sideEffectsDefinition;\n\t}\n\n\t/**\n\t * Gets the SideEffects information\n\t *  This information is\n\t * - immediateTargets: contains the immediate targets which must be executed on each row\n\t * - isImmediateTriggerAction: is the action is immediate or deferred\n\t * - isRequestingTableEntityRefresh: is the refresh is requested on the table entity by a TargetEntity\n\t * - tableTargetEntity: the target entity which requests the refresh on the table.\n\t * @param oDataSideEffect The SideEffect\n\t * @param sideEffectsContext The context where the SideEffects is executed\n\t * @param entitySetContext  The entitySet context of the dialog\n\t * @param sideEffectsService The SideEffects service\n\t * @returns The SideEffects information.\n\t */\n\tprivate getSideEffectsInformation(\n\t\toDataSideEffect: SideEffectsType,\n\t\tsideEffectsContext: ODataV4Context,\n\t\tentitySetContext: Context,\n\t\tsideEffectsService: SideEffectsService\n\t): {\n\t\timmediateTargets: SideEffectsTarget[];\n\t\tisImmediateTriggerAction: boolean;\n\t\tisRequestingTableEntityRefresh: boolean;\n\t\ttableTargetEntity: SideEffectsEntityType | undefined;\n\t} {\n\t\tconst metaModel = entitySetContext.getModel();\n\t\tconst targetProperties = oDataSideEffect.targetProperties ?? [];\n\t\tconst targetEntities = oDataSideEffect.targetEntities ?? [];\n\t\tconst actionName = !sideEffectsService.isControlSideEffects(oDataSideEffect) ? oDataSideEffect.triggerAction : undefined;\n\t\tlet immediateTargets: SideEffectsTarget[] = [];\n\t\tconst entitySetDataModelPath = getInvolvedDataModelObjects(entitySetContext);\n\t\tconst sideEffectsDataModelPath = getInvolvedDataModelObjects(\n\t\t\tmetaModel.getContext(metaModel.getMetaPath(sideEffectsContext.getPath()))\n\t\t);\n\t\tconst { parentEntitySet } = getTargetEntitySetInfo(entitySetDataModelPath);\n\t\tlet isRequestingTableEntityRefresh = false;\n\t\tlet tableTargetEntity: SideEffectsEntityType | undefined;\n\n\t\timmediateTargets = targetEntities.reduce((entities: SideEffectsEntityType[], targetEntity) => {\n\t\t\tconst target = sideEffectsDataModelPath.targetEntityType.resolvePath(targetEntity.$NavigationPropertyPath);\n\t\t\tif (isNavigationProperty(target)) {\n\t\t\t\tif (target.targetType == entitySetDataModelPath.targetEntityType) {\n\t\t\t\t\t//The refresh is requested on the table entity\n\t\t\t\t\tisRequestingTableEntityRefresh = true;\n\t\t\t\t\ttableTargetEntity = targetEntity;\n\t\t\t\t\treturn entities;\n\t\t\t\t}\n\t\t\t\tif (sideEffectsDataModelPath.targetEntityType === parentEntitySet?.entityType) {\n\t\t\t\t\t// The side effects context is the parent entity (the entitySet of the view)\n\t\t\t\t\treturn entities;\n\t\t\t\t}\n\t\t\t\tif (target.targetType !== parentEntitySet?.entityType) {\n\t\t\t\t\t//The refresh is not requested on the parent entity (the entitySet of the view)\n\t\t\t\t\tentities.push(targetEntity);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn entities;\n\t\t}, []);\n\n\t\tfor (const targetProperty of targetProperties) {\n\t\t\tconst propertyDataModelPath = enhanceDataModelPath(sideEffectsDataModelPath, targetProperty);\n\t\t\tif (isProperty(propertyDataModelPath.targetObject) || targetProperty === \"*\") {\n\t\t\t\t// if target entity is not from the parent\n\t\t\t\tif (parentEntitySet?.entityType !== propertyDataModelPath.targetEntityType) {\n\t\t\t\t\timmediateTargets.push(targetProperty);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// if entity is other than items table then action is deferred or the static action is on collection\n\t\tconst isImmediateTriggerAction =\n\t\t\t!!actionName &&\n\t\t\tsideEffectsDataModelPath.targetEntityType === entitySetDataModelPath.targetEntityType &&\n\t\t\t!TableHelper._isStaticAction(metaModel.getObject(`/${actionName}`), actionName);\n\n\t\treturn {\n\t\t\timmediateTargets,\n\t\t\tisImmediateTriggerAction,\n\t\t\tisRequestingTableEntityRefresh,\n\t\t\ttableTargetEntity\n\t\t};\n\t}\n\n\t/**\n\t * Gets the properties of the SideEffects\n\t * These properties are\n\t * - tableRefresh: is the whole table is refreshed by the SideEffects\n\t * - immediate: contains the immediate targets and action. They are immediate when these properties must be executed\n\t * on each row\n\t * - deferred: contains the deferred targets and action. They are deferred when these properties must be executed\n\t * only once even if multiple rows has been processed.\n\t * @param oDataSideEffect The SideEffect\n\t * @param sideEffectsContext The context where the SideEffects is executed\n\t * @param entitySetContext  The entitySet context of the dialog\n\t * @param sideEffectsService The SideEffects service\n\t * @returns The SideEffects properties.\n\t */\n\tgetSpecificTargetsAndActions(\n\t\toDataSideEffect: SideEffectsType,\n\t\tsideEffectsContext: ODataV4Context,\n\t\tentitySetContext: Context,\n\t\tsideEffectsService: SideEffectsService\n\t): MassEditSideEffectsProperties {\n\t\tconst sideEffectsInformation = this.getSideEffectsInformation(\n\t\t\toDataSideEffect,\n\t\t\tsideEffectsContext,\n\t\t\tentitySetContext,\n\t\t\tsideEffectsService\n\t\t);\n\t\tconst actionName = !sideEffectsService.isControlSideEffects(oDataSideEffect) ? oDataSideEffect.triggerAction : undefined;\n\n\t\tconst deferredTargets = [...(oDataSideEffect.targetProperties ?? []), ...(oDataSideEffect.targetEntities ?? [])].filter(\n\t\t\t(target) => !sideEffectsInformation.immediateTargets.includes(target) && target !== sideEffectsInformation.tableTargetEntity\n\t\t);\n\n\t\treturn {\n\t\t\tsideEffects: oDataSideEffect,\n\t\t\ttableRefresh: {\n\t\t\t\tisRequested: sideEffectsInformation.isRequestingTableEntityRefresh,\n\t\t\t\ttargetEntity: sideEffectsInformation.tableTargetEntity\n\t\t\t},\n\t\t\timmediate: {\n\t\t\t\ttargets: sideEffectsInformation.isRequestingTableEntityRefresh ? [] : sideEffectsInformation.immediateTargets,\n\t\t\t\ttriggerAction: sideEffectsInformation.isImmediateTriggerAction ? actionName : undefined\n\t\t\t},\n\t\t\tdeferred: {\n\t\t\t\ttargets: deferredTargets,\n\t\t\t\ttriggerAction: !sideEffectsInformation.isImmediateTriggerAction ? actionName : undefined\n\t\t\t}\n\t\t};\n\t}\n\n\t/**\n\t * Generates the side effects map according to the fields into the dialog.\n\t * @returns The SideEffects map.\n\t */\n\tgetSideEffectsMap(): Record<string, MassEditFieldSideEffectDictionary> {\n\t\tconst model = this.table.getModel() as ODataModel,\n\t\t\tmetaModel = model.getMetaModel(),\n\t\t\tmetaPath = metaModel.getMetaPath(this.massEditDialog.bindingContext.getPath()),\n\t\t\tentitySetContext = metaModel.getContext(metaPath);\n\t\tconst entitySetDataModelPath = getInvolvedDataModelObjects(entitySetContext);\n\t\tconst baseSideEffectsMapArray: Record<string, MassEditFieldSideEffectDictionary> = {};\n\t\tconst appComponent = CommonUtils.getAppComponent(this.view);\n\t\tconst properties = this.massEditDialog.fieldProperties\n\t\t\t.filter((field) => field.visible)\n\t\t\t.map((property) => [property.propertyInfo.relativePath, property.propertyInfo.unitOrCurrencyPropertyPath])\n\t\t\t.flat()\n\t\t\t.filter((property): property is string => !!property);\n\n\t\tfor (const property of properties) {\n\t\t\tconst propertyDataModel = enhanceDataModelPath<Property>(entitySetDataModelPath, property);\n\t\t\tconst fieldGroupIds =\n\t\t\t\tappComponent\n\t\t\t\t\t.getSideEffectsService()\n\t\t\t\t\t.computeFieldGroupIds(\n\t\t\t\t\t\tentitySetDataModelPath.targetEntityType.fullyQualifiedName,\n\t\t\t\t\t\tpropertyDataModel.targetObject!.fullyQualifiedName\n\t\t\t\t\t) ?? [];\n\t\t\tbaseSideEffectsMapArray[property] = this.view.getController()._sideEffects.getSideEffectsMapForFieldGroups(fieldGroupIds);\n\t\t}\n\t\treturn baseSideEffectsMapArray;\n\t}\n\n\t/**\n\t * Executes the immediate SideEffects.\n\t * These sideEffects are\n\t * - The ones registered as immediate into the SideEffects dictionary\n\t * - The previous failed SideEffects on the row context or view bindingContext.\n\t * If there are any generic SideEffects (sideEffects which refresh the whole table) stored in the SideEffects\n\t * dictionary, the targets of all immediate SideEffects are ignored (no need to execute them since the table\n\t * is going to be refreshed by the generic SideEffects).\n\t * @param rowContext The context of the row\n\t * @param field  The property name of the field\n\t * @param groupId The groupId for the batch request\n\t * @returns A promise containing all SideEffects requests\n\t */\n\tasync executeImmediateSideEffects(\n\t\trowContext: ODataV4Context,\n\t\tfield: string,\n\t\tgroupId: string\n\t): Promise<PromiseSettledResult<unknown>[]> {\n\t\tconst sideEffectsPromises = [];\n\t\tconst controller = this.view.getController();\n\t\t//Execute the SideEffects defined into the annotations\n\t\tfor (const sideEffectsProperties of (this.sideEffectsDefinition[field] ?? []).filter(\n\t\t\t(sideEffects) => sideEffects.immediate.targets.length || sideEffects.immediate.triggerAction\n\t\t)) {\n\t\t\tconst context = sideEffectsProperties.onRowContext\n\t\t\t\t? rowContext\n\t\t\t\t: controller._sideEffects.getContextForSideEffects(\n\t\t\t\t\t\trowContext,\n\t\t\t\t\t\tsideEffectsProperties.sideEffects.fullyQualifiedName.split(\"@\")[0]\n\t\t\t\t  );\n\t\t\tif (context) {\n\t\t\t\tconst action = sideEffectsProperties.immediate.triggerAction;\n\t\t\t\tconst contextPath = context.getPath();\n\t\t\t\tsideEffectsPromises.push(\n\t\t\t\t\tcontroller._sideEffects.requestSideEffects(sideEffectsProperties.sideEffects, context, groupId, () => {\n\t\t\t\t\t\tlet isActionAlreadyTriggered = false;\n\t\t\t\t\t\tif (action) {\n\t\t\t\t\t\t\tisActionAlreadyTriggered = this.immediateActionExecution.has(`${contextPath}_${action}`);\n\t\t\t\t\t\t\tthis.immediateActionExecution.add(`${contextPath}_${action}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttargets: this.sideEffectsDefinition[\"genericField\"] ? [] : sideEffectsProperties.immediate.targets,\n\t\t\t\t\t\t\ttriggerAction: action && !isActionAlreadyTriggered ? sideEffectsProperties.immediate.triggerAction : undefined\n\t\t\t\t\t\t};\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t\tcontroller._sideEffects.unregisterFailedSideEffects(sideEffectsProperties.sideEffects.fullyQualifiedName, context);\n\t\t\t}\n\t\t}\n\n\t\t//Execute the previous failed SideEffects requests\n\t\tconst allFailedSideEffects = controller._sideEffects.getRegisteredFailedRequests();\n\t\tfor (const context of [rowContext, this.view.getBindingContext()]) {\n\t\t\tif (context) {\n\t\t\t\tconst contextPath = context.getPath();\n\t\t\t\tconst failedSideEffects = allFailedSideEffects[contextPath] ?? [];\n\t\t\t\tcontroller._sideEffects.unregisterFailedSideEffectsForAContext(contextPath);\n\t\t\t\tfor (const failedSideEffect of failedSideEffects) {\n\t\t\t\t\tsideEffectsPromises.push(controller._sideEffects.requestSideEffects(failedSideEffect, context));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn Promise.allSettled(sideEffectsPromises);\n\t}\n\n\t/**\n\t * Executes the deferred SideEffects\n\t * These sideEffects are\n\t * - The ones registered as deferred into the SideEffects dictionary\n\t * - The one registered as generic since the whole table is refreshed.\n\t * @param updatedFields All the updated fields by the MassEdit\n\t */\n\texecuteDeferredSideEffects(updatedFields: Set<string>): void {\n\t\tconst genericSideEffects = this.sideEffectsDefinition[\"genericField\"]?.[0];\n\t\tconst genericTargetEntity = genericSideEffects?.tableRefresh.targetEntity;\n\t\tconst sideEffectsExecuted = new Set<string>();\n\t\tconst controller = this.view.getController();\n\n\t\tfor (const sourceProperty of Object.keys(this.sideEffectsDefinition).filter((propertyName) => updatedFields.has(propertyName))) {\n\t\t\tfor (const sideEffectsProperties of this.sideEffectsDefinition[sourceProperty].filter(\n\t\t\t\t(sideEffects) => sideEffects.deferred.targets.length || sideEffects.deferred.triggerAction\n\t\t\t)) {\n\t\t\t\tconst context = sideEffectsProperties.onRowContext\n\t\t\t\t\t? this.referenceRowContext\n\t\t\t\t\t: controller._sideEffects.getContextForSideEffects(\n\t\t\t\t\t\t\tthis.referenceRowContext,\n\t\t\t\t\t\t\tsideEffectsProperties.sideEffects.fullyQualifiedName.split(\"@\")[0]\n\t\t\t\t\t  );\n\t\t\t\tif (context && !sideEffectsExecuted.has(sideEffectsProperties.sideEffects.fullyQualifiedName)) {\n\t\t\t\t\tsideEffectsExecuted.add(sideEffectsProperties.sideEffects.fullyQualifiedName);\n\t\t\t\t\tcontroller._sideEffects.requestSideEffects(sideEffectsProperties.sideEffects, context, \"$auto.massEditDeferred\", () => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttargets: genericTargetEntity\n\t\t\t\t\t\t\t\t? sideEffectsProperties.deferred.targets.filter(\n\t\t\t\t\t\t\t\t\t\t(target) => typeof target === \"string\" || target !== genericTargetEntity\n\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t\t: sideEffectsProperties.deferred.targets,\n\t\t\t\t\t\t\ttriggerAction: sideEffectsProperties.deferred.triggerAction\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (genericSideEffects && genericTargetEntity) {\n\t\t\tconst context = controller._sideEffects.getContextForSideEffects(\n\t\t\t\tthis.referenceRowContext,\n\t\t\t\tgenericSideEffects.sideEffects.fullyQualifiedName.split(\"@\")[0]\n\t\t\t);\n\t\t\tif (context) {\n\t\t\t\tcontroller._sideEffects.requestSideEffects(genericSideEffects.sideEffects, context, \"$auto.massEditDeferred\", () => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttargets: [genericTargetEntity],\n\t\t\t\t\t\ttriggerAction: undefined\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n}\n"],"mappings":"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","ignoreList":[],"file":"MassEditSideEffects-dbg.js"}