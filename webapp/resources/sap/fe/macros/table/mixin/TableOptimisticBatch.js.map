{"version":3,"file":"TableOptimisticBatch.js","names":["TableOptimisticBatch","_exports","_proto","prototype","setupMixin","_baseClass","enableOptimisticBatchMode","controller","this","getPageController","TableDelegate","setOptimisticBatchPromiseForModel","getContent","e","Log","warning","setupOptimisticBatch","async","table","filterBar","UI5Element","getElementById","getFilter","filterBarAPI","getView","getViewData","hideFilterBar","getParent","controllerExtension","extension","attachEvent","internalBindingContext","getBindingContext","setProperty","isA","undefined","getTableDefinition","control","disableRequestCache","attachEventOnce","pageReady","waitPageReady","detachEvent","setOptimisticBatchEnablerPromise","optimisticBatchEnablerPromiseObject","optimisticBatchEnablerPromise","getOptimisticBatchEnablerPromise","isOptimisticBatchDisabled"],"sources":["./TableOptimisticBatch.ts"],"sourcesContent":["import Log from \"sap/base/Log\";\nimport { type IInterfaceWithMixin } from \"sap/fe/base/ClassSupport\";\nimport type PromiseKeeper from \"sap/fe/core/helpers/PromiseKeeper\";\nimport TableDelegate from \"sap/fe/macros/table/delegates/TableDelegate\";\nimport type ListReportController from \"sap/fe/templates/ListReport/ListReportController.controller\";\nimport type Control from \"sap/ui/core/Control\";\nimport UI5Element from \"sap/ui/core/Element\";\nimport type FilterBarAPI from \"../../filterBar/FilterBarAPI\";\nimport { type ITableBlock } from \"../TableAPI\";\n\nexport default class TableOptimisticBatch implements IInterfaceWithMixin {\n\tprivate optimisticBatchEnablerPromise?: PromiseKeeper<boolean>;\n\n\tsetupMixin(_baseClass: Function): void {\n\t\t// This method is needed to implement interface IInterfaceWithMixin\n\t}\n\n\t/**\n\t * Method to enable the optimistic batch mode for the table.\n\t */\n\tenableOptimisticBatchMode(this: ITableBlock): void {\n\t\ttry {\n\t\t\tconst controller = this.getPageController();\n\t\t\tTableDelegate.setOptimisticBatchPromiseForModel(controller, this);\n\t\t\tTableDelegate.enableOptimisticBatchMode(controller, this.getContent());\n\t\t} catch (e: unknown) {\n\t\t\tLog.warning(e as string);\n\t\t\t// An exception will be thrown when the user clicks go and the table data has already been loaded\n\t\t\t// (setOptimisticBatchPromiseForModel is not supposed to be called once a batch has laready been sent)\n\t\t\t// We just ignore this exception\n\t\t}\n\t}\n\n\t/**\n\t * Method to setup the optimistic batch mode for the table.\n\t * It attaches the search event to the filter bar and enables the optimistic batch mode before the initial load of the table.\n\t * @param this The table block\n\t */\n\tasync setupOptimisticBatch(this: ITableBlock): Promise<void> {\n\t\tconst table = this.getContent();\n\t\tconst controller = this.getPageController();\n\t\tif (!table || !controller) {\n\t\t\treturn;\n\t\t}\n\t\tconst filterBar = UI5Element.getElementById(table?.getFilter()) as Control | undefined;\n\t\tconst filterBarAPI = controller.getView().getViewData()?.hideFilterBar !== true ? (filterBar?.getParent() as FilterBarAPI) : null;\n\t\tconst controllerExtension = controller.extension;\n\n\t\tfilterBarAPI?.attachEvent(\"search\", () => {\n\t\t\tconst internalBindingContext = table.getBindingContext(\"internal\");\n\t\t\tinternalBindingContext?.setProperty(\"searchFired\", true);\n\t\t});\n\n\t\tif (\n\t\t\tfilterBar &&\n\t\t\tcontroller.isA<ListReportController>(\"sap.fe.templates.ListReport.ListReportController\") &&\n\t\t\t(controllerExtension === undefined || this.getTableDefinition().control?.disableRequestCache === false)\n\t\t) {\n\t\t\tif (filterBarAPI) {\n\t\t\t\t//The handler above will be triggered only in case of a search event during the initialisation of the page.\n\t\t\t\t// it will be removed once the page is ready\n\t\t\t\tfilterBarAPI.attachEventOnce(\"search\", this.enableOptimisticBatchMode, this);\n\t\t\t\tawait controller.pageReady.waitPageReady();\n\t\t\t\tfilterBarAPI.detachEvent(\"search\", this.enableOptimisticBatchMode, this);\n\t\t\t} else {\n\t\t\t\tthis.enableOptimisticBatchMode();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Setter for the optimisticBatchEnablerPromise property.\n\t * @param optimisticBatchEnablerPromiseObject The Promise that is to be resolved by the V4 model\n\t */\n\tsetOptimisticBatchEnablerPromise(optimisticBatchEnablerPromiseObject: PromiseKeeper<boolean>): void {\n\t\tthis.optimisticBatchEnablerPromise = optimisticBatchEnablerPromiseObject;\n\t}\n\n\t/**\n\t * Getter for the optimisticBatchEnablerPromise property.\n\t * @returns The optimisticBatchEnablerPromise property.\n\t */\n\tgetOptimisticBatchEnablerPromise(): PromiseKeeper<boolean> | undefined {\n\t\treturn this.optimisticBatchEnablerPromise;\n\t}\n\n\t/**\n\t * Method to know if ListReport is configured with Optimistic batch mode disabled.\n\t * @returns Is Optimistic batch mode disabled\n\t */\n\tisOptimisticBatchDisabled(this: ITableBlock): boolean {\n\t\treturn this.getTableDefinition().control.disableRequestCache || false;\n\t}\n}\n"],"mappings":";;;;6IAUqBA,EAAoB,oBAAAA,IAAA,CAAAC,EAAAD,EAAA,IAAAE,EAAAF,EAAAG,UAAAD,EAGxCE,WAAA,SAAAA,EAAWC,GACV,EAGDH,EAGAI,0BAAA,SAAAA,IACC,IACC,MAAMC,EAAaC,KAAKC,oBACxBC,EAAcC,kCAAkCJ,EAAYC,MAC5DE,EAAcJ,0BAA0BC,EAAYC,KAAKI,aAC1D,CAAE,MAAOC,GACRC,EAAIC,QAAQF,EAIb,CACD,EAEAX,EAKMc,qBAANC,eAAMD,IACL,MAAME,EAAQV,KAAKI,aACnB,MAAML,EAAaC,KAAKC,oBACxB,IAAKS,IAAUX,EAAY,CAC1B,MACD,CACA,MAAMY,EAAYC,EAAWC,eAAeH,GAAOI,aACnD,MAAMC,EAAehB,EAAWiB,UAAUC,eAAeC,gBAAkB,KAAQP,GAAWQ,YAA+B,KAC7H,MAAMC,EAAsBrB,EAAWsB,UAEvCN,GAAcO,YAAY,SAAU,KACnC,MAAMC,EAAyBb,EAAMc,kBAAkB,YACvDD,GAAwBE,YAAY,cAAe,QAGpD,GACCd,GACAZ,EAAW2B,IAA0B,sDACpCN,IAAwBO,WAAa3B,KAAK4B,qBAAqBC,SAASC,sBAAwB,OAChG,CACD,GAAIf,EAAc,CAGjBA,EAAagB,gBAAgB,SAAU/B,KAAKF,0BAA2BE,YACjED,EAAWiC,UAAUC,gBAC3BlB,EAAamB,YAAY,SAAUlC,KAAKF,0BAA2BE,KACpE,KAAO,CACNA,KAAKF,2BACN,CACD,CACD,EAEAJ,EAIAyC,iCAAA,SAAAA,EAAiCC,GAChCpC,KAAKqC,8BAAgCD,CACtC,EAEA1C,EAIA4C,iCAAA,SAAAA,IACC,OAAOtC,KAAKqC,6BACb,EAEA3C,EAIA6C,0BAAA,SAAAA,IACC,OAAOvC,KAAK4B,qBAAqBC,QAAQC,qBAAuB,KACjE,EAAC,OAAAtC,CAAA,CAlFuC,GAkFvCC,EAAAD,EAAA,OAAAC,CAAA","ignoreList":[]}