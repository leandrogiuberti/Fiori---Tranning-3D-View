{"version":3,"names":["TableSharing","_dec","controllerExtensionHandler","_class","_exports","_proto","prototype","setupMixin","_baseClass","_onShareToCollaborationManagerPress","controller","contexts","maxNumberofSelectedItems","length","forEach","context","targetPath","getUrlForCollaborationManager","isTableRowNavigationPossible","appComponent","getAppComponent","appTitle","getManifestEntry","title","collaborativeToolsService","getCollaborativeToolsService","collaborationManagerService","collaborationService","cmHelperService","triggerH2HChat","MessageBox","warning","Library","getResourceBundleFor","getText","view","CommonUtils","getTargetView","getContent","collaborativeDraft","getController","metaModel","getModel","getMetaModel","isDraft","ModelHelper","isDraftSupported","getPath","isCollaborationEnabled","getObject","IsActiveEntity","HasActiveEntity","undefined","path","rootPath","substring","indexOf","rootContext","bindContext","getBoundContext","siblingInfo","draft","computeSiblingInformation","targetContext","_isFclEnabled","layout","getFCLLayoutForCM","hashChangerInstance","HashChanger","getInstance","sBasePath","hrefForAppSpecificHash","window","location","origin","pathname","search","FCLLevel","_routing","getFCLLevel","getRootViewController","getFclConfig","maxColumnsCount","collectAvailableCards","cards","actionToolbarItems","getActions","getPageController","isFclModeObjectPageOpen","getRightmostView","getViewData","converterType","hasInsightActionEnabled","getFilter","TableInsightsHelper","getInsightsRelevantColumns","card","getCardManifestTable","Object","keys","push","getTableDefinition","headerInfoTypeName","callback","onAddCardToCollaborationManagerCallback","bind","insightsRelevantColumns","insightsParams","createTableCardParams","getSortConditionsQuery","InsightsService","getCardManifest","showCollaborationManagerCardPreview","collaborationManager","getService","e","showGenericErrorMessage","Log","error","_onAddCardToInsightsPressed","message","parameters","isNavigationEnabled","type","text","createNavigationErrorMessage","showInsightsCardPreview","scope","resourceModel","ResourceModelHelper","getResourceModel","getDownloadUrlWithFilters","table","filterBar","UI5Element","getElementById","Error","binding","getRowBinding","model","filterPropSV","getParent","getSelectionVariant","filtersWithSemanticDateOpsInfo","SemanticDateOperators","getSemanticOpsFilterProperties","_getSelectOptions","filtersWithoutSemanticDateOps","TableUtils","getAllFilterInfo","map","filterInfo","filterName","propertiesInfo","getPropertyInfoSet","flpMappedPlaceholders","semanticDateFilters","getSemanticDateFiltersWithFlpPlaceholders","allRelevantFilters","filters","concat","allFilters","Filter","and","$search","normalizeSearchTerm","getSearch","tempTableBinding","bindList","url","requestDownloadUrl","placeholder","value","entries","replace","sortConditions","getSortConditions","sorters","sortCondition","sortConditionsPath","getPropertyHelper","getProperty","name","descending","join","_applyDecoratedDescriptor","getOwnPropertyDescriptor"],"sourceRoot":".","sources":["TableSharing.ts"],"sourcesContent":["import Log from \"sap/base/Log\";\nimport { type IInterfaceWithMixin } from \"sap/fe/base/ClassSupport\";\nimport { controllerExtensionHandler } from \"sap/fe/base/HookSupport\";\nimport type AppComponent from \"sap/fe/core/AppComponent\";\nimport CommonUtils from \"sap/fe/core/CommonUtils\";\nimport type PageController from \"sap/fe/core/PageController\";\nimport draft from \"sap/fe/core/controllerextensions/editFlow/draft\";\nimport ModelHelper from \"sap/fe/core/helpers/ModelHelper\";\nimport ResourceModelHelper from \"sap/fe/core/helpers/ResourceModelHelper\";\nimport type FclController from \"sap/fe/core/rootView/Fcl.controller\";\nimport { type WrappedCard } from \"sap/fe/core/services/CollaborationManagerServiceFactory\";\nimport type FilterBarAPI from \"sap/fe/macros/filterBar/FilterBarAPI\";\nimport { hasInsightActionEnabled, showGenericErrorMessage } from \"sap/fe/macros/insights/CommonInsightsHelper\";\nimport type { InsightsParams, TableContent } from \"sap/fe/macros/insights/InsightsService\";\nimport * as InsightsService from \"sap/fe/macros/insights/InsightsService\";\nimport * as TableInsightsHelper from \"sap/fe/macros/insights/TableInsightsHelper\";\nimport TableUtils from \"sap/fe/macros/table/Utils\";\nimport type { CardManifest, CardMessage } from \"sap/insights/CardHelper\";\nimport MessageBox from \"sap/m/MessageBox\";\nimport type Control from \"sap/ui/core/Control\";\nimport UI5Element from \"sap/ui/core/Element\";\nimport Library from \"sap/ui/core/Lib\";\nimport HashChanger from \"sap/ui/core/routing/HashChanger\";\nimport type FilterBar from \"sap/ui/mdc/FilterBar\";\nimport type ActionToolbarAction from \"sap/ui/mdc/actiontoolbar/ActionToolbarAction\";\nimport Filter from \"sap/ui/model/Filter\";\nimport type Context from \"sap/ui/model/odata/v4/Context\";\nimport type ODataModel from \"sap/ui/model/odata/v4/ODataModel\";\nimport SemanticDateOperators from \"../../filterBar/SemanticDateOperators\";\nimport { type ITableBlock } from \"../TableAPI\";\n\ntype SortConditions = {\n\tsorters: {\n\t\tname: string;\n\t\tdescending: boolean;\n\t}[];\n};\n\n/**\n * A mixin to manage all sharing related functionality of the table (including insight cards)\n */\nexport default class TableSharing implements IInterfaceWithMixin {\n\tsetupMixin(_baseClass: Function): void {}\n\n\t_onShareToCollaborationManagerPress(\n\t\tthis: ITableBlock & TableSharing,\n\t\tcontroller: PageController,\n\t\tcontexts: Context[],\n\t\tmaxNumberofSelectedItems: number\n\t): void {\n\t\tif (contexts.length <= maxNumberofSelectedItems) {\n\t\t\tcontexts.forEach(async (context: Context) => {\n\t\t\t\tconst targetPath = await this.getUrlForCollaborationManager(context);\n\t\t\t\tif (this.isTableRowNavigationPossible(context) && targetPath) {\n\t\t\t\t\tconst appComponent = controller.getAppComponent();\n\t\t\t\t\tconst appTitle = appComponent.getManifestEntry(\"sap.app\").title;\n\t\t\t\t\tconst collaborativeToolsService = appComponent?.getCollaborativeToolsService();\n\t\t\t\t\tconst collaborationManagerService = collaborativeToolsService?.collaborationService.cmHelperService;\n\t\t\t\t\tcollaborationManagerService?.triggerH2HChat(appTitle, targetPath);\n\t\t\t\t} else {\n\t\t\t\t\tMessageBox.warning(\n\t\t\t\t\t\tLibrary.getResourceBundleFor(\"sap.fe.macros\")!.getText(\n\t\t\t\t\t\t\t\"T_TABLE_SHARE_TO_COLLABORATION_MANAGER_NO_NAVIGATION_POSSIBLE\"\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tMessageBox.warning(\n\t\t\t\tLibrary.getResourceBundleFor(\"sap.fe.macros\")!.getText(\"T_TABLE_SHARE_TO_COLLABORATION_MANAGER_TOO_MANY_ITEMS_SELECTED\", [\n\t\t\t\t\tmaxNumberofSelectedItems\n\t\t\t\t])\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * Get the URL for SAP Collaboration Manager. We always go to the active version, also from draft version. If there is no active version yet, we do not share a link.\n\t * @param context The context for which the URL is to be generated\n\t * @returns The URL for SAP Collaboration Manager\n\t */\n\tasync getUrlForCollaborationManager(this: ITableBlock & TableSharing, context: Context): Promise<string | undefined> {\n\t\tlet targetPath;\n\t\tconst view = CommonUtils.getTargetView(this.getContent());\n\t\tconst collaborativeDraft = view.getController().collaborativeDraft;\n\t\tconst metaModel = context.getModel()?.getMetaModel();\n\t\tconst isDraft = ModelHelper.isDraftSupported(metaModel, context.getPath());\n\t\tif (isDraft && !collaborativeDraft.isCollaborationEnabled() && context.getObject().IsActiveEntity === false) {\n\t\t\tif (context.getObject().HasActiveEntity === false) {\n\t\t\t\t// we have a draft entity with no active version\n\t\t\t\t// we do not support this for Collaboration Manager\n\t\t\t\treturn undefined;\n\t\t\t} else {\n\t\t\t\t// we have a draft entity with an active version and need to convert the path to an active path\n\t\t\t\tconst path = context.getPath();\n\t\t\t\tconst rootPath = path.substring(0, path.indexOf(\"/\", 1));\n\t\t\t\tconst rootContext = rootPath ? context.getModel().bindContext(rootPath).getBoundContext() : context;\n\t\t\t\tconst siblingInfo = await draft.computeSiblingInformation(rootContext, context);\n\t\t\t\ttargetPath = siblingInfo?.targetContext?.getPath();\n\t\t\t}\n\t\t} else {\n\t\t\t// we have an active entity or a collaborative draft or a non-draft programming model\n\t\t\ttargetPath = context.getPath();\n\t\t}\n\n\t\tif (targetPath) {\n\t\t\tif (targetPath[0] === \"/\") {\n\t\t\t\ttargetPath = targetPath.substring(1);\n\t\t\t}\n\t\t\tconst appComponent = CommonUtils.getAppComponent(this.getContent());\n\t\t\tif (appComponent._isFclEnabled()) {\n\t\t\t\tconst layout = this.getFCLLayoutForCM(appComponent);\n\t\t\t\ttargetPath += `?layout=${layout}`;\n\t\t\t}\n\t\t\tconst hashChangerInstance = HashChanger.getInstance();\n\t\t\tconst sBasePath = hashChangerInstance.hrefForAppSpecificHash ? hashChangerInstance.hrefForAppSpecificHash(\"\") : \"\";\n\t\t\treturn window.location.origin + window.location.pathname + window.location.search + sBasePath + targetPath;\n\t\t}\n\t\treturn undefined;\n\t}\n\n\t/**\n\t * For 'Share to SAP Collaboration Manager', we always want the URL to go to full screen.\n\t * @param this\n\t * @param appComponent The app component\n\t * @returns The FCL layout for the Share to SAP Collaboration Manager\n\t */\n\tgetFCLLayoutForCM(this: ITableBlock & TableSharing, appComponent: AppComponent): string {\n\t\tconst FCLLevel = CommonUtils.getTargetView(this.getContent()).getController()._routing.getFCLLevel();\n\t\tif ((appComponent.getRootViewController() as FclController).getFclConfig().maxColumnsCount === 2) {\n\t\t\treturn \"MidColumnFullScreen\";\n\t\t}\n\n\t\treturn FCLLevel === 0 ? \"MidColumnFullScreen\" : \"EndColumnFullScreen\";\n\t}\n\n\t@controllerExtensionHandler(\"collaborationManager\", \"collectAvailableCards\")\n\tasync collectAvailableCards(this: ITableBlock & TableSharing, cards: WrappedCard[]): Promise<void> {\n\t\tconst actionToolbarItems = this.getContent().getActions() as ActionToolbarAction[];\n\t\tconst appComponent = this.getPageController()?.getAppComponent();\n\t\tconst isFclModeObjectPageOpen = appComponent?._isFclEnabled()\n\t\t\t? (appComponent?.getRootViewController() as FclController)?.getRightmostView?.()?.getViewData()?.converterType === \"ObjectPage\"\n\t\t\t: false;\n\t\tif (\n\t\t\thasInsightActionEnabled(\n\t\t\t\tactionToolbarItems,\n\t\t\t\tthis.getContent().getFilter(),\n\t\t\t\tTableInsightsHelper.getInsightsRelevantColumns(this)\n\t\t\t) &&\n\t\t\t!isFclModeObjectPageOpen\n\t\t) {\n\t\t\tconst card = await this.getCardManifestTable();\n\t\t\tif (Object.keys(card).length > 0) {\n\t\t\t\tcards.push({\n\t\t\t\t\tcard: card,\n\t\t\t\t\ttitle: (this.getTableDefinition().headerInfoTypeName as string | undefined) ?? \"\",\n\t\t\t\t\tcallback: this.onAddCardToCollaborationManagerCallback.bind(this)\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Gets the card manifest optimized for the table case.\n\t * @returns Promise of CardManifest\n\t */\n\tprivate async getCardManifestTable(this: ITableBlock & TableSharing): Promise<CardManifest> {\n\t\tconst insightsRelevantColumns = TableInsightsHelper.getInsightsRelevantColumns(this);\n\t\tconst insightsParams = (await TableInsightsHelper.createTableCardParams(\n\t\t\tthis,\n\t\t\tinsightsRelevantColumns,\n\t\t\tthis.getSortConditionsQuery()\n\t\t)) as InsightsParams<TableContent>;\n\t\treturn InsightsService.getCardManifest(insightsParams);\n\t}\n\n\t/**\n\t * Event handler to create insightsParams and call the API to show insights card preview for table.\n\t * @param card The card manifest to be used for the callback\n\t * @returns Undefined if card preview is rendered.\n\t */\n\tasync onAddCardToCollaborationManagerCallback(this: ITableBlock & TableSharing, card: CardManifest): Promise<void> {\n\t\ttry {\n\t\t\tif (card) {\n\t\t\t\tawait InsightsService.showCollaborationManagerCardPreview(card, this.getPageController().collaborationManager.getService());\n\t\t\t\treturn;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tshowGenericErrorMessage(this.getContent());\n\t\t\tLog.error(e as string);\n\t\t}\n\t}\n\n\t/**\n\t * Event handler to create insightsParams and call the API to show insights card preview for table.\n\t * @returns Undefined if the card preview is rendered.\n\t */\n\tasync _onAddCardToInsightsPressed(this: ITableBlock & TableSharing): Promise<void> {\n\t\ttry {\n\t\t\tconst insightsRelevantColumns = TableInsightsHelper.getInsightsRelevantColumns(this);\n\t\t\tconst insightsParams = await TableInsightsHelper.createTableCardParams(\n\t\t\t\tthis,\n\t\t\t\tinsightsRelevantColumns,\n\t\t\t\tthis.getSortConditionsQuery()\n\t\t\t);\n\t\t\tif (insightsParams) {\n\t\t\t\tconst message: CardMessage = insightsParams.parameters.isNavigationEnabled\n\t\t\t\t\t? undefined\n\t\t\t\t\t: {\n\t\t\t\t\t\t\ttype: \"Warning\",\n\t\t\t\t\t\t\ttext: this.createNavigationErrorMessage(this.getContent())\n\t\t\t\t\t  };\n\n\t\t\t\tInsightsService.showInsightsCardPreview(insightsParams, message);\n\t\t\t\treturn;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tshowGenericErrorMessage(this.getContent());\n\t\t\tLog.error(e as string);\n\t\t}\n\t}\n\n\tcreateNavigationErrorMessage(scope: Control): string {\n\t\tconst resourceModel = ResourceModelHelper.getResourceModel(scope);\n\t\treturn resourceModel.getText(\"M_ROW_LEVEL_NAVIGATION_DISABLED_MSG_REASON_EXTERNAL_NAVIGATION_CONFIGURED\");\n\t}\n\n\tasync getDownloadUrlWithFilters(this: ITableBlock & TableSharing): Promise<string> {\n\t\tconst table = this.getContent();\n\t\tconst filterBar = UI5Element.getElementById(table.getFilter()) as FilterBar | undefined;\n\n\t\tif (!filterBar) {\n\t\t\tthrow new Error(\"filter bar is not available\");\n\t\t}\n\t\tconst binding = table.getRowBinding();\n\t\tconst model = table.getModel() as ODataModel;\n\t\tconst filterPropSV = await (filterBar.getParent() as FilterBarAPI).getSelectionVariant();\n\t\t// ignore filters with semantic operators which needs to be added later as filters with flp semantic date placeholders\n\t\tconst filtersWithSemanticDateOpsInfo = SemanticDateOperators.getSemanticOpsFilterProperties(filterPropSV._getSelectOptions());\n\t\tconst filtersWithoutSemanticDateOps = TableUtils.getAllFilterInfo(\n\t\t\ttable,\n\t\t\tfiltersWithSemanticDateOpsInfo.map((filterInfo) => filterInfo.filterName)\n\t\t);\n\t\tconst propertiesInfo = filterBar.getPropertyInfoSet();\n\t\t// get the filters with semantic date operators with flp placeholder format and append to the exisiting filters\n\t\tconst [flpMappedPlaceholders, semanticDateFilters] = SemanticDateOperators.getSemanticDateFiltersWithFlpPlaceholders(\n\t\t\tfiltersWithSemanticDateOpsInfo,\n\t\t\tpropertiesInfo\n\t\t);\n\n\t\tlet allRelevantFilters: Filter[] = [];\n\t\tif (filtersWithoutSemanticDateOps.filters.length > 0) {\n\t\t\tallRelevantFilters = allRelevantFilters.concat(filtersWithoutSemanticDateOps.filters);\n\t\t}\n\t\tif (semanticDateFilters.length > 0) {\n\t\t\tallRelevantFilters.push(...semanticDateFilters);\n\t\t}\n\t\tconst allFilters = new Filter({\n\t\t\tfilters: allRelevantFilters,\n\t\t\tand: true\n\t\t});\n\t\tconst parameters = {\n\t\t\t$search: CommonUtils.normalizeSearchTerm(filterBar.getSearch()) || undefined\n\t\t};\n\t\t// create hidden binding with all filters e.g. static filters and filters with semantic operators\n\t\tconst tempTableBinding = model.bindList(binding.getPath(), undefined, undefined, allFilters, parameters);\n\t\tlet url = (await tempTableBinding.requestDownloadUrl()) ?? \"\";\n\t\tfor (const [placeholder, value] of Object.entries(flpMappedPlaceholders)) {\n\t\t\turl = url.replace(placeholder, value);\n\t\t}\n\t\treturn url;\n\t}\n\n\t/**\n\t * Get the sort conditions query string.\n\t * @returns The sort conditions query string\n\t */\n\tgetSortConditionsQuery(this: ITableBlock & TableSharing): string {\n\t\tconst table = this.getContent();\n\t\tconst sortConditions = (table.getSortConditions() as SortConditions)?.sorters;\n\t\treturn sortConditions\n\t\t\t? sortConditions\n\t\t\t\t\t.map(function (sortCondition) {\n\t\t\t\t\t\tconst sortConditionsPath = table.getPropertyHelper().getProperty(sortCondition.name)?.path;\n\t\t\t\t\t\tif (sortConditionsPath) {\n\t\t\t\t\t\t\treturn `${sortConditionsPath}${sortCondition.descending ? \" desc\" : \"\"}`;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn \"\";\n\t\t\t\t\t})\n\t\t\t\t\t.join(\",\")\n\t\t\t: \"\";\n\t}\n}\n"],"mappings":"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","ignoreList":[],"file":"TableSharing-dbg.js"}