{"version":3,"names":["SEMANTICKEY_HAS_DRAFTINDICATOR","SEARCH_HAS_BEEN_FIRED","COLUMN_HAS_BEEN_ADDED","PREVIOUS_SORTERS","Object","assign","TableDelegateBase","apiVersion","_computeVisualSettingsForFieldGroup","table","propertyInfo","propertyInfos","key","indexOf","column","getColumns","find","col","getPropertyKey","showDataFieldsLabel","data","oMetaModel","getModel","getMetaModel","involvedDataModelObjects","getInvolvedDataModelObjects","getContext","annotationPath","convertedMetaData","convertedTypes","oDataField","targetObject","oFieldGroup","Target","$target","aFieldWidth","Data","forEach","oData","oDataFieldWidth","$Type","TableSizeHelper","getWidthForDataFieldForAnnotation","getWidthForDataField","labelWidth","propertyWidth","SizeHelper","getButtonWidth","Label","toString","push","nWidest","reduce","acc","value","Math","max","visualSettings","deepExtend","widthCalculation","verticalArrangement","minWidth","ceil","_computeVisualSettingsForPropertyWithValueHelp","property","tableAPI","_getTableAPI","metaModel","dataField","getObject","gap","getProperty","_computeVisualSettingsForPropertyWithUnit","unit","unitText","timezoneText","oTableAPI","text","getReadOnly","_computeLabel","labelMap","label","propertiesWithSameLabel","isPropertyUsedAsTextOnlyProperty","some","prop","path","mode","length","includes","additionalLabels","filterable","join","_updatePropertyInfo","properties","p13nMode","getP13nMode","sortable","groupable","undefined","concat","groupLabel","group","dataType","visible","getParent","UI5Element","getElementById","getId","getColumnsFor","getTableDefinition","columns","fetchExportCapabilities","oTable","oCapabilities","XLSX","oModel","DelegateUtil","fetchModel","then","model","aSupportedFormats","aLowerFormats","map","element","toLowerCase","oAnnotation","catch","err","Log","error","_isFilterableNavigationProperty","columnInfo","columnDataModelObjectPath","isFilterable","isPathFilterable","relativePath","isPartOfLineItem","isPartOfCustomColumn","isConstant","_fetchPropertyInfo","appComponent","sAbsoluteNavigationPath","oNavigationContext","createBindingContext","isComplexType","typeConfig","className","bFilterable","CommonHelper","isPropertyFilterable","bIsAnalyticalTable","getCustomData","getLocalizedText","tooltip","_getTypeConfig","name","formatOptions","baseType","style","constraints","availability","exportSettings","_setPropertyInfoExportSettings","type","ColumnType","Annotation","template","clipboardSettings","keys","exportDataPointTargetValue","_updateAnalyticalPropertyInfoAttributes","isKey","isGroupable","textArrangement","_setTextArrangementInfo","extension","technicallyGroupable","caseSensitive","additionalLabel","exportFormat","_getExportFormat","format","TypeMap","getTypeConfig","isTypeFilterable","descriptionColumn","oCol","textProperty","valueProperty","descriptionProperty","aggregatable","_fetchComputedPropertyInfo","_fetchCustomPropertyInfo","header","startsWith","ModelHelper","fetchTextFromMetaModel","_bColumnHasPropertyWithDraftIndicator","oColumnInfo","hasDraftIndicator","fieldGroupDraftIndicatorPropertyPath","_updateDraftIndicatorModel","_oTable","_oColumnInfo","aVisibleColumns","oInternalBindingContext","getBindingContext","sInternalPath","getPath","index","setProperty","_fetchPropertiesForEntity","entityTypePath","bindingPath","getEntitySetPath","fetchedProperties","nonFilterableProperties","CommonUtils","getFilterRestrictionsByPath","NonFilterableProperties","Promise","resolve","maxConditions","isMultiValue","Error","setEnhancedFetchedPropertyInfos","getPropertyInfos","_getCachedOrFetchPropertiesForEntity","getCachedPropertyInfos","subFetchedProperties","setCachedPropertyInfos","setNoDataInformation","illustratedMessageInformation","noDataAggregation","getNoData","isA","currentIllustratedMessage","setTitle","title","setDescription","description","setIllustrationType","illustrationType","setIllustrationSize","illustrationSize","illustratedMessage","IllustratedMessage","setNoData","setTableNoDataIllustratedMessage","bindingInfo","tableFilterInfo","TableUtils","getAllFilterInfo","resourceModel","getResourceModel","suffixResourceKey","substring","illustratedInformation","getNoDataIllustratedMessageWithFilters","getQuickFilter","getText","IllustratedMessageType","NoSearchResults","filterAssociation","getFilter","hasFilterOrSearch","search","filters","test","NoData","getTargetView","getViewData","liveMode","getNoDataMessageMode","currentNoData","handleTableDataRequested","oInternalModelContext","oBinding","getRowBinding","bDataRequestedAttached","attachDataRequested","setTimeout","tableDefaultsPromise","getTableDefaults","handleTableDataReceived","bDataReceivedAttached","attachDataReceived","aSelectedContexts","getSelectedContexts","oActionOperationAvailableMap","JSON","parse","tableDefinition","operationAvailableMap","ActionRuntime","setActionEnablement","DeleteHelper","updateDeleteInfoForSelectedContexts","tableDefaultData","setUpEmptyRows","_updateAvailableCards","setOptimisticBatchPromiseForModel","controller","getAppComponent","setOptimisticBatchEnablerPromise","PromiseKeeper","setOptimisticBatchForModel","enableOptimisticBatchMode","filtersPropertiesAsPotentiallySensitiveDataOrDateType","isFilterEligibleForOptimisticBatch","_getFilterBarControl","getOptimisticBatchEnablerPromise","dataModel","isOptimisticBatchHasToBeEnabled","getShellServices","isFlpOptimisticBatchPluginLoaded","getOptimisticBatchEnabler","isOptimisticBatchDisabled","optimisticBatchEnablerPromiseKeeper","setOptimisticBatchEnabler","promise","rebind","oBindingInfo","bIsSuspended","TableRuntime","clearSelection","apply","onTableBound","whenBound","oError","fetchProperties","preInit","fastCreationRow","getCreationRow","setBindingContext","updateBindingInfo","internalBindingContext","quickFilter","collectionBindingInfoAPI","CollectionBindingInfoAPI","_handleSortersOnCurrenciesOrUoM","_internalUpdateBindingInfo","_handleRecommendationOutputFields","_handleFiltersForExternalID","fireEvent","collectionBindingInfo","quickFilterKey","getSelectedKey","attachedEvents","getAttachedEvents","context","TableHelper","enableFastCreationRow","setAttachEvents","e","sorters","sorter","newSortersToBeApplied","tableProperties","tableProperty","unitProperty","unitSorterAvailable","sort","Sorter","getFilters","updateFiltersForExternalID","getPageController","recommendations","isRecommendationEnabled","tableDef","recommendationOutputProperties","getSideEffectsService","getRecommendationOutputFields","annotation","entityTypeName","parameters","$select","getView","converterType","cards","collectAvailableCards","collaborationManager","CollaborationManager","cardObject","updateCards","parentAppId","getCollaborationManagerService","addCardsToCollaborationManager","shareAvailableCards","getInResultPropertyKeys","control","analyticalConfiguration","aggregationOnLeafLevel","allKkeysRequested","checkAllKeysAreRequested","overrideRowPress","requestAtLeast","filter","fieldName","origin","getContent","allColumns","keyPropertyNames","c","displayedColumns","referencedPropertyPaths","Set","processColumn","add","additionalProperties","additionalColumnName","additionalColumn","relatedColumnName","relatedColumn","every","propName","has","getSearchQuery","binding","aggregation","getAggregation","getQueryOptionsFromParameters","$search","updateBinding","$$getKeepAliveContext","collectionPath","internalModel","keptAliveLists","needManualRefresh","view","manualUpdatePropertyKey","pendingManualUpdate","newSorters","stringify","viewData","oldFilters","previousSorters","filterNotChanged","deepEqual","LRMultiViewEnabled","views","enableAnalytics","setAggregateConditions","setGroupConditions","setTableBindingInfo","setDownloadUrl","requestRefresh","getGroupId","finally","storedEvents","_ref","eventId","callback","listener","attachEvent","_computeRowBindingInfoFromTemplate","rowBindingInfo","getTableTemplateBindingInfo","bindingContext","tableCanBeInInlineEdit","getBinding","getUpdateGroupId","INLINEEDIT_UPDATEGROUPID","$$updateGroupId","suspended","oFilter","oFilterInfo","Filter","and","oDataStateIndicator","getDataStateIndicator","isFiltering","updateBindingInfoWithSearchQuery","addFilterOnActiveEntities","filterInfo","normalizeSearchTerm","payload","getPayload","filterOnActiveEntities","filterOnActive","operator","value1","_templateSlotColumnFragment","modifier","tableId","slotColumnsXML","DOMParser","parseFromString","jsx","renderAsXML","getSlotColumn","slotXML","getElementsByTagName","oTemplate","firstElementChild","nodeName","replaceWith","remove","resultXML","XMLPreprocessor","process","models","getController","getOwnerComponent","getPreprocessorContext","targets","Fragment","load","definition","ExcelFormat","getExcelDatefromJSDate","getExcelDateTimefromJSDateTime","getExcelTimefromJSTime","_getVHRelevantFields","sMetadataPath","sBindingPath","aFields","oDataFieldData","$kind","oValue","iIndex","getNavigationPath","_setDraftIndicatorOnVisibleColumn","aColumns","aColumnsWithDraftIndicator","oColumn","sAddVisibleColumnName","sVisibleColumnName","bFoundColumnVisibleWithDraft","sColumnNameWithDraftIndicator","i","j","removeItem","oPropertyInfoName","mPropertyBag","doRemoveItem","oModifier","sDataProperty","insertAggregation","_setDraftIndicatorStatus","_getMetaModel","_getGroupId","sRetrievedGroupId","_insertAggregation","oValueHelp","addItem","propertyInfoName","sTableId","warning","sPath","getCustomDataWithModifier","oTableContext","getCurrentPageView","getComputedColumn","getEnhancedFetchedPropertyInfos","propInfo","oPropertyContext","fnTemplateFragment","oInPropertyInfo","oView","bDisplayMode","sTableTypeCustomData","sCreationModeCustomData","all","aCustomData","oThis","JSONModel","enableAutoColumnWidth","readOnly","tableType","id","navigationPropertyPath","collection","creationMode","widthIncludingColumnHeader","oPreprocessorSettings","bindingContexts","entitySet","this","tableCollection","handlerProvider","TableEventHandlerProvider","collectionEntity","computedColumnXML","getColumnTemplate","templateControlFragment","destroy","getFilterDelegate","FilterBarDelegate","oParentControl","sPropertyInfoName","replace","getTypeMap","formatGroupHeader","obj","dataBaseType","externalFormat","ValueFormatter","formatWithBrackets"],"sourceRoot":".","sources":["TableDelegate.ts"],"sourcesContent":["import type { DataFieldAbstractTypes, DataFieldForAnnotation, FieldGroupType } from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport Log from \"sap/base/Log\";\nimport deepEqual from \"sap/base/util/deepEqual\";\nimport deepExtend from \"sap/base/util/deepExtend\";\nimport { isConstant } from \"sap/fe/base/BindingToolkit\";\nimport type { EnhanceWithUI5 } from \"sap/fe/base/ClassSupport\";\nimport jsx from \"sap/fe/base/jsx-runtime/jsx\";\nimport ActionRuntime from \"sap/fe/core/ActionRuntime\";\nimport type AppComponent from \"sap/fe/core/AppComponent\";\nimport type { FEView } from \"sap/fe/core/BaseController\";\nimport type { BaseTreeModifier } from \"sap/fe/core/CommonUtils\";\nimport CommonUtils from \"sap/fe/core/CommonUtils\";\nimport type TemplateComponent from \"sap/fe/core/TemplateComponent\";\nimport type { ListReportManifestSettings } from \"sap/fe/core/converters/ManifestSettings\";\nimport { getInvolvedDataModelObjects } from \"sap/fe/core/converters/MetaModelConverter\";\nimport type { WrappedCard } from \"sap/fe/core/services/CollaborationManagerServiceFactory\";\n\nimport type { EntitySet, NavigationProperty } from \"@sap-ux/vocabularies-types\";\nimport CollaborationManager from \"sap/fe/core/controllerextensions/cards/CollaborationManager\";\nimport type {\n\tAnnotationTableColumn,\n\tColumnExportSettings,\n\tComputedTableColumn,\n\tCustomBasedTableColumn,\n\tTableColumn\n} from \"sap/fe/core/converters/controls/Common/table/Columns\";\nimport { ColumnType } from \"sap/fe/core/converters/controls/Common/table/Columns\";\nimport type { CustomElement } from \"sap/fe/core/converters/helpers/ConfigurableObject\";\nimport ValueFormatter from \"sap/fe/core/formatters/ValueFormatter\";\nimport DeleteHelper from \"sap/fe/core/helpers/DeleteHelper\";\nimport ExcelFormat from \"sap/fe/core/helpers/ExcelFormatHelper\";\nimport type { InternalModelContext } from \"sap/fe/core/helpers/ModelHelper\";\nimport ModelHelper from \"sap/fe/core/helpers/ModelHelper\";\nimport PromiseKeeper from \"sap/fe/core/helpers/PromiseKeeper\";\nimport { getLocalizedText, getResourceModel } from \"sap/fe/core/helpers/ResourceModelHelper\";\nimport SizeHelper from \"sap/fe/core/helpers/SizeHelper\";\nimport type { DataModelObjectPath } from \"sap/fe/core/templating/DataModelPathHelper\";\nimport { isPathFilterable } from \"sap/fe/core/templating/DataModelPathHelper\";\nimport { isTypeFilterable } from \"sap/fe/core/type/EDM\";\nimport type { CollectionBindingInfo } from \"sap/fe/macros/CollectionBindingInfo\";\nimport CollectionBindingInfoAPI from \"sap/fe/macros/CollectionBindingInfo\";\nimport CommonHelper from \"sap/fe/macros/CommonHelper\";\nimport DelegateUtil from \"sap/fe/macros/DelegateUtil\";\nimport type FilterBar from \"sap/fe/macros/controls/FilterBar\";\nimport FilterBarDelegate from \"sap/fe/macros/filterBar/FilterBarDelegate\";\nimport { getColumnTemplate, getComputedColumn, getSlotColumn } from \"sap/fe/macros/table/MdcTableTemplate\";\nimport type TableAPI from \"sap/fe/macros/table/TableAPI\";\nimport type { EnhancedFEPropertyInfo } from \"sap/fe/macros/table/TableAPI\";\nimport TableHelper from \"sap/fe/macros/table/TableHelper\";\nimport TableRuntime from \"sap/fe/macros/table/TableRuntime\";\nimport TableSizeHelper from \"sap/fe/macros/table/TableSizeHelper\";\nimport type { InternalBindingInfo } from \"sap/fe/macros/table/Utils\";\nimport TableUtils from \"sap/fe/macros/table/Utils\";\nimport type ListReportController from \"sap/fe/templates/ListReport/ListReportController.controller\";\nimport type { $IllustratedMessageSettings } from \"sap/m/IllustratedMessage\";\nimport IllustratedMessage from \"sap/m/IllustratedMessage\";\nimport IllustratedMessageType from \"sap/m/IllustratedMessageType\";\nimport type { BaseAggregationBindingInfo } from \"sap/ui/base/ManagedObject\";\nimport UI5Element from \"sap/ui/core/Element\";\nimport Fragment from \"sap/ui/core/Fragment\";\nimport type View from \"sap/ui/core/mvc/View\";\nimport XMLPreprocessor from \"sap/ui/core/util/XMLPreprocessor\";\nimport type { JsControlTreeModifier } from \"sap/ui/core/util/reflection\";\nimport type Control from \"sap/ui/mdc/Control\";\nimport type { default as MDCTable, MDCTablePropertyInfo as PropertyInfo, default as Table, VisualSettings } from \"sap/ui/mdc/Table\";\nimport type TypeConfig from \"sap/ui/mdc/TypeConfig\";\nimport type { ConditionObject } from \"sap/ui/mdc/condition/Condition\";\nimport TableDelegateBase from \"sap/ui/mdc/odata/v4/TableDelegate\";\nimport TypeMap from \"sap/ui/mdc/odata/v4/TypeMap\";\nimport type Context from \"sap/ui/model/Context\";\nimport Filter from \"sap/ui/model/Filter\";\nimport type MetaModel from \"sap/ui/model/MetaModel\";\nimport type Model from \"sap/ui/model/Model\";\nimport Sorter from \"sap/ui/model/Sorter\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\nimport type { default as ODataV4Context, default as v4Context } from \"sap/ui/model/odata/v4/Context\";\nimport type ODataListBinding from \"sap/ui/model/odata/v4/ODataListBinding\";\nimport type ODataMetaModel from \"sap/ui/model/odata/v4/ODataMetaModel\";\nimport type ODataModel from \"sap/ui/model/odata/v4/ODataModel\";\nimport type QuickFilterSelector from \"../QuickFilterSelector\";\nimport TableEventHandlerProvider from \"../TableEventHandlerProvider\";\n\nconst SEMANTICKEY_HAS_DRAFTINDICATOR = \"/semanticKeyHasDraftIndicator\";\nconst SEARCH_HAS_BEEN_FIRED = \"searchFired\";\nconst COLUMN_HAS_BEEN_ADDED = \"columnAdded\";\nconst PREVIOUS_SORTERS = \"previousSorters\";\n\n/**\n * Helper class for sap.ui.mdc.Table.\n * <h3><b>Note:</b></h3>\n * The class is experimental and the API and the behavior are not finalized. This class is not intended for productive usage.\n * @author SAP SE\n * @private\n * @since 1.69.0\n * @alias sap.fe.macros.TableDelegate\n */\nexport default Object.assign({}, TableDelegateBase, {\n\tapiVersion: 2,\n\t/**\n\t * This function calculates the width of a FieldGroup column.\n\t * The width of the FieldGroup is the width of the widest property contained in the FieldGroup (including the label if showDataFieldsLabel is true)\n\t * The result of this calculation is stored in the visualSettings.widthCalculation.minWidth property, which is used by the MDCtable.\n\t * @param table Instance of the MDCtable\n\t * @param propertyInfo Current propertyInfo\n\t * @param propertyInfos Array of properties\n\t * @private\n\t * @alias sap.fe.macros.TableDelegate\n\t */\n\t_computeVisualSettingsForFieldGroup: function (\n\t\ttable: Table,\n\t\tpropertyInfo: EnhancedFEPropertyInfo,\n\t\tpropertyInfos: EnhancedFEPropertyInfo[]\n\t) {\n\t\tif (propertyInfo.key.indexOf(\"DataFieldForAnnotation::FieldGroup::\") === 0) {\n\t\t\tconst column = table.getColumns().find((col) => {\n\t\t\t\treturn col.getPropertyKey() === propertyInfo.key;\n\t\t\t});\n\t\t\tconst showDataFieldsLabel = column ? column.data(\"showDataFieldsLabel\") === \"true\" : false;\n\t\t\tconst oMetaModel = (table.getModel() as ODataModel).getMetaModel();\n\t\t\tconst involvedDataModelObjects = getInvolvedDataModelObjects(oMetaModel.getContext(propertyInfo.annotationPath));\n\t\t\tconst convertedMetaData = involvedDataModelObjects.convertedTypes;\n\t\t\tconst oDataField = involvedDataModelObjects.targetObject as DataFieldForAnnotation;\n\t\t\tconst oFieldGroup = oDataField.Target.$target as FieldGroupType;\n\t\t\tconst aFieldWidth: number[] = [];\n\t\t\toFieldGroup.Data.forEach(function (oData: DataFieldAbstractTypes) {\n\t\t\t\tlet oDataFieldWidth: { labelWidth: number; propertyWidth: number };\n\t\t\t\tswitch (oData.$Type) {\n\t\t\t\t\tcase \"com.sap.vocabularies.UI.v1.DataFieldForAnnotation\":\n\t\t\t\t\t\toDataFieldWidth = TableSizeHelper.getWidthForDataFieldForAnnotation(\n\t\t\t\t\t\t\toData,\n\t\t\t\t\t\t\tfalse,\n\t\t\t\t\t\t\tpropertyInfos,\n\t\t\t\t\t\t\tconvertedMetaData,\n\t\t\t\t\t\t\tshowDataFieldsLabel\n\t\t\t\t\t\t);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"com.sap.vocabularies.UI.v1.DataField\":\n\t\t\t\t\t\toDataFieldWidth = TableSizeHelper.getWidthForDataField(\n\t\t\t\t\t\t\toData,\n\t\t\t\t\t\t\tshowDataFieldsLabel,\n\t\t\t\t\t\t\tpropertyInfos,\n\t\t\t\t\t\t\tconvertedMetaData,\n\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"com.sap.vocabularies.UI.v1.DataFieldForAction\":\n\t\t\t\t\t\toDataFieldWidth = {\n\t\t\t\t\t\t\tlabelWidth: 0,\n\t\t\t\t\t\t\tpropertyWidth: SizeHelper.getButtonWidth(oData.Label?.toString())\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t}\n\t\t\t\tif (oDataFieldWidth!) {\n\t\t\t\t\taFieldWidth.push(oDataFieldWidth.labelWidth + oDataFieldWidth.propertyWidth);\n\t\t\t\t}\n\t\t\t});\n\t\t\tconst nWidest = aFieldWidth.reduce(function (acc: number, value: number) {\n\t\t\t\treturn Math.max(acc, value);\n\t\t\t}, 0);\n\t\t\tpropertyInfo.visualSettings = deepExtend(propertyInfo.visualSettings as object, {\n\t\t\t\twidthCalculation: {\n\t\t\t\t\tverticalArrangement: true,\n\t\t\t\t\tminWidth: Math.ceil(nWidest)\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t},\n\n\t_computeVisualSettingsForPropertyWithValueHelp: function (table: Table, property: EnhancedFEPropertyInfo) {\n\t\tconst tableAPI = this._getTableAPI(table);\n\t\tif (!property.propertyInfos) {\n\t\t\tconst metaModel = (table.getModel() as ODataModel).getMetaModel();\n\t\t\tif (property.annotationPath && metaModel) {\n\t\t\t\tconst dataField = metaModel.getObject(`${property.annotationPath}@`);\n\t\t\t\tif (dataField && dataField[\"@com.sap.vocabularies.Common.v1.ValueList\"]) {\n\t\t\t\t\tproperty.visualSettings = deepExtend(property.visualSettings || {}, {\n\t\t\t\t\t\twidthCalculation: {\n\t\t\t\t\t\t\tgap: tableAPI.getProperty(\"readOnly\") ? 0 : 4\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t_computeVisualSettingsForPropertyWithUnit: function (\n\t\ttable: Table,\n\t\tpropertyInfo: PropertyInfo,\n\t\tunit?: string,\n\t\tunitText?: string,\n\t\ttimezoneText?: string\n\t) {\n\t\tconst oTableAPI: EnhanceWithUI5<TableAPI> | null = table ? (this._getTableAPI(table) as EnhanceWithUI5<TableAPI>) : null;\n\t\t// update gap for properties with string unit\n\t\tconst text = unitText || timezoneText;\n\t\tif (text) {\n\t\t\tpropertyInfo.visualSettings = deepExtend(propertyInfo.visualSettings as VisualSettings, {\n\t\t\t\twidthCalculation: {\n\t\t\t\t\tgap: Math.ceil(SizeHelper.getButtonWidth(text))\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tif (unit) {\n\t\t\tpropertyInfo.visualSettings = deepExtend(propertyInfo.visualSettings as VisualSettings, {\n\t\t\t\twidthCalculation: {\n\t\t\t\t\t// For properties with unit, a gap needs to be added to properly render the column width on edit mode\n\t\t\t\t\tgap: oTableAPI && oTableAPI.getReadOnly() ? 0 : 6\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t},\n\n\t_computeLabel: function (property: EnhancedFEPropertyInfo, labelMap: { [label: string]: EnhancedFEPropertyInfo[] }) {\n\t\tif (property.label) {\n\t\t\tconst propertiesWithSameLabel = labelMap[property.label];\n\t\t\t// This computation is only for duplicate labels on navigation properties.\n\t\t\t// Exclude text navigation properties referenced as text on a property annotated with text arrangement set as TextOnly.\n\t\t\t// Exclude navigation properties created only for filtering purposes with a text arrangement set to TextOnly.\n\t\t\tconst isPropertyUsedAsTextOnlyProperty = propertiesWithSameLabel?.some(\n\t\t\t\t(prop) => prop.text === property.path && prop?.mode === \"Description\"\n\t\t\t);\n\t\t\tif (\n\t\t\t\tpropertiesWithSameLabel?.length > 1 &&\n\t\t\t\tproperty.path?.includes(\"/\") &&\n\t\t\t\tproperty.additionalLabels &&\n\t\t\t\t!isPropertyUsedAsTextOnlyProperty &&\n\t\t\t\t!(property?.mode === \"Description\" && property.filterable)\n\t\t\t) {\n\t\t\t\tproperty.label = property.label + \" (\" + property.additionalLabels.join(\" / \") + \")\";\n\t\t\t}\n\t\t\tdelete property.additionalLabels;\n\t\t}\n\t},\n\t//Update VisualSetting for columnWidth calculation and labels on navigation properties\n\t_updatePropertyInfo: function (table: Table, properties: EnhancedFEPropertyInfo[]) {\n\t\tconst labelMap: { [label: string]: EnhancedFEPropertyInfo[] } = {};\n\t\t// Check available p13n modes\n\t\tconst p13nMode = table.getP13nMode();\n\t\tproperties.forEach((property) => {\n\t\t\tif (!property.propertyInfos && property.label) {\n\t\t\t\t// Only for non-complex properties\n\t\t\t\tif (\n\t\t\t\t\t(p13nMode?.includes(\"Sort\") && property.sortable) ||\n\t\t\t\t\t(p13nMode?.includes(\"Filter\") && property.filterable) ||\n\t\t\t\t\t(p13nMode?.includes(\"Group\") && property.groupable)\n\t\t\t\t) {\n\t\t\t\t\tlabelMap[property.label] =\n\t\t\t\t\t\tlabelMap[property.label] !== undefined ? labelMap[property.label].concat([property]) : [property];\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tproperties.forEach((property) => {\n\t\t\tthis._computeVisualSettingsForFieldGroup(table, property, properties);\n\t\t\tthis._computeVisualSettingsForPropertyWithValueHelp(table, property);\n\t\t\tthis._computeLabel(property, labelMap);\n\t\t});\n\t\t// Add the $editState property\n\t\tproperties.push({\n\t\t\tkey: \"$editState\",\n\t\t\tpath: \"$editState\",\n\t\t\tgroupLabel: \"\",\n\t\t\tgroup: \"\",\n\t\t\tlabel: \"\",\n\t\t\tdataType: \"sap.ui.model.odata.type.String\",\n\t\t\tvisible: false,\n\t\t\tgroupable: false,\n\t\t\tsortable: false,\n\t\t\tfilterable: false\n\t\t} as EnhancedFEPropertyInfo);\n\t\treturn properties;\n\t},\n\n\t_getTableAPI(table: Table): TableAPI {\n\t\tlet tableAPI: TableAPI | undefined = table.getParent() as TableAPI;\n\t\tif (!tableAPI) {\n\t\t\ttableAPI = UI5Element.getElementById(table.getId() + \"::Table\") as TableAPI;\n\t\t}\n\t\treturn tableAPI;\n\t},\n\n\tgetColumnsFor: function (table: Table): TableColumn[] {\n\t\tconst tableAPI = this._getTableAPI(table);\n\t\treturn tableAPI.getTableDefinition().columns;\n\t},\n\n\t/**\n\t * Returns the export capabilities for the given sap.ui.mdc.Table instance.\n\t * @param oTable Instance of the table\n\t * @returns Promise representing the export capabilities of the table instance\n\t */\n\tfetchExportCapabilities: async function (oTable: Table): Promise<{ XLSX?: unknown; PDF?: unknown }> {\n\t\tconst oCapabilities: { XLSX?: unknown; PDF?: unknown } = { XLSX: {} };\n\t\tlet oModel!: ODataModel;\n\t\treturn DelegateUtil.fetchModel(oTable)\n\t\t\t.then(function (model: Model) {\n\t\t\t\toModel = model as ODataModel;\n\t\t\t\treturn oModel.getMetaModel().getObject(\"/$EntityContainer@Org.OData.Capabilities.V1.SupportedFormats\");\n\t\t\t})\n\t\t\t.then(function (aSupportedFormats: string[] | undefined) {\n\t\t\t\tconst aLowerFormats = (aSupportedFormats || []).map((element) => {\n\t\t\t\t\treturn element.toLowerCase();\n\t\t\t\t});\n\t\t\t\tif (aLowerFormats.includes(\"application/pdf\")) {\n\t\t\t\t\treturn oModel.getMetaModel().getObject(\"/$EntityContainer@com.sap.vocabularies.PDF.v1.Features\");\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t})\n\t\t\t.then(function (oAnnotation: unknown) {\n\t\t\t\tif (oAnnotation) {\n\t\t\t\t\toCapabilities[\"PDF\"] = Object.assign({}, oAnnotation);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t})\n\t\t\t.catch(function (err) {\n\t\t\t\tLog.error(`An error occurs while computing export capabilities: ${err}`);\n\t\t\t})\n\t\t\t.then(function () {\n\t\t\t\treturn oCapabilities;\n\t\t\t});\n\t},\n\n\t/**\n\t * Filtering on navigation properties that are not part of the LineItem annotation nor of the custom columns is forbidden.\n\t * @param columnInfo\n\t * @param columnDataModelObjectPath\n\t * @returns Boolean true if filtering is allowed, false otherwise\n\t */\n\t_isFilterableNavigationProperty: function (\n\t\tcolumnInfo: AnnotationTableColumn,\n\t\tcolumnDataModelObjectPath: DataModelObjectPath<unknown>\n\t): boolean {\n\t\tconst isFilterable = isPathFilterable(columnDataModelObjectPath);\n\t\treturn (\n\t\t\t!columnInfo.relativePath.includes(\"/\") ||\n\t\t\t((columnInfo.isPartOfLineItem === true || columnInfo.isPartOfCustomColumn === true) &&\n\t\t\t\t!(isConstant(isFilterable) && isFilterable.value === false))\n\t\t);\n\t},\n\n\t_fetchPropertyInfo: function (\n\t\tmetaModel: MetaModel,\n\t\tcolumnInfo: AnnotationTableColumn,\n\t\ttable: Table,\n\t\tappComponent: AppComponent\n\t): EnhancedFEPropertyInfo {\n\t\tconst sAbsoluteNavigationPath = columnInfo.annotationPath,\n\t\t\toDataField = metaModel.getObject(sAbsoluteNavigationPath),\n\t\t\toNavigationContext = metaModel.createBindingContext(sAbsoluteNavigationPath) as Context,\n\t\t\tisComplexType = columnInfo.typeConfig?.className && columnInfo.typeConfig.className?.indexOf(\"Edm.\") !== 0,\n\t\t\tbFilterable = CommonHelper.isPropertyFilterable(oNavigationContext, oDataField),\n\t\t\tbIsAnalyticalTable = DelegateUtil.getCustomData(table, \"enableAnalytics\") === \"true\",\n\t\t\tlabel = getLocalizedText(columnInfo.label ?? \"\", appComponent ?? table),\n\t\t\ttooltip = getLocalizedText(columnInfo.tooltip ?? \"\", appComponent ?? table),\n\t\t\ttypeConfig = this._getTypeConfig(columnInfo, isComplexType),\n\t\t\tpropertyInfo: EnhancedFEPropertyInfo = {\n\t\t\t\tname: columnInfo.name,\n\t\t\t\tkey: columnInfo.name,\n\t\t\t\tannotationPath: sAbsoluteNavigationPath,\n\t\t\t\tgroupLabel: columnInfo.groupLabel,\n\t\t\t\tgroup: columnInfo.group,\n\t\t\t\tlabel: label,\n\t\t\t\ttooltip: tooltip,\n\t\t\t\tdataType: typeConfig.className,\n\t\t\t\ttypeConfig: typeConfig,\n\t\t\t\tformatOptions:\n\t\t\t\t\tcolumnInfo.typeConfig?.baseType === \"Edm.DateTimeOffset\"\n\t\t\t\t\t\t? { style: \"medium/short\" } /* This condition doesn't have any impact, to be reviewed */\n\t\t\t\t\t\t: columnInfo.typeConfig?.formatOptions,\n\t\t\t\tconstraints: columnInfo.typeConfig?.constraints,\n\t\t\t\tvisible: columnInfo.availability !== \"Hidden\" && !isComplexType,\n\t\t\t\texportSettings: this._setPropertyInfoExportSettings(columnInfo.exportSettings, columnInfo),\n\t\t\t\tunit: columnInfo.unit,\n\t\t\t\ttype: ColumnType.Annotation,\n\t\t\t\trelativePath: columnInfo.relativePath\n\t\t\t};\n\t\tif (propertyInfo.exportSettings?.template) {\n\t\t\tpropertyInfo.clipboardSettings = { template: propertyInfo.exportSettings.template };\n\t\t\t// if I set this clipBoardSettings the copy provider extract the data according to the template in the html property and it is properly copied in excel\n\t\t\t// but when we copy elsewhere we only get the raw data and not the templated data\n\t\t}\n\n\t\t// Set visualSettings only if it exists\n\t\tif (columnInfo.visualSettings && Object.keys(columnInfo.visualSettings).length > 0) {\n\t\t\tpropertyInfo.visualSettings = columnInfo.visualSettings;\n\t\t}\n\n\t\tif (columnInfo.exportDataPointTargetValue) {\n\t\t\tpropertyInfo.exportDataPointTargetValue = columnInfo.exportDataPointTargetValue;\n\t\t}\n\n\t\t// MDC expects  'propertyInfos' only for complex properties.\n\t\t// An empty array throws validation error and undefined value is unhandled.\n\t\tif (columnInfo.propertyInfos?.length) {\n\t\t\tpropertyInfo.propertyInfos = columnInfo.propertyInfos;\n\t\t} else {\n\t\t\t// Add properties which are supported only by simple PropertyInfos.\n\n\t\t\t//get the DataModelObjectPath for the column\n\t\t\tconst columnDataModelObjectPath = getInvolvedDataModelObjects(\n\t\t\t\tmetaModel.getContext(columnInfo.annotationPath),\n\t\t\t\tmetaModel.getContext(DelegateUtil.getCustomData(table, \"metaPath\")!)\n\t\t\t);\n\t\t\tpropertyInfo.path = columnInfo.relativePath;\n\t\t\t// TODO with the new complex property info, a lot of \"Description\" fields are added as filter/sort fields\n\t\t\tpropertyInfo.sortable = columnInfo.sortable;\n\t\t\tif (bIsAnalyticalTable) {\n\t\t\t\tthis._updateAnalyticalPropertyInfoAttributes(propertyInfo, columnInfo);\n\t\t\t}\n\t\t\tpropertyInfo.filterable =\n\t\t\t\tcolumnInfo.filterable !== false &&\n\t\t\t\t!!bFilterable &&\n\t\t\t\tthis._isFilterableNavigationProperty(columnInfo, columnDataModelObjectPath);\n\t\t\tpropertyInfo.isKey = columnInfo.isKey;\n\t\t\tpropertyInfo.groupable = columnInfo.isGroupable;\n\t\t\tif (columnInfo.textArrangement) {\n\t\t\t\tthis._setTextArrangementInfo(propertyInfo, columnInfo, table);\n\t\t\t}\n\t\t\tif (propertyInfo.isKey) {\n\t\t\t\tpropertyInfo.extension = {\n\t\t\t\t\t// MDC needs to fix this, it doesn't make sense for a non Analytical Table\n\t\t\t\t\ttechnicallyGroupable: true\n\t\t\t\t};\n\t\t\t}\n\t\t\tpropertyInfo.caseSensitive = columnInfo.caseSensitive;\n\t\t\tif (columnInfo.additionalLabels) {\n\t\t\t\tpropertyInfo.additionalLabels = columnInfo.additionalLabels.map((additionalLabel: string) => {\n\t\t\t\t\treturn getLocalizedText(additionalLabel, appComponent || table);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tthis._computeVisualSettingsForPropertyWithUnit(table, propertyInfo, columnInfo.unit, columnInfo.unitText, columnInfo.timezoneText);\n\n\t\treturn propertyInfo;\n\t},\n\n\t/**\n\t * Extend the export settings based on the column info.\n\t * @param exportSettings The export settings to be extended\n\t * @param columnInfo The columnInfo object\n\t * @returns The extended export settings\n\t */\n\t_setPropertyInfoExportSettings: function (\n\t\texportSettings: ColumnExportSettings | undefined | null,\n\t\tcolumnInfo: AnnotationTableColumn\n\t): ColumnExportSettings | undefined | null {\n\t\tconst exportFormat = this._getExportFormat(columnInfo.typeConfig?.className);\n\t\tif (exportFormat && exportSettings) {\n\t\t\texportSettings.format = exportFormat;\n\t\t}\n\t\treturn exportSettings;\n\t},\n\n\t/**\n\t * Gets the type config for the given column info.\n\t * @param columnInfo The columnInfo object.\n\t * @param isComplexType Indicates if the dataType is complex.\n\t * @returns The MDC type config.\n\t */\n\t_getTypeConfig(columnInfo: AnnotationTableColumn, isComplexType?: boolean): TypeConfig {\n\t\tlet typeConfig = TypeMap.getTypeConfig(\"sap.ui.model.odata.type.String\"); // MDC expects always a dataType\n\t\tif (columnInfo.typeConfig?.className && isTypeFilterable(columnInfo.typeConfig.className)) {\n\t\t\ttypeConfig = TypeMap.getTypeConfig(\n\t\t\t\tcolumnInfo.typeConfig.className,\n\t\t\t\tcolumnInfo.typeConfig.formatOptions,\n\t\t\t\tcolumnInfo.typeConfig.constraints\n\t\t\t);\n\t\t} else if (columnInfo.typeConfig?.className && !isComplexType) {\n\t\t\ttypeConfig = TypeMap.getTypeConfig(columnInfo.typeConfig.className);\n\t\t}\n\t\treturn typeConfig;\n\t},\n\t/**\n\t * Set the text arrangement info for the column info.\n\t * @param propertyInfo The current propertyInfo object.\n\t * @param columnInfo The columnInfo object.\n\t * @param table The mdc table control.\n\t */\n\t_setTextArrangementInfo: function (propertyInfo: EnhancedFEPropertyInfo, columnInfo: AnnotationTableColumn, table: Table): void {\n\t\tconst descriptionColumn = this.getColumnsFor(table).find(function (oCol) {\n\t\t\treturn oCol.name === columnInfo.textArrangement?.textProperty;\n\t\t});\n\t\tif (descriptionColumn) {\n\t\t\tpropertyInfo.mode = columnInfo.textArrangement!.mode;\n\t\t\tpropertyInfo.valueProperty = columnInfo.relativePath;\n\t\t\tpropertyInfo.descriptionProperty = (descriptionColumn as EnhancedFEPropertyInfo).relativePath;\n\t\t}\n\t\tpropertyInfo.text = columnInfo.textArrangement?.textProperty;\n\t},\n\n\t_updateAnalyticalPropertyInfoAttributes(propertyInfo: PropertyInfo, columnInfo: AnnotationTableColumn) {\n\t\tif (columnInfo.aggregatable) {\n\t\t\tpropertyInfo.aggregatable = columnInfo.aggregatable;\n\t\t}\n\t\tif (columnInfo.extension) {\n\t\t\tpropertyInfo.extension = columnInfo.extension;\n\t\t}\n\t},\n\n\t_fetchComputedPropertyInfo: function (columnInfo: ComputedTableColumn, table: Table) {\n\t\tconst label = getLocalizedText(columnInfo.label, table); // Todo: To be removed once MDC provides translation support\n\t\tconst propertyInfo: PropertyInfo = {\n\t\t\tkey: columnInfo.name,\n\t\t\tlabel: label.toString(),\n\t\t\tdataType: \"sap.ui.model.odata.type.String\",\n\t\t\tvisible: columnInfo.availability !== \"Hidden\",\n\t\t\tfilterable: false,\n\t\t\tsortable: false,\n\t\t\tgroupable: false,\n\t\t\texportSettings: columnInfo.exportSettings,\n\t\t\tclipboardSettings: columnInfo.clipboardSettings as PropertyInfo[\"clipboardSettings\"]\n\t\t};\n\t\tif (columnInfo.propertyInfos !== undefined && columnInfo.propertyInfos.length > 0) {\n\t\t\tpropertyInfo.propertyInfos = columnInfo.propertyInfos;\n\t\t}\n\t\treturn propertyInfo;\n\t},\n\n\t_fetchCustomPropertyInfo: function (columnInfo: CustomBasedTableColumn, table: Table, appComponent: AppComponent) {\n\t\tlet label;\n\t\tif (columnInfo.header) {\n\t\t\tif (columnInfo.header.startsWith(\"{metaModel>\")) {\n\t\t\t\tlabel = ModelHelper.fetchTextFromMetaModel(columnInfo.header, undefined, (table.getModel() as ODataModel).getMetaModel());\n\t\t\t} else {\n\t\t\t\tlabel = getLocalizedText(columnInfo.header, appComponent); // Todo: To be removed once MDC provides translation support\n\t\t\t}\n\t\t}\n\t\tconst propertyInfo: PropertyInfo = {\n\t\t\tkey: columnInfo.name,\n\t\t\tgroupLabel: undefined,\n\t\t\tgroup: undefined,\n\t\t\tlabel: label ?? \"\",\n\t\t\tdataType: \"sap.ui.model.odata.type.String\",\n\t\t\tvisible: columnInfo.availability !== \"Hidden\",\n\t\t\texportSettings: columnInfo.exportSettings,\n\t\t\tvisualSettings: columnInfo.visualSettings as PropertyInfo[\"visualSettings\"]\n\t\t};\n\n\t\t// MDC expects 'propertyInfos' only for complex properties.\n\t\t// An empty array throws validation error and undefined value is unhandled.\n\t\tif (columnInfo.propertyInfos && columnInfo.propertyInfos.length) {\n\t\t\tpropertyInfo.propertyInfos = columnInfo.propertyInfos;\n\t\t} else {\n\t\t\t// Add properties which are supported only by simple PropertyInfos.\n\t\t\tpropertyInfo.path = columnInfo.name;\n\t\t\tpropertyInfo.sortable = false;\n\t\t\tpropertyInfo.filterable = false;\n\t\t}\n\t\treturn propertyInfo;\n\t},\n\t_bColumnHasPropertyWithDraftIndicator: function (oColumnInfo: TableColumn): boolean {\n\t\treturn !!(\n\t\t\t(oColumnInfo.formatOptions && oColumnInfo.formatOptions.hasDraftIndicator) ||\n\t\t\t(oColumnInfo.formatOptions && oColumnInfo.formatOptions.fieldGroupDraftIndicatorPropertyPath)\n\t\t);\n\t},\n\t_updateDraftIndicatorModel: function (_oTable: Table, _oColumnInfo: TableColumn): void {\n\t\tconst aVisibleColumns = _oTable.getColumns();\n\t\tconst oInternalBindingContext = _oTable.getBindingContext(\"internal\");\n\t\tconst sInternalPath = oInternalBindingContext && oInternalBindingContext.getPath();\n\t\tif (aVisibleColumns && oInternalBindingContext) {\n\t\t\tfor (const index in aVisibleColumns) {\n\t\t\t\tif (\n\t\t\t\t\tthis._bColumnHasPropertyWithDraftIndicator(_oColumnInfo) &&\n\t\t\t\t\t_oColumnInfo.name === aVisibleColumns[index].getPropertyKey()\n\t\t\t\t) {\n\t\t\t\t\tif (oInternalBindingContext.getProperty(sInternalPath + SEMANTICKEY_HAS_DRAFTINDICATOR) === undefined) {\n\t\t\t\t\t\toInternalBindingContext.setProperty(sInternalPath + SEMANTICKEY_HAS_DRAFTINDICATOR, _oColumnInfo.name);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\t_fetchPropertiesForEntity: async function (\n\t\ttable: Table,\n\t\tentityTypePath: string,\n\t\tmetaModel: ODataMetaModel,\n\t\tappComponent: AppComponent\n\t): Promise<PropertyInfo[]> {\n\t\t// when fetching properties, this binding context is needed - so lets create it only once and use if for all properties/data-fields/line-items\n\t\tconst bindingPath = ModelHelper.getEntitySetPath(entityTypePath);\n\t\tlet fetchedProperties: PropertyInfo[] = [];\n\t\tconst nonFilterableProperties = CommonUtils.getFilterRestrictionsByPath(bindingPath, metaModel).NonFilterableProperties;\n\t\treturn Promise.resolve(this.getColumnsFor(table))\n\t\t\t.then((columns: TableColumn[]) => {\n\t\t\t\t// DraftAdministrativeData does not work via 'entitySet/$NavigationPropertyBinding/DraftAdministrativeData'\n\t\t\t\tif (columns) {\n\t\t\t\t\tlet propertyInfo;\n\t\t\t\t\tcolumns.forEach((columnInfo) => {\n\t\t\t\t\t\tthis._updateDraftIndicatorModel(table, columnInfo);\n\t\t\t\t\t\tswitch (columnInfo.type) {\n\t\t\t\t\t\t\tcase \"Annotation\":\n\t\t\t\t\t\t\t\tpropertyInfo = this._fetchPropertyInfo(metaModel, columnInfo as AnnotationTableColumn, table, appComponent);\n\t\t\t\t\t\t\t\tif (propertyInfo && !nonFilterableProperties.includes((propertyInfo as AnnotationTableColumn).name)) {\n\t\t\t\t\t\t\t\t\tpropertyInfo.maxConditions = DelegateUtil.isMultiValue(propertyInfo as AnnotationTableColumn) ? -1 : 1;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase \"Computed\":\n\t\t\t\t\t\t\t\tpropertyInfo = this._fetchComputedPropertyInfo(columnInfo as ComputedTableColumn, table);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase \"Slot\":\n\t\t\t\t\t\t\tcase \"Default\":\n\t\t\t\t\t\t\t\tpropertyInfo = this._fetchCustomPropertyInfo(columnInfo as CustomBasedTableColumn, table, appComponent);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tthrow new Error(`unhandled switch case ${columnInfo.type}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfetchedProperties.push(propertyInfo as EnhancedFEPropertyInfo);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\tfetchedProperties = this._updatePropertyInfo(table, fetchedProperties as EnhancedFEPropertyInfo[]);\n\t\t\t\tconst tableAPI = this._getTableAPI(table);\n\t\t\t\ttableAPI.setEnhancedFetchedPropertyInfos(fetchedProperties as EnhancedFEPropertyInfo[]);\n\t\t\t\tfetchedProperties = tableAPI.getPropertyInfos();\n\t\t\t\treturn;\n\t\t\t})\n\t\t\t.catch(function (err) {\n\t\t\t\tLog.error(`An error occurs while updating fetched properties: ${err as string}`);\n\t\t\t})\n\t\t\t.then(function () {\n\t\t\t\treturn fetchedProperties;\n\t\t\t});\n\t},\n\n\t_getCachedOrFetchPropertiesForEntity: async function (\n\t\ttable: Table,\n\t\tentityTypePath: string,\n\t\tmetaModel: ODataMetaModel,\n\t\tappComponent: AppComponent\n\t): Promise<PropertyInfo[]> {\n\t\tconst tableAPI = this._getTableAPI(table);\n\t\tconst fetchedProperties = tableAPI.getCachedPropertyInfos();\n\t\tif (fetchedProperties.length) {\n\t\t\treturn Promise.resolve(fetchedProperties);\n\t\t}\n\t\treturn this._fetchPropertiesForEntity(table, entityTypePath, metaModel, appComponent).then(function (\n\t\t\tsubFetchedProperties: PropertyInfo[]\n\t\t) {\n\t\t\ttableAPI.setCachedPropertyInfos(subFetchedProperties);\n\t\t\treturn subFetchedProperties;\n\t\t});\n\t},\n\tsetNoDataInformation: function (table: Table, illustratedMessageInformation: $IllustratedMessageSettings): void {\n\t\tconst noDataAggregation = table.getNoData();\n\t\tif (typeof noDataAggregation != \"string\" && (noDataAggregation as Control)?.isA(\"sap.m.IllustratedMessage\")) {\n\t\t\tconst currentIllustratedMessage = noDataAggregation as IllustratedMessage;\n\t\t\t// We override the current values of the IllustratedMessage\n\t\t\tcurrentIllustratedMessage.setTitle(illustratedMessageInformation.title);\n\t\t\tcurrentIllustratedMessage.setDescription(illustratedMessageInformation.description);\n\t\t\tcurrentIllustratedMessage.setIllustrationType(illustratedMessageInformation.illustrationType);\n\t\t\tcurrentIllustratedMessage.setIllustrationSize(illustratedMessageInformation.illustrationSize);\n\t\t} else {\n\t\t\tconst illustratedMessage = new IllustratedMessage({\n\t\t\t\t...illustratedMessageInformation\n\t\t\t});\n\t\t\ttable.setNoData(illustratedMessage);\n\t\t}\n\t},\n\n\tsetTableNoDataIllustratedMessage: function (table: Table, bindingInfo: CollectionBindingInfo) {\n\t\tconst tableFilterInfo = TableUtils.getAllFilterInfo(table);\n\t\tconst resourceModel = getResourceModel(table);\n\t\tconst suffixResourceKey = bindingInfo.path?.startsWith(\"/\") ? bindingInfo.path.substring(1) : bindingInfo.path;\n\t\tlet illustratedInformation: $IllustratedMessageSettings;\n\n\t\tconst getNoDataIllustratedMessageWithFilters = function (): $IllustratedMessageSettings {\n\t\t\tif (table.data(\"hiddenFilters\") || table.getQuickFilter()) {\n\t\t\t\treturn {\n\t\t\t\t\ttitle: resourceModel.getText(\"T_ILLUSTRATED_MESSAGE_TITLE_NOSEARCHRESULTS\"),\n\t\t\t\t\tdescription: resourceModel.getText(\"M_TABLE_AND_CHART_NO_DATA_TEXT_MULTI_VIEW\", undefined, suffixResourceKey),\n\t\t\t\t\tillustrationType: IllustratedMessageType.NoSearchResults\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn {\n\t\t\t\ttitle: resourceModel.getText(\"T_ILLUSTRATED_MESSAGE_TITLE_NOSEARCHRESULTS\"),\n\t\t\t\tdescription: resourceModel.getText(\"T_TABLE_AND_CHART_NO_DATA_TEXT_WITH_FILTER\", undefined, suffixResourceKey),\n\t\t\t\tillustrationType: IllustratedMessageType.NoSearchResults\n\t\t\t};\n\t\t};\n\n\t\tconst filterAssociation = table.getFilter();\n\t\tconst hasFilterOrSearch = tableFilterInfo.search || tableFilterInfo.filters?.length;\n\t\tif (filterAssociation && !/BasicSearch$/.test(filterAssociation)) {\n\t\t\t// check if a FilterBar is associated to the Table (basic search on toolBar is excluded)\n\t\t\tif (hasFilterOrSearch) {\n\t\t\t\t// check if table has any Filterbar filters or personalization filters\n\t\t\t\tillustratedInformation = getNoDataIllustratedMessageWithFilters();\n\t\t\t} else {\n\t\t\t\tillustratedInformation = {\n\t\t\t\t\ttitle: resourceModel.getText(\"T_ILLUSTRATED_MESSAGE_TITLE_NOSEARCHRESULTS\"),\n\t\t\t\t\tdescription: resourceModel.getText(\"T_TABLE_AND_CHART_NO_DATA_TEXT\", undefined, suffixResourceKey),\n\t\t\t\t\tillustrationType: IllustratedMessageType.NoSearchResults\n\t\t\t\t};\n\t\t\t}\n\t\t} else if (hasFilterOrSearch) {\n\t\t\t//check if table has any personalization filters\n\t\t\tillustratedInformation = getNoDataIllustratedMessageWithFilters();\n\t\t} else {\n\t\t\tillustratedInformation = {\n\t\t\t\ttitle: resourceModel.getText(\"T_ILLUSTRATED_MESSAGE_TITLE_NODATA\"),\n\t\t\t\tdescription: resourceModel.getText(\"M_TABLE_AND_CHART_NO_FILTERS_NO_DATA_TEXT\", undefined, suffixResourceKey),\n\t\t\t\tillustrationType: IllustratedMessageType.NoData\n\t\t\t};\n\t\t}\n\t\tif (CommonUtils.getTargetView(table).getViewData().liveMode) {\n\t\t\tif (hasFilterOrSearch) {\n\t\t\t\tillustratedInformation = getNoDataIllustratedMessageWithFilters();\n\t\t\t} else {\n\t\t\t\tillustratedInformation = {\n\t\t\t\t\ttitle: resourceModel.getText(\"T_ILLUSTRATED_MESSAGE_TITLE_NOSEARCHRESULTS\"),\n\t\t\t\t\tdescription: resourceModel.getText(\"M_TABLE_AND_CHART_NO_FILTERS_NO_DATA_TEXT\"),\n\t\t\t\t\tillustrationType: IllustratedMessageType.NoSearchResults\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t\tconst tableAPI = this._getTableAPI(table);\n\t\tillustratedInformation.illustrationSize = tableAPI.getNoDataMessageMode();\n\n\t\tif (illustratedInformation.illustrationSize === \"text\") {\n\t\t\tconst currentNoData = table.getNoData();\n\t\t\tif (typeof currentNoData === \"string\" && currentNoData === illustratedInformation.description) {\n\t\t\t\t// We don't change the noData aggregation unnecessary.\n\t\t\t\treturn;\n\t\t\t}\n\t\t\ttable.setNoData(illustratedInformation.description);\n\t\t} else {\n\t\t\tthis.setNoDataInformation(table, illustratedInformation);\n\t\t}\n\t},\n\n\t/**\n\t * Handles the dataRequested event for the table binding to set up table defaults.\n\t * @param oTable The MDC table instance\n\t * @param oInternalModelContext The internal model context for the table\n\t */\n\thandleTableDataRequested: function (oTable: Table, oInternalModelContext: InternalModelContext): void {\n\t\tconst oBinding = oTable && oTable.getRowBinding(),\n\t\t\tbDataRequestedAttached = oInternalModelContext && oInternalModelContext.getProperty(\"dataRequestedAttached\");\n\t\tif (oInternalModelContext && !bDataRequestedAttached) {\n\t\t\toBinding.attachDataRequested(() => {\n\t\t\t\tif (!oInternalModelContext.getProperty(\"dataRequestedTimeoutSet\")) {\n\t\t\t\t\toInternalModelContext.setProperty(\"dataRequestedTimeoutSet\", true);\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\toInternalModelContext.setProperty(\"dataRequestedTimeoutSet\", false);\n\t\t\t\t\t\tconst oTableAPI = oTable ? (oTable.getParent() as TableAPI) : null;\n\t\t\t\t\t\tif (oTableAPI) {\n\t\t\t\t\t\t\toTableAPI.tableDefaultsPromise = (oTableAPI.getTableDefaults(oTable) ?? Promise.resolve({})) as Promise<object>;\n\t\t\t\t\t\t}\n\t\t\t\t\t}, 0);\n\t\t\t\t}\n\t\t\t});\n\t\t\toInternalModelContext.setProperty(\"dataRequestedAttached\", true);\n\t\t}\n\t},\n\n\thandleTableDataReceived: function (oTable: Table, oInternalModelContext: InternalModelContext): void {\n\t\tconst oBinding = oTable && oTable.getRowBinding(),\n\t\t\tbDataReceivedAttached = oInternalModelContext && oInternalModelContext.getProperty(\"dataReceivedAttached\");\n\t\tif (oInternalModelContext && !bDataReceivedAttached) {\n\t\t\toBinding.attachDataReceived(() => {\n\t\t\t\t// as the dataReceived event is fired multiple times, we need to ensure that the event is only handled once\n\t\t\t\tif (!oInternalModelContext.getProperty(\"dataReceivedTimeoutSet\")) {\n\t\t\t\t\toInternalModelContext.setProperty(\"dataReceivedTimeoutSet\", true);\n\t\t\t\t\tsetTimeout(async () => {\n\t\t\t\t\t\toInternalModelContext.setProperty(\"dataReceivedTimeoutSet\", false);\n\t\t\t\t\t\t// Refresh the selected contexts to trigger re-calculation of enabled state of actions.\n\t\t\t\t\t\toInternalModelContext.setProperty(\"selectedContexts\", []);\n\t\t\t\t\t\tconst aSelectedContexts = oTable.getSelectedContexts() as ODataV4Context[];\n\t\t\t\t\t\toInternalModelContext.setProperty(\"selectedContexts\", aSelectedContexts);\n\t\t\t\t\t\toInternalModelContext.setProperty(\"numberOfSelectedContexts\", aSelectedContexts.length);\n\t\t\t\t\t\tconst tableAPI = this._getTableAPI(oTable);\n\t\t\t\t\t\tconst oActionOperationAvailableMap = JSON.parse(tableAPI.tableDefinition.operationAvailableMap);\n\t\t\t\t\t\tActionRuntime.setActionEnablement(oInternalModelContext, oActionOperationAvailableMap, aSelectedContexts, \"table\");\n\t\t\t\t\t\t// Refresh enablement of delete button\n\t\t\t\t\t\tDeleteHelper.updateDeleteInfoForSelectedContexts(oInternalModelContext, aSelectedContexts);\n\t\t\t\t\t\tif (tableAPI) {\n\t\t\t\t\t\t\tconst tableDefaultData = await tableAPI.tableDefaultsPromise?.catch(() => undefined);\n\t\t\t\t\t\t\tawait tableAPI.setUpEmptyRows(oTable, false, tableDefaultData);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis._updateAvailableCards(oTable);\n\t\t\t\t\t}, 0);\n\t\t\t\t}\n\t\t\t});\n\t\t\toInternalModelContext.setProperty(\"dataReceivedAttached\", true);\n\t\t}\n\t},\n\n\t/**\n\t * Set the optimistic batch promise for the enabler callback function.\n\t * @param controller The controller\n\t * @param tableAPI The TableAPI\n\t */\n\tsetOptimisticBatchPromiseForModel: function (controller: ListReportController, tableAPI: TableAPI): void {\n\t\tconst model = controller.getAppComponent().getModel();\n\t\tif (model) {\n\t\t\ttableAPI.setOptimisticBatchEnablerPromise(new PromiseKeeper<boolean>());\n\t\t\tthis.setOptimisticBatchForModel(controller, model, tableAPI);\n\t\t}\n\t},\n\n\t/**\n\t * Enable the optimistic batch mode if available.\n\t * @param controller\n\t * @param table\n\t */\n\tenableOptimisticBatchMode: function (controller: ListReportController, table: Table): void {\n\t\tconst filtersPropertiesAsPotentiallySensitiveDataOrDateType =\n\t\t\ttable && TableUtils.isFilterEligibleForOptimisticBatch(table, controller._getFilterBarControl() as FilterBar);\n\t\tconst tableAPI = this._getTableAPI(table);\n\t\ttableAPI.getOptimisticBatchEnablerPromise()?.resolve(!filtersPropertiesAsPotentiallySensitiveDataOrDateType);\n\t},\n\n\t/**\n\t * Setter for the optimistic batch enabler callback function.\n\t * @param controller\n\t * @param dataModel The OData Model\n\t * @param tableAPI The TableAPI\n\t * @see {sap.ui.model.odata.v4.ODataModel#setOptimisticBatchEnabler} for further information.\n\t */\n\tsetOptimisticBatchForModel: function (controller: ListReportController, dataModel: ODataModel, tableAPI: TableAPI): void {\n\t\tconst isOptimisticBatchHasToBeEnabled = controller.getAppComponent().getShellServices().isFlpOptimisticBatchPluginLoaded();\n\t\tif (dataModel.getOptimisticBatchEnabler() === null && !tableAPI.isOptimisticBatchDisabled() && isOptimisticBatchHasToBeEnabled) {\n\t\t\tconst optimisticBatchEnablerPromiseKeeper = tableAPI.getOptimisticBatchEnablerPromise();\n\t\t\tdataModel.setOptimisticBatchEnabler(function (): Promise<boolean> | undefined {\n\t\t\t\treturn optimisticBatchEnablerPromiseKeeper?.promise;\n\t\t\t});\n\t\t}\n\t},\n\n\trebind: async function (oTable: Table, oBindingInfo: BaseAggregationBindingInfo): Promise<void> {\n\t\tconst tableAPI = this._getTableAPI(oTable);\n\n\t\tconst bIsSuspended = tableAPI?.getProperty(\"bindingSuspended\");\n\t\ttableAPI?.setProperty(\"outDatedBinding\", bIsSuspended);\n\t\tif (!bIsSuspended) {\n\t\t\tTableRuntime.clearSelection(oTable);\n\t\t\tTableDelegateBase.rebind.apply(this, [oTable, oBindingInfo]);\n\t\t\tTableUtils.onTableBound(oTable);\n\t\t\treturn TableUtils.whenBound(oTable)\n\t\t\t\t.then((table: Table): void => {\n\t\t\t\t\tthis.handleTableDataRequested(table, table.getBindingContext(\"internal\") as InternalModelContext);\n\t\t\t\t\tthis.handleTableDataReceived(table, table.getBindingContext(\"internal\") as InternalModelContext);\n\t\t\t\t\treturn;\n\t\t\t\t})\n\t\t\t\t.catch(function (oError) {\n\t\t\t\t\tLog.error(\"Error while waiting for the table to be bound\", oError as string);\n\t\t\t\t});\n\t\t}\n\t\treturn Promise.resolve();\n\t},\n\n\t/**\n\t * Fetches the relevant metadata for the table and returns property info array.\n\t * @param table Instance of the MDCtable\n\t * @returns Array of property info\n\t */\n\tfetchProperties: async function (table: Table): Promise<PropertyInfo[]> {\n\t\treturn DelegateUtil.fetchModel(table)\n\t\t\t.then(async (model): Promise<PropertyInfo[]> => {\n\t\t\t\tconst appComponent = CommonUtils.getAppComponent(table);\n\t\t\t\treturn this._getCachedOrFetchPropertiesForEntity(\n\t\t\t\t\ttable,\n\t\t\t\t\tDelegateUtil.getCustomData<string>(table, \"entityType\") ?? \"\",\n\t\t\t\t\tmodel.getMetaModel() as ODataMetaModel,\n\t\t\t\t\tappComponent\n\t\t\t\t);\n\t\t\t})\n\t\t\t.then((properties) => {\n\t\t\t\t(table.getBindingContext(\"internal\") as Context)?.setProperty(\"tablePropertiesAvailable\", true);\n\t\t\t\treturn properties;\n\t\t\t});\n\t},\n\n\tpreInit: async function (table: Table): Promise<void> {\n\t\treturn (TableDelegateBase.preInit as (table: Table) => Promise<void>).apply(this, [table]).then(() => {\n\t\t\t/**\n\t\t\t * Set the binding context to null for every fast creation row to avoid inheriting\n\t\t\t * the wrong context and requesting the table columns on the parent entity\n\t\t\t * Set the correct binding context in ObjectPageController.enableFastCreationRow()\n\t\t\t */\n\t\t\tconst fastCreationRow = table.getCreationRow();\n\t\t\tif (fastCreationRow) {\n\t\t\t\tfastCreationRow.setBindingContext(null as unknown as Context);\n\t\t\t}\n\t\t\treturn;\n\t\t});\n\t},\n\tupdateBindingInfo: function (table: Table, bindingInfo: CollectionBindingInfo) {\n\t\tconst internalBindingContext = table.getBindingContext(\"internal\") as InternalModelContext | undefined;\n\t\tconst tableAPI = this._getTableAPI(table);\n\t\tconst quickFilter = table.getQuickFilter() as QuickFilterSelector | undefined;\n\t\tconst collectionBindingInfoAPI = new CollectionBindingInfoAPI(bindingInfo);\n\t\tinternalBindingContext?.setProperty(\"isInsightsEnabled\", true);\n\t\tTableDelegateBase.updateBindingInfo.apply(this, [table, bindingInfo]);\n\t\ttry {\n\t\t\tthis._handleSortersOnCurrenciesOrUoM(table, bindingInfo);\n\t\t\tthis._internalUpdateBindingInfo(table, bindingInfo);\n\t\t\tthis.setTableNoDataIllustratedMessage(table, bindingInfo);\n\t\t\tthis._handleRecommendationOutputFields(table, bindingInfo);\n\t\t\tthis._handleFiltersForExternalID(table, bindingInfo);\n\n\t\t\ttableAPI?.fireEvent(\"beforeRebindTable\", {\n\t\t\t\tcollectionBindingInfo: collectionBindingInfoAPI,\n\t\t\t\tquickFilterKey: quickFilter?.getSelectedKey()\n\t\t\t});\n\t\t\tconst attachedEvents = collectionBindingInfoAPI.getAttachedEvents();\n\t\t\t/**\n\t\t\t * We have to set the binding context to null for every fast creation row to avoid it inheriting\n\t\t\t * the wrong context and requesting the table columns for the parent entity\n\t\t\t * The correct binding context is set in ObjectPageController.enableFastCreationRow()\n\t\t\t */\n\t\t\tconst context = table.getBindingContext();\n\t\t\t// eslint-disable-next-line deprecation/deprecation\n\t\t\tif (table.getCreationRow()?.getBindingContext() === null && bindingInfo.path && context) {\n\t\t\t\tTableHelper.enableFastCreationRow(\n\t\t\t\t\t// eslint-disable-next-line deprecation/deprecation\n\t\t\t\t\ttable.getCreationRow(),\n\t\t\t\t\tbindingInfo.path,\n\t\t\t\t\tcontext as v4Context,\n\t\t\t\t\ttable.getModel() as ODataModel,\n\t\t\t\t\tPromise.resolve()\n\t\t\t\t);\n\t\t\t}\n\t\t\ttableAPI.setAttachEvents(attachedEvents);\n\t\t} catch (e) {\n\t\t\tLog.error(\"Error while updating the binding info\", e as string);\n\t\t}\n\t},\n\n\t_handleSortersOnCurrenciesOrUoM: function (table: Table, bindingInfo: CollectionBindingInfo) {\n\t\tconst sorters: Sorter[] | undefined = bindingInfo.sorter;\n\t\tconst newSortersToBeApplied: Sorter[] = [];\n\t\tif (sorters?.length) {\n\t\t\tconst tableAPI = this._getTableAPI(table);\n\t\t\tconst tableProperties = tableAPI.getCachedPropertyInfos();\n\t\t\tfor (const sorter of sorters) {\n\t\t\t\tconst tableProperty = tableProperties?.find((property) => property.path === sorter.getPath());\n\t\t\t\tif (tableProperty?.unit) {\n\t\t\t\t\tconst unitProperty = tableProperties?.find((property) => property.key === tableProperty?.unit);\n\t\t\t\t\tconst unitSorterAvailable = unitProperty?.path && sorters.some((sort) => sort.getPath() === unitProperty.path);\n\t\t\t\t\tif (!unitSorterAvailable && unitProperty?.sortable !== false && unitProperty?.path) {\n\t\t\t\t\t\tnewSortersToBeApplied.push(new Sorter(unitProperty.path, false));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tnewSortersToBeApplied.push(sorter);\n\t\t\t}\n\t\t\tbindingInfo.sorter = newSortersToBeApplied;\n\t\t}\n\t},\n\n\t_handleFiltersForExternalID: function (table: Table, bindingInfo: CollectionBindingInfo) {\n\t\tconst metaModel = (table.getModel() as ODataModel)?.getMetaModel();\n\t\tconst entityTypePath = bindingInfo.path + \"/\";\n\t\tconst filters = bindingInfo.filters?.getFilters();\n\t\tif (filters !== undefined) {\n\t\t\tTableUtils.updateFiltersForExternalID(metaModel, filters as unknown as ConditionObject[], entityTypePath);\n\t\t}\n\t},\n\n\t_handleRecommendationOutputFields: function (table: Table, oBindingInfo: CollectionBindingInfo) {\n\t\tconst tableAPI = this._getTableAPI(table);\n\t\tconst controller = tableAPI?.getPageController();\n\t\tif (controller?.recommendations.isRecommendationEnabled()) {\n\t\t\tconst appComponent = controller.getAppComponent();\n\t\t\tconst tableDef = tableAPI.getTableDefinition();\n\t\t\tconst recommendationOutputProperties = appComponent\n\t\t\t\t.getSideEffectsService()\n\t\t\t\t.getRecommendationOutputFields(tableDef.annotation.entityTypeName);\n\t\t\tif (recommendationOutputProperties && recommendationOutputProperties.length > 0 && oBindingInfo.parameters) {\n\t\t\t\toBindingInfo.parameters.$select = oBindingInfo.parameters?.$select?.concat(\",\", recommendationOutputProperties.join());\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Update the cards when the binding is refreshed.\n\t * @param table The mdc table control.\n\t */\n\t_updateAvailableCards: async function (table: Table): Promise<void> {\n\t\tconst tableAPI = this._getTableAPI(table);\n\t\tif (tableAPI.getPageController().getView().getViewData()?.converterType === \"ListReport\") {\n\t\t\tconst appComponent = tableAPI?.getPageController()?.getAppComponent();\n\t\t\tconst cards: WrappedCard[] = [];\n\t\t\tawait tableAPI.collectAvailableCards(cards);\n\t\t\tconst collaborationManager = new CollaborationManager();\n\t\t\tconst cardObject = collaborationManager.updateCards(cards);\n\t\t\tconst parentAppId = appComponent.getId();\n\t\t\tappComponent\n\t\t\t\t.getCollaborationManagerService()\n\t\t\t\t.addCardsToCollaborationManager(cardObject, parentAppId, tableAPI.getPageController().getView().getId());\n\t\t\tappComponent.getCollaborationManagerService().shareAvailableCards();\n\t\t}\n\t},\n\n\t/**\n\t * The hook implemented by MDC that we can override.\n\t * This allows us to define properties to be requested in the MDC table (Main case is for the analytical table).\n\t * @param table The mdc table control.\n\t * @returns An array of property name to be requested.\n\t */\n\tgetInResultPropertyKeys: function (table: MDCTable): string[] {\n\t\tconst tableAPI = this._getTableAPI(table);\n\t\tif (tableAPI.tableDefinition.control.analyticalConfiguration?.aggregationOnLeafLevel) {\n\t\t\tconst allKkeysRequested = this.checkAllKeysAreRequested(tableAPI);\n\t\t\tconst internalBindingContext = table.getBindingContext(\"internal\");\n\t\t\t// if a rowpress is overridden, we  should enable the navigation at the node level\n\t\t\tinternalBindingContext?.setProperty(\"isNodeLevelNavigable\", tableAPI.overrideRowPress ? true : allKkeysRequested);\n\t\t\treturn (\n\t\t\t\tObject.keys(tableAPI.tableDefinition.requestAtLeast)\n\t\t\t\t\t// for analytic tables with aggregationOnLeafLevel we should not request the semanticKey expected when all keys are requested ->  it will permits to navigate from a node level when semanticKey are enabled\n\t\t\t\t\t// restriction are also excluded as we cannot destinguish between a node and a aggregation level\n\n\t\t\t\t\t.filter((fieldName: string) =>\n\t\t\t\t\t\t!allKkeysRequested\n\t\t\t\t\t\t\t? tableAPI.tableDefinition.requestAtLeast[fieldName].some(\n\t\t\t\t\t\t\t\t\t(origin) => origin !== \"restriction\" && origin !== \"semanticKey\"\n\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t: true\n\t\t\t\t\t)\n\t\t\t);\n\t\t}\n\t\treturn Object.keys(tableAPI.tableDefinition.requestAtLeast ?? {});\n\t},\n\n\t/**\n\t * Check if all keys() excepted IsActiveEntity) are requested in the table.\n\t * @param tableAPI The table API\n\t * @returns  True if all keys are requested, false otherwise\n\t */\n\tcheckAllKeysAreRequested: function (tableAPI: TableAPI): boolean {\n\t\tconst table = tableAPI.getContent();\n\t\tconst allColumns = tableAPI.getTableDefinition().columns as (TableColumn & { isKey: boolean; relativePath: string })[];\n\t\tconst keyPropertyNames = allColumns\n\t\t\t.filter((c) => c.isKey && c.relativePath && c.relativePath !== \"IsActiveEntity\")\n\t\t\t.map((c) => c.relativePath);\n\n\t\tconst displayedColumns = table\n\t\t\t.getColumns()\n\t\t\t.map((column) => tableAPI.getTableDefinition().columns.find((c) => c.name === column.getPropertyKey()));\n\n\t\t// Store all properties referenced by displayed columns in a Set\n\t\tconst referencedPropertyPaths = new Set<string>();\n\t\tfunction processColumn(col: AnnotationTableColumn): void {\n\t\t\t// Add the property name from column itself if it's not a complex propertyInfo\n\t\t\tif (col.relativePath && col.propertyInfos === undefined) {\n\t\t\t\treferencedPropertyPaths.add(col.relativePath);\n\t\t\t}\n\n\t\t\t// Add the additional properties referenced by the column\n\t\t\tcol.extension?.additionalProperties?.forEach((additionalColumnName) => {\n\t\t\t\tconst additionalColumn = allColumns.find((c) => c.name === additionalColumnName);\n\t\t\t\tif (additionalColumn?.relativePath) {\n\t\t\t\t\treferencedPropertyPaths.add(additionalColumn.relativePath);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tdisplayedColumns.forEach((column) => {\n\t\t\tif (!column) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// Process the column itself\n\t\t\tprocessColumn(column as AnnotationTableColumn);\n\n\t\t\t// Process the columns referenced by the column\n\t\t\tcolumn.propertyInfos?.forEach((relatedColumnName) => {\n\t\t\t\tconst relatedColumn = allColumns.find((c) => c.name === relatedColumnName);\n\t\t\t\tif (relatedColumn) {\n\t\t\t\t\tprocessColumn(relatedColumn as AnnotationTableColumn);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\treturn keyPropertyNames.every((propName) => propName && referencedPropertyPaths.has(propName));\n\t},\n\t/**\n\t * Gets the search query for analytical and non analytical odataListBinding.\n\t * @param binding The oDataListBinding instance.\n\t * @returns The search query if available, otherwise undefined.\n\t */\n\tgetSearchQuery: function (binding: ODataListBinding): string | undefined {\n\t\tconst aggregation = binding.getAggregation?.() as Record<string, unknown> | undefined;\n\t\tif (aggregation?.search !== undefined) {\n\t\t\t// For analytical tables, the search query is stored in the aggregation\n\t\t\treturn aggregation.search as string;\n\t\t}\n\t\t// If not found in aggregation, check the query options\n\t\treturn binding.getQueryOptionsFromParameters().$search;\n\t},\n\tupdateBinding: function (table: MDCTable, bindingInfo: CollectionBindingInfo, binding?: ODataListBinding): void {\n\t\tconst tableAPI = this._getTableAPI(table);\n\t\tconst bIsSuspended = tableAPI?.getProperty(\"bindingSuspended\");\n\t\tif (!bIsSuspended) {\n\t\t\t// if the rowBindingInfo has a $$getKeepAliveContext parameter we need to check it is the only Table with such a\n\t\t\t// parameter for the collectionMetaPath\n\t\t\tif (bindingInfo.parameters?.$$getKeepAliveContext === true) {\n\t\t\t\tconst collectionPath = DelegateUtil.getCustomData<string>(table, \"targetCollectionPath\") ?? \"\";\n\t\t\t\tconst internalModel = table.getModel(\"internal\") as JSONModel;\n\t\t\t\tconst keptAliveLists = internalModel?.getObject(\"/keptAliveLists\") ?? {};\n\t\t\t\tif (!keptAliveLists[collectionPath]) {\n\t\t\t\t\tkeptAliveLists[collectionPath] = table.getId();\n\t\t\t\t\tinternalModel?.setProperty(\"/keptAliveLists\", keptAliveLists);\n\t\t\t\t} else if (keptAliveLists[collectionPath] !== table.getId()) {\n\t\t\t\t\tdelete bindingInfo.parameters.$$getKeepAliveContext;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet needManualRefresh = false;\n\t\t\tconst view = CommonUtils.getTargetView(table);\n\t\t\tconst internalBindingContext = table.getBindingContext(\"internal\");\n\t\t\tconst manualUpdatePropertyKey = \"pendingManualBindingUpdate\";\n\t\t\tconst pendingManualUpdate = internalBindingContext?.getProperty(manualUpdatePropertyKey) as boolean;\n\t\t\tconst newSorters = JSON.stringify(bindingInfo.sorter ?? []);\n\n\t\t\tif (binding) {\n\t\t\t\t/**\n\t\t\t\t * Manual refresh if filters are not changed by binding.refresh() since updating the bindingInfo\n\t\t\t\t * is not enough to trigger a batch request.\n\t\t\t\t * Removing columns creates one batch request that was not executed before\n\t\t\t\t */\n\t\t\t\tconst viewData = view?.getViewData() as ListReportManifestSettings;\n\t\t\t\tconst oldFilters = binding.getFilters(\"Application\");\n\t\t\t\tconst previousSorters = internalBindingContext?.getProperty(PREVIOUS_SORTERS) ?? \"[]\";\n\n\t\t\t\tconst filterNotChanged =\n\t\t\t\t\t((bindingInfo.filters === null && oldFilters.length === 0) || // on analytical tables, the filters are set to null when no filters\n\t\t\t\t\t\tdeepEqual(bindingInfo.filters, oldFilters[0])) &&\n\t\t\t\t\tnewSorters === previousSorters &&\n\t\t\t\t\tbindingInfo.path === binding.getPath() && // The path can be changed in case of a parametrized entity\n\t\t\t\t\tthis.getSearchQuery(binding) === bindingInfo?.parameters?.$search;\n\t\t\t\tconst LRMultiViewEnabled = !!viewData.views;\n\n\t\t\t\tneedManualRefresh =\n\t\t\t\t\tfilterNotChanged &&\n\t\t\t\t\t(internalBindingContext?.getProperty(SEARCH_HAS_BEEN_FIRED) || // check if the search has been triggered\n\t\t\t\t\t\tinternalBindingContext?.getProperty(COLUMN_HAS_BEEN_ADDED) || // check if a column has been added\n\t\t\t\t\t\tLRMultiViewEnabled) && // if the multi view is enabled the request should be refreshed as we don't known if the content of the table is outdated due to an action on another table\n\t\t\t\t\t!pendingManualUpdate;\n\t\t\t}\n\t\t\t// Cleanup groupConditions and aggregateConditions if they don't make sense\n\t\t\tif (tableAPI.getTableDefinition().enableAnalytics !== true) {\n\t\t\t\t// Aggregate conditions never make sense outside of an analytical table\n\t\t\t\ttable.setAggregateConditions();\n\n\t\t\t\t// Group conditions don't make sense in a Tree or Grid table\n\t\t\t\tif (\n\t\t\t\t\ttableAPI.getTableDefinition().control.type === \"GridTable\" ||\n\t\t\t\t\ttableAPI.getTableDefinition().control.type === \"TreeTable\"\n\t\t\t\t) {\n\t\t\t\t\ttable.setGroupConditions();\n\t\t\t\t}\n\t\t\t}\n\t\t\tTableDelegateBase.updateBinding.apply(this, [table, bindingInfo, binding]);\n\t\t\t// we store the table binding info that was used to bind the table in the table API\n\t\t\t// this needs to be done after the call to TableDelegateBase.updateBinding other wise we don't get the aggregate parameters\n\t\t\t// otherwise there is no way to retrieve sorters added in the onBeforeRebindTable event\n\t\t\ttableAPI.setTableBindingInfo(bindingInfo);\n\t\t\t// we make the call to update the download url but do not await it\n\t\t\ttableAPI.setDownloadUrl();\n\n\t\t\ttable.fireEvent(\"bindingUpdated\");\n\t\t\tif (needManualRefresh && table.getFilter() && binding) {\n\t\t\t\tbinding\n\t\t\t\t\t.requestRefresh(binding.getGroupId())\n\t\t\t\t\t.finally(() => {\n\t\t\t\t\t\tinternalBindingContext?.setProperty(manualUpdatePropertyKey, false);\n\t\t\t\t\t})\n\t\t\t\t\t.catch(function (oError) {\n\t\t\t\t\t\tLog.error(\"Error while refreshing the table\", oError as string);\n\t\t\t\t\t});\n\t\t\t\tinternalBindingContext?.setProperty(manualUpdatePropertyKey, true);\n\t\t\t}\n\t\t\tinternalBindingContext?.setProperty(SEARCH_HAS_BEEN_FIRED, false);\n\t\t\tinternalBindingContext?.setProperty(COLUMN_HAS_BEEN_ADDED, false);\n\t\t\tinternalBindingContext?.setProperty(PREVIOUS_SORTERS, newSorters);\n\n\t\t\t//for Treetable, it's necessary to clear the pastableContexts since the binding destroys previous contexts.\n\t\t\tif (tableAPI.getTableDefinition().control.type === \"TreeTable\") {\n\t\t\t\tinternalBindingContext?.setProperty(\"pastableContexts\", []);\n\t\t\t}\n\n\t\t\tconst attachedEvents = tableAPI.storedEvents ?? [];\n\t\t\tattachedEvents.forEach(({ eventId, callback, listener, data }) => {\n\t\t\t\ttable.getRowBinding()?.attachEvent(eventId, data, callback, listener);\n\t\t\t});\n\t\t}\n\t\ttableAPI?.setProperty(\"outDatedBinding\", bIsSuspended);\n\t},\n\n\t_computeRowBindingInfoFromTemplate: function (oTable: Table): CollectionBindingInfo {\n\t\tconst tableAPI = this._getTableAPI(oTable);\n\t\tconst rowBindingInfo = tableAPI.getTableTemplateBindingInfo();\n\t\tconst bindingContext = oTable.getBindingContext();\n\t\tlet tableCanBeInInlineEdit = false;\n\t\tif (\n\t\t\tbindingContext === undefined &&\n\t\t\toTable.getBindingContext(\"ui\")?.getProperty(\"isEditable\") === false &&\n\t\t\toTable.getModel(\"viewData\")?.getProperty(\"/isInlineEditEnabled\")\n\t\t) {\n\t\t\ttableCanBeInInlineEdit = true;\n\t\t} else if (\n\t\t\t(bindingContext as ODataV4Context | undefined)?.getBinding().getUpdateGroupId() == CommonUtils.INLINEEDIT_UPDATEGROUPID\n\t\t) {\n\t\t\ttableCanBeInInlineEdit = true;\n\t\t}\n\n\t\tif (tableCanBeInInlineEdit) {\n\t\t\trowBindingInfo.parameters ??= {};\n\t\t\trowBindingInfo.parameters.$$updateGroupId = CommonUtils.INLINEEDIT_UPDATEGROUPID;\n\t\t}\n\n\t\treturn rowBindingInfo;\n\t},\n\t_internalUpdateBindingInfo: function (oTable: Table, oBindingInfo: CollectionBindingInfo) {\n\t\tconst oInternalModelContext = oTable.getBindingContext(\"internal\") as InternalModelContext | undefined;\n\t\tObject.assign(oBindingInfo, this._computeRowBindingInfoFromTemplate(oTable));\n\t\t/**\n\t\t * Binding info might be suspended at the beginning when the first bindRows is called:\n\t\t * To avoid duplicate requests but still have a binding to create new entries.\t\t\t\t *\n\t\t * After the initial binding step, follow up bindings should no longer be suspended.\n\t\t */\n\t\tif (oTable.getRowBinding()) {\n\t\t\toBindingInfo.suspended = false;\n\t\t}\n\t\t// The previously added handler for the event 'dataReceived' is not anymore there\n\t\t// since the bindingInfo is recreated from scratch so we need to set the flag to false in order\n\t\t// to again add the handler on this event if needed\n\t\tif (oInternalModelContext) {\n\t\t\toInternalModelContext.setProperty(\"dataReceivedAttached\", false);\n\t\t}\n\n\t\tlet oFilter;\n\t\tconst oFilterInfo = TableUtils.getAllFilterInfo(oTable);\n\t\t// Prepare binding info with filter/search parameters\n\t\tif (oFilterInfo.filters.length > 0) {\n\t\t\toFilter = new Filter({ filters: oFilterInfo.filters, and: true });\n\t\t}\n\t\tif (oFilterInfo.bindingPath) {\n\t\t\toBindingInfo.path = oFilterInfo.bindingPath;\n\t\t}\n\n\t\tconst oDataStateIndicator = oTable.getDataStateIndicator();\n\t\tif (oDataStateIndicator && oDataStateIndicator.isFiltering()) {\n\t\t\t// Include filters on messageStrip\n\t\t\tif ((oBindingInfo.filters as unknown as Filter[]).length > 0) {\n\t\t\t\toFilter = new Filter({ filters: (oBindingInfo.filters as unknown as Filter[]).concat(oFilterInfo.filters), and: true });\n\t\t\t\tthis.updateBindingInfoWithSearchQuery(oBindingInfo, oFilterInfo, oFilter);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.updateBindingInfoWithSearchQuery(oBindingInfo, oFilterInfo, oFilter);\n\t\t}\n\n\t\tthis.addFilterOnActiveEntities(oTable, oBindingInfo);\n\t},\n\n\tupdateBindingInfoWithSearchQuery: function (bindingInfo: CollectionBindingInfo, filterInfo: InternalBindingInfo, filter?: Filter) {\n\t\tbindingInfo.filters = filter;\n\t\tbindingInfo.parameters ??= {};\n\t\tif (filterInfo.search) {\n\t\t\tbindingInfo.parameters.$search = CommonUtils.normalizeSearchTerm(filterInfo.search);\n\t\t} else {\n\t\t\tbindingInfo.parameters.$search = undefined;\n\t\t}\n\t},\n\t/**\n\t * If specified in the payload, adds a filter to display only active entities.\n\t * @param table\n\t * @param bindingInfo\n\t */\n\taddFilterOnActiveEntities: function (table: Table, bindingInfo: CollectionBindingInfo) {\n\t\tconst payload = table.getPayload() as { filterOnActiveEntities?: boolean };\n\n\t\tif (payload?.filterOnActiveEntities === true) {\n\t\t\tconst filterOnActive = new Filter({ path: \"IsActiveEntity\", operator: \"EQ\", value1: true });\n\t\t\tif (bindingInfo.filters) {\n\t\t\t\tbindingInfo.filters = new Filter({ filters: [filterOnActive, bindingInfo.filters], and: true });\n\t\t\t} else {\n\t\t\t\tbindingInfo.filters = filterOnActive;\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Creates a template from the fragment of a slot column.\n\t * @param columnInfo The custom table column\n\t * @param view The current view\n\t * @param modifier The control tree modifier\n\t * @param tableId The id of the underlying table\n\t * @returns The loaded fragment\n\t */\n\t_templateSlotColumnFragment: async function (\n\t\tcolumnInfo: CustomElement<CustomBasedTableColumn>,\n\t\tview: View,\n\t\tmodifier: BaseTreeModifier | JsControlTreeModifier,\n\t\ttableId: string\n\t): Promise<null | Control | Control[] | Element> {\n\t\tconst slotColumnsXML = new DOMParser().parseFromString(\n\t\t\tjsx.renderAsXML(() => {\n\t\t\t\treturn getSlotColumn(tableId, columnInfo, false) as unknown as string;\n\t\t\t}),\n\t\t\t\"text/xml\"\n\t\t);\n\t\tif (!slotColumnsXML) {\n\t\t\treturn Promise.resolve(null);\n\t\t}\n\t\tconst slotXML = slotColumnsXML.getElementsByTagName(\"slot\")[0];\n\n\t\tif (columnInfo.template) {\n\t\t\tif (slotXML) {\n\t\t\t\tconst oTemplate = new DOMParser().parseFromString(columnInfo.template as string, \"text/xml\");\n\t\t\t\tif (oTemplate.firstElementChild && oTemplate.firstElementChild.nodeName !== \"html\") {\n\t\t\t\t\tslotXML.replaceWith(oTemplate.firstElementChild);\n\t\t\t\t} else {\n\t\t\t\t\tslotXML.remove();\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tLog.error(`Please provide content inside this Building Block Column: ${columnInfo.header}`);\n\t\t\treturn Promise.resolve(null);\n\t\t}\n\t\tconst resultXML = await XMLPreprocessor.process(\n\t\t\tslotColumnsXML.firstElementChild,\n\t\t\t{ models: {} },\n\t\t\t(view.getController().getOwnerComponent() as EnhanceWithUI5<TemplateComponent>).getPreprocessorContext()\n\t\t);\n\t\tif (modifier?.targets !== \"jsControlTree\") {\n\t\t\treturn resultXML.firstElementChild;\n\t\t}\n\t\treturn Fragment.load({\n\t\t\ttype: \"XML\",\n\t\t\tdefinition: resultXML,\n\t\t\tcontroller: view.getController()\n\t\t}) as Promise<Control | Control[]>;\n\t},\n\n\t_getExportFormat: function (dataType?: string) {\n\t\tswitch (dataType) {\n\t\t\tcase \"Edm.Date\":\n\t\t\t\treturn ExcelFormat.getExcelDatefromJSDate();\n\t\t\tcase \"Edm.DateTimeOffset\":\n\t\t\t\treturn ExcelFormat.getExcelDateTimefromJSDateTime();\n\t\t\tcase \"Edm.TimeOfDay\":\n\t\t\t\treturn ExcelFormat.getExcelTimefromJSTime();\n\t\t\tdefault:\n\t\t\t\treturn undefined;\n\t\t}\n\t},\n\n\t_getVHRelevantFields: function (oMetaModel: ODataMetaModel, sMetadataPath: string, sBindingPath?: string): string[] {\n\t\tlet aFields: string[] = [],\n\t\t\toDataFieldData = oMetaModel.getObject(sMetadataPath);\n\n\t\tif (oDataFieldData.$kind && oDataFieldData.$kind === \"Property\") {\n\t\t\toDataFieldData = oMetaModel.getObject(`${sMetadataPath}@com.sap.vocabularies.UI.v1.DataFieldDefault`);\n\t\t\tsMetadataPath = `${sMetadataPath}@com.sap.vocabularies.UI.v1.DataFieldDefault`;\n\t\t}\n\t\tswitch (oDataFieldData.$Type) {\n\t\t\tcase \"com.sap.vocabularies.UI.v1.DataFieldForAnnotation\":\n\t\t\t\tif (oMetaModel.getObject(`${sMetadataPath}/Target/$AnnotationPath`).includes(\"com.sap.vocabularies.UI.v1.FieldGroup\")) {\n\t\t\t\t\toMetaModel.getObject(`${sMetadataPath}/Target/$AnnotationPath/Data`).forEach((oValue: unknown, iIndex: number) => {\n\t\t\t\t\t\taFields = aFields.concat(\n\t\t\t\t\t\t\tthis._getVHRelevantFields(oMetaModel, `${sMetadataPath}/Target/$AnnotationPath/Data/${iIndex}`)\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"com.sap.vocabularies.UI.v1.DataFieldWithNavigationPath\":\n\t\t\tcase \"com.sap.vocabularies.UI.v1.DataFieldWithUrl\":\n\t\t\tcase \"com.sap.vocabularies.UI.v1.DataField\":\n\t\t\tcase \"com.sap.vocabularies.UI.v1.DataFieldWithIntentBasedNavigation\":\n\t\t\tcase \"com.sap.vocabularies.UI.v1.DataFieldWithAction\":\n\t\t\t\taFields.push(oMetaModel.getObject(`${sMetadataPath}/Value/$Path`));\n\t\t\t\tbreak;\n\t\t\tcase \"com.sap.vocabularies.UI.v1.DataFieldForAction\":\n\t\t\tcase \"com.sap.vocabularies.UI.v1.DataFieldForIntentBasedNavigation\":\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\t// property\n\t\t\t\t// temporary workaround to make sure VH relevant field path do not contain the bindingpath\n\t\t\t\tif (sBindingPath && sMetadataPath.indexOf(sBindingPath) === 0) {\n\t\t\t\t\taFields.push(sMetadataPath.substring(sBindingPath.length + 1));\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\taFields.push(CommonHelper.getNavigationPath(sMetadataPath, true));\n\t\t\t\tbreak;\n\t\t}\n\t\treturn aFields;\n\t},\n\t_setDraftIndicatorOnVisibleColumn: function (oTable: Table, aColumns: TableColumn[], oColumnInfo?: TableColumn) {\n\t\tconst oInternalBindingContext = oTable.getBindingContext(\"internal\");\n\t\tif (!oInternalBindingContext) {\n\t\t\treturn;\n\t\t}\n\t\tconst sInternalPath = oInternalBindingContext.getPath();\n\t\tconst aColumnsWithDraftIndicator = aColumns.filter((oColumn: TableColumn) => {\n\t\t\treturn this._bColumnHasPropertyWithDraftIndicator(oColumn);\n\t\t});\n\t\tconst aVisibleColumns = oTable.getColumns();\n\t\tlet sAddVisibleColumnName, sVisibleColumnName, bFoundColumnVisibleWithDraft, sColumnNameWithDraftIndicator;\n\t\tfor (const i in aVisibleColumns) {\n\t\t\tsVisibleColumnName = aVisibleColumns[i].getPropertyKey();\n\t\t\tfor (const j in aColumnsWithDraftIndicator) {\n\t\t\t\tsColumnNameWithDraftIndicator = aColumnsWithDraftIndicator[j].name;\n\t\t\t\tif (sVisibleColumnName === sColumnNameWithDraftIndicator) {\n\t\t\t\t\tbFoundColumnVisibleWithDraft = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (oColumnInfo && oColumnInfo.name === sColumnNameWithDraftIndicator) {\n\t\t\t\t\tsAddVisibleColumnName = oColumnInfo.name;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (bFoundColumnVisibleWithDraft) {\n\t\t\t\toInternalBindingContext.setProperty(sInternalPath + SEMANTICKEY_HAS_DRAFTINDICATOR, sVisibleColumnName);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!bFoundColumnVisibleWithDraft && sAddVisibleColumnName) {\n\t\t\toInternalBindingContext.setProperty(sInternalPath + SEMANTICKEY_HAS_DRAFTINDICATOR, sAddVisibleColumnName);\n\t\t}\n\t},\n\tremoveItem: async function (\n\t\toTable: UI5Element | Element,\n\t\toPropertyInfoName: UI5Element | Element,\n\t\tmPropertyBag: { modifier: BaseTreeModifier; appComponent: AppComponent }\n\t): Promise<boolean> {\n\t\tlet doRemoveItem = true;\n\t\tif (!oPropertyInfoName) {\n\t\t\t// 1. Application removed the property from their data model\n\t\t\t// 2. addItem failed before revertData created\n\t\t\treturn Promise.resolve(doRemoveItem);\n\t\t}\n\t\tconst oModifier = mPropertyBag.modifier;\n\t\tconst sDataProperty = await oModifier.getProperty<string>(oPropertyInfoName, \"dataProperty\");\n\t\tif (sDataProperty && sDataProperty.includes && sDataProperty.includes(\"InlineXML\")) {\n\t\t\toModifier.insertAggregation(oTable, \"dependents\", oPropertyInfoName);\n\t\t\tdoRemoveItem = false;\n\t\t}\n\t\tif ((oTable as UI5Element).isA && oModifier.targets === \"jsControlTree\") {\n\t\t\tthis._setDraftIndicatorStatus(oModifier, oTable, this.getColumnsFor(oTable as Table));\n\t\t}\n\t\treturn Promise.resolve(doRemoveItem);\n\t},\n\t_getMetaModel: function (mPropertyBag: { appComponent: AppComponent }) {\n\t\treturn mPropertyBag.appComponent && mPropertyBag.appComponent.getModel().getMetaModel();\n\t},\n\t_setDraftIndicatorStatus: function (\n\t\toModifier: BaseTreeModifier,\n\t\toTable: UI5Element | Element,\n\t\taColumns: TableColumn[],\n\t\toColumnInfo?: TableColumn\n\t) {\n\t\tif (oModifier.targets === \"jsControlTree\") {\n\t\t\tthis._setDraftIndicatorOnVisibleColumn(oTable as Table, aColumns, oColumnInfo);\n\t\t}\n\t},\n\t_getGroupId: function (sRetrievedGroupId: string) {\n\t\treturn sRetrievedGroupId || undefined;\n\t},\n\t_insertAggregation: async function (\n\t\toValueHelp: Element | UI5Element | Element[] | UI5Element[],\n\t\toModifier: BaseTreeModifier,\n\t\toTable: Element | UI5Element\n\t): Promise<void> {\n\t\tif (oValueHelp) {\n\t\t\treturn oModifier.insertAggregation(oTable, \"dependents\", oValueHelp, 0);\n\t\t}\n\t\treturn;\n\t},\n\n\t/**\n\t * Invoked when a column is added using the table personalization dialog.\n\t * @param table Instance of table control\n\t * @param propertyInfoName Name of the property for which the column is added\n\t * @param mPropertyBag Instance of property bag from the flexibility API\n\t * @param mPropertyBag.modifier Instance of the control tree modifier\n\t * @param mPropertyBag.appComponent Instance of the app component\n\t * @param mPropertyBag.view Instance of the view\n\t * @returns Once resolved, a table column definition is returned\n\t */\n\taddItem: async function (\n\t\ttable: Element | UI5Element,\n\t\tpropertyInfoName: string,\n\t\tmPropertyBag: { modifier: BaseTreeModifier; appComponent: AppComponent; view?: FEView }\n\t) {\n\t\tconst oMetaModel = this._getMetaModel(mPropertyBag),\n\t\t\toModifier = mPropertyBag.modifier,\n\t\t\tsTableId = oModifier.getId(table),\n\t\t\taColumns = (table as UI5Element).isA ? this.getColumnsFor(table as Table) : null,\n\t\t\ttableAPI = this._getTableAPI(table as Table);\n\t\tif (!aColumns) {\n\t\t\t// We return null here because everything should apply at runtime\n\t\t\treturn Promise.resolve(null);\n\t\t}\n\n\t\tconst columnInfo = aColumns.find(function (oColumn) {\n\t\t\treturn oColumn.name === propertyInfoName;\n\t\t});\n\t\tif (!columnInfo) {\n\t\t\tLog.error(`${propertyInfoName} not found while adding column`);\n\t\t\treturn Promise.resolve(null);\n\t\t}\n\t\tif (columnInfo.availability === \"Hidden\") {\n\t\t\tLog.warning(`Column for ${propertyInfoName} not added because it's hidden`);\n\t\t\treturn Promise.resolve(null);\n\t\t}\n\t\tconst internalBindingContext = (table as Table).getBindingContext(\"internal\");\n\t\tinternalBindingContext?.setProperty(COLUMN_HAS_BEEN_ADDED, true);\n\t\tthis._setDraftIndicatorStatus(oModifier, table, aColumns, columnInfo);\n\t\tconst sPath = await DelegateUtil.getCustomDataWithModifier<string>(table, \"metaPath\", oModifier);\n\t\tconst oTableContext: Context = oMetaModel.createBindingContext(sPath!)!;\n\t\t// If view is not provided try to get it by accessing to the parental hierarchy\n\t\t// If it doesn't work (table into an unattached OP section) get the view via the AppComponent\n\t\tconst view =\n\t\t\tmPropertyBag.view ||\n\t\t\tCommonUtils.getTargetView(table as UI5Element) ||\n\t\t\t(mPropertyBag.appComponent ? CommonUtils.getCurrentPageView(mPropertyBag.appComponent) : undefined);\n\n\t\tif (columnInfo.type === \"Default\") {\n\t\t\tLog.error(\"Custom columns defined in the manifest are not supported when using a table building block.\");\n\t\t\tthrow new Error(\"Custom columns defined in the manifest are not supported when using a table building block.\");\n\t\t}\n\n\t\tif (columnInfo.type === \"Slot\") {\n\t\t\treturn this._templateSlotColumnFragment(columnInfo as CustomElement<CustomBasedTableColumn>, view, oModifier, sTableId);\n\t\t}\n\n\t\tif (columnInfo.type === \"Computed\") {\n\t\t\tconst enableAnalytics = this._getTableAPI(table as Table).getTableDefinition().enableAnalytics;\n\t\t\treturn getComputedColumn(sTableId, columnInfo as ComputedTableColumn, oTableContext, enableAnalytics);\n\t\t}\n\n\t\t// fall-back\n\t\tif (!oMetaModel) {\n\t\t\treturn Promise.resolve(null);\n\t\t}\n\n\t\tlet propertyInfos = tableAPI.getEnhancedFetchedPropertyInfos();\n\t\tif (!propertyInfos.length) {\n\t\t\t// If the propertyInfos are not fetched yet, we need to fetch them\n\t\t\t// This is the case when the table is not created yet\n\t\t\tawait this.fetchProperties(table as MDCTable);\n\t\t\tpropertyInfos = tableAPI.getEnhancedFetchedPropertyInfos();\n\t\t}\n\t\tconst propertyInfo = propertyInfos.find(function (propInfo: EnhancedFEPropertyInfo) {\n\t\t\treturn propInfo.name === propertyInfoName;\n\t\t});\n\n\t\tconst oPropertyContext: Context = oMetaModel.createBindingContext(propertyInfo!.annotationPath)!;\n\n\t\tconst fnTemplateFragment = async (\n\t\t\toInPropertyInfo: unknown,\n\t\t\toView: FEView\n\t\t): Promise<UI5Element | Element | UI5Element[] | Element[]> => {\n\t\t\tlet bDisplayMode: boolean | undefined;\n\t\t\tlet sTableTypeCustomData: string | undefined;\n\t\t\tlet sCreationModeCustomData: string | undefined;\n\n\t\t\treturn Promise.all([\n\t\t\t\tDelegateUtil.getCustomDataWithModifier<string | boolean>(table, \"displayModePropertyBinding\", oModifier),\n\t\t\t\tDelegateUtil.getCustomDataWithModifier<string>(table, \"tableType\", oModifier),\n\t\t\t\tDelegateUtil.getCustomDataWithModifier<string>(table, \"creationMode\", oModifier)\n\t\t\t]).then(async (aCustomData: (string | boolean | undefined)[]) => {\n\t\t\t\tbDisplayMode = aCustomData[0] as boolean | undefined;\n\t\t\t\tsTableTypeCustomData = aCustomData[1] as string | undefined;\n\t\t\t\tsCreationModeCustomData = aCustomData[2] as string | undefined;\n\t\t\t\t// Read Only and Column Edit Mode can both have three state\n\t\t\t\t// Undefined means that the framework decides what to do\n\t\t\t\t// True / Display means always read only\n\t\t\t\t// False / Editable means editable but while still respecting the low level principle (immutable property will not be editable)\n\t\t\t\tif (bDisplayMode !== undefined && typeof bDisplayMode !== \"boolean\") {\n\t\t\t\t\tbDisplayMode = bDisplayMode === \"true\";\n\t\t\t\t}\n\n\t\t\t\tconst oThis = new JSONModel({\n\t\t\t\t\t\tenableAutoColumnWidth: tableAPI.getTableDefinition().control.enableAutoColumnWidth,\n\t\t\t\t\t\treadOnly: bDisplayMode,\n\t\t\t\t\t\ttableType: sTableTypeCustomData,\n\t\t\t\t\t\tid: sTableId,\n\t\t\t\t\t\tnavigationPropertyPath: propertyInfoName,\n\t\t\t\t\t\tcolumnInfo: columnInfo,\n\t\t\t\t\t\tcollection: oMetaModel.createBindingContext(sPath!),\n\t\t\t\t\t\tcreationMode: { name: sCreationModeCustomData },\n\t\t\t\t\t\twidthIncludingColumnHeader: tableAPI.getTableDefinition().control.widthIncludingColumnHeader\n\t\t\t\t\t}),\n\t\t\t\t\toPreprocessorSettings = {\n\t\t\t\t\t\tbindingContexts: {\n\t\t\t\t\t\t\tentitySet: oTableContext,\n\t\t\t\t\t\t\tcollection: oTableContext,\n\t\t\t\t\t\t\tdataField: oPropertyContext,\n\t\t\t\t\t\t\tthis: oThis.createBindingContext(\"/\"),\n\t\t\t\t\t\t\tcolumn: oThis.createBindingContext(\"/columnInfo\")\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmodels: {\n\t\t\t\t\t\t\tthis: oThis,\n\t\t\t\t\t\t\tentitySet: oMetaModel,\n\t\t\t\t\t\t\tcollection: oMetaModel,\n\t\t\t\t\t\t\tdataField: oMetaModel,\n\t\t\t\t\t\t\tmetaModel: oMetaModel,\n\t\t\t\t\t\t\tcolumn: oThis\n\t\t\t\t\t\t},\n\t\t\t\t\t\tappComponent: mPropertyBag.appComponent\n\t\t\t\t\t};\n\n\t\t\t\tconst tableCollection = getInvolvedDataModelObjects<EntitySet | NavigationProperty>(\n\t\t\t\t\toMetaModel.createBindingContext(tableAPI.tableDefinition.annotation.collection)!\n\t\t\t\t);\n\t\t\t\tconst handlerProvider = new TableEventHandlerProvider(\n\t\t\t\t\ttableAPI,\n\t\t\t\t\t{ collectionEntity: tableCollection.targetObject!, metaModel: oMetaModel },\n\t\t\t\t\ttableAPI\n\t\t\t\t);\n\t\t\t\tconst computedColumnXML = new DOMParser().parseFromString(\n\t\t\t\t\tjsx.renderAsXML(() => {\n\t\t\t\t\t\treturn (getColumnTemplate(\n\t\t\t\t\t\t\tsTableId,\n\t\t\t\t\t\t\ttableAPI,\n\t\t\t\t\t\t\tcolumnInfo as AnnotationTableColumn,\n\t\t\t\t\t\t\toMetaModel.createBindingContext(sPath!)!,\n\t\t\t\t\t\t\thandlerProvider\n\t\t\t\t\t\t) ?? \"\") as unknown as string;\n\t\t\t\t\t}),\n\t\t\t\t\t\"text/xml\"\n\t\t\t\t);\n\t\t\t\treturn DelegateUtil.templateControlFragment(\n\t\t\t\t\tcomputedColumnXML.firstElementChild,\n\t\t\t\t\toPreprocessorSettings,\n\t\t\t\t\t{ view: oView },\n\t\t\t\t\toModifier\n\t\t\t\t).finally(function () {\n\t\t\t\t\toThis.destroy();\n\t\t\t\t});\n\t\t\t});\n\t\t};\n\n\t\treturn fnTemplateFragment(propertyInfo, view);\n\t},\n\n\t/**\n\t * Provide the Table's filter delegate to provide basic filter functionality such as adding FilterFields.\n\t * @returns Object for the Tables filter personalization.\n\t */\n\tgetFilterDelegate: function () {\n\t\treturn Object.assign(\n\t\t\t{\n\t\t\t\tapiVersion: 2\n\t\t\t},\n\t\t\tFilterBarDelegate,\n\t\t\t{\n\t\t\t\taddItem: async function (oParentControl: Control, sPropertyInfoName: string) {\n\t\t\t\t\tif (sPropertyInfoName.indexOf(\"Property::\") === 0) {\n\t\t\t\t\t\t// Correct the name of complex property info references.\n\t\t\t\t\t\tsPropertyInfoName = sPropertyInfoName.replace(\"Property::\", \"\");\n\t\t\t\t\t}\n\t\t\t\t\treturn FilterBarDelegate.addItem(oParentControl as FilterBar, sPropertyInfoName);\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t},\n\n\t/**\n\t * Returns the TypeMap attached to this delegate.\n\t * @returns Any instance of TypeMap\n\t */\n\tgetTypeMap: function (/*oPayload: object*/) {\n\t\treturn TypeMap;\n\t},\n\n\t/**\n\t * Format the title of the group header .\n\t * @param table Instance of table control\n\t * @param context Context\n\t * @param property Name of the property\n\t * @returns Formatted title of the group header.\n\t */\n\tformatGroupHeader(table: MDCTable, context: ODataV4Context, property: string) {\n\t\tconst propertyInfos = this._getTableAPI(table).getEnhancedFetchedPropertyInfos();\n\t\tconst propertyInfo = propertyInfos?.find((obj) => {\n\t\t\treturn obj.name === property;\n\t\t});\n\t\t/*For a Date, DateTime, Boolean or Decimal property, the value is returned in external format using a UI5 type for the\n\t        given property path that formats corresponding to the property's EDM type and constraints*/\n\t\tconst dataBaseType = TypeMap.getTypeConfig(propertyInfo?.dataType).baseType;\n\t\tconst externalFormat =\n\t\t\tdataBaseType === \"DateTime\" || dataBaseType === \"Date\" || dataBaseType === \"Boolean\" || dataBaseType === \"Numeric\";\n\t\tlet value;\n\t\tif (!context) {\n\t\t\tvalue = getResourceModel(CommonUtils.getTargetView(table)).getText(\"M_TABLE_GROUP_HEADER_TITLE_VALUE\");\n\t\t\treturn getResourceModel(table).getText(\"M_TABLE_GROUP_HEADER_TITLE\", [propertyInfo?.label, value]);\n\t\t}\n\t\tif (propertyInfo?.mode) {\n\t\t\tswitch (propertyInfo.mode) {\n\t\t\t\tcase \"Description\":\n\t\t\t\t\tvalue = propertyInfo.descriptionProperty ? context.getProperty(propertyInfo.descriptionProperty, externalFormat) : null;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"DescriptionValue\":\n\t\t\t\t\tvalue = ValueFormatter.formatWithBrackets(\n\t\t\t\t\t\tpropertyInfo.descriptionProperty ? context.getProperty(propertyInfo.descriptionProperty, externalFormat) : null,\n\t\t\t\t\t\tpropertyInfo.valueProperty ? context.getProperty(propertyInfo.valueProperty, externalFormat) : null\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"ValueDescription\":\n\t\t\t\t\tvalue = ValueFormatter.formatWithBrackets(\n\t\t\t\t\t\tpropertyInfo.valueProperty ? context.getProperty(propertyInfo.valueProperty, externalFormat) : null,\n\t\t\t\t\t\tpropertyInfo.descriptionProperty ? context.getProperty(propertyInfo.descriptionProperty, externalFormat) : null\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t} else {\n\t\t\tvalue = propertyInfo?.path ? context.getProperty(propertyInfo.path, externalFormat) : null;\n\t\t}\n\t\tif (value === null || value === \"\") {\n\t\t\tvalue = getResourceModel(CommonUtils.getTargetView(table)).getText(\"M_TABLE_GROUP_HEADER_TITLE_VALUE\");\n\t\t}\n\t\treturn getResourceModel(table).getText(\"M_TABLE_GROUP_HEADER_TITLE\", [propertyInfo?.label, value]);\n\t}\n});\n"],"mappings":"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","ignoreList":[],"file":"TableDelegate-dbg.js"}