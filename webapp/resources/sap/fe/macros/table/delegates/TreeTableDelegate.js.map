{"version":3,"file":"TreeTableDelegate.js","names":["TreeTableDelegate","Object","assign","TableDelegate","apiVersion","_internalUpdateBindingInfo","table","bindingInfo","apply","this","currentAggregation","getRowBinding","getAggregation","payload","getPayload","parameters","$$aggregation","hierarchyQualifier","createInPlace","undefined","expandTo","search","Number","MAX_SAFE_INTEGER","initialExpansionLevel","internalContext","getBindingContext","setProperty","sorter","length","updateBindingInfoWithSearchQuery","filterInfo","filter","filters","CommonUtils","normalizeSearchTerm"],"sources":["./TreeTableDelegate.ts"],"sourcesContent":["import CommonUtils from \"sap/fe/core/CommonUtils\";\nimport type { InternalModelContext } from \"sap/fe/core/helpers/ModelHelper\";\nimport TableDelegate from \"sap/fe/macros/table/delegates/TableDelegate\";\nimport type { BaseAggregationBindingInfo } from \"sap/ui/base/ManagedObject\";\nimport type MDCTable from \"sap/ui/mdc/Table\";\nimport type Filter from \"sap/ui/model/Filter\";\nimport type Sorter from \"sap/ui/model/Sorter\";\n\ntype V4AggregationBindingInfo = BaseAggregationBindingInfo & {\n\tparameters: {\n\t\t$$aggregation: {\n\t\t\thierarchyQualifier?: string;\n\t\t\texpandTo?: number;\n\t\t\tsearch?: string;\n\t\t};\n\t};\n};\n/**\n * Helper class for sap.ui.mdc.Table.\n * <h3><b>Note:</b></h3>\n * This class is experimental and not intended for productive usage, since the API/behavior has not been finalized.\n * @author SAP SE\n * @private\n * @since 1.69.0\n * @alias sap.fe.macros.TableDelegate\n */\nconst TreeTableDelegate = Object.assign({}, TableDelegate, {\n\tapiVersion: 2,\n\t_internalUpdateBindingInfo: function (table: MDCTable, bindingInfo: V4AggregationBindingInfo) {\n\t\tTableDelegate._internalUpdateBindingInfo.apply(this, [table, bindingInfo]);\n\n\t\tconst currentAggregation = table.getRowBinding()?.getAggregation() as { expandTo: number } | undefined;\n\t\tconst payload = table.getPayload() as\n\t\t\t| { hierarchyQualifier: string; createInPlace: boolean; initialExpansionLevel: number }\n\t\t\t| undefined;\n\t\tbindingInfo.parameters.$$aggregation = {\n\t\t\t...bindingInfo.parameters.$$aggregation,\n\t\t\t...{ hierarchyQualifier: payload?.hierarchyQualifier, createInPlace: payload?.createInPlace ? true : undefined },\n\t\t\t// Setting the expandTo parameter to a high value forces the treeTable to expand all nodes when the search is applied\n\t\t\t...{\n\t\t\t\texpandTo: bindingInfo.parameters.$$aggregation?.search\n\t\t\t\t\t? Number.MAX_SAFE_INTEGER\n\t\t\t\t\t: currentAggregation?.expandTo ?? payload?.initialExpansionLevel\n\t\t\t}\n\t\t};\n\n\t\t// Flag to know if sorters are applied (used in drag & drop logic)\n\t\tconst internalContext = table.getBindingContext(\"internal\") as InternalModelContext;\n\t\tinternalContext.setProperty(\"isSorted\", bindingInfo.sorter !== undefined && (bindingInfo.sorter as Sorter[]).length > 0);\n\t},\n\tupdateBindingInfoWithSearchQuery: function (bindingInfo: V4AggregationBindingInfo, filterInfo: { search?: string }, filter: Filter) {\n\t\tbindingInfo.filters = filter;\n\t\tif (filterInfo.search) {\n\t\t\tbindingInfo.parameters.$$aggregation = {\n\t\t\t\t...bindingInfo.parameters.$$aggregation,\n\t\t\t\t...{\n\t\t\t\t\tsearch: CommonUtils.normalizeSearchTerm(filterInfo.search)\n\t\t\t\t}\n\t\t\t};\n\t\t} else {\n\t\t\tdelete bindingInfo.parameters?.$$aggregation?.search;\n\t\t}\n\t}\n});\n\nexport default TreeTableDelegate;\n"],"mappings":";;;;mHA0BA,MAAMA,EAAoBC,OAAOC,OAAO,CAAC,EAAGC,EAAe,CAC1DC,WAAY,EACZC,2BAA4B,SAAUC,EAAiBC,GACtDJ,EAAcE,2BAA2BG,MAAMC,KAAM,CAACH,EAAOC,IAE7D,MAAMG,EAAqBJ,EAAMK,iBAAiBC,iBAClD,MAAMC,EAAUP,EAAMQ,aAGtBP,EAAYQ,WAAWC,cAAgB,IACnCT,EAAYQ,WAAWC,iBACvB,CAAEC,mBAAoBJ,GAASI,mBAAoBC,cAAeL,GAASK,cAAgB,KAAOC,cAElG,CACFC,SAAUb,EAAYQ,WAAWC,eAAeK,OAC7CC,OAAOC,iBACPb,GAAoBU,UAAYP,GAASW,wBAK9C,MAAMC,EAAkBnB,EAAMoB,kBAAkB,YAChDD,EAAgBE,YAAY,WAAYpB,EAAYqB,SAAWT,WAAcZ,EAAYqB,OAAoBC,OAAS,EACvH,EACAC,iCAAkC,SAAUvB,EAAuCwB,EAAiCC,GACnHzB,EAAY0B,QAAUD,EACtB,GAAID,EAAWV,OAAQ,CACtBd,EAAYQ,WAAWC,cAAgB,IACnCT,EAAYQ,WAAWC,iBACvB,CACFK,OAAQa,EAAYC,oBAAoBJ,EAAWV,SAGtD,KAAO,QACCd,EAAYQ,YAAYC,eAAeK,MAC/C,CACD,IACE,OAEYrB,CAAiB","ignoreList":[]}