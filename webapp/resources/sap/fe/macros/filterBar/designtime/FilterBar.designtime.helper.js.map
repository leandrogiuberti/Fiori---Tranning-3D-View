{"version":3,"file":"FilterBar.designtime.helper.js","names":["getPropertyPath","_exports","getDesigntimeSettings","showClearButton","id","name","description","type","value","keyUser","useSemanticDateRange","navigationProperties","getAdapationProperties","designtimeSettings","filterBar","filterBarApi","filterBarInfoForConversion","StateHelper","_getControlInfoForConversion","propertyValues","forEach","setting","getContent","getProperty","selectionFieldsConfigs","getSettings","items","manifestSetting","settingsData","label","tooltip","control","controlData","enum","enums","push"],"sources":["./FilterBar.designtime.helper.ts"],"sourcesContent":["import type { DesigntimeSetting, DesigntimeSettingEnums, PropertyValue, SettingsData } from \"sap/fe/macros/designtime/Designtime.helper\";\nimport type FilterBarAPI from \"sap/fe/macros/filterBar/FilterBarAPI\";\nimport StateHelper from \"sap/fe/macros/mdc/adapter/StateHelper\";\nimport type FilterBar from \"sap/ui/mdc/FilterBar\";\n/*!\n * Find the current values of the filterBar configuration that is provided in the filterBar adapt dialog\n */\n\ntype ControlData = {\n\ttype: string | undefined;\n\tenum: DesigntimeSettingEnums[] | undefined;\n\tvalue: unknown;\n\tid: string;\n};\n\nexport function getPropertyPath(): string {\n\treturn \"controlConfiguration/@com.sap.vocabularies.UI.v1.SelectionFields\";\n}\n\n/**\n * Return the available design time settings for the filterBar building block.\n * @returns The available design time settings for this building block\n */\nexport function getDesigntimeSettings(): DesigntimeSetting[] {\n\t// For first implementaton of table design time adaption\n\tconst showClearButton: DesigntimeSetting = {\n\t\tid: \"showClearButton\",\n\t\tname: \"RTA_CONFIGURATION_FILTERBAR_SHOWCLEARBUTTON_NAME\",\n\t\tdescription: \"RTA_CONFIGURATION_FILTERBAR_SHOWCLEARBUTTON_DESC\",\n\t\ttype: \"boolean\",\n\t\tvalue: false,\n\t\tkeyUser: true\n\t};\n\tconst useSemanticDateRange: DesigntimeSetting = {\n\t\tid: \"useSemanticDateRange\",\n\t\tname: \"RTA_CONFIGURATION_FILTERBAR_USESEMANTICDATERANGE_NAME\",\n\t\tdescription: \"RTA_CONFIGURATION_FILTERBAR_USESEMANTICDATERANGE_DESC\",\n\t\ttype: \"boolean\",\n\t\tvalue: true,\n\t\tkeyUser: true\n\t};\n\tconst navigationProperties: DesigntimeSetting = {\n\t\tid: \"navigationProperties\",\n\t\tname: \"RTA_CONFIGURATION_FILTERBAR_NAVIGATIONPROPS_NAME\",\n\t\tdescription: \"RTA_CONFIGURATION_FILTERBAR_NAVIGATIONPROPS_DESC\",\n\t\ttype: \"string[]\",\n\t\tvalue: []\n\t};\n\treturn [showClearButton, useSemanticDateRange, navigationProperties];\n}\n/**\n * Returns the values of the settings that are defined for filter bar adaption.\n * @param designtimeSettings Array of the settings for filter bar\n * @param filterBar Reference to the filter bar\n * @param filterBarApi Reference to the filter bar\n * @returns An object containg the settings with values\n */\nexport function getAdapationProperties(\n\tdesigntimeSettings: DesigntimeSetting[],\n\tfilterBar: FilterBar,\n\tfilterBarApi: FilterBarAPI\n): PropertyValue {\n\tconst filterBarInfoForConversion = StateHelper._getControlInfoForConversion(filterBar);\n\n\tconst propertyValues: PropertyValue = {\n\t\tshowClearButton: false,\n\t\tuseSemanticDateRange: false,\n\t\tnavigationProperties: []\n\t};\n\n\tdesigntimeSettings.forEach(function (setting) {\n\t\tswitch (setting.id) {\n\t\t\tcase \"showClearButton\":\n\t\t\t\tpropertyValues.showClearButton = filterBarApi.getContent()?.getProperty(\"showClearButton\") || false;\n\t\t\t\tbreak;\n\t\t\tcase \"useSemanticDateRange\":\n\t\t\t\tpropertyValues.useSemanticDateRange =\n\t\t\t\t\tfilterBarInfoForConversion.useSemanticDateRange ||\n\t\t\t\t\tfilterBarInfoForConversion.selectionFieldsConfigs?.useSemanticDateRange;\n\t\t\t\tbreak;\n\t\t\tcase \"navigationProperties\":\n\t\t\t\tpropertyValues.navigationProperties = filterBarInfoForConversion.selectionFieldsConfigs?.navigationProperties || []; // prevent navigationProperties from being undefined\n\t\t\t\tbreak;\n\t\t}\n\t});\n\n\treturn propertyValues;\n}\n/**\n * Returns the values of the settings that are defined for table adaption.\n * @param filterBar Refernce to selected filter bar\n * @param propertyValues List of settings and current values provided for filter bar\n * @returns Content in list form to be used in adapation dialog\n */\nexport function getSettings(filterBar: FilterBarAPI, propertyValues: PropertyValue): SettingsData[] {\n\tconst items: SettingsData[] = [];\n\n\tgetDesigntimeSettings().forEach(function (manifestSetting) {\n\t\t//Fill model for adaptation settings data\n\t\tconst settingsData: SettingsData = {\n\t\t\tlabel: manifestSetting.name,\n\t\t\ttooltip: manifestSetting.description,\n\t\t\tcontrol: [],\n\t\t\tkeyUser: manifestSetting.keyUser\n\t\t};\n\n\t\tconst controlData: ControlData = {\n\t\t\ttype: manifestSetting.type,\n\t\t\tenum: manifestSetting.enums,\n\t\t\tvalue: propertyValues[manifestSetting.id],\n\t\t\tid: manifestSetting.id\n\t\t};\n\n\t\tsettingsData.control.push(controlData);\n\t\titems.push(settingsData);\n\t});\n\treturn items;\n}\n"],"mappings":";;;;0FAeO,SAASA,IACf,MAAO,kEACR,CAEAC,EAAAD,kBAIO,SAASE,IAEf,MAAMC,EAAqC,CAC1CC,GAAI,kBACJC,KAAM,mDACNC,YAAa,mDACbC,KAAM,UACNC,MAAO,MACPC,QAAS,MAEV,MAAMC,EAA0C,CAC/CN,GAAI,uBACJC,KAAM,wDACNC,YAAa,wDACbC,KAAM,UACNC,MAAO,KACPC,QAAS,MAEV,MAAME,EAA0C,CAC/CP,GAAI,uBACJC,KAAM,mDACNC,YAAa,mDACbC,KAAM,WACNC,MAAO,IAER,MAAO,CAACL,EAAiBO,EAAsBC,EAChD,CACAV,EAAAC,wBAOO,SAASU,EACfC,EACAC,EACAC,GAEA,MAAMC,EAA6BC,EAAYC,6BAA6BJ,GAE5E,MAAMK,EAAgC,CACrChB,gBAAiB,MACjBO,qBAAsB,MACtBC,qBAAsB,IAGvBE,EAAmBO,QAAQ,SAAUC,GACpC,OAAQA,EAAQjB,IACf,IAAK,kBACJe,EAAehB,gBAAkBY,EAAaO,cAAcC,YAAY,oBAAsB,MAC9F,MACD,IAAK,uBACJJ,EAAeT,qBACdM,EAA2BN,sBAC3BM,EAA2BQ,wBAAwBd,qBACpD,MACD,IAAK,uBACJS,EAAeR,qBAAuBK,EAA2BQ,wBAAwBb,sBAAwB,GACjH,MAEH,GAEA,OAAOQ,CACR,CACAlB,EAAAW,yBAMO,SAASa,EAAYX,EAAyBK,GACpD,MAAMO,EAAwB,GAE9BxB,IAAwBkB,QAAQ,SAAUO,GAEzC,MAAMC,EAA6B,CAClCC,MAAOF,EAAgBtB,KACvByB,QAASH,EAAgBrB,YACzByB,QAAS,GACTtB,QAASkB,EAAgBlB,SAG1B,MAAMuB,EAA2B,CAChCzB,KAAMoB,EAAgBpB,KACtB0B,KAAMN,EAAgBO,MACtB1B,MAAOW,EAAeQ,EAAgBvB,IACtCA,GAAIuB,EAAgBvB,IAGrBwB,EAAaG,QAAQI,KAAKH,GAC1BN,EAAMS,KAAKP,EACZ,GACA,OAAOF,CACR,CAACzB,EAAAwB,cAAA,OAAAxB,CAAA","ignoreList":[]}