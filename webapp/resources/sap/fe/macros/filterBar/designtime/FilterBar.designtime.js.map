{"version":3,"file":"FilterBar.designtime.js","names":["configPath","getAdaptationProperties","designtimeSettings","filterBar","filterBarAPI","propertyValues","forEach","setting","id","getAdaptationPropertyValue","_exports","filterBarApi","returnValue","filterBarInfoForConversion","StateHelper","_getControlInfoForConversion","getContent","getProperty","useSemanticDateRange","selectionFieldsConfigs","navigationProperties","FilterBarBlockDesignTime","actions","annotation","textArrangement","getTextArrangementChangeAction","rename","getRenameAction","settings","fe","name","getText","icon","isEnabled","isManifestChangesEnabled","handler","async","getParent","getDesigntimeSettings","unchangedData","structuredClone","configContext","getBindingContext","isConfigModelPrepared","items","getSettings","getSettingsIfKeyUser","CommonUtils","getAppComponent","prepareConfigModel","resourceModel","getModel","openAdaptionDialog","then","propertyValuesEntered","propertyPath","getPropertyPath","extractChanges","noChanges","properties","showClearButton","ignore","liveMode","showGoButton","showMessages","visible","blocked","busy","busyIndicatorDelay","busyIndicatorSize","initialLayout","showAdaptFiltersButton","aggregations","manifestSettings","getPropertyNamesAndDescriptions","manifestSettingsValues","returnValues","manifestPropertyPath","control","manifestPropertyChange","propertyChanges","separateChanges"],"sources":["./FilterBar.designtime.ts"],"sourcesContent":["/*!\n */\n\nimport CommonUtils from \"sap/fe/core/CommonUtils\";\nimport type ResourceModel from \"sap/fe/core/ResourceModel\";\nimport { getRenameAction, getText, getTextArrangementChangeAction } from \"sap/fe/core/designtime/AnnotationBasedChanges\";\nimport type { DesigntimeSetting, PropertyValue, adaptionChange } from \"sap/fe/macros/designtime/Designtime.helper\";\nimport {\n\textractChanges,\n\tgetPropertyNamesAndDescriptions,\n\tgetSettingsIfKeyUser,\n\tisConfigModelPrepared,\n\tisManifestChangesEnabled,\n\tnoChanges,\n\topenAdaptionDialog,\n\tprepareConfigModel,\n\tseparateChanges\n} from \"sap/fe/macros/designtime/Designtime.helper\";\nimport type FilterBarAPI from \"sap/fe/macros/filterBar/FilterBarAPI\";\nimport { getDesigntimeSettings, getPropertyPath, getSettings } from \"sap/fe/macros/filterBar/designtime/FilterBar.designtime.helper\";\nimport StateHelper from \"sap/fe/macros/mdc/adapter/StateHelper\";\nimport type FilterBar from \"sap/ui/mdc/FilterBar\";\nimport type Context from \"sap/ui/model/Context\";\n\nconst configPath = \"rta/filterBarConfigSettings\";\n\nexport function getAdaptationProperties(\n\tdesigntimeSettings: DesigntimeSetting[],\n\tfilterBar: FilterBar,\n\tfilterBarAPI: FilterBarAPI\n): PropertyValue {\n\tconst propertyValues: PropertyValue = {};\n\tdesigntimeSettings.forEach(function (setting) {\n\t\tpropertyValues[setting.id] = getAdaptationPropertyValue(setting, filterBar, filterBarAPI);\n\t});\n\treturn propertyValues;\n}\n\n/**\n * Returns the value of one of the settings that have been defined for filter bar adaptation.\n * @param setting The definition of the setting required for adaptation\n * @param filterBar Reference of the filter bar control\n * @param filterBarApi Reference of the parent of filter bar control\n * @returns Setting definition with a value for selected control\n */\nfunction getAdaptationPropertyValue(\n\tsetting: DesigntimeSetting,\n\tfilterBar: FilterBar,\n\tfilterBarApi: FilterBarAPI\n): boolean | string | number | string[] {\n\tlet returnValue: boolean | string | number | string[] = \"\";\n\n\tconst filterBarInfoForConversion = StateHelper._getControlInfoForConversion(filterBar);\n\n\tswitch (setting.id) {\n\t\tcase \"showClearButton\":\n\t\t\treturnValue = filterBarApi.getContent()?.getProperty(\"showClearButton\") || false;\n\t\t\tbreak;\n\t\tcase \"useSemanticDateRange\":\n\t\t\treturnValue =\n\t\t\t\tfilterBarInfoForConversion.useSemanticDateRange ||\n\t\t\t\tfilterBarInfoForConversion.selectionFieldsConfigs?.useSemanticDateRange ||\n\t\t\t\tfalse;\n\t\t\tbreak;\n\t\tcase \"navigationProperties\":\n\t\t\treturnValue = filterBarInfoForConversion.selectionFieldsConfigs?.navigationProperties || []; // prevent navigationProperties from being undefined\n\t\t\tbreak;\n\t}\n\treturn returnValue;\n}\n\nconst FilterBarBlockDesignTime = {\n\tactions: {\n\t\tannotation: {\n\t\t\ttextArrangement: getTextArrangementChangeAction(),\n\t\t\trename: getRenameAction()\n\t\t},\n\t\tsettings: {\n\t\t\tfe: {\n\t\t\t\tname: getText(\"RTA_CONTEXT_ACTIONMENU_CONFIG\"),\n\t\t\t\ticon: \"sap-icon://developer-settings\",\n\t\t\t\tisEnabled: isManifestChangesEnabled,\n\t\t\t\thandler: async function (filterBar: FilterBar): Promise<adaptionChange[]> {\n\t\t\t\t\tconst filterBarApi = filterBar.getParent() as FilterBarAPI;\n\t\t\t\t\tconst designtimeSettings = getDesigntimeSettings();\n\t\t\t\t\tconst propertyValues = getAdaptationProperties(designtimeSettings, filterBar, filterBarApi);\n\t\t\t\t\tconst unchangedData = structuredClone(propertyValues); //deep copy to remember the starting value set, needed for the navigation properties multi inhput field\n\t\t\t\t\tconst configContext = filterBar.getBindingContext(\"internal\") as Context;\n\t\t\t\t\tif (!isConfigModelPrepared(configContext, configPath)) {\n\t\t\t\t\t\t// first time this session\n\t\t\t\t\t\tlet items = getSettings(filterBarApi, propertyValues);\n\t\t\t\t\t\titems = getSettingsIfKeyUser(CommonUtils.getAppComponent(filterBar), items);\n\t\t\t\t\t\t// use internal model to persist adaptation configuration values\n\t\t\t\t\t\tprepareConfigModel(items, configContext, configPath);\n\t\t\t\t\t}\n\t\t\t\t\tconst resourceModel = filterBar.getModel(\"sap.fe.i18n\") as ResourceModel;\n\t\t\t\t\treturn openAdaptionDialog(\n\t\t\t\t\t\tconfigContext,\n\t\t\t\t\t\tpropertyValues,\n\t\t\t\t\t\t\"{sap.fe.i18n>RTA_CONFIGURATION_TITLE_FILTERBAR}\",\n\t\t\t\t\t\tresourceModel,\n\t\t\t\t\t\tconfigPath\n\t\t\t\t\t).then(function (propertyValuesEntered: PropertyValue): adaptionChange[] | [] {\n\t\t\t\t\t\tconst propertyPath = getPropertyPath();\n\t\t\t\t\t\treturn extractChanges(designtimeSettings, unchangedData, propertyValuesEntered, propertyPath, filterBar);\n\t\t\t\t\t}, noChanges);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\t// We disable mdc filter bar properties in the property panel of Fiori Tools\n\tproperties: {\n\t\tshowClearButton: { ignore: true },\n\t\tliveMode: { ignore: true },\n\t\tshowGoButton: { ignore: true },\n\t\tshowMessages: { ignore: true },\n\t\tvisible: { ignore: true },\n\t\tblocked: { ignore: true },\n\t\tbusy: { ignore: true },\n\t\tbusyIndicatorDelay: { ignore: true },\n\t\tbusyIndicatorSize: { ignore: true },\n\t\tinitialLayout: { ignore: true },\n\t\tshowAdaptFiltersButton: { ignore: true }\n\t},\n\n\taggregations: {},\n\t// These functions provide the properties used in filter bar adaption to Fiori tools.\n\tmanifestSettings: function (filterBar: FilterBar): DesigntimeSetting[] {\n\t\treturn getPropertyNamesAndDescriptions(getDesigntimeSettings(), filterBar.getModel(\"sap.fe.i18n\") as ResourceModel);\n\t},\n\t// getAdaptionPropertyValue\n\tmanifestSettingsValues: function (designtimeSettings: DesigntimeSetting[], filterBar: FilterBar): PropertyValue {\n\t\tconst filterBarApi = filterBar.getParent() as FilterBarAPI;\n\t\tconst returnValues: PropertyValue = {};\n\t\tdesigntimeSettings.forEach(function (setting) {\n\t\t\treturnValues[setting.id] = getAdaptationPropertyValue(setting, filterBar, filterBarApi);\n\t\t});\n\t\treturn returnValues;\n\t},\n\t// get path for control configuration. Pass reference to the control\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tmanifestPropertyPath: function (control: FilterBar): string {\n\t\treturn getPropertyPath();\n\t},\n\t// create change structue. Pass array of manifest setting and new value, the property path and the control\n\tmanifestPropertyChange: function (propertyChanges: PropertyValue, propertyPath: string, control: FilterBar): adaptionChange[] {\n\t\treturn separateChanges(propertyChanges, propertyPath, control);\n\t}\n};\n\nexport default FilterBarBlockDesignTime;\n"],"mappings":";;;;8qBAwBA,MAAMA,EAAa,8BAEZ,SAASC,EACfC,EACAC,EACAC,GAEA,MAAMC,EAAgC,CAAC,EACvCH,EAAmBI,QAAQ,SAAUC,GACpCF,EAAeE,EAAQC,IAAMC,EAA2BF,EAASJ,EAAWC,EAC7E,GACA,OAAOC,CACR,CAEAK,EAAAT,0BAOA,SAASQ,EACRF,EACAJ,EACAQ,GAEA,IAAIC,EAAoD,GAExD,MAAMC,EAA6BC,EAAYC,6BAA6BZ,GAE5E,OAAQI,EAAQC,IACf,IAAK,kBACJI,EAAcD,EAAaK,cAAcC,YAAY,oBAAsB,MAC3E,MACD,IAAK,uBACJL,EACCC,EAA2BK,sBAC3BL,EAA2BM,wBAAwBD,sBACnD,MACD,MACD,IAAK,uBACJN,EAAcC,EAA2BM,wBAAwBC,sBAAwB,GACzF,MAEF,OAAOR,CACR,CAEA,MAAMS,EAA2B,CAChCC,QAAS,CACRC,WAAY,CACXC,gBAAiBC,IACjBC,OAAQC,KAETC,SAAU,CACTC,GAAI,CACHC,KAAMC,EAAQ,iCACdC,KAAM,gCACNC,UAAWC,EACXC,QAASC,eAAgBjC,GACxB,MAAMQ,EAAeR,EAAUkC,YAC/B,MAAMnC,EAAqBoC,IAC3B,MAAMjC,EAAiBJ,EAAwBC,EAAoBC,EAAWQ,GAC9E,MAAM4B,EAAgBC,gBAAgBnC,GACtC,MAAMoC,EAAgBtC,EAAUuC,kBAAkB,YAClD,IAAKC,EAAsBF,EAAezC,GAAa,CAEtD,IAAI4C,EAAQC,EAAYlC,EAAcN,GACtCuC,EAAQE,EAAqBC,EAAYC,gBAAgB7C,GAAYyC,GAErEK,EAAmBL,EAAOH,EAAezC,EAC1C,CACA,MAAMkD,EAAgB/C,EAAUgD,SAAS,eACzC,OAAOC,EACNX,EACApC,EACA,kDACA6C,EACAlD,GACCqD,KAAK,SAAUC,GAChB,MAAMC,EAAeC,IACrB,OAAOC,EAAevD,EAAoBqC,EAAee,EAAuBC,EAAcpD,EAC/F,EAAGuD,EACJ,KAKHC,WAAY,CACXC,gBAAiB,CAAEC,OAAQ,MAC3BC,SAAU,CAAED,OAAQ,MACpBE,aAAc,CAAEF,OAAQ,MACxBG,aAAc,CAAEH,OAAQ,MACxBI,QAAS,CAAEJ,OAAQ,MACnBK,QAAS,CAAEL,OAAQ,MACnBM,KAAM,CAAEN,OAAQ,MAChBO,mBAAoB,CAAEP,OAAQ,MAC9BQ,kBAAmB,CAAER,OAAQ,MAC7BS,cAAe,CAAET,OAAQ,MACzBU,uBAAwB,CAAEV,OAAQ,OAGnCW,aAAc,CAAC,EAEfC,iBAAkB,SAAUtE,GAC3B,OAAOuE,EAAgCpC,IAAyBnC,EAAUgD,SAAS,eACpF,EAEAwB,uBAAwB,SAAUzE,EAAyCC,GAC1E,MAAMQ,EAAeR,EAAUkC,YAC/B,MAAMuC,EAA8B,CAAC,EACrC1E,EAAmBI,QAAQ,SAAUC,GACpCqE,EAAarE,EAAQC,IAAMC,EAA2BF,EAASJ,EAAWQ,EAC3E,GACA,OAAOiE,CACR,EAGAC,qBAAsB,SAAUC,GAC/B,OAAOtB,GACR,EAEAuB,uBAAwB,SAAUC,EAAgCzB,EAAsBuB,GACvF,OAAOG,EAAgBD,EAAiBzB,EAAcuB,EACvD,GACC,OAEazD,CAAwB","ignoreList":[]}