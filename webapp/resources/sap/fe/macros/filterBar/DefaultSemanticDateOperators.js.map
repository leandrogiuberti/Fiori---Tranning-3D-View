{"version":3,"file":"DefaultSemanticDateOperators.js","names":["DYNAMIC_DATE_CATEGORY","_exports","FIXED_DATE_CATEGORY","DYNAMIC_DATE_INT_CATEGORY","DYNAMIC_DATERANGE_CATEGORY","DYNAMIC_MONTH_CATEGORY","FIXED_WEEK_CATEGORY","FIXED_MONTH_CATEGORY","FIXED_QUARTER_CATEGORY","FIXED_YEAR_CATEGORY","DYNAMIC_WEEK_INT_CATEGORY","DYNAMIC_MONTH_INT_CATEGORY","DYNAMIC_QUARTER_INT_CATEGORY","DYNAMIC_YEAR_INT_CATEGORY","DYNAMIC_MINUTE_INT_CATEGORY","DYNAMIC_HOUR_INT_CATEGORY","basicDateTimeOps","EQ","key","category","BT","defaultFixedDateSingleValueOperations","YESTERDAY","fnRanges","UniversalDateUtils","ranges","yesterday","TODAY","today","TOMORROW","tomorrow","otherFixedDateSingleValueOperations","FIRSTDAYWEEK","firstDayOfWeek","LASTDAYWEEK","lastDayOfWeek","FIRSTDAYMONTH","firstDayOfMonth","LASTDAYMONTH","lastDayOfMonth","FIRSTDAYQUARTER","firstDayOfQuarter","LASTDAYQUARTER","lastDayOfQuarter","FIRSTDAYYEAR","firstDayOfYear","LASTDAYYEAR","lastDayOfYear","defaultSemanticDateOperations","DATE","FROM","TO","DATERANGE","SPECIFICMONTH","TODAYFROMTO","LASTDAYS","NEXTDAYS","THISWEEK","LASTWEEK","LASTWEEKS","NEXTWEEK","NEXTWEEKS","THISMONTH","LASTMONTH","LASTMONTHS","NEXTMONTH","NEXTMONTHS","THISQUARTER","LASTQUARTER","LASTQUARTERS","NEXTQUARTER","NEXTQUARTERS","QUARTER1","QUARTER2","QUARTER3","QUARTER4","THISYEAR","LASTYEAR","LASTYEARS","NEXTYEAR","NEXTYEARS","LASTMINUTES","NEXTMINUTES","LASTHOURS","NEXTHOURS","YEARTODATE","DATETOYEAR","_getDateRangeOperator","Operator","name","filterOperator","ModelOperator","alias","Date","DateTime","valueTypes","getModelFilter","condition","fieldPath","type","getModelFilterForDateRange","this","validate","values","length","ValidateException","fromDate","toDate","getTime","prototype","apply","_getDateOperator","getModelFilterForDate","_getFromOperator","GE","getModelFilterForFrom","_getToOperator","LE","getModelFilterForTo","getOperatorsInfo","Object","assign","addSemanticDateOperators","FilterOperatorUtil","addOperator","getSemanticDateOperations","operators","keys","operator","isA","operatorType","_createLocalType","from","operatorModelFormat","getModelFormat","dateInstance","parse","getModelValue","setHours","setMinutes","setSeconds","setMilliseconds","to","Filter","path","value1","value2","value","getSingleValueDateOperations","fixedDateSingleValueOperations","getFixedDateSingleValueOperations","dateOperation"],"sources":["./DefaultSemanticDateOperators.ts"],"sourcesContent":["import UniversalDateUtils from \"sap/ui/core/date/UniversalDateUtils\";\nimport type DateFormat from \"sap/ui/core/format/DateFormat\";\nimport type { ConditionObject } from \"sap/ui/mdc/condition/Condition\";\nimport FilterOperatorUtil from \"sap/ui/mdc/condition/FilterOperatorUtil\";\nimport Operator from \"sap/ui/mdc/condition/Operator\";\nimport Filter from \"sap/ui/model/Filter\";\nimport { default as ModelOperator } from \"sap/ui/model/FilterOperator\";\nimport type SimpleType from \"sap/ui/model/SimpleType\";\nimport ValidateException from \"sap/ui/model/ValidateException\";\nimport type DateTimeOffset from \"sap/ui/model/odata/type/DateTimeOffset\";\n\nexport const DYNAMIC_DATE_CATEGORY = \"DYNAMIC.DATE\";\nconst FIXED_DATE_CATEGORY = \"FIXED.DATE\";\nconst DYNAMIC_DATE_INT_CATEGORY = \"DYNAMIC.DATE.INT\";\nconst DYNAMIC_DATERANGE_CATEGORY = \"DYNAMIC.DATERANGE\";\nconst DYNAMIC_MONTH_CATEGORY = \"DYNAMIC.MONTH\";\nconst FIXED_WEEK_CATEGORY = \"FIXED.WEEK\";\nconst FIXED_MONTH_CATEGORY = \"FIXED.MONTH\";\nconst FIXED_QUARTER_CATEGORY = \"FIXED.QUARTER\";\nconst FIXED_YEAR_CATEGORY = \"FIXED.YEAR\";\nconst DYNAMIC_WEEK_INT_CATEGORY = \"DYNAMIC.WEEK.INT\";\nconst DYNAMIC_MONTH_INT_CATEGORY = \"DYNAMIC.MONTH.INT\";\nconst DYNAMIC_QUARTER_INT_CATEGORY = \"DYNAMIC.QUARTER.INT\";\nconst DYNAMIC_YEAR_INT_CATEGORY = \"DYNAMIC.YEAR.INT\";\nconst DYNAMIC_MINUTE_INT_CATEGORY = \"DYNAMIC.MINUTE.INT\";\nconst DYNAMIC_HOUR_INT_CATEGORY = \"DYNAMIC.HOUR.INT\";\n\n/**\n * Operations info to identify which operators the user wants to support.\n * Like:\n * {\n * \t<operator name>: {\n * \t\tkey: <identifier>,\n * \t\tcategory: <type of operator>\n * \t},\n * \t<more operators>...\n * }\n */\nconst basicDateTimeOps = {\n\tEQ: {\n\t\tkey: \"EQ\",\n\t\tcategory: DYNAMIC_DATE_CATEGORY\n\t},\n\tBT: {\n\t\tkey: \"BT\",\n\t\tcategory: DYNAMIC_DATERANGE_CATEGORY\n\t}\n};\n\nconst defaultFixedDateSingleValueOperations = {\n\tYESTERDAY: {\n\t\tkey: \"YESTERDAY\",\n\t\tcategory: FIXED_DATE_CATEGORY,\n\t\tfnRanges: UniversalDateUtils.ranges.yesterday\n\t},\n\tTODAY: {\n\t\tkey: \"TODAY\",\n\t\tcategory: FIXED_DATE_CATEGORY,\n\t\tfnRanges: UniversalDateUtils.ranges.today\n\t},\n\tTOMORROW: {\n\t\tkey: \"TOMORROW\",\n\t\tcategory: FIXED_DATE_CATEGORY,\n\t\tfnRanges: UniversalDateUtils.ranges.tomorrow\n\t}\n};\n\nconst otherFixedDateSingleValueOperations = {\n\tFIRSTDAYWEEK: {\n\t\tkey: \"FIRSTDAYWEEK\",\n\t\tcategory: FIXED_DATE_CATEGORY,\n\t\tfnRanges: UniversalDateUtils.ranges.firstDayOfWeek\n\t},\n\tLASTDAYWEEK: {\n\t\tkey: \"LASTDAYWEEK\",\n\t\tcategory: FIXED_DATE_CATEGORY,\n\t\tfnRanges: UniversalDateUtils.ranges.lastDayOfWeek\n\t},\n\tFIRSTDAYMONTH: {\n\t\tkey: \"FIRSTDAYMONTH\",\n\t\tcategory: FIXED_DATE_CATEGORY,\n\t\tfnRanges: UniversalDateUtils.ranges.firstDayOfMonth\n\t},\n\tLASTDAYMONTH: {\n\t\tkey: \"LASTDAYMONTH\",\n\t\tcategory: FIXED_DATE_CATEGORY,\n\t\tfnRanges: UniversalDateUtils.ranges.lastDayOfMonth\n\t},\n\tFIRSTDAYQUARTER: {\n\t\tkey: \"FIRSTDAYQUARTER\",\n\t\tcategory: FIXED_DATE_CATEGORY,\n\t\tfnRanges: UniversalDateUtils.ranges.firstDayOfQuarter\n\t},\n\tLASTDAYQUARTER: {\n\t\tkey: \"LASTDAYQUARTER\",\n\t\tcategory: FIXED_DATE_CATEGORY,\n\t\tfnRanges: UniversalDateUtils.ranges.lastDayOfQuarter\n\t},\n\tFIRSTDAYYEAR: {\n\t\tkey: \"FIRSTDAYYEAR\",\n\t\tcategory: FIXED_DATE_CATEGORY,\n\t\tfnRanges: UniversalDateUtils.ranges.firstDayOfYear\n\t},\n\tLASTDAYYEAR: {\n\t\tkey: \"LASTDAYYEAR\",\n\t\tcategory: FIXED_DATE_CATEGORY,\n\t\tfnRanges: UniversalDateUtils.ranges.lastDayOfYear\n\t}\n};\n\nconst defaultSemanticDateOperations = {\n\t...defaultFixedDateSingleValueOperations,\n\tDATE: {\n\t\tkey: \"DATE\",\n\t\tcategory: DYNAMIC_DATE_CATEGORY\n\t},\n\tFROM: {\n\t\tkey: \"FROM\",\n\t\tcategory: DYNAMIC_DATE_CATEGORY\n\t},\n\tTO: {\n\t\tkey: \"TO\",\n\t\tcategory: DYNAMIC_DATE_CATEGORY\n\t},\n\tDATERANGE: {\n\t\tkey: \"DATERANGE\",\n\t\tcategory: DYNAMIC_DATERANGE_CATEGORY\n\t},\n\tSPECIFICMONTH: {\n\t\tkey: \"SPECIFICMONTH\",\n\t\tcategory: DYNAMIC_MONTH_CATEGORY\n\t},\n\tTODAYFROMTO: {\n\t\tkey: \"TODAYFROMTO\",\n\t\tcategory: DYNAMIC_DATE_INT_CATEGORY\n\t},\n\tLASTDAYS: {\n\t\tkey: \"LASTDAYS\",\n\t\tcategory: DYNAMIC_DATE_INT_CATEGORY\n\t},\n\tNEXTDAYS: {\n\t\tkey: \"NEXTDAYS\",\n\t\tcategory: DYNAMIC_DATE_INT_CATEGORY\n\t},\n\tTHISWEEK: {\n\t\tkey: \"THISWEEK\",\n\t\tcategory: FIXED_WEEK_CATEGORY\n\t},\n\tLASTWEEK: {\n\t\tkey: \"LASTWEEK\",\n\t\tcategory: FIXED_WEEK_CATEGORY\n\t},\n\tLASTWEEKS: {\n\t\tkey: \"LASTWEEKS\",\n\t\tcategory: DYNAMIC_WEEK_INT_CATEGORY\n\t},\n\tNEXTWEEK: {\n\t\tkey: \"NEXTWEEK\",\n\t\tcategory: FIXED_WEEK_CATEGORY\n\t},\n\tNEXTWEEKS: {\n\t\tkey: \"NEXTWEEKS\",\n\t\tcategory: DYNAMIC_WEEK_INT_CATEGORY\n\t},\n\tTHISMONTH: {\n\t\tkey: \"THISMONTH\",\n\t\tcategory: FIXED_MONTH_CATEGORY\n\t},\n\tLASTMONTH: {\n\t\tkey: \"LASTMONTH\",\n\t\tcategory: FIXED_MONTH_CATEGORY\n\t},\n\tLASTMONTHS: {\n\t\tkey: \"LASTMONTHS\",\n\t\tcategory: DYNAMIC_MONTH_INT_CATEGORY\n\t},\n\tNEXTMONTH: {\n\t\tkey: \"NEXTMONTH\",\n\t\tcategory: FIXED_MONTH_CATEGORY\n\t},\n\tNEXTMONTHS: {\n\t\tkey: \"NEXTMONTHS\",\n\t\tcategory: DYNAMIC_MONTH_INT_CATEGORY\n\t},\n\tTHISQUARTER: {\n\t\tkey: \"THISQUARTER\",\n\t\tcategory: FIXED_QUARTER_CATEGORY\n\t},\n\tLASTQUARTER: {\n\t\tkey: \"LASTQUARTER\",\n\t\tcategory: FIXED_QUARTER_CATEGORY\n\t},\n\tLASTQUARTERS: {\n\t\tkey: \"LASTQUARTERS\",\n\t\tcategory: DYNAMIC_QUARTER_INT_CATEGORY\n\t},\n\tNEXTQUARTER: {\n\t\tkey: \"NEXTQUARTER\",\n\t\tcategory: FIXED_QUARTER_CATEGORY\n\t},\n\tNEXTQUARTERS: {\n\t\tkey: \"NEXTQUARTERS\",\n\t\tcategory: DYNAMIC_QUARTER_INT_CATEGORY\n\t},\n\tQUARTER1: {\n\t\tkey: \"QUARTER1\",\n\t\tcategory: FIXED_QUARTER_CATEGORY\n\t},\n\tQUARTER2: {\n\t\tkey: \"QUARTER2\",\n\t\tcategory: FIXED_QUARTER_CATEGORY\n\t},\n\tQUARTER3: {\n\t\tkey: \"QUARTER3\",\n\t\tcategory: FIXED_QUARTER_CATEGORY\n\t},\n\tQUARTER4: {\n\t\tkey: \"QUARTER4\",\n\t\tcategory: FIXED_QUARTER_CATEGORY\n\t},\n\tTHISYEAR: {\n\t\tkey: \"THISYEAR\",\n\t\tcategory: FIXED_YEAR_CATEGORY\n\t},\n\tLASTYEAR: {\n\t\tkey: \"LASTYEAR\",\n\t\tcategory: FIXED_YEAR_CATEGORY\n\t},\n\tLASTYEARS: {\n\t\tkey: \"LASTYEARS\",\n\t\tcategory: DYNAMIC_YEAR_INT_CATEGORY\n\t},\n\tNEXTYEAR: {\n\t\tkey: \"NEXTYEAR\",\n\t\tcategory: FIXED_YEAR_CATEGORY\n\t},\n\tNEXTYEARS: {\n\t\tkey: \"NEXTYEARS\",\n\t\tcategory: DYNAMIC_YEAR_INT_CATEGORY\n\t},\n\tLASTMINUTES: {\n\t\tkey: \"LASTMINUTES\",\n\t\tcategory: DYNAMIC_MINUTE_INT_CATEGORY\n\t},\n\tNEXTMINUTES: {\n\t\tkey: \"NEXTMINUTES\",\n\t\tcategory: DYNAMIC_MINUTE_INT_CATEGORY\n\t},\n\tLASTHOURS: {\n\t\tkey: \"LASTHOURS\",\n\t\tcategory: DYNAMIC_HOUR_INT_CATEGORY\n\t},\n\tNEXTHOURS: {\n\t\tkey: \"NEXTHOURS\",\n\t\tcategory: DYNAMIC_HOUR_INT_CATEGORY\n\t},\n\tYEARTODATE: {\n\t\tkey: \"YEARTODATE\",\n\t\tcategory: FIXED_YEAR_CATEGORY\n\t},\n\tDATETOYEAR: {\n\t\tkey: \"DATETOYEAR\",\n\t\tcategory: FIXED_YEAR_CATEGORY\n\t}\n};\n\n/**\n * Creating date range operator instance.\n * @returns Date range operator\n */\nfunction _getDateRangeOperator(): Operator {\n\treturn new Operator({\n\t\tname: \"DATERANGE\",\n\t\tfilterOperator: ModelOperator.BT,\n\t\talias: { Date: \"DATERANGE\", DateTime: \"DATERANGE\" },\n\t\tvalueTypes: [{ name: \"sap.ui.model.odata.type.Date\" }, { name: \"sap.ui.model.odata.type.Date\" }], // use date type to have no time part,\n\t\tgetModelFilter: function (this: Operator, condition: ConditionObject, fieldPath: string, type: SimpleType): Filter {\n\t\t\treturn getModelFilterForDateRange(condition, fieldPath, type, this);\n\t\t},\n\t\tvalidate: function (values: string[], type: SimpleType): void {\n\t\t\tif (values.length < 2) {\n\t\t\t\tthrow new ValidateException(\"Date Range must have two values\");\n\t\t\t} else {\n\t\t\t\tconst fromDate = new Date(values[0]);\n\t\t\t\tconst toDate = new Date(values[1]);\n\t\t\t\tif (fromDate.getTime() > toDate.getTime()) {\n\t\t\t\t\tthrow new ValidateException(\"From Date Should Be Less Than To Date\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tOperator.prototype.validate?.apply(this, [values, type]);\n\t\t}\n\t});\n}\n\n/**\n * Creating normal date operator instance.\n * @returns Date operator\n */\nfunction _getDateOperator(): Operator {\n\treturn new Operator({\n\t\tname: \"DATE\",\n\t\talias: { Date: \"DATE\", DateTime: \"DATE\" },\n\t\tfilterOperator: ModelOperator.EQ,\n\t\tvalueTypes: [{ name: \"sap.ui.model.odata.type.Date\" }],\n\t\tgetModelFilter: function (this: Operator, condition: ConditionObject, fieldPath: string, type: SimpleType): Filter {\n\t\t\treturn getModelFilterForDate(condition, fieldPath, type, this);\n\t\t}\n\t});\n}\n\n/**\n * Creating \"FROM\" operator with selected date as start anchor.\n * @returns Operator\n */\nfunction _getFromOperator(): Operator {\n\treturn new Operator({\n\t\tname: \"FROM\",\n\t\talias: { Date: \"FROM\", DateTime: \"FROM\" },\n\t\tfilterOperator: ModelOperator.GE,\n\t\tvalueTypes: [{ name: \"sap.ui.model.odata.type.Date\" }],\n\t\tgetModelFilter: function (this: Operator, condition: ConditionObject, fieldPath: string, type: SimpleType): Filter {\n\t\t\treturn getModelFilterForFrom(condition, fieldPath, type, this);\n\t\t}\n\t});\n}\n\n/**\n * Creating \"TO\" operator with selected date as end anchor.\n * @returns Operator\n */\nfunction _getToOperator(): Operator {\n\treturn new Operator({\n\t\tname: \"TO\",\n\t\talias: { Date: \"TO\", DateTime: \"TO\" },\n\t\tfilterOperator: ModelOperator.LE,\n\t\tvalueTypes: [{ name: \"sap.ui.model.odata.type.Date\" }],\n\t\tgetModelFilter: function (this: Operator, condition: ConditionObject, fieldPath: string, type: SimpleType): Filter {\n\t\t\treturn getModelFilterForTo(condition, fieldPath, type, this);\n\t\t}\n\t});\n}\n\n// Get the operators based on type\nexport function getOperatorsInfo(type: string | undefined): Record<string, { key: string; category: string }> {\n\treturn type === \"Edm.DateTimeOffset\"\n\t\t? Object.assign({}, defaultSemanticDateOperations, basicDateTimeOps)\n\t\t: defaultSemanticDateOperations;\n}\n\n// Extending operators for Sematic Date Control\nexport function addSemanticDateOperators(): void {\n\tFilterOperatorUtil.addOperator(_getDateRangeOperator());\n\tFilterOperatorUtil.addOperator(_getDateOperator());\n\tFilterOperatorUtil.addOperator(_getFromOperator());\n\tFilterOperatorUtil.addOperator(_getToOperator());\n}\nexport function getSemanticDateOperations(type?: string): string[] {\n\tconst operators = getOperatorsInfo(type);\n\treturn Object.keys(operators);\n}\n\n/**\n * Get model filter for \"DATE\" operator.\n * @param condition\n * @param fieldPath\n * @param type\n * @param operator\n * @returns Filter\n */\nexport function getModelFilterForDate(condition: ConditionObject, fieldPath: string, type: SimpleType, operator: Operator): Filter {\n\tif (type.isA<DateTimeOffset>(\"sap.ui.model.odata.type.DateTimeOffset\")) {\n\t\tconst operatorType = operator._createLocalType(operator.valueTypes[0]);\n\t\tlet from = condition.values[0];\n\t\tconst operatorModelFormat = operatorType.getModelFormat() as DateFormat;\n\t\tconst dateInstance = operatorModelFormat.parse(from, false) as Date;\n\t\tfrom = type.getModelValue(dateInstance);\n\t\tdateInstance.setHours(23);\n\t\tdateInstance.setMinutes(59);\n\t\tdateInstance.setSeconds(59);\n\t\tdateInstance.setMilliseconds(999);\n\t\tconst to = type.getModelValue(dateInstance);\n\t\treturn new Filter({ path: fieldPath, operator: ModelOperator.BT, value1: from, value2: to });\n\t} else {\n\t\treturn new Filter({ path: fieldPath, operator: operator.filterOperator as ModelOperator, value1: condition.values[0] });\n\t}\n}\n\n/**\n * Get model filter for \"TO\" operator.\n * @param condition\n * @param fieldPath\n * @param type\n * @param operator\n * @returns Filter\n */\nexport function getModelFilterForTo(condition: ConditionObject, fieldPath: string, type: SimpleType, operator: Operator): Filter {\n\tif (type.isA<DateTimeOffset>(\"sap.ui.model.odata.type.DateTimeOffset\")) {\n\t\tconst operatorType = operator._createLocalType(operator.valueTypes[0]);\n\t\tconst value = condition.values[0];\n\t\tconst operatorModelFormat = operatorType.getModelFormat() as DateFormat;\n\t\tconst dateInstance = operatorModelFormat.parse(value, false) as Date;\n\t\tdateInstance.setHours(23);\n\t\tdateInstance.setMinutes(59);\n\t\tdateInstance.setSeconds(59);\n\t\tdateInstance.setMilliseconds(999);\n\t\tconst to = type.getModelValue(dateInstance);\n\t\treturn new Filter({ path: fieldPath, operator: ModelOperator.LE, value1: to });\n\t} else {\n\t\treturn new Filter({ path: fieldPath, operator: operator.filterOperator as ModelOperator, value1: condition.values[0] });\n\t}\n}\n\n/**\n * Get model filter for \"TO\" operator.\n * @param condition\n * @param fieldPath\n * @param type\n * @param operator\n * @returns Filter\n */\nexport function getModelFilterForFrom(condition: ConditionObject, fieldPath: string, type: SimpleType, operator: Operator): Filter {\n\tif (type.isA<DateTimeOffset>(\"sap.ui.model.odata.type.DateTimeOffset\")) {\n\t\tconst operatorType = operator._createLocalType(operator.valueTypes[0]);\n\t\tconst value = condition.values[0];\n\t\tconst operatorModelFormat = operatorType.getModelFormat() as DateFormat;\n\t\tconst dateInstance = operatorModelFormat.parse(value, false) as Date;\n\t\tdateInstance.setHours(0);\n\t\tdateInstance.setMinutes(0);\n\t\tdateInstance.setSeconds(0);\n\t\tdateInstance.setMilliseconds(0);\n\t\tconst from = type.getModelValue(dateInstance);\n\t\treturn new Filter({ path: fieldPath, operator: ModelOperator.GE, value1: from });\n\t} else {\n\t\treturn new Filter({ path: fieldPath, operator: operator.filterOperator as ModelOperator, value1: condition.values[0] });\n\t}\n}\n\n/**\n * Get model filter for date range operations.\n * @param condition\n * @param fieldPath\n * @param type\n * @param operator\n * @returns Filter\n */\nexport function getModelFilterForDateRange(condition: ConditionObject, fieldPath: string, type: SimpleType, operator: Operator): Filter {\n\tif (type.isA<DateTimeOffset>(\"sap.ui.model.odata.type.DateTimeOffset\")) {\n\t\tlet operatorType = operator._createLocalType(operator.valueTypes[0]);\n\t\tlet from = condition.values[0];\n\t\tlet operatorModelFormat = operatorType.getModelFormat() as DateFormat; // use ModelFormat to convert in JS-Date and add 23:59:59\n\t\tlet dateInstance = operatorModelFormat.parse(from, false) as Date;\n\t\tfrom = type.getModelValue(dateInstance);\n\t\toperatorType = operator._createLocalType(operator.valueTypes[1]);\n\t\toperatorModelFormat = operatorType.getModelFormat() as DateFormat; // use ModelFormat to convert in JS-Date and add 23:59:59\n\t\tlet to = condition.values[1];\n\t\tdateInstance = operatorModelFormat.parse(to, false) as Date;\n\t\tdateInstance.setHours(23);\n\t\tdateInstance.setMinutes(59);\n\t\tdateInstance.setSeconds(59);\n\t\tdateInstance.setMilliseconds(999);\n\t\tto = type.getModelValue(dateInstance);\n\t\treturn new Filter({ path: fieldPath, operator: ModelOperator.BT, value1: from, value2: to });\n\t} else {\n\t\treturn new Filter({\n\t\t\tpath: fieldPath,\n\t\t\toperator: operator.filterOperator as ModelOperator,\n\t\t\tvalue1: condition.values[0],\n\t\t\tvalue2: condition.values[1]\n\t\t});\n\t}\n}\n\n/**\n * Get all single value date operations for properties with 'SingleValue' filter restriction.\n * @returns Array of operation names.\n */\nexport function getSingleValueDateOperations(): string[] {\n\tconst fixedDateSingleValueOperations = getFixedDateSingleValueOperations();\n\tconst dateOperation = defaultSemanticDateOperations.DATE.key;\n\treturn [...Object.keys(fixedDateSingleValueOperations), dateOperation];\n}\n\n/**\n * Get fixed date single value operations.\n * @returns Array of operation names.\n */\nexport function getFixedDateSingleValueOperations(): typeof defaultFixedDateSingleValueOperations &\n\ttypeof otherFixedDateSingleValueOperations {\n\treturn { ...defaultFixedDateSingleValueOperations, ...otherFixedDateSingleValueOperations };\n}\n"],"mappings":"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","ignoreList":[]}