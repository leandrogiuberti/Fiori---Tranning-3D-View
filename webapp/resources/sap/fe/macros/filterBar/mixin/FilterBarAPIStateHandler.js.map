{"version":3,"file":"FilterBarAPIStateHandler.js","names":["FilterBarAPIStateHandler","_IViewStateContributo","apply","this","arguments","_exports","_inheritsLoose","_proto","prototype","applyLegacyState","async","getControlState","_navParameters","shouldApplyDiffState","skipMerge","filterBar","content","filterBarState","controlState","innerState","fullState","initialState","Object","keys","length","applyState","navParameter","navigationType","NavType","hybrid","undefined","xAppStateFilters","convertSelectionVariantToStateFilters","selectionVariant","mergedFullState","filter","_clearFilterValuesWithOptions","clearEditFilter","StateUtil","applyExternalState","diffState","error","Log","_initialStatePromise","resolve","retrieveState","retrieveExternalState","propertiesInfo","getPropertyInfoSet","propertyInfo","path","removeFromAppState","forEach","PropertyInfo","setInitialState","initialControlState","e","applyNavigationParameters","navigationParameter","Promise","view","getPageController","getView","controller","appComponent","getAppComponent","componentData","getComponentData","startupParameters","variantStatus","filterVariantApplied","applyVariantFromURLParams","handleVariantIdPassedViaURLParams","getContent","sv","requiresStandardVariant","reqStdVariant","_applySelectionVariant","bPreventInitialSearch","variantManagement","_getFilterBarVM","initial","getViewData","initialLoad","InitialLoadMode","Enabled","_shouldAutoTriggerSearch","filterBarAPI","getParent","triggerSearch","_preventInitialSearch","Device","system","desktop","internalModelContext","getBindingContext","searchTriggeredByInitialLoad","isSearchTriggeredByInitialLoad","setProperty","_enableFilterBar","warning","IViewStateContributorMixin"],"sources":["./FilterBarAPIStateHandler.ts"],"sourcesContent":["import Log from \"sap/base/Log\";\nimport type { ControlState, LegacyFilterBarState, NavigationParameter } from \"sap/fe/core/controllerextensions/ViewState\";\nimport IViewStateContributorMixin from \"sap/fe/core/controllerextensions/viewState/IViewStateContributorMixin\";\nimport type { InternalModelContext } from \"sap/fe/core/helpers/ModelHelper\";\nimport { InitialLoadMode } from \"sap/fe/core/library\";\nimport type FilterBar from \"sap/fe/macros/controls/FilterBar\";\nimport type { PropertyInfo } from \"sap/fe/macros/internal/PropertyInfo\";\nimport type SelectionVariant from \"sap/fe/navigation/SelectionVariant\";\nimport { NavType } from \"sap/fe/navigation/library\";\nimport type ListReportController from \"sap/fe/templates/ListReport/ListReportController.controller\";\nimport Device from \"sap/ui/Device\";\nimport type ManagedObject from \"sap/ui/base/ManagedObject\";\nimport type VariantManagement from \"sap/ui/fl/variants/VariantManagement\";\nimport StateUtil from \"sap/ui/mdc/p13n/StateUtil\";\nimport type FilterBarAPI from \"../FilterBarAPI\";\nimport type { FilterBarState } from \"../FilterBarAPI\";\n\nexport default class FilterBarAPIStateHandler extends IViewStateContributorMixin<FilterBarState> {\n\tasync applyLegacyState(\n\t\tthis: FilterBarAPI,\n\t\tgetControlState: (control: ManagedObject) => ControlState,\n\t\t_navParameters?: NavigationParameter,\n\t\tshouldApplyDiffState?: boolean,\n\t\tskipMerge?: boolean\n\t): Promise<void> {\n\t\tconst filterBar = this.content;\n\t\tconst filterBarState = getControlState(filterBar) as { initialState?: LegacyFilterBarState; fullState?: LegacyFilterBarState };\n\t\tconst controlState: FilterBarState = {};\n\n\t\tif (filterBarState) {\n\t\t\tcontrolState.innerState = {\n\t\t\t\t...filterBarState,\n\t\t\t\tfullState: {\n\t\t\t\t\t...controlState.innerState?.fullState,\n\t\t\t\t\t...filterBarState.fullState\n\t\t\t\t},\n\t\t\t\tinitialState: {\n\t\t\t\t\t...controlState.innerState?.initialState,\n\t\t\t\t\t...filterBarState.initialState\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\tif (controlState && Object.keys(controlState).length > 0) {\n\t\t\tawait this.applyState(controlState as object, _navParameters, shouldApplyDiffState, skipMerge);\n\t\t}\n\t}\n\n\tasync applyState(\n\t\tthis: FilterBarAPI,\n\t\tcontrolState: FilterBarState,\n\t\tnavParameter?: NavigationParameter,\n\t\tshouldApplyDiffState?: boolean,\n\t\tskipMerge?: boolean\n\t): Promise<void> {\n\t\ttry {\n\t\t\tif (controlState && navParameter) {\n\t\t\t\tconst navigationType = navParameter.navigationType;\n\t\t\t\t//When navigation type is hybrid, we override the filter conditions in IAppState with SV received from XappState\n\t\t\t\tif (navigationType === NavType.hybrid && controlState.innerState?.fullState !== undefined) {\n\t\t\t\t\tconst xAppStateFilters = await this.convertSelectionVariantToStateFilters(\n\t\t\t\t\t\tnavParameter.selectionVariant as SelectionVariant,\n\t\t\t\t\t\ttrue\n\t\t\t\t\t);\n\n\t\t\t\t\tconst mergedFullState = {\n\t\t\t\t\t\t...controlState.innerState?.fullState,\n\t\t\t\t\t\tfilter: {\n\t\t\t\t\t\t\t...controlState.innerState?.fullState.filter,\n\t\t\t\t\t\t\t...xAppStateFilters\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t//when navigating from card, remove all existing filters values (default or otherwise) and then apply the state\n\t\t\t\t\tawait this._clearFilterValuesWithOptions(this.content, { clearEditFilter: true });\n\t\t\t\t\treturn await StateUtil.applyExternalState(this.content, mergedFullState);\n\t\t\t\t}\n\n\t\t\t\tif (shouldApplyDiffState) {\n\t\t\t\t\tconst diffState: object = await StateUtil.diffState(\n\t\t\t\t\t\tthis.content,\n\t\t\t\t\t\tcontrolState.innerState?.initialState as object,\n\t\t\t\t\t\tcontrolState.innerState?.fullState as object\n\t\t\t\t\t);\n\t\t\t\t\treturn await StateUtil.applyExternalState(this.content, diffState);\n\t\t\t\t} else if (skipMerge) {\n\t\t\t\t\t//skipMerge is true when coming from the dynamic tile, in this case, remove all existing filters values (default or otherwise)\n\t\t\t\t\tawait this._clearFilterValuesWithOptions(this.content, { clearEditFilter: true });\n\t\t\t\t}\n\t\t\t\treturn await StateUtil.applyExternalState(this.content, controlState?.innerState?.fullState ?? controlState);\n\t\t\t}\n\t\t} catch (error: unknown) {\n\t\t\tLog.error(error as string);\n\t\t} finally {\n\t\t\tthis._initialStatePromise.resolve();\n\t\t}\n\t}\n\n\tasync retrieveState(this: FilterBarAPI): Promise<FilterBarState | null> {\n\t\tconst filterBarState: FilterBarState = {};\n\t\tfilterBarState.innerState = this.getControlState(await StateUtil.retrieveExternalState(this.content)) as {\n\t\t\tinitialState?: LegacyFilterBarState;\n\t\t\tfullState?: LegacyFilterBarState;\n\t\t};\n\t\t// remove sensitive or view state irrelevant fields\n\t\tconst propertiesInfo = this.content.getPropertyInfoSet();\n\t\tconst filter = filterBarState.innerState?.filter || {};\n\t\tpropertiesInfo\n\t\t\t.filter(function (propertyInfo: PropertyInfo & { removeFromAppState?: boolean }) {\n\t\t\t\treturn (\n\t\t\t\t\tObject.keys(filter).length > 0 &&\n\t\t\t\t\tpropertyInfo.path &&\n\t\t\t\t\tfilter[propertyInfo.path] &&\n\t\t\t\t\t(propertyInfo.removeFromAppState || filter[propertyInfo.path].length === 0)\n\t\t\t\t);\n\t\t\t})\n\t\t\t.forEach(function (PropertyInfo: PropertyInfo) {\n\t\t\t\tif (PropertyInfo.path) {\n\t\t\t\t\tdelete filter[PropertyInfo.path];\n\t\t\t\t}\n\t\t\t});\n\t\treturn filterBarState;\n\t}\n\n\tasync setInitialState(this: FilterBarAPI): Promise<void> {\n\t\ttry {\n\t\t\tconst initialControlState = await StateUtil.retrieveExternalState(this.content);\n\t\t\tthis.initialControlState = initialControlState;\n\t\t} catch (e: unknown) {\n\t\t\tLog.error(e as string);\n\t\t}\n\t}\n\n\tasync applyNavigationParameters(this: FilterBarAPI, navigationParameter: NavigationParameter): Promise<void> {\n\t\treturn new Promise<void>(async (resolve) => {\n\t\t\ttry {\n\t\t\t\tconst view = this.getPageController()?.getView();\n\t\t\t\tconst controller = this.getPageController();\n\t\t\t\tconst appComponent = controller.getAppComponent();\n\t\t\t\tconst componentData = appComponent.getComponentData();\n\t\t\t\tconst startupParameters = (componentData && componentData.startupParameters) || {};\n\t\t\t\tlet variantStatus: unknown;\n\t\t\t\tlet filterVariantApplied = false;\n\n\t\t\t\t// Only handle variant ID from URL parameters if applyVariantFromURLParams is true\n\t\t\t\tif (navigationParameter.applyVariantFromURLParams ?? false) {\n\t\t\t\t\tvariantStatus = await this.handleVariantIdPassedViaURLParams(startupParameters as unknown as Record<string, string>);\n\t\t\t\t}\n\t\t\t\tif (variantStatus && (variantStatus as [])?.length > 0) {\n\t\t\t\t\t// check if filter bar variant is applied or not.\n\t\t\t\t\tif ((variantStatus as boolean[])[0] === true || (variantStatus as boolean[])[1] === true) {\n\t\t\t\t\t\tfilterVariantApplied = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// if variant from URL does not exist or did not apply properly then apply to LR either default variant or standard variant required.\n\t\t\t\tconst filterBar = this.getContent();\n\t\t\t\tconst { selectionVariant: sv, requiresStandardVariant: reqStdVariant = false } = navigationParameter;\n\n\t\t\t\tif (!filterBar || !sv) {\n\t\t\t\t\tresolve();\n\t\t\t\t}\n\t\t\t\tawait this._applySelectionVariant(view, navigationParameter, filterVariantApplied);\n\t\t\t\tlet bPreventInitialSearch = false;\n\t\t\t\tconst variantManagement = this._getFilterBarVM(view) as VariantManagement;\n\t\t\t\tif (filterBar) {\n\t\t\t\t\tif (\n\t\t\t\t\t\t(navigationParameter.navigationType !== NavType.initial && reqStdVariant) ||\n\t\t\t\t\t\t(!variantManagement && view.getViewData().initialLoad === InitialLoadMode.Enabled) ||\n\t\t\t\t\t\t(controller as ListReportController)._shouldAutoTriggerSearch(variantManagement)\n\t\t\t\t\t) {\n\t\t\t\t\t\tconst filterBarAPI = filterBar.getParent() as FilterBarAPI;\n\t\t\t\t\t\tfilterBarAPI.triggerSearch();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbPreventInitialSearch = this._preventInitialSearch(variantManagement);\n\t\t\t\t\t}\n\t\t\t\t\t//collapse or expand shall be available only for non-desktop systems\n\t\t\t\t\tif (!Device.system.desktop) {\n\t\t\t\t\t\tconst internalModelContext = view.getBindingContext(\"internal\") as InternalModelContext;\n\t\t\t\t\t\tconst searchTriggeredByInitialLoad = this.isSearchTriggeredByInitialLoad(navigationParameter.navigationType);\n\t\t\t\t\t\tinternalModelContext.setProperty(\"searchTriggeredByInitialLoad\", searchTriggeredByInitialLoad);\n\t\t\t\t\t}\n\t\t\t\t\tthis._enableFilterBar(filterBar as FilterBar, bPreventInitialSearch);\n\t\t\t\t} else {\n\t\t\t\t\tLog.warning(\"Did not finish applying navigation parameters - Filter bar not found.\");\n\t\t\t\t}\n\t\t\t\tresolve();\n\t\t\t} catch {\n\t\t\t\tresolve();\n\t\t\t\tLog.warning(\"Could not apply navigation parameters.\");\n\t\t\t}\n\t\t});\n\t}\n}\n"],"mappings":"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","ignoreList":[]}