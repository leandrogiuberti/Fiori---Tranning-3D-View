{"version":3,"names":["FilterBarAPIStateHandler","_IViewStateContributo","apply","arguments","_exports","_inheritsLoose","_proto","prototype","applyLegacyState","getControlState","_navParameters","shouldApplyDiffState","skipMerge","filterBar","content","filterBarState","controlState","innerState","fullState","initialState","Object","keys","length","applyState","navParameter","navigationType","NavType","hybrid","undefined","xAppStateFilters","convertSelectionVariantToStateFilters","selectionVariant","mergedFullState","filter","_clearFilterValuesWithOptions","clearEditFilter","StateUtil","applyExternalState","diffState","error","Log","_initialStatePromise","resolve","retrieveState","retrieveExternalState","propertiesInfo","getPropertyInfoSet","propertyInfo","path","removeFromAppState","forEach","PropertyInfo","setInitialState","initialControlState","e","applyNavigationParameters","navigationParameter","Promise","view","getPageController","getView","controller","appComponent","getAppComponent","componentData","getComponentData","startupParameters","variantStatus","filterVariantApplied","applyVariantFromURLParams","handleVariantIdPassedViaURLParams","getContent","sv","requiresStandardVariant","reqStdVariant","_applySelectionVariant","bPreventInitialSearch","variantManagement","_getFilterBarVM","initial","getViewData","initialLoad","InitialLoadMode","Enabled","_shouldAutoTriggerSearch","filterBarAPI","getParent","triggerSearch","_preventInitialSearch","Device","system","desktop","internalModelContext","getBindingContext","searchTriggeredByInitialLoad","isSearchTriggeredByInitialLoad","setProperty","_enableFilterBar","warning","IViewStateContributorMixin"],"sourceRoot":".","sources":["FilterBarAPIStateHandler.ts"],"sourcesContent":["import Log from \"sap/base/Log\";\nimport type { ControlState, LegacyFilterBarState, NavigationParameter } from \"sap/fe/core/controllerextensions/ViewState\";\nimport IViewStateContributorMixin from \"sap/fe/core/controllerextensions/viewState/IViewStateContributorMixin\";\nimport type { InternalModelContext } from \"sap/fe/core/helpers/ModelHelper\";\nimport { InitialLoadMode } from \"sap/fe/core/library\";\nimport type FilterBar from \"sap/fe/macros/controls/FilterBar\";\nimport type { PropertyInfo } from \"sap/fe/macros/internal/PropertyInfo\";\nimport type SelectionVariant from \"sap/fe/navigation/SelectionVariant\";\nimport { NavType } from \"sap/fe/navigation/library\";\nimport type ListReportController from \"sap/fe/templates/ListReport/ListReportController.controller\";\nimport Device from \"sap/ui/Device\";\nimport type ManagedObject from \"sap/ui/base/ManagedObject\";\nimport type VariantManagement from \"sap/ui/fl/variants/VariantManagement\";\nimport StateUtil from \"sap/ui/mdc/p13n/StateUtil\";\nimport type FilterBarAPI from \"../FilterBarAPI\";\nimport type { FilterBarState } from \"../FilterBarAPI\";\n\nexport default class FilterBarAPIStateHandler extends IViewStateContributorMixin<FilterBarState> {\n\tasync applyLegacyState(\n\t\tthis: FilterBarAPI,\n\t\tgetControlState: (control: ManagedObject) => ControlState,\n\t\t_navParameters?: NavigationParameter,\n\t\tshouldApplyDiffState?: boolean,\n\t\tskipMerge?: boolean\n\t): Promise<void> {\n\t\tconst filterBar = this.content;\n\t\tconst filterBarState = getControlState(filterBar) as { initialState?: LegacyFilterBarState; fullState?: LegacyFilterBarState };\n\t\tconst controlState: FilterBarState = {};\n\n\t\tif (filterBarState) {\n\t\t\tcontrolState.innerState = {\n\t\t\t\t...filterBarState,\n\t\t\t\tfullState: {\n\t\t\t\t\t...controlState.innerState?.fullState,\n\t\t\t\t\t...filterBarState.fullState\n\t\t\t\t},\n\t\t\t\tinitialState: {\n\t\t\t\t\t...controlState.innerState?.initialState,\n\t\t\t\t\t...filterBarState.initialState\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\tif (controlState && Object.keys(controlState).length > 0) {\n\t\t\tawait this.applyState(controlState as object, _navParameters, shouldApplyDiffState, skipMerge);\n\t\t}\n\t}\n\n\tasync applyState(\n\t\tthis: FilterBarAPI,\n\t\tcontrolState: FilterBarState,\n\t\tnavParameter?: NavigationParameter,\n\t\tshouldApplyDiffState?: boolean,\n\t\tskipMerge?: boolean\n\t): Promise<void> {\n\t\ttry {\n\t\t\tif (controlState && navParameter) {\n\t\t\t\tconst navigationType = navParameter.navigationType;\n\t\t\t\t//When navigation type is hybrid, we override the filter conditions in IAppState with SV received from XappState\n\t\t\t\tif (navigationType === NavType.hybrid && controlState.innerState?.fullState !== undefined) {\n\t\t\t\t\tconst xAppStateFilters = await this.convertSelectionVariantToStateFilters(\n\t\t\t\t\t\tnavParameter.selectionVariant as SelectionVariant,\n\t\t\t\t\t\ttrue\n\t\t\t\t\t);\n\n\t\t\t\t\tconst mergedFullState = {\n\t\t\t\t\t\t...controlState.innerState?.fullState,\n\t\t\t\t\t\tfilter: {\n\t\t\t\t\t\t\t...controlState.innerState?.fullState.filter,\n\t\t\t\t\t\t\t...xAppStateFilters\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t//when navigating from card, remove all existing filters values (default or otherwise) and then apply the state\n\t\t\t\t\tawait this._clearFilterValuesWithOptions(this.content, { clearEditFilter: true });\n\t\t\t\t\treturn await StateUtil.applyExternalState(this.content, mergedFullState);\n\t\t\t\t}\n\n\t\t\t\tif (shouldApplyDiffState) {\n\t\t\t\t\tconst diffState: object = await StateUtil.diffState(\n\t\t\t\t\t\tthis.content,\n\t\t\t\t\t\tcontrolState.innerState?.initialState as object,\n\t\t\t\t\t\tcontrolState.innerState?.fullState as object\n\t\t\t\t\t);\n\t\t\t\t\treturn await StateUtil.applyExternalState(this.content, diffState);\n\t\t\t\t} else if (skipMerge) {\n\t\t\t\t\t//skipMerge is true when coming from the dynamic tile, in this case, remove all existing filters values (default or otherwise)\n\t\t\t\t\tawait this._clearFilterValuesWithOptions(this.content, { clearEditFilter: true });\n\t\t\t\t}\n\t\t\t\treturn await StateUtil.applyExternalState(this.content, controlState?.innerState?.fullState ?? controlState);\n\t\t\t}\n\t\t} catch (error: unknown) {\n\t\t\tLog.error(error as string);\n\t\t} finally {\n\t\t\tthis._initialStatePromise.resolve();\n\t\t}\n\t}\n\n\tasync retrieveState(this: FilterBarAPI): Promise<FilterBarState | null> {\n\t\tconst filterBarState: FilterBarState = {};\n\t\tfilterBarState.innerState = this.getControlState(await StateUtil.retrieveExternalState(this.content)) as {\n\t\t\tinitialState?: LegacyFilterBarState;\n\t\t\tfullState?: LegacyFilterBarState;\n\t\t};\n\t\t// remove sensitive or view state irrelevant fields\n\t\tconst propertiesInfo = this.content.getPropertyInfoSet();\n\t\tconst filter = filterBarState.innerState?.filter || {};\n\t\tpropertiesInfo\n\t\t\t.filter(function (propertyInfo: PropertyInfo & { removeFromAppState?: boolean }) {\n\t\t\t\treturn (\n\t\t\t\t\tObject.keys(filter).length > 0 &&\n\t\t\t\t\tpropertyInfo.path &&\n\t\t\t\t\tfilter[propertyInfo.path] &&\n\t\t\t\t\t(propertyInfo.removeFromAppState || filter[propertyInfo.path].length === 0)\n\t\t\t\t);\n\t\t\t})\n\t\t\t.forEach(function (PropertyInfo: PropertyInfo) {\n\t\t\t\tif (PropertyInfo.path) {\n\t\t\t\t\tdelete filter[PropertyInfo.path];\n\t\t\t\t}\n\t\t\t});\n\t\treturn filterBarState;\n\t}\n\n\tasync setInitialState(this: FilterBarAPI): Promise<void> {\n\t\ttry {\n\t\t\tconst initialControlState = await StateUtil.retrieveExternalState(this.content);\n\t\t\tthis.initialControlState = initialControlState;\n\t\t} catch (e: unknown) {\n\t\t\tLog.error(e as string);\n\t\t}\n\t}\n\n\tasync applyNavigationParameters(this: FilterBarAPI, navigationParameter: NavigationParameter): Promise<void> {\n\t\treturn new Promise<void>(async (resolve) => {\n\t\t\ttry {\n\t\t\t\tconst view = this.getPageController()?.getView();\n\t\t\t\tconst controller = this.getPageController();\n\t\t\t\tconst appComponent = controller.getAppComponent();\n\t\t\t\tconst componentData = appComponent.getComponentData();\n\t\t\t\tconst startupParameters = (componentData && componentData.startupParameters) || {};\n\t\t\t\tlet variantStatus: unknown;\n\t\t\t\tlet filterVariantApplied = false;\n\n\t\t\t\t// Only handle variant ID from URL parameters if applyVariantFromURLParams is true\n\t\t\t\tif (navigationParameter.applyVariantFromURLParams ?? false) {\n\t\t\t\t\tvariantStatus = await this.handleVariantIdPassedViaURLParams(startupParameters as unknown as Record<string, string>);\n\t\t\t\t}\n\t\t\t\tif (variantStatus && (variantStatus as [])?.length > 0) {\n\t\t\t\t\t// check if filter bar variant is applied or not.\n\t\t\t\t\tif ((variantStatus as boolean[])[0] === true || (variantStatus as boolean[])[1] === true) {\n\t\t\t\t\t\tfilterVariantApplied = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// if variant from URL does not exist or did not apply properly then apply to LR either default variant or standard variant required.\n\t\t\t\tconst filterBar = this.getContent();\n\t\t\t\tconst { selectionVariant: sv, requiresStandardVariant: reqStdVariant = false } = navigationParameter;\n\n\t\t\t\tif (!filterBar || !sv) {\n\t\t\t\t\tresolve();\n\t\t\t\t}\n\t\t\t\tawait this._applySelectionVariant(view, navigationParameter, filterVariantApplied);\n\t\t\t\tlet bPreventInitialSearch = false;\n\t\t\t\tconst variantManagement = this._getFilterBarVM(view) as VariantManagement;\n\t\t\t\tif (filterBar) {\n\t\t\t\t\tif (\n\t\t\t\t\t\t(navigationParameter.navigationType !== NavType.initial && reqStdVariant) ||\n\t\t\t\t\t\t(!variantManagement && view.getViewData().initialLoad === InitialLoadMode.Enabled) ||\n\t\t\t\t\t\t(controller as ListReportController)._shouldAutoTriggerSearch(variantManagement)\n\t\t\t\t\t) {\n\t\t\t\t\t\tconst filterBarAPI = filterBar.getParent() as FilterBarAPI;\n\t\t\t\t\t\tfilterBarAPI.triggerSearch();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbPreventInitialSearch = this._preventInitialSearch(variantManagement);\n\t\t\t\t\t}\n\t\t\t\t\t//collapse or expand shall be available only for non-desktop systems\n\t\t\t\t\tif (!Device.system.desktop) {\n\t\t\t\t\t\tconst internalModelContext = view.getBindingContext(\"internal\") as InternalModelContext;\n\t\t\t\t\t\tconst searchTriggeredByInitialLoad = this.isSearchTriggeredByInitialLoad(navigationParameter.navigationType);\n\t\t\t\t\t\tinternalModelContext.setProperty(\"searchTriggeredByInitialLoad\", searchTriggeredByInitialLoad);\n\t\t\t\t\t}\n\t\t\t\t\tthis._enableFilterBar(filterBar as FilterBar, bPreventInitialSearch);\n\t\t\t\t} else {\n\t\t\t\t\tLog.warning(\"Did not finish applying navigation parameters - Filter bar not found.\");\n\t\t\t\t}\n\t\t\t\tresolve();\n\t\t\t} catch {\n\t\t\t\tresolve();\n\t\t\t\tLog.warning(\"Could not apply navigation parameters.\");\n\t\t\t}\n\t\t});\n\t}\n}\n"],"mappings":";;;;;;;;;;;;MAiBqBA,wBAAwB,0BAAAC,qBAAA;IAAA,SAAAD,yBAAA;MAAA,OAAAC,qBAAA,CAAAC,KAAA,OAAAC,SAAA;IAAA;IAAAC,QAAA,GAAAJ,wBAAA;IAAAK,cAAA,CAAAL,wBAAA,EAAAC,qBAAA;IAAA,IAAAK,MAAA,GAAAN,wBAAA,CAAAO,SAAA;IAAAD,MAAA,CACtCE,gBAAgB,GAAtB,eAAMA,gBAAgBA,CAErBC,eAAyD,EACzDC,cAAoC,EACpCC,oBAA8B,EAC9BC,SAAmB,EACH;MAChB,MAAMC,SAAS,GAAG,IAAI,CAACC,OAAO;MAC9B,MAAMC,cAAc,GAAGN,eAAe,CAACI,SAAS,CAA8E;MAC9H,MAAMG,YAA4B,GAAG,CAAC,CAAC;MAEvC,IAAID,cAAc,EAAE;QACnBC,YAAY,CAACC,UAAU,GAAG;UACzB,GAAGF,cAAc;UACjBG,SAAS,EAAE;YACV,GAAGF,YAAY,CAACC,UAAU,EAAEC,SAAS;YACrC,GAAGH,cAAc,CAACG;UACnB,CAAC;UACDC,YAAY,EAAE;YACb,GAAGH,YAAY,CAACC,UAAU,EAAEE,YAAY;YACxC,GAAGJ,cAAc,CAACI;UACnB;QACD,CAAC;MACF;MACA,IAAIH,YAAY,IAAII,MAAM,CAACC,IAAI,CAACL,YAAY,CAAC,CAACM,MAAM,GAAG,CAAC,EAAE;QACzD,MAAM,IAAI,CAACC,UAAU,CAACP,YAAY,EAAYN,cAAc,EAAEC,oBAAoB,EAAEC,SAAS,CAAC;MAC/F;IACD,CAAC;IAAAN,MAAA,CAEKiB,UAAU,GAAhB,eAAMA,UAAUA,CAEfP,YAA4B,EAC5BQ,YAAkC,EAClCb,oBAA8B,EAC9BC,SAAmB,EACH;MAChB,IAAI;QACH,IAAII,YAAY,IAAIQ,YAAY,EAAE;UACjC,MAAMC,cAAc,GAAGD,YAAY,CAACC,cAAc;UAClD;UACA,IAAIA,cAAc,KAAKC,OAAO,CAACC,MAAM,IAAIX,YAAY,CAACC,UAAU,EAAEC,SAAS,KAAKU,SAAS,EAAE;YAC1F,MAAMC,gBAAgB,GAAG,MAAM,IAAI,CAACC,qCAAqC,CACxEN,YAAY,CAACO,gBAAgB,EAC7B,IACD,CAAC;YAED,MAAMC,eAAe,GAAG;cACvB,GAAGhB,YAAY,CAACC,UAAU,EAAEC,SAAS;cACrCe,MAAM,EAAE;gBACP,GAAGjB,YAAY,CAACC,UAAU,EAAEC,SAAS,CAACe,MAAM;gBAC5C,GAAGJ;cACJ;YACD,CAAC;YACD;YACA,MAAM,IAAI,CAACK,6BAA6B,CAAC,IAAI,CAACpB,OAAO,EAAE;cAAEqB,eAAe,EAAE;YAAK,CAAC,CAAC;YACjF,OAAO,MAAMC,SAAS,CAACC,kBAAkB,CAAC,IAAI,CAACvB,OAAO,EAAEkB,eAAe,CAAC;UACzE;UAEA,IAAIrB,oBAAoB,EAAE;YACzB,MAAM2B,SAAiB,GAAG,MAAMF,SAAS,CAACE,SAAS,CAClD,IAAI,CAACxB,OAAO,EACZE,YAAY,CAACC,UAAU,EAAEE,YAAY,EACrCH,YAAY,CAACC,UAAU,EAAEC,SAC1B,CAAC;YACD,OAAO,MAAMkB,SAAS,CAACC,kBAAkB,CAAC,IAAI,CAACvB,OAAO,EAAEwB,SAAS,CAAC;UACnE,CAAC,MAAM,IAAI1B,SAAS,EAAE;YACrB;YACA,MAAM,IAAI,CAACsB,6BAA6B,CAAC,IAAI,CAACpB,OAAO,EAAE;cAAEqB,eAAe,EAAE;YAAK,CAAC,CAAC;UAClF;UACA,OAAO,MAAMC,SAAS,CAACC,kBAAkB,CAAC,IAAI,CAACvB,OAAO,EAAEE,YAAY,EAAEC,UAAU,EAAEC,SAAS,IAAIF,YAAY,CAAC;QAC7G;MACD,CAAC,CAAC,OAAOuB,KAAc,EAAE;QACxBC,GAAG,CAACD,KAAK,CAACA,KAAe,CAAC;MAC3B,CAAC,SAAS;QACT,IAAI,CAACE,oBAAoB,CAACC,OAAO,CAAC,CAAC;MACpC;IACD,CAAC;IAAApC,MAAA,CAEKqC,aAAa,GAAnB,eAAMA,aAAaA,CAAA,EAAqD;MACvE,MAAM5B,cAA8B,GAAG,CAAC,CAAC;MACzCA,cAAc,CAACE,UAAU,GAAG,IAAI,CAACR,eAAe,CAAC,MAAM2B,SAAS,CAACQ,qBAAqB,CAAC,IAAI,CAAC9B,OAAO,CAAC,CAGnG;MACD;MACA,MAAM+B,cAAc,GAAG,IAAI,CAAC/B,OAAO,CAACgC,kBAAkB,CAAC,CAAC;MACxD,MAAMb,MAAM,GAAGlB,cAAc,CAACE,UAAU,EAAEgB,MAAM,IAAI,CAAC,CAAC;MACtDY,cAAc,CACZZ,MAAM,CAAC,UAAUc,YAA6D,EAAE;QAChF,OACC3B,MAAM,CAACC,IAAI,CAACY,MAAM,CAAC,CAACX,MAAM,GAAG,CAAC,IAC9ByB,YAAY,CAACC,IAAI,IACjBf,MAAM,CAACc,YAAY,CAACC,IAAI,CAAC,KACxBD,YAAY,CAACE,kBAAkB,IAAIhB,MAAM,CAACc,YAAY,CAACC,IAAI,CAAC,CAAC1B,MAAM,KAAK,CAAC,CAAC;MAE7E,CAAC,CAAC,CACD4B,OAAO,CAAC,UAAUC,YAA0B,EAAE;QAC9C,IAAIA,YAAY,CAACH,IAAI,EAAE;UACtB,OAAOf,MAAM,CAACkB,YAAY,CAACH,IAAI,CAAC;QACjC;MACD,CAAC,CAAC;MACH,OAAOjC,cAAc;IACtB,CAAC;IAAAT,MAAA,CAEK8C,eAAe,GAArB,eAAMA,eAAeA,CAAA,EAAoC;MACxD,IAAI;QACH,MAAMC,mBAAmB,GAAG,MAAMjB,SAAS,CAACQ,qBAAqB,CAAC,IAAI,CAAC9B,OAAO,CAAC;QAC/E,IAAI,CAACuC,mBAAmB,GAAGA,mBAAmB;MAC/C,CAAC,CAAC,OAAOC,CAAU,EAAE;QACpBd,GAAG,CAACD,KAAK,CAACe,CAAW,CAAC;MACvB;IACD,CAAC;IAAAhD,MAAA,CAEKiD,yBAAyB,GAA/B,eAAMA,yBAAyBA,CAAqBC,mBAAwC,EAAiB;MAC5G,OAAO,IAAIC,OAAO,CAAO,MAAOf,OAAO,IAAK;QAC3C,IAAI;UACH,MAAMgB,IAAI,GAAG,IAAI,CAACC,iBAAiB,CAAC,CAAC,EAAEC,OAAO,CAAC,CAAC;UAChD,MAAMC,UAAU,GAAG,IAAI,CAACF,iBAAiB,CAAC,CAAC;UAC3C,MAAMG,YAAY,GAAGD,UAAU,CAACE,eAAe,CAAC,CAAC;UACjD,MAAMC,aAAa,GAAGF,YAAY,CAACG,gBAAgB,CAAC,CAAC;UACrD,MAAMC,iBAAiB,GAAIF,aAAa,IAAIA,aAAa,CAACE,iBAAiB,IAAK,CAAC,CAAC;UAClF,IAAIC,aAAsB;UAC1B,IAAIC,oBAAoB,GAAG,KAAK;;UAEhC;UACA,IAAIZ,mBAAmB,CAACa,yBAAyB,IAAI,KAAK,EAAE;YAC3DF,aAAa,GAAG,MAAM,IAAI,CAACG,iCAAiC,CAACJ,iBAAsD,CAAC;UACrH;UACA,IAAIC,aAAa,IAAKA,aAAa,EAAS7C,MAAM,GAAG,CAAC,EAAE;YACvD;YACA,IAAK6C,aAAa,CAAe,CAAC,CAAC,KAAK,IAAI,IAAKA,aAAa,CAAe,CAAC,CAAC,KAAK,IAAI,EAAE;cACzFC,oBAAoB,GAAG,IAAI;YAC5B;UACD;;UAEA;UACA,MAAMvD,SAAS,GAAG,IAAI,CAAC0D,UAAU,CAAC,CAAC;UACnC,MAAM;YAAExC,gBAAgB,EAAEyC,EAAE;YAAEC,uBAAuB,EAAEC,aAAa,GAAG;UAAM,CAAC,GAAGlB,mBAAmB;UAEpG,IAAI,CAAC3C,SAAS,IAAI,CAAC2D,EAAE,EAAE;YACtB9B,OAAO,CAAC,CAAC;UACV;UACA,MAAM,IAAI,CAACiC,sBAAsB,CAACjB,IAAI,EAAEF,mBAAmB,EAAEY,oBAAoB,CAAC;UAClF,IAAIQ,qBAAqB,GAAG,KAAK;UACjC,MAAMC,iBAAiB,GAAG,IAAI,CAACC,eAAe,CAACpB,IAAI,CAAsB;UACzE,IAAI7C,SAAS,EAAE;YACd,IACE2C,mBAAmB,CAAC/B,cAAc,KAAKC,OAAO,CAACqD,OAAO,IAAIL,aAAa,IACvE,CAACG,iBAAiB,IAAInB,IAAI,CAACsB,WAAW,CAAC,CAAC,CAACC,WAAW,KAAKC,eAAe,CAACC,OAAQ,IACjFtB,UAAU,CAA0BuB,wBAAwB,CAACP,iBAAiB,CAAC,EAC/E;cACD,MAAMQ,YAAY,GAAGxE,SAAS,CAACyE,SAAS,CAAC,CAAiB;cAC1DD,YAAY,CAACE,aAAa,CAAC,CAAC;YAC7B,CAAC,MAAM;cACNX,qBAAqB,GAAG,IAAI,CAACY,qBAAqB,CAACX,iBAAiB,CAAC;YACtE;YACA;YACA,IAAI,CAACY,MAAM,CAACC,MAAM,CAACC,OAAO,EAAE;cAC3B,MAAMC,oBAAoB,GAAGlC,IAAI,CAACmC,iBAAiB,CAAC,UAAU,CAAyB;cACvF,MAAMC,4BAA4B,GAAG,IAAI,CAACC,8BAA8B,CAACvC,mBAAmB,CAAC/B,cAAc,CAAC;cAC5GmE,oBAAoB,CAACI,WAAW,CAAC,8BAA8B,EAAEF,4BAA4B,CAAC;YAC/F;YACA,IAAI,CAACG,gBAAgB,CAACpF,SAAS,EAAe+D,qBAAqB,CAAC;UACrE,CAAC,MAAM;YACNpC,GAAG,CAAC0D,OAAO,CAAC,uEAAuE,CAAC;UACrF;UACAxD,OAAO,CAAC,CAAC;QACV,CAAC,CAAC,MAAM;UACPA,OAAO,CAAC,CAAC;UACTF,GAAG,CAAC0D,OAAO,CAAC,wCAAwC,CAAC;QACtD;MACD,CAAC,CAAC;IACH,CAAC;IAAA,OAAAlG,wBAAA;EAAA,EA7KoDmG,0BAA0B;EAAA/F,QAAA,GAAAJ,wBAAA;EAAA,OAAAI,QAAA;AAAA","ignoreList":[],"file":"FilterBarAPIStateHandler-dbg.js"}