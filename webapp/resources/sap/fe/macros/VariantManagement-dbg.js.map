{"version":3,"names":["VariantManagement","_dec","defineUI5Class","_dec2","property","type","required","_dec3","association","multiple","_dec4","defaultValue","_dec5","_class","_class2","_BuildingBlock","properties","others","_this","call","_initializerDefineProperty","_descriptor","_descriptor2","_descriptor3","_descriptor4","_exports","_inheritsLoose","_proto","prototype","onMetadataAvailable","content","createContent","availableIds","getAssociation","connectToFilterbar","Array","isArray","variantManagementContent","VariantManagementControl","id","generate","for","showSetAsDefault","headerLevel","setAggregation","filterBarIds","ids","forEach","controlId","BuildingBlock","observeBuildingBlock","onAvailable","control","isA","vm","getContent","setVariantBackReference","error","Log","_applyDecoratedDescriptor","configurable","enumerable","writable","initializer"],"sourceRoot":".","sources":["VariantManagement.tsx"],"sourcesContent":["import Log from \"sap/base/Log\";\nimport { association, defineUI5Class, property, type PropertiesOf } from \"sap/fe/base/ClassSupport\";\nimport BuildingBlock from \"sap/fe/core/buildingBlocks/BuildingBlock\";\nimport { generate } from \"sap/fe/core/helpers/StableIdHelper\";\nimport type UI5Element from \"sap/ui/core/Element\";\nimport VariantManagementControl from \"sap/ui/fl/variants/VariantManagement\";\nimport type { $ControlSettings } from \"sap/ui/mdc/Control\";\nimport type FilterBarAPI from \"./filterBar/FilterBarAPI\";\n\n/**\n * Building block used to create a Variant Management based on the metadata provided by OData V4.\n *\n * Usage example:\n * <pre>\n * &lt;macro:VariantManagement\n * id=\"SomeUniqueIdentifier\"\n * for=\"{listOfControlIds&gt;}\"\n * /&gt;\n * </pre>\n *\n * {@link demo:sap/fe/core/fpmExplorer/index.html#/buildingBlocks/filterBar/filterBarVMWithTable Overview of Building Blocks}\n * @classdesc A custom UI5 class for managing variants in applications.\n * Extends the base `BuildingBlock` class and provides additional properties\n * such as `id`, `for`, `showSetAsDefault`, and `headerLevel` to configure variant management behavior.\n *\n * @public\n */\n@defineUI5Class(\"sap.fe.macros.VariantManagement\")\nexport class VariantManagement extends BuildingBlock<VariantManagementControl> {\n\t/**\n\t * Identifier for the variant management control.\n\t * @type {string | undefined}\n\t * @public\n\t */\n\t@property({ type: \"any\", required: true })\n\tid!: string | undefined;\n\n\t/**\n\t * A list of control IDs to which the variant management is applied.\n\t * @type {string[]}\n\t * @public\n\t */\n\t@association({ type: \"sap.ui.core.Control\", multiple: true })\n\tfor: string[] = [];\n\n\t/**\n\t * Whether the \"Set as Default\" option is visible.\n\t * @type {boolean | undefined}\n\t * @default true\n\t * @public\n\t */\n\t@property({ type: \"boolean\", defaultValue: true })\n\tshowSetAsDefault: boolean | undefined;\n\n\t/**\n\t * Header level for the variant management, determining its position or style.\n\t * @type {string | undefined}\n\t * @public\n\t */\n\t@property({ type: \"string\" })\n\theaderLevel: string | undefined;\n\n\tconstructor(properties: $ControlSettings & PropertiesOf<VariantManagement>, others?: $ControlSettings) {\n\t\tsuper(properties, others);\n\t}\n\n\tonMetadataAvailable(): void {\n\t\tthis.content = this.createContent();\n\t\tconst availableIds = this.getAssociation(\"for\", null) || [];\n\t\tthis.connectToFilterbar(Array.isArray(availableIds) ? availableIds : [availableIds]);\n\t}\n\n\t/**\n\t * Create and configure the VariantManagement control content.\n\t * @returns The VariantManagement control.\n\t */\n\tcreateContent(): VariantManagementControl {\n\t\tconst variantManagementContent = new VariantManagementControl({\n\t\t\tid: generate([this.id, \"VM\"]),\n\t\t\tfor: this.for,\n\t\t\tshowSetAsDefault: this.showSetAsDefault,\n\t\t\theaderLevel: this.headerLevel\n\t\t});\n\t\tthis.setAggregation(\"content\", variantManagementContent);\n\t\treturn variantManagementContent;\n\t}\n\n\t/**\n\t * Connects the variant management component to a list of filter bar controls.\n\t * @param filterBarIds The unique identifiers of the filter bar controls to connect with.\n\t * @throws {Error} Logs an error message if the connection to any filter bar control fails.\n\t */\n\tconnectToFilterbar(filterBarIds: string | string[]): void {\n\t\tconst ids = Array.isArray(filterBarIds) ? filterBarIds : [filterBarIds];\n\t\tids.forEach((controlId) => {\n\t\t\ttry {\n\t\t\t\tBuildingBlock.observeBuildingBlock(controlId, {\n\t\t\t\t\tonAvailable: (control: UI5Element) => {\n\t\t\t\t\t\tif (control && control.isA(\"sap.fe.macros.filterBar.FilterBarAPI\")) {\n\t\t\t\t\t\t\tconst vm = this.getContent();\n\t\t\t\t\t\t\tif (vm) {\n\t\t\t\t\t\t\t\t(control as FilterBarAPI).setVariantBackReference(vm);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} catch (error) {\n\t\t\t\tLog.error(`Error setting variant in Filter Bar: ${error}`);\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport default VariantManagement;\n"],"mappings":"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","ignoreList":[],"file":"VariantManagement-dbg.js"}