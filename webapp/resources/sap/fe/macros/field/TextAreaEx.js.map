{"version":3,"file":"TextAreaEx.js","names":["TextAreaEx","_dec","defineUI5Class","_class","_TextArea2","apply","this","arguments","_exports","_inheritsLoose","_proto","prototype","fireLiveChange","parameters","call","_validateTextLength","value","setValue","maxLength","getMaxLength","undefined","length","valueStateText","getResourceModel","getText","setValueState","ValueState","Error","setValueStateText","None","_TextArea"],"sources":["./TextAreaEx.ts"],"sourcesContent":["import { defineUI5Class } from \"sap/fe/base/ClassSupport\";\nimport { getResourceModel } from \"sap/fe/core/helpers/ResourceModelHelper\";\nimport _TextArea from \"sap/m/TextArea\";\nimport { ValueState } from \"sap/ui/core/library\";\n\n/**\n * Extension of the TextArea control to add a check for the maximum length when setting the value.\n */\n@defineUI5Class(\"sap.fe.macros.field.TextAreaEx\")\nexport default class TextAreaEx extends _TextArea {\n\t/**\n\t * Fires live change event.\n\t * @param [parameters] Parameters to pass along with the event\n\t * @param parameters.value\n\t * @returns Reference to `this` in order to allow method chaining\n\t */\n\tfireLiveChange(parameters?: { value?: string }): this {\n\t\tsuper.fireLiveChange(parameters);\n\t\tthis._validateTextLength(parameters?.value);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the value for the text area.\n\t * @param value New value for the property `value`\n\t * @returns Reference to `this` in order to allow method chaining\n\t * @private\n\t */\n\tsetValue(value: string | null): this {\n\t\tsuper.setValue(value ?? \"\");\n\t\tthis._validateTextLength(value);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets an error message for the value state if the maximum length is specified and the new value exceeds this maximum length.\n\t * @param [value] New value for property `value`\n\t * @private\n\t */\n\t_validateTextLength(value?: string | null): void {\n\t\tconst maxLength = this.getMaxLength();\n\t\tif (!maxLength || value === undefined || value === null) {\n\t\t\t//Don't change the field's value state if no length check is done.\n\t\t\t//Otherwise, a ValueState set by the a DataType check gets overridden.\n\t\t\treturn;\n\t\t}\n\t\tif (value.length > maxLength) {\n\t\t\tconst valueStateText = getResourceModel(this).getText(\"M_FIELD_TEXTAREA_TEXT_TOO_LONG\");\n\t\t\tthis.setValueState(ValueState.Error);\n\t\t\tthis.setValueStateText(valueStateText);\n\t\t} else {\n\t\t\tthis.setValueState(ValueState.None);\n\t\t}\n\t}\n}\n"],"mappings":";;;;gcAKA,IAIqBA,GAAUC,EAD9BC,EAAe,kCAAiCD,EAAAE,EAAA,SAAAC,GAAA,SAAAJ,IAAA,OAAAI,EAAAC,MAAAC,KAAAC,YAAAD,IAAA,CAAAE,EAAAR,EAAAS,EAAAT,EAAAI,GAAA,IAAAM,EAAAV,EAAAW,UAEhDD,EAMAE,eAAA,SAAAA,EAAeC,GACdT,EAAAO,UAAMC,eAAcE,KAAAR,KAACO,GACrBP,KAAKS,oBAAoBF,GAAYG,OACrC,OAAOV,IACR,EAEAI,EAMAO,SAAA,SAAAA,EAASD,GACRZ,EAAAO,UAAMM,SAAQH,KAAAR,KAACU,GAAS,IACxBV,KAAKS,oBAAoBC,GACzB,OAAOV,IACR,EAEAI,EAKAK,oBAAA,SAAAA,EAAoBC,GACnB,MAAME,EAAYZ,KAAKa,eACvB,IAAKD,GAAaF,IAAUI,WAAaJ,IAAU,KAAM,CAGxD,MACD,CACA,GAAIA,EAAMK,OAASH,EAAW,CAC7B,MAAMI,EAAiBC,EAAiBjB,MAAMkB,QAAQ,kCACtDlB,KAAKmB,cAAcC,EAAWC,OAC9BrB,KAAKsB,kBAAkBN,EACxB,KAAO,CACNhB,KAAKmB,cAAcC,EAAWG,KAC/B,CACD,EAAC,OAAA7B,CAAA,CA7C+C,CACT8B,KAAS3B,GAAAK,EAAAR,EAAA,OAAAQ,CAAA","ignoreList":[]}