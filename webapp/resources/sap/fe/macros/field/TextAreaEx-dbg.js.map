{"version":3,"names":["TextAreaEx","_dec","defineUI5Class","_class","_TextArea2","apply","arguments","_exports","_inheritsLoose","_proto","prototype","fireLiveChange","parameters","call","_validateTextLength","value","setValue","maxLength","getMaxLength","undefined","length","valueStateText","getResourceModel","getText","setValueState","ValueState","Error","setValueStateText","None","_TextArea"],"sourceRoot":".","sources":["TextAreaEx.ts"],"sourcesContent":["import { defineUI5Class } from \"sap/fe/base/ClassSupport\";\nimport { getResourceModel } from \"sap/fe/core/helpers/ResourceModelHelper\";\nimport _TextArea from \"sap/m/TextArea\";\nimport { ValueState } from \"sap/ui/core/library\";\n\n/**\n * Extension of the TextArea control to add a check for the maximum length when setting the value.\n */\n@defineUI5Class(\"sap.fe.macros.field.TextAreaEx\")\nexport default class TextAreaEx extends _TextArea {\n\t/**\n\t * Fires live change event.\n\t * @param [parameters] Parameters to pass along with the event\n\t * @param parameters.value\n\t * @returns Reference to `this` in order to allow method chaining\n\t */\n\tfireLiveChange(parameters?: { value?: string }): this {\n\t\tsuper.fireLiveChange(parameters);\n\t\tthis._validateTextLength(parameters?.value);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the value for the text area.\n\t * @param value New value for the property `value`\n\t * @returns Reference to `this` in order to allow method chaining\n\t * @private\n\t */\n\tsetValue(value: string | null): this {\n\t\tsuper.setValue(value ?? \"\");\n\t\tthis._validateTextLength(value);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets an error message for the value state if the maximum length is specified and the new value exceeds this maximum length.\n\t * @param [value] New value for property `value`\n\t * @private\n\t */\n\t_validateTextLength(value?: string | null): void {\n\t\tconst maxLength = this.getMaxLength();\n\t\tif (!maxLength || value === undefined || value === null) {\n\t\t\t//Don't change the field's value state if no length check is done.\n\t\t\t//Otherwise, a ValueState set by the a DataType check gets overridden.\n\t\t\treturn;\n\t\t}\n\t\tif (value.length > maxLength) {\n\t\t\tconst valueStateText = getResourceModel(this).getText(\"M_FIELD_TEXTAREA_TEXT_TOO_LONG\");\n\t\t\tthis.setValueState(ValueState.Error);\n\t\t\tthis.setValueStateText(valueStateText);\n\t\t} else {\n\t\t\tthis.setValueState(ValueState.None);\n\t\t}\n\t}\n}\n"],"mappings":";;;;;;;;;;;;;;EAKA;AACA;AACA;EAFA,IAIqBA,UAAU,IAAAC,IAAA,GAD9BC,cAAc,CAAC,gCAAgC,CAAC,EAAAD,IAAA,CAAAE,MAAA,0BAAAC,UAAA;IAAA,SAAAJ,WAAA;MAAA,OAAAI,UAAA,CAAAC,KAAA,OAAAC,SAAA;IAAA;IAAAC,QAAA,GAAAP,UAAA;IAAAQ,cAAA,CAAAR,UAAA,EAAAI,UAAA;IAAA,IAAAK,MAAA,GAAAT,UAAA,CAAAU,SAAA;IAEhD;AACD;AACA;AACA;AACA;AACA;IALCD,MAAA,CAMAE,cAAc,GAAd,SAAAA,cAAcA,CAACC,UAA+B,EAAQ;MACrDR,UAAA,CAAAM,SAAA,CAAMC,cAAc,CAAAE,IAAA,OAACD,UAAU;MAC/B,IAAI,CAACE,mBAAmB,CAACF,UAAU,EAAEG,KAAK,CAAC;MAC3C,OAAO,IAAI;IACZ;;IAEA;AACD;AACA;AACA;AACA;AACA,OALC;IAAAN,MAAA,CAMAO,QAAQ,GAAR,SAAAA,QAAQA,CAACD,KAAoB,EAAQ;MACpCX,UAAA,CAAAM,SAAA,CAAMM,QAAQ,CAAAH,IAAA,OAACE,KAAK,IAAI,EAAE;MAC1B,IAAI,CAACD,mBAAmB,CAACC,KAAK,CAAC;MAC/B,OAAO,IAAI;IACZ;;IAEA;AACD;AACA;AACA;AACA,OAJC;IAAAN,MAAA,CAKAK,mBAAmB,GAAnB,SAAAA,mBAAmBA,CAACC,KAAqB,EAAQ;MAChD,MAAME,SAAS,GAAG,IAAI,CAACC,YAAY,CAAC,CAAC;MACrC,IAAI,CAACD,SAAS,IAAIF,KAAK,KAAKI,SAAS,IAAIJ,KAAK,KAAK,IAAI,EAAE;QACxD;QACA;QACA;MACD;MACA,IAAIA,KAAK,CAACK,MAAM,GAAGH,SAAS,EAAE;QAC7B,MAAMI,cAAc,GAAGC,gBAAgB,CAAC,IAAI,CAAC,CAACC,OAAO,CAAC,gCAAgC,CAAC;QACvF,IAAI,CAACC,aAAa,CAACC,UAAU,CAACC,KAAK,CAAC;QACpC,IAAI,CAACC,iBAAiB,CAACN,cAAc,CAAC;MACvC,CAAC,MAAM;QACN,IAAI,CAACG,aAAa,CAACC,UAAU,CAACG,IAAI,CAAC;MACpC;IACD,CAAC;IAAA,OAAA5B,UAAA;EAAA,EA5CsC6B,SAAS,MAAA1B,MAAA;EAAAI,QAAA,GAAAP,UAAA;EAAA,OAAAO,QAAA;AAAA","ignoreList":[],"file":"TextAreaEx-dbg.js"}