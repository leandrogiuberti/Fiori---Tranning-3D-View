{"version":3,"file":"FieldRuntime.js","names":["FieldRuntime","uploadPromises","creatingInactiveRow","isDraftIndicatorVisible","sPropertyPath","sSemanticKeyHasDraftIndicator","HasDraftEntity","IsActiveEntity","hideDraftInfo","undefined","onValidateFieldGroup","oEvent","oSourceField","getSource","view","CommonUtils","getTargetView","controller","getController","oFEController","FieldRuntimeHelper","getExtensionController","_sideEffects","handleFieldGroupChange","_fnFixHashQueryString","sCurrentHash","includes","split","retrieveTextFromValueList","async","sPropertyValue","sPropertyFullPath","sDisplayFormat","sTextProperty","oMetaModel","sPropertyName","this","getModel","getMetaModel","CommonHelper","getObject","requestValueListInfo","then","mValueListInfo","oValueListInfo","Object","keys","oValueListModel","$model","oMetaModelValueList","oParamWithKey","Parameters","find","oParameter","LocalDataProperty","$PropertyPath","ValueListProperty","Error","oTextAnnotation","CollectionPath","$Path","oFilter","Filter","path","operator","value1","oListBinding","bindList","$select","requestContexts","aContexts","sDescription","Library","getResourceBundleFor","getText","catch","oError","errorObj","sMsg","status","message","Log","error","displayAggregateDetails","event","aggregatedPropertyPath","link","analyticalTable","FPMHelper","getMdcTable","rowContext","getBindingContext","tableRowBinding","getBinding","rowContextData","rowSpecificFilter","rowFilter","getFilter","push","allFilters","concat","getFilters","aggregation","getAggregation","unitOrCurrencyName","aggregate","unit","group","grandTotal","subtotals","tableItem","getDependents","clone","currencyOrQuantityEnabledLayout","HBox","renderType","justifyContent","items","aggregationParameters","search","oItemsBindingInfo","getResolvedPath","filters","parameters","$$aggregation","sorter","Sorter","isPopoverForGrandTotal","popover","Util","createOrUpdateMultiUnitPopover","getId","control","itemsBindingInfo","listItemContentTemplate","addDependent","fnOnClose","removeDependent","detachEvent","destroy","attachEvent","openBy","ObjectPath","set"],"sources":["./FieldRuntime.ts"],"sourcesContent":["import Log from \"sap/base/Log\";\nimport ObjectPath from \"sap/base/util/ObjectPath\";\nimport CommonUtils from \"sap/fe/core/CommonUtils\";\nimport FPMHelper from \"sap/fe/core/helpers/FPMHelper\";\nimport CommonHelper from \"sap/fe/macros/CommonHelper\";\nimport type { $HBoxSettings } from \"sap/m/HBox\";\nimport HBox from \"sap/m/HBox\";\nimport type Link from \"sap/m/Link\";\nimport type ResponsivePopover from \"sap/m/ResponsivePopover\";\nimport { default as Util } from \"sap/m/table/Util\";\nimport type Event from \"sap/ui/base/Event\";\nimport type ManagedObject from \"sap/ui/base/ManagedObject\";\nimport type Control from \"sap/ui/core/Control\";\nimport type { Control$ValidateFieldGroupEvent } from \"sap/ui/core/Control\";\nimport Library from \"sap/ui/core/Lib\";\nimport Filter from \"sap/ui/model/Filter\";\nimport Sorter from \"sap/ui/model/Sorter\";\nimport type Context from \"sap/ui/model/odata/v4/Context\";\nimport type ODataListBinding from \"sap/ui/model/odata/v4/ODataListBinding\";\nimport type ODataMetaModel from \"sap/ui/model/odata/v4/ODataMetaModel\";\nimport FieldRuntimeHelper from \"./FieldRuntimeHelper\";\n\n/**\n * Static class used by \"sap.ui.mdc.Field\" during runtime\n * @private\n */\nconst FieldRuntime = {\n\tuploadPromises: {} as Record<string, { resolve: Function; reject: Function }>,\n\tcreatingInactiveRow: false,\n\n\t/**\n\t * This is a formatter in disguise.\n\t * @param sPropertyPath\n\t * @param sSemanticKeyHasDraftIndicator\n\t * @param HasDraftEntity\n\t * @param IsActiveEntity\n\t * @param hideDraftInfo\n\t * @returns True if the draft indicator should be displayed.\n\t */\n\tisDraftIndicatorVisible: function (\n\t\tsPropertyPath: string,\n\t\tsSemanticKeyHasDraftIndicator: string,\n\t\tHasDraftEntity?: boolean,\n\t\tIsActiveEntity?: boolean,\n\t\thideDraftInfo?: boolean\n\t): boolean {\n\t\tif (IsActiveEntity !== undefined && HasDraftEntity !== undefined && (!IsActiveEntity || HasDraftEntity) && !hideDraftInfo) {\n\t\t\treturn sPropertyPath === sSemanticKeyHasDraftIndicator;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t},\n\n\t/**\n\t * Handler for the validateFieldGroup event.\n\t * @param oEvent The event object passed by the validateFieldGroup event\n\t */\n\tonValidateFieldGroup: function (oEvent: Control$ValidateFieldGroupEvent): void {\n\t\tconst oSourceField = oEvent.getSource() as ManagedObject;\n\t\tconst view = CommonUtils.getTargetView(oSourceField),\n\t\t\tcontroller = view.getController();\n\n\t\tconst oFEController = FieldRuntimeHelper.getExtensionController(controller);\n\t\toFEController._sideEffects.handleFieldGroupChange(oEvent);\n\t},\n\n\t_fnFixHashQueryString: function (sCurrentHash: string): string {\n\t\tif (sCurrentHash?.includes(\"?\")) {\n\t\t\t// sCurrentHash can contain query string, cut it off!\n\t\t\tsCurrentHash = sCurrentHash.split(\"?\")[0];\n\t\t}\n\t\treturn sCurrentHash;\n\t},\n\n\t/**\n\t * Method to retrieve text from the value list for DataField.\n\t * This is a formatter in disguise.\n\t * @param sPropertyValue The property value of the data field.\n\t * @param sPropertyFullPath The full path to the property in the metadata.\n\t * @param sDisplayFormat The display format for the data field.\n\t * @returns The formatted value based on the display format.\n\t */\n\tretrieveTextFromValueList: async function (\n\t\tthis: Control,\n\t\tsPropertyValue: string,\n\t\tsPropertyFullPath: string,\n\t\tsDisplayFormat: string\n\t): Promise<string> {\n\t\tlet sTextProperty: string;\n\t\tlet oMetaModel;\n\t\tlet sPropertyName: string;\n\t\tif (sPropertyValue) {\n\t\t\toMetaModel = (this.getModel()?.getMetaModel() as ODataMetaModel) || CommonHelper.getMetaModel();\n\t\t\tsPropertyName = oMetaModel.getObject(`${sPropertyFullPath}@sapui.name`);\n\t\t\treturn oMetaModel\n\t\t\t\t.requestValueListInfo(sPropertyFullPath, true)\n\t\t\t\t.then(function (mValueListInfo) {\n\t\t\t\t\t// take the \"\" one if exists, otherwise take the first one in the object TODO: to be discussed\n\t\t\t\t\tconst oValueListInfo = mValueListInfo[mValueListInfo[\"\"] ? \"\" : Object.keys(mValueListInfo)[0]];\n\t\t\t\t\tconst oValueListModel = oValueListInfo.$model;\n\t\t\t\t\tconst oMetaModelValueList = oValueListModel.getMetaModel();\n\t\t\t\t\tconst oParamWithKey = oValueListInfo.Parameters.find(function (oParameter: {\n\t\t\t\t\t\tLocalDataProperty?: { $PropertyPath: string };\n\t\t\t\t\t}) {\n\t\t\t\t\t\treturn oParameter.LocalDataProperty && oParameter.LocalDataProperty.$PropertyPath === sPropertyName;\n\t\t\t\t\t});\n\t\t\t\t\tif (oParamWithKey && !oParamWithKey.ValueListProperty) {\n\t\t\t\t\t\tthrow new Error(`Inconsistent value help annotation for ${sPropertyName}`);\n\t\t\t\t\t}\n\t\t\t\t\tconst oTextAnnotation = oMetaModelValueList.getObject(\n\t\t\t\t\t\t`/${oValueListInfo.CollectionPath}/${oParamWithKey.ValueListProperty}@com.sap.vocabularies.Common.v1.Text`\n\t\t\t\t\t);\n\n\t\t\t\t\tif (oTextAnnotation && oTextAnnotation.$Path) {\n\t\t\t\t\t\tsTextProperty = oTextAnnotation.$Path;\n\t\t\t\t\t\tconst oFilter = new Filter({\n\t\t\t\t\t\t\tpath: oParamWithKey.ValueListProperty,\n\t\t\t\t\t\t\toperator: \"EQ\",\n\t\t\t\t\t\t\tvalue1: sPropertyValue\n\t\t\t\t\t\t});\n\t\t\t\t\t\tconst oListBinding = oValueListModel.bindList(`/${oValueListInfo.CollectionPath}`, undefined, undefined, oFilter, {\n\t\t\t\t\t\t\t$select: sTextProperty\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn oListBinding.requestContexts(0, 2);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsDisplayFormat = \"Value\";\n\t\t\t\t\t\treturn sPropertyValue;\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.then(function (aContexts: Context[]) {\n\t\t\t\t\tconst sDescription = sTextProperty ? aContexts[0]?.getObject()[sTextProperty] : \"\";\n\t\t\t\t\tif (!sDescription) {\n\t\t\t\t\t\treturn sPropertyValue;\n\t\t\t\t\t}\n\t\t\t\t\tswitch (sDisplayFormat) {\n\t\t\t\t\t\tcase \"Description\":\n\t\t\t\t\t\t\treturn sDescription || sPropertyValue;\n\t\t\t\t\t\tcase \"DescriptionValue\":\n\t\t\t\t\t\t\treturn Library.getResourceBundleFor(\"sap.fe.core\")!.getText(\"C_FORMAT_FOR_TEXT_ARRANGEMENT\", [\n\t\t\t\t\t\t\t\tsDescription,\n\t\t\t\t\t\t\t\tsPropertyValue\n\t\t\t\t\t\t\t]);\n\t\t\t\t\t\tcase \"ValueDescription\":\n\t\t\t\t\t\t\treturn Library.getResourceBundleFor(\"sap.fe.core\")!.getText(\"C_FORMAT_FOR_TEXT_ARRANGEMENT\", [\n\t\t\t\t\t\t\t\tsPropertyValue,\n\t\t\t\t\t\t\t\tsDescription\n\t\t\t\t\t\t\t]);\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\treturn sPropertyValue;\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch(function (oError: unknown) {\n\t\t\t\t\tconst errorObj = oError as { status: number; message: string };\n\t\t\t\t\tconst sMsg =\n\t\t\t\t\t\terrorObj.status && errorObj.status === 404\n\t\t\t\t\t\t\t? `Metadata not found (${errorObj.status}) for value help of property ${sPropertyFullPath}`\n\t\t\t\t\t\t\t: errorObj.message;\n\t\t\t\t\tLog.error(sMsg);\n\t\t\t\t});\n\t\t}\n\t\treturn sPropertyValue;\n\t},\n\n\tdisplayAggregateDetails: async function (event: Event, aggregatedPropertyPath?: string): Promise<void> {\n\t\tif (!aggregatedPropertyPath) {\n\t\t\treturn;\n\t\t}\n\t\tconst link = event.getSource<Link>();\n\t\tconst analyticalTable = FPMHelper.getMdcTable(link)!;\n\n\t\tconst rowContext = link.getBindingContext() as Context;\n\t\tconst tableRowBinding = rowContext.getBinding() as ODataListBinding;\n\n\t\t// Get the filters corresponding to the total row\n\t\tconst rowContextData = rowContext.getObject();\n\t\tconst rowSpecificFilter: Filter[] = [];\n\t\tconst rowFilter = rowContext.getFilter();\n\t\tif (rowFilter) {\n\t\t\trowSpecificFilter.push(rowFilter);\n\t\t}\n\n\t\t// Add the filters applied to the original table\n\t\tconst allFilters = rowSpecificFilter.concat(tableRowBinding.getFilters(\"Application\"), tableRowBinding.getFilters(\"Control\"));\n\n\t\t// Calculate $$aggregation parameters for the table in the popover (aggregate amount, group by currency/unit)\n\t\tconst aggregation = tableRowBinding.getAggregation() as {\n\t\t\tgroup: Record<string, object>;\n\t\t\taggregate: Record<string, { unit: string }>;\n\t\t\tsearch?: string;\n\t\t};\n\t\tconst unitOrCurrencyName = aggregation.aggregate[aggregatedPropertyPath].unit;\n\t\tconst group: Record<string, object> = {};\n\t\tgroup[unitOrCurrencyName] = {};\n\t\tconst aggregate: Record<string, object> = {};\n\t\taggregate[aggregatedPropertyPath] = { grandTotal: false, subtotals: false, unit: unitOrCurrencyName };\n\n\t\t// The item displayed in the table in the popover is a copy of the item displayed in the table\n\t\tconst tableItem = link.getDependents()[0].clone();\n\t\tconst currencyOrQuantityEnabledLayout = new HBox({\n\t\t\trenderType: \"Bare\",\n\t\t\tjustifyContent: \"End\",\n\t\t\titems: [tableItem]\n\t\t} as $HBoxSettings);\n\n\t\tconst aggregationParameters: {\n\t\t\tgroup: Record<string, object>;\n\t\t\taggregate: Record<string, object>;\n\t\t\tsearch?: string;\n\t\t} = { group, aggregate };\n\t\tif (aggregation.search) {\n\t\t\taggregationParameters.search = aggregation.search;\n\t\t}\n\n\t\tconst oItemsBindingInfo = {\n\t\t\tpath: tableRowBinding.getResolvedPath(),\n\t\t\tfilters: allFilters,\n\t\t\tparameters: {\n\t\t\t\t$$aggregation: aggregationParameters\n\t\t\t},\n\t\t\tsorter: new Sorter(unitOrCurrencyName, false) // Order by currency\n\t\t};\n\n\t\tconst isPopoverForGrandTotal = rowContextData[\"@$ui5.node.level\"] === 0;\n\t\tconst popover: ResponsivePopover = await Util.createOrUpdateMultiUnitPopover(`${analyticalTable.getId()}-multiUnitPopover`, {\n\t\t\tcontrol: analyticalTable,\n\t\t\tgrandTotal: isPopoverForGrandTotal,\n\t\t\titemsBindingInfo: oItemsBindingInfo,\n\t\t\tlistItemContentTemplate: currencyOrQuantityEnabledLayout\n\t\t});\n\t\tanalyticalTable.addDependent(popover);\n\n\t\tconst fnOnClose = (): void => {\n\t\t\tanalyticalTable.removeDependent(popover);\n\t\t\tpopover.detachEvent(\"afterClose\", fnOnClose);\n\t\t\tpopover.destroy();\n\t\t};\n\t\tpopover.attachEvent(\"afterClose\", fnOnClose);\n\t\tpopover.openBy(link);\n\t}\n};\n\nObjectPath.set(\"sap.fe.macros.field.FieldRuntime\", FieldRuntime);\n\nexport default FieldRuntime;\n"],"mappings":"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","ignoreList":[]}