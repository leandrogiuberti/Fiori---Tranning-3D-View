{"version":3,"file":"FieldRuntimeHelper.js","names":["FieldRuntimeHelper","uploadPromises","creatingInactiveRow","fetchRecommendations","field","controller","view","CommonUtils","getTargetView","fieldBindingContext","getBindingContext","recommendationsContext","fieldBinding","getBinding","isA","feController","getExtensionController","valueHelpId","getValueHelp","metaPath","ModelHelper","getMetaPathForContext","propertyPath","data","replace","fieldPath","getPath","selectedValue","getValue","recommendations","updateTelemetryDataBasedOnUserSelection","includes","tableId","substring","indexOf","table","byId","contextIdentifier","getParent","getIdentifierColumn","fetchAndApplyRecommendationsOnFieldChange","context","oController","_controller","getFieldStateOnChange","oEvent","oSourceField","getSource","mFieldState","_isBindingStateMessages","oBinding","getDataState","getInvalidValue","undefined","getContent","FieldWrapper","getMetadata","getName","getEditMode","getContentEdit","bIsValid","getParameter","getMaxConditions","oValueBindingInfo","getBindingInfo","binding","getProperty","fieldValue","validity","state","pressLink","async","oSource","sapmLink","findElements","elem","getDependents","length","oFieldInfo","openLink","mdcLink","hRef","getTriggerHref","_useDelegateItems","linkItems","retrieveLinkItems","getPayload","hasQuickViewFacets","popover","createPopoverWithNoTargets","addDependent","openBy","open","error","Log","appComponent","getAppComponent","shellService","getShellServices","shellHash","parseShellHash","navArgs","target","semanticObject","action","params","KeepAliveHelper","storeControlRefreshStrategyForHash","isStickyEditMode","navigate","newHref","hrefForExternal","openWindow","mdcLinkId","getId","illustratedMessageSettings","title","getResourceModel","getText","description","enableFormattedText","illustrationSize","IllustratedMessageSize","ExtraSmall","illustrationType","IllustratedMessageType","NoData","illustratedMessage","IllustratedMessage","popoverSettings","horizontalScrolling","showHeader","Device","system","phone","placement","mobilelibrary","PlacementType","Auto","content","afterClose","event","destroy","ResponsivePopover","handleTypeMissmatch","fileUploader","givenType","acceptedTypes","getMimeType","showTypeMismatchDialog","handleFileSizeExceed","showFileSizeExceedDialog","getMaximumFileSize","toFixed","handleUploadComplete","propertyFileName","status","Number","fileWrapper","setUIBusy","displayMessageForFailedUpload","reject","newETag","etag","setProperty","path","avatar","refreshAvatarCacheBusting","_callSideEffectsForStream","this","resolve","fireEvent","isCollaborationEnabled","collaborativeDraft","isConnected","notificationData","push","oView","hasPendingChanges","attachEventOnce","send","Activity","Change","Unlock","removeStream","deleteButton","bCollaborationEnabled","Lock","oControl","oFEController","isTransient","_sideEffects","handleFieldChange","uploadStream","FEController","uploadUrl","getUploadUrl","setUploadUrl","files","fileType","type","setHeaderFields","uploadPromise","Promise","upload","editFlow","syncTask","MessageBox","handleOpenUploader","_sendCollaborationMessageForFileUploader","getController","bindingPath","fullPath","handleCloseUploader","openExternalLink","source","getIconForMimeType","mimeType","IconPool","onDataFieldWithNavigationPath","navPath","_routing","bindingContext","metaModel","getModel","getMetaModel","viewData","getViewData","draftRootPath","getDraftRootPath","urlNavigation","getHashForNavigation","navigateFn","getRouterProxy","navToHash","isStickySessionSupported","startsWith","sameOPNavigation","converterType","draft","processDataLossOrDraftDiscardConfirmation","Function","prototype","NavigationType","ForwardNavigation","showCollaborationEditUser","resourceModel","ResourceModelHelper","Element","getElementById","addStyleClass","getBindings","find","activities","getObject","editingActivity","activity","key","getActivityKeyFromPath","destroyContent","addContent","Label","text","name"],"sources":["./FieldRuntimeHelper.ts"],"sourcesContent":["import Log from \"sap/base/Log\";\nimport type { EnhanceWithUI5 } from \"sap/fe/base/ClassSupport\";\nimport CommonUtils from \"sap/fe/core/CommonUtils\";\nimport type ExtensionAPI from \"sap/fe/core/ExtensionAPI\";\nimport type PageController from \"sap/fe/core/PageController\";\nimport type { UserActivity } from \"sap/fe/core/controllerextensions/collaboration/CollaborationCommon\";\nimport { Activity, getActivityKeyFromPath } from \"sap/fe/core/controllerextensions/collaboration/CollaborationCommon\";\nimport draft from \"sap/fe/core/controllerextensions/editFlow/draft\";\nimport KeepAliveHelper from \"sap/fe/core/helpers/KeepAliveHelper\";\nimport ModelHelper from \"sap/fe/core/helpers/ModelHelper\";\nimport ResourceModelHelper, { getResourceModel } from \"sap/fe/core/helpers/ResourceModelHelper\";\nimport type TextLink from \"sap/fe/macros/controls/TextLink\";\nimport type { LinkDelegatePayload } from \"sap/fe/macros/quickView/QuickViewDelegate\";\nimport type Avatar from \"sap/m/Avatar\";\nimport type { Button$PressEvent } from \"sap/m/Button\";\nimport type { $IllustratedMessageSettings } from \"sap/m/IllustratedMessage\";\nimport IllustratedMessage from \"sap/m/IllustratedMessage\";\nimport IllustratedMessageSize from \"sap/m/IllustratedMessageSize\";\nimport IllustratedMessageType from \"sap/m/IllustratedMessageType\";\nimport Label from \"sap/m/Label\";\nimport type Link from \"sap/m/Link\";\nimport MessageBox from \"sap/m/MessageBox\";\nimport type ObjectIdentifier from \"sap/m/ObjectIdentifier\";\nimport type { $ResponsivePopoverSettings } from \"sap/m/ResponsivePopover\";\nimport ResponsivePopover from \"sap/m/ResponsivePopover\";\nimport mobilelibrary from \"sap/m/library\";\nimport Device from \"sap/ui/Device\";\nimport type Event from \"sap/ui/base/Event\";\nimport type Control from \"sap/ui/core/Control\";\nimport Element from \"sap/ui/core/Element\";\nimport IconPool from \"sap/ui/core/IconPool\";\nimport type View from \"sap/ui/core/mvc/View\";\nimport type { Field$ChangeEvent, default as mdcField } from \"sap/ui/mdc/Field\";\nimport type MdcLink from \"sap/ui/mdc/Link\";\nimport type CompositeBinding from \"sap/ui/model/CompositeBinding\";\nimport type DataState from \"sap/ui/model/DataState\";\nimport type PropertyBinding from \"sap/ui/model/PropertyBinding\";\nimport type Context from \"sap/ui/model/odata/v4/Context\";\nimport type FileUploader from \"sap/ui/unified/FileUploader\";\nimport type {\n\tFileUploader$ChangeEvent,\n\tFileUploader$FileSizeExceedEvent,\n\tFileUploader$TypeMissmatchEvent,\n\tFileUploader$UploadCompleteEvent\n} from \"sap/ui/unified/FileUploader\";\nimport openWindow from \"sap/ui/util/openWindow\";\nimport type Field from \"../Field\";\nimport FieldWrapper from \"../controls/FieldWrapper\";\nimport type FileWrapper from \"../controls/FileWrapper\";\nimport {\n\tdisplayMessageForFailedUpload,\n\tsetHeaderFields,\n\tshowFileSizeExceedDialog,\n\tshowTypeMismatchDialog\n} from \"../internal/helpers/Upload\";\nimport type TableAPI from \"../table/TableAPI\";\n\ntype File = {\n\ttype: string;\n};\n\nconst FieldRuntimeHelper = {\n\tuploadPromises: {} as Record<string, { resolve: Function; reject: Function }>,\n\tcreatingInactiveRow: false,\n\n\tfetchRecommendations: function (field: Control, controller: PageController | ExtensionAPI): void {\n\t\tconst view = CommonUtils.getTargetView(field);\n\t\tconst fieldBindingContext = field.getBindingContext();\n\t\tlet recommendationsContext: Context;\n\n\t\t// determine recommendation context to use\n\t\tconst fieldBinding = (fieldBindingContext as Context)?.getBinding();\n\n\t\tif (fieldBinding.isA(\"sap.ui.model.odata.v4.ODataListBinding\")) {\n\t\t\t// inside a table, use the row\n\t\t\trecommendationsContext = fieldBindingContext as Context;\n\t\t} else {\n\t\t\t// inside a form now\n\t\t\t// can have 1-1 navigation property/direct property - use view context\n\t\t\trecommendationsContext = view.getBindingContext();\n\t\t}\n\t\tconst feController = FieldRuntimeHelper.getExtensionController(controller);\n\t\tconst valueHelpId = field.isA<mdcField>(\"sap.ui.mdc.Field\") && field.getValueHelp();\n\t\t// update telemetry data as per user selection\n\t\tconst metaPath = ModelHelper.getMetaPathForContext(field.getBindingContext() as Context);\n\t\tconst propertyPath = field.data(\"sourcePath\").replace(metaPath, \"\");\n\t\tconst fieldPath = `${field.getBindingContext()?.getPath()}${propertyPath}`;\n\t\tconst selectedValue = field.isA<mdcField>(\"sap.ui.mdc.Field\") && field.getValue();\n\t\tfeController.recommendations.updateTelemetryDataBasedOnUserSelection(fieldPath, selectedValue);\n\n\t\tif (valueHelpId && valueHelpId.includes(\"::TableValueHelp::\")) {\n\t\t\tconst tableId = valueHelpId.substring(0, valueHelpId.indexOf(\"::TableValueHelp::\"));\n\t\t\tconst table = view.byId(tableId);\n\t\t\tconst contextIdentifier = (table?.getParent() as TableAPI)?.getIdentifierColumn() as string[];\n\t\t\tfeController.recommendations.fetchAndApplyRecommendationsOnFieldChange(field, {\n\t\t\t\tcontext: recommendationsContext,\n\t\t\t\tcontextIdentifier\n\t\t\t});\n\t\t} else {\n\t\t\tfeController.recommendations.fetchAndApplyRecommendationsOnFieldChange(field, { context: recommendationsContext });\n\t\t}\n\t},\n\n\tgetExtensionController: function (oController: PageController | ExtensionAPI): PageController {\n\t\treturn oController.isA<ExtensionAPI>(\"sap.fe.core.ExtensionAPI\") ? oController._controller : oController;\n\t},\n\n\t/**\n\t * Gets the field value and validity on a change event.\n\t * @param oEvent The event object passed by the change event\n\t * @returns Field value and validity\n\t */\n\tgetFieldStateOnChange: function (oEvent: Field$ChangeEvent & Event<{ isValid: boolean }, Control>): {\n\t\tfield: mdcField;\n\t\tstate: {\n\t\t\tfieldValue?: unknown;\n\t\t\tvalidity: boolean;\n\t\t};\n\t} {\n\t\tlet oSourceField = oEvent.getSource(),\n\t\t\tmFieldState: {\n\t\t\t\tfieldValue?: unknown;\n\t\t\t\tvalidity: boolean;\n\t\t\t};\n\t\tconst _isBindingStateMessages = function (oBinding: PropertyBinding & { getDataState: () => DataState }): boolean {\n\t\t\treturn oBinding && oBinding.getDataState() ? oBinding.getDataState().getInvalidValue() === undefined : true;\n\t\t};\n\t\tif (oSourceField.isA<mdcField>(\"sap.fe.macros.field.Field\")) {\n\t\t\toSourceField = oSourceField.getContent() as mdcField;\n\t\t}\n\t\tif (oSourceField.isA<EnhanceWithUI5<Field>>(\"sap.fe.macros.Field\")) {\n\t\t\toSourceField = oSourceField.getContent() as mdcField;\n\t\t}\n\n\t\tif (\n\t\t\toSourceField.isA<EnhanceWithUI5<FieldWrapper>>(FieldWrapper.getMetadata().getName()) &&\n\t\t\toSourceField.getEditMode() === \"Editable\"\n\t\t) {\n\t\t\toSourceField = (oSourceField as EnhanceWithUI5<FieldWrapper>).getContentEdit()[0] as mdcField;\n\t\t}\n\n\t\tif (oSourceField.isA<mdcField>(\"sap.ui.mdc.Field\")) {\n\t\t\tlet bIsValid = oEvent.getParameter(\"valid\") || oEvent.getParameter(\"isValid\");\n\t\t\tif (bIsValid === undefined) {\n\t\t\t\tif (oSourceField.getMaxConditions() === 1) {\n\t\t\t\t\tconst oValueBindingInfo = oSourceField.getBindingInfo(\"value\");\n\t\t\t\t\tbIsValid = _isBindingStateMessages(oValueBindingInfo && oValueBindingInfo.binding);\n\t\t\t\t}\n\t\t\t\tif (oSourceField.getValue() === \"\" && !oSourceField.getProperty(\"required\")) {\n\t\t\t\t\tbIsValid = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmFieldState = {\n\t\t\t\tfieldValue: oSourceField.getValue(),\n\t\t\t\tvalidity: !!bIsValid\n\t\t\t};\n\t\t} else {\n\t\t\t// oSourceField extends from a FileUploader || Input || is a CheckBox\n\t\t\tconst oBinding =\n\t\t\t\t(oSourceField as Control).getBinding(\"uploadUrl\") ||\n\t\t\t\t(oSourceField as Control).getBinding(\"value\") ||\n\t\t\t\t(oSourceField as Control).getBinding(\"selected\");\n\t\t\tmFieldState = {\n\t\t\t\tfieldValue: oBinding && (oBinding as PropertyBinding).getValue(),\n\t\t\t\tvalidity: _isBindingStateMessages(oBinding as PropertyBinding & { getDataState: () => DataState })\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\tfield: oSourceField,\n\t\t\tstate: mFieldState\n\t\t};\n\t},\n\t/**\n\t * Handles the press event for a link.\n\t * @param oEvent The press event\n\t * @returns The pressed link\n\t */\n\tpressLink: async function (oEvent: Button$PressEvent): Promise<Link> {\n\t\tconst oSource = oEvent.getSource();\n\t\tlet sapmLink = oSource.isA<ObjectIdentifier>(\"sap.m.ObjectIdentifier\")\n\t\t\t? oSource.findElements(false, (elem: Element) => {\n\t\t\t\t\treturn elem.isA<Link>(\"sap.m.Link\");\n\t\t\t  })[0]\n\t\t\t: oSource;\n\t\tif (oSource?.isA<TextLink>(\"sap.fe.macros.controls.TextLink\")) {\n\t\t\t//when the link is inside a TextLink control, the dependent will be on the TextLink\n\t\t\tsapmLink = oSource.getContent() as Link;\n\t\t}\n\n\t\tif (oSource.getDependents() && oSource.getDependents().length > 0 && sapmLink.getProperty(\"text\") !== \"\") {\n\t\t\tconst oFieldInfo = oSource.getDependents()[0];\n\t\t\tif (oFieldInfo && oFieldInfo.isA<MdcLink>(\"sap.ui.mdc.Link\")) {\n\t\t\t\tawait FieldRuntimeHelper.openLink(oFieldInfo, sapmLink as Link);\n\t\t\t}\n\t\t}\n\t\treturn sapmLink as Link;\n\t},\n\n\topenLink: async function (mdcLink: MdcLink, sapmLink: Link): Promise<void> {\n\t\ttry {\n\t\t\tconst hRef = await mdcLink.getTriggerHref();\n\t\t\tif (!hRef) {\n\t\t\t\ttry {\n\t\t\t\t\tawait (mdcLink as unknown as { _useDelegateItems: Function })._useDelegateItems();\n\t\t\t\t\tconst linkItems = await mdcLink.retrieveLinkItems();\n\t\t\t\t\tif (linkItems?.length === 0 && (mdcLink.getPayload() as LinkDelegatePayload).hasQuickViewFacets === \"false\") {\n\t\t\t\t\t\tconst popover: ResponsivePopover = FieldRuntimeHelper.createPopoverWithNoTargets(mdcLink);\n\t\t\t\t\t\tmdcLink.addDependent(popover);\n\t\t\t\t\t\tpopover.openBy(sapmLink as unknown as Control);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\tawait mdcLink.open(sapmLink as unknown as Control);\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\tLog.error(`Cannot retrieve the QuickView Popover dialog: ${error}`);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst view = CommonUtils.getTargetView(sapmLink);\n\t\t\t\tconst appComponent = CommonUtils.getAppComponent(view);\n\t\t\t\tconst shellService = appComponent.getShellServices();\n\t\t\t\tconst shellHash = shellService.parseShellHash(hRef);\n\t\t\t\tconst navArgs = {\n\t\t\t\t\ttarget: {\n\t\t\t\t\t\tsemanticObject: shellHash.semanticObject,\n\t\t\t\t\t\taction: shellHash.action\n\t\t\t\t\t},\n\t\t\t\t\tparams: shellHash.params\n\t\t\t\t};\n\t\t\t\tKeepAliveHelper.storeControlRefreshStrategyForHash(view, shellHash);\n\t\t\t\tif (CommonUtils.isStickyEditMode(sapmLink as unknown as Control) !== true) {\n\t\t\t\t\t//URL params and xappState has been generated earlier hence using navigate\n\t\t\t\t\tawait shellService.navigate(navArgs, appComponent);\n\t\t\t\t} else {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst newHref = await shellService.hrefForExternal(navArgs, appComponent);\n\t\t\t\t\t\topenWindow(newHref);\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tLog.error(`Error while retireving hrefForExternal : ${error}`);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tLog.error(`Error triggering link Href: ${error}`);\n\t\t}\n\t},\n\n\tcreatePopoverWithNoTargets: function (mdcLink: MdcLink): ResponsivePopover {\n\t\tconst mdcLinkId = mdcLink.getId();\n\t\tconst illustratedMessageSettings: $IllustratedMessageSettings = {\n\t\t\ttitle: getResourceModel(mdcLink as unknown as Control).getText(\"M_ILLUSTRATEDMESSAGE_TITLE\"),\n\t\t\tdescription: getResourceModel(mdcLink as unknown as Control).getText(\"M_ILLUSTRATEDMESSAGE_DESCRIPTION\"),\n\t\t\tenableFormattedText: true,\n\t\t\tillustrationSize: IllustratedMessageSize.ExtraSmall,\n\t\t\tillustrationType: IllustratedMessageType.NoData\n\t\t};\n\t\tconst illustratedMessage = new IllustratedMessage(`${mdcLinkId}-illustratedmessage`, illustratedMessageSettings);\n\t\tconst popoverSettings: $ResponsivePopoverSettings = {\n\t\t\thorizontalScrolling: false,\n\t\t\tshowHeader: Device.system.phone,\n\t\t\tplacement: mobilelibrary.PlacementType.Auto,\n\t\t\tcontent: [illustratedMessage],\n\t\t\tafterClose: function (event) {\n\t\t\t\tif (event.getSource()) {\n\t\t\t\t\tevent.getSource().destroy();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn new ResponsivePopover(`${mdcLinkId}-popover`, popoverSettings);\n\t},\n\n\t/**\n\t * Handles the type mismatch event for a file uploader.\n\t *\n\t * Displays a dialog to inform the user about the type mismatch.\n\t * @param event The event object containing details about the type mismatch\n\t */\n\thandleTypeMissmatch: function (event: FileUploader$TypeMissmatchEvent): void {\n\t\tconst fileUploader = event.getSource();\n\t\tconst givenType = event.getParameter(\"mimeType\");\n\t\tconst acceptedTypes = fileUploader.getMimeType();\n\t\tif (givenType) {\n\t\t\tshowTypeMismatchDialog(fileUploader, givenType, acceptedTypes);\n\t\t}\n\t},\n\n\t/**\n\t * Handles the file size exceed event for a file uploader.\n\t *\n\t * Displays a dialog to inform the user about the file size exceed.\n\t * @param event The event object containing details about the file size exceed\n\t */\n\thandleFileSizeExceed: function (event: FileUploader$FileSizeExceedEvent): void {\n\t\tconst fileUploader = event.getSource();\n\t\tshowFileSizeExceedDialog(fileUploader, fileUploader.getMaximumFileSize().toFixed(3));\n\t},\n\n\t/**\n\t * Handles the upload complete event for a file uploader.\n\t *\n\t * Displays a message for a failed upload and resolves or rejects the upload promise.\n\t * @param event The event object containing details about the upload\n\t * @param propertyFileName The property name for the file name\n\t * @param propertyPath The property path for the file\n\t * @param controller The page controller\n\t */\n\thandleUploadComplete: function (\n\t\tevent: FileUploader$UploadCompleteEvent,\n\t\tpropertyFileName: { path: string } | undefined,\n\t\tpropertyPath: string,\n\t\tcontroller: PageController\n\t): void {\n\t\tconst status = Number(event.getParameter(\"status\")),\n\t\t\tfileUploader = event.getSource(),\n\t\t\tfileWrapper = fileUploader.getParent() as unknown as FileWrapper,\n\t\t\tfield = fileWrapper.getParent();\n\t\tfileWrapper.setUIBusy(false);\n\n\t\tconst context = fileUploader.getBindingContext() as Context | undefined | null;\n\t\tif (status === 0 || status >= 400) {\n\t\t\tconst error = (event.getParameter(\"responseRaw\") || event.getParameter(\"response\")) as string;\n\t\t\tdisplayMessageForFailedUpload(fileUploader, error);\n\t\t\tFieldRuntimeHelper.uploadPromises[fileUploader.getId()].reject();\n\t\t} else {\n\t\t\tconst newETag = (event.getParameter(\"headers\") as Record<string, unknown>)?.etag;\n\n\t\t\tif (newETag) {\n\t\t\t\t// set new etag for filename update, but without sending patch request\n\t\t\t\tcontext?.setProperty(\"@odata.etag\", newETag, null as unknown as string);\n\t\t\t}\n\n\t\t\t// set filename for link text\n\t\t\tif (propertyFileName?.path) {\n\t\t\t\tcontext?.setProperty(propertyFileName.path, fileUploader.getValue());\n\t\t\t}\n\n\t\t\t// delete the avatar cache that not gets updated otherwise\n\t\t\tfileWrapper.avatar?.refreshAvatarCacheBusting();\n\n\t\t\tFieldRuntimeHelper._callSideEffectsForStream(\n\t\t\t\tevent as unknown as Field$ChangeEvent & Event<{ isValid: boolean }>,\n\t\t\t\tfileWrapper,\n\t\t\t\tcontroller\n\t\t\t);\n\n\t\t\tthis.uploadPromises[fileUploader.getId()].resolve();\n\t\t\tfield?.fireEvent(\"change\", event);\n\t\t}\n\n\t\tdelete this.uploadPromises[fileUploader.getId()];\n\n\t\t// Collaboration Draft Activity Sync\n\t\tconst isCollaborationEnabled = controller.collaborativeDraft?.isConnected();\n\t\tif (!isCollaborationEnabled || !context) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst notificationData = [`${context.getPath()}/${propertyPath}`];\n\t\tif (propertyFileName?.path) {\n\t\t\tnotificationData.push(`${context.getPath()}/${propertyFileName.path}`);\n\t\t}\n\n\t\tlet binding = context.getBinding();\n\t\tif (!binding.isA(\"sap.ui.model.odata.v4.ODataListBinding\")) {\n\t\t\tconst oView = CommonUtils.getTargetView(fileUploader);\n\t\t\tbinding = oView.getBindingContext().getBinding();\n\t\t}\n\t\tif (binding.hasPendingChanges()) {\n\t\t\tbinding.attachEventOnce(\"patchCompleted\", () => {\n\t\t\t\tcontroller.collaborativeDraft.send({ action: Activity.Change, content: notificationData });\n\t\t\t\tcontroller.collaborativeDraft.send({ action: Activity.Unlock, content: notificationData });\n\t\t\t});\n\t\t} else {\n\t\t\tcontroller.collaborativeDraft.send({ action: Activity.Change, content: notificationData });\n\t\t\tcontroller.collaborativeDraft.send({ action: Activity.Unlock, content: notificationData });\n\t\t}\n\t},\n\n\t/**\n\t * Removes a stream from a file property.\n\t *\n\t * Sets the property to null and then undefined to recreate the upload URL.\n\t * Handles collaboration draft activity sync if enabled.\n\t * @param event The change event object\n\t * @param  propertyFileName The property name for the file name.\n\t * @param propertyPath The property path for the file.\n\t * @param controller The page controller.\n\t */\n\tremoveStream: function (\n\t\tevent: Field$ChangeEvent & Event<{ isValid: boolean }>,\n\t\tpropertyFileName: { path: string } | undefined,\n\t\tpropertyPath: string,\n\t\tcontroller: PageController\n\t): void {\n\t\tconst deleteButton = event.getSource();\n\t\tconst fileWrapper = deleteButton.getParent() as unknown as FileWrapper;\n\t\tconst context = fileWrapper.getBindingContext() as Context;\n\t\tconst field = fileWrapper.getParent();\n\n\t\t// streams are removed by assigning the null value\n\t\tcontext.setProperty(propertyPath, null);\n\t\t// When setting the property to null, the uploadUrl (@@MODEL.format) is set to \"\" by the model\n\t\t//\twith that another upload is not possible before refreshing the page\n\t\t// (refreshing the page would recreate the URL)\n\t\t//\tThis is the workaround:\n\t\t//\tWe set the property to undefined only on the frontend which will recreate the uploadUrl\n\t\tcontext.setProperty(propertyPath, undefined, null as unknown as string);\n\n\t\tFieldRuntimeHelper._callSideEffectsForStream(event, fileWrapper, controller);\n\n\t\t// Collaboration Draft Activity Sync\n\t\tconst bCollaborationEnabled = controller.collaborativeDraft?.isConnected();\n\t\tif (bCollaborationEnabled) {\n\t\t\tlet binding = context.getBinding();\n\t\t\tif (!binding.isA(\"sap.ui.model.odata.v4.ODataListBinding\")) {\n\t\t\t\tconst oView = CommonUtils.getTargetView(deleteButton);\n\t\t\t\tbinding = oView.getBindingContext().getBinding();\n\t\t\t}\n\n\t\t\tconst data = [`${context.getPath()}/${propertyPath}`];\n\t\t\tif (propertyFileName?.path) {\n\t\t\t\tdata.push(`${context.getPath()}/${propertyFileName.path}`);\n\t\t\t}\n\t\t\tcontroller.collaborativeDraft.send({ action: Activity.Lock, content: data });\n\n\t\t\tbinding.attachEventOnce(\"patchCompleted\", function () {\n\t\t\t\tcontroller.collaborativeDraft.send({ action: Activity.Change, content: data });\n\t\t\t\tcontroller.collaborativeDraft.send({ action: Activity.Unlock, content: data });\n\t\t\t});\n\t\t}\n\t\tfield?.fireEvent(\"change\", event);\n\t},\n\n\t_callSideEffectsForStream: function (\n\t\toEvent: Field$ChangeEvent & Event<{ isValid: boolean }>,\n\t\toControl: Control,\n\t\toController: PageController\n\t): void {\n\t\tconst oFEController = FieldRuntimeHelper.getExtensionController(oController);\n\t\tif (oControl && (oControl.getBindingContext() as unknown as { isTransient: Function }).isTransient()) {\n\t\t\treturn;\n\t\t}\n\t\tif (oControl) {\n\t\t\t(oEvent as unknown as { oSource: Control }).oSource = oControl;\n\t\t}\n\t\toFEController._sideEffects.handleFieldChange(oEvent, FieldRuntimeHelper.getFieldStateOnChange(oEvent).state[\"validity\"]);\n\t},\n\n\t/**\n\t * Uploads a stream using the file uploader.\n\t *\n\t * Sets the upload URL, synchronizes the upload with other requests, and handles collaboration draft activity sync if enabled.\n\t * @param controller The page controller.\n\t * @param event The change event object of the file uploader.\n\t */\n\tuploadStream: function (controller: PageController, event: FileUploader$ChangeEvent): void {\n\t\tconst fileUploader = event.getSource(),\n\t\t\tFEController = FieldRuntimeHelper.getExtensionController(controller),\n\t\t\tfileWrapper = fileUploader.getParent() as unknown as FileWrapper,\n\t\t\tuploadUrl = fileWrapper.getUploadUrl();\n\n\t\tif (uploadUrl !== \"\") {\n\t\t\tfileWrapper.setUIBusy(true);\n\n\t\t\t// use uploadUrl from FileWrapper which returns a canonical URL\n\t\t\tfileUploader.setUploadUrl(uploadUrl);\n\n\t\t\t// set the request header for the upload\n\t\t\tconst files = event.getParameter(\"files\");\n\t\t\t// there is only one file as we allow selecting only one\n\t\t\tconst fileType = (files && (files[0] as File).type) as string;\n\t\t\tsetHeaderFields(fileUploader, fileType);\n\n\t\t\t// synchronize upload with other requests\n\t\t\tconst uploadPromise = new Promise((resolve: Function, reject: Function) => {\n\t\t\t\tthis.uploadPromises = this.uploadPromises || {};\n\t\t\t\tthis.uploadPromises[fileUploader.getId()] = {\n\t\t\t\t\tresolve: resolve,\n\t\t\t\t\treject: reject\n\t\t\t\t};\n\t\t\t\tfileUploader.upload();\n\t\t\t});\n\t\t\tFEController.editFlow.syncTask(uploadPromise);\n\t\t} else {\n\t\t\tMessageBox.error(getResourceModel(controller).getText(\"M_FIELD_FILEUPLOADER_ABORTED_TEXT\"));\n\t\t}\n\t},\n\n\t/**\n\t * Handler when a FileUpload dialog is opened.\n\t * @param event\n\t */\n\thandleOpenUploader: function (event: Event<{}, FileUploader>): void {\n\t\tconst fileUploader = event.getSource();\n\t\tFieldRuntimeHelper._sendCollaborationMessageForFileUploader(fileUploader, Activity.Lock);\n\t},\n\n\t/**\n\t * Method to send collaboration messages from a FileUploader.\n\t * @param fileUploader\n\t * @param action\n\t */\n\t_sendCollaborationMessageForFileUploader(fileUploader: FileUploader, action: Activity): void {\n\t\tconst view = CommonUtils.getTargetView(fileUploader);\n\t\tconst collaborativeDraft = view.getController().collaborativeDraft;\n\t\tif (collaborativeDraft.isConnected()) {\n\t\t\tconst bindingPath = fileUploader.getParent()?.getProperty(\"propertyPath\");\n\t\t\tconst fullPath = `${fileUploader.getBindingContext()?.getPath()}/${bindingPath}`;\n\t\t\tcollaborativeDraft.send({ action, content: fullPath });\n\t\t}\n\t},\n\n\t/**\n\t * Handler when a FileUpload dialog is closed.\n\t * @param event\n\t */\n\thandleCloseUploader: function (event: Event<{}, FileUploader>): void {\n\t\tconst fileUploader = event.getSource();\n\t\tFieldRuntimeHelper._sendCollaborationMessageForFileUploader(fileUploader, Activity.Unlock);\n\t},\n\n\t/**\n\t * Opens an external link in the same tab.\n\t *\n\t * This function retrieves the URL from the link's data and opens it in the same tab.\n\t * @param event The event object containing details about the link click.\n\t */\n\topenExternalLink: function (event: Event<{}, Link>): void {\n\t\tconst source = event.getSource();\n\t\tif (source.data(\"url\") && source.getProperty(\"text\") !== \"\") {\n\t\t\t// This opens the link in the same tab as the link. It was done to be more consistent with other type of links.\n\t\t\topenWindow(source.data(\"url\"), \"_self\");\n\t\t}\n\t},\n\n\t/**\n\t * Retrieves the icon for a given MIME type.\n\t *\n\t * This function uses the `IconPool` to get the appropriate icon for the specified MIME type.\n\t * @param mimeType The MIME type for which the icon is to be retrieved\n\t * @returns The icon corresponding to the given MIME type\n\t */\n\tgetIconForMimeType: function (mimeType: string): string {\n\t\treturn IconPool.getIconForMimeType(mimeType);\n\t},\n\n\t/**\n\t * Triggers an internal navigation on the link pertaining to DataFieldWithNavigationPath.\n\t * @param source Source of the press event\n\t * @param controller Instance of the controller\n\t * @param navPath The navigation path\n\t */\n\tonDataFieldWithNavigationPath: async function (source: Control, controller: PageController, navPath: string): Promise<void> {\n\t\tif (controller._routing) {\n\t\t\tconst bindingContext = source.getBindingContext() as Context;\n\n\t\t\tconst view = CommonUtils.getTargetView(source),\n\t\t\t\tmetaModel = bindingContext.getModel().getMetaModel();\n\t\t\tconst viewData = view.getViewData();\n\n\t\t\tconst draftRootPath = ModelHelper.getDraftRootPath(bindingContext) ?? bindingContext.getPath();\n\t\t\tlet urlNavigation = await controller._routing.getHashForNavigation(bindingContext, navPath);\n\t\t\tconst navigateFn = (): void => {\n\t\t\t\tcontroller\n\t\t\t\t\t.getAppComponent()\n\t\t\t\t\t.getRouterProxy()\n\t\t\t\t\t.navToHash(\n\t\t\t\t\t\turlNavigation,\n\t\t\t\t\t\ttrue,\n\t\t\t\t\t\tfalse,\n\t\t\t\t\t\tfalse,\n\t\t\t\t\t\t!ModelHelper.isStickySessionSupported(bindingContext.getModel().getMetaModel())\n\t\t\t\t\t);\n\t\t\t};\n\n\t\t\t// To know if we're navigating on the same OP Entity\n\t\t\tif (!urlNavigation?.startsWith(\"/\")) {\n\t\t\t\turlNavigation = `/${urlNavigation}`;\n\t\t\t}\n\t\t\tconst sameOPNavigation = urlNavigation.startsWith(draftRootPath);\n\n\t\t\t// Show draft loss confirmation dialog in case of Object page\n\t\t\tif (viewData.converterType === \"ObjectPage\" && !ModelHelper.isStickySessionSupported(metaModel) && !sameOPNavigation) {\n\t\t\t\tdraft.processDataLossOrDraftDiscardConfirmation(\n\t\t\t\t\tnavigateFn,\n\t\t\t\t\tFunction.prototype,\n\t\t\t\t\tbindingContext,\n\t\t\t\t\tview.getController(),\n\t\t\t\t\ttrue,\n\t\t\t\t\tdraft.NavigationType.ForwardNavigation\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tnavigateFn();\n\t\t\t}\n\t\t} else {\n\t\t\tLog.error(\n\t\t\t\t\"FieldRuntime: No routing listener controller extension found. Internal navigation aborted.\",\n\t\t\t\t\"sap.fe.macros.field.FieldRuntime\",\n\t\t\t\t\"onDataFieldWithNavigationPath\"\n\t\t\t);\n\t\t}\n\t},\n\n\t/**\n\t * Event handler to create and show who is editing the field popover.\n\t * @param source The avatar which is next to the field locked\n\t * @param view Current view\n\t */\n\tshowCollaborationEditUser: function (source: Avatar, view: View): void {\n\t\tconst resourceModel = ResourceModelHelper.getResourceModel(view);\n\t\tlet popover = Element.getElementById(`manageCollaborationDraft--editUser`) as ResponsivePopover;\n\n\t\tif (!popover) {\n\t\t\tpopover = new ResponsivePopover(\"manageCollaborationDraft--editUser\", {\n\t\t\t\tshowHeader: false,\n\t\t\t\tplacement: \"Bottom\"\n\t\t\t});\n\t\t\tpopover.addStyleClass(\"sapUiContentPadding\");\n\t\t\tview.addDependent(popover);\n\t\t}\n\n\t\tconst bindingPath = (source.getBinding(\"initials\") as CompositeBinding | undefined)\n\t\t\t?.getBindings()\n\t\t\t.find((binding) => binding?.getPath()?.startsWith(\"/collaboration/activities\"))\n\t\t\t.getPath();\n\t\tconst activities = source.getBindingContext(\"internal\")?.getObject(bindingPath);\n\n\t\tlet editingActivity: UserActivity | undefined;\n\t\tif (activities && activities.length > 0) {\n\t\t\teditingActivity = activities.find((activity: UserActivity) => {\n\t\t\t\treturn activity.key === getActivityKeyFromPath(source.getBindingContext()!.getPath());\n\t\t\t});\n\t\t}\n\t\tpopover.destroyContent();\n\t\tpopover.addContent(\n\t\t\tnew Label({\n\t\t\t\ttext: resourceModel.getText(\"C_COLLABORATIONAVATAR_USER_EDIT_FIELD\", [`${editingActivity?.name}`])\n\t\t\t})\n\t\t);\n\t\tpopover.openBy(source);\n\t}\n};\n\nexport default FieldRuntimeHelper;\n"],"mappings":"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","ignoreList":[]}