{"version":3,"file":"Share.js","names":["enumMSTeamsOption","COLLABORATION_MSTEAMS_CARD","COLLABORATION_MSTEAMS_TAB","COLLABORATION_MSTEAMS_CHAT","enumShareOption","SEND_EMAIL","SHARE_JAM","SAVE_AS_TILE","MS_TEAMS_GROUP","SHARE_COLLABORATION_MANAGER","Share","_dec","defineUI5Class","_dec2","property","type","_dec3","implementInterface","_dec4","aggregation","defaultClass","ShareOptions","isDefault","_dec5","defaultValue","OverflowToolbarPriority","High","_dec6","MsTeamsOptions","_dec7","defineReference","_dec8","_dec9","_dec10","_dec11","_dec12","_dec13","_dec14","_dec15","_dec16","_dec17","_dec18","_dec19","_dec20","_dec21","_class","_class2","_BuildingBlock","idOrProps","props","_this","shareAPIId","id","undefined","call","this","_initializerDefineProperty","_descriptor","_descriptor2","_descriptor3","_descriptor4","_descriptor5","_descriptor6","_descriptor7","_descriptor8","_descriptor9","_descriptor10","_descriptor11","_descriptor12","_descriptor13","_descriptor14","_descriptor15","_descriptor16","_descriptor17","_descriptor18","_descriptor19","_descriptor20","_exports","_inheritsLoose","_proto","prototype","onMetadataAvailable","_ownerComponent","content","createContent","getAppComponent","_initializeMenuItems","async","view","appComponent","isTeamsModeActive","getEnvironmentCapabilities","getCapabilities","Collaboration","default","CollaborationHelper","__ui5_require_async","menuButton","current","unbindProperty","setVisible","controller","getController","shellServices","getShellServices","isPluginInfoStable","waitForPluginsLoad","internalButton","getAggregation","attachEventOnce","_blockInternalConfig","_getShareBlockConfig","_addMenuItems","setShareOptionsVisibility","_addSendEmailOption","_addShellBasedMenuItems","_addPrintOptions","_addExportExcelOptions","_addExportCSVOptions","_addExportPDFOptions","_callManifestActionsEvents","shareOptionProp","viewData","getViewData","shareActionProps","share","module","press","substring","lastIndexOf","replace","method","length","FPMHelper","loadModuleAndCallMethod","Log","error","hasOwnProperty","print","menu","addItem","_jsx","MenuItem","ref","printMenuItem","text","getTranslatedText","icon","PRINT_ICON","exportToSpreadsheetMenuItem","EXPORT_TO_SPREADSHEET_ICON","exportToCSVMenuItem","EXPORT_TO_CSV_ICON","exportToPDFMenuItem","EXPORT_TO_PDF_ICON","shareOptions","showSendEmail","sendEmailMenuItem","_triggerEmail","hasUshell","hasUShell","_addShareViaJAMOption","_addMSTeamsOptions","_addCollaborationManagerOption","_addSaveAsTileOption","collaborativeToolsService","getCollaborativeToolsService","collaborationOption","getCollaborationManagerOption","showCollaborationManager","menuItem","shareAsCollaborationManager","_collaborationManagerButtonPress","event","FESRHelper","setSemanticStepname","fesrStepName","err","message","Error","String","collaborationCallBack","clickedMenuItem","getSource","CommonUtils","getTargetView","_adaptShareMetadata","shareInfoModel","getModel","shareInfo","getData","collaborationInfo","appTitle","url","hasJam","isJamActive","shareViaJAMMenuItem","_triggerShareToJam","showMsTeamsOptions","shareCollaborationOptions","getTeamsCollabOptionsViaShare","isShareAsCardEnabled","_getIsShareAsCardEnabled","menuItemSettings","_getMsTeamsMenuItemSettings","subOptions","items","menuItemKey","Array","isArray","key","_addMsTeamsMenuItem","AddBookmarkButton","addBookmarkButton","getEnabled","saveAsTileMenuItem","getText","getIcon","_saveAsTile","children","dependents","destroy","showShareAsCard","msTeamsOptions","enableCard","Boolean","BindingInfo","parse","_getMsTeamsSubOptions","collaborationMenuItemPress","CustomData","value","_getMenuItemReference","customData","attachPress","reduce","menuItems","subOption","subMenuItem","collaborationData","data","teamsHelperService","getCollaborationServices","oTeamsHelperService","isFeatureFlagEnabled","cardDefinition","getCardDefinition","cardId","shellServiceHelper","semanticObject","action","parseShellHash","document","location","hash","reason","info","optionKeys","Object","keys","visibleBindingExps","bindingToolkitExps","option","exp","_getShareOptionVisibilityExpression","_setShareOptionVisibility","shareBlockVisibleExp","or","cmdExecution","_bindUIVisibility","shareAsCardMenuItem","shareViaChatMenuItem","shareAsTabMenuItem","msTeamsGroupMenuItem","optionMenuItemRef","constant","_getMSTeamsShareOptionVisibility","_getCollaborationOptionExpression","resolveBindingString","internalOption","isConstant","and","msTeamsConfigExp","_getShowMsTeamsOptionsExpression","msTeamsOptionsValue","allMSTeamsOptionsExps","bindingToolkitExp","msTeamsOption","msTeamOptionExp","optionExp","internalOptionExp","_getShareAsCardVisibility","shareAsCardOptionRef","expShowMSTeamsOptions","expShowShareAsCard","not","UI","IsEditable","msTeamsOptionRef","expression","menuItemRef","item","compiledExp","compileExpression","startsWith","endsWith","parsedExp","bindProperty","viewShareConfigs","feAppShareConfigs","getManifestEntry","app","_getOptionBlockConfig","teams","asCard","feAppSetting","viewLevelSetting","feAppExp","viewLevelExp","ShareAPI","OverflowToolbarMenuButton","tooltip","Menu","getPageController","getView","addDependent","CommandExecution","command","execute","getMenu","openBy","isInitialized","catch","setLayoutData","OverflowToolbarLayoutData","priority","getOverflowToolbarConfig","canOverflow","onBeforeEnterOverflow","oControl","getContent","resourceModel","getResourceModel","onAfterExitOverflow","BuildingBlock","_applyDecoratedDescriptor","configurable","enumerable","writable","initializer"],"sources":["./Share.tsx"],"sourcesContent":["import Log from \"sap/base/Log\";\nimport type { BindingToolkitExpression, CompiledBindingToolkitExpression, EmbeddedUI5BindingExpression } from \"sap/fe/base/BindingToolkit\";\nimport { and, compileExpression, constant, isConstant, not, or, resolveBindingString } from \"sap/fe/base/BindingToolkit\";\nimport type { PropertiesOf } from \"sap/fe/base/ClassSupport\";\nimport { aggregation, defineReference, defineUI5Class, implementInterface, property } from \"sap/fe/base/ClassSupport\";\nimport type { Ref } from \"sap/fe/base/jsx-runtime/jsx\";\nimport type AppComponent from \"sap/fe/core/AppComponent\";\nimport CommonUtils from \"sap/fe/core/CommonUtils\";\nimport type PageController from \"sap/fe/core/PageController\";\nimport CommandExecution from \"sap/fe/core/controls/CommandExecution\";\nimport { UI } from \"sap/fe/core/helpers/BindingHelper\";\nimport type { IShellServices } from \"sap/fe/core/services/ShellServicesFactory\";\nimport Menu from \"sap/m/Menu\";\nimport type MenuButton from \"sap/m/MenuButton\";\nimport type { $MenuItemSettings } from \"sap/m/MenuItem\";\nimport MenuItem from \"sap/m/MenuItem\";\nimport type { CollaborationOptionKey, CollaborationOptions } from \"sap/suite/ui/commons/collaboration/TeamsHelperService\";\nimport type UI5Event from \"sap/ui/base/Event\";\nimport type ManagedObject from \"sap/ui/base/ManagedObject\";\nimport CustomData from \"sap/ui/core/CustomData\";\nimport type View from \"sap/ui/core/mvc/View\";\nimport type JSONModel from \"sap/ui/model/json/JSONModel\";\nimport FESRHelper from \"sap/ui/performance/trace/FESRHelper\";\n\nimport type TemplateComponent from \"sap/fe/core/TemplateComponent\";\nimport BuildingBlock from \"sap/fe/core/buildingBlocks/BuildingBlock\";\nimport {\n\tEXPORT_TO_CSV_ICON,\n\tEXPORT_TO_PDF_ICON,\n\tEXPORT_TO_SPREADSHEET_ICON,\n\tPRINT_ICON\n} from \"sap/fe/core/converters/controls/Common/Action\";\nimport FPMHelper from \"sap/fe/core/helpers/FPMHelper\";\nimport { getResourceModel } from \"sap/fe/core/helpers/ResourceModelHelper\";\nimport type { ViewData } from \"sap/fe/core/services/TemplatedViewServiceFactory\";\nimport ShareOptions from \"sap/fe/macros/share/ShareOptions\";\nimport OverflowToolbarLayoutData from \"sap/m/OverflowToolbarLayoutData\";\nimport OverflowToolbarMenuButton from \"sap/m/OverflowToolbarMenuButton\";\nimport { OverflowToolbarPriority } from \"sap/m/library\";\nimport BindingInfo from \"sap/ui/base/BindingInfo\";\nimport type Control from \"sap/ui/core/Control\";\nimport type { $ControlSettings } from \"sap/ui/core/Control\";\nimport MsTeamsOptions from \"./share/MsTeamsOptions\";\nimport ShareAPI from \"./share/ShareAPI\";\n\n// MS Teams options are not public via Share building block.\n// So, 'showMsTeamsOptions' is internal and shall be only picked from template manifest.\ntype InternalShareOptions = PropertiesOf<ShareOptions>;\n\ntype ShareOptionKey =\n\t| CollaborationOptionKey\n\t| \"SEND_EMAIL\"\n\t| \"SHARE_JAM\"\n\t| \"SAVE_AS_TILE\"\n\t| \"MS_TEAMS_GROUP\"\n\t| \"SHARE_COLLABORATION_MANAGER\";\n\nconst enumMSTeamsOption: {\n\t[key in CollaborationOptionKey]: CollaborationOptionKey;\n} = {\n\tCOLLABORATION_MSTEAMS_CARD: \"COLLABORATION_MSTEAMS_CARD\",\n\tCOLLABORATION_MSTEAMS_TAB: \"COLLABORATION_MSTEAMS_TAB\",\n\tCOLLABORATION_MSTEAMS_CHAT: \"COLLABORATION_MSTEAMS_CHAT\"\n};\n\nconst enumShareOption: {\n\t[key in ShareOptionKey]: ShareOptionKey;\n} = {\n\t...enumMSTeamsOption,\n\t...{\n\t\tSEND_EMAIL: \"SEND_EMAIL\",\n\t\tSHARE_JAM: \"SHARE_JAM\",\n\t\tSAVE_AS_TILE: \"SAVE_AS_TILE\",\n\t\tMS_TEAMS_GROUP: \"MS_TEAMS_GROUP\",\n\t\tSHARE_COLLABORATION_MANAGER: \"SHARE_COLLABORATION_MANAGER\"\n\t}\n};\n\ntype ConfigOptions = InternalShareOptions & PropertiesOf<MsTeamsOptions>;\n\n/**\n * Building block used to create the ‘Share’ functionality.\n * <br>\n * Please note that the 'Share in SAP Jam' option is only available on platforms that are integrated with SAP Jam.\n * <br>\n * If you are consuming this macro in an environment where the SAP Fiori launchpad is not available, then the 'Save as Tile' option is not visible.\n *\n *\n * Usage example:\n * <pre>\n * &lt;macros:Share\n * id=\"someID\"\n * visible=\"true\"\n * /&gt;\n * </pre>\n * {@link demo:sap/fe/core/fpmExplorer/index.html#/buildingBlocks/features/shareDefault Overview of Building Blocks}\n * @hideconstructor\n * @public\n * @since 1.93.0\n */\n@defineUI5Class(\"sap.fe.macros.Share\")\nexport default class Share extends BuildingBlock<ShareAPI> {\n\t@property({ type: \"string\" })\n\tpublic shareAPIId?: string;\n\n\t@implementInterface(\"sap.m.IOverflowToolbarContent\")\n\t__implements__sap_m_IOverflowToolbarContent = true;\n\n\t/**\n\t * Supported Share options {@link sap.fe.macros.share.ShareOptions}.\n\t * @public\n\t */\n\t@aggregation({\n\t\ttype: \"sap.fe.macros.share.ShareOptions\",\n\t\tdefaultClass: ShareOptions,\n\t\tisDefault: true\n\t})\n\tpublic shareOptions?: ShareOptions;\n\n\t@property({\n\t\ttype: \"string\",\n\t\tdefaultValue: OverflowToolbarPriority.High\n\t})\n\tpriority?: string;\n\n\t/**\n\t * Supported Microsoft Teams options.\n\t */\n\t@aggregation({\n\t\ttype: \"sap.fe.macros.share.MsTeamsOptions\",\n\t\tdefaultClass: MsTeamsOptions\n\t})\n\tpublic msTeamsOptions?: MsTeamsOptions;\n\n\t@defineReference()\n\tmenuButton!: Ref<MenuButton>;\n\n\t@defineReference()\n\tcmdExecution!: Ref<CommandExecution>;\n\n\t@defineReference()\n\tmenu!: Ref<Menu>;\n\n\t@defineReference()\n\tsaveAsTileMenuItem!: Ref<MenuItem>;\n\n\t@defineReference()\n\tshareAsCollaborationManager!: Ref<MenuItem>;\n\n\t@defineReference()\n\tshareViaJAMMenuItem!: Ref<MenuItem>;\n\n\t@defineReference()\n\tsendEmailMenuItem!: Ref<MenuItem>;\n\n\t@defineReference()\n\tshareAsCardMenuItem!: Ref<MenuItem>;\n\n\t@defineReference()\n\tshareViaChatMenuItem!: Ref<MenuItem>;\n\n\t@defineReference()\n\tshareAsTabMenuItem!: Ref<MenuItem>;\n\n\t@defineReference()\n\tmsTeamsGroupMenuItem!: Ref<MenuItem>;\n\n\t@defineReference()\n\tprintMenuItem!: Ref<MenuItem>;\n\n\t@defineReference()\n\texportToSpreadsheetMenuItem!: Ref<MenuItem>;\n\n\t@defineReference()\n\texportToPDFMenuItem!: Ref<MenuItem>;\n\n\t@defineReference()\n\texportToCSVMenuItem!: Ref<MenuItem>;\n\n\tpublic isInitialized?: Promise<void>;\n\n\tprivate _blockInternalConfig!: ConfigOptions;\n\n\tconstructor(idOrProps: string | (PropertiesOf<Share> & $ControlSettings), props?: PropertiesOf<Share> & $ControlSettings) {\n\t\tlet shareAPIId: string | undefined;\n\t\tif (typeof idOrProps !== \"string\") {\n\t\t\tprops = idOrProps;\n\t\t\tshareAPIId = props.id;\n\t\t} else {\n\t\t\tshareAPIId = idOrProps;\n\t\t}\n\t\tprops ??= {};\n\t\tprops.shareAPIId = shareAPIId;\n\t\tprops.id = undefined;\n\t\tsuper(undefined, props);\n\t}\n\n\tonMetadataAvailable(_ownerComponent: TemplateComponent): void {\n\t\tsuper.onMetadataAvailable(_ownerComponent);\n\t\tthis.content = this.createContent(_ownerComponent.getAppComponent());\n\t}\n\n\t/**\n\t * Retrieves the share option from the shell configuration asynchronously and prepare the content of the menu button.\n\t * Options order are:\n\t * - Send as Email\n\t * - Share as Jam (if available)\n\t * - Teams options (if available)\n\t * - Save as tile.\n\t * @param view The view this building block is used in\n\t * @param appComponent The AppComponent instance\n\t */\n\tasync _initializeMenuItems(view: View, appComponent: AppComponent): Promise<void> {\n\t\tlet isTeamsModeActive = false;\n\t\tif (appComponent.getEnvironmentCapabilities().getCapabilities().Collaboration) {\n\t\t\tconst { default: CollaborationHelper } = await import(\"sap/suite/ui/commons/collaboration/CollaborationHelper\");\n\t\t\tisTeamsModeActive = await CollaborationHelper.isTeamsModeActive();\n\t\t}\n\n\t\tif (isTeamsModeActive) {\n\t\t\t//need to clear the visible property bindings otherwise when the binding value changes then it will set back the visible to the resolved value\n\t\t\tthis.menuButton.current?.unbindProperty(\"visible\", true);\n\t\t\tthis.menuButton.current?.setVisible(false);\n\t\t\treturn;\n\t\t}\n\t\tconst controller = view.getController() as PageController;\n\t\tconst shellServices = appComponent.getShellServices();\n\t\tconst isPluginInfoStable = await shellServices.waitForPluginsLoad();\n\t\tif (!isPluginInfoStable) {\n\t\t\t// In case the plugin info is not yet available we need to do this computation again on the next button click\n\t\t\tconst internalButton = this.menuButton.current?.getAggregation(\"_control\") as ManagedObject;\n\t\t\tinternalButton?.attachEventOnce(\"press\", {}, () => this._initializeMenuItems, this);\n\t\t}\n\n\t\tthis._blockInternalConfig = this._getShareBlockConfig(view);\n\n\t\tawait this._addMenuItems(controller, shellServices, view);\n\t\tthis.setShareOptionsVisibility();\n\t}\n\n\t/**\n\t * Add share options as menu items to the share button.\n\t * @param controller Page controller\n\t * @param shellServices Shell Services\n\t * @param view The view this building block is used in\n\t */\n\tasync _addMenuItems(controller: PageController, shellServices: IShellServices, view: View): Promise<void> {\n\t\tthis._addSendEmailOption(controller);\n\t\tawait this._addShellBasedMenuItems(controller, shellServices);\n\t\tthis._addPrintOptions(controller, view);\n\t\tthis._addExportExcelOptions(controller, view);\n\t\tthis._addExportCSVOptions(controller, view);\n\t\tthis._addExportPDFOptions(controller, view);\n\t}\n\n\t/**\n\t * Call the functions within the custom handlers.\n\t * @param controller Page controller\n\t * @param view The view this building block is used in\n\t * @param shareOptionProp The key of the action you want to call\n\t */\n\t_callManifestActionsEvents(\n\t\tcontroller: PageController,\n\t\tview: View,\n\t\tshareOptionProp: \"print\" | \"exportToCSV\" | \"exportToSpreadsheet\" | \"exportToPDF\"\n\t): void {\n\t\tconst viewData = view.getViewData() as ViewData;\n\t\tconst shareActionProps = viewData?.share?.[shareOptionProp];\n\t\tconst module = shareActionProps?.press?.substring(0, shareActionProps?.press?.lastIndexOf(\".\")).replace(/\\./gi, \"/\");\n\t\tconst method = shareActionProps?.press?.substring(shareActionProps?.press?.lastIndexOf(\".\") + 1, shareActionProps?.press?.length);\n\n\t\tif (module && method) {\n\t\t\tFPMHelper.loadModuleAndCallMethod(module, method, view, controller);\n\t\t} else {\n\t\t\tLog.error(\"Failed to call event handler, Module and/or Method is not set properly\");\n\t\t}\n\t}\n\n\t/**\n\t * Add print option to menu button.\n\t * @param controller Page controller\n\t * @param view The view this building block is used in\n\t */\n\t_addPrintOptions(controller: PageController, view: View): void {\n\t\tconst viewData = view.getViewData() as ViewData;\n\t\tif (viewData?.share?.hasOwnProperty(\"print\") === true && viewData?.share?.print?.hasOwnProperty(\"press\") === true) {\n\t\t\tthis?.menu?.current?.addItem(\n\t\t\t\t<MenuItem\n\t\t\t\t\tref={this.printMenuItem}\n\t\t\t\t\ttext={this.getTranslatedText(\"T_SHARE_CONTROL_PRINT\")}\n\t\t\t\t\ticon={PRINT_ICON}\n\t\t\t\t\tpress={(): void => {\n\t\t\t\t\t\tthis._callManifestActionsEvents(controller, view, \"print\");\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * Add Export as Excel option to menu button.\n\t * @param controller Page controller\n\t * @param view The view this building block is used in\n\t */\n\t_addExportExcelOptions(controller: PageController, view: View): void {\n\t\tconst viewData = view.getViewData() as ViewData;\n\t\tif (viewData?.share?.hasOwnProperty(\"exportToSpreadsheet\") === true && viewData?.share?.print?.hasOwnProperty(\"press\") === true) {\n\t\t\tthis?.menu?.current?.addItem(\n\t\t\t\t<MenuItem\n\t\t\t\t\tref={this.exportToSpreadsheetMenuItem}\n\t\t\t\t\ttext={this.getTranslatedText(\"T_SHARE_CONTROL_EXPORT_AS_EXCEL\")}\n\t\t\t\t\ticon={EXPORT_TO_SPREADSHEET_ICON}\n\t\t\t\t\tpress={(): void => {\n\t\t\t\t\t\tthis._callManifestActionsEvents(controller, view, \"exportToSpreadsheet\");\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * Add Export as CSV option to menu button.\n\t * @param controller Page controller\n\t * @param view The view this building block is used in\n\t */\n\t_addExportCSVOptions(controller: PageController, view: View): void {\n\t\tconst viewData = view.getViewData() as ViewData;\n\t\tif (viewData?.share?.hasOwnProperty(\"exportToCSV\") === true && viewData?.share?.print?.hasOwnProperty(\"press\") === true) {\n\t\t\tthis?.menu?.current?.addItem(\n\t\t\t\t<MenuItem\n\t\t\t\t\tref={this.exportToCSVMenuItem}\n\t\t\t\t\ttext={this.getTranslatedText(\"T_SHARE_CONTROL_EXPORT_AS_CSV\")}\n\t\t\t\t\ticon={EXPORT_TO_CSV_ICON}\n\t\t\t\t\tpress={(): void => {\n\t\t\t\t\t\tthis._callManifestActionsEvents(controller, view, \"exportToCSV\");\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * Add Export as PDF option to menu button.\n\t * @param controller Page controller\n\t * @param view The view this building block is used in\n\t */\n\t_addExportPDFOptions(controller: PageController, view: View): void {\n\t\tconst viewData = view.getViewData() as ViewData;\n\t\tif (viewData?.share?.hasOwnProperty(\"exportToPDF\") === true && viewData?.share?.print?.hasOwnProperty(\"press\") === true) {\n\t\t\tthis?.menu?.current?.addItem(\n\t\t\t\t<MenuItem\n\t\t\t\t\tref={this.exportToPDFMenuItem}\n\t\t\t\t\ttext={this.getTranslatedText(\"T_SHARE_CONTROL_EXPORT_AS_PDF\")}\n\t\t\t\t\ticon={EXPORT_TO_PDF_ICON}\n\t\t\t\t\tpress={(): void => {\n\t\t\t\t\t\tthis._callManifestActionsEvents(controller, view, \"exportToPDF\");\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * Add send email option to menu button.\n\t * @param controller Page controller\n\t */\n\t_addSendEmailOption(controller: PageController): void {\n\t\tif (this.shareOptions?.showSendEmail ?? true) {\n\t\t\tthis?.menu?.current?.addItem(\n\t\t\t\t<MenuItem\n\t\t\t\t\tref={this.sendEmailMenuItem}\n\t\t\t\t\ttext={this.getTranslatedText(\"T_SEMANTIC_CONTROL_SEND_EMAIL\")}\n\t\t\t\t\ticon={\"sap-icon://email\"}\n\t\t\t\t\tpress={async (): Promise<void> => controller.share._triggerEmail()}\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * Add UShell based share options.\n\t * @param controller Page controller\n\t * @param shellServices Shell Services\n\t */\n\tasync _addShellBasedMenuItems(controller: PageController, shellServices: IShellServices): Promise<void> {\n\t\tconst hasUshell = shellServices.hasUShell();\n\t\tif (hasUshell) {\n\t\t\t// share via JAM\n\t\t\tthis._addShareViaJAMOption(controller, shellServices);\n\n\t\t\t// Prepare teams menu items\n\t\t\tawait this._addMSTeamsOptions(controller);\n\n\t\t\t// Prepare Collaboration Manager Options\n\t\t\tawait this._addCollaborationManagerOption(controller);\n\n\t\t\t// Save as Tile\n\t\t\tawait this._addSaveAsTileOption(controller);\n\t\t}\n\t}\n\n\t/**\n\t * Add CM option.\n\t * @param controller The controller instance\n\t * @returns MenuItems\n\t */\n\tasync _addCollaborationManagerOption(controller: PageController): Promise<void> {\n\t\ttry {\n\t\t\tconst collaborativeToolsService = controller.getAppComponent().getCollaborativeToolsService();\n\t\t\tconst collaborationOption = await collaborativeToolsService.getCollaborationManagerOption();\n\t\t\tif (collaborationOption && (this.shareOptions?.showCollaborationManager ?? false)) {\n\t\t\t\tconst menuItem = (\n\t\t\t\t\t<MenuItem\n\t\t\t\t\t\tref={this.shareAsCollaborationManager}\n\t\t\t\t\t\ttext={collaborationOption.text}\n\t\t\t\t\t\ticon={collaborationOption.icon}\n\t\t\t\t\t\tpress={async (event: UI5Event<{}, MenuItem>): Promise<void> =>\n\t\t\t\t\t\t\tthis._collaborationManagerButtonPress(collaborationOption.press, event)\n\t\t\t\t\t\t}\n\t\t\t\t\t></MenuItem>\n\t\t\t\t);\n\t\t\t\tFESRHelper.setSemanticStepname(menuItem, \"press\", collaborationOption.fesrStepName);\n\t\t\t\tthis?.menu?.current?.addItem(menuItem);\n\t\t\t}\n\t\t} catch (err: unknown) {\n\t\t\tconst message = err instanceof Error ? err.message : String(err);\n\t\t\tLog.error(`FE : Adding Collaboration Manager Option : ${message}`);\n\t\t}\n\t}\n\n\tasync _collaborationManagerButtonPress(collaborationCallBack: Function, event: UI5Event<{}, MenuItem>): Promise<void> {\n\t\tconst clickedMenuItem = event.getSource();\n\n\t\tconst view: View = CommonUtils.getTargetView(clickedMenuItem);\n\t\tconst controller: PageController = view.getController() as PageController;\n\t\tawait controller.share._adaptShareMetadata();\n\t\tconst shareInfoModel = view.getModel(\"shareInfo\") as JSONModel | undefined;\n\n\t\tif (shareInfoModel) {\n\t\t\tconst shareInfo = shareInfoModel.getData();\n\t\t\tconst { collaborationInfo } = shareInfo;\n\t\t\tcollaborationCallBack(collaborationInfo.appTitle, collaborationInfo.url);\n\t\t}\n\t}\n\n\t/**\n\t * Add share via JAM option.\n\t * @param controller Page controller\n\t * @param shellServices Shell Services\n\t */\n\t_addShareViaJAMOption(controller: PageController, shellServices: IShellServices): void {\n\t\tconst hasJam = !!shellServices.isJamActive?.();\n\t\tif (hasJam) {\n\t\t\tthis?.menu?.current?.addItem(\n\t\t\t\t<MenuItem\n\t\t\t\t\tref={this.shareViaJAMMenuItem}\n\t\t\t\t\ttext={this.getTranslatedText(\"T_COMMON_SAPFE_SHARE_JAM\")}\n\t\t\t\t\ticon={\"sap-icon://share-2\"}\n\t\t\t\t\tpress={async (): Promise<void> => controller.share._triggerShareToJam()}\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * Add options to share via Microsoft Teams.\n\t * @param controller PageController\n\t */\n\tasync _addMSTeamsOptions(controller: PageController): Promise<void> {\n\t\ttry {\n\t\t\tif (this._blockInternalConfig?.showMsTeamsOptions === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst collaborativeToolsService = controller.getAppComponent().getCollaborativeToolsService();\n\t\t\tconst shareCollaborationOptions = await collaborativeToolsService.getTeamsCollabOptionsViaShare({\n\t\t\t\tisShareAsCardEnabled: this._getIsShareAsCardEnabled()\n\t\t\t});\n\n\t\t\tif (!shareCollaborationOptions) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (const collaborationOption of shareCollaborationOptions) {\n\t\t\t\tconst menuItemSettings: $MenuItemSettings = this._getMsTeamsMenuItemSettings(collaborationOption);\n\t\t\t\tconst subOptions = menuItemSettings.items;\n\t\t\t\t// Multiple sub options are grouped into single teams group menu item.\n\t\t\t\tconst menuItemKey =\n\t\t\t\t\tArray.isArray(subOptions) && subOptions.length ? enumShareOption.MS_TEAMS_GROUP : collaborationOption.key;\n\n\t\t\t\tthis._addMsTeamsMenuItem(menuItemSettings, menuItemKey, collaborationOption.fesrStepName);\n\t\t\t}\n\t\t} catch (err: unknown) {\n\t\t\tconst message = err instanceof Error ? err.message : String(err);\n\t\t\tLog.error(`FE : Buildingblock : Share : adding MS teams options : ${message}`);\n\t\t}\n\t}\n\n\t/**\n\t * Add save as tile option.\n\t * @param controller Page controller\n\t */\n\tasync _addSaveAsTileOption(controller: PageController): Promise<void> {\n\t\ttry {\n\t\t\t// set save as tile\n\t\t\t// for now we need to create addBookmarkButton to use the save as tile feature.\n\t\t\t// In the future save as tile should be available as an API or a MenuItem so that it can be added to the Menu button.\n\t\t\t// This needs to be discussed with AddBookmarkButton team.\n\t\t\t// Included in a hasUshell branch\n\t\t\tconst { default: AddBookmarkButton } = await import(\"sap/ushell/ui/footerbar/AddBookmarkButton\");\n\t\t\tconst addBookmarkButton = new AddBookmarkButton();\n\t\t\tif (addBookmarkButton.getEnabled()) {\n\t\t\t\tthis?.menu?.current?.addItem(\n\t\t\t\t\t<MenuItem\n\t\t\t\t\t\tref={this.saveAsTileMenuItem}\n\t\t\t\t\t\ttext={addBookmarkButton.getText()}\n\t\t\t\t\t\ticon={addBookmarkButton.getIcon()}\n\t\t\t\t\t\tpress={async (): Promise<void> => controller.share._saveAsTile(this.saveAsTileMenuItem.current!)}\n\t\t\t\t\t>\n\t\t\t\t\t\t{{ dependents: [addBookmarkButton] }}\n\t\t\t\t\t</MenuItem>\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\taddBookmarkButton.destroy();\n\t\t\t}\n\t\t} catch (err: unknown) {\n\t\t\tconst message = err instanceof Error ? err.message : String(err);\n\t\t\tLog.error(`FE : Buildingblock : Share : adding Save as tile option : ${message}`);\n\t\t}\n\t}\n\n\t/**\n\t * Get isShareAsCardEnabled to fetch supported collaboration options.\n\t * @returns Boolean.\n\t */\n\t_getIsShareAsCardEnabled(): boolean {\n\t\tconst showShareAsCard = this.msTeamsOptions?.enableCard ?? false;\n\n\t\tif (typeof showShareAsCard === \"boolean\") {\n\t\t\treturn showShareAsCard;\n\t\t} else if (typeof showShareAsCard === \"string\") {\n\t\t\t// \"true\" or a binding expression\n\t\t\ttry {\n\t\t\t\treturn showShareAsCard === \"true\" || Boolean(BindingInfo.parse(showShareAsCard));\n\t\t\t} catch (err) {\n\t\t\t\tLog.error(err as string);\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * Get Menu Item settings for main MS teams option.\n\t * @param collaborationOption Root Collaboration Option\n\t * @returns MenuItemSettings\n\t */\n\t_getMsTeamsMenuItemSettings(collaborationOption: CollaborationOptions): $MenuItemSettings {\n\t\tconst items = this._getMsTeamsSubOptions(collaborationOption?.subOptions);\n\t\tconst menuItemSettings: $MenuItemSettings = {\n\t\t\ttext: collaborationOption.text,\n\t\t\ticon: collaborationOption.icon,\n\t\t\titems\n\t\t};\n\n\t\tif (items.length === 0) {\n\t\t\t// if there are no sub option then the main option should be clickable\n\t\t\t// so add a press handler.\n\t\t\tmenuItemSettings.press = async (event: UI5Event<{}, MenuItem>): Promise<void> => this.collaborationMenuItemPress(event);\n\t\t\tmenuItemSettings[\"customData\"] = new CustomData({\n\t\t\t\tkey: \"collaborationData\",\n\t\t\t\tvalue: collaborationOption\n\t\t\t});\n\t\t}\n\t\treturn menuItemSettings;\n\t}\n\n\t/**\n\t * Add main MS Teams Menu Item to the Share building block menu.\n\t * @param menuItemSettings Menu Item settings\n\t * @param menuItemKey MS teams option key\n\t * @param fesrStepName Step name\n\t */\n\t_addMsTeamsMenuItem(menuItemSettings: $MenuItemSettings, menuItemKey?: ShareOptionKey, fesrStepName?: string): void {\n\t\tconst menuItem: MenuItem = (\n\t\t\t<MenuItem\n\t\t\t\tref={this._getMenuItemReference(menuItemKey)}\n\t\t\t\ttext={menuItemSettings.text}\n\t\t\t\ticon={menuItemSettings.icon}\n\t\t\t\tcustomData={menuItemSettings.customData}\n\t\t\t\titems={menuItemSettings.items}\n\t\t\t></MenuItem>\n\t\t);\n\t\tif (menuItemSettings.press) {\n\t\t\t//\n\t\t\tmenuItem.attachPress(menuItemSettings.press);\n\t\t\tif (fesrStepName) {\n\t\t\t\tFESRHelper.setSemanticStepname(menuItem, \"press\", fesrStepName);\n\t\t\t}\n\t\t}\n\t\tthis?.menu?.current?.addItem(menuItem);\n\t}\n\n\t/**\n\t * Get Menu Items corresponding to MS teams sub options.\n\t * @param subOptions Array of collaboration options\n\t * @returns MenuItems\n\t */\n\t_getMsTeamsSubOptions(subOptions?: CollaborationOptions[]): MenuItem[] {\n\t\tif (!Array.isArray(subOptions)) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn subOptions.reduce((menuItems: MenuItem[], subOption: CollaborationOptions) => {\n\t\t\tconst subMenuItem = (\n\t\t\t\t<MenuItem\n\t\t\t\t\tref={this._getMenuItemReference(subOption.key)}\n\t\t\t\t\ttext={subOption.text}\n\t\t\t\t\ticon={subOption.icon}\n\t\t\t\t\tpress={async (event: UI5Event<{}, MenuItem>): Promise<void> => this.collaborationMenuItemPress(event)}\n\t\t\t\t\tcustomData={\n\t\t\t\t\t\tnew CustomData({\n\t\t\t\t\t\t\tkey: \"collaborationData\",\n\t\t\t\t\t\t\tvalue: subOption\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t></MenuItem>\n\t\t\t);\n\t\t\tif (subOption.fesrStepName) {\n\t\t\t\tFESRHelper.setSemanticStepname(subMenuItem, \"press\", subOption.fesrStepName);\n\t\t\t}\n\t\t\treturn [...menuItems, subMenuItem];\n\t\t}, []);\n\t}\n\n\t/**\n\t * Press handler for collaboration menu items.\n\t *`\n\t * @param event Event object\n\t */\n\tasync collaborationMenuItemPress(event: UI5Event<{}, MenuItem>): Promise<void> {\n\t\tconst clickedMenuItem = event.getSource();\n\n\t\tconst view: View = CommonUtils.getTargetView(clickedMenuItem);\n\t\tconst controller: PageController = view.getController() as PageController;\n\t\tawait controller.share._adaptShareMetadata();\n\t\tconst shareInfoModel = view.getModel(\"shareInfo\") as JSONModel | undefined;\n\n\t\tif (shareInfoModel) {\n\t\t\tconst shareInfo = shareInfoModel.getData();\n\t\t\tconst { collaborationInfo } = shareInfo;\n\n\t\t\tconst collaborationData = clickedMenuItem.data(\"collaborationData\");\n\t\t\tconst collaborativeToolsService = controller.getAppComponent().getCollaborativeToolsService();\n\t\t\tconst teamsHelperService = (await collaborativeToolsService.getCollaborationServices()).oTeamsHelperService;\n\t\t\tif (collaborationData[\"key\"] === enumMSTeamsOption.COLLABORATION_MSTEAMS_CARD) {\n\t\t\t\tconst isShareAsCardEnabled = teamsHelperService.isFeatureFlagEnabled();\n\t\t\t\tconst cardDefinition = isShareAsCardEnabled ? await controller.share.getCardDefinition() : undefined;\n\t\t\t\tlet cardId: string | undefined;\n\t\t\t\tif (cardDefinition) {\n\t\t\t\t\tconst shellServiceHelper = controller.getAppComponent().getShellServices();\n\t\t\t\t\tconst { semanticObject, action } = shellServiceHelper.parseShellHash(document.location.hash);\n\t\t\t\t\tcardId = `${semanticObject}_${action}`;\n\t\t\t\t} else {\n\t\t\t\t\tconst reason = !isShareAsCardEnabled\n\t\t\t\t\t\t? \"Feature flag disabled in collaboration teams helper\"\n\t\t\t\t\t\t: \"Card definition was not created\";\n\t\t\t\t\tLog.info(`FE V4 : Share block : share as Card : ${reason}`);\n\t\t\t\t}\n\t\t\t\tcollaborationInfo[\"cardManifest\"] = cardDefinition;\n\t\t\t\tcollaborationInfo[\"cardId\"] = cardId;\n\t\t\t}\n\t\t\tteamsHelperService.share(collaborationData, collaborationInfo);\n\t\t}\n\t}\n\n\t/**\n\t * Set the visibility of individual UI elements of the Share building block. Like, MenuItems, MenuButton and Command execution.\n\t */\n\tsetShareOptionsVisibility(): void {\n\t\tconst optionKeys = Object.keys(enumShareOption) as ShareOptionKey[];\n\t\tconst visibleBindingExps = optionKeys.reduce((bindingToolkitExps: BindingToolkitExpression<boolean>[], option: ShareOptionKey) => {\n\t\t\tconst exp = this._getShareOptionVisibilityExpression(option);\n\t\t\tthis._setShareOptionVisibility(option, exp);\n\t\t\treturn [...bindingToolkitExps, exp];\n\t\t}, []);\n\t\tconst shareBlockVisibleExp = or(...visibleBindingExps);\n\t\tif (this.menuButton.current && this.cmdExecution.current) {\n\t\t\tthis._bindUIVisibility(this.menuButton.current, shareBlockVisibleExp);\n\t\t\tthis._bindUIVisibility(this.cmdExecution.current, shareBlockVisibleExp);\n\t\t}\n\t}\n\n\t/**\n\t * Get Menu Item reference of the corresponding Share option.\n\t *`\n\t * @param option Share option key\n\t * @returns Reference to the Menu Item\n\t */\n\t_getMenuItemReference(option?: ShareOptionKey): Ref<MenuItem> | undefined {\n\t\tlet ref: Ref<MenuItem> | undefined;\n\t\tswitch (option) {\n\t\t\tcase enumShareOption.COLLABORATION_MSTEAMS_CARD:\n\t\t\t\tref = this.shareAsCardMenuItem;\n\t\t\t\tbreak;\n\t\t\tcase enumShareOption.COLLABORATION_MSTEAMS_CHAT:\n\t\t\t\tref = this.shareViaChatMenuItem;\n\t\t\t\tbreak;\n\t\t\tcase enumShareOption.COLLABORATION_MSTEAMS_TAB:\n\t\t\t\tref = this.shareAsTabMenuItem;\n\t\t\t\tbreak;\n\t\t\tcase enumShareOption.SEND_EMAIL:\n\t\t\t\tref = this.sendEmailMenuItem;\n\t\t\t\tbreak;\n\t\t\tcase enumShareOption.SHARE_JAM:\n\t\t\t\tref = this.shareViaJAMMenuItem;\n\t\t\t\tbreak;\n\t\t\tcase enumShareOption.SAVE_AS_TILE:\n\t\t\t\tref = this.saveAsTileMenuItem;\n\t\t\t\tbreak;\n\t\t\tcase enumShareOption.MS_TEAMS_GROUP:\n\t\t\t\tref = this.msTeamsGroupMenuItem;\n\t\t\t\tbreak;\n\t\t\tcase enumShareOption.SHARE_COLLABORATION_MANAGER:\n\t\t\t\tref = this.shareAsCollaborationManager;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn ref;\n\t}\n\n\t/**\n\t * Get the visibility expression of share option based on the building block configuration.\n\t * @param option Share option name of the visible expression that needs to be fetched.\n\t * @returns Binding toolkit expression.\n\t */\n\t_getShareOptionVisibilityExpression(option?: ShareOptionKey): BindingToolkitExpression<boolean> {\n\t\tconst optionMenuItemRef = this._getMenuItemReference(option);\n\t\tif (!optionMenuItemRef?.current) {\n\t\t\treturn constant(false);\n\t\t}\n\n\t\tlet exp: BindingToolkitExpression<boolean>;\n\t\tswitch (option) {\n\t\t\tcase enumShareOption.COLLABORATION_MSTEAMS_CARD:\n\t\t\tcase enumShareOption.COLLABORATION_MSTEAMS_CHAT:\n\t\t\tcase enumShareOption.COLLABORATION_MSTEAMS_TAB:\n\t\t\t\texp = this._getMSTeamsShareOptionVisibility(option);\n\t\t\t\tbreak;\n\t\t\tcase enumShareOption.SHARE_COLLABORATION_MANAGER:\n\t\t\t\texp = this._getCollaborationOptionExpression();\n\t\t\t\tbreak;\n\t\t\tcase enumShareOption.SEND_EMAIL: {\n\t\t\t\tconst showSendEmail = resolveBindingString<boolean>(this.shareOptions?.showSendEmail ?? true, \"boolean\");\n\t\t\t\tconst internalOption = resolveBindingString(\n\t\t\t\t\tthis._blockInternalConfig.showSendEmail ?? true,\n\t\t\t\t\t\"boolean\"\n\t\t\t\t) as unknown as BindingToolkitExpression<boolean>;\n\t\t\t\tif (isConstant(internalOption) && internalOption.value === false) {\n\t\t\t\t\texp = constant(false);\n\t\t\t\t} else if (isConstant(internalOption) && internalOption.value === true) {\n\t\t\t\t\texp = (this.shareOptions?.showSendEmail ?? true) as unknown as EmbeddedUI5BindingExpression<boolean>;\n\t\t\t\t} else {\n\t\t\t\t\texp = and(showSendEmail, internalOption) as unknown as EmbeddedUI5BindingExpression<boolean>;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase enumShareOption.SHARE_JAM:\n\t\t\tcase enumShareOption.SAVE_AS_TILE: {\n\t\t\t\t// No overrides for Share via Jam and Save as tile yet.\n\t\t\t\texp = constant(true);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase enumShareOption.MS_TEAMS_GROUP: {\n\t\t\t\tconst msTeamsConfigExp = this._getShowMsTeamsOptionsExpression();\n\t\t\t\tconst msTeamsOptionsValue = Object.keys(enumMSTeamsOption) as ShareOptionKey[];\n\t\t\t\tconst allMSTeamsOptionsExps = msTeamsOptionsValue.reduce(\n\t\t\t\t\t(bindingToolkitExp: BindingToolkitExpression<boolean>[], msTeamsOption: ShareOptionKey) => {\n\t\t\t\t\t\tconst msTeamOptionExp = this._getMSTeamsShareOptionVisibility(msTeamsOption);\n\t\t\t\t\t\treturn [...bindingToolkitExp, msTeamOptionExp];\n\t\t\t\t\t},\n\t\t\t\t\t[] as BindingToolkitExpression<boolean>[]\n\t\t\t\t);\n\t\t\t\texp = and(msTeamsConfigExp, or(...allMSTeamsOptionsExps));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault:\n\t\t\t\texp = constant(false);\n\t\t}\n\n\t\treturn exp;\n\t}\n\n\t_getCollaborationOptionExpression(): BindingToolkitExpression<boolean> {\n\t\tconst showCollaborationManager = this.shareOptions?.showCollaborationManager ?? false;\n\t\tconst optionExp = resolveBindingString<boolean>(showCollaborationManager, \"boolean\");\n\t\tconst internalOption = this._blockInternalConfig.showCollaborationManager ?? true;\n\t\tconst internalOptionExp = resolveBindingString<boolean>(internalOption, \"boolean\");\n\t\treturn and(optionExp, internalOptionExp);\n\t}\n\n\t/**\n\t * Get expression for showMsTeamsOptions share option based on the building block configuration.\n\t * @returns Binding toolkit expression.\n\t */\n\t_getShowMsTeamsOptionsExpression(): BindingToolkitExpression<boolean> {\n\t\tconst internalOption = this._blockInternalConfig.showMsTeamsOptions ?? true;\n\t\treturn resolveBindingString<boolean>(internalOption, \"boolean\");\n\t}\n\n\t/**\n\t * Get binding toolkit expression for share as card visibility.\n\t * @returns Binding toolkit expression.\n\t */\n\t_getShareAsCardVisibility(): BindingToolkitExpression<boolean> {\n\t\tlet exp: BindingToolkitExpression<boolean>;\n\t\tconst shareAsCardOptionRef = this._getMenuItemReference(enumShareOption.COLLABORATION_MSTEAMS_CARD);\n\t\tif (shareAsCardOptionRef?.current) {\n\t\t\tconst expShowMSTeamsOptions = this._getShowMsTeamsOptionsExpression();\n\t\t\tconst showShareAsCard = this.msTeamsOptions?.enableCard ?? true;\n\t\t\tconst optionExp = resolveBindingString<boolean>(showShareAsCard, \"boolean\");\n\t\t\tconst internalOption = this._blockInternalConfig.enableCard ?? true;\n\t\t\tconst internalOptionExp = resolveBindingString<boolean>(internalOption, \"boolean\");\n\t\t\tconst expShowShareAsCard = and(optionExp, internalOptionExp);\n\t\t\texp = and(not(UI.IsEditable), expShowMSTeamsOptions, expShowShareAsCard);\n\t\t} else {\n\t\t\texp = constant(false);\n\t\t}\n\t\treturn exp;\n\t}\n\n\t/**\n\t * Get binding toolkit expression for share option's visibility.\n\t * @param option Share option key\n\t * @returns Binding toolkit expression.\n\t */\n\t_getMSTeamsShareOptionVisibility(option: ShareOptionKey): BindingToolkitExpression<boolean> {\n\t\tif (option === enumShareOption.COLLABORATION_MSTEAMS_CARD) {\n\t\t\treturn this._getShareAsCardVisibility();\n\t\t}\n\t\t// No overrides for Share as Tab and Chat yet.\n\n\t\tconst msTeamsOptionRef = this._getMenuItemReference(option);\n\t\treturn msTeamsOptionRef?.current ? this._getShowMsTeamsOptionsExpression() : constant(false);\n\t}\n\n\t/**\n\t * Set visiblity of individual share option's MenuItem.\n\t * @param option Share option key\n\t * @param expression Visibility binding toolkit expression\n\t */\n\t_setShareOptionVisibility(option: ShareOptionKey, expression: BindingToolkitExpression<boolean>): void {\n\t\tconst menuItemRef = this._getMenuItemReference(option);\n\t\tif (menuItemRef?.current) {\n\t\t\tthis._bindUIVisibility(menuItemRef.current, expression);\n\t\t}\n\t}\n\n\t/**\n\t * Bind the UI element's visibility property.\n\t * @param item UI element\n\t * @param expression Expression to bind.\n\t */\n\t_bindUIVisibility(item: MenuButton | MenuItem | CommandExecution, expression: BindingToolkitExpression<boolean>): void {\n\t\t// NOTE: We need convert the binding toolkit expression to the format that can be consumed by the UI element.\n\t\t// At runtime, we can't use binding toolkit expression or compiled expression directly to bind the visibility or set the visible property or the UI element.\n\t\t// We would need to convert the binding toolkit expression -> UI5 BindingInfo to bind the UI element.\n\t\tconst compiledExp = compileExpression(expression);\n\n\t\tif (compiledExp && compiledExp.startsWith(\"{\") && compiledExp?.endsWith(\"}\")) {\n\t\t\t// Probable binding\n\t\t\ttry {\n\t\t\t\tconst parsedExp = BindingInfo.parse(compiledExp);\n\t\t\t\titem.bindProperty(\"visible\", parsedExp);\n\t\t\t} catch (err) {\n\t\t\t\tLog.error(err as string);\n\t\t\t}\n\t\t} else if (compiledExp === \"false\") {\n\t\t\t// Statically false\n\t\t\titem.unbindProperty(\"visible\", true);\n\t\t\titem.setVisible(false);\n\t\t}\n\t}\n\n\t_getShareBlockConfig(view: View): ConfigOptions {\n\t\tconst viewData = view.getViewData() as ViewData;\n\t\tconst viewShareConfigs = viewData?.share;\n\t\tconst controller = view.getController() as PageController;\n\t\tconst feAppShareConfigs = controller.getAppComponent().getManifestEntry(\"sap.fe\")?.app?.share;\n\n\t\tconst showSendEmail = this._getOptionBlockConfig(feAppShareConfigs?.showSendEmail, viewShareConfigs?.showSendEmail);\n\t\tconst showCollaborationManager = this._getOptionBlockConfig(\n\t\t\tfeAppShareConfigs?.showCollaborationManager,\n\t\t\tviewShareConfigs?.showCollaborationManager\n\t\t);\n\n\t\tconst showMsTeamsOptions = this._getOptionBlockConfig(\n\t\t\tfeAppShareConfigs?.teams?.showMsTeamsOptions,\n\t\t\tviewShareConfigs?.teams?.showMsTeamsOptions\n\t\t);\n\t\tconst enableCard = this._getOptionBlockConfig(feAppShareConfigs?.teams?.asCard, viewShareConfigs?.teams?.asCard);\n\n\t\treturn { showSendEmail, showMsTeamsOptions, enableCard, showCollaborationManager };\n\t}\n\n\t_getOptionBlockConfig(feAppSetting?: boolean | string, viewLevelSetting?: boolean | string): CompiledBindingToolkitExpression {\n\t\tconst feAppExp = typeof feAppSetting === \"string\" ? resolveBindingString<boolean>(feAppSetting) : constant(feAppSetting ?? true);\n\t\tconst viewLevelExp =\n\t\t\ttypeof viewLevelSetting === \"string\" ? resolveBindingString<boolean>(viewLevelSetting) : constant(viewLevelSetting ?? true);\n\t\treturn compileExpression(and(feAppExp, viewLevelExp));\n\t}\n\n\tcreateContent(appComponent: AppComponent): ShareAPI {\n\t\t// Ctrl+Shift+S is needed for the time being but this needs to be removed after backlog from menu button\n\t\tconst menuButton = (\n\t\t\t<ShareAPI id={this.shareAPIId}>\n\t\t\t\t<OverflowToolbarMenuButton\n\t\t\t\t\ttext={\"{sap.fe.i18n>M_COMMON_SAPFE_ACTION_SHARE}\"}\n\t\t\t\t\tref={this.menuButton}\n\t\t\t\t\ticon={\"sap-icon://action\"}\n\t\t\t\t\ttooltip={\"{sap.fe.i18n>M_COMMON_SAPFE_ACTION_SHARE} (Ctrl+Shift+S)\"}\n\t\t\t\t>\n\t\t\t\t\t<Menu ref={this.menu}></Menu>\n\t\t\t\t</OverflowToolbarMenuButton>\n\t\t\t</ShareAPI>\n\t\t) as ShareAPI;\n\t\tthis.getPageController()\n\t\t\t.getView()\n\t\t\t.addDependent(\n\t\t\t\t<CommandExecution\n\t\t\t\t\tref={this.cmdExecution}\n\t\t\t\t\tcommand=\"Share\"\n\t\t\t\t\texecute={(): void => {\n\t\t\t\t\t\tthis.menuButton.current?.getMenu().openBy(this.menuButton.current, true);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t);\n\t\t// The initialization is asynchronous, so we just trigger it and hope for the best :D\n\t\tthis.isInitialized = this._initializeMenuItems(this.getPageController().getView(), appComponent).catch((error) => {\n\t\t\tLog.error(error as string);\n\t\t});\n\n\t\tthis.setLayoutData(\n\t\t\tnew OverflowToolbarLayoutData({\n\t\t\t\tpriority: this.priority\n\t\t\t})\n\t\t);\n\t\treturn menuButton;\n\t}\n\n\t/**\n\t * Returns properties for the interface IOverflowToolbarContent.\n\t * @returns Returns the configuration of IOverflowToolbarContent\n\t */\n\tgetOverflowToolbarConfig(): object {\n\t\treturn {\n\t\t\tcanOverflow: true,\n\t\t\tonBeforeEnterOverflow: function (oControl: Share): void {\n\t\t\t\t(oControl?.getContent()?.getContent() as OverflowToolbarMenuButton).getText = function (): string {\n\t\t\t\t\tconst resourceModel = getResourceModel(oControl as Control);\n\t\t\t\t\treturn resourceModel.getText(\"M_COMMON_SAPFE_ACTION_SHARE\");\n\t\t\t\t};\n\t\t\t},\n\t\t\tonAfterExitOverflow: function (oControl: Share): void {\n\t\t\t\t(oControl?.getContent()?.getContent() as OverflowToolbarMenuButton).getText = function (): string {\n\t\t\t\t\treturn \"\";\n\t\t\t\t};\n\t\t\t},\n\t\t\tpriority: this.priority\n\t\t};\n\t}\n}\n"],"mappings":"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","ignoreList":[]}