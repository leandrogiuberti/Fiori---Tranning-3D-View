{"version":3,"names":["multiValueFieldRuntime","handleChange","controller","event","sourcefield","getSource","isTransient","getBindingContext","isValueResolved","getParameter","Promise","resolve","feController","FieldRuntimeHelper","getExtensionController","editFlow","syncTask","_sideEffects","prepareDeferredSideEffectsForField","onValidateFieldGroup","handleFieldGroupChange"],"sourceRoot":".","sources":["MultiValueFieldRuntime.ts"],"sourcesContent":["import type PageController from \"sap/fe/core/PageController\";\nimport type Event from \"sap/ui/base/Event\";\nimport type Control from \"sap/ui/core/Control\";\nimport type { MultiValueField$ChangeEvent } from \"sap/ui/mdc/MultiValueField\";\nimport type Context from \"sap/ui/model/odata/v4/Context\";\nimport FieldRuntimeHelper from \"../field/FieldRuntimeHelper\";\n\nconst multiValueFieldRuntime = {\n\t/**\n\t * Handler for the change event.\n\t *\n\t * Used to request SideEffects based on the validity of change.\n\t * @param controller The controller of the page containing the field\n\t * @param event The event object passed by the change event\n\t */\n\thandleChange: async function (controller: PageController, event: MultiValueField$ChangeEvent): Promise<void> {\n\t\tconst sourcefield = event.getSource() as Control,\n\t\t\tisTransient = (sourcefield.getBindingContext() as Context).isTransient(),\n\t\t\tisValueResolved: Promise<string> = (event.getParameter(\"promise\") as Promise<string> | undefined) ?? Promise.resolve(\"\");\n\n\t\t// Use the FE Controller instead of the extensionAPI to access internal FE controllers\n\t\tconst feController = FieldRuntimeHelper.getExtensionController(controller);\n\n\t\tawait feController.editFlow.syncTask(isValueResolved);\n\n\t\t// if the context is transient, it means the request would fail anyway as the record does not exist in reality\n\t\tif (isTransient) {\n\t\t\treturn;\n\t\t}\n\n\t\t// register the change coming in this multi value field as successful (for group SideEffects)\n\t\t// immediate SideEffects will be handled by create/delete handlers\n\t\tfeController._sideEffects.prepareDeferredSideEffectsForField(event, true, isValueResolved);\n\t},\n\n\t/**\n\t * Handler for the validateFieldGroup event.\n\t * @param controller The controller of the page containing the field\n\t * @param event The event object passed by the validateFieldGroup event\n\t */\n\tonValidateFieldGroup: async function (controller: PageController, event: Event): Promise<void> {\n\t\tconst feController = FieldRuntimeHelper.getExtensionController(controller);\n\t\tawait feController._sideEffects.handleFieldGroupChange(event);\n\t}\n};\n\nexport default multiValueFieldRuntime;\n"],"mappings":";;;;;;;EAOA,MAAMA,sBAAsB,GAAG;IAC9B;AACD;AACA;AACA;AACA;AACA;AACA;IACCC,YAAY,EAAE,eAAAA,CAAgBC,UAA0B,EAAEC,KAAkC,EAAiB;MAC5G,MAAMC,WAAW,GAAGD,KAAK,CAACE,SAAS,CAAC,CAAY;QAC/CC,WAAW,GAAIF,WAAW,CAACG,iBAAiB,CAAC,CAAC,CAAaD,WAAW,CAAC,CAAC;QACxEE,eAAgC,GAAIL,KAAK,CAACM,YAAY,CAAC,SAAS,CAAC,IAAoCC,OAAO,CAACC,OAAO,CAAC,EAAE,CAAC;;MAEzH;MACA,MAAMC,YAAY,GAAGC,kBAAkB,CAACC,sBAAsB,CAACZ,UAAU,CAAC;MAE1E,MAAMU,YAAY,CAACG,QAAQ,CAACC,QAAQ,CAACR,eAAe,CAAC;;MAErD;MACA,IAAIF,WAAW,EAAE;QAChB;MACD;;MAEA;MACA;MACAM,YAAY,CAACK,YAAY,CAACC,kCAAkC,CAACf,KAAK,EAAE,IAAI,EAAEK,eAAe,CAAC;IAC3F,CAAC;IAED;AACD;AACA;AACA;AACA;IACCW,oBAAoB,EAAE,eAAAA,CAAgBjB,UAA0B,EAAEC,KAAY,EAAiB;MAC9F,MAAMS,YAAY,GAAGC,kBAAkB,CAACC,sBAAsB,CAACZ,UAAU,CAAC;MAC1E,MAAMU,YAAY,CAACK,YAAY,CAACG,sBAAsB,CAACjB,KAAK,CAAC;IAC9D;EACD,CAAC;EAAC,OAEaH,sBAAsB;AAAA","ignoreList":[],"file":"MultiValueFieldRuntime-dbg.js"}