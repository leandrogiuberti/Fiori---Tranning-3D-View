{"version":3,"file":"MultiValueFieldDelegate.js","names":["Object","assign","MdcMultiValueFieldDelegate","getDescription","field","valueHelp","key","_conditionIn","_conditionOut","bindingContext","_ConditionModel","_conditionModelName","conditionPayload","control","type","undefined","FieldBaseDelegate","updateItems","async","_payload","conditions","listBinding","getBinding","isJsonListBinding","isA","isODataListBinding","bindingInfo","getBindingInfo","keyBindingInfo","template","descriptionBindingInfo","keyPath","parts","path","descriptionPath","this","_updateItemsInODataListBinding","_updateItemsInJsonListBinding","contexts","getCurrentContexts","dataToAdd","controller","CommonUtils","getTargetView","getController","newKeys","map","condition","values","oldKeys","context","getProperty","modificationPromises","i","length","deleteContext","includes","push","editFlow","deleteMultipleDocuments","controlId","getId","noDialog","item","createMultipleDocuments","Promise","all","customDataValue","getCustomData","find","cdv","getKey","getValue","splice","modelNameForUpdate","model","getModel","updateBindings"],"sources":["./MultiValueFieldDelegate.ts"],"sourcesContent":["import CommonUtils from \"sap/fe/core/CommonUtils\";\nimport type CustomData from \"sap/ui/core/CustomData\";\nimport type Control from \"sap/ui/mdc/Control\";\nimport type Field from \"sap/ui/mdc/Field\";\nimport type MultiValueField from \"sap/ui/mdc/MultiValueField\";\nimport type ValueHelp from \"sap/ui/mdc/ValueHelp\";\nimport type { ConditionObject } from \"sap/ui/mdc/condition/Condition\";\nimport type ConditionModel from \"sap/ui/mdc/condition/ConditionModel\";\nimport FieldBaseDelegate from \"sap/ui/mdc/field/FieldBaseDelegate\";\nimport MdcMultiValueFieldDelegate from \"sap/ui/mdc/field/MultiValueFieldDelegate\";\nimport type Context from \"sap/ui/model/Context\";\nimport type ModelType from \"sap/ui/model/Type\";\nimport type JSONListBinding from \"sap/ui/model/json/JSONListBinding\";\nimport type JSONModel from \"sap/ui/model/json/JSONModel\";\nimport type ODataListBinding from \"sap/ui/model/odata/v4/ODataListBinding\";\nimport type { ConditionPayloadMap, ConditionPayloadType } from \"../valuehelp/ValueHelpDelegate\";\n\nexport default Object.assign({}, MdcMultiValueFieldDelegate, {\n\t/**\n\t * Determines the description for a given key.\n\t * @param field The <code>Field</code> instance\n\t * @param valueHelp Field help assigned to the <code>Field</code> or <code>FilterField</code> control\n\t * @param key Key value of the description\n\t * @param _conditionIn In parameters for the key (no longer supported)\n\t * @param _conditionOut Out parameters for the key (no longer supported)\n\t * @param bindingContext BindingContext <code>BindingContext</code> of the checked field. Inside a table, the <code>ValueHelp</code> element can be connected to a different row\n\t * @param _ConditionModel ConditionModel</code>, if bound to one\n\t * @param _conditionModelName Name of the <code>ConditionModel</code>, if bound to one\n\t * @param conditionPayload Additional context information for this key\n\t * @param control Instance of the calling control\n\t * @param type Type of the value\n\t * @returns Description for the key or object containing a description, key and payload. If the description is not available right away (it must be requested), a <code>Promise</code> is returned\n\t */\n\tgetDescription: function (\n\t\tfield: Field | null,\n\t\tvalueHelp: ValueHelp,\n\t\tkey: string | undefined | null,\n\t\t_conditionIn: object,\n\t\t_conditionOut: object,\n\t\tbindingContext: Context | undefined,\n\t\t_ConditionModel: ConditionModel,\n\t\t_conditionModelName: string,\n\t\tconditionPayload: ConditionPayloadMap,\n\t\tcontrol: Control,\n\t\ttype: ModelType\n\t) {\n\t\tif (key === undefined || key === null) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn FieldBaseDelegate.getDescription(\n\t\t\tfield as Field,\n\t\t\tvalueHelp,\n\t\t\tkey,\n\t\t\t_conditionIn,\n\t\t\t_conditionOut,\n\t\t\tbindingContext as Context,\n\t\t\tundefined,\n\t\t\tundefined,\n\t\t\tconditionPayload,\n\t\t\tcontrol,\n\t\t\ttype\n\t\t);\n\t},\n\n\t/**\n\t * Implements the model-specific logic to update items after conditions have been updated.\n\t * Items can be removed, updated, or added. Use the binding information of the `MultiValueField` control\n\t * to update the data in the model.\n\t * @param _payload Additional context information for this key\n\t * @param conditions Current conditions\n\t * @param control Instance of the calling control\n\t * @returns Promise is returned\n\t */\n\tupdateItems: async function (_payload: undefined, conditions: ConditionObject[], control: MultiValueField) {\n\t\tconst listBinding = control.getBinding(\"items\") as ODataListBinding | JSONListBinding;\n\n\t\tconst isJsonListBinding = listBinding.isA(\"sap.ui.model.json.JSONListBinding\");\n\t\tconst isODataListBinding = listBinding.isA(\"sap.ui.model.odata.v4.ODataListBinding\");\n\n\t\tconst bindingInfo = control.getBindingInfo(\"items\");\n\t\t// check if conditions are added, removed or changed\n\t\tconst keyBindingInfo = bindingInfo.template.getBindingInfo(\"key\");\n\t\tconst descriptionBindingInfo = bindingInfo.template.getBindingInfo(\"description\");\n\t\tconst keyPath: string = keyBindingInfo && keyBindingInfo.parts[0].path;\n\t\tconst descriptionPath =\n\t\t\tdescriptionBindingInfo &&\n\t\t\tdescriptionBindingInfo.parts &&\n\t\t\tdescriptionBindingInfo.parts[0] &&\n\t\t\tdescriptionBindingInfo.parts[0].path;\n\n\t\tif (isODataListBinding) {\n\t\t\tawait this._updateItemsInODataListBinding(listBinding as ODataListBinding, conditions, control, keyPath, descriptionPath);\n\t\t} else if (isJsonListBinding) {\n\t\t\tthis._updateItemsInJsonListBinding(conditions, control, keyPath, descriptionPath);\n\t\t}\n\t},\n\n\t/**\n\t * Updates the items in an OData list binding.\n\t * @param listBinding\n\t * @param conditions\n\t * @param control\n\t * @param keyPath\n\t * @param descriptionPath\n\t * @returns Promise containing all the update promises\n\t */\n\t_updateItemsInODataListBinding: async function (\n\t\tlistBinding: ODataListBinding,\n\t\tconditions: ConditionObject[],\n\t\tcontrol: MultiValueField,\n\t\tkeyPath: string,\n\t\tdescriptionPath: string\n\t) {\n\t\tconst contexts = listBinding.getCurrentContexts();\n\n\t\tconst dataToAdd: ConditionPayloadType[] = [];\n\t\tconst controller = CommonUtils.getTargetView(control).getController();\n\n\t\t// Contexts to delete\n\t\tconst newKeys = conditions.map(function (condition: ConditionObject) {\n\t\t\treturn condition.values[0];\n\t\t});\n\t\tconst oldKeys = contexts.map(function (context: Context) {\n\t\t\treturn context.getProperty(keyPath);\n\t\t});\n\t\tconst modificationPromises = [];\n\n\t\tfor (let i = 0; i < contexts.length; i++) {\n\t\t\tconst deleteContext = contexts[i];\n\t\t\tif (!newKeys.includes(deleteContext.getProperty(keyPath))) {\n\t\t\t\tmodificationPromises.push(\n\t\t\t\t\tcontroller.editFlow.deleteMultipleDocuments([deleteContext], {\n\t\t\t\t\t\tcontrolId: control.getId(),\n\t\t\t\t\t\tnoDialog: true\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\t// data to add\n\t\tfor (const condition of conditions) {\n\t\t\tif (!oldKeys.includes(condition.values[0])) {\n\t\t\t\tconst item: ConditionPayloadType = {};\n\t\t\t\tif (keyPath && !keyPath.includes(\"/\")) {\n\t\t\t\t\t// we do not manage to create on a sub entity of the 1:n navigation\n\t\t\t\t\titem[keyPath] = condition.values[0];\n\n\t\t\t\t\tif (descriptionPath && !descriptionPath.includes(\"/\") && descriptionPath !== keyPath) {\n\t\t\t\t\t\titem[descriptionPath] = condition.values[1];\n\t\t\t\t\t}\n\t\t\t\t\tdataToAdd.push(item);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (dataToAdd.length) {\n\t\t\tmodificationPromises.push(controller.editFlow.createMultipleDocuments(listBinding, dataToAdd, true, false));\n\t\t}\n\t\treturn Promise.all(modificationPromises);\n\t},\n\t/**\n\t * Updates the items in a JSON list binding.\n\t * @param conditions\n\t * @param control\n\t * @param keyPath\n\t * @param descriptionPath\n\t */\n\t_updateItemsInJsonListBinding: function (\n\t\tconditions: ConditionObject[],\n\t\tcontrol: MultiValueField,\n\t\tkeyPath: string,\n\t\tdescriptionPath: string\n\t) {\n\t\tconst customDataValue = control.getCustomData().find((cdv: CustomData) => cdv.getKey() === \"forwardedItemsBinding\");\n\t\tconst values = customDataValue?.getValue();\n\t\t//clean all entries to keep array reference\n\t\tvalues.splice(0);\n\t\tfor (const condition of conditions) {\n\t\t\tconst item: ConditionPayloadType = {};\n\t\t\titem[keyPath] = condition.values[0];\n\t\t\tif (condition.values[1]) {\n\t\t\t\titem[descriptionPath] = condition.values[1];\n\t\t\t}\n\t\t\tvalues.push(item);\n\t\t}\n\n\t\tconst modelNameForUpdate = customDataValue?.getBindingInfo(\"value\")?.parts[0]?.model;\n\t\t(customDataValue?.getModel(modelNameForUpdate) as JSONModel)?.updateBindings(true);\n\t}\n});\n"],"mappings":"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","ignoreList":[]}