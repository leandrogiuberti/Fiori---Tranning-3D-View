{"version":3,"file":"Breadcrumbs.js","names":["hierachyModeOptions","OBJECT","FULL","_exports","Breadcrumbs","_dec","defineUI5Class","_dec2","implementInterface","_dec3","property","type","defaultValue","allowedValues","Object","values","_class","_class2","_BuildingBlock","_this","_len","arguments","length","args","Array","_key","call","this","_initializerDefineProperty","_descriptor","_descriptor2","_inheritsLoose","_proto","prototype","onMetadataAvailable","content","_getOwner","runAsOwner","createContent","_getBreadcrumbsTitleInfos","fullPathForLinks","promises","appComponent","getAppComponent","rootViewController","getRootViewController","metaModel","getMetaModel","pathParts","_getBreadcrumbsPathParts","path","hierarchyMode","resourceModel","getResourceModel","homeTitle","_getFEManifestBreadcrumbSettings","home","push","Promise","resolve","intent","title","CommonUtils","getTranslatedTextFromExpBindingString","getText","forEach","pathPart","idx","getRouter","getRouteInfoByHash","_getFirstPageTitleInformation","parameterPath","getMetaPath","resultContext","getObject","getTitleInfoFromPath","bind","split","shift","splice","_getContextPathFromHash","sHash","entitySet","contextPath","getTargetOptionsFromHash","options","settings","undefined","async","manifestAppSettings","getManifestEntry","appTitle","appSubTitle","subTitle","appIcon","icon","appSpecificHash","getAppSpecificHash","rootContextPath","dataModelObjectPath","getDataModelObjectPath","typeNamePluralAnno","targetEntityType","annotations","UI","HeaderInfo","TypeNamePlural","exp","compileExpression","rootTypeNamePlural","titleInfo","getRootLevelTitleInformation","subtitle","spaceName","space","manifestFESettings","app","breadcrumbs","setBreadcrumbLinks","getBindingContext","getPath","Log","info","breadcrumbsCtrl","getContent","error","titleHierarchyInfos","all","updateBreadcrumbLink","titleHierarchyInfo","hierarchyPosition","isLastLink","linkText","getLinkText","setCurrentLocationText","link","getLinks","Link","setText","setHref","encodeURI","addLink","titleExists","subtitleExists","isFirstPage","viewId","getPageController","getView","getId","_jsx","UI5Breadcrumbs","id","generate","modelContextChange","BuildingBlock","_applyDecoratedDescriptor","configurable","enumerable","writable","initializer"],"sources":["./Breadcrumbs.tsx"],"sourcesContent":["import Log from \"sap/base/Log\";\nimport { compileExpression } from \"sap/fe/base/BindingToolkit\";\nimport { defineUI5Class, implementInterface, property } from \"sap/fe/base/ClassSupport\";\nimport BuildingBlock from \"sap/fe/core/buildingBlocks/BuildingBlock\";\nimport CommonUtils from \"sap/fe/core/CommonUtils\";\nimport { getResourceModel } from \"sap/fe/core/helpers/ResourceModelHelper\";\nimport { generate } from \"sap/fe/core/helpers/StableIdHelper\";\nimport type { TitleInformation } from \"sap/fe/core/rootView/RootViewBaseController\";\nimport UI5Breadcrumbs from \"sap/m/Breadcrumbs\";\nimport Link from \"sap/m/Link\";\nimport type { ManifestContent } from \"sap/ui/core/Manifest\";\n\nexport const hierachyModeOptions = {\n\tOBJECT: \"objectNavigation\",\n\tFULL: \"fullNavigation\"\n} as const;\nexport type HierachyMode = (typeof hierachyModeOptions)[keyof typeof hierachyModeOptions];\n\n/**\n * Building block used to create breadcrumbs.\n */\n@defineUI5Class(\"sap.fe.macros.Breadcrumbs\")\nexport default class Breadcrumbs extends BuildingBlock<UI5Breadcrumbs> {\n\t@implementInterface(\"sap.m.IBreadcrumbs\")\n\t__implements__sap_m_IBreadcrumbs = true;\n\n\t/**\n\t * Hierarchy mode for breadcrumbs\n\t * @public\n\t */\n\t@property({\n\t\ttype: \"string\",\n\t\tdefaultValue: hierachyModeOptions.OBJECT,\n\t\tallowedValues: Object.values(hierachyModeOptions)\n\t})\n\thierarchyMode!: HierachyMode;\n\n\tonMetadataAvailable(): void {\n\t\tif (!this.content) {\n\t\t\tthis._getOwner()?.runAsOwner(() => {\n\t\t\t\tthis.content = this.createContent();\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Get breadcrumbs title information for full path.\n\t * @param fullPathForLinks The context path of the object page.\n\t * @returns Promises resolving to TitleInformation objects for each path part.\n\t */\n\t_getBreadcrumbsTitleInfos(fullPathForLinks: string): Promise<TitleInformation>[] {\n\t\tconst promises: Promise<TitleInformation>[] = [],\n\t\t\tappComponent = this.getAppComponent()!,\n\t\t\trootViewController = appComponent.getRootViewController(),\n\t\t\tmetaModel = appComponent.getMetaModel(),\n\t\t\tpathParts = this._getBreadcrumbsPathParts(fullPathForLinks);\n\n\t\tlet path = \"\";\n\t\tif (this.hierarchyMode === hierachyModeOptions.FULL) {\n\t\t\t// Home page\n\t\t\tconst resourceModel = getResourceModel(this);\n\t\t\tconst homeTitle = this._getFEManifestBreadcrumbSettings()?.home;\n\t\t\tpromises.push(\n\t\t\t\tPromise.resolve({\n\t\t\t\t\tintent: \"#Shell-home\",\n\t\t\t\t\ttitle: homeTitle\n\t\t\t\t\t\t? CommonUtils.getTranslatedTextFromExpBindingString(homeTitle, this)\n\t\t\t\t\t\t: resourceModel.getText(\"T_APP_HOME\")\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\t\tpathParts.forEach(\n\t\t\tfunction (this: Breadcrumbs, pathPart: string, idx: number): void {\n\t\t\t\tpath += pathPart ? `/${pathPart}` : \"\";\n\t\t\t\tif (!appComponent.getRouter().getRouteInfoByHash(path)) {\n\t\t\t\t\t// If the target is not declared in the routes, we skip it\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t// If in full Navigation mode, the first page of the application uses the title and subtitle from the manifest\n\t\t\t\tif (!idx && path === \"\" && this.hierarchyMode === hierachyModeOptions.FULL) {\n\t\t\t\t\tpromises.push(this._getFirstPageTitleInformation());\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst parameterPath = metaModel.getMetaPath(path);\n\t\t\t\tconst resultContext = metaModel.getObject(`${parameterPath}/@com.sap.vocabularies.Common.v1.ResultContext`);\n\t\t\t\tif (resultContext) {\n\t\t\t\t\t// We dont need to create a breadcrumb for Parameter path\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tpromises.push(rootViewController.getTitleInfoFromPath(path));\n\t\t\t}.bind(this)\n\t\t);\n\t\treturn promises;\n\t}\n\n\t/**\n\t * Get path parts from the full path for links.\n\t * @param fullPathForLinks The context path of the object page.\n\t * @returns Path parts for creating breadcrumb links.\n\t */\n\t_getBreadcrumbsPathParts(fullPathForLinks: string): string[] {\n\t\tconst pathParts = fullPathForLinks?.split(\"/\") ?? [];\n\t\tif (this.hierarchyMode !== hierachyModeOptions.FULL) {\n\t\t\tpathParts.shift(); // Remove \"\"\n\t\t\tpathParts.splice(-1, 1); // Remove current page\n\t\t}\n\t\treturn pathParts;\n\t}\n\n\t/**\n\t * Get the context path from the hash.\n\t * @param sHash The hash to get the context path from\n\t * @returns Context path from the corresponding route target options\n\t */\n\t_getContextPathFromHash(sHash: string): string | undefined {\n\t\tconst appComponent = this.getAppComponent()!,\n\t\t\trootViewController = appComponent.getRootViewController();\n\t\tconst { entitySet, contextPath } = rootViewController.getTargetOptionsFromHash(sHash)?.options?.settings ?? {};\n\t\treturn contextPath ?? (entitySet ? `/${entitySet}` : undefined);\n\t}\n\n\tasync _getFirstPageTitleInformation(): Promise<TitleInformation> {\n\t\tconst appComponent = this.getAppComponent()!,\n\t\t\trootViewController = appComponent.getRootViewController(),\n\t\t\tmanifestAppSettings = appComponent.getManifestEntry(\"sap.app\"),\n\t\t\tappTitle = manifestAppSettings.title || \"\",\n\t\t\tappSubTitle = manifestAppSettings.subTitle || \"\",\n\t\t\tappIcon = manifestAppSettings.icon || \"\",\n\t\t\tappSpecificHash = rootViewController.getAppSpecificHash(),\n\t\t\trootContextPath = this._getContextPathFromHash(\"\"),\n\t\t\tdataModelObjectPath = this.getDataModelObjectPath(rootContextPath),\n\t\t\ttypeNamePluralAnno = dataModelObjectPath?.targetEntityType?.annotations?.UI?.HeaderInfo?.TypeNamePlural,\n\t\t\texp = compileExpression(typeNamePluralAnno),\n\t\t\trootTypeNamePlural = exp ? CommonUtils.getTranslatedTextFromExpBindingString(exp, this) : undefined;\n\n\t\tconst titleInfo = { ...(await rootViewController.getRootLevelTitleInformation(appSpecificHash, appTitle, appSubTitle, appIcon)) };\n\t\ttitleInfo.subtitle = rootTypeNamePlural ? rootTypeNamePlural : titleInfo.title;\n\t\tconst spaceName = this._getFEManifestBreadcrumbSettings()?.space;\n\t\ttitleInfo.title = spaceName ? CommonUtils.getTranslatedTextFromExpBindingString(spaceName, this) : \"\";\n\t\treturn titleInfo;\n\t}\n\n\t_getFEManifestBreadcrumbSettings(): NonNullable<ManifestContent[\"sap.fe\"][\"app\"]>[\"breadcrumbs\"] | undefined {\n\t\tconst appComponent = this.getAppComponent()!,\n\t\t\tmanifestFESettings = appComponent.getManifestEntry(\"sap.fe\");\n\t\treturn manifestFESettings?.app?.breadcrumbs;\n\t}\n\n\t/**\n\t * Sets breadcrumb links in the given Breadcrumbs control.\n\t *\n\t * This method retrieves the title information for each path part and sets the links accordingly.\n\t * If the `fullPathForLink` parameter is not provided, it uses the binding context path of the Breadcrumbs control.\n\t * @param fullPathForLinks The full path for the link, defaults to the binding context path of the Breadcrumbs control\n\t * @returns A promise that resolves when the breadcrumb links are set\n\t */\n\tasync setBreadcrumbLinks(fullPathForLinks = this.getBindingContext()?.getPath()): Promise<void> {\n\t\tif (typeof fullPathForLinks !== \"string\") {\n\t\t\tLog.info(\"Breadcrumbs: path not available. Cannot set breadcrumb links.\");\n\t\t\treturn;\n\t\t}\n\t\tconst breadcrumbsCtrl = this.getContent();\n\t\tif (!breadcrumbsCtrl) {\n\t\t\tLog.error(\"Breadcrumbs Building block: Breadcrumbs control not available. Cannot set breadcrumb links.\");\n\t\t\treturn;\n\t\t}\n\t\ttry {\n\t\t\tconst titleHierarchyInfos: TitleInformation[] = await Promise.all(this._getBreadcrumbsTitleInfos(fullPathForLinks));\n\t\t\ttitleHierarchyInfos.forEach(this.updateBreadcrumbLink.bind(this));\n\t\t} catch (error: unknown) {\n\t\t\tLog.error(\"Error while setting the breadcrumb links: \" + error);\n\t\t}\n\t}\n\n\t/**\n\t * Update the breadcrumb link at the specified hierarchy position.\n\t * @param titleHierarchyInfo The title information for the link\n\t * @param hierarchyPosition The position of the link in the hierarchy\n\t * @param titleHierarchyInfos The array of all title information for the hierarchy\n\t */\n\tupdateBreadcrumbLink(titleHierarchyInfo: TitleInformation, hierarchyPosition: number, titleHierarchyInfos: TitleInformation[]): void {\n\t\tconst breadcrumbsCtrl = this.getContent()!;\n\t\tconst isLastLink = hierarchyPosition === titleHierarchyInfos.length - 1;\n\t\tconst linkText = this.getLinkText(titleHierarchyInfo, isLastLink, hierarchyPosition);\n\t\tif (!linkText) {\n\t\t\tLog.error(\"Breadcrumbs: No link text available for the breadcrumb link at position \" + hierarchyPosition);\n\t\t\treturn;\n\t\t}\n\t\tif (isLastLink && this.hierarchyMode === hierachyModeOptions.FULL) {\n\t\t\t// NOTE: As of 1.136.0, the setCurrentLocationText method is not deprecated.\n\t\t\t// It was depricated in UI5 1.123 but reintroduced on/before UI5 1.127.\n\t\t\t// As of day of writing this, we use UI5 1.124 for openui5 types.\n\t\t\t// eslint-disable-next-line deprecation/deprecation\n\t\t\tbreadcrumbsCtrl.setCurrentLocationText(linkText);\n\t\t} else {\n\t\t\tconst link = breadcrumbsCtrl.getLinks()[hierarchyPosition] ? breadcrumbsCtrl.getLinks()[hierarchyPosition] : new Link();\n\t\t\t//sCurrentEntity is a fallback value in case of empty title\n\t\t\tlink.setText(linkText);\n\t\t\t//We apply an additional encodeURI in case of special characters (ie \"/\") used in the url through the semantic keys\n\t\t\tlink.setHref(encodeURI(titleHierarchyInfo.intent!));\n\t\t\tif (!breadcrumbsCtrl.getLinks()[hierarchyPosition]) {\n\t\t\t\tbreadcrumbsCtrl.addLink(link);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Get link text based on title and subtitle.\n\t * @param titleInfo Title information containing title and subtitle\n\t * @param isLastLink Determines if it is the last link in the breadcrumbs\n\t * @param hierarchyPosition Position of the link in the hierarchy\n\t * @returns Link text\n\t */\n\tgetLinkText(titleInfo: TitleInformation, isLastLink: boolean, hierarchyPosition: number): string | undefined {\n\t\tconst { title, subtitle } = titleInfo;\n\t\tconst titleExists = title !== undefined && title !== \"\";\n\t\tconst subtitleExists = subtitle !== undefined && subtitle !== \"\";\n\t\tif (titleExists && subtitleExists && this.hierarchyMode === hierachyModeOptions.FULL) {\n\t\t\tconst resourceModel = getResourceModel(this);\n\t\t\tconst isFirstPage = hierarchyPosition === 1;\n\t\t\treturn !isFirstPage && isLastLink ? title : resourceModel.getText(\"T_BREADCRUMBS_TITLE_LONG_TEMPLATE\", [title, subtitle]);\n\t\t}\n\t\tif (subtitleExists) {\n\t\t\treturn subtitle;\n\t\t} else if (titleExists) {\n\t\t\treturn title;\n\t\t}\n\t}\n\n\tcreateContent(): UI5Breadcrumbs {\n\t\tconst viewId = this.getPageController()?.getView().getId();\n\t\treturn (\n\t\t\t<UI5Breadcrumbs\n\t\t\t\t// This is set as absolute ID.\n\t\t\t\tid={viewId ? generate([`${viewId}--fe`, \"Breadcrumbs\"]) : undefined}\n\t\t\t\tmodelContextChange={(): void => {\n\t\t\t\t\tthis.setBreadcrumbLinks();\n\t\t\t\t}}\n\t\t\t></UI5Breadcrumbs>\n\t\t);\n\t}\n}\n"],"mappings":"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","ignoreList":[]}