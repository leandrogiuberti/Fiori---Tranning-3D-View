{"version":3,"file":"VisualFilterRuntime.js","names":["VisualFilterRuntime","selectionChanged","oEvent","oInteractiveChart","getSource","sOutParameter","data","sValueListProperty","sDimension","sDimensionText","bMultipleSelectionAllowed","sDimensionType","oSelectedAggregation","getParameter","bIsAggregationSelected","oConditionModel","getModel","aConditions","getProperty","Log","error","sSelectionChangedValue","getBindingContext","getObject","sSelectionChangedValueText","String","undefined","VisualFilterUtils","_parseDateTime","oCondition","Condition","createItemCondition","push","filter","operator","Date","parse","values","setProperty","getAggregationSelected","aSelectableValues","this","i","length","getParent","sDimensionValue","includes","getParentVisualFilterControlBB","potentialVisualFilter","isA","getFiltersFromConditions","_len","arguments","aArguments","Array","_key","oFilterBar","aInParameters","customData","bIsDraftSupported","aPropertyInfoSet","FilterUtils","getFilterPropertyInfo","mConditions","aValueListPropertyInfoSet","oFilters","aFilters","aParameters","oSelectionVariantAnnotation","oInteractiveChartListBinding","getBinding","sPath","getPath","oMetaModel","getMetaModel","sEntitySetPath","filterConditions","getFiltersConditionsFromSelectionVariant","getCustomConditions","bind","typeConfig","TypeMap","getTypeConfig","dataType","oSelectionVariantConditions","convertFilterCondions","Object","keys","forEach","sKey","inParameterForKey","find","inParameter","valueListProperty","localDataProperty","propertyInfoSet","name","baseType","condition","_formatDateTime","oInParameter","index","oInternalModelContext","sInfoPath","bEnableBinding","oResourceBundle","Library","getResourceBundleFor","aRequiredProperties","CommonHelper","parseCustomData","aNotMatchedConditions","requiredPropertyPath","errorMessageTitle","errorMessage","showError","getText","sLabel","sFilterEntityName","split","sChartEntityName","sBindingPath","getBindingPathForParameters","parameter","MdcFilterUtil","getFilterInfo","filters","e","debug","getFilters","Filter","FilterOperator","EQ","visualFilterBB","_setInternalUpdatePending","getFilterCounts","oConditions","scaleVisualFilterValue","oValue","scaleFactor","numberOfFractionalDigits","currency","oRawValue","getFormattedNumber","fireValueHelp","fireEvent","ObjectPath","set"],"sources":["./VisualFilterRuntime.ts"],"sourcesContent":["import type { SelectionVariantType } from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport Log from \"sap/base/Log\";\nimport ObjectPath from \"sap/base/util/ObjectPath\";\nimport type { InternalModelContext } from \"sap/fe/core/helpers/ModelHelper\";\nimport CommonHelper from \"sap/fe/macros/CommonHelper\";\nimport VisualFilterUtils from \"sap/fe/macros/controls/filterbar/utils/VisualFilterUtils\";\nimport type { IFilterControl } from \"sap/fe/macros/filter/FilterUtils\";\nimport FilterUtils from \"sap/fe/macros/filter/FilterUtils\";\nimport { getFiltersConditionsFromSelectionVariant } from \"sap/fe/macros/filterBar/FilterHelper\";\nimport type { PropertyInfo } from \"sap/fe/macros/internal/PropertyInfo\";\nimport type VisualFilterBlock from \"sap/fe/macros/visualfilters/VisualFilter\";\nimport type { InteractiveBarChart$SelectionChangedEvent } from \"sap/suite/ui/microchart/InteractiveBarChart\";\nimport type { InteractiveDonutChart$SelectionChangedEvent } from \"sap/suite/ui/microchart/InteractiveDonutChart\";\nimport type { InteractiveLineChart$SelectionChangedEvent } from \"sap/suite/ui/microchart/InteractiveLineChart\";\nimport type UI5Event from \"sap/ui/base/Event\";\nimport type ManagedObject from \"sap/ui/base/ManagedObject\";\nimport type Control from \"sap/ui/core/Control\";\nimport Library from \"sap/ui/core/Lib\";\nimport type { ConditionObject } from \"sap/ui/mdc/condition/Condition\";\nimport Condition from \"sap/ui/mdc/condition/Condition\";\nimport TypeMap from \"sap/ui/mdc/odata/v4/TypeMap\";\nimport MdcFilterUtil from \"sap/ui/mdc/util/FilterUtil\";\nimport Filter from \"sap/ui/model/Filter\";\nimport FilterOperator from \"sap/ui/model/FilterOperator\";\nimport type JSONModel from \"sap/ui/model/json/JSONModel\";\nimport type ODataListBinding from \"sap/ui/model/odata/v4/ODataListBinding\";\nimport type ODataModel from \"sap/ui/model/odata/v4/ODataModel\";\nimport type { MetaModelType } from \"../../../../../../../types/metamodel_types\";\n\n/**\n * Static class used by Visual Filter during runtime\n * @private\n */\nconst VisualFilterRuntime = {\n\tselectionChanged(\n\t\toEvent:\n\t\t\t| UI5Event\n\t\t\t| InteractiveBarChart$SelectionChangedEvent\n\t\t\t| InteractiveLineChart$SelectionChangedEvent\n\t\t\t| InteractiveDonutChart$SelectionChangedEvent\n\t): void {\n\t\tconst oInteractiveChart: Control = (oEvent as UI5Event).getSource();\n\t\tconst sOutParameter = oInteractiveChart.data(\"outParameter\");\n\t\tconst sValueListProperty = oInteractiveChart.data(\"valuelistProperty\");\n\t\tconst sDimension = oInteractiveChart.data(\"dimension\");\n\t\tconst sDimensionText = oInteractiveChart.data(\"dimensionText\");\n\t\tconst bMultipleSelectionAllowed = oInteractiveChart.data(\"multipleSelectionAllowed\");\n\t\tconst sDimensionType = oInteractiveChart.data(\"dimensionType\");\n\t\tconst oSelectedAggregation =\n\t\t\t(oEvent as InteractiveBarChart$SelectionChangedEvent).getParameter(\"bar\") ||\n\t\t\t(oEvent as InteractiveLineChart$SelectionChangedEvent).getParameter(\"point\") ||\n\t\t\t(oEvent as InteractiveDonutChart$SelectionChangedEvent).getParameter(\"segment\");\n\t\tconst bIsAggregationSelected = (oEvent as InteractiveBarChart$SelectionChangedEvent).getParameter(\"selected\");\n\t\tconst oConditionModel = oInteractiveChart.getModel(\"$field\") as JSONModel;\n\t\tlet aConditions = oConditionModel.getProperty(\"/conditions\");\n\n\t\tif (!sOutParameter || sValueListProperty !== sDimension) {\n\t\t\tLog.error(\"VisualFilter: Cannot sync values with regular filter as out parameter is not configured properly!\");\n\t\t} else {\n\t\t\tlet sSelectionChangedValue = oSelectedAggregation?.getBindingContext()?.getObject(sValueListProperty);\n\t\t\tif (sSelectionChangedValue) {\n\t\t\t\tlet sSelectionChangedValueText = oSelectedAggregation?.getBindingContext()?.getObject(sDimensionText);\n\t\t\t\tif (typeof sSelectionChangedValueText !== \"string\" && !(sSelectionChangedValueText instanceof String)) {\n\t\t\t\t\tsSelectionChangedValueText = undefined;\n\t\t\t\t}\n\t\t\t\t// if selection has been done on the aggregation then add to conditions\n\t\t\t\tif (bIsAggregationSelected) {\n\t\t\t\t\tif (bMultipleSelectionAllowed === false) {\n\t\t\t\t\t\taConditions = [];\n\t\t\t\t\t}\n\t\t\t\t\tif (sDimensionType === \"Edm.DateTimeOffset\") {\n\t\t\t\t\t\tsSelectionChangedValue = VisualFilterUtils._parseDateTime(sSelectionChangedValue);\n\t\t\t\t\t}\n\t\t\t\t\tconst oCondition = Condition.createItemCondition(\n\t\t\t\t\t\tsSelectionChangedValue,\n\t\t\t\t\t\tsSelectionChangedValueText || undefined,\n\t\t\t\t\t\t{},\n\t\t\t\t\t\t{}\n\t\t\t\t\t);\n\t\t\t\t\taConditions.push(oCondition);\n\t\t\t\t} else {\n\t\t\t\t\t// because selection was removed on the aggregation hence remove this from conditions\n\t\t\t\t\taConditions = aConditions.filter(function (oCondition: ConditionObject) {\n\t\t\t\t\t\tif (sDimensionType === \"Edm.DateTimeOffset\") {\n\t\t\t\t\t\t\treturn oCondition.operator !== \"EQ\" || Date.parse(oCondition.values[0]) !== Date.parse(sSelectionChangedValue);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn oCondition.operator !== \"EQ\" || oCondition.values[0] !== sSelectionChangedValue;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\toConditionModel.setProperty(\"/conditions\", aConditions);\n\t\t\t} else {\n\t\t\t\tLog.error(\"VisualFilter: No vaue found for the outParameter\");\n\t\t\t}\n\t\t}\n\t},\n\t// THIS IS A FORMATTER\n\tgetAggregationSelected(this: ManagedObject, aConditions: ConditionObject[]): boolean | undefined {\n\t\tlet aSelectableValues = [];\n\t\tif (!this.getBindingContext()) {\n\t\t\treturn;\n\t\t}\n\t\tfor (let i = 0; i <= aConditions.length - 1; i++) {\n\t\t\tconst oCondition = aConditions[i];\n\t\t\t// 1. get conditions with EQ operator (since visual filter can only deal with EQ operators) and get their values\n\t\t\tif (oCondition.operator === \"EQ\") {\n\t\t\t\taSelectableValues.push(oCondition.values[0]);\n\t\t\t}\n\t\t}\n\n\t\t// access the interactive chart from the control.\n\t\tconst oInteractiveChart = this.getParent() as Control;\n\t\tconst sDimension = oInteractiveChart.data(\"dimension\");\n\t\tconst sDimensionType = oInteractiveChart.data(\"dimensionType\");\n\t\tlet sDimensionValue = this.getBindingContext()?.getObject(sDimension);\n\t\tif (sDimensionType === \"Edm.DateTimeOffset\") {\n\t\t\tsDimensionValue = VisualFilterUtils._parseDateTime(sDimensionValue) as unknown;\n\t\t}\n\t\tif (oInteractiveChart.data(\"multipleSelectionAllowed\") === false && aSelectableValues.length > 1) {\n\t\t\taSelectableValues = [aSelectableValues[0]];\n\t\t}\n\t\treturn aSelectableValues.includes(sDimensionValue);\n\t},\n\n\t/**\n\t * Get Visual Filter control for the given child control.\n\t * @param potentialVisualFilter Expected instance of Visual Filter child control.\n\t * @returns The parent Visual Filter Buildingblock control instance if found, otherwise null.\n\t */\n\tgetParentVisualFilterControlBB(potentialVisualFilter: ManagedObject | null): VisualFilterBlock | null {\n\t\twhile (potentialVisualFilter && !potentialVisualFilter.isA<VisualFilterBlock>(\"sap.fe.macros.visualfilters.VisualFilter\")) {\n\t\t\tpotentialVisualFilter = potentialVisualFilter.getParent();\n\t\t}\n\t\treturn potentialVisualFilter;\n\t},\n\n\t// THIS IS A FORMATTER\n\tgetFiltersFromConditions(this: ManagedObject, ...aArguments: ConditionObject[][]): Filter[] | undefined {\n\t\tconst oInteractiveChart = this.getParent() as Control;\n\t\tconst oFilterBar = oInteractiveChart.getParent()?.getParent()?.getParent()?.getParent()?.getParent() as IFilterControl;\n\t\tconst aInParameters = oInteractiveChart.data(\"inParameters\").customData;\n\t\tconst bIsDraftSupported = oInteractiveChart.data(\"draftSupported\") === true;\n\t\tconst aPropertyInfoSet = FilterUtils.getFilterPropertyInfo(oFilterBar) as PropertyInfo[];\n\t\tconst mConditions: Record<string, ConditionObject[]> = {};\n\t\tconst aValueListPropertyInfoSet: unknown[] = [];\n\t\tlet oFilters;\n\t\tlet aFilters: Filter[] = [];\n\t\tconst aParameters = oInteractiveChart.data(\"parameters\") as string[];\n\t\tconst oSelectionVariantAnnotation = oInteractiveChart.data(\"selectionVariantAnnotation\") as\n\t\t\t| MetaModelType<SelectionVariantType>\n\t\t\t| SelectionVariantType;\n\t\tconst oInteractiveChartListBinding =\n\t\t\toInteractiveChart.getBinding(\"bars\") || oInteractiveChart.getBinding(\"points\") || oInteractiveChart.getBinding(\"segments\");\n\t\tconst sPath = oInteractiveChartListBinding!.getPath();\n\t\tconst oMetaModel = (oInteractiveChart.getModel() as ODataModel).getMetaModel();\n\t\tconst sEntitySetPath = oInteractiveChartListBinding!.getPath();\n\t\tconst filterConditions = getFiltersConditionsFromSelectionVariant(\n\t\t\tsEntitySetPath,\n\t\t\toMetaModel,\n\t\t\toSelectionVariantAnnotation,\n\t\t\tVisualFilterUtils.getCustomConditions.bind(VisualFilterUtils)\n\t\t);\n\t\tfor (const i in aPropertyInfoSet) {\n\t\t\taPropertyInfoSet[i].typeConfig = TypeMap.getTypeConfig(aPropertyInfoSet[i].dataType, {}, {});\n\t\t}\n\t\tconst oSelectionVariantConditions = VisualFilterUtils.convertFilterCondions(filterConditions);\n\t\t// aInParameters and the bindings to in parameters are in the same order so we can rely on it to create our conditions\n\t\tObject.keys(oSelectionVariantConditions).forEach(function (sKey: string) {\n\t\t\tmConditions[sKey] = oSelectionVariantConditions[sKey];\n\t\t\t//fetch localDataProperty if selection variant key is based on vaue list property\n\t\t\tconst inParameterForKey = aInParameters.find(function (inParameter: { valueListProperty: string }) {\n\t\t\t\treturn inParameter.valueListProperty === sKey;\n\t\t\t});\n\t\t\tconst localDataProperty = inParameterForKey ? inParameterForKey.localDataProperty : sKey;\n\t\t\tif (!aParameters || (aParameters && !aParameters.includes(sKey))) {\n\t\t\t\tfor (const i in aPropertyInfoSet) {\n\t\t\t\t\tconst propertyInfoSet = aPropertyInfoSet[i];\n\t\t\t\t\tif (localDataProperty === propertyInfoSet.name) {\n\t\t\t\t\t\tif (propertyInfoSet?.typeConfig?.baseType === \"DateTime\") {\n\t\t\t\t\t\t\tif (mConditions[sKey]) {\n\t\t\t\t\t\t\t\tmConditions[sKey].forEach(function (condition) {\n\t\t\t\t\t\t\t\t\tcondition.values[0] = VisualFilterUtils._formatDateTime(condition.values[0]);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\taValueListPropertyInfoSet.push({\n\t\t\t\t\t\t\tname: sKey,\n\t\t\t\t\t\t\ttypeConfig: propertyInfoSet.typeConfig\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\taInParameters.forEach(function (oInParameter: { valueListProperty: string; localDataProperty: string }, index: number) {\n\t\t\tif (aArguments[index].length > 0) {\n\t\t\t\t// store conditions with value list property since we are filtering on the value list collection path\n\t\t\t\tmConditions[oInParameter.valueListProperty] = aArguments[index];\n\t\t\t\tif (!aParameters || (aParameters && !aParameters.includes(oInParameter.valueListProperty))) {\n\t\t\t\t\t// aPropertyInfoSet is list of properties from the filter bar but we need to create conditions for the value list\n\t\t\t\t\t// which could have a different collectionPath.\n\t\t\t\t\t// Only typeConfig from aPropertyInfoSet is required for getting the converted filters from conditions\n\t\t\t\t\t// so we update aPropertyInfoSet to have the valueListProperties only\n\t\t\t\t\t// This way conditions will be converted to sap.ui.model.Filter for the value list\n\t\t\t\t\t// This works because for in parameter mapping the property from the main entity type should be of the same type as the value list entity type\n\t\t\t\t\t// TODO: Follow up with MDC to check if they can provide a clean api to convert conditions into filters\n\t\t\t\t\tfor (const i in aPropertyInfoSet) {\n\t\t\t\t\t\t// store conditions with value list property since we are filtering on the value list collection path\n\t\t\t\t\t\tconst propertyInfoSet = aPropertyInfoSet[i];\n\t\t\t\t\t\tif (propertyInfoSet.name === oInParameter.localDataProperty) {\n\t\t\t\t\t\t\tif (propertyInfoSet?.typeConfig?.baseType === \"DateTime\") {\n\t\t\t\t\t\t\t\tif (mConditions[oInParameter.valueListProperty]) {\n\t\t\t\t\t\t\t\t\tmConditions[oInParameter.valueListProperty].forEach(function (condition) {\n\t\t\t\t\t\t\t\t\t\tcondition.values[0] = VisualFilterUtils._formatDateTime(condition.values[0]);\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\taValueListPropertyInfoSet.push({\n\t\t\t\t\t\t\t\tname: oInParameter.valueListProperty,\n\t\t\t\t\t\t\t\ttypeConfig: propertyInfoSet.typeConfig\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tconst oInternalModelContext = oInteractiveChart.getBindingContext(\"internal\") as InternalModelContext;\n\t\tconst sInfoPath = oInteractiveChart.data(\"infoPath\");\n\t\tlet bEnableBinding;\n\t\tconst oResourceBundle = Library.getResourceBundleFor(\"sap.fe.macros\")!;\n\t\tconst aRequiredProperties = CommonHelper.parseCustomData(oInteractiveChart.data(\"requiredProperties\")) as string[];\n\t\tif (aRequiredProperties.length) {\n\t\t\tconst aConditions = Object.keys(mConditions) || [];\n\t\t\tconst aNotMatchedConditions: string[] = [];\n\t\t\taRequiredProperties.forEach(function (requiredPropertyPath: string) {\n\t\t\t\tif (!aConditions.includes(requiredPropertyPath)) {\n\t\t\t\t\taNotMatchedConditions.push(requiredPropertyPath);\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (!aNotMatchedConditions.length) {\n\t\t\t\tbEnableBinding = oInternalModelContext.getProperty(`${sInfoPath}/showError`);\n\t\t\t\toInternalModelContext.setProperty(sInfoPath, {\n\t\t\t\t\terrorMessageTitle: \"\",\n\t\t\t\t\terrorMessage: \"\",\n\t\t\t\t\tshowError: false\n\t\t\t\t});\n\t\t\t} else if (aNotMatchedConditions.length > 1) {\n\t\t\t\toInternalModelContext.setProperty(sInfoPath, {\n\t\t\t\t\terrorMessageTitle: oResourceBundle.getText(\"M_VISUAL_FILTERS_ERROR_MESSAGE_TITLE\"),\n\t\t\t\t\terrorMessage: oResourceBundle.getText(\"M_VISUAL_FILTERS_PROVIDE_FILTER_VAL_MULTIPLEVF\"),\n\t\t\t\t\tshowError: true\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\tconst sLabel =\n\t\t\t\t\toMetaModel.getObject(`${sEntitySetPath}/${aNotMatchedConditions[0]}@com.sap.vocabularies.Common.v1.Label`) ||\n\t\t\t\t\taNotMatchedConditions[0];\n\t\t\t\toInternalModelContext.setProperty(sInfoPath, {\n\t\t\t\t\terrorMessageTitle: oResourceBundle.getText(\"M_VISUAL_FILTERS_ERROR_MESSAGE_TITLE\"),\n\t\t\t\t\terrorMessage: oResourceBundle.getText(\"M_VISUAL_FILTERS_PROVIDE_FILTER_VAL_SINGLEVF\", [sLabel]),\n\t\t\t\t\tshowError: true\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tbEnableBinding = oInternalModelContext.getProperty(`${sInfoPath}/showError`);\n\t\t\toInternalModelContext.setProperty(sInfoPath, { errorMessageTitle: \"\", errorMessage: \"\", showError: false });\n\t\t}\n\n\t\tconst sFilterEntityName = oFilterBar.data(\"entityType\").split(\"/\")[1];\n\t\tconst sChartEntityName = sPath.split(\"/\")[1].split(\"(\")[0];\n\t\tif (aParameters && aParameters.length && sFilterEntityName === sChartEntityName) {\n\t\t\tconst sBindingPath = bEnableBinding\n\t\t\t\t? FilterUtils.getBindingPathForParameters(oFilterBar, mConditions, aPropertyInfoSet, aParameters)\n\t\t\t\t: undefined;\n\n\t\t\tif (sBindingPath) {\n\t\t\t\t(oInteractiveChartListBinding as { sPath?: string }).sPath = sBindingPath;\n\t\t\t}\n\t\t}\n\n\t\tif (aParameters && aParameters.length) {\n\t\t\t//Remove parameters from mConditions since it should not be a part of $filter\n\t\t\taParameters.forEach(function (parameter: string) {\n\t\t\t\tif (mConditions[parameter]) {\n\t\t\t\t\tdelete mConditions[parameter];\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t// On InitialLoad when initiallayout is visual, aPropertyInfoSet is always empty and we cannot get filters from MDCFilterUtil.\n\t\t// Also when SVQualifier is there then we should not change the listbinding filters to empty as we are not getting filters from MDCFilterUtil but\n\t\t// instead we need to not call listbinding.filter and use the template time binding itself.\n\t\tif (Object.keys(mConditions).length > 0 && aValueListPropertyInfoSet.length) {\n\t\t\ttry {\n\t\t\t\toFilters = (MdcFilterUtil.getFilterInfo(oFilterBar, mConditions, aValueListPropertyInfoSet, []) as { filters: Filter })\n\t\t\t\t\t.filters;\n\t\t\t} catch (e) {\n\t\t\t\tLog.debug(\"VisualFilter: Error while getting filters from MDCFilterUtil\");\n\t\t\t}\n\t\t\tif (oFilters) {\n\t\t\t\tif (!oFilters.getFilters()) {\n\t\t\t\t\taFilters.push(oFilters);\n\t\t\t\t} else if (oFilters.getFilters()) {\n\t\t\t\t\taFilters = oFilters.getFilters()!;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (bIsDraftSupported) {\n\t\t\taFilters.push(new Filter(\"IsActiveEntity\", FilterOperator.EQ, true));\n\t\t}\n\t\tif (aFilters && aFilters.length > 0) {\n\t\t\t(oInteractiveChartListBinding as ODataListBinding)?.filter(aFilters);\n\t\t} else if (!Object.keys(mConditions).length) {\n\t\t\t(oInteractiveChartListBinding as ODataListBinding)?.filter();\n\t\t}\n\t\t// update the interactive chart binding\n\t\tif (bEnableBinding) {\n\t\t\tconst visualFilterBB = VisualFilterRuntime.getParentVisualFilterControlBB(oInteractiveChart);\n\t\t\tvisualFilterBB?._setInternalUpdatePending(false);\n\t\t}\n\t\treturn aFilters;\n\t},\n\tgetFilterCounts(this: Control, oConditions: ConditionObject[]): string | undefined {\n\t\tif (this.data(\"multipleSelectionAllowed\") === false && oConditions.length > 0) {\n\t\t\treturn `(1)`;\n\t\t}\n\t\tif (oConditions.length > 0) {\n\t\t\treturn `(${oConditions.length})`;\n\t\t} else {\n\t\t\treturn undefined;\n\t\t}\n\t},\n\n\tscaleVisualFilterValue(\n\t\toValue: string,\n\t\tscaleFactor: number,\n\t\tnumberOfFractionalDigits: number,\n\t\tcurrency: string,\n\t\toRawValue: string | number\n\t): string {\n\t\t// ScaleFactor if defined is priority for formatting\n\t\tif (scaleFactor) {\n\t\t\treturn VisualFilterUtils.getFormattedNumber(oRawValue, scaleFactor, numberOfFractionalDigits);\n\t\t\t// If Scale Factor is not defined, use currency formatting\n\t\t} else if (currency) {\n\t\t\treturn VisualFilterUtils.getFormattedNumber(oRawValue, undefined, undefined, currency);\n\t\t\t// No ScaleFactor and no Currency, use numberOfFractionalDigits defined in DataPoint\n\t\t} else if (numberOfFractionalDigits > 0) {\n\t\t\t// Number of fractional digits shall not exceed 2, unless required by currency\n\t\t\tnumberOfFractionalDigits = numberOfFractionalDigits > 2 ? 2 : numberOfFractionalDigits;\n\t\t\treturn VisualFilterUtils.getFormattedNumber(oRawValue, undefined, numberOfFractionalDigits);\n\t\t} else {\n\t\t\treturn oValue;\n\t\t}\n\t},\n\tfireValueHelp(oEvent: UI5Event<{}, Control>): void {\n\t\toEvent.getSource().getParent()?.getParent()?.getParent()?.getParent()?.fireEvent(\"valueHelpRequest\");\n\t}\n};\n\nObjectPath.set(\"sap.fe.macros.visualfilters.VisualFilterRuntime\", VisualFilterRuntime);\n\nexport default VisualFilterRuntime;\n"],"mappings":"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","ignoreList":[]}