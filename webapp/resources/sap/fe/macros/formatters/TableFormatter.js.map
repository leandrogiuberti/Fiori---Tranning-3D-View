{"version":3,"file":"TableFormatter.js","names":["getMessagetypeOrder","messageType","validateCreationRowFields","fieldValidityObject","fieldKeys","Object","keys","length","every","key","__functionName","getErrorStatusTextVisibilityFormatter","semanticKeyHasDraftIndicator","aFilteredMessages","columnName","isSemanticKeyInFieldGroup","statusVisibility","sCurrentContextPath","this","getBindingContext","getPath","undefined","forEach","oMessage","getType","getTargets","indexOf","rowHighlighting","criticalityValue","hasActiveEntity","isActiveEntity","isDraftMode","contextPath","isInactive","iHighestCriticalityValue","message","MessageType","Error","Warning","Success","Information","None","values","includes","Log","error","isNewObject","navigatedRow","deepestPath","sPath","getColumnWidth","editMode","isPropertiesCacheAvailable","propertyName","useRemUnit","arguments","widthIncludingColumnHeader","isSortableColumn","isColumnRequired","mdcTable","getParent","properties","isA","DelegateUtil","getCachedProperties","getEnhancedFetchedPropertyInfos","property","find","prop","columnWidth","TableSizeHelper","getMDCColumnWidthFromProperty","unitOrTimezone","exportSettings","unit","timezone","SizeHelper","getButtonWidth","FieldEditMode","Editable","unitOrCurrencyProperty","unitProperty","typeConfig","baseType","getColumnWidthForValueHelpTable","isTargetSmallDevice","isSmallDevice","CommonUtils","withUnit","tableFormatter","call","Display","isRatingIndicator","oControl","vContentDisplay","Array","isArray","getContentDisplay","_updateStyleClassForRatingIndicator","fieldWrapper","last","vContentEdit","getContentEdit","addStyleClass","removeStyleClass","getVBoxVisibility","aItems","getItems","bLastElementFound","_len","args","_key","index","sName","hasOwnProperty","_len2","oArgs","_key2","apply","ObjectPath","set"],"sources":["./TableFormatter.ts"],"sourcesContent":["import Log from \"sap/base/Log\";\nimport ObjectPath from \"sap/base/util/ObjectPath\";\nimport CommonUtils from \"sap/fe/core/CommonUtils\";\nimport SizeHelper from \"sap/fe/core/helpers/SizeHelper\";\nimport DelegateUtil from \"sap/fe/macros/DelegateUtil\";\nimport type TableAPI from \"sap/fe/macros/table/TableAPI\";\nimport type { EnhancedFEPropertyInfo } from \"sap/fe/macros/table/TableAPI\";\nimport TableSizeHelper from \"sap/fe/macros/table/TableSizeHelper\";\nimport type Table from \"sap/m/Table\";\nimport type ManagedObject from \"sap/ui/base/ManagedObject\";\nimport type Message from \"sap/ui/core/message/Message\";\nimport MessageType from \"sap/ui/core/message/MessageType\";\nimport FieldEditMode from \"sap/ui/mdc/enums/FieldEditMode\";\nimport type Column from \"sap/ui/mdc/table/Column\";\nimport type MDCTable from \"sap/ui/mdc/valuehelp/content/MDCTable\";\nimport type FieldWrapper from \"../controls/FieldWrapper\";\n\nconst getMessagetypeOrder = function (messageType: string): number {\n\tswitch (messageType) {\n\t\tcase \"Error\":\n\t\t\treturn 4;\n\t\tcase \"Warning\":\n\t\t\treturn 3;\n\t\tcase \"Information\":\n\t\t\treturn 2;\n\t\tcase \"None\":\n\t\t\treturn 1;\n\t\tdefault:\n\t\t\treturn -1;\n\t}\n};\n\n/**\n * Gets the validity of creation row fields.\n * @param fieldValidityObject Object holding the fields\n * @returns `true` if all the fields in the creation row are valid, `false` otherwise\n */\nconst validateCreationRowFields = function (fieldValidityObject?: Record<string, { validity: boolean }>): boolean {\n\tif (!fieldValidityObject) {\n\t\treturn false;\n\t}\n\tconst fieldKeys = Object.keys(fieldValidityObject);\n\treturn (\n\t\tfieldKeys.length > 0 &&\n\t\tfieldKeys.every(function (key) {\n\t\t\treturn fieldValidityObject[key][\"validity\"];\n\t\t})\n\t);\n};\nvalidateCreationRowFields.__functionName = \"sap.fe.macros.formatters.TableFormatter#validateCreationRowFields\";\n\n/**\n * @param this The object status control.\n * @param semanticKeyHasDraftIndicator The property name of the draft indicator.\n * @param aFilteredMessages Array of messages.\n * @param columnName\n * @param isSemanticKeyInFieldGroup Flag which says if semantic key is a part of field group.\n * @returns The value for the visibility property of the object status\n */\nconst getErrorStatusTextVisibilityFormatter = function (\n\tthis: ManagedObject,\n\tsemanticKeyHasDraftIndicator: string,\n\taFilteredMessages: Message[],\n\tcolumnName: string,\n\tisSemanticKeyInFieldGroup?: boolean\n): boolean {\n\tlet statusVisibility = false;\n\tif (aFilteredMessages && aFilteredMessages.length > 0 && (isSemanticKeyInFieldGroup || columnName === semanticKeyHasDraftIndicator)) {\n\t\tconst sCurrentContextPath = this.getBindingContext() ? this.getBindingContext()?.getPath() : undefined;\n\t\taFilteredMessages.forEach((oMessage) => {\n\t\t\tif (oMessage.getType() === \"Error\" && sCurrentContextPath && oMessage.getTargets()[0].indexOf(sCurrentContextPath) === 0) {\n\t\t\t\tstatusVisibility = true;\n\t\t\t\treturn statusVisibility;\n\t\t\t}\n\t\t});\n\t}\n\treturn statusVisibility;\n};\ngetErrorStatusTextVisibilityFormatter.__functionName = \"sap.fe.macros.formatters.TableFormatter#getErrorStatusTextVisibilityFormatter\";\n\n/**\n * Method to calculate the row highlighting based on the criticality value and the messages.\n * @param criticalityValue\n * @param aFilteredMessages\n * @param hasActiveEntity\n * @param isActiveEntity\n * @param isDraftMode\n * @param contextPath\n * @param isInactive\n */\nconst rowHighlighting = function (\n\tthis: ManagedObject,\n\tcriticalityValue: string | number,\n\taFilteredMessages: Message[] | string | undefined,\n\thasActiveEntity: boolean | string | undefined,\n\tisActiveEntity: boolean | string | undefined,\n\tisDraftMode: string,\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tcontextPath: string,\n\tisInactive: boolean | string | undefined\n): MessageType {\n\t// Sanitize string \"undefined\" values to actual undefined\n\taFilteredMessages = aFilteredMessages === \"undefined\" ? undefined : aFilteredMessages;\n\thasActiveEntity = hasActiveEntity === \"undefined\" ? undefined : hasActiveEntity;\n\tisActiveEntity = isActiveEntity === \"undefined\" ? undefined : isActiveEntity;\n\tisInactive = isInactive === \"undefined\" ? undefined : isInactive;\n\tlet iHighestCriticalityValue = -1;\n\tif (aFilteredMessages && aFilteredMessages.length > 0) {\n\t\tconst sCurrentContextPath = this.getBindingContext()?.getPath();\n\t\t(aFilteredMessages as Message[]).forEach((message) => {\n\t\t\tif (\n\t\t\t\tsCurrentContextPath &&\n\t\t\t\tmessage.getTargets()[0].indexOf(sCurrentContextPath) === 0 &&\n\t\t\t\tiHighestCriticalityValue < getMessagetypeOrder(message.getType())\n\t\t\t) {\n\t\t\t\tiHighestCriticalityValue = getMessagetypeOrder(message.getType());\n\t\t\t\tcriticalityValue = message.getType();\n\t\t\t}\n\t\t});\n\t}\n\tif (typeof criticalityValue !== \"string\") {\n\t\tswitch (criticalityValue) {\n\t\t\tcase 1:\n\t\t\t\tcriticalityValue = MessageType.Error;\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tcriticalityValue = MessageType.Warning;\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tcriticalityValue = MessageType.Success;\n\t\t\t\tbreak;\n\t\t\tcase 5:\n\t\t\t\tcriticalityValue = MessageType.Information;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tcriticalityValue = MessageType.None;\n\t\t}\n\t}\n\n\tif (!(Object.values(MessageType) as string[]).includes(criticalityValue)) {\n\t\tLog.error(`'${criticalityValue}' isn't a valid value for a row highlight.`);\n\t\treturn MessageType.None;\n\t}\n\n\t// If we have calculated a criticality <> None, return it\n\tif (criticalityValue !== MessageType.None) {\n\t\treturn criticalityValue as MessageType;\n\t}\n\n\t// If not, we set criticality to 'Information' for newly created rows in Draft mode, and keep 'None' otherwise\n\tconst isNewObject = !hasActiveEntity && !isActiveEntity && !isInactive;\n\treturn isDraftMode === \"true\" && isNewObject ? MessageType.Information : MessageType.None;\n};\nrowHighlighting.__functionName = \"sap.fe.macros.formatters.TableFormatter#rowHighlighting\";\n\nconst navigatedRow = function (this: ManagedObject, deepestPath: string): boolean {\n\tconst sPath = this.getBindingContext()?.getPath();\n\tif (sPath && deepestPath) {\n\t\treturn deepestPath.indexOf(sPath) === 0;\n\t} else {\n\t\treturn false;\n\t}\n};\nnavigatedRow.__functionName = \"sap.fe.macros.formatters.TableFormatter#navigatedRow\";\n\n/**\n * Method to calculate the width of an MDCColumn based on the property definition.\n * @param this The MDCColumn object\n * @param editMode The EditMode of the table\n * @param isPropertiesCacheAvailable Indicates if the properties cache is available\n * @param propertyName The name of the property we want to calculate the width\n * @param useRemUnit Indicates if the rem unit must be concatenated with the column width result\n * @param widthIncludingColumnHeader Indicates if the column header should be a part of the width calculation.\n * @param isSortableColumn Indicates if the column is sortable\n * @param isColumnRequired\n * @returns The width of the column\n */\nconst getColumnWidth = function (\n\tthis: Column,\n\teditMode: FieldEditMode,\n\tisPropertiesCacheAvailable: boolean,\n\tpropertyName: string,\n\tuseRemUnit = true,\n\twidthIncludingColumnHeader = false,\n\tisSortableColumn = false,\n\tisColumnRequired = false\n): string | null | number {\n\tif (!isPropertiesCacheAvailable) {\n\t\treturn null;\n\t}\n\tconst mdcTable = this.getParent() as MDCTable;\n\tlet properties: EnhancedFEPropertyInfo[];\n\tif (mdcTable?.getParent()?.isA(\"sap.ui.mdc.valuehelp.content.MDCTable\")) {\n\t\tproperties = DelegateUtil.getCachedProperties(this.getParent() as MDCTable) as EnhancedFEPropertyInfo[];\n\t} else {\n\t\tproperties = (mdcTable.getParent() as TableAPI).getEnhancedFetchedPropertyInfos();\n\t}\n\tif (!properties) return null;\n\tconst property = properties.find((prop) => prop.key === propertyName);\n\tif (!property) return null;\n\n\tlet columnWidth = TableSizeHelper.getMDCColumnWidthFromProperty(\n\t\tproperty,\n\t\tproperties,\n\t\twidthIncludingColumnHeader,\n\t\tisSortableColumn,\n\t\tisColumnRequired\n\t);\n\tconst unitOrTimezone = property.exportSettings?.unit || property.exportSettings?.timezone;\n\tcolumnWidth += unitOrTimezone ? SizeHelper.getButtonWidth(unitOrTimezone) : 0;\n\tif (editMode === FieldEditMode.Editable) {\n\t\tconst unitOrCurrencyProperty = property.exportSettings?.unitProperty; // the unitProperty attribute is used for currency and unit on the export settings\n\t\tif (unitOrCurrencyProperty) {\n\t\t\tcolumnWidth += 3;\n\t\t}\n\t\tswitch (property.typeConfig?.baseType) {\n\t\t\tcase \"Date\":\n\t\t\tcase \"Time\":\n\t\t\tcase \"DateTime\":\n\t\t\t\tcolumnWidth += 2.8;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t}\n\t}\n\tif (useRemUnit) {\n\t\treturn columnWidth + \"rem\";\n\t}\n\treturn columnWidth;\n};\ngetColumnWidth.__functionName = \"sap.fe.macros.formatters.TableFormatter#getColumnWidth\";\n\n/**\n * Method to calculate the width of an MDCColumn for valueHelp the table.\n * @param this The MDCColumn object\n * @param isPropertiesCacheAvailable Indicates if the properties cache is available\n * @param propertyName The name of the property we want to calculate the width\n * @param isTargetSmallDevice Indicates the current device has a small device\n * @param widthIncludingColumnHeader\n * @returns The width of the column\n */\nconst getColumnWidthForValueHelpTable = function (\n\tthis: Column,\n\tisPropertiesCacheAvailable: boolean,\n\tpropertyName: string,\n\tisTargetSmallDevice: boolean,\n\twidthIncludingColumnHeader = false\n): null | number {\n\tconst isSmallDevice = CommonUtils.isSmallDevice();\n\tconst withUnit = !isSmallDevice;\n\n\treturn (isSmallDevice && isTargetSmallDevice) || (!isSmallDevice && !isTargetSmallDevice)\n\t\t? (tableFormatter.getColumnWidth.call(\n\t\t\t\tthis,\n\t\t\t\tFieldEditMode.Display,\n\t\t\t\tisPropertiesCacheAvailable,\n\t\t\t\tpropertyName,\n\t\t\t\twithUnit,\n\t\t\t\twidthIncludingColumnHeader\n\t\t  ) as null | number)\n\t\t: null;\n};\n\ngetColumnWidthForValueHelpTable.__functionName = \"sap.fe.macros.formatters.TableFormatter#getColumnWidthForValueHelpTable\";\n\ntype FieldWrapperFixed = FieldWrapper & { getContentDisplay: Function; getContentEdit: Function };\nfunction isRatingIndicator(oControl: FieldWrapperFixed): boolean {\n\tif (oControl.isA(\"sap.fe.macros.controls.FieldWrapper\")) {\n\t\tconst vContentDisplay = Array.isArray(oControl.getContentDisplay())\n\t\t\t? oControl.getContentDisplay()[0]\n\t\t\t: oControl.getContentDisplay();\n\t\tif (vContentDisplay && vContentDisplay.isA(\"sap.m.RatingIndicator\")) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nfunction _updateStyleClassForRatingIndicator(fieldWrapper: FieldWrapperFixed, last: boolean): void {\n\tconst vContentDisplay = Array.isArray(fieldWrapper.getContentDisplay())\n\t\t? fieldWrapper.getContentDisplay()[0]\n\t\t: fieldWrapper.getContentDisplay();\n\tconst vContentEdit = Array.isArray(fieldWrapper.getContentEdit()) ? fieldWrapper.getContentEdit()[0] : fieldWrapper.getContentEdit();\n\n\tif (last) {\n\t\tvContentDisplay.addStyleClass(\"sapUiNoMarginBottom\");\n\t\tvContentDisplay.addStyleClass(\"sapUiNoMarginTop\");\n\t\tvContentEdit.removeStyleClass(\"sapUiTinyMarginBottom\");\n\t} else {\n\t\tvContentDisplay.addStyleClass(\"sapUiNoMarginBottom\");\n\t\tvContentDisplay.removeStyleClass(\"sapUiNoMarginTop\");\n\t\tvContentEdit.addStyleClass(\"sapUiTinyMarginBottom\");\n\t}\n}\nfunction getVBoxVisibility(this: Table, ...args: unknown[]): boolean {\n\tconst aItems = this.getItems() as unknown as FieldWrapperFixed[];\n\tlet bLastElementFound = false;\n\tfor (let index = aItems.length - 1; index >= 0; index--) {\n\t\tif (!bLastElementFound) {\n\t\t\tif (args[index] !== true) {\n\t\t\t\tbLastElementFound = true;\n\t\t\t\tif (isRatingIndicator(aItems[index])) {\n\t\t\t\t\t_updateStyleClassForRatingIndicator(aItems[index], true);\n\t\t\t\t} else {\n\t\t\t\t\taItems[index].removeStyleClass(\"sapUiTinyMarginBottom\");\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (isRatingIndicator(aItems[index])) {\n\t\t\t_updateStyleClassForRatingIndicator(aItems[index], false);\n\t\t} else {\n\t\t\taItems[index].addStyleClass(\"sapUiTinyMarginBottom\");\n\t\t}\n\t}\n\treturn true;\n}\ngetVBoxVisibility.__functionName = \"sap.fe.macros.formatters.TableFormatter#getVBoxVisibility\";\n\n// See https://www.typescriptlang.org/docs/handbook/functions.html#this-parameters for more detail on this weird syntax\n/**\n * Collection of table formatters.\n * @param this The context\n * @param sName The inner function name\n * @param oArgs The inner function parameters\n * @returns The value from the inner function\n */\nconst tableFormatter = function (this: object, sName: string, ...oArgs: unknown[]): unknown {\n\tif (tableFormatter.hasOwnProperty(sName)) {\n\t\treturn (tableFormatter as unknown as Record<string, Function>)[sName].apply(this, oArgs);\n\t} else {\n\t\treturn \"\";\n\t}\n};\n\ntableFormatter.validateCreationRowFields = validateCreationRowFields;\ntableFormatter.rowHighlighting = rowHighlighting;\ntableFormatter.navigatedRow = navigatedRow;\ntableFormatter.getErrorStatusTextVisibilityFormatter = getErrorStatusTextVisibilityFormatter;\ntableFormatter.getVBoxVisibility = getVBoxVisibility;\ntableFormatter.isRatingIndicator = isRatingIndicator; // for unit tests\ntableFormatter.getColumnWidth = getColumnWidth;\ntableFormatter.getColumnWidthForValueHelpTable = getColumnWidthForValueHelpTable;\n\nObjectPath.set(\"sap.fe.macros.formatters.TableFormatter\", tableFormatter);\n\nexport default tableFormatter;\n"],"mappings":"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","ignoreList":[]}