{"version":3,"names":["types","createEdmType","attributeEDMType","EdmBoolean","EdmDate","DateTimeOffset","Decimal","Guid","Int32","EdmString","parseAttributeValue","type","value","oDataType","parseValue","parseInt","parseFloat","getType","formatter","key","template","context","getBindingContext","undefined","attributes","getObject","length","placeholderReplacer","match","attributeSource","attributeName","source","toString","resolvedAttribute","find","attribute","SitnInstceAttribSource","SitnInstceAttribName","Log","error","_InstanceAttributeValue","resolvedAttributeType","SitnInstceAttribEntityType","map","parsedValue","SitnInstceAttribValue","formatValue","join","replace","_exports","bindText","textTemplatePropertyPath","parts","path"],"sourceRoot":".","sources":["SituationsText.ts"],"sourcesContent":["import Log from \"sap/base/Log\";\nimport type { PropertyBindingInfo } from \"sap/ui/base/ManagedObject\";\nimport type Control from \"sap/ui/core/Control\";\nimport EdmBoolean from \"sap/ui/model/odata/type/Boolean\";\nimport EdmDate from \"sap/ui/model/odata/type/Date\";\nimport DateTimeOffset from \"sap/ui/model/odata/type/DateTimeOffset\";\nimport Decimal from \"sap/ui/model/odata/type/Decimal\";\nimport Guid from \"sap/ui/model/odata/type/Guid\";\nimport Int32 from \"sap/ui/model/odata/type/Int32\";\nimport type ODataType from \"sap/ui/model/odata/type/ODataType\";\nimport EdmString from \"sap/ui/model/odata/type/String\";\n\n/**\n * Attribute type.\n *\n * Situation Handling supports a subset of the EDM types.\n */\ntype InstanceAttributeEdmType =\n\t| \"EDM.STRING\"\n\t| \"EDM.DATE\"\n\t| \"EDM.DATETIME\"\n\t| \"EDM.DATETIMEOFFSET\"\n\t| \"EDM.INT32\"\n\t| \"EDM.DECIMAL\"\n\t| \"EDM.GUID\"\n\t| \"EDM.BOOLEAN\";\n\n/**\n * Attribute.\n */\nexport type InstanceAttribute = {\n\tSitnInstceAttribSource: string;\n\tSitnInstceAttribName: string;\n\tSitnInstceAttribEntityType: InstanceAttributeEdmType;\n\t_InstanceAttributeValue?: {\n\t\tSitnInstceAttribValue: string;\n\t}[];\n};\n\nconst types: Partial<Record<InstanceAttributeEdmType, ODataType>> = {};\n\nfunction createEdmType(attributeEDMType: InstanceAttributeEdmType): ODataType {\n\tswitch (attributeEDMType) {\n\t\tcase \"EDM.BOOLEAN\":\n\t\t\treturn new EdmBoolean();\n\t\tcase \"EDM.DATE\":\n\t\tcase \"EDM.DATETIME\":\n\t\t\treturn new EdmDate();\n\t\tcase \"EDM.DATETIMEOFFSET\":\n\t\t\treturn new DateTimeOffset();\n\t\tcase \"EDM.DECIMAL\":\n\t\t\treturn new Decimal();\n\t\tcase \"EDM.GUID\":\n\t\t\treturn new Guid();\n\t\tcase \"EDM.INT32\":\n\t\t\treturn new Int32();\n\t\tcase \"EDM.STRING\":\n\t\t\treturn new EdmString();\n\t\tdefault:\n\t\t\treturn createEdmType(\"EDM.STRING\");\n\t}\n}\n\nfunction parseAttributeValue(type: InstanceAttributeEdmType, value: string, oDataType: ODataType): unknown {\n\tswitch (type) {\n\t\tcase \"EDM.STRING\":\n\t\t\treturn value;\n\t\tcase \"EDM.DATE\":\n\t\tcase \"EDM.DATETIME\":\n\t\tcase \"EDM.DATETIMEOFFSET\":\n\t\t\treturn oDataType.parseValue(value, \"string\");\n\t\tcase \"EDM.INT32\":\n\t\t\treturn parseInt(value, 10);\n\t\tcase \"EDM.DECIMAL\":\n\t\t\treturn parseFloat(value);\n\t\tcase \"EDM.GUID\":\n\t\t\treturn value;\n\t\tcase \"EDM.BOOLEAN\":\n\t\t\t// ABAP style: 'X' = true, '' = false\n\t\t\treturn value === \"X\";\n\t\tdefault:\n\t\t\treturn value;\n\t}\n}\n\nfunction getType(attributeEDMType: InstanceAttributeEdmType): ODataType {\n\tlet type = types[attributeEDMType];\n\tif (!type) {\n\t\ttype = createEdmType(attributeEDMType);\n\t\ttypes[attributeEDMType] = type;\n\t}\n\treturn type;\n}\n\nexport function formatter(this: Control, key: string | undefined | null, template: string | undefined | null): string {\n\tconst context = this.getBindingContext();\n\tif (key === undefined || key === null || template === undefined || template === null || !context) {\n\t\treturn \"\";\n\t}\n\n\tconst attributes = context.getObject(\"_InstanceAttribute\") as InstanceAttribute[] | null | undefined;\n\tif (attributes === undefined || attributes === null || attributes.length === 0) {\n\t\treturn template;\n\t}\n\n\tconst placeholderReplacer = (match: string, attributeSource: string, attributeName: string): string => {\n\t\tconst source = parseInt(attributeSource, 10).toString(); // remove leading zeros from the attribute source\n\n\t\tconst resolvedAttribute: InstanceAttribute | undefined = attributes.find(\n\t\t\t(attribute) => attribute.SitnInstceAttribSource === source && attribute.SitnInstceAttribName === attributeName\n\t\t);\n\n\t\tif (resolvedAttribute === undefined) {\n\t\t\tLog.error(`Failed to resolve attribute ${attributeSource}.${attributeName}`);\n\t\t\treturn \"\";\n\t\t}\n\n\t\tif (!resolvedAttribute._InstanceAttributeValue) {\n\t\t\tLog.error(`Failed to resolve a value for attribute ${attributeSource}.${attributeName}`);\n\t\t\treturn \"\";\n\t\t}\n\n\t\tconst resolvedAttributeType = getType(resolvedAttribute.SitnInstceAttribEntityType);\n\n\t\t// Format the value(s) - if there are multiple, concatenate them\n\t\treturn resolvedAttribute._InstanceAttributeValue\n\t\t\t.map((value) => {\n\t\t\t\tconst parsedValue = parseAttributeValue(\n\t\t\t\t\tresolvedAttribute.SitnInstceAttribEntityType,\n\t\t\t\t\tvalue.SitnInstceAttribValue,\n\t\t\t\t\tresolvedAttributeType\n\t\t\t\t);\n\t\t\t\treturn resolvedAttributeType.formatValue(parsedValue, \"string\");\n\t\t\t})\n\t\t\t.join(\", \");\n\t};\n\n\t// Replace placeholders for attribute values.\n\t// Their format is {<digitsequence>.<something>} - e.g. {01.PURCHASECONTRACT}\n\treturn template.replace(/\\{(\\d+)\\.([^}]+)}/g, placeholderReplacer);\n}\n\nexport function bindText(textTemplatePropertyPath: string): PropertyBindingInfo {\n\treturn {\n\t\tparts: [{ path: \"SitnInstceKey\" }, { path: `_InstanceText/${textTemplatePropertyPath}` }],\n\t\tformatter: formatter\n\t};\n}\n"],"mappings":"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","ignoreList":[],"file":"SituationsText-dbg.js"}