{"version":3,"file":"SituationsIndicator.js","names":["SituationsIndicator","_dec","defineUI5Class","_dec2","property","type","required","_dec3","_class","_class2","_BuildingBlock","properties","others","_this","call","this","_initializerDefineProperty","_descriptor","_descriptor2","_exports","_inheritsLoose","_proto","prototype","onMetadataAvailable","content","createContent","getSituationsNavigationProperty","context","navigationProperties","_type","targetType","entityType","situationsNavProps","filter","navigationProperty","isCollection","annotations","Common","SAPObjectNodeType","Name","situationsNavProp","length","undefined","navPropNames","map","prop","name","join","Log","error","onPress","event","pageController","getPageController","showPopover","targetEntityType","getDataModelObjectForMetaPath","contextPath","numberOfSituations","pathInModel","visible","propertyPath","greaterThan","and","equal","text","ifElse","tooltip","formatResult","getTranslatedText","standardFormatter","formatPluralMessageConditionally","_jsx","Button","ButtonType","Attention","icon","compileExpression","press","oEvent","BuildingBlock","_applyDecoratedDescriptor","configurable","enumerable","writable","initializer"],"sources":["./SituationsIndicator.tsx"],"sourcesContent":["import type { EntitySet, EntityType, NavigationProperty, Singleton } from \"@sap-ux/vocabularies-types\";\nimport Log from \"sap/base/Log\";\nimport type { BindingToolkitExpression } from \"sap/fe/base/BindingToolkit\";\nimport { and, compileExpression, equal, formatResult, greaterThan, ifElse, pathInModel } from \"sap/fe/base/BindingToolkit\";\nimport { defineUI5Class, property, type PropertiesOf } from \"sap/fe/base/ClassSupport\";\nimport BuildingBlock from \"sap/fe/core/buildingBlocks/BuildingBlock\";\nimport standardFormatter from \"sap/fe/core/formatters/StandardFormatter\";\nimport { showPopover } from \"sap/fe/macros/situations/SituationsPopover\";\nimport type { Button$PressEvent } from \"sap/m/Button\";\nimport Button from \"sap/m/Button\";\nimport { ButtonType } from \"sap/m/library\";\nimport type Control from \"sap/ui/mdc/Control\";\nimport type { $ControlSettings } from \"sap/ui/mdc/Control\";\n\n@defineUI5Class(\"sap.fe.macros.situations.SituationsIndicator\")\nexport default class SituationsIndicator extends BuildingBlock<Control> {\n\t@property({\n\t\ttype: \"string\",\n\t\trequired: true\n\t})\n\tcontextPath!: string;\n\n\t@property({\n\t\ttype: \"string\",\n\t\trequired: false\n\t})\n\tpropertyPath?: string;\n\n\tconstructor(properties: $ControlSettings & PropertiesOf<SituationsIndicator>, others?: $ControlSettings) {\n\t\tsuper(properties, others);\n\t}\n\n\t/**\n\t * Handler for the onMetadataAvailable event.\n\t */\n\tonMetadataAvailable(): void {\n\t\tthis.content = this.createContent();\n\t}\n\n\t/**\n\t * Get path to the SAP Situations for the entity type that is situation-enabled.\n\t * @param context Context\n\t * @returns The situations navigation property\n\t */\n\tstatic getSituationsNavigationProperty(\n\t\tcontext: EntitySet | Singleton | EntityType | NavigationProperty\n\t): NavigationProperty | undefined {\n\t\tlet navigationProperties: NavigationProperty[];\n\t\tswitch (context._type) {\n\t\t\tcase \"NavigationProperty\":\n\t\t\t\tnavigationProperties = context.targetType.navigationProperties;\n\t\t\t\tbreak;\n\t\t\tcase \"EntityType\":\n\t\t\t\tnavigationProperties = context.navigationProperties;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tnavigationProperties = context.entityType.navigationProperties;\n\t\t}\n\n\t\tconst situationsNavProps = navigationProperties.filter(\n\t\t\t(navigationProperty) =>\n\t\t\t\t!navigationProperty.isCollection &&\n\t\t\t\tnavigationProperty.targetType.annotations.Common?.SAPObjectNodeType?.Name === \"BusinessSituation\"\n\t\t);\n\n\t\tconst situationsNavProp: NavigationProperty | undefined = situationsNavProps.length >= 1 ? situationsNavProps[0] : undefined;\n\n\t\t// only one navigation property may lead to an entity tagged as \"BusinessSituation\"\n\t\tif (situationsNavProps.length > 1) {\n\t\t\tconst navPropNames = situationsNavProps.map((prop) => `'${prop.name}'`).join(\", \");\n\n\t\t\tlet name: string;\n\t\t\tswitch (context._type) {\n\t\t\t\tcase \"NavigationProperty\":\n\t\t\t\t\tname = context.targetType.name;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"EntityType\":\n\t\t\t\t\tname = context.name;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tname = context.entityType.name;\n\t\t\t}\n\n\t\t\tLog.error(`Entity type '${name}' has multiple paths to SAP Situations (${navPropNames}). Using '${situationsNavProp?.name}'.\nHint: Make sure there is at most one navigation property whose target entity type is annotated with\n<Annotation Term=\"com.sap.vocabularies.Common.v1.SAPObjectNodeType\">\n  <Record>\n    <PropertyValue Property=\"Name\" String=\"BusinessSituation\" />\n  </Record>\n</Annotation>.`);\n\t\t}\n\n\t\treturn situationsNavProp;\n\t}\n\n\t/**\n\t * Handler for the press event to open popover with the situations.\n\t * @param event Button press event\n\t * @param name Situation navigation property name\n\t */\n\tprivate onPress(event: Button$PressEvent, name: string): void {\n\t\tconst pageController = this.getPageController();\n\t\tif (pageController) {\n\t\t\tshowPopover(pageController, event, name);\n\t\t}\n\t}\n\n\t/**\n\t * Creates the content.\n\t * @returns The content of the building block.\n\t */\n\tcreateContent(): Control | undefined {\n\t\tconst targetEntityType = this.getDataModelObjectForMetaPath(this.contextPath)?.targetEntityType;\n\t\tif (!targetEntityType) {\n\t\t\t// We weren't able to find the targetEntityType object, unlikely but could happen\n\t\t\treturn;\n\t\t}\n\t\tconst situationsNavProp = SituationsIndicator.getSituationsNavigationProperty(targetEntityType);\n\t\tif (!situationsNavProp) {\n\t\t\t// No path to SAP Situations. That is, the entity type is not situation-enabled. Ignore this fragment.\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst numberOfSituations = pathInModel(`${situationsNavProp.name}/SitnNumberOfInstances`);\n\n\t\t// Indicator visibility\n\t\tlet visible: BindingToolkitExpression<boolean>;\n\t\tif (!this.propertyPath) {\n\t\t\t// no propertyPath --> visibility depends on the number of situations only\n\t\t\tvisible = greaterThan(numberOfSituations, 0);\n\t\t} else {\n\t\t\t// propertyPath --> visibility depends on the number of situations and on the semantic key used for showing indicators\n\t\t\tvisible = and(\n\t\t\t\tgreaterThan(numberOfSituations, 0),\n\t\t\t\tequal(pathInModel(\"semanticKeyHasDraftIndicator\", \"internal\"), this.propertyPath)\n\t\t\t);\n\t\t}\n\n\t\t// Button text: the number of situations if there are multiple, the empty string otherwise\n\t\tconst text = ifElse(greaterThan(numberOfSituations, 1), numberOfSituations, \"\");\n\n\t\t// Button tooltip: \"There is one situation\" / \"There are <n> situations\"\n\t\tconst tooltip = formatResult(\n\t\t\t[this.getTranslatedText(\"situationsTooltipSingular\"), this.getTranslatedText(\"situationsTooltipPlural\"), numberOfSituations],\n\t\t\tstandardFormatter.formatPluralMessageConditionally\n\t\t);\n\n\t\treturn (\n\t\t\t<Button\n\t\t\t\ttype={ButtonType.Attention}\n\t\t\t\ticon=\"sap-icon://alert\"\n\t\t\t\ttext={text}\n\t\t\t\ttooltip={compileExpression(tooltip)}\n\t\t\t\tvisible={visible}\n\t\t\t\tpress={(oEvent: Button$PressEvent): void => this.onPress(oEvent, situationsNavProp.name)}\n\t\t\t/>\n\t\t);\n\t}\n}\n"],"mappings":"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","ignoreList":[]}