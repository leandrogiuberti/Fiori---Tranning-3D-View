{"version":3,"names":["SituationsIndicator","_dec","defineUI5Class","_dec2","property","type","required","_dec3","_class","_class2","_BuildingBlock","properties","others","_this","call","_initializerDefineProperty","_descriptor","_descriptor2","_exports","_inheritsLoose","_proto","prototype","onMetadataAvailable","content","createContent","getSituationsNavigationProperty","context","navigationProperties","_type","targetType","entityType","situationsNavProps","filter","navigationProperty","isCollection","annotations","Common","SAPObjectNodeType","Name","situationsNavProp","length","undefined","navPropNames","map","prop","name","join","Log","error","onPress","event","pageController","getPageController","showPopover","targetEntityType","getDataModelObjectForMetaPath","contextPath","numberOfSituations","pathInModel","visible","propertyPath","greaterThan","and","equal","text","ifElse","tooltip","formatResult","getTranslatedText","standardFormatter","formatPluralMessageConditionally","_jsx","Button","ButtonType","Attention","icon","compileExpression","press","oEvent","BuildingBlock","_applyDecoratedDescriptor","configurable","enumerable","writable","initializer"],"sourceRoot":".","sources":["SituationsIndicator.tsx"],"sourcesContent":["import type { EntitySet, EntityType, NavigationProperty, Singleton } from \"@sap-ux/vocabularies-types\";\nimport Log from \"sap/base/Log\";\nimport type { BindingToolkitExpression } from \"sap/fe/base/BindingToolkit\";\nimport { and, compileExpression, equal, formatResult, greaterThan, ifElse, pathInModel } from \"sap/fe/base/BindingToolkit\";\nimport { defineUI5Class, property, type PropertiesOf } from \"sap/fe/base/ClassSupport\";\nimport BuildingBlock from \"sap/fe/core/buildingBlocks/BuildingBlock\";\nimport standardFormatter from \"sap/fe/core/formatters/StandardFormatter\";\nimport { showPopover } from \"sap/fe/macros/situations/SituationsPopover\";\nimport type { Button$PressEvent } from \"sap/m/Button\";\nimport Button from \"sap/m/Button\";\nimport { ButtonType } from \"sap/m/library\";\nimport type Control from \"sap/ui/mdc/Control\";\nimport type { $ControlSettings } from \"sap/ui/mdc/Control\";\n\n@defineUI5Class(\"sap.fe.macros.situations.SituationsIndicator\")\nexport default class SituationsIndicator extends BuildingBlock<Control> {\n\t@property({\n\t\ttype: \"string\",\n\t\trequired: true\n\t})\n\tcontextPath!: string;\n\n\t@property({\n\t\ttype: \"string\",\n\t\trequired: false\n\t})\n\tpropertyPath?: string;\n\n\tconstructor(properties: $ControlSettings & PropertiesOf<SituationsIndicator>, others?: $ControlSettings) {\n\t\tsuper(properties, others);\n\t}\n\n\t/**\n\t * Handler for the onMetadataAvailable event.\n\t */\n\tonMetadataAvailable(): void {\n\t\tthis.content = this.createContent();\n\t}\n\n\t/**\n\t * Get path to the SAP Situations for the entity type that is situation-enabled.\n\t * @param context Context\n\t * @returns The situations navigation property\n\t */\n\tstatic getSituationsNavigationProperty(\n\t\tcontext: EntitySet | Singleton | EntityType | NavigationProperty\n\t): NavigationProperty | undefined {\n\t\tlet navigationProperties: NavigationProperty[];\n\t\tswitch (context._type) {\n\t\t\tcase \"NavigationProperty\":\n\t\t\t\tnavigationProperties = context.targetType.navigationProperties;\n\t\t\t\tbreak;\n\t\t\tcase \"EntityType\":\n\t\t\t\tnavigationProperties = context.navigationProperties;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tnavigationProperties = context.entityType.navigationProperties;\n\t\t}\n\n\t\tconst situationsNavProps = navigationProperties.filter(\n\t\t\t(navigationProperty) =>\n\t\t\t\t!navigationProperty.isCollection &&\n\t\t\t\tnavigationProperty.targetType.annotations.Common?.SAPObjectNodeType?.Name === \"BusinessSituation\"\n\t\t);\n\n\t\tconst situationsNavProp: NavigationProperty | undefined = situationsNavProps.length >= 1 ? situationsNavProps[0] : undefined;\n\n\t\t// only one navigation property may lead to an entity tagged as \"BusinessSituation\"\n\t\tif (situationsNavProps.length > 1) {\n\t\t\tconst navPropNames = situationsNavProps.map((prop) => `'${prop.name}'`).join(\", \");\n\n\t\t\tlet name: string;\n\t\t\tswitch (context._type) {\n\t\t\t\tcase \"NavigationProperty\":\n\t\t\t\t\tname = context.targetType.name;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"EntityType\":\n\t\t\t\t\tname = context.name;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tname = context.entityType.name;\n\t\t\t}\n\n\t\t\tLog.error(`Entity type '${name}' has multiple paths to SAP Situations (${navPropNames}). Using '${situationsNavProp?.name}'.\nHint: Make sure there is at most one navigation property whose target entity type is annotated with\n<Annotation Term=\"com.sap.vocabularies.Common.v1.SAPObjectNodeType\">\n  <Record>\n    <PropertyValue Property=\"Name\" String=\"BusinessSituation\" />\n  </Record>\n</Annotation>.`);\n\t\t}\n\n\t\treturn situationsNavProp;\n\t}\n\n\t/**\n\t * Handler for the press event to open popover with the situations.\n\t * @param event Button press event\n\t * @param name Situation navigation property name\n\t */\n\tprivate onPress(event: Button$PressEvent, name: string): void {\n\t\tconst pageController = this.getPageController();\n\t\tif (pageController) {\n\t\t\tshowPopover(pageController, event, name);\n\t\t}\n\t}\n\n\t/**\n\t * Creates the content.\n\t * @returns The content of the building block.\n\t */\n\tcreateContent(): Control | undefined {\n\t\tconst targetEntityType = this.getDataModelObjectForMetaPath(this.contextPath)?.targetEntityType;\n\t\tif (!targetEntityType) {\n\t\t\t// We weren't able to find the targetEntityType object, unlikely but could happen\n\t\t\treturn;\n\t\t}\n\t\tconst situationsNavProp = SituationsIndicator.getSituationsNavigationProperty(targetEntityType);\n\t\tif (!situationsNavProp) {\n\t\t\t// No path to SAP Situations. That is, the entity type is not situation-enabled. Ignore this fragment.\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst numberOfSituations = pathInModel(`${situationsNavProp.name}/SitnNumberOfInstances`);\n\n\t\t// Indicator visibility\n\t\tlet visible: BindingToolkitExpression<boolean>;\n\t\tif (!this.propertyPath) {\n\t\t\t// no propertyPath --> visibility depends on the number of situations only\n\t\t\tvisible = greaterThan(numberOfSituations, 0);\n\t\t} else {\n\t\t\t// propertyPath --> visibility depends on the number of situations and on the semantic key used for showing indicators\n\t\t\tvisible = and(\n\t\t\t\tgreaterThan(numberOfSituations, 0),\n\t\t\t\tequal(pathInModel(\"semanticKeyHasDraftIndicator\", \"internal\"), this.propertyPath)\n\t\t\t);\n\t\t}\n\n\t\t// Button text: the number of situations if there are multiple, the empty string otherwise\n\t\tconst text = ifElse(greaterThan(numberOfSituations, 1), numberOfSituations, \"\");\n\n\t\t// Button tooltip: \"There is one situation\" / \"There are <n> situations\"\n\t\tconst tooltip = formatResult(\n\t\t\t[this.getTranslatedText(\"situationsTooltipSingular\"), this.getTranslatedText(\"situationsTooltipPlural\"), numberOfSituations],\n\t\t\tstandardFormatter.formatPluralMessageConditionally\n\t\t);\n\n\t\treturn (\n\t\t\t<Button\n\t\t\t\ttype={ButtonType.Attention}\n\t\t\t\ticon=\"sap-icon://alert\"\n\t\t\t\ttext={text}\n\t\t\t\ttooltip={compileExpression(tooltip)}\n\t\t\t\tvisible={visible}\n\t\t\t\tpress={(oEvent: Button$PressEvent): void => this.onPress(oEvent, situationsNavProp.name)}\n\t\t\t/>\n\t\t);\n\t}\n}\n"],"mappings":"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","ignoreList":[],"file":"SituationsIndicator-dbg.js"}