{"version":3,"names":["getDisplayProperty","propertyObjectPath","propertyConverted","hasValueHelp","getDisplayMode","_exports","getFilterFieldDisplayFormat","propertyInterface","oTextAnnotation","annotations","Common","Text","bHasValueHelp","entityTextArrangement","targetEntityType","UI","TextArrangement","_getDisplayModeFromValueHelp","Interface","context","metaModel","getModel","requestValueListInfo","getPath","then","valueListInfo","firstKey","Object","keys","firstValueListInfo","valueListParameter","Parameters","find","element","LocalDataProperty","$PropertyPath","targetObject","name","valueListProperty","ValueListProperty","MetaModelConverter","getInvolvedDataModelObjects","createBindingContext","CollectionPath"],"sourceRoot":".","sources":["FilterFieldTemplating.ts"],"sourcesContent":["import type { DataModelObjectPath } from \"sap/fe/core/templating/DataModelPathHelper\";\nimport { hasValueHelp } from \"sap/fe/core/templating/PropertyHelper\";\nimport { getDisplayMode } from \"sap/fe/core/templating/UIFormatters\";\n\nimport type { Property } from \"@sap-ux/vocabularies-types\";\nimport * as MetaModelConverter from \"sap/fe/core/converters/MetaModelConverter\";\nimport type { ComputedAnnotationInterface } from \"sap/fe/core/templating/UIFormatters\";\nimport type Context from \"sap/ui/model/odata/v4/Context\";\nimport type ODataMetaModel from \"sap/ui/model/odata/v4/ODataMetaModel\";\nimport type { ValueListInfo } from \"sap/ui/model/odata/v4/ODataMetaModel\";\n\nexport const getDisplayProperty = function (propertyObjectPath: DataModelObjectPath<Property>, propertyConverted: Property): string {\n\treturn hasValueHelp(propertyConverted) ? getDisplayMode(propertyObjectPath) : \"Value\";\n};\n\nexport const getFilterFieldDisplayFormat = async function (\n\tpropertyObjectPath: DataModelObjectPath<Property>,\n\tpropertyConverted: Property,\n\tpropertyInterface: ComputedAnnotationInterface\n): Promise<string> {\n\tconst oTextAnnotation = propertyConverted?.annotations?.Common?.Text;\n\tif (oTextAnnotation) {\n\t\t// The text annotation should be on the property defined\n\t\treturn getDisplayProperty(propertyObjectPath, propertyConverted);\n\t}\n\tconst bHasValueHelp = hasValueHelp(propertyConverted);\n\tif (bHasValueHelp) {\n\t\t// Exceptional case for missing text annotation on the property (retrieve text from value list)\n\t\t// Consider TextArrangement at EntityType otherwise set default display format 'DescriptionValue'\n\t\tconst entityTextArrangement = propertyObjectPath?.targetEntityType?.annotations?.UI?.TextArrangement;\n\t\treturn entityTextArrangement\n\t\t\t? getDisplayMode(propertyObjectPath)\n\t\t\t: _getDisplayModeFromValueHelp(propertyInterface, propertyObjectPath);\n\t}\n\treturn \"Value\";\n};\n\n/**\n * Method to determine the display mode from the value help.\n * @param Interface The current templating context\n * @param propertyObjectPath The global path to reach the entitySet\n * @returns A promise with the string 'DescriptionValue' or 'Value', depending on whether a text annotation exists for the property in the value help\n * Hint: A text arrangement is consciously ignored. If the text is retrieved from the value help, the text arrangement of the value help property isnÂ´t considered. Instead, the default text arrangement #TextFirst\n * is used.\n */\nexport async function _getDisplayModeFromValueHelp(\n\tInterface: ComputedAnnotationInterface,\n\tpropertyObjectPath: DataModelObjectPath<Property>\n): Promise<string> {\n\tconst context = Interface.context as unknown as Context;\n\tconst metaModel = Interface.context.getModel() as ODataMetaModel;\n\n\treturn metaModel.requestValueListInfo(context.getPath(), true, context).then(function (valueListInfo) {\n\t\tconst firstKey = Object.keys(valueListInfo)[0];\n\t\tconst firstValueListInfo = valueListInfo[firstKey] as ValueListInfo;\n\t\tconst valueListParameter = firstValueListInfo.Parameters?.find((element) => {\n\t\t\treturn element.LocalDataProperty?.$PropertyPath === propertyObjectPath?.targetObject?.name;\n\t\t});\n\t\tconst valueListProperty = valueListParameter?.ValueListProperty;\n\t\tconst propertyConverted = MetaModelConverter.getInvolvedDataModelObjects<Property>(\n\t\t\tmetaModel.createBindingContext(\"/\" + firstValueListInfo.CollectionPath + \"/\" + valueListProperty)!\n\t\t);\n\t\treturn getDisplayMode(propertyConverted);\n\t});\n}\n"],"mappings":";;;;;;;;;;EAWO,MAAMA,kBAAkB,GAAG,SAAAA,CAAUC,kBAAiD,EAAEC,iBAA2B,EAAU;IACnI,OAAOC,YAAY,CAACD,iBAAiB,CAAC,GAAGE,cAAc,CAACH,kBAAkB,CAAC,GAAG,OAAO;EACtF,CAAC;EAACI,QAAA,CAAAL,kBAAA,GAAAA,kBAAA;EAEK,MAAMM,2BAA2B,GAAG,eAAAA,CAC1CL,kBAAiD,EACjDC,iBAA2B,EAC3BK,iBAA8C,EAC5B;IAClB,MAAMC,eAAe,GAAGN,iBAAiB,EAAEO,WAAW,EAAEC,MAAM,EAAEC,IAAI;IACpE,IAAIH,eAAe,EAAE;MACpB;MACA,OAAOR,kBAAkB,CAACC,kBAAkB,EAAEC,iBAAiB,CAAC;IACjE;IACA,MAAMU,aAAa,GAAGT,YAAY,CAACD,iBAAiB,CAAC;IACrD,IAAIU,aAAa,EAAE;MAClB;MACA;MACA,MAAMC,qBAAqB,GAAGZ,kBAAkB,EAAEa,gBAAgB,EAAEL,WAAW,EAAEM,EAAE,EAAEC,eAAe;MACpG,OAAOH,qBAAqB,GACzBT,cAAc,CAACH,kBAAkB,CAAC,GAClCgB,4BAA4B,CAACV,iBAAiB,EAAEN,kBAAkB,CAAC;IACvE;IACA,OAAO,OAAO;EACf,CAAC;;EAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAPAI,QAAA,CAAAC,2BAAA,GAAAA,2BAAA;EAQO,eAAeW,4BAA4BA,CACjDC,SAAsC,EACtCjB,kBAAiD,EAC/B;IAClB,MAAMkB,OAAO,GAAGD,SAAS,CAACC,OAA6B;IACvD,MAAMC,SAAS,GAAGF,SAAS,CAACC,OAAO,CAACE,QAAQ,CAAC,CAAmB;IAEhE,OAAOD,SAAS,CAACE,oBAAoB,CAACH,OAAO,CAACI,OAAO,CAAC,CAAC,EAAE,IAAI,EAAEJ,OAAO,CAAC,CAACK,IAAI,CAAC,UAAUC,aAAa,EAAE;MACrG,MAAMC,QAAQ,GAAGC,MAAM,CAACC,IAAI,CAACH,aAAa,CAAC,CAAC,CAAC,CAAC;MAC9C,MAAMI,kBAAkB,GAAGJ,aAAa,CAACC,QAAQ,CAAkB;MACnE,MAAMI,kBAAkB,GAAGD,kBAAkB,CAACE,UAAU,EAAEC,IAAI,CAAEC,OAAO,IAAK;QAC3E,OAAOA,OAAO,CAACC,iBAAiB,EAAEC,aAAa,KAAKlC,kBAAkB,EAAEmC,YAAY,EAAEC,IAAI;MAC3F,CAAC,CAAC;MACF,MAAMC,iBAAiB,GAAGR,kBAAkB,EAAES,iBAAiB;MAC/D,MAAMrC,iBAAiB,GAAGsC,kBAAkB,CAACC,2BAA2B,CACvErB,SAAS,CAACsB,oBAAoB,CAAC,GAAG,GAAGb,kBAAkB,CAACc,cAAc,GAAG,GAAG,GAAGL,iBAAiB,CACjG,CAAC;MACD,OAAOlC,cAAc,CAACF,iBAAiB,CAAC;IACzC,CAAC,CAAC;EACH;EAACG,QAAA,CAAAY,4BAAA,GAAAA,4BAAA;EAAA,OAAAZ,QAAA;AAAA","ignoreList":[],"file":"FilterFieldTemplating-dbg.js"}