{"version":3,"file":"MultiValue.js","names":["MultiValue","_dec","defineUI5Class","_class","_Value","apply","this","arguments","_exports","_inheritsLoose","_proto","prototype","getOperatorConfig","operatorName","name","multiValue","formatValue","internalValue","externalValueType","result","split","Array","isArray","map","value","call","getElementTypeName","filter","undefined","parseValue","externalValue","values","externalToString","hasCustomOperator","operator","validated","format","Value"],"sources":["./MultiValue.ts"],"sourcesContent":["import { defineUI5Class } from \"sap/fe/base/ClassSupport\";\nimport Value from \"sap/fe/macros/filter/type/Value\";\nimport { type CustomFilterOperatorInfo } from \"sap/ui/core/Manifest\";\nimport type { ConditionObject } from \"sap/ui/mdc/condition/Condition\";\n\n/**\n * Handle format/parse of multi value filters.\n */\n@defineUI5Class(\"sap.fe.macros.filter.type.MultiValue\")\nexport default class MultiValue extends Value {\n\t/**\n\t * Custom Operator Info.\n\t * @param operatorName The binding operator name\n\t * @returns Custom operator info\n\t */\n\tpublic getOperatorConfig(operatorName: string): CustomFilterOperatorInfo {\n\t\treturn {\n\t\t\tname: operatorName,\n\t\t\tmultiValue: true\n\t\t};\n\t}\n\n\t/**\n\t * Returns the string value parsed to the external value type.\n\t * @param internalValue The internal string value to be formatted\n\t * @param externalValueType The external value type, e.g. int, float[], string, etc.\n\t * @returns The formatted value\n\t * @protected\n\t */\n\tformatValue(internalValue: unknown | undefined, externalValueType: string | undefined): string[] {\n\t\tlet result = internalValue;\n\n\t\tif (typeof result === \"string\") {\n\t\t\tresult = result.split(\",\");\n\t\t}\n\n\t\tif (Array.isArray(result)) {\n\t\t\tresult = result\n\t\t\t\t.map((value: string) => super.formatValue(value, this.getElementTypeName(externalValueType)))\n\t\t\t\t.filter((value: unknown) => value !== undefined);\n\t\t}\n\n\t\treturn (result || []) as string[];\n\t}\n\n\t/**\n\t * Returns the value parsed to the internal string value.\n\t * @param externalValue The value to be parsed\n\t * @param externalValueType The external value type, e.g. int, float[], string, etc.\n\t * @returns The parsed value\n\t * @protected\n\t */\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tparseValue(externalValue: unknown[] | undefined, externalValueType: string | undefined): ConditionObject | string[] {\n\t\tif (!externalValue) {\n\t\t\texternalValue = [];\n\t\t}\n\n\t\tconst values = super.externalToString(externalValue as string[], externalValueType) as string[];\n\n\t\tif (super.hasCustomOperator()) {\n\t\t\t// Returning the ConditionObject through CustomFilterFieldContentWrapper\n\t\t\treturn {\n\t\t\t\toperator: this.operator.name,\n\t\t\t\tvalues: [values],\n\t\t\t\tvalidated: undefined\n\t\t\t} as ConditionObject;\n\t\t}\n\n\t\treturn externalValue.map((value: unknown) => {\n\t\t\tif (value === undefined) {\n\t\t\t\tvalue = [];\n\t\t\t} else if (!Array.isArray(value)) {\n\t\t\t\tvalue = [value];\n\t\t\t}\n\t\t\treturn this.operator.format({ values: value } as ConditionObject);\n\t\t});\n\t}\n}\n"],"mappings":";;;;iWAKA,IAIqBA,GAAUC,EAD9BC,EAAe,wCAAuCD,EAAAE,EAAA,SAAAC,GAAA,SAAAJ,IAAA,OAAAI,EAAAC,MAAAC,KAAAC,YAAAD,IAAA,CAAAE,EAAAR,EAAAS,EAAAT,EAAAI,GAAA,IAAAM,EAAAV,EAAAW,UAEtDD,EAKOE,kBAAP,SAAOA,EAAkBC,GACxB,MAAO,CACNC,KAAMD,EACNE,WAAY,KAEd,EAEAL,EAOAM,YAAA,SAAAA,EAAYC,EAAoCC,GAC/C,IAAIC,EAASF,EAEb,UAAWE,IAAW,SAAU,CAC/BA,EAASA,EAAOC,MAAM,IACvB,CAEA,GAAIC,MAAMC,QAAQH,GAAS,CAC1BA,EAASA,EACPI,IAAKC,GAAapB,EAAAO,UAAWK,YAAWS,KAAAnB,KAACkB,EAAOlB,KAAKoB,mBAAmBR,KACxES,OAAQH,GAAmBA,IAAUI,UACxC,CAEA,OAAQT,GAAU,EACnB,EASAT,EACAmB,WAAA,SAAAA,EAAWC,EAAsCZ,GAChD,IAAKY,EAAe,CACnBA,EAAgB,EACjB,CAEA,MAAMC,EAAM3B,EAAAO,UAASqB,iBAAgBP,KAAAnB,KAACwB,EAA2BZ,GAEjE,GAAAd,EAAAO,UAAUsB,kBAAiBR,KAAAnB,MAAI,CAE9B,MAAO,CACN4B,SAAU5B,KAAK4B,SAASpB,KACxBiB,OAAQ,CAACA,GACTI,UAAWP,UAEb,CAEA,OAAOE,EAAcP,IAAKC,IACzB,GAAIA,IAAUI,UAAW,CACxBJ,EAAQ,EACT,MAAO,IAAKH,MAAMC,QAAQE,GAAQ,CACjCA,EAAQ,CAACA,EACV,CACA,OAAOlB,KAAK4B,SAASE,OAAO,CAAEL,OAAQP,KAExC,EAAC,OAAAxB,CAAA,CArEqD,CACfqC,KAAKlC,GAAAK,EAAAR,EAAA,OAAAQ,CAAA","ignoreList":[]}