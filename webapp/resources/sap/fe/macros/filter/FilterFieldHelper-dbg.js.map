{"version":3,"names":["isRequiredInFilter","path","annotationInterface","model","context","getModel","propertyPath","getPath","propertyLocationPath","CommonHelper","getLocationForPropertyPath","property","required","getObject","oFR","CommonUtils","getFilterRestrictionsByPath","RequiredProperties","includes","_exports","maxConditions","max","filterRestrictions","propertyInfo","$Type","FilterAllowedExpressions","allowedExpression","getSpecificAllowedExpression","getConditionsBinding","dataModelObjectPath","relativePropertyPath","getContextRelativeTargetObjectPath","compileExpression","pathInModel","constraints","value","AnnotationHelper","format","matches","match","propertyConstraints","JSTokenizer","parseJS","V4","nullable","Object","keys","length","undefined","JSON","stringify","replaceAll","formatOptions","hasOwnProperty","$Nullable","arguments","parseKeepsEmptyString","fiscalType","getFiscalType","getProperty","getDataType","type","typeMapping","EDM_TYPE_MAPPING","getPlaceholder","FiscalDate","getPattern"],"sourceRoot":".","sources":["FilterFieldHelper.ts"],"sourcesContent":["import type { Property } from \"@sap-ux/vocabularies-types\";\nimport JSTokenizer from \"sap/base/util/JSTokenizer\";\nimport type { CompiledBindingToolkitExpression } from \"sap/fe/base/BindingToolkit\";\nimport { compileExpression, EDM_TYPE_MAPPING, getFiscalType, pathInModel } from \"sap/fe/base/BindingToolkit\";\nimport CommonUtils from \"sap/fe/core/CommonUtils\";\nimport type { DataModelObjectPath } from \"sap/fe/core/templating/DataModelPathHelper\";\nimport { getContextRelativeTargetObjectPath } from \"sap/fe/core/templating/DataModelPathHelper\";\nimport { getProperty } from \"sap/fe/core/templating/PropertyFormatters\";\nimport type { ComputedAnnotationInterface, MetaModelContext } from \"sap/fe/core/templating/UIFormatters\";\nimport FiscalDate from \"sap/fe/core/type/FiscalDate\";\nimport CommonHelper from \"sap/fe/macros/CommonHelper\";\nimport AnnotationHelper from \"sap/ui/model/odata/v4/AnnotationHelper\";\nimport type ODataMetaModel from \"sap/ui/model/odata/v4/ODataMetaModel\";\n\n/**\n * Checks whether the property with the given path is required in the filter for the given annotation interface.\n * @param path Property path - ignored when provided as string\n * @param annotationInterface Structure returned by the ODataMetaModel when using the @@ operator in XML templates\n * @returns The value true if the given input is requird for filtering\n */\nexport function isRequiredInFilter(path: string | unknown, annotationInterface: ComputedAnnotationInterface): boolean {\n\tconst model = annotationInterface.context.getModel() as ODataMetaModel;\n\tconst propertyPath = annotationInterface.context.getPath();\n\tconst propertyLocationPath = CommonHelper.getLocationForPropertyPath(model, propertyPath);\n\n\tlet property: string;\n\tlet required = model.getObject(`${propertyLocationPath}/@com.sap.vocabularies.Common.v1.ResultContext`);\n\n\tif (!required) {\n\t\tif (typeof path === \"string\") {\n\t\t\tproperty = path;\n\t\t} else {\n\t\t\tproperty = model.getObject(`${propertyPath}@sapui.name`);\n\t\t}\n\t\tconst oFR = CommonUtils.getFilterRestrictionsByPath(propertyLocationPath, model);\n\t\trequired = oFR?.RequiredProperties?.includes(property);\n\t}\n\treturn required;\n}\n\n/**\n * Checks the maximum number of conditions for the given path and given annotation interface.\n * @param path Property path - ignored when provided as string\n * @param annotationInterface Structure returned by the ODataMetaModel when using the @@ operator in XML templates\n * @returns The number of maximum allowed conditions or -1 if there is no limit.\n */\nexport function maxConditions(path: string | unknown, annotationInterface: ComputedAnnotationInterface): number {\n\tconst model = annotationInterface.context.getModel() as ODataMetaModel;\n\tconst propertyPath = annotationInterface.context.getPath();\n\tconst propertyLocationPath = CommonHelper.getLocationForPropertyPath(model, propertyPath);\n\n\tlet property: string;\n\tlet max = -1;\n\n\tif (model.getObject(`${propertyLocationPath}/@com.sap.vocabularies.Common.v1.ResultContext`) === true) {\n\t\treturn 1;\n\t}\n\n\tif (typeof path === \"string\") {\n\t\tproperty = path;\n\t} else {\n\t\tproperty = model.getObject(`${propertyPath}@sapui.name`);\n\t}\n\tconst filterRestrictions = CommonUtils.getFilterRestrictionsByPath(propertyLocationPath, model);\n\tlet propertyInfo = model.getObject(`${propertyLocationPath}/${property}`);\n\tif (!propertyInfo) {\n\t\tpropertyInfo = model.getObject(propertyPath);\n\t}\n\tif (propertyInfo.$Type === \"Edm.Boolean\") {\n\t\tmax = 1;\n\t} else if (filterRestrictions?.FilterAllowedExpressions?.[property]) {\n\t\tconst allowedExpression = CommonUtils.getSpecificAllowedExpression(filterRestrictions.FilterAllowedExpressions[property]);\n\t\tif (allowedExpression === \"SingleValue\" || allowedExpression === \"SingleRange\") {\n\t\t\tmax = 1;\n\t\t}\n\t}\n\treturn max;\n}\n\n/**\n * To Create binding for mdc:filterfield conditions.\n * @param dataModelObjectPath Data Model Object path to filter field property\n * @returns Expression binding for conditions for the field\n */\nexport function getConditionsBinding(dataModelObjectPath: DataModelObjectPath<Property>): CompiledBindingToolkitExpression {\n\tconst relativePropertyPath = getContextRelativeTargetObjectPath(dataModelObjectPath, false, true);\n\treturn compileExpression(pathInModel(`/conditions/${relativePropertyPath}`, \"$filters\"));\n}\n\n/**\n * Get the contraints string for the given property and interface.\n * @param context\n * @param annotationInterface Structure returned by the ODataMetaModel when using the @@ operator in XML templates\n * @returns Constraints as string if available otherwise undefined\n */\nexport function constraints(context: MetaModelContext, annotationInterface: ComputedAnnotationInterface): string | undefined {\n\tconst value = (AnnotationHelper.format(context, annotationInterface) as string) || \"\";\n\tconst matches = value.match(/constraints:.*?({.*?})/);\n\tconst propertyConstraints = JSTokenizer.parseJS(matches?.[1] || \"{}\");\n\t// Workaround. Add \"V4: true\" to DateTimeOffset constraints. AnnotationHelper is not aware of this flag.\n\tif (value.includes(\"sap.ui.model.odata.type.DateTimeOffset\")) {\n\t\t// Ensure that V4:true is  there. With the openUI5 BLI: CPOUI5ODATAV4-2131 the constraints are already include 'V4':true\n\t\tpropertyConstraints.V4 = true;\n\t}\n\t// Remove {nullable:false} from the constraints as it prevents from having an empty filter field\n\t// in the case of a single-value filter\n\tif (propertyConstraints.nullable === false) {\n\t\tdelete propertyConstraints.nullable;\n\t}\n\t// Unfortunately, JSTokenizer does not provide a method to stringify (reversing parseJS).\n\t// Using JSON.stringify and replacing double quotes with single quotes works at least in the known simple cases (flat objects not containing quotes in property names or values).\n\t// If special cases should occur in future, this might need some adoption (depending on the required string format in that case).\n\treturn Object.keys(propertyConstraints).length === 0 ? undefined : JSON.stringify(propertyConstraints).replaceAll('\"', \"'\");\n}\n\n/**\n * Get the format options as string for the given path and given annotation interface.\n * @param context\n * @param annotationInterface Structure returned by the ODataMetaModel when using the @@ operator in XML templates\n * @returns Format options as string if available otherwise undefined\n */\nexport function formatOptions(context: MetaModelContext, annotationInterface: ComputedAnnotationInterface): string | undefined {\n\t// as the Annotation helper always returns \"parseKeepsEmptyString: true\" we need to prevent this in case a property (of type string) is nullable\n\t// Filling annotationInterface.arguments with an array where the first parameter is null, and the second contains the \"expected\"\n\t// parseKeepsEmptyString value follows a proposal from the model colleagues to \"overrule\" the behavior of the AnnotationHelper\n\tif (context.$Type === \"Edm.String\") {\n\t\tif (!context.hasOwnProperty(\"$Nullable\") || context.$Nullable === true) {\n\t\t\tannotationInterface.arguments = [null, { parseKeepsEmptyString: false }];\n\t\t}\n\t\tconst fiscalType = getFiscalType(getProperty(context, annotationInterface));\n\t\tif (fiscalType) {\n\t\t\tif (!annotationInterface.arguments) {\n\t\t\t\tannotationInterface.arguments = [null, {}];\n\t\t\t}\n\t\t\t(annotationInterface.arguments[1] as { fiscalType?: string }).fiscalType = fiscalType;\n\t\t}\n\t}\n\tconst value = (AnnotationHelper.format(context, annotationInterface) as string) || \"\";\n\treturn value.match(/formatOptions:.*?({.*?})/)?.[1] || undefined;\n}\n\n/**\n * Get the data type for a given property.\n * @param property Property information\n * @returns Type as string\n */\nexport function getDataType(property: Property): string {\n\tif (property.type === \"Edm.String\") {\n\t\tconst fiscalType = getFiscalType(property);\n\t\tif (fiscalType) {\n\t\t\treturn \"sap.fe.core.type.FiscalDate\";\n\t\t}\n\t}\n\tconst typeMapping = EDM_TYPE_MAPPING[property.type];\n\treturn typeMapping ? typeMapping.type : property.type;\n}\n\n/**\n * Get the placeholder of properties of type Edm.String.\n * @param property Property information\n * @returns Placeholder as string if available otherwise undefined\n */\nexport function getPlaceholder(property: Property): string | undefined {\n\tif (property.type === \"Edm.String\") {\n\t\tconst fiscalType = getFiscalType(property);\n\t\tif (fiscalType) {\n\t\t\treturn new FiscalDate({ fiscalType }, {}).getPattern();\n\t\t}\n\t}\n\treturn undefined;\n}\n"],"mappings":"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","ignoreList":[],"file":"FilterFieldHelper-dbg.js"}