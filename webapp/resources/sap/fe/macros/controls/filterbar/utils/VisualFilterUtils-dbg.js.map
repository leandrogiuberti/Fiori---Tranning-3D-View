{"version":3,"names":["VisualFilterUtils","applyMedianScaleToChartData","oInteractiveChart","oView","sVFId","sInfoPath","oData","sMeasure","data","oInternalModelContext","getBindingContext","aAggregation","getPoints","getBars","getSegments","item","push","getObject","scaleFactor","_getMedianScaleFactor","iShortRefNumber","scale","setProperty","oScaleTitle","byId","oMeasureDimensionTitle","sText","getText","setText","setTooltip","sMeasureField","i","sort","a","b","Number","length","iMid","iMedian","parseFloat","Math","floor","val","pow","round","abs","fixedInteger","NumberFormat","getIntegerInstance","style","showScale","shortRefNumber","aData","sScaledValue","format","aScaledValueParts","split","parseInt","indexOf","undefined","getScale","getFormattedNumber","inValue","numberOfFractionalDigits","currency","value","replace","currencyFormat","getCurrencyInstance","showMeasure","getFloatInstance","shortDecimals","decimals","applyUOMToTitle","oContextData","vUOM","sUOM","sCurrency","$Path","sUOMValue","updateChartScaleFactorTitle","applyErrorMessageAndTitle","s18nMessageTitle","s18nMessage","errorMessageTitle","errorMessage","showError","checkMulitUnit","oContexts","sUnitfield","aContextData","reduce","key","NaN","setMultiUOMMessage","oResourceBundle","sIsCurrency","sIsUnit","Log","warning","setNoDataMessage","convertFilterCondions","oFilterConditions","oConvertedConditions","Object","keys","forEach","sKey","aConvertedConditions","aConditions","values","value2","value1","Condition","createCondition","operator","getCustomConditions","Range","oValidProperty","sPropertyName","$Type","_parseDateTime","getTypeCompliantValue","_formatDateTime","Low","Option","High","getRangeProperty","$EnumMember","path","sValue","_getDateTimeTypeInstance","parseValue","formatValue","DateTimeOffset","pattern","calendarType","V4","getErrorInfoForNoInitialOverlay","notMatchedConditions","resourceBundle","entitySetPath","metaModel","ret","label","enableChartBinding","visualFilters","enable","diffState","changedFilterFieldPaths","filter","vfId","visualFilterBB","isA","setEnableChartBinding","error"],"sourceRoot":".","sources":["VisualFilterUtils.ts"],"sourcesContent":["import type { SelectionRangeOptionType, SelectionRangeType } from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport Log from \"sap/base/Log\";\nimport type ResourceBundle from \"sap/base/i18n/ResourceBundle\";\nimport type { InternalModelContext } from \"sap/fe/core/helpers/ModelHelper\";\nimport type { FilterConditions } from \"sap/fe/macros/filterBar/FilterHelper\";\nimport { getRangeProperty, getTypeCompliantValue } from \"sap/fe/macros/filterBar/FilterHelper\";\nimport type { ExternalStateType } from \"sap/fe/macros/valuehelp/ValueHelpDelegate\";\nimport type VisualFilter from \"sap/fe/macros/visualfilters/VisualFilter\";\nimport type Title from \"sap/m/Title\";\nimport type InteractiveBarChart from \"sap/suite/ui/microchart/InteractiveBarChart\";\nimport type InteractiveDonutChart from \"sap/suite/ui/microchart/InteractiveDonutChart\";\nimport type InteractiveLineChart from \"sap/suite/ui/microchart/InteractiveLineChart\";\nimport type Control from \"sap/ui/core/Control\";\nimport type UI5Date from \"sap/ui/core/date/UI5Date\";\nimport NumberFormat from \"sap/ui/core/format/NumberFormat\";\nimport type View from \"sap/ui/core/mvc/View\";\nimport type { ConditionObject } from \"sap/ui/mdc/condition/Condition\";\nimport Condition from \"sap/ui/mdc/condition/Condition\";\nimport type ConditionValidated from \"sap/ui/mdc/enums/ConditionValidated\";\nimport type Context from \"sap/ui/model/Context\";\nimport type MetaModel from \"sap/ui/model/MetaModel\";\nimport DateTimeOffset from \"sap/ui/model/odata/type/DateTimeOffset\";\nimport type { MetaModelEnum, MetaModelProperty, MetaModelType } from \"types/metamodel_types\";\n\nconst VisualFilterUtils = {\n\t/**\n\t * Applies the median scale to the chart data.\n\t * @param oInteractiveChart InteractiveChart in the VisualFilter control\n\t * @param oView Instance of the view\n\t * @param sVFId VisualFilter control ID\n\t * @param sInfoPath Internal model context path to store info.\n\t */\n\tapplyMedianScaleToChartData: function (\n\t\toInteractiveChart: InteractiveDonutChart | InteractiveLineChart | InteractiveBarChart,\n\t\toView: View,\n\t\tsVFId: string,\n\t\tsInfoPath: string\n\t): void {\n\t\tconst oData = [];\n\t\tconst sMeasure = oInteractiveChart.data(\"measure\");\n\t\tconst oInternalModelContext = oView.getBindingContext(\"internal\") as InternalModelContext;\n\t\tconst aAggregation =\n\t\t\t((oInteractiveChart as InteractiveLineChart).getPoints && (oInteractiveChart as InteractiveLineChart).getPoints()) ||\n\t\t\t((oInteractiveChart as InteractiveBarChart).getBars && (oInteractiveChart as InteractiveBarChart).getBars()) ||\n\t\t\t((oInteractiveChart as InteractiveDonutChart).getSegments && (oInteractiveChart as InteractiveDonutChart).getSegments());\n\t\tfor (const item of aAggregation) {\n\t\t\toData.push(item.getBindingContext()!.getObject());\n\t\t}\n\t\tconst scaleFactor = this._getMedianScaleFactor(oData, sMeasure);\n\t\tif (scaleFactor && scaleFactor.iShortRefNumber && scaleFactor.scale) {\n\t\t\toInternalModelContext.setProperty(`scalefactor/${sInfoPath}`, scaleFactor.scale);\n\t\t\toInternalModelContext.setProperty(`scalefactorNumber/${sInfoPath}`, scaleFactor.iShortRefNumber);\n\t\t} else {\n\t\t\toInternalModelContext.setProperty(`scalefactor/${sInfoPath}`, \"\");\n\t\t\toInternalModelContext.setProperty(`scalefactorNumber/${sInfoPath}`, \"\");\n\t\t\tconst oScaleTitle = oView.byId(`${sVFId}::ScaleUoMTitle`) as Title;\n\t\t\tconst oMeasureDimensionTitle = oView.byId(`${sVFId}::MeasureDimensionTitle`) as Title;\n\t\t\tconst sText = oScaleTitle.getText();\n\t\t\tif (sText === \" | \") {\n\t\t\t\toScaleTitle.setText(\"\");\n\t\t\t\toMeasureDimensionTitle.setTooltip(oMeasureDimensionTitle.getText());\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Returns the median scale factor.\n\t * @param oData VisualFilter data\n\t * @param sMeasureField Path of the measure\n\t * @returns Object containing scale and iShortRefNumber\n\t */\n\t_getMedianScaleFactor: function (oData: Record<string, string>[], sMeasureField: string): { iShortRefNumber?: number; scale?: string } {\n\t\tlet i;\n\t\tlet scaleFactor;\n\t\toData.sort(function (a: Record<string, string>, b: Record<string, string>) {\n\t\t\tif (Number(a[sMeasureField]) < Number(b[sMeasureField])) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tif (Number(a[sMeasureField]) > Number(b[sMeasureField])) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\treturn 0;\n\t\t});\n\t\tif (oData.length > 0) {\n\t\t\t// get median index\n\t\t\tconst iMid = oData.length / 2, // get mid of array\n\t\t\t\t// if iMid is whole number, array length is even, calculate median\n\t\t\t\t// if iMid is not whole number, array length is odd, take median as iMid - 1\n\t\t\t\tiMedian =\n\t\t\t\t\tiMid % 1 === 0\n\t\t\t\t\t\t? (parseFloat(oData[iMid - 1][sMeasureField]) + parseFloat(oData[iMid][sMeasureField])) / 2\n\t\t\t\t\t\t: parseFloat(oData[Math.floor(iMid)][sMeasureField]),\n\t\t\t\t// get scale factor on median\n\t\t\t\tval = iMedian;\n\t\t\tfor (i = 0; i < 14; i++) {\n\t\t\t\tscaleFactor = Math.pow(10, i);\n\t\t\t\tif (Math.round(Math.abs(val) / scaleFactor) < 10) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst fixedInteger = NumberFormat.getIntegerInstance({\n\t\t\tstyle: \"short\",\n\t\t\tshowScale: false,\n\t\t\tshortRefNumber: scaleFactor\n\t\t});\n\n\t\t// apply scale factor to other values and check\n\t\tfor (i = 0; i < oData.length; i++) {\n\t\t\tconst aData = oData[i],\n\t\t\t\tsScaledValue = fixedInteger.format(aData[sMeasureField] as unknown as number),\n\t\t\t\taScaledValueParts = sScaledValue.split(\".\");\n\t\t\t// if scaled value has only 0 before decimal or 0 after decimal (example: 0.02)\n\t\t\t// then ignore this scale factor else proceed with this scale factor\n\t\t\t// if scaled value divided by 1000 is >= 1000 then also ignore scale factor\n\t\t\tif (\n\t\t\t\t(!aScaledValueParts[1] && parseInt(aScaledValueParts[0], 10) === 0) ||\n\t\t\t\t(aScaledValueParts[1] && parseInt(aScaledValueParts[0], 10) === 0 && aScaledValueParts[1].indexOf(\"0\") === 0) ||\n\t\t\t\tNumber(sScaledValue) / 1000 >= 1000\n\t\t\t) {\n\t\t\t\tscaleFactor = undefined;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\tiShortRefNumber: scaleFactor,\n\t\t\tscale: scaleFactor ? fixedInteger.getScale() : \"\"\n\t\t};\n\t},\n\n\t/**\n\t * Returns the formatted number according to the rules of VisualChartFilters.\n\t * @param inValue Value which needs to be formatted\n\t * @param scaleFactor ScaleFactor to which the value needs to be scaled\n\t * @param numberOfFractionalDigits NumberOfFractionalDigits digits in the decimals according to scale\n\t * @param currency Currency code\n\t * @returns The formatted number\n\t */\n\tgetFormattedNumber: function (\n\t\tinValue: string | number,\n\t\tscaleFactor?: number,\n\t\tnumberOfFractionalDigits?: number,\n\t\tcurrency?: string\n\t): string {\n\t\tlet fixedInteger;\n\t\tconst value: number = typeof inValue === \"string\" ? Number(inValue.replace(/,/g, \"\")) : inValue;\n\n\t\tif (currency) {\n\t\t\tconst currencyFormat = NumberFormat.getCurrencyInstance({\n\t\t\t\tshowMeasure: false\n\t\t\t});\n\t\t\treturn currencyFormat.format(value, currency);\n\t\t\t// parseFloat(value) is required otherwise -ve value are wrongly rounded off\n\t\t\t// Example: \"-1.9\" rounds off to -1 instead of -2. however -1.9 rounds off to -2\n\t\t} else if (scaleFactor) {\n\t\t\tfixedInteger = NumberFormat.getFloatInstance({\n\t\t\t\tstyle: \"short\",\n\t\t\t\tshowScale: false,\n\t\t\t\tshortRefNumber: scaleFactor,\n\t\t\t\tshortDecimals: numberOfFractionalDigits\n\t\t\t});\n\t\t\treturn fixedInteger.format(value);\n\t\t} else {\n\t\t\tfixedInteger = NumberFormat.getFloatInstance({\n\t\t\t\tdecimals: numberOfFractionalDigits\n\t\t\t});\n\t\t\treturn fixedInteger.format(value);\n\t\t}\n\t},\n\n\t/**\n\t * Applies the UOM to the title of the visual filter control.\n\t * @param oInteractiveChart InteractiveChart in the VisualFilter control\n\t * @param oContextData Data of the VisualFilter\n\t * @param oView Instance of the view\n\t * @param sInfoPath Internal model context path to store info.\n\t */\n\tapplyUOMToTitle: function (oInteractiveChart: Control, oContextData: Record<string, unknown>, oView: View, sInfoPath: string): void {\n\t\tconst vUOM = oInteractiveChart.data(\"uom\");\n\t\tlet sUOM;\n\t\tlet sCurrency;\n\t\tif (vUOM && vUOM[\"ISOCurrency\"]) {\n\t\t\tsUOM = vUOM[\"ISOCurrency\"];\n\t\t\tsCurrency = sUOM.$Path ? oContextData[sUOM.$Path] : sUOM;\n\t\t} else if (vUOM && vUOM[\"Unit\"]) {\n\t\t\tsUOM = vUOM[\"Unit\"];\n\t\t}\n\t\tif (sUOM) {\n\t\t\tconst sUOMValue = sUOM.$Path ? oContextData[sUOM.$Path] : sUOM;\n\t\t\tconst oInternalModelContext = oView.getBindingContext(\"internal\") as InternalModelContext;\n\t\t\toInternalModelContext.setProperty(`uom/${sInfoPath}`, sUOMValue);\n\t\t\tif (sCurrency) {\n\t\t\t\toInternalModelContext.setProperty(`currency/${sInfoPath}`, sUOMValue);\n\t\t\t}\n\t\t}\n\t},\n\t/**\n\t * Updates the scale factor in the title of the visual filter.\n\t * @param oInteractiveChart InteractiveChart in the VisualFilter control\n\t * @param oView Instance of the view\n\t * @param sVFId VisualFilter control ID\n\t * @param sInfoPath Internal model context path to store info.\n\t */\n\tupdateChartScaleFactorTitle: function (\n\t\toInteractiveChart: InteractiveDonutChart | InteractiveLineChart | InteractiveBarChart,\n\t\toView: View,\n\t\tsVFId: string,\n\t\tsInfoPath: string\n\t): void {\n\t\tif (!oInteractiveChart.data(\"scalefactor\")) {\n\t\t\tthis.applyMedianScaleToChartData(oInteractiveChart, oView, sVFId, sInfoPath);\n\t\t} else {\n\t\t\tconst fixedInteger = NumberFormat.getIntegerInstance({\n\t\t\t\tstyle: \"short\",\n\t\t\t\tshowScale: false,\n\t\t\t\tshortRefNumber: oInteractiveChart.data(\"scalefactor\")\n\t\t\t});\n\t\t\tconst oInternalModelContext = oView.getBindingContext(\"internal\") as InternalModelContext;\n\t\t\tconst scale = fixedInteger.getScale() ? fixedInteger.getScale() : \"\";\n\t\t\toInternalModelContext.setProperty(`scalefactor/${sInfoPath}`, scale);\n\t\t}\n\t},\n\n\t/**\n\t *\n\t * @param s18nMessageTitle Text of the error message title.\n\t * @param s18nMessage Text of the error message description.\n\t * @param sInfoPath Internal model context path to store info.\n\t * @param oView Instance of the view.\n\t */\n\tapplyErrorMessageAndTitle: function (s18nMessageTitle: string, s18nMessage: string, sInfoPath: string, oView: View): void {\n\t\tconst oInternalModelContext = oView.getBindingContext(\"internal\") as InternalModelContext;\n\t\toInternalModelContext.setProperty(sInfoPath, {});\n\t\toInternalModelContext.setProperty(sInfoPath, {\n\t\t\terrorMessageTitle: s18nMessageTitle,\n\t\t\terrorMessage: s18nMessage,\n\t\t\tshowError: true\n\t\t});\n\t},\n\t/**\n\t * Checks if multiple units are present.\n\t * @param oContexts Contexts of the VisualFilter\n\t * @param sUnitfield The path of the unit field\n\t * @returns Returns if multiple units are configured or not\n\t */\n\tcheckMulitUnit: function (oContexts: Context[], sUnitfield: string): boolean {\n\t\tconst aData: number[] = [];\n\t\tif (oContexts && sUnitfield) {\n\t\t\tfor (const item of oContexts) {\n\t\t\t\tconst aContextData = item && item.getObject();\n\t\t\t\taData.push(aContextData[sUnitfield]);\n\t\t\t}\n\t\t}\n\t\treturn !!aData.reduce(function (data: number, key: number) {\n\t\t\treturn data === key ? data : NaN;\n\t\t});\n\t},\n\n\t/**\n\t * Sets an error message if multiple UOM are present.\n\t * @param oData Data of the VisualFilter control\n\t * @param oInteractiveChart InteractiveChart in the VisualFilter control\n\t * @param sInfoPath Internal model context path to store info.\n\t * @param oResourceBundle The resource bundle\n\t * @param oView Instance of the view\n\t */\n\tsetMultiUOMMessage: function (\n\t\toData: Context[],\n\t\toInteractiveChart: InteractiveDonutChart | InteractiveLineChart | InteractiveBarChart,\n\t\tsInfoPath: string,\n\t\toResourceBundle: ResourceBundle,\n\t\toView: View\n\t): void {\n\t\tconst vUOM = oInteractiveChart.data(\"uom\");\n\t\tconst sIsCurrency = vUOM && vUOM[\"ISOCurrency\"] && vUOM[\"ISOCurrency\"].$Path;\n\t\tconst sIsUnit = vUOM && vUOM[\"Unit\"] && vUOM[\"Unit\"].$Path;\n\t\tconst sUnitfield = sIsCurrency || sIsUnit;\n\t\tlet s18nMessageTitle, s18nMessage;\n\t\tif (sUnitfield) {\n\t\t\tif (!this.checkMulitUnit(oData, sUnitfield)) {\n\t\t\t\tif (sIsCurrency) {\n\t\t\t\t\ts18nMessageTitle = oResourceBundle.getText(\"M_VISUAL_FILTERS_ERROR_MESSAGE_TITLE\");\n\t\t\t\t\ts18nMessage = oResourceBundle.getText(\"M_VISUAL_FILTERS_MULTIPLE_CURRENCY\", sUnitfield);\n\t\t\t\t\tthis.applyErrorMessageAndTitle(s18nMessageTitle, s18nMessage, sInfoPath, oView);\n\t\t\t\t\tLog.warning(`Filter is set for multiple Currency for${sUnitfield}`);\n\t\t\t\t} else if (sIsUnit) {\n\t\t\t\t\ts18nMessageTitle = oResourceBundle.getText(\"M_VISUAL_FILTERS_ERROR_MESSAGE_TITLE\");\n\t\t\t\t\ts18nMessage = oResourceBundle.getText(\"M_VISUAL_FILTERS_MULTIPLE_UNIT\", sUnitfield);\n\t\t\t\t\tthis.applyErrorMessageAndTitle(s18nMessageTitle, s18nMessage, sInfoPath, oView);\n\t\t\t\t\tLog.warning(`Filter is set for multiple UOMs for${sUnitfield}`);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Sets an error message if response data is empty.\n\t * @param sInfoPath Internal model context path to store info.\n\t * @param oResourceBundle The resource bundle\n\t * @param oView Instance of the view\n\t */\n\tsetNoDataMessage: function (sInfoPath: string, oResourceBundle: ResourceBundle, oView: View): void {\n\t\tconst s18nMessageTitle = oResourceBundle.getText(\"M_VISUAL_FILTERS_ERROR_MESSAGE_TITLE\");\n\t\tconst s18nMessage = oResourceBundle.getText(\"M_VISUAL_FILTER_NO_DATA_TEXT\");\n\t\tthis.applyErrorMessageAndTitle(s18nMessageTitle, s18nMessage, sInfoPath, oView);\n\t},\n\tconvertFilterCondions: function (oFilterConditions: Record<string, FilterConditions[]>): Record<string, ConditionObject[]> {\n\t\tconst oConvertedConditions: Record<string, ConditionObject[]> = {};\n\t\tObject.keys(oFilterConditions).forEach(function (sKey: string) {\n\t\t\tconst aConvertedConditions: ConditionObject[] = [];\n\t\t\tconst aConditions = oFilterConditions[sKey];\n\t\t\tfor (const item of aConditions) {\n\t\t\t\tconst values = item.value2 ? [item.value1, item.value2] : [item.value1];\n\t\t\t\taConvertedConditions.push(Condition.createCondition(item.operator, values, null, null, \"Validated\" as ConditionValidated));\n\t\t\t}\n\t\t\tif (aConvertedConditions.length) {\n\t\t\t\toConvertedConditions[sKey] = aConvertedConditions;\n\t\t\t}\n\t\t});\n\t\treturn oConvertedConditions;\n\t},\n\tgetCustomConditions: function (\n\t\tRange: MetaModelType<SelectionRangeType>,\n\t\toValidProperty: MetaModelProperty,\n\t\tsPropertyName: string\n\t): { value2?: unknown; value1: unknown; operator?: string | null; path: string } {\n\t\tlet value1, value2;\n\t\tif (oValidProperty.$Type === \"Edm.DateTimeOffset\") {\n\t\t\tvalue1 = this._parseDateTime(\n\t\t\t\tgetTypeCompliantValue(this._formatDateTime(Range.Low), oValidProperty.$Type, Range.Option) as unknown as string | Date\n\t\t\t);\n\t\t\tvalue2 = Range.High\n\t\t\t\t? this._parseDateTime(\n\t\t\t\t\t\tgetTypeCompliantValue(this._formatDateTime(Range.High), oValidProperty.$Type, Range.Option) as unknown as\n\t\t\t\t\t\t\t| string\n\t\t\t\t\t\t\t| Date\n\t\t\t\t  )\n\t\t\t\t: null;\n\t\t} else {\n\t\t\tvalue1 = Range.Low;\n\t\t\tvalue2 = Range.High ? Range.High : null;\n\t\t}\n\t\treturn {\n\t\t\toperator: Range.Option\n\t\t\t\t? getRangeProperty((Range.Option as unknown as MetaModelEnum<SelectionRangeOptionType>).$EnumMember || Range.Option)\n\t\t\t\t: null,\n\t\t\tvalue1: value1,\n\t\t\tvalue2: value2,\n\t\t\tpath: sPropertyName\n\t\t};\n\t},\n\t_parseDateTime: function (sValue: string | Date): string | Date | UI5Date {\n\t\treturn this._getDateTimeTypeInstance().parseValue(sValue, \"string\");\n\t},\n\t_formatDateTime: function (sValue: string | Date): string | Date | UI5Date {\n\t\treturn this._getDateTimeTypeInstance().formatValue(sValue, \"string\");\n\t},\n\t_getDateTimeTypeInstance: function (): DateTimeOffset {\n\t\treturn new DateTimeOffset({ pattern: \"yyyy-MM-ddTHH:mm:ssZ\", calendarType: \"Gregorian\" }, { V4: true });\n\t},\n\n\t/**\n\t * Get error info when required inParameters or required filters are not available.\n\t * @param notMatchedConditions Property names(inParameters or required filters) for which values are not available .\n\t * @param resourceBundle ResourceBundle for translated texts.\n\t * @param entitySetPath EntitySet Path for property label annotation.\n\t * @param metaModel Default metamodel.\n\t * @returns Error info containing texts for title and message.\n\t */\n\tgetErrorInfoForNoInitialOverlay: function (\n\t\tnotMatchedConditions: string[],\n\t\tresourceBundle: ResourceBundle,\n\t\tentitySetPath: string,\n\t\tmetaModel: MetaModel\n\t): { showError: boolean; errorMessageTitle: string; errorMessage: string } | undefined {\n\t\tlet ret;\n\t\tif (notMatchedConditions.length > 1) {\n\t\t\tret = {\n\t\t\t\tshowError: true,\n\t\t\t\terrorMessageTitle: resourceBundle.getText(\"M_VISUAL_FILTERS_ERROR_MESSAGE_TITLE\"),\n\t\t\t\terrorMessage: resourceBundle.getText(\"M_VISUAL_FILTERS_PROVIDE_FILTER_VAL_MULTIPLEVF\")\n\t\t\t};\n\t\t} else if (notMatchedConditions.length === 1) {\n\t\t\tconst label =\n\t\t\t\t(metaModel.getObject(`${entitySetPath}/${notMatchedConditions[0]}@com.sap.vocabularies.Common.v1.Label`) as string) ||\n\t\t\t\tnotMatchedConditions[0];\n\t\t\tret = {\n\t\t\t\tshowError: true,\n\t\t\t\terrorMessageTitle: resourceBundle.getText(\"M_VISUAL_FILTERS_ERROR_MESSAGE_TITLE\"),\n\t\t\t\terrorMessage: resourceBundle.getText(\"M_VISUAL_FILTERS_PROVIDE_FILTER_VAL_SINGLEVF\", [label])\n\t\t\t};\n\t\t}\n\t\treturn ret;\n\t},\n\n\t/**\n\t * Enables or disables the chart binding for visual filters.\n\t * @param visualFilters Visual filters to be enabled or disabled\n\t * @param enable Whether to enable or disable the chart binding\n\t * @param diffState Optional parameter to specify the changed filter field paths, incase of enablement.\n\t */\n\tenableChartBinding(visualFilters: Record<string, Control>, enable: boolean, diffState?: ExternalStateType): void {\n\t\tconst changedFilterFieldPaths = diffState?.filter ? Object.keys(diffState.filter) : [];\n\t\tfor (const vfId in visualFilters) {\n\t\t\tconst visualFilterBB = visualFilters[vfId];\n\t\t\tif (visualFilterBB && visualFilterBB.isA<VisualFilter>(\"sap.fe.macros.visualfilters.VisualFilter\")) {\n\t\t\t\tvisualFilterBB.setEnableChartBinding(enable, changedFilterFieldPaths);\n\t\t\t} else {\n\t\t\t\tLog.error(`Control with id ${vfId} is not a VisualFilter`);\n\t\t\t}\n\t\t}\n\t}\n};\n\nexport default VisualFilterUtils;\n"],"mappings":"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","ignoreList":[],"file":"VisualFilterUtils-dbg.js"}