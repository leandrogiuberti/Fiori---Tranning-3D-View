{"version":3,"names":["SectionStateHandler","_BaseStateHandler","apply","arguments","_exports","_inheritsLoose","_proto","prototype","setupStateInteractionsForLazyRendering","isSubSectionsAvailable","checkForSectionStateInteractions","sectionEventDelegate","onBeforeRendering","removeEventDelegate","addEventDelegate","checkForStateInteractions","subSections","getSubSections","forEach","registerSubSectionDelegate","bind","length","isBlocksAvailable","some","subSection","blocks","getBlocks","filter","block","BlockBase","BaseStateHandler"],"sourceRoot":".","sources":["SectionStateHandler.ts"],"sourcesContent":["import type Section from \"sap/fe/macros/controls/Section\";\nimport BaseStateHandler from \"sap/fe/macros/controls/section/mixin/BaseStateHandler\";\n// eslint-disable-next-line @typescript-eslint/no-restricted-imports\nimport BlockBase from \"sap/uxap/BlockBase\";\n\nexport type SectionState = unknown;\n\nexport default class SectionStateHandler extends BaseStateHandler<SectionState> {\n\t/**\n\t * Listen to subsections rendering to enable state interactions.\n\t */\n\tsetupStateInteractionsForLazyRendering(this: Section & SectionStateHandler): void {\n\t\tif (this.isSubSectionsAvailable()) {\n\t\t\tthis.checkForSectionStateInteractions();\n\t\t} else {\n\t\t\t// Subsections are not available yet, so we hook to onBeforeRendering event delegate.\n\t\t\tconst sectionEventDelegate = {\n\t\t\t\tonBeforeRendering: (): void => {\n\t\t\t\t\tif (this.isSubSectionsAvailable()) {\n\t\t\t\t\t\t// once subsections are avialable, we detach event delegate.\n\t\t\t\t\t\tthis.checkForSectionStateInteractions();\n\t\t\t\t\t\tthis.removeEventDelegate(sectionEventDelegate);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\tthis.addEventDelegate(sectionEventDelegate);\n\t\t}\n\t}\n\n\t/**\n\t * Check for state interactions for the section.\n\t */\n\tcheckForSectionStateInteractions(this: Section & SectionStateHandler): void {\n\t\tif (!this.checkForStateInteractions()) {\n\t\t\t// Blocks are not avialable yet, so we hook to onBeforeRendering event delegate.\n\t\t\tconst subSections = this.getSubSections();\n\t\t\tsubSections.forEach(this.registerSubSectionDelegate.bind(this));\n\t\t}\n\t}\n\n\t/**\n\t * Check if subsections are available.\n\t * @returns Boolean.\n\t */\n\tisSubSectionsAvailable(this: Section & SectionStateHandler): boolean {\n\t\treturn this.getSubSections().length > 0;\n\t}\n\n\t/**\n\t * Check if blocks are available for state interactions.\n\t * @returns Boolean.\n\t */\n\tisBlocksAvailable(this: Section & SectionStateHandler): boolean {\n\t\tconst subSections = this.getSubSections();\n\t\treturn subSections.some((subSection) => {\n\t\t\tconst blocks = subSection.getBlocks().filter((block) => block instanceof BlockBase);\n\t\t\treturn blocks.length > 0;\n\t\t});\n\t}\n}\n"],"mappings":";;;;;;;;;;EAEA;EAAA,IAKqBA,mBAAmB,0BAAAC,iBAAA;IAAA,SAAAD,oBAAA;MAAA,OAAAC,iBAAA,CAAAC,KAAA,OAAAC,SAAA;IAAA;IAAAC,QAAA,GAAAJ,mBAAA;IAAAK,cAAA,CAAAL,mBAAA,EAAAC,iBAAA;IAAA,IAAAK,MAAA,GAAAN,mBAAA,CAAAO,SAAA;IACvC;AACD;AACA;IAFCD,MAAA,CAGAE,sCAAsC,GAAtC,SAAAA,sCAAsCA,CAAA,EAA4C;MACjF,IAAI,IAAI,CAACC,sBAAsB,CAAC,CAAC,EAAE;QAClC,IAAI,CAACC,gCAAgC,CAAC,CAAC;MACxC,CAAC,MAAM;QACN;QACA,MAAMC,oBAAoB,GAAG;UAC5BC,iBAAiB,EAAEA,CAAA,KAAY;YAC9B,IAAI,IAAI,CAACH,sBAAsB,CAAC,CAAC,EAAE;cAClC;cACA,IAAI,CAACC,gCAAgC,CAAC,CAAC;cACvC,IAAI,CAACG,mBAAmB,CAACF,oBAAoB,CAAC;YAC/C;UACD;QACD,CAAC;QACD,IAAI,CAACG,gBAAgB,CAACH,oBAAoB,CAAC;MAC5C;IACD;;IAEA;AACD;AACA,OAFC;IAAAL,MAAA,CAGAI,gCAAgC,GAAhC,SAAAA,gCAAgCA,CAAA,EAA4C;MAC3E,IAAI,CAAC,IAAI,CAACK,yBAAyB,CAAC,CAAC,EAAE;QACtC;QACA,MAAMC,WAAW,GAAG,IAAI,CAACC,cAAc,CAAC,CAAC;QACzCD,WAAW,CAACE,OAAO,CAAC,IAAI,CAACC,0BAA0B,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;MAChE;IACD;;IAEA;AACD;AACA;AACA,OAHC;IAAAd,MAAA,CAIAG,sBAAsB,GAAtB,SAAAA,sBAAsBA,CAAA,EAA+C;MACpE,OAAO,IAAI,CAACQ,cAAc,CAAC,CAAC,CAACI,MAAM,GAAG,CAAC;IACxC;;IAEA;AACD;AACA;AACA,OAHC;IAAAf,MAAA,CAIAgB,iBAAiB,GAAjB,SAAAA,iBAAiBA,CAAA,EAA+C;MAC/D,MAAMN,WAAW,GAAG,IAAI,CAACC,cAAc,CAAC,CAAC;MACzC,OAAOD,WAAW,CAACO,IAAI,CAAEC,UAAU,IAAK;QACvC,MAAMC,MAAM,GAAGD,UAAU,CAACE,SAAS,CAAC,CAAC,CAACC,MAAM,CAAEC,KAAK,IAAKA,KAAK,YAAYC,SAAS,CAAC;QACnF,OAAOJ,MAAM,CAACJ,MAAM,GAAG,CAAC;MACzB,CAAC,CAAC;IACH,CAAC;IAAA,OAAArB,mBAAA;EAAA,EAnD+C8B,gBAAgB;EAAA1B,QAAA,GAAAJ,mBAAA;EAAA,OAAAI,QAAA;AAAA","ignoreList":[],"file":"SectionStateHandler-dbg.js"}