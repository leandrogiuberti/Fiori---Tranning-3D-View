{"version":3,"file":"SubSectionStateHandler.js","names":["SubSectionStateHandler","_BaseStateHandler","apply","this","arguments","_exports","_inheritsLoose","_proto","prototype","setupStateInteractionsForLazyRendering","checkForStateInteractions","registerSubSectionDelegate","isBlocksAvailable","blocks","getBlocks","filter","block","BlockBase","length","BaseStateHandler"],"sources":["./SubSectionStateHandler.ts"],"sourcesContent":["import type SubSection from \"sap/fe/macros/controls/section/SubSection\";\nimport BaseStateHandler from \"sap/fe/macros/controls/section/mixin/BaseStateHandler\";\n// eslint-disable-next-line @typescript-eslint/no-restricted-imports\nimport BlockBase from \"sap/uxap/BlockBase\";\n\nexport type SubSectionState = unknown;\n\nexport default class SubSectionStateHandler extends BaseStateHandler<SubSectionState> {\n\t/**\n\t * Listen to subsections rendering to enable state interactions.\n\t */\n\tsetupStateInteractionsForLazyRendering(this: SubSection & SubSectionStateHandler): void {\n\t\tif (!this.checkForStateInteractions()) {\n\t\t\tthis.registerSubSectionDelegate(this);\n\t\t}\n\t}\n\n\t/**\n\t * Check if blocks are available for state interactions.\n\t * @returns Boolean.\n\t */\n\tisBlocksAvailable(this: SubSection & SubSectionStateHandler): boolean {\n\t\tconst blocks = this.getBlocks().filter((block) => block instanceof BlockBase);\n\t\treturn blocks.length > 0;\n\t}\n}\n"],"mappings":";;;;kVAEA,IAKqBA,EAAsB,SAAAC,GAAA,SAAAD,IAAA,OAAAC,EAAAC,MAAAC,KAAAC,YAAAD,IAAA,CAAAE,EAAAL,EAAAM,EAAAN,EAAAC,GAAA,IAAAM,EAAAP,EAAAQ,UAC1CD,EAGAE,uCAAA,SAAAA,IACC,IAAKN,KAAKO,4BAA6B,CACtCP,KAAKQ,2BAA2BR,KACjC,CACD,EAEAI,EAIAK,kBAAA,SAAAA,IACC,MAAMC,EAASV,KAAKW,YAAYC,OAAQC,GAAUA,aAAiBC,GACnE,OAAOJ,EAAOK,OAAS,CACxB,EAAC,OAAAlB,CAAA,CAjByC,CAASmB,GAAgBd,EAAAL,EAAA,OAAAK,CAAA","ignoreList":[]}