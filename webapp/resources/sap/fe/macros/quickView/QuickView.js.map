{"version":3,"file":"QuickView.js","names":["QuickView","valueDataModelPath","metaPath","contextPath","semanticObject","this","computePropertiesAndPayload","_exports","getRelativePathToQuickViewEntity","propertyDataModelPath","relativePathToQuickViewEntity","quickViewNavProp","getNavPropToQuickViewEntity","navigationProperties","reduce","relativPath","navProp","name","contextLocation","find","contextNavProp","getSemanticObjectMappingsForPayload","propertyWithSemanticObject","qualifierMap","semanticObjectMappings","undefined","semanticObjectMapping","getSemanticObjectMappings","correspondingSemanticObject","qualifier","push","items","map","semanticObjectMappingType","$Type","Error","key","LocalProperty","value","SemanticObjectProperty","valueOf","getSemanticObjectUnavailableActionsForPayload","semanticObjectUnavailableActions","unavailableActionAnnotation","getSemanticObjectUnavailableActions","actions","unavailableAction","addCustomSemanticObjectToSemanticObjectListForPayload","semanticObjectsList","customSemanticObject","splice","length","startsWith","includes","JSON","parse","property","targetObject","targetEntityType","referentialConstraint","some","sourceProperty","targetType","annotations","UI","QuickViewFacets","targetEntitySet","semanticKeys","Common","SemanticKey","isPropertySemanticKey","semanticKey","$target","lastNavProp","isKey","_proto","prototype","valueProperty","isProperty","hasQuickViewFacets","isUsedInNavigationWithQuickViewFacets","absoluteContextPath","endsWith","slice","quickViewEntity","navigationPath","compileExpression","pathInModel","getPropertyWithSemanticObject","getSemanticObjectsAndQualifierMap","propertyPathLabel","Label","qualifiers","Object","fromEntries","entries","_ref","qualifierKey","payload","semanticObjects","entityType","dataField","contact","dataFieldPropPath","getContextRelativeTargetObjectPath","createContent","delegateConfiguration","customData","getAllCustomData","_jsx","MdcLink","delegate","children","getCustomDataForSemanticObject","dynamicPathWithRelativeLocation","indexOfQualifier","getDynamicPathFromSemanticObject","keys","CustomData","relativeLocation","getRelativePaths","dynamicPathFromSemanticObject","values","findIndex","semanticObjectFromQualifier","item","customDataForSemanticObject"],"sources":["./QuickView.tsx"],"sourcesContent":["import type { AnnotationTerm, NavigationProperty, Property } from \"@sap-ux/vocabularies-types\";\nimport type * as Edm from \"@sap-ux/vocabularies-types/Edm\";\nimport type { CommonAnnotationTerms } from \"@sap-ux/vocabularies-types/vocabularies/Common\";\nimport { CommonAnnotationTypes } from \"@sap-ux/vocabularies-types/vocabularies/Common\";\nimport { compileExpression, pathInModel, type CompiledBindingToolkitExpression } from \"sap/fe/base/BindingToolkit\";\nimport { isProperty } from \"sap/fe/core/helpers/TypeGuards\";\nimport { getContextRelativeTargetObjectPath, getRelativePaths, type DataModelObjectPath } from \"sap/fe/core/templating/DataModelPathHelper\";\nimport {\n\tgetDynamicPathFromSemanticObject,\n\tgetPropertyWithSemanticObject,\n\tgetSemanticObjectMappings,\n\tgetSemanticObjectUnavailableActions,\n\tgetSemanticObjectsAndQualifierMap\n} from \"sap/fe/core/templating/SemanticObjectHelper\";\nimport { isUsedInNavigationWithQuickViewFacets } from \"sap/fe/macros/field/FieldTemplating\";\nimport type {\n\tLinkDelegatePayload,\n\tRegisteredSemanticObjectMapping,\n\tRegisteredSemanticObjectUnavailableAction\n} from \"sap/fe/macros/quickView/QuickViewDelegate\";\nimport CustomData from \"sap/ui/core/CustomData\";\nimport MdcLink from \"sap/ui/mdc/Link\";\n\nexport default class QuickView {\n\tpublic metaPath!: string;\n\n\tpublic contextPath!: string;\n\n\t/**\n\t * Custom semantic object\n\t */\n\tpublic semanticObject?: string;\n\n\tpublic valueDataModelPath!: DataModelObjectPath<Property>;\n\n\tprivate payload!: LinkDelegatePayload;\n\n\tprivate qualifierMap!: Record<string, CompiledBindingToolkitExpression>;\n\n\tconstructor(valueDataModelPath: DataModelObjectPath<Property>, metaPath: string, contextPath: string, semanticObject?: string) {\n\t\tthis.valueDataModelPath = valueDataModelPath;\n\t\tthis.metaPath = metaPath;\n\t\tthis.contextPath = contextPath;\n\t\tthis.semanticObject = semanticObject;\n\t\tthis.computePropertiesAndPayload();\n\t}\n\n\t/**\n\t * Get the relative path to the entity which quick view Facets we want to display.\n\t * @param propertyDataModelPath\n\t * @returns A path if it exists.\n\t */\n\tstatic getRelativePathToQuickViewEntity(propertyDataModelPath: DataModelObjectPath<Property>): string | undefined {\n\t\tlet relativePathToQuickViewEntity: string | undefined;\n\t\tconst quickViewNavProp = this.getNavPropToQuickViewEntity(propertyDataModelPath);\n\t\tif (quickViewNavProp) {\n\t\t\trelativePathToQuickViewEntity = propertyDataModelPath.navigationProperties.reduce((relativPath: string, navProp) => {\n\t\t\t\tif (\n\t\t\t\t\tnavProp.name !== quickViewNavProp.name &&\n\t\t\t\t\t!propertyDataModelPath.contextLocation?.navigationProperties.find(\n\t\t\t\t\t\t(contextNavProp) => contextNavProp.name === navProp.name\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\t// we keep only navProperties that are part of the relativePath and not the one for quickViewNavProp\n\t\t\t\t\treturn `${relativPath}${navProp.name}/`;\n\t\t\t\t}\n\t\t\t\treturn relativPath;\n\t\t\t}, \"\");\n\t\t\trelativePathToQuickViewEntity = `${relativePathToQuickViewEntity}${quickViewNavProp.name}`;\n\t\t}\n\t\treturn relativePathToQuickViewEntity;\n\t}\n\n\t/**\n\t * Get the semanticObjectMappings from metadata in the payload expected structure.\n\t * @param propertyWithSemanticObject\n\t * @param qualifierMap\n\t * @returns A payload structure for semanticObjectMappings\n\t */\n\tstatic getSemanticObjectMappingsForPayload(\n\t\tpropertyWithSemanticObject: Property | NavigationProperty | undefined,\n\t\tqualifierMap: Record<string, CompiledBindingToolkitExpression>\n\t): RegisteredSemanticObjectMapping[] {\n\t\tconst semanticObjectMappings: RegisteredSemanticObjectMapping[] = [];\n\t\tif (propertyWithSemanticObject !== undefined) {\n\t\t\tfor (const semanticObjectMapping of getSemanticObjectMappings(propertyWithSemanticObject)) {\n\t\t\t\tconst correspondingSemanticObject = qualifierMap[semanticObjectMapping.qualifier || \"\"];\n\t\t\t\tif (correspondingSemanticObject) {\n\t\t\t\t\tsemanticObjectMappings.push({\n\t\t\t\t\t\tsemanticObject: correspondingSemanticObject,\n\t\t\t\t\t\titems: semanticObjectMapping.map((semanticObjectMappingType) => {\n\t\t\t\t\t\t\tswitch (semanticObjectMappingType.$Type) {\n\t\t\t\t\t\t\t\tcase CommonAnnotationTypes.SemanticObjectMappingConstant:\n\t\t\t\t\t\t\t\t\tthrow new Error(\"Using SemanticObjectMappingConstant is not supported.\");\n\t\t\t\t\t\t\t\tcase CommonAnnotationTypes.SemanticObjectMappingType:\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\tkey: semanticObjectMappingType.LocalProperty.value,\n\t\t\t\t\t\t\t\t\t\tvalue: semanticObjectMappingType.SemanticObjectProperty.valueOf()\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn semanticObjectMappings;\n\t}\n\n\t/**\n\t * Get the semanticObjectUnavailableActions from metadata in the payload expected structure.\n\t * @param propertyWithSemanticObject\n\t * @param qualifierMap\n\t * @returns A payload structure for semanticObjectUnavailableActions\n\t */\n\tstatic getSemanticObjectUnavailableActionsForPayload(\n\t\tpropertyWithSemanticObject: Property | NavigationProperty | undefined,\n\t\tqualifierMap: Record<string, CompiledBindingToolkitExpression>\n\t): RegisteredSemanticObjectUnavailableAction[] {\n\t\tconst semanticObjectUnavailableActions: RegisteredSemanticObjectUnavailableAction[] = [];\n\t\tif (propertyWithSemanticObject !== undefined) {\n\t\t\tfor (const unavailableActionAnnotation of getSemanticObjectUnavailableActions(propertyWithSemanticObject) as ({\n\t\t\t\tterm: CommonAnnotationTerms.SemanticObjectUnavailableActions;\n\t\t\t} & AnnotationTerm<Edm.String[]>)[]) {\n\t\t\t\tconst correspondingSemanticObject = qualifierMap[unavailableActionAnnotation.qualifier || \"\"];\n\t\t\t\tif (correspondingSemanticObject) {\n\t\t\t\t\tsemanticObjectUnavailableActions.push({\n\t\t\t\t\t\tsemanticObject: correspondingSemanticObject,\n\t\t\t\t\t\tactions: unavailableActionAnnotation.map((unavailableAction) => unavailableAction as string)\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn semanticObjectUnavailableActions;\n\t}\n\n\t/**\n\t * Add customObject(s) to the semanticObject list for the payload if it exists.\n\t * @param semanticObjectsList List of actual semantic objects\n\t * @param customSemanticObject Semantic object defined in the property 'semanticObject' of the macro field block\n\t * @param qualifierMap Map of semantic object qualifiers from annotations\n\t */\n\tstatic addCustomSemanticObjectToSemanticObjectListForPayload(\n\t\tsemanticObjectsList: string[],\n\t\tcustomSemanticObject: string | undefined,\n\t\tqualifierMap: Record<string, CompiledBindingToolkitExpression>\n\t): void {\n\t\tif (customSemanticObject) {\n\t\t\tsemanticObjectsList.splice(0, semanticObjectsList.length);\n\t\t\t// the custom semantic objects are either a single string/key to custom data or a stringified array\n\t\t\tif (!customSemanticObject.startsWith(\"[\")) {\n\t\t\t\t// customSemanticObject = \"semanticObject\" | \"{pathInModel} | {formatter...}\"\n\t\t\t\tif (!semanticObjectsList.includes(customSemanticObject)) {\n\t\t\t\t\tsemanticObjectsList.push(customSemanticObject);\n\t\t\t\t\tqualifierMap[\"undefined\"] = customSemanticObject;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// customSemanticObject = '[\"semanticObject1\",\"semanticObject2\"]'\n\t\t\t\tfor (const semanticObject of JSON.parse(customSemanticObject) as string[]) {\n\t\t\t\t\tif (!semanticObjectsList.includes(semanticObject)) {\n\t\t\t\t\t\tsemanticObjectsList.push(semanticObject);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Get the navigationProperty to an entity with QuickViewFacets that can be linked to the property.\n\t * @param propertyDataModelPath\n\t * @returns A navigation property if it exists.\n\t */\n\tstatic getNavPropToQuickViewEntity(propertyDataModelPath: DataModelObjectPath<Property>): NavigationProperty | undefined {\n\t\t//TODO we should investigate to put this code as common with FieldTemplating.isUsedInNavigationWithQuickViewFacets\n\t\tconst property = propertyDataModelPath.targetObject as Property;\n\t\tconst navigationProperties = propertyDataModelPath.targetEntityType.navigationProperties;\n\t\tlet quickViewNavProp = navigationProperties.find((navProp: NavigationProperty) => {\n\t\t\treturn navProp.referentialConstraint.some((referentialConstraint) => {\n\t\t\t\treturn referentialConstraint.sourceProperty === property.name && navProp.targetType.annotations.UI?.QuickViewFacets;\n\t\t\t});\n\t\t});\n\t\tif (!quickViewNavProp && propertyDataModelPath.contextLocation?.targetEntitySet !== propertyDataModelPath.targetEntitySet) {\n\t\t\tconst semanticKeys = propertyDataModelPath.targetEntityType.annotations.Common?.SemanticKey || [];\n\t\t\tconst isPropertySemanticKey = semanticKeys.some((semanticKey) => semanticKey.$target === property);\n\t\t\tconst lastNavProp = propertyDataModelPath.navigationProperties[propertyDataModelPath.navigationProperties.length - 1];\n\t\t\tif ((isPropertySemanticKey || property.isKey) && propertyDataModelPath.targetEntityType.annotations.UI?.QuickViewFacets) {\n\t\t\t\tquickViewNavProp = lastNavProp as unknown as NavigationProperty;\n\t\t\t}\n\t\t}\n\t\treturn quickViewNavProp;\n\t}\n\n\t/**\n\t * Compute the properties and payload for the QuickView.\n\t */\n\tcomputePropertiesAndPayload(): void {\n\t\tconst valueProperty = isProperty(this.valueDataModelPath.targetObject) ? this.valueDataModelPath.targetObject : undefined;\n\t\tconst hasQuickViewFacets =\n\t\t\tvalueProperty && isUsedInNavigationWithQuickViewFacets(this.valueDataModelPath, valueProperty) ? \"true\" : \"false\";\n\n\t\tconst relativePathToQuickViewEntity = QuickView.getRelativePathToQuickViewEntity(this.valueDataModelPath);\n\t\tlet absoluteContextPath = this.contextPath;\n\t\tabsoluteContextPath = absoluteContextPath.endsWith(\"/\") ? absoluteContextPath.slice(0, -1) : absoluteContextPath;\n\t\tconst quickViewEntity = relativePathToQuickViewEntity ? `${absoluteContextPath}/${relativePathToQuickViewEntity}` : undefined;\n\t\tconst navigationPath = relativePathToQuickViewEntity ? compileExpression(pathInModel(relativePathToQuickViewEntity)) : undefined;\n\n\t\tconst propertyWithSemanticObject = getPropertyWithSemanticObject(this.valueDataModelPath);\n\t\tconst { semanticObjectsList, qualifierMap } = getSemanticObjectsAndQualifierMap(propertyWithSemanticObject);\n\t\tconst semanticObjectMappings = QuickView.getSemanticObjectMappingsForPayload(propertyWithSemanticObject, qualifierMap);\n\t\tconst semanticObjectUnavailableActions = QuickView.getSemanticObjectUnavailableActionsForPayload(\n\t\t\tpropertyWithSemanticObject,\n\t\t\tqualifierMap\n\t\t);\n\t\tQuickView.addCustomSemanticObjectToSemanticObjectListForPayload(semanticObjectsList, this.semanticObject, qualifierMap);\n\t\tconst propertyPathLabel = (valueProperty?.annotations.Common?.Label?.valueOf() as string) || \"\";\n\n\t\tconst qualifiers = Object.fromEntries(\n\t\t\tObject.entries(qualifierMap).map(([key, value]) => {\n\t\t\t\tconst qualifierKey = key === \"\" ? \"SemanticObject\" : `SemanticObject#${key}`;\n\t\t\t\treturn [qualifierKey, value];\n\t\t\t})\n\t\t);\n\t\tthis.qualifierMap = qualifierMap;\n\t\tthis.payload = {\n\t\t\tsemanticObjects: semanticObjectsList,\n\t\t\tentityType: quickViewEntity,\n\t\t\tsemanticObjectUnavailableActions: semanticObjectUnavailableActions,\n\t\t\tsemanticObjectMappings: semanticObjectMappings,\n\t\t\tpropertyPathLabel: propertyPathLabel,\n\t\t\tcontextPath: this.contextPath,\n\t\t\tdataField: quickViewEntity === undefined ? this.metaPath : undefined,\n\t\t\tcontact: undefined,\n\t\t\tdataFieldPropPath: getContextRelativeTargetObjectPath(this.valueDataModelPath),\n\t\t\tnavigationPath: navigationPath,\n\t\t\thasQuickViewFacets: hasQuickViewFacets,\n\t\t\tqualifiers: qualifiers\n\t\t};\n\t}\n\n\t/**\n\t * Create the content for the QuickView.\n\t * @returns The control definition.\n\t */\n\tpublic createContent(): MdcLink | string {\n\t\tconst delegateConfiguration = {\n\t\t\tname: \"sap/fe/macros/quickView/QuickViewDelegate\",\n\t\t\tpayload: this.payload\n\t\t};\n\t\tconst customData = this.getAllCustomData(this.payload.semanticObjects, this.valueDataModelPath);\n\t\treturn <MdcLink delegate={delegateConfiguration}>{customData.length ? { customData: customData } : {}}</MdcLink>;\n\t}\n\n\t/**\n\t * Prepare the custom data information for the mdc link control.\n\t * @param dynamicPathWithRelativeLocation The complied expression of the semantic object\n\t * @param indexOfQualifier The index of the qualifier map\n\t * @returns The custom data node updated.\n\t */\n\tgetCustomDataForSemanticObject(dynamicPathWithRelativeLocation: string, indexOfQualifier: number): CustomData | undefined {\n\t\tif (getDynamicPathFromSemanticObject(dynamicPathWithRelativeLocation)) {\n\t\t\tconst qualifier =\n\t\t\t\tObject.keys(this.qualifierMap)[indexOfQualifier] === \"\" ? \"\" : `#${Object.keys(this.qualifierMap)[indexOfQualifier]}`;\n\t\t\tconst key = `SemanticObject${qualifier}`;\n\t\t\treturn <CustomData key={key} value={dynamicPathWithRelativeLocation} />;\n\t\t}\n\t\treturn;\n\t}\n\n\t/**\n\t * Get all custom data for the semantic objects.\n\t * @param semanticObjects The list of semantic objects\n\t * @param valueDataModelPath The data model path of the property\n\t * @returns The custom data.\n\t */\n\n\tgetAllCustomData(semanticObjects: string[], valueDataModelPath: DataModelObjectPath<Property> | undefined): CustomData[] {\n\t\tconst customData = [];\n\t\tlet indexOfQualifier = 0;\n\t\tconst relativeLocation = valueDataModelPath && getRelativePaths(valueDataModelPath);\n\n\t\tfor (const semanticObject of semanticObjects) {\n\t\t\tconst dynamicPathFromSemanticObject = getDynamicPathFromSemanticObject(semanticObject);\n\t\t\tlet dynamicPathWithRelativeLocation;\n\t\t\tif (dynamicPathFromSemanticObject) {\n\t\t\t\tindexOfQualifier = Object.values(this.qualifierMap).findIndex(\n\t\t\t\t\t(semanticObjectFromQualifier) => semanticObjectFromQualifier === semanticObject\n\t\t\t\t);\n\t\t\t\tif (semanticObject.startsWith(\"{=\") || semanticObject.startsWith(\"{$componentState>\")) {\n\t\t\t\t\t// This a complex semantic object or a binding on another model, we do not manipulate the expression binding.\n\t\t\t\t\tdynamicPathWithRelativeLocation = semanticObject;\n\t\t\t\t} else {\n\t\t\t\t\tdynamicPathWithRelativeLocation = compileExpression(\n\t\t\t\t\t\tpathInModel(dynamicPathFromSemanticObject, undefined, relativeLocation)\n\t\t\t\t\t);\n\t\t\t\t\tfor (const item of Object.keys(this.qualifierMap)) {\n\t\t\t\t\t\tif (this.qualifierMap[item] === semanticObject) {\n\t\t\t\t\t\t\tthis.qualifierMap[item] = dynamicPathWithRelativeLocation;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst customDataForSemanticObject = this.getCustomDataForSemanticObject(\n\t\t\t\t\tdynamicPathWithRelativeLocation ? dynamicPathWithRelativeLocation : \"\",\n\t\t\t\t\tindexOfQualifier\n\t\t\t\t);\n\t\t\t\tif (customDataForSemanticObject) {\n\t\t\t\t\tcustomData.push(customDataForSemanticObject);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn customData;\n\t}\n}\n"],"mappings":"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","ignoreList":[]}