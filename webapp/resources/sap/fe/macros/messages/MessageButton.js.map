{"version":3,"file":"MessageButton.js","names":["MessageButton","_dec","defineUI5Class","_dec2","aggregation","type","multiple","singularName","_dec3","event","_class","_class2","_Button","id","settings","_this","call","this","_initializerDefineProperty","_descriptor","_descriptor2","sGeneralGroupText","sViewId","sLastActionText","_inheritsLoose","_proto","prototype","init","Button","apply","isHiddenDraftEnabled","CommonUtils","getAppComponent","getEnvironmentCapabilities","getCapabilities","HiddenDraft","enabled","attachPress","handleMessagePopoverPress","oMessagePopover","MessagePopover","oItemBinding","getBinding","attachChange","_setMessageData","messageButtonId","getId","addCustomData","CustomData","key","value","attachModelContextChange","_applyFiltersAndSort","bind","attachActiveTitlePress","_activeTitlePress","oEvent","toggle","getSource","_applyGroupingAsync","async","oView","aWaitForData","oViewBindingContext","getBindingContext","_findTablesRelatedToMessages","view","oRes","aMessages","getContexts","map","oContext","getObject","oViewContext","oObjectPage","getContent","messageHandling","getVisibleSectionsFromObjectPageLayout","forEach","oSection","getSubSections","oSubSection","findElements","oElem","isA","i","length","oRowBinding","getRowBinding","sElemeBindingPath","getPath","target","indexOf","push","table","subsection","oTables","_oTable","oMDCTable","oSubsection","setBindingContext","isLengthFinal","Promise","resolve","attachEventOnce","waitForGroupingApplied","setTimeout","_applyGrouping","all","getModel","checkMessages","err","Log","error","oObjectPageLayout","_getObjectPageLayout","messages","getItems","section","enableBinding","_checkControlIdInSections","_fnEnableBindings","viewId","_getViewId","UI5Element","getElementById","uIModel","setProperty","undefined","_getTableRefErrorContext","oTable","oModel","getProperty","sRefErrorContextPath","replace","getContext","_updateInternalModel","tableRowContext","rowIndex","tableTargetColProperty","messageObject","isCreationRow","temp","targetColProperty","model","context","aValidMessageIds","Messaging","getMessageModel","getData","message","aObsoleteMessagelIds","Object","keys","filter","internalMessageId","obsoleteId","assign","_setGroupLabelForTransientMsg","sActionName","Library","getResourceBundleFor","getText","setGroupName","_computeMessageGroupAndSubTitle","subSection","elements","hasMultipleSubSections","actionName","resourceModel","getResourceModel","detachChange","setSectionNameInGroup","element","targetTableInfo","l","targetedControl","isBackEndMessage","RegExp","test","getTargets","getParent","rowBinding","fnCallbackSetGroupName","obj","getTableColumnDataAndSetSubtile","oTargetTableInfo","subTitle","setSubtitle","setActiveTitle","oTableRowContext","isInactive","_formatMessageDescription","sTableTargetColName","getIndex","sTableTargetColProperty","getSubtitle","formElement","parent","label","getLabel","labelText","isTargetedControlOrphan","bIsOrphanElement","_getMdcTable","tableHeader","getHeader","targetColumnIndex","_getTableColumnIndex","getColumns","getPropertyKey","_getTableRow","_getTableRowIndex","oTableRowBindingContexts","getCurrentContexts","messageSubtitle","getMessageSubtitle","getValueState","includeTableGroupName","_checkMergeLogicForMessageGrouping","sectionBasedGroupName","createSectionGroupName","viewContextPath","messageTargetPropertyName","split","pop","internalModel","internalModelMessageTargetPropertyPath","internalModelMessageTargetPropertyContextPath","substring","lastIndexOf","startsWith","fireActiveTitlePress","item","bIncludeTableGroupName","singleSubsectionInPageLayout","getViewData","sectionLayout","multiSubsectionInTabLayout","block","getBlocks","content","getAggregation","blocks","getMainContent","Function","aSubSections","j","k","aVisibleSections","bIsGeneralGroupName","shouldBreak","oMessageObject","_getGeneralGroupText","aControls","getControlFromMessageRelatingToSubSection","oTargetedControl","persistent","getGroupName","_findTargetForMessage","viewPath","messageTargetPath","includes","oMetaModel","getMetaModel","contextPath","getMetaPath","oContextPathMetadata","$kind","_fnEnableSubSectionBinding","getMoreBlocks","subBlock","getActions","actions","aSections","iSection","iSubSection","oAllBlocks","_findMessageGroupAfterRebinding","attachDataReceived","sControlId","oControl","View","_setLongtextUrlDescription","oDiagnosisTitle","setAsyncDescriptionHandler","config","sLongTextUrl","getLongtextUrl","jQuery","ajax","url","success","data","sDiagnosisText","getHtmlText","oldDescription","getDescription","setDescription","promise","sError","reject","processTableColumnProperties","tableColProperty","rowInformation","tableColBindingContextTextAnnotation","getTableColBindingContextForTextAnnotation","tableColTextAnnotationPath","tableColTextArrangement","labelWithValue","getTableColValue","computeColumnInfo","tableTargetColName","msgObj","colFromTableSettings","fetchColumnInfo","columnInfo","availability","getType","join","_navigationConfigured","getTableColumnVisibilityInfo","_ref","visibility","fieldsAffectedTitle","FormattedText","htmlText","fieldAffectedText","Array","isArray","diagnosisTitle","uIMessageDescription","description","diagnosisText","messageDescriptionContent","handleNoMessages","setVisible","fireEvent","iMessageLength","clearTimeout","_setMessageDataTimeout","sIcon","oMessages","oMessageCount","Error","Warning","Success","Information","oResourceBundle","sButtonType","ButtonType","Default","messageKey","messageText","toString","MessageType","Negative","Critical","Neutral","totalNumberOfMessages","setText","messageCount","messageKeys","singleTooltipKey","multipleTooltipKey","entries","messageType","messageTypeCount","MESSAGEBUTTON_SHORTCUT","toolTip","setTooltip","setIcon","setType","oPageReady","getController","pageReady","waitPageReady","navigateBack","oInternalModelContext","oItem","getParameter","oMessage","bIsBackendMessage","sSectionTitle","_defaultFocus","mdcTable","focusInfo","preventScroll","targetInfo","focus","subSections","visibleSections","controls","oTargetMdcTable","controlIds","controlId","control","parentControl","reduce","acc","val","_routing","navigateToContext","_navigateFromMessageToSectionTableInIconTabBarMode","oRefErrorContext","oRefError","_setFocusOnTargetField","targetMdcTable","iRowIndex","aTargetMdcTableRow","_getMdcTableRows","iFirstVisibleRow","_getGridTable","getFirstVisibleRow","oTargetRow","oTargetCell","getTargetCell","setFocusToControl","errorPropertyPath","navigateForwardToContext","scrollToIndex","focusOnTargetField","focusOnMessageTargetControl","sections","getSections","sectionWithTheControl","find","_navigateFromMessageToSectionInIconTabBarMode","handleMessageNavigation","getControlIds","findSubSection","setMode","groupNames","findSubSectionByTitleOrControl","title","getTitle","some","targetRow","hasNonEditableField","getEditable","isControlInTable","elem","aAllViewElements","aErroneousControls","getDomRef","aNotTableErroneousControls","ColumnListItem","getMetadata","getName","oTargetField","getContentEdit","_getMessageRank","aElements","aAllElements","sectionRank","_fnFilterUponId","getControlId","getVisible","hasOwnProperty","sectionName","subSectionName","getPersistent","_filterOutMessagesInDialog","fnTest","aControlIds","isMessageOutOfParameterDialog","Filter","path","caseSensitive","_filterOutContextSuccessMessages","boundContextSuccessMessages","_getFilterToHideBackendMessageOnErrorValidation","getIdsOfFielsdWithErrorValidation","validation","match","filters","operator","FilterOperator","EQ","value1","and","oValidationFilters","hiddenDraftFilter","oValidationAndContextFilter","oFilters","sPath","oSorter","oDialogFilter","objectPageLayoutSections","aUserDefinedFilter","aCustomFilters","value2","oBindingContext","messageButtonHelper","getCheckControlInViewFilter","oContextSuccessFilters","filterArray","viewContext","editFlow","getRootContext","getHiddenDraftUseCaseFilter","validationAndHiddenDraftFilter","StartsWith","oValidationContextDialogFilters","Sorter","obj1","obj2","rankA","rankB","sort","_getSectionBySectionTitle","bUseIconTabBar","getUseIconTabBar","sSelectedSectionId","getSelectedSection","setSelectedSection","oTableContext","oOPContext","bShouldWaitForTableRefresh","oElement","oParentElement","oMdcTable","oTableRow","getTable","findIndex","getTargetCellIndex","elt","getCells","cell","getTargetColumnIndex","targetElement","targetCellIndex","targetCellId","tableColumns","column","getCreationTemplate","search","component","sap","ui","require","navObject","getOwnerComponentFor","getNavigation","subOPConfigured","navConfigured","detail","route","getRowSettings","getRowActions","messagePopover","fnFocus","isOpen","fnOnClose","detachEvent","attachEvent","close","warning","escape","String","_applyDecoratedDescriptor","configurable","enumerable","writable","initializer"],"sources":["./MessageButton.ts"],"sourcesContent":["import Log from \"sap/base/Log\";\nimport type { EnhanceWithUI5 } from \"sap/fe/base/ClassSupport\";\nimport { aggregation, defineUI5Class, event } from \"sap/fe/base/ClassSupport\";\nimport type { FEView } from \"sap/fe/core/BaseController\";\nimport CommonUtils from \"sap/fe/core/CommonUtils\";\nimport type PageController from \"sap/fe/core/PageController\";\nimport type { TargetTableInfoType } from \"sap/fe/core/controllerextensions/messageHandler/messageHandling\";\nimport messageHandling from \"sap/fe/core/controllerextensions/messageHandler/messageHandling\";\nimport type { HiddenDraft } from \"sap/fe/core/converters/ManifestSettings\";\nimport { type ObjectPageManifestSettings } from \"sap/fe/core/converters/ManifestSettings\";\nimport type { InternalModelContext } from \"sap/fe/core/helpers/ModelHelper\";\nimport { getResourceModel } from \"sap/fe/core/helpers/ResourceModelHelper\";\nimport type Field from \"sap/fe/macros/Field\";\nimport type FieldWrapper from \"sap/fe/macros/controls/FieldWrapper\";\nimport type MessageFilter from \"sap/fe/macros/messages/MessageFilter\";\nimport MessagePopover from \"sap/fe/macros/messages/MessagePopover\";\nimport type TableAPI from \"sap/fe/macros/table/TableAPI\";\nimport type { TableColumnProperties } from \"sap/fe/macros/table/TableAPI\";\nimport type ObjectPageController from \"sap/fe/templates/ObjectPage/ObjectPageController.controller\";\nimport type SubSectionBlock from \"sap/fe/templates/ObjectPage/controls/SubSectionBlock\";\nimport type { $ButtonSettings } from \"sap/m/Button\";\nimport { default as Button } from \"sap/m/Button\";\nimport ColumnListItem from \"sap/m/ColumnListItem\";\nimport FormattedText from \"sap/m/FormattedText\";\nimport type HBox from \"sap/m/HBox\";\nimport type Label from \"sap/m/Label\";\nimport type MessageItem from \"sap/m/MessageItem\";\nimport type { MessagePopover$ActiveTitlePressEvent } from \"sap/m/MessagePopover\";\nimport type ResponsiveTable from \"sap/m/Table\";\nimport { ButtonType } from \"sap/m/library\";\nimport type CoreEvent from \"sap/ui/base/Event\";\nimport type ManagedObject from \"sap/ui/base/ManagedObject\";\nimport type Control from \"sap/ui/core/Control\";\nimport CustomData from \"sap/ui/core/CustomData\";\nimport UI5Element from \"sap/ui/core/Element\";\nimport Library from \"sap/ui/core/Lib\";\nimport Messaging from \"sap/ui/core/Messaging\";\nimport type Message from \"sap/ui/core/message/Message\";\nimport MessageType from \"sap/ui/core/message/MessageType\";\nimport View from \"sap/ui/core/mvc/View\";\nimport type DynamicSideContent from \"sap/ui/layout/DynamicSideContent\";\nimport type FormElement from \"sap/ui/layout/form/FormElement\";\nimport type mdcField from \"sap/ui/mdc/Field\";\nimport type { default as MDCTable, default as Table } from \"sap/ui/mdc/Table\";\nimport type Content from \"sap/ui/mdc/valuehelp/base/Content\";\nimport type BaseContext from \"sap/ui/model/Context\";\nimport Filter from \"sap/ui/model/Filter\";\nimport FilterOperator from \"sap/ui/model/FilterOperator\";\nimport Sorter from \"sap/ui/model/Sorter\";\nimport type JSONModel from \"sap/ui/model/json/JSONModel\";\nimport type ODataV4Context from \"sap/ui/model/odata/v4/Context\";\nimport type ODataListBinding from \"sap/ui/model/odata/v4/ODataListBinding\";\nimport type ODataMetaModel from \"sap/ui/model/odata/v4/ODataMetaModel\";\nimport type Column from \"sap/ui/table/Column\";\nimport type CreationRow from \"sap/ui/table/CreationRow\";\nimport type Row from \"sap/ui/table/Row\";\nimport type UITable from \"sap/ui/table/Table\";\nimport jQuery from \"sap/ui/thirdparty/jquery\";\nimport type ObjectPageLayout from \"sap/uxap/ObjectPageLayout\";\nimport type ObjectPageSection from \"sap/uxap/ObjectPageSection\";\nimport type ObjectPageSubSection from \"sap/uxap/ObjectPageSubSection\";\nimport type SubSection from \"../controls/section/SubSection\";\nimport messageButtonHelper from \"./MessageButtonHelper\";\n\ntype MessageCount = {\n\tError: number;\n\tWarning: number;\n\tSuccess: number;\n\tInformation: number;\n};\n\ntype $MessageButtonSettings = $ButtonSettings & {\n\tmessageChange: Function;\n};\n\n@defineUI5Class(\"sap.fe.macros.messages.MessageButton\")\nclass MessageButton extends Button {\n\tconstructor(id?: string | $MessageButtonSettings, settings?: $MessageButtonSettings) {\n\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t// @ts-ignore\n\t\tsuper(id, settings);\n\t}\n\n\t@aggregation({ type: \"sap.fe.macros.messages.MessageFilter\", multiple: true, singularName: \"customFilter\" })\n\tcustomFilters!: MessageFilter;\n\n\t@event()\n\tmessageChange!: Function;\n\n\tpublic oMessagePopover!: MessagePopover;\n\n\tpublic oItemBinding!: ODataListBinding;\n\n\tprivate oObjectPageLayout: ObjectPageLayout | undefined;\n\n\tprivate sGeneralGroupText = \"\";\n\n\tprivate _setMessageDataTimeout: number | undefined;\n\n\tprivate sViewId = \"\";\n\n\tprivate sLastActionText = \"\";\n\n\tpublic isHiddenDraftEnabled: boolean | undefined;\n\n\tinit(): void {\n\t\tButton.prototype.init.apply(this);\n\t\tthis.isHiddenDraftEnabled = (\n\t\t\tCommonUtils.getAppComponent(this)?.getEnvironmentCapabilities()?.getCapabilities()?.HiddenDraft as HiddenDraft\n\t\t)?.enabled;\n\t\t//press event handler attached to open the message popover\n\t\tthis.attachPress(this.handleMessagePopoverPress, this);\n\t\tthis.oMessagePopover = new MessagePopover();\n\t\tthis.oItemBinding = this.oMessagePopover.getBinding(\"items\") as ODataListBinding;\n\t\tthis.oItemBinding.attachChange(this._setMessageData, this);\n\t\tconst messageButtonId = this.getId();\n\t\tif (messageButtonId) {\n\t\t\tthis.oMessagePopover.addCustomData(new CustomData({ key: \"messageButtonId\", value: messageButtonId })); // TODO check for custom data type\n\t\t}\n\t\tthis.attachModelContextChange(this._applyFiltersAndSort.bind(this));\n\t\tthis.oMessagePopover.attachActiveTitlePress(this._activeTitlePress.bind(this));\n\t}\n\n\t/**\n\t * The method that is called when a user clicks on the MessageButton control.\n\t * @param oEvent Event object\n\t */\n\thandleMessagePopoverPress(oEvent: CoreEvent): void {\n\t\tthis.oMessagePopover.toggle(oEvent.getSource());\n\t}\n\n\t/**\n\t * The method that groups the messages based on the section or subsection they belong to.\n\t * This method force the loading of contexts for all tables before to apply the grouping.\n\t * @param oView Current view.\n\t * @returns Return promise.\n\t * @private\n\t */\n\tasync _applyGroupingAsync(oView: FEView): Promise<void> {\n\t\tconst aWaitForData: Promise<void>[] = [];\n\t\tconst oViewBindingContext = oView.getBindingContext();\n\t\tconst _findTablesRelatedToMessages = (view: View): { table: MDCTable; subsection: ObjectPageSubSection }[] => {\n\t\t\tconst oRes: { table: MDCTable; subsection: ObjectPageSubSection }[] = [];\n\t\t\tconst aMessages = this.oItemBinding.getContexts().map(function (oContext: ODataV4Context) {\n\t\t\t\treturn oContext.getObject();\n\t\t\t});\n\t\t\tconst oViewContext = view.getBindingContext();\n\t\t\tif (oViewContext) {\n\t\t\t\tconst oObjectPage: Control = view.getContent()[0];\n\t\t\t\tmessageHandling.getVisibleSectionsFromObjectPageLayout(oObjectPage).forEach(function (oSection: ObjectPageSection) {\n\t\t\t\t\toSection.getSubSections().forEach(function (oSubSection: ObjectPageSubSection) {\n\t\t\t\t\t\toSubSection.findElements(true).forEach(function (oElem: UI5Element) {\n\t\t\t\t\t\t\tif (oElem.isA<MDCTable>(\"sap.ui.mdc.Table\")) {\n\t\t\t\t\t\t\t\tfor (let i = 0; i < aMessages.length; i++) {\n\t\t\t\t\t\t\t\t\tconst oRowBinding = oElem.getRowBinding();\n\t\t\t\t\t\t\t\t\tif (oRowBinding) {\n\t\t\t\t\t\t\t\t\t\tconst sElemeBindingPath = `${oViewContext.getPath()}/${oElem.getRowBinding().getPath()}`;\n\t\t\t\t\t\t\t\t\t\tif (aMessages[i].target.indexOf(sElemeBindingPath) === 0) {\n\t\t\t\t\t\t\t\t\t\t\toRes.push({ table: oElem, subsection: oSubSection });\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn oRes;\n\t\t};\n\t\t// Search for table related to Messages and initialize the binding context of the parent subsection to retrieve the data\n\t\tconst oTables = _findTablesRelatedToMessages.bind(this)(oView);\n\t\toTables.forEach(function (_oTable) {\n\t\t\tconst oMDCTable = _oTable.table,\n\t\t\t\toSubsection = _oTable.subsection;\n\t\t\tif (!oMDCTable.getBindingContext() || oMDCTable.getBindingContext()?.getPath() !== oViewBindingContext?.getPath()) {\n\t\t\t\toSubsection.setBindingContext(oViewBindingContext);\n\t\t\t\tif (!oMDCTable.getRowBinding().isLengthFinal()) {\n\t\t\t\t\taWaitForData.push(\n\t\t\t\t\t\tnew Promise(function (resolve: Function) {\n\t\t\t\t\t\t\toMDCTable.getRowBinding().attachEventOnce(\"dataReceived\", function () {\n\t\t\t\t\t\t\t\tresolve();\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tconst waitForGroupingApplied = new Promise((resolve: Function) => {\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis._applyGrouping();\n\t\t\t\tresolve();\n\t\t\t}, 0);\n\t\t});\n\t\ttry {\n\t\t\tawait Promise.all(aWaitForData);\n\t\t\toView.getModel().checkMessages();\n\t\t\tawait waitForGroupingApplied;\n\t\t} catch (err) {\n\t\t\tLog.error(\"Error while grouping the messages in the messagePopOver\");\n\t\t}\n\t}\n\n\t/**\n\t * The method that groups the messages based on the section or subsection they belong to.\n\t * @private\n\t */\n\t_applyGrouping(): void {\n\t\tthis.oObjectPageLayout = this._getObjectPageLayout(this, this.oObjectPageLayout);\n\t\tif (!this.oObjectPageLayout) {\n\t\t\treturn;\n\t\t}\n\t\tconst messages: MessageItem[] = this.oMessagePopover.getItems();\n\t\tconst section = messageHandling.getVisibleSectionsFromObjectPageLayout(this.oObjectPageLayout);\n\t\tconst enableBinding = this._checkControlIdInSections(messages, false);\n\t\tif (enableBinding) {\n\t\t\tthis._fnEnableBindings(section);\n\t\t}\n\t\t//Clear messageTargetProperty\n\t\tconst viewId = this._getViewId(this.getId());\n\t\tconst view = UI5Element.getElementById(viewId as string);\n\t\tconst uIModel = view?.getModel(\"internal\") as JSONModel;\n\t\tuIModel?.setProperty(\"/messageTargetPropertyPath\", undefined);\n\t}\n\n\t/**\n\t * The method retrieves the binding context for the refError object.\n\t * The refError contains a map to store the indexes of the rows with errors.\n\t * @param oTable The table for which we want to get the refError Object.\n\t * @returns Context of the refError.\n\t * @private\n\t */\n\t_getTableRefErrorContext(oTable: MDCTable): BaseContext | undefined {\n\t\tconst oModel = oTable.getModel(\"internal\") as JSONModel;\n\t\t//initialize the refError property if it doesn't exist\n\t\tif (!oTable.getBindingContext(\"internal\")?.getProperty(\"refError\")) {\n\t\t\toModel.setProperty(\"refError\", {}, oTable.getBindingContext(\"internal\")!);\n\t\t}\n\t\tconst sRefErrorContextPath =\n\t\t\toTable.getBindingContext(\"internal\")?.getPath() +\n\t\t\t\"/refError/\" +\n\t\t\toTable.getBindingContext()?.getPath().replace(\"/\", \"$\") +\n\t\t\t\"$\" +\n\t\t\toTable.getRowBinding().getPath().replace(\"/\", \"$\");\n\t\tconst oContext = oModel.getContext(sRefErrorContextPath);\n\t\tif (!oContext.getProperty(\"\")) {\n\t\t\toModel.setProperty(\"\", {}, oContext);\n\t\t}\n\t\treturn oContext;\n\t}\n\n\t_updateInternalModel(\n\t\ttableRowContext: ODataV4Context | undefined,\n\t\trowIndex: number | undefined,\n\t\ttableTargetColProperty: string | undefined,\n\t\ttable: MDCTable,\n\t\tmessageObject: Message,\n\t\tisCreationRow?: boolean\n\t): void {\n\t\tlet temp;\n\t\tif (isCreationRow) {\n\t\t\ttemp = {\n\t\t\t\trowIndex: \"CreationRow\",\n\t\t\t\ttargetColProperty: tableTargetColProperty ? tableTargetColProperty : \"\"\n\t\t\t};\n\t\t} else {\n\t\t\ttemp = {\n\t\t\t\trowIndex: tableRowContext ? rowIndex : \"\",\n\t\t\t\ttargetColProperty: tableTargetColProperty ? tableTargetColProperty : \"\"\n\t\t\t};\n\t\t}\n\t\tconst model = table.getModel(\"internal\") as JSONModel,\n\t\t\tcontext = this._getTableRefErrorContext(table);\n\t\t//we first remove the entries with obsolete message ids from the internal model before inserting the new error info :\n\t\tconst aValidMessageIds = Messaging.getMessageModel()\n\t\t\t.getData()\n\t\t\t.map(function (message: Message) {\n\t\t\t\treturn message.getId();\n\t\t\t});\n\t\tlet aObsoleteMessagelIds;\n\t\tif (context?.getProperty(\"\")) {\n\t\t\taObsoleteMessagelIds = Object.keys(context?.getProperty(\"\")).filter(function (internalMessageId) {\n\t\t\t\treturn aValidMessageIds.indexOf(internalMessageId) === -1;\n\t\t\t});\n\t\t\taObsoleteMessagelIds.forEach(function (obsoleteId) {\n\t\t\t\tdelete context?.getProperty(\"\")[obsoleteId];\n\t\t\t});\n\t\t}\n\t\tmodel?.setProperty(\n\t\t\tmessageObject.getId(),\n\t\t\tObject.assign({}, context?.getProperty(messageObject.getId()) ? context.getProperty(messageObject.getId()) : {}, temp),\n\t\t\tcontext\n\t\t);\n\t}\n\n\t/**\n\t * The method that sets groups for transient messages.\n\t * @param message The transient message for which we want to compute and set group.\n\t * @param sActionName The action name.\n\t * @private\n\t */\n\t_setGroupLabelForTransientMsg(message: MessageItem, sActionName: string | undefined): void {\n\t\tthis.sLastActionText = this.sLastActionText\n\t\t\t? this.sLastActionText\n\t\t\t: Library.getResourceBundleFor(\"sap.fe.core\")!.getText(\"T_MESSAGE_BUTTON_SAPFE_MESSAGE_GROUP_LAST_ACTION\");\n\n\t\tmessage.setGroupName(`${this.sLastActionText}: ${sActionName}`);\n\t}\n\n\t/**\n\t * The method that groups messages and adds the subtitle.\n\t * @param message The message we use to compute the group and subtitle.\n\t * @param section The section containing the controls.\n\t * @param subSection The subsection containing the controls.\n\t * @param elements List of controls from a subsection related to a message.\n\t * @param hasMultipleSubSections True if there is more than 1 subsection in the section.\n\t * @param actionName The action name, if any.\n\t * @returns Return the control targeted by the message.\n\t * @private\n\t */\n\t_computeMessageGroupAndSubTitle(\n\t\tmessage: MessageItem,\n\t\tsection: ObjectPageSection,\n\t\tsubSection: ObjectPageSubSection,\n\t\telements: UI5Element[],\n\t\thasMultipleSubSections: boolean,\n\t\tactionName: string | undefined\n\t): UI5Element | undefined {\n\t\tconst resourceModel = getResourceModel(section);\n\t\tthis.oItemBinding.detachChange(this._setMessageData, this);\n\t\tconst messageObject = message.getBindingContext(\"message\")?.getObject() as Message;\n\t\tconst setSectionNameInGroup = true;\n\t\tlet element: UI5Element,\n\t\t\ttable: MDCTable | undefined,\n\t\t\ttargetTableInfo = {} as TargetTableInfoType,\n\t\t\tl,\n\t\t\trowIndex: number | undefined,\n\t\t\ttargetedControl: UI5Element | undefined,\n\t\t\tisCreationRow: boolean;\n\t\tconst isBackEndMessage = new RegExp(\"^/\").test(messageObject?.getTargets()[0]);\n\t\tif (isBackEndMessage) {\n\t\t\tfor (l = 0; l < elements.length; l++) {\n\t\t\t\telement = elements[l];\n\t\t\t\ttargetedControl = element;\n\t\t\t\tif (element.isA(\"sap.m.Table\") || (element as UI5Element).isA(\"sap.ui.table.Table\")) {\n\t\t\t\t\ttable = element.getParent() as MDCTable;\n\t\t\t\t\tconst rowBinding = table.getRowBinding();\n\t\t\t\t\tconst fnCallbackSetGroupName = (): void => {\n\t\t\t\t\t\tthis._setGroupLabelForTransientMsg(message, actionName);\n\t\t\t\t\t};\n\t\t\t\t\tif (rowBinding && rowBinding.isLengthFinal() && table.getBindingContext()) {\n\t\t\t\t\t\tconst obj = messageHandling.getTableColumnDataAndSetSubtile(\n\t\t\t\t\t\t\tmessageObject,\n\t\t\t\t\t\t\ttable,\n\t\t\t\t\t\t\telement,\n\t\t\t\t\t\t\trowBinding,\n\t\t\t\t\t\t\tactionName,\n\t\t\t\t\t\t\tsetSectionNameInGroup,\n\t\t\t\t\t\t\tfnCallbackSetGroupName\n\t\t\t\t\t\t);\n\t\t\t\t\t\ttargetTableInfo = obj.oTargetTableInfo;\n\t\t\t\t\t\tif (obj.subTitle) {\n\t\t\t\t\t\t\tmessage.setSubtitle(obj.subTitle);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmessage.setActiveTitle(\n\t\t\t\t\t\t\t!!targetTableInfo.oTableRowContext &&\n\t\t\t\t\t\t\t\t!targetTableInfo.oTableRowContext?.isInactive() && // check if the rowcontext is active\n\t\t\t\t\t\t\t\ttargetTableInfo.oTableRowContext.getPath() !==\n\t\t\t\t\t\t\t\t\tmessage.getBindingContext(\"message\")?.getProperty(\"target\").replace(/\\/$/, \"\") // check if the target of the message is not the row itself (remove the last / if presents)\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tif (targetTableInfo.oTableRowContext && !targetTableInfo.oTableRowContext.isInactive()) {\n\t\t\t\t\t\t\tthis._formatMessageDescription(\n\t\t\t\t\t\t\t\tmessage,\n\t\t\t\t\t\t\t\ttargetTableInfo.oTableRowContext,\n\t\t\t\t\t\t\t\ttargetTableInfo.sTableTargetColName,\n\t\t\t\t\t\t\t\ttable\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\trowIndex = targetTableInfo.oTableRowContext && targetTableInfo.oTableRowContext.getIndex();\n\t\t\t\t\t\tthis._updateInternalModel(\n\t\t\t\t\t\t\ttargetTableInfo.oTableRowContext,\n\t\t\t\t\t\t\trowIndex,\n\t\t\t\t\t\t\ttargetTableInfo.sTableTargetColProperty,\n\t\t\t\t\t\t\ttable,\n\t\t\t\t\t\t\tmessageObject\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tmessage.setActiveTitle(true);\n\n\t\t\t\t\tif (message.getSubtitle() === \"\") {\n\t\t\t\t\t\tlet formElement: FormElement | undefined;\n\t\t\t\t\t\tlet parent = targetedControl.getParent();\n\t\t\t\t\t\twhile (parent) {\n\t\t\t\t\t\t\tif (parent && parent.isA<FormElement>(\"sap.ui.layout.form.FormElement\")) {\n\t\t\t\t\t\t\t\tformElement = parent;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tparent = parent.getParent();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (formElement) {\n\t\t\t\t\t\t\tconst label = formElement.getLabel();\n\t\t\t\t\t\t\tlet labelText = \"\";\n\n\t\t\t\t\t\t\tif (typeof label === \"string\") {\n\t\t\t\t\t\t\t\tlabelText = label;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tlabelText = (label as Label).getText();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tmessage.setSubtitle(labelText);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t//check if the targeted control is a child of one of the other controls\n\t\t\t\t\tconst isTargetedControlOrphan = messageHandling.bIsOrphanElement(targetedControl, elements);\n\t\t\t\t\tif (isTargetedControlOrphan) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t//There is only one elt as this is a frontEnd message\n\t\t\ttargetedControl = elements[0];\n\t\t\ttable = this._getMdcTable(targetedControl);\n\t\t\ttargetTableInfo = {} as TargetTableInfoType;\n\t\t\tif (table) {\n\t\t\t\ttargetTableInfo.tableHeader = table.getHeader();\n\t\t\t\tconst targetColumnIndex = this._getTableColumnIndex(targetedControl);\n\t\t\t\ttargetTableInfo.sTableTargetColProperty =\n\t\t\t\t\ttargetColumnIndex !== undefined && targetColumnIndex > -1\n\t\t\t\t\t\t? table.getColumns()[targetColumnIndex].getPropertyKey()\n\t\t\t\t\t\t: undefined;\n\n\t\t\t\ttargetTableInfo.sTableTargetColName =\n\t\t\t\t\ttargetTableInfo.sTableTargetColProperty && targetColumnIndex !== undefined && targetColumnIndex > -1\n\t\t\t\t\t\t? table.getColumns()[targetColumnIndex].getHeader()\n\t\t\t\t\t\t: undefined;\n\t\t\t\tisCreationRow = this._getTableRow(targetedControl)?.isA<CreationRow>(\"sap.ui.table.CreationRow\") ?? false;\n\t\t\t\tif (!isCreationRow) {\n\t\t\t\t\trowIndex = this._getTableRowIndex(targetedControl);\n\t\t\t\t\ttargetTableInfo.oTableRowBindingContexts = table.getRowBinding().getCurrentContexts();\n\t\t\t\t\ttargetTableInfo.oTableRowContext =\n\t\t\t\t\t\trowIndex !== undefined ? targetTableInfo.oTableRowBindingContexts[rowIndex] : undefined;\n\t\t\t\t}\n\t\t\t\tconst messageSubtitle = messageHandling.getMessageSubtitle(\n\t\t\t\t\tmessageObject,\n\t\t\t\t\ttargetTableInfo.oTableRowBindingContexts,\n\t\t\t\t\ttargetTableInfo.oTableRowContext,\n\t\t\t\t\ttargetTableInfo.sTableTargetColName,\n\t\t\t\t\ttable,\n\t\t\t\t\tisCreationRow,\n\t\t\t\t\ttargetColumnIndex === 0 && (targetedControl as mdcField).getValueState() === \"Error\"\n\t\t\t\t\t\t? (targetedControl as Control)\n\t\t\t\t\t\t: undefined\n\t\t\t\t);\n\t\t\t\t//set the subtitle\n\t\t\t\tif (messageSubtitle) {\n\t\t\t\t\tmessage.setSubtitle(messageSubtitle);\n\t\t\t\t}\n\t\t\t\tmessage.setActiveTitle(!!targetTableInfo.oTableRowContext);\n\t\t\t\tif (targetTableInfo.oTableRowContext) {\n\t\t\t\t\tthis._formatMessageDescription(message, targetTableInfo.oTableRowContext, targetTableInfo.sTableTargetColName, table);\n\t\t\t\t}\n\t\t\t\tthis._updateInternalModel(\n\t\t\t\t\ttargetTableInfo.oTableRowContext,\n\t\t\t\t\trowIndex,\n\t\t\t\t\ttargetTableInfo.sTableTargetColProperty,\n\t\t\t\t\ttable,\n\t\t\t\t\tmessageObject,\n\t\t\t\t\tisCreationRow\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tif (setSectionNameInGroup) {\n\t\t\tconst includeTableGroupName = this._checkMergeLogicForMessageGrouping(section, subSection, hasMultipleSubSections);\n\t\t\tconst sectionBasedGroupName = messageHandling.createSectionGroupName(\n\t\t\t\tsection,\n\t\t\t\tsubSection,\n\t\t\t\thasMultipleSubSections,\n\t\t\t\ttargetTableInfo,\n\t\t\t\tresourceModel,\n\t\t\t\tincludeTableGroupName\n\t\t\t);\n\n\t\t\tmessage.setGroupName(sectionBasedGroupName);\n\t\t\tconst view = UI5Element.getElementById(this._getViewId(this.getId()) as string);\n\t\t\tconst viewContextPath = view?.getBindingContext()?.getPath();\n\t\t\tconst messageTargetPropertyName = messageObject.getTargets()[0]?.split(\"/\").pop();\n\t\t\tconst internalModel = view?.getModel(\"internal\") as JSONModel;\n\t\t\tconst internalModelMessageTargetPropertyPath = internalModel?.getProperty(\"/messageTargetPropertyPath\");\n\t\t\tconst internalModelMessageTargetPropertyContextPath = internalModelMessageTargetPropertyPath?.substring(\n\t\t\t\t0,\n\t\t\t\tinternalModelMessageTargetPropertyPath.lastIndexOf(\"/\")\n\t\t\t);\n\t\t\t// activeTitlePress should only be triggered in forward navigation and not in back navigation\n\t\t\tif (\n\t\t\t\tinternalModelMessageTargetPropertyContextPath &&\n\t\t\t\tmessageTargetPropertyName &&\n\t\t\t\tviewContextPath &&\n\t\t\t\tmessageTargetPropertyName === internalModelMessageTargetPropertyPath.split(\"/\").pop() &&\n\t\t\t\tviewContextPath.length >= internalModelMessageTargetPropertyContextPath.length &&\n\t\t\t\tviewContextPath.startsWith(internalModelMessageTargetPropertyContextPath)\n\t\t\t) {\n\t\t\t\tthis.oMessagePopover.fireActiveTitlePress({ item: message });\n\t\t\t\tinternalModel.setProperty(\"/messageTargetPropertyPath\", false);\n\t\t\t}\n\t\t}\n\t\tthis.oItemBinding.attachChange(this._setMessageData, this);\n\t\treturn targetedControl;\n\t}\n\n\t/**\n\t * The method to check if the section and subsection has single table control.\n\t * @param section ObjectPage section.\n\t * @param subSection ObjectPage sub section.\n\t * @param hasMultipleSubSections True if there is more than 1 subsection in the section.\n\t * @returns Returns boolean value for the single control inside the section, by default it is true.\n\t * @private\n\t */\n\t_checkMergeLogicForMessageGrouping(\n\t\tsection: ObjectPageSection,\n\t\tsubSection: ObjectPageSubSection,\n\t\thasMultipleSubSections: boolean\n\t): boolean {\n\t\tconst viewId = this._getViewId(this.getId());\n\t\tconst view = viewId ? (UI5Element.getElementById(viewId) as View) : undefined;\n\t\tlet bIncludeTableGroupName = true;\n\t\tconst singleSubsectionInPageLayout =\n\t\t\t!hasMultipleSubSections && (view?.getViewData() as ObjectPageManifestSettings)?.sectionLayout === \"Page\";\n\t\tconst multiSubsectionInTabLayout =\n\t\t\thasMultipleSubSections && (view?.getViewData() as ObjectPageManifestSettings)?.sectionLayout === \"Tabs\";\n\t\tif (singleSubsectionInPageLayout) {\n\t\t\tconst block = subSection.getBlocks();\n\t\t\tconst content = block.length === 1 ? (block[0].getAggregation(\"content\") as ManagedObject) : undefined;\n\t\t\tif (content?.isA(\"sap.fe.macros.table.TableAPI\")) {\n\t\t\t\tbIncludeTableGroupName = false;\n\t\t\t}\n\t\t} else if (multiSubsectionInTabLayout) {\n\t\t\tlet content;\n\t\t\tconst blocks = subSection.getBlocks();\n\t\t\t// In case of Reference Facet, the first block will be SubSectionBlock\n\t\t\tif (blocks.length === 1 && blocks[0]?.isA<SubSectionBlock>(\"sap.fe.templates.ObjectPage.controls.SubSectionBlock\")) {\n\t\t\t\tcontent = blocks[0].getAggregation(\"content\") as ManagedObject;\n\t\t\t\tif (content?.isA(\"sap.fe.macros.table.TableAPI\")) {\n\t\t\t\t\tbIncludeTableGroupName = false;\n\t\t\t\t} else if ((content as DynamicSideContent)?.isA(\"sap.ui.layout.DynamicSideContent\")) {\n\t\t\t\t\tcontent =\n\t\t\t\t\t\t(content as DynamicSideContent).getMainContent instanceof Function &&\n\t\t\t\t\t\t(content as DynamicSideContent)?.getMainContent();\n\t\t\t\t\tif (content && content.length === 1 && content[0]?.isA(\"sap.fe.macros.table.TableAPI\")) {\n\t\t\t\t\t\tbIncludeTableGroupName = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn bIncludeTableGroupName;\n\t}\n\n\t_checkControlIdInSections(messages: MessageItem[], enableBinding?: boolean): boolean | void {\n\t\tlet section, aSubSections, message, i, j, k;\n\t\tthis.sGeneralGroupText = this.sGeneralGroupText\n\t\t\t? this.sGeneralGroupText\n\t\t\t: Library.getResourceBundleFor(\"sap.fe.core\")!.getText(\"T_MESSAGE_BUTTON_SAPFE_MESSAGE_GROUP_GENERAL\");\n\t\t//Get all sections from the object page layout\n\t\tconst aVisibleSections = messageHandling.getVisibleSectionsFromObjectPageLayout(this.oObjectPageLayout!);\n\t\tif (aVisibleSections) {\n\t\t\tconst viewId = this._getViewId(this.getId());\n\t\t\tconst oView = viewId ? (UI5Element.getElementById(viewId) as View) : undefined;\n\t\t\tconst sActionName = oView?.getBindingContext(\"internal\")?.getProperty(\"sActionName\");\n\t\t\tif (sActionName) {\n\t\t\t\t(oView?.getBindingContext(\"internal\") as InternalModelContext).setProperty(\"sActionName\", null);\n\t\t\t}\n\t\t\tfor (i = messages.length - 1; i >= 0; --i) {\n\t\t\t\t// Loop over all messages\n\t\t\t\tmessage = messages[i];\n\t\t\t\tlet bIsGeneralGroupName = true;\n\t\t\t\tfor (j = aVisibleSections.length - 1; j >= 0; --j) {\n\t\t\t\t\tlet shouldBreak = false;\n\t\t\t\t\t// Loop over all visible sections\n\t\t\t\t\tsection = aVisibleSections[j];\n\t\t\t\t\taSubSections = section.getSubSections();\n\t\t\t\t\tfor (k = aSubSections.length - 1; k >= 0; --k) {\n\t\t\t\t\t\t// Loop over all sub-sections\n\t\t\t\t\t\tconst subSection = aSubSections[k];\n\t\t\t\t\t\tconst oMessageObject = message?.getBindingContext(\"message\")?.getObject();\n\t\t\t\t\t\tthis.sGeneralGroupText = this._getGeneralGroupText(oView, oMessageObject);\n\t\t\t\t\t\tconst aControls = messageHandling.getControlFromMessageRelatingToSubSection(subSection, oMessageObject);\n\t\t\t\t\t\tif (aControls.length > 0) {\n\t\t\t\t\t\t\tconst oTargetedControl = this._computeMessageGroupAndSubTitle(\n\t\t\t\t\t\t\t\tmessage,\n\t\t\t\t\t\t\t\tsection,\n\t\t\t\t\t\t\t\tsubSection,\n\t\t\t\t\t\t\t\taControls,\n\t\t\t\t\t\t\t\taSubSections.length > 1,\n\t\t\t\t\t\t\t\tsActionName\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tbIsGeneralGroupName = false;\n\t\t\t\t\t\t\t// if we found table that matches with the message, we don't stop the loop\n\t\t\t\t\t\t\t// in case we find an additional control (eg mdc field) that also match with the message\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\toTargetedControl &&\n\t\t\t\t\t\t\t\t!oTargetedControl.isA(\"sap.m.Table\") &&\n\t\t\t\t\t\t\t\t!(oTargetedControl as UI5Element).isA(\"sap.ui.table.Table\")\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tshouldBreak = true;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (shouldBreak) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (bIsGeneralGroupName) {\n\t\t\t\t\tconst oMessageObject = message.getBindingContext(\"message\")?.getObject();\n\t\t\t\t\tif (this.isHiddenDraftEnabled) {\n\t\t\t\t\t\tmessage.setActiveTitle(true);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmessage.setActiveTitle(false);\n\t\t\t\t\t}\n\t\t\t\t\tif (oMessageObject.persistent && sActionName) {\n\t\t\t\t\t\tthis._setGroupLabelForTransientMsg(message, sActionName);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmessage.setGroupName(this.sGeneralGroupText);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!enableBinding && message.getGroupName() === this.sGeneralGroupText && this._findTargetForMessage(message)) {\n\t\t\t\t\t// when the section is not available in the view port\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t//Fetches the group name of the message based on enabledment of hidden draft and page where error is present(current page/other page)\n\t_getGeneralGroupText(oView: View | undefined, oMessageObject: Message): string {\n\t\tconst viewPath = oView?.getBindingContext()?.getPath();\n\t\tconst messageTargetPath = oMessageObject?.getTargets()[0];\n\t\tif (this.isHiddenDraftEnabled && viewPath && !messageTargetPath.includes(viewPath)) {\n\t\t\treturn Library.getResourceBundleFor(\"sap.fe.core\")!.getText(\"T_MESSAGE_BUTTON_SAPFE_MESSAGE_GROUP_OTHER_PAGES\");\n\t\t} else {\n\t\t\treturn Library.getResourceBundleFor(\"sap.fe.core\")!.getText(\"T_MESSAGE_BUTTON_SAPFE_MESSAGE_GROUP_GENERAL\");\n\t\t}\n\t}\n\n\t_findTargetForMessage(message: MessageItem): boolean {\n\t\tconst messageObject = message.getBindingContext(\"message\") && message.getBindingContext(\"message\")?.getObject();\n\t\tif (messageObject && messageObject.target) {\n\t\t\tconst oMetaModel = this.oObjectPageLayout?.getModel()?.getMetaModel() as ODataMetaModel,\n\t\t\t\tcontextPath = oMetaModel && oMetaModel.getMetaPath(messageObject.target),\n\t\t\t\toContextPathMetadata = oMetaModel && oMetaModel.getObject(contextPath);\n\t\t\tif (oContextPathMetadata && oContextPathMetadata.$kind === \"Property\") {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Enable bindings of sub section content (blocks, more blocks, and actions).\n\t * @param subSection Object page sub section\n\t */\n\t_fnEnableSubSectionBinding(subSection: ObjectPageSubSection): void {\n\t\tsubSection.getBlocks().forEach((block) => block.setBindingContext(undefined));\n\t\tsubSection.getMoreBlocks().forEach((subBlock) => subBlock.setBindingContext(undefined));\n\t\tsubSection.getActions().forEach((actions) => actions.setBindingContext(undefined));\n\t}\n\n\t_fnEnableBindings(aSections: ObjectPageSection[]): void {\n\t\tfor (let iSection = 0; iSection < aSections.length; iSection++) {\n\t\t\tconst oSection = aSections[iSection];\n\t\t\tconst aSubSections = oSection.getSubSections();\n\t\t\tfor (let iSubSection = 0; iSubSection < aSubSections.length; iSubSection++) {\n\t\t\t\tconst oSubSection = aSubSections[iSubSection];\n\t\t\t\tconst oAllBlocks = oSubSection.getBlocks();\n\t\t\t\tif (oAllBlocks) {\n\t\t\t\t\tthis._fnEnableSubSectionBinding(oSubSection);\n\t\t\t\t}\n\t\t\t\tif (oSubSection.getBindingContext()) {\n\t\t\t\t\tthis._findMessageGroupAfterRebinding();\n\t\t\t\t\t(oSubSection.getBindingContext() as ODataV4Context)\n\t\t\t\t\t\t.getBinding()\n\t\t\t\t\t\t.attachDataReceived(this._findMessageGroupAfterRebinding.bind(this));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t_findMessageGroupAfterRebinding(): void {\n\t\tconst aMessages = this.oMessagePopover.getItems();\n\t\tthis._checkControlIdInSections(aMessages, true);\n\t}\n\n\t/**\n\t * The method that retrieves the view ID (HTMLView/XMLView/JSONview/JSView/Templateview) of any control.\n\t * @param sControlId ID of the control needed to retrieve the view ID\n\t * @returns The view ID of the control\n\t */\n\t_getViewId(sControlId: string): string | undefined {\n\t\tlet sViewId,\n\t\t\toControl: ManagedObject | undefined | null = UI5Element.getElementById(sControlId);\n\t\twhile (oControl) {\n\t\t\tif (oControl instanceof View) {\n\t\t\t\tsViewId = oControl.getId();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\toControl = oControl.getParent();\n\t\t}\n\t\treturn sViewId;\n\t}\n\n\t_setLongtextUrlDescription(oDiagnosisTitle: FormattedText): void {\n\t\tthis.oMessagePopover.setAsyncDescriptionHandler(function (config: {\n\t\t\titem: MessageItem;\n\t\t\tpromise: {\n\t\t\t\tresolve: Function;\n\t\t\t\treject: Function;\n\t\t\t};\n\t\t}) {\n\t\t\t// Here we can fetch the data and concatenate it to the old one\n\t\t\t// By default, the longtextUrl fetching will overwrite the description (with the default behaviour)\n\t\t\t// Here as we have overwritten the default async handler, which fetches and replaces the description of the item\n\t\t\t// we can manually modify it to include whatever needed.\n\t\t\tconst sLongTextUrl = config.item.getLongtextUrl();\n\t\t\tif (sLongTextUrl) {\n\t\t\t\tjQuery.ajax({\n\t\t\t\t\ttype: \"GET\",\n\t\t\t\t\turl: sLongTextUrl,\n\t\t\t\t\tsuccess: function (data: string) {\n\t\t\t\t\t\tconst sDiagnosisText = oDiagnosisTitle.getHtmlText() + data;\n\t\t\t\t\t\tconst oldDescription = config.item.getDescription() ?? \"\";\n\t\t\t\t\t\tconfig.item.setDescription(`${oldDescription}${sDiagnosisText}`);\n\t\t\t\t\t\tconfig.promise.resolve();\n\t\t\t\t\t},\n\t\t\t\t\terror: function () {\n\t\t\t\t\t\tconst sError = `A request has failed for long text data. URL: ${sLongTextUrl}`;\n\t\t\t\t\t\tLog.error(sError);\n\t\t\t\t\t\tconfig.promise.reject(sError);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * It displays the row information of the error existing in the table.\n\t * @param table\n\t * @param tableRowContext\n\t * @param tableColProperty\n\t * @returns rowInformation\n\t */\n\n\tprocessTableColumnProperties(table: Table, tableRowContext: ODataV4Context, tableColProperty: TableColumnProperties): string {\n\t\tlet rowInformation = \"\";\n\n\t\tconst tableColBindingContextTextAnnotation = messageHandling.getTableColBindingContextForTextAnnotation(\n\t\t\ttable,\n\t\t\ttableRowContext,\n\t\t\ttableColProperty\n\t\t);\n\t\tconst tableColTextAnnotationPath = tableColBindingContextTextAnnotation\n\t\t\t? tableColBindingContextTextAnnotation.getObject(\"$Path\")\n\t\t\t: undefined;\n\t\tconst tableColTextArrangement =\n\t\t\ttableColTextAnnotationPath && tableColBindingContextTextAnnotation\n\t\t\t\t? tableColBindingContextTextAnnotation.getObject(\"@com.sap.vocabularies.UI.v1.TextArrangement/$EnumMember\")\n\t\t\t\t: undefined;\n\t\tconst labelWithValue = (table.getParent() as TableAPI)?.getTableColValue(\n\t\t\ttableRowContext,\n\t\t\ttableColTextAnnotationPath,\n\t\t\ttableColTextArrangement,\n\t\t\ttableColProperty\n\t\t);\n\t\trowInformation += `${labelWithValue}`;\n\n\t\treturn rowInformation;\n\t}\n\n\t/**\n\t * It computes the column information.\n\t * @param message\n\t * @param tableTargetColName\n\t * @param rowInformation\n\t * @param table\n\t * @returns columnInfo\n\t */\n\n\tcomputeColumnInfo(message: MessageItem, tableTargetColName: string | undefined, rowInformation: string[], table: Table): string {\n\t\tconst resourceModel = getResourceModel(table);\n\t\tconst msgObj = message.getBindingContext(\"message\")?.getObject();\n\t\tconst colFromTableSettings = messageHandling.fetchColumnInfo(msgObj, table);\n\t\tlet columnInfo = \"\";\n\n\t\tif (tableTargetColName) {\n\t\t\t// if column in present in table definition\n\t\t\tcolumnInfo = `${resourceModel.getText(\"T_MESSAGE_GROUP_DESCRIPTION_TABLE_COLUMN\")}: ${tableTargetColName}`;\n\t\t} else if (colFromTableSettings) {\n\t\t\tif (colFromTableSettings.availability === \"Hidden\") {\n\t\t\t\t// if column in neither in table definition nor personalization\n\t\t\t\tif (message.getType() === \"Error\") {\n\t\t\t\t\tcolumnInfo =\n\t\t\t\t\t\trowInformation.length > 0\n\t\t\t\t\t\t\t? `${resourceModel.getText(\"T_COLUMN_AVAILABLE_DIAGNOSIS_MSGDESC_ERROR\")} ${rowInformation.join(\", \")}` + \".\"\n\t\t\t\t\t\t\t: `${resourceModel.getText(\"T_COLUMN_AVAILABLE_DIAGNOSIS_MSGDESC_ERROR\")}` + \".\";\n\t\t\t\t} else {\n\t\t\t\t\tcolumnInfo =\n\t\t\t\t\t\trowInformation.length > 0\n\t\t\t\t\t\t\t? `${resourceModel.getText(\"T_COLUMN_AVAILABLE_DIAGNOSIS_MSGDESC\")} ${rowInformation.join(\", \")}` + \".\"\n\t\t\t\t\t\t\t: `${resourceModel.getText(\"T_COLUMN_AVAILABLE_DIAGNOSIS_MSGDESC\")}` + \".\";\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// if column is not in table definition but in personalization\n\t\t\t\t//if no navigation to sub op then remove link to error field BCP : 2280168899\n\t\t\t\tif (!this._navigationConfigured(table)) {\n\t\t\t\t\tmessage.setActiveTitle(false);\n\t\t\t\t}\n\t\t\t\tcolumnInfo = `${resourceModel.getText(\"T_MESSAGE_GROUP_DESCRIPTION_TABLE_COLUMN\")}: ${\n\t\t\t\t\tcolFromTableSettings.label\n\t\t\t\t} (${resourceModel.getText(\"T_COLUMN_INDICATOR_IN_TABLE_DEFINITION\")})`;\n\t\t\t}\n\t\t}\n\n\t\treturn columnInfo;\n\t}\n\n\t/**\n\t * It displays the row information of the error existing in the table.\n\t * @param message\n\t * @param tableRowContext\n\t * @param tableTargetColName\n\t * @param table\n\t */\n\n\t_formatMessageDescription(\n\t\tmessage: MessageItem,\n\t\ttableRowContext: ODataV4Context,\n\t\ttableTargetColName: string | undefined,\n\t\ttable: MDCTable\n\t): void {\n\t\tconst resourceModel = getResourceModel(table);\n\t\tconst tableColProperty = (table.getParent() as TableAPI)?.getTableColumnVisibilityInfo(tableRowContext);\n\n\t\tconst rowInformation: string[] = [];\n\t\ttableColProperty?.forEach(({ key, visibility }) => {\n\t\t\trowInformation.push(this.processTableColumnProperties(table, tableRowContext, [{ key, visibility }]));\n\t\t});\n\n\t\tconst columnInfo = this.computeColumnInfo(message, tableTargetColName, rowInformation, table);\n\n\t\tconst fieldsAffectedTitle = new FormattedText({\n\t\t\thtmlText: `<html><body><strong>${resourceModel.getText(\"T_FIELDS_AFFECTED_TITLE\")}</strong></body></html><br>`\n\t\t});\n\t\tlet fieldAffectedText: string;\n\t\tif (Array.isArray(rowInformation) && rowInformation.length > 0) {\n\t\t\tif (rowInformation.length === 1) {\n\t\t\t\t// If there’s only one column in the table, display it in a single line.\n\t\t\t\tfieldAffectedText = `${fieldsAffectedTitle.getHtmlText()}<br>${resourceModel.getText(\n\t\t\t\t\t\"T_MESSAGE_GROUP_TITLE_TABLE_DENOMINATOR\"\n\t\t\t\t)}: ${table.getHeader()}<br>${resourceModel.getText(\n\t\t\t\t\t\"T_MESSAGE_GROUP_DESCRIPTION_TABLE_ROW\"\n\t\t\t\t)}: ${rowInformation}<br>${columnInfo}<br>`;\n\t\t\t} else {\n\t\t\t\t// If there are multiple columns in the table, display them in multiple lines.\n\t\t\t\tfieldAffectedText = `${fieldsAffectedTitle.getHtmlText()}<br>${resourceModel.getText(\n\t\t\t\t\t\"T_MESSAGE_GROUP_TITLE_TABLE_DENOMINATOR\"\n\t\t\t\t)}: ${table.getHeader()}<br>${resourceModel.getText(\n\t\t\t\t\t\"T_MESSAGE_GROUP_DESCRIPTION_TABLE_ROW\"\n\t\t\t\t)}:<br>&emsp; ${rowInformation.join(\"<br>&emsp; \")}<br>${columnInfo}<br>`;\n\t\t\t}\n\t\t} else if (columnInfo == \"\" || !columnInfo) {\n\t\t\tfieldAffectedText = \"\";\n\t\t} else {\n\t\t\tfieldAffectedText = `${fieldsAffectedTitle.getHtmlText()}<br>${resourceModel.getText(\n\t\t\t\t\"T_MESSAGE_GROUP_TITLE_TABLE_DENOMINATOR\"\n\t\t\t)}: ${table.getHeader()}<br>${columnInfo}<br>`;\n\t\t}\n\n\t\tconst diagnosisTitle = new FormattedText({\n\t\t\thtmlText: `<html><body><strong>${resourceModel.getText(\"T_DIAGNOSIS_TITLE\")}</strong></body></html><br>`\n\t\t});\n\t\t// get the UI messages from the message context to set it to Diagnosis section\n\t\tconst uIMessageDescription = message.getBindingContext(\"message\")?.getObject().description;\n\t\t//set the description to undefined to reset it below\n\t\tmessage.setDescription(undefined);\n\t\tlet diagnosisText = \"\";\n\t\tlet messageDescriptionContent = \"\";\n\t\tif (message.getLongtextUrl()) {\n\t\t\tmessageDescriptionContent = fieldAffectedText ? `${fieldAffectedText}<br>` : \"\";\n\t\t\tmessage.setDescription(messageDescriptionContent);\n\t\t\tthis._setLongtextUrlDescription(diagnosisTitle);\n\t\t} else if (uIMessageDescription) {\n\t\t\tdiagnosisText = `${diagnosisTitle.getHtmlText()}<br>${uIMessageDescription}`;\n\t\t\tmessageDescriptionContent = `${fieldAffectedText}<br>${diagnosisText}`;\n\t\t\tmessage.setDescription(messageDescriptionContent);\n\t\t} else {\n\t\t\tmessage.setDescription(fieldAffectedText);\n\t\t}\n\t}\n\n\t/**\n\t * When there are no messages to show in the Message Box.\n\t */\n\thandleNoMessages(): void {\n\t\tthis.setVisible(false);\n\t\tthis.fireEvent(\"messageChange\", {\n\t\t\tiMessageLength: 0\n\t\t});\n\t}\n\n\t/**\n\t * Method to set the button text, count and icon property based upon the message items\n\t * ButtonType:  Possible settings for warning and error messages are 'critical' and 'negative'.\n\t * @private\n\t */\n\t_setMessageData(): void {\n\t\tclearTimeout(this._setMessageDataTimeout);\n\n\t\tthis._setMessageDataTimeout = setTimeout(async () => {\n\t\t\tconst sIcon = \"\",\n\t\t\t\toMessages = this.oMessagePopover.getItems(),\n\t\t\t\toMessageCount: MessageCount = { Error: 0, Warning: 0, Success: 0, Information: 0 },\n\t\t\t\toResourceBundle = Library.getResourceBundleFor(\"sap.fe.core\")!,\n\t\t\t\tiMessageLength = oMessages.length;\n\t\t\tlet sButtonType = ButtonType.Default,\n\t\t\t\tmessageKey = \"\",\n\t\t\t\tmessageText = \"\";\n\t\t\tif (iMessageLength > 0) {\n\t\t\t\tfor (let i = 0; i < iMessageLength; i++) {\n\t\t\t\t\tif (!oMessages[i].getType() || oMessages[i].getType().toString() === \"\") {\n\t\t\t\t\t\t++oMessageCount[\"Information\"];\n\t\t\t\t\t} else {\n\t\t\t\t\t\t++oMessageCount[oMessages[i].getType() as keyof MessageCount];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (oMessageCount[MessageType.Error] > 0) {\n\t\t\t\t\tsButtonType = ButtonType.Negative;\n\t\t\t\t} else if (oMessageCount[MessageType.Warning] > 0) {\n\t\t\t\t\tsButtonType = ButtonType.Critical;\n\t\t\t\t} else if (oMessageCount[MessageType.Success] > 0) {\n\t\t\t\t\tsButtonType = ButtonType.Success;\n\t\t\t\t} else if (oMessageCount[MessageType.Information] > 0) {\n\t\t\t\t\tsButtonType = ButtonType.Neutral;\n\t\t\t\t}\n\n\t\t\t\tconst totalNumberOfMessages =\n\t\t\t\t\toMessageCount[MessageType.Error] +\n\t\t\t\t\toMessageCount[MessageType.Warning] +\n\t\t\t\t\toMessageCount[MessageType.Success] +\n\t\t\t\t\toMessageCount[MessageType.Information];\n\n\t\t\t\tthis.setText(totalNumberOfMessages.toString());\n\t\t\t\tlet messageCount = 0;\n\t\t\t\tconst messageKeys = {\n\t\t\t\t\tError: {\n\t\t\t\t\t\tsingleTooltipKey: \"C_COMMON_SAPFE_ERROR_MESSAGES_PAGE_TITLE_ERROR\",\n\t\t\t\t\t\tmultipleTooltipKey: \"C_COMMON_SAPFE_ERROR_MESSAGES_PAGE_MULTIPLE_ERROR_TOOLTIP\"\n\t\t\t\t\t},\n\t\t\t\t\tWarning: {\n\t\t\t\t\t\tsingleTooltipKey: \"C_MESSAGE_HANDLING_SAPFE_ERROR_MESSAGES_PAGE_TITLE_WARNING\",\n\t\t\t\t\t\tmultipleTooltipKey: \"C_COMMON_SAPFE_ERROR_MESSAGES_PAGE_WARNING_TOOLTIP\"\n\t\t\t\t\t},\n\t\t\t\t\tInformation: {\n\t\t\t\t\t\tsingleTooltipKey: \"C_MESSAGE_HANDLING_SAPFE_ERROR_MESSAGES_PAGE_TITLE_INFO\",\n\t\t\t\t\t\tmultipleTooltipKey: \"C_MESSAGE_HANDLING_SAPFE_ERROR_MESSAGES_PAGE_TITLE_INFO\"\n\t\t\t\t\t},\n\t\t\t\t\tSuccess: {\n\t\t\t\t\t\tsingleTooltipKey: \"C_MESSAGE_HANDLING_SAPFE_ERROR_MESSAGES_PAGE_TITLE_SUCCESS\",\n\t\t\t\t\t\tmultipleTooltipKey: \"C_MESSAGE_HANDLING_SAPFE_ERROR_MESSAGES_PAGE_MULTIPLE_SUCCESS_TOOLTIP\"\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tfor (const [key, value] of Object.entries(messageKeys)) {\n\t\t\t\t\tconst messageType = key as keyof MessageCount;\n\t\t\t\t\tconst messageTypeCount = oMessageCount[messageType];\n\t\t\t\t\tif (messageTypeCount > 1) {\n\t\t\t\t\t\tmessageCount = messageTypeCount;\n\t\t\t\t\t\tmessageKey = value.multipleTooltipKey;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else if (messageTypeCount === 1) {\n\t\t\t\t\t\tmessageCount = messageTypeCount;\n\t\t\t\t\t\tmessageKey = value.singleTooltipKey;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (messageKey) {\n\t\t\t\t\tmessageText = oResourceBundle.getText(messageKey);\n\t\t\t\t\tconst MESSAGEBUTTON_SHORTCUT = \"Ctrl+Shift+M\";\n\t\t\t\t\tconst toolTip = `${oResourceBundle.getText(\n\t\t\t\t\t\t\"C_COMMON_SAPFE_ERROR_MESSAGES_PAGE_TOOLTIP\"\n\t\t\t\t\t)}: ${messageCount} ${messageText} (${MESSAGEBUTTON_SHORTCUT})`;\n\t\t\t\t\tthis.setTooltip(toolTip);\n\t\t\t\t}\n\t\t\t\tthis.setIcon(sIcon);\n\t\t\t\tthis.setType(sButtonType);\n\t\t\t\tthis.setVisible(true);\n\t\t\t\tconst oView = UI5Element.getElementById(this.sViewId) as FEView;\n\t\t\t\tif (oView) {\n\t\t\t\t\tconst oPageReady = oView.getController().pageReady;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tawait oPageReady.waitPageReady();\n\t\t\t\t\t\tawait this._applyGroupingAsync(oView);\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\tLog.error(\"fail grouping messages\");\n\t\t\t\t\t}\n\t\t\t\t\tthis.fireEvent(\"messageChange\", {\n\t\t\t\t\t\tiMessageLength: iMessageLength\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tif (iMessageLength > 1) {\n\t\t\t\t\tthis.oMessagePopover.navigateBack();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.handleNoMessages();\n\t\t\t}\n\t\t}, 100) as unknown as number;\n\t}\n\n\t/**\n\t * The method that is called when a user clicks on the title of the message.\n\t * @private\n\t * @param oEvent Event object passed from the handler\n\t */\n\tasync _activeTitlePress(oEvent: MessagePopover$ActiveTitlePressEvent): Promise<void> {\n\t\tconst oInternalModelContext = this.getBindingContext(\"pageInternal\") as InternalModelContext;\n\t\toInternalModelContext.setProperty(\"errorNavigationSectionFlag\", true);\n\t\tconst oItem = oEvent.getParameter(\"item\"),\n\t\t\toMessage = oItem?.getBindingContext(\"message\")?.getObject(),\n\t\t\tbIsBackendMessage = new RegExp(\"^/\").test(oMessage.getTargets()[0]),\n\t\t\toView = UI5Element.getElementById(this.sViewId) as View;\n\t\tif (!oItem) {\n\t\t\treturn;\n\t\t}\n\t\tlet oControl: UI5Element | undefined, sSectionTitle;\n\t\tconst _defaultFocus = function (message: Message, mdcTable: MDCTable): void {\n\t\t\tconst focusInfo = { preventScroll: true, targetInfo: message };\n\t\t\tmdcTable.focus(focusInfo);\n\t\t};\n\n\t\tlet bIsGeneralGroupName = true;\n\t\tlet section, subSections, message, i, j, k;\n\t\tconst visibleSections = messageHandling.getVisibleSectionsFromObjectPageLayout(this.oObjectPageLayout!);\n\t\tif (visibleSections) {\n\t\t\tconst messages = this.oMessagePopover.getItems();\n\t\t\tfor (i = messages.length - 1; i >= 0; --i) {\n\t\t\t\t// Loop over all messages\n\t\t\t\tmessage = messages[i];\n\t\t\t\tfor (j = visibleSections.length - 1; j >= 0; --j) {\n\t\t\t\t\t// Loop over all visible sections\n\t\t\t\t\tsection = visibleSections[j];\n\t\t\t\t\tsubSections = section.getSubSections();\n\t\t\t\t\tfor (k = subSections.length - 1; k >= 0; --k) {\n\t\t\t\t\t\t// Loop over all sub-sections\n\t\t\t\t\t\tconst subSection = subSections[k];\n\t\t\t\t\t\tconst messageObject = message?.getBindingContext(\"message\")?.getObject();\n\t\t\t\t\t\tconst controls = messageHandling.getControlFromMessageRelatingToSubSection(subSection, messageObject);\n\t\t\t\t\t\tif (controls.length > 0) {\n\t\t\t\t\t\t\tbIsGeneralGroupName = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst oTargetMdcTable = oMessage.controlIds\n\t\t\t.map((controlId: string) => {\n\t\t\t\tconst control = UI5Element.getElementById(controlId);\n\t\t\t\tconst parentControl = control && control.getParent();\n\n\t\t\t\tif (this.isHiddenDraftEnabled) {\n\t\t\t\t\treturn parentControl?.isA(\"sap.ui.mdc.Table\") ? parentControl : undefined;\n\t\t\t\t}\n\t\t\t\treturn parentControl &&\n\t\t\t\t\tparentControl.isA(\"sap.ui.mdc.Table\") &&\n\t\t\t\t\toItem.getGroupName().includes((parentControl as Table).getHeader())\n\t\t\t\t\t? parentControl\n\t\t\t\t\t: null;\n\t\t\t})\n\t\t\t.reduce(function (acc: Control, val: Control) {\n\t\t\t\treturn val ? val : acc;\n\t\t\t});\n\n\t\t//check if the pressed item is related to a table control\n\t\tif (oTargetMdcTable) {\n\t\t\tif (bIsBackendMessage) {\n\t\t\t\tsSectionTitle = oItem.getGroupName().split(\", \")[0];\n\t\t\t\ttry {\n\t\t\t\t\tif (this.isHiddenDraftEnabled && (oTargetMdcTable.getId() !== this.sViewId || bIsGeneralGroupName)) {\n\t\t\t\t\t\tconst viewId = this._getViewId(oTargetMdcTable.getId());\n\t\t\t\t\t\t((UI5Element.getElementById(viewId) as View).getController() as ObjectPageController)._routing.navigateToContext(\n\t\t\t\t\t\t\toTargetMdcTable.getBindingContext()\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tawait this._navigateFromMessageToSectionTableInIconTabBarMode(\n\t\t\t\t\t\t\toTargetMdcTable,\n\t\t\t\t\t\t\tthis.oObjectPageLayout!,\n\t\t\t\t\t\t\tsSectionTitle\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tconst oRefErrorContext = this._getTableRefErrorContext(oTargetMdcTable);\n\t\t\t\t\tconst oRefError = oRefErrorContext?.getProperty(oItem.getBindingContext(\"message\")?.getObject().getId());\n\t\t\t\t\tconst _setFocusOnTargetField = async (targetMdcTable: MDCTable, iRowIndex: number): Promise<boolean | undefined> => {\n\t\t\t\t\t\tconst aTargetMdcTableRow = this._getMdcTableRows(targetMdcTable),\n\t\t\t\t\t\t\tiFirstVisibleRow = this._getGridTable(targetMdcTable)?.getFirstVisibleRow() ?? 0;\n\t\t\t\t\t\tif (aTargetMdcTableRow.length > 0 && aTargetMdcTableRow[0]) {\n\t\t\t\t\t\t\tconst oTargetRow = aTargetMdcTableRow[iRowIndex - iFirstVisibleRow],\n\t\t\t\t\t\t\t\toTargetCell = this.getTargetCell(oTargetRow, oMessage);\n\t\t\t\t\t\t\tif (oTargetCell) {\n\t\t\t\t\t\t\t\tthis.setFocusToControl(oTargetCell);\n\t\t\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// control not found on table\n\t\t\t\t\t\t\t\tconst errorPropertyPath = oMessage.getTargets()[0];\n\t\t\t\t\t\t\t\tif (errorPropertyPath) {\n\t\t\t\t\t\t\t\t\t(oView.getModel(\"internal\") as JSONModel).setProperty(\"/messageTargetPropertyPath\", errorPropertyPath);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (this._navigationConfigured(targetMdcTable)) {\n\t\t\t\t\t\t\t\t\treturn (oView.getController() as PageController)._routing.navigateForwardToContext(\n\t\t\t\t\t\t\t\t\t\toTargetRow.getBindingContext() as ODataV4Context\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t};\n\t\t\t\t\tif (oTargetMdcTable.data(\"tableType\") === \"GridTable\" && oRefError.rowIndex !== \"\") {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tawait oTargetMdcTable.scrollToIndex(oRefError.rowIndex);\n\t\t\t\t\t\t\tsetTimeout(async function () {\n\t\t\t\t\t\t\t\tconst focusOnTargetField = await _setFocusOnTargetField(oTargetMdcTable, oRefError.rowIndex);\n\t\t\t\t\t\t\t\tif (focusOnTargetField === false) {\n\t\t\t\t\t\t\t\t\t_defaultFocus(oMessage, oTargetMdcTable);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}, 0);\n\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\tLog.error(\"Error while focusing on error\");\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (oTargetMdcTable.data(\"tableType\") === \"ResponsiveTable\" && oRefError) {\n\t\t\t\t\t\tconst focusOnMessageTargetControl = await this.focusOnMessageTargetControl(\n\t\t\t\t\t\t\toView,\n\t\t\t\t\t\t\toMessage,\n\t\t\t\t\t\t\toTargetMdcTable,\n\t\t\t\t\t\t\toRefError.rowIndex\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (focusOnMessageTargetControl === false) {\n\t\t\t\t\t\t\t_defaultFocus(oMessage, oTargetMdcTable);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.focusOnMessageTargetControl(oView, oMessage);\n\t\t\t\t\t}\n\t\t\t\t} catch (err) {\n\t\t\t\t\tLog.error(\"Fail to navigate to Error control\");\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toControl = UI5Element.getElementById(oMessage.controlIds[0]);\n\t\t\t\tif (oControl) {\n\t\t\t\t\t//If the control underlying the frontEnd message is not within the current section, we first go into the target section:\n\t\t\t\t\tconst sections = (this.oObjectPageLayout as ObjectPageLayout).getSections();\n\t\t\t\t\tconst sectionWithTheControl = sections.find((section) => section.findElements(true).includes(oControl as UI5Element));\n\t\t\t\t\tif (sectionWithTheControl) {\n\t\t\t\t\t\tsSectionTitle = oItem.getGroupName().split(\", \")[0];\n\t\t\t\t\t\tthis._navigateFromMessageToSectionInIconTabBarMode(this.oObjectPageLayout!, sSectionTitle);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.setFocusToControl(oControl);\n\t\t\t}\n\t\t} else {\n\t\t\t// Call the function wherever needed\n\t\t\tthis.handleMessageNavigation(oItem, visibleSections, oMessage, oView);\n\t\t}\n\t}\n\n\t/**\n\t * Handles the message navigation by finding the associated subsection, expanding it,\n\t * and navigating to the correct section in the Object Page Layout.\n\t * @param oItem The message item containing the group name.\n\t * @param visibleSections The list of visible sections in the Object Page.\n\t * @param oMessage The message object containing control IDs.\n\t * @param oView The current UI5 view.\n\t */\n\thandleMessageNavigation(oItem: MessageItem, visibleSections: ObjectPageSection[], oMessage: Message, oView: View): void {\n\t\t// Get control if it is inside a hidden subsection\n\t\tconst oControl = UI5Element.getElementById(oMessage.getControlIds()[0]);\n\t\tconst oSubSection = this.findSubSection(oItem, visibleSections, oControl);\n\n\t\t// If subsection found, expand it\n\t\tif (oSubSection) {\n\t\t\t(oSubSection as SubSection).setMode(\"Expanded\");\n\t\t}\n\n\t\t// Navigate to the section based on the message's group name\n\t\tconst sSectionTitle = oItem.getGroupName().split(\", \")[0];\n\t\tthis._navigateFromMessageToSectionInIconTabBarMode(this.oObjectPageLayout!, sSectionTitle);\n\n\t\t// Focus on the target control\n\t\tthis.focusOnMessageTargetControl(oView, oMessage);\n\t}\n\n\t/**\n\t * Finds the corresponding subsection based on the provided message item's group name\n\t * or by checking if the given control exists inside the subsection's MoreBlocks.\n\t * @param oItem The message item containing the group name.\n\t * @param visibleSections The list of visible sections in the Object Page.\n\t * @param oControl The UI5 control to check for inside MoreBlocks.\n\t * @returns - The found subsection, section, or null if not found.\n\t */\n\tfindSubSection(\n\t\toItem: MessageItem,\n\t\tvisibleSections: ObjectPageSection[],\n\t\toControl: UI5Element | undefined\n\t): SubSection | ObjectPageSection | unknown | null {\n\t\tconst groupNames = oItem.getGroupName().split(\", \");\n\t\treturn this.findSubSectionByTitleOrControl(visibleSections, groupNames[1], oControl);\n\t}\n\n\t/**\n\t * Searches for a subsection based on the given title or by checking\n\t * if the specified control is present inside the subsection's MoreBlocks.\n\t * @private\n\t * @param visibleSections The list of visible sections.\n\t * @param title The title to match against subsection titles.\n\t * @param oControl The UI5 control to search for within MoreBlocks.\n\t * @returns - The found subsection or null if no match is found.\n\t */\n\tprivate findSubSectionByTitleOrControl(\n\t\tvisibleSections: ObjectPageSection[],\n\t\ttitle: string,\n\t\toControl: UI5Element | undefined\n\t): SubSection | null {\n\t\tfor (const section of visibleSections) {\n\t\t\tfor (const subSection of section.getSubSections()) {\n\t\t\t\t// Check if subsection title matches\n\t\t\t\tif (subSection.getTitle() === title) {\n\t\t\t\t\treturn subSection as SubSection;\n\t\t\t\t}\n\n\t\t\t\t// Check if control exists inside MoreBlocks\n\t\t\t\tif (\n\t\t\t\t\tsubSection\n\t\t\t\t\t\t.getMoreBlocks()\n\t\t\t\t\t\t.some(\n\t\t\t\t\t\t\t(block) =>\n\t\t\t\t\t\t\t\t((block as View).getContent() as unknown as Content)?.findElements(true).includes(oControl as UI5Element)\n\t\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\treturn subSection as SubSection;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t * Retrieves a table cell targeted by a message, ensuring the cell is editable.\n\t * @param targetRow A table row\n\t * @param message Message targeting a cell\n\t * @returns Returns the editable cell or null/undefined if none is found\n\t * @private\n\t */\n\tgetTargetCell(targetRow: UI5Element, message: Message): UI5Element | null | undefined {\n\t\tconst controlIds = message.getControlIds();\n\t\tconst hasNonEditableField = controlIds.some((id) => {\n\t\t\tconst control = UI5Element.getElementById(id) as EnhanceWithUI5<Field>;\n\t\t\treturn control?.isA(\"sap.ui.mdc.Field\") && control.getEditable && !control.getEditable();\n\t\t});\n\n\t\treturn controlIds.length > 0\n\t\t\t? controlIds\n\t\t\t\t\t.map(function (controlId) {\n\t\t\t\t\t\tconst isControlInTable = targetRow.findElements(true, function (elem) {\n\t\t\t\t\t\t\treturn elem.getId() === controlId;\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tif (isControlInTable.length > 0) {\n\t\t\t\t\t\t\tconst element = UI5Element.getElementById(controlId) as EnhanceWithUI5<Field>;\n\t\t\t\t\t\t\tif (hasNonEditableField) {\n\t\t\t\t\t\t\t\tif (element?.isA(\"sap.ui.mdc.Field\")) {\n\t\t\t\t\t\t\t\t\tif (element.getEditable && !element.getEditable()) {\n\t\t\t\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\treturn element;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn element;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t})\n\t\t\t\t\t.reduce(function (acc, val) {\n\t\t\t\t\t\treturn val ? val : acc;\n\t\t\t\t\t}, null)\n\t\t\t: null;\n\t}\n\n\t/**\n\t * Focus on the control targeted by a message.\n\t * @param view The current view\n\t * @param message The message targeting the control on which we want to set the focus\n\t * @param targetMdcTable The table targeted by the message (optional)\n\t * @param rowIndex The row index of the table targeted by the message (optional)\n\t * @returns Promise\n\t * @private\n\t */\n\tasync focusOnMessageTargetControl(\n\t\tview: View,\n\t\tmessage: Message,\n\t\ttargetMdcTable?: MDCTable,\n\t\trowIndex?: number\n\t): Promise<boolean | undefined> {\n\t\tconst aAllViewElements = view.findElements(true);\n\t\tconst aErroneousControls = message\n\t\t\t.getControlIds()\n\t\t\t.filter(function (sControlId: string) {\n\t\t\t\treturn aAllViewElements.some(function (oElem) {\n\t\t\t\t\treturn oElem.getId() === sControlId && oElem.getDomRef();\n\t\t\t\t});\n\t\t\t})\n\t\t\t.map(function (sControlId: string) {\n\t\t\t\treturn UI5Element.getElementById(sControlId);\n\t\t\t});\n\t\tconst aNotTableErroneousControls = aErroneousControls.filter(function (oElem: UI5Element | undefined) {\n\t\t\treturn !oElem?.isA<Table>(\"sap.m.Table\") && !oElem?.isA<UITable>(\"sap.ui.table.Table\");\n\t\t});\n\t\t//The focus is set on Not Table control in priority\n\t\tif (aNotTableErroneousControls.length > 0) {\n\t\t\tthis.setFocusToControl(aNotTableErroneousControls[0]);\n\t\t\treturn undefined;\n\t\t} else if (aErroneousControls.length > 0) {\n\t\t\tconst aTargetMdcTableRow = targetMdcTable\n\t\t\t\t? targetMdcTable.findElements(\n\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t(elem: Control) =>\n\t\t\t\t\t\t\telem.isA(ColumnListItem.getMetadata().getName()) && elem.getParent()?.getParent() === targetMdcTable\n\t\t\t\t  )\n\t\t\t\t: [];\n\t\t\tif (aTargetMdcTableRow.length > 0 && aTargetMdcTableRow[0]) {\n\t\t\t\tconst oTargetRow = aTargetMdcTableRow[rowIndex as number];\n\t\t\t\tconst oTargetCell = this.getTargetCell(oTargetRow, message);\n\t\t\t\tif (oTargetCell) {\n\t\t\t\t\tconst oTargetField = oTargetCell.isA<Field>(\"sap.fe.macros.Field\")\n\t\t\t\t\t\t? (oTargetCell.getContent() as EnhanceWithUI5<FieldWrapper>).getContentEdit()[0]\n\t\t\t\t\t\t: (((oTargetCell as HBox).getItems()[0] as Field).getContent() as EnhanceWithUI5<FieldWrapper>).getContentEdit()[0];\n\t\t\t\t\tthis.setFocusToControl(oTargetField);\n\t\t\t\t\treturn undefined;\n\t\t\t\t} else {\n\t\t\t\t\tconst errorPropertyPath = message.getTargets()[0];\n\t\t\t\t\tif (errorPropertyPath) {\n\t\t\t\t\t\t(view.getModel(\"internal\") as JSONModel).setProperty(\"/messageTargetPropertyPath\", errorPropertyPath);\n\t\t\t\t\t}\n\t\t\t\t\tif (targetMdcTable && this._navigationConfigured(targetMdcTable)) {\n\t\t\t\t\t\treturn (view.getController() as PageController)._routing.navigateForwardToContext(\n\t\t\t\t\t\t\toTargetRow.getBindingContext() as ODataV4Context\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn undefined;\n\t\t}\n\t\treturn undefined;\n\t}\n\n\t/**\n\t *\n\t * @param obj The message object\n\t * @param aSections The array of sections in the object page\n\t * @returns The rank of the message\n\t */\n\t_getMessageRank(obj: Message & { sectionName: string; subSectionName: string }, aSections: ObjectPageSection[] | undefined): number {\n\t\tif (aSections) {\n\t\t\tlet section, aSubSections, subSection, j, k, aElements, aAllElements, sectionRank;\n\t\t\tfor (j = aSections.length - 1; j >= 0; --j) {\n\t\t\t\t// Loop over all sections\n\t\t\t\tsection = aSections[j];\n\t\t\t\taSubSections = section.getSubSections();\n\t\t\t\tfor (k = aSubSections.length - 1; k >= 0; --k) {\n\t\t\t\t\t// Loop over all sub-sections\n\t\t\t\t\tsubSection = aSubSections[k];\n\t\t\t\t\taAllElements = subSection.findElements(true); // Get all elements inside a sub-section\n\t\t\t\t\t//Try to find the control 1 inside the sub section\n\t\t\t\t\taElements = aAllElements.filter(this._fnFilterUponId.bind(this, obj.getControlId()));\n\t\t\t\t\tsectionRank = j + 1;\n\t\t\t\t\tif (aElements.length > 0) {\n\t\t\t\t\t\tif (section.getVisible() && subSection.getVisible()) {\n\t\t\t\t\t\t\tif (!obj.hasOwnProperty(\"sectionName\")) {\n\t\t\t\t\t\t\t\tobj.sectionName = section.getTitle();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (!obj.hasOwnProperty(\"subSectionName\")) {\n\t\t\t\t\t\t\t\tobj.subSectionName = subSection.getTitle();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn sectionRank * 10 + (k + 1);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// if section or subsection is invisible then group name would be Last Action\n\t\t\t\t\t\t\t// so ranking should be lower\n\t\t\t\t\t\t\treturn 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t//if sub section title is Other messages, we return a high number(rank), which ensures\n\t\t\t//that messages belonging to this sub section always come later in messagePopover\n\t\t\tif (!obj.sectionName && !obj.subSectionName && obj.getPersistent()) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\treturn 999;\n\t\t}\n\t\treturn 999;\n\t}\n\n\t/**\n\t * Get Filter to hide messages from the dialog.\n\t * @returns Filter\n\t */\n\t_filterOutMessagesInDialog(): Filter {\n\t\tconst fnTest = (aControlIds: string[]): boolean => {\n\t\t\treturn messageHandling.isMessageOutOfParameterDialog(aControlIds);\n\t\t};\n\t\treturn new Filter({\n\t\t\tpath: \"controlIds\",\n\t\t\ttest: fnTest,\n\t\t\tcaseSensitive: true\n\t\t});\n\t}\n\n\t/**\n\t * If there is only one success message bound to the current context, we do not filter it out.\n\t * @returns Boolean if the single success message is found\n\t */\n\t_filterOutContextSuccessMessages(): boolean {\n\t\tconst boundContextSuccessMessages = [];\n\t\tconst messages = Messaging.getMessageModel().getData();\n\t\tmessages.filter((message: Message) => {\n\t\t\tif (\n\t\t\t\tmessage.getTargets().length === 1 &&\n\t\t\t\tmessage.getTargets()[0] === this.getBindingContext()?.getPath() &&\n\t\t\t\tmessage.getPersistent() === true &&\n\t\t\t\tmessage.getType() === MessageType.Success\n\t\t\t) {\n\t\t\t\tboundContextSuccessMessages.push(message);\n\t\t\t}\n\t\t});\n\t\tif (boundContextSuccessMessages.length === 1 && messages.length === 1) {\n\t\t\t// we want to hide success messages only if they are bound to the current context and single success messages\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * Filter function to hide back-end messages if the control has error validation.\n\t * @returns Filter\n\t */\n\t_getFilterToHideBackendMessageOnErrorValidation(): Filter {\n\t\tconst getIdsOfFielsdWithErrorValidation = function (): string[] {\n\t\t\treturn (\n\t\t\t\tMessaging.getMessageModel()\n\t\t\t\t\t.getData()\n\t\t\t\t\t.filter((message: Message) => message.validation === true && message.getControlId()?.match(/field.*-inner$/i))\n\t\t\t\t\t//the error point to the inner control, so we need to remove the -inner to get the field id\n\t\t\t\t\t.map((message: Message) => message.getControlId()?.replace(\"-inner\", \"\"))\n\t\t\t);\n\t\t};\n\n\t\tconst fnTest = function (aControlIds: string[]): boolean {\n\t\t\t// filtering out the backend messages if the control has error validation\n\t\t\treturn !aControlIds.some((controlId: string) => getIdsOfFielsdWithErrorValidation().includes(controlId));\n\t\t};\n\t\treturn new Filter({\n\t\t\tfilters: [\n\t\t\t\tnew Filter({\n\t\t\t\t\tfilters: [\n\t\t\t\t\t\tnew Filter({\n\t\t\t\t\t\t\tpath: \"validation\",\n\t\t\t\t\t\t\toperator: FilterOperator.EQ,\n\t\t\t\t\t\t\tvalue1: false\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tnew Filter({\n\t\t\t\t\t\t\tpath: \"controlIds\",\n\t\t\t\t\t\t\ttest: fnTest,\n\t\t\t\t\t\t\tcaseSensitive: true\n\t\t\t\t\t\t})\n\t\t\t\t\t],\n\t\t\t\t\tand: true\n\t\t\t\t}),\n\t\t\t\tnew Filter({\n\t\t\t\t\tpath: \"validation\",\n\t\t\t\t\toperator: FilterOperator.EQ,\n\t\t\t\t\tvalue1: true\n\t\t\t\t})\n\t\t\t],\n\t\t\tand: false\n\t\t});\n\t}\n\n\t/**\n\t * Method to set the filters based upon the message items\n\t * The desired filter operation is:\n\t * ( filters provided by user && ( validation = true && Control should be present in view ) || messages for the current matching context ).\n\t * @private\n\t */\n\tasync _applyFiltersAndSort(): Promise<void> {\n\t\tlet oValidationFilters,\n\t\t\thiddenDraftFilter,\n\t\t\toValidationAndContextFilter,\n\t\t\toFilters,\n\t\t\tsPath,\n\t\t\toSorter,\n\t\t\toDialogFilter,\n\t\t\tobjectPageLayoutSections: ObjectPageSection[] | undefined;\n\t\tconst aUserDefinedFilter: Filter[] = [];\n\n\t\tthis.sViewId = this.sViewId ? this.sViewId : (this._getViewId(this.getId()) as string);\n\t\t//Add the filters provided by the user\n\t\tconst aCustomFilters = this.getAggregation(\"customFilters\") as Control[] | undefined;\n\t\tif (aCustomFilters) {\n\t\t\taCustomFilters.forEach(function (filter: Control) {\n\t\t\t\taUserDefinedFilter.push(\n\t\t\t\t\tnew Filter({\n\t\t\t\t\t\tpath: filter.getProperty(\"path\"),\n\t\t\t\t\t\toperator: filter.getProperty(\"operator\"),\n\t\t\t\t\t\tvalue1: filter.getProperty(\"value1\"),\n\t\t\t\t\t\tvalue2: filter.getProperty(\"value2\")\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\t\tconst oBindingContext = this.getBindingContext();\n\t\tif (!oBindingContext) {\n\t\t\tthis.setVisible(false);\n\t\t\treturn;\n\t\t} else {\n\t\t\tsPath = oBindingContext.getPath();\n\t\t\t//Filter for filtering out only validation messages which are currently present in the view\n\t\t\toValidationFilters = new Filter({\n\t\t\t\tfilters: [\n\t\t\t\t\tnew Filter({\n\t\t\t\t\t\tpath: \"validation\",\n\t\t\t\t\t\toperator: FilterOperator.EQ,\n\t\t\t\t\t\tvalue1: true\n\t\t\t\t\t}),\n\t\t\t\t\tmessageButtonHelper.getCheckControlInViewFilter(this.sViewId)\n\t\t\t\t],\n\t\t\t\tand: true\n\t\t\t});\n\n\t\t\toDialogFilter = new Filter({\n\t\t\t\tfilters: [this._filterOutMessagesInDialog()]\n\t\t\t});\n\n\t\t\tconst oContextSuccessFilters = new Filter({\n\t\t\t\tpath: \"target\",\n\t\t\t\ttest: this._filterOutContextSuccessMessages.bind(this),\n\t\t\t\tcaseSensitive: true\n\t\t\t});\n\n\t\t\tlet filterArray;\n\t\t\tif (this.isHiddenDraftEnabled) {\n\t\t\t\tconst viewId = this._getViewId(this.getId());\n\t\t\t\tconst view = UI5Element.getElementById(viewId as string) as View;\n\t\t\t\tconst viewContext = view?.getBindingContext() as ODataV4Context;\n\t\t\t\tconst contextPath = (await (view.getController() as ObjectPageController)?.editFlow.getRootContext(viewContext))?.getPath();\n\t\t\t\thiddenDraftFilter = messageButtonHelper.getHiddenDraftUseCaseFilter(contextPath);\n\t\t\t\tconst validationAndHiddenDraftFilter = new Filter({\n\t\t\t\t\tfilters: [oValidationFilters, hiddenDraftFilter],\n\t\t\t\t\tand: false\n\t\t\t\t});\n\t\t\t\tfilterArray = [validationAndHiddenDraftFilter, oDialogFilter, this._getFilterToHideBackendMessageOnErrorValidation()];\n\t\t\t} else {\n\t\t\t\toValidationAndContextFilter = new Filter({\n\t\t\t\t\tfilters: [\n\t\t\t\t\t\toValidationFilters,\n\t\t\t\t\t\tnew Filter({\n\t\t\t\t\t\t\tpath: \"target\",\n\t\t\t\t\t\t\toperator: FilterOperator.StartsWith,\n\t\t\t\t\t\t\tvalue1: sPath\n\t\t\t\t\t\t})\n\t\t\t\t\t],\n\t\t\t\t\tand: false\n\t\t\t\t});\n\n\t\t\t\tfilterArray = [\n\t\t\t\t\toValidationAndContextFilter,\n\t\t\t\t\toContextSuccessFilters,\n\t\t\t\t\toDialogFilter,\n\t\t\t\t\tthis._getFilterToHideBackendMessageOnErrorValidation()\n\t\t\t\t];\n\t\t\t\t//Filter for filtering out the bound messages i.e target starts with the context path\n\t\t\t}\n\t\t\tconst oValidationContextDialogFilters = new Filter({\n\t\t\t\tfilters: filterArray,\n\t\t\t\tand: true\n\t\t\t});\n\t\t\t// and finally - if there any - add custom filter (via OR)\n\t\t\tif (aUserDefinedFilter.length > 0) {\n\t\t\t\toFilters = new Filter({\n\t\t\t\t\tfilters: [aUserDefinedFilter, oValidationContextDialogFilters] as unknown as Filter[], // TODO incorrect,\n\t\t\t\t\tand: false\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\toFilters = oValidationContextDialogFilters;\n\t\t\t}\n\t\t\tthis.oItemBinding.filter(oFilters);\n\t\t\tthis.oObjectPageLayout = this._getObjectPageLayout(this, this.oObjectPageLayout);\n\t\t\t// We support sorting only for ObjectPageLayout use-case.\n\t\t\tif (this.oObjectPageLayout) {\n\t\t\t\toSorter = new Sorter(\n\t\t\t\t\t\"\",\n\t\t\t\t\tundefined,\n\t\t\t\t\tundefined,\n\t\t\t\t\t(\n\t\t\t\t\t\tobj1: Message & { sectionName: string; subSectionName: string },\n\t\t\t\t\t\tobj2: Message & { sectionName: string; subSectionName: string }\n\t\t\t\t\t) => {\n\t\t\t\t\t\tif (!objectPageLayoutSections) {\n\t\t\t\t\t\t\tobjectPageLayoutSections = this.oObjectPageLayout && this.oObjectPageLayout.getSections();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst rankA = this._getMessageRank(obj1, objectPageLayoutSections);\n\t\t\t\t\t\tconst rankB = this._getMessageRank(obj2, objectPageLayoutSections);\n\t\t\t\t\t\tif (rankA < rankB) {\n\t\t\t\t\t\t\treturn -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (rankA > rankB) {\n\t\t\t\t\t\t\treturn 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tthis.oItemBinding.sort(oSorter);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param sControlId\n\t * @param oItem\n\t * @returns True if the control ID matches the item ID\n\t */\n\t_fnFilterUponId(sControlId: string, oItem: UI5Element): boolean {\n\t\treturn sControlId === oItem.getId();\n\t}\n\n\t/**\n\t * Retrieves the section based on section title and visibility.\n\t * @param oObjectPage Object page.\n\t * @param sSectionTitle Section title.\n\t * @returns The section\n\t * @private\n\t */\n\t_getSectionBySectionTitle(oObjectPage: ObjectPageLayout, sSectionTitle: string): ObjectPageSection | undefined {\n\t\tlet oSection: ObjectPageSection | undefined;\n\t\tif (sSectionTitle) {\n\t\t\tconst aSections = oObjectPage.getSections();\n\t\t\tfor (let i = 0; i < aSections.length; i++) {\n\t\t\t\tif (aSections[i].getVisible() && aSections[i].getTitle() === sSectionTitle) {\n\t\t\t\t\toSection = aSections[i];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn oSection;\n\t}\n\n\t/**\n\t * Navigates to the section if the object page uses an IconTabBar and if the current section is not the target of the navigation.\n\t * @param oObjectPage Object page.\n\t * @param sSectionTitle Section title.\n\t * @private\n\t */\n\t_navigateFromMessageToSectionInIconTabBarMode(oObjectPage: ObjectPageLayout, sSectionTitle: string): void {\n\t\tconst bUseIconTabBar = oObjectPage.getUseIconTabBar();\n\t\tif (bUseIconTabBar) {\n\t\t\tconst oSection = this._getSectionBySectionTitle(oObjectPage, sSectionTitle);\n\t\t\tconst sSelectedSectionId = oObjectPage.getSelectedSection();\n\t\t\tif (oSection && sSelectedSectionId !== oSection.getId()) {\n\t\t\t\toObjectPage.setSelectedSection(oSection.getId());\n\t\t\t}\n\t\t}\n\t}\n\n\tasync _navigateFromMessageToSectionTableInIconTabBarMode(\n\t\toTable: Table,\n\t\toObjectPage: ObjectPageLayout,\n\t\tsSectionTitle: string\n\t): Promise<void> {\n\t\tconst oRowBinding = oTable.getRowBinding();\n\t\tconst oTableContext = oTable.getBindingContext();\n\t\tconst oOPContext = oObjectPage.getBindingContext();\n\t\tconst bShouldWaitForTableRefresh = !(oTableContext === oOPContext);\n\t\tthis._navigateFromMessageToSectionInIconTabBarMode(oObjectPage, sSectionTitle);\n\t\treturn new Promise(function (resolve: Function) {\n\t\t\tif (bShouldWaitForTableRefresh) {\n\t\t\t\toRowBinding.attachEventOnce(\"change\", function () {\n\t\t\t\t\tresolve();\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tresolve();\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Retrieves the MdcTable if it is found among any of the parent elements.\n\t * @param oElement Control\n\t * @returns MDC table || undefined\n\t * @private\n\t */\n\t_getMdcTable(oElement: UI5Element): MDCTable | undefined {\n\t\t//check if the element has a table within any of its parents\n\t\tlet oParentElement = oElement.getParent();\n\t\twhile (oParentElement && !oParentElement.isA<MDCTable>(\"sap.ui.mdc.Table\")) {\n\t\t\toParentElement = oParentElement.getParent();\n\t\t}\n\t\treturn oParentElement && oParentElement.isA<MDCTable>(\"sap.ui.mdc.Table\") ? oParentElement : undefined;\n\t}\n\n\t_getGridTable(oMdcTable: MDCTable): UITable | undefined {\n\t\treturn oMdcTable.findElements(true, function (oElem: Control) {\n\t\t\treturn (\n\t\t\t\toElem.isA<UITable>(\"sap.ui.table.Table\") &&\n\t\t\t\t/** We check the element belongs to the MdcTable :*/\n\t\t\t\toElem.getParent() === oMdcTable\n\t\t\t);\n\t\t})[0] as UITable | undefined;\n\t}\n\n\t/**\n\t * Retrieves the table row (if available) containing the element.\n\t * @param oElement Control\n\t * @returns Table row || undefined\n\t * @private\n\t */\n\t_getTableRow(oElement: UI5Element): UI5Element | undefined {\n\t\tlet oParentElement = oElement.getParent();\n\t\twhile (\n\t\t\toParentElement &&\n\t\t\t!oParentElement.isA<Row>(\"sap.ui.table.Row\") &&\n\t\t\t!oParentElement.isA<CreationRow>(\"sap.ui.table.CreationRow\") &&\n\t\t\t!oParentElement.isA<ColumnListItem>(ColumnListItem.getMetadata().getName())\n\t\t) {\n\t\t\toParentElement = oParentElement.getParent();\n\t\t}\n\t\treturn oParentElement &&\n\t\t\t(oParentElement.isA<Row>(\"sap.ui.table.Row\") ||\n\t\t\t\toParentElement.isA<CreationRow>(\"sap.ui.table.CreationRow\") ||\n\t\t\t\toParentElement.isA<ColumnListItem>(ColumnListItem.getMetadata().getName()))\n\t\t\t? (oParentElement as UI5Element)\n\t\t\t: undefined;\n\t}\n\n\t/**\n\t * Retrieves the index of the table row containing the element.\n\t * @param oElement Control\n\t * @returns Row index || undefined\n\t * @private\n\t */\n\t_getTableRowIndex(oElement: UI5Element): number {\n\t\tconst oTableRow = this._getTableRow(oElement);\n\t\tlet iRowIndex;\n\t\tif (oTableRow?.isA<Row>(\"sap.ui.table.Row\")) {\n\t\t\tiRowIndex = oTableRow.getIndex();\n\t\t} else {\n\t\t\tiRowIndex = (oTableRow as { getTable?: () => ResponsiveTable })\n\t\t\t\t?.getTable?.()\n\t\t\t\t.getItems()\n\t\t\t\t.findIndex(function (element: UI5Element) {\n\t\t\t\t\treturn element.getId() === oTableRow?.getId();\n\t\t\t\t});\n\t\t}\n\t\treturn iRowIndex ?? -1;\n\t}\n\n\t/**\n\t * Retrieves the index of the table column containing the element.\n\t * @param element Control\n\t * @returns Column index || undefined\n\t * @private\n\t */\n\t_getTableColumnIndex(element: UI5Element): number | undefined {\n\t\tconst getTargetCellIndex = function (elt: UI5Element, targetRow: Row | undefined): number | undefined {\n\t\t\treturn targetRow?.getCells().findIndex(function (cell: Control) {\n\t\t\t\treturn cell.getId() === elt.getId();\n\t\t\t});\n\t\t};\n\t\tconst getTargetColumnIndex = function (elt: UI5Element, targetRow: Row | undefined): number | undefined {\n\t\t\tlet targetElement = elt.getParent() as UI5Element,\n\t\t\t\ttargetCellIndex = getTargetCellIndex(targetElement, targetRow);\n\t\t\twhile (targetElement && targetCellIndex && targetCellIndex < 0) {\n\t\t\t\ttargetElement = targetElement.getParent() as UI5Element;\n\t\t\t\ttargetCellIndex = getTargetCellIndex(targetElement, targetRow);\n\t\t\t}\n\t\t\treturn targetCellIndex;\n\t\t};\n\t\tconst targetRow = this._getTableRow(element) as Row | undefined;\n\n\t\tlet targetColumnIndex = getTargetColumnIndex(element, targetRow);\n\t\tif (targetRow?.isA<CreationRow>(\"sap.ui.table.CreationRow\")) {\n\t\t\tconst targetCellId = targetColumnIndex ? targetRow.getCells()[targetColumnIndex].getId() : undefined,\n\t\t\t\ttableColumns = targetRow.getTable()?.getColumns();\n\t\t\ttargetColumnIndex = tableColumns?.findIndex(function (column: Column) {\n\t\t\t\tif (column.getCreationTemplate() && targetCellId) {\n\t\t\t\t\treturn targetCellId.search(column.getCreationTemplate().getId()) > -1 ? true : false;\n\t\t\t\t} else {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn targetColumnIndex;\n\t}\n\n\t_getMdcTableRows(oMdcTable: MDCTable): Row[] {\n\t\treturn oMdcTable.findElements(true, function (oElem: Control) {\n\t\t\treturn (\n\t\t\t\toElem.isA<Row>(\"sap.ui.table.Row\") &&\n\t\t\t\t/** We check the element belongs to the Mdc Table :*/\n\t\t\t\t(oElem as { getTable?: () => UI5Element }).getTable?.().getParent() === oMdcTable\n\t\t\t);\n\t\t}) as Row[];\n\t}\n\n\t_getObjectPageLayout(oElement: ManagedObject | undefined, oObjectPageLayout?: ObjectPageLayout): ObjectPageLayout | undefined {\n\t\tif (oObjectPageLayout) {\n\t\t\treturn oObjectPageLayout;\n\t\t}\n\t\tlet targetElement = oElement;\n\t\t//Iterate over parent till you have not reached the object page layout\n\t\twhile (targetElement && !targetElement.isA<ObjectPageLayout>(\"sap.uxap.ObjectPageLayout\")) {\n\t\t\ttargetElement = targetElement.getParent() ?? undefined;\n\t\t}\n\t\treturn targetElement;\n\t}\n\n\t/**\n\t * The method that is called to check if a navigation is configured from the table to a sub object page.\n\t * @private\n\t * @param table MdcTable\n\t * @returns Either true or false\n\t */\n\t_navigationConfigured(table: Table): boolean {\n\t\t// TODO: this logic would be moved to check the same at the template time to avoid the same check happening multiple times.\n\t\tconst component = sap.ui.require(\"sap/ui/core/Component\"),\n\t\t\tnavObject = table && component.getOwnerComponentFor(table) && component.getOwnerComponentFor(table).getNavigation();\n\t\tlet subOPConfigured = false,\n\t\t\tnavConfigured = false;\n\t\tif (navObject && Object.keys(navObject).includes(table.getRowBinding().getPath())) {\n\t\t\tsubOPConfigured =\n\t\t\t\tnavObject[table?.getRowBinding().getPath()] &&\n\t\t\t\tnavObject[table?.getRowBinding().getPath()].detail &&\n\t\t\t\tnavObject[table?.getRowBinding().getPath()].detail.route\n\t\t\t\t\t? true\n\t\t\t\t\t: false;\n\t\t}\n\t\tnavConfigured =\n\t\t\tsubOPConfigured &&\n\t\t\ttable?.getRowSettings().getRowActions() &&\n\t\t\ttable?.getRowSettings().getRowActions()[0].getType().includes(\"Navigation\");\n\t\treturn navConfigured;\n\t}\n\n\tsetFocusToControl(control?: UI5Element): void {\n\t\tconst messagePopover = this.oMessagePopover;\n\t\tif (messagePopover && control && control.focus) {\n\t\t\tconst fnFocus = (): void => {\n\t\t\t\tcontrol.focus();\n\t\t\t};\n\t\t\tif (!messagePopover.isOpen()) {\n\t\t\t\t// when navigating to parent page to child page (on click of message), the child page might have a focus logic that might use a timeout.\n\t\t\t\t// we use the below timeouts to override this focus so that we focus on the target control of the message in the child page.\n\t\t\t\tsetTimeout(fnFocus, 0);\n\t\t\t} else {\n\t\t\t\tconst fnOnClose = (): void => {\n\t\t\t\t\tsetTimeout(fnFocus, 0);\n\t\t\t\t\tmessagePopover.detachEvent(\"afterClose\", fnOnClose);\n\t\t\t\t};\n\t\t\t\tmessagePopover.attachEvent(\"afterClose\", fnOnClose);\n\t\t\t\tmessagePopover.close();\n\t\t\t}\n\t\t} else {\n\t\t\tLog.warning(\"FE V4 : MessageButton : element doesn't have focus method for focusing.\");\n\t\t}\n\t}\n\n\tescape(value: string): string {\n\t\treturn String(value)\n\t\t\t.replace(/&/g, \"&amp;\")\n\t\t\t.replace(/\"/g, \"&quot;\")\n\t\t\t.replace(/'/g, \"&#39;\")\n\t\t\t.replace(/</g, \"&lt;\")\n\t\t\t.replace(/>/g, \"&gt;\");\n\t}\n}\n\nexport default MessageButton;\n"],"mappings":"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","ignoreList":[]}