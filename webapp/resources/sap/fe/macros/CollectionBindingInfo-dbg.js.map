{"version":3,"names":["CollectionBindingInfoAPI","bindingInfo","attachedEvents","collectionBindingInfo","_exports","_proto","prototype","cloneFiltersContent","cloning","filterInfo","path","getPath","operator","getOperator","value1","getValue1","value2","getValue2","variable","getVariable","condition","getCondition","and","isAnd","caseSensitive","isCaseSensitive","testFn","getTest","undefined","test","comparatorFn","getComparator","comparator","filters","getFilters","arrayFilter","map","singleFilter","Filter","addFilter","customFilter","push","getSorters","sorter","addSelect","parameters","parameterString","toString","$select","getBindingInfo","clonedBindingInfo","events","deepClone","addSorter","attachEvent","eventId","callback","listener","data","handler","getAttachedEvents"],"sourceRoot":".","sources":["CollectionBindingInfo.ts"],"sourcesContent":["import deepClone from \"sap/base/util/deepClone\";\nimport Filter from \"sap/ui/model/Filter\";\nimport type FilterOperator from \"sap/ui/model/FilterOperator\";\nimport type Sorter from \"sap/ui/model/Sorter\";\n\nexport type FilterInfo = {\n\tpath?: string;\n\ttest?: (p1: unknown) => boolean;\n\tcomparator?: (p1: unknown, p2: unknown) => number;\n\toperator?:\n\t\t| FilterOperator\n\t\t| \"All\"\n\t\t| \"Any\"\n\t\t| \"BT\"\n\t\t| \"Contains\"\n\t\t| \"EndsWith\"\n\t\t| \"EQ\"\n\t\t| \"GE\"\n\t\t| \"GT\"\n\t\t| \"LE\"\n\t\t| \"LT\"\n\t\t| \"NB\"\n\t\t| \"NE\"\n\t\t| \"NotContains\"\n\t\t| \"NotEndsWith\"\n\t\t| \"NotStartsWith\"\n\t\t| \"StartsWith\"\n\t\t| undefined;\n\tvalue1?: unknown;\n\tvalue2?: unknown;\n\tvariable?: string;\n\tcondition?: Filter;\n\tfilters?: Filter[];\n\tand?: boolean;\n\tcaseSensitive?: boolean;\n};\n\nexport type CollectionBindingInfo = {\n\tevents?: Record<string, Function>;\n\tsuspended?: boolean;\n\tpath?: string;\n\tfilters?: Filter;\n\tsearch?: string;\n\tparameters?: {\n\t\t$search?: string;\n\t\t$select?: string;\n\t\t$$aggregation?: Aggregation;\n\t\t$$sharedRequest?: boolean;\n\t\t$count?: boolean;\n\t\t$$clearSelectionOnFilter?: boolean;\n\t\t$$getKeepAliveContext?: boolean;\n\t\t$$groupId?: string;\n\t\t$$updateGroupId?: string;\n\t\t$$ownRequest?: boolean;\n\t\t$$patchWithoutSideEffects?: boolean;\n\t};\n\tsorter?: Sorter[];\n};\n\nexport type Aggregation = {\n\tsearch?: string;\n\texpandTo?: number;\n\thierarchyQualifier?: string;\n};\n\nexport type EventHandler = {\n\teventId: string;\n\tcallback: Function;\n\tlistener?: object;\n\tdata?: object;\n};\n\n/**\n * API to add parameters to the collection binding info.\n * @hideconstructor\n * @alias sap.fe.macros.CollectionBindingInfo\n * @public\n */\n\nexport default class CollectionBindingInfoAPI {\n\tprivate collectionBindingInfo: CollectionBindingInfo;\n\n\tprivate attachedEvents: EventHandler[] = [];\n\n\tconstructor(bindingInfo: CollectionBindingInfo) {\n\t\tthis.collectionBindingInfo = bindingInfo;\n\t}\n\n\t/**\n\t * Recursive cloning of the Filter.\n\t * Filters have a parameter aFilters which contains more filters, so we use this method to recursively clone it.\n\t * cloneFilters should be called first, to have the Filter outside an array and avoid an empty filter.\n\t * @param cloning The filter to be cloned\n\t * @returns The cloned Filter\n\t */\n\tcloneFiltersContent(cloning: Filter): Filter {\n\t\tconst filterInfo: FilterInfo = {\n\t\t\tpath: cloning.getPath(),\n\t\t\toperator: cloning.getOperator(),\n\t\t\tvalue1: cloning.getValue1(),\n\t\t\tvalue2: cloning.getValue2(),\n\t\t\tvariable: cloning.getVariable(),\n\t\t\tcondition: cloning.getCondition(),\n\t\t\tand: cloning.isAnd(),\n\t\t\tcaseSensitive: cloning.isCaseSensitive()\n\t\t};\n\n\t\tconst testFn = cloning.getTest();\n\t\tif (testFn !== undefined) {\n\t\t\tfilterInfo.test = testFn;\n\t\t}\n\n\t\tconst comparatorFn = cloning.getComparator();\n\t\tif (comparatorFn !== undefined) {\n\t\t\tfilterInfo.comparator = comparatorFn;\n\t\t}\n\n\t\tconst filters = cloning.getFilters();\n\t\tconst arrayFilter = filters?.map((singleFilter: Filter) => {\n\t\t\treturn this.cloneFiltersContent(singleFilter);\n\t\t});\n\t\tif (arrayFilter) {\n\t\t\tfilterInfo.filters = arrayFilter;\n\t\t}\n\t\treturn new Filter(filterInfo);\n\t}\n\n\t/**\n\t * Returns the current filters applied to the Table.\n\t * @public\n\t * @returns The {@link sap.ui.model.Filter \"filters\"} on the table\n\t */\n\tgetFilters(): Filter | undefined {\n\t\tif (this.collectionBindingInfo.filters) {\n\t\t\treturn this.cloneFiltersContent(this.collectionBindingInfo.filters);\n\t\t}\n\t\treturn undefined;\n\t}\n\n\t/**\n\t * Adds a filter to the filters already present in the binding info.\n\t * @param customFilter The {@link sap.ui.model.Filter \"filter\"} to add\n\t * @public\n\t */\n\taddFilter(customFilter: Filter): void {\n\t\tconst filters = this.collectionBindingInfo.filters ? [this.collectionBindingInfo.filters] : [];\n\t\tfilters.push(customFilter);\n\t\tthis.collectionBindingInfo.filters = new Filter(filters, true);\n\t}\n\n\t/**\n\t * Returns the current sorters of the Table.\n\t * @returns The {@link sap.ui.model.Sorter \"sorters\"} on the table\n\t * @public\n\t */\n\tgetSorters(): Sorter[] | undefined {\n\t\treturn this.collectionBindingInfo.sorter;\n\t}\n\n\t/**\n\t * Adds parameters to the select query.\n\t * @param parameters The list or properties to add to the query\n\t * @public\n\t */\n\taddSelect(parameters: string[]): void {\n\t\tconst parameterString: string = parameters.toString();\n\t\tif (this.collectionBindingInfo.parameters?.$select) {\n\t\t\tthis.collectionBindingInfo.parameters.$select = this.collectionBindingInfo.parameters.$select + \",\" + parameterString;\n\t\t} else {\n\t\t\tthis.collectionBindingInfo.parameters ??= {};\n\t\t\tthis.collectionBindingInfo.parameters.$select = parameterString;\n\t\t}\n\t}\n\n\t/**\n\t * Retrieve the 'serialized' binding info, useful if you want to create your own binding\n\t * @returns {CollectionBindingInfo} The {@link sap.fe.macros.CollectionBindingInfo \"CollectionBindingInfo\"}\n\t * @public\n\t */\n\n\tgetBindingInfo(): CollectionBindingInfo {\n\t\tconst clonedBindingInfo = { ...this.collectionBindingInfo };\n\n\t\t// Making deepClones of objects (except Sorters because we can't)\n\t\tif (this.collectionBindingInfo.events) {\n\t\t\tclonedBindingInfo.events = deepClone(this.collectionBindingInfo.events);\n\t\t}\n\t\tif (this.collectionBindingInfo.filters) {\n\t\t\tclonedBindingInfo.filters = this.cloneFiltersContent(this.collectionBindingInfo.filters);\n\t\t}\n\t\tif (this.collectionBindingInfo.parameters) {\n\t\t\tdeepClone(this.collectionBindingInfo.parameters);\n\t\t}\n\t\treturn clonedBindingInfo;\n\t}\n\n\t/**\n\t * Adds a sorter to the sorter(s) already present, or create one if none exists.\n\t * @param sorter The {@link sap.ui.model.Sorter \"sorter\"} to add to the query\n\t * @public\n\t */\n\taddSorter(sorter: Sorter): void {\n\t\tif (!this.collectionBindingInfo.sorter) {\n\t\t\tthis.collectionBindingInfo.sorter = [sorter];\n\t\t} else {\n\t\t\tthis.collectionBindingInfo.sorter.push(sorter);\n\t\t}\n\t}\n\n\t/**\n\t * Attach the events to the table binding.\n\t * @param eventId The event ID to attach the callback to\n\t * @param callback The callback function to be executed when the event is triggered\n\t * @param listener The listener object that will be used as the context for the callback function\n\t * @param data Data that will be passed to the callback function when the event is triggered\n\t * @public\n\t */\n\tattachEvent(eventId: string, callback: Function, listener?: object, data?: object): void {\n\t\tconst handler: EventHandler = { eventId, callback, listener, data };\n\t\tthis.attachedEvents.push(handler);\n\t}\n\n\t/**\n\t * Gets the attached event handlers.\n\t * @returns An array of attached event handlers.\n\t */\n\tgetAttachedEvents(): EventHandler[] {\n\t\treturn this.attachedEvents;\n\t}\n}\n"],"mappings":"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","ignoreList":[],"file":"CollectionBindingInfo-dbg.js"}