{"version":3,"file":"FormContainer.block.js","names":["FormContainerBlock","_dec","defineBuildingBlock","name","namespace","_dec2","blockAttribute","type","_dec3","required","isPublic","expectedTypes","_dec4","_dec5","_dec6","_dec7","_dec8","_dec9","_dec10","_dec11","_dec12","_dec13","_dec14","_dec15","_dec16","blockAggregation","_dec17","blockEvent","_class","_class2","_BuildingBlockTemplat","props","externalConfiguration","settings","_this","call","this","_initializerDefineProperty","_descriptor","_descriptor2","_descriptor3","_descriptor4","_descriptor5","_descriptor6","_descriptor7","_descriptor8","_descriptor9","_descriptor10","_descriptor11","_descriptor12","_descriptor13","_descriptor14","_descriptor15","_descriptor16","entitySet","contextPath","formElements","Object","keys","length","oContextObjectPath","getInvolvedDataModelObjects","metaPath","mExtraSettings","oFacetDefinition","targetObject","$Type","Label","Target","$target","fullyQualifiedName","path","term","value","getContextRelativeTargetObjectPath","annotations","fields","oConverterContext","getConverterContext","undefined","oFormDefinition","createFormDefinition","dataFieldCollection","formContainers","contentId","viewId","_exports","_inheritsLoose","_proto","prototype","getTemplate","overflowToolbarID","id","StableIDHelper","generate","dataModelObject","bindingString","FormHelper","generateBindingExpression","navigationPath","xml","designtimeSettings","visible","getObject","hasUiHiddenAnnotation","title","titleLevel","actions","attr","getTemplatedFormElements","getInnerTemplatedFormElements","getDataPointTemplate","firstElementWithAnnotationPath","find","df","annotationPath","idPrefix","isEditableHeader","includes","formElementId","key","computedDataModelObject","getModel","createBindingContext","designtime","UI","AdaptationHidden","getVisibleExpression","getPath","displayMode","onChange","getContactTemplate","getDataFieldsForAnnotations","getConnectedFieldsFormElement","formElement","connectedFieldElements","connectedField","connectedFields","model","tempName","originalObject","substring","lastIndexOf","bindingContext","delimiter","CommonHelper","getDelimiter","originalTemplate","notLastIndexCondition","indexOf","computedIdPrefix","Value","computedVhIdPrefix","connectedFieldElement","formatOptions","textLinesEdit","textMaxLines","textMaxCharactersDisplay","textMaxLength","textExpandBehaviorDisplay","fieldEditStyle","radioButtonsHorizontalLayout","dataModelObjectForConnectedFields","visibleExpression","isPartOfPreview","isRequired","getRequiredExpressionForConnectedDataField","toString","label","getMultiValueFieldFormElement","multiValueFieldId","vhIdPrefix","getFieldGroupFormElement","fieldGroupElements","groupElement","groupElementDataModelObject","isBooleanFieldGroup","fieldGroupElement","fieldGroupFormElementId","labelID","fieldGroupHorizontalLayout","getFieldFormElement","readOnly","semanticObject","pattern","useRadioButtonsForBoolean","getCustomFormElement","propertyPath","formElementKey","template","getSlotColumn","isMultiValueDataField","dataField","isMultiValueFieldCondition","valuePath","$Path","isMultiValueField","enhanceDataModelPath","returnString","BuildingBlockTemplatingBase","_applyDecoratedDescriptor","configurable","enumerable","writable","initializer"],"sources":["./FormContainer.block.ts"],"sourcesContent":["import type { AnnotationPath, AnnotationTerm, EntitySet, Property } from \"@sap-ux/vocabularies-types\";\nimport type {\n\tConnectedFieldsType,\n\tConnectedFieldsTypeTypes,\n\tDataField,\n\tDataFieldAbstractTypes,\n\tDataFieldForAnnotation,\n\tDataPointType,\n\tFieldGroup,\n\tReferenceFacet\n} from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport { UIAnnotationTypes } from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport { type PropertiesOf } from \"sap/fe/base/ClassSupport\";\nimport {\n\tblockAggregation,\n\tblockAttribute,\n\tblockEvent,\n\tdefineBuildingBlock\n} from \"sap/fe/core/buildingBlocks/templating/BuildingBlockSupport\";\nimport { xml, type TemplateProcessorSettings } from \"sap/fe/core/buildingBlocks/templating/BuildingBlockTemplateProcessor\";\nimport BuildingBlockTemplatingBase from \"sap/fe/core/buildingBlocks/templating/BuildingBlockTemplatingBase\";\nimport { getInvolvedDataModelObjects } from \"sap/fe/core/converters/MetaModelConverter\";\nimport type { BaseAction } from \"sap/fe/core/converters/controls/Common/Action\";\nimport type { AnnotationFormElement, CustomFormElement, FormElement } from \"sap/fe/core/converters/controls/Common/Form\";\nimport { createFormDefinition } from \"sap/fe/core/converters/controls/Common/Form\";\nimport type { ConfigurableObject } from \"sap/fe/core/converters/helpers/ConfigurableObject\";\nimport * as StableIDHelper from \"sap/fe/core/helpers/StableIdHelper\";\nimport type { DataModelObjectPath } from \"sap/fe/core/templating/DataModelPathHelper\";\nimport { enhanceDataModelPath, getContextRelativeTargetObjectPath } from \"sap/fe/core/templating/DataModelPathHelper\";\nimport { getRequiredExpressionForConnectedDataField, isMultiValueField } from \"sap/fe/core/templating/UIFormatters\";\nimport type Context from \"sap/ui/model/odata/v4/Context\";\nimport CommonHelper from \"../CommonHelper\";\nimport { getVisibleExpression } from \"../field/FieldTemplating\";\nimport FormHelper from \"./FormHelper\";\n\n/**\n * Building block for creating a FormContainer based on the provided OData V4 metadata.\n *\n *\n * Usage example:\n * <pre>\n * &lt;macros:FormContainer\n * id=\"SomeId\"\n * entitySet=\"{entitySet>}\"\n * dataFieldCollection =\"{dataFieldCollection>}\"\n * title=\"someTitle\"\n * navigationPath=\"{ToSupplier}\"\n * visible=true\n * onChange=\".handlers.onFieldValueChange\"\n * /&gt;\n * </pre>\n * @private\n */\n@defineBuildingBlock({ name: \"FormContainer\", namespace: \"sap.fe.macros\" })\nexport default class FormContainerBlock extends BuildingBlockTemplatingBase {\n\t@blockAttribute({ type: \"string\" })\n\tid?: string;\n\n\t@blockAttribute({\n\t\ttype: \"sap.ui.model.Context\",\n\t\trequired: true,\n\t\tisPublic: true,\n\t\texpectedTypes: [\"EntitySet\", \"NavigationProperty\", \"EntityType\", \"Singleton\"]\n\t})\n\tcontextPath!: Context;\n\n\t@blockAttribute({\n\t\ttype: \"sap.ui.model.Context\"\n\t})\n\tentitySet?: Context;\n\n\t@blockAttribute({\n\t\ttype: \"sap.ui.model.Context\",\n\t\tisPublic: true,\n\t\trequired: true\n\t})\n\tmetaPath!: Context;\n\n\t/**\n\t * Metadata path to the dataFieldCollection\n\t */\n\t@blockAttribute({\n\t\ttype: \"array\"\n\t})\n\tdataFieldCollection?: FormElement[];\n\n\t/**\n\t * Control whether the form is in displayMode or not\n\t */\n\t@blockAttribute({\n\t\ttype: \"boolean\"\n\t})\n\tdisplayMode = false;\n\n\t/**\n\t * Title of the form container\n\t */\n\t@blockAttribute({ type: \"string\" })\n\ttitle?: string;\n\n\t/**\n\t * Defines the \"aria-level\" of the form title, titles of internally used form containers are nested subsequently\n\t */\n\t@blockAttribute({ type: \"sap.ui.core.TitleLevel\", isPublic: true })\n\ttitleLevel = \"Auto\";\n\n\t/**\n\t * Binding the form container using a navigation path\n\t */\n\t@blockAttribute({ type: \"string\" })\n\tnavigationPath?: string;\n\n\t/**\n\t * Binding the visibility of the form container using an expression binding or Boolean\n\t */\n\t@blockAttribute({ type: \"string\" })\n\tvisible?: string;\n\n\t/**\n\t * Check if UI hidden annotation is present or not\n\t */\n\t@blockAttribute({ type: \"boolean\" })\n\thasUiHiddenAnnotation?: boolean;\n\n\t/**\n\t * Flex designtime settings to be applied\n\t */\n\t@blockAttribute({ type: \"string\" })\n\tdesigntimeSettings = \"sap/fe/macros/form/FormContainer.designtime\";\n\n\t@blockAttribute({ type: \"array\" })\n\tactions?: BaseAction[];\n\n\t@blockAttribute({ type: \"boolean\" })\n\tuseSingleTextAreaFieldAsNotes?: boolean;\n\n\t@blockAggregation({ type: \"sap.fe.macros.form.FormElement\" })\n\tformElements: Record<string, ConfigurableObject> = {};\n\n\t// Just proxied down to the Field may need to see if needed or not\n\t@blockEvent()\n\tonChange?: string;\n\n\tcontentId: string | undefined;\n\n\tconstructor(props: PropertiesOf<FormContainerBlock>, externalConfiguration: unknown, settings: TemplateProcessorSettings) {\n\t\tsuper(props);\n\t\tthis.entitySet = this.contextPath!;\n\t\tif (this.formElements && Object.keys(this.formElements).length > 0) {\n\t\t\tconst oContextObjectPath = getInvolvedDataModelObjects<ReferenceFacet>(this.metaPath, this.contextPath);\n\t\t\tconst mExtraSettings: Record<string, unknown> = {};\n\t\t\tlet oFacetDefinition = oContextObjectPath.targetObject;\n\t\t\t// Wrap the facet in a fake Facet annotation\n\t\t\toFacetDefinition = {\n\t\t\t\t$Type: UIAnnotationTypes.ReferenceFacet,\n\t\t\t\tLabel: oFacetDefinition?.Label,\n\t\t\t\tTarget: {\n\t\t\t\t\t$target: oFacetDefinition,\n\t\t\t\t\tfullyQualifiedName: oFacetDefinition?.fullyQualifiedName,\n\t\t\t\t\tpath: \"\",\n\t\t\t\t\tterm: \"\",\n\t\t\t\t\ttype: \"AnnotationPath\",\n\t\t\t\t\tvalue: getContextRelativeTargetObjectPath(oContextObjectPath)\n\t\t\t\t},\n\t\t\t\tannotations: {},\n\t\t\t\tfullyQualifiedName: oFacetDefinition?.fullyQualifiedName\n\t\t\t} as unknown as ReferenceFacet;\n\t\t\tmExtraSettings[oFacetDefinition.Target.value] = { fields: this.formElements };\n\t\t\tconst oConverterContext = this.getConverterContext(\n\t\t\t\toContextObjectPath,\n\t\t\t\t/*this.contextPath*/ undefined,\n\t\t\t\tsettings,\n\t\t\t\tmExtraSettings\n\t\t\t);\n\t\t\tconst oFormDefinition = createFormDefinition(oFacetDefinition, \"true\", oConverterContext);\n\n\t\t\tthis.dataFieldCollection = oFormDefinition.formContainers[0].formElements;\n\t\t}\n\t\t// We need the view id for the form elements stable ids generation\n\t\tthis.contentId = settings.viewId as string;\n\t}\n\n\t/**\n\t * Returns the template for the FormContainer.\n\t * @returns The XML template string.\n\t */\n\tpublic getTemplate(): string {\n\t\tconst overflowToolbarID = this.id ? StableIDHelper.generate([this.id, \"FormActionsToolbar\"]) : undefined;\n\t\tconst dataModelObject = getInvolvedDataModelObjects(this.contextPath, this.metaPath) as DataModelObjectPath<EntitySet> | undefined;\n\t\tconst bindingString = FormHelper.generateBindingExpression(this.navigationPath, dataModelObject);\n\n\t\treturn xml`\n\t\t<f:FormContainer\n\t\t\txmlns=\"sap.m\"\n\t\t\txmlns:f=\"sap.ui.layout.form\"\n\t\t\txmlns:macro=\"sap.fe.macros\"\n\t\t\txmlns:macroForm=\"sap.fe.macros.form\"\n\t\t\txmlns:internalMacro=\"sap.fe.macros.internal\"\n\t\t\txmlns:core=\"sap.ui.core\"\n\t\t\txmlns:controls=\"sap.fe.macros.controls\"\n\t\t\txmlns:dt=\"sap.ui.dt\"\n\t\t\txmlns:macrodata=\"http://schemas.sap.com/sapui5/extension/sap.ui.core.CustomData/1\"\n\t\t\txmlns:fpm=\"sap.fe.macros.fpm\"\n\t\t\txmlns:template=\"http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1\"\n\t\t\ttemplate:require=\"{\n\t\t\t\tMODEL: 'sap/ui/model/odata/v4/AnnotationHelper',\n\t\t\t\tID: 'sap/fe/core/helpers/StableIdHelper',\n\t\t\t\tCOMMON: 'sap/fe/macros/CommonHelper',\n\t\t\t\tFORM: 'sap/fe/macros/form/FormHelper',\n\t\t\t\tUI: 'sap/fe/core/templating/UIFormatters',\n\t\t\t\tDataField: 'sap/fe/core/templating/DataFieldFormatters',\n\t\t\t\tFieldTemplating: 'sap/fe/macros/field/FieldTemplating',\n\t\t\t\tProperty: 'sap/fe/core/templating/PropertyFormatters',\n\t\t\t\tFIELD: 'sap/fe/macros/field/FieldHelper',\n\t\t\t\tMACRO: 'sap/fe/macros/MacroTemplating'\n\t\t\t}\"\n\n\t\t\tcore:require=\"{FormContainerRuntime: 'sap/fe/macros/form/FormContainerAPI'}\"\n\t\t\tdt:designtime=\"${this.designtimeSettings}\"\n\t\t\tid=\"${this.id || undefined}\"\n\t\t\tvisible=\"${this.visible}\"\n\t\t\tmacrodata:navigationPath=\"${this.navigationPath}\"\n\t\t\tmacrodata:etName=\"${this.contextPath.getObject(\"./@sapui.name\")}\"\n\t\t\tmacrodata:UiHiddenPresent=\"${this.hasUiHiddenAnnotation}\"\n\t\t>\n\n\t\t\t<template:if test=\"${this.title}\">\n\t\t\t\t<f:title>\n\t\t\t\t\t<core:Title level=\"${this.titleLevel}\" text=\"${this.title}\" />\n\t\t\t\t</f:title>\n\t\t\t</template:if>\n\n\t\t\t<template:if test=\"${this.actions}\">\n\t\t\t\t<template:then>\n\t\t\t\t\t<f:toolbar>\n\t\t\t\t\t\t<OverflowToolbar\n\t\t\t\t\t\t\tid=\"${overflowToolbarID}\"\n\t\t\t\t\t\t\t${this.attr(\"binding\", bindingString)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Title level=\"${this.titleLevel}\" text=\"${this.title}\" />\n\t\t\t\t\t\t\t<ToolbarSpacer />\n\t\t\t\t\t\t\t<template:repeat list=\"{actions>}\" var=\"action\">\n\t\t\t\t\t\t\t\t<core:Fragment fragmentName=\"sap.fe.macros.form.FormActionButtons\" type=\"XML\" />\n\t\t\t\t\t\t\t</template:repeat>\n\t\t\t\t\t\t</OverflowToolbar>\n\t\t\t\t\t</f:toolbar>\n\t\t\t\t</template:then>\n\t\t\t</template:if>\n\n\t\t\t<f:dependents>\n\t\t\t\t<macroForm:FormContainerAPI formContainerId=\"${this.id}\" showDetails=\"{internal>showDetails}\" />\n\t\t\t</f:dependents>\n\n\t\t\t<f:formElements>\n\t\t\t\t${this.getTemplatedFormElements()}\n\t\t\t</f:formElements>\n\n\t\t</f:FormContainer>`;\n\t}\n\n\t/**\n\t * Returns the templated form elements.\n\t * @returns The XML string for the form elements.\n\t */\n\tpublic getTemplatedFormElements(): string {\n\t\treturn xml`\n\t\t\t<template:with path=\"dataFieldCollection>\" var=\"formElements\">\n\t\t\t\t${this.getInnerTemplatedFormElements()}\n\t\t\t</template:with>`;\n\t}\n\n\t/**\n\t * Returns the inner templated form elements, including DataPoint and Contact templates.\n\t * @returns The XML string for the inner form elements.\n\t */\n\tpublic getInnerTemplatedFormElements(): string {\n\t\tlet getDataPointTemplate = \"\";\n\n\t\tif (this.dataFieldCollection && this.dataFieldCollection.length > 0) {\n\t\t\t// We need to consider the first element that has an annotationPath\n\t\t\tconst firstElementWithAnnotationPath = this.dataFieldCollection.find((df) => !!df.annotationPath);\n\t\t\tlet idPrefix = \"\";\n\t\t\tconst isEditableHeader = this.id?.includes(\"HeaderFacet::FormContainer\") === true;\n\t\t\tlet formElementId = \"undefined\";\n\t\t\tif (this.id) {\n\t\t\t\tif (isEditableHeader) {\n\t\t\t\t\tformElementId = `${this.id}::FormElement`;\n\t\t\t\t\tidPrefix = `${this.id}::FormElement`;\n\t\t\t\t} else {\n\t\t\t\t\tformElementId = `${StableIDHelper.generate([this.id, \"FormElement\", this.dataFieldCollection[0].key])}`;\n\t\t\t\t\tidPrefix = `${StableIDHelper.generate([this.id, \"FormElement\", this.dataFieldCollection[0].key])}`;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (firstElementWithAnnotationPath?.annotationPath) {\n\t\t\t\tconst computedDataModelObject = getInvolvedDataModelObjects(\n\t\t\t\t\tthis.contextPath.getModel().createBindingContext(firstElementWithAnnotationPath?.annotationPath || \"\")\n\t\t\t\t) as DataModelObjectPath<EntitySet> | undefined;\n\t\t\t\tconst bindingString = FormHelper.generateBindingExpression(this.navigationPath, computedDataModelObject);\n\t\t\t\tconst designtime = computedDataModelObject?.targetObject?.annotations?.UI?.AdaptationHidden\n\t\t\t\t\t? \"not-adaptable-tree\"\n\t\t\t\t\t: \"sap/fe/macros/form/FormElement.designtime\";\n\n\t\t\t\tgetDataPointTemplate = xml`\n\t\t\t\t<template:then>\n\t\t\t\t\t<template:with path=\"formElements>0/annotationPath\" var=\"dataPoint\">\n\t\t\t\t\t\t<f:FormElement\n\t\t\t\t\t\t\tdt:designtime=\"${designtime}\"\n\t\t\t\t\t\t\tid=\"${formElementId}\"\n\t\t\t\t\t\t\tlabel=\"{dataPoint>@@FIELD.computeLabelText}\"\n\t\t\t\t\t\t\tvisible=\"${getVisibleExpression(computedDataModelObject as DataModelObjectPath<DataFieldAbstractTypes | DataPointType | Property>)}\"\n\t\t\t\t\t\t\t${this.attr(\"binding\", bindingString)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<f:fields>\n\t\t\t\t\t\t\t\t<macro:Field\n\t\t\t\t\t\t\t\t\tidPrefix=\"${idPrefix}\"\n\t\t\t\t\t\t\t\t\tvhIdPrefix=\"${this.id ? StableIDHelper.generate([this.id, \"FieldValueHelp\"]) : \"\"}\"\n\t\t\t\t\t\t\t\t\tcontextPath=\"${this.entitySet?.getPath()}\"\n\t\t\t\t\t\t\t\t\tmetaPath=\"${this.dataFieldCollection[0].annotationPath}\"\n\t\t\t\t\t\t\t\t\teditMode=\"${this.displayMode === true ? \"Display\" : undefined}\"\n\t\t\t\t\t\t\t\t\tonChange=\"${this.onChange}\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<formatOptions textAlignMode=\"Form\" showEmptyIndicator=\"true\" />\n\t\t\t\t\t\t\t\t</macro:Field>\n\t\t\t\t\t\t\t</f:fields>\n\t\t\t\t\t\t</f:FormElement>\n\t\t\t\t\t</template:with>\n\t\t\t\t</template:then>\n\t\t\t`;\n\t\t\t}\n\t\t}\n\n\t\tconst getContactTemplate = xml`\n\t\t<template:elseif\n\t\t\ttest=\"{= \\${formElements>0/annotationPath}.indexOf('com.sap.vocabularies.Communication.v1.Contact') > -1 }\"\n\t\t\t>\n\t\t\t<template:with path=\"formElements>0/annotationPath\" var=\"metaPath\">\n\t\t\t\t<f:FormElement\n\t\t\t\t\tdt:designtime=\"{= \\${metaPath>./@com.sap.vocabularies.UI.v1.AdaptationHidden} ? 'not-adaptable-tree' :  'sap/fe/macros/form/FormElement.designtime' }\"\n\t\t\t\t\tbinding=\"{= FORM.generateBindingExpression(\\${this.navigationPath},\\${contextPath>@@UI.getDataModelObjectPath})}\"\n\t\t\t\t>\n\t\t\t\t<f:label>\n\t\t\t\t\t<Label\n\t\t\t\t\t\ttext=\"{metaPath>fn/$Path@com.sap.vocabularies.Common.v1.Label}\"\n\t\t\t\t\t\tvisible=\"{= FieldTemplating.getVisibleExpression(\\${dataField>@@UI.getDataModelObjectPath})}\"\n\t\t\t\t\t>\n\t\t\t\t\t<layoutData>\n\t\t\t\t\t\t<f:ColumnElementData cellsLarge=\"12\" />\n\t\t\t\t\t</layoutData>\n\t\t\t\t</Label>\n\t\t\t\t</f:label>\n\t\t\t\t\t<f:fields>\n\t\t\t\t\t\t<macro:Contact\n\t\t\t\t\t\t\tmetaPath=\"{metaPath>@@COMMON.getMetaPath}\"\n\t\t\t\t\t\t\t\tcontextPath=\"{contextPath>@@COMMON.getMetaPath}\"\n\t\t\t\t\t\t\t\tvisible=\"true\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t</f:fields>\n\t\t\t\t</f:FormElement>\n\t\t\t</template:with>\n\t\t</template:elseif>`;\n\n\t\treturn xml`\n\t\t\t<template:if test=\"{= \\${formElements>0/annotationPath}.indexOf('com.sap.vocabularies.UI.v1.DataPoint') > -1 }\">\n\t\t\t\t${getDataPointTemplate}\n\t\t\t\t${getContactTemplate}\n\t\t\t\t<template:else>\n\t\t\t\t\t${this.getDataFieldsForAnnotations()}\n\t\t\t\t</template:else>\n\t\t\t</template:if>\n\t\t`;\n\t}\n\n\t/**\n\t * Generates the template for a form element with connected fields.\n\t * @param formElement The form element.\n\t * @returns The XML string for the connected fields form element.\n\t */\n\tgetConnectedFieldsFormElement(formElement: AnnotationFormElement): string {\n\t\tlet connectedFieldElements = \"\";\n\n\t\tfor (const connectedField of formElement.connectedFields!) {\n\t\t\tconst model = this.contextPath.getModel();\n\t\t\tconst tempName = connectedField.originalObject?.fullyQualifiedName;\n\t\t\tconst path = tempName?.substring(tempName.lastIndexOf(\"/\") + 1);\n\t\t\tconst bindingContext = model.createBindingContext(formElement.annotationPath + \"Target/$AnnotationPath/Data/\" + path);\n\t\t\tconst delimiter = CommonHelper.getDelimiter(connectedField.originalTemplate ?? \"\");\n\t\t\tconst notLastIndexCondition =\n\t\t\t\tformElement.connectedFields!.indexOf(connectedField) !== formElement.connectedFields!.length - 1\n\t\t\t\t\t? xml`<Text\n\t\t\t\t\ttext=\"${delimiter}\"\n\t\t\t\t\tclass=\"sapUiSmallMarginBeginEnd\"\n\t\t\t\t\twidth=\"100%\"\n\t\t\t\t/>`\n\t\t\t\t\t: \"\";\n\n\t\t\tconst computedIdPrefix = this.id\n\t\t\t\t? StableIDHelper.generate([\n\t\t\t\t\t\tthis.id,\n\t\t\t\t\t\t\"SemanticFormElement\",\n\t\t\t\t\t\tformElement.key,\n\t\t\t\t\t\t(connectedField.originalObject as DataField)?.Value.path\n\t\t\t\t  ])\n\t\t\t\t: \"\";\n\t\t\tconst computedVhIdPrefix = this.id ? StableIDHelper.generate([this.id, formElement.key, \"FieldValueHelp\"]) : \"\";\n\n\t\t\tlet connectedFieldElement = \"\";\n\n\t\t\tconnectedFieldElement = xml`\n\t\t\t\t<macro:Field\n\t\t\t\t\tidPrefix=\"${computedIdPrefix}\"\n\t\t\t\t\tvhIdPrefix=\"${computedVhIdPrefix}\"\n\t\t\t\t\tcontextPath=\"${this.entitySet?.getPath()}\"\n\t\t\t\t\tmetaPath=\"${bindingContext.getPath()}\"\n\t\t\t\t\tonChange=\"${this.onChange}\"\n\t\t\t\t\tariaLabelledBy=\"${this.id ? StableIDHelper.generate([this.id, \"SemanticFormElementLabel\", formElement.key]) : \"\"}\"\n\t\t\t\t>\n\t\t\t\t\t<formatOptions\n\t\t\t\t\t\ttextLinesEdit=\"${formElement.formatOptions?.textLinesEdit}\"\n\t\t\t\t\t\ttextMaxLines=\"${formElement.formatOptions?.textMaxLines}\"\n\t\t\t\t\t\ttextMaxCharactersDisplay=\"${formElement.formatOptions?.textMaxCharactersDisplay}\"\n\t\t\t\t\t\ttextMaxLength=\"${formElement.formatOptions?.textMaxLength}\"\n\t\t\t\t\t\ttextExpandBehaviorDisplay=\"${formElement.formatOptions?.textExpandBehaviorDisplay}\"\n\t\t\t\t\t\ttextAlignMode=\"Form\"\n\t\t\t\t\t\tshowEmptyIndicator=\"true\"\n\t\t\t\t\t\tfieldEditStyle=\"${formElement.formatOptions?.fieldEditStyle}\"\n\t\t\t\t\t\tradioButtonsHorizontalLayout=\"${formElement.formatOptions?.radioButtonsHorizontalLayout}\"\n\t\t\t\t\t/>\n\t\t\t\t\t<macro:layoutData>\n\t\t\t\t\t\t<FlexItemData growFactor=\"{= %{ui>/isEditable} ? 1 : 0}\" />\n\t\t\t\t\t</macro:layoutData>\n\t\t\t\t</macro:Field>\n\t\t\t\t${notLastIndexCondition}\n\t\t\t\t`;\n\n\t\t\tconnectedFieldElements += connectedFieldElement;\n\t\t}\n\n\t\tconst dataModelObjectForConnectedFields = getInvolvedDataModelObjects(\n\t\t\tthis.contextPath.getModel().createBindingContext(formElement.annotationPath ?? \"\")\n\t\t) as DataModelObjectPath<EntitySet> | undefined;\n\t\tlet formElementId = \"\";\n\t\tif (this.id) {\n\t\t\tif (this.contentId) {\n\t\t\t\tformElementId = `${this.contentId}--${StableIDHelper.generate([this.id, \"SemanticFormElement\", formElement.key])}`;\n\t\t\t} else {\n\t\t\t\tformElementId = `${StableIDHelper.generate([this.id, \"SemanticFormElement\", formElement.key])}`;\n\t\t\t}\n\t\t}\n\t\tconst visibleExpression = formElement.isPartOfPreview\n\t\t\t? getVisibleExpression(\n\t\t\t\t\tdataModelObjectForConnectedFields as DataModelObjectPath<DataFieldAbstractTypes | DataPointType | Property>\n\t\t\t  )\n\t\t\t: \"{= ${internal>showDetails} === true}\";\n\t\tconst bindingString = FormHelper.generateBindingExpression(this.navigationPath, dataModelObjectForConnectedFields);\n\t\tconst targetObject = (dataModelObjectForConnectedFields?.targetObject as unknown as DataFieldForAnnotation)?.Target\n\t\t\t?.$target as AnnotationTerm<ConnectedFieldsTypeTypes>;\n\n\t\tconst designtime = dataModelObjectForConnectedFields?.targetObject?.annotations?.UI?.AdaptationHidden\n\t\t\t? \"not-adaptable-tree\"\n\t\t\t: \"sap/fe/macros/form/FormElement.designtime\";\n\t\tconst isRequired = getRequiredExpressionForConnectedDataField(\n\t\t\tdataModelObjectForConnectedFields as DataModelObjectPath<AnnotationPath<ConnectedFieldsType>>\n\t\t)?.toString();\n\n\t\treturn xml`\n\t\t\t<f:FormElement\n\t\t\t\txmlns:f=\"sap.ui.layout.form\"\n\t\t\t\tdt:designtime=\"${designtime}\"\n\t\t\t\tid=\"${formElementId}\"\n\t\t\t\tvisible=\"${visibleExpression}\"\n\t\t\t\t${this.attr(\"binding\", bindingString)}\n\t\t\t>\n\t\t\t\t<f:label>\n\t\t\t\t\t<Label\n\t\t\t\t\ttext=\"${targetObject?.Label ?? formElement.label}\"\n\t\t\t\t\tid=\"${this.id ? StableIDHelper.generate([this.id, \"SemanticFormElementLabel\", formElement.key]) : \"\"}\"\n\n\t\t\t\t\t/>\n\t\t\t\t</f:label>\n\t\t\t\t<f:fields>\n\t\t\t\t\t<controls:FieldWrapper required=\"${isRequired}\">\n\t\t\t\t\t\t<HBox wrap=\"Wrap\">\n\t\t\t\t\t\t\t${connectedFieldElements}\n\t\t\t\t\t\t</HBox>\n\t\t\t\t\t</controls:FieldWrapper>\n\t\t\t\t</f:fields>\n\t\t\t</f:FormElement>\n\t\t`;\n\t}\n\n\t/**\n\t * Generates the template for a form element representing a multivalue field.\n\t * @param formElement The form element.\n\t * @returns The XML string for the multi-value field form element.\n\t */\n\tgetMultiValueFieldFormElement(formElement: AnnotationFormElement): string {\n\t\tconst computedDataModelObject = getInvolvedDataModelObjects(\n\t\t\tthis.contextPath.getModel().createBindingContext(formElement.annotationPath ?? \"\")\n\t\t) as DataModelObjectPath<EntitySet> | undefined;\n\t\tconst visibleExpression = formElement.isPartOfPreview\n\t\t\t? getVisibleExpression(computedDataModelObject as DataModelObjectPath<DataFieldAbstractTypes | DataPointType | Property>)\n\t\t\t: \"{= ${internal>showDetails} === true}\";\n\t\tconst bindingString = FormHelper.generateBindingExpression(this.navigationPath, computedDataModelObject);\n\t\tconst formElementId = this.id ? `${StableIDHelper.generate([this.id, \"FormElement\", formElement.key])}` : \"undefined\";\n\t\tconst multiValueFieldId = this.id\n\t\t\t? `${StableIDHelper.generate([this.id, \"FormElement\", formElement.key, \"MultiValueField\"])}`\n\t\t\t: \"undefined\";\n\t\tconst vhIdPrefix = this.id ? StableIDHelper.generate([this.id, \"FieldValueHelp\"]) : \"\";\n\t\tconst designtime = computedDataModelObject?.targetObject?.annotations?.UI?.AdaptationHidden\n\t\t\t? \"not-adaptable-tree\"\n\t\t\t: \"sap/fe/macros/form/FormElement.designtime\";\n\n\t\treturn xml`\n\t\t\t\t\t\t\t\t\t\t\t\t<f:FormElement\n\t\t\t\t\t\t\t\t\t\t\t\t\txmlns:macros=\"sap.fe.macros\"\n\t\t\t\t\t\t\t\t\t\t\t\t\txmlns:multivaluefield=\"sap.fe.macros.multivaluefield\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tdt:designtime=\"${designtime}\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"${formElementId}\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"${formElement.label}\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tvisible=\"${visibleExpression}\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t${this.attr(\"binding\", bindingString)}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<f:fields>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<macros:MultiValueField\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"${multiValueFieldId}\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvhIdPrefix=\"${vhIdPrefix}\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcontextPath=\"${this.entitySet?.getPath()}\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmetaPath=\"${formElement.annotationPath}\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<macros:formatOptions>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<multivaluefield:FormatOptions showEmptyIndicator=\"true\" />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</macros:formatOptions>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</macros:MultiValueField>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</f:fields>\n\t\t\t\t\t\t\t\t\t\t\t\t</f:FormElement>`;\n\t}\n\n\t/**\n\t * Generates the template for form elements representing a checkbox group.\n\t * @param formElement The form element.\n\t * @returns The XML string for the checkbox group form elements.\n\t */\n\tgetFieldGroupFormElement(formElement: AnnotationFormElement): string {\n\t\tlet fieldGroupElements = \"\";\n\t\t//We template each element of the checkbox group\n\t\tfor (const groupElement of formElement.fieldGroupElements!) {\n\t\t\tconst model = this.contextPath.getModel();\n\t\t\tconst tempName = groupElement.fullyQualifiedName;\n\t\t\tconst path = tempName?.substring(tempName.lastIndexOf(\"/\") + 1);\n\t\t\tconst bindingContext = model.createBindingContext(formElement.annotationPath + \"Target/$AnnotationPath/Data/\" + path);\n\t\t\tconst groupElementDataModelObject = getInvolvedDataModelObjects<DataFieldAbstractTypes | DataPointType>(bindingContext);\n\t\t\tconst computedIdPrefix = this.id\n\t\t\t\t? `${StableIDHelper.generate([\n\t\t\t\t\t\tthis.id,\n\t\t\t\t\t\t\"CheckBoxGroup\",\n\t\t\t\t\t\tformElement.key,\n\t\t\t\t\t\t(groupElementDataModelObject.targetObject as DataField | DataPointType)?.Value?.path\n\t\t\t\t  ])}`\n\t\t\t\t: \"\";\n\n\t\t\tconst isBooleanFieldGroup =\n\t\t\t\t(groupElementDataModelObject.targetObject as DataField | DataPointType)?.Value?.$target?.type === \"Edm.Boolean\";\n\n\t\t\tconst fieldGroupElement = isBooleanFieldGroup\n\t\t\t\t? xml`\n\t\t\t\t<macro:Field\n\t\t\t\t\tidPrefix=\"${computedIdPrefix}\"\n\t\t\t\t\tcontextPath=\"${this.entitySet?.getPath()}\"\n\t\t\t\t\tmetaPath=\"${bindingContext.getPath()}\"\n\t\t\t\t\tonChange=\"${this.onChange}\"\n\t\t\t\t\tariaLabelledBy=\"${this.id ? StableIDHelper.generate([this.id, \"FieldGroupFormElementLabel\", formElement.key]) : \"\"}\"\n\t\t\t\t>\n\t\t\t\t\t<formatOptions isFieldGroupItem=\"true\" textAlignMode=\"Form\" />\n\t\t\t\t</macro:Field>\n\t\t\t`\n\t\t\t\t: \"\";\n\n\t\t\tfieldGroupElements += fieldGroupElement;\n\t\t}\n\n\t\tconst computedDataModelObject = getInvolvedDataModelObjects(\n\t\t\tthis.contextPath.getModel().createBindingContext(formElement.annotationPath ?? \"\")\n\t\t) as DataModelObjectPath<EntitySet> | undefined;\n\t\tconst visibleExpression = formElement.isPartOfPreview\n\t\t\t? getVisibleExpression(computedDataModelObject as DataModelObjectPath<DataFieldAbstractTypes | DataPointType | Property>)\n\t\t\t: \"{= ${internal>showDetails} === true}\";\n\t\tconst bindingString = FormHelper.generateBindingExpression(this.navigationPath, computedDataModelObject);\n\t\tlet fieldGroupFormElementId = \"\";\n\t\tlet labelID = \"\";\n\t\tif (this.id) {\n\t\t\tif (this.contentId) {\n\t\t\t\tfieldGroupFormElementId = `${this.contentId}--${StableIDHelper.generate([\n\t\t\t\t\tthis.id,\n\t\t\t\t\t\"FieldGroupFormElement\",\n\t\t\t\t\tformElement.key\n\t\t\t\t])}`;\n\t\t\t\tlabelID = `${this.contentId}--${StableIDHelper.generate([this.id, \"FieldGroupFormElementLabel\", formElement.key])}`;\n\t\t\t} else {\n\t\t\t\tfieldGroupFormElementId = `${StableIDHelper.generate([this.id, \"FieldGroupFormElement\", formElement.key])}`;\n\t\t\t\tlabelID = `${StableIDHelper.generate([this.id, \"FieldGroupFormElementLabel\", formElement.key])}`;\n\t\t\t}\n\t\t}\n\t\tconst targetObject = (computedDataModelObject?.targetObject as unknown as DataFieldForAnnotation)?.Target?.$target as FieldGroup;\n\n\t\tconst designtime = computedDataModelObject?.targetObject?.annotations?.UI?.AdaptationHidden\n\t\t\t? \"not-adaptable-tree\"\n\t\t\t: \"sap/fe/macros/form/FormElement.designtime\";\n\n\t\treturn xml`\n\t\t\t\t\t\t\t\t\t\t\t\t<f:FormElement\n\t\t\t\t\t\t\t\t\t\t\t\t\txmlns:f=\"sap.ui.layout.form\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tdt:designtime=\"${designtime}\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"${fieldGroupFormElementId}\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tvisible=\"${visibleExpression}\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t${this.attr(\"binding\", bindingString)}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<f:label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Label\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttext=\"${targetObject?.Label ?? formElement.label}\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"${labelID}\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</f:label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<f:fields>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<controls:RequiredFlexBox>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FlexBox\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdirection=\"${formElement.formatOptions?.fieldGroupHorizontalLayout === true ? \"Row\" : \"Column\"}\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twrap=\"Wrap\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolumnGap=\"1rem\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t${fieldGroupElements}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</FlexBox>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</controls:RequiredFlexBox>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</f:fields>\n\t\t\t\t\t\t\t\t\t\t\t\t</f:FormElement>\n\t\t\t\t\t\t\t\t\t\t\t`;\n\t}\n\n\t/**\n\t * Generates the template for a form element representing a field.\n\t * @param formElement The form element.\n\t * @returns The XML string for the field form element.\n\t */\n\tgetFieldFormElement(formElement: AnnotationFormElement): string {\n\t\tconst computedDataModelObject = getInvolvedDataModelObjects(\n\t\t\tthis.contextPath.getModel().createBindingContext(formElement.annotationPath ?? \"\")\n\t\t) as DataModelObjectPath<EntitySet> | undefined;\n\t\tconst bindingString = FormHelper.generateBindingExpression(this.navigationPath, computedDataModelObject);\n\t\tconst computedVhIdPrefix = StableIDHelper.generate([this.id, \"FieldValueHelp\"]);\n\t\tlet formElementId = \"undefined\";\n\t\tconst visibleExpression = formElement.isPartOfPreview\n\t\t\t? getVisibleExpression(computedDataModelObject as DataModelObjectPath<DataFieldAbstractTypes | DataPointType | Property>)\n\t\t\t: \"{= ${internal>showDetails} === true}\";\n\t\tconst computedIdPrefix = this.id ? `${StableIDHelper.generate([this.id, \"FormElement\", formElement.key])}` : \"\";\n\t\tif (this.id) {\n\t\t\tif (this.contentId) {\n\t\t\t\tformElementId = `${this.contentId}--${StableIDHelper.generate([this.id, \"FormElement\", formElement.key])}`;\n\t\t\t} else {\n\t\t\t\tformElementId = `${StableIDHelper.generate([this.id, \"FormElement\", formElement.key])}`;\n\t\t\t}\n\t\t}\n\t\tconst designtime = computedDataModelObject?.targetObject?.annotations?.UI?.AdaptationHidden\n\t\t\t? \"not-adaptable-tree\"\n\t\t\t: \"sap/fe/macros/form/FormElement.designtime\";\n\n\t\treturn xml`\n\t\t\t\t\t\t\t\t\t\t\t\t<f:FormElement\n\t\t\t\t\t\t\t\t\t\t\t\t\txmlns:f=\"sap.ui.layout.form\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tdt:designtime=\"${designtime}\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"${formElementId}\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"${formElement.label}\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tvisible=\"${visibleExpression}\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t${this.attr(\"binding\", bindingString)}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<f:fields>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<macro:Field\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tidPrefix=\"${computedIdPrefix}\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvhIdPrefix=\"${computedVhIdPrefix}\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcontextPath=\"${this.contextPath.getPath()}\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmetaPath=\"${formElement.annotationPath}\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange=\"${this.onChange}\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treadOnly=\"${formElement.readOnly}\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsemanticObject=\"${formElement.semanticObject}\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<formatOptions\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttextLinesEdit=\"${formElement.formatOptions?.textLinesEdit}\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttextMaxLines=\"${formElement.formatOptions?.textMaxLines}\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttextMaxLength=\"${formElement.formatOptions?.textMaxLength}\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttextMaxCharactersDisplay=\"${formElement.formatOptions?.textMaxCharactersDisplay}\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttextExpandBehaviorDisplay=\"${formElement.formatOptions?.textExpandBehaviorDisplay}\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttextAlignMode=\"Form\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tshowEmptyIndicator=\"true\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfieldEditStyle=\"${formElement.formatOptions?.fieldEditStyle}\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tradioButtonsHorizontalLayout=\"${formElement.formatOptions?.radioButtonsHorizontalLayout}\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdateTimePattern=\"${formElement.formatOptions?.pattern}\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tuseRadioButtonsForBoolean=\"${formElement.formatOptions?.useRadioButtonsForBoolean}\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</macro:Field>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</f:fields>\n\t\t\t\t\t\t\t\t\t\t\t\t</f:FormElement>\n\t\t\t\t\t\t\t\t\t\t\t`;\n\t}\n\n\t/**\n\t * Generates the template for a custom form element.\n\t * @param formElement The custom form element.\n\t * @returns The XML string for the custom form element.\n\t */\n\tgetCustomFormElement(formElement: CustomFormElement): string {\n\t\tconst propertyPath = this.contextPath.getPath() + \"/\" + formElement.propertyPath;\n\t\tconst computedDataModelObject = getInvolvedDataModelObjects(this.contextPath.getModel().createBindingContext(propertyPath)) as\n\t\t\t| DataModelObjectPath<EntitySet>\n\t\t\t| undefined;\n\t\tconst bindingString = FormHelper.generateBindingExpression(this.navigationPath, computedDataModelObject);\n\t\tlet formElementId = \"\";\n\t\tif (this.id) {\n\t\t\tif (this.contentId) {\n\t\t\t\tformElementId = `${this.contentId}--${StableIDHelper.generate([this.id, formElement.id])}`;\n\t\t\t} else {\n\t\t\t\tformElementId = `${StableIDHelper.generate([this.id, formElement.id])}`;\n\t\t\t}\n\t\t}\n\t\tconst designtime = computedDataModelObject?.targetObject?.annotations?.UI?.AdaptationHidden\n\t\t\t? \"not-adaptable-tree\"\n\t\t\t: \"sap/fe/macros/form/FormElement.designtime\";\n\t\tconst formElementKey = StableIDHelper.generate([this.id, formElement.key]);\n\t\treturn xml`\n\t\t\t\t\t\t\t\t<f:FormElement\n\t\t\t\t\t\t\t\t\t\tdt:designtime=\"${designtime}\"\n\t\t\t\t\t\t\t\t\t\tid=\"${formElementId}\"\n\t\t\t\t\t\t\t\t\t\tlabel=\"${formElement.label}\"\n\t\t\t\t\t\t\t\t\t\tvisible=\"${formElement.visible}\"\n\t\t\t\t\t\t\t\t\t\t${this.attr(\"binding\", bindingString)}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<f:fields>\n\t\t\t\t\t\t\t\t\t\t\t<macroForm:CustomFormElement\n\t\t\t\t\t\t\t\t\t\t\t\tmetaPath=\"${formElement.propertyPath}\"\n\t\t\t\t\t\t\t\t\t\t\t\tcontextPath=\"${this.contextPath.getPath()}\"\n\t\t\t\t\t\t\t\t\t\t\t\tformElementKey=\"${formElementKey}\"\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<fpm:CustomFragment\n\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"${formElementKey}\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tfragmentName=\"${formElement.template}\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tcontextPath=\"${this.contextPath.getPath()}\"\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</macroForm:CustomFormElement>\n\t\t\t\t\t\t\t\t\t\t</f:fields>\n\t\t\t\t\t\t\t\t\t</f:FormElement>\n\t\t`;\n\t}\n\n\t/**\n\t * Returns the template for a slot column for the given form element.\n\t * @param formElement The form element.\n\t * @returns The XML string for the slot column.\n\t */\n\tgetSlotColumn(formElement: FormElement): string {\n\t\treturn xml`<slot name=\"${formElement.key}\" />`;\n\t}\n\n\t/**\n\t * Determines if the given data field is a multivalue field.\n\t * @param dataField The data field to check.\n\t * @returns True if the data field is a multivalue field, false otherwise.\n\t */\n\tisMultiValueDataField(dataField: FormElement): boolean {\n\t\tlet isMultiValueFieldCondition = false;\n\t\tif (dataField.annotationPath) {\n\t\t\tconst bindingContext = this.contextPath.getModel().createBindingContext(dataField.annotationPath);\n\t\t\tconst valuePath = bindingContext.getObject()?.Value?.$Path;\n\t\t\tif (valuePath) {\n\t\t\t\tisMultiValueFieldCondition = isMultiValueField(\n\t\t\t\t\tenhanceDataModelPath(getInvolvedDataModelObjects(bindingContext), valuePath)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\treturn isMultiValueFieldCondition;\n\t}\n\n\t/**\n\t * Generates the template for all data fields for annotations.\n\t * @returns The XML string for the data fields.\n\t */\n\tgetDataFieldsForAnnotations(): string {\n\t\tlet returnString = \"\";\n\n\t\tif (this.dataFieldCollection !== undefined) {\n\t\t\tfor (const dataField of this.dataFieldCollection) {\n\t\t\t\tswitch (dataField.type) {\n\t\t\t\t\tcase \"Annotation\":\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t(dataField as AnnotationFormElement).connectedFields &&\n\t\t\t\t\t\t\t(dataField as AnnotationFormElement).connectedFields!.length > 0\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\treturnString += this.getConnectedFieldsFormElement(dataField);\n\t\t\t\t\t\t} else if (this.isMultiValueDataField(dataField)) {\n\t\t\t\t\t\t\treturnString += this.getMultiValueFieldFormElement(dataField);\n\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\t(dataField as AnnotationFormElement).fieldGroupElements &&\n\t\t\t\t\t\t\t(dataField as AnnotationFormElement).fieldGroupElements!.length > 0\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\treturnString += this.getFieldGroupFormElement(dataField);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturnString += this.getFieldFormElement(dataField);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"Default\":\n\t\t\t\t\t\treturnString += this.getCustomFormElement(dataField as CustomFormElement);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturnString += this.getSlotColumn(dataField);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn xml`${returnString}`;\n\t}\n}\n"],"mappings":"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","ignoreList":[]}