<core:FragmentDefinition
	xmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"
	xmlns:core="sap.ui.core"
	xmlns="sap.m"
	xmlns:macro="sap.fe.macros"
	xmlns:internalMacro="sap.fe.macros.internal"
	xmlns:dt="sap.ui.dt"
	xmlns:f="sap.ui.layout.form"
	template:require="{
        FIELD: 'sap/fe/macros/field/FieldHelper',
        FORM: 'sap/fe/macros/form/FormHelper',
        MODEL: 'sap/ui/model/odata/v4/AnnotationHelper',
        COMMON: 'sap/fe/macros/CommonHelper',
        UI: 'sap/fe/core/templating/UIFormatters',
		FieldTemplating: 'sap/fe/macros/field/FieldTemplating'
    }"
>
	<template:if test="{dataField>@com.sap.vocabularies.UI.v1.DataFieldDefault}">
		<template:then>
			<template:with path="dataField>@com.sap.vocabularies.UI.v1.DataFieldDefault" var="dataField">
				<!-- There is a default data field therefore we jump to it and run the same logic again -->
				<core:Fragment fragmentName="sap.fe.macros.form.FormElementFlexibility" type="XML" />
			</template:with>
		</template:then>
		<template:else>
			<f:FormElement
				id="{= ${this>_flexId} + '_FormElement'}"
				label="{= ${dataField>@com.sap.vocabularies.Common.v1.Label} || ${dataField>@@MODEL.label} || '[LABEL_MISSING: ' + ${dataField>@@FIELD.propertyName} +']'}"
				visible="{= FieldTemplating.getVisibleExpression(${dataField>@@UI.getDataModelObjectPath})}"
				binding="{= FORM.generateBindingExpression(${this>navigationPath},${entitySet>@@UI.getDataModelObjectPath})}"
				dt:designtime="{= ${dataField>Value/$Path@com.sap.vocabularies.UI.v1.AdaptationHidden} ? 'not-adaptable-tree' :  'sap/fe/macros/form/FormElement.designtime' }"
			>
				<macro:Field
					editMode="{= ${this>displayMode} === 'true' ? 'Display' : undefined}"
					_flexId="{this>_flexId}"
					vhIdPrefix="FieldValueHelp"
					contextPath="{entitySet>@@COMMON.getMetaPath}"
					metaPath="{dataField>@@COMMON.getMetaPath}"
					onChange="{this>onChange}"
				>
					<formatOptions textAlignMode="Form" showEmptyIndicator="true" />
				</macro:Field>
			</f:FormElement>
		</template:else>
	</template:if>
</core:FragmentDefinition>
