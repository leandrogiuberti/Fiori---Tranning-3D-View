{"version":3,"file":"FormDelegate.js","names":["Delegate","createLayout","async","mPropertyBag","oModifier","modifier","oMetaModel","appComponent","getMetaModel","oForm","element","targets","fieldsInView","view","getElementsByTagNameNS","field","Array","from","getAttribute","fieldSelector","id","Promise","reject","Error","byId","metaPath","DelegateUtil","getCustomDataWithModifier","oFormContainer","parentSelector","bySelector","undefined","sNavigationPath","sBindingPath","substring","indexOf","oMetaModelContext","getMetaContext","length","oPropertyContext","createBindingContext","bindingPath","fnTemplateFormElement","sFragmentName","oView","navigationPath","sOnChangeCustomData","sDisplayModeCustomData","oThis","JSONModel","_flexId","onChange","Common","removeEscapeCharacters","displayMode","oPreprocessorSettings","bindingContexts","entitySet","dataField","this","models","metaModel","templateControlFragment","oField","control","getPropertyInfo","_isComplexType","mProperty","$Type","toLowerCase","_startsWithNavigationProperty","sPropertyPath","aNavigationProperties","some","sNavProp","startsWith","_enrichProperty","mElement","mPropertyAnnotations","sEntityType","oElement","sAggregationName","mProp","name","entityType","mDataFieldDefaultAnnotation","sLabel","Label","label","mHiddenAnnotation","hideFromReveal","$Path","getBindingContext","getProperty","mFieldControlAnnotation","$EnumMember","sFieldControlPath","bListBinding","getBinding","ListBinding","iFieldControlValue","unsupported","_convertMetadataToDelegateFormat","mODataEntityType","aProperties","sElementName","$kind","push","mPropAnnotations","getObject","_getBindingPath","mPayload","path","vBinding","data","getPath","_getODataPropertiesOfModel","oModel","getModel","modelName","isA","sBindingContextPath","oMetaModelContextObject","resolve","then","aggregationName","payload"],"sources":["./FormDelegate.ts"],"sourcesContent":["import type { DataFieldDefault } from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport type AppComponent from \"sap/fe/core/AppComponent\";\nimport type { FEView } from \"sap/fe/core/BaseController\";\nimport type { BaseTreeModifier } from \"sap/fe/core/CommonUtils\";\nimport type { MetaModelPropertyAnnotations } from \"sap/fe/core/converters/MetaModelConverter\";\nimport Common from \"sap/fe/macros/CommonHelper\";\nimport DelegateUtil from \"sap/fe/macros/DelegateUtil\";\nimport type Control from \"sap/ui/core/Control\";\nimport type UI5Element from \"sap/ui/core/Element\";\nimport type XMLView from \"sap/ui/core/mvc/XMLView\";\nimport ListBinding from \"sap/ui/model/ListBinding\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\nimport type ODataMetaModel from \"sap/ui/model/odata/v4/ODataMetaModel\";\nimport type { MetaModelEntityType, MetaModelProperty, MetaModelType } from \"../../../../../../../types/metamodel_types\";\n\ntype DelegateProperty = {\n\tname: string;\n\tbindingPath: string;\n\tentityType: string;\n\tlabel?: string;\n\thideFromReveal?: boolean;\n\tunsupported?: boolean;\n};\n\nconst Delegate = {\n\t/**\n\t * @param mPropertyBag Object with parameters as properties\n\t * @param mPropertyBag.modifier Modifier to harmonize access, creation and manipulation to controls in XML Views and JS Controls\n\t * @param [mPropertyBag.appComponent] Needed to calculate the correct ID in case you provide a selector\n\t * @param [mPropertyBag.view] XML node of the view, required for XML case to create nodes and to find elements\n\t * @param [mPropertyBag.fieldSelector] Selector to calculate the ID for the control that is created\n\t * @param [mPropertyBag.fieldSelector.id]\n\t * @param [mPropertyBag.fieldSelector.isLocalId]\n\t * @param mPropertyBag.bindingPath Runtime binding path the control should be bound to\n\t * @param mPropertyBag.payload Payload parameter attached to the delegate, undefined if no payload was assigned\n\t * @param mPropertyBag.controlType Control type of the element the delegate is attached to\n\t * @param mPropertyBag.aggregationName Name of the aggregation the delegate should provide additional elements\n\t * @param mPropertyBag.element\n\t * @param mPropertyBag.parentSelector\n\t * @returns Map containing the controls to add\n\t */\n\tcreateLayout: async function (mPropertyBag: {\n\t\tmodifier: BaseTreeModifier;\n\t\tappComponent?: AppComponent;\n\t\tview?: Element;\n\t\tfieldSelector?: { id?: string; isLocalId?: boolean };\n\t\tbindingPath: string;\n\t\tpayload: object;\n\t\tcontrolType: string;\n\t\taggregationName: string;\n\t\telement: UI5Element | Element;\n\t\tparentSelector?: object;\n\t}): Promise<{\n\t\tcontrol: Element | UI5Element | Element[] | UI5Element[];\n\t}> {\n\t\tconst oModifier = mPropertyBag.modifier,\n\t\t\toMetaModel = mPropertyBag.appComponent?.getMetaModel(),\n\t\t\toForm = mPropertyBag.element;\n\n\t\t// Check for existing fields with the same _flexId\n\t\tif (oModifier.targets === \"xmlTree\") {\n\t\t\t// at preprocessing time\n\t\t\tconst fieldsInView = mPropertyBag.view?.getElementsByTagNameNS(\"sap.fe.macros\", \"Field\");\n\t\t\tif (fieldsInView) {\n\t\t\t\tfor (const field of Array.from(fieldsInView)) {\n\t\t\t\t\tif (field.getAttribute(\"_flexId\") === mPropertyBag.fieldSelector?.id) {\n\t\t\t\t\t\t// Field with same _flexId already exists, reject Promise to avoid duplicates\n\t\t\t\t\t\treturn Promise.reject(new Error(\"FormDelegate.createLayout: field already exists\"));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (oModifier.targets === \"jsControlTree\") {\n\t\t\t// at runtime\n\t\t\tif (\n\t\t\t\tmPropertyBag.fieldSelector?.id &&\n\t\t\t\tmPropertyBag.view &&\n\t\t\t\t(mPropertyBag.view as unknown as XMLView).byId(mPropertyBag.fieldSelector?.id)\n\t\t\t) {\n\t\t\t\treturn Promise.reject(new Error(\"FormDelegate.createLayout: field already exists\"));\n\t\t\t}\n\t\t}\n\n\t\tconst metaPath = (await DelegateUtil.getCustomDataWithModifier<string>(oForm, \"metaPath\", oModifier)) ?? \"\";\n\t\tconst oFormContainer = mPropertyBag.parentSelector\n\t\t\t? mPropertyBag.modifier.bySelector(mPropertyBag.parentSelector, mPropertyBag.appComponent, mPropertyBag.view)\n\t\t\t: undefined;\n\t\tconst sNavigationPath = oFormContainer\n\t\t\t? await DelegateUtil.getCustomDataWithModifier<string>(oFormContainer as UI5Element | Element, \"navigationPath\", oModifier)\n\t\t\t: \"\";\n\t\tlet sBindingPath = metaPath.substring(0, metaPath.indexOf(\"@\"));\n\t\tsBindingPath = sNavigationPath ? `${sBindingPath}${sNavigationPath}/` : sBindingPath;\n\t\tconst oMetaModelContext = oMetaModel?.getMetaContext(sBindingPath.substring(0, sBindingPath.length - 1));\n\t\tconst oPropertyContext = oMetaModel?.createBindingContext(`${sBindingPath}${mPropertyBag.bindingPath}`);\n\n\t\tasync function fnTemplateFormElement(\n\t\t\tsFragmentName: string,\n\t\t\toView: FEView | undefined,\n\t\t\tnavigationPath: string\n\t\t): Promise<Element | UI5Element | Element[] | UI5Element[]> {\n\t\t\tconst sOnChangeCustomData = await DelegateUtil.getCustomDataWithModifier<string>(oForm, \"onChange\", oModifier);\n\t\t\tconst sDisplayModeCustomData = await DelegateUtil.getCustomDataWithModifier<string>(oForm, \"displayMode\", oModifier);\n\t\t\tconst oThis = new JSONModel({\n\t\t\t\t// properties and events of Field macro\n\t\t\t\t_flexId: mPropertyBag.fieldSelector?.id,\n\t\t\t\tonChange: Common.removeEscapeCharacters(sOnChangeCustomData),\n\t\t\t\tdisplayMode: Common.removeEscapeCharacters(sDisplayModeCustomData),\n\t\t\t\tnavigationPath: navigationPath\n\t\t\t});\n\t\t\tconst oPreprocessorSettings = {\n\t\t\t\tbindingContexts: {\n\t\t\t\t\tentitySet: oMetaModelContext,\n\t\t\t\t\tdataField: oPropertyContext,\n\t\t\t\t\tthis: oThis.createBindingContext(\"/\")\n\t\t\t\t},\n\t\t\t\tmodels: {\n\t\t\t\t\tthis: oThis,\n\t\t\t\t\tentitySet: oMetaModel,\n\t\t\t\t\tmetaModel: oMetaModel,\n\t\t\t\t\tdataField: oMetaModel\n\t\t\t\t},\n\t\t\t\tappComponent: mPropertyBag.appComponent\n\t\t\t};\n\n\t\t\treturn DelegateUtil.templateControlFragment(sFragmentName, oPreprocessorSettings, { view: oView }, oModifier);\n\t\t}\n\n\t\tconst oField = await fnTemplateFormElement(\n\t\t\t\"sap.fe.macros.form.FormElementFlexibility\",\n\t\t\tmPropertyBag.view as unknown as FEView,\n\t\t\tsNavigationPath!\n\t\t);\n\t\treturn {\n\t\t\tcontrol: oField\n\t\t};\n\t},\n\t// getPropertyInfo is a patched version of ODataV4ReadDelegates to dela with navigationPath\n\tgetPropertyInfo: async function (mPropertyBag: {\n\t\telement: Control;\n\t\taggregationName: string;\n\t\tpayload: {\n\t\t\tmodelName?: string;\n\t\t\tpath?: string;\n\t\t};\n\t}): Promise<DelegateProperty[]> {\n\t\tfunction _isComplexType(mProperty: MetaModelProperty): boolean {\n\t\t\tif (mProperty && mProperty.$Type) {\n\t\t\t\tif (mProperty.$Type.toLowerCase().indexOf(\"edm\") !== 0) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\t//Check if a given property path starts with a navigation property.\n\t\tfunction _startsWithNavigationProperty(sPropertyPath: string, aNavigationProperties: string[]): boolean {\n\t\t\treturn aNavigationProperties.some(function (sNavProp) {\n\t\t\t\treturn sPropertyPath.startsWith(sNavProp);\n\t\t\t});\n\t\t}\n\n\t\tfunction _enrichProperty(\n\t\t\tsPropertyPath: string,\n\t\t\tmElement: MetaModelProperty,\n\t\t\tmPropertyAnnotations: MetaModelPropertyAnnotations,\n\t\t\tsEntityType: string,\n\t\t\toElement: Control,\n\t\t\tsAggregationName: string,\n\t\t\taNavigationProperties: string[]\n\t\t): DelegateProperty {\n\t\t\tconst mProp: DelegateProperty = {\n\t\t\t\tname: sPropertyPath,\n\t\t\t\tbindingPath: sPropertyPath,\n\t\t\t\tentityType: sEntityType\n\t\t\t};\n\t\t\t// get label information, either via DataFieldDefault annotation (if exists) or Label annotation\n\t\t\tconst mDataFieldDefaultAnnotation = mPropertyAnnotations[\n\t\t\t\t\"@com.sap.vocabularies.UI.v1.DataFieldDefault\"\n\t\t\t] as MetaModelType<DataFieldDefault>;\n\t\t\tconst sLabel =\n\t\t\t\t(mDataFieldDefaultAnnotation && mDataFieldDefaultAnnotation.Label) ||\n\t\t\t\tmPropertyAnnotations[\"@com.sap.vocabularies.Common.v1.Label\"];\n\t\t\tmProp.label = (sLabel as string) || \"[LABEL_MISSING: \" + sPropertyPath + \"]\";\n\t\t\t// evaluate Hidden annotation\n\t\t\tconst mHiddenAnnotation = mPropertyAnnotations[\"@com.sap.vocabularies.UI.v1.Hidden\"];\n\t\t\tmProp.hideFromReveal = mHiddenAnnotation as boolean;\n\t\t\tif (mHiddenAnnotation && (mHiddenAnnotation as { $Path?: string }).$Path) {\n\t\t\t\tmProp.hideFromReveal = oElement.getBindingContext()?.getProperty((mHiddenAnnotation as { $Path?: string }).$Path!);\n\t\t\t}\n\t\t\t// evaluate AdaptationHidden annotation\n\t\t\tif (!mProp.hideFromReveal) {\n\t\t\t\tmProp.hideFromReveal = mPropertyAnnotations[\"@com.sap.vocabularies.UI.v1.AdaptationHidden\"] as boolean;\n\t\t\t}\n\t\t\t// evaluate FieldControl annotation\n\t\t\tlet mFieldControlAnnotation;\n\t\t\tif (!mProp.hideFromReveal) {\n\t\t\t\tmFieldControlAnnotation = mPropertyAnnotations[\"@com.sap.vocabularies.Common.v1.FieldControl\"];\n\t\t\t\tif (mFieldControlAnnotation) {\n\t\t\t\t\tmProp.hideFromReveal =\n\t\t\t\t\t\t(mFieldControlAnnotation as { $EnumMember?: string }).$EnumMember ===\n\t\t\t\t\t\t\"com.sap.vocabularies.Common.v1.FieldControlType/Hidden\";\n\t\t\t\t}\n\t\t\t}\n\t\t\t// @runtime hidden by field control value = 0\n\t\t\tmFieldControlAnnotation = mPropertyAnnotations[\"@com.sap.vocabularies.Common.v1.FieldControl\"];\n\t\t\tconst sFieldControlPath = mFieldControlAnnotation && (mFieldControlAnnotation as { $Path?: string }).$Path;\n\t\t\tif (sFieldControlPath && !mProp.hideFromReveal) {\n\t\t\t\t// if the binding is a list binding, skip the check for field control\n\t\t\t\tconst bListBinding = oElement.getBinding(sAggregationName) instanceof ListBinding;\n\t\t\t\tif (!bListBinding) {\n\t\t\t\t\tconst iFieldControlValue = oElement.getBindingContext()?.getProperty(sFieldControlPath);\n\t\t\t\t\tmProp.hideFromReveal = iFieldControlValue === 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// no support for DataFieldFor/WithAction and DataFieldFor/WithIntentBasedNavigation within DataFieldDefault annotation\n\t\t\tif (\n\t\t\t\tmDataFieldDefaultAnnotation &&\n\t\t\t\t(mDataFieldDefaultAnnotation.$Type === \"com.sap.vocabularies.UI.v1.DataFieldForAction\" ||\n\t\t\t\t\tmDataFieldDefaultAnnotation.$Type === \"com.sap.vocabularies.UI.v1.DataFieldForIntentBasedNavigation\" ||\n\t\t\t\t\tmDataFieldDefaultAnnotation.$Type === \"com.sap.vocabularies.UI.v1.DataFieldWithAction\" ||\n\t\t\t\t\tmDataFieldDefaultAnnotation.$Type === \"com.sap.vocabularies.UI.v1.DataFieldWithIntentBasedNavigation\")\n\t\t\t) {\n\t\t\t\tmProp.unsupported = true;\n\t\t\t}\n\t\t\t// no support for navigation properties and complex properties\n\t\t\tif (_startsWithNavigationProperty(sPropertyPath, aNavigationProperties) || _isComplexType(mElement)) {\n\t\t\t\tmProp.unsupported = true;\n\t\t\t}\n\t\t\treturn mProp;\n\t\t}\n\n\t\t// Convert metadata format to delegate format.\n\t\tfunction _convertMetadataToDelegateFormat(\n\t\t\tmODataEntityType: MetaModelEntityType,\n\t\t\tsEntityType: string,\n\t\t\toMetaModel: ODataMetaModel,\n\t\t\toElement: Control,\n\t\t\tsAggregationName: string\n\t\t): DelegateProperty[] {\n\t\t\tconst aProperties = [];\n\t\t\tlet sElementName = \"\";\n\t\t\tconst aNavigationProperties = [];\n\t\t\tlet mElement;\n\t\t\tfor (sElementName in mODataEntityType) {\n\t\t\t\tmElement = mODataEntityType[sElementName];\n\t\t\t\tif (mElement.$kind === \"NavigationProperty\") {\n\t\t\t\t\taNavigationProperties.push(sElementName);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (sElementName in mODataEntityType) {\n\t\t\t\tmElement = mODataEntityType[sElementName];\n\t\t\t\tif (mElement.$kind === \"Property\") {\n\t\t\t\t\tconst mPropAnnotations = oMetaModel.getObject(\"/\" + sEntityType + \"/\" + sElementName + \"@\");\n\t\t\t\t\tconst mProp = _enrichProperty(\n\t\t\t\t\t\tsElementName,\n\t\t\t\t\t\tmElement as MetaModelProperty,\n\t\t\t\t\t\tmPropAnnotations,\n\t\t\t\t\t\tsEntityType,\n\t\t\t\t\t\toElement,\n\t\t\t\t\t\tsAggregationName,\n\t\t\t\t\t\taNavigationProperties\n\t\t\t\t\t);\n\t\t\t\t\taProperties.push(mProp);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn aProperties;\n\t\t}\n\n\t\t//Get binding path either from payload (if available) or the element's binding context.\n\t\tfunction _getBindingPath(\n\t\t\toElement: Control,\n\t\t\tmPayload: {\n\t\t\t\tpath?: string;\n\t\t\t}\n\t\t): string | undefined {\n\t\t\tif (mPayload.path) {\n\t\t\t\treturn mPayload.path;\n\t\t\t}\n\t\t\tconst vBinding = oElement.getBindingContext();\n\t\t\tif (vBinding) {\n\t\t\t\tif (oElement.data(\"navigationPath\")) {\n\t\t\t\t\treturn vBinding.getPath() + \"/\" + oElement.data(\"navigationPath\");\n\t\t\t\t}\n\t\t\t\treturn vBinding.getPath();\n\t\t\t}\n\t\t}\n\n\t\t//Get all properties of the element's model.\n\t\tasync function _getODataPropertiesOfModel(\n\t\t\toElement: Control,\n\t\t\tsAggregationName: string,\n\t\t\tmPayload: {\n\t\t\t\tmodelName?: string;\n\t\t\t\tpath?: string;\n\t\t\t}\n\t\t): Promise<DelegateProperty[]> {\n\t\t\tconst oModel = oElement.getModel(mPayload.modelName);\n\t\t\tif (oModel) {\n\t\t\t\tif (oModel.isA(\"sap.ui.model.odata.v4.ODataModel\")) {\n\t\t\t\t\tconst oMetaModel = oModel.getMetaModel() as ODataMetaModel;\n\t\t\t\t\tconst sBindingContextPath = _getBindingPath(oElement, mPayload);\n\t\t\t\t\tif (sBindingContextPath) {\n\t\t\t\t\t\tconst oMetaModelContext = oMetaModel.getMetaContext(sBindingContextPath);\n\t\t\t\t\t\tconst oMetaModelContextObject = oMetaModelContext.getObject();\n\t\t\t\t\t\tconst mODataEntityType = oMetaModelContext.getObject(oMetaModelContextObject.$Type);\n\t\t\t\t\t\treturn _convertMetadataToDelegateFormat(\n\t\t\t\t\t\t\tmODataEntityType,\n\t\t\t\t\t\t\toMetaModelContextObject.$Type,\n\t\t\t\t\t\t\toMetaModel,\n\t\t\t\t\t\t\toElement,\n\t\t\t\t\t\t\tsAggregationName\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn Promise.resolve([]);\n\t\t}\n\n\t\treturn Promise.resolve().then(async function () {\n\t\t\treturn _getODataPropertiesOfModel(mPropertyBag.element, mPropertyBag.aggregationName, mPropertyBag.payload);\n\t\t});\n\t}\n};\n\nexport default Delegate;\n"],"mappings":"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","ignoreList":[]}