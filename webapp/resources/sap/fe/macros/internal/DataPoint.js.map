{"version":3,"file":"DataPoint.js","names":["DataPoint","_dec","defineUI5Class","_dec2","association","type","_dec3","property","required","_dec4","_dec5","aggregation","multiple","defaultClass","DataPointFormatOptions","_dec6","isBindingInfo","_class","_class2","_BuildingBlock","properties","others","_this","call","this","_initializerDefineProperty","_descriptor","_descriptor2","_descriptor3","_descriptor4","_descriptor5","hasQuickView","_exports","_inheritsLoose","_proto","prototype","onMetadataAvailable","getTemplatingObjects","content","createContent","internalDataModelPath","getDataModelObjectForMetaPath","metaPath","contextPath","internalValueDataModelPath","visible","getVisibleExpression","targetObject","Value","path","enhanceDataModelPath","dataModelPath","valueDataModelPath","getDataPointVisualization","Visualization","visualization","valueProperty","isUsedInNavigationWithQuickViewFacets","getPropertyWithSemanticObject","isProperty","hasUnit","hasCurrency","getEnabled","isA","getActive","setEnabled","enabled","setProperty","createRatingIndicator","dataPointTarget","targetValue","getTargetValueBinding","dataPointValue","propertyType","$target","numberOfFractionalDigits","ValueFormat","NumberOfFractionalDigits","value","getValueFormatted","_jsx","RatingIndicator","id","idPrefix","generate","undefined","maxValue","compileExpression","tooltip","getTooltipValue","iconSize","formatOptions","class","showLabels","editable","ariaLabelledBy","createProgressIndicator","criticalityColorExpression","buildExpressionForCriticalityColor","displayValue","buildExpressionForProgressIndicatorDisplayValue","percentValue","buildExpressionForProgressIndicatorPercentValue","ProgressIndicator","state","createObjectNumber","emptyIndicatorMode","showEmptyIndicator","objectStatusNumber","buildFieldBindingExpression","limitShowDecimals","getManifestWrapper","getSapFeManifestConfiguration","app","showOnlyUnitDecimals","preserveDecimalsForCurrency","unit","measureDisplayMode","UIFormatters","getBindingForUnitOrCurrency","ObjectNumber","number","emphasized","dataPointStyle","createDependents","QuickView","createObjectStatus","objectStatusText","iconExpression","buildExpressionForCriticalityIcon","ObjectStatus","icon","text","active","press","FieldRuntimeHelper","pressLink","reactiveAreaMode","children","dependents","annotations","Common","QuickInfo","getExpressionFromAnnotation","getRelativePaths","TargetValue","getValue","getText","getNumber","getDisplayValue","toString","getProperty","setValue","setText","setNumber","Log","error","BuildingBlock","_applyDecoratedDescriptor","configurable","enumerable","writable","initializer"],"sources":["./DataPoint.tsx"],"sourcesContent":["import type { Property } from \"@sap-ux/vocabularies-types\";\nimport { VisualizationType, type DataPointType } from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport Log from \"sap/base/Log\";\nimport type { CompiledBindingToolkitExpression } from \"sap/fe/base/BindingToolkit\";\nimport { compileExpression, getExpressionFromAnnotation, type BindingToolkitExpression } from \"sap/fe/base/BindingToolkit\";\nimport { aggregation, association, defineUI5Class, property, type PropertiesOf } from \"sap/fe/base/ClassSupport\";\nimport BuildingBlock from \"sap/fe/core/buildingBlocks/BuildingBlock\";\nimport { generate } from \"sap/fe/core/helpers/StableIdHelper\";\nimport { isProperty } from \"sap/fe/core/helpers/TypeGuards\";\nimport { buildExpressionForCriticalityColor, buildExpressionForCriticalityIcon } from \"sap/fe/core/templating/CriticalityFormatters\";\nimport type { DataModelObjectPath } from \"sap/fe/core/templating/DataModelPathHelper\";\nimport { enhanceDataModelPath, getRelativePaths } from \"sap/fe/core/templating/DataModelPathHelper\";\nimport { hasCurrency, hasUnit } from \"sap/fe/core/templating/PropertyHelper\";\nimport { getPropertyWithSemanticObject } from \"sap/fe/core/templating/SemanticObjectHelper\";\nimport * as UIFormatters from \"sap/fe/core/templating/UIFormatters\";\nimport { getVisibleExpression, isUsedInNavigationWithQuickViewFacets } from \"sap/fe/macros/field/FieldTemplating\";\nimport {\n\tbuildExpressionForProgressIndicatorDisplayValue,\n\tbuildExpressionForProgressIndicatorPercentValue,\n\tbuildFieldBindingExpression,\n\tgetValueFormatted\n} from \"sap/fe/macros/internal/helpers/DataPointTemplating\";\nimport QuickView from \"sap/fe/macros/quickView/QuickView\";\nimport ObjectNumber from \"sap/m/ObjectNumber\";\nimport type { ObjectStatus$PressEvent } from \"sap/m/ObjectStatus\";\nimport ObjectStatus from \"sap/m/ObjectStatus\";\nimport ProgressIndicator from \"sap/m/ProgressIndicator\";\nimport RatingIndicator from \"sap/m/RatingIndicator\";\nimport type Control from \"sap/ui/core/Control\";\nimport type { $ControlSettings } from \"sap/ui/core/Control\";\nimport type MdcLink from \"sap/ui/mdc/Link\";\nimport FieldRuntimeHelper from \"../field/FieldRuntimeHelper\";\nimport DataPointFormatOptions from \"./DataPointFormatOptions\";\n\n@defineUI5Class(\"sap.fe.macros.internal.DataPoint\")\nexport default class DataPoint extends BuildingBlock<Control> {\n\t/**\n\t * Prefix added to the generated ID of the field\n\t */\n\t@association({\n\t\ttype: \"string\"\n\t})\n\tpublic idPrefix?: string;\n\n\t/**\n\t * Metadata path to the dataPoint.\n\t */\n\t@property({\n\t\ttype: \"string\",\n\t\trequired: true\n\t})\n\tpublic metaPath!: string;\n\n\t@property({\n\t\ttype: \"string\"\n\t})\n\tpublic contextPath?: string;\n\n\t@aggregation({ type: \"sap.fe.macros.internal.DataPointFormatOptions\", multiple: false, defaultClass: DataPointFormatOptions })\n\tformatOptions!: DataPointFormatOptions;\n\n\t/**\n\t * Property to set an external value that comes from a different model than the oData model\n\t */\n\t@property({\n\t\ttype: \"string\",\n\t\tisBindingInfo: true\n\t})\n\tpublic value?: string;\n\n\t/**\n\t * Property to set the visualization type\n\t */\n\tprivate visualization?: string;\n\n\t/**\n\t * Property to set the visibility\n\t */\n\tprivate visible: CompiledBindingToolkitExpression;\n\n\t/**\n\t * Property to set property if the property has a Quickview\n\t */\n\tprivate hasQuickView = false;\n\n\tprivate dataModelPath?: DataModelObjectPath<DataPointType>;\n\n\tprivate valueDataModelPath?: DataModelObjectPath<Property>;\n\n\tconstructor(properties: $ControlSettings & PropertiesOf<DataPoint>, others?: $ControlSettings) {\n\t\tsuper(properties, others);\n\t}\n\n\t/**\n\t * Handler for the onMetadataAvailable event.\n\t */\n\tonMetadataAvailable(): void {\n\t\tthis.getTemplatingObjects();\n\t\tif (!this.content) {\n\t\t\tthis.content = this.createContent();\n\t\t}\n\t}\n\n\t/**\n\t * Function to get the templating objects.\n\t */\n\tprivate getTemplatingObjects(): void {\n\t\tconst internalDataModelPath = this.getDataModelObjectForMetaPath<DataPointType>(this.metaPath, this.contextPath);\n\t\tif (!internalDataModelPath) {\n\t\t\treturn;\n\t\t}\n\t\tlet internalValueDataModelPath;\n\t\tthis.visible = getVisibleExpression(internalDataModelPath);\n\t\tif (internalDataModelPath?.targetObject?.Value?.path) {\n\t\t\tinternalValueDataModelPath = enhanceDataModelPath<Property>(\n\t\t\t\tinternalDataModelPath,\n\t\t\t\tinternalDataModelPath.targetObject.Value.path\n\t\t\t);\n\t\t}\n\n\t\tthis.dataModelPath = internalDataModelPath;\n\t\tthis.valueDataModelPath = internalValueDataModelPath;\n\t}\n\n\t/**\n\t * Function that calculates the visualization type for this DataPoint.\n\t * @param dataModelPath\n\t */\n\tprivate getDataPointVisualization(dataModelPath: DataModelObjectPath<DataPointType>): void {\n\t\tif (dataModelPath.targetObject?.Visualization === VisualizationType.Rating) {\n\t\t\tthis.visualization = \"Rating\";\n\t\t\treturn;\n\t\t}\n\t\tif (dataModelPath.targetObject?.Visualization === VisualizationType.Progress) {\n\t\t\tthis.visualization = \"Progress\";\n\t\t\treturn;\n\t\t}\n\t\tconst valueProperty = this.valueDataModelPath && this.valueDataModelPath.targetObject;\n\t\t//check whether the visualization type should be an object number in case one of the if conditions met\n\t\tthis.hasQuickView = (valueProperty && isUsedInNavigationWithQuickViewFacets(dataModelPath, valueProperty)) ?? false;\n\t\tif (this.valueDataModelPath && getPropertyWithSemanticObject(this.valueDataModelPath)) {\n\t\t\tthis.hasQuickView = true;\n\t\t}\n\t\tif (this.hasQuickView !== true) {\n\t\t\tif (isProperty(valueProperty) && (hasUnit(valueProperty) || hasCurrency(valueProperty))) {\n\t\t\t\t// we only show an objectNumber if there is no quickview and a unit or a currency\n\t\t\t\tthis.visualization = \"ObjectNumber\";\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\t//default case to handle this as objectStatus type\n\t\tthis.visualization = \"ObjectStatus\";\n\t}\n\n\t/**\n\t * Gets the current enablement state of the dataPoint.\n\t * @returns Boolean value with the enablement state\n\t */\n\tgetEnabled(): boolean {\n\t\tif (this.content?.isA<ObjectStatus>(\"sap.m.ObjectStatus\")) {\n\t\t\treturn this.content.getActive();\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\t/**\n\t * Sets the current enablement state of the datapoint.\n\t * @param enabled\n\t * @returns The current datapoint reference\n\t */\n\tsetEnabled(enabled: boolean): Control {\n\t\tif (this.content?.isA<ObjectStatus>(\"sap.m.ObjectStatus\")) {\n\t\t\tthis.content.setProperty(\"active\", enabled);\n\t\t} else {\n\t\t\tthrow \"setEnabled isn't implemented for this field type\";\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Creates a RatingIndicator control.\n\t * @param dataModelPath\n\t * @returns RatingIndicator\n\t */\n\tcreateRatingIndicator(dataModelPath: DataModelObjectPath<DataPointType>): RatingIndicator {\n\t\tconst dataPointTarget = dataModelPath.targetObject;\n\t\tconst targetValue = this.getTargetValueBinding(dataModelPath);\n\n\t\tconst dataPointValue = dataPointTarget?.Value || \"\";\n\t\tconst propertyType = dataPointValue?.$target?.type;\n\n\t\tlet numberOfFractionalDigits;\n\t\tif (propertyType === \"Edm.Decimal\" && dataPointTarget?.ValueFormat) {\n\t\t\tif (dataPointTarget.ValueFormat.NumberOfFractionalDigits) {\n\t\t\t\tnumberOfFractionalDigits = dataPointTarget.ValueFormat.NumberOfFractionalDigits;\n\t\t\t}\n\t\t}\n\t\tconst value = getValueFormatted(this.valueDataModelPath, dataPointValue, propertyType, numberOfFractionalDigits);\n\n\t\treturn (\n\t\t\t<RatingIndicator\n\t\t\t\tid={this.idPrefix ? generate([this.idPrefix, \"RatingIndicator-Field-display\"]) : undefined}\n\t\t\t\tmaxValue={targetValue}\n\t\t\t\tvalue={this.value ?? compileExpression(value)}\n\t\t\t\ttooltip={this.getTooltipValue(dataModelPath)}\n\t\t\t\ticonSize={this.formatOptions?.iconSize}\n\t\t\t\tclass={this.formatOptions?.showLabels ?? false ? \"sapUiTinyMarginTopBottom\" : undefined}\n\t\t\t\teditable=\"false\"\n\t\t\t\tariaLabelledBy={this.ariaLabelledBy}\n\t\t\t/>\n\t\t);\n\t}\n\n\t/**\n\t * Creates a ProgressIndicator control.\n\t * @param dataModelPath\n\t * @returns ProgressIndicator\n\t */\n\tcreateProgressIndicator(dataModelPath: DataModelObjectPath<DataPointType>): ProgressIndicator {\n\t\tconst criticalityColorExpression = dataModelPath.targetObject\n\t\t\t? buildExpressionForCriticalityColor(dataModelPath.targetObject, dataModelPath)\n\t\t\t: undefined;\n\t\tconst displayValue = buildExpressionForProgressIndicatorDisplayValue(dataModelPath);\n\t\tconst percentValue = buildExpressionForProgressIndicatorPercentValue(dataModelPath);\n\n\t\treturn (\n\t\t\t<ProgressIndicator\n\t\t\t\tid={this.idPrefix ? generate([this.idPrefix, \"ProgressIndicator-Field-display\"]) : undefined}\n\t\t\t\tdisplayValue={displayValue}\n\t\t\t\tpercentValue={percentValue}\n\t\t\t\tstate={criticalityColorExpression}\n\t\t\t\ttooltip={this.getTooltipValue(dataModelPath)}\n\t\t\t\tariaLabelledBy={this.ariaLabelledBy}\n\t\t\t/>\n\t\t);\n\t}\n\n\t/**\n\t * Creates an ObjectNumber control.\n\t * @param dataModelPath\n\t * @returns ObjectNumber\n\t */\n\tcreateObjectNumber(dataModelPath: DataModelObjectPath<DataPointType>): ObjectNumber {\n\t\tconst criticalityColorExpression = dataModelPath.targetObject\n\t\t\t? buildExpressionForCriticalityColor(dataModelPath.targetObject, dataModelPath)\n\t\t\t: undefined;\n\t\tconst emptyIndicatorMode = this.formatOptions?.showEmptyIndicator ?? false ? \"On\" : undefined;\n\t\tconst objectStatusNumber = buildFieldBindingExpression(dataModelPath, this.formatOptions, true);\n\t\tconst limitShowDecimals = this.getManifestWrapper()?.getSapFeManifestConfiguration()?.app?.showOnlyUnitDecimals === true;\n\t\tconst preserveDecimalsForCurrency =\n\t\t\tthis.getManifestWrapper()?.getSapFeManifestConfiguration()?.app?.preserveDecimalsForCurrency === true;\n\t\tconst unit =\n\t\t\tthis.formatOptions?.measureDisplayMode === \"Hidden\"\n\t\t\t\t? undefined\n\t\t\t\t: compileExpression(\n\t\t\t\t\t\tUIFormatters.getBindingForUnitOrCurrency(\n\t\t\t\t\t\t\tthis.valueDataModelPath,\n\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\tlimitShowDecimals,\n\t\t\t\t\t\t\tpreserveDecimalsForCurrency\n\t\t\t\t\t\t)\n\t\t\t\t  );\n\n\t\treturn (\n\t\t\t<ObjectNumber\n\t\t\t\tid={this.idPrefix ? generate([this.idPrefix, \"ObjectNumber-Field-display\"]) : undefined}\n\t\t\t\tstate={criticalityColorExpression}\n\t\t\t\tnumber={this.value ?? objectStatusNumber}\n\t\t\t\tunit={unit}\n\t\t\t\tvisible={this.visible}\n\t\t\t\temphasized=\"false\"\n\t\t\t\tclass={this.formatOptions?.dataPointStyle === \"large\" ? \"sapMObjectNumberLarge\" : undefined}\n\t\t\t\ttooltip={this.getTooltipValue(dataModelPath)}\n\t\t\t\temptyIndicatorMode={emptyIndicatorMode}\n\t\t\t/>\n\t\t);\n\t}\n\n\t/**\n\t * Returns the dependent.\n\t * @returns Dependent either with the QuickView or an empty string.\n\t */\n\tprivate createDependents(): MdcLink | undefined {\n\t\tif (this.hasQuickView) {\n\t\t\treturn new QuickView(\n\t\t\t\tthis.valueDataModelPath as DataModelObjectPath<Property>,\n\t\t\t\tthis.metaPath,\n\t\t\t\tthis.contextPath ?? \"\"\n\t\t\t).createContent() as MdcLink;\n\t\t}\n\t\treturn undefined;\n\t}\n\n\t/**\n\t * Creates an ObjectStatus control.\n\t * @param dataModelPath\n\t * @returns ObjectStatus\n\t */\n\tcreateObjectStatus(dataModelPath: DataModelObjectPath<DataPointType>): ObjectStatus {\n\t\tlet criticalityColorExpression = dataModelPath.targetObject\n\t\t\t? buildExpressionForCriticalityColor(dataModelPath.targetObject, dataModelPath)\n\t\t\t: undefined;\n\t\tif (criticalityColorExpression === \"None\" && this.valueDataModelPath) {\n\t\t\tcriticalityColorExpression = this.hasQuickView ? \"Information\" : \"None\";\n\t\t}\n\t\tconst emptyIndicatorMode = this.formatOptions?.showEmptyIndicator ?? false ? \"On\" : undefined;\n\t\tconst objectStatusText = buildFieldBindingExpression(dataModelPath, this.formatOptions, false);\n\t\tconst iconExpression =\n\t\t\tthis.formatOptions?.dataPointStyle === \"large\" || !dataModelPath.targetObject\n\t\t\t\t? undefined\n\t\t\t\t: buildExpressionForCriticalityIcon(dataModelPath.targetObject, dataModelPath);\n\n\t\treturn (\n\t\t\t<ObjectStatus\n\t\t\t\tid={this.idPrefix ? generate([this.idPrefix, \"ObjectStatus-Field-display\"]) : undefined}\n\t\t\t\tclass={this.formatOptions?.dataPointStyle === \"large\" ? \"sapMObjectStatusLarge sapMObjectStatusLongText\" : undefined}\n\t\t\t\ticon={iconExpression}\n\t\t\t\ttooltip={this.getTooltipValue(dataModelPath)}\n\t\t\t\tstate={criticalityColorExpression}\n\t\t\t\ttext={this.value ?? objectStatusText}\n\t\t\t\temptyIndicatorMode={emptyIndicatorMode}\n\t\t\t\tactive={this.hasQuickView}\n\t\t\t\tpress={FieldRuntimeHelper.pressLink as unknown as (oEvent: ObjectStatus$PressEvent) => void}\n\t\t\t\tariaLabelledBy={this.ariaLabelledBy}\n\t\t\t\treactiveAreaMode={this.formatOptions?.reactiveAreaMode}\n\t\t\t>\n\t\t\t\t{{\n\t\t\t\t\tdependents: this.createDependents()\n\t\t\t\t}}\n\t\t\t</ObjectStatus>\n\t\t);\n\t}\n\n\t/**\n\t * The helper method to get a possible tooltip text.\n\t * @param dataModelPath\n\t * @returns BindingToolkitExpression\n\t */\n\tprivate getTooltipValue(dataModelPath: DataModelObjectPath<DataPointType>): BindingToolkitExpression<string> | undefined {\n\t\treturn dataModelPath.targetObject?.annotations?.Common?.QuickInfo\n\t\t\t? getExpressionFromAnnotation(dataModelPath.targetObject?.annotations?.Common?.QuickInfo, getRelativePaths(dataModelPath))\n\t\t\t: undefined;\n\t}\n\n\t/**\n\t * The helper method to get a possible target value binding.\n\t * @param dataModelPath\n\t * @returns BindingToolkitExpression\n\t */\n\tprivate getTargetValueBinding(\n\t\tdataModelPath: DataModelObjectPath<DataPointType>\n\t): BindingToolkitExpression<string | number> | undefined {\n\t\treturn dataModelPath.targetObject?.TargetValue\n\t\t\t? getExpressionFromAnnotation(dataModelPath.targetObject?.TargetValue, getRelativePaths(dataModelPath))\n\t\t\t: undefined;\n\t}\n\n\tcreateContent(): ObjectStatus | ObjectNumber | RatingIndicator | ProgressIndicator | undefined {\n\t\tif (!this.dataModelPath) {\n\t\t\treturn undefined;\n\t\t}\n\t\tthis.getDataPointVisualization(this.dataModelPath);\n\t\tswitch (this.visualization) {\n\t\t\tcase \"Rating\": {\n\t\t\t\treturn this.createRatingIndicator(this.dataModelPath);\n\t\t\t}\n\t\t\tcase \"Progress\": {\n\t\t\t\treturn this.createProgressIndicator(this.dataModelPath);\n\t\t\t}\n\t\t\tcase \"ObjectNumber\": {\n\t\t\t\treturn this.createObjectNumber(this.dataModelPath);\n\t\t\t}\n\t\t\tdefault: {\n\t\t\t\treturn this.createObjectStatus(this.dataModelPath);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Retrieves the current value of the datapoint.\n\t * @returns The current value of the datapoint\n\t */\n\tgetValue(): boolean | string | undefined {\n\t\tif (this.content?.isA<ObjectStatus>(\"sap.m.ObjectStatus\")) {\n\t\t\treturn this.content.getText();\n\t\t} else if (this.content?.isA<ObjectNumber>(\"sap.m.ObjectNumber\")) {\n\t\t\treturn this.content.getNumber();\n\t\t} else if (this.content?.isA<ProgressIndicator>(\"sap.m.ProgressIndicator\")) {\n\t\t\treturn this.content.getDisplayValue();\n\t\t} else if (this.content?.isA<RatingIndicator>(\"sap.m.RatingIndicator\")) {\n\t\t\treturn this.content.getValue().toString();\n\t\t} else {\n\t\t\tthis.getProperty(\"value\");\n\t\t}\n\t}\n\n\t/**\n\t * Sets the current value of the field.\n\t * @param value\n\t * @returns The current field reference\n\t */\n\tsetValue(value: boolean | string | number | undefined): Control {\n\t\tthis.setProperty(\"value\", value);\n\t\tif (this.content?.isA<ObjectStatus>(\"sap.m.ObjectStatus\")) {\n\t\t\tthis.content.setText(value as string | undefined);\n\t\t} else if (this.content?.isA<ObjectNumber>(\"sap.m.ObjectNumber\")) {\n\t\t\tthis.content.setNumber(value as string);\n\t\t} else if (this.content?.isA<ProgressIndicator>(\"sap.m.ProgressIndicator\")) {\n\t\t\tLog.error(\"setValue isn't implemented for this field type yet\");\n\t\t} else if (this.content?.isA<RatingIndicator>(\"sap.m.RatingIndicator\")) {\n\t\t\tthis.content.setValue(value as number);\n\t\t}\n\t\treturn this;\n\t}\n}\n"],"mappings":"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","ignoreList":[]}