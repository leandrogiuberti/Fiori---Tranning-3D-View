{"version":3,"names":["setUpField","field","controlConfiguration","viewDataModel","internalModel","appComponent","isReadOnlyInitial","metaPath","contextPath","resultField","Object","defineProperty","get","value","description","change","visible","vhIdPrefix","_flexId","id","idPrefix","formatOptions","getFormatOptions","showOnlyUnitDecimals","getProperty","preserveDecimalsForCurrency","valueHelpMetaPath","computeCommonProperties","getModel","convertedMetaPath","setUpDataPointType","setUpVisibleProperties","computeIDs","dataSourcePath","getTargetObjectPath","dataModelPath","label","FieldHelper","computeLabelText","context","computeExternalID","entityType","odataMetaModel","createBindingContext","targetEntityType","fullyQualifiedName","forInlineCreationRows","hasPropertyInsertRestrictions","computeEditMode","computeCollaborationProperties","computeEditableExpressions","setUpFormatOptions","dataModelPathExternalID","setUpDisplayStyle","setUpEditStyle","valueState","setUpValueState","editStyle","editStylePlaceholder","setInputWithValuehelpPlaceholder","computeFileUploaderProperties","computeInlineEditProperties","aDisplayStylesWithoutPropText","displayStyle","includes","targetObject","text","FieldTemplating","getTextBinding","showEmptyIndicator","emptyIndicatorMode","String","undefined","isProperty","annotations","UI","DataFieldDefault","computedEditMode","compileExpression","ifElse","equal","readOnly","eventHandlers","liveChange","validateFieldGroup","handleTypeMissmatch","handleFileSizeExceed","handleUploadComplete","uploadStream","removeStream","handleOpenUploader","handleCloseUploader","openExternalLink","onFocusOut","linkPressed","displayAggregationDetails","onDataFieldWithNavigationPath","showCollaborationEditUser","onDataFieldActionButton","onDataFieldWithIBN","_exports","computedEditableExpression","UIFormatters","getEditableExpressionAsObject","propertyForFieldControl","ModelHelper","isCollaborationDraftSupported","editMode","FieldEditMode","Display","collaborationEnabled","collaborationExpression","getCollaborationExpression","CollaborationFormatters","hasCollaborationActivity","editableExpression","and","not","constant","IsInactive","editModeAsObject","metaModel","MetaModelConverter","convertMetaModelContext","metaPathContext","getInvolvedDataModelObjects","getDataModelObjectPathForValue","property","Value","requiredPropertiesFromInsertRestrictions","getRequiredPropertiesFromInsertRestrictions","contextPathContext","getPath","replaceAll","requiredPropertiesFromUpdateRestrictions","getRequiredPropertiesFromUpdateRestrictions","oRequiredProperties","enabledExpression","getEnabledExpression","requiredExpression","getRequiredExpression","measureReadOnly","measureDisplayMode","getEditMode","externalIDProperty","getAssociatedExternalIdProperty","type","isDataField","$target","externalIdPropertyPath","getAssociatedExternalIdPropertyPath","externalIdContext","convertedMetaPathExternalID","computeFieldGroupIds","typesForCollaborationFocusManagement","sideEffectService","getSideEffectsService","fieldGroupIds","mainPropertyRelativePath","getContextRelativeTargetObjectPath","collaborationFieldGroup","CollaborationFieldGroupPrefix","push","length","_apiId","getContentId","editStyleId","generate","fieldMode","displayStyleId","textAlignMode","displayMode","textLinesEdit","textMaxLines","textMaxCharactersDisplay","textExpandBehaviorDisplay","textMaxLength","fieldEditStyle","radioButtonsHorizontalLayout","showTime","showTimezone","showDate","getObjectIdentifierText","fieldFormatOptions","propertyDataModelObjectPath","propertyBindingExpression","pathInModel","targetDisplayMode","propertyDefinition","isPropertyPathExpression","commonText","Common","Text","formatWithTypeInformation","relativeLocation","getRelativePaths","getExpressionFromAnnotation","formatResult","valueFormatters","formatToKeepWhitespace","getOverrides","props","controlConfig","keys","forEach","configKey","manageQuickViewForDisplayStyle","hasSemanticObjects","hasQuickView","quickViewType","foundSemanticObjects","manageSemanticObjectsForCurrentUser","semanticObject","hasReachableStaticSemanticObject","dynamicSemanticObjects","propertyOrNavigationPropertyHasSemanticObject","getPropertyWithSemanticObject","fieldContainerType","propertyPath","name","recommendationValue","recommendationDescription","placeholderExp","additionalValueFormatter","formatPlaceholder","dataField","dataPointType","term","$Type","getDecimalPadding","manifest","getManifestEntry","Measures","ISOCurrency","macros","table","currency","decimalPadding","unitOfMeasure","hasUnitOrCurrency","Unit","hasValidAnalyticalCurrencyOrUnit","textFromValueList","IsImage","IsImageURL","InputMask","Masked","isFieldGroupItem","setUpDraftIndicator","Target","isUsedInNavigationWithQuickViewFacets","isSemanticKey","semanticKeyStyle","setUpObjectIdentifierTitleAndText","showErrorIndicator","contextLocation","_type","fieldGroupDraftIndicatorPropertyPath","situationsIndicatorPropertyPath","Criticality","isCurrencyOrUnitAligned","FieldStructureHelper","valueAsStringBindingExpression","getValueBinding","unitBindingExpression","getBindingForUnitOrCurrency","Communication","IsEmailAddress","IsPhoneNumber","MultiLineText","hasSituationsIndicator","SituationsIndicator","getSituationsNavigationProperty","targetEntitySet","DraftRoot","hasDraftIndicator","draftIndicatorVisible","getDraftIndicatorVisibleBinding","addDraftIndicator","setEditStyleProperties","semanticStyle","identifierTitle","getTitleBindingExpression","getTextBindingExpression","splitTitleOnTwoLines","identifierText","overrideProps","getDisplayMode","retrieveTextFromValueList","isRetrieveTextFromValueListEnabled","hasEntityTextArrangement","TextArrangement","valueStateExp","propertyPathInModel","textPath","formatValueState","getVisibleExpression","displayVisible","macroId","fileRelativePropertyPath","fileNameAnnotation","Core","ContentDisposition","Filename","isPathAnnotationExpression","fileNameDataModelPath","enhanceDataModelPath","path","fileFilenameExpression","inlineEditEnabled","hasInlineEdit","transformRecursively","expr","modelName"],"sourceRoot":".","sources":["FieldStructureHelper.ts"],"sourcesContent":["import type { EntitySet, Property, PropertyPath, ServiceObject } from \"@sap-ux/vocabularies-types\";\nimport type {\n\tDataFieldAbstractTypes,\n\tDataFieldForAnnotation,\n\tDataFieldTypes,\n\tDataPoint,\n\tDataPointTypeTypes\n} from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport { UIAnnotationTerms, UIAnnotationTypes } from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport type {\n\tBindingToolkitExpression,\n\tCompiledBindingToolkitExpression,\n\tExpressionOrPrimitive,\n\tPathInModelExpression\n} from \"sap/fe/base/BindingToolkit\";\nimport {\n\tand,\n\tcompileExpression,\n\tconstant,\n\tequal,\n\tformatResult,\n\tformatWithTypeInformation,\n\tgetExpressionFromAnnotation,\n\tifElse,\n\tnot,\n\tpathInModel,\n\ttransformRecursively\n} from \"sap/fe/base/BindingToolkit\";\nimport type { PropertiesOf } from \"sap/fe/base/ClassSupport\";\nimport type AppComponent from \"sap/fe/core/AppComponent\";\nimport type { TemplateProcessorSettings } from \"sap/fe/core/buildingBlocks/templating/BuildingBlockTemplateProcessor\";\nimport { CollaborationFieldGroupPrefix } from \"sap/fe/core/controllerextensions/collaboration/CollaborationCommon\";\nimport * as MetaModelConverter from \"sap/fe/core/converters/MetaModelConverter\";\nimport { isDataField } from \"sap/fe/core/converters/annotations/DataField\";\nimport * as CollaborationFormatters from \"sap/fe/core/formatters/CollaborationFormatter\";\nimport valueFormatters from \"sap/fe/core/formatters/ValueFormatter\";\nimport { UI } from \"sap/fe/core/helpers/BindingHelper\";\nimport {\n\tgetRequiredPropertiesFromInsertRestrictions,\n\tgetRequiredPropertiesFromUpdateRestrictions\n} from \"sap/fe/core/helpers/MetaModelFunction\";\nimport ModelHelper from \"sap/fe/core/helpers/ModelHelper\";\nimport { generate } from \"sap/fe/core/helpers/StableIdHelper\";\nimport { getTitleBindingExpression } from \"sap/fe/core/helpers/TitleHelper\";\nimport { isPathAnnotationExpression, isProperty, isPropertyPathExpression } from \"sap/fe/core/helpers/TypeGuards\";\nimport type { DataModelObjectPath } from \"sap/fe/core/templating/DataModelPathHelper\";\nimport {\n\tenhanceDataModelPath,\n\tgetContextRelativeTargetObjectPath,\n\tgetRelativePaths,\n\tgetTargetObjectPath\n} from \"sap/fe/core/templating/DataModelPathHelper\";\nimport { getAssociatedExternalIdProperty, getAssociatedExternalIdPropertyPath, isSemanticKey } from \"sap/fe/core/templating/PropertyHelper\";\nimport { getPropertyWithSemanticObject, manageSemanticObjectsForCurrentUser } from \"sap/fe/core/templating/SemanticObjectHelper\";\nimport type { DisplayMode } from \"sap/fe/core/templating/UIFormatters\";\nimport * as UIFormatters from \"sap/fe/core/templating/UIFormatters\";\nimport type { InputMaskFormatOptions } from \"sap/fe/core/type/InputMask\";\nimport * as FieldTemplating from \"sap/fe/macros/field/FieldTemplating\";\nimport {\n\tgetDataModelObjectPathForValue,\n\tgetDraftIndicatorVisibleBinding,\n\tgetTextBindingExpression,\n\tgetValueBinding,\n\tgetVisibleExpression,\n\thasPropertyInsertRestrictions,\n\tisRetrieveTextFromValueListEnabled,\n\tisUsedInNavigationWithQuickViewFacets,\n\tsetEditStyleProperties\n} from \"sap/fe/macros/field/FieldTemplating\";\nimport additionalValueFormatter from \"sap/fe/macros/internal/valuehelp/AdditionalValueFormatter\";\nimport SituationsIndicator from \"sap/fe/macros/situations/SituationsIndicator\";\nimport FieldEditMode from \"sap/ui/mdc/enums/FieldEditMode\";\nimport type Context from \"sap/ui/model/Context\";\nimport type JSONModel from \"sap/ui/model/json/JSONModel\";\nimport type ODataMetaModel from \"sap/ui/model/odata/v4/ODataMetaModel\";\nimport type { EventHandler } from \"types/extension_types\";\nimport type { MetaModelType } from \"types/metamodel_types\";\nimport type Field from \"../../Field\";\nimport type FieldFormatOptions from \"../../field/FieldFormatOptions\";\nimport FieldHelper from \"../../field/FieldHelper\";\nimport type { DisplayStyle as DisplayStyleType, EditStyle as EditStyleType, FieldProperties } from \"./FieldStyles\";\n\nexport type InputFieldBlockProperties = Omit<PropertiesOf<Field>, \"readOnly\" | \"semanticObject\"> & {\n\tisPublicField?: boolean; //\n\t//add events from Field - 'PropertiesOf' does not include them\n\tchange?: EventHandler;\n\tliveChange?: EventHandler;\n\tonLiveChange?: string;\n\treadOnly?: BindingToolkitExpression<boolean>;\n\tsemanticObject?: CompiledBindingToolkitExpression;\n};\nexport type FieldBlockProperties = {\n\t_controlConfiguration: TemplateProcessorSettings;\n\t_settings: TemplateProcessorSettings;\n\tisDynamicInstantiation?: boolean;\n\tchange: string | undefined | EventHandler;\n\tmetaPath: Context;\n\tcontextPath: Context;\n\tisPublicField: boolean;\n\tvisible?: boolean | CompiledBindingToolkitExpression;\n\tliveChange: EventHandler;\n\tonLiveChange?: string | EventHandler;\n\t//-----\n\tformatOptions: FieldFormatOptions;\n\tproperty: Property;\n\tdataModelPath: DataModelObjectPath<Property>;\n\tvalueAsStringBindingExpression?: CompiledBindingToolkitExpression;\n\tunitBindingExpression?: string;\n\tdisplayVisible?: string | boolean;\n\thasValidAnalyticalCurrencyOrUnit?: CompiledBindingToolkitExpression;\n\tconvertedMetaPath: DataFieldAbstractTypes | DataPointTypeTypes;\n\tclass?: string;\n\tariaLabelledBy?: string[];\n\thasUnitOrCurrency?: boolean;\n\ttext?: BindingToolkitExpression<string> | CompiledBindingToolkitExpression;\n\tlabel?: BindingToolkitExpression<string> | CompiledBindingToolkitExpression;\n\temptyIndicatorMode?: string;\n\teditableExpression: string | CompiledBindingToolkitExpression;\n\tfieldGroupIds?: string[];\n\tdisplayStyleId?: string;\n\ttextFromValueList?: CompiledBindingToolkitExpression;\n\thasQuickView: boolean;\n\tidentifierTitle?: CompiledBindingToolkitExpression;\n\tidentifierText?: CompiledBindingToolkitExpression;\n\thasSituationsIndicator?: boolean;\n\tsituationsIndicatorPropertyPath: string;\n\tshowErrorIndicator: boolean;\n\tdynamicSemanticObjects?: BindingToolkitExpression<string>[];\n\tcollaborationExpression: BindingToolkitExpression<boolean>;\n\tdataSourcePath?: string;\n\teditStyleId?: string;\n\tenabledExpression: string | CompiledBindingToolkitExpression;\n\trequiredExpression?: string;\n\teditModeAsObject: CompiledBindingToolkitExpression | BindingToolkitExpression<string>;\n\tcomputedEditMode: FieldEditMode | CompiledBindingToolkitExpression;\n\tvalueBindingExpression?: CompiledBindingToolkitExpression;\n\tshowTimezone?: boolean;\n\tminDateExpression: BindingToolkitExpression<unknown> | undefined | CompiledBindingToolkitExpression;\n\tmaxDateExpression: BindingToolkitExpression<unknown> | undefined | CompiledBindingToolkitExpression;\n\teditStylePlaceholder?: string;\n\tstaticDescription?: string;\n\tvalueState?: CompiledBindingToolkitExpression;\n\tfileFilenameExpression: string;\n\tfileRelativePropertyPath: string;\n\ttextBindingExpression?: CompiledBindingToolkitExpression;\n\tratingIndicatorTooltip?: CompiledBindingToolkitExpression;\n\tratingIndicatorTargetValue?: CompiledBindingToolkitExpression;\n\tmask?: InputMaskFormatOptions | null;\n\teditStyle?: EditStyleType | null;\n\t_apiId?: string;\n\tentityType?: Context;\n\todataMetaModel: ODataMetaModel;\n\tpropertyForFieldControl: UIFormatters.PropertyOrPath<Property>;\n\tdescriptionBindingExpression?: string;\n\tquickViewType?: \"SemanticLinks\" | \"Facets\" | \"FacetsAndSemanticLinks\";\n\tdisplayStyle?: DisplayStyleType;\n\tunitEditable?: string;\n\tstaticUnit?: string;\n\tvalueInputWidth?: string;\n\tvalueInputFieldWidth?: string;\n\tunitInputVisible?: CompiledBindingToolkitExpression;\n\tdraftIndicatorVisible?: string;\n\thasPropertyInsertRestrictions?: boolean | ExpressionOrPrimitive<boolean>;\n\taddDraftIndicator: boolean | undefined;\n\tconvertedMetaPathExternalID?: Property;\n\tdataModelPathExternalID?: DataModelObjectPath<Property | PropertyPath>;\n\tvalueHelpMetaPath?: Context;\n\tid: string;\n\tvalueHelpId: string | undefined;\n\tmetaPathContext: Context | undefined;\n\tcontextPathContext: Context | undefined;\n\tfileUploaderVisible?: CompiledBindingToolkitExpression | boolean;\n\teventHandlers: {\n\t\tchange: EventHandler;\n\t\tliveChange: EventHandler;\n\t\tvalidateFieldGroup: EventHandler;\n\t\thandleTypeMissmatch: EventHandler;\n\t\thandleFileSizeExceed: EventHandler;\n\t\thandleUploadComplete: EventHandler;\n\t\tuploadStream: EventHandler;\n\t\tremoveStream: EventHandler;\n\t\thandleOpenUploader: EventHandler;\n\t\thandleCloseUploader: EventHandler;\n\t\topenExternalLink: EventHandler;\n\t\tonFocusOut: EventHandler;\n\t\tlinkPressed: EventHandler;\n\t\tdisplayAggregationDetails: EventHandler;\n\t\tonDataFieldWithNavigationPath: EventHandler;\n\t\tonDataFieldActionButton: EventHandler;\n\t\tonDataFieldWithIBN: EventHandler;\n\t\tshowCollaborationEditUser: EventHandler;\n\t};\n} & Omit<Field, \"metaPath\" | \"contextPath\" | \"change\" | \"visible\">;\n\nexport function setUpField(\n\tfield: InputFieldBlockProperties,\n\tcontrolConfiguration: TemplateProcessorSettings,\n\tviewDataModel: JSONModel,\n\tinternalModel: JSONModel,\n\tappComponent: AppComponent,\n\tisReadOnlyInitial?: boolean,\n\tmetaPath?: Context | undefined,\n\tcontextPath?: Context | undefined\n): FieldBlockProperties {\n\tconst resultField = { ...field } as unknown as FieldBlockProperties;\n\tObject.defineProperty(resultField, \"value\", {\n\t\tget: () => {\n\t\t\treturn field.value;\n\t\t}\n\t});\n\tObject.defineProperty(resultField, \"description\", {\n\t\tget: () => {\n\t\t\treturn field.description;\n\t\t}\n\t});\n\n\tresultField.change = field.change;\n\tresultField.metaPath = (metaPath ? metaPath : field.metaPath) as Context;\n\tresultField.contextPath = (contextPath ? contextPath : field.contextPath) as Context;\n\tresultField.visible = field.visible;\n\n\t//this currently works only for the field\n\tif (!resultField.vhIdPrefix) {\n\t\tresultField.vhIdPrefix = \"FieldValueHelp\";\n\t\tresultField._flexId = field.id;\n\t\tif (!resultField.idPrefix) {\n\t\t\tresultField.idPrefix = field.id;\n\t\t}\n\t}\n\n\tresultField.formatOptions ??= {} as FieldFormatOptions;\n\tresultField.formatOptions = getFormatOptions(resultField);\n\tresultField.formatOptions.showOnlyUnitDecimals =\n\t\tviewDataModel?.getProperty(\"/sapFeManifestConfiguration/app/showOnlyUnitDecimals\") === true;\n\tresultField.formatOptions.preserveDecimalsForCurrency =\n\t\tviewDataModel?.getProperty(\"/sapFeManifestConfiguration/app/preserveDecimalsForCurrency\") === true;\n\n\tresultField.valueHelpMetaPath = metaPath ? metaPath : resultField.metaPath;\n\tcomputeCommonProperties(resultField, resultField.valueHelpMetaPath?.getModel());\n\tresultField.convertedMetaPath = setUpDataPointType(resultField.convertedMetaPath);\n\tsetUpVisibleProperties(resultField);\n\tcomputeIDs(resultField);\n\tresultField.dataSourcePath = getTargetObjectPath(resultField.dataModelPath);\n\tresultField.label = FieldHelper.computeLabelText(field as unknown as MetaModelType<DataFieldTypes>, {\n\t\tcontext: resultField.metaPath\n\t});\n\n\t/* EXTERNALID */\n\tcomputeExternalID(resultField);\n\tresultField.entityType = resultField.odataMetaModel.createBindingContext(\n\t\t`/${resultField.dataModelPath.targetEntityType.fullyQualifiedName}`\n\t);\n\tif (resultField.formatOptions?.forInlineCreationRows === true) {\n\t\tresultField.hasPropertyInsertRestrictions = hasPropertyInsertRestrictions(resultField.dataModelPath);\n\t}\n\tcomputeEditMode(resultField);\n\tcomputeCollaborationProperties(resultField);\n\tcomputeEditableExpressions(resultField);\n\tresultField.formatOptions = resultField.formatOptions ? resultField.formatOptions : ({} as FieldFormatOptions);\n\tsetUpFormatOptions(\n\t\tresultField,\n\t\t(resultField.dataModelPathExternalID as DataModelObjectPath<Property>) || resultField.dataModelPath,\n\t\tcontrolConfiguration,\n\t\tviewDataModel\n\t);\n\tsetUpDisplayStyle(resultField, resultField.convertedMetaPath, resultField.dataModelPath, internalModel, appComponent);\n\tsetUpEditStyle(resultField, appComponent);\n\n\tresultField.valueState = setUpValueState(resultField);\n\tif (resultField.editStyle === \"InputWithValueHelp\") {\n\t\tresultField.editStylePlaceholder = setInputWithValuehelpPlaceholder(resultField);\n\t}\n\n\tcomputeFileUploaderProperties(resultField);\n\n\tcomputeInlineEditProperties(resultField, viewDataModel);\n\n\t// ---------------------------------------- compute bindings----------------------------------------------------\n\tconst aDisplayStylesWithoutPropText = [\"Avatar\", \"AmountWithCurrency\"];\n\tif (\n\t\tresultField.displayStyle &&\n\t\t!aDisplayStylesWithoutPropText.includes(resultField.displayStyle) &&\n\t\tresultField.dataModelPath.targetObject\n\t) {\n\t\tresultField.text =\n\t\t\tresultField.text ??\n\t\t\tresultField.value ??\n\t\t\tFieldTemplating.getTextBinding(\n\t\t\t\t(resultField.dataModelPathExternalID as DataModelObjectPath<Property>) || resultField.dataModelPath,\n\t\t\t\tresultField.formatOptions\n\t\t\t);\n\t} else {\n\t\tresultField.text = \"\";\n\t}\n\n\tif (resultField.formatOptions.showEmptyIndicator) {\n\t\tresultField.emptyIndicatorMode = String(resultField.formatOptions.showEmptyIndicator) === \"true\" ? \"On\" : undefined;\n\t} else {\n\t\tresultField.emptyIndicatorMode = undefined;\n\t}\n\n\t// If the target is a property with a DataFieldDefault, use this as data field\n\tif (isProperty(resultField.convertedMetaPath) && resultField.convertedMetaPath.annotations?.UI?.DataFieldDefault !== undefined) {\n\t\tresultField.metaPath = resultField.odataMetaModel.createBindingContext(\n\t\t\t`@${UIAnnotationTerms.DataFieldDefault}`,\n\t\t\tmetaPath ? metaPath : resultField.metaPath\n\t\t);\n\t}\n\n\tif (!isReadOnlyInitial) {\n\t\tresultField.computedEditMode = compileExpression(ifElse(equal(resultField.readOnly, true), \"Display\", \"Editable\"));\n\t}\n\n\tresultField.eventHandlers = {\n\t\tchange: (): void => {},\n\t\tliveChange: (): void => {},\n\t\tvalidateFieldGroup: (): void => {},\n\t\thandleTypeMissmatch: (): void => {},\n\t\thandleFileSizeExceed: (): void => {},\n\t\thandleUploadComplete: (): void => {},\n\t\tuploadStream: (): void => {},\n\t\tremoveStream: (): void => {},\n\t\thandleOpenUploader: (): void => {},\n\t\thandleCloseUploader: (): void => {},\n\t\topenExternalLink: (): void => {},\n\t\tonFocusOut: (): void => {},\n\t\tlinkPressed: (): void => {},\n\t\tdisplayAggregationDetails: (): void => {},\n\t\tonDataFieldWithNavigationPath: (): void => {},\n\t\tshowCollaborationEditUser: (): void => {},\n\t\tonDataFieldActionButton: (): void => {},\n\t\tonDataFieldWithIBN: (): void => {}\n\t};\n\n\treturn resultField;\n}\n\n/**\n * This helper computes the properties that are needed for the collaboration avatar.\n * @param field Reference to the current field instance\n */\nexport function computeCollaborationProperties(field: FieldBlockProperties): void {\n\tconst computedEditableExpression = UIFormatters.getEditableExpressionAsObject(\n\t\tfield.propertyForFieldControl,\n\t\tfield.convertedMetaPath,\n\t\tfield.dataModelPath\n\t);\n\tif (ModelHelper.isCollaborationDraftSupported(field.odataMetaModel) && field.editMode !== FieldEditMode.Display) {\n\t\tconst collaborationEnabled = true;\n\t\t// Expressions needed for Collaboration Visualization\n\t\tconst collaborationExpression = UIFormatters.getCollaborationExpression(\n\t\t\tfield.dataModelPath,\n\t\t\tCollaborationFormatters.hasCollaborationActivity\n\t\t);\n\t\tconst editableExpression = compileExpression(and(computedEditableExpression, not(collaborationExpression)));\n\n\t\tconst editMode = compileExpression(\n\t\t\tifElse(\n\t\t\t\tcollaborationExpression,\n\t\t\t\tconstant(\"ReadOnly\"),\n\t\t\t\tifElse(and(UI.IsInactive, !!field.hasPropertyInsertRestrictions), \"Display\", field.editModeAsObject)\n\t\t\t)\n\t\t);\n\t\tfield.collaborationEnabled = collaborationEnabled;\n\t\tfield.collaborationExpression = collaborationExpression;\n\t\tfield.editableExpression = editableExpression;\n\t\tfield.computedEditMode = editMode;\n\t} else {\n\t\tfield.editableExpression = compileExpression(computedEditableExpression);\n\t}\n}\n\n/**\n * This helper sets the common properties convertedMetaPath, dataModelPath\n * and property that can be reused in the individual templates if required.\n * @param field Reference to the current field instance\n * @param metaModel\n */\nexport function computeCommonProperties(field: FieldBlockProperties, metaModel: ODataMetaModel): void {\n\tfield.convertedMetaPath = MetaModelConverter.convertMetaModelContext(field.metaPathContext ? field.metaPathContext : field.metaPath) as\n\t\t| DataFieldAbstractTypes\n\t\t| DataPointTypeTypes;\n\n\tlet dataModelPath = MetaModelConverter.getInvolvedDataModelObjects<DataFieldAbstractTypes | DataPointTypeTypes | Property>(\n\t\tfield.metaPathContext ? field.metaPathContext : field.metaPath,\n\t\tfield.contextPath\n\t);\n\tdataModelPath =\n\t\tgetDataModelObjectPathForValue(dataModelPath as DataModelObjectPath<DataFieldAbstractTypes | DataPointTypeTypes>) || dataModelPath;\n\tfield.dataModelPath = dataModelPath as DataModelObjectPath<Property>;\n\tfield.property = dataModelPath.targetObject as Property;\n\tfield.odataMetaModel = metaModel;\n\tfield.propertyForFieldControl = (dataModelPath?.targetObject as unknown as DataFieldTypes)?.Value\n\t\t? (dataModelPath?.targetObject as unknown as DataFieldTypes).Value\n\t\t: dataModelPath?.targetObject;\n}\n\n/**\n * Helper to computes some of the expression for further processing.\n * @param field Reference to the current field instance\n */\nexport function computeEditableExpressions(field: FieldBlockProperties): void {\n\tconst requiredPropertiesFromInsertRestrictions = getRequiredPropertiesFromInsertRestrictions(\n\t\t(field.contextPathContext ? field.contextPathContext : field.contextPath)\n\t\t\t?.getPath()\n\t\t\t.replaceAll(\"/$NavigationPropertyBinding/\", \"/\"),\n\t\tfield.odataMetaModel\n\t);\n\tconst requiredPropertiesFromUpdateRestrictions = getRequiredPropertiesFromUpdateRestrictions(\n\t\t(field.contextPathContext ? field.contextPathContext : field.contextPath)\n\t\t\t?.getPath()\n\t\t\t.replaceAll(\"/$NavigationPropertyBinding/\", \"/\"),\n\t\tfield.odataMetaModel\n\t);\n\tconst oRequiredProperties = {\n\t\trequiredPropertiesFromInsertRestrictions: requiredPropertiesFromInsertRestrictions,\n\t\trequiredPropertiesFromUpdateRestrictions: requiredPropertiesFromUpdateRestrictions\n\t};\n\n\tconst enabledExpression = UIFormatters.getEnabledExpression(\n\t\tfield.propertyForFieldControl,\n\t\tfield.convertedMetaPath,\n\t\tfalse,\n\t\tfield.dataModelPath\n\t) as CompiledBindingToolkitExpression;\n\tconst requiredExpression = UIFormatters.getRequiredExpression(\n\t\tfield.propertyForFieldControl,\n\t\tfield.convertedMetaPath,\n\t\tfalse,\n\t\tfalse,\n\t\toRequiredProperties,\n\t\tfield.dataModelPath\n\t) as CompiledBindingToolkitExpression;\n\n\tfield.enabledExpression = enabledExpression;\n\tfield.requiredExpression = requiredExpression;\n}\n\nexport function computeEditMode(field: FieldBlockProperties): void {\n\tif (field.editMode !== undefined && field.editMode !== null) {\n\t\t// Even if it provided as a string it's a valid part of a binding expression that can be later combined into something else.\n\t\tfield.editModeAsObject = field.editMode;\n\t} else {\n\t\tconst measureReadOnly = field.formatOptions?.measureDisplayMode ? field.formatOptions.measureDisplayMode === \"ReadOnly\" : false;\n\n\t\tfield.editModeAsObject = UIFormatters.getEditMode(\n\t\t\tfield.propertyForFieldControl,\n\t\t\tfield.dataModelPath,\n\t\t\tmeasureReadOnly,\n\t\t\ttrue,\n\t\t\tfield.convertedMetaPath\n\t\t);\n\t\tfield.computedEditMode = compileExpression(\n\t\t\tifElse(and(UI.IsInactive, !!field.hasPropertyInsertRestrictions), \"Display\", field.editModeAsObject)\n\t\t);\n\t}\n}\n\nexport function computeExternalID(field: FieldBlockProperties): void {\n\tconst externalIDProperty = getAssociatedExternalIdProperty(field.property);\n\n\tif (externalIDProperty) {\n\t\tif (field.property) field.property.type = externalIDProperty.type;\n\t\tif (isDataField(field.convertedMetaPath)) {\n\t\t\tfield.convertedMetaPath.Value.$target.type = externalIDProperty.type;\n\t\t}\n\t\tconst externalIdPropertyPath = getAssociatedExternalIdPropertyPath(field.property);\n\t\tconst externalIdContext = field.metaPath\n\t\t\t.getModel()\n\t\t\t.createBindingContext(field.contextPath?.getPath() + \"/\" + externalIdPropertyPath, field.metaPath);\n\n\t\tfield.convertedMetaPathExternalID = MetaModelConverter.convertMetaModelContext(externalIdContext) as Property;\n\n\t\tlet dataModelPath: DataModelObjectPath<Property> = MetaModelConverter.getInvolvedDataModelObjects(\n\t\t\texternalIdContext as Context,\n\t\t\tfield.contextPath\n\t\t);\n\t\tdataModelPath = getDataModelObjectPathForValue(dataModelPath as DataModelObjectPath<DataFieldAbstractTypes>) || dataModelPath;\n\t\tfield.dataModelPathExternalID = dataModelPath;\n\t}\n}\n\n/**\n * Calculate the fieldGroupIds for an Input or other edit control.\n * @param field\n * @param appComponent\n * @returns The fieldGroupIds\n */\nfunction computeFieldGroupIds(field: FieldBlockProperties, appComponent?: AppComponent): string[] | undefined {\n\tconst typesForCollaborationFocusManagement = [\n\t\t\"InputWithValueHelp\",\n\t\t\"TextArea\",\n\t\t\"DatePicker\",\n\t\t\"TimePicker\",\n\t\t\"DateTimePicker\",\n\t\t\"InputWithUnit\",\n\t\t\"Input\",\n\t\t\"InputMask\",\n\t\t\"Masked\"\n\t];\n\n\tif (!appComponent) {\n\t\t//for ValueHelp / Mass edit Templating the appComponent is not passed to the templating\n\t\treturn;\n\t}\n\tconst sideEffectService = appComponent.getSideEffectsService();\n\tconst fieldGroupIds = sideEffectService.computeFieldGroupIds(\n\t\tfield.dataModelPath.targetEntityType?.fullyQualifiedName ?? \"\",\n\t\tfield.dataModelPath.targetObject?.fullyQualifiedName ?? \"\"\n\t);\n\n\tfield.mainPropertyRelativePath = isProperty(field.dataModelPath.targetObject)\n\t\t? getContextRelativeTargetObjectPath(field.dataModelPath)\n\t\t: undefined;\n\n\tif (field.collaborationEnabled && typesForCollaborationFocusManagement.includes(field.editStyle || \"\")) {\n\t\tconst collaborationFieldGroup = `${CollaborationFieldGroupPrefix}${field.dataSourcePath}`;\n\t\tfieldGroupIds.push(collaborationFieldGroup);\n\t}\n\n\treturn fieldGroupIds.length ? fieldGroupIds : undefined;\n}\n\n/**\n * This helper is for the ID of the field according to several different scenarios.\n *\n * displayStyleId is used for all controls inside the field wrapper in display mode. A <sap.m.text> control would get this ID. An example is: ApplicationContext::Field-display.\n * editStyleId is used for all controls inside the field wrapper in edit mode. A <sap.ui.mdc.field> control would get this ID. An example is: ApplicationContext::Field-edit.\n *\n * If no wrapper exists the wrappers ID will be propagated to the first control displayed, A <sap.m.text> control would get this ID. An example is: ApplicationContext::Field-content.\n * @param field Reference to the current field instance\n */\nexport function computeIDs(field: Partial<FieldBlockProperties>): void {\n\tif (field._flexId && !field._apiId) {\n\t\tfield._apiId = field._flexId;\n\t\tfield._flexId = getContentId(field._flexId);\n\t}\n\n\tif (field.idPrefix) {\n\t\tfield.editStyleId = generate([field.idPrefix, \"Field-edit\"]);\n\t}\n\t//NoWrapperId scenario is for the LR table.\n\tif (field.formatOptions?.fieldMode === \"nowrapper\" && field.editMode === \"Display\") {\n\t\tif (field._flexId) {\n\t\t\tfield.displayStyleId = field._flexId;\n\t\t} else {\n\t\t\tfield.displayStyleId = field.idPrefix ? generate([field.idPrefix, \"Field-content\"]) : undefined;\n\t\t}\n\t} else if (field.idPrefix) {\n\t\tfield.displayStyleId = generate([field.idPrefix, \"Field-display\"]);\n\t}\n}\n\n/**\n * Sets the internal formatOptions for the building block.\n * @param field\n * @returns A string with the internal formatOptions for the building block\n */\nexport function getFormatOptions(field: FieldBlockProperties): FieldFormatOptions {\n\treturn {\n\t\t...field.formatOptions,\n\t\ttextAlignMode: field.formatOptions.textAlignMode ?? \"Form\",\n\t\tshowEmptyIndicator: field.formatOptions.showEmptyIndicator ?? true,\n\t\tdisplayMode: field.formatOptions.displayMode as DisplayMode,\n\t\tmeasureDisplayMode: field.formatOptions.measureDisplayMode,\n\t\ttextLinesEdit: field.formatOptions.textLinesEdit,\n\t\ttextMaxLines: field.formatOptions.textMaxLines,\n\t\ttextMaxCharactersDisplay: field.formatOptions.textMaxCharactersDisplay,\n\t\ttextExpandBehaviorDisplay: field.formatOptions.textExpandBehaviorDisplay,\n\t\ttextMaxLength: field.formatOptions.textMaxLength,\n\t\tfieldEditStyle: field.formatOptions.fieldEditStyle,\n\t\tradioButtonsHorizontalLayout: field.formatOptions.radioButtonsHorizontalLayout,\n\t\tshowTime: field.formatOptions.showTime,\n\t\tshowTimezone: field.formatOptions.showTimezone,\n\t\tshowDate: field.formatOptions.showDate\n\t} as FieldFormatOptions;\n}\n\nfunction getObjectIdentifierText(\n\tfieldFormatOptions: FieldFormatOptions,\n\tpropertyDataModelObjectPath: DataModelObjectPath<Property | PropertyPath>\n): CompiledBindingToolkitExpression {\n\tlet propertyBindingExpression: BindingToolkitExpression<string> = pathInModel(\n\t\tgetContextRelativeTargetObjectPath(propertyDataModelObjectPath)\n\t);\n\tconst targetDisplayMode = fieldFormatOptions?.displayMode;\n\tconst propertyDefinition = isPropertyPathExpression(propertyDataModelObjectPath.targetObject)\n\t\t? (propertyDataModelObjectPath.targetObject.$target as Property)\n\t\t: (propertyDataModelObjectPath.targetObject as Property);\n\n\tconst commonText = propertyDefinition.annotations?.Common?.Text;\n\tif (commonText === undefined) {\n\t\treturn undefined;\n\t}\n\tpropertyBindingExpression = formatWithTypeInformation(propertyDefinition, propertyBindingExpression);\n\n\tswitch (targetDisplayMode) {\n\t\tcase \"ValueDescription\":\n\t\t\tconst relativeLocation = getRelativePaths(propertyDataModelObjectPath);\n\t\t\treturn compileExpression(getExpressionFromAnnotation(commonText, relativeLocation));\n\t\tcase \"DescriptionValue\":\n\t\t\treturn compileExpression(formatResult([propertyBindingExpression], valueFormatters.formatToKeepWhitespace));\n\t\tdefault:\n\t\t\treturn undefined;\n\t}\n}\n\nfunction getOverrides(controlConfiguration: TemplateProcessorSettings, id: string): FieldProperties {\n\t/*\n\t\tQualms: We need to use this TemplateProcessorSettings type to be able to iterate\n\t\tover the properties later on and cast it afterwards as a field property type\n\t*/\n\tconst props = {} as TemplateProcessorSettings;\n\n\tif (controlConfiguration) {\n\t\tconst controlConfig = controlConfiguration[id] as TemplateProcessorSettings;\n\t\tif (controlConfig) {\n\t\t\tObject.keys(controlConfig).forEach(function (configKey) {\n\t\t\t\tprops[configKey] = controlConfig[configKey];\n\t\t\t});\n\t\t}\n\t}\n\treturn props as unknown as FieldProperties;\n}\n\n/**\n * Prepare the display style of the field in case of semantic objects or quickview facets.\n * @param field The field\n * @param internalModel\n * @param dataModelPath The DataModelObjectPath of the property\n * @param hasSemanticObjects\n * @param hasQuickView\n */\nfunction manageQuickViewForDisplayStyle(\n\tfield: FieldBlockProperties,\n\tinternalModel: JSONModel,\n\tdataModelPath: DataModelObjectPath<Property>,\n\thasSemanticObjects: boolean,\n\thasQuickView: boolean\n): void {\n\tif (hasQuickView) {\n\t\tfield.hasQuickView = true;\n\t\tfield.quickViewType = \"Facets\";\n\t}\n\tif (hasSemanticObjects) {\n\t\tconst foundSemanticObjects = manageSemanticObjectsForCurrentUser(field.semanticObject, dataModelPath, internalModel);\n\t\tif (foundSemanticObjects.hasReachableStaticSemanticObject || foundSemanticObjects.dynamicSemanticObjects.length) {\n\t\t\tfield.hasQuickView = true;\n\t\t\tfield.quickViewType = hasQuickView ? \"FacetsAndSemanticLinks\" : \"SemanticLinks\";\n\t\t\tfield.dynamicSemanticObjects =\n\t\t\t\tfoundSemanticObjects.hasReachableStaticSemanticObject !== true ? foundSemanticObjects.dynamicSemanticObjects : undefined;\n\t\t}\n\t}\n}\n\n/**\n * Check field to know if it has a semantic object.\n * @param field The field\n * @param dataModelPath The DataModelObjectPath of the property\n * @returns True if field has a semantic object\n */\nfunction propertyOrNavigationPropertyHasSemanticObject(field: FieldBlockProperties, dataModelPath: DataModelObjectPath<Property>): boolean {\n\treturn !!getPropertyWithSemanticObject(dataModelPath) || (field.semanticObject !== undefined && field.semanticObject !== \"\");\n}\n\nexport function setInputWithValuehelpPlaceholder(field: FieldBlockProperties): CompiledBindingToolkitExpression {\n\tlet targetEntityType;\n\tconst editStylePlaceholder = field.editStylePlaceholder;\n\tconst fieldContainerType = field.formatOptions.textAlignMode;\n\tif (fieldContainerType === \"Table\") {\n\t\ttargetEntityType = field.dataModelPath.targetEntityType;\n\t}\n\tconst propertyPath = field.dataModelPath.targetObject?.name;\n\tconst recommendationValue = pathInModel(`${propertyPath}@$ui5.fe.recommendations.placeholderValue`);\n\tconst recommendationDescription = pathInModel(`${propertyPath}@$ui5.fe.recommendations.placeholderDescription`);\n\tconst placeholderExp = formatResult(\n\t\t[\n\t\t\trecommendationValue,\n\t\t\trecommendationDescription,\n\t\t\tpathInModel(`/recommendationsData`, \"internal\"),\n\t\t\tpathInModel(`/currentCtxt`, \"internal\"),\n\t\t\tpathInModel(`${propertyPath}@$ui5.fe.messageType`),\n\t\t\teditStylePlaceholder,\n\t\t\tfield.formatOptions.displayMode\n\t\t],\n\t\tadditionalValueFormatter.formatPlaceholder,\n\t\ttargetEntityType\n\t);\n\n\treturn compileExpression(placeholderExp);\n}\n\nexport function setUpDataPointType(dataField: DataFieldAbstractTypes | DataPointTypeTypes): DataFieldAbstractTypes | DataPointTypeTypes {\n\t// data point annotations need not have $Type defined, so add it if missing\n\tconst dataPointType = { ...dataField };\n\tif ((dataField as unknown as DataPoint)?.term === \"com.sap.vocabularies.UI.v1.DataPoint\") {\n\t\tdataPointType.$Type = dataField.$Type || UIAnnotationTypes.DataPointType;\n\t}\n\treturn dataPointType;\n}\n\nexport function getDecimalPadding(appComponent: AppComponent | undefined, property: Property): number | undefined {\n\tconst manifest = appComponent?.getManifestEntry(\"sap.fe\");\n\treturn property?.annotations?.Measures?.ISOCurrency\n\t\t? manifest?.macros?.table?.currency?.decimalPadding ?? 5\n\t\t: manifest?.macros?.table?.unitOfMeasure?.decimalPadding ?? 3;\n}\n\nexport function setUpDisplayStyle(\n\tfield: FieldBlockProperties,\n\tdataField: DataFieldAbstractTypes | DataPointTypeTypes,\n\tdataModelPath: DataModelObjectPath<DataFieldAbstractTypes | DataPointTypeTypes | Property>,\n\tinternalModel: JSONModel,\n\tappComponent: AppComponent\n): FieldBlockProperties {\n\tconst resultField: FieldBlockProperties = field;\n\tconst property: Property = dataModelPath.targetObject as Property;\n\tif (!dataModelPath.targetObject) {\n\t\tresultField.displayStyle = \"Text\";\n\t\treturn resultField;\n\t}\n\n\tresultField.hasUnitOrCurrency =\n\t\tproperty.annotations?.Measures?.Unit !== undefined || property.annotations?.Measures?.ISOCurrency !== undefined;\n\tresultField.hasValidAnalyticalCurrencyOrUnit = UIFormatters.hasValidAnalyticalCurrencyOrUnit(\n\t\tdataModelPath as DataModelObjectPath<Property>\n\t);\n\tresultField.textFromValueList = compileExpression(\n\t\tformatResult(\n\t\t\t[\n\t\t\t\tpathInModel(getContextRelativeTargetObjectPath(dataModelPath)),\n\t\t\t\t`/${property.fullyQualifiedName}`,\n\t\t\t\tresultField.formatOptions.displayMode\n\t\t\t],\n\t\t\t\"sap.fe.macros.field.FieldRuntime.retrieveTextFromValueList\"\n\t\t)\n\t);\n\n\tif (property.annotations?.UI?.IsImage) {\n\t\tresultField.displayStyle = \"File\";\n\t\treturn resultField;\n\t}\n\tif (property.annotations?.UI?.IsImageURL) {\n\t\tresultField.displayStyle = \"Avatar\";\n\t\treturn resultField;\n\t}\n\tif (property.annotations?.UI?.InputMask) {\n\t\tresultField.displayStyle = \"Text\";\n\t\treturn resultField;\n\t}\n\tif (property.annotations?.Common?.Masked) {\n\t\tresultField.displayStyle = \"Masked\";\n\t\treturn resultField;\n\t}\n\t// For compatibility reasons, Stream will be shown within an entity instance as circle if the entity is annotated as IsNaturalPerson\n\t// and neither IsImage nor IsImageURL annotation has been used.\n\tif (property.type === \"Edm.Stream\") {\n\t\tresultField.displayStyle = \"File\";\n\t\treturn resultField;\n\t}\n\tif (resultField.formatOptions.isFieldGroupItem && property.type === \"Edm.Boolean\") {\n\t\tresultField.displayStyle = \"CheckBoxGroupItem\";\n\t\treturn resultField;\n\t}\n\tsetUpDraftIndicator(dataModelPath as DataModelObjectPath<Property>, resultField);\n\tswitch (dataField.$Type as string) {\n\t\tcase UIAnnotationTypes.DataPointType:\n\t\t\tresultField.displayStyle = \"DataPoint\";\n\t\t\treturn resultField;\n\t\tcase UIAnnotationTypes.DataFieldForAnnotation:\n\t\t\tif ((dataField as unknown as DataFieldForAnnotation).Target?.$target?.$Type === UIAnnotationTypes.DataPointType) {\n\t\t\t\tresultField.displayStyle = \"DataPoint\";\n\t\t\t\treturn resultField;\n\t\t\t} else if (\n\t\t\t\t(dataField as unknown as DataFieldForAnnotation).Target?.$target?.$Type ===\n\t\t\t\t\"com.sap.vocabularies.Communication.v1.ContactType\"\n\t\t\t) {\n\t\t\t\tresultField.displayStyle = \"Contact\";\n\t\t\t\treturn resultField;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase UIAnnotationTypes.DataFieldForAction:\n\t\tcase UIAnnotationTypes.DataFieldForIntentBasedNavigation:\n\t\t\tresultField.displayStyle = \"Button\";\n\t\t\treturn resultField;\n\t\tcase UIAnnotationTypes.DataFieldWithIntentBasedNavigation:\n\t\tcase UIAnnotationTypes.DataFieldWithNavigationPath:\n\t\tcase UIAnnotationTypes.DataFieldWithAction:\n\t\t\tresultField.displayStyle = \"Link\";\n\t\t\treturn resultField;\n\t}\n\tconst hasQuickView = isUsedInNavigationWithQuickViewFacets(dataModelPath, property);\n\tconst hasSemanticObjects = propertyOrNavigationPropertyHasSemanticObject(resultField, dataModelPath as DataModelObjectPath<Property>);\n\n\tif (isSemanticKey(property, dataModelPath) && resultField.formatOptions.semanticKeyStyle) {\n\t\tmanageQuickViewForDisplayStyle(\n\t\t\tresultField,\n\t\t\tinternalModel,\n\t\t\tdataModelPath as DataModelObjectPath<Property>,\n\t\t\thasSemanticObjects,\n\t\t\thasQuickView\n\t\t);\n\t\tsetUpObjectIdentifierTitleAndText(resultField, dataModelPath as DataModelObjectPath<Property>);\n\t\tresultField.showErrorIndicator =\n\t\t\t(dataModelPath.contextLocation as unknown as DataModelObjectPath<ServiceObject>)?.targetObject?._type ===\n\t\t\t\t\"NavigationProperty\" && !resultField.formatOptions.fieldGroupDraftIndicatorPropertyPath;\n\t\tresultField.situationsIndicatorPropertyPath = (dataModelPath.targetObject as Property).name;\n\t\tresultField.displayStyle =\n\t\t\tresultField.formatOptions.semanticKeyStyle === \"ObjectIdentifier\" ? \"ObjectIdentifier\" : \"LabelSemanticKey\";\n\t\treturn resultField;\n\t}\n\tif (dataField.Criticality) {\n\t\tmanageQuickViewForDisplayStyle(\n\t\t\tresultField,\n\t\t\tinternalModel,\n\t\t\tdataModelPath as DataModelObjectPath<Property>,\n\t\t\thasSemanticObjects,\n\t\t\thasQuickView\n\t\t);\n\t\tresultField.displayStyle = \"ObjectStatus\";\n\t\treturn resultField;\n\t}\n\tif (\n\t\t(property.annotations?.Measures?.ISOCurrency || property.annotations?.Measures?.Unit) &&\n\t\tString(resultField.formatOptions.isCurrencyOrUnitAligned) === \"true\" &&\n\t\tresultField.formatOptions.measureDisplayMode !== \"Hidden\"\n\t) {\n\t\tconst decimalPadding = FieldStructureHelper.getDecimalPadding(appComponent, property);\n\t\tresultField.valueAsStringBindingExpression = resultField.value\n\t\t\t? resultField.value\n\t\t\t: getValueBinding(\n\t\t\t\t\tdataModelPath as DataModelObjectPath<Property>,\n\t\t\t\t\tresultField.formatOptions,\n\t\t\t\t\tfalse,\n\t\t\t\t\ttrue,\n\t\t\t\t\tundefined,\n\t\t\t\t\ttrue,\n\t\t\t\t\tfalse,\n\t\t\t\t\tdecimalPadding,\n\t\t\t\t\ttrue\n\t\t\t  );\n\n\t\tresultField.unitBindingExpression = compileExpression(\n\t\t\tUIFormatters.getBindingForUnitOrCurrency(\n\t\t\t\tdataModelPath as DataModelObjectPath<Property>,\n\t\t\t\ttrue,\n\t\t\t\t!!field.formatOptions.showOnlyUnitDecimals,\n\t\t\t\t!!field.formatOptions.preserveDecimalsForCurrency\n\t\t\t)\n\t\t);\n\t\tresultField.displayStyle = \"NumberWithUnitOrCurrencyAligned\";\n\n\t\treturn resultField;\n\t}\n\tif (property.annotations?.Communication?.IsEmailAddress || property.annotations?.Communication?.IsPhoneNumber) {\n\t\tresultField.displayStyle = \"Link\";\n\t\treturn resultField;\n\t}\n\tif (property.annotations?.UI?.MultiLineText) {\n\t\tresultField.displayStyle = \"ExpandableText\";\n\t\treturn resultField;\n\t}\n\n\tif (dataField.$Type === UIAnnotationTypes.DataFieldWithUrl) {\n\t\tresultField.displayStyle = \"Link\";\n\t\treturn resultField;\n\t}\n\n\tresultField.displayStyle = \"Text\";\n\tmanageQuickViewForDisplayStyle(\n\t\tresultField,\n\t\tinternalModel,\n\t\tdataModelPath as DataModelObjectPath<Property>,\n\t\thasSemanticObjects,\n\t\thasQuickView\n\t);\n\tif (resultField.hasQuickView) {\n\t\tresultField.displayStyle = \"LinkWithQuickView\";\n\t}\n\treturn resultField;\n}\n\n/**\n * This determines whether we should add a draft indicator within the field template.\n * @param dataModelPath DataModelObjectPath pointing to the main property for the field\n * @param field\n */\nfunction setUpDraftIndicator(dataModelPath: DataModelObjectPath<Property>, field: FieldBlockProperties): void {\n\tif (isSemanticKey(dataModelPath.targetObject as Property, dataModelPath)) {\n\t\tfield.hasSituationsIndicator = SituationsIndicator.getSituationsNavigationProperty(dataModelPath.targetEntityType) !== undefined;\n\t\tif (\n\t\t\t(dataModelPath.contextLocation?.targetEntitySet as EntitySet | undefined)?.annotations?.Common?.DraftRoot &&\n\t\t\t(dataModelPath.targetEntitySet as EntitySet | undefined)?.annotations?.Common?.DraftRoot &&\n\t\t\tfield.formatOptions?.hasDraftIndicator === true\n\t\t) {\n\t\t\t// In case of a grid table or tree table hasDraftIndicator will be false since the draft\n\t\t\t// indicator needs to be rendered into a separate column\n\t\t\t// Hence we then fall back to display styles ObjectIdentifier or LabelSemanticKey instead\n\t\t\t// of the combined ID and draft indicator style\n\t\t\tfield.draftIndicatorVisible = getDraftIndicatorVisibleBinding(dataModelPath.targetObject?.name) as string;\n\t\t\tfield.addDraftIndicator = true;\n\t\t}\n\t}\n}\n\nexport function setUpEditStyle(field: FieldBlockProperties, appComponent?: AppComponent): FieldBlockProperties {\n\tconst resultField = field;\n\tsetEditStyleProperties(resultField, resultField.convertedMetaPath, resultField.dataModelPath);\n\tresultField.fieldGroupIds = computeFieldGroupIds(resultField, appComponent);\n\treturn resultField;\n}\n\nexport function setUpObjectIdentifierTitleAndText(\n\tfield: FieldBlockProperties,\n\tpropertyDataModelObjectPath: DataModelObjectPath<Property>\n): void {\n\tconst semanticStyle = field.formatOptions?.semanticKeyStyle;\n\tconst displayMode = field.formatOptions.displayMode;\n\tfield.identifierTitle = getTitleBindingExpression(\n\t\tpropertyDataModelObjectPath,\n\t\tgetTextBindingExpression,\n\t\t{ displayMode, splitTitleOnTwoLines: field.formatOptions.semanticKeyStyle === \"ObjectIdentifier\" },\n\t\tundefined,\n\t\tundefined\n\t);\n\tfield.identifierText =\n\t\tsemanticStyle === \"ObjectIdentifier\" ? getObjectIdentifierText(field.formatOptions, propertyDataModelObjectPath) : undefined;\n}\n\nexport function setUpFormatOptions(\n\tfield: FieldBlockProperties,\n\tdataModelPath: DataModelObjectPath<Property>,\n\tcontrolConfiguration: TemplateProcessorSettings,\n\tviewDataModel: JSONModel\n): void {\n\tconst overrideProps = getOverrides(controlConfiguration, (field.metaPathContext ? field.metaPathContext : field.metaPath).getPath());\n\n\tif (!field.formatOptions.displayMode) {\n\t\tfield.formatOptions.displayMode = UIFormatters.getDisplayMode(dataModelPath);\n\t}\n\tif (field.formatOptions.displayMode === \"Description\") {\n\t\tfield.valueAsStringBindingExpression = field.value\n\t\t\t? field.value\n\t\t\t: getValueBinding(dataModelPath, field.formatOptions, true, true, undefined, true);\n\t}\n\tfield.formatOptions.textLinesEdit =\n\t\t(overrideProps as unknown as FieldFormatOptions).textLinesEdit ||\n\t\t(overrideProps.formatOptions && overrideProps.formatOptions.textLinesEdit) ||\n\t\tfield.formatOptions.textLinesEdit ||\n\t\t4;\n\tfield.formatOptions.textMaxLines =\n\t\t(overrideProps as unknown as FieldFormatOptions).textMaxLines ||\n\t\t(overrideProps.formatOptions && overrideProps.formatOptions.textMaxLines) ||\n\t\tfield.formatOptions.textMaxLines;\n\n\t// Retrieve text from value list as fallback feature for missing text annotation on the property\n\tif (viewDataModel?.getProperty(\"/retrieveTextFromValueList\")) {\n\t\tfield.formatOptions.retrieveTextFromValueList = isRetrieveTextFromValueListEnabled(\n\t\t\tdataModelPath.targetObject!,\n\t\t\tfield.formatOptions\n\t\t);\n\t\tif (field.formatOptions.retrieveTextFromValueList) {\n\t\t\t// Consider TextArrangement at EntityType otherwise set default display format 'DescriptionValue'\n\t\t\tconst hasEntityTextArrangement = !!dataModelPath?.targetEntityType?.annotations?.UI?.TextArrangement;\n\t\t\tfield.formatOptions.displayMode = hasEntityTextArrangement ? field.formatOptions.displayMode : \"DescriptionValue\";\n\t\t}\n\t}\n}\n\nexport function setUpValueState(field: FieldBlockProperties): CompiledBindingToolkitExpression {\n\tlet valueStateExp;\n\tconst fieldContainerType = field.formatOptions?.textAlignMode ? field.formatOptions?.textAlignMode : \"Form\";\n\tconst propertyPathInModel = pathInModel(getContextRelativeTargetObjectPath(field.dataModelPath)) as PathInModelExpression<Property>;\n\tconst relativeLocation = getRelativePaths(field.dataModelPath);\n\tconst textPath = getExpressionFromAnnotation(field.dataModelPath?.targetObject?.annotations?.Common?.Text, relativeLocation);\n\tconst propertyPath = field.dataModelPath.targetObject?.name;\n\tconst recommendationValue = pathInModel(`${propertyPath}@$ui5.fe.recommendations.placeholderValue`);\n\tconst recommendationDescription = pathInModel(`${propertyPath}@$ui5.fe.recommendations.placeholderDescription`);\n\tif (fieldContainerType === \"Table\") {\n\t\tvalueStateExp = formatResult(\n\t\t\t[\n\t\t\t\trecommendationValue,\n\t\t\t\trecommendationDescription,\n\t\t\t\tpathInModel(`/recommendationsData`, \"internal\"),\n\t\t\t\tpathInModel(`/isEditable`, \"ui\"),\n\t\t\t\tfield.dataSourcePath,\n\t\t\t\tpropertyPathInModel,\n\t\t\t\ttextPath\n\t\t\t],\n\t\t\tadditionalValueFormatter.formatValueState,\n\t\t\tfield.dataModelPath.targetEntityType\n\t\t);\n\t} else {\n\t\tvalueStateExp = formatResult(\n\t\t\t[\n\t\t\t\trecommendationValue,\n\t\t\t\trecommendationDescription,\n\t\t\t\tpathInModel(`/recommendationsData`, \"internal\"),\n\t\t\t\tpathInModel(`/isEditable`, \"ui\"),\n\t\t\t\tfield.dataSourcePath,\n\t\t\t\tpropertyPathInModel,\n\t\t\t\ttextPath\n\t\t\t],\n\t\t\tadditionalValueFormatter.formatValueState\n\t\t);\n\t}\n\n\tfield.valueState = compileExpression(valueStateExp);\n\treturn field.valueState;\n}\n\nexport function setUpVisibleProperties(field: FieldBlockProperties): void {\n\t// we do this before enhancing the dataModelPath so that it still points at the DataField\n\t// const visibleProperties: Partial<fieldBlock> = {};\n\tconst propertyDataModelObjectPath = MetaModelConverter.getInvolvedDataModelObjects<DataFieldAbstractTypes>(\n\t\tfield.metaPathContext ? field.metaPathContext : field.metaPath,\n\t\tfield.contextPath\n\t);\n\n\tfield.visible ??= getVisibleExpression(propertyDataModelObjectPath, field.formatOptions);\n\tfield.displayVisible = field.formatOptions?.fieldMode === \"nowrapper\" ? field.visible : undefined;\n}\n\nfunction getContentId(macroId: string): string {\n\treturn `${macroId}-content`;\n}\n\n/**\n * Computes properties for the file templating.\n * @param field The field\n */\nfunction computeFileUploaderProperties(field: FieldBlockProperties): void {\n\tif (field.displayStyle === \"File\") {\n\t\tfield.fileRelativePropertyPath = getContextRelativeTargetObjectPath(field.dataModelPath) || \"\";\n\t\tconst fileNameAnnotation = field.property.annotations.Core?.ContentDisposition?.Filename;\n\t\tif (isPathAnnotationExpression(fileNameAnnotation)) {\n\t\t\tconst fileNameDataModelPath = enhanceDataModelPath(field.dataModelPath, fileNameAnnotation.path);\n\t\t\tfield.fileFilenameExpression = getContextRelativeTargetObjectPath(fileNameDataModelPath) ?? \"\";\n\t\t}\n\t}\n}\n\n/**\n * Computes properties for the inline edit templating.\n * @param field The field\n * @param viewDataModel\n */\nfunction computeInlineEditProperties(field: FieldBlockProperties, viewDataModel: JSONModel): void {\n\tif (field.displayStyle === \"File\" || field.displayStyle === \"Avatar\") {\n\t\tfield.inlineEditEnabled = undefined;\n\t\treturn;\n\t}\n\tfield.inlineEditEnabled =\n\t\tfield.inlineEditEnabled === true || viewDataModel?.getProperty(\"/isInlineEditEnabled\") === true ? true : undefined;\n\tif (field.inlineEditEnabled && field.editModeAsObject !== \"Display\") {\n\t\tconst computedEditableExpression = UIFormatters.getEditableExpressionAsObject(\n\t\t\tfield.propertyForFieldControl,\n\t\t\tfield.convertedMetaPath,\n\t\t\tfield.dataModelPath\n\t\t);\n\n\t\tfield.hasInlineEdit = transformRecursively(\n\t\t\tcomputedEditableExpression,\n\t\t\t\"PathInModel\",\n\t\t\t(expr) => {\n\t\t\t\tif (expr.path === \"isEditable\" && expr.modelName === \"ui\") {\n\t\t\t\t\treturn constant(true);\n\t\t\t\t}\n\t\t\t\treturn expr;\n\t\t\t},\n\t\t\ttrue\n\t\t) as unknown as boolean;\n\t}\n}\n\nconst FieldStructureHelper = {\n\tgetDecimalPadding,\n\tsetUpField,\n\tcomputeExternalID,\n\tsetUpDisplayStyle,\n\tsetUpObjectIdentifierTitleAndText,\n\tsetUpValueState\n};\nexport default FieldStructureHelper;\n"],"mappings":"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","ignoreList":[],"file":"FieldStructureHelper-dbg.js"}