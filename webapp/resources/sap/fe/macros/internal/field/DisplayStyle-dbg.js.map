{"version":3,"names":["DisplayStyle","getPrecisionForCurrency","field","scale","property","precision","Math","min","getCurrencyOrUnitControl","currencyOrUnit","visibleExpression","_jsx","Link","text","press","eventHandlers","displayAggregationDetails","visible","reactiveAreaMode","formatOptions","children","dependents","clone","getNumberWithUnitOrCurrencyAlignedTemplate","relativePropertyPath","getContextRelativeTargetObjectPath","dataModelPath","overallVisible","not","equal","pathInModel","undefined","currency","NumberWithUnitOrCurrency","number","valueAsStringBindingExpression","unitOrCurrency","unitBindingExpression","isAnalytics","ConditionalWrapper","displayVisible","condition","hasValidAnalyticalCurrencyOrUnit","contentTrue","contentFalse","getAvatarTemplate","avatarId","_flexId","idPrefix","generate","avatarVisible","FieldTemplating","getVisibleExpression","avatarSrc","getValueBinding","avatarDisplayShape","getAvatarShape","FormElementWrapper","Avatar","id","src","displaySize","class","imageFitType","displayShape","getButtonTemplate","icon","showIconUrl","convertedMetaPath","IconUrl","Label","tooltip","buttonPress","buttonIsBound","buttonOperationAvailable","buttonOperationAvailableFormatted","navigationAvailable","$Type","onDataFieldActionButton","ActionTarget","isBound","annotations","Core","OperationAvailable","actionTarget","bindingParamName","parameters","name","compileExpression","getExpressionFromAnnotation","path","startsWith","replace","onDataFieldWithIBN","NavigationAvailable","String","ignoreNavigationAvailable","button","Button","enabled","FieldHelper","isDataFieldActionButtonVisible","isDataFieldActionButtonEnabled","isAnalyticalAggregatedRow","and","resolveBindingString","UI","isNodeLevelNavigable","type","buildExpressionForCriticalityButtonType","isActionAIOperation","aiIcon","getContactTemplate","contactMetaPath","metaPath","getModel","createBindingContext","contactVisible","Contact","ariaLabelledBy","getPath","contextPath","showEmptyIndicator","getDataPointInnerPart","withConditionalWrapper","convertedDataField","MetaModelConverter","convertMetaModelContext","measureDisplayMode","DataPoint","value","DataPointFormatOptions","getDataPointTemplate","hasUnitOrCurrency","getExpandableText","ExpandableText","displayStyleId","overflowMode","textExpandBehaviorDisplay","maxCharacters","textMaxCharactersDisplay","emptyIndicatorMode","getFileTemplate","innerFilePart","fileStreamNotEmpty","fileRelativePropertyPath","fileFilenameExpression","fileUploadUrl","fileFilenamePath","ContentDisposition","Filename","fileMediaType","MediaType","fileIsImage","IsImageURL","IsImage","test","toString","fileAvatarSrc","fileAvatarDisplayShape","fileIconSrc","getPathForIconSource","fileLinkText","getFilenameExpr","fileLinkHref","getDownloadUrl","fileTextVisible","fileAcceptableMediaTypes","AcceptableMediaTypes","acceptedTypes","Array","from","map","join","fileMaximumSize","calculateMBfromByte","maxLength","avatar","customData","ImageCustomData","paramName","Icon","link","target","href","wrapping","Text","editMode","computedEditMode","FieldEditMode","Display","beforeDialogOpen","collaborationEnabled","handleOpenUploader","afterDialogOpen","handleCloseUploader","fileUploader","FileUploader","fileUploaderVisible","buttonOnly","iconOnly","multiple","style","sendXHR","useMultipart","sameFilenameAllowed","mimeType","typeMissmatch","handleTypeMissmatch","maximumFileSize","fileSizeExceed","handleFileSizeExceed","uploadOnChange","uploadComplete","handleUploadComplete","httpRequestMethod","isDynamicInstantiation","FileUploaderHttpRequestMethod","Put","change","uploadStream","afterDialogClose","uploadStart","deleteButton","removeStream","FileWrapper","uploadUrl","propertyPath","filename","mediaType","fieldGroupIds","validateFieldGroup","CustomData","dataSourcePath","getLinkTemplate","linkUrl","iconUrl","linkActived","linkTarget","computeTextWithWhiteSpace","accessibleRole","LinkAccessibleRole","onDataFieldWithNavigationPath","html5LinkTarget","HTML5","LinkTarget","linkBinding","Url","Communication","IsEmailAddress","IsPhoneNumber","linkIsEmailAddress","linkIsPhoneNumber","propertyValueBinding","mailBlockId","uid","Email","mail","ObjectStatus","openExternalLink","active","wrap","getForeignKeyForCustomData","relativePathToQuickViewEntity","QuickView","getRelativePathToQuickViewEntity","targetNavigationProperties","targetEntityType","navigationProperties","targetNavProp","find","navProp","refConstraint","referentialConstraint","key","length","targetProperty","keyToFetch","getForeignKeyValueExpression","foreignKeyRelativePath","expression","_type","ifElse","constant","getStandardLinkWithQuickViewTemplate","linkPressed","getMdcLinkForQuickView","getConditionalLinkWithQuickViewTemplate","TextLink","showAsLink","semanticObject","getConditionalWrapperForQuickViewTemplate","getLinkWithQuickViewTemplate","retrieveTextFromValueList","textFromValueList","getQuickViewCondition","getTextTemplate","renderWhitespace","customdata","displayMode","getPasswordTemplate","textBinding","getTextBinding","textExpression","isPathInModelExpression","formatResult","valueFormatters","formatPasswordText","getObjectIdentifier","titleActive","hasQuickView","identifier","ObjectIdentifier","title","identifierTitle","identifierText","titlePress","hasSituationsIndicator","_jsxs","HBox","alignItems","justifyContent","width","SituationsIndicator","situationsIndicatorPropertyPath","showErrorIndicator","showErrorObjectStatus","VBox","state","getObjectStatus","objectStatus","requiredHelper","dataModelObjectPath","getInvolvedDataModelObjects","enhancedValueDataModelPath","enhanceDataModelPath","targetObject","Value","criticalityIcon","buildExpressionForCriticalityIcon","buildExpressionForCriticalityColor","tooltipAnnotation","Common","QuickInfo","tooltipExpression","content","textAlign","isActive","pressAction","createContent","getLabelSemanticKey","emphasized","design","hasQuickview","addDraftIndicator","semanticKeyTemplate","fieldGroupDraftIndicatorPropertyPath","getMarginClass","compactSemanticKey","DraftIndicator","draftIndicatorType","ObjectMarkerVisibility","IconAndText","draftIndicatorVisible","dataModelPathExternalID","replaceWhitespace","quickViewType","dynamicSemanticObjects","listOfDynamicSemanticObjects","semanticObjectExpression","push","semanticObjectsPath","concat","hasSemanticObjects","getCheckBoxGroupItemTemplate","CheckBox","displayOnly","label","selected","valueBindingExpression","getTemplate","innerFieldContent","displayStyle"],"sourceRoot":".","sources":["DisplayStyle.tsx"],"sourcesContent":["import type { Action, PathAnnotationExpression, Property, PropertyAnnotationValue } from \"@sap-ux/vocabularies-types\";\nimport type {\n\tDataField,\n\tDataFieldAbstractTypes,\n\tDataFieldForAction,\n\tDataFieldTypes,\n\tDataFieldWithUrl,\n\tDataPointType\n} from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport { UIAnnotationTypes } from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport uid from \"sap/base/util/uid\";\nimport type { BindingToolkitExpression, CompiledBindingToolkitExpression } from \"sap/fe/base/BindingToolkit\";\nimport {\n\tand,\n\tcompileExpression,\n\tconstant,\n\tequal,\n\tformatResult,\n\tgetExpressionFromAnnotation,\n\tifElse,\n\tisPathInModelExpression,\n\tnot,\n\tpathInModel,\n\tresolveBindingString\n} from \"sap/fe/base/BindingToolkit\";\nimport FormElementWrapper from \"sap/fe/core/controls/FormElementWrapper\";\nimport * as MetaModelConverter from \"sap/fe/core/converters/MetaModelConverter\";\nimport { aiIcon, isActionAIOperation } from \"sap/fe/core/converters/controls/Common/Action\";\nimport valueFormatters from \"sap/fe/core/formatters/ValueFormatter\";\nimport { UI } from \"sap/fe/core/helpers/BindingHelper\";\nimport { generate } from \"sap/fe/core/helpers/StableIdHelper\";\nimport {\n\tbuildExpressionForCriticalityButtonType,\n\tbuildExpressionForCriticalityColor,\n\tbuildExpressionForCriticalityIcon\n} from \"sap/fe/core/templating/CriticalityFormatters\";\nimport type { DataModelObjectPath } from \"sap/fe/core/templating/DataModelPathHelper\";\nimport { enhanceDataModelPath, getContextRelativeTargetObjectPath } from \"sap/fe/core/templating/DataModelPathHelper\";\nimport { hasValidAnalyticalCurrencyOrUnit } from \"sap/fe/core/templating/UIFormatters\";\nimport FieldHelper from \"sap/fe/macros/field/FieldHelper\";\nimport * as FieldTemplating from \"sap/fe/macros/field/FieldTemplating\";\nimport type { FieldBlockProperties } from \"sap/fe/macros/internal/field/FieldStructureHelper\";\nimport QuickView from \"sap/fe/macros/quickView/QuickView\";\nimport Avatar from \"sap/m/Avatar\";\nimport Button from \"sap/m/Button\";\nimport CheckBox from \"sap/m/CheckBox\";\nimport ExpandableText from \"sap/m/ExpandableText\";\nimport HBox from \"sap/m/HBox\";\nimport ImageCustomData from \"sap/m/ImageCustomData\";\nimport Label from \"sap/m/Label\";\nimport type { Link$PressEvent } from \"sap/m/Link\";\nimport Link from \"sap/m/Link\";\nimport ObjectIdentifier from \"sap/m/ObjectIdentifier\";\nimport ObjectStatus from \"sap/m/ObjectStatus\";\nimport Text from \"sap/m/Text\";\nimport VBox from \"sap/m/VBox\";\nimport { LinkAccessibleRole, ObjectMarkerVisibility } from \"sap/m/library\";\nimport type Event from \"sap/ui/base/Event\";\nimport type EventProvider from \"sap/ui/base/EventProvider\";\nimport type Control from \"sap/ui/core/Control\";\nimport type { Control$ValidateFieldGroupEvent } from \"sap/ui/core/Control\";\nimport CustomData from \"sap/ui/core/CustomData\";\nimport Icon from \"sap/ui/core/Icon\";\nimport type MdcLink from \"sap/ui/mdc/Link\";\nimport FieldEditMode from \"sap/ui/mdc/enums/FieldEditMode\";\nimport type Context from \"sap/ui/model/odata/v4/Context\";\nimport type {\n\tFileUploader$ChangeEvent,\n\tFileUploader$FileSizeExceedEvent,\n\tFileUploader$TypeMissmatchEvent,\n\tFileUploader$UploadCompleteEvent,\n\tFileUploader$UploadStartEvent\n} from \"sap/ui/unified/FileUploader\";\nimport FileUploader from \"sap/ui/unified/FileUploader\";\nimport FileUploaderHttpRequestMethod from \"sap/ui/unified/FileUploaderHttpRequestMethod\";\nimport Contact from \"../../contact/Contact\";\nimport Email from \"../../contact/Email\";\nimport ConditionalWrapper from \"../../controls/ConditionalWrapper\";\nimport FileWrapper from \"../../controls/FileWrapper\";\nimport NumberWithUnitOrCurrency from \"../../controls/NumberWithUnitOrCurrency\";\nimport TextLink from \"../../controls/TextLink\";\nimport DraftIndicator from \"../../draftIndicator/DraftIndicator\";\nimport SituationsIndicator from \"../../situations/SituationsIndicator\";\nimport DataPoint from \"../DataPoint\";\nimport DataPointFormatOptions from \"../DataPointFormatOptions\";\nimport type { DisplayStyle as DisplayStyleType } from \"./FieldStyles\";\n\nconst DisplayStyle = {\n\tgetPrecisionForCurrency(field: FieldBlockProperties): number {\n\t\tlet scale = field.property.scale ?? 5;\n\t\tif (typeof scale !== \"number\") {\n\t\t\t// Scale can be \"variable\" but it's not typed as such. In this case, Scale equals the precision\n\t\t\tscale = field.property.precision ?? 5;\n\t\t}\n\t\treturn Math.min(scale, 5);\n\t},\n\n\tgetCurrencyOrUnitControl(\n\t\tfield: FieldBlockProperties,\n\t\tcurrencyOrUnit: string | Control,\n\t\tvisibleExpression?: BindingToolkitExpression<boolean>\n\t): Control {\n\t\treturn (\n\t\t\t<Link\n\t\t\t\tcore:require=\"{FIELDRUNTIME: 'sap/fe/macros/field/FieldRuntime'}\"\n\t\t\t\ttext=\"{sap.fe.i18n>M_TABLE_SHOW_DETAILS}\"\n\t\t\t\tpress={field.eventHandlers.displayAggregationDetails}\n\t\t\t\tvisible={visibleExpression}\n\t\t\t\treactiveAreaMode={field.formatOptions?.reactiveAreaMode}\n\t\t\t>\n\t\t\t\t{{\n\t\t\t\t\tdependents: (currencyOrUnit as Control)?.clone ? (currencyOrUnit as Control).clone() : currencyOrUnit\n\t\t\t\t}}\n\t\t\t</Link>\n\t\t);\n\t},\n\n\t/**\n\t * Generates the NumberWithUnitOrCurrencyAligned template.\n\t * @param field Reference to the current field instance\n\t * @returns An XML-based string with the definition of the field control\n\t */\n\tgetNumberWithUnitOrCurrencyAlignedTemplate(field: FieldBlockProperties): string {\n\t\t// We don't display anything if the value is undefined\n\t\tconst relativePropertyPath = getContextRelativeTargetObjectPath(field.dataModelPath);\n\t\tconst overallVisible = not(equal(pathInModel(relativePropertyPath), undefined));\n\t\tconst currency = (\n\t\t\t<NumberWithUnitOrCurrency number={field.valueAsStringBindingExpression} unitOrCurrency={field.unitBindingExpression} />\n\t\t);\n\t\tif (field.formatOptions.isAnalytics) {\n\t\t\treturn (\n\t\t\t\t<ConditionalWrapper visible={field.displayVisible} condition={field.hasValidAnalyticalCurrencyOrUnit as unknown as boolean}>\n\t\t\t\t\t{{\n\t\t\t\t\t\tcontentTrue: currency,\n\t\t\t\t\t\tcontentFalse: this.getCurrencyOrUnitControl(field, currency, overallVisible)\n\t\t\t\t\t}}\n\t\t\t\t</ConditionalWrapper>\n\t\t\t);\n\t\t} else {\n\t\t\treturn currency;\n\t\t}\n\t},\n\n\t/**\n\t * Generates the Avatar template.\n\t * @param field Reference to the current field instance\n\t * @returns An XML-based string with the definition of the field control\n\t */\n\tgetAvatarTemplate(field: FieldBlockProperties): string {\n\t\tlet avatarId;\n\t\tif (field._flexId) {\n\t\t\tavatarId = field._flexId;\n\t\t} else if (field.idPrefix) {\n\t\t\tavatarId = generate([field.idPrefix, \"Field-content\"]);\n\t\t}\n\n\t\tconst avatarVisible = FieldTemplating.getVisibleExpression(field.dataModelPath as DataModelObjectPath<DataPointType>);\n\n\t\tconst avatarSrc = FieldTemplating.getValueBinding(field.dataModelPath, {});\n\t\tconst avatarDisplayShape = FieldTemplating.getAvatarShape(field.dataModelPath);\n\n\t\treturn (\n\t\t\t<FormElementWrapper visible={avatarVisible}>\n\t\t\t\t<Avatar\n\t\t\t\t\tid={avatarId}\n\t\t\t\t\tsrc={avatarSrc}\n\t\t\t\t\tdisplaySize=\"S\"\n\t\t\t\t\tclass=\"sapUiSmallMarginEnd\"\n\t\t\t\t\timageFitType=\"Cover\"\n\t\t\t\t\tdisplayShape={avatarDisplayShape}\n\t\t\t\t/>\n\t\t\t</FormElementWrapper>\n\t\t);\n\t},\n\n\t/**\n\t * Generates the button template.\n\t * @param field Reference to the current field instance\n\t * @returns An XML-based string with the definition of the field control\n\t */\n\tgetButtonTemplate: (field: FieldBlockProperties): string => {\n\t\tlet icon = field.formatOptions?.showIconUrl ?? false ? (field.convertedMetaPath as DataFieldTypes).IconUrl : undefined;\n\t\tconst text = !(field.formatOptions?.showIconUrl ?? false) ? (field.convertedMetaPath as DataFieldTypes).Label : undefined;\n\t\tconst tooltip = field.formatOptions?.showIconUrl ?? false ? (field.convertedMetaPath as DataFieldTypes).Label : undefined;\n\n\t\tlet buttonPress;\n\t\tlet buttonIsBound;\n\t\tlet buttonOperationAvailable;\n\t\tlet buttonOperationAvailableFormatted;\n\t\tlet navigationAvailable;\n\n\t\tif (field.convertedMetaPath.$Type === UIAnnotationTypes.DataFieldForAction) {\n\t\t\tbuttonPress = field.eventHandlers.onDataFieldActionButton;\n\n\t\t\tbuttonIsBound = field.convertedMetaPath.ActionTarget ? field.convertedMetaPath.ActionTarget.isBound : true;\n\t\t\tbuttonOperationAvailable = field.convertedMetaPath.ActionTarget\n\t\t\t\t? field.convertedMetaPath.ActionTarget.annotations?.Core?.OperationAvailable\n\t\t\t\t: \"false\";\n\t\t\tbuttonOperationAvailableFormatted = field.convertedMetaPath.ActionTarget ? undefined : \"false\";\n\n\t\t\tif (buttonOperationAvailable && buttonOperationAvailable !== \"false\") {\n\t\t\t\tconst actionTarget = field.convertedMetaPath.ActionTarget as Action;\n\t\t\t\tconst bindingParamName = actionTarget.parameters[0].name;\n\t\t\t\t//QUALMS, needs to be checked whether this makes sense at that place, might be good in a dedicated helper function\n\t\t\t\tbuttonOperationAvailableFormatted = compileExpression(\n\t\t\t\t\tgetExpressionFromAnnotation(\n\t\t\t\t\t\tbuttonOperationAvailable as PropertyAnnotationValue<boolean>,\n\t\t\t\t\t\t[],\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t(path: string) => {\n\t\t\t\t\t\t\tif (path.startsWith(bindingParamName)) {\n\t\t\t\t\t\t\t\treturn path.replace(bindingParamName + \"/\", \"\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn path;\n\t\t\t\t\t\t}\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tif (field.convertedMetaPath.$Type === UIAnnotationTypes.DataFieldForIntentBasedNavigation) {\n\t\t\tbuttonPress = field.eventHandlers.onDataFieldWithIBN;\n\t\t\tnavigationAvailable = true;\n\t\t\tif (\n\t\t\t\tfield.convertedMetaPath?.$Type === UIAnnotationTypes.DataFieldForIntentBasedNavigation &&\n\t\t\t\tfield.convertedMetaPath.NavigationAvailable !== undefined &&\n\t\t\t\tString(field.formatOptions.ignoreNavigationAvailable) !== \"true\"\n\t\t\t) {\n\t\t\t\tnavigationAvailable = compileExpression(getExpressionFromAnnotation(field.convertedMetaPath.NavigationAvailable));\n\t\t\t}\n\t\t}\n\n\t\tlet button = \"\";\n\t\tif (field.convertedMetaPath.$Type === UIAnnotationTypes.DataFieldForIntentBasedNavigation) {\n\t\t\tbutton = (\n\t\t\t\t<Button\n\t\t\t\t\tvisible={field.visible}\n\t\t\t\t\ttext={text}\n\t\t\t\t\ticon={icon}\n\t\t\t\t\tenabled={navigationAvailable}\n\t\t\t\t\ttooltip={tooltip}\n\t\t\t\t\tpress={buttonPress as unknown as ((oEvent: Event<object, EventProvider>) => void) | undefined}\n\t\t\t\t/>\n\t\t\t);\n\t\t} else if (\n\t\t\tFieldHelper.isDataFieldActionButtonVisible(\n\t\t\t\tfield.convertedMetaPath,\n\t\t\t\tbuttonIsBound,\n\t\t\t\tbuttonOperationAvailable as boolean | undefined\n\t\t\t)\n\t\t) {\n\t\t\tlet enabled: string | CompiledBindingToolkitExpression = FieldHelper.isDataFieldActionButtonEnabled(\n\t\t\t\tfield.convertedMetaPath as DataFieldForAction,\n\t\t\t\tbuttonIsBound as unknown as boolean,\n\t\t\t\tbuttonOperationAvailable,\n\t\t\t\tbuttonOperationAvailableFormatted as string\n\t\t\t);\n\n\t\t\tif (field.formatOptions.isAnalyticalAggregatedRow) {\n\t\t\t\tenabled = compileExpression(and(resolveBindingString(enabled), UI.isNodeLevelNavigable));\n\t\t\t}\n\n\t\t\tconst type = buildExpressionForCriticalityButtonType(field.dataModelPath as DataModelObjectPath<DataPointType>);\n\t\t\ticon = icon ?? (isActionAIOperation(field.convertedMetaPath as DataFieldForAction) ? aiIcon : undefined);\n\n\t\t\tbutton = (\n\t\t\t\t<Button\n\t\t\t\t\tclass={field.class}\n\t\t\t\t\ttext={text}\n\t\t\t\t\ticon={icon}\n\t\t\t\t\ttooltip={tooltip}\n\t\t\t\t\tpress={buttonPress as unknown as ((oEvent: Event<object, EventProvider>) => void) | undefined}\n\t\t\t\t\tenabled={enabled}\n\t\t\t\t\tvisible={field.visible}\n\t\t\t\t\ttype={type}\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\t\treturn button;\n\t},\n\n\t/**\n\t * Generates the Contact template.\n\t * @param field Reference to the current field instance\n\t * @returns An XML-based string with the definition of the field control\n\t */\n\tgetContactTemplate(field: FieldBlockProperties): string {\n\t\tconst contactMetaPath = field.metaPath.getModel().createBindingContext(\"Target/$AnnotationPath\", field.metaPath);\n\t\tconst contactVisible = FieldTemplating.getVisibleExpression(field.dataModelPath as DataModelObjectPath<DataPointType>);\n\n\t\treturn (\n\t\t\t<Contact\n\t\t\t\tidPrefix={field.idPrefix}\n\t\t\t\tariaLabelledBy={field.ariaLabelledBy}\n\t\t\t\tmetaPath={contactMetaPath.getPath()}\n\t\t\t\tcontextPath={field.contextPath.getPath()}\n\t\t\t\t_flexId={field._flexId}\n\t\t\t\tvisible={contactVisible}\n\t\t\t\tshowEmptyIndicator={field.formatOptions.showEmptyIndicator}\n\t\t\t/>\n\t\t);\n\t},\n\n\t/**\n\t * Generates the innerpart of the data point to be used in getDataPointTemplate.\n\t * @param field Reference to the current field instance\n\t * @param withConditionalWrapper Boolean value to determine whether the DataPoint\n\t * \t\t\t\t\t  \t\t\tshall be generated for the conditional wrapper case\n\t * @returns An XML-based string with the definition of the field control\n\t */\n\tgetDataPointInnerPart(field: FieldBlockProperties, withConditionalWrapper: boolean): string {\n\t\tconst convertedDataField = MetaModelConverter.convertMetaModelContext(field.metaPath) as DataFieldAbstractTypes;\n\n\t\tconst metaPath =\n\t\t\tconvertedDataField.$Type === UIAnnotationTypes.DataFieldForAnnotation\n\t\t\t\t? field.metaPath.getModel().createBindingContext(\"Target/$AnnotationPath\", field.metaPath)\n\t\t\t\t: field.metaPath;\n\n\t\tconst formatOptions = {\n\t\t\tmeasureDisplayMode: field.formatOptions.measureDisplayMode,\n\t\t\tshowEmptyIndicator: field.formatOptions.showEmptyIndicator\n\t\t};\n\n\t\treturn (\n\t\t\t<DataPoint\n\t\t\t\tidPrefix={withConditionalWrapper ? undefined : field.idPrefix}\n\t\t\t\tvisible={(!withConditionalWrapper ? field.displayVisible : undefined) as unknown as string | undefined}\n\t\t\t\tariaLabelledBy={field.ariaLabelledBy ? field.ariaLabelledBy : undefined}\n\t\t\t\tmetaPath={metaPath.getPath()}\n\t\t\t\tcontextPath={field.contextPath?.getPath()}\n\t\t\t\tvalue={field.value}\n\t\t\t>\n\t\t\t\t{{\n\t\t\t\t\tformatOptions: <DataPointFormatOptions {...formatOptions} />\n\t\t\t\t}}\n\t\t\t</DataPoint>\n\t\t);\n\t},\n\n\t/**\n\t * Generates the DataPoint template.\n\t * @param field Reference to the current field instance\n\t * @returns An XML-based string with the definition of the field control\n\t */\n\tgetDataPointTemplate(field: FieldBlockProperties): string {\n\t\tif ((field.formatOptions.isAnalytics ?? false) && (field.hasUnitOrCurrency ?? false)) {\n\t\t\treturn (\n\t\t\t\t<ConditionalWrapper visible={field.displayVisible} condition={field.hasValidAnalyticalCurrencyOrUnit as unknown as boolean}>\n\t\t\t\t\t{{\n\t\t\t\t\t\tcontentTrue: this.getDataPointInnerPart(field, true),\n\t\t\t\t\t\tcontentFalse: this.getCurrencyOrUnitControl(field, this.getDataPointInnerPart(field, true))\n\t\t\t\t\t}}\n\t\t\t\t</ConditionalWrapper>\n\t\t\t);\n\t\t} else {\n\t\t\treturn this.getDataPointInnerPart(field, false);\n\t\t}\n\t},\n\n\t/**\n\t * Generates the ExpandableText template.\n\t * @param field Reference to the current field instance\n\t * @returns An XML-based string with the definition of the field control\n\t */\n\tgetExpandableText(field: FieldBlockProperties): string {\n\t\treturn (\n\t\t\t<ExpandableText\n\t\t\t\tid={field?.displayStyleId}\n\t\t\t\tvisible={field?.displayVisible}\n\t\t\t\ttext={field.text}\n\t\t\t\toverflowMode={field?.formatOptions?.textExpandBehaviorDisplay}\n\t\t\t\tmaxCharacters={field?.formatOptions?.textMaxCharactersDisplay}\n\t\t\t\temptyIndicatorMode={field?.emptyIndicatorMode}\n\t\t\t/>\n\t\t);\n\t},\n\n\t/**\n\t * Generates the File template.\n\t * @param field Reference to the current field instance\n\t * @returns An XML-based string with the definition of the field control\n\t */\n\tgetFileTemplate(field: FieldBlockProperties): string {\n\t\tlet innerFilePart;\n\n\t\tconst fileStreamNotEmpty = compileExpression(\n\t\t\tnot(equal(pathInModel(`${field.fileRelativePropertyPath}@odata.mediaContentType`), null))\n\t\t);\n\n\t\tconst fileFilenameExpression = field.fileFilenameExpression ? \"{ path: '\" + field.fileFilenameExpression + \"' }\" : \"\";\n\n\t\t// FileWrapper\n\t\tconst fileUploadUrl = FieldTemplating.getValueBinding(field.dataModelPath, {});\n\t\tconst fileFilenamePath = (field.property.annotations.Core?.ContentDisposition?.Filename as PathAnnotationExpression<string>)?.path;\n\t\tconst fileMediaType =\n\t\t\tfield.property.annotations.Core?.MediaType &&\n\t\t\tcompileExpression(getExpressionFromAnnotation(field.property.annotations.Core?.MediaType));\n\n\t\t// template:if\n\t\tconst fileIsImage =\n\t\t\t!!field.property.annotations.UI?.IsImageURL ||\n\t\t\t!!field.property.annotations.UI?.IsImage ||\n\t\t\t/image\\//i.test(field.property.annotations.Core?.MediaType?.toString() ?? \"\");\n\n\t\t// Avatar\n\t\tconst fileAvatarSrc = FieldTemplating.getValueBinding(field.dataModelPath, {});\n\t\tconst fileAvatarDisplayShape = FieldTemplating.getAvatarShape(field.dataModelPath);\n\n\t\t// Icon\n\t\tconst fileIconSrc = FieldHelper.getPathForIconSource(field.fileRelativePropertyPath);\n\n\t\t// Link\n\t\tconst fileLinkText = FieldHelper.getFilenameExpr(fileFilenameExpression, \"{sap.fe.i18n>M_FIELD_FILEUPLOADER_NOFILENAME_TEXT}\");\n\t\tconst fileLinkHref = FieldHelper.getDownloadUrl(fileUploadUrl ?? \"\");\n\n\t\t// Text\n\t\tconst fileTextVisible = compileExpression(equal(pathInModel(`${field.fileRelativePropertyPath}@odata.mediaContentType`), null));\n\n\t\tlet fileAcceptableMediaTypes;\n\t\t// FileUploader\n\t\tif (field.property.annotations.Core?.AcceptableMediaTypes) {\n\t\t\tconst acceptedTypes = Array.from(field.property.annotations.Core.AcceptableMediaTypes as unknown as string[]).map(\n\t\t\t\t(type) => `'${type}'`\n\t\t\t);\n\t\t\tfileAcceptableMediaTypes = `{=odata.collection([${acceptedTypes.join(\",\")}])}`; // This does not feel right, but follows the logic of AnnotationHelper#value\n\t\t}\n\t\tconst fileMaximumSize = FieldHelper.calculateMBfromByte(field.property.maxLength);\n\n\t\tif (fileIsImage) {\n\t\t\tinnerFilePart = {\n\t\t\t\tavatar: (\n\t\t\t\t\t<Avatar\n\t\t\t\t\t\tvisible={field.displayVisible}\n\t\t\t\t\t\tsrc={fileAvatarSrc}\n\t\t\t\t\t\tdisplaySize=\"S\"\n\t\t\t\t\t\tclass=\"sapUiSmallMarginEnd\"\n\t\t\t\t\t\timageFitType=\"Cover\"\n\t\t\t\t\t\tdisplayShape={fileAvatarDisplayShape}\n\t\t\t\t\t>\n\t\t\t\t\t\t{{\n\t\t\t\t\t\t\tcustomData: <ImageCustomData paramName=\"xcache\" />\n\t\t\t\t\t\t}}\n\t\t\t\t\t</Avatar>\n\t\t\t\t)\n\t\t\t};\n\t\t} else {\n\t\t\tinnerFilePart = {\n\t\t\t\ticon: <Icon src={fileIconSrc} class=\"sapUiSmallMarginEnd\" visible={fileStreamNotEmpty} />,\n\t\t\t\tlink: (\n\t\t\t\t\t<Link\n\t\t\t\t\t\ttext={fileLinkText}\n\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\thref={fileLinkHref}\n\t\t\t\t\t\tvisible={fileStreamNotEmpty}\n\t\t\t\t\t\twrapping=\"true\"\n\t\t\t\t\t\treactiveAreaMode={field.formatOptions?.reactiveAreaMode}\n\t\t\t\t\t/>\n\t\t\t\t),\n\t\t\t\ttext: <Text emptyIndicatorMode={field.emptyIndicatorMode} text=\"\" visible={fileTextVisible} />\n\t\t\t};\n\t\t}\n\n\t\tif ((field.editMode ?? field.computedEditMode) !== FieldEditMode.Display) {\n\t\t\tconst beforeDialogOpen = field.collaborationEnabled ? field.eventHandlers.handleOpenUploader : undefined;\n\t\t\tconst afterDialogOpen = field.collaborationEnabled ? field.eventHandlers.handleCloseUploader : undefined;\n\n\t\t\tinnerFilePart = {\n\t\t\t\t...innerFilePart,\n\t\t\t\tfileUploader: (\n\t\t\t\t\t<FileUploader\n\t\t\t\t\t\tname=\"FEV4FileUpload\"\n\t\t\t\t\t\tvisible={field.fileUploaderVisible}\n\t\t\t\t\t\tbuttonOnly=\"true\"\n\t\t\t\t\t\ticonOnly=\"true\"\n\t\t\t\t\t\tmultiple=\"false\"\n\t\t\t\t\t\ttooltip=\"{sap.fe.i18n>M_FIELD_FILEUPLOADER_UPLOAD_BUTTON_TOOLTIP}\"\n\t\t\t\t\t\ticon=\"sap-icon://upload\"\n\t\t\t\t\t\tstyle=\"Transparent\"\n\t\t\t\t\t\tsendXHR=\"true\"\n\t\t\t\t\t\tuseMultipart=\"false\"\n\t\t\t\t\t\tsameFilenameAllowed=\"true\"\n\t\t\t\t\t\tmimeType={fileAcceptableMediaTypes}\n\t\t\t\t\t\ttypeMissmatch={\n\t\t\t\t\t\t\tfield.eventHandlers.handleTypeMissmatch as unknown as (oEvent: FileUploader$TypeMissmatchEvent) => void\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmaximumFileSize={fileMaximumSize}\n\t\t\t\t\t\tfileSizeExceed={\n\t\t\t\t\t\t\tfield.eventHandlers.handleFileSizeExceed as unknown as (oEvent: FileUploader$FileSizeExceedEvent) => void\n\t\t\t\t\t\t}\n\t\t\t\t\t\tuploadOnChange=\"false\"\n\t\t\t\t\t\tuploadComplete={\n\t\t\t\t\t\t\tfield.eventHandlers.handleUploadComplete as unknown as (oEvent: FileUploader$UploadCompleteEvent) => void\n\t\t\t\t\t\t}\n\t\t\t\t\t\thttpRequestMethod={field.isDynamicInstantiation ? FileUploaderHttpRequestMethod.Put : \"Put\"}\n\t\t\t\t\t\tchange={field.eventHandlers.uploadStream as unknown as (oEvent: FileUploader$ChangeEvent) => void}\n\t\t\t\t\t\tbeforeDialogOpen={beforeDialogOpen as unknown as (oEvent: Event) => void}\n\t\t\t\t\t\tafterDialogClose={afterDialogOpen as unknown as (oEvent: Event) => void}\n\t\t\t\t\t\tuploadStart={field.eventHandlers.handleOpenUploader as unknown as (oEvent: FileUploader$UploadStartEvent) => void}\n\t\t\t\t\t/>\n\t\t\t\t),\n\t\t\t\tdeleteButton: (\n\t\t\t\t\t<Button\n\t\t\t\t\t\ticon=\"sap-icon://sys-cancel\"\n\t\t\t\t\t\ttype=\"Transparent\"\n\t\t\t\t\t\tpress={field.eventHandlers.removeStream as unknown as (oEvent: Event) => void}\n\t\t\t\t\t\ttooltip=\"{sap.fe.i18n>M_FIELD_FILEUPLOADER_DELETE_BUTTON_TOOLTIP}\"\n\t\t\t\t\t\tvisible={field.fileUploaderVisible}\n\t\t\t\t\t\tenabled={fileStreamNotEmpty}\n\t\t\t\t\t/>\n\t\t\t\t)\n\t\t\t};\n\t\t}\n\n\t\treturn (\n\t\t\t<FileWrapper\n\t\t\t\tcore:require=\"{FieldRuntimeHelper: 'sap/fe/macros/field/FieldRuntimeHelper'}\"\n\t\t\t\tvisible={field.visible}\n\t\t\t\tuploadUrl={fileUploadUrl}\n\t\t\t\tpropertyPath={field.fileRelativePropertyPath}\n\t\t\t\tfilename={fileFilenamePath}\n\t\t\t\tmediaType={fileMediaType}\n\t\t\t\tfieldGroupIds={field.fieldGroupIds}\n\t\t\t\tvalidateFieldGroup={field.eventHandlers.validateFieldGroup as (oEvent: Control$ValidateFieldGroupEvent) => void}\n\t\t\t>\n\t\t\t\t{{\n\t\t\t\t\tcustomData: <CustomData key=\"sourcePath\" value={field.dataSourcePath} />,\n\t\t\t\t\tinnerFilePart\n\t\t\t\t}}\n\t\t\t</FileWrapper>\n\t\t);\n\t},\n\n\t/**\n\t * Generates the Link template.\n\t * @param field Reference to the current field instance\n\t * @returns An XML-based string with the definition of the field control\n\t */\n\tgetLinkTemplate(field: FieldBlockProperties): string {\n\t\tlet linkUrl;\n\t\tlet iconUrl;\n\t\tlet linkActived;\n\t\ttype LinkTarget = \"_blank\" | \"_self\" | \"_top\" | \"_parent\";\n\t\tlet linkTarget: LinkTarget | undefined;\n\n\t\tswitch (field.convertedMetaPath.$Type as string) {\n\t\t\tcase UIAnnotationTypes.DataFieldWithIntentBasedNavigation:\n\t\t\t\treturn (\n\t\t\t\t\t<Link\n\t\t\t\t\t\tid={field.displayStyleId}\n\t\t\t\t\t\tvisible={field.displayVisible}\n\t\t\t\t\t\ttext={DisplayStyle.computeTextWithWhiteSpace(field)}\n\t\t\t\t\t\tpress={field.eventHandlers.onDataFieldWithIBN as unknown as (oEvent: Link$PressEvent) => void}\n\t\t\t\t\t\tariaLabelledBy={field.ariaLabelledBy as unknown as Array<Control | string>}\n\t\t\t\t\t\temptyIndicatorMode={field.emptyIndicatorMode}\n\t\t\t\t\t\tclass=\"sapMTextRenderWhitespaceWrap\"\n\t\t\t\t\t\taccessibleRole={LinkAccessibleRole.Button}\n\t\t\t\t\t\treactiveAreaMode={field.formatOptions?.reactiveAreaMode}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\tcase UIAnnotationTypes.DataFieldWithNavigationPath:\n\t\t\t\treturn (\n\t\t\t\t\t<Link\n\t\t\t\t\t\tid={field.displayStyleId}\n\t\t\t\t\t\tcore:require=\"{FieldRuntimeHelper: 'sap/fe/macros/field/FieldRuntimeHelper'}\"\n\t\t\t\t\t\tvisible={field.displayVisible}\n\t\t\t\t\t\ttext={field.text}\n\t\t\t\t\t\tpress={field.eventHandlers.onDataFieldWithNavigationPath as unknown as (oEvent: Link$PressEvent) => void}\n\t\t\t\t\t\tenabled={field.formatOptions.isAnalyticalAggregatedRow ? UI.isNodeLevelNavigable : undefined}\n\t\t\t\t\t\tariaLabelledBy={field.ariaLabelledBy as unknown as Array<Control | string>}\n\t\t\t\t\t\temptyIndicatorMode={field.emptyIndicatorMode}\n\t\t\t\t\t\treactiveAreaMode={field.formatOptions?.reactiveAreaMode}\n\t\t\t\t\t\tclass=\"sapMTextRenderWhitespaceWrap\"\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\tcase UIAnnotationTypes.DataFieldWithAction:\n\t\t\t\treturn (\n\t\t\t\t\t<Link\n\t\t\t\t\t\tid={field.displayStyleId}\n\t\t\t\t\t\tvisible={field.displayVisible}\n\t\t\t\t\t\ttext={field.text}\n\t\t\t\t\t\tpress={field.eventHandlers.onDataFieldActionButton as unknown as (oEvent: Link$PressEvent) => void}\n\t\t\t\t\t\tenabled={field.formatOptions.isAnalyticalAggregatedRow ? UI.isNodeLevelNavigable : undefined}\n\t\t\t\t\t\tariaLabelledBy={field.ariaLabelledBy as unknown as Array<Control | string>}\n\t\t\t\t\t\temptyIndicatorMode={field.emptyIndicatorMode}\n\t\t\t\t\t\tclass=\"sapMTextRenderWhitespaceWrap\"\n\t\t\t\t\t\taccessibleRole={LinkAccessibleRole.Button}\n\t\t\t\t\t\treactiveAreaMode={field.formatOptions?.reactiveAreaMode}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\tcase UIAnnotationTypes.DataFieldWithUrl:\n\t\t\t\tconst html5LinkTarget = field.property.annotations.HTML5?.LinkTarget;\n\t\t\t\tfield.text = DisplayStyle.computeTextWithWhiteSpace(field);\n\t\t\t\ticonUrl = (field.convertedMetaPath as DataFieldTypes).IconUrl\n\t\t\t\t\t? compileExpression(\n\t\t\t\t\t\t\tgetExpressionFromAnnotation(\n\t\t\t\t\t\t\t\t(field.convertedMetaPath as DataFieldTypes).IconUrl as unknown as PropertyAnnotationValue<String>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t  )\n\t\t\t\t\t: undefined;\n\t\t\t\tconst linkBinding = getExpressionFromAnnotation(\n\t\t\t\t\t(field.convertedMetaPath as DataFieldWithUrl).Url as unknown as PropertyAnnotationValue<String>\n\t\t\t\t);\n\t\t\t\tlinkUrl = compileExpression(linkBinding);\n\t\t\t\tlinkActived = compileExpression(not(equal(linkBinding, \"\")));\n\t\t\t\tlinkTarget = html5LinkTarget && (html5LinkTarget.toString() as LinkTarget);\n\t\t}\n\n\t\tif (field.property.annotations?.Communication?.IsEmailAddress || field.property.annotations?.Communication?.IsPhoneNumber) {\n\t\t\tconst linkIsEmailAddress = field.property.annotations.Communication?.IsEmailAddress !== undefined;\n\t\t\tconst linkIsPhoneNumber = field.property.annotations.Communication?.IsPhoneNumber !== undefined;\n\t\t\tconst propertyValueBinding = FieldTemplating.getValueBinding(field.dataModelPath, {});\n\t\t\tconst mailBlockId = field.displayStyleId ? field.displayStyleId : `mailBlock${uid()}`;\n\t\t\tif (linkIsEmailAddress) {\n\t\t\t\tlinkUrl = `mailto:${propertyValueBinding}`;\n\t\t\t\treturn (\n\t\t\t\t\t<Email\n\t\t\t\t\t\tid={mailBlockId}\n\t\t\t\t\t\tvisible={field.displayVisible}\n\t\t\t\t\t\ttext={field.text}\n\t\t\t\t\t\tmail={propertyValueBinding}\n\t\t\t\t\t\tariaLabelledBy={field.ariaLabelledBy ? field.ariaLabelledBy : undefined}\n\t\t\t\t\t\temptyIndicatorMode={field.emptyIndicatorMode}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t}\n\t\t\tif (linkIsPhoneNumber) {\n\t\t\t\tlinkUrl = `tel:${propertyValueBinding}`;\n\t\t\t\treturn (\n\t\t\t\t\t<Link\n\t\t\t\t\t\tid={field.displayStyleId}\n\t\t\t\t\t\tvisible={field.displayVisible}\n\t\t\t\t\t\ttext={DisplayStyle.computeTextWithWhiteSpace(field)}\n\t\t\t\t\t\thref={linkUrl}\n\t\t\t\t\t\tenabled={linkActived}\n\t\t\t\t\t\tariaLabelledBy={field.ariaLabelledBy as unknown as Array<Control | string>}\n\t\t\t\t\t\temptyIndicatorMode={field.emptyIndicatorMode}\n\t\t\t\t\t\tclass=\"sapMTextRenderWhitespaceWrap\"\n\t\t\t\t\t\treactiveAreaMode={field.formatOptions?.reactiveAreaMode}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tif (iconUrl) {\n\t\t\treturn (\n\t\t\t\t<ObjectStatus\n\t\t\t\t\tcore:require=\"{FieldRuntimeHelper: 'sap/fe/macros/field/FieldRuntimeHelper'}\"\n\t\t\t\t\tid={field.displayStyleId}\n\t\t\t\t\ticon={iconUrl}\n\t\t\t\t\tvisible={field.displayVisible}\n\t\t\t\t\ttext={field.text}\n\t\t\t\t\tpress={field.eventHandlers.openExternalLink as unknown as (oEvent: Event) => void}\n\t\t\t\t\tactive={linkActived}\n\t\t\t\t\temptyIndicatorMode={field.emptyIndicatorMode}\n\t\t\t\t\tariaLabelledBy={field.ariaLabelledBy as unknown as Array<Control | string>}\n\t\t\t\t\treactiveAreaMode={field.formatOptions?.reactiveAreaMode}\n\t\t\t\t>\n\t\t\t\t\t{{\n\t\t\t\t\t\tcustomData: <CustomData key={\"url\"} value={linkUrl} />\n\t\t\t\t\t}}\n\t\t\t\t</ObjectStatus>\n\t\t\t);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<Link\n\t\t\t\t\tid={field.displayStyleId}\n\t\t\t\t\tvisible={field.displayVisible}\n\t\t\t\t\ttext={field.text}\n\t\t\t\t\thref={linkUrl}\n\t\t\t\t\tenabled={linkActived}\n\t\t\t\t\ttarget={linkTarget === undefined ? \"_top\" : linkTarget}\n\t\t\t\t\twrapping={field.wrap === undefined ? true : field.wrap}\n\t\t\t\t\tariaLabelledBy={field.ariaLabelledBy as unknown as Array<Control | string>}\n\t\t\t\t\temptyIndicatorMode={field.emptyIndicatorMode}\n\t\t\t\t\treactiveAreaMode={field.formatOptions?.reactiveAreaMode}\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\t},\n\n\t/**\n\t * Find the foreign key of target entity which quick view Facets we want to display.\n\t * @param field Reference to the current field instance\n\t * @returns The key of the target entity\n\t */\n\tgetForeignKeyForCustomData(field: FieldBlockProperties): string | undefined {\n\t\tconst relativePathToQuickViewEntity = QuickView.getRelativePathToQuickViewEntity(field.dataModelPath);\n\t\tif (relativePathToQuickViewEntity) {\n\t\t\tconst targetNavigationProperties = field.dataModelPath.targetEntityType.navigationProperties;\n\t\t\tconst targetNavProp = targetNavigationProperties.find((navProp) => navProp.name === relativePathToQuickViewEntity);\n\t\t\tconst refConstraint = targetNavProp?.referentialConstraint;\n\t\t\tconst key = refConstraint?.length && typeof refConstraint[0] === \"object\" && refConstraint[0].targetProperty;\n\t\t\tconst keyToFetch = key ? `${relativePathToQuickViewEntity}/${key}` : undefined;\n\t\t\tif (keyToFetch !== undefined) {\n\t\t\t\treturn keyToFetch;\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t},\n\n\t/**\n\t * Generates the check expression for displaying or not a quickview.\n\t * @param field Reference to the current field instance\n\t * @returns The key of the target entity\n\t */\n\tgetForeignKeyValueExpression(field: FieldBlockProperties): string {\n\t\tconst foreignKeyRelativePath = QuickView.getRelativePathToQuickViewEntity(field.dataModelPath)\n\t\t\t? this.getForeignKeyForCustomData(field)\n\t\t\t: undefined;\n\t\tconst expression: BindingToolkitExpression<string> = {\n\t\t\tpath: `${foreignKeyRelativePath}`,\n\t\t\t_type: \"PathInModel\"\n\t\t};\n\t\treturn `${compileExpression(ifElse(equal(foreignKeyRelativePath, undefined), constant(true), not(equal(null, expression))))}`;\n\t},\n\n\t/**\n\t * Generates the StandardLinkWithQuickView template.\n\t * @param field Reference to the current field instance\n\t * @param text The text to display\n\t * @returns An XML-based string with the definition of the field control\n\t */\n\tgetStandardLinkWithQuickViewTemplate(field: FieldBlockProperties, text: CompiledBindingToolkitExpression): string {\n\t\treturn (\n\t\t\t<Link\n\t\t\t\tid={field.displayStyleId}\n\t\t\t\tcore:require=\"{FieldRuntimeHelper: 'sap/fe/macros/field/FieldRuntimeHelper'}\"\n\t\t\t\ttext={text}\n\t\t\t\tvisible={field.displayVisible}\n\t\t\t\twrapping={field.wrap === undefined ? true : field.wrap}\n\t\t\t\tpress={field.eventHandlers.linkPressed}\n\t\t\t\tariaLabelledBy={field.ariaLabelledBy as unknown as Array<Control | string>}\n\t\t\t\temptyIndicatorMode={field.emptyIndicatorMode}\n\t\t\t\taccessibleRole={LinkAccessibleRole.Button}\n\t\t\t\treactiveAreaMode={field.formatOptions?.reactiveAreaMode}\n\t\t\t>\n\t\t\t\t{{\n\t\t\t\t\tcustomData: [<CustomData key={\"loadValue\"} value={field.valueAsStringBindingExpression} />],\n\t\t\t\t\tdependents: DisplayStyle.getMdcLinkForQuickView(field)\n\t\t\t\t}}\n\t\t\t</Link>\n\t\t);\n\t},\n\n\t/**\n\t * Generates the ConditionalLinkTemplate template.\n\t * @param field Reference to the current field instance\n\t * @param condition Condition to display a Link or a Text\n\t * @param text The text to display\n\t * @returns An XML-based string with the definition of the field control\n\t */\n\tgetConditionalLinkWithQuickViewTemplate(\n\t\tfield: FieldBlockProperties,\n\t\tcondition: CompiledBindingToolkitExpression,\n\t\ttext: CompiledBindingToolkitExpression\n\t): string {\n\t\treturn (\n\t\t\t<TextLink\n\t\t\t\tid={field.displayStyleId}\n\t\t\t\tcore:require=\"{FieldRuntimeHelper: 'sap/fe/macros/field/FieldRuntimeHelper'}\"\n\t\t\t\tshowAsLink={condition as unknown as boolean}\n\t\t\t\tsemanticObject={field.semanticObject}\n\t\t\t\ttext={text}\n\t\t\t\tvisible={field.displayVisible}\n\t\t\t\twrapping={field.wrap === undefined ? true : field.wrap}\n\t\t\t\tpress={field.eventHandlers.linkPressed}\n\t\t\t\tariaLabelledBy={field.ariaLabelledBy}\n\t\t\t\temptyIndicatorMode={field.emptyIndicatorMode}\n\t\t\t>\n\t\t\t\t{{\n\t\t\t\t\tcustomData: [<CustomData key={\"loadValue\"} value={field.valueAsStringBindingExpression} />],\n\t\t\t\t\tdependents: DisplayStyle.getMdcLinkForQuickView(field)\n\t\t\t\t}}\n\t\t\t</TextLink>\n\t\t);\n\t},\n\n\t/**\n\t * Generates the ConditionalLinkTemplate template.\n\t * @param field Reference to the current field instance\n\t * @param condition Condition to display a Link or a Text\n\t * @param contentTrue The Control to display in case condition is true\n\t * @param contentFalse The Control to display in case condition is false\n\t * @returns An XML-based string with the definition of the field control\n\t */\n\tgetConditionalWrapperForQuickViewTemplate(\n\t\tfield: FieldBlockProperties,\n\t\tcondition: string,\n\t\tcontentTrue: string,\n\t\tcontentFalse: string\n\t): string {\n\t\treturn (\n\t\t\t<ConditionalWrapper visible={field.displayVisible} condition={condition as unknown as boolean}>\n\t\t\t\t{{\n\t\t\t\t\tcontentTrue: contentTrue,\n\t\t\t\t\tcontentFalse: contentFalse\n\t\t\t\t}}\n\t\t\t</ConditionalWrapper>\n\t\t);\n\t},\n\n\t/**\n\t * Generates the LinkWithQuickView template.\n\t * @param field Reference to the current field instance\n\t * @returns An XML-based string with the definition of the field control\n\t */\n\tgetLinkWithQuickViewTemplate(field: FieldBlockProperties): string {\n\t\tconst text = field.formatOptions.retrieveTextFromValueList\n\t\t\t? field.textFromValueList\n\t\t\t: DisplayStyle.computeTextWithWhiteSpace(field);\n\t\tconst condition = this.getQuickViewCondition(field);\n\t\tif (condition === \"true\") {\n\t\t\treturn this.getStandardLinkWithQuickViewTemplate(field, text);\n\t\t}\n\t\treturn this.getConditionalLinkWithQuickViewTemplate(field, condition, text);\n\t},\n\n\t/**\n\t * Generates the Text template.\n\t * @param field Reference to the current field instance\n\t * @returns An XML-based string with the definition of the field control\n\t */\n\tgetTextTemplate(field: FieldBlockProperties): string {\n\t\tif (field.formatOptions.retrieveTextFromValueList) {\n\t\t\treturn (\n\t\t\t\t<Text\n\t\t\t\t\tid={field.displayStyleId}\n\t\t\t\t\tvisible={field.displayVisible}\n\t\t\t\t\ttext={field.textFromValueList}\n\t\t\t\t\tcore:require=\"{FieldRuntime: 'sap/fe/macros/field/FieldRuntime'}\"\n\t\t\t\t\temptyIndicatorMode={field.emptyIndicatorMode}\n\t\t\t\t\trenderWhitespace=\"true\"\n\t\t\t\t/>\n\t\t\t);\n\t\t} else {\n\t\t\t// When having a TextArrangement with TextOnly, RTA can only find the binding for the text, but not for the field.\n\t\t\t// To prevent that such a field can be added twice via RTA, we need to provide the field binding as a dummy custom binding.\n\t\t\tlet customdata;\n\t\t\tif (field.formatOptions.displayMode === \"Description\" && field.valueAsStringBindingExpression) {\n\t\t\t\tcustomdata = <CustomData key=\"fieldBinding\" value={field.valueAsStringBindingExpression} />;\n\t\t\t}\n\t\t\treturn (\n\t\t\t\t<Text\n\t\t\t\t\tid={field.displayStyleId}\n\t\t\t\t\tvisible={field.displayVisible}\n\t\t\t\t\ttext={field.text}\n\t\t\t\t\twrapping={field.wrap}\n\t\t\t\t\temptyIndicatorMode={field.emptyIndicatorMode}\n\t\t\t\t\trenderWhitespace=\"true\"\n\t\t\t\t>\n\t\t\t\t\t{customdata}\n\t\t\t\t</Text>\n\t\t\t);\n\t\t}\n\t},\n\n\t/**\n\t * Gets template for the password field.\n\t * @param field Reference to the current field instance\n\t * @returns An XML-based string with the definition of the field control\n\t */\n\tgetPasswordTemplate(field: FieldBlockProperties): string {\n\t\tconst textBinding = FieldTemplating.getTextBinding(field.dataModelPath, field.formatOptions, true);\n\t\tconst textExpression =\n\t\t\tisPathInModelExpression(textBinding) || typeof textBinding === \"string\"\n\t\t\t\t? compileExpression(formatResult([textBinding], valueFormatters.formatPasswordText))\n\t\t\t\t: compileExpression(textBinding);\n\t\treturn (\n\t\t\t<Text\n\t\t\t\tcore:require=\"{valueFormatters: 'sap/fe/core/formatters/ValueFormatter'}\"\n\t\t\t\tid={field.displayStyleId}\n\t\t\t\tvisible={field.displayVisible}\n\t\t\t\ttext={textExpression}\n\t\t\t\twrapping={field.wrap}\n\t\t\t\trenderWhitespace=\"true\"\n\t\t\t></Text>\n\t\t);\n\t},\n\n\t/**\n\t * Generates the ObjectIdentifier template.\n\t * @param field Reference to the current field instance\n\t * @returns An XML-based string with the definition of the field control\n\t */\n\tgetObjectIdentifier(field: FieldBlockProperties): string {\n\t\tlet dependents: MdcLink | undefined;\n\t\tlet titleActive;\n\t\tif (field.hasQuickView) {\n\t\t\ttitleActive = this.getQuickViewCondition(field);\n\t\t\tdependents = DisplayStyle.getMdcLinkForQuickView(field);\n\t\t} else {\n\t\t\ttitleActive = false;\n\t\t}\n\n\t\tlet identifier = (\n\t\t\t<ObjectIdentifier\n\t\t\t\tcore:require=\"{FieldRuntimeHelper: 'sap/fe/macros/field/FieldRuntimeHelper'}\"\n\t\t\t\tid={field.displayStyleId}\n\t\t\t\ttitle={field.identifierTitle}\n\t\t\t\ttext={field.identifierText}\n\t\t\t\ttitleActive={titleActive}\n\t\t\t\ttitlePress={field.eventHandlers.linkPressed}\n\t\t\t\tariaLabelledBy={field.ariaLabelledBy as unknown as Array<Control | string>}\n\t\t\t\temptyIndicatorMode={field.emptyIndicatorMode}\n\t\t\t\treactiveAreaMode={field.formatOptions?.reactiveAreaMode}\n\t\t\t>\n\t\t\t\t{{\n\t\t\t\t\tcustomData: [<CustomData key={\"loadValue\"} value={field.valueAsStringBindingExpression} />],\n\t\t\t\t\tdependents: dependents\n\t\t\t\t}}\n\t\t\t</ObjectIdentifier>\n\t\t);\n\t\tif (field.hasSituationsIndicator) {\n\t\t\tidentifier = (\n\t\t\t\t<HBox alignItems=\"Center\" justifyContent=\"SpaceBetween\" width=\"100%\">\n\t\t\t\t\t{identifier}\n\t\t\t\t\t<SituationsIndicator contextPath={field.contextPath.getPath()} propertyPath={field.situationsIndicatorPropertyPath} />\n\t\t\t\t</HBox>\n\t\t\t);\n\t\t}\n\t\tif (field.showErrorIndicator && field.showErrorObjectStatus) {\n\t\t\tidentifier = (\n\t\t\t\t<VBox>\n\t\t\t\t\t{identifier}\n\t\t\t\t\t<ObjectStatus\n\t\t\t\t\t\tvisible={field.showErrorObjectStatus}\n\t\t\t\t\t\tclass=\"sapUiSmallMarginBottom\"\n\t\t\t\t\t\ttext=\"{sap.fe.i18n>Contains_Errors}\"\n\t\t\t\t\t\tstate=\"Error\"\n\t\t\t\t\t/>\n\t\t\t\t</VBox>\n\t\t\t);\n\t\t}\n\n\t\treturn identifier;\n\t},\n\n\t/**\n\t * Generates the ObjectStatus template.\n\t * @param field Reference to the current field instance\n\t * @returns An XML-based string with the definition of the field control\n\t */\n\tgetObjectStatus(field: FieldBlockProperties): string {\n\t\tlet objectStatus;\n\t\tlet requiredHelper = {\n\t\t\t\"core:require\": \"{FieldRuntimeHelper: 'sap/fe/macros/field/FieldRuntimeHelper'}\"\n\t\t};\n\t\tconst dataModelObjectPath = MetaModelConverter.getInvolvedDataModelObjects<DataField>(field.metaPath, field.contextPath);\n\t\tconst enhancedValueDataModelPath = enhanceDataModelPath<Property>(\n\t\t\tdataModelObjectPath,\n\t\t\tdataModelObjectPath.targetObject?.Value.path\n\t\t);\n\t\tconst condition = hasValidAnalyticalCurrencyOrUnit(enhancedValueDataModelPath);\n\t\tconst convertedDataField = MetaModelConverter.getInvolvedDataModelObjects<DataPointType>(field.metaPath);\n\t\tconst criticalityIcon = buildExpressionForCriticalityIcon(convertedDataField);\n\t\tconst state = buildExpressionForCriticalityColor(convertedDataField);\n\n\t\t// Extract tooltip from QuickInfo annotation - check DataField first, then property\n\t\tconst tooltipAnnotation =\n\t\t\tdataModelObjectPath.targetObject?.annotations?.Common?.QuickInfo ||\n\t\t\tenhancedValueDataModelPath.targetObject?.annotations?.Common?.QuickInfo;\n\t\tconst tooltipExpression = tooltipAnnotation ? compileExpression(getExpressionFromAnnotation(tooltipAnnotation)) : undefined;\n\n\t\tconst linkUrl = (field.convertedMetaPath as DataFieldWithUrl).Url\n\t\t\t? compileExpression(\n\t\t\t\t\tgetExpressionFromAnnotation(\n\t\t\t\t\t\t(field.convertedMetaPath as DataFieldWithUrl).Url as unknown as PropertyAnnotationValue<String>\n\t\t\t\t\t)\n\t\t\t  )\n\t\t\t: undefined;\n\n\t\tif (field.formatOptions.isAnalytics && field.hasUnitOrCurrency) {\n\t\t\tconst content = DisplayStyle.getCurrencyOrUnitControl(field, <Text text={field.text} textAlign=\"End\"></Text>);\n\t\t\tobjectStatus = (\n\t\t\t\t<ConditionalWrapper id={field.displayStyleId} condition={condition as unknown as boolean}>\n\t\t\t\t\t{{\n\t\t\t\t\t\tcontentTrue: (\n\t\t\t\t\t\t\t<ObjectStatus\n\t\t\t\t\t\t\t\ticon={criticalityIcon}\n\t\t\t\t\t\t\t\tstate={state}\n\t\t\t\t\t\t\t\tvisible={field.displayVisible}\n\t\t\t\t\t\t\t\ttext={field.text}\n\t\t\t\t\t\t\t\ttooltip={tooltipExpression}\n\t\t\t\t\t\t\t\temptyIndicatorMode={field.emptyIndicatorMode}\n\t\t\t\t\t\t\t\tclass=\"sapMTextRenderWhitespaceWrap\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t),\n\t\t\t\t\t\tcontentFalse: content\n\t\t\t\t\t}}\n\t\t\t\t</ConditionalWrapper>\n\t\t\t);\n\t\t} else {\n\t\t\tlet dependents: MdcLink | undefined;\n\t\t\tlet active = false;\n\t\t\tlet isActive;\n\t\t\tlet pressAction;\n\t\t\tif (field.hasQuickView) {\n\t\t\t\tdependents = DisplayStyle.getMdcLinkForQuickView(field);\n\t\t\t\tisActive = this.getQuickViewCondition(field);\n\t\t\t\tpressAction = field.eventHandlers.linkPressed;\n\t\t\t}\n\t\t\tif (linkUrl) {\n\t\t\t\tactive = true;\n\t\t\t\trequiredHelper = {\n\t\t\t\t\t\"core:require\": \"{FieldRuntimeHelper: 'sap/fe/macros/field/FieldRuntimeHelper'}\"\n\t\t\t\t};\n\t\t\t\tpressAction = field.eventHandlers.openExternalLink;\n\t\t\t}\n\n\t\t\tobjectStatus = (\n\t\t\t\t<ObjectStatus\n\t\t\t\t\tid={field.displayStyleId}\n\t\t\t\t\ticon={criticalityIcon}\n\t\t\t\t\tstate={state}\n\t\t\t\t\ttext={field.text}\n\t\t\t\t\ttooltip={tooltipExpression}\n\t\t\t\t\tvisible={field.displayVisible}\n\t\t\t\t\temptyIndicatorMode={field.emptyIndicatorMode}\n\t\t\t\t\t{...requiredHelper}\n\t\t\t\t\tactive={isActive ? isActive : active}\n\t\t\t\t\tpress={pressAction}\n\t\t\t\t\tariaLabelledBy={field.ariaLabelledBy as unknown as Array<Control | string>}\n\t\t\t\t\treactiveAreaMode={field.formatOptions?.reactiveAreaMode}\n\t\t\t\t>\n\t\t\t\t\t{{\n\t\t\t\t\t\tcustomData: [\n\t\t\t\t\t\t\t<CustomData key={\"loadValue\"} value={field.valueAsStringBindingExpression} />,\n\t\t\t\t\t\t\t<CustomData key={\"url\"} value={linkUrl} />\n\t\t\t\t\t\t],\n\t\t\t\t\t\tdependents: dependents\n\t\t\t\t\t}}\n\t\t\t\t</ObjectStatus>\n\t\t\t);\n\t\t}\n\n\t\treturn objectStatus;\n\t},\n\n\tgetMdcLinkForQuickView(field: FieldBlockProperties): MdcLink {\n\t\treturn new QuickView(\n\t\t\tfield.dataModelPath,\n\t\t\tfield.metaPath.getPath(),\n\t\t\tfield.contextPath.getPath(),\n\t\t\tfield.semanticObject\n\t\t).createContent() as MdcLink;\n\t},\n\n\t/**\n\t * Generates the LabelSemanticKey template.\n\t * @param field Reference to the current field instance\n\t * @returns An XML-based string with the definition of the field control\n\t */\n\tgetLabelSemanticKey(field: FieldBlockProperties): string {\n\t\tconst contentTrue = (\n\t\t\t<Link\n\t\t\t\ttext={field.text}\n\t\t\t\twrapping=\"true\"\n\t\t\t\temphasized=\"true\"\n\t\t\t\tcore:require=\"{FieldRuntimeHelper: 'sap/fe/macros/field/FieldRuntimeHelper'}\"\n\t\t\t\tpress={field.eventHandlers.linkPressed}\n\t\t\t\tariaLabelledBy={field.ariaLabelledBy as unknown as Array<Control | string>}\n\t\t\t\temptyIndicatorMode={field.emptyIndicatorMode}\n\t\t\t\taccessibleRole={LinkAccessibleRole.Button}\n\t\t\t\treactiveAreaMode={field.formatOptions?.reactiveAreaMode}\n\t\t\t>\n\t\t\t\t{{\n\t\t\t\t\tcustomData: [<CustomData key={\"loadValue\"} value={field.valueAsStringBindingExpression} />],\n\t\t\t\t\tdependents: DisplayStyle.getMdcLinkForQuickView(field)\n\t\t\t\t}}\n\t\t\t</Link>\n\t\t);\n\t\tconst contentFalse = <Label id={field.displayStyleId} visible={field.displayVisible} text={field.identifierTitle} design=\"Bold\" />;\n\t\tif (field.hasQuickView) {\n\t\t\tconst hasQuickview = this.getQuickViewCondition(field);\n\t\t\tif (hasQuickview === \"true\") {\n\t\t\t\treturn contentTrue;\n\t\t\t} else {\n\t\t\t\treturn this.getConditionalWrapperForQuickViewTemplate(field, hasQuickview as string, contentTrue, contentFalse);\n\t\t\t}\n\t\t}\n\t\treturn <Label id={field.displayStyleId} visible={field.displayVisible} text={field.identifierTitle} design=\"Bold\" />;\n\t},\n\t/**\n\t * Gets the template for the semantic key with draft indicator.\n\t * @param semanticKeyTemplate The template result without draft indicator\n\t * @param field Reference to the current field instance\n\t * @returns An XML-based string with the definition of the field control\n\t */\n\taddDraftIndicator(semanticKeyTemplate: string, field: FieldBlockProperties): string {\n\t\tif (!field.formatOptions.fieldGroupDraftIndicatorPropertyPath) {\n\t\t\t// if the draftIndicator is not handled at the fieldGroup level\n\t\t\t//TODO could this be a boolean no draftIndicator\n\t\t\tsemanticKeyTemplate = (\n\t\t\t\t<FormElementWrapper visible={field.displayVisible}>\n\t\t\t\t\t<VBox class={FieldHelper.getMarginClass(field.formatOptions.compactSemanticKey)}>\n\t\t\t\t\t\t{semanticKeyTemplate}\n\t\t\t\t\t\t<DraftIndicator\n\t\t\t\t\t\t\tdraftIndicatorType={ObjectMarkerVisibility.IconAndText}\n\t\t\t\t\t\t\tcontextPath={field.contextPath.getPath()}\n\t\t\t\t\t\t\tvisible={field.draftIndicatorVisible}\n\t\t\t\t\t\t\tariaLabelledBy={field.ariaLabelledBy ? field.ariaLabelledBy : []}\n\t\t\t\t\t\t\treactiveAreaMode={field.formatOptions?.reactiveAreaMode}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</VBox>\n\t\t\t\t</FormElementWrapper>\n\t\t\t);\n\t\t}\n\t\treturn semanticKeyTemplate;\n\t},\n\n\t/**\n\t * Computes the text property with the appropriate white space handling.\n\t * @param field Reference to the current field instance\n\t * @returns An XML-based string with the definition of the field control\n\t */\n\tcomputeTextWithWhiteSpace(field: FieldBlockProperties): CompiledBindingToolkitExpression {\n\t\tconst text = FieldTemplating.getTextBinding(\n\t\t\t(field.dataModelPathExternalID as DataModelObjectPath<Property>) ?? field.dataModelPath,\n\t\t\tfield.formatOptions,\n\t\t\ttrue\n\t\t);\n\t\treturn isPathInModelExpression(text) || typeof text === \"string\"\n\t\t\t? compileExpression(formatResult([text], valueFormatters.replaceWhitespace))\n\t\t\t: compileExpression(text);\n\t},\n\t/**\n\t * Gets the condition for having an active link that opens the quick view.\n\t * @param field\n\t * @returns A compile binding expression for the condition.\n\t */\n\tgetQuickViewCondition(field: FieldBlockProperties): CompiledBindingToolkitExpression {\n\t\tswitch (field.quickViewType) {\n\t\t\tcase \"Facets\":\n\t\t\t\tif (field.formatOptions.isAnalytics !== true) {\n\t\t\t\t\t// We only check if the navigation is reachable if the table is not analytical.\n\t\t\t\t\t// If the table is analytical, we cannot rely on the navigation being reachable, as we cannot load navigation properties in the analytical queries.\n\t\t\t\t\t//there is quick viewFacets annotation only then we check if the navigation is reachable\n\t\t\t\t\treturn this.getForeignKeyValueExpression(field);\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase \"SemanticLinks\":\n\t\t\t\tif (field.dynamicSemanticObjects) {\n\t\t\t\t\tconst listOfDynamicSemanticObjects: BindingToolkitExpression<string>[] = [];\n\t\t\t\t\tif (field.semanticObject) {\n\t\t\t\t\t\t// If we see a dynamic expression with a formatter, we return false. The condition will be resolved later in TextLink control.\n\t\t\t\t\t\treturn compileExpression(constant(false));\n\t\t\t\t\t}\n\t\t\t\t\tfor (const semanticObjectExpression of field.dynamicSemanticObjects) {\n\t\t\t\t\t\tif (semanticObjectExpression._type === \"PathInModel\" || semanticObjectExpression._type === \"Constant\") {\n\t\t\t\t\t\t\tlistOfDynamicSemanticObjects.push(semanticObjectExpression);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// If we see a dynamic expression ($edmJson), we return true.\n\t\t\t\t\t\t\treturn compileExpression(constant(true));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tconst semanticObjectsPath = [\n\t\t\t\t\t\tpathInModel<Context[]>(\"/semanticObjects\", \"internal\") as BindingToolkitExpression<string>\n\t\t\t\t\t].concat(listOfDynamicSemanticObjects);\n\t\t\t\t\treturn compileExpression(formatResult(semanticObjectsPath, valueFormatters.hasSemanticObjects));\n\t\t\t\t}\n\t\t\t\treturn \"true\";\n\t\t\tdefault:\n\t\t\t\t// \"facetsAndSemanticLinks\"\n\t\t\t\t// if there is both facets and semantic links, we do not check if the navigation is reachable\n\t\t\t\treturn \"true\";\n\t\t}\n\t},\n\n\t/**\n\t * Generates the CheckBoxGroup template.\n\t * @param field Reference to the current field instance\n\t * @returns An XML-based string with the definition of the field control\n\t */\n\tgetCheckBoxGroupItemTemplate(field: FieldBlockProperties): string {\n\t\treturn (\n\t\t\t<CheckBox\n\t\t\t\tcore:require=\"{Field: 'sap/fe/macros/Field'}\"\n\t\t\t\tid={field.displayStyleId}\n\t\t\t\tdisplayOnly={true}\n\t\t\t\ttext={field.label}\n\t\t\t\twrapping={true}\n\t\t\t\tselected={field.valueBindingExpression}\n\t\t\t\tfieldGroupIds={field.fieldGroupIds}\n\t\t\t\tariaLabelledBy={field.ariaLabelledBy as unknown as Array<Control | string>}\n\t\t\t>\n\t\t\t\t{{ customData: <CustomData key=\"sourcePath\" value={field.dataSourcePath} /> }}\n\t\t\t</CheckBox>\n\t\t);\n\t},\n\n\t/**\n\t * Entry point for further templating processings.\n\t * @param field Reference to the current field instance\n\t * @returns An XML-based string with the definition of the field control\n\t */\n\tgetTemplate: (field: FieldBlockProperties): string => {\n\t\tlet innerFieldContent;\n\t\tswitch (field.displayStyle as DisplayStyleType) {\n\t\t\tcase \"Avatar\":\n\t\t\t\tinnerFieldContent = DisplayStyle.getAvatarTemplate(field);\n\t\t\t\tbreak;\n\t\t\tcase \"Button\":\n\t\t\t\tinnerFieldContent = DisplayStyle.getButtonTemplate(field);\n\t\t\t\tbreak;\n\t\t\tcase \"CheckBoxGroupItem\":\n\t\t\t\tinnerFieldContent = DisplayStyle.getCheckBoxGroupItemTemplate(field);\n\t\t\t\tbreak;\n\t\t\tcase \"Contact\":\n\t\t\t\tinnerFieldContent = DisplayStyle.getContactTemplate(field);\n\t\t\t\tbreak;\n\t\t\tcase \"DataPoint\":\n\t\t\t\tinnerFieldContent = DisplayStyle.getDataPointTemplate(field);\n\t\t\t\tbreak;\n\t\t\tcase \"ExpandableText\":\n\t\t\t\tinnerFieldContent = DisplayStyle.getExpandableText(field);\n\t\t\t\tbreak;\n\t\t\tcase \"File\":\n\t\t\t\tinnerFieldContent = DisplayStyle.getFileTemplate(field);\n\t\t\t\tbreak;\n\t\t\tcase \"Link\":\n\t\t\t\tinnerFieldContent = DisplayStyle.getLinkTemplate(field);\n\t\t\t\tbreak;\n\t\t\tcase \"LinkWithQuickView\":\n\t\t\t\tinnerFieldContent = DisplayStyle.getLinkWithQuickViewTemplate(field);\n\t\t\t\tbreak;\n\t\t\tcase \"NumberWithUnitOrCurrencyAligned\":\n\t\t\t\tinnerFieldContent = DisplayStyle.getNumberWithUnitOrCurrencyAlignedTemplate(field);\n\t\t\t\tbreak;\n\t\t\tcase \"ObjectIdentifier\":\n\t\t\t\tinnerFieldContent = DisplayStyle.getObjectIdentifier(field);\n\t\t\t\tbreak;\n\t\t\tcase \"ObjectStatus\": {\n\t\t\t\tinnerFieldContent = DisplayStyle.getObjectStatus(field);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"LabelSemanticKey\":\n\t\t\t\tinnerFieldContent = DisplayStyle.getLabelSemanticKey(field);\n\t\t\t\tbreak;\n\t\t\tcase \"Text\":\n\t\t\t\tinnerFieldContent = DisplayStyle.getTextTemplate(field);\n\t\t\t\tbreak;\n\t\t\tcase \"Masked\":\n\t\t\t\tinnerFieldContent = DisplayStyle.getPasswordTemplate(field);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tinnerFieldContent = \"\";\n\t\t}\n\t\tif (field.addDraftIndicator && innerFieldContent) {\n\t\t\tinnerFieldContent = DisplayStyle.addDraftIndicator(innerFieldContent, field);\n\t\t}\n\n\t\treturn innerFieldContent;\n\t}\n};\n\nexport default DisplayStyle;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAuFA,MAAMA,YAAY,GAAG;IACpBC,uBAAuBA,CAACC,KAA2B,EAAU;MAC5D,IAAIC,KAAK,GAAGD,KAAK,CAACE,QAAQ,CAACD,KAAK,IAAI,CAAC;MACrC,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;QAC9B;QACAA,KAAK,GAAGD,KAAK,CAACE,QAAQ,CAACC,SAAS,IAAI,CAAC;MACtC;MACA,OAAOC,IAAI,CAACC,GAAG,CAACJ,KAAK,EAAE,CAAC,CAAC;IAC1B,CAAC;IAEDK,wBAAwBA,CACvBN,KAA2B,EAC3BO,cAAgC,EAChCC,iBAAqD,EAC3C;MACV,OACCC,IAAA,CAACC,IAAI;QACJ,gBAAa,oDAAoD;QACjEC,IAAI,EAAC,oCAAoC;QACzCC,KAAK,EAAEZ,KAAK,CAACa,aAAa,CAACC,yBAA0B;QACrDC,OAAO,EAAEP,iBAAkB;QAC3BQ,gBAAgB,EAAEhB,KAAK,CAACiB,aAAa,EAAED,gBAAiB;QAAAE,QAAA,EAEvD;UACAC,UAAU,EAAGZ,cAAc,EAAca,KAAK,GAAIb,cAAc,CAAaa,KAAK,CAAC,CAAC,GAAGb;QACxF;MAAC,CACI,CAAC;IAET,CAAC;IAED;AACD;AACA;AACA;AACA;IACCc,0CAA0CA,CAACrB,KAA2B,EAAU;MAC/E;MACA,MAAMsB,oBAAoB,GAAGC,kCAAkC,CAACvB,KAAK,CAACwB,aAAa,CAAC;MACpF,MAAMC,cAAc,GAAGC,GAAG,CAACC,KAAK,CAACC,WAAW,CAACN,oBAAoB,CAAC,EAAEO,SAAS,CAAC,CAAC;MAC/E,MAAMC,QAAQ,GACbrB,IAAA,CAACsB,wBAAwB;QAACC,MAAM,EAAEhC,KAAK,CAACiC,8BAA+B;QAACC,cAAc,EAAElC,KAAK,CAACmC;MAAsB,CAAE,CACtH;MACD,IAAInC,KAAK,CAACiB,aAAa,CAACmB,WAAW,EAAE;QACpC,OACC3B,IAAA,CAAC4B,kBAAkB;UAACtB,OAAO,EAAEf,KAAK,CAACsC,cAAe;UAACC,SAAS,EAAEvC,KAAK,CAACwC,gCAAuD;UAAAtB,QAAA,EACzH;YACAuB,WAAW,EAAEX,QAAQ;YACrBY,YAAY,EAAE,IAAI,CAACpC,wBAAwB,CAACN,KAAK,EAAE8B,QAAQ,EAAEL,cAAc;UAC5E;QAAC,CACkB,CAAC;MAEvB,CAAC,MAAM;QACN,OAAOK,QAAQ;MAChB;IACD,CAAC;IAED;AACD;AACA;AACA;AACA;IACCa,iBAAiBA,CAAC3C,KAA2B,EAAU;MACtD,IAAI4C,QAAQ;MACZ,IAAI5C,KAAK,CAAC6C,OAAO,EAAE;QAClBD,QAAQ,GAAG5C,KAAK,CAAC6C,OAAO;MACzB,CAAC,MAAM,IAAI7C,KAAK,CAAC8C,QAAQ,EAAE;QAC1BF,QAAQ,GAAGG,QAAQ,CAAC,CAAC/C,KAAK,CAAC8C,QAAQ,EAAE,eAAe,CAAC,CAAC;MACvD;MAEA,MAAME,aAAa,GAAGC,eAAe,CAACC,oBAAoB,CAAClD,KAAK,CAACwB,aAAmD,CAAC;MAErH,MAAM2B,SAAS,GAAGF,eAAe,CAACG,eAAe,CAACpD,KAAK,CAACwB,aAAa,EAAE,CAAC,CAAC,CAAC;MAC1E,MAAM6B,kBAAkB,GAAGJ,eAAe,CAACK,cAAc,CAACtD,KAAK,CAACwB,aAAa,CAAC;MAE9E,OACCf,IAAA,CAAC8C,kBAAkB;QAACxC,OAAO,EAAEiC,aAAc;QAAA9B,QAAA,EAC1CT,IAAA,CAAC+C,MAAM;UACNC,EAAE,EAAEb,QAAS;UACbc,GAAG,EAAEP,SAAU;UACfQ,WAAW,EAAC,GAAG;UACfC,KAAK,EAAC,qBAAqB;UAC3BC,YAAY,EAAC,OAAO;UACpBC,YAAY,EAAET;QAAmB,CACjC;MAAC,CACiB,CAAC;IAEvB,CAAC;IAED;AACD;AACA;AACA;AACA;IACCU,iBAAiB,EAAG/D,KAA2B,IAAa;MAC3D,IAAIgE,IAAI,GAAGhE,KAAK,CAACiB,aAAa,EAAEgD,WAAW,IAAI,KAAK,GAAIjE,KAAK,CAACkE,iBAAiB,CAAoBC,OAAO,GAAGtC,SAAS;MACtH,MAAMlB,IAAI,GAAG,EAAEX,KAAK,CAACiB,aAAa,EAAEgD,WAAW,IAAI,KAAK,CAAC,GAAIjE,KAAK,CAACkE,iBAAiB,CAAoBE,KAAK,GAAGvC,SAAS;MACzH,MAAMwC,OAAO,GAAGrE,KAAK,CAACiB,aAAa,EAAEgD,WAAW,IAAI,KAAK,GAAIjE,KAAK,CAACkE,iBAAiB,CAAoBE,KAAK,GAAGvC,SAAS;MAEzH,IAAIyC,WAAW;MACf,IAAIC,aAAa;MACjB,IAAIC,wBAAwB;MAC5B,IAAIC,iCAAiC;MACrC,IAAIC,mBAAmB;MAEvB,IAAI1E,KAAK,CAACkE,iBAAiB,CAACS,KAAK,oDAAyC,EAAE;QAC3EL,WAAW,GAAGtE,KAAK,CAACa,aAAa,CAAC+D,uBAAuB;QAEzDL,aAAa,GAAGvE,KAAK,CAACkE,iBAAiB,CAACW,YAAY,GAAG7E,KAAK,CAACkE,iBAAiB,CAACW,YAAY,CAACC,OAAO,GAAG,IAAI;QAC1GN,wBAAwB,GAAGxE,KAAK,CAACkE,iBAAiB,CAACW,YAAY,GAC5D7E,KAAK,CAACkE,iBAAiB,CAACW,YAAY,CAACE,WAAW,EAAEC,IAAI,EAAEC,kBAAkB,GAC1E,OAAO;QACVR,iCAAiC,GAAGzE,KAAK,CAACkE,iBAAiB,CAACW,YAAY,GAAGhD,SAAS,GAAG,OAAO;QAE9F,IAAI2C,wBAAwB,IAAIA,wBAAwB,KAAK,OAAO,EAAE;UACrE,MAAMU,YAAY,GAAGlF,KAAK,CAACkE,iBAAiB,CAACW,YAAsB;UACnE,MAAMM,gBAAgB,GAAGD,YAAY,CAACE,UAAU,CAAC,CAAC,CAAC,CAACC,IAAI;UACxD;UACAZ,iCAAiC,GAAGa,iBAAiB,CACpDC,2BAA2B,CAC1Bf,wBAAwB,EACxB,EAAE,EACF3C,SAAS,EACR2D,IAAY,IAAK;YACjB,IAAIA,IAAI,CAACC,UAAU,CAACN,gBAAgB,CAAC,EAAE;cACtC,OAAOK,IAAI,CAACE,OAAO,CAACP,gBAAgB,GAAG,GAAG,EAAE,EAAE,CAAC;YAChD;YACA,OAAOK,IAAI;UACZ,CACD,CACD,CAAC;QACF;MACD;MAEA,IAAIxF,KAAK,CAACkE,iBAAiB,CAACS,KAAK,mEAAwD,EAAE;QAC1FL,WAAW,GAAGtE,KAAK,CAACa,aAAa,CAAC8E,kBAAkB;QACpDjB,mBAAmB,GAAG,IAAI;QAC1B,IACC1E,KAAK,CAACkE,iBAAiB,EAAES,KAAK,mEAAwD,IACtF3E,KAAK,CAACkE,iBAAiB,CAAC0B,mBAAmB,KAAK/D,SAAS,IACzDgE,MAAM,CAAC7F,KAAK,CAACiB,aAAa,CAAC6E,yBAAyB,CAAC,KAAK,MAAM,EAC/D;UACDpB,mBAAmB,GAAGY,iBAAiB,CAACC,2BAA2B,CAACvF,KAAK,CAACkE,iBAAiB,CAAC0B,mBAAmB,CAAC,CAAC;QAClH;MACD;MAEA,IAAIG,MAAM,GAAG,EAAE;MACf,IAAI/F,KAAK,CAACkE,iBAAiB,CAACS,KAAK,mEAAwD,EAAE;QAC1FoB,MAAM,GACLtF,IAAA,CAACuF,MAAM;UACNjF,OAAO,EAAEf,KAAK,CAACe,OAAQ;UACvBJ,IAAI,EAAEA,IAAK;UACXqD,IAAI,EAAEA,IAAK;UACXiC,OAAO,EAAEvB,mBAAoB;UAC7BL,OAAO,EAAEA,OAAQ;UACjBzD,KAAK,EAAE0D;QAAuF,CAC9F,CACD;MACF,CAAC,MAAM,IACN4B,WAAW,CAACC,8BAA8B,CACzCnG,KAAK,CAACkE,iBAAiB,EACvBK,aAAa,EACbC,wBACD,CAAC,EACA;QACD,IAAIyB,OAAkD,GAAGC,WAAW,CAACE,8BAA8B,CAClGpG,KAAK,CAACkE,iBAAiB,EACvBK,aAAa,EACbC,wBAAwB,EACxBC,iCACD,CAAC;QAED,IAAIzE,KAAK,CAACiB,aAAa,CAACoF,yBAAyB,EAAE;UAClDJ,OAAO,GAAGX,iBAAiB,CAACgB,GAAG,CAACC,oBAAoB,CAACN,OAAO,CAAC,EAAEO,EAAE,CAACC,oBAAoB,CAAC,CAAC;QACzF;QAEA,MAAMC,IAAI,GAAGC,uCAAuC,CAAC3G,KAAK,CAACwB,aAAmD,CAAC;QAC/GwC,IAAI,GAAGA,IAAI,KAAK4C,mBAAmB,CAAC5G,KAAK,CAACkE,iBAAuC,CAAC,GAAG2C,MAAM,GAAGhF,SAAS,CAAC;QAExGkE,MAAM,GACLtF,IAAA,CAACuF,MAAM;UACNpC,KAAK,EAAE5D,KAAK,CAAC4D,KAAM;UACnBjD,IAAI,EAAEA,IAAK;UACXqD,IAAI,EAAEA,IAAK;UACXK,OAAO,EAAEA,OAAQ;UACjBzD,KAAK,EAAE0D,WAAuF;UAC9F2B,OAAO,EAAEA,OAAQ;UACjBlF,OAAO,EAAEf,KAAK,CAACe,OAAQ;UACvB2F,IAAI,EAAEA;QAAK,CACX,CACD;MACF;MACA,OAAOX,MAAM;IACd,CAAC;IAED;AACD;AACA;AACA;AACA;IACCe,kBAAkBA,CAAC9G,KAA2B,EAAU;MACvD,MAAM+G,eAAe,GAAG/G,KAAK,CAACgH,QAAQ,CAACC,QAAQ,CAAC,CAAC,CAACC,oBAAoB,CAAC,wBAAwB,EAAElH,KAAK,CAACgH,QAAQ,CAAC;MAChH,MAAMG,cAAc,GAAGlE,eAAe,CAACC,oBAAoB,CAAClD,KAAK,CAACwB,aAAmD,CAAC;MAEtH,OACCf,IAAA,CAAC2G,OAAO;QACPtE,QAAQ,EAAE9C,KAAK,CAAC8C,QAAS;QACzBuE,cAAc,EAAErH,KAAK,CAACqH,cAAe;QACrCL,QAAQ,EAAED,eAAe,CAACO,OAAO,CAAC,CAAE;QACpCC,WAAW,EAAEvH,KAAK,CAACuH,WAAW,CAACD,OAAO,CAAC,CAAE;QACzCzE,OAAO,EAAE7C,KAAK,CAAC6C,OAAQ;QACvB9B,OAAO,EAAEoG,cAAe;QACxBK,kBAAkB,EAAExH,KAAK,CAACiB,aAAa,CAACuG;MAAmB,CAC3D,CAAC;IAEJ,CAAC;IAED;AACD;AACA;AACA;AACA;AACA;AACA;IACCC,qBAAqBA,CAACzH,KAA2B,EAAE0H,sBAA+B,EAAU;MAC3F,MAAMC,kBAAkB,GAAGC,kBAAkB,CAACC,uBAAuB,CAAC7H,KAAK,CAACgH,QAAQ,CAA2B;MAE/G,MAAMA,QAAQ,GACbW,kBAAkB,CAAChD,KAAK,wDAA6C,GAClE3E,KAAK,CAACgH,QAAQ,CAACC,QAAQ,CAAC,CAAC,CAACC,oBAAoB,CAAC,wBAAwB,EAAElH,KAAK,CAACgH,QAAQ,CAAC,GACxFhH,KAAK,CAACgH,QAAQ;MAElB,MAAM/F,aAAa,GAAG;QACrB6G,kBAAkB,EAAE9H,KAAK,CAACiB,aAAa,CAAC6G,kBAAkB;QAC1DN,kBAAkB,EAAExH,KAAK,CAACiB,aAAa,CAACuG;MACzC,CAAC;MAED,OACC/G,IAAA,CAACsH,SAAS;QACTjF,QAAQ,EAAE4E,sBAAsB,GAAG7F,SAAS,GAAG7B,KAAK,CAAC8C,QAAS;QAC9D/B,OAAO,EAAG,CAAC2G,sBAAsB,GAAG1H,KAAK,CAACsC,cAAc,GAAGT,SAA4C;QACvGwF,cAAc,EAAErH,KAAK,CAACqH,cAAc,GAAGrH,KAAK,CAACqH,cAAc,GAAGxF,SAAU;QACxEmF,QAAQ,EAAEA,QAAQ,CAACM,OAAO,CAAC,CAAE;QAC7BC,WAAW,EAAEvH,KAAK,CAACuH,WAAW,EAAED,OAAO,CAAC,CAAE;QAC1CU,KAAK,EAAEhI,KAAK,CAACgI,KAAM;QAAA9G,QAAA,EAElB;UACAD,aAAa,EAAER,IAAA,CAACwH,sBAAsB;YAAA,GAAKhH;UAAa,CAAG;QAC5D;MAAC,CACS,CAAC;IAEd,CAAC;IAED;AACD;AACA;AACA;AACA;IACCiH,oBAAoBA,CAAClI,KAA2B,EAAU;MACzD,IAAI,CAACA,KAAK,CAACiB,aAAa,CAACmB,WAAW,IAAI,KAAK,MAAMpC,KAAK,CAACmI,iBAAiB,IAAI,KAAK,CAAC,EAAE;QACrF,OACC1H,IAAA,CAAC4B,kBAAkB;UAACtB,OAAO,EAAEf,KAAK,CAACsC,cAAe;UAACC,SAAS,EAAEvC,KAAK,CAACwC,gCAAuD;UAAAtB,QAAA,EACzH;YACAuB,WAAW,EAAE,IAAI,CAACgF,qBAAqB,CAACzH,KAAK,EAAE,IAAI,CAAC;YACpD0C,YAAY,EAAE,IAAI,CAACpC,wBAAwB,CAACN,KAAK,EAAE,IAAI,CAACyH,qBAAqB,CAACzH,KAAK,EAAE,IAAI,CAAC;UAC3F;QAAC,CACkB,CAAC;MAEvB,CAAC,MAAM;QACN,OAAO,IAAI,CAACyH,qBAAqB,CAACzH,KAAK,EAAE,KAAK,CAAC;MAChD;IACD,CAAC;IAED;AACD;AACA;AACA;AACA;IACCoI,iBAAiBA,CAACpI,KAA2B,EAAU;MACtD,OACCS,IAAA,CAAC4H,cAAc;QACd5E,EAAE,EAAEzD,KAAK,EAAEsI,cAAe;QAC1BvH,OAAO,EAAEf,KAAK,EAAEsC,cAAe;QAC/B3B,IAAI,EAAEX,KAAK,CAACW,IAAK;QACjB4H,YAAY,EAAEvI,KAAK,EAAEiB,aAAa,EAAEuH,yBAA0B;QAC9DC,aAAa,EAAEzI,KAAK,EAAEiB,aAAa,EAAEyH,wBAAyB;QAC9DC,kBAAkB,EAAE3I,KAAK,EAAE2I;MAAmB,CAC9C,CAAC;IAEJ,CAAC;IAED;AACD;AACA;AACA;AACA;IACCC,eAAeA,CAAC5I,KAA2B,EAAU;MACpD,IAAI6I,aAAa;MAEjB,MAAMC,kBAAkB,GAAGxD,iBAAiB,CAC3C5D,GAAG,CAACC,KAAK,CAACC,WAAW,CAAC,GAAG5B,KAAK,CAAC+I,wBAAwB,yBAAyB,CAAC,EAAE,IAAI,CAAC,CACzF,CAAC;MAED,MAAMC,sBAAsB,GAAGhJ,KAAK,CAACgJ,sBAAsB,GAAG,WAAW,GAAGhJ,KAAK,CAACgJ,sBAAsB,GAAG,KAAK,GAAG,EAAE;;MAErH;MACA,MAAMC,aAAa,GAAGhG,eAAe,CAACG,eAAe,CAACpD,KAAK,CAACwB,aAAa,EAAE,CAAC,CAAC,CAAC;MAC9E,MAAM0H,gBAAgB,GAAIlJ,KAAK,CAACE,QAAQ,CAAC6E,WAAW,CAACC,IAAI,EAAEmE,kBAAkB,EAAEC,QAAQ,EAAuC5D,IAAI;MAClI,MAAM6D,aAAa,GAClBrJ,KAAK,CAACE,QAAQ,CAAC6E,WAAW,CAACC,IAAI,EAAEsE,SAAS,IAC1ChE,iBAAiB,CAACC,2BAA2B,CAACvF,KAAK,CAACE,QAAQ,CAAC6E,WAAW,CAACC,IAAI,EAAEsE,SAAS,CAAC,CAAC;;MAE3F;MACA,MAAMC,WAAW,GAChB,CAAC,CAACvJ,KAAK,CAACE,QAAQ,CAAC6E,WAAW,CAACyB,EAAE,EAAEgD,UAAU,IAC3C,CAAC,CAACxJ,KAAK,CAACE,QAAQ,CAAC6E,WAAW,CAACyB,EAAE,EAAEiD,OAAO,IACxC,UAAU,CAACC,IAAI,CAAC1J,KAAK,CAACE,QAAQ,CAAC6E,WAAW,CAACC,IAAI,EAAEsE,SAAS,EAAEK,QAAQ,CAAC,CAAC,IAAI,EAAE,CAAC;;MAE9E;MACA,MAAMC,aAAa,GAAG3G,eAAe,CAACG,eAAe,CAACpD,KAAK,CAACwB,aAAa,EAAE,CAAC,CAAC,CAAC;MAC9E,MAAMqI,sBAAsB,GAAG5G,eAAe,CAACK,cAAc,CAACtD,KAAK,CAACwB,aAAa,CAAC;;MAElF;MACA,MAAMsI,WAAW,GAAG5D,WAAW,CAAC6D,oBAAoB,CAAC/J,KAAK,CAAC+I,wBAAwB,CAAC;;MAEpF;MACA,MAAMiB,YAAY,GAAG9D,WAAW,CAAC+D,eAAe,CAACjB,sBAAsB,EAAE,oDAAoD,CAAC;MAC9H,MAAMkB,YAAY,GAAGhE,WAAW,CAACiE,cAAc,CAAClB,aAAa,IAAI,EAAE,CAAC;;MAEpE;MACA,MAAMmB,eAAe,GAAG9E,iBAAiB,CAAC3D,KAAK,CAACC,WAAW,CAAC,GAAG5B,KAAK,CAAC+I,wBAAwB,yBAAyB,CAAC,EAAE,IAAI,CAAC,CAAC;MAE/H,IAAIsB,wBAAwB;MAC5B;MACA,IAAIrK,KAAK,CAACE,QAAQ,CAAC6E,WAAW,CAACC,IAAI,EAAEsF,oBAAoB,EAAE;QAC1D,MAAMC,aAAa,GAAGC,KAAK,CAACC,IAAI,CAACzK,KAAK,CAACE,QAAQ,CAAC6E,WAAW,CAACC,IAAI,CAACsF,oBAA2C,CAAC,CAACI,GAAG,CAC/GhE,IAAI,IAAK,IAAIA,IAAI,GACnB,CAAC;QACD2D,wBAAwB,GAAG,uBAAuBE,aAAa,CAACI,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;MACjF;MACA,MAAMC,eAAe,GAAG1E,WAAW,CAAC2E,mBAAmB,CAAC7K,KAAK,CAACE,QAAQ,CAAC4K,SAAS,CAAC;MAEjF,IAAIvB,WAAW,EAAE;QAChBV,aAAa,GAAG;UACfkC,MAAM,EACLtK,IAAA,CAAC+C,MAAM;YACNzC,OAAO,EAAEf,KAAK,CAACsC,cAAe;YAC9BoB,GAAG,EAAEkG,aAAc;YACnBjG,WAAW,EAAC,GAAG;YACfC,KAAK,EAAC,qBAAqB;YAC3BC,YAAY,EAAC,OAAO;YACpBC,YAAY,EAAE+F,sBAAuB;YAAA3I,QAAA,EAEpC;cACA8J,UAAU,EAAEvK,IAAA,CAACwK,eAAe;gBAACC,SAAS,EAAC;cAAQ,CAAE;YAClD;UAAC,CACM;QAEV,CAAC;MACF,CAAC,MAAM;QACNrC,aAAa,GAAG;UACf7E,IAAI,EAAEvD,IAAA,CAAC0K,IAAI;YAACzH,GAAG,EAAEoG,WAAY;YAAClG,KAAK,EAAC,qBAAqB;YAAC7C,OAAO,EAAE+H;UAAmB,CAAE,CAAC;UACzFsC,IAAI,EACH3K,IAAA,CAACC,IAAI;YACJC,IAAI,EAAEqJ,YAAa;YACnBqB,MAAM,EAAC,QAAQ;YACfC,IAAI,EAAEpB,YAAa;YACnBnJ,OAAO,EAAE+H,kBAAmB;YAC5ByC,QAAQ,EAAC,MAAM;YACfvK,gBAAgB,EAAEhB,KAAK,CAACiB,aAAa,EAAED;UAAiB,CACxD,CACD;UACDL,IAAI,EAAEF,IAAA,CAAC+K,IAAI;YAAC7C,kBAAkB,EAAE3I,KAAK,CAAC2I,kBAAmB;YAAChI,IAAI,EAAC,EAAE;YAACI,OAAO,EAAEqJ;UAAgB,CAAE;QAC9F,CAAC;MACF;MAEA,IAAI,CAACpK,KAAK,CAACyL,QAAQ,IAAIzL,KAAK,CAAC0L,gBAAgB,MAAMC,aAAa,CAACC,OAAO,EAAE;QACzE,MAAMC,gBAAgB,GAAG7L,KAAK,CAAC8L,oBAAoB,GAAG9L,KAAK,CAACa,aAAa,CAACkL,kBAAkB,GAAGlK,SAAS;QACxG,MAAMmK,eAAe,GAAGhM,KAAK,CAAC8L,oBAAoB,GAAG9L,KAAK,CAACa,aAAa,CAACoL,mBAAmB,GAAGpK,SAAS;QAExGgH,aAAa,GAAG;UACf,GAAGA,aAAa;UAChBqD,YAAY,EACXzL,IAAA,CAAC0L,YAAY;YACZ9G,IAAI,EAAC,gBAAgB;YACrBtE,OAAO,EAAEf,KAAK,CAACoM,mBAAoB;YACnCC,UAAU,EAAC,MAAM;YACjBC,QAAQ,EAAC,MAAM;YACfC,QAAQ,EAAC,OAAO;YAChBlI,OAAO,EAAC,0DAA0D;YAClEL,IAAI,EAAC,mBAAmB;YACxBwI,KAAK,EAAC,aAAa;YACnBC,OAAO,EAAC,MAAM;YACdC,YAAY,EAAC,OAAO;YACpBC,mBAAmB,EAAC,MAAM;YAC1BC,QAAQ,EAAEvC,wBAAyB;YACnCwC,aAAa,EACZ7M,KAAK,CAACa,aAAa,CAACiM,mBACpB;YACDC,eAAe,EAAEnC,eAAgB;YACjCoC,cAAc,EACbhN,KAAK,CAACa,aAAa,CAACoM,oBACpB;YACDC,cAAc,EAAC,OAAO;YACtBC,cAAc,EACbnN,KAAK,CAACa,aAAa,CAACuM,oBACpB;YACDC,iBAAiB,EAAErN,KAAK,CAACsN,sBAAsB,GAAGC,6BAA6B,CAACC,GAAG,GAAG,KAAM;YAC5FC,MAAM,EAAEzN,KAAK,CAACa,aAAa,CAAC6M,YAAsE;YAClG7B,gBAAgB,EAAEA,gBAAuD;YACzE8B,gBAAgB,EAAE3B,eAAsD;YACxE4B,WAAW,EAAE5N,KAAK,CAACa,aAAa,CAACkL;UAAiF,CAClH,CACD;UACD8B,YAAY,EACXpN,IAAA,CAACuF,MAAM;YACNhC,IAAI,EAAC,uBAAuB;YAC5B0C,IAAI,EAAC,aAAa;YAClB9F,KAAK,EAAEZ,KAAK,CAACa,aAAa,CAACiN,YAAmD;YAC9EzJ,OAAO,EAAC,0DAA0D;YAClEtD,OAAO,EAAEf,KAAK,CAACoM,mBAAoB;YACnCnG,OAAO,EAAE6C;UAAmB,CAC5B;QAEH,CAAC;MACF;MAEA,OACCrI,IAAA,CAACsN,WAAW;QACX,gBAAa,gEAAgE;QAC7EhN,OAAO,EAAEf,KAAK,CAACe,OAAQ;QACvBiN,SAAS,EAAE/E,aAAc;QACzBgF,YAAY,EAAEjO,KAAK,CAAC+I,wBAAyB;QAC7CmF,QAAQ,EAAEhF,gBAAiB;QAC3BiF,SAAS,EAAE9E,aAAc;QACzB+E,aAAa,EAAEpO,KAAK,CAACoO,aAAc;QACnCC,kBAAkB,EAAErO,KAAK,CAACa,aAAa,CAACwN,kBAAwE;QAAAnN,QAAA,EAE/G;UACA8J,UAAU,EAAEvK,IAAA,CAAC6N,UAAU;YAAkBtG,KAAK,EAAEhI,KAAK,CAACuO;UAAe,GAAzC,YAA2C,CAAC;UACxE1F;QACD;MAAC,CACW,CAAC;IAEhB,CAAC;IAED;AACD;AACA;AACA;AACA;IACC2F,eAAeA,CAACxO,KAA2B,EAAU;MACpD,IAAIyO,OAAO;MACX,IAAIC,OAAO;MACX,IAAIC,WAAW;MAEf,IAAIC,UAAkC;MAEtC,QAAQ5O,KAAK,CAACkE,iBAAiB,CAACS,KAAK;QACpC;UACC,OACClE,IAAA,CAACC,IAAI;YACJ+C,EAAE,EAAEzD,KAAK,CAACsI,cAAe;YACzBvH,OAAO,EAAEf,KAAK,CAACsC,cAAe;YAC9B3B,IAAI,EAAEb,YAAY,CAAC+O,yBAAyB,CAAC7O,KAAK,CAAE;YACpDY,KAAK,EAAEZ,KAAK,CAACa,aAAa,CAAC8E,kBAAmE;YAC9F0B,cAAc,EAAErH,KAAK,CAACqH,cAAqD;YAC3EsB,kBAAkB,EAAE3I,KAAK,CAAC2I,kBAAmB;YAC7C/E,KAAK,EAAC,8BAA8B;YACpCkL,cAAc,EAAEC,kBAAkB,CAAC/I,MAAO;YAC1ChF,gBAAgB,EAAEhB,KAAK,CAACiB,aAAa,EAAED;UAAiB,CACxD,CAAC;QAEJ;UACC,OACCP,IAAA,CAACC,IAAI;YACJ+C,EAAE,EAAEzD,KAAK,CAACsI,cAAe;YACzB,gBAAa,gEAAgE;YAC7EvH,OAAO,EAAEf,KAAK,CAACsC,cAAe;YAC9B3B,IAAI,EAAEX,KAAK,CAACW,IAAK;YACjBC,KAAK,EAAEZ,KAAK,CAACa,aAAa,CAACmO,6BAA8E;YACzG/I,OAAO,EAAEjG,KAAK,CAACiB,aAAa,CAACoF,yBAAyB,GAAGG,EAAE,CAACC,oBAAoB,GAAG5E,SAAU;YAC7FwF,cAAc,EAAErH,KAAK,CAACqH,cAAqD;YAC3EsB,kBAAkB,EAAE3I,KAAK,CAAC2I,kBAAmB;YAC7C3H,gBAAgB,EAAEhB,KAAK,CAACiB,aAAa,EAAED,gBAAiB;YACxD4C,KAAK,EAAC;UAA8B,CACpC,CAAC;QAEJ;UACC,OACCnD,IAAA,CAACC,IAAI;YACJ+C,EAAE,EAAEzD,KAAK,CAACsI,cAAe;YACzBvH,OAAO,EAAEf,KAAK,CAACsC,cAAe;YAC9B3B,IAAI,EAAEX,KAAK,CAACW,IAAK;YACjBC,KAAK,EAAEZ,KAAK,CAACa,aAAa,CAAC+D,uBAAwE;YACnGqB,OAAO,EAAEjG,KAAK,CAACiB,aAAa,CAACoF,yBAAyB,GAAGG,EAAE,CAACC,oBAAoB,GAAG5E,SAAU;YAC7FwF,cAAc,EAAErH,KAAK,CAACqH,cAAqD;YAC3EsB,kBAAkB,EAAE3I,KAAK,CAAC2I,kBAAmB;YAC7C/E,KAAK,EAAC,8BAA8B;YACpCkL,cAAc,EAAEC,kBAAkB,CAAC/I,MAAO;YAC1ChF,gBAAgB,EAAEhB,KAAK,CAACiB,aAAa,EAAED;UAAiB,CACxD,CAAC;QAEJ;UACC,MAAMiO,eAAe,GAAGjP,KAAK,CAACE,QAAQ,CAAC6E,WAAW,CAACmK,KAAK,EAAEC,UAAU;UACpEnP,KAAK,CAACW,IAAI,GAAGb,YAAY,CAAC+O,yBAAyB,CAAC7O,KAAK,CAAC;UAC1D0O,OAAO,GAAI1O,KAAK,CAACkE,iBAAiB,CAAoBC,OAAO,GAC1DmB,iBAAiB,CACjBC,2BAA2B,CACzBvF,KAAK,CAACkE,iBAAiB,CAAoBC,OAC7C,CACA,CAAC,GACDtC,SAAS;UACZ,MAAMuN,WAAW,GAAG7J,2BAA2B,CAC7CvF,KAAK,CAACkE,iBAAiB,CAAsBmL,GAC/C,CAAC;UACDZ,OAAO,GAAGnJ,iBAAiB,CAAC8J,WAAW,CAAC;UACxCT,WAAW,GAAGrJ,iBAAiB,CAAC5D,GAAG,CAACC,KAAK,CAACyN,WAAW,EAAE,EAAE,CAAC,CAAC,CAAC;UAC5DR,UAAU,GAAGK,eAAe,IAAKA,eAAe,CAACtF,QAAQ,CAAC,CAAgB;MAC5E;MAEA,IAAI3J,KAAK,CAACE,QAAQ,CAAC6E,WAAW,EAAEuK,aAAa,EAAEC,cAAc,IAAIvP,KAAK,CAACE,QAAQ,CAAC6E,WAAW,EAAEuK,aAAa,EAAEE,aAAa,EAAE;QAC1H,MAAMC,kBAAkB,GAAGzP,KAAK,CAACE,QAAQ,CAAC6E,WAAW,CAACuK,aAAa,EAAEC,cAAc,KAAK1N,SAAS;QACjG,MAAM6N,iBAAiB,GAAG1P,KAAK,CAACE,QAAQ,CAAC6E,WAAW,CAACuK,aAAa,EAAEE,aAAa,KAAK3N,SAAS;QAC/F,MAAM8N,oBAAoB,GAAG1M,eAAe,CAACG,eAAe,CAACpD,KAAK,CAACwB,aAAa,EAAE,CAAC,CAAC,CAAC;QACrF,MAAMoO,WAAW,GAAG5P,KAAK,CAACsI,cAAc,GAAGtI,KAAK,CAACsI,cAAc,GAAG,YAAYuH,GAAG,CAAC,CAAC,EAAE;QACrF,IAAIJ,kBAAkB,EAAE;UACvBhB,OAAO,GAAG,UAAUkB,oBAAoB,EAAE;UAC1C,OACClP,IAAA,CAACqP,KAAK;YACLrM,EAAE,EAAEmM,WAAY;YAChB7O,OAAO,EAAEf,KAAK,CAACsC,cAAe;YAC9B3B,IAAI,EAAEX,KAAK,CAACW,IAAK;YACjBoP,IAAI,EAAEJ,oBAAqB;YAC3BtI,cAAc,EAAErH,KAAK,CAACqH,cAAc,GAAGrH,KAAK,CAACqH,cAAc,GAAGxF,SAAU;YACxE8G,kBAAkB,EAAE3I,KAAK,CAAC2I;UAAmB,CAC7C,CAAC;QAEJ;QACA,IAAI+G,iBAAiB,EAAE;UACtBjB,OAAO,GAAG,OAAOkB,oBAAoB,EAAE;UACvC,OACClP,IAAA,CAACC,IAAI;YACJ+C,EAAE,EAAEzD,KAAK,CAACsI,cAAe;YACzBvH,OAAO,EAAEf,KAAK,CAACsC,cAAe;YAC9B3B,IAAI,EAAEb,YAAY,CAAC+O,yBAAyB,CAAC7O,KAAK,CAAE;YACpDsL,IAAI,EAAEmD,OAAQ;YACdxI,OAAO,EAAE0I,WAAY;YACrBtH,cAAc,EAAErH,KAAK,CAACqH,cAAqD;YAC3EsB,kBAAkB,EAAE3I,KAAK,CAAC2I,kBAAmB;YAC7C/E,KAAK,EAAC,8BAA8B;YACpC5C,gBAAgB,EAAEhB,KAAK,CAACiB,aAAa,EAAED;UAAiB,CACxD,CAAC;QAEJ;MACD;MAEA,IAAI0N,OAAO,EAAE;QACZ,OACCjO,IAAA,CAACuP,YAAY;UACZ,gBAAa,gEAAgE;UAC7EvM,EAAE,EAAEzD,KAAK,CAACsI,cAAe;UACzBtE,IAAI,EAAE0K,OAAQ;UACd3N,OAAO,EAAEf,KAAK,CAACsC,cAAe;UAC9B3B,IAAI,EAAEX,KAAK,CAACW,IAAK;UACjBC,KAAK,EAAEZ,KAAK,CAACa,aAAa,CAACoP,gBAAuD;UAClFC,MAAM,EAAEvB,WAAY;UACpBhG,kBAAkB,EAAE3I,KAAK,CAAC2I,kBAAmB;UAC7CtB,cAAc,EAAErH,KAAK,CAACqH,cAAqD;UAC3ErG,gBAAgB,EAAEhB,KAAK,CAACiB,aAAa,EAAED,gBAAiB;UAAAE,QAAA,EAEvD;YACA8J,UAAU,EAAEvK,IAAA,CAAC6N,UAAU;cAAatG,KAAK,EAAEyG;YAAQ,GAAtB,KAAwB;UACtD;QAAC,CACY,CAAC;MAEjB,CAAC,MAAM;QACN,OACChO,IAAA,CAACC,IAAI;UACJ+C,EAAE,EAAEzD,KAAK,CAACsI,cAAe;UACzBvH,OAAO,EAAEf,KAAK,CAACsC,cAAe;UAC9B3B,IAAI,EAAEX,KAAK,CAACW,IAAK;UACjB2K,IAAI,EAAEmD,OAAQ;UACdxI,OAAO,EAAE0I,WAAY;UACrBtD,MAAM,EAAEuD,UAAU,KAAK/M,SAAS,GAAG,MAAM,GAAG+M,UAAW;UACvDrD,QAAQ,EAAEvL,KAAK,CAACmQ,IAAI,KAAKtO,SAAS,GAAG,IAAI,GAAG7B,KAAK,CAACmQ,IAAK;UACvD9I,cAAc,EAAErH,KAAK,CAACqH,cAAqD;UAC3EsB,kBAAkB,EAAE3I,KAAK,CAAC2I,kBAAmB;UAC7C3H,gBAAgB,EAAEhB,KAAK,CAACiB,aAAa,EAAED;QAAiB,CACxD,CAAC;MAEJ;IACD,CAAC;IAED;AACD;AACA;AACA;AACA;IACCoP,0BAA0BA,CAACpQ,KAA2B,EAAsB;MAC3E,MAAMqQ,6BAA6B,GAAGC,SAAS,CAACC,gCAAgC,CAACvQ,KAAK,CAACwB,aAAa,CAAC;MACrG,IAAI6O,6BAA6B,EAAE;QAClC,MAAMG,0BAA0B,GAAGxQ,KAAK,CAACwB,aAAa,CAACiP,gBAAgB,CAACC,oBAAoB;QAC5F,MAAMC,aAAa,GAAGH,0BAA0B,CAACI,IAAI,CAAEC,OAAO,IAAKA,OAAO,CAACxL,IAAI,KAAKgL,6BAA6B,CAAC;QAClH,MAAMS,aAAa,GAAGH,aAAa,EAAEI,qBAAqB;QAC1D,MAAMC,GAAG,GAAGF,aAAa,EAAEG,MAAM,IAAI,OAAOH,aAAa,CAAC,CAAC,CAAC,KAAK,QAAQ,IAAIA,aAAa,CAAC,CAAC,CAAC,CAACI,cAAc;QAC5G,MAAMC,UAAU,GAAGH,GAAG,GAAG,GAAGX,6BAA6B,IAAIW,GAAG,EAAE,GAAGnP,SAAS;QAC9E,IAAIsP,UAAU,KAAKtP,SAAS,EAAE;UAC7B,OAAOsP,UAAU;QAClB;MACD;MACA,OAAOtP,SAAS;IACjB,CAAC;IAED;AACD;AACA;AACA;AACA;IACCuP,4BAA4BA,CAACpR,KAA2B,EAAU;MACjE,MAAMqR,sBAAsB,GAAGf,SAAS,CAACC,gCAAgC,CAACvQ,KAAK,CAACwB,aAAa,CAAC,GAC3F,IAAI,CAAC4O,0BAA0B,CAACpQ,KAAK,CAAC,GACtC6B,SAAS;MACZ,MAAMyP,UAA4C,GAAG;QACpD9L,IAAI,EAAE,GAAG6L,sBAAsB,EAAE;QACjCE,KAAK,EAAE;MACR,CAAC;MACD,OAAO,GAAGjM,iBAAiB,CAACkM,MAAM,CAAC7P,KAAK,CAAC0P,sBAAsB,EAAExP,SAAS,CAAC,EAAE4P,QAAQ,CAAC,IAAI,CAAC,EAAE/P,GAAG,CAACC,KAAK,CAAC,IAAI,EAAE2P,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE;IAC9H,CAAC;IAED;AACD;AACA;AACA;AACA;AACA;IACCI,oCAAoCA,CAAC1R,KAA2B,EAAEW,IAAsC,EAAU;MACjH,OACCF,IAAA,CAACC,IAAI;QACJ+C,EAAE,EAAEzD,KAAK,CAACsI,cAAe;QACzB,gBAAa,gEAAgE;QAC7E3H,IAAI,EAAEA,IAAK;QACXI,OAAO,EAAEf,KAAK,CAACsC,cAAe;QAC9BiJ,QAAQ,EAAEvL,KAAK,CAACmQ,IAAI,KAAKtO,SAAS,GAAG,IAAI,GAAG7B,KAAK,CAACmQ,IAAK;QACvDvP,KAAK,EAAEZ,KAAK,CAACa,aAAa,CAAC8Q,WAAY;QACvCtK,cAAc,EAAErH,KAAK,CAACqH,cAAqD;QAC3EsB,kBAAkB,EAAE3I,KAAK,CAAC2I,kBAAmB;QAC7CmG,cAAc,EAAEC,kBAAkB,CAAC/I,MAAO;QAC1ChF,gBAAgB,EAAEhB,KAAK,CAACiB,aAAa,EAAED,gBAAiB;QAAAE,QAAA,EAEvD;UACA8J,UAAU,EAAE,CAACvK,IAAA,CAAC6N,UAAU;YAAmBtG,KAAK,EAAEhI,KAAK,CAACiC;UAA+B,GAAzD,WAA2D,CAAC,CAAC;UAC3Fd,UAAU,EAAErB,YAAY,CAAC8R,sBAAsB,CAAC5R,KAAK;QACtD;MAAC,CACI,CAAC;IAET,CAAC;IAED;AACD;AACA;AACA;AACA;AACA;AACA;IACC6R,uCAAuCA,CACtC7R,KAA2B,EAC3BuC,SAA2C,EAC3C5B,IAAsC,EAC7B;MACT,OACCF,IAAA,CAACqR,QAAQ;QACRrO,EAAE,EAAEzD,KAAK,CAACsI,cAAe;QACzB,gBAAa,gEAAgE;QAC7EyJ,UAAU,EAAExP,SAAgC;QAC5CyP,cAAc,EAAEhS,KAAK,CAACgS,cAAe;QACrCrR,IAAI,EAAEA,IAAK;QACXI,OAAO,EAAEf,KAAK,CAACsC,cAAe;QAC9BiJ,QAAQ,EAAEvL,KAAK,CAACmQ,IAAI,KAAKtO,SAAS,GAAG,IAAI,GAAG7B,KAAK,CAACmQ,IAAK;QACvDvP,KAAK,EAAEZ,KAAK,CAACa,aAAa,CAAC8Q,WAAY;QACvCtK,cAAc,EAAErH,KAAK,CAACqH,cAAe;QACrCsB,kBAAkB,EAAE3I,KAAK,CAAC2I,kBAAmB;QAAAzH,QAAA,EAE5C;UACA8J,UAAU,EAAE,CAACvK,IAAA,CAAC6N,UAAU;YAAmBtG,KAAK,EAAEhI,KAAK,CAACiC;UAA+B,GAAzD,WAA2D,CAAC,CAAC;UAC3Fd,UAAU,EAAErB,YAAY,CAAC8R,sBAAsB,CAAC5R,KAAK;QACtD;MAAC,CACQ,CAAC;IAEb,CAAC;IAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;IACCiS,yCAAyCA,CACxCjS,KAA2B,EAC3BuC,SAAiB,EACjBE,WAAmB,EACnBC,YAAoB,EACX;MACT,OACCjC,IAAA,CAAC4B,kBAAkB;QAACtB,OAAO,EAAEf,KAAK,CAACsC,cAAe;QAACC,SAAS,EAAEA,SAAgC;QAAArB,QAAA,EAC5F;UACAuB,WAAW,EAAEA,WAAW;UACxBC,YAAY,EAAEA;QACf;MAAC,CACkB,CAAC;IAEvB,CAAC;IAED;AACD;AACA;AACA;AACA;IACCwP,4BAA4BA,CAAClS,KAA2B,EAAU;MACjE,MAAMW,IAAI,GAAGX,KAAK,CAACiB,aAAa,CAACkR,yBAAyB,GACvDnS,KAAK,CAACoS,iBAAiB,GACvBtS,YAAY,CAAC+O,yBAAyB,CAAC7O,KAAK,CAAC;MAChD,MAAMuC,SAAS,GAAG,IAAI,CAAC8P,qBAAqB,CAACrS,KAAK,CAAC;MACnD,IAAIuC,SAAS,KAAK,MAAM,EAAE;QACzB,OAAO,IAAI,CAACmP,oCAAoC,CAAC1R,KAAK,EAAEW,IAAI,CAAC;MAC9D;MACA,OAAO,IAAI,CAACkR,uCAAuC,CAAC7R,KAAK,EAAEuC,SAAS,EAAE5B,IAAI,CAAC;IAC5E,CAAC;IAED;AACD;AACA;AACA;AACA;IACC2R,eAAeA,CAACtS,KAA2B,EAAU;MACpD,IAAIA,KAAK,CAACiB,aAAa,CAACkR,yBAAyB,EAAE;QAClD,OACC1R,IAAA,CAAC+K,IAAI;UACJ/H,EAAE,EAAEzD,KAAK,CAACsI,cAAe;UACzBvH,OAAO,EAAEf,KAAK,CAACsC,cAAe;UAC9B3B,IAAI,EAAEX,KAAK,CAACoS,iBAAkB;UAC9B,gBAAa,oDAAoD;UACjEzJ,kBAAkB,EAAE3I,KAAK,CAAC2I,kBAAmB;UAC7C4J,gBAAgB,EAAC;QAAM,CACvB,CAAC;MAEJ,CAAC,MAAM;QACN;QACA;QACA,IAAIC,UAAU;QACd,IAAIxS,KAAK,CAACiB,aAAa,CAACwR,WAAW,KAAK,aAAa,IAAIzS,KAAK,CAACiC,8BAA8B,EAAE;UAC9FuQ,UAAU,GAAG/R,IAAA,CAAC6N,UAAU;YAAoBtG,KAAK,EAAEhI,KAAK,CAACiC;UAA+B,GAA3D,cAA6D,CAAC;QAC5F;QACA,OACCxB,IAAA,CAAC+K,IAAI;UACJ/H,EAAE,EAAEzD,KAAK,CAACsI,cAAe;UACzBvH,OAAO,EAAEf,KAAK,CAACsC,cAAe;UAC9B3B,IAAI,EAAEX,KAAK,CAACW,IAAK;UACjB4K,QAAQ,EAAEvL,KAAK,CAACmQ,IAAK;UACrBxH,kBAAkB,EAAE3I,KAAK,CAAC2I,kBAAmB;UAC7C4J,gBAAgB,EAAC,MAAM;UAAArR,QAAA,EAEtBsR;QAAU,CACN,CAAC;MAET;IACD,CAAC;IAED;AACD;AACA;AACA;AACA;IACCE,mBAAmBA,CAAC1S,KAA2B,EAAU;MACxD,MAAM2S,WAAW,GAAG1P,eAAe,CAAC2P,cAAc,CAAC5S,KAAK,CAACwB,aAAa,EAAExB,KAAK,CAACiB,aAAa,EAAE,IAAI,CAAC;MAClG,MAAM4R,cAAc,GACnBC,uBAAuB,CAACH,WAAW,CAAC,IAAI,OAAOA,WAAW,KAAK,QAAQ,GACpErN,iBAAiB,CAACyN,YAAY,CAAC,CAACJ,WAAW,CAAC,EAAEK,eAAe,CAACC,kBAAkB,CAAC,CAAC,GAClF3N,iBAAiB,CAACqN,WAAW,CAAC;MAClC,OACClS,IAAA,CAAC+K,IAAI;QACJ,gBAAa,4DAA4D;QACzE/H,EAAE,EAAEzD,KAAK,CAACsI,cAAe;QACzBvH,OAAO,EAAEf,KAAK,CAACsC,cAAe;QAC9B3B,IAAI,EAAEkS,cAAe;QACrBtH,QAAQ,EAAEvL,KAAK,CAACmQ,IAAK;QACrBoC,gBAAgB,EAAC;MAAM,CACjB,CAAC;IAEV,CAAC;IAED;AACD;AACA;AACA;AACA;IACCW,mBAAmBA,CAAClT,KAA2B,EAAU;MACxD,IAAImB,UAA+B;MACnC,IAAIgS,WAAW;MACf,IAAInT,KAAK,CAACoT,YAAY,EAAE;QACvBD,WAAW,GAAG,IAAI,CAACd,qBAAqB,CAACrS,KAAK,CAAC;QAC/CmB,UAAU,GAAGrB,YAAY,CAAC8R,sBAAsB,CAAC5R,KAAK,CAAC;MACxD,CAAC,MAAM;QACNmT,WAAW,GAAG,KAAK;MACpB;MAEA,IAAIE,UAAU,GACb5S,IAAA,CAAC6S,gBAAgB;QAChB,gBAAa,gEAAgE;QAC7E7P,EAAE,EAAEzD,KAAK,CAACsI,cAAe;QACzBiL,KAAK,EAAEvT,KAAK,CAACwT,eAAgB;QAC7B7S,IAAI,EAAEX,KAAK,CAACyT,cAAe;QAC3BN,WAAW,EAAEA,WAAY;QACzBO,UAAU,EAAE1T,KAAK,CAACa,aAAa,CAAC8Q,WAAY;QAC5CtK,cAAc,EAAErH,KAAK,CAACqH,cAAqD;QAC3EsB,kBAAkB,EAAE3I,KAAK,CAAC2I,kBAAmB;QAC7C3H,gBAAgB,EAAEhB,KAAK,CAACiB,aAAa,EAAED,gBAAiB;QAAAE,QAAA,EAEvD;UACA8J,UAAU,EAAE,CAACvK,IAAA,CAAC6N,UAAU;YAAmBtG,KAAK,EAAEhI,KAAK,CAACiC;UAA+B,GAAzD,WAA2D,CAAC,CAAC;UAC3Fd,UAAU,EAAEA;QACb;MAAC,CACgB,CAClB;MACD,IAAInB,KAAK,CAAC2T,sBAAsB,EAAE;QACjCN,UAAU,GACTO,KAAA,CAACC,IAAI;UAACC,UAAU,EAAC,QAAQ;UAACC,cAAc,EAAC,cAAc;UAACC,KAAK,EAAC,MAAM;UAAA9S,QAAA,GAClEmS,UAAU,EACX5S,IAAA,CAACwT,mBAAmB;YAAC1M,WAAW,EAAEvH,KAAK,CAACuH,WAAW,CAACD,OAAO,CAAC,CAAE;YAAC2G,YAAY,EAAEjO,KAAK,CAACkU;UAAgC,CAAE,CAAC;QAAA,CACjH,CACN;MACF;MACA,IAAIlU,KAAK,CAACmU,kBAAkB,IAAInU,KAAK,CAACoU,qBAAqB,EAAE;QAC5Df,UAAU,GACTO,KAAA,CAACS,IAAI;UAAAnT,QAAA,GACHmS,UAAU,EACX5S,IAAA,CAACuP,YAAY;YACZjP,OAAO,EAAEf,KAAK,CAACoU,qBAAsB;YACrCxQ,KAAK,EAAC,wBAAwB;YAC9BjD,IAAI,EAAC,+BAA+B;YACpC2T,KAAK,EAAC;UAAO,CACb,CAAC;QAAA,CACG,CACN;MACF;MAEA,OAAOjB,UAAU;IAClB,CAAC;IAED;AACD;AACA;AACA;AACA;IACCkB,eAAeA,CAACvU,KAA2B,EAAU;MACpD,IAAIwU,YAAY;MAChB,IAAIC,cAAc,GAAG;QACpB,cAAc,EAAE;MACjB,CAAC;MACD,MAAMC,mBAAmB,GAAG9M,kBAAkB,CAAC+M,2BAA2B,CAAY3U,KAAK,CAACgH,QAAQ,EAAEhH,KAAK,CAACuH,WAAW,CAAC;MACxH,MAAMqN,0BAA0B,GAAGC,oBAAoB,CACtDH,mBAAmB,EACnBA,mBAAmB,CAACI,YAAY,EAAEC,KAAK,CAACvP,IACzC,CAAC;MACD,MAAMjD,SAAS,GAAGC,gCAAgC,CAACoS,0BAA0B,CAAC;MAC9E,MAAMjN,kBAAkB,GAAGC,kBAAkB,CAAC+M,2BAA2B,CAAgB3U,KAAK,CAACgH,QAAQ,CAAC;MACxG,MAAMgO,eAAe,GAAGC,iCAAiC,CAACtN,kBAAkB,CAAC;MAC7E,MAAM2M,KAAK,GAAGY,kCAAkC,CAACvN,kBAAkB,CAAC;;MAEpE;MACA,MAAMwN,iBAAiB,GACtBT,mBAAmB,CAACI,YAAY,EAAE/P,WAAW,EAAEqQ,MAAM,EAAEC,SAAS,IAChET,0BAA0B,CAACE,YAAY,EAAE/P,WAAW,EAAEqQ,MAAM,EAAEC,SAAS;MACxE,MAAMC,iBAAiB,GAAGH,iBAAiB,GAAG7P,iBAAiB,CAACC,2BAA2B,CAAC4P,iBAAiB,CAAC,CAAC,GAAGtT,SAAS;MAE3H,MAAM4M,OAAO,GAAIzO,KAAK,CAACkE,iBAAiB,CAAsBmL,GAAG,GAC9D/J,iBAAiB,CACjBC,2BAA2B,CACzBvF,KAAK,CAACkE,iBAAiB,CAAsBmL,GAC/C,CACA,CAAC,GACDxN,SAAS;MAEZ,IAAI7B,KAAK,CAACiB,aAAa,CAACmB,WAAW,IAAIpC,KAAK,CAACmI,iBAAiB,EAAE;QAC/D,MAAMoN,OAAO,GAAGzV,YAAY,CAACQ,wBAAwB,CAACN,KAAK,EAAES,IAAA,CAAC+K,IAAI;UAAC7K,IAAI,EAAEX,KAAK,CAACW,IAAK;UAAC6U,SAAS,EAAC;QAAK,CAAO,CAAC,CAAC;QAC7GhB,YAAY,GACX/T,IAAA,CAAC4B,kBAAkB;UAACoB,EAAE,EAAEzD,KAAK,CAACsI,cAAe;UAAC/F,SAAS,EAAEA,SAAgC;UAAArB,QAAA,EACvF;YACAuB,WAAW,EACVhC,IAAA,CAACuP,YAAY;cACZhM,IAAI,EAAEgR,eAAgB;cACtBV,KAAK,EAAEA,KAAM;cACbvT,OAAO,EAAEf,KAAK,CAACsC,cAAe;cAC9B3B,IAAI,EAAEX,KAAK,CAACW,IAAK;cACjB0D,OAAO,EAAEiR,iBAAkB;cAC3B3M,kBAAkB,EAAE3I,KAAK,CAAC2I,kBAAmB;cAC7C/E,KAAK,EAAC;YAA8B,CACpC,CACD;YACDlB,YAAY,EAAE6S;UACf;QAAC,CACkB,CACpB;MACF,CAAC,MAAM;QACN,IAAIpU,UAA+B;QACnC,IAAI+O,MAAM,GAAG,KAAK;QAClB,IAAIuF,QAAQ;QACZ,IAAIC,WAAW;QACf,IAAI1V,KAAK,CAACoT,YAAY,EAAE;UACvBjS,UAAU,GAAGrB,YAAY,CAAC8R,sBAAsB,CAAC5R,KAAK,CAAC;UACvDyV,QAAQ,GAAG,IAAI,CAACpD,qBAAqB,CAACrS,KAAK,CAAC;UAC5C0V,WAAW,GAAG1V,KAAK,CAACa,aAAa,CAAC8Q,WAAW;QAC9C;QACA,IAAIlD,OAAO,EAAE;UACZyB,MAAM,GAAG,IAAI;UACbuE,cAAc,GAAG;YAChB,cAAc,EAAE;UACjB,CAAC;UACDiB,WAAW,GAAG1V,KAAK,CAACa,aAAa,CAACoP,gBAAgB;QACnD;QAEAuE,YAAY,GACX/T,IAAA,CAACuP,YAAY;UACZvM,EAAE,EAAEzD,KAAK,CAACsI,cAAe;UACzBtE,IAAI,EAAEgR,eAAgB;UACtBV,KAAK,EAAEA,KAAM;UACb3T,IAAI,EAAEX,KAAK,CAACW,IAAK;UACjB0D,OAAO,EAAEiR,iBAAkB;UAC3BvU,OAAO,EAAEf,KAAK,CAACsC,cAAe;UAC9BqG,kBAAkB,EAAE3I,KAAK,CAAC2I,kBAAmB;UAAA,GACzC8L,cAAc;UAClBvE,MAAM,EAAEuF,QAAQ,GAAGA,QAAQ,GAAGvF,MAAO;UACrCtP,KAAK,EAAE8U,WAAY;UACnBrO,cAAc,EAAErH,KAAK,CAACqH,cAAqD;UAC3ErG,gBAAgB,EAAEhB,KAAK,CAACiB,aAAa,EAAED,gBAAiB;UAAAE,QAAA,EAEvD;YACA8J,UAAU,EAAE,CACXvK,IAAA,CAAC6N,UAAU;cAAmBtG,KAAK,EAAEhI,KAAK,CAACiC;YAA+B,GAAzD,WAA2D,CAAC,EAC7ExB,IAAA,CAAC6N,UAAU;cAAatG,KAAK,EAAEyG;YAAQ,GAAtB,KAAwB,CAAC,CAC1C;YACDtN,UAAU,EAAEA;UACb;QAAC,CACY,CACd;MACF;MAEA,OAAOqT,YAAY;IACpB,CAAC;IAED5C,sBAAsBA,CAAC5R,KAA2B,EAAW;MAC5D,OAAO,IAAIsQ,SAAS,CACnBtQ,KAAK,CAACwB,aAAa,EACnBxB,KAAK,CAACgH,QAAQ,CAACM,OAAO,CAAC,CAAC,EACxBtH,KAAK,CAACuH,WAAW,CAACD,OAAO,CAAC,CAAC,EAC3BtH,KAAK,CAACgS,cACP,CAAC,CAAC2D,aAAa,CAAC,CAAC;IAClB,CAAC;IAED;AACD;AACA;AACA;AACA;IACCC,mBAAmBA,CAAC5V,KAA2B,EAAU;MACxD,MAAMyC,WAAW,GAChBhC,IAAA,CAACC,IAAI;QACJC,IAAI,EAAEX,KAAK,CAACW,IAAK;QACjB4K,QAAQ,EAAC,MAAM;QACfsK,UAAU,EAAC,MAAM;QACjB,gBAAa,gEAAgE;QAC7EjV,KAAK,EAAEZ,KAAK,CAACa,aAAa,CAAC8Q,WAAY;QACvCtK,cAAc,EAAErH,KAAK,CAACqH,cAAqD;QAC3EsB,kBAAkB,EAAE3I,KAAK,CAAC2I,kBAAmB;QAC7CmG,cAAc,EAAEC,kBAAkB,CAAC/I,MAAO;QAC1ChF,gBAAgB,EAAEhB,KAAK,CAACiB,aAAa,EAAED,gBAAiB;QAAAE,QAAA,EAEvD;UACA8J,UAAU,EAAE,CAACvK,IAAA,CAAC6N,UAAU;YAAmBtG,KAAK,EAAEhI,KAAK,CAACiC;UAA+B,GAAzD,WAA2D,CAAC,CAAC;UAC3Fd,UAAU,EAAErB,YAAY,CAAC8R,sBAAsB,CAAC5R,KAAK;QACtD;MAAC,CACI,CACN;MACD,MAAM0C,YAAY,GAAGjC,IAAA,CAAC2D,KAAK;QAACX,EAAE,EAAEzD,KAAK,CAACsI,cAAe;QAACvH,OAAO,EAAEf,KAAK,CAACsC,cAAe;QAAC3B,IAAI,EAAEX,KAAK,CAACwT,eAAgB;QAACsC,MAAM,EAAC;MAAM,CAAE,CAAC;MAClI,IAAI9V,KAAK,CAACoT,YAAY,EAAE;QACvB,MAAM2C,YAAY,GAAG,IAAI,CAAC1D,qBAAqB,CAACrS,KAAK,CAAC;QACtD,IAAI+V,YAAY,KAAK,MAAM,EAAE;UAC5B,OAAOtT,WAAW;QACnB,CAAC,MAAM;UACN,OAAO,IAAI,CAACwP,yCAAyC,CAACjS,KAAK,EAAE+V,YAAY,EAAYtT,WAAW,EAAEC,YAAY,CAAC;QAChH;MACD;MACA,OAAOjC,IAAA,CAAC2D,KAAK;QAACX,EAAE,EAAEzD,KAAK,CAACsI,cAAe;QAACvH,OAAO,EAAEf,KAAK,CAACsC,cAAe;QAAC3B,IAAI,EAAEX,KAAK,CAACwT,eAAgB;QAACsC,MAAM,EAAC;MAAM,CAAE,CAAC;IACrH,CAAC;IACD;AACD;AACA;AACA;AACA;AACA;IACCE,iBAAiBA,CAACC,mBAA2B,EAAEjW,KAA2B,EAAU;MACnF,IAAI,CAACA,KAAK,CAACiB,aAAa,CAACiV,oCAAoC,EAAE;QAC9D;QACA;QACAD,mBAAmB,GAClBxV,IAAA,CAAC8C,kBAAkB;UAACxC,OAAO,EAAEf,KAAK,CAACsC,cAAe;UAAApB,QAAA,EACjD0S,KAAA,CAACS,IAAI;YAACzQ,KAAK,EAAEsC,WAAW,CAACiQ,cAAc,CAACnW,KAAK,CAACiB,aAAa,CAACmV,kBAAkB,CAAE;YAAAlV,QAAA,GAC9E+U,mBAAmB,EACpBxV,IAAA,CAAC4V,cAAc;cACdC,kBAAkB,EAAEC,sBAAsB,CAACC,WAAY;cACvDjP,WAAW,EAAEvH,KAAK,CAACuH,WAAW,CAACD,OAAO,CAAC,CAAE;cACzCvG,OAAO,EAAEf,KAAK,CAACyW,qBAAsB;cACrCpP,cAAc,EAAErH,KAAK,CAACqH,cAAc,GAAGrH,KAAK,CAACqH,cAAc,GAAG,EAAG;cACjErG,gBAAgB,EAAEhB,KAAK,CAACiB,aAAa,EAAED;YAAiB,CACxD,CAAC;UAAA,CACG;QAAC,CACY,CACpB;MACF;MACA,OAAOiV,mBAAmB;IAC3B,CAAC;IAED;AACD;AACA;AACA;AACA;IACCpH,yBAAyBA,CAAC7O,KAA2B,EAAoC;MACxF,MAAMW,IAAI,GAAGsC,eAAe,CAAC2P,cAAc,CACzC5S,KAAK,CAAC0W,uBAAuB,IAAsC1W,KAAK,CAACwB,aAAa,EACvFxB,KAAK,CAACiB,aAAa,EACnB,IACD,CAAC;MACD,OAAO6R,uBAAuB,CAACnS,IAAI,CAAC,IAAI,OAAOA,IAAI,KAAK,QAAQ,GAC7D2E,iBAAiB,CAACyN,YAAY,CAAC,CAACpS,IAAI,CAAC,EAAEqS,eAAe,CAAC2D,iBAAiB,CAAC,CAAC,GAC1ErR,iBAAiB,CAAC3E,IAAI,CAAC;IAC3B,CAAC;IACD;AACD;AACA;AACA;AACA;IACC0R,qBAAqBA,CAACrS,KAA2B,EAAoC;MACpF,QAAQA,KAAK,CAAC4W,aAAa;QAC1B,KAAK,QAAQ;UACZ,IAAI5W,KAAK,CAACiB,aAAa,CAACmB,WAAW,KAAK,IAAI,EAAE;YAC7C;YACA;YACA;YACA,OAAO,IAAI,CAACgP,4BAA4B,CAACpR,KAAK,CAAC;UAChD;UACA;QAED,KAAK,eAAe;UACnB,IAAIA,KAAK,CAAC6W,sBAAsB,EAAE;YACjC,MAAMC,4BAAgE,GAAG,EAAE;YAC3E,IAAI9W,KAAK,CAACgS,cAAc,EAAE;cACzB;cACA,OAAO1M,iBAAiB,CAACmM,QAAQ,CAAC,KAAK,CAAC,CAAC;YAC1C;YACA,KAAK,MAAMsF,wBAAwB,IAAI/W,KAAK,CAAC6W,sBAAsB,EAAE;cACpE,IAAIE,wBAAwB,CAACxF,KAAK,KAAK,aAAa,IAAIwF,wBAAwB,CAACxF,KAAK,KAAK,UAAU,EAAE;gBACtGuF,4BAA4B,CAACE,IAAI,CAACD,wBAAwB,CAAC;cAC5D,CAAC,MAAM;gBACN;gBACA,OAAOzR,iBAAiB,CAACmM,QAAQ,CAAC,IAAI,CAAC,CAAC;cACzC;YACD;YACA,MAAMwF,mBAAmB,GAAG,CAC3BrV,WAAW,CAAY,kBAAkB,EAAE,UAAU,CAAC,CACtD,CAACsV,MAAM,CAACJ,4BAA4B,CAAC;YACtC,OAAOxR,iBAAiB,CAACyN,YAAY,CAACkE,mBAAmB,EAAEjE,eAAe,CAACmE,kBAAkB,CAAC,CAAC;UAChG;UACA,OAAO,MAAM;QACd;UACC;UACA;UACA,OAAO,MAAM;MACf;IACD,CAAC;IAED;AACD;AACA;AACA;AACA;IACCC,4BAA4BA,CAACpX,KAA2B,EAAU;MACjE,OACCS,IAAA,CAAC4W,QAAQ;QACR,gBAAa,gCAAgC;QAC7C5T,EAAE,EAAEzD,KAAK,CAACsI,cAAe;QACzBgP,WAAW,EAAE,IAAK;QAClB3W,IAAI,EAAEX,KAAK,CAACuX,KAAM;QAClBhM,QAAQ,EAAE,IAAK;QACfiM,QAAQ,EAAExX,KAAK,CAACyX,sBAAuB;QACvCrJ,aAAa,EAAEpO,KAAK,CAACoO,aAAc;QACnC/G,cAAc,EAAErH,KAAK,CAACqH,cAAqD;QAAAnG,QAAA,EAE1E;UAAE8J,UAAU,EAAEvK,IAAA,CAAC6N,UAAU;YAAkBtG,KAAK,EAAEhI,KAAK,CAACuO;UAAe,GAAzC,YAA2C;QAAE;MAAC,CACpE,CAAC;IAEb,CAAC;IAED;AACD;AACA;AACA;AACA;IACCmJ,WAAW,EAAG1X,KAA2B,IAAa;MACrD,IAAI2X,iBAAiB;MACrB,QAAQ3X,KAAK,CAAC4X,YAAY;QACzB,KAAK,QAAQ;UACZD,iBAAiB,GAAG7X,YAAY,CAAC6C,iBAAiB,CAAC3C,KAAK,CAAC;UACzD;QACD,KAAK,QAAQ;UACZ2X,iBAAiB,GAAG7X,YAAY,CAACiE,iBAAiB,CAAC/D,KAAK,CAAC;UACzD;QACD,KAAK,mBAAmB;UACvB2X,iBAAiB,GAAG7X,YAAY,CAACsX,4BAA4B,CAACpX,KAAK,CAAC;UACpE;QACD,KAAK,SAAS;UACb2X,iBAAiB,GAAG7X,YAAY,CAACgH,kBAAkB,CAAC9G,KAAK,CAAC;UAC1D;QACD,KAAK,WAAW;UACf2X,iBAAiB,GAAG7X,YAAY,CAACoI,oBAAoB,CAAClI,KAAK,CAAC;UAC5D;QACD,KAAK,gBAAgB;UACpB2X,iBAAiB,GAAG7X,YAAY,CAACsI,iBAAiB,CAACpI,KAAK,CAAC;UACzD;QACD,KAAK,MAAM;UACV2X,iBAAiB,GAAG7X,YAAY,CAAC8I,eAAe,CAAC5I,KAAK,CAAC;UACvD;QACD,KAAK,MAAM;UACV2X,iBAAiB,GAAG7X,YAAY,CAAC0O,eAAe,CAACxO,KAAK,CAAC;UACvD;QACD,KAAK,mBAAmB;UACvB2X,iBAAiB,GAAG7X,YAAY,CAACoS,4BAA4B,CAAClS,KAAK,CAAC;UACpE;QACD,KAAK,iCAAiC;UACrC2X,iBAAiB,GAAG7X,YAAY,CAACuB,0CAA0C,CAACrB,KAAK,CAAC;UAClF;QACD,KAAK,kBAAkB;UACtB2X,iBAAiB,GAAG7X,YAAY,CAACoT,mBAAmB,CAAClT,KAAK,CAAC;UAC3D;QACD,KAAK,cAAc;UAAE;YACpB2X,iBAAiB,GAAG7X,YAAY,CAACyU,eAAe,CAACvU,KAAK,CAAC;YACvD;UACD;QACA,KAAK,kBAAkB;UACtB2X,iBAAiB,GAAG7X,YAAY,CAAC8V,mBAAmB,CAAC5V,KAAK,CAAC;UAC3D;QACD,KAAK,MAAM;UACV2X,iBAAiB,GAAG7X,YAAY,CAACwS,eAAe,CAACtS,KAAK,CAAC;UACvD;QACD,KAAK,QAAQ;UACZ2X,iBAAiB,GAAG7X,YAAY,CAAC4S,mBAAmB,CAAC1S,KAAK,CAAC;UAC3D;QACD;UACC2X,iBAAiB,GAAG,EAAE;MACxB;MACA,IAAI3X,KAAK,CAACgW,iBAAiB,IAAI2B,iBAAiB,EAAE;QACjDA,iBAAiB,GAAG7X,YAAY,CAACkW,iBAAiB,CAAC2B,iBAAiB,EAAE3X,KAAK,CAAC;MAC7E;MAEA,OAAO2X,iBAAiB;IACzB;EACD,CAAC;EAAC,OAEa7X,YAAY;AAAA","ignoreList":[],"file":"DisplayStyle-dbg.js"}