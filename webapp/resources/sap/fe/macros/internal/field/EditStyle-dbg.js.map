{"version":3,"names":["EditStyle","getLayoutData","field","layoutData","collaborationEnabled","_jsx","FlexItemData","growFactor","getCollaborationAvatar","collaborationHasActivityExpression","compileExpression","collaborationExpression","collaborationInitialsExpression","UIFormatter","getCollaborationExpression","dataModelPath","CollaborationFormatters","getCollaborationActivityInitials","collaborationColorExpression","getCollaborationActivityColor","Avatar","visible","initials","displaySize","customDisplaySize","customFontSize","backgroundColor","press","eventHandlers","showCollaborationEditUser","children","dependents","EventDelegateHook","stopTapPropagation","getDateTimePickerGeneric","type","dataModelObjectPath","MetaModelConverter","getInvolvedDataModelObjects","metaPath","contextPath","textAlign","getTextAlignment","formatOptions","editModeAsObject","dateTimePickerProperties","id","editStyleId","width","editable","editableExpression","enabled","enabledExpression","required","requiredExpression","ariaLabelledBy","value","valueBindingExpression","fieldGroupIds","showTimezone","minDate","minDateExpression","undefined","maxDate","maxDateExpression","change","liveChange","valueFormat","validateFieldGroup","getDateTimePicker","dateTimePickerType","dateTimePicker","DatePicker","customData","CustomData","dataSourcePath","DateTimePicker","TimePicker","getInputTemplate","Input","placeholder","editStylePlaceholder","description","staticDescription","editStyle","maxLength","textMaxLength","showAsRadioButton","radioButtonConfigured","property","annotations","Common","ValueListWithFixedValues","hasValueHelpWithFixedValues","ValueListShowValuesImmediately","valueOf","fieldEditStyle","valueListParameterInOut","ValueList","Parameters","find","valueListParameter","$Type","LocalDataProperty","name","ValueListRelevantQualifiers","getRadioButtonTemplate","forBoolean","arguments","length","fixedValuesPath","CollectionPath","valueListKeyPath","pathInModel","ValueListProperty","valueListDescriptionPath","valueHelpKeyTextAnnotationPath","targetEntityType","resolvePath","entityType","keys","Text","path","possibleValues","key","text","getTranslatedText","RadioButtons","radioButtonTextProperty","radioButtonKeyProperty","horizontalLayout","radioButtonsHorizontalLayout","getInputWithValueHelpTemplate","dataFieldDataModelObjectPath","delegate","FieldHelper","computeFieldBaseDelegate","retrieveTextFromValueList","display","getFieldDisplay","displayMode","hasMultilineAnnotation","UI","MultiLineText","multipleLines","getMultipleLinesForDataField","label","computeLabelText","context","optionalContentEdit","TextArea","rows","textLinesEdit","growing","textMaxLines","growingMaxLines","optionalLayoutData","Field","valueState","editMode","computedEditMode","additionalValue","textBindingExpression","valueHelp","valueHelpId","contentEdit","getCheckBoxTemplate","isCheckBoxGroupItem","isFieldGroupItem","CheckBox","selected","wrapping","select","getTextAreaTemplate","showExceededText","TextAreaEx","cols","getRatingIndicatorTemplate","tooltip","ratingIndicatorTooltip","RatingIndicator","maxValue","ratingIndicatorTargetValue","iconSize","class","getTemplateWithWrapper","FieldEditMode","Display","_jsxs","CollaborationHBox","alignItems","getTemplate","getInputMaskTemplate","optionalMaskInputRules","mask","maskRule","rule","push","MaskInputRule","maskFormatSymbol","symbol","regex","MaskInput","placeholderSymbol","rules","innerFieldContent","useRadioButtonsForBoolean"],"sourceRoot":".","sources":["EditStyle.tsx"],"sourcesContent":["import type { DataFieldTypes } from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport type { BindingToolkitExpression } from \"sap/fe/base/BindingToolkit\";\nimport { compileExpression, pathInModel } from \"sap/fe/base/BindingToolkit\";\nimport EventDelegateHook from \"sap/fe/base/EventDelegateHook\";\nimport * as MetaModelConverter from \"sap/fe/core/converters/MetaModelConverter\";\nimport * as CollaborationFormatters from \"sap/fe/core/formatters/CollaborationFormatter\";\nimport { hasValueHelpWithFixedValues } from \"sap/fe/core/templating/PropertyHelper\";\nimport * as UIFormatter from \"sap/fe/core/templating/UIFormatters\";\nimport CollaborationHBox from \"sap/fe/macros/controls/CollaborationHBox\";\nimport RadioButtons from \"sap/fe/macros/controls/RadioButtons\";\nimport { getMultipleLinesForDataField, getTextAlignment } from \"sap/fe/macros/field/FieldTemplating\";\nimport type { FieldBlockProperties } from \"sap/fe/macros/internal/field/FieldStructureHelper\";\nimport Avatar from \"sap/m/Avatar\";\nimport type { CheckBox$SelectEvent } from \"sap/m/CheckBox\";\nimport CheckBox from \"sap/m/CheckBox\";\nimport DatePicker from \"sap/m/DatePicker\";\nimport DateTimePicker from \"sap/m/DateTimePicker\";\nimport FlexItemData from \"sap/m/FlexItemData\";\nimport Input from \"sap/m/Input\";\nimport type { InputBase$ChangeEvent } from \"sap/m/InputBase\";\nimport type { MaskInput$LiveChangeEvent } from \"sap/m/MaskInput\";\nimport MaskInput from \"sap/m/MaskInput\";\nimport MaskInputRule from \"sap/m/MaskInputRule\";\nimport type { RatingIndicator$ChangeEvent } from \"sap/m/RatingIndicator\";\nimport RatingIndicator from \"sap/m/RatingIndicator\";\nimport TextArea from \"sap/m/TextArea\";\nimport TimePicker from \"sap/m/TimePicker\";\nimport type Event from \"sap/ui/base/Event\";\nimport type { default as Control, Control$ValidateFieldGroupEvent, default as Control1 } from \"sap/ui/core/Control\";\nimport CustomData from \"sap/ui/core/CustomData\";\nimport type { Field$ChangeEvent } from \"sap/ui/mdc/Field\";\nimport Field from \"sap/ui/mdc/Field\";\nimport FieldEditMode from \"sap/ui/mdc/enums/FieldEditMode\";\nimport type { MetaModelType } from \"../../../../../../../../types/metamodel_types\";\nimport FieldHelper from \"../../field/FieldHelper\";\nimport TextAreaEx from \"../../field/TextAreaEx\";\n\nconst EditStyle = {\n\t/**\n\t * An internal helper to retrieve the reused layout data.\n\t * @param field Reference to the current field instance\n\t * @returns An XML-based string with the definition of the field control\n\t */\n\tgetLayoutData(field: FieldBlockProperties): string {\n\t\tlet layoutData = \"\";\n\t\tif (field.collaborationEnabled) {\n\t\t\tlayoutData = <FlexItemData growFactor=\"9\" />;\n\t\t}\n\t\treturn layoutData;\n\t},\n\n\t/**\n\t * Generates the avatar control next a field locked.\n\t * @param field Reference to the current field instance\n\t * @returns An XML-based string with the definition of the avatar\n\t */\n\tgetCollaborationAvatar(field: FieldBlockProperties): string {\n\t\tconst collaborationHasActivityExpression = compileExpression(field.collaborationExpression);\n\t\tconst collaborationInitialsExpression = compileExpression(\n\t\t\tUIFormatter.getCollaborationExpression(field.dataModelPath, CollaborationFormatters.getCollaborationActivityInitials)\n\t\t);\n\t\tconst collaborationColorExpression = compileExpression(\n\t\t\tUIFormatter.getCollaborationExpression(field.dataModelPath, CollaborationFormatters.getCollaborationActivityColor)\n\t\t);\n\n\t\treturn (\n\t\t\t<Avatar\n\t\t\t\tcore:require=\"{FieldRuntimeHelper: 'sap/fe/macros/field/FieldRuntimeHelper'}\"\n\t\t\t\tvisible={collaborationHasActivityExpression}\n\t\t\t\tinitials={collaborationInitialsExpression}\n\t\t\t\tdisplaySize=\"Custom\"\n\t\t\t\tcustomDisplaySize=\"1.5rem\"\n\t\t\t\tcustomFontSize=\"0.8rem\"\n\t\t\t\tbackgroundColor={collaborationColorExpression}\n\t\t\t\tpress={field.eventHandlers.showCollaborationEditUser as unknown as ((oEvent: Event) => void) | undefined}\n\t\t\t>\n\t\t\t\t{{\n\t\t\t\t\tdependents: <EventDelegateHook stopTapPropagation={true} />\n\t\t\t\t}}\n\t\t\t</Avatar>\n\t\t);\n\t},\n\n\t/**\n\t * Generates a template for one of the pickers reference in the type.\n\t * @param field Reference to the current field instance\n\t * @param type Reference to one of the edit style picker types\n\t * @returns An XML-based string with the definition of the field control\n\t */\n\tgetDateTimePickerGeneric(field: FieldBlockProperties, type: \"DatePicker\" | \"DateTimePicker\" | \"TimePicker\"): string {\n\t\tconst dataModelObjectPath = MetaModelConverter.getInvolvedDataModelObjects<DataFieldTypes>(field.metaPath, field.contextPath);\n\t\tconst textAlign = getTextAlignment(\n\t\t\tdataModelObjectPath,\n\t\t\tfield.formatOptions,\n\t\t\tfield.editModeAsObject as BindingToolkitExpression<string>\n\t\t);\n\n\t\tconst dateTimePickerProperties = {\n\t\t\t\"core:require\": \"{Field: 'sap/fe/macros/Field'}\",\n\t\t\tid: field.editStyleId,\n\t\t\twidth: \"100%\",\n\t\t\teditable: field.editableExpression,\n\t\t\tenabled: field.enabledExpression,\n\t\t\trequired: field.requiredExpression,\n\t\t\ttextAlign: textAlign,\n\t\t\tariaLabelledBy: field.ariaLabelledBy as unknown as Array<Control | string>,\n\t\t\tvalue: field.valueBindingExpression,\n\t\t\tfieldGroupIds: field.fieldGroupIds,\n\t\t\tshowTimezone: field.showTimezone,\n\t\t\tminDate: type === \"DateTimePicker\" || type === \"DatePicker\" ? field.minDateExpression : undefined,\n\t\t\tmaxDate: type === \"DateTimePicker\" || type === \"DatePicker\" ? field.maxDateExpression : undefined,\n\t\t\tchange:\n\t\t\t\ttype === \"DateTimePicker\"\n\t\t\t\t\t? ((field.change || field.eventHandlers.change) as unknown as (oEvent: InputBase$ChangeEvent) => void)\n\t\t\t\t\t: (field.eventHandlers.change as unknown as (oEvent: InputBase$ChangeEvent) => void),\n\t\t\tliveChange: field.eventHandlers.liveChange,\n\t\t\tvalueFormat: type === \"DatePicker\" ? \"medium\" : undefined,\n\t\t\tvalidateFieldGroup: field.eventHandlers.validateFieldGroup as (oEvent: Control$ValidateFieldGroupEvent) => void\n\t\t};\n\n\t\tfunction getDateTimePicker(dateTimePickerType: string): string {\n\t\t\tlet dateTimePicker;\n\t\t\tswitch (dateTimePickerType) {\n\t\t\t\tcase \"DatePicker\":\n\t\t\t\t\tdateTimePicker = (\n\t\t\t\t\t\t<DatePicker {...dateTimePickerProperties}>\n\t\t\t\t\t\t\t{{ customData: <CustomData key=\"sourcePath\" value={field.dataSourcePath} /> }}\n\t\t\t\t\t\t</DatePicker>\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"DateTimePicker\":\n\t\t\t\t\tdateTimePicker = (\n\t\t\t\t\t\t<DateTimePicker {...dateTimePickerProperties}>\n\t\t\t\t\t\t\t{{ customData: <CustomData key=\"sourcePath\" value={field.dataSourcePath} /> }}\n\t\t\t\t\t\t</DateTimePicker>\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"TimePicker\":\n\t\t\t\t\tdateTimePicker = (\n\t\t\t\t\t\t<TimePicker {...dateTimePickerProperties}>\n\t\t\t\t\t\t\t{{ customData: <CustomData key=\"sourcePath\" value={field.dataSourcePath} /> }}\n\t\t\t\t\t\t</TimePicker>\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn dateTimePicker;\n\t\t}\n\n\t\treturn getDateTimePicker(type);\n\t},\n\n\t/**\n\t * Generates the Input template.\n\t * @param field Reference to the current field instance\n\t * @returns An XML-based string with the definition of the field control\n\t */\n\tgetInputTemplate(field: FieldBlockProperties): string {\n\t\tconst dataModelObjectPath = MetaModelConverter.getInvolvedDataModelObjects<DataFieldTypes>(field.metaPath, field.contextPath);\n\n\t\tconst textAlign = getTextAlignment(\n\t\t\tdataModelObjectPath,\n\t\t\tfield.formatOptions,\n\t\t\tfield.editModeAsObject as BindingToolkitExpression<string>\n\t\t);\n\n\t\treturn (\n\t\t\t<Input\n\t\t\t\tcore:require=\"{Field: 'sap/fe/macros/Field'}\"\n\t\t\t\tid={field.editStyleId}\n\t\t\t\tvalue={field.valueBindingExpression}\n\t\t\t\tplaceholder={field.editStylePlaceholder}\n\t\t\t\twidth=\"100%\"\n\t\t\t\teditable={field.editableExpression}\n\t\t\t\tdescription={field.staticDescription}\n\t\t\t\tenabled={field.enabledExpression}\n\t\t\t\trequired={field.requiredExpression}\n\t\t\t\tfieldGroupIds={field.fieldGroupIds}\n\t\t\t\ttextAlign={textAlign}\n\t\t\t\ttype={field.editStyle === \"Masked\" ? \"Password\" : undefined}\n\t\t\t\tariaLabelledBy={field.ariaLabelledBy as unknown as Array<Control | string>}\n\t\t\t\tmaxLength={field.formatOptions.textMaxLength}\n\t\t\t\tchange={field.eventHandlers.change as (oEvent: InputBase$ChangeEvent) => void}\n\t\t\t\tliveChange={field.eventHandlers.liveChange}\n\t\t\t\tvalidateFieldGroup={field.eventHandlers.validateFieldGroup as (oEvent: Control$ValidateFieldGroupEvent) => void}\n\t\t\t>\n\t\t\t\t{{\n\t\t\t\t\tlayoutData: EditStyle.getLayoutData(field),\n\t\t\t\t\tcustomData: <CustomData key=\"sourcePath\" value={field.dataSourcePath} />\n\t\t\t\t}}\n\t\t\t</Input>\n\t\t);\n\t},\n\n\t/**\n\t * Returns if a field shall be templated as a radio button group.\n\t * @param field Reference to the current field instance\n\t * @returns The evaluation result\n\t */\n\tshowAsRadioButton(field: FieldBlockProperties): boolean {\n\t\t// Determine if we need to render the field as a radio button group\n\t\t// TODO: Remove the next two lines once UX updated the vocabulary module including the new experimental annotation\n\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t// @ts-ignore\n\t\tconst radioButtonConfigured: boolean =\n\t\t\tfield.property.annotations?.Common?.ValueListWithFixedValues &&\n\t\t\thasValueHelpWithFixedValues(field.property) === true &&\n\t\t\t((field.property.annotations.Common.ValueListWithFixedValues.annotations?.Common?.ValueListShowValuesImmediately &&\n\t\t\t\tfield.property.annotations.Common.ValueListWithFixedValues.annotations?.Common?.ValueListShowValuesImmediately.valueOf() ===\n\t\t\t\t\ttrue) ||\n\t\t\t\tfield.formatOptions.fieldEditStyle === \"RadioButtons\");\n\n\t\t// Exclude not supported cases\n\t\t// - ValueListParamaterInOut / ...Out must not be empty\n\t\t// - ValueListRelevantQualifiers annotation must not be used\n\t\t// Further cases may not make sense with radio buttons but we do not explicitly exclude them but mention this in documentation.\n\t\t// Check documentation, discuss and decide before adding further restrictions here.\n\t\tconst valueListParameterInOut = field.property?.annotations?.Common?.ValueList?.Parameters.find(\n\t\t\t(valueListParameter) =>\n\t\t\t\t(valueListParameter.$Type === \"com.sap.vocabularies.Common.v1.ValueListParameterInOut\" ||\n\t\t\t\t\tvalueListParameter.$Type === \"com.sap.vocabularies.Common.v1.ValueListParameterOut\") &&\n\t\t\t\tvalueListParameter.LocalDataProperty.value === field.property.name\n\t\t);\n\t\treturn (\n\t\t\tradioButtonConfigured &&\n\t\t\tvalueListParameterInOut !== undefined &&\n\t\t\t!field.property.annotations?.Common?.ValueListRelevantQualifiers\n\t\t);\n\t},\n\n\t/**\n\t * Generates the RadioButton template.\n\t * @param field Reference to the current field instance\n\t * @param forBoolean\n\t * @returns An XML-based string with the radio button definition\n\t */\n\tgetRadioButtonTemplate(field: FieldBlockProperties, forBoolean = false): string {\n\t\tconst fixedValuesPath = \"/\" + field.property?.annotations?.Common?.ValueList?.CollectionPath;\n\n\t\tconst valueListParameterInOut = field.property?.annotations?.Common?.ValueList?.Parameters.find(\n\t\t\t(valueListParameter) =>\n\t\t\t\t(valueListParameter.$Type === \"com.sap.vocabularies.Common.v1.ValueListParameterInOut\" ||\n\t\t\t\t\tvalueListParameter.$Type === \"com.sap.vocabularies.Common.v1.ValueListParameterOut\") &&\n\t\t\t\tvalueListParameter.LocalDataProperty.value === field.property.name\n\t\t);\n\n\t\t// we know that a valueListProperty exists because we check this already in showAsRadioButton\n\t\tconst valueListKeyPath = pathInModel(valueListParameterInOut?.ValueListProperty as string) ?? pathInModel(\"\");\n\n\t\tlet valueListDescriptionPath;\n\t\tconst valueHelpKeyTextAnnotationPath =\n\t\t\tfield.dataModelPath.targetEntityType.resolvePath(fixedValuesPath)?.entityType.keys[0].annotations?.Common?.Text?.path;\n\t\tif (valueHelpKeyTextAnnotationPath) {\n\t\t\tvalueListDescriptionPath = pathInModel(valueHelpKeyTextAnnotationPath);\n\t\t} else {\n\t\t\tvalueListDescriptionPath = valueListKeyPath;\n\t\t}\n\n\t\tlet possibleValues: { key: string | number | boolean | null; text: string }[] | undefined;\n\t\tif (forBoolean) {\n\t\t\tpossibleValues = [\n\t\t\t\t{ key: true, text: field.getTranslatedText(\"T_RADIOBUTTONS_BOOLEAN_YES\") },\n\t\t\t\t{ key: false, text: field.getTranslatedText(\"T_RADIOBUTTONS_BOOLEAN_NO\") }\n\t\t\t];\n\t\t}\n\n\t\treturn (\n\t\t\t<RadioButtons\n\t\t\t\tid={field.editStyleId}\n\t\t\t\tpossibleValues={possibleValues}\n\t\t\t\trequiredExpression={field.requiredExpression}\n\t\t\t\tvalidateFieldGroup={field.eventHandlers.validateFieldGroup as (oEvent: Control$ValidateFieldGroupEvent) => void}\n\t\t\t\tfixedValuesPath={fixedValuesPath as unknown as `{${string}}`}\n\t\t\t\tfieldGroupIds={field.fieldGroupIds}\n\t\t\t\tvalue={field.valueBindingExpression}\n\t\t\t\tenabledExpression={field.enabledExpression}\n\t\t\t\tradioButtonTextProperty={valueListDescriptionPath}\n\t\t\t\tradioButtonKeyProperty={valueListKeyPath}\n\t\t\t\thorizontalLayout={field.formatOptions.radioButtonsHorizontalLayout}\n\t\t\t/>\n\t\t);\n\t},\n\n\t/**\n\t * Generates the InputWithValueHelp template.\n\t * @param field Reference to the current field instance\n\t * @returns An XML-based string with the definition of the field control\n\t */\n\tgetInputWithValueHelpTemplate(field: FieldBlockProperties): string {\n\t\tconst dataFieldDataModelObjectPath = MetaModelConverter.getInvolvedDataModelObjects<DataFieldTypes>(\n\t\t\tfield.metaPath,\n\t\t\tfield.contextPath\n\t\t);\n\n\t\tconst delegate = FieldHelper.computeFieldBaseDelegate(\n\t\t\t\"sap/fe/macros/field/FieldBaseDelegate\",\n\t\t\tfield.formatOptions.retrieveTextFromValueList as boolean\n\t\t);\n\t\tconst display = UIFormatter.getFieldDisplay(\n\t\t\tfield.property,\n\t\t\tfield.formatOptions.displayMode as string,\n\t\t\tfield.editModeAsObject as BindingToolkitExpression<string>\n\t\t);\n\t\tconst hasMultilineAnnotation = !!field.property?.annotations?.UI?.MultiLineText;\n\t\tconst multipleLines = getMultipleLinesForDataField(field, hasMultilineAnnotation);\n\n\t\tconst textAlign = getTextAlignment(\n\t\t\tdataFieldDataModelObjectPath,\n\t\t\tfield.formatOptions,\n\t\t\tfield.editModeAsObject as BindingToolkitExpression<string>,\n\t\t\ttrue\n\t\t);\n\t\tconst label = FieldHelper.computeLabelText(field as unknown as MetaModelType<DataFieldTypes>, {\n\t\t\tcontext: field.metaPath\n\t\t});\n\n\t\tlet optionalContentEdit = \"\";\n\t\tif (field.property.type === \"Edm.String\" && hasMultilineAnnotation) {\n\t\t\toptionalContentEdit = (\n\t\t\t\t<TextArea\n\t\t\t\t\tvalue={field.valueBindingExpression}\n\t\t\t\t\trequired={field.requiredExpression}\n\t\t\t\t\trows={field.formatOptions.textLinesEdit}\n\t\t\t\t\tgrowing={(field.formatOptions.textMaxLines as unknown as number) > 0 ? true : undefined}\n\t\t\t\t\tgrowingMaxLines={field.formatOptions.textMaxLines}\n\t\t\t\t\twidth=\"100%\"\n\t\t\t\t\tchange={field.eventHandlers.change as unknown as (oEvent: InputBase$ChangeEvent) => void}\n\t\t\t\t\tfieldGroupIds={field.fieldGroupIds}\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\n\t\tlet optionalLayoutData = \"\";\n\t\tif (field.collaborationEnabled === true) {\n\t\t\toptionalLayoutData = <FlexItemData growFactor=\"9\" />;\n\t\t}\n\n\t\tif (this.showAsRadioButton(field) !== true) {\n\t\t\treturn (\n\t\t\t\t<Field\n\t\t\t\t\tcore:require=\"{Field: 'sap/fe/macros/Field'}\"\n\t\t\t\t\tdelegate={delegate}\n\t\t\t\t\tid={field.editStyleId}\n\t\t\t\t\tvalue={field.valueBindingExpression}\n\t\t\t\t\tplaceholder={field.editStylePlaceholder}\n\t\t\t\t\tvalueState={field.valueState}\n\t\t\t\t\teditMode={field.editMode ?? field.computedEditMode}\n\t\t\t\t\twidth=\"100%\"\n\t\t\t\t\trequired={field.requiredExpression}\n\t\t\t\t\tadditionalValue={field.textBindingExpression}\n\t\t\t\t\tdisplay={display}\n\t\t\t\t\tmultipleLines={multipleLines === false ? undefined : multipleLines}\n\t\t\t\t\tvalueHelp={field.valueHelpId}\n\t\t\t\t\tfieldGroupIds={field.fieldGroupIds}\n\t\t\t\t\ttextAlign={textAlign}\n\t\t\t\t\tariaLabelledBy={field.ariaLabelledBy as unknown as Array<Control1 | string>}\n\t\t\t\t\tlabel={label}\n\t\t\t\t\tchange={field.eventHandlers.change as (oEvent: Field$ChangeEvent) => void}\n\t\t\t\t\tliveChange={field.eventHandlers.liveChange}\n\t\t\t\t\tvalidateFieldGroup={field.eventHandlers.validateFieldGroup as (oEvent: Control$ValidateFieldGroupEvent) => void}\n\t\t\t\t>\n\t\t\t\t\t{{\n\t\t\t\t\t\tcontentEdit: optionalContentEdit,\n\t\t\t\t\t\tlayoutData: optionalLayoutData,\n\t\t\t\t\t\tcustomData: <CustomData key=\"sourcePath\" value={field.dataSourcePath} />\n\t\t\t\t\t}}\n\t\t\t\t</Field>\n\t\t\t);\n\t\t} else {\n\t\t\treturn this.getRadioButtonTemplate(field);\n\t\t}\n\t},\n\n\t/**\n\t * Generates the CheckBox template.\n\t * @param field Reference to the current field instance\n\t * @returns An XML-based string with the definition of the field control\n\t */\n\tgetCheckBoxTemplate(field: FieldBlockProperties): string {\n\t\tconst isCheckBoxGroupItem = field.formatOptions.isFieldGroupItem === true;\n\t\treturn (\n\t\t\t<CheckBox\n\t\t\t\tcore:require=\"{Field: 'sap/fe/macros/Field'}\"\n\t\t\t\tid={field.editStyleId}\n\t\t\t\trequired={isCheckBoxGroupItem ? field.requiredExpression : undefined}\n\t\t\t\tselected={field.valueBindingExpression}\n\t\t\t\teditable={field.editableExpression}\n\t\t\t\tenabled={field.enabledExpression}\n\t\t\t\tfieldGroupIds={field.fieldGroupIds}\n\t\t\t\ttext={isCheckBoxGroupItem ? field.label : undefined}\n\t\t\t\twrapping={isCheckBoxGroupItem ? true : undefined}\n\t\t\t\tariaLabelledBy={field.ariaLabelledBy as unknown as Array<Control | string>}\n\t\t\t\tselect={field.eventHandlers.change as (oEvent: CheckBox$SelectEvent) => void}\n\t\t\t\tvalidateFieldGroup={field.eventHandlers.validateFieldGroup as (oEvent: Control$ValidateFieldGroupEvent) => void}\n\t\t\t>\n\t\t\t\t{{ customData: <CustomData key=\"sourcePath\" value={field.dataSourcePath} /> }}\n\t\t\t</CheckBox>\n\t\t);\n\t},\n\n\t/**\n\t * Generates the TextArea template.\n\t * @param field Reference to the current field instance\n\t * @returns An XML-based string with the definition of the field control\n\t */\n\tgetTextAreaTemplate(field: FieldBlockProperties): string {\n\t\tconst growing = field.formatOptions.textMaxLines ? true : false;\n\n\t\tconst showExceededText = !!field.formatOptions.textMaxLength;\n\n\t\t//unfortunately this one is a \"different\" layoutData than the others, therefore the reuse function from above cannot be used for the textArea template\n\t\tlet layoutData = \"\";\n\t\tif (field.collaborationEnabled) {\n\t\t\tlayoutData = <FlexItemData growFactor=\"9\" />;\n\t\t}\n\n\t\treturn (\n\t\t\t<TextAreaEx\n\t\t\t\tcore:require=\"{Field: 'sap/fe/macros/Field'}\"\n\t\t\t\tid={field.editStyleId}\n\t\t\t\tvalue={field.valueBindingExpression}\n\t\t\t\tplaceholder={field.editStylePlaceholder}\n\t\t\t\trequired={field.requiredExpression}\n\t\t\t\trows={field.formatOptions.textLinesEdit}\n\t\t\t\tgrowing={growing}\n\t\t\t\tgrowingMaxLines={field.formatOptions.textMaxLines}\n\t\t\t\tcols={300} //As the default is 20, the \"cols\" property is configured with a value of 300 to guarantee that the textarea will occupy all the available space.\n\t\t\t\twidth=\"100%\"\n\t\t\t\teditable={field.editableExpression}\n\t\t\t\tenabled={field.enabledExpression}\n\t\t\t\tfieldGroupIds={field.fieldGroupIds}\n\t\t\t\tariaLabelledBy={field.ariaLabelledBy as unknown as Array<Control | string>}\n\t\t\t\tmaxLength={field.formatOptions.textMaxLength}\n\t\t\t\tshowExceededText={showExceededText}\n\t\t\t\tchange={field.eventHandlers.change as (oEvent: InputBase$ChangeEvent) => void}\n\t\t\t\tliveChange={field.eventHandlers.liveChange}\n\t\t\t\tvalidateFieldGroup={field.eventHandlers.validateFieldGroup as (oEvent: Control$ValidateFieldGroupEvent) => void}\n\t\t\t>\n\t\t\t\t{{\n\t\t\t\t\tlayoutData: layoutData,\n\t\t\t\t\tcustomData: <CustomData key=\"sourcePath\" value={field.dataSourcePath} />\n\t\t\t\t}}\n\t\t\t</TextAreaEx>\n\t\t);\n\t},\n\n\t/**\n\t * Generates the RatingIndicator template.\n\t * @param field Reference to the current field instance\n\t * @returns An XML-based string with the definition of the field control\n\t */\n\tgetRatingIndicatorTemplate: (field: FieldBlockProperties): string => {\n\t\tconst tooltip = field.ratingIndicatorTooltip || \"{sap.fe.i18n>T_COMMON_RATING_INDICATOR_TITLE_LABEL}\";\n\n\t\treturn (\n\t\t\t<RatingIndicator\n\t\t\t\tcore:require=\"{Field: 'sap/fe/macros/Field'}\"\n\t\t\t\tid={field.editStyleId}\n\t\t\t\tmaxValue={field.ratingIndicatorTargetValue}\n\t\t\t\tvalue={field.valueBindingExpression}\n\t\t\t\ttooltip={tooltip}\n\t\t\t\tfieldGroupIds={field.fieldGroupIds}\n\t\t\t\ticonSize=\"1.375rem\"\n\t\t\t\tclass=\"sapUiTinyMarginTopBottom\"\n\t\t\t\teditable=\"true\"\n\t\t\t\tchange={field.eventHandlers.change as (oEvent: RatingIndicator$ChangeEvent) => void}\n\t\t\t>\n\t\t\t\t{{\n\t\t\t\t\tlayoutData: EditStyle.getLayoutData(field)\n\t\t\t\t}}\n\t\t\t</RatingIndicator>\n\t\t);\n\t},\n\n\t/**\n\t * Helps to calculate the content edit functionality / templating.\n\t * Including a wrapper an hbox in case of collaboration mode finally\n\t * it calls internally EditStyle.getTemplate.\n\t * @param field Reference to the current field instance\n\t * @returns An XML-based string with the definition of the field control\n\t */\n\tgetTemplateWithWrapper(field: FieldBlockProperties): string {\n\t\tlet contentEdit;\n\n\t\tif ((field.editMode ?? field.computedEditMode) !== FieldEditMode.Display && !!field.editStyle) {\n\t\t\tif (field.collaborationEnabled ?? false) {\n\t\t\t\tcontentEdit = (\n\t\t\t\t\t<CollaborationHBox width=\"100%\" alignItems=\"End\">\n\t\t\t\t\t\t{EditStyle.getTemplate(field)}\n\t\t\t\t\t\t{EditStyle.getCollaborationAvatar(field)}\n\t\t\t\t\t</CollaborationHBox>\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tcontentEdit = EditStyle.getTemplate(field);\n\t\t\t}\n\t\t}\n\n\t\treturn contentEdit || \"\";\n\t},\n\n\t/**\n\t * Generates the InputMask template.\n\t * @param field Reference to the current field instance\n\t * @returns An XML-based string with the definition of the field control\n\t */\n\tgetInputMaskTemplate(field: FieldBlockProperties): string {\n\t\tconst optionalMaskInputRules = [];\n\t\tconst dataModelObjectPath = MetaModelConverter.getInvolvedDataModelObjects<DataFieldTypes>(field.metaPath, field.contextPath);\n\t\tconst textAlign = getTextAlignment(\n\t\t\tdataModelObjectPath,\n\t\t\tfield.formatOptions,\n\t\t\tfield.editModeAsObject as BindingToolkitExpression<string>\n\t\t);\n\t\tif (field.mask?.maskRule) {\n\t\t\tfor (const rule of field.mask.maskRule) {\n\t\t\t\toptionalMaskInputRules.push(<MaskInputRule maskFormatSymbol={rule.symbol} regex={rule.regex} />);\n\t\t\t}\n\t\t}\n\n\t\treturn (\n\t\t\t<MaskInput\n\t\t\t\tcore:require=\"{Field: 'sap/fe/macros/Field'}\"\n\t\t\t\tid={field.editStyleId}\n\t\t\t\tvalue={field.valueBindingExpression}\n\t\t\t\tplaceholder={field.editStylePlaceholder}\n\t\t\t\twidth=\"100%\"\n\t\t\t\teditable={field.editableExpression}\n\t\t\t\tariaLabelledBy={field.ariaLabelledBy as unknown as Array<Control | string>}\n\t\t\t\tmask={field.mask?.mask}\n\t\t\t\tenabled={field.enabledExpression}\n\t\t\t\trequired={field.requiredExpression}\n\t\t\t\tfieldGroupIds={field.fieldGroupIds}\n\t\t\t\ttextAlign={textAlign}\n\t\t\t\tplaceholderSymbol={field.mask?.placeholderSymbol}\n\t\t\t\tliveChange={field.eventHandlers.liveChange as (oEvent: MaskInput$LiveChangeEvent) => void}\n\t\t\t\tvalidateFieldGroup={field.eventHandlers.validateFieldGroup as (oEvent: Control$ValidateFieldGroupEvent) => void}\n\t\t\t>\n\t\t\t\t{{\n\t\t\t\t\trules: optionalMaskInputRules,\n\t\t\t\t\tcustomData: <CustomData key=\"sourcePath\" value={field.dataSourcePath} />\n\t\t\t\t}}\n\t\t\t</MaskInput>\n\t\t);\n\t},\n\n\t/**\n\t * Entry point for further templating processings.\n\t * @param field Reference to the current field instance\n\t * @returns An XML-based string with the definition of the field control\n\t */\n\tgetTemplate: (field: FieldBlockProperties): string | undefined => {\n\t\tlet innerFieldContent;\n\t\tswitch (field.editStyle) {\n\t\t\tcase \"CheckBox\":\n\t\t\t\tif (field.formatOptions.useRadioButtonsForBoolean) {\n\t\t\t\t\tinnerFieldContent = EditStyle.getRadioButtonTemplate(field, true);\n\t\t\t\t} else {\n\t\t\t\t\tinnerFieldContent = EditStyle.getCheckBoxTemplate(field);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"DatePicker\":\n\t\t\tcase \"DateTimePicker\":\n\t\t\tcase \"TimePicker\": {\n\t\t\t\tinnerFieldContent = EditStyle.getDateTimePickerGeneric(field, field.editStyle);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"Input\": {\n\t\t\t\tinnerFieldContent = EditStyle.getInputTemplate(field);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"Masked\": {\n\t\t\t\tinnerFieldContent = EditStyle.getInputTemplate(field);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"InputWithValueHelp\": {\n\t\t\t\tinnerFieldContent = EditStyle.getInputWithValueHelpTemplate(field);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"RatingIndicator\":\n\t\t\t\tinnerFieldContent = EditStyle.getRatingIndicatorTemplate(field);\n\t\t\t\tbreak;\n\t\t\tcase \"TextArea\":\n\t\t\t\tinnerFieldContent = EditStyle.getTextAreaTemplate(field);\n\t\t\t\tbreak;\n\t\t\tcase \"InputMask\":\n\t\t\t\tinnerFieldContent = EditStyle.getInputMaskTemplate(field);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t}\n\n\t\treturn innerFieldContent;\n\t}\n};\n\nexport default EditStyle;\n"],"mappings":"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","ignoreList":[],"file":"EditStyle-dbg.js"}