{"version":3,"file":"DefaultActionHandler.js","names":["DefaultActionHandler","getDefaultActionHandler","table","metaModel","oAction","oDataFieldForDefaultAction","defaultActionContextOrEntitySet","mode","collectionContext","defaultAction","type","actionObject","createBindingContext","getObject","Table","pressEventDataFieldForActionButton","tableDefinition","operationAvailableMap","isNavigable","enableAutoScroll","defaultValuesExtensionFunction","undefined","CommonHelper","getPressHandlerForDataFieldForIBN","enableAnalytics","command","noWrap","press","buildActionWrapper","id","ioEx","getUseDefaultActionOnly","getButtonMode","MenuButtonMode","Split","Regular"],"sources":["./DefaultActionHandler.ts"],"sourcesContent":["import type { DataFieldForAction, DataFieldForIntentBasedNavigation } from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport type { CompiledBindingToolkitExpression } from \"sap/fe/base/BindingToolkit\";\nimport { type CustomAction } from \"sap/fe/core/converters/controls/Common/Action\";\nimport CommonHelper from \"sap/fe/macros/CommonHelper\";\nimport type { CustomAndAction } from \"sap/fe/macros/chart/MdcChartTemplate\";\nimport type { TableBlockProperties } from \"sap/fe/macros/table/MdcTableTemplate\";\nimport Table from \"sap/fe/macros/table/TableHelper\";\nimport { MenuButtonMode } from \"sap/m/library\";\nimport type Context from \"sap/ui/model/Context\";\nimport type ODataMetaModel from \"sap/ui/model/odata/v4/ODataMetaModel\";\n\nconst DefaultActionHandler = {\n\t/**\n\t * The default action group handler that is invoked when adding the menu button handling appropriately.\n\t * @param table The current context in which the handler is called\n\t * @param metaModel The current metaModel\n\t * @param oAction The current action context\n\t * @param oDataFieldForDefaultAction The current dataField for the default action\n\t * @param defaultActionContextOrEntitySet The current context for the default action\n\t * @param mode The optional parameter for the handler mode; default setting is Table\n\t * @param collectionContext\n\t * @returns The appropriate expression string\n\t */\n\tgetDefaultActionHandler: function (\n\t\ttable: TableBlockProperties | undefined,\n\t\tmetaModel: ODataMetaModel | undefined,\n\t\toAction: Omit<CustomAction, \"defaultAction\"> & { defaultAction?: CustomAction },\n\t\toDataFieldForDefaultAction: DataFieldForIntentBasedNavigation | DataFieldForAction | undefined,\n\t\tdefaultActionContextOrEntitySet: string | object | undefined,\n\t\tmode: \"Table\" | \"Form\",\n\t\tcollectionContext: Context\n\t): CompiledBindingToolkitExpression | undefined {\n\t\tif (oAction.defaultAction) {\n\t\t\ttry {\n\t\t\t\tswitch (oAction.defaultAction.type) {\n\t\t\t\t\tcase \"ForAction\": {\n\t\t\t\t\t\tif (mode === \"Table\" && table && metaModel) {\n\t\t\t\t\t\t\tconst actionObject =\n\t\t\t\t\t\t\t\ttypeof defaultActionContextOrEntitySet === \"string\"\n\t\t\t\t\t\t\t\t\t? metaModel.createBindingContext(defaultActionContextOrEntitySet)?.getObject()\n\t\t\t\t\t\t\t\t\t: defaultActionContextOrEntitySet;\n\n\t\t\t\t\t\t\treturn Table.pressEventDataFieldForActionButton(\n\t\t\t\t\t\t\t\ttable,\n\t\t\t\t\t\t\t\toDataFieldForDefaultAction as DataFieldForAction,\n\t\t\t\t\t\t\t\tcollectionContext.getObject(\"@sapui.name\"),\n\t\t\t\t\t\t\t\ttable.tableDefinition.operationAvailableMap,\n\t\t\t\t\t\t\t\tactionObject,\n\t\t\t\t\t\t\t\toAction.isNavigable,\n\t\t\t\t\t\t\t\toAction.enableAutoScroll,\n\t\t\t\t\t\t\t\toAction.defaultValuesExtensionFunction\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t}\n\t\t\t\t\tcase \"ForNavigation\": {\n\t\t\t\t\t\tif (mode === \"Table\" && table) {\n\t\t\t\t\t\t\treturn CommonHelper.getPressHandlerForDataFieldForIBN(\n\t\t\t\t\t\t\t\toDataFieldForDefaultAction as DataFieldForIntentBasedNavigation,\n\t\t\t\t\t\t\t\t\"${internal>selectedContexts}\",\n\t\t\t\t\t\t\t\t!table.tableDefinition.enableAnalytics\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t}\n\t\t\t\t\tdefault: {\n\t\t\t\t\t\tif (oAction.defaultAction.command) {\n\t\t\t\t\t\t\treturn \"cmd:\" + oAction.defaultAction.command;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (oAction.defaultAction.noWrap) {\n\t\t\t\t\t\t\treturn oAction.defaultAction.press;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tswitch (mode) {\n\t\t\t\t\t\t\t\tcase \"Table\": {\n\t\t\t\t\t\t\t\t\treturn CommonHelper.buildActionWrapper(oAction.defaultAction, table);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tcase \"Form\": {\n\t\t\t\t\t\t\t\t\treturn CommonHelper.buildActionWrapper(oAction.defaultAction, { id: \"forTheForm\" });\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (ioEx) {\n\t\t\t\treturn \"binding for the default action is not working as expected\";\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t},\n\n\t/**\n\t * The function determines during templating whether to use the defaultActionOnly\n\t * setting for the sap.m.MenuButton control in case a defaultAction is provided.\n\t * @param oAction The current action context\n\t * @returns A Boolean value\n\t */\n\tgetUseDefaultActionOnly: function (oAction: CustomAndAction): boolean {\n\t\tif (oAction.defaultAction) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t},\n\n\t/**\n\t * The function determines during templating whether to use the 'Split'\n\t * or 'Regular' MenuButtonMode for the sap.m.MenuButton control\n\t * in case a defaultAction is available.\n\t * @param oAction The current action context\n\t * @returns The MenuButtonMode\n\t */\n\tgetButtonMode: function (oAction: CustomAndAction): MenuButtonMode {\n\t\tif (oAction.defaultAction) {\n\t\t\treturn MenuButtonMode.Split;\n\t\t} else {\n\t\t\treturn MenuButtonMode.Regular;\n\t\t}\n\t}\n};\n\nexport default DefaultActionHandler;\n"],"mappings":";;;;mJAWA,MAAMA,EAAuB,CAY5BC,wBAAyB,SACxBC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAEA,GAAIJ,EAAQK,cAAe,CAC1B,IACC,OAAQL,EAAQK,cAAcC,MAC7B,IAAK,YAAa,CACjB,GAAIH,IAAS,SAAWL,GAASC,EAAW,CAC3C,MAAMQ,SACEL,IAAoC,SACxCH,EAAUS,qBAAqBN,IAAkCO,YACjEP,EAEJ,OAAOQ,EAAMC,mCACZb,EACAG,EACAG,EAAkBK,UAAU,eAC5BX,EAAMc,gBAAgBC,sBACtBN,EACAP,EAAQc,YACRd,EAAQe,iBACRf,EAAQgB,+BAEV,CACA,OAAOC,SACR,CACA,IAAK,gBAAiB,CACrB,GAAId,IAAS,SAAWL,EAAO,CAC9B,OAAOoB,EAAaC,kCACnBlB,EACA,gCACCH,EAAMc,gBAAgBQ,gBAEzB,CACA,OAAOH,SACR,CACA,QAAS,CACR,GAAIjB,EAAQK,cAAcgB,QAAS,CAClC,MAAO,OAASrB,EAAQK,cAAcgB,OACvC,CACA,GAAIrB,EAAQK,cAAciB,OAAQ,CACjC,OAAOtB,EAAQK,cAAckB,KAC9B,KAAO,CACN,OAAQpB,GACP,IAAK,QAAS,CACb,OAAOe,EAAaM,mBAAmBxB,EAAQK,cAAeP,EAC/D,CACA,IAAK,OAAQ,CACZ,OAAOoB,EAAaM,mBAAmBxB,EAAQK,cAAe,CAAEoB,GAAI,cACrE,EAEF,CACD,EAEF,CAAE,MAAOC,GACR,MAAO,2DACR,CACD,CACA,OAAOT,SACR,EAQAU,wBAAyB,SAAU3B,GAClC,GAAIA,EAAQK,cAAe,CAC1B,OAAO,IACR,KAAO,CACN,OAAO,KACR,CACD,EASAuB,cAAe,SAAU5B,GACxB,GAAIA,EAAQK,cAAe,CAC1B,OAAOwB,EAAeC,KACvB,KAAO,CACN,OAAOD,EAAeE,OACvB,CACD,GACC,OAEanC,CAAoB","ignoreList":[]}