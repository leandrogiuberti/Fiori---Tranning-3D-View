{"version":3,"names":["buildExpressionForHeaderVisible","header","tabTitle","headerVisible","headerBindingExpression","resolveBindingString","tabTileBindingExpression","headerVisibleBindingExpression","constant","compileExpression","and","not","equal","_exports"],"sourceRoot":".","sources":["TableTemplating.ts"],"sourcesContent":["import type { CompiledBindingToolkitExpression } from \"sap/fe/base/BindingToolkit\";\nimport { and, compileExpression, constant, equal, not, resolveBindingString } from \"sap/fe/base/BindingToolkit\";\n\n/**\n * Method to compute the headerVisible property.\n * @param header Object containing the table properties\n * @param tabTitle Object containing the tab properties\n * @param headerVisible Boolean value to determine if the header is visible\n * @returns Expression binding for headerVisible\n */\nexport const buildExpressionForHeaderVisible = (\n\theader: string,\n\ttabTitle: string,\n\theaderVisible: boolean\n): CompiledBindingToolkitExpression => {\n\tconst headerBindingExpression = resolveBindingString(header);\n\tconst tabTileBindingExpression = resolveBindingString(tabTitle);\n\tconst headerVisibleBindingExpression = constant(headerVisible);\n\treturn compileExpression(and(headerVisibleBindingExpression, not(equal(headerBindingExpression, tabTileBindingExpression))));\n};\n"],"mappings":";;;;;;;;;;;;;;EAGA;AACA;AACA;AACA;AACA;AACA;AACA;EACO,MAAMA,+BAA+B,GAAGA,CAC9CC,MAAc,EACdC,QAAgB,EAChBC,aAAsB,KACgB;IACtC,MAAMC,uBAAuB,GAAGC,oBAAoB,CAACJ,MAAM,CAAC;IAC5D,MAAMK,wBAAwB,GAAGD,oBAAoB,CAACH,QAAQ,CAAC;IAC/D,MAAMK,8BAA8B,GAAGC,QAAQ,CAACL,aAAa,CAAC;IAC9D,OAAOM,iBAAiB,CAACC,GAAG,CAACH,8BAA8B,EAAEI,GAAG,CAACC,KAAK,CAACR,uBAAuB,EAAEE,wBAAwB,CAAC,CAAC,CAAC,CAAC;EAC7H,CAAC;EAACO,QAAA,CAAAb,+BAAA,GAAAA,+BAAA;EAAA,OAAAa,QAAA;AAAA","ignoreList":[],"file":"TableTemplating-dbg.js"}