{"version":3,"file":"TableTemplating.js","names":["buildExpressionForHeaderVisible","header","tabTitle","headerVisible","headerBindingExpression","resolveBindingString","tabTileBindingExpression","headerVisibleBindingExpression","constant","compileExpression","and","not","equal","_exports"],"sources":["./TableTemplating.ts"],"sourcesContent":["import type { CompiledBindingToolkitExpression } from \"sap/fe/base/BindingToolkit\";\nimport { and, compileExpression, constant, equal, not, resolveBindingString } from \"sap/fe/base/BindingToolkit\";\n\n/**\n * Method to compute the headerVisible property.\n * @param header Object containing the table properties\n * @param tabTitle Object containing the tab properties\n * @param headerVisible Boolean value to determine if the header is visible\n * @returns Expression binding for headerVisible\n */\nexport const buildExpressionForHeaderVisible = (\n\theader: string,\n\ttabTitle: string,\n\theaderVisible: boolean\n): CompiledBindingToolkitExpression => {\n\tconst headerBindingExpression = resolveBindingString(header);\n\tconst tabTileBindingExpression = resolveBindingString(tabTitle);\n\tconst headerVisibleBindingExpression = constant(headerVisible);\n\treturn compileExpression(and(headerVisibleBindingExpression, not(equal(headerBindingExpression, tabTileBindingExpression))));\n};\n"],"mappings":";;;;6LAUO,MAAMA,EAAkCA,CAC9CC,EACAC,EACAC,KAEA,MAAMC,EAA0BC,EAAqBJ,GACrD,MAAMK,EAA2BD,EAAqBH,GACtD,MAAMK,EAAiCC,EAASL,GAChD,OAAOM,EAAkBC,EAAIH,EAAgCI,EAAIC,EAAMR,EAAyBE,OAC/FO,EAAAb,kCAAA,OAAAa,CAAA","ignoreList":[]}