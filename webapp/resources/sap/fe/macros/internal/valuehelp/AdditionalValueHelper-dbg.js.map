{"version":3,"names":["AdditionalValueGroupKey","_exports","additionalValueHelper","requestForAdditionalValueContextData","additionalValues","valueHelpListBinding","valueHelpBindingInfo","payload","sorters","table","allListBinding","additionalValueContextPromise","reverseRecommendationValues","filter","value","groupKey","recommendation","reverse","parameters","$select","qualifiers","valueHelpQualifier","vhProperties","searchTerm","$search","isValueListWithFixedValues","$count","listSorters","forEach","sorter","push","Sorter","name","descending","valueHelpListModel","getModel","additionalValueListBindings","getAdditionalValueContextBindings","length","requestContexts","submitBatch","additionalValuesContext","Promise","all","count","getCount","getBindingContext","setProperty","recommendationContexts","allContexts","recommendationValuesContextData","map","context","getObject","othersValuesContextData","additionalValueContextBindings","valueHelpFilters","getValueHelpBindingFilters","getMetaModel","recommendationValueFilters","getAdditionalValueFilters","bindList","path","undefined","metaModel","filters","Array","isArray","addDraftFilter","metaContext","getMetaContext","objectPath","MetaModelConverter","getInvolvedDataModelObjects","isDraftSupported","ModelHelper","isObjectPathDraftSupported","Filter","operator","value1","resumeValueListBindingAndResetChanges","isSuspended","resumeAsync","resetChanges","error","sortAndFilterListBinding","NONE","FilterType","Application","modifiedSorters","getSorterFunction","sort","reverseAdditionalValues","additionalValue","values","propertyPath","resourceBundle","Library","getResourceBundleFor","getProperty","getText","recentValue","createTransientContextsForAdditionalValueContextData","recentValuesContextData","createGroupedTransientContexts","other","additionalValueContextData","contextData","create","created","canceled","Log","getRelevantRecommendations","data","bindingContext","bindingPath","relevantRecommendations","Object","keys","getRecommendationPropertyPath","version","getAdditionalValueFromPropertyPath","valueData","_checkForKeysInRecommendations","keyProperties","key","getAdditionalValueFromKeys","recommendationData","result","recData","allKeysMatch","_getRecommendation","oldData","assign","includes","propertyPaths","split","navPropPath","splice","join","standardRecommendationHelper","getStandardRecommendations","getRelevantOthersValuesContextData","valueHelpKeys","checkValuesMatch","getRelevantRecentValuesContextData","bindingInfo","recentValuesModel","JSONModel","recentValuesList","getAllCurrentContexts","recentValueContextData","filterRecentValuesContextData","contextDataToBeMatched","contextDataList","obj","match","getRelevantRecommendationValuesContextData","recommendationValues","arguments","valueListProperty","relevantRecommendationValuesContextData","foundObject","find","updateFinished","event","source","getSource","tableBindingContext","actual","total","reason","getParameters","paginationData","additionalData","getBinding"],"sourceRoot":".","sources":["AdditionalValueHelper.ts"],"sourcesContent":["import Log from \"sap/base/Log\";\nimport * as MetaModelConverter from \"sap/fe/core/converters/MetaModelConverter\";\nimport ModelHelper from \"sap/fe/core/helpers/ModelHelper\";\nimport type {\n\tInCompletenessInfoType,\n\tInternalPropertyAdditionalValue,\n\tKeyPropertiesDataType,\n\tRecommendationDataForNavPropertyType,\n\tRecommendationValueType\n} from \"sap/fe/core/helpers/RecommendationHelper\";\nimport type { RecommendationInfo, StandardRecommendationDataType } from \"sap/fe/core/helpers/StandardRecommendationHelper\";\nimport { standardRecommendationHelper } from \"sap/fe/core/helpers/StandardRecommendationHelper\";\nimport type { FieldDataType } from \"sap/fe/core/services/ValueHelpHistoryServiceFactory\";\nimport type { SorterType, ValueHelpPayload } from \"sap/fe/macros/internal/valuehelp/ValueListHelper\";\nimport type Table from \"sap/m/Table\";\nimport type UI5Event from \"sap/ui/base/Event\";\nimport type EventProvider from \"sap/ui/base/EventProvider\";\nimport type { BaseAggregationBindingInfo } from \"sap/ui/base/ManagedObject\";\nimport Library from \"sap/ui/core/Lib\";\nimport type MTable from \"sap/ui/mdc/valuehelp/content/MTable\";\nimport type Context from \"sap/ui/model/Context\";\nimport Filter from \"sap/ui/model/Filter\";\nimport FilterType from \"sap/ui/model/FilterType\";\nimport Sorter from \"sap/ui/model/Sorter\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\nimport type V4Context from \"sap/ui/model/odata/v4/Context\";\nimport type { ContextErrorType } from \"sap/ui/model/odata/v4/Context\";\nimport type ODataListBinding from \"sap/ui/model/odata/v4/ODataListBinding\";\nimport type ODataMetaModel from \"sap/ui/model/odata/v4/ODataMetaModel\";\nimport type ODataModel from \"sap/ui/model/odata/v4/ODataModel\";\n\nenum AdditionalValueGroupKey {\n\trecommendation = \"recommendation\",\n\trecentValue = \"recentValue\",\n\tother = \"other\"\n}\nexport type AdditionalValueType = {\n\tpropertyPath: string;\n\tvalues: (string | number | boolean)[];\n\tgroupKey: AdditionalValueGroupKey; // unique identifier for the group\n};\nexport type BindingInfoParameters = {\n\t$select: string[];\n\t$expand?: string[];\n\t$search: string;\n\t$count: boolean;\n};\n\nexport type AdditionValueDefinition =\n\t| InCompletenessInfoType\n\t| RecommendationDataForNavPropertyType[]\n\t| InternalPropertyAdditionalValue\n\t| object;\nconst additionalValueHelper = {\n\t/**\n\t * This function is responsible to create context based on additional value filters and custom sorter and request contexts from it.\n\t * @param additionalValues Array of additional values\n\t * @param valueHelpListBinding List binding\n\t * @param valueHelpBindingInfo The binding info object to be used to bind the list to the model\n\t * @param payload Payload of the value help\n\t * @param sorters Sorters of the value help list binding\n\t * @param table Table for which the value help is requested\n\t * @returns Additional value contexts\n\t */\n\trequestForAdditionalValueContextData: async function (\n\t\tadditionalValues: AdditionalValueType[],\n\t\tvalueHelpListBinding: ODataListBinding,\n\t\tvalueHelpBindingInfo: BaseAggregationBindingInfo,\n\t\tpayload: ValueHelpPayload,\n\t\tsorters: SorterType[],\n\t\ttable: Table\n\t): Promise<{\n\t\trecommendationValuesContextData: FieldDataType[];\n\t\tothersValuesContextData: FieldDataType[];\n\t}> {\n\t\tlet allListBinding: ODataListBinding | undefined;\n\t\tconst additionalValueContextPromise: Promise<V4Context[]>[] = [];\n\t\t// reverse the array so that while creating transient context first additional value is grouped first\n\t\tconst reverseRecommendationValues = [\n\t\t\t...additionalValues.filter((value) => value.groupKey === AdditionalValueGroupKey.recommendation)\n\t\t].reverse();\n\n\t\t// logic to add $select for multi-level navigation properties as filling $select is sufficient for the model to create the expand calls\n\t\t(valueHelpBindingInfo.parameters as BindingInfoParameters).$select =\n\t\t\tpayload.qualifiers[payload.valueHelpQualifier].vhProperties ?? [];\n\n\t\t// check if there is any input in the field\n\t\t// This information is used to determine to show the \"others\" section or not\n\t\t// and also to determine if typeAhead should open or not\n\t\tconst searchTerm = (valueHelpBindingInfo.parameters as BindingInfoParameters).$search;\n\t\t(valueHelpBindingInfo.parameters as BindingInfoParameters).$search = searchTerm;\n\t\tif (payload.isValueListWithFixedValues) {\n\t\t\t(valueHelpBindingInfo.parameters as BindingInfoParameters).$count = true;\n\t\t}\n\t\tconst listSorters: Sorter[] = [];\n\t\tsorters.forEach((sorter: SorterType) => listSorters.push(new Sorter(sorter.name ?? \"\", sorter.descending)));\n\t\tconst valueHelpListModel: ODataModel = valueHelpListBinding.getModel() as ODataModel;\n\t\t// get the list binding for recommendation values and others values\n\t\tconst additionalValueListBindings: ODataListBinding[] = this.getAdditionalValueContextBindings(\n\t\t\treverseRecommendationValues,\n\t\t\tsearchTerm,\n\t\t\tpayload,\n\t\t\tvalueHelpListModel,\n\t\t\tvalueHelpBindingInfo,\n\t\t\tlistSorters\n\t\t);\n\t\tif (additionalValueListBindings.length > 0) {\n\t\t\tif (additionalValueListBindings.length === 2) {\n\t\t\t\tadditionalValueContextPromise.push(additionalValueListBindings[0].requestContexts(0, 10, \"additionalValue\"));\n\t\t\t\tallListBinding = additionalValueListBindings[1];\n\t\t\t} else {\n\t\t\t\tallListBinding = additionalValueListBindings[0];\n\t\t\t}\n\t\t\t// in case of dropdown, we fetch first 100 records on first load and then make subsequent requests upon user's scroll.\n\t\t\tadditionalValueContextPromise.push(\n\t\t\t\tallListBinding.requestContexts(0, payload.isValueListWithFixedValues ? 100 : 10, \"additionalValue\")\n\t\t\t);\n\t\t}\n\t\tawait valueHelpListModel.submitBatch(\"additionalValue\");\n\t\tconst additionalValuesContext = await Promise.all(additionalValueContextPromise);\n\t\t// we store this list bindings in order to be able to make subsequent requests on user's scroll\n\t\tconst count = allListBinding?.getCount();\n\t\tif (count && count > 100) {\n\t\t\ttable.getBindingContext(\"internal\")?.setProperty(\"allListBinding\", allListBinding);\n\t\t}\n\t\tlet recommendationContexts: V4Context[] = [],\n\t\t\tallContexts: V4Context[] = [];\n\t\tif (reverseRecommendationValues.length > 0) {\n\t\t\trecommendationContexts = additionalValuesContext[0];\n\t\t\tif (searchTerm || payload.isValueListWithFixedValues) {\n\t\t\t\tallContexts = additionalValuesContext[1];\n\t\t\t}\n\t\t} else if (searchTerm || payload.isValueListWithFixedValues) {\n\t\t\tallContexts = additionalValuesContext[0];\n\t\t}\n\n\t\tconst recommendationValuesContextData = recommendationContexts.map((context) => context.getObject() as FieldDataType);\n\t\tconst othersValuesContextData: FieldDataType[] = allContexts.map((context) => context.getObject() as FieldDataType);\n\n\t\treturn {\n\t\t\trecommendationValuesContextData,\n\t\t\tothersValuesContextData\n\t\t};\n\t},\n\t/**\n\t * Method to retrieve all relevant list bindings (recommendation and others) that is needed to make a backend call.\n\t * @param reverseRecommendationValues Reversed recommendation values\n\t * @param searchTerm Search term entered by the user\n\t * @param payload Payload of the value help\n\t * @param valueHelpListModel Model of the value help\n\t * @param valueHelpBindingInfo Binding info of the value help\n\t * @param sorter Custom sorter which needs to be applied to the list binding\n\t * @returns All the list binding which would be used to trigger calls to the backend.\n\t */\n\tgetAdditionalValueContextBindings: function (\n\t\treverseRecommendationValues: AdditionalValueType[],\n\t\tsearchTerm: string,\n\t\tpayload: ValueHelpPayload,\n\t\tvalueHelpListModel: ODataModel,\n\t\tvalueHelpBindingInfo: BaseAggregationBindingInfo,\n\t\tsorter: Sorter[]\n\t): ODataListBinding[] {\n\t\tconst additionalValueContextBindings: ODataListBinding[] = [];\n\t\tconst valueHelpFilters: Filter[] = [\n\t\t\t...this.getValueHelpBindingFilters(valueHelpBindingInfo, payload, valueHelpListModel.getMetaModel())\n\t\t];\n\t\tconst recommendationValueFilters = this.getAdditionalValueFilters(reverseRecommendationValues, [...valueHelpFilters]);\n\n\t\tif (reverseRecommendationValues.length > 0) {\n\t\t\t// binding represent recommendation list binding.\n\t\t\tadditionalValueContextBindings.push(\n\t\t\t\tvalueHelpListModel.bindList(\n\t\t\t\t\tvalueHelpBindingInfo.path,\n\t\t\t\t\tundefined,\n\t\t\t\t\tundefined,\n\t\t\t\t\trecommendationValueFilters,\n\t\t\t\t\tvalueHelpBindingInfo.parameters\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t\tif (searchTerm || payload.isValueListWithFixedValues) {\n\t\t\t// binding represent all data list bindings.\n\t\t\tadditionalValueContextBindings.push(\n\t\t\t\tvalueHelpListModel.bindList(valueHelpBindingInfo.path, undefined, sorter, valueHelpFilters, valueHelpBindingInfo.parameters)\n\t\t\t);\n\t\t}\n\n\t\treturn additionalValueContextBindings;\n\t},\n\t/**\n\t * This function is responsible to fetch the valuehelp binding filters.\n\t * @param valueHelpBindingInfo The binding info object to be used to bind the list to the model\n\t * @param payload Payload of the value help to check if it's a dropdown scenario\n\t * @param metaModel The OData meta model to resolve entity set from path\n\t * @returns Filters of valuehelp binding\n\t */\n\tgetValueHelpBindingFilters: function (\n\t\tvalueHelpBindingInfo: BaseAggregationBindingInfo,\n\t\tpayload?: ValueHelpPayload,\n\t\tmetaModel?: ODataMetaModel\n\t): Filter[] {\n\t\tconst filters: Filter[] = [];\n\t\t// get all existing filters from the binding info\n\t\t// this + additional value filters will be used later on to fetch additional values from the backend\n\t\tif (valueHelpBindingInfo.filters) {\n\t\t\tif (Array.isArray(valueHelpBindingInfo.filters)) {\n\t\t\t\tfilters.push(...valueHelpBindingInfo.filters);\n\t\t\t} else {\n\t\t\t\tfilters.push(valueHelpBindingInfo.filters);\n\t\t\t}\n\t\t}\n\t\t// Add draft filter for OData draft-enabled entities\n\t\t// Check if the entity is draft-enabled and apply IsActiveEntity = true filter\n\t\tthis.addDraftFilter(valueHelpBindingInfo, filters, payload, metaModel);\n\t\treturn filters;\n\t},\n\t/**\n\t * This function adds a draft filter for OData draft-enabled entities.\n\t * @param valueHelpBindingInfo The binding info object to be used to bind the list to the model\n\t * @param filters The existing filters array to add the draft filter to\n\t * @param payload Payload of the value help to check if it's a dropdown scenario\n\t * @param metaModel The OData meta model to resolve entity set from path\n\t */\n\taddDraftFilter: function (\n\t\tvalueHelpBindingInfo: BaseAggregationBindingInfo,\n\t\tfilters: Filter[],\n\t\tpayload?: ValueHelpPayload,\n\t\tmetaModel?: ODataMetaModel\n\t): void {\n\t\tif (valueHelpBindingInfo.path && metaModel) {\n\t\t\t// Get the EntitySet from the path using MetaModel\n\t\t\tconst metaContext = metaModel.getMetaContext(valueHelpBindingInfo.path);\n\t\t\tconst objectPath = MetaModelConverter.getInvolvedDataModelObjects(metaContext);\n\n\t\t\t// Check if the entity is draft-enabled using ModelHelper\n\t\t\t// This covers DraftRoot, DraftNode, and containment scenarios\n\t\t\tconst isDraftSupported = ModelHelper.isObjectPathDraftSupported(objectPath);\n\n\t\t\t// Check if it's a dropdown scenario (ValueListWithFixedValues)\n\t\t\tconst isValueListWithFixedValues = payload?.isValueListWithFixedValues ?? false;\n\n\t\t\t// Only add draft filter if entity is draft-enabled and it's a dropdown scenario\n\t\t\tif (isDraftSupported && isValueListWithFixedValues) {\n\t\t\t\t// Add IsActiveEntity filter for draft-enabled entities\n\t\t\t\t// This filter ensures only active (non-draft) entities are shown in value help dropdowns\n\t\t\t\tfilters.push(\n\t\t\t\t\tnew Filter({\n\t\t\t\t\t\tpath: \"IsActiveEntity\",\n\t\t\t\t\t\toperator: \"EQ\",\n\t\t\t\t\t\tvalue1: true\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t},\n\t/**\n\t * This function resumes the suspended list binding and then resets changes on it.\n\t * @param valueHelpListBinding List binding\n\t */\n\tresumeValueListBindingAndResetChanges: async function (valueHelpListBinding: ODataListBinding): Promise<void> {\n\t\tif (valueHelpListBinding.isSuspended()) {\n\t\t\tawait valueHelpListBinding.resumeAsync();\n\t\t}\n\t\t// get rid of existing transient contexts.\n\n\t\t// destroying causes issues sometimes, contexts are not always available to destroy but appear afterwards magically\n\t\ttry {\n\t\t\tawait valueHelpListBinding.resetChanges();\n\t\t} catch (error: unknown) {\n\t\t\t//We do not do anything here as we know the model will always throw an error and this will fill up the console with errors.\n\t\t}\n\t},\n\t/**\n\t * This function is used for sorting and filtering the list binding.\n\t * @param valueHelpListBinding List Binding\n\t * @param sorters Sorters of the value help list binding\n\t */\n\tsortAndFilterListBinding: function (valueHelpListBinding: ODataListBinding, sorters: SorterType[]): void {\n\t\t// In order to not show the list at all, we pass an empty filter which would render an empty list\n\t\tvalueHelpListBinding.filter(Filter.NONE, FilterType.Application);\n\n\t\tif (sorters.length) {\n\t\t\tconst modifiedSorters: Sorter[] = [];\n\t\t\tsorters.forEach((sorter: SorterType) =>\n\t\t\t\tmodifiedSorters.push(new Sorter(sorter.name ?? \"\", sorter.descending, this.getSorterFunction))\n\t\t\t);\n\t\t\tvalueHelpListBinding.sort(modifiedSorters);\n\t\t} else valueHelpListBinding.sort(new Sorter(\"\", false, this.getSorterFunction));\n\t},\n\t/**\n\t * This functions creates the filters for additional values.\n\t * @param reverseAdditionalValues Array of additional values in reverse order\n\t * @param filters Existing valuehelp binding filters\n\t * @returns Additional value filters\n\t */\n\tgetAdditionalValueFilters: function (reverseAdditionalValues: AdditionalValueType[], filters: Filter[]): Filter[] {\n\t\treverseAdditionalValues.forEach((additionalValue) => {\n\t\t\tif (additionalValue.values.length > 0) {\n\t\t\t\tconst values = additionalValue.values;\n\t\t\t\tconst propertyPath = additionalValue.propertyPath;\n\t\t\t\t// add additional value filters to existing filters from the binding info\n\t\t\t\tvalues.forEach((value) => {\n\t\t\t\t\t// update the value help binding info to get additional values from the backend\n\t\t\t\t\tfilters.push(\n\t\t\t\t\t\tnew Filter({\n\t\t\t\t\t\t\tpath: propertyPath,\n\t\t\t\t\t\t\tvalue1: value,\n\t\t\t\t\t\t\toperator: \"EQ\"\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\treturn filters;\n\t},\n\t/**\n\t * This function is a callback to the custom sorter.\n\t * @param context Context of the Field\n\t * @returns Group key that can be used for sorting\n\t */\n\tgetSorterFunction: function (context: V4Context): string {\n\t\t//eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\tconst resourceBundle = Library.getResourceBundleFor(\"sap.fe.macros\")!;\n\t\t//get the client side annotation to figure out the group key\n\t\tconst groupKey = context.getProperty(\"@$fe.additionalValueGroupKey\") as AdditionalValueGroupKey;\n\t\tif (groupKey === AdditionalValueGroupKey.recommendation) {\n\t\t\treturn resourceBundle.getText(\"M_ADDITIONALVALUEHELPER_RECOMMENDATIONS\");\n\t\t} else if (groupKey === AdditionalValueGroupKey.recentValue) {\n\t\t\treturn resourceBundle.getText(\"M_ADDITIONALVALUEHELPER_RECENTVALUE\");\n\t\t} else {\n\t\t\treturn resourceBundle.getText(\"M_ADDITIONALVALUEHELPER_OTHERS\");\n\t\t}\n\t},\n\t/**\n\t * Method to create transient contexts of the value help list binding for the given different types additional value context data.\n\t * @param recommendationValuesContextData Recommendation values context data\n\t * @param recentValuesContextData Recent values context data\n\t * @param othersValuesContextData Other values context data\n\t * @param valueHelpListBinding List binding\n\t */\n\tcreateTransientContextsForAdditionalValueContextData: function (\n\t\trecommendationValuesContextData: FieldDataType[],\n\t\trecentValuesContextData: FieldDataType[],\n\t\tothersValuesContextData: FieldDataType[],\n\t\tvalueHelpListBinding: ODataListBinding\n\t): void {\n\t\tthis.createGroupedTransientContexts(othersValuesContextData, valueHelpListBinding, AdditionalValueGroupKey.other);\n\t\tthis.createGroupedTransientContexts(recentValuesContextData, valueHelpListBinding, AdditionalValueGroupKey.recentValue);\n\t\tthis.createGroupedTransientContexts(recommendationValuesContextData, valueHelpListBinding, AdditionalValueGroupKey.recommendation);\n\t},\n\t/**\n\t * Method to create transient context for the given additional value context data. It also adds a key for each context which is used to group the newly created transient contexts accordingly.\n\t * @param additionalValueContextData Additional value context data\n\t * @param valueHelpListBinding List binding\n\t * @param groupKey Key which indicates the group of the additional value context data\n\t */\n\tcreateGroupedTransientContexts: function (\n\t\tadditionalValueContextData: FieldDataType[],\n\t\tvalueHelpListBinding: ODataListBinding,\n\t\tgroupKey: AdditionalValueGroupKey\n\t): void {\n\t\t// reverse of the context data is required so that the context which needs to be shown below in the list gets created first\n\t\t[...additionalValueContextData].reverse().forEach(async (contextData: FieldDataType) => {\n\t\t\t// groupKey is added in order to properly group the transient contexts amongst all 3 groups\n\t\t\tcontextData[\"@$fe.additionalValueGroupKey\"] = groupKey;\n\t\t\tconst context = valueHelpListBinding.create(contextData);\n\t\t\ttry {\n\t\t\t\tawait context.created();\n\t\t\t} catch (error) {\n\t\t\t\t// For transient contexts the canceled is set to true and for other cases it will be false. Atleast in recommendations\n\t\t\t\t// use case we do not face the scenario where canceled is set to false. For now we are just logging the error.\n\t\t\t\tif (!(error as ContextErrorType).canceled) {\n\t\t\t\t\tLog.error((error as ContextErrorType).name);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t},\n\t/**\n\t * This functions returns the relevant recommendations for the valuelist.\n\t * @param data Object containing recommendation model data\n\t * @param bindingContext Binding context of the Field\n\t * @param propertyPath Property Path of the Field\n\t * @param bindingPath\n\t * @returns Relevant recommendations for the valuelist\n\t */\n\tgetRelevantRecommendations: function (\n\t\tdata: InCompletenessInfoType | object,\n\t\tbindingContext: V4Context,\n\t\tpropertyPath: string,\n\t\tbindingPath?: string\n\t): Array<string | number> | null | undefined {\n\t\tconst values: Array<string | number> = [];\n\t\tlet relevantRecommendations: InternalPropertyAdditionalValue | undefined;\n\t\tif (Object.keys(data).length > 0) {\n\t\t\t//get the right property path by eliminating the starting / and also main entityset name\n\t\t\tpropertyPath = this.getRecommendationPropertyPath(propertyPath);\n\t\t\tif ((data as RecommendationInfo).version === 2.0 && bindingPath) {\n\t\t\t\tpropertyPath = bindingPath;\n\t\t\t}\n\t\t\t//get the recommendations based on property path and binding context passed\n\t\t\trelevantRecommendations = this.getAdditionalValueFromPropertyPath(propertyPath, bindingContext, data) as\n\t\t\t\t| InternalPropertyAdditionalValue\n\t\t\t\t| undefined;\n\t\t\t//if we get recommendations then push the values\n\t\t\tif (relevantRecommendations && Object.keys(relevantRecommendations).length > 0) {\n\t\t\t\trelevantRecommendations.additionalValues.forEach((valueData: RecommendationValueType) => {\n\t\t\t\t\tvalues.push(valueData.value);\n\t\t\t\t});\n\t\t\t\treturn values;\n\t\t\t} else {\n\t\t\t\t//if recommendations are not found then return null\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t},\n\n\t_checkForKeysInRecommendations: function (keyProperties: KeyPropertiesDataType, contextData: Record<string, string>): boolean {\n\t\tfor (const key in keyProperties) {\n\t\t\tif (keyProperties[key] !== contextData[key]) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t},\n\t/**\n\t * This function is responsible to fetch the exact object from an array of objects that contains relevant recommendationData based on keys.\n\t * @param recommendationData Array containing additional values\n\t * @param bindingContext Binding context of the Field\n\t * @returns Relevant object from an array of object that contains the additional value\n\t */\n\tgetAdditionalValueFromKeys: function (\n\t\trecommendationData: AdditionValueDefinition,\n\t\tbindingContext?: V4Context | Context\n\t): AdditionValueDefinition {\n\t\tconst contextData = bindingContext?.getObject() as Record<string, string> | undefined;\n\t\tlet result: AdditionValueDefinition = {};\n\t\t//loop through the recommendationData and check if the keyProperties match with the binding context data\n\t\tif (bindingContext && contextData) {\n\t\t\tif (Array.isArray(recommendationData)) {\n\t\t\t\t(recommendationData as RecommendationDataForNavPropertyType[]).forEach((recData) => {\n\t\t\t\t\tconst keyProperties = recData.keyProperties as KeyPropertiesDataType;\n\t\t\t\t\tconst allKeysMatch = this._checkForKeysInRecommendations(keyProperties, contextData);\n\t\t\t\t\t//if every key value matches with the binding context data then assign it to result which will be returned\n\t\t\t\t\tif (allKeysMatch) {\n\t\t\t\t\t\tresult = recData as AdditionValueDefinition;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t},\n\n\t_getRecommendation: function (\n\t\tpropertyPath: string,\n\t\tbindingContext: Context,\n\t\trecommendationData: AdditionValueDefinition\n\t): AdditionValueDefinition {\n\t\t//create a copy of the recommendationData to store its previous value as it will change because of the recursive approach\n\t\tlet oldData = Object.assign(recommendationData, {});\n\t\t//check if property path exists on the recommendationData object and if so then return the object pointing to the property path\n\t\tif (Object.keys(recommendationData).includes(propertyPath)) {\n\t\t\treturn (recommendationData as InCompletenessInfoType)[propertyPath] as AdditionValueDefinition;\n\t\t} else {\n\t\t\t//if property path is not present then check if it is 1:n mapping and we need to do a recursive approach to land on the exact object containing the relevant recommendations\n\t\t\t//continue the while loop till the property path is found in the previous recommendationData\n\t\t\twhile (Object.keys(oldData).length > 0 && !Object.keys(oldData).includes(propertyPath)) {\n\t\t\t\t// as it might be 1:n mapping so first seperate the navprop name and actual prop name to make sure we find the navprop first and then from its pointing object we find the property path\n\t\t\t\t//eg: _Item/Material will be first divided into _Item and we search for it and then from its relevant object we search for Material\n\t\t\t\tconst propertyPaths = propertyPath.split(\"/\");\n\t\t\t\tif (propertyPaths.length > 1) {\n\t\t\t\t\t//getting the navprop path\n\t\t\t\t\tconst navPropPath = propertyPaths[0];\n\t\t\t\t\t//removing the navprop path from propertypaths so that we only check for actual property path\n\t\t\t\t\tpropertyPaths.splice(0, 1);\n\t\t\t\t\tpropertyPath = propertyPaths.join(\"/\");\n\t\t\t\t\t//using getAdditionalValueFromPropertyPath and passing navPropPath we get the exact array of objects pointing to the navProp\n\t\t\t\t\trecommendationData = this.getAdditionalValueFromPropertyPath(\n\t\t\t\t\t\tnavPropPath,\n\t\t\t\t\t\tbindingContext,\n\t\t\t\t\t\trecommendationData\n\t\t\t\t\t) as RecommendationDataForNavPropertyType[];\n\t\t\t\t\t//no pass the array of objects of navProp to getAdditionalValueFromKeys and get the exact object that contains the recommendationData based on keys\n\t\t\t\t\trecommendationData = this.getAdditionalValueFromKeys(recommendationData, bindingContext);\n\t\t\t\t\tif (Object.keys(recommendationData).length > 0) {\n\t\t\t\t\t\t//set the recommendationData to oldData before assigning the new value to it\n\t\t\t\t\t\toldData = Object.assign(recommendationData, {});\n\t\t\t\t\t\t//here we check for the actual property path from the object we found from getAdditionalValueFromKeys\n\t\t\t\t\t\t//eg: Material can be found in the object which is part of array of objects of _Item\n\t\t\t\t\t\trecommendationData = this.getAdditionalValueFromPropertyPath(\n\t\t\t\t\t\t\tpropertyPath,\n\t\t\t\t\t\t\tbindingContext,\n\t\t\t\t\t\t\trecommendationData\n\t\t\t\t\t\t) as AdditionValueDefinition;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn {};\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn {};\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn recommendationData;\n\t\t}\n\t},\n\n\t/**\n\t * This function is responsible for getting the additional value based on property path and binding context passed.\n\t * @param propertyPath Property path of the field\n\t * @param bindingContext Binding context of the field\n\t * @param recommendationData Object containing additional value\n\t * @returns Additional value based on property path and binding context passed\n\t */\n\tgetAdditionalValueFromPropertyPath: function (\n\t\tpropertyPath: string,\n\t\tbindingContext: V4Context | Context,\n\t\trecommendationData?: AdditionValueDefinition | RecommendationInfo\n\t): AdditionValueDefinition | StandardRecommendationDataType | undefined {\n\t\tif ((recommendationData as RecommendationInfo).version === 2) {\n\t\t\treturn standardRecommendationHelper.getStandardRecommendations(\n\t\t\t\tbindingContext,\n\t\t\t\tpropertyPath,\n\t\t\t\trecommendationData as RecommendationInfo\n\t\t\t);\n\t\t}\n\t\tif (recommendationData) {\n\t\t\treturn this._getRecommendation(propertyPath, bindingContext, recommendationData);\n\t\t}\n\t},\n\t/**\n\t * This function returns the property path of the field by removing the leading '/' and main entity set name.\n\t * @param propertyPath Property Path of the Field\n\t * @returns Property path of the field by removing the leading '/' and main entity set name.\n\t */\n\tgetRecommendationPropertyPath: function (propertyPath: string): string {\n\t\t//First we split the property path based on /\n\t\tconst propertyPaths = propertyPath.split(\"/\");\n\t\t//Now remove the first two elements of the array. As first element will always be '' and second element will be main entity set name\n\t\tpropertyPaths.splice(0, 2);\n\t\t//Now join the remaining elements to create a new property path and return it\n\t\treturn propertyPaths.join(\"/\");\n\t},\n\t/**\n\t * Method to filter Others values context data and remove values which are also present in Recently Used and Recommendation group.\n\t * @param recommendationValuesContextData Recommendation values context data\n\t * @param recentValuesContextData Recent values context data\n\t * @param othersValuesContextData Others values context data\n\t * @param valueHelpKeys ValueListProperty of the payload\n\t * @returns Others values context data.\n\t */\n\tgetRelevantOthersValuesContextData: function (\n\t\trecommendationValuesContextData: FieldDataType[],\n\t\trecentValuesContextData: FieldDataType[],\n\t\tothersValuesContextData: FieldDataType[],\n\t\tvalueHelpKeys: string[]\n\t): FieldDataType[] {\n\t\treturn othersValuesContextData.filter(\n\t\t\t(contextData) =>\n\t\t\t\t!this.checkValuesMatch(contextData, recommendationValuesContextData, valueHelpKeys) &&\n\t\t\t\t!this.checkValuesMatch(contextData, recentValuesContextData, valueHelpKeys)\n\t\t);\n\t},\n\t/**\n\t * Method to check whether recent values matches either with the search term or with the others values.\n\t * @param othersValuesContextData Others values context data\n\t * @param recentValuesContextData Recent values context data\n\t * @param valueHelpKeys ValueListProperty of the payload\n\t * @param searchTerm Search term entered by the user\n\t * @param bindingInfo Binding info object of the value help\n\t * @returns Recent values context data which needs to be show in the Recently Used group in the type ahead suggestion list.\n\t */\n\tgetRelevantRecentValuesContextData: function (\n\t\tothersValuesContextData: FieldDataType[],\n\t\trecentValuesContextData: FieldDataType[],\n\t\tvalueHelpKeys: string[],\n\t\tsearchTerm: string,\n\t\tbindingInfo: BaseAggregationBindingInfo\n\t): FieldDataType[] {\n\t\t// filter out recent value based on existing value help filters\n\t\tconst recentValuesModel = new JSONModel({ recentValuesContextData });\n\t\tconst recentValuesList = recentValuesModel.bindList(\n\t\t\t\"/recentValuesContextData\",\n\t\t\tundefined,\n\t\t\tundefined,\n\t\t\tthis.getValueHelpBindingFilters(bindingInfo)\n\t\t);\n\t\trecentValuesContextData = recentValuesList.getAllCurrentContexts().map((context) => context.getObject() as FieldDataType);\n\n\t\t// consider only those recent values which either matches with the search term or with the response received from backend for the Others group.\n\t\t// Both the filters needs to be applied so that so that order of the recent values does not change, which is important for the order in which\n\t\t// the data would be shown in the type ahead suggestion list.\n\t\treturn recentValuesContextData.filter((recentValueContextData) =>\n\t\t\tthis.filterRecentValuesContextData(recentValueContextData, searchTerm, valueHelpKeys, othersValuesContextData)\n\t\t);\n\t},\n\t/**\n\t * Method to check whether the given recent value context data matches with the given search term or the others values.\n\t * @param recentValueContextData Recent values context data\n\t * @param searchTerm Search term entered by the user\n\t * @param valueHelpKeys ValueListProperty of the payload\n\t * @param othersValuesContextData Others values context data\n\t * @returns True if the given recent value context satisfies the filter condition.\n\t */\n\tfilterRecentValuesContextData: function (\n\t\trecentValueContextData: FieldDataType,\n\t\tsearchTerm: string,\n\t\tvalueHelpKeys: string[],\n\t\tothersValuesContextData: FieldDataType[]\n\t): boolean {\n\t\tfor (const key in recentValueContextData) {\n\t\t\tif (typeof recentValueContextData[key] === \"object\") {\n\t\t\t\tif (\n\t\t\t\t\tthis.filterRecentValuesContextData(\n\t\t\t\t\t\trecentValueContextData[key] as FieldDataType,\n\t\t\t\t\t\tsearchTerm,\n\t\t\t\t\t\tvalueHelpKeys,\n\t\t\t\t\t\tothersValuesContextData\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t} else if (typeof recentValueContextData[key] === \"string\") {\n\t\t\t\tif (\n\t\t\t\t\t(!searchTerm && othersValuesContextData.length === 0) || // Case where focus is just set to the value help field\n\t\t\t\t\t(recentValueContextData[key] as string).includes(searchTerm) ||\n\t\t\t\t\t(valueHelpKeys.includes(key) && this.checkValuesMatch(recentValueContextData, othersValuesContextData, valueHelpKeys))\n\t\t\t\t) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\t/**\n\t * Checks if the values of specified keys in contextDataToBeMatched match with any object in contextDataList.\n\t * @param contextDataToBeMatched The context data object to compare\n\t * @param contextDataList The array of context data objects to compare against\n\t * @param valueHelpKeys The keys to compare from contextDataToBeMatched with contextDataList objects\n\t * @returns Returns true if any object in contextDataList matches the values of the specified keys in contextDataToBeMatched, otherwise false.\n\t */\n\tcheckValuesMatch: function (contextDataToBeMatched: FieldDataType, contextDataList: FieldDataType[], valueHelpKeys: string[]): boolean {\n\t\tfor (const obj of contextDataList) {\n\t\t\tlet match = true;\n\t\t\tfor (const key of valueHelpKeys) {\n\t\t\t\t// Check if the value of the key in recentValuesContextData\n\t\t\t\t// matches the value of the key in the current object from othersValuesContextData\n\t\t\t\tif (contextDataToBeMatched[key] !== obj[key]) {\n\t\t\t\t\tmatch = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (match) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t},\n\t/**\n\t * Method to rearrange the given additional value context data as per the chronological order of the given additional values.\n\t * This is to ensure that the recommendation data fetched from backend are shown in the same order of recommendation values fetched from recommendation service.\n\t * @param recommendationValuesContextData Recommendation values context data\n\t * @param recommendationValues Recommendation values\n\t * @param valueListProperty Value list property of the value help\n\t * @returns Recommendation values context data in the correct order.\n\t */\n\tgetRelevantRecommendationValuesContextData: function (\n\t\trecommendationValuesContextData: FieldDataType[],\n\t\trecommendationValues: (string | number | boolean)[] = [],\n\t\tvalueListProperty: string\n\t): FieldDataType[] {\n\t\tconst relevantRecommendationValuesContextData: FieldDataType[] = [];\n\t\trecommendationValues.forEach((value) => {\n\t\t\tconst foundObject = recommendationValuesContextData.find((contextData) => contextData[valueListProperty] === value);\n\t\t\tif (foundObject) {\n\t\t\t\trelevantRecommendationValuesContextData.push(foundObject);\n\t\t\t}\n\t\t});\n\n\t\treturn relevantRecommendationValuesContextData;\n\t},\n\t/**\n\t * Method to make batch calls to support pagination.\n\t * This is to ensure that the additional data fetched from the backend is displayed in the correct order.\n\t * @param event An event object that consists of an ID, source, and a parameter map.\n\t */\n\tupdateFinished: async function name(event: UI5Event): Promise<void> {\n\t\tconst source = event.getSource() as { source?: EventProvider } as MTable;\n\t\tconst tableBindingContext: Context | undefined | null = source.getBindingContext(\"internal\"),\n\t\t\tallListBinding = tableBindingContext?.getProperty(\"allListBinding\") as ODataListBinding | undefined;\n\t\tconst { actual, total, reason } = event.getParameters() as { actual: number; total: number; reason: string };\n\t\t// as user scrolls down and once we reach end of the list, we fetch the next set of data from the backend\n\t\tif (allListBinding && reason === \"Growing\" && actual === total) {\n\t\t\tconst paginationData = await allListBinding.requestContexts(total, 100),\n\t\t\t\tadditionalData = paginationData.map((data: V4Context) => data.getObject() as FieldDataType);\n\t\t\tadditionalData.forEach(async (contextData: FieldDataType) => {\n\t\t\t\tconst context = (source.getBinding(\"items\") as ODataListBinding).create(contextData, undefined, true);\n\t\t\t\ttry {\n\t\t\t\t\tawait context.created();\n\t\t\t\t} catch (error) {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\tLog.error((error as ContextErrorType).name);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n};\nexport { AdditionalValueGroupKey, RecommendationValueType, additionalValueHelper };\n"],"mappings":"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","ignoreList":[],"file":"AdditionalValueHelper-dbg.js"}