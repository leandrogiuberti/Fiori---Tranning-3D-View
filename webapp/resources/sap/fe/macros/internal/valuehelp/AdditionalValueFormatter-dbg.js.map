{"version":3,"names":["getGrowing","recommendationData","propertyPath","values","additionalValueHelper","getRelevantRecommendations","getBindingContext","length","__functionName","_getRelativePropertyPath","fieldBindingContext","sourcepath","metaPath","ModelHelper","getMetaPathForContext","replace","_setValueStateForFieldWithNoDataContext","recommendationValue","recommendationDescription","all_recommendations","recommendationsText","fnSetValueState","event","listBinding","getSource","listContexts","getAllCurrentContexts","includes","getObject","valueState","valueStateText","_getValueStateForRecommendationField","setValueStateText","setValueState","detachChange","getBinding","attachChange","field","ValueState","None","Information","relativePropertyPath","relevantRecommendations","version","getAdditionalValueFromPropertyPath","value","text","view","CommonUtils","getTargetView","getController","recommendations","increaseTelemetryDataCount","formatValueState","isEditable","fieldValue","fieldTextValue","undefined","presentValueState","getValueState","isTransient","recommendationsAvailable","Object","keys","Library","getResourceBundleFor","getText","presentValueStateText","getValueStateText","presentVSIsRecommendations","recommendationsStateApplicable","isA","call","_getPlaceholderText","displayMode","placeholder","valueFormatters","formatWithBrackets","formatPlaceholder","currentPageContext","currentBoundMessageType","editStylePlaceholder","placeholderData","getPlaceholder","bindingContext","bindingPath","getPath","additionalValueFormatter","sName","hasOwnProperty","_len","arguments","oArgs","Array","_key","apply","ObjectPath","set"],"sourceRoot":".","sources":["AdditionalValueFormatter.ts"],"sourcesContent":["import ObjectPath from \"sap/base/util/ObjectPath\";\nimport type { BindingToolkitExpression } from \"sap/fe/base/BindingToolkit\";\nimport CommonUtils from \"sap/fe/core/CommonUtils\";\nimport valueFormatters from \"sap/fe/core/formatters/ValueFormatter\";\nimport ModelHelper from \"sap/fe/core/helpers/ModelHelper\";\nimport type { InCompletenessInfoType } from \"sap/fe/core/helpers/RecommendationHelper\";\nimport type { RecommendationInfo, StandardRecommendationDataType } from \"sap/fe/core/helpers/StandardRecommendationHelper\";\nimport { additionalValueHelper } from \"sap/fe/macros/internal/valuehelp/AdditionalValueHelper\";\nimport type UI5Event from \"sap/ui/base/Event\";\nimport Library from \"sap/ui/core/Lib\";\nimport { ValueState } from \"sap/ui/core/library\";\nimport type MessageType from \"sap/ui/core/message/MessageType\";\nimport type Field from \"sap/ui/mdc/Field\";\nimport type MTable from \"sap/ui/mdc/valuehelp/content/MTable\";\nimport type Context from \"sap/ui/model/odata/v4/Context\";\nimport type ODataListBinding from \"sap/ui/model/odata/v4/ODataListBinding\";\n\n/**\n * Growing formatter used for growing and growingThreshold.\n * @param this Valuehelp Table\n * @param recommendationData Data fetched from recommendation model\n * @param propertyPath Property Path of the Field\n * @returns Boolean value for growing and growingThreshold properties\n */\nfunction getGrowing(this: MTable, recommendationData: InCompletenessInfoType | undefined, propertyPath: string): boolean {\n\tconst values =\n\t\tadditionalValueHelper.getRelevantRecommendations(recommendationData || {}, this.getBindingContext() as Context, propertyPath) || [];\n\tif (values.length > 0) {\n\t\t//if there are relevant recommendations then return true\n\t\treturn true;\n\t}\n\treturn false;\n}\ngetGrowing.__functionName = \"sap.fe.macros.internal.valuehelp.AdditionalValueFormatter#getGrowing\";\n\n/**\n * Get the relative property path of the field.\n *\n * Example:\n * binding context path  : '/Employee(1)'.\n * source path           : '/Employee/Name'.\n * relative property path: 'Name'.\n * @param fieldBindingContext Field binding context\n * @param sourcepath Property Path of the Field\n * @returns Relative property path.\n */\nfunction _getRelativePropertyPath(fieldBindingContext: Context, sourcepath: string): string {\n\tconst metaPath = ModelHelper.getMetaPathForContext(fieldBindingContext);\n\treturn sourcepath.replace(`${metaPath}/`, \"\");\n}\n\n/**\n * Sets the value state for the field in the table for which the binding context is not updated with the context data.\n *\n * In a few scenarios where the field is inside the table, the value state formatter is called for value update with the context without context data(context.getObject() is undefined).\n * NOTE: This solution needs to be checked with model if there is a better approach than using the table listbinding's change event.\n * @param this Field\n * @param recommendationValue\n * @param recommendationDescription\n * @param fieldBindingContext Field's binding context\n * @param all_recommendations Data fetched from recommendation model\n * @param sourcepath Property Path of the Field\n * @param recommendationsText Value state text when the recommendations are shown\n */\nfunction _setValueStateForFieldWithNoDataContext(\n\tthis: Field,\n\trecommendationValue: string,\n\trecommendationDescription: string,\n\tfieldBindingContext: Context,\n\tall_recommendations: InCompletenessInfoType | RecommendationInfo | undefined,\n\tsourcepath: string,\n\trecommendationsText: string\n): void {\n\tconst fnSetValueState = (event: UI5Event<{}, ODataListBinding>): void => {\n\t\tconst listBinding = event.getSource();\n\t\tconst listContexts = listBinding.getAllCurrentContexts();\n\t\tif (listContexts.includes(fieldBindingContext)) {\n\t\t\tif (fieldBindingContext.getObject()) {\n\t\t\t\tconst { valueState, valueStateText } = _getValueStateForRecommendationField(\n\t\t\t\t\trecommendationValue,\n\t\t\t\t\trecommendationDescription,\n\t\t\t\t\tall_recommendations,\n\t\t\t\t\tfieldBindingContext,\n\t\t\t\t\tsourcepath,\n\t\t\t\t\trecommendationsText,\n\t\t\t\t\tthis\n\t\t\t\t);\n\t\t\t\tthis.setValueStateText(valueStateText);\n\t\t\t\tthis.setValueState(valueState);\n\t\t\t}\n\t\t\tlistBinding.detachChange(fnSetValueState);\n\t\t}\n\t};\n\n\tfieldBindingContext.getBinding().attachChange(fnSetValueState);\n}\n\n/**\n * Get the value state when recommendations are applicable.\n * @param recommendationValue\n * @param recommendationDescription\n * @param all_recommendations Data fetched from the recommendation model\n * @param fieldBindingContext Field's binding context\n * @param sourcepath Property Path of the Field\n * @param recommendationsText Value state text in case the recommendations are shown\n * @param field Field\n * @returns Value state information including the value state and the value state text.\n */\nfunction _getValueStateForRecommendationField(\n\trecommendationValue: string,\n\trecommendationDescription: string,\n\tall_recommendations: InCompletenessInfoType | RecommendationInfo | undefined,\n\tfieldBindingContext: Context,\n\tsourcepath: string,\n\trecommendationsText: string,\n\tfield: Field\n): { valueState: ValueState; valueStateText: string } {\n\t// If no values are available for the field with present context we reset value state.\n\tlet valueState = ValueState.None,\n\t\tvalueStateText = \"\";\n\n\tif (recommendationValue || recommendationDescription) {\n\t\tvalueStateText = recommendationsText;\n\t\tvalueState = ValueState.Information;\n\t} else if (all_recommendations) {\n\t\tconst relativePropertyPath = _getRelativePropertyPath(fieldBindingContext, sourcepath);\n\t\tconst values = additionalValueHelper.getRelevantRecommendations(\n\t\t\tall_recommendations as InCompletenessInfoType,\n\t\t\tfieldBindingContext,\n\t\t\tsourcepath,\n\t\t\trelativePropertyPath\n\t\t);\n\t\tlet relevantRecommendations;\n\t\tif (all_recommendations?.version === 2) {\n\t\t\trelevantRecommendations = additionalValueHelper.getAdditionalValueFromPropertyPath(\n\t\t\t\trelativePropertyPath,\n\t\t\t\tfieldBindingContext,\n\t\t\t\tall_recommendations\n\t\t\t) as StandardRecommendationDataType;\n\t\t}\n\n\t\tif (\n\t\t\t(all_recommendations?.version === 2 && (relevantRecommendations?.value || relevantRecommendations?.text)) ||\n\t\t\t(!all_recommendations?.version && values?.length)\n\t\t) {\n\t\t\tvalueStateText = recommendationsText;\n\t\t\tvalueState = ValueState.Information;\n\t\t}\n\t}\n\n\tif (valueState === ValueState.Information) {\n\t\tconst view = CommonUtils.getTargetView(field);\n\t\tview.getController().recommendations.increaseTelemetryDataCount(\"numberofTimesFormatterCalled\");\n\t}\n\n\treturn { valueState, valueStateText };\n}\n\n/**\n * Format the value state of the field based on the present value state and the available recommendations.\n * @param this Field\n * @param recommendationValue Data fetched from recommendation model\n * @param recommendationDescription\n * @param all_recommendations\n * @param isEditable Page is in edit mode\n * @param sourcepath Property Path of the Field\n * @param fieldValue Present field value\n * @param fieldTextValue\n * @returns Field value state\n */\nfunction formatValueState(\n\tthis: Field,\n\trecommendationValue: string,\n\trecommendationDescription: string,\n\tall_recommendations: InCompletenessInfoType | RecommendationInfo | undefined,\n\tisEditable: boolean,\n\tsourcepath?: string,\n\tfieldValue?: string,\n\tfieldTextValue?: BindingToolkitExpression<string> | string\n): ValueState {\n\t// We reset value state when:\n\t// 1. No context is bound to the field.\n\t// 2. isEditable is false\n\tconst fieldBindingContext = this.getBindingContext() as Context | undefined;\n\tif (!fieldBindingContext || !isEditable) {\n\t\treturn ValueState.None;\n\t}\n\tfieldTextValue = fieldTextValue === \"undefined\" ? undefined : fieldTextValue;\n\t// We don't change the present value state when:\n\t// 1. Source path is not available.\n\t// 2. Field context is transient.\n\tconst presentValueState = this.getValueState() as ValueState;\n\tconst isTransient = fieldBindingContext.isTransient?.();\n\tif (!sourcepath || isTransient) {\n\t\treturn presentValueState;\n\t}\n\n\t// We reset value state when recommendations are not available and value state represents recommendations.\n\tconst recommendationsAvailable =\n\t\trecommendationValue || recommendationDescription || (!!all_recommendations && Object.keys(all_recommendations).length > 0);\n\tconst recommendationsText = Library.getResourceBundleFor(\"sap.fe.core\")!.getText(\"RECOMMENDATIONS_DATA_INFO\");\n\tconst presentValueStateText = this.getValueStateText();\n\tconst presentVSIsRecommendations = presentValueState === ValueState.Information && presentValueStateText === recommendationsText;\n\t//If field value is present or recommendations are not available but presentState is Info then we change it to None\n\tif (presentVSIsRecommendations && (!recommendationsAvailable || fieldValue || fieldTextValue)) {\n\t\treturn ValueState.None;\n\t}\n\n\t// Recommendations shall be applicable if they are available and the present value state:\n\t// 1. Is None\n\t// 2. Already represents recomendations.\n\tconst recommendationsStateApplicable = recommendationsAvailable && (presentValueState == ValueState.None || presentVSIsRecommendations);\n\tif (!fieldValue && !fieldTextValue && recommendationsStateApplicable) {\n\t\tif (\n\t\t\t!fieldBindingContext.getObject() &&\n\t\t\tfieldBindingContext.getBinding()?.isA?.<ODataListBinding>(\"sap.ui.model.odata.v4.ODataListBinding\")\n\t\t) {\n\t\t\t// No context data avalilable yet and parent binding is listbinding (Field in Table scenario)\n\t\t\t_setValueStateForFieldWithNoDataContext.call(\n\t\t\t\tthis,\n\t\t\t\trecommendationValue,\n\t\t\t\trecommendationDescription,\n\t\t\t\tfieldBindingContext,\n\t\t\t\tall_recommendations,\n\t\t\t\tsourcepath,\n\t\t\t\trecommendationsText\n\t\t\t);\n\t\t} else {\n\t\t\tconst { valueState, valueStateText } = _getValueStateForRecommendationField(\n\t\t\t\trecommendationValue,\n\t\t\t\trecommendationDescription,\n\t\t\t\tall_recommendations,\n\t\t\t\tfieldBindingContext,\n\t\t\t\tsourcepath,\n\t\t\t\trecommendationsText,\n\t\t\t\tthis\n\t\t\t);\n\t\t\tthis.setValueStateText(valueStateText);\n\t\t\treturn valueState;\n\t\t}\n\t}\n\n\treturn presentValueState;\n}\nformatValueState.__functionName = \"sap.fe.macros.internal.valuehelp.AdditionalValueFormatter#formatValueState\";\n\nfunction _getPlaceholderText(relevantRecommendations?: StandardRecommendationDataType, displayMode?: string): string | undefined {\n\tlet placeholder: string | undefined;\n\tconst value = relevantRecommendations?.value;\n\tconst text = relevantRecommendations?.text;\n\tswitch (displayMode) {\n\t\t//set up the placeholder according to text arrangement\n\t\tcase \"Value\":\n\t\t\tplaceholder = valueFormatters.formatWithBrackets(value as string);\n\t\t\tbreak;\n\t\tcase \"Description\":\n\t\t\tplaceholder = valueFormatters.formatWithBrackets(text as string);\n\t\t\tbreak;\n\t\tcase \"DescriptionValue\":\n\t\t\tplaceholder = valueFormatters.formatWithBrackets(text as string, value as string);\n\t\t\tbreak;\n\t\tcase \"ValueDescription\":\n\t\t\tplaceholder = valueFormatters.formatWithBrackets(value as string, text as string);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tplaceholder = valueFormatters.formatWithBrackets(text as string, value as string);\n\t}\n\treturn placeholder;\n}\n\nfunction formatPlaceholder(\n\tthis: Field,\n\trecommendationValue: string,\n\trecommendationDescription: string,\n\tall_recommendations: RecommendationInfo,\n\tcurrentPageContext: Context,\n\tcurrentBoundMessageType?: MessageType | null,\n\teditStylePlaceholder?: string,\n\tdisplayMode?: string\n): string | undefined {\n\tlet placeholderData: string | number | undefined = this.getPlaceholder();\n\teditStylePlaceholder = editStylePlaceholder === \"undefined\" ? undefined : editStylePlaceholder;\n\tif (currentBoundMessageType) {\n\t\treturn editStylePlaceholder;\n\t}\n\tif (recommendationValue) {\n\t\tplaceholderData = _getPlaceholderText({ value: recommendationValue, text: recommendationDescription }, displayMode);\n\t} else if (all_recommendations && Object.keys(all_recommendations).length && all_recommendations.version === 2) {\n\t\tconst bindingContext = this.getBindingContext() || currentPageContext;\n\t\tconst bindingPath = this.getBinding(\"value\")?.getPath();\n\t\tif (bindingContext && bindingPath) {\n\t\t\t//get the recommendations based on property path and binding context passed\n\t\t\tconst relevantRecommendations = additionalValueHelper.getAdditionalValueFromPropertyPath(\n\t\t\t\tbindingPath,\n\t\t\t\tbindingContext,\n\t\t\t\tall_recommendations\n\t\t\t) as StandardRecommendationDataType;\n\t\t\t//if we get recommendations then push the values\n\t\t\tplaceholderData = _getPlaceholderText(relevantRecommendations, displayMode);\n\t\t}\n\t} else {\n\t\tplaceholderData = undefined;\n\t}\n\tif (editStylePlaceholder && !placeholderData) {\n\t\tplaceholderData = editStylePlaceholder;\n\t}\n\treturn placeholderData;\n}\nformatPlaceholder.__functionName = \"sap.fe.macros.internal.valuehelp.AdditionalValueFormatter#formatPlaceholder\";\n\n// See https://www.typescriptlang.org/docs/handbook/functions.html#this-parameters for more detail on this weird syntax\n/**\n * Collection of AdditionalValue formatters.\n * @param this The context\n * @param sName The inner function name\n * @param oArgs The inner function parameters\n * @returns The value from the inner function\n */\nconst additionalValueFormatter = function (this: object, sName: string, ...oArgs: unknown[]): unknown {\n\tif (additionalValueFormatter.hasOwnProperty(sName)) {\n\t\treturn (additionalValueFormatter as unknown as Record<string, Function>)[sName].apply(this, oArgs);\n\t} else {\n\t\treturn \"\";\n\t}\n};\n\nadditionalValueFormatter.getGrowing = getGrowing;\nadditionalValueFormatter.formatValueState = formatValueState;\nadditionalValueFormatter.formatPlaceholder = formatPlaceholder;\n\nObjectPath.set(\"sap.fe.macros.internal.valuehelp.AdditionalValueFormatter\", additionalValueFormatter);\n\nexport default additionalValueFormatter;\n"],"mappings":";;;;;;;;;EAiBA;AACA;AACA;AACA;AACA;AACA;AACA;EACA,SAASA,UAAUA,CAAeC,kBAAsD,EAAEC,YAAoB,EAAW;IACxH,MAAMC,MAAM,GACXC,qBAAqB,CAACC,0BAA0B,CAACJ,kBAAkB,IAAI,CAAC,CAAC,EAAE,IAAI,CAACK,iBAAiB,CAAC,CAAC,EAAaJ,YAAY,CAAC,IAAI,EAAE;IACpI,IAAIC,MAAM,CAACI,MAAM,GAAG,CAAC,EAAE;MACtB;MACA,OAAO,IAAI;IACZ;IACA,OAAO,KAAK;EACb;EACAP,UAAU,CAACQ,cAAc,GAAG,sEAAsE;;EAElG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACA,SAASC,wBAAwBA,CAACC,mBAA4B,EAAEC,UAAkB,EAAU;IAC3F,MAAMC,QAAQ,GAAGC,WAAW,CAACC,qBAAqB,CAACJ,mBAAmB,CAAC;IACvE,OAAOC,UAAU,CAACI,OAAO,CAAC,GAAGH,QAAQ,GAAG,EAAE,EAAE,CAAC;EAC9C;;EAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACA,SAASI,uCAAuCA,CAE/CC,mBAA2B,EAC3BC,yBAAiC,EACjCR,mBAA4B,EAC5BS,mBAA4E,EAC5ER,UAAkB,EAClBS,mBAA2B,EACpB;IACP,MAAMC,eAAe,GAAIC,KAAqC,IAAW;MACxE,MAAMC,WAAW,GAAGD,KAAK,CAACE,SAAS,CAAC,CAAC;MACrC,MAAMC,YAAY,GAAGF,WAAW,CAACG,qBAAqB,CAAC,CAAC;MACxD,IAAID,YAAY,CAACE,QAAQ,CAACjB,mBAAmB,CAAC,EAAE;QAC/C,IAAIA,mBAAmB,CAACkB,SAAS,CAAC,CAAC,EAAE;UACpC,MAAM;YAAEC,UAAU;YAAEC;UAAe,CAAC,GAAGC,oCAAoC,CAC1Ed,mBAAmB,EACnBC,yBAAyB,EACzBC,mBAAmB,EACnBT,mBAAmB,EACnBC,UAAU,EACVS,mBAAmB,EACnB,IACD,CAAC;UACD,IAAI,CAACY,iBAAiB,CAACF,cAAc,CAAC;UACtC,IAAI,CAACG,aAAa,CAACJ,UAAU,CAAC;QAC/B;QACAN,WAAW,CAACW,YAAY,CAACb,eAAe,CAAC;MAC1C;IACD,CAAC;IAEDX,mBAAmB,CAACyB,UAAU,CAAC,CAAC,CAACC,YAAY,CAACf,eAAe,CAAC;EAC/D;;EAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACA,SAASU,oCAAoCA,CAC5Cd,mBAA2B,EAC3BC,yBAAiC,EACjCC,mBAA4E,EAC5ET,mBAA4B,EAC5BC,UAAkB,EAClBS,mBAA2B,EAC3BiB,KAAY,EACyC;IACrD;IACA,IAAIR,UAAU,GAAGS,UAAU,CAACC,IAAI;MAC/BT,cAAc,GAAG,EAAE;IAEpB,IAAIb,mBAAmB,IAAIC,yBAAyB,EAAE;MACrDY,cAAc,GAAGV,mBAAmB;MACpCS,UAAU,GAAGS,UAAU,CAACE,WAAW;IACpC,CAAC,MAAM,IAAIrB,mBAAmB,EAAE;MAC/B,MAAMsB,oBAAoB,GAAGhC,wBAAwB,CAACC,mBAAmB,EAAEC,UAAU,CAAC;MACtF,MAAMR,MAAM,GAAGC,qBAAqB,CAACC,0BAA0B,CAC9Dc,mBAAmB,EACnBT,mBAAmB,EACnBC,UAAU,EACV8B,oBACD,CAAC;MACD,IAAIC,uBAAuB;MAC3B,IAAIvB,mBAAmB,EAAEwB,OAAO,KAAK,CAAC,EAAE;QACvCD,uBAAuB,GAAGtC,qBAAqB,CAACwC,kCAAkC,CACjFH,oBAAoB,EACpB/B,mBAAmB,EACnBS,mBACD,CAAmC;MACpC;MAEA,IACEA,mBAAmB,EAAEwB,OAAO,KAAK,CAAC,KAAKD,uBAAuB,EAAEG,KAAK,IAAIH,uBAAuB,EAAEI,IAAI,CAAC,IACvG,CAAC3B,mBAAmB,EAAEwB,OAAO,IAAIxC,MAAM,EAAEI,MAAO,EAChD;QACDuB,cAAc,GAAGV,mBAAmB;QACpCS,UAAU,GAAGS,UAAU,CAACE,WAAW;MACpC;IACD;IAEA,IAAIX,UAAU,KAAKS,UAAU,CAACE,WAAW,EAAE;MAC1C,MAAMO,IAAI,GAAGC,WAAW,CAACC,aAAa,CAACZ,KAAK,CAAC;MAC7CU,IAAI,CAACG,aAAa,CAAC,CAAC,CAACC,eAAe,CAACC,0BAA0B,CAAC,8BAA8B,CAAC;IAChG;IAEA,OAAO;MAAEvB,UAAU;MAAEC;IAAe,CAAC;EACtC;;EAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACA,SAASuB,gBAAgBA,CAExBpC,mBAA2B,EAC3BC,yBAAiC,EACjCC,mBAA4E,EAC5EmC,UAAmB,EACnB3C,UAAmB,EACnB4C,UAAmB,EACnBC,cAA0D,EAC7C;IACb;IACA;IACA;IACA,MAAM9C,mBAAmB,GAAG,IAAI,CAACJ,iBAAiB,CAAC,CAAwB;IAC3E,IAAI,CAACI,mBAAmB,IAAI,CAAC4C,UAAU,EAAE;MACxC,OAAOhB,UAAU,CAACC,IAAI;IACvB;IACAiB,cAAc,GAAGA,cAAc,KAAK,WAAW,GAAGC,SAAS,GAAGD,cAAc;IAC5E;IACA;IACA;IACA,MAAME,iBAAiB,GAAG,IAAI,CAACC,aAAa,CAAC,CAAe;IAC5D,MAAMC,WAAW,GAAGlD,mBAAmB,CAACkD,WAAW,GAAG,CAAC;IACvD,IAAI,CAACjD,UAAU,IAAIiD,WAAW,EAAE;MAC/B,OAAOF,iBAAiB;IACzB;;IAEA;IACA,MAAMG,wBAAwB,GAC7B5C,mBAAmB,IAAIC,yBAAyB,IAAK,CAAC,CAACC,mBAAmB,IAAI2C,MAAM,CAACC,IAAI,CAAC5C,mBAAmB,CAAC,CAACZ,MAAM,GAAG,CAAE;IAC3H,MAAMa,mBAAmB,GAAG4C,OAAO,CAACC,oBAAoB,CAAC,aAAa,CAAC,CAAEC,OAAO,CAAC,2BAA2B,CAAC;IAC7G,MAAMC,qBAAqB,GAAG,IAAI,CAACC,iBAAiB,CAAC,CAAC;IACtD,MAAMC,0BAA0B,GAAGX,iBAAiB,KAAKpB,UAAU,CAACE,WAAW,IAAI2B,qBAAqB,KAAK/C,mBAAmB;IAChI;IACA,IAAIiD,0BAA0B,KAAK,CAACR,wBAAwB,IAAIN,UAAU,IAAIC,cAAc,CAAC,EAAE;MAC9F,OAAOlB,UAAU,CAACC,IAAI;IACvB;;IAEA;IACA;IACA;IACA,MAAM+B,8BAA8B,GAAGT,wBAAwB,KAAKH,iBAAiB,IAAIpB,UAAU,CAACC,IAAI,IAAI8B,0BAA0B,CAAC;IACvI,IAAI,CAACd,UAAU,IAAI,CAACC,cAAc,IAAIc,8BAA8B,EAAE;MACrE,IACC,CAAC5D,mBAAmB,CAACkB,SAAS,CAAC,CAAC,IAChClB,mBAAmB,CAACyB,UAAU,CAAC,CAAC,EAAEoC,GAAG,GAAqB,wCAAwC,CAAC,EAClG;QACD;QACAvD,uCAAuC,CAACwD,IAAI,CAC3C,IAAI,EACJvD,mBAAmB,EACnBC,yBAAyB,EACzBR,mBAAmB,EACnBS,mBAAmB,EACnBR,UAAU,EACVS,mBACD,CAAC;MACF,CAAC,MAAM;QACN,MAAM;UAAES,UAAU;UAAEC;QAAe,CAAC,GAAGC,oCAAoC,CAC1Ed,mBAAmB,EACnBC,yBAAyB,EACzBC,mBAAmB,EACnBT,mBAAmB,EACnBC,UAAU,EACVS,mBAAmB,EACnB,IACD,CAAC;QACD,IAAI,CAACY,iBAAiB,CAACF,cAAc,CAAC;QACtC,OAAOD,UAAU;MAClB;IACD;IAEA,OAAO6B,iBAAiB;EACzB;EACAL,gBAAgB,CAAC7C,cAAc,GAAG,4EAA4E;EAE9G,SAASiE,mBAAmBA,CAAC/B,uBAAwD,EAAEgC,WAAoB,EAAsB;IAChI,IAAIC,WAA+B;IACnC,MAAM9B,KAAK,GAAGH,uBAAuB,EAAEG,KAAK;IAC5C,MAAMC,IAAI,GAAGJ,uBAAuB,EAAEI,IAAI;IAC1C,QAAQ4B,WAAW;MAClB;MACA,KAAK,OAAO;QACXC,WAAW,GAAGC,eAAe,CAACC,kBAAkB,CAAChC,KAAe,CAAC;QACjE;MACD,KAAK,aAAa;QACjB8B,WAAW,GAAGC,eAAe,CAACC,kBAAkB,CAAC/B,IAAc,CAAC;QAChE;MACD,KAAK,kBAAkB;QACtB6B,WAAW,GAAGC,eAAe,CAACC,kBAAkB,CAAC/B,IAAI,EAAYD,KAAe,CAAC;QACjF;MACD,KAAK,kBAAkB;QACtB8B,WAAW,GAAGC,eAAe,CAACC,kBAAkB,CAAChC,KAAK,EAAYC,IAAc,CAAC;QACjF;MACD;QACC6B,WAAW,GAAGC,eAAe,CAACC,kBAAkB,CAAC/B,IAAI,EAAYD,KAAe,CAAC;IACnF;IACA,OAAO8B,WAAW;EACnB;EAEA,SAASG,iBAAiBA,CAEzB7D,mBAA2B,EAC3BC,yBAAiC,EACjCC,mBAAuC,EACvC4D,kBAA2B,EAC3BC,uBAA4C,EAC5CC,oBAA6B,EAC7BP,WAAoB,EACC;IACrB,IAAIQ,eAA4C,GAAG,IAAI,CAACC,cAAc,CAAC,CAAC;IACxEF,oBAAoB,GAAGA,oBAAoB,KAAK,WAAW,GAAGxB,SAAS,GAAGwB,oBAAoB;IAC9F,IAAID,uBAAuB,EAAE;MAC5B,OAAOC,oBAAoB;IAC5B;IACA,IAAIhE,mBAAmB,EAAE;MACxBiE,eAAe,GAAGT,mBAAmB,CAAC;QAAE5B,KAAK,EAAE5B,mBAAmB;QAAE6B,IAAI,EAAE5B;MAA0B,CAAC,EAAEwD,WAAW,CAAC;IACpH,CAAC,MAAM,IAAIvD,mBAAmB,IAAI2C,MAAM,CAACC,IAAI,CAAC5C,mBAAmB,CAAC,CAACZ,MAAM,IAAIY,mBAAmB,CAACwB,OAAO,KAAK,CAAC,EAAE;MAC/G,MAAMyC,cAAc,GAAG,IAAI,CAAC9E,iBAAiB,CAAC,CAAC,IAAIyE,kBAAkB;MACrE,MAAMM,WAAW,GAAG,IAAI,CAAClD,UAAU,CAAC,OAAO,CAAC,EAAEmD,OAAO,CAAC,CAAC;MACvD,IAAIF,cAAc,IAAIC,WAAW,EAAE;QAClC;QACA,MAAM3C,uBAAuB,GAAGtC,qBAAqB,CAACwC,kCAAkC,CACvFyC,WAAW,EACXD,cAAc,EACdjE,mBACD,CAAmC;QACnC;QACA+D,eAAe,GAAGT,mBAAmB,CAAC/B,uBAAuB,EAAEgC,WAAW,CAAC;MAC5E;IACD,CAAC,MAAM;MACNQ,eAAe,GAAGzB,SAAS;IAC5B;IACA,IAAIwB,oBAAoB,IAAI,CAACC,eAAe,EAAE;MAC7CA,eAAe,GAAGD,oBAAoB;IACvC;IACA,OAAOC,eAAe;EACvB;EACAJ,iBAAiB,CAACtE,cAAc,GAAG,6EAA6E;;EAEhH;EACA;AACA;AACA;AACA;AACA;AACA;AACA;EACA,MAAM+E,wBAAwB,GAAG,SAAAA,CAAwBC,KAAa,EAAgC;IACrG,IAAID,wBAAwB,CAACE,cAAc,CAACD,KAAK,CAAC,EAAE;MAAA,SAAAE,IAAA,GAAAC,SAAA,CAAApF,MAAA,EADsBqF,KAAK,OAAAC,KAAA,CAAAH,IAAA,OAAAA,IAAA,WAAAI,IAAA,MAAAA,IAAA,GAAAJ,IAAA,EAAAI,IAAA;QAALF,KAAK,CAAAE,IAAA,QAAAH,SAAA,CAAAG,IAAA;MAAA;MAE9E,OAAQP,wBAAwB,CAAyCC,KAAK,CAAC,CAACO,KAAK,CAAC,IAAI,EAAEH,KAAK,CAAC;IACnG,CAAC,MAAM;MACN,OAAO,EAAE;IACV;EACD,CAAC;EAEDL,wBAAwB,CAACvF,UAAU,GAAGA,UAAU;EAChDuF,wBAAwB,CAAClC,gBAAgB,GAAGA,gBAAgB;EAC5DkC,wBAAwB,CAACT,iBAAiB,GAAGA,iBAAiB;EAE9DkB,UAAU,CAACC,GAAG,CAAC,2DAA2D,EAAEV,wBAAwB,CAAC;EAAC,OAEvFA,wBAAwB;AAAA","ignoreList":[],"file":"AdditionalValueFormatter-dbg.js"}