{"version":3,"file":"ValueListHelper.js","names":["columnNotAlreadyDefined","columnDefs","vhKey","some","column","path","AnnotationLabel","AnnotationText","AnnotationTextUITextArrangement","AnnotationValueListParameterIn","AnnotationValueListParameterConstant","AnnotationValueListParameterOut","AnnotationValueListParameterInOut","AnnotationValueListWithFixedValues","AnnotationsPersonalDataPotentiallySensitive","AnnotationsValueListRelevantQualifiers","_exports","_getDefaultSortPropertyName","valueListInfo","sortFieldName","metaModel","$model","getMetaModel","entitySetAnnotations","getObject","CollectionPath","sortRestrictionsInfo","getSortRestrictionsInfo","foundElement","Parameters","find","element","$Type","ValueListProperty","propertyInfo","sortable","undefined","_redundantDescription","oVLParameter","aColumnInfo","oColumnInfo","columnInfo","textColumnName","keyColumnHidden","keyColumnDisplayFormat","_hasImportanceHigh","oValueListContext","oParameter","$EnumMember","_build$SelectString","control","oViewData","getModel","oData","getData","aColumns","columns","reduce","sQuery","oProperty","includes","_getValueHelpColumnDisplayFormat","oPropertyAnnotations","isValueHelpWithFixedValues","sDisplayMode","CommonUtils","computeDisplayMode","oTextAnnotation","oTextArrangementAnnotation","$Path","getPresentationVariant","valueList","presentationVariantQualifier","PresentationVariantQualifier","presentationVariantPath","ValueListHelper","getValueListCollectionEntitySet","mValueList","createBindingContext","isTreeTableType","RecursiveHierarchyQualifier","getTableDelegate","sDefaultSortPropertyName","presentationVariant","recursiveHierarchyQualifier","initialExpansionLevel","InitialExpansionLevel","getSortConditionsFromPresentationVariant","isSuggestion","asCustomdata","arguments","length","SortOrder","sortConditions","sorters","forEach","condition","sorter","propertyPath","Property","$PropertyPath","name","Descending","descending","ascending","push","stringConverter","CommonHelper","stringifyCustomData","JSON","stringify","getSortConditionsForValueList","sortConditionsFromPresentationVariant","getPropertyPath","oParameters","UnboundAction","EntityTypePath","Action","substring","lastIndexOf","getValueListProperty","oPropertyContext","oValueListModel","getColumnVisibility","oValueList","oSource","isDropDownList","valueHelpWithFixedValues","isVisible","columnInfos","isDialogTable","columnWithHiddenAnnotation","columnName","hasHiddenAnnotation","getColumnVisibilityInfo","sPropertyFullPath","bIsDropDownListe","oMetaModel","aColumnInfos","oColumnInfos","getTableItemsParameters","requestGroupId","itemParameters","selectString","this","selectStringPart","isSuspended","defaultSortPropertyName","join","hasImportance","getMinScreenWidth","getColumnWidth","isValueListWithFixedValues","isSmallDevice","targetObject","property","relatedProperty","additionalProperty","getAssociatedTextProperty","getAssociatedCurrencyProperty","getAssociatedUnitProperty","getAssociatedTimezoneProperty","textAnnotation","annotations","Common","Text","textArrangement","UI","TextArrangement","toString","label","Label","displayMode","getDisplayMode","size","instances","prop","propertyTypeConfig","getTypeConfig","PropertyODataConstructor","ObjectPath","get","type","formatOptions","constraints","sWidth","Util","calcColumnWidth","parseFloat","replace","Log","error","getOutParameterPaths","aParameters","sPath","endsWith","entityIsSearchable","propertyAnnotations","collectionAnnotations","searchSupported","SearchSupported","searchable","Searchable","_getConditionPath","entitySet","parts","split","conditionPath","partialPath","part","shift","$kind","$isCollection","_getColumnDefinitionFromSelectionFields","entityTypeAnnotations","selectionFields","selectionField","selectionFieldPath","columnDef","filterable","isPropertyFilterable","_mergeColumnDefinitionsFromProperties","valueListProperty","columnPath","columnPropertyType","textPropertyPath","textPath","filterInOutParameters","vhParameters","typeFilter","filter","parameter","parmeterType","getInParameters","getOutParameters","createVHUIModel","valueHelp","vhUIModel","JSONModel","setModel","setProperty","_getDialogTitle","valuehelpLabel","propertyLabel","getProperty","dataFieldLabel","getControl","destroyVHContent","getDialog","destroyContent","getTypeahead","putDefaultQualifierFirst","qualifiers","indexDefaultVH","indexOf","unshift","splice","_getContextPrefix","bindingContext","propertyBindingParts","getPath","bindigContextParts","contextPrefixParts","i","_getVhParameter","conditionModel","contextPrefix","vhMetaModel","localDataPropertyPath","valuePath","getBindingContext","getParent","isA","_parameterIsA","firstNavigationProperty","oBoundEntity","getMetaContext","sPathOfTable","getRowBinding","filterBarAPI","filterBarMetaPath","metaPath","valueHelpContextPath","getMetaPath","contextMetaPath","MetaPath","convertTypes","newPath","getMetaPathForPath","getTarget","targetEntitySet","getClosestEntitySet","getMetaPathForObject","getRelativePath","source","helpPath","constantValue","Constant","initialValueIsSignificant","Boolean","InitialValueIsSignificant","parameterTypes","_enrichPath","propertyName","externalIdPath","key","externalIdProperty","pop","fieldPropertyPath","descriptionPath","_enrichKeys","vhKeys","getInAndOutParametersList","_getEntityType","async","metaModelVH","entitySetPath","requestObject","_processParameters","annotationValueListType","valueHelpQualifier","payload","entityType","isForMultiValueField","useMultiValueField","$Key","firstKey","LocalDataProperty","isPotentiallySensitive","vhParameter","valuelistInfo","keyPath","_logError","status","message","Error","String","msg","getValueListInfo","valueListInfos","propertyPathParts","valueListByQualifier","requestValueListInfo","valueHelpQualifiers","Object","keys","$qualifier","err","ALLFRAGMENTS","logFragment","_logTemplatedFragments","fragmentName","fragmentDefinition","logInfo","fragment","getLevel","Level","DEBUG","setTimeout","_templateFragment","sourceModel","containingView","getTargetView","appComponent","getAppComponent","localValueListInfo","valueListModel","valueListServiceMetaModel","viewData","converterType","XMLPreprocessor","process","XMLTemplateProcessor","loadTemplate","bindingContexts","contextPath","models","templateComponent","getController","getOwnerComponent","runAsOwner","Fragment","load","definition","controller","_getContentId","valueHelpId","isTypeahead","contentType","_addInOutParametersToPayload","vhProperties","Set","add","Array","from","textArrangementAnnotation","_getWidthInRem","isUnitValueHelp","width","$","floatWidth","Rem","fromPx","isNaN","_getTableWidth","table","minWidth","isMultiSelect","getColumns","visibleColumns","getVisible","initialSum","sumWidth","sum","getWidth","Math","max","_getJSONModelForDialog","content","isDropDownListe","id","getId","groupId","bSuggestion","_getJSONModelForCondition","caseSensitive","_getJSONModelForTypeahead","contentId","_createValueHelpTypeahead","setKeyPath","setDescriptionPath","history","enabled","checkHistoryEnabled","data","info","getMetadata","getName","setTable","field","tableMode","getMaxConditions","setMode","addEventDelegate","onAfterRendering","ResizeHandler","register","_setTableWidth","reduceWidthForUnitValueHelp","tableWidth","setWidth","historySettings","getManifestEntry","fields","historyEnabled","isValueListSearchable","valueListMetamodel","_createValueHelpDialog","conditionContent","sourceModelDialog","firstTypeAheadContent","getContent","getCaseSensitive","sourceModelCondition","addDependent","setValueHelp","conditionTable","getTable","tablePromise","filterBarPromise","filterBar","Promise","all","setFilterBar","setFilter","initialized","setCopyProviderVisibility","mdcTable","_setShowP13nButton","getCopyProvider","setVisible","_getContentById","contentList","item","_createPopoverContent","useAsValueHelp","MTable","group","_createDialogContent","forceBind","MDCTable","_showConditionsContent","container","conditionsContent","Conditions","addContent","_alignOrCreateContent","showConditionPanel","FetchValues","insertContent","_prepareValueHelpTypeAhead","qualifierForTypeahead","subValueListInfo","getUseAsValueHelp","removeContent","_prepareValueHelpDialog","selectedContentId","contentListItem","hasOperatorEQ","getOperators","selectedInfo","selectedContent","title","getTranslatedTextFromExpBindingString","setTitle","_addDescriptionInfosToPayload","valueHelpDescriptionPath","convertedMetadata","propertyDescriptionPath","resolvePath","target","valueHelpKeyPath","maxLength","externalIdFullPath","showValueList","map","col"],"sources":["./ValueListHelper.ts"],"sourcesContent":["import type { EntityType, PathAnnotationExpression, Property } from \"@sap-ux/vocabularies-types\";\nimport { CommonAnnotationTypes } from \"@sap-ux/vocabularies-types/vocabularies/Common\";\nimport type { PresentationVariant } from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport Log from \"sap/base/Log\";\nimport ObjectPath from \"sap/base/util/ObjectPath\";\nimport type { CompiledBindingToolkitExpression } from \"sap/fe/base/BindingToolkit\";\nimport CommonUtils from \"sap/fe/core/CommonUtils\";\nimport type { MetaModelPropertyAnnotations } from \"sap/fe/core/converters/MetaModelConverter\";\nimport { convertTypes } from \"sap/fe/core/converters/MetaModelConverter\";\nimport { getSortRestrictionsInfo, isPropertyFilterable } from \"sap/fe/core/helpers/MetaModelFunction\";\nimport MetaPath from \"sap/fe/core/helpers/MetaPath\";\nimport type { FieldDataType } from \"sap/fe/core/services/ValueHelpHistoryServiceFactory\";\nimport type { DataModelObjectPath } from \"sap/fe/core/templating/DataModelPathHelper\";\nimport {\n\tgetAssociatedCurrencyProperty,\n\tgetAssociatedTextProperty,\n\tgetAssociatedTimezoneProperty,\n\tgetAssociatedUnitProperty\n} from \"sap/fe/core/templating/PropertyHelper\";\nimport { getDisplayMode, getTypeConfig } from \"sap/fe/core/templating/UIFormatters\";\nimport CommonHelper from \"sap/fe/macros/CommonHelper\";\nimport type FilterBarAPI from \"sap/fe/macros/filterBar/FilterBarAPI\";\nimport type Table from \"sap/m/Table\";\nimport Util from \"sap/m/table/Util\";\nimport type Control from \"sap/ui/core/Control\";\nimport Fragment from \"sap/ui/core/Fragment\";\nimport ResizeHandler from \"sap/ui/core/ResizeHandler\";\nimport XMLTemplateProcessor from \"sap/ui/core/XMLTemplateProcessor\";\nimport XMLPreprocessor from \"sap/ui/core/util/XMLPreprocessor\";\nimport Rem from \"sap/ui/dom/units/Rem\";\nimport type Field from \"sap/ui/mdc/Field\";\nimport type FilterField from \"sap/ui/mdc/FilterField\";\nimport type MultiValueField from \"sap/ui/mdc/MultiValueField\";\nimport type MdcInnerTable from \"sap/ui/mdc/Table\";\nimport type ValueHelp from \"sap/ui/mdc/ValueHelp\";\nimport type FieldBase from \"sap/ui/mdc/field/FieldBase\";\nimport type MdcFilterBar from \"sap/ui/mdc/filterbar/FilterBarBase\";\nimport type FilterBar from \"sap/ui/mdc/valuehelp/FilterBar\";\nimport type Container from \"sap/ui/mdc/valuehelp/base/Container\";\nimport type Content from \"sap/ui/mdc/valuehelp/base/Content\";\nimport Conditions from \"sap/ui/mdc/valuehelp/content/Conditions\";\nimport MDCTable, { type $MDCTableSettings } from \"sap/ui/mdc/valuehelp/content/MDCTable\";\nimport MTable, { type $MTableSettings } from \"sap/ui/mdc/valuehelp/content/MTable\";\nimport type BaseContext from \"sap/ui/model/Context\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\nimport type ODataType from \"sap/ui/model/odata/type/ODataType\";\nimport type Context from \"sap/ui/model/odata/v4/Context\";\nimport type ODataMetaModel from \"sap/ui/model/odata/v4/ODataMetaModel\";\nimport type ODataModel from \"sap/ui/model/odata/v4/ODataModel\";\nimport type { MetaModelEntitySetAnnotation, MetaModelType } from \"types/metamodel_types\";\n\nexport type AnnotationValueListParameter = {\n\t$Type: string;\n\tValueListProperty: string;\n\tLocalDataProperty?: {\n\t\t$PropertyPath: string;\n\t};\n\tConstant?: string;\n\tInitialValueIsSignificant?: boolean;\n\t[\"@com.sap.vocabularies.UI.v1.Importance\"]?: {\n\t\t$EnumMember: string;\n\t};\n};\n\ntype LogFragmentMethod = (info: { path: string; fragmentName: string; fragment: unknown }) => void;\n\n// com.sap.vocabularies.Common.v1.ValueListType\nexport type AnnotationValueListType = {\n\t$Type: string; // CommonAnnotationTypes.ValueListType;\n\tLabel?: string;\n\tCollectionPath: string;\n\tCollectionRoot?: string;\n\tDistinctValuesSupported?: boolean;\n\tSearchSupported?: boolean;\n\tFetchValues?: number;\n\tPresentationVariantQualifier?: string;\n\tSelectionVariantQualifier?: string;\n\tParameters: AnnotationValueListParameter[];\n\t$model: ODataModel;\n\t$qualifier?: string; // defined in case of ValueListWithFixedValues\n};\n\nexport type AnnotationValueListTypeByQualifier = Record<string, AnnotationValueListType>;\n\nconst columnNotAlreadyDefined = (columnDefs: ColumnDef[], vhKey: string): boolean => !columnDefs.some((column) => column.path === vhKey);\n\nexport const AnnotationLabel = \"@com.sap.vocabularies.Common.v1.Label\",\n\tAnnotationText = \"@com.sap.vocabularies.Common.v1.Text\",\n\tAnnotationTextUITextArrangement = \"@com.sap.vocabularies.Common.v1.Text@com.sap.vocabularies.UI.v1.TextArrangement\",\n\tAnnotationValueListParameterIn = \"com.sap.vocabularies.Common.v1.ValueListParameterIn\",\n\tAnnotationValueListParameterConstant = \"com.sap.vocabularies.Common.v1.ValueListParameterConstant\",\n\tAnnotationValueListParameterOut = \"com.sap.vocabularies.Common.v1.ValueListParameterOut\",\n\tAnnotationValueListParameterInOut = \"com.sap.vocabularies.Common.v1.ValueListParameterInOut\",\n\tAnnotationValueListWithFixedValues = \"@com.sap.vocabularies.Common.v1.ValueListWithFixedValues\",\n\tAnnotationsPersonalDataPotentiallySensitive = \"@com.sap.vocabularies.PersonalData.v1.IsPotentiallySensitive\",\n\tAnnotationsValueListRelevantQualifiers = \"@com.sap.vocabularies.Common.v1.ValueListRelevantQualifiers\";\n\ntype AnnotationsForProperty = {\n\t\"@com.sap.vocabularies.Common.v1.ValueList\"?: {\n\t\tSearchSupported?: boolean;\n\t};\n\t\"@com.sap.vocabularies.Common.v1.Label\"?: string; // AnnotationLabel\n\t\"@com.sap.vocabularies.Common.v1.Text\"?: {\n\t\t// AnnotationText\n\t\t$Path: string;\n\t};\n\t\"@com.sap.vocabularies.Common.v1.Text@com.sap.vocabularies.UI.v1.TextArrangement\"?: {\n\t\t// AnnotationTextUITextArrangement\n\t\t$EnumMember?: string;\n\t};\n\t\"@com.sap.vocabularies.UI.v1.HiddenFilter\"?: boolean;\n\t\"@com.sap.vocabularies.Common.v1.ValueListWithFixedValues\"?: boolean; // AnnotationValueListWithFixedValues\n\t\"@com.sap.vocabularies.Common.v1.ValueListRelevantQualifiers\"?: string[];\n\t\"@com.sap.vocabularies.UI.v1.Hidden\"?: string;\n\t\"@com.sap.vocabularies.PersonalData.v1.IsPotentiallySensitive\"?: boolean;\n};\n\ntype AnnotationSelectionField = {\n\t$PropertyPath: string;\n};\n\ntype AnnotationsForEntityType = {\n\t\"@com.sap.vocabularies.UI.v1.SelectionFields\"?: AnnotationSelectionField[];\n};\n\ntype ColumnProperty = {\n\t$Type: string;\n\t$kind: string;\n\t$isCollection: boolean;\n};\n\nexport type InOutParameter = {\n\tparmeterType: string;\n\tsource: string;\n\thelpPath: string;\n\tinitialValueIsSignificant: boolean;\n\tconstantValue?: string | boolean;\n};\n\ntype ValueHelpPayloadInfo = {\n\tvhKeys?: string[];\n\tvhParameters?: InOutParameter[];\n\tvhProperties?: string[];\n};\n\ntype ValueHelpQualifierMap = Record<string, ValueHelpPayloadInfo>;\n\ntype HistoryPayload = {\n\tenabled?: boolean;\n\tdata?: FieldDataType[];\n\thasRelevantData?: boolean;\n};\n\nexport type ValueHelpPayload = {\n\tpropertyPath: string;\n\tqualifiers: ValueHelpQualifierMap;\n\tvalueHelpQualifier: string;\n\tconditionModel?: string;\n\tisActionParameterDialog?: boolean;\n\tisUnitValueHelp?: boolean;\n\trequestGroupId?: string;\n\tuseMultiValueField?: boolean;\n\tisValueListWithFixedValues?: boolean;\n\tvalueHelpDescriptionPath?: string;\n\tpropertyDescriptionPath?: string;\n\tmaxLength?: number;\n\tvalueHelpKeyPath?: string;\n\tisDefineConditionValueHelp?: boolean;\n\tisPotentiallySensitive?: boolean;\n\thistory?: HistoryPayload;\n\texternalIdPath?: string;\n};\n\ntype ColumnDef = {\n\tpath: string;\n\ttextPath?: string;\n\tlabel: string;\n\tsortable: boolean;\n\tfilterable: boolean | CompiledBindingToolkitExpression;\n\t$Type: string;\n};\n\nexport type ValueListInfo = {\n\tkeyPath: string;\n\tdescriptionPath: string;\n\tfieldPropertyPath: string;\n\tvhKeys: string[];\n\tvhParameters: InOutParameter[];\n\tvalueListInfo: AnnotationValueListType;\n\tcolumnDefs: ColumnDef[];\n\tvalueHelpQualifier: string;\n};\n\ntype DisplayFormat = \"Description\" | \"ValueDescription\" | \"Value\" | \"DescriptionValue\";\n\ntype Path = {\n\tfieldPropertyPath: string;\n\tdescriptionPath: string;\n\tkey: string;\n};\n\nexport type SorterType = {\n\tascending?: boolean;\n\tdescending?: boolean;\n\tpath?: string;\n\tname?: string;\n};\n\nfunction _getDefaultSortPropertyName(valueListInfo: AnnotationValueListType): string | undefined {\n\tlet sortFieldName: string | undefined;\n\tconst metaModel = valueListInfo.$model.getMetaModel();\n\tconst entitySetAnnotations = metaModel.getObject(`/${valueListInfo.CollectionPath}@`) || {};\n\tconst sortRestrictionsInfo = getSortRestrictionsInfo(entitySetAnnotations);\n\tconst foundElement = valueListInfo.Parameters.find(function (element) {\n\t\treturn (\n\t\t\t(element.$Type === CommonAnnotationTypes.ValueListParameterInOut ||\n\t\t\t\telement.$Type === CommonAnnotationTypes.ValueListParameterOut ||\n\t\t\t\telement.$Type === CommonAnnotationTypes.ValueListParameterDisplayOnly) &&\n\t\t\t!(\n\t\t\t\tmetaModel.getObject(`/${valueListInfo.CollectionPath}/${element.ValueListProperty}@com.sap.vocabularies.UI.v1.Hidden`) ===\n\t\t\t\ttrue\n\t\t\t)\n\t\t);\n\t});\n\tif (foundElement) {\n\t\tif (\n\t\t\tmetaModel.getObject(\n\t\t\t\t`/${valueListInfo.CollectionPath}/${foundElement.ValueListProperty}@com.sap.vocabularies.Common.v1.Text@com.sap.vocabularies.UI.v1.TextArrangement/$EnumMember`\n\t\t\t) === \"com.sap.vocabularies.UI.v1.TextArrangementType/TextOnly\"\n\t\t) {\n\t\t\tsortFieldName = metaModel.getObject(\n\t\t\t\t`/${valueListInfo.CollectionPath}/${foundElement.ValueListProperty}@com.sap.vocabularies.Common.v1.Text/$Path`\n\t\t\t);\n\t\t} else {\n\t\t\tsortFieldName = foundElement.ValueListProperty;\n\t\t}\n\t}\n\tif (sortFieldName && (!sortRestrictionsInfo.propertyInfo[sortFieldName] || sortRestrictionsInfo.propertyInfo[sortFieldName].sortable)) {\n\t\treturn sortFieldName;\n\t} else {\n\t\treturn undefined;\n\t}\n}\n\nfunction _redundantDescription(\n\toVLParameter: {\n\t\tValueListProperty: string;\n\t},\n\taColumnInfo: ColumnInfo[]\n): boolean | undefined {\n\tconst oColumnInfo = aColumnInfo.find(function (columnInfo: ColumnInfo) {\n\t\treturn oVLParameter.ValueListProperty === columnInfo.textColumnName;\n\t});\n\tif (\n\t\toVLParameter.ValueListProperty === oColumnInfo?.textColumnName &&\n\t\t!oColumnInfo.keyColumnHidden &&\n\t\toColumnInfo.keyColumnDisplayFormat !== \"Value\"\n\t) {\n\t\treturn true;\n\t}\n\treturn undefined;\n}\n\nfunction _hasImportanceHigh(oValueListContext: { Parameters: AnnotationValueListParameter[] }): boolean {\n\treturn oValueListContext.Parameters.some(function (oParameter: AnnotationValueListParameter) {\n\t\treturn (\n\t\t\toParameter[\"@com.sap.vocabularies.UI.v1.Importance\"] &&\n\t\t\toParameter[\"@com.sap.vocabularies.UI.v1.Importance\"].$EnumMember === \"com.sap.vocabularies.UI.v1.ImportanceType/High\"\n\t\t);\n\t});\n}\n\nfunction _build$SelectString(control: Control): string | undefined {\n\tconst oViewData = control.getModel(\"viewData\") as JSONModel;\n\tif (oViewData) {\n\t\tconst oData = oViewData.getData();\n\t\tif (oData) {\n\t\t\tconst aColumns = oData.columns;\n\t\t\tif (aColumns) {\n\t\t\t\treturn aColumns.reduce(function (\n\t\t\t\t\tsQuery: string,\n\t\t\t\t\toProperty: {\n\t\t\t\t\t\tpath?: string;\n\t\t\t\t\t}\n\t\t\t\t) {\n\t\t\t\t\t// Navigation properties (represented by X/Y) should not be added to $select.\n\t\t\t\t\t// TODO : They should be added as $expand=X($select=Y) instead\n\t\t\t\t\tif (oProperty.path && !oProperty.path.includes(\"/\")) {\n\t\t\t\t\t\tsQuery = sQuery ? `${sQuery},${oProperty.path}` : oProperty.path;\n\t\t\t\t\t}\n\t\t\t\t\treturn sQuery;\n\t\t\t\t}, undefined);\n\t\t\t}\n\t\t}\n\t}\n\treturn undefined;\n}\n\nfunction _getValueHelpColumnDisplayFormat(oPropertyAnnotations: MetaModelPropertyAnnotations, isValueHelpWithFixedValues: boolean): string {\n\tconst sDisplayMode = CommonUtils.computeDisplayMode(oPropertyAnnotations);\n\tconst oTextAnnotation = oPropertyAnnotations && oPropertyAnnotations[\"@com.sap.vocabularies.Common.v1.Text\"];\n\tconst oTextArrangementAnnotation =\n\t\toTextAnnotation && oPropertyAnnotations[\"@com.sap.vocabularies.Common.v1.Text@com.sap.vocabularies.UI.v1.TextArrangement\"];\n\tif (isValueHelpWithFixedValues) {\n\t\treturn oTextAnnotation && typeof oTextAnnotation !== \"string\" && \"$Path\" in oTextAnnotation && oTextAnnotation.$Path\n\t\t\t? sDisplayMode\n\t\t\t: \"Value\";\n\t} else {\n\t\t// Only explicit defined TextArrangements in a Value Help with Dialog are considered\n\t\treturn oTextArrangementAnnotation ? sDisplayMode : \"Value\";\n\t}\n}\n\n/**\n * Retrieves the valueList's PresentationVariant.\n * @param valueList The valueList annotation\n * @returns The PresentationVariant (if any) of the valueList\n */\nfunction getPresentationVariant(valueList: AnnotationValueListType): MetaModelType<PresentationVariant> | undefined {\n\tconst presentationVariantQualifier = valueList.PresentationVariantQualifier ? `#${valueList.PresentationVariantQualifier}` : \"\";\n\tconst presentationVariantPath = `/${valueList.CollectionPath}/@com.sap.vocabularies.UI.v1.PresentationVariant${presentationVariantQualifier}`;\n\treturn valueList.$model.getMetaModel().getObject(presentationVariantPath) as MetaModelType<PresentationVariant> | undefined;\n}\n\ntype ColumnInfo = {\n\tkeyColumnHidden?: boolean;\n\tkeyColumnDisplayFormat?: string;\n\ttextColumnName?: string;\n\tcolumnName: string;\n\thasHiddenAnnotation?: boolean;\n};\nconst ValueListHelper = {\n\tgetValueListCollectionEntitySet: function (oValueListContext: Context): BaseContext | undefined {\n\t\tconst mValueList = oValueListContext.getObject();\n\t\treturn mValueList.$model.getMetaModel().createBindingContext(`/${mValueList.CollectionPath}`);\n\t},\n\n\t/**\n\t * Checks if the ValueList is annotated with a PresentationVariant.\n\t * If the PresentationVariant is annotated with a RecursiveHierarchyQualifier, the ValueList's table has to be a TreeTable.\n\t * @param valueList The valueList annotation\n\t * @returns True if the table has to be a TreeTable, false otherwise\n\t */\n\tisTreeTableType(valueList: AnnotationValueListType): boolean {\n\t\treturn getPresentationVariant(valueList)?.RecursiveHierarchyQualifier ? true : false;\n\t},\n\n\t/**\n\t * Gets the delegate for the ValueList's table.\n\t * @param valueList The valueList annotation\n\t * @returns The calculated delegate for the ValueList's table\n\t */\n\tgetTableDelegate: function (valueList: AnnotationValueListType): string {\n\t\tlet sDefaultSortPropertyName = _getDefaultSortPropertyName(valueList);\n\t\tif (sDefaultSortPropertyName) {\n\t\t\tsDefaultSortPropertyName = `'${sDefaultSortPropertyName}'`;\n\t\t}\n\t\tconst presentationVariant = getPresentationVariant(valueList);\n\t\tconst recursiveHierarchyQualifier = presentationVariant?.RecursiveHierarchyQualifier;\n\t\tif (recursiveHierarchyQualifier) {\n\t\t\tconst initialExpansionLevel = presentationVariant.InitialExpansionLevel;\n\t\t\treturn (\n\t\t\t\t\"{name: 'sap/fe/macros/internal/valuehelp/TableDelegate', payload: {collectionName: '\" +\n\t\t\t\tvalueList.CollectionPath +\n\t\t\t\t\"'\" +\n\t\t\t\t(sDefaultSortPropertyName ? \", defaultSortPropertyName: \" + sDefaultSortPropertyName : \"\") +\n\t\t\t\t\", hierarchyQualifier: '\" +\n\t\t\t\trecursiveHierarchyQualifier +\n\t\t\t\t\"'\" +\n\t\t\t\t(initialExpansionLevel ? \", initialExpansionLevel: \" + (initialExpansionLevel + 1) : \"\") +\n\t\t\t\t\"}}\"\n\t\t\t);\n\t\t}\n\t\treturn (\n\t\t\t\"{name: 'sap/fe/macros/internal/valuehelp/TableDelegate', payload: {collectionName: '\" +\n\t\t\tvalueList.CollectionPath +\n\t\t\t\"'\" +\n\t\t\t(sDefaultSortPropertyName ? \", defaultSortPropertyName: \" + sDefaultSortPropertyName : \"\") +\n\t\t\t\"}}\"\n\t\t);\n\t},\n\n\t/**\n\t * Gets the sort conditions set on the ValueList's PresentationVariant.\n\t * @param valueListInfo The valueList annotation\n\t * @param isSuggestion Indicates if the ValueList is used in a suggestion scenario\n\t * @param asCustomdata Indicates if the sort conditions should be returned as custom data\n\t * @returns The sort conditions if any, undefined otherwise\n\t */\n\tgetSortConditionsFromPresentationVariant: function (\n\t\tvalueListInfo: AnnotationValueListType,\n\t\tisSuggestion: boolean,\n\t\tasCustomdata = false\n\t): string | undefined {\n\t\tconst presentationVariant = getPresentationVariant(valueListInfo);\n\t\tif (presentationVariant?.SortOrder) {\n\t\t\tconst sortConditions = {\n\t\t\t\tsorters: [] as SorterType[]\n\t\t\t};\n\n\t\t\tpresentationVariant.SortOrder.forEach(function (condition) {\n\t\t\t\tconst sorter: SorterType = {},\n\t\t\t\t\tpropertyPath = condition?.Property?.$PropertyPath;\n\t\t\t\tif (isSuggestion) {\n\t\t\t\t\tsorter.path = propertyPath;\n\t\t\t\t} else {\n\t\t\t\t\tsorter.name = propertyPath;\n\t\t\t\t}\n\n\t\t\t\tif (condition.Descending) {\n\t\t\t\t\tsorter.descending = true;\n\t\t\t\t} else {\n\t\t\t\t\tsorter.ascending = true;\n\t\t\t\t}\n\t\t\t\tsortConditions.sorters.push(sorter);\n\t\t\t});\n\t\t\tconst stringConverter = asCustomdata ? CommonHelper.stringifyCustomData : JSON.stringify;\n\t\t\treturn isSuggestion ? `sorter: ${stringConverter(sortConditions.sorters)}` : stringConverter(sortConditions);\n\t\t}\n\t\treturn;\n\t},\n\n\t/**\n\t * Gets the sort conditions for the ValueList.\n\t * @param valueListInfo The ValueList annotation\n\t * @param isValueHelpWithFixedValues Indicates if ValueList has fixed values\n\t * @returns The sort conditions either from the presentation variant or the default one, undefined otherwise\n\t */\n\tgetSortConditionsForValueList: function (\n\t\tvalueListInfo: AnnotationValueListType,\n\t\tisValueHelpWithFixedValues: boolean\n\t): string | undefined {\n\t\tconst sortConditionsFromPresentationVariant = ValueListHelper.getSortConditionsFromPresentationVariant(valueListInfo, false);\n\n\t\tif (sortConditionsFromPresentationVariant) {\n\t\t\treturn sortConditionsFromPresentationVariant;\n\t\t}\n\t\tif (isValueHelpWithFixedValues) {\n\t\t\tconst sortConditions = {\n\t\t\t\tsorters: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: _getDefaultSortPropertyName(valueListInfo),\n\t\t\t\t\t\tascending: true\n\t\t\t\t\t}\n\t\t\t\t] as SorterType[]\n\t\t\t};\n\t\t\treturn JSON.stringify(sortConditions);\n\t\t}\n\t},\n\n\tgetPropertyPath: function (oParameters: { UnboundAction?: boolean; Property: string; EntityTypePath: string; Action: string }): string {\n\t\treturn !oParameters.UnboundAction\n\t\t\t? `${oParameters.EntityTypePath}/${oParameters.Action}/${oParameters.Property}`\n\t\t\t: `/${oParameters.Action.substring(oParameters.Action.lastIndexOf(\".\") + 1)}/${oParameters.Property}`;\n\t},\n\n\tgetValueListProperty: function (oPropertyContext: BaseContext): BaseContext | undefined {\n\t\tconst oValueListModel = oPropertyContext.getModel();\n\t\tconst mValueList = oValueListModel.getObject(\"/\") as unknown as { CollectionPath: string; $model: ODataModel };\n\t\treturn mValueList.$model.getMetaModel().createBindingContext(`/${mValueList.CollectionPath}/${oPropertyContext.getObject()}`);\n\t},\n\n\t// This function is used for value help m-table and mdc-table\n\tgetColumnVisibility: function (\n\t\toValueList: { Parameters: AnnotationValueListParameter[] },\n\t\toVLParameter: AnnotationValueListParameter,\n\t\toSource: {\n\t\t\tvalueHelpWithFixedValues: boolean;\n\t\t\tcolumnInfo: {\n\t\t\t\tisDialogTable: boolean;\n\t\t\t\tcolumnInfos: ColumnInfo[];\n\t\t\t};\n\t\t}\n\t): boolean {\n\t\tconst isDropDownList = oSource && !!oSource.valueHelpWithFixedValues,\n\t\t\toColumnInfo = oSource.columnInfo,\n\t\t\tisVisible = !_redundantDescription(oVLParameter, oColumnInfo.columnInfos),\n\t\t\tisDialogTable = oColumnInfo.isDialogTable;\n\n\t\tif (isDropDownList || (!isDropDownList && isDialogTable) || (!isDropDownList && !_hasImportanceHigh(oValueList))) {\n\t\t\tconst columnWithHiddenAnnotation = oColumnInfo.columnInfos.find(function (columnInfo: ColumnInfo) {\n\t\t\t\treturn oVLParameter.ValueListProperty === columnInfo.columnName && columnInfo.hasHiddenAnnotation === true;\n\t\t\t});\n\t\t\treturn !columnWithHiddenAnnotation ? isVisible : false;\n\t\t} else if (!isDropDownList && _hasImportanceHigh(oValueList)) {\n\t\t\treturn oVLParameter &&\n\t\t\t\toVLParameter[\"@com.sap.vocabularies.UI.v1.Importance\"] &&\n\t\t\t\toVLParameter[\"@com.sap.vocabularies.UI.v1.Importance\"].$EnumMember === \"com.sap.vocabularies.UI.v1.ImportanceType/High\"\n\t\t\t\t? true\n\t\t\t\t: false;\n\t\t}\n\t\treturn true;\n\t},\n\n\tgetColumnVisibilityInfo: function (\n\t\toValueList: {\n\t\t\t$model: ODataModel;\n\t\t\tCollectionPath: string;\n\t\t\tParameters: AnnotationValueListParameter[];\n\t\t},\n\t\tsPropertyFullPath: string,\n\t\tbIsDropDownListe: boolean,\n\t\tisDialogTable: boolean\n\t): {\n\t\tisDialogTable: boolean;\n\t\tcolumnInfos: ColumnInfo[];\n\t} {\n\t\tconst oMetaModel = oValueList.$model.getMetaModel();\n\t\tconst aColumnInfos: ColumnInfo[] = [];\n\t\tconst oColumnInfos = {\n\t\t\tisDialogTable: isDialogTable,\n\t\t\tcolumnInfos: aColumnInfos\n\t\t};\n\n\t\toValueList.Parameters.forEach(function (oParameter: AnnotationValueListParameter) {\n\t\t\tconst oPropertyAnnotations = oMetaModel.getObject(`/${oValueList.CollectionPath}/${oParameter.ValueListProperty}@`);\n\t\t\tconst oTextAnnotation = oPropertyAnnotations && oPropertyAnnotations[\"@com.sap.vocabularies.Common.v1.Text\"];\n\t\t\tlet columnInfo: ColumnInfo = {} as unknown as ColumnInfo;\n\t\t\tif (oTextAnnotation) {\n\t\t\t\tcolumnInfo = {\n\t\t\t\t\tkeyColumnHidden: oPropertyAnnotations[\"@com.sap.vocabularies.UI.v1.Hidden\"] ? true : false,\n\t\t\t\t\tkeyColumnDisplayFormat: oTextAnnotation && _getValueHelpColumnDisplayFormat(oPropertyAnnotations, bIsDropDownListe),\n\t\t\t\t\ttextColumnName: oTextAnnotation && oTextAnnotation.$Path,\n\t\t\t\t\tcolumnName: oParameter.ValueListProperty,\n\t\t\t\t\thasHiddenAnnotation: oPropertyAnnotations && oPropertyAnnotations[\"@com.sap.vocabularies.UI.v1.Hidden\"] ? true : false\n\t\t\t\t};\n\t\t\t} else if (oPropertyAnnotations && oPropertyAnnotations[\"@com.sap.vocabularies.UI.v1.Hidden\"]) {\n\t\t\t\tcolumnInfo = {\n\t\t\t\t\tcolumnName: oParameter.ValueListProperty,\n\t\t\t\t\thasHiddenAnnotation: oPropertyAnnotations && oPropertyAnnotations[\"@com.sap.vocabularies.UI.v1.Hidden\"] ? true : false\n\t\t\t\t};\n\t\t\t}\n\t\t\toColumnInfos.columnInfos.push(columnInfo);\n\t\t});\n\n\t\treturn oColumnInfos;\n\t},\n\n\tgetTableItemsParameters: function (\n\t\tthis: Control,\n\t\tvalueListInfo: AnnotationValueListType,\n\t\trequestGroupId: string,\n\t\tisSuggestion: boolean,\n\t\tisValueHelpWithFixedValues: boolean\n\t): string {\n\t\tconst itemParameters = [`path: '/${valueListInfo.CollectionPath}'`];\n\n\t\t// add select to oBindingInfo (BCP 2180255956 / 2170163012)\n\t\tconst selectString = _build$SelectString(this);\n\n\t\t// since there could be recommendations/recently used values to show in the suggestion popover\n\t\t// hence we need to create some transient contexts on the valueHelp list binding\n\t\t// so we will set the updateGroupId of the list binding to avoid sending calls to the backend\n\t\t// we need to explicitly set $$sharedRequest to false to make sure we can create transient contexts in RAP\n\t\tif (requestGroupId) {\n\t\t\tconst selectStringPart = selectString ? `, '${selectString}'` : \"\";\n\n\t\t\titemParameters.push(\n\t\t\t\t`parameters: {$$sharedRequest: false, $$updateGroupId: \"donotsubmit\", $$groupId: '${requestGroupId}'${selectStringPart}}`\n\t\t\t);\n\t\t} else if (selectString) {\n\t\t\titemParameters.push(`parameters: {$$sharedRequest: false, $$updateGroupId: \"donotsubmit\", $select: '${selectString}'}`);\n\t\t}\n\n\t\tconst isSuspended = valueListInfo.Parameters.some(function (oParameter) {\n\t\t\treturn isSuggestion || oParameter.$Type === CommonAnnotationTypes.ValueListParameterIn;\n\t\t});\n\t\titemParameters.push(`suspended: ${isSuspended}`);\n\n\t\tif (!isValueHelpWithFixedValues) {\n\t\t\titemParameters.push(\"length: 10\");\n\t\t}\n\n\t\tconst sortConditionsFromPresentationVariant = ValueListHelper.getSortConditionsFromPresentationVariant(valueListInfo, isSuggestion);\n\n\t\tif (sortConditionsFromPresentationVariant) {\n\t\t\titemParameters.push(sortConditionsFromPresentationVariant);\n\t\t} else if (isValueHelpWithFixedValues) {\n\t\t\tconst defaultSortPropertyName = _getDefaultSortPropertyName(valueListInfo);\n\n\t\t\tif (defaultSortPropertyName) {\n\t\t\t\titemParameters.push(`sorter: [{path: '${defaultSortPropertyName}', ascending: true}]`);\n\t\t\t}\n\t\t}\n\n\t\treturn \"{\" + itemParameters.join(\", \") + \"}\";\n\t},\n\n\t// Is needed for \"external\" representation in qunit\n\thasImportance: function (oValueListContext: Context): string {\n\t\treturn _hasImportanceHigh(oValueListContext.getObject()) ? \"Importance/High\" : \"None\";\n\t},\n\n\t// Is needed for \"external\" representation in qunit\n\tgetMinScreenWidth: function (oValueList: { Parameters: AnnotationValueListParameter[] }): string {\n\t\treturn _hasImportanceHigh(oValueList) ? \"{= ${_VHUI>/minScreenWidth}}\" : \"416px\";\n\t},\n\n\t/**\n\t * Retrieves the column width for a given property.\n\t * @param propertyPath The propertyPath\n\t * @param isValueListWithFixedValues An indicator stating if the valueHelp has fixed values\n\t * @returns The width as a string or undefined.\n\t */\n\tgetColumnWidth: function (propertyPath: DataModelObjectPath<Property>, isValueListWithFixedValues = false): string | undefined {\n\t\tif (CommonUtils.isSmallDevice() || !propertyPath.targetObject) return;\n\t\tconst property = propertyPath.targetObject;\n\t\tlet relatedProperty: Property[] = [property];\n\t\t// The additional property could refer to the text, currency, unit or timezone\n\t\tconst additionalProperty =\n\t\t\t\tgetAssociatedTextProperty(property) ||\n\t\t\t\tgetAssociatedCurrencyProperty(property) ||\n\t\t\t\tgetAssociatedUnitProperty(property) ||\n\t\t\t\tgetAssociatedTimezoneProperty(property),\n\t\t\ttextAnnotation = property.annotations?.Common?.Text,\n\t\t\ttextArrangement = textAnnotation?.annotations?.UI?.TextArrangement?.toString(),\n\t\t\tlabel = property.annotations?.Common?.Label?.toString();\n\t\tlet displayMode: string | undefined;\n\n\t\t// default textarrangement is only used for VH with fixed values\n\t\tif (isValueListWithFixedValues && !textArrangement) {\n\t\t\t//displayMode = as annotated or default\n\t\t\tdisplayMode = getDisplayMode(propertyPath);\n\t\t} else {\n\t\t\t//displayMode = as annotated or undefined\n\t\t\tdisplayMode = textArrangement && getDisplayMode(propertyPath);\n\t\t}\n\n\t\tif (additionalProperty) {\n\t\t\tif (displayMode === \"Description\") {\n\t\t\t\trelatedProperty = [additionalProperty];\n\t\t\t} else if (!textAnnotation || (displayMode && displayMode !== \"Value\")) {\n\t\t\t\trelatedProperty.push(additionalProperty);\n\t\t\t}\n\t\t}\n\n\t\tlet size = 0;\n\t\tconst instances: ODataType[] = [];\n\n\t\trelatedProperty.forEach((prop: Property) => {\n\t\t\tconst propertyTypeConfig = getTypeConfig(prop, undefined);\n\t\t\tconst PropertyODataConstructor = ObjectPath.get(propertyTypeConfig.type);\n\t\t\tif (PropertyODataConstructor) {\n\t\t\t\tinstances.push(new PropertyODataConstructor(propertyTypeConfig.formatOptions, propertyTypeConfig.constraints));\n\t\t\t}\n\t\t});\n\t\tconst sWidth = Util.calcColumnWidth(instances, label);\n\t\tsize = sWidth ? parseFloat(sWidth.replace(\"rem\", \"\")) : 0;\n\n\t\tif (size === 0) {\n\t\t\tLog.error(`Cannot compute the column width for property: ${property.name}`);\n\t\t}\n\t\treturn size <= 20 ? size.toString() + \"rem\" : \"20rem\";\n\t},\n\n\tgetOutParameterPaths: function (aParameters: AnnotationValueListParameter[]): string {\n\t\tlet sPath = \"\";\n\t\taParameters.forEach(function (oParameter: AnnotationValueListParameter) {\n\t\t\tif (oParameter.$Type.endsWith(\"Out\")) {\n\t\t\t\tsPath += `{${oParameter.ValueListProperty}}`;\n\t\t\t}\n\t\t});\n\t\treturn sPath;\n\t},\n\n\tentityIsSearchable: function (\n\t\tpropertyAnnotations: AnnotationsForProperty,\n\t\tcollectionAnnotations: MetaModelEntitySetAnnotation\n\t): boolean {\n\t\tconst searchSupported = propertyAnnotations[\"@com.sap.vocabularies.Common.v1.ValueList\"]?.SearchSupported,\n\t\t\tsearchable = collectionAnnotations[\"@Org.OData.Capabilities.V1.SearchRestrictions\"]?.Searchable;\n\n\t\tif (\n\t\t\t(searchable === undefined && searchSupported === false) ||\n\t\t\t(searchable === true && searchSupported === false) ||\n\t\t\tsearchable === false\n\t\t) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t},\n\n\t/**\n\t * Returns the condition path required for the condition model.\n\t * For e.g. <1:N-PropertyName>*\\/<1:1-PropertyName>/<PropertyName>.\n\t * @param metaModel The metamodel instance\n\t * @param entitySet The entity set path\n\t * @param propertyPath The property path\n\t * @returns The formatted condition path\n\t * @private\n\t */\n\t_getConditionPath: function (metaModel: ODataMetaModel, entitySet: string, propertyPath: string): string {\n\t\t// (see also: sap/fe/core/converters/controls/ListReport/FilterBar.ts)\n\t\tconst parts = propertyPath.split(\"/\");\n\t\tlet conditionPath = \"\",\n\t\t\tpartialPath: string | undefined;\n\n\t\twhile (parts.length) {\n\t\t\tlet part = parts.shift() as string;\n\t\t\tpartialPath = partialPath ? `${partialPath}/${part}` : part;\n\t\t\tconst property = metaModel.getObject(`${entitySet}/${partialPath}`);\n\t\t\tif (property && property.$kind === \"NavigationProperty\" && property.$isCollection) {\n\t\t\t\tpart += \"*\";\n\t\t\t}\n\t\t\tconditionPath = conditionPath ? `${conditionPath}/${part}` : part;\n\t\t}\n\t\treturn conditionPath;\n\t},\n\n\t/**\n\t * Returns array of column definitions corresponding to properties defined as Selection Fields on the CollectionPath entity set in a ValueHelp.\n\t * @param metaModel The metamodel instance\n\t * @param entitySet The entity set path\n\t * @returns Array of column definitions\n\t * @private\n\t */\n\t_getColumnDefinitionFromSelectionFields: function (metaModel: ODataMetaModel, entitySet: string): ColumnDef[] {\n\t\tconst columnDefs: ColumnDef[] = [],\n\t\t\tentityTypeAnnotations = metaModel.getObject(`${entitySet}/@`) as AnnotationsForEntityType,\n\t\t\tselectionFields = entityTypeAnnotations[\"@com.sap.vocabularies.UI.v1.SelectionFields\"];\n\n\t\tif (selectionFields) {\n\t\t\tselectionFields.forEach(function (selectionField: AnnotationSelectionField) {\n\t\t\t\tconst selectionFieldPath = `${entitySet}/${selectionField.$PropertyPath}`,\n\t\t\t\t\tconditionPath = ValueListHelper._getConditionPath(metaModel, entitySet, selectionField.$PropertyPath),\n\t\t\t\t\tpropertyAnnotations = metaModel.getObject(`${selectionFieldPath}@`) as AnnotationsForProperty,\n\t\t\t\t\tcolumnDef = {\n\t\t\t\t\t\tpath: conditionPath,\n\t\t\t\t\t\tlabel: propertyAnnotations?.[AnnotationLabel] || selectionFieldPath,\n\t\t\t\t\t\tsortable: true,\n\t\t\t\t\t\tfilterable: isPropertyFilterable(metaModel, entitySet, selectionField.$PropertyPath, false),\n\t\t\t\t\t\t$Type: metaModel.getObject(selectionFieldPath)?.$Type\n\t\t\t\t\t};\n\t\t\t\tcolumnDefs.push(columnDef);\n\t\t\t});\n\t\t}\n\n\t\treturn columnDefs;\n\t},\n\n\t_mergeColumnDefinitionsFromProperties: function (\n\t\tcolumnDefs: ColumnDef[],\n\t\tvalueListInfo: AnnotationValueListType,\n\t\tvalueListProperty: string,\n\t\tproperty: ColumnProperty,\n\t\tpropertyAnnotations: AnnotationsForProperty\n\t): void {\n\t\tlet columnPath = valueListProperty,\n\t\t\tcolumnPropertyType = property.$Type;\n\t\tconst label = propertyAnnotations[AnnotationLabel] || columnPath,\n\t\t\ttextAnnotation = propertyAnnotations[AnnotationText];\n\n\t\tif (\n\t\t\ttextAnnotation &&\n\t\t\tpropertyAnnotations[AnnotationTextUITextArrangement]?.$EnumMember === \"com.sap.vocabularies.UI.v1.TextArrangementType/TextOnly\"\n\t\t) {\n\t\t\t// the column property is the one coming from the text annotation\n\t\t\tcolumnPath = textAnnotation.$Path;\n\t\t\tconst textPropertyPath = `/${valueListInfo.CollectionPath}/${columnPath}`;\n\t\t\tcolumnPropertyType = valueListInfo.$model.getMetaModel()?.getObject(textPropertyPath)?.$Type as string;\n\t\t}\n\n\t\tif (columnNotAlreadyDefined(columnDefs, columnPath)) {\n\t\t\tconst columnDef: ColumnDef = {\n\t\t\t\tpath: columnPath,\n\t\t\t\t// ensure the text associated with a column that references a navigation property reflects the same navigation structure as the column\n\t\t\t\ttextPath:\n\t\t\t\t\ttextAnnotation?.$Path && valueListProperty.includes(\"/\")\n\t\t\t\t\t\t? valueListProperty.substring(0, valueListProperty.lastIndexOf(\"/\")) + \"/\" + textAnnotation.$Path\n\t\t\t\t\t\t: textAnnotation?.$Path,\n\t\t\t\tlabel: label,\n\t\t\t\tsortable: true,\n\t\t\t\tfilterable: !propertyAnnotations[\"@com.sap.vocabularies.UI.v1.HiddenFilter\"],\n\t\t\t\t$Type: columnPropertyType\n\t\t\t};\n\t\t\tcolumnDefs.push(columnDef);\n\t\t}\n\t},\n\n\tfilterInOutParameters: function (vhParameters: InOutParameter[], typeFilter: string[]): InOutParameter[] {\n\t\treturn vhParameters.filter(function (parameter) {\n\t\t\treturn typeFilter.includes(parameter.parmeterType);\n\t\t});\n\t},\n\n\tgetInParameters: function (vhParameters: InOutParameter[]): InOutParameter[] {\n\t\treturn ValueListHelper.filterInOutParameters(vhParameters, [\n\t\t\tAnnotationValueListParameterIn,\n\t\t\tAnnotationValueListParameterConstant,\n\t\t\tAnnotationValueListParameterInOut\n\t\t]);\n\t},\n\n\tgetOutParameters: function (vhParameters: InOutParameter[]): InOutParameter[] {\n\t\treturn ValueListHelper.filterInOutParameters(vhParameters, [AnnotationValueListParameterOut, AnnotationValueListParameterInOut]);\n\t},\n\n\tcreateVHUIModel: function (valueHelp: ValueHelp, propertyPath: string, metaModel: ODataMetaModel): JSONModel {\n\t\t// setting the _VHUI model evaluated in the ValueListTable fragment\n\t\tconst vhUIModel = new JSONModel({}),\n\t\t\tpropertyAnnotations = metaModel.getObject(`${propertyPath}@`) as AnnotationsForProperty;\n\n\t\tvalueHelp.setModel(vhUIModel, \"_VHUI\");\n\t\t// Identifies the \"ContextDependent-Scenario\"\n\t\tvhUIModel.setProperty(\"/hasValueListRelevantQualifiers\", !!propertyAnnotations[AnnotationsValueListRelevantQualifiers]);\n\t\t/* Property label for dialog title */\n\t\tvhUIModel.setProperty(\"/propertyLabel\", propertyAnnotations[AnnotationLabel]);\n\n\t\treturn vhUIModel;\n\t},\n\n\t/**\n\t * Returns the title of the value help dialog.\n\t * By default, the data field label is used, otherwise either the property label or the value list label is used as a fallback.\n\t * For context-dependent value helps, by default the value list label is used, otherwise either the property label or the data field label is used as a fallback.\n\t * @param valueHelp The valueHelp instance\n\t * @param valuehelpLabel The label in the value help metadata\n\t * @returns The title for the valueHelp dialog\n\t * @private\n\t */\n\t_getDialogTitle: function (valueHelp: ValueHelp, valuehelpLabel: string | undefined): string {\n\t\tconst propertyLabel = (valueHelp.getModel(\"_VHUI\") as JSONModel).getProperty(\"/propertyLabel\");\n\t\tconst dataFieldLabel = valueHelp.getControl()?.getProperty(\"label\");\n\t\treturn (valueHelp.getModel(\"_VHUI\") as JSONModel).getProperty(\"/hasValueListRelevantQualifiers\")\n\t\t\t? valuehelpLabel || propertyLabel || dataFieldLabel\n\t\t\t: dataFieldLabel || propertyLabel || valuehelpLabel;\n\t},\n\n\tdestroyVHContent: function (valueHelp: ValueHelp | undefined): void {\n\t\tif (valueHelp) {\n\t\t\tvalueHelp.getDialog()?.destroyContent();\n\t\t\tvalueHelp.getTypeahead()?.destroyContent();\n\t\t}\n\t},\n\n\tputDefaultQualifierFirst: function (qualifiers: string[]): string[] {\n\t\tconst indexDefaultVH = qualifiers.indexOf(\"\");\n\n\t\t// default ValueHelp without qualifier should be the first\n\t\tif (indexDefaultVH > 0) {\n\t\t\tqualifiers.unshift(qualifiers[indexDefaultVH]);\n\t\t\tqualifiers.splice(indexDefaultVH + 1, 1);\n\t\t}\n\t\treturn qualifiers;\n\t},\n\n\t_getContextPrefix: function (bindingContext: Context | undefined, propertyBindingParts: string[]): string {\n\t\tif (bindingContext && bindingContext.getPath()) {\n\t\t\tconst bindigContextParts = bindingContext.getPath().split(\"/\");\n\t\t\tif (propertyBindingParts.length - bindigContextParts.length > 1) {\n\t\t\t\tconst contextPrefixParts = [];\n\t\t\t\tfor (let i = bindigContextParts.length; i < propertyBindingParts.length - 1; i++) {\n\t\t\t\t\tcontextPrefixParts.push(propertyBindingParts[i]);\n\t\t\t\t}\n\t\t\t\treturn `${contextPrefixParts.join(\"/\")}/`;\n\t\t\t}\n\t\t}\n\n\t\treturn \"\";\n\t},\n\n\t_getVhParameter: function (\n\t\tconditionModel: string | undefined,\n\t\tvalueHelp: ValueHelp | undefined,\n\t\tcontextPrefix: string,\n\t\tparameter: AnnotationValueListParameter,\n\t\tvhMetaModel: ODataMetaModel,\n\t\tlocalDataPropertyPath: string\n\t): InOutParameter {\n\t\tlet valuePath: string | undefined = \"\";\n\t\tconst bindingContext = valueHelp?.getBindingContext();\n\t\tif (conditionModel && conditionModel.length > 0) {\n\t\t\tif (\n\t\t\t\tvalueHelp?.getParent()?.isA(\"sap.ui.mdc.Table\") === true &&\n\t\t\t\tbindingContext &&\n\t\t\t\tValueListHelper._parameterIsA(parameter, [\n\t\t\t\t\tCommonAnnotationTypes.ValueListParameterIn,\n\t\t\t\t\tCommonAnnotationTypes.ValueListParameterInOut\n\t\t\t\t])\n\t\t\t) {\n\t\t\t\t// Special handling for value help used in filter dialog\n\t\t\t\tconst parts = localDataPropertyPath.split(\"/\");\n\t\t\t\tif (parts.length > 1) {\n\t\t\t\t\tconst firstNavigationProperty = parts[0];\n\t\t\t\t\tconst oBoundEntity = vhMetaModel.getMetaContext(bindingContext.getPath());\n\t\t\t\t\tconst sPathOfTable = (valueHelp.getParent() as unknown as { getRowBinding: Function }).getRowBinding().getPath(); //TODO\n\t\t\t\t\tif (oBoundEntity.getObject(`${sPathOfTable}/$Partner`) === firstNavigationProperty) {\n\t\t\t\t\t\t// Using the condition model doesn't make any sense in case an in-parameter uses a navigation property\n\t\t\t\t\t\t// referring to the partner. Therefore using the FVH context instead of the condition model.\n\t\t\t\t\t\tvaluePath = localDataPropertyPath;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (\n\t\t\t\tvalueHelp?.getParent()?.getParent()?.getParent()?.isA<FilterBarAPI>(\"sap.fe.macros.filterBar.FilterBarAPI\") === true &&\n\t\t\t\tbindingContext &&\n\t\t\t\tValueListHelper._parameterIsA(parameter, [\n\t\t\t\t\tCommonAnnotationTypes.ValueListParameterIn,\n\t\t\t\t\tCommonAnnotationTypes.ValueListParameterInOut\n\t\t\t\t])\n\t\t\t) {\n\t\t\t\t// In case we are a value help of a FilterBar, we can go up to the API to check if we are on a filterbar representing a navigation property\n\t\t\t\tconst filterBarAPI = valueHelp.getParent()?.getParent()?.getParent() as FilterBarAPI;\n\t\t\t\tconst filterBarMetaPath = filterBarAPI.metaPath;\n\t\t\t\tconst valueHelpContextPath = vhMetaModel.getMetaPath(bindingContext.getPath());\n\t\t\t\tconst contextMetaPath = new MetaPath(convertTypes(vhMetaModel), valueHelpContextPath, valueHelpContextPath);\n\t\t\t\tconst metaPath = new MetaPath(convertTypes(vhMetaModel), filterBarMetaPath, valueHelpContextPath);\n\t\t\t\tconst newPath = metaPath.getMetaPathForPath<Property>(localDataPropertyPath);\n\t\t\t\tif (newPath && newPath.getTarget()) {\n\t\t\t\t\tconst targetEntitySet = newPath.getClosestEntitySet();\n\t\t\t\t\tif (targetEntitySet === contextMetaPath.getClosestEntitySet()) {\n\t\t\t\t\t\tvaluePath = contextMetaPath.getMetaPathForObject(newPath.getTarget())?.getRelativePath();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!valuePath) {\n\t\t\t\tvaluePath = conditionModel + \">/conditions/\" + localDataPropertyPath;\n\t\t\t}\n\t\t} else {\n\t\t\tvaluePath = contextPrefix + localDataPropertyPath;\n\t\t}\n\n\t\treturn {\n\t\t\tparmeterType: parameter.$Type,\n\t\t\tsource: valuePath,\n\t\t\thelpPath: parameter.ValueListProperty,\n\t\t\tconstantValue: parameter.Constant,\n\t\t\tinitialValueIsSignificant: Boolean(parameter.InitialValueIsSignificant)\n\t\t};\n\t},\n\n\t_parameterIsA(parameter: AnnotationValueListParameter, parameterTypes: CommonAnnotationTypes[]): boolean {\n\t\treturn parameterTypes.includes(parameter.$Type as CommonAnnotationTypes);\n\t},\n\n\t_enrichPath: function (\n\t\tpath: Path,\n\t\tpropertyPath: string,\n\t\tlocalDataPropertyPath: string,\n\t\tparameter: AnnotationValueListParameter,\n\t\tpropertyName: string | undefined,\n\t\tpropertyAnnotations: AnnotationsForProperty,\n\t\texternalIdPath: string | undefined\n\t): void {\n\t\tif (\n\t\t\t!path.key &&\n\t\t\tValueListHelper._parameterIsA(parameter, [CommonAnnotationTypes.ValueListParameterInOut]) &&\n\t\t\tlocalDataPropertyPath === propertyName\n\t\t) {\n\t\t\t/* EXTERNALID */\n\t\t\tconst externalIdProperty = externalIdPath?.split(\"/\").pop();\n\t\t\tparameter.ValueListProperty = externalIdProperty ? externalIdProperty : parameter.ValueListProperty;\n\t\t\tpath.fieldPropertyPath = propertyPath;\n\t\t\tpath.key = parameter.ValueListProperty;\n\n\t\t\t//Only the text annotation of the key can specify the description\n\t\t\tpath.descriptionPath = propertyAnnotations[AnnotationText]?.$Path || \"\";\n\t\t}\n\t},\n\n\t_enrichKeys: function (vhKeys: string[], parameter: AnnotationValueListParameter): void {\n\t\tif (\n\t\t\tValueListHelper._parameterIsA(parameter, ValueListHelper.getInAndOutParametersList()) &&\n\t\t\t!vhKeys.includes(parameter.ValueListProperty)\n\t\t) {\n\t\t\tvhKeys.push(parameter.ValueListProperty);\n\t\t}\n\t},\n\n\t_getEntityType: async function (metaModelVH: ODataMetaModel, entitySetPath: string): Promise<EntityType> {\n\t\treturn metaModelVH.getObject(`${entitySetPath}/`) || (await metaModelVH.requestObject(`${entitySetPath}/`));\n\t},\n\n\t/**\n\t * Method to pre-process a value list annotation before using them in the templating.\n\t * @param annotationValueListType\n\t * @param propertyName\n\t * @param conditionModel\n\t * @param valueHelp\n\t * @param contextPrefix\n\t * @param metaModel\n\t * @param valueHelpQualifier\n\t * @param payload\n\t * @param entityType\n\t * @returns The ValueListInfo to be used in templating\n\t */\n\t_processParameters: function (\n\t\tannotationValueListType: AnnotationValueListType,\n\t\tpropertyName: string | undefined,\n\t\tconditionModel: string | undefined,\n\t\tvalueHelp: ValueHelp | undefined,\n\t\tcontextPrefix: string,\n\t\tmetaModel: ODataMetaModel,\n\t\tvalueHelpQualifier: string,\n\t\tpayload: ValueHelpPayload | undefined,\n\t\tentityType: EntityType | undefined\n\t): ValueListInfo | undefined {\n\t\tconst isForMultiValueField = payload?.useMultiValueField;\n\t\tconst metaModelVH = annotationValueListType.$model.getMetaModel(),\n\t\t\tentitySetPath = `/${annotationValueListType.CollectionPath}`;\n\t\tif (entityType === undefined) {\n\t\t\tLog.error(`Inconsistent value help metadata: Entity ${entitySetPath} is not defined`);\n\t\t\treturn;\n\t\t}\n\t\tconst columnDefs = ValueListHelper._getColumnDefinitionFromSelectionFields(metaModelVH, entitySetPath),\n\t\t\tvhParameters: InOutParameter[] = [],\n\t\t\tpath: Path = {\n\t\t\t\tfieldPropertyPath: \"\",\n\t\t\t\tdescriptionPath: \"\",\n\t\t\t\tkey: \"\"\n\t\t\t};\n\t\tlet vhKeys: string[] = [];\n\n\t\tif (\"$Key\" in entityType && entityType.$Key) {\n\t\t\tvhKeys = [...(entityType.$Key as string[])];\n\t\t}\n\t\tconst firstKey = vhKeys[0];\n\n\t\tfor (const parameter of annotationValueListType.Parameters) {\n\t\t\t//All String fields are allowed for filter\n\t\t\tconst propertyPath = `/${annotationValueListType.CollectionPath}/${parameter.ValueListProperty}`,\n\t\t\t\tproperty = metaModelVH.getObject(propertyPath),\n\t\t\t\tpropertyAnnotations = payload?.externalIdPath\n\t\t\t\t\t? ((metaModelVH.getObject(`/${payload?.externalIdPath}@`) || {}) as AnnotationsForProperty)\n\t\t\t\t\t: ((metaModelVH.getObject(`${propertyPath}@`) || {}) as AnnotationsForProperty),\n\t\t\t\tlocalDataPropertyPath = parameter.LocalDataProperty?.$PropertyPath || \"\";\n\n\t\t\tif (payload && propertyAnnotations[AnnotationsPersonalDataPotentiallySensitive]) {\n\t\t\t\tpayload.isPotentiallySensitive = true;\n\t\t\t}\n\n\t\t\t// If property is undefined, then the property coming for the entry isn't defined in\n\t\t\t// the metamodel, therefore we don't need to add it in the in/out parameters\n\t\t\tif (property) {\n\t\t\t\t// Search for the *out Parameter mapped to the local property\n\t\t\t\tValueListHelper._enrichPath(\n\t\t\t\t\tpath,\n\t\t\t\t\tpropertyPath,\n\t\t\t\t\tlocalDataPropertyPath,\n\t\t\t\t\tparameter,\n\t\t\t\t\tpropertyName,\n\t\t\t\t\tpropertyAnnotations,\n\t\t\t\t\tpayload?.externalIdPath\n\t\t\t\t);\n\n\t\t\t\tconst valueListProperty = parameter.ValueListProperty;\n\t\t\t\tValueListHelper._mergeColumnDefinitionsFromProperties(\n\t\t\t\t\tcolumnDefs,\n\t\t\t\t\tannotationValueListType,\n\t\t\t\t\tvalueListProperty,\n\t\t\t\t\tproperty,\n\t\t\t\t\tpropertyAnnotations\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t//In and InOut and Out\n\t\t\tif (\n\t\t\t\t(ValueListHelper._parameterIsA(parameter, [\n\t\t\t\t\tCommonAnnotationTypes.ValueListParameterIn,\n\t\t\t\t\tCommonAnnotationTypes.ValueListParameterOut,\n\t\t\t\t\tCommonAnnotationTypes.ValueListParameterInOut\n\t\t\t\t]) &&\n\t\t\t\t\tlocalDataPropertyPath !== propertyName) ||\n\t\t\t\tValueListHelper._parameterIsA(parameter, [CommonAnnotationTypes.ValueListParameterOut])\n\t\t\t) {\n\t\t\t\tconst vhParameter = ValueListHelper._getVhParameter(\n\t\t\t\t\tconditionModel,\n\t\t\t\t\tvalueHelp,\n\t\t\t\t\tcontextPrefix,\n\t\t\t\t\tparameter,\n\t\t\t\t\tmetaModel,\n\t\t\t\t\tlocalDataPropertyPath\n\t\t\t\t);\n\t\t\t\tif (\n\t\t\t\t\t!isForMultiValueField ||\n\t\t\t\t\t(isForMultiValueField && ValueListHelper._parameterIsA(parameter, [CommonAnnotationTypes.ValueListParameterIn]))\n\t\t\t\t) {\n\t\t\t\t\t// in case of Multivalue Field we disregard ValueListParameterInOut\n\t\t\t\t\tvhParameters.push(vhParameter);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//Constant as InParamter for filtering\n\t\t\tif (parameter.$Type === AnnotationValueListParameterConstant) {\n\t\t\t\tvhParameters.push({\n\t\t\t\t\tparmeterType: parameter.$Type,\n\t\t\t\t\tsource: parameter.ValueListProperty,\n\t\t\t\t\thelpPath: parameter.ValueListProperty,\n\t\t\t\t\tconstantValue: parameter.Constant,\n\t\t\t\t\tinitialValueIsSignificant: Boolean(parameter.InitialValueIsSignificant)\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Enrich keys with out-parameters\n\t\t\tValueListHelper._enrichKeys(vhKeys, parameter);\n\t\t}\n\t\tif (!path.key) {\n\t\t\tpath.key = firstKey;\n\t\t\tconst propertyPath = `/${annotationValueListType.CollectionPath}/${firstKey}`;\n\t\t\tconst propertyAnnotations = (metaModelVH.getObject(`${propertyPath}@`) || {}) as AnnotationsForProperty;\n\t\t\t// We update path.descriptionPath for the key property\n\t\t\tpath.descriptionPath = propertyAnnotations[AnnotationText]?.$Path || \"\";\n\t\t}\n\n\t\t/* Ensure that vhKeys are part of the columnDefs, otherwise it is not considered in $select (BCP 2270141154) */\n\t\tfor (const vhKey of vhKeys) {\n\t\t\tif (columnNotAlreadyDefined(columnDefs, vhKey)) {\n\t\t\t\tconst columnDef: ColumnDef = {\n\t\t\t\t\tpath: vhKey,\n\t\t\t\t\t$Type: metaModelVH.getObject(`/${annotationValueListType.CollectionPath}/${path.key}`)?.$Type,\n\t\t\t\t\tlabel: \"\",\n\t\t\t\t\tsortable: false,\n\t\t\t\t\tfilterable: undefined\n\t\t\t\t};\n\t\t\t\tcolumnDefs.push(columnDef);\n\t\t\t}\n\t\t}\n\n\t\tconst valuelistInfo: ValueListInfo = {\n\t\t\tkeyPath: path.key,\n\t\t\tdescriptionPath: path.descriptionPath,\n\t\t\tfieldPropertyPath: path.fieldPropertyPath,\n\t\t\tvhKeys: vhKeys,\n\t\t\tvhParameters: vhParameters,\n\t\t\tvalueListInfo: annotationValueListType,\n\t\t\tcolumnDefs: columnDefs,\n\t\t\tvalueHelpQualifier\n\t\t};\n\t\treturn valuelistInfo;\n\t},\n\n\t_logError: function (propertyPath: string, error?: unknown): void {\n\t\tconst status = error ? (error as XMLHttpRequest).status : undefined;\n\t\tconst message = error instanceof Error ? error.message : String(error);\n\t\tconst msg = status === 404 ? `Metadata not found (${status}) for value help of property ${propertyPath}` : message;\n\n\t\tLog.error(msg);\n\t},\n\t/**\n\t * Method to compute the value list infos based on the value list annotations before using them at templating.\n\t * @param valueHelp\n\t * @param propertyPath\n\t * @param payload\n\t * @param metaModel\n\t * @returns The value list infos\n\t */\n\tgetValueListInfo: async function (\n\t\tvalueHelp: ValueHelp | undefined,\n\t\tpropertyPath: string,\n\t\tpayload: ValueHelpPayload | undefined,\n\t\tmetaModel: ODataMetaModel\n\t): Promise<ValueListInfo[]> {\n\t\tconst bindingContext = valueHelp?.getBindingContext() as Context | undefined,\n\t\t\tconditionModel = payload?.conditionModel,\n\t\t\tvalueListInfos: ValueListInfo[] = [],\n\t\t\tpropertyPathParts = propertyPath.split(\"/\");\n\t\ttry {\n\t\t\tconst valueListByQualifier = await metaModel.requestValueListInfo(propertyPath, true, bindingContext);\n\t\t\tconst valueHelpQualifiers = ValueListHelper.putDefaultQualifierFirst(Object.keys(valueListByQualifier)),\n\t\t\t\tpropertyName = propertyPathParts.pop();\n\n\t\t\tconst contextPrefix =\n\t\t\t\tpayload?.useMultiValueField === true ? ValueListHelper._getContextPrefix(bindingContext, propertyPathParts) : \"\";\n\n\t\t\tfor (const valueHelpQualifier of valueHelpQualifiers) {\n\t\t\t\t// Add column definitions for properties defined as Selection fields on the CollectionPath entity set.\n\t\t\t\tconst annotationValueListType = valueListByQualifier[valueHelpQualifier];\n\t\t\t\tconst metaModelVH = annotationValueListType.$model.getMetaModel(),\n\t\t\t\t\tentitySetPath = `/${annotationValueListType.CollectionPath}`;\n\t\t\t\tconst entityType = await ValueListHelper._getEntityType(metaModelVH, entitySetPath);\n\t\t\t\tconst valueListInfo = ValueListHelper._processParameters(\n\t\t\t\t\tannotationValueListType,\n\t\t\t\t\tpropertyName,\n\t\t\t\t\tconditionModel,\n\t\t\t\t\tvalueHelp,\n\t\t\t\t\tcontextPrefix,\n\t\t\t\t\tmetaModel,\n\t\t\t\t\tannotationValueListType.$qualifier ?? valueHelpQualifier, // for ValueListWithFixedValues, get the qualifier from $qualifier\n\t\t\t\t\tpayload,\n\t\t\t\t\tentityType\n\t\t\t\t);\n\t\t\t\t/* Only consistent value help definitions shall be part of the value help */\n\t\t\t\tif (valueListInfo) {\n\t\t\t\t\tvalueListInfos.push(valueListInfo);\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tthis._logError(propertyPath, err);\n\n\t\t\tValueListHelper.destroyVHContent(valueHelp);\n\t\t}\n\t\treturn valueListInfos;\n\t},\n\n\tALLFRAGMENTS: [] as {\n\t\tpath: string;\n\t\tfragmentName: string;\n\t\tfragment: unknown;\n\t}[],\n\tlogFragment: undefined as LogFragmentMethod | undefined,\n\n\t_logTemplatedFragments: function (propertyPath: string, fragmentName: string, fragmentDefinition: unknown): void {\n\t\tconst logInfo = {\n\t\t\tpath: propertyPath,\n\t\t\tfragmentName: fragmentName,\n\t\t\tfragment: fragmentDefinition\n\t\t};\n\t\tif (Log.getLevel() === Log.Level.DEBUG) {\n\t\t\t//In debug mode we log all generated fragments\n\t\t\tValueListHelper.ALLFRAGMENTS = ValueListHelper.ALLFRAGMENTS || [];\n\t\t\tValueListHelper.ALLFRAGMENTS.push(logInfo);\n\t\t}\n\t\tif (ValueListHelper.logFragment) {\n\t\t\t//One Tool Subscriber allowed\n\t\t\tsetTimeout(function () {\n\t\t\t\tValueListHelper.logFragment?.(logInfo);\n\t\t\t}, 0);\n\t\t}\n\t},\n\n\t_templateFragment: async function <T extends Table | MdcInnerTable | MdcFilterBar | ValueHelp>(\n\t\tfragmentName: string,\n\t\tvalueListInfo: ValueListInfo,\n\t\tsourceModel: JSONModel,\n\t\tpropertyPath: string,\n\t\tvalueHelp: ValueHelp\n\t): Promise<T> {\n\t\tconst containingView = CommonUtils.getTargetView(valueHelp);\n\t\tconst appComponent = CommonUtils.getAppComponent(CommonUtils.getTargetView(valueHelp));\n\n\t\tconst localValueListInfo = valueListInfo.valueListInfo,\n\t\t\tvalueListModel = new JSONModel(localValueListInfo),\n\t\t\tvalueListServiceMetaModel = localValueListInfo.$model.getMetaModel(),\n\t\t\tviewData = new JSONModel({\n\t\t\t\tconverterType: \"ListReport\",\n\t\t\t\tcolumns: valueListInfo.columnDefs || null\n\t\t\t});\n\n\t\tconst fragmentDefinition = await XMLPreprocessor.process(\n\t\t\tXMLTemplateProcessor.loadTemplate(fragmentName, \"fragment\"),\n\t\t\t{ name: fragmentName },\n\t\t\t{\n\t\t\t\tbindingContexts: {\n\t\t\t\t\tvalueList: valueListModel.createBindingContext(\"/\"),\n\t\t\t\t\tcontextPath: valueListServiceMetaModel.createBindingContext(`/${localValueListInfo.CollectionPath}/`),\n\t\t\t\t\tsource: sourceModel.createBindingContext(\"/\")\n\t\t\t\t},\n\t\t\t\tmodels: {\n\t\t\t\t\tvalueList: valueListModel,\n\t\t\t\t\tcontextPath: valueListServiceMetaModel,\n\t\t\t\t\tsource: sourceModel,\n\t\t\t\t\tmetaModel: valueListServiceMetaModel,\n\t\t\t\t\tviewData: viewData\n\t\t\t\t},\n\t\t\t\tappComponent\n\t\t\t}\n\t\t);\n\t\tValueListHelper._logTemplatedFragments(propertyPath, fragmentName, fragmentDefinition);\n\t\tconst templateComponent = containingView.getController()?.getOwnerComponent();\n\t\tif (templateComponent) {\n\t\t\treturn templateComponent.runAsOwner(async () => {\n\t\t\t\treturn (await Fragment.load({\n\t\t\t\t\tdefinition: fragmentDefinition,\n\t\t\t\t\tcontroller: containingView.getController()\n\t\t\t\t})) as T;\n\t\t\t});\n\t\t} else {\n\t\t\treturn (await Fragment.load({\n\t\t\t\tdefinition: fragmentDefinition,\n\t\t\t\tcontroller: containingView.getController()\n\t\t\t})) as T;\n\t\t}\n\t},\n\n\t_getContentId: function (valueHelpId: string, valueHelpQualifier: string, isTypeahead: boolean): string {\n\t\tconst contentType = isTypeahead ? \"Popover\" : \"Dialog\";\n\n\t\treturn `${valueHelpId}::${contentType}::qualifier::${valueHelpQualifier}`;\n\t},\n\n\t_addInOutParametersToPayload: function (payload: ValueHelpPayload, valueListInfo: ValueListInfo): void {\n\t\tconst valueHelpQualifier = valueListInfo.valueHelpQualifier;\n\n\t\tif (!payload.qualifiers) {\n\t\t\tpayload.qualifiers = {};\n\t\t}\n\n\t\tif (!payload.qualifiers[valueHelpQualifier]) {\n\t\t\tconst vhProperties = new Set<string>();\n\t\t\tvalueListInfo.columnDefs.forEach((column) => {\n\t\t\t\tif (!column.path.includes(\"*\")) {\n\t\t\t\t\t// In case of 1..n the condition path includes a * so we have to remove this\n\t\t\t\t\tvhProperties.add(column.path);\n\t\t\t\t}\n\t\t\t\tif (column.textPath) {\n\t\t\t\t\tvhProperties.add(column.textPath);\n\t\t\t\t}\n\t\t\t});\n\t\t\tpayload.qualifiers[valueHelpQualifier] = {\n\t\t\t\tvhKeys: valueListInfo.vhKeys,\n\t\t\t\tvhParameters: valueListInfo.vhParameters,\n\t\t\t\tvhProperties: Array.from(vhProperties)\n\t\t\t};\n\t\t}\n\t},\n\n\t_getValueHelpColumnDisplayFormat: function (\n\t\tpropertyAnnotations: AnnotationsForProperty,\n\t\tisValueHelpWithFixedValues: boolean\n\t): DisplayFormat {\n\t\tconst displayMode = CommonUtils.computeDisplayMode(propertyAnnotations, undefined),\n\t\t\ttextAnnotation = propertyAnnotations && propertyAnnotations[AnnotationText],\n\t\t\ttextArrangementAnnotation = textAnnotation && propertyAnnotations[AnnotationTextUITextArrangement];\n\n\t\tif (isValueHelpWithFixedValues) {\n\t\t\treturn textAnnotation && typeof textAnnotation !== \"string\" && textAnnotation.$Path ? displayMode : \"Value\";\n\t\t} else {\n\t\t\t// Only explicit defined TextArrangements in a Value Help with Dialog are considered\n\t\t\treturn textArrangementAnnotation ? displayMode : \"Value\";\n\t\t}\n\t},\n\n\t_getWidthInRem: function (control: Control, isUnitValueHelp: boolean): number {\n\t\tlet width = control.$().width(); // JQuery\n\t\tif (isUnitValueHelp && width) {\n\t\t\twidth = 0.3 * width;\n\t\t}\n\t\tconst floatWidth = width ? parseFloat(String(Rem.fromPx(width))) : 0;\n\n\t\treturn isNaN(floatWidth) ? 0 : floatWidth;\n\t},\n\n\t_getTableWidth: function (table: Table, minWidth: number, isMultiSelect: boolean): string {\n\t\tlet width: string;\n\t\tconst columns = table.getColumns(),\n\t\t\tvisibleColumns =\n\t\t\t\t(columns &&\n\t\t\t\t\tcolumns.filter(function (column) {\n\t\t\t\t\t\treturn column && column.getVisible && column.getVisible();\n\t\t\t\t\t})) ||\n\t\t\t\t[],\n\t\t\t// we add 1em for every column and 2.5em for a multiselect checkbox\n\t\t\tinitialSum = visibleColumns.length + (isMultiSelect ? 2.5 : 0),\n\t\t\tsumWidth = visibleColumns.reduce(function (sum, column) {\n\t\t\t\twidth = column.getWidth();\n\t\t\t\tif (width && width.endsWith(\"px\")) {\n\t\t\t\t\twidth = String(Rem.fromPx(width));\n\t\t\t\t}\n\t\t\t\tconst floatWidth = parseFloat(width);\n\n\t\t\t\treturn sum + (isNaN(floatWidth) ? 9 : floatWidth);\n\t\t\t}, initialSum);\n\t\treturn `${Math.max(sumWidth, minWidth)}em`;\n\t},\n\n\t/**\n\t * Constructs JSON Model with the properties for the value help dialog fragment where it is used as a source object.\n\t * @param valueListInfo Value list info\n\t * @param propertyPath The property path\n\t * @param content Content for which this fragment will be set\n\t * @param payload Value help payload\n\t * @returns JSONModel\n\t * @private\n\t */\n\t_getJSONModelForDialog: function (\n\t\tvalueListInfo: ValueListInfo,\n\t\tpropertyPath: string,\n\t\tcontent: MDCTable,\n\t\tpayload: ValueHelpPayload\n\t): JSONModel {\n\t\tconst isDropDownListe = false,\n\t\t\tisDialogTable = true,\n\t\t\tcolumnInfo = ValueListHelper.getColumnVisibilityInfo(valueListInfo.valueListInfo, propertyPath, isDropDownListe, isDialogTable);\n\n\t\treturn new JSONModel({\n\t\t\tid: content.getId(),\n\t\t\tgroupId: payload.requestGroupId,\n\t\t\tbSuggestion: false,\n\t\t\tcolumnInfo: columnInfo,\n\t\t\tvalueHelpWithFixedValues: isDropDownListe\n\t\t});\n\t},\n\n\t/**\n\t * Constructs JSON Model with the properties for the define condition value help fragment in the value help dialog where it is used as a source object.\n\t * @param valueListInfo Value list info\n\t * @param propertyPath The property path\n\t * @param content Content for which this fragment will be set\n\t * @param payload Value help payload\n\t * @param caseSensitive\n\t * @returns JSONModel\n\t * @private\n\t */\n\t_getJSONModelForCondition: function (\n\t\tvalueListInfo: ValueListInfo,\n\t\tpropertyPath: string,\n\t\tcontent: MDCTable,\n\t\tpayload: ValueHelpPayload,\n\t\tcaseSensitive: boolean\n\t): JSONModel {\n\t\tconst isDropDownListe = false,\n\t\t\tisDialogTable = false,\n\t\t\tcolumnInfo = ValueListHelper.getColumnVisibilityInfo(valueListInfo.valueListInfo, propertyPath, isDropDownListe, isDialogTable);\n\n\t\treturn new JSONModel({\n\t\t\tid: content.getId(),\n\t\t\tgroupId: payload.requestGroupId || undefined,\n\t\t\tbSuggestion: true,\n\t\t\tcolumnInfo: columnInfo,\n\t\t\tvalueHelpWithFixedValues: isDropDownListe,\n\t\t\tdescriptionPath: valueListInfo.descriptionPath,\n\t\t\tkeyPath: valueListInfo.keyPath,\n\t\t\tpropertyPath,\n\t\t\tcaseSensitive\n\t\t});\n\t},\n\n\t/**\n\t * Constructs JSON Model with the properties for the value help typeahead fragment where it is used as a source object.\n\t * @param valueListInfo Value list info\n\t * @param propertyPath The property path\n\t * @param content Content for which this fragment will be set\n\t * @param payload Value help payload\n\t * @param valueHelpWithFixedValues Specify is it dropdownlist or not\n\t * @returns JSONModel\n\t * @private\n\t */\n\t_getJSONModelForTypeahead: function (\n\t\tvalueListInfo: ValueListInfo,\n\t\tpropertyPath: string,\n\t\tcontent: MTable,\n\t\tpayload: ValueHelpPayload,\n\t\tvalueHelpWithFixedValues: boolean\n\t): JSONModel {\n\t\tconst isDialogTable = false,\n\t\t\tcontentId = content.getId(),\n\t\t\tcolumnInfo = ValueListHelper.getColumnVisibilityInfo(\n\t\t\t\tvalueListInfo.valueListInfo,\n\t\t\t\tpropertyPath,\n\t\t\t\tvalueHelpWithFixedValues,\n\t\t\t\tisDialogTable\n\t\t\t);\n\n\t\treturn new JSONModel({\n\t\t\tid: contentId,\n\t\t\tgroupId: payload.requestGroupId || undefined,\n\t\t\tbSuggestion: true,\n\t\t\tpropertyPath: propertyPath,\n\t\t\tcolumnInfo: columnInfo,\n\t\t\tvalueHelpWithFixedValues: valueHelpWithFixedValues\n\t\t});\n\t},\n\n\t_createValueHelpTypeahead: async function (\n\t\tpropertyPath: string,\n\t\tvalueHelp: ValueHelp,\n\t\tcontent: MTable,\n\t\tvalueListInfo: ValueListInfo,\n\t\tpayload: ValueHelpPayload,\n\t\tmetaModel: ODataMetaModel\n\t): Promise<void> {\n\t\tconst propertyAnnotations = metaModel.getObject(`${propertyPath}@`) as AnnotationsForProperty,\n\t\t\tvalueHelpWithFixedValues = propertyAnnotations[AnnotationValueListWithFixedValues] ?? false,\n\t\t\tsourceModel = this._getJSONModelForTypeahead(valueListInfo, propertyPath, content, payload, valueHelpWithFixedValues);\n\n\t\tcontent.setKeyPath(valueListInfo.keyPath);\n\t\tcontent.setDescriptionPath(valueListInfo.descriptionPath);\n\t\tpayload.isValueListWithFixedValues = valueHelpWithFixedValues;\n\t\tpayload.isPotentiallySensitive = payload.isPotentiallySensitive ?? propertyAnnotations[AnnotationsPersonalDataPotentiallySensitive];\n\t\tpayload.history = {\n\t\t\tenabled: this.checkHistoryEnabled(valueHelp, payload)\n\t\t};\n\n\t\tconst collectionAnnotations =\n\t\t\tvalueListInfo.valueListInfo.$model.getMetaModel().getObject(`/${valueListInfo.valueListInfo.CollectionPath}@`) || {};\n\n\t\tcontent.data(\"searchSupported\", ValueListHelper.entityIsSearchable(propertyAnnotations, collectionAnnotations) ? true : false);\n\n\t\tconst table = await ValueListHelper._templateFragment<Table>(\n\t\t\t\"sap.fe.macros.internal.valuehelp.ValueListTable\",\n\t\t\tvalueListInfo,\n\t\t\tsourceModel,\n\t\t\tpropertyPath,\n\t\t\tvalueHelp\n\t\t);\n\n\t\ttable.setModel(valueListInfo.valueListInfo.$model);\n\n\t\tLog.info(`Value List- suggest Table XML content created [${propertyPath}]`, table.getMetadata().getName(), \"MDC Templating\");\n\n\t\tcontent.setTable(table);\n\n\t\tconst field = valueHelp.getControl();\n\n\t\tif (\n\t\t\tfield !== undefined &&\n\t\t\t(field.isA<FilterField>(\"sap.ui.mdc.FilterField\") ||\n\t\t\t\tfield.isA<Field>(\"sap.ui.mdc.Field\") ||\n\t\t\t\t(field.isA<Field>(\"sap.ui.mdc.Field\") && valueHelpWithFixedValues) ||\n\t\t\t\tfield.isA<MultiValueField>(\"sap.ui.mdc.MultiValueField\"))\n\t\t) {\n\t\t\t//Can the filterfield be something else that we need the .isA() check?\n\t\t\tconst tableMode =\n\t\t\t\tvalueHelpWithFixedValues && (field as FieldBase).getMaxConditions() !== 1 ? \"MultiSelect\" : \"SingleSelectMaster\";\n\t\t\ttable.setMode(tableMode);\n\n\t\t\ttable.addEventDelegate({\n\t\t\t\tonAfterRendering: function () {\n\t\t\t\t\tResizeHandler.register(table, function () {\n\t\t\t\t\t\tValueListHelper._setTableWidth(table, field, tableMode, payload.isUnitValueHelp);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis._setTableWidth(table, field, tableMode, payload.isUnitValueHelp);\n\t\t}\n\t},\n\n\t_setTableWidth(table: Table, field: Control, tableMode: string, isUnitValueHelp?: boolean): void {\n\t\tconst reduceWidthForUnitValueHelp = Boolean(isUnitValueHelp);\n\t\tconst tableWidth = ValueListHelper._getTableWidth(\n\t\t\ttable,\n\t\t\tValueListHelper._getWidthInRem(field, reduceWidthForUnitValueHelp),\n\t\t\ttableMode === \"MultiSelect\"\n\t\t);\n\n\t\ttable.setWidth(tableWidth);\n\t},\n\n\t/**\n\t * Check if the history is enabled for a certain field.\n\t * @param valueHelp The value help instance\n\t * @param payload Value help payload\n\t * @returns True if the history is enabled, false otherwise\n\t */\n\tcheckHistoryEnabled: function (valueHelp: ValueHelp, payload: ValueHelpPayload): boolean {\n\t\tconst appComponent = CommonUtils.getAppComponent(CommonUtils.getTargetView(valueHelp));\n\t\tconst historySettings = appComponent.getManifestEntry(\"sap.fe\")?.historySettings;\n\t\treturn historySettings?.fields?.[payload.propertyPath]?.historyEnabled ?? true;\n\t},\n\n\tisValueListSearchable(propertyPath: string, valueList: ValueListInfo): boolean {\n\t\tconst valueListMetamodel = valueList.valueListInfo.$model.getMetaModel();\n\n\t\tconst propertyAnnotations = valueListMetamodel.getObject(`${propertyPath}@`) ?? {};\n\t\tconst collectionAnnotations = valueListMetamodel.getObject(`/${valueList.valueListInfo.CollectionPath}@`) ?? {};\n\t\treturn ValueListHelper.entityIsSearchable(propertyAnnotations, collectionAnnotations);\n\t},\n\n\t_createValueHelpDialog: async function (\n\t\tmetaModel: ODataMetaModel,\n\t\tpropertyPath: string,\n\t\tvalueHelp: ValueHelp,\n\t\tcontent: MDCTable,\n\t\tvalueListInfo: ValueListInfo,\n\t\tpayload: ValueHelpPayload,\n\t\tconditionContent?: Conditions\n\t): Promise<void> {\n\t\tconst propertyAnnotations = (valueHelp.getModel() as ODataModel)\n\t\t\t\t.getMetaModel()!\n\t\t\t\t.getObject(`${propertyPath}@`) as AnnotationsForProperty,\n\t\t\tsourceModelDialog = this._getJSONModelForDialog(valueListInfo, propertyPath, content, payload);\n\n\t\tcontent.setKeyPath(valueListInfo.keyPath);\n\t\tcontent.setDescriptionPath(valueListInfo.descriptionPath);\n\t\tconst collectionAnnotations =\n\t\t\tvalueListInfo.valueListInfo.$model.getMetaModel().getObject(`/${valueListInfo.valueListInfo.CollectionPath}@`) || {};\n\t\tcontent.data(\"searchSupported\", ValueListHelper.entityIsSearchable(propertyAnnotations, collectionAnnotations) ? true : false);\n\t\tpayload.isPotentiallySensitive = payload.isPotentiallySensitive ?? propertyAnnotations[AnnotationsPersonalDataPotentiallySensitive];\n\n\t\tif (conditionContent) {\n\t\t\tconst firstTypeAheadContent = valueHelp.getTypeahead().getContent()[0] as MTable,\n\t\t\t\tcaseSensitive = firstTypeAheadContent.getCaseSensitive();\n\n\t\t\tconst sourceModelCondition = this._getJSONModelForCondition(valueListInfo, propertyPath, content, payload, caseSensitive);\n\n\t\t\tconst condition = await ValueListHelper._templateFragment<ValueHelp>(\n\t\t\t\t\"sap.fe.macros.internal.valuehelp.ValueListForCondition\",\n\t\t\t\tvalueListInfo,\n\t\t\t\tsourceModelCondition,\n\t\t\t\tpropertyPath,\n\t\t\t\tvalueHelp\n\t\t\t);\n\t\t\t/* As the condition is not added to an aggregation, but just associated, we need to explicitly set the model */\n\t\t\tcondition.setModel(metaModel);\n\n\t\t\t/* Add as dependent, otherwise it will not be properly destroyed during lifecycle handling */\n\t\t\tconditionContent.addDependent(condition);\n\t\t\tconditionContent.setValueHelp(condition.getId());\n\n\t\t\tconst conditionTable = condition\n\t\t\t\t.getTypeahead()\n\t\t\t\t.getContent()[0] // there is only one table\n\t\t\t\t.getTable();\n\n\t\t\tconst tableWidth = ValueListHelper._getTableWidth(conditionTable, 0, false);\n\t\t\tconditionTable.setWidth(tableWidth);\n\t\t}\n\n\t\tconst tablePromise = ValueListHelper._templateFragment<MdcInnerTable>(\n\t\t\t\"sap.fe.macros.internal.valuehelp.ValueListDialogTable\",\n\t\t\tvalueListInfo,\n\t\t\tsourceModelDialog,\n\t\t\tpropertyPath,\n\t\t\tvalueHelp\n\t\t);\n\n\t\tconst filterBarPromise = ValueListHelper._templateFragment<FilterBar>(\n\t\t\t\"sap.fe.macros.internal.valuehelp.ValueListFilterBar\",\n\t\t\tvalueListInfo,\n\t\t\tsourceModelDialog,\n\t\t\tpropertyPath,\n\t\t\tvalueHelp\n\t\t);\n\n\t\tconst [table, filterBar] = await Promise.all([tablePromise, filterBarPromise]);\n\n\t\ttable.setModel(valueListInfo.valueListInfo.$model);\n\t\tfilterBar.setModel(valueListInfo.valueListInfo.$model);\n\n\t\tcontent.setFilterBar(filterBar);\n\t\tcontent.setTable(table);\n\n\t\ttable.setFilter(filterBar.getId());\n\t\ttable.initialized();\n\n\t\ttable.setWidth(\"100%\");\n\n\t\tValueListHelper.setCopyProviderVisibility(table, valueHelp);\n\n\t\t//This is a temporary workarround - provided by MDC (see FIORITECHP1-24002)\n\t\tconst mdcTable = table as unknown as { _setShowP13nButton: Function };\n\t\tmdcTable._setShowP13nButton(false);\n\t},\n\n\t/**\n\t * Set the visible attribute of the CopyProvider based on the MaxCondition of the field.\n\t * In case of a single selection, the copy button is hidden. In another case, it is visible.\n\t * @param table The MDC table of the Value Help dialog\n\t * @param valueHelp The Value Help object\n\t */\n\tsetCopyProviderVisibility: function (table: MdcInnerTable, valueHelp: ValueHelp): void {\n\t\tif (valueHelp.getControl()?.isA<FieldBase>(\"sap.ui.mdc.field.FieldBase\")) {\n\t\t\ttable.getCopyProvider()?.setVisible(true);\n\t\t}\n\t},\n\n\t_getContentById: function <T extends MTable | MDCTable>(contentList: Content[], contentId: string): T | undefined {\n\t\treturn contentList.find(function (item) {\n\t\t\treturn item.getId() === contentId;\n\t\t}) as T | undefined;\n\t},\n\n\t_createPopoverContent: function (contentId: string, caseSensitive: boolean, useAsValueHelp: boolean): MTable {\n\t\treturn new MTable({\n\t\t\tid: contentId,\n\t\t\tgroup: \"group1\",\n\t\t\tcaseSensitive: caseSensitive,\n\t\t\tuseAsValueHelp: useAsValueHelp\n\t\t} as $MTableSettings);\n\t},\n\n\t_createDialogContent: function (contentId: string, caseSensitive: boolean, forceBind: boolean): MDCTable {\n\t\treturn new MDCTable({\n\t\t\tid: contentId,\n\t\t\tgroup: \"group1\",\n\t\t\tcaseSensitive: caseSensitive,\n\t\t\tforceBind: forceBind\n\t\t} as $MDCTableSettings);\n\t},\n\n\t_showConditionsContent: function (contentList: Content[], container: Container): Conditions | undefined {\n\t\tlet conditionsContent =\n\t\t\tcontentList.length && contentList[contentList.length - 1].getMetadata().getName() === \"sap.ui.mdc.valuehelp.content.Conditions\"\n\t\t\t\t? (contentList[contentList.length - 1] as Conditions)\n\t\t\t\t: undefined;\n\n\t\tif (conditionsContent) {\n\t\t\tconditionsContent.setVisible(true);\n\t\t} else {\n\t\t\tconditionsContent = new Conditions();\n\t\t\tcontainer.addContent(conditionsContent);\n\t\t}\n\n\t\treturn conditionsContent;\n\t},\n\n\t_alignOrCreateContent: function (\n\t\tvalueListInfo: ValueListInfo,\n\t\tcontentId: string,\n\t\tcaseSensitive: boolean,\n\t\tshowConditionPanel: boolean,\n\t\tcontainer: Container\n\t): MDCTable {\n\t\tconst contentList = container.getContent();\n\t\tlet content = ValueListHelper._getContentById<MDCTable>(contentList, contentId);\n\n\t\tif (!content) {\n\t\t\tconst forceBind = valueListInfo.valueListInfo.FetchValues === 2 ? false : true;\n\n\t\t\tcontent = ValueListHelper._createDialogContent(contentId, caseSensitive, forceBind);\n\n\t\t\tif (!showConditionPanel) {\n\t\t\t\tcontainer.addContent(content);\n\t\t\t} else {\n\t\t\t\tcontainer.insertContent(content, contentList.length - 1); // insert content before conditions content\n\t\t\t}\n\t\t}\n\n\t\treturn content;\n\t},\n\n\t_prepareValueHelpTypeAhead: function (\n\t\tvalueHelp: ValueHelp,\n\t\tcontainer: Container,\n\t\tvalueListInfos: ValueListInfo[],\n\t\tpayload: ValueHelpPayload,\n\t\tcaseSensitive: boolean,\n\t\tfirstTypeAheadContent: MTable\n\t): { valueListInfo: ValueListInfo; content: MTable } {\n\t\tconst contentList = container.getContent();\n\t\tlet qualifierForTypeahead = valueHelp.data(\"valuelistForValidation\") || \"\"; // can also be null\n\t\tif (qualifierForTypeahead === \" \") {\n\t\t\tqualifierForTypeahead = \"\";\n\t\t}\n\t\tconst valueListInfo = qualifierForTypeahead // fallback if qualifier for Typeahead not exists\n\t\t\t? valueListInfos.filter(function (subValueListInfo) {\n\t\t\t\t\treturn subValueListInfo.valueHelpQualifier === qualifierForTypeahead;\n\t\t\t  })[0] || valueListInfos[0]\n\t\t\t: valueListInfos[0];\n\n\t\tValueListHelper._addInOutParametersToPayload(payload, valueListInfo);\n\n\t\tconst contentId = ValueListHelper._getContentId(valueHelp.getId(), valueListInfo.valueHelpQualifier, true);\n\t\tlet content = ValueListHelper._getContentById<MTable>(contentList, contentId);\n\n\t\tif (!content) {\n\t\t\tconst useAsValueHelp = firstTypeAheadContent.getUseAsValueHelp();\n\t\t\tcontent = ValueListHelper._createPopoverContent(contentId, caseSensitive, useAsValueHelp);\n\n\t\t\tcontainer.insertContent(content, 0); // insert content as first content\n\t\t} else if (contentId !== contentList[0].getId()) {\n\t\t\t// content already available but not as first content?\n\t\t\tcontainer.removeContent(content);\n\t\t\tcontainer.insertContent(content, 0); // move content to first position\n\t\t}\n\n\t\treturn { valueListInfo, content };\n\t},\n\n\t_prepareValueHelpDialog: function (\n\t\tvalueHelp: ValueHelp,\n\t\tcontainer: Container,\n\t\tvalueListInfos: ValueListInfo[],\n\t\tpayload: ValueHelpPayload,\n\t\tselectedContentId: string,\n\t\tcaseSensitive: boolean\n\t): {\n\t\tselectedInfo: ValueListInfo;\n\t\tselectedContent: MDCTable;\n\t\tconditionContent?: Conditions;\n\t} {\n\t\tconst showConditionPanel = valueHelp.data(\"showConditionPanel\") && valueHelp.data(\"showConditionPanel\") !== \"false\";\n\t\tconst contentList = container.getContent();\n\n\t\t// set all contents to invisible\n\t\tfor (const contentListItem of contentList) {\n\t\t\tcontentListItem.setVisible(false);\n\t\t}\n\n\t\tconst conditionContent = showConditionPanel ? this._showConditionsContent(contentList, container) : undefined;\n\t\tconst field = valueHelp.getControl();\n\n\t\t// For a FilterField we check the operators if they are default (empty list=all) or include EQ\n\t\tconst hasOperatorEQ =\n\t\t\tfield && field.isA<FilterField>(\"sap.ui.mdc.FilterField\")\n\t\t\t\t? field.getOperators().length === 0 || field.getOperators().includes(\"EQ\")\n\t\t\t\t: true;\n\n\t\tlet selectedInfo: ValueListInfo | undefined, selectedContent: MDCTable | undefined;\n\n\t\t// Create or reuse contents for the current context\n\t\tfor (const valueListInfo of valueListInfos) {\n\t\t\tconst valueHelpQualifier = valueListInfo.valueHelpQualifier;\n\n\t\t\tValueListHelper._addInOutParametersToPayload(payload, valueListInfo);\n\n\t\t\tconst contentId = ValueListHelper._getContentId(valueHelp.getId(), valueHelpQualifier, false);\n\n\t\t\tconst content = this._alignOrCreateContent(valueListInfo, contentId, caseSensitive, showConditionPanel, container);\n\t\t\tcontent.setVisible(hasOperatorEQ); // Do not show a value help table for a filter field without operator 'EQ'\n\n\t\t\tif (valueListInfo.valueListInfo.Label && field) {\n\t\t\t\tconst title = CommonUtils.getTranslatedTextFromExpBindingString(valueListInfo.valueListInfo.Label, field);\n\t\t\t\tcontent.setTitle(title);\n\t\t\t}\n\n\t\t\tif (!selectedContent || (selectedContentId && selectedContentId === contentId)) {\n\t\t\t\tselectedContent = content;\n\t\t\t\tselectedInfo = valueListInfo;\n\t\t\t}\n\t\t}\n\n\t\tif (!selectedInfo || !selectedContent) {\n\t\t\tthrow new Error(\"selectedInfo or selectedContent undefined\");\n\t\t}\n\n\t\treturn { selectedInfo, selectedContent, conditionContent };\n\t},\n\n\t_addDescriptionInfosToPayload: function (payload: ValueHelpPayload, valueListInfo: ValueListInfo, metaModel: ODataMetaModel): void {\n\t\tif (payload.valueHelpDescriptionPath !== valueListInfo.descriptionPath || payload.externalIdPath) {\n\t\t\tconst convertedMetadata = convertTypes(metaModel);\n\t\t\tconst propertyDescriptionPath = (\n\t\t\t\tconvertedMetadata.resolvePath<Property>(payload.propertyPath).target?.annotations?.Common\n\t\t\t\t\t?.Text as unknown as PathAnnotationExpression<string>\n\t\t\t)?.path;\n\n\t\t\t/* Enrich payload with Text Property Infos */\n\t\t\tpayload.valueHelpDescriptionPath = valueListInfo.descriptionPath;\n\t\t\tpayload.valueHelpKeyPath = valueListInfo.keyPath;\n\t\t\tif (propertyDescriptionPath) {\n\t\t\t\tpayload.maxLength = payload.valueHelpDescriptionPath\n\t\t\t\t\t? convertedMetadata.resolvePath<Property>(\n\t\t\t\t\t\t\t`/${valueListInfo.valueListInfo.CollectionPath}/${payload.valueHelpDescriptionPath}`\n\t\t\t\t\t  )?.target?.maxLength\n\t\t\t\t\t: undefined;\n\t\t\t\tpayload.propertyDescriptionPath = propertyDescriptionPath;\n\t\t\t}\n\n\t\t\t/* EXTERNALID */\n\t\t\t// Add descriptionPath to the payload and valueListInfo\n\t\t\tconst externalIdPath = payload.externalIdPath;\n\t\t\tif (externalIdPath && !payload.valueHelpDescriptionPath) {\n\t\t\t\tconst propertyName = metaModel.getObject(`${payload.propertyPath}@sapui.name`);\n\t\t\t\tconst externalIdFullPath = payload.propertyPath.replace(propertyName, externalIdPath);\n\t\t\t\tconst descriptionPath = (\n\t\t\t\t\tconvertedMetadata.resolvePath<Property>(externalIdFullPath).target?.annotations?.Common\n\t\t\t\t\t\t?.Text as unknown as PathAnnotationExpression<string>\n\t\t\t\t)?.path;\n\t\t\t\tvalueListInfo.descriptionPath = descriptionPath;\n\t\t\t\tpayload.valueHelpDescriptionPath = descriptionPath;\n\t\t\t}\n\t\t}\n\t},\n\n\tshowValueList: async function (payload: ValueHelpPayload, container: Container, selectedContentId: string): Promise<void> {\n\t\tconst valueHelp = container.getParent() as ValueHelp,\n\t\t\tisTypeahead = container.isTypeahead(),\n\t\t\tpropertyPath = payload.propertyPath,\n\t\t\t/* In case of RAP the valueHelp model is different to the control model */\n\t\t\tcontrol = valueHelp.getControl(),\n\t\t\tmetaModel = control\n\t\t\t\t? (valueHelp.getControl()?.getModel() as ODataModel).getMetaModel()\n\t\t\t\t: (valueHelp.getModel() as ODataModel).getMetaModel(),\n\t\t\tvhUIModel =\n\t\t\t\tvalueHelp.getModel(\"_VHUI\") !== undefined\n\t\t\t\t\t? (valueHelp.getModel(\"_VHUI\") as JSONModel)\n\t\t\t\t\t: ValueListHelper.createVHUIModel(valueHelp, propertyPath, metaModel);\n\t\t/* EXTERNALID */\n\t\tpayload.externalIdPath = metaModel?.getObject(`${payload.propertyPath}@com.sap.vocabularies.Common.v1.ExternalID`)?.$Path;\n\n\t\tvhUIModel.setProperty(\"/isSuggestion\", isTypeahead);\n\t\tvhUIModel.setProperty(\"/minScreenWidth\", !isTypeahead ? \"418px\" : undefined);\n\n\t\ttry {\n\t\t\tconst valueListInfos = await ValueListHelper.getValueListInfo(valueHelp, propertyPath, payload, metaModel);\n\t\t\tconst firstTypeAheadContent = valueHelp.getTypeahead().getContent()[0] as MTable,\n\t\t\t\tcaseSensitive = firstTypeAheadContent.getCaseSensitive(); // take caseSensitive from first Typeahead content\n\n\t\t\tif (isTypeahead) {\n\t\t\t\tconst { valueListInfo, content } = ValueListHelper._prepareValueHelpTypeAhead(\n\t\t\t\t\tvalueHelp,\n\t\t\t\t\tcontainer,\n\t\t\t\t\tvalueListInfos,\n\t\t\t\t\tpayload,\n\t\t\t\t\tcaseSensitive,\n\t\t\t\t\tfirstTypeAheadContent\n\t\t\t\t);\n\n\t\t\t\tpayload.valueHelpQualifier = valueListInfo.valueHelpQualifier;\n\t\t\t\tvhUIModel.setProperty(\n\t\t\t\t\t\"/selectedProperties\",\n\t\t\t\t\tvalueListInfo.columnDefs.map((col) => col.path)\n\t\t\t\t);\n\t\t\t\tValueListHelper._addDescriptionInfosToPayload(payload, valueListInfo, metaModel);\n\n\t\t\t\tif (content.getTable() === undefined || content.getTable() === null) {\n\t\t\t\t\tawait ValueListHelper._createValueHelpTypeahead(propertyPath, valueHelp, content, valueListInfo, payload, metaModel);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst { selectedInfo, selectedContent, conditionContent } = ValueListHelper._prepareValueHelpDialog(\n\t\t\t\t\tvalueHelp,\n\t\t\t\t\tcontainer,\n\t\t\t\t\tvalueListInfos,\n\t\t\t\t\tpayload,\n\t\t\t\t\tselectedContentId,\n\t\t\t\t\tcaseSensitive\n\t\t\t\t);\n\n\t\t\t\tpayload.valueHelpQualifier = selectedInfo.valueHelpQualifier;\n\t\t\t\tValueListHelper._addDescriptionInfosToPayload(payload, selectedInfo, metaModel);\n\n\t\t\t\t/* For context depentent value helps the value list label is used for the dialog title */\n\t\t\t\tconst field = valueHelp.getControl();\n\t\t\t\tif (field) {\n\t\t\t\t\tconst title = CommonUtils.getTranslatedTextFromExpBindingString(\n\t\t\t\t\t\tValueListHelper._getDialogTitle(valueHelp, selectedInfo.valueListInfo?.Label),\n\t\t\t\t\t\tfield\n\t\t\t\t\t);\n\t\t\t\t\tcontainer.setTitle(title);\n\t\t\t\t}\n\n\t\t\t\tif (selectedContent.getTable() === undefined || selectedContent.getTable() === null) {\n\t\t\t\t\tawait ValueListHelper._createValueHelpDialog(\n\t\t\t\t\t\tmetaModel,\n\t\t\t\t\t\tpropertyPath,\n\t\t\t\t\t\tvalueHelp,\n\t\t\t\t\t\tselectedContent,\n\t\t\t\t\t\tselectedInfo,\n\t\t\t\t\t\tpayload,\n\t\t\t\t\t\tconditionContent\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tthis._logError(propertyPath, err);\n\t\t\tValueListHelper.destroyVHContent(valueHelp);\n\t\t}\n\t},\n\n\tgetInAndOutParametersList(): CommonAnnotationTypes[] {\n\t\treturn [\n\t\t\tCommonAnnotationTypes.ValueListParameterOut,\n\t\t\tCommonAnnotationTypes.ValueListParameterIn,\n\t\t\tCommonAnnotationTypes.ValueListParameterInOut\n\t\t];\n\t}\n};\n\nexport default ValueListHelper;\n"],"mappings":"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","ignoreList":[]}