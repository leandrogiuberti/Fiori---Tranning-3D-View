{"version":3,"file":"ValueHelpTemplating.js","names":["getValueHelpTableDisplayMode","propertyPath","isValueHelpWithFixedValues","sDisplayMode","getDisplayMode","oTextAnnotation","targetObject","annotations","Common","Text","oTextArrangementAnnotation","UI","TextArrangement","toString","isPathAnnotationExpression","path","_exports","getDelegateConfiguration","conditionModelName","originalPropertyPath","requestGroupId","useMultiValueField","arguments","length","undefined","isUnitValueHelp","delegateConfiguration","name","payload","conditionModel","qualifiers","valueHelpQualifier","getDelegateConfigurationForDefineConditions","isDefineConditionValueHelp","compileExpression","generateID","sFlexId","sIdPrefix","sEntityType","sOriginalPropertyName","sPropertyName","hasValidation","sProperty","generate","requiresValidation","target","hasValueHelpWithFixedValues","hasValueListForValidation","hasValueHelp","isUnit","isCurrency","isGuid","useCaseSensitiveFilterRequests","oDataModelPath","aEntityContainerFilterFunctions","filterFunctions","targetEntitySet","Capabilities","FilterFunctions","ModelHelper","isFilteringCaseSensitive","isSemanticDateRange","targetProperty","targetRestrictions","checkFilterExpressionRestrictions","hasDateType","shouldShowConditionPanel","oContextPath","contextLocation","getColumnDataProperty","sValueListProperty","textAnnotation","valueOf","getColumnDataPropertyType","valueListPropertyType","textArrangement","getColumnHAlign","property","propertyType","isProperty","type","isSemanticKey","FieldHelper","getPropertyAlignment","textAlignMode","getGrowingFormatter","formatResult","pathInModel","constant","additionalValueFormatter","getGrowing","getValueHelpTemplate","metaPath","vhContent","dataModelObjectPath","getInvolvedDataModelObjects","contextPath","originalProperty","enhanceDataModelPath","valueHelpId","_flexId","idPrefix","filterFieldValueHelp","targetEntityType","getTargetObjectPath","UI5Element","getElementById","dialogTitle","getLabel","shouldValidateInput","showConditionPanel","equal","valueHelpDelegateConfiguration","shouldUseCaseSensitiveFilter","map","str","isValueListForValidation","isValueListWithFixedValues","customData","_jsx","CustomData","value","push","getExpressionFromAnnotation","ValueListForValidation","ValueHelp","delegate","id","validateInput","children","typeahead","Popover","MTable","caseSensitive","useAsValueHelp","dialog","Dialog","title","Conditions"],"sources":["./ValueHelpTemplating.tsx"],"sourcesContent":["import type { ActionParameter, EntitySet, Property, PropertyAnnotationValue } from \"@sap-ux/vocabularies-types\";\nimport type { CompiledBindingToolkitExpression } from \"sap/fe/base/BindingToolkit\";\nimport { compileExpression, constant, equal, formatResult, getExpressionFromAnnotation, pathInModel } from \"sap/fe/base/BindingToolkit\";\nimport { generate } from \"sap/fe/core/helpers/StableIdHelper\";\nimport { isPathAnnotationExpression, isProperty } from \"sap/fe/core/helpers/TypeGuards\";\nimport type { DataModelObjectPath } from \"sap/fe/core/templating/DataModelPathHelper\";\nimport { checkFilterExpressionRestrictions, enhanceDataModelPath, getTargetObjectPath } from \"sap/fe/core/templating/DataModelPathHelper\";\nimport {\n\tgetLabel,\n\thasDateType,\n\thasValueHelp,\n\thasValueHelpWithFixedValues,\n\thasValueListForValidation,\n\tisCurrency,\n\tisGuid,\n\tisSemanticKey,\n\tisUnit\n} from \"sap/fe/core/templating/PropertyHelper\";\nimport { getDisplayMode } from \"sap/fe/core/templating/UIFormatters\";\nimport FieldHelper from \"sap/fe/macros/field/FieldHelper\";\n\nimport type { FilterFunctions } from \"@sap-ux/vocabularies-types/vocabularies/Capabilities\";\nimport type { StrictPropertiesOf } from \"sap/fe/base/ClassSupport\";\nimport { getInvolvedDataModelObjects } from \"sap/fe/core/converters/MetaModelConverter\";\nimport type { PageContextPathTarget } from \"sap/fe/core/converters/TemplateConverter\";\nimport ModelHelper from \"sap/fe/core/helpers/ModelHelper\";\nimport type ValueHelpBlock from \"sap/fe/macros/ValueHelp\";\nimport additionalValueFormatter from \"sap/fe/macros/internal/valuehelp/AdditionalValueFormatter\";\nimport type { ValueHelpPayload } from \"sap/fe/macros/internal/valuehelp/ValueListHelper\";\nimport type Control from \"sap/ui/core/Control\";\nimport CustomData from \"sap/ui/core/CustomData\";\nimport UI5Element from \"sap/ui/core/Element\";\nimport ValueHelp from \"sap/ui/mdc/ValueHelp\";\nimport Dialog from \"sap/ui/mdc/valuehelp/Dialog\";\nimport Popover from \"sap/ui/mdc/valuehelp/Popover\";\nimport Conditions from \"sap/ui/mdc/valuehelp/content/Conditions\";\nimport MTable from \"sap/ui/mdc/valuehelp/content/MTable\";\nimport type Context from \"sap/ui/model/Context\";\n\n/**\n * Retrieve the displayMode for the value help.\n * The main rule is that if a property is used in a VHTable, then we don't want to display the text arrangement directly.\n * @param propertyPath The current property\n * @param isValueHelpWithFixedValues The value help is a drop-down list\n * @returns The target displayMode\n */\nexport const getValueHelpTableDisplayMode = function (\n\tpropertyPath: DataModelObjectPath<Property>,\n\tisValueHelpWithFixedValues: boolean\n): string {\n\tconst sDisplayMode = getDisplayMode(propertyPath);\n\tconst oTextAnnotation = propertyPath.targetObject?.annotations?.Common?.Text;\n\tconst oTextArrangementAnnotation = typeof oTextAnnotation !== \"string\" && oTextAnnotation?.annotations?.UI?.TextArrangement?.toString();\n\tif (isValueHelpWithFixedValues) {\n\t\treturn oTextAnnotation && isPathAnnotationExpression(oTextAnnotation) && oTextAnnotation.path ? sDisplayMode : \"Value\";\n\t} else {\n\t\t// Only explicit defined TextArrangements in a Value Help with Dialog are considered\n\t\treturn oTextArrangementAnnotation ? sDisplayMode : \"Value\";\n\t}\n};\n\n/**\n * Method to return delegate property of Value Help.\n * @param propertyPath The current property path\n * @param conditionModelName Condition model of the Value Help\n * @param originalPropertyPath The original property path\n * @param requestGroupId The requestGroupId to use for requests\n * @param useMultiValueField If true the value help is for a multi value Field\n * @returns The expression needed to configure the delegate\n */\nexport const getDelegateConfiguration = function (\n\tpropertyPath: string,\n\tconditionModelName: string,\n\toriginalPropertyPath: string,\n\trequestGroupId?: string,\n\tuseMultiValueField = false\n): { name: string; payload: ValueHelpPayload } | string {\n\tconst isUnitValueHelp = propertyPath !== originalPropertyPath;\n\tconst delegateConfiguration: { name: string; payload: ValueHelpPayload } = {\n\t\tname: \"sap/fe/macros/valuehelp/ValueHelpDelegate\",\n\t\tpayload: {\n\t\t\tpropertyPath,\n\t\t\tisUnitValueHelp,\n\t\t\tconditionModel: conditionModelName,\n\t\t\trequestGroupId,\n\t\t\tuseMultiValueField,\n\t\t\tqualifiers: {},\n\t\t\tvalueHelpQualifier: \"\"\n\t\t}\n\t};\n\treturn delegateConfiguration; // for some reason \"qualifiers: {}\" is ignored here\n};\n\n/**\n * Method to return delegate property of Value Help for define conditions panel.\n * @param propertyPath The current property path\n * @returns The expression needed to configure the delegate\n */\nexport const getDelegateConfigurationForDefineConditions = function (propertyPath: string): CompiledBindingToolkitExpression {\n\tconst delegateConfiguration: { name: string; payload: ValueHelpPayload } = {\n\t\tname: \"sap/fe/macros/valuehelp/ValueHelpDelegate\",\n\t\tpayload: {\n\t\t\tpropertyPath,\n\t\t\tisDefineConditionValueHelp: true,\n\t\t\tqualifiers: {},\n\t\t\tvalueHelpQualifier: \"\"\n\t\t}\n\t};\n\treturn compileExpression(delegateConfiguration);\n};\n\n/**\n * Method to generate the ID for Value Help.\n * @param sFlexId Flex ID of the current object\n * @param sIdPrefix Prefix for the ValueHelp ID\n * @param sEntityType Name of the EntityType\n * @param sOriginalPropertyName Name of the property\n * @param sPropertyName Name of the ValueHelp Property\n * @returns The Id generated for the ValueHelp\n */\nexport const generateID = function (\n\tsFlexId: string | undefined,\n\tsIdPrefix: string | undefined,\n\tsEntityType: string | undefined,\n\tsOriginalPropertyName: string,\n\tsPropertyName: string,\n\thasValidation = false\n): string {\n\tif (sFlexId) {\n\t\treturn sFlexId;\n\t}\n\tlet sProperty = sPropertyName;\n\tif (sOriginalPropertyName !== sPropertyName) {\n\t\tsProperty = `${sOriginalPropertyName}::${sPropertyName}`;\n\t}\n\tif (hasValidation) {\n\t\tsProperty += \"::withValidation\";\n\t}\n\treturn generate([sIdPrefix, sEntityType, sProperty]);\n};\n\n/**\n * Method to check if a property needs to be validated or not when used in the valuehelp.\n * @param target ValueHelp property type annotations\n * @returns `true` if the value help needs to be validated\n */\nexport const requiresValidation = function (target: Property | ActionParameter): boolean {\n\treturn (\n\t\thasValueHelpWithFixedValues(target) ||\n\t\thasValueListForValidation(target) ||\n\t\t(hasValueHelp(target) && (isUnit(target) || isCurrency(target) || isGuid(target)))\n\t);\n};\n\n/**\n * Method to decide if case-sensitive filter requests are to be used or not.\n *\n * If the back end has FilterFunctions Capabilies for the service or the entity, we check it includes support for tolower.\n * @param oDataModelPath Current data model pathÂ·\n * @param aEntityContainerFilterFunctions Filter functions of entity container\n * @returns `true` if the entity set or service supports case sensitive filter requests\n */\nexport const useCaseSensitiveFilterRequests = function (\n\toDataModelPath: DataModelObjectPath<Property | ActionParameter>,\n\taEntityContainerFilterFunctions: string[]\n): boolean {\n\tconst filterFunctions =\n\t\t((oDataModelPath?.targetEntitySet as EntitySet)?.annotations?.Capabilities?.FilterFunctions as FilterFunctions) ||\n\t\taEntityContainerFilterFunctions;\n\treturn ModelHelper.isFilteringCaseSensitive(undefined, filterFunctions);\n};\n\nexport const isSemanticDateRange = function (oDataModelPath: DataModelObjectPath<Property>): CompiledBindingToolkitExpression | false {\n\tconst targetProperty = oDataModelPath.targetObject;\n\tconst targetRestrictions = checkFilterExpressionRestrictions(oDataModelPath, [\"SingleRange\"]);\n\treturn targetProperty && hasDateType(targetProperty) && compileExpression(targetRestrictions);\n};\n\nexport const shouldShowConditionPanel = function (\n\toDataModelPath: DataModelObjectPath<Property>,\n\toContextPath: DataModelObjectPath<PageContextPathTarget>\n): boolean {\n\t// Force push the context path inside\n\toDataModelPath.contextLocation = oContextPath;\n\treturn compileExpression(checkFilterExpressionRestrictions(oDataModelPath, [\"SingleValue\", \"MultiValue\"])) === \"false\";\n};\n\nexport const getColumnDataProperty = function (sValueListProperty: string, propertyPath: DataModelObjectPath<Property>): string {\n\tconst textAnnotation = propertyPath?.targetObject?.annotations?.Common?.Text;\n\treturn textAnnotation?.annotations?.UI?.TextArrangement?.valueOf() === \"UI.TextArrangementType/TextOnly\" &&\n\t\tisPathAnnotationExpression(textAnnotation)\n\t\t? textAnnotation.path\n\t\t: sValueListProperty;\n};\n\nconst getColumnDataPropertyType = function (valueListPropertyType: string, propertyPath: DataModelObjectPath<Property>): string {\n\tconst textArrangement = propertyPath?.targetObject?.annotations?.Common?.Text?.annotations?.UI?.TextArrangement;\n\treturn textArrangement && textArrangement.valueOf() !== \"UI.TextArrangementType/TextSeparate\" ? \"Edm.String\" : valueListPropertyType;\n};\n\nexport const getColumnHAlign = function (propertyPath: DataModelObjectPath<Property>): CompiledBindingToolkitExpression {\n\tconst property = propertyPath.targetObject;\n\tconst propertyType = isProperty(property) ? getColumnDataPropertyType(property.type, propertyPath) : \"\";\n\n\treturn !propertyType || isSemanticKey(property, propertyPath)\n\t\t? \"Begin\"\n\t\t: FieldHelper.getPropertyAlignment(propertyType, { textAlignMode: \"Table\" });\n};\n/**\n *\n * @param  propertyPath PropertyPath of the Field\n * @returns Runtime formatter for growing and growingThreshold\n */\nexport const getGrowingFormatter = function (propertyPath: string): CompiledBindingToolkitExpression {\n\treturn compileExpression(\n\t\tformatResult([pathInModel(\"/recommendationsData\", \"internal\"), constant(propertyPath)], additionalValueFormatter.getGrowing)\n\t);\n};\n\nexport const getValueHelpTemplate = function (\n\tmetaPath: Context,\n\tvhContent: StrictPropertiesOf<Omit<ValueHelpBlock, \"contextPath\" | \"metaPath\" | \"ariaLabelledBy\">> & {\n\t\tmetaPath: Context;\n\t\tcontextPath: Context;\n\t}\n): string | Control | undefined {\n\tlet dataModelObjectPath = getInvolvedDataModelObjects<Property>(metaPath, vhContent.contextPath);\n\tlet originalProperty = getInvolvedDataModelObjects<Property>(vhContent.metaPath, vhContent.contextPath);\n\tif (isPathAnnotationExpression(originalProperty.targetObject)) {\n\t\toriginalProperty = enhanceDataModelPath(originalProperty, originalProperty.targetObject.path);\n\t}\n\tif (isPathAnnotationExpression(dataModelObjectPath.targetObject)) {\n\t\tdataModelObjectPath = enhanceDataModelPath(dataModelObjectPath, dataModelObjectPath.targetObject.path);\n\t}\n\tif (dataModelObjectPath.targetObject) {\n\t\tconst valueHelpId = generateID(\n\t\t\tvhContent._flexId,\n\t\t\tvhContent.idPrefix,\n\t\t\t!vhContent.filterFieldValueHelp ? originalProperty.targetEntityType.name : undefined,\n\t\t\tgetTargetObjectPath(originalProperty, true),\n\t\t\tgetTargetObjectPath(dataModelObjectPath, true),\n\t\t\tvhContent.requiresValidation === true\n\t\t);\n\t\tif (UI5Element.getElementById(valueHelpId)) {\n\t\t\treturn valueHelpId;\n\t\t}\n\t\tconst dialogTitle = getLabel(dataModelObjectPath.targetObject) || dataModelObjectPath.targetObject.name;\n\t\tif (hasValueHelp(dataModelObjectPath.targetObject)) {\n\t\t\tconst shouldValidateInput =\n\t\t\t\tvhContent.filterFieldValueHelp || vhContent.requiresValidation || requiresValidation(dataModelObjectPath.targetObject);\n\t\t\tconst showConditionPanel = vhContent.filterFieldValueHelp\n\t\t\t\t? equal(checkFilterExpressionRestrictions(dataModelObjectPath, [\"SingleValue\", \"MultiValue\"]), false)\n\t\t\t\t: false;\n\t\t\tconst valueHelpDelegateConfiguration = getDelegateConfiguration(\n\t\t\t\tgetTargetObjectPath(dataModelObjectPath),\n\t\t\t\tvhContent.conditionModel,\n\t\t\t\tgetTargetObjectPath(originalProperty),\n\t\t\t\tvhContent.requestGroupId,\n\t\t\t\tvhContent.useMultiValueField\n\t\t\t);\n\t\t\tconst shouldUseCaseSensitiveFilter = useCaseSensitiveFilterRequests(\n\t\t\t\tdataModelObjectPath,\n\t\t\t\t(dataModelObjectPath.targetEntitySet as EntitySet)?.annotations?.Capabilities?.FilterFunctions?.map((str) =>\n\t\t\t\t\tstr.toString()\n\t\t\t\t) ?? []\n\t\t\t);\n\t\t\tconst isValueListForValidation = hasValueListForValidation(dataModelObjectPath.targetObject);\n\t\t\tconst isValueListWithFixedValues = hasValueHelpWithFixedValues(dataModelObjectPath.targetObject);\n\t\t\tconst customData = [<CustomData key={\"showConditionPanel\"} value={showConditionPanel} />];\n\t\t\tif (isValueListForValidation) {\n\t\t\t\tcustomData.push(\n\t\t\t\t\t<CustomData\n\t\t\t\t\t\tkey={\"valuelistForValidation\"}\n\t\t\t\t\t\tvalue={compileExpression(\n\t\t\t\t\t\t\tgetExpressionFromAnnotation(\n\t\t\t\t\t\t\t\tdataModelObjectPath.targetObject.annotations?.Common\n\t\t\t\t\t\t\t\t\t?.ValueListForValidation as unknown as PropertyAnnotationValue<string>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn (\n\t\t\t\t<ValueHelp delegate={valueHelpDelegateConfiguration} id={valueHelpId} validateInput={shouldValidateInput}>\n\t\t\t\t\t{{\n\t\t\t\t\t\tcustomData: customData,\n\t\t\t\t\t\ttypeahead: (\n\t\t\t\t\t\t\t<Popover>\n\t\t\t\t\t\t\t\t<MTable\n\t\t\t\t\t\t\t\t\tid={`${valueHelpId}::Popover::qualifier::`}\n\t\t\t\t\t\t\t\t\tcaseSensitive={shouldUseCaseSensitiveFilter}\n\t\t\t\t\t\t\t\t\tuseAsValueHelp={hasValueHelpWithFixedValues(dataModelObjectPath.targetObject)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Popover>\n\t\t\t\t\t\t),\n\t\t\t\t\t\tdialog: !isValueListWithFixedValues ? <Dialog /> : undefined\n\t\t\t\t\t}}\n\t\t\t\t</ValueHelp>\n\t\t\t);\n\t\t} else if (vhContent.filterFieldValueHelp) {\n\t\t\treturn (\n\t\t\t\t<ValueHelp id={valueHelpId}>\n\t\t\t\t\t{{\n\t\t\t\t\t\tcustomData:\n\t\t\t\t\t\t\tvhContent.requestGroupId !== undefined\n\t\t\t\t\t\t\t\t? [<CustomData key={\"requestGroupId\"} value={vhContent.requestGroupId} />]\n\t\t\t\t\t\t\t\t: [],\n\t\t\t\t\t\tdialog: (\n\t\t\t\t\t\t\t<Dialog title={dialogTitle}>\n\t\t\t\t\t\t\t\t<Conditions />\n\t\t\t\t\t\t\t</Dialog>\n\t\t\t\t\t\t)\n\t\t\t\t\t}}\n\t\t\t\t</ValueHelp>\n\t\t\t);\n\t\t}\n\t}\n};\n"],"mappings":"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","ignoreList":[]}