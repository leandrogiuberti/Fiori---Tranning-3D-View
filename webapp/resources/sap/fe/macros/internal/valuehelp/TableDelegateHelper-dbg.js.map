{"version":3,"names":["isFilterableProperty","filterRestrictionsInfo","property","propertyPath","getPath","propertyInfo","hasOwnProperty","filterable","_exports","isSortableProperty","sortRestrictionsInfo","sortable","isProperty","name","path"],"sourceRoot":".","sources":["TableDelegateHelper.ts"],"sourcesContent":["/**\n * collection of helper functions from \"sap/fe/macros/internal/valuehelp/TableDelegate\"\n * set into helper file for easy test accsess\n */\n\nimport type { Property } from \"@sap-ux/vocabularies-types\";\nimport type { FilterRestrictionsInfoType, SortRestrictionsInfoType } from \"sap/fe/core/helpers/MetaModelFunction\";\nimport { isProperty } from \"sap/fe/core/helpers/TypeGuards\";\nimport type { MDCTablePropertyInfo } from \"sap/ui/mdc/Table\";\n\n/**\n * Identifies if the given property is filterable based on the sort restriction information.\n * @param filterRestrictionsInfo The filter restriction information from the restriction annotation.\n * @param property The target property.\n * @returns `true` if the given property is filterable.\n * @private\n */\nexport function isFilterableProperty(\n\tfilterRestrictionsInfo: FilterRestrictionsInfoType,\n\tproperty: MDCTablePropertyInfo | Property\n): boolean | undefined {\n\tconst propertyPath = getPath(property);\n\treturn propertyPath && filterRestrictionsInfo?.propertyInfo.hasOwnProperty(propertyPath)\n\t\t? filterRestrictionsInfo.propertyInfo[propertyPath].filterable\n\t\t: (property as MDCTablePropertyInfo).filterable ?? true;\n}\n\n/**\n * Identifies if the given property is sortable based on the sort restriction information.\n * @param sortRestrictionsInfo The sort restriction information from the restriction annotation.\n * @param property The target property.\n * @returns `true` if the given property is sortable.\n * @private\n */\nexport function isSortableProperty(\n\tsortRestrictionsInfo: SortRestrictionsInfoType,\n\tproperty: MDCTablePropertyInfo | Property\n): boolean | undefined {\n\tconst propertyPath = getPath(property);\n\treturn propertyPath && sortRestrictionsInfo.propertyInfo[propertyPath]\n\t\t? sortRestrictionsInfo.propertyInfo[propertyPath].sortable\n\t\t: (property as MDCTablePropertyInfo).sortable ?? true;\n}\n\n/**\n * Provides the property path of a given property or custom data from the ValueHelp.\n * @param property The target property or custom data from the ValueHelp.\n * @returns The property path.\n */\nexport function getPath(property: MDCTablePropertyInfo | Property): string | undefined {\n\treturn isProperty(property) ? property.name : property.path;\n}\n"],"mappings":";;;;;;;;;EAAA;AACA;AACA;AACA;EAOA;AACA;AACA;AACA;AACA;AACA;AACA;EACO,SAASA,oBAAoBA,CACnCC,sBAAkD,EAClDC,QAAyC,EACnB;IACtB,MAAMC,YAAY,GAAGC,OAAO,CAACF,QAAQ,CAAC;IACtC,OAAOC,YAAY,IAAIF,sBAAsB,EAAEI,YAAY,CAACC,cAAc,CAACH,YAAY,CAAC,GACrFF,sBAAsB,CAACI,YAAY,CAACF,YAAY,CAAC,CAACI,UAAU,GAC3DL,QAAQ,CAA0BK,UAAU,IAAI,IAAI;EACzD;;EAEA;AACA;AACA;AACA;AACA;AACA;AACA;EANAC,QAAA,CAAAR,oBAAA,GAAAA,oBAAA;EAOO,SAASS,kBAAkBA,CACjCC,oBAA8C,EAC9CR,QAAyC,EACnB;IACtB,MAAMC,YAAY,GAAGC,OAAO,CAACF,QAAQ,CAAC;IACtC,OAAOC,YAAY,IAAIO,oBAAoB,CAACL,YAAY,CAACF,YAAY,CAAC,GACnEO,oBAAoB,CAACL,YAAY,CAACF,YAAY,CAAC,CAACQ,QAAQ,GACvDT,QAAQ,CAA0BS,QAAQ,IAAI,IAAI;EACvD;;EAEA;AACA;AACA;AACA;AACA;EAJAH,QAAA,CAAAC,kBAAA,GAAAA,kBAAA;EAKO,SAASL,OAAOA,CAACF,QAAyC,EAAsB;IACtF,OAAOU,UAAU,CAACV,QAAQ,CAAC,GAAGA,QAAQ,CAACW,IAAI,GAAGX,QAAQ,CAACY,IAAI;EAC5D;EAACN,QAAA,CAAAJ,OAAA,GAAAA,OAAA;EAAA,OAAAI,QAAA;AAAA","ignoreList":[],"file":"TableDelegateHelper-dbg.js"}