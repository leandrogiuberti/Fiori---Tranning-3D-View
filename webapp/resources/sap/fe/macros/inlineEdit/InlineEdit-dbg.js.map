{"version":3,"names":["FieldGroupIdAction","InlineEdit","_dec","controllerExtensionHandler","_class","inlineEditState","_isInlineEditSource","_exports","_proto","prototype","setupMixin","baseClass","baseBeforeRendering","onBeforeRendering","baseMetadataAvailable","onMetadataAvailable","baseDestroy","destroy","call","inlineEditEnabled","addAriaAttributes","propertyInlineEditEnabled","getPageController","inlineEditFlow","isPropertyConsideredForInlineEdit","getInlineEditPropertyName","unbindProperty","hasInlineEdit","undefined","_inlineEditIndicator","InlineEditIndicator","visible","pressEdit","triggerInlineEdit","bind","_inlineEditFieldGroupId","attachEvent","event","closeInlineEditPopupMouseEvent","getParameter","editButton","attachBrowserEvent","getDomRef","contains","relatedTarget","closeInlineEditPopupNoEditMode","pressTabKey","pressShiftAndTabKey","getContent","getContentEdit","_inlineEditIndicatorPopup","Popup","inlineEditSaveFunction","triggerInlineEditSave","inlineEditDiscardFunction","triggerInlineEditDiscard","addDependent","CommandExecution","execute","enabled","command","setFollowOf","popupBehaviour","openInlineEditPopup","focusEvent","contentDisplay","keydownEvent","_event","fieldGroupIds","forEach","fieldGroupId","delayedCallToSave","isOpen","openInlineEditPopupForFocus","setInlineEditFocus","onDestroy","removeAllEditButtonAriaDescribedBy","getLabelControls","labelControl","addEditButtonAriaDescribedBy","getIdForLabel","getDomRefOfField","fieldWrapper","contentEdit","length","isA","fileUploader","currentField","overlappingElement","getOverlappingElement","close","popupInterval","setInterval","popupIntervallHandler","setPosition","Dock","EndTop","EndBottom","_source","document","elementFromPoint","getBoundingClientRect","x","width","y","height","overlappedElement","open","clearInterval","focusHandlingInlineEdit","potentialFocusOut","focusForward","focusedElement","findTabbable","skipChild","forward","element","focus","focusMeasureField","rootField","measureField","focusHandlingMeasureField","focusableElement","activeElement","getSaveButton","inlineEditKeydown","displayedField","key","preventDefault","shiftKey","pressTabKeyOnField","pressShiftTabKeyOnField","getElementById","getEditButton","getId","getDiscardButton","checkForMeasureField","checkForSemanticObject","toggleInlineEditFieldGroupId","action","shouldAdd","Add","Set","getFieldGroupIds","add","delete","setFieldGroupIds","Array","from","childrenControls","content","findAggregatedObjects","managedObject","control","childFieldGroupIds","editMode","readOnly","currentTarget","setWidth","targetproperty","getInlineEditProperty","annotations","Measures","Common","SemanticObject","getEditMode","closeInlineEditPopupEditMode","setEditMode","focusHandling","bindingContextPath","getBindingContext","getCanonicalPath","propertyFullyQualifiedName","startInlineEdit","hasPendingUserInput","Promise","resolve","setTimeout","inlineEditDiscard","inlineEditSave","inlineEditStart","inlineEditControls","propertiesForInlineEdit","bindingContextPathForInlineEdit","includes","uiModel","getModel","path","setProperty","isEditable","bindElement","model","invalidate","push","resetIndicatorPopup","inlineEditEnd","refreshDescription","refreshDescriptionIfNeeded","Remove","unbindElement","descriptionPath","getBinding","getPath","requestSideEffects","_applyDecoratedDescriptor","Object","getOwnPropertyDescriptor"],"sourceRoot":".","sources":["InlineEdit.ts"],"sourcesContent":["import type { Property } from \"@sap-ux/vocabularies-types\";\nimport { type EnhanceWithUI5 } from \"sap/fe/base/ClassSupport\";\nimport { controllerExtensionHandler } from \"sap/fe/base/HookSupport\";\nimport InlineEditIndicator from \"sap/fe/controls/inlineEdit/InlineEditIndicator\";\nimport CommandExecution from \"sap/fe/core/controls/CommandExecution\";\nimport type Field from \"sap/fe/macros/Field\";\nimport type FieldWrapper from \"sap/fe/macros/controls/FieldWrapper\";\nimport type Label from \"sap/m/Label\";\nimport type UI5Event from \"sap/ui/base/Event\";\nimport type ManagedObject from \"sap/ui/base/ManagedObject\";\nimport type Control from \"sap/ui/core/Control\";\nimport type { Control$ValidateFieldGroupEvent } from \"sap/ui/core/Control\";\nimport type UI5Element from \"sap/ui/core/Element\";\nimport Popup from \"sap/ui/core/Popup\";\nimport findTabbable from \"sap/ui/dom/findTabbable\";\nimport type { default as MdcField } from \"sap/ui/mdc/Field\";\nimport type JSONModel from \"sap/ui/model/json/JSONModel\";\nimport type Context from \"sap/ui/model/odata/v4/Context\";\nimport type FileWrapper from \"../controls/FileWrapper\";\n\nenum FieldGroupIdAction {\n\tAdd = \"Add\",\n\tRemove = \"Remove\"\n}\n\nexport default class InlineEdit {\n\tprivate inlineEditState: \"Editable\" | \"Display\" | \"Closed\" | \"VH\" = \"Closed\";\n\n\tprivate _inlineEditIndicator: EnhanceWithUI5<InlineEditIndicator> | undefined;\n\n\tprivate _inlineEditIndicatorPopup: Popup | undefined;\n\n\tprivate _source: Element | undefined;\n\n\tprivate _isInlineEditSource = false;\n\n\t/**\n\t * Mixin to enable inline edit on a control.\n\t * @param baseClass The class.\n\t */\n\tsetupMixin(baseClass: Function): void {\n\t\tconst baseBeforeRendering = baseClass.prototype.onBeforeRendering;\n\t\tconst baseMetadataAvailable = baseClass.prototype.onMetadataAvailable;\n\t\tconst baseDestroy = baseClass.prototype.destroy;\n\n\t\tbaseClass.prototype.onBeforeRendering = function (): void {\n\t\t\tbaseBeforeRendering?.call(this);\n\t\t\tif (this.inlineEditEnabled) {\n\t\t\t\tthis.addAriaAttributes();\n\t\t\t}\n\t\t};\n\n\t\tbaseClass.prototype.onMetadataAvailable = function (): void {\n\t\t\tbaseMetadataAvailable?.call(this);\n\t\t\tif (this.inlineEditEnabled) {\n\t\t\t\tconst propertyInlineEditEnabled = this.getPageController()?.inlineEditFlow.isPropertyConsideredForInlineEdit(\n\t\t\t\t\tthis.getInlineEditPropertyName() ?? \"\"\n\t\t\t\t);\n\t\t\t\tif (!propertyInlineEditEnabled) {\n\t\t\t\t\t//let's make sure we don't keep a binding unnecessarily\n\t\t\t\t\tthis.unbindProperty(\"hasInlineEdit\");\n\t\t\t\t\tthis.hasInlineEdit = undefined;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis._inlineEditIndicator = new InlineEditIndicator({\n\t\t\t\t\tvisible: true,\n\t\t\t\t\tpressEdit: this.triggerInlineEdit.bind(this)\n\t\t\t\t});\n\t\t\t\tthis._inlineEditFieldGroupId = \"InlineEdit\";\n\t\t\t\tthis._inlineEditIndicator.attachEvent(\"mouseout\", (event: UI5Event<{ relatedTarget: Element }>) => {\n\t\t\t\t\tthis.closeInlineEditPopupMouseEvent(event.getParameter(\"relatedTarget\"));\n\t\t\t\t});\n\t\t\t\tthis._inlineEditIndicator.editButton.attachBrowserEvent(\"blur\", (event: FocusEvent) => {\n\t\t\t\t\t// if focus is still on inline editable field the popup should not be closed\n\t\t\t\t\tif (!this.getDomRef()?.contains(event.relatedTarget)) {\n\t\t\t\t\t\tthis.closeInlineEditPopupNoEditMode();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tthis._inlineEditIndicator.attachEvent(\"pressTab\", () => {\n\t\t\t\t\tthis.pressTabKey();\n\t\t\t\t});\n\n\t\t\t\tthis._inlineEditIndicator.attachEvent(\"pressShiftTab\", () => {\n\t\t\t\t\tthis.pressShiftAndTabKey(this.getContent().getContentEdit()[0]);\n\t\t\t\t});\n\n\t\t\t\tthis._inlineEditIndicatorPopup = new Popup(this._inlineEditIndicator, false, false, false);\n\t\t\t\tconst inlineEditSaveFunction = this.triggerInlineEditSave.bind(this);\n\t\t\t\tconst inlineEditDiscardFunction = this.triggerInlineEditDiscard.bind(this);\n\t\t\t\tthis._inlineEditIndicator.addDependent(\n\t\t\t\t\tnew CommandExecution({\n\t\t\t\t\t\texecute: inlineEditSaveFunction,\n\t\t\t\t\t\tenabled: true,\n\t\t\t\t\t\tvisible: true,\n\t\t\t\t\t\tcommand: \"Save\"\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t\tthis._inlineEditIndicator.addDependent(\n\t\t\t\t\tnew CommandExecution({\n\t\t\t\t\t\texecute: inlineEditDiscardFunction,\n\t\t\t\t\t\tenabled: true,\n\t\t\t\t\t\tvisible: true,\n\t\t\t\t\t\tcommand: \"Cancel\"\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t\t// function to check following behaviour of popup\n\t\t\t\tthis._inlineEditIndicatorPopup.setFollowOf(() => {\n\t\t\t\t\tthis.popupBehaviour();\n\t\t\t\t});\n\t\t\t\tthis.attachBrowserEvent(\"dblclick\", this.triggerInlineEdit.bind(this));\n\t\t\t\tthis.attachBrowserEvent(\"mouseover\", this.openInlineEditPopup.bind(this));\n\t\t\t\tthis.attachBrowserEvent(\"mouseout\", (event: MouseEvent) => {\n\t\t\t\t\tthis.closeInlineEditPopupMouseEvent(event.relatedTarget as Element);\n\t\t\t\t});\n\t\t\t\tthis.attachBrowserEvent(\"focus\", (event: FocusEvent) => {\n\t\t\t\t\tthis.focusEvent(event, this.getContent().contentDisplay?.getDomRef());\n\t\t\t\t});\n\n\t\t\t\tthis.attachBrowserEvent(\"keydown\", (event: KeyboardEvent) => {\n\t\t\t\t\tthis.keydownEvent(event, this.getContent().contentDisplay?.getDomRef());\n\t\t\t\t});\n\n\t\t\t\tthis.attachEvent(\"validateFieldGroup\", (_event: Control$ValidateFieldGroupEvent) => {\n\t\t\t\t\tconst fieldGroupIds = _event.getParameter(\"fieldGroupIds\");\n\t\t\t\t\tfieldGroupIds?.forEach((fieldGroupId) => {\n\t\t\t\t\t\tif (fieldGroupId === \"InlineEdit\") {\n\t\t\t\t\t\t\tthis.getPageController()?.inlineEditFlow.delayedCallToSave();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\tthis.attachBrowserEvent(\"focusin\", (event: MouseEvent) => {\n\t\t\t\t\t// only goes into condition for currently editable fields, e.g. connected fields\n\t\t\t\t\tif (this.inlineEditState === \"Editable\" && !this._inlineEditIndicatorPopup.isOpen()) {\n\t\t\t\t\t\tthis.openInlineEditPopupForFocus(event);\n\t\t\t\t\t\tthis.setInlineEditFocus();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tbaseClass.prototype.onDestroy = function (): void {\n\t\t\tthis._inlineEditIndicator?.destroy();\n\t\t\tthis._inlineEditIndicatorPopup?.destroy();\n\t\t\tbaseDestroy?.call(this);\n\t\t};\n\t}\n\n\t/*\n\t * Adds aria attributes to the inline edit indicator.\n\t * @param this The current instance of the class.\n\t */\n\taddAriaAttributes(this: EnhanceWithUI5<Field> & InlineEdit): void {\n\t\tif (this._inlineEditIndicator) {\n\t\t\tthis._inlineEditIndicator.removeAllEditButtonAriaDescribedBy();\n\t\t\t// add the label controls of the field\n\t\t\tthis.getLabelControls().forEach((labelControl: Label) => {\n\t\t\t\tthis._inlineEditIndicator?.addEditButtonAriaDescribedBy(labelControl);\n\t\t\t});\n\t\t\t// add the field itself\n\t\t\tthis._inlineEditIndicator.addEditButtonAriaDescribedBy(this.getIdForLabel());\n\t\t}\n\t}\n\n\t/**\n\t * Retrieves the DOM reference of the field associated with the inline edit.\n\t * @returns The DOM reference of the field or null if not found.\n\t */\n\tgetDomRefOfField(this: EnhanceWithUI5<Field> & InlineEdit): Element | null {\n\t\tconst fieldWrapper = this.getContent() as FieldWrapper;\n\t\tif (fieldWrapper?.contentEdit?.length > 0 && fieldWrapper?.contentEdit[0]?.getDomRef()) {\n\t\t\treturn fieldWrapper.contentEdit[0].getDomRef();\n\t\t} else if (fieldWrapper?.contentDisplay && fieldWrapper.contentDisplay.getDomRef()) {\n\t\t\treturn fieldWrapper.contentDisplay.getDomRef();\n\t\t} else if (fieldWrapper?.isA(\"sap.fe.macros.controls.FileWrapper\")) {\n\t\t\treturn (fieldWrapper as FileWrapper).fileUploader.getDomRef();\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t * Determines the behavior of the inline edit popup relative to its associated field.\n\t */\n\tpopupBehaviour(this: EnhanceWithUI5<Field> & InlineEdit): void {\n\t\tconst currentField = this.getDomRefOfField();\n\t\tif (currentField) {\n\t\t\t// check if element is obscured by other section/element\n\t\t\tconst overlappingElement = this.getOverlappingElement(currentField);\n\t\t\t// If the element is obscured by another element/section, close it and set up an interval to check every 200 ms if it remains obscured\n\t\t\tif (overlappingElement !== currentField && !currentField.contains(overlappingElement)) {\n\t\t\t\tthis._inlineEditIndicatorPopup?.close();\n\t\t\t\t// only if it is editable, we set up the interval, otherwise we close the popup if it is obscured by another element\n\t\t\t\tif (this.inlineEditState === \"Editable\") {\n\t\t\t\t\tconst popupInterval = setInterval(() => {\n\t\t\t\t\t\tthis.popupIntervallHandler(currentField, popupInterval);\n\t\t\t\t\t}, 200);\n\t\t\t\t}\n\t\t\t\t// If the element is not blocked by another section/element, update its position to align with the element that has the Inline Edit\n\t\t\t} else {\n\t\t\t\tthis._inlineEditIndicatorPopup?.setPosition(Popup.Dock.EndTop, Popup.Dock.EndBottom, this._source, \"0 -4\");\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Retrieves the current element located at the lowest vertical point of the currentField.\n\t * If the currentField is overlapped, it returns the overlapping element instead.\n\t * @param currentField The field where the inline edit popup is opened.\n\t * @returns The element determined to be at the lowest vertical point of the current field.\n\t */\n\tgetOverlappingElement(currentField: Element): Element | null {\n\t\treturn document.elementFromPoint(\n\t\t\tcurrentField.getBoundingClientRect().x + currentField.getBoundingClientRect().width / 2,\n\t\t\t// We take a point in the middle of the field and 2/3 of the height to retrieve the overlappingElement\n\t\t\tcurrentField.getBoundingClientRect().y + 0.66 * currentField.getBoundingClientRect().height\n\t\t);\n\t}\n\n\t/**\n\t * Interval handler for managing the interval when the popup is overlapped by an element.\n\t * @param currentField The field where the inline edit popup is opened.\n\t * @param popupInterval The interval constant.\n\t */\n\tpopupIntervallHandler(this: EnhanceWithUI5<Field> & InlineEdit, currentField: Element, popupInterval: NodeJS.Timeout): void {\n\t\t// Check if element is still obscured by other section/element\n\t\tconst overlappedElement = this.getOverlappingElement(currentField);\n\t\tif (overlappedElement === currentField || currentField.contains(overlappedElement)) {\n\t\t\t// If element is visible again, open Popup\n\t\t\tthis._inlineEditIndicatorPopup?.open(0, Popup.Dock.EndTop, Popup.Dock.EndBottom, this);\n\t\t\tclearInterval(popupInterval);\n\t\t}\n\t}\n\n\t/**\n\t * Focus handler for inline edit.\n\t * @param potentialFocusOut Potential focus out. Applies for Shift + Tab on field and Tab on discard button.\n\t * @param focusForward If focus should be set forward or backward.\n\t */\n\tfocusHandlingInlineEdit(this: EnhanceWithUI5<Field> & InlineEdit, potentialFocusOut: boolean, focusForward?: boolean): void {\n\t\tconst focusedElement = findTabbable(this.getDomRef(), {\n\t\t\tskipChild: true,\n\t\t\tforward: focusForward\n\t\t});\n\t\tfocusedElement?.element.focus();\n\t\tthis._inlineEditIndicatorPopup?.close();\n\t\tif (potentialFocusOut) {\n\t\t\t// only closes the inline edit completely if the focus is not on the same inline edit anymore\n\t\t\t// connected fields won't be closed if switching focus between them\n\t\t\tif (this._isInlineEditSource) {\n\t\t\t\tthis.triggerInlineEditSave();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Sets the focus on the measure field of a field.\n\t */\n\tfocusMeasureField(this: EnhanceWithUI5<Field> & InlineEdit): void {\n\t\tconst rootField = findTabbable(this.getDomRef(), {\n\t\t\tskipChild: false,\n\t\t\tforward: true\n\t\t});\n\t\tconst measureField = findTabbable(rootField.element, {\n\t\t\tskipChild: true,\n\t\t\tforward: true\n\t\t});\n\t\tmeasureField?.element?.focus();\n\t}\n\n\t/**\n\t * Implement focus handling for fields with measure fields when navigating via tab or shift-tab within an inline editable field.\n\t * @param focusForward If focus should be set forward or backward.\n\t */\n\tfocusHandlingMeasureField(this: EnhanceWithUI5<Field> & InlineEdit, focusForward: boolean): void {\n\t\tconst focusableElement = findTabbable(document.activeElement, {\n\t\t\tskipChild: true,\n\t\t\tforward: focusForward\n\t\t});\n\t\t// Check if the next/previous focusable element is within the inline edit popup\n\t\tif (this.getDomRef()?.contains(focusableElement.element)) {\n\t\t\t// If it is, focus on the next/previous focusable element\n\t\t\tfocusableElement.element?.focus();\n\t\t}\n\n\t\t// If next element is outside of current inline editable field and focus is set forward, focus on the save button\n\t\telse if (focusForward) {\n\t\t\tthis._inlineEditIndicator?.getSaveButton().focus();\n\t\t}\n\t\t// If focus is set backward, focus on the previous focusable element\n\t\telse {\n\t\t\tfocusableElement.element?.focus();\n\t\t}\n\t}\n\n\t/**\n\t * Processes keydown events for the inline edit component, handling various scenarios, like Tab or Escape.\n\t * @param event The keydown event triggered within the inline edit.\n\t * @param displayedField DomRef of contentDisplay of the field.\n\t */\n\tinlineEditKeydown(this: EnhanceWithUI5<Field> & InlineEdit, event: KeyboardEvent, displayedField: HTMLElement): void {\n\t\tif (event.key === \"Escape\") {\n\t\t\tevent.preventDefault();\n\t\t\tthis.triggerInlineEditDiscard();\n\t\t} else if (event.key === \"Tab\" && !event.shiftKey) {\n\t\t\tevent.preventDefault();\n\t\t\tthis.pressTabKeyOnField(displayedField, event);\n\t\t} else if (event.key === \"Tab\" && event.shiftKey) {\n\t\t\tevent.preventDefault();\n\t\t\tthis.pressShiftTabKeyOnField(displayedField);\n\t\t}\n\t}\n\n\t/**\n\t * Handles the Tab key press event when focus is on the edit, save, or discard buttons.\n\t */\n\tpressTabKey(this: EnhanceWithUI5<Field> & InlineEdit): void {\n\t\tif (this._inlineEditIndicator) {\n\t\t\tswitch (document.activeElement) {\n\t\t\t\tcase document.getElementById(this._inlineEditIndicator?.getEditButton().getId()):\n\t\t\t\t\tthis.focusHandlingInlineEdit(false, true);\n\t\t\t\t\tbreak;\n\t\t\t\tcase document.getElementById(this._inlineEditIndicator?.getSaveButton().getId()):\n\t\t\t\t\tthis._inlineEditIndicator?.getDiscardButton().focus();\n\t\t\t\t\tbreak;\n\t\t\t\tcase document.getElementById(this._inlineEditIndicator?.getDiscardButton().getId()):\n\t\t\t\t\tthis.focusHandlingInlineEdit(true, true);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Handles the Tab key press event when focus is on the edit, save, or discard buttons.\n\t * @param rootField The element with inline editing enabled.\n\t */\n\tpressShiftAndTabKey(this: EnhanceWithUI5<Field> & InlineEdit, rootField: UI5Element): void {\n\t\tif (this._inlineEditIndicator) {\n\t\t\tswitch (document.activeElement) {\n\t\t\t\tcase document.getElementById(this._inlineEditIndicator?.getEditButton().getId()):\n\t\t\t\t\tthis.focusHandlingInlineEdit(false, false);\n\t\t\t\t\tbreak;\n\t\t\t\tcase document.getElementById(this._inlineEditIndicator?.getSaveButton().getId()):\n\t\t\t\t\tif (this.checkForMeasureField()) {\n\t\t\t\t\t\tthis.focusMeasureField();\n\t\t\t\t\t} else {\n\t\t\t\t\t\trootField.focus();\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase document.getElementById(this._inlineEditIndicator?.getDiscardButton().getId()):\n\t\t\t\t\tthis._inlineEditIndicator?.getSaveButton().focus();\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Focus handler for the Tab key on the field.\n\t * @param displayedField DomRef of contentDisplay of the field.\n\t * @param event Current keyboard event.\n\t */\n\tpressTabKeyOnField(this: EnhanceWithUI5<Field> & InlineEdit, displayedField: HTMLElement, event: KeyboardEvent): void {\n\t\t// Check that the focus of the field is on the contentDisplay\n\t\tif (document.activeElement === displayedField) {\n\t\t\tthis.openInlineEditPopup(event);\n\t\t\tthis._inlineEditIndicator?.getEditButton().focus();\n\t\t} else if (!this.checkForMeasureField()) {\n\t\t\tthis._inlineEditIndicator?.getSaveButton().focus();\n\t\t} else {\n\t\t\tthis.focusHandlingMeasureField(true);\n\t\t}\n\t}\n\n\t/**\n\t * Focus handler for the Tab + Shift key on the field.\n\t * @param displayedField DomRef of contentDisplay of the field.\n\t */\n\tpressShiftTabKeyOnField(this: EnhanceWithUI5<Field> & InlineEdit, displayedField: HTMLElement): void {\n\t\t// Check that the focus of the field is on the contentDisplay\n\t\tif (document.activeElement === displayedField) {\n\t\t\t// focus to the previous interactive element\n\t\t\tthis.focusHandlingInlineEdit(true, false);\n\t\t} else if (!this.checkForMeasureField()) {\n\t\t\tthis.focusHandlingInlineEdit(true, false);\n\t\t} else {\n\t\t\tthis.focusHandlingMeasureField(false);\n\t\t}\n\t}\n\n\t/**\n\t * Handles the focus event for the inline edit field.\n\t * @param event Focus event for the field\n\t * @param displayedField DomRef of contentDisplay of the field.\n\t */\n\tfocusEvent(this: EnhanceWithUI5<Field> & InlineEdit, event: FocusEvent, displayedField: HTMLElement): void {\n\t\tif (this.hasInlineEdit) {\n\t\t\tevent.preventDefault();\n\t\t\tif (this.checkForSemanticObject()) {\n\t\t\t\t// if the field has a Semantic Object, we don't want to focus on the edit button of the field\n\t\t\t\t// but onto the contentDisplay\n\t\t\t\tdisplayedField.focus();\n\t\t\t} else {\n\t\t\t\tthis.openInlineEditPopup(event);\n\t\t\t\tthis._inlineEditIndicator?.getEditButton().focus();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Handles the keydown event for the inline edit field.\n\t * @param event Keyboard event for the field\n\t * @param displayedField DomRef of contentDisplay of the field.\n\t */\n\tkeydownEvent(this: EnhanceWithUI5<Field> & InlineEdit, event: KeyboardEvent, displayedField: HTMLElement): void {\n\t\tif (\n\t\t\t(this.inlineEditState === \"Editable\" || (document.activeElement === displayedField && this.checkForSemanticObject())) &&\n\t\t\tthis.hasInlineEdit\n\t\t) {\n\t\t\tthis.inlineEditKeydown(event, displayedField);\n\t\t}\n\t}\n\n\t/**\n\t * Updates the field group ids of the control to include or remove the inline edit field group id.\n\t * @param action Add or Remove the id\n\t */\n\ttoggleInlineEditFieldGroupId(this: EnhanceWithUI5<Field> & InlineEdit, action: FieldGroupIdAction): void {\n\t\tconst shouldAdd = action === FieldGroupIdAction.Add;\n\t\tconst fieldGroupIds = new Set(this.getFieldGroupIds());\n\n\t\tif (shouldAdd) {\n\t\t\tfieldGroupIds.add(\"InlineEdit\");\n\t\t} else {\n\t\t\tfieldGroupIds.delete(\"InlineEdit\");\n\t\t}\n\n\t\tthis.setFieldGroupIds(Array.from(fieldGroupIds));\n\n\t\tconst childrenControls =\n\t\t\t(this.content?.findAggregatedObjects(true, (managedObject: ManagedObject) =>\n\t\t\t\tmanagedObject.isA<Control>(\"sap.ui.core.Control\")\n\t\t\t) as Control[] | undefined) ?? [];\n\n\t\tfor (const control of childrenControls) {\n\t\t\tconst childFieldGroupIds = new Set(control.getFieldGroupIds());\n\n\t\t\tif (shouldAdd) {\n\t\t\t\tchildFieldGroupIds.add(\"InlineEdit\");\n\t\t\t} else {\n\t\t\t\tchildFieldGroupIds.delete(\"InlineEdit\");\n\t\t\t}\n\t\t\tcontrol.setFieldGroupIds(Array.from(childFieldGroupIds));\n\t\t}\n\t}\n\n\t/**\n\t * Opens the inline edit popup.\n\t * @param event The event.\n\t */\n\topenInlineEditPopup(this: EnhanceWithUI5<Field> & InlineEdit, event: Event): void {\n\t\tif (this.hasInlineEdit && this.inlineEditState !== \"Editable\" && this.editMode === \"Display\" && !this.readOnly) {\n\t\t\tthis._inlineEditIndicatorPopup?.open(0, Popup.Dock.EndTop, Popup.Dock.EndBottom, event.currentTarget as Element);\n\t\t\tthis._source = event.currentTarget as Element;\n\t\t\tthis._inlineEditIndicator?.setWidth((event.currentTarget as Element)?.getBoundingClientRect().width);\n\t\t}\n\t}\n\n\t/**\n\t * Closes the inline edit popup for mouse events.\n\t * @param relatedTarget The related target.\n\t */\n\tcloseInlineEditPopupMouseEvent(this: EnhanceWithUI5<Field> & InlineEdit, relatedTarget: Element): void {\n\t\tif (\n\t\t\trelatedTarget &&\n\t\t\t!this._inlineEditIndicator?.getDomRef()?.contains(relatedTarget) &&\n\t\t\t!this.getDomRef()?.contains(relatedTarget)\n\t\t) {\n\t\t\tthis.closeInlineEditPopupNoEditMode();\n\t\t}\n\t}\n\n\t/**\n\t * Checks if the field has a measure field.\n\t * @returns True if the field has a measure field, false otherwise.\n\t */\n\tcheckForMeasureField(this: EnhanceWithUI5<Field> & InlineEdit): boolean {\n\t\tconst targetproperty: Property | undefined = this.getInlineEditProperty();\n\t\treturn !!targetproperty?.annotations.Measures;\n\t}\n\n\t/**\n\t * Checks if the field has a Semantic Object if clicking on it.\n\t * @returns True if the field has a SemanticObject, false otherwise.\n\t */\n\tcheckForSemanticObject(this: EnhanceWithUI5<Field> & InlineEdit): boolean {\n\t\tconst targetproperty: Property | undefined = this.getInlineEditProperty();\n\t\treturn !!targetproperty?.annotations.Common?.SemanticObject;\n\t}\n\n\t/**\n\t * Closes the inline edit popup for fields that are not in edit mode.\n\t */\n\tcloseInlineEditPopupNoEditMode(this: EnhanceWithUI5<Field> & InlineEdit): void {\n\t\tif (!this._inlineEditIndicator?.getEditMode()) {\n\t\t\tthis._inlineEditIndicatorPopup?.close();\n\t\t}\n\t}\n\n\t/**\n\t * Closes the inline edit popup for fields in edit mode.\n\t */\n\tcloseInlineEditPopupEditMode(this: EnhanceWithUI5<Field> & InlineEdit): void {\n\t\tif (this._inlineEditIndicator?.getEditMode()) {\n\t\t\tthis._inlineEditIndicatorPopup?.close();\n\t\t\tthis._isInlineEditSource = false;\n\t\t}\n\t}\n\n\t/**\n\t * Opens the inline edit popup for focus handling.\n\t * @param event Focusin event for the field.\n\t */\n\topenInlineEditPopupForFocus(this: EnhanceWithUI5<Field> & InlineEdit, event: Event): void {\n\t\tthis._inlineEditIndicator?.setEditMode(true);\n\t\tthis._inlineEditIndicatorPopup?.open(\n\t\t\t0,\n\t\t\tPopup.Dock.EndTop,\n\t\t\tPopup.Dock.EndBottom,\n\t\t\t(event.currentTarget as Element) || this._source,\n\t\t\t\"0 -4\"\n\t\t);\n\t\tthis._isInlineEditSource = true;\n\t}\n\n\t/**\n\t * Focus handling for connected fields.\n\t */\n\tsetInlineEditFocus(this: EnhanceWithUI5<Field> & InlineEdit): void {\n\t\tthis.getPageController()?.inlineEditFlow.focusHandling(this);\n\t}\n\n\t/**\n\t * Triggers the inline edit and calls the toggleControlLocalEdit method to set the control to edit mode.\n\t */\n\ttriggerInlineEdit(this: EnhanceWithUI5<Field> & InlineEdit): void {\n\t\tif (!this.inlineEditEnabled || this.editMode !== \"Display\" || this.readOnly || !this.hasInlineEdit) {\n\t\t\t// if the field is already in edit mode do nothing\n\t\t\treturn;\n\t\t}\n\t\tthis._isInlineEditSource = true;\n\t\tthis._inlineEditIndicator?.setEditMode(true);\n\t\tthis._inlineEditIndicatorPopup?.setPosition(Popup.Dock.EndTop, Popup.Dock.EndBottom, this._source, \"0 -4\");\n\n\t\tconst bindingContextPath = (this.getBindingContext() as Context | undefined)?.getCanonicalPath() ?? \"\";\n\t\tconst propertyFullyQualifiedName = this.getInlineEditPropertyName();\n\t\tif (propertyFullyQualifiedName) {\n\t\t\tthis.getPageController()?.inlineEditFlow.startInlineEdit(propertyFullyQualifiedName, bindingContextPath, this);\n\t\t}\n\t}\n\n\t/**\n\t * Triggers the inline edit discard.\n\t */\n\tasync triggerInlineEditDiscard(this: EnhanceWithUI5<Field> & InlineEdit): Promise<void> {\n\t\tif (this.hasPendingUserInput()) {\n\t\t\t// If there is pending user input we delay the save to allow inner changes from the mdc conditions to be propagated to the model\n\t\t\tawait new Promise<void>((resolve) => {\n\t\t\t\tsetTimeout(resolve, 200);\n\t\t\t});\n\t\t}\n\t\tthis.getPageController()?.inlineEditFlow.inlineEditDiscard();\n\t}\n\n\t/**\n\t * Triggers the inline edit save.\n\t * @returns The inlineEditFlow save promise.\n\t */\n\tasync triggerInlineEditSave(this: EnhanceWithUI5<Field> & InlineEdit): Promise<void | undefined> {\n\t\tif (this.hasPendingUserInput()) {\n\t\t\t// If there is pending user input we delay the save to allow inner changes from the mdc conditions to be propagated to the model\n\t\t\tawait new Promise<void>((resolve) => {\n\t\t\t\tsetTimeout(resolve, 200);\n\t\t\t});\n\t\t}\n\t\treturn this.getPageController()?.inlineEditFlow.inlineEditSave();\n\t}\n\n\t/**\n\t * Hook to react to an inline edit start notification form the inlineEditFlow.\n\t * @param inlineEditControls The fields that are currently in inline edit mode.\n\t * @param propertiesForInlineEdit\n\t * @param bindingContextPathForInlineEdit\n\t */\n\t@controllerExtensionHandler(\"inlineEditFlow\", \"inlineEditStart\")\n\tinlineEditStart(\n\t\tthis: EnhanceWithUI5<Field> & InlineEdit,\n\t\tinlineEditControls: Control[],\n\t\tpropertiesForInlineEdit: string[],\n\t\tbindingContextPathForInlineEdit: string\n\t): void {\n\t\tif (this.hasInlineEdit) {\n\t\t\tconst bindingContextPath = (this.getBindingContext() as Context | undefined)?.getCanonicalPath() ?? \"\";\n\t\t\tconst propertyFullyQualifiedName = this.getInlineEditPropertyName() ?? \"\";\n\t\t\tif (!propertiesForInlineEdit.includes(propertyFullyQualifiedName) || bindingContextPathForInlineEdit !== bindingContextPath) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.toggleInlineEditFieldGroupId(FieldGroupIdAction.Add);\n\t\t\tconst uiModel = this.getModel(\"ui\") as JSONModel;\n\t\t\tconst path = `/${this.getId()}`;\n\t\t\tuiModel.setProperty(path, { isEditable: true });\n\t\t\tthis.bindElement({ path, model: \"ui\" });\n\t\t\t//In case of connected fields, we set the focus on the element that was clicked\n\t\t\tif (this._isInlineEditSource) {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t(this.getContent() as EnhanceWithUI5<FieldWrapper>)?.getContentEdit()[0]?.focus();\n\t\t\t\t\tthis.invalidate();\n\t\t\t\t}, 200);\n\t\t\t}\n\t\t\tif (propertiesForInlineEdit.includes(propertyFullyQualifiedName)) {\n\t\t\t\tthis.inlineEditState = \"Editable\";\n\t\t\t}\n\t\t\tif (!inlineEditControls.includes(this)) {\n\t\t\t\tinlineEditControls.push(this);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Reset the indicator popup.\n\t */\n\tresetIndicatorPopup(this: EnhanceWithUI5<Field> & InlineEdit): void {\n\t\tthis._inlineEditIndicatorPopup?.close();\n\t\tthis._inlineEditIndicator?.setEditMode(false);\n\t\tthis._isInlineEditSource = false;\n\t}\n\n\t/**\n\t * Closes the inline edit popup after save or discard.\n\t * @param refreshDescription If the description should be refreshed.\n\t */\n\tinlineEditEnd(this: EnhanceWithUI5<Field> & InlineEdit, refreshDescription?: boolean): void {\n\t\tif (this.inlineEditState === \"Editable\") {\n\t\t\tif (refreshDescription) {\n\t\t\t\tthis.refreshDescriptionIfNeeded();\n\t\t\t}\n\t\t\tthis.toggleInlineEditFieldGroupId(FieldGroupIdAction.Remove);\n\t\t\tthis.unbindElement(\"ui\");\n\t\t\tthis.inlineEditState = \"Closed\";\n\t\t\tthis.resetIndicatorPopup();\n\t\t}\n\t}\n\n\t/**\n\t * Method to force the model refresh for the description if it may have been modified via  a binding with a $$noPatch parameter.\n\t */\n\trefreshDescriptionIfNeeded(this: EnhanceWithUI5<Field> & InlineEdit): void {\n\t\t// when the field uses a mdc field the description is updated via the additionalValue binding\n\t\t// that has a noPatch parameter so it doesn't get reverted bya resetChanges\n\t\tif (this.isA<Field>(\"sap.fe.macros.Field\")) {\n\t\t\tconst content = this.content?.isA<EnhanceWithUI5<FieldWrapper>>(\"sap.fe.macros.controls.FieldWrapper\")\n\t\t\t\t? this.content.getContentEdit()[0]\n\t\t\t\t: null;\n\t\t\tif (content && content.isA<MdcField>(\"sap.ui.mdc.Field\")) {\n\t\t\t\tconst descriptionPath = content.getBinding(\"additionalValue\")?.getPath();\n\t\t\t\tif (descriptionPath) {\n\t\t\t\t\t(this.getBindingContext() as Context)?.requestSideEffects([descriptionPath], \"$auto\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n"],"mappings":"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","ignoreList":[],"file":"InlineEdit-dbg.js"}