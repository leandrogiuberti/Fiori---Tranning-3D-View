{"version":3,"file":"DraftIndicator.js","names":["DraftIndicator","_dec","defineUI5Class","_dec2","property","type","_dec3","_dec4","required","_dec5","_dec6","_dec7","_dec8","allowedValues","_class","_class2","_BuildingBlock","properties","others","_this","call","this","_initializerDefineProperty","_descriptor","_descriptor2","_descriptor3","_descriptor4","_descriptor5","_descriptor6","_descriptor7","_exports","_inheritsLoose","_proto","prototype","setDraftIndicatorType","indicator","ObjectMarkerVisibility","IconOnly","IconAndText","includes","setProperty","Error","addAriaLabelledByForDraftIndicator","element","ariaLabelledBys","content","getAriaLabelledBy","addAriaLabelledBy","onMetadataAvailable","createContent","formatDraftOwnerTextInPopover","hasDraftEntity","draftInProcessByUser","draftLastChangedByUser","draftInProcessByUserDesc","draftLastChangedByUserDesc","macroResourceBundle","Library","getResourceBundleFor","userDescription","getText","getDraftAdministrativeDataProperties","metaData","getDataModelObjectPath","contextPath","draftAdminElement","targetEntityType","navigationProperties","find","a","name","draftAdminProperties","targetType","entityProperties","map","oDraftAdminProperty","getPopoverTitleBindingExpression","ifElse","not","Entity","IsActive","isHiddenDraftEnabled","pathInModel","HasDraft","isEmpty","draftIndicatorType","getDraftOwnerTextBindingExpression","draftAdministrativeDataProperties","parts","path","push","formatter","createPopover","control","isDraftWithNoChangesBinding","and","draftWithNoChangesTextBinding","isDraftWithChangesBinding","draftWithChangesTextBinding","model","formatMessage","isActiveInstanceBinding","activeInstanceTextBinding","popover","_jsx","Popover","title","showHeader","verticalScrolling","class","placement","endButton","Button","icon","press","draftPopover","close","children","_jsxs","VBox","visible","Text","text","CommonUtils","getTargetView","addDependent","onObjectMarkerPressed","event","source","getSource","bindingContext","getBindingContext","setBindingContext","openBy","getIconAndTextAdditionalInfoBindingExpression","orBindings","or","getIconAndTextContent","getAppComponent","getEnvironmentCapabilities","getCapabilities","HiddenDraft","enabled","objMarkerType","ObjectMarkerType","Unsaved","Draft","LockedBy","UnsavedBy","Flagged","visibility","TextOnly","ObjectMarker","bind","additionalInfo","ariaLabelledBy","reactiveAreaMode","getIconOnlyContent","usedInAnalyticalTable","Locked","usedInTable","UI","IsEditable","undefined","BuildingBlock","_applyDecoratedDescriptor","configurable","enumerable","writable","initializer"],"sources":["./DraftIndicator.tsx"],"sourcesContent":["import type { Property } from \"@sap-ux/vocabularies-types\";\nimport formatMessage from \"sap/base/strings/formatMessage\";\nimport type { BindingToolkitExpression, PrimitiveType } from \"sap/fe/base/BindingToolkit\";\nimport { and, ifElse, isEmpty, not, or, pathInModel } from \"sap/fe/base/BindingToolkit\";\nimport type { PropertiesOf } from \"sap/fe/base/ClassSupport\";\nimport { defineUI5Class, property } from \"sap/fe/base/ClassSupport\";\nimport CommonUtils from \"sap/fe/core/CommonUtils\";\nimport BuildingBlock from \"sap/fe/core/buildingBlocks/BuildingBlock\";\nimport type { HiddenDraft } from \"sap/fe/core/converters/ManifestSettings\";\nimport { Entity, UI } from \"sap/fe/core/helpers/BindingHelper\";\nimport type { DataModelObjectPath } from \"sap/fe/core/templating/DataModelPathHelper\";\nimport Button from \"sap/m/Button\";\nimport type { ObjectMarker$PressEvent } from \"sap/m/ObjectMarker\";\nimport ObjectMarker from \"sap/m/ObjectMarker\";\nimport Popover from \"sap/m/Popover\";\nimport Text from \"sap/m/Text\";\nimport VBox from \"sap/m/VBox\";\nimport { ObjectMarkerType, ObjectMarkerVisibility } from \"sap/m/library\";\nimport type Control from \"sap/ui/core/Control\";\nimport type { $ControlSettings } from \"sap/ui/core/Control\";\nimport Library from \"sap/ui/core/Lib\";\nimport type ODataV4Context from \"sap/ui/model/odata/v4/Context\";\n\n/**\n * Building block for creating a DraftIndicator based on the metadata provided by OData V4.\n *\n * Usage example:\n * <pre>\n * &lt;macros:DraftIndicator\n * id=\"SomeID\"\n * /&gt;\n * </pre>\n * @private\n */\n@defineUI5Class(\"sap.fe.macros.draftIndicator.DraftIndicator\")\nexport default class DraftIndicator extends BuildingBlock<Control> {\n\t/**\n\t * ID of the DraftIndicator\n\t */\n\t@property({\n\t\ttype: \"string\"\n\t})\n\tpublic id?: string;\n\n\t@property({\n\t\ttype: \"string\"\n\t})\n\tpublic draftIndicatorType?: ObjectMarkerVisibility.IconOnly | ObjectMarkerVisibility.IconAndText = ObjectMarkerVisibility.IconAndText;\n\n\t@property({\n\t\ttype: \"string\",\n\t\trequired: true\n\t})\n\tcontextPath!: string;\n\n\t@property({\n\t\ttype: \"string\"\n\t})\n\tpublic class = \"\";\n\n\t@property({\n\t\ttype: \"boolean\"\n\t})\n\tpublic usedInTable?: boolean;\n\n\t@property({\n\t\ttype: \"boolean\"\n\t})\n\tpublic usedInAnalyticalTable?: boolean;\n\n\t@property({ type: \"string\", allowedValues: [\"Inline\", \"Overlay\"] })\n\treactiveAreaMode?: \"Inline\" | \"Overlay\";\n\n\tdraftPopover?: Popover;\n\n\tprivate isHiddenDraftEnabled?: boolean;\n\n\tconstructor(properties: $ControlSettings & PropertiesOf<DraftIndicator>, others?: $ControlSettings) {\n\t\tsuper(properties, others);\n\t}\n\n\tsetDraftIndicatorType(\n\t\tindicator: ObjectMarkerVisibility.IconOnly | ObjectMarkerVisibility.IconAndText | ObjectMarkerVisibility.TextOnly\n\t): void {\n\t\tif ([ObjectMarkerVisibility.IconOnly, ObjectMarkerVisibility.IconAndText].includes(indicator)) {\n\t\t\tthis.setProperty(\"draftIndicatorType\", indicator);\n\t\t} else {\n\t\t\tthrow new Error(`Allowed value ${indicator} does not match`);\n\t\t}\n\t}\n\n\taddAriaLabelledByForDraftIndicator(element: string): void {\n\t\tconst ariaLabelledBys = (this.content as unknown as ObjectMarker)?.getAriaLabelledBy() ?? [];\n\t\tif (!ariaLabelledBys.includes(element)) {\n\t\t\t(this.content as unknown as ObjectMarker)?.addAriaLabelledBy(element);\n\t\t}\n\t}\n\n\t/**\n\t * Handler for the onMetadataAvailable event.\n\t */\n\tonMetadataAvailable(): void {\n\t\tif (!this.content) {\n\t\t\tthis.content = this.createContent();\n\t\t}\n\t}\n\n\t/**\n\t * Runtime formatter function to format the correct text that displays the owner of a draft.\n\t *\n\t * This is used in case the DraftIndicator is shown for an active entity that has a draft of another user.\n\t * @param hasDraftEntity\n\t * @param draftInProcessByUser\n\t * @param draftLastChangedByUser\n\t * @param draftInProcessByUserDesc\n\t * @param draftLastChangedByUserDesc\n\t * @returns Text to display\n\t */\n\tstatic formatDraftOwnerTextInPopover(\n\t\t// eslint-disable-next-line @typescript-eslint/no-invalid-void-type\n\t\tthis: void,\n\t\thasDraftEntity: boolean,\n\t\tdraftInProcessByUser: string,\n\t\tdraftLastChangedByUser: string,\n\t\tdraftInProcessByUserDesc: string,\n\t\tdraftLastChangedByUserDesc: string\n\t): string {\n\t\tconst macroResourceBundle = Library.getResourceBundleFor(\"sap.fe.macros\");\n\t\tif (!macroResourceBundle) {\n\t\t\treturn \"\";\n\t\t}\n\t\tif (hasDraftEntity) {\n\t\t\tconst userDescription =\n\t\t\t\tdraftInProcessByUserDesc || draftInProcessByUser || draftLastChangedByUserDesc || draftLastChangedByUser;\n\n\t\t\tif (!userDescription) {\n\t\t\t\treturn macroResourceBundle.getText(\"M_FIELD_RUNTIME_DRAFT_POPOVER_UNSAVED_CHANGES_BY_UNKNOWN\");\n\t\t\t} else {\n\t\t\t\treturn draftInProcessByUser\n\t\t\t\t\t? macroResourceBundle.getText(\"M_FIELD_RUNTIME_DRAFT_POPOVER_LOCKED_BY_KNOWN\", [userDescription])\n\t\t\t\t\t: macroResourceBundle.getText(\"M_FIELD_RUNTIME_DRAFT_POPOVER_UNSAVED_CHANGES_BY_KNOWN\", [userDescription]);\n\t\t\t}\n\t\t} else {\n\t\t\treturn macroResourceBundle.getText(\"M_FIELD_RUNTIME_DRAFT_POPOVER_NO_DATA_TEXT\");\n\t\t}\n\t}\n\n\t/***\n\t * Gets the properties of the DraftAdministrativeData entity connected to the given entity set\n\t *\n\t * @returns List of property names\n\t */\n\tgetDraftAdministrativeDataProperties(): string[] | undefined {\n\t\tconst metaData: DataModelObjectPath<Property> | undefined = this.getDataModelObjectPath(this.contextPath);\n\t\tconst draftAdminElement = metaData?.targetEntityType.navigationProperties.find((a) => a.name === \"DraftAdministrativeData\");\n\t\tconst draftAdminProperties = draftAdminElement?.targetType.entityProperties;\n\t\treturn draftAdminProperties?.map((oDraftAdminProperty) => oDraftAdminProperty.name);\n\t}\n\n\t/**\n\t * Constructs the binding expression for the text displayed as title of the popup.\n\t * @returns The binding expression\n\t */\n\tgetPopoverTitleBindingExpression(): BindingToolkitExpression<PrimitiveType> {\n\t\treturn ifElse(\n\t\t\tnot(Entity.IsActive),\n\t\t\tthis.isHiddenDraftEnabled\n\t\t\t\t? pathInModel(\"M_DRAFT_POPOVER_ADMIN_UNSAVED_OBJECT\", \"sap.fe.i18n\")\n\t\t\t\t: pathInModel(\"M_COMMON_DRAFT_OBJECT\", \"sap.fe.i18n\"),\n\t\t\tifElse(\n\t\t\t\tEntity.HasDraft,\n\t\t\t\tifElse(\n\t\t\t\t\tnot(isEmpty(pathInModel(\"DraftAdministrativeData/InProcessByUser\"))),\n\t\t\t\t\tpathInModel(\"M_COMMON_DRAFT_LOCKED_OBJECT\", \"sap.fe.i18n\"),\n\t\t\t\t\tpathInModel(\"M_DRAFT_POPOVER_ADMIN_UNSAVED_OBJECT\", \"sap.fe.i18n\")\n\t\t\t\t),\n\t\t\t\tthis.draftIndicatorType === ObjectMarkerVisibility.IconAndText\n\t\t\t\t\t? \" \"\n\t\t\t\t\t: pathInModel(\"C_DRAFT_POPOVER_ADMIN_DATA_DRAFTINFO_FLAGGED_OBJECT\", \"sap.fe.i18n\")\n\t\t\t)\n\t\t);\n\t}\n\n\t/**\n\t * Constructs the binding expression for the text displayed to identify the draft owner in the popup.\n\t * This binding is configured to call formatDraftOwnerTextInPopover at runtime.\n\t *\n\t * We cannot reference formatDraftOwnerTextInPopover directly as we need to conditionally pass properties that might exist or not,\n\t * and referring to non-existing properties fails the binding.\n\t * @returns The binding expression\n\t */\n\tgetDraftOwnerTextBindingExpression(): {\n\t\tparts: unknown[];\n\t\tformatter: (\n\t\t\thasDraftEntity: boolean,\n\t\t\tdraftInProcessByUser: string,\n\t\t\tdraftLastChangedByUser: string,\n\t\t\tdraftInProcessByUserDesc: string,\n\t\t\tdraftLastChangedByUserDesc: string\n\t\t) => string;\n\t} {\n\t\tconst draftAdministrativeDataProperties = this.getDraftAdministrativeDataProperties();\n\n\t\tconst parts = [\n\t\t\t{ path: \"HasDraftEntity\", targetType: \"any\" },\n\t\t\t{ path: \"DraftAdministrativeData/InProcessByUser\" },\n\t\t\t{ path: \"DraftAdministrativeData/LastChangedByUser\" }\n\t\t];\n\t\tif (draftAdministrativeDataProperties?.includes(\"InProcessByUserDescription\")) {\n\t\t\tparts.push({ path: \"DraftAdministrativeData/InProcessByUserDescription\" });\n\t\t}\n\t\tif (draftAdministrativeDataProperties?.includes(\"LastChangedByUserDescription\")) {\n\t\t\tparts.push({ path: \"DraftAdministrativeData/LastChangedByUserDescription\" });\n\t\t}\n\n\t\t//parts.push({path: \"sap.fe.i18n>\"})\n\n\t\treturn { parts, formatter: DraftIndicator.formatDraftOwnerTextInPopover };\n\t}\n\n\t/**\n\t * Creates a popover control to display draft information.\n\t * @param control Control that the popover is to be created for\n\t * @returns The created popover control\n\t */\n\tcreatePopover(control: Control): Popover {\n\t\tconst isDraftWithNoChangesBinding = and(not(Entity.IsActive), isEmpty(pathInModel(\"DraftAdministrativeData/LastChangeDateTime\")));\n\t\tconst draftWithNoChangesTextBinding =\n\t\t\tthis.draftIndicatorType === ObjectMarkerVisibility.IconAndText\n\t\t\t\t? pathInModel(\"M_DRAFT_POPOVER_ADMIN_GENERIC_LOCKED_OBJECT_POPOVER_TEXT\", \"sap.fe.i18n\")\n\t\t\t\t: pathInModel(\"C_DRAFT_POPOVER_ADMIN_DATA_DRAFTINFO_POPOVER_NO_DATA_TEXT\", \"sap.fe.i18n\");\n\n\t\tconst isDraftWithChangesBinding = and(\n\t\t\tnot(Entity.IsActive),\n\t\t\tnot(isEmpty(pathInModel(\"DraftAdministrativeData/LastChangeDateTime\")))\n\t\t);\n\t\tconst draftWithChangesTextBinding = {\n\t\t\tparts: [\n\t\t\t\t{ path: \"M_DRAFT_POPOVER_ADMIN_LAST_CHANGE_TEXT\", model: \"sap.fe.i18n\" },\n\t\t\t\t{ path: \"DraftAdministrativeData/LastChangeDateTime\" }\n\t\t\t],\n\t\t\tformatter: formatMessage\n\t\t};\n\n\t\tconst isActiveInstanceBinding = and(Entity.IsActive, not(isEmpty(pathInModel(\"DraftAdministrativeData/LastChangeDateTime\"))));\n\t\tconst activeInstanceTextBinding = { ...draftWithChangesTextBinding };\n\n\t\tconst popover: Popover = (\n\t\t\t<Popover\n\t\t\t\ttitle={this.getPopoverTitleBindingExpression()}\n\t\t\t\tshowHeader={true}\n\t\t\t\tverticalScrolling={false}\n\t\t\t\tclass={\"sapUiContentPadding\"}\n\t\t\t\tplacement={\"Auto\"}\n\t\t\t\tendButton={\n\t\t\t\t\t(\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\ticon={\"sap-icon://decline\"}\n\t\t\t\t\t\t\tpress={(): void => {\n\t\t\t\t\t\t\t\tthis.draftPopover?.close();\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) as Button\n\t\t\t\t}\n\t\t\t>\n\t\t\t\t<VBox class={\"sapUiContentPadding\"}>\n\t\t\t\t\t<VBox visible={isDraftWithNoChangesBinding}>\n\t\t\t\t\t\t<Text text={draftWithNoChangesTextBinding} />\n\t\t\t\t\t</VBox>\n\t\t\t\t\t<VBox visible={isDraftWithChangesBinding}>\n\t\t\t\t\t\t<Text text={draftWithChangesTextBinding} />\n\t\t\t\t\t</VBox>\n\t\t\t\t\t<VBox visible={isActiveInstanceBinding}>\n\t\t\t\t\t\t<Text text={this.getDraftOwnerTextBindingExpression()} />\n\t\t\t\t\t\t<Text class={\"sapUiSmallMarginTop\"} text={activeInstanceTextBinding} />\n\t\t\t\t\t</VBox>\n\t\t\t\t</VBox>\n\t\t\t</Popover>\n\t\t) as Popover;\n\n\t\tCommonUtils.getTargetView(control).addDependent(popover);\n\t\treturn popover;\n\t}\n\n\t/**\n\t * Handles pressing of the object marker by opening a corresponding popover.\n\t * @param event Event object passed from the press event\n\t */\n\tonObjectMarkerPressed(event: ObjectMarker$PressEvent): void {\n\t\tconst source = event.getSource();\n\t\tconst bindingContext = source.getBindingContext() as ODataV4Context;\n\n\t\tthis.draftPopover ??= this.createPopover(source);\n\n\t\tthis.draftPopover.setBindingContext(bindingContext);\n\t\tthis.draftPopover.openBy(source, false);\n\t}\n\n\t/**\n\t * Constructs the binding expression for the \"additionalInfo\" attribute in the \"IconAndText\" case.\n\t * @returns The binding expression\n\t */\n\tgetIconAndTextAdditionalInfoBindingExpression(): BindingToolkitExpression<string> {\n\t\tconst draftAdministrativeDataProperties = this.getDraftAdministrativeDataProperties();\n\n\t\tconst orBindings = [];\n\t\tif (draftAdministrativeDataProperties?.includes(\"InProcessByUserDescription\")) {\n\t\t\torBindings.push(pathInModel(\"DraftAdministrativeData/InProcessByUserDescription\"));\n\t\t}\n\t\torBindings.push(pathInModel(\"DraftAdministrativeData/InProcessByUser\"));\n\t\tif (draftAdministrativeDataProperties?.includes(\"LastChangedByUserDescription\")) {\n\t\t\torBindings.push(pathInModel(\"DraftAdministrativeData/LastChangedByUserDescription\"));\n\t\t}\n\t\torBindings.push(pathInModel(\"DraftAdministrativeData/LastChangedByUser\"));\n\n\t\treturn ifElse<string>(Entity.HasDraft, or(...orBindings) as BindingToolkitExpression<string>, \"\");\n\t}\n\n\t/**\n\t * Returns the content of this building block for the \"IconAndText\" type.\n\t * @returns The control tree\n\t */\n\tgetIconAndTextContent(): ObjectMarker {\n\t\tthis.isHiddenDraftEnabled = (this.getAppComponent()?.getEnvironmentCapabilities().getCapabilities().HiddenDraft as HiddenDraft)\n\t\t\t?.enabled;\n\t\tconst objMarkerType = this.isHiddenDraftEnabled ? ObjectMarkerType.Unsaved : ObjectMarkerType.Draft;\n\t\tconst type = ifElse(\n\t\t\tnot(Entity.IsActive),\n\t\t\tobjMarkerType,\n\t\t\tifElse(\n\t\t\t\tEntity.HasDraft,\n\t\t\t\tifElse(\n\t\t\t\t\tpathInModel(\"DraftAdministrativeData/InProcessByUser\"),\n\t\t\t\t\tObjectMarkerType.LockedBy,\n\t\t\t\t\tifElse(pathInModel(\"DraftAdministrativeData/LastChangedByUser\"), ObjectMarkerType.UnsavedBy, ObjectMarkerType.Unsaved)\n\t\t\t\t),\n\t\t\t\tObjectMarkerType.Flagged\n\t\t\t)\n\t\t);\n\n\t\tconst visibility = ifElse(not(Entity.HasDraft), ObjectMarkerVisibility.TextOnly, ObjectMarkerVisibility.IconAndText);\n\n\t\treturn (\n\t\t\t<ObjectMarker\n\t\t\t\ttype={type}\n\t\t\t\tpress={this.onObjectMarkerPressed.bind(this)}\n\t\t\t\tvisibility={visibility}\n\t\t\t\tadditionalInfo={this.getIconAndTextAdditionalInfoBindingExpression()}\n\t\t\t\tariaLabelledBy={this.ariaLabelledBy ? this.ariaLabelledBy : []}\n\t\t\t\tclass={this.class}\n\t\t\t\treactiveAreaMode={this.reactiveAreaMode}\n\t\t\t/>\n\t\t) as ObjectMarker;\n\t}\n\n\t/**\n\t * Returns the content of this building block for the \"IconOnly\" type.\n\t * @returns The control tree\n\t */\n\tgetIconOnlyContent(): ObjectMarker {\n\t\tconst type = ifElse(\n\t\t\tnot(Entity.IsActive),\n\t\t\tObjectMarkerType.Draft,\n\t\t\tifElse(\n\t\t\t\tEntity.HasDraft,\n\t\t\t\tifElse(\n\t\t\t\t\t!!this.usedInAnalyticalTable,\n\t\t\t\t\tObjectMarkerType.Locked,\n\t\t\t\t\tifElse(pathInModel(\"DraftAdministrativeData/InProcessByUser\"), ObjectMarkerType.Locked, ObjectMarkerType.Unsaved)\n\t\t\t\t),\n\t\t\t\tObjectMarkerType.Flagged\n\t\t\t)\n\t\t);\n\n\t\tlet visible;\n\t\tif (this.usedInTable === true) {\n\t\t\tvisible = or(not(Entity.IsActive), and(Entity.IsActive, Entity.HasDraft));\n\t\t} else {\n\t\t\t// If Entity.HasDraft is empty, there is no context at all, so don't show the indicator\n\t\t\tvisible = and(\n\t\t\t\tnot(isEmpty(Entity.HasDraft)),\n\t\t\t\tnot(UI.IsEditable),\n\t\t\t\tEntity.HasDraft,\n\t\t\t\tnot(pathInModel(\"DraftAdministrativeData/DraftIsCreatedByMe\"))\n\t\t\t);\n\t\t}\n\n\t\treturn (\n\t\t\t<ObjectMarker\n\t\t\t\ttype={type}\n\t\t\t\tpress={!this.usedInAnalyticalTable ? this.onObjectMarkerPressed.bind(this) : undefined}\n\t\t\t\tvisibility={ObjectMarkerVisibility.IconOnly}\n\t\t\t\tvisible={visible}\n\t\t\t\tariaLabelledBy={this.ariaLabelledBy ? this.ariaLabelledBy : []}\n\t\t\t\tclass={this.class}\n\t\t\t\treactiveAreaMode={this.reactiveAreaMode}\n\t\t\t/>\n\t\t) as ObjectMarker;\n\t}\n\n\t/**\n\t * Returns the content of this building block.\n\t * @returns The control tree\n\t */\n\tcreateContent(): ObjectMarker | undefined {\n\t\tif (this.draftIndicatorType === ObjectMarkerVisibility.IconAndText) {\n\t\t\treturn this.getIconAndTextContent();\n\t\t} else {\n\t\t\treturn this.getIconOnlyContent();\n\t\t}\n\t}\n}\n"],"mappings":";;;;unDAuBA,IAYqBA,GAAcC,EADlCC,EAAe,+CAA8CC,EAK5DC,EAAS,CACTC,KAAM,WACLC,EAGDF,EAAS,CACTC,KAAM,WACLE,EAGDH,EAAS,CACTC,KAAM,SACNG,SAAU,OACTC,EAGDL,EAAS,CACTC,KAAM,WACLK,EAGDN,EAAS,CACTC,KAAM,YACLM,EAGDP,EAAS,CACTC,KAAM,YACLO,EAGDR,EAAS,CAAEC,KAAM,SAAUQ,cAAe,CAAC,SAAU,aAAaZ,EAAAa,GAAAC,EAAA,SAAAC,GAOnE,SAAAhB,EAAYiB,EAA6DC,GAA2B,IAAAC,EACnGA,EAAAH,EAAAI,KAAAC,KAAMJ,EAAYC,IAAOG,KA1C1BC,EAAAH,EAAA,KAAAI,EAAAJ,GAAAG,EAAAH,EAAA,qBAAAK,EAAAL,GAAAG,EAAAH,EAAA,cAAAM,EAAAN,GAAAG,EAAAH,EAAA,QAAAO,EAAAP,GAAAG,EAAAH,EAAA,cAAAQ,EAAAR,GAAAG,EAAAH,EAAA,wBAAAS,EAAAT,GAAAG,EAAAH,EAAA,mBAAAU,EAAAV,GAAA,OAAAA,CA2CA,CAACW,EAAA9B,EAAA+B,EAAA/B,EAAAgB,GAAA,IAAAgB,EAAAhC,EAAAiC,UAAAD,EAEDE,sBAAA,SAAAA,EACCC,GAEA,GAAI,CAACC,EAAuBC,SAAUD,EAAuBE,aAAaC,SAASJ,GAAY,CAC9Fd,KAAKmB,YAAY,qBAAsBL,EACxC,KAAO,CACN,MAAM,IAAIM,MAAM,iBAAiBN,mBAClC,CACD,EAACH,EAEDU,mCAAA,SAAAA,EAAmCC,GAClC,MAAMC,EAAmBvB,KAAKwB,SAAqCC,qBAAuB,GAC1F,IAAKF,EAAgBL,SAASI,GAAU,CACtCtB,KAAKwB,SAAqCE,kBAAkBJ,EAC9D,CACD,EAEAX,EAGAgB,oBAAA,SAAAA,IACC,IAAK3B,KAAKwB,QAAS,CAClBxB,KAAKwB,QAAUxB,KAAK4B,eACrB,CACD,EAEAjD,EAWOkD,8BAAP,SAAOA,EAGNC,EACAC,EACAC,EACAC,EACAC,GAEA,MAAMC,EAAsBC,EAAQC,qBAAqB,iBACzD,IAAKF,EAAqB,CACzB,MAAO,EACR,CACA,GAAIL,EAAgB,CACnB,MAAMQ,EACLL,GAA4BF,GAAwBG,GAA8BF,EAEnF,IAAKM,EAAiB,CACrB,OAAOH,EAAoBI,QAAQ,2DACpC,KAAO,CACN,OAAOR,EACJI,EAAoBI,QAAQ,gDAAiD,CAACD,IAC9EH,EAAoBI,QAAQ,yDAA0D,CAACD,GAC3F,CACD,KAAO,CACN,OAAOH,EAAoBI,QAAQ,6CACpC,CACD,EAEA5B,EAKA6B,qCAAA,SAAAA,IACC,MAAMC,EAAsDzC,KAAK0C,uBAAuB1C,KAAK2C,aAC7F,MAAMC,EAAoBH,GAAUI,iBAAiBC,qBAAqBC,KAAMC,GAAMA,EAAEC,OAAS,2BACjG,MAAMC,EAAuBN,GAAmBO,WAAWC,iBAC3D,OAAOF,GAAsBG,IAAKC,GAAwBA,EAAoBL,KAC/E,EAEAtC,EAIA4C,iCAAA,SAAAA,IACC,OAAOC,EACNC,EAAIC,EAAOC,UACX3D,KAAK4D,qBACFC,EAAY,uCAAwC,eACpDA,EAAY,wBAAyB,eACxCL,EACCE,EAAOI,SACPN,EACCC,EAAIM,EAAQF,EAAY,6CACxBA,EAAY,+BAAgC,eAC5CA,EAAY,uCAAwC,gBAErD7D,KAAKgE,qBAAuBjD,EAAuBE,YAChD,IACA4C,EAAY,sDAAuD,gBAGzE,EAEAlD,EAQAsD,mCAAA,SAAAA,IAUC,MAAMC,EAAoClE,KAAKwC,uCAE/C,MAAM2B,EAAQ,CACb,CAAEC,KAAM,iBAAkBjB,WAAY,OACtC,CAAEiB,KAAM,2CACR,CAAEA,KAAM,8CAET,GAAIF,GAAmChD,SAAS,8BAA+B,CAC9EiD,EAAME,KAAK,CAAED,KAAM,sDACpB,CACA,GAAIF,GAAmChD,SAAS,gCAAiC,CAChFiD,EAAME,KAAK,CAAED,KAAM,wDACpB,CAIA,MAAO,CAAED,QAAOG,UAAW3F,EAAekD,8BAC3C,EAEAlB,EAKA4D,cAAA,SAAAA,EAAcC,GACb,MAAMC,EAA8BC,EAAIjB,EAAIC,EAAOC,UAAWI,EAAQF,EAAY,gDAClF,MAAMc,EACL3E,KAAKgE,qBAAuBjD,EAAuBE,YAChD4C,EAAY,2DAA4D,eACxEA,EAAY,4DAA6D,eAE7E,MAAMe,EAA4BF,EACjCjB,EAAIC,EAAOC,UACXF,EAAIM,EAAQF,EAAY,iDAEzB,MAAMgB,EAA8B,CACnCV,MAAO,CACN,CAAEC,KAAM,yCAA0CU,MAAO,eACzD,CAAEV,KAAM,+CAETE,UAAWS,GAGZ,MAAMC,EAA0BN,EAAIhB,EAAOC,SAAUF,EAAIM,EAAQF,EAAY,iDAC7E,MAAMoB,EAA4B,IAAKJ,GAEvC,MAAMK,EACLC,EAACC,EAAO,CACPC,MAAOrF,KAAKuD,mCACZ+B,WAAY,KACZC,kBAAmB,MACnBC,MAAO,sBACPC,UAAW,OACXC,UAEEP,EAACQ,EAAM,CACNC,KAAM,qBACNC,MAAOA,KACN7F,KAAK8F,cAAcC,WAItBC,SAEDC,EAACC,EAAI,CAACV,MAAO,sBAAsBQ,SAAA,CAClCb,EAACe,EAAI,CAACC,QAAS1B,EAA4BuB,SAC1Cb,EAACiB,EAAI,CAACC,KAAM1B,MAEbQ,EAACe,EAAI,CAACC,QAASvB,EAA0BoB,SACxCb,EAACiB,EAAI,CAACC,KAAMxB,MAEboB,EAACC,EAAI,CAACC,QAASnB,EAAwBgB,SAAA,CACtCb,EAACiB,EAAI,CAACC,KAAMrG,KAAKiE,uCACjBkB,EAACiB,EAAI,CAACZ,MAAO,sBAAuBa,KAAMpB,YAM9CqB,EAAYC,cAAc/B,GAASgC,aAAatB,GAChD,OAAOA,CACR,EAEAvE,EAIA8F,sBAAA,SAAAA,EAAsBC,GACrB,MAAMC,EAASD,EAAME,YACrB,MAAMC,EAAiBF,EAAOG,oBAE9B9G,KAAK8F,eAAiB9F,KAAKuE,cAAcoC,GAEzC3G,KAAK8F,aAAaiB,kBAAkBF,GACpC7G,KAAK8F,aAAakB,OAAOL,EAAQ,MAClC,EAEAhG,EAIAsG,8CAAA,SAAAA,IACC,MAAM/C,EAAoClE,KAAKwC,uCAE/C,MAAM0E,EAAa,GACnB,GAAIhD,GAAmChD,SAAS,8BAA+B,CAC9EgG,EAAW7C,KAAKR,EAAY,sDAC7B,CACAqD,EAAW7C,KAAKR,EAAY,4CAC5B,GAAIK,GAAmChD,SAAS,gCAAiC,CAChFgG,EAAW7C,KAAKR,EAAY,wDAC7B,CACAqD,EAAW7C,KAAKR,EAAY,8CAE5B,OAAOL,EAAeE,EAAOI,SAAUqD,KAAMD,GAAiD,GAC/F,EAEAvG,EAIAyG,sBAAA,SAAAA,IACCpH,KAAK4D,qBAAwB5D,KAAKqH,mBAAmBC,6BAA6BC,kBAAkBC,aACjGC,QACH,MAAMC,EAAgB1H,KAAK4D,qBAAuB+D,EAAiBC,QAAUD,EAAiBE,MAC9F,MAAM7I,EAAOwE,EACZC,EAAIC,EAAOC,UACX+D,EACAlE,EACCE,EAAOI,SACPN,EACCK,EAAY,2CACZ8D,EAAiBG,SACjBtE,EAAOK,EAAY,6CAA8C8D,EAAiBI,UAAWJ,EAAiBC,UAE/GD,EAAiBK,UAInB,MAAMC,EAAazE,EAAOC,EAAIC,EAAOI,UAAW/C,EAAuBmH,SAAUnH,EAAuBE,aAExG,OACCkE,EAACgD,EAAY,CACZnJ,KAAMA,EACN6G,MAAO7F,KAAKyG,sBAAsB2B,KAAKpI,MACvCiI,WAAYA,EACZI,eAAgBrI,KAAKiH,gDACrBqB,eAAgBtI,KAAKsI,eAAiBtI,KAAKsI,eAAiB,GAC5D9C,MAAOxF,KAAKwF,MACZ+C,iBAAkBvI,KAAKuI,kBAG1B,EAEA5H,EAIA6H,mBAAA,SAAAA,IACC,MAAMxJ,EAAOwE,EACZC,EAAIC,EAAOC,UACXgE,EAAiBE,MACjBrE,EACCE,EAAOI,SACPN,IACGxD,KAAKyI,sBACPd,EAAiBe,OACjBlF,EAAOK,EAAY,2CAA4C8D,EAAiBe,OAAQf,EAAiBC,UAE1GD,EAAiBK,UAInB,IAAI7B,EACJ,GAAInG,KAAK2I,cAAgB,KAAM,CAC9BxC,EAAUgB,EAAG1D,EAAIC,EAAOC,UAAWe,EAAIhB,EAAOC,SAAUD,EAAOI,UAChE,KAAO,CAENqC,EAAUzB,EACTjB,EAAIM,EAAQL,EAAOI,WACnBL,EAAImF,EAAGC,YACPnF,EAAOI,SACPL,EAAII,EAAY,+CAElB,CAEA,OACCsB,EAACgD,EAAY,CACZnJ,KAAMA,EACN6G,OAAQ7F,KAAKyI,sBAAwBzI,KAAKyG,sBAAsB2B,KAAKpI,MAAQ8I,UAC7Eb,WAAYlH,EAAuBC,SACnCmF,QAASA,EACTmC,eAAgBtI,KAAKsI,eAAiBtI,KAAKsI,eAAiB,GAC5D9C,MAAOxF,KAAKwF,MACZ+C,iBAAkBvI,KAAKuI,kBAG1B,EAEA5H,EAIAiB,cAAA,SAAAA,IACC,GAAI5B,KAAKgE,qBAAuBjD,EAAuBE,YAAa,CACnE,OAAOjB,KAAKoH,uBACb,KAAO,CACN,OAAOpH,KAAKwI,oBACb,CACD,EAAC,OAAA7J,CAAA,CApVkE,CAnCxBoK,GAAa7I,EAAA8I,EAAAtJ,EAAAkB,UAAA,MAAA9B,GAAA,CAAAmK,aAAA,KAAAC,WAAA,KAAAC,SAAA,KAAAC,YAAA,OAAAjJ,EAAA6I,EAAAtJ,EAAAkB,UAAA,sBAAA3B,GAAA,CAAAgK,aAAA,KAAAC,WAAA,KAAAC,SAAA,KAAAC,YAAA,kBAY2CrI,EAAuBE,WAAW,IAAAb,EAAA4I,EAAAtJ,EAAAkB,UAAA,eAAA1B,GAAA,CAAA+J,aAAA,KAAAC,WAAA,KAAAC,SAAA,KAAAC,YAAA,OAAA/I,EAAA2I,EAAAtJ,EAAAkB,UAAA,SAAAxB,GAAA,CAAA6J,aAAA,KAAAC,WAAA,KAAAC,SAAA,KAAAC,YAAA,iBAWtH,EAAE,IAAA9I,EAAA0I,EAAAtJ,EAAAkB,UAAA,eAAAvB,GAAA,CAAA4J,aAAA,KAAAC,WAAA,KAAAC,SAAA,KAAAC,YAAA,OAAA7I,EAAAyI,EAAAtJ,EAAAkB,UAAA,yBAAAtB,GAAA,CAAA2J,aAAA,KAAAC,WAAA,KAAAC,SAAA,KAAAC,YAAA,OAAA5I,EAAAwI,EAAAtJ,EAAAkB,UAAA,oBAAArB,GAAA,CAAA0J,aAAA,KAAAC,WAAA,KAAAC,SAAA,KAAAC,YAAA,OAAA1J,KAAAD,GAAAgB,EAAA9B,EAAA,OAAA8B,CAAA","ignoreList":[]}