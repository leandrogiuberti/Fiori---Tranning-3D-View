{"version":3,"names":["NavigationType","MicroChart","_dec","defineUI5Class","returnTypes","_dec2","property","type","_dec3","required","_dec4","_dec5","_dec6","_dec7","_dec8","_dec9","_dec10","_dec11","event","_dec12","_dec13","_dec14","_dec15","_dec16","_dec17","_dec18","_dec19","_class","_class2","_BuildingBlock","settings","others","_this","call","_initializerDefineProperty","_descriptor","_descriptor2","_descriptor3","_descriptor4","_descriptor5","_descriptor6","_descriptor7","_descriptor8","_descriptor9","_descriptor10","_descriptor11","_descriptor12","_descriptor13","_descriptor14","_descriptor15","_descriptor16","_descriptor17","_descriptor18","_exports","_inheritsLoose","_proto","prototype","getSortOrder","sortingProps","map","sortingProp","Property","value","Descending","fullyQualifiedName","$Type","setProperty","key","suppressInvalidate","_applyingSettings","undefined","Object","keys","getMetadata","getProperties","includes","content","destroy","createContent","createMicroChart","clone","idSuffix","localIds","clonedMicroChart","onMetadataAvailable","_ownerComponent","owner","_getOwner","contextPath","preprocessorContext","fullContextPath","odataMetaModel","getMetaModel","_microChartDataModelObjectPath","getDataModelObjectForMetaPath","metaPath","targetObject","term","SortOrder","length","_sortOrder","Visualizations","getTargetNavigationPath","_chartTarget","_measureDataPath","enhanceDataModelPath","Measures","MicroChartHelper","shouldRenderMicroChart","_dataPoint","MeasureAttributes","DataPoint","$target","_targetNavigationPath","createBindingContext","showOnlyChart","logWarning","chartMap","type1","ChartType","ChartComponent","__ui5_require_async","default","microChartAggregations","getMicroChartAggregations","isAnalytics","getAggregation","setAggregation","_jsx","getMicroChartProperties","children","errorObject","Value","microChartProperties","size","hideOnNoData","dataPointPath","getAggregationForMicrochart","getObject","Dimensions","getBulletMicroChartProperties","getRadialMicroChartProperties","getHarveyMicroChartProperties","bars","columns","maxValue","MaximumValue","compileExpression","constant","valueOf","minValue","MinimumValue","colorPalette","getColorPaletteForMicroChart","data","showThresholdLine","criticalityExpressionForMicrochart","Criticality","buildExpressionForCriticalityColorMicroChart","getBulletMicroChartAggregations","getStackMicroChartAggregations","getHarveyMicroChartAggregations","getComparisonMicroChartAggregations","getAreaMicroChartAggregations","getColumnMicroChartAggregations","getLineMicroChartAggragations","createMicroChartId","chartType","chartIDPrefix","createId","getMicroChartContainerProperties","microChartContainerProperties","chartTitle","title","Title","chartDescription","description","Description","_binding","getBindingExpressionForMicrochart","uomPath","getUOMPathForMicrochart","id","chartsWithVisibleProperty","visible","not","ifElse","getExpressionFromAnnotation","annotations","UI","Hidden","dataPointQualifiers","getDataPointQualifiersForMicroChart","measures","name","getMeasurePropertyPaths","targetEntityType","getDataPointQualifiersForMeasures","dimensionDataPath","dimension","Common","Text","path","measurePrecision","precision","measureScale","getMeasureScaleForMicroChart","dimensionPrecision","calendarPattern","getCalendarPattern","createTitle","titleText","localLegacyTitleId","ID","generate","qualifier","viewId","getPageController","getView","getId","legacyTitleId","titleLinkProperties","text","resourceBundle","Lib","getResourceBundleFor","navigationType","ariaTranslatedText","getText","showAsLink","linkAriaText","showLink","CommonHelper","getHeaderDataPointLinkVisibility","TitleLink","linkPress","pressEvent","fireEvent","isValidChartType","ConditionalWrapper","condition","or","pathInModel","equal","getExpressionForMeasureUnit","contentTrue","createChartContent","contentFalse","binding","MicroChartContainer","microChartTitle","BuildingBlock","_applyDecoratedDescriptor","configurable","enumerable","writable","initializer","None"],"sourceRoot":".","sources":["MicroChart.tsx"],"sourcesContent":["import type { PathAnnotationExpression, Property, PropertyPath } from \"@sap-ux/vocabularies-types\";\nimport type { Measure } from \"@sap-ux/vocabularies-types/vocabularies/Analytics\";\nimport type { SortOrderType } from \"@sap-ux/vocabularies-types/vocabularies/Common\";\nimport { CommonAnnotationTypes } from \"@sap-ux/vocabularies-types/vocabularies/Common\";\nimport type { PropertyAnnotations } from \"@sap-ux/vocabularies-types/vocabularies/Edm_Types\";\nimport type { DataPoint, DataPointType } from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport { ChartType, UIAnnotationTerms, type Chart, type PresentationVariant } from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport { compileExpression, constant, equal, getExpressionFromAnnotation, ifElse, not, or, pathInModel } from \"sap/fe/base/BindingToolkit\";\nimport type { PropertiesOf } from \"sap/fe/base/ClassSupport\";\nimport { defineUI5Class, event, property } from \"sap/fe/base/ClassSupport\";\nimport type TemplateComponent from \"sap/fe/core/TemplateComponent\";\nimport BuildingBlock from \"sap/fe/core/buildingBlocks/BuildingBlock\";\nimport * as ID from \"sap/fe/core/helpers/StableIdHelper\";\nimport { buildExpressionForCriticalityColorMicroChart } from \"sap/fe/core/templating/CriticalityFormatters\";\nimport type { DataModelObjectPath } from \"sap/fe/core/templating/DataModelPathHelper\";\nimport { enhanceDataModelPath, getTargetNavigationPath } from \"sap/fe/core/templating/DataModelPathHelper\";\nimport { getExpressionForMeasureUnit } from \"sap/fe/core/templating/UIFormatters\";\nimport Text from \"sap/m/Text\";\nimport type { $ColumnMicroChartSettings } from \"sap/suite/ui/microchart/ColumnMicroChart\";\nimport type { $ComparisonMicroChartSettings } from \"sap/suite/ui/microchart/ComparisonMicroChart\";\nimport type { $LineMicroChartSettings } from \"sap/suite/ui/microchart/LineMicroChart\";\nimport type { $StackedBarMicroChartSettings } from \"sap/suite/ui/microchart/StackedBarMicroChart\";\nimport type { AggregationBindingInfo } from \"sap/ui/base/ManagedObject\";\nimport type { $ControlSettings } from \"sap/ui/core/Control\";\nimport Lib from \"sap/ui/core/Lib\";\nimport type Context from \"sap/ui/model/odata/v4/Context\";\nimport CommonHelper from \"./CommonHelper\";\nimport ConditionalWrapper from \"./controls/ConditionalWrapper\";\nimport TitleLink from \"./internal/TitleLink\";\nimport MicroChartContainer from \"./microchart/MicroChartContainer\";\nimport type { MicroChartAggregation, MicroChartSettings } from \"./microchart/MicroChartHelper\";\nimport MicroChartHelper from \"./microchart/MicroChartHelper\";\n\ntype ErrorObjectType = {\n\tDataPoint_Value?: unknown;\n};\n\nenum NavigationType {\n\t/**\n\t * For External Navigation\n\t */\n\tExternal = \"External\",\n\n\t/**\n\t * For In-Page Navigation\n\t */\n\tInPage = \"InPage\",\n\n\t/**\n\t * For No Navigation\n\t */\n\tNone = \"None\"\n}\n\n/**\n * Building block used to create a MicroChart based on the metadata provided by OData V4.\n * {@link demo:sap/fe/core/fpmExplorer/index.html#/buildingBlocks/microchart/ Overview of Micro Chart Building Block}\n * <br>\n * Usually, a contextPath and metaPath is expected.\n *\n *\n * Usage example:\n * <pre>\n * &lt;macros:MicroChart id=\"MyMicroChart\" contextPath=\"/RootEntity\" metaPath=\"@com.sap.vocabularies.UI.v1.Chart\" /&gt;\n * </pre>\n *  <pre>\n * sap.ui.require([\"sap/fe/macros/MicroChart\"], function(MicroChart) {\n * \t ...\n * \t new MicroChart(\"myMicroChart\", {metaPath:\"@com.sap.vocabularies.UI.v1.Chart\"})\n * })\n * </pre>\n * @alias sap.fe.macros.MicroChart\n * @ui5-metamodel\n * @public\n * @since 1.93.0\n */\n@defineUI5Class(\"sap.fe.macros.MicroChart\", {\n\treturnTypes: [\"sap.fe.macros.microchart.MicroChartContainer\", \"sap.fe.macros.controls.ConditionalWrapper\"]\n})\nexport default class MicroChart extends BuildingBlock<MicroChartContainer> {\n\t/**\n\t * To control the rendering of Title, Subtitle and Currency Labels. When the size is xs then we do\n\t * not see the inner labels of the MicroChart as well.\n\t * @public\n\t */\n\t@property({\n\t\ttype: \"boolean\"\n\t})\n\tpublic showOnlyChart = false;\n\n\t/**\n\t * Metadata path to the  MicroChart.\n\t * @public\n\t */\n\t@property({\n\t\ttype: \"string\",\n\t\trequired: true\n\t})\n\tpublic metaPath!: string;\n\n\t/**\n\t * context path to the MicroChart.\n\t * @public\n\t */\n\t@property({\n\t\ttype: \"string\"\n\t})\n\tpublic contextPath?: string;\n\n\t/**\n\t * Type of navigation, that is, External or InPage\n\t */\n\t@property({\n\t\ttype: \"string\"\n\t})\n\tnavigationType?: NavigationType = NavigationType.None;\n\n\t/**\n\t * Batch group ID along with which this call should be grouped.\n\t */\n\t@property({ type: \"string\" })\n\tbatchGroupId?: string;\n\n\t/**\n\t * Size of the MicroChart\n\t * @public\n\t */\n\t@property({ type: \"string\" })\n\tsize?: string;\n\n\t/**\n\t * Show blank space in case there is no data in the chart\n\t * @public\n\t */\n\t@property({ type: \"boolean\" })\n\thideOnNoData?: boolean = false;\n\n\t@property({ type: \"string\" })\n\ttitle = \"\";\n\n\t@property({ type: \"string\" })\n\tdescription = \"\";\n\n\t@event()\n\ttitlePress!: Function;\n\n\t@property({ type: \"object\" })\n\t_chartTarget!: Chart;\n\n\t@property({ type: \"object\" })\n\t_dataPoint!: DataPoint;\n\n\t@property({ type: \"object\" })\n\t_targetNavigationPath!: Context | undefined;\n\n\t@property({ type: \"object\" })\n\t_microChartDataModelObjectPath!: DataModelObjectPath<Chart | PresentationVariant> | undefined;\n\n\t@property({ type: \"string\" })\n\t_binding!: string;\n\n\t@property({ type: \"object\" })\n\t_sortOrder?: SortOrderType[];\n\n\t@property({ type: \"object\" })\n\t_measureDataPath?: DataModelObjectPath<Measure>;\n\n\t@property({ type: \"boolean\" })\n\tisAnalytics?: boolean;\n\n\tconstructor(settings?: $ControlSettings & PropertiesOf<MicroChart>, others?: PropertiesOf<MicroChart>) {\n\t\tsuper(settings, others);\n\t}\n\n\t/**\n\t * Gets the sortOrder for the microChart as mentioned in the PresentationVariant.\n\t * @param sortingProps Sorters from PresentationVariant.\n\t * @returns SortOrder\n\t */\n\tgetSortOrder(sortingProps: SortOrderType[]): SortOrderType[] {\n\t\treturn sortingProps.map((sortingProp: SortOrderType) => {\n\t\t\treturn {\n\t\t\t\tProperty: sortingProp.Property?.value as unknown as PropertyPath,\n\t\t\t\tDescending: sortingProp.Descending as boolean | undefined,\n\t\t\t\tfullyQualifiedName: \"\",\n\t\t\t\t$Type: CommonAnnotationTypes.SortOrderType\n\t\t\t};\n\t\t});\n\t}\n\n\t/**\n\t * Sets the key with the given value for MicroChart.\n\t * @param key The name of the property to set\n\t * @param value The value to set the property to\n\t * @param suppressInvalidate  If true, the managed object is not marked as changed\n\t * @returns MicroChart\n\t */\n\tsetProperty(key: string, value: string | boolean, suppressInvalidate?: boolean): this {\n\t\tif (!this._applyingSettings && value !== undefined && Object.keys(this.getMetadata().getProperties()).includes(key)) {\n\t\t\tsuper.setProperty(key, value, true);\n\t\t\tif (this.content) {\n\t\t\t\tthis.content.destroy();\n\t\t\t\tthis.content = this.createContent();\n\t\t\t\tthis.createMicroChart();\n\t\t\t}\n\t\t} else {\n\t\t\tsuper.setProperty(key, value, suppressInvalidate);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Overrides the clone method of the UI5 control to ensure that the suite micro chart is created asynchronously on the clone.\n\t *\n\t * Clone is a UI5 core Control method, which is not async and is called in a sync manner throughout UI5.\n\t * Hence we need to create the chart in a fire and forget fashion.\n\t *\n\t * @param idSuffix A suffix to be appended to the cloned element id\n\t * @param localIds An array of local IDs within the cloned hierarchy (internally used)\n\t * @returns The reference to the newly create clone\n\t */\n\tclone(idSuffix?: string | undefined, localIds?: string[]): this {\n\t\tconst clonedMicroChart = super.clone(idSuffix, localIds);\n\t\tclonedMicroChart.createMicroChart();\n\t\treturn clonedMicroChart;\n\t}\n\tpublic async onMetadataAvailable(_ownerComponent: TemplateComponent): Promise<void> {\n\t\tif (!this.content) {\n\t\t\tconst owner = this._getOwner();\n\t\t\tthis.contextPath = this.contextPath ?? owner?.preprocessorContext?.fullContextPath;\n\t\t\tconst odataMetaModel = owner?.getMetaModel();\n\t\t\tthis._microChartDataModelObjectPath = this.getDataModelObjectForMetaPath<Chart | PresentationVariant>(\n\t\t\t\tthis.metaPath,\n\t\t\t\tthis.contextPath\n\t\t\t);\n\t\t\tif (this._microChartDataModelObjectPath?.targetObject?.term === UIAnnotationTerms.PresentationVariant) {\n\t\t\t\tif ((this._microChartDataModelObjectPath.targetObject.SortOrder as unknown as SortOrderType[] | undefined)?.length) {\n\t\t\t\t\tthis._sortOrder = this.getSortOrder(this._microChartDataModelObjectPath.targetObject.SortOrder);\n\t\t\t\t}\n\t\t\t\tthis._microChartDataModelObjectPath = this.getDataModelObjectForMetaPath<Chart>(\n\t\t\t\t\t`${this._microChartDataModelObjectPath.targetObject.Visualizations[0].value}`,\n\t\t\t\t\tgetTargetNavigationPath(this._microChartDataModelObjectPath) + \"/\"\n\t\t\t\t);\n\t\t\t}\n\t\t\tif (this._microChartDataModelObjectPath) {\n\t\t\t\tif (this._microChartDataModelObjectPath.targetObject?.term === UIAnnotationTerms.PresentationVariant) {\n\t\t\t\t\tif (\n\t\t\t\t\t\t(this._microChartDataModelObjectPath.targetObject.SortOrder as unknown as SortOrderType[] | undefined)?.length !=\n\t\t\t\t\t\tnull\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis._sortOrder = this.getSortOrder(this._microChartDataModelObjectPath.targetObject.SortOrder);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis._chartTarget = this._microChartDataModelObjectPath.targetObject as Chart;\n\t\t\t\tthis._measureDataPath = enhanceDataModelPath<Measure>(\n\t\t\t\t\tthis._microChartDataModelObjectPath,\n\t\t\t\t\tthis._chartTarget.Measures[0].value\n\t\t\t\t);\n\t\t\t\tif (MicroChartHelper.shouldRenderMicroChart(this._chartTarget)) {\n\t\t\t\t\tthis._dataPoint = this._chartTarget?.MeasureAttributes[0]?.DataPoint?.$target as DataPoint;\n\t\t\t\t\tthis._targetNavigationPath = odataMetaModel?.createBindingContext(\n\t\t\t\t\t\tgetTargetNavigationPath(this._microChartDataModelObjectPath)\n\t\t\t\t\t) as Context | undefined;\n\n\t\t\t\t\tthis.showOnlyChart = typeof this.showOnlyChart === \"string\" ? this.showOnlyChart === \"true\" : this.showOnlyChart;\n\t\t\t\t\tthis.content = this.createContent();\n\t\t\t\t\tawait this.createMicroChart();\n\t\t\t\t} else {\n\t\t\t\t\tthis.logWarning();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tasync createMicroChart(): Promise<void> {\n\t\tconst chartMap: Record<string, string> = {\n\t\t\t\"UI.ChartType/Bullet\": `sap/suite/ui/microchart/BulletMicroChart`,\n\t\t\t\"UI.ChartType/Donut\": `sap/suite/ui/microchart/RadialMicroChart`,\n\t\t\t\"UI.ChartType/Pie\": `sap/suite/ui/microchart/HarveyBallMicroChart`,\n\t\t\t\"UI.ChartType/BarStacked\": `sap/suite/ui/microchart/StackedBarMicroChart`,\n\t\t\t\"UI.ChartType/Column\": `sap/suite/ui/microchart/ColumnMicroChart`,\n\t\t\t\"UI.ChartType/Bar\": `sap/suite/ui/microchart/ComparisonMicroChart`,\n\t\t\t\"UI.ChartType/Line\": `sap/suite/ui/microchart/LineMicroChart`,\n\t\t\t\"UI.ChartType/Area\": `sap/suite/ui/microchart/AreaMicroChart`\n\t\t};\n\n\t\tconst type1 = this._chartTarget.ChartType;\n\t\tif (Object.keys(chartMap).includes(type1)) {\n\t\t\tconst ChartComponent = (await import(chartMap[type1])).default;\n\t\t\tconst microChartAggregations = await this.getMicroChartAggregations();\n\t\t\tif (this.isAnalytics) {\n\t\t\t\t(this.content?.getAggregation(\"contentTrue\") as MicroChartContainer).setAggregation(\n\t\t\t\t\t\"microChart\",\n\t\t\t\t\t<ChartComponent {...this.getMicroChartProperties()}>{microChartAggregations}</ChartComponent>\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\t(this.content as MicroChartContainer).setAggregation(\n\t\t\t\t\t\"microChart\",\n\t\t\t\t\t<ChartComponent {...this.getMicroChartProperties()}>{microChartAggregations}</ChartComponent>\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tlogWarning(): void {\n\t\tconst errorObject: ErrorObjectType = {};\n\t\tif (this._chartTarget.ChartType === ChartType.Bullet) {\n\t\t\terrorObject[\"DataPoint_Value\"] = this._dataPoint?.Value || undefined;\n\t\t}\n\t\tMicroChartHelper.logWarning(this._chartTarget.ChartType, errorObject);\n\t}\n\n\tgetMicroChartProperties(): Partial<PropertiesOf<MicroChartSettings>> | undefined {\n\t\tlet microChartProperties: MicroChartSettings = {\n\t\t\tsize: this.size,\n\t\t\thideOnNoData: this.hideOnNoData\n\t\t};\n\n\t\tconst dataPointPath = enhanceDataModelPath<DataPointType>(\n\t\t\tthis._microChartDataModelObjectPath as DataModelObjectPath<unknown>,\n\t\t\tthis._chartTarget?.MeasureAttributes[0]?.DataPoint?.value\n\t\t);\n\n\t\tconst microChartAggregations = MicroChartHelper.getAggregationForMicrochart(\n\t\t\tthis._chartTarget.ChartType,\n\t\t\tthis._targetNavigationPath?.getObject(),\n\t\t\tdataPointPath,\n\t\t\tthis._targetNavigationPath?.getObject(\"@sapui.name\"),\n\t\t\tundefined,\n\t\t\tthis._measureDataPath as DataModelObjectPath<Measure>,\n\t\t\tthis._sortOrder as SortOrderType[],\n\t\t\t(this._microChartDataModelObjectPath?.targetObject as Chart)?.Dimensions?.[0]?.value,\n\t\t\ttrue\n\t\t);\n\n\t\tswitch (this._chartTarget.ChartType) {\n\t\t\tcase \"UI.ChartType/Bullet\":\n\t\t\t\tmicroChartProperties = MicroChartHelper.getBulletMicroChartProperties(microChartProperties, this._dataPoint);\n\t\t\t\tbreak;\n\t\t\tcase \"UI.ChartType/Donut\":\n\t\t\t\tmicroChartProperties = MicroChartHelper.getRadialMicroChartProperties(microChartProperties, this._dataPoint);\n\t\t\t\tbreak;\n\n\t\t\tcase \"UI.ChartType/Pie\":\n\t\t\t\tmicroChartProperties = MicroChartHelper.getHarveyMicroChartProperties(microChartProperties, this._dataPoint);\n\t\t\t\tbreak;\n\n\t\t\tcase \"UI.ChartType/BarStacked\":\n\t\t\t\t(microChartProperties as $StackedBarMicroChartSettings).bars = microChartAggregations as unknown as AggregationBindingInfo;\n\t\t\t\tbreak;\n\n\t\t\tcase \"UI.ChartType/Column\":\n\t\t\t\t(microChartProperties as $ColumnMicroChartSettings).columns = MicroChartHelper.getAggregationForMicrochart(\n\t\t\t\t\tthis._chartTarget.ChartType,\n\t\t\t\t\tthis._targetNavigationPath?.getObject(),\n\t\t\t\t\tdataPointPath,\n\t\t\t\t\tthis._targetNavigationPath?.getObject(\"@sapui.name\"),\n\t\t\t\t\tthis._chartTarget?.Dimensions?.[0],\n\t\t\t\t\tthis._measureDataPath as DataModelObjectPath<Measure>,\n\t\t\t\t\tthis._sortOrder as SortOrderType[],\n\t\t\t\t\t(this._microChartDataModelObjectPath?.targetObject as Chart)?.Dimensions?.[0]?.value,\n\t\t\t\t\ttrue\n\t\t\t\t) as AggregationBindingInfo;\n\t\t\t\tbreak;\n\n\t\t\tcase \"UI.ChartType/Bar\":\n\t\t\t\t(microChartProperties as $ComparisonMicroChartSettings).maxValue = this._dataPoint.MaximumValue\n\t\t\t\t\t? compileExpression(constant(this._dataPoint.MaximumValue?.valueOf()))\n\t\t\t\t\t: undefined;\n\t\t\t\t(microChartProperties as $ComparisonMicroChartSettings).minValue = this._dataPoint.MinimumValue\n\t\t\t\t\t? compileExpression(constant(this._dataPoint.MinimumValue?.valueOf()))\n\t\t\t\t\t: undefined;\n\t\t\t\t(microChartProperties as $ComparisonMicroChartSettings).colorPalette = MicroChartHelper.getColorPaletteForMicroChart(\n\t\t\t\t\tthis._dataPoint\n\t\t\t\t);\n\t\t\t\t(microChartProperties as $ComparisonMicroChartSettings).data = microChartAggregations as unknown as AggregationBindingInfo;\n\t\t\t\tbreak;\n\t\t\tcase \"UI.ChartType/Line\":\n\t\t\t\t(microChartProperties as $LineMicroChartSettings).showThresholdLine = false;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t\treturn microChartProperties;\n\t}\n\n\tasync getMicroChartAggregations(): Promise<MicroChartAggregation | undefined> {\n\t\tconst criticalityExpressionForMicrochart = this._dataPoint.Criticality\n\t\t\t? buildExpressionForCriticalityColorMicroChart(this._dataPoint)\n\t\t\t: undefined;\n\t\tif (this._chartTarget.ChartType === ChartType.Bullet) {\n\t\t\treturn MicroChartHelper.getBulletMicroChartAggregations(this._dataPoint, criticalityExpressionForMicrochart);\n\t\t}\n\t\tif (this._chartTarget.ChartType === ChartType.BarStacked) {\n\t\t\treturn MicroChartHelper.getStackMicroChartAggregations(\n\t\t\t\tthis._dataPoint,\n\t\t\t\tthis._measureDataPath,\n\t\t\t\tcriticalityExpressionForMicrochart\n\t\t\t);\n\t\t}\n\t\tif (this._chartTarget.ChartType === ChartType.Pie) {\n\t\t\treturn MicroChartHelper.getHarveyMicroChartAggregations(this._dataPoint, criticalityExpressionForMicrochart);\n\t\t}\n\t\tif (this._chartTarget.ChartType === ChartType.Bar) {\n\t\t\treturn MicroChartHelper.getComparisonMicroChartAggregations(\n\t\t\t\tthis._dataPoint,\n\t\t\t\tcriticalityExpressionForMicrochart,\n\t\t\t\tthis._chartTarget\n\t\t\t);\n\t\t}\n\t\tif (this._chartTarget.ChartType === ChartType.Area) {\n\t\t\treturn MicroChartHelper.getAreaMicroChartAggregations(\n\t\t\t\tthis._chartTarget,\n\t\t\t\tthis._microChartDataModelObjectPath as DataModelObjectPath<Chart | PresentationVariant>,\n\t\t\t\tthis._targetNavigationPath as Context,\n\t\t\t\tthis.showOnlyChart\n\t\t\t);\n\t\t}\n\t\tif (this._chartTarget.ChartType === ChartType.Column) {\n\t\t\treturn MicroChartHelper.getColumnMicroChartAggregations(\n\t\t\t\tthis._dataPoint,\n\t\t\t\tcriticalityExpressionForMicrochart,\n\t\t\t\tthis.showOnlyChart\n\t\t\t);\n\t\t}\n\t\tif (this._chartTarget.ChartType === ChartType.Line) {\n\t\t\tif (this._microChartDataModelObjectPath && this._targetNavigationPath) {\n\t\t\t\treturn MicroChartHelper.getLineMicroChartAggragations(\n\t\t\t\t\tthis._microChartDataModelObjectPath,\n\t\t\t\t\tthis._chartTarget,\n\t\t\t\t\tthis._targetNavigationPath\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn;\n\t}\n\n\tcreateMicroChartId(chartType: string): string | undefined {\n\t\tlet chartIDPrefix;\n\t\tswitch (chartType) {\n\t\t\tcase \"UI.ChartType/Bullet\":\n\t\t\t\tchartIDPrefix = \"BulletMicroChart\";\n\t\t\t\tbreak;\n\t\t\tcase \"UI.ChartType/Donut\":\n\t\t\t\tchartIDPrefix = \"RadialMicroChart\";\n\t\t\t\tbreak;\n\t\t\tcase \"UI.ChartType/Pie\":\n\t\t\t\tchartIDPrefix = \"HarveyBallMicroChart\";\n\t\t\t\tbreak;\n\t\t\tcase \"UI.ChartType/BarStacked\":\n\t\t\t\tchartIDPrefix = \"StackedBarMicroChart\";\n\t\t\t\tbreak;\n\t\t\tcase \"UI.ChartType/Area\":\n\t\t\t\tchartIDPrefix = \"AreaMicroChart\";\n\t\t\t\tbreak;\n\t\t\tcase \"UI.ChartType/Column\":\n\t\t\t\tchartIDPrefix = \"ColumnMicroChart\";\n\t\t\t\tbreak;\n\t\t\tcase \"UI.ChartType/Bar\":\n\t\t\t\tchartIDPrefix = \"ComparisonMicroChart\";\n\t\t\t\tbreak;\n\t\t\tcase \"UI.ChartType/Line\":\n\t\t\t\tchartIDPrefix = \"LineMicroChart\";\n\t\t\t\tbreak;\n\t\t}\n\t\treturn this.createId(chartIDPrefix);\n\t}\n\n\tgetMicroChartContainerProperties(): PropertiesOf<MicroChartContainer> {\n\t\tconst microChartContainerProperties: PropertiesOf<MicroChartContainer> = {\n\t\t\tchartTitle: this.title || (this._chartTarget.Title?.valueOf() as string) || undefined\n\t\t};\n\t\tmicroChartContainerProperties.showOnlyChart = this.showOnlyChart;\n\t\tmicroChartContainerProperties.chartTitle = (this._chartTarget.Title as string) || undefined;\n\t\tmicroChartContainerProperties.chartDescription =\n\t\t\tthis.description || (this._chartTarget.Description?.valueOf() as string) || undefined;\n\n\t\tthis._binding = MicroChartHelper.getBindingExpressionForMicrochart(\n\t\t\tthis._chartTarget.ChartType,\n\t\t\tthis._measureDataPath as DataModelObjectPath<Measure>,\n\t\t\tthis,\n\t\t\tthis._targetNavigationPath?.getObject(),\n\t\t\tthis._targetNavigationPath?.getObject(\"@sapui.name\")\n\t\t);\n\n\t\tmicroChartContainerProperties.uomPath = MicroChartHelper.getUOMPathForMicrochart(\n\t\t\tthis.showOnlyChart,\n\t\t\tthis._measureDataPath,\n\t\t\tthis._chartTarget.ChartType\n\t\t);\n\n\t\tmicroChartContainerProperties.id = this.createMicroChartId(this._chartTarget.ChartType);\n\n\t\tconst chartsWithVisibleProperty = [\"UI.ChartType/Bullet\", \"UI.ChartType/Pie\", \"UI.ChartType/Radial\"];\n\t\tif (chartsWithVisibleProperty.includes(this._chartTarget.ChartType)) {\n\t\t\tmicroChartContainerProperties.visible = compileExpression(\n\t\t\t\tnot(\n\t\t\t\t\tifElse(\n\t\t\t\t\t\tgetExpressionFromAnnotation(this._chartTarget.Measures[0].$target?.annotations.UI?.Hidden),\n\t\t\t\t\t\tconstant(true),\n\t\t\t\t\t\tconstant(false)\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t);\n\t\t} else {\n\t\t\tmicroChartContainerProperties.visible = undefined;\n\t\t}\n\n\t\tif (this._chartTarget.ChartType === ChartType.BarStacked) {\n\t\t\tmicroChartContainerProperties.dataPointQualifiers = MicroChartHelper.getDataPointQualifiersForMicroChart(\n\t\t\t\tthis._chartTarget?.MeasureAttributes[0]?.DataPoint?.value as string\n\t\t\t) as string[] | undefined;\n\t\t}\n\t\tif (this._chartTarget.ChartType === ChartType.Area || this._chartTarget.ChartType === ChartType.Column) {\n\t\t\tmicroChartContainerProperties.dataPointQualifiers = MicroChartHelper.getDataPointQualifiersForMicroChart(\n\t\t\t\tthis._chartTarget?.MeasureAttributes[0]?.DataPoint?.value as string\n\t\t\t) as unknown as string[];\n\t\t\tmicroChartContainerProperties.measures = [\n\t\t\t\t(this._measureDataPath as DataModelObjectPath<Property>)?.targetObject?.name as string\n\t\t\t];\n\t\t}\n\n\t\tif (this._chartTarget.ChartType === ChartType.Line) {\n\t\t\tmicroChartContainerProperties.measures = MicroChartHelper.getMeasurePropertyPaths(\n\t\t\t\tthis._chartTarget,\n\t\t\t\tthis._microChartDataModelObjectPath?.targetEntityType.annotations,\n\t\t\t\t\"Line\",\n\t\t\t\ttrue\n\t\t\t) as string[];\n\n\t\t\tmicroChartContainerProperties.dataPointQualifiers = MicroChartHelper.getDataPointQualifiersForMeasures(\n\t\t\t\tthis._chartTarget,\n\t\t\t\tthis._microChartDataModelObjectPath?.targetEntityType.annotations,\n\t\t\t\t\"Line\",\n\t\t\t\ttrue\n\t\t\t) as string[];\n\t\t}\n\n\t\tif (\n\t\t\tthis._chartTarget.ChartType === ChartType.Area ||\n\t\t\tthis._chartTarget.ChartType === ChartType.Column ||\n\t\t\tthis._chartTarget.ChartType === ChartType.Line\n\t\t) {\n\t\t\tconst dimensionDataPath = enhanceDataModelPath<Property>(\n\t\t\t\tthis._microChartDataModelObjectPath as DataModelObjectPath<Chart | PresentationVariant>,\n\t\t\t\tthis._chartTarget.Dimensions[0].value\n\t\t\t);\n\n\t\t\tmicroChartContainerProperties.dimension = dimensionDataPath?.targetObject?.annotations?.Common?.Text\n\t\t\t\t? (dimensionDataPath?.targetObject?.annotations?.Common?.Text as unknown as PathAnnotationExpression<string>)?.path\n\t\t\t\t: dimensionDataPath?.targetObject?.name;\n\t\t\tmicroChartContainerProperties.measurePrecision = this._dataPoint?.Value?.$target?.precision;\n\t\t\tmicroChartContainerProperties.measureScale = MicroChartHelper.getMeasureScaleForMicroChart(this._dataPoint);\n\t\t\tmicroChartContainerProperties.dimensionPrecision = dimensionDataPath?.targetObject?.precision;\n\t\t\tmicroChartContainerProperties.calendarPattern = MicroChartHelper.getCalendarPattern(\n\t\t\t\tdimensionDataPath?.targetObject?.type as string,\n\t\t\t\tdimensionDataPath?.targetObject?.annotations as PropertyAnnotations,\n\t\t\t\ttrue\n\t\t\t);\n\t\t}\n\t\treturn microChartContainerProperties;\n\t}\n\n\tcreateTitle(titleText: string | undefined): TitleLink | undefined {\n\t\tif (titleText) {\n\t\t\t// The title had this id in template time and we need to maintain the same id.\n\t\t\tconst localLegacyTitleId = ID.generate([\n\t\t\t\t\"fe\",\n\t\t\t\t\"MicroChartLink\",\n\t\t\t\tthis._targetNavigationPath?.getObject(\"@sapui.name\"),\n\t\t\t\tthis._microChartDataModelObjectPath?.targetObject?.term,\n\t\t\t\tthis._microChartDataModelObjectPath?.targetObject?.qualifier\n\t\t\t]);\n\t\t\tconst viewId = this.getPageController()?.getView().getId();\n\t\t\tconst legacyTitleId = `${viewId}--${localLegacyTitleId}`;\n\n\t\t\tconst titleLinkProperties: PropertiesOf<TitleLink> = {\n\t\t\t\tid: legacyTitleId,\n\t\t\t\ttext: titleText\n\t\t\t};\n\t\t\tconst resourceBundle = Lib.getResourceBundleFor(\"sap.fe.macros\");\n\t\t\tif (this.navigationType === \"InPage\") {\n\t\t\t\tconst ariaTranslatedText = resourceBundle?.getText(\"T_COMMON_HEADERDP_TITLE_LINK_INPAGE_ARIA\");\n\t\t\t\ttitleLinkProperties.showAsLink = true;\n\t\t\t\ttitleLinkProperties.linkAriaText = ariaTranslatedText;\n\t\t\t} else if (this.navigationType === \"External\") {\n\t\t\t\tconst showLink = CommonHelper.getHeaderDataPointLinkVisibility(localLegacyTitleId, true);\n\t\t\t\tconst ariaTranslatedText = resourceBundle?.getText(\"M_MICROCHART_TITLE_FRAGMENT_HEADER_MICROCHART_LINK_ARIA\");\n\t\t\t\ttitleLinkProperties.showAsLink = showLink;\n\t\t\t\ttitleLinkProperties.linkAriaText = ariaTranslatedText;\n\t\t\t}\n\t\t\treturn (\n\t\t\t\t<TitleLink\n\t\t\t\t\t{...titleLinkProperties}\n\t\t\t\t\tlinkPress={(pressEvent: Event): void => {\n\t\t\t\t\t\tthis.fireEvent(\"titlePress\", pressEvent);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * The function to create microchart content.\n\t * @returns MicroChartContainer which will contain Title and micro chart content for each of the microchart.\n\t */\n\tcreateContent(): MicroChartContainer {\n\t\tconst isValidChartType = [\n\t\t\t\"UI.ChartType/Bullet\",\n\t\t\t\"UI.ChartType/Donut\",\n\t\t\t\"UI.ChartType/Pie\",\n\t\t\t\"UI.ChartType/BarStacked\",\n\t\t\t\"UI.ChartType/Area\",\n\t\t\t\"UI.ChartType/Column\",\n\t\t\t\"UI.ChartType/Bar\",\n\t\t\t\"UI.ChartType/Line\"\n\t\t].includes(this._chartTarget.ChartType);\n\t\tif (!isValidChartType) {\n\t\t\treturn <Text text=\"This chart type is not supported. Other Types yet to be implemented..\" />;\n\t\t} else if (this.isAnalytics) {\n\t\t\treturn (\n\t\t\t\t<ConditionalWrapper\n\t\t\t\t\tcondition={compileExpression(or(not(pathInModel(\"@$ui5.node.isExpanded\")), equal(pathInModel(\"@$ui5.node.level\"), 0)))}\n\t\t\t\t\tvisible={getExpressionForMeasureUnit(this._dataPoint.Value.$target)}\n\t\t\t\t>\n\t\t\t\t\t{{\n\t\t\t\t\t\tcontentTrue: this.createChartContent(),\n\t\t\t\t\t\tcontentFalse: <Text text=\"*\"></Text>\n\t\t\t\t\t}}\n\t\t\t\t</ConditionalWrapper>\n\t\t\t);\n\t\t} else {\n\t\t\treturn this.createChartContent();\n\t\t}\n\t}\n\n\tcreateChartContent(): MicroChartContainer {\n\t\tconst microChartContainerProperties = {\n\t\t\t...this.getMicroChartContainerProperties(),\n\t\t\tbinding: this._binding\n\t\t};\n\t\treturn (\n\t\t\t<MicroChartContainer {...microChartContainerProperties}>\n\t\t\t\t{{\n\t\t\t\t\tmicroChartTitle: !this.showOnlyChart ? this.createTitle(microChartContainerProperties.chartTitle) : undefined\n\t\t\t\t}}\n\t\t\t</MicroChartContainer>\n\t\t);\n\t}\n}\n"],"mappings":"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","ignoreList":[],"file":"MicroChart-dbg.js"}