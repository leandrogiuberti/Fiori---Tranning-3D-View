{"version":3,"file":"ChartDelegate.js","names":["ChartDelegate","Object","assign","BaseChartDelegate","apiVersion","_loadChart","async","Library","load","name","_handleProperty","oContext","oMDCChart","mEntitySetAnnotations","mKnownAggregatableProps","mCustomAggregates","aProperties","sCriticality","unitOfMeasures","oApplySupported","CommonHelper","parseCustomData","data","sortRestrictionsInfo","getSortRestrictionsInfo","metaModel","getModel","entityTypePath","bindingPath","ModelHelper","getEntitySetPath","filterRestrictions","CommonUtils","getFilterRestrictionsByPath","propertyFilterableData","getFilterableData","NonFilterableProperties","keys","FilterAllowedExpressions","oObj","getObject","getPath","sKey","aModes","getP13nMode","checkForNonfilterableEntitySet","$kind","$isCollection","oPropertyAnnotations","sPath","getMetaContext","aGroupableProperties","GroupableProperties","aAggregatableProperties","AggregatableProperties","bGroupable","checkPropertyType","bAggregatable","customAggregates","length","includes","propertyFilterable","isPropertyFilterable","aAggregateProperties","_createPropertyInfosForAggregatable","$Type","forEach","oAggregateProperty","path","push","aKnownAggregatableProps","aGroupablePropertiesValues","map","oProperty","$PropertyPath","addPropertyToChart","checkPropertyFilterable","undefined","sName","sTextProperty","$Path","bIsNavigationText","Log","error","indexOf","_getSortable","propertyInfo","_getUnitOfMeasures","entityType","entitySetPath","context","createBindingContext","propertyAnnotations","unit","isFilterable","oFilterRestrictionsInfo","isSortable","bIsGroupable","bIsAggregatable","bIsHidden","chartRole","ChartItemRoleType","category","chartData","Array","isArray","record","split","pop","toLowerCase","label","toString","sortable","filterable","groupable","aggregatable","maxConditions","isMultiValueFilterExpression","role","criticality","dataType","visible","textProperty","textFormatter","timeUnitType","_getTimeType","formatOptions","style","key","TimeUnitType","Date","fiscalyear","fiscalyearperiod","yearmonth","yearquarter","yearweek","yearmonthday","bEntitySetFilerable","getMetaModel","Filterable","filter","item","setP13nMode","element","Property","formatText","oValue1","oValue2","sValue","this","typeConfig","typeInstance","formatValue","oTextArrangementAnnotation","$EnumMember","valueFormatters","formatWithBrackets","_updateIllustratedMessage","oChart","illustratedMessageDetail","noDataControl","getNoData","setTitle","title","setDescription","description","setIllustrationType","illustrationType","IllustratedMessageType","NoData","setIllustrationSize","illustrationSize","IllustratedMessageSize","Auto","setChartNoDataIllustratedMessage","chart","bindingInfo","resourceModel","ResourceModelHelper","getResourceModel","illustratedInformation","converterType","getTargetView","getViewData","oChartFilterInfo","ChartUtils","getAllFilterInfo","suffixResourceKey","startsWith","substr","getNoDataIllustratedMessageWithFilters","getText","NoSearchResults","Small","getFilter","search","filters","updateBindingInfo","oBindingInfo","internalBindingContext","getBindingContext","setProperty","oFilter","Element","getElementById","mConditions","getConditions","parameters","oInfo","FilterUtils","getFilterInfo","enableSearch","$search","normalizeSearchTerm","sParameterPath","DelegateUtil","getParametersInfo","oFilterInfo","ChartHelper","getCollectionName","getParent","getChartPropertiesWithoutPrefixes","events","dataRequested","onInternalDataRequested","bind","Filter","and","sorter","getSorters","_checkAndAddDraftFilter","fetchProperties","oModel","_getModel","pCreatePropertyInfos","Promise","resolve","attachModelContextChange","resolver","onModelContextChange","then","oRetrievedModel","_createPropertyInfos","MacrosDelegateUtil","setCachedProperties","oEvent","oData","getSource","detachModelContextChange","sEntitySetPath","oMetaModel","aResults","all","requestObject","oEntityType","getCustomAggregate","sAnno","sAnnoKey","replace","aAnno","mTypeAggregatableProps","sAggregatable","sPropKey","propertyPath","aggregationMethod","fetchCriticality","aDimensions","aMeasures","aChartItems","getItems","getType","getInternalChartNameFromPropertyNameAndKind","getPropertyKey","val","axis1","datapoint","unitPath","sCustom","oItem","merge","rebind","sSearch","oInnerChart","getControlDelegate","getInnerChart","oChartBinding","getBinding","suspend","setAggregation","oInnerChartDelegate","onBeforeRendering","resume","removeEventDelegate","addEventDelegate","fireEvent","_setChart","oChartAPI","setVizProperties","detachSelectData","handleSelectionChange","detachDeselectData","detachDrilledUp","attachSelectData","attachDeselectData","attachDrilledUp","setSelectionMode","getPayload","selectionMode","toUpperCase","_getBindingInfo","_getBindingInfoFromState","oMetadataInfo","getDelegate","payload","oParams","entitySet","chartContextPath","removeItemFromInnerChart","oMDCChartItem","call","fireDeselectData","sortRestrictionsProperty","bIsTransAggregate","FilterOperator","EQ","aFilters","kind","getPropertyFromNameAndKind","mdcChart","getPropertyHelper","getProperty","getFilterDelegate","FilterBarDelegate","addItem","oParentControl","sPropertyInfoName","prop","oFilterItem","bindProperty","setPropertyKey"],"sources":["./ChartDelegate.ts"],"sourcesContent":["import type { EntityType, PropertyPath } from \"@sap-ux/vocabularies-types\";\nimport { CommonAnnotationTerms } from \"@sap-ux/vocabularies-types/vocabularies/Common\";\nimport type { TextArrangement } from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport Log from \"sap/base/Log\";\nimport merge from \"sap/base/util/merge\";\nimport type sapChart from \"sap/chart/Chart\";\nimport TimeUnitType from \"sap/chart/TimeUnitType\";\nimport type { SelectionMode } from \"sap/chart/library\";\nimport type { CompiledBindingToolkitExpression } from \"sap/fe/base/BindingToolkit\";\nimport type { _FilterRestrictions } from \"sap/fe/core/CommonUtils\";\nimport CommonUtils from \"sap/fe/core/CommonUtils\";\nimport type { MetaModelPropertyAnnotations } from \"sap/fe/core/converters/MetaModelConverter\";\nimport type { ChartApplySupported } from \"sap/fe/core/converters/controls/Common/Chart\";\nimport valueFormatters from \"sap/fe/core/formatters/ValueFormatter\";\nimport type {\n\tFilterRestrictionsPropertyInfoType,\n\tSortRestrictionsInfoType,\n\tSortRestrictionsPropertyInfoType\n} from \"sap/fe/core/helpers/MetaModelFunction\";\nimport { getFilterableData, getSortRestrictionsInfo, isMultiValueFilterExpression } from \"sap/fe/core/helpers/MetaModelFunction\";\nimport type { InternalModelContext } from \"sap/fe/core/helpers/ModelHelper\";\nimport ModelHelper from \"sap/fe/core/helpers/ModelHelper\";\nimport ResourceModelHelper from \"sap/fe/core/helpers/ResourceModelHelper\";\nimport type { CollectionBindingInfo } from \"sap/fe/macros/CollectionBindingInfo\";\nimport CommonHelper from \"sap/fe/macros/CommonHelper\";\nimport type { PropertyInfo } from \"sap/fe/macros/DelegateUtil\";\nimport MacrosDelegateUtil from \"sap/fe/macros/DelegateUtil\";\nimport ChartHelper from \"sap/fe/macros/chart/ChartHelper\";\nimport ChartUtils from \"sap/fe/macros/chart/ChartUtils\";\nimport type { IFilterControl } from \"sap/fe/macros/filter/FilterUtils\";\nimport FilterUtils from \"sap/fe/macros/filter/FilterUtils\";\nimport type IllustratedMessage from \"sap/m/IllustratedMessage\";\nimport type { $IllustratedMessageSettings } from \"sap/m/IllustratedMessage\";\nimport IllustratedMessageSize from \"sap/m/IllustratedMessageSize\";\nimport IllustratedMessageType from \"sap/m/IllustratedMessageType\";\nimport type UI5Event from \"sap/ui/base/Event\";\nimport type EventProvider from \"sap/ui/base/EventProvider\";\nimport type { PropertyBindingInfo } from \"sap/ui/base/ManagedObject\";\nimport type Control from \"sap/ui/core/Control\";\nimport type { default as UI5Element } from \"sap/ui/core/Element\";\nimport { default as Element } from \"sap/ui/core/Element\";\nimport Library from \"sap/ui/core/Lib\";\nimport type Chart from \"sap/ui/mdc/Chart\";\nimport type FilterBar from \"sap/ui/mdc/FilterBar\";\nimport type ChartItem from \"sap/ui/mdc/chart/ChartItem\";\nimport type ChartProperty from \"sap/ui/mdc/chart/ChartProperty\";\nimport type Item from \"sap/ui/mdc/chart/Item\";\nimport ChartItemRoleType from \"sap/ui/mdc/enums/ChartItemRoleType\";\nimport type ChartP13nMode from \"sap/ui/mdc/enums/ChartP13nMode\";\nimport DelegateUtil from \"sap/ui/mdc/odata/v4/util/DelegateUtil\";\nimport BaseChartDelegate from \"sap/ui/mdc/odata/v4/vizChart/ChartDelegate\";\nimport type Context from \"sap/ui/model/Context\";\nimport Filter from \"sap/ui/model/Filter\";\nimport FilterOperator from \"sap/ui/model/FilterOperator\";\nimport type ODataMetaModel from \"sap/ui/model/odata/v4/ODataMetaModel\";\nimport type ODataModel from \"sap/ui/model/odata/v4/ODataModel\";\nimport type { ExpandPathType, MetaModelEntitySetAnnotation, MetaModelProperty } from \"types/metamodel_types\";\nimport { type MetaModelEnum } from \"types/metamodel_types\";\nimport type ChartType from \"../Chart\";\nimport FilterBarDelegate from \"../filterBar/FilterBarDelegate\";\n\nconst ChartDelegate = Object.assign({}, BaseChartDelegate);\nBaseChartDelegate.apiVersion = 2;\nChartDelegate._loadChart = async function (): Promise<unknown> {\n\tawait Library.load({ name: \"sap.chart\" });\n\treturn BaseChartDelegate._loadChart();\n};\n\nChartDelegate._handleProperty = function (\n\toContext: Context,\n\toMDCChart: Chart,\n\tmEntitySetAnnotations: MetaModelEntitySetAnnotation,\n\tmKnownAggregatableProps: Record<string, Record<string, { label: string; name: string }>>,\n\tmCustomAggregates: Record<string, unknown>,\n\taProperties: ChartProperty[],\n\tsCriticality: string,\n\tunitOfMeasures: string[]\n): void {\n\tconst oApplySupported = CommonHelper.parseCustomData(oMDCChart.data(\"applySupported\")) as ChartApplySupported;\n\tconst sortRestrictionsInfo = getSortRestrictionsInfo(mEntitySetAnnotations);\n\tconst metaModel = oContext.getModel();\n\tconst entityTypePath = oMDCChart.data(\"entityType\");\n\tconst bindingPath = ModelHelper.getEntitySetPath(entityTypePath);\n\tconst filterRestrictions: _FilterRestrictions = CommonUtils.getFilterRestrictionsByPath(bindingPath, metaModel);\n\tconst propertyFilterableData: Record<string, FilterRestrictionsPropertyInfoType> = {};\n\tgetFilterableData(\n\t\tpropertyFilterableData,\n\t\tfilterRestrictions.NonFilterableProperties,\n\t\tObject.keys(filterRestrictions.FilterAllowedExpressions)\n\t);\n\tconst oObj = oContext.getModel().getObject(oContext.getPath());\n\tconst sKey = oContext.getModel().getObject(`${oContext.getPath()}@sapui.name`) as string;\n\tconst aModes = oMDCChart.getP13nMode();\n\tcheckForNonfilterableEntitySet(oMDCChart, aModes);\n\n\tif (oObj && oObj.$kind === \"Property\") {\n\t\t// ignore (as for now) all complex properties\n\t\t// not clear if they might be nesting (complex in complex)\n\t\t// not clear how they are represented in non-filterable annotation\n\t\t// etc.\n\t\tif (oObj.$isCollection) {\n\t\t\t//Log.warning(\"Complex property with type \" + oObj.$Type + \" has been ignored\");\n\t\t\treturn;\n\t\t}\n\n\t\tconst oPropertyAnnotations = metaModel.getObject(`${oContext.getPath()}@`);\n\t\tconst sPath = metaModel.getObject(\"@sapui.name\", metaModel.getMetaContext(oContext.getPath()));\n\n\t\tconst aGroupableProperties = oApplySupported && oApplySupported.GroupableProperties;\n\t\tconst aAggregatableProperties = oApplySupported && oApplySupported.AggregatableProperties;\n\t\tlet bGroupable = aGroupableProperties ? checkPropertyType(aGroupableProperties, sPath) : false;\n\t\tlet bAggregatable = aAggregatableProperties ? checkPropertyType(aAggregatableProperties, sPath) : false;\n\t\tconst customAggregates = Object.keys(mCustomAggregates);\n\n\t\tif (!aGroupableProperties || (aGroupableProperties && !aGroupableProperties.length)) {\n\t\t\tbGroupable = oPropertyAnnotations[\"@Org.OData.Aggregation.V1.Groupable\"];\n\t\t}\n\t\tif (!aAggregatableProperties || (aAggregatableProperties && !aAggregatableProperties.length)) {\n\t\t\tbAggregatable = oPropertyAnnotations[\"@Org.OData.Aggregation.V1.Aggregatable\"];\n\t\t}\n\t\tif (customAggregates.includes(sKey)) {\n\t\t\tbAggregatable = true;\n\t\t}\n\n\t\t//Right now: skip them, since we can't create a chart from it\n\t\tif (!bGroupable && !bAggregatable) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst propertyFilterable = CommonHelper.isPropertyFilterable(oContext);\n\t\tif (bAggregatable) {\n\t\t\tconst aAggregateProperties = ChartDelegate._createPropertyInfosForAggregatable(\n\t\t\t\toMDCChart,\n\t\t\t\tsKey,\n\t\t\t\toPropertyAnnotations,\n\t\t\t\tfilterRestrictions,\n\t\t\t\tsortRestrictionsInfo,\n\t\t\t\tmKnownAggregatableProps,\n\t\t\t\tmCustomAggregates,\n\t\t\t\toObj.$Type\n\t\t\t);\n\t\t\taAggregateProperties.forEach(function (oAggregateProperty: ChartProperty) {\n\t\t\t\t// if a property is UOM then do not add it to measures\n\t\t\t\tif (!unitOfMeasures.includes(oAggregateProperty.path)) {\n\t\t\t\t\taProperties.push(oAggregateProperty);\n\t\t\t\t}\n\t\t\t});\n\t\t\t//Add transformation aggregated properties to chart properties\n\t\t\tif (aModes && aModes.includes(\"Filter\")) {\n\t\t\t\tconst aKnownAggregatableProps = Object.keys(mKnownAggregatableProps);\n\t\t\t\tconst aGroupablePropertiesValues = aGroupableProperties?.map(\n\t\t\t\t\t(oProperty: { $PropertyPath: string }) => oProperty.$PropertyPath\n\t\t\t\t);\n\t\t\t\t// Add transformation aggregated property to chart so that in the filter dropdown it's visible\n\t\t\t\t// Also mark visibility false as this property should not come up in under chart section of personalization dialog\n\t\t\t\t// if a property is UOM then do not add it to measures\n\t\t\t\tif (\n\t\t\t\t\taKnownAggregatableProps.includes(sKey) &&\n\t\t\t\t\t!aGroupablePropertiesValues?.includes(sKey) &&\n\t\t\t\t\t!unitOfMeasures.includes(sKey)\n\t\t\t\t) {\n\t\t\t\t\taProperties = addPropertyToChart(\n\t\t\t\t\t\taProperties,\n\t\t\t\t\t\tsKey,\n\t\t\t\t\t\toPropertyAnnotations,\n\t\t\t\t\t\tcustomAggregates.includes(sKey) ? false : checkPropertyFilterable(sKey, propertyFilterable, propertyFilterableData),\n\t\t\t\t\t\tfilterRestrictions,\n\t\t\t\t\t\tfalse, // 'isSortable' is set to 'false' to avoid duplicate entries in the sort queue for aggregatable properties. These properties are already queued for sorting in the 'createPropertyInfosForAggregatable' method.\n\t\t\t\t\t\toMDCChart,\n\t\t\t\t\t\tsCriticality,\n\t\t\t\t\t\toObj,\n\t\t\t\t\t\tfalse,\n\t\t\t\t\t\ttrue,\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\ttrue\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (bGroupable) {\n\t\t\tconst sName = sKey || \"\",\n\t\t\t\tsTextProperty = oPropertyAnnotations[\"@\" + CommonAnnotationTerms.Text]\n\t\t\t\t\t? oPropertyAnnotations[\"@\" + CommonAnnotationTerms.Text].$Path\n\t\t\t\t\t: null;\n\t\t\tlet bIsNavigationText = false;\n\t\t\tif (sName && sName.includes(\"/\")) {\n\t\t\t\tLog.error(`$expand is not yet supported. Property: ${sName} from an association cannot be used`);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (sTextProperty && sTextProperty.indexOf(\"/\") > -1) {\n\t\t\t\tLog.error(`$expand is not yet supported. Text Property: ${sTextProperty} from an association cannot be used`);\n\t\t\t\tbIsNavigationText = true;\n\t\t\t}\n\t\t\taProperties = addPropertyToChart(\n\t\t\t\taProperties,\n\t\t\t\tsKey,\n\t\t\t\toPropertyAnnotations,\n\t\t\t\tcheckPropertyFilterable(sKey, propertyFilterable, propertyFilterableData)\n\t\t\t\t\t? (customAggregates.includes(sKey) && unitOfMeasures.includes(sKey)) || !unitOfMeasures.includes(sKey)\n\t\t\t\t\t: false, // UOM property should be filterable if it is marked as custom aggregate as well as groupable\n\t\t\t\tfilterRestrictions,\n\t\t\t\tChartDelegate._getSortable(oMDCChart, sortRestrictionsInfo.propertyInfo[sKey], false),\n\t\t\t\toMDCChart,\n\t\t\t\tsCriticality,\n\t\t\t\toObj,\n\t\t\t\t!customAggregates.includes(sKey) || (customAggregates.includes(sKey) && unitOfMeasures.includes(sKey)) ? true : false, // if a property is UOM, marked as custom aggregate and groupable then show it in dimensions\n\t\t\t\tfalse,\n\t\t\t\tbIsNavigationText\n\t\t\t);\n\t\t}\n\t}\n};\n\n/**\n * Get all the properties which are marked as unit of measure.\n * @param entityType The entity type displayed in the chart\n * @param metaModel  MetaModel\n * @param entitySetPath Entity set path\n * @returns An array of unit of measures\n */\nfunction _getUnitOfMeasures(entityType: EntityType, metaModel: ODataMetaModel, entitySetPath: string): string[] {\n\tconst unitOfMeasures: string[] = [];\n\tfor (const sKey in entityType) {\n\t\tconst context = metaModel.createBindingContext(`${entitySetPath}/${sKey}`);\n\t\tconst propertyAnnotations = metaModel.getObject(`${context?.getPath()}@`);\n\t\tconst unit =\n\t\t\t(propertyAnnotations?.[\"@Org.OData.Measures.V1.ISOCurrency\"] as { $Path: string })?.$Path ||\n\t\t\t(propertyAnnotations?.[\"@Org.OData.Measures.V1.Unit\"] as { $Path: string })?.$Path;\n\t\tif (unit && !unitOfMeasures.includes(unit)) {\n\t\t\tunitOfMeasures.push(unit);\n\t\t}\n\t}\n\treturn unitOfMeasures;\n}\n\n// create properties for chart\nfunction addPropertyToChart(\n\taProperties: ChartProperty[],\n\tsKey: string,\n\toPropertyAnnotations: MetaModelPropertyAnnotations,\n\tisFilterable: boolean,\n\toFilterRestrictionsInfo: _FilterRestrictions,\n\tisSortable: boolean,\n\toMDCChart: Chart,\n\tsCriticality: string,\n\toObj: MetaModelProperty,\n\tbIsGroupable: boolean,\n\tbIsAggregatable: boolean,\n\tbIsNavigationText?: boolean,\n\tbIsHidden?: boolean\n): ChartProperty[] {\n\tlet chartRole = ChartItemRoleType.category;\n\tconst chartData = oMDCChart.data(\"chartDimensionKeyAndRole\");\n\n\tif (Array.isArray(chartData)) {\n\t\tchartData.forEach((record: { [x: string]: string }) => {\n\t\t\tif (record[sKey]) {\n\t\t\t\tchartRole = record[sKey].split(\"/\").pop()?.toLowerCase() || chartRole;\n\t\t\t}\n\t\t});\n\t}\n\n\tconst oProperty: ChartProperty = {\n\t\tname: \"_fe_groupable_\" + sKey,\n\t\tlabel: oPropertyAnnotations[\"@com.sap.vocabularies.Common.v1.Label\"]?.toString() || sKey,\n\t\tsortable: isSortable,\n\t\tfilterable: isFilterable,\n\t\tgroupable: bIsGroupable,\n\t\taggregatable: bIsAggregatable,\n\t\tmaxConditions: isMultiValueFilterExpression(oFilterRestrictionsInfo[\"FilterAllowedExpressions\"]?.[sKey]?.[0]) ? -1 : 1,\n\t\tpath: sKey,\n\t\trole: chartRole, //standard, normally this should be interpreted from UI.Chart annotation\n\t\tcriticality: sCriticality, //To be implemented by FE\n\t\tdataType: oObj.$Type,\n\t\tvisible: bIsHidden ? !bIsHidden : true,\n\t\ttextProperty:\n\t\t\t!bIsNavigationText && oPropertyAnnotations[\"@com.sap.vocabularies.Common.v1.Text\"]\n\t\t\t\t? (oPropertyAnnotations[\"@com.sap.vocabularies.Common.v1.Text\"] as { $Path: string }).$Path\n\t\t\t\t: null, //To be implemented by FE\n\t\ttextFormatter: (oPropertyAnnotations as Record<string, unknown>)[\n\t\t\t\"@com.sap.vocabularies.Common.v1.Text@com.sap.vocabularies.UI.v1.TextArrangement\"\n\t\t] as MetaModelEnum<TextArrangement>\n\t};\n\t// timeUnitType = undefined -> crashes the chart. therefore:\n\tconst timeUnitType = ChartDelegate._getTimeType(oObj, oPropertyAnnotations);\n\tif (timeUnitType) oProperty.timeUnitType = timeUnitType;\n\n\tif (oObj.$Type === \"Edm.DateTimeOffset\" || oObj.$Type === \"Edm.TimeOfDay\") {\n\t\tswitch (oObj.$Type) {\n\t\t\tcase \"Edm.DateTimeOffset\":\n\t\t\t\toProperty.formatOptions = { style: \"medium/short\" };\n\t\t\t\tbreak;\n\t\t\tcase \"Edm.TimeOfDay\":\n\t\t\t\toProperty.formatOptions = { style: \"short\" };\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\taProperties.push(oProperty);\n\treturn aProperties;\n}\n\n/**\n * Check if a property is filterable or not.\n * @param key Property key\n * @param propertyFilterable  Filter restrictions\n * @param propertyFilterableData\n * @returns Boolean value for a property\n */\nfunction checkPropertyFilterable(\n\tkey: string,\n\tpropertyFilterable: boolean | CompiledBindingToolkitExpression,\n\tpropertyFilterableData: Record<string, FilterRestrictionsPropertyInfoType>\n): boolean {\n\tif (propertyFilterable === false) {\n\t\treturn false;\n\t} else if (typeof propertyFilterable === \"string\") {\n\t\t// path based filterable is yet to handle here in future\n\t\treturn true;\n\t} else {\n\t\treturn propertyFilterableData?.[key]?.filterable ?? true;\n\t}\n}\n\nChartDelegate._getTimeType = function (oObj: MetaModelProperty, oPropertyAnnotations: Record<string, unknown>): TimeUnitType | undefined {\n\tswitch (oObj.$Type) {\n\t\tcase \"Edm.Date\":\n\t\t\treturn TimeUnitType.Date;\n\t\tcase \"Edm.String\":\n\t\t\tif (oPropertyAnnotations[\"@\" + CommonAnnotationTerms.IsFiscalYear]) {\n\t\t\t\treturn TimeUnitType.fiscalyear;\n\t\t\t} else if (oPropertyAnnotations[\"@\" + CommonAnnotationTerms.IsFiscalYearPeriod]) {\n\t\t\t\treturn TimeUnitType.fiscalyearperiod;\n\t\t\t} else if (oPropertyAnnotations[\"@\" + CommonAnnotationTerms.IsCalendarYearMonth]) {\n\t\t\t\treturn TimeUnitType.yearmonth;\n\t\t\t} else if (oPropertyAnnotations[\"@\" + CommonAnnotationTerms.IsCalendarYearQuarter]) {\n\t\t\t\treturn TimeUnitType.yearquarter;\n\t\t\t} else if (oPropertyAnnotations[\"@\" + CommonAnnotationTerms.IsCalendarYearWeek]) {\n\t\t\t\treturn TimeUnitType.yearweek;\n\t\t\t} else if (oPropertyAnnotations[\"@\" + CommonAnnotationTerms.IsCalendarDate]) {\n\t\t\t\treturn TimeUnitType.yearmonthday;\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\treturn undefined;\n\t}\n};\n\n// If entityset is non filterable,then from p13n modes remove Filter so that on UI filter option doesn't show up\nfunction checkForNonfilterableEntitySet(oMDCChart: Chart, aModes: (ChartP13nMode | keyof typeof ChartP13nMode)[]): void {\n\tconst bEntitySetFilerable = oMDCChart\n\t\t?.getModel()\n\t\t?.getMetaModel()\n\t\t?.getObject(`${oMDCChart.data(\"targetCollectionPath\")}@Org.OData.Capabilities.V1.FilterRestrictions`)?.Filterable;\n\tif (bEntitySetFilerable !== undefined && !bEntitySetFilerable) {\n\t\taModes = aModes.filter((item: string) => item !== \"Filter\");\n\t\toMDCChart.setP13nMode(aModes);\n\t}\n}\n\n//  check if Groupable /Aggregatable property is present or not\nfunction checkPropertyType(\n\taProperties: (ExpandPathType<PropertyPath> & { Property: ExpandPathType<PropertyPath> })[],\n\tsPath: string\n): true | undefined {\n\tif (aProperties.length) {\n\t\tfor (const element of aProperties) {\n\t\t\tif (element?.$PropertyPath === sPath || element?.Property?.$PropertyPath === sPath) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n}\n\nChartDelegate.formatText = function (oValue1: string, oValue2: string): string {\n\tconst sValue = this.typeConfig?.typeInstance?.formatValue(oValue1, \"string\") || oValue1;\n\n\tif (oValue2) {\n\t\tconst oTextArrangementAnnotation = this.textFormatter;\n\n\t\tif (\n\t\t\t!oTextArrangementAnnotation ||\n\t\t\toTextArrangementAnnotation.$EnumMember === \"com.sap.vocabularies.UI.v1.TextArrangementType/TextFirst\"\n\t\t) {\n\t\t\treturn valueFormatters.formatWithBrackets(oValue2, sValue);\n\t\t}\n\n\t\tif (oTextArrangementAnnotation.$EnumMember === \"com.sap.vocabularies.UI.v1.TextArrangementType/TextLast\") {\n\t\t\treturn valueFormatters.formatWithBrackets(sValue, oValue2);\n\t\t}\n\t}\n\n\treturn oValue2 || sValue;\n};\n\n/**\n * Update the illustrated message with a new title, description, and type.\n * @param oChart Reference to the MDC_Chart\n * @param illustratedMessageDetail Object corresponds to the illustrated message\n */\nChartDelegate._updateIllustratedMessage = function (oChart: Chart, illustratedMessageDetail: $IllustratedMessageSettings): void {\n\tconst noDataControl = oChart.getNoData() as IllustratedMessage;\n\tnoDataControl.setTitle(illustratedMessageDetail.title);\n\tnoDataControl.setDescription(illustratedMessageDetail.description);\n\tnoDataControl.setIllustrationType(illustratedMessageDetail.illustrationType || IllustratedMessageType.NoData);\n\tnoDataControl.setIllustrationSize(illustratedMessageDetail.illustrationSize || IllustratedMessageSize.Auto);\n};\n\n/**\n * We set the illustrated message's title, description, and type based on different conditions.\n * @param chart Reference to the MDC_Chart\n * @param bindingInfo BindingInfo\n */\nChartDelegate.setChartNoDataIllustratedMessage = function (chart: Chart, bindingInfo: PropertyBindingInfo): void {\n\tconst resourceModel = ResourceModelHelper.getResourceModel(chart);\n\tlet illustratedInformation: $IllustratedMessageSettings = {};\n\tconst converterType = CommonUtils.getTargetView(chart).getViewData().converterType;\n\tconst oChartFilterInfo = ChartUtils.getAllFilterInfo(chart);\n\tconst suffixResourceKey = bindingInfo.path.startsWith(\"/\") ? bindingInfo.path.substr(1) : bindingInfo.path;\n\tconst getNoDataIllustratedMessageWithFilters = function (): $IllustratedMessageSettings {\n\t\tif (chart.data(\"multiViews\") === \"true\") {\n\t\t\treturn {\n\t\t\t\ttitle: resourceModel.getText(\"T_ILLUSTRATED_MESSAGE_TITLE_NOSEARCHRESULTS\", undefined, suffixResourceKey),\n\t\t\t\tdescription: resourceModel.getText(\"M_TABLE_AND_CHART_NO_DATA_TEXT_MULTI_VIEW\", undefined, suffixResourceKey),\n\t\t\t\tillustrationType: IllustratedMessageType.NoSearchResults\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\ttitle: resourceModel.getText(\"T_ILLUSTRATED_MESSAGE_TITLE_NOSEARCHRESULTS\", undefined, suffixResourceKey),\n\t\t\tdescription: resourceModel.getText(\"T_TABLE_AND_CHART_NO_DATA_TEXT_WITH_FILTER\", undefined, suffixResourceKey),\n\t\t\tillustrationType: IllustratedMessageType.NoSearchResults,\n\t\t\tillustrationSize: converterType === \"ObjectPage\" ? IllustratedMessageSize.Small : IllustratedMessageSize.Auto\n\t\t};\n\t};\n\n\tif (chart.getFilter() && converterType !== \"ObjectPage\") {\n\t\tif (oChartFilterInfo.search || oChartFilterInfo.filters?.length) {\n\t\t\tillustratedInformation = getNoDataIllustratedMessageWithFilters();\n\t\t}\n\t} else if (oChartFilterInfo.search || oChartFilterInfo.filters?.length) {\n\t\t//check if chart has any personalization filters\n\t\tillustratedInformation = getNoDataIllustratedMessageWithFilters();\n\t} else {\n\t\tillustratedInformation = {\n\t\t\ttitle: resourceModel.getText(\"T_ILLUSTRATED_MESSAGE_TITLE_NODATA\", undefined, suffixResourceKey),\n\t\t\tdescription: resourceModel.getText(\"M_TABLE_AND_CHART_NO_FILTERS_NO_DATA_TEXT\", undefined, suffixResourceKey),\n\t\t\tillustrationType: IllustratedMessageType.NoData,\n\t\t\tillustrationSize: IllustratedMessageSize.Small\n\t\t};\n\t}\n\n\tChartDelegate._updateIllustratedMessage(chart, illustratedInformation);\n};\n\nChartDelegate.updateBindingInfo = function (oChart: Chart, oBindingInfo: CollectionBindingInfo): void {\n\tconst internalBindingContext = oChart.getBindingContext(\"internal\") as InternalModelContext;\n\n\tinternalBindingContext.setProperty(\"isInsightsEnabled\", true);\n\tChartDelegate.setChartNoDataIllustratedMessage(oChart, oBindingInfo);\n\tconst oFilter = Element.getElementById(oChart.getFilter());\n\tconst mConditions = oChart.getConditions();\n\tif (!oBindingInfo) {\n\t\toBindingInfo = {};\n\t}\n\tif (!oBindingInfo.parameters) {\n\t\toBindingInfo.parameters = {};\n\t}\n\tif (oFilter) {\n\t\t// Search\n\t\tconst oInfo = FilterUtils.getFilterInfo(oFilter as IFilterControl, {});\n\t\tconst oApplySupported = CommonHelper.parseCustomData(oChart.data(\"applySupported\")) as ChartApplySupported;\n\t\tif (oApplySupported && oApplySupported.enableSearch && oInfo.search) {\n\t\t\toBindingInfo.parameters.$search = CommonUtils.normalizeSearchTerm(oInfo.search);\n\t\t} else if (oBindingInfo.parameters.$search) {\n\t\t\tdelete oBindingInfo.parameters.$search;\n\t\t}\n\t}\n\tconst sParameterPath = mConditions ? DelegateUtil.getParametersInfo(oFilter, mConditions) : null;\n\tif (sParameterPath) {\n\t\toBindingInfo.path = sParameterPath;\n\t}\n\tconst oFilterInfo = ChartUtils.getAllFilterInfo(oChart);\n\tif (oFilterInfo.bindingPath) {\n\t\toBindingInfo.path = oFilterInfo.bindingPath;\n\t}\n\n\tif (oBindingInfo.path && oChart.getBindingContext()) {\n\t\toBindingInfo.path = ChartHelper.getCollectionName(oBindingInfo.path);\n\t}\n\n\t// remove prefixes so that entityset will match with the property names with these field\n\tif (oFilterInfo.filters) {\n\t\toFilterInfo.filters.forEach((element) => {\n\t\t\tif (element.getPath()) {\n\t\t\t\t(element as unknown as { sPath: string }).sPath = (oChart.getParent() as ChartType).getChartPropertiesWithoutPrefixes(\n\t\t\t\t\telement.getPath()!\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\t}\n\toBindingInfo.events ??= {};\n\toBindingInfo.events.dataRequested = (oChart.getParent() as ChartType).onInternalDataRequested.bind(oChart.getParent());\n\n\toBindingInfo.filters = oFilterInfo.filters.length > 0 ? new Filter({ filters: oFilterInfo.filters, and: true }) : undefined;\n\toBindingInfo.sorter = this.getSorters(oChart);\n\tChartDelegate._checkAndAddDraftFilter(oChart, oBindingInfo);\n};\n\nChartDelegate.fetchProperties = async function (oMDCChart: Chart): Promise<PropertyInfo[]> {\n\tconst oModel = this._getModel(oMDCChart);\n\tlet pCreatePropertyInfos: Promise<PropertyInfo[]>;\n\n\tif (!oModel) {\n\t\tpCreatePropertyInfos = new Promise<ODataModel>((resolve): void => {\n\t\t\toMDCChart.attachModelContextChange(\n\t\t\t\t{\n\t\t\t\t\tresolver: resolve\n\t\t\t\t},\n\t\t\t\tonModelContextChange as (ev: UI5Event) => void,\n\t\t\t\tthis\n\t\t\t);\n\t\t}).then((oRetrievedModel: ODataModel) => {\n\t\t\treturn this._createPropertyInfos(oMDCChart, oRetrievedModel);\n\t\t});\n\t} else {\n\t\tpCreatePropertyInfos = this._createPropertyInfos(oMDCChart, oModel);\n\t}\n\n\treturn pCreatePropertyInfos.then(function (aProperties: PropertyInfo[]) {\n\t\tif (oMDCChart.data) {\n\t\t\toMDCChart.data(\"$mdcChartPropertyInfo\", aProperties);\n\t\t\t// store the properties to fetch during p13n calculation\n\t\t\tMacrosDelegateUtil.setCachedProperties(oMDCChart, aProperties);\n\t\t}\n\t\treturn aProperties;\n\t});\n};\nfunction onModelContextChange(this: typeof ChartDelegate, oEvent: UI5Event<{}, Chart>, oData: { resolver: Function }): void {\n\tconst oMDCChart = oEvent.getSource();\n\tconst oModel = this._getModel(oMDCChart);\n\n\tif (oModel) {\n\t\toMDCChart.detachModelContextChange(onModelContextChange as (ev: UI5Event) => void);\n\t\toData.resolver(oModel);\n\t}\n}\nChartDelegate._createPropertyInfos = async function (oMDCChart: Chart, oModel: ODataModel): Promise<PropertyInfo[]> {\n\tconst sEntitySetPath = `/${oMDCChart.data(\"entitySet\")}`;\n\n\tconst oMetaModel = oModel.getMetaModel();\n\tconst aResults = await Promise.all([oMetaModel.requestObject(`${sEntitySetPath}/`), oMetaModel.requestObject(`${sEntitySetPath}@`)]);\n\tconst aProperties: PropertyInfo[] = [];\n\tconst oEntityType = aResults[0];\n\tconst mEntitySetAnnotations = aResults[1];\n\tconst mCustomAggregates = CommonHelper.parseCustomData(oMDCChart.data(\"customAgg\")) as Record<string, unknown>;\n\tgetCustomAggregate(mCustomAggregates, oMDCChart);\n\tlet sAnno;\n\tfor (const sAnnoKey in mEntitySetAnnotations) {\n\t\tif (sAnnoKey.startsWith(\"@Org.OData.Aggregation.V1.CustomAggregate\")) {\n\t\t\tsAnno = sAnnoKey.replace(\"@Org.OData.Aggregation.V1.CustomAggregate#\", \"\");\n\t\t\tconst aAnno = sAnno.split(\"@\");\n\n\t\t\tif (aAnno.length == 2 && aAnno[1] == \"com.sap.vocabularies.Common.v1.Label\") {\n\t\t\t\tmCustomAggregates[aAnno[0]] = mEntitySetAnnotations[sAnnoKey];\n\t\t\t}\n\t\t}\n\t}\n\tconst mTypeAggregatableProps = CommonHelper.parseCustomData(oMDCChart.data(\"transAgg\")) as Record<\n\t\tstring,\n\t\t{ propertyPath: string; aggregationMethod: string; name: string; label: string }\n\t>;\n\tconst mKnownAggregatableProps: Record<string, Record<string, { name: string; label: string }>> = {};\n\tfor (const sAggregatable in mTypeAggregatableProps) {\n\t\tconst sPropKey = mTypeAggregatableProps[sAggregatable].propertyPath;\n\t\tmKnownAggregatableProps[sPropKey] = mKnownAggregatableProps[sPropKey] || {};\n\t\tmKnownAggregatableProps[sPropKey][mTypeAggregatableProps[sAggregatable].aggregationMethod] = {\n\t\t\tname: mTypeAggregatableProps[sAggregatable].name,\n\t\t\tlabel: mTypeAggregatableProps[sAggregatable].label\n\t\t};\n\t}\n\tconst unitOfMeasures = _getUnitOfMeasures(oEntityType, oMetaModel, sEntitySetPath);\n\tfor (const sKey in oEntityType) {\n\t\tif (sKey.indexOf(\"$\") !== 0) {\n\t\t\tconst criticality = ChartHelper.fetchCriticality(oMetaModel, oMetaModel.createBindingContext(`${sEntitySetPath}/${sKey}`)!);\n\t\t\tChartDelegate._handleProperty(\n\t\t\t\toMetaModel.getMetaContext(`${sEntitySetPath}/${sKey}`),\n\t\t\t\toMDCChart,\n\t\t\t\tmEntitySetAnnotations,\n\t\t\t\tmKnownAggregatableProps,\n\t\t\t\tmCustomAggregates,\n\t\t\t\taProperties,\n\t\t\t\tcriticality,\n\t\t\t\tunitOfMeasures\n\t\t\t);\n\t\t}\n\t}\n\treturn aProperties;\n};\n\nfunction getCustomAggregate(mCustomAggregates: Record<string, unknown>, oMDCChart: Chart): void {\n\tconst aDimensions: string[] = [],\n\t\taMeasures: string[] = [];\n\tif (mCustomAggregates && Object.keys(mCustomAggregates).length >= 1) {\n\t\tconst aChartItems = oMDCChart.getItems();\n\t\tfor (const key in aChartItems) {\n\t\t\tif (aChartItems[key].getType() === \"groupable\") {\n\t\t\t\taDimensions.push(ChartDelegate.getInternalChartNameFromPropertyNameAndKind(aChartItems[key].getPropertyKey(), \"groupable\"));\n\t\t\t} else if (aChartItems[key].getType() === \"aggregatable\") {\n\t\t\t\taMeasures.push(\n\t\t\t\t\tChartDelegate.getInternalChartNameFromPropertyNameAndKind(aChartItems[key].getPropertyKey(), \"aggregatable\")\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\tif (\n\t\t\taMeasures.filter(function (val: string) {\n\t\t\t\treturn aDimensions.includes(val);\n\t\t\t}).length >= 1\n\t\t) {\n\t\t\tLog.error(\"Dimension and Measure has the sameProperty Configured\");\n\t\t}\n\t}\n}\n\nChartDelegate._createPropertyInfosForAggregatable = function (\n\toMDCChart: Chart,\n\tsKey: string,\n\toPropertyAnnotations: MetaModelPropertyAnnotations,\n\toFilterRestrictionsInfo: _FilterRestrictions,\n\tsortRestrictionsInfo: SortRestrictionsInfoType,\n\tmKnownAggregatableProps: Record<string, Record<string, { label: string; name: string }>>,\n\tmCustomAggregates: { [propertyName: string]: unknown },\n\tdataType: string\n): object[] {\n\tconst aAggregateProperties: object[] = [];\n\tif (Object.keys(mKnownAggregatableProps).includes(sKey)) {\n\t\tfor (const sAggregatable in mKnownAggregatableProps[sKey]) {\n\t\t\taAggregateProperties.push({\n\t\t\t\tname: \"_fe_aggregatable_\" + mKnownAggregatableProps[sKey][sAggregatable].name,\n\t\t\t\tlabel:\n\t\t\t\t\tmKnownAggregatableProps[sKey][sAggregatable].label ||\n\t\t\t\t\t`${oPropertyAnnotations[\"@com.sap.vocabularies.Common.v1.Label\"]} (${sAggregatable})` ||\n\t\t\t\t\t`${sKey} (${sAggregatable})`,\n\t\t\t\tsortable: sortRestrictionsInfo.propertyInfo[sKey] ? sortRestrictionsInfo.propertyInfo[sKey].sortable : true,\n\t\t\t\tfilterable: false,\n\t\t\t\tgroupable: false,\n\t\t\t\taggregatable: true,\n\t\t\t\tpath: sKey,\n\t\t\t\tdataType: dataType,\n\t\t\t\taggregationMethod: sAggregatable,\n\t\t\t\tmaxConditions: isMultiValueFilterExpression(oFilterRestrictionsInfo[\"FilterAllowedExpressions\"]?.[sKey]?.[0]) ? -1 : 1,\n\t\t\t\trole: ChartItemRoleType.axis1,\n\t\t\t\tdatapoint: null, //To be implemented by FE\n\t\t\t\tunitPath:\n\t\t\t\t\t(oPropertyAnnotations[\"@Org.OData.Measures.V1.ISOCurrency\"] as { $Path: string })?.$Path ||\n\t\t\t\t\t(oPropertyAnnotations[\"@Org.OData.Measures.V1.Unit\"] as { $Path: string })?.$Path\n\t\t\t});\n\t\t}\n\t}\n\tif (Object.keys(mCustomAggregates).includes(sKey)) {\n\t\tfor (const sCustom in mCustomAggregates) {\n\t\t\tif (sCustom === sKey) {\n\t\t\t\tconst oItem = merge({}, mCustomAggregates[sCustom] as object, {\n\t\t\t\t\tname: \"_fe_aggregatable_\" + sCustom,\n\t\t\t\t\tgroupable: false,\n\t\t\t\t\taggregatable: true,\n\t\t\t\t\tfilterable: false,\n\t\t\t\t\trole: ChartItemRoleType.axis1,\n\t\t\t\t\tpath: sCustom,\n\t\t\t\t\tdataType: dataType,\n\t\t\t\t\tdatapoint: null, //To be implemented by FE\n\t\t\t\t\tunitPath:\n\t\t\t\t\t\t(oPropertyAnnotations[\"@Org.OData.Measures.V1.ISOCurrency\"] as { $Path: string })?.$Path ||\n\t\t\t\t\t\t(oPropertyAnnotations[\"@Org.OData.Measures.V1.Unit\"] as { $Path: string })?.$Path\n\t\t\t\t});\n\t\t\t\taAggregateProperties.push(oItem);\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn aAggregateProperties;\n};\nChartDelegate.rebind = function (oMDCChart: Chart, oBindingInfo: PropertyBindingInfo): void {\n\tconst sSearch = oBindingInfo.parameters.$search;\n\n\tif (sSearch) {\n\t\tdelete oBindingInfo.parameters.$search;\n\t}\n\n\tBaseChartDelegate.rebind(oMDCChart, oBindingInfo);\n\n\tif (sSearch) {\n\t\tconst oInnerChart = (oMDCChart.getControlDelegate() as typeof ChartDelegate).getInnerChart(oMDCChart),\n\t\t\toChartBinding = oInnerChart && oInnerChart.getBinding(\"data\");\n\n\t\t// Temporary workaround until this is fixed in MDCChart / UI5 Chart\n\t\t// In order to avoid having 2 OData requests, we need to suspend the binding before setting some aggregation properties\n\t\t// and resume it once the chart has added other aggregation properties (in onBeforeRendering)\n\t\toChartBinding.suspend();\n\t\toChartBinding.setAggregation({ search: sSearch });\n\n\t\tconst oInnerChartDelegate = {\n\t\t\tonBeforeRendering: function (): void {\n\t\t\t\toChartBinding.resume();\n\t\t\t\toInnerChart.removeEventDelegate(oInnerChartDelegate);\n\t\t\t}\n\t\t};\n\t\toInnerChart.addEventDelegate(oInnerChartDelegate);\n\t}\n\n\toMDCChart.fireEvent(\"bindingUpdated\");\n};\nChartDelegate._setChart = function (oMDCChart: Chart, oInnerChart: sapChart): void {\n\tconst oChartAPI = oMDCChart.getParent() as ChartType;\n\toInnerChart.setVizProperties(oMDCChart.data(\"vizProperties\"));\n\toInnerChart.detachSelectData(oChartAPI.handleSelectionChange.bind(oChartAPI) as (e: UI5Event<object, EventProvider>) => void);\n\toInnerChart.detachDeselectData(oChartAPI.handleSelectionChange.bind(oChartAPI) as (e: UI5Event<object, EventProvider>) => void);\n\toInnerChart.detachDrilledUp(oChartAPI.handleSelectionChange.bind(oChartAPI) as (e: UI5Event<object, EventProvider>) => void);\n\toInnerChart.attachSelectData(oChartAPI.handleSelectionChange.bind(oChartAPI) as (e: UI5Event<object, EventProvider>) => void);\n\toInnerChart.attachDeselectData(oChartAPI.handleSelectionChange.bind(oChartAPI) as (e: UI5Event<object, EventProvider>) => void);\n\toInnerChart.attachDrilledUp(oChartAPI.handleSelectionChange.bind(oChartAPI) as (e: UI5Event<object, EventProvider>) => void);\n\n\toInnerChart.setSelectionMode((oMDCChart.getPayload() as { selectionMode: string }).selectionMode.toUpperCase() as SelectionMode);\n\tBaseChartDelegate._setChart(oMDCChart, oInnerChart);\n};\nChartDelegate._getBindingInfo = function (oMDCChart: Chart): PropertyBindingInfo {\n\tif (this._getBindingInfoFromState(oMDCChart)) {\n\t\treturn this._getBindingInfoFromState(oMDCChart);\n\t}\n\n\tconst oMetadataInfo = (oMDCChart.getDelegate() as { payload: unknown }).payload as { parameters: object; chartContextPath: string };\n\tconst oParams = merge({}, oMetadataInfo.parameters, {\n\t\tentitySet: oMDCChart.data(\"entitySet\")\n\t});\n\treturn {\n\t\tpath: oMetadataInfo.chartContextPath,\n\t\tevents: {\n\t\t\tdataRequested: (oMDCChart.getParent() as ChartType).onInternalDataRequested.bind(oMDCChart.getParent())\n\t\t},\n\t\tparameters: oParams\n\t};\n};\nChartDelegate.removeItemFromInnerChart = function (oMDCChart: Chart, oMDCChartItem: ChartItem): void {\n\tBaseChartDelegate.removeItemFromInnerChart.call(this, oMDCChart, oMDCChartItem);\n\tif (oMDCChartItem.getType() === \"groupable\") {\n\t\tconst oInnerChart = this.getInnerChart(oMDCChart);\n\t\toInnerChart.fireDeselectData();\n\t}\n};\nChartDelegate._getSortable = function (\n\toMDCChart: Chart,\n\tsortRestrictionsProperty: SortRestrictionsPropertyInfoType | undefined,\n\tbIsTransAggregate: boolean\n): boolean {\n\tif (bIsTransAggregate) {\n\t\tif (oMDCChart.data(\"draftSupported\").toString() === \"true\") {\n\t\t\treturn false;\n\t\t} else {\n\t\t\treturn sortRestrictionsProperty ? sortRestrictionsProperty.sortable : true;\n\t\t}\n\t}\n\treturn sortRestrictionsProperty ? sortRestrictionsProperty.sortable : true;\n};\nChartDelegate._checkAndAddDraftFilter = function (oChart: Chart, oBindingInfo: PropertyBindingInfo): void {\n\tif (oChart.data(\"draftSupported\").toString() === \"true\") {\n\t\tif (!oBindingInfo) {\n\t\t\toBindingInfo = {};\n\t\t}\n\t\tif (!oBindingInfo.filters) {\n\t\t\toBindingInfo.filters = [];\n\t\t\toBindingInfo.filters.push(new Filter(\"IsActiveEntity\", FilterOperator.EQ, true));\n\t\t} else {\n\t\t\toBindingInfo.filters?.aFilters?.push(new Filter(\"IsActiveEntity\", FilterOperator.EQ, true));\n\t\t}\n\t}\n};\n\n/**\n * This function returns an ID which should be used in the internal chart for the measure or dimension.\n * For standard cases, this is just the ID of the property.\n * If it is necessary to use another ID internally inside the chart (e.g. on duplicate property IDs) this method can be overwritten.\n * In this case, <code>getPropertyFromNameAndKind</code> needs to be overwritten as well.\n * @param name ID of the property\n * @param kind Type of the property (measure or dimension)\n * @returns Internal ID for the sap.chart.Chart\n */\nChartDelegate.getInternalChartNameFromPropertyNameAndKind = function (name: string, kind: string): string {\n\treturn name.replace(\"_fe_\" + kind + \"_\", \"\");\n};\n\n/**\n * This maps an id of an internal chart dimension or measure & type of a property to its corresponding property entry.\n * @param name ID of internal chart measure or dimension\n * @param kind The kind of property that is used\n * @param mdcChart Reference to the MDC_Chart\n * @returns PropertyInfo object\n */\nChartDelegate.getPropertyFromNameAndKind = function (name: string, kind: string, mdcChart: Chart): string {\n\treturn mdcChart.getPropertyHelper().getProperty(\"_fe_\" + kind + \"_\" + name);\n};\n\n/**\n * Provide the chart's filter delegate to provide basic filter functionality such as adding FilterFields.\n * @returns Object for the personalization of the chart filter\n */\nChartDelegate.getFilterDelegate = function (): object {\n\treturn Object.assign(\n\t\t{\n\t\t\tapiVersion: 2\n\t\t},\n\t\tFilterBarDelegate,\n\t\t{\n\t\t\taddItem: async function (oParentControl: Control, sPropertyInfoName: string): Promise<UI5Element | undefined> {\n\t\t\t\tconst prop = ChartDelegate.getInternalChartNameFromPropertyNameAndKind(sPropertyInfoName, \"groupable\");\n\t\t\t\treturn FilterBarDelegate.addItem(oParentControl as FilterBar, prop).then((oFilterItem) => {\n\t\t\t\t\t(oFilterItem as UI5Element | undefined)?.bindProperty(\"conditions\", {\n\t\t\t\t\t\tpath: \"$filters>/conditions/\" + sPropertyInfoName\n\t\t\t\t\t});\n\t\t\t\t\t(oFilterItem as unknown as Item)?.setPropertyKey(sPropertyInfoName);\n\t\t\t\t\treturn oFilterItem as UI5Element | undefined;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t);\n};\n\nexport default ChartDelegate;\n"],"mappings":"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","ignoreList":[]}