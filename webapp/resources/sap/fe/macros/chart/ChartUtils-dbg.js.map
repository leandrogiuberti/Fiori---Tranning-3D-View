{"version":3,"names":["ChartUtils","getChartSelections","oMdcChart","bClearSelections","getChartModel","aVizSelections","getChartFilters","aFilters","Filter","setChartFilters","oDrillStack","oChart","getControlDelegate","getInnerChart","aChartFilters","aVisibleDimensions","addChartFilters","aSelectedData","item","aDimFilters","i","sPath","sValue","data","undefined","push","path","operator","FilterOperator","EQ","value1","length","getVizSelection","getVisibleDimensions","aDimensions","getDimensionsFromDrillStack","toString","aDrillStackKeys","Object","keys","aPrevDrillStackData","getFilterBarFilterInfo","FilterUtil","getFilterInfo","getFilter","targetControl","getAllFilterInfo","oFilters","aP13nProperties","Utils","getP13nFilters","selectionPresentationVariantPath","CommonHelper","parseCustomData","aSelctionVariant","CommonUtils","getFiltersFromAnnotation","getFilters","filters","forEach","element","filterValue","getChartSelectedData","aSelectedPoints","getSelectionBehavior","getSelectedDataPoints","dataPoints","getSelectedCategories","categories","getSelectedSeries","series","vData","oInternalModelContext","getBindingContext","setProperty","getObject","aCurrentDrillStack","getDrillStack","aCurrentDrillView","pop","dimension","_getVizFrame","vizSelection"],"sourceRoot":".","sources":["ChartUtils.ts"],"sourcesContent":["import type Chart from \"sap/chart/Chart\";\nimport CommonUtils from \"sap/fe/core/CommonUtils\";\nimport type { InternalModelContext } from \"sap/fe/core/helpers/ModelHelper\";\nimport FilterUtil from \"sap/fe/macros/filter/FilterUtils\";\nimport type MDCChart from \"sap/ui/mdc/Chart\";\nimport type ChartDelegate from \"sap/ui/mdc/ChartDelegate\";\nimport Filter from \"sap/ui/model/Filter\";\nimport FilterOperator from \"sap/ui/model/FilterOperator\";\nimport type ODataV4Context from \"sap/ui/model/odata/v4/Context\";\nimport CommonHelper from \"../CommonHelper\";\n\nimport type { InternalBindingInfo } from \"../table/Utils\";\nimport Utils from \"../table/Utils\";\n\ntype VizSelection = { data: Record<string, unknown> };\n\nconst ChartUtils = {\n\t/**\n\t * Method that returns the chart filters stored in the UI model.\n\t * @param oMdcChart The MDC_Chart control\n\t * @param bClearSelections Clears chart selections in the UI model if true\n\t * @returns The chart selections\n\t */\n\tgetChartSelections: function (oMdcChart: MDCChart, bClearSelections?: boolean): unknown {\n\t\t// get chart selections\n\t\tif (bClearSelections) {\n\t\t\tthis.getChartModel(oMdcChart, \"\", {});\n\t\t}\n\t\tconst aVizSelections = this.getChartModel(oMdcChart, \"filters\");\n\t\treturn aVizSelections || [];\n\t},\n\t/**\n\t * Method that returns the chart selections as a filter.\n\t * @param oMdcChart The MDC_Chart control\n\t * @returns Filter containing chart selections\n\t */\n\tgetChartFilters: function (oMdcChart: MDCChart): Filter {\n\t\t// get chart selections as a filter\n\t\tconst aFilters = this.getChartSelections(oMdcChart) || [];\n\t\treturn new Filter(aFilters);\n\t},\n\t/**\n\t * Method that sets the chart selections as in the UI model.\n\t * @param oMdcChart The MDC_Chart control\n\t */\n\tsetChartFilters: function (oMdcChart: MDCChart): void {\n\t\t// saving selections in each drill stack for future use\n\t\tconst oDrillStack: Record<string, VizSelection[]> = (this.getChartModel(oMdcChart, \"drillStack\") || {}) as Record<\n\t\t\tstring,\n\t\t\tVizSelection[]\n\t\t>;\n\t\tconst oChart = (oMdcChart.getControlDelegate() as ChartDelegate).getInnerChart(oMdcChart) as Chart & {\n\t\t\t_getVizFrame: () => { vizSelection: () => VizSelection[] };\n\t\t};\n\t\tconst aChartFilters: unknown[] = [];\n\t\tlet aVisibleDimensions: string[];\n\n\t\tfunction addChartFilters(aSelectedData: VizSelection[]): void {\n\t\t\tfor (const item in aSelectedData) {\n\t\t\t\tconst aDimFilters = [];\n\t\t\t\tfor (const i in aVisibleDimensions) {\n\t\t\t\t\tconst sPath = aVisibleDimensions[i];\n\t\t\t\t\tconst sValue = aSelectedData[item].data[sPath];\n\t\t\t\t\tif (sValue !== undefined) {\n\t\t\t\t\t\taDimFilters.push(\n\t\t\t\t\t\t\tnew Filter({\n\t\t\t\t\t\t\t\tpath: sPath,\n\t\t\t\t\t\t\t\toperator: FilterOperator.EQ,\n\t\t\t\t\t\t\t\tvalue1: sValue\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (aDimFilters.length > 0) {\n\t\t\t\t\taChartFilters.push(new Filter(aDimFilters, true));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (oChart) {\n\t\t\tconst aVizSelections = this.getVizSelection(oChart);\n\t\t\taVisibleDimensions = oChart.getVisibleDimensions();\n\t\t\tconst aDimensions = this.getDimensionsFromDrillStack(oChart);\n\t\t\tif (aDimensions.length > 0) {\n\t\t\t\tthis.getChartModel(oMdcChart, \"drillStack\", {});\n\t\t\t\toDrillStack[aDimensions.toString()] = aVizSelections;\n\t\t\t\tthis.getChartModel(oMdcChart, \"drillStack\", oDrillStack);\n\t\t\t}\n\t\t\tif (aVizSelections.length > 0) {\n\t\t\t\t// creating filters with selections in the current drillstack\n\t\t\t\taddChartFilters(aVizSelections);\n\t\t\t} else {\n\t\t\t\t// creating filters with selections in the previous drillstack when there are no selections in the current drillstack\n\t\t\t\tconst aDrillStackKeys = Object.keys(oDrillStack) || [];\n\t\t\t\tconst aPrevDrillStackData = oDrillStack[aDrillStackKeys[aDrillStackKeys.length - 2]] || [];\n\t\t\t\taddChartFilters(aPrevDrillStackData);\n\t\t\t}\n\t\t\tthis.getChartModel(oMdcChart, \"filters\", aChartFilters);\n\t\t}\n\t},\n\t/**\n\t * Method that returns the chart selections as a filter.\n\t * @param oChart The inner chart control\n\t * @returns The filters in the filter bar\n\t */\n\tgetFilterBarFilterInfo: function (oChart: MDCChart): InternalBindingInfo {\n\t\treturn FilterUtil.getFilterInfo(oChart.getFilter(), {\n\t\t\ttargetControl: oChart\n\t\t});\n\t},\n\t/**\n\t * Method that returns the filters for the chart and filter bar.\n\t * @param oChart The inner chart control\n\t * @returns The new filter containing the filters for both the chart and the filter bar\n\t */\n\tgetAllFilterInfo: function (oChart: MDCChart): InternalBindingInfo {\n\t\tconst oFilters = this.getFilterBarFilterInfo(oChart);\n\t\tconst aChartFilters = this.getChartFilters(oChart);\n\t\t// Get filters added through personalization dialog filter option\n\t\tconst aP13nProperties = Utils.getP13nFilters(oChart);\n\t\t// Retrieve selection presentation variant path from custom data\n\t\tconst selectionPresentationVariantPath = CommonHelper.parseCustomData(oChart.data(\"selectionPresentationVariantPath\"))\n\t\t\t? (CommonHelper.parseCustomData(oChart.data(\"selectionPresentationVariantPath\")) as { data?: string }).data\n\t\t\t: \"\";\n\t\t// Check if SV is present in SPV, if yes get the Sv values\n\t\tconst aSelctionVariant = selectionPresentationVariantPath\n\t\t\t? CommonUtils.getFiltersFromAnnotation(oChart, selectionPresentationVariantPath)\n\t\t\t: null;\n\n\t\tif (aChartFilters && aChartFilters.getFilters()?.length) {\n\t\t\toFilters.filters.push(aChartFilters);\n\t\t}\n\n\t\tif (aP13nProperties.length > 0) {\n\t\t\taP13nProperties.forEach((element) => {\n\t\t\t\tconst filters = element.getFilters();\n\t\t\t\tif (filters?.length && filters?.length > 0) {\n\t\t\t\t\t// if we filter using more than one field\n\t\t\t\t\tfilters.forEach((filterValue) => {\n\t\t\t\t\t\toFilters.filters.push(filterValue);\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\t// if we filter using only one field\n\t\t\t\t\toFilters.filters.push(element);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif (aSelctionVariant && aSelctionVariant.length > 0) {\n\t\t\taSelctionVariant.forEach((filterValue) => {\n\t\t\t\toFilters.filters.push((filterValue as unknown as { aFilters: Filter[] }).aFilters[0]);\n\t\t\t});\n\t\t}\n\n\t\treturn oFilters;\n\t},\n\n\t/**\n\t * Method that returns selected data in the chart.\n\t * @param oChart The inner chart control\n\t * @returns The selected chart data\n\t */\n\tgetChartSelectedData: function (oChart: Chart): { context: ODataV4Context }[] {\n\t\tlet aSelectedPoints: { context: ODataV4Context }[] = [];\n\t\t// eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check\n\t\tswitch (oChart.getSelectionBehavior()) {\n\t\t\tcase \"DATAPOINT\":\n\t\t\t\taSelectedPoints = (oChart.getSelectedDataPoints() as { dataPoints: { context: ODataV4Context }[] }).dataPoints;\n\t\t\t\tbreak;\n\t\t\tcase \"CATEGORY\":\n\t\t\t\taSelectedPoints = (oChart.getSelectedCategories() as { categories: { context: ODataV4Context }[] }).categories;\n\t\t\t\tbreak;\n\t\t\tcase \"SERIES\":\n\t\t\t\taSelectedPoints = (oChart.getSelectedSeries() as { series: { context: ODataV4Context }[] }).series;\n\t\t\t\tbreak;\n\t\t}\n\t\treturn aSelectedPoints;\n\t},\n\t/**\n\t * Method to get filters, drillstack and selected contexts in the UI model.\n\t * Can also be used to set data in the model.\n\t * @param oMdcChart The MDC_Chart control\n\t * @param sPath The path in the UI model from which chart data is to be set/fetched\n\t * @param vData The chart info to be set\n\t * @returns The chart info (filters/drillstack/selectedContexts)\n\t */\n\tgetChartModel: function (oMdcChart: MDCChart, sPath: string, vData?: object | unknown[]): boolean | unknown {\n\t\tconst oInternalModelContext = oMdcChart.getBindingContext(\"internal\") as InternalModelContext;\n\t\tif (!oInternalModelContext) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (vData) {\n\t\t\toInternalModelContext.setProperty(sPath, vData);\n\t\t}\n\t\treturn oInternalModelContext && oInternalModelContext.getObject(sPath);\n\t},\n\t/**\n\t * Method to fetch the current drillstack dimensions.\n\t * @param oChart The inner chart control\n\t * @returns The current drillstack dimensions\n\t */\n\tgetDimensionsFromDrillStack: function (oChart: Chart): string[] {\n\t\tconst aCurrentDrillStack = oChart.getDrillStack() || [];\n\t\tconst aCurrentDrillView = (aCurrentDrillStack.pop() || {}) as { dimension: string[] };\n\t\treturn aCurrentDrillView.dimension || [];\n\t},\n\t/**\n\t * Method to fetch chart selections.\n\t * @param oChart The inner chart control\n\t * @returns The chart selections\n\t */\n\tgetVizSelection: function (oChart: Chart & { _getVizFrame: () => { vizSelection: () => VizSelection[] } }): VizSelection[] {\n\t\treturn (oChart && oChart._getVizFrame() && oChart._getVizFrame().vizSelection()) || [];\n\t}\n};\n\nexport default ChartUtils;\n"],"mappings":"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","ignoreList":[],"file":"ChartUtils-dbg.js"}