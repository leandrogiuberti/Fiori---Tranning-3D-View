{"version":3,"file":"useMDXComponents.js","names":["p","strValue","content","Array","isArray","children","map","child","output","getMetadata","getName","getHref","getText","getValue","join","_jsx","FormattedText","htmlText","class","wrapper","Page","h1","Title","text","level","TitleLevel","H1","a","ul","ulContent","li","h2","H2","pre","BuildingBlockPlayground","inValue","sourceHBox","createReference","binding","path","undefined","target","Panel","headerText","HBox","ref","bindElement","macroLibrary","register","fragmentOrPromise","XMLPreprocessor","process","parseXMLString","name","MDXViewLoader","preprocessorData","Promise","resolve","then","async","owner","Component","getOwnerComponentFor","getRootControl","Fragment","load","definition","fragment","firstElementChild","containingView","fragmentContent","current","removeAllItems","addItem","catch","err","Log","error","CodeBlock","snippet","trim","lineCount","Math","max","split","length","type","className","myCodeEditor","CodeEditor","lineNumbers","editable","maxLines","height","width","setValue","source","fetch","res","splittedText","start","slice","end","newLineCount","setMaxLines","e","message","provideComponenents","code"],"sources":["./useMDXComponents.tsx"],"sourcesContent":["import Log from \"sap/base/Log\";\nimport { createReference } from \"sap/fe/base/ClassSupport\";\nimport MDXViewLoader from \"sap/fe/base/jsx-runtime/ViewLoader\";\nimport { parseXMLString } from \"sap/fe/core/buildingBlocks/templating/BuildingBlockTemplateProcessor\";\n// eslint-disable-next-line @typescript-eslint/no-restricted-imports\nimport macroLibrary from \"sap/fe/macros/macroLibrary\";\nimport FormattedText from \"sap/m/FormattedText\";\nimport HBox from \"sap/m/HBox\";\nimport type Link from \"sap/m/Link\";\nimport Page from \"sap/m/Page\";\nimport Panel from \"sap/m/Panel\";\nimport Title from \"sap/m/Title\";\n// eslint-disable-next-line @typescript-eslint/no-restricted-imports\nimport CodeEditor from \"sap/ui/codeeditor/CodeEditor\";\nimport Component from \"sap/ui/core/Component\";\nimport type Control from \"sap/ui/core/Control\";\nimport Fragment from \"sap/ui/core/Fragment\";\nimport type UIComponent from \"sap/ui/core/UIComponent\";\nimport { TitleLevel } from \"sap/ui/core/library\";\nimport type View from \"sap/ui/core/mvc/View\";\nimport XMLPreprocessor from \"sap/ui/core/util/XMLPreprocessor\";\nfunction p(strValue: { children: (string | Control)[] }): string {\n\tconst content = Array.isArray(strValue.children)\n\t\t? strValue.children\n\t\t\t\t.map((child: string | Control) => {\n\t\t\t\t\tlet output;\n\t\t\t\t\tif (typeof child === \"string\") {\n\t\t\t\t\t\toutput = child;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tswitch (child.getMetadata().getName()) {\n\t\t\t\t\t\t\tcase \"sap.m.Link\":\n\t\t\t\t\t\t\t\toutput = `<a href=\"${(child as Link).getHref()}\">${(child as Link).getText()}</a>`;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase \"sap.ui.codeeditor.CodeEditor\":\n\t\t\t\t\t\t\t\toutput = `<code>${(child as CodeEditor).getValue()}</code>`;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn output;\n\t\t\t\t})\n\t\t\t\t.join(\"\")\n\t\t: strValue.children;\n\treturn <FormattedText htmlText={content} class={\"sapUiTinyMarginBottom\"} />;\n}\n\nfunction wrapper(strValue: { children: Control[] }): Page {\n\treturn (<Page class={\"sapUiContentPadding\"}>{{ content: strValue.children }}</Page>) as Page;\n}\nfunction h1(strValue: { children: string }): string {\n\treturn <Title text={strValue.children} level={TitleLevel.H1} class={\"sapUiTinyMarginBottom\"} />;\n}\nfunction a(strValue: { href: string; children: string }): string {\n\treturn `<a href={strValue.href}>${strValue.children}</a>`;\n}\nfunction ul(strValue: { children: string | string[] }): string {\n\tconst ulContent = `<ul>${Array.isArray(strValue.children) ? strValue.children.join(\"\") : strValue.children}</ul>`;\n\treturn <FormattedText htmlText={ulContent} />;\n}\nfunction li(strValue: { children: string | string[] }): string {\n\treturn `<li>${Array.isArray(strValue.children) ? strValue.children.join(\"\") : strValue.children}</li>`;\n}\nfunction h2(strValue: { children: string | string[] }): string {\n\treturn <Title text={strValue.children} level={TitleLevel.H2} class={\"sapUiSmallMarginTop sapUiTinyMarginBottom\"} />;\n}\nfunction pre(content: { children: string }): string {\n\treturn content.children;\n}\n\nfunction BuildingBlockPlayground(inValue: { binding: string; headerText: string; children: string }): Control {\n\tconst sourceHBox = createReference<HBox>();\n\tconst binding = inValue.binding ? { path: inValue.binding } : undefined;\n\tconst target = (\n\t\t<Panel headerText={inValue.headerText || \"\"} class={\"sapUiSmallMarginTop\"}>\n\t\t\t<HBox ref={sourceHBox}></HBox>\n\t\t</Panel>\n\t);\n\t// \t<TabContainer>\n\t// \t\t{{\n\t// \t\t\titems: [\n\t// \t\t\t\t<TabContainerItem name={\"Sample\"}>{{ content:  }},</TabContainerItem>,\n\t// \t\t\t\t<TabContainerItem name={\"Source\"}>\n\t// \t\t\t\t\t{{\n\t// \t\t\t\t\t\tcontent: (\n\t// \t\t\t\t\t\t\t<CodeBlock editable={false} lineNumbers={true} type={\"xml\"} lineCount={10}>\n\t// \t\t\t\t\t\t\t\t{inValue.children}\n\t// \t\t\t\t\t\t\t</CodeBlock>\n\t// \t\t\t\t\t\t)\n\t// \t\t\t\t\t}}\n\t// \t\t\t\t</TabContainerItem>\n\t// \t\t\t]\n\t// \t\t}}\n\t// \t</TabContainer>\n\t// );\n\tif (binding) {\n\t\ttarget.bindElement(binding);\n\t}\n\tmacroLibrary.register();\n\tconst fragmentOrPromise = XMLPreprocessor.process(\n\t\tparseXMLString(`<root>${inValue.children}</root>`, true)[0],\n\t\t{ name: \"myBuildingBlockFragment\" },\n\t\tMDXViewLoader.preprocessorData\n\t);\n\tPromise.resolve(fragmentOrPromise)\n\t\t.then(async (fragment: Element) => {\n\t\t\tconst owner = (Component.getOwnerComponentFor(target) as UIComponent) ?? { getRootControl: (): unknown => undefined };\n\t\t\treturn Fragment.load({\n\t\t\t\tdefinition: fragment.firstElementChild as unknown as string,\n\t\t\t\tcontainingView: owner.getRootControl() as unknown as View\n\t\t\t});\n\t\t})\n\t\t.then((fragmentContent: Control | Control[]): void => {\n\t\t\tsourceHBox.current?.removeAllItems();\n\t\t\tsourceHBox.current?.addItem(fragmentContent as Control);\n\t\t\treturn;\n\t\t})\n\t\t.catch((err: unknown): void => {\n\t\t\tLog.error(err as string);\n\t\t});\n\treturn target;\n}\nfunction CodeBlock(inValue: {\n\tchildren: string;\n\tlineNumbers?: boolean;\n\ttype?: string;\n\teditable?: boolean;\n\tlineCount?: number;\n\tsource?: string;\n\tstart?: number;\n\tend?: number;\n\tclassName?: string;\n}): CodeEditor {\n\tconst snippet = inValue.children?.trim() || \"\";\n\tconst lineCount = inValue.lineCount || Math.max(snippet.split(\"\\n\")?.length, 3);\n\tconst type = inValue.type || inValue?.className?.split(\"-\")[1] || \"js\";\n\tconst myCodeEditor = (\n\t\t<CodeEditor\n\t\t\tclass=\"sapUiTinyMargin\"\n\t\t\tlineNumbers={inValue.lineNumbers || false}\n\t\t\ttype={type}\n\t\t\teditable={inValue.editable || false}\n\t\t\tmaxLines={lineCount}\n\t\t\theight={\"auto\"}\n\t\t\twidth={\"98%\"}\n\t\t></CodeEditor>\n\t);\n\tmyCodeEditor.setValue(snippet);\n\tif (inValue.source) {\n\t\tfetch(inValue.source)\n\t\t\t.then(async (res) => res.text())\n\t\t\t.then((text) => {\n\t\t\t\tlet splittedText = text.split(\"\\n\");\n\t\t\t\tif (inValue.start) {\n\t\t\t\t\tsplittedText = splittedText.slice(inValue.start - 1, inValue.end);\n\t\t\t\t}\n\t\t\t\tconst newLineCount = Math.max(splittedText.length, 3);\n\t\t\t\tmyCodeEditor.setMaxLines(newLineCount);\n\t\t\t\tmyCodeEditor.setValue(splittedText.join(\"\\n\"));\n\t\t\t\treturn;\n\t\t\t})\n\t\t\t.catch((e) => {\n\t\t\t\tmyCodeEditor.setValue(e.message);\n\t\t\t});\n\t}\n\treturn myCodeEditor;\n}\n\nconst provideComponenents = function (): {\n\twrapper: Function;\n\tp: Function;\n\ta: Function;\n\th1: Function;\n\th2: Function;\n\tul: Function;\n\tli: Function;\n\tpre: Function;\n\tcode: Function;\n\tCodeBlock: Function;\n\tBuildingBlockPlayground: Function;\n} {\n\treturn {\n\t\twrapper: wrapper,\n\t\tp: p,\n\t\ta: a,\n\t\th1: h1,\n\t\th2: h2,\n\t\tul: ul,\n\t\tli: li,\n\t\tpre: pre,\n\t\tcode: CodeBlock,\n\t\tCodeBlock: CodeBlock,\n\t\tBuildingBlockPlayground: BuildingBlockPlayground\n\t};\n};\nexport default provideComponenents;\n"],"mappings":"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","ignoreList":[]}