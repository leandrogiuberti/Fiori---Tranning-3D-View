{"version":3,"names":["MessageButton","_dec","defineUI5Class","_dec2","event","_class","_class2","_BuildingBlock","idOrSettings","settings","_this","call","_initializerDefineProperty","_descriptor","_messageItemMessageDetailMap","_exports","_inheritsLoose","_proto","prototype","onMetadataAvailable","content","createContent","_messageModel","Messaging","getMessageModel","_mmPropertyBinding","bindProperty","attachChange","processMessages","eventDelegate","onBeforeRendering","removeEventDelegate","addEventDelegate","messages","getData","messageDetails","reduce","reducedMessages","message","isBound","getTargets","length","isMessageTechnical","getTechnical","push","getPageController","messageHandler","beforeShowMessageButton","adjustMessageButtonProperties","messagePriorityMap","Error","Warning","Success","Information","None","availableHighestPriority","errorCount","messageItems","messageDetail","messageType","getType","messagePriority","MessageType","createMessageItem","getContent","setText","toString","prioritizedButtonType","ButtonType","Negative","Critical","Neutral","Default","setType","prioritizedToolTipKey","tooltipKey","tooltipText","getTranslatedText","setTooltip","getVisible","setVisible","fireEvent","visible","createMessagePopover","messageItem","_jsx","MessageItem","title","getMessage","description","getDescription","type","markupDescription","longtextUrl","getDescriptionUrl","subtitle","getAdditionalText","groupName","activeTitle","getControlIds","activeTitleHandler","getId","_messagePopover","destroy","MessagePopover","groupItems","activeTitlePress","pressEvent","getParameter","handleActiveTitlePress","children","items","addDependent","setTimeout","openBy","controlId","getControlId","control","UI5Element","getElementById","focus","Log","error","toggleMessagePopover","toggle","Button","press","bind","BuildingBlock","_applyDecoratedDescriptor","configurable","enumerable","writable","initializer"],"sourceRoot":".","sources":["MessageButton.tsx"],"sourcesContent":["import Log from \"sap/base/Log\";\nimport type { PropertiesOf } from \"sap/fe/base/ClassSupport\";\nimport { defineUI5Class, event } from \"sap/fe/base/ClassSupport\";\nimport BuildingBlock from \"sap/fe/core/buildingBlocks/BuildingBlock\";\nimport type { MessageDetail } from \"sap/fe/core/controllerextensions/MessageHandler\";\nimport Button from \"sap/m/Button\";\nimport MessageItem from \"sap/m/MessageItem\";\nimport type { MessagePopover$ActiveTitlePressEvent } from \"sap/m/MessagePopover\";\nimport MessagePopover from \"sap/m/MessagePopover\";\nimport { ButtonType } from \"sap/m/library\";\nimport UI5Element from \"sap/ui/core/Element\";\nimport Messaging from \"sap/ui/core/Messaging\";\nimport type Message from \"sap/ui/core/message/Message\";\nimport MessageType from \"sap/ui/core/message/MessageType\";\nimport type PropertyBinding from \"sap/ui/model/PropertyBinding\";\nimport type MessageModel from \"sap/ui/model/message/MessageModel\";\n\n/**\n * Building block used to show bound messages.\n *\n * The Message Button Building Block gets the bound messages from the MessageModel.\n *\n * Usage example:\n *\n * <pre>\n * &lt;macros:MessageButton visibilityChange=\".handler.onMessageButtonVisibilityChange\" /&gt;\n * </pre>\n * @public\n */\n@defineUI5Class(\"sap.fe.macros.MessageButton\")\nexport default class MessageButton extends BuildingBlock<Button> {\n\t/**\n\t * The event is triggered when the message button's visibility changes.\n\t * @public\n\t */\n\t@event()\n\tvisibilityChange!: Function;\n\n\t_messageModel!: MessageModel;\n\n\t_messagePopover!: MessagePopover;\n\n\t_mmPropertyBinding!: PropertyBinding;\n\n\t_messageItemMessageDetailMap: Record<string, MessageDetail> = {};\n\n\tconstructor(idOrSettings?: string | PropertiesOf<MessageButton>, settings?: PropertiesOf<MessageButton>) {\n\t\tsuper(idOrSettings, settings);\n\t}\n\t/**\n\t * Handler for the onMetadataAvailable event.\n\t */\n\tonMetadataAvailable(): void {\n\t\tif (!this.content) {\n\t\t\tthis.content = this.createContent();\n\t\t}\n\t\t// get the message model and attach to it's change event.\n\t\tthis._messageModel = Messaging.getMessageModel();\n\t\tthis._mmPropertyBinding = this._messageModel.bindProperty(\"/\");\n\t\tthis._mmPropertyBinding.attachChange(this.processMessages, this);\n\t\tconst eventDelegate = {\n\t\t\tonBeforeRendering: (): void => {\n\t\t\t\tthis.processMessages();\n\t\t\t\tthis.removeEventDelegate(eventDelegate);\n\t\t\t}\n\t\t};\n\t\tthis.addEventDelegate(eventDelegate);\n\t}\n\n\t/**\n\t * Processes messages in the message model.\n\t *\n\t * Filters out the bound and non technical messages from the message model\n\t * And calls the MessageHandler.beforeShowMessageButton controller extension to allow consumers to adapt the messages that will be shown.\n\t *\n\t * Additionally, it adjusts the message button's proeprties based on the messages to be shown.\n\t *\n\t */\n\tasync processMessages(): Promise<void> {\n\t\tconst messages: Message[] = this._messageModel?.getData();\n\n\t\t// get bound messages.\n\t\tconst messageDetails = messages.reduce((reducedMessages: MessageDetail[], message): MessageDetail[] => {\n\t\t\tconst isBound = message.getTargets().length > 0;\n\t\t\tconst isMessageTechnical = message.getTechnical();\n\t\t\tif (isBound && !isMessageTechnical) {\n\t\t\t\treducedMessages.push({ message });\n\t\t\t}\n\t\t\treturn reducedMessages;\n\t\t}, []);\n\n\t\tif (messageDetails && messageDetails.length > 0) {\n\t\t\tawait this.getPageController().messageHandler.beforeShowMessageButton(messageDetails);\n\t\t}\n\t\tthis.adjustMessageButtonProperties(messageDetails);\n\t}\n\n\t/**\n\t * Adjusts the message button properties and creates a message popover to show the messages.\n\t *\n\t * Sets the messages buttons properties on the basis of messages to be shown.\n\t * The properties of the messages button is determined on the basis of the priority of messages to be shown.\n\t *\n\t * Additionally, creates a message popover to show the messages.\n\t * @param messageDetails Message details used to render each message item.\n\t */\n\tadjustMessageButtonProperties(messageDetails: MessageDetail[]): void {\n\t\tthis._messageItemMessageDetailMap = {};\n\t\tif (messageDetails && messageDetails.length > 0) {\n\t\t\tconst messagePriorityMap = {\n\t\t\t\tError: 0,\n\t\t\t\tWarning: 1,\n\t\t\t\tSuccess: 2,\n\t\t\t\tInformation: 3,\n\t\t\t\tNone: 4\n\t\t\t};\n\n\t\t\tlet availableHighestPriority = messagePriorityMap.None; // we start from the lowest\n\t\t\tlet errorCount = 0;\n\t\t\tconst messageItems: MessageItem[] = [];\n\t\t\tfor (const messageDetail of messageDetails) {\n\t\t\t\tconst message = messageDetail.message;\n\t\t\t\tconst messageType = message.getType();\n\t\t\t\tconst messagePriority = messagePriorityMap[messageType];\n\t\t\t\tif (messagePriority < availableHighestPriority) {\n\t\t\t\t\tavailableHighestPriority = messagePriority;\n\t\t\t\t}\n\t\t\t\tif (messageType === MessageType.Error) {\n\t\t\t\t\terrorCount++;\n\t\t\t\t}\n\t\t\t\tmessageItems.push(this.createMessageItem(messageDetail));\n\t\t\t}\n\n\t\t\t// set properties on the message buttons\n\n\t\t\t// setText\n\t\t\tthis.getContent()?.setText(messageDetails.length.toString());\n\n\t\t\t// setType\n\t\t\tconst prioritizedButtonType = [\n\t\t\t\tButtonType.Negative,\n\t\t\t\tButtonType.Critical,\n\t\t\t\tButtonType.Success,\n\t\t\t\tButtonType.Neutral,\n\t\t\t\tButtonType.Default\n\t\t\t];\n\t\t\tthis.getContent()?.setType(prioritizedButtonType[availableHighestPriority]);\n\n\t\t\t// setTooltip\n\t\t\tconst prioritizedToolTipKey = [\n\t\t\t\t\"C_COMMON_SAPFE_ERROR_MESSAGES_PAGE_TITLE_ERROR\",\n\t\t\t\t\"C_COMMON_SAPFE_ERROR_MESSAGES_PAGE_WARNING_TOOLTIP\",\n\t\t\t\t\"C_MESSAGE_HANDLING_SAPFE_ERROR_MESSAGES_PAGE_TITLE_SUCCESS\",\n\t\t\t\t\"C_MESSAGE_HANDLING_SAPFE_ERROR_MESSAGES_PAGE_TITLE_INFO\",\n\t\t\t\t\"\"\n\t\t\t];\n\t\t\tconst tooltipKey =\n\t\t\t\terrorCount > 1\n\t\t\t\t\t? \"C_COMMON_SAPFE_ERROR_MESSAGES_PAGE_MULTIPLE_ERROR_TOOLTIP\"\n\t\t\t\t\t: prioritizedToolTipKey[availableHighestPriority];\n\t\t\tlet tooltipText = this.getTranslatedText(tooltipKey);\n\t\t\tif (errorCount > 1) {\n\t\t\t\ttooltipText = `${errorCount}  ${tooltipText}`;\n\t\t\t}\n\t\t\tthis.getContent()?.setTooltip(tooltipText);\n\n\t\t\t// setVisible\n\t\t\tif (!this.getContent()?.getVisible()) {\n\t\t\t\tthis.getContent()?.setVisible(true);\n\t\t\t\tthis.fireEvent(\"visibilityChange\", { visible: this.getContent()?.getVisible() });\n\t\t\t}\n\n\t\t\t// also show the message popover\n\t\t\tthis.createMessagePopover(messageItems);\n\t\t}\n\n\t\tif (messageDetails.length === 0) {\n\t\t\tif (this.getContent()?.getVisible()) {\n\t\t\t\tthis.getContent()?.setVisible(false);\n\t\t\t\tthis.fireEvent(\"visibilityChange\", { visible: this.getContent()?.getVisible() });\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Creates a message Item.\n\t * @param messageDetail Message detail relevant for creating the message item.\n\t * @returns MessageItem created from Message Detail\n\t */\n\tcreateMessageItem(messageDetail: MessageDetail): MessageItem {\n\t\tconst message = messageDetail.message;\n\t\tconst messageItem = (\n\t\t\t<MessageItem\n\t\t\t\ttitle={message.getMessage()}\n\t\t\t\tdescription={message.getDescription()}\n\t\t\t\ttype={message.getType()}\n\t\t\t\tmarkupDescription={true}\n\t\t\t\tlongtextUrl={message.getDescriptionUrl()}\n\t\t\t\tsubtitle={message.getAdditionalText()}\n\t\t\t\tgroupName={messageDetail.groupName || this.getTranslatedText(\"T_MESSAGE_BUTTON_SAPFE_MESSAGE_GROUP_GENERAL\")}\n\t\t\t\tactiveTitle={message.getControlIds().length > 0 || typeof messageDetail.activeTitleHandler === \"function\"}\n\t\t\t/>\n\t\t) as MessageItem;\n\t\tthis._messageItemMessageDetailMap[messageItem.getId()] = messageDetail;\n\t\treturn messageItem;\n\t}\n\n\t/**\n\t * Creates a message Popover.\n\t * @param messageItems\n\t */\n\tcreateMessagePopover(messageItems: MessageItem[]): void {\n\t\tthis._messagePopover?.destroy();\n\t\tthis._messagePopover = (\n\t\t\t<MessagePopover\n\t\t\t\tgroupItems={true}\n\t\t\t\tactiveTitlePress={(pressEvent: MessagePopover$ActiveTitlePressEvent): void => {\n\t\t\t\t\tconst messageItem = pressEvent.getParameter(\"item\");\n\t\t\t\t\tthis.handleActiveTitlePress(messageItem);\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{{\n\t\t\t\t\titems: messageItems\n\t\t\t\t}}\n\t\t\t</MessagePopover>\n\t\t) as MessagePopover;\n\t\tthis.getContent()?.addDependent(this._messagePopover);\n\t\tsetTimeout(() => {\n\t\t\tthis._messagePopover.openBy(this.getContent() as Button);\n\t\t}, 0);\n\t}\n\t/**\n\t * Handles active title press.\n\t *\n\t * If an activeTitleHandler is provided by the consumer via the controller extension then it is called.\n\t * Otherwise, we try to focus on the control if a control Id in the message is available.\n\t * @param messageItem\n\t */\n\thandleActiveTitlePress(messageItem?: MessageItem): void {\n\t\tif (messageItem) {\n\t\t\tconst messageDetail = this._messageItemMessageDetailMap[messageItem?.getId()];\n\t\t\tif (messageDetail.activeTitleHandler) {\n\t\t\t\tmessageDetail.activeTitleHandler(messageDetail.message);\n\t\t\t} else {\n\t\t\t\tconst controlId = messageDetail.message.getControlId();\n\t\t\t\tconst control = UI5Element.getElementById(controlId);\n\t\t\t\tif (control) {\n\t\t\t\t\tcontrol.focus();\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tLog.error(\"message item not found!\");\n\t\t}\n\t}\n\n\tdestroy(): void {\n\t\tthis._mmPropertyBinding.destroy();\n\t}\n\t/**\n\t * Toggle handler for the message popover.\n\t */\n\ttoggleMessagePopover(): void {\n\t\tthis._messagePopover.toggle(this.content as Button);\n\t}\n\t/**\n\t * Creates the content for the building block.\n\t * @returns The created content control.\n\t */\n\tcreateContent(): Button {\n\t\treturn <Button visible=\"false\" press={this.toggleMessagePopover.bind(this)} />;\n\t}\n}\n"],"mappings":"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","ignoreList":[],"file":"MessageButton-dbg.js"}