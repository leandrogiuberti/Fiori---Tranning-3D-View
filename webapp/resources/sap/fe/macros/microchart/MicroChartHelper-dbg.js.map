{"version":3,"names":["MicroChartHelper","getThresholdColor","value","iContext","path","context","getPath","includes","ValueColor","Error","Critical","Neutral","getMeasurePropertyPaths","chartAnnotations","entityTypeAnnotations","chartType","isRunTimeInstance","propertyPath","Log","warning","undefined","measureIndex","Measures","iMeasureAttribute","CommonHelper","getMeasureAttributeIndex","measureAttribute","MeasureAttributes","dataPoint","DataPoint","$target","$AnnotationPath","Value","$Path","push","join","getHiddenPathExpression","_len","arguments","length","args","Array","_key","hiddenPaths","forEach","call","hiddenProperty","isNotAlwaysHidden","maxValue","valueHidden","maxValueHidden","logError","error","formatDecimal","property","fractionDigits","constraints","formatOptions","scale","$Scale","$Nullable","$Precision","decimals","NumberFormat","getFloatInstance","style","preserveDecimals","format","getSelectParameters","groupId","sortOrder","criticalityCalculation","criticality","otherPaths","returnObject","sorters","parameters","sorter","Property","Descending","cricticalityCalculationKeys","Object","keys","key","$$groupId","$select","$orderby","getDataPointQualifiersForMeasures","isMicroChartRunTime","qualifiers","measureAttributes","fnAddDataPointQualifier","chartMeasure","qualifier","measure","Measure","$PropertyPath","annotationPath","split","logWarning","getDisplayValueForMicroChart","pathText","valueTextPath","valueDataPointPath","valueFormat","ValueFormat","NumberOfFractionalDigits","shouldRenderMicroChart","chartAnnotation","availableChartTypes","ChartType","dataPointValue","dataPointValueHiddenPath","annotations","UI","Hidden","chartAnnotationDimension","Dimensions","finalDataPointValue","dataPointMaximumValue","MaximumValue","dataPointMaximumValueHiddenPath","shouldMicroChartRender","dataPointValueHidden","targetAnnotations","dataPointMaxValue","hiddenPath","maxValueHiddenPath","getDataPointQualifiersForMicroChart","getColorPaletteForMicroChart","Criticality","getMeasureScaleForMicroChart","valueOf","getBindingExpressionForMicrochart","microChart","collection","uiName","chartsWithBindingExpression","condition","currencyOrUnit","getUOMPathForMicrochart","showOnlyChart","dataPointCriticallity","targetObject","functionValue","batchGroupId","chartsWithUOMParts","ISOCurrency","Unit","getAggregationForMicrochart","aggregationType","dimension","measureOrDimensionBar","dataPointCriticallityCalc","targetValuePath","dimensionPropertyPath","Common","Text","CriticalityCalculation","TargetValue","getCurrencyOrUnit","getCalendarPattern","propertyType","checkPatternForRuntimeInstance","checkPatternForTemplateTimeInstance","IsCalendarYear","IsCalendarQuarter","IsCalendarMonth","IsCalendarWeek","IsCalendarDate","IsCalendarYearMonth","getX","pattern","some","type","compileExpression","formatResult","pathInModel","constant","getExpressionWithType","expression","formatWithTypeInformation","getExpressionFromAnnotation","calculateColorBinding","actualValueExpression","criticalityExpressionForMicrochart","colorBinding","direction","ImprovementDirection","deviationRangeLowValue","DeviationRangeLowValue","toleranceRangeLowValue","ToleranceRangeLowValue","acceptanceRangeLowValue","AcceptanceRangeLowValue","acceptanceRangeHighValue","AcceptanceRangeHighValue","toleranceRangeHighValue","ToleranceRangeHighValue","deviationRangeHighValue","DeviationRangeHighValue","getCriticalityCalculationBinding","getBulletMicroChartAggregations","BulletMicroChartData","__ui5_require_async","default","thresholds","_jsx","color","actual","getStackMicroChartAggregations","measureDataPath","StackedBarMicroChartBar","valueColor","displayValue","bars","getHarveyMicroChartAggregations","HarveyBallMicroChartItem","fractionLabel","fractionValue","colorValue","items","formattedLabel","fraction","getComparisonMicroChartAggregations","chart","ComparisonMicroChartData","commonTextAnnotation","titleExpression","title","getColumnMicroChartAggregations","ColumnMicroChartData","ColumnMicroChartLabel","columnChartAggregations","columns","leftBottomLabel","leftTopLabel","rightBottomLabel","rightTopLabel","getLineMicroChartAggragations","microChartDataModelObjectPath","chartTarget","targetNavigationPath","LineMicroChartLine","LineMicroChartPoint","dimensionDataPath","enhanceDataModelPath","measures","lines","i","DataPointPath","points","getObject","SortOrder","xData","getXData","yData","children","x","y","propAnnotations","name","valueFormatters","formatStringDimension","contextLocation","getValueBinding","getAreaMicroChartAggregations","AreaMicroChartItem","AreaMicroChartPoint","AreaMicroChartLabel","targetNavigationDataModelObject","MetaModelConverter","getInvolvedDataModelObjects","getAreaMicroChartItem","isChartAggregation","_type","aggregation","target","firstXLabel","firstYLabel","lastXLabel","lastYLabel","improvementDirection","minThreshold","maxThreshold","innerMinThreshold","innerMaxThreshold","getBulletMicroChartProperties","microChartProperties","targetValue","forecastValue","ForecastValue","minValue","MinimumValue","actualValueLabel","targetValueLabel","showDeltaValue","Visualization","mode","getRadialMicroChartProperties","total","percentage","colorExpression","buildExpressionForCriticalityColorMicroChart","getHarveyMicroChartProperties","totalLabel","colorPalette"],"sourceRoot":".","sources":["MicroChartHelper.tsx"],"sourcesContent":["import type {\n\tProperty as DataModelProperty,\n\tEntitySet,\n\tNavigationProperty,\n\tPathAnnotationExpression,\n\tPrimitiveType,\n\tPropertyAnnotationValue,\n\tPropertyPath\n} from \"@sap-ux/vocabularies-types/Edm\";\nimport type { Measure } from \"@sap-ux/vocabularies-types/vocabularies/Analytics\";\nimport type { SortOrderType } from \"@sap-ux/vocabularies-types/vocabularies/Common\";\nimport { CommonAnnotationTerms } from \"@sap-ux/vocabularies-types/vocabularies/Common\";\nimport type { PropertyAnnotations_Common } from \"@sap-ux/vocabularies-types/vocabularies/Common_Edm\";\nimport { MeasuresAnnotationTerms } from \"@sap-ux/vocabularies-types/vocabularies/Measures\";\nimport type { PropertyAnnotations_Measures } from \"@sap-ux/vocabularies-types/vocabularies/Measures_Edm\";\nimport type {\n\tChart,\n\tChartMeasureAttributeTypeTypes,\n\tCriticalityCalculationType,\n\tDataPoint,\n\tDataPointType,\n\tPresentationVariant\n} from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport { ChartType, UIAnnotationTerms, VisualizationType } from \"@sap-ux/vocabularies-types/vocabularies/UI\";\nimport Log from \"sap/base/Log\";\nimport type { CompiledBindingToolkitExpression } from \"sap/fe/base/BindingToolkit\";\nimport {\n\tcompileExpression,\n\tconstant,\n\tformatResult,\n\tformatWithTypeInformation,\n\tgetExpressionFromAnnotation,\n\tpathInModel\n} from \"sap/fe/base/BindingToolkit\";\nimport type { MetaModelEntityTypeAnnotations, MetaModelPropertyAnnotations } from \"sap/fe/core/converters/MetaModelConverter\";\nimport { enhanceDataModelPath, type DataModelObjectPath } from \"sap/fe/core/templating/DataModelPathHelper\";\nimport type { ComputedAnnotationInterface } from \"sap/fe/core/templating/UIFormatters\";\nimport CommonHelper from \"sap/fe/macros/CommonHelper\";\nimport { ValueColor } from \"sap/m/library\";\nimport type { $AreaMicroChartSettings } from \"sap/suite/ui/microchart/AreaMicroChart\";\nimport type { $BulletMicroChartSettings } from \"sap/suite/ui/microchart/BulletMicroChart\";\nimport type { $HarveyBallMicroChartSettings } from \"sap/suite/ui/microchart/HarveyBallMicroChart\";\nimport type { $StackedBarMicroChartSettings } from \"sap/suite/ui/microchart/StackedBarMicroChart\";\nimport NumberFormat from \"sap/ui/core/format/NumberFormat\";\nimport type { MetaModelNavProperty, MetaModelType } from \"types/metamodel_types\";\nimport type MicroChart from \"../MicroChart\";\n// eslint-disable-next-line @typescript-eslint/no-restricted-imports\nimport type { $ColumnMicroChartSettings } from \"sap/suite/ui/microchart/ColumnMicroChart\";\nimport type { $ComparisonMicroChartSettings } from \"sap/suite/ui/microchart/ComparisonMicroChart\";\nimport type Context from \"sap/ui/model/odata/v4/Context\";\nimport { getValueBinding } from \"../field/FieldTemplating\";\n// eslint-disable-next-line @typescript-eslint/no-restricted-imports\nimport * as MetaModelConverter from \"sap/fe/core/converters/MetaModelConverter\";\n// eslint-disable-next-line @typescript-eslint/no-restricted-imports\nimport type { PropertyAnnotations } from \"@sap-ux/vocabularies-types/vocabularies/Edm_Types\";\nimport type { PropertiesOf } from \"sap/fe/base/ClassSupport\";\nimport valueFormatters from \"sap/fe/core/formatters/ValueFormatter\";\nimport { buildExpressionForCriticalityColorMicroChart } from \"sap/fe/core/templating/CriticalityFormatters\";\nimport type { $LineMicroChartSettings } from \"sap/suite/ui/microchart/LineMicroChart\";\nimport type { $RadialMicroChartSettings } from \"sap/suite/ui/microchart/RadialMicroChart\";\nimport type { AggregationBindingInfo } from \"sap/ui/base/ManagedObject\";\n\ntype Property = {\n\t$kind?: string;\n\t$Type?: string;\n\t$Name?: string;\n\t$Nullable?: boolean;\n\t$MaxLength?: number;\n\t$Precision?: number;\n\t$Scale?: number | string;\n};\n\nexport type ParameterType = {\n\t$$groupId?: string;\n\t$select?: string[];\n\t$orderby?: string[];\n};\n\nexport type MicroChartAggregation =\n\t| Pick<$BulletMicroChartSettings, \"actual\" | \"thresholds\">\n\t| Pick<$HarveyBallMicroChartSettings, \"items\">\n\t| Pick<$StackedBarMicroChartSettings, \"bars\">\n\t| Pick<\n\t\t\t$AreaMicroChartSettings,\n\t\t\t| \"chart\"\n\t\t\t| \"target\"\n\t\t\t| \"firstXLabel\"\n\t\t\t| \"firstYLabel\"\n\t\t\t| \"lastXLabel\"\n\t\t\t| \"lastYLabel\"\n\t\t\t| \"minThreshold\"\n\t\t\t| \"maxThreshold\"\n\t\t\t| \"innerMinThreshold\"\n\t\t\t| \"innerMaxThreshold\"\n\t  >\n\t| Pick<$ColumnMicroChartSettings, \"columns\" | \"leftBottomLabel\" | \"rightBottomLabel\" | \"leftTopLabel\" | \"rightTopLabel\">\n\t| Pick<$ComparisonMicroChartSettings, \"data\">\n\t| Pick<$LineMicroChartSettings, \"lines\">;\n\nexport type MicroChartSettings =\n\t| $BulletMicroChartSettings\n\t| $HarveyBallMicroChartSettings\n\t| $StackedBarMicroChartSettings\n\t| $ComparisonMicroChartSettings\n\t| $AreaMicroChartSettings\n\t| $ColumnMicroChartSettings\n\t| $RadialMicroChartSettings;\n\n/**\n * Helper class used by MDC_Controls to handle SAP Fiori elements for OData V4\n * @private\n */\nconst MicroChartHelper = {\n\t/**\n\t * This function returns the Threshold Color for bullet micro chart.\n\t * @param value Threshold value provided in the annotations\n\t * @param iContext InterfaceContext with path to the threshold\n\t * @returns The indicator for Threshold Color\n\t */\n\tgetThresholdColor: function (value: string, iContext: ComputedAnnotationInterface): ValueColor {\n\t\tconst path = iContext.context.getPath();\n\t\tif (path.includes(\"DeviationRange\")) {\n\t\t\treturn ValueColor.Error;\n\t\t} else if (path.includes(\"ToleranceRange\")) {\n\t\t\treturn ValueColor.Critical;\n\t\t}\n\t\treturn ValueColor.Neutral;\n\t},\n\n\t/**\n\t * To fetch measures from DataPoints.\n\t * @param chartAnnotations Chart Annotations\n\t * @param entityTypeAnnotations EntityType Annotations\n\t * @param chartType Chart Type used\n\t * @returns Containing all measures.\n\t * @private\n\t */\n\tgetMeasurePropertyPaths: function (\n\t\tchartAnnotations: MetaModelType<Chart> | Chart,\n\t\tentityTypeAnnotations: MetaModelEntityTypeAnnotations | undefined,\n\t\tchartType: string,\n\t\tisRunTimeInstance?: boolean\n\t): string | string[] | undefined {\n\t\tconst propertyPath: string[] = [];\n\n\t\tif (!entityTypeAnnotations) {\n\t\t\tLog.warning(\"FE:Macro:MicroChart : Couldn't find annotations for the DataPoint.\");\n\t\t\treturn undefined;\n\t\t}\n\n\t\tfor (const measureIndex in chartAnnotations.Measures) {\n\t\t\tconst iMeasureAttribute = CommonHelper.getMeasureAttributeIndex(\n\t\t\t\t\tmeasureIndex as unknown as number,\n\t\t\t\t\tchartAnnotations,\n\t\t\t\t\tisRunTimeInstance\n\t\t\t\t),\n\t\t\t\tmeasureAttribute =\n\t\t\t\t\tiMeasureAttribute > -1 && chartAnnotations.MeasureAttributes && chartAnnotations.MeasureAttributes[iMeasureAttribute];\n\t\t\tlet dataPoint;\n\t\t\tif (isRunTimeInstance) {\n\t\t\t\tdataPoint = (measureAttribute && (measureAttribute as ChartMeasureAttributeTypeTypes)?.DataPoint?.$target) || undefined;\n\t\t\t} else {\n\t\t\t\tdataPoint = (measureAttribute &&\n\t\t\t\t\tentityTypeAnnotations &&\n\t\t\t\t\tentityTypeAnnotations[\n\t\t\t\t\t\t(\n\t\t\t\t\t\t\tmeasureAttribute.DataPoint as {\n\t\t\t\t\t\t\t\t$AnnotationPath: string;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)?.$AnnotationPath as keyof MetaModelEntityTypeAnnotations\n\t\t\t\t\t]) as MetaModelType<DataPointType> | undefined;\n\t\t\t}\n\n\t\t\tconst path = isRunTimeInstance ? dataPoint?.Value.path : dataPoint?.Value.$Path;\n\t\t\tif (path) {\n\t\t\t\tpropertyPath.push(path);\n\t\t\t} else {\n\t\t\t\tLog.warning(\n\t\t\t\t\t`FE:Macro:MicroChart : Couldn't find DataPoint(Value) measure for the measureAttribute ${chartType} MicroChart.`\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\treturn isRunTimeInstance ? propertyPath : propertyPath.join(\",\");\n\t},\n\n\t/**\n\t * This function returns the visible expression path.\n\t * @param args\n\t * @returns Expression Binding for the visible.\n\t */\n\tgetHiddenPathExpression: function (...args: unknown[]): string | boolean {\n\t\tif (!args[0] && !args[1]) {\n\t\t\treturn true;\n\t\t}\n\t\tif (args[0] === true || args[1] === true) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst hiddenPaths: string[] = [];\n\t\t[].forEach.call(args, function (hiddenProperty: unknown) {\n\t\t\tif (hiddenProperty && (hiddenProperty as { $Path: string }).$Path) {\n\t\t\t\thiddenPaths.push(\"%{\" + (hiddenProperty as { $Path: string }).$Path + \"}\");\n\t\t\t}\n\t\t});\n\n\t\treturn hiddenPaths.length ? \"{= \" + hiddenPaths.join(\" || \") + \" === true ? false : true }\" : false;\n\t},\n\n\t/**\n\t * This function returns the true/false to display chart.\n\t * @param chartType The chart type\n\t * @param value Data point value of Value\n\t * @param value.$Path\n\t * @param maxValue Data point value of MaximumValue\n\t * @param maxValue.$Path\n\t * @param valueHidden Hidden path object/boolean value for the referenced property of value\n\t * @param valueHidden.$Path\n\t * @param maxValueHidden Hidden path object/boolean value for the referenced property of MaxValue\n\t * @param maxValueHidden.$Path\n\t * @returns `true` or `false` to hide/show chart\n\t */\n\tisNotAlwaysHidden: function (\n\t\tchartType: string,\n\t\tvalue: { $Path: string },\n\t\tmaxValue: { $Path: string } | undefined,\n\t\tvalueHidden?: boolean | { $Path: string },\n\t\tmaxValueHidden?: boolean | { $Path: string }\n\t): boolean {\n\t\tif (valueHidden === true) {\n\t\t\tthis.logError(chartType, value);\n\t\t}\n\t\tif (maxValueHidden === true) {\n\t\t\tthis.logError(chartType, maxValue);\n\t\t}\n\t\tif (valueHidden === undefined && maxValueHidden === undefined) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn ((!valueHidden || (valueHidden as { $Path: string }).$Path) && valueHidden !== undefined) ||\n\t\t\t\t((!maxValueHidden || (maxValueHidden as { $Path: string }).$Path) && maxValueHidden !== undefined)\n\t\t\t\t? true\n\t\t\t\t: false;\n\t\t}\n\t},\n\n\t/**\n\t * This function is to log errors for missing data point properties.\n\t * @param chartType The chart type.\n\t * @param value Dynamic hidden property name.\n\t * @param value.$Path Dynamic hidden property name.\n\t */\n\tlogError: function (chartType: string, value?: { $Path: string }): void {\n\t\tLog.error(`Measure Property ${value?.$Path} is hidden for the ${chartType} Micro Chart`);\n\t},\n\n\t/**\n\t * This function returns the formatted value with scale factor for the value displayed.\n\t * @param path Property path for the value\n\t * @param property The Property for constraints\n\t * @param fractionDigits No. of fraction digits specified from annotations\n\t * @param value Static value of the property\n\t * @returns Expression Binding for the value with scale.\n\t */\n\tformatDecimal: function (path: string, property: Property, fractionDigits: number | undefined, value?: number): string | undefined {\n\t\tif (path) {\n\t\t\tconst constraints = [],\n\t\t\t\tformatOptions = [\"style: 'short'\"];\n\t\t\tconst scale = typeof fractionDigits === \"number\" ? fractionDigits : (property && property?.$Scale) || 1;\n\n\t\t\tif (property.$Nullable != undefined) {\n\t\t\t\tconstraints.push(\"nullable: \" + property.$Nullable);\n\t\t\t}\n\t\t\tif (property.$Precision != undefined) {\n\t\t\t\tformatOptions.push(\"precision: \" + (property.$Precision ? property.$Precision : \"1\"));\n\t\t\t}\n\t\t\tconstraints.push(\"scale: \" + (scale === \"variable\" ? \"'\" + scale + \"'\" : scale));\n\n\t\t\treturn (\n\t\t\t\t\"{ path: '\" +\n\t\t\t\tpath +\n\t\t\t\t\"'\" +\n\t\t\t\t\", type: 'sap.ui.model.odata.type.Decimal', constraints: { \" +\n\t\t\t\tconstraints.join(\",\") +\n\t\t\t\t\" }, formatOptions: { \" +\n\t\t\t\tformatOptions.join(\",\") +\n\t\t\t\t\" } }\"\n\t\t\t);\n\t\t} else if (value) {\n\t\t\tconst decimals = typeof fractionDigits === \"number\" ? fractionDigits : 1;\n\t\t\treturn NumberFormat.getFloatInstance({ style: \"short\", preserveDecimals: true, decimals: decimals }).format(value);\n\t\t}\n\t},\n\n\t/**\n\t * To fetch, the $select parameters from annotations to add to the list binding.\n\t * @param groupId GroupId to be used\n\t * @param sortOrder Sort order to be used\n\t * @param criticalityCalculation Criticality calculation object property path\n\t * @param criticality Criticality for the chart\n\t * @param otherPaths All other paths\n\t * @param returnObject\n\t * @returns String containing all the property paths needed to be added to the $select query of the list binding.\n\t * @private\n\t */\n\tgetSelectParameters: function (\n\t\tgroupId: string,\n\t\tsortOrder?: SortOrderType[],\n\t\tcriticalityCalculation?: CriticalityCalculationType,\n\t\tcriticality?: string,\n\t\totherPaths?: string[],\n\t\treturnObject?: boolean\n\t): string | ParameterType {\n\t\tconst propertyPath: string[] = [],\n\t\t\tsorters: string[] = [];\n\t\tconst parameters: string[] | ParameterType = returnObject ? {} : [];\n\n\t\tif (sortOrder) {\n\t\t\tsortOrder.forEach((sorter: SortOrderType) => {\n\t\t\t\tsorters.push(`${sorter.Property}${sorter.Descending ? \" desc\" : \"\"}`);\n\t\t\t});\n\t\t}\n\n\t\tif (criticality) {\n\t\t\tpropertyPath.push(criticality);\n\t\t} else if (criticalityCalculation) {\n\t\t\tconst cricticalityCalculationKeys = [\n\t\t\t\t\"ImprovementDirection\",\n\t\t\t\t\"DeviationRangeLowValue\",\n\t\t\t\t\"ToleranceRangeLowValue\",\n\t\t\t\t\"AcceptanceRangeLowValue\",\n\t\t\t\t\"AcceptanceRangeHighValue\",\n\t\t\t\t\"ToleranceRangeHighValue\",\n\t\t\t\t\"DeviationRangeHighValue\"\n\t\t\t];\n\t\t\tObject.keys(criticalityCalculation).forEach((key: string) => {\n\t\t\t\tif (\n\t\t\t\t\tcricticalityCalculationKeys.includes(key) &&\n\t\t\t\t\t((criticalityCalculation as unknown as Record<string, string>)[key] as unknown as PathAnnotationExpression<string>).path\n\t\t\t\t) {\n\t\t\t\t\tpropertyPath.push(\n\t\t\t\t\t\t((criticalityCalculation as unknown as Record<string, string>)[key] as unknown as PathAnnotationExpression<string>)\n\t\t\t\t\t\t\t.path\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\totherPaths?.forEach((path) => {\n\t\t\tif (path) {\n\t\t\t\tpropertyPath.push(path);\n\t\t\t}\n\t\t});\n\n\t\tif (returnObject) {\n\t\t\tif (groupId) {\n\t\t\t\t(parameters as ParameterType).$$groupId = groupId;\n\t\t\t}\n\t\t\tif (propertyPath.length) {\n\t\t\t\t(parameters as ParameterType).$select = propertyPath;\n\t\t\t}\n\t\t\tif (sorters.length) {\n\t\t\t\t(parameters as ParameterType).$orderby = sorters;\n\t\t\t}\n\t\t\treturn parameters as ParameterType;\n\t\t} else {\n\t\t\tif (groupId) {\n\t\t\t\t(parameters as string[]).push(`$$groupId : '${groupId}'`);\n\t\t\t}\n\t\t\tif (propertyPath.length) {\n\t\t\t\t(parameters as string[]).push(`$select : '${propertyPath.join(\",\")}'`);\n\t\t\t}\n\t\t\tif (sorters.length) {\n\t\t\t\t(parameters as string[]).push(`$orderby : '${sorters.join(\",\")}'`);\n\t\t\t}\n\t\t\treturn (parameters as string[]).join(\",\");\n\t\t}\n\t},\n\n\t/**\n\t * To fetch DataPoint qualifiers of measures.\n\t * @param chartAnnotations Chart annotations\n\t * @param entityTypeAnnotations EntityType annotations\n\t * @param chartType Chart type used\n\t * @returns Containing all data point qualifiers.\n\t * @private\n\t */\n\tgetDataPointQualifiersForMeasures: function (\n\t\tchartAnnotations: MetaModelType<Chart> | Chart,\n\t\tentityTypeAnnotations: MetaModelEntityTypeAnnotations | undefined,\n\t\tchartType: string,\n\t\tisMicroChartRunTime?: boolean\n\t): string[] | string {\n\t\tconst qualifiers: string[] = [],\n\t\t\tmeasureAttributes = chartAnnotations.MeasureAttributes,\n\t\t\tfnAddDataPointQualifier = function (chartMeasure: { $PropertyPath: string } | PropertyPath): void {\n\t\t\t\tlet qualifier: string | undefined;\n\t\t\t\tif (entityTypeAnnotations) {\n\t\t\t\t\tmeasureAttributes?.forEach(function (\n\t\t\t\t\t\tmeasureAttribute: MetaModelType<ChartMeasureAttributeTypeTypes> | ChartMeasureAttributeTypeTypes\n\t\t\t\t\t) {\n\t\t\t\t\t\tlet path, measure;\n\t\t\t\t\t\tif (isMicroChartRunTime) {\n\t\t\t\t\t\t\tpath = (measureAttribute as ChartMeasureAttributeTypeTypes).Measure?.value;\n\t\t\t\t\t\t\tmeasure = (chartMeasure as PropertyPath).value;\n\t\t\t\t\t\t\tif (path == measure) {\n\t\t\t\t\t\t\t\tqualifiers.push(\n\t\t\t\t\t\t\t\t\t(measureAttribute as ChartMeasureAttributeTypeTypes)?.DataPoint?.$target?.qualifier as string\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpath = (measureAttribute as MetaModelType<ChartMeasureAttributeTypeTypes>).Measure?.$PropertyPath;\n\t\t\t\t\t\t\tmeasure = (chartMeasure as { $PropertyPath: string }).$PropertyPath;\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tpath === measure &&\n\t\t\t\t\t\t\t\t(measureAttribute as MetaModelType<ChartMeasureAttributeTypeTypes>).DataPoint?.$AnnotationPath\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tconst annotationPath = (measureAttribute as MetaModelType<ChartMeasureAttributeTypeTypes>)?.DataPoint\n\t\t\t\t\t\t\t\t\t?.$AnnotationPath;\n\t\t\t\t\t\t\t\tif (entityTypeAnnotations[annotationPath as keyof MetaModelEntityTypeAnnotations]) {\n\t\t\t\t\t\t\t\t\tqualifier = annotationPath?.split(\"#\")[1];\n\t\t\t\t\t\t\t\t\tif (qualifier) {\n\t\t\t\t\t\t\t\t\t\tqualifiers.push(qualifier);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tif (qualifier === undefined) {\n\t\t\t\t\tLog.warning(\n\t\t\t\t\t\t`FE:Macro:MicroChart : Couldn't find DataPoint(Value) measure for the measureAttribute for ${chartType} MicroChart.`\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t};\n\n\t\tif (!entityTypeAnnotations) {\n\t\t\tLog.warning(`FE:Macro:MicroChart : Couldn't find annotations for the DataPoint ${chartType} MicroChart.`);\n\t\t}\n\t\tchartAnnotations.Measures?.forEach(fnAddDataPointQualifier);\n\t\treturn isMicroChartRunTime ? qualifiers : qualifiers.join(\",\");\n\t},\n\n\t/**\n\t * This function is to log warnings for missing datapoint properties.\n\t * @param chartType The Chart type.\n\t * @param error Object with properties from DataPoint.\n\t */\n\tlogWarning: function (chartType: string, error: object): void {\n\t\tfor (const key in error) {\n\t\t\tif (!error[key as keyof typeof error]) {\n\t\t\t\tLog.warning(`${key} parameter is missing for the ${chartType} Micro Chart`);\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * This function is used to get DisplayValue for comparison micro chart data aggregation.\n\t * @param dataPoint Data point object.\n\t * @param pathText Object after evaluating @com.sap.vocabularies.Common.v1.Text annotation\n\t * @param pathText.$Path The target path\n\t * @param valueTextPath Evaluation of @com.sap.vocabularies.Common.v1.Text/$Path/$ value of the annotation\n\t * @param valueDataPointPath DataPoint>Value/$Path/$ value after evaluating annotation\n\t * @returns Expression binding for Display Value for comparison micro chart's aggregation data.\n\t */\n\tgetDisplayValueForMicroChart: function (\n\t\tdataPoint: MetaModelType<DataPointType>,\n\t\tpathText: { $Path: string } | undefined,\n\t\tvalueTextPath: object,\n\t\tvalueDataPointPath: object\n\t): string | undefined {\n\t\tconst valueFormat = dataPoint.ValueFormat && dataPoint.ValueFormat.NumberOfFractionalDigits;\n\t\tif (pathText) {\n\t\t\treturn MicroChartHelper.formatDecimal(pathText[\"$Path\"], valueTextPath as Property, valueFormat);\n\t\t}\n\t\treturn MicroChartHelper.formatDecimal(dataPoint.Value[\"$Path\"], valueDataPointPath as Property, valueFormat);\n\t},\n\tshouldRenderMicroChart: function (chartAnnotation: Chart): boolean {\n\t\tconst availableChartTypes = [ChartType.Area, ChartType.Column, ChartType.Bar],\n\t\t\tchartType = chartAnnotation.ChartType,\n\t\t\tdataPoint = chartAnnotation.MeasureAttributes[0].DataPoint?.$target,\n\t\t\tdataPointValue = dataPoint?.Value,\n\t\t\tdataPointValueHiddenPath = dataPointValue?.annotations?.UI?.Hidden,\n\t\t\tchartAnnotationDimension = chartAnnotation?.Dimensions && chartAnnotation?.Dimensions[0],\n\t\t\tfinalDataPointValue = availableChartTypes.includes(chartType) ? dataPointValue && chartAnnotationDimension : dataPointValue; // only for three charts in array\n\t\tif (chartType === ChartType.Pie) {\n\t\t\tconst dataPointMaximumValue = dataPoint && (dataPoint.MaximumValue as PrimitiveType);\n\t\t\tconst dataPointMaximumValueHiddenPath = dataPointMaximumValue?.annotations?.UI?.Hidden;\n\t\t\treturn (\n\t\t\t\tdataPointValue &&\n\t\t\t\tdataPointMaximumValue &&\n\t\t\t\tMicroChartHelper.isNotAlwaysHidden(\n\t\t\t\t\tchartType,\n\t\t\t\t\tdataPointValue,\n\t\t\t\t\tdataPointMaximumValue,\n\t\t\t\t\tdataPointValueHiddenPath,\n\t\t\t\t\tdataPointMaximumValueHiddenPath\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t\treturn finalDataPointValue && MicroChartHelper.isNotAlwaysHidden(chartType, dataPointValue, dataPointValueHiddenPath);\n\t},\n\n\t/**\n\t * This function is used to check whether micro chart is enabled or not by checking properties, chart annotations, hidden properties.\n\t * @param chartType MicroChart Type,such as Bullet.\n\t * @param dataPoint Data point object.\n\t * @param dataPointValueHidden Object with $Path annotation to get the hidden value path\n\t * @param targetAnnotations ChartAnnotation object\n\t * @param dataPointMaxValue Object with $Path annotation to get hidden max value path\n\t * @returns `true` if the chart has all values and properties and also it is not always hidden sFinalDataPointValue && bMicrochartVisible.\n\t */\n\tshouldMicroChartRender: function (\n\t\tchartType: string,\n\t\tdataPoint: DataPointType,\n\t\tdataPointValueHidden: Record<string, boolean>,\n\t\ttargetAnnotations: Chart,\n\t\tdataPointMaxValue: Record<string, boolean>\n\t): boolean {\n\t\tconst availableChartTypes = [\"Area\", \"Column\", \"Comparison\"],\n\t\t\tdataPointValue = dataPoint && dataPoint.Value,\n\t\t\thiddenPath = dataPointValueHidden && dataPointValueHidden[UIAnnotationTerms.Hidden],\n\t\t\tchartAnnotationDimension = targetAnnotations && targetAnnotations.Dimensions && targetAnnotations.Dimensions[0],\n\t\t\tfinalDataPointValue = availableChartTypes.includes(chartType) ? dataPointValue && chartAnnotationDimension : dataPointValue; // only for three charts in array\n\t\tif (chartType === \"Harvey\") {\n\t\t\tconst dataPointMaximumValue = dataPoint && dataPoint.MaximumValue,\n\t\t\t\tmaxValueHiddenPath = dataPointMaxValue && dataPointMaxValue[UIAnnotationTerms.Hidden];\n\t\t\treturn (\n\t\t\t\tdataPointValue &&\n\t\t\t\tdataPointMaximumValue &&\n\t\t\t\tMicroChartHelper.isNotAlwaysHidden(\n\t\t\t\t\t\"Bullet\",\n\t\t\t\t\tdataPointValue,\n\t\t\t\t\tdataPointMaximumValue as unknown as { $Path: string },\n\t\t\t\t\thiddenPath,\n\t\t\t\t\tmaxValueHiddenPath\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t\treturn finalDataPointValue && MicroChartHelper.isNotAlwaysHidden(chartType, dataPointValue, undefined, hiddenPath);\n\t},\n\n\t/**\n\t * This function is used to get dataPointQualifiers for Column, Comparison and StackedBar micro charts.\n\t * @param annotationPath\n\t * @returns Result string or undefined.\n\t */\n\tgetDataPointQualifiersForMicroChart: function (annotationPath: string): string | undefined {\n\t\tif (!annotationPath.includes(UIAnnotationTerms.DataPoint)) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn annotationPath.split(\"#\")[1] ?? \"\";\n\t},\n\n\t/**\n\t * This function is used to get colorPalette for comparison and HarveyBall Microcharts.\n\t * @param dataPoint Data point object.\n\t * @returns Result string for colorPalette or undefined.\n\t */\n\tgetColorPaletteForMicroChart: function (dataPoint: DataPointType): string | undefined {\n\t\treturn dataPoint.Criticality\n\t\t\t? undefined\n\t\t\t: \"sapUiChartPaletteQualitativeHue1, sapUiChartPaletteQualitativeHue2, sapUiChartPaletteQualitativeHue3,          sapUiChartPaletteQualitativeHue4, sapUiChartPaletteQualitativeHue5, sapUiChartPaletteQualitativeHue6, sapUiChartPaletteQualitativeHue7,          sapUiChartPaletteQualitativeHue8, sapUiChartPaletteQualitativeHue9, sapUiChartPaletteQualitativeHue10, sapUiChartPaletteQualitativeHue11\";\n\t},\n\n\t/**\n\t * This function is used to get MeasureScale for Area, Column and Line micro charts.\n\t * @param dataPoint Data point object.\n\t * @returns Data point value format fractional digits or data point scale or 1.\n\t */\n\tgetMeasureScaleForMicroChart: function (dataPoint: DataPointType): number {\n\t\tif (dataPoint.ValueFormat && dataPoint.ValueFormat.NumberOfFractionalDigits) {\n\t\t\treturn dataPoint.ValueFormat.NumberOfFractionalDigits.valueOf();\n\t\t}\n\t\tif (dataPoint.Value && dataPoint.Value[\"$Path\"] && dataPoint.Value[\"$Path\"][\"$Scale\"]) {\n\t\t\treturn dataPoint.Value[\"$Path\"][\"$Scale\"];\n\t\t}\n\t\treturn 1;\n\t},\n\n\t/**\n\t * This function is to return the binding expression of microchart.\n\t * @param chartType The type of micro chart (Bullet, Radial etc.)\n\t * @param measure Measure value for micro chart.\n\t * @param microChart `this`/current model for micro chart.\n\t * @param collection Collection object.\n\t * @param uiName The @sapui.name in collection model is not accessible here from model hence need to pass it.\n\t * @param dataPoint Data point object used in case of Harvey Ball micro chart\n\t * @returns The binding expression for micro chart.\n\t * @private\n\t */\n\tgetBindingExpressionForMicrochart: function (\n\t\tchartType: string,\n\t\tmeasure: DataModelObjectPath<Measure>,\n\t\tmicroChart: MicroChart,\n\t\tcollection: MetaModelNavProperty,\n\t\tuiName: string,\n\t\tdataPoint?: DataModelObjectPath<DataPointType>\n\t): string {\n\t\tconst chartsWithBindingExpression = [ChartType.Bullet, ChartType.Pie, ChartType.Donut, \"Radial\", \"Bullet\", \"Harvey\"];\n\t\tif (!chartType || chartsWithBindingExpression.includes(chartType)) {\n\t\t\tconst condition = collection[\"$isCollection\"] || collection[\"$kind\"] === \"EntitySet\";\n\t\t\tconst path = condition ? \"\" : uiName;\n\t\t\tlet currencyOrUnit = MicroChartHelper.getUOMPathForMicrochart(microChart.showOnlyChart as boolean, measure);\n\t\t\tlet dataPointCriticallity = \"\";\n\t\t\tswitch (chartType) {\n\t\t\t\tcase \"Radial\":\n\t\t\t\tcase ChartType.Donut:\n\t\t\t\t\tcurrencyOrUnit = \"\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"Harvey\":\n\t\t\t\tcase ChartType.Pie:\n\t\t\t\t\tdataPointCriticallity = dataPoint?.targetObject?.Criticality\n\t\t\t\t\t\t? (dataPoint.targetObject?.Criticality as PathAnnotationExpression<string>)?.path\n\t\t\t\t\t\t: \"\";\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tconst functionValue = MicroChartHelper.getSelectParameters(\n\t\t\t\tmicroChart.batchGroupId as string,\n\t\t\t\tundefined,\n\t\t\t\tundefined,\n\t\t\t\tdataPointCriticallity,\n\t\t\t\t[currencyOrUnit] as string[]\n\t\t\t);\n\t\t\treturn `{ path: '${path}'` + `, parameters : {${functionValue}} }`;\n\t\t} else {\n\t\t\treturn microChart.batchGroupId ? \"{path:'', parameters : { $$groupId: '\" + microChart.batchGroupId + \"'} }\" : \"\";\n\t\t}\n\t},\n\n\t/**\n\t * This function is to return the UOMPath expression of the micro chart.\n\t * @param showOnlyChart Whether only chart should be rendered or not.\n\t * @param measure Measures for the micro chart.\n\t * @param chartType Type of the micro chart.\n\t * @returns UOMPath String for the micro chart.\n\t * @private\n\t */\n\tgetUOMPathForMicrochart: function (\n\t\tshowOnlyChart: boolean,\n\t\tmeasure?: DataModelObjectPath<Measure>,\n\t\tchartType?: string\n\t): string | undefined {\n\t\tconst chartsWithUOMParts = [ChartType.Bullet, ChartType.Pie, ChartType.Area, ChartType.Column, ChartType.Line, ChartType.Bar];\n\t\tif (!chartType || (chartType && chartsWithUOMParts.includes(chartType as ChartType))) {\n\t\t\treturn measure && !showOnlyChart\n\t\t\t\t? (\n\t\t\t\t\t\t(measure.targetObject?.annotations?.Measures as PropertyAnnotations_Measures)\n\t\t\t\t\t\t\t?.ISOCurrency as unknown as PathAnnotationExpression<string>\n\t\t\t\t  )?.path ||\n\t\t\t\t\t\t(\n\t\t\t\t\t\t\t(measure.targetObject?.annotations?.Measures as PropertyAnnotations_Measures)\n\t\t\t\t\t\t\t\t?.Unit as unknown as PathAnnotationExpression<string>\n\t\t\t\t\t\t)?.path ||\n\t\t\t\t\t\t\"\"\n\t\t\t\t: \"\";\n\t\t} else {\n\t\t\treturn undefined;\n\t\t}\n\t},\n\n\t/**\n\t * This function is to return the aggregation binding expression of micro chart.\n\t * @param aggregationType Aggregation type of chart (for example, Point for AreaMicrochart)\n\t * @param collection Collection object.\n\t * @param dataPoint Data point info for micro chart.\n\t * @param uiName The @sapui.name in collection model is not accessible here from model hence need to pass it.\n\t * @param dimension Micro chart Dimensions.\n\t * @param measure Measure value for micro chart.\n\t * @param sortOrder SortOrder for micro chart.\n\t * @param measureOrDimensionBar The measure or dimension passed specifically in the case of bar chart.\n\t * @param returnObject Flag which specifies if the return value should be string or object.\n\t * @returns Aggregation binding expression for micro chart.\n\t * @private\n\t */\n\tgetAggregationForMicrochart: function (\n\t\taggregationType: string,\n\t\tcollection: MetaModelNavProperty,\n\t\tdataPoint: DataModelObjectPath<DataPointType>,\n\t\tuiName: string,\n\t\tdimension: DataModelObjectPath<PropertyPath> | PropertyPath | undefined,\n\t\tmeasure: DataModelObjectPath<Measure>,\n\t\tsortOrder?: SortOrderType[],\n\t\tmeasureOrDimensionBar?: string,\n\t\treturnObject?: boolean\n\t): string | AggregationBindingInfo {\n\t\tlet path = collection[\"$kind\"] === \"EntitySet\" ? \"/\" : \"\";\n\t\tpath = path + uiName;\n\t\tconst groupId = \"\";\n\t\tlet dataPointCriticallityCalc;\n\t\tlet dataPointCriticallity = dataPoint.targetObject?.Criticality\n\t\t\t? (dataPoint.targetObject?.Criticality as PathAnnotationExpression<string>)?.path\n\t\t\t: \"\";\n\t\tconst currencyOrUnit = MicroChartHelper.getUOMPathForMicrochart(false, measure);\n\t\tlet targetValuePath = \"\";\n\t\tlet dimensionPropertyPath = \"\";\n\t\tif ((dimension as DataModelObjectPath<PropertyPath>)?.targetObject) {\n\t\t\tdimension = (dimension as DataModelObjectPath<PropertyPath>).targetObject;\n\t\t}\n\t\tif ((dimension as PropertyPath)?.$target?.annotations?.Common?.Text) {\n\t\t\tdimensionPropertyPath = (\n\t\t\t\t(dimension as PropertyPath)?.$target?.annotations?.Common?.Text as unknown as PathAnnotationExpression<string>\n\t\t\t)?.path;\n\t\t} else if (dimension) {\n\t\t\tdimensionPropertyPath = (dimension as PropertyPath)?.value;\n\t\t}\n\t\tswitch (aggregationType) {\n\t\t\tcase \"Points\":\n\t\t\tcase ChartType.Area:\n\t\t\t\tdataPointCriticallityCalc = dataPoint?.targetObject?.CriticalityCalculation;\n\t\t\t\ttargetValuePath = dataPoint?.targetObject?.TargetValue?.path;\n\t\t\t\tdataPointCriticallity = \"\";\n\t\t\t\tbreak;\n\t\t\tcase \"Columns\":\n\t\t\tcase ChartType.Column:\n\t\t\t\tdataPointCriticallityCalc = dataPoint?.targetObject?.CriticalityCalculation;\n\t\t\t\tbreak;\n\t\t\tcase \"LinePoints\":\n\t\t\tcase ChartType.Line:\n\t\t\t\tdataPointCriticallity = \"\";\n\t\t\t\tbreak;\n\t\t\tcase \"Bars\":\n\t\t\tcase ChartType.BarStacked:\n\t\t\t\tdimensionPropertyPath = \"\";\n\t\t\t\tbreak;\n\t\t}\n\t\tconst parameters = MicroChartHelper.getSelectParameters(\n\t\t\tgroupId,\n\t\t\tsortOrder,\n\t\t\tdataPointCriticallityCalc,\n\t\t\tdataPointCriticallity,\n\t\t\t[currencyOrUnit as string, targetValuePath, dimensionPropertyPath, measureOrDimensionBar || \"\"],\n\t\t\treturnObject\n\t\t);\n\t\tif (returnObject) {\n\t\t\treturn {\n\t\t\t\tpath,\n\t\t\t\tparameters: parameters as ParameterType\n\t\t\t};\n\t\t}\n\t\treturn `{path:'${path}'` + `, parameters : {${parameters}} }`;\n\t},\n\n\tgetCurrencyOrUnit: function (measure: MetaModelPropertyAnnotations): string | undefined {\n\t\tif (measure[`@${MeasuresAnnotationTerms.ISOCurrency}`]) {\n\t\t\treturn (\n\t\t\t\t(measure[`@${MeasuresAnnotationTerms.ISOCurrency}`] as { $Path: string }).$Path ||\n\t\t\t\t(measure[`@${MeasuresAnnotationTerms.ISOCurrency}`] as string)\n\t\t\t);\n\t\t}\n\t\tif (measure[`@${MeasuresAnnotationTerms.Unit}`]) {\n\t\t\treturn (\n\t\t\t\t(measure[`@${MeasuresAnnotationTerms.Unit}`] as { $Path: string }).$Path ||\n\t\t\t\t(measure[`@${MeasuresAnnotationTerms.Unit}`] as string)\n\t\t\t);\n\t\t}\n\t\treturn \"\";\n\t},\n\n\tgetCalendarPattern: function (\n\t\tpropertyType: string,\n\t\tannotations: Record<string, unknown> | PropertyAnnotations,\n\t\tisMicroChartRunTime?: boolean\n\t): string | undefined {\n\t\tif (isMicroChartRunTime) {\n\t\t\treturn MicroChartHelper.checkPatternForRuntimeInstance(annotations, propertyType);\n\t\t} else {\n\t\t\treturn MicroChartHelper.checkPatternForTemplateTimeInstance(annotations, propertyType);\n\t\t}\n\t},\n\n\tcheckPatternForRuntimeInstance: function (annotations: PropertyAnnotations, propertyType: string): string | undefined {\n\t\treturn ((annotations.Common?.IsCalendarYear && \"yyyy\") ||\n\t\t\t(annotations.Common?.IsCalendarQuarter && \"Q\") ||\n\t\t\t(annotations.Common?.IsCalendarMonth && \"MM\") ||\n\t\t\t(annotations.Common?.IsCalendarWeek && \"ww\") ||\n\t\t\t(annotations.Common?.IsCalendarDate && \"yyyyMMdd\") ||\n\t\t\t(annotations.Common?.IsCalendarYearMonth && \"yyyyMM\") ||\n\t\t\t(propertyType === \"Edm.Date\" && \"yyyy-MM-dd\") ||\n\t\t\tundefined) as string | undefined;\n\t},\n\n\tcheckPatternForTemplateTimeInstance: function (annotations: Record<string, unknown>, propertyType: string): string | undefined {\n\t\treturn ((annotations[`@${CommonAnnotationTerms.IsCalendarYear}`] && \"yyyy\") ||\n\t\t\t(annotations[`@${CommonAnnotationTerms.IsCalendarQuarter}`] && \"Q\") ||\n\t\t\t(annotations[`@${CommonAnnotationTerms.IsCalendarMonth}`] && \"MM\") ||\n\t\t\t(annotations[`@${CommonAnnotationTerms.IsCalendarWeek}`] && \"ww\") ||\n\t\t\t(annotations[`@${CommonAnnotationTerms.IsCalendarDate}`] && \"yyyyMMdd\") ||\n\t\t\t(annotations[`@${CommonAnnotationTerms.IsCalendarYearMonth}`] && \"yyyyMM\") ||\n\t\t\t(propertyType === \"Edm.Date\" && \"yyyy-MM-dd\") ||\n\t\t\tundefined) as string | undefined;\n\t},\n\n\tgetX: function (propertyPath: string, propertyType: string, annotations?: Record<string, unknown>): CompiledBindingToolkitExpression {\n\t\tconst pattern = annotations && MicroChartHelper.getCalendarPattern(propertyType, annotations);\n\t\tif (pattern && [\"Edm.Date\", \"Edm.String\"].some((type) => type === propertyType)) {\n\t\t\treturn compileExpression(\n\t\t\t\tformatResult(\n\t\t\t\t\t[pathInModel(propertyPath), constant(pattern), constant(propertyPath)],\n\t\t\t\t\t\"._formatters.ValueFormatter#formatStringDimension\"\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t},\n\tgetExpressionWithType(value: PrimitiveType, formatOptions?: { style: string }): CompiledBindingToolkitExpression | undefined {\n\t\tif (value && value.$target) {\n\t\t\tconst expression = formatWithTypeInformation(value.$target, getExpressionFromAnnotation(value));\n\t\t\texpression.formatOptions = {\n\t\t\t\t...expression.formatOptions,\n\t\t\t\t...formatOptions\n\t\t\t};\n\t\t\treturn compileExpression(expression);\n\t\t}\n\t},\n\tcalculateColorBinding(\n\t\tdataPoint: DataPoint,\n\t\tactualValueExpression: CompiledBindingToolkitExpression,\n\t\tcriticalityExpressionForMicrochart: string | undefined\n\t): string | undefined {\n\t\tlet colorBinding;\n\t\tif (dataPoint.Criticality || (!dataPoint.Criticality && !dataPoint.CriticalityCalculation)) {\n\t\t\tcolorBinding = criticalityExpressionForMicrochart;\n\t\t} else if (dataPoint.CriticalityCalculation) {\n\t\t\tconst criticalityCalculation = dataPoint.CriticalityCalculation;\n\t\t\tconst direction = criticalityCalculation?.ImprovementDirection;\n\t\t\tconst deviationRangeLowValue = criticalityCalculation?.DeviationRangeLowValue\n\t\t\t\t? compileExpression(getExpressionFromAnnotation(criticalityCalculation?.DeviationRangeLowValue))\n\t\t\t\t: 0;\n\t\t\tconst toleranceRangeLowValue = criticalityCalculation?.ToleranceRangeLowValue\n\t\t\t\t? compileExpression(getExpressionFromAnnotation(criticalityCalculation?.ToleranceRangeLowValue))\n\t\t\t\t: 0;\n\t\t\tconst acceptanceRangeLowValue = criticalityCalculation?.AcceptanceRangeLowValue\n\t\t\t\t? compileExpression(getExpressionFromAnnotation(criticalityCalculation?.AcceptanceRangeLowValue))\n\t\t\t\t: 0;\n\t\t\tconst acceptanceRangeHighValue =\n\t\t\t\tcriticalityCalculation?.AcceptanceRangeHighValue &&\n\t\t\t\tcompileExpression(getExpressionFromAnnotation(criticalityCalculation?.AcceptanceRangeHighValue));\n\t\t\tconst toleranceRangeHighValue =\n\t\t\t\tcriticalityCalculation?.ToleranceRangeHighValue &&\n\t\t\t\tcompileExpression(getExpressionFromAnnotation(criticalityCalculation?.ToleranceRangeHighValue));\n\t\t\tconst deviationRangeHighValue =\n\t\t\t\tcriticalityCalculation?.DeviationRangeHighValue &&\n\t\t\t\tcompileExpression(getExpressionFromAnnotation(criticalityCalculation?.DeviationRangeHighValue));\n\n\t\t\tcolorBinding = CommonHelper.getCriticalityCalculationBinding(\n\t\t\t\tdirection as string,\n\t\t\t\tactualValueExpression as string,\n\t\t\t\tdeviationRangeLowValue as string,\n\t\t\t\ttoleranceRangeLowValue as string,\n\t\t\t\tacceptanceRangeLowValue as string,\n\t\t\t\tacceptanceRangeHighValue as string,\n\t\t\t\ttoleranceRangeHighValue as string,\n\t\t\t\tdeviationRangeHighValue as string\n\t\t\t);\n\t\t}\n\t\treturn colorBinding;\n\t},\n\tasync getBulletMicroChartAggregations(\n\t\tdataPoint: DataPoint,\n\t\tcriticalityExpressionForMicrochart: string | undefined\n\t): Promise<Pick<$BulletMicroChartSettings, \"actual\" | \"thresholds\"> | undefined> {\n\t\tconst BulletMicroChartData = (await import(\"sap/suite/ui/microchart/BulletMicroChartData\")).default;\n\t\tconst actualValueExpression = compileExpression(getExpressionFromAnnotation(dataPoint.Value));\n\t\tconst thresholds: InstanceType<typeof BulletMicroChartData>[] = [];\n\t\tconst colorBinding = this.calculateColorBinding(dataPoint, actualValueExpression, criticalityExpressionForMicrochart);\n\t\tif (dataPoint.CriticalityCalculation) {\n\t\t\tconst criticalityCalculation = dataPoint.CriticalityCalculation;\n\t\t\tconst direction = criticalityCalculation?.ImprovementDirection;\n\t\t\t// thresholds\n\t\t\tif (!direction.includes(\"Minimize\") && criticalityCalculation?.DeviationRangeLowValue) {\n\t\t\t\tthresholds.push(\n\t\t\t\t\t<BulletMicroChartData\n\t\t\t\t\t\tvalue={compileExpression(getExpressionFromAnnotation(criticalityCalculation?.DeviationRangeLowValue))}\n\t\t\t\t\t\tcolor=\"Error\"\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t}\n\t\t\tif (!direction.includes(\"Minimize\") && criticalityCalculation?.ToleranceRangeLowValue) {\n\t\t\t\tthresholds.push(\n\t\t\t\t\t<BulletMicroChartData\n\t\t\t\t\t\tvalue={compileExpression(getExpressionFromAnnotation(criticalityCalculation?.ToleranceRangeLowValue))}\n\t\t\t\t\t\tcolor=\"Critical\"\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t}\n\t\t\tif (!direction.includes(\"Maximize\") && criticalityCalculation?.ToleranceRangeHighValue) {\n\t\t\t\tthresholds.push(\n\t\t\t\t\t<BulletMicroChartData\n\t\t\t\t\t\tvalue={compileExpression(getExpressionFromAnnotation(criticalityCalculation?.ToleranceRangeHighValue))}\n\t\t\t\t\t\tcolor=\"Critical\"\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t}\n\t\t\tif (!direction.includes(\"Maximize\") && criticalityCalculation?.DeviationRangeHighValue) {\n\t\t\t\tthresholds.push(\n\t\t\t\t\t<BulletMicroChartData\n\t\t\t\t\t\tvalue={compileExpression(getExpressionFromAnnotation(criticalityCalculation?.DeviationRangeHighValue))}\n\t\t\t\t\t\tcolor=\"Error\"\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\tconst actual: InstanceType<typeof BulletMicroChartData> = (\n\t\t\t<BulletMicroChartData value={actualValueExpression} color={colorBinding} />\n\t\t);\n\n\t\treturn { actual, thresholds };\n\t},\n\n\tasync getStackMicroChartAggregations(\n\t\tdataPoint: DataPoint,\n\t\tmeasureDataPath: DataModelObjectPath<Measure> | undefined,\n\t\tcriticalityExpressionForMicrochart: string | undefined\n\t): Promise<Pick<$StackedBarMicroChartSettings, \"bars\"> | undefined> {\n\t\tconst StackedBarMicroChartBar = (await import(\"sap/suite/ui/microchart/StackedBarMicroChartBar\")).default;\n\t\tconst value = this.getExpressionWithType(dataPoint.Value);\n\t\tconst valueColor = criticalityExpressionForMicrochart;\n\t\tconst displayValue = (measureDataPath?.targetObject?.annotations?.Common as PropertyAnnotations_Common)?.Text\n\t\t\t? this.getExpressionWithType(\n\t\t\t\t\t(measureDataPath?.targetObject?.annotations?.Common as PropertyAnnotations_Common)\n\t\t\t\t\t\t?.Text as unknown as PathAnnotationExpression<string>\n\t\t\t  )\n\t\t\t: undefined;\n\t\treturn {\n\t\t\tbars: <StackedBarMicroChartBar value={value} displayValue={displayValue} valueColor={valueColor} />\n\t\t};\n\t},\n\n\tasync getHarveyMicroChartAggregations(\n\t\tdataPoint: DataPoint,\n\t\tcriticalityExpressionForMicrochart: string | undefined\n\t): Promise<Pick<$HarveyBallMicroChartSettings, \"items\"> | undefined> {\n\t\tconst HarveyBallMicroChartItem = (await import(\"sap/suite/ui/microchart/HarveyBallMicroChartItem\")).default;\n\t\tconst fractionLabel = this.getExpressionWithType(dataPoint.Value, { style: \"short\" });\n\t\tconst fractionValue = this.getExpressionWithType(dataPoint.Value);\n\t\tconst colorValue = criticalityExpressionForMicrochart;\n\t\treturn {\n\t\t\titems: (\n\t\t\t\t<HarveyBallMicroChartItem formattedLabel={true} fractionLabel={fractionLabel} fraction={fractionValue} color={colorValue} />\n\t\t\t)\n\t\t};\n\t},\n\n\tasync getComparisonMicroChartAggregations(\n\t\tdataPoint: DataPoint,\n\t\tcriticalityExpressionForMicrochart: string | undefined,\n\t\tchart: Chart\n\t): Promise<Pick<$ComparisonMicroChartSettings, \"data\">> {\n\t\tconst ComparisonMicroChartData = (await import(\"sap/suite/ui/microchart/ComparisonMicroChartData\")).default;\n\t\tconst actualValueExpression = compileExpression(getExpressionFromAnnotation(dataPoint.Value));\n\t\tconst displayValue = this.getExpressionWithType(dataPoint.Value, { style: \"short\" });\n\t\tconst commonTextAnnotation = chart.Dimensions[0].$target?.annotations.Common?.Text;\n\t\tconst titleExpression = commonTextAnnotation\n\t\t\t? compileExpression(getExpressionFromAnnotation(commonTextAnnotation))\n\t\t\t: compileExpression(pathInModel(chart.Dimensions[0].value));\n\t\treturn (\n\t\t\t<ComparisonMicroChartData\n\t\t\t\tvalue={actualValueExpression}\n\t\t\t\tcolor={criticalityExpressionForMicrochart}\n\t\t\t\ttitle={titleExpression}\n\t\t\t\tdisplayValue={displayValue}\n\t\t\t/>\n\t\t);\n\t},\n\n\tasync getColumnMicroChartAggregations(\n\t\tdataPoint: DataPoint,\n\t\tcriticalityExpressionForMicrochart: string | undefined,\n\t\tshowOnlyChart?: boolean\n\t): Promise<MicroChartAggregation> {\n\t\tconst ColumnMicroChartData = (await import(\"sap/suite/ui/microchart/ColumnMicroChartData\")).default;\n\t\tconst ColumnMicroChartLabel = (await import(\"sap/suite/ui/microchart/ColumnMicroChartLabel\")).default;\n\t\tconst columnChartAggregations: $ColumnMicroChartSettings = {};\n\t\tconst actualValueExpression = compileExpression(getExpressionFromAnnotation(dataPoint.Value));\n\t\tconst colorBinding = this.calculateColorBinding(dataPoint, actualValueExpression, criticalityExpressionForMicrochart);\n\t\tcolumnChartAggregations.columns = <ColumnMicroChartData value={actualValueExpression} color={colorBinding} />;\n\t\tif (!showOnlyChart) {\n\t\t\tcolumnChartAggregations.leftBottomLabel = <ColumnMicroChartLabel />;\n\t\t\tcolumnChartAggregations.leftTopLabel = <ColumnMicroChartLabel />;\n\t\t\tcolumnChartAggregations.rightBottomLabel = <ColumnMicroChartLabel />;\n\t\t\tcolumnChartAggregations.rightTopLabel = <ColumnMicroChartLabel />;\n\t\t}\n\t\treturn columnChartAggregations;\n\t},\n\n\tasync getLineMicroChartAggragations(\n\t\tmicroChartDataModelObjectPath: DataModelObjectPath<Chart | PresentationVariant> | undefined,\n\t\tchartTarget: Chart,\n\t\ttargetNavigationPath: Context\n\t): Promise<Pick<$LineMicroChartSettings, \"lines\">> {\n\t\tconst LineMicroChartLine = (await import(\"sap/suite/ui/microchart/LineMicroChartLine\")).default;\n\t\tconst LineMicroChartPoint = (await import(\"sap/suite/ui/microchart/LineMicroChartPoint\")).default;\n\t\tconst dimensionDataPath = enhanceDataModelPath<DataModelProperty>(\n\t\t\tmicroChartDataModelObjectPath as DataModelObjectPath<Chart | PresentationVariant>,\n\t\t\tchartTarget.Dimensions[0].value\n\t\t);\n\t\tconst measures = chartTarget.Measures;\n\t\tconst lines = [];\n\n\t\tfor (let i = 0; i < measures.length; i++) {\n\t\t\tconst DataPointPath = enhanceDataModelPath<DataPointType>(\n\t\t\t\tmicroChartDataModelObjectPath as DataModelObjectPath<unknown>,\n\t\t\t\tchartTarget?.MeasureAttributes[i]?.DataPoint?.value\n\t\t\t);\n\t\t\tconst measureDataPath = enhanceDataModelPath<Measure>(\n\t\t\t\tmicroChartDataModelObjectPath as DataModelObjectPath<unknown>,\n\t\t\t\tchartTarget.Measures[i].value\n\t\t\t);\n\n\t\t\tconst points = MicroChartHelper.getAggregationForMicrochart(\n\t\t\t\t\"LinePoints\",\n\t\t\t\ttargetNavigationPath?.getObject(),\n\t\t\t\tDataPointPath,\n\t\t\t\ttargetNavigationPath?.getObject(\"@sapui.name\"),\n\t\t\t\tchartTarget.Dimensions[0],\n\t\t\t\tmeasureDataPath,\n\t\t\t\t(microChartDataModelObjectPath?.targetObject as PresentationVariant)?.SortOrder as unknown as SortOrderType[],\n\t\t\t\tundefined,\n\t\t\t\ttrue\n\t\t\t) as `{${string}}`;\n\n\t\t\tconst xData = this.getXData(dimensionDataPath, microChartDataModelObjectPath);\n\t\t\tconst yData = compileExpression(getExpressionFromAnnotation(DataPointPath.targetObject?.Value));\n\n\t\t\tlines.push(\n\t\t\t\t<LineMicroChartLine points={points}>\n\t\t\t\t\t{{ points: <LineMicroChartPoint x={xData} y={yData}></LineMicroChartPoint> }}\n\t\t\t\t</LineMicroChartLine>\n\t\t\t);\n\t\t}\n\n\t\treturn { lines: lines };\n\t},\n\n\tgetXData(\n\t\tdimensionDataPath: DataModelObjectPath<DataModelProperty>,\n\t\tmicroChartDataModelObjectPath: DataModelObjectPath<Chart | PresentationVariant> | undefined\n\t): CompiledBindingToolkitExpression {\n\t\tlet xData;\n\t\tconst propertyType = dimensionDataPath?.targetObject?.type as string;\n\t\tconst propAnnotations = dimensionDataPath.targetObject?.annotations;\n\t\tif (\n\t\t\tpropertyType === \"Edm.Date\" ||\n\t\t\t(dimensionDataPath.targetObject?.type === \"Edm.String\" &&\n\t\t\t\tMicroChartHelper.getCalendarPattern(propertyType, dimensionDataPath.targetObject?.annotations, true))\n\t\t) {\n\t\t\tconst propertyPath = dimensionDataPath?.targetObject?.name;\n\t\t\tconst pattern = propAnnotations && MicroChartHelper.getCalendarPattern(propertyType, propAnnotations, true);\n\t\t\tif (pattern && [\"Edm.Date\", \"Edm.String\"].some((type) => type === propertyType)) {\n\t\t\t\txData = compileExpression(\n\t\t\t\t\tformatResult([pathInModel(propertyPath), pattern, propertyPath], valueFormatters.formatStringDimension)\n\t\t\t\t);\n\t\t\t}\n\t\t} else {\n\t\t\tdimensionDataPath.contextLocation = microChartDataModelObjectPath;\n\t\t\txData = getValueBinding(dimensionDataPath, {});\n\t\t}\n\t\treturn xData;\n\t},\n\tasync getAreaMicroChartAggregations(\n\t\tchartTarget: Chart,\n\t\tmicroChartDataModelObjectPath: DataModelObjectPath<PresentationVariant | Chart>,\n\t\ttargetNavigationPath: Context,\n\t\tshowOnlyChart?: boolean\n\t): Promise<\n\t\tPick<\n\t\t\t$AreaMicroChartSettings,\n\t\t\t| \"chart\"\n\t\t\t| \"target\"\n\t\t\t| \"firstXLabel\"\n\t\t\t| \"firstYLabel\"\n\t\t\t| \"lastXLabel\"\n\t\t\t| \"lastYLabel\"\n\t\t\t| \"minThreshold\"\n\t\t\t| \"maxThreshold\"\n\t\t\t| \"innerMinThreshold\"\n\t\t\t| \"innerMaxThreshold\"\n\t\t>\n\t> {\n\t\tconst AreaMicroChartItem = (await import(\"sap/suite/ui/microchart/AreaMicroChartItem\")).default;\n\t\tconst AreaMicroChartPoint = (await import(\"sap/suite/ui/microchart/AreaMicroChartPoint\")).default;\n\t\tconst AreaMicroChartLabel = (await import(\"sap/suite/ui/microchart/AreaMicroChartLabel\")).default;\n\t\tconst dataPoint = chartTarget?.MeasureAttributes[0]?.DataPoint?.$target as DataPoint;\n\t\tconst measureDataPath = enhanceDataModelPath<Measure>(microChartDataModelObjectPath, chartTarget.Measures[0].value);\n\t\tconst dimensionDataPath = enhanceDataModelPath<DataModelProperty>(microChartDataModelObjectPath, chartTarget.Dimensions[0].value);\n\t\tconst DataPointPath = enhanceDataModelPath<DataPointType>(\n\t\t\tmicroChartDataModelObjectPath as DataModelObjectPath<unknown>,\n\t\t\tchartTarget?.MeasureAttributes[0]?.DataPoint?.value\n\t\t);\n\t\tconst targetNavigationDataModelObject: DataModelObjectPath<EntitySet | NavigationProperty> =\n\t\t\tMetaModelConverter.getInvolvedDataModelObjects(targetNavigationPath);\n\t\tconst getAreaMicroChartItem = (\n\t\t\ty: PropertyAnnotationValue<PrimitiveType>,\n\t\t\tcolor?: string,\n\t\t\tisChartAggregation?: boolean\n\t\t): InstanceType<typeof AreaMicroChartItem> => {\n\t\t\tlet points;\n\t\t\tif (isChartAggregation) {\n\t\t\t\tpoints = MicroChartHelper.getAggregationForMicrochart(\n\t\t\t\t\t\"Points\",\n\t\t\t\t\ttargetNavigationPath?.getObject(),\n\t\t\t\t\tDataPointPath,\n\t\t\t\t\ttargetNavigationPath?.getObject(\"@sapui.name\"),\n\t\t\t\t\tchartTarget.Dimensions[0],\n\t\t\t\t\tmeasureDataPath,\n\t\t\t\t\t(microChartDataModelObjectPath?.targetObject as PresentationVariant)?.SortOrder as unknown as\n\t\t\t\t\t\t| SortOrderType[]\n\t\t\t\t\t\t| undefined,\n\t\t\t\t\t\"\",\n\t\t\t\t\ttrue\n\t\t\t\t) as `{${string}}`;\n\t\t\t} else {\n\t\t\t\tpoints = {\n\t\t\t\t\tpath:\n\t\t\t\t\t\t(targetNavigationDataModelObject.targetObject?._type === \"EntitySet\" ? \"/\" : \"\") +\n\t\t\t\t\t\ttargetNavigationDataModelObject.targetObject?.name\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn (\n\t\t\t\t<AreaMicroChartItem color={color} points={points}>\n\t\t\t\t\t{{\n\t\t\t\t\t\tpoints: <AreaMicroChartPoint x={x} y={compileExpression(getExpressionFromAnnotation(y))}></AreaMicroChartPoint>\n\t\t\t\t\t}}\n\t\t\t\t</AreaMicroChartItem>\n\t\t\t);\n\t\t};\n\t\tconst aggregation: $AreaMicroChartSettings = {};\n\t\tconst x = this.getXData(dimensionDataPath, microChartDataModelObjectPath);\n\t\taggregation.chart = getAreaMicroChartItem(dataPoint.Value, undefined, true);\n\t\taggregation.target = getAreaMicroChartItem(dataPoint.TargetValue);\n\t\tif (!showOnlyChart) {\n\t\t\taggregation.firstXLabel = <AreaMicroChartLabel />;\n\t\t\taggregation.firstYLabel = <AreaMicroChartLabel />;\n\t\t\taggregation.lastXLabel = <AreaMicroChartLabel />;\n\t\t\taggregation.lastYLabel = <AreaMicroChartLabel />;\n\t\t}\n\t\tconst improvementDirection = DataPointPath?.targetObject?.CriticalityCalculation?.ImprovementDirection;\n\t\tif (improvementDirection === \"UI.ImprovementDirectionType/Minimize\") {\n\t\t\taggregation.minThreshold = getAreaMicroChartItem(dataPoint?.CriticalityCalculation?.ToleranceRangeHighValue, \"Good\");\n\t\t\taggregation.maxThreshold = getAreaMicroChartItem(dataPoint?.CriticalityCalculation?.DeviationRangeHighValue, \"Error\");\n\t\t} else if (improvementDirection === \"UI.ImprovementDirectionType/Maximize\") {\n\t\t\taggregation.minThreshold = getAreaMicroChartItem(dataPoint?.CriticalityCalculation?.DeviationRangeLowValue, \"Error\");\n\t\t\taggregation.maxThreshold = getAreaMicroChartItem(dataPoint?.CriticalityCalculation?.ToleranceRangeLowValue, \"Good\");\n\t\t} else if (improvementDirection === \"UI.ImprovementDirectionType/Target\") {\n\t\t\taggregation.minThreshold = getAreaMicroChartItem(dataPoint?.CriticalityCalculation?.DeviationRangeLowValue, \"Error\");\n\t\t\taggregation.maxThreshold = getAreaMicroChartItem(dataPoint?.CriticalityCalculation?.DeviationRangeHighValue, \"Error\");\n\t\t\taggregation.innerMinThreshold = getAreaMicroChartItem(dataPoint?.CriticalityCalculation?.ToleranceRangeLowValue, \"Good\");\n\t\t\taggregation.innerMaxThreshold = getAreaMicroChartItem(dataPoint?.CriticalityCalculation?.ToleranceRangeHighValue, \"Good\");\n\t\t}\n\t\treturn aggregation;\n\t},\n\n\tgetBulletMicroChartProperties(\n\t\tmicroChartProperties: MicroChartSettings,\n\t\tdataPoint: DataPoint\n\t): Partial<PropertiesOf<MicroChartSettings>> {\n\t\t(microChartProperties as $BulletMicroChartSettings).targetValue = dataPoint.TargetValue\n\t\t\t? compileExpression(getExpressionFromAnnotation(dataPoint.TargetValue))\n\t\t\t: undefined;\n\t\t(microChartProperties as $BulletMicroChartSettings).forecastValue = dataPoint.ForecastValue\n\t\t\t? compileExpression(getExpressionFromAnnotation(dataPoint.ForecastValue))\n\t\t\t: undefined;\n\t\t(microChartProperties as $BulletMicroChartSettings).maxValue = dataPoint.MaximumValue\n\t\t\t? compileExpression(constant(dataPoint.MaximumValue?.valueOf()))\n\t\t\t: undefined;\n\t\t(microChartProperties as $BulletMicroChartSettings).minValue = dataPoint.MinimumValue\n\t\t\t? compileExpression(constant(dataPoint.MinimumValue?.valueOf()))\n\t\t\t: undefined;\n\t\t(microChartProperties as $BulletMicroChartSettings).actualValueLabel = dataPoint.Value\n\t\t\t? MicroChartHelper.getExpressionWithType(dataPoint.Value, { style: \"short\" })\n\t\t\t: undefined;\n\t\t(microChartProperties as $BulletMicroChartSettings).targetValueLabel = dataPoint.TargetValue\n\t\t\t? MicroChartHelper.getExpressionWithType(dataPoint.TargetValue, { style: \"short\" })\n\t\t\t: undefined;\n\t\t(microChartProperties as $BulletMicroChartSettings).showDeltaValue =\n\t\t\tdataPoint.Visualization && dataPoint.Visualization === VisualizationType.DeltaBulletChart;\n\t\t(microChartProperties as $BulletMicroChartSettings).mode = (microChartProperties as $BulletMicroChartSettings).showDeltaValue\n\t\t\t? \"Delta\"\n\t\t\t: undefined;\n\n\t\treturn microChartProperties;\n\t},\n\n\tgetRadialMicroChartProperties(\n\t\tmicroChartProperties: MicroChartSettings,\n\t\tdataPoint: DataPoint\n\t): Partial<PropertiesOf<MicroChartSettings>> {\n\t\t(microChartProperties as $RadialMicroChartSettings).total = dataPoint.TargetValue\n\t\t\t? compileExpression(getExpressionFromAnnotation(dataPoint.TargetValue))\n\t\t\t: 100;\n\t\tconst value = compileExpression(getExpressionFromAnnotation(dataPoint.Value));\n\t\t(microChartProperties as $RadialMicroChartSettings).fraction = value;\n\t\t(microChartProperties as $RadialMicroChartSettings).percentage = !dataPoint.TargetValue ? value : undefined;\n\n\t\tconst colorExpression = dataPoint.Criticality ? buildExpressionForCriticalityColorMicroChart(dataPoint) : undefined;\n\n\t\t(microChartProperties as $RadialMicroChartSettings).valueColor = MicroChartHelper.calculateColorBinding(\n\t\t\tdataPoint,\n\t\t\tvalue,\n\t\t\tcolorExpression\n\t\t);\n\t\treturn microChartProperties;\n\t},\n\n\tgetHarveyMicroChartProperties(\n\t\tmicroChartProperties: MicroChartSettings,\n\t\tdataPoint: DataPoint\n\t): Partial<PropertiesOf<MicroChartSettings>> {\n\t\t(microChartProperties as $HarveyBallMicroChartSettings).formattedLabel = true;\n\t\t(microChartProperties as $HarveyBallMicroChartSettings).totalLabel = MicroChartHelper.getExpressionWithType(\n\t\t\tdataPoint.MaximumValue,\n\t\t\t{\n\t\t\t\tstyle: \"short\"\n\t\t\t}\n\t\t);\n\t\t(microChartProperties as $HarveyBallMicroChartSettings).total = MicroChartHelper.getExpressionWithType(dataPoint.MaximumValue);\n\t\t(microChartProperties as $HarveyBallMicroChartSettings).colorPalette = MicroChartHelper.getColorPaletteForMicroChart(dataPoint);\n\t\treturn microChartProperties;\n\t}\n};\n\nexport default MicroChartHelper;\n"],"mappings":"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","ignoreList":[],"file":"MicroChartHelper-dbg.js"}